#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


struct _GLF_struct_18 {
 ivec2 _f0;
 uvec3 _f1;
 uint workgroup_size;
 ivec3 _f2;
 ivec4 _f3;
 bool _f4;
} ;

struct _GLF_struct_19 {
 bool _f0;
 vec3 _f1;
 mat3x4 _f2;
 mat3x2 _f3;
 mat3 _f4;
 _GLF_struct_18 _f5;
 mat2 _f6;
} ;

struct _GLF_struct_16 {
 mat3x4 _f0;
 mat4 _f1;
 mat2x4 _f2;
 bool _f3;
} ;

struct _GLF_struct_17 {
 _GLF_struct_16 _f0;
} ;

struct _GLF_struct_14 {
 ivec4 _f0;
 vec2 _f1;
 mat2x4 _f2;
} ;

struct _GLF_struct_13 {
 mat4 _f0;
 ivec3 _f1;
 vec3 _f2;
} ;

struct _GLF_struct_12 {
 vec4 _f0;
 mat4x2 _f1;
 mat3x2 _f2;
} ;

struct _GLF_struct_11 {
 vec4 _f0;
} ;

struct _GLF_struct_10 {
 mat2x4 _f0;
 vec2 _f1;
 int _f2;
 vec2 _f3;
 mat4 _f4;
 ivec2 _f5;
 int _f6;
} ;

struct _GLF_struct_15 {
 _GLF_struct_10 _f0;
 _GLF_struct_11 _f1;
 _GLF_struct_12 _f2;
 _GLF_struct_13 _f3;
 _GLF_struct_14 _f4;
} ;

struct _GLF_struct_20 {
 _GLF_struct_15 _f0;
 _GLF_struct_17 _f1;
 mat2 _f2;
 ivec4 _f3;
 _GLF_struct_19 _f4;
 uvec4 _f5;
 mat4x3 _f6;
} ;

struct _GLF_struct_7 {
 mat3x4 _f0;
 bool _f1;
 bvec4 _f2;
 vec2 _f3;
 bvec3 _f4;
 mat3x2 _f5;
} ;

struct _GLF_struct_6 {
 ivec3 _f0;
 mat4x3 _f1;
 ivec4 _f2;
 mat2x3 _f3;
 mat3 _f4;
 mat2x3 _f5;
 mat2 _f6;
} ;

struct _GLF_struct_5 {
 mat3 _f0;
} ;

struct _GLF_struct_4 {
 mat4 _f0;
} ;

struct _GLF_struct_3 {
 uvec4 _f0;
 vec2 _f1;
 uvec2 _f2;
 uvec2 _f3;
 ivec4 _f4;
 mat2x3 _f5;
 uint _f6;
} ;

struct _GLF_struct_8 {
 _GLF_struct_3 _f0;
 _GLF_struct_4 _f1;
 _GLF_struct_5 _f2;
 _GLF_struct_6 _f3;
 _GLF_struct_7 _f4;
} ;

struct _GLF_struct_2 {
 mat3x2 _f0;
 mat2x4 _f1;
} ;

struct _GLF_struct_0 {
 mat4 _f0;
 mat4 _f1;
 bvec4 _f2;
} ;

struct _GLF_struct_1 {
 _GLF_struct_0 _f0;
} ;

struct _GLF_struct_9 {
 _GLF_struct_1 _f0;
 _GLF_struct_2 _f1;
 mat2 _f2;
 _GLF_struct_8 _f3;
 uint workgroup_base;
} ;

layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
#extension GL_EXT_maximal_reconvergence : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || false))))
    return;
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch))) / vec2(_GLF_IDENTITY(_GLF_IDENTITY(1.0, 0.0 + (1.0)), (1.0) - _GLF_IDENTITY(dot(vec2(0.0, _GLF_ZERO(0.0, injectionSwitch.x)), vec2(1.0, 1.0)), dot(vec2(0.0, _GLF_ZERO(0.0, injectionSwitch.x)), vec2(_GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0)))), 1.0)).x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_DEAD(false)))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   return;
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), _GLF_IDENTITY((_GLF_DEAD(false)) || false, ((_GLF_DEAD(false)) || false) || false)))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   return;
  }
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(false))
  barrier();
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
  barrier();
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), false || (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), false || _GLF_IDENTITY((_GLF_IDENTITY(false, ! (! (false)))), _GLF_IDENTITY(bool(bvec3((_GLF_IDENTITY(false, ! (! (false)))), true, false)), ! (! (bool(bvec3((_GLF_IDENTITY(false, ! (! (false)))), true, false))))))))), false)))))
      barrier();
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    return;
   barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (false))))))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, true && (false)))))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 uint num_workgroup = gl_NumWorkGroups.x;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
     if(_GLF_DEAD(false))
      barrier();
    }
   barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
  }
 _GLF_struct_20 _GLF_struct_replacement_20 = _GLF_struct_20(_GLF_struct_15(_GLF_struct_10(mat2x4(1.0), _GLF_IDENTITY(vec2(1.0), _GLF_IDENTITY(vec2(0.0, 0.0) + (_GLF_IDENTITY(vec2(1.0), mix(vec2(_GLF_FUZZED(-0.7), (vec2(1.0))[1]), vec2((vec2(1.0))[0], _GLF_FUZZED(573.242)), bvec2(true, false)))), min(vec2(0.0, 0.0) + (_GLF_IDENTITY(vec2(1.0), mix(vec2(_GLF_FUZZED(-0.7), (vec2(1.0))[1]), vec2((vec2(1.0))[0], _GLF_FUZZED(573.242)), bvec2(true, false)))), vec2(0.0, 0.0) + (_GLF_IDENTITY(vec2(1.0), mix(vec2(_GLF_FUZZED(-0.7), (vec2(1.0))[1]), vec2((vec2(1.0))[0], _GLF_FUZZED(573.242)), bvec2(true, false))))))), 1, vec2(1.0), mat4(1.0), ivec2(1), 1), _GLF_struct_11(vec4(1.0)), _GLF_struct_12(vec4(1.0), mat4x2(1.0), mat3x2(1.0)), _GLF_struct_13(mat4(1.0), ivec3(1), vec3(1.0)), _GLF_struct_14(ivec4(1), vec2(1.0), mat2x4(1.0))), _GLF_struct_17(_GLF_struct_16(mat3x4(1.0), mat4(1.0), mat2x4(1.0), true)), mat2(_GLF_IDENTITY(1.0, _GLF_IDENTITY(mix(float(1.0), float(_GLF_FUZZED(47.62)), bool(false)), clamp(mix(float(1.0), float(_GLF_FUZZED(47.62)), bool(false)), _GLF_IDENTITY(mix(float(1.0), float(_GLF_FUZZED(47.62)), bool(false)), (false ? _GLF_FUZZED(-9147.5305) : mix(float(1.0), float(_GLF_FUZZED(47.62)), bool(false)))), mix(float(1.0), float(_GLF_FUZZED(47.62)), bool(false)))))), ivec4(1), _GLF_struct_19(true, vec3(1.0), mat3x4(1.0), mat3x2(1.0), mat3(1.0), _GLF_struct_18(ivec2(1), uvec3(1u), gl_WorkGroupSize.x, ivec3(1), ivec4(_GLF_IDENTITY(1, (1) | (1))), true), _GLF_IDENTITY(mat2(1.0), _GLF_IDENTITY(mat2(1.0) * _GLF_IDENTITY((mat2(1.0)), (false ? _GLF_FUZZED(mat2(7.5, 373.745, 287.985, 596.165)) : _GLF_IDENTITY((mat2(1.0)), (false ? _GLF_FUZZED(mat2(0.3, -957.909, 1534.7719, 0.4)) : _GLF_IDENTITY((mat2(1.0)), _GLF_IDENTITY(mat2(mat3x2((mat2(1.0)))), mat2(mat4(mat2(mat3x2((mat2(1.0)))))))))))), mat2(0.0, 0.0, 0.0, 0.0) + (mat2(1.0) * _GLF_IDENTITY((mat2(1.0)), (false ? _GLF_FUZZED(mat2(7.5, 373.745, 287.985, 596.165)) : _GLF_IDENTITY((mat2(1.0)), (false ? _GLF_FUZZED(mat2(0.3, -957.909, 1534.7719, 0.4)) : _GLF_IDENTITY((mat2(1.0)), _GLF_IDENTITY(mat2(mat3x2((mat2(1.0)))), mat2(mat4(mat2(mat3x2((mat2(1.0)))))))))))))))), uvec4(_GLF_IDENTITY(1u, min(1u, 1u))), mat4x3(_GLF_IDENTITY(_GLF_IDENTITY(1.0, min(1.0, 1.0)), _GLF_IDENTITY((true ? 1.0 : _GLF_FUZZED(5.1)), float(vec2(_GLF_IDENTITY((true ? 1.0 : _GLF_FUZZED(_GLF_IDENTITY(5.1, clamp(5.1, 5.1, 5.1)))), float(mat2x4((true ? 1.0 : _GLF_FUZZED(5.1)), 1.0, 0.0, _GLF_IDENTITY(1.0, (1.0) / 1.0), 1.0, 1.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x)))), 1.0))))));
 uint workgroup_id = _GLF_IDENTITY(gl_WorkGroupID.x, (_GLF_IDENTITY(gl_WorkGroupID, uvec3(uvec3(_GLF_IDENTITY(gl_WorkGroupID, min(gl_WorkGroupID, gl_WorkGroupID))))).x) << 0u);
 _GLF_struct_9 _GLF_struct_replacement_9 = _GLF_struct_9(_GLF_struct_1(_GLF_struct_0(mat4(1.0), mat4(1.0), bvec4(true))), _GLF_struct_2(mat3x2(1.0), mat2x4(_GLF_IDENTITY(1.0, (1.0) + 0.0))), mat2(1.0), _GLF_struct_8(_GLF_struct_3(uvec4(1u), vec2(1.0), uvec2(1u), uvec2(1u), ivec4(1), mat2x3(1.0), 1u), _GLF_struct_4(_GLF_IDENTITY(_GLF_IDENTITY(mat4(1.0), mat4(1.0) * (mat4(1.0))), (_GLF_TRUE(_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, ! (! (true)))))), (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), false || ((injectionSwitch.x < injectionSwitch.y)))), true && (_GLF_IDENTITY(! (_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), false || ((injectionSwitch.x < injectionSwitch.y)))), true && (! (_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), false || ((injectionSwitch.x < injectionSwitch.y)))))))))) && true))) ? _GLF_IDENTITY(mat4(1.0), mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0) + (mat4(1.0))) : _GLF_FUZZED(mat4(_GLF_IDENTITY(-2.0, (_GLF_IDENTITY(-2.0, _GLF_IDENTITY((-2.0), 0.0 + ((-2.0))) / 1.0)) - 0.0), _GLF_IDENTITY(1.1, clamp(1.1, 1.1, 1.1)), -71.54, 273.485, 788.075, -7.4, -368.896, -2.3, _GLF_IDENTITY(496.339, min(496.339, 496.339)), -150.284, 86.22, -525.051, -66.92, _GLF_IDENTITY(-6.9, _GLF_IDENTITY(_GLF_IDENTITY((-6.9), mix(float(_GLF_FUZZED(-20.01)), float(_GLF_IDENTITY((-6.9), clamp((-6.9), _GLF_IDENTITY((-6.9), _GLF_IDENTITY(((-6.9)) - 0.0, max(((-6.9)) - 0.0, ((-6.9)) - 0.0))), _GLF_IDENTITY((-6.9), (false ? _GLF_FUZZED(-539.479) : (-6.9)))))), bool(true))) + 0.0, (false ? _GLF_FUZZED(distance(_GLF_IDENTITY(596.580, (true ? _GLF_IDENTITY(596.580, clamp(_GLF_IDENTITY(596.580, mix(float(596.580), float(_GLF_FUZZED(-2553.0400)), bool(false))), 596.580, 596.580)) : _GLF_FUZZED(479.577))), -22.44)) : (-6.9) + 0.0))), -2717.5839, 5073.6610))))), _GLF_struct_5(mat3(1.0)), _GLF_struct_6(_GLF_IDENTITY(ivec3(1), (false ? _GLF_FUZZED(max(_GLF_IDENTITY(ivec3(50846, 94211, -18634), (_GLF_IDENTITY(ivec3(50846, 94211, -18634), (ivec3(50846, 94211, -18634)) * ivec3(1, 1, 1))) | (ivec3(50846, 94211, -18634))), 8677)) : _GLF_IDENTITY(ivec3(1), ivec3(ivec3(ivec3(1)))))), mat4x3(1.0), ivec4(1), mat2x3(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0))), mat3(_GLF_IDENTITY(1.0, _GLF_IDENTITY(min(_GLF_IDENTITY(_GLF_IDENTITY(1.0, 0.0 + (_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED((- -5.5))), float(1.0), bool(true))))), (_GLF_IDENTITY(true, bool(bvec2(true, false))) ? _GLF_IDENTITY(1.0, 0.0 + _GLF_IDENTITY((1.0), mix(float(_GLF_IDENTITY(_GLF_IDENTITY((1.0), 1.0 * ((1.0))), (false ? _GLF_FUZZED(-974.401) : (_GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, float(mat2(1.0, 1.0, 1.0, 1.0))), 1.0)))))), float(_GLF_FUZZED((_GLF_IDENTITY(4.9, float(_GLF_IDENTITY(mat3(4.9, abs(0.0), 1.0, sqrt(1.0), round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), 0.0, _GLF_ZERO(0.0, injectionSwitch.x), sin(0.0), 0.0), mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0) + (mat3(4.9, abs(0.0), 1.0, sqrt(1.0), round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), 0.0, _GLF_ZERO(0.0, injectionSwitch.x), sin(0.0), 0.0))))) - vec3(7913.2738, 16.97, -796.964).p))), bool(false)))) : _GLF_FUZZED(84.21))), 1.0), _GLF_IDENTITY(_GLF_IDENTITY(float(mat4x2(min(_GLF_IDENTITY(_GLF_IDENTITY(1.0, 0.0 + (_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED((- -5.5))), float(1.0), _GLF_IDENTITY(bool(true), false || (_GLF_IDENTITY(bool(true), bool(bvec4(bool(true), false, false, true))))))))), (true ? _GLF_IDENTITY(1.0, 0.0 + (1.0)) : _GLF_FUZZED(84.21))), 1.0), _GLF_IDENTITY(_GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0)), _GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0)), min(dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0)), dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0))))), min(_GLF_IDENTITY(_GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0)), _GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0)), min(dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0)), dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0))))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0)), _GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0)), min(dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0)), dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0))))), (false ? _GLF_FUZZED(-3.7) : _GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0)), _GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0)), min(dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0)), dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0))))))), _GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0)), _GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0)), min(dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0)), dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0))))), _GLF_IDENTITY(_GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0)), _GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0)), min(dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0)), dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0))))), (_GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0)), _GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0)), min(dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0)), dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0)))))) - 0.0))), _GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0)), _GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0)), min(dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0)), dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0))))))), 1.0, abs(1.0), _GLF_IDENTITY(determinant(_GLF_IDENTITY(mat2(_GLF_IDENTITY(1.0, min(1.0, 1.0)), 1.0, 0.0, 1.0), transpose(transpose(mat2(_GLF_IDENTITY(1.0, min(1.0, 1.0)), 1.0, 0.0, 1.0))))), 1.0 * (_GLF_IDENTITY(determinant(mat2(_GLF_IDENTITY(1.0, min(1.0, 1.0)), 1.0, 0.0, 1.0)), (true ? determinant(mat2(_GLF_IDENTITY(1.0, min(1.0, 1.0)), 1.0, 0.0, 1.0)) : _GLF_FUZZED(-3908.2007))))), 1.0, 0.0, 1.0)), (_GLF_IDENTITY(float(mat4x2(min(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1.0, 0.0 + (_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED((- -5.5))), float(1.0), bool(true))))), (true ? _GLF_IDENTITY(1.0, 0.0 + (1.0)) : _GLF_FUZZED(84.21))), float(_GLF_IDENTITY(mat4x3(_GLF_IDENTITY(_GLF_IDENTITY(1.0, 0.0 + (_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED((- -5.5))), float(1.0), bool(true))))), (true ? _GLF_IDENTITY(1.0, 0.0 + (1.0)) : _GLF_FUZZED(84.21))), 1.0, round(length(normalize(exp(vec4(0.0, 0.0, 0.0, 0.0))))), 0.0, 1.0, 1.0, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), 0.0, 0.0, round(length(_GLF_IDENTITY(normalize(1.0), float(vec2(_GLF_IDENTITY(normalize(1.0), mix(float(_GLF_FUZZED(7692.6050)), float(normalize(1.0)), bool(true))), exp(0.0)))))), 0.0, 1.0), (false ? _GLF_FUZZED(mat4x3(-4403.3126, -331.678, -312.480, -32.11, 460.526, 11.73, 851.141, -37.17, 39.66, -3279.8323, 5.7, 1.7)) : mat4x3(_GLF_IDENTITY(_GLF_IDENTITY(1.0, 0.0 + (_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED((- -5.5))), float(1.0), bool(true))))), (true ? _GLF_IDENTITY(1.0, 0.0 + (1.0)) : _GLF_FUZZED(84.21))), 1.0, round(length(normalize(exp(vec4(0.0, 0.0, 0.0, 0.0))))), _GLF_IDENTITY(0.0, float(mat2(0.0, 1.0, round(length(normalize(vec3(1.0, 1.0, 1.0)))), 0.0))), 1.0, 1.0, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), 0.0, 0.0, round(length(normalize(1.0))), 0.0, 1.0))))), 1.0), _GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0)), _GLF_IDENTITY(dot(vec4(0.0, _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(847.319)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), 1.0, 0.0), _GLF_IDENTITY(vec4(0.0, 0.0, 1.0, 0.0), (true ? vec4(0.0, 0.0, 1.0, 0.0) : _GLF_FUZZED(tan(vec4(-2936.6344, -8513.0471, -37.80, 3542.6345)))))), _GLF_IDENTITY(min(dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0)), dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0))), mix(float(_GLF_FUZZED(-4.5)), float(min(dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0)), dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0)))), bool(true))))), 1.0, abs(1.0), determinant(mat2(_GLF_IDENTITY(1.0, min(1.0, _GLF_IDENTITY(1.0, _GLF_IDENTITY(float(mat4x2(_GLF_IDENTITY(1.0, float(float(1.0))), 1.0, 1.0, 1.0, 1.0, sqrt(0.0), _GLF_ZERO(0.0, injectionSwitch.x), 1.0)), (false ? _GLF_FUZZED(-1.4) : float(mat4x2(_GLF_IDENTITY(1.0, float(float(1.0))), 1.0, 1.0, 1.0, 1.0, sqrt(0.0), _GLF_ZERO(0.0, injectionSwitch.x), 1.0))))))), 1.0, 0.0, 1.0)), 1.0, 0.0, 1.0)), mix(float(_GLF_FUZZED(-227.835)), float(float(mat4x2(min(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1.0, 0.0 + (_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED((_GLF_IDENTITY(- -5.5, (- -5.5) + 0.0)))), float(1.0), bool(true))))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(1.0, 0.0 + (_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED((- -5.5))), float(1.0), bool(true))))), (true ? _GLF_IDENTITY(1.0, 0.0 + (_GLF_IDENTITY(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED((- -5.5))), float(1.0), bool(true))), (_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(_GLF_IDENTITY((- -5.5), min((- -5.5), (- -5.5))))), float(1.0), bool(true)))) + 0.0))) : _GLF_FUZZED(-2423.3286))), _GLF_IDENTITY(1.0, 0.0 + (_GLF_IDENTITY(1.0, _GLF_IDENTITY(mix(float(_GLF_FUZZED((- -5.5))), float(1.0), bool(true)), min(mix(float(_GLF_FUZZED((- -5.5))), float(1.0), bool(true)), _GLF_IDENTITY(mix(float(_GLF_FUZZED((- -5.5))), float(1.0), bool(true)), (false ? _GLF_FUZZED(roundEven(883.796)) : mix(float(_GLF_FUZZED((- -5.5))), float(1.0), bool(true))))))))), _GLF_IDENTITY(1.0, 0.0 + (_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED((- -5.5))), float(1.0), bool(true))))))), (true ? _GLF_IDENTITY(1.0, 0.0 + (1.0)) : _GLF_FUZZED(84.21))), 1.0), _GLF_IDENTITY(_GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0)), _GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0)), min(dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0)), dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0))))), _GLF_IDENTITY(max(_GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0)), _GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0)), min(dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0)), dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0))))), _GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0)), _GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0)), min(dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0)), dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0)))))), _GLF_IDENTITY(float(mat2(_GLF_IDENTITY(max(_GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0)), _GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0)), min(dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0)), dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0))))), _GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0)), _GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0)), min(dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0)), dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0)))))), mix(float(max(_GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0)), _GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0)), min(dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0)), dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0))))), _GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0)), _GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0)), min(dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0)), dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0))))))), float(_GLF_FUZZED(-2.6)), bool(false))), 1.0, 0.0, 0.0)), (float(mat2(_GLF_IDENTITY(max(_GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0)), _GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0)), min(dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0)), dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0))))), _GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0)), _GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0)), min(dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0)), dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0)))))), mix(float(max(_GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0)), _GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0)), min(dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0)), dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0))))), _GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0)), _GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0)), min(dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0)), dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0))))))), float(_GLF_FUZZED(-2.6)), bool(false))), 1.0, 0.0, 0.0))) / 1.0))), 1.0, abs(1.0), determinant(mat2(_GLF_IDENTITY(1.0, min(1.0, 1.0)), 1.0, 0.0, 1.0)), 1.0, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(6290.2904)), float(0.0), bool(true))), 1.0))), bool(true)))) - tan(0.0)), clamp(float(mat4x2(min(_GLF_IDENTITY(_GLF_IDENTITY(1.0, 0.0 + (_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED((_GLF_IDENTITY(- -5.5, max(- -5.5, - -5.5))))), float(1.0), bool(true))))), (true ? _GLF_IDENTITY(1.0, _GLF_IDENTITY(0.0, 1.0 * (0.0)) + (1.0)) : _GLF_FUZZED(84.21))), 1.0), _GLF_IDENTITY(dot(vec4(0.0, _GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, float(_GLF_IDENTITY(mat3(0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, determinant(mat4(1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0)), 0.0), (mat3(0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, determinant(mat4(1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0)), 0.0)) + mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)))), 0.0)), 1.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0)), dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0))), 1.0, abs(1.0), determinant(mat2(1.0, 1.0, 0.0, 1.0)), 1.0, 0.0, 1.0)), float(mat4x2(min(_GLF_IDENTITY(_GLF_IDENTITY(1.0, 0.0 + (_GLF_IDENTITY(1.0, _GLF_IDENTITY(mix(float(_GLF_FUZZED((- -5.5))), float(1.0), bool(true)), mix(float(_GLF_FUZZED(6.0)), float(_GLF_IDENTITY(mix(float(_GLF_FUZZED((- -5.5))), float(1.0), bool(true)), mix(float(_GLF_IDENTITY(mix(float(_GLF_FUZZED((- -5.5))), float(1.0), bool(true)), max(mix(float(_GLF_FUZZED((- -5.5))), float(1.0), bool(true)), mix(float(_GLF_FUZZED((- -5.5))), float(1.0), bool(true))))), float(_GLF_FUZZED(504.644)), bool(false)))), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))), (true ? _GLF_IDENTITY(_GLF_IDENTITY(1.0, 0.0 + (1.0)), clamp(_GLF_IDENTITY(1.0, 0.0 + (1.0)), _GLF_IDENTITY(1.0, _GLF_IDENTITY(0.0, (0.0) + 0.0) + (1.0)), _GLF_IDENTITY(_GLF_IDENTITY(1.0, 0.0 + (1.0)), (false ? _GLF_FUZZED(8.4) : _GLF_IDENTITY(1.0, 0.0 + (1.0)))))) : _GLF_FUZZED(84.21))), 1.0), _GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0)), dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0))), 1.0, abs(1.0), determinant(mat2(1.0, 1.0, 0.0, 1.0)), 1.0, 0.0, 1.0)), float(mat4x2(min(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1.0, 0.0 + (_GLF_IDENTITY(1.0, mix(float(_GLF_IDENTITY(_GLF_FUZZED((- -5.5)), max(_GLF_FUZZED((- -5.5)), _GLF_FUZZED((- -5.5))))), float(1.0), bool(true))))), (true ? _GLF_IDENTITY(1.0, _GLF_IDENTITY(_GLF_IDENTITY(0.0 + (1.0), mix(float(_GLF_FUZZED(-9.8)), float(_GLF_IDENTITY(0.0 + (1.0), float(mat2x4(0.0 + (1.0), 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0)))), bool(true))), min(_GLF_IDENTITY(0.0 + (1.0), mix(float(_GLF_FUZZED(-9.8)), float(_GLF_IDENTITY(0.0 + (1.0), float(mat2x4(0.0 + (1.0), 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0)))), bool(true))), _GLF_IDENTITY(_GLF_IDENTITY(0.0 + (1.0), mix(float(_GLF_FUZZED(-9.8)), float(_GLF_IDENTITY(0.0 + (1.0), float(mat2x4(0.0 + (1.0), 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0)))), bool(true))), min(_GLF_IDENTITY(_GLF_IDENTITY(0.0 + (1.0), mix(float(_GLF_FUZZED(-9.8)), float(_GLF_IDENTITY(0.0 + (1.0), float(mat2x4(0.0 + (1.0), 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0)))), bool(true))), (_GLF_IDENTITY(0.0 + (1.0), mix(float(_GLF_FUZZED(-9.8)), float(_GLF_IDENTITY(0.0 + (1.0), float(mat2x4(0.0 + (1.0), 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0)))), bool(true)))) - 0.0), _GLF_IDENTITY(0.0 + (1.0), mix(float(_GLF_FUZZED(-9.8)), float(_GLF_IDENTITY(0.0 + (1.0), float(mat2x4(0.0 + (1.0), 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0)))), bool(true)))))))) : _GLF_FUZZED(84.21))), min(_GLF_IDENTITY(_GLF_IDENTITY(1.0, 0.0 + (_GLF_IDENTITY(1.0, mix(float(_GLF_IDENTITY(_GLF_FUZZED((- -5.5)), max(_GLF_FUZZED((- -5.5)), _GLF_FUZZED((- -5.5))))), float(1.0), bool(true))))), (true ? _GLF_IDENTITY(1.0, _GLF_IDENTITY(_GLF_IDENTITY(0.0 + (1.0), mix(float(_GLF_FUZZED(-9.8)), float(_GLF_IDENTITY(0.0 + (1.0), float(mat2x4(0.0 + (1.0), 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0)))), bool(true))), min(_GLF_IDENTITY(0.0 + (1.0), mix(float(_GLF_FUZZED(-9.8)), float(_GLF_IDENTITY(0.0 + (1.0), float(mat2x4(0.0 + (1.0), 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0)))), bool(true))), _GLF_IDENTITY(_GLF_IDENTITY(0.0 + (1.0), mix(float(_GLF_FUZZED(-9.8)), float(_GLF_IDENTITY(0.0 + (1.0), float(mat2x4(0.0 + (1.0), 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0)))), bool(true))), min(_GLF_IDENTITY(_GLF_IDENTITY(0.0 + (1.0), mix(float(_GLF_FUZZED(-9.8)), float(_GLF_IDENTITY(0.0 + (1.0), float(mat2x4(0.0 + (1.0), 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0)))), bool(true))), (_GLF_IDENTITY(0.0 + (1.0), mix(float(_GLF_FUZZED(-9.8)), float(_GLF_IDENTITY(0.0 + (1.0), float(mat2x4(0.0 + (1.0), 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0)))), bool(true)))) - 0.0), _GLF_IDENTITY(0.0 + (1.0), mix(float(_GLF_FUZZED(-9.8)), float(_GLF_IDENTITY(0.0 + (1.0), float(mat2x4(0.0 + (1.0), 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0)))), bool(true)))))))) : _GLF_FUZZED(84.21))), _GLF_IDENTITY(_GLF_IDENTITY(1.0, 0.0 + (_GLF_IDENTITY(1.0, mix(float(_GLF_IDENTITY(_GLF_FUZZED((- -5.5)), max(_GLF_FUZZED((- -5.5)), _GLF_FUZZED((- -5.5))))), float(1.0), bool(true))))), (true ? _GLF_IDENTITY(1.0, _GLF_IDENTITY(_GLF_IDENTITY(0.0 + (1.0), mix(float(_GLF_FUZZED(-9.8)), float(_GLF_IDENTITY(0.0 + (1.0), float(mat2x4(0.0 + (1.0), 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0)))), bool(true))), min(_GLF_IDENTITY(0.0 + (1.0), mix(float(_GLF_FUZZED(-9.8)), float(_GLF_IDENTITY(0.0 + (1.0), float(mat2x4(0.0 + (1.0), 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0)))), bool(true))), _GLF_IDENTITY(_GLF_IDENTITY(0.0 + (1.0), mix(float(_GLF_FUZZED(-9.8)), float(_GLF_IDENTITY(0.0 + (1.0), float(mat2x4(0.0 + (1.0), 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0)))), bool(true))), min(_GLF_IDENTITY(_GLF_IDENTITY(0.0 + (1.0), mix(float(_GLF_FUZZED(-9.8)), float(_GLF_IDENTITY(0.0 + (1.0), float(mat2x4(0.0 + (1.0), 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0)))), bool(true))), (_GLF_IDENTITY(0.0 + (1.0), mix(float(_GLF_FUZZED(-9.8)), float(_GLF_IDENTITY(0.0 + (1.0), float(mat2x4(0.0 + (1.0), 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0)))), bool(true)))) - 0.0), _GLF_IDENTITY(0.0 + (1.0), mix(float(_GLF_FUZZED(-9.8)), float(_GLF_IDENTITY(0.0 + (1.0), float(mat2x4(0.0 + (1.0), 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0)))), bool(true)))))))) : _GLF_FUZZED(84.21))))), 1.0), _GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, _GLF_IDENTITY(0.0, max(0.0, _GLF_IDENTITY(_GLF_IDENTITY(0.0, mix(float(_GLF_IDENTITY(0.0, min(0.0, 0.0))), float(_GLF_FUZZED(9.4)), bool(false))), _GLF_IDENTITY(float(mat2x3(_GLF_IDENTITY(0.0, mix(float(_GLF_IDENTITY(0.0, min(0.0, 0.0))), float(_GLF_FUZZED(9.4)), bool(false))), _GLF_ONE(1.0, injectionSwitch.y), 0.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0)), min(float(mat2x3(_GLF_IDENTITY(0.0, mix(float(_GLF_IDENTITY(0.0, min(0.0, 0.0))), float(_GLF_FUZZED(9.4)), bool(false))), _GLF_ONE(1.0, injectionSwitch.y), 0.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0)), float(mat2x3(_GLF_IDENTITY(0.0, mix(float(_GLF_IDENTITY(0.0, min(0.0, 0.0))), float(_GLF_FUZZED(9.4)), bool(false))), _GLF_ONE(1.0, injectionSwitch.y), 0.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0)))))))), vec4(0.0, _GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, (0.0) + 0.0)) / cos(0.0)), 1.0, 0.0)), _GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0)), (false ? _GLF_FUZZED(9.5) : dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0))))), 1.0, abs(1.0), determinant(mat2(1.0, 1.0, 0.0, 1.0)), 1.0, 0.0, 1.0))))))), mat2x3(1.0), mat2(_GLF_IDENTITY(1.0, (1.0) / 1.0))), _GLF_struct_7(mat3x4(1.0), true, bvec4(true), vec2(1.0), bvec3(true), mat3x2(1.0))), _GLF_struct_replacement_20._f4._f5.workgroup_size * workgroup_id);
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY((false ? _GLF_FUZZED(-873.155) : injectionSwitch.x), mix(float(_GLF_FUZZED(float(true))), float(_GLF_IDENTITY((false ? _GLF_FUZZED(-873.155) : injectionSwitch.x), float(mat2x3((false ? _GLF_FUZZED(-873.155) : injectionSwitch.x), 0.0, 1.0, 1.0, 0.0, _GLF_IDENTITY(dot(vec4(1.0, 0.0, length(vec4(0.0, 0.0, 0.0, 0.0)), 0.0), vec4(1.0, 0.0, 0.0, 0.0)), dot(vec4(1.0, 0.0, length(vec4(0.0, 0.0, 0.0, 0.0)), 0.0), vec4(1.0, 0.0, 0.0, 0.0))))))), _GLF_IDENTITY(bool(true), ! (! (bool(true)))))))) / 1.0) > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(vec4(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), 1.0, 1.0), max(_GLF_IDENTITY(vec4(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), 1.0, 1.0), (true ? vec4(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), 1.0, 1.0) : _GLF_FUZZED(vec4(348.910, 7291.6724, 9741.2605, -7.2)))), vec4(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), 1.0, 1.0))))).x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))).y)))) && true))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4((injectionSwitch.x > injectionSwitch.y), true, true, false))))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint subgroup_base = _GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) ^ 0u);
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY((injectionSwitch)[0], max((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch)[0], float(mat4((injectionSwitch)[0], 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, log(1.0), 1.0, 1.0, 0.0, 1.0, tan(0.0), 0.0, 1.0))))), _GLF_FUZZED(-2.1)), vec2(_GLF_FUZZED(-402.347), _GLF_IDENTITY((injectionSwitch)[1], (_GLF_IDENTITY((injectionSwitch)[1], ((injectionSwitch)[1]) * 1.0)) - 0.0)), bvec2(false, true))).x > injectionSwitch.y))))
    return;
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))
  {
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 uint virtual_gid = _GLF_struct_replacement_9.workgroup_base + subgroup_base + subgroup_local_id;
 uint next_virtual_gid = _GLF_struct_replacement_9.workgroup_base + subgroup_base + ((subgroup_local_id + 1) % _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size))), (_GLF_IDENTITY(subgroup_size, ~ _GLF_IDENTITY((~ _GLF_IDENTITY(_GLF_IDENTITY((subgroup_size), clamp((subgroup_size), _GLF_IDENTITY((subgroup_size), max((subgroup_size), (subgroup_size))), (subgroup_size))), (_GLF_IDENTITY((subgroup_size), clamp((subgroup_size), _GLF_IDENTITY((subgroup_size), max((subgroup_size), (subgroup_size))), (subgroup_size)))) / 1u)), ~ (~ ((~ _GLF_IDENTITY(_GLF_IDENTITY((subgroup_size), clamp((subgroup_size), _GLF_IDENTITY((subgroup_size), max((subgroup_size), (subgroup_size))), (subgroup_size))), (_GLF_IDENTITY((subgroup_size), clamp((subgroup_size), _GLF_IDENTITY((subgroup_size), max((subgroup_size), (subgroup_size))), (subgroup_size)))) / 1u))))))) | (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size))), (false ? _GLF_FUZZED(subgroup_size) : _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size))), (_GLF_IDENTITY(subgroup_size, ~ (~ (_GLF_IDENTITY(subgroup_size, ~ (_GLF_IDENTITY(~ (subgroup_size), max(~ (subgroup_size), ~ (subgroup_size))))))))) << 0u))))));
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     return;
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false))), bool(_GLF_IDENTITY(bool(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0)))))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || false), false || (_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > injectionSwitch.y))))))) || false))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bool(_GLF_DEAD(false))), bool(bvec4(bool(bool(_GLF_DEAD(false))), true, false, false))))))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     barrier();
    }
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y)))))), bool(bvec2(! (_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, (false) || false), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(mat2x3(injectionSwitch, sin(0.0), 1.0, 1.0, 1.0))).x, mix(float(_GLF_IDENTITY(injectionSwitch, vec2(mat2x3(injectionSwitch, sin(0.0), 1.0, 1.0, 1.0))).x), float(_GLF_FUZZED(3496.9833)), bool(false))) > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(-5.3, 653.602))))) * vec2(1.0, 1.0)).x > injectionSwitch.y)))))), true)))) && true))), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || ((injectionSwitch.x > injectionSwitch.y)))), ! (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch))) / vec2(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y))).x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch))) / vec2(_GLF_ONE(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), injectionSwitch.y), _GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, (true ? _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)) : _GLF_FUZZED(-3.4)))))).x > injectionSwitch.y) && true))), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(_GLF_IDENTITY(bvec2(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)), injectionSwitch)).x > injectionSwitch.y)), false), bvec2(_GLF_IDENTITY(bvec2(bvec2(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))), false)), bvec2(bvec2(bvec2(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))))))))))))), bool(bvec4(! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat4x2(injectionSwitch, 0.0, 1.0, length(vec4(0.0, 0.0, 0.0, 0.0)), 1.0, _GLF_IDENTITY(dot(vec4(1.0, 0.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y)), vec4(0.0, 1.0, 0.0, 0.0)), dot(vec4(1.0, 0.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y)), vec4(0.0, 1.0, 0.0, 0.0))), 0.0)), (true ? _GLF_IDENTITY(vec2(mat4x2(injectionSwitch, 0.0, 1.0, length(vec4(0.0, 0.0, 0.0, 0.0)), 1.0, _GLF_IDENTITY(dot(vec4(1.0, 0.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y)), vec4(0.0, 1.0, 0.0, 0.0)), dot(vec4(1.0, 0.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y)), vec4(0.0, 1.0, 0.0, 0.0))), 0.0)), clamp(vec2(mat4x2(injectionSwitch, 0.0, 1.0, length(vec4(0.0, 0.0, 0.0, 0.0)), 1.0, _GLF_IDENTITY(dot(vec4(1.0, 0.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y)), vec4(0.0, 1.0, 0.0, 0.0)), dot(vec4(1.0, 0.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y)), vec4(0.0, 1.0, 0.0, 0.0))), 0.0)), vec2(mat4x2(injectionSwitch, 0.0, 1.0, length(vec4(0.0, 0.0, 0.0, 0.0)), 1.0, _GLF_IDENTITY(dot(vec4(1.0, 0.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y)), vec4(0.0, 1.0, 0.0, 0.0)), dot(vec4(1.0, 0.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y)), vec4(0.0, 1.0, 0.0, 0.0))), 0.0)), vec2(mat4x2(injectionSwitch, 0.0, 1.0, length(vec4(0.0, 0.0, 0.0, 0.0)), 1.0, _GLF_IDENTITY(dot(vec4(1.0, 0.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y)), vec4(0.0, 1.0, 0.0, 0.0)), dot(vec4(1.0, 0.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y)), vec4(0.0, 1.0, 0.0, 0.0))), 0.0)))) : _GLF_FUZZED(injectionSwitch)))).y)), _GLF_IDENTITY(! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false))), bool(_GLF_IDENTITY(bvec2(! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false), bvec2(bvec3(bvec2(! (! (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), true && (! ((injectionSwitch.x > injectionSwitch.y))))))))), false), true))))))), false, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(mat4x2(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), 0.0, 0.0, 0.0, 1.0, exp(0.0), 1.0))).y)), ! (! (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec3((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y))))))), true, false)))))))), bool(bvec2(! (_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(3237.1145)), float(injectionSwitch.x), bool(true)))) + 0.0) > _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), _GLF_IDENTITY(true, ! (! (true))))))) && true))))))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, false || (false)), false, true)))), true && (! (false))))), (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 atomicStore(buf[virtual_gid], uint(1), 4, 64, 4);
 if((_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY((subgroup_local_id) | (subgroup_local_id), ((1u << _GLF_IDENTITY(uint(5u), uint(5u))) >> _GLF_IDENTITY(uint(5u), uint(5u))) * ((subgroup_local_id) | (subgroup_local_id)))) % _GLF_IDENTITY(2, (2) | (2))) == 0)
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), false || (! (false))))), (_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), injectionSwitch, injectionSwitch)).x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(false, bool(bvec4(false, true, true, false))))), (_GLF_IDENTITY(injectionSwitch.x, float(_GLF_IDENTITY(vec2(injectionSwitch.x, 0.0), min(vec2(injectionSwitch.x, 0.0), vec2(injectionSwitch.x, 0.0))))) > injectionSwitch.y))))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         return;
        }
       return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false)))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, float(mat4x3(injectionSwitch.y, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0)))))))))
      return;
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat4x2(injectionSwitch, 1.0, 1.0, exp(0.0), 1.0, 1.0, 1.0), (false ? _GLF_FUZZED(mat4x2(-5.3, -949.185, -3.7, 5.2, 630.445, 162.265, -73.15, 591.689)) : mat4x2(injectionSwitch, 1.0, 1.0, exp(0.0), 1.0, 1.0, 1.0))))).x > injectionSwitch.y), true && ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(mat3x2(_GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(243.133)), bool(false))), 1.0, 0.0, 1.0, 0.0, 1.0)), max(float(mat3x2(_GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(243.133)), bool(false))), 1.0, 0.0, 1.0, 0.0, 1.0)), float(mat3x2(_GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(243.133)), bool(false))), 1.0, 0.0, 1.0, 0.0, 1.0))))), injectionSwitch.y, injectionSwitch.y))))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, true && (false)), (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((true ? _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(-2564.0898, 68.12)) : injectionSwitch)) : _GLF_FUZZED(vec2(-6.1, -1472.5071))), ((true ? _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(-2564.0898, 68.12)) : injectionSwitch)) : _GLF_FUZZED(vec2(-6.1, -1472.5071)))) / vec2(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y)))).x > injectionSwitch.y)) && true))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       return;
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   subgroupAll(true);
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) || false)))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch)).x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), bool(_GLF_IDENTITY(bool((! (false))), false || (bool((! (false))))))))))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   atomicStore(buf[next_virtual_gid], _GLF_IDENTITY(uint(_GLF_IDENTITY(2, (2) | (_GLF_IDENTITY(2, (_GLF_IDENTITY(2, 0 ^ (2))) | (2))))), (_GLF_IDENTITY(uint(_GLF_IDENTITY(2, _GLF_IDENTITY((2) | (_GLF_IDENTITY(2, (_GLF_IDENTITY(2, 0 ^ (2))) | (2))), _GLF_IDENTITY(((2) | (_GLF_IDENTITY(2, (_GLF_IDENTITY(2, 0 ^ (2))) | (2)))) | ((2) | (_GLF_IDENTITY(2, (_GLF_IDENTITY(2, 0 ^ (2))) | (2)))), ~ (~ ((_GLF_IDENTITY((2) | (_GLF_IDENTITY(2, (_GLF_IDENTITY(2, 0 ^ (2))) | (2))), (_GLF_IDENTITY((2) | (_GLF_IDENTITY(2, (_GLF_IDENTITY(2, 0 ^ (2))) | (2))), min((2) | (_GLF_IDENTITY(2, (_GLF_IDENTITY(2, 0 ^ (2))) | (2))), (2) | (_GLF_IDENTITY(2, (_GLF_IDENTITY(2, 0 ^ (2))) | (2)))))) ^ 0)) | ((2) | (_GLF_IDENTITY(_GLF_IDENTITY(2, (2) >> (0 | 0)), (_GLF_IDENTITY(2, _GLF_IDENTITY(0 ^ (_GLF_IDENTITY(2, max(2, 2))), int(int(0 ^ (2)))))) | (2)))))))))), (uint(_GLF_IDENTITY(2, _GLF_IDENTITY((2) | (_GLF_IDENTITY(2, (_GLF_IDENTITY(2, 0 ^ (2))) | (2))), _GLF_IDENTITY(((2) | (_GLF_IDENTITY(2, (_GLF_IDENTITY(2, 0 ^ (2))) | (2)))) | ((2) | (_GLF_IDENTITY(2, (_GLF_IDENTITY(2, 0 ^ (2))) | (2)))), ~ (~ ((_GLF_IDENTITY((2) | (_GLF_IDENTITY(2, (_GLF_IDENTITY(2, 0 ^ (2))) | (2))), (_GLF_IDENTITY((2) | (_GLF_IDENTITY(2, (_GLF_IDENTITY(2, 0 ^ (2))) | (2))), min((2) | (_GLF_IDENTITY(2, (_GLF_IDENTITY(2, 0 ^ (2))) | (2))), (2) | (_GLF_IDENTITY(2, (_GLF_IDENTITY(2, 0 ^ (2))) | (2)))))) ^ 0)) | ((2) | (_GLF_IDENTITY(_GLF_IDENTITY(2, (2) >> (0 | 0)), (_GLF_IDENTITY(2, _GLF_IDENTITY(0 ^ (_GLF_IDENTITY(2, max(2, 2))), int(int(0 ^ (2)))))) | (2))))))))))) << 0u)) >> (0u ^ 0u)), _GLF_IDENTITY(4, _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(false, (false) && true) ? _GLF_FUZZED(-23857) : _GLF_IDENTITY(_GLF_IDENTITY(4, 0 ^ (4)), min(_GLF_IDENTITY(4, _GLF_IDENTITY(int(_GLF_ZERO(0.0, injectionSwitch.x)), clamp(int(_GLF_ZERO(0.0, injectionSwitch.x)), int(_GLF_ZERO(0.0, injectionSwitch.x)), _GLF_IDENTITY(int(_GLF_ZERO(0.0, injectionSwitch.x)), max(int(_GLF_ZERO(0.0, injectionSwitch.x)), int(_GLF_ZERO(0.0, injectionSwitch.x)))))) + (4)), 4))), clamp((_GLF_IDENTITY(false, (false) && true) ? _GLF_FUZZED(-23857) : _GLF_IDENTITY(_GLF_IDENTITY(4, 0 ^ (4)), min(_GLF_IDENTITY(4, _GLF_IDENTITY(int(_GLF_ZERO(0.0, injectionSwitch.x)), clamp(int(_GLF_ZERO(0.0, injectionSwitch.x)), int(_GLF_ZERO(0.0, injectionSwitch.x)), _GLF_IDENTITY(int(_GLF_ZERO(0.0, injectionSwitch.x)), max(int(_GLF_ZERO(0.0, injectionSwitch.x)), int(_GLF_ZERO(0.0, injectionSwitch.x)))))) + (4)), 4))), _GLF_IDENTITY((_GLF_IDENTITY(false, (false) && true) ? _GLF_FUZZED(-23857) : _GLF_IDENTITY(_GLF_IDENTITY(4, 0 ^ (4)), min(_GLF_IDENTITY(4, _GLF_IDENTITY(int(_GLF_ZERO(0.0, injectionSwitch.x)), clamp(int(_GLF_ZERO(0.0, injectionSwitch.x)), int(_GLF_ZERO(0.0, injectionSwitch.x)), _GLF_IDENTITY(int(_GLF_ZERO(0.0, injectionSwitch.x)), max(int(_GLF_ZERO(0.0, injectionSwitch.x)), int(_GLF_ZERO(0.0, injectionSwitch.x)))))) + (4)), 4))), ((_GLF_IDENTITY(false, (false) && true) ? _GLF_FUZZED(-23857) : _GLF_IDENTITY(_GLF_IDENTITY(4, 0 ^ (4)), min(_GLF_IDENTITY(4, _GLF_IDENTITY(int(_GLF_ZERO(0.0, injectionSwitch.x)), clamp(int(_GLF_ZERO(0.0, injectionSwitch.x)), int(_GLF_ZERO(0.0, injectionSwitch.x)), _GLF_IDENTITY(int(_GLF_ZERO(0.0, injectionSwitch.x)), max(int(_GLF_ZERO(0.0, injectionSwitch.x)), int(_GLF_ZERO(0.0, injectionSwitch.x)))))) + (4)), 4)))) >> 0), _GLF_IDENTITY((_GLF_IDENTITY(false, (false) && true) ? _GLF_FUZZED(-23857) : _GLF_IDENTITY(_GLF_IDENTITY(4, 0 ^ (4)), min(_GLF_IDENTITY(4, _GLF_IDENTITY(int(_GLF_ZERO(0.0, injectionSwitch.x)), clamp(int(_GLF_ZERO(0.0, injectionSwitch.x)), int(_GLF_ZERO(0.0, injectionSwitch.x)), _GLF_IDENTITY(int(_GLF_ZERO(0.0, injectionSwitch.x)), max(int(_GLF_ZERO(0.0, injectionSwitch.x)), int(_GLF_ZERO(0.0, injectionSwitch.x)))))) + (4)), 4))), _GLF_IDENTITY(int(int((_GLF_IDENTITY(false, (false) && true) ? _GLF_FUZZED(-23857) : _GLF_IDENTITY(_GLF_IDENTITY(4, 0 ^ (4)), min(_GLF_IDENTITY(4, _GLF_IDENTITY(int(_GLF_ZERO(0.0, injectionSwitch.x)), clamp(int(_GLF_ZERO(0.0, injectionSwitch.x)), int(_GLF_ZERO(0.0, injectionSwitch.x)), _GLF_IDENTITY(int(_GLF_ZERO(0.0, injectionSwitch.x)), max(int(_GLF_ZERO(0.0, injectionSwitch.x)), int(_GLF_ZERO(0.0, injectionSwitch.x)))))) + (4)), 4))))), (int(int((_GLF_IDENTITY(false, (false) && true) ? _GLF_FUZZED(-23857) : _GLF_IDENTITY(_GLF_IDENTITY(4, 0 ^ (4)), min(_GLF_IDENTITY(4, _GLF_IDENTITY(int(_GLF_ZERO(0.0, injectionSwitch.x)), clamp(int(_GLF_ZERO(0.0, injectionSwitch.x)), int(_GLF_ZERO(0.0, injectionSwitch.x)), _GLF_IDENTITY(int(_GLF_ZERO(0.0, injectionSwitch.x)), max(int(_GLF_ZERO(0.0, injectionSwitch.x)), int(_GLF_ZERO(0.0, injectionSwitch.x)))))) + (4)), 4)))))) - 0)))), ((false ? _GLF_FUZZED(-23857) : _GLF_IDENTITY(_GLF_IDENTITY(4, _GLF_IDENTITY(0, (0) | 0) ^ (4)), min(_GLF_IDENTITY(4, int(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), max(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), (false ? _GLF_FUZZED(188.019) : _GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), clamp(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)))))))) + (4)), 4)))) * 1)), 64, 4);
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(! (_GLF_IDENTITY(! (_GLF_DEAD(false)), ! (! (! (_GLF_DEAD(false)))))), true && (_GLF_IDENTITY(! (_GLF_IDENTITY(! (_GLF_DEAD(false)), ! (! (! (_GLF_DEAD(false)))))), (! (_GLF_IDENTITY(! (_GLF_DEAD(false)), ! (! (! (_GLF_DEAD(false))))))) || false)))))
    barrier();
  }
 else
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(vec2(injectionSwitch))))).x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))))))
          {
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
         if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).x > injectionSwitch.y))))))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           barrier();
          }
         barrier();
        }
       barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          return;
         barrier();
        }
      }
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(false || (false), (false || (false)) && true)), (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false)) && true)))), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
          barrier();
         return;
        }
       return;
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
        return;
       barrier();
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) || false))), (_GLF_IDENTITY(false, true && (false))) || false)))
        return;
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(8.0)), bool(false)))))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          return;
         barrier();
        }
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         barrier();
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(-1220.0398, 1937.3393)))), injectionSwitch)), clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0))[1]), (true ? vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0))[1]) : _GLF_FUZZED(vec2(-719.276, -72.62))))), injectionSwitch))) / exp(vec2(0.0, 0.0))).y))))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, ! (! (false)))))))
          barrier();
         barrier();
        }
       barrier();
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec3(false, true, true))), bool(bvec3(_GLF_IDENTITY(false, bool(bvec3(false, true, true))), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))))
      barrier();
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * _GLF_IDENTITY(mat2(1.0), mat2(1.0) * (mat2(1.0)))).x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(-3639.2016)))))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   subgroupAll(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, ! (! (false))), false))), (_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((false), ((false)) && true))), _GLF_IDENTITY(false, true && (false)))))) || false));
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(true && (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), _GLF_IDENTITY(injectionSwitch.y, float(vec3(injectionSwitch.y, 1.0, 1.0)))), float(mat2(_GLF_IDENTITY(clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), _GLF_IDENTITY(injectionSwitch.y, float(vec3(injectionSwitch.y, _GLF_IDENTITY(1.0, min(1.0, 1.0)), 1.0)))), (clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), _GLF_IDENTITY(injectionSwitch.y, float(vec3(injectionSwitch.y, 1.0, 1.0))))) / _GLF_IDENTITY(1.0, (1.0) - 0.0)), 1.0, 0.0, sin(0.0))))))))))) && true)), false || (true && _GLF_IDENTITY((_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)))).y)), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y)), _GLF_IDENTITY(injectionSwitch.y, float(vec3(injectionSwitch.y, 1.0, 1.0)))), float(mat2(_GLF_IDENTITY(clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), _GLF_IDENTITY(injectionSwitch.y, float(vec3(injectionSwitch.y, 1.0, 1.0)))), (clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), injectionSwitch)).y)), _GLF_IDENTITY(injectionSwitch.y, float(vec3(injectionSwitch.y, 1.0, 1.0))))) / 1.0), 1.0, 0.0, sin(0.0))))))))))) && true, ! (_GLF_IDENTITY(! ((_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y)), _GLF_IDENTITY(injectionSwitch.y, float(vec3(injectionSwitch.y, 1.0, 1.0)))), float(mat2(_GLF_IDENTITY(clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), _GLF_IDENTITY(injectionSwitch.y, float(vec3(injectionSwitch.y, 1.0, 1.0)))), (clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), injectionSwitch)).y)), _GLF_IDENTITY(injectionSwitch.y, float(vec3(injectionSwitch.y, 1.0, 1.0))))) / 1.0), 1.0, 0.0, sin(0.0))))))))))) && true), bool(bvec2(! ((_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y)), _GLF_IDENTITY(injectionSwitch.y, float(vec3(injectionSwitch.y, 1.0, 1.0)))), float(mat2(_GLF_IDENTITY(clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), _GLF_IDENTITY(injectionSwitch.y, float(vec3(injectionSwitch.y, 1.0, 1.0)))), (clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), injectionSwitch)).y)), _GLF_IDENTITY(injectionSwitch.y, float(vec3(injectionSwitch.y, 1.0, 1.0))))) / 1.0), 1.0, 0.0, sin(0.0))))))))))) && true), false))))))), true && ((_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)))).y)), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch))) + vec2(0.0, 0.0)).y, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y)), _GLF_IDENTITY(injectionSwitch.y, float(vec3(injectionSwitch.y, 1.0, 1.0)))), float(mat2(_GLF_IDENTITY(clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), _GLF_IDENTITY(injectionSwitch.y, float(vec3(injectionSwitch.y, 1.0, 1.0)))), _GLF_IDENTITY((clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), injectionSwitch)).y)), _GLF_IDENTITY(injectionSwitch.y, float(vec3(injectionSwitch.y, 1.0, 1.0))))) / 1.0, min(_GLF_IDENTITY((clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), injectionSwitch)).y)), _GLF_IDENTITY(injectionSwitch.y, float(vec3(injectionSwitch.y, 1.0, 1.0))))) / 1.0, min((clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), injectionSwitch)).y)), _GLF_IDENTITY(injectionSwitch.y, float(vec3(injectionSwitch.y, 1.0, 1.0))))) / 1.0, _GLF_IDENTITY((clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), injectionSwitch)).y)), _GLF_IDENTITY(injectionSwitch.y, float(vec3(injectionSwitch.y, 1.0, 1.0))))) / 1.0, ((clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), injectionSwitch)).y)), _GLF_IDENTITY(injectionSwitch.y, float(vec3(injectionSwitch.y, 1.0, 1.0))))) / 1.0) / 1.0))), (clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), injectionSwitch)).y)), _GLF_IDENTITY(injectionSwitch.y, float(vec3(injectionSwitch.y, 1.0, 1.0))))) / 1.0))), 1.0, 0.0, sin(0.0))))))))))) && true)))))))), ! (_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(_GLF_IDENTITY(float(mat3x4(injectionSwitch.y, 1.0, _GLF_IDENTITY(abs(1.0), float(vec4(_GLF_IDENTITY(abs(1.0), (true ? _GLF_IDENTITY(abs(1.0), (abs(1.0)) / 1.0) : _GLF_FUZZED(-5.7))), 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y)))), 0.0, _GLF_IDENTITY(0.0, (0.0) / exp(_GLF_IDENTITY(0.0, (0.0) * 1.0))), 1.0, 1.0, 1.0, 0.0, tan(0.0), 1.0, 1.0)), max(float(mat3x4(injectionSwitch.y, 1.0, abs(_GLF_IDENTITY(1.0, max(1.0, _GLF_IDENTITY(1.0, float(mat2x3(1.0, 1.0, 0.0, 1.0, 0.0, 0.0)))))), 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, tan(0.0), 1.0, _GLF_IDENTITY(1.0, max(1.0, _GLF_IDENTITY(1.0, min(1.0, 1.0)))))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(float(mat3x4(injectionSwitch.y, 1.0, abs(1.0), 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, tan(0.0), 1.0, 1.0)), max(float(mat3x4(injectionSwitch.y, 1.0, abs(1.0), 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, tan(0.0), 1.0, 1.0)), float(mat3x4(injectionSwitch.y, 1.0, abs(1.0), 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, tan(0.0), 1.0, 1.0)))), (true ? float(mat3x4(injectionSwitch.y, 1.0, abs(1.0), 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, tan(0.0), 1.0, 1.0)) : _GLF_FUZZED(31.60))), 0.0 + (_GLF_IDENTITY(_GLF_IDENTITY(float(mat3x4(injectionSwitch.y, 1.0, abs(1.0), 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, tan(0.0), 1.0, _GLF_IDENTITY(1.0, (1.0) / 1.0))), max(float(mat3x4(injectionSwitch.y, 1.0, abs(1.0), 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, tan(0.0), 1.0, 1.0)), float(mat3x4(injectionSwitch.y, 1.0, abs(1.0), 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, tan(0.0), 1.0, 1.0)))), (true ? float(mat3x4(injectionSwitch.y, 1.0, abs(1.0), 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, tan(0.0), 1.0, 1.0)) : _GLF_FUZZED(31.60))))))), (_GLF_IDENTITY(false, (false) || false) ? _GLF_FUZZED(39.33) : float(mat3x4(injectionSwitch.y, 1.0, abs(1.0), _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED((8.8 / 663.287))), bool(false))), 0.0, _GLF_IDENTITY(1.0, max(1.0, _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(8555.7168)), bool(false))))), 1.0, 1.0, 0.0, tan(0.0), 1.0, 1.0))))))))))), ! (! _GLF_IDENTITY(((_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y)), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)) && true, (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)) && true, bool(bool((_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)) && _GLF_IDENTITY(true, false || (true)))))) && true))))), ! (! (_GLF_IDENTITY(((_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(1.8), _GLF_IDENTITY((injectionSwitch), mix(vec2(_GLF_FUZZED(455.088), _GLF_FUZZED((true ? -6.2 : -0.2))), vec2(((injectionSwitch))[0], ((injectionSwitch))[1]), bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)))[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(-472.745)), bvec2(true, false))).x, injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y)), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)) && true)))), (((_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y)), (_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, false)), (bool(bvec4(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, false))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)) && true))))) || false)))))), ! (! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).x > _GLF_IDENTITY(injectionSwitch.y, 0.0 + (injectionSwitch.y))))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, 0.0 + (injectionSwitch.y)))))))))))))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
    }
   atomicStore(buf[_GLF_IDENTITY(next_virtual_gid, (next_virtual_gid) << 0u)], uint(2), _GLF_IDENTITY(_GLF_IDENTITY(4, clamp(4, 4, 4)), (true ? 4 : _GLF_FUZZED(_GLF_IDENTITY(-61775, (-61775) / 1)))), 64, 4);
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(false))
  return;
}
