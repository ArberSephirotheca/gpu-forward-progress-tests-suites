#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


struct _GLF_struct_1 {
 ivec2 _f0;
 mat4 _f1;
 float _f2;
 ivec4 _f3;
 mat3x4 _f4;
 vec2 _f5;
} ;

struct _GLF_struct_0 {
 uvec4 _f0;
 ivec3 _f1;
 uint subgroup_id;
 vec2 _f2;
 ivec4 _f3;
 mat2x4 _f4;
} ;

struct _GLF_struct_2 {
 mat4 _f0;
 _GLF_struct_0 _f1;
 _GLF_struct_1 _f2;
 mat4x3 _f3;
 bool _f4;
} ;

struct _GLF_struct_3 {
 _GLF_struct_2 _f0;
} ;

layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 _GLF_struct_3 _GLF_struct_replacement_3 = _GLF_struct_3(_GLF_struct_2(mat4(1.0), _GLF_struct_0(uvec4(1u), ivec3(1), gl_SubgroupID, vec2(1.0), ivec4(1), mat2x4(_GLF_IDENTITY(1.0, mix(_GLF_IDENTITY(float(_GLF_FUZZED(-20.06)), mix(float(_GLF_FUZZED((-9696.0440 + -8126.7066))), float(float(_GLF_FUZZED(-20.06))), bool(true))), float(1.0), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), _GLF_struct_1(ivec2(1), mat4(1.0), 1.0, ivec4(_GLF_IDENTITY(1, min(1, 1))), mat3x4(1.0), vec2(1.0)), mat4x3(1.0), true));
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_DEAD(false))
  {
   for(int _injected_loop_counter = (0 ^ 1); _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
    {
     return;
    }
  }
 uint subgroup_local_id = gl_SubgroupInvocationID;
 uint num_workgroup = _GLF_IDENTITY(gl_NumWorkGroups, _GLF_IDENTITY(uvec3(_GLF_IDENTITY(_GLF_IDENTITY(uvec4(_GLF_IDENTITY(gl_NumWorkGroups, uvec3(0u, 0u, 0u) + (_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) | _GLF_IDENTITY(uvec3(0u, 0u, 0u), (uvec3(0u, 0u, 0u)) | (uvec3(0u, 0u, 0u)))))), 0u), ~ (_GLF_IDENTITY(~ (uvec4(_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, uvec3(0u, 0u, 0u) + (_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) | uvec3(_GLF_IDENTITY(0u, max(_GLF_IDENTITY(0u, min(0u, 0u)), 0u)), 0u, 0u)))), (_GLF_IDENTITY(gl_NumWorkGroups, uvec3(0u, 0u, 0u) + (_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) | uvec3(_GLF_IDENTITY(0u, max(_GLF_IDENTITY(0u, min(0u, 0u)), 0u)), 0u, 0u))))) << uvec3(0u, 0u, 0u)), 0u)), min(~ (uvec4(_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, uvec3(0u, 0u, 0u) + (_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) | uvec3(0u, 0u, 0u)))), uvec3(0u, 0u, 0u) | (_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, uvec3(0u, 0u, 0u) + (_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) | uvec3(0u, 0u, 0u)))), (true ? _GLF_IDENTITY(gl_NumWorkGroups, uvec3(0u, 0u, 0u) + (_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) | uvec3(0u, 0u, 0u)))) : _GLF_FUZZED(uvec3(196320u, 78370u, 170563u)))))), 0u)), ~ (_GLF_IDENTITY(uvec4(_GLF_IDENTITY(gl_NumWorkGroups, uvec3(0u, 0u, 0u) + (_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) | uvec3(0u, 0u, 0u)))), 0u), (uvec4(_GLF_IDENTITY(gl_NumWorkGroups, uvec3(0u, 0u, 0u) + (_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, _GLF_IDENTITY(uvec3(uvec4(gl_NumWorkGroups, 0u)), ~ (~ (uvec3(uvec4(gl_NumWorkGroups, 0u)))))), (gl_NumWorkGroups) | uvec3(0u, 0u, 0u)))), 0u)) + uvec4(0u, 0u, 0u, 0u))))))), ~ _GLF_IDENTITY((~ (_GLF_IDENTITY(_GLF_IDENTITY(uvec4(_GLF_IDENTITY(gl_NumWorkGroups, uvec3(0u, 0u, 0u) + (_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) | _GLF_IDENTITY(uvec3(0u, 0u, 0u), (uvec3(0u, 0u, 0u)) | uvec3(0u, 0u, 0u))))), 0u), ~ _GLF_IDENTITY((_GLF_IDENTITY(~ (uvec4(_GLF_IDENTITY(gl_NumWorkGroups, uvec3(0u, 0u, 0u) + (_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) | uvec3(_GLF_IDENTITY(0u, min(0u, 0u)), 0u, 0u)), (true ? _GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) | uvec3(0u, 0u, 0u)) : _GLF_FUZZED(max(uvec3(184104u, 126446u, 49040u), bitfieldInsert(uvec3(30340u, 102112u, 154805u), uvec3(117633u, 6169u, 181566u), -42843, 14083))))))), 0u)), min(~ (uvec4(_GLF_IDENTITY(gl_NumWorkGroups, uvec3(0u, 0u, 0u) + (_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) | uvec3(0u, _GLF_IDENTITY(0u, _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec2(0u, (0u | 0u)), (true ? uvec2(0u, (0u | 0u)) : _GLF_FUZZED(uvec2(159693u, 189314u))))), min(_GLF_IDENTITY(uint(_GLF_IDENTITY(uvec2(0u, (0u | 0u)), (true ? uvec2(0u, (0u | 0u)) : _GLF_FUZZED(uvec2(159693u, 189314u))))), ~ (~ (uint(_GLF_IDENTITY(uvec2(0u, (0u | 0u)), (true ? uvec2(0u, (0u | 0u)) : _GLF_FUZZED(uvec2(159693u, 189314u)))))))), uint(_GLF_IDENTITY(uvec2(0u, (0u | 0u)), (true ? uvec2(0u, (0u | 0u)) : _GLF_FUZZED(uvec2(159693u, 189314u)))))))), 0u)))), 0u)), ~ (uvec4(_GLF_IDENTITY(gl_NumWorkGroups, uvec3(0u, 0u, 0u) + (_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) | uvec3(0u, 0u, 0u)))), 0u))))), ((_GLF_IDENTITY(~ (uvec4(_GLF_IDENTITY(gl_NumWorkGroups, uvec3(0u, 0u, 0u) + (_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) | uvec3(_GLF_IDENTITY(0u, min(0u, 0u)), 0u, 0u)), (true ? _GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) | uvec3(0u, 0u, 0u)) : _GLF_FUZZED(max(uvec3(184104u, 126446u, 49040u), bitfieldInsert(uvec3(30340u, 102112u, 154805u), uvec3(117633u, 6169u, 181566u), -42843, 14083))))))), 0u)), min(~ (uvec4(_GLF_IDENTITY(gl_NumWorkGroups, uvec3(0u, 0u, 0u) + (_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) | uvec3(0u, _GLF_IDENTITY(0u, _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec2(0u, (0u | 0u)), (true ? uvec2(0u, (0u | 0u)) : _GLF_FUZZED(uvec2(159693u, 189314u))))), min(_GLF_IDENTITY(uint(_GLF_IDENTITY(uvec2(0u, (0u | 0u)), (true ? uvec2(0u, (0u | 0u)) : _GLF_FUZZED(uvec2(159693u, 189314u))))), ~ (~ (uint(_GLF_IDENTITY(uvec2(0u, (0u | 0u)), (true ? uvec2(0u, (0u | 0u)) : _GLF_FUZZED(uvec2(159693u, 189314u)))))))), uint(_GLF_IDENTITY(uvec2(0u, (0u | 0u)), (true ? uvec2(0u, (0u | 0u)) : _GLF_FUZZED(uvec2(159693u, 189314u)))))))), 0u)))), 0u)), ~ (uvec4(_GLF_IDENTITY(gl_NumWorkGroups, uvec3(0u, 0u, 0u) + (_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) | uvec3(0u, 0u, 0u)))), 0u)))))) | uvec4(0u, 0u, 0u, 0u))), clamp(_GLF_IDENTITY(uvec4(_GLF_IDENTITY(gl_NumWorkGroups, uvec3(0u, _GLF_IDENTITY(0u, (0u) + 0u), 0u) + (_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) | uvec3(0u, 0u, 0u)))), 0u), ~ (_GLF_IDENTITY(~ (uvec4(_GLF_IDENTITY(gl_NumWorkGroups, uvec3(0u, 0u, 0u) + (_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) | uvec3(0u, 0u, 0u)))), 0u)), min(~ (uvec4(_GLF_IDENTITY(gl_NumWorkGroups, uvec3(0u, 0u, 0u) + (_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) | uvec3(0u, 0u, 0u)))), 0u)), ~ (uvec4(_GLF_IDENTITY(gl_NumWorkGroups, uvec3(_GLF_IDENTITY(0u, _GLF_IDENTITY((_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) << 0u)) | 0u)) << 0u, min(_GLF_IDENTITY((_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) << 0u)) | 0u)) << 0u, min((_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) << 0u)) | 0u)) << 0u, (_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) << 0u)) | 0u)) << 0u)), (_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) << 0u)) | 0u)) << 0u))), 0u, 0u) + (_GLF_IDENTITY(gl_NumWorkGroups, (_GLF_IDENTITY(gl_NumWorkGroups, uvec3(0u, 0u, 0u) ^ (gl_NumWorkGroups))) | uvec3(0u, 0u, 0u)))), 0u)))))), _GLF_IDENTITY(uvec4(_GLF_IDENTITY(gl_NumWorkGroups, uvec3(0u, 0u, 0u) + (_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) | uvec3(0u, 0u, 0u)))), 0u), ~ (_GLF_IDENTITY(~ (uvec4(_GLF_IDENTITY(gl_NumWorkGroups, uvec3(0u, 0u, 0u) + (_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) | uvec3(0u, 0u, 0u)))), 0u)), _GLF_IDENTITY(min(~ (uvec4(_GLF_IDENTITY(gl_NumWorkGroups, uvec3(0u, 0u, 0u) + (_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) | uvec3(0u, 0u, 0u)))), 0u)), ~ (uvec4(_GLF_IDENTITY(gl_NumWorkGroups, uvec3(0u, 0u, 0u) + (_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) | uvec3(0u, 0u, 0u)))), 0u))), (min(~ (uvec4(_GLF_IDENTITY(gl_NumWorkGroups, uvec3(0u, 0u, 0u) + (_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) | uvec3(0u, 0u, 0u)))), 0u)), ~ (uvec4(_GLF_IDENTITY(gl_NumWorkGroups, uvec3(0u, 0u, 0u) + (_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) | uvec3(0u, 0u, 0u)))), 0u)))) ^ uvec4(0u, 0u, 0u, 0u))))), _GLF_IDENTITY(uvec4(_GLF_IDENTITY(gl_NumWorkGroups, uvec3(0u, 0u, 0u) + (_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) | uvec3(0u, 0u, 0u)))), 0u), ~ (_GLF_IDENTITY(~ (uvec4(_GLF_IDENTITY(gl_NumWorkGroups, uvec3(0u, 0u, 0u) + (_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, ~ (_GLF_IDENTITY(~ (gl_NumWorkGroups), uvec3(uvec4(~ (gl_NumWorkGroups), 1u))))), (gl_NumWorkGroups) | uvec3(_GLF_IDENTITY(0u, ~ (~ (_GLF_IDENTITY(0u, min(_GLF_IDENTITY(0u, (0u) << 0u), 0u))))), 0u, 0u)))), 0u)), min(~ (uvec4(_GLF_IDENTITY(gl_NumWorkGroups, uvec3(0u, 0u, _GLF_IDENTITY(0u, uint(uvec4(0u, 1u, 1u, 1u)))) + _GLF_IDENTITY((_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) | uvec3(0u, 0u, 0u))), clamp((_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) | uvec3(0u, 0u, 0u))), _GLF_IDENTITY((_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) | uvec3(0u, 0u, 0u))), ((_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) | uvec3(0u, 0u, 0u)), (_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) | uvec3(0u, 0u, 0u)), (false ? _GLF_FUZZED(uvec3(111572u, 186621u, 161839u)) : _GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) | uvec3(0u, 0u, 0u))))) | uvec3(0u, 0u, 0u)))) | ((_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) | uvec3(0u, 0u, 0u))))), (_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) | uvec3(0u, 0u, 0u)))))), 0u)), ~ (uvec4(_GLF_IDENTITY(gl_NumWorkGroups, _GLF_IDENTITY(uvec3(0u, 0u, 0u) + (_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) | uvec3(0u, 0u, 0u))), max(uvec3(0u, 0u, 0u) + (_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) | uvec3(0u, 0u, 0u))), _GLF_IDENTITY(uvec3(0u, 0u, 0u) + (_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) | uvec3(0u, 0u, 0u))), (true ? uvec3(0u, 0u, 0u) + (_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) | uvec3(0u, 0u, 0u))) : _GLF_FUZZED(uvec3(187865u, 144895u, 122587u))))))), 0u)))))))))), clamp((~ (_GLF_IDENTITY(_GLF_IDENTITY(uvec4(_GLF_IDENTITY(gl_NumWorkGroups, uvec3(0u, 0u, 0u) + (_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) | _GLF_IDENTITY(uvec3(0u, 0u, 0u), (uvec3(0u, 0u, 0u)) | uvec3(0u, 0u, 0u))))), 0u), ~ _GLF_IDENTITY((_GLF_IDENTITY(~ (uvec4(_GLF_IDENTITY(gl_NumWorkGroups, uvec3(0u, 0u, 0u) + (_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) | uvec3(_GLF_IDENTITY(0u, min(0u, 0u)), 0u, 0u)), (true ? _GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) | uvec3(0u, 0u, 0u)) : _GLF_FUZZED(max(uvec3(184104u, 126446u, 49040u), bitfieldInsert(uvec3(30340u, 102112u, 154805u), uvec3(117633u, 6169u, 181566u), -42843, 14083))))))), 0u)), min(~ (uvec4(_GLF_IDENTITY(gl_NumWorkGroups, uvec3(0u, 0u, 0u) + (_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) | uvec3(0u, _GLF_IDENTITY(0u, _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec2(0u, (0u | 0u)), (true ? uvec2(0u, (0u | 0u)) : _GLF_FUZZED(uvec2(159693u, 189314u))))), min(_GLF_IDENTITY(uint(_GLF_IDENTITY(uvec2(0u, (0u | 0u)), (true ? uvec2(0u, (0u | 0u)) : _GLF_FUZZED(uvec2(159693u, 189314u))))), ~ (~ (uint(_GLF_IDENTITY(uvec2(0u, (0u | 0u)), (true ? uvec2(0u, (0u | 0u)) : _GLF_FUZZED(uvec2(159693u, 189314u)))))))), uint(_GLF_IDENTITY(uvec2(0u, (0u | 0u)), (true ? uvec2(0u, (0u | 0u)) : _GLF_FUZZED(uvec2(159693u, 189314u)))))))), 0u)))), 0u)), ~ (uvec4(_GLF_IDENTITY(gl_NumWorkGroups, uvec3(0u, 0u, 0u) + (_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) | uvec3(0u, 0u, 0u)))), 0u))))), ((_GLF_IDENTITY(~ (uvec4(_GLF_IDENTITY(gl_NumWorkGroups, uvec3(0u, 0u, 0u) + (_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) | uvec3(_GLF_IDENTITY(0u, min(0u, 0u)), 0u, 0u)), (true ? _GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) | uvec3(0u, 0u, 0u)) : _GLF_FUZZED(max(uvec3(184104u, 126446u, 49040u), bitfieldInsert(uvec3(30340u, 102112u, 154805u), uvec3(117633u, 6169u, 181566u), -42843, 14083))))))), 0u)), min(~ (uvec4(_GLF_IDENTITY(gl_NumWorkGroups, uvec3(0u, 0u, 0u) + (_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) | uvec3(0u, _GLF_IDENTITY(0u, _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec2(0u, (0u | 0u)), (true ? uvec2(0u, (0u | 0u)) : _GLF_FUZZED(uvec2(159693u, 189314u))))), min(_GLF_IDENTITY(uint(_GLF_IDENTITY(uvec2(0u, (0u | 0u)), (true ? uvec2(0u, (0u | 0u)) : _GLF_FUZZED(uvec2(159693u, 189314u))))), ~ (~ (uint(_GLF_IDENTITY(uvec2(0u, (0u | 0u)), (true ? uvec2(0u, (0u | 0u)) : _GLF_FUZZED(uvec2(159693u, 189314u)))))))), uint(_GLF_IDENTITY(uvec2(0u, (0u | 0u)), (true ? uvec2(0u, (0u | 0u)) : _GLF_FUZZED(uvec2(159693u, 189314u)))))))), 0u)))), 0u)), ~ (uvec4(_GLF_IDENTITY(gl_NumWorkGroups, uvec3(0u, 0u, 0u) + (_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) | uvec3(0u, 0u, 0u)))), 0u)))))) | uvec4(0u, 0u, 0u, 0u))), clamp(_GLF_IDENTITY(uvec4(_GLF_IDENTITY(gl_NumWorkGroups, uvec3(0u, _GLF_IDENTITY(0u, (0u) + 0u), 0u) + (_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) | uvec3(0u, 0u, 0u)))), 0u), ~ (_GLF_IDENTITY(~ (uvec4(_GLF_IDENTITY(gl_NumWorkGroups, uvec3(0u, 0u, 0u) + (_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) | uvec3(0u, 0u, 0u)))), 0u)), min(~ (uvec4(_GLF_IDENTITY(gl_NumWorkGroups, uvec3(0u, 0u, 0u) + (_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) | uvec3(0u, 0u, 0u)))), 0u)), ~ (uvec4(_GLF_IDENTITY(gl_NumWorkGroups, uvec3(_GLF_IDENTITY(0u, _GLF_IDENTITY((_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) << 0u)) | 0u)) << 0u, min(_GLF_IDENTITY((_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) << 0u)) | 0u)) << 0u, min((_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) << 0u)) | 0u)) << 0u, (_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) << 0u)) | 0u)) << 0u)), (_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) << 0u)) | 0u)) << 0u))), 0u, 0u) + (_GLF_IDENTITY(gl_NumWorkGroups, (_GLF_IDENTITY(gl_NumWorkGroups, uvec3(0u, 0u, 0u) ^ (gl_NumWorkGroups))) | uvec3(0u, 0u, 0u)))), 0u)))))), _GLF_IDENTITY(uvec4(_GLF_IDENTITY(gl_NumWorkGroups, uvec3(0u, 0u, 0u) + (_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) | uvec3(0u, 0u, 0u)))), 0u), ~ (_GLF_IDENTITY(~ (uvec4(_GLF_IDENTITY(gl_NumWorkGroups, uvec3(0u, 0u, 0u) + (_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) | uvec3(0u, 0u, 0u)))), 0u)), _GLF_IDENTITY(min(~ (uvec4(_GLF_IDENTITY(gl_NumWorkGroups, uvec3(0u, 0u, 0u) + (_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) | uvec3(0u, 0u, 0u)))), 0u)), ~ (uvec4(_GLF_IDENTITY(gl_NumWorkGroups, uvec3(0u, 0u, 0u) + (_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) | uvec3(0u, 0u, 0u)))), 0u))), (min(~ (uvec4(_GLF_IDENTITY(gl_NumWorkGroups, uvec3(0u, 0u, 0u) + (_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) | uvec3(0u, 0u, 0u)))), 0u)), ~ (uvec4(_GLF_IDENTITY(gl_NumWorkGroups, uvec3(0u, 0u, 0u) + (_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) | uvec3(0u, 0u, 0u)))), 0u)))) ^ uvec4(0u, 0u, 0u, 0u))))), _GLF_IDENTITY(uvec4(_GLF_IDENTITY(gl_NumWorkGroups, uvec3(0u, 0u, 0u) + (_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) | uvec3(0u, 0u, 0u)))), 0u), ~ (_GLF_IDENTITY(~ (uvec4(_GLF_IDENTITY(gl_NumWorkGroups, uvec3(0u, 0u, 0u) + (_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, ~ (_GLF_IDENTITY(~ (gl_NumWorkGroups), uvec3(uvec4(~ (gl_NumWorkGroups), 1u))))), (gl_NumWorkGroups) | uvec3(_GLF_IDENTITY(0u, ~ (~ (_GLF_IDENTITY(0u, min(_GLF_IDENTITY(0u, (0u) << 0u), 0u))))), 0u, 0u)))), 0u)), min(~ (uvec4(_GLF_IDENTITY(gl_NumWorkGroups, uvec3(0u, 0u, _GLF_IDENTITY(0u, uint(uvec4(0u, 1u, 1u, 1u)))) + _GLF_IDENTITY((_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) | uvec3(0u, 0u, 0u))), clamp((_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) | uvec3(0u, 0u, 0u))), _GLF_IDENTITY((_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) | uvec3(0u, 0u, 0u))), ((_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) | uvec3(0u, 0u, 0u)), (_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) | uvec3(0u, 0u, 0u)), (false ? _GLF_FUZZED(uvec3(111572u, 186621u, 161839u)) : _GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) | uvec3(0u, 0u, 0u))))) | uvec3(0u, 0u, 0u)))) | ((_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) | uvec3(0u, 0u, 0u))))), (_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) | uvec3(0u, 0u, 0u)))))), 0u)), ~ (uvec4(_GLF_IDENTITY(gl_NumWorkGroups, _GLF_IDENTITY(uvec3(0u, 0u, 0u) + (_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) | uvec3(0u, 0u, 0u))), max(uvec3(0u, 0u, 0u) + (_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) | uvec3(0u, 0u, 0u))), _GLF_IDENTITY(uvec3(0u, 0u, 0u) + (_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) | uvec3(0u, 0u, 0u))), (true ? uvec3(0u, 0u, 0u) + (_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) | uvec3(0u, 0u, 0u))) : _GLF_FUZZED(uvec3(187865u, 144895u, 122587u))))))), 0u)))))))))), (~ (_GLF_IDENTITY(_GLF_IDENTITY(uvec4(_GLF_IDENTITY(gl_NumWorkGroups, uvec3(0u, 0u, 0u) + (_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) | _GLF_IDENTITY(uvec3(0u, 0u, 0u), (uvec3(0u, 0u, 0u)) | uvec3(0u, 0u, 0u))))), 0u), ~ _GLF_IDENTITY((_GLF_IDENTITY(~ (uvec4(_GLF_IDENTITY(gl_NumWorkGroups, uvec3(0u, 0u, 0u) + (_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) | uvec3(_GLF_IDENTITY(0u, min(0u, 0u)), 0u, 0u)), (true ? _GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) | uvec3(0u, 0u, 0u)) : _GLF_FUZZED(max(uvec3(184104u, 126446u, 49040u), bitfieldInsert(uvec3(30340u, 102112u, 154805u), uvec3(117633u, 6169u, 181566u), -42843, 14083))))))), 0u)), min(~ (uvec4(_GLF_IDENTITY(gl_NumWorkGroups, uvec3(0u, 0u, 0u) + (_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) | uvec3(0u, _GLF_IDENTITY(0u, _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec2(0u, (0u | 0u)), (true ? uvec2(0u, (0u | 0u)) : _GLF_FUZZED(uvec2(159693u, 189314u))))), min(_GLF_IDENTITY(uint(_GLF_IDENTITY(uvec2(0u, (0u | 0u)), (true ? uvec2(0u, (0u | 0u)) : _GLF_FUZZED(uvec2(159693u, 189314u))))), ~ (~ (uint(_GLF_IDENTITY(uvec2(0u, (0u | 0u)), (true ? uvec2(0u, (0u | 0u)) : _GLF_FUZZED(uvec2(159693u, 189314u)))))))), uint(_GLF_IDENTITY(uvec2(0u, (0u | 0u)), (true ? uvec2(0u, (0u | 0u)) : _GLF_FUZZED(uvec2(159693u, 189314u)))))))), 0u)))), 0u)), ~ (uvec4(_GLF_IDENTITY(gl_NumWorkGroups, uvec3(0u, 0u, 0u) + (_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) | uvec3(0u, 0u, 0u)))), 0u))))), ((_GLF_IDENTITY(~ (uvec4(_GLF_IDENTITY(gl_NumWorkGroups, uvec3(0u, 0u, 0u) + (_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) | uvec3(_GLF_IDENTITY(0u, min(0u, 0u)), 0u, 0u)), (true ? _GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) | uvec3(0u, 0u, 0u)) : _GLF_FUZZED(max(uvec3(184104u, 126446u, 49040u), bitfieldInsert(uvec3(30340u, 102112u, 154805u), uvec3(117633u, 6169u, 181566u), -42843, 14083))))))), 0u)), min(~ (uvec4(_GLF_IDENTITY(gl_NumWorkGroups, uvec3(0u, 0u, 0u) + (_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) | uvec3(0u, _GLF_IDENTITY(0u, _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec2(0u, (0u | 0u)), (true ? uvec2(0u, (0u | 0u)) : _GLF_FUZZED(uvec2(159693u, 189314u))))), min(_GLF_IDENTITY(uint(_GLF_IDENTITY(uvec2(0u, (0u | 0u)), (true ? uvec2(0u, (0u | 0u)) : _GLF_FUZZED(uvec2(159693u, 189314u))))), ~ (~ (uint(_GLF_IDENTITY(uvec2(0u, (0u | 0u)), (true ? uvec2(0u, (0u | 0u)) : _GLF_FUZZED(uvec2(159693u, 189314u)))))))), uint(_GLF_IDENTITY(uvec2(0u, (0u | 0u)), (true ? uvec2(0u, (0u | 0u)) : _GLF_FUZZED(uvec2(159693u, 189314u)))))))), 0u)))), 0u)), ~ (uvec4(_GLF_IDENTITY(gl_NumWorkGroups, uvec3(0u, 0u, 0u) + (_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) | uvec3(0u, 0u, 0u)))), 0u)))))) | uvec4(0u, 0u, 0u, 0u))), clamp(_GLF_IDENTITY(uvec4(_GLF_IDENTITY(gl_NumWorkGroups, uvec3(0u, _GLF_IDENTITY(0u, (0u) + 0u), 0u) + (_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) | uvec3(0u, 0u, 0u)))), 0u), ~ (_GLF_IDENTITY(~ (uvec4(_GLF_IDENTITY(gl_NumWorkGroups, uvec3(0u, 0u, 0u) + (_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) | uvec3(0u, 0u, 0u)))), 0u)), min(~ (uvec4(_GLF_IDENTITY(gl_NumWorkGroups, uvec3(0u, 0u, 0u) + (_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) | uvec3(0u, 0u, 0u)))), 0u)), ~ (uvec4(_GLF_IDENTITY(gl_NumWorkGroups, uvec3(_GLF_IDENTITY(0u, _GLF_IDENTITY((_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) << 0u)) | 0u)) << 0u, min(_GLF_IDENTITY((_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) << 0u)) | 0u)) << 0u, min((_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) << 0u)) | 0u)) << 0u, (_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) << 0u)) | 0u)) << 0u)), (_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) << 0u)) | 0u)) << 0u))), 0u, 0u) + (_GLF_IDENTITY(gl_NumWorkGroups, (_GLF_IDENTITY(gl_NumWorkGroups, uvec3(0u, 0u, 0u) ^ (gl_NumWorkGroups))) | uvec3(0u, 0u, 0u)))), 0u)))))), _GLF_IDENTITY(uvec4(_GLF_IDENTITY(gl_NumWorkGroups, uvec3(0u, 0u, 0u) + (_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) | uvec3(0u, 0u, 0u)))), 0u), ~ (_GLF_IDENTITY(~ (uvec4(_GLF_IDENTITY(gl_NumWorkGroups, uvec3(0u, 0u, 0u) + (_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) | uvec3(0u, 0u, 0u)))), 0u)), _GLF_IDENTITY(min(~ (uvec4(_GLF_IDENTITY(gl_NumWorkGroups, uvec3(0u, 0u, 0u) + (_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) | uvec3(0u, 0u, 0u)))), 0u)), ~ (uvec4(_GLF_IDENTITY(gl_NumWorkGroups, uvec3(0u, 0u, 0u) + (_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) | uvec3(0u, 0u, 0u)))), 0u))), (min(~ (uvec4(_GLF_IDENTITY(gl_NumWorkGroups, uvec3(0u, 0u, 0u) + (_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) | uvec3(0u, 0u, 0u)))), 0u)), ~ (uvec4(_GLF_IDENTITY(gl_NumWorkGroups, uvec3(0u, 0u, 0u) + (_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) | uvec3(0u, 0u, 0u)))), 0u)))) ^ uvec4(0u, 0u, 0u, 0u))))), _GLF_IDENTITY(uvec4(_GLF_IDENTITY(gl_NumWorkGroups, uvec3(0u, 0u, 0u) + (_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) | uvec3(0u, 0u, 0u)))), 0u), ~ (_GLF_IDENTITY(~ (uvec4(_GLF_IDENTITY(gl_NumWorkGroups, uvec3(0u, 0u, 0u) + (_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, ~ (_GLF_IDENTITY(~ (gl_NumWorkGroups), uvec3(uvec4(~ (gl_NumWorkGroups), 1u))))), (gl_NumWorkGroups) | uvec3(_GLF_IDENTITY(0u, ~ (~ (_GLF_IDENTITY(0u, min(_GLF_IDENTITY(0u, (0u) << 0u), 0u))))), 0u, 0u)))), 0u)), min(~ (uvec4(_GLF_IDENTITY(gl_NumWorkGroups, uvec3(0u, 0u, _GLF_IDENTITY(0u, uint(uvec4(0u, 1u, 1u, 1u)))) + _GLF_IDENTITY((_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) | uvec3(0u, 0u, 0u))), clamp((_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) | uvec3(0u, 0u, 0u))), _GLF_IDENTITY((_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) | uvec3(0u, 0u, 0u))), ((_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) | uvec3(0u, 0u, 0u)), (_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) | uvec3(0u, 0u, 0u)), (false ? _GLF_FUZZED(uvec3(111572u, 186621u, 161839u)) : _GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) | uvec3(0u, 0u, 0u))))) | uvec3(0u, 0u, 0u)))) | ((_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) | uvec3(0u, 0u, 0u))))), (_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) | uvec3(0u, 0u, 0u)))))), 0u)), ~ (uvec4(_GLF_IDENTITY(gl_NumWorkGroups, _GLF_IDENTITY(uvec3(0u, 0u, 0u) + (_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) | uvec3(0u, 0u, 0u))), max(uvec3(0u, 0u, 0u) + (_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) | uvec3(0u, 0u, 0u))), _GLF_IDENTITY(uvec3(0u, 0u, 0u) + (_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) | uvec3(0u, 0u, 0u))), (true ? uvec3(0u, 0u, 0u) + (_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) | uvec3(0u, 0u, 0u))) : _GLF_FUZZED(uvec3(187865u, 144895u, 122587u))))))), 0u)))))))))), (~ (_GLF_IDENTITY(_GLF_IDENTITY(uvec4(_GLF_IDENTITY(gl_NumWorkGroups, uvec3(0u, 0u, 0u) + (_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) | _GLF_IDENTITY(uvec3(0u, 0u, 0u), (uvec3(0u, 0u, 0u)) | uvec3(0u, 0u, 0u))))), 0u), ~ _GLF_IDENTITY((_GLF_IDENTITY(~ (uvec4(_GLF_IDENTITY(gl_NumWorkGroups, uvec3(0u, 0u, 0u) + (_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) | uvec3(_GLF_IDENTITY(0u, min(0u, 0u)), 0u, 0u)), (true ? _GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) | uvec3(0u, 0u, 0u)) : _GLF_FUZZED(max(uvec3(184104u, 126446u, 49040u), bitfieldInsert(uvec3(30340u, 102112u, 154805u), uvec3(117633u, 6169u, 181566u), -42843, 14083))))))), 0u)), min(~ (uvec4(_GLF_IDENTITY(gl_NumWorkGroups, uvec3(0u, 0u, 0u) + (_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) | uvec3(0u, _GLF_IDENTITY(0u, _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec2(0u, (0u | 0u)), (true ? uvec2(0u, (0u | 0u)) : _GLF_FUZZED(uvec2(159693u, 189314u))))), min(_GLF_IDENTITY(uint(_GLF_IDENTITY(uvec2(0u, (0u | 0u)), (true ? uvec2(0u, (0u | 0u)) : _GLF_FUZZED(uvec2(159693u, 189314u))))), ~ (~ (uint(_GLF_IDENTITY(uvec2(0u, (0u | 0u)), (true ? uvec2(0u, (0u | 0u)) : _GLF_FUZZED(uvec2(159693u, 189314u)))))))), uint(_GLF_IDENTITY(uvec2(0u, (0u | 0u)), (true ? uvec2(0u, (0u | 0u)) : _GLF_FUZZED(uvec2(159693u, 189314u)))))))), 0u)))), 0u)), ~ (uvec4(_GLF_IDENTITY(gl_NumWorkGroups, uvec3(0u, 0u, 0u) + (_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) | uvec3(0u, 0u, 0u)))), 0u))))), ((_GLF_IDENTITY(~ (uvec4(_GLF_IDENTITY(gl_NumWorkGroups, uvec3(0u, 0u, 0u) + (_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) | uvec3(_GLF_IDENTITY(0u, min(0u, 0u)), 0u, 0u)), (true ? _GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) | uvec3(0u, 0u, 0u)) : _GLF_FUZZED(max(uvec3(184104u, 126446u, 49040u), bitfieldInsert(uvec3(30340u, 102112u, 154805u), uvec3(117633u, 6169u, 181566u), -42843, 14083))))))), 0u)), min(~ (uvec4(_GLF_IDENTITY(gl_NumWorkGroups, uvec3(0u, 0u, 0u) + (_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) | uvec3(0u, _GLF_IDENTITY(0u, _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec2(0u, (0u | 0u)), (true ? uvec2(0u, (0u | 0u)) : _GLF_FUZZED(uvec2(159693u, 189314u))))), min(_GLF_IDENTITY(uint(_GLF_IDENTITY(uvec2(0u, (0u | 0u)), (true ? uvec2(0u, (0u | 0u)) : _GLF_FUZZED(uvec2(159693u, 189314u))))), ~ (~ (uint(_GLF_IDENTITY(uvec2(0u, (0u | 0u)), (true ? uvec2(0u, (0u | 0u)) : _GLF_FUZZED(uvec2(159693u, 189314u)))))))), uint(_GLF_IDENTITY(uvec2(0u, (0u | 0u)), (true ? uvec2(0u, (0u | 0u)) : _GLF_FUZZED(uvec2(159693u, 189314u)))))))), 0u)))), 0u)), ~ (uvec4(_GLF_IDENTITY(gl_NumWorkGroups, uvec3(0u, 0u, 0u) + (_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) | uvec3(0u, 0u, 0u)))), 0u)))))) | uvec4(0u, 0u, 0u, 0u))), clamp(_GLF_IDENTITY(uvec4(_GLF_IDENTITY(gl_NumWorkGroups, uvec3(0u, _GLF_IDENTITY(0u, (0u) + 0u), 0u) + (_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) | uvec3(0u, 0u, 0u)))), 0u), ~ (_GLF_IDENTITY(~ (uvec4(_GLF_IDENTITY(gl_NumWorkGroups, uvec3(0u, 0u, 0u) + (_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) | uvec3(0u, 0u, 0u)))), 0u)), min(~ (uvec4(_GLF_IDENTITY(gl_NumWorkGroups, uvec3(0u, 0u, 0u) + (_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) | uvec3(0u, 0u, 0u)))), 0u)), ~ (uvec4(_GLF_IDENTITY(gl_NumWorkGroups, uvec3(_GLF_IDENTITY(0u, _GLF_IDENTITY((_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) << 0u)) | 0u)) << 0u, min(_GLF_IDENTITY((_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) << 0u)) | 0u)) << 0u, min((_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) << 0u)) | 0u)) << 0u, (_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) << 0u)) | 0u)) << 0u)), (_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) << 0u)) | 0u)) << 0u))), 0u, 0u) + (_GLF_IDENTITY(gl_NumWorkGroups, (_GLF_IDENTITY(gl_NumWorkGroups, uvec3(0u, 0u, 0u) ^ (gl_NumWorkGroups))) | uvec3(0u, 0u, 0u)))), 0u)))))), _GLF_IDENTITY(uvec4(_GLF_IDENTITY(gl_NumWorkGroups, uvec3(0u, 0u, 0u) + (_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) | uvec3(0u, 0u, 0u)))), 0u), ~ (_GLF_IDENTITY(~ (uvec4(_GLF_IDENTITY(gl_NumWorkGroups, uvec3(0u, 0u, 0u) + (_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) | uvec3(0u, 0u, 0u)))), 0u)), _GLF_IDENTITY(min(~ (uvec4(_GLF_IDENTITY(gl_NumWorkGroups, uvec3(0u, 0u, 0u) + (_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) | uvec3(0u, 0u, 0u)))), 0u)), ~ (uvec4(_GLF_IDENTITY(gl_NumWorkGroups, uvec3(0u, 0u, 0u) + (_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) | uvec3(0u, 0u, 0u)))), 0u))), (min(~ (uvec4(_GLF_IDENTITY(gl_NumWorkGroups, uvec3(0u, 0u, 0u) + (_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) | uvec3(0u, 0u, 0u)))), 0u)), ~ (uvec4(_GLF_IDENTITY(gl_NumWorkGroups, uvec3(0u, 0u, 0u) + (_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) | uvec3(0u, 0u, 0u)))), 0u)))) ^ uvec4(0u, 0u, 0u, 0u))))), _GLF_IDENTITY(uvec4(_GLF_IDENTITY(gl_NumWorkGroups, uvec3(0u, 0u, 0u) + (_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) | uvec3(0u, 0u, 0u)))), 0u), ~ (_GLF_IDENTITY(~ (uvec4(_GLF_IDENTITY(gl_NumWorkGroups, uvec3(0u, 0u, 0u) + (_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, ~ (_GLF_IDENTITY(~ (gl_NumWorkGroups), uvec3(uvec4(~ (gl_NumWorkGroups), 1u))))), (gl_NumWorkGroups) | uvec3(_GLF_IDENTITY(0u, ~ (~ (_GLF_IDENTITY(0u, min(_GLF_IDENTITY(0u, (0u) << 0u), 0u))))), 0u, 0u)))), 0u)), min(~ (uvec4(_GLF_IDENTITY(gl_NumWorkGroups, uvec3(0u, 0u, _GLF_IDENTITY(0u, uint(uvec4(0u, 1u, 1u, 1u)))) + _GLF_IDENTITY((_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) | uvec3(0u, 0u, 0u))), clamp((_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) | uvec3(0u, 0u, 0u))), _GLF_IDENTITY((_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) | uvec3(0u, 0u, 0u))), ((_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) | uvec3(0u, 0u, 0u)), (_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) | uvec3(0u, 0u, 0u)), (false ? _GLF_FUZZED(uvec3(111572u, 186621u, 161839u)) : _GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) | uvec3(0u, 0u, 0u))))) | uvec3(0u, 0u, 0u)))) | ((_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) | uvec3(0u, 0u, 0u))))), (_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) | uvec3(0u, 0u, 0u)))))), 0u)), ~ (uvec4(_GLF_IDENTITY(gl_NumWorkGroups, _GLF_IDENTITY(uvec3(0u, 0u, 0u) + (_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) | uvec3(0u, 0u, 0u))), max(uvec3(0u, 0u, 0u) + (_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) | uvec3(0u, 0u, 0u))), _GLF_IDENTITY(uvec3(0u, 0u, 0u) + (_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) | uvec3(0u, 0u, 0u))), (true ? uvec3(0u, 0u, 0u) + (_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) | uvec3(0u, 0u, 0u))) : _GLF_FUZZED(uvec3(187865u, 144895u, 122587u))))))), 0u)))))))))))))), (uvec3(_GLF_IDENTITY(uvec4(_GLF_IDENTITY(gl_NumWorkGroups, _GLF_IDENTITY(uvec3(0u, 0u, 0u), uvec3(uvec4(uvec3(0u, 0u, 0u), 1u))) + (_GLF_IDENTITY(gl_NumWorkGroups, (_GLF_IDENTITY(gl_NumWorkGroups, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED((uvec3(32853u, 123794u, 120067u) - subgroup_size)) : gl_NumWorkGroups))) | uvec3(_GLF_IDENTITY(0u, (0u) ^ 0u), 0u, 0u)))), 0u), ~ (_GLF_IDENTITY(~ (uvec4(_GLF_IDENTITY(gl_NumWorkGroups, uvec3(0u, 0u, 0u) + _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) | uvec3(0u, 0u, 0u)), (_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) | uvec3(0u, _GLF_IDENTITY(0u, _GLF_IDENTITY(uint(uint(0u)), (uint(uint(0u))) | 0u)), 0u))) - uvec3(0u, 0u, 0u))), ((_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) | uvec3(0u, 0u, 0u)))) >> uvec3(0u, 0u, 0u))), 0u)), min(~ _GLF_IDENTITY((uvec4(_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, uvec3(0u, 0u, 0u) + (_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, _GLF_IDENTITY((gl_NumWorkGroups) | uvec3(0u, 0u, 0u), ~ (_GLF_IDENTITY(~ ((gl_NumWorkGroups) | uvec3(0u, 0u, 0u)), max(~ ((gl_NumWorkGroups) | uvec3(0u, 0u, 0u)), ~ ((gl_NumWorkGroups) | uvec3(0u, 0u, 0u))))))), max(_GLF_IDENTITY(gl_NumWorkGroups, _GLF_IDENTITY((gl_NumWorkGroups) | uvec3(0u, 0u, 0u), ~ (_GLF_IDENTITY(~ ((gl_NumWorkGroups) | uvec3(0u, 0u, 0u)), max(~ ((gl_NumWorkGroups) | uvec3(0u, 0u, 0u)), ~ ((gl_NumWorkGroups) | uvec3(0u, 0u, 0u))))))), _GLF_IDENTITY(gl_NumWorkGroups, _GLF_IDENTITY((gl_NumWorkGroups) | uvec3(0u, 0u, 0u), ~ (_GLF_IDENTITY(~ ((gl_NumWorkGroups) | uvec3(0u, 0u, 0u)), max(~ ((gl_NumWorkGroups) | uvec3(0u, 0u, 0u)), ~ ((gl_NumWorkGroups) | uvec3(0u, 0u, 0u))))))))))), clamp(_GLF_IDENTITY(gl_NumWorkGroups, uvec3(0u, 0u, 0u) + (_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) | uvec3(0u, 0u, 0u)))), _GLF_IDENTITY(gl_NumWorkGroups, uvec3(0u, 0u, 0u) + (_GLF_IDENTITY(gl_NumWorkGroups, _GLF_IDENTITY((gl_NumWorkGroups), ((gl_NumWorkGroups)) - uvec3(0u, 0u, 0u)) | uvec3(0u, 0u, 0u)))), _GLF_IDENTITY(gl_NumWorkGroups, uvec3(_GLF_IDENTITY(0u, 1u * (_GLF_IDENTITY(0u, max(0u, 0u)))), 0u, 0u) + (_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) | uvec3(0u, 0u, 0u)))))), 0u)), ((uvec4(_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, uvec3(0u, 0u, 0u) + (_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) | uvec3(0u, 0u, 0u)))), clamp(_GLF_IDENTITY(gl_NumWorkGroups, uvec3(0u, 0u, 0u) + (_GLF_IDENTITY(gl_NumWorkGroups, (_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) | (gl_NumWorkGroups))) | uvec3(0u, 0u, 0u)))), _GLF_IDENTITY(gl_NumWorkGroups, uvec3(0u, 0u, 0u) + (_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) | _GLF_IDENTITY(uvec3(0u, 0u, 0u), (true ? uvec3(0u, 0u, 0u) : _GLF_FUZZED(uvec3(151865u, 132289u, 853u))))))), _GLF_IDENTITY(gl_NumWorkGroups, uvec3(0u, 0u, 0u) + (_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) | uvec3(0u, 0u, 0u)))))), 0u))) ^ uvec4(0u, 0u, 0u, 0u)), ~ (uvec4(_GLF_IDENTITY(gl_NumWorkGroups, uvec3(0u, 0u, 0u) + (_GLF_IDENTITY(gl_NumWorkGroups, _GLF_IDENTITY((gl_NumWorkGroups) | uvec3(0u, 0u, 0u), (false ? _GLF_FUZZED(uvec3(60063u, 142421u, 29426u)) : (gl_NumWorkGroups) | uvec3(0u, 0u, 0u)))))), 0u)))))))) | (_GLF_IDENTITY(uvec3(_GLF_IDENTITY(uvec4(_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, uvec3(gl_NumWorkGroups[0], gl_NumWorkGroups[1], gl_NumWorkGroups[2])), uvec3(_GLF_IDENTITY(0u, (0u) - (0u << _GLF_IDENTITY(uint(5u), uint(5u)))), 0u, 0u) + (_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) | uvec3(0u, 0u, 0u)))), 0u), ~ (_GLF_IDENTITY(_GLF_IDENTITY(~ (uvec4(_GLF_IDENTITY(gl_NumWorkGroups, uvec3(0u, 0u, 0u) + (_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) | uvec3(0u, _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, clamp(0u, _GLF_IDENTITY(0u, (0u) + 0u), 0u))) >> 0u), 0u)))), _GLF_IDENTITY(0u, ~ (~ (0u))))), min(~ (uvec4(_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, uvec3(0u, 0u, 0u) + (_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) | uvec3(_GLF_IDENTITY(0u, ~ (~ (0u))), 0u, 0u)))), (uvec3(0u, 0u, 0u) << _GLF_IDENTITY(uvec3(2u), uvec3(2u))) | (_GLF_IDENTITY(gl_NumWorkGroups, uvec3(0u, 0u, 0u) + (_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) | uvec3(0u, 0u, 0u)))))), _GLF_IDENTITY(0u, _GLF_IDENTITY(uint(uvec2(0u, 0u)), uint(_GLF_IDENTITY(uvec3(uint(uvec2(0u, 0u)), 0u, 1u), min(uvec3(uint(uvec2(0u, 0u)), 0u, 1u), uvec3(uint(uvec2(0u, 0u)), 0u, 1u)))))))), ~ (uvec4(_GLF_IDENTITY(gl_NumWorkGroups, uvec3(0u, 0u, 0u) + (_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) | uvec3(0u, 0u, _GLF_IDENTITY(0u, 0u + (0u)))))), 0u)))), (_GLF_IDENTITY(~ (uvec4(_GLF_IDENTITY(gl_NumWorkGroups, uvec3(0u, 0u, 0u) + (_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) | uvec3(0u, _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, clamp(0u, _GLF_IDENTITY(0u, (0u) + 0u), 0u))) >> 0u), 0u)))), _GLF_IDENTITY(0u, ~ (~ (0u))))), min(~ (uvec4(_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, uvec3(0u, 0u, 0u) + (_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) | uvec3(_GLF_IDENTITY(0u, ~ (~ (0u))), 0u, 0u)))), (uvec3(0u, 0u, 0u) << _GLF_IDENTITY(uvec3(2u), uvec3(2u))) | (_GLF_IDENTITY(gl_NumWorkGroups, uvec3(0u, 0u, 0u) + (_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) | uvec3(0u, 0u, 0u)))))), _GLF_IDENTITY(0u, _GLF_IDENTITY(uint(uvec2(0u, 0u)), uint(_GLF_IDENTITY(uvec3(uint(uvec2(0u, 0u)), 0u, 1u), min(uvec3(uint(uvec2(0u, 0u)), 0u, 1u), uvec3(uint(uvec2(0u, 0u)), 0u, 1u)))))))), ~ (uvec4(_GLF_IDENTITY(gl_NumWorkGroups, uvec3(0u, 0u, 0u) + (_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) | uvec3(0u, 0u, _GLF_IDENTITY(0u, 0u + (0u)))))), 0u))))) ^ uvec4(0u, 0u, 0u, 0u))))), uvec3(uvec4(uvec3(_GLF_IDENTITY(uvec4(_GLF_IDENTITY(gl_NumWorkGroups, uvec3(0u, 0u, 0u) + (_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) | uvec3(0u, _GLF_IDENTITY(0u, 0u | (0u)), 0u)))), 0u), ~ (_GLF_IDENTITY(~ (uvec4(_GLF_IDENTITY(gl_NumWorkGroups, uvec3(0u, 0u, 0u) + (_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) | uvec3(_GLF_IDENTITY(0u, (0u) + 0u), 0u, 0u)))), 0u)), min(~ (uvec4(_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, ~ (~ (_GLF_IDENTITY(gl_NumWorkGroups, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? gl_NumWorkGroups : _GLF_FUZZED(uvec3(29051u, 33961u, 73355u))))))), uvec3(0u, _GLF_IDENTITY(0u, (0u) * 1u), 0u) + (_GLF_IDENTITY(gl_NumWorkGroups, _GLF_IDENTITY((gl_NumWorkGroups) | uvec3(0u, 0u, 0u), ~ (~ ((gl_NumWorkGroups) | uvec3(0u, 0u, 0u))))))), 0u)), _GLF_IDENTITY(~ (uvec4(_GLF_IDENTITY(gl_NumWorkGroups, uvec3(0u, 0u, 0u) + (_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) | _GLF_IDENTITY(uvec3(0u, 0u, 0u), uvec3(0u, 0u, 0u) ^ (uvec3(0u, 0u, 0u)))))), 0u)), min(~ (uvec4(_GLF_IDENTITY(gl_NumWorkGroups, uvec3(0u, 0u, 0u) + (_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) | _GLF_IDENTITY(uvec3(0u, 0u, 0u), uvec3(0u, 0u, 0u) ^ (uvec3(0u, 0u, 0u)))))), 0u)), _GLF_IDENTITY(~ (uvec4(_GLF_IDENTITY(gl_NumWorkGroups, uvec3(0u, 0u, 0u) + (_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) | _GLF_IDENTITY(uvec3(0u, 0u, 0u), uvec3(0u, 0u, 0u) ^ (uvec3(0u, 0u, 0u)))))), 0u)), (~ (uvec4(_GLF_IDENTITY(gl_NumWorkGroups, uvec3(0u, 0u, 0u) + (_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) | _GLF_IDENTITY(uvec3(0u, 0u, 0u), uvec3(0u, 0u, 0u) ^ (uvec3(0u, 0u, 0u)))))), 0u))) | (~ (uvec4(_GLF_IDENTITY(gl_NumWorkGroups, uvec3(0u, 0u, 0u) + (_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) | _GLF_IDENTITY(uvec3(0u, 0u, 0u), uvec3(0u, 0u, 0u) ^ (uvec3(0u, 0u, 0u)))))), 0u))))))))))), 1u)))))).x;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(injectionSwitch) : _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))))).y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
  {
  }
 else
  {
   if(_GLF_DEAD(false))
    {
     for(int _injected_loop_counter = int(_GLF_ONE(1.0, injectionSwitch.y)); _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
      {
       if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
        {
         return;
        }
       else
        {
        }
      }
    }
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (false))))))))
  return;
 uint workgroup_size = gl_WorkGroupSize.x;
 if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
  {
   for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
    {
     barrier();
    }
  }
 uint workgroup_id = gl_WorkGroupID.x;
 uint workgroup_base = _GLF_IDENTITY(workgroup_size, max(workgroup_size, workgroup_size)) * _GLF_IDENTITY(workgroup_id, 0u | _GLF_IDENTITY((workgroup_id), ((workgroup_id)) << uint(_GLF_ZERO(0.0, injectionSwitch.x))));
 uint virtual_gid = workgroup_base + _GLF_struct_replacement_3._f0._f1.subgroup_id * subgroup_size + subgroup_local_id;
 uint next_virtual_gid = workgroup_base + _GLF_struct_replacement_3._f0._f1.subgroup_id * subgroup_size + ((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, 0u | (subgroup_local_id)) + 1, (_GLF_IDENTITY(subgroup_local_id, 0u | (subgroup_local_id)) + 1) >> 0u)) % subgroup_size);
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) || false)))))
  return;
 if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
  }
 else
  {
   do
    {
     if(_GLF_WRAPPED_IF_TRUE(true))
      {
       atomicStore(buf[virtual_gid], uint(1), 4, 64, 4);
      }
     else
      {
      }
    }
   while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, false || (false))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), (_GLF_IDENTITY(false, bool(bvec2(false, true)))) && true), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, false || (false))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), (_GLF_IDENTITY(false, bool(bvec2(false, true)))) && true), bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, false || (false))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), (_GLF_IDENTITY(false, bool(bvec2(false, true)))) && true), true, false, false)))))), true && (_GLF_IDENTITY(false, (false) || _GLF_FALSE(_GLF_IDENTITY(false, true && (false)), (injectionSwitch.x > injectionSwitch.y)))))));
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! (_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, (false) && true)))))))))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
      }
     else
      {
       for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
            barrier();
           return;
          }
         barrier();
        }
      }
    }
   for(int _injected_loop_counter = 0; _GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter != (0 ^ 1)), ! (_GLF_IDENTITY(! (_GLF_WRAPPED_LOOP(_injected_loop_counter != (0 ^ 1))), false || (! (_GLF_WRAPPED_LOOP(_injected_loop_counter != (0 ^ 1))))))); _injected_loop_counter ++)
    {
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(true ? injectionSwitch.x : _GLF_FUZZED(-7.6), clamp(true ? injectionSwitch.x : _GLF_FUZZED(-7.6), _GLF_IDENTITY(true ? injectionSwitch.x : _GLF_FUZZED(-7.6), (true ? injectionSwitch.x : _GLF_FUZZED(-7.6)) / 1.0), _GLF_IDENTITY(true ? injectionSwitch.x : _GLF_FUZZED(-7.6), 0.0 + (true ? injectionSwitch.x : _GLF_FUZZED(-7.6))))))) > injectionSwitch.y))))
    return;
  }
 if(subgroup_local_id + _GLF_IDENTITY(1, clamp(1, _GLF_IDENTITY(_GLF_IDENTITY(1, min(1, 1)), (_GLF_IDENTITY(1, min(1, 1))) / 1), 1)) < subgroup_size)
  {
   for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, true, true, true)))))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
      }
     else
      {
       return;
      }
    }
   do
    {
     if(_GLF_WRAPPED_IF_TRUE(true))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_WRAPPED_IF_TRUE(true))
            {
             return;
            }
           else
            {
            }
          }
         if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
          }
         else
          {
           return;
          }
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
        }
      }
     else
      {
      }
    }
   while(_GLF_WRAPPED_LOOP(false));
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
    }
   else
    {
     atomicStore(buf[next_virtual_gid], uint(2), _GLF_IDENTITY(4, clamp(4, 4, 4)), _GLF_IDENTITY(64, ~ (_GLF_IDENTITY(~ (64), _GLF_IDENTITY(int(ivec2(_GLF_IDENTITY(~ (64), int(ivec4(~ (64), 1, 1, 0))), 1)), (int(ivec2(_GLF_IDENTITY(~ (64), int(ivec4(~ (64), 1, 1, 0))), 1))) ^ 0)))), _GLF_IDENTITY(4, max(4, 4)));
    }
   subgroupAll(false);
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_WRAPPED_IF_FALSE(false))
        {
        }
       else
        {
         return;
        }
      }
    }
   else
    {
    }
   if(_GLF_DEAD(false))
    return;
  }
 else
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_WRAPPED_IF_TRUE(true))
      {
       barrier();
      }
     else
      {
       if(_GLF_DEAD(false))
        return;
      }
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, (false) || false), (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(160.608), _GLF_FUZZED(vec4(310.131, -9.9, -4.0, 9.6).s)), _GLF_IDENTITY(vec2((injectionSwitch)[0], (injectionSwitch)[1]), min(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2((injectionSwitch)[0], (injectionSwitch)[1]))), bvec2(true, true))), injectionSwitch)).x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)))
      barrier();
    }
   else
    {
    }
   atomicStore(buf[next_virtual_gid], _GLF_IDENTITY(uint(_GLF_IDENTITY(2, (true ? 2 : _GLF_FUZZED(-28631)))), (uint(_GLF_IDENTITY(2, (true ? 2 : _GLF_FUZZED(-28631))))) >> 0u), 4, 64, 4);
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
    }
   else
    {
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && _GLF_IDENTITY(true, ! (! (true)))), true && _GLF_IDENTITY((_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))).y)))), (_GLF_IDENTITY((_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))).y)))), ((_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), injectionSwitch, injectionSwitch)).x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))).y))))) && true)) || false))))))
      {
       if(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), (_GLF_WRAPPED_IF_TRUE(true)) && true))
        {
         if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
          {
           return;
          }
         else
          {
          }
         if(_GLF_DEAD(false))
          return;
        }
       else
        {
        }
      }
    }
   for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter, clamp(_injected_loop_counter, _injected_loop_counter, _injected_loop_counter)) < ((_GLF_IDENTITY(1 << _GLF_IDENTITY(int(6), int(6)), (_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), false || (! _GLF_IDENTITY((! (false)), true && ((! (false))))))) ? _GLF_FUZZED(-40465) : 1 << _GLF_IDENTITY(int(6), int(6))))) >> _GLF_IDENTITY(int(6), int(6)))); _injected_loop_counter ++)
    {
     for(int _injected_loop_counter = (_GLF_IDENTITY((_GLF_IDENTITY(1 << _GLF_IDENTITY(_GLF_IDENTITY(int(5), int(5)), (_GLF_IDENTITY(_GLF_IDENTITY(int(5), int(5)), 0 | (_GLF_IDENTITY(int(5), int(5))))) >> 0), (1 << _GLF_IDENTITY(int(5), int(5))) - 0)), 0 ^ (_GLF_IDENTITY((_GLF_IDENTITY(1 << _GLF_IDENTITY(int(5), int(5)), (1 << _GLF_IDENTITY(_GLF_IDENTITY(int(5), (int(5)) << 0), int(5))) - 0)), 1 * (_GLF_IDENTITY((_GLF_IDENTITY(1 << _GLF_IDENTITY(_GLF_IDENTITY(int(5), ~ (~ (int(5)))), int(5)), (1 << _GLF_IDENTITY(int(5), int(5))) - 0)), clamp((_GLF_IDENTITY(1 << _GLF_IDENTITY(_GLF_IDENTITY(int(5), ~ (~ (int(5)))), int(5)), (1 << _GLF_IDENTITY(int(5), int(5))) - 0)), (_GLF_IDENTITY(1 << _GLF_IDENTITY(_GLF_IDENTITY(int(5), ~ (~ (int(5)))), int(5)), (1 << _GLF_IDENTITY(int(5), int(5))) - 0)), _GLF_IDENTITY((_GLF_IDENTITY(1 << _GLF_IDENTITY(_GLF_IDENTITY(int(5), ~ (~ (int(5)))), int(5)), (1 << _GLF_IDENTITY(int(5), int(5))) - 0)), clamp((_GLF_IDENTITY(1 << _GLF_IDENTITY(_GLF_IDENTITY(int(5), ~ (~ (int(5)))), int(5)), (1 << _GLF_IDENTITY(int(5), int(5))) - 0)), (_GLF_IDENTITY(1 << _GLF_IDENTITY(_GLF_IDENTITY(int(5), ~ (~ (int(5)))), int(5)), (1 << _GLF_IDENTITY(int(5), int(5))) - 0)), _GLF_IDENTITY((_GLF_IDENTITY(1 << _GLF_IDENTITY(_GLF_IDENTITY(int(5), ~ (~ (int(5)))), int(5)), (1 << _GLF_IDENTITY(int(5), int(5))) - 0)), ((_GLF_IDENTITY(1 << _GLF_IDENTITY(_GLF_IDENTITY(int(5), ~ (~ (int(5)))), int(5)), (1 << _GLF_IDENTITY(int(5), int(5))) - 0))) << 0))))))))) >> _GLF_IDENTITY(int(5), int(5))); _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
      {
       if(_GLF_WRAPPED_IF_TRUE(true))
        {
         if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_DEAD(false), false, true))))
          {
           do
            {
             if(_GLF_DEAD(false))
              barrier();
            }
           while(_GLF_WRAPPED_LOOP(false));
           barrier();
          }
        }
       else
        {
        }
      }
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    return;
   subgroupAll(true);
   if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
    }
   else
    {
     do
      {
       if(_GLF_DEAD(false))
        {
         do
          {
           if(_GLF_WRAPPED_IF_TRUE(true))
            {
             if(_GLF_DEAD(false))
              {
               if(_GLF_WRAPPED_IF_TRUE(true))
                {
                 return;
                }
               else
                {
                }
              }
            }
           else
            {
            }
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(bool(bvec4((injectionSwitch.x > injectionSwitch.y), true, false, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, bool(bvec3(injectionSwitch.x < injectionSwitch.y, true, true))))))), ! (! (_GLF_IDENTITY(bool(bvec4((injectionSwitch.x > injectionSwitch.y), true, false, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, bool(bvec3(injectionSwitch.x < injectionSwitch.y, true, true))))))), true && (bool(bvec4((injectionSwitch.x > injectionSwitch.y), true, false, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, bool(bvec3(injectionSwitch.x < injectionSwitch.y, true, true))))))))))))))))
            barrier();
           if(_GLF_DEAD(false))
            continue;
           if(_GLF_WRAPPED_IF_FALSE(false))
            {
            }
           else
            {
             if(_GLF_DEAD(false))
              {
               if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                {
                }
               else
                {
                 barrier();
                }
              }
            }
           if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(! (! _GLF_IDENTITY((false), ((false)) || false)), false || (_GLF_IDENTITY(! (! (false)), ! (! (! (! (false))))))))))
            {
             if(_GLF_DEAD(false))
              break;
             return;
            }
           if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y))))))
            continue;
           do
            {
             return;
            }
           while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            break;
          }
         while(_GLF_WRAPPED_LOOP(false));
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_WRAPPED_IF_FALSE(false))
          {
          }
         else
          {
           barrier();
          }
        }
      }
     while(_GLF_WRAPPED_LOOP(false));
    }
   if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)), bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)), bool(bvec4(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)), false, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), true, true, _GLF_IDENTITY(false, (false) || false)))))))
    return;
  }
 if(_GLF_WRAPPED_IF_TRUE(true))
  {
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     do
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_WRAPPED_IF_TRUE(true))
          {
           for(int _injected_loop_counter = int(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)).y)); _GLF_WRAPPED_LOOP(_injected_loop_counter > int(_GLF_ZERO(0.0, injectionSwitch.x))); _injected_loop_counter --)
            {
             if(_GLF_DEAD(false))
              {
               for(int _injected_loop_counter = (0 | 0); _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
                {
                 return;
                }
              }
            }
          }
         else
          {
          }
         do
          {
           barrier();
           if(_GLF_DEAD(false))
            {
             do
              {
               return;
              }
             while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
            }
          }
         while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
         if(_GLF_DEAD(false))
          barrier();
        }
      }
     while(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (_GLF_IDENTITY(! (_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x > injectionSwitch.y)))), bool(bool(! (_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(injectionSwitch.x > injectionSwitch.y, true, true, false))))))) || false)))))))))));
    }
   else
    {
    }
  }
 else
  {
  }
}
