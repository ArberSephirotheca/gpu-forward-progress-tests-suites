#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


struct _GLF_struct_14 {
 bvec2 _f0;
 ivec2 _f1;
 mat2 _f2;
 uvec3 _f3;
 vec3 _f4;
} ;

struct _GLF_struct_13 {
 vec2 _f0;
 mat4x2 _f1;
 uvec3 _f2;
 float _f3;
 bvec2 _f4;
 bvec2 _f5;
 ivec2 _f6;
} ;

struct _GLF_struct_12 {
 mat2 _f0;
 ivec3 _f1;
 vec2 _f2;
 ivec2 _f3;
 ivec3 _f4;
 vec4 _f5;
 float _f6;
} ;

struct _GLF_struct_11 {
 float _f0;
 ivec2 _f1;
 bvec3 _f2;
 mat3x2 _f3;
 mat2x3 _f4;
 mat3 _f5;
 bvec3 _f6;
} ;

struct _GLF_struct_15 {
 _GLF_struct_11 _f0;
 bvec4 _f1;
 _GLF_struct_12 _f2;
 mat3x4 _f3;
 _GLF_struct_13 _f4;
 mat3x4 _f5;
 _GLF_struct_14 _f6;
} ;

struct _GLF_struct_9 {
 mat4x3 _f0;
 ivec4 _f1;
 mat2x3 _f2;
 mat4x3 _f3;
 uvec2 _f4;
 mat2 _f5;
 ivec3 _f6;
} ;

struct _GLF_struct_8 {
 mat4x3 _f0;
 mat2x4 _f1;
} ;

struct _GLF_struct_7 {
 ivec4 _f0;
 float _f1;
} ;

struct _GLF_struct_6 {
 ivec3 _f0;
 mat3x2 _f1;
 uvec2 _f2;
 mat4x2 _f3;
 mat3 _f4;
 uvec2 _f5;
 mat4 _f6;
} ;

struct _GLF_struct_10 {
 _GLF_struct_6 _f0;
 _GLF_struct_7 _f1;
 _GLF_struct_8 _f2;
 _GLF_struct_9 _f3;
 uint num_workgroup;
} ;

struct _GLF_struct_16 {
 mat3x2 _f0;
 bool _f1;
 _GLF_struct_10 _f2;
 _GLF_struct_15 _f3;
 bvec4 _f4;
} ;

struct _GLF_struct_3 {
 bvec3 _f0;
 vec4 _f1;
 ivec4 _f2;
 mat3 _f3;
 uvec2 _f4;
} ;

struct _GLF_struct_4 {
 _GLF_struct_3 _f0;
} ;

struct _GLF_struct_1 {
 mat3x4 _f0;
} ;

struct _GLF_struct_0 {
 uvec2 _f0;
 vec4 _f1;
 ivec3 _f2;
 uvec3 _f3;
 vec2 _f4;
} ;

struct _GLF_struct_2 {
 _GLF_struct_0 _f0;
 mat4x2 _f1;
 _GLF_struct_1 _f2;
} ;

struct _GLF_struct_5 {
 _GLF_struct_2 _f0;
 mat4x2 _f1;
 uvec2 _f2;
 _GLF_struct_4 _f3;
 uint subgroup_id;
} ;

layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
#extension GL_EXT_maximal_reconvergence : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
        barrier();
       barrier();
      }
     return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   return;
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true), true && _GLF_IDENTITY((_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true)), bool(bool((_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true)))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / abs(1.0)))), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false)))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         return;
        }
       barrier();
      }
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), bool(_GLF_IDENTITY(bvec2(_GLF_DEAD(false), true), bvec2(bvec3(bvec2(_GLF_DEAD(false), true), true))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              barrier();
             return;
            }
           barrier();
          }
         return;
        }
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            return;
           barrier();
          }
         return;
        }
       barrier();
       if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), false, true, true)))) || false)) && true))
        barrier();
       if(_GLF_DEAD(false))
        return;
      }
     barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          return;
         barrier();
        }
       return;
       if(_GLF_DEAD(false))
        return;
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! (false))))))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_IDENTITY(_GLF_DEAD(false), bool(_GLF_IDENTITY(bvec3(_GLF_DEAD(false), false, false), bvec3(bvec4(bvec3(_GLF_DEAD(false), false, false), true))))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
  }
 _GLF_struct_5 _GLF_struct_replacement_5 = _GLF_struct_5(_GLF_struct_2(_GLF_struct_0(_GLF_IDENTITY(_GLF_IDENTITY(uvec2(1u), (false ? _GLF_FUZZED(uvec2(21571u, 168704u)) : _GLF_IDENTITY(uvec2(1u), ~ (~ (uvec2(1u)))))), _GLF_IDENTITY((uvec2(_GLF_IDENTITY(1u, (1u) | (1u)))), max((uvec2(_GLF_IDENTITY(1u, (1u) | (1u)))), (uvec2(_GLF_IDENTITY(1u, _GLF_IDENTITY((1u) | (1u), (_GLF_IDENTITY((1u) | (1u), ~ (~ ((1u) | (1u))))) - 0u)))))) << (_GLF_IDENTITY(uvec2(0u, 0u) ^ uvec2(0u, 0u), (uvec2(0u, 0u) ^ uvec2(0u, 0u)) - uvec2(0u, 0u)))), vec4(1.0), ivec3(1), _GLF_IDENTITY(uvec3(1u), _GLF_IDENTITY((uvec3(1u)) | uvec3(0u, 0u, 0u), ((uvec3(1u)) | uvec3(0u, 0u, 0u)) | (_GLF_IDENTITY((uvec3(1u)) | uvec3(0u, 0u, 0u), clamp((uvec3(1u)) | uvec3(0u, 0u, 0u), (uvec3(1u)) | uvec3(0u, 0u, 0u), (uvec3(1u)) | uvec3(0u, 0u, 0u)))))), vec2(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(51.63)))) * 1.0))), mat4x2(1.0), _GLF_struct_1(mat3x4(1.0))), mat4x2(1.0), uvec2(_GLF_IDENTITY(_GLF_IDENTITY(1u, (1u) - (0u >> _GLF_IDENTITY(uint(7u), _GLF_IDENTITY(uint(7u), uint(uvec2(uint(7u), 0u)))))), (true ? 1u : _GLF_FUZZED(clamp(16270u, 105210u, 171784u))))), _GLF_struct_4(_GLF_struct_3(bvec3(true), vec4(1.0), ivec4(1), mat3(1.0), _GLF_IDENTITY(uvec2(1u), ~ (~ (_GLF_IDENTITY(uvec2(1u), ~ (~ (uvec2(_GLF_IDENTITY(1u, 0u ^ (1u))))))))))), gl_SubgroupID);
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, bool(bvec3(false, true, false)))), ! (! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), _GLF_IDENTITY(bool(bvec3(false, true, false)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(false, true && (false)), true, false)), (bool(bvec3(false, true, _GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, false || (false))))))) && true), bool(bvec3(bool(bvec3(false, true, false)), false, true)))), (! (_GLF_IDENTITY(bool(bvec3(false, true, false)), bool(bvec3(bool(bvec3(false, _GLF_IDENTITY(true, ! (! (true))), false)), false, true))))) || false))))))))))) && true)))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true)))), (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false)))) && true))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      barrier();
     if(_GLF_DEAD(false))
      return;
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(injectionSwitch.x > injectionSwitch.y, false, false, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x)) < injectionSwitch.y))))))))))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_DEAD(false), true))))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        return;
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
        return;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         return;
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (! (bool(bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), bool(bvec2(_GLF_IDENTITY(bool(bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (! (bool(bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), false))))))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! _GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false))))), ! _GLF_IDENTITY((! (! (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false))))))), ! (! ((! (! (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))))))))), _GLF_IDENTITY(bool(bool((_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(false), ! _GLF_IDENTITY((! (_GLF_DEAD(false))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || ((! (_GLF_DEAD(false))))))), ! _GLF_IDENTITY((! (! (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false))))))), ! (! ((! (! (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))))))))))), false || (bool(bool((_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(false), ! _GLF_IDENTITY((! (_GLF_DEAD(false))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || ((! (_GLF_DEAD(false))))))), ! _GLF_IDENTITY((! (! (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false))))))), ! (! ((! (! (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))))))))))))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
  {
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, ! (! (false))))), _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, true, false)), false || (bool(bvec3(false, true, false)))))), false || (_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, true, false)), false || (bool(bvec3(false, true, false)))))))))
    barrier();
   barrier();
  }
 _GLF_struct_16 _GLF_struct_replacement_16 = _GLF_struct_16(mat3x2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? 1.0 : _GLF_FUZZED(61.84))), 1.0)), float(mat4x2(_GLF_IDENTITY(1.0, 0.0 + (1.0)), round(length(normalize(1.0))), 0.0, 1.0, _GLF_IDENTITY(0.0, mix(float(0.0), _GLF_IDENTITY(float(_GLF_FUZZED((-9.3 * _GLF_IDENTITY(-171.967, float(mat3(-171.967, length(vec4(0.0, 0.0, 0.0, 0.0)), 0.0, 0.0, round(length(normalize(1.0))), 0.0, 1.0, 0.0, 0.0)))))), clamp(float(_GLF_FUZZED((-9.3 * _GLF_IDENTITY(-171.967, float(mat3(-171.967, length(vec4(0.0, 0.0, 0.0, 0.0)), 0.0, 0.0, round(length(normalize(1.0))), 0.0, 1.0, 0.0, 0.0)))))), float(_GLF_FUZZED((-9.3 * _GLF_IDENTITY(-171.967, float(mat3(-171.967, length(vec4(0.0, 0.0, 0.0, 0.0)), 0.0, 0.0, round(length(normalize(1.0))), 0.0, 1.0, 0.0, 0.0)))))), float(_GLF_FUZZED((-9.3 * _GLF_IDENTITY(-171.967, float(mat3(-171.967, length(vec4(0.0, 0.0, 0.0, 0.0)), 0.0, 0.0, round(length(normalize(1.0))), 0.0, 1.0, 0.0, 0.0)))))))), bool(false))), 0.0, determinant(mat3(abs(1.0), 0.0, _GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x), 0.0, 1.0, 0.0, 0.0, 1.0, 1.0)), abs(0.0)))), float(mat2(_GLF_IDENTITY(1.0, float(mat4x2(1.0, _GLF_IDENTITY(round(_GLF_IDENTITY(length(normalize(_GLF_IDENTITY(1.0, max(1.0, _GLF_IDENTITY(1.0, 0.0 + (_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)))))))), mix(float(length(normalize(1.0))), float(_GLF_FUZZED(97.02)), bool(_GLF_IDENTITY(false, ! (! (false))))))), mix(float(_GLF_FUZZED(7.3)), float(_GLF_IDENTITY(round(_GLF_IDENTITY(length(normalize(1.0)), mix(float(length(normalize(1.0))), float(_GLF_FUZZED(97.02)), _GLF_IDENTITY(bool(false), bool(_GLF_IDENTITY(bvec3(bool(false), false, true), bvec3(bvec4(bvec3(bool(false), false, true), false)))))))), (round(_GLF_IDENTITY(length(normalize(1.0)), mix(float(length(normalize(1.0))), float(_GLF_FUZZED(97.02)), bool(false))))) / 1.0)), bool(true))), 0.0, _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(4.4)), bool(_GLF_IDENTITY(false, (false) && true)))), 0.0, 0.0, determinant(mat3(abs(1.0), _GLF_IDENTITY(0.0, min(0.0, _GLF_IDENTITY(0.0, (0.0) / 1.0))), _GLF_IDENTITY(_GLF_ZERO(_GLF_IDENTITY(0.0, (0.0) - length(vec3(0.0, 0.0, 0.0))), injectionSwitch.x), min(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))), 0.0, 1.0, _GLF_IDENTITY(0.0, float(vec3(0.0, 0.0, 0.0))), _GLF_IDENTITY(0.0, min(0.0, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(1.0)), float(0.0), bool(true))))), 1.0, 1.0)), abs(0.0)))), 0.0, 1.0, _GLF_IDENTITY(1.0, max(1.0, 1.0)))))), true, _GLF_struct_10(_GLF_struct_6(ivec3(_GLF_IDENTITY(_GLF_IDENTITY(1, max(1, 1)), (1) >> 0)), mat3x2(1.0), uvec2(1u), mat4x2(1.0), mat3(_GLF_IDENTITY(1.0, min(1.0, 1.0))), uvec2(1u), mat4(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(asinh(1.9)))), 0.0 + _GLF_IDENTITY((1.0), clamp((1.0), _GLF_IDENTITY((1.0), ((1.0)) + 0.0), (1.0)))), min(_GLF_IDENTITY(_GLF_IDENTITY(1.0, 0.0 + (1.0)), min(_GLF_IDENTITY(1.0, 0.0 + (1.0)), _GLF_IDENTITY(1.0, 0.0 + (1.0)))), _GLF_IDENTITY(1.0, 0.0 + (1.0)))))), _GLF_struct_7(ivec4(_GLF_IDENTITY(1, (1) << 0)), 1.0), _GLF_struct_8(mat4x3(_GLF_IDENTITY(1.0, (1.0) - length(vec4(0.0, 0.0, 0.0, 0.0)))), mat2x4(1.0)), _GLF_struct_9(mat4x3(1.0), ivec4(1), mat2x3(1.0), mat4x3(1.0), _GLF_IDENTITY(uvec2(1u), (false ? _GLF_IDENTITY(_GLF_FUZZED(uvec2(66940u, 137253u)), ~ (~ (_GLF_FUZZED(uvec2(66940u, 137253u))))) : _GLF_IDENTITY(uvec2(1u), (uvec2(1u)) + uvec2(0u, 0u)))), mat2(1.0), ivec3(1)), _GLF_IDENTITY(gl_NumWorkGroups.x, min(gl_NumWorkGroups.x, _GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) << uvec3(0u, 0u, 0u)).x))), _GLF_struct_15(_GLF_struct_11(1.0, ivec2(1), bvec3(true), mat3x2(1.0), mat2x3(1.0), _GLF_IDENTITY(mat3(1.0), _GLF_IDENTITY((mat3(_GLF_IDENTITY(1.0, float(mat3x2(1.0, length(_GLF_IDENTITY(_GLF_IDENTITY(0.0, max(0.0, 0.0)), (0.0) - length(vec4(0.0, 0.0, 0.0, 0.0)))), sin(0.0), 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0))))), transpose(transpose((mat3(_GLF_IDENTITY(1.0, float(mat3x2(1.0, length(_GLF_IDENTITY(0.0, (0.0) - length(vec4(0.0, 0.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0)))), sin(0.0), 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0)))))))) - mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(-342.588) : 0.0)), 0.0, 0.0)), bvec3(true)), bvec4(true), _GLF_struct_12(mat2(1.0), _GLF_IDENTITY(ivec3(1), _GLF_IDENTITY(ivec3(ivec3(ivec3(1))), ivec3(1, 1, 1) * (ivec3(ivec3(_GLF_IDENTITY(ivec3(1), ~ (_GLF_IDENTITY(~ (ivec3(1)), min(~ (ivec3(1)), ~ (ivec3(1))))))))))), vec2(1.0), ivec2(1), ivec3(_GLF_IDENTITY(1, clamp(_GLF_IDENTITY(1, (1) - 0), 1, 1))), _GLF_IDENTITY(vec4(1.0), max(vec4(1.0), _GLF_IDENTITY(vec4(1.0), (vec4(1.0)) * mat4(1.0)))), 1.0), mat3x4(1.0), _GLF_struct_13(_GLF_IDENTITY(_GLF_IDENTITY(vec2(_GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(-4.9)))), (vec2(_GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(-4.9))))) - abs(vec2(0.0, 0.0))), (_GLF_IDENTITY(vec2(1.0), (_GLF_IDENTITY(vec2(1.0), (_GLF_IDENTITY(vec2(1.0), (vec2(1.0)) / exp(vec2(0.0, 0.0)))) / _GLF_IDENTITY(_GLF_IDENTITY(vec2(1.0, 1.0), max(vec2(1.0, 1.0), _GLF_IDENTITY(vec2(1.0, 1.0), clamp(vec2(1.0, 1.0), vec2(1.0, 1.0), vec2(1.0, 1.0))))), min(_GLF_IDENTITY(vec2(1.0, 1.0), max(vec2(1.0, 1.0), _GLF_IDENTITY(vec2(1.0, 1.0), clamp(vec2(1.0, 1.0), vec2(1.0, 1.0), vec2(1.0, 1.0))))), _GLF_IDENTITY(vec2(1.0, 1.0), _GLF_IDENTITY(max(vec2(1.0, 1.0), _GLF_IDENTITY(vec2(1.0, 1.0), clamp(vec2(1.0, 1.0), vec2(1.0, _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-1226.8109) : _GLF_IDENTITY(1.0, max(1.0, 1.0))))), vec2(1.0, 1.0)))), (max(_GLF_IDENTITY(vec2(1.0, 1.0), max(vec2(1.0, 1.0), vec2(1.0, 1.0))), _GLF_IDENTITY(vec2(1.0, 1.0), clamp(_GLF_IDENTITY(vec2(1.0, 1.0), (vec2(1.0, 1.0)) / vec2(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y))), vec2(1.0, 1.0), vec2(1.0, 1.0))))) - vec2(0.0, 0.0))))))) / _GLF_IDENTITY(cos(vec2(0.0, _GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(_GLF_IDENTITY(0.0, max(0.0, 0.0)), float(vec3(0.0, 1.0, 1.0))), _GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, max(0.0, 0.0))) - 0.0), 0.0)))), (cos(vec2(0.0, _GLF_IDENTITY(0.0, (0.0) / 1.0)))) * _GLF_IDENTITY(cos(vec2(0.0, 0.0)), max(cos(vec2(0.0, 0.0)), cos(vec2(0.0, 0.0))))))) - vec2(0.0, _GLF_IDENTITY(0.0, (_GLF_IDENTITY(_GLF_IDENTITY(0.0, min(0.0, 0.0)), clamp(_GLF_IDENTITY(0.0, min(0.0, 0.0)), _GLF_IDENTITY(0.0, min(0.0, 0.0)), _GLF_IDENTITY(0.0, min(0.0, 0.0))))) - 0.0))), mat4x2(1.0), uvec3(1u), _GLF_IDENTITY(1.0, (true ? _GLF_IDENTITY(1.0, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? 1.0 : _GLF_FUZZED(length(vec4(93.91, -4.3, 741.683, -5.1))))) : _GLF_FUZZED(-316.619))), bvec2(true), bvec2(true), ivec2(1)), mat3x4(1.0), _GLF_struct_14(bvec2(true), ivec2(1), mat2(1.0), uvec3(1u), vec3(1.0))), bvec4(true));
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
  }
 uint workgroup_size = gl_WorkGroupSize.x;
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y))))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) && true)) && _GLF_IDENTITY(true, (true) || false))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], max(injectionSwitch[0], injectionSwitch[0])), injectionSwitch[1])).y))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         return;
        }
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
       barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          return;
         barrier();
        }
       return;
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, float(mat4(injectionSwitch.x, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0)))) / 1.0)) / determinant(mat3(1.0, 0.0, 0.0, 0.0, 1.0, 0.0, cos(0.0), 1.0, 1.0))) > injectionSwitch.y))) && true)))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bool(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, log(vec2(1.0, 1.0)) + (_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)))), injectionSwitch)).y))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       return;
      }
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, false, false, false)))))
  return;
 if(_GLF_DEAD(false))
  barrier();
 uint workgroup_id = gl_WorkGroupID.x;
 uint workgroup_base = workgroup_size * workgroup_id;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint subgroup_base = _GLF_IDENTITY(_GLF_struct_replacement_5.subgroup_id, min(_GLF_struct_replacement_5.subgroup_id, _GLF_IDENTITY(_GLF_struct_replacement_5.subgroup_id, max(_GLF_IDENTITY(_GLF_struct_replacement_5.subgroup_id, (_GLF_struct_replacement_5.subgroup_id) << 0u), _GLF_IDENTITY(_GLF_struct_replacement_5.subgroup_id, 0u | (_GLF_struct_replacement_5.subgroup_id)))))) * _GLF_IDENTITY(subgroup_size, (subgroup_size) | 0u);
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 if(_GLF_DEAD(false))
  return;
 uint virtual_gid = _GLF_IDENTITY(workgroup_base + subgroup_base + subgroup_local_id, 0u ^ _GLF_IDENTITY((_GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_base, (true ? subgroup_base : _GLF_FUZZED(uint(true)))) + subgroup_local_id, (true ? _GLF_IDENTITY(workgroup_base + subgroup_base + _GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) << 0u), 0u + (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + subgroup_base + subgroup_local_id, (workgroup_base + subgroup_base + subgroup_local_id) | (_GLF_IDENTITY(workgroup_base + subgroup_base + subgroup_local_id, max(workgroup_base + subgroup_base + subgroup_local_id, workgroup_base + subgroup_base + subgroup_local_id)))), (false ? _GLF_FUZZED(workgroup_base) : workgroup_base + subgroup_base + subgroup_local_id)))) : _GLF_FUZZED(subgroup_size)))), (_GLF_IDENTITY((_GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_base, (true ? subgroup_base : _GLF_FUZZED(uint(true)))) + subgroup_local_id, (true ? _GLF_IDENTITY(workgroup_base + subgroup_base + _GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) << 0u), 0u + (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + subgroup_base + subgroup_local_id, (workgroup_base + subgroup_base + subgroup_local_id) | (_GLF_IDENTITY(workgroup_base + subgroup_base + subgroup_local_id, max(workgroup_base + subgroup_base + subgroup_local_id, workgroup_base + subgroup_base + subgroup_local_id)))), (false ? _GLF_FUZZED(workgroup_base) : workgroup_base + subgroup_base + subgroup_local_id)))) : _GLF_FUZZED(subgroup_size)))), ((_GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_base, (true ? subgroup_base : _GLF_FUZZED(uint(true)))) + subgroup_local_id, (true ? _GLF_IDENTITY(workgroup_base + subgroup_base + _GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) << 0u), 0u + (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + subgroup_base + subgroup_local_id, (workgroup_base + subgroup_base + subgroup_local_id) | (_GLF_IDENTITY(workgroup_base + subgroup_base + subgroup_local_id, max(workgroup_base + subgroup_base + subgroup_local_id, workgroup_base + subgroup_base + subgroup_local_id)))), (false ? _GLF_FUZZED(workgroup_base) : workgroup_base + subgroup_base + subgroup_local_id)))) : _GLF_FUZZED(subgroup_size))))) / 1u)) >> uint(_GLF_ZERO(0.0, injectionSwitch.x))));
 uint next_virtual_gid = workgroup_base + _GLF_IDENTITY(subgroup_base, (subgroup_base) | uint(_GLF_ZERO(0.0, injectionSwitch.x))) + ((_GLF_IDENTITY(subgroup_local_id, ~ (~ (subgroup_local_id))) + 1) % subgroup_size);
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        return;
       return;
       if(_GLF_DEAD(false))
        barrier();
      }
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec2(false, false)))) && _GLF_IDENTITY(true, (true) || false)), bool(_GLF_IDENTITY(bool(false), ! (! (bool(false))))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     if(_GLF_DEAD(false))
      return;
     barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
    }
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), ! (! (! (_GLF_DEAD(false))))))))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec4(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false, false, true))))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
          barrier();
         return;
        }
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), bool(bvec4(false, false, false, false)))))
        barrier();
       return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          barrier();
         return;
        }
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     return;
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       barrier();
      }
     return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       return;
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), (bool(bvec3(false, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) && true))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
    }
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))) || false)) || false)))))
  barrier();
 atomicStore(buf[virtual_gid], uint(1), 4, _GLF_IDENTITY(64, (64) ^ 0), 4);
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), bool(bvec2(_GLF_IDENTITY(false, ! (! (false))), false)))))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if((subgroup_local_id % 2) == 0)
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     return;
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), bool(bvec3(bool(bool(false)), false, false))))))
      barrier();
     barrier();
    }
   subgroupAll(_GLF_IDENTITY(true, _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(mat2x4(injectionSwitch.y, 1.0, 0.0, 0.0, 0.0, 1.0, cos(0.0), 0.0)), _GLF_IDENTITY((_GLF_IDENTITY(float(mat2x4(injectionSwitch.y, 1.0, 0.0, 0.0, 0.0, 1.0, cos(0.0), 0.0)), float(vec4(float(mat2x4(injectionSwitch.y, 1.0, 0.0, 0.0, 0.0, 1.0, cos(0.0), 0.0)), 1.0, 1.0, 1.0)))) / 1.0, float(_GLF_IDENTITY(mat4((_GLF_IDENTITY(float(mat2x4(injectionSwitch.y, 1.0, 0.0, 0.0, 0.0, 1.0, cos(0.0), 0.0)), float(vec4(float(mat2x4(injectionSwitch.y, 1.0, 0.0, 0.0, 0.0, 1.0, cos(0.0), 0.0)), 1.0, 1.0, 1.0)))) / 1.0, determinant(mat3(0.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0)), 0.0, determinant(mat2(0.0, 0.0, 0.0, 0.0)), abs(0.0), 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, length(0.0), 1.0, 1.0, round(length(normalize(1.0)))), (true ? mat4((_GLF_IDENTITY(float(mat2x4(injectionSwitch.y, 1.0, 0.0, 0.0, 0.0, 1.0, cos(0.0), 0.0)), float(vec4(float(mat2x4(injectionSwitch.y, 1.0, 0.0, 0.0, 0.0, 1.0, cos(0.0), 0.0)), 1.0, 1.0, 1.0)))) / 1.0, determinant(mat3(0.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0)), 0.0, determinant(mat2(0.0, 0.0, 0.0, 0.0)), abs(0.0), 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, length(0.0), 1.0, 1.0, round(length(normalize(1.0)))) : _GLF_FUZZED(mat4(201.477, 304.887, 0.1, 36.22, -6.6, -545.426, 4.8, 2.8, -33.60, -7219.3897, 9.9, 482.794, -2.8, -98.18, 2.9, -368.485)))))))))) && (true)));
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(_GLF_DEAD(false), true, true), bvec3(bvec4(bvec3(_GLF_DEAD(false), true, true), true)))), ! (! (bool(_GLF_IDENTITY(bvec3(_GLF_DEAD(false), true, true), bvec3(bvec4(bvec3(_GLF_DEAD(false), true, true), true)))))))))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((false), ! (! ((false))))))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
            return;
           barrier();
           if(_GLF_DEAD(false))
            barrier();
          }
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            return;
           return;
          }
         barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
        }
       barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))))))
        return;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         barrier();
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
           if(_GLF_DEAD(false))
            barrier();
           return;
          }
         barrier();
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            barrier();
           return;
          }
         return;
        }
      }
     return;
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-7.6)), float(injectionSwitch.x), bool(true))) > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false)))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   atomicStore(buf[next_virtual_gid], uint(2), 4, 64, _GLF_IDENTITY(4, _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(4, ~ (~ (4)))) | (4), clamp((_GLF_IDENTITY(4, ~ (~ (4)))) | (4), (_GLF_IDENTITY(4, ~ (~ (4)))) | (4), (_GLF_IDENTITY(4, ~ (~ (4)))) | (4))), ((_GLF_IDENTITY(4, ~ (~ (4)))) | (4)) | (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(4, ~ _GLF_IDENTITY((~ (4)), _GLF_IDENTITY(((~ (4))), 1 * (((~ (4))))) - int(_GLF_ZERO(0.0, injectionSwitch.x))))) | (4), 0 + ((_GLF_IDENTITY(4, ~ (~ (4)))) | (4))), _GLF_IDENTITY(int(_GLF_IDENTITY(ivec4(_GLF_IDENTITY((_GLF_IDENTITY(4, ~ _GLF_IDENTITY((~ (4)), _GLF_IDENTITY(((~ (4))), 1 * (((~ (4))))) - int(_GLF_ZERO(0.0, injectionSwitch.x))))) | (4), 0 + ((_GLF_IDENTITY(4, ~ (~ (4)))) | (4))), 1, 0, 1), (ivec4(_GLF_IDENTITY((_GLF_IDENTITY(4, ~ _GLF_IDENTITY((~ (4)), _GLF_IDENTITY(((~ (4))), 1 * (((~ (4))))) - int(_GLF_ZERO(0.0, injectionSwitch.x))))) | (4), 0 + ((_GLF_IDENTITY(4, ~ (~ (4)))) | (4))), 1, 0, 1)) | (_GLF_IDENTITY(ivec4(_GLF_IDENTITY((_GLF_IDENTITY(4, ~ _GLF_IDENTITY((~ (4)), _GLF_IDENTITY(((~ (4))), 1 * (((~ (4))))) - int(_GLF_ZERO(0.0, injectionSwitch.x))))) | (4), 0 + ((_GLF_IDENTITY(4, ~ (~ (4)))) | (4))), 1, 0, 1), max(ivec4(_GLF_IDENTITY((_GLF_IDENTITY(4, ~ _GLF_IDENTITY((~ (4)), _GLF_IDENTITY(((~ (4))), 1 * (((~ (4))))) - int(_GLF_ZERO(0.0, injectionSwitch.x))))) | (4), 0 + ((_GLF_IDENTITY(4, ~ (~ (4)))) | (4))), 1, 0, 1), ivec4(_GLF_IDENTITY((_GLF_IDENTITY(4, ~ _GLF_IDENTITY((~ (4)), _GLF_IDENTITY(((~ (4))), 1 * (((~ (4))))) - int(_GLF_ZERO(0.0, injectionSwitch.x))))) | (4), 0 + ((_GLF_IDENTITY(4, ~ (~ (4)))) | (4))), 1, 0, 1)))))), clamp(int(_GLF_IDENTITY(ivec4(_GLF_IDENTITY((_GLF_IDENTITY(4, ~ _GLF_IDENTITY((~ (4)), _GLF_IDENTITY(((~ (4))), 1 * (((~ (4))))) - int(_GLF_ZERO(0.0, injectionSwitch.x))))) | (4), 0 + ((_GLF_IDENTITY(4, ~ (~ (4)))) | (4))), 1, 0, 1), (ivec4(_GLF_IDENTITY((_GLF_IDENTITY(4, ~ _GLF_IDENTITY((~ (4)), _GLF_IDENTITY(((~ (4))), 1 * (((~ (4))))) - int(_GLF_ZERO(0.0, injectionSwitch.x))))) | (4), 0 + ((_GLF_IDENTITY(4, ~ (~ (4)))) | (4))), 1, 0, 1)) | (_GLF_IDENTITY(ivec4(_GLF_IDENTITY((_GLF_IDENTITY(4, ~ _GLF_IDENTITY((~ (4)), _GLF_IDENTITY(((~ (4))), 1 * (((~ (4))))) - int(_GLF_ZERO(0.0, injectionSwitch.x))))) | (4), 0 + ((_GLF_IDENTITY(4, ~ (~ (4)))) | (4))), 1, 0, 1), max(ivec4(_GLF_IDENTITY((_GLF_IDENTITY(4, ~ _GLF_IDENTITY((~ (4)), _GLF_IDENTITY(((~ (4))), 1 * (((~ (4))))) - int(_GLF_ZERO(0.0, injectionSwitch.x))))) | (4), 0 + ((_GLF_IDENTITY(4, ~ (~ (4)))) | (4))), 1, 0, 1), ivec4(_GLF_IDENTITY((_GLF_IDENTITY(4, ~ _GLF_IDENTITY((~ (4)), _GLF_IDENTITY(((~ (4))), 1 * (((~ (4))))) - int(_GLF_ZERO(0.0, injectionSwitch.x))))) | (4), 0 + ((_GLF_IDENTITY(4, ~ (~ (4)))) | (4))), 1, 0, 1)))))), int(_GLF_IDENTITY(ivec4(_GLF_IDENTITY((_GLF_IDENTITY(4, ~ _GLF_IDENTITY((~ (4)), _GLF_IDENTITY(((~ (4))), 1 * (((~ (4))))) - int(_GLF_ZERO(0.0, injectionSwitch.x))))) | (4), 0 + ((_GLF_IDENTITY(4, ~ (~ (4)))) | (4))), 1, 0, 1), (ivec4(_GLF_IDENTITY((_GLF_IDENTITY(4, ~ _GLF_IDENTITY((~ (4)), _GLF_IDENTITY(((~ (4))), 1 * (((~ (4))))) - int(_GLF_ZERO(0.0, injectionSwitch.x))))) | (4), 0 + ((_GLF_IDENTITY(4, ~ (~ (4)))) | (4))), 1, 0, 1)) | (_GLF_IDENTITY(ivec4(_GLF_IDENTITY((_GLF_IDENTITY(4, ~ _GLF_IDENTITY((~ (4)), _GLF_IDENTITY(((~ (4))), 1 * (((~ (4))))) - int(_GLF_ZERO(0.0, injectionSwitch.x))))) | (4), 0 + ((_GLF_IDENTITY(4, ~ (~ (4)))) | (4))), 1, 0, 1), max(ivec4(_GLF_IDENTITY((_GLF_IDENTITY(4, ~ _GLF_IDENTITY((~ (4)), _GLF_IDENTITY(((~ (4))), 1 * (((~ (4))))) - int(_GLF_ZERO(0.0, injectionSwitch.x))))) | (4), 0 + ((_GLF_IDENTITY(4, ~ (~ (4)))) | (4))), 1, 0, 1), ivec4(_GLF_IDENTITY((_GLF_IDENTITY(4, ~ _GLF_IDENTITY((~ (4)), _GLF_IDENTITY(((~ (4))), 1 * (((~ (4))))) - int(_GLF_ZERO(0.0, injectionSwitch.x))))) | (4), 0 + ((_GLF_IDENTITY(4, ~ (~ (4)))) | (4))), 1, 0, 1)))))), int(_GLF_IDENTITY(ivec4(_GLF_IDENTITY((_GLF_IDENTITY(4, ~ _GLF_IDENTITY((~ (4)), _GLF_IDENTITY(((~ (4))), 1 * (((~ (4))))) - int(_GLF_ZERO(0.0, injectionSwitch.x))))) | (4), 0 + ((_GLF_IDENTITY(4, ~ (~ (4)))) | (4))), 1, 0, 1), (ivec4(_GLF_IDENTITY((_GLF_IDENTITY(4, ~ _GLF_IDENTITY((~ (4)), _GLF_IDENTITY(((~ (4))), 1 * (((~ (4))))) - int(_GLF_ZERO(0.0, injectionSwitch.x))))) | (4), 0 + ((_GLF_IDENTITY(4, ~ (~ (4)))) | (4))), 1, 0, 1)) | (_GLF_IDENTITY(ivec4(_GLF_IDENTITY((_GLF_IDENTITY(4, ~ _GLF_IDENTITY((~ (4)), _GLF_IDENTITY(((~ (4))), 1 * (((~ (4))))) - int(_GLF_ZERO(0.0, injectionSwitch.x))))) | (4), 0 + ((_GLF_IDENTITY(4, ~ (~ (4)))) | (4))), 1, 0, 1), max(ivec4(_GLF_IDENTITY((_GLF_IDENTITY(4, ~ _GLF_IDENTITY((~ (4)), _GLF_IDENTITY(((~ (4))), 1 * (((~ (4))))) - int(_GLF_ZERO(0.0, injectionSwitch.x))))) | (4), 0 + ((_GLF_IDENTITY(4, ~ (~ (4)))) | (4))), 1, 0, 1), ivec4(_GLF_IDENTITY((_GLF_IDENTITY(4, ~ _GLF_IDENTITY((~ (4)), _GLF_IDENTITY(((~ (4))), 1 * (((~ (4))))) - int(_GLF_ZERO(0.0, injectionSwitch.x))))) | (4), 0 + ((_GLF_IDENTITY(4, ~ (~ (4)))) | (4))), 1, 0, 1)))))))))))));
   if(_GLF_DEAD(false))
    return;
  }
 else
  {
   if(_GLF_DEAD(false))
    return;
   subgroupAll(false);
   atomicStore(buf[next_virtual_gid], uint(2), 4, 64, 4);
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, (false) && true)), ! (! (! (false))))))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(bool(! (false))))))))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))), true, true, false)))) && true))))
        barrier();
       if(_GLF_DEAD(false))
        return;
       return;
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          barrier();
         return;
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(-8222.9151))), ! (! (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(-8222.9151))))))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_DEAD(false), true, _GLF_IDENTITY(false, false || _GLF_IDENTITY((false), true && (_GLF_IDENTITY((false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && ((false))))))))))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + length(vec3(0.0, 0.0, 0.0))), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(775.847) : _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + length(vec3(0.0, 0.0, 0.0))), float(mat2x4(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + length(vec3(0.0, 0.0, 0.0))), 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0))))) > _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)), injectionSwitch))) * vec2(_GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(-1867.1107))), 1.0)).y))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
    }
   return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
  {
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(bvec4(! (false), false, true, true))))), (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, true, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   barrier();
  }
}
