#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), (_GLF_IDENTITY(false, false || (false))) && true)))
  return;
 do
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, ! (! (true))))))), false || (_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, ! (! (true))))))))))
      {
       do
        {
         if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
          {
           if(_GLF_WRAPPED_IF_FALSE(false))
            {
             if(_GLF_DEAD(false))
              return;
            }
           else
            {
             return;
            }
          }
         else
          {
           if(_GLF_DEAD(false))
            continue;
          }
        }
       while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, _GLF_IDENTITY(! (_GLF_IDENTITY(! (false), ! (! (! (false))))), true && (! (_GLF_IDENTITY(! (false), ! (! (! (false))))))))));
      }
     else
      {
      }
    }
  }
 while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))).x > injectionSwitch.y, false || (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))).x > injectionSwitch.y, bool(bool(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))).x > injectionSwitch.y)))))))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
    }
   else
    {
     if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, true && (false))))
      {
      }
     else
      {
       if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false || (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) && true)))
        {
         return;
        }
       else
        {
        }
      }
    }
  }
 uint subgroup_local_id = gl_SubgroupInvocationID;
 for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
  {
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
    }
   else
    {
     if(_GLF_DEAD(false))
      {
       do
        {
         if(_GLF_DEAD(false))
          break;
         return;
        }
       while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
      }
    }
  }
 uint num_workgroup = _GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) ^ uvec3(0u, 0u, 0u)).x, _GLF_IDENTITY(0u | (_GLF_IDENTITY(gl_NumWorkGroups.x, (gl_NumWorkGroups.x) | 0u)), ~ (~ (_GLF_IDENTITY(0u, min(_GLF_IDENTITY(0u, (0u) ^ 0u), 0u)) | (_GLF_IDENTITY(gl_NumWorkGroups.x, _GLF_IDENTITY((_GLF_IDENTITY(gl_NumWorkGroups, clamp(gl_NumWorkGroups, gl_NumWorkGroups, gl_NumWorkGroups)).x), (_GLF_IDENTITY((_GLF_IDENTITY(gl_NumWorkGroups, clamp(gl_NumWorkGroups, gl_NumWorkGroups, gl_NumWorkGroups)).x), ~ (~ (_GLF_IDENTITY((_GLF_IDENTITY(gl_NumWorkGroups, clamp(gl_NumWorkGroups, gl_NumWorkGroups, gl_NumWorkGroups)).x), ((_GLF_IDENTITY(gl_NumWorkGroups, clamp(gl_NumWorkGroups, gl_NumWorkGroups, gl_NumWorkGroups)).x)) << 0u))))) - uint(_GLF_ZERO(0.0, injectionSwitch.x))) | 0u))))));
 do
  {
   if(_GLF_DEAD(false))
    continue;
   if(_GLF_DEAD(false))
    return;
  }
 while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true))));
 uint workgroup_size = gl_WorkGroupSize.x;
 uint workgroup_id = _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, uvec3(gl_WorkGroupID[0], gl_WorkGroupID[1], gl_WorkGroupID[2])), max(gl_WorkGroupID, gl_WorkGroupID)).x, min(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, uvec3(gl_WorkGroupID[0], gl_WorkGroupID[1], gl_WorkGroupID[_GLF_IDENTITY(2, (0 ^ (0 ^ 0)) ^ (2))])), max(gl_WorkGroupID, gl_WorkGroupID)).x, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, uvec3(gl_WorkGroupID[0], gl_WorkGroupID[1], gl_WorkGroupID[2])), max(gl_WorkGroupID, gl_WorkGroupID)).x, (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, uvec3(gl_WorkGroupID[0], gl_WorkGroupID[1], gl_WorkGroupID[2])), max(_GLF_IDENTITY(gl_WorkGroupID, uvec3(gl_WorkGroupID[0], gl_WorkGroupID[1], _GLF_IDENTITY(gl_WorkGroupID[2], ~ (~ (gl_WorkGroupID[2]))))), gl_WorkGroupID)).x) / 1u)));
 uint workgroup_base = workgroup_size * _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_id, min(_GLF_IDENTITY(workgroup_id, (workgroup_id) | 0u), workgroup_id)), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_id, min(_GLF_IDENTITY(workgroup_id, (workgroup_id) | 0u), _GLF_IDENTITY(workgroup_id, (workgroup_id) / 1u))), (_GLF_IDENTITY(workgroup_id, min(_GLF_IDENTITY(workgroup_id, (workgroup_id) | 0u), workgroup_id))) - 0u)), (~ (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_id, min(_GLF_IDENTITY(workgroup_id, (workgroup_id) | 0u), workgroup_id)), (_GLF_IDENTITY(workgroup_id, min(_GLF_IDENTITY(workgroup_id, (workgroup_id) | 0u), workgroup_id))) - 0u))) / 1u))), _GLF_IDENTITY((_GLF_IDENTITY(workgroup_id, min(_GLF_IDENTITY(workgroup_id, (workgroup_id) | 0u), workgroup_id))) | (_GLF_IDENTITY(workgroup_id, min(_GLF_IDENTITY(workgroup_id, (workgroup_id) | 0u), workgroup_id))), (false ? _GLF_FUZZED(subgroup_local_id) : _GLF_IDENTITY((_GLF_IDENTITY(workgroup_id, min(_GLF_IDENTITY(workgroup_id, (workgroup_id) | 0u), workgroup_id))), clamp((_GLF_IDENTITY(workgroup_id, min(_GLF_IDENTITY(workgroup_id, (workgroup_id) | 0u), workgroup_id))), (_GLF_IDENTITY(workgroup_id, min(_GLF_IDENTITY(workgroup_id, (workgroup_id) | 0u), workgroup_id))), (_GLF_IDENTITY(workgroup_id, _GLF_IDENTITY(min(_GLF_IDENTITY(workgroup_id, (workgroup_id) | 0u), workgroup_id), uint(uvec3(min(_GLF_IDENTITY(workgroup_id, (workgroup_id) | 0u), workgroup_id), 1u, 1u))))))) | (_GLF_IDENTITY(workgroup_id, min(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_id, (workgroup_id) | 0u), (_GLF_IDENTITY(false, ! (! (false))) ? _GLF_FUZZED(subgroup_local_id) : _GLF_IDENTITY(_GLF_IDENTITY(workgroup_id, (workgroup_id) | 0u), (_GLF_IDENTITY(workgroup_id, (workgroup_id) | 0u)) >> 0u))), workgroup_id))))));
 uint virtual_gid = workgroup_base + subgroup_id * subgroup_size + _GLF_IDENTITY(subgroup_local_id, 0u + (subgroup_local_id));
 uint next_virtual_gid = workgroup_base + subgroup_id * subgroup_size + (_GLF_IDENTITY((subgroup_local_id + 1) % _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, min(subgroup_size, subgroup_size)), (subgroup_size) / uint(_GLF_ONE(1.0, injectionSwitch.y))), uint(uvec3(_GLF_IDENTITY(subgroup_size, (subgroup_size) / uint(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))))))), _GLF_IDENTITY(0u, (0u) * 1u), ((1u << _GLF_IDENTITY(_GLF_IDENTITY(uint(1u), ~ (~ (uint(1u)))), uint(1u))) >> _GLF_IDENTITY(uint(1u), uint(1u)))))), max(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (subgroup_size) / uint(_GLF_ONE(1.0, injectionSwitch.y))), uint(uvec3(_GLF_IDENTITY(subgroup_size, (subgroup_size) / uint(_GLF_ONE(1.0, injectionSwitch.y))), 0u, ((1u << _GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(1u, clamp(1u, _GLF_IDENTITY(1u, (false ? _GLF_FUZZED(floatBitsToUint(2.8)) : 1u)), _GLF_IDENTITY(1u, clamp(1u, 1u, 1u))))), ~ (~ (uint(1u)))), uint(1u))) >> _GLF_IDENTITY(uint(1u), uint(1u)))))), _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (subgroup_size) / uint(_GLF_ONE(1.0, injectionSwitch.y))), uint(uvec3(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, uint(uvec4(subgroup_size, 0u, 0u, 1u)))) / 1u), (subgroup_size) / uint(_GLF_ONE(1.0, injectionSwitch.y))), 0u, ((1u << _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(uint(1u), (uint(1u)) + 0u), ~ (~ (uint(1u)))), uint(1u))) >> _GLF_IDENTITY(uint(1u), uint(1u)))))))), 0u + ((subgroup_local_id + _GLF_IDENTITY(1, int(ivec2(1, (1 & 1))))) % _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (subgroup_size) / uint(_GLF_ONE(1.0, injectionSwitch.y))), _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (subgroup_size) << 0u), _GLF_IDENTITY((subgroup_size), ((subgroup_size)) << 0u) / uint(_GLF_ONE(1.0, injectionSwitch.y))), 0u, _GLF_IDENTITY(((1u << _GLF_IDENTITY(_GLF_IDENTITY(uint(1u), uint(1u)), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(uint(1u), clamp(uint(1u), _GLF_IDENTITY(uint(1u), 0u + (uint(1u))), _GLF_IDENTITY(uint(1u), (_GLF_IDENTITY(uint(1u), (uint(_GLF_IDENTITY(_GLF_IDENTITY(1u, min(_GLF_IDENTITY(1u, (1u) + 0u), 1u)), uint(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(1u, uint(uint(1u))), _GLF_IDENTITY(1u, clamp(1u, 1u, 1u)), _GLF_IDENTITY(0u, 1u * (0u))), (uvec3(0u, 0u, 0u) >> _GLF_IDENTITY(uvec3(3u), uvec3(3u))) ^ (_GLF_IDENTITY(uvec3(_GLF_IDENTITY(1u, uint(uint(1u))), 1u, 0u), (uvec3(_GLF_IDENTITY(1u, uint(uint(1u))), 1u, 0u)) << uvec3(0u, 0u, 0u)))))))) | (uint(1u)))) | (uint(1u))))), uint(1u)))))) >> _GLF_IDENTITY(uint(1u), uint(1u))), ~ (~ (((1u << _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(uint(1u), uint(1u)), (_GLF_IDENTITY(uint(1u), uint(1u))) ^ 0u), ~ (~ (_GLF_IDENTITY(uint(1u), uint(1u)))))) >> _GLF_IDENTITY(_GLF_IDENTITY(uint(1u), uint(1u)), ~ (~ (_GLF_IDENTITY(uint(1u), uint(1u)))))))))), min(uvec3(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (subgroup_size) << 0u), _GLF_IDENTITY((subgroup_size), ((subgroup_size)) << 0u) / uint(_GLF_ONE(1.0, injectionSwitch.y))), 0u, _GLF_IDENTITY(((1u << _GLF_IDENTITY(_GLF_IDENTITY(uint(1u), uint(1u)), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(uint(1u), clamp(uint(1u), _GLF_IDENTITY(uint(1u), 0u + (uint(1u))), _GLF_IDENTITY(uint(1u), (_GLF_IDENTITY(uint(1u), (uint(_GLF_IDENTITY(_GLF_IDENTITY(1u, min(_GLF_IDENTITY(1u, (1u) + 0u), 1u)), uint(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(1u, uint(uint(1u))), _GLF_IDENTITY(1u, clamp(1u, 1u, 1u)), _GLF_IDENTITY(0u, 1u * (0u))), (uvec3(0u, 0u, 0u) >> _GLF_IDENTITY(uvec3(3u), uvec3(3u))) ^ (_GLF_IDENTITY(uvec3(_GLF_IDENTITY(1u, uint(uint(1u))), 1u, 0u), (uvec3(_GLF_IDENTITY(1u, uint(uint(1u))), 1u, 0u)) << uvec3(0u, 0u, 0u)))))))) | (uint(1u)))) | (uint(1u))))), uint(1u)))))) >> _GLF_IDENTITY(uint(1u), uint(1u))), ~ (~ (((1u << _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(uint(1u), uint(1u)), (_GLF_IDENTITY(uint(1u), uint(1u))) ^ 0u), ~ (~ (_GLF_IDENTITY(uint(1u), uint(1u)))))) >> _GLF_IDENTITY(_GLF_IDENTITY(uint(1u), uint(1u)), ~ (~ (_GLF_IDENTITY(uint(1u), uint(1u)))))))))), _GLF_IDENTITY(uvec3(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (subgroup_size) << 0u), _GLF_IDENTITY((subgroup_size), ((subgroup_size)) << 0u) / uint(_GLF_ONE(1.0, injectionSwitch.y))), 0u, _GLF_IDENTITY(((1u << _GLF_IDENTITY(_GLF_IDENTITY(uint(1u), uint(1u)), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(uint(1u), clamp(uint(1u), _GLF_IDENTITY(uint(1u), 0u + (uint(1u))), _GLF_IDENTITY(uint(1u), (_GLF_IDENTITY(uint(1u), (uint(_GLF_IDENTITY(_GLF_IDENTITY(1u, min(_GLF_IDENTITY(1u, (1u) + 0u), 1u)), uint(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(1u, uint(uint(1u))), _GLF_IDENTITY(1u, clamp(1u, 1u, 1u)), _GLF_IDENTITY(0u, 1u * (0u))), (uvec3(0u, 0u, 0u) >> _GLF_IDENTITY(uvec3(3u), uvec3(3u))) ^ (_GLF_IDENTITY(uvec3(_GLF_IDENTITY(1u, uint(uint(1u))), 1u, 0u), (uvec3(_GLF_IDENTITY(1u, uint(uint(1u))), 1u, 0u)) << uvec3(0u, 0u, 0u)))))))) | (uint(1u)))) | (uint(1u))))), uint(1u)))))) >> _GLF_IDENTITY(uint(1u), uint(1u))), ~ (~ (((1u << _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(uint(1u), uint(1u)), (_GLF_IDENTITY(uint(1u), uint(1u))) ^ 0u), ~ (~ (_GLF_IDENTITY(uint(1u), uint(1u)))))) >> _GLF_IDENTITY(_GLF_IDENTITY(uint(1u), uint(1u)), ~ (~ (_GLF_IDENTITY(uint(1u), uint(1u)))))))))), (uvec3(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (subgroup_size) << 0u), _GLF_IDENTITY((subgroup_size), ((subgroup_size)) << 0u) / uint(_GLF_ONE(1.0, injectionSwitch.y))), 0u, _GLF_IDENTITY(((1u << _GLF_IDENTITY(_GLF_IDENTITY(uint(1u), uint(1u)), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(uint(1u), clamp(uint(1u), _GLF_IDENTITY(uint(1u), 0u + (uint(1u))), _GLF_IDENTITY(uint(1u), (_GLF_IDENTITY(uint(1u), (uint(_GLF_IDENTITY(_GLF_IDENTITY(1u, min(_GLF_IDENTITY(1u, (1u) + 0u), 1u)), uint(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(1u, uint(uint(1u))), _GLF_IDENTITY(1u, clamp(1u, 1u, 1u)), _GLF_IDENTITY(0u, 1u * (0u))), (uvec3(0u, 0u, 0u) >> _GLF_IDENTITY(uvec3(3u), uvec3(3u))) ^ (_GLF_IDENTITY(uvec3(_GLF_IDENTITY(1u, uint(uint(1u))), 1u, 0u), (uvec3(_GLF_IDENTITY(1u, uint(uint(1u))), 1u, 0u)) << uvec3(0u, 0u, 0u)))))))) | (uint(1u)))) | (uint(1u))))), uint(1u)))))) >> _GLF_IDENTITY(uint(1u), uint(1u))), ~ (~ (((1u << _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(uint(1u), uint(1u)), (_GLF_IDENTITY(uint(1u), uint(1u))) ^ 0u), ~ (~ (_GLF_IDENTITY(uint(1u), uint(1u)))))) >> _GLF_IDENTITY(_GLF_IDENTITY(uint(1u), uint(1u)), ~ (~ (_GLF_IDENTITY(uint(1u), uint(1u))))))))))) >> uvec3(0u, 0u, 0u))))), min(_GLF_IDENTITY(uint(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (subgroup_size) << 0u), _GLF_IDENTITY((subgroup_size), ((subgroup_size)) << 0u) / uint(_GLF_ONE(1.0, injectionSwitch.y))), 0u, _GLF_IDENTITY(((1u << _GLF_IDENTITY(_GLF_IDENTITY(uint(1u), uint(1u)), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(uint(1u), clamp(uint(1u), _GLF_IDENTITY(uint(1u), 0u + (uint(1u))), _GLF_IDENTITY(uint(1u), (_GLF_IDENTITY(uint(1u), (uint(_GLF_IDENTITY(_GLF_IDENTITY(1u, min(_GLF_IDENTITY(1u, (1u) + 0u), 1u)), uint(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(1u, uint(uint(1u))), _GLF_IDENTITY(1u, clamp(1u, 1u, 1u)), _GLF_IDENTITY(0u, 1u * (0u))), (uvec3(0u, 0u, 0u) >> _GLF_IDENTITY(uvec3(3u), uvec3(3u))) ^ (_GLF_IDENTITY(uvec3(_GLF_IDENTITY(1u, uint(uint(1u))), 1u, 0u), (uvec3(_GLF_IDENTITY(1u, uint(uint(1u))), 1u, 0u)) << uvec3(0u, 0u, 0u)))))))) | (uint(1u)))) | (uint(1u))))), uint(1u)))))) >> _GLF_IDENTITY(uint(1u), uint(1u))), ~ (~ (((1u << _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(uint(1u), uint(1u)), (_GLF_IDENTITY(uint(1u), uint(1u))) ^ 0u), ~ (~ (_GLF_IDENTITY(uint(1u), uint(1u)))))) >> _GLF_IDENTITY(_GLF_IDENTITY(uint(1u), uint(1u)), ~ (~ (_GLF_IDENTITY(uint(1u), uint(1u)))))))))), min(uvec3(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (subgroup_size) << 0u), _GLF_IDENTITY((subgroup_size), ((subgroup_size)) << 0u) / uint(_GLF_ONE(1.0, injectionSwitch.y))), 0u, _GLF_IDENTITY(((1u << _GLF_IDENTITY(_GLF_IDENTITY(uint(1u), uint(1u)), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(uint(1u), clamp(uint(1u), _GLF_IDENTITY(uint(1u), 0u + (uint(1u))), _GLF_IDENTITY(uint(1u), (_GLF_IDENTITY(uint(1u), (uint(_GLF_IDENTITY(_GLF_IDENTITY(1u, min(_GLF_IDENTITY(1u, (1u) + 0u), 1u)), uint(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(1u, uint(uint(1u))), _GLF_IDENTITY(1u, clamp(1u, 1u, 1u)), _GLF_IDENTITY(0u, 1u * (0u))), (uvec3(0u, 0u, 0u) >> _GLF_IDENTITY(uvec3(3u), uvec3(3u))) ^ (_GLF_IDENTITY(uvec3(_GLF_IDENTITY(1u, uint(uint(1u))), 1u, 0u), (uvec3(_GLF_IDENTITY(1u, uint(uint(1u))), 1u, 0u)) << uvec3(0u, 0u, 0u)))))))) | (uint(1u)))) | (uint(1u))))), uint(1u)))))) >> _GLF_IDENTITY(uint(1u), uint(1u))), ~ (~ (((1u << _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(uint(1u), uint(1u)), (_GLF_IDENTITY(uint(1u), uint(1u))) ^ 0u), ~ (~ (_GLF_IDENTITY(uint(1u), uint(1u)))))) >> _GLF_IDENTITY(_GLF_IDENTITY(uint(1u), uint(1u)), ~ (~ (_GLF_IDENTITY(uint(1u), uint(1u)))))))))), _GLF_IDENTITY(uvec3(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (subgroup_size) << 0u), _GLF_IDENTITY((subgroup_size), ((subgroup_size)) << 0u) / uint(_GLF_ONE(1.0, injectionSwitch.y))), 0u, _GLF_IDENTITY(((1u << _GLF_IDENTITY(_GLF_IDENTITY(uint(1u), uint(1u)), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(uint(1u), clamp(uint(1u), _GLF_IDENTITY(uint(1u), 0u + (uint(1u))), _GLF_IDENTITY(uint(1u), (_GLF_IDENTITY(uint(1u), (uint(_GLF_IDENTITY(_GLF_IDENTITY(1u, min(_GLF_IDENTITY(1u, (1u) + 0u), 1u)), uint(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(1u, uint(uint(1u))), _GLF_IDENTITY(1u, clamp(1u, 1u, 1u)), _GLF_IDENTITY(0u, 1u * (0u))), (uvec3(0u, 0u, 0u) >> _GLF_IDENTITY(uvec3(3u), uvec3(3u))) ^ (_GLF_IDENTITY(uvec3(_GLF_IDENTITY(1u, uint(uint(1u))), 1u, 0u), (uvec3(_GLF_IDENTITY(1u, uint(uint(1u))), 1u, 0u)) << uvec3(0u, 0u, 0u)))))))) | (uint(1u)))) | (uint(1u))))), uint(1u)))))) >> _GLF_IDENTITY(uint(1u), uint(1u))), ~ (~ (((1u << _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(uint(1u), uint(1u)), (_GLF_IDENTITY(uint(1u), uint(1u))) ^ 0u), ~ (~ (_GLF_IDENTITY(uint(1u), uint(1u)))))) >> _GLF_IDENTITY(_GLF_IDENTITY(uint(1u), uint(1u)), ~ (~ (_GLF_IDENTITY(uint(1u), uint(1u)))))))))), (uvec3(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (subgroup_size) << 0u), _GLF_IDENTITY((subgroup_size), ((subgroup_size)) << 0u) / uint(_GLF_ONE(1.0, injectionSwitch.y))), 0u, _GLF_IDENTITY(((1u << _GLF_IDENTITY(_GLF_IDENTITY(uint(1u), uint(1u)), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(uint(1u), clamp(uint(1u), _GLF_IDENTITY(uint(1u), 0u + (uint(1u))), _GLF_IDENTITY(uint(1u), (_GLF_IDENTITY(uint(1u), (uint(_GLF_IDENTITY(_GLF_IDENTITY(1u, min(_GLF_IDENTITY(1u, (1u) + 0u), 1u)), uint(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(1u, uint(uint(1u))), _GLF_IDENTITY(1u, clamp(1u, 1u, 1u)), _GLF_IDENTITY(0u, 1u * (0u))), (uvec3(0u, 0u, 0u) >> _GLF_IDENTITY(uvec3(3u), uvec3(3u))) ^ (_GLF_IDENTITY(uvec3(_GLF_IDENTITY(1u, uint(uint(1u))), 1u, 0u), (uvec3(_GLF_IDENTITY(1u, uint(uint(1u))), 1u, 0u)) << uvec3(0u, 0u, 0u)))))))) | (uint(1u)))) | (uint(1u))))), uint(1u)))))) >> _GLF_IDENTITY(uint(1u), uint(1u))), ~ (~ (((1u << _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(uint(1u), uint(1u)), (_GLF_IDENTITY(uint(1u), uint(1u))) ^ 0u), ~ (~ (_GLF_IDENTITY(uint(1u), uint(1u)))))) >> _GLF_IDENTITY(_GLF_IDENTITY(uint(1u), uint(1u)), ~ (~ (_GLF_IDENTITY(uint(1u), uint(1u))))))))))) >> uvec3(0u, 0u, 0u))))), (uint(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (subgroup_size) << 0u), _GLF_IDENTITY((subgroup_size), ((subgroup_size)) << 0u) / uint(_GLF_ONE(1.0, injectionSwitch.y))), 0u, _GLF_IDENTITY(((1u << _GLF_IDENTITY(_GLF_IDENTITY(uint(1u), uint(1u)), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(uint(1u), clamp(uint(1u), _GLF_IDENTITY(uint(1u), 0u + (uint(1u))), _GLF_IDENTITY(uint(1u), (_GLF_IDENTITY(uint(1u), (uint(_GLF_IDENTITY(_GLF_IDENTITY(1u, min(_GLF_IDENTITY(1u, (1u) + 0u), 1u)), uint(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(1u, uint(uint(1u))), _GLF_IDENTITY(1u, clamp(1u, 1u, 1u)), _GLF_IDENTITY(0u, 1u * (0u))), (uvec3(0u, 0u, 0u) >> _GLF_IDENTITY(uvec3(3u), uvec3(3u))) ^ (_GLF_IDENTITY(uvec3(_GLF_IDENTITY(1u, uint(uint(1u))), 1u, 0u), (uvec3(_GLF_IDENTITY(1u, uint(uint(1u))), 1u, 0u)) << uvec3(0u, 0u, 0u)))))))) | (uint(1u)))) | (uint(1u))))), uint(1u)))))) >> _GLF_IDENTITY(uint(1u), uint(1u))), ~ (~ (((1u << _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(uint(1u), uint(1u)), (_GLF_IDENTITY(uint(1u), uint(1u))) ^ 0u), ~ (~ (_GLF_IDENTITY(uint(1u), uint(1u)))))) >> _GLF_IDENTITY(_GLF_IDENTITY(uint(1u), uint(1u)), ~ (~ (_GLF_IDENTITY(uint(1u), uint(1u)))))))))), min(uvec3(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (subgroup_size) << 0u), _GLF_IDENTITY((subgroup_size), ((subgroup_size)) << 0u) / uint(_GLF_ONE(1.0, injectionSwitch.y))), 0u, _GLF_IDENTITY(((1u << _GLF_IDENTITY(_GLF_IDENTITY(uint(1u), uint(1u)), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(uint(1u), clamp(uint(1u), _GLF_IDENTITY(uint(1u), 0u + (uint(1u))), _GLF_IDENTITY(uint(1u), (_GLF_IDENTITY(uint(1u), (uint(_GLF_IDENTITY(_GLF_IDENTITY(1u, min(_GLF_IDENTITY(1u, (1u) + 0u), 1u)), uint(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(1u, uint(uint(1u))), _GLF_IDENTITY(1u, clamp(1u, 1u, 1u)), _GLF_IDENTITY(0u, 1u * (0u))), (uvec3(0u, 0u, 0u) >> _GLF_IDENTITY(uvec3(3u), uvec3(3u))) ^ (_GLF_IDENTITY(uvec3(_GLF_IDENTITY(1u, uint(uint(1u))), 1u, 0u), (uvec3(_GLF_IDENTITY(1u, uint(uint(1u))), 1u, 0u)) << uvec3(0u, 0u, 0u)))))))) | (uint(1u)))) | (uint(1u))))), uint(1u)))))) >> _GLF_IDENTITY(uint(1u), uint(1u))), ~ (~ (((1u << _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(uint(1u), uint(1u)), (_GLF_IDENTITY(uint(1u), uint(1u))) ^ 0u), ~ (~ (_GLF_IDENTITY(uint(1u), uint(1u)))))) >> _GLF_IDENTITY(_GLF_IDENTITY(uint(1u), uint(1u)), ~ (~ (_GLF_IDENTITY(uint(1u), uint(1u)))))))))), _GLF_IDENTITY(uvec3(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (subgroup_size) << 0u), _GLF_IDENTITY((subgroup_size), ((subgroup_size)) << 0u) / uint(_GLF_ONE(1.0, injectionSwitch.y))), 0u, _GLF_IDENTITY(((1u << _GLF_IDENTITY(_GLF_IDENTITY(uint(1u), uint(1u)), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(uint(1u), clamp(uint(1u), _GLF_IDENTITY(uint(1u), 0u + (uint(1u))), _GLF_IDENTITY(uint(1u), (_GLF_IDENTITY(uint(1u), (uint(_GLF_IDENTITY(_GLF_IDENTITY(1u, min(_GLF_IDENTITY(1u, (1u) + 0u), 1u)), uint(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(1u, uint(uint(1u))), _GLF_IDENTITY(1u, clamp(1u, 1u, 1u)), _GLF_IDENTITY(0u, 1u * (0u))), (uvec3(0u, 0u, 0u) >> _GLF_IDENTITY(uvec3(3u), uvec3(3u))) ^ (_GLF_IDENTITY(uvec3(_GLF_IDENTITY(1u, uint(uint(1u))), 1u, 0u), (uvec3(_GLF_IDENTITY(1u, uint(uint(1u))), 1u, 0u)) << uvec3(0u, 0u, 0u)))))))) | (uint(1u)))) | (uint(1u))))), uint(1u)))))) >> _GLF_IDENTITY(uint(1u), uint(1u))), ~ (~ (((1u << _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(uint(1u), uint(1u)), (_GLF_IDENTITY(uint(1u), uint(1u))) ^ 0u), ~ (~ (_GLF_IDENTITY(uint(1u), uint(1u)))))) >> _GLF_IDENTITY(_GLF_IDENTITY(uint(1u), uint(1u)), ~ (~ (_GLF_IDENTITY(uint(1u), uint(1u)))))))))), (uvec3(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (subgroup_size) << 0u), _GLF_IDENTITY((subgroup_size), ((subgroup_size)) << 0u) / uint(_GLF_ONE(1.0, injectionSwitch.y))), 0u, _GLF_IDENTITY(((1u << _GLF_IDENTITY(_GLF_IDENTITY(uint(1u), uint(1u)), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(uint(1u), clamp(uint(1u), _GLF_IDENTITY(uint(1u), 0u + (uint(1u))), _GLF_IDENTITY(uint(1u), (_GLF_IDENTITY(uint(1u), (uint(_GLF_IDENTITY(_GLF_IDENTITY(1u, min(_GLF_IDENTITY(1u, (1u) + 0u), 1u)), uint(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(1u, uint(uint(1u))), _GLF_IDENTITY(1u, clamp(1u, 1u, 1u)), _GLF_IDENTITY(0u, 1u * (0u))), (uvec3(0u, 0u, 0u) >> _GLF_IDENTITY(uvec3(3u), uvec3(3u))) ^ (_GLF_IDENTITY(uvec3(_GLF_IDENTITY(1u, uint(uint(1u))), 1u, 0u), (uvec3(_GLF_IDENTITY(1u, uint(uint(1u))), 1u, 0u)) << uvec3(0u, 0u, 0u)))))))) | (uint(1u)))) | (uint(1u))))), uint(1u)))))) >> _GLF_IDENTITY(uint(1u), uint(1u))), ~ (~ (((1u << _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(uint(1u), uint(1u)), (_GLF_IDENTITY(uint(1u), uint(1u))) ^ 0u), ~ (~ (_GLF_IDENTITY(uint(1u), uint(1u)))))) >> _GLF_IDENTITY(_GLF_IDENTITY(uint(1u), uint(1u)), ~ (~ (_GLF_IDENTITY(uint(1u), uint(1u))))))))))) >> uvec3(0u, 0u, 0u)))))) | 0u), uint(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (subgroup_size) << 0u), _GLF_IDENTITY((subgroup_size), ((subgroup_size)) << 0u) / uint(_GLF_ONE(1.0, injectionSwitch.y))), 0u, _GLF_IDENTITY(((1u << _GLF_IDENTITY(_GLF_IDENTITY(uint(1u), uint(1u)), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(uint(1u), clamp(uint(1u), _GLF_IDENTITY(uint(1u), 0u + (uint(1u))), _GLF_IDENTITY(uint(1u), (_GLF_IDENTITY(uint(1u), (uint(_GLF_IDENTITY(_GLF_IDENTITY(1u, min(_GLF_IDENTITY(1u, (1u) + 0u), 1u)), uint(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(1u, uint(uint(1u))), _GLF_IDENTITY(1u, clamp(1u, 1u, 1u)), _GLF_IDENTITY(0u, 1u * (0u))), (uvec3(0u, 0u, 0u) >> _GLF_IDENTITY(uvec3(3u), uvec3(3u))) ^ (_GLF_IDENTITY(uvec3(_GLF_IDENTITY(1u, uint(uint(1u))), 1u, 0u), (uvec3(_GLF_IDENTITY(1u, uint(uint(1u))), 1u, 0u)) << uvec3(0u, 0u, 0u)))))))) | (uint(1u)))) | (uint(1u))))), uint(1u)))))) >> _GLF_IDENTITY(uint(1u), uint(1u))), ~ (~ (((1u << _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(uint(1u), uint(1u)), (_GLF_IDENTITY(uint(1u), uint(1u))) ^ 0u), ~ (~ (_GLF_IDENTITY(uint(1u), uint(1u)))))) >> _GLF_IDENTITY(_GLF_IDENTITY(uint(1u), uint(1u)), ~ (~ (_GLF_IDENTITY(uint(1u), uint(1u)))))))))), min(uvec3(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (subgroup_size) << 0u), _GLF_IDENTITY((subgroup_size), ((subgroup_size)) << 0u) / uint(_GLF_ONE(1.0, injectionSwitch.y))), 0u, _GLF_IDENTITY(((1u << _GLF_IDENTITY(_GLF_IDENTITY(uint(1u), uint(1u)), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(uint(1u), clamp(uint(1u), _GLF_IDENTITY(uint(1u), 0u + (uint(1u))), _GLF_IDENTITY(uint(1u), (_GLF_IDENTITY(uint(1u), (uint(_GLF_IDENTITY(_GLF_IDENTITY(1u, min(_GLF_IDENTITY(1u, (1u) + 0u), 1u)), uint(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(1u, uint(uint(1u))), _GLF_IDENTITY(1u, clamp(1u, 1u, 1u)), _GLF_IDENTITY(0u, 1u * (0u))), (uvec3(0u, 0u, 0u) >> _GLF_IDENTITY(uvec3(3u), uvec3(3u))) ^ (_GLF_IDENTITY(uvec3(_GLF_IDENTITY(1u, uint(uint(1u))), 1u, 0u), (uvec3(_GLF_IDENTITY(1u, uint(uint(1u))), 1u, 0u)) << uvec3(0u, 0u, 0u)))))))) | (uint(1u)))) | (uint(1u))))), uint(1u)))))) >> _GLF_IDENTITY(uint(1u), uint(1u))), ~ (~ (((1u << _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(uint(1u), uint(1u)), (_GLF_IDENTITY(uint(1u), uint(1u))) ^ 0u), ~ (~ (_GLF_IDENTITY(uint(1u), uint(1u)))))) >> _GLF_IDENTITY(_GLF_IDENTITY(uint(1u), uint(1u)), ~ (~ (_GLF_IDENTITY(uint(1u), uint(1u)))))))))), _GLF_IDENTITY(uvec3(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (subgroup_size) << 0u), _GLF_IDENTITY((subgroup_size), ((subgroup_size)) << 0u) / uint(_GLF_ONE(1.0, injectionSwitch.y))), 0u, _GLF_IDENTITY(((1u << _GLF_IDENTITY(_GLF_IDENTITY(uint(1u), uint(1u)), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(uint(1u), clamp(uint(1u), _GLF_IDENTITY(uint(1u), 0u + (uint(1u))), _GLF_IDENTITY(uint(1u), (_GLF_IDENTITY(uint(1u), (uint(_GLF_IDENTITY(_GLF_IDENTITY(1u, min(_GLF_IDENTITY(1u, (1u) + 0u), 1u)), uint(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(1u, uint(uint(1u))), _GLF_IDENTITY(1u, clamp(1u, 1u, 1u)), _GLF_IDENTITY(0u, 1u * (0u))), (uvec3(0u, 0u, 0u) >> _GLF_IDENTITY(uvec3(3u), uvec3(3u))) ^ (_GLF_IDENTITY(uvec3(_GLF_IDENTITY(1u, uint(uint(1u))), 1u, 0u), (uvec3(_GLF_IDENTITY(1u, uint(uint(1u))), 1u, 0u)) << uvec3(0u, 0u, 0u)))))))) | (uint(1u)))) | (uint(1u))))), uint(1u)))))) >> _GLF_IDENTITY(uint(1u), uint(1u))), ~ (~ (((1u << _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(uint(1u), uint(1u)), (_GLF_IDENTITY(uint(1u), uint(1u))) ^ 0u), ~ (~ (_GLF_IDENTITY(uint(1u), uint(1u)))))) >> _GLF_IDENTITY(_GLF_IDENTITY(uint(1u), uint(1u)), ~ (~ (_GLF_IDENTITY(uint(1u), uint(1u)))))))))), (uvec3(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (subgroup_size) << 0u), _GLF_IDENTITY((subgroup_size), ((subgroup_size)) << 0u) / uint(_GLF_ONE(1.0, injectionSwitch.y))), 0u, _GLF_IDENTITY(((1u << _GLF_IDENTITY(_GLF_IDENTITY(uint(1u), uint(1u)), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(uint(1u), clamp(uint(1u), _GLF_IDENTITY(uint(1u), 0u + (uint(1u))), _GLF_IDENTITY(uint(1u), (_GLF_IDENTITY(uint(1u), (uint(_GLF_IDENTITY(_GLF_IDENTITY(1u, min(_GLF_IDENTITY(1u, (1u) + 0u), 1u)), uint(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(1u, uint(uint(1u))), _GLF_IDENTITY(1u, clamp(1u, 1u, 1u)), _GLF_IDENTITY(0u, 1u * (0u))), (uvec3(0u, 0u, 0u) >> _GLF_IDENTITY(uvec3(3u), uvec3(3u))) ^ (_GLF_IDENTITY(uvec3(_GLF_IDENTITY(1u, uint(uint(1u))), 1u, 0u), (uvec3(_GLF_IDENTITY(1u, uint(uint(1u))), 1u, 0u)) << uvec3(0u, 0u, 0u)))))))) | (uint(1u)))) | (uint(1u))))), uint(1u)))))) >> _GLF_IDENTITY(uint(1u), uint(1u))), ~ (~ (((1u << _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(uint(1u), uint(1u)), (_GLF_IDENTITY(uint(1u), uint(1u))) ^ 0u), ~ (~ (_GLF_IDENTITY(uint(1u), uint(1u)))))) >> _GLF_IDENTITY(_GLF_IDENTITY(uint(1u), uint(1u)), ~ (~ (_GLF_IDENTITY(uint(1u), uint(1u))))))))))) >> uvec3(0u, 0u, 0u)))))))))));
 for(int _injected_loop_counter = ((1 << _GLF_IDENTITY(int(6), int(6))) >> _GLF_IDENTITY(int(6), int(6))); _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      continue;
     return;
    }
  }
 atomicStore(buf[virtual_gid], _GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(1, ~ (~ (1)))), ~ (~ (uint(1)))), (uint(1)) << 0u), 4, 64, 4);
 if(subgroup_local_id + 1 < subgroup_size)
  {
   do
    {
     atomicStore(buf[_GLF_IDENTITY(next_virtual_gid, (next_virtual_gid) | (next_virtual_gid))], uint(2), _GLF_IDENTITY(4, (false ? _GLF_FUZZED(-20897) : 4)), 64, 4);
    }
   while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY((_GLF_IDENTITY(false, (false) || false)) || _GLF_IDENTITY(false, false || (false)), bool(bvec2(_GLF_IDENTITY((_GLF_IDENTITY(false, (false) || false)) || _GLF_IDENTITY(false, false || (false)), ! (! ((_GLF_IDENTITY(false, (false) || false)) || _GLF_IDENTITY(false, false || (false))))), false))))))
      {
       do
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          continue;
         if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false)))))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            continue;
           return;
          }
         if(_GLF_DEAD(false))
          continue;
         return;
        }
       while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, (false) && true)));
      }
    }
   else
    {
    }
   if(_GLF_DEAD(false))
    return;
   subgroupAll(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((false), false || (_GLF_IDENTITY((false), bool(bvec4(_GLF_IDENTITY((false), ! (! ((false)))), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))))))), _GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, false, false), bvec3(bvec4(bvec3(false, false, false), true)))))))) || (false), bool(bvec3(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, false, false), bvec3(bvec4(bvec3(false, false, false), true)))))))) || (false), true, true)))), (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), false || (false))) || false));
   if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))))
    return;
  }
 else
  {
   for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter < int(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-46.83)), float(injectionSwitch.y), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), ! (! (_GLF_IDENTITY(_injected_loop_counter, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(_injected_loop_counter, (true ? _injected_loop_counter : _GLF_FUZZED(43748)))), (_GLF_IDENTITY(~ (_GLF_IDENTITY(_injected_loop_counter, (true ? _injected_loop_counter : _GLF_FUZZED(43748)))), (~ (_GLF_IDENTITY(_injected_loop_counter, (true ? _injected_loop_counter : _GLF_FUZZED(43748))))) << 0)) / 1))) < int(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-46.83)), float(injectionSwitch.y), bool(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (! (injectionSwitch.x < injectionSwitch.y)))) || false)))))))))))); _injected_loop_counter ++)
    {
     if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
      }
     else
      {
       for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter != _GLF_IDENTITY(0, 0 + (0)), bool(bvec4(_injected_loop_counter != _GLF_IDENTITY(0, _GLF_IDENTITY(0 + (0), 0 ^ (_GLF_IDENTITY(0, _GLF_IDENTITY(min(0, 0), max(_GLF_IDENTITY(min(0, 0), (_GLF_IDENTITY(min(0, 0), 0 ^ (min(0, 0)))) + 0), min(0, 0)))) + _GLF_IDENTITY((0), min((0), (0)))))), false, true, false)))); _injected_loop_counter --)
        {
         if(_GLF_WRAPPED_IF_FALSE(false))
          {
          }
         else
          {
           for(int _injected_loop_counter = (int(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y)) | _GLF_IDENTITY(1, int(int(1)))); _GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter != _GLF_IDENTITY(0, ~ (~ (0)))), (_GLF_WRAPPED_LOOP(_injected_loop_counter != 0)) && _GLF_IDENTITY(true, true && (true))); _injected_loop_counter --)
            {
             if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              {
              }
             else
              {
               atomicStore(buf[next_virtual_gid], _GLF_IDENTITY(uint(2), (_GLF_IDENTITY(uint(2), _GLF_IDENTITY((uint(2)) ^ 0u, (true ? (uint(2)) ^ 0u : _GLF_FUZZED(workgroup_base))))) + 0u), 4, _GLF_IDENTITY(64, clamp(_GLF_IDENTITY(64, (_GLF_IDENTITY(_GLF_IDENTITY(64, (64) >> 0), (0 ^ _GLF_IDENTITY(0, ~ (_GLF_IDENTITY(~ (0), int(int(~ (0))))))) ^ (_GLF_IDENTITY(64, (64) >> 0)))) << 0), 64, 64)), 4);
              }
            }
          }
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            continue;
           return;
          }
         if(_GLF_DEAD(false))
          continue;
        }
      }
    }
   subgroupAll(true);
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(275.470)), vec2(_GLF_FUZZED(36.80), _GLF_IDENTITY((injectionSwitch)[1], ((injectionSwitch)[1]) / 1.0)), bvec2(false, true))).x, _GLF_IDENTITY(clamp(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(275.470)), vec2(_GLF_FUZZED(36.80), _GLF_IDENTITY((injectionSwitch)[1], ((injectionSwitch)[1]) / 1.0)), bvec2(false, true))).x, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(275.470)), vec2(_GLF_FUZZED(_GLF_IDENTITY(36.80, (false ? _GLF_FUZZED(5.7) : _GLF_IDENTITY(36.80, (36.80) / sqrt(1.0))))), _GLF_IDENTITY((injectionSwitch)[1], _GLF_IDENTITY(((injectionSwitch)[1]), (((injectionSwitch)[1])) * 1.0) / 1.0)), bvec2(false, true))).x, mix(float(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY((injectionSwitch)[0], max((injectionSwitch)[0], (injectionSwitch)[0])), _GLF_FUZZED(_GLF_IDENTITY(275.470, (true ? 275.470 : _GLF_FUZZED(reflect(-9.4, -27.55)))))), vec2(_GLF_FUZZED(36.80), _GLF_IDENTITY((injectionSwitch)[1], ((injectionSwitch)[1]) / 1.0)), bvec2(false, true))).x), float(_GLF_FUZZED(-9902.8441)), bool(false))), _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(275.470)), vec2(_GLF_FUZZED(36.80), _GLF_IDENTITY((injectionSwitch)[1], ((injectionSwitch)[1]) / 1.0)), bvec2(false, true))).x), (false ? _GLF_FUZZED(-5893.7225) : clamp(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(275.470)), vec2(_GLF_FUZZED(36.80), _GLF_IDENTITY((injectionSwitch)[1], ((injectionSwitch)[1]) / 1.0)), bvec2(false, true))).x, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(275.470)), vec2(_GLF_FUZZED(_GLF_IDENTITY(36.80, (false ? _GLF_FUZZED(5.7) : _GLF_IDENTITY(_GLF_IDENTITY(36.80, max(_GLF_IDENTITY(36.80, (36.80) - 0.0), 36.80)), (36.80) / _GLF_IDENTITY(sqrt(1.0), (sqrt(1.0)) - _GLF_IDENTITY(dot(vec3(0.0, sqrt(1.0), _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), vec2(1.0, 0.0)))), vec3(1.0, 0.0, 0.0)), dot(vec3(0.0, sqrt(1.0), _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), vec2(1.0, 0.0)))), vec3(1.0, 0.0, 0.0)))))))), _GLF_IDENTITY((injectionSwitch)[1], _GLF_IDENTITY(((injectionSwitch)[1]), (((injectionSwitch)[_GLF_IDENTITY(1, 1 * (1))])) * 1.0) / 1.0)), bvec2(false, true))).x, mix(float(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY((injectionSwitch)[0], max((injectionSwitch)[0], (_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), injectionSwitch, injectionSwitch)))[0])), _GLF_FUZZED(_GLF_IDENTITY(275.470, (true ? 275.470 : _GLF_FUZZED(reflect(-9.4, -27.55)))))), vec2(_GLF_FUZZED(36.80), _GLF_IDENTITY((injectionSwitch)[1], ((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)))[1]) / 1.0)), bvec2(false, true))).x), float(_GLF_FUZZED(-9902.8441)), bool(false))), _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[_GLF_IDENTITY(0, (_GLF_IDENTITY(0, int(ivec4(0, 1, 0, 1)))) - 0)], _GLF_FUZZED(275.470)), vec2(_GLF_FUZZED(36.80), _GLF_IDENTITY((injectionSwitch)[1], ((injectionSwitch)[1]) / 1.0)), bvec2(false, true))).x)))), _GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)), _GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x))), _GLF_IDENTITY(float(mat3x4(clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(275.470)), _GLF_IDENTITY(vec2(_GLF_FUZZED(36.80), _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch), max((injectionSwitch), (injectionSwitch)))[1], ((injectionSwitch)[_GLF_IDENTITY(1, ~ (~ (1)))]) / 1.0)), min(_GLF_IDENTITY(vec2(_GLF_FUZZED(36.80), _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch), max((injectionSwitch), (injectionSwitch)))[1], ((injectionSwitch)[_GLF_IDENTITY(1, ~ (~ (1)))]) / 1.0)), vec2(1.0, 1.0) * (vec2(_GLF_FUZZED(36.80), _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch), max((injectionSwitch), (injectionSwitch)))[1], ((injectionSwitch)[_GLF_IDENTITY(1, ~ (~ (1)))]) / 1.0)))), vec2(_GLF_FUZZED(36.80), _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch), max((injectionSwitch), (injectionSwitch)))[1], ((injectionSwitch)[_GLF_IDENTITY(1, ~ (~ (1)))]) / 1.0)))), bvec2(false, true))).x, clamp(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(275.470)), vec2(_GLF_FUZZED(36.80), _GLF_IDENTITY((injectionSwitch)[1], ((injectionSwitch)[1]) / 1.0)), bvec2(false, true))).x, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(275.470)), vec2(_GLF_FUZZED(_GLF_IDENTITY(36.80, (false ? _GLF_FUZZED(5.7) : _GLF_IDENTITY(36.80, (36.80) / sqrt(1.0))))), _GLF_IDENTITY((injectionSwitch)[1], _GLF_IDENTITY(((injectionSwitch)[1]), (((injectionSwitch)[1])) * 1.0) / 1.0)), bvec2(false, true))), max(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(275.470)), vec2(_GLF_FUZZED(_GLF_IDENTITY(36.80, (false ? _GLF_FUZZED(5.7) : _GLF_IDENTITY(36.80, (36.80) / sqrt(1.0))))), _GLF_IDENTITY((injectionSwitch)[1], _GLF_IDENTITY(((injectionSwitch)[1]), (((injectionSwitch)[1])) * 1.0) / 1.0)), bvec2(false, true))), _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(275.470)), vec2(_GLF_FUZZED(_GLF_IDENTITY(36.80, (false ? _GLF_FUZZED(5.7) : _GLF_IDENTITY(36.80, (36.80) / sqrt(1.0))))), _GLF_IDENTITY((injectionSwitch)[1], _GLF_IDENTITY(((injectionSwitch)[1]), (((injectionSwitch)[1])) * 1.0) / 1.0)), bvec2(false, true))))).x, mix(float(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY((injectionSwitch)[0], max((injectionSwitch)[0], (injectionSwitch)[_GLF_IDENTITY(0, max(_GLF_IDENTITY(0, 1 * (0)), _GLF_IDENTITY(0, 0 + (0))))])), _GLF_FUZZED(_GLF_IDENTITY(_GLF_IDENTITY(275.470, min(275.470, _GLF_IDENTITY(275.470, clamp(275.470, 275.470, 275.470)))), (true ? 275.470 : _GLF_FUZZED(reflect(-9.4, -27.55)))))), vec2(_GLF_FUZZED(36.80), _GLF_IDENTITY((injectionSwitch)[1], _GLF_IDENTITY(((injectionSwitch)[1]), clamp(_GLF_IDENTITY(((injectionSwitch)[1]), clamp(((injectionSwitch)[1]), ((injectionSwitch)[1]), ((injectionSwitch)[1]))), _GLF_IDENTITY(((injectionSwitch)[1]), (((injectionSwitch)[1])) / 1.0), ((injectionSwitch)[1]))) / 1.0)), bvec2(false, true))).x), float(_GLF_FUZZED(-9902.8441)), bool(false))), _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(275.470)), vec2(_GLF_FUZZED(36.80), _GLF_IDENTITY((injectionSwitch)[1], ((injectionSwitch)[1]) / 1.0)), bvec2(false, true))).x)), _GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0), clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x))), 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0)), min(float(mat3x4(clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(_GLF_IDENTITY(vec2((injectionSwitch)[0], _GLF_FUZZED(275.470)), clamp(vec2((injectionSwitch)[0], _GLF_FUZZED(275.470)), vec2((injectionSwitch)[0], _GLF_FUZZED(275.470)), vec2((injectionSwitch)[0], _GLF_FUZZED(275.470)))), vec2(_GLF_FUZZED(36.80), _GLF_IDENTITY((injectionSwitch)[1], ((injectionSwitch)[1]) / 1.0)), bvec2(false, true))).x, clamp(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(275.470)), vec2(_GLF_FUZZED(36.80), _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch), min((injectionSwitch), _GLF_IDENTITY((injectionSwitch), max((injectionSwitch), (injectionSwitch)))))[1], ((injectionSwitch)[1]) / 1.0)), bvec2(false, true))).x, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(275.470)), vec2(_GLF_FUZZED(_GLF_IDENTITY(_GLF_IDENTITY(36.80, clamp(36.80, 36.80, 36.80)), (false ? _GLF_FUZZED(5.7) : _GLF_IDENTITY(36.80, (36.80) / sqrt(1.0))))), _GLF_IDENTITY((injectionSwitch)[1], _GLF_IDENTITY(((injectionSwitch)[1]), (((injectionSwitch)[1])) * 1.0) / 1.0)), bvec2(false, true))).x, mix(float(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY((injectionSwitch)[0], max((_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0))) / vec2(1.0, 1.0)))))[0], (injectionSwitch)[0])), _GLF_FUZZED(_GLF_IDENTITY(275.470, (true ? 275.470 : _GLF_FUZZED(reflect(-9.4, _GLF_IDENTITY(-27.55, max(-27.55, -27.55)))))))), vec2(_GLF_FUZZED(36.80), _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch), ((injectionSwitch)) / vec2(1.0, 1.0))[1], ((_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)))[1]) / 1.0)), bvec2(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, false)), (bool(bvec2(false, false))) && true)), true))).x), float(_GLF_FUZZED(-9902.8441)), bool(false))), _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(275.470)), vec2(_GLF_FUZZED(36.80), _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)))[1], ((injectionSwitch)[1]) / 1.0)), bvec2(false, true))).x)), _GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)), _GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x), min(_GLF_IDENTITY(clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x), (clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) / 1.0), clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x))))), 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0)), float(mat3x4(clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(275.470)), vec2(_GLF_FUZZED(36.80), _GLF_IDENTITY((injectionSwitch)[1], ((injectionSwitch)[1]) / 1.0)), _GLF_IDENTITY(bvec2(false, true), bvec2(bvec2(bvec2(false, true)))))).x, clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(275.470)), vec2(_GLF_FUZZED(36.80), _GLF_IDENTITY((injectionSwitch)[1], ((injectionSwitch)[1]) / 1.0)), bvec2(false, true))).x, clamp(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(275.470)), vec2(_GLF_FUZZED(36.80), _GLF_IDENTITY((injectionSwitch)[1], ((injectionSwitch)[1]) / 1.0)), bvec2(false, true))).x, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(275.470)), vec2(_GLF_FUZZED(36.80), _GLF_IDENTITY((injectionSwitch)[1], ((injectionSwitch)[1]) / 1.0)), bvec2(false, true))).x, max(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(275.470)), vec2(_GLF_FUZZED(36.80), _GLF_IDENTITY((injectionSwitch)[1], ((injectionSwitch)[1]) / 1.0)), bvec2(false, true))).x, _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(275.470)), vec2(_GLF_FUZZED(36.80), _GLF_IDENTITY((injectionSwitch)[1], ((injectionSwitch)[1]) / 1.0)), bvec2(false, true))).x)), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(275.470)), vec2(_GLF_FUZZED(36.80), _GLF_IDENTITY((injectionSwitch)[1], ((injectionSwitch)[1]) / 1.0)), bvec2(false, true))).x, mix(float(_GLF_FUZZED(9.1)), float(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(275.470)), vec2(_GLF_FUZZED(36.80), _GLF_IDENTITY((injectionSwitch)[1], ((injectionSwitch)[1]) / 1.0)), bvec2(false, true))).x), bool(true))))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(275.470)), vec2(_GLF_FUZZED(_GLF_IDENTITY(36.80, (false ? _GLF_FUZZED(5.7) : _GLF_IDENTITY(36.80, (36.80) / sqrt(1.0))))), _GLF_IDENTITY((injectionSwitch)[1], _GLF_IDENTITY(((injectionSwitch)[1]), (((injectionSwitch)[1])) * 1.0) / 1.0)), bvec2(false, true))), (true ? _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(275.470)), vec2(_GLF_FUZZED(_GLF_IDENTITY(36.80, (false ? _GLF_FUZZED(5.7) : _GLF_IDENTITY(36.80, (36.80) / sqrt(1.0))))), _GLF_IDENTITY((injectionSwitch)[1], _GLF_IDENTITY(((injectionSwitch)[1]), (((injectionSwitch)[1])) * 1.0) / 1.0)), bvec2(false, true))), clamp(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(275.470)), vec2(_GLF_FUZZED(_GLF_IDENTITY(36.80, (false ? _GLF_FUZZED(5.7) : _GLF_IDENTITY(36.80, (36.80) / sqrt(1.0))))), _GLF_IDENTITY((injectionSwitch)[1], _GLF_IDENTITY(((injectionSwitch)[1]), (((injectionSwitch)[1])) * 1.0) / 1.0)), bvec2(false, true))), _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(275.470)), vec2(_GLF_FUZZED(_GLF_IDENTITY(36.80, (false ? _GLF_FUZZED(5.7) : _GLF_IDENTITY(36.80, (36.80) / sqrt(1.0))))), _GLF_IDENTITY((injectionSwitch)[1], _GLF_IDENTITY(((injectionSwitch)[1]), (((injectionSwitch)[1])) * 1.0) / 1.0)), bvec2(false, true))), _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(275.470)), vec2(_GLF_FUZZED(_GLF_IDENTITY(36.80, (false ? _GLF_FUZZED(5.7) : _GLF_IDENTITY(36.80, (36.80) / sqrt(1.0))))), _GLF_IDENTITY((injectionSwitch)[1], _GLF_IDENTITY(((injectionSwitch)[1]), (((injectionSwitch)[1])) * 1.0) / 1.0)), bvec2(false, true))))) : _GLF_FUZZED(vec2(9.7, -541.604)))).x, mix(float(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY((injectionSwitch)[0], max((injectionSwitch)[0], (injectionSwitch)[0])), _GLF_FUZZED(_GLF_IDENTITY(275.470, (true ? 275.470 : _GLF_FUZZED(reflect(-9.4, -27.55)))))), _GLF_IDENTITY(vec2(_GLF_FUZZED(36.80), _GLF_IDENTITY((injectionSwitch)[1], ((injectionSwitch)[1]) / 1.0)), min(vec2(_GLF_FUZZED(36.80), _GLF_IDENTITY((injectionSwitch)[1], ((injectionSwitch)[1]) / 1.0)), _GLF_IDENTITY(vec2(_GLF_FUZZED(36.80), _GLF_IDENTITY((injectionSwitch)[1], ((injectionSwitch)[1]) / 1.0)), clamp(vec2(_GLF_FUZZED(36.80), _GLF_IDENTITY((injectionSwitch)[1], ((injectionSwitch)[1]) / 1.0)), vec2(_GLF_FUZZED(36.80), _GLF_IDENTITY((injectionSwitch)[1], ((injectionSwitch)[1]) / 1.0)), vec2(_GLF_FUZZED(36.80), _GLF_IDENTITY((injectionSwitch)[1], ((injectionSwitch)[1]) / 1.0)))))), bvec2(false, true))).x), float(_GLF_FUZZED(-9902.8441)), bool(false))), _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(275.470)), vec2(_GLF_FUZZED(36.80), _GLF_IDENTITY((injectionSwitch)[1], ((injectionSwitch)[1]) / 1.0)), bvec2(false, true))).x)), _GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)), _GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x))), 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 1.0, 0.0, 1.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)), 1.0, 1.0, 1.0)))))) > injectionSwitch.y))))
    return;
   if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec3(bvec2(false, true), true)))))))
    {
    }
   else
    {
     do
      {
       do
        {
         do
          {
           if(_GLF_WRAPPED_IF_FALSE(false))
            {
            }
           else
            {
             if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), ! (! (! _GLF_IDENTITY(_GLF_IDENTITY((! (false)), ! (_GLF_IDENTITY(! ((! (false))), ! (! (! ((! (false)))))))), _GLF_IDENTITY(false, ! (! (false))) || ((! (false)))))))), false)), ! (! (bool(bvec2(_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || ((! (false))), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || ((! (false))), bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || ((! (false))), true, true, false)))))))), false))))))))
              {
              }
             else
              {
               if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(mix(float(_GLF_IDENTITY(_GLF_FUZZED((9.3 + -9.4)), (_GLF_FUZZED((9.3 + -9.4))) / abs(1.0))), float(injectionSwitch.y), bool(true)), mix(float(_GLF_FUZZED((- -9693.9447))), float(mix(float(_GLF_IDENTITY(_GLF_FUZZED((9.3 + -9.4)), (_GLF_FUZZED((9.3 + -9.4))) / abs(1.0))), float(injectionSwitch.y), bool(true))), bool(true)))), injectionSwitch.y)), true && (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_IDENTITY(_GLF_FUZZED((9.3 + -9.4)), (_GLF_FUZZED((9.3 + -9.4))) / abs(1.0))), float(injectionSwitch.y), bool(true))), injectionSwitch.y))))), _GLF_IDENTITY(bool(bvec2((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED((9.3 + -9.4))), float(injectionSwitch.y), bool(true))), injectionSwitch.y))), true)), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(bool(bvec2((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED((9.3 + -9.4))), float(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(tan(vec2(-77.20, -6.0))) : _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)))).y), bool(true))), injectionSwitch.y))), true)), (bool(bvec2((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED((9.3 + -9.4))), float(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(tan(vec2(-77.20, -6.0))) : _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)))).y), bool(true))), injectionSwitch.y))), true))) || false), false, true)), ! _GLF_IDENTITY((! (bool(bvec3(bool(bvec2((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED((9.3 + -9.4))), float(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).y), bool(true))), injectionSwitch.y))), true)), false, true)))), false || ((! (bool(bvec3(bool(bvec2((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED((9.3 + -9.4))), float(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).y), bool(true))), injectionSwitch.y))), true)), false, true))))))))))), _GLF_IDENTITY(false || _GLF_IDENTITY((_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool((_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), (_GLF_IDENTITY(bool((_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), bool(bool(bool((_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))) || false)), false || (bool(_GLF_IDENTITY(bool((_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), (_GLF_IDENTITY(bool((_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), bool(bool(bool((_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))) || false))))), ! (! (_GLF_IDENTITY(false || (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true && (_GLF_IDENTITY(false || (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)))).y, _GLF_IDENTITY(float(mat3x4(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)))).y, 1.0, 0.0, 0.0, 1.0, 0.0, determinant(mat4(0.0, 0.0, 1.0, round(length(normalize(1.0))), 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, abs(0.0))), 1.0, _GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0)), dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0))), 1.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y))), 1.0 * (float(mat3x4(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)))).y, 1.0, 0.0, 0.0, 1.0, 0.0, determinant(mat4(0.0, 0.0, 1.0, round(length(normalize(1.0))), 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, abs(0.0))), 1.0, _GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0)), dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0))), 1.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y)))))))))), bool(bvec4(false || (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), false, false, false))))))))))
                {
                 if(_GLF_DEAD(false))
                  return;
                 do
                  {
                   if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                    {
                    }
                   else
                    {
                     if(_GLF_WRAPPED_IF_TRUE(true))
                      {
                       return;
                      }
                     else
                      {
                      }
                    }
                  }
                 while(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(false), false || (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(false), ! (! (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(false), true && (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(false), ! (! (_GLF_WRAPPED_LOOP(false))))))))))), true && (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(false), _GLF_IDENTITY(false || (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(false), ! (! (_GLF_WRAPPED_LOOP(false)))), bool(bvec4(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(false), ! (! (_GLF_WRAPPED_LOOP(false)))), true, true, true)))), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(false || (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(false), ! (! (_GLF_WRAPPED_LOOP(false))))), true && (_GLF_IDENTITY(false || (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(false), ! (! (_GLF_WRAPPED_LOOP(false)))), bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(false), ! (! (_GLF_WRAPPED_LOOP(false)))), bool(bvec4(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(false), ! (! (_GLF_WRAPPED_LOOP(false)))), _GLF_IDENTITY(true, (true) && true), true, true))), true, true, true)))), (false || (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(false), ! (! (_GLF_WRAPPED_LOOP(false)))), (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(false), ! (! (_GLF_WRAPPED_LOOP(false))))) || false))) && true))), false, true, true)), bool(bvec4(bool(bvec4(_GLF_IDENTITY(false || (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(false), ! (! (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(false), true && (_GLF_WRAPPED_LOOP(false)))))), ! (! (_GLF_WRAPPED_LOOP(false))))), _GLF_IDENTITY(true && (_GLF_IDENTITY(false || (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(false), ! (! (_GLF_WRAPPED_LOOP(false))))), (false || (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(false), ! (! (_GLF_WRAPPED_LOOP(false)))))) && true)), bool(bvec4(true && (_GLF_IDENTITY(false || (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(false), ! (! (_GLF_WRAPPED_LOOP(false))))), (false || (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(false), ! (! (_GLF_WRAPPED_LOOP(false)))))) && true)), false, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), false, true, true)), false, true, false))))), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(false), _GLF_IDENTITY(false || (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(false), ! (! (_GLF_WRAPPED_LOOP(false)))), bool(bvec4(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(false), ! (! (_GLF_WRAPPED_LOOP(false)))), true, true, true)))), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(false || (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(false), ! (! (_GLF_WRAPPED_LOOP(false))))), true && (_GLF_IDENTITY(false || (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(false), ! (! (_GLF_WRAPPED_LOOP(false)))), bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(false), ! (! (_GLF_WRAPPED_LOOP(false)))), bool(bvec4(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(false), ! (! (_GLF_WRAPPED_LOOP(false)))), _GLF_IDENTITY(true, (true) && true), true, true))), true, true, true)))), (false || (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(false), ! (! (_GLF_WRAPPED_LOOP(false)))), (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(false), ! (! (_GLF_WRAPPED_LOOP(false))))) || false))) && true))), false, true, true)), bool(bvec4(bool(bvec4(_GLF_IDENTITY(false || (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(false), ! (! (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(false), true && (_GLF_WRAPPED_LOOP(false)))))), ! (! (_GLF_WRAPPED_LOOP(false))))), _GLF_IDENTITY(true && (_GLF_IDENTITY(false || (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(false), ! (! (_GLF_WRAPPED_LOOP(false))))), (false || (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(false), ! (! (_GLF_WRAPPED_LOOP(false)))))) && true)), bool(bvec4(true && (_GLF_IDENTITY(false || (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(false), ! (! (_GLF_WRAPPED_LOOP(false))))), (false || (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(false), ! (! (_GLF_WRAPPED_LOOP(false)))))) && true)), false, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), false, true, true)), false, true, false))))), ! (! (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(false), _GLF_IDENTITY(false || (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(false), ! (! (_GLF_WRAPPED_LOOP(false)))), bool(bvec4(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(false), ! (! (_GLF_WRAPPED_LOOP(false)))), true, true, true)))), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(false || (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(false), ! (! (_GLF_WRAPPED_LOOP(false))))), true && (_GLF_IDENTITY(false || (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(false), ! (! (_GLF_WRAPPED_LOOP(false)))), bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(false), ! (! (_GLF_WRAPPED_LOOP(false)))), bool(bvec4(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(false), ! (! (_GLF_WRAPPED_LOOP(false)))), _GLF_IDENTITY(true, (true) && true), true, true))), true, true, true)))), (false || (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(false), ! (! (_GLF_WRAPPED_LOOP(false)))), (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(false), ! (! (_GLF_WRAPPED_LOOP(false))))) || false))) && true))), false, true, true)), bool(bvec4(bool(bvec4(_GLF_IDENTITY(false || (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(false), ! (! (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(false), true && (_GLF_WRAPPED_LOOP(false)))))), ! (! (_GLF_WRAPPED_LOOP(false))))), _GLF_IDENTITY(true && (_GLF_IDENTITY(false || (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(false), ! (! (_GLF_WRAPPED_LOOP(false))))), (false || (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(false), ! (! (_GLF_WRAPPED_LOOP(false)))))) && true)), bool(bvec4(true && (_GLF_IDENTITY(false || (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(false), ! (! (_GLF_WRAPPED_LOOP(false))))), (false || (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(false), ! (! (_GLF_WRAPPED_LOOP(false)))))) && true)), false, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), false, true, true)), false, true, false)))))))), true, true), bvec3(bvec3(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(false), _GLF_IDENTITY(false || (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(false), ! (! (_GLF_WRAPPED_LOOP(false)))), bool(bvec4(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(false), ! (! (_GLF_WRAPPED_LOOP(false)))), true, true, true)))), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(false || (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(false), ! (! (_GLF_WRAPPED_LOOP(false))))), true && (_GLF_IDENTITY(false || (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(false), ! (! (_GLF_WRAPPED_LOOP(false)))), bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(false), ! (! (_GLF_WRAPPED_LOOP(false)))), bool(bvec4(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(false), ! (! (_GLF_WRAPPED_LOOP(false)))), _GLF_IDENTITY(true, (true) && true), true, true))), true, true, true)))), (false || (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(false), ! (! (_GLF_WRAPPED_LOOP(false)))), (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(false), ! (! (_GLF_WRAPPED_LOOP(false))))) || false))) && true))), false, true, true)), bool(bvec4(bool(bvec4(_GLF_IDENTITY(false || (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(false), ! (! (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(false), true && (_GLF_WRAPPED_LOOP(false)))))), ! (! (_GLF_WRAPPED_LOOP(false))))), _GLF_IDENTITY(true && (_GLF_IDENTITY(false || (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(false), ! (! (_GLF_WRAPPED_LOOP(false))))), (false || (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(false), ! (! (_GLF_WRAPPED_LOOP(false)))))) && true)), bool(bvec4(true && (_GLF_IDENTITY(false || (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(false), ! (! (_GLF_WRAPPED_LOOP(false))))), (false || (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(false), ! (! (_GLF_WRAPPED_LOOP(false)))))) && true)), false, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), false, true, true)), false, true, false))))), ! (! (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(false), _GLF_IDENTITY(false || (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(false), ! (! (_GLF_WRAPPED_LOOP(false)))), bool(bvec4(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(false), ! (! (_GLF_WRAPPED_LOOP(false)))), true, true, true)))), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(false || (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(false), ! (! (_GLF_WRAPPED_LOOP(false))))), true && (_GLF_IDENTITY(false || (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(false), ! (! (_GLF_WRAPPED_LOOP(false)))), bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(false), ! (! (_GLF_WRAPPED_LOOP(false)))), bool(bvec4(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(false), ! (! (_GLF_WRAPPED_LOOP(false)))), _GLF_IDENTITY(true, (true) && true), true, true))), true, true, true)))), (false || (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(false), ! (! (_GLF_WRAPPED_LOOP(false)))), (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(false), ! (! (_GLF_WRAPPED_LOOP(false))))) || false))) && true))), false, true, true)), bool(bvec4(bool(bvec4(_GLF_IDENTITY(false || (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(false), ! (! (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(false), true && (_GLF_WRAPPED_LOOP(false)))))), ! (! (_GLF_WRAPPED_LOOP(false))))), _GLF_IDENTITY(true && (_GLF_IDENTITY(false || (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(false), ! (! (_GLF_WRAPPED_LOOP(false))))), (false || (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(false), ! (! (_GLF_WRAPPED_LOOP(false)))))) && true)), bool(bvec4(true && (_GLF_IDENTITY(false || (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(false), ! (! (_GLF_WRAPPED_LOOP(false))))), (false || (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(false), ! (! (_GLF_WRAPPED_LOOP(false)))))) && true)), false, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), false, true, true)), false, true, false)))))))), true, true)))))))));
                }
              }
            }
          }
         while(_GLF_WRAPPED_LOOP(false));
        }
       while(_GLF_WRAPPED_LOOP(false));
       if(_GLF_DEAD(false))
        continue;
      }
     while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, 0.0 + (injectionSwitch.y)))))), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(498.291)), bool(false))), injectionSwitch.x)) > injectionSwitch.y, bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x > injectionSwitch.y, false, false), bvec3(bvec4(bvec3(injectionSwitch.x > injectionSwitch.y, false, false), _GLF_IDENTITY(true, true && (true))))))))), (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, _GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, (true ? _GLF_IDENTITY(0.0, max(0.0, 0.0)) : _GLF_FUZZED(-97.53))), 0.0)))).y))) && _GLF_IDENTITY(true, ! (! (true)))), true, true, false)), bool(bvec2(bool(bvec4(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY((_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch.x : _GLF_FUZZED(0.3)), float(_GLF_IDENTITY(vec2((_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch.x : _GLF_FUZZED(0.3)), _GLF_ONE(1.0, injectionSwitch.y)), (vec2((_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch.x : _GLF_FUZZED(0.3)), _GLF_ONE(1.0, injectionSwitch.y))) / vec2(1.0, 1.0))))) > injectionSwitch.y)), _GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true, false || (_GLF_IDENTITY((_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true))))))) && true, (_GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(mat3x2(injectionSwitch, 1.0, 1.0, 0.0, 1.0))).y))) && true, ! (! ((_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(mat3x2(injectionSwitch, 1.0, 1.0, 0.0, 1.0))).y))) && true)))) || false)))), true, true, false)), true))))));
    }
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
    }
   else
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y)), _GLF_IDENTITY(false, _GLF_IDENTITY((_GLF_IDENTITY(false, bool(bvec2(false, false)))), _GLF_IDENTITY(true, false || (true)) && ((false))) || false), _GLF_IDENTITY(false, (false) && true))), true && (bool(bvec4(false, _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y)), _GLF_IDENTITY(false, _GLF_IDENTITY((_GLF_IDENTITY(false, bool(bvec2(false, false)))), _GLF_IDENTITY(true, false || (true)) && ((false))) || false), _GLF_IDENTITY(false, (false) && true))))))))
      return;
    }
  }
}
