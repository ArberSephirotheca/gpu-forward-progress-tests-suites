#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


struct _GLF_struct_29 {
 uvec4 _f0;
 uvec3 _f1;
} ;

struct _GLF_struct_28 {
 float _f0;
 bool _f1;
 uvec2 _f2;
 uint virtual_gid;
} ;

struct _GLF_struct_30 {
 bvec3 _f0;
 _GLF_struct_28 _f1;
 _GLF_struct_29 _f2;
 ivec3 _f3;
} ;

struct _GLF_struct_26 {
 mat2x4 _f0;
 vec3 _f1;
 mat3x4 _f2;
 bvec3 _f3;
 ivec3 _f4;
} ;

struct _GLF_struct_25 {
 uvec4 _f0;
 uvec3 _f1;
 mat4 _f2;
 mat2 _f3;
 mat4x3 _f4;
 bvec4 _f5;
 mat3x4 _f6;
} ;

struct _GLF_struct_24 {
 vec3 _f0;
 bvec3 _f1;
} ;

struct _GLF_struct_23 {
 vec4 _f0;
} ;

struct _GLF_struct_27 {
 _GLF_struct_23 _f0;
 _GLF_struct_24 _f1;
 vec2 _f2;
 _GLF_struct_25 _f3;
 _GLF_struct_26 _f4;
} ;

struct _GLF_struct_31 {
 _GLF_struct_27 _f0;
 _GLF_struct_30 _f1;
} ;

struct _GLF_struct_20 {
 mat3 _f0;
 mat4 _f1;
 mat2 _f2;
} ;

struct _GLF_struct_19 {
 bvec4 _f0;
 bool _f1;
 mat3x2 _f2;
 mat4x3 _f3;
 bvec2 _f4;
 mat4x2 _f5;
} ;

struct _GLF_struct_21 {
 _GLF_struct_19 _f0;
 mat2 _f1;
 _GLF_struct_20 _f2;
 mat4x2 _f3;
 vec4 _f4;
 mat4x2 _f5;
} ;

struct _GLF_struct_17 {
 mat4 _f0;
} ;

struct _GLF_struct_18 {
 _GLF_struct_17 _f0;
 uint workgroup_size;
 ivec2 _f1;
} ;

struct _GLF_struct_22 {
 _GLF_struct_18 _f0;
 bvec3 _f1;
 _GLF_struct_21 _f2;
 mat4x3 _f3;
} ;

struct _GLF_struct_16 {
 mat4x2 _f0;
 uint workgroup_id;
} ;

struct _GLF_struct_14 {
 uvec4 _f0;
} ;

struct _GLF_struct_12 {
 ivec3 _f0;
 vec3 _f1;
} ;

struct _GLF_struct_11 {
 ivec2 _f0;
 uvec3 _f1;
 int _f2;
 bvec4 _f3;
 bvec3 _f4;
 mat3x4 _f5;
 uvec4 _f6;
} ;

struct _GLF_struct_13 {
 _GLF_struct_11 _f0;
 vec2 _f1;
 _GLF_struct_12 _f2;
 mat4x2 _f3;
} ;

struct _GLF_struct_9 {
 vec3 _f0;
 mat3x2 _f1;
} ;

struct _GLF_struct_8 {
 bvec2 _f0;
} ;

struct _GLF_struct_7 {
 mat2 _f0;
} ;

struct _GLF_struct_6 {
 vec3 _f0;
 bvec4 _f1;
} ;

struct _GLF_struct_10 {
 float _f0;
 _GLF_struct_6 _f1;
 mat4x3 _f2;
 _GLF_struct_7 _f3;
 _GLF_struct_8 _f4;
 mat4x3 _f5;
 _GLF_struct_9 _f6;
} ;

struct _GLF_struct_15 {
 _GLF_struct_10 _f0;
 mat3 _f1;
 uint workgroup_base;
 mat2 _f2;
 mat4 _f3;
 _GLF_struct_13 _f4;
 mat2x3 _f5;
 _GLF_struct_14 _f6;
} ;

struct _GLF_struct_3 {
 mat4x2 _f0;
} ;

struct _GLF_struct_2 {
 mat4x2 _f0;
} ;

struct _GLF_struct_4 {
 mat4x2 _f0;
 bvec2 _f1;
 _GLF_struct_2 _f2;
 mat2x3 _f3;
 ivec3 _f4;
 _GLF_struct_3 _f5;
} ;

struct _GLF_struct_0 {
 uvec3 _f0;
 ivec4 _f1;
 float _f2;
 int _f3;
 int _f4;
 mat4 _f5;
 uvec4 _f6;
} ;

struct _GLF_struct_1 {
 _GLF_struct_0 _f0;
 uint subgroup_id;
} ;

struct _GLF_struct_5 {
 mat4x3 _f0;
 uvec3 _f1;
 _GLF_struct_1 _f2;
 _GLF_struct_4 _f3;
} ;

layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
#extension GL_EXT_maximal_reconvergence : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 _GLF_struct_5 _GLF_struct_replacement_5 = _GLF_struct_5(mat4x3(1.0), uvec3(_GLF_IDENTITY(1u, max(1u, 1u))), _GLF_struct_1(_GLF_struct_0(uvec3(1u), ivec4(1), 1.0, 1, 1, mat4(1.0), uvec4(1u)), gl_SubgroupID), _GLF_struct_4(mat4x2(1.0), _GLF_IDENTITY(_GLF_IDENTITY(bvec2(true), bvec2(bvec3(bvec2(true), true))), bvec2(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(true), bvec2(bvec3(bvec2(true), true))), bvec2(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(true), bvec2(bvec3(bvec2(true), true))), bvec2(bvec2(_GLF_IDENTITY(bvec2(true), bvec2(bvec3(bvec2(true), true)))))), true, false)))), bvec2(_GLF_IDENTITY(bvec3(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(true), bvec2(bvec3(bvec2(true), true))), bvec2(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(true), bvec2(bvec3(bvec2(true), true))), bvec2(bvec2(_GLF_IDENTITY(bvec2(true), bvec2(bvec3(bvec2(true), true)))))), true, false)))), false), bvec3(bvec4(bvec3(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(true), bvec2(bvec3(bvec2(true), true))), bvec2(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(true), bvec2(bvec3(bvec2(true), true))), bvec2(bvec2(_GLF_IDENTITY(bvec2(true), bvec2(bvec3(bvec2(true), true)))))), true, false)))), false), false))))))), _GLF_struct_2(mat4x2(1.0)), mat2x3(1.0), ivec3(1), _GLF_struct_3(mat4x2(1.0))));
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y))))), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y))), bool(bool(! (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch))))))[1])).x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y)))))), false), bvec2(bvec4(bvec2(_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y))), bool(bool(! (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch))))))[1])).x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y)))))), false), false, true)))))))))), true && (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y))), bool(bvec2(! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), ! (! (_GLF_IDENTITY(false, ! (! (false)))))))))))))))), ! (! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y))), bool(bvec2(! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), ! (! (_GLF_IDENTITY(false, ! (! (false)))))))))))))))))))), true && (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y))), bool(bvec2(! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (_GLF_IDENTITY(injectionSwitch, mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch)).x > _GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), injectionSwitch)).y))), _GLF_IDENTITY(false, bool(bvec4(false, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))))))))))))))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! (false))))))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
        return;
       return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   return;
  }
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y) || false, ! (_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y) || false), ! (! (! ((injectionSwitch.x > injectionSwitch.y) || false))))))))) || (_GLF_DEAD(false))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-5882.5621), _GLF_FUZZED(-33.46)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))).y))))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      return;
    }
   barrier();
  }
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > injectionSwitch.y), false || (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), true && (! ((injectionSwitch.x > injectionSwitch.y)))), false, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bool(bool(bool(bvec4(_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), true && (! ((injectionSwitch.x > injectionSwitch.y)))), false, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))))))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, true, true, false)))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), (_GLF_IDENTITY(false, ! (! (false)))) && true)))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec2((injectionSwitch.x > injectionSwitch.y), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))
        {
         if(_GLF_DEAD(false))
          barrier();
         return;
        }
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false)))) || false))
        barrier();
       if(_GLF_DEAD(false))
        return;
       return;
       if(_GLF_DEAD(false))
        return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec2((injectionSwitch.x > injectionSwitch.y), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) && true)))
        barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
        return;
       if(_GLF_DEAD(false))
        barrier();
       return;
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            return;
           barrier();
          }
         if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, true, false)))))
          {
           if(_GLF_DEAD(false))
            return;
           if(_GLF_DEAD(false))
            barrier();
           barrier();
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_DEAD(false))
            return;
          }
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
        }
       if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, true)))))
        return;
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          return;
         barrier();
        }
       barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(false))
        return;
      }
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))), _GLF_IDENTITY(! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), (! (_GLF_IDENTITY(! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (_GLF_IDENTITY(! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), ! (! (! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))))) || false)))
    return;
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))) - vec2(0.0, 0.0)).y)))))))
        {
         if(_GLF_DEAD(false))
          return;
         barrier();
        }
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      barrier();
     return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
      }
    }
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        return;
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     return;
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(false || (false), ! (_GLF_IDENTITY(! (false || (false)), false || (! (false || (false)))))))))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
    }
  }
 uint num_workgroup = gl_NumWorkGroups.x;
 if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch)[1], max((injectionSwitch)[1], (injectionSwitch)[1]))), vec2(_GLF_FUZZED((-970.331)), _GLF_FUZZED(-9853.5086)), bvec2(false, false))).y))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), true, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) && true))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0))))) > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if(_GLF_DEAD(false))
          return;
         return;
        }
       return;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         barrier();
        }
      }
     return;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(vec4(injectionSwitch, 1.0, 1.0))).x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) || false)) && true)), bool(bool(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) || false)) && true)), ! (_GLF_IDENTITY(! (_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) || false)) && true))), ! (! (! (_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(false, false))), (_GLF_IDENTITY(false, (false) || _GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) && true))))))) && true))))))))))))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(false))
  return;
 _GLF_struct_22 _GLF_struct_replacement_22 = _GLF_struct_22(_GLF_struct_18(_GLF_struct_17(_GLF_IDENTITY(mat4(1.0), (mat4(1.0)) / mat4(1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0))), _GLF_IDENTITY(gl_WorkGroupSize, clamp(gl_WorkGroupSize, gl_WorkGroupSize, gl_WorkGroupSize)).x, ivec2(1)), bvec3(true), _GLF_struct_21(_GLF_struct_19(bvec4(true), true, mat3x2(1.0), mat4x3(1.0), bvec2(_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, ! (! (true))))))), mat4x2(1.0)), mat2(1.0), _GLF_struct_20(mat3(1.0), mat4(1.0), mat2(1.0)), mat4x2(1.0), vec4(1.0), mat4x2(1.0)), mat4x3(1.0));
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(true && (_GLF_IDENTITY(_GLF_DEAD(false), ! _GLF_IDENTITY((! (_GLF_DEAD(false))), ! (! (_GLF_IDENTITY((! (_GLF_DEAD(false))), ((! (_GLF_DEAD(false)))) && true)))))), (true && (_GLF_IDENTITY(_GLF_DEAD(false), ! _GLF_IDENTITY(_GLF_IDENTITY((! (_GLF_DEAD(false))), ! (! ((! (_GLF_DEAD(false)))))), (_GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_DEAD(false)), (_GLF_IDENTITY(! (_GLF_DEAD(false)), false || (! (_GLF_DEAD(false))))) && true)), ! (! ((! _GLF_IDENTITY((_GLF_DEAD(false)), ((_GLF_DEAD(false))) && true)))))) && true)))) || false)))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
    return;
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)), _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)))).x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0)))))
    barrier();
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
     if(_GLF_DEAD(false))
      return;
    }
   barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(_GLF_DEAD(false), false), bvec2(bvec3(bvec2(_GLF_DEAD(false), false), false))), bvec2(bvec3(_GLF_IDENTITY(bvec2(_GLF_DEAD(false), false), bvec2(bvec3(bvec2(_GLF_DEAD(false), false), false))), false))))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (true ? _GLF_IDENTITY(injectionSwitch.y, float(mat2(injectionSwitch.y, 1.0, 1.0, 0.0))) : _GLF_FUZZED(vec4(1519.1358, 4.6, 7843.3674, 76.10).x)))))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
        return;
       barrier();
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y))))))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
  }
 _GLF_struct_16 _GLF_struct_replacement_16 = _GLF_struct_16(mat4x2(1.0), gl_WorkGroupID.x);
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  return;
 _GLF_struct_15 _GLF_struct_replacement_15 = _GLF_struct_15(_GLF_struct_10(1.0, _GLF_struct_6(vec3(1.0), bvec4(true)), mat4x3(1.0), _GLF_struct_7(mat2(1.0)), _GLF_struct_8(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(true, _GLF_IDENTITY(true && (_GLF_IDENTITY(true, ! (! (true)))), false || (_GLF_IDENTITY(true && (_GLF_IDENTITY(true, ! (! (true)))), _GLF_IDENTITY(_GLF_IDENTITY((true && (_GLF_IDENTITY(true, ! (! (true))))), ! (_GLF_IDENTITY(! ((true && (_GLF_IDENTITY(true, ! (! (true)))))), false || (_GLF_IDENTITY(! ((true && (_GLF_IDENTITY(true, ! (! (true)))))), ! (! (! ((true && _GLF_IDENTITY((_GLF_IDENTITY(true, ! (! (true)))), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY((_GLF_IDENTITY(true, ! (! (true)))), ! (! ((_GLF_IDENTITY(true, ! (! (true)))))))), (bool(_GLF_IDENTITY((_GLF_IDENTITY(true, ! (! (true)))), ! (! ((_GLF_IDENTITY(true, ! (! (true))))))))) || false)))))))))))) || false, _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY((true && (_GLF_IDENTITY(true, ! (! (true))))), ! (_GLF_IDENTITY(! ((true && (_GLF_IDENTITY(true, ! (! (true)))))), false || (_GLF_IDENTITY(! ((true && (_GLF_IDENTITY(true, ! (! (true)))))), ! (! (! ((true && (_GLF_IDENTITY(true, ! (! (true))))))))))))) || false, false || (_GLF_IDENTITY((true && (_GLF_IDENTITY(true, ! (! (true))))), ! (_GLF_IDENTITY(! ((true && (_GLF_IDENTITY(true, ! (! (true)))))), false || (_GLF_IDENTITY(! ((true && (_GLF_IDENTITY(true, ! (! (true)))))), ! (_GLF_IDENTITY(! (! ((true && (_GLF_IDENTITY(true, ! (! (true))))))), bool(bvec2(_GLF_IDENTITY(! (! ((true && (_GLF_IDENTITY(true, ! (! (true))))))), ! (! (! (! ((true && (_GLF_IDENTITY(true, ! (! (true)))))))))), true))))))))) || false)), false)), false || (bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY((true && (_GLF_IDENTITY(true, ! (! (true))))), ! (_GLF_IDENTITY(! ((true && _GLF_IDENTITY((_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), bool(bool(_GLF_IDENTITY(! (true), false || (! (true))))))))), bool(_GLF_IDENTITY(bvec3((_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), bool(bool(_GLF_IDENTITY(! (true), false || (! (true))))))))), true, true), bvec3(bvec4(bvec3((_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), bool(bool(_GLF_IDENTITY(! (true), false || (! (true))))))))), true, true), false))))))), false || (_GLF_IDENTITY(! (_GLF_IDENTITY((true && (_GLF_IDENTITY(true, ! (! (true))))), bool(bvec2(_GLF_IDENTITY((true && (_GLF_IDENTITY(true, ! (! (true))))), false || ((true && (_GLF_IDENTITY(true, ! (! (true))))))), true)))), ! (! (! ((true && (_GLF_IDENTITY(true, ! (! (true))))))))))))) || false, false || (_GLF_IDENTITY((true && (_GLF_IDENTITY(true, ! (! (true))))), ! (_GLF_IDENTITY(! ((true && (_GLF_IDENTITY(true, ! (! (true)))))), false || (_GLF_IDENTITY(! _GLF_IDENTITY(((true && (_GLF_IDENTITY(true, ! (! (true)))))), ! (! (((true && (_GLF_IDENTITY(true, ! (! (true))))))))), ! (! (! ((true && (_GLF_IDENTITY(true, ! (! (true))))))))))))) || false)), false))))))))), bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(true, (true) && true), _GLF_IDENTITY(true && (_GLF_IDENTITY(true, ! (! (true)))), false || (_GLF_IDENTITY(true && (_GLF_IDENTITY(true, ! (! (true)))), _GLF_IDENTITY((true && _GLF_IDENTITY((_GLF_IDENTITY(true, ! (! (true)))), ((_GLF_IDENTITY(true, ! (! (true))))) || false)), ! (_GLF_IDENTITY(! ((true && (_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), ! (! (! (true)))))))))))), false || (_GLF_IDENTITY(! ((_GLF_IDENTITY(true, (_GLF_IDENTITY(true, (true) && true)) || false) && (_GLF_IDENTITY(true, ! (! (true)))))), ! (! (! ((true && (_GLF_IDENTITY(true, ! (! (true))))))))))))) || false))))))))), mat4x3(1.0), _GLF_struct_9(vec3(1.0), mat3x2(1.0))), mat3(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, _GLF_IDENTITY(mix(float(1.0), float(_GLF_FUZZED(641.423)), bool(false)), clamp(mix(float(1.0), float(_GLF_FUZZED(641.423)), bool(false)), mix(float(1.0), float(_GLF_FUZZED(641.423)), bool(false)), mix(float(1.0), float(_GLF_FUZZED(641.423)), bool(false)))))) / 1.0)), _GLF_struct_replacement_22._f0.workgroup_size * _GLF_struct_replacement_16.workgroup_id, _GLF_IDENTITY(mat2(1.0), transpose(transpose(mat2(1.0)))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(mat4(1.0), (false ? _GLF_IDENTITY(_GLF_FUZZED(mat4(-85.22, -50.54, -6718.4899, 80.83, 6.0, 966.587, -0.6, -999.633, 7.9, 429.624, 3375.4980, -1652.5488, -126.332, -4.2, -2652.8569, -3.2)), (_GLF_IDENTITY(_GLF_FUZZED(mat4(-85.22, -50.54, -6718.4899, 80.83, 6.0, 966.587, -0.6, -999.633, 7.9, 429.624, 3375.4980, -1652.5488, -126.332, -4.2, -2652.8569, -3.2)), (false ? _GLF_FUZZED(_GLF_IDENTITY(mat4(-5.5, -9762.5817, -4.5, 9149.7197, 5.1, -4493.5576, -7805.0151, -9.7, -41.28, -66.26, -32.73, 92.99, 817.895, -9.1, 79.20, -2.5), transpose(_GLF_IDENTITY(transpose(mat4(-5.5, -9762.5817, -4.5, 9149.7197, 5.1, -4493.5576, -7805.0151, -9.7, -41.28, -66.26, -32.73, 92.99, 817.895, -9.1, 79.20, -2.5)), transpose(transpose(transpose(mat4(-5.5, -9762.5817, -4.5, 9149.7197, 5.1, -4493.5576, -7805.0151, -9.7, -41.28, -66.26, -32.73, 92.99, 817.895, -9.1, 79.20, -2.5)))))))) : _GLF_FUZZED(mat4(-85.22, -50.54, -6718.4899, 80.83, 6.0, 966.587, -0.6, -999.633, 7.9, 429.624, 3375.4980, _GLF_IDENTITY(-1652.5488, mix(float(-1652.5488), float(_GLF_FUZZED(973.497)), bool(false))), -126.332, _GLF_IDENTITY(-4.2, float(float(-4.2))), -2652.8569, -3.2))))) + mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)) : mat4(_GLF_IDENTITY(1.0, max(1.0, 1.0))))), mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0) + (_GLF_IDENTITY(_GLF_IDENTITY(mat4(1.0), (false ? _GLF_IDENTITY(_GLF_FUZZED(mat4(-85.22, -50.54, -6718.4899, 80.83, 6.0, 966.587, -0.6, -999.633, 7.9, 429.624, 3375.4980, -1652.5488, -126.332, -4.2, -2652.8569, -3.2)), (_GLF_IDENTITY(_GLF_FUZZED(mat4(-85.22, -50.54, -6718.4899, 80.83, 6.0, 966.587, -0.6, -999.633, 7.9, 429.624, 3375.4980, -1652.5488, -126.332, -4.2, -2652.8569, -3.2)), (false ? _GLF_FUZZED(_GLF_IDENTITY(mat4(-5.5, -9762.5817, -4.5, 9149.7197, 5.1, -4493.5576, -7805.0151, -9.7, -41.28, -66.26, -32.73, 92.99, 817.895, -9.1, 79.20, -2.5), transpose(_GLF_IDENTITY(transpose(mat4(-5.5, -9762.5817, -4.5, 9149.7197, 5.1, -4493.5576, -7805.0151, -9.7, -41.28, -66.26, -32.73, 92.99, 817.895, -9.1, 79.20, -2.5)), transpose(transpose(transpose(mat4(-5.5, -9762.5817, -4.5, 9149.7197, 5.1, -4493.5576, -7805.0151, -9.7, -41.28, -66.26, -32.73, 92.99, 817.895, -9.1, 79.20, -2.5)))))))) : _GLF_FUZZED(mat4(-85.22, -50.54, -6718.4899, 80.83, 6.0, 966.587, -0.6, -999.633, 7.9, 429.624, 3375.4980, _GLF_IDENTITY(-1652.5488, mix(float(-1652.5488), float(_GLF_FUZZED(973.497)), bool(false))), -126.332, _GLF_IDENTITY(-4.2, float(float(-4.2))), -2652.8569, -3.2))))) + mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)) : mat4(_GLF_IDENTITY(1.0, max(1.0, 1.0))))), transpose(transpose(_GLF_IDENTITY(_GLF_IDENTITY(mat4(1.0), (false ? _GLF_IDENTITY(_GLF_FUZZED(mat4(-85.22, -50.54, -6718.4899, 80.83, 6.0, 966.587, -0.6, -999.633, 7.9, 429.624, 3375.4980, -1652.5488, -126.332, -4.2, -2652.8569, -3.2)), (_GLF_IDENTITY(_GLF_FUZZED(mat4(-85.22, -50.54, -6718.4899, 80.83, 6.0, 966.587, -0.6, -999.633, 7.9, 429.624, 3375.4980, -1652.5488, -126.332, -4.2, -2652.8569, -3.2)), (false ? _GLF_FUZZED(_GLF_IDENTITY(mat4(-5.5, -9762.5817, -4.5, 9149.7197, 5.1, -4493.5576, -7805.0151, -9.7, -41.28, -66.26, -32.73, 92.99, 817.895, -9.1, 79.20, -2.5), transpose(_GLF_IDENTITY(transpose(mat4(-5.5, -9762.5817, -4.5, 9149.7197, 5.1, -4493.5576, -7805.0151, -9.7, -41.28, -66.26, -32.73, 92.99, 817.895, -9.1, 79.20, -2.5)), transpose(transpose(transpose(mat4(-5.5, -9762.5817, -4.5, 9149.7197, 5.1, -4493.5576, -7805.0151, -9.7, -41.28, -66.26, -32.73, 92.99, 817.895, -9.1, 79.20, -2.5)))))))) : _GLF_FUZZED(mat4(-85.22, -50.54, -6718.4899, 80.83, 6.0, 966.587, -0.6, -999.633, 7.9, 429.624, 3375.4980, _GLF_IDENTITY(-1652.5488, mix(float(-1652.5488), float(_GLF_FUZZED(973.497)), bool(false))), -126.332, _GLF_IDENTITY(-4.2, float(float(-4.2))), -2652.8569, -3.2))))) + mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)) : mat4(_GLF_IDENTITY(1.0, max(1.0, 1.0))))), (false ? _GLF_FUZZED(mat4(-3387.3251, 13.49, -325.771, -431.463, -6.1, -7.7, -934.240, -4473.2496, 3074.7922, 227.788, 2112.7671, -1649.6977, 9.8, -1080.4378, -25.87, 19.20)) : _GLF_IDENTITY(mat4(1.0), (false ? _GLF_IDENTITY(_GLF_FUZZED(mat4(-85.22, -50.54, -6718.4899, 80.83, 6.0, 966.587, -0.6, -999.633, 7.9, 429.624, 3375.4980, -1652.5488, -126.332, -4.2, -2652.8569, -3.2)), (_GLF_IDENTITY(_GLF_FUZZED(mat4(-85.22, -50.54, -6718.4899, 80.83, 6.0, 966.587, -0.6, -999.633, 7.9, 429.624, 3375.4980, -1652.5488, -126.332, -4.2, -2652.8569, -3.2)), (false ? _GLF_FUZZED(_GLF_IDENTITY(mat4(-5.5, -9762.5817, -4.5, 9149.7197, 5.1, -4493.5576, -7805.0151, -9.7, -41.28, -66.26, -32.73, 92.99, 817.895, -9.1, 79.20, -2.5), transpose(_GLF_IDENTITY(transpose(mat4(-5.5, -9762.5817, -4.5, 9149.7197, 5.1, -4493.5576, -7805.0151, -9.7, -41.28, -66.26, -32.73, 92.99, 817.895, -9.1, 79.20, -2.5)), transpose(transpose(transpose(mat4(-5.5, -9762.5817, -4.5, 9149.7197, 5.1, -4493.5576, -7805.0151, -9.7, -41.28, -66.26, -32.73, 92.99, 817.895, -9.1, 79.20, -2.5)))))))) : _GLF_FUZZED(mat4(-85.22, -50.54, -6718.4899, 80.83, 6.0, 966.587, -0.6, -999.633, 7.9, 429.624, 3375.4980, _GLF_IDENTITY(-1652.5488, mix(float(-1652.5488), float(_GLF_FUZZED(973.497)), bool(false))), -126.332, _GLF_IDENTITY(-4.2, float(float(-4.2))), -2652.8569, -3.2))))) + mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)) : mat4(_GLF_IDENTITY(1.0, max(1.0, 1.0)))))))))))), (true ? _GLF_IDENTITY(_GLF_IDENTITY(mat4(1.0), (false ? _GLF_IDENTITY(_GLF_FUZZED(mat4(-85.22, -50.54, -6718.4899, 80.83, 6.0, 966.587, -0.6, -999.633, 7.9, 429.624, 3375.4980, -1652.5488, -126.332, -4.2, -2652.8569, -3.2)), (_GLF_IDENTITY(_GLF_FUZZED(mat4(-85.22, -50.54, -6718.4899, 80.83, _GLF_IDENTITY(6.0, clamp(6.0, _GLF_IDENTITY(6.0, mix(float(_GLF_FUZZED(-6203.3772)), float(6.0), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), 6.0)), 966.587, -0.6, -999.633, 7.9, 429.624, 3375.4980, -1652.5488, -126.332, -4.2, -2652.8569, -3.2)), (false ? _GLF_FUZZED(_GLF_IDENTITY(mat4(-5.5, -9762.5817, -4.5, 9149.7197, 5.1, -4493.5576, -7805.0151, -9.7, -41.28, -66.26, -32.73, 92.99, 817.895, -9.1, 79.20, -2.5), transpose(_GLF_IDENTITY(transpose(mat4(-5.5, -9762.5817, -4.5, 9149.7197, 5.1, -4493.5576, -7805.0151, -9.7, -41.28, -66.26, -32.73, 92.99, 817.895, -9.1, 79.20, -2.5)), transpose(transpose(transpose(mat4(-5.5, -9762.5817, -4.5, 9149.7197, 5.1, -4493.5576, -7805.0151, -9.7, -41.28, -66.26, -32.73, 92.99, 817.895, -9.1, 79.20, -2.5)))))))) : _GLF_FUZZED(mat4(-85.22, -50.54, -6718.4899, 80.83, 6.0, 966.587, -0.6, -999.633, 7.9, 429.624, 3375.4980, _GLF_IDENTITY(_GLF_IDENTITY(-1652.5488, mix(float(-1652.5488), float(_GLF_FUZZED(973.497)), bool(false))), min(_GLF_IDENTITY(-1652.5488, mix(float(-1652.5488), float(_GLF_FUZZED(973.497)), bool(false))), _GLF_IDENTITY(-1652.5488, mix(float(-1652.5488), float(_GLF_FUZZED(973.497)), bool(false))))), -126.332, _GLF_IDENTITY(-4.2, float(float(-4.2))), -2652.8569, -3.2))))) + mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)) : mat4(_GLF_IDENTITY(1.0, max(1.0, 1.0))))), mat4(0.0, 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-7.6))), 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0) + (_GLF_IDENTITY(_GLF_IDENTITY(mat4(1.0), (false ? _GLF_IDENTITY(_GLF_FUZZED(mat4(-85.22, -50.54, -6718.4899, 80.83, 6.0, 966.587, -0.6, -999.633, 7.9, 429.624, 3375.4980, -1652.5488, -126.332, -4.2, -2652.8569, -3.2)), (_GLF_IDENTITY(_GLF_FUZZED(mat4(-85.22, -50.54, -6718.4899, 80.83, 6.0, 966.587, -0.6, -999.633, 7.9, 429.624, 3375.4980, -1652.5488, -126.332, -4.2, -2652.8569, -3.2)), (false ? _GLF_FUZZED(_GLF_IDENTITY(mat4(-5.5, -9762.5817, -4.5, 9149.7197, 5.1, -4493.5576, -7805.0151, -9.7, -41.28, -66.26, -32.73, 92.99, 817.895, -9.1, 79.20, -2.5), transpose(_GLF_IDENTITY(transpose(mat4(-5.5, -9762.5817, -4.5, 9149.7197, 5.1, -4493.5576, -7805.0151, -9.7, -41.28, -66.26, -32.73, 92.99, 817.895, -9.1, 79.20, -2.5)), transpose(transpose(transpose(mat4(-5.5, -9762.5817, -4.5, 9149.7197, 5.1, -4493.5576, -7805.0151, -9.7, -41.28, -66.26, -32.73, 92.99, 817.895, -9.1, 79.20, -2.5)))))))) : _GLF_FUZZED(mat4(-85.22, -50.54, -6718.4899, 80.83, 6.0, 966.587, -0.6, -999.633, 7.9, 429.624, 3375.4980, _GLF_IDENTITY(-1652.5488, mix(float(-1652.5488), float(_GLF_FUZZED(973.497)), bool(false))), -126.332, _GLF_IDENTITY(-4.2, float(float(-4.2))), -2652.8569, -3.2))))) + mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)) : mat4(_GLF_IDENTITY(_GLF_IDENTITY(1.0, (1.0) - 0.0), max(1.0, 1.0))))), transpose(transpose(_GLF_IDENTITY(_GLF_IDENTITY(mat4(1.0), (false ? _GLF_IDENTITY(_GLF_FUZZED(mat4(-85.22, -50.54, -6718.4899, _GLF_IDENTITY(80.83, min(_GLF_IDENTITY(80.83, 0.0 + (80.83)), _GLF_IDENTITY(80.83, float(mat2(80.83, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 1.0))))), 6.0, 966.587, -0.6, -999.633, 7.9, 429.624, 3375.4980, -1652.5488, -126.332, _GLF_IDENTITY(-4.2, float(float(-4.2))), -2652.8569, -3.2)), (_GLF_IDENTITY(_GLF_FUZZED(mat4(-85.22, -50.54, -6718.4899, 80.83, 6.0, 966.587, -0.6, -999.633, 7.9, 429.624, 3375.4980, -1652.5488, -126.332, -4.2, -2652.8569, -3.2)), (false ? _GLF_FUZZED(_GLF_IDENTITY(mat4(-5.5, -9762.5817, -4.5, 9149.7197, 5.1, -4493.5576, -7805.0151, -9.7, -41.28, -66.26, -32.73, 92.99, 817.895, -9.1, 79.20, -2.5), transpose(_GLF_IDENTITY(transpose(mat4(-5.5, -9762.5817, -4.5, 9149.7197, 5.1, -4493.5576, -7805.0151, -9.7, -41.28, -66.26, -32.73, 92.99, 817.895, -9.1, 79.20, -2.5)), transpose(transpose(transpose(mat4(-5.5, -9762.5817, -4.5, 9149.7197, 5.1, -4493.5576, -7805.0151, -9.7, -41.28, -66.26, -32.73, 92.99, 817.895, -9.1, 79.20, -2.5)))))))) : _GLF_FUZZED(mat4(-85.22, -50.54, -6718.4899, 80.83, 6.0, 966.587, -0.6, -999.633, 7.9, 429.624, 3375.4980, _GLF_IDENTITY(-1652.5488, mix(float(-1652.5488), float(_GLF_FUZZED(973.497)), bool(false))), -126.332, _GLF_IDENTITY(-4.2, float(float(-4.2))), -2652.8569, -3.2))))) + mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)) : mat4(_GLF_IDENTITY(1.0, max(1.0, 1.0))))), (false ? _GLF_FUZZED(mat4(-3387.3251, 13.49, -325.771, -431.463, -6.1, -7.7, -934.240, -4473.2496, 3074.7922, 227.788, 2112.7671, -1649.6977, 9.8, -1080.4378, -25.87, 19.20)) : _GLF_IDENTITY(mat4(1.0), (false ? _GLF_IDENTITY(_GLF_FUZZED(mat4(_GLF_IDENTITY(-85.22, 0.0 + (-85.22)), -50.54, -6718.4899, 80.83, 6.0, 966.587, -0.6, -999.633, 7.9, 429.624, 3375.4980, -1652.5488, -126.332, -4.2, -2652.8569, -3.2)), (_GLF_IDENTITY(_GLF_FUZZED(mat4(-85.22, -50.54, -6718.4899, 80.83, 6.0, 966.587, -0.6, -999.633, 7.9, 429.624, 3375.4980, -1652.5488, -126.332, -4.2, -2652.8569, -3.2)), (false ? _GLF_FUZZED(_GLF_IDENTITY(mat4(-5.5, -9762.5817, -4.5, 9149.7197, 5.1, -4493.5576, -7805.0151, -9.7, -41.28, -66.26, -32.73, 92.99, 817.895, -9.1, 79.20, -2.5), transpose(_GLF_IDENTITY(transpose(mat4(-5.5, -9762.5817, -4.5, 9149.7197, 5.1, -4493.5576, -7805.0151, -9.7, -41.28, -66.26, -32.73, 92.99, 817.895, -9.1, 79.20, -2.5)), transpose(transpose(transpose(mat4(-5.5, -9762.5817, -4.5, 9149.7197, 5.1, -4493.5576, -7805.0151, -9.7, -41.28, -66.26, -32.73, 92.99, 817.895, -9.1, 79.20, -2.5)))))))) : _GLF_FUZZED(mat4(-85.22, -50.54, -6718.4899, 80.83, 6.0, 966.587, -0.6, -999.633, 7.9, 429.624, 3375.4980, _GLF_IDENTITY(-1652.5488, mix(float(-1652.5488), float(_GLF_FUZZED(973.497)), bool(false))), -126.332, _GLF_IDENTITY(-4.2, float(float(-4.2))), -2652.8569, -3.2))))) + mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)) : mat4(_GLF_IDENTITY(1.0, max(1.0, 1.0)))))))))))) : _GLF_FUZZED(mat4(2.0, -151.600, 515.686, -9.0, -5.1, 68.91, 5257.2453, 33.92, -4.6, 9.5, 1626.9855, 5.6, -9.7, -50.17, 200.672, -0.3)))), _GLF_struct_13(_GLF_struct_11(ivec2(1), uvec3(1u), _GLF_IDENTITY(1, (_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) < injectionSwitch.y)) ? 1 : _GLF_FUZZED(_GLF_IDENTITY(ivec3(-92396, 99217, 39006).t, (ivec3(-92396, 99217, 39006).t) << int(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)))))))), bvec4(true), bvec3(true), mat3x4(1.0), uvec4(1u)), vec2(1.0), _GLF_struct_12(ivec3(1), vec3(_GLF_IDENTITY(1.0, mix(_GLF_IDENTITY(float(_GLF_FUZZED(-1559.7711)), float(_GLF_IDENTITY(mat3x4(float(_GLF_FUZZED(-1559.7711)), exp(0.0), 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, abs(exp(0.0))), (mat3x4(float(_GLF_FUZZED(-1559.7711)), exp(0.0), 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, abs(exp(0.0)))) * mat3(1.0)))), float(1.0), bool(true))))), mat4x2(1.0)), mat2x3(1.0), _GLF_struct_14(uvec4(1u)));
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   return;
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     return;
     if(_GLF_DEAD(false))
      return;
    }
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  return;
 uint subgroup_base = _GLF_IDENTITY(_GLF_struct_replacement_5._f2.subgroup_id * subgroup_size, (false ? _GLF_FUZZED(_GLF_IDENTITY(198654u, min(198654u, 198654u))) : _GLF_struct_replacement_5._f2.subgroup_id * subgroup_size));
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], min(injectionSwitch[1], injectionSwitch[1])))).x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], min(_GLF_IDENTITY(injectionSwitch[1], mix(float(injectionSwitch[1]), float(_GLF_FUZZED(9422.3453)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), injectionSwitch[1])))).x > injectionSwitch.y) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(bool(bvec4((injectionSwitch.x > injectionSwitch.y), true, true, false)), bool(bvec4(bool(bvec4((injectionSwitch.x > injectionSwitch.y), true, true, false)), false, true, false)))))))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY((_GLF_DEAD(false)), ! (! ((_GLF_DEAD(false))))) && true)) && true))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   barrier();
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (false))))))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
        return;
       barrier();
      }
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
  }
 _GLF_struct_31 _GLF_struct_replacement_31 = _GLF_struct_31(_GLF_struct_27(_GLF_struct_23(vec4(1.0)), _GLF_struct_24(vec3(1.0), bvec3(_GLF_IDENTITY(_GLF_IDENTITY(true, (true) && true), true && (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(true, ! (! (true))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(true, ! (! (true))), false || (_GLF_IDENTITY(true, ! (! (true)))))))), bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(true, ! (! (true))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(true, ! (! (true))), false || (_GLF_IDENTITY(true, ! (! (true)))))))), true, false))))))), vec2(1.0), _GLF_struct_25(uvec4(1u), _GLF_IDENTITY(uvec3(1u), ~ (~ (uvec3(1u)))), mat4(1.0), mat2(1.0), mat4x3(1.0), bvec4(true), mat3x4(_GLF_IDENTITY(1.0, 1.0 * (1.0)))), _GLF_struct_26(mat2x4(1.0), vec3(1.0), mat3x4(1.0), bvec3(true), ivec3(_GLF_IDENTITY(1, (1) * 1)))), _GLF_struct_30(bvec3(true), _GLF_struct_28(1.0, true, uvec2(1u), _GLF_struct_replacement_15.workgroup_base + subgroup_base + subgroup_local_id), _GLF_struct_29(uvec4(1u), uvec3(1u)), ivec3(1)));
 uint next_virtual_gid = _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_struct_replacement_15.workgroup_base, max(_GLF_struct_replacement_15.workgroup_base, _GLF_struct_replacement_15.workgroup_base)), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_struct_replacement_15.workgroup_base, max(_GLF_struct_replacement_15.workgroup_base, _GLF_struct_replacement_15.workgroup_base))), 1u * (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_struct_replacement_15.workgroup_base, max(_GLF_struct_replacement_15.workgroup_base, _GLF_struct_replacement_15.workgroup_base))), ((_GLF_IDENTITY(_GLF_struct_replacement_15.workgroup_base, max(_GLF_struct_replacement_15.workgroup_base, _GLF_struct_replacement_15.workgroup_base)))) / 1u))) >> 0u), clamp(_GLF_IDENTITY(_GLF_struct_replacement_15.workgroup_base, _GLF_IDENTITY((_GLF_struct_replacement_15.workgroup_base) | (_GLF_struct_replacement_15.workgroup_base), min((_GLF_struct_replacement_15.workgroup_base) | (_GLF_struct_replacement_15.workgroup_base), (_GLF_struct_replacement_15.workgroup_base) | (_GLF_struct_replacement_15.workgroup_base)))), _GLF_IDENTITY(_GLF_struct_replacement_15.workgroup_base, (true ? _GLF_IDENTITY(_GLF_struct_replacement_15.workgroup_base, clamp(_GLF_struct_replacement_15.workgroup_base, _GLF_struct_replacement_15.workgroup_base, _GLF_IDENTITY(_GLF_struct_replacement_15.workgroup_base, (_GLF_IDENTITY(_GLF_struct_replacement_15.workgroup_base, ~ (~ (_GLF_struct_replacement_15.workgroup_base)))) - (0u >> _GLF_IDENTITY(uint(0u), uint(0u)))))) : _GLF_FUZZED(subgroup_local_id))), _GLF_struct_replacement_15.workgroup_base)) + subgroup_base + (_GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, min((subgroup_local_id + 1) % _GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, subgroup_size)), (subgroup_local_id + 1) % subgroup_size)), 0u ^ (_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, min((subgroup_local_id + 1) % _GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, subgroup_size)), (subgroup_local_id + 1) % subgroup_size))))), 0u | (_GLF_IDENTITY(_GLF_struct_replacement_15.workgroup_base + subgroup_base + ((subgroup_local_id + _GLF_IDENTITY(_GLF_IDENTITY(1, (1) / (((0 | 1) << _GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), max(int(3), int(3))))) >> _GLF_IDENTITY(int(3), int(3)))), (1) * 1)) % subgroup_size), (_GLF_struct_replacement_15.workgroup_base + subgroup_base + _GLF_IDENTITY(((_GLF_IDENTITY(subgroup_local_id + 1, (1u ^ ((1u << _GLF_IDENTITY(uint(5u), uint(5u))) >> _GLF_IDENTITY(_GLF_IDENTITY(uint(5u), max(uint(5u), _GLF_IDENTITY(uint(5u), (uint(5u)) * uint(_GLF_ONE(1.0, injectionSwitch.y))))), uint(5u)))) ^ (subgroup_local_id + 1))) % subgroup_size), min(((_GLF_IDENTITY(subgroup_local_id + 1, (1u ^ ((1u << _GLF_IDENTITY(uint(5u), uint(5u))) >> _GLF_IDENTITY(_GLF_IDENTITY(uint(5u), max(uint(5u), _GLF_IDENTITY(uint(5u), (uint(5u)) * uint(_GLF_ONE(1.0, injectionSwitch.y))))), uint(5u)))) ^ (subgroup_local_id + 1))) % subgroup_size), _GLF_IDENTITY(((_GLF_IDENTITY(subgroup_local_id + 1, (1u ^ ((1u << _GLF_IDENTITY(uint(5u), uint(5u))) >> _GLF_IDENTITY(_GLF_IDENTITY(uint(5u), max(uint(5u), _GLF_IDENTITY(uint(5u), (uint(5u)) * uint(_GLF_ONE(1.0, injectionSwitch.y))))), uint(5u)))) ^ (subgroup_local_id + 1))) % subgroup_size), min(((_GLF_IDENTITY(subgroup_local_id + 1, (1u ^ ((1u << _GLF_IDENTITY(uint(5u), uint(5u))) >> _GLF_IDENTITY(_GLF_IDENTITY(uint(5u), max(uint(5u), _GLF_IDENTITY(uint(5u), (uint(5u)) * uint(_GLF_ONE(1.0, injectionSwitch.y))))), uint(5u)))) ^ (subgroup_local_id + 1))) % subgroup_size), ((_GLF_IDENTITY(subgroup_local_id + 1, (1u ^ ((1u << _GLF_IDENTITY(uint(5u), uint(5u))) >> _GLF_IDENTITY(_GLF_IDENTITY(uint(5u), max(uint(5u), _GLF_IDENTITY(uint(5u), (uint(5u)) * uint(_GLF_ONE(1.0, injectionSwitch.y))))), uint(5u)))) ^ (subgroup_local_id + 1))) % subgroup_size)))))) ^ _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, 1u * (0u))) | (0u))) / 1u))));
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(bvec3(_GLF_IDENTITY(! (false), (_GLF_IDENTITY(! (false), (! (false)) && true)) && true), false, true))))), true && (_GLF_IDENTITY(false, ! (! (false)))))))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(_GLF_IDENTITY(false, (false) && true))) || false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     if(_GLF_DEAD(false))
      barrier();
     return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
      return;
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(false))
        return;
       return;
       if(_GLF_DEAD(false))
        return;
      }
     return;
    }
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, bool(bvec2(false, false)))))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    return;
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 atomicStore(buf[_GLF_struct_replacement_31._f1._f1.virtual_gid], uint(1), 4, 64, 4);
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch, abs(vec2(1.0, 1.0)) * (injectionSwitch)).y, injectionSwitch.y))))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, bool(bvec4(false, true, true, false))), true, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     return;
    }
   if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, false))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, bool(bool(false))), true, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))
      return;
     if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY((_GLF_DEAD(false)), ! (! ((_GLF_DEAD(false))))) || false), (_GLF_DEAD(false)) || false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, ! (! (false)))))))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            return;
           if(_GLF_DEAD(false))
            return;
           if(_GLF_DEAD(false))
            return;
           barrier();
          }
         return;
        }
       barrier();
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, ! (! (false))))), true, true, false)))))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], min(injectionSwitch[0], injectionSwitch[0])), injectionSwitch[1])), min(injectionSwitch, injectionSwitch)).x > injectionSwitch.y), ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], min(injectionSwitch[0], injectionSwitch[0])), injectionSwitch[1])), min(injectionSwitch, injectionSwitch)).x > injectionSwitch.y)) && true))))
            {
             if(_GLF_DEAD(false))
              return;
             barrier();
            }
           return;
          }
         return;
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
        }
       barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
        barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            return;
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            return;
           return;
          }
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
          return;
         barrier();
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            return;
           barrier();
          }
        }
       barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            return;
           barrier();
          }
         if(_GLF_DEAD(false))
          return;
         barrier();
        }
      }
     return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         return;
         if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, true && (false))) && true)))
          return;
        }
       barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        return;
       if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY((_GLF_DEAD(false)) || false, _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY((_GLF_DEAD(false)) || false, ! (! ((_GLF_DEAD(false)) || false))), true)), _GLF_IDENTITY((bool(bvec2(_GLF_IDENTITY((_GLF_DEAD(false)) || false, ! (! ((_GLF_DEAD(false)) || false))), true))) && true, false || ((bool(bvec2(_GLF_IDENTITY((_GLF_DEAD(false)) || _GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, false || (false)), true))), ! (! ((_GLF_DEAD(false)) || false))), true))) && true)))))) || false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
           if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && true))
            return;
           barrier();
           if(_GLF_DEAD(false))
            return;
          }
         if(_GLF_DEAD(false))
          return;
         barrier();
         if(_GLF_DEAD(false))
          return;
        }
       if(_GLF_DEAD(false))
        barrier();
       return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
      return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         return;
        }
       return;
      }
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    barrier();
   return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))
    barrier();
  }
 if((_GLF_IDENTITY(subgroup_local_id, (false ? _GLF_FUZZED(subgroup_base) : subgroup_local_id)) % 2) == 0)
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(bvec3(! (false), false, true)))))) && true)))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   subgroupAll(true);
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   atomicStore(buf[next_virtual_gid], uint(2), _GLF_IDENTITY(4, (false ? _GLF_FUZZED(-8261) : _GLF_IDENTITY(4, (4) ^ 0))), 64, _GLF_IDENTITY(4, (4) / 1));
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
  }
 else
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y))), _GLF_IDENTITY(false, (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, _GLF_IDENTITY((false) && true, ! (! (_GLF_IDENTITY((false) && true, false || (_GLF_IDENTITY((false) && true, ! (! ((false) && true)))))))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || false) || (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
      barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(bvec2(! (false), true)))))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(false))
          return;
         return;
        }
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! (false))))))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
        }
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   subgroupAll(false);
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    return;
   atomicStore(buf[next_virtual_gid], uint(2), _GLF_IDENTITY(4, _GLF_IDENTITY((_GLF_IDENTITY(4, (_GLF_IDENTITY(4, (false ? _GLF_FUZZED(-41195) : 4))) + 0)) << 0, min(_GLF_IDENTITY((_GLF_IDENTITY(4, (4) + 0)), max((_GLF_IDENTITY(4, (4) + 0)), _GLF_IDENTITY((_GLF_IDENTITY(4, (4) + 0)), 0 ^ _GLF_IDENTITY((_GLF_IDENTITY((_GLF_IDENTITY(4, (4) + 0)), ~ (~ ((_GLF_IDENTITY(4, (4) + 0)))))), ((_GLF_IDENTITY((_GLF_IDENTITY(4, (4) + 0)), ~ (~ ((_GLF_IDENTITY(4, (4) + 0))))))) / 1)))) << 0, (_GLF_IDENTITY(4, (4) + 0)) << 0))), 64, 4);
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y)))), bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), false, true, false))))
  return;
}
