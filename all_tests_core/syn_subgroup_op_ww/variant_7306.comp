#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 uvec4 GLF_merged4_0_1_13_1_1_11_2_1_13_3_1_14num_workgroupsubgroup_idsubgroup_sizeworkgroup_base;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))
    {
     if(_GLF_WRAPPED_IF_TRUE(true))
      {
       barrier();
      }
     else
      {
      }
    }
   barrier();
  }
 uvec4 GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_12next_virtual_gidnum_workgroupsubgroup_idworkgroup_id;
 uint subgroup_id = gl_SubgroupID;
 GLF_merged4_0_1_13_1_1_11_2_1_13_3_1_14num_workgroupsubgroup_idsubgroup_sizeworkgroup_base.y = subgroup_id;
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (false))))))))
  barrier();
 GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_12next_virtual_gidnum_workgroupsubgroup_idworkgroup_id.z = GLF_merged4_0_1_13_1_1_11_2_1_13_3_1_14num_workgroupsubgroup_idsubgroup_sizeworkgroup_base.y;
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
  {
   if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
    {
     barrier();
    }
   else
    {
    }
  }
 GLF_merged4_0_1_13_1_1_11_2_1_13_3_1_14num_workgroupsubgroup_idsubgroup_sizeworkgroup_base.z = subgroup_size;
 uint subgroup_local_id = gl_SubgroupInvocationID;
 uint num_workgroup = gl_NumWorkGroups.x;
 GLF_merged4_0_1_13_1_1_11_2_1_13_3_1_14num_workgroupsubgroup_idsubgroup_sizeworkgroup_base.x = num_workgroup;
 if(_GLF_DEAD(false))
  barrier();
 GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_12next_virtual_gidnum_workgroupsubgroup_idworkgroup_id.y = GLF_merged4_0_1_13_1_1_11_2_1_13_3_1_14num_workgroupsubgroup_idsubgroup_sizeworkgroup_base.x;
 uint workgroup_size = gl_WorkGroupSize.x;
 uint workgroup_id = gl_WorkGroupID.x;
 _GLF_IDENTITY(GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_12next_virtual_gidnum_workgroupsubgroup_idworkgroup_id.w = workgroup_id, uint(_GLF_ZERO(0.0, injectionSwitch.x)) | (GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_12next_virtual_gidnum_workgroupsubgroup_idworkgroup_id.w = workgroup_id));
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 else
  {
  }
 uint workgroup_base = workgroup_size * _GLF_IDENTITY(GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_12next_virtual_gidnum_workgroupsubgroup_idworkgroup_id, min(GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_12next_virtual_gidnum_workgroupsubgroup_idworkgroup_id, _GLF_IDENTITY(GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_12next_virtual_gidnum_workgroupsubgroup_idworkgroup_id, (GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_12next_virtual_gidnum_workgroupsubgroup_idworkgroup_id) | (GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_12next_virtual_gidnum_workgroupsubgroup_idworkgroup_id)))).w;
 GLF_merged4_0_1_13_1_1_11_2_1_13_3_1_14num_workgroupsubgroup_idsubgroup_sizeworkgroup_base.w = workgroup_base;
 uint virtual_gid = _GLF_IDENTITY(GLF_merged4_0_1_13_1_1_11_2_1_13_3_1_14num_workgroupsubgroup_idsubgroup_sizeworkgroup_base.w + GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_12next_virtual_gidnum_workgroupsubgroup_idworkgroup_id.z * GLF_merged4_0_1_13_1_1_11_2_1_13_3_1_14num_workgroupsubgroup_idsubgroup_sizeworkgroup_base.z, _GLF_IDENTITY(uint(uvec2(GLF_merged4_0_1_13_1_1_11_2_1_13_3_1_14num_workgroupsubgroup_idsubgroup_sizeworkgroup_base.w + GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_12next_virtual_gidnum_workgroupsubgroup_idworkgroup_id.z * GLF_merged4_0_1_13_1_1_11_2_1_13_3_1_14num_workgroupsubgroup_idsubgroup_sizeworkgroup_base.z, 0u)), (uint(uvec2(GLF_merged4_0_1_13_1_1_11_2_1_13_3_1_14num_workgroupsubgroup_idsubgroup_sizeworkgroup_base.w + GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_12next_virtual_gidnum_workgroupsubgroup_idworkgroup_id.z * GLF_merged4_0_1_13_1_1_11_2_1_13_3_1_14num_workgroupsubgroup_idsubgroup_sizeworkgroup_base.z, 0u))) | 0u)) + subgroup_local_id;
 if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! _GLF_IDENTITY((! (injectionSwitch.x > injectionSwitch.y)), true && ((! (injectionSwitch.x > injectionSwitch.y))))), false, true), bvec3(bvec3(bvec3(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bool(injectionSwitch.x > injectionSwitch.y)))))), false, true))))))))))))
  {
  }
 else
  {
   if(_GLF_DEAD(false))
    barrier();
   for(int _injected_loop_counter = _GLF_IDENTITY(int(_GLF_ONE(1.0, injectionSwitch.y)), clamp(int(_GLF_ONE(1.0, injectionSwitch.y)), _GLF_IDENTITY(int(_GLF_ONE(1.0, injectionSwitch.y)), 0 | (int(_GLF_ONE(1.0, injectionSwitch.y)))), int(_GLF_ONE(1.0, injectionSwitch.y)))); _GLF_WRAPPED_LOOP(_injected_loop_counter > int(_GLF_IDENTITY(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).x), mix(float(_GLF_ZERO(0.0, injectionSwitch.x)), float(_GLF_FUZZED(4.9)), bool(false))))); _injected_loop_counter --)
    {
     do
      {
       if(_GLF_DEAD(false))
        barrier();
      }
     while(_GLF_WRAPPED_LOOP(false));
     if(_GLF_DEAD(false))
      {
       if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
        }
       else
        {
         barrier();
        }
      }
    }
  }
 if(_GLF_DEAD(false))
  barrier();
 uint next_virtual_gid = GLF_merged4_0_1_13_1_1_11_2_1_13_3_1_14num_workgroupsubgroup_idsubgroup_sizeworkgroup_base.w + _GLF_IDENTITY(GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_12next_virtual_gidnum_workgroupsubgroup_idworkgroup_id, (GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_12next_virtual_gidnum_workgroupsubgroup_idworkgroup_id) - uvec4(0u, 0u, 0u, 0u)).z * _GLF_IDENTITY(GLF_merged4_0_1_13_1_1_11_2_1_13_3_1_14num_workgroupsubgroup_idsubgroup_sizeworkgroup_base.z, _GLF_IDENTITY(_GLF_IDENTITY(uint(uint(GLF_merged4_0_1_13_1_1_11_2_1_13_3_1_14num_workgroupsubgroup_idsubgroup_sizeworkgroup_base.z)), (_GLF_IDENTITY(uint(uint(GLF_merged4_0_1_13_1_1_11_2_1_13_3_1_14num_workgroupsubgroup_idsubgroup_sizeworkgroup_base.z)), (_GLF_IDENTITY(uint(uint(GLF_merged4_0_1_13_1_1_11_2_1_13_3_1_14num_workgroupsubgroup_idsubgroup_sizeworkgroup_base.z)), 0u | (uint(uint(GLF_merged4_0_1_13_1_1_11_2_1_13_3_1_14num_workgroupsubgroup_idsubgroup_sizeworkgroup_base.z))))) | 0u)) | (_GLF_IDENTITY(uint(uint(GLF_merged4_0_1_13_1_1_11_2_1_13_3_1_14num_workgroupsubgroup_idsubgroup_sizeworkgroup_base.z)), min(uint(uint(GLF_merged4_0_1_13_1_1_11_2_1_13_3_1_14num_workgroupsubgroup_idsubgroup_sizeworkgroup_base.z)), uint(uint(GLF_merged4_0_1_13_1_1_11_2_1_13_3_1_14num_workgroupsubgroup_idsubgroup_sizeworkgroup_base.z)))))), (uint(uint(GLF_merged4_0_1_13_1_1_11_2_1_13_3_1_14num_workgroupsubgroup_idsubgroup_sizeworkgroup_base.z))) << 0u)) + _GLF_IDENTITY(((subgroup_local_id + 1) % GLF_merged4_0_1_13_1_1_11_2_1_13_3_1_14num_workgroupsubgroup_idsubgroup_sizeworkgroup_base.z), uint(_GLF_ZERO(0.0, injectionSwitch.x)) | (_GLF_IDENTITY(((subgroup_local_id + 1) % GLF_merged4_0_1_13_1_1_11_2_1_13_3_1_14num_workgroupsubgroup_idsubgroup_sizeworkgroup_base.z), uint(_GLF_IDENTITY(uvec4(((subgroup_local_id + 1) % GLF_merged4_0_1_13_1_1_11_2_1_13_3_1_14num_workgroupsubgroup_idsubgroup_sizeworkgroup_base.z), (1u | 1u), 0u, 1u), clamp(uvec4(((subgroup_local_id + 1) % GLF_merged4_0_1_13_1_1_11_2_1_13_3_1_14num_workgroupsubgroup_idsubgroup_sizeworkgroup_base.z), (1u | 1u), 0u, 1u), uvec4(((subgroup_local_id + 1) % GLF_merged4_0_1_13_1_1_11_2_1_13_3_1_14num_workgroupsubgroup_idsubgroup_sizeworkgroup_base.z), (1u | 1u), 0u, 1u), uvec4(((subgroup_local_id + 1) % GLF_merged4_0_1_13_1_1_11_2_1_13_3_1_14num_workgroupsubgroup_idsubgroup_sizeworkgroup_base.z), (1u | 1u), 0u, 1u)))))));
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y))))))
  {
   if(_GLF_DEAD(false))
    {
     for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
      {
       barrier();
      }
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_12next_virtual_gidnum_workgroupsubgroup_idworkgroup_id.x = next_virtual_gid;
 if(_GLF_DEAD(false))
  barrier();
 atomicStore(buf[virtual_gid], uint(1), 4, _GLF_IDENTITY(64, int(_GLF_IDENTITY(_GLF_IDENTITY(ivec3(64, 1, (1 ^ 0)), _GLF_IDENTITY(ivec3(_GLF_IDENTITY(ivec4(ivec3(64, 1, (1 ^ 0)), 1), clamp(ivec4(ivec3(64, 1, (1 ^ 0)), 1), ivec4(ivec3(64, 1, (1 ^ 0)), 1), ivec4(ivec3(64, 1, (1 ^ 0)), 1)))), ivec3(_GLF_IDENTITY(ivec4(ivec3(_GLF_IDENTITY(ivec4(ivec3(64, 1, (1 ^ 0)), 1), clamp(ivec4(ivec3(64, 1, (1 ^ 0)), 1), ivec4(ivec3(64, 1, _GLF_IDENTITY((1 ^ 0), ((1 ^ 0)) ^ 0)), 1), ivec4(ivec3(_GLF_IDENTITY(64, min(64, _GLF_IDENTITY(64, (64) >> (0 ^ 0)))), 1, (1 ^ 0)), 1)))), 0), ivec4(1, 1, 1, 1) * (ivec4(ivec3(_GLF_IDENTITY(ivec4(ivec3(64, 1, (1 ^ 0)), 1), clamp(ivec4(ivec3(64, 1, (1 ^ 0)), 1), ivec4(ivec3(64, 1, (1 ^ 0)), 1), ivec4(ivec3(64, 1, (1 ^ 0)), 1)))), 0)))))), ivec3(_GLF_IDENTITY(ivec4(_GLF_IDENTITY(ivec3(64, _GLF_IDENTITY(1, _GLF_IDENTITY(int(int(1)), (int(int(1))) ^ 0)), (1 ^ 0)), (_GLF_IDENTITY(false ? _GLF_FUZZED(ivec3(-63880, 41303, -79211)) : ivec3(64, 1, (1 ^ 0)), max(false ? _GLF_FUZZED(_GLF_IDENTITY(ivec3(-63880, 41303, -79211), min(ivec3(-63880, 41303, -79211), ivec3(-63880, 41303, -79211)))) : ivec3(64, 1, (1 ^ 0)), false ? _GLF_FUZZED(ivec3(-63880, 41303, -79211)) : ivec3(64, 1, (1 ^ 0)))))), (0 << _GLF_IDENTITY(int(3), int(_GLF_IDENTITY(3, min(3, 3)))))), ivec4(0, 0, 0, 0) | (ivec4(_GLF_IDENTITY(ivec3(64, 1, (1 ^ 0)), (false ? _GLF_FUZZED(ivec3(-63880, 41303, -79211)) : ivec3(64, 1, (1 ^ 0)))), (0 << _GLF_IDENTITY(int(_GLF_IDENTITY(3, (3) << 0)), int(3)))))))))), 4);
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   do
    {
     barrier();
    }
   while(_GLF_WRAPPED_LOOP(false));
  }
 if(_GLF_DEAD(false))
  barrier();
 do
  {
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
    }
   else
    {
     if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
          {
           barrier();
          }
         else
          {
          }
        }
      }
     else
      {
       if(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) ^ 0u) + 1 < _GLF_IDENTITY(GLF_merged4_0_1_13_1_1_11_2_1_13_3_1_14num_workgroupsubgroup_idsubgroup_sizeworkgroup_base.z, ~ (~ (GLF_merged4_0_1_13_1_1_11_2_1_13_3_1_14num_workgroupsubgroup_idsubgroup_sizeworkgroup_base.z))))
        {
         switch(_GLF_IDENTITY(_GLF_SWITCH(0), (false ? _GLF_FUZZED(-55756) : _GLF_SWITCH(0))))
          {
           case 33:
           {
            uvec2(99907u, 25284u);
            if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, (false) || false)))
             {
             }
            else
             {
              do
               {
                if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                 barrier();
               }
              while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
             }
            uvec3 _GLF_SWITCH_0_0v;
            do
             {
              if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
               barrier();
             }
            while(_GLF_WRAPPED_LOOP(false));
            ;
            if(_GLF_DEAD(false))
             barrier();
            do
             {
              if(_GLF_DEAD(false))
               {
                if(_GLF_DEAD(false))
                 barrier();
                if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                 {
                 }
                else
                 {
                  barrier();
                 }
               }
             }
            while(_GLF_WRAPPED_LOOP(false));
            if(_GLF_WRAPPED_IF_TRUE(true))
             {
              if(_GLF_DEAD(false))
               barrier();
              mat4x2(-0.0, 8718.7569, -9.1, 4.4, -49.47, _GLF_IDENTITY(933.347, min(933.347, 933.347)), -9.8, 392.060);
             }
            else
             {
             }
            if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
             {
             }
            else
             {
              for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
               {
                ;
               }
             }
            isinf(vec4(_GLF_IDENTITY(-2.1, (false ? _GLF_FUZZED(uintBitsToFloat(workgroup_base)) : -2.1)), 8.6, _GLF_IDENTITY(-1.6, (-1.6) - 0.0), -60.66));
           }
           for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
            {
             do
              {
               if(_GLF_DEAD(false))
                barrier();
              }
             while(_GLF_WRAPPED_LOOP(false));
            }
           case 0:
           if(_GLF_WRAPPED_IF_TRUE(true))
            {
             if(_GLF_DEAD(false))
              barrier();
            }
           else
            {
            }
           if(_GLF_DEAD(false))
            {
             if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true))))
              {
              }
             else
              {
               for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
                {
                 barrier();
                }
              }
            }
           if(_GLF_DEAD(false))
            barrier();
           case 96:
           case 72:
           atomicStore(buf[GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_12next_virtual_gidnum_workgroupsubgroup_idworkgroup_id.x], uint(2), 4, 64, 4);
           case 58:
           case 80:
           case 24:
           if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
            barrier();
           subgroupAll(false);
           break;
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), false || (_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), false || ((injectionSwitch.x < injectionSwitch.y)))))) && (false))))
            {
             do
              {
               barrier();
              }
             while(_GLF_WRAPPED_LOOP(false));
            }
           case 47:
           if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x > injectionSwitch.y))))
            {
             if(_GLF_DEAD(false))
              barrier();
             barrier();
            }
           {
            if(_GLF_DEAD(false))
             barrier();
            {
             switch(_GLF_SWITCH((int(_GLF_ZERO(0.0, injectionSwitch.x)) & -29388)))
              {
               case 8:
               true;
               case 0:
               ivec2 _GLF_SWITCH_0_1v, _GLF_SWITCH_0_2v[71], _GLF_SWITCH_0_3v;
               {
                do
                 {
                  if(_GLF_DEAD(false))
                   barrier();
                  mat4(-577.370, -2.8, 5.6, -7.0, 305.109, -57.43, 91.40, 82.14, 4582.1921, 8.5, -2.7, 1213.4882, 3.8, -312.167, -7.6, -3.2);
                 }
                while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
                if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
                 {
                  if(_GLF_DEAD(false))
                   {
                    do
                     {
                      barrier();
                     }
                    while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
                   }
                  if(_GLF_WRAPPED_IF_FALSE(false))
                   {
                   }
                  else
                   {
                    for(int _injected_loop_counter = int(_GLF_ZERO(0.0, injectionSwitch.x)); _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
                     {
                      switch(_GLF_SWITCH(0))
                       {
                        case 59:
                        (uvec3(120809u, 24108u, 132537u) >> min(uvec3(144242u, 63929u, 112171u), uvec3(146513u, _GLF_IDENTITY(156425u, (156425u) | (156425u)), 96631u)));
                        case 0:
                        if(_GLF_DEAD(false))
                         barrier();
                        case 19:
                        do
                         {
                          barrier();
                         }
                        while(_GLF_WRAPPED_LOOP(false));
                        break;
                        default:
                        if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, false || (true))))
                         {
                          1;
                         }
                        else
                         {
                         }
                       }
                     }
                   }
                 }
                mat2x4(-9496.9325, 4802.8522, 2.6, -3.8, 7.5, 6.7, -2843.8674, 1524.6614);
                if(_GLF_WRAPPED_IF_TRUE(true))
                 {
                  ivec4(_GLF_IDENTITY(-91045, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(-91045, (-91045) | (-91045))), (_GLF_IDENTITY(~ (-91045), clamp(~ (-91045), ~ (-91045), ~ (-91045)))) | 0))), -58606, 7438, 40268);
                 }
                else
                 {
                 }
                if(_GLF_DEAD(false))
                 barrier();
                for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter > 0, ! (_GLF_IDENTITY(! (_injected_loop_counter > 0), (! (_injected_loop_counter > 0)) || false)))); _injected_loop_counter --)
                 {
                  if(_GLF_WRAPPED_IF_FALSE(false))
                   {
                   }
                  else
                   {
                    if(_GLF_DEAD(false))
                     barrier();
                    for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
                     {
                      if(_GLF_DEAD(false))
                       barrier();
                     }
                   }
                  do
                   {
                    mat4(-3.4, 5.3, 4965.2560, 73.56, 119.137, -343.620, -846.024, -88.67, -85.81, -0.7, -8.8, _GLF_IDENTITY(-2.2, min(-2.2, _GLF_IDENTITY(-2.2, _GLF_IDENTITY(float(vec2(_GLF_IDENTITY(-2.2, _GLF_IDENTITY(clamp(-2.2, -2.2, -2.2), mix(float(_GLF_FUZZED(123.651)), float(clamp(-2.2, -2.2, _GLF_IDENTITY(-2.2, max(-2.2, _GLF_IDENTITY(-2.2, mix(float(_GLF_FUZZED(-23.64)), float(-2.2), bool(true))))))), bool(true)))), 1.0)), min(float(vec2(_GLF_IDENTITY(-2.2, clamp(-2.2, -2.2, -2.2)), 1.0)), float(vec2(_GLF_IDENTITY(-2.2, clamp(-2.2, -2.2, -2.2)), 1.0))))))), 401.526, -79.95, -1.4, 618.331);
                   }
                  while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bool(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(mat4x2(injectionSwitch.y, sqrt(0.0), 1.0, 0.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(1.0, 1.0, 0.0, 1.0)), dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(1.0, 1.0, 0.0, 1.0))), round(length(normalize(vec2(1.0, 1.0)))), 1.0, 1.0)), (true ? float(mat4x2(injectionSwitch.y, sqrt(0.0), 1.0, 0.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(1.0, 1.0, 0.0, 1.0)), dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(1.0, 1.0, 0.0, 1.0))), round(length(normalize(vec2(1.0, 1.0)))), 1.0, 1.0)) : _GLF_FUZZED(6.2)))), injectionSwitch.y, injectionSwitch.y))))))))))));
                  if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                   barrier();
                 }
                mat4x2 _GLF_SWITCH_0_4v;
                uvec2(116160u, 125498u);
               }
               if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                {
                }
               else
                {
                 mat2x4(-222.141, 1795.0374, -6.4, 996.320, 3816.5913, 9409.6074, -8597.5161, -2.5);
                }
               for(               true;
 (ivec4(-9027, -81863, 60039, 54604) == ivec4(-23277, -397, -77648, -17069)); bvec3(false, true, false))
                {
                 mat3x2(162.268, 8.5, 170.542, -1792.6491, -2.4, 8.6);
                 ivec2 _GLF_SWITCH_0_5v;
                 mat4x3 _GLF_SWITCH_0_6v, _GLF_SWITCH_0_7v;
                 mat3x4(-417.486)[2];
                 if(_GLF_DEAD(false))
                  barrier();
                 mat3(5.7, -66.63, 792.620, 4028.9927, 2.5, 2.4, -8.7, -17.06, 9.2);
                }
               if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                {
                }
               else
                {
                 if(_GLF_DEAD(false))
                  barrier();
                 for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
                  {
                   while((mat4x2(57.55, 50.52, -5.1, -454.543, 4.4, 26.08, -9.8, -477.805) == mat4x2(-1.2, -23.18, -0.1, -6.3, -5639.7322, 6.6, 0.9, -6035.3847)))
                    {
                    }
                   if(_GLF_DEAD(false))
                    {
                     do
                      {
                       barrier();
                      }
                     while(_GLF_WRAPPED_LOOP(false));
                    }
                  }
                }
               case 37:
               case 29:
               if(_GLF_DEAD(false))
                {
                 if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                  {
                  }
                 else
                  {
                   barrier();
                  }
                }
               for(int _injected_loop_counter = ((1 << _GLF_IDENTITY(int(0), int(0))) >> _GLF_IDENTITY(int(0), int(0))); _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
                {
                 for(int _injected_loop_counter = ((1 << _GLF_IDENTITY(int(4), int(4))) >> _GLF_IDENTITY(int(4), int(4))); _GLF_WRAPPED_LOOP(_injected_loop_counter > _GLF_IDENTITY(0, (0) | 0)); _injected_loop_counter --)
                  {
                   do
                    {
                     for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
                      {
                       switch(_GLF_SWITCH(0))
                        {
                         case 0:
                         case 41:
                         case 71:
                         case 16:
                         case 54:
                         case 35:
                         case 91:
                         case 20:
                         case 65:
                         if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
                          barrier();
                         break;
                         default:
                         1;
                        }
                      }
                     mat4x2 _GLF_SWITCH_0_8v[8], _GLF_SWITCH_0_9v[81], _GLF_SWITCH_0_10v;
                     uvec4 _GLF_SWITCH_0_11v[92];
                     mat3x2 _GLF_SWITCH_0_12v, _GLF_SWITCH_0_13v[84], _GLF_SWITCH_0_14v;
                     next_virtual_gid;
                     ;
                     do
                      {
                       GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_12next_virtual_gidnum_workgroupsubgroup_idworkgroup_id;
                      }
                     while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
                    }
                   while((56714 == -46937));
                  }
                }
               case 97:
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                barrier();
               if(false)
                {
                 switch(_GLF_SWITCH((0 | (0 << _GLF_IDENTITY(int(2), int(2))))))
                  {
                   case 0:
                   case 52:
                   case 5:
                   ;
                   case 71:
                   case 36:
                   case 34:
                   case 42:
                   if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
                    {
                     if(_GLF_DEAD(false))
                      barrier();
                     length(vec3(-1.9, 178.045, -8602.8628));
                    }
                   else
                    {
                    }
                   case 83:
                   if(_GLF_WRAPPED_IF_FALSE(false))
                    {
                    }
                   else
                    {
                     if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, (true) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))
                      {
                       if(_GLF_DEAD(false))
                        barrier();
                       switch(_GLF_SWITCH(int(_GLF_ZERO(0.0, injectionSwitch.x))))
                        {
                         case 66:
                         mat4x2 _GLF_SWITCH_3_0v[23], _GLF_SWITCH_3_1v[26];
                         case 58:
                         bvec4(true, bvec2(true, false), any(bvec4(false, false, false, true)));
                         case 0:
                         case 74:
                         case 21:
                         case 59:
                         case 35:
                         bvec2(bvec3(true, true, _GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), bool(bvec4(! (true), true, true, true))))))))));
                         break;
                         case 23:
                         determinant(mat3(2549.2224, -3098.7547, -3.6, -8445.8320, -8.7, -3.8, -9.0, 2482.1418, 194.005));
                         case 96:
                         43945;
                         default:
                         1;
                        }
                      }
                     else
                      {
                       switch(_GLF_SWITCH((0 >> _GLF_IDENTITY(int(0), _GLF_IDENTITY(int(0), (_GLF_IDENTITY(int(0), (int(0)) >> 0)) / 1)))))
                        {
                         case 0:
                         if(_GLF_WRAPPED_IF_TRUE(true))
                          {
                           if(_GLF_WRAPPED_IF_FALSE(false))
                            {
                            }
                           else
                            {
                             for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > ((0 & -9560) >> _GLF_IDENTITY(int(5), int(5)))); _injected_loop_counter --)
                              {
                               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                                barrier();
                              }
                             if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
                              {
                               if(_GLF_DEAD(false))
                                barrier();
                              }
                             else
                              {
                              }
                            }
                          }
                         else
                          {
                           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                            barrier();
                          }
                         break;
                         case 93:
                         bvec2(false, true);
                         case 55:
                         mix(ivec4(16153, -16740, -74390, -93601), ivec4(77486, 16423, 82117, -24070), bvec4(true, true, false, true));
                         default:
                         1;
                        }
                      }
                    }
                   break;
                   case 84:
                   uint _GLF_SWITCH_2_0v, _GLF_SWITCH_2_1v[88];
                   if(_GLF_DEAD(false))
                    {
                     if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                      {
                      }
                     else
                      {
                       barrier();
                      }
                    }
                   default:
                   1;
                  }
                }
               else
                {
                 if(_GLF_DEAD(false))
                  barrier();
                 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                  barrier();
                 mat3x2(-48.49, 81.29, 6.5, 30.65, -15.21, -8.5);
                 bvec2 _GLF_SWITCH_0_15v, _GLF_SWITCH_0_16v, _GLF_SWITCH_0_17v;
                 do
                  {
                   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                    barrier();
                   if(_GLF_DEAD(false))
                    barrier();
                   do
                    {
                     if(_GLF_DEAD(false))
                      barrier();
                    }
                   while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
                   subgroup_local_id;
                  }
                 while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
                 if(_GLF_DEAD(false))
                  barrier();
                 ivec2 _GLF_SWITCH_0_18v[53];
                 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                  {
                   for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
                    {
                     barrier();
                    }
                  }
                 if(_GLF_DEAD(false))
                  {
                   for(int _injected_loop_counter = int(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x)); _GLF_WRAPPED_LOOP(_injected_loop_counter < (1 & 1)); _injected_loop_counter ++)
                    {
                     barrier();
                    }
                  }
                 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                  barrier();
                 do
                  {
                   if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, false || (false))))
                    {
                    }
                   else
                    {
                     do
                      {
                       switch(_GLF_SWITCH(((0 << _GLF_IDENTITY(int(1), int(1))) >> _GLF_IDENTITY(int(0), _GLF_IDENTITY(int(0), (int(0)) / 1)))))
                        {
                         case 10:
                         do
                          {
                           for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
                            {
                             if(_GLF_DEAD(false))
                              barrier();
                            }
                           (mat3x2(-98.20, -8627.4700, 5841.5314, 249.601, 246.906, 966.920) / mat3x2(-0.0, _GLF_IDENTITY(-2.8, length(vec3(0.0, 0.0, 0.0)) + (-2.8)), 65.32, -2.0, 1.1, -37.43));
                           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                            barrier();
                          }
                         while(_GLF_WRAPPED_LOOP(false));
                         if(_GLF_DEAD(false))
                          {
                           do
                            {
                             barrier();
                            }
                           while(_GLF_WRAPPED_LOOP(false));
                          }
                         case 0:
                         case 36:
                         case 21:
                         case 2:
                         case 11:
                         if(_GLF_DEAD(false))
                          barrier();
                         do
                          {
                           if(_GLF_DEAD(false))
                            barrier();
                          }
                         while(_GLF_WRAPPED_LOOP(false));
                         if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
                          barrier();
                         vec3(_GLF_IDENTITY(-3.5, (false ? _GLF_FUZZED(3.6) : -3.5)));
                         break;
                         default:
                         1;
                        }
                      }
                     while(_GLF_WRAPPED_LOOP(false));
                    }
                  }
                 while(_GLF_WRAPPED_LOOP(false));
                 if(_GLF_DEAD(false))
                  {
                   for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < ((1 << _GLF_IDENTITY(int(4), int(4))) >> _GLF_IDENTITY(int(4), int(4)))); _GLF_IDENTITY(_injected_loop_counter ++, 0 | (_injected_loop_counter ++)))
                    {
                     barrier();
                    }
                  }
                 vec4(_GLF_IDENTITY(-5.1, mix(float(_GLF_FUZZED(_GLF_IDENTITY(vec3(-4.5, 903.577, 8.4), mix(vec3(_GLF_FUZZED(((- 8612.4200) * (-181.768 - 1.5))), _GLF_FUZZED(4490.3209), _GLF_IDENTITY((vec3(-4.5, 903.577, 8.4))[2], min((vec3(-4.5, 903.577, 8.4))[2], (vec3(-4.5, 903.577, 8.4))[2]))), vec3((vec3(-4.5, 903.577, 8.4))[0], (vec3(-4.5, 903.577, 8.4))[1], _GLF_FUZZED(-895.396)), bvec3(true, true, false))).r)), float(-5.1), bool(true))), 3.2, -1179.0463, 3.3);
                 if(_GLF_DEAD(false))
                  barrier();
                 findLSB((-86888 - 5468));
                 if(_GLF_DEAD(false))
                  barrier();
                 do
                  {
                   if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                    {
                    }
                   else
                    {
                     if(_GLF_WRAPPED_IF_TRUE(true))
                      {
                       if(_GLF_DEAD(false))
                        {
                         if(_GLF_WRAPPED_IF_TRUE(true))
                          {
                           if(_GLF_WRAPPED_IF_FALSE(false))
                            {
                            }
                           else
                            {
                             barrier();
                            }
                          }
                         else
                          {
                          }
                        }
                       bvec4(bvec3(true, true, true), true);
                      }
                     else
                      {
                      }
                    }
                  }
                 while(_GLF_WRAPPED_LOOP(false));
                 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                  {
                   if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, 0.0 + (_GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(-9452.9292)), bool(false)))))))))
                    {
                    }
                   else
                    {
                     if(_GLF_WRAPPED_IF_TRUE(true))
                      {
                       barrier();
                      }
                     else
                      {
                      }
                    }
                  }
                 if(_GLF_DEAD(false))
                  barrier();
                }
               {
                uvec2 _GLF_SWITCH_0_19v[47], _GLF_SWITCH_0_20v[6], _GLF_SWITCH_0_21v;
                if(_GLF_DEAD(false))
                 barrier();
                if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
                 {
                  if(_GLF_DEAD(false))
                   barrier();
                  do
                   {
                    if(_GLF_DEAD(false))
                     {
                      do
                       {
                        do
                         {
                          barrier();
                         }
                        while(_GLF_WRAPPED_LOOP(false));
                       }
                      while(_GLF_WRAPPED_LOOP(false));
                     }
                   }
                  while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))));
                 }
                else
                 {
                 }
                ;
                mat3x2 _GLF_SWITCH_0_22v[33];
                if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                 barrier();
                bvec4(true, false, false, true);
                mat2 _GLF_SWITCH_0_23v, _GLF_SWITCH_0_24v, _GLF_SWITCH_0_25v;
                float _GLF_SWITCH_0_26v;
                if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                 {
                 }
                else
                 {
                  (mat3(4993.1141, 4.1, 2.0, 0.6, 4.9, 635.388, -96.38, 19.84, -644.791) / mat3(-289.982, _GLF_IDENTITY(45.72, (_GLF_IDENTITY(true ? 45.72 : _GLF_FUZZED(4.4), max(true ? 45.72 : _GLF_FUZZED(4.4), _GLF_IDENTITY(true ? 45.72 : _GLF_FUZZED(4.4), (false ? _GLF_FUZZED(_GLF_SWITCH_0_26v) : true ? 45.72 : _GLF_FUZZED(4.4))))))), 260.711, -407.232, -51.62, 53.62, -6975.6880, 9.4, _GLF_IDENTITY(891.212, mix(float(_GLF_FUZZED(-6498.6545)), float(_GLF_IDENTITY(891.212, min(891.212, 891.212))), bool(true)))));
                 }
                (_GLF_SWITCH_0_1v & _GLF_IDENTITY(_GLF_SWITCH_0_3v, ivec2(1, 1) * (_GLF_SWITCH_0_3v)));
                mat2x4(mat4(17.07, -5.6, 7.4, 4.6, -9283.8209, -6.1, 9058.4084, -1861.1325, 1748.0549, 3.7, -318.295, -3.1, _GLF_IDENTITY(3.1, float(float(3.1))), -5.3, -580.579, -794.708));
                if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                 {
                  if(_GLF_DEAD(false))
                   {
                    if(_GLF_WRAPPED_IF_TRUE(true))
                     {
                      barrier();
                     }
                    else
                     {
                     }
                   }
                  barrier();
                 }
                do
                 {
                  if(_GLF_DEAD(false))
                   {
                    if(_GLF_DEAD(false))
                     {
                      if(_GLF_WRAPPED_IF_TRUE(true))
                       {
                        barrier();
                       }
                      else
                       {
                       }
                     }
                    barrier();
                   }
                 }
                while(_GLF_WRAPPED_LOOP(false));
               }
               break;
               case 39:
               uvec2(149412u, 46924u);
               default:
               1;
              }
            }
            if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false)) || false))
             {
              if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
               barrier();
              if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
               {
                do
                 {
                  for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
                   {
                    barrier();
                   }
                  if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y))))
                   barrier();
                 }
                while(_GLF_WRAPPED_LOOP(false));
               }
              else
               {
               }
              if(_GLF_DEAD(false))
               barrier();
             }
            ivec3 _GLF_SWITCH_0_27v;
            for(int _injected_loop_counter = int(_GLF_ONE(1.0, injectionSwitch.y)); _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
             {
              if(_GLF_DEAD(false))
               barrier();
             }
            for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
             {
              if(_GLF_WRAPPED_IF_FALSE(false))
               {
                if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                 barrier();
               }
              else
               {
                if(_GLF_WRAPPED_IF_TRUE(true))
                 {
                  do
                   {
                    if(_GLF_WRAPPED_IF_FALSE(false))
                     {
                     }
                    else
                     {
                      bvec2(false, true);
                     }
                   }
                  while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, ! (! (false)))));
                 }
                else
                 {
                  if(_GLF_DEAD(false))
                   {
                    if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, (false) || false)))
                     {
                     }
                    else
                     {
                      barrier();
                     }
                   }
                 }
               }
             }
            {
             for(int _injected_loop_counter = _GLF_IDENTITY(0, int(ivec3(_GLF_IDENTITY(0, max(0, 0)), 0, 0))); _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
              {
               switch(_GLF_SWITCH(0))
                {
                 case 10:
                 bvec3 _GLF_SWITCH_3_0v;
                 case 0:
                 if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
                  {
                   if(_GLF_DEAD(false))
                    barrier();
                  }
                 else
                  {
                  }
                 case 66:
                 case 68:
                 if(_GLF_DEAD(false))
                  barrier();
                 case 84:
                 bvec2(true, false);
                 break;
                 case 73:
                 mat4x2 _GLF_SWITCH_3_1v;
                 default:
                 1;
                }
              }
             for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
              {
               if(_GLF_DEAD(false))
                barrier();
              }
             if(isinf(868.740))
              {
               mat3 _GLF_SWITCH_0_28v, _GLF_SWITCH_0_29v[18];
               if(_GLF_DEAD(false))
                barrier();
               mat2x4(-56.24, -1.9, 2608.8850, 1.3, -863.225, -7069.0032, 33.42, 76.53);
               ((mat4(-20.98, 1.8, -2906.0951, 1.7, -4.0, -21.71, -284.696, 96.67, 516.585, -493.529, -606.614, -2026.0346, 46.00, 9248.1814, -8.3, -7509.7520) * mat2x4(-798.322, 8.5, 365.385, _GLF_IDENTITY(-1.1, max(-1.1, -1.1)), 3531.6368, 7611.1867, -8754.3969, 9.3)) + mat2x4(-0.3, -68.37, -970.127, -0.1, -20.75, 90.76, -440.194, 97.82));
               float _GLF_SWITCH_0_30v[71];
               if(_GLF_WRAPPED_IF_TRUE(true))
                {
                 mat2(mat3x2(-5.4, 3.0, 3.5, 30.73, -518.501, -9193.6177));
                }
               else
                {
                }
               if(_GLF_DEAD(false))
                barrier();
              }
             else
              {
               if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, (true) || false)))
                {
                 if(_GLF_DEAD(false))
                  {
                   if(_GLF_WRAPPED_IF_FALSE(false))
                    {
                    }
                   else
                    {
                     barrier();
                    }
                  }
                }
               else
                {
                }
               mat2(2.9, -361.984, -7.5, -24.54);
               mat4x3 _GLF_SWITCH_0_31v[14], _GLF_SWITCH_0_32v[87];
               if(_GLF_WRAPPED_IF_TRUE(true))
                {
                 if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
                  {
                   if(_GLF_DEAD(false))
                    barrier();
                   do
                    {
                     if(_GLF_DEAD(false))
                      {
                       if(_GLF_WRAPPED_IF_TRUE(true))
                        {
                         barrier();
                        }
                       else
                        {
                        }
                      }
                    }
                   while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, false || (false))));
                  }
                 else
                  {
                  }
                 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
                  {
                   if(_GLF_DEAD(false))
                    {
                     if(_GLF_WRAPPED_IF_TRUE(true))
                      {
                       barrier();
                      }
                     else
                      {
                      }
                    }
                   barrier();
                  }
                 ;
                 if(_GLF_DEAD(false))
                  barrier();
                }
               else
                {
                 for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
                  {
                   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                    {
                     if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                      {
                      }
                     else
                      {
                       barrier();
                      }
                    }
                   if(_GLF_DEAD(false))
                    barrier();
                  }
                 if(_GLF_DEAD(false))
                  {
                   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y))))
                    barrier();
                   barrier();
                  }
                }
               for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
                {
                 do
                  {
                   if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                    {
                    }
                   else
                    {
                     false;
                    }
                  }
                 while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
                }
               for(int _injected_loop_counter = int(_GLF_ONE(1.0, injectionSwitch.y)); _GLF_WRAPPED_LOOP(_injected_loop_counter > (0 << _GLF_IDENTITY(int(1), _GLF_IDENTITY(int(1), ~ (~ (int(1))))))); _injected_loop_counter --)
                {
                 exp2(vec2(4.9, -0.2));
                }
               if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
                barrier();
               (_GLF_IDENTITY(_GLF_IDENTITY(mat3(6884.1236, -393.842, -505.472, 284.161, 6.9, -9175.6955, _GLF_IDENTITY(3403.1990, float(mat3(3403.1990, 1.0, 0.0, 0.0, 0.0, length(vec2(0.0, 0.0)), tan(0.0), 0.0, 1.0))), -446.603, 4.3), (true ? _GLF_IDENTITY(mat3(6884.1236, -393.842, -505.472, 284.161, 6.9, -9175.6955, 3403.1990, -446.603, 4.3), mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0) + (mat3(6884.1236, -393.842, -505.472, 284.161, 6.9, -9175.6955, 3403.1990, -446.603, 4.3))) : _GLF_FUZZED((mat3(87.64, 83.52, 354.389, -33.88, 32.86, 59.63, 97.20, -9.7, -6.0) + dot(injectionSwitch, vec2(-5145.5713, 87.38)))))) - mat3(-6.1, 29.90, 764.977, -978.606, 302.791, 52.45, -7.9, _GLF_IDENTITY(2225.4975, mix(float(_GLF_FUZZED(8.6)), float(2225.4975), bool(true))), _GLF_IDENTITY(8.3, max(8.3, 8.3))), transpose(transpose(_GLF_IDENTITY(mat3(6884.1236, -393.842, -505.472, 284.161, 6.9, -9175.6955, _GLF_IDENTITY(3403.1990, float(mat3(3403.1990, 1.0, 0.0, 0.0, 0.0, length(vec2(0.0, 0.0)), tan(0.0), 0.0, 1.0))), -446.603, 4.3), (true ? _GLF_IDENTITY(mat3(6884.1236, -393.842, -505.472, 284.161, 6.9, -9175.6955, 3403.1990, -446.603, 4.3), mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0) + (mat3(6884.1236, -393.842, -505.472, 284.161, 6.9, -9175.6955, 3403.1990, -446.603, 4.3))) : _GLF_FUZZED((mat3(87.64, 83.52, 354.389, -33.88, 32.86, 59.63, 97.20, -9.7, -6.0) + dot(injectionSwitch, vec2(-5145.5713, 87.38)))))) - mat3(-6.1, 29.90, 764.977, -978.606, 302.791, 52.45, -7.9, _GLF_IDENTITY(2225.4975, mix(float(_GLF_FUZZED(8.6)), float(2225.4975), bool(true))), _GLF_IDENTITY(8.3, max(8.3, 8.3)))))));
               (uvec3(60361u, 15603u, 4441u));
               for(int _injected_loop_counter = ((int(_GLF_ONE(1.0, injectionSwitch.y)) << _GLF_IDENTITY(int(6), int(6))) >> _GLF_IDENTITY(int(6), int(6))); _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
                {
                 -7081.8959;
                }
              }
             if((uvec2(60303u, 113144u) != _GLF_IDENTITY(uvec2(44083u, 184290u), (uvec2(44083u, 184290u)) | (_GLF_IDENTITY(uvec2(44083u, 184290u), (uvec2(44083u, 184290u)) << uvec2(0u, 0u))))))
              {
               for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
                {
                 determinant((- mat2(-3.3, 7.0, -9.5, 6281.8053)));
                }
               do
                {
                 do
                  {
                   for(int _injected_loop_counter = int(_GLF_ZERO(0.0, injectionSwitch.x)); _GLF_WRAPPED_LOOP(_injected_loop_counter != (0 ^ 1)); _injected_loop_counter ++)
                    {
                     ((- _GLF_SWITCH_0_27v) + 39565).tppt;
                    }
                  }
                 while(_GLF_WRAPPED_LOOP(false));
                }
               while(_GLF_WRAPPED_LOOP(false));
               if(_GLF_WRAPPED_IF_FALSE(false))
                {
                }
               else
                {
                 vec2(-88.22, 13.29);
                }
               if(_GLF_DEAD(false))
                barrier();
               if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
                {
                 fract(vec2(-1.8));
                }
               else
                {
                }
               do
                {
                 switch(_GLF_SWITCH(_GLF_IDENTITY((1 ^ 1), ((1 ^ 1)) | ((1 ^ 1)))))
                  {
                   case 95:
                   vec4 _GLF_SWITCH_2_0v, _GLF_SWITCH_2_1v;
                   case 5:
                   bvec2(false, false).r;
                   case 0:
                   case 57:
                   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                    barrier();
                   (mat4(-3.2, 6.1, -468.766, 5.4, -4351.0286, -295.953, -1.8, 45.33, -0.1, 25.94, _GLF_IDENTITY(-74.86, min(-74.86, -74.86)), 623.211, 7.1, 7.9, -199.282, -4885.5761));
                   break;
                   case 62:
                   int _GLF_SWITCH_2_2v, _GLF_SWITCH_2_3v, _GLF_SWITCH_2_4v;
                   case 6:
                   mat2(_GLF_IDENTITY(7.3, min(7.3, _GLF_IDENTITY(7.3, (false ? _GLF_FUZZED(3.7) : 7.3)))), -6.1, -9.3, -244.553);
                   default:
                   if(_GLF_WRAPPED_IF_TRUE(true))
                    {
                     1;
                    }
                   else
                    {
                    }
                  }
                }
               while(_GLF_WRAPPED_LOOP(false));
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                barrier();
               ivec2 _GLF_SWITCH_0_33v[37];
               uvec2 _GLF_SWITCH_0_34v[36], _GLF_SWITCH_0_35v;
              }
             else
              {
               do
                {
                 for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != _GLF_IDENTITY(((1 << _GLF_IDENTITY(int(1), int(1))) >> _GLF_IDENTITY(_GLF_IDENTITY(int(1), int(1)), (_GLF_IDENTITY(_GLF_IDENTITY(int(1), int(1)), max(_GLF_IDENTITY(_GLF_IDENTITY(int(1), int(1)), (_GLF_IDENTITY(int(1), int(1))) << 0), _GLF_IDENTITY(int(1), int(1))))) | (_GLF_IDENTITY(int(_GLF_IDENTITY(1, int(_GLF_IDENTITY(int(1), max(int(1), int(1)))))), int(1))))), max(((1 << _GLF_IDENTITY(int(1), int(1))) >> _GLF_IDENTITY(_GLF_IDENTITY(int(1), int(1)), (_GLF_IDENTITY(_GLF_IDENTITY(int(1), int(1)), max(_GLF_IDENTITY(_GLF_IDENTITY(int(1), int(1)), (_GLF_IDENTITY(int(1), int(1))) << 0), _GLF_IDENTITY(int(1), int(1))))) | (_GLF_IDENTITY(int(_GLF_IDENTITY(1, int(_GLF_IDENTITY(int(1), max(int(1), int(1)))))), int(1))))), ((1 << _GLF_IDENTITY(int(1), int(1))) >> _GLF_IDENTITY(_GLF_IDENTITY(int(1), int(1)), (_GLF_IDENTITY(_GLF_IDENTITY(int(1), int(1)), max(_GLF_IDENTITY(_GLF_IDENTITY(int(1), int(1)), (_GLF_IDENTITY(int(1), int(1))) << 0), _GLF_IDENTITY(int(1), int(1))))) | (_GLF_IDENTITY(int(_GLF_IDENTITY(1, int(_GLF_IDENTITY(int(1), max(int(1), int(1)))))), int(1)))))))); _injected_loop_counter ++)
                  {
                   do
                    {
                     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                      barrier();
                    }
                   while(_GLF_WRAPPED_LOOP(false));
                  }
                }
               while(_GLF_WRAPPED_LOOP(false));
               do
                {
                 49881;
                 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
                  barrier();
                }
               while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
               mat4 _GLF_SWITCH_0_36v, _GLF_SWITCH_0_37v;
              }
             ((virtual_gid / 179598u) % uvec2(40931u, 68355u));
             for(             greaterThan((vec3(408.528, _GLF_IDENTITY(88.93, (88.93) - 0.0), _GLF_IDENTITY(16.18, min(16.18, 16.18)))), (mat4x3(-4.7, -94.38, 6.3, 295.711, -99.86, -3.2, 0.0, -61.91, _GLF_IDENTITY(-2.3, _GLF_IDENTITY(float(float(-2.3)), min(float(float(-2.3)), float(float(-2.3))))), -9.5, 3.1, 0.2) * vec4(-33.99, -8179.7704, 4.2, 9.1)));
 lessThanEqual(ivec3(-9884, 24472, 11958), _GLF_IDENTITY(ivec3(-89174, 52051, 31016), (ivec3(-89174, 52051, 31016)) ^ ivec3(0, 0, 0))).s; mat4x3(83.47, 26.35, -9.5, 3.5, 4.6, -4.3, -98.34, 5.5, 397.210, 0.9, 7736.4264, -100.277))
              {
               if(_GLF_DEAD(false))
                barrier();
               mat3x4 _GLF_SWITCH_0_38v[60], _GLF_SWITCH_0_39v;
               vec4 _GLF_SWITCH_0_40v[60];
               if(_GLF_DEAD(false))
                barrier();
               (ivec4(-45675, -70598, _GLF_IDENTITY(-82711, min(-82711, -82711)), -80285) | ivec4(71492, 74315, 95226, -81163));
              }
             if(_GLF_WRAPPED_IF_TRUE(true))
              {
               bool _GLF_SWITCH_0_41v, _GLF_SWITCH_0_42v, _GLF_SWITCH_0_43v;
               GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_12next_virtual_gidnum_workgroupsubgroup_idworkgroup_id;
               uvec2 _GLF_SWITCH_0_44v[10];
              }
             else
              {
              }
             float _GLF_SWITCH_0_45v, _GLF_SWITCH_0_46v, _GLF_SWITCH_0_47v;
             float _GLF_SWITCH_0_48v, _GLF_SWITCH_0_49v[87];
             for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > _GLF_IDENTITY(0, int(ivec3(0, int(_GLF_ONE(1.0, injectionSwitch.y)), 1)))); _injected_loop_counter --)
              {
               if(_GLF_DEAD(false))
                barrier();
              }
            }
            ivec2(58774, 74515);
            mat3x2 _GLF_SWITCH_0_50v, _GLF_SWITCH_0_51v, _GLF_SWITCH_0_52v[73];
            {
             if(_GLF_DEAD(false))
              barrier();
            }
            if((0.1 > -36.07))
             {
              vec4(6.2, -8.3, 61.85, 852.990);
              while(_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bool(true)), (bool(bool(true))) && true)))
               {
                switch(_GLF_SWITCH(0))
                 {
                  case 28:
                  mat2x4 _GLF_SWITCH_3_0v[80];
                  case 0:
                  bvec4 _GLF_SWITCH_0_53v, _GLF_SWITCH_0_54v[70];
                  if(_GLF_DEAD(false))
                   {
                    switch(_GLF_SWITCH(0))
                     {
                      case 7:
                      if(_GLF_DEAD(false))
                       barrier();
                      (false ? mat2x4(-2.7, -73.04, 84.81, -0.6, -9611.6153, 26.46, 319.486, 73.86) : mat2x4(7.7, 273.728, 4.7, -62.52, -3.2, _GLF_IDENTITY(-934.088, (_GLF_IDENTITY(false, bool(bool(false))) ? _GLF_FUZZED((99.76 + -3.5)) : -934.088)), -629.554, 7.5));
                      if(_GLF_DEAD(false))
                       barrier();
                      case 0:
                      if(_GLF_DEAD(false))
                       barrier();
                      case 60:
                      case 80:
                      case 1:
                      case 49:
                      case 63:
                      case 62:
                      case 30:
                      case 56:
                      if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                       barrier();
                      case 5:
                      do
                       {
                        barrier();
                       }
                      while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(false, true && (false)), false, true)), (bool(bvec3(_GLF_IDENTITY(false, _GLF_IDENTITY(true, (true) && true) && (false)), false, true))) && true))));
                      break;
                      case 36:
                      ivec2 _GLF_SWITCH_2_0v[15], _GLF_SWITCH_2_1v;
                      default:
                      1;
                      if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                       barrier();
                     }
                   }
                  case 8:
                  case 43:
                  case 47:
                  case 24:
                  vec3(floor(-905.112), (abs(vec4(313.179, -322.173, -2316.4089, 1.4)) * mat2x4(1385.6660, 646.733, 45.22, 0.2, 9700.7642, 8.5, 616.312, 8.6)));
                  if(_GLF_DEAD(false))
                   barrier();
                  case 29:
                  if(_GLF_DEAD(false))
                   barrier();
                  case 98:
                  case 99:
                  ivec2 _GLF_SWITCH_0_55v[75], _GLF_SWITCH_0_56v, _GLF_SWITCH_0_57v[85];
                  do
                   {
                    do
                     {
                      do
                       {
                        if(_GLF_DEAD(false))
                         {
                          for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != int(_GLF_ONE(1.0, injectionSwitch.y))); _injected_loop_counter ++)
                           {
                            barrier();
                           }
                         }
                        if(_GLF_DEAD(false))
                         {
                          if(_GLF_WRAPPED_IF_FALSE(false))
                           {
                           }
                          else
                           {
                            barrier();
                           }
                         }
                        if(_GLF_DEAD(false))
                         {
                          if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
                           {
                            barrier();
                           }
                          else
                           {
                           }
                         }
                        (GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_12next_virtual_gidnum_workgroupsubgroup_idworkgroup_id | subgroup_local_id);
                       }
                      while(_GLF_WRAPPED_LOOP(false));
                     }
                    while(_GLF_WRAPPED_LOOP(false));
                    if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                     barrier();
                   }
                  while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
                  mat3x4 _GLF_SWITCH_0_58v[10], _GLF_SWITCH_0_59v[5];
                  break;
                  case 91:
                  ivec2 _GLF_SWITCH_3_1v, _GLF_SWITCH_3_2v, _GLF_SWITCH_3_3v[25];
                  case 39:
                  if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
                   barrier();
                  mat2x4(mat2x3(-1.5, 7.3, -1.3, -0.4, -93.00, -256.227));
                  default:
                  1;
                 }
               }
              if(_GLF_WRAPPED_IF_FALSE(false))
               {
                if(_GLF_DEAD(false))
                 barrier();
               }
              else
               {
                _GLF_IDENTITY(ivec3(36948, -85509, 90814), (ivec3(36948, -85509, 90814)) >> ivec3(0, 0, 0));
               }
             }
            else
             {
              uint _GLF_SWITCH_0_60v, _GLF_SWITCH_0_61v[13];
              if(_GLF_DEAD(false))
               barrier();
              float _GLF_SWITCH_0_62v[24];
              if(_GLF_DEAD(false))
               barrier();
              _GLF_IDENTITY(lessThanEqual(uvec3(96799u, 106259u, 106982u), uvec3(116005u, _GLF_IDENTITY(29326u, (29326u) | (_GLF_IDENTITY(29326u, ~ (~ (29326u))))), 87449u)).yz, bvec2(bvec4(_GLF_IDENTITY(lessThanEqual(uvec3(96799u, 106259u, 106982u), uvec3(116005u, _GLF_IDENTITY(29326u, (29326u) | (_GLF_IDENTITY(_GLF_IDENTITY(29326u, ~ (~ (29326u))), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(29326u, ~ (~ (29326u)))), 0u | (~ (_GLF_IDENTITY(29326u, ~ (~ (29326u)))))))))), 87449u)).yz, _GLF_IDENTITY(bvec2(bvec2(lessThanEqual(uvec3(96799u, 106259u, 106982u), uvec3(116005u, _GLF_IDENTITY(29326u, (29326u) | (_GLF_IDENTITY(29326u, ~ (~ (29326u))))), 87449u)).yz)), bvec2(bvec4(bvec2(bvec2(lessThanEqual(uvec3(96799u, 106259u, 106982u), uvec3(116005u, _GLF_IDENTITY(29326u, (29326u) | (_GLF_IDENTITY(29326u, ~ (~ (29326u))))), 87449u)).yz)), true, false)))), false, true)));
              while((bvec2(false, false) != bvec2(false, true)))
               {
                for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != (0 | 0)); _injected_loop_counter --)
                 {
                  if(_GLF_DEAD(false))
                   barrier();
                  if(_GLF_WRAPPED_IF_FALSE(false))
                   {
                   }
                  else
                   {
                    switch(_GLF_SWITCH((0 | 0)))
                     {
                      case 55:
                      uvec2 _GLF_SWITCH_1_0v, _GLF_SWITCH_1_1v, _GLF_SWITCH_1_2v[96];
                      case 7:
                      vec3 _GLF_SWITCH_1_3v, _GLF_SWITCH_1_4v, _GLF_SWITCH_1_5v[45];
                      if(_GLF_DEAD(false))
                       barrier();
                      case 0:
                      if(_GLF_DEAD(false))
                       barrier();
                      do
                       {
                        bvec4((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_SWITCH_0_27v, (ivec3(0, 0, 0) ^ ivec3(0, 0, 0)) + (_GLF_SWITCH_0_27v)) == _GLF_SWITCH_0_27v, bool(bool(_GLF_SWITCH_0_27v == _GLF_SWITCH_0_27v)))), false, false, false);
                       }
                      while(_GLF_WRAPPED_LOOP(false));
                      do
                       {
                        vec4(-870.565, 239.973, -28.53, 1.3);
                       }
                      while(_GLF_WRAPPED_LOOP(false));
                      vec3 _GLF_SWITCH_0_63v, _GLF_SWITCH_0_64v;
                      uint _GLF_SWITCH_0_65v[73];
                      int _GLF_SWITCH_0_66v[47];
                      case 63:
                      if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                       {
                        for(int _injected_loop_counter = ((int(_GLF_ONE(1.0, injectionSwitch.y)) << _GLF_IDENTITY(int(1), _GLF_IDENTITY(int(1), min(int(1), int(1))))) >> _GLF_IDENTITY(int(1), int(1))); _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
                         {
                          barrier();
                          if(_GLF_DEAD(false))
                           barrier();
                         }
                       }
                      if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, (false) || false)), ! (! (bool(_GLF_IDENTITY(false, _GLF_IDENTITY((false), ! (! (_GLF_IDENTITY((false), (_GLF_IDENTITY((false), ! (! ((false))))) || false)))) || false)))))))))
                       barrier();
                      ;
                      if(_GLF_DEAD(false))
                       barrier();
                      case 70:
                      ((+ _GLF_IDENTITY(uvec4(13304u, 139196u, 198126u, 132636u), (uvec4(13304u, 139196u, 198126u, 132636u)) | (_GLF_IDENTITY(uvec4(13304u, 139196u, 198126u, 132636u), max(uvec4(13304u, 139196u, 198126u, 132636u), uvec4(13304u, 139196u, 198126u, 132636u)))))) | bitfieldInsert(GLF_merged4_0_1_13_1_1_11_2_1_13_3_1_14num_workgroupsubgroup_idsubgroup_sizeworkgroup_base.w, _GLF_SWITCH_0_60v, 19282, 64931));
                      case 74:
                      for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
                       {
                        if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                         {
                          if(_GLF_WRAPPED_IF_FALSE(false))
                           {
                           }
                          else
                           {
                            barrier();
                           }
                         }
                       }
                      if(_GLF_DEAD(false))
                       barrier();
                      -4598.9453;
                      mat2x3 _GLF_SWITCH_0_67v;
                      break;
                      if(_GLF_DEAD(false))
                       barrier();
                      if(_GLF_WRAPPED_IF_FALSE(false))
                       {
                       }
                      else
                       {
                        if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                         barrier();
                       }
                      default:
                      if(_GLF_DEAD(false))
                       barrier();
                      if(_GLF_DEAD(false))
                       {
                        do
                         {
                          barrier();
                         }
                        while(_GLF_WRAPPED_LOOP(false));
                        for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
                         {
                          if(_GLF_DEAD(false))
                           {
                            if(_GLF_WRAPPED_IF_FALSE(false))
                             {
                             }
                            else
                             {
                              barrier();
                             }
                           }
                         }
                       }
                      1;
                      if(_GLF_WRAPPED_IF_TRUE(true))
                       {
                        if(_GLF_DEAD(false))
                         barrier();
                       }
                      else
                       {
                       }
                     }
                   }
                 }
                if(_GLF_DEAD(false))
                 {
                  if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
                   {
                    barrier();
                   }
                  else
                   {
                   }
                 }
                if(_GLF_DEAD(false))
                 barrier();
               }
             }
           }
           for(int _injected_loop_counter = int(_GLF_ZERO(0.0, injectionSwitch.x)); _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
            {
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              barrier();
            }
           case 10:
           mat2x3 _GLF_SWITCH_0_68v[22], _GLF_SWITCH_0_69v;
           if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, (true) && true)))
            {
             if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, bool(bool(false))))), (false) && true)))
              barrier();
            }
           else
            {
            }
           default:
           if(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), false || (_GLF_WRAPPED_IF_TRUE(true))))
            {
             1;
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              barrier();
            }
           else
            {
             for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
              {
               if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, false, true)))))
                barrier();
              }
            }
          }
        }
       else
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if(_GLF_WRAPPED_IF_TRUE(true))
          {
           switch(_GLF_SWITCH((0 >> _GLF_IDENTITY(int(5), _GLF_IDENTITY(int(5), (int(_GLF_IDENTITY(5, (5) ^ 0))) / ((1 << _GLF_IDENTITY(int(4), int(4))) >> _GLF_IDENTITY(int(4), int(4))))))))
            {
             case 92:
             GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_12next_virtual_gidnum_workgroupsubgroup_idworkgroup_id;
             case 6:
             (workgroup_size % next_virtual_gid);
             case 0:
             if(_GLF_WRAPPED_IF_FALSE(false))
              {
               if(_GLF_DEAD(false))
                barrier();
               if(_GLF_DEAD(false))
                barrier();
              }
             else
              {
               if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
                barrier();
               atomicStore(buf[_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_12next_virtual_gidnum_workgroupsubgroup_idworkgroup_id, min(_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_12next_virtual_gidnum_workgroupsubgroup_idworkgroup_id, (false ? _GLF_FUZZED(mix(uvec4(44704u, 32319u, 106114u, 2830u), uvec4(193614u, 69927u, 147873u, 28244u), bvec4(false, false, false, true))) : GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_12next_virtual_gidnum_workgroupsubgroup_idworkgroup_id)), _GLF_IDENTITY(GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_12next_virtual_gidnum_workgroupsubgroup_idworkgroup_id, uvec4(GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_12next_virtual_gidnum_workgroupsubgroup_idworkgroup_id[0], GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_12next_virtual_gidnum_workgroupsubgroup_idworkgroup_id[1], GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_12next_virtual_gidnum_workgroupsubgroup_idworkgroup_id[2], GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_12next_virtual_gidnum_workgroupsubgroup_idworkgroup_id[3])))).x], uint(2), 4, 64, 4);
              }
             if(_GLF_DEAD(false))
              barrier();
             case 28:
             if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
              {
               if(_GLF_WRAPPED_IF_TRUE(true))
                {
                 barrier();
                }
               else
                {
                }
              }
             case 8:
             case 52:
             if(_GLF_DEAD(false))
              {
               if(_GLF_WRAPPED_IF_TRUE(true))
                {
                 barrier();
                }
               else
                {
                }
              }
             if(_GLF_DEAD(false))
              barrier();
             break;
             default:
             1;
             if(_GLF_DEAD(false))
              barrier();
            }
          }
         else
          {
          }
         subgroupAll(true);
        }
      }
    }
  }
 while(_GLF_WRAPPED_LOOP(false));
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + 0.0)))), bool(bvec4(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + 0.0)))), false, true, false))))
  {
   switch(_GLF_SWITCH((0 & (77025 | -60070))))
    {
     case 68:
     if(_GLF_DEAD(false))
      barrier();
     mat2x4 _GLF_SWITCH_3_0v, _GLF_SWITCH_3_1v[4], _GLF_SWITCH_3_2v[43];
     if(_GLF_DEAD(false))
      barrier();
     case 0:
     case 79:
     if(_GLF_DEAD(false))
      barrier();
     case 71:
     case 56:
     for(int _injected_loop_counter = ((-87910 & 0) >> _GLF_IDENTITY(int(0), int(0))); _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
      {
       if(_GLF_DEAD(false))
        barrier();
      }
     case 17:
     case 46:
     if(_GLF_DEAD(false))
      barrier();
     case 10:
     case 5:
     case 65:
     if(_GLF_WRAPPED_IF_TRUE(true))
      {
       do
        {
         if(_GLF_DEAD(false))
          barrier();
         for(int _injected_loop_counter = int(_GLF_ONE(1.0, injectionSwitch.y)); _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
          {
           if(_GLF_DEAD(false))
            {
             for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > int(_GLF_ZERO(0.0, injectionSwitch.x))); _injected_loop_counter --)
              {
               barrier();
              }
            }
           if(_GLF_WRAPPED_IF_TRUE(true))
            {
             if(_GLF_DEAD(false))
              {
               for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
                {
                 barrier();
                 if(_GLF_DEAD(false))
                  {
                   if(_GLF_WRAPPED_IF_FALSE(false))
                    {
                    }
                   else
                    {
                     barrier();
                    }
                  }
                }
              }
            }
           else
            {
            }
           do
            {
             switch(_GLF_SWITCH(0))
              {
               case 0:
               if(_GLF_DEAD(false))
                barrier();
               case 22:
               case 88:
               case 34:
               barrier();
               break;
               case 35:
               do
                {
                 (ivec3(-17327, -87408, 95942) ^ ivec3(-64645, 88272, _GLF_IDENTITY(54865, (_GLF_IDENTITY(54865, (54865) | (1 ^ 1))) << 0)));
                }
               while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
               default:
               1;
               if(_GLF_DEAD(false))
                {
                 if(_GLF_WRAPPED_IF_FALSE(false))
                  {
                  }
                 else
                  {
                   barrier();
                  }
                }
              }
            }
           while(_GLF_WRAPPED_LOOP(false));
          }
        }
       while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, true && (false))));
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
        {
         if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(bvec3(_GLF_IDENTITY(! (false), ! (! (! (false)))), true, true))))), (_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(56.86))) > injectionSwitch.y))))
          barrier();
        }
       else
        {
        }
       if(_GLF_WRAPPED_IF_TRUE(true))
        {
         if(_GLF_DEAD(false))
          barrier();
        }
       else
        {
        }
      }
     else
      {
      }
     break;
     case 45:
     for(int _injected_loop_counter = int(_GLF_ONE(1.0, injectionSwitch.y)); _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
      {
       true;
      }
     default:
     1;
    }
  }
}
