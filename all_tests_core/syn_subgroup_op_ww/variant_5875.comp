#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, true, _GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! (false)))))), true && (_GLF_IDENTITY(false, ! (! (false))))), true)), bool(bvec3(_GLF_IDENTITY(bool(bvec4(false, true, false, true)), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(bvec4(false, true, false, true)), ! _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(bool(bvec4(false, true, false, true)), (bool(bvec4(false, true, false, true))) && true)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(! (_GLF_IDENTITY(bool(bvec4(false, true, false, true)), _GLF_IDENTITY((bool(bvec4(false, true, false, true))), ! (! ((bool(bvec4(false, true, false, true)))))) && true)), (! (_GLF_IDENTITY(bool(bvec4(false, true, false, true)), (bool(bvec4(false, _GLF_IDENTITY(true, (true) || false), false, true))) && true))) || false)), false || (! (_GLF_IDENTITY(! (_GLF_IDENTITY(bool(bvec4(false, true, false, true)), (_GLF_IDENTITY(bool(bvec4(false, true, _GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, ! (! (false))))), true)), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).x > injectionSwitch.y)) || (bool(bvec4(false, true, _GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), _GLF_IDENTITY(bool(bvec2(! (! (false)), false)), false || (bool(bvec2(! (! (false)), false)))))))), true))))) && true)), (! (_GLF_IDENTITY(bool(bvec4(false, true, false, true)), (bool(bvec4(false, true, false, true))) && true))) || false)))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(! (_GLF_IDENTITY(bool(bvec4(false, true, false, true)), (bool(bvec4(false, true, false, true))) && true)), (! (_GLF_IDENTITY(bool(bvec4(false, true, false, true)), (bool(bvec4(false, true, false, true))) && true))) && true)))), true && ((_GLF_IDENTITY(! (_GLF_IDENTITY(bool(bvec4(false, true, false, true)), (bool(bvec4(false, true, false, true))) && true)), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(mat2x4(injectionSwitch, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0))).x > injectionSwitch.y)) || (_GLF_IDENTITY(! (_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(false, (false) && true), true, false, true)), (bool(bvec4(false, true, false, true))) && true)), (! (_GLF_IDENTITY(bool(bvec4(false, true, false, true)), _GLF_IDENTITY((bool(bvec4(false, true, false, true))), ! (_GLF_IDENTITY(! ((bool(bvec4(false, true, false, _GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, (true) || false))))))), (! ((bool(bvec4(false, true, false, true))))) && true))) && true))) && true)))))), (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec4(false, true, false, true)), (bool(bvec4(false, true, false, true))) && true), ! (! (_GLF_IDENTITY(bool(bvec4(false, true, false, true)), (bool(bvec4(false, true, false, true))) && true))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(! (_GLF_IDENTITY(bool(bvec4(false, true, false, true)), (bool(bvec4(false, true, false, true))) && true)), (! (_GLF_IDENTITY(bool(bvec4(false, true, false, true)), (bool(bvec4(false, _GLF_IDENTITY(true, (true) || false), false, true))) && true))) || false)), false || (! (_GLF_IDENTITY(! (_GLF_IDENTITY(bool(bvec4(false, true, false, true)), (_GLF_IDENTITY(bool(bvec4(false, true, _GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, ! (! (false))))), true)), _GLF_FALSE(_GLF_IDENTITY(false, false || (false)), (injectionSwitch.x > injectionSwitch.y)) || (bool(bvec4(false, true, _GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, ! (! (false))))), true))))) && true)), (! (_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec4(false, true, false, true)), true && (bool(bvec4(false, true, false, true)))), (bool(bvec4(false, true, false, true))) && true))) || false)))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(! (_GLF_IDENTITY(bool(bvec4(false, true, false, true)), (bool(bvec4(false, true, false, true))) && true)), (! (_GLF_IDENTITY(bool(bvec4(false, true, false, true)), (bool(bvec4(false, true, false, true))) && true))) && true)))), true && ((_GLF_IDENTITY(! (_GLF_IDENTITY(bool(bvec4(false, true, false, true)), (bool(bvec4(false, true, false, true))) && true)), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(mat2x4(injectionSwitch, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0))).x > injectionSwitch.y)) || (_GLF_IDENTITY(! (_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(false, (false) && true), true, false, true)), (bool(bvec4(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, false, false)), bool(bool(bool(bvec3(false, false, false)))))), true, false, true))) && true)), (! (_GLF_IDENTITY(bool(bvec4(false, true, false, true)), _GLF_IDENTITY((bool(bvec4(false, true, false, true))), ! (_GLF_IDENTITY(! ((bool(bvec4(false, true, false, true)))), (! ((bool(bvec4(false, true, false, true))))) && true))) && true))) && true))))))) || false))), ! (! (bool(bool(bvec4(false, true, _GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, true && (false))))), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, false || (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) < injectionSwitch.y)))) && _GLF_IDENTITY((false), _GLF_IDENTITY(false, (false) && true) || (_GLF_IDENTITY((false), (_GLF_IDENTITY((false), ((false)) && true)) && _GLF_IDENTITY(_GLF_IDENTITY(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (true)), (_GLF_IDENTITY(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (true))) || false))))), true)))))))), true, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(866.768))))) < injectionSwitch.y))))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))
  barrier();
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 uint num_workgroup = gl_NumWorkGroups.x;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint workgroup_size = gl_WorkGroupSize.x;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y))))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 uint workgroup_id = gl_WorkGroupID.x;
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(false, false || (false)) || (false)), (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint workgroup_base = workgroup_size * _GLF_IDENTITY(workgroup_id, (true ? workgroup_id : _GLF_FUZZED(workgroup_size)));
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(bool(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x > injectionSwitch.y), ! (! (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x > injectionSwitch.y), bool(bvec2((_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x > injectionSwitch.y), true))))))))), _GLF_IDENTITY(_GLF_IDENTITY((bool(bool(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), false || ((bool(bool(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false)))))))), bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY((bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY((bool(bool(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(3.5))), _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, float(mat2x4(injectionSwitch.y, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0))))))))), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), true && ((bool(bool(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))), false || ((bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), false))) || _GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY((false), ! (! ((false)))) || false, (_GLF_IDENTITY((false), ! (! ((false)))) || false) || false))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! (! (false)))), ! (_GLF_IDENTITY(! (! (_GLF_IDENTITY(false, ! (! (false))))), bool(bvec4(! (! (_GLF_IDENTITY(false, ! (! (false))))), false, true, false)))))))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint virtual_gid = workgroup_base + subgroup_id * subgroup_size + subgroup_local_id;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(false, false, true), bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(bvec3(false, false, true)), bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec3(false, false, true)), bvec3(bvec4(bvec3(bvec3(false, false, true)), true)))))), bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec3(false, false, true)), bvec3(_GLF_IDENTITY(bvec3(bvec3(bvec3(false, false, true))), _GLF_IDENTITY(bvec3(bvec4(bvec3(bvec3(bvec3(false, false, true))), true)), bvec3(_GLF_IDENTITY(bvec3(bvec3(bvec4(bvec3(bvec3(bvec3(false, false, true))), true))), bvec3(bvec3(bvec3(bvec3(bvec4(bvec3(bvec3(bvec3(false, false, true))), true))))))))))), true))))), _GLF_IDENTITY(bvec3(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, false || (false)), false, true), _GLF_IDENTITY(bvec3(bvec3(bvec3(false, false, true))), bvec3(bvec3(bvec3(bvec3(bvec3(false, false, true))))))), bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, false || (false)), false, true), _GLF_IDENTITY(bvec3(bvec3(bvec3(false, false, true))), bvec3(bvec3(bvec3(bvec3(bvec3(false, false, true)))))))), _GLF_IDENTITY(bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, false || (false)), false, true), _GLF_IDENTITY(bvec3(bvec3(bvec3(false, false, true))), bvec3(bvec3(bvec3(bvec3(bvec3(false, false, true)))))))), bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, false || (false)), false, true), _GLF_IDENTITY(bvec3(bvec3(bvec3(false, false, true))), bvec3(bvec3(bvec3(bvec3(bvec3(false, false, true))))))))))), true)), bvec3(bvec3(bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, false || (false)), false, true), _GLF_IDENTITY(bvec3(bvec3(bvec3(false, false, true))), bvec3(bvec3(bvec3(bvec3(bvec3(false, false, true)))))))), bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, false || (false)), false, true), _GLF_IDENTITY(bvec3(bvec3(bvec3(false, false, true))), bvec3(bvec3(bvec3(bvec3(bvec3(false, false, true))))))))))), true)))))))), true)), bvec3(_GLF_IDENTITY(bvec3(bvec3(bvec4(_GLF_IDENTITY(bvec3(false, false, true), _GLF_IDENTITY(bvec3(bvec3(bvec3(false, false, true))), bvec3(bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec3(false, false, true), _GLF_IDENTITY(bvec3(bvec4(_GLF_IDENTITY(bvec3(false, false, true), _GLF_IDENTITY(bvec3(bvec4(bvec3(false, false, true), true)), bvec3(bvec4(bvec3(bvec4(bvec3(false, false, true), true)), true)))), false)), bvec3(bvec4(bvec3(bvec4(bvec3(false, false, true), false)), false)))))))))), true))), bvec3(bvec3(bvec3(bvec3(bvec4(_GLF_IDENTITY(bvec3(false, false, true), _GLF_IDENTITY(bvec3(bvec3(bvec3(false, false, true))), bvec3(bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec3(false, false, true), _GLF_IDENTITY(bvec3(bvec4(_GLF_IDENTITY(bvec3(false, false, true), _GLF_IDENTITY(bvec3(bvec4(bvec3(false, false, true), true)), bvec3(bvec4(bvec3(bvec4(bvec3(false, false, true), true)), true)))), false)), bvec3(bvec4(bvec3(bvec4(bvec3(false, false, true), false)), false)))))))))), true))))))))))), _GLF_IDENTITY((_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, false, true), _GLF_IDENTITY(bvec3(bvec4(_GLF_IDENTITY(bvec3(false, _GLF_IDENTITY(false, (_GLF_IDENTITY(false, true && (false))) || false), true), _GLF_IDENTITY(bvec3(bvec3(bvec3(false, false, true))), bvec3(bvec3(bvec3(bvec3(bvec3(false, false, true))))))), true)), bvec3(bvec3(bvec3(bvec4(_GLF_IDENTITY(bvec3(false, false, true), _GLF_IDENTITY(bvec3(bvec3(bvec3(false, false, true))), bvec3(bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec3(false, false, true), _GLF_IDENTITY(bvec3(bvec4(bvec3(false, false, true), false)), bvec3(bvec4(bvec3(bvec4(bvec3(false, false, true), false)), false)))))))))), true))))))))) || false, true && (_GLF_IDENTITY((_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(false, false, true), _GLF_IDENTITY(bvec3(bvec4(_GLF_IDENTITY(bvec3(false, false, true), _GLF_IDENTITY(bvec3(bvec3(bvec3(false, false, true))), bvec3(bvec3(bvec3(bvec3(bvec3(false, false, _GLF_IDENTITY(true, (true) || false)))))))), true)), bvec3(bvec3(bvec3(bvec4(_GLF_IDENTITY(bvec3(false, false, true), _GLF_IDENTITY(bvec3(bvec3(bvec3(false, false, true))), bvec3(bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec3(false, false, true), _GLF_IDENTITY(bvec3(bvec4(bvec3(false, false, true), false)), bvec3(bvec4(bvec3(bvec4(bvec3(false, false, true), false)), false)))))))))), true))))))), bool(bool(bool(_GLF_IDENTITY(bvec3(false, false, true), _GLF_IDENTITY(bvec3(bvec4(_GLF_IDENTITY(bvec3(false, false, true), _GLF_IDENTITY(bvec3(bvec3(bvec3(false, false, true))), bvec3(bvec3(bvec3(bvec3(bvec3(false, false, _GLF_IDENTITY(true, (true) || false)))))))), true)), bvec3(bvec3(bvec3(bvec4(_GLF_IDENTITY(bvec3(false, false, true), _GLF_IDENTITY(bvec3(bvec3(bvec3(false, false, true))), bvec3(bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec3(false, false, true), _GLF_IDENTITY(bvec3(bvec4(bvec3(false, false, true), false)), bvec3(bvec4(bvec3(bvec4(bvec3(false, false, true), false)), false)))))))))), true)))))))))))) || false, bool(bool((_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, false, true), _GLF_IDENTITY(bvec3(bvec4(_GLF_IDENTITY(bvec3(false, false, true), _GLF_IDENTITY(bvec3(bvec3(bvec3(false, false, true))), bvec3(bvec3(bvec3(bvec3(bvec3(false, false, true))))))), true)), bvec3(bvec3(bvec3(bvec4(_GLF_IDENTITY(bvec3(false, false, true), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(bvec3(bvec3(false, false, true))), bvec3(bvec4(bvec3(bvec3(bvec3(false, false, true))), false))), bvec3(bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec3(false, false, true), _GLF_IDENTITY(bvec3(bvec4(bvec3(false, false, true), false)), bvec3(bvec4(bvec3(bvec4(bvec3(false, false, true), false)), false))))))))), _GLF_IDENTITY(bvec3(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(bvec3(bvec3(false, false, true))), bvec3(bvec4(bvec3(bvec3(bvec3(false, false, true))), false))), bvec3(bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec3(false, false, true), _GLF_IDENTITY(bvec3(bvec4(bvec3(false, false, true), false)), bvec3(bvec4(bvec3(bvec4(bvec3(false, false, true), false)), false))))))))), bvec3(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(bvec3(bvec3(false, false, true))), bvec3(bvec4(bvec3(bvec3(bvec3(false, false, true))), false))), bvec3(bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec3(false, false, true), _GLF_IDENTITY(bvec3(bvec4(bvec3(false, false, true), false)), bvec3(bvec4(bvec3(bvec4(bvec3(false, false, true), false)), false)))))))))))), false)), bvec3(bvec3(bvec3(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(bvec3(bvec3(false, false, true))), bvec3(bvec4(bvec3(bvec3(bvec3(false, false, true))), false))), bvec3(bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec3(false, false, true), _GLF_IDENTITY(bvec3(bvec4(bvec3(false, false, true), false)), bvec3(bvec4(bvec3(bvec4(bvec3(false, false, true), false)), false))))))))), bvec3(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(bvec3(bvec3(false, false, true))), bvec3(bvec4(bvec3(bvec3(bvec3(false, false, true))), false))), bvec3(bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec3(false, false, true), _GLF_IDENTITY(bvec3(bvec4(bvec3(false, false, true), false)), bvec3(bvec4(bvec3(bvec4(bvec3(false, false, true), false)), false)))))))))))), false))))))), true))))))))) || false))))))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(12.45)), float(injectionSwitch.y), bool(true)))))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bool(bool(bool(bvec3(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y))))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint next_virtual_gid = _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, _GLF_IDENTITY(_GLF_IDENTITY(uint(uvec3(workgroup_base, 1u, 0u)), (uint(uvec3(workgroup_base, 1u, 0u))) | _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(uint(uvec3(_GLF_IDENTITY(workgroup_base, _GLF_IDENTITY((_GLF_IDENTITY(workgroup_base, uint(_GLF_ZERO(0.0, injectionSwitch.x)) + (workgroup_base))), ((_GLF_IDENTITY(workgroup_base, uint(_GLF_ZERO(0.0, injectionSwitch.x)) + (workgroup_base)))) - 0u) | (_GLF_IDENTITY(workgroup_base, (workgroup_base) / 1u))), 1u, 0u)), 0u ^ (uint(uvec3(workgroup_base, 1u, 0u)))), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(uint(uvec3(workgroup_base, 1u, 0u)), 0u ^ (uint(uvec3(_GLF_IDENTITY(workgroup_base, uint(uvec2(workgroup_base, 0u))), 1u, 0u)))), (_GLF_IDENTITY(_GLF_IDENTITY(uint(uvec3(workgroup_base, 1u, 0u)), 0u ^ (uint(uvec3(_GLF_IDENTITY(workgroup_base, uint(uvec2(workgroup_base, 0u))), 1u, 0u)))), uint(uint(_GLF_IDENTITY(uint(uvec3(workgroup_base, 1u, 0u)), 0u ^ (uint(uvec3(_GLF_IDENTITY(workgroup_base, uint(uvec2(workgroup_base, 0u))), 1u, 0u)))))))) | (_GLF_IDENTITY(uint(uvec3(workgroup_base, 1u, 0u)), 0u ^ (uint(uvec3(_GLF_IDENTITY(workgroup_base, uint(uvec2(workgroup_base, 0u))), 1u, 0u))))))), max((_GLF_IDENTITY(_GLF_IDENTITY(uint(uvec3(workgroup_base, 1u, 0u)), 0u ^ (uint(uvec3(_GLF_IDENTITY(workgroup_base, uint(uvec2(workgroup_base, 0u))), _GLF_IDENTITY(1u, (1u) >> 0u), 0u)))), (_GLF_IDENTITY(_GLF_IDENTITY(uint(uvec3(workgroup_base, 1u, 0u)), 0u ^ (uint(uvec3(_GLF_IDENTITY(workgroup_base, _GLF_IDENTITY(uint(uvec2(workgroup_base, 0u)), (uint(uvec2(workgroup_base, 0u))) | (uint(uvec2(workgroup_base, 0u))))), 1u, 0u)))), uint(uint(_GLF_IDENTITY(uint(uvec3(workgroup_base, 1u, 0u)), 0u ^ (uint(uvec3(_GLF_IDENTITY(workgroup_base, uint(uvec2(workgroup_base, 0u))), 1u, 0u)))))))) | (_GLF_IDENTITY(uint(uvec3(workgroup_base, 1u, 0u)), 0u ^ (uint(uvec3(_GLF_IDENTITY(workgroup_base, uint(uvec2(workgroup_base, 0u))), 1u, 0u))))))), (_GLF_IDENTITY(_GLF_IDENTITY(uint(uvec3(workgroup_base, _GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, (1u) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x)))) / 1u), 0u)), 0u ^ (uint(uvec3(_GLF_IDENTITY(workgroup_base, uint(uvec2(workgroup_base, 0u))), 1u, 0u)))), (_GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(uvec3(workgroup_base, 1u, 0u), min(uvec3(workgroup_base, 1u, 0u), uvec3(workgroup_base, 1u, 0u)))), 0u ^ (uint(uvec3(_GLF_IDENTITY(workgroup_base, uint(uvec2(workgroup_base, 0u))), 1u, 0u)))), _GLF_IDENTITY(uint(uint(_GLF_IDENTITY(uint(uvec3(workgroup_base, 1u, 0u)), 0u ^ (uint(uvec3(_GLF_IDENTITY(workgroup_base, uint(uvec2(workgroup_base, 0u))), 1u, 0u)))))), max(uint(uint(_GLF_IDENTITY(uint(uvec3(workgroup_base, 1u, 0u)), 0u ^ (uint(uvec3(_GLF_IDENTITY(workgroup_base, uint(uvec2(workgroup_base, 0u))), 1u, 0u)))))), uint(uint(_GLF_IDENTITY(uint(uvec3(workgroup_base, 1u, 0u)), 0u ^ (uint(uvec3(_GLF_IDENTITY(workgroup_base, uint(uvec2(workgroup_base, 0u))), 1u, 0u)))))))))) | (_GLF_IDENTITY(uint(uvec3(workgroup_base, 1u, 0u)), 0u ^ (uint(uvec3(_GLF_IDENTITY(workgroup_base, uint(uvec2(workgroup_base, _GLF_IDENTITY(0u, uint(uvec3(0u, 0u, 1u)))))), 1u, 0u))))))))) >> 0u)), uint(uvec3((_GLF_IDENTITY(uint(uvec3(workgroup_base, 1u, 0u)), 0u ^ (uint(uvec3(_GLF_IDENTITY(workgroup_base, (workgroup_base) - 0u), 1u, 0u))))), 1u, 0u)))), uint(uvec4(_GLF_IDENTITY(uint(uvec3(workgroup_base, 1u, 0u)), (uint(uvec3(workgroup_base, 1u, 0u))) | _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(uint(uvec3(_GLF_IDENTITY(workgroup_base, _GLF_IDENTITY((_GLF_IDENTITY(workgroup_base, uint(_GLF_ZERO(0.0, injectionSwitch.x)) + (workgroup_base))), ((_GLF_IDENTITY(workgroup_base, uint(_GLF_ZERO(0.0, injectionSwitch.x)) + (workgroup_base)))) - 0u) | (_GLF_IDENTITY(workgroup_base, (workgroup_base) / 1u))), 1u, 0u)), 0u ^ (uint(uvec3(workgroup_base, 1u, 0u)))), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(uint(uvec3(workgroup_base, 1u, 0u)), 0u ^ (uint(uvec3(_GLF_IDENTITY(workgroup_base, uint(uvec2(workgroup_base, 0u))), 1u, 0u)))), (_GLF_IDENTITY(_GLF_IDENTITY(uint(uvec3(workgroup_base, 1u, 0u)), 0u ^ (uint(uvec3(_GLF_IDENTITY(workgroup_base, uint(uvec2(workgroup_base, 0u))), 1u, 0u)))), uint(uint(_GLF_IDENTITY(uint(uvec3(workgroup_base, 1u, 0u)), 0u ^ (uint(uvec3(_GLF_IDENTITY(workgroup_base, uint(uvec2(workgroup_base, 0u))), 1u, 0u)))))))) | (_GLF_IDENTITY(uint(uvec3(workgroup_base, 1u, 0u)), 0u ^ (uint(uvec3(_GLF_IDENTITY(workgroup_base, uint(uvec2(workgroup_base, 0u))), 1u, 0u))))))), max((_GLF_IDENTITY(_GLF_IDENTITY(uint(uvec3(workgroup_base, 1u, 0u)), 0u ^ (uint(uvec3(_GLF_IDENTITY(workgroup_base, uint(uvec2(workgroup_base, 0u))), _GLF_IDENTITY(1u, (1u) >> 0u), 0u)))), (_GLF_IDENTITY(_GLF_IDENTITY(uint(uvec3(workgroup_base, 1u, 0u)), 0u ^ (uint(uvec3(_GLF_IDENTITY(workgroup_base, _GLF_IDENTITY(uint(uvec2(workgroup_base, 0u)), (uint(uvec2(workgroup_base, 0u))) | (uint(uvec2(workgroup_base, 0u))))), 1u, 0u)))), uint(uint(_GLF_IDENTITY(uint(uvec3(workgroup_base, 1u, 0u)), 0u ^ (uint(uvec3(_GLF_IDENTITY(workgroup_base, uint(uvec2(workgroup_base, 0u))), 1u, 0u)))))))) | (_GLF_IDENTITY(uint(uvec3(workgroup_base, 1u, 0u)), 0u ^ (uint(uvec3(_GLF_IDENTITY(workgroup_base, uint(uvec2(workgroup_base, 0u))), 1u, 0u))))))), (_GLF_IDENTITY(_GLF_IDENTITY(uint(uvec3(workgroup_base, _GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, (1u) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x)))) / 1u), 0u)), 0u ^ (uint(uvec3(_GLF_IDENTITY(workgroup_base, uint(uvec2(workgroup_base, 0u))), 1u, 0u)))), (_GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(uvec3(workgroup_base, 1u, 0u), min(uvec3(workgroup_base, 1u, 0u), uvec3(workgroup_base, 1u, 0u)))), 0u ^ (uint(uvec3(_GLF_IDENTITY(workgroup_base, uint(uvec2(workgroup_base, 0u))), 1u, 0u)))), _GLF_IDENTITY(uint(uint(_GLF_IDENTITY(uint(uvec3(workgroup_base, 1u, 0u)), 0u ^ (uint(uvec3(_GLF_IDENTITY(workgroup_base, uint(uvec2(workgroup_base, 0u))), 1u, 0u)))))), max(uint(uint(_GLF_IDENTITY(uint(uvec3(workgroup_base, 1u, 0u)), 0u ^ (uint(uvec3(_GLF_IDENTITY(workgroup_base, uint(uvec2(workgroup_base, 0u))), 1u, 0u)))))), uint(uint(_GLF_IDENTITY(uint(uvec3(workgroup_base, 1u, 0u)), 0u ^ (uint(uvec3(_GLF_IDENTITY(workgroup_base, uint(uvec2(workgroup_base, 0u))), 1u, 0u)))))))))) | (_GLF_IDENTITY(uint(uvec3(workgroup_base, 1u, 0u)), 0u ^ (uint(uvec3(_GLF_IDENTITY(workgroup_base, uint(uvec2(workgroup_base, _GLF_IDENTITY(0u, uint(uvec3(0u, 0u, 1u)))))), 1u, 0u))))))))) >> 0u)), uint(uvec3((_GLF_IDENTITY(uint(uvec3(workgroup_base, 1u, 0u)), 0u ^ (uint(uvec3(_GLF_IDENTITY(workgroup_base, (workgroup_base) - 0u), 1u, 0u))))), 1u, 0u)))), 1u, 0u, 0u)))), min(workgroup_base, _GLF_IDENTITY(workgroup_base, _GLF_IDENTITY(uint(_GLF_IDENTITY(uint(_GLF_IDENTITY(workgroup_base, max(workgroup_base, workgroup_base))), _GLF_IDENTITY((_GLF_IDENTITY(uint(workgroup_base), clamp(uint(workgroup_base), _GLF_IDENTITY(uint(workgroup_base), max(uint(workgroup_base), uint(workgroup_base))), _GLF_IDENTITY(uint(workgroup_base), max(uint(workgroup_base), uint(workgroup_base)))))) << 0u, min((_GLF_IDENTITY(uint(workgroup_base), clamp(uint(workgroup_base), _GLF_IDENTITY(uint(workgroup_base), max(uint(workgroup_base), uint(workgroup_base))), _GLF_IDENTITY(uint(workgroup_base), max(uint(workgroup_base), uint(workgroup_base)))))) << 0u, (_GLF_IDENTITY(uint(workgroup_base), clamp(uint(workgroup_base), _GLF_IDENTITY(uint(workgroup_base), max(uint(workgroup_base), uint(workgroup_base))), _GLF_IDENTITY(uint(workgroup_base), max(uint(workgroup_base), uint(workgroup_base)))))) << 0u)))), _GLF_IDENTITY(0u ^ (_GLF_IDENTITY(uint(_GLF_IDENTITY(uint(workgroup_base), (uint(workgroup_base)) << 0u)), (uint(_GLF_IDENTITY(uint(workgroup_base), (uint(workgroup_base)) << 0u))) + 0u)), _GLF_IDENTITY(uint(uvec4(0u ^ (_GLF_IDENTITY(uint(_GLF_IDENTITY(uint(workgroup_base), (_GLF_IDENTITY(uint(workgroup_base), (uint(workgroup_base)) << 0u)) << 0u)), (uint(_GLF_IDENTITY(_GLF_IDENTITY(uint(workgroup_base), (uint(workgroup_base)) << _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) / 1u)) / 1u)), (_GLF_IDENTITY(uint(workgroup_base), (uint(workgroup_base)) << _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) / 1u)) / 1u))) | 0u))) + 0u)), 0u, 1u, (96786u & 0u))), min(uint(uvec4(_GLF_IDENTITY(0u, ~ (~ (_GLF_IDENTITY(0u, 0u ^ (0u))))) ^ (_GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_IDENTITY(uint(workgroup_base), (uint(_GLF_IDENTITY(workgroup_base, (false ? _GLF_FUZZED(subgroup_local_id) : workgroup_base)))) << 0u), ~ (~ (_GLF_IDENTITY(uint(workgroup_base), (uint(workgroup_base)) << 0u))))), (uint(_GLF_IDENTITY(uint(_GLF_IDENTITY(workgroup_base, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? workgroup_base : _GLF_FUZZED(workgroup_base)))), (uint(workgroup_base)) << 0u))) + 0u)), 0u, 1u, _GLF_IDENTITY((96786u & 0u), (_GLF_IDENTITY((96786u & 0u), ((96786u & 0u)) * 1u)) * 1u))), uint(uvec4(0u ^ (_GLF_IDENTITY(uint(_GLF_IDENTITY(uint(workgroup_base), (uint(workgroup_base)) << 0u)), (uint(_GLF_IDENTITY(uint(workgroup_base), (uint(workgroup_base)) << 0u))) + 0u)), _GLF_IDENTITY(0u, (0u) >> 0u), 1u, (_GLF_IDENTITY(96786u, (_GLF_IDENTITY(96786u, (96786u) | (96786u))) / 1u) & 0u)))))))))) + subgroup_id * subgroup_size + ((subgroup_local_id + 1) % subgroup_size);
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true) || (false))) && true)))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, vec2(mat2(injectionSwitch, 0.0, 1.0))), _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)))), injectionSwitch)).x > injectionSwitch.y), (! (injectionSwitch.x > injectionSwitch.y)) || false)))), ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), (! (injectionSwitch.x > injectionSwitch.y)) || false))))) || false))))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) && true)) && true)))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 atomicStore(buf[virtual_gid], uint(1), 4, 64, 4);
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)), ! (! (_GLF_DEAD(_GLF_IDENTITY(false, (false) || false))))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY(uint(uvec4(subgroup_local_id, uint(_GLF_ZERO(0.0, injectionSwitch.x)), 0u, 0u)), 0u ^ (uint(uvec4(subgroup_local_id, _GLF_IDENTITY(uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, float(vec2(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), _GLF_IDENTITY(cos(0.0), _GLF_IDENTITY((_GLF_IDENTITY(cos(0.0), float(mat4x3(cos(0.0), 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, _GLF_IDENTITY(sqrt(0.0), _GLF_IDENTITY(float(mat3x2(_GLF_IDENTITY(sqrt(0.0), clamp(sqrt(0.0), sqrt(0.0), sqrt(0.0))), 1.0, 1.0, 0.0, 1.0, 1.0)), clamp(float(mat3x2(_GLF_IDENTITY(sqrt(0.0), clamp(sqrt(0.0), sqrt(0.0), sqrt(0.0))), 1.0, 1.0, 0.0, 1.0, 1.0)), float(mat3x2(_GLF_IDENTITY(sqrt(0.0), clamp(sqrt(0.0), sqrt(0.0), sqrt(0.0))), 1.0, 1.0, 0.0, 1.0, 1.0)), _GLF_IDENTITY(float(mat3x2(_GLF_IDENTITY(sqrt(0.0), clamp(sqrt(0.0), sqrt(0.0), sqrt(0.0))), 1.0, 1.0, 0.0, 1.0, 1.0)), (float(mat3x2(_GLF_IDENTITY(sqrt(0.0), clamp(sqrt(0.0), sqrt(0.0), sqrt(0.0))), 1.0, 1.0, 0.0, 1.0, 1.0))) * 1.0)))), 1.0)))) / 1.0, max((_GLF_IDENTITY(cos(0.0), float(mat4x3(cos(0.0), 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, sqrt(0.0), 1.0)))) / 1.0, _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(cos(0.0), float(mat4x3(cos(0.0), 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, sqrt(0.0), 1.0)))) / 1.0, (false ? _GLF_FUZZED(9.8) : (_GLF_IDENTITY(cos(0.0), float(mat4x3(cos(0.0), 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, sqrt(0.0), 1.0)))) / 1.0)), mix(float(_GLF_IDENTITY(_GLF_FUZZED(-92.10), clamp(_GLF_FUZZED(-92.10), _GLF_FUZZED(-92.10), _GLF_FUZZED(-92.10)))), float((_GLF_IDENTITY(cos(0.0), float(mat4x3(cos(0.0), 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, sqrt(0.0), 1.0)))) / 1.0), bool(true))))))))))), (uint(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_IDENTITY(float(vec3(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), mix(float(_GLF_ZERO(0.0, injectionSwitch.x)), float(_GLF_FUZZED(1535.2714)), bool(_GLF_IDENTITY(false, ! (! (false)))))), 1.0, abs(0.0))), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(-7.7) : float(vec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), mix(float(_GLF_FUZZED(-4.5)), float(_GLF_ZERO(0.0, injectionSwitch.x)), bool(true))), mix(float(_GLF_ZERO(0.0, injectionSwitch.x)), float(_GLF_FUZZED(1535.2714)), bool(false))), 1.0, abs(0.0)))))))) | (_GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), max(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), clamp(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), (false ? _GLF_FUZZED(2.6) : _GLF_ZERO(0.0, injectionSwitch.x))), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))), _GLF_ZERO(0.0, injectionSwitch.x))), max(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), max(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), clamp(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), (false ? _GLF_FUZZED(2.6) : _GLF_ZERO(0.0, injectionSwitch.x))), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))), _GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(-5688.5205, -286.470)) : injectionSwitch)).x))), 0.0 + (_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), max(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), clamp(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), (false ? _GLF_FUZZED(2.6) : _GLF_ZERO(0.0, injectionSwitch.x))), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))), _GLF_ZERO(0.0, injectionSwitch.x))))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), max(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), clamp(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_IDENTITY((false ? _GLF_FUZZED(2.6) : _GLF_ZERO(0.0, injectionSwitch.x)), 0.0 + ((false ? _GLF_FUZZED(2.6) : _GLF_ZERO(0.0, injectionSwitch.x))))), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))), _GLF_ZERO(0.0, injectionSwitch.x))), mix(float(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), max(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), clamp(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), (false ? _GLF_FUZZED(2.6) : _GLF_ZERO(0.0, injectionSwitch.x))), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))), _GLF_ZERO(0.0, injectionSwitch.x)))), float(_GLF_FUZZED(-166.477)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), min(uint(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), max(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), clamp(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), (false ? _GLF_FUZZED(2.6) : _GLF_ZERO(0.0, injectionSwitch.x))), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))), _GLF_ZERO(0.0, injectionSwitch.x))), max(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), max(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), clamp(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), (false ? _GLF_FUZZED(2.6) : _GLF_ZERO(0.0, injectionSwitch.x))), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))), _GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(-5688.5205, -286.470)) : injectionSwitch)).x))), 0.0 + (_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), max(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), clamp(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), (false ? _GLF_FUZZED(2.6) : _GLF_ZERO(0.0, injectionSwitch.x))), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))), _GLF_ZERO(0.0, injectionSwitch.x))))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), max(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), clamp(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_IDENTITY((false ? _GLF_FUZZED(2.6) : _GLF_ZERO(0.0, injectionSwitch.x)), 0.0 + ((false ? _GLF_FUZZED(2.6) : _GLF_ZERO(0.0, injectionSwitch.x))))), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))), _GLF_ZERO(0.0, injectionSwitch.x))), mix(float(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), max(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), clamp(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), (false ? _GLF_FUZZED(2.6) : _GLF_ZERO(0.0, injectionSwitch.x))), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))), _GLF_ZERO(0.0, injectionSwitch.x)))), float(_GLF_FUZZED(-166.477)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), uint(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), max(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), clamp(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), (false ? _GLF_FUZZED(2.6) : _GLF_ZERO(0.0, injectionSwitch.x))), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))), _GLF_ZERO(0.0, injectionSwitch.x))), max(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), max(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), clamp(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), (false ? _GLF_FUZZED(2.6) : _GLF_ZERO(0.0, injectionSwitch.x))), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))), _GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(-5688.5205, -286.470)) : injectionSwitch)).x))), 0.0 + (_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), max(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), clamp(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), (false ? _GLF_FUZZED(2.6) : _GLF_ZERO(0.0, injectionSwitch.x))), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))), _GLF_ZERO(0.0, injectionSwitch.x))))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), max(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), clamp(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_IDENTITY((false ? _GLF_FUZZED(2.6) : _GLF_ZERO(0.0, injectionSwitch.x)), 0.0 + ((false ? _GLF_FUZZED(2.6) : _GLF_ZERO(0.0, injectionSwitch.x))))), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))), _GLF_ZERO(0.0, injectionSwitch.x))), mix(float(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), max(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), clamp(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), (false ? _GLF_FUZZED(2.6) : _GLF_ZERO(0.0, injectionSwitch.x))), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))), _GLF_ZERO(0.0, injectionSwitch.x)))), float(_GLF_FUZZED(-166.477)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))), ~ (~ (_GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), max(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), clamp(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), (false ? _GLF_FUZZED(2.6) : _GLF_ZERO(0.0, injectionSwitch.x))), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))), _GLF_ZERO(0.0, injectionSwitch.x))), max(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), max(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), clamp(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), (false ? _GLF_FUZZED(2.6) : _GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), min(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), float(vec2(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), (_GLF_ZERO(0.0, injectionSwitch.x)) - 0.0), 1.0))))))), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))), _GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(-5688.5205, -286.470)) : injectionSwitch)).x))), 0.0 + (_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), max(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), clamp(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), (false ? _GLF_FUZZED(2.6) : _GLF_ZERO(0.0, injectionSwitch.x))), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))), _GLF_ZERO(0.0, injectionSwitch.x))))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), max(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), clamp(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_IDENTITY((false ? _GLF_FUZZED(2.6) : _GLF_ZERO(0.0, injectionSwitch.x)), _GLF_IDENTITY(0.0, _GLF_IDENTITY(float(mat4(0.0, 1.0, determinant(mat2(0.0, 0.0, 0.0, 0.0)), round(length(normalize(1.0))), 0.0, 0.0, log(1.0), 1.0, 1.0, 0.0, 0.0, 1.0, sqrt(0.0), 1.0, 1.0, 0.0)), float(mat3x4(float(mat4(0.0, 1.0, determinant(mat2(0.0, 0.0, 0.0, 0.0)), round(length(normalize(1.0))), 0.0, 0.0, log(1.0), 1.0, 1.0, 0.0, 0.0, 1.0, sqrt(0.0), 1.0, 1.0, 0.0)), sin(0.0), determinant(mat3(1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0)), 1.0, abs(0.0), 1.0, 0.0, 1.0, exp(0.0), 0.0, determinant(mat4(0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)), 1.0)))) + ((false ? _GLF_FUZZED(2.6) : _GLF_ZERO(0.0, injectionSwitch.x))))), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))), _GLF_ZERO(0.0, injectionSwitch.x))), mix(float(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), max(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), clamp(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), (false ? _GLF_FUZZED(2.6) : _GLF_ZERO(0.0, injectionSwitch.x))), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))), _GLF_ZERO(0.0, injectionSwitch.x)))), float(_GLF_FUZZED(-166.477)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), min(uint(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), max(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), clamp(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), (false ? _GLF_FUZZED(2.6) : _GLF_ZERO(0.0, injectionSwitch.x))), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(8359.2560)))))), _GLF_ZERO(0.0, injectionSwitch.x))), max(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), max(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), clamp(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), (false ? _GLF_FUZZED(2.6) : _GLF_ZERO(0.0, injectionSwitch.x))), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))), _GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(-5688.5205, -286.470)) : injectionSwitch)).x))), 0.0 + (_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), max(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), clamp(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), (false ? _GLF_FUZZED(2.6) : _GLF_ZERO(0.0, injectionSwitch.x))), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))), _GLF_ZERO(0.0, injectionSwitch.x))))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), max(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), clamp(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_IDENTITY((false ? _GLF_FUZZED(2.6) : _GLF_ZERO(0.0, injectionSwitch.x)), 0.0 + ((false ? _GLF_FUZZED(2.6) : _GLF_ZERO(0.0, injectionSwitch.x))))), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))), _GLF_ZERO(0.0, injectionSwitch.x))), mix(float(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), max(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), clamp(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), (false ? _GLF_FUZZED(2.6) : _GLF_ZERO(0.0, injectionSwitch.x))), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))), _GLF_ZERO(0.0, injectionSwitch.x)))), float(_GLF_FUZZED(-166.477)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), uint(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), max(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), clamp(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), (false ? _GLF_FUZZED(2.6) : _GLF_ZERO(0.0, injectionSwitch.x))), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), (_GLF_ZERO(0.0, injectionSwitch.x)) - 0.0))), _GLF_ZERO(0.0, injectionSwitch.x))), max(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), max(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), clamp(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), (false ? _GLF_FUZZED(2.6) : _GLF_ZERO(0.0, injectionSwitch.x))), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))), _GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(-5688.5205, -286.470)) : injectionSwitch)).x))), 0.0 + (_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), max(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), clamp(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), (false ? _GLF_FUZZED(2.6) : _GLF_ZERO(0.0, injectionSwitch.x))), _GLF_ZERO(_GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0)), injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))), _GLF_ZERO(0.0, injectionSwitch.x))))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), max(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), clamp(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_IDENTITY((false ? _GLF_FUZZED(2.6) : _GLF_ZERO(0.0, injectionSwitch.x)), 0.0 + ((false ? _GLF_FUZZED(2.6) : _GLF_ZERO(0.0, injectionSwitch.x))))), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))), _GLF_ZERO(0.0, injectionSwitch.x))), mix(float(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), max(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), clamp(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), (false ? _GLF_FUZZED(2.6) : _GLF_ZERO(0.0, injectionSwitch.x))), _GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x))), _GLF_ZERO(0.0, injectionSwitch.x))), _GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, float(float(injectionSwitch.x))))))), float(_GLF_FUZZED(-166.477)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))))))), 0u, 0u)))))) | (subgroup_local_id))) ^ 0u) + 1 < subgroup_size)
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(_GLF_IDENTITY(bool(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bool(bvec3(bool(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false, true))))))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_DEAD(false), true))))
      barrier();
     barrier();
    }
   atomicStore(buf[next_virtual_gid], uint(2), 4, 64, 4);
   subgroupAll(false);
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
  }
 else
  {
   if(_GLF_DEAD(false))
    barrier();
   atomicStore(buf[next_virtual_gid], uint(2), 4, 64, 4);
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, true && (false)))))))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   subgroupAll(true);
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))) || false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
}
