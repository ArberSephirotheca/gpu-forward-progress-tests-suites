#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec3((injectionSwitch.x > injectionSwitch.y), false, true))))))
    barrier();
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_DEAD(false))
  barrier();
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0)))))
  barrier();
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  return;
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    return;
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, abs(vec2(0.0, 0.0)) + (injectionSwitch)).x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, false || (false))) || false), _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y))))), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, false || (false))) || false), _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y))))), false || (_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, false || (false))) || false), _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y)))))))), true && (bool(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, false || (false))) || false), _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y))))), false || (_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, false || (false))) || false), _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y)))))))))))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         barrier();
        }
       if(_GLF_DEAD(false))
        return;
       return;
      }
     barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, false)))))
      return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          return;
         return;
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        return;
       barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         return;
        }
       barrier();
      }
     return;
    }
   return;
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(bvec3(! (false), true, true)))))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   return;
  }
 uint num_workgroup = _GLF_IDENTITY(gl_NumWorkGroups.x, 0u ^ (_GLF_IDENTITY(gl_NumWorkGroups, min(gl_NumWorkGroups, gl_NumWorkGroups)).x));
 if(_GLF_DEAD(false))
  barrier();
 uint workgroup_size = gl_WorkGroupSize.x;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 uint workgroup_id = gl_WorkGroupID.x;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 uint workgroup_base = workgroup_size * workgroup_id;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   barrier();
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-3938.7547), _GLF_FUZZED(-30.87)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true)))) / _GLF_IDENTITY(vec2(1.0, 1.0), _GLF_IDENTITY(vec2(vec2(_GLF_IDENTITY(vec2(1.0, 1.0), vec2(mat3x2(_GLF_IDENTITY(vec2(1.0, 1.0), max(vec2(1.0, 1.0), vec2(1.0, 1.0))), 1.0, 1.0, 1.0, 0.0))))), (_GLF_IDENTITY(vec2(vec2(_GLF_IDENTITY(vec2(1.0, 1.0), vec2(mat3x2(_GLF_IDENTITY(vec2(1.0, 1.0), max(vec2(1.0, 1.0), vec2(1.0, 1.0))), 1.0, 1.0, 1.0, 0.0))))), mix(vec2(_GLF_FUZZED(7.8), (vec2(vec2(_GLF_IDENTITY(vec2(1.0, 1.0), vec2(mat3x2(_GLF_IDENTITY(vec2(1.0, 1.0), max(vec2(1.0, 1.0), vec2(1.0, 1.0))), 1.0, _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(969.976)), bool(false))), 1.0, 0.0))))))[1]), vec2((vec2(vec2(_GLF_IDENTITY(vec2(1.0, 1.0), _GLF_IDENTITY(vec2(mat3x2(_GLF_IDENTITY(vec2(1.0, 1.0), max(vec2(1.0, 1.0), vec2(1.0, 1.0))), 1.0, 1.0, 1.0, 0.0)), mix(vec2((vec2(mat3x2(_GLF_IDENTITY(vec2(1.0, 1.0), max(vec2(1.0, 1.0), vec2(1.0, 1.0))), 1.0, 1.0, 1.0, 0.0)))[0], (vec2(mat3x2(_GLF_IDENTITY(vec2(1.0, 1.0), max(vec2(1.0, 1.0), vec2(1.0, 1.0))), 1.0, 1.0, 1.0, 0.0)))[1]), vec2(_GLF_FUZZED(2.2), _GLF_FUZZED(7.3)), bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))[0], _GLF_FUZZED(3191.9938)), bvec2(true, false)))) - _GLF_IDENTITY(vec2(0.0, 0.0), mix(vec2(_GLF_FUZZED((true ? 9.2 : 6.7)), _GLF_FUZZED(-3108.5612)), vec2((vec2(0.0, 0.0))[0], (vec2(0.0, 0.0))[1]), bvec2(true, true)))))), _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(mat3x4(injectionSwitch, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0))))))).y, _GLF_IDENTITY(float(mat4x3(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)).y, 1.0, abs(0.0), abs(0.0), 1.0, 0.0, 1.0, 1.0, 1.0, sqrt(0.0), sqrt(1.0), 0.0)), _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(dot(sin(9.7), -1850.6873)) : _GLF_IDENTITY(0.0, (0.0) / 1.0))) + (_GLF_IDENTITY(float(mat4x3(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false), bvec3(bvec3(bvec3(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)))))) ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)).y, 1.0, abs(0.0), abs(0.0), 1.0, 0.0, 1.0, 1.0, 1.0, sqrt(0.0), sqrt(1.0), 0.0)), (_GLF_IDENTITY(float(mat4x3(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)).y, 1.0, abs(0.0), abs(0.0), 1.0, 0.0, 1.0, 1.0, 1.0, sqrt(0.0), sqrt(1.0), 0.0)), clamp(float(mat4x3(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(false), ! (! (bool(false))))), _GLF_IDENTITY(bool(bool(bool(_GLF_IDENTITY(bool(false), ! (! (bool(false))))))), (bool(bool(bool(_GLF_IDENTITY(bool(false), ! (! (bool(false)))))))) && true))) ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)).y, 1.0, abs(0.0), abs(0.0), 1.0, 0.0, 1.0, 1.0, 1.0, sqrt(0.0), sqrt(1.0), 0.0)), float(mat4x3(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_IDENTITY(_GLF_FUZZED(injectionSwitch), mat2(1.0) * (_GLF_FUZZED(injectionSwitch))) : injectionSwitch)).y, 1.0, abs(0.0), abs(0.0), 1.0, 0.0, 1.0, 1.0, 1.0, sqrt(0.0), sqrt(1.0), 0.0)), float(mat4x3(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)).y, 1.0, abs(0.0), abs(0.0), 1.0, 0.0, 1.0, 1.0, 1.0, sqrt(0.0), sqrt(1.0), 0.0))))) + log(1.0)))))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(138.347)), float(injectionSwitch.x), bool(_GLF_IDENTITY(true, false || (true))))) > injectionSwitch.y))))
    barrier();
   if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), true, true, true))), false || (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y))))))))
  return;
 if(_GLF_DEAD(false))
  return;
 uint virtual_gid = _GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size + subgroup_local_id, _GLF_IDENTITY(uint(uint(_GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_id, (subgroup_id) << (0u >> _GLF_IDENTITY(uint(5u), uint(5u)))) * subgroup_size + subgroup_local_id, (workgroup_base + subgroup_id * subgroup_size + subgroup_local_id) * 1u))), clamp(_GLF_IDENTITY(uint(uint(workgroup_base + subgroup_id * subgroup_size + subgroup_local_id)), ~ (~ (uint(uint(_GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_id, max(subgroup_id, subgroup_id)) * subgroup_size, ~ (~ (_GLF_IDENTITY(workgroup_base, max(workgroup_base, workgroup_base)) + subgroup_id * subgroup_size))) + subgroup_local_id))))), uint(_GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(workgroup_base, (_GLF_IDENTITY(workgroup_base, (workgroup_base) ^ 0u)) | 0u) + subgroup_id * subgroup_size + subgroup_local_id), (0u | 0u) | (uint(_GLF_IDENTITY(workgroup_base, (_GLF_IDENTITY(workgroup_base, (workgroup_base) ^ 0u)) | 0u) + subgroup_id * subgroup_size + subgroup_local_id))), ~ (~ (uint(workgroup_base + subgroup_id * subgroup_size + subgroup_local_id))))), uint(uint(_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, min(workgroup_base + subgroup_id * subgroup_size, workgroup_base + subgroup_id * subgroup_size)) + subgroup_local_id)))));
 if(_GLF_DEAD(false))
  return;
 uint next_virtual_gid = workgroup_base + subgroup_id * subgroup_size + (_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, _GLF_IDENTITY(((subgroup_local_id + 1) % subgroup_size), (((subgroup_local_id + 1) % subgroup_size)) ^ (0u | 0u)) | (0u >> _GLF_IDENTITY(uint(4u), _GLF_IDENTITY(uint(4u), (_GLF_IDENTITY(uint(4u), (uint(4u)) >> 0u)) ^ 0u)))));
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) && true), (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, (false) && true))))), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false)))))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) || false)) && true)))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y))), false || ((injectionSwitch.x > injectionSwitch.y))))))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, ! (! (false)))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)))))).x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec3(false, false, true))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec3(false, false, true))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, bool(bvec3(false, false, true)))), false || (! (_GLF_IDENTITY(false, bool(bvec3(false, false, _GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, (true) || false))))))))))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(false, (false) || false), false, true)), false || (bool(bvec3(_GLF_IDENTITY(false, (false) || false), false, true))))))), bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec3(false, false, true))), _GLF_IDENTITY(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (! (injectionSwitch.x < injectionSwitch.y)))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), ! (! (_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (! (injectionSwitch.x < injectionSwitch.y)))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))) && (_GLF_IDENTITY(false, bool(bvec3(false, false, true))))), true)))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(false, bool(bvec2(false, true))) || (false)), bool(bvec3(_GLF_IDENTITY(false, false || (false)), true, true))), ! (_GLF_IDENTITY(! (false), (_GLF_IDENTITY(! (false), true && (! (false)))) && true))), (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   return;
  }
 atomicStore(buf[virtual_gid], _GLF_IDENTITY(_GLF_IDENTITY(uint(1), _GLF_IDENTITY((_GLF_IDENTITY(uint(1), _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec4(uint(1), 0u, 0u, 1u), (_GLF_IDENTITY(uvec4(uint(1), 0u, 0u, 1u), (_GLF_IDENTITY(uvec4(uint(1), 0u, 0u, 1u), uvec4(1u, 1u, 1u, 1u) * _GLF_IDENTITY((uvec4(uint(1), 0u, _GLF_IDENTITY(0u, (false ? _GLF_FUZZED(workgroup_base) : 0u)), 1u)), (_GLF_IDENTITY((uvec4(_GLF_IDENTITY(uint(1), min(uint(1), uint(1))), 0u, 0u, 1u)), _GLF_IDENTITY((_GLF_IDENTITY((uvec4(uint(1), 0u, 0u, 1u)), ((uvec4(uint(1), 0u, 0u, 1u))) << uvec4(0u, 0u, 0u, 0u))) - uvec4(0u, 0u, 0u, 0u), max(_GLF_IDENTITY((_GLF_IDENTITY((uvec4(uint(1), 0u, 0u, 1u)), ((uvec4(uint(1), 0u, 0u, 1u))) << uvec4(0u, 0u, 0u, 0u))) - uvec4(0u, 0u, 0u, 0u), min((_GLF_IDENTITY((uvec4(uint(1), 0u, 0u, 1u)), ((uvec4(uint(1), 0u, 0u, 1u))) << uvec4(0u, 0u, 0u, 0u))) - uvec4(0u, 0u, 0u, 0u), _GLF_IDENTITY((_GLF_IDENTITY((uvec4(uint(1), 0u, 0u, 1u)), ((uvec4(uint(1), 0u, 0u, 1u))) << uvec4(0u, 0u, 0u, 0u))) - uvec4(0u, 0u, 0u, 0u), clamp((_GLF_IDENTITY((uvec4(uint(1), 0u, 0u, 1u)), ((uvec4(uint(1), 0u, 0u, 1u))) << uvec4(0u, 0u, 0u, 0u))) - uvec4(0u, 0u, 0u, 0u), (_GLF_IDENTITY((uvec4(uint(1), 0u, 0u, 1u)), ((uvec4(uint(1), 0u, 0u, 1u))) << uvec4(0u, 0u, 0u, 0u))) - uvec4(0u, 0u, 0u, 0u), (_GLF_IDENTITY((uvec4(uint(1), 0u, 0u, 1u)), ((uvec4(uint(1), 0u, 0u, 1u))) << uvec4(0u, 0u, 0u, 0u))) - uvec4(0u, 0u, 0u, 0u))))), (_GLF_IDENTITY((uvec4(uint(1), 0u, 0u, 1u)), ((uvec4(uint(1), 0u, 0u, 1u))) << uvec4(0u, 0u, 0u, 0u))) - uvec4(0u, 0u, 0u, 0u))))) << uvec4(0u, 0u, 0u, 0u)))) ^ uvec4(0u, 0u, 0u, 0u))) | (_GLF_IDENTITY(uvec4(uint(1), 0u, 0u, 1u), _GLF_IDENTITY(min(uvec4(uint(1), 0u, 0u, 1u), uvec4(uint(1), 0u, 0u, 1u)), max(min(uvec4(uint(1), 0u, 0u, 1u), uvec4(uint(1), 0u, 0u, 1u)), min(uvec4(uint(1), 0u, 0u, 1u), _GLF_IDENTITY(uvec4(uint(1), 0u, 0u, 1u), min(uvec4(uint(1), 0u, 0u, 1u), uvec4(uint(1), 0u, 0u, 1u)))))))))), (_GLF_IDENTITY(uint(_GLF_IDENTITY(uvec4(uint(1), 0u, 0u, 1u), (_GLF_IDENTITY(uvec4(uint(1), 0u, 0u, 1u), (_GLF_IDENTITY(uvec4(uint(1), 0u, 0u, 1u), uvec4(1u, 1u, 1u, 1u) * _GLF_IDENTITY((uvec4(uint(1), 0u, _GLF_IDENTITY(0u, (false ? _GLF_FUZZED(workgroup_base) : 0u)), 1u)), (_GLF_IDENTITY((uvec4(_GLF_IDENTITY(uint(1), min(uint(1), uint(1))), 0u, 0u, 1u)), _GLF_IDENTITY((_GLF_IDENTITY((uvec4(uint(1), 0u, 0u, 1u)), ((uvec4(uint(1), 0u, 0u, 1u))) << uvec4(0u, 0u, 0u, 0u))) - uvec4(0u, 0u, 0u, 0u), max(_GLF_IDENTITY((_GLF_IDENTITY((uvec4(uint(1), 0u, 0u, 1u)), ((uvec4(uint(1), 0u, 0u, 1u))) << uvec4(0u, 0u, 0u, 0u))) - uvec4(0u, 0u, 0u, 0u), min((_GLF_IDENTITY((uvec4(uint(1), 0u, 0u, 1u)), ((uvec4(uint(1), 0u, 0u, 1u))) << uvec4(0u, 0u, 0u, 0u))) - uvec4(0u, 0u, 0u, 0u), _GLF_IDENTITY((_GLF_IDENTITY((uvec4(uint(1), 0u, 0u, 1u)), ((uvec4(uint(1), 0u, 0u, 1u))) << uvec4(0u, 0u, 0u, 0u))) - uvec4(0u, 0u, 0u, 0u), clamp((_GLF_IDENTITY((uvec4(uint(1), 0u, 0u, 1u)), ((uvec4(uint(1), 0u, 0u, 1u))) << uvec4(0u, 0u, 0u, 0u))) - uvec4(0u, 0u, 0u, 0u), (_GLF_IDENTITY((uvec4(uint(1), 0u, 0u, 1u)), ((uvec4(uint(1), 0u, 0u, 1u))) << uvec4(0u, 0u, 0u, 0u))) - uvec4(0u, 0u, 0u, 0u), (_GLF_IDENTITY((uvec4(uint(1), 0u, 0u, 1u)), ((uvec4(uint(1), 0u, 0u, 1u))) << uvec4(0u, 0u, 0u, 0u))) - uvec4(0u, 0u, 0u, 0u))))), (_GLF_IDENTITY((uvec4(uint(1), 0u, 0u, 1u)), ((uvec4(uint(1), 0u, 0u, 1u))) << uvec4(0u, 0u, 0u, 0u))) - uvec4(0u, 0u, 0u, 0u))))) << uvec4(0u, 0u, 0u, 0u)))) ^ uvec4(0u, 0u, 0u, 0u))) | (_GLF_IDENTITY(uvec4(uint(1), 0u, 0u, 1u), _GLF_IDENTITY(min(uvec4(uint(1), 0u, 0u, 1u), uvec4(uint(1), 0u, 0u, 1u)), max(min(uvec4(uint(1), 0u, 0u, 1u), uvec4(uint(1), 0u, 0u, 1u)), min(uvec4(uint(1), 0u, 0u, 1u), _GLF_IDENTITY(uvec4(uint(1), 0u, 0u, 1u), min(uvec4(uint(1), 0u, 0u, 1u), uvec4(uint(1), 0u, 0u, 1u)))))))))), max(uint(_GLF_IDENTITY(uvec4(uint(1), 0u, 0u, 1u), (_GLF_IDENTITY(uvec4(uint(1), 0u, 0u, 1u), (_GLF_IDENTITY(uvec4(uint(1), 0u, 0u, 1u), uvec4(1u, 1u, 1u, 1u) * _GLF_IDENTITY((uvec4(uint(1), 0u, _GLF_IDENTITY(0u, (false ? _GLF_FUZZED(workgroup_base) : 0u)), 1u)), (_GLF_IDENTITY((uvec4(_GLF_IDENTITY(uint(1), min(uint(1), uint(1))), 0u, 0u, 1u)), _GLF_IDENTITY((_GLF_IDENTITY((uvec4(uint(1), 0u, 0u, 1u)), ((uvec4(uint(1), 0u, 0u, 1u))) << uvec4(0u, 0u, 0u, 0u))) - uvec4(0u, 0u, 0u, 0u), max(_GLF_IDENTITY((_GLF_IDENTITY((uvec4(uint(1), 0u, 0u, 1u)), ((uvec4(uint(1), 0u, 0u, 1u))) << uvec4(0u, 0u, 0u, 0u))) - uvec4(0u, 0u, 0u, 0u), min((_GLF_IDENTITY((uvec4(uint(1), 0u, 0u, 1u)), ((uvec4(uint(1), 0u, 0u, 1u))) << uvec4(0u, 0u, 0u, 0u))) - uvec4(0u, 0u, 0u, 0u), _GLF_IDENTITY((_GLF_IDENTITY((uvec4(uint(1), 0u, 0u, 1u)), ((uvec4(uint(1), 0u, 0u, 1u))) << uvec4(0u, 0u, 0u, 0u))) - uvec4(0u, 0u, 0u, 0u), clamp((_GLF_IDENTITY((uvec4(uint(1), 0u, 0u, 1u)), ((uvec4(uint(1), 0u, 0u, 1u))) << uvec4(0u, 0u, 0u, 0u))) - uvec4(0u, 0u, 0u, 0u), (_GLF_IDENTITY((uvec4(uint(1), 0u, 0u, 1u)), ((uvec4(uint(1), 0u, 0u, 1u))) << uvec4(0u, 0u, 0u, 0u))) - uvec4(0u, 0u, 0u, 0u), (_GLF_IDENTITY((uvec4(uint(1), 0u, 0u, 1u)), ((uvec4(uint(1), 0u, 0u, 1u))) << uvec4(0u, 0u, 0u, 0u))) - uvec4(0u, 0u, 0u, 0u))))), (_GLF_IDENTITY((uvec4(uint(1), 0u, 0u, 1u)), ((uvec4(uint(1), 0u, 0u, 1u))) << uvec4(0u, 0u, 0u, 0u))) - uvec4(0u, 0u, 0u, 0u))))) << uvec4(0u, 0u, 0u, 0u)))) ^ uvec4(0u, 0u, 0u, 0u))) | (_GLF_IDENTITY(uvec4(uint(1), 0u, 0u, 1u), _GLF_IDENTITY(min(uvec4(uint(1), 0u, 0u, 1u), uvec4(uint(1), 0u, 0u, 1u)), max(min(uvec4(uint(1), 0u, 0u, 1u), uvec4(uint(1), 0u, 0u, 1u)), min(uvec4(uint(1), 0u, 0u, 1u), _GLF_IDENTITY(uvec4(uint(1), 0u, 0u, 1u), min(uvec4(uint(1), 0u, 0u, 1u), uvec4(uint(1), 0u, 0u, 1u)))))))))), uint(_GLF_IDENTITY(uvec4(uint(1), 0u, 0u, 1u), (_GLF_IDENTITY(uvec4(uint(1), 0u, 0u, 1u), (_GLF_IDENTITY(uvec4(uint(1), 0u, 0u, 1u), uvec4(1u, 1u, 1u, 1u) * _GLF_IDENTITY((uvec4(uint(1), 0u, _GLF_IDENTITY(0u, (false ? _GLF_FUZZED(workgroup_base) : 0u)), 1u)), (_GLF_IDENTITY((uvec4(_GLF_IDENTITY(uint(1), min(uint(1), uint(1))), 0u, 0u, 1u)), _GLF_IDENTITY((_GLF_IDENTITY((uvec4(uint(1), 0u, 0u, 1u)), ((uvec4(uint(1), 0u, 0u, 1u))) << uvec4(0u, 0u, 0u, 0u))) - uvec4(0u, 0u, 0u, 0u), max(_GLF_IDENTITY((_GLF_IDENTITY((uvec4(uint(1), 0u, 0u, 1u)), ((uvec4(uint(1), 0u, 0u, 1u))) << uvec4(0u, 0u, 0u, 0u))) - uvec4(0u, 0u, 0u, 0u), min((_GLF_IDENTITY((uvec4(uint(1), 0u, 0u, 1u)), ((uvec4(uint(1), 0u, 0u, 1u))) << uvec4(0u, 0u, 0u, 0u))) - uvec4(0u, 0u, 0u, 0u), _GLF_IDENTITY((_GLF_IDENTITY((uvec4(uint(1), 0u, 0u, 1u)), ((uvec4(uint(1), 0u, 0u, 1u))) << uvec4(0u, 0u, 0u, 0u))) - uvec4(0u, 0u, 0u, 0u), clamp((_GLF_IDENTITY((uvec4(uint(1), 0u, 0u, 1u)), ((uvec4(uint(1), 0u, 0u, 1u))) << uvec4(0u, 0u, 0u, 0u))) - uvec4(0u, 0u, 0u, 0u), (_GLF_IDENTITY((uvec4(uint(1), 0u, 0u, 1u)), ((uvec4(uint(1), 0u, 0u, 1u))) << uvec4(0u, 0u, 0u, 0u))) - uvec4(0u, 0u, 0u, 0u), (_GLF_IDENTITY((uvec4(uint(1), 0u, 0u, 1u)), ((uvec4(uint(1), 0u, 0u, 1u))) << uvec4(0u, 0u, 0u, 0u))) - uvec4(0u, 0u, 0u, 0u))))), (_GLF_IDENTITY((uvec4(uint(1), 0u, 0u, 1u)), ((uvec4(uint(1), 0u, 0u, 1u))) << uvec4(0u, 0u, 0u, 0u))) - uvec4(0u, 0u, 0u, 0u))))) << uvec4(0u, 0u, 0u, 0u)))) ^ uvec4(0u, 0u, 0u, 0u))) | (_GLF_IDENTITY(uvec4(uint(1), 0u, 0u, 1u), _GLF_IDENTITY(min(uvec4(uint(1), 0u, 0u, 1u), uvec4(uint(1), 0u, 0u, 1u)), max(min(uvec4(uint(1), 0u, 0u, 1u), uvec4(uint(1), 0u, 0u, 1u)), min(uvec4(uint(1), 0u, 0u, 1u), _GLF_IDENTITY(uvec4(uint(1), 0u, 0u, 1u), min(uvec4(uint(1), 0u, 0u, 1u), uvec4(uint(1), 0u, 0u, 1u))))))))))))) | (_GLF_IDENTITY(uint(_GLF_IDENTITY(uvec4(uint(1), 0u, 0u, 1u), (_GLF_IDENTITY(uvec4(uint(1), 0u, 0u, 1u), (_GLF_IDENTITY(uvec4(uint(1), 0u, 0u, 1u), uvec4(1u, 1u, 1u, 1u) * _GLF_IDENTITY((uvec4(uint(1), 0u, _GLF_IDENTITY(0u, (false ? _GLF_FUZZED(workgroup_base) : 0u)), 1u)), (_GLF_IDENTITY((uvec4(_GLF_IDENTITY(uint(1), min(uint(1), uint(1))), 0u, 0u, 1u)), _GLF_IDENTITY((_GLF_IDENTITY((uvec4(uint(1), 0u, 0u, 1u)), ((uvec4(uint(1), 0u, 0u, 1u))) << uvec4(0u, 0u, 0u, 0u))) - uvec4(0u, 0u, 0u, 0u), max(_GLF_IDENTITY((_GLF_IDENTITY((uvec4(uint(1), 0u, 0u, 1u)), ((uvec4(uint(1), 0u, 0u, 1u))) << uvec4(0u, 0u, 0u, 0u))) - uvec4(0u, 0u, 0u, 0u), min((_GLF_IDENTITY((uvec4(uint(1), 0u, 0u, 1u)), ((uvec4(uint(1), 0u, 0u, 1u))) << uvec4(0u, 0u, 0u, 0u))) - uvec4(0u, 0u, 0u, 0u), _GLF_IDENTITY((_GLF_IDENTITY((uvec4(uint(1), 0u, 0u, 1u)), ((uvec4(uint(1), 0u, 0u, 1u))) << uvec4(0u, 0u, 0u, 0u))) - uvec4(0u, 0u, 0u, 0u), clamp((_GLF_IDENTITY((uvec4(uint(1), 0u, 0u, 1u)), ((uvec4(uint(1), 0u, 0u, 1u))) << uvec4(0u, 0u, 0u, 0u))) - uvec4(0u, 0u, 0u, 0u), (_GLF_IDENTITY((uvec4(uint(1), 0u, 0u, 1u)), ((uvec4(uint(1), 0u, 0u, 1u))) << uvec4(0u, 0u, 0u, 0u))) - uvec4(0u, 0u, 0u, 0u), (_GLF_IDENTITY((uvec4(uint(1), 0u, 0u, 1u)), ((uvec4(uint(1), 0u, 0u, 1u))) << uvec4(0u, 0u, 0u, 0u))) - uvec4(0u, 0u, 0u, 0u))))), (_GLF_IDENTITY((uvec4(uint(1), 0u, 0u, 1u)), ((uvec4(uint(1), 0u, 0u, 1u))) << uvec4(0u, 0u, 0u, 0u))) - uvec4(0u, 0u, 0u, 0u))))) << uvec4(0u, 0u, 0u, 0u)))) ^ uvec4(0u, 0u, 0u, 0u))) | (_GLF_IDENTITY(uvec4(uint(1), 0u, 0u, 1u), _GLF_IDENTITY(min(uvec4(uint(1), 0u, 0u, 1u), uvec4(uint(1), 0u, 0u, 1u)), max(min(uvec4(uint(1), 0u, 0u, 1u), uvec4(uint(1), 0u, 0u, 1u)), min(uvec4(uint(1), 0u, 0u, 1u), _GLF_IDENTITY(uvec4(uint(1), 0u, 0u, 1u), min(uvec4(uint(1), 0u, 0u, 1u), uvec4(uint(1), 0u, 0u, 1u)))))))))), clamp(uint(_GLF_IDENTITY(uvec4(uint(1), 0u, 0u, 1u), (_GLF_IDENTITY(uvec4(uint(1), 0u, 0u, 1u), (_GLF_IDENTITY(uvec4(uint(1), 0u, 0u, 1u), uvec4(1u, 1u, 1u, 1u) * _GLF_IDENTITY((uvec4(uint(1), 0u, _GLF_IDENTITY(0u, (false ? _GLF_FUZZED(workgroup_base) : 0u)), 1u)), (_GLF_IDENTITY((uvec4(_GLF_IDENTITY(uint(1), min(uint(1), uint(1))), 0u, 0u, 1u)), _GLF_IDENTITY((_GLF_IDENTITY((uvec4(uint(1), 0u, 0u, 1u)), ((uvec4(uint(1), 0u, 0u, 1u))) << uvec4(0u, 0u, 0u, 0u))) - uvec4(0u, 0u, 0u, 0u), max(_GLF_IDENTITY((_GLF_IDENTITY((uvec4(uint(1), 0u, 0u, 1u)), ((uvec4(uint(1), 0u, 0u, 1u))) << uvec4(0u, 0u, 0u, 0u))) - uvec4(0u, 0u, 0u, 0u), min((_GLF_IDENTITY((uvec4(uint(1), 0u, 0u, 1u)), ((uvec4(uint(1), 0u, 0u, 1u))) << uvec4(0u, 0u, 0u, 0u))) - uvec4(0u, 0u, 0u, 0u), _GLF_IDENTITY((_GLF_IDENTITY((uvec4(uint(1), 0u, 0u, 1u)), ((uvec4(uint(1), 0u, 0u, 1u))) << uvec4(0u, 0u, 0u, 0u))) - uvec4(0u, 0u, 0u, 0u), clamp((_GLF_IDENTITY((uvec4(uint(1), 0u, 0u, 1u)), ((uvec4(uint(1), 0u, 0u, 1u))) << uvec4(0u, 0u, 0u, 0u))) - uvec4(0u, 0u, 0u, 0u), (_GLF_IDENTITY((uvec4(uint(1), 0u, 0u, 1u)), ((uvec4(uint(1), 0u, 0u, 1u))) << uvec4(0u, 0u, 0u, 0u))) - uvec4(0u, 0u, 0u, 0u), (_GLF_IDENTITY((uvec4(uint(1), 0u, 0u, 1u)), ((uvec4(uint(1), 0u, 0u, 1u))) << uvec4(0u, 0u, 0u, 0u))) - uvec4(0u, 0u, 0u, 0u))))), (_GLF_IDENTITY((uvec4(uint(1), 0u, 0u, 1u)), ((uvec4(uint(1), 0u, 0u, 1u))) << uvec4(0u, 0u, 0u, 0u))) - uvec4(0u, 0u, 0u, 0u))))) << uvec4(0u, 0u, 0u, 0u)))) ^ uvec4(0u, 0u, 0u, 0u))) | (_GLF_IDENTITY(uvec4(uint(1), 0u, 0u, 1u), _GLF_IDENTITY(min(uvec4(uint(1), 0u, 0u, 1u), uvec4(uint(1), 0u, 0u, 1u)), max(min(uvec4(uint(1), 0u, 0u, 1u), uvec4(uint(1), 0u, 0u, 1u)), min(uvec4(uint(1), 0u, 0u, 1u), _GLF_IDENTITY(uvec4(uint(1), 0u, 0u, 1u), min(uvec4(uint(1), 0u, 0u, 1u), uvec4(uint(1), 0u, 0u, 1u)))))))))), uint(_GLF_IDENTITY(uvec4(uint(1), 0u, 0u, 1u), (_GLF_IDENTITY(uvec4(uint(1), 0u, 0u, 1u), (_GLF_IDENTITY(uvec4(uint(1), 0u, 0u, 1u), uvec4(1u, 1u, 1u, 1u) * _GLF_IDENTITY((uvec4(uint(1), 0u, _GLF_IDENTITY(0u, (false ? _GLF_FUZZED(workgroup_base) : 0u)), 1u)), (_GLF_IDENTITY((uvec4(_GLF_IDENTITY(uint(1), min(uint(1), uint(1))), 0u, 0u, 1u)), _GLF_IDENTITY((_GLF_IDENTITY((uvec4(uint(1), 0u, 0u, 1u)), ((uvec4(uint(1), 0u, 0u, 1u))) << uvec4(0u, 0u, 0u, 0u))) - uvec4(0u, 0u, 0u, 0u), max(_GLF_IDENTITY((_GLF_IDENTITY((uvec4(uint(1), 0u, 0u, 1u)), ((uvec4(uint(1), 0u, 0u, 1u))) << uvec4(0u, 0u, 0u, 0u))) - uvec4(0u, 0u, 0u, 0u), min((_GLF_IDENTITY((uvec4(uint(1), 0u, 0u, 1u)), ((uvec4(uint(1), 0u, 0u, 1u))) << uvec4(0u, 0u, 0u, 0u))) - uvec4(0u, 0u, 0u, 0u), _GLF_IDENTITY((_GLF_IDENTITY((uvec4(uint(1), 0u, 0u, 1u)), ((uvec4(uint(1), 0u, 0u, 1u))) << uvec4(0u, 0u, 0u, 0u))) - uvec4(0u, 0u, 0u, 0u), clamp((_GLF_IDENTITY((uvec4(uint(1), 0u, 0u, 1u)), ((uvec4(uint(1), 0u, 0u, 1u))) << uvec4(0u, 0u, 0u, 0u))) - uvec4(0u, 0u, 0u, 0u), (_GLF_IDENTITY((uvec4(uint(1), 0u, 0u, 1u)), ((uvec4(uint(1), 0u, 0u, 1u))) << uvec4(0u, 0u, 0u, 0u))) - uvec4(0u, 0u, 0u, 0u), (_GLF_IDENTITY((uvec4(uint(1), 0u, 0u, 1u)), ((uvec4(uint(1), 0u, 0u, 1u))) << uvec4(0u, 0u, 0u, 0u))) - uvec4(0u, 0u, 0u, 0u))))), (_GLF_IDENTITY((uvec4(uint(1), 0u, 0u, 1u)), ((uvec4(uint(1), 0u, 0u, 1u))) << uvec4(0u, 0u, 0u, 0u))) - uvec4(0u, 0u, 0u, 0u))))) << uvec4(0u, 0u, 0u, 0u)))) ^ uvec4(0u, 0u, 0u, 0u))) | (_GLF_IDENTITY(uvec4(uint(1), 0u, 0u, 1u), _GLF_IDENTITY(min(uvec4(uint(1), 0u, 0u, 1u), uvec4(uint(1), 0u, 0u, 1u)), max(min(uvec4(uint(1), 0u, 0u, 1u), uvec4(uint(1), 0u, 0u, 1u)), min(uvec4(uint(1), 0u, 0u, 1u), _GLF_IDENTITY(uvec4(uint(1), 0u, 0u, 1u), min(uvec4(uint(1), 0u, 0u, 1u), uvec4(uint(1), 0u, 0u, 1u)))))))))), uint(_GLF_IDENTITY(uvec4(uint(1), 0u, 0u, 1u), (_GLF_IDENTITY(uvec4(uint(1), 0u, 0u, 1u), (_GLF_IDENTITY(uvec4(uint(1), 0u, 0u, 1u), uvec4(1u, 1u, 1u, 1u) * _GLF_IDENTITY((uvec4(uint(1), 0u, _GLF_IDENTITY(0u, (false ? _GLF_FUZZED(workgroup_base) : 0u)), 1u)), (_GLF_IDENTITY((uvec4(_GLF_IDENTITY(uint(1), min(uint(1), uint(1))), 0u, 0u, 1u)), _GLF_IDENTITY((_GLF_IDENTITY((uvec4(uint(1), 0u, 0u, 1u)), ((uvec4(uint(1), 0u, 0u, 1u))) << uvec4(0u, 0u, 0u, 0u))) - uvec4(0u, 0u, 0u, 0u), max(_GLF_IDENTITY((_GLF_IDENTITY((uvec4(uint(1), 0u, 0u, 1u)), ((uvec4(uint(1), 0u, 0u, 1u))) << uvec4(0u, 0u, 0u, 0u))) - uvec4(0u, 0u, 0u, 0u), min((_GLF_IDENTITY((uvec4(uint(1), 0u, 0u, 1u)), ((uvec4(uint(1), 0u, 0u, 1u))) << uvec4(0u, 0u, 0u, 0u))) - uvec4(0u, 0u, 0u, 0u), _GLF_IDENTITY((_GLF_IDENTITY((uvec4(uint(1), 0u, 0u, 1u)), ((uvec4(uint(1), 0u, 0u, 1u))) << uvec4(0u, 0u, 0u, 0u))) - uvec4(0u, 0u, 0u, 0u), clamp((_GLF_IDENTITY((uvec4(uint(1), 0u, 0u, 1u)), ((uvec4(uint(1), 0u, 0u, 1u))) << uvec4(0u, 0u, 0u, 0u))) - uvec4(0u, 0u, 0u, 0u), (_GLF_IDENTITY((uvec4(uint(1), 0u, 0u, 1u)), ((uvec4(uint(1), 0u, 0u, 1u))) << uvec4(0u, 0u, 0u, 0u))) - uvec4(0u, 0u, 0u, 0u), (_GLF_IDENTITY((uvec4(uint(1), 0u, 0u, 1u)), ((uvec4(uint(1), 0u, 0u, 1u))) << uvec4(0u, 0u, 0u, 0u))) - uvec4(0u, 0u, 0u, 0u))))), (_GLF_IDENTITY((uvec4(uint(1), 0u, 0u, 1u)), ((uvec4(uint(1), 0u, 0u, 1u))) << uvec4(0u, 0u, 0u, 0u))) - uvec4(0u, 0u, 0u, 0u))))) << uvec4(0u, 0u, 0u, 0u)))) ^ uvec4(0u, 0u, 0u, 0u))) | (_GLF_IDENTITY(uvec4(uint(1), 0u, 0u, 1u), _GLF_IDENTITY(min(uvec4(uint(1), 0u, 0u, 1u), uvec4(uint(1), 0u, 0u, 1u)), max(min(uvec4(uint(1), 0u, 0u, 1u), uvec4(uint(1), 0u, 0u, 1u)), min(uvec4(uint(1), 0u, 0u, 1u), _GLF_IDENTITY(uvec4(uint(1), 0u, 0u, 1u), min(uvec4(uint(1), 0u, 0u, 1u), uvec4(uint(1), 0u, 0u, 1u)))))))))))))))) ^ 0u, min((_GLF_IDENTITY(uint(1), uint(_GLF_IDENTITY(uvec4(uint(1), 0u, 0u, 1u), _GLF_IDENTITY((_GLF_IDENTITY(uvec4(uint(1), 0u, 0u, 1u), (_GLF_IDENTITY(uvec4(uint(1), 0u, 0u, 1u), uvec4(1u, 1u, 1u, _GLF_IDENTITY(1u, max(1u, 1u))) * (uvec4(_GLF_IDENTITY(uint(1), (0u | 0u) | (uint(1))), 0u, 0u, 1u)))) ^ uvec4(0u, 0u, 0u, 0u))) | _GLF_IDENTITY((_GLF_IDENTITY(uvec4(uint(1), 0u, 0u, 1u), min(uvec4(uint(1), 0u, 0u, 1u), uvec4(uint(_GLF_IDENTITY(1, min(_GLF_IDENTITY(1, 0 ^ (1)), 1))), 0u, 0u, 1u)))), ((_GLF_IDENTITY(uvec4(_GLF_IDENTITY(uint(1), max(uint(1), uint(1))), 0u, 0u, 1u), min(uvec4(uint(1), 0u, 0u, 1u), uvec4(uint(_GLF_IDENTITY(1, min(_GLF_IDENTITY(1, 0 ^ (1)), 1))), 0u, 0u, 1u))))) << uvec4(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))), (false ? _GLF_FUZZED(uvec4(45505u, 121802u, 102211u, 117860u)) : (_GLF_IDENTITY(_GLF_IDENTITY(uvec4(uint(1), 0u, 0u, 1u), (_GLF_IDENTITY(uvec4(uint(1), _GLF_IDENTITY(0u, max(0u, 0u)), 0u, 1u), uvec4(1u, 1u, 1u, 1u) * (uvec4(uint(1), 0u, 0u, 1u)))) ^ uvec4(0u, 0u, 0u, 0u)), (_GLF_IDENTITY(uvec4(uint(1), 0u, 0u, 1u), (_GLF_IDENTITY(uvec4(uint(1), 0u, _GLF_IDENTITY(0u, uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat2(injectionSwitch, 1.0, 0.0)), max(vec2(mat2(injectionSwitch, 1.0, 0.0)), vec2(mat2(injectionSwitch, 1.0, 0.0))))).x)) | (_GLF_IDENTITY(_GLF_IDENTITY(0u, ~ (~ (_GLF_IDENTITY(0u, min(0u, 0u))))), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(0u, ~ (~ (_GLF_IDENTITY(0u, min(0u, 0u)))))), (false ? _GLF_FUZZED(workgroup_size) : ~ (_GLF_IDENTITY(0u, ~ (~ (_GLF_IDENTITY(0u, min(0u, 0u)))))))))))), 1u), uvec4(1u, _GLF_IDENTITY(1u, ~ (~ (1u))), 1u, 1u) * _GLF_IDENTITY((uvec4(uint(1), 0u, 0u, 1u)), ((uvec4(uint(1), 0u, 0u, 1u))) / uvec4(1u, 1u, 1u, 1u)))) ^ uvec4(0u, 0u, 0u, 0u))) | _GLF_IDENTITY((_GLF_IDENTITY(uvec4(uint(_GLF_IDENTITY(1, int(ivec2(_GLF_IDENTITY(1, min(_GLF_IDENTITY(1, int(int(1))), 1)), 0)))), 0u, 0u, 1u), (_GLF_IDENTITY(uvec4(uint(1), 0u, 0u, 1u), uvec4(1u, 1u, 1u, 1u) * (uvec4(uint(1), 0u, 0u, 1u)))) ^ uvec4(0u, 0u, 0u, 0u))), ((_GLF_IDENTITY(uvec4(uint(_GLF_IDENTITY(1, int(ivec2(_GLF_IDENTITY(1, min(_GLF_IDENTITY(1, int(int(1))), 1)), 0)))), 0u, 0u, 1u), (_GLF_IDENTITY(uvec4(uint(1), 0u, 0u, 1u), uvec4(1u, 1u, 1u, 1u) * (uvec4(uint(1), 0u, 0u, 1u)))) ^ uvec4(0u, 0u, 0u, 0u)))) - uvec4(0u, 0u, 0u, 0u)))) | (_GLF_IDENTITY(uvec4(uint(1), 0u, 0u, 1u), min(uvec4(uint(_GLF_IDENTITY(1, 0 ^ (1))), 0u, 0u, 1u), uvec4(uint(1), 0u, 0u, 1u)))))))))) ^ 0u, _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(1, min(1, 1))), (uint(_GLF_IDENTITY(1, min(1, 1)))) >> 0u), uint(_GLF_IDENTITY(uvec4(uint(_GLF_IDENTITY(1, 0 | (1))), 0u, 0u, 1u), (_GLF_IDENTITY(uvec4(uint(1), 0u, 0u, 1u), (_GLF_IDENTITY(uvec4(uint(1), 0u, 0u, 1u), uvec4(1u, 1u, _GLF_IDENTITY(1u, (1u) << 0u), 1u) * (uvec4(uint(1), 0u, 0u, 1u)))) ^ uvec4(0u, _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) >> 0u)) / 1u), 0u, 0u))) | (_GLF_IDENTITY(uvec4(uint(1), 0u, 0u, 1u), min(uvec4(uint(1), 0u, 0u, 1u), uvec4(uint(1), 0u, 0u, 1u)))))))) ^ 0u, max(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(1, min(1, 1))), (uint(_GLF_IDENTITY(1, min(1, 1)))) >> 0u), uint(_GLF_IDENTITY(uvec4(uint(_GLF_IDENTITY(1, 0 | (1))), 0u, 0u, 1u), (_GLF_IDENTITY(uvec4(uint(1), 0u, 0u, 1u), (_GLF_IDENTITY(uvec4(uint(1), 0u, 0u, 1u), uvec4(1u, 1u, _GLF_IDENTITY(1u, (1u) << 0u), 1u) * (uvec4(uint(1), 0u, 0u, 1u)))) ^ uvec4(0u, _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) >> 0u)) / 1u), 0u, 0u))) | (_GLF_IDENTITY(uvec4(uint(1), 0u, 0u, 1u), min(uvec4(uint(1), 0u, 0u, 1u), uvec4(uint(1), 0u, 0u, 1u)))))))) ^ 0u, uint(_GLF_IDENTITY(uvec4(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(1, min(1, 1))), (uint(_GLF_IDENTITY(1, min(1, 1)))) >> 0u), uint(_GLF_IDENTITY(uvec4(uint(_GLF_IDENTITY(1, 0 | (1))), 0u, 0u, 1u), (_GLF_IDENTITY(uvec4(uint(1), 0u, 0u, 1u), (_GLF_IDENTITY(uvec4(uint(1), 0u, 0u, 1u), uvec4(1u, 1u, _GLF_IDENTITY(1u, (1u) << 0u), 1u) * (uvec4(uint(1), 0u, 0u, 1u)))) ^ uvec4(0u, _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) >> 0u)) / 1u), 0u, 0u))) | (_GLF_IDENTITY(uvec4(uint(1), 0u, 0u, 1u), min(uvec4(uint(1), 0u, 0u, 1u), uvec4(uint(1), 0u, 0u, 1u)))))))) ^ 0u, ((_GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(1, min(1, 1))), (uint(_GLF_IDENTITY(1, min(1, 1)))) >> 0u), uint(_GLF_IDENTITY(uvec4(uint(_GLF_IDENTITY(1, 0 | (1))), 0u, 0u, 1u), (_GLF_IDENTITY(uvec4(uint(1), 0u, 0u, 1u), (_GLF_IDENTITY(uvec4(uint(1), 0u, 0u, 1u), uvec4(1u, 1u, _GLF_IDENTITY(1u, (1u) << 0u), 1u) * (uvec4(uint(1), 0u, 0u, 1u)))) ^ uvec4(0u, _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) >> 0u)) / 1u), 0u, 0u))) | (_GLF_IDENTITY(uvec4(uint(1), 0u, 0u, 1u), min(uvec4(uint(1), 0u, 0u, 1u), uvec4(uint(1), 0u, 0u, 1u)))))))) ^ 0u) | ((_GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(1, min(1, 1))), (uint(_GLF_IDENTITY(1, min(1, 1)))) >> 0u), uint(_GLF_IDENTITY(uvec4(uint(_GLF_IDENTITY(1, 0 | (1))), 0u, 0u, 1u), (_GLF_IDENTITY(uvec4(uint(1), 0u, 0u, 1u), (_GLF_IDENTITY(uvec4(uint(1), 0u, 0u, 1u), uvec4(1u, 1u, _GLF_IDENTITY(1u, (1u) << 0u), 1u) * (uvec4(uint(1), 0u, 0u, 1u)))) ^ uvec4(0u, _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) >> 0u)) / 1u), 0u, 0u))) | (_GLF_IDENTITY(uvec4(uint(1), 0u, 0u, 1u), min(uvec4(uint(1), 0u, 0u, 1u), uvec4(uint(1), 0u, 0u, 1u)))))))) ^ 0u)), 0u, 0u, 1u), (uvec4(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(1, min(1, 1))), (uint(_GLF_IDENTITY(1, min(1, 1)))) >> 0u), uint(_GLF_IDENTITY(uvec4(uint(_GLF_IDENTITY(1, 0 | (1))), 0u, 0u, 1u), (_GLF_IDENTITY(uvec4(uint(1), 0u, 0u, 1u), (_GLF_IDENTITY(uvec4(uint(1), 0u, 0u, 1u), uvec4(1u, 1u, _GLF_IDENTITY(1u, (1u) << 0u), 1u) * (uvec4(uint(1), 0u, 0u, 1u)))) ^ uvec4(0u, _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) >> 0u)) / 1u), 0u, 0u))) | (_GLF_IDENTITY(uvec4(uint(1), 0u, 0u, 1u), min(uvec4(uint(1), 0u, 0u, 1u), uvec4(uint(1), 0u, 0u, 1u)))))))) ^ 0u, ((_GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(1, min(1, 1))), (uint(_GLF_IDENTITY(1, min(1, 1)))) >> 0u), uint(_GLF_IDENTITY(uvec4(uint(_GLF_IDENTITY(1, 0 | (1))), 0u, 0u, 1u), (_GLF_IDENTITY(uvec4(uint(1), 0u, 0u, 1u), (_GLF_IDENTITY(uvec4(uint(1), 0u, 0u, 1u), uvec4(1u, 1u, _GLF_IDENTITY(1u, (1u) << 0u), 1u) * (uvec4(uint(1), 0u, 0u, 1u)))) ^ uvec4(0u, _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) >> 0u)) / 1u), 0u, 0u))) | (_GLF_IDENTITY(uvec4(uint(1), 0u, 0u, 1u), min(uvec4(uint(1), 0u, 0u, 1u), uvec4(uint(1), 0u, 0u, 1u)))))))) ^ 0u) | ((_GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(1, min(1, 1))), (uint(_GLF_IDENTITY(1, min(1, 1)))) >> 0u), uint(_GLF_IDENTITY(uvec4(uint(_GLF_IDENTITY(1, 0 | (1))), 0u, 0u, 1u), (_GLF_IDENTITY(uvec4(uint(1), 0u, 0u, 1u), (_GLF_IDENTITY(uvec4(uint(1), 0u, 0u, 1u), uvec4(1u, 1u, _GLF_IDENTITY(1u, (1u) << 0u), 1u) * (uvec4(uint(1), 0u, 0u, 1u)))) ^ uvec4(0u, _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) >> 0u)) / 1u), 0u, 0u))) | (_GLF_IDENTITY(uvec4(uint(1), 0u, 0u, 1u), min(uvec4(uint(1), 0u, 0u, 1u), uvec4(uint(1), 0u, 0u, 1u)))))))) ^ 0u)), 0u, 0u, 1u)) >> uvec4(0u, 0u, 0u, 0u)))), (_GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(1, min(1, 1))), (uint(_GLF_IDENTITY(1, min(1, 1)))) >> 0u), uint(_GLF_IDENTITY(uvec4(uint(_GLF_IDENTITY(1, 0 | (1))), 0u, 0u, 1u), (_GLF_IDENTITY(uvec4(uint(1), 0u, 0u, 1u), (_GLF_IDENTITY(uvec4(uint(1), 0u, 0u, 1u), uvec4(1u, 1u, _GLF_IDENTITY(1u, (1u) << 0u), 1u) * (uvec4(uint(1), 0u, 0u, 1u)))) ^ uvec4(0u, _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) >> 0u)) / 1u), 0u, 0u))) | (_GLF_IDENTITY(uvec4(uint(1), 0u, 0u, 1u), min(uvec4(uint(1), 0u, 0u, 1u), uvec4(uint(1), 0u, 0u, 1u)))))))) ^ 0u)), min(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(1, min(1, 1))), (uint(_GLF_IDENTITY(1, min(1, 1)))) >> 0u), uint(_GLF_IDENTITY(uvec4(uint(_GLF_IDENTITY(1, 0 | (1))), 0u, 0u, 1u), (_GLF_IDENTITY(uvec4(uint(1), 0u, 0u, 1u), (_GLF_IDENTITY(uvec4(uint(1), 0u, 0u, 1u), uvec4(1u, 1u, _GLF_IDENTITY(1u, (1u) << 0u), 1u) * (uvec4(uint(1), 0u, 0u, 1u)))) ^ uvec4(0u, _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) >> 0u)) / 1u), 0u, 0u))) | (_GLF_IDENTITY(uvec4(uint(1), 0u, 0u, 1u), min(uvec4(uint(1), 0u, 0u, 1u), uvec4(uint(1), 0u, 0u, 1u)))))))) ^ 0u, max(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(1, min(1, 1))), (uint(_GLF_IDENTITY(1, min(1, 1)))) >> 0u), uint(_GLF_IDENTITY(uvec4(uint(_GLF_IDENTITY(1, 0 | (1))), 0u, 0u, 1u), (_GLF_IDENTITY(uvec4(uint(1), 0u, 0u, 1u), (_GLF_IDENTITY(uvec4(uint(1), 0u, 0u, 1u), uvec4(1u, 1u, _GLF_IDENTITY(1u, (1u) << 0u), 1u) * (uvec4(uint(1), 0u, 0u, 1u)))) ^ uvec4(0u, _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) >> 0u)) / 1u), 0u, 0u))) | (_GLF_IDENTITY(uvec4(uint(1), 0u, 0u, 1u), min(uvec4(uint(1), 0u, 0u, 1u), uvec4(uint(1), 0u, 0u, 1u)))))))) ^ 0u, uint(_GLF_IDENTITY(uvec4(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(1, min(1, 1))), (uint(_GLF_IDENTITY(1, min(1, 1)))) >> 0u), uint(_GLF_IDENTITY(uvec4(uint(_GLF_IDENTITY(1, 0 | (1))), 0u, 0u, 1u), (_GLF_IDENTITY(uvec4(uint(1), 0u, 0u, 1u), (_GLF_IDENTITY(uvec4(uint(1), 0u, 0u, 1u), uvec4(1u, 1u, _GLF_IDENTITY(1u, (1u) << 0u), 1u) * (uvec4(uint(1), 0u, 0u, 1u)))) ^ uvec4(0u, _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) >> 0u)) / 1u), 0u, 0u))) | (_GLF_IDENTITY(uvec4(uint(1), 0u, 0u, 1u), min(uvec4(uint(1), 0u, 0u, 1u), uvec4(uint(1), 0u, 0u, 1u)))))))) ^ 0u, ((_GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(1, min(1, 1))), (uint(_GLF_IDENTITY(1, min(1, 1)))) >> 0u), uint(_GLF_IDENTITY(uvec4(uint(_GLF_IDENTITY(1, 0 | (1))), 0u, 0u, 1u), (_GLF_IDENTITY(uvec4(uint(1), 0u, 0u, 1u), (_GLF_IDENTITY(uvec4(uint(1), 0u, 0u, 1u), uvec4(1u, 1u, _GLF_IDENTITY(1u, (1u) << 0u), 1u) * (uvec4(uint(1), 0u, 0u, 1u)))) ^ uvec4(0u, _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) >> 0u)) / 1u), 0u, 0u))) | (_GLF_IDENTITY(uvec4(uint(1), 0u, 0u, 1u), min(uvec4(uint(1), 0u, 0u, 1u), uvec4(uint(1), 0u, 0u, 1u)))))))) ^ 0u) | ((_GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(1, min(1, 1))), (uint(_GLF_IDENTITY(1, min(1, 1)))) >> 0u), uint(_GLF_IDENTITY(uvec4(uint(_GLF_IDENTITY(1, 0 | (1))), 0u, 0u, 1u), (_GLF_IDENTITY(uvec4(uint(1), 0u, 0u, 1u), (_GLF_IDENTITY(uvec4(uint(1), 0u, 0u, 1u), uvec4(1u, 1u, _GLF_IDENTITY(1u, (1u) << 0u), 1u) * (uvec4(uint(1), 0u, 0u, 1u)))) ^ uvec4(0u, _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) >> 0u)) / 1u), 0u, 0u))) | (_GLF_IDENTITY(uvec4(uint(1), 0u, 0u, 1u), min(uvec4(uint(1), 0u, 0u, 1u), uvec4(uint(1), 0u, 0u, 1u)))))))) ^ 0u)), 0u, 0u, 1u), (uvec4(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(1, min(1, 1))), (uint(_GLF_IDENTITY(1, min(1, 1)))) >> 0u), uint(_GLF_IDENTITY(uvec4(uint(_GLF_IDENTITY(1, 0 | (1))), 0u, 0u, 1u), (_GLF_IDENTITY(uvec4(uint(1), 0u, 0u, 1u), (_GLF_IDENTITY(uvec4(uint(1), 0u, 0u, 1u), uvec4(1u, 1u, _GLF_IDENTITY(1u, (1u) << 0u), 1u) * (uvec4(uint(1), 0u, 0u, 1u)))) ^ uvec4(0u, _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) >> 0u)) / 1u), 0u, 0u))) | (_GLF_IDENTITY(uvec4(uint(1), 0u, 0u, 1u), min(uvec4(uint(1), 0u, 0u, 1u), uvec4(uint(1), 0u, 0u, 1u)))))))) ^ 0u, ((_GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(1, min(1, 1))), (uint(_GLF_IDENTITY(1, min(1, 1)))) >> 0u), uint(_GLF_IDENTITY(uvec4(uint(_GLF_IDENTITY(1, 0 | (1))), 0u, 0u, 1u), (_GLF_IDENTITY(uvec4(uint(1), 0u, 0u, 1u), (_GLF_IDENTITY(uvec4(uint(1), 0u, 0u, 1u), uvec4(1u, 1u, _GLF_IDENTITY(1u, (1u) << 0u), 1u) * (uvec4(uint(1), 0u, 0u, 1u)))) ^ uvec4(0u, _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) >> 0u)) / 1u), 0u, 0u))) | (_GLF_IDENTITY(uvec4(uint(1), 0u, 0u, 1u), min(uvec4(uint(1), 0u, 0u, 1u), uvec4(uint(1), 0u, 0u, 1u)))))))) ^ 0u) | ((_GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(1, min(1, 1))), (uint(_GLF_IDENTITY(1, min(1, 1)))) >> 0u), uint(_GLF_IDENTITY(uvec4(uint(_GLF_IDENTITY(1, 0 | (1))), 0u, 0u, 1u), (_GLF_IDENTITY(uvec4(uint(1), 0u, 0u, 1u), (_GLF_IDENTITY(uvec4(uint(1), 0u, 0u, 1u), uvec4(1u, 1u, _GLF_IDENTITY(1u, (1u) << 0u), 1u) * (uvec4(uint(1), 0u, 0u, 1u)))) ^ uvec4(0u, _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) >> 0u)) / 1u), 0u, 0u))) | (_GLF_IDENTITY(uvec4(uint(1), 0u, 0u, 1u), min(uvec4(uint(1), 0u, 0u, 1u), uvec4(uint(1), 0u, 0u, 1u)))))))) ^ 0u)), 0u, 0u, 1u)) >> uvec4(0u, 0u, 0u, 0u)))), (_GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(1, min(1, 1))), (uint(_GLF_IDENTITY(1, min(1, 1)))) >> 0u), uint(_GLF_IDENTITY(uvec4(uint(_GLF_IDENTITY(1, 0 | (1))), 0u, 0u, 1u), (_GLF_IDENTITY(uvec4(uint(1), 0u, 0u, 1u), (_GLF_IDENTITY(uvec4(uint(1), 0u, 0u, 1u), uvec4(1u, 1u, _GLF_IDENTITY(1u, (1u) << 0u), 1u) * (uvec4(uint(1), 0u, 0u, 1u)))) ^ uvec4(0u, _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) >> 0u)) / 1u), 0u, 0u))) | (_GLF_IDENTITY(uvec4(uint(1), 0u, 0u, 1u), min(uvec4(uint(1), 0u, 0u, 1u), uvec4(uint(1), 0u, 0u, 1u)))))))) ^ 0u)), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(1, min(1, 1))), (uint(_GLF_IDENTITY(1, min(1, 1)))) >> 0u), uint(_GLF_IDENTITY(uvec4(uint(_GLF_IDENTITY(1, 0 | (1))), 0u, 0u, 1u), (_GLF_IDENTITY(uvec4(uint(1), 0u, 0u, 1u), (_GLF_IDENTITY(uvec4(uint(1), 0u, 0u, 1u), uvec4(1u, 1u, _GLF_IDENTITY(1u, (1u) << 0u), 1u) * (uvec4(uint(1), 0u, 0u, 1u)))) ^ uvec4(0u, _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) >> 0u)) / 1u), 0u, 0u))) | (_GLF_IDENTITY(uvec4(uint(1), 0u, 0u, 1u), min(uvec4(uint(1), 0u, 0u, 1u), uvec4(uint(1), 0u, 0u, 1u)))))))) ^ 0u, max(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(1, min(1, 1))), (uint(_GLF_IDENTITY(1, min(1, 1)))) >> 0u), uint(_GLF_IDENTITY(uvec4(uint(_GLF_IDENTITY(1, 0 | (1))), 0u, 0u, 1u), (_GLF_IDENTITY(uvec4(uint(1), 0u, 0u, 1u), (_GLF_IDENTITY(uvec4(uint(1), 0u, 0u, 1u), uvec4(1u, 1u, _GLF_IDENTITY(1u, (1u) << 0u), 1u) * (uvec4(uint(1), 0u, 0u, 1u)))) ^ uvec4(0u, _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) >> 0u)) / 1u), 0u, 0u))) | (_GLF_IDENTITY(uvec4(uint(1), 0u, 0u, 1u), min(uvec4(uint(1), 0u, 0u, 1u), uvec4(uint(1), 0u, 0u, 1u)))))))) ^ 0u, uint(_GLF_IDENTITY(uvec4(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(1, min(1, 1))), (uint(_GLF_IDENTITY(1, min(1, 1)))) >> 0u), uint(_GLF_IDENTITY(uvec4(uint(_GLF_IDENTITY(1, 0 | (1))), 0u, 0u, 1u), (_GLF_IDENTITY(uvec4(uint(1), 0u, 0u, 1u), (_GLF_IDENTITY(uvec4(uint(1), 0u, 0u, 1u), uvec4(1u, 1u, _GLF_IDENTITY(1u, (1u) << 0u), 1u) * (uvec4(uint(1), 0u, 0u, 1u)))) ^ uvec4(0u, _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) >> 0u)) / 1u), 0u, 0u))) | (_GLF_IDENTITY(uvec4(uint(1), 0u, 0u, 1u), min(uvec4(uint(1), 0u, 0u, 1u), uvec4(uint(1), 0u, 0u, 1u)))))))) ^ 0u, ((_GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(1, min(1, 1))), (uint(_GLF_IDENTITY(1, min(1, 1)))) >> 0u), uint(_GLF_IDENTITY(uvec4(uint(_GLF_IDENTITY(1, 0 | (1))), 0u, 0u, 1u), (_GLF_IDENTITY(uvec4(uint(1), 0u, 0u, 1u), (_GLF_IDENTITY(uvec4(uint(1), 0u, 0u, 1u), uvec4(1u, 1u, _GLF_IDENTITY(1u, (1u) << 0u), 1u) * (uvec4(uint(1), 0u, 0u, 1u)))) ^ uvec4(0u, _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) >> 0u)) / 1u), 0u, 0u))) | (_GLF_IDENTITY(uvec4(uint(1), 0u, 0u, 1u), min(uvec4(uint(1), 0u, 0u, 1u), uvec4(uint(1), 0u, 0u, 1u)))))))) ^ 0u) | ((_GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(1, min(1, 1))), (uint(_GLF_IDENTITY(1, min(1, 1)))) >> 0u), uint(_GLF_IDENTITY(uvec4(uint(_GLF_IDENTITY(1, 0 | (1))), 0u, 0u, 1u), (_GLF_IDENTITY(uvec4(uint(1), 0u, 0u, 1u), (_GLF_IDENTITY(uvec4(uint(1), 0u, 0u, 1u), uvec4(1u, 1u, _GLF_IDENTITY(1u, (1u) << 0u), 1u) * (uvec4(uint(1), 0u, 0u, 1u)))) ^ uvec4(0u, _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) >> 0u)) / 1u), 0u, 0u))) | (_GLF_IDENTITY(uvec4(uint(1), 0u, 0u, 1u), min(uvec4(uint(1), 0u, 0u, 1u), uvec4(uint(1), 0u, 0u, 1u)))))))) ^ 0u)), 0u, 0u, 1u), (uvec4(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(1, min(1, 1))), (uint(_GLF_IDENTITY(1, min(1, 1)))) >> 0u), uint(_GLF_IDENTITY(uvec4(uint(_GLF_IDENTITY(1, 0 | (1))), 0u, 0u, 1u), (_GLF_IDENTITY(uvec4(uint(1), 0u, 0u, 1u), (_GLF_IDENTITY(uvec4(uint(1), 0u, 0u, 1u), uvec4(1u, 1u, _GLF_IDENTITY(1u, (1u) << 0u), 1u) * (uvec4(uint(1), 0u, 0u, 1u)))) ^ uvec4(0u, _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) >> 0u)) / 1u), 0u, 0u))) | (_GLF_IDENTITY(uvec4(uint(1), 0u, 0u, 1u), min(uvec4(uint(1), 0u, 0u, 1u), uvec4(uint(1), 0u, 0u, 1u)))))))) ^ 0u, ((_GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(1, min(1, 1))), (uint(_GLF_IDENTITY(1, min(1, 1)))) >> 0u), uint(_GLF_IDENTITY(uvec4(uint(_GLF_IDENTITY(1, 0 | (1))), 0u, 0u, 1u), (_GLF_IDENTITY(uvec4(uint(1), 0u, 0u, 1u), (_GLF_IDENTITY(uvec4(uint(1), 0u, 0u, 1u), uvec4(1u, 1u, _GLF_IDENTITY(1u, (1u) << 0u), 1u) * (uvec4(uint(1), 0u, 0u, 1u)))) ^ uvec4(0u, _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) >> 0u)) / 1u), 0u, 0u))) | (_GLF_IDENTITY(uvec4(uint(1), 0u, 0u, 1u), min(uvec4(uint(1), 0u, 0u, 1u), uvec4(uint(1), 0u, 0u, 1u)))))))) ^ 0u) | ((_GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(1, min(1, 1))), (uint(_GLF_IDENTITY(1, min(1, 1)))) >> 0u), uint(_GLF_IDENTITY(uvec4(uint(_GLF_IDENTITY(1, 0 | (1))), 0u, 0u, 1u), (_GLF_IDENTITY(uvec4(uint(1), 0u, 0u, 1u), (_GLF_IDENTITY(uvec4(uint(1), 0u, 0u, 1u), uvec4(1u, 1u, _GLF_IDENTITY(1u, (1u) << 0u), 1u) * (uvec4(uint(1), 0u, 0u, 1u)))) ^ uvec4(0u, _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) >> 0u)) / 1u), 0u, 0u))) | (_GLF_IDENTITY(uvec4(uint(1), 0u, 0u, 1u), min(uvec4(uint(1), 0u, 0u, 1u), uvec4(uint(1), 0u, 0u, 1u)))))))) ^ 0u)), 0u, 0u, 1u)) >> uvec4(0u, 0u, 0u, 0u)))), (_GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(1, min(1, 1))), (uint(_GLF_IDENTITY(1, min(1, 1)))) >> 0u), uint(_GLF_IDENTITY(uvec4(uint(_GLF_IDENTITY(1, 0 | (1))), 0u, 0u, 1u), (_GLF_IDENTITY(uvec4(uint(1), 0u, 0u, 1u), (_GLF_IDENTITY(uvec4(uint(1), 0u, 0u, 1u), uvec4(1u, 1u, _GLF_IDENTITY(1u, (1u) << 0u), 1u) * (uvec4(uint(1), 0u, 0u, 1u)))) ^ uvec4(0u, _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) >> 0u)) / 1u), 0u, 0u))) | (_GLF_IDENTITY(uvec4(uint(1), 0u, 0u, 1u), min(uvec4(uint(1), 0u, 0u, 1u), uvec4(uint(1), 0u, 0u, 1u)))))))) ^ 0u))))))), (_GLF_IDENTITY(uint(1), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(uint(1), uint(uvec4(uint(1), 0u, 0u, 1u))), 0u | (_GLF_IDENTITY(uint(1), uint(uvec4(uint(1), 0u, 0u, 1u)))))), ((97312u >> 40363u) & 0u) ^ ((_GLF_IDENTITY(_GLF_IDENTITY(uint(1), uint(uvec4(uint(1), 0u, 0u, 1u))), 0u | (_GLF_IDENTITY(uint(1), uint(uvec4(uint(1), 0u, 0u, 1u)))))))) ^ 0u)) * 1u), 4, 64, 4);
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)))) > injectionSwitch.y)) || (_GLF_IDENTITY(false, _GLF_IDENTITY((_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec2(bvec2(false, false))))))) || false, _GLF_IDENTITY(false || ((_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, ! (! (false))), false), bvec2(bvec2(bvec2(false, false))))))) || _GLF_IDENTITY(false, true && (false))), ! (_GLF_IDENTITY(! (false || ((_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec2(bvec2(false, false))))))) || _GLF_IDENTITY(false, true && (false)))), bool(bvec4(! (false || ((_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec2(bvec2(false, false))))))) || _GLF_IDENTITY(false, true && (false)))), false, false, false))))))))), (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            barrier();
           return;
          }
         if(_GLF_DEAD(false))
          return;
         barrier();
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(false))
          barrier();
        }
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(false))
        return;
       barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(_GLF_IDENTITY(float(_GLF_IDENTITY(mat3x2(injectionSwitch.y, 1.0, 0.0, 0.0, 0.0, 1.0), mat3x2(0.0, 0.0, 0.0, 0.0, 0.0, 0.0) + (mat3x2(injectionSwitch.y, 1.0, 0.0, 0.0, 0.0, 1.0)))), clamp(float(_GLF_IDENTITY(mat3x2(injectionSwitch.y, 1.0, 0.0, 0.0, 0.0, 1.0), mat3x2(0.0, 0.0, 0.0, 0.0, 0.0, 0.0) + (mat3x2(injectionSwitch.y, 1.0, 0.0, 0.0, 0.0, 1.0)))), float(_GLF_IDENTITY(mat3x2(injectionSwitch.y, 1.0, 0.0, 0.0, 0.0, 1.0), mat3x2(0.0, 0.0, 0.0, 0.0, 0.0, 0.0) + (mat3x2(injectionSwitch.y, 1.0, 0.0, 0.0, 0.0, 1.0)))), float(_GLF_IDENTITY(mat3x2(injectionSwitch.y, 1.0, 0.0, 0.0, 0.0, 1.0), mat3x2(0.0, 0.0, 0.0, 0.0, 0.0, 0.0) + (mat3x2(injectionSwitch.y, 1.0, 0.0, 0.0, 0.0, 1.0)))))), _GLF_IDENTITY(float(vec4(_GLF_IDENTITY(float(_GLF_IDENTITY(mat3x2(injectionSwitch.y, 1.0, 0.0, 0.0, 0.0, 1.0), mat3x2(0.0, 0.0, 0.0, 0.0, 0.0, 0.0) + (mat3x2(injectionSwitch.y, 1.0, 0.0, 0.0, 0.0, 1.0)))), clamp(float(_GLF_IDENTITY(mat3x2(injectionSwitch.y, 1.0, 0.0, 0.0, 0.0, 1.0), mat3x2(0.0, 0.0, 0.0, 0.0, 0.0, 0.0) + (mat3x2(injectionSwitch.y, 1.0, 0.0, 0.0, 0.0, 1.0)))), float(_GLF_IDENTITY(mat3x2(injectionSwitch.y, 1.0, 0.0, 0.0, 0.0, 1.0), mat3x2(0.0, 0.0, 0.0, 0.0, 0.0, 0.0) + (mat3x2(injectionSwitch.y, 1.0, 0.0, 0.0, 0.0, 1.0)))), float(_GLF_IDENTITY(mat3x2(injectionSwitch.y, 1.0, 0.0, 0.0, 0.0, 1.0), mat3x2(0.0, 0.0, 0.0, 0.0, 0.0, 0.0) + (mat3x2(injectionSwitch.y, 1.0, 0.0, 0.0, 0.0, 1.0)))))), 0.0, 0.0, 0.0)), (true ? float(vec4(_GLF_IDENTITY(float(_GLF_IDENTITY(mat3x2(injectionSwitch.y, 1.0, 0.0, 0.0, 0.0, 1.0), mat3x2(0.0, 0.0, 0.0, 0.0, 0.0, 0.0) + (mat3x2(injectionSwitch.y, 1.0, 0.0, 0.0, 0.0, 1.0)))), clamp(float(_GLF_IDENTITY(mat3x2(injectionSwitch.y, 1.0, 0.0, 0.0, 0.0, 1.0), mat3x2(0.0, 0.0, 0.0, 0.0, 0.0, 0.0) + (mat3x2(injectionSwitch.y, 1.0, 0.0, 0.0, 0.0, 1.0)))), float(_GLF_IDENTITY(mat3x2(injectionSwitch.y, 1.0, 0.0, 0.0, 0.0, 1.0), mat3x2(0.0, 0.0, 0.0, 0.0, 0.0, 0.0) + (mat3x2(injectionSwitch.y, 1.0, 0.0, 0.0, 0.0, 1.0)))), float(_GLF_IDENTITY(mat3x2(injectionSwitch.y, 1.0, 0.0, 0.0, 0.0, 1.0), mat3x2(0.0, 0.0, 0.0, 0.0, 0.0, 0.0) + (mat3x2(injectionSwitch.y, 1.0, 0.0, 0.0, 0.0, 1.0)))))), 0.0, 0.0, 0.0)) : _GLF_FUZZED(-7918.2941)))))))))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
          {
           if(_GLF_DEAD(false))
            return;
           barrier();
          }
         if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true)) || false))
          return;
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
           if(_GLF_DEAD(false))
            return;
           if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + 0.0)))))
            barrier();
           return;
          }
         barrier();
         if(_GLF_DEAD(false))
          return;
        }
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(4606.0288) : injectionSwitch.x)) > injectionSwitch.y, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(4606.0288) : injectionSwitch.x)) > injectionSwitch.y, true && (_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(4606.0288) : injectionSwitch.x)) > injectionSwitch.y))) || false)))))
      return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y))), true && (_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y))), bool(bvec4(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y))), true, true, false))))))))
        return;
       return;
      }
     barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(vec4(431.910, 1.1, -600.092, -4.3).q), _GLF_FUZZED(vec3(-136.156, -6055.3329, 72.27).p)), bvec2(false, false))))), mix(vec2((_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(vec4(431.910, 1.1, -600.092, -4.3).q), _GLF_FUZZED(vec3(-136.156, -6055.3329, 72.27).p)), bvec2(false, false))))))[0], _GLF_FUZZED(vec4(8.1, -297.096, 6712.9772, 0.9).w)), vec2(_GLF_FUZZED(float(65508u)), (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(vec4(431.910, 1.1, -600.092, -4.3).q), _GLF_FUZZED(vec3(-136.156, -6055.3329, 72.27).p)), bvec2(false, false))))))[1]), bvec2(false, true))), (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(vec4(431.910, 1.1, -600.092, -4.3).q), _GLF_FUZZED(vec3(-136.156, -6055.3329, 72.27).p)), bvec2(false, false)))))) / vec2(1.0, 1.0)).x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY(0u, _GLF_IDENTITY(uint(uint(0u)), max(uint(uint(0u)), uint(uint(0u))))) ^ (subgroup_local_id)) + 1 < _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (false ? _GLF_FUZZED(workgroup_size) : subgroup_size)), (_GLF_IDENTITY(subgroup_size, (false ? _GLF_FUZZED(workgroup_size) : subgroup_size))) >> 0u))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   atomicStore(buf[_GLF_IDENTITY(next_virtual_gid, (false ? _GLF_FUZZED(workgroup_size) : next_virtual_gid))], _GLF_IDENTITY(uint(2), clamp(uint(2), uint(2), uint(2))), 4, 64, 4);
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch)).y))))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) || false)) && true)))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(759.727) : _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat3x4(injectionSwitch, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, sqrt(1.0), determinant(mat2(0.0, 0.0, _GLF_IDENTITY(dot(vec3(0.0, 1.0, 1.0), vec3(1.0, 0.0, 0.0)), dot(vec3(0.0, 1.0, 1.0), vec3(1.0, 0.0, 0.0))), 0.0)), determinant(mat4(0.0, log(1.0), 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(6.3)), float(0.0), bool(true))), 0.0, log(_GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), _GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(4192.4705)))))), 0.0, 1.0, 0.0, 1.0, 0.0)))), clamp(vec2(mat3x4(injectionSwitch, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(sqrt(1.0), min(_GLF_IDENTITY(sqrt(1.0), (sqrt(1.0)) - 0.0), sqrt(1.0))), determinant(mat2(0.0, 0.0, _GLF_IDENTITY(dot(vec3(0.0, _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), 1.0), vec3(1.0, 0.0, 0.0)), dot(vec3(0.0, 1.0, 1.0), vec3(1.0, 0.0, _GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, _GLF_IDENTITY(float(mat4(0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, exp(0.0), 1.0, 0.0, 0.0, 0.0, 0.0)), (float(mat4(0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, exp(0.0), 1.0, 0.0, 0.0, 0.0, 0.0))) - 0.0)), 0.0))))), 0.0)), determinant(mat4(0.0, log(1.0), 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, log(1.0), 0.0, 1.0, 0.0, 1.0, 0.0)))), vec2(mat3x4(injectionSwitch, 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED((vec3(5.5, -987.226, 9.1)).s)), float(0.0), bool(true))), 1.0, 0.0, 0.0, sqrt(1.0), determinant(mat2(0.0, 0.0, _GLF_IDENTITY(dot(vec3(0.0, 1.0, 1.0), vec3(1.0, 0.0, 0.0)), dot(vec3(0.0, 1.0, 1.0), vec3(1.0, 0.0, 0.0))), 0.0)), determinant(mat4(_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-915.585))), log(1.0), 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, log(1.0), 0.0, 1.0, 0.0, 1.0, 0.0)))), vec2(mat3x4(injectionSwitch, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, sqrt(1.0), determinant(mat2(0.0, 0.0, _GLF_IDENTITY(dot(vec3(0.0, 1.0, _GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(1.8)))), vec3(1.0, 0.0, 0.0)), dot(vec3(0.0, 1.0, 1.0), vec3(1.0, 0.0, 0.0))), 0.0)), determinant(mat4(0.0, log(1.0), 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, log(1.0), 0.0, 1.0, 0.0, 1.0, 0.0))))))).x)) > injectionSwitch.y))))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   subgroupAll(false);
   if(_GLF_DEAD(false))
    barrier();
  }
 else
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
        return;
       if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
        {
         if(_GLF_DEAD(false))
          return;
         barrier();
        }
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)), ! (! (_GLF_DEAD(false)))), ! (! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))), _GLF_IDENTITY(! (! (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))), ! (! (! (! (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false))))))))))), ! (! ((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))), _GLF_IDENTITY(! (! (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))), ! (! (! (! (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false))))))))))))))))))))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     return;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, _GLF_IDENTITY(false, false || (false)), false, true)))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
      return;
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || _GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(false ? _GLF_FUZZED(vec2(6131.3735, 484.421)) : _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-8060.0553), _GLF_FUZZED(21.56)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))), vec2(1.0, 1.0) * (_GLF_IDENTITY(false ? _GLF_FUZZED(vec2(6131.3735, 484.421)) : _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-8060.0553), _GLF_FUZZED(21.56)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))), (false ? _GLF_FUZZED(vec2(6131.3735, 484.421)) : _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-8060.0553), _GLF_FUZZED(21.56)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true)))) / vec2(1.0, 1.0))))))) - vec2(0.0, 0.0)), injectionSwitch)).y))), false || ((_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (true ? _GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * 1.0), injectionSwitch.x)) : _GLF_FUZZED(3366.6529))) > injectionSwitch.y))))))))
    barrier();
   atomicStore(buf[_GLF_IDENTITY(next_virtual_gid, (true ? next_virtual_gid : _GLF_FUZZED(atomicOr(workgroup_id, workgroup_base))))], uint(2), 4, 64, 4);
   subgroupAll(true);
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
    barrier();
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(-701.173)), bool(false)))) + 0.0))), bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(-701.173)), bool(false)))) + 0.0))), false, true)))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && true), false, false, true)), false || (bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && true), false, false, true)))), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && true), false, false, true)), false || (bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && true), false, false, true)))), true, false, false)), (bool(bvec4(_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && true), false, false, true)), false || (bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && true), false, false, true)))), true, false, false))) || false))))
          return;
         if(_GLF_DEAD(false))
          barrier();
         return;
        }
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
      barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || _GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), (false) || false)))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, false, true, true)))))
          {
           if(_GLF_DEAD(false))
            barrier();
           return;
          }
         barrier();
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, true, true, true)))))
            {
             if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
              {
               if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(vec3(injectionSwitch.x, 1.0, round(length(normalize(vec2(1.0, 1.0)))))), max(_GLF_IDENTITY(float(vec3(injectionSwitch.x, 1.0, round(length(normalize(vec2(1.0, 1.0)))))), clamp(float(vec3(injectionSwitch.x, 1.0, round(length(normalize(vec2(1.0, 1.0)))))), float(vec3(injectionSwitch.x, 1.0, round(length(normalize(vec2(1.0, 1.0)))))), float(vec3(injectionSwitch.x, 1.0, round(length(normalize(vec2(1.0, 1.0)))))))), float(vec3(injectionSwitch.x, 1.0, round(length(normalize(vec2(1.0, 1.0))))))))) > injectionSwitch.y))))
                barrier();
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                return;
               barrier();
              }
             return;
            }
           return;
          }
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         if(_GLF_DEAD(false))
          barrier();
         return;
         if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y)))) || false))))
          return;
        }
       return;
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), _GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), (bool(bool(false))) || false)) || (! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))) && true))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         return;
        }
       return;
      }
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, _GLF_IDENTITY((_GLF_IDENTITY(false, ! (! (false)))) || false, bool(bvec3((_GLF_IDENTITY(false, ! (! (false)))) || false, _GLF_IDENTITY(false, (false) || false), true))))) || false))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(false || (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(_GLF_IDENTITY(mat3x2(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), 1.0, 1.0, 1.0, 0.0), transpose(transpose(mat3x2(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), 1.0, 1.0, 1.0, 0.0))))), clamp(vec2(_GLF_IDENTITY(mat3x2(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), 1.0, 1.0, 1.0, 0.0), transpose(transpose(mat3x2(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), 1.0, 1.0, 1.0, 0.0))))), _GLF_IDENTITY(vec2(_GLF_IDENTITY(mat3x2(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), 1.0, 1.0, 1.0, 0.0), transpose(transpose(mat3x2(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), 1.0, 1.0, 1.0, 0.0))))), clamp(vec2(_GLF_IDENTITY(mat3x2(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), 1.0, 1.0, 1.0, 0.0), transpose(transpose(mat3x2(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), 1.0, 1.0, 1.0, 0.0))))), vec2(_GLF_IDENTITY(mat3x2(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), 1.0, 1.0, 1.0, 0.0), transpose(transpose(mat3x2(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), 1.0, 1.0, 1.0, 0.0))))), vec2(_GLF_IDENTITY(mat3x2(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), 1.0, 1.0, 1.0, 0.0), transpose(transpose(mat3x2(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), 1.0, 1.0, 1.0, 0.0))))))), vec2(_GLF_IDENTITY(mat3x2(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), 1.0, 1.0, 1.0, 0.0), transpose(transpose(mat3x2(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), 1.0, 1.0, 1.0, 0.0)))))))).y), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false || (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bool(injectionSwitch.x > injectionSwitch.y)))), (bool(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bool(injectionSwitch.x > injectionSwitch.y))))) && true)))))), false || (false || (injectionSwitch.x > injectionSwitch.y)))), bool(bool(! (_GLF_IDENTITY(false || (injectionSwitch.x > injectionSwitch.y), false || (false || (injectionSwitch.x > injectionSwitch.y))))))))))))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     return;
     if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))
      barrier();
    }
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))), (_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false))))) && true))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     return;
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_DEAD(false)))))
    barrier();
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     barrier();
    }
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y))))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    return;
   barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(_GLF_IDENTITY(false, (false) || false), (injectionSwitch.x > injectionSwitch.y)))))))
    return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(_GLF_IDENTITY(vec3(injectionSwitch.y, 0.0, 1.0), clamp(vec3(injectionSwitch.y, 0.0, 1.0), vec3(injectionSwitch.y, 0.0, 1.0), _GLF_IDENTITY(vec3(injectionSwitch.y, 0.0, 1.0), mix(vec3((vec3(injectionSwitch.y, 0.0, 1.0))[0], (vec3(injectionSwitch.y, 0.0, 1.0))[1], _GLF_FUZZED(2827.2536)), vec3(_GLF_FUZZED(617.031), _GLF_FUZZED(-8.1), (vec3(injectionSwitch.y, 0.0, 1.0))[2]), bvec3(false, false, true)))))), mix(float(float(_GLF_IDENTITY(vec3(injectionSwitch.y, 0.0, 1.0), clamp(vec3(injectionSwitch.y, 0.0, 1.0), vec3(injectionSwitch.y, 0.0, 1.0), _GLF_IDENTITY(vec3(injectionSwitch.y, 0.0, 1.0), mix(vec3((vec3(injectionSwitch.y, 0.0, 1.0))[0], (vec3(injectionSwitch.y, 0.0, 1.0))[1], _GLF_FUZZED(2827.2536)), vec3(_GLF_FUZZED(617.031), _GLF_FUZZED(-8.1), (vec3(injectionSwitch.y, 0.0, 1.0))[2]), bvec3(false, false, true))))))), float(_GLF_FUZZED(-235.781)), bool(false))))))))
  {
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * 1.0), max(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * 1.0), _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * 1.0))), (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * 1.0)) / 1.0) > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
   if(_GLF_DEAD(false))
    return;
  }
}
