#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter, (_injected_loop_counter) + 0) < 1); _GLF_IDENTITY(_injected_loop_counter ++, (true ? _GLF_IDENTITY(_injected_loop_counter ++, 0 | (_injected_loop_counter ++)) : _GLF_FUZZED(-36674))))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), false, false, true))), false)), (bool(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), false, false, true))), false))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))
    barrier();
   if(_GLF_DEAD(false))
    continue;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 uint subgroup_id = gl_SubgroupID;
 do
  {
   if(_GLF_DEAD(false))
    barrier();
  }
 while(_GLF_WRAPPED_LOOP(false));
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  barrier();
 for(int _injected_loop_counter = int(_GLF_ONE(1.0, injectionSwitch.y)); _GLF_WRAPPED_LOOP(_injected_loop_counter > int(_GLF_ZERO(0.0, injectionSwitch.x))); _GLF_IDENTITY(_injected_loop_counter --, (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + 0.0))) ? _GLF_FUZZED(61042) : _GLF_IDENTITY(_GLF_IDENTITY(_injected_loop_counter --, (_injected_loop_counter --) / 1), (_GLF_IDENTITY(_injected_loop_counter --, (_injected_loop_counter --) / 1)) >> 0))))
  {
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y))), ! (! (_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], (injectionSwitch[0]) / 1.0), injectionSwitch[1])).x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y)))))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     if(_GLF_DEAD(false))
      barrier();
    }
   else
    {
    }
  }
 else
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + 0.0) > injectionSwitch.y))))
    {
     do
      {
       if(_GLF_DEAD(false))
        return;
      }
     while(_GLF_WRAPPED_LOOP(false));
     for(int _injected_loop_counter = _GLF_IDENTITY(1, clamp(1, 1, 1)); _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter, (_injected_loop_counter) << 0) != 0); _injected_loop_counter --)
      {
       if(_GLF_DEAD(false))
        break;
       return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
    }
  }
 if(_GLF_WRAPPED_IF_FALSE(false))
  {
  }
 else
  {
   for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        break;
       barrier();
      }
    }
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y))))
    {
    }
   else
    {
     barrier();
    }
  }
 for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != (((1 << _GLF_IDENTITY(int(4), int(4))) >> _GLF_IDENTITY(int(4), int(4))) | 1)); _injected_loop_counter ++)
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 for(int _injected_loop_counter = _GLF_IDENTITY(0, _GLF_IDENTITY(int(ivec3(0, 0, 1)), (int(ivec3(0, 0, 1))) | (int(ivec3(0, 0, 1))))); _GLF_WRAPPED_LOOP(_injected_loop_counter < _GLF_IDENTITY(1, (1) | 0)); _injected_loop_counter ++)
  {
   if(_GLF_DEAD(false))
    continue;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     continue;
    }
   do
    {
     if(_GLF_DEAD(false))
      break;
     if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))
      barrier();
    }
   while(_GLF_WRAPPED_LOOP(false));
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       barrier();
      }
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
      }
     else
      {
       do
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _GLF_IDENTITY(_injected_loop_counter --, (_injected_loop_counter --) + 0))
          {
           if(_GLF_DEAD(false))
            continue;
           if(_GLF_DEAD(false))
            barrier();
          }
         return;
        }
       while(_GLF_WRAPPED_LOOP(false));
      }
     for(int _injected_loop_counter = _GLF_IDENTITY(1, 0 + (_GLF_IDENTITY(1, clamp(1, 1, 1)))); _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
        {
         if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
          }
         else
          {
           barrier();
          }
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          continue;
        }
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_WRAPPED_IF_TRUE(true))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            continue;
           barrier();
          }
        }
       else
        {
         if(_GLF_DEAD(false))
          break;
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        break;
       break;
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_WRAPPED_IF_TRUE(true))
        {
         if(_GLF_DEAD(false))
          continue;
         barrier();
        }
       else
        {
        }
      }
    }
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) && true), (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, true && (false)), _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true))))
  return;
 uint num_workgroup = gl_NumWorkGroups.x;
 do
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY((false), true && ((false))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))
    break;
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, false || (false)), (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, false || (false)), (injectionSwitch.x > injectionSwitch.y)))) && true))
    barrier();
  }
 while(_GLF_WRAPPED_LOOP(false));
 uint workgroup_size = gl_WorkGroupSize.x;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY((false) && true, bool(_GLF_IDENTITY(bvec3((false) && true, false, false), bvec3(bvec3(bvec3((false) && true, false, false)))))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY((false) && true, bool(_GLF_IDENTITY(bvec3((false) && true, false, false), bvec3(bvec3(bvec3((false) && true, false, false)))))), ! (! (_GLF_IDENTITY((false) && true, bool(_GLF_IDENTITY(bvec3((false) && true, false, false), _GLF_IDENTITY(bvec3(bvec3(bvec3((_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, bool(bool(false)))))))) && true, false, false))), bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(bvec3(bvec3((_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, bool(bool(false)))))))) && true, false, false))), _GLF_IDENTITY(bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec3(bvec3((_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, bool(bool(false)))))))) && true, false, false))), bvec3(bvec4(bvec3(bvec3(bvec3((_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, bool(bool(false)))))))) && true, false, false))), true))), false)), bvec3(bvec3(bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec3(bvec3((_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, bool(bool(false)))))))) && true, false, false))), bvec3(bvec4(bvec3(bvec3(bvec3((_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, bool(bool(false)))))))) && true, false, false))), true))), false))))))), bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec3(bvec3((_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, bool(bool(false)))))))) && true, false, false))), _GLF_IDENTITY(bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec3(bvec3((_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, bool(bool(false)))))))) && true, false, false))), bvec3(bvec4(bvec3(bvec3(bvec3((_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, bool(bool(false)))))))) && true, false, false))), true))), false)), bvec3(bvec3(bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec3(bvec3((_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, bool(bool(false)))))))) && true, false, false))), bvec3(bvec4(bvec3(bvec3(bvec3((_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, bool(bool(false)))))))) && true, false, false))), true))), false)))))))))))))))))))))), (injectionSwitch.x > injectionSwitch.y)), false || _GLF_IDENTITY((_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(false || ((injectionSwitch.x > injectionSwitch.y)), true && (false || (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec2(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y)), false, false, false)), ! (! (bool(bvec4(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y)), false, false, false))))))), ((injectionSwitch.x > injectionSwitch.y)) || false), true)))))))), ! (! _GLF_IDENTITY((_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)).x > injectionSwitch.y))), false || ((_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)).x > injectionSwitch.y)))))))), false || (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(false || ((injectionSwitch.x > injectionSwitch.y)), true && (false || (_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec2(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false), true))), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec2(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false), true)))) || false)))))), ! (! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)).x > injectionSwitch.y)))))), _GLF_IDENTITY(((_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(false || ((injectionSwitch.x > injectionSwitch.y)), true && (false || (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec2(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false), true)))))))), ! (! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)).x > injectionSwitch.y))))))) && true, _GLF_IDENTITY(bool(bvec3(((_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(false || ((injectionSwitch.x > injectionSwitch.y)), true && (false || (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec2(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false), true)))))))), ! (! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)).x > injectionSwitch.y))))))) && true, false, true)), false || (bool(bvec3(((_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(false || ((injectionSwitch.x > injectionSwitch.y)), true && (false || (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec2(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false), true)))))))), ! (! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)).x > injectionSwitch.y))))))) && true, false, true)))))))))))
  {
   for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter != 1, _GLF_IDENTITY(bool(bvec4(_injected_loop_counter != 1, false, false, false)), (bool(bvec4(_injected_loop_counter != 1, false, false, false))) && true))); _injected_loop_counter ++)
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     do
      {
       do
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
        }
       while(_GLF_WRAPPED_LOOP(false));
       for(int _injected_loop_counter = _GLF_IDENTITY(1, (1) << 0); _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
        {
         do
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).x > injectionSwitch.y))))
            {
             if(_GLF_DEAD(false))
              barrier();
             if(_GLF_DEAD(false))
              return;
             continue;
            }
           barrier();
           if(_GLF_DEAD(false))
            return;
           if(_GLF_DEAD(false))
            barrier();
          }
         while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, _GLF_IDENTITY(true && (false), ! (! (true && _GLF_IDENTITY((false), ! (! ((false))))))))))));
        }
      }
     while(_GLF_WRAPPED_LOOP(false));
    }
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))), ! (_GLF_IDENTITY(! (_GLF_DEAD(_GLF_IDENTITY(false, false || (false)))), ! (! (! (_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))))))))
    return;
   for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(injectionSwitch.x > injectionSwitch.y, false)))))))
      {
       if(_GLF_WRAPPED_IF_TRUE(true))
        {
         barrier();
        }
       else
        {
        }
       if(_GLF_DEAD(false))
        return;
      }
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_WRAPPED_IF_FALSE(false))
  {
  }
 else
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
      }
     if(_GLF_WRAPPED_IF_TRUE(true))
      {
       barrier();
      }
     else
      {
      }
     if(_GLF_DEAD(false))
      return;
    }
  }
 if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
  }
 else
  {
  }
 uint workgroup_id = gl_WorkGroupID.x;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
     if(_GLF_DEAD(false))
      return;
    }
   else
    {
     for(int _injected_loop_counter = (0 >> _GLF_IDENTITY(int(_GLF_IDENTITY(7, int(_GLF_ZERO(0.0, injectionSwitch.x)) + (7))), _GLF_IDENTITY(int(7), max(int(7), int(7))))); _GLF_WRAPPED_LOOP(_injected_loop_counter != (1 & 1)); _injected_loop_counter ++)
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) || false), (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         return;
        }
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec2(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bvec3(injectionSwitch.x > injectionSwitch.y, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)), bool(bvec3(bool(bvec3(injectionSwitch.x > injectionSwitch.y, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)), true, false)))))), _GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, ! (! (true)))))))))))
        barrier();
      }
    }
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, round(length(normalize(1.0))) * (injectionSwitch.x)) > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, round(length(normalize(1.0))) * (injectionSwitch.x)) > injectionSwitch.y)))) && true))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       for(int _injected_loop_counter = 1; _GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter > (0 ^ 0)), true && (_GLF_WRAPPED_LOOP(_injected_loop_counter > (0 ^ 0)))); _injected_loop_counter --)
        {
         barrier();
        }
      }
     return;
    }
   for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > _GLF_IDENTITY(int(_GLF_ZERO(0.0, injectionSwitch.x)), 0 ^ (int(_GLF_ZERO(0.0, injectionSwitch.x))))); _injected_loop_counter --)
    {
     do
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     while(_GLF_WRAPPED_LOOP(false));
    }
  }
 uint workgroup_base = workgroup_size * workgroup_id;
 uint virtual_gid = _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (workgroup_base) + 0u) + subgroup_id * subgroup_size + _GLF_IDENTITY(subgroup_local_id, min(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) >> (0u & 126765u)), subgroup_local_id)), min(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, ~ (~ (workgroup_base + subgroup_id * subgroup_size))) + subgroup_local_id, 1u * (_GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * _GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, subgroup_size))) ^ 0u) + subgroup_local_id, (_GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) ^ 0u) + subgroup_local_id, uint(uint(workgroup_base + _GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) ^ 0u) + subgroup_local_id)))) / 1u))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size + subgroup_local_id, 1u * (workgroup_base + _GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) ^ 0u) + subgroup_local_id)), (_GLF_IDENTITY(workgroup_base + subgroup_id * _GLF_IDENTITY(subgroup_size, (subgroup_size) << 0u) + subgroup_local_id, 1u * (workgroup_base + _GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) ^ 0u) + subgroup_local_id))) * 1u), _GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size + subgroup_local_id, 1u * (workgroup_base + _GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) ^ 0u) + subgroup_local_id)), _GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size + _GLF_IDENTITY(subgroup_local_id, min(subgroup_local_id, subgroup_local_id)), 1u * (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (workgroup_base) - 0u), 0u | (_GLF_IDENTITY(workgroup_base, (workgroup_base) - 0u))) + _GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) ^ _GLF_IDENTITY(0u, max(_GLF_IDENTITY(0u, (0u) / 1u), 0u))) + subgroup_local_id)))), workgroup_base + subgroup_id * subgroup_size + subgroup_local_id));
 if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
  }
 else
  {
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0)))) / 1.0), clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0)))) / 1.0), mix(float(_GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0)))) / 1.0)), float(_GLF_FUZZED(-89.94)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0)))) / 1.0), _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0)))) / 1.0)))), bool(bool((_GLF_IDENTITY(injectionSwitch.x, float(float(injectionSwitch.x))) > injectionSwitch.y)))))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > (0 << _GLF_IDENTITY(_GLF_IDENTITY(int(5), int(5)), (_GLF_IDENTITY(int(5), int(5))) >> (0 ^ 0)))); _injected_loop_counter --)
        {
         do
          {
           if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec3(_GLF_DEAD(false), true, true)), ! (! (bool(bvec3(_GLF_DEAD(false), true, true)))))), bool(bvec3(_GLF_DEAD(false), _GLF_IDENTITY(true, bool(bvec2(true, true))), false))))
            {
             if(_GLF_DEAD(false))
              continue;
             return;
            }
           barrier();
          }
         while(_GLF_WRAPPED_LOOP(false));
        }
       if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (! (injectionSwitch.x < injectionSwitch.y))))), (_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (! (injectionSwitch.x < injectionSwitch.y)))))) || false)))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED((-65.61 + 83.03))), float(injectionSwitch.y), bool(true)))))))
          return;
         if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(true, ! (! (true))) && (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y))))))))
          return;
         if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))))))))
          return;
        }
       else
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
        }
      }
     do
      {
       for(int _injected_loop_counter = _GLF_IDENTITY((0 | 1), clamp((0 | 1), (0 | 1), (0 | 1))); _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter > 0, (_injected_loop_counter > 0) || false)); _injected_loop_counter --)
        {
         return;
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
        }
       for(int _injected_loop_counter = _GLF_IDENTITY(0, (0) | (0)); _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          return;
        }
       if(_GLF_WRAPPED_IF_TRUE(true))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(mat3x4(injectionSwitch.y, 1.0, 0.0, 0.0, abs(0.0), round(length(normalize(vec3(1.0, 1.0, 1.0)))), 1.0, 1.0, round(length(normalize(vec2(1.0, 1.0)))), _GLF_ONE(1.0, injectionSwitch.y), _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, cos(0.0))), dot(vec2(0.0, 1.0), vec2(0.0, cos(0.0)))), 1.0))), true && (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(mat3x4(injectionSwitch.y, 1.0, 0.0, 0.0, abs(0.0), round(length(normalize(vec3(1.0, 1.0, 1.0)))), 1.0, 1.0, round(length(normalize(vec2(1.0, 1.0)))), _GLF_ONE(1.0, injectionSwitch.y), _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, cos(0.0))), dot(vec2(0.0, 1.0), vec2(0.0, cos(0.0)))), 1.0)))))))))
          return;
         if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), (_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))) && true)))
          {
           if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), false || (bool(false)))))))
            {
             if(_GLF_DEAD(false))
              break;
             return;
            }
           if(_GLF_WRAPPED_IF_FALSE(false))
            {
             if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              {
               if(_GLF_DEAD(false))
                return;
              }
             else
              {
               if(_GLF_DEAD(false))
                {
                 if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                  {
                  }
                 else
                  {
                   barrier();
                  }
                }
              }
            }
           else
            {
             if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
              barrier();
             barrier();
            }
          }
        }
       else
        {
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))))))
        barrier();
       if(_GLF_DEAD(false))
        continue;
      }
     while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
     if(_GLF_DEAD(false))
      return;
     do
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_WRAPPED_IF_TRUE(true))
          {
           if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, bool(bvec3(false, true, false))), false, false, false))), false, true)), (_GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, bool(bvec3(false, true, false))), false, false, false))), false, true)), ! (! (bool(bvec3(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, bool(bvec3(false, true, false))), false, false, false))), false, true)))))) && true))))
            {
             if(_GLF_DEAD(false))
              return;
             for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
              {
               barrier();
              }
            }
           if(_GLF_DEAD(false))
            continue;
          }
         else
          {
          }
         barrier();
        }
      }
     while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, true && (false))));
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y))))
      return;
     if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))))
      barrier();
    }
  }
 for(int _injected_loop_counter = 0; _GLF_IDENTITY(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter, _GLF_IDENTITY(min(_injected_loop_counter, _injected_loop_counter), (_GLF_IDENTITY(min(_injected_loop_counter, _injected_loop_counter), int(_GLF_IDENTITY(ivec3(min(_injected_loop_counter, _injected_loop_counter), 0, 0), (false ? _GLF_FUZZED(ivec3(-54436, -31813, -2801)) : ivec3(min(_injected_loop_counter, _injected_loop_counter), 0, 0)))))) / 1)) < 1), ! (! (_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter, _GLF_IDENTITY(min(_injected_loop_counter, _injected_loop_counter), (_GLF_IDENTITY(min(_injected_loop_counter, _injected_loop_counter), int(_GLF_IDENTITY(ivec3(min(_injected_loop_counter, _injected_loop_counter), 0, 0), (false ? _GLF_FUZZED(ivec3(-54436, -31813, -2801)) : ivec3(min(_injected_loop_counter, _injected_loop_counter), 0, 0)))))) / 1)) < 1)))); _injected_loop_counter ++)
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), true && ((injectionSwitch.x < injectionSwitch.y))))))
      {
       barrier();
      }
     else
      {
      }
    }
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
     if(_GLF_DEAD(false))
      return;
    }
   else
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_WRAPPED_IF_FALSE(false))
        {
         if(_GLF_DEAD(false))
          return;
        }
       else
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           barrier();
          }
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          break;
         if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, true, true, false)))))
          continue;
        }
       if(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), bool(bvec4(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, ! (! (true)))))), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))))
        {
         for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > int(_GLF_ZERO(_GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0)), injectionSwitch.x))); _injected_loop_counter --)
          {
           do
            {
             if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              {
              }
             else
              {
               do
                {
                 if(_GLF_WRAPPED_IF_FALSE(false))
                  {
                   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
                    return;
                  }
                 else
                  {
                   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))))
                    barrier();
                  }
                 if(_GLF_DEAD(false))
                  {
                   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(-0.2, 8.0)) : injectionSwitch)).x > injectionSwitch.y))))
                    return;
                   break;
                  }
                 barrier();
                 do
                  {
                   if(_GLF_DEAD(false))
                    continue;
                   if(_GLF_DEAD(false))
                    return;
                  }
                 while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
                }
               while(_GLF_WRAPPED_LOOP(false));
              }
            }
           while(_GLF_WRAPPED_LOOP(false));
          }
        }
       else
        {
        }
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          break;
         barrier();
        }
      }
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    break;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), ! (! _GLF_IDENTITY(_GLF_IDENTITY((false), true && ((false))), false || (_GLF_IDENTITY((false), true && ((false)))))))))
  {
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     if(_GLF_DEAD(false))
      barrier();
    }
   else
    {
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      barrier();
     for(int _injected_loop_counter = (0 >> _GLF_IDENTITY(int(1), _GLF_IDENTITY(int(1), max(int(1), int(1))))); _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter != int(_GLF_ONE(1.0, injectionSwitch.y)), true && (_injected_loop_counter != int(_GLF_ONE(1.0, injectionSwitch.y))))); _injected_loop_counter ++)
      {
       if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec4(_GLF_DEAD(false), true, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), ! (! (bool(bvec4(_GLF_DEAD(false), true, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))))
        return;
       if(_GLF_DEAD(false))
        break;
       barrier();
      }
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
      barrier();
    }
   for(int _injected_loop_counter = int(_GLF_ZERO(_GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, (0.0) * 1.0), 0.0)), _GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(7.3)), float(injectionSwitch.x), bool(true))))))); _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
    {
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      return;
    }
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x))) + _GLF_IDENTITY(0.0, float(_GLF_IDENTITY(vec2(0.0, _GLF_ONE(1.0, injectionSwitch.y)), mat2(1.0) * (vec2(0.0, _GLF_ONE(1.0, injectionSwitch.y))))))) > injectionSwitch.y))))
    barrier();
   return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / determinant(mat3(1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0))))) && (false)), bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false)), ! (! (_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false))))), true)))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   return;
  }
 uint next_virtual_gid = _GLF_IDENTITY(workgroup_base, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (workgroup_base) | (workgroup_base)), (true ? _GLF_IDENTITY(workgroup_base, (workgroup_base) - 0u) : _GLF_FUZZED(3950u)))), (~ (_GLF_IDENTITY(workgroup_base, (true ? _GLF_IDENTITY(workgroup_base, (workgroup_base) - _GLF_IDENTITY(0u, 0u | (0u))) : _GLF_FUZZED(3950u))))) << _GLF_IDENTITY(0u, max(0u, 0u))))) + subgroup_id * subgroup_size + (_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, ((subgroup_local_id + 1) % subgroup_size) | (_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, 1u * (_GLF_IDENTITY((subgroup_local_id + 1), ((subgroup_local_id + 1)) ^ 0u) % subgroup_size)))));
 if(_GLF_WRAPPED_IF_FALSE(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(mat3(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0), injectionSwitch.x)), 1.0, 1.0, 1.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, _GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(1.0, 0.0, 1.0)), dot(vec3(0.0, 1.0, 0.0), vec3(1.0, 0.0, 1.0))))), dot(vec2(1.0, 0.0), vec2(1.0, _GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(1.0, 0.0, 1.0)), dot(vec3(0.0, 1.0, 0.0), vec3(1.0, 0.0, 1.0)))))), 1.0, 1.0, 0.0, 0.0)), min(float(mat3(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0), injectionSwitch.x)), 1.0, 1.0, 1.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, _GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(1.0, 0.0, 1.0)), dot(vec3(0.0, 1.0, 0.0), vec3(1.0, 0.0, 1.0))))), dot(vec2(1.0, 0.0), vec2(1.0, _GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(1.0, 0.0, 1.0)), dot(vec3(0.0, 1.0, 0.0), vec3(1.0, 0.0, 1.0)))))), 1.0, 1.0, 0.0, 0.0)), float(mat3(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0), injectionSwitch.x)), 1.0, 1.0, 1.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, _GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(1.0, 0.0, 1.0)), dot(vec3(0.0, 1.0, 0.0), vec3(1.0, 0.0, 1.0))))), dot(vec2(1.0, 0.0), vec2(1.0, _GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(1.0, 0.0, 1.0)), dot(vec3(0.0, 1.0, 0.0), vec3(1.0, 0.0, 1.0)))))), 1.0, 1.0, 0.0, 0.0))))) > _GLF_IDENTITY(injectionSwitch.y, float(vec3(injectionSwitch.y, 1.0, 0.0)))))))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       do
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
            {
             barrier();
            }
           else
            {
            }
           if(_GLF_DEAD(false))
            return;
          }
         if(_GLF_DEAD(false))
          break;
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(-68.37) : injectionSwitch.y))))))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           if(_GLF_DEAD(false))
            break;
           return;
          }
        }
       while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, bool(bvec2(false, _GLF_IDENTITY(true, _GLF_IDENTITY(bool(bool(true)), bool(bool(bool(bool(true)))))))))));
       if(_GLF_WRAPPED_IF_TRUE(true))
        {
         barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(_GLF_IDENTITY(mat3x4(_GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(sqrt(3.0)) : injectionSwitch.y)), 1.0, 0.0, determinant(mat3(1.0, sin(0.0), _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, _GLF_IDENTITY(0.0, (_GLF_IDENTITY(true, true && (true)) ? 0.0 : _GLF_FUZZED(-99.17))))), dot(vec2(1.0, 0.0), vec2(1.0, 0.0))), 0.0, 1.0, 0.0, 0.0, 0.0, 1.0)), 0.0, 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(-9571.6535) : 0.0)), 0.0, 0.0), (true ? mat3x4(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(sqrt(3.0)) : injectionSwitch.y)), max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(sqrt(3.0)) : injectionSwitch.y)), 1.0 * (_GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(sqrt(3.0)) : injectionSwitch.y)))), _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(sqrt(3.0)) : injectionSwitch.y)))), 1.0, 0.0, determinant(mat3(1.0, sin(0.0), _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), vec2(1.0, 0.0))), 0.0, 1.0, 0.0, 0.0, 0.0, 1.0)), 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0) : _GLF_FUZZED(mat3x4(-4.2, -89.11, 6.0, -9.1, -87.98, 4463.8737, 9.6, -4532.7174, 5.5, 5661.6734, 1.4, -7.6))))))))))
          {
           if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
            return;
           return;
          }
        }
       else
        {
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         do
          {
           return;
           if(_GLF_DEAD(false))
            return;
          }
         while(_GLF_WRAPPED_LOOP(false));
        }
       if(_GLF_DEAD(false))
        barrier();
      }
    }
   else
    {
    }
   if(_GLF_DEAD(false))
    {
     for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
      {
       barrier();
      }
    }
  }
 else
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_DEAD(false), true)))))))
    barrier();
   atomicStore(buf[virtual_gid], uint(1), _GLF_IDENTITY(4, (4) * _GLF_IDENTITY(1, _GLF_IDENTITY(clamp(1, 1, 1), _GLF_IDENTITY(0 ^ (clamp(1, 1, 1)), 0 ^ (0 ^ (clamp(1, 1, 1))))))), 64, 4);
   if(_GLF_DEAD(false))
    return;
   for(int _injected_loop_counter = ((1 << _GLF_IDENTITY(int(4), _GLF_IDENTITY(int(4), int(int(int(4)))))) >> _GLF_IDENTITY(int(4), int(4))); _GLF_WRAPPED_LOOP(_injected_loop_counter != _GLF_IDENTITY(0, (0) - 0)); _injected_loop_counter --)
    {
     if(_GLF_DEAD(false))
      break;
     if(_GLF_WRAPPED_IF_TRUE(true))
      {
       if(_GLF_DEAD(false))
        barrier();
      }
     else
      {
      }
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 if(_GLF_DEAD(false))
  barrier();
 for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_GLF_IDENTITY(_injected_loop_counter, (_injected_loop_counter) | (_injected_loop_counter)) != 0, ! (! (_injected_loop_counter != _GLF_IDENTITY(0, (0) / 1))))); _injected_loop_counter --)
  {
   if(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1, (0u >> _GLF_IDENTITY(uint(2u), uint(2u))) | (_GLF_IDENTITY(subgroup_local_id + 1, clamp(subgroup_local_id + 1, subgroup_local_id + 1, subgroup_local_id + 1)))) < subgroup_size, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(subgroup_local_id + 1, (0u >> _GLF_IDENTITY(uint(2u), uint(2u))) | (_GLF_IDENTITY(subgroup_local_id + 1, clamp(subgroup_local_id + 1, subgroup_local_id + 1, subgroup_local_id + 1)))) < subgroup_size)))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, true && (false)))), true && (false)), (injectionSwitch.x > injectionSwitch.y))) || false)))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
          {
           if(_GLF_DEAD(false))
            break;
           break;
          }
         do
          {
           return;
          }
         while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec3(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false, false)))))));
        }
       if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
        continue;
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, _GLF_IDENTITY((false), ((false)) || false) && true))))), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))), _GLF_TRUE(true, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY((injectionSwitch.x), ((injectionSwitch.x)) * _GLF_IDENTITY(dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(0.0, sqrt(1.0), 0.0, 0.0)), dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(0.0, sqrt(1.0), 0.0, 0.0)))) * 1.0), (false ? _GLF_FUZZED(42.48) : _GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY((injectionSwitch.x), ((injectionSwitch.x)) * _GLF_IDENTITY(dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(_GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(-585.404) : 0.0)), sqrt(1.0), 0.0, 0.0)), dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(0.0, sqrt(1.0), 0.0, 0.0)))) * 1.0))) < injectionSwitch.y)))), (_GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), bool(bvec3(bool(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(! (! (_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(! (! (false)), (! (! (false))) || false), (_GLF_IDENTITY(_GLF_IDENTITY(! (! (false)), (! (! (false))) || false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(! (! (false)), (! (! (false))) || false)))) || false))))), _GLF_IDENTITY(true && (! (! (_GLF_DEAD(false)))), (_GLF_IDENTITY(true && (! (! (_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true), true, false, true)), true && (bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true), true, false, true)))))))), true && (_GLF_IDENTITY(true && (! (! (_GLF_DEAD(false)))), (true && (! (! (_GLF_DEAD(false))))) || false)))) || false))), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)))).x < injectionSwitch.y)))), true, true)))) || false)))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4((injectionSwitch.x > injectionSwitch.y), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(3652.8254)), vec2(_GLF_FUZZED(4231.2234), (injectionSwitch)[1]), bvec2(false, true))).x > injectionSwitch.y))))
            break;
           return;
          }
         if(_GLF_DEAD(false))
          break;
         do
          {
           do
            {
             do
              {
               for(int _injected_loop_counter = _GLF_IDENTITY(int(_GLF_ONE(1.0, injectionSwitch.y)), _GLF_IDENTITY(int(int(int(_GLF_ONE(1.0, injectionSwitch.y)))), clamp(int(int(int(_GLF_ONE(1.0, injectionSwitch.y)))), int(int(int(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + 0.0))))))), int(int(int(_GLF_ONE(1.0, injectionSwitch.y))))))); _GLF_WRAPPED_LOOP(_injected_loop_counter > _GLF_IDENTITY((_GLF_IDENTITY(0, ~ (~ (0))) >> _GLF_IDENTITY(int(8), int(8))), int(ivec2((_GLF_IDENTITY(0, ~ (~ (0))) >> _GLF_IDENTITY(int(8), int(8))), 0)))); _injected_loop_counter --)
                {
                 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
                  return;
                 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                  {
                   do
                    {
                     if(_GLF_DEAD(false))
                      {
                       if(_GLF_DEAD(false))
                        return;
                       barrier();
                      }
                     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                      return;
                     if(_GLF_DEAD(false))
                      continue;
                     if(_GLF_DEAD(false))
                      barrier();
                     barrier();
                     if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
                      barrier();
                     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec2(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, tan(tan(0.0)) + (_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(-495.591))))) > injectionSwitch.y)), false))))))))
                      barrier();
                    }
                   while(_GLF_WRAPPED_LOOP(false));
                  }
                }
              }
             while(_GLF_WRAPPED_LOOP(false));
            }
           while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, bool(bool(false)))));
          }
         while(_GLF_WRAPPED_LOOP(false));
         if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, ! (! (false)))))
          {
          }
         else
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            return;
           if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), true, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
            return;
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            continue;
          }
         if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(bool(! (false))))))))
          {
           if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, _GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, true, true, true)), false || (bool(bvec4(false, true, true, true))))))))))
            break;
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(false))
              break;
             do
              {
               return;
              }
             while(_GLF_WRAPPED_LOOP(false));
            }
           if(_GLF_DEAD(false))
            return;
          }
         else
          {
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(false))
              continue;
             barrier();
             if(_GLF_DEAD(false))
              continue;
            }
           return;
           if(_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, ! (! (false)))))))))
            {
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              barrier();
             break;
            }
          }
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
           if(_GLF_DEAD(false))
            continue;
           break;
          }
         if(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false)), true && (! (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false)))))))
          break;
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       do
        {
         if(_GLF_DEAD(false))
          continue;
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec3((injectionSwitch.x > injectionSwitch.y), false, true)))) || false))))
            return;
           continue;
          }
         if(_GLF_DEAD(false))
          return;
         do
          {
           if(_GLF_DEAD(false))
            return;
           if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(-375.467) : injectionSwitch.x)) < injectionSwitch.y)), false || _GLF_IDENTITY((_GLF_IDENTITY(_GLF_TRUE(_GLF_IDENTITY(true, (true) || false), (injectionSwitch.x < injectionSwitch.y)), bool(bvec3(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, float(mat3(injectionSwitch.y, _GLF_IDENTITY(1.0, (1.0) * 1.0), 0.0, 0.0, _GLF_IDENTITY(_GLF_IDENTITY(dot(vec4(determinant(mat2(1.0, 0.0, 1.0, 1.0)), _GLF_ONE(_GLF_IDENTITY(1.0, (1.0) / 1.0), injectionSwitch.y), 0.0, 0.0), vec4(0.0, 0.0, 1.0, 1.0)), (false ? _GLF_FUZZED(1213.9702) : dot(vec4(determinant(mat2(1.0, 0.0, 1.0, 1.0)), _GLF_ONE(_GLF_IDENTITY(1.0, (1.0) / 1.0), injectionSwitch.y), _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 0.0), vec4(0.0, 0.0, 1.0, 1.0)))), dot(vec4(determinant(mat2(1.0, 0.0, 1.0, 1.0)), _GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y, injectionSwitch.y))), 0.0, 0.0), vec4(0.0, 0.0, 1.0, 1.0))), 0.0, 1.0, 1.0, 1.0))))), (_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, float(mat3(injectionSwitch.y, 1.0, 0.0, 0.0, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(dot(vec4(determinant(mat2(1.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)), 1.0, 1.0)), _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0), vec4(0.0, 0.0, 1.0, 1.0)), max(dot(vec4(determinant(mat2(1.0, 0.0, 1.0, 1.0)), _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0), vec4(0.0, 0.0, 1.0, 1.0)), dot(vec4(determinant(mat2(1.0, 0.0, 1.0, 1.0)), _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0), vec4(0.0, 0.0, 1.0, 1.0)))), dot(vec4(determinant(mat2(1.0, 0.0, 1.0, 1.0)), _GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], (injectionSwitch[0]) / 1.0), injectionSwitch[1])).y), _GLF_IDENTITY(0.0, clamp(0.0, 0.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)))), 0.0), vec4(0.0, 0.0, _GLF_IDENTITY(1.0, clamp(1.0, _GLF_IDENTITY(1.0, (1.0) - 0.0), 1.0)), 1.0))), min(_GLF_IDENTITY(dot(vec4(determinant(mat2(1.0, 0.0, 1.0, 1.0)), _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0), vec4(0.0, 0.0, 1.0, 1.0)), dot(vec4(determinant(mat2(1.0, 0.0, 1.0, 1.0)), _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0), vec4(0.0, _GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, (0.0) - 0.0), _GLF_IDENTITY(0.0, max(0.0, 0.0)), _GLF_IDENTITY(0.0, min(0.0, 0.0)))), 1.0, 1.0))), _GLF_IDENTITY(_GLF_IDENTITY(dot(_GLF_IDENTITY(_GLF_IDENTITY(vec4(determinant(mat2(1.0, 0.0, 1.0, 1.0)), _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0), min(_GLF_IDENTITY(vec4(determinant(mat2(1.0, 0.0, 1.0, 1.0)), _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0), _GLF_IDENTITY(vec4(mat3x4(vec4(determinant(mat2(1.0, 0.0, 1.0, 1.0)), _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0), 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, log(1.0))), min(vec4(mat3x4(vec4(determinant(mat2(1.0, 0.0, 1.0, 1.0)), _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0), 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, log(1.0))), vec4(mat3x4(vec4(determinant(mat2(1.0, 0.0, 1.0, 1.0)), _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0), 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, log(1.0)))))), vec4(determinant(mat2(1.0, 0.0, 1.0, 1.0)), _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0))), mix(vec4(_GLF_FUZZED(-9.3), _GLF_FUZZED(4312.6037), _GLF_FUZZED(vec2(662.995, _GLF_IDENTITY(809.306, float(_GLF_IDENTITY(mat4x2(_GLF_IDENTITY(809.306, float(mat4x2(809.306, 1.0, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), 0.0, 1.0, 0.0, 1.0, 1.0))), 1.0, 0.0, 1.0, 1.0, sqrt(1.0), 0.0, 1.0), transpose(transpose(_GLF_IDENTITY(mat4x2(_GLF_IDENTITY(809.306, float(mat4x2(809.306, 1.0, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), 0.0, 1.0, 0.0, 1.0, 1.0))), 1.0, 0.0, 1.0, 1.0, sqrt(1.0), 0.0, 1.0), mat2(1.0) * (mat4x2(_GLF_IDENTITY(809.306, float(mat4x2(809.306, 1.0, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), 0.0, 1.0, 0.0, 1.0, 1.0))), 1.0, 0.0, 1.0, 1.0, sqrt(1.0), 0.0, 1.0))))))))).y), (vec4(determinant(mat2(1.0, 0.0, 1.0, 1.0)), _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0))[3]), vec4((vec4(determinant(mat2(1.0, 0.0, 1.0, 1.0)), _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0))[0], (vec4(determinant(mat2(1.0, 0.0, 1.0, 1.0)), _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0))[1], (vec4(determinant(mat2(1.0, 0.0, 1.0, 1.0)), _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0))[2], _GLF_FUZZED(6.2)), bvec4(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_IDENTITY(true, (true) && true), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > injectionSwitch.y))))), vec4(0.0, 0.0, 1.0, 1.0)), dot(vec4(_GLF_IDENTITY(determinant(mat2(1.0, 0.0, 1.0, 1.0)), (determinant(mat2(1.0, 0.0, 1.0, _GLF_IDENTITY(1.0, float(float(1.0)))))) - 0.0), _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0), vec4(0.0, 0.0, 1.0, 1.0))), mix(float(_GLF_FUZZED(7.8)), float(_GLF_IDENTITY(dot(vec4(determinant(mat2(1.0, 0.0, 1.0, 1.0)), _GLF_ONE(1.0, injectionSwitch.y), 0.0, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(5464.1049)), float(_GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(-8.5) : 0.0))), bool(true)))), vec4(0.0, 0.0, 1.0, _GLF_IDENTITY(1.0, (1.0) - 0.0))), dot(vec4(determinant(mat2(1.0, 0.0, 1.0, _GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, (1.0) + 0.0), 1.0)))), _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0), vec4(0.0, 0.0, 1.0, 1.0)))), bool(true))))), 0.0, 1.0, 1.0, 1.0)))))) && true), false, false)))), bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_TRUE(_GLF_IDENTITY(true, (_GLF_IDENTITY(true, ! (! (true)))) || false), (injectionSwitch.x < injectionSwitch.y)), bool(bvec3(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, float(mat3(injectionSwitch.y, 1.0, 0.0, 0.0, _GLF_IDENTITY(dot(vec4(determinant(mat2(1.0, _GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, float(mat3x2(0.0, 1.0, 0.0, 0.0, 1.0, 1.0))), 0.0, 0.0)), _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-7.6)), bool(false))))), 1.0, 1.0)), _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0), vec4(0.0, 0.0, 1.0, 1.0)), dot(vec4(determinant(mat2(1.0, 0.0, 1.0, 1.0)), _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0), vec4(0.0, 0.0, 1.0, 1.0))), 0.0, 1.0, 1.0, 1.0))))), (_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, float(mat3(injectionSwitch.y, 1.0, 0.0, 0.0, _GLF_IDENTITY(_GLF_IDENTITY(dot(vec4(_GLF_IDENTITY(determinant(mat2(1.0, 0.0, 1.0, 1.0)), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(determinant(mat2(1.0, 0.0, 1.0, 1.0)), (determinant(mat2(1.0, 0.0, 1.0, 1.0))) / 1.0) : _GLF_FUZZED(frexp(-647.635, _injected_loop_counter)))), _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0), vec4(0.0, 0.0, 1.0, 1.0)), dot(vec4(determinant(mat2(1.0, 0.0, 1.0, 1.0)), _GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(vec3(injectionSwitch, 1.0)), clamp(vec2(vec3(injectionSwitch, 1.0)), vec2(vec3(injectionSwitch, 1.0)), vec2(vec3(injectionSwitch, 1.0))))).y), 0.0, 0.0), vec4(0.0, 0.0, 1.0, 1.0))), min(_GLF_IDENTITY(dot(vec4(determinant(mat2(1.0, 0.0, 1.0, 1.0)), _GLF_ONE(1.0, injectionSwitch.y), 0.0, _GLF_IDENTITY(0.0, float(float(_GLF_IDENTITY(0.0, float(_GLF_IDENTITY(mat2x3(_GLF_IDENTITY(0.0, max(0.0, 0.0)), _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 0.0, 1.0, 0.0), (mat2x3(_GLF_IDENTITY(0.0, max(0.0, 0.0)), _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 0.0, 1.0, 0.0)) - mat2x3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0)))))))), vec4(0.0, 0.0, 1.0, 1.0)), dot(vec4(determinant(mat2(1.0, 0.0, 1.0, 1.0)), _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0), vec4(0.0, 0.0, 1.0, 1.0))), _GLF_IDENTITY(_GLF_IDENTITY(dot(vec4(determinant(mat2(1.0, 0.0, 1.0, 1.0)), _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0), vec4(0.0, 0.0, 1.0, 1.0)), dot(vec4(determinant(mat2(1.0, 0.0, 1.0, 1.0)), _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0), vec4(0.0, 0.0, 1.0, 1.0))), mix(float(_GLF_FUZZED(7.8)), _GLF_IDENTITY(float(_GLF_IDENTITY(dot(vec4(determinant(mat2(1.0, 0.0, 1.0, 1.0)), _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0), vec4(0.0, 0.0, 1.0, 1.0)), dot(vec4(determinant(mat2(1.0, 0.0, 1.0, _GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), 1.0, 1.0))) + 0.0))), _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0), vec4(0.0, 0.0, 1.0, 1.0)))), (float(_GLF_IDENTITY(dot(vec4(determinant(mat2(1.0, 0.0, 1.0, 1.0)), _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0), vec4(0.0, 0.0, 1.0, 1.0)), dot(vec4(determinant(mat2(1.0, 0.0, 1.0, _GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), 1.0, 1.0))) + 0.0))), _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0), vec4(0.0, 0.0, 1.0, 1.0))))) / cos(0.0)), bool(true))))), 0.0, 1.0, 1.0, 1.0)))))) && true), false, false)))), bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_TRUE(_GLF_IDENTITY(true, (true) || false), (injectionSwitch.x < injectionSwitch.y)), bool(bvec3(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, float(mat3(injectionSwitch.y, 1.0, 0.0, 0.0, _GLF_IDENTITY(dot(vec4(determinant(mat2(1.0, 0.0, 1.0, 1.0)), _GLF_ONE(1.0, injectionSwitch.y), _GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0), vec4(0.0, 0.0, 1.0, 1.0)), dot(vec4(determinant(mat2(1.0, 0.0, 1.0, 1.0)), _GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y), 0.0, 0.0), vec4(0.0, 0.0, 1.0, 1.0))), 0.0, 1.0, 1.0, 1.0))))), (_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, float(mat3(injectionSwitch.y, 1.0, 0.0, 0.0, _GLF_IDENTITY(_GLF_IDENTITY(dot(vec4(determinant(mat2(1.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)), 1.0, 1.0)), _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0), vec4(0.0, 0.0, 1.0, 1.0)), dot(_GLF_IDENTITY(vec4(determinant(mat2(1.0, 0.0, 1.0, 1.0)), _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0), min(_GLF_IDENTITY(vec4(determinant(mat2(1.0, 0.0, 1.0, 1.0)), _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0), (true ? vec4(determinant(mat2(1.0, 0.0, 1.0, 1.0)), _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0) : _GLF_FUZZED(vec4(21.44, -325.824, 293.332, -3.9)))), vec4(determinant(mat2(1.0, 0.0, 1.0, 1.0)), _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0))), vec4(0.0, 0.0, _GLF_IDENTITY(1.0, float(mat4x3(1.0, 0.0, 1.0, log(1.0), 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0))), 1.0))), min(_GLF_IDENTITY(dot(vec4(determinant(mat2(1.0, 0.0, 1.0, 1.0)), _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0), vec4(0.0, 0.0, 1.0, 1.0)), dot(vec4(determinant(mat2(1.0, 0.0, 1.0, 1.0)), _GLF_ONE(1.0, injectionSwitch.y), _GLF_IDENTITY(0.0, (true ? _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(6694.5311)), bool(false))) : _GLF_FUZZED(asin(65.58)))), 0.0), vec4(_GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0, 1.0, 1.0))), _GLF_IDENTITY(_GLF_IDENTITY(dot(vec4(determinant(mat2(1.0, 0.0, 1.0, 1.0)), _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0), vec4(0.0, 0.0, 1.0, 1.0)), dot(vec4(determinant(mat2(1.0, 0.0, 1.0, 1.0)), _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0), vec4(0.0, 0.0, 1.0, 1.0))), mix(float(_GLF_FUZZED(7.8)), float(_GLF_IDENTITY(_GLF_IDENTITY(dot(vec4(determinant(mat2(1.0, 0.0, 1.0, 1.0)), _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0), vec4(0.0, 0.0, 1.0, 1.0)), mix(float(dot(vec4(determinant(mat2(1.0, 0.0, 1.0, 1.0)), _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0), vec4(0.0, 0.0, 1.0, 1.0))), float(_GLF_FUZZED(2.6)), bool(false))), _GLF_IDENTITY(dot(vec4(determinant(mat2(1.0, 0.0, 1.0, 1.0)), _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0), vec4(0.0, 0.0, 1.0, 1.0)), (dot(vec4(determinant(mat2(1.0, 0.0, 1.0, 1.0)), _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0), vec4(0.0, 0.0, 1.0, 1.0))) + 0.0))), bool(true))))), 0.0, 1.0, 1.0, 1.0)))))) && true), false, false)))), (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_TRUE(_GLF_IDENTITY(true, (true) || false), (injectionSwitch.x < injectionSwitch.y)), bool(bvec3(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, float(mat3(injectionSwitch.y, 1.0, 0.0, 0.0, _GLF_IDENTITY(dot(vec4(determinant(mat2(1.0, 0.0, 1.0, 1.0)), _GLF_ONE(1.0, injectionSwitch.y), _GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0), vec4(0.0, 0.0, 1.0, 1.0)), dot(vec4(determinant(mat2(1.0, 0.0, 1.0, 1.0)), _GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y), 0.0, 0.0), vec4(0.0, 0.0, 1.0, 1.0))), 0.0, 1.0, 1.0, 1.0))))), (_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, float(mat3(injectionSwitch.y, 1.0, 0.0, 0.0, _GLF_IDENTITY(_GLF_IDENTITY(dot(vec4(determinant(mat2(1.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)), 1.0, 1.0)), _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0), vec4(0.0, 0.0, 1.0, 1.0)), dot(_GLF_IDENTITY(vec4(determinant(mat2(1.0, 0.0, 1.0, 1.0)), _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0), min(_GLF_IDENTITY(vec4(determinant(mat2(1.0, 0.0, 1.0, 1.0)), _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0), (true ? vec4(determinant(mat2(1.0, 0.0, 1.0, 1.0)), _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0) : _GLF_FUZZED(vec4(21.44, -325.824, 293.332, -3.9)))), vec4(determinant(mat2(1.0, 0.0, 1.0, 1.0)), _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0))), vec4(0.0, 0.0, _GLF_IDENTITY(1.0, float(mat4x3(1.0, 0.0, 1.0, log(1.0), 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0))), 1.0))), min(_GLF_IDENTITY(dot(vec4(determinant(mat2(1.0, 0.0, 1.0, 1.0)), _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0), vec4(0.0, 0.0, 1.0, 1.0)), dot(vec4(determinant(mat2(1.0, 0.0, 1.0, 1.0)), _GLF_ONE(1.0, injectionSwitch.y), _GLF_IDENTITY(0.0, (true ? _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(6694.5311)), bool(false))) : _GLF_FUZZED(asin(65.58)))), 0.0), vec4(_GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0, 1.0, 1.0))), _GLF_IDENTITY(_GLF_IDENTITY(dot(vec4(determinant(mat2(1.0, 0.0, 1.0, 1.0)), _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0), vec4(0.0, 0.0, 1.0, 1.0)), dot(vec4(determinant(mat2(1.0, 0.0, 1.0, 1.0)), _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0), vec4(0.0, 0.0, 1.0, 1.0))), mix(float(_GLF_FUZZED(7.8)), float(_GLF_IDENTITY(_GLF_IDENTITY(dot(vec4(determinant(mat2(1.0, 0.0, 1.0, 1.0)), _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0), vec4(0.0, 0.0, 1.0, 1.0)), mix(float(dot(vec4(determinant(mat2(1.0, 0.0, 1.0, 1.0)), _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0), vec4(0.0, 0.0, 1.0, 1.0))), float(_GLF_FUZZED(2.6)), bool(false))), _GLF_IDENTITY(dot(vec4(determinant(mat2(1.0, 0.0, 1.0, 1.0)), _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0), vec4(0.0, 0.0, 1.0, 1.0)), (dot(vec4(determinant(mat2(1.0, 0.0, 1.0, 1.0)), _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0), vec4(0.0, 0.0, 1.0, 1.0))) + 0.0))), bool(true))))), 0.0, 1.0, 1.0, 1.0)))))) && true), false, false)))), true && ((_GLF_IDENTITY(_GLF_TRUE(_GLF_IDENTITY(true, (true) || false), (injectionSwitch.x < injectionSwitch.y)), bool(bvec3(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, float(mat3(injectionSwitch.y, 1.0, 0.0, 0.0, _GLF_IDENTITY(dot(vec4(determinant(mat2(1.0, 0.0, 1.0, 1.0)), _GLF_ONE(1.0, injectionSwitch.y), _GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0), vec4(0.0, 0.0, 1.0, 1.0)), dot(vec4(determinant(mat2(1.0, 0.0, 1.0, 1.0)), _GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y), 0.0, 0.0), vec4(0.0, 0.0, 1.0, 1.0))), 0.0, 1.0, 1.0, 1.0))))), (_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, float(mat3(injectionSwitch.y, 1.0, 0.0, 0.0, _GLF_IDENTITY(_GLF_IDENTITY(dot(vec4(determinant(mat2(1.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)), 1.0, 1.0)), _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0), vec4(0.0, 0.0, 1.0, 1.0)), dot(_GLF_IDENTITY(vec4(determinant(mat2(1.0, 0.0, 1.0, 1.0)), _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0), min(_GLF_IDENTITY(vec4(determinant(mat2(1.0, 0.0, 1.0, 1.0)), _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0), (true ? vec4(determinant(mat2(1.0, 0.0, 1.0, 1.0)), _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0) : _GLF_FUZZED(vec4(21.44, -325.824, 293.332, -3.9)))), vec4(determinant(mat2(1.0, 0.0, 1.0, 1.0)), _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0))), vec4(0.0, 0.0, _GLF_IDENTITY(1.0, float(mat4x3(1.0, 0.0, 1.0, log(1.0), 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0))), 1.0))), min(_GLF_IDENTITY(dot(vec4(determinant(mat2(1.0, 0.0, 1.0, 1.0)), _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0), vec4(0.0, 0.0, 1.0, 1.0)), dot(vec4(determinant(mat2(1.0, 0.0, 1.0, 1.0)), _GLF_ONE(1.0, injectionSwitch.y), _GLF_IDENTITY(0.0, (true ? _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(6694.5311)), bool(false))) : _GLF_FUZZED(asin(65.58)))), 0.0), vec4(_GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0, 1.0, 1.0))), _GLF_IDENTITY(_GLF_IDENTITY(dot(vec4(determinant(mat2(1.0, 0.0, 1.0, 1.0)), _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0), vec4(0.0, 0.0, 1.0, 1.0)), dot(vec4(determinant(mat2(1.0, 0.0, 1.0, 1.0)), _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0), vec4(0.0, 0.0, 1.0, 1.0))), mix(float(_GLF_FUZZED(7.8)), float(_GLF_IDENTITY(_GLF_IDENTITY(dot(vec4(determinant(mat2(1.0, 0.0, 1.0, 1.0)), _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0), vec4(0.0, 0.0, 1.0, 1.0)), mix(float(dot(vec4(determinant(mat2(1.0, 0.0, 1.0, 1.0)), _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0), vec4(0.0, 0.0, 1.0, 1.0))), float(_GLF_FUZZED(2.6)), bool(false))), _GLF_IDENTITY(dot(vec4(determinant(mat2(1.0, 0.0, 1.0, 1.0)), _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0), vec4(0.0, 0.0, 1.0, 1.0)), (dot(vec4(determinant(mat2(1.0, 0.0, 1.0, 1.0)), _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0), vec4(0.0, 0.0, 1.0, 1.0))) + 0.0))), bool(true))))), 0.0, 1.0, 1.0, 1.0)))))) && true), false, false))))))) && true), _GLF_IDENTITY(((_GLF_IDENTITY(_GLF_TRUE(_GLF_IDENTITY(true, (true) || false), (injectionSwitch.x < injectionSwitch.y)), bool(bvec3(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, float(mat3(injectionSwitch.y, 1.0, 0.0, 0.0, _GLF_IDENTITY(dot(vec4(determinant(mat2(1.0, 0.0, 1.0, 1.0)), _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0), vec4(0.0, 0.0, 1.0, 1.0)), dot(vec4(determinant(mat2(1.0, 0.0, 1.0, 1.0)), _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0), vec4(0.0, 0.0, 1.0, 1.0))), 0.0, 1.0, 1.0, 1.0))))), (_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, float(mat3(injectionSwitch.y, 1.0, 0.0, 0.0, _GLF_IDENTITY(_GLF_IDENTITY(dot(vec4(determinant(mat2(1.0, 0.0, 1.0, 1.0)), _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0), vec4(0.0, 0.0, 1.0, 1.0)), dot(vec4(determinant(mat2(1.0, 0.0, 1.0, 1.0)), _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0), vec4(0.0, 0.0, 1.0, 1.0))), min(_GLF_IDENTITY(dot(vec4(determinant(mat2(1.0, 0.0, 1.0, 1.0)), _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0), vec4(0.0, 0.0, 1.0, 1.0)), dot(vec4(determinant(mat2(1.0, 0.0, 1.0, 1.0)), _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0), vec4(0.0, 0.0, 1.0, 1.0))), _GLF_IDENTITY(_GLF_IDENTITY(dot(vec4(determinant(mat2(1.0, 0.0, 1.0, 1.0)), _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0), vec4(0.0, 0.0, 1.0, 1.0)), dot(vec4(determinant(mat2(1.0, 0.0, 1.0, 1.0)), _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0), vec4(0.0, 0.0, 1.0, 1.0))), mix(float(_GLF_FUZZED(7.8)), float(_GLF_IDENTITY(dot(vec4(determinant(mat2(1.0, 0.0, 1.0, 1.0)), _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0), vec4(0.0, 0.0, 1.0, 1.0)), dot(vec4(determinant(mat2(1.0, 0.0, 1.0, 1.0)), _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0), vec4(0.0, 0.0, 1.0, 1.0)))), bool(true))))), 0.0, 1.0, 1.0, 1.0)))))) && true), false, false))))) || false, ! (! (((_GLF_IDENTITY(_GLF_TRUE(_GLF_IDENTITY(true, (true) || false), (injectionSwitch.x < injectionSwitch.y)), bool(bvec3(_GLF_IDENTITY(_GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, float(mat3(injectionSwitch.y, 1.0, 0.0, 0.0, _GLF_IDENTITY(dot(vec4(determinant(mat2(1.0, 0.0, 1.0, 1.0)), _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0), vec4(0.0, 0.0, 1.0, 1.0)), dot(vec4(determinant(mat2(1.0, 0.0, 1.0, 1.0)), _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0), vec4(0.0, 0.0, 1.0, 1.0))), 0.0, 1.0, 1.0, 1.0)))), _GLF_IDENTITY(bool(bvec3((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, float(mat3(injectionSwitch.y, 1.0, 0.0, 0.0, _GLF_IDENTITY(dot(vec4(determinant(mat2(1.0, 0.0, 1.0, 1.0)), _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0), vec4(0.0, 0.0, 1.0, 1.0)), dot(vec4(determinant(mat2(1.0, 0.0, 1.0, 1.0)), _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0), vec4(0.0, 0.0, 1.0, 1.0))), 0.0, 1.0, 1.0, 1.0)))), false, true)), ! (! (bool(bvec3((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, float(mat3(injectionSwitch.y, 1.0, 0.0, 0.0, _GLF_IDENTITY(dot(vec4(determinant(mat2(1.0, 0.0, 1.0, 1.0)), _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0), vec4(0.0, 0.0, 1.0, 1.0)), dot(vec4(determinant(mat2(1.0, 0.0, 1.0, 1.0)), _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0), vec4(0.0, 0.0, 1.0, 1.0))), 0.0, 1.0, 1.0, 1.0)))), false, true))))))), (_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, float(mat3(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), 1.0, 0.0, 0.0, _GLF_IDENTITY(_GLF_IDENTITY(dot(vec4(determinant(mat2(1.0, 0.0, 1.0, 1.0)), _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0), vec4(0.0, 0.0, 1.0, 1.0)), _GLF_IDENTITY(dot(vec4(determinant(mat2(1.0, 0.0, 1.0, 1.0)), _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0), vec4(0.0, 0.0, 1.0, 1.0)), mix(float(_GLF_FUZZED(282.116)), float(dot(vec4(determinant(mat2(1.0, 0.0, 1.0, 1.0)), _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0), vec4(0.0, 0.0, 1.0, 1.0))), bool(true)))), min(_GLF_IDENTITY(dot(vec4(determinant(mat2(1.0, 0.0, 1.0, 1.0)), _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0), vec4(0.0, 0.0, 1.0, 1.0)), dot(vec4(determinant(mat2(1.0, 0.0, 1.0, 1.0)), _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0), vec4(0.0, 0.0, 1.0, 1.0))), _GLF_IDENTITY(_GLF_IDENTITY(dot(vec4(determinant(mat2(1.0, 0.0, 1.0, _GLF_IDENTITY(1.0, (1.0) / abs(1.0)))), _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0), vec4(0.0, 0.0, 1.0, 1.0)), dot(vec4(determinant(mat2(1.0, _GLF_IDENTITY(0.0, 0.0 + (0.0)), 1.0, 1.0)), _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0), vec4(0.0, 0.0, 1.0, 1.0))), _GLF_IDENTITY(mix(float(_GLF_FUZZED(7.8)), float(_GLF_IDENTITY(dot(vec4(determinant(mat2(1.0, 0.0, 1.0, 1.0)), _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0), vec4(0.0, 0.0, 1.0, 1.0)), dot(vec4(determinant(mat2(1.0, 0.0, 1.0, 1.0)), _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0), vec4(0.0, 0.0, 1.0, 1.0)))), bool(true)), min(mix(float(_GLF_FUZZED(7.8)), float(_GLF_IDENTITY(dot(vec4(determinant(mat2(1.0, 0.0, 1.0, 1.0)), _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0), vec4(0.0, 0.0, 1.0, 1.0)), dot(vec4(determinant(mat2(1.0, 0.0, 1.0, 1.0)), _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0), vec4(0.0, 0.0, 1.0, 1.0)))), bool(true)), _GLF_IDENTITY(mix(float(_GLF_FUZZED(7.8)), float(_GLF_IDENTITY(dot(vec4(determinant(mat2(1.0, 0.0, 1.0, 1.0)), _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0), vec4(0.0, 0.0, 1.0, 1.0)), dot(vec4(determinant(mat2(1.0, 0.0, 1.0, 1.0)), _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0), vec4(0.0, 0.0, 1.0, 1.0)))), bool(true)), 1.0 * (mix(float(_GLF_FUZZED(7.8)), float(_GLF_IDENTITY(dot(vec4(determinant(mat2(1.0, 0.0, 1.0, 1.0)), _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0), vec4(0.0, 0.0, 1.0, 1.0)), dot(vec4(determinant(mat2(1.0, 0.0, 1.0, 1.0)), _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0), vec4(0.0, 0.0, 1.0, 1.0)))), bool(true))))))))), 0.0, _GLF_IDENTITY(1.0, float(mat2(_GLF_IDENTITY(1.0, 0.0 + (1.0)), tan(0.0), 1.0, log(1.0)))), _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(smoothstep(79.95, pow(90.36, 29.78), -8.5)) : 1.0)), 1.0)))))) && true), false, false))))) || false)))), false, false, true))), ! (! (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_TRUE(_GLF_IDENTITY(true, (_GLF_IDENTITY(_GLF_IDENTITY(true, ! (! (true))), (_GLF_IDENTITY(true, ! (! (true)))) && true)) || false), (injectionSwitch.x < injectionSwitch.y)), bool(bvec3(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, float(mat3(injectionSwitch.y, 1.0, 0.0, _GLF_IDENTITY(0.0, _GLF_IDENTITY(float(mat2x3(0.0, 1.0, 0.0, determinant(mat3(sqrt(0.0), 0.0, 1.0, 0.0, log(1.0), 1.0, 0.0, 0.0, 0.0)), _GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0)), (false ? _GLF_FUZZED(62.59) : float(mat2x3(0.0, 1.0, 0.0, determinant(mat3(sqrt(0.0), 0.0, 1.0, 0.0, log(1.0), 1.0, 0.0, 0.0, 0.0)), _GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0))))), _GLF_IDENTITY(dot(vec4(determinant(mat2(1.0, _GLF_IDENTITY(0.0, _GLF_IDENTITY(min(_GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, float(mat3x2(0.0, 1.0, 0.0, 0.0, 1.0, 1.0))), 0.0, 0.0)), _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-7.6)), bool(false)))), (min(_GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, float(mat3x2(0.0, 1.0, 0.0, 0.0, 1.0, 1.0))), 0.0, 0.0)), _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-7.6)), bool(false))))) * 1.0)), 1.0, 1.0)), _GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), (true ? _GLF_ONE(1.0, injectionSwitch.y) : _GLF_FUZZED((-594.760 - -5.8)))), 0.0, 0.0), vec4(0.0, 0.0, 1.0, 1.0)), dot(vec4(determinant(mat2(1.0, 0.0, 1.0, 1.0)), _GLF_ONE(1.0, injectionSwitch.y), 0.0, _GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, (true ? _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)) : _GLF_FUZZED(60.12))), 0.0, 0.0))), vec4(0.0, 0.0, 1.0, 1.0))), 0.0, 1.0, 1.0, 1.0))))), (_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, float(mat3(injectionSwitch.y, 1.0, 0.0, 0.0, _GLF_IDENTITY(_GLF_IDENTITY(dot(vec4(_GLF_IDENTITY(determinant(mat2(1.0, 0.0, 1.0, 1.0)), (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), bool(bvec4(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))) ? _GLF_IDENTITY(determinant(mat2(1.0, 0.0, 1.0, 1.0)), (_GLF_IDENTITY(determinant(mat2(1.0, 0.0, 1.0, 1.0)), mix(float(determinant(mat2(1.0, 0.0, 1.0, 1.0))), float(_GLF_FUZZED(41.43)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) / 1.0) : _GLF_FUZZED(frexp(-647.635, _injected_loop_counter)))), _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0), vec4(0.0, 0.0, 1.0, 1.0)), _GLF_IDENTITY(dot(vec4(determinant(mat2(1.0, 0.0, 1.0, 1.0)), _GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(vec3(injectionSwitch, 1.0)), clamp(vec2(vec3(injectionSwitch, 1.0)), vec2(vec3(injectionSwitch, 1.0)), vec2(vec3(injectionSwitch, 1.0))))).y), 0.0, 0.0), vec4(0.0, 0.0, 1.0, 1.0)), min(_GLF_IDENTITY(dot(vec4(determinant(mat2(1.0, 0.0, 1.0, 1.0)), _GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(vec3(injectionSwitch, 1.0)), clamp(vec2(vec3(injectionSwitch, 1.0)), vec2(vec3(injectionSwitch, 1.0)), vec2(vec3(injectionSwitch, 1.0))))).y), 0.0, 0.0), vec4(0.0, 0.0, 1.0, 1.0)), min(dot(vec4(determinant(mat2(1.0, 0.0, 1.0, 1.0)), _GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(vec3(injectionSwitch, 1.0)), clamp(vec2(vec3(injectionSwitch, 1.0)), vec2(vec3(injectionSwitch, 1.0)), vec2(vec3(injectionSwitch, 1.0))))).y), 0.0, 0.0), vec4(0.0, 0.0, 1.0, 1.0)), dot(vec4(determinant(mat2(1.0, 0.0, 1.0, 1.0)), _GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(vec3(injectionSwitch, 1.0)), clamp(vec2(vec3(injectionSwitch, 1.0)), vec2(vec3(injectionSwitch, 1.0)), vec2(vec3(injectionSwitch, 1.0))))).y), 0.0, 0.0), vec4(0.0, 0.0, 1.0, 1.0)))), dot(vec4(determinant(mat2(1.0, 0.0, 1.0, 1.0)), _GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(vec3(injectionSwitch, 1.0)), clamp(vec2(vec3(injectionSwitch, 1.0)), vec2(vec3(injectionSwitch, 1.0)), vec2(vec3(injectionSwitch, 1.0))))).y), 0.0, 0.0), vec4(0.0, 0.0, 1.0, 1.0))))), min(_GLF_IDENTITY(dot(vec4(determinant(mat2(1.0, 0.0, 1.0, 1.0)), _GLF_ONE(1.0, injectionSwitch.y), 0.0, _GLF_IDENTITY(0.0, float(float(_GLF_IDENTITY(0.0, float(_GLF_IDENTITY(mat2x3(_GLF_IDENTITY(0.0, max(0.0, 0.0)), _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 0.0, 1.0, 0.0), (mat2x3(_GLF_IDENTITY(0.0, max(0.0, 0.0)), _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 0.0, 1.0, 0.0)) - mat2x3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0)))))))), vec4(0.0, 0.0, 1.0, 1.0)), dot(vec4(determinant(mat2(1.0, 0.0, 1.0, 1.0)), _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0), vec4(0.0, 0.0, 1.0, 1.0))), _GLF_IDENTITY(_GLF_IDENTITY(dot(vec4(determinant(mat2(1.0, 0.0, 1.0, 1.0)), _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0), vec4(0.0, 0.0, 1.0, 1.0)), dot(vec4(determinant(mat2(1.0, 0.0, 1.0, 1.0)), _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0), vec4(0.0, 0.0, 1.0, 1.0))), _GLF_IDENTITY(mix(float(_GLF_FUZZED(7.8)), _GLF_IDENTITY(float(_GLF_IDENTITY(dot(vec4(determinant(mat2(1.0, 0.0, 1.0, 1.0)), _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0), vec4(0.0, 0.0, 1.0, 1.0)), dot(vec4(determinant(mat2(1.0, 0.0, 1.0, _GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), 1.0, 1.0))) + 0.0))), _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0), vec4(0.0, 0.0, 1.0, 1.0)))), (float(_GLF_IDENTITY(dot(vec4(determinant(mat2(1.0, 0.0, 1.0, 1.0)), _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0), vec4(0.0, 0.0, 1.0, 1.0)), dot(vec4(determinant(mat2(1.0, 0.0, 1.0, _GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), 1.0, 1.0))) + 0.0))), _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0), vec4(0.0, 0.0, 1.0, 1.0))))) / cos(0.0)), bool(true)), min(mix(float(_GLF_FUZZED(7.8)), _GLF_IDENTITY(float(_GLF_IDENTITY(dot(vec4(determinant(mat2(1.0, 0.0, 1.0, 1.0)), _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0), vec4(0.0, 0.0, 1.0, 1.0)), dot(vec4(determinant(mat2(1.0, 0.0, 1.0, _GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), 1.0, 1.0))) + 0.0))), _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0), vec4(0.0, 0.0, 1.0, 1.0)))), (float(_GLF_IDENTITY(dot(vec4(determinant(mat2(1.0, 0.0, 1.0, 1.0)), _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0), vec4(0.0, 0.0, 1.0, 1.0)), dot(vec4(determinant(mat2(1.0, 0.0, 1.0, _GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), 1.0, 1.0))) + 0.0))), _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0), vec4(0.0, 0.0, 1.0, 1.0))))) / cos(0.0)), bool(true)), _GLF_IDENTITY(mix(float(_GLF_FUZZED(7.8)), _GLF_IDENTITY(float(_GLF_IDENTITY(dot(vec4(determinant(mat2(1.0, 0.0, 1.0, 1.0)), _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0), vec4(0.0, 0.0, 1.0, 1.0)), dot(vec4(determinant(mat2(1.0, 0.0, 1.0, _GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), 1.0, 1.0))) + 0.0))), _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0), vec4(0.0, 0.0, 1.0, 1.0)))), (float(_GLF_IDENTITY(dot(vec4(determinant(mat2(1.0, 0.0, 1.0, 1.0)), _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0), vec4(0.0, 0.0, 1.0, 1.0)), dot(vec4(determinant(mat2(1.0, 0.0, 1.0, _GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), 1.0, 1.0))) + 0.0))), _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0), vec4(0.0, 0.0, 1.0, 1.0))))) / cos(0.0)), bool(true)), mix(float(_GLF_FUZZED(567.467)), float(mix(float(_GLF_FUZZED(7.8)), _GLF_IDENTITY(float(_GLF_IDENTITY(dot(vec4(determinant(mat2(1.0, 0.0, 1.0, 1.0)), _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0), vec4(0.0, 0.0, 1.0, 1.0)), dot(vec4(determinant(mat2(1.0, 0.0, 1.0, _GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), 1.0, 1.0))) + 0.0))), _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0), vec4(0.0, 0.0, 1.0, 1.0)))), (float(_GLF_IDENTITY(dot(vec4(determinant(mat2(1.0, 0.0, 1.0, 1.0)), _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0), vec4(0.0, 0.0, 1.0, 1.0)), dot(vec4(determinant(mat2(1.0, 0.0, 1.0, _GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), 1.0, 1.0))) + 0.0))), _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0), vec4(0.0, 0.0, 1.0, 1.0))))) / cos(0.0)), bool(true))), bool(true)))))))), 0.0, 1.0, 1.0, 1.0)))))) && true), false, false)))), bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_TRUE(_GLF_IDENTITY(true, (true) || false), (injectionSwitch.x < injectionSwitch.y)), bool(bvec3(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, float(mat3(injectionSwitch.y, 1.0, 0.0, 0.0, _GLF_IDENTITY(dot(vec4(_GLF_IDENTITY(determinant(mat2(1.0, 0.0, 1.0, 1.0)), max(_GLF_IDENTITY(determinant(mat2(1.0, 0.0, 1.0, 1.0)), (determinant(mat2(1.0, 0.0, 1.0, 1.0))) / 1.0), determinant(mat2(1.0, 0.0, 1.0, 1.0)))), _GLF_ONE(1.0, injectionSwitch.y), _GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0), vec4(0.0, 0.0, 1.0, 1.0)), dot(vec4(determinant(mat2(1.0, 0.0, 1.0, 1.0)), _GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y), 0.0, 0.0), vec4(0.0, 0.0, 1.0, 1.0))), 0.0, 1.0, 1.0, 1.0))))), (_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, float(mat3(injectionSwitch.y, 1.0, 0.0, 0.0, _GLF_IDENTITY(_GLF_IDENTITY(dot(vec4(determinant(mat2(1.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)), 1.0, 1.0)), _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0), vec4(0.0, 0.0, 1.0, 1.0)), dot(_GLF_IDENTITY(vec4(determinant(mat2(1.0, 0.0, 1.0, 1.0)), _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0), min(_GLF_IDENTITY(_GLF_IDENTITY(vec4(determinant(mat2(1.0, 0.0, 1.0, 1.0)), _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0), (true ? vec4(determinant(mat2(1.0, 0.0, 1.0, 1.0)), _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0) : _GLF_FUZZED(vec4(21.44, -325.824, 293.332, -3.9)))), mix(vec4(_GLF_FUZZED(float(-9234)), (_GLF_IDENTITY(vec4(determinant(mat2(1.0, 0.0, 1.0, 1.0)), _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0), (true ? vec4(determinant(mat2(1.0, 0.0, 1.0, 1.0)), _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0) : _GLF_FUZZED(vec4(21.44, -325.824, 293.332, -3.9)))))[1], (_GLF_IDENTITY(vec4(determinant(mat2(1.0, 0.0, 1.0, 1.0)), _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0), (true ? vec4(determinant(mat2(1.0, 0.0, 1.0, 1.0)), _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0) : _GLF_FUZZED(vec4(21.44, -325.824, 293.332, -3.9)))))[2], (_GLF_IDENTITY(vec4(determinant(mat2(1.0, 0.0, 1.0, 1.0)), _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0), (true ? vec4(determinant(mat2(1.0, 0.0, 1.0, 1.0)), _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0) : _GLF_FUZZED(vec4(21.44, -325.824, 293.332, -3.9)))))[3]), vec4(_GLF_IDENTITY((_GLF_IDENTITY(vec4(determinant(mat2(1.0, 0.0, 1.0, 1.0)), _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0), (true ? vec4(determinant(mat2(1.0, 0.0, 1.0, 1.0)), _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0) : _GLF_FUZZED(vec4(21.44, -325.824, 293.332, -3.9)))))[0], max((_GLF_IDENTITY(vec4(determinant(mat2(1.0, 0.0, 1.0, 1.0)), _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0), (true ? vec4(determinant(mat2(1.0, 0.0, 1.0, 1.0)), _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0) : _GLF_FUZZED(vec4(21.44, -325.824, 293.332, -3.9)))))[0], (_GLF_IDENTITY(vec4(determinant(mat2(1.0, 0.0, 1.0, 1.0)), _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0), (true ? vec4(determinant(mat2(1.0, 0.0, 1.0, 1.0)), _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0) : _GLF_FUZZED(vec4(21.44, -325.824, 293.332, -3.9)))))[0])), _GLF_FUZZED(((8056.8062 * -9.2) / -4892.9608)), _GLF_FUZZED((-6.6)), _GLF_FUZZED(-9.9)), bvec4(true, false, false, false))), _GLF_IDENTITY(vec4(determinant(mat2(1.0, 0.0, 1.0, 1.0)), _GLF_ONE(1.0, injectionSwitch.y), 0.0, _GLF_IDENTITY(0.0, clamp(0.0, _GLF_IDENTITY(0.0, float(_GLF_IDENTITY(float(0.0), max(float(0.0), float(0.0))))), 0.0))), min(vec4(determinant(mat2(1.0, 0.0, 1.0, 1.0)), _GLF_ONE(1.0, injectionSwitch.y), 0.0, _GLF_IDENTITY(0.0, clamp(0.0, _GLF_IDENTITY(0.0, float(_GLF_IDENTITY(float(0.0), max(float(0.0), float(0.0))))), 0.0))), vec4(determinant(mat2(1.0, 0.0, 1.0, 1.0)), _GLF_ONE(1.0, injectionSwitch.y), 0.0, _GLF_IDENTITY(0.0, clamp(0.0, _GLF_IDENTITY(0.0, float(_GLF_IDENTITY(float(0.0), max(float(0.0), float(0.0))))), 0.0))))))), vec4(0.0, 0.0, _GLF_IDENTITY(1.0, float(mat4x3(1.0, 0.0, 1.0, log(1.0), 1.0, _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(float(5459))), bool(false))), 1.0, 0.0, 1.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0))), 1.0))), min(_GLF_IDENTITY(dot(vec4(determinant(mat2(1.0, 0.0, 1.0, 1.0)), _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0), vec4(0.0, 0.0, 1.0, 1.0)), dot(vec4(determinant(mat2(1.0, 0.0, 1.0, 1.0)), _GLF_ONE(1.0, injectionSwitch.y), _GLF_IDENTITY(0.0, (true ? _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(6694.5311)), bool(false))) : _GLF_FUZZED(asin(65.58)))), 0.0), vec4(_GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0, 1.0, 1.0))), _GLF_IDENTITY(_GLF_IDENTITY(dot(vec4(determinant(mat2(1.0, 0.0, 1.0, 1.0)), _GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(-147.127, -78.28)))).y), 0.0, 0.0), vec4(0.0, 0.0, 1.0, 1.0)), dot(vec4(determinant(mat2(1.0, 0.0, 1.0, 1.0)), _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0), vec4(0.0, 0.0, 1.0, 1.0))), mix(float(_GLF_FUZZED(7.8)), float(_GLF_IDENTITY(_GLF_IDENTITY(dot(vec4(determinant(mat2(1.0, 0.0, 1.0, 1.0)), _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0), vec4(0.0, 0.0, 1.0, 1.0)), mix(float(dot(vec4(determinant(mat2(1.0, 0.0, 1.0, 1.0)), _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0), vec4(0.0, 0.0, 1.0, 1.0))), float(_GLF_FUZZED(2.6)), bool(false))), _GLF_IDENTITY(dot(vec4(_GLF_IDENTITY(determinant(mat2(1.0, 0.0, 1.0, 1.0)), min(determinant(mat2(1.0, 0.0, 1.0, 1.0)), determinant(mat2(1.0, 0.0, 1.0, 1.0)))), _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0), vec4(0.0, 0.0, 1.0, 1.0)), _GLF_IDENTITY((dot(vec4(determinant(mat2(1.0, 0.0, 1.0, 1.0)), _GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), (_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), float(vec2(_GLF_ONE(1.0, injectionSwitch.y), 1.0)))) - 0.0), 0.0, 0.0), _GLF_IDENTITY(vec4(0.0, _GLF_IDENTITY(0.0, float(mat2x3(_GLF_IDENTITY(0.0, float(float(0.0))), 1.0, 0.0, 1.0, 0.0, 0.0))), 1.0, 1.0), min(vec4(0.0, _GLF_IDENTITY(0.0, float(mat2x3(_GLF_IDENTITY(0.0, float(float(0.0))), 1.0, 0.0, 1.0, 0.0, 0.0))), 1.0, 1.0), _GLF_IDENTITY(vec4(0.0, _GLF_IDENTITY(0.0, float(mat2x3(_GLF_IDENTITY(0.0, float(float(0.0))), 1.0, 0.0, 1.0, 0.0, 0.0))), 1.0, 1.0), clamp(vec4(0.0, _GLF_IDENTITY(0.0, float(mat2x3(_GLF_IDENTITY(0.0, float(float(0.0))), 1.0, 0.0, 1.0, 0.0, 0.0))), 1.0, 1.0), _GLF_IDENTITY(vec4(0.0, _GLF_IDENTITY(0.0, float(mat2x3(_GLF_IDENTITY(0.0, float(float(0.0))), 1.0, 0.0, 1.0, 0.0, 0.0))), 1.0, 1.0), vec4(mat3x4(vec4(0.0, _GLF_IDENTITY(0.0, float(mat2x3(_GLF_IDENTITY(0.0, float(float(0.0))), 1.0, 0.0, 1.0, 0.0, 0.0))), 1.0, 1.0), 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0))), _GLF_IDENTITY(vec4(0.0, _GLF_IDENTITY(0.0, float(mat2x3(_GLF_IDENTITY(0.0, float(float(0.0))), 1.0, 0.0, 1.0, 0.0, 0.0))), 1.0, 1.0), vec4(mat2x4(vec4(0.0, _GLF_IDENTITY(0.0, float(mat2x3(_GLF_IDENTITY(0.0, float(float(0.0))), 1.0, 0.0, 1.0, 0.0, 0.0))), 1.0, 1.0), 1.0, 1.0, 1.0, 1.0))))))))), ((dot(vec4(determinant(mat2(1.0, 0.0, 1.0, 1.0)), _GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), (_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), float(vec2(_GLF_ONE(1.0, injectionSwitch.y), 1.0)))) - 0.0), 0.0, 0.0), _GLF_IDENTITY(vec4(0.0, _GLF_IDENTITY(0.0, float(mat2x3(_GLF_IDENTITY(0.0, float(float(0.0))), 1.0, 0.0, 1.0, 0.0, 0.0))), 1.0, 1.0), min(vec4(0.0, _GLF_IDENTITY(0.0, float(mat2x3(_GLF_IDENTITY(0.0, float(float(0.0))), 1.0, 0.0, 1.0, 0.0, 0.0))), 1.0, 1.0), _GLF_IDENTITY(vec4(0.0, _GLF_IDENTITY(0.0, float(mat2x3(_GLF_IDENTITY(0.0, float(float(0.0))), 1.0, 0.0, 1.0, 0.0, 0.0))), 1.0, 1.0), clamp(vec4(0.0, _GLF_IDENTITY(0.0, float(mat2x3(_GLF_IDENTITY(0.0, float(float(0.0))), 1.0, 0.0, 1.0, 0.0, 0.0))), 1.0, 1.0), _GLF_IDENTITY(vec4(0.0, _GLF_IDENTITY(0.0, float(mat2x3(_GLF_IDENTITY(0.0, float(float(0.0))), 1.0, 0.0, 1.0, 0.0, 0.0))), 1.0, 1.0), vec4(mat3x4(vec4(0.0, _GLF_IDENTITY(0.0, float(mat2x3(_GLF_IDENTITY(0.0, float(float(0.0))), 1.0, 0.0, 1.0, 0.0, 0.0))), 1.0, 1.0), 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0))), _GLF_IDENTITY(vec4(0.0, _GLF_IDENTITY(0.0, float(mat2x3(_GLF_IDENTITY(0.0, float(float(0.0))), 1.0, 0.0, 1.0, 0.0, 0.0))), 1.0, 1.0), vec4(mat2x4(vec4(0.0, _GLF_IDENTITY(0.0, float(mat2x3(_GLF_IDENTITY(0.0, float(float(0.0))), 1.0, 0.0, 1.0, 0.0, 0.0))), 1.0, 1.0), 1.0, 1.0, 1.0, 1.0)))))))))) - 0.0) + 0.0))), bool(true))))), 0.0, 1.0, 1.0, 1.0)))))) && true), false, false)))), (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_TRUE(_GLF_IDENTITY(true, (true) || _GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), ! (! (bool(bool(false))))))), (injectionSwitch.x < injectionSwitch.y)), bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, float(mat3(injectionSwitch.y, 1.0, 0.0, 0.0, _GLF_IDENTITY(dot(vec4(determinant(mat2(1.0, 0.0, 1.0, 1.0)), _GLF_ONE(1.0, injectionSwitch.y), _GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0), vec4(0.0, 0.0, 1.0, 1.0)), dot(vec4(determinant(mat2(1.0, 0.0, 1.0, 1.0)), _GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y), 0.0, 0.0), vec4(0.0, 0.0, 1.0, 1.0))), 0.0, 1.0, 1.0, 1.0))))), (_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, float(mat3(injectionSwitch.y, 1.0, 0.0, 0.0, _GLF_IDENTITY(_GLF_IDENTITY(dot(vec4(determinant(mat2(1.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)), 1.0, 1.0)), _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0), vec4(0.0, 0.0, 1.0, 1.0)), dot(_GLF_IDENTITY(vec4(determinant(mat2(1.0, 0.0, 1.0, 1.0)), _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0), min(_GLF_IDENTITY(vec4(determinant(mat2(1.0, 0.0, 1.0, 1.0)), _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0), (true ? vec4(determinant(mat2(1.0, 0.0, 1.0, 1.0)), _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0) : _GLF_FUZZED(vec4(21.44, -325.824, 293.332, -3.9)))), vec4(determinant(mat2(1.0, 0.0, 1.0, 1.0)), _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0))), vec4(0.0, 0.0, _GLF_IDENTITY(1.0, float(mat4x3(1.0, 0.0, 1.0, log(1.0), 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0))), 1.0))), min(_GLF_IDENTITY(dot(vec4(determinant(mat2(1.0, 0.0, 1.0, 1.0)), _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0), vec4(0.0, 0.0, 1.0, 1.0)), dot(vec4(determinant(mat2(1.0, 0.0, 1.0, 1.0)), _GLF_ONE(1.0, injectionSwitch.y), _GLF_IDENTITY(0.0, (true ? _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(6694.5311)), bool(false))) : _GLF_FUZZED(asin(65.58)))), 0.0), vec4(_GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0, 1.0, 1.0))), _GLF_IDENTITY(_GLF_IDENTITY(dot(vec4(determinant(mat2(1.0, 0.0, 1.0, 1.0)), _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0), vec4(0.0, 0.0, 1.0, 1.0)), dot(vec4(determinant(mat2(1.0, 0.0, 1.0, 1.0)), _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0), vec4(0.0, 0.0, 1.0, 1.0))), mix(float(_GLF_FUZZED(7.8)), float(_GLF_IDENTITY(_GLF_IDENTITY(dot(vec4(determinant(mat2(1.0, 0.0, 1.0, 1.0)), _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0), vec4(0.0, 0.0, 1.0, 1.0)), mix(float(dot(vec4(determinant(mat2(1.0, 0.0, 1.0, 1.0)), _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0), vec4(0.0, 0.0, 1.0, 1.0))), float(_GLF_FUZZED(2.6)), bool(false))), _GLF_IDENTITY(dot(vec4(determinant(mat2(1.0, 0.0, 1.0, 1.0)), _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0), vec4(0.0, 0.0, 1.0, 1.0)), (dot(vec4(determinant(mat2(1.0, 0.0, 1.0, 1.0)), _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0), vec4(0.0, 0.0, 1.0, 1.0))) + 0.0))), bool(true))))), 0.0, 1.0, 1.0, 1.0)))))) && true), (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y))).y, float(mat3(injectionSwitch.y, 1.0, 0.0, 0.0, _GLF_IDENTITY(dot(vec4(determinant(mat2(1.0, 0.0, 1.0, 1.0)), _GLF_ONE(1.0, injectionSwitch.y), _GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0), vec4(0.0, 0.0, 1.0, 1.0)), dot(vec4(determinant(mat2(1.0, 0.0, 1.0, 1.0)), _GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y), 0.0, 0.0), vec4(0.0, 0.0, 1.0, 1.0))), 0.0, 1.0, 1.0, 1.0))))), (_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, float(mat3(injectionSwitch.y, 1.0, 0.0, 0.0, _GLF_IDENTITY(_GLF_IDENTITY(dot(vec4(determinant(mat2(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, min(1.0, 1.0))) - log(1.0)), _GLF_IDENTITY(0.0, max(0.0, 0.0)), 1.0, 1.0)), _GLF_ONE(_GLF_IDENTITY(1.0, (1.0) / 1.0), _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y), 0.0, 0.0), vec4(0.0, 0.0, 1.0, 1.0)), dot(_GLF_IDENTITY(vec4(determinant(mat2(1.0, 0.0, 1.0, 1.0)), _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0), min(_GLF_IDENTITY(vec4(determinant(mat2(1.0, 0.0, 1.0, 1.0)), _GLF_ONE(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(0.3) : 1.0)), injectionSwitch.y), 0.0, 0.0), (true ? vec4(determinant(mat2(1.0, 0.0, 1.0, 1.0)), _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0) : _GLF_FUZZED(vec4(21.44, -325.824, 293.332, -3.9)))), vec4(_GLF_IDENTITY(determinant(mat2(1.0, 0.0, 1.0, 1.0)), (true ? determinant(mat2(1.0, 0.0, 1.0, 1.0)) : _GLF_FUZZED(-9.7))), _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0))), _GLF_IDENTITY(vec4(0.0, 0.0, _GLF_IDENTITY(1.0, float(mat4x3(1.0, 0.0, 1.0, log(1.0), 1.0, 0.0, 1.0, 0.0, 1.0, _GLF_IDENTITY(1.0, 1.0 * (_GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, float(float(1.0)))) - 0.0))), _GLF_ZERO(0.0, injectionSwitch.x), 1.0))), 1.0), clamp(vec4(0.0, 0.0, _GLF_IDENTITY(1.0, float(mat4x3(1.0, 0.0, 1.0, log(1.0), 1.0, 0.0, 1.0, 0.0, 1.0, _GLF_IDENTITY(1.0, 1.0 * (_GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, float(float(1.0)))) - 0.0))), _GLF_ZERO(0.0, injectionSwitch.x), 1.0))), 1.0), vec4(0.0, 0.0, _GLF_IDENTITY(1.0, float(mat4x3(1.0, 0.0, 1.0, log(1.0), 1.0, 0.0, 1.0, 0.0, 1.0, _GLF_IDENTITY(1.0, 1.0 * (_GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, float(float(1.0)))) - 0.0))), _GLF_ZERO(0.0, injectionSwitch.x), 1.0))), 1.0), vec4(0.0, 0.0, _GLF_IDENTITY(1.0, float(mat4x3(1.0, 0.0, 1.0, log(1.0), 1.0, 0.0, 1.0, 0.0, 1.0, _GLF_IDENTITY(1.0, 1.0 * (_GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, float(float(1.0)))) - 0.0))), _GLF_ZERO(0.0, injectionSwitch.x), 1.0))), 1.0))))), min(_GLF_IDENTITY(dot(vec4(determinant(mat2(1.0, 0.0, 1.0, 1.0)), _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0), vec4(0.0, 0.0, _GLF_IDENTITY(1.0, (1.0) - 0.0), 1.0)), dot(vec4(determinant(mat2(1.0, 0.0, 1.0, 1.0)), _GLF_ONE(1.0, injectionSwitch.y), _GLF_IDENTITY(0.0, (true ? _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(_GLF_IDENTITY(6694.5311, mix(float(_GLF_FUZZED(8.6)), float(6694.5311), bool(true))))), bool(false))) : _GLF_FUZZED(asin(65.58)))), 0.0), vec4(_GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0, 1.0, 1.0))), _GLF_IDENTITY(_GLF_IDENTITY(dot(vec4(determinant(mat2(1.0, 0.0, 1.0, 1.0)), _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0), vec4(0.0, 0.0, 1.0, 1.0)), dot(_GLF_IDENTITY(vec4(determinant(mat2(1.0, 0.0, 1.0, 1.0)), _GLF_ONE(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(19.62)), bool(false))), injectionSwitch.y), 0.0, 0.0), (vec4(determinant(mat2(1.0, 0.0, 1.0, 1.0)), _GLF_ONE(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(19.62)), bool(false))), injectionSwitch.y), 0.0, 0.0)) + vec4(0.0, 0.0, 0.0, 0.0)), vec4(0.0, 0.0, 1.0, 1.0))), mix(float(_GLF_FUZZED(7.8)), float(_GLF_IDENTITY(_GLF_IDENTITY(dot(vec4(determinant(mat2(1.0, 0.0, 1.0, 1.0)), _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0), vec4(_GLF_IDENTITY(0.0, 0.0 + (0.0)), 0.0, 1.0, 1.0)), mix(float(dot(vec4(determinant(mat2(1.0, 0.0, 1.0, 1.0)), _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0), vec4(0.0, 0.0, 1.0, 1.0))), float(_GLF_FUZZED(2.6)), bool(false))), _GLF_IDENTITY(dot(vec4(determinant(mat2(1.0, 0.0, 1.0, 1.0)), _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0), vec4(0.0, 0.0, 1.0, 1.0)), (dot(vec4(determinant(mat2(1.0, 0.0, 1.0, 1.0)), _GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(9.8) : injectionSwitch.y)), _GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(-6.0)))))), 0.0, 0.0), vec4(0.0, 0.0, 1.0, 1.0))) + 0.0))), bool(true))))), 0.0, 1.0, 1.0, 1.0)))))) && true)) && true), false, false)))), true && (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_TRUE(_GLF_IDENTITY(true, (true) || false), (injectionSwitch.x < injectionSwitch.y)), bool(bvec3(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, float(mat3(injectionSwitch.y, 1.0, 0.0, 0.0, _GLF_IDENTITY(dot(vec4(determinant(mat2(1.0, 0.0, 1.0, 1.0)), _GLF_ONE(1.0, injectionSwitch.y), _GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0), vec4(0.0, 0.0, 1.0, 1.0)), dot(vec4(determinant(mat2(1.0, 0.0, 1.0, 1.0)), _GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y), 0.0, 0.0), vec4(0.0, 0.0, _GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, min(1.0, 1.0)), 1.0)), 1.0))), 0.0, 1.0, 1.0, 1.0))))), (_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, float(mat3(injectionSwitch.y, 1.0, 0.0, 0.0, _GLF_IDENTITY(_GLF_IDENTITY(dot(vec4(determinant(mat2(1.0, _GLF_IDENTITY(0.0, _GLF_IDENTITY(max(0.0, 0.0), max(max(0.0, 0.0), max(0.0, 0.0)))), _GLF_IDENTITY(1.0, float(_GLF_IDENTITY(mat4(1.0, sin(0.0), 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, round(length(normalize(determinant(mat3(1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0))))), 0.0, 0.0, 0.0, round(length(normalize(vec2(1.0, 1.0)))), 0.0, 1.0), (mat4(1.0, sin(0.0), 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, round(length(normalize(determinant(mat3(1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0))))), 0.0, 0.0, 0.0, round(length(normalize(vec2(1.0, 1.0)))), 0.0, 1.0)) - mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)))), 1.0)), _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0), vec4(0.0, 0.0, 1.0, 1.0)), dot(_GLF_IDENTITY(vec4(determinant(mat2(_GLF_IDENTITY(1.0, min(1.0, _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-0.7) : _GLF_IDENTITY(1.0, (1.0) / 1.0))))), 0.0, 1.0, 1.0)), _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0), min(_GLF_IDENTITY(vec4(determinant(mat2(1.0, 0.0, 1.0, 1.0)), _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0), (true ? vec4(determinant(mat2(1.0, 0.0, 1.0, 1.0)), _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0) : _GLF_FUZZED(vec4(21.44, -325.824, 293.332, -3.9)))), vec4(determinant(mat2(1.0, 0.0, 1.0, 1.0)), _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0))), vec4(0.0, 0.0, _GLF_IDENTITY(1.0, float(mat4x3(1.0, 0.0, 1.0, log(1.0), 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0))), 1.0))), min(_GLF_IDENTITY(dot(vec4(determinant(mat2(1.0, 0.0, 1.0, 1.0)), _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0), vec4(0.0, _GLF_IDENTITY(0.0, 0.0 + (_GLF_IDENTITY(0.0, max(0.0, 0.0)))), 1.0, 1.0)), dot(vec4(determinant(mat2(_GLF_IDENTITY(1.0, (1.0) - 0.0), 0.0, 1.0, 1.0)), _GLF_ONE(1.0, injectionSwitch.y), _GLF_IDENTITY(0.0, (true ? _GLF_IDENTITY(0.0, mix(_GLF_IDENTITY(float(_GLF_IDENTITY(0.0, (0.0) - 0.0)), float(mat4(float(_GLF_IDENTITY(0.0, (0.0) - 0.0)), 1.0, sqrt(0.0), 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 0.0, 1.0, 1.0, 1.0, 0.0))), float(_GLF_FUZZED(_GLF_IDENTITY(6694.5311, (true ? 6694.5311 : _GLF_FUZZED(-1.5))))), bool(false))) : _GLF_FUZZED(asin(65.58)))), 0.0), vec4(_GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0, 1.0, _GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(686.446)))))), _GLF_IDENTITY(_GLF_IDENTITY(dot(vec4(determinant(mat2(1.0, 0.0, 1.0, 1.0)), _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0), vec4(0.0, 0.0, 1.0, 1.0)), dot(vec4(determinant(mat2(1.0, 0.0, 1.0, 1.0)), _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0), vec4(0.0, 0.0, 1.0, 1.0))), mix(float(_GLF_FUZZED(7.8)), float(_GLF_IDENTITY(_GLF_IDENTITY(dot(vec4(_GLF_IDENTITY(determinant(mat2(1.0, 0.0, 1.0, 1.0)), clamp(determinant(mat2(1.0, 0.0, 1.0, 1.0)), determinant(mat2(1.0, 0.0, 1.0, 1.0)), determinant(mat2(1.0, 0.0, 1.0, 1.0)))), _GLF_ONE(1.0, injectionSwitch.y), _GLF_IDENTITY(0.0, (true ? _GLF_IDENTITY(0.0, clamp(0.0, 0.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)))) : _GLF_FUZZED((false ? -247.818 : -5.4)))), 0.0), vec4(0.0, 0.0, 1.0, 1.0)), mix(float(dot(vec4(determinant(mat2(1.0, 0.0, 1.0, 1.0)), _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0), vec4(0.0, 0.0, 1.0, 1.0))), float(_GLF_FUZZED(2.6)), bool(false))), _GLF_IDENTITY(dot(vec4(determinant(mat2(1.0, 0.0, 1.0, 1.0)), _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0), vec4(0.0, 0.0, 1.0, 1.0)), (dot(vec4(determinant(mat2(1.0, 0.0, 1.0, 1.0)), _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0), vec4(0.0, 0.0, 1.0, 1.0))) + 0.0))), bool(true))))), 0.0, 1.0, 1.0, 1.0)))))) && true), false, false)))), _GLF_IDENTITY(bool(bvec2((_GLF_IDENTITY(_GLF_TRUE(_GLF_IDENTITY(true, (true) || false), (injectionSwitch.x < injectionSwitch.y)), bool(bvec3(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, float(mat3(injectionSwitch.y, 1.0, 0.0, 0.0, _GLF_IDENTITY(dot(vec4(determinant(mat2(1.0, 0.0, 1.0, 1.0)), _GLF_ONE(1.0, injectionSwitch.y), _GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0), vec4(0.0, 0.0, 1.0, 1.0)), dot(vec4(determinant(mat2(1.0, 0.0, 1.0, 1.0)), _GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y), 0.0, 0.0), vec4(0.0, 0.0, _GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, min(1.0, 1.0)), 1.0)), 1.0))), 0.0, 1.0, 1.0, 1.0))))), (_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, float(mat3(injectionSwitch.y, 1.0, 0.0, 0.0, _GLF_IDENTITY(_GLF_IDENTITY(dot(vec4(determinant(mat2(1.0, _GLF_IDENTITY(0.0, _GLF_IDENTITY(max(0.0, 0.0), max(max(0.0, 0.0), max(0.0, 0.0)))), _GLF_IDENTITY(1.0, float(_GLF_IDENTITY(mat4(1.0, sin(0.0), 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, round(length(normalize(determinant(mat3(1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0))))), 0.0, 0.0, 0.0, round(length(normalize(vec2(1.0, 1.0)))), 0.0, 1.0), (mat4(1.0, sin(0.0), 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, round(length(normalize(determinant(mat3(1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0))))), 0.0, 0.0, 0.0, round(length(normalize(vec2(1.0, 1.0)))), 0.0, 1.0)) - mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)))), 1.0)), _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0), vec4(0.0, 0.0, 1.0, 1.0)), dot(_GLF_IDENTITY(vec4(determinant(mat2(_GLF_IDENTITY(1.0, min(1.0, _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-0.7) : _GLF_IDENTITY(1.0, (1.0) / 1.0))))), 0.0, 1.0, 1.0)), _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0), min(_GLF_IDENTITY(vec4(determinant(mat2(1.0, 0.0, 1.0, 1.0)), _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0), (true ? vec4(determinant(mat2(1.0, 0.0, 1.0, 1.0)), _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0) : _GLF_FUZZED(vec4(21.44, -325.824, 293.332, -3.9)))), vec4(determinant(mat2(1.0, 0.0, 1.0, 1.0)), _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0))), vec4(0.0, 0.0, _GLF_IDENTITY(1.0, float(mat4x3(1.0, 0.0, 1.0, log(1.0), 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0))), 1.0))), min(_GLF_IDENTITY(dot(vec4(determinant(mat2(1.0, 0.0, 1.0, 1.0)), _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0), vec4(0.0, _GLF_IDENTITY(0.0, 0.0 + (_GLF_IDENTITY(0.0, max(0.0, 0.0)))), 1.0, 1.0)), dot(vec4(determinant(mat2(_GLF_IDENTITY(1.0, (1.0) - 0.0), 0.0, 1.0, 1.0)), _GLF_ONE(1.0, injectionSwitch.y), _GLF_IDENTITY(0.0, (true ? _GLF_IDENTITY(0.0, mix(_GLF_IDENTITY(float(_GLF_IDENTITY(0.0, (0.0) - 0.0)), float(mat4(float(_GLF_IDENTITY(0.0, (0.0) - 0.0)), 1.0, sqrt(0.0), 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 0.0, 1.0, 1.0, 1.0, 0.0))), float(_GLF_FUZZED(_GLF_IDENTITY(6694.5311, (true ? 6694.5311 : _GLF_FUZZED(-1.5))))), bool(false))) : _GLF_FUZZED(asin(65.58)))), 0.0), vec4(_GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0, 1.0, _GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(686.446)))))), _GLF_IDENTITY(_GLF_IDENTITY(dot(vec4(determinant(mat2(1.0, 0.0, 1.0, 1.0)), _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0), vec4(0.0, 0.0, 1.0, 1.0)), dot(vec4(determinant(mat2(1.0, 0.0, 1.0, 1.0)), _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0), vec4(0.0, 0.0, 1.0, 1.0))), mix(float(_GLF_FUZZED(7.8)), float(_GLF_IDENTITY(_GLF_IDENTITY(dot(vec4(_GLF_IDENTITY(determinant(mat2(1.0, 0.0, 1.0, 1.0)), clamp(determinant(mat2(1.0, 0.0, 1.0, 1.0)), determinant(mat2(1.0, 0.0, 1.0, 1.0)), determinant(mat2(1.0, 0.0, 1.0, 1.0)))), _GLF_ONE(1.0, injectionSwitch.y), _GLF_IDENTITY(0.0, (true ? _GLF_IDENTITY(0.0, clamp(0.0, 0.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)))) : _GLF_FUZZED((false ? -247.818 : -5.4)))), 0.0), vec4(0.0, 0.0, 1.0, 1.0)), mix(float(dot(vec4(determinant(mat2(1.0, 0.0, 1.0, 1.0)), _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0), vec4(0.0, 0.0, 1.0, 1.0))), float(_GLF_FUZZED(2.6)), bool(false))), _GLF_IDENTITY(dot(vec4(determinant(mat2(1.0, 0.0, 1.0, 1.0)), _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0), vec4(0.0, 0.0, 1.0, 1.0)), (dot(vec4(determinant(mat2(1.0, 0.0, 1.0, 1.0)), _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0), vec4(0.0, 0.0, 1.0, 1.0))) + 0.0))), bool(true))))), 0.0, 1.0, 1.0, 1.0)))))) && true), false, false)))), false)), ! (! (bool(bvec2((_GLF_IDENTITY(_GLF_TRUE(_GLF_IDENTITY(true, (true) || false), (injectionSwitch.x < injectionSwitch.y)), bool(bvec3(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, float(mat3(injectionSwitch.y, 1.0, 0.0, 0.0, _GLF_IDENTITY(dot(vec4(determinant(mat2(1.0, 0.0, 1.0, 1.0)), _GLF_ONE(1.0, injectionSwitch.y), _GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0), vec4(0.0, 0.0, 1.0, 1.0)), dot(vec4(determinant(mat2(1.0, 0.0, 1.0, 1.0)), _GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y), 0.0, 0.0), vec4(0.0, 0.0, _GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, min(1.0, 1.0)), 1.0)), 1.0))), 0.0, 1.0, 1.0, 1.0))))), (_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, float(mat3(injectionSwitch.y, 1.0, 0.0, 0.0, _GLF_IDENTITY(_GLF_IDENTITY(dot(vec4(determinant(mat2(1.0, _GLF_IDENTITY(0.0, _GLF_IDENTITY(max(0.0, 0.0), max(max(0.0, 0.0), max(0.0, 0.0)))), _GLF_IDENTITY(1.0, float(_GLF_IDENTITY(mat4(1.0, sin(0.0), 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, round(length(normalize(determinant(mat3(1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0))))), 0.0, 0.0, 0.0, round(length(normalize(vec2(1.0, 1.0)))), 0.0, 1.0), (mat4(1.0, sin(0.0), 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, round(length(normalize(determinant(mat3(1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0))))), 0.0, 0.0, 0.0, round(length(normalize(vec2(1.0, 1.0)))), 0.0, 1.0)) - mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)))), 1.0)), _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0), vec4(0.0, 0.0, 1.0, 1.0)), dot(_GLF_IDENTITY(vec4(determinant(mat2(_GLF_IDENTITY(1.0, min(1.0, _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-0.7) : _GLF_IDENTITY(1.0, (1.0) / 1.0))))), 0.0, 1.0, 1.0)), _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0), min(_GLF_IDENTITY(vec4(determinant(mat2(1.0, 0.0, 1.0, 1.0)), _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0), (true ? vec4(determinant(mat2(1.0, 0.0, 1.0, 1.0)), _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0) : _GLF_FUZZED(vec4(21.44, -325.824, 293.332, -3.9)))), vec4(determinant(mat2(1.0, 0.0, 1.0, 1.0)), _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0))), vec4(0.0, 0.0, _GLF_IDENTITY(1.0, float(mat4x3(1.0, 0.0, 1.0, log(1.0), 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0))), 1.0))), min(_GLF_IDENTITY(dot(vec4(determinant(mat2(1.0, 0.0, 1.0, 1.0)), _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0), vec4(0.0, _GLF_IDENTITY(0.0, 0.0 + (_GLF_IDENTITY(0.0, max(0.0, 0.0)))), 1.0, 1.0)), dot(vec4(determinant(mat2(_GLF_IDENTITY(1.0, (1.0) - 0.0), 0.0, 1.0, 1.0)), _GLF_ONE(1.0, injectionSwitch.y), _GLF_IDENTITY(0.0, (true ? _GLF_IDENTITY(0.0, mix(_GLF_IDENTITY(float(_GLF_IDENTITY(0.0, (0.0) - 0.0)), float(mat4(float(_GLF_IDENTITY(0.0, (0.0) - 0.0)), 1.0, sqrt(0.0), 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 0.0, 1.0, 1.0, 1.0, 0.0))), float(_GLF_FUZZED(_GLF_IDENTITY(6694.5311, (true ? 6694.5311 : _GLF_FUZZED(-1.5))))), bool(false))) : _GLF_FUZZED(asin(65.58)))), 0.0), vec4(_GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0, 1.0, _GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(686.446)))))), _GLF_IDENTITY(_GLF_IDENTITY(dot(vec4(determinant(mat2(1.0, 0.0, 1.0, 1.0)), _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0), vec4(0.0, 0.0, 1.0, 1.0)), dot(vec4(determinant(mat2(1.0, 0.0, 1.0, 1.0)), _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0), vec4(0.0, 0.0, 1.0, 1.0))), mix(float(_GLF_FUZZED(7.8)), float(_GLF_IDENTITY(_GLF_IDENTITY(dot(vec4(_GLF_IDENTITY(determinant(mat2(1.0, 0.0, 1.0, 1.0)), clamp(determinant(mat2(1.0, 0.0, 1.0, 1.0)), determinant(mat2(1.0, 0.0, 1.0, 1.0)), determinant(mat2(1.0, 0.0, 1.0, 1.0)))), _GLF_ONE(1.0, injectionSwitch.y), _GLF_IDENTITY(0.0, (true ? _GLF_IDENTITY(0.0, clamp(0.0, 0.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)))) : _GLF_FUZZED((false ? -247.818 : -5.4)))), 0.0), vec4(0.0, 0.0, 1.0, 1.0)), mix(float(dot(vec4(determinant(mat2(1.0, 0.0, 1.0, 1.0)), _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0), vec4(0.0, 0.0, 1.0, 1.0))), float(_GLF_FUZZED(2.6)), bool(false))), _GLF_IDENTITY(dot(vec4(determinant(mat2(1.0, 0.0, 1.0, 1.0)), _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0), vec4(0.0, 0.0, 1.0, 1.0)), (dot(vec4(determinant(mat2(1.0, 0.0, 1.0, 1.0)), _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0), vec4(0.0, 0.0, 1.0, 1.0))) + 0.0))), bool(true))))), 0.0, 1.0, 1.0, 1.0)))))) && true), false, false)))), false))))))))) && _GLF_IDENTITY(true, (true) || false)), _GLF_IDENTITY(((_GLF_IDENTITY(_GLF_TRUE(_GLF_IDENTITY(true, (true) || false), (injectionSwitch.x < injectionSwitch.y)), bool(bvec3(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, float(mat3(injectionSwitch.y, 1.0, 0.0, 0.0, _GLF_IDENTITY(dot(vec4(determinant(_GLF_IDENTITY(mat2(1.0, 0.0, 1.0, 1.0), _GLF_IDENTITY(mat2(mat3x4(mat2(1.0, 0.0, 1.0, 1.0))), (false ? _GLF_FUZZED(mat2(523.904, 9.7, 9.3, -8.0)) : mat2(mat3x4(mat2(1.0, 0.0, 1.0, 1.0))))))), _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0), vec4(0.0, 0.0, 1.0, 1.0)), dot(vec4(determinant(mat2(1.0, 0.0, 1.0, _GLF_IDENTITY(1.0, (1.0) * 1.0))), _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0), vec4(0.0, 0.0, 1.0, 1.0))), 0.0, 1.0, 1.0, 1.0))))), (_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, float(mat3(injectionSwitch.y, 1.0, 0.0, 0.0, _GLF_IDENTITY(_GLF_IDENTITY(dot(vec4(determinant(mat2(1.0, 0.0, 1.0, 1.0)), _GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), min(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), (_GLF_ONE(1.0, injectionSwitch.y)) / 1.0), _GLF_ONE(1.0, injectionSwitch.y))), 0.0, 0.0), vec4(0.0, 0.0, 1.0, 1.0)), dot(vec4(determinant(mat2(1.0, 0.0, 1.0, 1.0)), _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0), vec4(0.0, 0.0, 1.0, 1.0))), min(_GLF_IDENTITY(dot(vec4(determinant(mat2(1.0, 0.0, 1.0, 1.0)), _GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_IDENTITY(injectionSwitch.y, float(mat3x2(injectionSwitch.y, 0.0, 1.0, 1.0, 1.0, 0.0)))), float(_GLF_FUZZED(-5.0)), bool(false)))), float(_GLF_FUZZED(-9.1)), bool(false)))), 0.0, 0.0), vec4(0.0, 0.0, 1.0, 1.0)), dot(vec4(determinant(mat2(1.0, 0.0, 1.0, 1.0)), _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0), vec4(0.0, 0.0, 1.0, 1.0))), _GLF_IDENTITY(_GLF_IDENTITY(dot(vec4(_GLF_IDENTITY(determinant(mat2(1.0, 0.0, 1.0, 1.0)), max(_GLF_IDENTITY(determinant(mat2(1.0, 0.0, 1.0, 1.0)), float(mat2x3(determinant(mat2(1.0, 0.0, 1.0, 1.0)), 1.0, 1.0, 0.0, 1.0, 1.0))), determinant(mat2(1.0, 0.0, 1.0, 1.0)))), _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0), vec4(0.0, 0.0, 1.0, 1.0)), dot(vec4(determinant(mat2(1.0, 0.0, 1.0, 1.0)), _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0), vec4(0.0, 0.0, 1.0, 1.0))), mix(float(_GLF_FUZZED(7.8)), float(_GLF_IDENTITY(dot(vec4(determinant(mat2(1.0, 0.0, 1.0, 1.0)), _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0), vec4(0.0, 0.0, 1.0, 1.0)), dot(vec4(determinant(mat2(1.0, _GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, (0.0) + determinant(mat4(0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0))), 0.0, 0.0)), 1.0, 1.0)), _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0), vec4(0.0, 0.0, 1.0, 1.0)))), bool(true))))), 0.0, 1.0, 1.0, 1.0)))))) && true), false, false))))) || false, ! _GLF_IDENTITY((! (((_GLF_IDENTITY(_GLF_TRUE(_GLF_IDENTITY(true, (true) || false), (injectionSwitch.x < injectionSwitch.y)), bool(bvec3(_GLF_IDENTITY(_GLF_TRUE(true, _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, float(mat3(injectionSwitch.y, 1.0, 0.0, 0.0, _GLF_IDENTITY(dot(vec4(determinant(mat2(1.0, 0.0, 1.0, 1.0)), _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0), vec4(0.0, 0.0, 1.0, 1.0)), dot(vec4(determinant(mat2(1.0, 0.0, 1.0, 1.0)), _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0), vec4(0.0, 0.0, 1.0, 1.0))), 0.0, 1.0, 1.0, 1.0)))), _GLF_IDENTITY(bool(bvec3((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, float(mat3(injectionSwitch.y, 1.0, 0.0, 0.0, _GLF_IDENTITY(dot(vec4(determinant(mat2(1.0, 0.0, 1.0, 1.0)), _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0), vec4(0.0, 0.0, 1.0, 1.0)), dot(vec4(determinant(mat2(1.0, 0.0, 1.0, 1.0)), _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0), vec4(0.0, 0.0, 1.0, 1.0))), 0.0, 1.0, 1.0, 1.0)))), false, true)), ! (! (bool(bvec3((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, float(mat3(injectionSwitch.y, 1.0, 0.0, 0.0, _GLF_IDENTITY(dot(vec4(determinant(mat2(1.0, 0.0, 1.0, 1.0)), _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0), vec4(0.0, 0.0, 1.0, 1.0)), dot(vec4(determinant(mat2(1.0, 0.0, 1.0, 1.0)), _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0), vec4(0.0, 0.0, 1.0, 1.0))), 0.0, 1.0, 1.0, 1.0)))), false, true)))))), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, float(mat3(injectionSwitch.y, 1.0, 0.0, 0.0, _GLF_IDENTITY(dot(vec4(determinant(mat2(1.0, 0.0, 1.0, 1.0)), _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0), vec4(0.0, 0.0, 1.0, 1.0)), dot(vec4(determinant(mat2(1.0, 0.0, 1.0, 1.0)), _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0), vec4(0.0, 0.0, 1.0, 1.0))), 0.0, 1.0, 1.0, 1.0)))), _GLF_IDENTITY(bool(bvec3((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, float(mat3(injectionSwitch.y, 1.0, 0.0, 0.0, _GLF_IDENTITY(dot(vec4(determinant(mat2(1.0, 0.0, 1.0, 1.0)), _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0), vec4(0.0, 0.0, 1.0, 1.0)), dot(vec4(determinant(mat2(1.0, 0.0, 1.0, 1.0)), _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0), vec4(0.0, 0.0, 1.0, 1.0))), 0.0, 1.0, 1.0, 1.0)))), false, true)), ! (! (bool(bvec3((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, float(mat3(injectionSwitch.y, 1.0, 0.0, 0.0, _GLF_IDENTITY(dot(vec4(determinant(mat2(1.0, 0.0, 1.0, 1.0)), _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0), vec4(0.0, 0.0, 1.0, 1.0)), dot(vec4(determinant(mat2(1.0, 0.0, 1.0, 1.0)), _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0), vec4(0.0, 0.0, 1.0, 1.0))), 0.0, 1.0, 1.0, 1.0)))), false, true)))))), true, true, false)), _GLF_IDENTITY(bool(bool(bool(bvec4(_GLF_IDENTITY((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, float(mat3(injectionSwitch.y, 1.0, 0.0, 0.0, _GLF_IDENTITY(dot(vec4(determinant(mat2(1.0, 0.0, 1.0, 1.0)), _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0), vec4(0.0, 0.0, 1.0, 1.0)), dot(vec4(determinant(mat2(1.0, 0.0, 1.0, 1.0)), _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0), vec4(0.0, 0.0, 1.0, 1.0))), 0.0, 1.0, 1.0, 1.0)))), _GLF_IDENTITY(bool(bvec3((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, float(mat3(injectionSwitch.y, 1.0, 0.0, 0.0, _GLF_IDENTITY(dot(vec4(determinant(mat2(1.0, 0.0, 1.0, 1.0)), _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0), vec4(0.0, 0.0, 1.0, 1.0)), dot(vec4(determinant(mat2(1.0, 0.0, 1.0, 1.0)), _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0), vec4(0.0, 0.0, 1.0, 1.0))), 0.0, 1.0, 1.0, 1.0)))), false, true)), ! (! (bool(bvec3((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, float(mat3(injectionSwitch.y, 1.0, 0.0, 0.0, _GLF_IDENTITY(dot(vec4(determinant(mat2(1.0, 0.0, 1.0, 1.0)), _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0), vec4(0.0, 0.0, 1.0, 1.0)), dot(vec4(determinant(mat2(1.0, 0.0, 1.0, 1.0)), _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0), vec4(0.0, 0.0, 1.0, 1.0))), 0.0, 1.0, 1.0, 1.0)))), false, true)))))), true, true, false)))), bool(bool(bool(bool(bool(bvec4(_GLF_IDENTITY((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, float(mat3(injectionSwitch.y, 1.0, 0.0, 0.0, _GLF_IDENTITY(dot(vec4(determinant(mat2(1.0, 0.0, 1.0, 1.0)), _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0), vec4(0.0, 0.0, 1.0, 1.0)), dot(vec4(determinant(mat2(1.0, 0.0, 1.0, 1.0)), _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0), vec4(0.0, 0.0, 1.0, 1.0))), 0.0, 1.0, 1.0, 1.0)))), _GLF_IDENTITY(bool(bvec3((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, float(mat3(injectionSwitch.y, 1.0, 0.0, 0.0, _GLF_IDENTITY(dot(vec4(determinant(mat2(1.0, 0.0, 1.0, 1.0)), _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0), vec4(0.0, 0.0, 1.0, 1.0)), dot(vec4(determinant(mat2(1.0, 0.0, 1.0, 1.0)), _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0), vec4(0.0, 0.0, 1.0, 1.0))), 0.0, 1.0, 1.0, 1.0)))), false, true)), ! (! (bool(bvec3((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, float(mat3(injectionSwitch.y, 1.0, 0.0, 0.0, _GLF_IDENTITY(dot(vec4(determinant(mat2(1.0, 0.0, 1.0, 1.0)), _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0), vec4(0.0, 0.0, 1.0, 1.0)), dot(vec4(determinant(mat2(1.0, 0.0, 1.0, 1.0)), _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0), vec4(0.0, 0.0, 1.0, 1.0))), 0.0, 1.0, 1.0, 1.0)))), false, true)))))), true, true, false)))))))))), (_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x < _GLF_IDENTITY(injectionSwitch.y, float(mat3(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), 1.0, 0.0, 0.0, _GLF_IDENTITY(_GLF_IDENTITY(dot(vec4(determinant(mat2(1.0, 0.0, 1.0, 1.0)), _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0), vec4(0.0, 0.0, 1.0, 1.0)), _GLF_IDENTITY(dot(vec4(determinant(mat2(1.0, 0.0, 1.0, 1.0)), _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0), vec4(0.0, 0.0, 1.0, 1.0)), mix(float(_GLF_FUZZED(282.116)), float(dot(vec4(determinant(mat2(1.0, 0.0, 1.0, 1.0)), _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0), vec4(0.0, 0.0, 1.0, 1.0))), bool(true)))), min(_GLF_IDENTITY(dot(vec4(determinant(mat2(1.0, 0.0, _GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0)), _GLF_ONE(1.0, injectionSwitch.y), _GLF_IDENTITY(0.0, 1.0 * (0.0)), 0.0), _GLF_IDENTITY(vec4(0.0, 0.0, 1.0, 1.0), clamp(vec4(0.0, 0.0, 1.0, 1.0), vec4(0.0, 0.0, 1.0, 1.0), vec4(0.0, 0.0, 1.0, 1.0)))), dot(vec4(determinant(mat2(1.0, 0.0, 1.0, 1.0)), _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0), vec4(0.0, 0.0, 1.0, 1.0))), _GLF_IDENTITY(_GLF_IDENTITY(dot(vec4(determinant(mat2(1.0, 0.0, 1.0, _GLF_IDENTITY(1.0, (1.0) / abs(1.0)))), _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0), vec4(0.0, 0.0, 1.0, 1.0)), dot(vec4(determinant(mat2(1.0, _GLF_IDENTITY(0.0, 0.0 + (0.0)), 1.0, 1.0)), _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0), vec4(0.0, 0.0, 1.0, 1.0))), _GLF_IDENTITY(mix(_GLF_IDENTITY(float(_GLF_FUZZED(7.8)), mix(float(float(_GLF_FUZZED(7.8))), float(_GLF_FUZZED(-5566.4552)), bool(false))), float(_GLF_IDENTITY(dot(vec4(determinant(mat2(1.0, 0.0, 1.0, 1.0)), _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0), vec4(0.0, 0.0, 1.0, 1.0)), dot(vec4(determinant(mat2(1.0, 0.0, 1.0, 1.0)), _GLF_ONE(1.0, injectionSwitch.y), 0.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, _GLF_IDENTITY(0.0, float(mat3x4(0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, abs(0.0), 1.0, 1.0, 0.0, 0.0)))))), vec4(0.0, 0.0, 1.0, 1.0)))), bool(true)), min(mix(float(_GLF_FUZZED(7.8)), float(_GLF_IDENTITY(dot(vec4(determinant(mat2(1.0, 0.0, 1.0, 1.0)), _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0), vec4(0.0, 0.0, 1.0, 1.0)), dot(vec4(determinant(mat2(1.0, 0.0, 1.0, 1.0)), _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0), vec4(0.0, 0.0, 1.0, 1.0)))), bool(true)), _GLF_IDENTITY(mix(float(_GLF_FUZZED(7.8)), float(_GLF_IDENTITY(dot(vec4(determinant(mat2(1.0, 0.0, 1.0, 1.0)), _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0), vec4(0.0, 0.0, 1.0, 1.0)), dot(vec4(determinant(_GLF_IDENTITY(mat2(1.0, 0.0, 1.0, 1.0), (_GLF_IDENTITY(mat2(1.0, 0.0, 1.0, 1.0), (mat2(1.0, 0.0, 1.0, 1.0)) / mat2(1.0, 1.0, 1.0, 1.0))) / mat2(1.0, 1.0, 1.0, 1.0))), _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0), vec4(0.0, 0.0, 1.0, 1.0)))), bool(true)), 1.0 * (mix(float(_GLF_FUZZED(7.8)), float(_GLF_IDENTITY(dot(vec4(determinant(mat2(1.0, 0.0, 1.0, 1.0)), _GLF_ONE(1.0, injectionSwitch.y), _GLF_IDENTITY(0.0, (0.0) - 0.0), 0.0), vec4(0.0, 0.0, 1.0, 1.0)), dot(vec4(determinant(mat2(1.0, 0.0, 1.0, 1.0)), _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0), vec4(0.0, 0.0, 1.0, 1.0)))), bool(true))))))))), 0.0, _GLF_IDENTITY(1.0, float(mat2(_GLF_IDENTITY(1.0, 0.0 + (1.0)), tan(0.0), 1.0, log(1.0)))), _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(smoothstep(79.95, pow(90.36, 29.78), -8.5)) : 1.0)), 1.0)))))) && true), false, _GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (_GLF_IDENTITY(! (false), (! (false)) && true)) || false)))))))) || false)), ! (! ((! (((_GLF_IDENTITY(_GLF_TRUE(_GLF_IDENTITY(true, (true) || false), (injectionSwitch.x < injectionSwitch.y)), bool(bvec3(_GLF_IDENTITY(_GLF_TRUE(true, _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, float(mat3(injectionSwitch.y, 1.0, 0.0, 0.0, _GLF_IDENTITY(dot(vec4(determinant(mat2(1.0, 0.0, 1.0, 1.0)), _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0), vec4(0.0, 0.0, 1.0, 1.0)), dot(vec4(determinant(mat2(1.0, 0.0, 1.0, 1.0)), _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0), vec4(0.0, 0.0, 1.0, 1.0))), 0.0, 1.0, 1.0, 1.0)))), _GLF_IDENTITY(bool(bvec3((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, float(mat3(injectionSwitch.y, 1.0, 0.0, 0.0, _GLF_IDENTITY(dot(vec4(determinant(mat2(1.0, 0.0, 1.0, 1.0)), _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0), vec4(0.0, 0.0, 1.0, 1.0)), dot(vec4(determinant(mat2(1.0, 0.0, 1.0, 1.0)), _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0), vec4(0.0, 0.0, 1.0, 1.0))), 0.0, 1.0, 1.0, 1.0)))), false, true)), ! (! (bool(bvec3((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, float(mat3(injectionSwitch.y, 1.0, 0.0, 0.0, _GLF_IDENTITY(dot(vec4(determinant(mat2(1.0, 0.0, 1.0, 1.0)), _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0), vec4(0.0, 0.0, 1.0, 1.0)), dot(vec4(determinant(mat2(1.0, 0.0, 1.0, 1.0)), _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0), vec4(0.0, 0.0, 1.0, 1.0))), 0.0, 1.0, 1.0, 1.0)))), false, true)))))), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, float(mat3(injectionSwitch.y, 1.0, 0.0, 0.0, _GLF_IDENTITY(dot(vec4(determinant(mat2(1.0, 0.0, 1.0, 1.0)), _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0), vec4(0.0, 0.0, 1.0, 1.0)), dot(vec4(determinant(mat2(1.0, 0.0, 1.0, 1.0)), _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0), vec4(0.0, 0.0, 1.0, 1.0))), 0.0, 1.0, 1.0, 1.0)))), _GLF_IDENTITY(bool(bvec3((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, float(mat3(injectionSwitch.y, 1.0, 0.0, 0.0, _GLF_IDENTITY(dot(vec4(determinant(mat2(1.0, 0.0, 1.0, 1.0)), _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0), vec4(0.0, 0.0, 1.0, 1.0)), dot(vec4(determinant(mat2(1.0, 0.0, 1.0, 1.0)), _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0), vec4(0.0, 0.0, 1.0, 1.0))), 0.0, 1.0, 1.0, 1.0)))), false, true)), ! (! (bool(bvec3((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, float(mat3(injectionSwitch.y, 1.0, 0.0, 0.0, _GLF_IDENTITY(dot(vec4(determinant(mat2(1.0, 0.0, 1.0, 1.0)), _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0), vec4(0.0, 0.0, 1.0, 1.0)), dot(vec4(determinant(mat2(1.0, 0.0, 1.0, 1.0)), _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0), vec4(0.0, 0.0, 1.0, 1.0))), 0.0, 1.0, 1.0, 1.0)))), false, true)))))), true, true, false)), _GLF_IDENTITY(bool(bool(bool(bvec4(_GLF_IDENTITY((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, float(mat3(injectionSwitch.y, 1.0, 0.0, 0.0, _GLF_IDENTITY(dot(vec4(determinant(mat2(1.0, 0.0, 1.0, 1.0)), _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0), vec4(0.0, 0.0, 1.0, 1.0)), dot(vec4(determinant(mat2(1.0, 0.0, 1.0, 1.0)), _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0), vec4(0.0, 0.0, 1.0, 1.0))), 0.0, 1.0, 1.0, 1.0)))), _GLF_IDENTITY(bool(bvec3((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, float(mat3(injectionSwitch.y, 1.0, 0.0, 0.0, _GLF_IDENTITY(dot(vec4(determinant(mat2(1.0, 0.0, 1.0, 1.0)), _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0), vec4(0.0, 0.0, 1.0, 1.0)), dot(vec4(determinant(mat2(1.0, 0.0, 1.0, 1.0)), _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0), vec4(0.0, 0.0, 1.0, 1.0))), 0.0, 1.0, 1.0, 1.0)))), false, true)), ! (! (bool(bvec3((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, float(mat3(injectionSwitch.y, 1.0, 0.0, 0.0, _GLF_IDENTITY(dot(vec4(determinant(mat2(1.0, 0.0, 1.0, 1.0)), _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0), vec4(0.0, 0.0, 1.0, 1.0)), dot(vec4(determinant(mat2(1.0, 0.0, 1.0, 1.0)), _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0), vec4(0.0, 0.0, 1.0, 1.0))), 0.0, 1.0, 1.0, 1.0)))), false, true)))))), true, true, false)))), bool(bool(bool(bool(bool(bvec4(_GLF_IDENTITY((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, float(mat3(injectionSwitch.y, 1.0, 0.0, 0.0, _GLF_IDENTITY(dot(vec4(determinant(mat2(1.0, 0.0, 1.0, 1.0)), _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0), vec4(0.0, 0.0, 1.0, 1.0)), dot(vec4(determinant(mat2(1.0, 0.0, 1.0, 1.0)), _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0), vec4(0.0, 0.0, 1.0, 1.0))), 0.0, 1.0, 1.0, 1.0)))), _GLF_IDENTITY(bool(bvec3((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, float(mat3(injectionSwitch.y, 1.0, 0.0, 0.0, _GLF_IDENTITY(dot(vec4(determinant(mat2(1.0, 0.0, 1.0, 1.0)), _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0), vec4(0.0, 0.0, 1.0, 1.0)), dot(vec4(determinant(mat2(1.0, 0.0, 1.0, 1.0)), _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0), vec4(0.0, 0.0, 1.0, 1.0))), 0.0, 1.0, 1.0, 1.0)))), false, true)), ! (! (bool(bvec3((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, float(mat3(injectionSwitch.y, 1.0, 0.0, 0.0, _GLF_IDENTITY(dot(vec4(determinant(mat2(1.0, 0.0, 1.0, 1.0)), _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0), vec4(0.0, 0.0, 1.0, 1.0)), dot(vec4(determinant(mat2(1.0, 0.0, 1.0, 1.0)), _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0), vec4(0.0, 0.0, 1.0, 1.0))), 0.0, 1.0, 1.0, 1.0)))), false, true)))))), true, true, false)))))))))), (_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x < _GLF_IDENTITY(injectionSwitch.y, float(mat3(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), 1.0, 0.0, 0.0, _GLF_IDENTITY(_GLF_IDENTITY(dot(vec4(determinant(mat2(1.0, 0.0, 1.0, 1.0)), _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0), vec4(0.0, 0.0, 1.0, 1.0)), _GLF_IDENTITY(dot(vec4(determinant(mat2(1.0, 0.0, 1.0, 1.0)), _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0), vec4(0.0, 0.0, 1.0, 1.0)), mix(float(_GLF_FUZZED(282.116)), float(dot(vec4(determinant(mat2(1.0, 0.0, 1.0, 1.0)), _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0), vec4(0.0, 0.0, 1.0, 1.0))), bool(true)))), min(_GLF_IDENTITY(dot(vec4(determinant(mat2(1.0, 0.0, _GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0)), _GLF_ONE(1.0, injectionSwitch.y), _GLF_IDENTITY(0.0, 1.0 * (0.0)), 0.0), _GLF_IDENTITY(vec4(0.0, 0.0, 1.0, 1.0), clamp(vec4(0.0, 0.0, 1.0, 1.0), vec4(0.0, 0.0, 1.0, 1.0), vec4(0.0, 0.0, 1.0, 1.0)))), dot(vec4(determinant(mat2(1.0, 0.0, 1.0, 1.0)), _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0), vec4(0.0, 0.0, 1.0, 1.0))), _GLF_IDENTITY(_GLF_IDENTITY(dot(vec4(determinant(mat2(1.0, 0.0, 1.0, _GLF_IDENTITY(1.0, (1.0) / abs(1.0)))), _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0), vec4(0.0, 0.0, 1.0, 1.0)), dot(vec4(determinant(mat2(1.0, _GLF_IDENTITY(0.0, 0.0 + (0.0)), 1.0, 1.0)), _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0), vec4(0.0, 0.0, 1.0, 1.0))), _GLF_IDENTITY(mix(_GLF_IDENTITY(float(_GLF_FUZZED(7.8)), mix(float(float(_GLF_FUZZED(7.8))), float(_GLF_FUZZED(-5566.4552)), bool(false))), float(_GLF_IDENTITY(dot(vec4(determinant(mat2(1.0, 0.0, 1.0, 1.0)), _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0), vec4(0.0, 0.0, 1.0, 1.0)), dot(vec4(determinant(mat2(1.0, 0.0, 1.0, 1.0)), _GLF_ONE(1.0, injectionSwitch.y), 0.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, _GLF_IDENTITY(0.0, float(mat3x4(0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, abs(0.0), 1.0, 1.0, 0.0, 0.0)))))), vec4(0.0, 0.0, 1.0, 1.0)))), bool(true)), min(mix(float(_GLF_FUZZED(7.8)), float(_GLF_IDENTITY(dot(vec4(determinant(mat2(1.0, 0.0, 1.0, 1.0)), _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0), vec4(0.0, 0.0, 1.0, 1.0)), dot(vec4(determinant(mat2(1.0, 0.0, 1.0, 1.0)), _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0), vec4(0.0, 0.0, 1.0, 1.0)))), bool(true)), _GLF_IDENTITY(mix(float(_GLF_FUZZED(7.8)), float(_GLF_IDENTITY(dot(vec4(determinant(mat2(1.0, 0.0, 1.0, 1.0)), _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0), vec4(0.0, 0.0, 1.0, 1.0)), dot(vec4(determinant(_GLF_IDENTITY(mat2(1.0, 0.0, 1.0, 1.0), (_GLF_IDENTITY(mat2(1.0, 0.0, 1.0, 1.0), (mat2(1.0, 0.0, 1.0, 1.0)) / mat2(1.0, 1.0, 1.0, 1.0))) / mat2(1.0, 1.0, 1.0, 1.0))), _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0), vec4(0.0, 0.0, 1.0, 1.0)))), bool(true)), 1.0 * (mix(float(_GLF_FUZZED(7.8)), float(_GLF_IDENTITY(dot(vec4(determinant(mat2(1.0, 0.0, 1.0, 1.0)), _GLF_ONE(1.0, injectionSwitch.y), _GLF_IDENTITY(0.0, (0.0) - 0.0), 0.0), vec4(0.0, 0.0, 1.0, 1.0)), dot(vec4(determinant(mat2(1.0, 0.0, 1.0, 1.0)), _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0), vec4(0.0, 0.0, 1.0, 1.0)))), bool(true))))))))), 0.0, _GLF_IDENTITY(1.0, float(mat2(_GLF_IDENTITY(1.0, 0.0 + (1.0)), tan(0.0), 1.0, log(1.0)))), _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(smoothstep(79.95, pow(90.36, 29.78), -8.5)) : 1.0)), 1.0)))))) && true), false, _GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (_GLF_IDENTITY(! (false), (! (false)) && true)) || false)))))))) || false))))))), false, false, true)))))), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))))))
            {
             if(_GLF_DEAD(false))
              {
               if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
                continue;
               barrier();
              }
             return;
            }
           else
            {
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              continue;
             if(_GLF_DEAD(false))
              {
               if(_GLF_DEAD(false))
                continue;
               barrier();
              }
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              return;
            }
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(9437.0483) : injectionSwitch.y))) - 0.0)) - 0.0)))))
            barrier();
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            continue;
          }
         while(_GLF_WRAPPED_LOOP(false));
         if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bool(true)), bool(bool(bool(bool(true)))))))) && (false))))
          continue;
         if(_GLF_DEAD(false))
          continue;
        }
       while(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(false), true && (_GLF_WRAPPED_LOOP(false))));
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          return;
         barrier();
        }
      }
     if(_GLF_WRAPPED_IF_TRUE(true))
      {
       atomicStore(buf[next_virtual_gid], uint(2), 4, 64, 4);
       if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) || false), (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            {
            }
           else
            {
             return;
            }
          }
         return;
         if(_GLF_WRAPPED_IF_TRUE(true))
          {
           if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))))
            barrier();
          }
         else
          {
          }
        }
      }
     else
      {
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), _GLF_IDENTITY(bool(bvec3(! (false), false, true)), bool(bvec3(bool(bvec3(! (false), false, true)), false, true))))))))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) && true), true, true)))))
      {
       if(_GLF_WRAPPED_IF_TRUE(true))
        {
         return;
        }
       else
        {
        }
      }
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(false, false, false), bvec3(bvec3(bvec3(false, false, false))))), ! (! (bool(_GLF_IDENTITY(bvec3(false, false, false), bvec3(bvec3(bvec3(false, false, false))))))))), (injectionSwitch.x > injectionSwitch.y))))))
      {
       if(_GLF_DEAD(false))
        break;
       if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(mat2(_GLF_IDENTITY(injectionSwitch, mix(vec2((_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))[0], (injectionSwitch)[1]), _GLF_IDENTITY(vec2(_GLF_FUZZED(-2.8), _GLF_FUZZED(float(53613u))), (vec2(_GLF_FUZZED(-2.8), _GLF_FUZZED(float(53613u)))) / vec2(1.0, 1.0)), bvec2(false, false))), 1.0, 1.0))).y))))
        {
        }
       else
        {
         if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))
          barrier();
        }
       do
        {
         return;
        }
       while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
      }
     do
      {
       if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), ! (! (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bool(injectionSwitch.x > injectionSwitch.y)), true && (bool(bool(injectionSwitch.x > injectionSwitch.y))))))), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(injectionSwitch.x > injectionSwitch.y, true, _GLF_IDENTITY(false, bool(bool(false))), true)))))))
          barrier();
         if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + 0.0) > _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-6.9)), vec2(_GLF_FUZZED((-58.56 * -73.57)), (injectionSwitch)[1]), bvec2(false, true))).y))))
          {
          }
         else
          {
           barrier();
          }
         if(_GLF_DEAD(false))
          barrier();
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        break;
      }
     while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
     for(int _injected_loop_counter = 0; _GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter != (1 & 1)), true && (_GLF_WRAPPED_LOOP(_injected_loop_counter != (_GLF_IDENTITY(1, (1) >> 0) & _GLF_IDENTITY(1, ~ (~ (_GLF_IDENTITY(1, 0 | (1))))))))); _injected_loop_counter ++)
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          continue;
         if(_GLF_DEAD(false))
          {
           if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, (true) && true)))
            {
             if(_GLF_DEAD(false))
              continue;
             barrier();
            }
           else
            {
            }
          }
         barrier();
        }
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (true ? _GLF_IDENTITY(injectionSwitch.y, 1.0 * (injectionSwitch.y)) : _GLF_FUZZED(722.477)))))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          continue;
         barrier();
        }
       if(_GLF_WRAPPED_IF_TRUE(true))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
        }
       else
        {
         if(_GLF_DEAD(false))
          barrier();
        }
       if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
        continue;
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          continue;
         return;
        }
       return;
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y))))))
      barrier();
     do
      {
       if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).x > _GLF_IDENTITY(injectionSwitch.y, float(_GLF_IDENTITY(mat2(injectionSwitch.y, 0.0, 0.0, 1.0), (mat2(injectionSwitch.y, 0.0, 0.0, 1.0)) - mat2(0.0, 0.0, 0.0, 0.0))))), ! (! ((_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).x > _GLF_IDENTITY(injectionSwitch.y, float(_GLF_IDENTITY(mat2(injectionSwitch.y, 0.0, 0.0, 1.0), (mat2(injectionSwitch.y, 0.0, 0.0, 1.0)) - mat2(0.0, 0.0, 0.0, 0.0)))))))))))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(! (false)), (_GLF_IDENTITY(bool(! (false)), bool(bvec2(bool(! (false)), false)))) || false)), _GLF_IDENTITY(bool(bvec4(bool(_GLF_IDENTITY(bool(! (false)), (_GLF_IDENTITY(bool(! (false)), bool(bvec2(bool(! (false)), false)))) || false)), true, false, false)), (bool(bvec4(bool(_GLF_IDENTITY(bool(! (false)), (_GLF_IDENTITY(bool(! (false)), bool(bvec2(bool(! (false)), false)))) || false)), true, false, false))) && true)))))))
          continue;
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            barrier();
           break;
          }
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          break;
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            continue;
           continue;
          }
         return;
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), ! (! (_GLF_IDENTITY(false, true && (false)))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))
          {
           do
            {
             barrier();
            }
           while(_GLF_WRAPPED_LOOP(false));
          }
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
           do
            {
             barrier();
            }
           while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), true && (! (false)))))));
          }
         for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != ((1 << _GLF_IDENTITY(int(6), int(6))) >> _GLF_IDENTITY(int(6), int(6)))); _injected_loop_counter ++)
          {
           return;
          }
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         do
          {
           if(_GLF_DEAD(false))
            {
             if(_GLF_WRAPPED_IF_TRUE(true))
              {
               barrier();
              }
             else
              {
              }
            }
          }
         while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), true && (bool(false)))))));
         if(_GLF_WRAPPED_IF_TRUE(true))
          {
           return;
           if(_GLF_WRAPPED_IF_FALSE(false))
            {
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              {
               if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec3(injectionSwitch.x > injectionSwitch.y, true, true))))))))))
                barrier();
               return;
              }
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              {
               if(_GLF_DEAD(false))
                break;
               return;
              }
            }
           else
            {
             if(_GLF_DEAD(false))
              barrier();
             if(_GLF_WRAPPED_IF_FALSE(false))
              {
              }
             else
              {
               if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, true, false)), ! (_GLF_IDENTITY(! (bool(_GLF_IDENTITY(bvec3(false, _GLF_IDENTITY(true, ! (! (true))), false), _GLF_IDENTITY(bvec3(bvec3(bvec3(false, _GLF_IDENTITY(true, ! (! (true))), false))), bvec3(bvec3(bvec3(bvec3(bvec3(false, _GLF_IDENTITY(true, ! (! (true))), false))))))))), true && (_GLF_IDENTITY(! (bool(bvec3(false, true, false))), bool(bool(! (bool(bvec3(false, true, false))))))))))))))))
                barrier();
              }
             if(_GLF_DEAD(false))
              break;
             if(_GLF_DEAD(false))
              barrier();
             if(_GLF_DEAD(false))
              return;
             if(_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, bool(bool(false)))))))
              continue;
            }
          }
         else
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            break;
           for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != int(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).y))); _injected_loop_counter ++)
            {
             if(_GLF_DEAD(false))
              barrier();
            }
          }
         if(_GLF_DEAD(false))
          break;
         if(_GLF_DEAD(false))
          break;
         if(_GLF_DEAD(false))
          continue;
        }
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), false || (! (false))))))))))
        barrier();
      }
     while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).x > _GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)) : _GLF_FUZZED(vec2(787.596, -2.9)))).y))));
     do
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)), injectionSwitch)).x, (_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(_GLF_IDENTITY(true, ! (! (true))), true && (true))))) ? _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)), injectionSwitch)), mix(vec2((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)), injectionSwitch)), _GLF_IDENTITY(mat2(1.0) * (_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)), injectionSwitch))), (true ? mat2(1.0) * (_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)), injectionSwitch))) : _GLF_FUZZED(vec2(-19.49, 241.299))))))[0], (_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)), injectionSwitch)))[1]), vec2(_GLF_FUZZED(float(true)), _GLF_FUZZED(2696.6932)), bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))).x : _GLF_FUZZED(801.321))) > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).y))))
        {
         if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec4(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, true, false))))
          break;
         for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter, _GLF_IDENTITY(~ (_GLF_IDENTITY(~ (_injected_loop_counter), (~ (_injected_loop_counter)) | (~ (_injected_loop_counter)))), (~ (_GLF_IDENTITY(~ (_injected_loop_counter), (~ (_injected_loop_counter)) | (~ (_injected_loop_counter))))) >> 0)) < 1); _injected_loop_counter ++)
          {
           barrier();
          }
         if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, ! (! (false)))))
          {
          }
         else
          {
           if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false))))
            barrier();
          }
         if(_GLF_DEAD(false))
          break;
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        break;
       if(_GLF_DEAD(false))
        continue;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          return;
         continue;
        }
       if(_GLF_DEAD(false))
        continue;
      }
     while(_GLF_WRAPPED_LOOP(false));
     if(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), bool(bvec2(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), (_GLF_WRAPPED_IF_FALSE(false)) && true), false))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)).y))))
        barrier();
      }
     else
      {
       if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, true && (false)), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y)), _GLF_IDENTITY(! _GLF_IDENTITY((! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! _GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || false)))) && true))), bool(bvec3((! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! _GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || false)))) && true))), true, false))), true && (! _GLF_IDENTITY(_GLF_IDENTITY((! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! _GLF_IDENTITY((_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), ((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || false)))) && true))), false || (_GLF_IDENTITY((! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! _GLF_IDENTITY((_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), ((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || false)))) && true))), false || ((! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! _GLF_IDENTITY((_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), ((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || false)))) && true))))))), bool(bvec3((! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! _GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || false)))) && true))), true, false)))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, true && (false)), _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y), ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y)) || false)), ! _GLF_IDENTITY((! (_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y))))), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! _GLF_IDENTITY((_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > injectionSwitch.y))), ((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || false)))) && true))), bool(bvec3((! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(_GLF_IDENTITY(mat4x2(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), 1.0, 1.0, 0.0, 0.0, 0.0, 1.0), (mat4x2(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), 1.0, 1.0, 0.0, 0.0, 0.0, 1.0)) - mat4x2(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))), mix(vec2(_GLF_FUZZED(-2032.1581), (vec2(_GLF_IDENTITY(mat4x2(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), 1.0, 1.0, 0.0, 0.0, 0.0, 1.0), (mat4x2(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), 1.0, 1.0, 0.0, 0.0, 0.0, 1.0)) - mat4x2(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))))[1]), vec2((vec2(_GLF_IDENTITY(mat4x2(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), 1.0, 1.0, 0.0, 0.0, 0.0, 1.0), (mat4x2(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), 1.0, 1.0, 0.0, 0.0, 0.0, 1.0)) - mat4x2(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))))[0], _GLF_FUZZED(77.36)), bvec2(true, false)))).y)), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(_GLF_IDENTITY(mat3x2(injectionSwitch.y, 1.0, 0.0, 0.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x)), (mat3x2(injectionSwitch.y, 1.0, 0.0, 0.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x))) - mat3x2(0.0, 0.0, _GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, max(0.0, 0.0)), _GLF_IDENTITY(0.0, float(mat3x2(0.0, 1.0, 1.0, 1.0, 1.0, 1.0))), 0.0)), 0.0, 0.0, 0.0)))))), ! (! _GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ((_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(_GLF_ONE(1.0, injectionSwitch.y))), mix(vec2(_GLF_FUZZED(88.11), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(844.553)), bvec2(true, false))))).y)))) || _GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (false)))))))))) && true))), true, false))))))))
        {
        }
       else
        {
         if(_GLF_WRAPPED_IF_TRUE(true))
          {
           if(_GLF_DEAD(false))
            return;
           for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != (_GLF_IDENTITY(1 & 1, max(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) ^ 0)) * 1) & 1, _GLF_IDENTITY(1, 0 | (1)) & 1)))); _injected_loop_counter ++)
            {
             if(_GLF_WRAPPED_IF_TRUE(true))
              {
               if(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
                {
                }
               else
                {
                 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
                  {
                   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                    return;
                   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                    {
                     if(_GLF_DEAD(false))
                      return;
                     do
                      {
                       barrier();
                       if(_GLF_DEAD(false))
                        break;
                      }
                     while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
                    }
                   break;
                  }
                 if(_GLF_DEAD(false))
                  {
                   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
                    break;
                   return;
                  }
                 if(_GLF_DEAD(false))
                  break;
                }
               if(_GLF_DEAD(false))
                break;
               if(_GLF_DEAD(false))
                return;
               subgroupAll(false);
               if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, true, true)))))
                break;
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                break;
               if(_GLF_WRAPPED_IF_FALSE(false))
                {
                 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(vec3(-8.3, -3046.7602, -1.3).y)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) > injectionSwitch.y))))
                  return;
                }
               else
                {
                 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))
                  return;
                 if(_GLF_DEAD(false))
                  barrier();
                 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                  break;
                 if(_GLF_DEAD(false))
                  {
                   if(_GLF_DEAD(false))
                    {
                     do
                      {
                       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(injectionSwitch.x > injectionSwitch.y, true)))) || false)))))
                        {
                         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                          barrier();
                         break;
                        }
                       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y)), false, _GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, false || (false))))), false)), (bool(bvec4(injectionSwitch.x > injectionSwitch.y, false, _GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), ! (! (false))), false))) || false), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(bool(bvec4(injectionSwitch.x > injectionSwitch.y, false, _GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), false || (_GLF_IDENTITY(false, ! (! (false))))), false)), _GLF_IDENTITY((bool(bvec4(injectionSwitch.x > injectionSwitch.y, false, _GLF_IDENTITY(false, ! (! (false))), false))) || false, bool(_GLF_IDENTITY(bvec2((bool(bvec4(injectionSwitch.x > injectionSwitch.y, false, _GLF_IDENTITY(false, ! (! (false))), false))) || false, true), bvec2(bvec3(bvec2((bool(bvec4(injectionSwitch.x > injectionSwitch.y, false, _GLF_IDENTITY(false, ! (! (false))), false))) || false, true), true)))))))), bool(_GLF_IDENTITY(bvec2(bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec4(injectionSwitch.x > injectionSwitch.y, false, _GLF_IDENTITY(false, ! (! (false))), false)), (bool(bvec4(injectionSwitch.x > injectionSwitch.y, false, _GLF_IDENTITY(false, ! (! (false))), false))) && true), (bool(bvec4(injectionSwitch.x > injectionSwitch.y, false, _GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), bool(bool(_GLF_IDENTITY(false, ! (! (false)))))), false))) || false))), true), bvec2(bvec4(bvec2(bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec4(injectionSwitch.x > injectionSwitch.y, false, _GLF_IDENTITY(false, ! (! (false))), false)), (bool(bvec4(injectionSwitch.x > injectionSwitch.y, false, _GLF_IDENTITY(false, ! (! (false))), false))) && true), (bool(bvec4(injectionSwitch.x > injectionSwitch.y, false, _GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), bool(bool(_GLF_IDENTITY(false, ! (! (false)))))), false))) || false))), true), false, false)))))))))))
                        barrier();
                       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                        return;
                       if(_GLF_WRAPPED_IF_FALSE(false))
                        {
                         if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)), (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true))) || false))
                          barrier();
                         if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
                          {
                           if(_GLF_DEAD(false))
                            {
                             if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(7632.7483))))) < injectionSwitch.y))))
                              {
                               barrier();
                              }
                             else
                              {
                              }
                             if(_GLF_DEAD(false))
                              return;
                            }
                           if(_GLF_DEAD(false))
                            {
                             if(_GLF_DEAD(false))
                              continue;
                             barrier();
                            }
                           barrier();
                           if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(mat2(-0.4, 6.1, 7716.6442, 66.43)) : mat2(1.0))) * (injectionSwitch)).y), ! (! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(mat2(-0.4, 6.1, 7716.6442, 66.43)) : mat2(1.0))) * (injectionSwitch)).y))))))))))
                            barrier();
                           if(_GLF_DEAD(false))
                            continue;
                          }
                        }
                       else
                        {
                         if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, _GLF_IDENTITY((true) && true, ((true) && true) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
                          {
                           if(_GLF_DEAD(false))
                            barrier();
                          }
                         else
                          {
                          }
                         return;
                         if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true))))
                          {
                           if(_GLF_DEAD(false))
                            continue;
                           barrier();
                          }
                         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                          return;
                         if(_GLF_DEAD(false))
                          {
                           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                            break;
                           if(_GLF_DEAD(false))
                            {
                             for(int _injected_loop_counter = int(_GLF_ONE(1.0, injectionSwitch.y)); _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
                              {
                               barrier();
                              }
                            }
                           break;
                          }
                         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                          {
                           if(_GLF_DEAD(false))
                            break;
                           continue;
                          }
                         if(_GLF_DEAD(false))
                          break;
                        }
                      }
                     while(_GLF_WRAPPED_LOOP(false));
                    }
                   if(_GLF_DEAD(false))
                    {
                     if(_GLF_DEAD(false))
                      break;
                     if(_GLF_WRAPPED_IF_FALSE(false))
                      {
                      }
                     else
                      {
                       for(int _injected_loop_counter = (0 >> _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), int(ivec4(int(2), 0, 0, int(_GLF_ZERO(0.0, injectionSwitch.x))))))); _GLF_WRAPPED_LOOP(_injected_loop_counter < (0 ^ 1)); _GLF_IDENTITY(_injected_loop_counter ++, (_GLF_IDENTITY(_injected_loop_counter ++, (false ? _GLF_FUZZED(_injected_loop_counter) : _injected_loop_counter ++))) / 1))
                        {
                         if(_GLF_DEAD(false))
                          {
                           if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4((injectionSwitch.x > injectionSwitch.y), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, false))))))
                            {
                             if(_GLF_DEAD(false))
                              {
                               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                                continue;
                               barrier();
                              }
                             barrier();
                            }
                           do
                            {
                             if(_GLF_DEAD(false))
                              continue;
                             if(_GLF_DEAD(false))
                              barrier();
                            }
                           while(_GLF_WRAPPED_LOOP(false));
                           if(_GLF_DEAD(false))
                            break;
                           for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter != 0, true && (_injected_loop_counter != 0))); _injected_loop_counter --)
                            {
                             if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(-5324.2182), _GLF_FUZZED(-97.68)), bvec2(false, false))), _GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)))).y) && true))))) || (false))))
                              barrier();
                             for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != int(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), min(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y))))); _injected_loop_counter ++)
                              {
                               barrier();
                               if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)).x > injectionSwitch.y))))
                                continue;
                              }
                             if(_GLF_DEAD(false))
                              barrier();
                            }
                          }
                        }
                      }
                     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) || false))
                      {
                       if(_GLF_DEAD(false))
                        {
                         do
                          {
                           barrier();
                           if(_GLF_DEAD(false))
                            {
                             if(_GLF_DEAD(false))
                              return;
                             return;
                            }
                          }
                         while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, ! (! (false)))))));
                         if(_GLF_DEAD(false))
                          continue;
                         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                          continue;
                        }
                       if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
                        return;
                       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)).y))))
                        {
                         if(_GLF_DEAD(false))
                          break;
                         if(_GLF_DEAD(false))
                          barrier();
                         break;
                         if(_GLF_DEAD(false))
                          {
                           do
                            {
                             barrier();
                            }
                           while(_GLF_WRAPPED_LOOP(false));
                           if(_GLF_DEAD(false))
                            break;
                          }
                        }
                       for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter, (_injected_loop_counter) | (_injected_loop_counter)) != 1); _injected_loop_counter ++)
                        {
                         for(int _injected_loop_counter = (0 ^ ((1 << _GLF_IDENTITY(int(7), int(7))) >> _GLF_IDENTITY(int(7), _GLF_IDENTITY(int(7), min(int(7), _GLF_IDENTITY(int(7), (true ? int(7) : _GLF_FUZZED(_injected_loop_counter)))))))); _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter, clamp(_injected_loop_counter, _injected_loop_counter, _injected_loop_counter)) > 0); _injected_loop_counter --)
                          {
                           if(_GLF_WRAPPED_IF_TRUE(true))
                            {
                             return;
                             if(_GLF_DEAD(false))
                              barrier();
                             if(_GLF_WRAPPED_IF_TRUE(true))
                              {
                               if(_GLF_WRAPPED_IF_TRUE(true))
                                {
                                 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                                  return;
                                 if(_GLF_DEAD(false))
                                  barrier();
                                }
                               else
                                {
                                }
                               if(_GLF_DEAD(false))
                                barrier();
                              }
                             else
                              {
                              }
                            }
                           else
                            {
                             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))))))
                              continue;
                            }
                           if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, ! (! (false))), true, false), _GLF_IDENTITY(bvec3(bvec4(bvec3(_GLF_IDENTITY(false, ! (! (false))), true, false), true)), bvec3(_GLF_IDENTITY(bvec3(bvec3(bvec4(bvec3(_GLF_IDENTITY(false, ! (! (false))), true, false), true))), bvec3(bvec4(bvec3(bvec3(bvec4(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(false, true))), ! (! (false))), true, false), true))), true))))))))))
                            barrier();
                          }
                        }
                      }
                     return;
                    }
                   if(_GLF_DEAD(false))
                    continue;
                   if(_GLF_DEAD(false))
                    barrier();
                   if(_GLF_DEAD(false))
                    return;
                   barrier();
                   if(_GLF_WRAPPED_IF_TRUE(true))
                    {
                     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                      barrier();
                     if(_GLF_DEAD(false))
                      break;
                    }
                   else
                    {
                    }
                   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                    break;
                   if(_GLF_WRAPPED_IF_TRUE(true))
                    {
                     if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec2(_GLF_DEAD(false), true)), false || (bool(bvec2(_GLF_DEAD(false), true))))))
                      barrier();
                    }
                   else
                    {
                    }
                   if(_GLF_DEAD(false))
                    continue;
                  }
                }
              }
             else
              {
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                continue;
               do
                {
                 if(_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(false, true, false), bvec3(bvec4(bvec3(false, true, false), false)))), (bool(_GLF_IDENTITY(bvec3(false, true, false), bvec3(bvec4(bvec3(false, true, false), false))))) && true))))))
                  barrier();
                }
               while(_GLF_WRAPPED_LOOP(false));
               for(int _injected_loop_counter = ((1 & 1) & 1); _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
                {
                 if(_GLF_DEAD(_GLF_IDENTITY(false, ! _GLF_IDENTITY((_GLF_IDENTITY(! (false), ! (! (! (false))))), bool(bvec3(_GLF_IDENTITY((_GLF_IDENTITY(! (false), ! (! (! (false))))), ! (! ((_GLF_IDENTITY(! (false), ! (! (! (false)))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))))))
                  barrier();
                }
               if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
                break;
               if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, abs(vec2(1.0, 1.0)) * (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0))))) * mat2(1.0)).x > injectionSwitch.y))))
                {
                 if(_GLF_DEAD(false))
                  break;
                 continue;
                }
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                barrier();
               if(_GLF_WRAPPED_IF_TRUE(true))
                {
                 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
                  barrier();
                }
               else
                {
                }
               if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
                {
                 if(_GLF_DEAD(false))
                  barrier();
                 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
                  {
                   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(injectionSwitch.x > injectionSwitch.y, true, false, true))), ! (! (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(mat3(injectionSwitch, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0))).y, bool(bvec4(injectionSwitch.x > injectionSwitch.y, true, false, true))))))))))
                    {
                     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))))))
                      barrier();
                     if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))
                      break;
                     return;
                    }
                   if(_GLF_WRAPPED_IF_FALSE(false))
                    {
                    }
                   else
                    {
                     if(_GLF_DEAD(false))
                      {
                       if(_GLF_DEAD(false))
                        return;
                       barrier();
                      }
                     barrier();
                    }
                  }
                 if(_GLF_DEAD(false))
                  return;
                 barrier();
                 if(_GLF_DEAD(false))
                  break;
                }
               for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
                {
                 if(_GLF_DEAD(false))
                  {
                   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), (_GLF_IDENTITY(false, ! (! (false)))) && true)))
                    continue;
                   barrier();
                  }
                }
               if(_GLF_DEAD(false))
                {
                 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                  continue;
                 if(_GLF_DEAD(false))
                  {
                   if(_GLF_DEAD(false))
                    continue;
                   continue;
                  }
                 barrier();
                 if(_GLF_DEAD(false))
                  continue;
                }
               if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
                continue;
               if(_GLF_DEAD(false))
                break;
               if(_GLF_DEAD(false))
                barrier();
               do
                {
                 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
                  {
                   if(_GLF_WRAPPED_IF_TRUE(true))
                    {
                     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
                      barrier();
                    }
                   else
                    {
                    }
                   barrier();
                  }
                }
               while(_GLF_WRAPPED_LOOP(false));
               if(_GLF_DEAD(false))
                {
                 if(_GLF_DEAD(false))
                  return;
                 if(_GLF_DEAD(false))
                  break;
                 if(_GLF_DEAD(false))
                  barrier();
                 barrier();
                }
               if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
                barrier();
               if(_GLF_DEAD(false))
                barrier();
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                break;
              }
            }
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_DEAD(false))
            break;
           if(_GLF_DEAD(false))
            barrier();
          }
         else
          {
          }
        }
      }
     if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false)))) || false))
      {
       if(_GLF_DEAD(false))
        break;
       barrier();
      }
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
      {
       if(_GLF_DEAD(false))
        break;
       barrier();
      }
     if(_GLF_DEAD(false))
      continue;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_WRAPPED_IF_FALSE(false))
        {
        }
       else
        {
         if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, false || (false))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false), _GLF_IDENTITY(bvec3(bvec4(bvec3(_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, false || (false))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false), false)), bvec3(bvec4(bvec3(bvec4(bvec3(_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, false || (false))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false), false)), true)))))))))))
            {
             if(_GLF_DEAD(false))
              return;
             return;
            }
          }
         else
          {
           barrier();
          }
        }
      }
    }
   else
    {
     do
      {
       if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
        }
       else
        {
         if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y), ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y)) && true))))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         for(int _injected_loop_counter = (0 >> _GLF_IDENTITY(int(_GLF_IDENTITY(6, int(ivec4(6, 0, int(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, 1.0 * (injectionSwitch.x)))), 0)))), int(6))); _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter < ((1 << _GLF_IDENTITY(int(3), int(3))) >> _GLF_IDENTITY(int(3), int(3))), (_injected_loop_counter < ((1 << _GLF_IDENTITY(int(3), int(3))) >> _GLF_IDENTITY(int(3), int(_GLF_IDENTITY(3, _GLF_IDENTITY((3) | (3), 0 ^ ((3) | (3)))))))) || false)); _injected_loop_counter ++)
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x > injectionSwitch.y))))
            return;
           if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bool(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), true, false, true)))))))
            barrier();
           if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
            {
             if(_GLF_DEAD(false))
              continue;
             if(_GLF_DEAD(false))
              barrier();
             barrier();
            }
          }
         do
          {
           if(_GLF_DEAD(false))
            {
             do
              {
               if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
                return;
               if(_GLF_DEAD(false))
                {
                 if(_GLF_WRAPPED_IF_TRUE(true))
                  {
                   barrier();
                   if(_GLF_DEAD(false))
                    break;
                   if(_GLF_DEAD(false))
                    return;
                  }
                 else
                  {
                   if(_GLF_DEAD(false))
                    continue;
                  }
                 if(_GLF_DEAD(false))
                  return;
                }
              }
             while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(degrees(vec2(-534.413, -4667.2643))) : injectionSwitch)).x > injectionSwitch.y))));
             if(_GLF_WRAPPED_IF_TRUE(true))
              {
               return;
              }
             else
              {
              }
             if(_GLF_DEAD(false))
              {
               do
                {
                 return;
                }
               while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, float(mat3x4(_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(-702.855))), 0.0, 1.0, tan(_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-3575.3878)), float(_GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(-9964.4102) : 0.0))), bool(true)))), _GLF_IDENTITY(1.0, mix(float(_GLF_IDENTITY(1.0, max(1.0, 1.0))), float(_GLF_FUZZED(778.333)), bool(false))), 1.0, 0.0, determinant(mat3(1.0, _GLF_IDENTITY(dot(vec2(1.0, 1.0), vec2(0.0, 0.0)), dot(vec2(1.0, 1.0), vec2(0.0, 0.0))), 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0)), 0.0, abs(1.0), 1.0, _GLF_ZERO(0.0, injectionSwitch.x)))) > _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(-4.8))), injectionSwitch.y))))));
              }
            }
          }
         while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
         if(_GLF_DEAD(false))
          break;
         if(_GLF_DEAD(false))
          {
           for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
            {
             barrier();
            }
          }
        }
      }
     while(_GLF_WRAPPED_LOOP(false));
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)))), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)))), min(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)))), _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0))))))) - vec2(0.0, 0.0)), (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * _GLF_IDENTITY(mat2(1.0), mat2(_GLF_IDENTITY(mat2(mat2(1.0)), (mat2(mat2(1.0))) - mat2(0.0, 0.0, 0.0, 0.0)))))))) * vec2(1.0, _GLF_IDENTITY(1.0, 1.0 * (1.0)))), _GLF_IDENTITY(_GLF_IDENTITY(sqrt(vec2(1.0, 1.0)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED((+ injectionSwitch)) : sqrt(vec2(1.0, 1.0)))), vec2(mat2(sqrt(vec2(1.0, 1.0)), 1.0, round(length(normalize(vec3(1.0, 1.0, 1.0))))))) * (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)))), (false ? _GLF_FUZZED(mix(vec2(439.791, 39.26), vec2(1.5, -8.1), _GLF_IDENTITY(vec2(31.49, -29.78), (vec2(31.49, -29.78)) - vec2(0.0, 0.0)))) : _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)))))))).x > injectionSwitch.y))))
      {
       if(_GLF_WRAPPED_IF_TRUE(true))
        {
         if(_GLF_DEAD(false))
          continue;
         barrier();
        }
       else
        {
        }
      }
     do
      {
       if(_GLF_DEAD(false))
        break;
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          break;
         break;
        }
       atomicStore(buf[next_virtual_gid], uint(_GLF_IDENTITY(_GLF_IDENTITY(2, (_GLF_IDENTITY(2, (true ? 2 : _GLF_FUZZED(66407)))) - (0 << _GLF_IDENTITY(int(0), int(_GLF_IDENTITY(0, max(0, 0)))))), (_GLF_IDENTITY(2, (_GLF_IDENTITY(2, (true ? 2 : _GLF_FUZZED(66407)))) - (0 << _GLF_IDENTITY(int(0), int(0))))) >> 0)), _GLF_IDENTITY(4, min(4, _GLF_IDENTITY(4, min(_GLF_IDENTITY(4, (4) | (4)), 4)))), 64, 4);
       if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, false, true)))))
        {
         if(_GLF_DEAD(false))
          {
           do
            {
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              return;
             barrier();
            }
           while(_GLF_WRAPPED_LOOP(false));
           if(_GLF_DEAD(false))
            break;
          }
         break;
        }
      }
     while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, false || (false))));
     if(_GLF_DEAD(false))
      barrier();
     do
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, (false) && true))))))))
        barrier();
      }
     while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch), max((injectionSwitch), (injectionSwitch))) - vec2(0.0, 0.0)).x, max(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch), _GLF_IDENTITY(max((injectionSwitch), (injectionSwitch)), min(max((injectionSwitch), (injectionSwitch)), max((_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)), injectionSwitch, injectionSwitch))), (injectionSwitch))))) - vec2(0.0, 0.0)).x, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch), max((injectionSwitch), (injectionSwitch))) - vec2(0.0, _GLF_IDENTITY(0.0, max(0.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)))))).x)) > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          continue;
         if(_GLF_WRAPPED_IF_FALSE(false))
          {
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(false))
              break;
             barrier();
             if(_GLF_DEAD(false))
              return;
            }
          }
         else
          {
           if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > injectionSwitch.y))))
            continue;
           if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) && true))))))
            {
            }
           else
            {
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              return;
             barrier();
             if(_GLF_DEAD(false))
              {
               if(_GLF_DEAD(false))
                break;
               barrier();
              }
            }
          }
        }
       if(_GLF_WRAPPED_IF_FALSE(false))
        {
        }
       else
        {
         return;
        }
       if(_GLF_WRAPPED_IF_FALSE(false))
        {
        }
       else
        {
         if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)), false || (_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY((false) || false, ! (_GLF_IDENTITY(! ((false) || false), true && (! ((false) || false))))))))))
          barrier();
        }
       if(_GLF_WRAPPED_IF_FALSE(false))
        {
        }
       else
        {
         if(_GLF_DEAD(false))
          break;
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            continue;
           barrier();
          }
         if(_GLF_DEAD(false))
          return;
        }
       if(_GLF_DEAD(false))
        return;
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
      {
       if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
        }
       else
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            barrier();
           do
            {
             do
              {
               barrier();
              }
             while(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(false), true && (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(false), bool(bool(_GLF_WRAPPED_LOOP(false)))))));
            }
           while(_GLF_WRAPPED_LOOP(false));
           if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))))
            continue;
          }
         if(_GLF_DEAD(false))
          continue;
        }
       if(_GLF_DEAD(false))
        break;
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, true && (false))) || false))), (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(vec4(injectionSwitch.x, _GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0)), dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0))), 1.0, 1.0)), _GLF_IDENTITY(min(float(vec4(injectionSwitch.x, _GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0)), dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0))), 1.0, 1.0)), _GLF_IDENTITY(float(vec4(injectionSwitch.x, _GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0)), dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0))), 1.0, 1.0)), float(mat4x3(float(vec4(injectionSwitch.x, _GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0)), dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0))), 1.0, 1.0)), 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0)))), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(8.1) : min(float(vec4(injectionSwitch.x, _GLF_IDENTITY(dot(vec3(1.0, 0.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0))), vec3(1.0, 0.0, 0.0)), dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0))), 1.0, 1.0)), _GLF_IDENTITY(float(vec4(injectionSwitch.x, _GLF_IDENTITY(dot(vec3(_GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, float(mat4x3(1.0, 1.0, 1.0, 1.0, abs(0.0), 1.0, 1.0, 0.0, sqrt(0.0), 0.0, 1.0, 0.0))), 1.0, 1.0)), 0.0, 0.0), vec3(1.0, 0.0, 0.0)), dot(_GLF_IDENTITY(vec3(1.0, 0.0, 0.0), vec3(1.0, 1.0, 1.0) * (_GLF_IDENTITY(vec3(1.0, 0.0, 0.0), mat3(1.0) * (vec3(1.0, 0.0, 0.0))))), vec3(1.0, 0.0, 0.0))), 1.0, 1.0)), float(mat4x3(float(vec4(injectionSwitch.x, _GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0)), dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0))), 1.0, 1.0)), 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0)))))))) > injectionSwitch.y))) || false)))), true && (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true))), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(vec4(injectionSwitch.x, _GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0)), dot(vec3(_GLF_IDENTITY(1.0, (1.0) - 0.0), _GLF_IDENTITY(0.0, min(0.0, _GLF_IDENTITY(0.0, float(vec3(0.0, 0.0, 0.0))))), 0.0), vec3(1.0, 0.0, 0.0))), 1.0, 1.0)), min(float(vec4(injectionSwitch.x, _GLF_IDENTITY(dot(vec3(1.0, 0.0, _GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, clamp(0.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0)), 0.0))), vec3(1.0, 0.0, 0.0)), dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0))), 1.0, 1.0)), _GLF_IDENTITY(float(vec4(injectionSwitch.x, _GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0)), dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(58.19)), float(_GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0))), bool(true)))))), 1.0, 1.0)), float(mat4x3(float(vec4(injectionSwitch.x, _GLF_IDENTITY(dot(vec3(1.0, 0.0, _GLF_IDENTITY(0.0, max(0.0, 0.0))), vec3(1.0, 0.0, 0.0)), dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0))), 1.0, 1.0)), 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0)))))) > injectionSwitch.y))) || false)))), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(-2742.6395) : injectionSwitch.y)), injectionSwitch.y))), true && (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec2((injectionSwitch.x > injectionSwitch.y), false))))))))), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(_GLF_IDENTITY(float(vec4(injectionSwitch.x, _GLF_IDENTITY(dot(_GLF_IDENTITY(vec3(1.0, 0.0, 0.0), vec3(mat2x3(vec3(1.0, _GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0)), 0.0), 1.0, 1.0, 0.0))), vec3(1.0, 0.0, 0.0)), dot(_GLF_IDENTITY(vec3(1.0, 0.0, 0.0), (vec3(1.0, 0.0, 0.0)) / abs(vec3(1.0, 1.0, 1.0))), vec3(_GLF_IDENTITY(1.0, (1.0) - 0.0), 0.0, 0.0))), 1.0, 1.0)), min(float(vec4(injectionSwitch.x, _GLF_IDENTITY(dot(_GLF_IDENTITY(vec3(1.0, 0.0, 0.0), vec3(mat2x3(vec3(1.0, _GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0)), 0.0), 1.0, 1.0, 0.0))), vec3(1.0, 0.0, 0.0)), dot(_GLF_IDENTITY(vec3(1.0, 0.0, 0.0), (vec3(1.0, 0.0, 0.0)) / abs(vec3(1.0, 1.0, 1.0))), vec3(_GLF_IDENTITY(1.0, (1.0) - 0.0), 0.0, 0.0))), 1.0, 1.0)), float(vec4(injectionSwitch.x, _GLF_IDENTITY(dot(_GLF_IDENTITY(vec3(1.0, 0.0, 0.0), vec3(mat2x3(vec3(1.0, _GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0)), 0.0), 1.0, 1.0, 0.0))), vec3(1.0, 0.0, 0.0)), dot(_GLF_IDENTITY(vec3(1.0, 0.0, 0.0), (vec3(1.0, 0.0, 0.0)) / abs(vec3(1.0, 1.0, 1.0))), vec3(_GLF_IDENTITY(1.0, (1.0) - 0.0), 0.0, 0.0))), 1.0, 1.0)))), min(float(_GLF_IDENTITY(vec4(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0), max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-503.259)), bool(false))))), _GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0)), dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, _GLF_IDENTITY(0.0, float(vec3(0.0, log(1.0), exp(0.0))))))), 1.0, 1.0), min(vec4(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_IDENTITY(_GLF_FUZZED(-503.259), min(_GLF_FUZZED(-503.259), _GLF_FUZZED(-503.259)))), bool(false))))), _GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0)), dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, _GLF_IDENTITY(0.0, float(vec3(0.0, log(1.0), exp(0.0))))))), 1.0, 1.0), vec4(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-503.259)), bool(false))))), _GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0)), dot(vec3(_GLF_IDENTITY(1.0, float(mat2(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), 0.0, 0.0, 1.0))), 0.0, 0.0), vec3(1.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)), _GLF_IDENTITY(0.0, float(vec3(0.0, log(1.0), exp(0.0))))))), 1.0, 1.0)))), _GLF_IDENTITY(float(vec4(injectionSwitch.x, _GLF_IDENTITY(dot(vec3(_GLF_IDENTITY(1.0, (1.0) / determinant(mat2(1.0, 1.0, 0.0, 1.0))), 0.0, 0.0), vec3(1.0, 0.0, 0.0)), dot(vec3(1.0, _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(7.7))), 0.0), vec3(1.0, 0.0, 0.0))), 1.0, 1.0)), _GLF_IDENTITY(float(mat4x3(float(vec4(injectionSwitch.x, _GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0)), dot(vec3(1.0, 0.0, _GLF_IDENTITY(0.0, float(mat3(0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0)))), vec3(1.0, 0.0, 0.0))), 1.0, 1.0)), 1.0, 1.0, 1.0, 0.0, _GLF_IDENTITY(0.0, 0.0 + (0.0)), 1.0, 1.0, 0.0, 1.0, 0.0, 1.0)), min(float(mat4x3(float(vec4(injectionSwitch.x, _GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0)), dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0))), _GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, (1.0) / 1.0), 1.0)), 1.0)), 1.0, 1.0, 1.0, 0.0, _GLF_IDENTITY(0.0, 0.0 + (0.0)), 1.0, 1.0, 0.0, 1.0, 0.0, 1.0)), float(mat4x3(float(vec4(injectionSwitch.x, _GLF_IDENTITY(_GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0)), dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0))), max(_GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0)), dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0))), _GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0)), dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0))))), 1.0, 1.0)), 1.0, 1.0, 1.0, 0.0, _GLF_IDENTITY(0.0, 0.0 + (0.0)), 1.0, 1.0, 0.0, 1.0, 0.0, 1.0)))))))) > injectionSwitch.y))) || false)))))))))))
        return;
       if(_GLF_DEAD(false))
        break;
       if(_GLF_WRAPPED_IF_FALSE(false))
        {
        }
       else
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          {
           if(_GLF_WRAPPED_IF_FALSE(false))
            {
            }
           else
            {
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              barrier();
             return;
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              barrier();
            }
           if(_GLF_DEAD(false))
            continue;
          }
         if(_GLF_DEAD(false))
          {
           if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            {
             if(_GLF_DEAD(false))
              return;
            }
           else
            {
             barrier();
            }
          }
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(false))
              return;
             barrier();
            }
           continue;
          }
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         if(_GLF_DEAD(false))
          barrier();
        }
       if(_GLF_WRAPPED_IF_TRUE(true))
        {
         if(_GLF_WRAPPED_IF_TRUE(true))
          {
           if(_GLF_DEAD(false))
            {
             if(_GLF_WRAPPED_IF_TRUE(true))
              {
               barrier();
              }
             else
              {
              }
            }
           barrier();
          }
         else
          {
          }
        }
       else
        {
         if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, true && (false)), (injectionSwitch.x > injectionSwitch.y))))
          continue;
        }
      }
     subgroupAll(true);
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec2(bvec2(false, false))))))), bool(bvec2(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec2(bvec2(false, false))))))), true))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      break;
     if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, bool(bvec2(_GLF_IDENTITY(true, bool(bvec4(true, true, true, _GLF_IDENTITY(true, (_GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, bool(bvec4(true, true, true, false)))))) && true)))), true)))))
      {
       if(_GLF_DEAD(false))
        barrier();
      }
     else
      {
      }
     if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         barrier();
        }
      }
     else
      {
      }
    }
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     barrier();
    }
   else
    {
    }
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))) && true)))
  {
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     if(_GLF_DEAD(false))
      {
       do
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
          break;
         if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
          {
           if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_DEAD(false))))
            return;
          }
         else
          {
          }
        }
       while(_GLF_WRAPPED_LOOP(false));
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
    }
   else
    {
    }
  }
 else
  {
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat2x4(injectionSwitch, 1.0, abs(0.0), 0.0, round(length(normalize(vec3(1.0, 1.0, 1.0)))), 1.0, 0.0), mat2x4(mat4(mat2x4(injectionSwitch, 1.0, abs(0.0), 0.0, round(length(normalize(vec3(1.0, 1.0, 1.0)))), 1.0, 0.0)))))).x > injectionSwitch.y))))
  return;
 for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
  {
   if(_GLF_DEAD(false))
    continue;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      continue;
    }
   if(_GLF_DEAD(false))
    break;
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  {
   for(int _injected_loop_counter = (_GLF_IDENTITY((0 << _GLF_IDENTITY(int(4), int(_GLF_IDENTITY(4, (false ? _GLF_FUZZED(-43506) : 4))))), 1 * ((_GLF_IDENTITY(0, ~ (~ (0))) << _GLF_IDENTITY(int(_GLF_IDENTITY(4, (4) / 1)), int(4))))) | 1); _GLF_WRAPPED_LOOP(_injected_loop_counter > (0 >> _GLF_IDENTITY(int(7), int(7)))); _injected_loop_counter --)
    {
     barrier();
    }
  }
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y))))), true && (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(-978.567) : _GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)))) > injectionSwitch.y))))))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (_GLF_IDENTITY(! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false || (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))
  return;
}
