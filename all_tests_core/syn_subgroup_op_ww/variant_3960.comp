#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
#extension GL_EXT_maximal_reconvergence : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(vec3(0.6, 587.769, 1.3).p)), bool(false))) > injectionSwitch.y))))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, _GLF_IDENTITY(false || (_GLF_IDENTITY(false, _GLF_IDENTITY((false) || false, bool(bvec3((false) || false, true, false))))), (_GLF_IDENTITY(false || (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) || false)), true && (false || (_GLF_IDENTITY(false, _GLF_IDENTITY((false), ! (! (_GLF_IDENTITY((false), ! (! ((false))))))) || false))))) && _GLF_IDENTITY(true, ! (! (true)))))) || false), ! (! (_GLF_IDENTITY(false, _GLF_IDENTITY((_GLF_IDENTITY(false, _GLF_IDENTITY(false || _GLF_IDENTITY((_GLF_IDENTITY(false, (false) || false)), ! (_GLF_IDENTITY(! ((_GLF_IDENTITY(false, (false) || false))), bool(bvec4(_GLF_IDENTITY(! ((_GLF_IDENTITY(false, (false) || false))), ! (! (! ((_GLF_IDENTITY(false, (false) || false)))))), false, false, true))))), _GLF_IDENTITY((_GLF_IDENTITY(false || (_GLF_IDENTITY(false, (false) || false)), true && (false || (_GLF_IDENTITY(false, _GLF_IDENTITY((false), ! (! (_GLF_IDENTITY((false), ! (! ((false))))))) || false))))) && true, bool(_GLF_IDENTITY(bvec3((_GLF_IDENTITY(false || (_GLF_IDENTITY(false, (false) || false)), true && (false || (_GLF_IDENTITY(false, _GLF_IDENTITY((false), ! (! (_GLF_IDENTITY((false), ! (! ((false))))))) || false))))) && true, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec3(bvec4(bvec3((_GLF_IDENTITY(false || (_GLF_IDENTITY(false, (false) || false)), true && (false || (_GLF_IDENTITY(false, _GLF_IDENTITY((false), ! (! (_GLF_IDENTITY((false), ! (! ((false))))))) || false))))) && true, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true)))))))), ! (! ((_GLF_IDENTITY(false, _GLF_IDENTITY(false || _GLF_IDENTITY((_GLF_IDENTITY(false, (false) || false)), ! (_GLF_IDENTITY(! ((_GLF_IDENTITY(false, (false) || false))), bool(bvec4(_GLF_IDENTITY(! ((_GLF_IDENTITY(false, (false) || false))), ! (! (! ((_GLF_IDENTITY(false, (false) || false)))))), false, false, true))))), _GLF_IDENTITY((_GLF_IDENTITY(false || (_GLF_IDENTITY(false, (false) || false)), true && (false || (_GLF_IDENTITY(false, _GLF_IDENTITY((false), ! (! (_GLF_IDENTITY((false), ! (! ((false))))))) || false))))) && true, bool(_GLF_IDENTITY(bvec3((_GLF_IDENTITY(false || (_GLF_IDENTITY(false, (false) || false)), true && (false || (_GLF_IDENTITY(false, _GLF_IDENTITY((false), ! (! (_GLF_IDENTITY((false), ! (! ((false))))))) || false))))) && true, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec3(bvec4(bvec3((_GLF_IDENTITY(false || (_GLF_IDENTITY(false, (false) || false)), true && (false || (_GLF_IDENTITY(false, _GLF_IDENTITY((false), ! (! (_GLF_IDENTITY((false), ! (! ((false))))))) || false))))) && true, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true))))))))))) || false))))))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, false || (false))) || false), (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], 0.0 + (injectionSwitch[0])), injectionSwitch[1])).y))), false || (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(determinant(mat3(-8.4, 9718.6006, 520.148, -134.118, 9049.8259, 478.749, 6.2, -6182.0551, -3.8))))), _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(-5.8)), bool(false))))))), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) && true)))))))
    return;
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + sqrt(vec2(0.0, 0.0))).x > injectionSwitch.y))))))
  return;
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY((false) || _GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x) * exp(0.0)) > injectionSwitch.y)), true && ((false) || _GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x) * exp(0.0)), min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x) * exp(0.0)), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x) * exp(0.0)))) > injectionSwitch.y)))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(cosh(injectionSwitch)) : injectionSwitch)).y))))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 uint num_workgroup = _GLF_IDENTITY(gl_NumWorkGroups, _GLF_IDENTITY((gl_NumWorkGroups), max((gl_NumWorkGroups), _GLF_IDENTITY((gl_NumWorkGroups), (uvec3(0u, 0u, 0u) << _GLF_IDENTITY(_GLF_IDENTITY(uvec3(2u), uvec3(2u)), min(_GLF_IDENTITY(uvec3(2u), uvec3(2u)), _GLF_IDENTITY(uvec3(2u), uvec3(2u))))) ^ ((gl_NumWorkGroups))))) - uvec3(0u, 0u, 0u)).x;
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(8.7))))), (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(8.7)))))) || false)), (_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(8.7))))), (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(_GLF_IDENTITY(8.7, clamp(8.7, 8.7, 8.7)))))))) || false), _GLF_IDENTITY((_GLF_FALSE(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, true && (false)))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(true ? injectionSwitch.y : _GLF_FUZZED(8.7), (true ? injectionSwitch.y : _GLF_FUZZED(8.7)) - 0.0)))))) || false, bool(bvec3(_GLF_IDENTITY((_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, true && (false)))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, true && (false))))), ! (! (bool(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, true && (false))))))))), _GLF_IDENTITY(bool(bvec3(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, true && (false))))), ! (! (bool(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, true && (false))))))))), true, true)), bool(bool(bool(bvec3(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, true && (false))))), ! (! (bool(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, true && (false))))))))), true, true))))))), (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), (true ? injectionSwitch.y : _GLF_FUZZED(8.7)))))) || false, ! _GLF_IDENTITY((_GLF_IDENTITY(! ((_GLF_FALSE(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, true && (false)))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(8.7)))))) || false), bool(bvec3(! ((_GLF_FALSE(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, true && (false)))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_IDENTITY(_GLF_FUZZED(8.7), clamp(_GLF_FUZZED(8.7), _GLF_FUZZED(8.7), _GLF_FUZZED(8.7)))))))) || false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && ((_GLF_IDENTITY(! ((_GLF_FALSE(_GLF_IDENTITY(false, true && _GLF_IDENTITY((_GLF_IDENTITY(false, true && (false))), bool(_GLF_IDENTITY(bool((_GLF_IDENTITY(false, true && (false)))), ! (! (bool((_GLF_IDENTITY(false, true && (false)))))))))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(8.7)))))) || false), bool(_GLF_IDENTITY(bvec3(! ((_GLF_FALSE(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, true && (false)))), (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, 0.0 + (injectionSwitch.y)), (true ? injectionSwitch.y : _GLF_FUZZED(8.7)))))) || false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false), _GLF_IDENTITY(bvec3(bvec3(bvec3(! ((_GLF_FALSE(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, true && (false)))), (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, 0.0 + (injectionSwitch.y)), (true ? injectionSwitch.y : _GLF_FUZZED(8.7)))))) || false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))), bvec3(bvec3(bvec3(bvec3(bvec3(! ((_GLF_FALSE(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, true && (false)))), (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, 0.0 + (injectionSwitch.y)), (true ? injectionSwitch.y : _GLF_FUZZED(8.7)))))) || false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))))))))))))), _GLF_IDENTITY(false, bool(bvec2(false, true))), true)))))) && _GLF_TRUE(true, _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ! (_GLF_IDENTITY(! ((injectionSwitch.x < injectionSwitch.y)), true && (! ((injectionSwitch.x < injectionSwitch.y)))))), bool(bvec3(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ((injectionSwitch.x < injectionSwitch.y)) || false) || false)), ((_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ((injectionSwitch.x < injectionSwitch.y)) || false) || false))) || false), false, true))))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 uint workgroup_size = _GLF_IDENTITY(gl_WorkGroupSize.x, ~ (~ (gl_WorkGroupSize.x)));
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, bool(bool(false))), _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec2((injectionSwitch.x > injectionSwitch.y), true)))), _GLF_IDENTITY(bool(bvec2(_GLF_FALSE(_GLF_IDENTITY(false, bool(bool(false))), _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec2((injectionSwitch.x > injectionSwitch.y), true)))), false)), (bool(bvec2(_GLF_FALSE(_GLF_IDENTITY(false, bool(bool(false))), _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec2((injectionSwitch.x > injectionSwitch.y), true)))), false))) || false))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 uint workgroup_id = _GLF_IDENTITY(gl_WorkGroupID, uvec3(gl_WorkGroupID[0], gl_WorkGroupID[1], _GLF_IDENTITY(gl_WorkGroupID[2], 0u ^ (gl_WorkGroupID[2])))).x;
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
    return;
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)), injectionSwitch)))).x > injectionSwitch.y))))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 uint workgroup_base = _GLF_IDENTITY(workgroup_size, min(_GLF_IDENTITY(workgroup_size, clamp(workgroup_size, workgroup_size, workgroup_size)), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_size, clamp(_GLF_IDENTITY(workgroup_size, (workgroup_size) >> 0u), workgroup_size, workgroup_size)), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(71422u) : _GLF_IDENTITY(workgroup_size, clamp(_GLF_IDENTITY(workgroup_size, (workgroup_size) >> 0u), workgroup_size, workgroup_size)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(71422u) : _GLF_IDENTITY(workgroup_size, clamp(_GLF_IDENTITY(workgroup_size, (workgroup_size) >> 0u), workgroup_size, workgroup_size))) >> (0u ^ 0u)))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_size, clamp(_GLF_IDENTITY(workgroup_size, (workgroup_size) >> 0u), workgroup_size, workgroup_size)), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(71422u) : _GLF_IDENTITY(workgroup_size, clamp(_GLF_IDENTITY(workgroup_size, (workgroup_size) >> 0u), workgroup_size, workgroup_size)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(71422u) : _GLF_IDENTITY(workgroup_size, clamp(_GLF_IDENTITY(workgroup_size, (workgroup_size) >> 0u), workgroup_size, workgroup_size))) >> (0u ^ 0u)))), 0u | (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_size, clamp(_GLF_IDENTITY(workgroup_size, (workgroup_size) >> 0u), workgroup_size, workgroup_size)), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(71422u) : _GLF_IDENTITY(workgroup_size, clamp(_GLF_IDENTITY(workgroup_size, (workgroup_size) >> 0u), workgroup_size, workgroup_size)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(71422u) : _GLF_IDENTITY(workgroup_size, clamp(_GLF_IDENTITY(workgroup_size, (workgroup_size) >> 0u), workgroup_size, workgroup_size))) >> (0u ^ 0u))))))) | (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_size, clamp(_GLF_IDENTITY(workgroup_size, (workgroup_size) >> 0u), workgroup_size, workgroup_size)), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(71422u) : _GLF_IDENTITY(workgroup_size, clamp(_GLF_IDENTITY(workgroup_size, (workgroup_size) >> 0u), workgroup_size, workgroup_size)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(71422u) : _GLF_IDENTITY(workgroup_size, clamp(_GLF_IDENTITY(workgroup_size, (workgroup_size) >> 0u), workgroup_size, workgroup_size))) >> (0u ^ 0u)))))))) * workgroup_id;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, false)))))
  return;
 uint subgroup_base = _GLF_IDENTITY(subgroup_id, (subgroup_id) ^ uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-2995.1280)), float(_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(-4804.8243) : _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))))).x, 1.0 * (injectionSwitch.x))))), bool(true)))))) * _GLF_IDENTITY(subgroup_size, ~ (_GLF_IDENTITY(_GLF_IDENTITY(~ (subgroup_size), (true ? ~ (subgroup_size) : _GLF_FUZZED(workgroup_id))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(~ (subgroup_size), (_GLF_IDENTITY(true, true && (true)) ? ~ (subgroup_size) : _GLF_FUZZED(workgroup_id))), (false ? _GLF_FUZZED(workgroup_id) : _GLF_IDENTITY(~ (subgroup_size), (_GLF_IDENTITY(true, _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(true, (true) && true), false, false)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(true, (true) && true), false, false)), false || (bool(bvec3(_GLF_IDENTITY(true, (true) && true), false, false))))), true && (! (_GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(true, (true) && true), false, false)), false || (bool(bvec3(_GLF_IDENTITY(true, (true) && true), false, false))))))))), bool(bvec4(bool(bvec3(true, false, _GLF_IDENTITY(false, (false) && true))), false, true, false)))) ? ~ (subgroup_size) : _GLF_FUZZED(workgroup_id))))), _GLF_IDENTITY(_GLF_IDENTITY(~ (subgroup_size), (true ? ~ (subgroup_size) : _GLF_FUZZED(workgroup_id))), (_GLF_IDENTITY(~ (subgroup_size), (true ? ~ (subgroup_size) : _GLF_FUZZED(workgroup_id)))) * 1u), _GLF_IDENTITY(~ (subgroup_size), (true ? ~ (subgroup_size) : _GLF_FUZZED(workgroup_id)))))));
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) && true), (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 uint virtual_gid = _GLF_IDENTITY(workgroup_base + subgroup_base + subgroup_local_id, (workgroup_base + subgroup_base + subgroup_local_id) | 0u);
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 uint next_virtual_gid = workgroup_base + _GLF_IDENTITY(subgroup_base, _GLF_IDENTITY(max(_GLF_IDENTITY(subgroup_base, (false ? _GLF_FUZZED(workgroup_base) : subgroup_base)), subgroup_base), clamp(_GLF_IDENTITY(max(_GLF_IDENTITY(subgroup_base, (false ? _GLF_FUZZED(workgroup_base) : subgroup_base)), subgroup_base), uint(uvec3(max(_GLF_IDENTITY(subgroup_base, (false ? _GLF_FUZZED(workgroup_base) : subgroup_base)), subgroup_base), 1u, 0u))), max(_GLF_IDENTITY(subgroup_base, (false ? _GLF_FUZZED(workgroup_base) : subgroup_base)), subgroup_base), _GLF_IDENTITY(max(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_base, clamp(subgroup_base, _GLF_IDENTITY(subgroup_base, (subgroup_base) << 0u), subgroup_base)), (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(bvec4(! (false), true, true, false)))))))) ? _GLF_FUZZED(workgroup_base) : subgroup_base)), subgroup_base), (false ? _GLF_FUZZED(bitfieldReverse(subgroup_local_id)) : max(_GLF_IDENTITY(subgroup_base, _GLF_IDENTITY((false ? _GLF_FUZZED(workgroup_base) : subgroup_base), ((false ? _GLF_FUZZED(workgroup_base) : subgroup_base)) | ((false ? _GLF_FUZZED(workgroup_base) : subgroup_base)))), subgroup_base)))))) + (_GLF_IDENTITY((subgroup_local_id + _GLF_IDENTITY(1, 0 ^ (1))) % subgroup_size, ((subgroup_local_id + _GLF_IDENTITY(1, _GLF_IDENTITY(0, max(0, 0)) + (1))) % subgroup_size) | ((subgroup_local_id + 1) % _GLF_IDENTITY(subgroup_size, (subgroup_size) << 0u))));
 atomicStore(buf[virtual_gid], _GLF_IDENTITY(uint(1), (_GLF_IDENTITY(uint(_GLF_IDENTITY(1, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(1, 1 * (_GLF_IDENTITY(1, int(ivec2(1, 1)))))), (false ? _GLF_FUZZED(-71531) : ~ (_GLF_IDENTITY(1, 1 * (_GLF_IDENTITY(1, int(ivec2(1, 1))))))))))), (uint(_GLF_IDENTITY(1, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(1, 1 * (_GLF_IDENTITY(1, int(ivec2(1, 1)))))), (false ? _GLF_FUZZED(-71531) : ~ (_GLF_IDENTITY(1, 1 * (_GLF_IDENTITY(1, int(ivec2(1, 1)))))))))))) << 0u)) * 1u), _GLF_IDENTITY(4, (4) >> 0), 64, 4);
 if((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) - 0u), max(subgroup_local_id, subgroup_local_id)) % 2) == 0)
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mat2(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), (true ? _GLF_ONE(1.0, injectionSwitch.y) : _GLF_FUZZED(-7242.3654)))) * (injectionSwitch)).y))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(true, false || (true)) && _GLF_IDENTITY((false), bool(bvec4((false), false, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), true && (true && _GLF_IDENTITY((false), bool(bvec4((false), false, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), true && (! (false)))))), ! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), true && (! (false)))))), (_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), _GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(true, _GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, bool(bvec3(false, false, true))), true, true))), true), bvec3(bvec4(bvec3(true, false, true), true)))), false || (bool(_GLF_IDENTITY(bvec3(true, false, true), bvec3(bvec4(bvec3(true, false, true), true))))))))) && (! (false))))))) || false)))))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y)), true && (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y))))))
    return;
   subgroupAll(_GLF_IDENTITY(_GLF_IDENTITY(true, (_GLF_IDENTITY(true, (true) || false)) || false), _GLF_IDENTITY((_GLF_IDENTITY(true, _GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(true, false), bvec2(bvec4(bvec2(true, false), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0))) < injectionSwitch.y)), true))), bvec2(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(true, false), bvec2(bvec4(bvec2(true, false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))), bvec2(bvec2(_GLF_IDENTITY(bvec2(true, false), bvec2(bvec4(bvec2(true, false), _GLF_TRUE(_GLF_IDENTITY(true, ! (! (true))), (injectionSwitch.x < injectionSwitch.y)), true)))))), _GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, false || (true))))))))), (bool(_GLF_IDENTITY(bvec2(true, false), _GLF_IDENTITY(bvec2(bvec4(bvec2(true, false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)), bvec2(bvec4(bvec2(bvec4(bvec2(true, false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)), true, false)))))) && true))) && _GLF_IDENTITY(true, ! (! (true))), true && _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY((true) && true, _GLF_IDENTITY(bool(bvec3((true) && true, true, true)), false || (bool(bvec3((true) && true, true, true)))))), true && (_GLF_IDENTITY((_GLF_IDENTITY((true) && true, _GLF_IDENTITY(bool(bvec3((true) && true, true, true)), _GLF_IDENTITY(false || (bool(bvec3((true) && true, true, true))), ! (! (false || (bool(bvec3((true) && true, true, true))))))))), ((_GLF_IDENTITY((true) && true, _GLF_IDENTITY(bool(bvec3((true) && true, true, true)), false || (bool(bvec3((true) && true, true, true))))))) && true))), _GLF_IDENTITY(bool(bvec3((_GLF_IDENTITY((true) && true, _GLF_IDENTITY(bool(bvec3((true) && true, true, true)), false || (bool(bvec3((true) && true, true, true)))))), true, false)), ! (_GLF_IDENTITY(! (bool(bvec3((_GLF_IDENTITY((true) && true, _GLF_IDENTITY(bool(bvec3((true) && true, true, true)), false || (bool(_GLF_IDENTITY(bvec3((true) && true, true, true), bvec3(_GLF_IDENTITY(bvec3(bvec3((true) && true, true, true)), bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec3((true) && true, true, true)), bvec3(bvec4(bvec3(bvec3((true) && true, true, true)), false))), true)))))))))), true, false))), ! (! (! (bool(bvec3((_GLF_IDENTITY((true) && true, _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec3((true) && true, true, true)), false || (bool(_GLF_IDENTITY(bvec3((true) && true, true, true), bvec3(_GLF_IDENTITY(bvec3(bvec3((true) && true, true, true)), bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec3((true) && true, true, true)), bvec3(bvec4(bvec3(bvec3((true) && true, true, true)), false))), true)))))))), (_GLF_IDENTITY(bool(bvec3((true) && true, true, true)), false || (bool(_GLF_IDENTITY(bvec3((true) && true, true, true), bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3((true) && true, true, true), _GLF_IDENTITY(bvec3(bvec4(_GLF_IDENTITY(bvec3((true) && true, true, true), bvec3(bvec3(bvec3((true) && true, true, true)))), true)), bvec3(bvec4(bvec3(bvec4(_GLF_IDENTITY(bvec3((true) && true, true, true), bvec3(bvec3(bvec3((true) && true, true, true)))), true)), false))))), bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec3((true) && true, true, true)), bvec3(bvec4(bvec3(bvec3((true) && true, true, true)), false))), true))))))))) || false))), true, false))))))))))));
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat4(injectionSwitch, 1.0, 1.0, _GLF_IDENTITY(1.0, min(1.0, 1.0)), 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0), (true ? mat4(injectionSwitch, 1.0, 1.0, 1.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)), 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0) : _GLF_FUZZED(_GLF_IDENTITY(_GLF_IDENTITY(mat4(-27.28, -6944.8645, 84.18, 1.3, 4.1, 367.374, 3818.8580, 2426.1684, 362.313, -69.07, -1.1, 7.8, 5.7, -687.495, -2.4, -31.13), (true ? _GLF_IDENTITY(mat4(-27.28, -6944.8645, 84.18, 1.3, 4.1, 367.374, 3818.8580, 2426.1684, 362.313, -69.07, -1.1, 7.8, 5.7, -687.495, -2.4, -31.13), (mat4(-27.28, -6944.8645, 84.18, 1.3, 4.1, 367.374, 3818.8580, 2426.1684, 362.313, -69.07, -1.1, 7.8, 5.7, -687.495, -2.4, -31.13)) + mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)) : _GLF_FUZZED(mat4(6.6)))), (false ? _GLF_FUZZED(mat4(7.4, -718.450, -0.7, 8.0, -495.416, 0.5, -467.720, 324.890, 67.03, 5352.7593, -526.622, -377.376, -3.8, -0.0, 5497.8778, -60.50)) : mat4(-27.28, -6944.8645, 84.18, 1.3, 4.1, 367.374, 3818.8580, 2426.1684, 362.313, -69.07, -1.1, 7.8, 5.7, -687.495, -2.4, -31.13)))))))), injectionSwitch)), _GLF_IDENTITY(mat2(1.0) * (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat4(injectionSwitch, 1.0, 1.0, _GLF_IDENTITY(1.0, min(1.0, 1.0)), 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0), (true ? mat4(injectionSwitch, 1.0, 1.0, 1.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)), 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0) : _GLF_FUZZED(_GLF_IDENTITY(_GLF_IDENTITY(mat4(-27.28, -6944.8645, 84.18, 1.3, 4.1, 367.374, 3818.8580, 2426.1684, 362.313, -69.07, -1.1, 7.8, 5.7, -687.495, -2.4, -31.13), (true ? _GLF_IDENTITY(mat4(-27.28, -6944.8645, 84.18, 1.3, 4.1, 367.374, 3818.8580, 2426.1684, 362.313, -69.07, -1.1, 7.8, 5.7, -687.495, -2.4, -31.13), (mat4(-27.28, -6944.8645, 84.18, 1.3, 4.1, 367.374, 3818.8580, 2426.1684, 362.313, -69.07, -1.1, 7.8, 5.7, -687.495, -2.4, -31.13)) + mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)) : _GLF_FUZZED(mat4(6.6)))), (false ? _GLF_FUZZED(mat4(7.4, -718.450, -0.7, 8.0, -495.416, 0.5, -467.720, 324.890, 67.03, 5352.7593, -526.622, -377.376, -3.8, -0.0, 5497.8778, -60.50)) : mat4(-27.28, -6944.8645, 84.18, 1.3, 4.1, 367.374, 3818.8580, 2426.1684, 362.313, -69.07, -1.1, 7.8, 5.7, -687.495, -2.4, -31.13)))))))), injectionSwitch))), clamp(mat2(1.0) * (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat4(injectionSwitch, 1.0, 1.0, _GLF_IDENTITY(1.0, min(1.0, 1.0)), 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0), (true ? mat4(injectionSwitch, 1.0, 1.0, 1.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)), 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0) : _GLF_FUZZED(_GLF_IDENTITY(_GLF_IDENTITY(mat4(-27.28, -6944.8645, 84.18, 1.3, 4.1, 367.374, 3818.8580, 2426.1684, 362.313, -69.07, -1.1, 7.8, 5.7, -687.495, -2.4, -31.13), (true ? _GLF_IDENTITY(mat4(-27.28, -6944.8645, 84.18, 1.3, 4.1, 367.374, 3818.8580, 2426.1684, 362.313, -69.07, -1.1, 7.8, 5.7, -687.495, -2.4, -31.13), (mat4(-27.28, -6944.8645, 84.18, 1.3, 4.1, 367.374, 3818.8580, 2426.1684, 362.313, -69.07, -1.1, 7.8, 5.7, -687.495, -2.4, -31.13)) + mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)) : _GLF_FUZZED(mat4(6.6)))), (false ? _GLF_FUZZED(mat4(7.4, -718.450, -0.7, 8.0, -495.416, 0.5, -467.720, 324.890, 67.03, 5352.7593, -526.622, -377.376, -3.8, -0.0, 5497.8778, -60.50)) : mat4(-27.28, -6944.8645, 84.18, 1.3, 4.1, 367.374, 3818.8580, 2426.1684, 362.313, -69.07, -1.1, 7.8, 5.7, -687.495, -2.4, -31.13)))))))), injectionSwitch))), mat2(1.0) * (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat4(injectionSwitch, 1.0, 1.0, _GLF_IDENTITY(1.0, min(1.0, 1.0)), 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0), (true ? mat4(injectionSwitch, 1.0, 1.0, 1.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)), 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0) : _GLF_FUZZED(_GLF_IDENTITY(_GLF_IDENTITY(mat4(-27.28, -6944.8645, 84.18, 1.3, 4.1, 367.374, 3818.8580, 2426.1684, 362.313, -69.07, -1.1, 7.8, 5.7, -687.495, -2.4, -31.13), (true ? _GLF_IDENTITY(mat4(-27.28, -6944.8645, 84.18, 1.3, 4.1, 367.374, 3818.8580, 2426.1684, 362.313, -69.07, -1.1, 7.8, 5.7, -687.495, -2.4, -31.13), (mat4(-27.28, -6944.8645, 84.18, 1.3, 4.1, 367.374, 3818.8580, 2426.1684, 362.313, -69.07, -1.1, 7.8, 5.7, -687.495, -2.4, -31.13)) + mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)) : _GLF_FUZZED(mat4(6.6)))), (false ? _GLF_FUZZED(mat4(7.4, -718.450, -0.7, 8.0, -495.416, 0.5, -467.720, 324.890, 67.03, 5352.7593, -526.622, -377.376, -3.8, -0.0, 5497.8778, -60.50)) : mat4(-27.28, -6944.8645, 84.18, 1.3, 4.1, 367.374, 3818.8580, 2426.1684, 362.313, -69.07, -1.1, 7.8, 5.7, -687.495, -2.4, -31.13)))))))), injectionSwitch))), mat2(1.0) * (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat4(injectionSwitch, 1.0, 1.0, _GLF_IDENTITY(1.0, min(1.0, 1.0)), 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0), (true ? mat4(injectionSwitch, 1.0, 1.0, 1.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)), 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0) : _GLF_FUZZED(_GLF_IDENTITY(_GLF_IDENTITY(mat4(-27.28, -6944.8645, 84.18, 1.3, 4.1, 367.374, 3818.8580, 2426.1684, 362.313, -69.07, -1.1, 7.8, 5.7, -687.495, -2.4, -31.13), (true ? _GLF_IDENTITY(mat4(-27.28, -6944.8645, 84.18, 1.3, 4.1, 367.374, 3818.8580, 2426.1684, 362.313, -69.07, -1.1, 7.8, 5.7, -687.495, -2.4, -31.13), (mat4(-27.28, -6944.8645, 84.18, 1.3, 4.1, 367.374, 3818.8580, 2426.1684, 362.313, -69.07, -1.1, 7.8, 5.7, -687.495, -2.4, -31.13)) + mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)) : _GLF_FUZZED(mat4(6.6)))), (false ? _GLF_FUZZED(mat4(7.4, -718.450, -0.7, 8.0, -495.416, 0.5, -467.720, 324.890, 67.03, 5352.7593, -526.622, -377.376, -3.8, -0.0, 5497.8778, -60.50)) : mat4(-27.28, -6944.8645, 84.18, 1.3, 4.1, 367.374, 3818.8580, 2426.1684, 362.313, -69.07, -1.1, 7.8, 5.7, -687.495, -2.4, -31.13)))))))), injectionSwitch)))))).y))), (_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, false || (false))))), _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)), clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat4(injectionSwitch, 1.0, 1.0, _GLF_IDENTITY(1.0, min(1.0, 1.0)), 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(sinh(-64.49)))), 1.0, 1.0), _GLF_IDENTITY((true ? mat4(injectionSwitch, 1.0, 1.0, _GLF_IDENTITY(1.0, (1.0) * 1.0), 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(0.0, (0.0) / 1.0), 0.0, 1.0, 1.0) : _GLF_FUZZED(_GLF_IDENTITY(mat4(-27.28, _GLF_IDENTITY(-6944.8645, min(-6944.8645, -6944.8645)), _GLF_IDENTITY(84.18, (84.18) / cos(0.0)), 1.3, 4.1, 367.374, 3818.8580, 2426.1684, 362.313, -69.07, -1.1, 7.8, 5.7, -687.495, -2.4, -31.13), (false ? _GLF_FUZZED(mat4(7.4, -718.450, -0.7, 8.0, -495.416, 0.5, -467.720, _GLF_IDENTITY(324.890, clamp(324.890, _GLF_IDENTITY(324.890, max(324.890, 324.890)), 324.890)), 67.03, 5352.7593, -526.622, -377.376, -3.8, -0.0, 5497.8778, -60.50)) : mat4(-27.28, -6944.8645, 84.18, 1.3, 4.1, _GLF_IDENTITY(367.374, float(_GLF_IDENTITY(mat2(367.374, log(1.0), length(vec3(0.0, 0.0, 0.0)), 0.0), transpose(transpose(mat2(367.374, log(1.0), length(vec3(0.0, 0.0, 0.0)), 0.0)))))), 3818.8580, 2426.1684, _GLF_IDENTITY(362.313, min(_GLF_IDENTITY(362.313, min(362.313, 362.313)), 362.313)), -69.07, _GLF_IDENTITY(-1.1, (-1.1) * 1.0), 7.8, 5.7, -687.495, -2.4, -31.13))))), (false ? _GLF_FUZZED(mat4(-2.9, -9.8, 115.166, -806.062, -2291.5975, -5.8, 8.8, -1.6, 8694.4325, -492.527, 135.900, -3.8, -7088.6620, -381.133, 760.766, 7.8)) : (true ? mat4(injectionSwitch, 1.0, 1.0, _GLF_IDENTITY(_GLF_IDENTITY(1.0, min(1.0, 1.0)), (1.0) * 1.0), 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(0.0, (0.0) / 1.0), 0.0, 1.0, _GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(1.3)), float(1.0), bool(true))), 1.0, _GLF_IDENTITY(1.0, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? 1.0 : _GLF_FUZZED(-412.403)))))) : _GLF_FUZZED(_GLF_IDENTITY(mat4(-27.28, -6944.8645, _GLF_IDENTITY(84.18, (84.18) / cos(0.0)), 1.3, 4.1, 367.374, 3818.8580, 2426.1684, 362.313, _GLF_IDENTITY(-69.07, (-69.07) - 0.0), -1.1, 7.8, 5.7, -687.495, -2.4, -31.13), (false ? _GLF_FUZZED(mat4(_GLF_IDENTITY(7.4, clamp(7.4, 7.4, 7.4)), -718.450, -0.7, 8.0, -495.416, 0.5, -467.720, 324.890, 67.03, 5352.7593, -526.622, -377.376, -3.8, -0.0, 5497.8778, -60.50)) : mat4(-27.28, -6944.8645, 84.18, 1.3, 4.1, 367.374, 3818.8580, 2426.1684, _GLF_IDENTITY(362.313, min(_GLF_IDENTITY(362.313, min(362.313, 362.313)), 362.313)), -69.07, _GLF_IDENTITY(-1.1, (-1.1) * 1.0), 7.8, 5.7, -687.495, -2.4, -31.13)))))))))), injectionSwitch)).y), ((injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)), clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat4(injectionSwitch, 1.0, 1.0, _GLF_IDENTITY(1.0, min(1.0, 1.0)), 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(sinh(-64.49)))), 1.0, 1.0), _GLF_IDENTITY((true ? mat4(injectionSwitch, 1.0, 1.0, _GLF_IDENTITY(1.0, (1.0) * 1.0), 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(0.0, (0.0) / 1.0), 0.0, 1.0, 1.0) : _GLF_FUZZED(_GLF_IDENTITY(mat4(-27.28, _GLF_IDENTITY(-6944.8645, min(-6944.8645, -6944.8645)), _GLF_IDENTITY(84.18, (84.18) / cos(0.0)), 1.3, 4.1, 367.374, 3818.8580, 2426.1684, 362.313, -69.07, -1.1, 7.8, 5.7, -687.495, -2.4, -31.13), (false ? _GLF_FUZZED(mat4(7.4, -718.450, -0.7, 8.0, -495.416, 0.5, -467.720, _GLF_IDENTITY(324.890, clamp(324.890, _GLF_IDENTITY(324.890, max(324.890, 324.890)), 324.890)), 67.03, 5352.7593, -526.622, -377.376, -3.8, -0.0, 5497.8778, -60.50)) : mat4(-27.28, -6944.8645, 84.18, 1.3, 4.1, _GLF_IDENTITY(367.374, float(_GLF_IDENTITY(mat2(367.374, log(1.0), length(vec3(0.0, 0.0, 0.0)), 0.0), transpose(transpose(mat2(367.374, log(1.0), length(vec3(0.0, 0.0, 0.0)), 0.0)))))), 3818.8580, 2426.1684, _GLF_IDENTITY(362.313, min(_GLF_IDENTITY(362.313, min(362.313, 362.313)), 362.313)), -69.07, _GLF_IDENTITY(-1.1, (-1.1) * 1.0), 7.8, 5.7, -687.495, -2.4, -31.13))))), (false ? _GLF_FUZZED(mat4(-2.9, -9.8, 115.166, -806.062, -2291.5975, -5.8, 8.8, -1.6, 8694.4325, -492.527, 135.900, -3.8, -7088.6620, -381.133, 760.766, 7.8)) : (true ? mat4(injectionSwitch, 1.0, 1.0, _GLF_IDENTITY(_GLF_IDENTITY(1.0, min(1.0, 1.0)), (1.0) * 1.0), 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(0.0, (0.0) / 1.0), 0.0, 1.0, _GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(1.3)), float(1.0), bool(true))), 1.0, _GLF_IDENTITY(1.0, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? 1.0 : _GLF_FUZZED(-412.403)))))) : _GLF_FUZZED(_GLF_IDENTITY(mat4(-27.28, -6944.8645, _GLF_IDENTITY(84.18, (84.18) / cos(0.0)), 1.3, 4.1, 367.374, 3818.8580, 2426.1684, 362.313, _GLF_IDENTITY(-69.07, (-69.07) - 0.0), -1.1, 7.8, 5.7, -687.495, -2.4, -31.13), (false ? _GLF_FUZZED(mat4(_GLF_IDENTITY(7.4, clamp(7.4, 7.4, 7.4)), -718.450, -0.7, 8.0, -495.416, 0.5, -467.720, 324.890, 67.03, 5352.7593, -526.622, -377.376, -3.8, -0.0, 5497.8778, -60.50)) : mat4(-27.28, -6944.8645, 84.18, 1.3, 4.1, 367.374, 3818.8580, 2426.1684, _GLF_IDENTITY(362.313, min(_GLF_IDENTITY(362.313, min(362.313, 362.313)), 362.313)), -69.07, _GLF_IDENTITY(-1.1, (-1.1) * 1.0), 7.8, 5.7, -687.495, -2.4, -31.13)))))))))), injectionSwitch)).y)) || false)))) && true))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   atomicStore(buf[_GLF_IDENTITY(next_virtual_gid, _GLF_IDENTITY((next_virtual_gid), (_GLF_IDENTITY((next_virtual_gid), ((next_virtual_gid)) - (65453u & 0u))) | ((next_virtual_gid))) * 1u)], uint(2), _GLF_IDENTITY(_GLF_IDENTITY(4, int(ivec4(4, (_GLF_IDENTITY(0 << _GLF_IDENTITY(int(6), int(6)), (_GLF_IDENTITY(0, (0) | 0) << _GLF_IDENTITY(_GLF_IDENTITY(int(6), int(_GLF_IDENTITY(6, (6) / 1))), min(_GLF_IDENTITY(int(6), int(_GLF_IDENTITY(6, (6) / 1))), _GLF_IDENTITY(int(6), int(_GLF_IDENTITY(6, (6) / 1)))))) * 1)), 0, 1))), 0 ^ (_GLF_IDENTITY(4, int(ivec4(_GLF_IDENTITY(4, (4) + 0), (0 << _GLF_IDENTITY(int(6), int(_GLF_IDENTITY(6, _GLF_IDENTITY(int(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (6), (int(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-2160.6762)), float(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(7.7, -0.1)) : injectionSwitch)).x, clamp(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(7.7, -0.1)) : injectionSwitch)).x, _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(7.7, -0.1)) : injectionSwitch)).x, _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(7.7, -0.1)) : injectionSwitch)).x))), float(_GLF_FUZZED(-8.3)), bool(false)))), bool(true))))) ^ (6)) / 1))))), 0, 1))))), 64, 4);
  }
 else
  {
   subgroupAll(false);
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   atomicStore(buf[_GLF_IDENTITY(_GLF_IDENTITY(next_virtual_gid, clamp(next_virtual_gid, next_virtual_gid, _GLF_IDENTITY(_GLF_IDENTITY(next_virtual_gid, (_GLF_IDENTITY(next_virtual_gid, ~ (_GLF_IDENTITY(~ (next_virtual_gid), min(_GLF_IDENTITY(~ (next_virtual_gid), (~ (next_virtual_gid)) ^ 0u), ~ (next_virtual_gid)))))) ^ 0u), (_GLF_IDENTITY(next_virtual_gid, (_GLF_IDENTITY(next_virtual_gid, ~ (_GLF_IDENTITY(~ (next_virtual_gid), min(_GLF_IDENTITY(~ (next_virtual_gid), _GLF_IDENTITY((~ (next_virtual_gid)) ^ 0u, uint(uvec3((~ (next_virtual_gid)) ^ 0u, 1u, 0u)))), ~ (next_virtual_gid)))))) ^ 0u)) | (_GLF_IDENTITY(_GLF_IDENTITY(next_virtual_gid, (_GLF_IDENTITY(next_virtual_gid, ~ (_GLF_IDENTITY(~ (next_virtual_gid), min(_GLF_IDENTITY(~ (next_virtual_gid), (~ (next_virtual_gid)) ^ 0u), ~ (next_virtual_gid)))))) ^ 0u), max(_GLF_IDENTITY(next_virtual_gid, (_GLF_IDENTITY(next_virtual_gid, ~ (_GLF_IDENTITY(~ (next_virtual_gid), min(_GLF_IDENTITY(~ (next_virtual_gid), (~ (next_virtual_gid)) ^ 0u), ~ (next_virtual_gid)))))) ^ 0u), _GLF_IDENTITY(next_virtual_gid, (_GLF_IDENTITY(next_virtual_gid, ~ (_GLF_IDENTITY(~ (next_virtual_gid), min(_GLF_IDENTITY(~ (next_virtual_gid), (~ (next_virtual_gid)) ^ 0u), ~ (next_virtual_gid)))))) ^ 0u))))))), _GLF_IDENTITY(max(_GLF_IDENTITY(next_virtual_gid, clamp(next_virtual_gid, next_virtual_gid, _GLF_IDENTITY(next_virtual_gid, (_GLF_IDENTITY(next_virtual_gid, ~ (_GLF_IDENTITY(~ (next_virtual_gid), min(_GLF_IDENTITY(~ (next_virtual_gid), (~ (next_virtual_gid)) ^ 0u), ~ (next_virtual_gid)))))) ^ 0u))), _GLF_IDENTITY(next_virtual_gid, _GLF_IDENTITY(clamp(next_virtual_gid, next_virtual_gid, _GLF_IDENTITY(next_virtual_gid, _GLF_IDENTITY((_GLF_IDENTITY(next_virtual_gid, ~ (_GLF_IDENTITY(~ (next_virtual_gid), min(_GLF_IDENTITY(~ (next_virtual_gid), (~ (next_virtual_gid)) ^ 0u), ~ (next_virtual_gid)))))), ((_GLF_IDENTITY(next_virtual_gid, ~ (_GLF_IDENTITY(~ (next_virtual_gid), min(_GLF_IDENTITY(~ (next_virtual_gid), (~ (next_virtual_gid)) ^ 0u), ~ (next_virtual_gid))))))) << 0u) ^ 0u)), 0u ^ (clamp(next_virtual_gid, next_virtual_gid, _GLF_IDENTITY(next_virtual_gid, (_GLF_IDENTITY(next_virtual_gid, ~ (_GLF_IDENTITY(~ (next_virtual_gid), min(_GLF_IDENTITY(~ (next_virtual_gid), (~ (next_virtual_gid)) ^ 0u), ~ (next_virtual_gid)))))) ^ 0u)))))), ~ (~ (max(_GLF_IDENTITY(next_virtual_gid, clamp(next_virtual_gid, next_virtual_gid, _GLF_IDENTITY(next_virtual_gid, (_GLF_IDENTITY(next_virtual_gid, ~ (_GLF_IDENTITY(~ _GLF_IDENTITY((next_virtual_gid), 0u | ((next_virtual_gid))), min(_GLF_IDENTITY(~ (next_virtual_gid), (~ (next_virtual_gid)) ^ 0u), ~ (next_virtual_gid)))))) ^ 0u))), _GLF_IDENTITY(next_virtual_gid, _GLF_IDENTITY(clamp(next_virtual_gid, next_virtual_gid, _GLF_IDENTITY(next_virtual_gid, (_GLF_IDENTITY(next_virtual_gid, _GLF_IDENTITY(~ (_GLF_IDENTITY(~ (next_virtual_gid), min(_GLF_IDENTITY(~ (next_virtual_gid), (~ (next_virtual_gid)) ^ 0u), ~ (next_virtual_gid)))), max(_GLF_IDENTITY(~ (_GLF_IDENTITY(~ (next_virtual_gid), min(_GLF_IDENTITY(~ (_GLF_IDENTITY(next_virtual_gid, clamp(next_virtual_gid, next_virtual_gid, next_virtual_gid))), _GLF_IDENTITY((~ (next_virtual_gid)) ^ 0u, clamp((~ (next_virtual_gid)) ^ 0u, _GLF_IDENTITY((~ (next_virtual_gid)) ^ 0u, max((~ (next_virtual_gid)) ^ 0u, (~ (next_virtual_gid)) ^ 0u)), (~ (next_virtual_gid)) ^ 0u))), _GLF_IDENTITY(~ (next_virtual_gid), (~ (next_virtual_gid)) | 0u)))), max(~ (_GLF_IDENTITY(~ (next_virtual_gid), min(_GLF_IDENTITY(~ (next_virtual_gid), (~ (next_virtual_gid)) ^ 0u), ~ (next_virtual_gid)))), ~ (_GLF_IDENTITY(~ (next_virtual_gid), min(_GLF_IDENTITY(~ (next_virtual_gid), (~ (next_virtual_gid)) ^ 0u), ~ (next_virtual_gid)))))), ~ (_GLF_IDENTITY(~ (next_virtual_gid), min(_GLF_IDENTITY(~ (next_virtual_gid), (~ (next_virtual_gid)) ^ 0u), ~ (next_virtual_gid)))))))) ^ 0u)), 0u ^ (clamp(next_virtual_gid, _GLF_IDENTITY(next_virtual_gid, uint(uvec4(next_virtual_gid, (1u | 0u), 0u, 0u))), _GLF_IDENTITY(next_virtual_gid, (_GLF_IDENTITY(_GLF_IDENTITY(next_virtual_gid, _GLF_IDENTITY(~ (_GLF_IDENTITY(~ (next_virtual_gid), min(_GLF_IDENTITY(~ (next_virtual_gid), (~ (next_virtual_gid)) ^ 0u), ~ (next_virtual_gid)))), (~ (_GLF_IDENTITY(~ (next_virtual_gid), min(_GLF_IDENTITY(~ (next_virtual_gid), (~ (next_virtual_gid)) ^ 0u), ~ (_GLF_IDENTITY(next_virtual_gid, min(next_virtual_gid, next_virtual_gid))))))) * 1u)), 0u ^ (_GLF_IDENTITY(_GLF_IDENTITY(next_virtual_gid, _GLF_IDENTITY(~ (_GLF_IDENTITY(~ (next_virtual_gid), min(_GLF_IDENTITY(~ (next_virtual_gid), (~ (next_virtual_gid)) ^ 0u), ~ (next_virtual_gid)))), (~ (_GLF_IDENTITY(~ (next_virtual_gid), min(_GLF_IDENTITY(~ (next_virtual_gid), (~ (next_virtual_gid)) ^ 0u), ~ (_GLF_IDENTITY(next_virtual_gid, min(next_virtual_gid, next_virtual_gid))))))) * 1u)), (_GLF_IDENTITY(_GLF_IDENTITY(next_virtual_gid, _GLF_IDENTITY(~ (_GLF_IDENTITY(~ (next_virtual_gid), min(_GLF_IDENTITY(~ (next_virtual_gid), (~ (next_virtual_gid)) ^ 0u), ~ (next_virtual_gid)))), (~ (_GLF_IDENTITY(~ (next_virtual_gid), min(_GLF_IDENTITY(~ (next_virtual_gid), (~ (next_virtual_gid)) ^ 0u), ~ (_GLF_IDENTITY(next_virtual_gid, min(next_virtual_gid, next_virtual_gid))))))) * 1u)), (_GLF_IDENTITY(next_virtual_gid, _GLF_IDENTITY(~ (_GLF_IDENTITY(~ (next_virtual_gid), min(_GLF_IDENTITY(~ (next_virtual_gid), (~ (next_virtual_gid)) ^ 0u), ~ (next_virtual_gid)))), (~ (_GLF_IDENTITY(~ (next_virtual_gid), min(_GLF_IDENTITY(~ (next_virtual_gid), (~ (next_virtual_gid)) ^ 0u), ~ (_GLF_IDENTITY(next_virtual_gid, min(next_virtual_gid, next_virtual_gid))))))) * 1u))) | 0u)) / 1u)))) ^ 0u))))))))))], _GLF_IDENTITY(uint(2), _GLF_IDENTITY(min(uint(2), uint(2)), clamp(min(uint(2), uint(2)), min(uint(2), uint(2)), min(uint(2), uint(2))))), 4, 64, _GLF_IDENTITY(4, clamp(_GLF_IDENTITY(_GLF_IDENTITY(4, 0 | (_GLF_IDENTITY(4, (4) - 0))), (_GLF_IDENTITY(4, 0 | (_GLF_IDENTITY(4, (4) - 0)))) | 0), _GLF_IDENTITY(4, (_GLF_IDENTITY(4, clamp(4, 4, 4))) << _GLF_IDENTITY(0, int(ivec3(0, 1, 0)))), 4)));
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0)) / cos(0.0))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
      return;
     return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
      return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
       if(_GLF_DEAD(false))
        return;
      }
     return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), injectionSwitch)).y)) || (false)), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), (! (injectionSwitch.x > injectionSwitch.y)) || false)))))))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            return;
           if(_GLF_DEAD(false))
            return;
           if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
            return;
           return;
          }
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         return;
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), injectionSwitch)).y, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(trunc(-0.2)) : injectionSwitch.y)), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(vec3(injectionSwitch, _GLF_IDENTITY(cos(0.0), (true ? _GLF_IDENTITY(cos(0.0), (cos(0.0)) - 0.0) : _GLF_FUZZED(2.4))))), vec2(vec3(vec2(vec3(injectionSwitch, cos(0.0))), 0.0)))).y) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), _GLF_IDENTITY(! (_GLF_IDENTITY(! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (_GLF_IDENTITY(! (injectionSwitch.x < injectionSwitch.y), (! (injectionSwitch.x < injectionSwitch.y)) && true)))))))), bool(bvec3(! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), true, false)))), (! (_GLF_IDENTITY(! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), bool(bvec3(! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / _GLF_IDENTITY(1.0, 0.0 + (1.0)))) && _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0)))))), _GLF_IDENTITY(true, true && (true)), false))))) || false)))), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x, max(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x, _GLF_IDENTITY(float(_GLF_IDENTITY(vec2(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x, determinant(mat2(0.0, tan(0.0), 0.0, 0.0))), clamp(vec2(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x, determinant(mat2(0.0, tan(0.0), 0.0, 0.0))), vec2(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x, determinant(mat2(0.0, tan(0.0), 0.0, 0.0))), vec2(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x, determinant(mat2(0.0, tan(0.0), 0.0, 0.0)))))), min(float(_GLF_IDENTITY(vec2(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x, determinant(mat2(0.0, tan(0.0), 0.0, 0.0))), clamp(vec2(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x, determinant(mat2(0.0, tan(0.0), 0.0, 0.0))), vec2(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x, determinant(mat2(0.0, tan(0.0), 0.0, 0.0))), vec2(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x, determinant(mat2(0.0, tan(0.0), 0.0, 0.0)))))), float(_GLF_IDENTITY(vec2(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x, determinant(mat2(0.0, tan(0.0), 0.0, 0.0))), clamp(vec2(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x, determinant(mat2(0.0, tan(0.0), 0.0, 0.0))), vec2(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x, determinant(mat2(0.0, tan(0.0), 0.0, 0.0))), vec2(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x, determinant(mat2(0.0, tan(0.0), 0.0, 0.0))))))))), mix(float(_GLF_FUZZED(343.725)), float(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(min(injectionSwitch, injectionSwitch), min(_GLF_IDENTITY(min(injectionSwitch, injectionSwitch), mix(vec2(_GLF_FUZZED(-62.69), _GLF_FUZZED(-1.4)), vec2((min(injectionSwitch, injectionSwitch))[0], (min(injectionSwitch, injectionSwitch))[1]), bvec2(true, true))), min(injectionSwitch, injectionSwitch)))).x), bool(true))))) > injectionSwitch.y) && _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, false || (injectionSwitch.x < injectionSwitch.y)))))), ! (_GLF_IDENTITY(! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, 1.0 * (_GLF_IDENTITY(injectionSwitch.y, float(mat3(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), vec2(1.0, 1.0) * _GLF_IDENTITY((mat2(1.0) * (injectionSwitch)), (true ? (mat2(1.0) * (injectionSwitch)) : _GLF_FUZZED(injectionSwitch))))).y, 0.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(0.0, (0.0) - 0.0), 0.0, sin(0.0), _GLF_IDENTITY(_GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0)), min(dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0)), dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0)))), dot(vec3(1.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0), vec3(1.0, 0.0, 0.0))))))))), ! (! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, 1.0 * (_GLF_IDENTITY(injectionSwitch.y, float(mat3(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), vec2(1.0, 1.0) * (mat2(1.0) * (injectionSwitch)))).y, 0.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(0.0, (0.0) - 0.0), 0.0, sin(0.0), _GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0)), dot(_GLF_IDENTITY(vec3(1.0, 0.0, 0.0), vec3(mat2x4(_GLF_IDENTITY(vec3(1.0, 0.0, 0.0), mix(vec3((vec3(1.0, 0.0, 0.0))[0], _GLF_FUZZED(9692.1481), _GLF_FUZZED(15.90)), vec3(_GLF_FUZZED(4.6), (vec3(1.0, 0.0, 0.0))[1], (vec3(1.0, 0.0, 0.0))[2]), bvec3(false, true, true))), 1.0, log(1.0), 0.0, 0.0, _GLF_IDENTITY(dot(vec4(0.0, 1.0, log(1.0), 0.0), vec4(0.0, 1.0, 0.0, 0.0)), dot(vec4(0.0, 1.0, log(1.0), 0.0), vec4(0.0, 1.0, 0.0, 0.0)))))), vec3(1.0, 0.0, 0.0)))))))))))) && _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0) < injectionSwitch.y))))), bool(bvec3(! (! (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y, (injectionSwitch.x > injectionSwitch.y) && _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x < injectionSwitch.y))))), true, false)))))))) && true)))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, false, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), ! (! (bool(bvec4(false, false, false, _GLF_IDENTITY(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - _GLF_IDENTITY(vec2(0.0, 0.0), vec2(mat2(vec2(0.0, 0.0), 1.0, 0.0)))).x < injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - _GLF_IDENTITY(vec2(0.0, 0.0), vec2(mat2(vec2(0.0, 0.0), 1.0, 0.0)))).x < injectionSwitch.y))))))))))))
          return;
         if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y))).x, (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(clamp(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * 1.0), injectionSwitch.x, injectionSwitch.x), min(clamp(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * 1.0), injectionSwitch.x, injectionSwitch.x), clamp(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * 1.0), injectionSwitch.x, injectionSwitch.x))))) - 0.0) > injectionSwitch.y))))
          return;
         return;
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            return;
           return;
          }
        }
       return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-3001.0053)), vec2(_GLF_FUZZED(vec4(5.6, -60.90, 9.7, 15.94).r), (injectionSwitch)[1]), bvec2(false, true)))) / vec2(1.0, 1.0)).y, max(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-3001.0053)), vec2(_GLF_FUZZED(vec4(5.6, -60.90, 9.7, 15.94).r), (injectionSwitch)[1]), bvec2(false, true)))) / vec2(1.0, 1.0)).y, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-3001.0053)), vec2(_GLF_FUZZED(vec4(5.6, -60.90, 9.7, 15.94).r), (injectionSwitch)[1]), bvec2(false, true)))) / vec2(1.0, 1.0)).y, max(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-3001.0053)), vec2(_GLF_FUZZED(vec4(5.6, -60.90, 9.7, 15.94).r), (injectionSwitch)[1]), bvec2(false, true)))) / vec2(1.0, 1.0)).y, _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-3001.0053)), vec2(_GLF_FUZZED(vec4(5.6, -60.90, 9.7, 15.94).r), (injectionSwitch)[1]), bvec2(false, true)))) / vec2(1.0, 1.0)).y))))))))
          return;
         return;
        }
       if(_GLF_DEAD(false))
        return;
      }
     return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, false, _GLF_IDENTITY(false, _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y), ((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y)) && true)), bool(_GLF_IDENTITY(bool(! (_GLF_IDENTITY((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y), ((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y)) && true))), bool(bvec3(bool(! (_GLF_IDENTITY((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y), ((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y)) && true))), false, true)))))))) && (false)), true)))))
      return;
    }
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))[0], injectionSwitch[1])).x > injectionSwitch.y, bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), (false ? _GLF_FUZZED(vec2(9.3, -614.615)) : _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), min(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))))).x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + determinant(mat2(0.0, 1.0, 0.0, 0.0))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), (false ? _GLF_FUZZED(vec2(9.3, -614.615)) : _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), min(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))))).x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + _GLF_IDENTITY(determinant(mat2(0.0, 1.0, 0.0, 0.0)), min(determinant(mat2(0.0, 1.0, 0.0, 0.0)), determinant(mat2(0.0, 1.0, 0.0, 0.0)))))))))))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y, injectionSwitch.y))))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) && true)))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))
    return;
   return;
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x > injectionSwitch.y))), ! (! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x > injectionSwitch.y))), (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x > injectionSwitch.y)), bool(bvec3(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x > injectionSwitch.y)), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))) && true)), ((_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x > injectionSwitch.y))), (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x > injectionSwitch.y)), bool(bvec3(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x > injectionSwitch.y)), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))) && true))) && true))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
    }
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
  return;
}
