#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
#extension GL_EXT_maximal_reconvergence : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint subgroup_id = gl_SubgroupID;
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 uint num_workgroup = gl_NumWorkGroups.x;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(injectionSwitch.x > injectionSwitch.y, false, false, false)))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! _GLF_IDENTITY((! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), ! (! (_GLF_IDENTITY((! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(42.65)), float(injectionSwitch.y), bool(true)))))))), ! (! ((! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec3(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, false)))))), true, false, false)))))))))))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint workgroup_size = gl_WorkGroupSize.x;
 uint workgroup_id = gl_WorkGroupID.x;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint workgroup_base = workgroup_size * _GLF_IDENTITY(workgroup_id, clamp(workgroup_id, workgroup_id, workgroup_id));
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, true, true)))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(bvec4(! (false), true, true, true)))))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
  }
 uint subgroup_base = subgroup_id * subgroup_size;
 if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y)))), false || (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(true, ! (! (true))) && ((injectionSwitch.x > injectionSwitch.y))))))), bool(bvec4(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y)))), (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(6.0) : injectionSwitch.y)), injectionSwitch.y))))))) && _GLF_IDENTITY(true, ! (! (true)))), false || (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y))))))), false, true, false))), true && (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y)))), false || (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y)))))), _GLF_IDENTITY(false || (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(true, ! (! (true))) && ((injectionSwitch.x > injectionSwitch.y))))), bool(_GLF_IDENTITY(bvec3(false || (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(true, ! (! (true))) && ((injectionSwitch.x > injectionSwitch.y))))), true, false), bvec3(bvec4(bvec3(false || (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(true, ! (! (true))) && ((injectionSwitch.x > injectionSwitch.y))))), true, false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))), bool(bvec4(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(true, bool(bvec4(true, false, false, false)))), (! (_GLF_IDENTITY(true, bool(bvec4(true, false, false, false))))) || false))), _GLF_IDENTITY(true, ! (! (true))))), bool(bvec3(bool(bvec2(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(true, bool(bvec4(true, false, false, false)))), (! (_GLF_IDENTITY(true, bool(bvec4(true, false, false, false))))) || false))), _GLF_IDENTITY(true, ! (! (true))))), true, false)))) && ((injectionSwitch.x > injectionSwitch.y)))), false || (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, 0.0 + (_GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), clamp(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)))), injectionSwitch.y))))), true && ((injectionSwitch.x > injectionSwitch.y))))))), false, true, false))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, true, false)))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y)))))))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
  }
 uint virtual_gid = _GLF_IDENTITY(workgroup_base, clamp(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (workgroup_base) | 0u), _GLF_IDENTITY(0u, (0u) ^ 0u) ^ (_GLF_IDENTITY(workgroup_base, (_GLF_IDENTITY(workgroup_base, (workgroup_base) - (0u >> _GLF_IDENTITY(uint(0u), _GLF_IDENTITY(uint(0u), 1u * (uint(0u))))))) | _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(workgroup_base, (workgroup_base) | (workgroup_base))), clamp((_GLF_IDENTITY(workgroup_base, (workgroup_base) | (workgroup_base))), _GLF_IDENTITY((_GLF_IDENTITY(workgroup_base, (workgroup_base) | _GLF_IDENTITY((workgroup_base), max((workgroup_base), (workgroup_base))))), max((_GLF_IDENTITY(workgroup_base, (workgroup_base) | (workgroup_base))), (_GLF_IDENTITY(workgroup_base, (workgroup_base) | (workgroup_base))))), (_GLF_IDENTITY(workgroup_base, (workgroup_base) | (workgroup_base))))), min(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(workgroup_base, (workgroup_base) | (workgroup_base))), clamp((_GLF_IDENTITY(workgroup_base, (workgroup_base) | (workgroup_base))), _GLF_IDENTITY((_GLF_IDENTITY(workgroup_base, (workgroup_base) | _GLF_IDENTITY((workgroup_base), max((workgroup_base), (workgroup_base))))), max((_GLF_IDENTITY(workgroup_base, (workgroup_base) | (workgroup_base))), (_GLF_IDENTITY(workgroup_base, (workgroup_base) | (workgroup_base))))), (_GLF_IDENTITY(workgroup_base, (workgroup_base) | (workgroup_base))))), (false ? _GLF_FUZZED(subgroup_size) : _GLF_IDENTITY((_GLF_IDENTITY(workgroup_base, (workgroup_base) | (workgroup_base))), clamp((_GLF_IDENTITY(workgroup_base, (workgroup_base) | (workgroup_base))), _GLF_IDENTITY((_GLF_IDENTITY(workgroup_base, (workgroup_base) | _GLF_IDENTITY((workgroup_base), max((workgroup_base), (workgroup_base))))), max((_GLF_IDENTITY(workgroup_base, (workgroup_base) | (workgroup_base))), (_GLF_IDENTITY(workgroup_base, (workgroup_base) | (workgroup_base))))), (_GLF_IDENTITY(workgroup_base, (workgroup_base) | (workgroup_base))))))), _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(workgroup_base, (workgroup_base) | (workgroup_base))), clamp((_GLF_IDENTITY(workgroup_base, (workgroup_base) | (workgroup_base))), _GLF_IDENTITY((_GLF_IDENTITY(workgroup_base, (workgroup_base) | _GLF_IDENTITY((workgroup_base), max((workgroup_base), (workgroup_base))))), max((_GLF_IDENTITY(workgroup_base, (workgroup_base) | (workgroup_base))), (_GLF_IDENTITY(workgroup_base, (workgroup_base) | (workgroup_base))))), (_GLF_IDENTITY(workgroup_base, (workgroup_base) | (workgroup_base))))), (_GLF_IDENTITY((_GLF_IDENTITY(workgroup_base, (workgroup_base) | (workgroup_base))), clamp((_GLF_IDENTITY(workgroup_base, (workgroup_base) | (workgroup_base))), _GLF_IDENTITY((_GLF_IDENTITY(workgroup_base, (workgroup_base) | _GLF_IDENTITY((workgroup_base), max((workgroup_base), (workgroup_base))))), max((_GLF_IDENTITY(workgroup_base, (workgroup_base) | (workgroup_base))), (_GLF_IDENTITY(workgroup_base, (workgroup_base) | (workgroup_base))))), (_GLF_IDENTITY(workgroup_base, (workgroup_base) | (workgroup_base)))))) | (_GLF_IDENTITY((_GLF_IDENTITY(workgroup_base, (workgroup_base) | (workgroup_base))), clamp((_GLF_IDENTITY(workgroup_base, (workgroup_base) | (workgroup_base))), _GLF_IDENTITY((_GLF_IDENTITY(workgroup_base, (workgroup_base) | _GLF_IDENTITY((workgroup_base), max((workgroup_base), (workgroup_base))))), max((_GLF_IDENTITY(workgroup_base, (workgroup_base) | (workgroup_base))), (_GLF_IDENTITY(workgroup_base, (workgroup_base) | (workgroup_base))))), (_GLF_IDENTITY(workgroup_base, (workgroup_base) | (workgroup_base)))))))))))), max(_GLF_IDENTITY(workgroup_base, clamp(workgroup_base, workgroup_base, workgroup_base)), workgroup_base)), workgroup_base, _GLF_IDENTITY(workgroup_base, (_GLF_IDENTITY(workgroup_base, (_GLF_IDENTITY(workgroup_base, min(workgroup_base, workgroup_base))) + 0u)) | (_GLF_IDENTITY(workgroup_base, min(workgroup_base, _GLF_IDENTITY(workgroup_base, _GLF_IDENTITY(uint(uvec4(workgroup_base, 0u, 0u, (0u >> _GLF_IDENTITY(uint(2u), uint(_GLF_IDENTITY(2u, (_GLF_IDENTITY(false, false || (false)) ? _GLF_FUZZED(subgroup_base) : _GLF_IDENTITY(2u, (2u) | (2u))))))))), (uint(uvec4(workgroup_base, 0u, 0u, (0u >> _GLF_IDENTITY(uint(2u), uint(2u)))))) >> 0u)))))))) + _GLF_IDENTITY(subgroup_base, clamp(_GLF_IDENTITY(subgroup_base, _GLF_IDENTITY(max(subgroup_base, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_base, min(subgroup_base, subgroup_base)), (_GLF_IDENTITY(subgroup_base, min(subgroup_base, subgroup_base))) | (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_base, min(subgroup_base, subgroup_base)), min(_GLF_IDENTITY(subgroup_base, min(subgroup_base, subgroup_base)), _GLF_IDENTITY(_GLF_IDENTITY(subgroup_base, min(subgroup_base, subgroup_base)), (false ? _GLF_FUZZED(116012u) : _GLF_IDENTITY(subgroup_base, min(subgroup_base, _GLF_IDENTITY(subgroup_base, (90760u & 0u) ^ (subgroup_base)))))))))), 1u * (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_base, uint(uint(subgroup_base))), min(subgroup_base, subgroup_base))))), _GLF_IDENTITY(0u ^ (_GLF_IDENTITY(max(subgroup_base, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_base, min(subgroup_base, subgroup_base)), (_GLF_IDENTITY(subgroup_base, min(subgroup_base, subgroup_base))) | (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_base, min(subgroup_base, subgroup_base)), min(_GLF_IDENTITY(subgroup_base, min(subgroup_base, subgroup_base)), _GLF_IDENTITY(_GLF_IDENTITY(subgroup_base, min(subgroup_base, subgroup_base)), (false ? _GLF_FUZZED(116012u) : _GLF_IDENTITY(subgroup_base, min(subgroup_base, subgroup_base)))))))), 1u * (_GLF_IDENTITY(subgroup_base, min(subgroup_base, subgroup_base))))), max(_GLF_IDENTITY(max(subgroup_base, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_base, min(subgroup_base, subgroup_base)), (_GLF_IDENTITY(subgroup_base, min(subgroup_base, _GLF_IDENTITY(subgroup_base, clamp(subgroup_base, subgroup_base, subgroup_base))))) | (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_base, min(subgroup_base, subgroup_base)), min(_GLF_IDENTITY(subgroup_base, min(subgroup_base, subgroup_base)), _GLF_IDENTITY(_GLF_IDENTITY(subgroup_base, min(subgroup_base, subgroup_base)), (false ? _GLF_FUZZED(116012u) : _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_base, min(subgroup_base, subgroup_base)), uint(uvec4(_GLF_IDENTITY(subgroup_base, min(subgroup_base, subgroup_base)), 0u, 1u, 0u))), uint(uvec2(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_base, min(subgroup_base, subgroup_base)), uint(uvec4(_GLF_IDENTITY(subgroup_base, min(subgroup_base, subgroup_base)), 0u, 1u, 0u))), 1u))))))))), 1u * (_GLF_IDENTITY(subgroup_base, min(subgroup_base, subgroup_base))))), max(max(subgroup_base, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_base, min(subgroup_base, subgroup_base)), (_GLF_IDENTITY(subgroup_base, min(subgroup_base, subgroup_base))) | (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_base, min(subgroup_base, subgroup_base)), min(_GLF_IDENTITY(subgroup_base, min(subgroup_base, subgroup_base)), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_base, min(_GLF_IDENTITY(subgroup_base, (false ? _GLF_FUZZED(atomicMax(workgroup_base, workgroup_base)) : _GLF_IDENTITY(subgroup_base, min(subgroup_base, subgroup_base)))), subgroup_base)), (false ? _GLF_FUZZED(116012u) : _GLF_IDENTITY(subgroup_base, min(subgroup_base, subgroup_base)))), 0u ^ (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_base, min(_GLF_IDENTITY(subgroup_base, (false ? _GLF_FUZZED(atomicMax(workgroup_base, workgroup_base)) : _GLF_IDENTITY(subgroup_base, min(subgroup_base, subgroup_base)))), subgroup_base)), (false ? _GLF_FUZZED(116012u) : _GLF_IDENTITY(subgroup_base, min(subgroup_base, subgroup_base)))), (false ? _GLF_FUZZED(workgroup_id) : _GLF_IDENTITY(_GLF_IDENTITY(subgroup_base, min(_GLF_IDENTITY(subgroup_base, (false ? _GLF_FUZZED(atomicMax(workgroup_base, workgroup_base)) : _GLF_IDENTITY(subgroup_base, min(subgroup_base, subgroup_base)))), subgroup_base)), (false ? _GLF_FUZZED(116012u) : _GLF_IDENTITY(subgroup_base, min(subgroup_base, subgroup_base)))))))))))), 1u * (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_base, min(subgroup_base, subgroup_base)), (_GLF_IDENTITY(subgroup_base, min(subgroup_base, subgroup_base))) | (_GLF_IDENTITY(subgroup_base, min(subgroup_base, subgroup_base))))))), max(subgroup_base, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_base, min(subgroup_base, subgroup_base)), _GLF_IDENTITY((_GLF_IDENTITY(subgroup_base, min(subgroup_base, subgroup_base))) | (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_base, min(subgroup_base, subgroup_base)), min(_GLF_IDENTITY(subgroup_base, min(subgroup_base, subgroup_base)), _GLF_IDENTITY(_GLF_IDENTITY(subgroup_base, min(subgroup_base, subgroup_base)), (false ? _GLF_FUZZED(116012u) : _GLF_IDENTITY(subgroup_base, min(subgroup_base, subgroup_base))))))), ~ (~ (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_base, min(subgroup_base, subgroup_base))) | (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_base, min(subgroup_base, subgroup_base)), min(_GLF_IDENTITY(subgroup_base, min(subgroup_base, subgroup_base)), _GLF_IDENTITY(_GLF_IDENTITY(subgroup_base, min(subgroup_base, subgroup_base)), (false ? _GLF_FUZZED(116012u) : _GLF_IDENTITY(subgroup_base, min(subgroup_base, subgroup_base))))))), _GLF_IDENTITY(uint(uvec2((_GLF_IDENTITY(subgroup_base, min(subgroup_base, subgroup_base))) | (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_base, min(subgroup_base, subgroup_base)), min(_GLF_IDENTITY(subgroup_base, min(subgroup_base, subgroup_base)), _GLF_IDENTITY(_GLF_IDENTITY(subgroup_base, min(subgroup_base, subgroup_base)), (false ? _GLF_FUZZED(116012u) : _GLF_IDENTITY(subgroup_base, min(subgroup_base, subgroup_base))))))), 1u)), (uint(uvec2((_GLF_IDENTITY(subgroup_base, min(subgroup_base, subgroup_base))) | (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_base, min(subgroup_base, subgroup_base)), min(_GLF_IDENTITY(subgroup_base, min(subgroup_base, subgroup_base)), _GLF_IDENTITY(_GLF_IDENTITY(subgroup_base, min(subgroup_base, subgroup_base)), (false ? _GLF_FUZZED(116012u) : _GLF_IDENTITY(subgroup_base, min(subgroup_base, subgroup_base))))))), 1u))) << 0u)))))), (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_base, _GLF_IDENTITY(min(subgroup_base, subgroup_base), (_GLF_IDENTITY(min(subgroup_base, subgroup_base), (min(subgroup_base, subgroup_base)) * 1u)) / 1u)), (_GLF_IDENTITY(subgroup_base, min(subgroup_base, subgroup_base))) | (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_base, min(subgroup_base, subgroup_base)), _GLF_IDENTITY(min(_GLF_IDENTITY(subgroup_base, min(subgroup_base, subgroup_base)), _GLF_IDENTITY(_GLF_IDENTITY(subgroup_base, min(subgroup_base, subgroup_base)), (false ? _GLF_FUZZED(116012u) : _GLF_IDENTITY(subgroup_base, min(subgroup_base, subgroup_base))))), (min(_GLF_IDENTITY(subgroup_base, min(subgroup_base, subgroup_base)), _GLF_IDENTITY(_GLF_IDENTITY(subgroup_base, min(subgroup_base, subgroup_base)), (_GLF_IDENTITY(false ? _GLF_FUZZED(116012u) : _GLF_IDENTITY(subgroup_base, min(subgroup_base, subgroup_base)), max(_GLF_IDENTITY(false, ! (! (false))) ? _GLF_FUZZED(116012u) : _GLF_IDENTITY(subgroup_base, min(subgroup_base, subgroup_base)), false ? _GLF_FUZZED(116012u) : _GLF_IDENTITY(subgroup_base, min(subgroup_base, subgroup_base)))))))) * 1u))))) - (0u << _GLF_IDENTITY(uint(8u), uint(8u)))), 1u * (_GLF_IDENTITY(subgroup_base, min(subgroup_base, subgroup_base))))))), max(subgroup_base, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_base, min(subgroup_base, subgroup_base)), (_GLF_IDENTITY(subgroup_base, min(subgroup_base, subgroup_base))) | (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_base, min(subgroup_base, subgroup_base)), min(_GLF_IDENTITY(subgroup_base, min(subgroup_base, subgroup_base)), _GLF_IDENTITY(_GLF_IDENTITY(subgroup_base, _GLF_IDENTITY(_GLF_IDENTITY(min(subgroup_base, subgroup_base), clamp(min(subgroup_base, subgroup_base), min(subgroup_base, subgroup_base), _GLF_IDENTITY(min(subgroup_base, subgroup_base), (false ? _GLF_FUZZED(subgroup_id) : min(subgroup_base, subgroup_base))))), 0u | (_GLF_IDENTITY(min(subgroup_base, subgroup_base), clamp(_GLF_IDENTITY(min(subgroup_base, subgroup_base), clamp(min(subgroup_base, subgroup_base), min(subgroup_base, subgroup_base), min(subgroup_base, subgroup_base))), min(subgroup_base, subgroup_base), min(subgroup_base, subgroup_base)))))), (false ? _GLF_FUZZED(116012u) : _GLF_IDENTITY(subgroup_base, min(subgroup_base, subgroup_base)))))))), 1u * (_GLF_IDENTITY(subgroup_base, min(subgroup_base, _GLF_IDENTITY(subgroup_base, uint(uint(subgroup_base))))))))))), uint(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (0u ^ (_GLF_IDENTITY(max(subgroup_base, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_base, min(subgroup_base, subgroup_base)), (_GLF_IDENTITY(subgroup_base, min(subgroup_base, subgroup_base))) | (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_base, min(subgroup_base, subgroup_base)), min(_GLF_IDENTITY(subgroup_base, min(subgroup_base, subgroup_base)), _GLF_IDENTITY(_GLF_IDENTITY(subgroup_base, min(subgroup_base, subgroup_base)), (false ? _GLF_FUZZED(116012u) : _GLF_IDENTITY(subgroup_base, min(subgroup_base, subgroup_base)))))))), 1u * (_GLF_IDENTITY(subgroup_base, min(subgroup_base, subgroup_base))))), max(_GLF_IDENTITY(max(subgroup_base, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_base, min(subgroup_base, subgroup_base)), (_GLF_IDENTITY(subgroup_base, min(subgroup_base, _GLF_IDENTITY(subgroup_base, clamp(subgroup_base, subgroup_base, subgroup_base))))) | (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_base, min(subgroup_base, subgroup_base)), min(_GLF_IDENTITY(subgroup_base, min(subgroup_base, subgroup_base)), _GLF_IDENTITY(_GLF_IDENTITY(subgroup_base, min(subgroup_base, subgroup_base)), (false ? _GLF_FUZZED(116012u) : _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_base, min(subgroup_base, subgroup_base)), uint(uvec4(_GLF_IDENTITY(subgroup_base, min(subgroup_base, subgroup_base)), 0u, 1u, 0u))), uint(uvec2(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_base, min(subgroup_base, subgroup_base)), uint(uvec4(_GLF_IDENTITY(subgroup_base, min(subgroup_base, subgroup_base)), 0u, 1u, 0u))), 1u))))))))), 1u * (_GLF_IDENTITY(subgroup_base, min(subgroup_base, subgroup_base))))), max(max(subgroup_base, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_base, min(subgroup_base, subgroup_base)), (_GLF_IDENTITY(subgroup_base, min(subgroup_base, subgroup_base))) | (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_base, min(subgroup_base, subgroup_base)), min(_GLF_IDENTITY(subgroup_base, min(subgroup_base, subgroup_base)), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_base, min(_GLF_IDENTITY(subgroup_base, (false ? _GLF_FUZZED(atomicMax(workgroup_base, workgroup_base)) : _GLF_IDENTITY(subgroup_base, min(subgroup_base, subgroup_base)))), subgroup_base)), (false ? _GLF_FUZZED(116012u) : _GLF_IDENTITY(subgroup_base, min(subgroup_base, subgroup_base)))), 0u ^ (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_base, min(_GLF_IDENTITY(subgroup_base, (false ? _GLF_FUZZED(atomicMax(workgroup_base, workgroup_base)) : _GLF_IDENTITY(subgroup_base, min(subgroup_base, subgroup_base)))), subgroup_base)), (false ? _GLF_FUZZED(116012u) : _GLF_IDENTITY(subgroup_base, min(subgroup_base, subgroup_base)))), (false ? _GLF_FUZZED(workgroup_id) : _GLF_IDENTITY(_GLF_IDENTITY(subgroup_base, min(_GLF_IDENTITY(subgroup_base, (false ? _GLF_FUZZED(atomicMax(workgroup_base, workgroup_base)) : _GLF_IDENTITY(subgroup_base, min(subgroup_base, subgroup_base)))), subgroup_base)), (false ? _GLF_FUZZED(116012u) : _GLF_IDENTITY(subgroup_base, min(subgroup_base, subgroup_base)))))))))))), 1u * (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_base, min(subgroup_base, subgroup_base)), (_GLF_IDENTITY(subgroup_base, min(subgroup_base, subgroup_base))) | (_GLF_IDENTITY(subgroup_base, min(subgroup_base, subgroup_base))))))), max(subgroup_base, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_base, min(subgroup_base, subgroup_base)), _GLF_IDENTITY((_GLF_IDENTITY(subgroup_base, min(subgroup_base, subgroup_base))) | (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_base, min(subgroup_base, subgroup_base)), min(_GLF_IDENTITY(subgroup_base, min(subgroup_base, subgroup_base)), _GLF_IDENTITY(_GLF_IDENTITY(subgroup_base, min(subgroup_base, subgroup_base)), (false ? _GLF_FUZZED(116012u) : _GLF_IDENTITY(subgroup_base, min(subgroup_base, subgroup_base))))))), ~ (~ (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_base, min(subgroup_base, subgroup_base))) | (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_base, min(subgroup_base, subgroup_base)), min(_GLF_IDENTITY(subgroup_base, min(subgroup_base, subgroup_base)), _GLF_IDENTITY(_GLF_IDENTITY(subgroup_base, min(subgroup_base, subgroup_base)), (false ? _GLF_FUZZED(116012u) : _GLF_IDENTITY(subgroup_base, min(subgroup_base, subgroup_base))))))), _GLF_IDENTITY(uint(uvec2((_GLF_IDENTITY(subgroup_base, min(subgroup_base, subgroup_base))) | (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_base, min(subgroup_base, subgroup_base)), min(_GLF_IDENTITY(subgroup_base, min(subgroup_base, subgroup_base)), _GLF_IDENTITY(_GLF_IDENTITY(subgroup_base, min(subgroup_base, subgroup_base)), (false ? _GLF_FUZZED(116012u) : _GLF_IDENTITY(subgroup_base, min(subgroup_base, subgroup_base))))))), 1u)), (uint(uvec2((_GLF_IDENTITY(subgroup_base, min(subgroup_base, subgroup_base))) | (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_base, min(subgroup_base, subgroup_base)), min(_GLF_IDENTITY(subgroup_base, min(subgroup_base, subgroup_base)), _GLF_IDENTITY(_GLF_IDENTITY(subgroup_base, min(subgroup_base, subgroup_base)), (false ? _GLF_FUZZED(116012u) : _GLF_IDENTITY(subgroup_base, min(subgroup_base, subgroup_base))))))), 1u))) << 0u)))))), (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_base, _GLF_IDENTITY(min(subgroup_base, subgroup_base), (_GLF_IDENTITY(min(subgroup_base, subgroup_base), (min(subgroup_base, subgroup_base)) * 1u)) / 1u)), (_GLF_IDENTITY(subgroup_base, min(subgroup_base, subgroup_base))) | (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_base, min(subgroup_base, subgroup_base)), _GLF_IDENTITY(min(_GLF_IDENTITY(subgroup_base, min(subgroup_base, subgroup_base)), _GLF_IDENTITY(_GLF_IDENTITY(subgroup_base, min(subgroup_base, subgroup_base)), (false ? _GLF_FUZZED(116012u) : _GLF_IDENTITY(subgroup_base, min(subgroup_base, subgroup_base))))), (min(_GLF_IDENTITY(subgroup_base, min(subgroup_base, subgroup_base)), _GLF_IDENTITY(_GLF_IDENTITY(subgroup_base, min(subgroup_base, subgroup_base)), (_GLF_IDENTITY(false ? _GLF_FUZZED(116012u) : _GLF_IDENTITY(subgroup_base, min(subgroup_base, subgroup_base)), max(_GLF_IDENTITY(false, ! (! (false))) ? _GLF_FUZZED(116012u) : _GLF_IDENTITY(subgroup_base, min(subgroup_base, subgroup_base)), false ? _GLF_FUZZED(116012u) : _GLF_IDENTITY(subgroup_base, min(subgroup_base, subgroup_base)))))))) * 1u))))) - (0u << _GLF_IDENTITY(uint(8u), uint(8u)))), 1u * (_GLF_IDENTITY(subgroup_base, min(subgroup_base, subgroup_base))))))), max(subgroup_base, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_base, min(subgroup_base, subgroup_base)), (_GLF_IDENTITY(subgroup_base, min(subgroup_base, subgroup_base))) | (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_base, min(subgroup_base, subgroup_base)), min(_GLF_IDENTITY(subgroup_base, min(subgroup_base, subgroup_base)), _GLF_IDENTITY(_GLF_IDENTITY(subgroup_base, _GLF_IDENTITY(_GLF_IDENTITY(min(subgroup_base, subgroup_base), clamp(min(subgroup_base, subgroup_base), min(subgroup_base, subgroup_base), _GLF_IDENTITY(min(subgroup_base, subgroup_base), (false ? _GLF_FUZZED(subgroup_id) : min(subgroup_base, subgroup_base))))), 0u | (_GLF_IDENTITY(min(subgroup_base, subgroup_base), clamp(_GLF_IDENTITY(min(subgroup_base, subgroup_base), clamp(min(subgroup_base, subgroup_base), min(subgroup_base, subgroup_base), min(subgroup_base, subgroup_base))), min(subgroup_base, subgroup_base), min(subgroup_base, subgroup_base)))))), (false ? _GLF_FUZZED(116012u) : _GLF_IDENTITY(subgroup_base, min(subgroup_base, subgroup_base)))))))), 1u * (_GLF_IDENTITY(subgroup_base, min(subgroup_base, _GLF_IDENTITY(subgroup_base, uint(uint(subgroup_base))))))))))))))), _GLF_IDENTITY(subgroup_base, clamp(subgroup_base, _GLF_IDENTITY(subgroup_base, (true ? subgroup_base : _GLF_FUZZED(_GLF_IDENTITY(subgroup_base, (subgroup_base) - _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, clamp(0u, 0u, 0u))) | (0u)))))), subgroup_base)), subgroup_base)) + _GLF_IDENTITY(subgroup_local_id, 0u ^ (subgroup_local_id));
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true), ! (! (injectionSwitch.x > injectionSwitch.y)))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))))), (_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))))), true && (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! _GLF_IDENTITY((! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).y)), _GLF_IDENTITY(bool(bool((! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).y)))), false || (bool(bool((! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).y))))))))))))) || false)))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 uint next_virtual_gid = _GLF_IDENTITY(workgroup_base + subgroup_base + (_GLF_IDENTITY((subgroup_local_id + 1), ((subgroup_local_id + 1)) | ((subgroup_local_id + 1))) % _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, (subgroup_size) - 0u)) << 0u), min(subgroup_size, _GLF_IDENTITY(subgroup_size, (false ? _GLF_FUZZED(subgroup_local_id) : _GLF_IDENTITY(subgroup_size, (subgroup_size) << 0u)))))), (true ? workgroup_base + subgroup_base + (_GLF_IDENTITY((subgroup_local_id + 1), ((subgroup_local_id + 1)) | ((subgroup_local_id + 1))) % _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, (subgroup_size) - 0u)) << 0u), min(subgroup_size, _GLF_IDENTITY(subgroup_size, (false ? _GLF_FUZZED(subgroup_local_id) : _GLF_IDENTITY(subgroup_size, (subgroup_size) << 0u)))))) : _GLF_FUZZED(workgroup_base)));
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, _GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, (false) || false)), ! (! (! (_GLF_IDENTITY(false, (false) || false))))))))))))), false, true)), _GLF_IDENTITY(bool(bvec4(bool(bvec4(false, false, false, true)), false, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), bool(bvec3(bool(bvec4(bool(bvec4(false, false, _GLF_IDENTITY(false, ! (! (false))), true)), false, _GLF_IDENTITY(false, bool(bvec4(false, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0)))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 atomicStore(buf[_GLF_IDENTITY(virtual_gid, min(_GLF_IDENTITY(virtual_gid, _GLF_IDENTITY((_GLF_IDENTITY(virtual_gid, (virtual_gid) - 0u)) ^ 0u, _GLF_IDENTITY(~ (~ _GLF_IDENTITY((_GLF_IDENTITY((_GLF_IDENTITY(virtual_gid, (virtual_gid) - 0u)) ^ 0u, ((_GLF_IDENTITY(virtual_gid, (virtual_gid) - 0u)) ^ 0u) | 0u)), ~ (~ (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(virtual_gid, (virtual_gid) - 0u)) ^ 0u, max((_GLF_IDENTITY(_GLF_IDENTITY(virtual_gid, (virtual_gid) - 0u), uint(uvec2(_GLF_IDENTITY(virtual_gid, (virtual_gid) - 0u), 0u)))) ^ 0u, _GLF_IDENTITY((_GLF_IDENTITY(virtual_gid, (virtual_gid) - 0u)) ^ 0u, ((_GLF_IDENTITY(virtual_gid, (virtual_gid) - 0u)) ^ 0u) / 1u))), ((_GLF_IDENTITY(virtual_gid, (virtual_gid) - 0u)) ^ 0u) | 0u)), (true ? (_GLF_IDENTITY((_GLF_IDENTITY(virtual_gid, (virtual_gid) - 0u)) ^ 0u, ((_GLF_IDENTITY(virtual_gid, (virtual_gid) - 0u)) ^ 0u) | 0u)) : _GLF_FUZZED(subgroup_base))))))), (_GLF_IDENTITY(~ (~ _GLF_IDENTITY((_GLF_IDENTITY((_GLF_IDENTITY(virtual_gid, (virtual_gid) - 0u)) ^ 0u, ((_GLF_IDENTITY(virtual_gid, (virtual_gid) - 0u)) ^ 0u) | 0u)), ~ (~ (_GLF_IDENTITY((_GLF_IDENTITY((_GLF_IDENTITY(virtual_gid, (virtual_gid) - 0u)) ^ 0u, ((_GLF_IDENTITY(virtual_gid, (virtual_gid) - 0u)) ^ 0u) | 0u)), (true ? (_GLF_IDENTITY((_GLF_IDENTITY(virtual_gid, (virtual_gid) - 0u)) ^ 0u, ((_GLF_IDENTITY(virtual_gid, (virtual_gid) - 0u)) ^ 0u) | 0u)) : _GLF_FUZZED(subgroup_base))))))), (~ (~ _GLF_IDENTITY((_GLF_IDENTITY((_GLF_IDENTITY(virtual_gid, (virtual_gid) - 0u)) ^ 0u, ((_GLF_IDENTITY(_GLF_IDENTITY(virtual_gid, (virtual_gid) | 0u), (virtual_gid) - 0u)) ^ 0u) | 0u)), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY((_GLF_IDENTITY(virtual_gid, (virtual_gid) - 0u)) ^ 0u, ((_GLF_IDENTITY(virtual_gid, (virtual_gid) - 0u)) ^ 0u) | 0u)), max((_GLF_IDENTITY((_GLF_IDENTITY(virtual_gid, (virtual_gid) - 0u)) ^ 0u, ((_GLF_IDENTITY(virtual_gid, (virtual_gid) - 0u)) ^ 0u) | 0u)), _GLF_IDENTITY((_GLF_IDENTITY((_GLF_IDENTITY(virtual_gid, (virtual_gid) - 0u)) ^ 0u, ((_GLF_IDENTITY(virtual_gid, (virtual_gid) - 0u)) ^ 0u) | 0u)), (_GLF_IDENTITY((_GLF_IDENTITY((_GLF_IDENTITY(virtual_gid, (virtual_gid) - 0u)) ^ 0u, ((_GLF_IDENTITY(virtual_gid, (virtual_gid) - 0u)) ^ 0u) | 0u)), uint(uvec2((_GLF_IDENTITY((_GLF_IDENTITY(virtual_gid, (virtual_gid) - 0u)) ^ 0u, ((_GLF_IDENTITY(virtual_gid, (virtual_gid) - 0u)) ^ 0u) | 0u)), 0u)))) >> 0u))), (true ? (_GLF_IDENTITY((_GLF_IDENTITY(virtual_gid, (virtual_gid) - 0u)) ^ 0u, ((_GLF_IDENTITY(virtual_gid, (virtual_gid) - 0u)) ^ 0u) | 0u)) : _GLF_FUZZED(subgroup_base)))))))) | 0u)) ^ 0u))), _GLF_IDENTITY(virtual_gid, _GLF_IDENTITY(_GLF_IDENTITY((false ? _GLF_FUZZED(next_virtual_gid) : _GLF_IDENTITY(_GLF_IDENTITY(virtual_gid, clamp(virtual_gid, _GLF_IDENTITY(virtual_gid, ~ (~ _GLF_IDENTITY((virtual_gid), clamp(_GLF_IDENTITY((virtual_gid), max((virtual_gid), (virtual_gid))), (virtual_gid), (virtual_gid))))), _GLF_IDENTITY(virtual_gid, (virtual_gid) << 0u))), (virtual_gid) ^ 0u)), max((false ? _GLF_FUZZED(next_virtual_gid) : _GLF_IDENTITY(_GLF_IDENTITY(virtual_gid, clamp(virtual_gid, _GLF_IDENTITY(virtual_gid, ~ (~ _GLF_IDENTITY((virtual_gid), clamp(_GLF_IDENTITY((virtual_gid), max((virtual_gid), (virtual_gid))), (virtual_gid), (virtual_gid))))), _GLF_IDENTITY(virtual_gid, (virtual_gid) << 0u))), (virtual_gid) ^ 0u)), (false ? _GLF_FUZZED(next_virtual_gid) : _GLF_IDENTITY(_GLF_IDENTITY(virtual_gid, clamp(virtual_gid, _GLF_IDENTITY(_GLF_IDENTITY(virtual_gid, ~ (~ _GLF_IDENTITY((virtual_gid), clamp(_GLF_IDENTITY((virtual_gid), max((virtual_gid), (virtual_gid))), (virtual_gid), (virtual_gid))))), uint(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(virtual_gid, ~ (~ _GLF_IDENTITY((virtual_gid), clamp(_GLF_IDENTITY((virtual_gid), max((virtual_gid), (virtual_gid))), (virtual_gid), (virtual_gid))))), (0u >> _GLF_IDENTITY(uint(2u), uint(2u))), 1u), uvec3(uvec4(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(virtual_gid, ~ (~ _GLF_IDENTITY((virtual_gid), clamp(_GLF_IDENTITY((virtual_gid), max((virtual_gid), (virtual_gid))), (virtual_gid), (virtual_gid))))), (0u >> _GLF_IDENTITY(uint(2u), uint(2u))), 1u), clamp(uvec3(_GLF_IDENTITY(virtual_gid, ~ (~ _GLF_IDENTITY((virtual_gid), clamp(_GLF_IDENTITY((virtual_gid), max((virtual_gid), (virtual_gid))), (virtual_gid), (virtual_gid))))), (0u >> _GLF_IDENTITY(uint(2u), uint(2u))), 1u), uvec3(_GLF_IDENTITY(virtual_gid, ~ (~ _GLF_IDENTITY((virtual_gid), clamp(_GLF_IDENTITY((virtual_gid), max((virtual_gid), (virtual_gid))), (virtual_gid), (virtual_gid))))), (0u >> _GLF_IDENTITY(uint(2u), uint(2u))), 1u), uvec3(_GLF_IDENTITY(virtual_gid, ~ (~ _GLF_IDENTITY((virtual_gid), clamp(_GLF_IDENTITY((virtual_gid), max((virtual_gid), (virtual_gid))), (virtual_gid), (virtual_gid))))), (0u >> _GLF_IDENTITY(uint(2u), uint(2u))), 1u))), 1u))))), _GLF_IDENTITY(virtual_gid, (virtual_gid) << 0u))), (virtual_gid) ^ 0u)))), (true ? _GLF_IDENTITY((false ? _GLF_FUZZED(next_virtual_gid) : _GLF_IDENTITY(_GLF_IDENTITY(virtual_gid, clamp(virtual_gid, _GLF_IDENTITY(virtual_gid, ~ (~ _GLF_IDENTITY((virtual_gid), clamp(_GLF_IDENTITY((virtual_gid), max((virtual_gid), (virtual_gid))), (virtual_gid), (virtual_gid))))), _GLF_IDENTITY(virtual_gid, (virtual_gid) << 0u))), (virtual_gid) ^ 0u)), max((false ? _GLF_FUZZED(next_virtual_gid) : _GLF_IDENTITY(_GLF_IDENTITY(virtual_gid, clamp(virtual_gid, _GLF_IDENTITY(virtual_gid, ~ (~ _GLF_IDENTITY((virtual_gid), clamp(_GLF_IDENTITY((virtual_gid), max((virtual_gid), (virtual_gid))), (virtual_gid), (virtual_gid))))), _GLF_IDENTITY(virtual_gid, (virtual_gid) << 0u))), (virtual_gid) ^ 0u)), (false ? _GLF_FUZZED(next_virtual_gid) : _GLF_IDENTITY(_GLF_IDENTITY(virtual_gid, clamp(virtual_gid, _GLF_IDENTITY(_GLF_IDENTITY(virtual_gid, ~ (~ _GLF_IDENTITY((virtual_gid), clamp(_GLF_IDENTITY((virtual_gid), max((virtual_gid), (virtual_gid))), (virtual_gid), (virtual_gid))))), uint(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(virtual_gid, ~ (~ _GLF_IDENTITY((virtual_gid), clamp(_GLF_IDENTITY((virtual_gid), max((virtual_gid), (virtual_gid))), (virtual_gid), (virtual_gid))))), (0u >> _GLF_IDENTITY(uint(2u), uint(2u))), 1u), uvec3(uvec4(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(virtual_gid, ~ (~ _GLF_IDENTITY((virtual_gid), clamp(_GLF_IDENTITY((virtual_gid), max((virtual_gid), (virtual_gid))), (virtual_gid), (virtual_gid))))), (0u >> _GLF_IDENTITY(uint(2u), uint(2u))), 1u), clamp(uvec3(_GLF_IDENTITY(virtual_gid, ~ (~ _GLF_IDENTITY((virtual_gid), clamp(_GLF_IDENTITY((virtual_gid), max((virtual_gid), (virtual_gid))), (virtual_gid), (virtual_gid))))), (0u >> _GLF_IDENTITY(uint(2u), uint(2u))), 1u), uvec3(_GLF_IDENTITY(virtual_gid, ~ (~ _GLF_IDENTITY((virtual_gid), clamp(_GLF_IDENTITY((virtual_gid), max((virtual_gid), (virtual_gid))), (virtual_gid), (virtual_gid))))), (0u >> _GLF_IDENTITY(uint(2u), uint(2u))), 1u), uvec3(_GLF_IDENTITY(virtual_gid, ~ (~ _GLF_IDENTITY((virtual_gid), clamp(_GLF_IDENTITY((virtual_gid), max((_GLF_IDENTITY(virtual_gid, clamp(virtual_gid, virtual_gid, virtual_gid))), (virtual_gid))), (virtual_gid), (virtual_gid))))), (_GLF_IDENTITY(0u, (0u) * ((1u << _GLF_IDENTITY(uint(3u), uint(3u))) >> _GLF_IDENTITY(uint(3u), _GLF_IDENTITY(uint(3u), (uint(3u)) >> 0u)))) >> _GLF_IDENTITY(uint(2u), uint(2u))), 1u))), 1u))))), _GLF_IDENTITY(virtual_gid, (virtual_gid) << 0u))), (virtual_gid) ^ 0u)))) : _GLF_FUZZED(virtual_gid))))))], uint(_GLF_IDENTITY(1, max(1, 1))), _GLF_IDENTITY(4, max(4, 4)), _GLF_IDENTITY(64, (true ? _GLF_IDENTITY(64, max(_GLF_IDENTITY(64, (true ? 64 : _GLF_FUZZED(-43441))), 64)) : _GLF_FUZZED(50948))), 4);
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if((subgroup_local_id % 2) == 0)
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   subgroupAll(true);
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   atomicStore(buf[next_virtual_gid], uint(2), 4, 64, 4);
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, bool(bvec3(false, false, false))))), ! (! (false)))) && true)))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec2(false, true))), (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y)))), (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y))))) && true))), true && ((injectionSwitch.x > injectionSwitch.y)))))), false, true)), ! (_GLF_IDENTITY(! (bool(bvec3(_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, sin(0.0) + _GLF_IDENTITY((injectionSwitch.y), ((injectionSwitch.y)) / 1.0))), true && ((_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(mat3x4(injectionSwitch, 0.0, 1.0, 1.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 1.0, 1.0, 1.0, 0.0))).y, (injectionSwitch.x > injectionSwitch.y) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), false, true))), bool(bvec3(! (bool(bvec3(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y))), false, true))), true, true)))))))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))
          barrier();
         if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, false)))))
          {
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
            barrier();
           barrier();
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
          }
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), false || (bool(false))))))))))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           barrier();
          }
         barrier();
        }
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(8934.9734), _GLF_FUZZED(-3.3)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))).x, max(injectionSwitch.x, injectionSwitch.x)), min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(8934.9734), _GLF_FUZZED(-3.3)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))).x, max(injectionSwitch.x, injectionSwitch.x)), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(8934.9734), _GLF_FUZZED(-3.3)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))).x, max(injectionSwitch.x, injectionSwitch.x)))))) > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(vec2(-9087.9075, 2800.2151).s)), bool(false))) > injectionSwitch.y))))
    barrier();
  }
 else
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, 1.0 * (injectionSwitch.y))))) && true)))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(false), ! (! (bool(false))))), false || (bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, false, true)), (_GLF_IDENTITY(bool(bvec3(false, false, true)), bool(bvec3(bool(bvec3(false, false, true)), true, true)))) || false))), ! (! (bool(false))))))))))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   subgroupAll(false);
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   atomicStore(buf[next_virtual_gid], _GLF_IDENTITY(uint(2), 0u + (uint(2))), 4, 64, 4);
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false)))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true)))), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(-4.1))) > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[_GLF_IDENTITY(_GLF_IDENTITY(1, (0 << _GLF_IDENTITY(_GLF_IDENTITY(int(6), clamp(int(6), int(6), int(6))), int(6))) + (1)), (1) | 0)], (injectionSwitch[1]) - 0.0))))).y))))), ! (! (bool(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0))) > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).y))))))))))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           barrier();
          }
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
         barrier();
        }
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))))
        barrier();
       barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
}
