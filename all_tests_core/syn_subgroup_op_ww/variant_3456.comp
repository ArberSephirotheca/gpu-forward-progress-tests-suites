#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
#extension GL_EXT_maximal_reconvergence : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 do
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(mat2(injectionSwitch.y, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 0.0)))))))
    {
     if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), true), bvec2(bvec3(bvec2(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), true), true)))), bool(bvec2(bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), true), bvec2(bvec3(bvec2(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), true), true)))), true))))))
      {
      }
     else
      {
       return;
      }
    }
  }
 while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
 do
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_WRAPPED_IF_TRUE(true))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        continue;
       return;
      }
     else
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_WRAPPED_IF_FALSE(false))
          {
          }
         else
          {
           do
            {
             return;
            }
           while(_GLF_WRAPPED_LOOP(false));
          }
        }
      }
    }
  }
 while(_GLF_WRAPPED_LOOP(false));
 uint subgroup_id = gl_SubgroupID;
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_WRAPPED_IF_TRUE(true))
  {
   do
    {
     if(_GLF_DEAD(false))
      {
       do
        {
         if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, _GLF_IDENTITY(_GLF_IDENTITY(bool(bool(true)), (bool(bool(true))) || false), (bool(bool(true))) || _GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) || false)))))))))
          {
           if(_GLF_WRAPPED_IF_TRUE(true))
            {
             if(_GLF_WRAPPED_IF_FALSE(false))
              {
              }
             else
              {
               if(_GLF_DEAD(false))
                return;
               for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < (1 & 1)); _injected_loop_counter ++)
                {
                 do
                  {
                   if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-27.95)), bool(false))) < injectionSwitch.y))))
                    {
                     for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
                      {
                       for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != _GLF_IDENTITY(_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(_injected_loop_counter))), max(1, _GLF_IDENTITY(1, clamp(1, _GLF_IDENTITY(1, clamp(1, 1, _GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) ^ 0)) | 0))), _GLF_IDENTITY(1, clamp(1, 1, 1))))))); _injected_loop_counter ++)
                        {
                         return;
                        }
                      }
                    }
                   else
                    {
                    }
                  }
                 while(_GLF_WRAPPED_LOOP(false));
                }
              }
            }
           else
            {
            }
           if(_GLF_DEAD(false))
            return;
          }
         else
          {
          }
        }
       while(_GLF_WRAPPED_LOOP(false));
       if(_GLF_DEAD(false))
        break;
       for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > _GLF_IDENTITY(_GLF_IDENTITY(0, (0) << 0), 0 ^ _GLF_IDENTITY((_GLF_IDENTITY(0, min(0, 0))), clamp(_GLF_IDENTITY((_GLF_IDENTITY(0, _GLF_IDENTITY(min(0, 0), (false ? _GLF_FUZZED(_injected_loop_counter) : min(0, 0))))), 0 ^ ((_GLF_IDENTITY(0, min(0, 0))))), _GLF_IDENTITY((_GLF_IDENTITY(0, min(0, 0))), ((_GLF_IDENTITY(0, min(0, 0)))) * 1), (_GLF_IDENTITY(0, min(0, 0))))))); _injected_loop_counter --)
        {
         for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
          {
           do
            {
             if(_GLF_DEAD(false))
              {
               if(_GLF_DEAD(false))
                {
                 for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter, int(ivec2(_injected_loop_counter, 1))) < int(_GLF_ONE(1.0, injectionSwitch.y))); _injected_loop_counter ++)
                  {
                   if(_GLF_WRAPPED_IF_FALSE(false))
                    {
                    }
                   else
                    {
                     if(_GLF_DEAD(false))
                      {
                       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), ! (! _GLF_IDENTITY((false), ((false)) && true)))))
                        return;
                       return;
                      }
                    }
                   if(_GLF_DEAD(false))
                    continue;
                  }
                 return;
                }
               return;
               for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
                {
                 if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(_GLF_ONE(1.0, injectionSwitch.y)), (false ? _GLF_FUZZED(max(injectionSwitch, injectionSwitch)) : (injectionSwitch) * mat2(_GLF_ONE(1.0, injectionSwitch.y))))).y))))
                  {
                  }
                 else
                  {
                   do
                    {
                     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                      {
                       if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(vec2(840.521, -9.2)) : injectionSwitch)).y, _GLF_IDENTITY(min(injectionSwitch.y, injectionSwitch.y), float(mat4(min(injectionSwitch.y, injectionSwitch.y), 0.0, cos(_GLF_IDENTITY(0.0, 0.0 + (0.0))), 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, determinant(mat4(0.0, 1.0, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)), 1.0, _GLF_IDENTITY(1.0, min(1.0, 1.0)))))), injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED((486.741))), bool(false)))))))))
                        {
                        }
                       else
                        {
                         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                          continue;
                         return;
                         if(_GLF_DEAD(false))
                          return;
                         if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
                          break;
                        }
                      }
                    }
                   while(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(false), (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(false), ! (_GLF_IDENTITY(! (_GLF_WRAPPED_LOOP(false)), (! (_GLF_WRAPPED_LOOP(false))) || false)))) || false));
                  }
                }
              }
            }
           while(_GLF_WRAPPED_LOOP(false));
           if(_GLF_DEAD(false))
            continue;
          }
        }
      }
    }
   while(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(false), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(false), ! (! (_GLF_WRAPPED_LOOP(false)))), false, true, true)), (bool(bvec4(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(false), ! (! (_GLF_WRAPPED_LOOP(false)))), false, true, true))) || false)), true && (_GLF_WRAPPED_LOOP(false))), ! (! (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(false), true && (_GLF_WRAPPED_LOOP(false)))))));
  }
 else
  {
  }
 if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, true && (true))))
  {
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
    }
   else
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_WRAPPED_IF_FALSE(false))
          {
          }
         else
          {
           return;
          }
        }
       return;
       if(_GLF_DEAD(false))
        {
         if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, true && (false))))
          {
          }
         else
          {
           return;
          }
        }
      }
     for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < (1 | _GLF_IDENTITY(0, min(0, 0)))); _injected_loop_counter ++)
      {
       if(_GLF_WRAPPED_IF_FALSE(false))
        {
         if(_GLF_WRAPPED_IF_FALSE(false))
          {
          }
         else
          {
           if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), true && (! (! (false)))))))
            return;
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            continue;
          }
        }
       else
        {
         if(_GLF_DEAD(false))
          break;
         if(_GLF_WRAPPED_IF_FALSE(false))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, float(mat2x4(injectionSwitch.x, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0))), injectionSwitch.x)) > injectionSwitch.y))))
            return;
          }
         else
          {
           if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], (injectionSwitch[1]) * 1.0))).y, true && (injectionSwitch.x > injectionSwitch.y))), true && ((_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], (injectionSwitch[1]) * 1.0))).y, true && (injectionSwitch.x > injectionSwitch.y))))) || false)), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(true, (_GLF_IDENTITY(true, (true) || false)) && true), ! (! (true))), ! (! (true))) && ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true)) || false)))))), ! (_GLF_IDENTITY(! (_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], (injectionSwitch[1]) * 1.0))).y, true && (injectionSwitch.x > injectionSwitch.y))), true && ((_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], (injectionSwitch[1]) * 1.0))).y, true && (injectionSwitch.x > injectionSwitch.y))))) || false)), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(true, (_GLF_IDENTITY(true, (true) || false)) && true), ! (! (true))), ! (! (true))) && ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true)) || false))))))), (_GLF_IDENTITY(! (_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], (injectionSwitch[1]) * 1.0))).y, true && (injectionSwitch.x > injectionSwitch.y))), true && ((_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], (injectionSwitch[1]) * 1.0))).y, true && (injectionSwitch.x > injectionSwitch.y))))) || false)), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(true, (_GLF_IDENTITY(true, (true) || false)) && true), ! (! (true))), ! (! (true))) && ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true)) || false))))))), true && (! (_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], (injectionSwitch[1]) * 1.0))).y, true && (injectionSwitch.x > injectionSwitch.y))), true && ((_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], (injectionSwitch[1]) * 1.0))).y, true && (injectionSwitch.x > injectionSwitch.y))))) || false)), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(true, (_GLF_IDENTITY(true, (true) || false)) && true), ! (! (true))), ! (! (true))) && ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true)) || false)))))))))) && true))))
            return;
           if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), false || (false)), false || (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), false || (false)), false || (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), false || (false))))))))
            {
             if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), false || (_GLF_IDENTITY(false, (false) || false))), true), bvec2(bvec3(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), (_GLF_IDENTITY(false, (false) || false)) && true)))), false || (_GLF_IDENTITY(false, _GLF_IDENTITY((false), bool(bvec2((false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) || false))), true), true)))))))
              break;
             continue;
            }
          }
         if(_GLF_WRAPPED_IF_FALSE(false))
          {
          }
         else
          {
           if(_GLF_DEAD(false))
            return;
           if(_GLF_DEAD(false))
            return;
          }
        }
      }
     for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          break;
         if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
          }
         else
          {
           return;
          }
        }
      }
     for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
      {
       if(_GLF_WRAPPED_IF_TRUE(true))
        {
         if(_GLF_WRAPPED_IF_FALSE(false))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))))))
            return;
          }
         else
          {
           if(_GLF_WRAPPED_IF_TRUE(true))
            {
             if(_GLF_WRAPPED_IF_TRUE(true))
              {
               if(_GLF_DEAD(false))
                {
                 for(int _injected_loop_counter = (1 ^ 1); _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
                  {
                   return;
                  }
                }
               if(_GLF_WRAPPED_IF_FALSE(false))
                {
                }
               else
                {
                 if(_GLF_DEAD(false))
                  {
                   if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x > injectionSwitch.y))))
                    {
                     if(_GLF_DEAD(false))
                      return;
                     if(_GLF_DEAD(false))
                      {
                       if(_GLF_DEAD(false))
                        return;
                       return;
                      }
                    }
                   else
                    {
                     for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter, max(_injected_loop_counter, _injected_loop_counter)) != (0 | (-65488 & int(_GLF_ZERO(0.0, injectionSwitch.x))))); _injected_loop_counter --)
                      {
                       if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                        {
                        }
                       else
                        {
                         do
                          {
                           return;
                          }
                         while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
                        }
                      }
                    }
                  }
                }
               if(_GLF_DEAD(false))
                return;
               do
                {
                 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                  return;
                }
               while(_GLF_WRAPPED_LOOP(false));
              }
             else
              {
              }
            }
           else
            {
            }
          }
        }
       else
        {
        }
      }
     if(_GLF_DEAD(false))
      {
       do
        {
         return;
        }
       while(_GLF_WRAPPED_LOOP(false));
      }
    }
  }
 else
  {
  }
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   do
    {
     if(_GLF_DEAD(false))
      break;
     return;
    }
   while(_GLF_WRAPPED_LOOP(false));
  }
 uint num_workgroup = _GLF_IDENTITY(gl_NumWorkGroups, uvec3(0u, 0u, 0u) ^ _GLF_IDENTITY((gl_NumWorkGroups), ((gl_NumWorkGroups)) << _GLF_IDENTITY(uvec3(0u, _GLF_IDENTITY(0u, (0u) + 0u), 0u), (uvec3(0u, _GLF_IDENTITY(0u, (0u) + 0u), 0u)) << uvec3(0u, 0u, 0u)))).x;
 for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
  {
   if(_GLF_DEAD(false))
    continue;
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
    break;
   for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
    {
     for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_injected_loop_counter, min(_GLF_IDENTITY(_injected_loop_counter, _GLF_IDENTITY((_injected_loop_counter) << 0, (0 << _GLF_IDENTITY(int(2), int(2))) | ((_injected_loop_counter) << 0))), _injected_loop_counter)), (_GLF_IDENTITY(_injected_loop_counter, min(_GLF_IDENTITY(_injected_loop_counter, (_injected_loop_counter) << 0), _injected_loop_counter))) + _GLF_IDENTITY(0, _GLF_IDENTITY((1 ^ 1), ((1 ^ 1)) - 0) + (0))) != _GLF_IDENTITY((0 | 0), _GLF_IDENTITY((false ? _GLF_IDENTITY(_GLF_FUZZED(_injected_loop_counter), ~ (_GLF_IDENTITY(~ (_GLF_FUZZED(_injected_loop_counter)), int(ivec2(~ (_GLF_FUZZED(_injected_loop_counter)), 1))))) : _GLF_IDENTITY((0 | 0), min((0 | 0), (0 | 0)))), ((false ? _GLF_IDENTITY(_GLF_FUZZED(_GLF_IDENTITY(_injected_loop_counter, max(_GLF_IDENTITY(_injected_loop_counter, (_injected_loop_counter) >> 0), _injected_loop_counter))), ~ (~ (_GLF_FUZZED(_injected_loop_counter)))) : _GLF_IDENTITY((0 | 0), min((0 | 0), (0 | 0))))) - 0)), bool(_GLF_IDENTITY(bvec3(_injected_loop_counter != _GLF_IDENTITY((_GLF_IDENTITY(0 | 0, max(0 | 0, 0 | 0))), (_GLF_IDENTITY(false ? _GLF_FUZZED(_injected_loop_counter) : _GLF_IDENTITY((_GLF_IDENTITY(0 | 0, int(ivec2(0 | 0, _GLF_IDENTITY(1, (_GLF_IDENTITY(1, max(1, 1))) / 1))))), min((_GLF_IDENTITY(0 | 0, int(_GLF_IDENTITY(ivec2(0 | 0, 1), (_GLF_IDENTITY(ivec2(0 | 0, 1), (ivec2(0 | 0, 1)) >> ivec2(0, 0))) / ivec2(1, 1))))), (_GLF_IDENTITY(0 | 0, int(ivec2(_GLF_IDENTITY(0, (true ? 0 : _GLF_FUZZED(52131))) | 0, 1)))))), 0 + (false ? _GLF_FUZZED(_injected_loop_counter) : _GLF_IDENTITY((_GLF_IDENTITY(0 | 0, int(ivec2(0 | 0, _GLF_IDENTITY(1, (_GLF_IDENTITY(1, max(1, 1))) / 1))))), min((_GLF_IDENTITY(0 | 0, int(ivec2(0 | 0, 1)))), (_GLF_IDENTITY(0 | 0, int(ivec2(_GLF_IDENTITY(0, (true ? 0 : _GLF_FUZZED(52131))) | 0, 1)))))))))), _GLF_TRUE(true, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(_GLF_IDENTITY(vec2(_GLF_IDENTITY((injectionSwitch)[0], (false ? _GLF_FUZZED(-8651.3174) : (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))[0])), _GLF_FUZZED(-40.38)), mix(vec2(_GLF_FUZZED(89.61), _GLF_FUZZED(-47.46)), vec2((vec2(_GLF_IDENTITY((injectionSwitch)[0], (false ? _GLF_FUZZED(-8651.3174) : (injectionSwitch)[_GLF_IDENTITY(0, int(int(0)))])), _GLF_FUZZED(-40.38)))[0], _GLF_IDENTITY((vec2(_GLF_IDENTITY((injectionSwitch)[0], (false ? _GLF_FUZZED(-8651.3174) : (injectionSwitch)[0])), _GLF_FUZZED(-40.38)))[1], mix(float(_GLF_FUZZED(-8.7)), float((vec2(_GLF_IDENTITY((injectionSwitch)[0], (false ? _GLF_FUZZED(-8651.3174) : (injectionSwitch)[0])), _GLF_FUZZED(-40.38)))[1]), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), bvec2(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), vec2(_GLF_FUZZED(869.474), (injectionSwitch)[1]), bvec2(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (false)))))), true))), clamp(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-40.38)), vec2(_GLF_FUZZED(869.474), (injectionSwitch)[1]), bvec2(false, true))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-40.38)), vec2(_GLF_FUZZED(869.474), (injectionSwitch)[1]), bvec2(false, true))), max(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-40.38)), vec2(_GLF_FUZZED(869.474), (injectionSwitch)[1]), bvec2(false, true))), _GLF_IDENTITY(injectionSwitch, mix(vec2((_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(0.2), _GLF_FUZZED(4.8)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))))))[0], _GLF_FUZZED(-40.38)), vec2(_GLF_FUZZED(_GLF_IDENTITY(869.474, clamp(869.474, 869.474, 869.474))), (injectionSwitch)[1]), bvec2(false, true))))), _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-40.38)), vec2(_GLF_FUZZED(869.474), (injectionSwitch)[1]), bvec2(false, true))))))), injectionSwitch, injectionSwitch)).x < _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY((injectionSwitch)[0], min((injectionSwitch)[0], (injectionSwitch)[0])), _GLF_FUZZED(843.229)), vec2(_GLF_FUZZED((127.975 - -8.6)), (injectionSwitch)[1]), bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))).y, bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(_GLF_IDENTITY(vec2(_GLF_IDENTITY((injectionSwitch)[0], (false ? _GLF_FUZZED(-8651.3174) : (injectionSwitch)[0])), _GLF_FUZZED(-40.38)), mix(vec2(_GLF_FUZZED(89.61), _GLF_IDENTITY(_GLF_FUZZED(-47.46), min(_GLF_FUZZED(-47.46), _GLF_IDENTITY(_GLF_FUZZED(-47.46), clamp(_GLF_IDENTITY(_GLF_FUZZED(-47.46), min(_GLF_FUZZED(-47.46), _GLF_FUZZED(-47.46))), _GLF_FUZZED(-47.46), _GLF_FUZZED(-47.46)))))), vec2((vec2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch)[0], min((injectionSwitch)[0], (injectionSwitch)[0])), clamp(_GLF_IDENTITY((injectionSwitch)[0], min((injectionSwitch)[0], (injectionSwitch)[0])), _GLF_IDENTITY((injectionSwitch)[0], min((injectionSwitch)[0], (injectionSwitch)[0])), _GLF_IDENTITY((injectionSwitch)[0], min((injectionSwitch)[0], (injectionSwitch)[0])))), (false ? _GLF_IDENTITY(_GLF_FUZZED(-8651.3174), clamp(_GLF_IDENTITY(_GLF_FUZZED(-8651.3174), (true ? _GLF_FUZZED(-8651.3174) : _GLF_FUZZED(6382.3119))), _GLF_IDENTITY(_GLF_FUZZED(-8651.3174), (_GLF_IDENTITY(_GLF_FUZZED(-8651.3174), (_GLF_FUZZED(-8651.3174)) - 0.0)) * 1.0), _GLF_FUZZED(-8651.3174))) : (injectionSwitch)[0])), _GLF_FUZZED(-40.38)))[0], (vec2(_GLF_IDENTITY((injectionSwitch)[0], (false ? _GLF_FUZZED(-8651.3174) : (injectionSwitch)[0])), _GLF_FUZZED(-40.38)))[1]), bvec2(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), vec2(_GLF_FUZZED(869.474), (injectionSwitch)[1]), bvec2(false, true))), clamp(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-40.38)), vec2(_GLF_FUZZED(869.474), (injectionSwitch)[1]), bvec2(false, true)), _GLF_IDENTITY((mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-40.38)), vec2(_GLF_FUZZED(869.474), (injectionSwitch)[1]), bvec2(false, true))) * mat2(1.0), (false ? _GLF_FUZZED(vec2(-2.7, -54.10)) : (mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-40.38)), vec2(_GLF_FUZZED(869.474), (injectionSwitch)[1]), bvec2(false, true))) * mat2(1.0)))), clamp(mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-40.38)), vec2(_GLF_FUZZED(869.474), (injectionSwitch)[1]), bvec2(false, true)), mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-40.38)), vec2(_GLF_FUZZED(869.474), (injectionSwitch)[1]), bvec2(false, true)), mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-40.38)), vec2(_GLF_FUZZED(869.474), (injectionSwitch)[1]), bvec2(false, true))))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY((injectionSwitch)[_GLF_IDENTITY(0, clamp(0, 0, _GLF_IDENTITY(0, min(0, 0))))], ((injectionSwitch)[_GLF_IDENTITY(0, clamp(0, 0, _GLF_IDENTITY(0, min(0, 0))))]) / _GLF_IDENTITY(dot(vec4(sqrt(0.0), 1.0, sin(0.0), 0.0), vec4(0.0, 1.0, 0.0, 0.0)), dot(vec4(sqrt(0.0), 1.0, sin(0.0), 0.0), vec4(0.0, 1.0, 0.0, 0.0)))), _GLF_FUZZED(_GLF_IDENTITY(-40.38, min(_GLF_IDENTITY(-40.38, max(-40.38, -40.38)), -40.38)))), vec2(_GLF_FUZZED(869.474), (injectionSwitch)[1]), bvec2(false, true))), max(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-40.38)), vec2(_GLF_FUZZED(869.474), (injectionSwitch)[1]), bvec2(false, true))), _GLF_IDENTITY(injectionSwitch, mix(vec2((_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, mix(_GLF_IDENTITY(vec2(_GLF_FUZZED(0.2), _GLF_FUZZED(4.8)), clamp(_GLF_IDENTITY(vec2(_GLF_FUZZED(0.2), _GLF_FUZZED(4.8)), min(vec2(_GLF_FUZZED(0.2), _GLF_FUZZED(4.8)), _GLF_IDENTITY(vec2(_GLF_FUZZED(0.2), _GLF_FUZZED(4.8)), mix(vec2((vec2(_GLF_FUZZED(0.2), _GLF_IDENTITY(_GLF_FUZZED(4.8), max(_GLF_IDENTITY(_GLF_FUZZED(4.8), clamp(_GLF_FUZZED(4.8), _GLF_FUZZED(4.8), _GLF_FUZZED(4.8))), _GLF_FUZZED(4.8)))))[0], (vec2(_GLF_FUZZED(0.2), _GLF_IDENTITY(_GLF_FUZZED(4.8), _GLF_IDENTITY(float(mat3x2(_GLF_FUZZED(4.8), 0.0, 1.0, exp(0.0), 1.0, 1.0)), float(mat4x2(float(mat3x2(_GLF_FUZZED(4.8), 0.0, 1.0, exp(0.0), 1.0, 1.0)), 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0))))))[1]), vec2(_GLF_FUZZED(359.015), _GLF_FUZZED(1324.1489)), bvec2(false, false))))), vec2(_GLF_FUZZED(0.2), _GLF_FUZZED(4.8)), vec2(_GLF_FUZZED(0.2), _GLF_FUZZED(4.8)))), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(_GLF_IDENTITY(true, bool(bvec2(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), _GLF_IDENTITY(true, true && (true))))))))[0], _GLF_FUZZED(-40.38)), vec2(_GLF_FUZZED(869.474), (injectionSwitch)[1]), bvec2(false, true))))), _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-40.38)), vec2(_GLF_FUZZED(869.474), _GLF_IDENTITY((injectionSwitch), max(_GLF_IDENTITY((injectionSwitch), mat2(1.0) * ((injectionSwitch))), _GLF_IDENTITY((injectionSwitch), clamp((injectionSwitch), (injectionSwitch), _GLF_IDENTITY((injectionSwitch), max((injectionSwitch), (injectionSwitch)))))))[1]), bvec2(false, true))))))), injectionSwitch, injectionSwitch)).x < injectionSwitch.y, true && (_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(_GLF_IDENTITY(vec2(_GLF_IDENTITY((injectionSwitch)[0], (false ? _GLF_FUZZED(-8651.3174) : (injectionSwitch)[0])), _GLF_FUZZED(-40.38)), mix(vec2(_GLF_FUZZED(89.61), _GLF_FUZZED(-47.46)), vec2((vec2(_GLF_IDENTITY((injectionSwitch)[0], _GLF_IDENTITY((false ? _GLF_FUZZED(-8651.3174) : (injectionSwitch)[0]), float(mat2x4((false ? _GLF_FUZZED(-8651.3174) : (injectionSwitch)[0]), determinant(mat3(0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)), 1.0, tan(0.0), 1.0, 0.0, exp(0.0), _GLF_IDENTITY(dot(vec3(0.0, 1.0, 1.0), vec3(1.0, 0.0, 0.0)), dot(vec3(0.0, 1.0, 1.0), vec3(1.0, 0.0, 0.0))))))), _GLF_FUZZED(-40.38)))[0], _GLF_IDENTITY((vec2(_GLF_IDENTITY((injectionSwitch)[0], (false ? _GLF_FUZZED(-8651.3174) : (injectionSwitch)[0])), _GLF_FUZZED(-40.38))), min(_GLF_IDENTITY((vec2(_GLF_IDENTITY((injectionSwitch)[0], (false ? _GLF_FUZZED(-8651.3174) : (injectionSwitch)[0])), _GLF_FUZZED(-40.38))), mix(vec2(((vec2(_GLF_IDENTITY((injectionSwitch)[0], (false ? _GLF_FUZZED(-8651.3174) : (injectionSwitch)[0])), _GLF_FUZZED(-40.38))))[0], _GLF_IDENTITY(((vec2(_GLF_IDENTITY((injectionSwitch)[0], (false ? _GLF_FUZZED(-8651.3174) : (injectionSwitch)[0])), _GLF_FUZZED(-40.38)))), min(((vec2(_GLF_IDENTITY((injectionSwitch)[0], (false ? _GLF_FUZZED(-8651.3174) : (injectionSwitch)[0])), _GLF_FUZZED(-40.38)))), _GLF_IDENTITY(((vec2(_GLF_IDENTITY((injectionSwitch)[0], (false ? _GLF_FUZZED(-8651.3174) : (injectionSwitch)[0])), _GLF_FUZZED(-40.38)))), (true ? ((vec2(_GLF_IDENTITY((injectionSwitch)[0], (false ? _GLF_FUZZED(-8651.3174) : (injectionSwitch)[0])), _GLF_FUZZED(-40.38)))) : _GLF_FUZZED(injectionSwitch)))))[1]), vec2(_GLF_FUZZED(24.38), _GLF_FUZZED(759.289)), bvec2(false, false))), (vec2(_GLF_IDENTITY((injectionSwitch)[0], (false ? _GLF_FUZZED(-8651.3174) : _GLF_IDENTITY((injectionSwitch)[0], 1.0 * ((injectionSwitch)[0])))), _GLF_FUZZED(-40.38)))))[1]), bvec2(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), vec2(_GLF_FUZZED(869.474), (injectionSwitch)[1]), bvec2(false, true))), clamp(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-40.38)), vec2(_GLF_FUZZED(869.474), (injectionSwitch)[1]), bvec2(false, true))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(_GLF_IDENTITY(-40.38, mix(float(_GLF_FUZZED(9453.7296)), float(_GLF_IDENTITY(-40.38, (true ? _GLF_IDENTITY(-40.38, min(-40.38, -40.38)) : _GLF_FUZZED(274.127)))), bool(true))))), vec2(_GLF_FUZZED(869.474), (injectionSwitch)[1]), bvec2(false, true))), max(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(_GLF_IDENTITY(-40.38, mix(float(_GLF_FUZZED(9453.7296)), float(_GLF_IDENTITY(-40.38, (true ? _GLF_IDENTITY(-40.38, min(-40.38, -40.38)) : _GLF_FUZZED(274.127)))), bool(true))))), vec2(_GLF_FUZZED(869.474), (injectionSwitch)[1]), bvec2(false, true))), _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(_GLF_IDENTITY(-40.38, mix(float(_GLF_FUZZED(9453.7296)), float(_GLF_IDENTITY(-40.38, (true ? _GLF_IDENTITY(-40.38, min(-40.38, -40.38)) : _GLF_FUZZED(274.127)))), bool(true))))), vec2(_GLF_FUZZED(869.474), (injectionSwitch)[1]), bvec2(false, true))))), max(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(_GLF_IDENTITY(-40.38, max(_GLF_IDENTITY(-40.38, (-40.38) / cos(0.0)), -40.38)))), vec2(_GLF_FUZZED(869.474), (injectionSwitch)[1]), bvec2(false, true))), _GLF_IDENTITY(injectionSwitch, mix(vec2((_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(vec4(8.9, 450.671, -0.8, -6317.9940).t), (injectionSwitch)[1]), vec2(_GLF_IDENTITY((injectionSwitch)[0], min(_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch)[0], ((injectionSwitch)[0]) + 0.0), float(mat3x2((injectionSwitch)[0], 0.0, 0.0, 0.0, 0.0, 0.0))), (injectionSwitch)[0])), _GLF_FUZZED((-159.556 * 4.6))), bvec2(true, false))), mix(vec2(_GLF_FUZZED(0.2), _GLF_FUZZED(_GLF_IDENTITY(4.8, (false ? _GLF_FUZZED(72.84) : 4.8)))), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))))))[0], _GLF_FUZZED(-40.38)), _GLF_IDENTITY(vec2(_GLF_FUZZED(869.474), (injectionSwitch)[1]), mix(vec2(_GLF_FUZZED(_GLF_IDENTITY(-5.0, max(-5.0, -5.0))), (vec2(_GLF_FUZZED(869.474), (injectionSwitch)[1]))[1]), vec2((vec2(_GLF_FUZZED(869.474), (_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(float(false))), vec2(_GLF_FUZZED(748.114), (injectionSwitch)[1]), bvec2(false, true))))[1]))[0], _GLF_FUZZED(0.0)), bvec2(true, false))), bvec2(false, true))))), _GLF_IDENTITY(injectionSwitch, mix(_GLF_IDENTITY(vec2((injectionSwitch)[0], _GLF_FUZZED(-40.38)), max(vec2((injectionSwitch)[0], _GLF_FUZZED(-40.38)), vec2((injectionSwitch)[0], _GLF_FUZZED(-40.38)))), vec2(_GLF_FUZZED(869.474), _GLF_IDENTITY((injectionSwitch), min((injectionSwitch), _GLF_IDENTITY((injectionSwitch), vec2(mat2x4((injectionSwitch), 1.0, 1.0, 0.0, 1.0, 1.0, 1.0)))))[1]), bvec2(false, true))))))), injectionSwitch, injectionSwitch)).x < _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)))), false, true, true))))), false), _GLF_IDENTITY(bvec3(bvec4(bvec3(_injected_loop_counter != _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(0 | 0, max(0 | 0, 0 | _GLF_IDENTITY(0, ~ (~ (0)))))), 0 + (_GLF_IDENTITY((_GLF_IDENTITY(0 | 0, max(0 | 0, 0 | _GLF_IDENTITY(0, ~ (~ (0)))))), ((_GLF_IDENTITY(0 | 0, max(0 | 0, 0 | _GLF_IDENTITY(0, ~ (~ (0))))))) - 0))), _GLF_IDENTITY((false ? _GLF_FUZZED(_injected_loop_counter) : _GLF_IDENTITY((_GLF_IDENTITY(0 | 0, int(ivec2(0 | 0, 1)))), _GLF_IDENTITY(min((_GLF_IDENTITY(0 | 0, _GLF_IDENTITY(int(ivec2(0 | 0, 1)), int(int(int(ivec2(0 | 0, 1))))))), (_GLF_IDENTITY(0 | 0, int(ivec2(0 | 0, 1))))), 0 | (min((_GLF_IDENTITY(0 | 0, int(ivec2(0 | 0, 1)))), (_GLF_IDENTITY(0 | 0, int(ivec2(0 | 0, 1))))))))), clamp((false ? _GLF_FUZZED(_injected_loop_counter) : _GLF_IDENTITY((_GLF_IDENTITY(0 | 0, int(_GLF_IDENTITY(ivec2(0 | 0, 1), (ivec2(0 | 0, 1)) / ivec2(1, 1))))), _GLF_IDENTITY(min(_GLF_IDENTITY((_GLF_IDENTITY(0 | 0, int(ivec2(0 | 0, 1)))), max((_GLF_IDENTITY(0 | 0, int(ivec2(_GLF_IDENTITY(0, ~ (~ (0))) | 0, 1)))), (_GLF_IDENTITY(0 | 0, int(ivec2(0 | 0, 1)))))), (_GLF_IDENTITY(0 | 0, int(ivec2(0 | 0, 1))))), 0 | (min((_GLF_IDENTITY(0 | 0, int(ivec2(0 | 0, 1)))), (_GLF_IDENTITY(0 | 0, int(ivec2(0 | 0, 1))))))))), _GLF_IDENTITY(_GLF_IDENTITY((false ? _GLF_FUZZED(_injected_loop_counter) : _GLF_IDENTITY((_GLF_IDENTITY(0 | 0, int(ivec2(0 | 0, _GLF_IDENTITY(1, 0 | (1)))))), _GLF_IDENTITY(min((_GLF_IDENTITY(_GLF_IDENTITY(0 | 0, ~ (~ (0 | 0))), int(ivec2(0 | 0, 1)))), (_GLF_IDENTITY(0 | 0, int(ivec2(0 | 0, 1))))), 0 | (min((_GLF_IDENTITY(0 | _GLF_IDENTITY(0, max(0, 0)), int(_GLF_IDENTITY(ivec2(0 | 0, 1), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED((+ ivec2(-24779, -27612))) : ivec2(0 | 0, 1)))))), _GLF_IDENTITY((_GLF_IDENTITY(0 | 0, int(ivec2(0 | 0, 1)))), ((_GLF_IDENTITY(0 | 0, int(ivec2(0 | 0, 1))))) - 0)))))), (0 << _GLF_IDENTITY(int(8), int(8))) | ((false ? _GLF_FUZZED(_injected_loop_counter) : _GLF_IDENTITY((_GLF_IDENTITY(0 | 0, int(_GLF_IDENTITY(ivec2(_GLF_IDENTITY(0 | _GLF_IDENTITY(0, ~ (~ (0))), (0 | 0) + 0), 1), ivec2(0, 0) ^ (ivec2(_GLF_IDENTITY(0 | 0, (0 | 0) + 0), 1)))))), _GLF_IDENTITY(min((_GLF_IDENTITY(_GLF_IDENTITY(0 | 0, ~ (~ (0 | 0))), int(ivec2(0 | _GLF_IDENTITY(0, int(ivec2(_GLF_IDENTITY(0, ~ (~ (0))), 0))), 1)))), (_GLF_IDENTITY(0 | 0, int(ivec2(0 | 0, 1))))), 0 | (min((_GLF_IDENTITY(0 | 0, int(ivec2(0 | 0, 1)))), (_GLF_IDENTITY(0 | 0, int(ivec2(0 | 0, 1))))))))))), min((false ? _GLF_FUZZED(_injected_loop_counter) : _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(0 | 0, int(ivec2(0 | 0, 1))), (_GLF_IDENTITY(0 | 0, int(ivec2(0 | 0, 1)))) - 0)), _GLF_IDENTITY(min((_GLF_IDENTITY(_GLF_IDENTITY(0, ~ (~ (_GLF_IDENTITY(0, (_GLF_IDENTITY(0, (0) ^ 0)) | (0 | 0))))) | 0, int(ivec2(0 | 0, 1)))), (_GLF_IDENTITY(0 | 0, int(ivec2(0 | 0, 1))))), 0 | (min((_GLF_IDENTITY(_GLF_IDENTITY(0 | 0, max(0 | 0, _GLF_IDENTITY(0 | 0, ~ (~ (_GLF_IDENTITY(0 | 0, ~ (~ (0 | 0)))))))), int(ivec2(0 | 0, 1)))), (_GLF_IDENTITY(0 | 0, int(ivec2(0 | _GLF_IDENTITY(0, ~ (_GLF_IDENTITY(~ (0), min(~ (0), ~ (0))))), _GLF_IDENTITY(1, 0 ^ (_GLF_IDENTITY(1, int(ivec4(1, 0, 1, int(_GLF_ONE(1.0, injectionSwitch.y)))))))))))))))), (false ? _GLF_FUZZED(_injected_loop_counter) : _GLF_IDENTITY((_GLF_IDENTITY(0 | 0, int(ivec2(0 | 0, 1)))), _GLF_IDENTITY(min((_GLF_IDENTITY(0 | 0, int(ivec2(0 | 0, 1)))), (_GLF_IDENTITY(_GLF_IDENTITY(0, (0) * ((_GLF_IDENTITY(1, (false ? _GLF_FUZZED(_injected_loop_counter) : 1)) << _GLF_IDENTITY(int(4), int(4))) >> _GLF_IDENTITY(int(4), int(4)))) | 0, int(ivec2(0 | 0, 1))))), 0 | (_GLF_IDENTITY(min((_GLF_IDENTITY(0 | 0, int(ivec2(0 | 0, 1)))), (_GLF_IDENTITY(0 | 0, int(ivec2(0 | 0, 1))))), max(min((_GLF_IDENTITY(0 | 0, int(ivec2(0 | 0, 1)))), (_GLF_IDENTITY(0 | 0, int(ivec2(_GLF_IDENTITY(0, 0 ^ (0)) | 0, 1))))), _GLF_IDENTITY(min((_GLF_IDENTITY(0 | 0, int(ivec2(0 | 0, 1)))), (_GLF_IDENTITY(0 | 0, int(ivec2(0 | 0, 1))))), (_GLF_IDENTITY(min((_GLF_IDENTITY(_GLF_IDENTITY(0, (0) + 0) | 0, int(ivec2(_GLF_IDENTITY(0 | 0, (0 | 0) | 0), 1)))), (_GLF_IDENTITY(_GLF_IDENTITY(0 | 0, int(ivec2(0 | 0, 1))), (_GLF_IDENTITY(_GLF_IDENTITY(0 | 0, int(ivec2(0 | 0, 1))), (false ? _GLF_FUZZED(-87589) : _GLF_IDENTITY(0 | 0, int(ivec2(0 | 0, 1)))))) | (_GLF_IDENTITY(0 | 0, int(ivec2(0 | 0, 1))))))), 0 ^ (min((_GLF_IDENTITY(0 | 0, int(ivec2(0 | 0, 1)))), (_GLF_IDENTITY(0 | 0, int(ivec2(0 | 0, 1)))))))) >> 0))))))))), (false ? _GLF_FUZZED(_injected_loop_counter) : _GLF_IDENTITY((_GLF_IDENTITY(0 | 0, int(ivec2(0 | 0, 1)))), _GLF_IDENTITY(min((_GLF_IDENTITY(0 | 0, int(ivec2(0 | 0, 1)))), (_GLF_IDENTITY(0 | 0, int(ivec2(0 | _GLF_IDENTITY(0, (_GLF_IDENTITY(0, (0) + 0)) | int(_GLF_ZERO(0.0, injectionSwitch.x))), 1))))), _GLF_IDENTITY(0 | (min((_GLF_IDENTITY(0 | _GLF_IDENTITY(0, clamp(0, 0, _GLF_IDENTITY(0, clamp(_GLF_IDENTITY(0, (0) ^ 0), 0, 0)))), int(ivec2(0 | 0, 1)))), (_GLF_IDENTITY(0 | 0, int(ivec2(0 | 0, _GLF_IDENTITY(1, (false ? _GLF_FUZZED(-37637) : 1)))))))), (false ? _GLF_FUZZED(-96155) : _GLF_IDENTITY(0 | (min((_GLF_IDENTITY(0 | _GLF_IDENTITY(0, max(0, 0)), int(ivec2(0 | 0, 1)))), (_GLF_IDENTITY(0 | 0, int(ivec2(_GLF_IDENTITY(0, int(_GLF_IDENTITY(ivec4(_GLF_IDENTITY(0, (false ? _GLF_FUZZED(_injected_loop_counter) : _GLF_IDENTITY(0, (0) - 0))), 1, 1, 0), (ivec4(_GLF_IDENTITY(0, (false ? _GLF_FUZZED(_injected_loop_counter) : _GLF_IDENTITY(0, (0) - 0))), 1, 1, 0)) | (ivec4(_GLF_IDENTITY(0, (false ? _GLF_FUZZED(_injected_loop_counter) : _GLF_IDENTITY(0, (0) - 0))), 1, 1, 0))))) | 0, 1)))))), (_GLF_IDENTITY(0 | (min((_GLF_IDENTITY(0 | _GLF_IDENTITY(0, int(_GLF_IDENTITY(ivec4(0, 0, 0, 0), max(ivec4(0, 0, 0, 0), ivec4(0, 0, 0, 0))))), int(ivec2(0 | 0, 1)))), _GLF_IDENTITY((_GLF_IDENTITY(0 | 0, int(ivec2(0 | _GLF_IDENTITY(0, (0) | 0), 1)))), ((_GLF_IDENTITY(0 | 0, int(ivec2(0 | _GLF_IDENTITY(0, (0) | 0), 1))))) | ((_GLF_IDENTITY(0 | 0, int(ivec2(0 | _GLF_IDENTITY(0, (0) | 0), 1)))))))), (0 | (min((_GLF_IDENTITY(0 | 0, int(ivec2(0 | 0, 1)))), (_GLF_IDENTITY(0 | 0, int(ivec2(0 | 0, 1))))))) ^ 0)) - 0))))))))), _GLF_TRUE(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), false || (! (true))))), (_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(_GLF_IDENTITY(mat4x2(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), 1.0, 0.0, 1.0, 1.0, determinant(mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0)), determinant(mat4(1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, log(1.0), 1.0, 0.0, 0.0, 0.0, 0.0, 1.0))), mat2(1.0) * (mat4x2(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), 1.0, 0.0, 1.0, 1.0, determinant(mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0)), determinant(mat4(1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, log(1.0), 1.0, 0.0, 0.0, 0.0, 0.0, 1.0)))))), (true ? _GLF_IDENTITY(vec2(_GLF_IDENTITY(mat4x2(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), 1.0, 0.0, 1.0, 1.0, determinant(mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0)), determinant(mat4(1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, log(1.0), 1.0, 0.0, 0.0, 0.0, 0.0, 1.0))), mat2(1.0) * (mat4x2(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), 1.0, 0.0, 1.0, 1.0, determinant(mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0)), determinant(mat4(1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, log(1.0), 1.0, 0.0, 0.0, 0.0, 0.0, 1.0)))))), (true ? vec2(_GLF_IDENTITY(mat4x2(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), 1.0, 0.0, 1.0, 1.0, determinant(mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0)), determinant(mat4(1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, log(1.0), 1.0, 0.0, 0.0, 0.0, 0.0, 1.0))), mat2(1.0) * (mat4x2(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), 1.0, 0.0, 1.0, 1.0, determinant(mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0)), determinant(mat4(1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, log(1.0), 1.0, 0.0, 0.0, 0.0, 0.0, 1.0)))))) : _GLF_FUZZED(vec2(450.247, -37.56)))) : _GLF_FUZZED(injectionSwitch)))), mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-40.38)), vec2(_GLF_FUZZED(869.474), (injectionSwitch)[1]), bvec2(false, _GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec4(true, true, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), ! (! (bool(bvec4(true, true, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))))), clamp(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-40.38)), vec2(_GLF_FUZZED(869.474), (injectionSwitch)[1]), bvec2(false, true))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-40.38)), vec2(_GLF_FUZZED(869.474), _GLF_IDENTITY((injectionSwitch), vec2(mat2x4(_GLF_IDENTITY((injectionSwitch), clamp((injectionSwitch), _GLF_IDENTITY((injectionSwitch), min((injectionSwitch), (injectionSwitch))), _GLF_IDENTITY((injectionSwitch), mix(vec2(_GLF_FUZZED(20.95), ((injectionSwitch))[1]), vec2(((injectionSwitch))[0], _GLF_FUZZED(-191.556)), bvec2(true, false))))), 1.0, 1.0, 0.0, 0.0, 0.0, determinant(mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0)))))[1]), bvec2(false, true))), max(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-40.38)), vec2(_GLF_FUZZED(869.474), (injectionSwitch)[1]), bvec2(false, true))), _GLF_IDENTITY(injectionSwitch, mix(_GLF_IDENTITY(vec2((injectionSwitch)[0], _GLF_FUZZED(-40.38)), max(vec2((injectionSwitch)[0], _GLF_FUZZED(-40.38)), vec2((injectionSwitch)[0], _GLF_FUZZED(-40.38)))), vec2(_GLF_FUZZED(869.474), (injectionSwitch)[1]), bvec2(false, true))))), _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-40.38)), vec2(_GLF_FUZZED(869.474), (injectionSwitch)[1]), bvec2(false, true))))), max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-40.38)), vec2(_GLF_FUZZED(869.474), (injectionSwitch)[1]), bvec2(false, _GLF_IDENTITY(true, bool(bvec4(true, true, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))), clamp(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-40.38)), vec2(_GLF_FUZZED(869.474), (injectionSwitch)[1]), bvec2(false, true))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-40.38)), vec2(_GLF_FUZZED(869.474), _GLF_IDENTITY((injectionSwitch), vec2(mat2x4(_GLF_IDENTITY((injectionSwitch), clamp((injectionSwitch), _GLF_IDENTITY((injectionSwitch), min((_GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-4.9), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(8279.0524)), bvec2(true, false))) : _GLF_FUZZED(vec2(279.824, 9713.8148))))), (injectionSwitch))), _GLF_IDENTITY((injectionSwitch), mix(vec2(_GLF_FUZZED(20.95), ((injectionSwitch))[1]), vec2(((injectionSwitch))[0], _GLF_FUZZED(-191.556)), bvec2(true, false))))), 1.0, 1.0, 0.0, 0.0, 0.0, determinant(mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0)))))[1]), bvec2(false, true))), max(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-40.38)), vec2(_GLF_FUZZED(869.474), (injectionSwitch)[1]), bvec2(false, true))), _GLF_IDENTITY(injectionSwitch, mix(_GLF_IDENTITY(vec2((injectionSwitch)[0], _GLF_FUZZED(-40.38)), max(vec2((injectionSwitch)[0], _GLF_FUZZED(-40.38)), vec2((injectionSwitch)[0], _GLF_FUZZED(-40.38)))), vec2(_GLF_FUZZED(869.474), (injectionSwitch)[1]), bvec2(false, true))))), _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-40.38)), vec2(_GLF_FUZZED(869.474), (injectionSwitch)[1]), bvec2(false, true))))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-40.38)), vec2(_GLF_FUZZED(869.474), (injectionSwitch)[1]), bvec2(false, _GLF_IDENTITY(true, bool(bvec4(true, true, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))), clamp(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-40.38)), vec2(_GLF_FUZZED(869.474), (injectionSwitch)[1]), bvec2(false, true))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-40.38)), vec2(_GLF_FUZZED(869.474), _GLF_IDENTITY((injectionSwitch), vec2(mat2x4(_GLF_IDENTITY((injectionSwitch), clamp((injectionSwitch), _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch), min((injectionSwitch), (injectionSwitch))), (true ? _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, vec2(mat3(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)), 1.0, 0.0, 1.0, 0.0, tan(0.0), _GLF_IDENTITY(dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, 0.0, 0.0, 1.0)), dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, 0.0, 0.0, 1.0))), 0.0)))), min((injectionSwitch), (injectionSwitch))) : _GLF_FUZZED(exp(injectionSwitch)))), _GLF_IDENTITY((injectionSwitch), mix(vec2(_GLF_FUZZED(20.95), ((injectionSwitch))[1]), vec2(((injectionSwitch))[0], _GLF_FUZZED(-191.556)), bvec2(true, false))))), 1.0, 1.0, 0.0, 0.0, 0.0, determinant(mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(1.0, max(1.0, _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)))), 0.0, 0.0, 1.0, 0.0, 1.0, 0.0)))))[1]), bvec2(false, true))), max(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-40.38)), vec2(_GLF_FUZZED(869.474), (injectionSwitch)[1]), bvec2(false, true))), _GLF_IDENTITY(injectionSwitch, mix(_GLF_IDENTITY(vec2((injectionSwitch)[0], _GLF_FUZZED(-40.38)), max(vec2((injectionSwitch)[0], _GLF_FUZZED(-40.38)), vec2((injectionSwitch)[0], _GLF_FUZZED(-40.38)))), vec2(_GLF_FUZZED(869.474), (injectionSwitch)[1]), bvec2(false, true))))), _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-40.38)), vec2(_GLF_FUZZED(869.474), (injectionSwitch)[1]), bvec2(false, true))))))))), injectionSwitch, injectionSwitch)).x < injectionSwitch.y)), false), true)), bvec3(bvec3(bvec3(bvec4(bvec3(_GLF_IDENTITY(_injected_loop_counter != _GLF_IDENTITY((_GLF_IDENTITY(0 | 0, max(0 | 0, 0 | 0))), (false ? _GLF_FUZZED(_injected_loop_counter) : _GLF_IDENTITY((_GLF_IDENTITY(0 | 0, int(ivec2(0 | 0, 1)))), min((_GLF_IDENTITY(0 | 0, int(ivec2(0 | 0, 1)))), (_GLF_IDENTITY(0 | 0, int(ivec2(_GLF_IDENTITY(0, max(0, 0)) | 0, 1)))))))), true && (_injected_loop_counter != _GLF_IDENTITY((_GLF_IDENTITY(0 | 0, max(0 | 0, 0 | _GLF_IDENTITY(0, (_GLF_IDENTITY(0, min(0, 0))) * 1)))), (false ? _GLF_FUZZED(_GLF_IDENTITY(_injected_loop_counter, (_injected_loop_counter) + 0)) : _GLF_IDENTITY((_GLF_IDENTITY(0 | 0, int(ivec2(0 | 0, _GLF_IDENTITY(1, int(int(1))))))), min((_GLF_IDENTITY(0 | 0, int(ivec2(0 | 0, 1)))), (_GLF_IDENTITY(0 | 0, int(ivec2(0 | 0, 1)))))))))), _GLF_IDENTITY(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), injectionSwitch)), (true ? _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat4(injectionSwitch, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(0.0, (0.0) - 0.0), _GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(determinant(mat4(1.0, -1037.6649, 77.59, -303.223, 635.360, -6.8, 1646.1461, 5.0, -2814.7035, -369.263, 79.95, -9.0, -16.24, 2.1, -4.2, -2086.9990))))), sqrt(0.0), 1.0, 0.0, 0.0), (false ? _GLF_FUZZED(mat4(-87.09, 71.45, 924.993, 959.492, -8.3, -32.35, 4.7, 797.874, 1.0, 47.81, 9.3, -2506.6754, -7583.8249, 116.852, -2.9, 5.8)) : _GLF_IDENTITY(mat4(injectionSwitch, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(0.0, (0.0) - 0.0), _GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(determinant(mat4(1.0, -1037.6649, 77.59, -303.223, 635.360, -6.8, 1646.1461, 5.0, -2814.7035, -369.263, 79.95, -9.0, -16.24, 2.1, -4.2, -2086.9990))))), sqrt(0.0), 1.0, 0.0, 0.0), (false ? _GLF_FUZZED(mat4(-8946.9537, 1027.8423, -5.0, -0.2, 6.5, 6.9, -68.71, 1.3, -1.1, 905.881, -0.7, 9047.3089, 0.1, -2759.1393, 2.2, -0.1)) : mat4(injectionSwitch, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(0.0, (0.0) - 0.0), _GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(determinant(mat4(1.0, -1037.6649, 77.59, -303.223, 635.360, -6.8, 1646.1461, 5.0, -2814.7035, -369.263, 79.95, -9.0, -16.24, 2.1, -4.2, -2086.9990))))), sqrt(0.0), 1.0, 0.0, 0.0))))))) : _GLF_FUZZED(cosh(injectionSwitch)))))[0], _GLF_FUZZED(-40.38)), vec2(_GLF_FUZZED(869.474), (injectionSwitch)[1]), bvec2(false, true))), _GLF_IDENTITY(clamp(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-40.38)), vec2(_GLF_FUZZED(869.474), (injectionSwitch)[1]), bvec2(false, true))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-40.38)), vec2(_GLF_FUZZED(869.474), (injectionSwitch)[1]), bvec2(false, true))), max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-40.38)), vec2(_GLF_FUZZED(869.474), (injectionSwitch)[1]), bvec2(false, true))), clamp(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-40.38)), vec2(_GLF_FUZZED(869.474), (injectionSwitch)[1]), bvec2(false, true))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-40.38)), vec2(_GLF_FUZZED(869.474), (injectionSwitch)[1]), bvec2(false, true))), max(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-40.38)), vec2(_GLF_FUZZED(869.474), (injectionSwitch)[1]), bvec2(false, true))), _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-40.38)), vec2(_GLF_FUZZED(869.474), (injectionSwitch)[1]), bvec2(false, true)), (_GLF_IDENTITY(mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-40.38)), vec2(_GLF_FUZZED(869.474), (injectionSwitch)[1]), bvec2(false, true)), (mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-40.38)), vec2(_GLF_FUZZED(869.474), (injectionSwitch)[1]), bvec2(false, true))) + vec2(0.0, 0.0))) + vec2(0.0, 0.0))))), _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-40.38)), vec2(_GLF_FUZZED(869.474), (injectionSwitch)[1]), bvec2(false, true))))), _GLF_IDENTITY(injectionSwitch, mix(vec2((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)))[0], _GLF_FUZZED(-40.38)), _GLF_IDENTITY(vec2(_GLF_FUZZED(869.474), (injectionSwitch)[1]), mix(vec2((vec2(_GLF_FUZZED(869.474), (injectionSwitch)[1]))[_GLF_IDENTITY(0, ~ (~ (0)))], _GLF_FUZZED(-2641.2086)), vec2(_GLF_FUZZED(float(true)), _GLF_IDENTITY((vec2(_GLF_FUZZED(869.474), (injectionSwitch)[1]))[1], (false ? _GLF_FUZZED(7.3) : (vec2(_GLF_FUZZED(869.474), (injectionSwitch)[1]))[1]))), bvec2(false, true))), bvec2(false, true))))), _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-40.38)), vec2(_GLF_FUZZED(869.474), (injectionSwitch)[1]), bvec2(false, true)))), vec2(0.0, 0.0) + (clamp(_GLF_IDENTITY(injectionSwitch, mix(_GLF_IDENTITY(vec2((injectionSwitch)[0], _GLF_FUZZED(-40.38)), clamp(vec2((injectionSwitch)[0], _GLF_FUZZED(-40.38)), vec2((injectionSwitch)[0], _GLF_FUZZED(-40.38)), _GLF_IDENTITY(vec2((injectionSwitch)[0], _GLF_FUZZED(-40.38)), clamp(vec2((injectionSwitch)[0], _GLF_FUZZED(-40.38)), _GLF_IDENTITY(vec2((injectionSwitch)[0], _GLF_FUZZED(-40.38)), min(vec2((injectionSwitch)[0], _GLF_FUZZED(-40.38)), vec2((injectionSwitch)[0], _GLF_FUZZED(-40.38)))), vec2((injectionSwitch)[0], _GLF_FUZZED(-40.38)))))), vec2(_GLF_FUZZED(869.474), _GLF_IDENTITY((injectionSwitch), max(_GLF_IDENTITY((injectionSwitch), ((injectionSwitch)) - vec2(0.0, 0.0)), (injectionSwitch)))[1]), bvec2(false, true))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-40.38)), vec2(_GLF_FUZZED(869.474), _GLF_IDENTITY((injectionSwitch), vec2(1.0, 1.0) * ((injectionSwitch)))[1]), bvec2(false, true))), max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-40.38)), vec2(_GLF_FUZZED(869.474), (injectionSwitch)[1]), bvec2(false, true))), clamp(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(_GLF_IDENTITY(-40.38, float(vec3(_GLF_IDENTITY(-40.38, 0.0 + (-40.38)), 0.0, 0.0))))), vec2(_GLF_FUZZED(869.474), (injectionSwitch)[1]), bvec2(false, true))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(_GLF_IDENTITY(vec2(_GLF_IDENTITY((injectionSwitch), ((injectionSwitch)) / vec2(1.0, 1.0))[0], _GLF_FUZZED(-40.38)), max(vec2(_GLF_IDENTITY((injectionSwitch), ((injectionSwitch)) / vec2(1.0, 1.0))[0], _GLF_FUZZED(-40.38)), vec2(_GLF_IDENTITY((injectionSwitch), ((injectionSwitch)) / vec2(1.0, 1.0))[0], _GLF_FUZZED(-40.38)))), vec2(_GLF_FUZZED(869.474), (injectionSwitch)[1]), bvec2(false, true))), max(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-40.38)), vec2(_GLF_FUZZED(869.474), (injectionSwitch)[1]), bvec2(false, true))), _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(_GLF_IDENTITY(-40.38, (false ? _GLF_FUZZED(18.23) : -40.38)))), vec2(_GLF_FUZZED(869.474), (injectionSwitch)[1]), bvec2(false, true))))), _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-40.38)), vec2(_GLF_FUZZED(869.474), _GLF_IDENTITY((injectionSwitch), vec2(mat4((injectionSwitch), 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, 1.0), vec4(1.0, 1.0, 0.0, 0.0)), dot(vec4(0.0, 0.0, 1.0, 1.0), vec4(1.0, 1.0, 0.0, 0.0))), 0.0, 1.0, 1.0, 0.0, 1.0)))[1]), bvec2(false, true))))), _GLF_IDENTITY(injectionSwitch, mix(vec2((_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))))[0], _GLF_FUZZED(-40.38)), _GLF_IDENTITY(vec2(_GLF_FUZZED(869.474), (injectionSwitch)[1]), mix(vec2((vec2(_GLF_FUZZED(869.474), (injectionSwitch)[1]))[0], _GLF_FUZZED(-2641.2086)), vec2(_GLF_FUZZED(float(true)), (vec2(_GLF_FUZZED(869.474), (injectionSwitch)[1]))[1]), bvec2(false, true))), bvec2(false, true))))), _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-40.38)), vec2(_GLF_FUZZED(869.474), (injectionSwitch)[1]), bvec2(false, true))))))))), injectionSwitch, injectionSwitch)).x < injectionSwitch.y)), bool(bvec2(_GLF_IDENTITY(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2((_GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, vec2(mat4(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(0.0, (0.0) - 0.0), 1.0, sqrt(0.0), 1.0, 0.0, 0.0))) : _GLF_FUZZED(cosh(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), injectionSwitch)))))))[0], _GLF_FUZZED(-40.38)), vec2(_GLF_FUZZED(869.474), (injectionSwitch)[1]), bvec2(false, true))), _GLF_IDENTITY(clamp(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-40.38)), vec2(_GLF_FUZZED(869.474), (injectionSwitch)[1]), bvec2(false, true))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-40.38)), vec2(_GLF_FUZZED(869.474), (injectionSwitch)[1]), bvec2(false, true))), max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-40.38)), vec2(_GLF_FUZZED(869.474), (injectionSwitch)[1]), bvec2(false, true))), clamp(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-40.38)), vec2(_GLF_FUZZED(869.474), (injectionSwitch)[1]), bvec2(false, true))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-40.38)), vec2(_GLF_FUZZED(869.474), (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)))[1]), bvec2(false, true))), max(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-40.38)), vec2(_GLF_FUZZED(869.474), (injectionSwitch)[1]), bvec2(false, true))), _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-40.38)), vec2(_GLF_FUZZED(869.474), (injectionSwitch)[1]), bvec2(false, true))))), _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-40.38)), vec2(_GLF_FUZZED(869.474), (injectionSwitch)[1]), bvec2(false, true))))), _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-40.38)), _GLF_IDENTITY(vec2(_GLF_FUZZED(869.474), (injectionSwitch)[1]), mix(vec2((vec2(_GLF_FUZZED(869.474), (injectionSwitch)[1]))[0], _GLF_FUZZED(-2641.2086)), vec2(_GLF_FUZZED(float(true)), (vec2(_GLF_FUZZED(869.474), (injectionSwitch)[1]))[1]), bvec2(_GLF_IDENTITY(false, (false) || false), true))), bvec2(false, true))))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(mix(injectionSwitch, vec2(0.6, -1.8), 0.3)))), mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-40.38)), vec2(_GLF_FUZZED(869.474), (injectionSwitch)[1]), bvec2(false, true)))), vec2(0.0, 0.0) + (clamp(_GLF_IDENTITY(injectionSwitch, mix(_GLF_IDENTITY(vec2((injectionSwitch)[0], _GLF_FUZZED(-40.38)), clamp(vec2((injectionSwitch)[0], _GLF_FUZZED(-40.38)), vec2((injectionSwitch)[0], _GLF_FUZZED(-40.38)), _GLF_IDENTITY(vec2((injectionSwitch)[0], _GLF_FUZZED(-40.38)), clamp(vec2((injectionSwitch)[0], _GLF_FUZZED(-40.38)), _GLF_IDENTITY(vec2((injectionSwitch)[0], _GLF_FUZZED(-40.38)), min(vec2((injectionSwitch)[0], _GLF_FUZZED(-40.38)), vec2((injectionSwitch)[0], _GLF_FUZZED(-40.38)))), vec2((injectionSwitch)[0], _GLF_FUZZED(-40.38)))))), vec2(_GLF_FUZZED(869.474), (injectionSwitch)[1]), bvec2(false, true))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-40.38)), vec2(_GLF_FUZZED(869.474), _GLF_IDENTITY((injectionSwitch), vec2(1.0, 1.0) * ((injectionSwitch)))[_GLF_IDENTITY(1, (1) << int(_GLF_ZERO(0.0, injectionSwitch.x)))]), bvec2(false, true))), max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)))[0], _GLF_FUZZED(-40.38)), vec2(_GLF_FUZZED(869.474), (injectionSwitch)[1]), bvec2(false, true))), clamp(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-40.38)), vec2(_GLF_FUZZED(869.474), (injectionSwitch)[1]), bvec2(false, true))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-40.38)), vec2(_GLF_FUZZED(869.474), (injectionSwitch)[1]), bvec2(false, true))), max(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-40.38)), vec2(_GLF_FUZZED(869.474), (injectionSwitch)[1]), bvec2(false, true))), _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(_GLF_IDENTITY(-40.38, (false ? _GLF_FUZZED(18.23) : -40.38)))), vec2(_GLF_FUZZED(869.474), (injectionSwitch)[1]), bvec2(false, true))))), min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-40.38)), vec2(_GLF_FUZZED(869.474), (injectionSwitch)[1]), bvec2(false, true))), max(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-40.38)), vec2(_GLF_FUZZED(869.474), (injectionSwitch)[1]), bvec2(false, true))), _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(_GLF_IDENTITY(-40.38, (false ? _GLF_FUZZED(18.23) : -40.38)))), vec2(_GLF_FUZZED(869.474), (injectionSwitch)[1]), bvec2(false, true))))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-40.38)), vec2(_GLF_FUZZED(869.474), (injectionSwitch)[1]), bvec2(false, true))), max(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-40.38)), vec2(_GLF_FUZZED(869.474), (injectionSwitch)[1]), bvec2(false, true))), _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(_GLF_IDENTITY(-40.38, (false ? _GLF_FUZZED(18.23) : -40.38)))), vec2(_GLF_FUZZED(869.474), (injectionSwitch)[1]), bvec2(false, true))))))), _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-40.38)), vec2(_GLF_FUZZED(869.474), (injectionSwitch)[1]), bvec2(false, true))))), _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-40.38)), _GLF_IDENTITY(vec2(_GLF_FUZZED(869.474), (injectionSwitch)[1]), mix(vec2((vec2(_GLF_FUZZED(869.474), (injectionSwitch)[1]))[0], _GLF_FUZZED(-2641.2086)), vec2(_GLF_FUZZED(float(true)), (vec2(_GLF_FUZZED(869.474), (injectionSwitch)[1]))[1]), bvec2(false, true))), bvec2(false, true))))), _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-40.38)), vec2(_GLF_FUZZED(869.474), (injectionSwitch)[1]), bvec2(false, true))))))))), injectionSwitch, injectionSwitch)).x < injectionSwitch.y)), ! (! (_GLF_TRUE(true, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2((_GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, vec2(mat4(injectionSwitch, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(0.0, (0.0) - 0.0), 1.0, sqrt(0.0), 1.0, 0.0, 0.0))) : _GLF_FUZZED(cosh(injectionSwitch)))))[0], _GLF_FUZZED(-40.38)), vec2(_GLF_FUZZED(869.474), (injectionSwitch)[1]), bvec2(false, true))), _GLF_IDENTITY(clamp(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-40.38)), vec2(_GLF_FUZZED(869.474), (injectionSwitch)[1]), bvec2(false, true))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-40.38)), vec2(_GLF_FUZZED(869.474), (injectionSwitch)[1]), bvec2(false, true))), max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-40.38)), vec2(_GLF_FUZZED(869.474), (injectionSwitch)[1]), bvec2(false, true))), clamp(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-40.38)), vec2(_GLF_FUZZED(869.474), (injectionSwitch)[1]), bvec2(false, true))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-40.38)), vec2(_GLF_FUZZED(869.474), (injectionSwitch)[1]), bvec2(false, true))), max(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-40.38)), vec2(_GLF_FUZZED(869.474), (injectionSwitch)[1]), bvec2(false, true))), _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-40.38)), vec2(_GLF_FUZZED(869.474), (injectionSwitch)[1]), bvec2(false, true))))), _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-40.38)), vec2(_GLF_FUZZED(869.474), (injectionSwitch)[1]), bvec2(false, true))))), _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-40.38)), _GLF_IDENTITY(vec2(_GLF_FUZZED(869.474), (injectionSwitch)[1]), mix(vec2((vec2(_GLF_FUZZED(869.474), (injectionSwitch)[1]))[0], _GLF_FUZZED(-2641.2086)), vec2(_GLF_FUZZED(float(true)), (vec2(_GLF_FUZZED(869.474), (injectionSwitch)[1]))[1]), bvec2(false, true))), bvec2(false, true))))), _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-40.38)), vec2(_GLF_FUZZED(869.474), (injectionSwitch)[1]), bvec2(false, true)))), vec2(0.0, 0.0) + (clamp(_GLF_IDENTITY(injectionSwitch, mix(_GLF_IDENTITY(vec2((injectionSwitch)[0], _GLF_FUZZED(-40.38)), clamp(vec2((injectionSwitch)[0], _GLF_FUZZED(-40.38)), vec2((injectionSwitch)[0], _GLF_FUZZED(-40.38)), _GLF_IDENTITY(vec2((injectionSwitch)[0], _GLF_FUZZED(-40.38)), clamp(vec2((injectionSwitch)[0], _GLF_FUZZED(-40.38)), _GLF_IDENTITY(vec2((injectionSwitch)[0], _GLF_FUZZED(-40.38)), min(vec2((injectionSwitch)[0], _GLF_FUZZED(-40.38)), vec2((injectionSwitch)[0], _GLF_FUZZED(-40.38)))), vec2((injectionSwitch)[0], _GLF_FUZZED(-40.38)))))), vec2(_GLF_FUZZED(869.474), (injectionSwitch)[1]), bvec2(false, true))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-40.38)), vec2(_GLF_FUZZED(869.474), _GLF_IDENTITY((injectionSwitch), vec2(1.0, 1.0) * ((injectionSwitch)))[1]), bvec2(false, true))), max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-40.38)), vec2(_GLF_FUZZED(869.474), (injectionSwitch)[1]), bvec2(false, true))), clamp(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-40.38)), vec2(_GLF_FUZZED(869.474), (injectionSwitch)[1]), bvec2(false, true))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-40.38)), vec2(_GLF_FUZZED(869.474), (injectionSwitch)[1]), bvec2(false, true))), max(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-40.38)), vec2(_GLF_FUZZED(869.474), (injectionSwitch)[1]), bvec2(false, true))), _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(_GLF_IDENTITY(-40.38, (false ? _GLF_FUZZED(18.23) : -40.38)))), vec2(_GLF_FUZZED(869.474), (injectionSwitch)[1]), bvec2(false, true))))), _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-40.38)), vec2(_GLF_FUZZED(869.474), (injectionSwitch)[1]), bvec2(false, true))))), _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-40.38)), _GLF_IDENTITY(vec2(_GLF_FUZZED(869.474), (injectionSwitch)[1]), mix(vec2((vec2(_GLF_FUZZED(869.474), (injectionSwitch)[1]))[0], _GLF_FUZZED(-2641.2086)), vec2(_GLF_FUZZED(float(true)), (vec2(_GLF_FUZZED(869.474), (injectionSwitch)[1]))[1]), bvec2(false, true))), bvec2(false, true))))), _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-40.38)), vec2(_GLF_FUZZED(869.474), (injectionSwitch)[1]), bvec2(false, true))))))))), injectionSwitch, injectionSwitch)), (_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2((_GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, vec2(mat4(injectionSwitch, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(0.0, (0.0) - 0.0), 1.0, sqrt(0.0), 1.0, 0.0, 0.0))) : _GLF_FUZZED(cosh(injectionSwitch)))))[0], _GLF_FUZZED(-40.38)), vec2(_GLF_FUZZED(869.474), (injectionSwitch)[1]), bvec2(false, true))), _GLF_IDENTITY(clamp(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-40.38)), vec2(_GLF_FUZZED(869.474), (injectionSwitch)[1]), bvec2(false, true))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-40.38)), vec2(_GLF_FUZZED(869.474), (injectionSwitch)[1]), bvec2(false, true))), max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-40.38)), vec2(_GLF_FUZZED(869.474), (injectionSwitch)[1]), bvec2(false, true))), clamp(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-40.38)), vec2(_GLF_FUZZED(869.474), (injectionSwitch)[1]), bvec2(false, true))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-40.38)), vec2(_GLF_FUZZED(869.474), (injectionSwitch)[1]), bvec2(false, true))), max(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-40.38)), vec2(_GLF_FUZZED(869.474), (injectionSwitch)[1]), bvec2(false, true))), _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-40.38)), vec2(_GLF_FUZZED(869.474), (injectionSwitch)[1]), bvec2(false, true))))), _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-40.38)), vec2(_GLF_FUZZED(869.474), (injectionSwitch)[1]), bvec2(_GLF_IDENTITY(false, (false) && true), true))))), _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-40.38)), _GLF_IDENTITY(vec2(_GLF_FUZZED(869.474), (injectionSwitch)[1]), mix(vec2((vec2(_GLF_FUZZED(869.474), (injectionSwitch)[1]))[0], _GLF_FUZZED(-2641.2086)), vec2(_GLF_FUZZED(float(true)), (vec2(_GLF_FUZZED(869.474), (injectionSwitch)[1]))[1]), bvec2(false, true))), bvec2(false, true))))), _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-40.38)), vec2(_GLF_FUZZED(869.474), (injectionSwitch)[1]), bvec2(false, true)))), vec2(0.0, 0.0) + (clamp(_GLF_IDENTITY(injectionSwitch, mix(_GLF_IDENTITY(vec2((injectionSwitch)[0], _GLF_FUZZED(-40.38)), clamp(vec2((injectionSwitch)[0], _GLF_FUZZED(-40.38)), vec2((injectionSwitch)[0], _GLF_FUZZED(-40.38)), _GLF_IDENTITY(vec2((injectionSwitch)[0], _GLF_FUZZED(-40.38)), clamp(vec2((injectionSwitch)[_GLF_IDENTITY(0, max(0, _GLF_IDENTITY(0, (0) | (0))))], _GLF_FUZZED(-40.38)), _GLF_IDENTITY(vec2((injectionSwitch)[0], _GLF_FUZZED(-40.38)), min(vec2((injectionSwitch)[0], _GLF_FUZZED(-40.38)), vec2((injectionSwitch)[0], _GLF_FUZZED(-40.38)))), vec2((injectionSwitch)[0], _GLF_FUZZED(-40.38)))))), vec2(_GLF_FUZZED(869.474), (injectionSwitch)[1]), bvec2(false, true))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-40.38)), vec2(_GLF_FUZZED(869.474), _GLF_IDENTITY((injectionSwitch), vec2(1.0, 1.0) * ((injectionSwitch)))[1]), bvec2(false, true))), max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-40.38)), vec2(_GLF_FUZZED(869.474), (injectionSwitch)[1]), bvec2(false, true))), clamp(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-40.38)), vec2(_GLF_FUZZED(869.474), (injectionSwitch)[1]), bvec2(false, true))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-40.38)), vec2(_GLF_FUZZED(869.474), (injectionSwitch)[1]), bvec2(false, true))), max(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-40.38)), vec2(_GLF_FUZZED(869.474), (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)))[1]), bvec2(false, true))), _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(_GLF_IDENTITY(-40.38, (false ? _GLF_FUZZED(18.23) : -40.38)))), vec2(_GLF_FUZZED(869.474), (injectionSwitch)[1]), bvec2(false, true))))), _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-40.38)), vec2(_GLF_FUZZED(869.474), (injectionSwitch)[1]), bvec2(false, true))))), _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-40.38)), _GLF_IDENTITY(vec2(_GLF_FUZZED(869.474), (injectionSwitch)[1]), mix(vec2((vec2(_GLF_FUZZED(869.474), (injectionSwitch)[1]))[0], _GLF_FUZZED(-2641.2086)), vec2(_GLF_FUZZED(float(true)), (vec2(_GLF_FUZZED(869.474), (injectionSwitch)[1]))[1]), bvec2(false, true))), bvec2(false, true))))), _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-40.38)), vec2(_GLF_FUZZED(869.474), (injectionSwitch)[1]), bvec2(false, true))))))))), injectionSwitch, injectionSwitch))) - vec2(0.0, 0.0)).x < injectionSwitch.y))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), false), true))))))))); _injected_loop_counter --)
      {
       if(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), true && (! (_GLF_DEAD(false)))))))
        {
         do
          {
           if(_GLF_WRAPPED_IF_TRUE(true))
            {
             return;
            }
           else
            {
            }
          }
         while(_GLF_WRAPPED_LOOP(false));
        }
      }
    }
   do
    {
     for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > int(_GLF_ZERO(0.0, injectionSwitch.x))); _injected_loop_counter --)
      {
       do
        {
         for(int _injected_loop_counter = int(_GLF_ZERO(0.0, injectionSwitch.x)); _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
          {
           do
            {
             if(_GLF_WRAPPED_IF_TRUE(true))
              {
               do
                {
                 do
                  {
                   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, true && (false))))), ! (_GLF_IDENTITY(! (false), (! (false)) || false)))))
                    {
                     if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))).y))))
                      {
                       if(_GLF_DEAD(false))
                        continue;
                       if(_GLF_DEAD(false))
                        continue;
                      }
                     else
                      {
                       do
                        {
                         if(_GLF_DEAD(false))
                          {
                           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                            {
                             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                              break;
                             break;
                            }
                           continue;
                           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                            return;
                          }
                         return;
                         if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
                          {
                           if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
                            {
                             if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
                              {
                               if(_GLF_WRAPPED_IF_TRUE(true))
                                {
                                 do
                                  {
                                   if(_GLF_WRAPPED_IF_TRUE(true))
                                    {
                                     do
                                      {
                                       if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
                                        {
                                         if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
                                          {
                                          }
                                         else
                                          {
                                           return;
                                          }
                                        }
                                      }
                                     while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
                                    }
                                   else
                                    {
                                    }
                                  }
                                 while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, bool(bool(false)))));
                                }
                               else
                                {
                                }
                              }
                             else
                              {
                              }
                            }
                           else
                            {
                             do
                              {
                               if(_GLF_WRAPPED_IF_TRUE(true))
                                {
                                 if(_GLF_DEAD(false))
                                  {
                                   do
                                    {
                                     if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), ! (! (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))
                                      {
                                       return;
                                      }
                                     else
                                      {
                                      }
                                    }
                                   while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, false || (false))));
                                  }
                                }
                               else
                                {
                                }
                              }
                             while(_GLF_WRAPPED_LOOP(false));
                             if(_GLF_DEAD(false))
                              {
                               do
                                {
                                 return;
                                }
                               while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
                              }
                            }
                          }
                         else
                          {
                          }
                         if(_GLF_DEAD(false))
                          break;
                        }
                       while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), _GLF_IDENTITY(true, (_GLF_IDENTITY(true, bool(bvec2(_GLF_IDENTITY(true, _GLF_IDENTITY((_GLF_IDENTITY(true, ! (! (true)))) && true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || ((_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, bool(bvec4(true, false, false, false))))))) && true))), _GLF_IDENTITY(true, ! (! (true))))))) && true) && (_GLF_IDENTITY(false, true && _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(false, ! (! (false)))), _GLF_IDENTITY(bool(bvec4((false), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)), (bool(bvec4((false), false, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(vec3(injectionSwitch.x, 0.0, 1.0)), clamp(float(vec3(injectionSwitch.x, 0.0, 1.0)), float(vec3(injectionSwitch.x, 0.0, 1.0)), float(vec3(injectionSwitch.x, 0.0, 1.0))))), _GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)))) < injectionSwitch.y))))), false))) || _GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec3(false, false, false)))) || false))), false || (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (! (false)))))), _GLF_IDENTITY(bool(bvec4((false), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)), (bool(bvec4((false), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))) || _GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec3(false, false, _GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(false, true && (false)), false)), true && (_GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(false, true && (false)), false)), bool(bvec3(bool(bvec2(_GLF_IDENTITY(false, true && (false)), false)), false, false)))))))))) || false))), (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), ! (! (false)))), _GLF_IDENTITY(bool(bvec4((false), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)), (bool(bvec4((false), false, _GLF_TRUE(true, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, vec2(mat2(injectionSwitch, exp(0.0), 0.0))).x < injectionSwitch.y), bool(_GLF_IDENTITY(bvec2((_GLF_IDENTITY(injectionSwitch, vec2(mat2(injectionSwitch, exp(0.0), 0.0))).x < injectionSwitch.y), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bvec2(bvec2(_GLF_IDENTITY(bvec2((_GLF_IDENTITY(injectionSwitch, vec2(mat2(injectionSwitch, exp(0.0), 0.0))).x < injectionSwitch.y), _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(vec3(injectionSwitch, _GLF_ZERO(0.0, injectionSwitch.x)), (vec3(injectionSwitch, _GLF_ZERO(0.0, injectionSwitch.x))) - vec3(0.0, 0.0, 0.0)))).y))), bvec2(bvec2(bvec2((_GLF_IDENTITY(injectionSwitch, vec2(mat2(injectionSwitch, exp(0.0), 0.0))).x < injectionSwitch.y), _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(vec3(injectionSwitch, _GLF_ZERO(0.0, injectionSwitch.x)), (vec3(injectionSwitch, _GLF_ZERO(0.0, injectionSwitch.x))) - vec3(0.0, 0.0, 0.0)))).y)))))))))))), false))) || _GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec3(false, false, false)))) || false))), ! (! (_GLF_IDENTITY((_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), bool(bvec3(_GLF_IDENTITY((! (false)), true && (_GLF_IDENTITY((! (false)), false || ((! (false)))))), false, true))))), _GLF_IDENTITY(bool(bvec4((false), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)), (bool(bvec4((false), _GLF_IDENTITY(false, (false) && true), _GLF_IDENTITY(_GLF_TRUE(_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bool(true)), bool(bool(_GLF_IDENTITY(bool(bool(true)), ! (! (bool(bool(true))))))))), (injectionSwitch.x < injectionSwitch.y)), ! (! (_GLF_TRUE(_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bool(true)), bool(bool(_GLF_IDENTITY(bool(bool(true)), ! (! (bool(bool(true))))))))), (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), mix(vec2(((injectionSwitch) * mat2(1.0))[0], _GLF_FUZZED(-91.27)), vec2(_GLF_FUZZED(7554.5708), ((injectionSwitch) * mat2(1.0))[1]), bvec2(false, true)))).y))))), false))) || _GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, false, _GLF_IDENTITY(false, (false) || false)), bvec3(_GLF_IDENTITY(bvec3(bvec3(false, false, _GLF_IDENTITY(false, (false) || false))), bvec3(bvec4(bvec3(bvec3(false, false, _GLF_IDENTITY(false, (false) || false))), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(vec4(injectionSwitch.x, 0.0, 0.0, 1.0)), (float(vec4(injectionSwitch.x, 0.0, 0.0, 1.0))) + 0.0)) < injectionSwitch.y)))))))))) || false))))))) && true))), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY((_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), true && (_GLF_IDENTITY((! (false)), bool(bvec2((! (false)), true))))))), _GLF_IDENTITY(bool(bvec4((false), false, _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), injectionSwitch)).y)), false)), (bool(bvec4((false), false, _GLF_TRUE(_GLF_IDENTITY(true, _GLF_IDENTITY(true, false || (true)) && (true)), (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, _GLF_ZERO(0.0, injectionSwitch.x) + (injectionSwitch.y)))), false))) || _GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec3(false, false, false)))) || false)))), (bool(_GLF_IDENTITY((_GLF_IDENTITY(false, ! (! (false)))), _GLF_IDENTITY(bool(bvec4((false), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)), (_GLF_IDENTITY(bool(bvec4((false), _GLF_IDENTITY(false, ! (! (false))), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-486.353), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(-4740.7302)), bvec2(true, false))).x < injectionSwitch.y)), false)), (bool(bvec4((false), _GLF_IDENTITY(false, ! (! (false))), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-486.353), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(-4740.7302)), bvec2(true, false))).x < injectionSwitch.y)), false))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || _GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY((_GLF_IDENTITY(false, bool(bvec3(false, false, false)))) || _GLF_IDENTITY(false, bool(bvec4(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, false))), ((_GLF_IDENTITY(false, bool(bvec3(false, false, false)))) || _GLF_IDENTITY(false, bool(bvec4(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, false)))) || false)), (_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY((_GLF_IDENTITY(false, bool(bvec3(false, false, false)))) || _GLF_IDENTITY(false, bool(bvec4(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, false))), ((_GLF_IDENTITY(false, bool(bvec3(false, false, false)))) || _GLF_IDENTITY(false, bool(bvec4(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, false)))) || false)), (_GLF_IDENTITY(false, _GLF_IDENTITY((_GLF_IDENTITY(false, bool(bvec3(false, false, false)))) || _GLF_IDENTITY(false, bool(bvec4(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, false))), ((_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, false, false), bvec3(bvec3(bvec3(false, false, false))))))) || _GLF_IDENTITY(false, bool(bvec4(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, false)))) || false))) || false)) && true))))) && _GLF_IDENTITY(true, (true) || false)))))))));
                      }
                    }
                   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, false, true), bvec3(bvec3(bvec3(false, false, true))))))), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), false || _GLF_IDENTITY(_GLF_IDENTITY((! (_GLF_DEAD(false))), ! (! ((! (_GLF_DEAD(false)))))), true && ((! (_GLF_DEAD(false)))))))))
                    break;
                   if(_GLF_DEAD(false))
                    break;
                  }
                 while(_GLF_WRAPPED_LOOP(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (_GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + 0.0)))));
                }
               while(_GLF_WRAPPED_LOOP(false));
              }
             else
              {
              }
            }
           while(_GLF_WRAPPED_LOOP(false));
          }
        }
       while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, true && (false))));
       if(_GLF_DEAD(false))
        return;
      }
    }
   while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    continue;
  }
 if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && _GLF_IDENTITY(true, false || (true))))))
  {
  }
 else
  {
   for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != int(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), min(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))))); _injected_loop_counter --)
    {
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
      }
     else
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         do
          {
           return;
          }
         while(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(false), ! (! (_GLF_WRAPPED_LOOP(false)))));
        }
      }
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
    return;
  }
 uint workgroup_size = gl_WorkGroupSize.x;
 uint workgroup_id = _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID.x, max(gl_WorkGroupID.x, _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, _GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) / uvec3(_GLF_ONE(1.0, injectionSwitch.y), _GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ZERO(0.0, injectionSwitch.x) + (_GLF_ONE(1.0, injectionSwitch.y))), _GLF_ONE(1.0, injectionSwitch.y)))), max((_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) / uvec3(_GLF_ONE(1.0, injectionSwitch.y), _GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ZERO(0.0, injectionSwitch.x) + (_GLF_ONE(1.0, injectionSwitch.y))), _GLF_ONE(1.0, injectionSwitch.y)))), (_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) / uvec3(_GLF_ONE(1.0, injectionSwitch.y), _GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ZERO(0.0, injectionSwitch.x) + (_GLF_ONE(1.0, injectionSwitch.y))), _GLF_ONE(1.0, injectionSwitch.y)))))) | (gl_WorkGroupID)).x, (true ? gl_WorkGroupID.x : _GLF_IDENTITY(_GLF_FUZZED(subgroup_local_id), max(_GLF_IDENTITY(_GLF_FUZZED(subgroup_local_id), (false ? _GLF_FUZZED(workgroup_size) : _GLF_FUZZED(_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY(uint(uvec3(subgroup_local_id, 1u, (1u & 1u))), (uint(uvec3(subgroup_local_id, 1u, (1u & 1u)))) ^ 0u))))), _GLF_FUZZED(subgroup_local_id))))))), (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID.x, max(gl_WorkGroupID.x, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) | (gl_WorkGroupID)).x, (true ? _GLF_IDENTITY(gl_WorkGroupID.x, min(_GLF_IDENTITY(gl_WorkGroupID.x, ~ (~ (gl_WorkGroupID.x))), gl_WorkGroupID.x)) : _GLF_IDENTITY(_GLF_FUZZED(subgroup_local_id), max(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(subgroup_local_id), (false ? _GLF_FUZZED(workgroup_size) : _GLF_FUZZED(subgroup_local_id))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(subgroup_local_id), (false ? _GLF_FUZZED(workgroup_size) : _GLF_FUZZED(subgroup_local_id))), max(_GLF_IDENTITY(_GLF_FUZZED(subgroup_local_id), (false ? _GLF_FUZZED(workgroup_size) : _GLF_FUZZED(subgroup_local_id))), _GLF_IDENTITY(_GLF_FUZZED(subgroup_local_id), (false ? _GLF_FUZZED(workgroup_size) : _GLF_FUZZED(subgroup_local_id)))))) | 0u), _GLF_FUZZED(subgroup_local_id))))), (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) | (gl_WorkGroupID)).x, (true ? gl_WorkGroupID.x : _GLF_IDENTITY(_GLF_FUZZED(subgroup_local_id), max(_GLF_IDENTITY(_GLF_FUZZED(subgroup_local_id), _GLF_IDENTITY((false ? _GLF_FUZZED(workgroup_size) : _GLF_FUZZED(subgroup_local_id)), max((false ? _GLF_FUZZED(_GLF_IDENTITY(workgroup_size, (workgroup_size) / 1u)) : _GLF_FUZZED(subgroup_local_id)), (false ? _GLF_FUZZED(workgroup_size) : _GLF_FUZZED(subgroup_local_id))))), _GLF_FUZZED(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, max(_GLF_IDENTITY(subgroup_local_id, 0u ^ (subgroup_local_id)), subgroup_local_id)), (subgroup_local_id) ^ (0u | 0u)))))))) / 1u))), (_GLF_IDENTITY(gl_WorkGroupID.x, max(gl_WorkGroupID.x, _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, _GLF_IDENTITY(_GLF_IDENTITY((gl_WorkGroupID) | (gl_WorkGroupID), (false ? _GLF_FUZZED(uvec3(182250u, 151668u, 77423u)) : (gl_WorkGroupID) | (gl_WorkGroupID))), min(_GLF_IDENTITY(_GLF_IDENTITY((gl_WorkGroupID) | (gl_WorkGroupID), (false ? _GLF_FUZZED(uvec3(182250u, 151668u, 77423u)) : (gl_WorkGroupID) | (gl_WorkGroupID))), min(_GLF_IDENTITY((gl_WorkGroupID) | (gl_WorkGroupID), (false ? _GLF_FUZZED(uvec3(182250u, 151668u, 77423u)) : (gl_WorkGroupID) | (gl_WorkGroupID))), _GLF_IDENTITY(_GLF_IDENTITY((gl_WorkGroupID) | (gl_WorkGroupID), (false ? _GLF_FUZZED(uvec3(182250u, 151668u, 77423u)) : _GLF_IDENTITY((gl_WorkGroupID) | (gl_WorkGroupID), (_GLF_IDENTITY((gl_WorkGroupID), min((gl_WorkGroupID), (gl_WorkGroupID))) | (gl_WorkGroupID)) - uvec3(0u, 0u, 0u)))), (_GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupID, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) * uvec3(1u, 1u, 1u))), uvec3(0u, 0u, 0u) ^ (_GLF_IDENTITY(~ (_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) * uvec3(1u, 1u, 1u))), (~ (_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) * uvec3(1u, 1u, 1u)))) | uvec3(0u, 0u, 0u))))))) | (gl_WorkGroupID), (false ? _GLF_FUZZED(uvec3(182250u, 151668u, 77423u)) : (gl_WorkGroupID) | (gl_WorkGroupID)))) - uvec3(0u, 0u, 0u)))), _GLF_IDENTITY((gl_WorkGroupID) | (_GLF_IDENTITY(gl_WorkGroupID, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(uvec3(190246u, 69520u, 45515u)) : gl_WorkGroupID))), (false ? _GLF_FUZZED(uvec3(182250u, 151668u, 77423u)) : (gl_WorkGroupID) | (gl_WorkGroupID)))))).x, (true ? gl_WorkGroupID.x : _GLF_IDENTITY(_GLF_FUZZED(subgroup_local_id), max(_GLF_IDENTITY(_GLF_FUZZED(subgroup_local_id), (false ? _GLF_FUZZED(workgroup_size) : _GLF_FUZZED(subgroup_local_id))), _GLF_FUZZED(subgroup_local_id)))))))) + 0u)) / _GLF_IDENTITY((0u | 1u), max((0u | 1u), (0u | 1u))));
 uint workgroup_base = workgroup_size * _GLF_IDENTITY(workgroup_id, ~ (~ (workgroup_id)));
 uint subgroup_base = subgroup_id * subgroup_size;
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], mix(float(_GLF_FUZZED(8074.1315)), float(injectionSwitch[_GLF_IDENTITY(1, _GLF_IDENTITY(~ (~ (1)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(92712) : ~ (~ (1)))))]), bool(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(23.19) : injectionSwitch.y)), injectionSwitch.y))))))))).x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))).y), false || ((_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], mix(float(_GLF_FUZZED(8074.1315)), float(injectionSwitch[_GLF_IDENTITY(1, _GLF_IDENTITY(~ (~ (1)), (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(4.6)), float(injectionSwitch.x), bool(true)))) - 0.0))) > injectionSwitch.y)) ? _GLF_FUZZED(_GLF_IDENTITY(92712, int(_GLF_IDENTITY(ivec4(_GLF_IDENTITY(92712, int(int(92712))), (1 | 1), 1, 0), max(ivec4(_GLF_IDENTITY(92712, int(int(92712))), (1 | 1), 1, 0), ivec4(_GLF_IDENTITY(92712, int(int(92712))), (1 | 1), 1, 0)))))) : ~ (~ (1)))))]), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))).x > injectionSwitch.y))))))
  {
   for(int _injected_loop_counter = int(_GLF_ONE(1.0, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(9.5)), bool(false))), float(mat3(_GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(9.5)), bool(false))), 0.0, 0.0, 1.0, 0.0, 0.0, tan(0.0), 0.0, 1.0))))); _GLF_WRAPPED_LOOP(_injected_loop_counter != _GLF_IDENTITY((0 ^ _GLF_IDENTITY(0, min(0, 0))), (false ? _GLF_FUZZED(findMSB(_injected_loop_counter)) : (0 ^ _GLF_IDENTITY(_GLF_IDENTITY(0, min(0, 0)), (_GLF_IDENTITY(0, min(0, 0))) >> 0))))); _GLF_IDENTITY(_injected_loop_counter --, (_injected_loop_counter --) << 0))
    {
     if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true && (_GLF_IDENTITY(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-1.4), _GLF_FUZZED(0.0)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))).y) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), ! _GLF_IDENTITY((! (_GLF_TRUE(_GLF_IDENTITY(_GLF_IDENTITY(true, bool(bool(_GLF_IDENTITY(true, (true) && true)))), ! (! (true))), (injectionSwitch.x < injectionSwitch.y)))), bool(bvec4((! (_GLF_TRUE(_GLF_IDENTITY(_GLF_IDENTITY(true, bool(bool(_GLF_IDENTITY(true, (true) && true)))), ! (! (true))), (injectionSwitch.x < injectionSwitch.y)))), false, true, true))))))))
      {
       return;
      }
     else
      {
      }
    }
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
    }
   else
    {
     if(_GLF_WRAPPED_IF_TRUE(true))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         for(int _injected_loop_counter = int(_GLF_ONE(1.0, injectionSwitch.y)); _GLF_WRAPPED_LOOP(_injected_loop_counter > int(_GLF_ZERO(0.0, injectionSwitch.x))); _injected_loop_counter --)
          {
           return;
          }
        }
      }
     else
      {
      }
    }
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), false || (! (false)))))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), bool(bvec4(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), bool(bvec2(_GLF_WRAPPED_IF_FALSE(false), false)))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), false, false, false))))
  {
  }
 else
  {
   if(_GLF_DEAD(false))
    {
     for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
      {
       if(_GLF_DEAD(false))
        return;
      }
     return;
    }
  }
 if(_GLF_WRAPPED_IF_FALSE(false))
  {
   if(_GLF_DEAD(false))
    return;
  }
 else
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x))), float(_GLF_FUZZED(757.141)), bool(false))) > injectionSwitch.y))))
    return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 uint virtual_gid = _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, _GLF_IDENTITY(~ (~ (workgroup_base)), clamp(_GLF_IDENTITY(~ _GLF_IDENTITY((~ (workgroup_base)), (true ? _GLF_IDENTITY((~ (workgroup_base)), clamp((~ (workgroup_base)), _GLF_IDENTITY((~ (workgroup_base)), ((~ (workgroup_base))) | ((~ (workgroup_base)))), (~ (workgroup_base)))) : _GLF_FUZZED(73214u))), clamp(~ (~ (workgroup_base)), ~ (~ (workgroup_base)), ~ (~ (workgroup_base)))), ~ (~ (workgroup_base)), ~ (~ (workgroup_base))))), 0u | (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, _GLF_IDENTITY(~ (~ (_GLF_IDENTITY(workgroup_base, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(workgroup_base, ~ (~ (workgroup_base))) : _GLF_FUZZED(uvec4(185685u, 14211u, 168168u, 44309u).t))))), clamp(_GLF_IDENTITY(~ (~ _GLF_IDENTITY((workgroup_base), (true ? (workgroup_base) : _GLF_FUZZED(num_workgroup)))), clamp(~ (~ (workgroup_base)), ~ (~ (workgroup_base)), ~ (~ (workgroup_base)))), ~ (~ (workgroup_base)), ~ (~ (workgroup_base))))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, _GLF_IDENTITY(~ _GLF_IDENTITY((~ (workgroup_base)), (1u ^ 1u) + ((~ (workgroup_base)))), clamp(_GLF_IDENTITY(~ (~ (workgroup_base)), clamp(~ (~ (workgroup_base)), ~ (~ (workgroup_base)), ~ (~ (workgroup_base)))), ~ (~ (workgroup_base)), ~ (~ (workgroup_base))))), 0u + (_GLF_IDENTITY(workgroup_base, _GLF_IDENTITY(~ (~ (workgroup_base)), clamp(_GLF_IDENTITY(~ (~ (workgroup_base)), clamp(~ (~ (workgroup_base)), ~ (~ (workgroup_base)), ~ (~ (workgroup_base)))), ~ (~ (workgroup_base)), ~ (~ (workgroup_base))))))), _GLF_IDENTITY(workgroup_base, _GLF_IDENTITY(~ (~ (workgroup_base)), clamp(_GLF_IDENTITY(~ (~ (workgroup_base)), clamp(~ (~ (workgroup_base)), ~ (~ (workgroup_base)), ~ (~ (workgroup_base)))), ~ (~ (workgroup_base)), ~ (~ (workgroup_base))))), _GLF_IDENTITY(workgroup_base, _GLF_IDENTITY(~ (~ (workgroup_base)), clamp(_GLF_IDENTITY(~ (~ (workgroup_base)), _GLF_IDENTITY(clamp(~ (~ (workgroup_base)), ~ (~ (workgroup_base)), ~ (~ (workgroup_base))), min(clamp(~ (~ (workgroup_base)), ~ (~ (workgroup_base)), ~ (~ (workgroup_base))), _GLF_IDENTITY(clamp(~ (~ (workgroup_base)), ~ (~ (workgroup_base)), ~ (~ (workgroup_base))), (clamp(~ (~ (workgroup_base)), ~ (~ (workgroup_base)), ~ (~ (workgroup_base)))) | (clamp(~ (~ (workgroup_base)), ~ (~ (workgroup_base)), ~ (~ (workgroup_base)))))))), ~ (_GLF_IDENTITY(~ (workgroup_base), ~ (~ (_GLF_IDENTITY(~ (workgroup_base), (~ (workgroup_base)) | (_GLF_IDENTITY(~ (workgroup_base), (~ _GLF_IDENTITY((workgroup_base), min((workgroup_base), (workgroup_base)))) | (~ (workgroup_base))))))))), ~ (~ (_GLF_IDENTITY(workgroup_base, 0u ^ (workgroup_base))))))))))) + _GLF_IDENTITY(subgroup_base, ~ (~ (subgroup_base))) + _GLF_IDENTITY(subgroup_local_id, 0u ^ (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | 0u), clamp(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | 0u), _GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | 0u), 0u | (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | 0u))), _GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | 0u)))));
 if(_GLF_DEAD(false))
  return;
 uint next_virtual_gid = workgroup_base + subgroup_base + ((_GLF_IDENTITY(subgroup_local_id, clamp(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) << 0u), _GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id) * 1u, ((subgroup_local_id) * 1u) | ((subgroup_local_id) * 1u)), max((subgroup_local_id) * _GLF_IDENTITY(1u, clamp(_GLF_IDENTITY(1u, (1u) | (1u)), 1u, 1u)), (_GLF_IDENTITY(subgroup_local_id, (false ? _GLF_FUZZED(workgroup_id) : subgroup_local_id))) * 1u))), _GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) - 0u))) + 1) % subgroup_size);
 if(_GLF_DEAD(false))
  {
   for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != int(_GLF_ONE(1.0, injectionSwitch.y))); _injected_loop_counter ++)
    {
     if(_GLF_WRAPPED_IF_TRUE(true))
      {
       if(_GLF_WRAPPED_IF_TRUE(true))
        {
         if(_GLF_DEAD(false))
          return;
        }
       else
        {
        }
       for(int _injected_loop_counter = ((1 << _GLF_IDENTITY(_GLF_IDENTITY(int(4), _GLF_IDENTITY(int(4), (_GLF_IDENTITY(int(4), (int(4)) << 0)) - 0)), (_GLF_IDENTITY(int(4), _GLF_IDENTITY(int(4), (_GLF_IDENTITY(int(4), (int(4)) << 0)) - 0))) | (_GLF_IDENTITY(_GLF_IDENTITY(int(4), _GLF_IDENTITY(int(4), (_GLF_IDENTITY(int(4), (int(4)) << 0)) - 0)), (_GLF_IDENTITY(int(4), _GLF_IDENTITY(int(4), (_GLF_IDENTITY(int(4), (int(4)) << 0)) - 0))) * 1)))) >> _GLF_IDENTITY(int(4), int(4))); _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
        {
         if(_GLF_WRAPPED_IF_FALSE(false))
          {
          }
         else
          {
           if(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), (_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), bool(bvec4(_GLF_WRAPPED_IF_TRUE(true), true, true, false)))) || false)), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), (_GLF_WRAPPED_IF_TRUE(true)) || false))) || false)))
            {
             return;
             if(_GLF_DEAD(false))
              return;
            }
           else
            {
            }
          }
        }
       do
        {
         for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < (_GLF_IDENTITY((1 << _GLF_IDENTITY(int(3), int(3))) >> _GLF_IDENTITY(int(3), int(3)), (_GLF_IDENTITY((1 << _GLF_IDENTITY(int(3), int(3))) >> _GLF_IDENTITY(int(3), int(3)), ((1 << _GLF_IDENTITY(int(3), int(3))) >> _GLF_IDENTITY(int(3), int(3))) << 0)) / 1))); _injected_loop_counter ++)
          {
           if(_GLF_WRAPPED_IF_TRUE(true))
            {
             if(_GLF_DEAD(false))
              {
               if(_GLF_WRAPPED_IF_FALSE(false))
                {
                }
               else
                {
                 return;
                }
              }
            }
           else
            {
            }
          }
        }
       while(_GLF_WRAPPED_LOOP(false));
      }
     else
      {
      }
    }
  }
 do
  {
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     do
      {
       for(int _injected_loop_counter = (0 << _GLF_IDENTITY(int(4), int(4))); _GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter != _GLF_IDENTITY(int(_GLF_ONE(1.0, injectionSwitch.y)), (int(_GLF_ONE(1.0, injectionSwitch.y))) >> 0)), false || (_GLF_WRAPPED_LOOP(_injected_loop_counter != _GLF_IDENTITY(_GLF_IDENTITY(int(_GLF_ONE(1.0, injectionSwitch.y)), (_GLF_IDENTITY(int(_GLF_ONE(1.0, injectionSwitch.y)), (int(_GLF_ONE(1.0, injectionSwitch.y))) >> 0)) - 0), (int(_GLF_ONE(1.0, injectionSwitch.y))) >> 0)))); _injected_loop_counter ++)
        {
         if(_GLF_DEAD(false))
          break;
         do
          {
           for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < (_GLF_IDENTITY((1 << _GLF_IDENTITY(int(2), int(2))), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY((1 << _GLF_IDENTITY(_GLF_IDENTITY(int(2), (_GLF_IDENTITY(int(2), int(ivec4(int(2), 1, 0, 0)))) * 1), int(2))), 0 | (_GLF_IDENTITY((1 << _GLF_IDENTITY(int(_GLF_IDENTITY(2, ~ (~ (_GLF_IDENTITY(2, ~ (~ (2))))))), int(2))), _GLF_IDENTITY(((1 << _GLF_IDENTITY(int(2), int(2)))) | ((1 << _GLF_IDENTITY(int(2), int(2)))), 0 + (_GLF_IDENTITY(((1 << _GLF_IDENTITY(int(2), int(2)))) | ((1 << _GLF_IDENTITY(int(2), int(2)))), max(((1 << _GLF_IDENTITY(int(2), int(2)))) | ((1 << _GLF_IDENTITY(int(2), int(2)))), ((1 << _GLF_IDENTITY(int(2), int(2)))) | ((1 << _GLF_IDENTITY(int(2), int(2)))))))))))), (~ (_GLF_IDENTITY((1 << _GLF_IDENTITY(int(2), int(2))), _GLF_IDENTITY(0, (1 ^ 1) ^ (_GLF_IDENTITY(0, (true ? 0 : _GLF_FUZZED(_injected_loop_counter))))) | (_GLF_IDENTITY((_GLF_IDENTITY(1, (1) >> 0) << _GLF_IDENTITY(int(2), int(2))), ((1 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), max(_GLF_IDENTITY(int(2), clamp(int(2), int(2), int(2))), _GLF_IDENTITY(int(2), min(int(2), int(2)))))))) | ((1 << _GLF_IDENTITY(int(2), int(2))))))))) + 0))) >> _GLF_IDENTITY(int(2), int(2)))); _injected_loop_counter ++)
            {
             if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x > injectionSwitch.y))))
              {
               for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
                {
                 return;
                }
              }
             if(_GLF_DEAD(false))
              continue;
             if(_GLF_DEAD(false))
              break;
             if(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), _GLF_IDENTITY(! (! (_GLF_WRAPPED_IF_TRUE(true))), (! (! (_GLF_WRAPPED_IF_TRUE(true)))) && true)))
              {
               atomicStore(buf[virtual_gid], uint(1), 4, 64, 4);
               if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, true && (false)), (injectionSwitch.x > injectionSwitch.y))))
                continue;
              }
             else
              {
              }
            }
          }
         while(_GLF_WRAPPED_LOOP(false));
         if(_GLF_DEAD(false))
          {
           if(_GLF_WRAPPED_IF_TRUE(true))
            {
             if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, ! (! (false)))))
              {
              }
             else
              {
               return;
              }
            }
           else
            {
            }
          }
         if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            {
             if(_GLF_DEAD(false))
              {
               if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
                {
                 return;
                }
               else
                {
                }
              }
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              {
               if(_GLF_DEAD(false))
                {
                 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                  break;
                 break;
                }
               break;
              }
             if(_GLF_WRAPPED_IF_FALSE(false))
              {
              }
             else
              {
               do
                {
                 for(int _injected_loop_counter = int(_GLF_ZERO(0.0, injectionSwitch.x)); _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
                  {
                   return;
                  }
                }
               while(_GLF_WRAPPED_LOOP(false));
              }
            }
           break;
          }
        }
      }
     while(_GLF_WRAPPED_LOOP(false));
    }
   else
    {
    }
  }
 while(_GLF_WRAPPED_LOOP(false));
 for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != (((1 << _GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), (int(3)) | (int(3))))) >> _GLF_IDENTITY(int(_GLF_IDENTITY(3, clamp(_GLF_IDENTITY(3, (3) - 0), 3, _GLF_IDENTITY(3, (_GLF_IDENTITY(3, max(3, 3))) - 0)))), int(3))) ^ 0)); _injected_loop_counter ++)
  {
   for(int _injected_loop_counter = ((1 << _GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), clamp(int(3), int(3), int(3))))) >> _GLF_IDENTITY(int(3), int(3))); _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
    {
     do
      {
       if(_GLF_WRAPPED_IF_FALSE(false))
        {
        }
       else
        {
         do
          {
           if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), (bool(false)) && true)))), false || (_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), (_GLF_IDENTITY(bool(false), true && (bool(false)))) && _GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), true && (! (true))))))))))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(false), (bool(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bool(false)))) && true))) && _GLF_IDENTITY(_GLF_IDENTITY(true, ! (! (true))), ! (! (_GLF_IDENTITY(true, ! (! (true))))))), bool(bvec4(_GLF_IDENTITY(bool(false), (bool(_GLF_IDENTITY(false, (false) && true))) && _GLF_IDENTITY(_GLF_IDENTITY(true, ! (! (true))), ! (! (_GLF_IDENTITY(true, ! (! (true))))))), true, false, false)))))), ! (! (_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), (bool(_GLF_IDENTITY(false, (false) && true))) && _GLF_IDENTITY(true, ! (! (true)))))))))), false || (_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), _GLF_IDENTITY((bool(false)) && _GLF_IDENTITY(true, (true) || false), _GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(false, ! (! (false))))), bool(bvec2(bool(bool(_GLF_IDENTITY(false, ! (! (false))))), true)))))) || ((bool(false)) && _GLF_IDENTITY(true, (true) || false)))))))))))))
            {
             if(_GLF_DEAD(false))
              break;
            }
           else
            {
             if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              {
              }
             else
              {
               for(int _injected_loop_counter = _GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) >> 0)) - (0 >> _GLF_IDENTITY(int(6), int(6)))); _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
                {
                 for(int _injected_loop_counter = _GLF_IDENTITY(1, ~ _GLF_IDENTITY((~ (1)), clamp((~ (1)), (~ (1)), (~ _GLF_IDENTITY((1), ((1)) / 1))))); _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter != 0, ! (! (_injected_loop_counter != 0)))); _GLF_IDENTITY(_injected_loop_counter --, _GLF_IDENTITY(0, ~ (~ (0))) + (_injected_loop_counter --)))
                  {
                   if(_GLF_DEAD(false))
                    {
                     for(int _injected_loop_counter = int(_GLF_ONE(1.0, injectionSwitch.y)); _GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter > (0 << _GLF_IDENTITY(int(4), int(4)))), false || (_GLF_WRAPPED_LOOP(_injected_loop_counter > (0 << _GLF_IDENTITY(int(4), int(4)))))); _injected_loop_counter --)
                      {
                       for(int _injected_loop_counter = int(_GLF_ZERO(0.0, injectionSwitch.x)); _GLF_WRAPPED_LOOP(_injected_loop_counter < int(_GLF_ONE(1.0, injectionSwitch.y))); _injected_loop_counter ++)
                        {
                         return;
                        }
                       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                        break;
                      }
                    }
                  }
                }
              }
             if((subgroup_local_id % 2) == 0)
              {
               if(_GLF_DEAD(false))
                return;
               if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
                {
                 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY((_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && ((_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) && true))
                  {
                   for(int _injected_loop_counter = int(_GLF_ONE(1.0, injectionSwitch.y)); _GLF_WRAPPED_LOOP(_injected_loop_counter > (0 >> _GLF_IDENTITY(int(4), int(4)))); _injected_loop_counter --)
                    {
                     return;
                    }
                  }
                }
               else
                {
                }
               do
                {
                 subgroupAll(_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bool(true)), bool(bvec3(_GLF_IDENTITY(bool(bool(_GLF_IDENTITY(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (true)))), true && (_GLF_IDENTITY(bool(bool(true)), (bool(bool(true))) && true))), true, _GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, ! (! (true))))))))));
                 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                  {
                   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                    break;
                   for(int _injected_loop_counter = int(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), max(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y)))); _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
                    {
                     return;
                    }
                  }
                 if(_GLF_DEAD(false))
                  break;
                }
               while(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(false), (_GLF_WRAPPED_LOOP(false)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec4(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(false), (_GLF_WRAPPED_LOOP(false)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false, true, true))));
               for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
                {
                 for(int _injected_loop_counter = _GLF_IDENTITY((0 & -8244), ((0 & _GLF_IDENTITY(-8244, (_GLF_IDENTITY(-8244, min(-8244, -8244))) >> 0))) | ((_GLF_IDENTITY(0 & -8244, (0 & -8244) ^ (0 & -31666))))); _GLF_WRAPPED_LOOP(_injected_loop_counter != int(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), clamp(_GLF_ONE(1.0, injectionSwitch.y), _GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), max(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(sign(injectionSwitch)))).y), _GLF_ONE(1.0, injectionSwitch.y))), _GLF_ONE(1.0, injectionSwitch.y))))); _injected_loop_counter ++)
                  {
                   if(_GLF_DEAD(false))
                    {
                     do
                      {
                       for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter, max(_injected_loop_counter, _GLF_IDENTITY(_injected_loop_counter, clamp(_injected_loop_counter, _injected_loop_counter, _injected_loop_counter)))) != (0 >> _GLF_IDENTITY(int(3), int(3)))); _injected_loop_counter --)
                        {
                         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                          continue;
                         if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
                          {
                           if(_GLF_WRAPPED_IF_TRUE(true))
                            {
                             if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec2(_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false))), (injectionSwitch.x > injectionSwitch.y))))))
                              {
                               do
                                {
                                 if(_GLF_WRAPPED_IF_FALSE(false))
                                  {
                                  }
                                 else
                                  {
                                   return;
                                  }
                                }
                               while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-6543.7557)), float(_GLF_IDENTITY(injectionSwitch.x, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch.x : _GLF_FUZZED(mix(-986.438, -5.3, false))))), bool(true))) > injectionSwitch.y))));
                              }
                            }
                           else
                            {
                            }
                          }
                         else
                          {
                          }
                        }
                       for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
                        {
                         for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > (_GLF_IDENTITY(0, ~ (~ (0))) ^ 0)); _injected_loop_counter --)
                          {
                           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                            return;
                          }
                        }
                       if(_GLF_WRAPPED_IF_TRUE(true))
                        {
                         if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
                          {
                           if(_GLF_WRAPPED_IF_FALSE(false))
                            {
                            }
                           else
                            {
                             return;
                            }
                          }
                         else
                          {
                           if(_GLF_WRAPPED_IF_TRUE(true))
                            {
                             if(_GLF_DEAD(false))
                              break;
                             if(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, false || (true))), ! (_GLF_IDENTITY(! (_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, false || (true)))), ! (_GLF_IDENTITY(! (! (_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, false || (true))))), true && (! (! (_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, false || (true))))))))))))
                              {
                               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                                return;
                              }
                             else
                              {
                              }
                             do
                              {
                               do
                                {
                                 if(_GLF_DEAD(false))
                                  {
                                   for(int _injected_loop_counter = int(_GLF_ZERO(0.0, injectionSwitch.x)); _GLF_WRAPPED_LOOP(_injected_loop_counter != ((1 << _GLF_IDENTITY(int(1), int(1))) >> _GLF_IDENTITY(int(1), int(1)))); _injected_loop_counter ++)
                                    {
                                     return;
                                    }
                                  }
                                }
                               while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
                              }
                             while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
                            }
                           else
                            {
                            }
                          }
                         if(_GLF_DEAD(false))
                          continue;
                         if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (_GLF_IDENTITY(false, false || (false)))) && true)))))
                          continue;
                        }
                       else
                        {
                        }
                      }
                     while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
                     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
                      {
                       if(_GLF_WRAPPED_IF_TRUE(true))
                        {
                         return;
                        }
                       else
                        {
                        }
                      }
                     if(_GLF_DEAD(false))
                      {
                       if(_GLF_DEAD(false))
                        {
                         if(_GLF_DEAD(false))
                          break;
                         do
                          {
                           for(int _injected_loop_counter = _GLF_IDENTITY((int(_GLF_ONE(1.0, injectionSwitch.y)) | (0 << _GLF_IDENTITY(int(6), int(_GLF_IDENTITY(6, (6) >> 0))))), ((int(_GLF_ONE(1.0, injectionSwitch.y)) | (0 << _GLF_IDENTITY(int(6), int(_GLF_IDENTITY(6, (6) >> 0)))))) | 0); _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
                            {
                             if(_GLF_WRAPPED_IF_TRUE(true))
                              {
                               return;
                              }
                             else
                              {
                              }
                            }
                          }
                         while(_GLF_WRAPPED_LOOP(false));
                         if(_GLF_DEAD(false))
                          continue;
                        }
                       if(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), (_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, true && (true))), ! (! (_GLF_WRAPPED_IF_TRUE(true))))) && true))
                        {
                         if(_GLF_WRAPPED_IF_TRUE(true))
                          {
                           for(int _injected_loop_counter = int(_GLF_ONE(1.0, injectionSwitch.y)); _GLF_WRAPPED_LOOP(_injected_loop_counter > int(_GLF_ZERO(0.0, injectionSwitch.x))); _injected_loop_counter --)
                            {
                             do
                              {
                               if(_GLF_DEAD(false))
                                return;
                               if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), bool(bvec4(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, false, false))), false, true)))))
                                continue;
                               do
                                {
                                 return;
                                }
                               while(_GLF_WRAPPED_LOOP(false));
                              }
                             while(_GLF_WRAPPED_LOOP(false));
                            }
                          }
                         else
                          {
                          }
                        }
                       else
                        {
                         if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! (false))))))), (_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! _GLF_IDENTITY((_GLF_IDENTITY(! (false), true && (! (false)))), ((! (false))) || _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))))))))) && true))
                          continue;
                        }
                       if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
                        {
                         if(_GLF_DEAD(false))
                          continue;
                         return;
                        }
                      }
                     if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))
                      break;
                     if(_GLF_DEAD(false))
                      break;
                    }
                   if(_GLF_DEAD(false))
                    {
                     if(_GLF_DEAD(false))
                      break;
                     break;
                    }
                  }
                }
               atomicStore(buf[_GLF_IDENTITY(_GLF_IDENTITY(next_virtual_gid, max(next_virtual_gid, next_virtual_gid)), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((next_virtual_gid), min(_GLF_IDENTITY((next_virtual_gid), ((next_virtual_gid)) / 1u), (next_virtual_gid))), (_GLF_IDENTITY((next_virtual_gid), ((next_virtual_gid)) ^ 0u)) | ((next_virtual_gid))) | (next_virtual_gid), uint(uvec4(_GLF_IDENTITY((next_virtual_gid), (_GLF_IDENTITY((next_virtual_gid), ((next_virtual_gid)) ^ 0u)) | ((next_virtual_gid))) | (next_virtual_gid), 0u, 0u, 0u))))], uint(2), 4, 64, _GLF_IDENTITY(4, (_GLF_IDENTITY(_GLF_IDENTITY(4, (false ? _GLF_FUZZED(_injected_loop_counter) : 4)), max(4, 4))) - 0));
              }
             else
              {
               if(_GLF_DEAD(false))
                break;
               subgroupAll(false);
               if(_GLF_DEAD(false))
                continue;
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                {
                 if(_GLF_WRAPPED_IF_FALSE(false))
                  {
                  }
                 else
                  {
                   return;
                  }
                }
               if(_GLF_WRAPPED_IF_FALSE(false))
                {
                 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                  continue;
                 if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false)) || false))
                  return;
                }
               else
                {
                 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                  continue;
                 atomicStore(buf[_GLF_IDENTITY(next_virtual_gid, uint(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(uvec2(next_virtual_gid, 1u), (uvec2(next_virtual_gid, 1u)) + uvec2(0u, 0u)), uvec2(uvec4(_GLF_IDENTITY(uvec2(next_virtual_gid, 1u), (uvec2(next_virtual_gid, 1u)) + uvec2(0u, 0u)), 0u, 0u))), (true ? uvec2(next_virtual_gid, _GLF_IDENTITY(1u, (1u) ^ 0u)) : _GLF_IDENTITY(_GLF_FUZZED(_GLF_IDENTITY(uvec2(_GLF_IDENTITY(74232u, (true ? 74232u : _GLF_FUZZED(workgroup_id))), _GLF_IDENTITY(2351u, _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec4(_GLF_IDENTITY(2351u, (2351u) / 1u), 1u, ((1u << _GLF_IDENTITY(uint(7u), uint(7u))) >> _GLF_IDENTITY(uint(7u), uint(7u))), 0u), uvec4(0u, 0u, 0u, 0u) ^ (uvec4(_GLF_IDENTITY(2351u, (2351u) / 1u), 1u, ((1u << _GLF_IDENTITY(uint(7u), uint(7u))) >> _GLF_IDENTITY(uint(7u), uint(7u))), 0u)))), (uint(_GLF_IDENTITY(uvec4(_GLF_IDENTITY(2351u, (2351u) / 1u), 1u, ((1u << _GLF_IDENTITY(uint(7u), uint(7u))) >> _GLF_IDENTITY(uint(7u), uint(7u))), 0u), uvec4(0u, 0u, 0u, 0u) ^ (uvec4(_GLF_IDENTITY(2351u, (2351u) / 1u), 1u, ((1u << _GLF_IDENTITY(uint(7u), uint(7u))) >> _GLF_IDENTITY(uint(7u), uint(7u))), 0u))))) / 1u))), ~ (_GLF_IDENTITY(_GLF_IDENTITY(~ (uvec2(_GLF_IDENTITY(74232u, (true ? 74232u : _GLF_FUZZED(workgroup_id))), 2351u)), _GLF_IDENTITY((~ (uvec2(_GLF_IDENTITY(74232u, (true ? 74232u : _GLF_FUZZED(workgroup_id))), 2351u))), ~ (~ ((~ (uvec2(_GLF_IDENTITY(74232u, (true ? 74232u : _GLF_FUZZED(workgroup_id))), 2351u)))))) / _GLF_IDENTITY(uvec2(1u, 1u), uvec2(0u, 0u) | (_GLF_IDENTITY(uvec2(1u, 1u), (uvec2(1u, 1u)) / uvec2(1u, 1u))))), max(_GLF_IDENTITY(_GLF_IDENTITY(~ (uvec2(_GLF_IDENTITY(74232u, (true ? 74232u : _GLF_FUZZED(workgroup_id))), 2351u)), _GLF_IDENTITY((~ (uvec2(_GLF_IDENTITY(74232u, (true ? 74232u : _GLF_FUZZED(workgroup_id))), 2351u))), ~ (~ ((~ (uvec2(_GLF_IDENTITY(74232u, (true ? 74232u : _GLF_FUZZED(workgroup_id))), 2351u)))))) / _GLF_IDENTITY(uvec2(1u, 1u), uvec2(0u, 0u) | (_GLF_IDENTITY(uvec2(1u, 1u), (uvec2(1u, 1u)) / uvec2(1u, 1u))))), max(_GLF_IDENTITY(_GLF_IDENTITY(~ (uvec2(_GLF_IDENTITY(74232u, (true ? 74232u : _GLF_FUZZED(workgroup_id))), 2351u)), _GLF_IDENTITY((~ (uvec2(_GLF_IDENTITY(74232u, (true ? 74232u : _GLF_FUZZED(workgroup_id))), 2351u))), ~ (~ ((~ (uvec2(_GLF_IDENTITY(74232u, (true ? 74232u : _GLF_FUZZED(workgroup_id))), 2351u)))))) / _GLF_IDENTITY(uvec2(1u, 1u), uvec2(0u, 0u) | (_GLF_IDENTITY(uvec2(1u, 1u), (uvec2(1u, 1u)) / uvec2(1u, 1u))))), (true ? _GLF_IDENTITY(~ (uvec2(_GLF_IDENTITY(74232u, (true ? 74232u : _GLF_FUZZED(workgroup_id))), 2351u)), _GLF_IDENTITY((~ (uvec2(_GLF_IDENTITY(74232u, (true ? 74232u : _GLF_FUZZED(workgroup_id))), 2351u))), ~ (~ ((~ (uvec2(_GLF_IDENTITY(74232u, (true ? 74232u : _GLF_FUZZED(workgroup_id))), 2351u)))))) / _GLF_IDENTITY(uvec2(1u, 1u), uvec2(0u, 0u) | (_GLF_IDENTITY(uvec2(1u, 1u), (uvec2(1u, 1u)) / uvec2(1u, 1u))))) : _GLF_FUZZED(uvec2(149355u, 77397u)))), _GLF_IDENTITY(~ (uvec2(_GLF_IDENTITY(74232u, (true ? 74232u : _GLF_FUZZED(workgroup_id))), 2351u)), _GLF_IDENTITY((~ (uvec2(_GLF_IDENTITY(74232u, (true ? 74232u : _GLF_FUZZED(workgroup_id))), 2351u))), ~ (~ ((~ (uvec2(_GLF_IDENTITY(74232u, (true ? 74232u : _GLF_FUZZED(workgroup_id))), 2351u)))))) / _GLF_IDENTITY(uvec2(1u, 1u), uvec2(0u, 0u) | (_GLF_IDENTITY(uvec2(1u, 1u), (uvec2(1u, 1u)) / uvec2(1u, 1u))))))), _GLF_IDENTITY(~ (uvec2(_GLF_IDENTITY(74232u, (true ? 74232u : _GLF_FUZZED(workgroup_id))), 2351u)), _GLF_IDENTITY((~ (uvec2(_GLF_IDENTITY(74232u, (true ? 74232u : _GLF_FUZZED(workgroup_id))), 2351u))), ~ (~ ((~ (uvec2(_GLF_IDENTITY(74232u, (true ? 74232u : _GLF_FUZZED(workgroup_id))), 2351u)))))) / _GLF_IDENTITY(uvec2(1u, 1u), uvec2(0u, 0u) | (_GLF_IDENTITY(uvec2(1u, 1u), (uvec2(1u, 1u)) / uvec2(1u, 1u)))))))))), min(_GLF_FUZZED(_GLF_IDENTITY(uvec2(_GLF_IDENTITY(74232u, (true ? 74232u : _GLF_FUZZED(workgroup_id))), _GLF_IDENTITY(2351u, _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec4(_GLF_IDENTITY(2351u, (2351u) / 1u), 1u, ((1u << _GLF_IDENTITY(uint(7u), uint(7u))) >> _GLF_IDENTITY(uint(7u), uint(7u))), 0u), uvec4(0u, 0u, 0u, 0u) ^ (uvec4(_GLF_IDENTITY(2351u, (2351u) / 1u), 1u, ((1u << _GLF_IDENTITY(uint(7u), uint(7u))) >> _GLF_IDENTITY(uint(7u), uint(7u))), 0u)))), (uint(_GLF_IDENTITY(uvec4(_GLF_IDENTITY(2351u, (2351u) / 1u), 1u, ((1u << _GLF_IDENTITY(uint(7u), uint(7u))) >> _GLF_IDENTITY(uint(7u), uint(7u))), 0u), uvec4(0u, 0u, 0u, 0u) ^ (uvec4(_GLF_IDENTITY(2351u, (2351u) / 1u), 1u, ((1u << _GLF_IDENTITY(uint(7u), uint(7u))) >> _GLF_IDENTITY(uint(7u), uint(7u))), 0u))))) / 1u))), ~ (_GLF_IDENTITY(_GLF_IDENTITY(~ (uvec2(_GLF_IDENTITY(74232u, (true ? 74232u : _GLF_FUZZED(workgroup_id))), 2351u)), _GLF_IDENTITY((~ (uvec2(_GLF_IDENTITY(74232u, (true ? 74232u : _GLF_FUZZED(workgroup_id))), 2351u))), ~ (~ ((~ (uvec2(_GLF_IDENTITY(74232u, (true ? 74232u : _GLF_FUZZED(workgroup_id))), 2351u)))))) / _GLF_IDENTITY(uvec2(1u, 1u), uvec2(0u, 0u) | (_GLF_IDENTITY(uvec2(1u, 1u), (uvec2(1u, 1u)) / uvec2(1u, 1u))))), max(_GLF_IDENTITY(_GLF_IDENTITY(~ (uvec2(_GLF_IDENTITY(74232u, (true ? 74232u : _GLF_FUZZED(workgroup_id))), 2351u)), _GLF_IDENTITY((~ (uvec2(_GLF_IDENTITY(74232u, (true ? 74232u : _GLF_FUZZED(workgroup_id))), 2351u))), ~ (~ ((~ (uvec2(_GLF_IDENTITY(74232u, (true ? 74232u : _GLF_FUZZED(workgroup_id))), 2351u)))))) / _GLF_IDENTITY(uvec2(1u, 1u), uvec2(0u, 0u) | (_GLF_IDENTITY(uvec2(1u, 1u), (uvec2(1u, 1u)) / uvec2(1u, 1u))))), max(_GLF_IDENTITY(_GLF_IDENTITY(~ (uvec2(_GLF_IDENTITY(74232u, (true ? 74232u : _GLF_FUZZED(workgroup_id))), 2351u)), _GLF_IDENTITY((~ (uvec2(_GLF_IDENTITY(74232u, (true ? 74232u : _GLF_FUZZED(workgroup_id))), 2351u))), ~ (~ ((~ (uvec2(_GLF_IDENTITY(74232u, (true ? 74232u : _GLF_FUZZED(workgroup_id))), 2351u)))))) / _GLF_IDENTITY(uvec2(1u, 1u), uvec2(0u, 0u) | (_GLF_IDENTITY(uvec2(1u, 1u), (uvec2(1u, 1u)) / uvec2(1u, 1u))))), (true ? _GLF_IDENTITY(~ (uvec2(_GLF_IDENTITY(74232u, (true ? 74232u : _GLF_FUZZED(workgroup_id))), 2351u)), _GLF_IDENTITY((~ (uvec2(_GLF_IDENTITY(74232u, (true ? 74232u : _GLF_FUZZED(workgroup_id))), 2351u))), ~ (~ ((~ (uvec2(_GLF_IDENTITY(74232u, (true ? 74232u : _GLF_FUZZED(workgroup_id))), 2351u)))))) / _GLF_IDENTITY(uvec2(1u, 1u), uvec2(0u, 0u) | (_GLF_IDENTITY(uvec2(1u, 1u), (uvec2(1u, 1u)) / uvec2(1u, 1u))))) : _GLF_FUZZED(uvec2(149355u, 77397u)))), _GLF_IDENTITY(~ (uvec2(_GLF_IDENTITY(74232u, (true ? 74232u : _GLF_FUZZED(workgroup_id))), 2351u)), _GLF_IDENTITY((~ (uvec2(_GLF_IDENTITY(74232u, (true ? 74232u : _GLF_FUZZED(workgroup_id))), 2351u))), ~ (~ ((~ (uvec2(_GLF_IDENTITY(74232u, (true ? 74232u : _GLF_FUZZED(workgroup_id))), 2351u)))))) / _GLF_IDENTITY(uvec2(1u, 1u), uvec2(0u, 0u) | (_GLF_IDENTITY(uvec2(1u, 1u), (uvec2(1u, 1u)) / uvec2(1u, 1u))))))), _GLF_IDENTITY(~ (uvec2(_GLF_IDENTITY(74232u, (true ? 74232u : _GLF_FUZZED(workgroup_id))), 2351u)), _GLF_IDENTITY((~ (uvec2(_GLF_IDENTITY(74232u, (true ? 74232u : _GLF_FUZZED(workgroup_id))), 2351u))), ~ (~ ((~ (uvec2(_GLF_IDENTITY(74232u, (true ? 74232u : _GLF_FUZZED(workgroup_id))), 2351u)))))) / _GLF_IDENTITY(uvec2(1u, 1u), uvec2(0u, 0u) | (_GLF_IDENTITY(uvec2(1u, 1u), (uvec2(1u, 1u)) / uvec2(1u, 1u)))))))))), _GLF_FUZZED(_GLF_IDENTITY(uvec2(_GLF_IDENTITY(74232u, (true ? 74232u : _GLF_FUZZED(workgroup_id))), _GLF_IDENTITY(2351u, _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec4(_GLF_IDENTITY(2351u, (2351u) / 1u), 1u, ((1u << _GLF_IDENTITY(uint(7u), uint(7u))) >> _GLF_IDENTITY(uint(7u), uint(7u))), 0u), uvec4(0u, 0u, 0u, 0u) ^ (uvec4(_GLF_IDENTITY(2351u, (2351u) / 1u), 1u, ((1u << _GLF_IDENTITY(uint(7u), uint(7u))) >> _GLF_IDENTITY(uint(7u), uint(7u))), 0u)))), (uint(_GLF_IDENTITY(uvec4(_GLF_IDENTITY(2351u, (2351u) / 1u), 1u, ((1u << _GLF_IDENTITY(uint(7u), uint(7u))) >> _GLF_IDENTITY(uint(7u), uint(7u))), 0u), uvec4(0u, 0u, 0u, 0u) ^ (uvec4(_GLF_IDENTITY(2351u, (2351u) / 1u), 1u, ((1u << _GLF_IDENTITY(uint(7u), uint(7u))) >> _GLF_IDENTITY(uint(7u), uint(7u))), 0u))))) / 1u))), ~ (_GLF_IDENTITY(_GLF_IDENTITY(~ (uvec2(_GLF_IDENTITY(74232u, (true ? 74232u : _GLF_FUZZED(workgroup_id))), 2351u)), _GLF_IDENTITY((~ (uvec2(_GLF_IDENTITY(74232u, (true ? 74232u : _GLF_FUZZED(workgroup_id))), 2351u))), ~ (~ ((~ (uvec2(_GLF_IDENTITY(74232u, (true ? 74232u : _GLF_FUZZED(workgroup_id))), 2351u)))))) / _GLF_IDENTITY(uvec2(1u, 1u), uvec2(0u, 0u) | (_GLF_IDENTITY(uvec2(1u, 1u), (uvec2(1u, 1u)) / uvec2(1u, 1u))))), max(_GLF_IDENTITY(_GLF_IDENTITY(~ (uvec2(_GLF_IDENTITY(74232u, (true ? 74232u : _GLF_FUZZED(workgroup_id))), 2351u)), _GLF_IDENTITY((~ (uvec2(_GLF_IDENTITY(74232u, (true ? 74232u : _GLF_FUZZED(workgroup_id))), 2351u))), ~ (~ ((~ (uvec2(_GLF_IDENTITY(74232u, (true ? 74232u : _GLF_FUZZED(workgroup_id))), 2351u)))))) / _GLF_IDENTITY(uvec2(1u, 1u), uvec2(0u, 0u) | (_GLF_IDENTITY(uvec2(1u, 1u), (uvec2(1u, 1u)) / uvec2(1u, 1u))))), max(_GLF_IDENTITY(_GLF_IDENTITY(~ (uvec2(_GLF_IDENTITY(74232u, (true ? 74232u : _GLF_FUZZED(workgroup_id))), 2351u)), _GLF_IDENTITY((~ (uvec2(_GLF_IDENTITY(74232u, (true ? 74232u : _GLF_FUZZED(workgroup_id))), 2351u))), ~ (~ ((~ (uvec2(_GLF_IDENTITY(74232u, (true ? 74232u : _GLF_FUZZED(workgroup_id))), 2351u)))))) / _GLF_IDENTITY(uvec2(1u, 1u), uvec2(0u, 0u) | (_GLF_IDENTITY(uvec2(1u, 1u), (uvec2(1u, 1u)) / uvec2(1u, 1u))))), (true ? _GLF_IDENTITY(~ (uvec2(_GLF_IDENTITY(74232u, (true ? 74232u : _GLF_FUZZED(workgroup_id))), 2351u)), _GLF_IDENTITY((~ (uvec2(_GLF_IDENTITY(74232u, (true ? 74232u : _GLF_FUZZED(workgroup_id))), 2351u))), ~ (~ ((~ (uvec2(_GLF_IDENTITY(74232u, (true ? 74232u : _GLF_FUZZED(workgroup_id))), 2351u)))))) / _GLF_IDENTITY(uvec2(1u, 1u), uvec2(0u, 0u) | (_GLF_IDENTITY(uvec2(1u, 1u), (uvec2(1u, 1u)) / uvec2(1u, 1u))))) : _GLF_FUZZED(uvec2(149355u, 77397u)))), _GLF_IDENTITY(~ (uvec2(_GLF_IDENTITY(74232u, (true ? 74232u : _GLF_FUZZED(workgroup_id))), 2351u)), _GLF_IDENTITY((~ (uvec2(_GLF_IDENTITY(74232u, (true ? 74232u : _GLF_FUZZED(workgroup_id))), 2351u))), ~ (~ ((~ (uvec2(_GLF_IDENTITY(74232u, (true ? 74232u : _GLF_FUZZED(workgroup_id))), 2351u)))))) / _GLF_IDENTITY(uvec2(1u, 1u), uvec2(0u, 0u) | (_GLF_IDENTITY(uvec2(1u, 1u), (uvec2(1u, 1u)) / uvec2(1u, 1u))))))), _GLF_IDENTITY(~ (uvec2(_GLF_IDENTITY(74232u, (true ? 74232u : _GLF_FUZZED(workgroup_id))), 2351u)), _GLF_IDENTITY((~ (uvec2(_GLF_IDENTITY(74232u, (true ? 74232u : _GLF_FUZZED(workgroup_id))), 2351u))), ~ (~ ((~ (uvec2(_GLF_IDENTITY(74232u, (true ? 74232u : _GLF_FUZZED(workgroup_id))), 2351u)))))) / _GLF_IDENTITY(uvec2(1u, 1u), uvec2(0u, 0u) | (_GLF_IDENTITY(uvec2(1u, 1u), (uvec2(1u, 1u)) / uvec2(1u, 1u))))))))))))))))], uint(2), 4, 64, _GLF_IDENTITY(_GLF_IDENTITY(4, clamp(_GLF_IDENTITY(4, (true ? _GLF_IDENTITY(4, (4) << 0) : _GLF_FUZZED(49721))), 4, 4)), max(_GLF_IDENTITY(_GLF_IDENTITY(4, clamp(_GLF_IDENTITY(4, (true ? _GLF_IDENTITY(4, (4) << 0) : _GLF_FUZZED(49721))), 4, 4)), (true ? _GLF_IDENTITY(4, clamp(_GLF_IDENTITY(4, (true ? _GLF_IDENTITY(4, (4) << 0) : _GLF_FUZZED(49721))), 4, 4)) : _GLF_FUZZED(-52998))), _GLF_IDENTITY(4, clamp(_GLF_IDENTITY(4, (true ? _GLF_IDENTITY(4, (4) << 0) : _GLF_FUZZED(49721))), 4, 4)))));
                }
               if(_GLF_WRAPPED_IF_TRUE(true))
                {
                 if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! _GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(_GLF_IDENTITY(bvec2(injectionSwitch.x > injectionSwitch.y, false), bvec2(bvec4(bvec2(injectionSwitch.x > injectionSwitch.y, false), false, _GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), false || (! (false))))))))))), _GLF_IDENTITY(false, bool(bvec2(false, true))) || ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(_GLF_IDENTITY(bvec2(injectionSwitch.x > injectionSwitch.y, false), bvec2(bvec4(bvec2(injectionSwitch.x > injectionSwitch.y, false), false, _GLF_IDENTITY(false, ! (! (false))))))))))) && true))), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), true && (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y)), ! (! (_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, true && (false)), (injectionSwitch.x > injectionSwitch.y)), bool(_GLF_IDENTITY(bool(_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), true && (false)), (injectionSwitch.x > injectionSwitch.y))), false || (bool(_GLF_FALSE(_GLF_IDENTITY(false, true && (false)), (injectionSwitch.x > injectionSwitch.y)))))))))))))), ! (! (_GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(_GLF_IDENTITY(bvec2(injectionSwitch.x > injectionSwitch.y, false), bvec2(bvec4(bvec2(injectionSwitch.x > injectionSwitch.y, false), false, _GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), false || (! (false))))))))))), _GLF_IDENTITY(false, bool(bvec2(false, true))) || ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(_GLF_IDENTITY(bvec2(injectionSwitch.x > injectionSwitch.y, false), bvec2(bvec4(bvec2(injectionSwitch.x > injectionSwitch.y, false), false, _GLF_IDENTITY(false, ! (! (false))))))))))) && true))), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), true && (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y)), ! (! (_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, true && (false)), (injectionSwitch.x > injectionSwitch.y)), bool(_GLF_IDENTITY(bool(_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), true && (false)), (injectionSwitch.x > injectionSwitch.y))), false || (bool(_GLF_FALSE(_GLF_IDENTITY(false, true && (false)), (injectionSwitch.x > injectionSwitch.y)))))))))))))), ((_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(_GLF_IDENTITY(bvec2(injectionSwitch.x > injectionSwitch.y, false), bvec2(bvec4(bvec2(injectionSwitch.x > injectionSwitch.y, false), false, _GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), false || (! (false))))))))))), _GLF_IDENTITY(false, bool(bvec2(false, true))) || ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(_GLF_IDENTITY(bvec2(injectionSwitch.x > injectionSwitch.y, false), bvec2(bvec4(bvec2(injectionSwitch.x > injectionSwitch.y, false), false, _GLF_IDENTITY(false, ! (! (false))))))))))) && true))), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), true && (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y)), ! (! (_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, true && (false)), (injectionSwitch.x > injectionSwitch.y)), bool(_GLF_IDENTITY(bool(_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), true && (false)), (injectionSwitch.x > injectionSwitch.y))), false || (bool(_GLF_FALSE(_GLF_IDENTITY(false, true && (false)), (injectionSwitch.x > injectionSwitch.y))))))))))))))) || false)))))))
                  {
                  }
                 else
                  {
                   if(_GLF_WRAPPED_IF_FALSE(false))
                    {
                    }
                   else
                    {
                     for(int _injected_loop_counter = (0 & -15915); _GLF_WRAPPED_LOOP(_injected_loop_counter != (_GLF_IDENTITY(int(_GLF_ONE(_GLF_IDENTITY(1.0, mix(float(_GLF_IDENTITY(1.0, mix(float(_GLF_IDENTITY(1.0, (1.0) * 1.0)), float(_GLF_FUZZED(vec4(2911.3379, -9.9, -4.5, -5.4).q)), bool(false)))), float(_GLF_FUZZED(8.1)), bool(false))), injectionSwitch.y)), 0 | (_GLF_IDENTITY(int(_GLF_ONE(_GLF_IDENTITY(1.0, mix(float(_GLF_IDENTITY(1.0, mix(float(_GLF_IDENTITY(1.0, (1.0) * 1.0)), float(_GLF_FUZZED(vec4(2911.3379, -9.9, -4.5, -5.4).q)), bool(false)))), float(_GLF_FUZZED(8.1)), bool(false))), injectionSwitch.y)), clamp(int(_GLF_ONE(_GLF_IDENTITY(1.0, mix(float(_GLF_IDENTITY(1.0, mix(float(_GLF_IDENTITY(1.0, (1.0) * 1.0)), float(_GLF_FUZZED(vec4(2911.3379, -9.9, -4.5, -5.4).q)), bool(false)))), float(_GLF_FUZZED(8.1)), bool(false))), injectionSwitch.y)), int(_GLF_ONE(_GLF_IDENTITY(1.0, mix(float(_GLF_IDENTITY(1.0, mix(float(_GLF_IDENTITY(1.0, (1.0) * 1.0)), float(_GLF_FUZZED(vec4(2911.3379, -9.9, -4.5, -5.4).q)), bool(false)))), float(_GLF_FUZZED(8.1)), bool(false))), injectionSwitch.y)), int(_GLF_ONE(_GLF_IDENTITY(1.0, mix(float(_GLF_IDENTITY(1.0, mix(float(_GLF_IDENTITY(1.0, (1.0) * 1.0)), float(_GLF_FUZZED(vec4(2911.3379, -9.9, -4.5, -5.4).q)), bool(false)))), float(_GLF_FUZZED(8.1)), bool(false))), injectionSwitch.y)))))) | 1)); _injected_loop_counter ++)
                      {
                       if(_GLF_DEAD(false))
                        {
                         if(_GLF_WRAPPED_IF_TRUE(true))
                          {
                           return;
                          }
                         else
                          {
                          }
                        }
                      }
                    }
                  }
                }
               else
                {
                }
              }
            }
          }
         while(_GLF_WRAPPED_LOOP(false));
        }
      }
     while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y))))));
    }
  }
}
