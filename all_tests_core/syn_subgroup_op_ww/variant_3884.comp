#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


struct _GLF_struct_16 {
 uint _f0;
 vec3 _f1;
 bvec4 _f2;
 mat2 _f3;
 int _f4;
 float _f5;
 uint _f6;
} ;

struct _GLF_struct_15 {
 mat4x2 _f0;
 mat2 _f1;
 float _f2;
 bvec3 _f3;
 vec4 _f4;
 mat3 _f5;
} ;

struct _GLF_struct_14 {
 bvec4 _f0;
 vec2 _f1;
} ;

struct _GLF_struct_17 {
 _GLF_struct_14 _f0;
 _GLF_struct_15 _f1;
 _GLF_struct_16 _f2;
 mat2x4 _f3;
 ivec2 _f4;
} ;

struct _GLF_struct_12 {
 vec4 _f0;
 vec3 _f1;
} ;

struct _GLF_struct_11 {
 uvec3 _f0;
} ;

struct _GLF_struct_10 {
 vec3 _f0;
 uvec2 _f1;
 bvec2 _f2;
 vec3 _f3;
 uvec2 _f4;
} ;

struct _GLF_struct_13 {
 mat2 _f0;
 _GLF_struct_10 _f1;
 _GLF_struct_11 _f2;
 _GLF_struct_12 _f3;
} ;

struct _GLF_struct_8 {
 bvec3 _f0;
 int _f1;
 mat2 _f2;
} ;

struct _GLF_struct_7 {
 uvec4 _f0;
 mat4x2 _f1;
 bvec2 _f2;
 mat3x2 _f3;
 uvec2 _f4;
 bvec3 _f5;
} ;

struct _GLF_struct_9 {
 mat4 _f0;
 _GLF_struct_7 _f1;
 _GLF_struct_8 _f2;
} ;

struct _GLF_struct_18 {
 ivec3 _f0;
 _GLF_struct_9 _f1;
 _GLF_struct_13 _f2;
 _GLF_struct_17 _f3;
 mat2 _f4;
 ivec3 _f5;
 uint subgroup_base;
} ;

struct _GLF_struct_4 {
 mat4x3 _f0;
 bool _f1;
 uvec3 _f2;
 mat2x4 _f3;
 bvec3 _f4;
 mat4x2 _f5;
 vec3 _f6;
} ;

struct _GLF_struct_5 {
 _GLF_struct_4 _f0;
} ;

struct _GLF_struct_2 {
 vec3 _f0;
 uvec3 _f1;
 ivec2 _f2;
 bool _f3;
} ;

struct _GLF_struct_3 {
 uvec4 _f0;
 vec2 _f1;
 mat4x2 _f2;
 uvec3 _f3;
 uint next_virtual_gid;
 _GLF_struct_2 _f4;
 vec2 _f5;
} ;

struct _GLF_struct_6 {
 _GLF_struct_3 _f0;
 ivec3 _f1;
 uvec2 _f2;
 _GLF_struct_5 _f3;
} ;

struct _GLF_struct_1 {
 ivec2 _f0;
 uint workgroup_size;
} ;

struct _GLF_struct_0 {
 uint subgroup_size;
 float _f0;
} ;

layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
#extension GL_EXT_maximal_reconvergence : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   return;
  }
 _GLF_struct_0 _GLF_struct_replacement_0 = _GLF_struct_0(gl_SubgroupSize, 1.0);
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  {
   if(_GLF_DEAD(false))
    return;
   barrier();
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(bvec2(false, true))))))))
    return;
   barrier();
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    return;
  }
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint num_workgroup = gl_NumWorkGroups.x;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))), ((injectionSwitch.x > injectionSwitch.y)) && true))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       barrier();
      }
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         return;
        }
       return;
      }
    }
   return;
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(intBitsToFloat(ivec2(44374, -64131))) : _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)))).x < injectionSwitch.y)) && (false)), (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, true && (false)), _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(clamp(injectionSwitch, injectionSwitch, injectionSwitch), min(_GLF_IDENTITY(clamp(injectionSwitch, injectionSwitch, injectionSwitch), max(clamp(injectionSwitch, injectionSwitch, injectionSwitch), clamp(injectionSwitch, injectionSwitch, injectionSwitch))), clamp(injectionSwitch, injectionSwitch, injectionSwitch)))).y), bool(bvec4(_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(clamp(injectionSwitch, injectionSwitch, injectionSwitch), min(_GLF_IDENTITY(clamp(injectionSwitch, injectionSwitch, injectionSwitch), max(clamp(injectionSwitch, injectionSwitch, injectionSwitch), clamp(injectionSwitch, injectionSwitch, injectionSwitch))), clamp(injectionSwitch, injectionSwitch, injectionSwitch)))).y), ! (! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(clamp(injectionSwitch, injectionSwitch, injectionSwitch), min(_GLF_IDENTITY(clamp(injectionSwitch, injectionSwitch, injectionSwitch), max(clamp(injectionSwitch, injectionSwitch, injectionSwitch), clamp(injectionSwitch, injectionSwitch, injectionSwitch))), clamp(injectionSwitch, injectionSwitch, injectionSwitch)))).y)))), true, true, true))))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec3(false, true, true)))) && true)))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       return;
       if(_GLF_DEAD(false))
        barrier();
      }
    }
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(injectionSwitch, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch : _GLF_FUZZED(vec2(62.22, 98.42)))).x), float(_GLF_FUZZED(((- -49.78) * (true ? 2560.6455 : 422.282)))), bool(false))) > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false)))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), true && (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, false || (false))), ! (! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, false || (false))), false || (! (_GLF_IDENTITY(false, false || (false))))))))))))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
       if(_GLF_DEAD(false))
        return;
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         return;
        }
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(-3.0, 9.4)) : injectionSwitch)))).x > injectionSwitch.y))))
          return;
         barrier();
        }
       return;
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(mat3(injectionSwitch, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0))).x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch, vec2(mat2(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))) / vec2(1.0, 1.0)), 1.0, 1.0))).y, injectionSwitch.y, injectionSwitch.y))))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
         barrier();
         if(_GLF_DEAD(false))
          barrier();
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), ((injectionSwitch) * mat2(1.0)) / vec2(1.0, 1.0))).x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)))
          barrier();
         return;
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[_GLF_IDENTITY(0, (0) << 0)], _GLF_IDENTITY(injectionSwitch[1], min(injectionSwitch[1], injectionSwitch[1])))).x > _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)), injectionSwitch)).y))))
          {
           if(_GLF_DEAD(false))
            return;
           if(_GLF_DEAD(false))
            return;
           if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
            {
             if(_GLF_DEAD(false))
              barrier();
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              return;
             if(_GLF_DEAD(false))
              return;
             barrier();
            }
           return;
          }
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! (! (false)))), false || (! (_GLF_IDENTITY(false, ! (! (false))))))))))
          return;
         return;
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
        return;
       if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(-6.9)))))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              return;
             barrier();
            }
           if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
            return;
           return;
          }
         barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
        }
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     if(_GLF_DEAD(false))
      return;
     barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       barrier();
      }
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - _GLF_ZERO(0.0, injectionSwitch.x)) > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          barrier();
         return;
        }
       return;
      }
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(false, false))), ! (! (_GLF_IDENTITY(false, bool(bvec2(false, false))))))) && true)))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 _GLF_struct_1 _GLF_struct_replacement_1 = _GLF_struct_1(ivec2(1), gl_WorkGroupSize.x);
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), min(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(min(injectionSwitch, injectionSwitch), clamp(min(injectionSwitch, injectionSwitch), min(injectionSwitch, injectionSwitch), min(injectionSwitch, injectionSwitch)))), _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch))))) - vec2(0.0, 0.0)), _GLF_IDENTITY((injectionSwitch), ((injectionSwitch)) * mat2(1.0)) / vec2(1.0, 1.0)).x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   return;
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(_GLF_IDENTITY(false, true && (false)))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))) || false))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) && true)))), (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, (false) || _GLF_IDENTITY(false, true && (false)))), (bool(_GLF_IDENTITY(false, (false) || _GLF_IDENTITY(false, true && (false))))) && true)))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, true && (false))))))
      return;
     return;
    }
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), false || (! (false)))))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         return;
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
          return;
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         barrier();
        }
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(2.3)), vec2(_GLF_FUZZED(-1.6), _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch)[1], _GLF_IDENTITY(float(float((injectionSwitch)[1])), (float(float((injectionSwitch)[1]))) + sqrt(0.0))), float(mat3x2((injectionSwitch)[1], 0.0, 0.0, 1.0, 1.0, 1.0)))), bvec2(false, true))).x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).y, ! (! (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY((injectionSwitch), max((injectionSwitch), (injectionSwitch)))[0], _GLF_FUZZED(2.3)), vec2(_GLF_FUZZED(-1.6), _GLF_IDENTITY((injectionSwitch)[1], float(mat3x2((_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-764.499), _GLF_FUZZED(5701.7757)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))))[1], _GLF_IDENTITY(0.0, float(vec4(0.0, determinant(mat4(1.0, tan(0.0), 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0)), 0.0, _GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0)), _GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0)), max(dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0)), dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0)))))))), 0.0, 1.0, 1.0, 1.0)))), bvec2(false, true))).x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).y)))))))
        {
         if(_GLF_DEAD(false))
          barrier();
         return;
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        barrier();
       return;
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! _GLF_IDENTITY((false), false || ((false))), false || (! _GLF_IDENTITY((_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, ! (! (false)))))), false || ((false))))))))))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         return;
        }
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         return;
        }
       if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true))))))
        barrier();
       return;
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), true && (! (false)))))))
      return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       return;
      }
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     if(_GLF_DEAD(false))
      return;
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(8.9)), bool(false)))))))
      barrier();
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, float(mat2(injectionSwitch.x, 0.0, _GLF_IDENTITY(1.0, (1.0) / 1.0), 1.0))))), _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0))) > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, false || (false)), _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED((-4.3)) : injectionSwitch.x)), injectionSwitch.x)), (injectionSwitch.x) / 1.0) > injectionSwitch.y))), false, true, false))))))
      return;
     barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         return;
        }
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))), (_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false))))) && true))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            {
             if(_GLF_DEAD(false))
              barrier();
             return;
             if(_GLF_DEAD(false))
              {
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                barrier();
               return;
              }
             if(_GLF_DEAD(false))
              barrier();
            }
           barrier();
          }
         barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
           if(_GLF_DEAD(false))
            barrier();
           return;
          }
         return;
        }
       return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-55.16)), vec2(_GLF_FUZZED(55.06), (injectionSwitch)[1]), bvec2(false, true))).x > injectionSwitch.y))))
      return;
     barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, true, false, true)))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
        return;
       return;
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
    }
  }
 uint workgroup_id = gl_WorkGroupID.x;
 if(_GLF_DEAD(false))
  return;
 uint workgroup_base = _GLF_IDENTITY(_GLF_struct_replacement_1.workgroup_size, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_struct_replacement_1.workgroup_size, ~ (~ (_GLF_IDENTITY(_GLF_struct_replacement_1.workgroup_size, _GLF_IDENTITY((_GLF_struct_replacement_1.workgroup_size) >> 0u, (true ? (_GLF_struct_replacement_1.workgroup_size) >> 0u : _GLF_FUZZED(subgroup_local_id)))))))), ((_GLF_IDENTITY(_GLF_struct_replacement_1.workgroup_size, ~ (~ (_GLF_IDENTITY(_GLF_struct_replacement_1.workgroup_size, (_GLF_IDENTITY(_GLF_struct_replacement_1.workgroup_size, ~ (~ (_GLF_struct_replacement_1.workgroup_size)))) >> _GLF_IDENTITY(0u, clamp(_GLF_IDENTITY(0u, clamp(0u, 0u, _GLF_IDENTITY(0u, (0u) * 1u))), _GLF_IDENTITY(0u, (0u) - 0u), _GLF_IDENTITY(0u, uint(uvec2(0u, 0u))))))))))) - 0u) / 1u) * workgroup_id;
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true)))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(_GLF_IDENTITY(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, true), bvec3(bvec3(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, true))))))))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 _GLF_struct_18 _GLF_struct_replacement_18 = _GLF_struct_18(ivec3(1), _GLF_struct_9(mat4(1.0), _GLF_struct_7(_GLF_IDENTITY(uvec4(1u), ~ (~ (uvec4(1u)))), mat4x2(_GLF_IDENTITY(1.0, min(1.0, 1.0))), _GLF_IDENTITY(bvec2(true), bvec2(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(bvec2(true), true), bvec3(bvec3(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(true), _GLF_IDENTITY(bvec2(bvec3(bvec2(true), true)), _GLF_IDENTITY(bvec2(bvec4(bvec2(bvec3(bvec2(true), true)), false, true)), bvec2(bvec4(bvec2(bvec4(bvec2(bvec3(bvec2(true), true)), false, true)), false, false))))), bvec2(bvec4(bvec2(true), false, false))), true)))), bvec3(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec2(true), _GLF_IDENTITY(_GLF_IDENTITY(bvec2(bvec3(bvec2(_GLF_IDENTITY(true, (true) || false)), false)), _GLF_IDENTITY(bvec2(bvec4(bvec2(bvec3(bvec2(_GLF_IDENTITY(true, (true) || false)), false)), false, false)), bvec2(bvec2(_GLF_IDENTITY(bvec2(bvec4(bvec2(bvec3(bvec2(_GLF_IDENTITY(true, (true) || false)), false)), false, false)), bvec2(bvec3(bvec2(bvec4(bvec2(bvec3(bvec2(_GLF_IDENTITY(true, (true) || false)), false)), false, false)), false))))))), bvec2(bvec4(_GLF_IDENTITY(bvec2(bvec3(_GLF_IDENTITY(bvec2(true), bvec2(bvec4(bvec2(true), true, false))), false)), _GLF_IDENTITY(bvec2(bvec3(bvec2(bvec3(bvec2(true), false)), true)), bvec2(bvec3(bvec2(bvec3(bvec2(bvec3(bvec2(true), false)), true)), true)))), false, false)))), true), bvec3(_GLF_IDENTITY(bvec3(bvec3(bvec2(true), true)), bvec3(bvec4(bvec3(bvec3(bvec2(true), true)), true))))), bvec3(bvec3(bvec3(bvec2(_GLF_IDENTITY(true, ! (! (true)))), true)))), true))))), mat3x2(1.0), uvec2(_GLF_IDENTITY(1u, (1u) | uint(_GLF_ZERO(0.0, injectionSwitch.x)))), bvec3(true)), _GLF_struct_8(bvec3(true), _GLF_IDENTITY(1, (1) ^ 0), mat2(1.0))), _GLF_struct_13(mat2(1.0), _GLF_struct_10(vec3(1.0), uvec2(_GLF_IDENTITY(1u, _GLF_IDENTITY((1u) - 0u, clamp((1u) - 0u, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((1u), _GLF_IDENTITY(~ (_GLF_IDENTITY(~ ((1u)), (_GLF_IDENTITY(true ? ~ ((1u)) : _GLF_FUZZED(_GLF_IDENTITY(subgroup_id, (subgroup_id) ^ _GLF_IDENTITY(0u, (0u) | 0u))), (true ? ~ ((1u)) : _GLF_FUZZED(_GLF_IDENTITY(subgroup_id, (subgroup_id) ^ _GLF_IDENTITY(0u, (0u) | 0u)))) << 0u)))), uint(_GLF_IDENTITY(uint(~ (_GLF_IDENTITY(~ ((1u)), (_GLF_IDENTITY(true ? ~ ((1u)) : _GLF_FUZZED(_GLF_IDENTITY(subgroup_id, (subgroup_id) ^ _GLF_IDENTITY(0u, (0u) | 0u))), (true ? ~ ((1u)) : _GLF_FUZZED(_GLF_IDENTITY(subgroup_id, (subgroup_id) ^ _GLF_IDENTITY(0u, (0u) | 0u)))) << 0u))))), ~ (~ (uint(~ (_GLF_IDENTITY(~ ((1u)), (_GLF_IDENTITY(true ? ~ ((1u)) : _GLF_FUZZED(_GLF_IDENTITY(subgroup_id, (subgroup_id) ^ _GLF_IDENTITY(0u, (0u) | 0u))), (true ? ~ ((1u)) : _GLF_FUZZED(_GLF_IDENTITY(subgroup_id, (subgroup_id) ^ _GLF_IDENTITY(0u, (0u) | 0u)))) << 0u))))))))))) - 0u, (_GLF_IDENTITY((1u) - 0u, (0u & 156459u) + (_GLF_IDENTITY((1u) - 0u, uint(_GLF_IDENTITY(uvec2((1u) - 0u, uint(_GLF_ZERO(0.0, injectionSwitch.x))), min(uvec2((1u) - 0u, uint(_GLF_ZERO(0.0, injectionSwitch.x))), uvec2((1u) - 0u, uint(_GLF_ZERO(0.0, injectionSwitch.x)))))))))) * uint(_GLF_ONE(1.0, injectionSwitch.y))), min(_GLF_IDENTITY(_GLF_IDENTITY((1u) - 0u, ((1u) - 0u) >> 0u), (_GLF_IDENTITY((1u) - 0u, ((1u) - 0u) | (_GLF_IDENTITY((1u) - 0u, clamp((1u) - 0u, (1u) - 0u, (1u) - 0u))))) * uint(_GLF_ONE(1.0, injectionSwitch.y))), _GLF_IDENTITY((1u) - 0u, _GLF_IDENTITY(((1u) - 0u), max(((1u) - 0u), ((1u) - 0u))) * uint(_GLF_ONE(1.0, injectionSwitch.y))))), (1u) - 0u)))), bvec2(_GLF_IDENTITY(true, _GLF_IDENTITY((_GLF_IDENTITY(true, ! (! _GLF_IDENTITY((_GLF_IDENTITY(true, ! (! (true)))), ((_GLF_IDENTITY(true, ! (! (true))))) && true)))), _GLF_IDENTITY((_GLF_IDENTITY((_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, ! (! (true))))))), ! _GLF_IDENTITY((! ((_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, ! (! (true))))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && ((! ((_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, ! (! (true))))))))))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true && ((_GLF_IDENTITY((_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, ! (! (true))))))), ! (! ((_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, ! (! (true))))))))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) && _GLF_IDENTITY(true, (true) || false))), vec3(1.0), uvec2(_GLF_IDENTITY(1u, (1u) ^ 0u))), _GLF_struct_11(uvec3(1u)), _GLF_struct_12(vec4(1.0), vec3(1.0))), _GLF_struct_17(_GLF_struct_14(bvec4(true), vec2(1.0)), _GLF_struct_15(mat4x2(1.0), mat2(1.0), 1.0, bvec3(_GLF_IDENTITY(true, (true) || _GLF_IDENTITY(false, (_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, true && (false))), false || (! (_GLF_IDENTITY(false, true && (false)))))))) && true))), vec4(1.0), mat3(1.0)), _GLF_struct_16(1u, vec3(1.0), bvec4(true), mat2(1.0), 1, 1.0, 1u), mat2x4(1.0), ivec2(1)), mat2(_GLF_IDENTITY(1.0, max(1.0, 1.0))), ivec3(1), subgroup_id * _GLF_struct_replacement_0.subgroup_size);
 uint virtual_gid = _GLF_IDENTITY(workgroup_base + _GLF_struct_replacement_18.subgroup_base + subgroup_local_id, (workgroup_base + _GLF_struct_replacement_18.subgroup_base + subgroup_local_id) | 0u);
 if(_GLF_DEAD(false))
  barrier();
 _GLF_struct_6 _GLF_struct_replacement_6 = _GLF_struct_6(_GLF_struct_3(uvec4(_GLF_IDENTITY(1u, (1u) | (1u))), vec2(_GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, float(vec4(1.0, 1.0, 0.0, 1.0))), _GLF_IDENTITY(1.0, 0.0 + (_GLF_IDENTITY(1.0, 1.0 * (1.0))))))), mat4x2(1.0), uvec3(1u), workgroup_base + _GLF_struct_replacement_18.subgroup_base + ((_GLF_IDENTITY(subgroup_local_id, min(subgroup_local_id, subgroup_local_id)) + 1) % _GLF_struct_replacement_0.subgroup_size), _GLF_struct_2(vec3(1.0), _GLF_IDENTITY(_GLF_IDENTITY(uvec3(1u), ~ (~ (uvec3(1u)))), (_GLF_IDENTITY(uvec3(1u), ~ (~ (uvec3(1u))))) | (_GLF_IDENTITY(uvec3(1u), ~ (~ (uvec3(1u)))))), ivec2(1), _GLF_IDENTITY(true, _GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false)) && true)) || (true), bool(_GLF_IDENTITY(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (true)), ! (! (bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (true))))))))), vec2(1.0)), _GLF_IDENTITY(ivec3(1), (false ? _GLF_FUZZED(ivec3(18566, 3189, -98322)) : ivec3(1))), uvec2(1u), _GLF_struct_5(_GLF_struct_4(mat4x3(1.0), true, _GLF_IDENTITY(uvec3(1u), uvec3(_GLF_IDENTITY(0u, clamp(_GLF_IDENTITY(0u, (0u) << (0u >> _GLF_IDENTITY(uint(2u), uint(2u)))), 0u, 0u)), 0u, 0u) ^ (uvec3(1u))), mat2x4(1.0), bvec3(_GLF_IDENTITY(true, ! _GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), bool(bvec3(! _GLF_IDENTITY((true), ! (! (_GLF_IDENTITY((true), ! (! ((true))))))), true, true)))))), (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(true, false || (true))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(! (true), bool(_GLF_IDENTITY(bool(! (true)), ! (! (bool(! (true)))))))), (bool(! (true))) || false)), ! (! (bool(_GLF_IDENTITY(bool(! (true)), _GLF_IDENTITY((bool(! (true))), ! (! ((bool(! _GLF_IDENTITY((true), false || ((true)))))))) || false)))))), bool(bvec3(! (true), true, true))))), false || (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), bool(bvec3(! (true), true, true))))), false || (_GLF_IDENTITY(_GLF_IDENTITY(true, (_GLF_IDENTITY(true, (true) && true)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), ! (_GLF_IDENTITY(! (true), bool(bvec3(! _GLF_IDENTITY((true), bool(bvec3((true), true, true))), true, true))))))), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), bool(bvec3(! (true), true, true))))), false || (_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), bool(bvec3(! (true), true, true)))))))) && true, ! (! ((_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), bool(bvec3(! (true), _GLF_IDENTITY(true, ! (! (true))), true)))))) && true)))))), bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(_GLF_IDENTITY(! (true), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(! (true)), (bool(_GLF_IDENTITY(! (true), bool(bvec4(! (true), false, true, true))))) || false)), ! (! (bool(_GLF_IDENTITY(bool(! (true)), (bool(! (true))) || false)))))), bool(bvec3(! (true), true, true))))), false || (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), bool(bvec3(! (true), _GLF_IDENTITY(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(true, (true) && true))), true))))), false || (_GLF_IDENTITY(_GLF_IDENTITY(true, (_GLF_IDENTITY(true, (true) && _GLF_IDENTITY(true, bool(bvec3(true, false, true))))) && _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(_GLF_IDENTITY(vec3(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)), 1.0), vec3(mat4x3(vec3(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)), 1.0), 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 0.0, tan(0.0), 0.0, 1.0, 0.0, 0.0)))), abs(vec2(1.0, 1.0)) * (_GLF_IDENTITY(vec2(_GLF_IDENTITY(vec3(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)), 1.0), vec3(mat4x3(vec3(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)), 1.0), 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 0.0, tan(0.0), 0.0, 1.0, 0.0, 0.0)))), (vec2(_GLF_IDENTITY(vec3(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)), 1.0), vec3(mat4x3(vec3(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)), 1.0), 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 0.0, tan(0.0), 0.0, 1.0, 0.0, 0.0))))) / vec2(1.0, 1.0))))).y), ! (! ((injectionSwitch.x < injectionSwitch.y)))))), ! (_GLF_IDENTITY(! (true), bool(bvec3(! (true), true, true))))))), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), bool(bvec3(! (true), true, true))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), bool(bvec3(! (true), true, true)))))), bool(bvec2(! (_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), bool(bvec3(! (true), true, true)))))), true)))))) && true, ! (! (_GLF_IDENTITY((_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! _GLF_IDENTITY((true), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY((true), ((true)) && true))), bool(bvec3(! (true), true, true)))))) && true, ((_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(true, false || (true)), false)), true && (bool(bvec2(_GLF_IDENTITY(true, false || (true)), false)))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY((true), ((true)) && true))), bool(bvec3(! (_GLF_IDENTITY(true, (true) && true)), true, true)))))) && true) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))))))))) || false)), true && ((_GLF_IDENTITY(! (_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), bool(bvec3(! _GLF_IDENTITY((true), ! (! (_GLF_IDENTITY((true), ! (! ((true))))))), true, true)))))), (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(true, false || (true))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(! (true), bool(_GLF_IDENTITY(bool(! (true)), ! (! (bool(! (true)))))))), (bool(! (true))) || false)), ! (! (bool(_GLF_IDENTITY(bool(! (true)), _GLF_IDENTITY((bool(! (true))), ! (! ((bool(! _GLF_IDENTITY((true), false || ((true)))))))) || false)))))), bool(bvec3(! (true), true, true))))), false || (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), bool(bvec3(! (true), true, true))))), false || (_GLF_IDENTITY(_GLF_IDENTITY(true, (_GLF_IDENTITY(true, (true) && true)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), ! (_GLF_IDENTITY(! (true), bool(bvec3(! _GLF_IDENTITY((true), bool(bvec3((true), true, true))), true, true))))))), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), bool(bvec3(! (true), true, true))))), false || (_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), bool(bvec3(! (true), true, true)))))))) && true, ! (! ((_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), bool(bvec3(! (true), _GLF_IDENTITY(true, ! (! (true))), true)))))) && true)))))), bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(_GLF_IDENTITY(! (true), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(! (true)), (bool(_GLF_IDENTITY(! (true), bool(bvec4(! (true), false, true, true))))) || false)), ! (! (bool(_GLF_IDENTITY(bool(! (true)), (bool(! (true))) || false)))))), bool(bvec3(! (true), true, true))))), false || (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), bool(bvec3(! (true), _GLF_IDENTITY(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(true, (true) && true))), true))))), false || (_GLF_IDENTITY(_GLF_IDENTITY(true, (_GLF_IDENTITY(true, (true) && _GLF_IDENTITY(true, bool(bvec3(true, false, true))))) && _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(_GLF_IDENTITY(vec3(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)), 1.0), vec3(mat4x3(vec3(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)), 1.0), 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 0.0, tan(0.0), 0.0, 1.0, 0.0, 0.0)))), abs(vec2(1.0, 1.0)) * (_GLF_IDENTITY(vec2(_GLF_IDENTITY(vec3(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)), 1.0), vec3(mat4x3(vec3(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)), 1.0), 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 0.0, tan(0.0), 0.0, 1.0, 0.0, 0.0)))), (vec2(_GLF_IDENTITY(vec3(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)), 1.0), vec3(mat4x3(vec3(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)), 1.0), 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 0.0, tan(0.0), 0.0, 1.0, 0.0, 0.0))))) / vec2(1.0, 1.0))))).y), ! (! ((injectionSwitch.x < injectionSwitch.y)))))), ! (_GLF_IDENTITY(! (true), bool(bvec3(! (true), true, true))))))), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), bool(bvec3(! (true), true, true))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), bool(bvec3(! (true), true, true)))))), bool(bvec2(! (_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), bool(bvec3(! (true), true, true)))))), true)))))) && true, ! (! (_GLF_IDENTITY((_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! _GLF_IDENTITY((true), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY((true), ((true)) && true))), bool(bvec3(! (true), true, true)))))) && true, ((_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(true, false || (true)), false)), true && (bool(bvec2(_GLF_IDENTITY(true, false || (true)), false)))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY((true), ((true)) && true))), bool(bvec3(! (_GLF_IDENTITY(true, (true) && true)), true, true)))))) && true) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))))))))) || false)))))), mat4x2(1.0), vec3(1.0))));
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(bvec2(! ((injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false || (bool(bvec2(! ((injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), (! ((injectionSwitch.x > injectionSwitch.y))) && true), (_GLF_IDENTITY(_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), (! ((injectionSwitch.x > injectionSwitch.y))) && true), bool(bvec3(_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), (! ((injectionSwitch.x > injectionSwitch.y))) && true), _GLF_IDENTITY(true, bool(bvec2(_GLF_IDENTITY(true, ! (! (true))), false))), false)))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED((-305.888 * -630.152)), _GLF_FUZZED(-3.7)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))), _GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)))).y)), (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED((-305.888 * _GLF_IDENTITY(-630.152, mix(float(-630.152), float(_GLF_FUZZED(5.9)), bool(false))))), _GLF_FUZZED(-3.7)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))), _GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)))).y))) && true)))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, true && (false)), true, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))))), true && (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))))))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0)))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false), bvec3(bvec4(bvec3((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), float(float(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x))))), _GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), _GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)))) > injectionSwitch.y), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false), _GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, _GLF_IDENTITY(! (! (true)), _GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, bool(bool(false))))) || (_GLF_IDENTITY(! (! (true)), ! (_GLF_IDENTITY(! (! (! _GLF_IDENTITY((true), _GLF_IDENTITY(bool(bool((true))), bool(bool(bool(bool((true))))))))), (! _GLF_IDENTITY((! (! (true))), (_GLF_IDENTITY((! (! (true))), ((! (! (true)))) && true)) || false)) || false)))))))))))), (bool(_GLF_IDENTITY(bvec3((injectionSwitch.x > injectionSwitch.y), _GLF_FALSE(false, _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(bool(bvec4((injectionSwitch.x > injectionSwitch.y), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, true)), bool(bvec3(bool(bvec4((injectionSwitch.x > injectionSwitch.y), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, true)), true, false))))), false), bvec3(bvec4(bvec3((injectionSwitch.x > injectionSwitch.y), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false), _GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, _GLF_IDENTITY(! (! (true)), false || (_GLF_IDENTITY(! (! (true)), ! (_GLF_IDENTITY(! (! (! (true))), (_GLF_IDENTITY(! (! (! (true))), true && (_GLF_IDENTITY(! (! (! (true))), bool(bool(_GLF_IDENTITY(! (! (! (true))), ! (! (! (! (! (true)))))))))))) || false))))))))))))) || _GLF_IDENTITY(false, true && (false)))), true), bvec2(bvec2(bvec2(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(3043.0647))) > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(6.7), (injectionSwitch)[1]), vec2(_GLF_IDENTITY((injectionSwitch)[0], min((injectionSwitch)[_GLF_IDENTITY(0, int(int(0)))], _GLF_IDENTITY((injectionSwitch)[_GLF_IDENTITY(0, min(_GLF_IDENTITY(0, (0) ^ 0), 0))], ((injectionSwitch)[0]) - 0.0))), _GLF_FUZZED(280.075)), bvec2(true, false))).y, _GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(injectionSwitch[0], injectionSwitch[1]), vec2(0.0, 0.0) + (vec2(injectionSwitch[0], injectionSwitch[1]))))) - vec2(0.0, 0.0)).y))))))) || (injectionSwitch.x > injectionSwitch.y))), bool(_GLF_IDENTITY(bvec3((_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)))).y, bool(bvec4(injectionSwitch.x > injectionSwitch.y, true, false, true)))), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false))), false), bvec3(bvec4(bvec3((_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * _GLF_IDENTITY(_GLF_IDENTITY(dot(vec2(1.0, determinant(mat4(0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-447.267)))))), vec2(_GLF_IDENTITY(1.0, float(mat2x3(1.0, 0.0, 0.0, 0.0, 0.0, 1.0))), 0.0)), max(dot(vec2(1.0, determinant(mat4(0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0))), vec2(1.0, 0.0)), dot(vec2(1.0, determinant(mat4(0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0))), vec2(1.0, 0.0)))), dot(_GLF_IDENTITY(vec2(1.0, determinant(mat4(0.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)), 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0))), min(_GLF_IDENTITY(_GLF_IDENTITY(vec2(1.0, determinant(_GLF_IDENTITY(mat4(0.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)), 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0), (mat4(0.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)), 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0)) + mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)))), vec2(0.0, 0.0) + (vec2(1.0, determinant(_GLF_IDENTITY(mat4(0.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)), 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0), (mat4(0.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)), 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0)) + mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)))))), max(vec2(1.0, determinant(mat4(0.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)), 1.0, 0.0, 0.0, _GLF_IDENTITY(0.0, 0.0 + (0.0)), 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(0.0, (0.0) / 1.0), 0.0, 0.0, 0.0))), vec2(1.0, determinant(mat4(0.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)), 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, _GLF_IDENTITY(0.0, float(_GLF_IDENTITY(mat3(0.0, 0.0, 0.0, abs(tan(0.0)), round(length(normalize(abs(vec3(1.0, 1.0, 1.0))))), 1.0, 0.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y)), mat3(mat4(mat3(0.0, 0.0, 0.0, abs(tan(0.0)), round(length(normalize(abs(vec3(1.0, 1.0, 1.0))))), 1.0, 0.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y))))))), 0.0, 1.0, 0.0, 0.0, 0.0, 0.0))))), vec2(1.0, determinant(mat4(0.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)), 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 0.0, 0.0))))), vec2(1.0, 0.0)))) > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).y, (_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).y) * sqrt(1.0))), _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false), true))))), true))))), (_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y), bool(_GLF_IDENTITY(bvec3((injectionSwitch.x > injectionSwitch.y), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false), bvec3(bvec4(bvec3((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true, false))), false), _GLF_IDENTITY(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(true, (true) && true)))))))), true), bvec2(bvec2(bvec2(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y, false || (_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED((+ -1.3))), float(injectionSwitch.x), bool(true))), injectionSwitch.x)) > injectionSwitch.y))), bool(_GLF_IDENTITY(bvec3((injectionSwitch.x > injectionSwitch.y), _GLF_FALSE(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), bool(bvec2(false, false))))), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bvec3(injectionSwitch.x > injectionSwitch.y, false, false)), ! (! (bool(bvec3(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0) > injectionSwitch.y, false, false)))))))), false), bvec3(bvec4(bvec3((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), _GLF_IDENTITY(float(_GLF_FUZZED(-9.1)), float(mat3(_GLF_IDENTITY(float(_GLF_FUZZED(-9.1)), (float(_GLF_FUZZED(-9.1))) * 1.0), 0.0, 0.0, cos(0.0), 0.0, 0.0, 0.0, 1.0, abs(1.0)))), bool(false)))), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > injectionSwitch.y)), false), true))))), true))))), bool(_GLF_IDENTITY(bvec3(bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y), bool(_GLF_IDENTITY(bvec3((injectionSwitch.x > injectionSwitch.y), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false), bvec3(bvec4(bvec3((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true, false))), false), _GLF_IDENTITY(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(true, (true) && true)))))))), true), bvec2(bvec2(bvec2(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y, false || (_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED((+ -1.3))), float(injectionSwitch.x), bool(true))), injectionSwitch.x)) > injectionSwitch.y))), bool(_GLF_IDENTITY(bvec3((injectionSwitch.x > injectionSwitch.y), _GLF_FALSE(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), bool(bvec2(false, false))))), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bvec3(injectionSwitch.x > injectionSwitch.y, false, false)), ! (! (bool(bvec3(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0) > injectionSwitch.y, false, false)))))))), false), bvec3(bvec4(bvec3((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), _GLF_IDENTITY(float(_GLF_FUZZED(-9.1)), float(mat3(_GLF_IDENTITY(float(_GLF_FUZZED(-9.1)), (float(_GLF_FUZZED(-9.1))) * 1.0), 0.0, 0.0, cos(0.0), 0.0, 0.0, 0.0, 1.0, abs(1.0)))), bool(false)))), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > injectionSwitch.y)), false), true))))), true))))), true, false), bvec3(bvec4(bvec3(bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y), bool(_GLF_IDENTITY(bvec3((injectionSwitch.x > injectionSwitch.y), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false), bvec3(bvec4(bvec3((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true, false))), false), _GLF_IDENTITY(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(true, (true) && true)))))))), true), bvec2(bvec2(bvec2(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y, false || (_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED((+ -1.3))), float(injectionSwitch.x), bool(true))), injectionSwitch.x)) > injectionSwitch.y))), bool(_GLF_IDENTITY(bvec3((injectionSwitch.x > injectionSwitch.y), _GLF_FALSE(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), bool(bvec2(false, false))))), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bvec3(injectionSwitch.x > injectionSwitch.y, false, false)), ! (! (bool(bvec3(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0) > injectionSwitch.y, false, false)))))))), false), bvec3(bvec4(bvec3((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), _GLF_IDENTITY(float(_GLF_FUZZED(-9.1)), float(mat3(_GLF_IDENTITY(float(_GLF_FUZZED(-9.1)), (float(_GLF_FUZZED(-9.1))) * 1.0), 0.0, 0.0, cos(0.0), 0.0, 0.0, 0.0, 1.0, abs(1.0)))), bool(false)))), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > injectionSwitch.y)), false), true))))), true))))), true, false), true)))))) && true)))))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(injectionSwitch.x > injectionSwitch.y, true, true, false)))))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && _GLF_IDENTITY(true, true && (true)))))
      return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(! (! (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))), bool(_GLF_IDENTITY(bvec2(! (! (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec2(bvec4(bvec2(! (! (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false, false)))))))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        return;
      }
     return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y))))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 atomicStore(buf[virtual_gid], uint(1), 4, _GLF_IDENTITY(64, max(_GLF_IDENTITY(64, (64) ^ 0), 64)), 4);
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_IDENTITY((subgroup_local_id % 2), _GLF_IDENTITY(uint(uvec3((subgroup_local_id % 2), _GLF_IDENTITY(1u, (1u) - 0u), 1u)), 0u ^ (_GLF_IDENTITY(uint(uvec3((_GLF_IDENTITY(subgroup_local_id % 2, 0u | (subgroup_local_id % 2))), 1u, 1u)), (uint(uvec3((subgroup_local_id % 2), 1u, 1u))) | (uint(uvec3((_GLF_IDENTITY(subgroup_local_id, 1u * (subgroup_local_id)) % 2), 1u, 1u))))))) == _GLF_IDENTITY(_GLF_IDENTITY(0, 0 | _GLF_IDENTITY((0), ((0)) >> 0)), (_GLF_IDENTITY(0, 0 | _GLF_IDENTITY((0), ((0)) >> 0))) << 0))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   subgroupAll(_GLF_IDENTITY(true, (_GLF_IDENTITY(true, (true) && true)) && true));
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   atomicStore(buf[_GLF_IDENTITY(_GLF_struct_replacement_6._f0.next_virtual_gid, min(_GLF_IDENTITY(_GLF_struct_replacement_6._f0.next_virtual_gid, (_GLF_struct_replacement_6._f0.next_virtual_gid) ^ 0u), _GLF_struct_replacement_6._f0.next_virtual_gid))], uint(2), 4, _GLF_IDENTITY(64, _GLF_IDENTITY(int(int(_GLF_IDENTITY(64, (64) * 1))), max(_GLF_IDENTITY(int(int(_GLF_IDENTITY(64, (64) * 1))), 0 | (int(int(_GLF_IDENTITY(64, (64) * 1))))), int(int(_GLF_IDENTITY(64, (64) * 1)))))), 4);
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(4567.3125), _GLF_FUZZED(12.94)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))))).y))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         return;
        }
       barrier();
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) || false)) && true)))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       return;
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        return;
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)), min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)), (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0))) + vec2(0.0, 0.0)), _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)))), _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch))))) * vec2(1.0, 1.0)).y))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))))), float(_GLF_FUZZED(-6.0)), bool(false))))), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))))), float(_GLF_FUZZED(-6.0)), bool(false))))), ! (! (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))))), float(_GLF_FUZZED(-6.0)), bool(false)))))))))))))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            barrier();
           return;
          }
         barrier();
        }
       barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
  }
 else
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   subgroupAll(false);
   atomicStore(buf[_GLF_struct_replacement_6._f0.next_virtual_gid], _GLF_IDENTITY(uint(_GLF_IDENTITY(2, _GLF_IDENTITY(_GLF_IDENTITY(0, clamp(0, 0, 0)) + (_GLF_IDENTITY(2, max(2, _GLF_IDENTITY(2, (true ? 2 : _GLF_FUZZED(20538)))))), (_GLF_IDENTITY(0, clamp(0, 0, 0)) + (_GLF_IDENTITY(2, max(2, _GLF_IDENTITY(2, (true ? 2 : _GLF_FUZZED(20538))))))) | (_GLF_IDENTITY(0, clamp(0, 0, 0)) + (_GLF_IDENTITY(2, max(2, _GLF_IDENTITY(2, (true ? 2 : _GLF_FUZZED(20538)))))))))), (uint(_GLF_IDENTITY(2, _GLF_IDENTITY(_GLF_IDENTITY(0, clamp(0, 0, 0)) + (_GLF_IDENTITY(2, max(2, _GLF_IDENTITY(2, (true ? 2 : _GLF_FUZZED(20538)))))), (_GLF_IDENTITY(0, clamp(0, 0, 0)) + (_GLF_IDENTITY(2, max(2, _GLF_IDENTITY(2, (true ? 2 : _GLF_FUZZED(20538))))))) | (_GLF_IDENTITY(0, clamp(0, 0, 0)) + (_GLF_IDENTITY(2, max(2, _GLF_IDENTITY(2, (true ? 2 : _GLF_FUZZED(20538))))))))))) / 1u), _GLF_IDENTITY(4, clamp(4, 4, 4)), _GLF_IDENTITY(64, (_GLF_IDENTITY(64, 0 | (_GLF_IDENTITY(64, (true ? _GLF_IDENTITY(64, (true ? 64 : _GLF_FUZZED(-93684))) : _GLF_FUZZED(33808)))))) | (_GLF_IDENTITY(_GLF_IDENTITY(64, (64) + _GLF_IDENTITY(0, max(0, 0))), max(64, 64)))), 4);
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(injectionSwitch.x > injectionSwitch.y, false))), false))))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_FALSE(_GLF_IDENTITY(false, (false) && true), (injectionSwitch.x > injectionSwitch.y))), ! (! (bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), (bool(_GLF_IDENTITY(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (_GLF_IDENTITY(! (bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), _GLF_IDENTITY((_GLF_IDENTITY(! (bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true && (! (bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), bool(bvec4((_GLF_IDENTITY(! (bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true && (! (bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))) && true))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, (false) || false)))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, (false) && true)))))
      barrier();
     return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, false, true), bvec3(bvec3(_GLF_IDENTITY(bvec3(false, false, true), bvec3(bvec3(bvec3(false, false, true)))))))))))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y), ! (! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y)))))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     barrier();
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_IDENTITY(_GLF_FUZZED(847.537), max(_GLF_FUZZED(847.537), _GLF_FUZZED(847.537))) : injectionSwitch.x)) > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
    }
   return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, bool(bool(false))), false)))))
        barrier();
       return;
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       return;
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
          return;
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            {
             if(_GLF_DEAD(false))
              barrier();
             return;
            }
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
         barrier();
        }
       barrier();
      }
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
      barrier();
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(false, bool(bvec3(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))) || (false))))
    return;
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
}
