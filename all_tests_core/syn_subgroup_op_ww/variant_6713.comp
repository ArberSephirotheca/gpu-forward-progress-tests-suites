#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
#extension GL_EXT_maximal_reconvergence : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))), true, true, false))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(bvec3(false, false, false))))))))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   for(int _injected_loop_counter = (0 | 0); _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
    {
     return;
    }
  }
 uint subgroup_size = gl_SubgroupSize;
 uint subgroup_local_id = gl_SubgroupInvocationID;
 uint num_workgroup = _GLF_IDENTITY(gl_NumWorkGroups.x, _GLF_IDENTITY(~ (~ _GLF_IDENTITY((gl_NumWorkGroups.x), (_GLF_IDENTITY((gl_NumWorkGroups.x), ((gl_NumWorkGroups.x)) >> uint(_GLF_ZERO(0.0, injectionSwitch.x)))) >> 0u)), _GLF_IDENTITY(0u, max(_GLF_IDENTITY(0u, (0u) | (0u)), 0u)) ^ _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(~ (~ _GLF_IDENTITY((gl_NumWorkGroups.x), ((gl_NumWorkGroups.x)) | ((gl_NumWorkGroups.x)))), ~ (~ (~ (~ (gl_NumWorkGroups.x)))))), ((_GLF_IDENTITY(~ (~ _GLF_IDENTITY((gl_NumWorkGroups.x), ((gl_NumWorkGroups.x)) | ((gl_NumWorkGroups.x)))), ~ (~ (~ (~ (gl_NumWorkGroups.x))))))) + _GLF_IDENTITY(0u, (false ? _GLF_FUZZED(subgroup_local_id) : 0u))), min(_GLF_IDENTITY((_GLF_IDENTITY(~ (~ _GLF_IDENTITY((gl_NumWorkGroups.x), ((gl_NumWorkGroups.x)) | ((gl_NumWorkGroups.x)))), ~ (~ (~ (~ (gl_NumWorkGroups.x)))))), ((_GLF_IDENTITY(~ (~ _GLF_IDENTITY((gl_NumWorkGroups.x), ((gl_NumWorkGroups.x)) | ((gl_NumWorkGroups.x)))), ~ (~ (~ (~ (gl_NumWorkGroups.x))))))) + _GLF_IDENTITY(0u, (false ? _GLF_FUZZED(subgroup_local_id) : 0u))), _GLF_IDENTITY((_GLF_IDENTITY(~ (~ _GLF_IDENTITY((gl_NumWorkGroups.x), ((gl_NumWorkGroups.x)) | (_GLF_IDENTITY((gl_NumWorkGroups.x), uint(uvec4(_GLF_IDENTITY((gl_NumWorkGroups.x), (_GLF_IDENTITY((gl_NumWorkGroups.x), ((gl_NumWorkGroups.x)) | ((gl_NumWorkGroups.x)))) >> 0u), 1u, uint(_GLF_ZERO(0.0, injectionSwitch.x)), 1u)))))), ~ (~ (~ (~ (gl_NumWorkGroups.x)))))), ((_GLF_IDENTITY(~ (~ _GLF_IDENTITY((gl_NumWorkGroups.x), ((gl_NumWorkGroups.x)) | ((gl_NumWorkGroups.x)))), ~ (~ (~ (~ (gl_NumWorkGroups.x))))))) + _GLF_IDENTITY(0u, (false ? _GLF_FUZZED(subgroup_local_id) : 0u)))))));
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 uint workgroup_size = gl_WorkGroupSize.x;
 uint workgroup_id = gl_WorkGroupID.x;
 uint workgroup_base = workgroup_size * workgroup_id;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), (false) && true), (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(_GLF_IDENTITY(false, (false) && true), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY((injectionSwitch.y) - 0.0, min(_GLF_IDENTITY((injectionSwitch.y) - 0.0, clamp((injectionSwitch.y) - 0.0, (injectionSwitch.y) - 0.0, (injectionSwitch.y) - 0.0)), _GLF_IDENTITY((injectionSwitch.y) - 0.0, ((injectionSwitch.y) - 0.0) + 0.0))))))) && true), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, (false) && true), (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(_GLF_IDENTITY(false, (false) && true), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0)))) && true)), (bool(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, (false) && true), (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(_GLF_IDENTITY(false, (false) && true), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0)))) && true))) || false)))))
  {
   if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))) - sqrt(0.0))))))
    {
    }
   else
    {
     return;
     if(_GLF_DEAD(false))
      return;
    }
  }
 uint subgroup_base = _GLF_IDENTITY(subgroup_id, (false ? _GLF_FUZZED(subgroup_local_id) : subgroup_id)) * subgroup_size;
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, false, true)))))
  {
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
    }
   else
    {
     return;
    }
  }
 uint virtual_gid = _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, uint(uvec2(_GLF_IDENTITY(workgroup_base, 0u ^ (workgroup_base)), 1u))), 0u | _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, uint(uvec2(_GLF_IDENTITY(workgroup_base, 0u ^ (_GLF_IDENTITY(workgroup_base, 0u ^ (workgroup_base)))), 1u))), (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, uint(uvec2(_GLF_IDENTITY(workgroup_base, 0u ^ (_GLF_IDENTITY(workgroup_base, 0u ^ (workgroup_base)))), 1u))), (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, uint(uvec2(_GLF_IDENTITY(workgroup_base, 0u ^ (_GLF_IDENTITY(workgroup_base, 0u ^ (workgroup_base)))), 1u))), ~ (~ (_GLF_IDENTITY(workgroup_base, uint(uvec2(_GLF_IDENTITY(workgroup_base, 0u ^ (_GLF_IDENTITY(workgroup_base, 0u ^ (workgroup_base)))), 1u))))))) - 0u)) | 0u)), min((_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, uint(uvec2(_GLF_IDENTITY(workgroup_base, 0u ^ (_GLF_IDENTITY(workgroup_base, 0u ^ (workgroup_base)))), 1u))), (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, uint(uvec2(_GLF_IDENTITY(workgroup_base, 0u ^ (_GLF_IDENTITY(workgroup_base, 0u ^ (workgroup_base)))), 1u))), (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, uint(uvec2(_GLF_IDENTITY(workgroup_base, 0u ^ (_GLF_IDENTITY(workgroup_base, 0u ^ (workgroup_base)))), 1u))), ~ (~ (_GLF_IDENTITY(workgroup_base, uint(uvec2(_GLF_IDENTITY(workgroup_base, 0u ^ (_GLF_IDENTITY(workgroup_base, 0u ^ (workgroup_base)))), 1u))))))) - 0u)) | 0u)), (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, uint(uvec2(_GLF_IDENTITY(workgroup_base, 0u ^ (_GLF_IDENTITY(workgroup_base, 0u ^ (workgroup_base)))), 1u))), (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, uint(uvec2(_GLF_IDENTITY(workgroup_base, 0u ^ (_GLF_IDENTITY(workgroup_base, 0u ^ (workgroup_base)))), 1u))), (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, uint(uvec2(_GLF_IDENTITY(workgroup_base, 0u ^ (_GLF_IDENTITY(workgroup_base, 0u ^ (workgroup_base)))), 1u))), ~ (~ (_GLF_IDENTITY(workgroup_base, uint(uvec2(_GLF_IDENTITY(workgroup_base, 0u ^ (_GLF_IDENTITY(workgroup_base, 0u ^ (workgroup_base)))), 1u))))))) - 0u)) | 0u))))) + subgroup_base, (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, uint(uvec2(_GLF_IDENTITY(workgroup_base, 0u ^ (workgroup_base)), 1u))), _GLF_IDENTITY(0u, (0u) + 0u) | (_GLF_IDENTITY(workgroup_base, uint(uvec2(_GLF_IDENTITY(workgroup_base, 0u ^ (_GLF_IDENTITY(workgroup_base, 0u ^ (workgroup_base)))), 1u))))) + subgroup_base) | (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, uint(uvec2(_GLF_IDENTITY(workgroup_base, 0u ^ (workgroup_base)), 1u))), 0u | (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, ~ (~ (workgroup_base))), uint(uvec2(_GLF_IDENTITY(workgroup_base, 0u ^ (_GLF_IDENTITY(workgroup_base, 0u ^ (workgroup_base)))), 1u))))) + subgroup_base)) + subgroup_local_id;
 uint next_virtual_gid = _GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_base, (subgroup_base) / 1u) + (_GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, ((subgroup_local_id + 1) % subgroup_size) >> 0u), clamp(_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, ((subgroup_local_id + _GLF_IDENTITY(1, clamp(1, 1, 1))) % subgroup_size) >> 0u), _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (false ? _GLF_FUZZED(num_workgroup) : subgroup_local_id)) + 1, 0u ^ (_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) - 0u)))) % subgroup_size, ((subgroup_local_id + 1) % subgroup_size) >> 0u), 0u ^ (_GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, (_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, _GLF_IDENTITY(min((subgroup_local_id + 1) % subgroup_size, (subgroup_local_id + 1) % subgroup_size), ~ (~ (min((subgroup_local_id + 1) % _GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, (subgroup_size) | (subgroup_size))) | (subgroup_size)), (subgroup_local_id + 1) % subgroup_size)))))) / 1u), _GLF_IDENTITY(((subgroup_local_id + 1) % subgroup_size) >> 0u, 0u ^ (((subgroup_local_id + 1) % subgroup_size) >> 0u))))), _GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id + 1, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1, ~ (~ (subgroup_local_id + 1))), (_GLF_IDENTITY(subgroup_local_id + 1, ~ (~ (_GLF_IDENTITY(subgroup_local_id, (true ? subgroup_local_id : _GLF_FUZZED(uvec3(42607u, 41823u, 199592u).x))) + 1)))) / 1u)), (~ (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(subgroup_local_id + 1, 0u | (subgroup_local_id + 1)) : _GLF_FUZZED(workgroup_base))), ~ (~ (subgroup_local_id + 1))))) * 1u)))) % subgroup_size, ((_GLF_IDENTITY(subgroup_local_id + 1, 0u ^ (subgroup_local_id + 1))) % subgroup_size) >> 0u)))), clamp(workgroup_base + _GLF_IDENTITY(subgroup_base, 0u ^ (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_base, (subgroup_base) / 1u), max(subgroup_base, subgroup_base)))) + (_GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, _GLF_IDENTITY(((subgroup_local_id + 1) % subgroup_size), (_GLF_IDENTITY(((subgroup_local_id + 1) % subgroup_size), (((subgroup_local_id + 1) % subgroup_size)) << 0u)) / uint(_GLF_ONE(1.0, injectionSwitch.y))) >> 0u), clamp(_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, ((_GLF_IDENTITY(subgroup_local_id, (true ? _GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | (subgroup_local_id)) : _GLF_FUZZED(subgroup_id))) + 1) % subgroup_size) >> _GLF_IDENTITY(_GLF_IDENTITY(0u, ~ (~ (0u))), (_GLF_IDENTITY(_GLF_IDENTITY(0u, ~ (~ (0u))), max(_GLF_IDENTITY(_GLF_IDENTITY(0u, ~ (~ (0u))), (_GLF_IDENTITY(0u, ~ (~ (0u)))) * 1u), _GLF_IDENTITY(0u, ~ (~ (0u)))))) / _GLF_IDENTITY(1u, clamp(1u, 1u, 1u)))), _GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id + 1, (_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) >> 0u)) | (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | (subgroup_local_id)) + 1))), ((_GLF_IDENTITY(subgroup_local_id + 1, (_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) >> 0u)) | (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | (subgroup_local_id)) + 1)))) / 1u) % subgroup_size) >> 0u), 0u ^ (_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, ((subgroup_local_id + 1) % subgroup_size) >> 0u))), _GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, (_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, ~ (~ ((subgroup_local_id + 1) % subgroup_size)))) >> 0u)))), _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + subgroup_base, max(workgroup_base + subgroup_base, workgroup_base + subgroup_base)) + (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) + (0u >> _GLF_IDENTITY(uint(1u), uint(1u))))) % subgroup_size, ((subgroup_local_id + 1) % subgroup_size) >> 0u), clamp(_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, ((subgroup_local_id + 1) % subgroup_size) >> 0u), _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) ^ 0u) + 1) % subgroup_size, ((subgroup_local_id + 1) % subgroup_size) >> 0u), 0u ^ (_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, ((_GLF_IDENTITY(subgroup_local_id, 0u + (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) / 1u))) + 1) % subgroup_size) >> 0u))), _GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, max((subgroup_local_id + 1) % subgroup_size, _GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, ((subgroup_local_id + 1) % subgroup_size) << 0u))), ((subgroup_local_id + 1) % subgroup_size) >> 0u))), (true ? _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) + (0u >> _GLF_IDENTITY(uint(1u), _GLF_IDENTITY(uint(1u), (uint(1u)) >> 0u))))) % subgroup_size, ((subgroup_local_id + 1) % subgroup_size) >> 0u), clamp(_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, ((_GLF_IDENTITY(subgroup_local_id + 1, min(subgroup_local_id + 1, subgroup_local_id + 1))) % subgroup_size) >> 0u), _GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, ((subgroup_local_id + 1) % subgroup_size) >> 0u), _GLF_IDENTITY(0u, (0u >> _GLF_IDENTITY(uint(6u), uint(6u))) + (0u)) ^ (_GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, ((subgroup_local_id + 1) % subgroup_size) / (1u & 1u)), ((subgroup_local_id + 1) % _GLF_IDENTITY(subgroup_size, 0u ^ (subgroup_size))) >> 0u))), _GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, _GLF_IDENTITY(max((subgroup_local_id + 1) % subgroup_size, _GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, ((subgroup_local_id + 1) % subgroup_size) << 0u)), (max((subgroup_local_id + 1) % subgroup_size, _GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, ((subgroup_local_id + 1) % subgroup_size) << 0u))) / 1u)), _GLF_IDENTITY(((subgroup_local_id + 1) % subgroup_size), max(((subgroup_local_id + 1) % subgroup_size), ((subgroup_local_id + 1) % subgroup_size))) >> 0u))) : _GLF_IDENTITY(_GLF_FUZZED((workgroup_id ++)), (_GLF_FUZZED((workgroup_id ++))) + 0u)))), (workgroup_base + subgroup_base + (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id + 1, clamp(subgroup_local_id + 1, subgroup_local_id + 1, subgroup_local_id + _GLF_IDENTITY(1, (1) ^ (1 ^ 1))))) % subgroup_size, ((subgroup_local_id + 1) % subgroup_size) >> 0u), clamp(_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, ((subgroup_local_id + 1) % subgroup_size) >> 0u), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, max((subgroup_local_id + 1) % subgroup_size, (subgroup_local_id + 1) % subgroup_size)), ((subgroup_local_id + 1) % subgroup_size) >> 0u), 0u ^ (_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, ((_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) | (subgroup_local_id + 1))) % subgroup_size) >> 0u))), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id + _GLF_IDENTITY(1, max(1, _GLF_IDENTITY(1, min(1, 1))))) % subgroup_size, (_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, ~ (~ ((subgroup_local_id + 1) % subgroup_size)))), (~ (_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, ~ (~ ((subgroup_local_id + 1) % subgroup_size))))) >> 0u)))) >> 0u), _GLF_IDENTITY(0u, clamp(0u, 0u, 0u)) ^ (_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, _GLF_IDENTITY(((subgroup_local_id + 1) % subgroup_size), (true ? _GLF_IDENTITY(((subgroup_local_id + 1) % subgroup_size), ~ (~ (_GLF_IDENTITY(((subgroup_local_id + 1) % subgroup_size), uint(uvec4(((subgroup_local_id + 1) % subgroup_size), 0u, 0u, 0u)))))) : _GLF_FUZZED((126770u % subgroup_id)))) >> 0u)))))), _GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, ((subgroup_local_id + 1) % subgroup_size) >> 0u))))) - (0u | 0u)), workgroup_base + subgroup_base + (_GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, ((subgroup_local_id + 1) % subgroup_size) >> 0u), clamp(_GLF_IDENTITY((subgroup_local_id + _GLF_IDENTITY(1, (1) ^ 0)) % subgroup_size, ((subgroup_local_id + 1) % subgroup_size) >> _GLF_IDENTITY(0u, uint(_GLF_IDENTITY(uint(_GLF_IDENTITY(0u, 0u | (0u))), ~ (~ (uint(_GLF_IDENTITY(0u, 0u | (0u))))))))), _GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, ((subgroup_local_id + _GLF_IDENTITY(1, (_GLF_IDENTITY(1, min(1, 1))) << 0)) % subgroup_size) >> 0u), 0u ^ (_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, (_GLF_IDENTITY((subgroup_local_id + 1), ((subgroup_local_id + 1)) >> 0u) % subgroup_size) >> 0u))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, ((subgroup_local_id + 1) % subgroup_size) >> 0u), (_GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, ((subgroup_local_id + 1) % subgroup_size) >> 0u), 0u | (_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, ((subgroup_local_id + 1) % subgroup_size) >> 0u)))) - 0u), uint(uvec2(_GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, ((subgroup_local_id + 1) % subgroup_size) >> 0u), (_GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, ((subgroup_local_id + 1) % subgroup_size) >> 0u), 0u | (_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, ((subgroup_local_id + 1) % subgroup_size) >> 0u)))) - 0u), 1u))))))));
 if(_GLF_DEAD(false))
  return;
 do
  {
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
    }
   else
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(523.750)))))), ! (! _GLF_IDENTITY((_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + 0.0))))), true && ((_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + 0.0))))))))))
      {
       if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(_GLF_IDENTITY(true, ! (! (true))), (injectionSwitch.x < injectionSwitch.y))))
        {
         if(_GLF_WRAPPED_IF_FALSE(false))
          {
           if(_GLF_DEAD(false))
            return;
          }
         else
          {
           if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)))))).y), ! (! ((injectionSwitch.x > injectionSwitch.y)))))))
            {
             if(_GLF_DEAD(false))
              return;
             return;
            }
           return;
          }
        }
       else
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         if(_GLF_DEAD(false))
          return;
        }
      }
    }
  }
 while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, ! (! (false)))));
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, false, false)))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_WRAPPED_IF_FALSE(false))
  {
  }
 else
  {
   if(_GLF_DEAD(false))
    {
     do
      {
       return;
      }
     while(_GLF_WRAPPED_LOOP(false));
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
    return;
   atomicStore(buf[_GLF_IDENTITY(virtual_gid, clamp(virtual_gid, virtual_gid, virtual_gid))], uint(1), 4, 64, 4);
  }
 if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y, (injectionSwitch.y) / 1.0)))))
  {
  }
 else
  {
   if(_GLF_DEAD(false))
    return;
   do
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
    }
   while(_GLF_WRAPPED_LOOP(false));
   if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, (false) && true)))
    {
     if(_GLF_DEAD(false))
      return;
    }
   else
    {
     if((_GLF_IDENTITY(subgroup_local_id, ~ (~ (subgroup_local_id))) % _GLF_IDENTITY(2, 0 + (_GLF_IDENTITY(2, _GLF_IDENTITY(int(_GLF_IDENTITY(ivec2(2, 0), ivec2(ivec2(ivec2(2, 0))))), (_GLF_IDENTITY(int(_GLF_IDENTITY(ivec2(_GLF_IDENTITY(2, (2) >> 0), 0), ivec2(_GLF_IDENTITY(_GLF_IDENTITY(ivec2(ivec2(2, 0)), ivec2(0, 0) | (ivec2(ivec2(2, 0)))), ~ (~ (_GLF_IDENTITY(ivec2(ivec2(2, 0)), (ivec2(ivec2(2, 0))) >> ivec2(0, 0)))))))), 0 | (int(_GLF_IDENTITY(ivec2(_GLF_IDENTITY(2, (2) >> 0), 0), ivec2(_GLF_IDENTITY(_GLF_IDENTITY(ivec2(ivec2(2, 0)), ivec2(0, 0) | (ivec2(ivec2(2, 0)))), ~ (~ (_GLF_IDENTITY(ivec2(ivec2(2, 0)), (ivec2(ivec2(2, 0))) >> ivec2(0, 0))))))))))) / 1))))) == _GLF_IDENTITY(0, _GLF_IDENTITY((_GLF_IDENTITY(false ? _GLF_FUZZED(-11882) : 0, clamp(false ? _GLF_FUZZED(-11882) : 0, false ? _GLF_FUZZED(-11882) : 0, false ? _GLF_IDENTITY(_GLF_FUZZED(-11882), int(ivec2(_GLF_IDENTITY(_GLF_FUZZED(-11882), (_GLF_FUZZED(-11882)) | (_GLF_FUZZED(-11882))), 1))) : 0))), min(_GLF_IDENTITY((false ? _GLF_FUZZED(-11882) : 0), (_GLF_IDENTITY((false ? _GLF_FUZZED(-11882) : 0), ((false ? _GLF_FUZZED(-11882) : _GLF_IDENTITY(0, _GLF_IDENTITY((0), ((0)) | ((0))) * 1))) ^ _GLF_IDENTITY(0, max(_GLF_IDENTITY(0, max(0, _GLF_IDENTITY(0, 0 ^ (0)))), 0)))) - (1 ^ _GLF_IDENTITY(1, (1) | (1)))), (false ? _GLF_FUZZED(-11882) : 0)))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         return;
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
        }
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(_GLF_IDENTITY(vec4(75.88, 1.0, -0.7, 3725.0641).yy.g, (true ? _GLF_IDENTITY(vec4(75.88, 1.0, -0.7, 3725.0641).yy.g, mix(float(vec4(75.88, 1.0, -0.7, 3725.0641).yy.g), float(_GLF_FUZZED(320.328)), bool(false))) : _GLF_FUZZED(10.25))))), vec2(_GLF_FUZZED((-31.06 - 270.109)), (injectionSwitch)[1]), bvec2(false, _GLF_IDENTITY(true, (true) && true)))), injectionSwitch)).x, _GLF_IDENTITY(clamp(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat3x2(injectionSwitch, 1.0, sqrt(sqrt(0.0)), 0.0, 1.0), mat3x2(mat3(mat3x2(injectionSwitch, 1.0, sqrt(sqrt(0.0)), 0.0, 1.0)))))), mix(vec2(_GLF_FUZZED(-9308.5776), _GLF_FUZZED(1.0)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))).x, clamp(_GLF_IDENTITY(injectionSwitch.x, float(mat2(injectionSwitch.x, 1.0, 0.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0))))), _GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x)), _GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(mat2x4(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), _GLF_IDENTITY(float(_GLF_FUZZED(6514.7941)), clamp(float(_GLF_FUZZED(6514.7941)), float(_GLF_FUZZED(6514.7941)), float(_GLF_FUZZED(6514.7941)))), bool(false))), 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0)), _GLF_IDENTITY((float(mat2x4(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0), mix(float(injectionSwitch.x), float(_GLF_FUZZED(6514.7941)), bool(_GLF_IDENTITY(false, (false) || false)))), 1.0, 0.0, 0.0, 1.0, 1.0, _GLF_IDENTITY(0.0, (0.0) * 1.0), 1.0))), float(_GLF_IDENTITY(mat2x3(_GLF_IDENTITY((float(mat2x4(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY((injectionSwitch.x), mix(float((injectionSwitch.x)), float(_GLF_FUZZED(-9.2)), bool(false))) - 0.0), mix(float(injectionSwitch.x), float(_GLF_FUZZED(6514.7941)), bool(false))), 1.0, 0.0, 0.0, 1.0, 1.0, _GLF_IDENTITY(0.0, (0.0) * 1.0), 1.0))), mix(float(_GLF_FUZZED(-1.4)), float((float(mat2x4(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0), mix(float(injectionSwitch.x), float(_GLF_FUZZED(6514.7941)), bool(false))), 1.0, 0.0, 0.0, 1.0, 1.0, _GLF_IDENTITY(0.0, (0.0) * 1.0), 1.0)))), bool(true))), 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 1.0, 0.0), transpose(transpose(mat2x3(_GLF_IDENTITY((float(mat2x4(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0), mix(float(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(mat3(_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x)), 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0)), float(vec3(float(mat3(_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x)), 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0)), 1.0, 1.0))))), float(_GLF_FUZZED(6514.7941)), _GLF_IDENTITY(bool(false), bool(bvec4(bool(false), false, true, true))))), 1.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, _GLF_IDENTITY(0.0, float(mat2x4(0.0, 1.0, tan(0.0), 1.0, 0.0, 1.0, 1.0, 0.0))))), 0.0, 1.0, 1.0, _GLF_IDENTITY(0.0, (0.0) * 1.0), 1.0))), mix(float(_GLF_FUZZED(-1.4)), float((float(mat2x4(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - _GLF_IDENTITY(0.0, (0.0) * 1.0)), mix(float(injectionSwitch.x), float(_GLF_FUZZED(6514.7941)), bool(false))), 1.0, 0.0, 0.0, 1.0, 1.0, _GLF_IDENTITY(0.0, (0.0) * 1.0), 1.0)))), bool(true))), 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 1.0, 0.0)))))) + _GLF_IDENTITY(0.0, max(0.0, 0.0)))), injectionSwitch.x), (true ? clamp(_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, float(mat2(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).x, 1.0, 0.0, _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(-9.7) : 0.0))))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x, max(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)))), injectionSwitch.x)), injectionSwitch.x)), _GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(_GLF_IDENTITY(float(mat2x4(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(mix(_GLF_IDENTITY(float(injectionSwitch.x), clamp(float(injectionSwitch.x), _GLF_IDENTITY(float(injectionSwitch.x), clamp(float(injectionSwitch.x), float(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x))), float(_GLF_FUZZED((-946.925 / 73.44))), bool(false)))), float(injectionSwitch.x))), float(injectionSwitch.x))), float(_GLF_IDENTITY(_GLF_FUZZED(6514.7941), mix(_GLF_IDENTITY(float(_GLF_FUZZED(6514.7941)), min(float(_GLF_FUZZED(6514.7941)), float(_GLF_FUZZED(6514.7941)))), float(_GLF_FUZZED(-9.8)), bool(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, float(mat4(_GLF_IDENTITY(injectionSwitch.x, float(mat4x3(injectionSwitch.x, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(0.0, float(mat3x2(_GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0, 0.0, sin(0.0), 1.0, 1.0))), 1.0))), 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, exp(0.0), sqrt(1.0), 1.0, 1.0, 1.0, abs(1.0), 1.0, 0.0, 1.0))) > injectionSwitch.y)))))), bool(false)), (mix(float(injectionSwitch.x), float(_GLF_IDENTITY(_GLF_FUZZED(6514.7941), mix(float(_GLF_FUZZED(6514.7941)), float(_GLF_FUZZED(-9.8)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), bool(false))) - 0.0)), 1.0, 0.0, _GLF_IDENTITY(0.0, (0.0) * 1.0), _GLF_IDENTITY(1.0, float(_GLF_IDENTITY(vec3(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(1.6)), bool(false))), _GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, min(0.0, 0.0))) * 1.0), 0.0), (vec3(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(1.6)), bool(false))), 0.0, 0.0)) * mat3(1.0)))), 1.0, _GLF_IDENTITY(0.0, 1.0 * (0.0)), 1.0)), (float(mat2x4(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(mix(_GLF_IDENTITY(float(injectionSwitch.x), clamp(float(injectionSwitch.x), _GLF_IDENTITY(float(injectionSwitch.x), clamp(float(injectionSwitch.x), float(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x))), float(_GLF_FUZZED((-946.925 / 73.44))), bool(false)))), float(injectionSwitch.x))), float(injectionSwitch.x))), float(_GLF_IDENTITY(_GLF_FUZZED(6514.7941), mix(_GLF_IDENTITY(float(_GLF_FUZZED(6514.7941)), min(float(_GLF_FUZZED(6514.7941)), float(_GLF_FUZZED(6514.7941)))), float(_GLF_FUZZED(-9.8)), bool(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, float(mat4(_GLF_IDENTITY(injectionSwitch.x, float(mat4x3(injectionSwitch.x, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(0.0, float(mat3x2(_GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0, 0.0, sin(0.0), 1.0, 1.0))), 1.0))), 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, exp(0.0), sqrt(1.0), 1.0, 1.0, 1.0, abs(1.0), 1.0, 0.0, 1.0))) > injectionSwitch.y)))))), bool(false)), (mix(float(injectionSwitch.x), float(_GLF_IDENTITY(_GLF_FUZZED(6514.7941), mix(float(_GLF_FUZZED(6514.7941)), float(_GLF_FUZZED(-9.8)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), bool(false))) - 0.0)), 1.0, 0.0, _GLF_IDENTITY(0.0, (0.0) * 1.0), _GLF_IDENTITY(1.0, float(_GLF_IDENTITY(vec3(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(1.6)), bool(false))), _GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, min(0.0, 0.0))) * 1.0), 0.0), (vec3(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(1.6)), bool(false))), 0.0, 0.0)) * mat3(1.0)))), 1.0, _GLF_IDENTITY(0.0, 1.0 * (0.0)), 1.0))) - 0.0), _GLF_IDENTITY((float(mat2x4(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0), mix(_GLF_IDENTITY(float(_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + _GLF_IDENTITY((injectionSwitch), _GLF_IDENTITY(vec2(mat3x2((injectionSwitch), abs(0.0), 0.0, 1.0, abs(0.0))), min(vec2(mat3x2((injectionSwitch), abs(0.0), 0.0, 1.0, abs(0.0))), vec2(mat3x2((injectionSwitch), abs(0.0), 0.0, 1.0, abs(0.0))))))).x), clamp(_GLF_IDENTITY(float(_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)).x), float(mat2x4(float(_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)).x), 1.0, 0.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), _GLF_IDENTITY(1.0, float(mat4(1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, _GLF_IDENTITY(1.0, float(vec3(1.0, 0.0, 0.0))), 0.0, 0.0, sin(0.0), 1.0, 1.0, 0.0, 1.0))), _GLF_IDENTITY(length(vec4(0.0, 0.0, 0.0, 0.0)), min(length(vec4(0.0, 0.0, 0.0, 0.0)), _GLF_IDENTITY(length(vec4(0.0, 0.0, 0.0, 0.0)), min(_GLF_IDENTITY(length(vec4(0.0, 0.0, 0.0, 0.0)), max(length(vec4(0.0, 0.0, 0.0, 0.0)), length(vec4(0.0, 0.0, 0.0, 0.0)))), length(vec4(0.0, 0.0, 0.0, 0.0)))))), 0.0))), float(_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)).x), float(_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)))).x))), float(_GLF_FUZZED(6514.7941)), bool(false))), 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0))), max((float(mat2x4(_GLF_IDENTITY(injectionSwitch.x, mix(_GLF_IDENTITY(float(_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)).x), clamp(float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(mat4(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), _GLF_IDENTITY(1.0, (1.0) * 1.0), 1.0, round(length(normalize(exp(vec2(0.0, 0.0))))), length(vec4(0.0, 0.0, 0.0, 0.0)), 1.0, 1.0, 0.0, abs(0.0), 1.0, 1.0, 0.0, 1.0, 0.0, _GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, mix(float(_GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(228.105)))), float(_GLF_FUZZED(-8.4)), bool(false)))) - 0.0)))), vec2(0.0, _GLF_IDENTITY(0.0, float(mat3(0.0, 1.0, 0.0, 1.0, 0.0, _GLF_IDENTITY(dot(vec3(1.0, 1.0, 1.0), _GLF_IDENTITY(vec3(0.0, 0.0, 0.0), clamp(vec3(0.0, 0.0, 0.0), _GLF_IDENTITY(vec3(0.0, 0.0, 0.0), (vec3(0.0, 0.0, 0.0)) / vec3(1.0, 1.0, 1.0)), _GLF_IDENTITY(vec3(0.0, 0.0, 0.0), vec3(1.0, 1.0, 1.0) * (vec3(0.0, 0.0, 0.0)))))), dot(vec3(1.0, 1.0, 1.0), vec3(0.0, 0.0, 0.0))), 1.0, 1.0, 0.0)))) + (injectionSwitch)).x), float(_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)).x), float(_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)).x))), float(_GLF_FUZZED(6514.7941)), bool(false))), 1.0, _GLF_IDENTITY(0.0, _GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, float(mat3x2(0.0, 0.0, 1.0, 1.0, 0.0, 1.0)))) / round(length(normalize(vec2(1.0, 1.0))))) + (_GLF_IDENTITY(0.0, (_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), ! (_GLF_IDENTITY(! (! (true)), _GLF_IDENTITY(false || (! (! (true))), ! (! (false || (! (! (true))))))))))) ? 0.0 : _GLF_FUZZED(9.7))))), 0.0, 1.0, 1.0, 0.0, 1.0))), (float(mat2x4(_GLF_IDENTITY(injectionSwitch.x, mix(_GLF_IDENTITY(float(_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)).x), clamp(_GLF_IDENTITY(float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (_GLF_IDENTITY(injectionSwitch, vec2(mat3x2(injectionSwitch, tan(0.0), 0.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0), vec4(1.0, cos(0.0), 0.0, 1.0)), dot(vec4(0.0, 0.0, _GLF_ONE(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, mix(float(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(8.2)), bool(false)))), float(_GLF_FUZZED(5927.2097)), bool(false)))) + 0.0), injectionSwitch.y), 0.0), vec4(1.0, cos(0.0), 0.0, 1.0))), 1.0))))).x, clamp(_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (_GLF_IDENTITY(injectionSwitch, vec2(mat3x2(injectionSwitch, tan(0.0), 0.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0), vec4(1.0, cos(0.0), 0.0, 1.0)), dot(vec4(0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0), vec4(1.0, cos(0.0), 0.0, 1.0))), 1.0))))).x, _GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (_GLF_IDENTITY(injectionSwitch, vec2(mat3x2(injectionSwitch, tan(_GLF_IDENTITY(0.0, (0.0) - 0.0)), 0.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0), vec4(1.0, cos(0.0), 0.0, _GLF_IDENTITY(1.0, _GLF_ONE(1.0, injectionSwitch.y) * (1.0)))), dot(_GLF_IDENTITY(vec4(0.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), _GLF_ONE(_GLF_IDENTITY(1.0, (1.0) - 0.0), injectionSwitch.y), 0.0), mix(vec4(_GLF_FUZZED(-316.906), _GLF_FUZZED(-200.350), _GLF_IDENTITY((vec4(0.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), _GLF_ONE(_GLF_IDENTITY(1.0, (1.0) - 0.0), injectionSwitch.y), 0.0))[2], min((vec4(0.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), _GLF_ONE(_GLF_IDENTITY(1.0, (1.0) - 0.0), injectionSwitch.y), 0.0))[2], (vec4(0.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), _GLF_ONE(_GLF_IDENTITY(1.0, (1.0) - 0.0), injectionSwitch.y), 0.0))[2])), _GLF_FUZZED(-9784.5130)), vec4((vec4(0.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), _GLF_ONE(_GLF_IDENTITY(1.0, (1.0) - 0.0), injectionSwitch.y), 0.0))[0], (vec4(0.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), _GLF_ONE(_GLF_IDENTITY(1.0, (1.0) - 0.0), injectionSwitch.y), 0.0))[1], _GLF_FUZZED(-0.8), (vec4(0.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), _GLF_ONE(_GLF_IDENTITY(1.0, (1.0) - 0.0), injectionSwitch.y), 0.0))[3]), bvec4(true, true, false, true))), vec4(1.0, cos(0.0), 0.0, 1.0))), 1.0))))).x, _GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (_GLF_IDENTITY(injectionSwitch, vec2(mat3x2(injectionSwitch, tan(0.0), 0.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0), vec4(1.0, cos(0.0), 0.0, 1.0)), dot(vec4(0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0), vec4(1.0, cos(0.0), 0.0, 1.0))), 1.0))))).x))), mix(float(_GLF_FUZZED((+ (- 834.109)))), float(float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (_GLF_IDENTITY(injectionSwitch, vec2(mat3x2(injectionSwitch, tan(0.0), 0.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0), vec4(1.0, cos(0.0), 0.0, 1.0)), dot(vec4(0.0, 0.0, _GLF_ONE(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, mix(float(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(8.2)), bool(false)))), float(_GLF_FUZZED(5927.2097)), bool(false)))) + 0.0), injectionSwitch.y), 0.0), vec4(1.0, cos(0.0), 0.0, 1.0))), 1.0))))).x, clamp(_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (_GLF_IDENTITY(injectionSwitch, vec2(mat3x2(injectionSwitch, tan(0.0), 0.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0), vec4(1.0, cos(0.0), 0.0, 1.0)), dot(vec4(0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0), vec4(1.0, cos(0.0), 0.0, 1.0))), 1.0))))).x, _GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (_GLF_IDENTITY(injectionSwitch, vec2(mat3x2(injectionSwitch, tan(_GLF_IDENTITY(0.0, (0.0) - 0.0)), 0.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0), vec4(1.0, cos(0.0), 0.0, _GLF_IDENTITY(1.0, _GLF_ONE(1.0, injectionSwitch.y) * (1.0)))), dot(_GLF_IDENTITY(vec4(0.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), _GLF_ONE(_GLF_IDENTITY(1.0, (1.0) - 0.0), injectionSwitch.y), 0.0), mix(vec4(_GLF_FUZZED(-316.906), _GLF_FUZZED(-200.350), _GLF_IDENTITY((vec4(0.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), _GLF_ONE(_GLF_IDENTITY(1.0, (1.0) - 0.0), injectionSwitch.y), 0.0))[2], min((vec4(0.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), _GLF_ONE(_GLF_IDENTITY(1.0, (1.0) - 0.0), injectionSwitch.y), 0.0))[2], (vec4(0.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), _GLF_ONE(_GLF_IDENTITY(1.0, (1.0) - 0.0), injectionSwitch.y), 0.0))[2])), _GLF_FUZZED(-9784.5130)), vec4((vec4(0.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), _GLF_ONE(_GLF_IDENTITY(1.0, (1.0) - 0.0), injectionSwitch.y), 0.0))[0], (vec4(0.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), _GLF_ONE(_GLF_IDENTITY(1.0, (1.0) - 0.0), injectionSwitch.y), 0.0))[1], _GLF_FUZZED(-0.8), (vec4(0.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), _GLF_ONE(_GLF_IDENTITY(1.0, (1.0) - 0.0), injectionSwitch.y), 0.0))[3]), bvec4(true, true, false, true))), vec4(1.0, cos(0.0), 0.0, 1.0))), 1.0))))).x, _GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (_GLF_IDENTITY(injectionSwitch, vec2(mat3x2(injectionSwitch, tan(0.0), 0.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0), vec4(1.0, cos(0.0), 0.0, 1.0)), dot(vec4(0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0), vec4(1.0, cos(0.0), 0.0, 1.0))), 1.0))))).x)))), bool(true))), float(_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)).x), float(_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)).x))), float(_GLF_FUZZED(6514.7941)), bool(false))), 1.0, _GLF_IDENTITY(0.0, _GLF_IDENTITY(float(mat2x4(0.0, 0.0, 1.0, 0.0, 1.0, log(1.0), 1.0, log(1.0))), (false ? _GLF_FUZZED(8656.8735) : _GLF_IDENTITY(float(mat2x4(0.0, 0.0, 1.0, 0.0, 1.0, log(1.0), 1.0, log(1.0))), (float(mat2x4(0.0, 0.0, 1.0, 0.0, 1.0, log(1.0), 1.0, log(1.0)))) / 1.0)))), 0.0, 1.0, 1.0, 0.0, 1.0))))) + 0.0)), injectionSwitch.x) : _GLF_FUZZED(mix(-3916.2127, -3.4, -214.434))))) > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
            {
             if(_GLF_DEAD(false))
              return;
            }
           else
            {
            }
           return;
          }
         if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))), ! (! (_GLF_DEAD(_GLF_IDENTITY(false, true && (false)))))))
          {
           if(_GLF_DEAD(false))
            return;
           return;
          }
         return;
         if(_GLF_DEAD(false))
          return;
         if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))
          return;
        }
       subgroupAll(true);
       if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(mix(float(injectionSwitch.x), float(_GLF_FUZZED(-2820.2204)), bool(false)), (false ? _GLF_FUZZED(4.8) : _GLF_IDENTITY(mix(float(injectionSwitch.x), float(_GLF_FUZZED(-2820.2204)), bool(false)), min(mix(float(injectionSwitch.x), float(_GLF_FUZZED(-2820.2204)), bool(false)), _GLF_IDENTITY(mix(float(injectionSwitch.x), float(_GLF_FUZZED(-2820.2204)), bool(false)), mix(float(mix(float(injectionSwitch.x), float(_GLF_FUZZED(-2820.2204)), bool(false))), float(_GLF_FUZZED(-7463.8005)), bool(false))))))))) / 1.0) > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y))), (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(mix(float(injectionSwitch.x), float(_GLF_FUZZED(-2820.2204)), bool(false)), (false ? _GLF_FUZZED(4.8) : _GLF_IDENTITY(mix(float(injectionSwitch.x), float(_GLF_FUZZED(-2820.2204)), bool(false)), min(mix(float(injectionSwitch.x), float(_GLF_FUZZED(-2820.2204)), bool(false)), _GLF_IDENTITY(mix(float(injectionSwitch.x), float(_GLF_FUZZED(-2820.2204)), bool(false)), mix(float(mix(float(injectionSwitch.x), float(_GLF_FUZZED(-2820.2204)), bool(false))), float(_GLF_FUZZED(-7463.8005)), _GLF_IDENTITY(bool(false), bool(bool(bool(false)))))))))))) / 1.0) > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(min(injectionSwitch, injectionSwitch), mat2(1.0) * (min(injectionSwitch, injectionSwitch)))).y)))) && true))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec2(false, false)))) && true), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec2(false, false)))) && true)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(bool(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec2(false, false)))) && true)), _GLF_IDENTITY(bool(bool(bool(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec2(false, false)))) && true)))), (bool(bool(bool(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec2(false, false)))) && true))))) && true))))))))))
          return;
         if(_GLF_DEAD(false))
          return;
         return;
         if(_GLF_DEAD(false))
          return;
        }
       if(_GLF_WRAPPED_IF_TRUE(true))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(_GLF_IDENTITY(bool((injectionSwitch.x > injectionSwitch.y)), ! (! (bool((injectionSwitch.x > injectionSwitch.y)))))))), bool(bvec3(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), false, false)))))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            return;
           return;
          }
        }
       else
        {
        }
       do
        {
         if(_GLF_DEAD(false))
          return;
        }
       while(_GLF_WRAPPED_LOOP(false));
       if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
        return;
       atomicStore(buf[next_virtual_gid], _GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(2, (2) * 1)), (uint(2)) - 0u), (_GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_IDENTITY(2, (2) * 1), min(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(2, (2) * 1), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(_GLF_IDENTITY(2, (2) * 1), (true ? _GLF_IDENTITY(2, (2) * 1) : _GLF_FUZZED(-10843))) : _GLF_FUZZED(-47304))), (_GLF_IDENTITY(_GLF_IDENTITY(2, (2) * 1), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(_GLF_IDENTITY(2, (2) * 1), (true ? _GLF_IDENTITY(2, (2) * 1) : _GLF_FUZZED(_GLF_IDENTITY(-10843, clamp(-10843, -10843, -10843))))) : _GLF_FUZZED(-47304)))) - 0), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(2, (2) * 1), (0 & -95437) ^ (_GLF_IDENTITY(2, (2) * 1))), min(_GLF_IDENTITY(2, (2) * 1), _GLF_IDENTITY(2, (2) * 1)))))), (uint(2)) - 0u), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_IDENTITY(2, (2) * 1), min(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(2, (2) * 1), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(_GLF_IDENTITY(2, (2) * 1), (true ? _GLF_IDENTITY(2, (2) * 1) : _GLF_FUZZED(-10843))) : _GLF_FUZZED(-47304))), (_GLF_IDENTITY(_GLF_IDENTITY(2, (2) * 1), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(_GLF_IDENTITY(2, (2) * 1), (true ? _GLF_IDENTITY(2, (2) * 1) : _GLF_FUZZED(-10843))) : _GLF_FUZZED(-47304)))) << 0), (_GLF_IDENTITY(_GLF_IDENTITY(2, (2) * 1), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(_GLF_IDENTITY(2, (2) * 1), (_GLF_IDENTITY(true, false || (true)) ? _GLF_IDENTITY(2, (2) * 1) : _GLF_FUZZED(_GLF_IDENTITY(-10843, clamp(-10843, _GLF_IDENTITY(-10843, (-10843) ^ 0), -10843))))) : _GLF_FUZZED(-47304)))) - 0), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(2, (2) * 1), (0 & -95437) ^ (_GLF_IDENTITY(2, (2) * 1))), min(_GLF_IDENTITY(2, _GLF_IDENTITY((2) * 1, clamp((2) * 1, (2) * 1, (2) * 1))), _GLF_IDENTITY(2, (2) * 1)))))), uint(uvec4(_GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_IDENTITY(2, (2) * 1), min(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(2, (2) * 1), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(_GLF_IDENTITY(2, (2) * 1), (true ? _GLF_IDENTITY(2, (2) * 1) : _GLF_FUZZED(-10843))) : _GLF_FUZZED(-47304))), (_GLF_IDENTITY(_GLF_IDENTITY(2, (2) * 1), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(_GLF_IDENTITY(2, (2) * 1), (true ? _GLF_IDENTITY(2, (2) * 1) : _GLF_FUZZED(-10843))) : _GLF_FUZZED(-47304)))) << 0), (_GLF_IDENTITY(_GLF_IDENTITY(2, (2) * 1), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(_GLF_IDENTITY(2, (2) * 1), (_GLF_IDENTITY(true, false || (true)) ? _GLF_IDENTITY(2, (2) * 1) : _GLF_FUZZED(_GLF_IDENTITY(-10843, clamp(-10843, _GLF_IDENTITY(-10843, (-10843) ^ 0), -10843))))) : _GLF_FUZZED(-47304)))) - 0), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(2, (2) * 1), (0 & -95437) ^ (_GLF_IDENTITY(2, (2) * 1))), min(_GLF_IDENTITY(2, _GLF_IDENTITY((2) * 1, clamp((2) * 1, (2) * 1, (2) * 1))), _GLF_IDENTITY(2, (2) * 1)))))), (true ? uint(_GLF_IDENTITY(_GLF_IDENTITY(2, (2) * 1), min(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(2, (2) * 1), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(_GLF_IDENTITY(2, (2) * 1), (true ? _GLF_IDENTITY(2, (2) * 1) : _GLF_FUZZED(-10843))) : _GLF_FUZZED(-47304))), (_GLF_IDENTITY(_GLF_IDENTITY(2, (2) * 1), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(_GLF_IDENTITY(2, (2) * 1), (true ? _GLF_IDENTITY(2, (2) * 1) : _GLF_FUZZED(-10843))) : _GLF_FUZZED(-47304)))) << 0), (_GLF_IDENTITY(_GLF_IDENTITY(2, (2) * 1), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(_GLF_IDENTITY(2, (2) * 1), (_GLF_IDENTITY(true, false || (true)) ? _GLF_IDENTITY(2, (2) * 1) : _GLF_FUZZED(_GLF_IDENTITY(-10843, clamp(-10843, _GLF_IDENTITY(-10843, (-10843) ^ 0), -10843))))) : _GLF_FUZZED(-47304)))) - 0), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(2, (2) * 1), (0 & -95437) ^ (_GLF_IDENTITY(2, (2) * 1))), min(_GLF_IDENTITY(2, _GLF_IDENTITY((2) * 1, clamp((2) * 1, (2) * 1, (2) * 1))), _GLF_IDENTITY(2, (2) * 1)))))) : _GLF_FUZZED(workgroup_base))), 0u, ((((1u << _GLF_IDENTITY(uint(6u), uint(6u))) >> _GLF_IDENTITY(uint(6u), uint(6u))) << _GLF_IDENTITY(uint(7u), uint(7u))) >> _GLF_IDENTITY(uint(7u), _GLF_IDENTITY(uint(7u), (uint(7u)) >> 0u))), 1u))), (uint(2)) - 0u), min(_GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(2, (2) | (2)), (_GLF_IDENTITY(2, (_GLF_IDENTITY(2, (2) >> 0)) | (_GLF_IDENTITY(2, max(2, 2))))) * 1), min(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(2, (2) * 1), (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), bool(bool(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), bool(_GLF_IDENTITY(bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bool(bvec3(bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), true, true)))))))) ? _GLF_IDENTITY(_GLF_IDENTITY(2, (2) * 1), (true ? _GLF_IDENTITY(2, (2) * 1) : _GLF_FUZZED(-10843))) : _GLF_FUZZED(-47304))), (_GLF_IDENTITY(_GLF_IDENTITY(2, (2) * 1), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(_GLF_IDENTITY(2, (2) * 1), (true ? _GLF_IDENTITY(_GLF_IDENTITY(2, 1 * (2)), (2) * 1) : _GLF_FUZZED(_GLF_IDENTITY(-10843, clamp(-10843, -10843, -10843))))) : _GLF_FUZZED(-47304)))) - 0), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(2, (2) * 1), (0 & -95437) ^ (_GLF_IDENTITY(2, (2) * 1))), min(_GLF_IDENTITY(2, (2) * 1), _GLF_IDENTITY(2, (2) * 1)))))), (uint(2)) - 0u), _GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_IDENTITY(2, (2) * 1), min(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(2, _GLF_IDENTITY((2), min((2), (2))) * 1), (_GLF_TRUE(_GLF_IDENTITY(true, (true) && true), (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(vec4(injectionSwitch.x, 1.0, 0.0, 0.0)), mix(float(float(vec4(injectionSwitch.x, 1.0, 0.0, 0.0))), float(_GLF_FUZZED(1063.0395)), bool(false)))) < injectionSwitch.y)) ? _GLF_IDENTITY(_GLF_IDENTITY(2, (2) * 1), (_GLF_IDENTITY(true ? _GLF_IDENTITY(2, (2) * 1) : _GLF_FUZZED(-10843), (true ? _GLF_IDENTITY(2, (2) * 1) : _GLF_FUZZED(-10843)) | (true ? _GLF_IDENTITY(2, (2) * 1) : _GLF_FUZZED(-10843))))) : _GLF_FUZZED(-47304))), (_GLF_IDENTITY(_GLF_IDENTITY(2, (2) * 1), (_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) < injectionSwitch.y)) ? _GLF_IDENTITY(_GLF_IDENTITY(2, (2) * 1), (true ? _GLF_IDENTITY(2, (2) * 1) : _GLF_FUZZED(_GLF_IDENTITY(-10843, clamp(-10843, -10843, -10843))))) : _GLF_FUZZED(-47304)))) - 0), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(2, (2) * 1), (0 & -95437) ^ (_GLF_IDENTITY(2, (2) * 1))), min(_GLF_IDENTITY(2, (2) * 1), _GLF_IDENTITY(2, _GLF_IDENTITY((2) * 1, (false ? _GLF_FUZZED(int(504.947)) : _GLF_IDENTITY((2) * 1, 0 ^ ((2) * 1)))))))))), (uint(2)) - 0u), (_GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_IDENTITY(2, _GLF_IDENTITY((2) * 1, (_GLF_IDENTITY((2) * 1, (_GLF_IDENTITY((2) * 1, ((2) * 1) | ((2) * 1))) - 0)) >> 0)), min(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(2, _GLF_IDENTITY((2) * 1, ((2) * 1) | ((2) * 1))), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(_GLF_IDENTITY(2, (2) * 1), (true ? _GLF_IDENTITY(2, (2) * 1) : _GLF_FUZZED(-10843))) : _GLF_FUZZED(-47304))), (_GLF_IDENTITY(_GLF_IDENTITY(2, (2) * 1), (_GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3((injectionSwitch.x < injectionSwitch.y), false, false), bvec3(bvec3(_GLF_IDENTITY(bvec3((injectionSwitch.x < injectionSwitch.y), false, false), bvec3(bvec3(bvec3((injectionSwitch.x < injectionSwitch.y), false, false)))))))), ! (! (_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3((injectionSwitch.x < injectionSwitch.y), false, false), bvec3(bvec3(_GLF_IDENTITY(bvec3((injectionSwitch.x < injectionSwitch.y), false, false), bvec3(bvec3(bvec3((injectionSwitch.x < injectionSwitch.y), false, false)))))))), bool(bvec3(bool(_GLF_IDENTITY(bvec3((injectionSwitch.x < injectionSwitch.y), false, false), bvec3(bvec3(_GLF_IDENTITY(bvec3((injectionSwitch.x < injectionSwitch.y), false, false), bvec3(bvec3(bvec3((injectionSwitch.x < injectionSwitch.y), false, false)))))))), true, false)))))))) ? _GLF_IDENTITY(_GLF_IDENTITY(2, (2) * 1), (true ? _GLF_IDENTITY(2, (2) * 1) : _GLF_FUZZED(_GLF_IDENTITY(-10843, clamp(-10843, -10843, -10843))))) : _GLF_FUZZED(-47304)))) - 0), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(2, (2) * 1), (0 & -95437) ^ (_GLF_IDENTITY(2, (2) * 1))), min(_GLF_IDENTITY(2, (2) * 1), _GLF_IDENTITY(2, (2) * 1)))))), (uint(2)) - 0u)) << 0u)))) | 0u)) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x))), 4, 64, _GLF_IDENTITY(4, max(4, _GLF_IDENTITY(4, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(4, (4) / 1), max(_GLF_IDENTITY(_GLF_IDENTITY(4, (4) / 1), (_GLF_IDENTITY(_GLF_IDENTITY(4, (4) << 0), (4) / 1)) << (0 >> _GLF_IDENTITY(int(8), int(8)))), _GLF_IDENTITY(_GLF_IDENTITY(4, _GLF_IDENTITY((4) / 1, int(ivec3((4) / 1, 0, 1)))), (_GLF_IDENTITY(4, (4) / 1)) << 0))), (4) | (_GLF_IDENTITY(4, (true ? 4 : _GLF_FUZZED(50177)))))) | 0))));
      }
     else
      {
       do
        {
         for(int _injected_loop_counter = _GLF_IDENTITY(1, clamp(_GLF_IDENTITY(1, 0 ^ (_GLF_IDENTITY(1, (1) | (1)))), 1, 1)); _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_injected_loop_counter != int(_GLF_ZERO(0.0, injectionSwitch.x)), bool(bvec3(_injected_loop_counter != int(_GLF_ZERO(0.0, injectionSwitch.x)), false, _GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), true && (! (false)))))))), bool(bvec2(_injected_loop_counter != int(_GLF_ZERO(0.0, injectionSwitch.x)), false))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_injected_loop_counter != int(_GLF_ZERO(0.0, injectionSwitch.x)), bool(bvec3(_injected_loop_counter != int(_GLF_ZERO(0.0, injectionSwitch.x)), false, _GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), true && (! (false)))))))), bool(bvec2(_injected_loop_counter != int(_GLF_ZERO(0.0, injectionSwitch.x)), false))), true && (_GLF_IDENTITY(_GLF_IDENTITY(_injected_loop_counter != int(_GLF_ZERO(0.0, injectionSwitch.x)), bool(bvec3(_injected_loop_counter != int(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(_GLF_IDENTITY(mat2(injectionSwitch.x, 0.0, 0.0, 1.0), transpose(transpose(_GLF_IDENTITY(mat2(injectionSwitch.x, 0.0, 0.0, 1.0), mat2(mat3(mat2(injectionSwitch.x, 0.0, 0.0, 1.0)))))))), mix(float(float(_GLF_IDENTITY(mat2(injectionSwitch.x, 0.0, 0.0, 1.0), transpose(transpose(_GLF_IDENTITY(mat2(injectionSwitch.x, 0.0, 0.0, 1.0), mat2(mat3(mat2(injectionSwitch.x, 0.0, 0.0, 1.0))))))))), float(_GLF_FUZZED(-461.847)), bool(false)))))), false, _GLF_IDENTITY(false, _GLF_IDENTITY(! (_GLF_IDENTITY(! (false), true && (! (false)))), false || (! (_GLF_IDENTITY(! (false), true && (! (false)))))))))), bool(bvec2(_injected_loop_counter != int(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_IDENTITY(float(vec2(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), (_GLF_ZERO(0.0, injectionSwitch.x)) - 0.0), 1.0)), clamp(_GLF_IDENTITY(float(vec2(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), (_GLF_ZERO(0.0, injectionSwitch.x)) - 0.0), 1.0)), mix(float(_GLF_FUZZED(-699.643)), float(float(vec2(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), (_GLF_ZERO(0.0, injectionSwitch.x)) - 0.0), 1.0))), bool(true))), float(vec2(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), (_GLF_ZERO(0.0, injectionSwitch.x)) - 0.0), 1.0)), float(vec2(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), (_GLF_ZERO(0.0, injectionSwitch.x)) - 0.0), 1.0)))))), false)))))) || false)); _injected_loop_counter --)
          {
           if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y))))))))))
            {
             if(_GLF_WRAPPED_IF_TRUE(true))
              {
               return;
              }
             else
              {
              }
            }
           subgroupAll(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) || false))));
           if(_GLF_WRAPPED_IF_FALSE(false))
            {
            }
           else
            {
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(_GLF_IDENTITY(mat2x3(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)), 0.0, determinant(mat4(0.0, 0.0, 0.0, 0.0, 1.0, sin(0.0), 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, determinant(mat2(0.0, 0.0, 0.0, 0.0)))), 1.0, cos(0.0)), mat3(1.0) * (mat2x3(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)), 0.0, determinant(mat4(0.0, 0.0, 0.0, 0.0, 1.0, sin(0.0), 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, determinant(mat2(0.0, 0.0, 0.0, 0.0)))), 1.0, cos(0.0))))), _GLF_IDENTITY(vec2(mat4(vec2(_GLF_IDENTITY(mat2x3(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)), 0.0, determinant(mat4(0.0, 0.0, 0.0, 0.0, 1.0, sin(0.0), 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, determinant(mat2(0.0, 0.0, 0.0, 0.0)))), 1.0, cos(0.0)), mat3(1.0) * (mat2x3(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)), 0.0, determinant(mat4(0.0, 0.0, 0.0, 0.0, 1.0, sin(0.0), 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, determinant(mat2(0.0, 0.0, 0.0, 0.0)))), 1.0, cos(0.0))))), 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, determinant(mat4(1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0)), 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0)), vec2(vec4(vec2(mat4(vec2(_GLF_IDENTITY(mat2x3(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)), 0.0, determinant(mat4(0.0, 0.0, 0.0, 0.0, 1.0, sin(0.0), 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, determinant(mat2(0.0, 0.0, 0.0, 0.0)))), 1.0, cos(0.0)), mat3(1.0) * (mat2x3(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)), 0.0, determinant(mat4(0.0, 0.0, 0.0, 0.0, 1.0, sin(0.0), 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, determinant(mat2(0.0, 0.0, 0.0, 0.0)))), 1.0, cos(0.0))))), 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, determinant(mat4(1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0)), 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0)), 1.0, 1.0))))), _GLF_IDENTITY(vec2(mat2x4(_GLF_IDENTITY(injectionSwitch, vec2(vec3(injectionSwitch, 1.0))), abs(1.0), 0.0, 1.0, 1.0, 0.0, determinant(mat3(1.0, tan(0.0), 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0)))), min(vec2(mat2x4(_GLF_IDENTITY(injectionSwitch, vec2(vec3(injectionSwitch, 1.0))), abs(1.0), 0.0, 1.0, 1.0, 0.0, determinant(mat3(1.0, tan(0.0), _GLF_IDENTITY(0.0, min(0.0, 0.0)), 1.0, 1.0, 0.0, 1.0, 0.0, 1.0)))), vec2(mat2x4(_GLF_IDENTITY(injectionSwitch, vec2(vec3(injectionSwitch, 1.0))), abs(1.0), 0.0, 1.0, 1.0, 0.0, _GLF_IDENTITY(determinant(mat3(1.0, tan(0.0), 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0)), max(determinant(mat3(1.0, tan(0.0), 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0)), determinant(mat3(1.0, tan(0.0), 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0))))))))).y))))
              {
               do
                {
                 return;
                }
               while(_GLF_WRAPPED_LOOP(false));
              }
            }
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            break;
          }
        }
       while(_GLF_WRAPPED_LOOP(false));
       if(_GLF_DEAD(false))
        return;
       for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != (0 << _GLF_IDENTITY(int(7), int(7)))); _injected_loop_counter --)
        {
         atomicStore(buf[_GLF_IDENTITY(next_virtual_gid, 0u ^ (next_virtual_gid))], uint(2), _GLF_IDENTITY(4, max(_GLF_IDENTITY(4, 0 ^ (_GLF_IDENTITY(4, (_GLF_IDENTITY(4, 0 ^ (4))) << 0))), 4)), 64, _GLF_IDENTITY(4, _GLF_IDENTITY(_GLF_IDENTITY(max(4, 4), min(max(4, 4), max(4, 4))), max(_GLF_IDENTITY(_GLF_IDENTITY(max(_GLF_IDENTITY(4, (true ? 4 : _GLF_FUZZED(-72619))), 4), min(max(4, 4), max(4, 4))), _GLF_IDENTITY(max(_GLF_IDENTITY(max(4, 4), min(max(4, 4), max(4, 4))), _GLF_IDENTITY(max(4, 4), min(max(4, 4), max(4, 4)))), (_GLF_IDENTITY(max(_GLF_IDENTITY(max(4, 4), min(max(4, 4), max(4, 4))), _GLF_IDENTITY(max(4, 4), min(max(4, 4), max(4, 4)))), min(max(_GLF_IDENTITY(max(4, 4), min(max(4, 4), max(4, 4))), _GLF_IDENTITY(max(4, 4), min(max(4, 4), max(4, 4)))), max(_GLF_IDENTITY(max(4, 4), min(max(4, 4), max(4, 4))), _GLF_IDENTITY(max(4, 4), min(max(4, 4), max(4, 4))))))) << 0)), _GLF_IDENTITY(max(4, 4), min(max(4, 4), _GLF_IDENTITY(max(4, _GLF_IDENTITY(4, ~ (~ (_GLF_IDENTITY(4, (4) - 0))))), (_GLF_IDENTITY(max(4, _GLF_IDENTITY(4, ~ (~ (_GLF_IDENTITY(4, (4) - 0))))), clamp(max(4, _GLF_IDENTITY(4, ~ (~ (_GLF_IDENTITY(4, (4) - 0))))), max(4, _GLF_IDENTITY(4, ~ (~ (_GLF_IDENTITY(4, (4) - 0))))), _GLF_IDENTITY(max(4, _GLF_IDENTITY(4, ~ (~ (_GLF_IDENTITY(4, (4) - 0))))), min(max(4, _GLF_IDENTITY(4, ~ (~ (_GLF_IDENTITY(4, (4) - 0))))), max(4, _GLF_IDENTITY(4, ~ (~ (_GLF_IDENTITY(4, (4) - 0)))))))))) / 1)))))));
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
      }
    }
   for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
    {
     do
      {
       if(_GLF_DEAD(false))
        return;
      }
     while(_GLF_WRAPPED_LOOP(false));
    }
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
    }
   else
    {
     return;
    }
  }
 if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    return;
   for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _GLF_IDENTITY(_injected_loop_counter ++, (false ? _GLF_FUZZED(_injected_loop_counter) : _injected_loop_counter ++)))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      break;
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x > injectionSwitch.y), _GLF_IDENTITY(bool(bvec3((injectionSwitch.x > injectionSwitch.y), false, false)), bool(bvec4(bool(bvec3((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))), false, false)), true, false, false)))))), true && (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x > injectionSwitch.y), _GLF_IDENTITY(bool(bvec3((injectionSwitch.x > injectionSwitch.y), false, false)), bool(bvec4(bool(bvec3((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y))), false, false)), true, false, false)))))), bool(bvec2(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x > injectionSwitch.y), _GLF_IDENTITY(bool(bvec3((injectionSwitch.x > injectionSwitch.y), false, _GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(false, (false) || false))))), bool(bvec4(bool(bvec3((injectionSwitch.x > injectionSwitch.y), false, false)), true, false, false)))))), true))))))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
      return;
    }
  }
 else
  {
  }
}
