#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


struct _GLF_struct_10 {
 bool _f0;
 bvec4 _f1;
 uint next_virtual_gid;
 float _f2;
} ;

struct _GLF_struct_11 {
 mat2x4 _f0;
 uvec2 _f1;
 _GLF_struct_10 _f2;
} ;

struct _GLF_struct_7 {
 mat3x4 _f0;
 ivec3 _f1;
 mat3x4 _f2;
} ;

struct _GLF_struct_6 {
 mat2x4 _f0;
} ;

struct _GLF_struct_8 {
 _GLF_struct_6 _f0;
 _GLF_struct_7 _f1;
} ;

struct _GLF_struct_4 {
 mat4x3 _f0;
 mat4x3 _f1;
 mat2x3 _f2;
 uint _f3;
 mat3x2 _f4;
} ;

struct _GLF_struct_5 {
 bvec2 _f0;
 _GLF_struct_4 _f1;
} ;

struct _GLF_struct_9 {
 uint workgroup_base;
 _GLF_struct_5 _f0;
 _GLF_struct_8 _f1;
} ;

struct _GLF_struct_1 {
 uvec4 _f0;
} ;

struct _GLF_struct_0 {
 mat2x3 _f0;
 uint workgroup_size;
 bvec3 _f1;
 mat3 _f2;
} ;

struct _GLF_struct_2 {
 mat4x2 _f0;
 bvec4 _f1;
 _GLF_struct_0 _f2;
 _GLF_struct_1 _f3;
} ;

struct _GLF_struct_3 {
 int _f0;
 _GLF_struct_2 _f1;
 uvec4 _f2;
 mat4x3 _f3;
 int _f4;
} ;

layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec4(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))), false, true, false))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(vec4(injectionSwitch, 0.0, 0.0)), vec2(mat2(vec2(vec4(injectionSwitch, 0.0, 0.0)), 1.0, 0.0)))).x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), ! (! (! (_GLF_DEAD(false))))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false))))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, (false) && true), false)))))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
    }
  }
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, false, true, false)))), (_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), bool(bvec4(false, false, true, false))))) || false))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(! (! (_GLF_DEAD(false))), (! (! (_GLF_DEAD(false)))) && true)))))
  return;
 if(_GLF_DEAD(false))
  return;
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false)))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            return;
           return;
          }
         return;
         if(_GLF_DEAD(false))
          return;
        }
       return;
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) || false))))))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
        return;
       return;
      }
     return;
     if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(_GLF_DEAD(false), true, true), _GLF_IDENTITY(bvec3(bvec3(bvec3(_GLF_DEAD(false), true, true))), bvec3(_GLF_IDENTITY(bvec3(bvec3(bvec3(bvec3(_GLF_DEAD(false), true, true)))), _GLF_IDENTITY(bvec3(bvec4(bvec3(bvec3(bvec3(bvec3(_GLF_DEAD(false), true, true)))), false)), bvec3(bvec3(bvec3(bvec4(bvec3(bvec3(bvec3(bvec3(_GLF_DEAD(false), true, true)))), false)))))))))), (bool(_GLF_IDENTITY(bvec3(_GLF_DEAD(false), true, true), bvec3(bvec3(bvec3(_GLF_DEAD(false), true, true)))))) && true)))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)).x > injectionSwitch.y))))
      return;
    }
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-32.56)), float(_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(-1808.8915)))), bool(true))) > injectionSwitch.y)), false || (_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(8047.9923, -3991.3733)) : _GLF_IDENTITY(injectionSwitch, vec2(vec4(injectionSwitch, 0.0, 1.0))))).x, mix(float(_GLF_FUZZED(-32.56)), float(_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(-1808.8915)))), bool(true))) > injectionSwitch.y)), _GLF_IDENTITY((_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(_GLF_IDENTITY(-32.56, 0.0 + (-32.56)))), float(_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(-1808.8915)))), bool(true))) > injectionSwitch.y))), false || ((_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(_GLF_IDENTITY(-32.56, 0.0 + (-32.56)))), float(_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(-1808.8915)))), bool(true))) > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(_GLF_IDENTITY(-32.56, 0.0 + (-32.56)))), float(_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(-1808.8915)))), bool(true))) > injectionSwitch.y, bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(_GLF_IDENTITY(-32.56, 0.0 + (-32.56)))), float(_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(-1808.8915)))), bool(true))) > injectionSwitch.y, true && (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(_GLF_IDENTITY(-32.56, 0.0 + (-32.56)))), float(_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(-1808.8915)))), bool(true))) > injectionSwitch.y)), true, true, false))))))))))) || false)))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED((9788.0879 - -79.88))), vec2(_GLF_FUZZED(-75.64), (injectionSwitch)[1]), bvec2(_GLF_IDENTITY(false, false || (false)), true))).y), ! (! ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))))))))))))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
    return;
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0) > injectionSwitch.y))))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 uint num_workgroup = gl_NumWorkGroups.x;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bool(false))), (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
    return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec2(_GLF_DEAD(false), false)), ! (! (bool(bvec2(_GLF_DEAD(false), false)))))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(1.0, 0.0)), dot(vec2(0.0, 1.0), vec2(1.0, 0.0)))) > injectionSwitch.y), ((_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(1.0, 0.0)), dot(vec2(0.0, 1.0), vec2(1.0, 0.0)))) > injectionSwitch.y)) || false))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)), ! (! (_GLF_DEAD(_GLF_IDENTITY(false, (false) && true))))), _GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(bool(bvec3((injectionSwitch.x > injectionSwitch.y), _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)) : _GLF_FUZZED(injectionSwitch))).y)), _GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(injectionSwitch.x, 1.0 * (injectionSwitch.x))), float(_GLF_FUZZED(float(-69809))), bool(_GLF_IDENTITY(false, true && (false))))) > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(injectionSwitch.x, 1.0 * (injectionSwitch.x))), float(_GLF_FUZZED(float(-69809))), bool(_GLF_IDENTITY(false, true && (false))))) > injectionSwitch.y) && true))))), ! (! (_GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(bool(bvec4((injectionSwitch.x > injectionSwitch.y), true, false, true)), (bool(bvec4((injectionSwitch.x > injectionSwitch.y), true, false, true))) || false)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bool(bvec4(bool(bvec3((injectionSwitch.x > injectionSwitch.y), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(_GLF_IDENTITY(mat4x2(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), exp(0.0), 0.0, 0.0, 0.0, sin(0.0), 1.0, 0.0), (true ? _GLF_IDENTITY(mat4x2(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), exp(0.0), 0.0, 0.0, 0.0, sin(0.0), 1.0, 0.0), (mat4x2(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), exp(0.0), 0.0, 0.0, 0.0, sin(0.0), 1.0, 0.0)) - mat4x2(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)) : _GLF_FUZZED(mat4x2(mat2x4(-3762.6850, -5.1, 3.7, -30.61, -24.37, -27.97, 611.067, 0.1)))))), max(float(_GLF_IDENTITY(mat4x2(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), exp(0.0), 0.0, 0.0, 0.0, sin(0.0), 1.0, 0.0), (true ? _GLF_IDENTITY(mat4x2(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), exp(0.0), 0.0, 0.0, 0.0, sin(0.0), 1.0, 0.0), (mat4x2(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), exp(0.0), 0.0, 0.0, 0.0, sin(0.0), 1.0, 0.0)) - mat4x2(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)) : _GLF_FUZZED(mat4x2(mat2x4(-3762.6850, -5.1, 3.7, -30.61, -24.37, -27.97, 611.067, 0.1)))))), float(_GLF_IDENTITY(mat4x2(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), exp(0.0), 0.0, 0.0, 0.0, sin(0.0), 1.0, 0.0), (true ? _GLF_IDENTITY(mat4x2(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), exp(0.0), 0.0, 0.0, 0.0, sin(0.0), 1.0, 0.0), (mat4x2(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), exp(0.0), 0.0, 0.0, 0.0, sin(0.0), 1.0, 0.0)) - mat4x2(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)) : _GLF_FUZZED(mat4x2(mat2x4(-3762.6850, -5.1, 3.7, -30.61, -24.37, -27.97, 611.067, 0.1))))))))) < injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true, false, false)))))))), bool(_GLF_IDENTITY(bvec2(_GLF_FALSE(_GLF_IDENTITY(false, (false) || false), _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > injectionSwitch.y), _GLF_IDENTITY(bool(bvec3((injectionSwitch.x > injectionSwitch.y), _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)) : _GLF_FUZZED(injectionSwitch))).y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (! _GLF_IDENTITY((_GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) + vec2(0.0, 0.0), max(_GLF_IDENTITY((injectionSwitch) + vec2(0.0, 0.0), (false ? _GLF_FUZZED(vec2(2403.5273, -4.0)) : (injectionSwitch) + vec2(0.0, 0.0))), _GLF_IDENTITY((injectionSwitch) + vec2(0.0, 0.0), ((injectionSwitch) + vec2(0.0, 0.0)) * mat2(1.0))))))).x > injectionSwitch.y), ! (_GLF_IDENTITY(! ((_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x > injectionSwitch.y)), (! ((_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x > injectionSwitch.y))) && true))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(injectionSwitch.x > injectionSwitch.y, false, false, true))))))), bool(bvec4(bool(bvec3(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec2((injectionSwitch.x > injectionSwitch.y), true))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch) * mat2(1.0), clamp(_GLF_IDENTITY((injectionSwitch) * mat2(1.0), clamp((injectionSwitch) * mat2(_GLF_IDENTITY(1.0, (1.0) - 0.0)), (injectionSwitch) * mat2(1.0), (injectionSwitch) * mat2(1.0))), (injectionSwitch) * mat2(1.0), _GLF_IDENTITY((injectionSwitch) * mat2(1.0), _GLF_IDENTITY(vec2(0.0, 0.0), vec2(vec2(vec2(0.0, 0.0)))) + ((injectionSwitch) * mat2(1.0))))), vec2(1.0, 1.0) * (_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch), ((injectionSwitch)) / vec2(1.0, 1.0)) * mat2(1.0), clamp(_GLF_IDENTITY((injectionSwitch) * mat2(1.0), clamp((injectionSwitch) * mat2(1.0), (injectionSwitch) * mat2(1.0), (injectionSwitch) * mat2(1.0))), (injectionSwitch) * mat2(1.0), _GLF_IDENTITY((injectionSwitch) * mat2(1.0), vec2(0.0, 0.0) + ((injectionSwitch) * mat2(1.0)))))))).x > injectionSwitch.y)))), true, false, _GLF_IDENTITY(false, bool(bvec2(false, false))))))), bool(_GLF_IDENTITY(bvec2((_GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) + vec2(0.0, 0.0), max(_GLF_IDENTITY((injectionSwitch) + vec2(0.0, 0.0), (false ? _GLF_FUZZED(vec2(2403.5273, -4.0)) : (injectionSwitch) + vec2(0.0, 0.0))), _GLF_IDENTITY((injectionSwitch) + vec2(0.0, 0.0), ((injectionSwitch) + vec2(0.0, 0.0)) * mat2(1.0))))))).x > injectionSwitch.y), ! (_GLF_IDENTITY(! ((_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x > injectionSwitch.y)), (! ((_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x > injectionSwitch.y))) && true))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(injectionSwitch.x > injectionSwitch.y, false, false, true))))))), bool(bvec4(bool(bvec3(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec2((injectionSwitch.x > injectionSwitch.y), true))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch) * mat2(1.0), clamp(_GLF_IDENTITY((injectionSwitch) * mat2(1.0), clamp((injectionSwitch) * mat2(_GLF_IDENTITY(1.0, (1.0) - 0.0)), (injectionSwitch) * mat2(1.0), (injectionSwitch) * mat2(1.0))), (injectionSwitch) * mat2(1.0), _GLF_IDENTITY((injectionSwitch) * mat2(1.0), _GLF_IDENTITY(vec2(0.0, 0.0), vec2(vec2(vec2(0.0, 0.0)))) + ((injectionSwitch) * mat2(1.0))))), vec2(1.0, 1.0) * (_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch), ((injectionSwitch)) / vec2(1.0, 1.0)) * mat2(1.0), clamp(_GLF_IDENTITY((injectionSwitch) * mat2(1.0), clamp((injectionSwitch) * mat2(1.0), (injectionSwitch) * mat2(1.0), (injectionSwitch) * mat2(1.0))), (injectionSwitch) * mat2(1.0), _GLF_IDENTITY((injectionSwitch) * mat2(1.0), vec2(0.0, 0.0) + ((injectionSwitch) * mat2(1.0)))))))).x > injectionSwitch.y)))), true, false, _GLF_IDENTITY(false, bool(bvec2(false, false))))))), false), bvec2(bvec2(_GLF_IDENTITY(bvec2((_GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) + vec2(0.0, 0.0), max(_GLF_IDENTITY((injectionSwitch) + vec2(0.0, 0.0), (false ? _GLF_FUZZED(vec2(2403.5273, -4.0)) : (injectionSwitch) + vec2(0.0, 0.0))), _GLF_IDENTITY((injectionSwitch) + vec2(0.0, 0.0), ((injectionSwitch) + vec2(0.0, 0.0)) * mat2(1.0))))))).x > injectionSwitch.y), ! (_GLF_IDENTITY(! ((_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x > injectionSwitch.y)), (! ((_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x > injectionSwitch.y))) && true))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(injectionSwitch.x > injectionSwitch.y, false, false, true))))))), bool(bvec4(bool(bvec3(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec2((injectionSwitch.x > injectionSwitch.y), true))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch) * mat2(1.0), clamp(_GLF_IDENTITY((injectionSwitch) * mat2(1.0), clamp((injectionSwitch) * mat2(_GLF_IDENTITY(1.0, (1.0) - 0.0)), (injectionSwitch) * mat2(1.0), (injectionSwitch) * mat2(1.0))), (injectionSwitch) * mat2(1.0), _GLF_IDENTITY((injectionSwitch) * mat2(1.0), _GLF_IDENTITY(vec2(0.0, 0.0), vec2(vec2(vec2(0.0, 0.0)))) + ((injectionSwitch) * mat2(1.0))))), vec2(1.0, 1.0) * (_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch), ((injectionSwitch)) / vec2(1.0, 1.0)) * mat2(1.0), clamp(_GLF_IDENTITY((injectionSwitch) * mat2(1.0), clamp((injectionSwitch) * mat2(1.0), (injectionSwitch) * mat2(1.0), (injectionSwitch) * mat2(1.0))), (injectionSwitch) * mat2(1.0), _GLF_IDENTITY((injectionSwitch) * mat2(1.0), vec2(0.0, 0.0) + ((injectionSwitch) * mat2(1.0)))))))).x > injectionSwitch.y)))), true, false, _GLF_IDENTITY(false, bool(bvec2(false, false))))))), false), bvec2(bvec3(bvec2((_GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) + vec2(0.0, 0.0), max(_GLF_IDENTITY((injectionSwitch) + vec2(0.0, 0.0), (false ? _GLF_FUZZED(vec2(2403.5273, -4.0)) : (injectionSwitch) + vec2(0.0, 0.0))), _GLF_IDENTITY((injectionSwitch) + vec2(0.0, 0.0), ((injectionSwitch) + vec2(0.0, 0.0)) * mat2(1.0))))))).x > injectionSwitch.y), ! (_GLF_IDENTITY(! ((_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x > injectionSwitch.y)), (! ((_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x > injectionSwitch.y))) && true))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(injectionSwitch.x > injectionSwitch.y, false, false, true))))))), bool(bvec4(bool(bvec3(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec2((injectionSwitch.x > injectionSwitch.y), true))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch) * mat2(1.0), clamp(_GLF_IDENTITY((injectionSwitch) * mat2(1.0), clamp((injectionSwitch) * mat2(_GLF_IDENTITY(1.0, (1.0) - 0.0)), (injectionSwitch) * mat2(1.0), (injectionSwitch) * mat2(1.0))), (injectionSwitch) * mat2(1.0), _GLF_IDENTITY((injectionSwitch) * mat2(1.0), _GLF_IDENTITY(vec2(0.0, 0.0), vec2(vec2(vec2(0.0, 0.0)))) + ((injectionSwitch) * mat2(1.0))))), vec2(1.0, 1.0) * (_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch), ((injectionSwitch)) / vec2(1.0, 1.0)) * mat2(1.0), clamp(_GLF_IDENTITY((injectionSwitch) * mat2(1.0), clamp((injectionSwitch) * mat2(1.0), (injectionSwitch) * mat2(1.0), (injectionSwitch) * mat2(1.0))), (injectionSwitch) * mat2(1.0), _GLF_IDENTITY((injectionSwitch) * mat2(1.0), vec2(0.0, 0.0) + ((injectionSwitch) * mat2(1.0)))))))).x > injectionSwitch.y)))), true, false, _GLF_IDENTITY(false, bool(bvec2(false, false))))))), false), true)))))))))))), false), bvec2(bvec4(bvec2(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(bool(bvec3((injectionSwitch.x > injectionSwitch.y), _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)) : _GLF_FUZZED(injectionSwitch))).y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (! (_GLF_IDENTITY(bool(bvec3((_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * 1.0) > injectionSwitch.y), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bool(bvec4(bool(bvec3((injectionSwitch.x > injectionSwitch.y), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), clamp(_GLF_IDENTITY((injectionSwitch) * mat2(1.0), clamp((injectionSwitch) * mat2(1.0), (injectionSwitch) * mat2(1.0), (injectionSwitch) * mat2(1.0))), (injectionSwitch) * mat2(1.0), _GLF_IDENTITY((injectionSwitch) * mat2(1.0), vec2(0.0, _GLF_IDENTITY(0.0, max(0.0, 0.0))) + ((injectionSwitch) * mat2(1.0)))))).x > injectionSwitch.y)))), true, false, _GLF_IDENTITY(false, bool(bvec2(false, false))))))))))), (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(bool(bvec3((injectionSwitch.x > injectionSwitch.y), _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)) : _GLF_FUZZED(injectionSwitch))).y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (! (_GLF_IDENTITY(bool(bvec3((injectionSwitch.x > injectionSwitch.y), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bool(bvec4(bool(bvec3((injectionSwitch.x > injectionSwitch.y), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), clamp(_GLF_IDENTITY((injectionSwitch) * mat2(1.0), clamp((injectionSwitch) * mat2(1.0), (injectionSwitch) * mat2(1.0), (injectionSwitch) * mat2(1.0))), _GLF_IDENTITY((injectionSwitch) * mat2(1.0), mix(vec2(_GLF_IDENTITY(((injectionSwitch) * mat2(1.0))[0], min(((injectionSwitch) * mat2(1.0))[0], ((injectionSwitch) * mat2(1.0))[0])), ((injectionSwitch) * mat2(1.0))[1]), vec2(_GLF_FUZZED(5.7), _GLF_FUZZED((176.740 * (9990.0796 + -69.39)))), bvec2(false, false))), _GLF_IDENTITY((injectionSwitch) * mat2(1.0), vec2(0.0, _GLF_IDENTITY(0.0, max(0.0, 0.0))) + ((injectionSwitch) * mat2(1.0)))))).x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y)))), true, false, _GLF_IDENTITY(false, bool(bvec2(false, false)))))))))))) || false), false), true, false))))) || (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)), bool(bool(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true))))))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false))))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, true)))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
    }
   for(int _injected_loop_counter = _GLF_IDENTITY(0, (0) | _GLF_IDENTITY((0), ((0)) | (_GLF_IDENTITY((0), (false ? _GLF_FUZZED(36023) : (0)))))); _GLF_WRAPPED_LOOP(_injected_loop_counter != ((((_GLF_IDENTITY(_GLF_IDENTITY(1, (_GLF_IDENTITY(true ? 1 : _GLF_FUZZED(-32141), int(ivec3(_GLF_IDENTITY(true ? 1 : _GLF_FUZZED(-32141), (_GLF_IDENTITY(true ? 1 : _GLF_FUZZED(-32141), (true ? 1 : _GLF_FUZZED(-32141)) | (true ? 1 : _GLF_FUZZED(-32141)))) | (true ? 1 : _GLF_IDENTITY(_GLF_FUZZED(_GLF_IDENTITY(-32141, (-32141) << 0)), max(_GLF_FUZZED(-32141), _GLF_IDENTITY(_GLF_FUZZED(-32141), max(_GLF_FUZZED(-32141), _GLF_IDENTITY(_GLF_FUZZED(-32141), (_GLF_FUZZED(-32141)) - 0))))))), 0, 0))))), (_GLF_IDENTITY(1, (_GLF_IDENTITY(true ? 1 : _GLF_FUZZED(-32141), _GLF_IDENTITY(int(ivec3(_GLF_IDENTITY(true ? 1 : _GLF_FUZZED(-32141), (true ? 1 : _GLF_FUZZED(-32141)) | (_GLF_IDENTITY(true, false || (true)) ? 1 : _GLF_FUZZED(-32141))), 0, 0)), (_GLF_IDENTITY(int(ivec3(_GLF_IDENTITY(true ? 1 : _GLF_FUZZED(-32141), (true ? 1 : _GLF_FUZZED(-32141)) | (_GLF_IDENTITY(true, false || _GLF_IDENTITY((true), ! (! (_GLF_IDENTITY((true), bool(bool((true)))))))) ? 1 : _GLF_FUZZED(-32141))), 0, 0)), (int(ivec3(_GLF_IDENTITY(true ? 1 : _GLF_FUZZED(-32141), (true ? 1 : _GLF_FUZZED(-32141)) | (_GLF_IDENTITY(true, false || (true)) ? 1 : _GLF_FUZZED(-32141))), 0, 0))) + 0)) >> 0))))) * 1) << _GLF_IDENTITY(int(1), int(_GLF_IDENTITY(_GLF_IDENTITY(1, (1) | (1)), (1) ^ 0)))) >> _GLF_IDENTITY(int(1), _GLF_IDENTITY(int(1), _GLF_IDENTITY((int(1)), clamp(_GLF_IDENTITY((int(_GLF_IDENTITY(1, (1) * 1))), (_GLF_IDENTITY((int(1)), clamp((int(1)), (int(_GLF_IDENTITY(1, 0 | (_GLF_IDENTITY(1, _GLF_IDENTITY(int(ivec3(1, 1, 0)), ~ (~ (int(ivec3(1, 1, 0)))))))))), (int(1))))) | 0), (int(1)), (int(1)))) | (_GLF_IDENTITY(int(_GLF_IDENTITY(1, (1) >> 0)), int(_GLF_IDENTITY(int(_GLF_IDENTITY(int(_GLF_IDENTITY(1, (1) >> 0)), int(int(int(_GLF_IDENTITY(_GLF_IDENTITY(1, (1) >> 0), 0 | (_GLF_IDENTITY(_GLF_IDENTITY(1, (1) >> 0), (_GLF_IDENTITY(1, (1) >> 0)) | 0)))))))), (true ? int(_GLF_IDENTITY(int(_GLF_IDENTITY(1, _GLF_IDENTITY((1) >> 0, 0 | (_GLF_IDENTITY((1) >> 0, 1 * (_GLF_IDENTITY((1) >> 0, min((1) >> 0, (1) >> 0)))))))), int(int(int(_GLF_IDENTITY(1, (1) >> 0)))))) : _GLF_FUZZED(_injected_loop_counter))))))))) << _GLF_IDENTITY(int(5), int(5))) >> _GLF_IDENTITY(_GLF_IDENTITY(int(_GLF_IDENTITY(5, _GLF_IDENTITY(max(5, 5), _GLF_IDENTITY(int(_GLF_ZERO(0.0, injectionSwitch.x)), (int(_GLF_ZERO(0.0, injectionSwitch.x))) - 0) + (max(5, 5))))), min(_GLF_IDENTITY(int(_GLF_IDENTITY(5, max(5, 5))), max(int(_GLF_IDENTITY(5, max(5, 5))), int(_GLF_IDENTITY(5, max(5, 5))))), int(_GLF_IDENTITY(5, max(5, 5))))), int(5)))); _GLF_IDENTITY(_injected_loop_counter ++, 0 | (_GLF_IDENTITY(_injected_loop_counter ++, (_injected_loop_counter ++) | 0))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        return;
       break;
      }
     if(_GLF_DEAD(false))
      continue;
     if(_GLF_DEAD(false))
      continue;
     return;
    }
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, abs(vec2(_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(127.856))), 0.0)) + (injectionSwitch)).y, false || (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, abs(vec2(0.0, 0.0)) + (injectionSwitch)).y))))))
    return;
   return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))
    return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, _GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, (true ? _GLF_IDENTITY(injectionSwitch.x, 1.0 * (injectionSwitch.x)) : _GLF_FUZZED(sign(-5.3)))), injectionSwitch.x, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x))) - 0.0)) + 0.0), (false ? _GLF_FUZZED(74.14) : _GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x))) - 0.0)) + 0.0))), max(_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_IDENTITY(_GLF_FUZZED(7.4), max(_GLF_FUZZED(7.4), _GLF_FUZZED(7.4))))), injectionSwitch.x)))) > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - log(vec2(1.0, 1.0))).y), ((_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, (true ? _GLF_IDENTITY(injectionSwitch.x, 1.0 * (injectionSwitch.x)) : _GLF_FUZZED(sign(-5.3)))), injectionSwitch.x, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x))) - 0.0)) + 0.0), (false ? _GLF_FUZZED(74.14) : _GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x))) - 0.0)) + 0.0))), max(_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_IDENTITY(_GLF_FUZZED(7.4), max(_GLF_FUZZED(7.4), _GLF_FUZZED(7.4))))), injectionSwitch.x)))) > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - log(vec2(1.0, 1.0))).y)) && true)), false)))))
    return;
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 _GLF_struct_3 _GLF_struct_replacement_3 = _GLF_struct_3(1, _GLF_struct_2(mat4x2(1.0), bvec4(true), _GLF_struct_0(mat2x3(1.0), gl_WorkGroupSize.x, _GLF_IDENTITY(bvec3(true), bvec3(bvec3(bvec3(true)))), mat3(1.0)), _GLF_struct_1(uvec4(1u))), uvec4(1u), mat4x3(1.0), 1);
 if(_GLF_DEAD(false))
  return;
 uint workgroup_id = gl_WorkGroupID.x;
 if(_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, (false) || false)))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || _GLF_IDENTITY(false, bool(bvec2(false, false))))))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   return;
  }
 _GLF_struct_9 _GLF_struct_replacement_9 = _GLF_struct_9(_GLF_IDENTITY(_GLF_struct_replacement_3._f1._f2.workgroup_size * workgroup_id, (_GLF_struct_replacement_3._f1._f2.workgroup_size * workgroup_id) - 0u), _GLF_struct_5(bvec2(true), _GLF_struct_4(mat4x3(1.0), mat4x3(1.0), mat2x3(_GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0, 1.0))), 1u, mat3x2(_GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, min(1.0, 1.0)), 1.0))))), _GLF_struct_8(_GLF_struct_6(mat2x4(1.0)), _GLF_struct_7(mat3x4(1.0), _GLF_IDENTITY(ivec3(1), _GLF_IDENTITY(ivec3(ivec4(ivec3(1), ((1 << _GLF_IDENTITY(int(_GLF_IDENTITY(4, min(4, _GLF_IDENTITY(4, (4) | 0)))), int(4))) >> _GLF_IDENTITY(int(4), int(4))))), (ivec3(ivec4(ivec3(1), ((1 << _GLF_IDENTITY(int(4), int(4))) >> _GLF_IDENTITY(int(4), int(4)))))) / ivec3(1, 1, 1))), mat3x4(1.0))));
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-8.5), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(852.445)), bvec2(true, false))), injectionSwitch, injectionSwitch)).y))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   return;
  }
 if(_GLF_DEAD(false))
  return;
 uint virtual_gid = _GLF_IDENTITY(_GLF_struct_replacement_9.workgroup_base + subgroup_id * _GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, 0u | (subgroup_size))) << 0u), (_GLF_struct_replacement_9.workgroup_base + subgroup_id * subgroup_size) | 0u) + subgroup_local_id;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   return;
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_DEAD(false), true))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 _GLF_struct_11 _GLF_struct_replacement_11 = _GLF_struct_11(mat2x4(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, (1.0) + 0.0)) / 1.0)), uvec2(_GLF_IDENTITY(_GLF_IDENTITY(1u, min(1u, 1u)), (1u) / 1u)), _GLF_struct_10(true, bvec4(true), _GLF_struct_replacement_9.workgroup_base + subgroup_id * _GLF_IDENTITY(subgroup_size, (subgroup_size) | 0u) + _GLF_IDENTITY(_GLF_IDENTITY(((_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY((subgroup_local_id), min((subgroup_local_id), _GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id), min((subgroup_local_id), _GLF_IDENTITY((subgroup_local_id), max((subgroup_local_id), (subgroup_local_id))))), (_GLF_IDENTITY((subgroup_local_id), max((subgroup_local_id), (subgroup_local_id)))) | 0u))) >> 0u) + 1) % subgroup_size), min(((subgroup_local_id + 1) % subgroup_size), _GLF_IDENTITY(_GLF_IDENTITY(((subgroup_local_id + 1) % subgroup_size), uint(uvec2(((subgroup_local_id + 1) % subgroup_size), 0u))), (((subgroup_local_id + 1) % subgroup_size)) >> 0u))), (((subgroup_local_id + 1) % subgroup_size)) / 1u), _GLF_IDENTITY(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(_GLF_IDENTITY(_GLF_IDENTITY(distance(float(true), 3.0), (distance(float(true), 3.0)) / 1.0), (false ? _GLF_FUZZED(cosh(76.77)) : _GLF_IDENTITY(distance(float(true), 3.0), (distance(float(true), 3.0)) / 1.0))))))) / determinant(mat4(1.0, 0.0, _GLF_IDENTITY(0.0, _GLF_IDENTITY(float(mat2(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), sqrt(0.0), 1.0, _GLF_IDENTITY(dot(vec3(1.0, 1.0, 1.0), vec3(0.0, _GLF_IDENTITY(0.0, (0.0) + 0.0), _GLF_IDENTITY(0.0, 0.0 + (0.0)))), dot(vec3(1.0, 1.0, 1.0), vec3(0.0, _GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, _GLF_IDENTITY(mix(float(_GLF_FUZZED(vec4(371.305, -5.8, -939.937, -6741.2378).g)), float(0.0), bool(true)), mix(float(_GLF_FUZZED(3.6)), float(mix(float(_GLF_FUZZED(vec4(371.305, -5.8, -939.937, -6741.2378).g)), float(0.0), bool(true))), bool(true))))) - 0.0), 0.0))))), (float(mat2(_GLF_IDENTITY(0.0, clamp(0.0, _GLF_IDENTITY(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(333.397)), bool(false))), max(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(333.397)), bool(false))), _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(333.397)), bool(false))))), 0.0)), sqrt(0.0), 1.0, _GLF_IDENTITY(dot(vec3(1.0, 1.0, 1.0), vec3(0.0, 0.0, 0.0)), dot(vec3(1.0, 1.0, 1.0), vec3(0.0, 0.0, 0.0)))))) - 0.0)), _GLF_ZERO(_GLF_IDENTITY(0.0, 0.0 + (_GLF_IDENTITY(0.0, _GLF_IDENTITY(float(_GLF_IDENTITY(mat4x2(0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0), (mat4x2(0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0)) + mat4x2(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))), max(float(_GLF_IDENTITY(mat4x2(0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0), (mat4x2(0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0)) + mat4x2(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))), float(_GLF_IDENTITY(mat4x2(0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0), (mat4x2(0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0)) + mat4x2(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)))))))), injectionSwitch.x), 0.0, 1.0, 0.0, log(_GLF_IDENTITY(1.0, min(1.0, 1.0))), 1.0, _GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0)), 1.0, 0.0, 0.0, 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y)))), min(_GLF_IDENTITY(1.0, _GLF_IDENTITY((_GLF_IDENTITY(1.0, _GLF_IDENTITY((true ? 1.0 : _GLF_FUZZED(distance(_GLF_IDENTITY(_GLF_IDENTITY(float(true), float(mat2x3(float(true), tan(0.0), 1.0, 0.0, 1.0, 1.0))), min(float(true), float(true))), 3.0))), min(_GLF_IDENTITY((true ? 1.0 : _GLF_FUZZED(distance(_GLF_IDENTITY(_GLF_IDENTITY(float(true), float(mat2x3(float(true), tan(0.0), 1.0, 0.0, 1.0, 1.0))), min(float(true), float(true))), 3.0))), ((true ? 1.0 : _GLF_FUZZED(distance(_GLF_IDENTITY(_GLF_IDENTITY(float(true), float(mat2x3(float(true), tan(0.0), 1.0, 0.0, 1.0, 1.0))), min(float(true), float(true))), 3.0)))) + 0.0), _GLF_IDENTITY((true ? 1.0 : _GLF_FUZZED(distance(_GLF_IDENTITY(_GLF_IDENTITY(float(true), float(mat2x3(float(true), tan(0.0), 1.0, 0.0, 1.0, 1.0))), min(float(true), float(true))), 3.0))), float(vec2((true ? 1.0 : _GLF_FUZZED(distance(_GLF_IDENTITY(_GLF_IDENTITY(float(true), float(mat2x3(float(true), tan(0.0), 1.0, 0.0, 1.0, 1.0))), min(float(true), float(true))), 3.0))), 1.0))))))) / determinant(mat4(1.0, 0.0, 0.0, _GLF_ZERO(_GLF_IDENTITY(0.0, max(0.0, _GLF_IDENTITY(0.0, float(mat4x3(0.0, 0.0, 0.0, 1.0, 1.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)), 1.0, 0.0, 1.0, 1.0, 0.0, 1.0))))), injectionSwitch.x), 0.0, 1.0, 0.0, log(_GLF_IDENTITY(1.0, min(1.0, 1.0))), 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y))), min((_GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(distance(_GLF_IDENTITY(float(true), min(float(true), float(true))), 3.0))))) / determinant(mat4(1.0, 0.0, 0.0, _GLF_ZERO(_GLF_IDENTITY(0.0, max(0.0, _GLF_IDENTITY(0.0, float(mat4x3(0.0, 0.0, 0.0, _GLF_IDENTITY(1.0, 1.0 * (1.0)), 1.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)), 1.0, 0.0, 1.0, 1.0, 0.0, 1.0))))), injectionSwitch.x), 0.0, 1.0, 0.0, log(_GLF_IDENTITY(1.0, min(1.0, 1.0))), 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y))), (_GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(distance(_GLF_IDENTITY(_GLF_IDENTITY(float(true), min(float(true), float(true))), mix(float(_GLF_IDENTITY(float(true), min(float(true), float(true)))), float(_GLF_FUZZED(-53.23)), bool(false))), 3.0))))) / determinant(mat4(1.0, 0.0, 0.0, _GLF_ZERO(_GLF_IDENTITY(0.0, max(0.0, _GLF_IDENTITY(0.0, float(mat4x3(0.0, 0.0, 0.0, 1.0, 1.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)), 1.0, 0.0, 1.0, 1.0, 0.0, 1.0))))), injectionSwitch.x), 0.0, 1.0, 0.0, log(_GLF_IDENTITY(1.0, min(1.0, 1.0))), 1.0, 0.0, 1.0, 0.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y)))))), _GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(distance(float(true), 3.0))))) / determinant(mat4(1.0, 0.0, 0.0, _GLF_IDENTITY(_GLF_ZERO(_GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, (0.0) - 0.0), 0.0)), injectionSwitch.x), min(_GLF_IDENTITY(_GLF_ZERO(_GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, (0.0) - 0.0), 0.0)), _GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(-8.6) : injectionSwitch.x))))), mix(float(_GLF_FUZZED(8.7)), float(_GLF_IDENTITY(_GLF_ZERO(_GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, (0.0) - 0.0), 0.0)), _GLF_IDENTITY(injectionSwitch, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch : _GLF_FUZZED(vec2(-5.0, 3875.1369)))).x), 0.0 + (_GLF_ZERO(_GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, _GLF_IDENTITY((0.0) - 0.0, clamp((0.0) - 0.0, (0.0) - 0.0, (0.0) - 0.0))), 0.0)), injectionSwitch.x)))), bool(true))), _GLF_ZERO(_GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, (0.0) - 0.0), 0.0)), injectionSwitch.x))), 0.0, 1.0, 0.0, log(_GLF_IDENTITY(1.0, min(1.0, 1.0))), 1.0, 0.0, 1.0, 0.0, _GLF_IDENTITY(_GLF_IDENTITY(0.0, length(tan(vec2(0.0, 0.0))) + (0.0)), min(0.0, 0.0)), 0.0, _GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(223.603)), bool(false))), 0.0))) + 0.0), _GLF_ONE(1.0, injectionSwitch.y))))))));
 atomicStore(buf[virtual_gid], uint(_GLF_IDENTITY(1, (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0))) ? _GLF_FUZZED(clamp(75202, -3549, -91675)) : 1))), 4, 64, _GLF_IDENTITY(4, (_GLF_IDENTITY(4, min(4, _GLF_IDENTITY(_GLF_IDENTITY(4, ~ (~ (4))), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(4, ~ (~ (4)))), max(~ (_GLF_IDENTITY(4, ~ (~ (4)))), ~ (_GLF_IDENTITY(4, ~ (~ (4))))))))))) | (4)));
 if(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1, 0u ^ (subgroup_local_id + 1)) < subgroup_size, (_GLF_IDENTITY(subgroup_local_id + 1 < subgroup_size, _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec3(subgroup_local_id + 1 < subgroup_size, false, false)), ! (! (bool(_GLF_IDENTITY(bvec3(subgroup_local_id + 1 < subgroup_size, false, false), _GLF_IDENTITY(bvec3(bvec4(bvec3(subgroup_local_id + 1 < subgroup_size, false, false), true)), _GLF_IDENTITY(bvec3(bvec4(bvec3(bvec4(bvec3(subgroup_local_id + 1 < subgroup_size, false, false), true)), false)), bvec3(bvec4(bvec3(bvec4(bvec3(bvec4(bvec3(subgroup_local_id + 1 < subgroup_size, false, false), true)), _GLF_IDENTITY(false, ! (! (false))))), false))))))))), ! (_GLF_IDENTITY(_GLF_IDENTITY(! (bool(bvec3(subgroup_local_id + 1 < subgroup_size, false, false))), bool(bvec4(! (bool(bvec3(subgroup_local_id + 1 < subgroup_size, false, false))), true, true, false))), bool(bvec2(_GLF_IDENTITY(! _GLF_IDENTITY((bool(bvec3(subgroup_local_id + 1 < subgroup_size, false, _GLF_IDENTITY(false, (false) || false)))), ! (_GLF_IDENTITY(! ((bool(bvec3(subgroup_local_id + 1 < subgroup_size, false, false)))), false || (_GLF_IDENTITY(! ((bool(bvec3(subgroup_local_id + 1 < subgroup_size, false, false)))), bool(bvec3(! ((bool(bvec3(subgroup_local_id + 1 < subgroup_size, false, false)))), false, true))))))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec4(! (bool(_GLF_IDENTITY(bvec3(subgroup_local_id + 1 < subgroup_size, false, false), bvec3(bvec3(bvec3(subgroup_local_id + 1 < subgroup_size, _GLF_IDENTITY(false, ! (! (false))), false)))))), true, true, false)), bool(_GLF_IDENTITY(bool(bool(bvec4(! (bool(bvec3(subgroup_local_id + 1 < subgroup_size, false, false))), true, true, false))), true && (bool(bool(bvec4(! _GLF_IDENTITY((bool(bvec3(subgroup_local_id + 1 < subgroup_size, false, false))), (_GLF_IDENTITY((bool(bvec3(subgroup_local_id + 1 < subgroup_size, false, false))), bool(bvec4((bool(bvec3(subgroup_local_id + 1 < subgroup_size, false, false))), true, true, false)))) && true), true, true, false))))))), (_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec4(! (bool(bvec3(subgroup_local_id + 1 < subgroup_size, false, false))), true, true, false)), bool(_GLF_IDENTITY(bool(bool(bvec4(! (bool(bvec3(subgroup_local_id + 1 < subgroup_size, false, false))), true, true, false))), true && (bool(bool(bvec4(! (bool(bvec3(subgroup_local_id + 1 < subgroup_size, false, false))), true, true, false))))))), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(bool(bvec4(! (bool(bvec3(subgroup_local_id + 1 < subgroup_size, false, false))), true, true, false)), bool(_GLF_IDENTITY(bool(bool(bvec4(! (bool(bvec3(subgroup_local_id + 1 < subgroup_size, false, false))), true, true, false))), true && (bool(bool(bvec4(! (bool(bvec3(subgroup_local_id + 1 < subgroup_size, false, false))), true, true, false))))))), true)), true && (bool(bvec2(_GLF_IDENTITY(bool(bvec4(! (bool(bvec3(subgroup_local_id + 1 < subgroup_size, false, false))), true, true, false)), bool(_GLF_IDENTITY(bool(bool(bvec4(! (bool(bvec3(subgroup_local_id + 1 < subgroup_size, false, false))), true, true, false))), true && (bool(bool(bvec4(! (bool(bvec3(subgroup_local_id + 1 < subgroup_size, false, false))), true, true, false))))))), true)))))) && _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0)) + 0.0) < injectionSwitch.y))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec4(! (bool(_GLF_IDENTITY(bvec3(subgroup_local_id + 1 < subgroup_size, false, false), bvec3(bvec3(bvec3(subgroup_local_id + 1 < subgroup_size, _GLF_IDENTITY(false, ! (! (false))), false)))))), true, true, false)), bool(_GLF_IDENTITY(bool(bool(bvec4(! (bool(bvec3(subgroup_local_id + 1 < subgroup_size, false, false))), true, true, false))), true && (bool(bool(bvec4(! _GLF_IDENTITY((bool(bvec3(subgroup_local_id + 1 < subgroup_size, false, false))), (_GLF_IDENTITY((bool(bvec3(subgroup_local_id + 1 < subgroup_size, false, false))), bool(bvec4((bool(bvec3(subgroup_local_id + 1 < subgroup_size, false, false))), true, true, false)))) && true), true, true, false))))))), (_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec4(! (bool(bvec3(subgroup_local_id + 1 < subgroup_size, false, false))), true, true, false)), bool(_GLF_IDENTITY(bool(bool(bvec4(! (bool(bvec3(subgroup_local_id + 1 < subgroup_size, false, false))), true, true, false))), true && (bool(bool(bvec4(! (bool(bvec3(subgroup_local_id + 1 < subgroup_size, false, false))), true, true, false))))))), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(bool(bvec4(! (bool(bvec3(subgroup_local_id + 1 < subgroup_size, false, false))), true, true, false)), bool(_GLF_IDENTITY(bool(bool(bvec4(! (bool(bvec3(subgroup_local_id + 1 < subgroup_size, false, false))), true, true, false))), true && (bool(bool(bvec4(! (bool(bvec3(subgroup_local_id + 1 < subgroup_size, false, false))), true, true, false))))))), true)), true && (bool(bvec2(_GLF_IDENTITY(bool(bvec4(! (bool(bvec3(subgroup_local_id + 1 < subgroup_size, false, false))), true, true, false)), bool(_GLF_IDENTITY(bool(bool(bvec4(! (bool(bvec3(subgroup_local_id + 1 < subgroup_size, _GLF_IDENTITY(false, bool(bvec4(false, _GLF_IDENTITY(true, ! (! (true))), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), false))), true, true, false))), true && (bool(bool(bvec4(! (bool(bvec3(subgroup_local_id + 1 < subgroup_size, false, _GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (false))))))))), true, true, false))))))), true)))))) && _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0)) + 0.0) < injectionSwitch.y))))))), true))))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   atomicStore(buf[_GLF_struct_replacement_11._f2.next_virtual_gid], uint(2), 4, _GLF_IDENTITY(64, (_GLF_IDENTITY(64, (64) << 0)) - _GLF_IDENTITY(_GLF_IDENTITY(0, (0) | (0)), int(_GLF_IDENTITY(ivec2(_GLF_IDENTITY(_GLF_IDENTITY(0, (0) | (0)), max(_GLF_IDENTITY(_GLF_IDENTITY(0, (0) | (0)), (_GLF_IDENTITY(0, (0) | (0))) ^ 0), _GLF_IDENTITY(0, (0) | (0)))), 0), ivec2(0, 0) ^ (ivec2(_GLF_IDENTITY(_GLF_IDENTITY(0, (0) | (0)), max(_GLF_IDENTITY(_GLF_IDENTITY(0, (0) | (0)), (_GLF_IDENTITY(0, (0) | (0))) ^ 0), _GLF_IDENTITY(0, (0) | (0)))), 0)))))), 4);
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        return;
       return;
       if(_GLF_DEAD(false))
        return;
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (! (_GLF_DEAD(false)))))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), true && (_GLF_IDENTITY(! (! (false)), bool(bvec4(_GLF_IDENTITY(! (! (false)), ! (! _GLF_IDENTITY((! (! (false))), (_GLF_IDENTITY((! (! (false))), true && ((_GLF_IDENTITY(! (! (false)), (_GLF_IDENTITY(! (! (false)), false || (! (! (false))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))) || false))), false, false, true))))))), true && (_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), ! (! (_GLF_IDENTITY(false, ! (! (false))))))))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   subgroupAll(false);
  }
 else
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, bool(bvec2(false, false)))))))))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     return;
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED((3.8 + -26.08)), _GLF_FUZZED((_GLF_IDENTITY(0.9 - 58.29, min(0.9 - 58.29, 0.9 - 58.29))))), _GLF_IDENTITY(vec2(_GLF_IDENTITY((injectionSwitch)[0], _GLF_IDENTITY(float(mat4((injectionSwitch)[0], 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, round(length(normalize(1.0))), 0.0, 1.0, 1.0, 1.0, 0.0)), float(vec2(float(mat4((injectionSwitch)[0], 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, round(length(normalize(1.0))), 0.0, 1.0, 1.0, 1.0, 0.0)), 1.0)))), (injectionSwitch)[1]), mat2(1.0) * (vec2(_GLF_IDENTITY((injectionSwitch)[0], _GLF_IDENTITY(float(mat4((injectionSwitch)[0], 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, round(length(normalize(1.0))), 0.0, 1.0, 1.0, 1.0, 0.0)), float(vec2(float(mat4((injectionSwitch)[0], 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, round(length(normalize(1.0))), 0.0, 1.0, 1.0, 1.0, 0.0)), 1.0)))), (injectionSwitch)[1]))), bvec2(true, true))).x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         if(_GLF_DEAD(false))
          return;
         return;
        }
       return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(false))
        return;
      }
    }
   atomicStore(buf[_GLF_struct_replacement_11._f2.next_virtual_gid], uint(2), 4, 64, 4);
   if(_GLF_DEAD(false))
    return;
   subgroupAll(_GLF_IDENTITY(true, (_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, (true) || false))))) && true));
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(mat3x4(injectionSwitch, 1.0, _GLF_IDENTITY(_GLF_IDENTITY(1.0, float(_GLF_IDENTITY(mat4(1.0, 0.0, 1.0, abs(sin(0.0)), 1.0, _GLF_IDENTITY(abs(1.0), float(mat2(abs(1.0), 1.0, 1.0, 1.0))), _GLF_IDENTITY(abs(1.0), (false ? _GLF_FUZZED(-846.266) : abs(1.0))), 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0), (false ? _GLF_FUZZED(mat4(-1.6, 6.3, -14.28, 7.4, -8.3, -1.6, 667.314, -4485.5860, -9742.2194, 9.3, 592.366, _GLF_IDENTITY(174.591, clamp(174.591, 174.591, 174.591)), 2.4, -24.70, -5.8, 4.3)) : mat4(1.0, 0.0, 1.0, abs(sin(0.0)), 1.0, abs(1.0), abs(1.0), 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0))))), (false ? _GLF_FUZZED(distance(step(vec4(-35.35, -1.7, 3.3, 8.1), vec4(929.925, -161.094, -2.5, 8075.8497)), vec4(-785.147, 9.9, -16.04, -429.589))) : _GLF_IDENTITY(1.0, float(_GLF_IDENTITY(mat4(1.0, 0.0, 1.0, abs(sin(0.0)), 1.0, _GLF_IDENTITY(abs(1.0), float(mat2(abs(1.0), 1.0, 1.0, 1.0))), _GLF_IDENTITY(abs(1.0), (false ? _GLF_FUZZED(-846.266) : abs(1.0))), 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0), (false ? _GLF_FUZZED(mat4(-1.6, 6.3, -14.28, 7.4, -8.3, -1.6, 667.314, -4485.5860, -9742.2194, 9.3, 592.366, _GLF_IDENTITY(174.591, clamp(174.591, 174.591, _GLF_IDENTITY(174.591, (174.591) / 1.0))), 2.4, -24.70, -5.8, 4.3)) : mat4(1.0, 0.0, 1.0, abs(sin(0.0)), 1.0, abs(1.0), abs(1.0), 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0))))))), 0.0, 0.0, _GLF_IDENTITY(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), max(1.0, 1.0)), 0.0, _GLF_IDENTITY(0.0, 0.0 + (0.0)), 1.0, 1.0, 0.0))).y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), vec2(vec3(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)), 1.0))).x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, true, _GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, (true) || false)))), true)))))
      return;
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
}
