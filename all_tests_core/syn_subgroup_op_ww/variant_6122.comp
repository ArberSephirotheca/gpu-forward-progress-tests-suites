#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec2(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec4(bvec2(false, false), false, true)))))))), _GLF_IDENTITY((_GLF_IDENTITY(false, bool(bvec2(false, false)))), bool(bool(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(false, bool(bvec2(false, false)))), true && ((_GLF_IDENTITY(false, bool(bvec2(false, false)))))), bool(_GLF_IDENTITY(bvec3((_GLF_IDENTITY(false, bool(bvec2(false, false)))), false, true), _GLF_IDENTITY(bvec3(bvec4(_GLF_IDENTITY(bvec3((_GLF_IDENTITY(false, bool(bvec2(false, false)))), false, true), _GLF_IDENTITY(bvec3(bvec3(bvec3((_GLF_IDENTITY(false, bool(bvec2(false, false)))), false, true))), bvec3(bvec4(bvec3(bvec3(bvec3((_GLF_IDENTITY(false, bool(bvec2(false, false)))), false, true))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), false)), bvec3(bvec4(bvec3(bvec4(bvec3((_GLF_IDENTITY(false, bool(bvec2(false, false)))), false, true), false)), true))))))))) || false)))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
      return;
     return;
    }
   return;
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (bool(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) || false)), bool(bool(bool(_GLF_IDENTITY(bool(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (bool(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) || false)))))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(_GLF_IDENTITY(vec2(injectionSwitch.y, 1.0), mix(vec2(_GLF_FUZZED(182.901), (vec2(injectionSwitch.y, 1.0))[1]), vec2((vec2(injectionSwitch.y, 1.0))[0], _GLF_FUZZED(-431.875)), bvec2(_GLF_IDENTITY(_GLF_IDENTITY(true, bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(true, (true) || false), false), bvec2(bvec2(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(true, _GLF_IDENTITY((true), false || ((true))) || false), false), bvec2(bvec4(bvec2(_GLF_IDENTITY(true, _GLF_IDENTITY((true), _GLF_IDENTITY(false, false || (false)) || ((true))) || false), false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)))))))), bool(bvec2(_GLF_IDENTITY(true, bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(true, (true) || false), _GLF_IDENTITY(false, false || (false))), bvec2(bvec2(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(true, _GLF_IDENTITY((true), false || ((true))) || false), false), bvec2(bvec4(bvec2(_GLF_IDENTITY(true, _GLF_IDENTITY((true), false || ((true))) || false), false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)))))))), false))), false)))))))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)), (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0))) + vec2(0.0, 0.0)), injectionSwitch)).y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
      }
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        return;
       return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
      }
     return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, bool(bvec3(false, false, true))), false, true)))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))))))
    return;
   return;
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_DEAD(false)))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
    return;
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
  }
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, float(_GLF_IDENTITY(vec2(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x, 1.0), (true ? vec2(injectionSwitch.x, _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(2.3)), float(1.0), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))) : _GLF_FUZZED(vec2(784.379, 4.5)))))) > injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_FALSE(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) && true)) || false), (injectionSwitch.x > injectionSwitch.y))), false || (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)), false || _GLF_IDENTITY(_GLF_IDENTITY((bool(bvec3(false, _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0))), false))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || ((bool(bvec3(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY((_GLF_IDENTITY(bool(bvec3(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)), bool(bvec2(bool(bvec3(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)), _GLF_IDENTITY(false, ! (! (false))))))), bool(bool((bool(bvec3(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)))))), false), bvec2(bvec2(bvec2(_GLF_IDENTITY((bool(bvec3(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))), bool(bool((bool(_GLF_IDENTITY(bvec3(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false), bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false), bvec3(bvec4(bvec3(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false), false)))), bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec3(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false), bvec3(bvec4(bvec3(false, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(float(80385u)), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(-1938.6978)), bvec2(true, false))).x < injectionSwitch.y)), false), false)))))))))))))), false))))), true && (bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY((bool(bvec3(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))), bool(bool((bool(bvec3(false, _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), ! (! (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), false)))))), false), bvec2(bvec2(bvec2(_GLF_IDENTITY((bool(bvec3(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))), bool(bool((bool(bvec3(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)))))), false)))))))))), bool(bvec3(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)), false || (bool(bvec3(false, _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), ! (! (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), bool(bvec4(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) < injectionSwitch.y)), false, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))), _GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) || false)))))))), true, false))), false || (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)), false || (bool(bvec3(false, _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(injectionSwitch[0], injectionSwitch[1]), clamp(vec2(injectionSwitch[0], injectionSwitch[1]), vec2(injectionSwitch[0], injectionSwitch[1]), vec2(injectionSwitch[0], injectionSwitch[1])))).y)), false))))))))) && true))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            return;
           return;
          }
         return;
        }
       return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
  }
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch, vec2(mat4x2(injectionSwitch, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0)))[1])).x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(true ? injectionSwitch.y : _GLF_FUZZED(_GLF_IDENTITY(-2021.5087, clamp(_GLF_IDENTITY(-2021.5087, (false ? _GLF_FUZZED(6.7) : -2021.5087)), -2021.5087, _GLF_IDENTITY(-2021.5087, clamp(-2021.5087, -2021.5087, -2021.5087))))), clamp(true ? injectionSwitch.y : _GLF_FUZZED(_GLF_IDENTITY(_GLF_IDENTITY(-2021.5087, clamp(_GLF_IDENTITY(-2021.5087, (false ? _GLF_FUZZED(6.7) : -2021.5087)), -2021.5087, _GLF_IDENTITY(-2021.5087, clamp(-2021.5087, -2021.5087, -2021.5087)))), min(_GLF_IDENTITY(_GLF_IDENTITY(-2021.5087, clamp(_GLF_IDENTITY(-2021.5087, (false ? _GLF_FUZZED(6.7) : -2021.5087)), -2021.5087, _GLF_IDENTITY(-2021.5087, clamp(-2021.5087, -2021.5087, -2021.5087)))), (_GLF_IDENTITY(-2021.5087, clamp(_GLF_IDENTITY(-2021.5087, (false ? _GLF_FUZZED(6.7) : -2021.5087)), -2021.5087, _GLF_IDENTITY(-2021.5087, clamp(-2021.5087, -2021.5087, -2021.5087))))) - 0.0), _GLF_IDENTITY(-2021.5087, clamp(_GLF_IDENTITY(-2021.5087, (false ? _GLF_FUZZED(6.7) : -2021.5087)), -2021.5087, _GLF_IDENTITY(-2021.5087, clamp(-2021.5087, -2021.5087, -2021.5087))))))), true ? injectionSwitch.y : _GLF_FUZZED(_GLF_IDENTITY(-2021.5087, clamp(_GLF_IDENTITY(-2021.5087, (false ? _GLF_FUZZED(6.7) : -2021.5087)), -2021.5087, _GLF_IDENTITY(-2021.5087, _GLF_IDENTITY(clamp(-2021.5087, -2021.5087, -2021.5087), clamp(clamp(-2021.5087, -2021.5087, -2021.5087), _GLF_IDENTITY(clamp(-2021.5087, -2021.5087, -2021.5087), min(clamp(-2021.5087, -2021.5087, -2021.5087), clamp(-2021.5087, -2021.5087, -2021.5087))), clamp(-2021.5087, -2021.5087, -2021.5087))))))), true ? injectionSwitch.y : _GLF_FUZZED(_GLF_IDENTITY(-2021.5087, clamp(_GLF_IDENTITY(-2021.5087, (false ? _GLF_FUZZED(6.7) : -2021.5087)), -2021.5087, _GLF_IDENTITY(-2021.5087, clamp(-2021.5087, -2021.5087, -2021.5087)))))))))), bool(bool((_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch, vec2(mat4x2(injectionSwitch, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0)))[1])).x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(true ? injectionSwitch.y : _GLF_FUZZED(_GLF_IDENTITY(-2021.5087, clamp(_GLF_IDENTITY(-2021.5087, (false ? _GLF_FUZZED(6.7) : -2021.5087)), -2021.5087, _GLF_IDENTITY(-2021.5087, clamp(-2021.5087, -2021.5087, -2021.5087))))), clamp(true ? injectionSwitch.y : _GLF_FUZZED(_GLF_IDENTITY(_GLF_IDENTITY(-2021.5087, clamp(_GLF_IDENTITY(-2021.5087, (false ? _GLF_FUZZED(6.7) : -2021.5087)), -2021.5087, _GLF_IDENTITY(-2021.5087, clamp(-2021.5087, -2021.5087, -2021.5087)))), min(_GLF_IDENTITY(_GLF_IDENTITY(-2021.5087, clamp(_GLF_IDENTITY(-2021.5087, (false ? _GLF_FUZZED(6.7) : -2021.5087)), -2021.5087, _GLF_IDENTITY(-2021.5087, clamp(-2021.5087, -2021.5087, -2021.5087)))), (_GLF_IDENTITY(-2021.5087, clamp(_GLF_IDENTITY(-2021.5087, (false ? _GLF_FUZZED(6.7) : -2021.5087)), -2021.5087, _GLF_IDENTITY(-2021.5087, clamp(-2021.5087, -2021.5087, -2021.5087))))) - 0.0), _GLF_IDENTITY(-2021.5087, clamp(_GLF_IDENTITY(-2021.5087, (false ? _GLF_FUZZED(6.7) : -2021.5087)), -2021.5087, _GLF_IDENTITY(-2021.5087, clamp(-2021.5087, -2021.5087, -2021.5087))))))), true ? injectionSwitch.y : _GLF_FUZZED(_GLF_IDENTITY(-2021.5087, clamp(_GLF_IDENTITY(-2021.5087, (false ? _GLF_FUZZED(6.7) : -2021.5087)), -2021.5087, _GLF_IDENTITY(-2021.5087, _GLF_IDENTITY(clamp(-2021.5087, -2021.5087, -2021.5087), clamp(clamp(-2021.5087, -2021.5087, -2021.5087), _GLF_IDENTITY(clamp(-2021.5087, -2021.5087, -2021.5087), min(clamp(-2021.5087, -2021.5087, -2021.5087), clamp(-2021.5087, -2021.5087, -2021.5087))), clamp(-2021.5087, -2021.5087, -2021.5087))))))), true ? injectionSwitch.y : _GLF_FUZZED(_GLF_IDENTITY(-2021.5087, clamp(_GLF_IDENTITY(-2021.5087, (false ? _GLF_FUZZED(6.7) : -2021.5087)), -2021.5087, _GLF_IDENTITY(-2021.5087, clamp(-2021.5087, -2021.5087, -2021.5087))))))))))))))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
    return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), _GLF_IDENTITY((_GLF_IDENTITY(false, ! (! (false)))) && true, (_GLF_IDENTITY((_GLF_IDENTITY(false, ! (! (false)))) && true, true && ((_GLF_IDENTITY(false, ! (! (false)))) && true))) && true))))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     return;
    }
   return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(8.7)), float(injectionSwitch.x), bool(true))) > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(8.7)), float(injectionSwitch.x), bool(true))) > injectionSwitch.y)))) || false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)))).x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))), (injectionSwitch.x > injectionSwitch.y) && true)))), _GLF_IDENTITY((_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false || ((_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) && true), ! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))), (injectionSwitch.x > injectionSwitch.y) && true)))), _GLF_IDENTITY((_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false || ((_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) && true)))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, (false) || false))), (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)) && true, true && (((injectionSwitch.x > injectionSwitch.y)) && true)))) || false))), false || (_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) || false), (injectionSwitch.x > injectionSwitch.y))))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    return;
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(false))
    return;
  }
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(true && (false), false || (true && (false))))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
    }
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, (false) || false), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED((vec2(-97.73, -47.01) + 8.2)) : injectionSwitch)).x < injectionSwitch.y)), true)))) || false), (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          return;
         return;
        }
       return;
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, true, false, false)))))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), ! (! (bool(false))))))))
          return;
         return;
        }
       return;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         return;
        }
      }
     return;
    }
   if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_DEAD(false))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   return;
  }
 uint num_workgroup = gl_NumWorkGroups.x;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_WRAPPED_IF_TRUE(true))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(-5.0, 8.7)))).y, (_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))) * 1.0), mix(float(_GLF_FUZZED(57.18)), float(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat4x2(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), determinant(_GLF_IDENTITY(mat2(1.0, 0.0, _GLF_IDENTITY(sin(0.0), max(_GLF_IDENTITY(sin(0.0), mix(float(_GLF_IDENTITY(_GLF_IDENTITY(sin(0.0), (sin(0.0)) / 1.0), float(mat3(sin(0.0), 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0)))), float(_GLF_FUZZED(749.925)), bool(false))), sin(0.0))), 1.0), transpose(transpose(mat2(_GLF_IDENTITY(_GLF_IDENTITY(1.0, float(mat4(1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0))), max(1.0, 1.0)), 0.0, sin(0.0), 1.0))))), 1.0, 0.0, abs(sin(0.0)), _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-4217.8199)), float(_GLF_IDENTITY(1.0, min(1.0, 1.0))), bool(true))), 0.0)), (true ? vec2(mat4x2(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), determinant(mat2(1.0, 0.0, sin(0.0), _GLF_IDENTITY(1.0, min(1.0, 1.0)))), 1.0, 0.0, abs(sin(0.0)), 1.0, 0.0)) : _GLF_FUZZED(vec2(3.0, 9883.5844))))).y), bool(true)))))))))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        return;
       return;
       if(_GLF_DEAD(false))
        return;
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true))), _GLF_IDENTITY((_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch), mix(_GLF_IDENTITY(vec2(_GLF_FUZZED(32.60), _GLF_FUZZED(-7.0)), vec2(vec4(vec2(_GLF_FUZZED(32.60), _GLF_FUZZED(-7.0)), sin(0.0), 0.0))), vec2((mat2(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-1.1)), float(injectionSwitch.y), bool(_GLF_IDENTITY(true, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x < injectionSwitch.y)) && (true))))))) * (injectionSwitch))[0], (mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch))[1]), bvec2(true, true)))).y)))), ! (! ((_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch), mix(_GLF_IDENTITY(vec2(_GLF_FUZZED(32.60), _GLF_FUZZED(-7.0)), vec2(vec4(vec2(_GLF_FUZZED(32.60), _GLF_FUZZED(-7.0)), sin(0.0), 0.0))), vec2((mat2(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-1.1)), float(injectionSwitch.y), bool(_GLF_IDENTITY(true, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x < injectionSwitch.y)) && (true))))))) * (injectionSwitch))[0], (mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch))[1]), bvec2(true, true)))).y))))))) && true))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     return;
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(min(injectionSwitch.x, injectionSwitch.x), (min(injectionSwitch.x, injectionSwitch.x)) - 0.0)) > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_IDENTITY(_GLF_DEAD(false), bool(_GLF_IDENTITY(bool(_GLF_DEAD(false)), ! (! (bool(_GLF_DEAD(false))))))))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(vec4(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)), 1.0, _GLF_IDENTITY(0.0, min(0.0, 0.0))), max(vec4(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)), 1.0, _GLF_IDENTITY(0.0, min(0.0, 0.0))), vec4(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)), 1.0, _GLF_IDENTITY(0.0, min(0.0, 0.0))))))).x, float(mat2(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + _GLF_IDENTITY(0.0, max(0.0, _GLF_IDENTITY(0.0, min(0.0, 0.0))))), cos(0.0), 1.0, 0.0))) > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(false))
        return;
       return;
       if(_GLF_DEAD(false))
        return;
      }
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (false))))))))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            return;
           return;
          }
         return;
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-7.0), _GLF_FUZZED(76.17)), vec2(_GLF_IDENTITY((injectionSwitch)[0], (_GLF_IDENTITY((injectionSwitch)[_GLF_IDENTITY(0, (0) | 0)], ((injectionSwitch)[0]) + 0.0)) + 0.0), (injectionSwitch)[1]), bvec2(true, true))).y))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     return;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
    return;
  }
 else
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, false || _GLF_IDENTITY((false), bool(bool((false))))))))))
          {
           if(_GLF_DEAD(false))
            return;
           return;
          }
         return;
        }
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3((injectionSwitch.x > injectionSwitch.y), true, false), bvec3(bvec4(bvec3((injectionSwitch.x > injectionSwitch.y), true, false), false)))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3((injectionSwitch.x > injectionSwitch.y), true, false), bvec3(bvec4(bvec3((injectionSwitch.x > injectionSwitch.y), true, false), false)))), bool(bvec2(bool(_GLF_IDENTITY(bvec3((injectionSwitch.x > injectionSwitch.y), true, false), bvec3(bvec4(bvec3((injectionSwitch.x > injectionSwitch.y), true, false), false)))), false)))), bool(bvec4(! (_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3((injectionSwitch.x > injectionSwitch.y), true, false), bvec3(bvec4(bvec3((injectionSwitch.x > injectionSwitch.y), true, false), false)))), bool(bvec2(bool(_GLF_IDENTITY(bvec3((injectionSwitch.x > injectionSwitch.y), true, false), bvec3(bvec4(bvec3((injectionSwitch.x > injectionSwitch.y), true, false), false)))), false)))), false, true, false)))))))))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(37.46))), injectionSwitch.y)), false, true, false)))))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     return;
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
    return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, false || (false)), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(mat4x3(injectionSwitch.y, 1.0, 0.0, 0.0, determinant(mat3(0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, float(mat2x4(0.0, 1.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0, 0.0, 1.0))), _GLF_IDENTITY(0.0, max(0.0, 0.0)), _GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0, cos(0.0), 0.0)), 0.0, 1.0, cos(0.0), 0.0, 1.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), determinant(mat3(1.0, 0.0, 0.0, 0.0, 1.0, 0.0, cos(0.0), 1.0, 1.0)))))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) || false), (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
          return;
         return;
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        return;
       return;
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(asinh(degrees(vec2(-0.4, -29.63)))) : _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), injectionSwitch)))).y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
        return;
      }
     return;
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, false || (false)), (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
    }
   return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 uint workgroup_size = gl_WorkGroupSize.x;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 uint workgroup_id = gl_WorkGroupID.x;
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, false)))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 uint workgroup_base = workgroup_size * workgroup_id;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch), vec2(0.0, 0.0) + (_GLF_IDENTITY((injectionSwitch), min(_GLF_IDENTITY((injectionSwitch), vec2(vec3((injectionSwitch), 0.0))), (injectionSwitch))))) / vec2(1.0, 1.0)).y))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
      }
     return;
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
      return;
    }
   return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0) > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((false), ((false)) && true)))))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))
  return;
 if(_GLF_DEAD(false))
  return;
 uint virtual_gid = workgroup_base + _GLF_IDENTITY(subgroup_id * subgroup_size, clamp(_GLF_IDENTITY(subgroup_id, (subgroup_id) >> 0u) * subgroup_size, subgroup_id * subgroup_size, _GLF_IDENTITY(subgroup_id * _GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size))), clamp(subgroup_id * subgroup_size, subgroup_id * subgroup_size, subgroup_id * subgroup_size)))) + subgroup_local_id;
 uint next_virtual_gid = workgroup_base + subgroup_id * subgroup_size + _GLF_IDENTITY(_GLF_IDENTITY(((_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, (_GLF_IDENTITY(1, clamp(1, 1, 1))) + int(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), (false ? _GLF_FUZZED(-60.26) : _GLF_ZERO(0.0, injectionSwitch.x))))), _GLF_IDENTITY((subgroup_local_id + _GLF_IDENTITY(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, clamp(1, 1, 1))) + int(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x))))))), min(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, clamp(1, 1, 1))) + int(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x))))))), _GLF_IDENTITY(1, (_GLF_IDENTITY(1, clamp(1, 1, 1))) + int(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)))))))))), ~ (_GLF_IDENTITY(~ ((subgroup_local_id + _GLF_IDENTITY(1, (_GLF_IDENTITY(1, clamp(1, 1, 1))) + int(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x))))))))), uint(_GLF_IDENTITY(uvec4(~ ((subgroup_local_id + _GLF_IDENTITY(1, (_GLF_IDENTITY(1, clamp(1, 1, 1))) + int(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x))))))))), 0u, 0u, (0u ^ 1u)), (uvec4(~ ((subgroup_local_id + _GLF_IDENTITY(1, (_GLF_IDENTITY(1, clamp(1, 1, 1))) + int(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x))))))))), 0u, 0u, (0u ^ 1u))) / uvec4(1u, 1u, 1u, 1u)))))) | (_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, (_GLF_IDENTITY(1, clamp(1, 1, 1))) + int(_GLF_ZERO(0.0, injectionSwitch.x))), ~ (~ (subgroup_local_id + _GLF_IDENTITY(1, (_GLF_IDENTITY(1, clamp(1, 1, 1))) + int(_GLF_ZERO(0.0, injectionSwitch.x))))))))) % subgroup_size), clamp(_GLF_IDENTITY(((subgroup_local_id + 1) % subgroup_size), _GLF_IDENTITY((0u >> _GLF_IDENTITY(uint(8u), uint(8u))), ~ (~ ((0u >> _GLF_IDENTITY(uint(8u), uint(8u)))))) | (_GLF_IDENTITY(((subgroup_local_id + _GLF_IDENTITY(1, clamp(_GLF_IDENTITY(1, (1) | int(_GLF_ZERO(_GLF_IDENTITY(0.0, min(0.0, 0.0)), injectionSwitch.x))), 1, 1))) % subgroup_size), 0u ^ (((subgroup_local_id + _GLF_IDENTITY(_GLF_IDENTITY(1, _GLF_IDENTITY(1 * (_GLF_IDENTITY(1, (1) | 0)), (true ? 1 * (_GLF_IDENTITY(1, (1) | 0)) : _GLF_IDENTITY(_GLF_FUZZED(-98450), (_GLF_FUZZED(-98450)) | (_GLF_FUZZED(-98450)))))), (_GLF_IDENTITY(1, 1 * (_GLF_IDENTITY(1, _GLF_IDENTITY((1), ((1)) ^ 0) | 0)))) | 0)) % subgroup_size))))), _GLF_IDENTITY((_GLF_IDENTITY((subgroup_local_id + 1), (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id + 1, ~ (~ (_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) | 0u))))), ((_GLF_IDENTITY(subgroup_local_id + 1, uint(uvec2(subgroup_local_id + 1, ((1u << _GLF_IDENTITY(uint(5u), uint(5u))) >> _GLF_IDENTITY(uint(5u), uint(5u)))))))) | 0u)) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x))) % subgroup_size), 0u ^ (_GLF_IDENTITY(((subgroup_local_id + 1) % subgroup_size), (_GLF_IDENTITY(((subgroup_local_id + _GLF_IDENTITY(1, _GLF_IDENTITY(0, (0) ^ 0) | (_GLF_IDENTITY(1, (1) / 1)))) % _GLF_IDENTITY(subgroup_size, (true ? subgroup_size : _GLF_FUZZED(workgroup_base)))), ((_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, ((subgroup_local_id + 1) % subgroup_size) << _GLF_IDENTITY(0u, _GLF_IDENTITY((_GLF_IDENTITY(0u, (0u) / 1u)), max((_GLF_IDENTITY(0u, (0u) / 1u)), (_GLF_IDENTITY(0u, (0u) / 1u)))) | (0u))))) - 0u)) - 0u))), (_GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, uint(uvec2(_GLF_IDENTITY((subgroup_local_id + _GLF_IDENTITY(1, _GLF_IDENTITY(0, (0) * 1) + (1))) % subgroup_size, clamp((subgroup_local_id + 1) % subgroup_size, (subgroup_local_id + 1) % subgroup_size, _GLF_IDENTITY((subgroup_local_id + _GLF_IDENTITY(1, (_GLF_IDENTITY(1, clamp(1, 1, 1))) >> 0)) % subgroup_size, ~ (~ ((subgroup_local_id + _GLF_IDENTITY(1, (_GLF_IDENTITY(_GLF_IDENTITY(1, clamp(1, 1, 1)), min(_GLF_IDENTITY(1, clamp(1, 1, 1)), _GLF_IDENTITY(1, clamp(1, 1, 1))))) >> 0)) % subgroup_size))))), 0u))), uint(uvec3(_GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, uint(uvec2(_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, clamp((subgroup_local_id + 1) % subgroup_size, (subgroup_local_id + 1) % _GLF_IDENTITY(subgroup_size, (subgroup_size) | (0u ^ 0u)), (subgroup_local_id + 1) % subgroup_size)), 0u))), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, uint(uvec2(_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id + 1, uint(uint(subgroup_local_id + 1)))) % subgroup_size, clamp((subgroup_local_id + 1) % subgroup_size, (subgroup_local_id + 1) % subgroup_size, (subgroup_local_id + 1) % subgroup_size)), 0u)))), max(~ _GLF_IDENTITY((_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, uint(uvec2(_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id + 1, uint(uint(subgroup_local_id + 1)))) % subgroup_size, clamp((subgroup_local_id + 1) % subgroup_size, (subgroup_local_id + 1) % subgroup_size, (subgroup_local_id + 1) % subgroup_size)), 0u)))), (_GLF_IDENTITY((_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, uint(uvec2(_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id + 1, uint(uint(_GLF_IDENTITY(subgroup_local_id + 1, clamp(subgroup_local_id + 1, _GLF_IDENTITY(subgroup_local_id + 1, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(subgroup_local_id + 1, min(subgroup_local_id + 1, subgroup_local_id + 1))), (~ (_GLF_IDENTITY(subgroup_local_id + 1, min(subgroup_local_id + 1, subgroup_local_id + 1)))) ^ 0u))), subgroup_local_id + 1)))))) % subgroup_size, clamp((subgroup_local_id + 1) % subgroup_size, (subgroup_local_id + 1) % subgroup_size, (subgroup_local_id + 1) % subgroup_size)), 0u)))), ((_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, uint(uvec2(_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id + 1, uint(uint(subgroup_local_id + 1)))) % subgroup_size, clamp((subgroup_local_id + 1) % subgroup_size, (subgroup_local_id + 1) % subgroup_size, (_GLF_IDENTITY(subgroup_local_id, clamp(subgroup_local_id, subgroup_local_id, subgroup_local_id)) + 1) % subgroup_size)), 0u))))) | ((_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, uint(_GLF_IDENTITY(uvec2(_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id + 1, uint(uint(subgroup_local_id + 1)))) % subgroup_size, clamp((subgroup_local_id + 1) % subgroup_size, (subgroup_local_id + 1) % subgroup_size, (subgroup_local_id + 1) % subgroup_size)), 0u), _GLF_IDENTITY(uvec2(uvec4(uvec2(_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id + 1, uint(uint(subgroup_local_id + 1)))) % subgroup_size, clamp((subgroup_local_id + 1) % subgroup_size, (subgroup_local_id + 1) % subgroup_size, (subgroup_local_id + 1) % subgroup_size)), 0u), 0u, 1u)), (uvec2(uvec4(uvec2(_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id + 1, uint(uint(subgroup_local_id + 1)))) % subgroup_size, clamp((subgroup_local_id + 1) % subgroup_size, (subgroup_local_id + 1) % subgroup_size, (subgroup_local_id + 1) % subgroup_size)), 0u), 0u, 1u))) + uvec2(0u, 0u))))))))) | ((_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, uint(uvec2(_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id + 1, uint(uint(subgroup_local_id + 1)))) % subgroup_size, clamp((subgroup_local_id + 1) % subgroup_size, (subgroup_local_id + 1) % subgroup_size, (subgroup_local_id + 1) % subgroup_size)), 0u)))))), _GLF_IDENTITY(~ (_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, uint(uvec2(_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id + 1, uint(uint(subgroup_local_id + 1)))) % subgroup_size, clamp((subgroup_local_id + 1) % subgroup_size, (subgroup_local_id + 1) % subgroup_size, (_GLF_IDENTITY(subgroup_local_id + 1, ((0u | 0u) >> _GLF_IDENTITY(uint(3u), uint(3u))) | (subgroup_local_id + 1))) % subgroup_size)), 0u)))), ~ (~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, 0u ^ ((subgroup_local_id + 1) % subgroup_size)), uint(uvec2(_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id + 1, uint(uint(_GLF_IDENTITY(subgroup_local_id + 1, ~ (_GLF_IDENTITY(~ (subgroup_local_id + 1), (~ (subgroup_local_id + 1)) << 0u))))))) % subgroup_size, clamp((subgroup_local_id + 1) % subgroup_size, (subgroup_local_id + 1) % subgroup_size, (subgroup_local_id + 1) % subgroup_size)), 0u)))), (~ (_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, uint(uvec2(_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id + 1, uint(_GLF_IDENTITY(uint(subgroup_local_id + 1), clamp(uint(subgroup_local_id + 1), uint(subgroup_local_id + 1), _GLF_IDENTITY(uint(subgroup_local_id + 1), uint(uvec2(uint(subgroup_local_id + 1), 1u)))))))) % subgroup_size, clamp((subgroup_local_id + 1) % subgroup_size, (subgroup_local_id + 1) % subgroup_size, (subgroup_local_id + 1) % subgroup_size)), _GLF_IDENTITY(0u, (0u) | (0u))))))) | 0u)))))))), _GLF_IDENTITY(_GLF_IDENTITY(0u, 0u | (_GLF_IDENTITY(0u, uint(uvec3(0u, 1u, 1u))))), (_GLF_IDENTITY(0u, 0u | (_GLF_IDENTITY(0u, uint(uvec3(_GLF_IDENTITY(0u, 0u ^ (0u)), 1u, 1u)))))) | 0u), _GLF_IDENTITY(1u, ~ (~ (1u))))))))), ((_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id + 1, 1u * (_GLF_IDENTITY(subgroup_local_id + 1, 0u ^ (subgroup_local_id + 1))))) % _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, min(_GLF_IDENTITY(subgroup_size, max(_GLF_IDENTITY(subgroup_size, clamp(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size)))) | (subgroup_size)), (subgroup_size) - 0u), subgroup_size, subgroup_size)), _GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, subgroup_size)))), subgroup_size)), (_GLF_IDENTITY(subgroup_size, min(_GLF_IDENTITY(subgroup_size, max(_GLF_IDENTITY(subgroup_size, clamp(_GLF_IDENTITY(subgroup_size, (subgroup_size) - 0u), subgroup_size, _GLF_IDENTITY(subgroup_size, ~ (_GLF_IDENTITY(~ (subgroup_size), min(~ (subgroup_size), ~ (subgroup_size))))))), _GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, subgroup_size)))), subgroup_size))) - 0u), _GLF_IDENTITY(uint(uvec4((_GLF_IDENTITY(subgroup_local_id + 1, 1u * (_GLF_IDENTITY(subgroup_local_id + 1, 0u ^ (subgroup_local_id + 1))))) % _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, min(_GLF_IDENTITY(subgroup_size, max(_GLF_IDENTITY(subgroup_size, clamp(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY((_GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size)))), ((_GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size))))) + 0u) | (subgroup_size)), (subgroup_size) - 0u), subgroup_size, subgroup_size)), _GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, subgroup_size)))), subgroup_size)), (_GLF_IDENTITY(subgroup_size, min(_GLF_IDENTITY(subgroup_size, max(_GLF_IDENTITY(subgroup_size, clamp(_GLF_IDENTITY(subgroup_size, (subgroup_size) - 0u), subgroup_size, subgroup_size)), _GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, subgroup_size)))), subgroup_size))) - 0u), 0u, 1u, ((1u << _GLF_IDENTITY(uint(3u), _GLF_IDENTITY(uint(3u), ~ _GLF_IDENTITY((~ (uint(3u))), (1u ^ 0u) * ((~ (uint(3u)))))))) >> _GLF_IDENTITY(uint(3u), uint(3u))))), uint(uvec4(uint(uvec4((_GLF_IDENTITY(subgroup_local_id + 1, 1u * (_GLF_IDENTITY(subgroup_local_id + 1, 0u ^ (subgroup_local_id + 1))))) % _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, min(_GLF_IDENTITY(subgroup_size, max(_GLF_IDENTITY(subgroup_size, clamp(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size)))) | (subgroup_size)), (subgroup_size) - 0u), subgroup_size, subgroup_size)), _GLF_IDENTITY(subgroup_size, clamp(_GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, 0u))), subgroup_size, subgroup_size)))), subgroup_size)), (_GLF_IDENTITY(subgroup_size, min(_GLF_IDENTITY(subgroup_size, max(_GLF_IDENTITY(subgroup_size, clamp(_GLF_IDENTITY(subgroup_size, (subgroup_size) - 0u), subgroup_size, subgroup_size)), _GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, subgroup_size)))), subgroup_size))) - 0u), 0u, 1u, ((1u << _GLF_IDENTITY(uint(3u), _GLF_IDENTITY(uint(3u), ~ (~ (uint(3u)))))) >> _GLF_IDENTITY(uint(3u), uint(3u))))), 0u, 0u, 0u)))))) | (_GLF_IDENTITY(((subgroup_local_id + 1) % subgroup_size), 1u * (((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, ~ (~ (subgroup_local_id))), 0u | (_GLF_IDENTITY(subgroup_local_id, ~ (~ (subgroup_local_id))))) + _GLF_IDENTITY(1, (_GLF_IDENTITY(1, (0 << _GLF_IDENTITY(_GLF_IDENTITY(int(_GLF_IDENTITY(8, 1 * (8))), int(8)), _GLF_IDENTITY((false ? _GLF_FUZZED(10858) : _GLF_IDENTITY(int(8), int(8))), int(int((false ? _GLF_FUZZED(10858) : _GLF_IDENTITY(int(8), int(8)))))))) | (_GLF_IDENTITY(1, min(_GLF_IDENTITY(1, min(1, 1)), 1))))) | int(_GLF_ZERO(0.0, injectionSwitch.x)))) % subgroup_size)))));
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, true, false), bvec3(bvec4(bvec3(false, true, false), true))))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))), (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(bool(! (false))))))))
    return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x) - 0.0) > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 atomicStore(buf[_GLF_IDENTITY(_GLF_IDENTITY(virtual_gid, 1u * (virtual_gid)), clamp(virtual_gid, virtual_gid, virtual_gid))], uint(1), 4, 64, _GLF_IDENTITY(4, _GLF_IDENTITY(_GLF_IDENTITY((4), 0 | ((4))), max((4), (4))) << 0));
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(subgroup_local_id + _GLF_IDENTITY(_GLF_IDENTITY(1, (1) << 0), ~ (_GLF_IDENTITY(~ _GLF_IDENTITY((_GLF_IDENTITY(1, clamp(1, _GLF_IDENTITY(1, _GLF_IDENTITY((1), _GLF_IDENTITY((true ? (1) : _GLF_FUZZED(-21614)), (_GLF_IDENTITY((true ? (1) : _GLF_FUZZED(-21614)), ((true ? (1) : _GLF_FUZZED(-21614))) ^ 0)) | ((true ? (1) : _GLF_FUZZED(-21614))))) | 0), 1))), ~ (_GLF_IDENTITY(~ ((_GLF_IDENTITY(1, clamp(1, _GLF_IDENTITY(1, _GLF_IDENTITY(_GLF_IDENTITY((1), (true ? (1) : _GLF_FUZZED(-21614))), (_GLF_IDENTITY(_GLF_IDENTITY((1), (true ? (1) : _GLF_FUZZED(-21614))), ~ (~ (_GLF_IDENTITY((1), (true ? (1) : _GLF_FUZZED(-21614))))))) - 0) | 0), 1)))), (false ? _GLF_FUZZED(-38253) : ~ ((_GLF_IDENTITY(1, clamp(1, _GLF_IDENTITY(_GLF_IDENTITY(1, (1) << int(_GLF_ZERO(0.0, injectionSwitch.x))), _GLF_IDENTITY((1), (true ? (1) : _GLF_FUZZED(-21614))) | 0), 1)))))))), _GLF_IDENTITY((~ (_GLF_IDENTITY(1, clamp(_GLF_IDENTITY(1, (1) | (1)), _GLF_IDENTITY(_GLF_IDENTITY(1, (1) >> (0 ^ 0)), (1) | 0), 1)))) - 0, (_GLF_IDENTITY((~ (_GLF_IDENTITY(1, clamp(1, _GLF_IDENTITY(1, _GLF_IDENTITY((_GLF_IDENTITY(1, (1) | 0)), ~ (~ ((1)))) | 0), 1)))) - 0, ((~ (_GLF_IDENTITY(1, clamp(1, _GLF_IDENTITY(1, (1) | 0), 1)))) - _GLF_IDENTITY(0, max(_GLF_IDENTITY(0, min(0, 0)), 0))) << 0)) - 0)))) < subgroup_size)
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         return;
        }
       if(_GLF_DEAD(false))
        return;
       return;
       if(_GLF_DEAD(false))
        return;
      }
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        return;
       return;
      }
     return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_IDENTITY(_GLF_DEAD(false), true && _GLF_IDENTITY((_GLF_DEAD(false)), bool(_GLF_IDENTITY(bvec2((_GLF_DEAD(false)), true), bvec2(bvec4(bvec2((_GLF_DEAD(false)), true), true, _GLF_IDENTITY(_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, vec2(mat2x4(injectionSwitch, 1.0, length(vec2(0.0, 0.0)), 1.0, 1.0, 0.0, 0.0))).y))), ! (! (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec4(false, true, true, true)))) || false)))))))))))
      return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
       if(_GLF_DEAD(false))
        return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         return;
        }
       if(_GLF_DEAD(false))
        return;
       return;
       if(_GLF_DEAD(false))
        return;
      }
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   atomicStore(buf[next_virtual_gid], uint(2), 4, 64, 4);
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
    }
   subgroupAll(_GLF_IDENTITY(false, ! (! (false))));
  }
 else
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
      }
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   atomicStore(buf[next_virtual_gid], uint(_GLF_IDENTITY(2, (2) | 0)), _GLF_IDENTITY(4, clamp(_GLF_IDENTITY(4, min(4, 4)), 4, 4)), 64, _GLF_IDENTITY(_GLF_IDENTITY(4, min(4, 4)), _GLF_IDENTITY((4), 0 | ((4))) | (_GLF_IDENTITY(0 >> _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(int(5), 0 | (int(5))), (int(5)) >> 0), _GLF_IDENTITY(int(5), int(ivec2(int(5), 0)))), min(_GLF_IDENTITY(0 >> _GLF_IDENTITY(_GLF_IDENTITY(int(5), (int(5)) >> 0), _GLF_IDENTITY(int(5), int(ivec2(int(5), 0)))), (true ? 0 >> _GLF_IDENTITY(_GLF_IDENTITY(int(5), (int(_GLF_IDENTITY(5, (5) | (_GLF_IDENTITY(5, 1 * (5)))))) >> 0), _GLF_IDENTITY(int(5), int(ivec2(int(5), _GLF_IDENTITY(0, min(0, 0)))))) : _GLF_FUZZED(86318))), 0 >> _GLF_IDENTITY(_GLF_IDENTITY(int(5), (int(5)) >> 0), _GLF_IDENTITY(int(5), int(ivec2(int(5), 0)))))))));
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), min(injectionSwitch, injectionSwitch)).x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), min(injectionSwitch, injectionSwitch)).x > injectionSwitch.y, true, false, false)), bool(bool(bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), min(injectionSwitch, injectionSwitch)).x > injectionSwitch.y, true, false, false))))))))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(false))
          return;
         if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, 0.0 + (_GLF_IDENTITY(injectionSwitch.y, float(_GLF_IDENTITY(mat2(injectionSwitch.y, 0.0, 1.0, 0.0), (true ? mat2(injectionSwitch.y, 0.0, 1.0, 0.0) : _GLF_FUZZED(mat2(51.89, 526.136, -33.39, 3.1)))))))), false || (injectionSwitch.x > injectionSwitch.y))) || false)))), (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, 0.0 + (_GLF_IDENTITY(injectionSwitch.y, float(_GLF_IDENTITY(mat2(injectionSwitch.y, 0.0, 1.0, 0.0), (true ? mat2(injectionSwitch.y, 0.0, 1.0, 0.0) : _GLF_IDENTITY(_GLF_FUZZED(mat2(51.89, 526.136, -33.39, 3.1)), mat2(_GLF_IDENTITY(mat3(_GLF_FUZZED(mat2(51.89, 526.136, -33.39, 3.1))), (_GLF_IDENTITY(false ? _GLF_FUZZED(mat3(9.0, 8.5, -188.457, 42.61, -0.9, 41.50, 27.17, 270.343, -40.92)) : mat3(_GLF_FUZZED(mat2(51.89, 526.136, -33.39, 3.1))), mat3(_GLF_IDENTITY(mat4x3(_GLF_IDENTITY(false ? _GLF_FUZZED(mat3(9.0, 8.5, -188.457, 42.61, -0.9, 41.50, 27.17, 270.343, -40.92)) : mat3(_GLF_FUZZED(mat2(51.89, 526.136, -33.39, 3.1))), mat3(mat3x4(false ? _GLF_FUZZED(mat3(9.0, 8.5, -188.457, 42.61, -0.9, 41.50, 27.17, 270.343, -40.92)) : mat3(_GLF_FUZZED(mat2(51.89, 526.136, -33.39, 3.1))))))), mat3(1.0) * (mat4x3(_GLF_IDENTITY(false ? _GLF_FUZZED(mat3(9.0, 8.5, -188.457, 42.61, -0.9, 41.50, 27.17, 270.343, -40.92)) : mat3(_GLF_FUZZED(mat2(51.89, 526.136, -33.39, 3.1))), mat3(mat3x4(false ? _GLF_FUZZED(mat3(9.0, 8.5, -188.457, 42.61, -0.9, 41.50, 27.17, 270.343, -40.92)) : mat3(_GLF_FUZZED(mat2(51.89, 526.136, -33.39, 3.1))))))))))))))))))))), false || (injectionSwitch.x > injectionSwitch.y))) || false))))) || _GLF_IDENTITY(false, (false) && true)))
          {
           if(_GLF_DEAD(false))
            return;
           return;
          }
         return;
         if(_GLF_DEAD(false))
          return;
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         return;
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
          return;
         return;
        }
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            return;
           return;
          }
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(false))
          return;
         return;
         if(_GLF_DEAD(false))
          return;
        }
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
        return;
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
           if(_GLF_DEAD(false))
            return;
           return;
          }
         return;
        }
       return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(false))
        return;
       return;
      }
     return;
    }
   subgroupAll(true);
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
}
