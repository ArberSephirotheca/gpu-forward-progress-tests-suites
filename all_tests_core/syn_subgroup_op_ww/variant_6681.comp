#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - tan(abs(vec2(0.0, 0.0)))).y))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_IDENTITY(_GLF_DEAD(false), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_DEAD(false))))), (bool(_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_DEAD(false)))))) || false))))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))
      return;
    }
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_DEAD(false))))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(sinh(vec2(3995.0860, -7.4))) : injectionSwitch))) / abs(vec2(1.0, 1.0))).x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))), true))), false, true, _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), false || (_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), bool(bvec3((injectionSwitch.x < injectionSwitch.y), false, true))))))))))
        return;
       return;
       if(_GLF_DEAD(false))
        return;
      }
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED((2.9))), float(injectionSwitch.x), bool(true))) > injectionSwitch.y))))
    return;
   return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y))))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, float(_GLF_IDENTITY(float(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x))), 0.0 + (float(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x))))))) > injectionSwitch.y))) || false)))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-7415.3195)), vec2(_GLF_FUZZED(-6.3), (injectionSwitch)[1]), bvec2(false, true))).x > _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), mix(vec2((mat2(1.0) * (injectionSwitch))[0], _GLF_FUZZED(3.5)), vec2(_GLF_FUZZED(-532.638), _GLF_IDENTITY((mat2(1.0) * (injectionSwitch)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(vec2(71.56, -3.2)) : (mat2(1.0) * (injectionSwitch))))[1]), bvec2(false, true))))) - vec2(0.0, 0.0)).y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(1.4))))) > injectionSwitch.y))))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY((false), true && ((false))) && true), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(mat2x4(injectionSwitch.x, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0)), (true ? float(mat2x4(injectionSwitch.x, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0)) : _GLF_FUZZED(float(true))))), clamp(injectionSwitch.x, injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)))) > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y))))
  return;
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x > injectionSwitch.y, bool(bvec2(injectionSwitch.x > injectionSwitch.y, false)))))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (! (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! _GLF_IDENTITY((! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(_GLF_IDENTITY(true, (true) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))) && ((injectionSwitch.x > injectionSwitch.y)), (true && ((injectionSwitch.x > injectionSwitch.y))) && true)))), bool(bvec2((! (_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), _GLF_IDENTITY(injectionSwitch, vec2(mat3(injectionSwitch, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0, 0.0, 0.0, 0.0))))).y), _GLF_IDENTITY(true && ((injectionSwitch.x > injectionSwitch.y)), (true && ((injectionSwitch.x > injectionSwitch.y))) && true)))), true))))))))))))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-619.288)), vec2(_GLF_FUZZED(-3.0), (injectionSwitch)[1]), bvec2(false, true))))).x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, (false) && true)), ! (! (! (_GLF_IDENTITY(false, (false) && true))))))), _GLF_IDENTITY(true && (_GLF_IDENTITY(false, ! (! (false)))), (true && (false)) || false))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
      }
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         return;
        }
       return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     return;
    }
   return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, false)))))
    return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
  }
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 uint num_workgroup = _GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) >> uvec3(0u, 0u, 0u)).x;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, _GLF_IDENTITY(false || (false), _GLF_IDENTITY(! (! (_GLF_IDENTITY(false || (false), (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(false, true))), bool(bvec2(_GLF_IDENTITY(false, true && (false)), true))) || (false)) && true))), ! (_GLF_IDENTITY(_GLF_IDENTITY(! (! (! (_GLF_IDENTITY(false || (false), (false || (false)) && true)))), ! (! (! (_GLF_IDENTITY(! (! (_GLF_IDENTITY(false || (false), (false || (false)) && true))), ! (! (! (! (_GLF_IDENTITY(false || (false), (false || (false)) && true)))))))))), ! (! (! (! (! (_GLF_IDENTITY(false || (false), (false || (false)) && true))))))))))))))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(30.42) : injectionSwitch.x)))), injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
    }
   return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(false, (false) || false), _GLF_IDENTITY(true, false || (true)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)), false || (_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(false, (false) || false), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)), (bool(bvec4(_GLF_IDENTITY(false, (false) || false), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))) || false))))))
  return;
 if(_GLF_DEAD(false))
  return;
 uint workgroup_size = gl_WorkGroupSize.x;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(2458.2490, 3027.2933)) : injectionSwitch)))), max(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(2464.5926, 676.605))))) * exp(vec2(0.0, 0.0))))), injectionSwitch)).x > injectionSwitch.y))))
    return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, (false) || false), true, true))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y, injectionSwitch.y)), _GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(-8.8)))))))))
    return;
   return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
    return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).y, exp(_GLF_IDENTITY(_GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(1.0, 0.0)), mix(float(_GLF_FUZZED(2.0)), float(_GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(1.0, 0.0)), (dot(vec2(0.0, 1.0), vec2(1.0, 0.0))) / 1.0)), bool(true))), dot(vec2(0.0, 1.0), _GLF_IDENTITY(vec2(1.0, 0.0), (vec2(1.0, 0.0)) / vec2(1.0, 1.0))))) * (_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0)))))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(false, ! (! (false)))))), _GLF_IDENTITY(bool(bvec3(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(false, ! (! (false)))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)), false || (bool(bvec3(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y)) && (_GLF_IDENTITY(false, ! (! (false)))))), _GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true)), true))))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
      return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), false || (! (false)))))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(false || (false), true && _GLF_IDENTITY((_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, bool(bvec3(false, true, false))))) || (false)), false || _GLF_IDENTITY(((false || _GLF_IDENTITY((false), bool(bvec4((false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, true))))), bool(bvec2(((false || _GLF_IDENTITY((false), bool(bvec4((false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, true))))), true))))))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))))))
  return;
 uint workgroup_id = _GLF_IDENTITY(gl_WorkGroupID.x, max(gl_WorkGroupID.x, gl_WorkGroupID.x));
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), bool(bvec4(! ((injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, false)))))), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, float(mat4x2(injectionSwitch.x, 0.0, 0.0, log(round(length(normalize(vec4(1.0, 1.0, _GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0, 1.0)), 1.0))))), 1.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), sqrt(0.0)))) > injectionSwitch.y)), true && (_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, float(mat4x2(injectionSwitch.x, 0.0, 0.0, log(round(length(normalize(vec4(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-7016.2416) : 1.0)), 1.0, 1.0, 1.0))))), 1.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), sqrt(0.0)))) > injectionSwitch.y), ! (! ((_GLF_IDENTITY(injectionSwitch.x, float(mat4x2(injectionSwitch.x, 0.0, 0.0, log(round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0))))), 1.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), sqrt(0.0)))) > injectionSwitch.y))))))))))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 uint workgroup_base = _GLF_IDENTITY(workgroup_size, (false ? _GLF_FUZZED(workgroup_size) : workgroup_size)) * workgroup_id;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)))).y, _GLF_IDENTITY(false, ! _GLF_IDENTITY((! _GLF_IDENTITY((false), (_GLF_IDENTITY((false), ! (! ((false))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), bool(bvec4(_GLF_IDENTITY((! _GLF_IDENTITY((false), (_GLF_IDENTITY((false), _GLF_IDENTITY(! (! ((false))), _GLF_IDENTITY((! (! ((false)))), bool(bvec3((! (! ((false)))), true, false))) && true))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), ! (! ((! _GLF_IDENTITY(_GLF_IDENTITY((false), bool(bvec3((false), false, false))), _GLF_IDENTITY((_GLF_IDENTITY((false), ! (! ((false))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), ! (! (_GLF_IDENTITY((_GLF_IDENTITY((false), ! (! ((false))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), ! (! ((_GLF_IDENTITY((false), ! (_GLF_IDENTITY(! ((false)), ! (! (! ((false)))))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))))))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)))), _GLF_TRUE(_GLF_IDENTITY(true, bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(true), ! (! (bool(true)))), bool(bvec3(bool(true), false, false))))), (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, bool(_GLF_IDENTITY(bvec3(injectionSwitch.x < injectionSwitch.y, _GLF_IDENTITY(false, (false) || false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bvec3(bvec3(bvec3(injectionSwitch.x < injectionSwitch.y, _GLF_IDENTITY(false, (false) || false), _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), ! (! (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), ! (! (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), ! (! (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))))))))))))), false)))))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   return;
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((false), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((false), bool(bool((false))))), ! (! (! (_GLF_IDENTITY((false), bool(bool((false))))))))))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) && true))), (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  return;
 uint virtual_gid = workgroup_base + _GLF_IDENTITY(subgroup_id * subgroup_size, 0u | (subgroup_id * subgroup_size)) + _GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, 0u + (subgroup_local_id)), _GLF_IDENTITY((subgroup_local_id), ((_GLF_IDENTITY(subgroup_local_id, max(subgroup_local_id, subgroup_local_id)))) >> 0u) | 0u)));
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), true && (_GLF_IDENTITY(false, true && (false))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, float(mat2x3(_GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(-83.60) : injectionSwitch.y)), 0.0, 1.0, 0.0, 0.0, 0.0))), _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(5345.1471)), float(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-5215.7476)), float(_GLF_IDENTITY(injectionSwitch.y, float(mat3x4(injectionSwitch.y, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0)))), bool(true)))), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(7.6) : injectionSwitch.y)))))), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), bool(bvec2((! (false)), false)))), (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(-2.3) : _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(992.414)), float(injectionSwitch.y), bool(true)))))), true && _GLF_IDENTITY(((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(-2.3) : _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(992.414)), float(injectionSwitch.y), bool(true))))))), (((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(-2.3) : _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(992.414)), float(injectionSwitch.y), bool(true)))))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))).x < injectionSwitch.y)))), bool(bool(bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), ! (! (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), ! (! (_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).x < injectionSwitch.y))))))))))))))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, true, true)))))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     return;
    }
   return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), true && (false))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, log(vec2(1.0, 1.0)) + (injectionSwitch)).y))))
        {
         if(_GLF_DEAD(false))
          return;
         return;
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, vec2(mat4x3(injectionSwitch, 1.0, 0.0, sqrt(1.0), 0.0, 0.0, 0.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 1.0))), injectionSwitch, injectionSwitch)).x > injectionSwitch.y))))
        return;
       return;
      }
     return;
    }
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(bool(bool((injectionSwitch.x > injectionSwitch.y))), true && (bool(bool((injectionSwitch.x > injectionSwitch.y)))))))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, true)))))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          return;
         if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))
          {
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              return;
             return;
            }
           return;
          }
         return;
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - sqrt(0.0)) > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         return;
        }
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          return;
         return;
        }
       return;
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 uint next_virtual_gid = workgroup_base + subgroup_id * subgroup_size + (_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, max(_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, ((subgroup_local_id + 1) % subgroup_size) - 0u), _GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, ((subgroup_local_id + 1) % subgroup_size) | (_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, (true ? (subgroup_local_id + 1) % subgroup_size : _GLF_FUZZED(148792u))))))));
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x)) > injectionSwitch.y))), ! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))
  return;
 atomicStore(buf[_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(virtual_gid, ~ (~ (virtual_gid))), clamp(_GLF_IDENTITY(virtual_gid, ~ (~ (virtual_gid))), _GLF_IDENTITY(_GLF_IDENTITY(virtual_gid, (virtual_gid) / ((1u << _GLF_IDENTITY(uint(6u), uint(6u))) >> _GLF_IDENTITY(uint(6u), uint(6u)))), ~ (~ (virtual_gid))), _GLF_IDENTITY(virtual_gid, ~ (~ (virtual_gid))))), min(_GLF_IDENTITY(_GLF_IDENTITY(virtual_gid, ~ (~ (virtual_gid))), min(_GLF_IDENTITY(_GLF_IDENTITY(virtual_gid, ~ _GLF_IDENTITY((_GLF_IDENTITY(~ (virtual_gid), (true ? ~ (virtual_gid) : _GLF_FUZZED(subgroup_size)))), uint(_GLF_IDENTITY(uvec3((_GLF_IDENTITY(~ (virtual_gid), (_GLF_IDENTITY(true, (true) && true) ? ~ (_GLF_IDENTITY(virtual_gid, (0u | (0u ^ 0u)) ^ (virtual_gid))) : _GLF_FUZZED(subgroup_size)))), _GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, (false ? _GLF_FUZZED(num_workgroup) : 1u))) << 0u), 1u), uvec3(0u, 0u, 0u) | (uvec3((_GLF_IDENTITY(~ (virtual_gid), _GLF_IDENTITY((true ? ~ (virtual_gid) : _GLF_FUZZED(subgroup_size)), clamp(_GLF_IDENTITY((true ? ~ (virtual_gid) : _GLF_FUZZED(subgroup_size)), min((true ? ~ (virtual_gid) : _GLF_FUZZED(subgroup_size)), (true ? ~ (virtual_gid) : _GLF_FUZZED(subgroup_size)))), _GLF_IDENTITY((true ? ~ (virtual_gid) : _GLF_FUZZED(subgroup_size)), (false ? _GLF_FUZZED(subgroup_local_id) : (true ? ~ (virtual_gid) : _GLF_FUZZED(subgroup_size)))), _GLF_IDENTITY((true ? ~ (virtual_gid) : _GLF_FUZZED(subgroup_size)), 0u | ((true ? ~ (virtual_gid) : _GLF_FUZZED(subgroup_size)))))))), 1u, 1u)))))), clamp(_GLF_IDENTITY(virtual_gid, ~ (~ (virtual_gid))), _GLF_IDENTITY(virtual_gid, ~ (~ _GLF_IDENTITY((virtual_gid), ((virtual_gid)) - 0u))), _GLF_IDENTITY(virtual_gid, ~ (~ (virtual_gid))))), _GLF_IDENTITY(virtual_gid, ~ (~ (virtual_gid))))), _GLF_IDENTITY(_GLF_IDENTITY(virtual_gid, ~ (~ (virtual_gid))), 0u + (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(virtual_gid, ~ (~ (virtual_gid))), ~ (_GLF_IDENTITY(~ _GLF_IDENTITY((_GLF_IDENTITY(virtual_gid, 1u * (_GLF_IDENTITY(virtual_gid, (virtual_gid) | _GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)), min(uint(_GLF_ZERO(0.0, injectionSwitch.x)), uint(_GLF_ZERO(0.0, injectionSwitch.x)))))))), _GLF_IDENTITY(((_GLF_IDENTITY(virtual_gid, _GLF_IDENTITY(1u, ~ (~ (1u))) * (virtual_gid)))) / 1u, 0u | (_GLF_IDENTITY(((_GLF_IDENTITY(virtual_gid, _GLF_IDENTITY(1u, ~ (~ (1u))) * (virtual_gid)))) / 1u, 0u ^ (((_GLF_IDENTITY(virtual_gid, _GLF_IDENTITY(1u, ~ (~ (1u))) * (virtual_gid)))) / 1u))))), (_GLF_IDENTITY(_GLF_IDENTITY(~ _GLF_IDENTITY((_GLF_IDENTITY(virtual_gid, 1u * (virtual_gid))), ((_GLF_IDENTITY(virtual_gid, 1u * (virtual_gid)))) / 1u), (true ? ~ _GLF_IDENTITY((_GLF_IDENTITY(virtual_gid, 1u * (virtual_gid))), ((_GLF_IDENTITY(virtual_gid, 1u * (virtual_gid)))) / 1u) : _GLF_FUZZED(workgroup_size))), 1u * (~ _GLF_IDENTITY((_GLF_IDENTITY(virtual_gid, 1u * (virtual_gid))), ((_GLF_IDENTITY(virtual_gid, 1u * (virtual_gid)))) / 1u)))) / _GLF_IDENTITY(_GLF_IDENTITY((1u & 1u), 1u * ((1u & 1u))), uint(uint((1u & 1u))))))), (_GLF_IDENTITY(_GLF_IDENTITY(virtual_gid, _GLF_IDENTITY(~ (~ (virtual_gid)), 0u | (~ (~ (virtual_gid))))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(virtual_gid, _GLF_IDENTITY(~ (~ (virtual_gid)), 0u | (~ (~ (virtual_gid))))), max(_GLF_IDENTITY(virtual_gid, _GLF_IDENTITY(~ (~ (virtual_gid)), 0u | (~ (~ (virtual_gid))))), _GLF_IDENTITY(virtual_gid, _GLF_IDENTITY(~ (~ (virtual_gid)), 0u | (~ (~ (virtual_gid))))))), _GLF_IDENTITY(_GLF_IDENTITY(virtual_gid, _GLF_IDENTITY(~ (~ (virtual_gid)), 0u | (~ (~ (virtual_gid))))), 0u + (_GLF_IDENTITY(virtual_gid, _GLF_IDENTITY(~ (~ (virtual_gid)), 0u | (~ (~ (virtual_gid))))))), _GLF_IDENTITY(virtual_gid, _GLF_IDENTITY(~ (~ (virtual_gid)), 0u | (~ (~ (virtual_gid)))))))) | (_GLF_IDENTITY(virtual_gid, ~ (~ (virtual_gid)))))))))], uint(1), 4, 64, 4);
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (_GLF_IDENTITY(! (! (false)), ! (! (! (! (false))))))))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y))))), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && _GLF_IDENTITY((_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > injectionSwitch.y))), ! (! (_GLF_IDENTITY((_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > injectionSwitch.y))), bool(bvec4((_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > injectionSwitch.y))), false, true, true)))))))) && true), ! (! _GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y))), ! (! ((_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y))))))))))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y))))))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
        return;
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true, false)))))
        return;
       return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, true)), bool(bvec4(bool(bvec2(false, true)), true, true, true)))), false, false)))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        return;
       return;
      }
     return;
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(mat2x4(injectionSwitch, 1.0, 1.0, 1.0, 1.0, 0.0, cos(0.0)))))).y))))
      return;
    }
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(subgroup_local_id + 1 < subgroup_size)
  {
   atomicStore(buf[next_virtual_gid], uint(2), 4, 64, 4);
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, bool(bvec3(false, true, false))))))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))
    return;
   subgroupAll(false);
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true), _GLF_IDENTITY(true, bool(bvec2(true, true)))))))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))
    return;
  }
 else
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
        return;
       return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / cos(0.0))))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
        return;
       return;
      }
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))))), bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(mix(float(_GLF_FUZZED(61.85)), float(injectionSwitch.y), bool(true)), mix(float(mix(float(_GLF_FUZZED(61.85)), float(injectionSwitch.y), bool(true))), float(_GLF_FUZZED(91.77)), bool(false)))))), false)))))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, true, true)))))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec3(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))), (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, true)))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))), ! (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_DEAD(false)), (! (_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, false)))))) && true), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false)))), true && (_GLF_IDENTITY(! (_GLF_DEAD(false)), (! (_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, true && (false))), ! (! (! _GLF_IDENTITY((false), (_GLF_IDENTITY((false), ! (! ((false))))) || false))))))))) || false))), (! (_GLF_DEAD(false))) && true), true, true), _GLF_IDENTITY(bvec3(bvec4(bvec3(_GLF_IDENTITY(! (_GLF_DEAD(false)), (! (_GLF_DEAD(false))) && true), true, true), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), bvec3(bvec3(bvec3(bvec4(bvec3(_GLF_IDENTITY(! (_GLF_DEAD(false)), (! (_GLF_DEAD(false))) && true), true, true), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))), ! (_GLF_IDENTITY(_GLF_IDENTITY(! (bool(bvec3(_GLF_IDENTITY(! (_GLF_DEAD(false)), (! (_GLF_DEAD(false))) && true), true, true))), _GLF_IDENTITY((_GLF_IDENTITY(! (bool(bvec3(_GLF_IDENTITY(! (_GLF_DEAD(false)), (! (_GLF_DEAD(false))) && true), true, true))), _GLF_TRUE(_GLF_IDENTITY(true, bool(bvec4(_GLF_IDENTITY(true, (true) || false), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), (injectionSwitch.x < injectionSwitch.y)) && (! (bool(bvec3(_GLF_IDENTITY(! (_GLF_DEAD(false)), (! (_GLF_DEAD(false))) && true), true, true)))))), (_GLF_IDENTITY((_GLF_IDENTITY(! (bool(bvec3(_GLF_IDENTITY(! (_GLF_DEAD(false)), (! (_GLF_DEAD(false))) && true), true, true))), _GLF_TRUE(_GLF_IDENTITY(true, bool(bvec4(_GLF_IDENTITY(true, (true) || false), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), (injectionSwitch.x < injectionSwitch.y)) && (! (bool(bvec3(_GLF_IDENTITY(! (_GLF_DEAD(false)), (! (_GLF_DEAD(false))) && true), true, true)))))), ! (! ((_GLF_IDENTITY(! (bool(bvec3(_GLF_IDENTITY(! (_GLF_DEAD(false)), (! (_GLF_DEAD(false))) && true), true, true))), _GLF_TRUE(_GLF_IDENTITY(true, bool(bvec4(_GLF_IDENTITY(true, (true) || false), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), (injectionSwitch.x < injectionSwitch.y)) && (! (bool(bvec3(_GLF_IDENTITY(! (_GLF_DEAD(false)), (! (_GLF_DEAD(false))) && true), true, true)))))))))) && true) || false), ! (_GLF_IDENTITY(_GLF_IDENTITY(! (! (bool(bvec3(_GLF_IDENTITY(! (_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, true, false, true))))), _GLF_IDENTITY((! (_GLF_DEAD(false))), bool(bvec3((! (_GLF_DEAD(false))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) && true), _GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, true && (true)))))), true)))), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(! (! _GLF_IDENTITY((bool(bvec3(_GLF_IDENTITY(! (_GLF_DEAD(false)), _GLF_IDENTITY((! (_GLF_DEAD(false))), bool(bvec3((! (_GLF_DEAD(false))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) && true), _GLF_IDENTITY(true, _GLF_IDENTITY(true && (_GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, true && (true))))), false || (true && (_GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, true && (true)))))))), true))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((bool(bvec3(_GLF_IDENTITY(! (_GLF_DEAD(false)), _GLF_IDENTITY((! (_GLF_DEAD(false))), bool(bvec3((! (_GLF_DEAD(false))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) && true), _GLF_IDENTITY(true, _GLF_IDENTITY(true && (_GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, true && (true))))), false || (true && (_GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, true && (true)))))))), true))), ((bool(bvec3(_GLF_IDENTITY(! (_GLF_DEAD(false)), _GLF_IDENTITY((! (_GLF_DEAD(false))), bool(bvec3((! (_GLF_DEAD(false))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) && true), _GLF_IDENTITY(true, _GLF_IDENTITY(true && (_GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, true && (true))))), false || (true && (_GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, true && (true)))))))), true)))) || false)), true && (! (_GLF_IDENTITY((bool(bvec3(_GLF_IDENTITY(! (_GLF_DEAD(false)), _GLF_IDENTITY((! (_GLF_DEAD(false))), bool(bvec3((! (_GLF_DEAD(false))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) && true), _GLF_IDENTITY(true, _GLF_IDENTITY(true && (_GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, true && (true))))), false || (true && (_GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, true && (true)))))))), true))), ((bool(bvec3(_GLF_IDENTITY(! (_GLF_DEAD(false)), _GLF_IDENTITY((! (_GLF_DEAD(false))), bool(bvec3((! (_GLF_DEAD(false))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) && true), _GLF_IDENTITY(true, _GLF_IDENTITY(true && (_GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, true && (true))))), false || (true && (_GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, true && (true)))))))), true)))) || false))))))), false || (_GLF_IDENTITY(! (! (bool(bvec3(_GLF_IDENTITY(! (_GLF_DEAD(false)), _GLF_IDENTITY((! _GLF_IDENTITY((_GLF_DEAD(false)), bool(_GLF_IDENTITY(bvec3((_GLF_DEAD(false)), false, false), bvec3(bvec4(bvec3((_GLF_DEAD(false)), false, false), true)))))), bool(bvec3((! (_GLF_DEAD(false))), true, _GLF_FALSE(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) && true))), (injectionSwitch.x > injectionSwitch.y))))) && true), _GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, _GLF_IDENTITY(true && (true), ! (! (_GLF_IDENTITY(true && (true), false || (true && (true))))))))))), true)))), true && (! (! (bool(bvec3(_GLF_IDENTITY(! (_GLF_DEAD(false)), _GLF_IDENTITY((! (_GLF_DEAD(false))), bool(bvec3((! (_GLF_DEAD(false))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) && true), _GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, _GLF_IDENTITY(_GLF_IDENTITY(true, bool(bvec2(_GLF_IDENTITY(true, (true) || false), _GLF_IDENTITY(false, ! (! (false)))))), true && (_GLF_IDENTITY(true, bool(bvec2(_GLF_IDENTITY(true, (true) || false), _GLF_IDENTITY(false, ! (! (false)))))))) && (_GLF_IDENTITY(true, true && (true)))))), true)))))))), false), bvec2(bvec3(bvec2(_GLF_IDENTITY(! (! (bool(bvec3(_GLF_IDENTITY(! (_GLF_DEAD(false)), _GLF_IDENTITY((! (_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY((_GLF_DEAD(false)) || false, true && ((_GLF_DEAD(false)) || false))))), bool(bvec3((! (_GLF_DEAD(false))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) && true), _GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, true && (true)))))), true)))), false || (_GLF_IDENTITY(! (! (bool(bvec3(_GLF_IDENTITY(! (_GLF_DEAD(false)), _GLF_IDENTITY((! (_GLF_DEAD(false))), bool(bvec3((! (_GLF_DEAD(false))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) && true), _GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, true && (true)))))), true)))), true && (! (! (bool(bvec3(_GLF_IDENTITY(! (_GLF_DEAD(false)), _GLF_IDENTITY(_GLF_IDENTITY((! (_GLF_DEAD(false))), bool(bvec3((! (_GLF_DEAD(false))), true, _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(-6.1)), bool(false))), injectionSwitch.y)), injectionSwitch.y, injectionSwitch.y))))))) && true, (_GLF_IDENTITY(_GLF_IDENTITY((! (_GLF_DEAD(false))), bool(bvec3((! (_GLF_DEAD(false))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) && true, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((! (_GLF_DEAD(false))), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY((! (_GLF_DEAD(false))), ((! (_GLF_DEAD(false)))) && true), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)), (bool(bvec4(_GLF_IDENTITY((! (_GLF_DEAD(false))), ((! (_GLF_DEAD(false)))) && true), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))) && true)), bool(bvec3((! (_GLF_DEAD(false))), true, _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))) && true, bool(bool(_GLF_IDENTITY((! (_GLF_DEAD(false))), bool(bvec3((! (_GLF_DEAD(false))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) && true)))), bool(bvec2(! (_GLF_IDENTITY(_GLF_IDENTITY((! (_GLF_DEAD(false))), bool(bvec3((! (_GLF_DEAD(false))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) && true, bool(bool(_GLF_IDENTITY((! (_GLF_DEAD(false))), bool(bvec3((! (_GLF_DEAD(false))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) && true)))), false)))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), _GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, true && (true)))))), true)))))))), false), _GLF_IDENTITY(true, _GLF_IDENTITY(true && (true), (true && (true)) && true))))))), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(! (! (bool(bvec3(_GLF_IDENTITY(! (_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, true, _GLF_IDENTITY(false, (false) || false), true))))), _GLF_IDENTITY((! (_GLF_DEAD(false))), bool(bvec3((! (_GLF_DEAD(false))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) && true), _GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, true && (true)))))), true)))), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(! (! (bool(bvec3(_GLF_IDENTITY(! (_GLF_DEAD(false)), _GLF_IDENTITY((! (_GLF_DEAD(false))), bool(bvec3((! (_GLF_DEAD(false))), true, _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(vec3(92.48, -0.6, -3080.0017).s), _GLF_FUZZED(-7.7)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))).y))))) && true), _GLF_IDENTITY(true, true && _GLF_IDENTITY((_GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, _GLF_IDENTITY(true, (true) || false) && (true))))), ((_GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, _GLF_IDENTITY(true, (true) || false) && (true)))))) || false)), true)))), false || (_GLF_IDENTITY(! (! (bool(bvec3(_GLF_IDENTITY(! (_GLF_DEAD(false)), _GLF_IDENTITY((! (_GLF_DEAD(false))), bool(bvec3((! (_GLF_DEAD(false))), true, _GLF_FALSE(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, (false) && true))), (injectionSwitch.x > injectionSwitch.y))))) && true), _GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, true && (true)))))), true)))), true && (! (! (bool(bvec3(_GLF_IDENTITY(! (_GLF_DEAD(_GLF_IDENTITY(false, (false) && true))), _GLF_IDENTITY((! (_GLF_DEAD(false))), bool(bvec3((! (_GLF_DEAD(false))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) && true), _GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, _GLF_IDENTITY(true, bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(true, (true) || false), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(true, (true) || false), true, false, true)), true && (bool(bvec4(_GLF_IDENTITY(true, (true) || false), true, false, true))))), _GLF_IDENTITY(false, ! (! (false)))))) && (_GLF_IDENTITY(true, true && (true)))))), true)))))))), false), bvec2(bvec3(bvec2(_GLF_IDENTITY(! (! (bool(bvec3(_GLF_IDENTITY(! (_GLF_DEAD(false)), _GLF_IDENTITY((! (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))), bool(bvec3((! (_GLF_DEAD(false))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) && true), _GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, true && (true)))))), true)))), false || (_GLF_IDENTITY(! (! (bool(bvec3(_GLF_IDENTITY(! (_GLF_DEAD(false)), _GLF_IDENTITY((! (_GLF_DEAD(false))), bool(bvec3((! (_GLF_DEAD(false))), true, _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(_GLF_IDENTITY(vec4(injectionSwitch.y, 0.0, sin(0.0), 0.0), max(vec4(injectionSwitch.y, 0.0, sin(0.0), 0.0), vec4(injectionSwitch.y, 0.0, sin(0.0), 0.0)))), (true ? float(_GLF_IDENTITY(vec4(injectionSwitch.y, 0.0, sin(0.0), 0.0), max(vec4(injectionSwitch.y, 0.0, sin(0.0), 0.0), vec4(injectionSwitch.y, 0.0, sin(0.0), 0.0)))) : _GLF_FUZZED(-1.9))))))))) && true), _GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, true && (true)))))), true)))), true && (! (! (bool(bvec3(_GLF_IDENTITY(! (_GLF_DEAD(false)), _GLF_IDENTITY(_GLF_IDENTITY((! (_GLF_DEAD(false))), bool(bvec3((! (_GLF_DEAD(false))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) && true, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY((! (_GLF_DEAD(false))), bool(bvec3((! (_GLF_DEAD(false))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) && true, ! (! (_GLF_IDENTITY(_GLF_IDENTITY((! (_GLF_DEAD(false))), bool(bvec3((! (_GLF_DEAD(false))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) && true, bool(bool(_GLF_IDENTITY((! (_GLF_DEAD(false))), bool(bvec3((! (_GLF_DEAD(false))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) && true))))))), ! (_GLF_IDENTITY(_GLF_IDENTITY(! ((_GLF_IDENTITY(_GLF_IDENTITY((! (_GLF_DEAD(false))), bool(bvec3((! (_GLF_DEAD(false))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) && true, ! (! (_GLF_IDENTITY(_GLF_IDENTITY((! (_GLF_DEAD(false))), bool(bvec3((! (_GLF_DEAD(false))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) && true, bool(bool(_GLF_IDENTITY((! (_GLF_DEAD(false))), bool(bvec3((! (_GLF_DEAD(false))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) && true)))))))), (! ((_GLF_IDENTITY(_GLF_IDENTITY((! (_GLF_DEAD(false))), bool(bvec3((! (_GLF_DEAD(false))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) && true, ! (! (_GLF_IDENTITY(_GLF_IDENTITY((! (_GLF_DEAD(false))), bool(bvec3((! (_GLF_DEAD(false))), true, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)).x > injectionSwitch.y))))) && true, bool(bool(_GLF_IDENTITY((! (_GLF_DEAD(false))), bool(bvec3((! (_GLF_DEAD(false))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) && true))))))))) || false), _GLF_IDENTITY(bool(bvec3(! ((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((! (_GLF_DEAD(false))), ((! (_GLF_DEAD(false)))) || false), bool(bvec3((! (_GLF_DEAD(false))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) && true, ! (! (_GLF_IDENTITY(_GLF_IDENTITY((! (_GLF_DEAD(false))), bool(bvec3((! (_GLF_DEAD(false))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) && true, bool(bool(_GLF_IDENTITY((! (_GLF_DEAD(false))), bool(bvec3((! (_GLF_DEAD(false))), true, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec3(injectionSwitch.x > injectionSwitch.y, false, false)))))))) && true)))))))), true, true)), bool(bool(bool(bvec3(! ((_GLF_IDENTITY(_GLF_IDENTITY((! (_GLF_DEAD(false))), bool(bvec3((! (_GLF_DEAD(false))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) && true, ! (! (_GLF_IDENTITY(_GLF_IDENTITY((! (_GLF_DEAD(false))), bool(bvec3((! (_GLF_DEAD(false))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) && true, bool(bool(_GLF_IDENTITY((! (_GLF_DEAD(false))), bool(bvec3((! (_GLF_DEAD(false))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) && true)))))))), true, true)))))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), _GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, true && (true)))))), true)))))))), false), _GLF_IDENTITY(true, true && (true))))))), false || (_GLF_IDENTITY(! (! (bool(bvec3(_GLF_IDENTITY(! (_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, true, _GLF_IDENTITY(false, (false) || false), true))))), _GLF_IDENTITY((! (_GLF_DEAD(false))), _GLF_IDENTITY(bool(bvec3((! (_GLF_DEAD(false))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (! (bool(bvec3((! (_GLF_DEAD(false))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))) && true), _GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, true && (true)))))), true)))), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(! (! (bool(bvec3(_GLF_IDENTITY(! (_GLF_DEAD(false)), _GLF_IDENTITY((! (_GLF_DEAD(false))), bool(bvec3(_GLF_IDENTITY((! (_GLF_DEAD(false))), (_GLF_IDENTITY((! (_GLF_DEAD(false))), ((! (_GLF_DEAD(false)))) && true)) || false), true, _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(vec3(92.48, -0.6, -3080.0017).s), _GLF_FUZZED(-7.7)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))).y))))) && true), _GLF_IDENTITY(true, _GLF_IDENTITY(true, ! (! (true))) && _GLF_IDENTITY((_GLF_IDENTITY(true, true && (_GLF_IDENTITY(_GLF_IDENTITY(true, _GLF_IDENTITY(true, (true) || false) && (true)), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(true, _GLF_IDENTITY(true, (true) || false) && (true)), (_GLF_IDENTITY(true, _GLF_IDENTITY(true, (true) || false) && (true))) || false))))))), ((_GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, _GLF_IDENTITY(true, (true) || false) && (true)))))) || false)), true)))), false || (_GLF_IDENTITY(! (! (bool(bvec3(_GLF_IDENTITY(! (_GLF_DEAD(false)), _GLF_IDENTITY(_GLF_IDENTITY((! (_GLF_DEAD(false))), false || (_GLF_IDENTITY((! (_GLF_DEAD(false))), ((! (_GLF_DEAD(false)))) && true))), bool(bvec3((! (_GLF_DEAD(false))), true, _GLF_FALSE(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, (false) && true))), _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))), true)), bool(bvec4(bool(bvec2(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))), true)), false, false, true)))))))) && true), _GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, true && (true)))))), true)))), true && (! (! (bool(bvec3(_GLF_IDENTITY(! (_GLF_DEAD(_GLF_IDENTITY(false, (false) && true))), _GLF_IDENTITY(_GLF_IDENTITY((! (_GLF_DEAD(false))), bool(bvec3((! (_GLF_DEAD(false))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) && true, bool(bool(_GLF_IDENTITY((! (_GLF_DEAD(false))), bool(bvec3((! (_GLF_DEAD(false))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) && true)))), _GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, _GLF_IDENTITY(true, bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(true, (true) || false), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(true, (true) || false), true, _GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, true)), bool(bvec4(bool(bvec2(false, true)), true, false, false)))), false))), true)), true && (bool(bvec4(_GLF_IDENTITY(true, (true) || false), true, false, true))))), _GLF_IDENTITY(false, ! (! (false)))))) && (_GLF_IDENTITY(true, true && (true)))))), true)))))))), false), bvec2(bvec3(bvec2(_GLF_IDENTITY(! (! (bool(bvec3(_GLF_IDENTITY(! (_GLF_DEAD(false)), _GLF_IDENTITY((! (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))), bool(bvec3((! (_GLF_DEAD(false))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) && true), _GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, true && (true)))))), true)))), false || (_GLF_IDENTITY(! (! (bool(bvec3(_GLF_IDENTITY(! (_GLF_DEAD(false)), _GLF_IDENTITY((! (_GLF_DEAD(false))), bool(bvec3((! (_GLF_DEAD(false))), true, _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(_GLF_IDENTITY(vec4(injectionSwitch.y, 0.0, sin(0.0), 0.0), max(vec4(injectionSwitch.y, 0.0, sin(0.0), 0.0), vec4(injectionSwitch.y, 0.0, sin(0.0), 0.0)))), (true ? float(_GLF_IDENTITY(vec4(injectionSwitch.y, 0.0, sin(0.0), 0.0), max(vec4(injectionSwitch.y, 0.0, sin(0.0), 0.0), vec4(injectionSwitch.y, 0.0, sin(0.0), 0.0)))) : _GLF_FUZZED(-1.9))))))))) && true), _GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, true && (true)))))), true)))), true && (! (! (bool(bvec3(_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_DEAD(false)), true && (_GLF_IDENTITY((_GLF_DEAD(false)), bool(bvec2((_GLF_DEAD(false)), false))))), _GLF_IDENTITY(_GLF_IDENTITY((! (_GLF_DEAD(false))), bool(bvec3((! (_GLF_DEAD(false))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) && true, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY((! (_GLF_DEAD(false))), bool(bvec3((! (_GLF_DEAD(false))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) && true, ! (! (_GLF_IDENTITY(_GLF_IDENTITY((! (_GLF_DEAD(false))), bool(bvec3((! (_GLF_DEAD(false))), _GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(true, true && (true))), (! (_GLF_IDENTITY(true, true && (true)))) || false))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) && true, bool(bool(_GLF_IDENTITY((! (_GLF_DEAD(false))), bool(bvec3((! (_GLF_DEAD(false))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) && true))))))), ! (_GLF_IDENTITY(_GLF_IDENTITY(! ((_GLF_IDENTITY(_GLF_IDENTITY((! (_GLF_DEAD(false))), bool(bvec3((! (_GLF_DEAD(false))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) && true, ! (! (_GLF_IDENTITY(_GLF_IDENTITY((! (_GLF_DEAD(false))), bool(bvec3((! (_GLF_DEAD(false))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) && true, bool(bool(_GLF_IDENTITY((! (_GLF_DEAD(false))), bool(bvec3((! (_GLF_DEAD(false))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) && true)))))))), (! ((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((! (_GLF_DEAD(false))), bool(bvec3((! (_GLF_DEAD(false))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) && true, bool(bvec4(_GLF_IDENTITY((! (_GLF_DEAD(false))), bool(bvec3((! (_GLF_DEAD(false))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) && true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY((! _GLF_IDENTITY((_GLF_DEAD(false)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((_GLF_DEAD(false)), ((_GLF_DEAD(false))) || false)), ! (! (_GLF_IDENTITY(! (_GLF_IDENTITY((_GLF_DEAD(false)), ((_GLF_DEAD(false))) || false)), ! (! (! (_GLF_IDENTITY((_GLF_DEAD(false)), ((_GLF_DEAD(false))) || false))))))))))), bool(bvec3((! (_GLF_DEAD(false))), true, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)).x > injectionSwitch.y))))) && true, bool(bool(_GLF_IDENTITY((! (_GLF_DEAD(false))), bool(bvec3((! (_GLF_DEAD(false))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) && true))))))))) || false), _GLF_IDENTITY(bool(bvec3(! ((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((! (_GLF_DEAD(false))), ((! (_GLF_DEAD(false)))) || false), bool(bvec3((! (_GLF_DEAD(false))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) && true, ! (! (_GLF_IDENTITY(_GLF_IDENTITY((! (_GLF_DEAD(false))), bool(bvec3((! (_GLF_DEAD(false))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) && true, bool(bool(_GLF_IDENTITY((! (_GLF_DEAD(false))), bool(bvec3((! (_GLF_DEAD(false))), true, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec3(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).x > injectionSwitch.y, false, false)))))))) && true)))))))), true, true)), bool(bool(bool(bvec3(! ((_GLF_IDENTITY(_GLF_IDENTITY((! (_GLF_DEAD(false))), bool(bvec3((! (_GLF_DEAD(false))), true, _GLF_FALSE(_GLF_IDENTITY(false, false || (false)), (injectionSwitch.x > injectionSwitch.y))))) && true, ! (! (_GLF_IDENTITY(_GLF_IDENTITY((! (_GLF_DEAD(false))), bool(bvec3((! (_GLF_DEAD(false))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) && true, bool(bool(_GLF_IDENTITY((! (_GLF_DEAD(false))), bool(bvec3((! (_GLF_DEAD(false))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) && true)))))))), true, true)))))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), _GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, true && (true)))))), true)))))))), false), _GLF_IDENTITY(true, true && (true)))))))))), bool(bvec4((_GLF_IDENTITY(! (! (bool(bvec3(_GLF_IDENTITY(! (_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, true, _GLF_IDENTITY(false, (false) || false), true))))), _GLF_IDENTITY((! (_GLF_DEAD(false))), bool(bvec3((! (_GLF_DEAD(false))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) && true), _GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, true && (true)))))), true)))), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(! (! (bool(bvec3(_GLF_IDENTITY(! (_GLF_DEAD(false)), _GLF_IDENTITY((! (_GLF_DEAD(false))), bool(bvec3((! (_GLF_DEAD(false))), true, _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(vec3(92.48, -0.6, -3080.0017).s), _GLF_FUZZED(-7.7)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))).y))))) && true), _GLF_IDENTITY(true, true && _GLF_IDENTITY((_GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, _GLF_IDENTITY(true, (true) || false) && (true))))), ((_GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, _GLF_IDENTITY(true, (true) || false) && (true)))))) || false)), true)))), false || (_GLF_IDENTITY(! (! (bool(bvec3(_GLF_IDENTITY(! (_GLF_DEAD(false)), _GLF_IDENTITY((! (_GLF_DEAD(false))), bool(bvec3((! (_GLF_DEAD(false))), true, _GLF_FALSE(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, (false) && true))), (injectionSwitch.x > injectionSwitch.y))))) && true), _GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, true && (true)))))), true)))), true && (! (! (bool(bvec3(_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_DEAD(_GLF_IDENTITY(false, (false) && true))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3((_GLF_DEAD(_GLF_IDENTITY(false, (false) && true))), false, false), bvec3(bvec4(bvec3((_GLF_DEAD(_GLF_IDENTITY(false, (false) && true))), false, false), true)))), (bool(_GLF_IDENTITY(bvec3((_GLF_DEAD(_GLF_IDENTITY(false, (false) && true))), false, false), bvec3(bvec4(bvec3((_GLF_DEAD(_GLF_IDENTITY(false, (false) && true))), false, false), true))))) || false)), _GLF_IDENTITY((! (_GLF_DEAD(false))), bool(bvec3((! (_GLF_DEAD(false))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) && true), _GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, _GLF_IDENTITY(true, bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(true, (true) || false), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(true, (true) || false), true, false, true)), true && (bool(bvec4(_GLF_IDENTITY(true, _GLF_IDENTITY((true) || false, ! (! ((true) || false)))), true, false, true))))), _GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! (! (false)))), (! (_GLF_IDENTITY(false, ! (! (false))))) || false)))))) && (_GLF_IDENTITY(true, true && (true)))))), true)))))))), false), bvec2(bvec3(bvec2(_GLF_IDENTITY(! (! (bool(bvec3(_GLF_IDENTITY(! (_GLF_DEAD(false)), _GLF_IDENTITY((! (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))), bool(bvec3((! (_GLF_DEAD(false))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) && true), _GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, true && (true)))))), true)))), false || (_GLF_IDENTITY(! (! (bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(! (_GLF_DEAD(_GLF_IDENTITY(false, (false) && true))), _GLF_IDENTITY((! (_GLF_DEAD(false))), bool(bvec3((! (_GLF_DEAD(false))), true, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-765.501)), bool(false))) > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(_GLF_IDENTITY(vec4(injectionSwitch.y, 0.0, _GLF_IDENTITY(sin(0.0), mix(float(sin(0.0)), float(_GLF_FUZZED(214.054)), bool(_GLF_IDENTITY(false, false || (false))))), 0.0), max(vec4(injectionSwitch.y, 0.0, sin(0.0), 0.0), vec4(injectionSwitch.y, 0.0, sin(0.0), 0.0)))), (true ? float(_GLF_IDENTITY(vec4(injectionSwitch.y, 0.0, sin(0.0), 0.0), max(vec4(injectionSwitch.y, _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(7.3) : 0.0)), sin(0.0), 0.0), vec4(injectionSwitch.y, 0.0, sin(0.0), 0.0)))) : _GLF_FUZZED(-1.9))))))))) && true), _GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, true && (true)))))), true), bvec3(bvec4(bvec3(_GLF_IDENTITY(! (_GLF_DEAD(_GLF_IDENTITY(false, (false) && true))), _GLF_IDENTITY((! (_GLF_DEAD(false))), bool(bvec3((! (_GLF_DEAD(false))), true, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-765.501)), bool(false))) > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(_GLF_IDENTITY(vec4(injectionSwitch.y, 0.0, _GLF_IDENTITY(sin(0.0), mix(float(sin(0.0)), float(_GLF_FUZZED(214.054)), bool(_GLF_IDENTITY(false, false || (false))))), 0.0), max(vec4(injectionSwitch.y, 0.0, sin(0.0), 0.0), vec4(injectionSwitch.y, 0.0, sin(0.0), 0.0)))), (true ? float(_GLF_IDENTITY(vec4(injectionSwitch.y, 0.0, sin(0.0), 0.0), max(vec4(injectionSwitch.y, _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(7.3) : 0.0)), sin(0.0), 0.0), vec4(injectionSwitch.y, 0.0, sin(0.0), 0.0)))) : _GLF_FUZZED(-1.9))))))))) && true), _GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, true && (true)))))), true), false)))))), true && (! (! (bool(bvec3(_GLF_IDENTITY(! (_GLF_DEAD(false)), _GLF_IDENTITY(_GLF_IDENTITY((! (_GLF_DEAD(false))), bool(bvec3((! (_GLF_DEAD(false))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) && true, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY((! _GLF_IDENTITY((_GLF_DEAD(false)), ! (! ((_GLF_DEAD(false)))))), bool(bvec3((! (_GLF_DEAD(false))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) && true, ! (! (_GLF_IDENTITY(_GLF_IDENTITY((! (_GLF_DEAD(false))), bool(bvec3((! (_GLF_DEAD(false))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) && true, bool(bool(_GLF_IDENTITY((! (_GLF_DEAD(false))), bool(bvec3((! (_GLF_DEAD(false))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) && true))))))), ! (_GLF_IDENTITY(_GLF_IDENTITY(! ((_GLF_IDENTITY(_GLF_IDENTITY((! (_GLF_DEAD(false))), bool(bvec3((! (_GLF_DEAD(false))), true, _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(_GLF_ONE(1.0, injectionSwitch.y))).y))))) && true, ! (! (_GLF_IDENTITY(_GLF_IDENTITY((! (_GLF_DEAD(false))), bool(bvec3((! (_GLF_DEAD(false))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) && true, bool(bool(_GLF_IDENTITY((! (_GLF_DEAD(false))), bool(bvec3((! (_GLF_DEAD(false))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) && true)))))))), (! ((_GLF_IDENTITY(_GLF_IDENTITY((! (_GLF_DEAD(false))), bool(bvec3((! (_GLF_DEAD(false))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) && true, ! (! (_GLF_IDENTITY(_GLF_IDENTITY((! (_GLF_DEAD(false))), bool(bvec3((! (_GLF_DEAD(false))), true, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)).x > injectionSwitch.y))))) && true, bool(bool(_GLF_IDENTITY((! (_GLF_DEAD(false))), bool(bvec3((! (_GLF_DEAD(false))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) && true))))))))) || false), _GLF_IDENTITY(bool(bvec3(! ((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((! (_GLF_DEAD(false))), ((! (_GLF_DEAD(false)))) || false), bool(bvec3((_GLF_IDENTITY(! (_GLF_DEAD(false)), true && (! (_GLF_DEAD(false))))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) && true, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY((! (_GLF_DEAD(false))), bool(bvec3((! (_GLF_DEAD(false))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) && true, bool(bool(_GLF_IDENTITY((! (_GLF_DEAD(false))), bool(bvec3((! (_GLF_DEAD(false))), true, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec3(injectionSwitch.x > injectionSwitch.y, false, false)))))))) && true)))), bool(bvec4(! (_GLF_IDENTITY(_GLF_IDENTITY((! (_GLF_DEAD(false))), bool(bvec3((! (_GLF_DEAD(false))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) && true, bool(bool(_GLF_IDENTITY((! (_GLF_DEAD(false))), bool(bvec3((! (_GLF_DEAD(false))), true, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec3(injectionSwitch.x > injectionSwitch.y, false, false)))))))) && true)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, true))))))), true, true)), bool(bool(bool(bvec3(! ((_GLF_IDENTITY(_GLF_IDENTITY((! (_GLF_DEAD(false))), bool(bvec3((! (_GLF_DEAD(false))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) && true, ! (! (_GLF_IDENTITY(_GLF_IDENTITY((! (_GLF_DEAD(false))), bool(bvec3((! (_GLF_DEAD(false))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) && true, bool(_GLF_IDENTITY(bool(_GLF_IDENTITY((! (_GLF_DEAD(false))), bool(bvec3((! _GLF_IDENTITY((_GLF_DEAD(false)), ! (! (_GLF_IDENTITY((_GLF_DEAD(false)), false || ((_GLF_DEAD(false)))))))), true, _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))) && true), bool(bvec4(bool(_GLF_IDENTITY((! (_GLF_DEAD(false))), bool(bvec3((! _GLF_IDENTITY((_GLF_DEAD(false)), ! (! (_GLF_IDENTITY((_GLF_DEAD(false)), false || ((_GLF_DEAD(false)))))))), true, _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))) && true), false, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))))), true, true)))))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), _GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, true && (true)))))), true)))))))), false), _GLF_IDENTITY(true, true && (true)))))))), true, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) && true)))))))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, true, true)), ! _GLF_IDENTITY((! (bool(bvec3(false, true, true)))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2((! (bool(bvec3(false, true, true)))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec2(bvec4(bvec2((! (bool(bvec3(false, true, true)))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)))), (bool(_GLF_IDENTITY(bvec2((! (bool(bvec3(false, true, true)))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec2(bvec4(bvec2((! (bool(bvec3(false, true, true)))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))))) && true))))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         if(_GLF_DEAD(false))
          return;
         return;
        }
       return;
      }
     return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(mat3(injectionSwitch, 1.0, 1.0, determinant(mat2(0.0, 0.0, 1.0, tan(0.0))), 1.0, abs(0.0), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ZERO(0.0, injectionSwitch.x)))).y))))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && true))
    return;
   atomicStore(buf[next_virtual_gid], uint(2), _GLF_IDENTITY(4, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(4059) : 4)), 64, 4);
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), false || _GLF_IDENTITY((false), ! (! ((false)))))), false || (_GLF_IDENTITY((_GLF_IDENTITY(false, false || (false))), bool(_GLF_IDENTITY(bvec3((_GLF_IDENTITY(false, false || (false))), true, false), bvec3(bvec3(bvec3((_GLF_IDENTITY(false, false || (false))), true, false)))))))) || false)))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   subgroupAll(true);
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, true, true)))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
    }
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, false || (false))), bool(bvec2(bool(_GLF_IDENTITY(false, false || (false))), false)))))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / _GLF_IDENTITY(dot(vec2(1.0, _GLF_IDENTITY(dot(vec2(0.0, 0.0), vec2(1.0, 1.0)), dot(vec2(0.0, 0.0), vec2(1.0, 1.0)))), vec2(1.0, 0.0)), dot(vec2(1.0, _GLF_IDENTITY(dot(vec2(0.0, 0.0), vec2(1.0, 1.0)), dot(vec2(0.0, 0.0), vec2(1.0, 1.0)))), vec2(1.0, 0.0)))) > injectionSwitch.y))))
        return;
       return;
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec2(bvec2(false, false))))))))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(false, true, false), bvec3(bvec3(bvec3(false, true, false))))), _GLF_IDENTITY(bool(bool(bool(_GLF_IDENTITY(bvec3(false, true, false), bvec3(bvec3(bvec3(false, true, false))))))), (bool(bool(bool(_GLF_IDENTITY(bvec3(false, true, false), bvec3(bvec3(bvec3(false, true, false)))))))) || false)))))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), false || (bool(bool(false)))))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
}
