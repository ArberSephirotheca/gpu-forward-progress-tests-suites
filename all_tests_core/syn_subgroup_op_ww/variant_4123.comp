#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(false))
  barrier();
 uint subgroup_id = gl_SubgroupID;
 uint subgroup_size = gl_SubgroupSize;
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint num_workgroup = _GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, uvec3(0u, 0u, 0u) ^ (gl_NumWorkGroups)), (_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY((false) && _GLF_IDENTITY(true, (true) && true), ! (! ((false) && true)))), (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(uvec3(286u, _GLF_IDENTITY(175613u, clamp(175613u, 175613u, 175613u)), _GLF_IDENTITY(167573u, (0u ^ 0u) ^ (167573u)))) : _GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, _GLF_IDENTITY((gl_NumWorkGroups), ((gl_NumWorkGroups)) / uvec3(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y))) ^ uvec3(0u, _GLF_IDENTITY(0u, _GLF_IDENTITY((0u), ((0u)) << 0u) / 1u), 0u)), uvec3(gl_NumWorkGroups[0], _GLF_IDENTITY(gl_NumWorkGroups, uvec3(gl_NumWorkGroups[0], _GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, (_GLF_IDENTITY(gl_NumWorkGroups, uvec3(uvec3(gl_NumWorkGroups)))) << uvec3(0u, _GLF_IDENTITY(0u, ~ (~ (0u))), 0u)), min(gl_NumWorkGroups, gl_NumWorkGroups))[1], _GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, uvec3(uvec3(_GLF_IDENTITY(gl_NumWorkGroups, (_GLF_IDENTITY(false ? _GLF_FUZZED((subgroup_id - uvec3(154869u, 99565u, 47925u))) : gl_NumWorkGroups, (true ? _GLF_IDENTITY(false, _GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, false || (false)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) || (false)) ? _GLF_FUZZED((subgroup_id - uvec3(154869u, 99565u, 47925u))) : gl_NumWorkGroups : _GLF_FUZZED((uvec3(97770u, 107640u, 38819u) ^ 34075u)))))))))[2], ~ (_GLF_IDENTITY(~ (gl_NumWorkGroups[2]), max(~ (gl_NumWorkGroups[2]), ~ (gl_NumWorkGroups[2])))))))[1], _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups[2], uint(uvec4(_GLF_IDENTITY(gl_NumWorkGroups[2], (gl_NumWorkGroups[2]) * 1u), 0u, ((1u << _GLF_IDENTITY(uint(0u), _GLF_IDENTITY(uint(0u), (uint(0u)) * 1u))) >> _GLF_IDENTITY(uint(0u), _GLF_IDENTITY(uint(0u), (uint(0u)) << 0u))), 1u))), clamp(_GLF_IDENTITY(gl_NumWorkGroups[2], max(gl_NumWorkGroups[2], gl_NumWorkGroups[2])), gl_NumWorkGroups[2], _GLF_IDENTITY(gl_NumWorkGroups[2], ~ _GLF_IDENTITY((_GLF_IDENTITY(~ (gl_NumWorkGroups[2]), _GLF_IDENTITY((_GLF_IDENTITY(~ (gl_NumWorkGroups[2]), (~ _GLF_IDENTITY((gl_NumWorkGroups[_GLF_IDENTITY(2, (false ? _GLF_FUZZED(-27891) : 2))]), ((gl_NumWorkGroups[2])) << 0u)) | (~ (gl_NumWorkGroups[2])))), ~ (_GLF_IDENTITY(~ ((_GLF_IDENTITY(~ (gl_NumWorkGroups[2]), (~ (gl_NumWorkGroups[2])) | (~ (gl_NumWorkGroups[2]))))), (~ ((_GLF_IDENTITY(~ (gl_NumWorkGroups[2]), (~ (gl_NumWorkGroups[2])) | (~ (gl_NumWorkGroups[2])))))) >> 0u))) / 1u)), _GLF_IDENTITY(min(_GLF_IDENTITY((_GLF_IDENTITY(~ (gl_NumWorkGroups[2]), _GLF_IDENTITY((_GLF_IDENTITY(~ (gl_NumWorkGroups[2]), (~ (gl_NumWorkGroups[2])) | (~ (gl_NumWorkGroups[2])))), ~ (_GLF_IDENTITY(~ ((_GLF_IDENTITY(~ (gl_NumWorkGroups[2]), (~ (_GLF_IDENTITY(gl_NumWorkGroups, clamp(_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) | uvec3(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))), gl_NumWorkGroups, gl_NumWorkGroups))[2])) | (~ (gl_NumWorkGroups[2]))))), (~ ((_GLF_IDENTITY(~ (gl_NumWorkGroups[2]), (~ (gl_NumWorkGroups[2])) | (~ (gl_NumWorkGroups[2])))))) >> 0u))) / 1u)), 0u | ((_GLF_IDENTITY(~ (gl_NumWorkGroups[2]), _GLF_IDENTITY((_GLF_IDENTITY(~ (gl_NumWorkGroups[2]), (~ (gl_NumWorkGroups[2])) | (~ (gl_NumWorkGroups[2])))), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY((_GLF_IDENTITY(~ (gl_NumWorkGroups[2]), (~ (gl_NumWorkGroups[2])) | (~ (gl_NumWorkGroups[2])))), clamp(_GLF_IDENTITY((_GLF_IDENTITY(~ (gl_NumWorkGroups[2]), (~ (gl_NumWorkGroups[2])) | (~ (gl_NumWorkGroups[2])))), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? (_GLF_IDENTITY(~ (gl_NumWorkGroups[2]), (~ (gl_NumWorkGroups[2])) | (~ (gl_NumWorkGroups[2])))) : _GLF_FUZZED(subgroup_id))), _GLF_IDENTITY((_GLF_IDENTITY(~ (gl_NumWorkGroups[2]), (~ (gl_NumWorkGroups[2])) | (~ (gl_NumWorkGroups[2])))), ~ (~ ((_GLF_IDENTITY(~ (gl_NumWorkGroups[2]), (~ (gl_NumWorkGroups[2])) | (~ (gl_NumWorkGroups[2]))))))), (_GLF_IDENTITY(~ (gl_NumWorkGroups[2]), (~ (gl_NumWorkGroups[2])) | (~ (gl_NumWorkGroups[2]))))))), (~ _GLF_IDENTITY(((_GLF_IDENTITY(~ (gl_NumWorkGroups[2]), (~ (gl_NumWorkGroups[2])) | (~ (gl_NumWorkGroups[2]))))), ~ (~ (((_GLF_IDENTITY(~ (gl_NumWorkGroups[2]), (~ (gl_NumWorkGroups[2])) | (~ (gl_NumWorkGroups[2]))))))))) >> 0u))) / 1u)))), _GLF_IDENTITY((_GLF_IDENTITY(~ (gl_NumWorkGroups[2]), _GLF_IDENTITY((_GLF_IDENTITY(~ (gl_NumWorkGroups[2]), (~ (gl_NumWorkGroups[2])) | (~ (gl_NumWorkGroups[2])))), ~ (_GLF_IDENTITY(~ ((_GLF_IDENTITY(~ (gl_NumWorkGroups[2]), (~ (gl_NumWorkGroups[2])) | (~ (gl_NumWorkGroups[2]))))), (~ ((_GLF_IDENTITY(~ (gl_NumWorkGroups[2]), (~ (gl_NumWorkGroups[2])) | (~ (gl_NumWorkGroups[2])))))) >> 0u))) / 1u)), min(_GLF_IDENTITY((_GLF_IDENTITY(~ (gl_NumWorkGroups[2]), _GLF_IDENTITY((_GLF_IDENTITY(~ (gl_NumWorkGroups[2]), (~ (gl_NumWorkGroups[2])) | (~ (gl_NumWorkGroups[2])))), ~ (_GLF_IDENTITY(~ ((_GLF_IDENTITY(~ (gl_NumWorkGroups[2]), (~ (gl_NumWorkGroups[2])) | (~ (gl_NumWorkGroups[2]))))), (~ ((_GLF_IDENTITY(~ (gl_NumWorkGroups[2]), (~ (gl_NumWorkGroups[2])) | (~ (gl_NumWorkGroups[2])))))) >> 0u))) / 1u)), ((_GLF_IDENTITY(~ (gl_NumWorkGroups[2]), _GLF_IDENTITY((_GLF_IDENTITY(~ (gl_NumWorkGroups[2]), (~ (gl_NumWorkGroups[2])) | (~ (gl_NumWorkGroups[2])))), ~ (_GLF_IDENTITY(~ ((_GLF_IDENTITY(~ (gl_NumWorkGroups[2]), (~ (gl_NumWorkGroups[2])) | (~ (gl_NumWorkGroups[2]))))), (~ ((_GLF_IDENTITY(~ (gl_NumWorkGroups[2]), (~ (gl_NumWorkGroups[2])) | (~ (gl_NumWorkGroups[2])))))) >> 0u))) / 1u))) | ((_GLF_IDENTITY(~ (gl_NumWorkGroups[2]), _GLF_IDENTITY((_GLF_IDENTITY(~ (gl_NumWorkGroups[2]), (~ (gl_NumWorkGroups[2])) | (~ (gl_NumWorkGroups[2])))), ~ (_GLF_IDENTITY(~ ((_GLF_IDENTITY(~ (gl_NumWorkGroups[2]), (~ (gl_NumWorkGroups[2])) | (~ (gl_NumWorkGroups[2]))))), (~ ((_GLF_IDENTITY(~ (gl_NumWorkGroups[2]), (~ (gl_NumWorkGroups[2])) | (~ (gl_NumWorkGroups[2])))))) >> 0u))) / 1u)))), (_GLF_IDENTITY(~ (gl_NumWorkGroups[2]), _GLF_IDENTITY((_GLF_IDENTITY(~ (gl_NumWorkGroups[2]), (~ (gl_NumWorkGroups[2])) | (~ (gl_NumWorkGroups[2])))), ~ (_GLF_IDENTITY(~ ((_GLF_IDENTITY(~ (gl_NumWorkGroups[2]), (~ (gl_NumWorkGroups[2])) | (~ (gl_NumWorkGroups[2]))))), (~ ((_GLF_IDENTITY(~ (gl_NumWorkGroups[2]), (~ (gl_NumWorkGroups[2])) | (~ (gl_NumWorkGroups[2])))))) >> 0u))) / 1u))))), clamp(min(_GLF_IDENTITY((_GLF_IDENTITY(~ (gl_NumWorkGroups[2]), _GLF_IDENTITY((_GLF_IDENTITY(~ (gl_NumWorkGroups[2]), (~ (gl_NumWorkGroups[2])) | (~ (gl_NumWorkGroups[2])))), ~ (_GLF_IDENTITY(~ ((_GLF_IDENTITY(~ (gl_NumWorkGroups[2]), (~ (_GLF_IDENTITY(gl_NumWorkGroups, clamp(_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) | uvec3(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))), gl_NumWorkGroups, gl_NumWorkGroups))[2])) | (~ (gl_NumWorkGroups[2]))))), (~ ((_GLF_IDENTITY(~ (gl_NumWorkGroups[2]), (~ (gl_NumWorkGroups[2])) | (~ (gl_NumWorkGroups[2])))))) >> 0u))) / 1u)), 0u | ((_GLF_IDENTITY(~ (gl_NumWorkGroups[2]), _GLF_IDENTITY((_GLF_IDENTITY(~ (gl_NumWorkGroups[2]), (~ (gl_NumWorkGroups[2])) | (~ (gl_NumWorkGroups[2])))), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY((_GLF_IDENTITY(~ (gl_NumWorkGroups[2]), (~ (gl_NumWorkGroups[2])) | (~ (gl_NumWorkGroups[2])))), clamp(_GLF_IDENTITY((_GLF_IDENTITY(~ (gl_NumWorkGroups[2]), (~ (gl_NumWorkGroups[2])) | (~ (gl_NumWorkGroups[2])))), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? (_GLF_IDENTITY(~ (gl_NumWorkGroups[2]), (~ (gl_NumWorkGroups[2])) | (~ (gl_NumWorkGroups[2])))) : _GLF_FUZZED(subgroup_id))), _GLF_IDENTITY((_GLF_IDENTITY(~ (gl_NumWorkGroups[2]), (~ (gl_NumWorkGroups[2])) | (~ (gl_NumWorkGroups[2])))), ~ (~ ((_GLF_IDENTITY(~ (gl_NumWorkGroups[2]), (~ (gl_NumWorkGroups[2])) | (~ (gl_NumWorkGroups[2]))))))), (_GLF_IDENTITY(~ (gl_NumWorkGroups[2]), (~ (gl_NumWorkGroups[2])) | (~ (gl_NumWorkGroups[2]))))))), (~ _GLF_IDENTITY(((_GLF_IDENTITY(~ (gl_NumWorkGroups[2]), (~ (gl_NumWorkGroups[2])) | (~ (gl_NumWorkGroups[2]))))), ~ (~ (((_GLF_IDENTITY(~ (gl_NumWorkGroups[2]), (~ (gl_NumWorkGroups[2])) | (~ (gl_NumWorkGroups[2]))))))))) >> 0u))) / 1u)))), _GLF_IDENTITY((_GLF_IDENTITY(~ (gl_NumWorkGroups[2]), _GLF_IDENTITY((_GLF_IDENTITY(~ (gl_NumWorkGroups[2]), (~ (gl_NumWorkGroups[2])) | (~ (gl_NumWorkGroups[2])))), ~ (_GLF_IDENTITY(~ ((_GLF_IDENTITY(~ (gl_NumWorkGroups[2]), (~ (gl_NumWorkGroups[2])) | (~ (gl_NumWorkGroups[2]))))), (~ ((_GLF_IDENTITY(~ (gl_NumWorkGroups[2]), (~ (gl_NumWorkGroups[2])) | (~ (gl_NumWorkGroups[2])))))) >> 0u))) / 1u)), min(_GLF_IDENTITY((_GLF_IDENTITY(~ (gl_NumWorkGroups[2]), _GLF_IDENTITY((_GLF_IDENTITY(~ (gl_NumWorkGroups[2]), (~ (gl_NumWorkGroups[2])) | (~ (gl_NumWorkGroups[2])))), ~ (_GLF_IDENTITY(~ ((_GLF_IDENTITY(~ (gl_NumWorkGroups[2]), (~ (gl_NumWorkGroups[2])) | (~ (gl_NumWorkGroups[2]))))), (~ ((_GLF_IDENTITY(~ (gl_NumWorkGroups[2]), (~ (gl_NumWorkGroups[2])) | (~ (gl_NumWorkGroups[2])))))) >> 0u))) / 1u)), ((_GLF_IDENTITY(~ (gl_NumWorkGroups[2]), _GLF_IDENTITY((_GLF_IDENTITY(~ (gl_NumWorkGroups[2]), (~ (gl_NumWorkGroups[2])) | (~ (gl_NumWorkGroups[2])))), ~ (_GLF_IDENTITY(~ ((_GLF_IDENTITY(~ (gl_NumWorkGroups[2]), (~ (gl_NumWorkGroups[2])) | (~ (gl_NumWorkGroups[2]))))), (~ ((_GLF_IDENTITY(~ (gl_NumWorkGroups[2]), (~ (gl_NumWorkGroups[2])) | (~ (gl_NumWorkGroups[2])))))) >> 0u))) / 1u))) | ((_GLF_IDENTITY(~ (gl_NumWorkGroups[2]), _GLF_IDENTITY((_GLF_IDENTITY(~ (gl_NumWorkGroups[2]), (~ (gl_NumWorkGroups[2])) | (~ (gl_NumWorkGroups[2])))), ~ (_GLF_IDENTITY(~ ((_GLF_IDENTITY(~ (gl_NumWorkGroups[2]), (~ (gl_NumWorkGroups[2])) | (~ (gl_NumWorkGroups[2]))))), (~ ((_GLF_IDENTITY(~ (gl_NumWorkGroups[2]), (~ (gl_NumWorkGroups[2])) | (~ (gl_NumWorkGroups[2])))))) >> 0u))) / 1u)))), (_GLF_IDENTITY(~ (gl_NumWorkGroups[2]), _GLF_IDENTITY((_GLF_IDENTITY(~ (gl_NumWorkGroups[2]), (~ (gl_NumWorkGroups[2])) | (~ (gl_NumWorkGroups[2])))), ~ (_GLF_IDENTITY(~ ((_GLF_IDENTITY(~ (gl_NumWorkGroups[2]), (~ (gl_NumWorkGroups[2])) | (~ (gl_NumWorkGroups[2]))))), (~ ((_GLF_IDENTITY(~ (gl_NumWorkGroups[2]), (~ (gl_NumWorkGroups[2])) | (~ (gl_NumWorkGroups[2])))))) >> 0u))) / 1u))))), min(_GLF_IDENTITY((_GLF_IDENTITY(~ (gl_NumWorkGroups[2]), _GLF_IDENTITY((_GLF_IDENTITY(~ (gl_NumWorkGroups[2]), (~ (gl_NumWorkGroups[2])) | (~ (gl_NumWorkGroups[2])))), ~ (_GLF_IDENTITY(~ ((_GLF_IDENTITY(~ (gl_NumWorkGroups[2]), (~ (_GLF_IDENTITY(gl_NumWorkGroups, clamp(_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) | uvec3(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))), gl_NumWorkGroups, gl_NumWorkGroups))[2])) | (~ (gl_NumWorkGroups[2]))))), (~ ((_GLF_IDENTITY(~ (gl_NumWorkGroups[2]), (~ (gl_NumWorkGroups[2])) | (~ (gl_NumWorkGroups[2])))))) >> 0u))) / 1u)), 0u | ((_GLF_IDENTITY(~ (gl_NumWorkGroups[2]), _GLF_IDENTITY((_GLF_IDENTITY(~ (gl_NumWorkGroups[2]), (~ (gl_NumWorkGroups[2])) | (~ (gl_NumWorkGroups[2])))), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY((_GLF_IDENTITY(~ (gl_NumWorkGroups[2]), (~ (gl_NumWorkGroups[2])) | (~ (gl_NumWorkGroups[2])))), clamp(_GLF_IDENTITY((_GLF_IDENTITY(~ (gl_NumWorkGroups[2]), (~ (gl_NumWorkGroups[2])) | (~ (gl_NumWorkGroups[2])))), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? (_GLF_IDENTITY(~ (gl_NumWorkGroups[2]), (~ (gl_NumWorkGroups[2])) | (~ (gl_NumWorkGroups[2])))) : _GLF_FUZZED(subgroup_id))), _GLF_IDENTITY((_GLF_IDENTITY(~ (gl_NumWorkGroups[2]), (~ (gl_NumWorkGroups[2])) | (~ (gl_NumWorkGroups[2])))), ~ (~ ((_GLF_IDENTITY(~ (gl_NumWorkGroups[2]), (~ (gl_NumWorkGroups[2])) | (~ (gl_NumWorkGroups[2]))))))), (_GLF_IDENTITY(~ (gl_NumWorkGroups[2]), (~ (gl_NumWorkGroups[2])) | (~ (gl_NumWorkGroups[2]))))))), (~ _GLF_IDENTITY(((_GLF_IDENTITY(~ (gl_NumWorkGroups[2]), (~ (gl_NumWorkGroups[2])) | (~ (gl_NumWorkGroups[2]))))), ~ (~ (((_GLF_IDENTITY(~ (gl_NumWorkGroups[2]), (~ (gl_NumWorkGroups[2])) | (~ (gl_NumWorkGroups[2]))))))))) >> 0u))) / 1u)))), _GLF_IDENTITY((_GLF_IDENTITY(~ (gl_NumWorkGroups[2]), _GLF_IDENTITY((_GLF_IDENTITY(~ (gl_NumWorkGroups[2]), (~ (gl_NumWorkGroups[2])) | (~ (gl_NumWorkGroups[2])))), ~ (_GLF_IDENTITY(~ ((_GLF_IDENTITY(~ (gl_NumWorkGroups[2]), (~ (gl_NumWorkGroups[2])) | (~ (gl_NumWorkGroups[2]))))), (~ ((_GLF_IDENTITY(~ (gl_NumWorkGroups[2]), (~ (gl_NumWorkGroups[2])) | (~ (gl_NumWorkGroups[2])))))) >> 0u))) / 1u)), min(_GLF_IDENTITY((_GLF_IDENTITY(~ (gl_NumWorkGroups[2]), _GLF_IDENTITY((_GLF_IDENTITY(~ (gl_NumWorkGroups[2]), (~ (gl_NumWorkGroups[2])) | (~ (gl_NumWorkGroups[2])))), ~ (_GLF_IDENTITY(~ ((_GLF_IDENTITY(~ (gl_NumWorkGroups[2]), (~ (gl_NumWorkGroups[2])) | (~ (gl_NumWorkGroups[2]))))), (~ ((_GLF_IDENTITY(~ (gl_NumWorkGroups[2]), (~ (gl_NumWorkGroups[2])) | (~ (gl_NumWorkGroups[2])))))) >> 0u))) / 1u)), ((_GLF_IDENTITY(~ (gl_NumWorkGroups[2]), _GLF_IDENTITY((_GLF_IDENTITY(~ (gl_NumWorkGroups[2]), (~ (gl_NumWorkGroups[2])) | (~ (gl_NumWorkGroups[2])))), ~ (_GLF_IDENTITY(~ ((_GLF_IDENTITY(~ (gl_NumWorkGroups[2]), (~ (gl_NumWorkGroups[2])) | (~ (gl_NumWorkGroups[2]))))), (~ ((_GLF_IDENTITY(~ (gl_NumWorkGroups[2]), (~ (gl_NumWorkGroups[2])) | (~ (gl_NumWorkGroups[2])))))) >> 0u))) / 1u))) | ((_GLF_IDENTITY(~ (gl_NumWorkGroups[2]), _GLF_IDENTITY((_GLF_IDENTITY(~ (gl_NumWorkGroups[2]), (~ (gl_NumWorkGroups[2])) | (~ (gl_NumWorkGroups[2])))), ~ (_GLF_IDENTITY(~ ((_GLF_IDENTITY(~ (gl_NumWorkGroups[2]), (~ (gl_NumWorkGroups[2])) | (~ (gl_NumWorkGroups[2]))))), (~ ((_GLF_IDENTITY(~ (gl_NumWorkGroups[2]), (~ (gl_NumWorkGroups[2])) | (~ (gl_NumWorkGroups[2])))))) >> 0u))) / 1u)))), (_GLF_IDENTITY(~ (gl_NumWorkGroups[2]), _GLF_IDENTITY((_GLF_IDENTITY(~ (gl_NumWorkGroups[2]), (~ (gl_NumWorkGroups[2])) | (~ (gl_NumWorkGroups[2])))), ~ (_GLF_IDENTITY(~ ((_GLF_IDENTITY(~ (gl_NumWorkGroups[2]), (~ (gl_NumWorkGroups[2])) | (~ (gl_NumWorkGroups[2]))))), (~ ((_GLF_IDENTITY(~ (gl_NumWorkGroups[2]), (~ (gl_NumWorkGroups[2])) | (~ (gl_NumWorkGroups[2])))))) >> 0u))) / 1u))))), min(_GLF_IDENTITY((_GLF_IDENTITY(~ (gl_NumWorkGroups[2]), _GLF_IDENTITY((_GLF_IDENTITY(~ (gl_NumWorkGroups[2]), (~ (gl_NumWorkGroups[2])) | (~ (gl_NumWorkGroups[2])))), ~ (_GLF_IDENTITY(~ ((_GLF_IDENTITY(~ (gl_NumWorkGroups[2]), (~ (_GLF_IDENTITY(gl_NumWorkGroups, clamp(_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) | uvec3(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))), gl_NumWorkGroups, gl_NumWorkGroups))[2])) | (~ (gl_NumWorkGroups[2]))))), (~ ((_GLF_IDENTITY(~ (gl_NumWorkGroups[2]), (~ (gl_NumWorkGroups[2])) | (~ (gl_NumWorkGroups[2])))))) >> 0u))) / 1u)), 0u | ((_GLF_IDENTITY(~ (gl_NumWorkGroups[2]), _GLF_IDENTITY((_GLF_IDENTITY(~ (gl_NumWorkGroups[2]), (~ (gl_NumWorkGroups[2])) | (~ (gl_NumWorkGroups[2])))), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY((_GLF_IDENTITY(~ (gl_NumWorkGroups[2]), (~ (gl_NumWorkGroups[2])) | (~ (gl_NumWorkGroups[2])))), clamp(_GLF_IDENTITY((_GLF_IDENTITY(~ (gl_NumWorkGroups[2]), (~ (gl_NumWorkGroups[2])) | (~ (gl_NumWorkGroups[2])))), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? (_GLF_IDENTITY(~ (gl_NumWorkGroups[2]), (~ (gl_NumWorkGroups[2])) | (~ (gl_NumWorkGroups[2])))) : _GLF_FUZZED(subgroup_id))), _GLF_IDENTITY((_GLF_IDENTITY(~ (gl_NumWorkGroups[2]), (~ (gl_NumWorkGroups[2])) | (~ (gl_NumWorkGroups[2])))), ~ (~ ((_GLF_IDENTITY(~ (gl_NumWorkGroups[2]), (~ (gl_NumWorkGroups[2])) | (~ (gl_NumWorkGroups[2]))))))), (_GLF_IDENTITY(~ (gl_NumWorkGroups[2]), (~ (gl_NumWorkGroups[2])) | (~ (gl_NumWorkGroups[2]))))))), (~ _GLF_IDENTITY(((_GLF_IDENTITY(~ (gl_NumWorkGroups[2]), (~ (gl_NumWorkGroups[2])) | (~ (gl_NumWorkGroups[2]))))), ~ (~ (((_GLF_IDENTITY(~ (gl_NumWorkGroups[2]), (~ (gl_NumWorkGroups[2])) | (~ (gl_NumWorkGroups[2]))))))))) >> 0u))) / 1u)))), _GLF_IDENTITY((_GLF_IDENTITY(~ (gl_NumWorkGroups[2]), _GLF_IDENTITY((_GLF_IDENTITY(~ (gl_NumWorkGroups[2]), (~ (gl_NumWorkGroups[2])) | (~ (gl_NumWorkGroups[2])))), ~ (_GLF_IDENTITY(~ ((_GLF_IDENTITY(~ (gl_NumWorkGroups[2]), (~ (gl_NumWorkGroups[2])) | (~ (gl_NumWorkGroups[2]))))), (~ ((_GLF_IDENTITY(~ (gl_NumWorkGroups[2]), (~ (gl_NumWorkGroups[2])) | (~ (gl_NumWorkGroups[2])))))) >> 0u))) / 1u)), min(_GLF_IDENTITY((_GLF_IDENTITY(~ (gl_NumWorkGroups[2]), _GLF_IDENTITY((_GLF_IDENTITY(~ (gl_NumWorkGroups[2]), (~ (gl_NumWorkGroups[2])) | (~ (gl_NumWorkGroups[2])))), ~ (_GLF_IDENTITY(~ ((_GLF_IDENTITY(~ (gl_NumWorkGroups[2]), (~ (gl_NumWorkGroups[2])) | (~ (gl_NumWorkGroups[2]))))), (~ ((_GLF_IDENTITY(~ (gl_NumWorkGroups[2]), (~ (gl_NumWorkGroups[2])) | (~ (gl_NumWorkGroups[2])))))) >> 0u))) / 1u)), ((_GLF_IDENTITY(~ (gl_NumWorkGroups[2]), _GLF_IDENTITY((_GLF_IDENTITY(~ (gl_NumWorkGroups[2]), (~ (gl_NumWorkGroups[2])) | (~ (gl_NumWorkGroups[2])))), ~ (_GLF_IDENTITY(~ ((_GLF_IDENTITY(~ (gl_NumWorkGroups[2]), (~ (gl_NumWorkGroups[2])) | (~ (gl_NumWorkGroups[2]))))), (~ ((_GLF_IDENTITY(~ (gl_NumWorkGroups[2]), (~ (gl_NumWorkGroups[2])) | (~ (gl_NumWorkGroups[2])))))) >> 0u))) / 1u))) | ((_GLF_IDENTITY(~ (gl_NumWorkGroups[2]), _GLF_IDENTITY((_GLF_IDENTITY(~ (gl_NumWorkGroups[2]), (~ (gl_NumWorkGroups[2])) | (~ (gl_NumWorkGroups[2])))), ~ (_GLF_IDENTITY(~ ((_GLF_IDENTITY(~ (gl_NumWorkGroups[2]), (~ (gl_NumWorkGroups[2])) | (~ (gl_NumWorkGroups[2]))))), (~ ((_GLF_IDENTITY(~ (gl_NumWorkGroups[2]), (~ (gl_NumWorkGroups[2])) | (~ (gl_NumWorkGroups[2])))))) >> 0u))) / 1u)))), (_GLF_IDENTITY(~ (gl_NumWorkGroups[2]), _GLF_IDENTITY((_GLF_IDENTITY(~ (gl_NumWorkGroups[2]), (~ (gl_NumWorkGroups[2])) | (~ (gl_NumWorkGroups[2])))), ~ (_GLF_IDENTITY(~ ((_GLF_IDENTITY(~ (gl_NumWorkGroups[2]), (~ (gl_NumWorkGroups[2])) | (~ (gl_NumWorkGroups[2]))))), (~ ((_GLF_IDENTITY(~ (gl_NumWorkGroups[2]), (~ (gl_NumWorkGroups[2])) | (~ (gl_NumWorkGroups[2])))))) >> 0u))) / 1u))))))))))), max(gl_NumWorkGroups[2], gl_NumWorkGroups[2])))))).x;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (false ? _GLF_IDENTITY(_GLF_FUZZED(vec2(9320.6844, 1043.0845)), (_GLF_FUZZED(vec2(9320.6844, 1043.0845))) + vec2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))) : _GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)))).y, bool(bool(_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(9320.6844, 1043.0845)) : _GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)))).y, bool(_GLF_IDENTITY(bvec3(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(false, false || (false)) ? _GLF_FUZZED(vec2(9320.6844, 1043.0845)) : _GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)))).y, true, true), bvec3(bvec3(bvec3(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(9320.6844, 1043.0845)) : _GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)))).y, true, true)))))))))), bool(bvec2((_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(9320.6844, 1043.0845)) : _GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)))).y, bool(bool(_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(9320.6844, 1043.0845)) : _GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)))).y, bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(9320.6844, 1043.0845)) : _GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)))).y, true, true), bvec3(bvec3(bvec3(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(9320.6844, 1043.0845)) : _GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)))).y, true, true)))), bvec3(bvec4(_GLF_IDENTITY(bvec3(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(9320.6844, 1043.0845)) : _GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)))).y, true, true), bvec3(bvec3(bvec3(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(9320.6844, 1043.0845)) : _GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)))).y, true, true)))), false))))))))), true))))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint workgroup_size = gl_WorkGroupSize.x;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint workgroup_id = _GLF_IDENTITY(gl_WorkGroupID.x, 0u ^ (gl_WorkGroupID.x));
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(vec4(554.712, 81.71, 9.0, 9.7).w)), float(injectionSwitch.x), bool(true))) > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, false)))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
    barrier();
  }
 uint workgroup_base = workgroup_size * workgroup_id;
 if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, false || _GLF_IDENTITY((false), true && ((false)))))), _GLF_IDENTITY((_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, false || _GLF_IDENTITY((_GLF_IDENTITY(false, ! (! (false)))), ! (! ((false)))))))) || false, ! (_GLF_IDENTITY(! ((_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(false, (false) && _GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, (true) || false)))), (_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), (! (! (false))) || false))) || false) || (false))))) || false), false || (! (_GLF_IDENTITY((_GLF_IDENTITY(false, _GLF_IDENTITY(false, (false) && true) || (_GLF_IDENTITY(false, false || (false))))), ((_GLF_IDENTITY(false, _GLF_IDENTITY(false, (false) && true) || (_GLF_IDENTITY(false, _GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, ! (! (false))))) || (false)))))) || false) || false))))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! _GLF_IDENTITY((_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), ! (! (! (injectionSwitch.x > injectionSwitch.y))))), ! _GLF_IDENTITY((_GLF_IDENTITY(! ((_GLF_IDENTITY(_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), false || (! (injectionSwitch.x > injectionSwitch.y)))), false || (! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), false || (! (injectionSwitch.x > injectionSwitch.y)))))))), ! (! (! (injectionSwitch.x > injectionSwitch.y)))))), _GLF_IDENTITY(! (_GLF_IDENTITY(! (_GLF_IDENTITY(! ((_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), ! (! (! (injectionSwitch.x > injectionSwitch.y)))))), bool(bool(! ((_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), ! (! (! (injectionSwitch.x > injectionSwitch.y)))))))))), bool(bvec3(! (_GLF_IDENTITY(! ((_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), ! (! (! (injectionSwitch.x > injectionSwitch.y)))))), bool(bool(! ((_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), ! (! (! (injectionSwitch.x > injectionSwitch.y)))))))))), true, true)))), (! (_GLF_IDENTITY(! (_GLF_IDENTITY(! ((_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), ! (! (! (injectionSwitch.x > injectionSwitch.y)))))), bool(bool(! ((_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), ! (! (! (injectionSwitch.x > injectionSwitch.y)))))))))), bool(bvec3(! (_GLF_IDENTITY(! ((_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), ! (! (! (injectionSwitch.x > injectionSwitch.y)))))), bool(bool(! ((_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bool(injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (bool(bool(injectionSwitch.x > injectionSwitch.y))), (! (bool(bool(injectionSwitch.x > injectionSwitch.y)))) && true))))), ! (! (! (injectionSwitch.x > injectionSwitch.y)))))))))), true, true))))) || false))), ! (! (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(! ((_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), ! (! (! (injectionSwitch.x > injectionSwitch.y)))))), _GLF_IDENTITY(! (_GLF_IDENTITY(! (_GLF_IDENTITY(! ((_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), ! (! (! (injectionSwitch.x > injectionSwitch.y)))))), bool(bool(! ((_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), ! (! (! (injectionSwitch.x > injectionSwitch.y)))))))))), bool(bvec3(! (_GLF_IDENTITY(! ((_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), ! (! (! (injectionSwitch.x > injectionSwitch.y)))))), bool(bool(! ((_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), ! (! (! (injectionSwitch.x > injectionSwitch.y)))))))))), true, true)))), (! (_GLF_IDENTITY(! (_GLF_IDENTITY(! ((_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), ! (! (! (injectionSwitch.x > injectionSwitch.y)))))), bool(bool(! ((_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), ! (! (! (injectionSwitch.x > injectionSwitch.y)))))))))), bool(bvec3(! (_GLF_IDENTITY(! ((_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), ! (! (! (injectionSwitch.x > injectionSwitch.y)))))), bool(bool(! ((_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bool(injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (bool(bool(injectionSwitch.x > injectionSwitch.y))), (! (bool(bool(injectionSwitch.x > injectionSwitch.y)))) && true))))), ! (! (! (injectionSwitch.x > injectionSwitch.y)))))))))), true, true))))) || false)), bool(bool(_GLF_IDENTITY(! ((_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), ! (! (! (injectionSwitch.x > injectionSwitch.y)))))), _GLF_IDENTITY(! (_GLF_IDENTITY(! (_GLF_IDENTITY(! ((_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), ! (! (! (injectionSwitch.x > injectionSwitch.y)))))), bool(bool(! ((_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), ! (! (! (injectionSwitch.x > injectionSwitch.y)))))))))), bool(bvec3(! (_GLF_IDENTITY(! ((_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), ! (! (! (injectionSwitch.x > injectionSwitch.y)))))), bool(bool(! ((_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), ! (! (! (injectionSwitch.x > injectionSwitch.y)))))))))), true, true)))), (! (_GLF_IDENTITY(! (_GLF_IDENTITY(! ((_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), ! (! (! (injectionSwitch.x > injectionSwitch.y)))))), bool(bool(! ((_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), ! (! (! (injectionSwitch.x > injectionSwitch.y)))))))))), bool(bvec3(! (_GLF_IDENTITY(! ((_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), ! (! (! (injectionSwitch.x > injectionSwitch.y)))))), bool(bool(! ((_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bool(injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (bool(bool(injectionSwitch.x > injectionSwitch.y))), (! (bool(bool(injectionSwitch.x > injectionSwitch.y)))) && true))))), ! (! (! (injectionSwitch.x > injectionSwitch.y)))))))))), true, true))))) || false)))))), ! (! ((_GLF_IDENTITY(! ((_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), ! (! (! (injectionSwitch.x > injectionSwitch.y)))))), _GLF_IDENTITY(! (_GLF_IDENTITY(! (_GLF_IDENTITY(! ((_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), ! (! (! (injectionSwitch.x > injectionSwitch.y)))))), bool(bool(! ((_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), ! (! (! (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(8.5), _GLF_FUZZED(-35.30)), bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))))).x > injectionSwitch.y)))))))))), bool(bvec3(! (_GLF_IDENTITY(! ((_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), ! (! (! (injectionSwitch.x > injectionSwitch.y)))))), bool(bool(! ((_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), ! (! (! (injectionSwitch.x > injectionSwitch.y)))))))))), true, true)))), (! (_GLF_IDENTITY(! (_GLF_IDENTITY(! ((_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), ! (! (! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(-945.049)), bool(false)))) / 1.0))))))))), bool(bool(! ((_GLF_IDENTITY(! _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y))), ! (! (! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, 0.0 + (injectionSwitch.y)))))))))))), _GLF_IDENTITY(bool(bvec3(! (_GLF_IDENTITY(! ((_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), ! (! (! (injectionSwitch.x > injectionSwitch.y)))))), bool(bool(! ((_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bool(injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(_GLF_IDENTITY(! (bool(bool(injectionSwitch.x > injectionSwitch.y))), (! (bool(bool(injectionSwitch.x > injectionSwitch.y)))) && true), ! (! (_GLF_IDENTITY(! (bool(bool(injectionSwitch.x > injectionSwitch.y))), (! (bool(bool(injectionSwitch.x > injectionSwitch.y)))) && true)))))))), ! (! (! (injectionSwitch.x > injectionSwitch.y)))))))))), true, true)), bool(_GLF_IDENTITY(bvec2(bool(bvec3(! (_GLF_IDENTITY(! ((_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), ! (! (! (injectionSwitch.x > injectionSwitch.y)))))), bool(bool(! ((_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bool(injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(_GLF_IDENTITY(! (bool(bool(injectionSwitch.x > injectionSwitch.y))), (! (bool(bool(injectionSwitch.x > injectionSwitch.y)))) && true), ! (! (_GLF_IDENTITY(! (bool(bool(injectionSwitch.x > injectionSwitch.y))), (! (bool(bool(injectionSwitch.x > injectionSwitch.y)))) && true)))))))), ! (! (! (injectionSwitch.x > injectionSwitch.y)))))))))), true, true)), false), bvec2(bvec4(bvec2(bool(bvec3(! (_GLF_IDENTITY(! ((_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), ! (! (! (injectionSwitch.x > injectionSwitch.y)))))), bool(bool(! ((_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bool(injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(_GLF_IDENTITY(! (bool(bool(injectionSwitch.x > injectionSwitch.y))), (! (bool(bool(injectionSwitch.x > injectionSwitch.y)))) && true), ! (! (_GLF_IDENTITY(! (bool(bool(injectionSwitch.x > injectionSwitch.y))), (! (bool(bool(injectionSwitch.x > injectionSwitch.y)))) && true)))))))), ! (! (! (injectionSwitch.x > injectionSwitch.y)))))))))), true, true)), false), false, true)))))))) || false)))))))))))), bool(bvec2((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), ! _GLF_IDENTITY((! (! (injectionSwitch.x > injectionSwitch.y))), false || ((! (! (injectionSwitch.x > injectionSwitch.y)))))))), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > injectionSwitch.y, ! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), ! (! _GLF_IDENTITY((! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(false, (false) || false)), bvec2(bvec3(bvec2(injectionSwitch.x > injectionSwitch.y, false), true)))), false || (bool(_GLF_IDENTITY(bvec2(injectionSwitch.x > injectionSwitch.y, false), bvec2(bvec3(bvec2(injectionSwitch.x > injectionSwitch.y, false), true))))))))), true && (_GLF_IDENTITY((! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(false, ! (! (false)))), bvec2(bvec3(bvec2(injectionSwitch.x > injectionSwitch.y, false), true)))), false || (bool(_GLF_IDENTITY(bvec2(injectionSwitch.x > injectionSwitch.y, false), bvec2(bvec3(bvec2(injectionSwitch.x > injectionSwitch.y, false), true))))))))), ((! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(injectionSwitch.x > injectionSwitch.y, false), bvec2(bvec3(bvec2(injectionSwitch.x > injectionSwitch.y, false), true)))), false || (bool(_GLF_IDENTITY(bvec2(injectionSwitch.x > injectionSwitch.y, false), bvec2(bvec3(bvec2(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), false), true)))))))))) || false)))))))) || false, bool(bvec3((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > injectionSwitch.y, ! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), ! (! _GLF_IDENTITY((! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(injectionSwitch.x > injectionSwitch.y, false), bvec2(bvec3(bvec2(injectionSwitch.x > injectionSwitch.y, false), true)))), false || (bool(_GLF_IDENTITY(bvec2(injectionSwitch.x > injectionSwitch.y, false), bvec2(bvec3(bvec2(injectionSwitch.x > injectionSwitch.y, false), true))))))))), true && (_GLF_IDENTITY((! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(injectionSwitch.x > injectionSwitch.y, false), bvec2(bvec3(bvec2(injectionSwitch.x > injectionSwitch.y, false), true)))), false || (bool(_GLF_IDENTITY(bvec2(injectionSwitch.x > injectionSwitch.y, false), bvec2(bvec3(bvec2(injectionSwitch.x > injectionSwitch.y, false), true))))))))), ((! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(injectionSwitch.x > injectionSwitch.y, false), bvec2(bvec3(bvec2(injectionSwitch.x > injectionSwitch.y, false), true)))), false || (bool(_GLF_IDENTITY(bvec2(injectionSwitch.x > injectionSwitch.y, false), bvec2(bvec3(bvec2(injectionSwitch.x > injectionSwitch.y, false), true)))))))))) || false)))))))) || false, false, true))))), false))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 uint virtual_gid = _GLF_IDENTITY(workgroup_base + subgroup_id * _GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size)), (_GLF_IDENTITY(workgroup_base + subgroup_id * _GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size)), clamp(workgroup_base + subgroup_id * _GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size)), workgroup_base + subgroup_id * _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, max(_GLF_IDENTITY(subgroup_size, 0u | (subgroup_size)), subgroup_size)), max(_GLF_IDENTITY(subgroup_size, max(_GLF_IDENTITY(subgroup_size, 0u | (subgroup_size)), subgroup_size)), _GLF_IDENTITY(subgroup_size, max(_GLF_IDENTITY(subgroup_size, 0u | (subgroup_size)), subgroup_size)))), workgroup_base + subgroup_id * _GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size))))) | _GLF_IDENTITY((workgroup_base + subgroup_id * _GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size))), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY((workgroup_base + subgroup_id * _GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size))), clamp(_GLF_IDENTITY((workgroup_base + subgroup_id * _GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size))), _GLF_IDENTITY(((workgroup_base + subgroup_id * _GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size)))), (((workgroup_base + subgroup_id * _GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size))))) / 1u) | ((workgroup_base + subgroup_id * _GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size))))), (workgroup_base + _GLF_IDENTITY(subgroup_id * _GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size)), 1u * (subgroup_id * _GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size))))), (workgroup_base + subgroup_id * _GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size)))))), 0u + (~ (_GLF_IDENTITY((workgroup_base + subgroup_id * _GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size))), clamp(_GLF_IDENTITY((workgroup_base + subgroup_id * _GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size))), ((workgroup_base + subgroup_id * _GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size)))) | ((_GLF_IDENTITY(workgroup_base, 0u ^ (workgroup_base)) + subgroup_id * _GLF_IDENTITY(subgroup_size, max(subgroup_size, _GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, (true ? subgroup_size : _GLF_FUZZED(num_workgroup)))) | 0u)))))), (workgroup_base + subgroup_id * _GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size))), (workgroup_base + subgroup_id * _GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size))))))))))) + subgroup_local_id;
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) || _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(mat4(injectionSwitch, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, determinant(mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)), 0.0, 0.0, 1.0, 0.0))), injectionSwitch)), (false ? _GLF_FUZZED(injectionSwitch) : _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(mat4(injectionSwitch, 1.0, _GLF_IDENTITY(1.0, float(mat4(1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, determinant(mat3(0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x))), 1.0, 0.0, 1.0, 0.0, 1.0, abs(1.0), sqrt(0.0), 1.0))), 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, determinant(mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(-9171.9013))), 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)), 0.0, 0.0, 1.0, 0.0))), injectionSwitch)))))[_GLF_IDENTITY(0, (0) - 0)], (injectionSwitch)[_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (_GLF_IDENTITY(false, bool(bvec4(false, _GLF_IDENTITY(false, ! (! (false))), false, true))) ? _GLF_FUZZED(-55538) : 1))) >> 0)]), vec2(_GLF_FUZZED(8780.1948), _GLF_FUZZED(_GLF_IDENTITY(6048.5753, min(6048.5753, _GLF_IDENTITY(6048.5753, mix(float(6048.5753), float(_GLF_FUZZED(1.3)), bool(false))))))), bvec2(false, false))), _GLF_IDENTITY(mat2(1.0) * (_GLF_IDENTITY(injectionSwitch, mix(vec2((_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(mat4(injectionSwitch, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, determinant(mat4(0.0, 0.0, _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(8.5)), bool(false))), 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0, 0.0, 0.0)), 0.0, 0.0, 1.0, 0.0))), injectionSwitch)))[0], (injectionSwitch)[_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (false ? _GLF_FUZZED(-55538) : 1))) >> 0)]), vec2(_GLF_FUZZED(8780.1948), _GLF_FUZZED(_GLF_IDENTITY(6048.5753, min(6048.5753, _GLF_IDENTITY(6048.5753, mix(float(6048.5753), float(_GLF_FUZZED(1.3)), _GLF_IDENTITY(bool(false), true && (bool(false))))))))), bvec2(false, false)))), (mat2(1.0) * (_GLF_IDENTITY(injectionSwitch, mix(vec2((_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(mat4(injectionSwitch, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, determinant(mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)), 0.0, 0.0, 1.0, 0.0))), injectionSwitch)))[0], (injectionSwitch)[_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (false ? _GLF_FUZZED(-55538) : 1))) >> 0)]), vec2(_GLF_FUZZED(8780.1948), _GLF_FUZZED(_GLF_IDENTITY(6048.5753, min(6048.5753, _GLF_IDENTITY(6048.5753, mix(float(6048.5753), float(_GLF_FUZZED(1.3)), bool(false))))))), bvec2(false, false))))) * mat2(1.0))).y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint next_virtual_gid = _GLF_IDENTITY(workgroup_base, (0u & 83684u) ^ (_GLF_IDENTITY(workgroup_base, uint(uint(workgroup_base))))) + _GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY((_GLF_IDENTITY(subgroup_id, max(subgroup_id, subgroup_id))) / 1u, clamp((_GLF_IDENTITY(subgroup_id, max(subgroup_id, subgroup_id))) / 1u, (_GLF_IDENTITY(subgroup_id, max(subgroup_id, subgroup_id))) / 1u, (_GLF_IDENTITY(subgroup_id, max(subgroup_id, subgroup_id))) / 1u))), uint(_GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY((_GLF_IDENTITY(subgroup_id, max(subgroup_id, subgroup_id))) / 1u, clamp((_GLF_IDENTITY(subgroup_id, max(subgroup_id, subgroup_id))) / 1u, (_GLF_IDENTITY(subgroup_id, max(subgroup_id, subgroup_id))) / 1u, (_GLF_IDENTITY(subgroup_id, max(subgroup_id, subgroup_id))) / 1u))), clamp(_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY((_GLF_IDENTITY(subgroup_id, max(subgroup_id, subgroup_id))) / 1u, clamp((_GLF_IDENTITY(subgroup_id, max(subgroup_id, subgroup_id))) / 1u, (_GLF_IDENTITY(subgroup_id, max(subgroup_id, subgroup_id))) / 1u, (_GLF_IDENTITY(subgroup_id, max(subgroup_id, subgroup_id))) / 1u))), _GLF_IDENTITY(subgroup_id, _GLF_IDENTITY((_GLF_IDENTITY(subgroup_id, max(subgroup_id, subgroup_id))) / 1u, clamp((_GLF_IDENTITY(subgroup_id, max(subgroup_id, subgroup_id))) / 1u, (_GLF_IDENTITY(subgroup_id, max(subgroup_id, subgroup_id))) / 1u, (_GLF_IDENTITY(subgroup_id, max(subgroup_id, subgroup_id))) / 1u))), _GLF_IDENTITY(subgroup_id, _GLF_IDENTITY((_GLF_IDENTITY(subgroup_id, max(subgroup_id, subgroup_id))) / 1u, clamp((_GLF_IDENTITY(subgroup_id, max(subgroup_id, subgroup_id))) / 1u, (_GLF_IDENTITY(subgroup_id, max(subgroup_id, subgroup_id))) / 1u, (_GLF_IDENTITY(subgroup_id, max(subgroup_id, subgroup_id))) / 1u)))))), 0u + (uint(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY((_GLF_IDENTITY(subgroup_id, max(subgroup_id, subgroup_id))) / 1u, clamp((_GLF_IDENTITY(subgroup_id, max(subgroup_id, subgroup_id))) / 1u, (_GLF_IDENTITY(subgroup_id, max(subgroup_id, subgroup_id))) / 1u, (_GLF_IDENTITY(subgroup_id, max(subgroup_id, subgroup_id))) / 1u))), clamp(_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY((_GLF_IDENTITY(subgroup_id, max(subgroup_id, subgroup_id))) / 1u, clamp((_GLF_IDENTITY(subgroup_id, max(subgroup_id, subgroup_id))) / 1u, (_GLF_IDENTITY(subgroup_id, max(subgroup_id, subgroup_id))) / 1u, (_GLF_IDENTITY(subgroup_id, max(subgroup_id, subgroup_id))) / 1u))), _GLF_IDENTITY(subgroup_id, _GLF_IDENTITY((_GLF_IDENTITY(subgroup_id, max(subgroup_id, subgroup_id))) / 1u, clamp((_GLF_IDENTITY(subgroup_id, max(subgroup_id, subgroup_id))) / 1u, (_GLF_IDENTITY(subgroup_id, max(subgroup_id, subgroup_id))) / 1u, (_GLF_IDENTITY(subgroup_id, max(subgroup_id, subgroup_id))) / 1u))), _GLF_IDENTITY(subgroup_id, _GLF_IDENTITY((_GLF_IDENTITY(subgroup_id, max(subgroup_id, subgroup_id))) / 1u, clamp((_GLF_IDENTITY(subgroup_id, max(subgroup_id, subgroup_id))) / 1u, (_GLF_IDENTITY(subgroup_id, max(subgroup_id, subgroup_id))) / 1u, (_GLF_IDENTITY(subgroup_id, max(subgroup_id, subgroup_id))) / 1u))))))))))) | (subgroup_id)) * _GLF_IDENTITY(subgroup_size, ~ (_GLF_IDENTITY(~ _GLF_IDENTITY((subgroup_size), max((_GLF_IDENTITY(subgroup_size, (subgroup_size) << 0u)), (subgroup_size))), _GLF_IDENTITY((~ _GLF_IDENTITY((subgroup_size), max((subgroup_size), _GLF_IDENTITY((_GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, _GLF_IDENTITY(subgroup_size, (subgroup_size) ^ 0u)))), ((_GLF_IDENTITY(subgroup_size, clamp(_GLF_IDENTITY(subgroup_size, (subgroup_size) / 1u), subgroup_size, _GLF_IDENTITY(subgroup_size, (subgroup_size) ^ 0u))))) | ((_GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, _GLF_IDENTITY(subgroup_size, (subgroup_size) ^ 0u))))))))) - 0u, ((~ _GLF_IDENTITY(_GLF_IDENTITY((subgroup_size), uint(uvec3((subgroup_size), 1u, 1u))), _GLF_IDENTITY(max((subgroup_size), _GLF_IDENTITY((_GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (subgroup_size) ^ 0u), uint(uvec4(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (subgroup_size) ^ 0u), (_GLF_IDENTITY(subgroup_size, (subgroup_size) ^ 0u)) ^ 0u), 1u, 1u, 0u)))))), ((_GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, _GLF_IDENTITY(subgroup_size, (subgroup_size) ^ 0u))))) | ((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, 0u ^ (_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, (subgroup_size) << 0u)) << 0u))), clamp(subgroup_size, subgroup_size, _GLF_IDENTITY(subgroup_size, (subgroup_size) ^ 0u))))))), (max((subgroup_size), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, clamp(subgroup_size, _GLF_IDENTITY(subgroup_size, (subgroup_size) << 0u), _GLF_IDENTITY(subgroup_size, (subgroup_size) ^ 0u))), max(_GLF_IDENTITY(subgroup_size, clamp(subgroup_size, _GLF_IDENTITY(subgroup_size, (subgroup_size) << 0u), _GLF_IDENTITY(subgroup_size, (subgroup_size) ^ 0u))), _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, clamp(subgroup_size, _GLF_IDENTITY(subgroup_size, (subgroup_size) << 0u), _GLF_IDENTITY(subgroup_size, (subgroup_size) ^ 0u))), uint(uvec4(_GLF_IDENTITY(subgroup_size, clamp(subgroup_size, _GLF_IDENTITY(subgroup_size, (subgroup_size) << 0u), _GLF_IDENTITY(subgroup_size, (subgroup_size) ^ 0u))), 0u, 1u, 1u)))))), _GLF_IDENTITY(((_GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, _GLF_IDENTITY(subgroup_size, (subgroup_size) ^ 0u))))) | ((_GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, _GLF_IDENTITY(subgroup_size, (subgroup_size) ^ 0u))))), ~ (~ (_GLF_IDENTITY(((_GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (subgroup_size) ^ 0u), max(_GLF_IDENTITY(subgroup_size, (subgroup_size) ^ 0u), _GLF_IDENTITY(subgroup_size, (subgroup_size) ^ 0u))))))) | ((_GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, _GLF_IDENTITY(subgroup_size, (subgroup_size) ^ 0u))))), (((_GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, _GLF_IDENTITY(subgroup_size, (subgroup_size) ^ 0u))))) | ((_GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, _GLF_IDENTITY(subgroup_size, (subgroup_size) ^ 0u)))))) >> 0u))))))) + (0u << _GLF_IDENTITY(uint(3u), uint(3u)))))) - 0u) / uint(_GLF_ONE(1.0, injectionSwitch.y)))))) + ((_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) / _GLF_IDENTITY(1u, min(_GLF_IDENTITY(1u, 0u | (1u)), _GLF_IDENTITY(1u, max(1u, 1u)))))) % subgroup_size);
 if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY((_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false))))), true && ((_GLF_DEAD(false)))) || false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bool(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x)) > injectionSwitch.y)))))))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, float(float(injectionSwitch.x))) > injectionSwitch.y))))
  barrier();
 atomicStore(buf[_GLF_IDENTITY(virtual_gid, uint(uvec4(virtual_gid, 0u, 0u, 0u)))], uint(1), 4, 64, _GLF_IDENTITY(_GLF_IDENTITY(4, (0 << _GLF_IDENTITY(int(2), int(2))) | (_GLF_IDENTITY(4, 0 | (4)))), ~ _GLF_IDENTITY((~ (4)), clamp((~ (4)), (~ (4)), (~ (4))))));
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_DEAD(false), true)))) && true), false || (_GLF_DEAD(false)))))))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && _GLF_IDENTITY(true, false || (true))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   barrier();
  }
 if(subgroup_local_id + _GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(-28130))) < subgroup_size)
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   atomicStore(buf[next_virtual_gid], _GLF_IDENTITY(uint(2), (0u >> _GLF_IDENTITY(uint(4u), _GLF_IDENTITY(uint(4u), min(uint(_GLF_IDENTITY(4u, 0u | (4u))), uint(4u))))) | (uint(2))), 4, 64, 4);
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(! (_GLF_DEAD(false)), false, _GLF_IDENTITY(true, false || (true))), bvec3(bvec3(bvec3(! (_GLF_DEAD(false)), false, true))))), _GLF_IDENTITY(false || (bool(_GLF_IDENTITY(bvec3(! (_GLF_DEAD(false)), false, true), bvec3(bvec3(bvec3(! (_GLF_DEAD(false)), false, true)))))), false || (_GLF_IDENTITY(false || (bool(_GLF_IDENTITY(bvec3(! (_GLF_DEAD(false)), false, true), bvec3(bvec3(bvec3(! (_GLF_DEAD(false)), false, true)))))), true && (false || (bool(_GLF_IDENTITY(bvec3(! (_GLF_DEAD(false)), false, true), bvec3(bvec3(bvec3(! (_GLF_DEAD(false)), false, true)))))))))))))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   subgroupAll(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), false || (! _GLF_IDENTITY((false), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY((false), true && ((false))))), (bool(bool(_GLF_IDENTITY(_GLF_IDENTITY((false), bool(bvec2((false), false))), true && ((false)))))) && true)))))), false || (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(_GLF_IDENTITY(! (false), ! (! (! (false)))), false || (! _GLF_IDENTITY((false), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY((false), true && ((_GLF_IDENTITY(false, true && (false))))))), (bool(bool(_GLF_IDENTITY(_GLF_IDENTITY((false), bool(bvec3((false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))), true && ((false)))))) && true)))))), bool(bvec2(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), false || (! _GLF_IDENTITY((false), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY((false), true && ((false))))), (bool(bool(_GLF_IDENTITY((false), true && ((false)))))) && true)))))), false))))));
  }
 else
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, ! (! (false)))))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   atomicStore(buf[_GLF_IDENTITY(_GLF_IDENTITY(next_virtual_gid, max(next_virtual_gid, _GLF_IDENTITY(next_virtual_gid, (next_virtual_gid) ^ 0u))), _GLF_IDENTITY(_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, _GLF_IDENTITY(0u | (0u), 0u + (0u | (0u))))) ^ 0u) ^ (next_virtual_gid), (_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, _GLF_IDENTITY(0u | (0u), 0u + (0u | (0u))))) ^ 0u) ^ (next_virtual_gid)) | (64955u & 0u)))], uint(2), 4, 64, 4);
   if(_GLF_DEAD(false))
    barrier();
   subgroupAll(true);
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
  barrier();
}
