#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
#extension GL_EXT_maximal_reconvergence : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 do
  {
   for(int _injected_loop_counter = int(_GLF_ZERO(_GLF_IDENTITY(_GLF_IDENTITY(0.0, clamp(0.0, _GLF_IDENTITY(0.0, (0.0) - 0.0), 0.0)), _GLF_IDENTITY(mix(float(_GLF_IDENTITY(0.0, clamp(0.0, _GLF_IDENTITY(0.0, (0.0) - 0.0), 0.0))), float(_GLF_FUZZED(12.58)), bool(false)), clamp(mix(float(_GLF_IDENTITY(0.0, clamp(0.0, _GLF_IDENTITY(0.0, (0.0) - 0.0), 0.0))), float(_GLF_FUZZED(12.58)), bool(false)), mix(float(_GLF_IDENTITY(0.0, clamp(0.0, _GLF_IDENTITY(0.0, (0.0) - 0.0), 0.0))), float(_GLF_FUZZED(12.58)), bool(false)), mix(float(_GLF_IDENTITY(0.0, clamp(0.0, _GLF_IDENTITY(0.0, (0.0) - 0.0), 0.0))), float(_GLF_FUZZED(12.58)), bool(false))))), injectionSwitch.x)); _GLF_WRAPPED_LOOP(_injected_loop_counter < int(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), 0.0 + (_GLF_ONE(1.0, injectionSwitch.y))))); _injected_loop_counter ++)
    {
     do
      {
       if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec3(_GLF_DEAD(false), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), true && (bool(bvec3(_GLF_DEAD(false), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), _GLF_IDENTITY((_GLF_DEAD(false)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(_GLF_IDENTITY(! ((_GLF_DEAD(false)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (! ((_GLF_DEAD(false)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && true), ! (_GLF_IDENTITY(! (! ((_GLF_DEAD(false)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true && (! (! ((_GLF_DEAD(false)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))))
        {
         for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
          {
           if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (! (injectionSwitch.x < injectionSwitch.y)))))))
            {
             if(_GLF_WRAPPED_IF_TRUE(true))
              {
               return;
              }
             else
              {
              }
            }
           else
            {
            }
          }
        }
      }
     while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, false || (false))));
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y))), true, true), bvec3(bvec3(bvec3(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y))), true, true)))))))))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)))).y, mix(float(_GLF_FUZZED(vec4(2765.9952, -5.1, -774.285, -5732.8872).y)), float(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(vec4(2765.9952, -5.1, -774.285, -5732.8872).y)), float(injectionSwitch.y), bool(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x < injectionSwitch.y))))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(vec4(2765.9952, -5.1, -774.285, -5732.8872).y)), float(injectionSwitch.y), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))) || false), ! (! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(vec4(2765.9952, -5.1, -774.285, -5732.8872).y)), float(injectionSwitch.y), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))) || _GLF_IDENTITY(false, (false) || false)))), true && (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(vec4(2765.9952, -5.1, -774.285, -5732.8872).y)), float(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))) + log(1.0))))), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(vec4(2765.9952, -5.1, -774.285, -5732.8872).y)), float(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y), _GLF_IDENTITY(bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), _GLF_IDENTITY(bool(bvec2(bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), false)), _GLF_IDENTITY(bool(bvec4(bool(bvec2(bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), false)), true, false, false)), ! (! (bool(bvec4(bool(bvec2(bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), false)), true, false, false))))))))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(vec4(2765.9952, -5.1, -774.285, -5732.8872).y)), float(injectionSwitch.y), bool(_GLF_TRUE(_GLF_IDENTITY(true, false || (true)), (injectionSwitch.x < injectionSwitch.y)))))) || false), ! _GLF_IDENTITY((! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(_GLF_IDENTITY(float(_GLF_FUZZED(vec4(2765.9952, -5.1, -774.285, -5732.8872).y)), tan(length(vec4(0.0, _GLF_IDENTITY(0.0, (true ? _GLF_IDENTITY(0.0, max(0.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)))) : _GLF_FUZZED(-0.4))), 0.0, 0.0))) + (float(_GLF_FUZZED(_GLF_IDENTITY(vec4(2765.9952, -5.1, -774.285, -5732.8872).y, 0.0 + (vec4(2765.9952, -5.1, -774.285, -5732.8872).y)))))), float(injectionSwitch.y), bool(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) < injectionSwitch.y))))))), ! (! ((! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(_GLF_IDENTITY(float(_GLF_FUZZED(vec4(2765.9952, -5.1, -774.285, -5732.8872).y)), tan(length(vec4(0.0, _GLF_IDENTITY(0.0, (true ? _GLF_IDENTITY(0.0, max(0.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)))) : _GLF_FUZZED(-0.4))), 0.0, 0.0))) + (float(_GLF_FUZZED(_GLF_IDENTITY(vec4(2765.9952, -5.1, -774.285, -5732.8872).y, 0.0 + (vec4(2765.9952, -5.1, -774.285, -5732.8872).y)))))), float(injectionSwitch.y), bool(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) < injectionSwitch.y)))))))))))), true && ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(vec4(2765.9952, -5.1, -774.285, -5732.8872).y)), float(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y), _GLF_IDENTITY(bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), _GLF_IDENTITY(bool(bvec2(bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), false)), _GLF_IDENTITY(bool(bvec4(bool(bvec2(bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), false)), true, false, false)), ! (! (bool(bvec4(bool(bvec2(bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), false)), true, false, false))))))))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(vec4(2765.9952, -5.1, -774.285, -5732.8872).y)), float(injectionSwitch.y), bool(_GLF_TRUE(_GLF_IDENTITY(true, false || (true)), (injectionSwitch.x < injectionSwitch.y)))))) || false), ! _GLF_IDENTITY((! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(_GLF_IDENTITY(float(_GLF_FUZZED(vec4(2765.9952, -5.1, -774.285, -5732.8872).y)), tan(length(vec4(0.0, _GLF_IDENTITY(0.0, (true ? _GLF_IDENTITY(0.0, max(0.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)))) : _GLF_FUZZED(-0.4))), 0.0, 0.0))) + (float(_GLF_FUZZED(_GLF_IDENTITY(vec4(2765.9952, -5.1, -774.285, -5732.8872).y, 0.0 + (vec4(2765.9952, -5.1, -774.285, -5732.8872).y)))))), float(injectionSwitch.y), bool(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) < injectionSwitch.y))))))), ! (! ((! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(_GLF_IDENTITY(float(_GLF_FUZZED(vec4(2765.9952, -5.1, -774.285, -5732.8872).y)), tan(length(vec4(0.0, _GLF_IDENTITY(0.0, (true ? _GLF_IDENTITY(0.0, max(0.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)))) : _GLF_FUZZED(-0.4))), 0.0, 0.0))) + (float(_GLF_FUZZED(_GLF_IDENTITY(vec4(2765.9952, -5.1, -774.285, -5732.8872).y, 0.0 + (vec4(2765.9952, -5.1, -774.285, -5732.8872).y)))))), float(injectionSwitch.y), bool(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) < injectionSwitch.y)))))))))))))) || false))))), bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true)))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
          }
         else
          {
           return;
          }
        }
       if(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), bool(bvec2(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, (false) && true)), true))))
        {
         if(_GLF_DEAD(false))
          break;
        }
       else
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          continue;
         if(_GLF_DEAD(false))
          continue;
         do
          {
           return;
          }
         while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
        }
      }
    }
  }
 while(_GLF_WRAPPED_LOOP(false));
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(false))
  {
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     return;
     if(_GLF_DEAD(false))
      barrier();
    }
   else
    {
    }
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  barrier();
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, false || (true))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
  }
 else
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
  return;
 uint subgroup_local_id = gl_SubgroupInvocationID;
 uint num_workgroup = _GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) - uvec3(0u, 0u, 0u)).x;
 uint workgroup_size = gl_WorkGroupSize.x;
 if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 else
  {
   if(_GLF_DEAD(false))
    return;
  }
 uint workgroup_id = gl_WorkGroupID.x;
 for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter, 0 + (_injected_loop_counter)) > _GLF_IDENTITY(int(_GLF_ZERO(_GLF_IDENTITY(0.0, _GLF_IDENTITY(float(vec3(_GLF_IDENTITY(0.0, mix(float(_GLF_IDENTITY(0.0, (0.0) / 1.0)), float(_GLF_FUZZED(9.9)), bool(false))), exp(0.0), 1.0)), mix(float(float(vec3(_GLF_IDENTITY(0.0, mix(float(_GLF_IDENTITY(0.0, (0.0) / 1.0)), float(_GLF_FUZZED(9.9)), bool(false))), exp(0.0), 1.0))), float(_GLF_FUZZED((+ 1111.4808))), bool(false)))), injectionSwitch.x)), min(int(_GLF_ZERO(_GLF_IDENTITY(0.0, _GLF_IDENTITY(float(vec3(_GLF_IDENTITY(0.0, mix(float(_GLF_IDENTITY(0.0, (0.0) / 1.0)), float(_GLF_FUZZED(9.9)), bool(false))), exp(0.0), 1.0)), mix(float(float(vec3(_GLF_IDENTITY(0.0, mix(float(_GLF_IDENTITY(0.0, (0.0) / 1.0)), float(_GLF_FUZZED(9.9)), bool(false))), exp(0.0), 1.0))), float(_GLF_FUZZED((+ 1111.4808))), bool(false)))), injectionSwitch.x)), int(_GLF_ZERO(_GLF_IDENTITY(0.0, _GLF_IDENTITY(float(vec3(_GLF_IDENTITY(0.0, mix(float(_GLF_IDENTITY(0.0, (0.0) / 1.0)), float(_GLF_FUZZED(9.9)), bool(false))), exp(0.0), 1.0)), mix(float(float(vec3(_GLF_IDENTITY(0.0, mix(float(_GLF_IDENTITY(0.0, (0.0) / 1.0)), float(_GLF_FUZZED(9.9)), bool(false))), exp(0.0), 1.0))), float(_GLF_FUZZED((+ 1111.4808))), bool(false)))), injectionSwitch.x))))); _GLF_IDENTITY(_injected_loop_counter --, (_injected_loop_counter --) * 1))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), _GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, (false) || false), true, false, false)))), (! (_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, (false) || false), true, false, false))))) && true))), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, (false) || false), true, false, false)))), (! (_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, (false) || false), true, false, false))))) && true)))), ! (! (bool(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, (false) || false), true, false, false)))), (! (_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, (false) || false), true, false, false))))) && true))))))))) || (bool(bool(false))))))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     barrier();
    }
  }
 if(_GLF_DEAD(false))
  return;
 do
  {
   if(_GLF_DEAD(false))
    continue;
   if(_GLF_DEAD(false))
    {
     for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != _GLF_IDENTITY(int(_GLF_ZERO(0.0, injectionSwitch.x)), 0 | (int(_GLF_ZERO(0.0, injectionSwitch.x))))); _injected_loop_counter --)
      {
       for(int _injected_loop_counter = int(_GLF_ZERO(0.0, injectionSwitch.x)); _GLF_WRAPPED_LOOP(_injected_loop_counter < int(_GLF_ONE(1.0, injectionSwitch.y))); _injected_loop_counter ++)
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          break;
         return;
        }
      }
    }
  }
 while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
 if(_GLF_WRAPPED_IF_FALSE(false))
  {
  }
 else
  {
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
  barrier();
 uint workgroup_base = workgroup_size * workgroup_id;
 do
  {
   do
    {
     if(_GLF_WRAPPED_IF_TRUE(true))
      {
       if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          {
           do
            {
             if(_GLF_WRAPPED_IF_TRUE(true))
              {
               return;
              }
             else
              {
              }
            }
           while(_GLF_WRAPPED_LOOP(false));
          }
         if(_GLF_DEAD(false))
          return;
         if(_GLF_WRAPPED_IF_FALSE(false))
          {
          }
         else
          {
           if(_GLF_DEAD(false))
            barrier();
          }
        }
       else
        {
        }
      }
     else
      {
      }
    }
   while(_GLF_WRAPPED_LOOP(false));
  }
 while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint subgroup_base = _GLF_IDENTITY(subgroup_id, ~ (~ (subgroup_id))) * subgroup_size;
 if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(bvec2(! (false), false)))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))
  {
  }
 else
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0), mix(_GLF_IDENTITY(float(_GLF_FUZZED(-3.6)), (_GLF_IDENTITY(float(_GLF_FUZZED(-3.6)), (true ? _GLF_IDENTITY(float(_GLF_FUZZED(-3.6)), float(_GLF_IDENTITY(mat3(float(_GLF_FUZZED(-3.6)), length(_GLF_IDENTITY(_GLF_IDENTITY(vec3(0.0, 0.0, 0.0), vec3(_GLF_IDENTITY(vec3(_GLF_IDENTITY(vec3(0.0, 0.0, 0.0), max(vec3(0.0, 0.0, 0.0), vec3(0.0, 0.0, 0.0)))), (vec3(_GLF_IDENTITY(vec3(0.0, 0.0, 0.0), max(vec3(0.0, 0.0, 0.0), vec3(0.0, 0.0, 0.0))))) * mat3(1.0)))), mat3(1.0) * (_GLF_IDENTITY(vec3(0.0, 0.0, 0.0), vec3(_GLF_IDENTITY(vec3(_GLF_IDENTITY(vec3(0.0, 0.0, 0.0), max(vec3(0.0, 0.0, 0.0), vec3(0.0, 0.0, 0.0)))), (vec3(_GLF_IDENTITY(vec3(0.0, 0.0, 0.0), max(vec3(0.0, 0.0, 0.0), vec3(0.0, 0.0, 0.0))))) * mat3(1.0))))))), 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(round(length(normalize(vec2(1.0, 1.0)))), mix(float(round(_GLF_IDENTITY(length(normalize(vec2(1.0, 1.0))), float(mat2x4(length(normalize(vec2(1.0, 1.0))), 1.0, exp(0.0), 1.0, 0.0, round(length(normalize(1.0))), 1.0, 0.0))))), float(_GLF_FUZZED(749.551)), bool(false)))), mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0) + (_GLF_IDENTITY(mat3(float(_GLF_FUZZED(-3.6)), length(_GLF_IDENTITY(vec3(0.0, 0.0, 0.0), vec3(_GLF_IDENTITY(vec3(_GLF_IDENTITY(vec3(0.0, 0.0, 0.0), max(vec3(0.0, 0.0, 0.0), vec3(0.0, 0.0, 0.0)))), (vec3(_GLF_IDENTITY(vec3(0.0, _GLF_IDENTITY(0.0, clamp(0.0, _GLF_IDENTITY(0.0, float(float(0.0))), 0.0)), 0.0), max(vec3(0.0, 0.0, 0.0), vec3(0.0, 0.0, 0.0))))) * mat3(1.0))))), 1.0, 0.0, 1.0, _GLF_IDENTITY(0.0, (true ? _GLF_IDENTITY(0.0, max(0.0, 0.0)) : _GLF_FUZZED(832.615))), 0.0, 1.0, _GLF_IDENTITY(round(length(normalize(vec2(1.0, 1.0)))), mix(float(round(length(normalize(vec2(1.0, 1.0))))), float(_GLF_FUZZED(749.551)), bool(false)))), transpose(transpose(mat3(float(_GLF_FUZZED(-3.6)), length(_GLF_IDENTITY(_GLF_IDENTITY(vec3(0.0, 0.0, 0.0), vec3(_GLF_IDENTITY(vec3(_GLF_IDENTITY(vec3(0.0, 0.0, 0.0), max(vec3(0.0, 0.0, 0.0), vec3(0.0, 0.0, 0.0)))), (vec3(_GLF_IDENTITY(vec3(0.0, 0.0, 0.0), max(vec3(0.0, 0.0, 0.0), vec3(0.0, 0.0, 0.0))))) * mat3(1.0)))), _GLF_IDENTITY(vec3(1.0, 1.0, 1.0), vec3(mat4x2(vec3(1.0, 1.0, 1.0), 0.0, 1.0, 1.0, 1.0, 0.0))) * (_GLF_IDENTITY(vec3(0.0, 0.0, 0.0), vec3(_GLF_IDENTITY(vec3(_GLF_IDENTITY(vec3(0.0, _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(-877.138) : 0.0)), 0.0), max(_GLF_IDENTITY(vec3(0.0, 0.0, 0.0), mix(vec3(_GLF_FUZZED(-40.67), (vec3(0.0, 0.0, 0.0))[1], _GLF_FUZZED(-5.3)), vec3((vec3(0.0, 0.0, 0.0))[0], _GLF_FUZZED(-38.48), (vec3(0.0, 0.0, 0.0))[2]), bvec3(true, false, true))), vec3(0.0, 0.0, 0.0)))), (vec3(_GLF_IDENTITY(_GLF_IDENTITY(vec3(0.0, 0.0, 0.0), max(vec3(0.0, 0.0, 0.0), vec3(0.0, 0.0, 0.0))), mix(vec3((_GLF_IDENTITY(vec3(0.0, 0.0, 0.0), max(vec3(0.0, 0.0, 0.0), vec3(0.0, 0.0, 0.0))))[0], (_GLF_IDENTITY(vec3(0.0, 0.0, 0.0), max(vec3(0.0, 0.0, 0.0), vec3(0.0, 0.0, 0.0))))[1], (_GLF_IDENTITY(vec3(0.0, 0.0, 0.0), max(vec3(0.0, 0.0, 0.0), vec3(0.0, 0.0, 0.0))))[2]), vec3(_GLF_FUZZED(-471.208), _GLF_FUZZED(91.60), _GLF_FUZZED(-2.5)), bvec3(false, false, false))))) * mat3(1.0))))))), 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(round(length(normalize(vec2(1.0, 1.0)))), mix(float(round(length(normalize(vec2(1.0, 1.0))))), float(_GLF_FUZZED(749.551)), bool(false))))))))))) : _GLF_IDENTITY(_GLF_FUZZED(5.9), (_GLF_FUZZED(5.9)) / _GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, max(1.0, 1.0)), _GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED((mat3x2(-5.5, 87.52, -61.56, 15.59, 6.3, 0.4) , 2619.4367)))), _GLF_IDENTITY(1.0, _GLF_IDENTITY(float(float(1.0)), (true ? float(float(1.0)) : _GLF_FUZZED(-6117.0912)))))))))) * abs(1.0)), float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED((-791.274 / (true ? -551.840 : -802.284))), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(-777.096)), bvec2(true, false))).x, min(injectionSwitch.x, injectionSwitch.x))), bool(true))) > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0), mix(_GLF_IDENTITY(float(_GLF_FUZZED(-3.6)), (_GLF_IDENTITY(float(_GLF_FUZZED(-3.6)), (true ? _GLF_IDENTITY(float(_GLF_FUZZED(-3.6)), float(_GLF_IDENTITY(mat3(float(_GLF_FUZZED(-3.6)), length(_GLF_IDENTITY(_GLF_IDENTITY(vec3(0.0, 0.0, 0.0), vec3(_GLF_IDENTITY(vec3(_GLF_IDENTITY(vec3(0.0, 0.0, 0.0), max(vec3(0.0, 0.0, 0.0), vec3(0.0, 0.0, 0.0)))), (vec3(_GLF_IDENTITY(vec3(0.0, 0.0, 0.0), max(vec3(0.0, 0.0, 0.0), vec3(0.0, 0.0, 0.0))))) * mat3(1.0)))), mat3(1.0) * (_GLF_IDENTITY(vec3(0.0, 0.0, 0.0), vec3(_GLF_IDENTITY(vec3(_GLF_IDENTITY(vec3(0.0, 0.0, 0.0), max(vec3(0.0, 0.0, 0.0), vec3(0.0, 0.0, 0.0)))), (vec3(_GLF_IDENTITY(vec3(0.0, 0.0, 0.0), max(vec3(0.0, 0.0, 0.0), vec3(0.0, 0.0, 0.0))))) * mat3(1.0))))))), 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(round(length(normalize(vec2(1.0, 1.0)))), mix(float(round(_GLF_IDENTITY(length(normalize(vec2(1.0, 1.0))), _GLF_IDENTITY(float(mat2x4(length(normalize(vec2(1.0, 1.0))), 1.0, exp(0.0), 1.0, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-3923.9132)), float(0.0), bool(true))), round(length(normalize(1.0))), 1.0, 0.0)), (_GLF_IDENTITY(float(mat2x4(length(normalize(vec2(1.0, 1.0))), 1.0, exp(0.0), 1.0, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-3923.9132)), float(0.0), bool(true))), round(length(normalize(1.0))), 1.0, 0.0)), clamp(float(mat2x4(length(normalize(vec2(1.0, 1.0))), 1.0, exp(0.0), 1.0, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-3923.9132)), float(0.0), bool(true))), round(length(normalize(1.0))), 1.0, 0.0)), float(mat2x4(length(normalize(vec2(1.0, 1.0))), 1.0, exp(0.0), 1.0, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-3923.9132)), float(0.0), bool(true))), round(length(normalize(1.0))), 1.0, 0.0)), float(mat2x4(length(normalize(vec2(1.0, 1.0))), 1.0, exp(0.0), 1.0, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-3923.9132)), float(0.0), bool(true))), round(length(normalize(1.0))), 1.0, 0.0))))) - 0.0)))), float(_GLF_FUZZED(749.551)), bool(false)))), mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0) + _GLF_IDENTITY((_GLF_IDENTITY(mat3(float(_GLF_FUZZED(-3.6)), _GLF_IDENTITY(length(_GLF_IDENTITY(vec3(0.0, 0.0, 0.0), vec3(_GLF_IDENTITY(vec3(_GLF_IDENTITY(vec3(0.0, 0.0, 0.0), max(vec3(0.0, 0.0, 0.0), vec3(0.0, 0.0, 0.0)))), (vec3(_GLF_IDENTITY(vec3(0.0, _GLF_IDENTITY(0.0, clamp(0.0, _GLF_IDENTITY(0.0, float(float(0.0))), 0.0)), 0.0), max(vec3(0.0, 0.0, 0.0), vec3(0.0, 0.0, 0.0))))) * mat3(1.0))))), max(_GLF_IDENTITY(length(_GLF_IDENTITY(vec3(0.0, 0.0, 0.0), vec3(_GLF_IDENTITY(vec3(_GLF_IDENTITY(vec3(0.0, 0.0, 0.0), max(vec3(0.0, 0.0, 0.0), vec3(0.0, 0.0, 0.0)))), (vec3(_GLF_IDENTITY(vec3(0.0, _GLF_IDENTITY(0.0, clamp(0.0, _GLF_IDENTITY(0.0, float(float(0.0))), 0.0)), 0.0), max(vec3(0.0, 0.0, 0.0), vec3(0.0, 0.0, 0.0))))) * mat3(1.0))))), max(length(_GLF_IDENTITY(vec3(0.0, 0.0, 0.0), vec3(_GLF_IDENTITY(vec3(_GLF_IDENTITY(vec3(0.0, 0.0, 0.0), max(vec3(0.0, 0.0, 0.0), vec3(0.0, 0.0, 0.0)))), (vec3(_GLF_IDENTITY(vec3(0.0, _GLF_IDENTITY(0.0, clamp(0.0, _GLF_IDENTITY(0.0, float(float(0.0))), 0.0)), 0.0), max(vec3(0.0, 0.0, 0.0), vec3(0.0, 0.0, 0.0))))) * mat3(1.0))))), length(_GLF_IDENTITY(vec3(0.0, 0.0, 0.0), vec3(_GLF_IDENTITY(vec3(_GLF_IDENTITY(vec3(0.0, 0.0, 0.0), max(vec3(0.0, 0.0, 0.0), vec3(0.0, 0.0, 0.0)))), (vec3(_GLF_IDENTITY(vec3(0.0, _GLF_IDENTITY(0.0, clamp(0.0, _GLF_IDENTITY(0.0, float(float(0.0))), 0.0)), 0.0), max(vec3(0.0, 0.0, 0.0), vec3(0.0, 0.0, 0.0))))) * mat3(1.0))))))), _GLF_IDENTITY(length(_GLF_IDENTITY(vec3(0.0, 0.0, 0.0), vec3(_GLF_IDENTITY(vec3(_GLF_IDENTITY(vec3(0.0, 0.0, 0.0), max(vec3(0.0, 0.0, 0.0), vec3(0.0, 0.0, 0.0)))), (vec3(_GLF_IDENTITY(vec3(0.0, _GLF_IDENTITY(0.0, clamp(0.0, _GLF_IDENTITY(0.0, float(float(0.0))), 0.0)), 0.0), max(vec3(0.0, 0.0, 0.0), vec3(0.0, 0.0, 0.0))))) * mat3(1.0))))), (length(_GLF_IDENTITY(vec3(0.0, 0.0, 0.0), vec3(_GLF_IDENTITY(vec3(_GLF_IDENTITY(vec3(0.0, 0.0, 0.0), max(vec3(0.0, 0.0, 0.0), vec3(0.0, 0.0, 0.0)))), (vec3(_GLF_IDENTITY(vec3(0.0, _GLF_IDENTITY(0.0, clamp(0.0, _GLF_IDENTITY(0.0, float(float(0.0))), 0.0)), 0.0), max(vec3(0.0, 0.0, 0.0), vec3(0.0, 0.0, 0.0))))) * mat3(1.0)))))) - determinant(mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0))))), 1.0, 0.0, 1.0, _GLF_IDENTITY(0.0, (true ? _GLF_IDENTITY(0.0, max(0.0, 0.0)) : _GLF_FUZZED(832.615))), 0.0, 1.0, _GLF_IDENTITY(round(length(normalize(vec2(1.0, 1.0)))), mix(float(round(length(normalize(vec2(1.0, 1.0))))), float(_GLF_FUZZED(749.551)), bool(false)))), transpose(transpose(mat3(float(_GLF_FUZZED(-3.6)), length(_GLF_IDENTITY(_GLF_IDENTITY(vec3(0.0, 0.0, 0.0), vec3(_GLF_IDENTITY(vec3(_GLF_IDENTITY(vec3(0.0, 0.0, 0.0), max(vec3(0.0, 0.0, 0.0), vec3(_GLF_IDENTITY(0.0, (0.0) / 1.0), 0.0, 0.0)))), (vec3(_GLF_IDENTITY(vec3(0.0, 0.0, 0.0), max(vec3(0.0, 0.0, 0.0), vec3(0.0, 0.0, 0.0))))) * mat3(1.0)))), _GLF_IDENTITY(vec3(1.0, 1.0, 1.0), _GLF_IDENTITY(vec3(mat4x2(vec3(1.0, 1.0, 1.0), 0.0, 1.0, 1.0, 1.0, 0.0)), _GLF_IDENTITY(mat3(1.0) * (vec3(mat4x2(vec3(1.0, 1.0, 1.0), 0.0, 1.0, 1.0, 1.0, 0.0))), clamp(mat3(1.0) * (vec3(mat4x2(vec3(1.0, 1.0, 1.0), 0.0, 1.0, 1.0, 1.0, 0.0))), mat3(1.0) * (vec3(mat4x2(vec3(1.0, 1.0, 1.0), 0.0, 1.0, 1.0, 1.0, 0.0))), mat3(1.0) * (vec3(mat4x2(vec3(1.0, 1.0, 1.0), 0.0, 1.0, 1.0, 1.0, 0.0))))))) * (_GLF_IDENTITY(vec3(0.0, 0.0, 0.0), vec3(_GLF_IDENTITY(vec3(_GLF_IDENTITY(vec3(0.0, _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(-877.138) : 0.0)), 0.0), max(_GLF_IDENTITY(vec3(0.0, 0.0, 0.0), mix(vec3(_GLF_FUZZED(-40.67), (_GLF_IDENTITY(vec3(0.0, 0.0, 0.0), (vec3(0.0, 0.0, 0.0)) / vec3(1.0, 1.0, 1.0)))[1], _GLF_FUZZED(-5.3)), vec3((vec3(0.0, 0.0, 0.0))[0], _GLF_FUZZED(-38.48), (vec3(0.0, 0.0, 0.0))[2]), bvec3(true, _GLF_IDENTITY(false, true && (false)), true))), vec3(0.0, 0.0, 0.0)))), (vec3(_GLF_IDENTITY(_GLF_IDENTITY(vec3(0.0, 0.0, 0.0), max(vec3(0.0, _GLF_IDENTITY(0.0, float(_GLF_IDENTITY(vec2(_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-7.6))), 0.0), max(vec2(_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-7.6))), 0.0), vec2(_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-7.6))), 0.0))))), 0.0), vec3(0.0, 0.0, 0.0))), mix(vec3((_GLF_IDENTITY(vec3(0.0, 0.0, 0.0), max(vec3(0.0, 0.0, 0.0), vec3(0.0, 0.0, 0.0))))[_GLF_IDENTITY(0, (0) | (0))], (_GLF_IDENTITY(vec3(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)))), 0.0, 0.0), max(vec3(0.0, 0.0, 0.0), vec3(0.0, 0.0, 0.0))))[1], (_GLF_IDENTITY(vec3(0.0, 0.0, 0.0), max(vec3(0.0, 0.0, 0.0), vec3(0.0, 0.0, 0.0))))[2]), vec3(_GLF_FUZZED(-471.208), _GLF_IDENTITY(_GLF_FUZZED(91.60), (_GLF_FUZZED(91.60)) / 1.0), _GLF_FUZZED(-2.5)), bvec3(false, false, false))))) * mat3(1.0))))))), 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(round(length(normalize(vec2(1.0, _GLF_IDENTITY(1.0, (true ? _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(6625.2856)), float(1.0), bool(true))) : _GLF_FUZZED(13.72))))))), mix(float(round(length(normalize(vec2(1.0, 1.0))))), float(_GLF_FUZZED(_GLF_IDENTITY(749.551, min(749.551, _GLF_IDENTITY(749.551, float(mat4x2(749.551, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0))))))), bool(false)))))))), _GLF_IDENTITY(mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0), mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0) + (mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))) + ((_GLF_IDENTITY(mat3(float(_GLF_FUZZED(-3.6)), _GLF_IDENTITY(length(_GLF_IDENTITY(vec3(0.0, 0.0, 0.0), vec3(_GLF_IDENTITY(vec3(_GLF_IDENTITY(vec3(0.0, 0.0, 0.0), max(vec3(0.0, 0.0, 0.0), vec3(0.0, 0.0, 0.0)))), (vec3(_GLF_IDENTITY(vec3(0.0, _GLF_IDENTITY(0.0, clamp(0.0, _GLF_IDENTITY(0.0, float(float(0.0))), 0.0)), 0.0), max(vec3(0.0, 0.0, 0.0), vec3(0.0, 0.0, 0.0))))) * mat3(1.0))))), max(_GLF_IDENTITY(length(_GLF_IDENTITY(vec3(0.0, 0.0, 0.0), vec3(_GLF_IDENTITY(vec3(_GLF_IDENTITY(vec3(0.0, 0.0, 0.0), max(vec3(0.0, 0.0, 0.0), vec3(0.0, 0.0, 0.0)))), (vec3(_GLF_IDENTITY(vec3(0.0, _GLF_IDENTITY(0.0, clamp(0.0, _GLF_IDENTITY(0.0, float(float(0.0))), 0.0)), 0.0), max(vec3(0.0, 0.0, 0.0), vec3(0.0, 0.0, 0.0))))) * mat3(1.0))))), max(length(_GLF_IDENTITY(vec3(0.0, 0.0, 0.0), vec3(_GLF_IDENTITY(vec3(_GLF_IDENTITY(vec3(0.0, 0.0, 0.0), max(vec3(0.0, 0.0, 0.0), vec3(0.0, 0.0, 0.0)))), (vec3(_GLF_IDENTITY(vec3(0.0, _GLF_IDENTITY(0.0, clamp(0.0, _GLF_IDENTITY(0.0, float(float(0.0))), 0.0)), 0.0), max(vec3(0.0, 0.0, 0.0), vec3(0.0, 0.0, 0.0))))) * mat3(1.0))))), length(_GLF_IDENTITY(vec3(0.0, 0.0, 0.0), vec3(_GLF_IDENTITY(vec3(_GLF_IDENTITY(vec3(0.0, 0.0, 0.0), max(vec3(0.0, 0.0, 0.0), vec3(0.0, 0.0, 0.0)))), (vec3(_GLF_IDENTITY(vec3(0.0, _GLF_IDENTITY(0.0, clamp(0.0, _GLF_IDENTITY(0.0, float(float(0.0))), 0.0)), 0.0), max(vec3(0.0, 0.0, 0.0), vec3(0.0, 0.0, 0.0))))) * mat3(1.0))))))), _GLF_IDENTITY(length(_GLF_IDENTITY(vec3(0.0, 0.0, 0.0), vec3(_GLF_IDENTITY(vec3(_GLF_IDENTITY(vec3(0.0, 0.0, 0.0), max(vec3(0.0, 0.0, 0.0), vec3(0.0, 0.0, 0.0)))), (vec3(_GLF_IDENTITY(vec3(0.0, _GLF_IDENTITY(0.0, clamp(0.0, _GLF_IDENTITY(0.0, float(float(0.0))), 0.0)), 0.0), max(vec3(0.0, 0.0, 0.0), vec3(0.0, 0.0, 0.0))))) * mat3(1.0))))), (length(_GLF_IDENTITY(vec3(0.0, 0.0, 0.0), vec3(_GLF_IDENTITY(vec3(_GLF_IDENTITY(vec3(0.0, 0.0, 0.0), max(vec3(0.0, 0.0, 0.0), vec3(0.0, 0.0, 0.0)))), (vec3(_GLF_IDENTITY(vec3(0.0, _GLF_IDENTITY(0.0, clamp(0.0, _GLF_IDENTITY(0.0, float(float(0.0))), 0.0)), 0.0), max(vec3(0.0, 0.0, 0.0), vec3(0.0, 0.0, 0.0))))) * mat3(1.0)))))) - determinant(mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0))))), 1.0, 0.0, 1.0, _GLF_IDENTITY(0.0, (true ? _GLF_IDENTITY(0.0, max(0.0, 0.0)) : _GLF_FUZZED(832.615))), 0.0, 1.0, _GLF_IDENTITY(round(length(normalize(vec2(1.0, 1.0)))), mix(float(round(length(normalize(vec2(1.0, 1.0))))), float(_GLF_FUZZED(749.551)), bool(false)))), transpose(transpose(mat3(float(_GLF_FUZZED(-3.6)), length(_GLF_IDENTITY(_GLF_IDENTITY(vec3(0.0, 0.0, 0.0), vec3(_GLF_IDENTITY(vec3(_GLF_IDENTITY(vec3(0.0, 0.0, 0.0), max(vec3(0.0, 0.0, 0.0), vec3(_GLF_IDENTITY(0.0, (0.0) / 1.0), 0.0, 0.0)))), (vec3(_GLF_IDENTITY(vec3(0.0, 0.0, 0.0), max(vec3(0.0, 0.0, 0.0), vec3(0.0, 0.0, 0.0))))) * mat3(1.0)))), _GLF_IDENTITY(vec3(1.0, 1.0, 1.0), _GLF_IDENTITY(vec3(mat4x2(vec3(1.0, 1.0, 1.0), 0.0, 1.0, 1.0, 1.0, 0.0)), _GLF_IDENTITY(mat3(1.0) * (vec3(mat4x2(vec3(1.0, 1.0, 1.0), 0.0, 1.0, 1.0, 1.0, 0.0))), clamp(mat3(1.0) * (vec3(mat4x2(vec3(1.0, 1.0, 1.0), 0.0, 1.0, 1.0, 1.0, 0.0))), mat3(1.0) * (vec3(mat4x2(vec3(1.0, 1.0, 1.0), 0.0, 1.0, 1.0, 1.0, 0.0))), mat3(1.0) * (vec3(mat4x2(vec3(1.0, 1.0, 1.0), 0.0, 1.0, 1.0, 1.0, 0.0))))))) * (_GLF_IDENTITY(vec3(0.0, 0.0, 0.0), vec3(_GLF_IDENTITY(vec3(_GLF_IDENTITY(vec3(0.0, _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(-877.138) : 0.0)), 0.0), max(_GLF_IDENTITY(vec3(0.0, 0.0, 0.0), mix(vec3(_GLF_FUZZED(-40.67), (_GLF_IDENTITY(vec3(0.0, 0.0, 0.0), (vec3(0.0, 0.0, 0.0)) / vec3(1.0, 1.0, 1.0)))[1], _GLF_FUZZED(-5.3)), vec3((vec3(0.0, 0.0, 0.0))[0], _GLF_FUZZED(-38.48), (vec3(0.0, 0.0, 0.0))[2]), bvec3(true, _GLF_IDENTITY(false, true && (false)), true))), vec3(0.0, 0.0, 0.0)))), (vec3(_GLF_IDENTITY(_GLF_IDENTITY(vec3(0.0, 0.0, 0.0), max(vec3(0.0, _GLF_IDENTITY(0.0, float(_GLF_IDENTITY(vec2(_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-7.6))), 0.0), max(vec2(_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-7.6))), 0.0), vec2(_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-7.6))), 0.0))))), 0.0), vec3(0.0, 0.0, 0.0))), mix(vec3((_GLF_IDENTITY(vec3(0.0, 0.0, 0.0), max(vec3(0.0, 0.0, 0.0), vec3(0.0, 0.0, 0.0))))[_GLF_IDENTITY(0, (0) | (0))], (_GLF_IDENTITY(vec3(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)))), 0.0, 0.0), max(vec3(0.0, 0.0, 0.0), vec3(0.0, 0.0, 0.0))))[1], (_GLF_IDENTITY(vec3(0.0, 0.0, 0.0), max(vec3(0.0, 0.0, 0.0), vec3(0.0, 0.0, 0.0))))[2]), vec3(_GLF_FUZZED(-471.208), _GLF_IDENTITY(_GLF_FUZZED(91.60), (_GLF_FUZZED(91.60)) / 1.0), _GLF_FUZZED(-2.5)), bvec3(false, false, false))))) * mat3(1.0))))))), 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(round(length(normalize(vec2(1.0, _GLF_IDENTITY(1.0, (true ? _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(6625.2856)), float(1.0), bool(true))) : _GLF_FUZZED(13.72))))))), mix(float(round(length(normalize(vec2(1.0, 1.0))))), float(_GLF_FUZZED(_GLF_IDENTITY(749.551, min(749.551, _GLF_IDENTITY(749.551, float(mat4x2(749.551, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0))))))), bool(false))))))))))))) : _GLF_IDENTITY(_GLF_FUZZED(5.9), (_GLF_FUZZED(5.9)) / _GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, max(1.0, 1.0)), _GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED((mat3x2(-5.5, 87.52, -61.56, 15.59, 6.3, 0.4) , 2619.4367)))), _GLF_IDENTITY(1.0, _GLF_IDENTITY(float(float(1.0)), (true ? float(float(1.0)) : _GLF_FUZZED(-6117.0912)))))))))) * abs(1.0)), float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED((-791.274 / (true ? -551.840 : -802.284))), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(-777.096)), bvec2(true, false))).x, min(injectionSwitch.x, injectionSwitch.x))), bool(true))) > injectionSwitch.y))))))
    {
     for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > (((0 & -20836) << _GLF_IDENTITY(int(5), _GLF_IDENTITY(int(5), 0 ^ (int(_GLF_IDENTITY(5, (5) << _GLF_IDENTITY(0, clamp(0, 0, 0)))))))) & 10330)); _injected_loop_counter --)
      {
       barrier();
       if(_GLF_DEAD(false))
        break;
      }
    }
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(mat3(_GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(772.829))), 1.0, 0.0, 1.0, cos(0.0), 0.0, 1.0, 1.0, 0.0)), float(_GLF_IDENTITY(mat3x2(float(mat3(_GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(772.829))), 1.0, 0.0, 1.0, cos(0.0), _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(-82.81) : 0.0)), 1.0, 1.0, 0.0)), 1.0, 1.0, 0.0, 0.0, 1.0), transpose(transpose(mat3x2(float(mat3(_GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(772.829))), 1.0, 0.0, 1.0, cos(0.0), 0.0, 1.0, 1.0, 0.0)), 1.0, 1.0, _GLF_IDENTITY(_GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, float(_GLF_IDENTITY(vec4(0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0), mat4(1.0) * (vec4(0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0))))), _GLF_IDENTITY(0.0, float(vec3(0.0, 0.0, 1.0))), _GLF_IDENTITY(0.0, max(0.0, 0.0)))), float(mat3x2(_GLF_IDENTITY(0.0, min(0.0, 0.0)), abs(0.0), abs(1.0), _GLF_IDENTITY(1.0, min(1.0, 1.0)), 1.0, 1.0))), 0.0, 1.0)))))))))))
  barrier();
 if(_GLF_WRAPPED_IF_TRUE(true))
  {
   if(_GLF_DEAD(false))
    return;
   do
    {
     for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > int(_GLF_ZERO(0.0, injectionSwitch.x))); _injected_loop_counter --)
      {
       do
        {
         if(_GLF_DEAD(false))
          {
           do
            {
             if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec2(_GLF_DEAD(false), true)), ! (! (bool(_GLF_IDENTITY(bvec2(_GLF_DEAD(false), _GLF_IDENTITY(true, false || (true))), _GLF_IDENTITY(_GLF_IDENTITY(bvec2(bvec3(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), false, true, true))), true), _GLF_IDENTITY(bvec2(bvec3(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true), true), false)), bvec2(bvec2(bvec2(bvec3(bvec2(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))), true), false)))))), true)), _GLF_IDENTITY(bvec2(bvec4(bvec2(bvec3(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), false, true, true))), true), _GLF_IDENTITY(bvec2(bvec3(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true), true), false)), bvec2(bvec2(bvec2(bvec3(bvec2(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))), true), false)))))), true)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)), bvec2(bvec4(_GLF_IDENTITY(bvec2(bvec4(bvec2(bvec3(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), false, true, true))), true), _GLF_IDENTITY(bvec2(bvec3(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true), true), false)), bvec2(bvec2(bvec2(bvec3(bvec2(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))), true), false)))))), true)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)), bvec2(bvec4(bvec2(bvec4(bvec2(bvec3(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), false, true, true))), true), _GLF_IDENTITY(bvec2(bvec3(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true), true), false)), bvec2(bvec2(bvec2(bvec3(bvec2(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))), true), false)))))), true)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)), true, false))), true, false)))), _GLF_IDENTITY(bvec2(bvec2(bvec2(bvec3(_GLF_IDENTITY(bvec2(_GLF_DEAD(false), true), _GLF_IDENTITY(bvec2(_GLF_IDENTITY(bvec3(bvec2(_GLF_DEAD(false), true), _GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec3(false, false, true)))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bvec3(bvec3(bvec3(bvec2(_GLF_DEAD(false), true), _GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec3(false, false, true)))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), bvec2(bvec2(bvec2(bvec3(bvec2(_GLF_DEAD(false), true), false)))))), true)))), bvec2(bvec4(bvec2(bvec2(bvec2(bvec3(_GLF_IDENTITY(bvec2(_GLF_DEAD(false), true), _GLF_IDENTITY(bvec2(bvec3(bvec2(_GLF_DEAD(false), true), false)), bvec2(bvec2(bvec2(bvec3(bvec2(_GLF_DEAD(false), true), _GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, ! (! (false))))))))))), true)))), true, false)))))))))))
              {
               if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
                continue;
               do
                {
                 if(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_WRAPPED_IF_TRUE(true))))
                  {
                   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(8446.3662)))), ! (! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(8446.3662))))))))))
                    barrier();
                   if(_GLF_DEAD(false))
                    return;
                   return;
                   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec4(false, false, false, true))), (injectionSwitch.x > injectionSwitch.y))))
                    barrier();
                  }
                 else
                  {
                   if(_GLF_DEAD(false))
                    barrier();
                  }
                }
               while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
              }
            }
           while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x > injectionSwitch.y))));
           do
            {
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              continue;
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              break;
             do
              {
               return;
              }
             while(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(false), ! (! (_GLF_WRAPPED_LOOP(false)))));
             if(_GLF_DEAD(false))
              continue;
             if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
              continue;
             if(_GLF_DEAD(false))
              {
               if(_GLF_DEAD(false))
                return;
               break;
              }
             if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))
              {
               for(int _injected_loop_counter = (int(_GLF_ONE(1.0, injectionSwitch.y)) ^ (0 | 0)); _GLF_WRAPPED_LOOP(_injected_loop_counter != (0 | 0)); _injected_loop_counter --)
                {
                 if(_GLF_WRAPPED_IF_TRUE(true))
                  {
                   return;
                  }
                 else
                  {
                  }
                }
              }
             for(int _injected_loop_counter = _GLF_IDENTITY(_GLF_IDENTITY(int(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), (_GLF_ZERO(0.0, injectionSwitch.x)) / 1.0), (true ? _GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), min(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))) : _GLF_FUZZED(_GLF_IDENTITY(5671.4324, mix(float(_GLF_FUZZED(-356.497)), float(5671.4324), bool(true))))))), _GLF_IDENTITY(0 | (int(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), (true ? _GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), min(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))) : _GLF_FUZZED(5671.4324))))), min(0 | (int(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), (true ? _GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), min(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))) : _GLF_FUZZED(5671.4324))))), 0 | (int(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), (true ? _GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), min(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))) : _GLF_FUZZED(5671.4324)))))))), 0 + (_GLF_IDENTITY(int(_GLF_ZERO(0.0, injectionSwitch.x)), clamp(int(_GLF_ZERO(0.0, injectionSwitch.x)), _GLF_IDENTITY(int(_GLF_ZERO(0.0, injectionSwitch.x)), (int(_GLF_ZERO(0.0, injectionSwitch.x))) | (int(_GLF_ZERO(0.0, injectionSwitch.x)))), int(_GLF_ZERO(0.0, injectionSwitch.x)))))); _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
              {
               if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), bool(bvec3(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(_GLF_IDENTITY(bvec2(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false), _GLF_IDENTITY(bvec2(bvec4(bvec2(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false), false, true)), bvec2(bvec2(bvec2(bvec4(bvec2(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false), false, true)))))))), false, false))))
                return;
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, 0.0 + _GLF_IDENTITY((injectionSwitch.y), _GLF_IDENTITY(clamp(_GLF_IDENTITY((injectionSwitch.y), mix(float((injectionSwitch.y)), float(_GLF_FUZZED(-9.6)), bool(false))), (injectionSwitch.y), _GLF_IDENTITY((injectionSwitch.y), max((injectionSwitch.y), (injectionSwitch.y)))), _GLF_IDENTITY(float(vec2(_GLF_IDENTITY(clamp(_GLF_IDENTITY((injectionSwitch.y), mix(float((injectionSwitch.y)), float(_GLF_FUZZED(-9.6)), bool(false))), (injectionSwitch.y), _GLF_IDENTITY((injectionSwitch.y), max((injectionSwitch.y), (injectionSwitch.y)))), clamp(_GLF_IDENTITY(clamp(_GLF_IDENTITY((injectionSwitch.y), mix(float((injectionSwitch.y)), float(_GLF_FUZZED(-9.6)), bool(false))), (injectionSwitch.y), _GLF_IDENTITY((injectionSwitch.y), max((injectionSwitch.y), (injectionSwitch.y)))), mix(float(clamp(_GLF_IDENTITY((injectionSwitch.y), mix(float((injectionSwitch.y)), float(_GLF_FUZZED(-9.6)), bool(false))), (injectionSwitch.y), _GLF_IDENTITY((injectionSwitch.y), max((injectionSwitch.y), (injectionSwitch.y))))), float(_GLF_FUZZED(782.858)), bool(false))), _GLF_IDENTITY(clamp(_GLF_IDENTITY((injectionSwitch.y), mix(float((injectionSwitch.y)), float(_GLF_FUZZED(-9.6)), bool(false))), (injectionSwitch.y), _GLF_IDENTITY((injectionSwitch.y), max((injectionSwitch.y), (injectionSwitch.y)))), clamp(clamp(_GLF_IDENTITY((injectionSwitch.y), mix(float((injectionSwitch.y)), float(_GLF_FUZZED(-9.6)), bool(false))), (injectionSwitch.y), _GLF_IDENTITY((injectionSwitch.y), max((injectionSwitch.y), (injectionSwitch.y)))), clamp(_GLF_IDENTITY((injectionSwitch.y), mix(float((injectionSwitch.y)), float(_GLF_FUZZED(-9.6)), bool(false))), (injectionSwitch.y), _GLF_IDENTITY((injectionSwitch.y), max((injectionSwitch.y), (injectionSwitch.y)))), clamp(_GLF_IDENTITY((injectionSwitch.y), mix(float((injectionSwitch.y)), float(_GLF_FUZZED(-9.6)), bool(false))), (injectionSwitch.y), _GLF_IDENTITY((injectionSwitch.y), max((injectionSwitch.y), (injectionSwitch.y)))))), clamp(_GLF_IDENTITY((injectionSwitch.y), mix(float((injectionSwitch.y)), float(_GLF_FUZZED(-9.6)), bool(false))), (injectionSwitch.y), _GLF_IDENTITY((injectionSwitch.y), max((injectionSwitch.y), (injectionSwitch.y)))))), 0.0)), max(float(vec2(_GLF_IDENTITY(clamp(_GLF_IDENTITY((injectionSwitch.y), mix(float((injectionSwitch.y)), float(_GLF_FUZZED(-9.6)), bool(false))), (injectionSwitch.y), _GLF_IDENTITY((injectionSwitch.y), max((injectionSwitch.y), (injectionSwitch.y)))), clamp(_GLF_IDENTITY(clamp(_GLF_IDENTITY((injectionSwitch.y), mix(float((injectionSwitch.y)), float(_GLF_FUZZED(-9.6)), bool(false))), (injectionSwitch.y), _GLF_IDENTITY((injectionSwitch.y), max((injectionSwitch.y), (injectionSwitch.y)))), mix(float(clamp(_GLF_IDENTITY((injectionSwitch.y), mix(float((injectionSwitch.y)), float(_GLF_FUZZED(-9.6)), bool(false))), (injectionSwitch.y), _GLF_IDENTITY((injectionSwitch.y), max((injectionSwitch.y), (injectionSwitch.y))))), float(_GLF_FUZZED(782.858)), bool(false))), _GLF_IDENTITY(clamp(_GLF_IDENTITY((injectionSwitch.y), mix(float((injectionSwitch.y)), float(_GLF_FUZZED(-9.6)), bool(false))), (injectionSwitch.y), _GLF_IDENTITY((injectionSwitch.y), max((injectionSwitch.y), (injectionSwitch.y)))), clamp(clamp(_GLF_IDENTITY((injectionSwitch.y), mix(float((injectionSwitch.y)), float(_GLF_FUZZED(-9.6)), bool(false))), (injectionSwitch.y), _GLF_IDENTITY((injectionSwitch.y), max((injectionSwitch.y), (injectionSwitch.y)))), clamp(_GLF_IDENTITY((injectionSwitch.y), mix(float((injectionSwitch.y)), float(_GLF_FUZZED(-9.6)), bool(false))), (injectionSwitch.y), _GLF_IDENTITY((injectionSwitch.y), max((injectionSwitch.y), (injectionSwitch.y)))), clamp(_GLF_IDENTITY((injectionSwitch.y), mix(float((injectionSwitch.y)), float(_GLF_FUZZED(-9.6)), bool(false))), (injectionSwitch.y), _GLF_IDENTITY((injectionSwitch.y), max((injectionSwitch.y), (injectionSwitch.y)))))), clamp(_GLF_IDENTITY((injectionSwitch.y), mix(float((injectionSwitch.y)), float(_GLF_FUZZED(-9.6)), bool(false))), (injectionSwitch.y), _GLF_IDENTITY((injectionSwitch.y), max((injectionSwitch.y), (injectionSwitch.y)))))), 0.0)), float(vec2(_GLF_IDENTITY(clamp(_GLF_IDENTITY((injectionSwitch.y), mix(float((injectionSwitch.y)), float(_GLF_FUZZED(-9.6)), bool(false))), (injectionSwitch.y), _GLF_IDENTITY((injectionSwitch.y), max((injectionSwitch.y), (injectionSwitch.y)))), clamp(_GLF_IDENTITY(clamp(_GLF_IDENTITY((injectionSwitch.y), mix(float((injectionSwitch.y)), float(_GLF_FUZZED(-9.6)), bool(false))), (injectionSwitch.y), _GLF_IDENTITY((injectionSwitch.y), max((injectionSwitch.y), (injectionSwitch.y)))), mix(float(clamp(_GLF_IDENTITY((injectionSwitch.y), mix(float((injectionSwitch.y)), float(_GLF_FUZZED(-9.6)), bool(false))), (injectionSwitch.y), _GLF_IDENTITY((injectionSwitch.y), max((injectionSwitch.y), (injectionSwitch.y))))), float(_GLF_FUZZED(782.858)), bool(false))), _GLF_IDENTITY(clamp(_GLF_IDENTITY((injectionSwitch.y), mix(float((injectionSwitch.y)), float(_GLF_FUZZED(-9.6)), bool(false))), (injectionSwitch.y), _GLF_IDENTITY((injectionSwitch.y), max((injectionSwitch.y), (injectionSwitch.y)))), clamp(clamp(_GLF_IDENTITY((injectionSwitch.y), mix(float((injectionSwitch.y)), float(_GLF_FUZZED(-9.6)), bool(false))), (injectionSwitch.y), _GLF_IDENTITY((injectionSwitch.y), max((injectionSwitch.y), (injectionSwitch.y)))), clamp(_GLF_IDENTITY((injectionSwitch.y), mix(float((injectionSwitch.y)), float(_GLF_FUZZED(-9.6)), bool(false))), (injectionSwitch.y), _GLF_IDENTITY((injectionSwitch.y), max((injectionSwitch.y), (injectionSwitch.y)))), clamp(_GLF_IDENTITY((injectionSwitch.y), mix(float((injectionSwitch.y)), float(_GLF_FUZZED(-9.6)), bool(false))), (injectionSwitch.y), _GLF_IDENTITY((injectionSwitch.y), max((injectionSwitch.y), (injectionSwitch.y)))))), clamp(_GLF_IDENTITY((injectionSwitch.y), mix(float((injectionSwitch.y)), float(_GLF_FUZZED(-9.6)), bool(false))), (injectionSwitch.y), _GLF_IDENTITY((injectionSwitch.y), max((injectionSwitch.y), (injectionSwitch.y)))))), 0.0)))))))))))
                barrier();
              }
             if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), true, false, true))))
              continue;
            }
           while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > injectionSwitch.y))));
          }
         if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec3(injectionSwitch.x > injectionSwitch.y, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))), ! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec3(injectionSwitch.x > injectionSwitch.y, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))))))))))
          {
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(false))
              break;
             barrier();
            }
           break;
          }
        }
       while(_GLF_WRAPPED_LOOP(false));
      }
    }
   while(_GLF_WRAPPED_LOOP(false));
  }
 else
  {
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))
    return;
   return;
  }
 uint virtual_gid = workgroup_base + _GLF_IDENTITY(subgroup_base, _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec2(subgroup_base, 1u), ~ (~ (uvec2(subgroup_base, 1u))))), max(uint(_GLF_IDENTITY(uvec2(subgroup_base, 1u), ~ (~ (uvec2(subgroup_base, 1u))))), uint(_GLF_IDENTITY(uvec2(subgroup_base, 1u), ~ (~ _GLF_IDENTITY((uvec2(subgroup_base, 1u)), (false ? _GLF_FUZZED(uvec2(193364u, 152098u)) : (uvec2(subgroup_base, 1u)))))))))) + subgroup_local_id;
 uint next_virtual_gid = workgroup_base + subgroup_base + ((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, max(subgroup_local_id, _GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, clamp(subgroup_local_id, subgroup_local_id, subgroup_local_id))) * 1u))) + 1, clamp(_GLF_IDENTITY(subgroup_local_id, max(_GLF_IDENTITY(subgroup_local_id, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(subgroup_size) : subgroup_local_id)), _GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, clamp(subgroup_local_id, subgroup_local_id, subgroup_local_id))) * 1u))) + 1, _GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, max(subgroup_local_id, _GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, clamp(subgroup_local_id, subgroup_local_id, subgroup_local_id))), max((_GLF_IDENTITY(subgroup_local_id, clamp(subgroup_local_id, subgroup_local_id, subgroup_local_id))), (_GLF_IDENTITY(subgroup_local_id, clamp(subgroup_local_id, subgroup_local_id, subgroup_local_id))))) * 1u))), max(_GLF_IDENTITY(subgroup_local_id, max(subgroup_local_id, _GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, clamp(subgroup_local_id, subgroup_local_id, subgroup_local_id)), min(_GLF_IDENTITY(subgroup_local_id, clamp(subgroup_local_id, subgroup_local_id, subgroup_local_id)), _GLF_IDENTITY(subgroup_local_id, clamp(subgroup_local_id, subgroup_local_id, subgroup_local_id)))), ~ (~ (_GLF_IDENTITY(subgroup_local_id, clamp(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) << 0u), subgroup_local_id, subgroup_local_id)))))) * 1u))), _GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, max(subgroup_local_id, _GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, uint(uvec3(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) ^ 0u), 0u, (0u << _GLF_IDENTITY(uint(4u), uint(4u)))))), clamp(subgroup_local_id, subgroup_local_id, subgroup_local_id))) * 1u, 1u * ((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, uint(uvec3(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) ^ 0u), 0u, (0u << _GLF_IDENTITY(uint(4u), uint(4u)))))), clamp(subgroup_local_id, subgroup_local_id, subgroup_local_id))) * 1u))))), ~ (~ (_GLF_IDENTITY(subgroup_local_id, max(subgroup_local_id, _GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, clamp(subgroup_local_id, subgroup_local_id, subgroup_local_id))) * 1u)))))))) + 1, _GLF_IDENTITY(subgroup_local_id, max(subgroup_local_id, _GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, clamp(subgroup_local_id, subgroup_local_id, subgroup_local_id))) * 1u))) + 1))) % subgroup_size);
 if(_GLF_DEAD(false))
  return;
 if(_GLF_WRAPPED_IF_FALSE(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 else
  {
   if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
    {
     atomicStore(buf[virtual_gid], uint(_GLF_IDENTITY(1, clamp(1, 1, _GLF_IDENTITY(1, _GLF_IDENTITY(clamp(1, 1, 1), (clamp(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, max(1, 1))) / 1), 1, 1)) / 1))))), _GLF_IDENTITY(_GLF_IDENTITY(4, clamp(_GLF_IDENTITY(4, ~ _GLF_IDENTITY((~ (4)), ((~ _GLF_IDENTITY((4), (0 << _GLF_IDENTITY(int(8), int(8))) | ((4))))) >> int(_GLF_ZERO(0.0, injectionSwitch.x)))), 4, 4)), _GLF_IDENTITY(int(int(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(4, (_GLF_IDENTITY(4, (4) | 0)) - 0), _GLF_IDENTITY(max(_GLF_IDENTITY(4, (_GLF_IDENTITY(4, (4) | 0)) - 0), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(4, (false ? _GLF_FUZZED(-7071) : _GLF_IDENTITY(4, (true ? 4 : _GLF_FUZZED(77442))))), (_GLF_IDENTITY(_GLF_IDENTITY(4, (false ? _GLF_FUZZED(87698) : 4)), (4) | 0)) - 0), clamp(_GLF_IDENTITY(4, (_GLF_IDENTITY(4, (4) | 0)) - 0), _GLF_IDENTITY(4, (_GLF_IDENTITY(4, (4) | 0)) - 0), _GLF_IDENTITY(4, _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(4, _GLF_IDENTITY((4), max((4), (4))) | 0)), 0 ^ (_GLF_IDENTITY((_GLF_IDENTITY(4, _GLF_IDENTITY((4), max((4), (4))) | 0)), 0 | (_GLF_IDENTITY((_GLF_IDENTITY(4, _GLF_IDENTITY((4), max((4), (4))) | 0)), clamp((_GLF_IDENTITY(4, _GLF_IDENTITY((4), max((4), (4))) | 0)), (_GLF_IDENTITY(4, _GLF_IDENTITY((4), max((4), (4))) | 0)), (_GLF_IDENTITY(4, _GLF_IDENTITY((4), max((4), (4))) | 0)))))))), ((_GLF_IDENTITY(4, _GLF_IDENTITY((4), max((4), (4))) | 0))) / int(_GLF_ONE(1.0, injectionSwitch.y))) - 0)))), (_GLF_IDENTITY(max(_GLF_IDENTITY(4, (_GLF_IDENTITY(_GLF_IDENTITY(4, (4) - 0), _GLF_IDENTITY((4), (_GLF_IDENTITY((4), ((4)) >> 0)) >> 0) | 0)) - 0), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(4, (_GLF_IDENTITY(4, (4) | 0)) - 0), ~ (~ (_GLF_IDENTITY(4, (_GLF_IDENTITY(4, (4) | 0)) - 0)))), clamp(_GLF_IDENTITY(4, (_GLF_IDENTITY(_GLF_IDENTITY(4, (4) | 0), (_GLF_IDENTITY(_GLF_IDENTITY(4, (4) | 0), max(_GLF_IDENTITY(4, (4) | 0), _GLF_IDENTITY(4, (4) | 0)))) / int(_GLF_ONE(1.0, injectionSwitch.y)))) - 0), _GLF_IDENTITY(4, (_GLF_IDENTITY(4, (4) | 0)) - 0), _GLF_IDENTITY(4, _GLF_IDENTITY((_GLF_IDENTITY(4, _GLF_IDENTITY((4), max((4), (4))) | 0)), ((_GLF_IDENTITY(4, _GLF_IDENTITY((4), max((4), (4))) | 0))) / int(_GLF_ONE(1.0, injectionSwitch.y))) - 0)))), (max(_GLF_IDENTITY(4, (_GLF_IDENTITY(4, (4) | 0)) - 0), _GLF_IDENTITY(_GLF_IDENTITY(4, _GLF_IDENTITY((_GLF_IDENTITY(4, (4) | 0)), (false ? _GLF_FUZZED(37521) : (_GLF_IDENTITY(4, (4) | 0)))) - 0), clamp(_GLF_IDENTITY(4, (_GLF_IDENTITY(4, (4) | 0)) - 0), _GLF_IDENTITY(4, (_GLF_IDENTITY(4, _GLF_IDENTITY((4) | 0, _GLF_IDENTITY(int(int((4) | 0)), max(int(int((4) | 0)), int(int((4) | 0))))))) - 0), _GLF_IDENTITY(4, _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(4, _GLF_IDENTITY((4), max((4), (4))) | 0)), ((_GLF_IDENTITY(4, _GLF_IDENTITY((4), max((4), (4))) | 0))) / int(_GLF_ONE(1.0, injectionSwitch.y))) - 0, (false ? _GLF_FUZZED(-61684) : _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(4, _GLF_IDENTITY((4), max((4), (4))) | 0)), ((_GLF_IDENTITY(4, _GLF_IDENTITY((4), max((4), (4))) | 0))) / int(_GLF_ONE(1.0, injectionSwitch.y))) - 0, clamp(_GLF_IDENTITY((_GLF_IDENTITY(4, _GLF_IDENTITY((4), max((4), (4))) | 0)), ((_GLF_IDENTITY(4, _GLF_IDENTITY((4), max((4), (4))) | 0))) / int(_GLF_ONE(1.0, injectionSwitch.y))) - 0, _GLF_IDENTITY((_GLF_IDENTITY(4, _GLF_IDENTITY((4), max((4), (4))) | 0)), ((_GLF_IDENTITY(4, _GLF_IDENTITY((4), max((4), (4))) | 0))) / int(_GLF_ONE(1.0, injectionSwitch.y))) - 0, _GLF_IDENTITY((_GLF_IDENTITY(4, _GLF_IDENTITY((4), max((4), (4))) | 0)), ((_GLF_IDENTITY(4, _GLF_IDENTITY((4), max((4), (4))) | 0))) / int(_GLF_ONE(1.0, injectionSwitch.y))) - 0))))))))) + 0)) ^ 0)), min(4, _GLF_IDENTITY(_GLF_IDENTITY(4, clamp(_GLF_IDENTITY(4, int(ivec3(4, 1, int(_GLF_ONE(1.0, injectionSwitch.y))))), 4, _GLF_IDENTITY(4, (4) >> 0))), min(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(4, (4) << 0), _GLF_IDENTITY((4) ^ (0 << _GLF_IDENTITY(int(6), int(6))), ((4) ^ (0 << _GLF_IDENTITY(int(6), int(6)))) | (0 >> _GLF_IDENTITY(int(6), int(6))))), _GLF_IDENTITY((4) | (4), (_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(false, ! (! (false))) ? _GLF_FUZZED(acosh(-896.001)) : injectionSwitch.x)) < injectionSwitch.y)) ? (4) | (4) : _GLF_FUZZED(-42620)))), 4)))))), 0 + (int(int(_GLF_IDENTITY(_GLF_IDENTITY(4, (_GLF_IDENTITY(4, (4) | 0)) - _GLF_IDENTITY(0, 1 * (0))), min(4, _GLF_IDENTITY(4, _GLF_IDENTITY(min(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(4, (_GLF_IDENTITY(4, max(4, 4))) << 0), (4) ^ (0 << _GLF_IDENTITY(int(6), int(6)))), (4) | _GLF_IDENTITY((4), ((4)) ^ 0)), 4), (false ? _GLF_FUZZED(-68414) : _GLF_IDENTITY(min(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(4, (4) << _GLF_IDENTITY(0, ~ (~ _GLF_IDENTITY((_GLF_IDENTITY(0, (0) | (0))), clamp((_GLF_IDENTITY(0, (0) | (0))), _GLF_IDENTITY((_GLF_IDENTITY(0, (0) | (0))), clamp((_GLF_IDENTITY(0, (0) | (0))), (_GLF_IDENTITY(0, (0) | (0))), (_GLF_IDENTITY(0, (0) | (0))))), _GLF_IDENTITY((_GLF_IDENTITY(0, (0) | (0))), min((_GLF_IDENTITY(0, (0) | (0))), (_GLF_IDENTITY(0, (0) | (0)))))))))), (4) ^ (_GLF_IDENTITY(0, (_GLF_IDENTITY(0, int(int(0)))) | (_GLF_IDENTITY(0, ~ (~ (0))))) << _GLF_IDENTITY(int(6), int(6)))), (4) | (4)), 4), (min(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(4, (4) << 0), (_GLF_IDENTITY(4, (_GLF_IDENTITY(4, (4) | (4))) >> (-98420 & (_GLF_IDENTITY(0, clamp(_GLF_IDENTITY(0, (0) | (_GLF_IDENTITY(0, (0) * 1))), 0, _GLF_IDENTITY(0, 0 ^ (0)))) >> _GLF_IDENTITY(int(6), int(6)))))) ^ _GLF_IDENTITY((0 << _GLF_IDENTITY(int(6), int(6))), 0 | ((0 << _GLF_IDENTITY(int(6), int(6)))))), (4) | (4)), 4)) | (min(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(4, (4) << 0), (4) ^ (0 << _GLF_IDENTITY(int(6), int(6)))), _GLF_IDENTITY((4), clamp((4), (4), _GLF_IDENTITY((4), clamp((4), _GLF_IDENTITY((4), (_GLF_IDENTITY((4), ((4)) | ((4)))) | ((4))), (4))))) | (4)), 4))))))))))))), 64, 4);
    }
   else
    {
    }
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   do
    {
     return;
    }
   while(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(false), bool(bool(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(false), (_GLF_WRAPPED_LOOP(false)) || false)))));
  }
 for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < int(_GLF_ONE(1.0, injectionSwitch.y))); _injected_loop_counter ++)
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        break;
       if(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), (_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), bool(bvec3(_GLF_WRAPPED_IF_TRUE(true), false, true)))) || false))
        {
         if(_GLF_DEAD(false))
          return;
         return;
        }
       else
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
        }
      }
     return;
    }
  }
 if(_GLF_WRAPPED_IF_TRUE(true))
  {
   do
    {
     if(_GLF_DEAD(false))
      return;
    }
   while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, ! (! (false)))))));
   do
    {
     if((subgroup_local_id % 2) == 0)
      {
       if(_GLF_DEAD(false))
        continue;
       if(_GLF_WRAPPED_IF_FALSE(false))
        {
         if(_GLF_DEAD(false))
          break;
        }
       else
        {
         do
          {
           if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(_GLF_IDENTITY(true, (_GLF_IDENTITY(true, _GLF_IDENTITY(! (! (_GLF_IDENTITY(true, true && (true)))), _GLF_IDENTITY(bool(bvec4(! (! (_GLF_IDENTITY(true, true && (true)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, true)), bool(bvec2(bool(bvec4(! (! (_GLF_IDENTITY(true, true && (true)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, true)), true)))))) && true), (injectionSwitch.x < injectionSwitch.y))))
            {
             if(_GLF_WRAPPED_IF_TRUE(true))
              {
               if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || false))
                {
                 for(int _injected_loop_counter = int(_GLF_ONE(1.0, injectionSwitch.y)); _GLF_WRAPPED_LOOP(_injected_loop_counter > (0 << _GLF_IDENTITY(int(5), int(5)))); _injected_loop_counter --)
                  {
                   barrier();
                  }
                }
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                return;
              }
             else
              {
              }
            }
           else
            {
             if(_GLF_DEAD(false))
              continue;
            }
          }
         while(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(false), (_GLF_WRAPPED_LOOP(false)) && true));
        }
       if(_GLF_WRAPPED_IF_TRUE(true))
        {
         if(_GLF_DEAD(false))
          return;
        }
       else
        {
        }
       if(_GLF_WRAPPED_IF_TRUE(true))
        {
         if(_GLF_WRAPPED_IF_FALSE(false))
          {
          }
         else
          {
           if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
            {
             if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              {
               if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(false, false || (false)))), (_GLF_IDENTITY(false, (false) || false)) && true)))
                {
                 do
                  {
                   if(_GLF_DEAD(false))
                    continue;
                   barrier();
                  }
                 while(_GLF_WRAPPED_LOOP(false));
                 if(_GLF_DEAD(false))
                  continue;
                }
              }
             else
              {
               if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).x > injectionSwitch.y))))
                barrier();
               barrier();
               if(_GLF_DEAD(false))
                continue;
               if(_GLF_DEAD(false))
                {
                 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                  {
                   for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != ((1 << _GLF_IDENTITY(int(0), int(0))) >> _GLF_IDENTITY(int(0), _GLF_IDENTITY(int(0), (int(0)) | _GLF_IDENTITY((int(0)), ((int(0))) | ((int(0)))))))); _injected_loop_counter ++)
                    {
                     barrier();
                     if(_GLF_DEAD(false))
                      barrier();
                     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                      return;
                    }
                   if(_GLF_DEAD(false))
                    break;
                  }
                 for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter, _GLF_IDENTITY(int(ivec2(_injected_loop_counter, 0)), ~ (_GLF_IDENTITY(~ (int(ivec2(_injected_loop_counter, 0))), (~ (int(ivec2(_injected_loop_counter, 0)))) - 0)))) != 0); _injected_loop_counter --)
                  {
                   if(_GLF_WRAPPED_IF_FALSE(false))
                    {
                     if(_GLF_DEAD(false))
                      barrier();
                    }
                   else
                    {
                     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false)), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-3044.6749)), vec2(_GLF_FUZZED(-9.9), (injectionSwitch)[1]), bvec2(false, _GLF_IDENTITY(true, (true) && true)))).x, _GLF_IDENTITY(clamp(_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, float(vec4(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x, 0.0, 1.0, 1.0))), injectionSwitch.x)), _GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x, injectionSwitch.x)), _GLF_IDENTITY(injectionSwitch.x, float(_GLF_IDENTITY(mat4x2(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)), 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0), mat4x2(mat4(mat4x2(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)))), 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0))))))), clamp(_GLF_IDENTITY(clamp(_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, float(vec4(injectionSwitch.x, 0.0, 1.0, 1.0))), injectionSwitch.x)), _GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x, injectionSwitch.x)), _GLF_IDENTITY(injectionSwitch.x, float(_GLF_IDENTITY(mat4x2(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)), 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0), mat4x2(mat4(mat4x2(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, float(mat2x4(injectionSwitch.x, 1.0, 1.0, 0.0, 1.0, 1.0, sqrt(0.0), cos(0.0)))))), 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0))))))), clamp(clamp(_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, float(vec4(injectionSwitch.x, 0.0, 1.0, 1.0))), injectionSwitch.x)), _GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x, injectionSwitch.x)), _GLF_IDENTITY(injectionSwitch.x, float(_GLF_IDENTITY(mat4x2(_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x, injectionSwitch.x)), 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0), mat4x2(mat4(mat4x2(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)), 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0))))))), clamp(_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, float(vec4(injectionSwitch.x, 0.0, 1.0, 1.0))), injectionSwitch.x)), _GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x, injectionSwitch.x)), _GLF_IDENTITY(injectionSwitch.x, float(_GLF_IDENTITY(mat4x2(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)), 1.0, _GLF_IDENTITY(1.0, clamp(1.0, 1.0, _GLF_IDENTITY(1.0, (1.0) - 0.0))), 1.0, 0.0, 0.0, 0.0, 1.0), mat4x2(mat4(mat4x2(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x)), 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0))))))), clamp(_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, float(vec4(_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-86.95)), float(_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(-1840.7763)))), bool(true)))) - 0.0), 0.0, 1.0, 1.0))), injectionSwitch.x)), _GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / cos(0.0)), clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x, injectionSwitch.x)), _GLF_IDENTITY(injectionSwitch.x, float(_GLF_IDENTITY(mat4x2(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)), 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0), mat4x2(mat4(mat4x2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)), 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0))))))))), _GLF_IDENTITY(clamp(_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, float(vec4(injectionSwitch.x, 0.0, 1.0, 1.0))), injectionSwitch.x)), _GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x, injectionSwitch.x)), _GLF_IDENTITY(injectionSwitch.x, float(_GLF_IDENTITY(mat4x2(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)), 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0), mat4x2(mat4(mat4x2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)), injectionSwitch))) + vec2(0.0, 0.0)).x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)), 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0))))))), clamp(clamp(_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, float(vec4(injectionSwitch.x, 0.0, 1.0, 1.0))), injectionSwitch.x)), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))).x, max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))).x, mix(float(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))).x), float(_GLF_FUZZED(-418.240)), bool(false))), _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))).x)), clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)), max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)), float(vec4(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)), 1.0, 1.0, 1.0))), _GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)))), injectionSwitch.x, injectionSwitch.x)), _GLF_IDENTITY(injectionSwitch.x, float(_GLF_IDENTITY(mat4x2(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)), 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0), mat4x2(mat4(mat4x2(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x), clamp(clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x), clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x), _GLF_IDENTITY(clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x), (true ? clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x) : _GLF_FUZZED(0.9)))))), 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0))))))), clamp(_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, float(vec4(injectionSwitch.x, 0.0, 1.0, 1.0))), injectionSwitch.x)), _GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x, injectionSwitch.x)), _GLF_IDENTITY(injectionSwitch.x, float(_GLF_IDENTITY(mat4x2(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)), 1.0, 1.0, _GLF_IDENTITY(1.0, max(1.0, 1.0)), 0.0, 0.0, 0.0, 1.0), mat4x2(mat4(mat4x2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(vec4(1537.0720, -86.88, -3.4, 0.3).g)), bool(false))), clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)), 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0))))))), clamp(_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, float(vec4(_GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)) : _GLF_FUZZED(vec2(-1.6, 4.9)))).x, 0.0, 1.0, 1.0))), injectionSwitch.x)), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x, injectionSwitch.x)), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x, injectionSwitch.x)), (true ? _GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x))) / 1.0))) : _GLF_FUZZED(-9.2)))) / round(length(normalize(vec2(1.0, 1.0))))), _GLF_IDENTITY(injectionSwitch.x, float(_GLF_IDENTITY(mat4x2(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).x, injectionSwitch.x)), 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0), mat4x2(mat4(mat4x2(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)), 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0))))))))), _GLF_IDENTITY(clamp(_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, float(vec4(injectionSwitch.x, 0.0, 1.0, 1.0))), injectionSwitch.x)), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).x, clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)), (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x))) * _GLF_ONE(1.0, injectionSwitch.y)), injectionSwitch.x, injectionSwitch.x)), _GLF_IDENTITY(injectionSwitch.x, float(_GLF_IDENTITY(mat4x2(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], max(_GLF_IDENTITY(injectionSwitch[0], (false ? _GLF_FUZZED(99.34) : injectionSwitch[0])), injectionSwitch[0])), injectionSwitch[1])).x)), 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0), mat4x2(mat4(mat4x2(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)), 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0))))))), clamp(clamp(_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x, float(vec4(injectionSwitch.x, 0.0, 1.0, 1.0))), injectionSwitch.x)), _GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x, injectionSwitch.x)), _GLF_IDENTITY(injectionSwitch.x, float(_GLF_IDENTITY(mat4x2(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)), 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0), mat4x2(mat4(mat4x2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, vec2(mat3x2(injectionSwitch, 1.0, 0.0, 0.0, 0.0))), injectionSwitch)).x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)), 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0))))))), clamp(_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, float(vec4(injectionSwitch.x, 0.0, 1.0, 1.0))), injectionSwitch.x)), _GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x, injectionSwitch.x)), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, log(vec2(1.0, 1.0)) + (injectionSwitch)))).x, float(_GLF_IDENTITY(mat4x2(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, float(_GLF_IDENTITY(vec4(injectionSwitch.x, 0.0, length(vec4(0.0, 0.0, 0.0, 0.0)), 0.0), min(vec4(injectionSwitch.x, 0.0, length(vec4(0.0, 0.0, 0.0, 0.0)), 0.0), vec4(injectionSwitch.x, 0.0, length(vec4(0.0, 0.0, 0.0, 0.0)), 0.0))))))), _GLF_IDENTITY(1.0, determinant(mat2(0.0, cos(0.0), 0.0, 0.0)) + (_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-7.1) : 1.0)))), 1.0, 1.0, 0.0, 0.0, 0.0, 1.0), mat4x2(mat4(mat4x2(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)), 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0))))))), clamp(_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, float(_GLF_IDENTITY(vec4(injectionSwitch.x, 0.0, 1.0, 1.0), (true ? vec4(injectionSwitch.x, 0.0, 1.0, 1.0) : _GLF_FUZZED(vec4(8640.3223, -3.6, -9.2, -6.6)))))), injectionSwitch.x)), _GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x)), injectionSwitch.x, injectionSwitch.x)), _GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(_GLF_IDENTITY(mat4x2(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)), 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0), mat4x2(mat4(mat4x2(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0))) + tan(vec2(0.0, 0.0))).x)), _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(1560.5495)), float(1.0), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), 1.0, 1.0, 0.0, 0.0, 0.0, 1.0))))), (float(_GLF_IDENTITY(mat4x2(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)), 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0), mat4x2(mat4(mat4x2(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0))) + tan(vec2(0.0, 0.0))).x)), _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(1560.5495)), float(1.0), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), 1.0, 1.0, 0.0, 0.0, 0.0, 1.0)))))) + 0.0)))))))) > injectionSwitch.y))))
                      {
                       if(_GLF_WRAPPED_IF_TRUE(true))
                        {
                         if(_GLF_DEAD(false))
                          return;
                         if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
                          return;
                        }
                       else
                        {
                        }
                       return;
                      }
                    }
                  }
                 do
                  {
                   barrier();
                  }
                 while(_GLF_WRAPPED_LOOP(false));
                 if(_GLF_DEAD(false))
                  {
                   if(_GLF_DEAD(false))
                    barrier();
                   for(int _injected_loop_counter = (0 | 0); _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter, 1 * (_injected_loop_counter)) != 1); _injected_loop_counter ++)
                    {
                     return;
                     if(_GLF_DEAD(false))
                      return;
                    }
                  }
                }
              }
             for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
              {
               if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED((-50.03))), bool(false)))) * 1.0) > injectionSwitch.y), ! (! ((_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_IDENTITY(_GLF_FUZZED((-50.03)), clamp(_GLF_FUZZED((-50.03)), _GLF_FUZZED((-50.03)), _GLF_IDENTITY(_GLF_FUZZED((-50.03)), (_GLF_FUZZED((-50.03))) / 1.0)))), bool(false)))) * 1.0) > injectionSwitch.y)))))))
                barrier();
              }
            }
          }
         do
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            {
             for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != (0 ^ ((1 << _GLF_IDENTITY(int(6), _GLF_IDENTITY(int(6), ~ (~ (_GLF_IDENTITY(int(6), max(int(6), int(6)))))))) >> _GLF_IDENTITY(_GLF_IDENTITY(int(6), int(6)), int(ivec3(_GLF_IDENTITY(int(6), int(6)), 0, 1)))))); _injected_loop_counter ++)
              {
               barrier();
              }
            }
          }
         while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(-9.9) : injectionSwitch.y))))));
         for(int _injected_loop_counter = int(_GLF_ONE(_GLF_IDENTITY(1.0, min(1.0, 1.0)), injectionSwitch.y)); _GLF_WRAPPED_LOOP(_injected_loop_counter > _GLF_IDENTITY((_GLF_IDENTITY((50954 >> _GLF_IDENTITY(-75012, clamp(_GLF_IDENTITY(-75012, (true ? -75012 : _GLF_FUZZED(_injected_loop_counter))), _GLF_IDENTITY(-75012, (_GLF_IDENTITY(-75012, int(ivec2(-75012, 0)))) + (0 | 0)), -75012))), ((50954 >> -75012)) | (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(50954, min(50954, 50954)) >> -75012), ~ (~ ((50954 >> -75012)))), ~ _GLF_IDENTITY((~ (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(50954, min(_GLF_IDENTITY(50954, (false ? _GLF_FUZZED(bitfieldInsert(-88126, -37892, _injected_loop_counter, _injected_loop_counter)) : _GLF_IDENTITY(50954, ~ (~ (50954))))), _GLF_IDENTITY(50954, max(50954, 50954)))) >> -75012, min(_GLF_IDENTITY(_GLF_IDENTITY(50954, min(_GLF_IDENTITY(50954, (false ? _GLF_FUZZED(bitfieldInsert(-88126, -37892, _injected_loop_counter, _injected_loop_counter)) : _GLF_IDENTITY(50954, ~ (~ (50954))))), _GLF_IDENTITY(50954, max(50954, 50954)))) >> -75012, clamp(_GLF_IDENTITY(50954, min(_GLF_IDENTITY(50954, (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, false, true)), false || (bool(bvec3(false, false, true))))) ? _GLF_FUZZED(bitfieldInsert(-88126, -37892, _injected_loop_counter, _injected_loop_counter)) : _GLF_IDENTITY(50954, ~ (~ (50954))))), _GLF_IDENTITY(_GLF_IDENTITY(50954, ~ (~ (50954))), max(50954, 50954)))) >> -75012, _GLF_IDENTITY(_GLF_IDENTITY(50954, (50954) + 0), min(_GLF_IDENTITY(50954, (false ? _GLF_FUZZED(bitfieldInsert(-88126, -37892, _injected_loop_counter, _injected_loop_counter)) : _GLF_IDENTITY(50954, ~ (~ (50954))))), _GLF_IDENTITY(50954, max(50954, 50954)))) >> -75012, _GLF_IDENTITY(50954, min(_GLF_IDENTITY(50954, (false ? _GLF_FUZZED(bitfieldInsert(-88126, -37892, _injected_loop_counter, _injected_loop_counter)) : _GLF_IDENTITY(_GLF_IDENTITY(50954, ~ (~ (50954))), (_GLF_IDENTITY(50954, ~ (~ (50954)))) ^ 0))), _GLF_IDENTITY(50954, max(50954, 50954)))) >> -75012)), _GLF_IDENTITY(50954, min(_GLF_IDENTITY(50954, (false ? _GLF_FUZZED(bitfieldInsert(-88126, -37892, _injected_loop_counter, _injected_loop_counter)) : _GLF_IDENTITY(50954, ~ (~ (50954))))), _GLF_IDENTITY(50954, max(50954, 50954)))) >> -75012))), ~ (~ _GLF_IDENTITY(((50954 >> -75012)), (_GLF_IDENTITY(((50954 >> -75012)), 0 + (((50954 >> -75012))))) ^ (1 ^ 1)))))), max((~ (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(50954, min(_GLF_IDENTITY(50954, (false ? _GLF_FUZZED(bitfieldInsert(-88126, -37892, _injected_loop_counter, _injected_loop_counter)) : _GLF_IDENTITY(50954, ~ (~ (50954))))), _GLF_IDENTITY(50954, max(50954, 50954)))) >> -75012, min(_GLF_IDENTITY(_GLF_IDENTITY(50954, min(_GLF_IDENTITY(50954, (_GLF_IDENTITY(false ? _GLF_FUZZED(bitfieldInsert(-88126, -37892, _injected_loop_counter, _injected_loop_counter)) : _GLF_IDENTITY(50954, ~ (~ (50954))), min(_GLF_IDENTITY(false ? _GLF_FUZZED(bitfieldInsert(-88126, -37892, _injected_loop_counter, _injected_loop_counter)) : _GLF_IDENTITY(50954, ~ (~ (50954))), (false ? _GLF_FUZZED(bitfieldInsert(-88126, -37892, _injected_loop_counter, _injected_loop_counter)) : _GLF_IDENTITY(50954, ~ (~ (50954)))) - 0), false ? _GLF_FUZZED(bitfieldInsert(-88126, -37892, _injected_loop_counter, _injected_loop_counter)) : _GLF_IDENTITY(50954, ~ (~ (50954))))))), _GLF_IDENTITY(50954, max(50954, 50954)))) >> -75012, clamp(_GLF_IDENTITY(50954, min(_GLF_IDENTITY(50954, (false ? _GLF_FUZZED(bitfieldInsert(-88126, -37892, _injected_loop_counter, _injected_loop_counter)) : _GLF_IDENTITY(50954, ~ (~ (50954))))), _GLF_IDENTITY(50954, max(50954, 50954)))) >> -75012, _GLF_IDENTITY(_GLF_IDENTITY(50954, min(_GLF_IDENTITY(50954, (false ? _GLF_FUZZED(bitfieldInsert(-88126, -37892, _injected_loop_counter, _injected_loop_counter)) : _GLF_IDENTITY(50954, ~ (~ (50954))))), _GLF_IDENTITY(50954, max(50954, 50954)))) >> -75012, (_GLF_IDENTITY(50954, min(_GLF_IDENTITY(50954, (false ? _GLF_FUZZED(bitfieldInsert(-88126, -37892, _injected_loop_counter, _injected_loop_counter)) : _GLF_IDENTITY(50954, ~ (~ (50954))))), _GLF_IDENTITY(50954, max(50954, 50954)))) >> -75012) | 0), _GLF_IDENTITY(50954, min(_GLF_IDENTITY(50954, (false ? _GLF_FUZZED(bitfieldInsert(-88126, -37892, _injected_loop_counter, _injected_loop_counter)) : _GLF_IDENTITY(50954, ~ (~ (50954))))), _GLF_IDENTITY(50954, max(50954, 50954)))) >> -75012)), _GLF_IDENTITY(50954, min(_GLF_IDENTITY(50954, (false ? _GLF_FUZZED(_GLF_IDENTITY(bitfieldInsert(-88126, -37892, _injected_loop_counter, _injected_loop_counter), int(_GLF_IDENTITY(int(bitfieldInsert(-88126, -37892, _injected_loop_counter, _injected_loop_counter)), 1 * (_GLF_IDENTITY(int(bitfieldInsert(-88126, -37892, _injected_loop_counter, _injected_loop_counter)), ~ (~ (int(bitfieldInsert(-88126, -37892, _injected_loop_counter, _injected_loop_counter)))))))))) : _GLF_IDENTITY(50954, ~ (~ (50954))))), _GLF_IDENTITY(50954, max(50954, 50954)))) >> -75012))), ~ (~ _GLF_IDENTITY(_GLF_IDENTITY(((50954 >> -75012)), (((50954 >> -75012))) ^ (1 ^ 1)), (_GLF_IDENTITY(((50954 >> -75012)), (((50954 >> -75012))) ^ (1 ^ 1))) ^ 0))))), (~ (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(50954, min(_GLF_IDENTITY(_GLF_IDENTITY(50954, (50954) - 0), (false ? _GLF_FUZZED(bitfieldInsert(-88126, -37892, _injected_loop_counter, _injected_loop_counter)) : _GLF_IDENTITY(50954, ~ (~ (_GLF_IDENTITY(50954, 0 ^ (50954))))))), _GLF_IDENTITY(50954, max(50954, 50954)))) >> -75012, min(_GLF_IDENTITY(_GLF_IDENTITY(50954, min(_GLF_IDENTITY(50954, (false ? _GLF_FUZZED(bitfieldInsert(-88126, -37892, _injected_loop_counter, _injected_loop_counter)) : _GLF_IDENTITY(50954, ~ (~ (50954))))), _GLF_IDENTITY(50954, max(50954, 50954)))) >> -75012, clamp(_GLF_IDENTITY(50954, min(_GLF_IDENTITY(_GLF_IDENTITY(50954, (false ? _GLF_FUZZED(bitfieldInsert(-88126, -37892, _injected_loop_counter, _injected_loop_counter)) : _GLF_IDENTITY(50954, ~ (~ (50954))))), (false ? _GLF_FUZZED(ivec4(11193, -87460, 74892, 27727).x) : _GLF_IDENTITY(50954, (false ? _GLF_FUZZED(bitfieldInsert(-88126, -37892, _injected_loop_counter, _injected_loop_counter)) : _GLF_IDENTITY(50954, ~ (~ (50954))))))), _GLF_IDENTITY(50954, max(50954, _GLF_IDENTITY(50954, max(_GLF_IDENTITY(50954, (50954) >> 0), 50954)))))) >> -75012, _GLF_IDENTITY(50954, min(_GLF_IDENTITY(50954, (false ? _GLF_FUZZED(bitfieldInsert(-88126, -37892, _injected_loop_counter, _injected_loop_counter)) : _GLF_IDENTITY(50954, ~ (~ (50954))))), _GLF_IDENTITY(50954, max(50954, 50954)))) >> -75012, _GLF_IDENTITY(50954, min(_GLF_IDENTITY(50954, (false ? _GLF_FUZZED(bitfieldInsert(-88126, -37892, _injected_loop_counter, _injected_loop_counter)) : _GLF_IDENTITY(50954, ~ (_GLF_IDENTITY(~ (50954), (~ (50954)) | (~ (50954))))))), _GLF_IDENTITY(50954, max(50954, 50954)))) >> -75012)), _GLF_IDENTITY(50954, min(_GLF_IDENTITY(50954, (false ? _GLF_FUZZED(bitfieldInsert(-88126, -37892, _injected_loop_counter, _injected_loop_counter)) : _GLF_IDENTITY(_GLF_IDENTITY(50954, (_GLF_IDENTITY(50954, (false ? _GLF_FUZZED(-45359) : 50954))) * 1), ~ (~ (50954))))), _GLF_IDENTITY(50954, max(50954, 50954)))) >> -75012))), ~ (~ _GLF_IDENTITY(((50954 >> -75012)), (_GLF_IDENTITY(((50954 >> -75012)), int(ivec2(((50954 >> -75012)), 0)))) ^ (1 ^ 1))))))))))) & 0), ((_GLF_IDENTITY((50954 >> _GLF_IDENTITY(-75012, clamp(_GLF_IDENTITY(-75012, (true ? -75012 : _GLF_FUZZED(_injected_loop_counter))), _GLF_IDENTITY(-75012, (_GLF_IDENTITY(-75012, int(ivec2(-75012, 0)))) + (0 | 0)), -75012))), ((50954 >> -75012)) | (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(50954, min(50954, 50954)) >> -75012), ~ (~ ((50954 >> -75012)))), ~ _GLF_IDENTITY((~ (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(50954, min(_GLF_IDENTITY(50954, (false ? _GLF_FUZZED(bitfieldInsert(-88126, -37892, _injected_loop_counter, _injected_loop_counter)) : _GLF_IDENTITY(50954, ~ (~ (50954))))), _GLF_IDENTITY(50954, max(50954, 50954)))) >> -75012, min(_GLF_IDENTITY(_GLF_IDENTITY(50954, min(_GLF_IDENTITY(50954, (false ? _GLF_FUZZED(bitfieldInsert(-88126, -37892, _injected_loop_counter, _injected_loop_counter)) : _GLF_IDENTITY(50954, ~ (~ (50954))))), _GLF_IDENTITY(50954, max(50954, 50954)))) >> -75012, clamp(_GLF_IDENTITY(50954, min(_GLF_IDENTITY(50954, (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, false, true)), false || (bool(bvec3(false, false, true))))) ? _GLF_FUZZED(bitfieldInsert(-88126, -37892, _injected_loop_counter, _injected_loop_counter)) : _GLF_IDENTITY(50954, ~ (~ (50954))))), _GLF_IDENTITY(_GLF_IDENTITY(50954, ~ (~ (50954))), max(50954, 50954)))) >> -75012, _GLF_IDENTITY(_GLF_IDENTITY(50954, (50954) + 0), min(_GLF_IDENTITY(50954, (false ? _GLF_FUZZED(bitfieldInsert(-88126, -37892, _injected_loop_counter, _injected_loop_counter)) : _GLF_IDENTITY(50954, ~ (~ (50954))))), _GLF_IDENTITY(50954, max(50954, 50954)))) >> -75012, _GLF_IDENTITY(50954, min(_GLF_IDENTITY(50954, (false ? _GLF_FUZZED(bitfieldInsert(-88126, -37892, _injected_loop_counter, _injected_loop_counter)) : _GLF_IDENTITY(_GLF_IDENTITY(50954, ~ (~ (50954))), (_GLF_IDENTITY(50954, ~ (~ (50954)))) ^ 0))), _GLF_IDENTITY(50954, max(50954, 50954)))) >> -75012)), _GLF_IDENTITY(50954, min(_GLF_IDENTITY(50954, (false ? _GLF_FUZZED(bitfieldInsert(-88126, -37892, _injected_loop_counter, _injected_loop_counter)) : _GLF_IDENTITY(50954, ~ (~ (50954))))), _GLF_IDENTITY(50954, max(50954, 50954)))) >> -75012))), ~ (~ _GLF_IDENTITY(((50954 >> -75012)), (_GLF_IDENTITY(((50954 >> -75012)), 0 + (((50954 >> -75012))))) ^ (1 ^ 1)))))), max((~ (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(50954, min(_GLF_IDENTITY(50954, (false ? _GLF_FUZZED(bitfieldInsert(-88126, -37892, _injected_loop_counter, _injected_loop_counter)) : _GLF_IDENTITY(50954, ~ (~ (50954))))), _GLF_IDENTITY(50954, max(50954, 50954)))) >> -75012, min(_GLF_IDENTITY(_GLF_IDENTITY(50954, min(_GLF_IDENTITY(50954, (_GLF_IDENTITY(false ? _GLF_FUZZED(bitfieldInsert(-88126, -37892, _injected_loop_counter, _injected_loop_counter)) : _GLF_IDENTITY(50954, ~ (~ (50954))), min(_GLF_IDENTITY(false ? _GLF_FUZZED(bitfieldInsert(-88126, -37892, _injected_loop_counter, _injected_loop_counter)) : _GLF_IDENTITY(50954, ~ (~ (50954))), (false ? _GLF_FUZZED(bitfieldInsert(-88126, -37892, _injected_loop_counter, _injected_loop_counter)) : _GLF_IDENTITY(50954, ~ (~ (50954)))) - 0), false ? _GLF_FUZZED(bitfieldInsert(-88126, -37892, _injected_loop_counter, _injected_loop_counter)) : _GLF_IDENTITY(50954, ~ (~ (50954))))))), _GLF_IDENTITY(50954, max(50954, 50954)))) >> -75012, clamp(_GLF_IDENTITY(50954, min(_GLF_IDENTITY(50954, (false ? _GLF_FUZZED(bitfieldInsert(-88126, -37892, _injected_loop_counter, _injected_loop_counter)) : _GLF_IDENTITY(50954, ~ (~ (50954))))), _GLF_IDENTITY(50954, max(50954, 50954)))) >> -75012, _GLF_IDENTITY(_GLF_IDENTITY(50954, min(_GLF_IDENTITY(50954, (false ? _GLF_FUZZED(bitfieldInsert(-88126, -37892, _injected_loop_counter, _injected_loop_counter)) : _GLF_IDENTITY(50954, ~ (~ (50954))))), _GLF_IDENTITY(50954, max(50954, 50954)))) >> -75012, (_GLF_IDENTITY(50954, min(_GLF_IDENTITY(50954, (false ? _GLF_FUZZED(bitfieldInsert(-88126, -37892, _injected_loop_counter, _injected_loop_counter)) : _GLF_IDENTITY(50954, ~ (~ (50954))))), _GLF_IDENTITY(50954, max(50954, 50954)))) >> -75012) | 0), _GLF_IDENTITY(50954, min(_GLF_IDENTITY(50954, (false ? _GLF_FUZZED(bitfieldInsert(-88126, -37892, _injected_loop_counter, _injected_loop_counter)) : _GLF_IDENTITY(50954, ~ (~ (50954))))), _GLF_IDENTITY(50954, max(50954, 50954)))) >> -75012)), _GLF_IDENTITY(50954, min(_GLF_IDENTITY(50954, (false ? _GLF_FUZZED(_GLF_IDENTITY(bitfieldInsert(-88126, -37892, _injected_loop_counter, _injected_loop_counter), int(_GLF_IDENTITY(int(bitfieldInsert(-88126, -37892, _injected_loop_counter, _injected_loop_counter)), 1 * (_GLF_IDENTITY(int(bitfieldInsert(-88126, -37892, _injected_loop_counter, _injected_loop_counter)), ~ (~ (int(bitfieldInsert(-88126, -37892, _injected_loop_counter, _injected_loop_counter)))))))))) : _GLF_IDENTITY(50954, ~ (~ (50954))))), _GLF_IDENTITY(50954, max(50954, 50954)))) >> -75012))), ~ (~ _GLF_IDENTITY(_GLF_IDENTITY(((50954 >> -75012)), (((50954 >> -75012))) ^ (1 ^ 1)), (_GLF_IDENTITY(((50954 >> -75012)), (((50954 >> -75012))) ^ (1 ^ 1))) ^ 0))))), (~ (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(50954, min(_GLF_IDENTITY(_GLF_IDENTITY(50954, (50954) - 0), (false ? _GLF_FUZZED(bitfieldInsert(-88126, -37892, _injected_loop_counter, _injected_loop_counter)) : _GLF_IDENTITY(50954, ~ (~ (_GLF_IDENTITY(50954, 0 ^ (50954))))))), _GLF_IDENTITY(50954, max(50954, 50954)))) >> -75012, min(_GLF_IDENTITY(_GLF_IDENTITY(50954, min(_GLF_IDENTITY(50954, (false ? _GLF_FUZZED(bitfieldInsert(-88126, -37892, _injected_loop_counter, _injected_loop_counter)) : _GLF_IDENTITY(50954, ~ (~ (50954))))), _GLF_IDENTITY(50954, max(50954, 50954)))) >> -75012, clamp(_GLF_IDENTITY(50954, min(_GLF_IDENTITY(_GLF_IDENTITY(50954, (false ? _GLF_FUZZED(bitfieldInsert(-88126, -37892, _injected_loop_counter, _injected_loop_counter)) : _GLF_IDENTITY(50954, ~ (~ (50954))))), (false ? _GLF_FUZZED(ivec4(11193, -87460, 74892, 27727).x) : _GLF_IDENTITY(50954, (false ? _GLF_FUZZED(bitfieldInsert(-88126, -37892, _injected_loop_counter, _injected_loop_counter)) : _GLF_IDENTITY(50954, ~ (~ (50954))))))), _GLF_IDENTITY(50954, max(50954, _GLF_IDENTITY(50954, max(_GLF_IDENTITY(50954, (50954) >> 0), 50954)))))) >> -75012, _GLF_IDENTITY(50954, min(_GLF_IDENTITY(50954, (false ? _GLF_FUZZED(bitfieldInsert(-88126, -37892, _injected_loop_counter, _injected_loop_counter)) : _GLF_IDENTITY(50954, ~ (~ (50954))))), _GLF_IDENTITY(50954, max(50954, 50954)))) >> -75012, _GLF_IDENTITY(50954, min(_GLF_IDENTITY(50954, (false ? _GLF_FUZZED(bitfieldInsert(-88126, -37892, _injected_loop_counter, _injected_loop_counter)) : _GLF_IDENTITY(50954, ~ (_GLF_IDENTITY(~ (50954), (~ (50954)) | (~ (50954))))))), _GLF_IDENTITY(50954, max(50954, 50954)))) >> -75012)), _GLF_IDENTITY(50954, min(_GLF_IDENTITY(50954, (false ? _GLF_FUZZED(bitfieldInsert(-88126, -37892, _injected_loop_counter, _injected_loop_counter)) : _GLF_IDENTITY(_GLF_IDENTITY(50954, (_GLF_IDENTITY(50954, (false ? _GLF_FUZZED(-45359) : 50954))) * 1), ~ (~ (50954))))), _GLF_IDENTITY(50954, max(50954, 50954)))) >> -75012))), ~ (~ _GLF_IDENTITY(((50954 >> -75012)), (_GLF_IDENTITY(((50954 >> -75012)), int(ivec2(((50954 >> -75012)), 0)))) ^ (1 ^ 1))))))))))) & 0)) + (0 >> _GLF_IDENTITY(int(8), int(8))))); _injected_loop_counter --)
          {
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(false))
              continue;
             break;
            }
           for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _GLF_IDENTITY(_GLF_IDENTITY(_injected_loop_counter ++, (_injected_loop_counter ++) | 0), 1 * (_injected_loop_counter ++)))
            {
             if(_GLF_DEAD(false))
              {
               do
                {
                 if(_GLF_DEAD(false))
                  return;
                }
               while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), bool(bool(false)))));
               if(_GLF_DEAD(false))
                barrier();
               for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
                {
                 barrier();
                }
              }
            }
           if(_GLF_DEAD(false))
            {
             for(int _injected_loop_counter = (int(_GLF_ZERO(0.0, injectionSwitch.x)) ^ 0); _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
              {
               do
                {
                 barrier();
                }
               while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
              }
             if(_GLF_DEAD(false))
              barrier();
            }
          }
         if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
          barrier();
        }
       else
        {
        }
       if(_GLF_WRAPPED_IF_TRUE(true))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, true, false)))))
          {
           if(_GLF_DEAD(false))
            {
             if(_GLF_WRAPPED_IF_TRUE(true))
              {
               barrier();
               if(_GLF_DEAD(false))
                return;
              }
             else
              {
              }
            }
           if(_GLF_WRAPPED_IF_FALSE(false))
            {
            }
           else
            {
             do
              {
               if(_GLF_DEAD(false))
                break;
               if(_GLF_WRAPPED_IF_FALSE(false))
                {
                }
               else
                {
                 if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
                  return;
                }
              }
             while(_GLF_WRAPPED_LOOP(false));
             barrier();
             if(_GLF_DEAD(false))
              barrier();
             if(_GLF_DEAD(false))
              barrier();
            }
           for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
            {
             if(_GLF_DEAD(false))
              barrier();
             if(_GLF_DEAD(false))
              barrier();
            }
          }
        }
       else
        {
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false)))))
        barrier();
       do
        {
         if(_GLF_DEAD(false))
          barrier();
        }
       while(_GLF_WRAPPED_LOOP(false));
       for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter < 1, ! _GLF_IDENTITY((! (_injected_loop_counter < 1)), _GLF_IDENTITY(! (_GLF_IDENTITY(! ((! (_injected_loop_counter < 1))), ! (! (! ((! _GLF_IDENTITY((_injected_loop_counter < 1), bool(_GLF_IDENTITY(bool((_injected_loop_counter < 1)), (bool((_injected_loop_counter < 1))) && true))))))))), (! (_GLF_IDENTITY(! ((! (_injected_loop_counter < 1))), ! (! (! ((! _GLF_IDENTITY((_injected_loop_counter < 1), bool(_GLF_IDENTITY(bool((_injected_loop_counter < 1)), (bool((_injected_loop_counter < 1))) && true)))))))))) || false)))); _injected_loop_counter ++)
        {
         if(_GLF_DEAD(false))
          break;
         if(_GLF_WRAPPED_IF_FALSE(false))
          {
          }
         else
          {
           subgroupAll(_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, (true) && true)))))));
          }
        }
       if(_GLF_WRAPPED_IF_FALSE(false))
        {
        }
       else
        {
         if(_GLF_WRAPPED_IF_TRUE(true))
          {
           if(_GLF_DEAD(false))
            {
             for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
              {
               return;
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                break;
               if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
                {
                 if(_GLF_WRAPPED_IF_TRUE(true))
                  {
                   barrier();
                   if(_GLF_DEAD(false))
                    barrier();
                  }
                 else
                  {
                  }
                }
              }
            }
          }
         else
          {
           if(_GLF_WRAPPED_IF_FALSE(false))
            {
            }
           else
            {
             if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), false || (! (false)))))))
              {
               if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY((false) || false, false || ((false) || false)))))
                barrier();
               barrier();
              }
            }
          }
        }
       for(int _injected_loop_counter = int(_GLF_ONE(1.0, injectionSwitch.y)); _GLF_WRAPPED_LOOP(_injected_loop_counter != _GLF_IDENTITY(0, (0) + 0)); _injected_loop_counter --)
        {
         atomicStore(buf[next_virtual_gid], uint(2), 4, 64, 4);
        }
      }
     else
      {
       for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < int(_GLF_ONE(1.0, injectionSwitch.y))); _injected_loop_counter ++)
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          break;
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            return;
           for(int _injected_loop_counter = _GLF_IDENTITY(1, max(1, 1)); _GLF_WRAPPED_LOOP(_injected_loop_counter > (int(_GLF_ONE(1.0, injectionSwitch.y)) ^ 1)); _injected_loop_counter --)
            {
             if(_GLF_DEAD(false))
              {
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                break;
               return;
              }
             if(_GLF_DEAD(false))
              break;
            }
           do
            {
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              continue;
             return;
             if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y))))))
              barrier();
            }
           while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(-52.57)), bool(false))), false || (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(mix(float(injectionSwitch.y), float(_GLF_FUZZED(-52.57)), bool(false)), 1.0 * (mix(float(injectionSwitch.y), float(_GLF_FUZZED(-52.57)), bool(false)))))))))));
          }
        }
       if(_GLF_DEAD(false))
        return;
       if(_GLF_WRAPPED_IF_TRUE(true))
        {
         if(_GLF_DEAD(false))
          barrier();
        }
       else
        {
        }
       if(_GLF_WRAPPED_IF_TRUE(true))
        {
         do
          {
           subgroupAll(false);
          }
         while(_GLF_WRAPPED_LOOP(_GLF_FALSE(_GLF_IDENTITY(false, false || (false)), (injectionSwitch.x > injectionSwitch.y))));
        }
       else
        {
        }
       if(_GLF_WRAPPED_IF_TRUE(true))
        {
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! (! (false)))), ! (! (! (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(_GLF_IDENTITY(bool(! _GLF_IDENTITY((false), true && (_GLF_IDENTITY((false), true && ((false)))))), bool(bool(bool(! _GLF_IDENTITY((false), ((false)) || false)))))))))))))))))
          {
           if(_GLF_DEAD(false))
            continue;
           return;
          }
         if(_GLF_DEAD(false))
          {
           if(_GLF_WRAPPED_IF_TRUE(true))
            {
             if(_GLF_DEAD(false))
              continue;
             if(_GLF_DEAD(false))
              {
               for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _GLF_IDENTITY(_injected_loop_counter --, (_GLF_IDENTITY(true, false || (true)) ? _injected_loop_counter -- : _GLF_FUZZED(_injected_loop_counter))))
                {
                 if(_GLF_DEAD(false))
                  barrier();
                 do
                  {
                   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).y))))
                    break;
                   if(_GLF_DEAD(false))
                    return;
                   if(_GLF_WRAPPED_IF_TRUE(true))
                    {
                     for(int _injected_loop_counter = 1; _GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter > 0), false || (_GLF_WRAPPED_LOOP(_injected_loop_counter > 0))); _injected_loop_counter --)
                      {
                       return;
                      }
                    }
                   else
                    {
                    }
                  }
                 while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec4(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED((846.423 / -5.6)), _GLF_FUZZED(6.1)), vec2((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch)[1], ((injectionSwitch)[1]) * 1.0)), bvec2(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))).y, bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(injectionSwitch.x > injectionSwitch.y), (bool(injectionSwitch.x > injectionSwitch.y)) || false), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(bool(injectionSwitch.x > injectionSwitch.y), (bool(injectionSwitch.x > injectionSwitch.y)) || false)), (_GLF_IDENTITY(! (_GLF_IDENTITY(bool(injectionSwitch.x > injectionSwitch.y), (bool(injectionSwitch.x > injectionSwitch.y)) || false)), true && (! (_GLF_IDENTITY(bool(injectionSwitch.x > injectionSwitch.y), (bool(injectionSwitch.x > injectionSwitch.y)) || false))))) || false))))))), bool(bvec2(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bvec4(injectionSwitch.x > injectionSwitch.y, false, false, true)), (bool(bvec4(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y, false, false, true))) && true)), _GLF_IDENTITY(false, (_GLF_IDENTITY(false, (_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), true && (_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), (_GLF_IDENTITY(false, false || (false))) && true))))))) || false)) || false)))))), true, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))));
                }
              }
            }
           else
            {
            }
           do
            {
             barrier();
            }
           while(_GLF_WRAPPED_LOOP(false));
           if(_GLF_DEAD(false))
            break;
          }
         if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY((_GLF_IDENTITY(false, true && (false))) || false, ! (_GLF_IDENTITY(! ((_GLF_IDENTITY(false, true && (false))) || false), true && (! (_GLF_IDENTITY((_GLF_IDENTITY(false, _GLF_IDENTITY(true && (false), (true && (false)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), true && ((_GLF_IDENTITY(false, _GLF_IDENTITY(true && (false), (true && (false)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))) || false))))))))
          return;
         if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * cos(0.0)) > injectionSwitch.y))))
          {
           for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter != 0, (_GLF_IDENTITY(_injected_loop_counter != 0, ! (! (_injected_loop_counter != 0)))) && true)); _injected_loop_counter --)
            {
             barrier();
             if(_GLF_DEAD(false))
              barrier();
            }
          }
         atomicStore(buf[next_virtual_gid], _GLF_IDENTITY(uint(2), (uint(_GLF_IDENTITY(2, (2) | (_GLF_IDENTITY(_GLF_IDENTITY(2, (_GLF_IDENTITY(2, min(2, 2))) | 0), (false ? _GLF_FUZZED(36508) : 2)))))) << 0u), 4, 64, 4);
        }
       else
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
          barrier();
        }
       if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(false, (false) && true)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && ((_GLF_IDENTITY(false, (false) && true)))), bool(bvec2((_GLF_IDENTITY(false, (false) && true)), true))) && true), (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_WRAPPED_IF_FALSE(false))
        {
        }
       else
        {
         if(_GLF_WRAPPED_IF_TRUE(true))
          {
           if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(vec4(injectionSwitch.y, _GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0)), dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0))), 0.0, 0.0)), (float(vec4(injectionSwitch.y, _GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0)), dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0))), 0.0, 0.0))) - 0.0))))))
            {
             if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
              barrier();
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              return;
             if(_GLF_DEAD(false))
              {
               for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
                {
                 if(_GLF_WRAPPED_IF_FALSE(false))
                  {
                  }
                 else
                  {
                   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                    {
                     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                      return;
                     barrier();
                    }
                  }
                 if(_GLF_DEAD(false))
                  break;
                 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                  return;
                 return;
                }
               if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
                continue;
               if(_GLF_WRAPPED_IF_FALSE(false))
                {
                }
               else
                {
                 if(_GLF_DEAD(false))
                  return;
                }
               if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
                {
                 if(_GLF_DEAD(false))
                  {
                   if(_GLF_WRAPPED_IF_TRUE(true))
                    {
                     if(_GLF_DEAD(false))
                      barrier();
                     barrier();
                    }
                   else
                    {
                    }
                   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                    barrier();
                  }
                }
               else
                {
                }
               if(_GLF_WRAPPED_IF_TRUE(true))
                {
                 if(_GLF_DEAD(false))
                  continue;
                 if(_GLF_DEAD(false))
                  return;
                }
               else
                {
                }
              }
             if(_GLF_DEAD(false))
              continue;
             do
              {
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                {
                 if(_GLF_DEAD(false))
                  barrier();
                 return;
                }
              }
             while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true)), ! (_GLF_IDENTITY(! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true))), ! (! (! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).x > injectionSwitch.y) && true))))))))))))));
            }
           else
            {
            }
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            {
             if(_GLF_DEAD(false))
              break;
             barrier();
            }
          }
         else
          {
          }
        }
      }
    }
   while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, ! (! (false)))));
  }
 else
  {
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
}
