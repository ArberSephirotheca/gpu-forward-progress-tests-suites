#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) && true), (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, abs(vec2(1.0, 1.0)) * (injectionSwitch)).y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   return;
  }
 if(_GLF_DEAD(false))
  barrier();
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), _GLF_IDENTITY(bool(bool(! (! (false)))), (bool(bool(! (! (false))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((_GLF_IDENTITY(false, bool(bvec3(false, false, true)))), ((_GLF_IDENTITY(false, bool(bvec3(false, false, true))))) || false))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, ! (! (false))), false, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), ! (! (false))), ! (! _GLF_IDENTITY((_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, _GLF_FALSE(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, true, true), bvec3(bvec3(bvec3(false, _GLF_IDENTITY(true, (true) && true), true)))))), (injectionSwitch.x > injectionSwitch.y)) || (false)))))), _GLF_IDENTITY(bool(bvec4((_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, _GLF_FALSE(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, true, true), bvec3(bvec3(bvec3(false, true, true)))))), (injectionSwitch.x > injectionSwitch.y)) || (false)))))), false, false, false)), ! (! (bool(bvec4((_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, _GLF_FALSE(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, true, true), bvec3(bvec3(bvec3(false, true, true)))))), (injectionSwitch.x > injectionSwitch.y)) || (false)))))), false, false, false))))))))) && true), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), ! (! _GLF_IDENTITY((_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, _GLF_FALSE(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, true, true), bvec3(bvec3(bvec3(false, true, true)))))), (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(false, (false) && true))))))), _GLF_IDENTITY(bool(bvec4((_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, _GLF_FALSE(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, true, true), bvec3(bvec3(bvec3(false, true, true)))))), (injectionSwitch.x > injectionSwitch.y)) || (false)))))), false, false, false)), ! (! (bool(bvec4((_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (_GLF_IDENTITY(false, _GLF_FALSE(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, true, true), bvec3(bvec3(bvec3(false, true, true)))))), (injectionSwitch.x > injectionSwitch.y)) || (false)))), false || ((! (_GLF_IDENTITY(false, _GLF_FALSE(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, true, true), bvec3(bvec3(bvec3(false, true, true)))))), (injectionSwitch.x > injectionSwitch.y)) || (false)))))))), false, false, false))))))))) && true), (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), ! (! _GLF_IDENTITY((_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, _GLF_FALSE(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, true, true), bvec3(bvec3(bvec3(false, true, true)))))), (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(false, (false) && true))))))), _GLF_IDENTITY(bool(bvec4((_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, _GLF_FALSE(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, true, true), bvec3(bvec3(bvec3(false, true, true)))))), (injectionSwitch.x > injectionSwitch.y)) || (false)))))), false, false, false)), ! _GLF_IDENTITY((! (bool(bvec4((_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (_GLF_IDENTITY(false, _GLF_FALSE(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, true, true), bvec3(bvec3(bvec3(false, true, true)))))), (injectionSwitch.x > injectionSwitch.y)) || (false)))), false || ((! (_GLF_IDENTITY(false, _GLF_FALSE(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, true, true), bvec3(bvec3(bvec3(false, true, true)))))), (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(false, false || (false)))))))))), false, false, false)))), ! (! ((! (bool(bvec4((_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (_GLF_IDENTITY(false, _GLF_FALSE(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, true, true), bvec3(bvec3(bvec3(false, true, true)))))), (injectionSwitch.x > injectionSwitch.y)) || (false)))), false || ((! (_GLF_IDENTITY(false, _GLF_FALSE(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, true, true), bvec3(bvec3(bvec3(false, true, true)))))), (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(false, false || (false)))))))))), false, false, false)))))))))))) && true)) && true)) && true)) || false), (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(_GLF_IDENTITY(bvec3(injectionSwitch.x > injectionSwitch.y, true, false), bvec3(bvec3(_GLF_IDENTITY(bvec3(injectionSwitch.x > injectionSwitch.y, true, false), _GLF_IDENTITY(bvec3(bvec4(_GLF_IDENTITY(bvec3(injectionSwitch.x > injectionSwitch.y, true, false), bvec3(bvec3(_GLF_IDENTITY(bvec3(injectionSwitch.x > injectionSwitch.y, true, false), bvec3(bvec4(bvec3(injectionSwitch.x > injectionSwitch.y, true, false), true)))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), bvec3(bvec4(bvec3(bvec4(_GLF_IDENTITY(bvec3(injectionSwitch.x > injectionSwitch.y, true, false), bvec3(bvec3(_GLF_IDENTITY(bvec3(injectionSwitch.x > injectionSwitch.y, true, false), bvec3(bvec4(bvec3(injectionSwitch.x > injectionSwitch.y, true, false), true)))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), false)))))))))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
      }
     return;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) || false))))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     return;
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true), ! (! _GLF_IDENTITY(_GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), false || (((injectionSwitch.x > injectionSwitch.y)))), _GLF_IDENTITY(bool(bvec3(((injectionSwitch.x > injectionSwitch.y)), true, true)), bool(bool(bool(bvec3(_GLF_IDENTITY((_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true))))), false || ((_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true))))))), true, true)))))))), false, false), _GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))), false, false), bvec3(bvec4(bvec3(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x)) > injectionSwitch.y), false || ((_GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x)) > injectionSwitch.y)))))), false, false), false))))), bvec3(bvec4(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))), _GLF_IDENTITY(false, false || (false)), false), _GLF_IDENTITY(bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))), false, false), bvec3(bvec4(bvec3(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))), false, false), false))), false)), bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))), false, false), bvec3(bvec4(bvec3(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))), false, false), false))), false)), bvec3(bvec4(bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))), _GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, (false) && true))))), false), bvec3(bvec4(bvec3(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))), false, false), false))), false)), _GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(true, bool(bvec4(true, true, true, false))), false, true, true)), true && (bool(bvec4(_GLF_IDENTITY(true, bool(bvec4(true, true, true, false))), false, true, true)))))))), true)))), bvec3(bvec4(bvec3(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(! (! ((injectionSwitch.x > injectionSwitch.y))), (! (! ((injectionSwitch.x > injectionSwitch.y)))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), false, false), false)))), bvec3(bvec4(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))), _GLF_IDENTITY(false, false || (false)), false), _GLF_IDENTITY(bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))), false, false), bvec3(bvec4(bvec3(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))), false, false), false))), false)), bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))), false, false), bvec3(bvec4(bvec3(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))), false, false), false))), false)), bvec3(bvec4(bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))), _GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, (false) && true))))), false), bvec3(bvec4(bvec3(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))), false, false), false))), false)), _GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(true, bool(bvec4(true, true, true, false))), false, true, true)), true && (bool(bvec4(_GLF_IDENTITY(true, bool(bvec4(true, true, true, false))), false, true, true)))))))), true)))), bvec3(bvec4(bvec3(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(! (! ((injectionSwitch.x > injectionSwitch.y))), (! (! ((injectionSwitch.x > injectionSwitch.y)))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), false, false), false)))), true)))), false)))))))))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(false))
          barrier();
         barrier();
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(false))
          barrier();
        }
       barrier();
      }
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))))))
        barrier();
       return;
      }
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false)))) || _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(injectionSwitch.x > injectionSwitch.y, false), bvec2(bvec4(bvec2(injectionSwitch.x > injectionSwitch.y, false), true, false)))), ! (! (_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(injectionSwitch.x > injectionSwitch.y, false), bvec2(bvec4(bvec2(injectionSwitch.x > injectionSwitch.y, false), true, false)))), bool(bvec3(bool(_GLF_IDENTITY(bvec2(injectionSwitch.x > injectionSwitch.y, false), bvec2(bvec4(bvec2(injectionSwitch.x > injectionSwitch.y, false), true, false)))), false, false)))))))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))))))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, false || (false)), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))) - _GLF_IDENTITY(0.0, float(mat4x2(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-21.67)), bool(false))), 1.0, sqrt(0.0), 1.0, 0.0, length(vec3(0.0, 0.0, 0.0)), _GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(1.0, length(vec3(0.0, 0.0, 0.0)), 0.0)), dot(vec3(1.0, 0.0, 0.0), vec3(1.0, length(vec3(0.0, 0.0, 0.0)), 0.0))), 0.0))))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, (false) && true), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), (! (_GLF_DEAD(false))) || false))))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   return;
  }
 if(_GLF_DEAD(false))
  barrier();
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
        return;
       return;
      }
     if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_DEAD(false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     barrier();
    }
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, _GLF_IDENTITY(true, false || (true)), true, true)), ! (! (bool(bvec4(false, _GLF_IDENTITY(true, false || (true)), true, true)))))), true && (_GLF_IDENTITY(false, bool(bvec4(false, true, true, true)))))))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, false, false)), true && (bool(bvec3(false, false, false))))), _GLF_IDENTITY(! (! (false)), false || (_GLF_IDENTITY(! (! (false)), bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(! (! (false))), ! (! (bool(! (! (false)))))), ! (! (_GLF_IDENTITY(bool(_GLF_IDENTITY(! (! (false)), (! (! (false))) || false)), ! (! _GLF_IDENTITY((bool(! (! (false)))), ! (! (_GLF_IDENTITY((bool(! (! (false)))), bool(bool((bool(! (! (false)))))))))))))))))))))))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       return;
       if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) || false), (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))))))
      return;
     return;
     if(_GLF_DEAD(false))
      barrier();
    }
   return;
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY((false), false || _GLF_IDENTITY(((false)), (((false))) && true)) && true)))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, true, true)), true && (bool(bvec3(false, true, true)))))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        return;
       return;
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), (! ((injectionSwitch.x > injectionSwitch.y))) && true))))))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (_GLF_IDENTITY(false, (false) && true))), ! (! (! (! (_GLF_IDENTITY(false, (false) && true)))))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0) > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))), ! (! ((injectionSwitch.x > injectionSwitch.y)))))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true)) && true))
    return;
   barrier();
  }
 uint num_workgroup = gl_NumWorkGroups.x;
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY((false ? _GLF_FUZZED(asinh(_GLF_IDENTITY(_GLF_IDENTITY(-2.7, clamp(-2.7, _GLF_IDENTITY(-2.7, min(-2.7, -2.7)), -2.7)), mix(float(_GLF_FUZZED(float(bvec3(false, false, true).x))), float(_GLF_IDENTITY(_GLF_IDENTITY(-2.7, clamp(-2.7, _GLF_IDENTITY(-2.7, min(-2.7, -2.7)), -2.7)), mix(float(_GLF_IDENTITY(-2.7, clamp(-2.7, _GLF_IDENTITY(-2.7, min(-2.7, -2.7)), -2.7))), float(_GLF_FUZZED(4.9)), bool(false)))), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))) : _GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-7802.1998)), bool(false))), mix(float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-7802.1998)), bool(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(false, (false) && true))), (bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, (false) && true)), (bool(_GLF_IDENTITY(false, (false) && true))) || false))) && true))))), max(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(-8716.5190))), mix(float(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat4x3(injectionSwitch, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, abs(1.0), 1.0, 1.0, 0.0)), min(vec2(mat4x3(injectionSwitch, _GLF_IDENTITY(0.0, 1.0 * (0.0)), 1.0, 1.0, 1.0, 1.0, 1.0, abs(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0))), _GLF_IDENTITY(1.0, (1.0) + 0.0), 1.0, 0.0)), vec2(mat4x3(injectionSwitch, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, abs(1.0), 1.0, 1.0, 0.0))))).x), float(_GLF_FUZZED(-7802.1998)), bool(false))), (_GLF_IDENTITY(true ? _GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-7802.1998)), bool(false))) : _GLF_FUZZED(27.19), (_GLF_IDENTITY(true ? _GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-7802.1998)), bool(false))) : _GLF_FUZZED(27.19), mix(float(_GLF_FUZZED(-3320.3221)), float(_GLF_IDENTITY(true ? _GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-7802.1998)), bool(false))) : _GLF_FUZZED(27.19), mix(float(_GLF_FUZZED(7.9)), float(true ? _GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-7802.1998)), bool(false))) : _GLF_FUZZED(27.19)), bool(true)))), bool(true)))) / 1.0))), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(mix(float(injectionSwitch.x), float(_GLF_FUZZED(-7802.1998)), bool(false)), clamp(mix(float(injectionSwitch.x), float(_GLF_FUZZED(-7802.1998)), bool(false)), mix(float(injectionSwitch.x), float(_GLF_IDENTITY(_GLF_FUZZED(-7802.1998), min(_GLF_FUZZED(-7802.1998), _GLF_FUZZED(-7802.1998)))), bool(false)), mix(float(injectionSwitch.x), float(_GLF_FUZZED(_GLF_IDENTITY(-7802.1998, (-7802.1998) * 1.0))), bool(false))))), (true ? _GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-7802.1998)), _GLF_IDENTITY(bool(false), bool(bvec4(bool(false), false, true, false))))) : _GLF_FUZZED(27.19)))) * 1.0), _GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-7802.1998)), bool(false)))))), float(_GLF_FUZZED(7119.1287)), bool(false))), injectionSwitch.x))), min(_GLF_IDENTITY((false ? _GLF_FUZZED(asinh(_GLF_IDENTITY(-2.7, clamp(-2.7, _GLF_IDENTITY(-2.7, min(-2.7, -2.7)), -2.7)))) : _GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(mix(float(injectionSwitch.x), float(_GLF_FUZZED(-7802.1998)), bool(false)), max(_GLF_IDENTITY(mix(float(injectionSwitch.x), float(_GLF_FUZZED(-7802.1998)), bool(false)), min(mix(float(injectionSwitch.x), float(_GLF_FUZZED(-7802.1998)), bool(false)), _GLF_IDENTITY(mix(float(injectionSwitch.x), float(_GLF_FUZZED(-7802.1998)), bool(false)), clamp(mix(float(injectionSwitch.x), float(_GLF_FUZZED(-7802.1998)), bool(false)), mix(float(injectionSwitch.x), float(_GLF_FUZZED(-7802.1998)), bool(false)), mix(float(injectionSwitch.x), float(_GLF_FUZZED(-7802.1998)), bool(false)))))), _GLF_IDENTITY(mix(float(injectionSwitch.x), float(_GLF_FUZZED(-7802.1998)), bool(false)), float(vec4(mix(float(injectionSwitch.x), float(_GLF_FUZZED(-7802.1998)), bool(false)), 0.0, 0.0, 1.0)))))), _GLF_IDENTITY(mix(_GLF_IDENTITY(float(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-7802.1998)), bool(false))), max(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-7802.1998)), bool(false))), (true ? _GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-7802.1998)), bool(false))) : _GLF_FUZZED(27.19))), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(mix(float(injectionSwitch.x), float(_GLF_FUZZED(-7802.1998)), bool(false)), clamp(mix(float(injectionSwitch.x), float(_GLF_FUZZED(-7802.1998)), bool(false)), mix(float(injectionSwitch.x), float(_GLF_FUZZED(-7802.1998)), bool(false)), mix(float(injectionSwitch.x), float(_GLF_FUZZED(-7802.1998)), bool(false))))), (true ? _GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-7802.1998)), bool(false))) : _GLF_FUZZED(27.19)))) * 1.0), _GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-7802.1998)), bool(false))))), mix(float(_GLF_FUZZED(-54.46)), float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-7802.1998)), bool(false))), max(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-7802.1998)), bool(false))), (true ? _GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-7802.1998)), bool(false))) : _GLF_FUZZED(27.19))), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(mix(float(injectionSwitch.x), float(_GLF_FUZZED(-7802.1998)), bool(false)), clamp(mix(float(injectionSwitch.x), float(_GLF_FUZZED(-7802.1998)), bool(false)), mix(float(injectionSwitch.x), float(_GLF_FUZZED(-7802.1998)), bool(false)), mix(float(injectionSwitch.x), float(_GLF_FUZZED(-7802.1998)), bool(false))))), (true ? _GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-7802.1998)), bool(false))) : _GLF_FUZZED(27.19)))) * 1.0), _GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-7802.1998)), bool(false)))))), bool(true)))), max(float(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-7802.1998)), bool(false))), max(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-7802.1998)), bool(false))), (true ? _GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-7802.1998)), bool(false))) : _GLF_FUZZED(27.19))), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(mix(float(injectionSwitch.x), float(_GLF_FUZZED(-7802.1998)), bool(false)), clamp(mix(float(injectionSwitch.x), float(_GLF_FUZZED(-7802.1998)), bool(false)), mix(float(injectionSwitch.x), float(_GLF_FUZZED(-7802.1998)), bool(false)), mix(float(injectionSwitch.x), float(_GLF_FUZZED(-7802.1998)), bool(false))))), (true ? _GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-7802.1998)), bool(false))) : _GLF_FUZZED(27.19)))) * 1.0), _GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-7802.1998)), bool(false))))), mix(float(_GLF_FUZZED(-54.46)), float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-7802.1998)), bool(false))), max(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-7802.1998)), bool(false))), (true ? _GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-7802.1998)), bool(false))) : _GLF_FUZZED(27.19))), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(mix(float(injectionSwitch.x), float(_GLF_FUZZED(-7802.1998)), bool(false)), clamp(mix(float(injectionSwitch.x), float(_GLF_FUZZED(-7802.1998)), bool(false)), mix(float(injectionSwitch.x), float(_GLF_FUZZED(-7802.1998)), bool(false)), mix(float(injectionSwitch.x), float(_GLF_FUZZED(-7802.1998)), bool(false))))), (true ? _GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-7802.1998)), bool(false))) : _GLF_FUZZED(27.19)))) * 1.0), _GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-7802.1998)), bool(false)))))), bool(true)))), float(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-7802.1998)), bool(false))), max(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-7802.1998)), bool(false))), (true ? _GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-7802.1998)), bool(false))) : _GLF_FUZZED(27.19))), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(mix(float(injectionSwitch.x), float(_GLF_FUZZED(-7802.1998)), bool(false)), clamp(mix(float(injectionSwitch.x), float(_GLF_FUZZED(-7802.1998)), bool(false)), mix(float(injectionSwitch.x), float(_GLF_FUZZED(-7802.1998)), bool(false)), mix(float(injectionSwitch.x), float(_GLF_FUZZED(-7802.1998)), bool(false))))), (true ? _GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-7802.1998)), bool(false))) : _GLF_FUZZED(27.19)))) * 1.0), _GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-7802.1998)), bool(false))))), mix(float(_GLF_FUZZED(-54.46)), float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-7802.1998)), bool(false))), max(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-7802.1998)), bool(false))), (true ? _GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-7802.1998)), bool(false))) : _GLF_FUZZED(27.19))), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(mix(float(injectionSwitch.x), float(_GLF_FUZZED(-7802.1998)), bool(false)), clamp(mix(float(injectionSwitch.x), float(_GLF_FUZZED(-7802.1998)), bool(false)), mix(float(injectionSwitch.x), float(_GLF_FUZZED(-7802.1998)), bool(false)), mix(float(injectionSwitch.x), float(_GLF_FUZZED(-7802.1998)), bool(false))))), (true ? _GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-7802.1998)), bool(false))) : _GLF_FUZZED(27.19)))) * 1.0), _GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-7802.1998)), bool(false)))))), bool(true)))))), float(_GLF_FUZZED(7119.1287)), bool(false)), max(mix(_GLF_IDENTITY(float(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-7802.1998)), bool(false))), max(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-7802.1998)), bool(false))), (true ? _GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-7802.1998)), bool(false))) : _GLF_FUZZED(27.19))), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(mix(float(injectionSwitch.x), float(_GLF_FUZZED(-7802.1998)), bool(false)), clamp(mix(float(injectionSwitch.x), float(_GLF_FUZZED(-7802.1998)), bool(false)), mix(float(injectionSwitch.x), float(_GLF_FUZZED(-7802.1998)), bool(false)), mix(float(injectionSwitch.x), float(_GLF_FUZZED(-7802.1998)), bool(false))))), (true ? _GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-7802.1998)), bool(false))) : _GLF_FUZZED(27.19)))) * 1.0), _GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-7802.1998)), bool(false))))), mix(float(_GLF_FUZZED(-54.46)), float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-7802.1998)), bool(false))), max(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-7802.1998)), bool(false))), (true ? _GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-7802.1998)), bool(false))) : _GLF_FUZZED(27.19))), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(mix(float(injectionSwitch.x), float(_GLF_FUZZED(-7802.1998)), bool(false)), clamp(mix(float(injectionSwitch.x), float(_GLF_FUZZED(-7802.1998)), bool(false)), mix(float(injectionSwitch.x), float(_GLF_FUZZED(-7802.1998)), bool(false)), mix(float(injectionSwitch.x), float(_GLF_FUZZED(-7802.1998)), bool(false))))), (true ? _GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-7802.1998)), bool(false))) : _GLF_FUZZED(27.19)))) * 1.0), _GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-7802.1998)), bool(false)))))), bool(true)))), max(float(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-7802.1998)), bool(false))), max(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-7802.1998)), bool(false))), (true ? _GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-7802.1998)), bool(false))) : _GLF_FUZZED(27.19))), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(mix(float(injectionSwitch.x), float(_GLF_FUZZED(-7802.1998)), bool(false)), clamp(mix(float(injectionSwitch.x), float(_GLF_FUZZED(-7802.1998)), bool(false)), mix(float(injectionSwitch.x), float(_GLF_FUZZED(-7802.1998)), bool(false)), mix(float(injectionSwitch.x), float(_GLF_FUZZED(-7802.1998)), bool(false))))), (true ? _GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-7802.1998)), bool(false))) : _GLF_FUZZED(27.19)))) * 1.0), _GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-7802.1998)), bool(false))))), mix(float(_GLF_FUZZED(-54.46)), float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-7802.1998)), bool(false))), max(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-7802.1998)), bool(false))), (true ? _GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-7802.1998)), bool(false))) : _GLF_FUZZED(27.19))), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(mix(float(injectionSwitch.x), float(_GLF_FUZZED(-7802.1998)), bool(false)), clamp(mix(float(injectionSwitch.x), float(_GLF_FUZZED(-7802.1998)), bool(false)), mix(float(injectionSwitch.x), float(_GLF_FUZZED(-7802.1998)), bool(false)), mix(float(injectionSwitch.x), float(_GLF_FUZZED(-7802.1998)), bool(false))))), (true ? _GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-7802.1998)), bool(false))) : _GLF_FUZZED(27.19)))) * 1.0), _GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-7802.1998)), bool(false)))))), bool(true)))), float(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-7802.1998)), bool(false))), max(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-7802.1998)), bool(false))), (true ? _GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-7802.1998)), bool(false))) : _GLF_FUZZED(27.19))), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(mix(float(injectionSwitch.x), float(_GLF_FUZZED(-7802.1998)), bool(false)), clamp(mix(float(injectionSwitch.x), float(_GLF_FUZZED(-7802.1998)), bool(false)), mix(float(injectionSwitch.x), float(_GLF_FUZZED(-7802.1998)), bool(false)), mix(float(injectionSwitch.x), float(_GLF_FUZZED(-7802.1998)), bool(false))))), (true ? _GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-7802.1998)), bool(false))) : _GLF_FUZZED(27.19)))) * 1.0), _GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-7802.1998)), bool(false))))), mix(float(_GLF_FUZZED(-54.46)), float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-7802.1998)), bool(false))), max(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-7802.1998)), bool(false))), (true ? _GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-7802.1998)), bool(false))) : _GLF_FUZZED(27.19))), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(mix(float(injectionSwitch.x), float(_GLF_FUZZED(-7802.1998)), bool(false)), clamp(mix(float(injectionSwitch.x), float(_GLF_FUZZED(-7802.1998)), bool(false)), mix(float(injectionSwitch.x), float(_GLF_FUZZED(-7802.1998)), bool(false)), mix(float(injectionSwitch.x), float(_GLF_FUZZED(-7802.1998)), bool(false))))), (true ? _GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-7802.1998)), bool(false))) : _GLF_FUZZED(27.19)))) * 1.0), _GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-7802.1998)), bool(false)))))), bool(true)))))), float(_GLF_FUZZED(7119.1287)), bool(false)), mix(_GLF_IDENTITY(float(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-7802.1998)), bool(false))), max(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-7802.1998)), bool(false))), (true ? _GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-7802.1998)), bool(false))) : _GLF_FUZZED(27.19))), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(mix(float(injectionSwitch.x), float(_GLF_FUZZED(-7802.1998)), bool(false)), clamp(mix(float(injectionSwitch.x), float(_GLF_FUZZED(-7802.1998)), bool(false)), mix(float(injectionSwitch.x), float(_GLF_FUZZED(-7802.1998)), bool(false)), mix(float(injectionSwitch.x), float(_GLF_FUZZED(-7802.1998)), bool(false))))), (true ? _GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-7802.1998)), bool(false))) : _GLF_FUZZED(27.19)))) * 1.0), _GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-7802.1998)), bool(false))))), mix(float(_GLF_FUZZED(-54.46)), float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-7802.1998)), bool(false))), max(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-7802.1998)), bool(false))), (true ? _GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-7802.1998)), bool(false))) : _GLF_FUZZED(27.19))), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(mix(float(injectionSwitch.x), float(_GLF_FUZZED(-7802.1998)), bool(false)), clamp(mix(float(injectionSwitch.x), float(_GLF_FUZZED(-7802.1998)), bool(false)), mix(float(injectionSwitch.x), float(_GLF_FUZZED(-7802.1998)), bool(false)), mix(float(injectionSwitch.x), float(_GLF_FUZZED(-7802.1998)), bool(false))))), (true ? _GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-7802.1998)), bool(false))) : _GLF_FUZZED(27.19)))) * 1.0), _GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-7802.1998)), bool(false)))))), bool(true)))), max(float(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-7802.1998)), bool(false))), max(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-7802.1998)), bool(false))), (true ? _GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-7802.1998)), bool(false))) : _GLF_FUZZED(27.19))), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(mix(float(injectionSwitch.x), float(_GLF_FUZZED(-7802.1998)), bool(false)), clamp(mix(float(injectionSwitch.x), float(_GLF_FUZZED(-7802.1998)), bool(false)), mix(float(injectionSwitch.x), float(_GLF_FUZZED(-7802.1998)), bool(false)), mix(float(injectionSwitch.x), float(_GLF_FUZZED(-7802.1998)), bool(false))))), (true ? _GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-7802.1998)), bool(false))) : _GLF_FUZZED(27.19)))) * 1.0), _GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-7802.1998)), bool(false))))), mix(float(_GLF_FUZZED(-54.46)), float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-7802.1998)), bool(false))), max(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-7802.1998)), bool(false))), (true ? _GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-7802.1998)), bool(false))) : _GLF_FUZZED(27.19))), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(mix(float(injectionSwitch.x), float(_GLF_FUZZED(-7802.1998)), bool(false)), clamp(mix(float(injectionSwitch.x), float(_GLF_FUZZED(-7802.1998)), bool(false)), mix(float(injectionSwitch.x), float(_GLF_FUZZED(-7802.1998)), bool(false)), mix(float(injectionSwitch.x), float(_GLF_FUZZED(-7802.1998)), bool(false))))), (true ? _GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-7802.1998)), bool(false))) : _GLF_FUZZED(27.19)))) * 1.0), _GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-7802.1998)), bool(false)))))), bool(true)))), float(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-7802.1998)), bool(false))), max(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-7802.1998)), bool(false))), (true ? _GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-7802.1998)), bool(false))) : _GLF_FUZZED(27.19))), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(mix(float(injectionSwitch.x), float(_GLF_FUZZED(-7802.1998)), bool(false)), clamp(mix(float(injectionSwitch.x), float(_GLF_FUZZED(-7802.1998)), bool(false)), mix(float(injectionSwitch.x), float(_GLF_FUZZED(-7802.1998)), bool(false)), mix(float(injectionSwitch.x), float(_GLF_FUZZED(-7802.1998)), bool(false))))), (true ? _GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-7802.1998)), bool(false))) : _GLF_FUZZED(27.19)))) * 1.0), _GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-7802.1998)), bool(false))))), mix(float(_GLF_FUZZED(-54.46)), float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-7802.1998)), bool(false))), max(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-7802.1998)), bool(false))), (true ? _GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-7802.1998)), bool(false))) : _GLF_FUZZED(27.19))), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(mix(float(injectionSwitch.x), float(_GLF_FUZZED(-7802.1998)), bool(false)), clamp(mix(float(injectionSwitch.x), float(_GLF_FUZZED(-7802.1998)), bool(false)), mix(float(injectionSwitch.x), float(_GLF_FUZZED(-7802.1998)), bool(false)), mix(float(injectionSwitch.x), float(_GLF_FUZZED(-7802.1998)), bool(false))))), (true ? _GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-7802.1998)), bool(false))) : _GLF_FUZZED(27.19)))) * 1.0), _GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-7802.1998)), bool(false)))))), bool(true)))))), float(_GLF_FUZZED(7119.1287)), bool(false))))), injectionSwitch.x))), mix(float((false ? _GLF_IDENTITY(_GLF_FUZZED(asinh(_GLF_IDENTITY(_GLF_IDENTITY(-2.7, mix(float(_GLF_FUZZED(-8.4)), float(-2.7), bool(true))), clamp(-2.7, _GLF_IDENTITY(-2.7, min(-2.7, -2.7)), -2.7)))), (false ? _GLF_FUZZED(-76.88) : _GLF_FUZZED(asinh(_GLF_IDENTITY(-2.7, clamp(-2.7, _GLF_IDENTITY(-2.7, min(-2.7, -2.7)), -2.7)))))) : _GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-7802.1998)), bool(false))), mix(float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(_GLF_IDENTITY(-7802.1998, float(mat2x4(-7802.1998, 1.0, 1.0, 1.0, 1.0, _GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(0.0, 1.0, 1.0)), _GLF_IDENTITY(dot(vec3(1.0, 0.0, _GLF_IDENTITY(0.0, (0.0) / 1.0)), vec3(0.0, 1.0, 1.0)), float(mat4(dot(vec3(1.0, 0.0, 0.0), vec3(0.0, 1.0, 1.0)), 0.0, 1.0, 1.0, 1.0, _GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0, 0.0)), 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0)))), 1.0, 0.0))))), bool(false))), max(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(mix(float(injectionSwitch.x), float(_GLF_FUZZED(-7802.1998)), bool(false)), (true ? mix(float(injectionSwitch.x), float(_GLF_FUZZED(-7802.1998)), bool(false)) : _GLF_FUZZED(vec4(-9133.0857, 486.941, 49.59, 70.06).r)))), (true ? _GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(_GLF_IDENTITY(-7802.1998, (true ? -7802.1998 : _GLF_FUZZED(mod(-2570.5291, 15.95)))))), bool(false))) : _GLF_FUZZED(27.19))), 0.0 + (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(mix(float(injectionSwitch.x), float(_GLF_FUZZED(-7802.1998)), bool(false)), _GLF_IDENTITY((true ? mix(float(injectionSwitch.x), float(_GLF_FUZZED(-7802.1998)), bool(false)) : _GLF_FUZZED(vec4(-9133.0857, 486.941, 49.59, 70.06).r)), ((true ? mix(float(injectionSwitch.x), float(_GLF_FUZZED(-7802.1998)), bool(false)) : _GLF_FUZZED(vec4(-9133.0857, 486.941, 49.59, 70.06).r))) / 1.0))), (true ? _GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(_GLF_IDENTITY(-7802.1998, (true ? -7802.1998 : _GLF_FUZZED(mod(-2570.5291, 15.95)))))), bool(false))) : _GLF_FUZZED(27.19))))), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(mix(float(injectionSwitch.x), float(_GLF_FUZZED(-7802.1998)), bool(false)), clamp(mix(float(injectionSwitch.x), float(_GLF_FUZZED(-7802.1998)), bool(false)), mix(float(injectionSwitch.x), float(_GLF_FUZZED(-7802.1998)), bool(false)), mix(float(injectionSwitch.x), float(_GLF_FUZZED(-7802.1998)), bool(false))))), (true ? _GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-7802.1998)), bool(false))) : _GLF_FUZZED(27.19)))) * 1.0), _GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-7802.1998)), bool(false)))))), float(_GLF_FUZZED(7119.1287)), bool(false))), injectionSwitch.x)))), float(_GLF_FUZZED(-3.4)), bool(false))), (false ? _GLF_FUZZED(asinh(_GLF_IDENTITY(-2.7, clamp(-2.7, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(-2.7, clamp(-2.7, _GLF_IDENTITY(-2.7, clamp(-2.7, -2.7, -2.7)), _GLF_IDENTITY(-2.7, (-2.7) / 1.0))), (true ? -2.7 : _GLF_FUZZED(9794.8513))), min(-2.7, -2.7)), -2.7)))) : _GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-7802.1998)), bool(false))), mix(float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_IDENTITY(_GLF_FUZZED(-7802.1998), float(vec4(_GLF_FUZZED(-7802.1998), 0.0, 0.0, sqrt(1.0))))), bool(false))), max(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x), float(_GLF_FUZZED(-7802.1998)), bool(false))), (true ? _GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-7802.1998)), bool(false))) : _GLF_FUZZED(27.19))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(mix(float(injectionSwitch.x), float(_GLF_IDENTITY(_GLF_FUZZED(-7802.1998), (_GLF_FUZZED(-7802.1998)) + 0.0)), bool(false)), clamp(mix(float(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x), float(_GLF_FUZZED(-7802.1998)), bool(false)), mix(float(injectionSwitch.x), float(_GLF_FUZZED(-7802.1998)), bool(false)), mix(float(injectionSwitch.x), float(_GLF_FUZZED(-7802.1998)), bool(false))))), (true ? _GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-7802.1998)), bool(false))) : _GLF_FUZZED(27.19))), mix(float(_GLF_FUZZED(89.07)), float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(mix(float(injectionSwitch.x), float(_GLF_FUZZED(-7802.1998)), bool(false)), clamp(mix(float(injectionSwitch.x), float(_GLF_FUZZED(-7802.1998)), bool(false)), mix(float(injectionSwitch.x), float(_GLF_FUZZED(-7802.1998)), bool(false)), mix(float(_GLF_IDENTITY(injectionSwitch, abs(vec2(0.0, 0.0)) + (injectionSwitch)).x), float(_GLF_FUZZED(-7802.1998)), bool(false))))), (true ? _GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-7802.1998)), bool(false))) : _GLF_FUZZED(27.19)))), bool(true)))) * 1.0), _GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), _GLF_IDENTITY(float(_GLF_FUZZED(-7802.1998)), (float(_GLF_FUZZED(-7802.1998))) - 0.0), bool(false)))))), float(_GLF_FUZZED(7119.1287)), bool(false))), injectionSwitch.x)))))) > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, true, true)))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], (injectionSwitch[0]) * 1.0), injectionSwitch[1])).x > injectionSwitch.y)))) && true)))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(false), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_DEAD(false), false, false))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bvec2(bvec4(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_DEAD(false), false, false))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), false, false))))))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          return;
         barrier();
        }
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     return;
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
      return;
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   return;
  }
 uint workgroup_size = _GLF_IDENTITY(gl_WorkGroupSize, uvec3(uvec3(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, ~ (_GLF_IDENTITY(_GLF_IDENTITY(~ (gl_WorkGroupSize), (false ? _GLF_FUZZED(uvec3(157831u, 79089u, 147118u)) : ~ (_GLF_IDENTITY(gl_WorkGroupSize, (_GLF_IDENTITY(gl_WorkGroupSize, min(gl_WorkGroupSize, gl_WorkGroupSize))) | uvec3(0u, 0u, 0u))))), (uvec3(54505u, 51002u, 59167u) & uvec3(0u, 0u, 0u)) + (_GLF_IDENTITY(~ (gl_WorkGroupSize), (false ? _GLF_FUZZED(uvec3(_GLF_IDENTITY(157831u, uint(uvec3(157831u, 1u, (1u & ((1u << _GLF_IDENTITY(uint(4u), uint(4u))) >> _GLF_IDENTITY(uint(4u), uint(4u))))))), 79089u, 147118u)) : ~ (_GLF_IDENTITY(gl_WorkGroupSize, (_GLF_IDENTITY(gl_WorkGroupSize, min(gl_WorkGroupSize, gl_WorkGroupSize))) | uvec3(0u, 0u, 0u))))))))), clamp(_GLF_IDENTITY(gl_WorkGroupSize, ~ (_GLF_IDENTITY(_GLF_IDENTITY(~ (gl_WorkGroupSize), (false ? _GLF_FUZZED(uvec3(157831u, 79089u, 147118u)) : ~ _GLF_IDENTITY((gl_WorkGroupSize), ((gl_WorkGroupSize)) / uvec3(1u, 1u, 1u)))), uvec3(0u, 0u, 0u) | (_GLF_IDENTITY(_GLF_IDENTITY(~ (gl_WorkGroupSize), (false ? _GLF_FUZZED(uvec3(157831u, 79089u, 147118u)) : ~ _GLF_IDENTITY((gl_WorkGroupSize), ((gl_WorkGroupSize)) / uvec3(1u, 1u, 1u)))), uvec3(uvec4(_GLF_IDENTITY(~ (gl_WorkGroupSize), (false ? _GLF_FUZZED(uvec3(157831u, 79089u, 147118u)) : ~ _GLF_IDENTITY((gl_WorkGroupSize), ((gl_WorkGroupSize)) / uvec3(1u, 1u, 1u)))), 1u))))))), _GLF_IDENTITY(gl_WorkGroupSize, ~ (_GLF_IDENTITY(~ (gl_WorkGroupSize), (false ? _GLF_FUZZED(uvec3(157831u, 79089u, 147118u)) : ~ (gl_WorkGroupSize))))), _GLF_IDENTITY(gl_WorkGroupSize, ~ (_GLF_IDENTITY(~ (gl_WorkGroupSize), (false ? _GLF_FUZZED(uvec3(157831u, 79089u, 147118u)) : ~ (gl_WorkGroupSize)))))))))).x;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 uint workgroup_id = gl_WorkGroupID.x;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(injectionSwitch.x > injectionSwitch.y, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)))), _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > injectionSwitch.y, bool(bvec4(injectionSwitch.x > injectionSwitch.y, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))))), false || (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)) : _GLF_FUZZED(vec2(3.6, -9.6)))).y)) || ((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[_GLF_IDENTITY(1, 0 + (1))])), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[_GLF_IDENTITY(1, (1) | (1))])), max(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))), _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))))) - vec2(0.0, 0.0)).x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, float(mat2x3(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), 1.0, 1.0, 1.0, 0.0, 1.0))))), bool(bvec4(injectionSwitch.x > injectionSwitch.y, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))))))))), (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x)) > injectionSwitch.y))) && true)))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec3(false, false, false))), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec3(false, false, false))), (_GLF_IDENTITY(false, bool(bvec3(false, false, false)))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, true), bvec3(bvec3(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec3(false, false, false))), (_GLF_IDENTITY(false, bool(bvec3(false, false, false)))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, true))))))))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(_GLF_IDENTITY(! (false), bool(bool(! (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, bool(bvec3(false, false, true))))))))))))), true && (_GLF_IDENTITY(! (false), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(! (false), ! (! (! (false)))), true, true), _GLF_IDENTITY(bvec3(bvec3(bvec3(_GLF_IDENTITY(! (false), ! (! (! (false)))), true, true))), bvec3(bvec3(bvec3(bvec3(bvec3(_GLF_IDENTITY(! (false), ! (! (! (false)))), true, true)))))))))))))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))), (_GLF_DEAD(_GLF_IDENTITY(false, true && (false)))) && true)) && true))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && true))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), min(mat2(1.0) * (injectionSwitch), mat2(1.0) * (injectionSwitch)))).y))))
        return;
       barrier();
      }
     if(_GLF_DEAD(false))
      return;
     return;
    }
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), false || (bool(false)))))))
  barrier();
 uint workgroup_base = workgroup_size * workgroup_id;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  return;
 uint virtual_gid = workgroup_base + subgroup_id * subgroup_size + subgroup_local_id;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))), true && ((injectionSwitch.x > injectionSwitch.y))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec4(! (false), true, true, _GLF_IDENTITY(false, ! (! (false))))), true && (bool(bvec4(! (false), true, true, false)))), _GLF_IDENTITY(true && (_GLF_IDENTITY(bool(bvec4(! (false), true, _GLF_IDENTITY(true, bool(_GLF_IDENTITY(bvec3(true, true, true), bvec3(bvec4(bvec3(true, true, true), false))))), false)), true && (bool(bvec4(! (false), true, true, false))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(true && (_GLF_IDENTITY(bool(bvec4(! (false), true, _GLF_IDENTITY(true, bool(_GLF_IDENTITY(bvec3(true, true, true), bvec3(bvec4(bvec3(true, true, true), false))))), false)), true && (bool(bvec4(! (false), true, true, false))))), (true && (_GLF_IDENTITY(bool(bvec4(! (false), true, _GLF_IDENTITY(true, bool(_GLF_IDENTITY(bvec3(true, true, true), bvec3(bvec4(bvec3(true, true, true), false))))), false)), true && (bool(bvec4(! (false), true, true, false)))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), true && (! (_GLF_IDENTITY(true && (_GLF_IDENTITY(bool(bvec4(! (false), true, _GLF_IDENTITY(true, bool(_GLF_IDENTITY(bvec3(true, true, true), bvec3(bvec4(bvec3(true, true, true), false))))), false)), true && (bool(bvec4(! (false), true, true, false))))), (true && (_GLF_IDENTITY(bool(bvec4(! (false), true, _GLF_IDENTITY(true, bool(_GLF_IDENTITY(bvec3(true, true, true), bvec3(bvec4(bvec3(true, true, true), false))))), false)), true && (bool(bvec4(! (false), true, true, false)))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))))))) || false)))
    {
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(true, false || (true)) && (false)), (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (injectionSwitch.x > injectionSwitch.y))))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(8.2, -7.2)) : injectionSwitch)).x > injectionSwitch.y))))
      barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), true && (! (! (false)))))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)))), (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))))) && true)), ! (! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)))), (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))))) && true)))))))))
  {
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y))))
    return;
  }
 if(_GLF_DEAD(false))
  return;
 uint next_virtual_gid = workgroup_base + _GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (subgroup_id) - 0u), (subgroup_id) | (subgroup_id))) | (_GLF_IDENTITY(subgroup_id, (subgroup_id) >> 0u))) * subgroup_size + _GLF_IDENTITY(((subgroup_local_id + 1) % subgroup_size), clamp(_GLF_IDENTITY(((subgroup_local_id + 1) % subgroup_size), ((_GLF_IDENTITY((subgroup_local_id + 1), (0u << _GLF_IDENTITY(uint(7u), uint(7u))) | ((subgroup_local_id + 1))) % subgroup_size)) >> 0u), _GLF_IDENTITY(((_GLF_IDENTITY(subgroup_local_id, 0u ^ (subgroup_local_id)) + 1) % subgroup_size), max(((subgroup_local_id + 1) % subgroup_size), _GLF_IDENTITY(((subgroup_local_id + 1) % subgroup_size), ~ (~ (((subgroup_local_id + 1) % subgroup_size)))))), ((subgroup_local_id + 1) % subgroup_size)));
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(true, (_GLF_IDENTITY(true, (true) && true)) || false) && (_GLF_IDENTITY(false, ! (! (false)))), false || (_GLF_IDENTITY(true && (_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((false), ((false)) || false)))), (true && (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, ! (! (false)))), (bool(_GLF_IDENTITY(false, ! (! (false))))) && true)))) || false))) || false)))), (injectionSwitch.x > injectionSwitch.y))))
  return;
 atomicStore(buf[virtual_gid], uint(1), 4, 64, 4);
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_IDENTITY(subgroup_local_id + 1 < subgroup_size, bool(bvec4(_GLF_IDENTITY(subgroup_local_id + 1 < subgroup_size, _GLF_IDENTITY(! (! (subgroup_local_id + 1 < subgroup_size)), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(! (! (subgroup_local_id + 1 < subgroup_size)), bool(bvec4(_GLF_IDENTITY(! (! (subgroup_local_id + 1 < subgroup_size)), (! (! (subgroup_local_id + 1 < subgroup_size))) && true), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, false)), bool(bvec2(bool(bvec4(_GLF_IDENTITY(! (! (subgroup_local_id + 1 < subgroup_size)), bool(bvec4(_GLF_IDENTITY(! (! (subgroup_local_id + 1 < subgroup_size)), (! (! (subgroup_local_id + 1 < subgroup_size))) && true), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, false)), true))))), false, false, false))))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-960.628)), bool(false))), injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y)))) || _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).y))))
    barrier();
   atomicStore(buf[next_virtual_gid], uint(2), 4, 64, 4);
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
        return;
       return;
      }
     return;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   subgroupAll(false);
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
      return;
     barrier();
    }
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x)), float(mat4(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x)), 1.0, tan(0.0), 0.0, 0.0, sin(0.0), 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0))), 0.0 + (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x)))) > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x)), 0.0 + (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x)))) > injectionSwitch.y)))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
  }
 else
  {
   atomicStore(buf[next_virtual_gid], uint(_GLF_IDENTITY(2, int(_GLF_IDENTITY(int(2), (int(2)) >> (0 | _GLF_IDENTITY(0, clamp(0, _GLF_IDENTITY(0, (0) * 1), _GLF_IDENTITY(0, (false ? _GLF_FUZZED(-70349) : 0))))))))), _GLF_IDENTITY(4, (4) - _GLF_IDENTITY((0 << _GLF_IDENTITY(int(0), int(0))), ~ (_GLF_IDENTITY(~ ((0 << _GLF_IDENTITY(int(0), int(0)))), (~ ((0 << _GLF_IDENTITY(int(0), int(0))))) << 0)))), 64, _GLF_IDENTITY(4, ~ (~ (_GLF_IDENTITY(4, clamp(4, 4, 4))))));
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   subgroupAll(true);
  }
}
