#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


struct _GLF_struct_25 {
 uint num_workgroup;
 bvec2 _f0;
 uvec4 _f1;
} ;

struct _GLF_struct_22 {
 mat3x4 _f0;
 ivec4 _f1;
 vec4 _f2;
 mat2x3 _f3;
 ivec4 _f4;
 bvec3 _f5;
 bool _f6;
} ;

struct _GLF_struct_21 {
 mat3 _f0;
 uint subgroup_size;
 mat3x4 _f1;
} ;

struct _GLF_struct_23 {
 mat3x2 _f0;
 _GLF_struct_21 _f1;
 _GLF_struct_22 _f2;
 uvec4 _f3;
 vec4 _f4;
 mat2x3 _f5;
} ;

struct _GLF_struct_24 {
 _GLF_struct_23 _f0;
 uvec2 _f1;
} ;

struct _GLF_struct_18 {
 ivec3 _f0;
 bool _f1;
 vec3 _f2;
 mat2x4 _f3;
 mat3x4 _f4;
} ;

struct _GLF_struct_17 {
 bvec2 _f0;
 mat2x4 _f1;
 mat4x2 _f2;
 mat4x2 _f3;
 uvec2 _f4;
} ;

struct _GLF_struct_16 {
 vec4 _f0;
} ;

struct _GLF_struct_19 {
 _GLF_struct_16 _f0;
 _GLF_struct_17 _f1;
 _GLF_struct_18 _f2;
 vec3 _f3;
} ;

struct _GLF_struct_15 {
 vec4 _f0;
 vec2 _f1;
} ;

struct _GLF_struct_20 {
 mat3x4 _f0;
 _GLF_struct_15 _f1;
 uint subgroup_base;
 _GLF_struct_19 _f2;
} ;

struct _GLF_struct_12 {
 bvec4 _f0;
 mat3 _f1;
 mat4 _f2;
 float _f3;
 mat2x3 _f4;
 ivec2 _f5;
 float _f6;
} ;

struct _GLF_struct_13 {
 _GLF_struct_12 _f0;
 uvec2 _f1;
 ivec3 _f2;
} ;

struct _GLF_struct_10 {
 ivec3 _f0;
 mat3 _f1;
 mat3x4 _f2;
 mat2x4 _f3;
} ;

struct _GLF_struct_11 {
 vec4 _f0;
 _GLF_struct_10 _f1;
 mat3x2 _f2;
} ;

struct _GLF_struct_8 {
 uint workgroup_size;
 mat4 _f0;
} ;

struct _GLF_struct_7 {
 uvec3 _f0;
 vec2 _f1;
 mat4x3 _f2;
 mat4x2 _f3;
} ;

struct _GLF_struct_6 {
 ivec3 _f0;
 ivec4 _f1;
 bool _f2;
 vec4 _f3;
 uvec2 _f4;
} ;

struct _GLF_struct_9 {
 _GLF_struct_6 _f0;
 mat4x3 _f1;
 _GLF_struct_7 _f2;
 _GLF_struct_8 _f3;
} ;

struct _GLF_struct_14 {
 _GLF_struct_9 _f0;
 mat3 _f1;
 _GLF_struct_11 _f2;
 vec2 _f3;
 ivec2 _f4;
 _GLF_struct_13 _f5;
 mat3x2 _f6;
} ;

struct _GLF_struct_3 {
 mat2x4 _f0;
 vec4 _f1;
} ;

struct _GLF_struct_2 {
 float _f0;
} ;

struct _GLF_struct_1 {
 mat3x2 _f0;
 mat2x3 _f1;
 uvec4 _f2;
 mat3x4 _f3;
} ;

struct _GLF_struct_4 {
 _GLF_struct_1 _f0;
 _GLF_struct_2 _f1;
 bvec2 _f2;
 uvec4 _f3;
 _GLF_struct_3 _f4;
} ;

struct _GLF_struct_0 {
 vec4 _f0;
 uvec4 _f1;
 mat3 _f2;
 mat4 _f3;
} ;

struct _GLF_struct_5 {
 _GLF_struct_0 _f0;
 _GLF_struct_4 _f1;
 uint subgroup_local_id;
} ;

layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
#extension GL_EXT_maximal_reconvergence : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 uint subgroup_id = gl_SubgroupID;
 _GLF_struct_24 _GLF_struct_replacement_24 = _GLF_struct_24(_GLF_struct_23(mat3x2(1.0), _GLF_struct_21(mat3(1.0), gl_SubgroupSize, mat3x4(1.0)), _GLF_struct_22(mat3x4(1.0), ivec4(1), vec4(1.0), mat2x3(1.0), ivec4(1), bvec3(true), true), uvec4(1u), vec4(1.0), mat2x3(1.0)), uvec2(1u));
 _GLF_struct_5 _GLF_struct_replacement_5 = _GLF_struct_5(_GLF_struct_0(vec4(1.0), uvec4(1u), mat3(1.0), mat4(1.0)), _GLF_struct_4(_GLF_struct_1(mat3x2(1.0), mat2x3(1.0), uvec4(1u), mat3x4(1.0)), _GLF_struct_2(1.0), bvec2(true), uvec4(1u), _GLF_struct_3(mat2x4(1.0), vec4(1.0))), gl_SubgroupInvocationID);
 _GLF_struct_25 _GLF_struct_replacement_25 = _GLF_struct_25(gl_NumWorkGroups.x, bvec2(true), uvec4(1u));
 if(_GLF_DEAD(false))
  barrier();
 _GLF_struct_14 _GLF_struct_replacement_14 = _GLF_struct_14(_GLF_struct_9(_GLF_struct_6(ivec3(1), ivec4(1), true, vec4(1.0), uvec2(1u)), mat4x3(1.0), _GLF_struct_7(uvec3(1u), vec2(1.0), mat4x3(1.0), mat4x2(1.0)), _GLF_struct_8(gl_WorkGroupSize.x, mat4(1.0))), mat3(1.0), _GLF_struct_11(vec4(1.0), _GLF_struct_10(ivec3(1), mat3(1.0), mat3x4(1.0), mat2x4(1.0)), mat3x2(1.0)), vec2(1.0), ivec2(1), _GLF_struct_13(_GLF_struct_12(bvec4(true), mat3(1.0), mat4(1.0), 1.0, mat2x3(1.0), ivec2(1), 1.0), uvec2(1u), ivec3(1)), mat3x2(1.0));
 uint workgroup_id = gl_WorkGroupID.x;
 uint workgroup_base = _GLF_struct_replacement_14._f0._f3.workgroup_size * workgroup_id;
 _GLF_struct_20 _GLF_struct_replacement_20 = _GLF_struct_20(mat3x4(1.0), _GLF_struct_15(vec4(1.0), vec2(1.0)), subgroup_id * _GLF_struct_replacement_24._f0._f1.subgroup_size, _GLF_struct_19(_GLF_struct_16(vec4(1.0)), _GLF_struct_17(bvec2(true), mat2x4(1.0), mat4x2(1.0), mat4x2(1.0), uvec2(1u)), _GLF_struct_18(ivec3(1), true, vec3(1.0), mat2x4(1.0), mat3x4(1.0)), vec3(1.0)));
 uint virtual_gid = workgroup_base + _GLF_struct_replacement_20.subgroup_base + _GLF_struct_replacement_5.subgroup_local_id;
 uint next_virtual_gid = workgroup_base + _GLF_struct_replacement_20.subgroup_base + ((_GLF_struct_replacement_5.subgroup_local_id + 1) % _GLF_struct_replacement_24._f0._f1.subgroup_size);
 atomicStore(buf[virtual_gid], uint(1), 4, 64, 4);
 if((_GLF_struct_replacement_5.subgroup_local_id % 2) == 0)
  {
   subgroupAll(true);
   atomicStore(buf[next_virtual_gid], uint(2), 4, 64, 4);
  }
 else
  {
   subgroupAll(false);
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   atomicStore(buf[next_virtual_gid], uint(2), 4, 64, 4);
  }
}
