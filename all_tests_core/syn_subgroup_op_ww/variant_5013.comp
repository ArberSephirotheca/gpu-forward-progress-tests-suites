#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
#extension GL_EXT_maximal_reconvergence : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint subgroup_size = gl_SubgroupSize;
 uint subgroup_local_id = gl_SubgroupInvocationID;
 uint num_workgroup = gl_NumWorkGroups.x;
 uint workgroup_size = gl_WorkGroupSize.x;
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(false), (bool(false)) && true)), ! (! (bool(bool(false))))))), true && (_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(false), (bool(false)) && true), true && (_GLF_IDENTITY(bool(false), (bool(false)) && true)))), ! (! (bool(bool(false))))))))))
  barrier();
 uint workgroup_id = gl_WorkGroupID.x;
 if(_GLF_DEAD(false))
  barrier();
 uint workgroup_base = _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_size, (workgroup_size) - uint(_GLF_ZERO(0.0, injectionSwitch.x))) * workgroup_id, (_GLF_IDENTITY(workgroup_size, (_GLF_IDENTITY(workgroup_size, ~ (~ (workgroup_size)))) - uint(_GLF_ZERO(0.0, injectionSwitch.x))) * _GLF_IDENTITY(_GLF_IDENTITY(workgroup_id, clamp(_GLF_IDENTITY(workgroup_id, (true ? workgroup_id : _GLF_FUZZED(uvec2(122661u, 114012u).y))), _GLF_IDENTITY(workgroup_id, (workgroup_id) ^ 0u), workgroup_id)), (_GLF_IDENTITY(workgroup_id, clamp(_GLF_IDENTITY(workgroup_id, (true ? workgroup_id : _GLF_FUZZED(uvec2(122661u, 114012u).y))), _GLF_IDENTITY(workgroup_id, (workgroup_id) ^ 0u), workgroup_id))) << 0u)) | 0u), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_size, (workgroup_size) - uint(_GLF_ZERO(0.0, injectionSwitch.x))) * workgroup_id, _GLF_IDENTITY(uint(uvec4(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_size, (workgroup_size) - uint(_GLF_ZERO(0.0, injectionSwitch.x))) * workgroup_id, (_GLF_IDENTITY(workgroup_size, (workgroup_size) - uint(_GLF_ZERO(0.0, injectionSwitch.x))) * workgroup_id) * 1u), (0u & 108493u), 1u, 0u)), clamp(uint(uvec4(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_size, (workgroup_size) - uint(_GLF_ZERO(0.0, injectionSwitch.x))) * workgroup_id, (_GLF_IDENTITY(workgroup_size, (workgroup_size) - uint(_GLF_ZERO(0.0, injectionSwitch.x))) * workgroup_id) * 1u), (0u & 108493u), 1u, 0u)), uint(uvec4(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_size, (workgroup_size) - uint(_GLF_ZERO(0.0, injectionSwitch.x))) * workgroup_id, (_GLF_IDENTITY(workgroup_size, (workgroup_size) - uint(_GLF_ZERO(0.0, injectionSwitch.x))) * workgroup_id) * 1u), (0u & 108493u), 1u, 0u)), uint(uvec4(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_size, (workgroup_size) - uint(_GLF_ZERO(0.0, injectionSwitch.x))) * workgroup_id, min(_GLF_IDENTITY(workgroup_size, (workgroup_size) - uint(_GLF_ZERO(0.0, injectionSwitch.x))) * workgroup_id, _GLF_IDENTITY(workgroup_size, (workgroup_size) - uint(_GLF_ZERO(0.0, injectionSwitch.x))) * workgroup_id)), (_GLF_IDENTITY(workgroup_size, (workgroup_size) - uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x, injectionSwitch.x))))) * workgroup_id) * 1u), (0u & 108493u), 1u, 0u))))), (_GLF_IDENTITY(workgroup_size, (_GLF_IDENTITY(workgroup_size, uint(uint(workgroup_size)))) - uint(_GLF_ZERO(0.0, injectionSwitch.x))) * workgroup_id) | 0u)) | 0u);
 if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_DEAD(false))))), bool(bool(_GLF_IDENTITY(bool(_GLF_DEAD(false)), _GLF_IDENTITY(! (! (bool(_GLF_DEAD(false)))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(! (! (bool(_GLF_DEAD(false)))), _GLF_IDENTITY(bool(bvec3(! (! (bool(_GLF_DEAD(false)))), false, false)), bool(bvec4(bool(bvec3(! (! (bool(_GLF_DEAD(false)))), false, false)), false, true, true)))), (_GLF_IDENTITY(_GLF_IDENTITY(! (! (bool(_GLF_DEAD(false)))), bool(bvec4(! (! (bool(_GLF_DEAD(false)))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))), _GLF_IDENTITY(bool(bvec3(! (! (bool(_GLF_DEAD(false)))), false, false)), bool(bvec4(bool(bvec3(! (! (bool(_GLF_DEAD(false)))), false, false)), false, true, true))))) || false)), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(bool(_GLF_IDENTITY(! (! (bool(_GLF_DEAD(false)))), _GLF_IDENTITY(bool(bvec3(! (! (bool(_GLF_DEAD(false)))), false, false)), bool(bvec4(bool(bvec3(! (! (bool(_GLF_DEAD(false)))), false, false)), false, true, true))))), true && (_GLF_IDENTITY(bool(_GLF_IDENTITY(! (! (bool(_GLF_DEAD(false)))), _GLF_IDENTITY(bool(bvec3(! (! (bool(_GLF_DEAD(false)))), false, false)), bool(bvec4(bool(bvec3(! (! (bool(_GLF_DEAD(false)))), false, false)), false, true, true))))), ! (! (bool(_GLF_IDENTITY(! (! (bool(_GLF_DEAD(false)))), _GLF_IDENTITY(bool(bvec3(! (! (bool(_GLF_DEAD(false)))), false, false)), bool(bvec4(bool(bvec3(! (! (bool(_GLF_DEAD(false)))), false, false)), false, true, true)))))))))), false, true, true)), _GLF_IDENTITY(bool(bvec2(bool(bvec4(_GLF_IDENTITY(bool(_GLF_IDENTITY(! (! (bool(_GLF_DEAD(false)))), _GLF_IDENTITY(bool(bvec3(! (! (bool(_GLF_DEAD(false)))), false, false)), bool(bvec4(bool(bvec3(! (! (bool(_GLF_DEAD(false)))), false, false)), false, true, true))))), true && (_GLF_IDENTITY(bool(_GLF_IDENTITY(! (! (bool(_GLF_DEAD(false)))), _GLF_IDENTITY(bool(bvec3(! (! (bool(_GLF_DEAD(false)))), false, false)), bool(bvec4(bool(bvec3(! (! (bool(_GLF_DEAD(false)))), false, false)), false, true, true))))), ! (! (bool(_GLF_IDENTITY(! (! (bool(_GLF_DEAD(false)))), _GLF_IDENTITY(bool(bvec3(! (! (bool(_GLF_DEAD(false)))), false, false)), bool(bvec4(bool(bvec3(! (! (bool(_GLF_DEAD(false)))), false, false)), false, true, true)))))))))), false, true, true)), _GLF_IDENTITY(false, bool(bvec3(false, false, false))))), _GLF_IDENTITY(bool(bvec2(bool(bvec2(bool(bvec4(_GLF_IDENTITY(bool(_GLF_IDENTITY(! (! (bool(_GLF_DEAD(false)))), _GLF_IDENTITY(bool(bvec3(! (! (bool(_GLF_DEAD(false)))), false, false)), bool(bvec4(bool(bvec3(! (! (bool(_GLF_DEAD(false)))), false, false)), false, true, true))))), true && (_GLF_IDENTITY(bool(_GLF_IDENTITY(! (! (bool(_GLF_DEAD(false)))), _GLF_IDENTITY(bool(bvec3(! (! (bool(_GLF_DEAD(false)))), false, false)), bool(bvec4(bool(bvec3(! (! (bool(_GLF_DEAD(false)))), false, false)), false, true, true))))), ! (! (bool(_GLF_IDENTITY(! (! (bool(_GLF_DEAD(false)))), _GLF_IDENTITY(bool(bvec3(! (! (bool(_GLF_DEAD(false)))), false, false)), bool(bvec4(bool(bvec3(! (! (bool(_GLF_DEAD(false)))), false, false)), false, true, true)))))))))), false, true, true)), _GLF_IDENTITY(false, bool(bvec3(false, false, false))))), true)), ! (! (bool(bvec2(bool(bvec2(bool(bvec4(_GLF_IDENTITY(bool(_GLF_IDENTITY(! (! (bool(_GLF_DEAD(false)))), _GLF_IDENTITY(bool(bvec3(! (! (bool(_GLF_DEAD(false)))), false, false)), bool(bvec4(bool(bvec3(! (! (bool(_GLF_DEAD(false)))), false, false)), false, true, true))))), true && (_GLF_IDENTITY(bool(_GLF_IDENTITY(! (! (bool(_GLF_DEAD(false)))), _GLF_IDENTITY(bool(bvec3(! (! (bool(_GLF_DEAD(false)))), false, false)), bool(bvec4(bool(bvec3(! (! (bool(_GLF_DEAD(false)))), false, false)), false, true, true))))), ! (! (bool(_GLF_IDENTITY(! (! (bool(_GLF_DEAD(false)))), _GLF_IDENTITY(bool(bvec3(! (! (bool(_GLF_DEAD(false)))), false, false)), bool(bvec4(bool(bvec3(! (! (bool(_GLF_DEAD(false)))), false, false)), false, true, true)))))))))), false, true, true)), _GLF_IDENTITY(false, bool(bvec3(false, false, false))))), true))))))))), bool(_GLF_IDENTITY(bvec2(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(! (! (bool(_GLF_DEAD(false)))), _GLF_IDENTITY(bool(bvec3(! (! (bool(_GLF_DEAD(false)))), false, false)), bool(bvec4(bool(bvec3(! (! (bool(_GLF_DEAD(false)))), false, false)), false, true, true)))), (_GLF_IDENTITY(_GLF_IDENTITY(! (! (bool(_GLF_DEAD(false)))), bool(bvec4(! (! (bool(_GLF_DEAD(false)))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))), _GLF_IDENTITY(bool(bvec3(! (! (bool(_GLF_DEAD(false)))), false, false)), bool(bvec4(bool(bvec3(! (! (bool(_GLF_DEAD(false)))), false, false)), false, true, true))))) || false)), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(bool(_GLF_IDENTITY(! (! (bool(_GLF_DEAD(false)))), _GLF_IDENTITY(bool(bvec3(! (! (bool(_GLF_DEAD(false)))), false, false)), bool(bvec4(bool(bvec3(! (! (bool(_GLF_DEAD(false)))), false, false)), false, true, true))))), true && (_GLF_IDENTITY(bool(_GLF_IDENTITY(! (! (bool(_GLF_DEAD(false)))), _GLF_IDENTITY(bool(bvec3(! (! (bool(_GLF_DEAD(false)))), false, false)), bool(bvec4(bool(bvec3(! (! (bool(_GLF_DEAD(false)))), false, false)), false, true, true))))), ! (! (bool(_GLF_IDENTITY(! (! (bool(_GLF_DEAD(false)))), _GLF_IDENTITY(bool(bvec3(! (! (bool(_GLF_DEAD(false)))), false, false)), bool(bvec4(bool(bvec3(! (! (bool(_GLF_DEAD(false)))), false, false)), false, true, true)))))))))), false, true, true)), _GLF_IDENTITY(bool(bvec2(bool(bvec4(_GLF_IDENTITY(bool(_GLF_IDENTITY(! (! (bool(_GLF_DEAD(false)))), _GLF_IDENTITY(bool(bvec3(! (! (bool(_GLF_DEAD(false)))), false, false)), bool(bvec4(bool(bvec3(! (! (bool(_GLF_DEAD(false)))), false, false)), false, true, true))))), true && (_GLF_IDENTITY(bool(_GLF_IDENTITY(! (! (bool(_GLF_DEAD(false)))), _GLF_IDENTITY(bool(bvec3(! (! (bool(_GLF_DEAD(false)))), false, false)), bool(bvec4(bool(bvec3(! (! (bool(_GLF_DEAD(false)))), false, false)), false, true, true))))), ! (! (bool(_GLF_IDENTITY(! (! (bool(_GLF_DEAD(false)))), _GLF_IDENTITY(bool(bvec3(! (! (bool(_GLF_DEAD(false)))), false, false)), bool(bvec4(bool(bvec3(! (! (bool(_GLF_DEAD(false)))), false, false)), false, true, true)))))))))), false, true, true)), _GLF_IDENTITY(false, bool(bvec3(false, false, false))))), _GLF_IDENTITY(bool(bvec2(bool(bvec2(bool(bvec4(_GLF_IDENTITY(bool(_GLF_IDENTITY(! (! (bool(_GLF_DEAD(false)))), _GLF_IDENTITY(bool(bvec3(! (! (bool(_GLF_DEAD(false)))), false, false)), bool(bvec4(bool(bvec3(! (! (bool(_GLF_DEAD(false)))), false, false)), false, true, true))))), true && (_GLF_IDENTITY(bool(_GLF_IDENTITY(! (! (bool(_GLF_DEAD(false)))), _GLF_IDENTITY(bool(bvec3(! (! (bool(_GLF_DEAD(false)))), false, false)), bool(bvec4(bool(bvec3(! (! (bool(_GLF_DEAD(false)))), false, false)), false, true, true))))), ! (! (bool(_GLF_IDENTITY(! (! (bool(_GLF_DEAD(false)))), _GLF_IDENTITY(bool(bvec3(! (! (bool(_GLF_DEAD(false)))), false, false)), bool(bvec4(bool(bvec3(! (! (bool(_GLF_DEAD(false)))), false, false)), false, true, true)))))))))), false, true, true)), _GLF_IDENTITY(false, bool(bvec3(false, false, false))))), true)), ! (! (bool(bvec2(bool(bvec2(bool(bvec4(_GLF_IDENTITY(bool(_GLF_IDENTITY(! (! (bool(_GLF_DEAD(false)))), _GLF_IDENTITY(bool(bvec3(! (! (bool(_GLF_DEAD(false)))), false, false)), bool(bvec4(bool(bvec3(! (! (bool(_GLF_DEAD(false)))), false, false)), false, true, true))))), true && (_GLF_IDENTITY(bool(_GLF_IDENTITY(! (! (bool(_GLF_DEAD(false)))), _GLF_IDENTITY(bool(bvec3(! (! (bool(_GLF_DEAD(false)))), false, false)), bool(bvec4(bool(bvec3(! (! (bool(_GLF_DEAD(false)))), false, false)), false, true, true))))), ! (! (bool(_GLF_IDENTITY(! (! (bool(_GLF_DEAD(false)))), _GLF_IDENTITY(bool(bvec3(! (! (bool(_GLF_DEAD(false)))), false, false)), bool(bvec4(bool(bvec3(! (! (bool(_GLF_DEAD(false)))), false, false)), false, true, true)))))))))), false, true, true)), _GLF_IDENTITY(false, bool(bvec3(false, false, false))))), true))))))))), false), bvec2(bvec3(bvec2(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(! (! (bool(_GLF_DEAD(false)))), _GLF_IDENTITY(bool(bvec3(! (! (bool(_GLF_DEAD(false)))), false, false)), bool(bvec4(bool(bvec3(! (! (bool(_GLF_DEAD(false)))), false, false)), false, true, true)))), (_GLF_IDENTITY(_GLF_IDENTITY(! (! (bool(_GLF_DEAD(false)))), bool(bvec4(! (! (bool(_GLF_DEAD(false)))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))), _GLF_IDENTITY(bool(bvec3(! (! (bool(_GLF_DEAD(false)))), false, false)), bool(bvec4(bool(bvec3(! (! (bool(_GLF_DEAD(false)))), false, false)), false, true, true))))) || false)), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(bool(_GLF_IDENTITY(! (! (bool(_GLF_DEAD(false)))), _GLF_IDENTITY(bool(bvec3(! (! (bool(_GLF_DEAD(false)))), false, false)), bool(bvec4(bool(bvec3(! (! (bool(_GLF_DEAD(false)))), false, false)), false, true, true))))), true && (_GLF_IDENTITY(bool(_GLF_IDENTITY(! (! (bool(_GLF_DEAD(false)))), _GLF_IDENTITY(bool(bvec3(! (! (bool(_GLF_DEAD(false)))), false, false)), bool(bvec4(bool(bvec3(! (! (bool(_GLF_DEAD(false)))), false, false)), false, true, true))))), ! (! (bool(_GLF_IDENTITY(! (! (bool(_GLF_DEAD(false)))), _GLF_IDENTITY(bool(bvec3(! (! (bool(_GLF_DEAD(false)))), false, false)), bool(bvec4(bool(bvec3(! (! (bool(_GLF_DEAD(false)))), false, false)), false, true, true)))))))))), false, true, true)), _GLF_IDENTITY(bool(bvec2(bool(bvec4(_GLF_IDENTITY(bool(_GLF_IDENTITY(! (! (bool(_GLF_DEAD(false)))), _GLF_IDENTITY(bool(bvec3(! (! (bool(_GLF_DEAD(false)))), false, false)), bool(bvec4(bool(bvec3(! (! (bool(_GLF_DEAD(false)))), false, false)), false, true, true))))), true && (_GLF_IDENTITY(bool(_GLF_IDENTITY(! (! (bool(_GLF_DEAD(false)))), _GLF_IDENTITY(bool(bvec3(! (! (bool(_GLF_DEAD(false)))), false, false)), bool(bvec4(bool(bvec3(! (! (bool(_GLF_DEAD(false)))), false, false)), false, true, true))))), ! (! (bool(_GLF_IDENTITY(! (! (bool(_GLF_DEAD(false)))), _GLF_IDENTITY(bool(bvec3(! (! (bool(_GLF_DEAD(false)))), false, false)), bool(bvec4(bool(bvec3(! (! (bool(_GLF_DEAD(false)))), false, false)), false, true, true)))))))))), false, true, true)), _GLF_IDENTITY(false, bool(bvec3(false, false, false))))), _GLF_IDENTITY(bool(bvec2(bool(bvec2(bool(bvec4(_GLF_IDENTITY(bool(_GLF_IDENTITY(! (! (bool(_GLF_DEAD(false)))), _GLF_IDENTITY(bool(bvec3(! (! (bool(_GLF_DEAD(false)))), false, false)), bool(bvec4(bool(bvec3(! (! (bool(_GLF_DEAD(false)))), false, false)), false, true, true))))), true && (_GLF_IDENTITY(bool(_GLF_IDENTITY(! (! (bool(_GLF_DEAD(false)))), _GLF_IDENTITY(bool(bvec3(! (! (bool(_GLF_DEAD(false)))), false, false)), bool(bvec4(bool(bvec3(! (! (bool(_GLF_DEAD(false)))), false, false)), false, true, true))))), ! (! (bool(_GLF_IDENTITY(! (! (bool(_GLF_DEAD(false)))), _GLF_IDENTITY(bool(bvec3(! (! (bool(_GLF_DEAD(false)))), false, false)), bool(bvec4(bool(bvec3(! (! (bool(_GLF_DEAD(false)))), false, false)), false, true, true)))))))))), false, true, true)), _GLF_IDENTITY(false, bool(bvec3(false, false, false))))), true)), ! (! (bool(bvec2(bool(bvec2(bool(bvec4(_GLF_IDENTITY(bool(_GLF_IDENTITY(! (! (bool(_GLF_DEAD(false)))), _GLF_IDENTITY(bool(bvec3(! (! (bool(_GLF_DEAD(false)))), false, false)), bool(bvec4(bool(bvec3(! (! (bool(_GLF_DEAD(false)))), false, false)), false, true, true))))), true && (_GLF_IDENTITY(bool(_GLF_IDENTITY(! (! (bool(_GLF_DEAD(false)))), _GLF_IDENTITY(bool(bvec3(! (! (bool(_GLF_DEAD(false)))), false, false)), bool(bvec4(bool(bvec3(! (! (bool(_GLF_DEAD(false)))), false, false)), false, true, true))))), ! (! (bool(_GLF_IDENTITY(! (! (bool(_GLF_DEAD(false)))), _GLF_IDENTITY(bool(bvec3(! (! (bool(_GLF_DEAD(false)))), false, false)), bool(bvec4(bool(bvec3(! (! (bool(_GLF_DEAD(false)))), false, false)), false, true, true)))))))))), false, true, true)), _GLF_IDENTITY(false, bool(bvec3(false, false, false))))), true))))))))), false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))))), ! _GLF_IDENTITY((_GLF_IDENTITY(! (bool(_GLF_IDENTITY(bool(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true))), bool(bool(bool(_GLF_DEAD(false))))))), bool(bvec4(! (bool(_GLF_IDENTITY(bool(_GLF_DEAD(false)), bool(bool(bool(_GLF_DEAD(false))))))), false, false, _GLF_IDENTITY(false, (false) || false))))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool((_GLF_IDENTITY(! (bool(_GLF_IDENTITY(bool(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true))), bool(bool(bool(_GLF_DEAD(false))))))), _GLF_IDENTITY(bool(bvec4(! (bool(_GLF_IDENTITY(bool(_GLF_DEAD(false)), bool(bool(bool(_GLF_DEAD(false))))))), false, false, _GLF_IDENTITY(false, (false) || _GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, false, false, _GLF_IDENTITY(true, ! (! (true))))), true && (bool(bvec4(false, false, false, _GLF_IDENTITY(true, ! (! (true))))))))))), (bool(bvec4(! (bool(_GLF_IDENTITY(bool(_GLF_DEAD(false)), bool(bool(bool(_GLF_DEAD(false))))))), false, false, _GLF_IDENTITY(false, (false) || _GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, false, false, _GLF_IDENTITY(true, ! (! (true))))), true && (bool(bvec4(false, false, false, _GLF_IDENTITY(true, ! (! (true)))))))))))) || false)))), bool(bvec3(bool((_GLF_IDENTITY(_GLF_IDENTITY(! (bool(_GLF_IDENTITY(bool(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true))), bool(bool(bool(_GLF_DEAD(false))))))), (! _GLF_IDENTITY((bool(_GLF_IDENTITY(bool(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true))), bool(bool(bool(_GLF_DEAD(false))))))), _GLF_IDENTITY(bool(bvec4((bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)), true && (_GLF_DEAD(_GLF_IDENTITY(false, (false) && true))))), bool(bool(bool(_GLF_DEAD(false))))))), _GLF_IDENTITY(false, bool(bool(false))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)), (_GLF_IDENTITY(bool(bvec4((bool(_GLF_IDENTITY(bool(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true))), bool(bool(bool(_GLF_DEAD(false))))))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)), ! (! (_GLF_IDENTITY(bool(bvec4((bool(_GLF_IDENTITY(bool(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true))), bool(bool(bool(_GLF_DEAD(false))))))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)), (bool(bvec4((bool(_GLF_IDENTITY(bool(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true))), bool(bool(bool(_GLF_DEAD(false))))))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))) && true))))) || false))) || _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(injectionSwitch.x > injectionSwitch.y, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), bool(bvec4(_GLF_IDENTITY(! (bool(_GLF_IDENTITY(bool(_GLF_DEAD(false)), bool(bool(bool(_GLF_DEAD(false))))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(! (_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_DEAD(false)), bool(bool(bool(_GLF_DEAD(false)))))), true && (bool(_GLF_IDENTITY(bool(_GLF_DEAD(false)), bool(bool(bool(_GLF_DEAD(false))))))))), bool(bvec2(_GLF_IDENTITY(! (bool(_GLF_IDENTITY(bool(_GLF_DEAD(false)), bool(bool(bool(_GLF_DEAD(false))))))), (! (bool(_GLF_IDENTITY(bool(_GLF_DEAD(false)), bool(bool(bool(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false)))))))))) || false), _GLF_IDENTITY(false, ! (! (false))))))), (! (_GLF_IDENTITY(! (bool(_GLF_IDENTITY(bool(_GLF_DEAD(false)), bool(bool(bool(_GLF_DEAD(false))))))), bool(bvec2(_GLF_IDENTITY(! (bool(_GLF_IDENTITY(bool(_GLF_DEAD(false)), bool(bool(bool(_GLF_DEAD(false))))))), (! (bool(_GLF_IDENTITY(bool(_GLF_DEAD(false)), bool(bool(bool(_GLF_DEAD(false)))))))) || false), false))))) || false))), false, false, _GLF_IDENTITY(false, (false) || false)))))), true, true)))), true && (_GLF_IDENTITY(bool(_GLF_IDENTITY(bool((_GLF_IDENTITY(! (bool(_GLF_IDENTITY(bool(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true))), bool(bool(bool(_GLF_DEAD(false))))))), _GLF_IDENTITY(bool(bvec4(! (bool(_GLF_IDENTITY(bool(_GLF_DEAD(false)), bool(bool(bool(_GLF_DEAD(false))))))), false, false, _GLF_IDENTITY(false, (false) || _GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, false, false, _GLF_IDENTITY(true, ! (! (true))))), true && (bool(bvec4(false, false, false, _GLF_IDENTITY(true, ! (! (true))))))))))), (bool(bvec4(! (bool(_GLF_IDENTITY(bool(_GLF_DEAD(false)), bool(bool(bool(_GLF_DEAD(false))))))), false, false, _GLF_IDENTITY(false, (false) || _GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, false, false, _GLF_IDENTITY(true, ! (! (true))))), true && (bool(bvec4(false, false, false, _GLF_IDENTITY(true, ! (! (true)))))))))))) || false)))), bool(bvec3(bool((_GLF_IDENTITY(_GLF_IDENTITY(! (bool(_GLF_IDENTITY(bool(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true))), bool(bool(bool(_GLF_DEAD(false))))))), (! _GLF_IDENTITY((bool(_GLF_IDENTITY(bool(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true))), bool(bool(bool(_GLF_DEAD(false))))))), _GLF_IDENTITY(bool(bvec4((bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)), true && (_GLF_DEAD(_GLF_IDENTITY(false, (false) && true))))), bool(bool(bool(_GLF_DEAD(false))))))), _GLF_IDENTITY(false, bool(bool(false))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)), (_GLF_IDENTITY(bool(bvec4((bool(_GLF_IDENTITY(bool(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true))), bool(bool(bool(_GLF_DEAD(false))))))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)), ! (! (_GLF_IDENTITY(bool(bvec4((bool(_GLF_IDENTITY(bool(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true))), bool(bool(bool(_GLF_DEAD(false))))))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)), (bool(bvec4((bool(_GLF_IDENTITY(bool(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true))), bool(bool(bool(_GLF_DEAD(false))))))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))) && true))))) || false))) || _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(injectionSwitch.x > injectionSwitch.y, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), bool(bvec4(_GLF_IDENTITY(! (bool(_GLF_IDENTITY(bool(_GLF_DEAD(false)), bool(bool(bool(_GLF_DEAD(false))))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(! (_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_DEAD(false)), bool(bool(bool(_GLF_DEAD(false)))))), true && (bool(_GLF_IDENTITY(bool(_GLF_DEAD(false)), bool(bool(bool(_GLF_DEAD(false))))))))), bool(bvec2(_GLF_IDENTITY(! (bool(_GLF_IDENTITY(bool(_GLF_DEAD(false)), bool(bool(bool(_GLF_DEAD(false))))))), (! (bool(_GLF_IDENTITY(bool(_GLF_DEAD(false)), bool(bool(bool(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false)))))))))) || false), _GLF_IDENTITY(false, ! (! (false))))))), (! (_GLF_IDENTITY(! (bool(_GLF_IDENTITY(bool(_GLF_DEAD(false)), bool(bool(bool(_GLF_DEAD(false))))))), bool(bvec2(_GLF_IDENTITY(! (bool(_GLF_IDENTITY(bool(_GLF_DEAD(false)), bool(bool(bool(_GLF_DEAD(false))))))), (! (bool(_GLF_IDENTITY(bool(_GLF_DEAD(false)), bool(bool(bool(_GLF_DEAD(false)))))))) || false), false))))) || false))), false, false, _GLF_IDENTITY(false, (false) || false)))))), true, true)))), false || (bool(_GLF_IDENTITY(bool((_GLF_IDENTITY(! (bool(_GLF_IDENTITY(bool(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true))), bool(bool(bool(_GLF_DEAD(false))))))), _GLF_IDENTITY(bool(bvec4(! (bool(_GLF_IDENTITY(bool(_GLF_DEAD(false)), bool(bool(bool(_GLF_DEAD(false))))))), false, false, _GLF_IDENTITY(false, (false) || _GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, false, false, _GLF_IDENTITY(true, ! (! (true))))), true && (bool(bvec4(false, false, false, _GLF_IDENTITY(true, ! (! (true))))))))))), (bool(bvec4(! (bool(_GLF_IDENTITY(bool(_GLF_DEAD(false)), bool(bool(bool(_GLF_DEAD(false))))))), false, false, _GLF_IDENTITY(false, (false) || _GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, false, false, _GLF_IDENTITY(true, ! (! (true))))), true && (bool(bvec4(false, false, false, _GLF_IDENTITY(true, ! (! (true)))))))))))) || false)))), bool(bvec3(bool((_GLF_IDENTITY(_GLF_IDENTITY(! (bool(_GLF_IDENTITY(bool(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true))), bool(bool(bool(_GLF_DEAD(false))))))), (! _GLF_IDENTITY((bool(_GLF_IDENTITY(bool(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true))), bool(bool(bool(_GLF_DEAD(false))))))), _GLF_IDENTITY(bool(bvec4((bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)), true && (_GLF_DEAD(_GLF_IDENTITY(false, (false) && true))))), bool(bool(bool(_GLF_DEAD(false))))))), _GLF_IDENTITY(false, bool(bool(false))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)), (_GLF_IDENTITY(bool(bvec4((bool(_GLF_IDENTITY(bool(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true))), bool(bool(bool(_GLF_DEAD(false))))))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)), ! (! (_GLF_IDENTITY(bool(bvec4((bool(_GLF_IDENTITY(bool(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true))), bool(bool(bool(_GLF_DEAD(false))))))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)), (bool(bvec4((bool(_GLF_IDENTITY(bool(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true))), bool(bool(bool(_GLF_DEAD(false))))))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))) && true))))) || false))) || _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(injectionSwitch.x > injectionSwitch.y, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), bool(bvec4(_GLF_IDENTITY(! (bool(_GLF_IDENTITY(bool(_GLF_DEAD(false)), bool(bool(bool(_GLF_DEAD(false))))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(! (_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_DEAD(false)), bool(bool(bool(_GLF_DEAD(false)))))), true && (bool(_GLF_IDENTITY(bool(_GLF_DEAD(false)), bool(bool(bool(_GLF_DEAD(false))))))))), bool(bvec2(_GLF_IDENTITY(! (bool(_GLF_IDENTITY(bool(_GLF_DEAD(false)), bool(bool(bool(_GLF_DEAD(false))))))), (! (bool(_GLF_IDENTITY(bool(_GLF_DEAD(false)), bool(bool(bool(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false)))))))))) || false), _GLF_IDENTITY(false, ! (! (false))))))), (! (_GLF_IDENTITY(! (bool(_GLF_IDENTITY(bool(_GLF_DEAD(false)), bool(bool(bool(_GLF_DEAD(false))))))), bool(bvec2(_GLF_IDENTITY(! (bool(_GLF_IDENTITY(bool(_GLF_DEAD(false)), bool(bool(bool(_GLF_DEAD(false))))))), (! (bool(_GLF_IDENTITY(bool(_GLF_DEAD(false)), bool(bool(bool(_GLF_DEAD(false)))))))) || false), false))))) || false))), false, false, _GLF_IDENTITY(false, (false) || false)))))), true, true))))))))))))
  barrier();
 uint subgroup_base = _GLF_IDENTITY(subgroup_id * subgroup_size, max(subgroup_id * subgroup_size, subgroup_id * subgroup_size));
 uint virtual_gid = _GLF_IDENTITY(workgroup_base + subgroup_base, uint(uvec4(workgroup_base + subgroup_base, 1u, 0u, 1u))) + subgroup_local_id;
 uint next_virtual_gid = _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, ~ _GLF_IDENTITY((~ (_GLF_IDENTITY(workgroup_base, (workgroup_base) + uint(_GLF_ZERO(0.0, injectionSwitch.x))))), max((~ (_GLF_IDENTITY(workgroup_base, (workgroup_base) + uint(_GLF_ZERO(0.0, injectionSwitch.x))))), (~ (_GLF_IDENTITY(workgroup_base, (workgroup_base) + uint(_GLF_ZERO(0.0, injectionSwitch.x)))))))) + subgroup_base, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, ~ (~ (_GLF_IDENTITY(workgroup_base, (workgroup_base) + uint(_GLF_ZERO(_GLF_IDENTITY(0.0, (0.0) / 1.0), injectionSwitch.x)))))) + subgroup_base, (_GLF_IDENTITY(workgroup_base, ~ (~ (_GLF_IDENTITY(workgroup_base, (workgroup_base) + uint(_GLF_ZERO(0.0, injectionSwitch.x)))))) + _GLF_IDENTITY(subgroup_base, (_GLF_IDENTITY(subgroup_base, _GLF_IDENTITY(clamp(subgroup_base, subgroup_base, subgroup_base), (clamp(subgroup_base, subgroup_base, subgroup_base)) - (181894u & 0u)))) / ((_GLF_IDENTITY(1u << _GLF_IDENTITY(uint(4u), uint(4u)), (true ? 1u << _GLF_IDENTITY(uint(4u), uint(4u)) : _GLF_FUZZED(workgroup_base)))) >> _GLF_IDENTITY(uint(4u), uint(4u))))) | (_GLF_IDENTITY(workgroup_base, ~ (~ (_GLF_IDENTITY(workgroup_base, (_GLF_IDENTITY(workgroup_base, 0u ^ (_GLF_IDENTITY(workgroup_base, min(workgroup_base, workgroup_base))))) + uint(_GLF_ZERO(0.0, injectionSwitch.x)))))) + subgroup_base))) - 0u, ~ (~ ((_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (workgroup_base) - 0u), (workgroup_base) + uint(_GLF_ZERO(0.0, injectionSwitch.x)))), (~ (_GLF_IDENTITY(workgroup_base, (workgroup_base) + uint(_GLF_ZERO(0.0, injectionSwitch.x))))) << 0u))) + subgroup_base, (_GLF_IDENTITY(workgroup_base, ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (workgroup_base) + uint(_GLF_ZERO(0.0, injectionSwitch.x))), (_GLF_IDENTITY(workgroup_base, (workgroup_base) + uint(_GLF_ZERO(0.0, injectionSwitch.x)))) | (_GLF_IDENTITY(workgroup_base, (workgroup_base) + uint(_GLF_ZERO(0.0, injectionSwitch.x)))))))) + _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_base, clamp(subgroup_base, _GLF_IDENTITY(subgroup_base, (subgroup_base) >> 0u), subgroup_base)), max(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_base, clamp(subgroup_base, _GLF_IDENTITY(subgroup_base, (subgroup_base) >> 0u), subgroup_base)), (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_base, clamp(subgroup_base, _GLF_IDENTITY(subgroup_base, (subgroup_base) >> 0u), subgroup_base)), clamp(_GLF_IDENTITY(subgroup_base, clamp(subgroup_base, _GLF_IDENTITY(subgroup_base, (subgroup_base) >> 0u), subgroup_base)), _GLF_IDENTITY(subgroup_base, clamp(subgroup_base, _GLF_IDENTITY(subgroup_base, (subgroup_base) >> 0u), subgroup_base)), _GLF_IDENTITY(subgroup_base, clamp(subgroup_base, _GLF_IDENTITY(subgroup_base, (subgroup_base) >> 0u), subgroup_base))))) + 0u), _GLF_IDENTITY(subgroup_base, clamp(subgroup_base, _GLF_IDENTITY(subgroup_base, (subgroup_base) >> 0u), subgroup_base)))), (_GLF_IDENTITY(subgroup_base, _GLF_IDENTITY(clamp(subgroup_base, subgroup_base, subgroup_base), (clamp(subgroup_base, subgroup_base, subgroup_base)) << (1u ^ 1u)))) / ((_GLF_IDENTITY(1u << _GLF_IDENTITY(uint(4u), uint(4u)), ~ (~ (1u << _GLF_IDENTITY(uint(4u), uint(_GLF_IDENTITY(4u, max(_GLF_IDENTITY(4u, (4u) >> 0u), 4u)))))))) >> _GLF_IDENTITY(uint(4u), _GLF_IDENTITY(uint(_GLF_IDENTITY(4u, 0u ^ (4u))), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(uint(4u), (false ? _GLF_FUZZED(subgroup_base) : uint(4u)))), (_GLF_IDENTITY(true ? ~ (_GLF_IDENTITY(uint(4u), (false ? _GLF_FUZZED(subgroup_base) : uint(4u)))) : _GLF_FUZZED(workgroup_id), (true ? ~ (_GLF_IDENTITY(uint(4u), (false ? _GLF_FUZZED(subgroup_base) : uint(4u)))) : _GLF_FUZZED(workgroup_id)) / 1u))))))))) | (_GLF_IDENTITY(workgroup_base, ~ (~ (_GLF_IDENTITY(workgroup_base, (workgroup_base) + uint(_GLF_ZERO(0.0, injectionSwitch.x)))))) + subgroup_base))) - 0u)))) + ((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, 0u | (subgroup_local_id)), (_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY(0u, 0u + (0u)) | (subgroup_local_id))) | (_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY(0u, (0u) | (_GLF_IDENTITY(0u, (false ? _GLF_FUZZED(_GLF_IDENTITY(atomicMin(subgroup_id, subgroup_base), ~ (~ (_GLF_IDENTITY(atomicMin(subgroup_id, subgroup_base), (false ? _GLF_FUZZED(num_workgroup) : atomicMin(subgroup_id, subgroup_base))))))) : 0u)))) | (subgroup_local_id)))) + 1, ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, max(subgroup_local_id, subgroup_local_id)), (_GLF_IDENTITY(subgroup_local_id, min(_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(uvec2(subgroup_local_id, _GLF_IDENTITY((uint(_GLF_ONE(1.0, injectionSwitch.y)) & ((_GLF_IDENTITY(1u, (true ? 1u : _GLF_FUZZED((usubBorrow(subgroup_id, subgroup_id, subgroup_id) % subgroup_id)))) << _GLF_IDENTITY(_GLF_IDENTITY(uint(1u), uint(1u)), max(_GLF_IDENTITY(uint(1u), uint(1u)), _GLF_IDENTITY(uint(1u), uint(1u))))) >> _GLF_IDENTITY(uint(1u), uint(1u)))), ((uint(_GLF_ONE(1.0, injectionSwitch.y)) & ((_GLF_IDENTITY(1u, (true ? 1u : _GLF_FUZZED((usubBorrow(subgroup_id, subgroup_id, subgroup_id) % subgroup_id)))) << _GLF_IDENTITY(_GLF_IDENTITY(uint(1u), uint(1u)), max(_GLF_IDENTITY(uint(1u), uint(1u)), _GLF_IDENTITY(uint(1u), uint(1u))))) >> _GLF_IDENTITY(uint(1u), uint(1u))))) | 0u)), (uvec2(subgroup_local_id, (uint(_GLF_ONE(1.0, injectionSwitch.y)) & ((1u << _GLF_IDENTITY(uint(1u), uint(_GLF_IDENTITY(1u, (true ? 1u : _GLF_FUZZED(subgroup_id)))))) >> _GLF_IDENTITY(uint(1u), uint(1u)))))) | (uvec2(subgroup_local_id, (uint(_GLF_ONE(1.0, injectionSwitch.y)) & ((_GLF_IDENTITY(1u << _GLF_IDENTITY(uint(1u), uint(1u)), max(_GLF_IDENTITY(1u << _GLF_IDENTITY(uint(1u), uint(1u)), 0u ^ (1u << _GLF_IDENTITY(uint(1u), uint(1u)))), 1u << _GLF_IDENTITY(uint(1u), uint(1u))))) >> _GLF_IDENTITY(uint(1u), uint(1u)))))))), (uint(_GLF_IDENTITY(uvec2(subgroup_local_id, (uint(_GLF_ONE(1.0, injectionSwitch.y)) & ((1u << _GLF_IDENTITY(uint(1u), uint(1u))) >> _GLF_IDENTITY(uint(1u), uint(1u))))), (_GLF_IDENTITY(uvec2(subgroup_local_id, (uint(_GLF_ONE(1.0, injectionSwitch.y)) & ((_GLF_IDENTITY(1u << _GLF_IDENTITY(uint(1u), uint(1u)), uint(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (_GLF_IDENTITY(1u << _GLF_IDENTITY(uint(1u), uint(1u)), (1u << _GLF_IDENTITY(uint(1u), uint(1u))) | 0u)))) >> _GLF_IDENTITY(uint(1u), uint(1u))))), uvec2(0u, 0u) | (uvec2(subgroup_local_id, (uint(_GLF_ONE(1.0, injectionSwitch.y)) & ((_GLF_IDENTITY(1u << _GLF_IDENTITY(uint(1u), uint(1u)), uint(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (_GLF_IDENTITY(1u << _GLF_IDENTITY(uint(1u), uint(1u)), (1u << _GLF_IDENTITY(uint(1u), uint(1u))) | 0u)))) >> _GLF_IDENTITY(uint(1u), uint(1u)))))))) | (uvec2(subgroup_local_id, (uint(_GLF_ONE(1.0, injectionSwitch.y)) & ((1u << _GLF_IDENTITY(uint(1u), uint(1u))) >> _GLF_IDENTITY(_GLF_IDENTITY(uint(1u), (_GLF_IDENTITY(uint(1u), min(uint(1u), uint(1u)))) - 0u), uint(1u))))))))) | (uint(_GLF_IDENTITY(uvec2(subgroup_local_id, (uint(_GLF_ONE(1.0, injectionSwitch.y)) & ((1u << _GLF_IDENTITY(uint(1u), uint(1u))) >> _GLF_IDENTITY(uint(_GLF_IDENTITY(1u, uint(_GLF_IDENTITY(uint(1u), ~ (~ (uint(1u))))))), uint(1u))))), (uvec2(subgroup_local_id, (uint(_GLF_ONE(1.0, injectionSwitch.y)) & ((1u << _GLF_IDENTITY(uint(1u), uint(1u))) >> _GLF_IDENTITY(uint(1u), uint(1u)))))) | (uvec2(subgroup_local_id, (uint(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(-385.722, -8.9)) : injectionSwitch)).y)) & ((1u << _GLF_IDENTITY(uint(1u), uint(1u))) >> _GLF_IDENTITY(uint(_GLF_IDENTITY(1u, ~ (~ (1u)))), _GLF_IDENTITY(uint(1u), ~ (~ (uint(1u))))))))))))), 0u | (_GLF_IDENTITY(uint(_GLF_IDENTITY(uvec2(subgroup_local_id, _GLF_IDENTITY((uint(_GLF_ONE(1.0, injectionSwitch.y)) & ((_GLF_IDENTITY(1u, (true ? 1u : _GLF_FUZZED((usubBorrow(subgroup_id, subgroup_id, subgroup_id) % subgroup_id)))) << _GLF_IDENTITY(_GLF_IDENTITY(uint(1u), uint(1u)), max(_GLF_IDENTITY(uint(1u), uint(1u)), _GLF_IDENTITY(uint(1u), uint(1u))))) >> _GLF_IDENTITY(uint(1u), uint(1u)))), ((uint(_GLF_ONE(1.0, injectionSwitch.y)) & ((_GLF_IDENTITY(1u, (true ? 1u : _GLF_FUZZED((usubBorrow(subgroup_id, subgroup_id, subgroup_id) % subgroup_id)))) << _GLF_IDENTITY(_GLF_IDENTITY(uint(1u), uint(1u)), max(_GLF_IDENTITY(uint(1u), uint(1u)), _GLF_IDENTITY(uint(1u), uint(1u))))) >> _GLF_IDENTITY(uint(1u), uint(1u))))) | 0u)), (uvec2(subgroup_local_id, (uint(_GLF_ONE(1.0, injectionSwitch.y)) & ((1u << _GLF_IDENTITY(uint(1u), uint(_GLF_IDENTITY(1u, (true ? 1u : _GLF_FUZZED(subgroup_id)))))) >> _GLF_IDENTITY(uint(1u), uint(1u)))))) | (uvec2(subgroup_local_id, (uint(_GLF_ONE(1.0, injectionSwitch.y)) & ((_GLF_IDENTITY(1u << _GLF_IDENTITY(uint(1u), uint(1u)), max(_GLF_IDENTITY(1u << _GLF_IDENTITY(uint(1u), uint(1u)), 0u ^ (1u << _GLF_IDENTITY(uint(1u), uint(1u)))), 1u << _GLF_IDENTITY(uint(1u), uint(1u))))) >> _GLF_IDENTITY(uint(1u), uint(1u)))))))), (uint(_GLF_IDENTITY(uvec2(subgroup_local_id, (uint(_GLF_ONE(1.0, injectionSwitch.y)) & ((1u << _GLF_IDENTITY(uint(1u), uint(1u))) >> _GLF_IDENTITY(uint(1u), uint(1u))))), (_GLF_IDENTITY(uvec2(subgroup_local_id, (uint(_GLF_ONE(1.0, injectionSwitch.y)) & ((_GLF_IDENTITY(1u << _GLF_IDENTITY(uint(1u), uint(1u)), uint(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (_GLF_IDENTITY(1u << _GLF_IDENTITY(uint(1u), uint(1u)), (1u << _GLF_IDENTITY(uint(1u), uint(1u))) | 0u)))) >> _GLF_IDENTITY(uint(1u), uint(1u))))), uvec2(0u, 0u) | (uvec2(subgroup_local_id, (uint(_GLF_ONE(1.0, injectionSwitch.y)) & ((_GLF_IDENTITY(1u << _GLF_IDENTITY(uint(1u), uint(1u)), uint(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (_GLF_IDENTITY(1u << _GLF_IDENTITY(uint(1u), uint(1u)), (1u << _GLF_IDENTITY(uint(1u), uint(1u))) | 0u)))) >> _GLF_IDENTITY(uint(1u), uint(1u)))))))) | (uvec2(subgroup_local_id, (uint(_GLF_ONE(1.0, injectionSwitch.y)) & ((1u << _GLF_IDENTITY(uint(1u), uint(1u))) >> _GLF_IDENTITY(_GLF_IDENTITY(uint(1u), (_GLF_IDENTITY(uint(1u), min(uint(1u), uint(1u)))) - 0u), uint(1u))))))))) | (uint(_GLF_IDENTITY(uvec2(subgroup_local_id, (uint(_GLF_ONE(1.0, injectionSwitch.y)) & ((1u << _GLF_IDENTITY(uint(1u), uint(1u))) >> _GLF_IDENTITY(uint(_GLF_IDENTITY(1u, uint(_GLF_IDENTITY(uint(1u), ~ (~ (uint(1u))))))), uint(1u))))), (uvec2(subgroup_local_id, (uint(_GLF_ONE(1.0, injectionSwitch.y)) & ((1u << _GLF_IDENTITY(uint(1u), uint(1u))) >> _GLF_IDENTITY(uint(1u), uint(1u)))))) | (uvec2(subgroup_local_id, (uint(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(-385.722, -8.9)) : injectionSwitch)).y)) & ((1u << _GLF_IDENTITY(uint(1u), uint(1u))) >> _GLF_IDENTITY(uint(_GLF_IDENTITY(1u, ~ (~ (1u)))), _GLF_IDENTITY(uint(1u), ~ (~ (uint(1u)))))))))))))))), _GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) * 1u)) << (uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-204.258)), vec2(_GLF_FUZZED((- 0.2)), (injectionSwitch)[1]), bvec2(false, true))).x)) << _GLF_IDENTITY(uint(5u), uint(5u))))))) >> 0u) + _GLF_IDENTITY(1, (_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) >> 0)) << 0)) | (_GLF_IDENTITY(1, min(1, 1)))))))) % _GLF_IDENTITY(subgroup_size, max(subgroup_size, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (subgroup_size) >> 0u), ~ _GLF_IDENTITY((~ (subgroup_size)), (false ? _GLF_FUZZED(virtual_gid) : (~ (subgroup_size))))), (subgroup_size) | (subgroup_size)))));
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, determinant(mat4(1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, cos(0.0), 1.0, 0.0, 1.0, 0.0, 0.0, 1.0)) * (_GLF_IDENTITY(injectionSwitch.x, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))) * (injectionSwitch.x)))) > injectionSwitch.y))))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).y))), bool(bvec3(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, false))))
  barrier();
 atomicStore(buf[virtual_gid], uint(_GLF_IDENTITY(1, max(_GLF_IDENTITY(1, (1) | (1)), _GLF_IDENTITY(1, (1) << _GLF_IDENTITY((0 >> _GLF_IDENTITY(int(8), int(8))), (false ? _GLF_FUZZED(-96167) : (0 >> _GLF_IDENTITY(int(_GLF_IDENTITY(8, (8) >> 0)), int(8))))))))), 4, 64, 4);
 if((subgroup_local_id % 2) == 0)
  {
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, false, true), bvec3(bvec4(bvec3(false, false, true), _GLF_IDENTITY(false, ! (! (false))))))))), ! (! (_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(false, _GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, _GLF_IDENTITY((false) && true, ! (! ((false) && true)))))), true), bvec3(bvec4(bvec3(false, false, true), _GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) || false))), bool(bool(_GLF_IDENTITY(false, ! (! (false)))))))))), ! (! (bool(_GLF_IDENTITY(bvec3(false, _GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, (false) && true))), true), bvec3(bvec4(bvec3(false, false, true), _GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), bool(bool(_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), ! (! (! (! (false))))))))))))))))))))))
    barrier();
   subgroupAll(true);
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(mat2x4(injectionSwitch, 0.0, 1.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(0.0, abs(1.0) * (_GLF_IDENTITY(0.0, float(mat3(0.0, 0.0, determinant(mat2(0.0, 0.0, 1.0, 0.0)), 1.0, 0.0, 1.0, 1.0, 1.0, 0.0)))))))).x > injectionSwitch.y)), true, false)))))
    barrier();
   if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))), bool(bool(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), false, false, true))), ! _GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_DEAD(false), false, true)))), bool(bvec4(! (_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_DEAD(false), false, true)))), false, true, false)))), ! (! ((_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_DEAD(false), false, true)))), bool(bvec4(! (_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_DEAD(false), false, true)))), false, true, false)))))))), ! (! _GLF_IDENTITY((_GLF_DEAD(false)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && ((_GLF_DEAD(false))))))))))), true, false)), (bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), false || _GLF_IDENTITY((_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false))))), false || ((_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))))), bool(bool(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false))))))))), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), false || _GLF_IDENTITY((_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false))))), false || ((_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))))), bool(bool(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false))))))))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), false || _GLF_IDENTITY((_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false))))), false || ((_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))))), bool(bool(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))))))) && true)), false || (bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), false || _GLF_IDENTITY((_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false))))), false || ((_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))))), bool(bool(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false))))))))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), false || _GLF_IDENTITY((_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false))))), false || ((_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))))), bool(bool(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))))))) && true)))))), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), false || _GLF_IDENTITY((_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false))))), false || ((_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))))), bool(bool(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false))))))))), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), false || _GLF_IDENTITY((_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false))))), false || ((_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))))), bool(bool(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false))))))))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), false || _GLF_IDENTITY((_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false))))), false || ((_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))))), bool(bool(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))))))) && true)), false || (bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), false || _GLF_IDENTITY((_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false))))), false || ((_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))))), bool(bool(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false))))))))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), false || _GLF_IDENTITY((_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false))))), false || ((_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))))), bool(bool(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))))))) && true)))))))), bool(bvec2(bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), false || _GLF_IDENTITY((_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false))))), false || ((_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))))), bool(bool(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false))))))))), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), false || _GLF_IDENTITY((_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false))))), false || ((_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))))), bool(bool(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false))))))))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), false || _GLF_IDENTITY((_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false))))), false || ((_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))))), bool(bool(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))))))) && true)), false || (bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), false || _GLF_IDENTITY((_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false))))), false || ((_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))))), bool(bool(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false))))))))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), false || _GLF_IDENTITY((_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false))))), false || ((_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))))), bool(bool(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))))))) && true)))))))), false)))), true, false))) || false)))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, 1.0 * (injectionSwitch.x)) > injectionSwitch.y), false || ((_GLF_IDENTITY(injectionSwitch.x, 1.0 * (injectionSwitch.x)) > injectionSwitch.y)))), ! (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (! (_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec4(false, false, true, _GLF_IDENTITY(true, ! (! (true)))))), _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y), ! (! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y))))))) && true)))))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
      barrier();
     if(_GLF_WRAPPED_IF_TRUE(true))
      {
       barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(((-9.4 / 77.12))), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(_GLF_IDENTITY(-5.4, (_GLF_IDENTITY(-5.4, max(-5.4, -5.4))) + 0.0))), bvec2(true, false))).y))))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(abs(vec2(0.0, 0.0)), (abs(vec2(0.0, 0.0))) / vec2(1.0, 1.0)), (abs(vec2(0.0, 0.0))) * vec2(1.0, 1.0)) + (injectionSwitch)).x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(false))
        barrier();
      }
     else
      {
       if(_GLF_DEAD(false))
        barrier();
      }
    }
   atomicStore(buf[next_virtual_gid], uint(2), 4, 64, 4);
  }
 else
  {
   subgroupAll(false);
   atomicStore(buf[next_virtual_gid], _GLF_IDENTITY(_GLF_IDENTITY(uint(2), ~ (~ (_GLF_IDENTITY(uint(2), ~ (~ (uint(2))))))), (_GLF_IDENTITY(uint(2), uint(uvec4(_GLF_IDENTITY(uint(2), _GLF_IDENTITY((false ? _GLF_FUZZED(subgroup_local_id) : _GLF_IDENTITY(uint(2), 0u | (_GLF_IDENTITY(uint(2), (uint(2)) * 1u)))), 0u + ((false ? _GLF_FUZZED(subgroup_local_id) : _GLF_IDENTITY(uint(2), 0u | (_GLF_IDENTITY(uint(2), (uint(2)) * 1u))))))), 0u, _GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), float(_GLF_IDENTITY(mat3x4(_GLF_ONE(1.0, injectionSwitch.y), 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 1.0, 0.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, determinant(mat3(sqrt(1.0), 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, sin(0.0), 1.0)), 0.0, 0.0), transpose(transpose(_GLF_IDENTITY(mat3x4(_GLF_ONE(1.0, injectionSwitch.y), 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 1.0, 0.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, determinant(mat3(sqrt(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED((false ? -2062.4282 : 2.6))), float(1.0), bool(true)))), 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, sin(0.0), 1.0)), 0.0, 0.0), mat3x4(mat3x4(mat3x4(_GLF_ONE(1.0, injectionSwitch.y), 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 1.0, 0.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, determinant(mat3(sqrt(1.0), 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, sin(0.0), 1.0)), 0.0, 0.0)))))))))), (uint(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), float(_GLF_IDENTITY(mat3x4(_GLF_ONE(1.0, injectionSwitch.y), 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 1.0, 0.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, determinant(mat3(sqrt(1.0), 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, sin(0.0), 1.0)), 0.0, 0.0), transpose(transpose(_GLF_IDENTITY(mat3x4(_GLF_ONE(1.0, injectionSwitch.y), 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 1.0, 0.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, determinant(mat3(sqrt(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED((false ? -2062.4282 : 2.6))), float(1.0), bool(true)))), 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, sin(0.0), 1.0)), 0.0, 0.0), mat3x4(mat3x4(mat3x4(_GLF_ONE(1.0, injectionSwitch.y), 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 1.0, 0.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, determinant(mat3(sqrt(1.0), 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, sin(0.0), 1.0)), 0.0, 0.0))))))))))) + (0u >> _GLF_IDENTITY(uint(6u), uint(6u)))), 0u)))) | (_GLF_IDENTITY(uint(2), max(uint(2), uint(2))))), 4, _GLF_IDENTITY(_GLF_IDENTITY(64, max(_GLF_IDENTITY(64, (64) + 0), _GLF_IDENTITY(_GLF_IDENTITY(64, int(_GLF_ONE(1.0, injectionSwitch.y)) * (64)), min(64, _GLF_IDENTITY(64, clamp(64, 64, 64)))))), min(_GLF_IDENTITY(64, max(_GLF_IDENTITY(64, (64) + 0), _GLF_IDENTITY(64, min(64, 64)))), _GLF_IDENTITY(64, max(_GLF_IDENTITY(64, (64) + 0), _GLF_IDENTITY(64, min(64, 64)))))), 4);
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
  barrier();
}
