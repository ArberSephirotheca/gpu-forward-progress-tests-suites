#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


struct _GLF_struct_6 {
 vec4 _f0;
 mat3x4 _f1;
} ;

struct _GLF_struct_7 {
 uint next_virtual_gid;
 _GLF_struct_6 _f0;
 vec4 _f1;
} ;

struct _GLF_struct_3 {
 uint _f0;
 mat4x3 _f1;
} ;

struct _GLF_struct_4 {
 _GLF_struct_3 _f0;
 uint _f1;
 uvec2 _f2;
} ;

struct _GLF_struct_1 {
 ivec4 _f0;
} ;

struct _GLF_struct_0 {
 mat2 _f0;
 uint _f1;
 uvec4 _f2;
 mat2 _f3;
 ivec4 _f4;
 mat3x4 _f5;
} ;

struct _GLF_struct_2 {
 _GLF_struct_0 _f0;
 _GLF_struct_1 _f1;
 float _f2;
} ;

struct _GLF_struct_5 {
 float _f0;
 int _f1;
 _GLF_struct_2 _f2;
 mat2 _f3;
 _GLF_struct_4 _f4;
 uvec2 _f5;
 uint workgroup_base;
} ;

layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
#extension GL_EXT_maximal_reconvergence : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec3(injectionSwitch.x > injectionSwitch.y, true, false))))), bool(bool(bool(bool(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec3(injectionSwitch.x > injectionSwitch.y, true, false)))))))))), (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false)), ! (! _GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), bool(bvec4(((injectionSwitch.x > injectionSwitch.y)), true, false, false))))))))) || false))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, true && (false))) || false))), (_GLF_IDENTITY(bool(bool(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, true && (false))) || false))), false || (bool(bool(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, true && (false))) || false)))))) && true))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! (false))))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 uint num_workgroup = gl_NumWorkGroups.x;
 uint workgroup_size = gl_WorkGroupSize.x;
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, _GLF_IDENTITY((false), ((false)) || false) && true)) || false), _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).y)), true))), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mix(vec2((injectionSwitch)[0], _GLF_FUZZED(2.6)), vec2(_GLF_FUZZED(-2.8), (injectionSwitch)[1]), bvec2(false, true)), min(mix(vec2((injectionSwitch)[0], _GLF_FUZZED(2.6)), vec2(_GLF_FUZZED(-2.8), (injectionSwitch)[1]), bvec2(false, true)), mix(vec2((injectionSwitch)[0], _GLF_FUZZED(2.6)), vec2(_GLF_FUZZED(-2.8), _GLF_IDENTITY((injectionSwitch)[1], max((injectionSwitch)[1], (injectionSwitch)[1]))), bvec2(false, true))))), injectionSwitch), mix(vec2((clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(2.6)), vec2(_GLF_FUZZED(-2.8), (_GLF_IDENTITY(injectionSwitch, vec2(mat2x4(injectionSwitch, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0))))[1]), bvec2(false, true))), injectionSwitch))[0], _GLF_FUZZED(1.5)), vec2(_GLF_FUZZED(64.35), (clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(2.6)), vec2(_GLF_FUZZED(-2.8), (injectionSwitch)[_GLF_IDENTITY(1, (1) - 0)]), bvec2(false, true))), injectionSwitch))[1]), bvec2(false, true)))).x) / 1.0) > injectionSwitch.y))), _GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! _GLF_IDENTITY((! (false)), ((! (false))) || false))))) || (_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) && true)) || false), _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).y), ((injectionSwitch.x < _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)), (injectionSwitch) - vec2(0.0, 0.0)).y)) || false)), true))), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x, (_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, mat2(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(step(distance(-9.3, -6.4), injectionSwitch)) : injectionSwitch)).y)) * (injectionSwitch)), injectionSwitch)), _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(2.6)), vec2(_GLF_IDENTITY(_GLF_FUZZED(-2.8), clamp(_GLF_FUZZED(-2.8), _GLF_FUZZED(-2.8), _GLF_FUZZED(-2.8))), _GLF_IDENTITY((injectionSwitch)[_GLF_IDENTITY(1, _GLF_IDENTITY((_GLF_IDENTITY(1, ~ (_GLF_IDENTITY(~ (1), (~ (1)) | (~ (1)))))) | 0, int(ivec2(_GLF_IDENTITY((_GLF_IDENTITY(1, ~ (_GLF_IDENTITY(_GLF_IDENTITY(~ (1), (~ (1)) | (~ (1))), min(_GLF_IDENTITY(~ (1), (~ (1)) | (~ (1))), _GLF_IDENTITY(~ (1), (~ (1)) | (~ (1)))))))) | 0, ((_GLF_IDENTITY(1, ~ (_GLF_IDENTITY(~ (1), (~ (1)) | (~ (1)))))) | 0) << (_GLF_IDENTITY(0, 0 ^ (0)) | 0)), 0))))], (_GLF_IDENTITY((injectionSwitch)[_GLF_IDENTITY(1, _GLF_IDENTITY((_GLF_IDENTITY(1, ~ (_GLF_IDENTITY(~ (1), (~ (1)) | (~ (1)))))) | 0, int(ivec2(_GLF_IDENTITY((_GLF_IDENTITY(1, ~ (_GLF_IDENTITY(~ (1), (~ (1)) | _GLF_IDENTITY((~ (1)), (true ? (~ (1)) : _GLF_FUZZED(47978))))))) | 0, ((_GLF_IDENTITY(1, ~ (_GLF_IDENTITY(~ (1), (~ (1)) | (~ (1)))))) | 0) << (0 | 0)), 0))))], max(_GLF_IDENTITY((injectionSwitch)[_GLF_IDENTITY(1, _GLF_IDENTITY((_GLF_IDENTITY(1, ~ (_GLF_IDENTITY(~ (1), (~ (1)) | (~ (1)))))) | 0, int(ivec2(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(1, ~ (_GLF_IDENTITY(~ (1), (~ (1)) | (~ (1)))))) | 0, ((_GLF_IDENTITY(1, ~ (_GLF_IDENTITY(~ (1), (~ (1)) | (~ (1)))))) | 0) << (0 | 0)), (_GLF_IDENTITY((_GLF_IDENTITY(1, ~ (_GLF_IDENTITY(~ (1), (~ (1)) | (~ (1)))))) | 0, ((_GLF_IDENTITY(1, ~ (_GLF_IDENTITY(~ (1), (~ (1)) | (~ (1)))))) | 0) << (0 | 0))) ^ 0), 0))))], (true ? (injectionSwitch)[_GLF_IDENTITY(1, _GLF_IDENTITY((_GLF_IDENTITY(1, ~ (_GLF_IDENTITY(~ (1), _GLF_IDENTITY((~ (1)) | (~ (1)), 0 | ((~ (1)) | (~ (1)))))))) | 0, int(ivec2(_GLF_IDENTITY((_GLF_IDENTITY(1, ~ (_GLF_IDENTITY(~ (1), (~ (1)) | (~ _GLF_IDENTITY((1), ((1)) | ((1)))))))) | 0, ((_GLF_IDENTITY(1, ~ (_GLF_IDENTITY(~ (1), (~ (1)) | (~ (1)))))) | 0) << (0 | 0)), 0))))] : _GLF_FUZZED(-4979.5841))), (injectionSwitch)[_GLF_IDENTITY(1, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(1, ~ (_GLF_IDENTITY(~ (1), (~ (1)) | (~ (1))))), (_GLF_IDENTITY(1, ~ (_GLF_IDENTITY(~ (1), (~ (1)) | (~ (1)))))) / 1)) | 0, int(ivec2(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(1, ~ (_GLF_IDENTITY(~ (1), (~ (1)) | (~ (1)))))) | 0, ((_GLF_IDENTITY(1, ~ (_GLF_IDENTITY(~ (1), (~ (1)) | (~ (1)))))) | 0) << (0 | 0)), max(_GLF_IDENTITY((_GLF_IDENTITY(1, ~ (_GLF_IDENTITY(~ (1), (~ (1)) | (~ (1)))))) | 0, ((_GLF_IDENTITY(1, ~ (_GLF_IDENTITY(~ (1), (~ (1)) | (~ (1)))))) | 0) << (0 | 0)), _GLF_IDENTITY((_GLF_IDENTITY(1, ~ (_GLF_IDENTITY(~ (1), (~ (1)) | (~ (1)))))) | 0, ((_GLF_IDENTITY(1, ~ (_GLF_IDENTITY(~ (1), (~ (1)) | (~ (1)))))) | 0) << (0 | 0)))), 0))))]))) * 1.0)), bvec2(false, true))), injectionSwitch)).x) / 1.0) > injectionSwitch.y))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 uint workgroup_id = _GLF_IDENTITY(gl_WorkGroupID.x, _GLF_IDENTITY(uint(uvec2(gl_WorkGroupID.x, 0u)), max(uint(uvec2(gl_WorkGroupID.x, 0u)), uint(uvec2(gl_WorkGroupID.x, 0u)))));
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 _GLF_struct_5 _GLF_struct_replacement_5 = _GLF_struct_5(_GLF_IDENTITY(1.0, 1.0 * (1.0)), _GLF_IDENTITY(1, min(_GLF_IDENTITY(1, clamp(1, _GLF_IDENTITY(1, max(1, 1)), 1)), _GLF_IDENTITY(1, (_GLF_IDENTITY(_GLF_IDENTITY(true, false || (true)), _GLF_IDENTITY(bool(bvec4(true, true, true, true)), false || (bool(bvec4(true, true, true, true))))) ? 1 : _GLF_IDENTITY(_GLF_FUZZED(58098), min(_GLF_FUZZED(58098), _GLF_FUZZED(58098))))))), _GLF_struct_2(_GLF_struct_0(mat2(1.0), 1u, _GLF_IDENTITY(_GLF_IDENTITY(uvec4(1u), uvec4(0u, 0u, 0u, 0u) | (uvec4(1u))), (uvec4(_GLF_IDENTITY(1u, clamp(1u, _GLF_IDENTITY(1u, max(1u, _GLF_IDENTITY(1u, min(1u, 1u)))), 1u)))) << uvec4(0u, _GLF_IDENTITY(0u, _GLF_IDENTITY((0u) - 0u, (_GLF_IDENTITY((0u) - 0u, ((0u) - 0u) - 0u)) | (_GLF_IDENTITY((0u) - 0u, ((0u) - 0u) / 1u)))), 0u, 0u)), mat2(1.0), ivec4(1), mat3x4(_GLF_IDENTITY(1.0, float(mat2x3(1.0, 1.0, 1.0, 1.0, 1.0, 0.0))))), _GLF_struct_1(ivec4(1)), 1.0), mat2(1.0), _GLF_struct_4(_GLF_struct_3(1u, mat4x3(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, _GLF_IDENTITY(1.0, float(vec4(1.0, _GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(1.0, 0.0, 1.0)), dot(vec3(0.0, _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-355.273)), float(1.0), bool(true))), 0.0), vec3(1.0, 0.0, 1.0))), 0.0, 0.0))))))), 1u, _GLF_IDENTITY(uvec2(1u), (_GLF_IDENTITY(uvec2(1u), uvec2(1u, 1u) * (uvec2(1u)))) | (uvec2(1u)))), uvec2(1u), workgroup_size * workgroup_id);
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 uint subgroup_base = subgroup_id * subgroup_size;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 uint virtual_gid = _GLF_struct_replacement_5.workgroup_base + _GLF_IDENTITY(subgroup_base, min(subgroup_base, subgroup_base)) + _GLF_IDENTITY(subgroup_local_id, 0u | (_GLF_IDENTITY(subgroup_local_id, 0u ^ (subgroup_local_id))));
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 _GLF_struct_7 _GLF_struct_replacement_7 = _GLF_struct_7(_GLF_struct_replacement_5.workgroup_base + subgroup_base + _GLF_IDENTITY(((_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, min(subgroup_local_id, subgroup_local_id))) ^ 0u) + 1) % subgroup_size), min(((subgroup_local_id + _GLF_IDENTITY(_GLF_IDENTITY(1, min(1, 1)), (_GLF_IDENTITY(_GLF_IDENTITY(1, min(1, 1)), (_GLF_IDENTITY(1, min(1, 1))) | 0)) | 0)) % subgroup_size), ((subgroup_local_id + 1) % subgroup_size))), _GLF_struct_6(vec4(1.0), mat3x4(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)))), _GLF_IDENTITY(vec4(1.0), clamp(_GLF_IDENTITY(vec4(1.0), (vec4(1.0)) / vec4(1.0, 1.0, 1.0, 1.0)), vec4(1.0), vec4(1.0))));
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 atomicStore(buf[virtual_gid], uint(1), 4, 64, 4);
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if((subgroup_local_id % _GLF_IDENTITY(_GLF_IDENTITY(2, int(ivec2(2, 0))), (_GLF_IDENTITY(2, int(ivec2(2, 0)))) << int(_GLF_ZERO(0.0, injectionSwitch.x)))) == 0)
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   subgroupAll(true);
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(true, ! (! (true))) && _GLF_IDENTITY((_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), _GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(true, ! (! (true))), true, false, false)), bool(bvec3(bool(bvec4(_GLF_IDENTITY(true, _GLF_IDENTITY(! (! (true)), true && (! (! (true))))), true, false, false)), true, true)))) && (! _GLF_IDENTITY((false), ! (! (_GLF_IDENTITY((false), ((false)) || false))))))))), _GLF_IDENTITY(bool(bvec4((_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, (false) && true)), true && (! _GLF_IDENTITY((false), ! (! (_GLF_IDENTITY((false), _GLF_IDENTITY(((false)), bool(bvec3(((false)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))) || false))))))))), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (bool(bvec4((_GLF_IDENTITY(false, ! (_GLF_IDENTITY(_GLF_IDENTITY(! (false), true && (! _GLF_IDENTITY(_GLF_IDENTITY((false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && ((false))), ! (! (_GLF_IDENTITY((false), ((false)) || false)))))), false || (_GLF_IDENTITY(! (false), _GLF_IDENTITY(true && (! _GLF_IDENTITY((false), ! (! (_GLF_IDENTITY((false), ((false)) || false))))), false || (true && (! _GLF_IDENTITY((false), ! (! (_GLF_IDENTITY((false), ((false)) || false))))))))))))), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))))) && true)))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(! (_GLF_IDENTITY(! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bool(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bool(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))) || false)), bool(_GLF_IDENTITY(bvec3(! (_GLF_IDENTITY(! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bool(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bool(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))) || false)), false, true), bvec3(bvec3(bvec3(! (_GLF_IDENTITY(! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)))))), (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bool(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bool(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bool(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bool(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))), false || (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y))))), bool(bool(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(30.42) : injectionSwitch.x)) > injectionSwitch.y))), bool(bool(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)).y)))))))))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) || false)), false, true))))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   atomicStore(buf[_GLF_struct_replacement_7.next_virtual_gid], uint(2), _GLF_IDENTITY(4, 0 | (_GLF_IDENTITY(4, _GLF_IDENTITY(clamp(_GLF_IDENTITY(_GLF_IDENTITY(4, (4) | (0 >> _GLF_IDENTITY(int(6), int(6)))), (_GLF_IDENTITY(4, (4) | (0 >> _GLF_IDENTITY(int(6), int(6))))) ^ 0), 4, 4), (clamp(_GLF_IDENTITY(4, (4) | (_GLF_IDENTITY(0, 0 ^ (_GLF_IDENTITY(0, (false ? _GLF_FUZZED(-9090) : 0)))) >> _GLF_IDENTITY(int(6), int(6)))), 4, 4)) >> 0)))), 64, 4);
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, bool(bvec2(false, true))), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(462.061)), bool(false))) > injectionSwitch.y))))), _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)))), 0.0)), 0.0) + (injectionSwitch)).x > injectionSwitch.y), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)))), 0.0)), 0.0) + (injectionSwitch)).x > injectionSwitch.y), ! (_GLF_IDENTITY(! ((_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, _GLF_IDENTITY(clamp(0.0, 0.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0))), clamp(clamp(0.0, 0.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0))), _GLF_IDENTITY(clamp(0.0, 0.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0))), float(mat4x2(clamp(0.0, 0.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0))), 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0))), clamp(0.0, 0.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)))))), 0.0)), 0.0) + (injectionSwitch)).x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y)), ! (! (! ((_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)))), 0.0)), 0.0) + (injectionSwitch)).x > injectionSwitch.y)))))))), ! (_GLF_IDENTITY(! (! (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)))), 0.0)), 0.0) + (injectionSwitch)).x > injectionSwitch.y), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)))), 0.0)), 0.0) + (injectionSwitch)).x > injectionSwitch.y), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)))), 0.0)), 0.0) + (injectionSwitch)).x > injectionSwitch.y), false || ((_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)))), 0.0)), 0.0) + (injectionSwitch)).x > injectionSwitch.y))))), ! (! (bool(bool(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)))), 0.0)), 0.0) + (injectionSwitch)).x > injectionSwitch.y), false || ((_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)))), 0.0)), 0.0) + (injectionSwitch)).x > injectionSwitch.y)))))))))), ! (! (! ((_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)))), 0.0)), 0.0) + (injectionSwitch)).x > injectionSwitch.y))))))))), (! (! (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, _GLF_IDENTITY(_GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(1.5))), 0.0)), clamp(0.0, 0.0, 0.0)))), 0.0)), _GLF_IDENTITY(0.0, float(vec3(0.0, 0.0, 1.0)))) + (injectionSwitch)).x > injectionSwitch.y), ! (_GLF_IDENTITY(! ((_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)))), 0.0)), 0.0) + (injectionSwitch)).x > injectionSwitch.y)), ! (! (! ((_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(0.0, _GLF_IDENTITY(min(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)))), 0.0), clamp(min(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)))), 0.0), min(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)))), 0.0), min(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)))), 0.0)))), 0.0) + (injectionSwitch)).x > injectionSwitch.y)))))))))) || false))))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
  }
 else
  {
   if(_GLF_DEAD(false))
    barrier();
   subgroupAll(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! (false)))))));
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   atomicStore(buf[_GLF_struct_replacement_7.next_virtual_gid], uint(_GLF_IDENTITY(2, 0 | (2))), 4, _GLF_IDENTITY(_GLF_IDENTITY(64, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(64, min(64, _GLF_IDENTITY(64, 0 | (64)))), _GLF_IDENTITY(~ (~ (64)), (_GLF_IDENTITY(true, ! (! (true))) ? ~ (~ (64)) : _GLF_FUZZED(mix(29788, abs(5849), true)))))), _GLF_IDENTITY(((_GLF_IDENTITY(64, ~ (~ (64))))) - (0 ^ 0), (((_GLF_IDENTITY(64, _GLF_IDENTITY(~ (~ (64)), (true ? ~ (~ (64)) : _GLF_FUZZED((+ 22681))))))) - (0 ^ 0)) / _GLF_IDENTITY(1, int(ivec3(_GLF_IDENTITY(1, ~ (~ (_GLF_IDENTITY(1, ~ (~ (1)))))), 0, 0))))) | (64)), _GLF_IDENTITY(int(ivec4(_GLF_IDENTITY(64, _GLF_IDENTITY((_GLF_IDENTITY(64, _GLF_IDENTITY(~ (~ (64)), (_GLF_IDENTITY(_GLF_IDENTITY(true, ! (! (true))), ! (! (_GLF_IDENTITY(true, ! (! (true)))))) ? ~ (~ (64)) : _GLF_FUZZED(mix(29788, abs(5849), true)))))), _GLF_IDENTITY(((_GLF_IDENTITY(64, ~ (~ (64))))) - (0 ^ 0), (((_GLF_IDENTITY(64, _GLF_IDENTITY(~ (~ (64)), (true ? ~ (~ (64)) : _GLF_FUZZED((+ 22681))))))) - (0 ^ 0)) / _GLF_IDENTITY(1, int(ivec3(_GLF_IDENTITY(1, ~ (~ (_GLF_IDENTITY(1, ~ (~ (1)))))), 0, 0))))) | (64)), 1, 1, 1)), 0 ^ (int(ivec4(_GLF_IDENTITY(64, _GLF_IDENTITY((_GLF_IDENTITY(64, _GLF_IDENTITY(~ (~ (64)), (_GLF_IDENTITY(true, ! (! (true))) ? ~ (~ (64)) : _GLF_FUZZED(mix(29788, _GLF_IDENTITY(abs(5849), (_GLF_IDENTITY(abs(5849), max(abs(5849), abs(5849)))) >> 0), true)))))), _GLF_IDENTITY(((_GLF_IDENTITY(64, ~ (~ (64))))) - (0 ^ 0), _GLF_IDENTITY((((_GLF_IDENTITY(64, _GLF_IDENTITY(~ (~ (64)), (true ? ~ (~ (64)) : _GLF_FUZZED((+ 22681))))))) - (0 ^ 0)) / _GLF_IDENTITY(1, int(ivec3(_GLF_IDENTITY(1, ~ (~ (_GLF_IDENTITY(1, ~ (~ (1)))))), 0, 0))), ((((_GLF_IDENTITY(64, _GLF_IDENTITY(~ (~ (64)), (true ? ~ (~ (64)) : _GLF_FUZZED((+ 22681))))))) - (0 ^ 0)) / _GLF_IDENTITY(1, int(ivec3(_GLF_IDENTITY(1, ~ (~ (_GLF_IDENTITY(1, ~ (~ (1)))))), 0, 0)))) | ((((_GLF_IDENTITY(64, _GLF_IDENTITY(~ (~ (64)), (true ? ~ (~ (64)) : _GLF_FUZZED((+ 22681))))))) - (0 ^ 0)) / _GLF_IDENTITY(1, int(ivec3(_GLF_IDENTITY(1, ~ (~ (_GLF_IDENTITY(1, ~ (~ (1)))))), 0, 0))))))) | (64)), 1, 1, 1))))), 4);
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(1.3)), bool(false)))) - 0.0))))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) && true))))), ! (! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) && true))))), true && (! (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, ! (! (false))))), (false) && true)))))))))))), (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, false, false, true)), ! (! (bool(bvec4(false, false, false, true)))))), (false) && true)))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)), injectionSwitch, injectionSwitch)))), mix(vec2(_GLF_FUZZED((false ? 5.7 : 49.61)), _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], max(injectionSwitch[1], injectionSwitch[1]))))))), mat2(1.0) * ((_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))))))[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(820.354)), bvec2(true, false))), mix(vec2(_GLF_FUZZED(-988.638), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)), injectionSwitch, injectionSwitch)))), _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)), injectionSwitch, injectionSwitch))))) * _GLF_IDENTITY(mat2(1.0), (true ? mat2(1.0) : _GLF_FUZZED(mat2(-9.4, -822.089, -654.467, -5.7)))), mix(vec2(((_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)), injectionSwitch, injectionSwitch))))) * _GLF_IDENTITY(mat2(1.0), (true ? mat2(1.0) : _GLF_FUZZED(mat2(-9.4, -822.089, -654.467, -5.7)))))[0], _GLF_FUZZED(-3.1)), vec2(_GLF_FUZZED(295.948), ((_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)), injectionSwitch, injectionSwitch))))) * _GLF_IDENTITY(mat2(1.0), (true ? mat2(1.0) : _GLF_FUZZED(mat2(-9.4, -822.089, -654.467, -5.7)))))[1]), bvec2(false, true)))), mix(vec2(_GLF_FUZZED((false ? 5.7 : 49.61)), _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))))), mat2(1.0) * ((_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))))))[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(820.354)), bvec2(true, false))))[1]), vec2((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)), mix(vec2(_GLF_FUZZED(5812.8113), _GLF_FUZZED((-5131.2346 * 8900.0731))), vec2((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)))[0], (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)))[1]), bvec2(true, true))), injectionSwitch, injectionSwitch)))), mix(vec2(_GLF_FUZZED((false ? 5.7 : 49.61)), _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))))), mat2(1.0) * ((_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))))))[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(820.354)), bvec2(true, false))))[0], _GLF_FUZZED(-3.7)), bvec2(true, false))).y, _GLF_IDENTITY(true && (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(_GLF_IDENTITY(_GLF_IDENTITY(vec2(_GLF_FUZZED((false ? 5.7 : 49.61)), (injectionSwitch)[_GLF_IDENTITY(1, (1) << 0)]), vec2(vec3(vec2(_GLF_FUZZED((false ? 5.7 : 49.61)), (injectionSwitch)[1]), 0.0))), (_GLF_IDENTITY(vec2(_GLF_FUZZED((false ? 5.7 : 49.61)), (injectionSwitch)[_GLF_IDENTITY(1, (1) << 0)]), vec2(vec3(vec2(_GLF_FUZZED((false ? 5.7 : 49.61)), (injectionSwitch)[1]), 0.0)))) / vec2(1.0, 1.0)), vec2((_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch, (false ? _GLF_FUZZED(acos(injectionSwitch)) : false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)))))))[0], _GLF_FUZZED(820.354)), bvec2(true, false))).y), ! (! (true && (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(_GLF_IDENTITY(_GLF_IDENTITY(vec2(_GLF_FUZZED((_GLF_IDENTITY(false ? 5.7 : 49.61, (false ? 5.7 : 49.61) / 1.0))), (injectionSwitch)[1]), vec2(vec3(vec2(_GLF_FUZZED((false ? 5.7 : 49.61)), (injectionSwitch)[1]), _GLF_IDENTITY(0.0, max(0.0, 0.0))))), (true ? _GLF_IDENTITY(_GLF_IDENTITY(vec2(_GLF_IDENTITY(_GLF_FUZZED((_GLF_IDENTITY(false ? 5.7 : 49.61, (false ? 5.7 : 49.61) / 1.0))), 1.0 * (_GLF_FUZZED((_GLF_IDENTITY(false ? 5.7 : 49.61, (false ? 5.7 : 49.61) / 1.0))))), (injectionSwitch)[1]), max(vec2(_GLF_IDENTITY(_GLF_FUZZED((_GLF_IDENTITY(false ? 5.7 : 49.61, (false ? 5.7 : 49.61) / 1.0))), 1.0 * (_GLF_IDENTITY(_GLF_FUZZED((_GLF_IDENTITY(false ? 5.7 : 49.61, (false ? 5.7 : 49.61) / 1.0))), 0.0 + (_GLF_FUZZED((_GLF_IDENTITY(false ? 5.7 : 49.61, (false ? 5.7 : 49.61) / 1.0))))))), (injectionSwitch)[1]), vec2(_GLF_IDENTITY(_GLF_FUZZED((_GLF_IDENTITY(false ? 5.7 : 49.61, (false ? 5.7 : 49.61) / 1.0))), 1.0 * (_GLF_FUZZED((_GLF_IDENTITY(false ? 5.7 : 49.61, (false ? 5.7 : 49.61) / 1.0))))), (injectionSwitch)[1]))), vec2(vec3(vec2(_GLF_FUZZED((false ? 5.7 : 49.61)), (injectionSwitch)[1]), _GLF_IDENTITY(0.0, max(0.0, 0.0))))) : _GLF_FUZZED(injectionSwitch))), vec2(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch))))), clamp((_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch))))), _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch))))), (true ? (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch))))) : _GLF_FUZZED(vec2(-9.2, -1839.2260)))), (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)))))))[0], _GLF_FUZZED(820.354)), bvec2(_GLF_IDENTITY(true, ! (! (true))), false))).y)))))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
}
