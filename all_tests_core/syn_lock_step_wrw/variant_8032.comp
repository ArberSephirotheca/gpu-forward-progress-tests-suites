#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


struct _GLF_struct_3 {
 mat3x2 _f0;
 bvec4 _f1;
 uvec2 _f2;
 vec3 _f3;
 bvec2 _f4;
} ;

struct _GLF_struct_2 {
 ivec2 _f0;
 ivec4 _f1;
 vec2 _f2;
 ivec4 _f3;
 mat4x2 _f4;
 bool _f5;
} ;

struct _GLF_struct_1 {
 mat2 _f0;
 uvec4 _f1;
 vec2 _f2;
} ;

struct _GLF_struct_0 {
 bvec3 _f0;
} ;

struct _GLF_struct_4 {
 _GLF_struct_0 _f0;
 _GLF_struct_1 _f1;
 uint num_workgroup;
 _GLF_struct_2 _f2;
 vec2 _f3;
 uvec4 _f4;
 _GLF_struct_3 _f5;
} ;

struct _GLF_struct_5 {
 bvec4 _f0;
 uvec2 _f1;
 _GLF_struct_4 _f2;
 vec4 _f3;
 bvec3 _f4;
} ;

layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 uvec4 GLF_merged4_0_1_11_1_1_17_2_1_13_3_1_14subgroup_idsubgroup_local_idsubgroup_sizeworkgroup_base;
 uvec4 GLF_merged4_0_1_16_1_1_6_2_1_11_3_1_17next_virtual_gidread_1subgroup_idsubgroup_local_id;
 uint subgroup_id = gl_SubgroupID;
 GLF_merged4_0_1_11_1_1_17_2_1_13_3_1_14subgroup_idsubgroup_local_idsubgroup_sizeworkgroup_base.x = subgroup_id;
 GLF_merged4_0_1_16_1_1_6_2_1_11_3_1_17next_virtual_gidread_1subgroup_idsubgroup_local_id.z = GLF_merged4_0_1_11_1_1_17_2_1_13_3_1_14subgroup_idsubgroup_local_idsubgroup_sizeworkgroup_base.x;
 uint subgroup_size = gl_SubgroupSize;
 GLF_merged4_0_1_11_1_1_17_2_1_13_3_1_14subgroup_idsubgroup_local_idsubgroup_sizeworkgroup_base.z = subgroup_size;
 uint subgroup_local_id = gl_SubgroupInvocationID;
 GLF_merged4_0_1_11_1_1_17_2_1_13_3_1_14subgroup_idsubgroup_local_idsubgroup_sizeworkgroup_base.y = subgroup_local_id;
 GLF_merged4_0_1_16_1_1_6_2_1_11_3_1_17next_virtual_gidread_1subgroup_idsubgroup_local_id.w = GLF_merged4_0_1_11_1_1_17_2_1_13_3_1_14subgroup_idsubgroup_local_idsubgroup_sizeworkgroup_base.y;
 _GLF_struct_5 _GLF_struct_replacement_5 = _GLF_struct_5(bvec4(true), uvec2(1u), _GLF_struct_4(_GLF_struct_0(bvec3(true)), _GLF_struct_1(mat2(1.0), uvec4(1u), vec2(1.0)), gl_NumWorkGroups.x, _GLF_struct_2(ivec2(1), ivec4(1), vec2(1.0), ivec4(1), mat4x2(1.0), true), vec2(1.0), uvec4(1u), _GLF_struct_3(mat3x2(1.0), bvec4(true), uvec2(1u), vec3(1.0), bvec2(true))), vec4(1.0), bvec3(true));
 uint workgroup_size = gl_WorkGroupSize.x;
 uint workgroup_id = gl_WorkGroupID.x;
 uint workgroup_base = workgroup_size * workgroup_id;
 GLF_merged4_0_1_11_1_1_17_2_1_13_3_1_14subgroup_idsubgroup_local_idsubgroup_sizeworkgroup_base.w = workgroup_base;
 uint virtual_gid = GLF_merged4_0_1_11_1_1_17_2_1_13_3_1_14subgroup_idsubgroup_local_idsubgroup_sizeworkgroup_base.w + GLF_merged4_0_1_16_1_1_6_2_1_11_3_1_17next_virtual_gidread_1subgroup_idsubgroup_local_id.z * GLF_merged4_0_1_11_1_1_17_2_1_13_3_1_14subgroup_idsubgroup_local_idsubgroup_sizeworkgroup_base.z + GLF_merged4_0_1_16_1_1_6_2_1_11_3_1_17next_virtual_gidread_1subgroup_idsubgroup_local_id.w;
 uint next_virtual_gid = GLF_merged4_0_1_11_1_1_17_2_1_13_3_1_14subgroup_idsubgroup_local_idsubgroup_sizeworkgroup_base.w + GLF_merged4_0_1_16_1_1_6_2_1_11_3_1_17next_virtual_gidread_1subgroup_idsubgroup_local_id.z * GLF_merged4_0_1_11_1_1_17_2_1_13_3_1_14subgroup_idsubgroup_local_idsubgroup_sizeworkgroup_base.z + ((GLF_merged4_0_1_16_1_1_6_2_1_11_3_1_17next_virtual_gidread_1subgroup_idsubgroup_local_id.w + 1) % GLF_merged4_0_1_11_1_1_17_2_1_13_3_1_14subgroup_idsubgroup_local_idsubgroup_sizeworkgroup_base.z);
 GLF_merged4_0_1_16_1_1_6_2_1_11_3_1_17next_virtual_gidread_1subgroup_idsubgroup_local_id.x = next_virtual_gid;
 atomicStore(buf[GLF_merged4_0_1_16_1_1_6_2_1_11_3_1_17next_virtual_gidread_1subgroup_idsubgroup_local_id.x], uint(1), 4, 64, 4);
 uint read_1 = atomicLoad(buf[virtual_gid], 4, 64, 0);
 GLF_merged4_0_1_16_1_1_6_2_1_11_3_1_17next_virtual_gidread_1subgroup_idsubgroup_local_id.y = read_1;
 if(_GLF_DEAD(false))
  barrier();
 atomicStore(buf[GLF_merged4_0_1_16_1_1_6_2_1_11_3_1_17next_virtual_gidread_1subgroup_idsubgroup_local_id.x], uint(GLF_merged4_0_1_16_1_1_6_2_1_11_3_1_17next_virtual_gidread_1subgroup_idsubgroup_local_id.y + 1), 4, 64, 4);
}
