#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


struct _GLF_struct_20 {
 bvec2 _f0;
 mat4x2 _f1;
} ;

struct _GLF_struct_19 {
 vec2 _f0;
 int _f1;
 vec3 _f2;
 bvec4 _f3;
 bool _f4;
} ;

struct _GLF_struct_18 {
 float _f0;
 bvec2 _f1;
 mat4x2 _f2;
} ;

struct _GLF_struct_17 {
 vec3 _f0;
 vec3 _f1;
 mat2x4 _f2;
 mat3 _f3;
 mat4x3 _f4;
 bvec2 _f5;
 bvec2 _f6;
} ;

struct _GLF_struct_21 {
 _GLF_struct_17 _f0;
 bvec3 _f1;
 _GLF_struct_18 _f2;
 _GLF_struct_19 _f3;
 _GLF_struct_20 _f4;
} ;

struct _GLF_struct_16 {
 uvec3 _f0;
 mat4x2 _f1;
 vec2 _f2;
 uvec3 _f3;
} ;

struct _GLF_struct_22 {
 _GLF_struct_16 _f0;
 uint num_workgroup;
 _GLF_struct_21 _f1;
} ;

struct _GLF_struct_15 {
 ivec4 _f0;
 mat2x3 _f1;
 uvec3 GLF_merged3_0_1_14_1_1_12_2_1_14workgroup_baseworkgroup_idworkgroup_size;
 vec3 _f2;
} ;

struct _GLF_struct_12 {
 mat3x4 _f0;
 mat3x2 _f1;
} ;

struct _GLF_struct_11 {
 bool _f0;
 vec2 _f1;
 bool _f2;
} ;

struct _GLF_struct_10 {
 ivec2 _f0;
 mat4 _f1;
 bvec4 _f2;
 int _f3;
} ;

struct _GLF_struct_9 {
 mat4x2 _f0;
 vec2 _f1;
 bvec4 _f2;
} ;

struct _GLF_struct_13 {
 _GLF_struct_9 _f0;
 mat4x2 _f1;
 _GLF_struct_10 _f2;
 _GLF_struct_11 _f3;
 _GLF_struct_12 _f4;
} ;

struct _GLF_struct_7 {
 ivec4 _f0;
} ;

struct _GLF_struct_6 {
 uvec2 _f0;
 bvec4 _f1;
 uint _f2;
 uint _f3;
 mat4x3 _f4;
} ;

struct _GLF_struct_5 {
 ivec2 _f0;
 float _f1;
 mat2x3 _f2;
 mat3x4 _f3;
} ;

struct _GLF_struct_4 {
 uvec4 _f0;
 bvec3 _f1;
 ivec2 _f2;
 vec3 _f3;
 mat2 _f4;
 mat2x4 _f5;
} ;

struct _GLF_struct_3 {
 float _f0;
 mat2 _f1;
 vec4 _f2;
 vec2 _f3;
} ;

struct _GLF_struct_8 {
 _GLF_struct_3 _f0;
 bvec2 _f1;
 _GLF_struct_4 _f2;
 _GLF_struct_5 _f3;
 _GLF_struct_6 _f4;
 _GLF_struct_7 _f5;
 uint subgroup_size;
} ;

struct _GLF_struct_1 {
 ivec4 _f0;
 mat2 _f1;
 vec4 _f2;
 uvec3 _f3;
 mat4x3 _f4;
 mat3x2 _f5;
} ;

struct _GLF_struct_0 {
 uvec3 _f0;
} ;

struct _GLF_struct_2 {
 _GLF_struct_0 _f0;
 _GLF_struct_1 _f1;
} ;

struct _GLF_struct_14 {
 _GLF_struct_2 _f0;
 _GLF_struct_8 _f1;
 _GLF_struct_13 _f2;
 mat3x4 _f3;
} ;

layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 uvec4 GLF_merged3_0_2_50_2_1_16_3_1_13GLF_merged2_0_1_11_1_1_14virtual_gidworkgroup_sizenext_virtual_gidnum_workgroup;
 uvec2 GLF_merged2_0_1_11_1_1_14virtual_gidworkgroup_size;
 if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
  }
 else
  {
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_WRAPPED_IF_FALSE(false))
  {
  }
 else
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
    {
     do
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       do
        {
         barrier();
        }
       while(_GLF_WRAPPED_LOOP(false));
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, bool(bvec2(false, false)))))));
     if(_GLF_DEAD(false))
      barrier();
    }
   _GLF_IDENTITY(GLF_merged3_0_2_50_2_1_16_3_1_13GLF_merged2_0_1_11_1_1_14virtual_gidworkgroup_sizenext_virtual_gidnum_workgroup.xy = GLF_merged2_0_1_11_1_1_14virtual_gidworkgroup_size, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(uvec2(74571u, 124739u)) : GLF_merged3_0_2_50_2_1_16_3_1_13GLF_merged2_0_1_11_1_1_14virtual_gidworkgroup_sizenext_virtual_gidnum_workgroup.xy = GLF_merged2_0_1_11_1_1_14virtual_gidworkgroup_size));
  }
 do
  {
   for(int _injected_loop_counter = (0 >> _GLF_IDENTITY(int(2), int(2))); _GLF_WRAPPED_LOOP(_injected_loop_counter < ((1 << _GLF_IDENTITY(int(5), int(5))) >> _GLF_IDENTITY(int(5), _GLF_IDENTITY(int(5), (_GLF_IDENTITY(int(5), (int(5)) | (int(5)))) | 0)))); _injected_loop_counter ++)
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(_GLF_IDENTITY(true, ! (! (true))), (_GLF_IDENTITY(true, ! (! (true)))) && true)))
          {
           barrier();
          }
         else
          {
          }
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
        {
         if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
          }
         else
          {
           barrier();
          }
        }
       else
        {
        }
      }
    }
  }
 while(_GLF_WRAPPED_LOOP(false));
 if(_GLF_DEAD(false))
  {
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
      }
     else
      {
       do
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_WRAPPED_IF_FALSE(false))
          {
          }
         else
          {
           if(_GLF_DEAD(false))
            barrier();
          }
        }
       while(_GLF_WRAPPED_LOOP(false));
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
    }
   else
    {
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
    }
   else
    {
     barrier();
    }
  }
 if(_GLF_DEAD(false))
  barrier();
 _GLF_struct_15 _GLF_struct_replacement_15;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
  }
 else
  {
   for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != int(_GLF_ONE(1.0, injectionSwitch.y))); _injected_loop_counter ++)
    {
     if(_GLF_DEAD(false))
      barrier();
    }
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_WRAPPED_IF_FALSE(false))
        {
        }
       else
        {
         barrier();
        }
      }
     if(_GLF_DEAD(false))
      barrier();
    }
   else
    {
    }
   do
    {
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
      }
     else
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_WRAPPED_IF_FALSE(false))
          {
          }
         else
          {
           do
            {
             barrier();
             if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false)))
              barrier();
            }
           while(_GLF_WRAPPED_LOOP(false));
          }
        }
      }
     if(_GLF_DEAD(false))
      barrier();
    }
   while(_GLF_WRAPPED_LOOP(false));
   do
    {
     do
      {
       if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, bool(bvec2(false, false)))))
        {
         if(_GLF_DEAD(false))
          barrier();
        }
       else
        {
         if(_GLF_DEAD(false))
          {
           do
            {
             barrier();
            }
           while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) && true)) || false)));
          }
        }
       barrier();
      }
     while(_GLF_WRAPPED_LOOP(false));
    }
   while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, (false) || false)));
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 uint subgroup_id = gl_SubgroupID;
 _GLF_struct_14 _GLF_struct_replacement_14 = _GLF_struct_14(_GLF_struct_2(_GLF_struct_0(_GLF_IDENTITY(_GLF_IDENTITY(uvec3(1u), (uvec3(1u)) << (uvec3(0u, 0u, 0u) >> _GLF_IDENTITY(uvec3(6u), uvec3(6u)))), min(uvec3(1u), uvec3(1u)))), _GLF_struct_1(_GLF_IDENTITY(ivec4(1), ivec4(1, 1, 1, 1) * (ivec4(1))), mat2(1.0), vec4(1.0), uvec3(1u), mat4x3(_GLF_IDENTITY(1.0, (1.0) - 0.0)), mat3x2(1.0))), _GLF_struct_8(_GLF_struct_3(1.0, mat2(1.0), _GLF_IDENTITY(vec4(1.0), (true ? _GLF_IDENTITY(vec4(_GLF_IDENTITY(1.0, mix(float(_GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-9.2)), float(1.0), bool(true))), _GLF_IDENTITY(1.0, float(mat4x2(1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0)))))), float(_GLF_FUZZED((-9.9 - -3232.2374))), bool(false)))), vec4(1.0, 1.0, 1.0, 1.0) * (vec4(1.0))) : _GLF_FUZZED(vec4(-32.92, -4705.5670, 448.087, -7673.8556)))), vec2(1.0)), bvec2(true), _GLF_struct_4(uvec4(1u), bvec3(true), ivec2(1), vec3(1.0), _GLF_IDENTITY(mat2(1.0), _GLF_IDENTITY((mat2(1.0)) - mat2(0.0, 0.0, 0.0, 0.0), transpose(_GLF_IDENTITY(transpose(_GLF_IDENTITY((mat2(1.0)) - mat2(0.0, 0.0, 0.0, 0.0), ((mat2(1.0)) - mat2(0.0, 0.0, 0.0, 0.0)) - mat2(0.0, 0.0, 0.0, 0.0))), mat2(mat3x2(transpose(_GLF_IDENTITY((mat2(1.0)) - mat2(0.0, 0.0, 0.0, 0.0), ((mat2(1.0)) - mat2(0.0, 0.0, 0.0, 0.0)) - mat2(0.0, 0.0, 0.0, 0.0))))))))), mat2x4(_GLF_IDENTITY(1.0, _GLF_IDENTITY((false ? _GLF_FUZZED((-5.4 - injectionSwitch[0])) : 1.0), 0.0 + ((false ? _GLF_FUZZED((-5.4 - injectionSwitch[0])) : 1.0)))))), _GLF_struct_5(ivec2(_GLF_IDENTITY(1, min(1, _GLF_IDENTITY(1, (1) | (1))))), _GLF_IDENTITY(1.0, (1.0) * cos(0.0)), mat2x3(1.0), mat3x4(1.0)), _GLF_struct_6(uvec2(_GLF_IDENTITY(1u, max(1u, 1u))), bvec4(true), _GLF_IDENTITY(1u, max(_GLF_IDENTITY(1u, ~ (~ (1u))), 1u)), 1u, mat4x3(1.0)), _GLF_struct_7(ivec4(_GLF_IDENTITY(1, _GLF_IDENTITY((1) / ((_GLF_IDENTITY(1, max(1, _GLF_IDENTITY(1, 0 ^ (1)))) << _GLF_IDENTITY(int(0), int(0))) >> _GLF_IDENTITY(int(0), int(_GLF_IDENTITY(0, (0) - 0)))), ((1) / ((_GLF_IDENTITY(1, max(1, _GLF_IDENTITY(1, 0 ^ (1)))) << _GLF_IDENTITY(int(0), int(0))) >> _GLF_IDENTITY(int(0), int(_GLF_IDENTITY(0, (0) - 0))))) | 0)))), gl_SubgroupSize), _GLF_struct_13(_GLF_struct_9(mat4x2(1.0), vec2(1.0), bvec4(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), (_GLF_IDENTITY(_GLF_IDENTITY(! (true), (! (true)) && true), (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), ! (! (_GLF_IDENTITY(! (true), bool(bvec4(! (true), true, true, false))))))))), _GLF_IDENTITY((! (true)) || false, ! (! ((! (true)) || false)))), ! (! _GLF_IDENTITY((! (true)), ! (! ((! (true)))))))) || false)) && true))))), mat4x2(1.0), _GLF_struct_10(ivec2(1), mat4(1.0), bvec4(true), _GLF_IDENTITY(1, ~ (~ (_GLF_IDENTITY(1, 0 ^ (1)))))), _GLF_struct_11(_GLF_IDENTITY(true, bool(bool(true))), _GLF_IDENTITY(vec2(1.0), clamp(vec2(1.0), vec2(1.0), vec2(1.0))), _GLF_IDENTITY(true, bool(bool(true)))), _GLF_struct_12(mat3x4(1.0), mat3x2(1.0))), mat3x4(1.0));
 do
  {
   for(int _injected_loop_counter = _GLF_IDENTITY(0, (false ? _GLF_FUZZED(-30108) : _GLF_IDENTITY(0, max(0, 0)))); _GLF_WRAPPED_LOOP(_injected_loop_counter != (1 | 1)); _injected_loop_counter ++)
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_WRAPPED_IF_TRUE(true))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && _GLF_IDENTITY(true, ! (! (true))))))))
          {
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_DEAD(false))
            barrier();
          }
         else
          {
           barrier();
          }
        }
      }
     else
      {
      }
    }
  }
 while(_GLF_WRAPPED_LOOP(false));
 if(_GLF_DEAD(false))
  barrier();
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))
    {
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
      }
     else
      {
       for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
        {
         barrier();
        }
      }
    }
   barrier();
  }
 _GLF_struct_22 _GLF_struct_replacement_22 = _GLF_struct_22(_GLF_struct_16(uvec3(1u), mat4x2(_GLF_IDENTITY(1.0, min(1.0, _GLF_IDENTITY(1.0, float(mat3(1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0)))))), vec2(1.0), uvec3(1u)), gl_NumWorkGroups.x, _GLF_struct_21(_GLF_struct_17(vec3(1.0), vec3(1.0), mat2x4(1.0), mat3(1.0), mat4x3(1.0), bvec2(true), bvec2(_GLF_IDENTITY(true, ! _GLF_IDENTITY((! (true)), ! (_GLF_IDENTITY(! ((! (true))), (! ((! (true)))) && true)))))), bvec3(true), _GLF_struct_18(1.0, bvec2(true), mat4x2(1.0)), _GLF_struct_19(vec2(1.0), 1, vec3(1.0), bvec4(true), true), _GLF_struct_20(bvec2(true), mat4x2(1.0))));
 do
  {
   GLF_merged3_0_2_50_2_1_16_3_1_13GLF_merged2_0_1_11_1_1_14virtual_gidworkgroup_sizenext_virtual_gidnum_workgroup.w = _GLF_struct_replacement_22.num_workgroup;
  }
 while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))));
 if(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), true && (_GLF_WRAPPED_IF_FALSE(false))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 else
  {
   if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
    }
   else
    {
     if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
      {
       if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
        barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, true && (false))) && _GLF_IDENTITY(true, ! (! (true))))))
        barrier();
      }
     else
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
      }
    }
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     if(_GLF_DEAD(false))
      {
       do
        {
         barrier();
        }
       while(_GLF_WRAPPED_LOOP(false));
      }
     if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
      }
     else
      {
       if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, false || (false)), (injectionSwitch.x > injectionSwitch.y))))
        {
         do
          {
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_WRAPPED_IF_TRUE(true))
            {
             if(_GLF_DEAD(false))
              barrier();
             if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec4(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, false, _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true, true)))))))
              barrier();
            }
           else
            {
            }
           if(_GLF_WRAPPED_IF_FALSE(false))
            {
            }
           else
            {
             if(_GLF_DEAD(false))
              barrier();
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              barrier();
             if(_GLF_DEAD(false))
              barrier();
             if(_GLF_DEAD(false))
              barrier();
             do
              {
               do
                {
                 barrier();
                }
               while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
               if(_GLF_DEAD(false))
                barrier();
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                barrier();
              }
             while(_GLF_WRAPPED_LOOP(false));
             if(_GLF_DEAD(false))
              {
               if(_GLF_DEAD(false))
                barrier();
               if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                {
                 if(_GLF_DEAD(false))
                  barrier();
                }
               else
                {
                 barrier();
                }
              }
            }
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_DEAD(false))
            barrier();
          }
         while(_GLF_WRAPPED_LOOP(false));
         if(_GLF_DEAD(false))
          {
           if(_GLF_WRAPPED_IF_FALSE(false))
            {
            }
           else
            {
             if(_GLF_DEAD(false))
              {
               if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
                {
                 barrier();
                }
               else
                {
                }
              }
            }
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
         if(_GLF_WRAPPED_IF_TRUE(true))
          {
           if(_GLF_DEAD(false))
            {
             do
              {
               barrier();
              }
             while(_GLF_WRAPPED_LOOP(false));
            }
          }
         else
          {
          }
         if(_GLF_DEAD(false))
          {
           if(_GLF_WRAPPED_IF_FALSE(false))
            {
            }
           else
            {
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              barrier();
             barrier();
            }
          }
        }
      }
    }
   else
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), bool(bvec2(_GLF_WRAPPED_IF_TRUE(true), false))), ! (! (_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), bool(bvec2(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), _GLF_IDENTITY(bool(bvec3(_GLF_WRAPPED_IF_TRUE(true), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (! (bool(bvec3(_GLF_WRAPPED_IF_TRUE(true), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), false)))))))
      {
       if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
        }
       else
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_WRAPPED_IF_TRUE(true))
            {
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              barrier();
             barrier();
             if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, (false) && true)))
              {
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                barrier();
              }
             else
              {
               for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
                {
                 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                  {
                   do
                    {
                     if(_GLF_DEAD(false))
                      barrier();
                     barrier();
                    }
                   while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
                  }
                }
              }
            }
           else
            {
            }
           do
            {
             if(_GLF_DEAD(false))
              {
               if(_GLF_DEAD(false))
                {
                 if(_GLF_WRAPPED_IF_TRUE(true))
                  {
                   barrier();
                  }
                 else
                  {
                  }
                }
               do
                {
                 barrier();
                }
               while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, (false) || false)));
              }
            }
           while(_GLF_WRAPPED_LOOP(false));
          }
        }
      }
     else
      {
       if(_GLF_DEAD(false))
        barrier();
      }
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     barrier();
    }
  }
 if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
  }
 else
  {
  }
 uint workgroup_size = gl_WorkGroupSize.x;
 for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != int(_GLF_ONE(1.0, injectionSwitch.y))); _injected_loop_counter ++)
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
  }
 GLF_merged3_0_2_50_2_1_16_3_1_13GLF_merged2_0_1_11_1_1_14virtual_gidworkgroup_sizenext_virtual_gidnum_workgroup.xy.y = workgroup_size;
 if(_GLF_WRAPPED_IF_TRUE(true))
  {
   do
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       do
        {
         if(_GLF_DEAD(false))
          barrier();
        }
       while(_GLF_WRAPPED_LOOP(false));
       barrier();
      }
     if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, bool(bool(true)))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, ! (! (false)))))
        {
        }
       else
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
         if(_GLF_DEAD(false))
          {
           do
            {
             barrier();
            }
           while(_GLF_WRAPPED_LOOP(false));
          }
         for(int _injected_loop_counter = (0 | 0); _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
          {
           do
            {
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              barrier();
             if(_GLF_WRAPPED_IF_TRUE(true))
              {
               _GLF_struct_replacement_15.GLF_merged3_0_1_14_1_1_12_2_1_14workgroup_baseworkgroup_idworkgroup_size.z = GLF_merged3_0_2_50_2_1_16_3_1_13GLF_merged2_0_1_11_1_1_14virtual_gidworkgroup_sizenext_virtual_gidnum_workgroup.xy.y;
               if(_GLF_DEAD(false))
                barrier();
              }
             else
              {
              }
            }
           while(_GLF_WRAPPED_LOOP(false));
          }
        }
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     else
      {
      }
    }
   while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), false || _GLF_IDENTITY((false), ((false)) || false))));
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
    }
   else
    {
     if(_GLF_DEAD(false))
      barrier();
    }
  }
 else
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
      }
     else
      {
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
    }
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(dot(vec3(49.64, -10.83, 8.9), vec3(_GLF_IDENTITY(-5.8, clamp(_GLF_IDENTITY(-5.8, float(mat2x4(-5.8, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0))), -5.8, -5.8)), _GLF_IDENTITY(-5194.4342, mix(float(_GLF_FUZZED((+ float(-40530)))), float(-5194.4342), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), -77.09))) : _GLF_IDENTITY(injectionSwitch.y, (true ? _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0) : _GLF_FUZZED(554.058))))))), _GLF_IDENTITY(false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_IDENTITY(false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec4(false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, true, false))))))))
  {
   for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
    {
     do
      {
       if(_GLF_WRAPPED_IF_FALSE(false))
        {
        }
       else
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), bool(_GLF_IDENTITY(bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false), bvec2(bvec3(bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false), true)))))))
            {
             barrier();
            }
           else
            {
            }
          }
        }
      }
     while(_GLF_WRAPPED_LOOP(false));
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
    barrier();
   barrier();
  }
 uint workgroup_id = _GLF_IDENTITY(gl_WorkGroupID.x, (gl_WorkGroupID.x) << uint(_GLF_ZERO(0.0, injectionSwitch.x)));
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < ((1 << _GLF_IDENTITY(int(7), int(7))) >> _GLF_IDENTITY(int(7), int(7)))); _injected_loop_counter ++)
    {
     for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
      {
       barrier();
      }
    }
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, true, false, true)))))
    barrier();
   barrier();
  }
 for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != int(_GLF_ZERO(0.0, injectionSwitch.x))); _injected_loop_counter --)
  {
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_WRAPPED_IF_FALSE(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
  }
 else
  {
   do
    {
     _GLF_struct_replacement_15.GLF_merged3_0_1_14_1_1_12_2_1_14workgroup_baseworkgroup_idworkgroup_size.y = workgroup_id;
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (_GLF_IDENTITY(! _GLF_IDENTITY(((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY((injectionSwitch)[0], ((_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)))[0]) / 1.0), _GLF_IDENTITY((injectionSwitch), clamp((injectionSwitch), (injectionSwitch), (injectionSwitch)))[1]), vec2(_GLF_FUZZED(6.9), _GLF_FUZZED(7742.3757)), bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))).y)), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY((injectionSwitch)[0], ((injectionSwitch)[0]) / 1.0), (injectionSwitch)[1]), vec2(_GLF_FUZZED(6.9), _GLF_FUZZED(7742.3757)), bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))).y)), false || (_GLF_IDENTITY(((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY((injectionSwitch)[0], ((injectionSwitch)[0]) / 1.0), (injectionSwitch)[1]), vec2(_GLF_FUZZED(6.9), _GLF_FUZZED(7742.3757)), bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))).y)), true && (_GLF_IDENTITY(((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY((injectionSwitch)[0], ((injectionSwitch)[0]) / 1.0), (injectionSwitch)[1]), vec2(_GLF_FUZZED(6.9), _GLF_FUZZED(7742.3757)), bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))).y)), false || (((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY((injectionSwitch)[0], ((injectionSwitch)[0]) / 1.0), (injectionSwitch)[1]), vec2(_GLF_FUZZED(6.9), _GLF_FUZZED(7742.3757)), bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))).y)))))))), (((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY((injectionSwitch)[0], ((injectionSwitch)[0]) / 1.0), (injectionSwitch)[1]), vec2(_GLF_FUZZED(6.9), _GLF_FUZZED(7742.3757)), bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))).y))) || false)))), ! _GLF_IDENTITY((_GLF_IDENTITY(! (! ((injectionSwitch.x > injectionSwitch.y))), false || (! (! ((injectionSwitch.x > injectionSwitch.y)))))), bool(_GLF_IDENTITY(bvec3((_GLF_IDENTITY(! (! ((injectionSwitch.x > injectionSwitch.y))), false || (! (! ((injectionSwitch.x > injectionSwitch.y)))))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3((_GLF_IDENTITY(! (! ((injectionSwitch.x > injectionSwitch.y))), false || (! (! ((injectionSwitch.x > injectionSwitch.y)))))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec3(bvec4(bvec3((_GLF_IDENTITY(! (! ((injectionSwitch.x > injectionSwitch.y))), false || (! (! ((injectionSwitch.x > injectionSwitch.y)))))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true)))), bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec3((_GLF_IDENTITY(! (! ((injectionSwitch.x > injectionSwitch.y))), false || (! (! ((injectionSwitch.x > injectionSwitch.y)))))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec3(bvec4(bvec3((_GLF_IDENTITY(! (! ((injectionSwitch.x > injectionSwitch.y))), false || (! (! ((injectionSwitch.x > injectionSwitch.y)))))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true)))))))))))))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (_GLF_IDENTITY(! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * sqrt(1.0)), injectionSwitch.y)))), ! (_GLF_IDENTITY(! (! _GLF_IDENTITY(((_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-616.835), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(-1296.6729)), bvec2(true, false))).y, injectionSwitch.y)))), bool(bvec4(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-616.835), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(-1296.6729)), bvec2(true, false))).y, injectionSwitch.y)))), true, false, true))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-616.835), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(-1296.6729)), bvec2(true, false))).y, injectionSwitch.y))))))))), false || (! (! ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true)))))))))), false, false), bvec3(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (! ((injectionSwitch.x > injectionSwitch.y))), false || (! (! ((injectionSwitch.x > injectionSwitch.y))))))))), false, false), bvec3(_GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (! ((injectionSwitch.x > injectionSwitch.y))), false || (! (! ((injectionSwitch.x > injectionSwitch.y))))))))), false, false)), bvec3(bvec3(bvec3(bvec3(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (! ((injectionSwitch.x > injectionSwitch.y))), false || (! (! ((injectionSwitch.x > injectionSwitch.y))))))))), false, false))))))))))), bool(bvec3(bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (_GLF_IDENTITY(! ((_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y)), ! (_GLF_IDENTITY(! (! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))))))), false || (! (! ((injectionSwitch.x > injectionSwitch.y))))))))), false, false), bvec3(bvec3(bvec3(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y))))), bool(bvec3(! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y))))), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))), false || (! (! ((injectionSwitch.x > injectionSwitch.y))))))))), false, false))))), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, (injectionSwitch.x < injectionSwitch.y) || false))), true)))))))
      barrier();
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
      }
     else
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true)))))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), true && (! (! (false)))))), bool(bvec4((_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), true && (! (! (false)))))), true, false, true))))), _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))))))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false)))
          barrier();
         for(int _injected_loop_counter = (1 | 1); _GLF_WRAPPED_LOOP(_injected_loop_counter > int(_GLF_ZERO(0.0, injectionSwitch.x))); _injected_loop_counter --)
          {
           if(_GLF_WRAPPED_IF_FALSE(false))
            {
            }
           else
            {
             do
              {
               if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), false || (! (! (false)))))), true && (_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), false || (! (! (false)))))))))
                {
                 do
                  {
                   barrier();
                  }
                 while(_GLF_WRAPPED_LOOP(false));
                }
              }
             while(_GLF_WRAPPED_LOOP(false));
            }
           if(_GLF_DEAD(false))
            {
             if(_GLF_WRAPPED_IF_TRUE(true))
              {
               barrier();
              }
             else
              {
              }
            }
          }
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
           for(int _injected_loop_counter = (1 & 1); _GLF_WRAPPED_LOOP(_injected_loop_counter > (1 ^ 1)); _injected_loop_counter --)
            {
             do
              {
               barrier();
              }
             while(_GLF_WRAPPED_LOOP(false));
            }
          }
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
         if(_GLF_DEAD(false))
          {
           do
            {
             barrier();
            }
           while(_GLF_WRAPPED_LOOP(false));
          }
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), true, true, true))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))
          {
           do
            {
             if(_GLF_DEAD(false))
              barrier();
            }
           while(_GLF_WRAPPED_LOOP(false));
           barrier();
          }
         if(_GLF_DEAD(false))
          {
           if(_GLF_WRAPPED_IF_TRUE(true))
            {
             barrier();
            }
           else
            {
            }
          }
        }
      }
    }
   while(_GLF_WRAPPED_LOOP(false));
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, true)))))
      barrier();
     barrier();
    }
  }
 uint workgroup_base = _GLF_struct_replacement_15.GLF_merged3_0_1_14_1_1_12_2_1_14workgroup_baseworkgroup_idworkgroup_size.z * _GLF_struct_replacement_15.GLF_merged3_0_1_14_1_1_12_2_1_14workgroup_baseworkgroup_idworkgroup_size.y;
 _GLF_struct_replacement_15.GLF_merged3_0_1_14_1_1_12_2_1_14workgroup_baseworkgroup_idworkgroup_size.x = workgroup_base;
 do
  {
   for(int _injected_loop_counter = (1 ^ 0); _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
  }
 while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, false, _GLF_IDENTITY(false, (false) && true)), bvec3(bvec3(bvec3(false, false, _GLF_IDENTITY(false, (false) && true)))))))));
 for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != _GLF_IDENTITY(1, clamp(1, 1, 1))); _injected_loop_counter ++)
  {
   for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
    {
     for(int _injected_loop_counter = _GLF_IDENTITY(_GLF_IDENTITY(0, (0) / 1), clamp(0, 0, 0)); _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
      {
       if(_GLF_WRAPPED_IF_TRUE(true))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           do
            {
             barrier();
            }
           while(_GLF_WRAPPED_LOOP(false));
           if(_GLF_DEAD(false))
            barrier();
          }
         if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch))) - vec2(0.0, 0.0), clamp(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch))) - vec2(0.0, 0.0), max((_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch))) - vec2(0.0, 0.0), (_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch))) - vec2(0.0, 0.0))), _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch))), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? (_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch))) : _GLF_FUZZED(injectionSwitch))) - vec2(0.0, 0.0), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), vec2(0.0, 0.0) + (injectionSwitch))) - vec2(0.0, 0.0), ((_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(0.0, clamp(0.0, _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(4.0) : 0.0)), 0.0)), 0.0) + _GLF_IDENTITY((injectionSwitch), ((injectionSwitch)) / vec2(1.0, 1.0)))) - vec2(0.0, 0.0)) / vec2(1.0, 1.0))))).x > injectionSwitch.y))))
          {
           for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
            {
             do
              {
               if(_GLF_DEAD(false))
                barrier();
               barrier();
              }
             while(_GLF_WRAPPED_LOOP(false));
            }
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
          }
        }
       else
        {
        }
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(mat2(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), 1.0, 1.0))).x > injectionSwitch.y)), (_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-6.9)), float(injectionSwitch.x), bool(true))) > injectionSwitch.y))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), ! (! (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0))))))))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, (true) || false)))
            {
             barrier();
            }
           else
            {
            }
           if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
            barrier();
          }
         if(_GLF_DEAD(false))
          barrier();
         do
          {
           barrier();
          }
         while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         do
          {
           do
            {
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              barrier();
             do
              {
               barrier();
              }
             while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
             if(_GLF_DEAD(false))
              barrier();
            }
           while(_GLF_WRAPPED_LOOP(false));
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
              barrier();
             for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
              {
               if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
                {
                 barrier();
                }
               else
                {
                }
              }
             if(_GLF_DEAD(false))
              barrier();
            }
          }
         while(_GLF_WRAPPED_LOOP(false));
         if(_GLF_WRAPPED_IF_TRUE(true))
          {
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(false))
              barrier();
             barrier();
            }
           if(_GLF_DEAD(false))
            barrier();
          }
         else
          {
          }
         do
          {
           if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, true, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))
            {
             if(_GLF_DEAD(false))
              barrier();
             for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
              {
               barrier();
              }
            }
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_DEAD(false))
            {
             for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
              {
               barrier();
              }
            }
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(false))
              barrier();
             barrier();
            }
          }
         while(_GLF_WRAPPED_LOOP(false));
        }
       for(int _injected_loop_counter = ((1 << _GLF_IDENTITY(int(3), int(3))) >> _GLF_IDENTITY(int(3), int(3))); _GLF_WRAPPED_LOOP(_injected_loop_counter != (0 << _GLF_IDENTITY(int(1), _GLF_IDENTITY(int(1), (int(1)) | 0)))); _injected_loop_counter --)
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
            {
             if(_GLF_DEAD(false))
              barrier();
             barrier();
            }
           barrier();
           if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
            barrier();
          }
        }
      }
    }
  }
 if(_GLF_DEAD(false))
  {
   for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
    {
     if(_GLF_DEAD(false))
      barrier();
    }
   barrier();
  }
 uint virtual_gid = _GLF_IDENTITY(_GLF_IDENTITY(_GLF_struct_replacement_15.GLF_merged3_0_1_14_1_1_12_2_1_14workgroup_baseworkgroup_idworkgroup_size.x + subgroup_id * _GLF_struct_replacement_14._f1.subgroup_size, 0u ^ (_GLF_struct_replacement_15.GLF_merged3_0_1_14_1_1_12_2_1_14workgroup_baseworkgroup_idworkgroup_size.x + subgroup_id * _GLF_struct_replacement_14._f1.subgroup_size)) + subgroup_local_id, 0u ^ (_GLF_struct_replacement_15.GLF_merged3_0_1_14_1_1_12_2_1_14workgroup_baseworkgroup_idworkgroup_size.x + subgroup_id * _GLF_struct_replacement_14._f1.subgroup_size + subgroup_local_id));
 for(int _injected_loop_counter = ((0 & 32592) >> _GLF_IDENTITY(int(7), int(7))); _GLF_WRAPPED_LOOP(_injected_loop_counter != ((1 << _GLF_IDENTITY(int(5), int(5))) >> _GLF_IDENTITY(int(5), int(5)))); _injected_loop_counter ++)
  {
   GLF_merged3_0_2_50_2_1_16_3_1_13GLF_merged2_0_1_11_1_1_14virtual_gidworkgroup_sizenext_virtual_gidnum_workgroup.xy.x = virtual_gid;
  }
 for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
  {
   if(_GLF_DEAD(false))
    barrier();
  }
 uint next_virtual_gid = _GLF_struct_replacement_15.GLF_merged3_0_1_14_1_1_12_2_1_14workgroup_baseworkgroup_idworkgroup_size.x + _GLF_IDENTITY(subgroup_id, max(subgroup_id, subgroup_id)) * _GLF_struct_replacement_14._f1.subgroup_size + (_GLF_IDENTITY((subgroup_local_id + 1) % _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_struct_replacement_14._f1.subgroup_size, (_GLF_IDENTITY(true, (true) || false) ? _GLF_IDENTITY(_GLF_struct_replacement_14._f1.subgroup_size, _GLF_IDENTITY((_GLF_struct_replacement_14._f1.subgroup_size) - 0u, ~ (_GLF_IDENTITY(~ ((_GLF_struct_replacement_14._f1.subgroup_size) - 0u), 0u ^ (~ ((_GLF_struct_replacement_14._f1.subgroup_size) - 0u)))))) : _GLF_FUZZED(workgroup_base))), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_struct_replacement_14._f1.subgroup_size, (_GLF_IDENTITY(_GLF_IDENTITY(true, (true) || false), (_GLF_IDENTITY(_GLF_IDENTITY(true, (true) || false), false || (_GLF_IDENTITY(_GLF_IDENTITY(true, (true) || false), bool(bvec3(_GLF_IDENTITY(true, (true) || false), false, false)))))) || false) ? _GLF_IDENTITY(_GLF_struct_replacement_14._f1.subgroup_size, (_GLF_struct_replacement_14._f1.subgroup_size) - _GLF_IDENTITY(0u, ~ (_GLF_IDENTITY(~ (0u), 0u ^ (~ (0u)))))) : _GLF_FUZZED(workgroup_base))), (_GLF_IDENTITY(_GLF_struct_replacement_14._f1.subgroup_size, (_GLF_IDENTITY(true, (true) || false) ? _GLF_IDENTITY(_GLF_struct_replacement_14._f1.subgroup_size, (_GLF_struct_replacement_14._f1.subgroup_size) - 0u) : _GLF_FUZZED(workgroup_base)))) / 1u)) | (_GLF_IDENTITY(_GLF_struct_replacement_14._f1.subgroup_size, (_GLF_IDENTITY(true, (true) || false) ? _GLF_IDENTITY(_GLF_struct_replacement_14._f1.subgroup_size, (_GLF_struct_replacement_14._f1.subgroup_size) - 0u) : _GLF_FUZZED(workgroup_base)))), min((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_struct_replacement_14._f1.subgroup_size, (_GLF_IDENTITY(true, (true) || false) ? _GLF_IDENTITY(_GLF_struct_replacement_14._f1.subgroup_size, (_GLF_struct_replacement_14._f1.subgroup_size) - 0u) : _GLF_FUZZED(workgroup_base))), (_GLF_IDENTITY(_GLF_struct_replacement_14._f1.subgroup_size, (_GLF_IDENTITY(true, (true) || false) ? _GLF_IDENTITY(_GLF_struct_replacement_14._f1.subgroup_size, (_GLF_struct_replacement_14._f1.subgroup_size) - 0u) : _GLF_FUZZED(workgroup_base)))) / 1u)) | (_GLF_IDENTITY(_GLF_struct_replacement_14._f1.subgroup_size, (_GLF_IDENTITY(true, (true) || false) ? _GLF_IDENTITY(_GLF_struct_replacement_14._f1.subgroup_size, (_GLF_struct_replacement_14._f1.subgroup_size) - 0u) : _GLF_FUZZED(workgroup_base)))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_struct_replacement_14._f1.subgroup_size, (_GLF_IDENTITY(true, (true) || false) ? _GLF_IDENTITY(_GLF_struct_replacement_14._f1.subgroup_size, (_GLF_struct_replacement_14._f1.subgroup_size) - 0u) : _GLF_FUZZED(workgroup_base))), (_GLF_IDENTITY(_GLF_struct_replacement_14._f1.subgroup_size, (_GLF_IDENTITY(true, (true) || false) ? _GLF_IDENTITY(_GLF_struct_replacement_14._f1.subgroup_size, (_GLF_struct_replacement_14._f1.subgroup_size) - 0u) : _GLF_FUZZED(workgroup_base)))) / 1u)) | (_GLF_IDENTITY(_GLF_struct_replacement_14._f1.subgroup_size, (_GLF_IDENTITY(true, _GLF_IDENTITY((true) || false, false || ((true) || false))) ? _GLF_IDENTITY(_GLF_struct_replacement_14._f1.subgroup_size, (_GLF_struct_replacement_14._f1.subgroup_size) - 0u) : _GLF_FUZZED(workgroup_base))))))), min(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_struct_replacement_14._f1.subgroup_size, (_GLF_IDENTITY(true, (true) || false) ? _GLF_IDENTITY(_GLF_struct_replacement_14._f1.subgroup_size, (_GLF_struct_replacement_14._f1.subgroup_size) - 0u) : _GLF_FUZZED(workgroup_base))), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_struct_replacement_14._f1.subgroup_size, (_GLF_IDENTITY(true, (true) || false) ? _GLF_IDENTITY(_GLF_struct_replacement_14._f1.subgroup_size, (_GLF_struct_replacement_14._f1.subgroup_size) - 0u) : _GLF_FUZZED(workgroup_base))), (_GLF_IDENTITY(_GLF_struct_replacement_14._f1.subgroup_size, (_GLF_IDENTITY(true, (true) || false) ? _GLF_IDENTITY(_GLF_struct_replacement_14._f1.subgroup_size, (_GLF_struct_replacement_14._f1.subgroup_size) - 0u) : _GLF_FUZZED(workgroup_base)))) / 1u)) | (_GLF_IDENTITY(_GLF_struct_replacement_14._f1.subgroup_size, _GLF_IDENTITY((_GLF_IDENTITY(true, (true) || false) ? _GLF_IDENTITY(_GLF_struct_replacement_14._f1.subgroup_size, (_GLF_struct_replacement_14._f1.subgroup_size) - 0u) : _GLF_FUZZED(workgroup_base)), _GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(workgroup_size) : (_GLF_IDENTITY(true, (true) || false) ? _GLF_IDENTITY(_GLF_struct_replacement_14._f1.subgroup_size, (_GLF_struct_replacement_14._f1.subgroup_size) - 0u) : _GLF_FUZZED(workgroup_base))), max(_GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(workgroup_size) : (_GLF_IDENTITY(true, (true) || false) ? _GLF_IDENTITY(_GLF_struct_replacement_14._f1.subgroup_size, (_GLF_struct_replacement_14._f1.subgroup_size) - 0u) : _GLF_FUZZED(workgroup_base))), ((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(workgroup_size) : (_GLF_IDENTITY(true, (true) || false) ? _GLF_IDENTITY(_GLF_struct_replacement_14._f1.subgroup_size, (_GLF_struct_replacement_14._f1.subgroup_size) - 0u) : _GLF_FUZZED(workgroup_base)))) >> 0u), _GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(workgroup_size) : (_GLF_IDENTITY(true, (true) || false) ? _GLF_IDENTITY(_GLF_struct_replacement_14._f1.subgroup_size, (_GLF_struct_replacement_14._f1.subgroup_size) - 0u) : _GLF_FUZZED(workgroup_base))), clamp((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(workgroup_size) : (_GLF_IDENTITY(true, (true) || false) ? _GLF_IDENTITY(_GLF_struct_replacement_14._f1.subgroup_size, (_GLF_struct_replacement_14._f1.subgroup_size) - 0u) : _GLF_FUZZED(workgroup_base))), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(workgroup_size) : (_GLF_IDENTITY(true, (true) || false) ? _GLF_IDENTITY(_GLF_struct_replacement_14._f1.subgroup_size, (_GLF_struct_replacement_14._f1.subgroup_size) - 0u) : _GLF_FUZZED(workgroup_base))), _GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(workgroup_size) : (_GLF_IDENTITY(true, (true) || false) ? _GLF_IDENTITY(_GLF_struct_replacement_14._f1.subgroup_size, (_GLF_struct_replacement_14._f1.subgroup_size) - 0u) : _GLF_FUZZED(workgroup_base))), (false ? _GLF_FUZZED(subgroup_local_id) : (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(workgroup_size) : (_GLF_IDENTITY(true, (true) || false) ? _GLF_IDENTITY(_GLF_struct_replacement_14._f1.subgroup_size, (_GLF_struct_replacement_14._f1.subgroup_size) - 0u) : _GLF_FUZZED(workgroup_base)))))))))))), min((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_struct_replacement_14._f1.subgroup_size, (_GLF_IDENTITY(_GLF_IDENTITY(true, (true) || false) ? _GLF_IDENTITY(_GLF_struct_replacement_14._f1.subgroup_size, (_GLF_struct_replacement_14._f1.subgroup_size) - _GLF_IDENTITY(0u, min(0u, _GLF_IDENTITY(0u, 0u | (0u))))) : _GLF_FUZZED(workgroup_base), clamp(_GLF_IDENTITY(true, (true) || false) ? _GLF_IDENTITY(_GLF_struct_replacement_14._f1.subgroup_size, (_GLF_struct_replacement_14._f1.subgroup_size) - _GLF_IDENTITY(0u, min(0u, _GLF_IDENTITY(0u, 0u | (0u))))) : _GLF_FUZZED(workgroup_base), _GLF_IDENTITY(true, (true) || false) ? _GLF_IDENTITY(_GLF_struct_replacement_14._f1.subgroup_size, (_GLF_struct_replacement_14._f1.subgroup_size) - _GLF_IDENTITY(0u, min(0u, _GLF_IDENTITY(0u, 0u | (0u))))) : _GLF_FUZZED(workgroup_base), _GLF_IDENTITY(_GLF_IDENTITY(true, (true) || false) ? _GLF_IDENTITY(_GLF_struct_replacement_14._f1.subgroup_size, (_GLF_struct_replacement_14._f1.subgroup_size) - _GLF_IDENTITY(0u, min(0u, _GLF_IDENTITY(0u, 0u | (0u))))) : _GLF_FUZZED(workgroup_base), 1u * (_GLF_IDENTITY(true, (true) || false) ? _GLF_IDENTITY(_GLF_struct_replacement_14._f1.subgroup_size, (_GLF_struct_replacement_14._f1.subgroup_size) - _GLF_IDENTITY(0u, min(0u, _GLF_IDENTITY(0u, 0u | (0u))))) : _GLF_FUZZED(workgroup_base))))))), (_GLF_IDENTITY(_GLF_struct_replacement_14._f1.subgroup_size, (_GLF_IDENTITY(true, (true) || _GLF_IDENTITY(false, (false) || false)) ? _GLF_IDENTITY(_GLF_struct_replacement_14._f1.subgroup_size, (_GLF_struct_replacement_14._f1.subgroup_size) - 0u) : _GLF_FUZZED(workgroup_base)))) / 1u)) | (_GLF_IDENTITY(_GLF_struct_replacement_14._f1.subgroup_size, (_GLF_IDENTITY(true, (true) || false) ? _GLF_IDENTITY(_GLF_struct_replacement_14._f1.subgroup_size, (_GLF_struct_replacement_14._f1.subgroup_size) - 0u) : _GLF_FUZZED(workgroup_base)))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_struct_replacement_14._f1.subgroup_size, (_GLF_IDENTITY(true, (true) || false) ? _GLF_IDENTITY(_GLF_struct_replacement_14._f1.subgroup_size, (_GLF_struct_replacement_14._f1.subgroup_size) - 0u) : _GLF_FUZZED(workgroup_base))), (_GLF_IDENTITY(_GLF_struct_replacement_14._f1.subgroup_size, (_GLF_IDENTITY(true, (true) || false) ? _GLF_IDENTITY(_GLF_struct_replacement_14._f1.subgroup_size, (_GLF_struct_replacement_14._f1.subgroup_size) - 0u) : _GLF_FUZZED(workgroup_base)))) / 1u)) | (_GLF_IDENTITY(_GLF_struct_replacement_14._f1.subgroup_size, (_GLF_IDENTITY(true, (true) || false) ? _GLF_IDENTITY(_GLF_struct_replacement_14._f1.subgroup_size, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_struct_replacement_14._f1.subgroup_size, (_GLF_struct_replacement_14._f1.subgroup_size) | (_GLF_struct_replacement_14._f1.subgroup_size)), (false ? _GLF_FUZZED(virtual_gid) : _GLF_IDENTITY(_GLF_struct_replacement_14._f1.subgroup_size, (_GLF_struct_replacement_14._f1.subgroup_size) | (_GLF_struct_replacement_14._f1.subgroup_size))))) - 0u) : _GLF_FUZZED(workgroup_base))))))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_struct_replacement_14._f1.subgroup_size, (_GLF_IDENTITY(true, (true) || false) ? _GLF_IDENTITY(_GLF_struct_replacement_14._f1.subgroup_size, (_GLF_struct_replacement_14._f1.subgroup_size) - 0u) : _GLF_IDENTITY(_GLF_FUZZED(workgroup_base), (_GLF_FUZZED(_GLF_IDENTITY(workgroup_base, max(_GLF_IDENTITY(workgroup_base, (true ? workgroup_base : _GLF_FUZZED(virtual_gid))), _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, 0u ^ (workgroup_base)), max(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, 0u ^ (workgroup_base)), ~ (~ (_GLF_IDENTITY(workgroup_base, 0u ^ (workgroup_base))))), _GLF_IDENTITY(workgroup_base, 0u ^ (workgroup_base)))))))) | (_GLF_FUZZED(workgroup_base))))), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_struct_replacement_14._f1.subgroup_size, (_GLF_IDENTITY(true, (true) || false) ? _GLF_IDENTITY(_GLF_struct_replacement_14._f1.subgroup_size, (_GLF_struct_replacement_14._f1.subgroup_size) - 0u) : _GLF_FUZZED(workgroup_base))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_struct_replacement_14._f1.subgroup_size, (_GLF_IDENTITY(true, (true) || false) ? _GLF_IDENTITY(_GLF_struct_replacement_14._f1.subgroup_size, (_GLF_struct_replacement_14._f1.subgroup_size) - 0u) : _GLF_FUZZED(workgroup_base))), (_GLF_IDENTITY(_GLF_struct_replacement_14._f1.subgroup_size, (_GLF_IDENTITY(true, (true) || false) ? _GLF_IDENTITY(_GLF_struct_replacement_14._f1.subgroup_size, (_GLF_struct_replacement_14._f1.subgroup_size) - 0u) : _GLF_FUZZED(workgroup_base)))) | (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_struct_replacement_14._f1.subgroup_size, (_GLF_IDENTITY(true, (true) || false) ? _GLF_IDENTITY(_GLF_struct_replacement_14._f1.subgroup_size, (_GLF_struct_replacement_14._f1.subgroup_size) - 0u) : _GLF_FUZZED(workgroup_base))), (_GLF_IDENTITY(_GLF_struct_replacement_14._f1.subgroup_size, (_GLF_IDENTITY(true, (true) || false) ? _GLF_IDENTITY(_GLF_struct_replacement_14._f1.subgroup_size, (_GLF_struct_replacement_14._f1.subgroup_size) - 0u) : _GLF_FUZZED(workgroup_base)))) / 1u))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_struct_replacement_14._f1.subgroup_size, (_GLF_IDENTITY(true, _GLF_IDENTITY((true), ! (! ((true)))) || false) ? _GLF_IDENTITY(_GLF_struct_replacement_14._f1.subgroup_size, (_GLF_struct_replacement_14._f1.subgroup_size) - 0u) : _GLF_FUZZED(workgroup_base))), (_GLF_IDENTITY(_GLF_struct_replacement_14._f1.subgroup_size, (_GLF_IDENTITY(true, (true) || false) ? _GLF_IDENTITY(_GLF_struct_replacement_14._f1.subgroup_size, (_GLF_struct_replacement_14._f1.subgroup_size) - 0u) : _GLF_FUZZED(workgroup_base)))) | (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_struct_replacement_14._f1.subgroup_size, (_GLF_IDENTITY(true, (true) || false) ? _GLF_IDENTITY(_GLF_struct_replacement_14._f1.subgroup_size, (_GLF_struct_replacement_14._f1.subgroup_size) - 0u) : _GLF_FUZZED(workgroup_base))), (_GLF_IDENTITY(_GLF_struct_replacement_14._f1.subgroup_size, (_GLF_IDENTITY(true, (true) || false) ? _GLF_IDENTITY(_GLF_struct_replacement_14._f1.subgroup_size, _GLF_IDENTITY((_GLF_struct_replacement_14._f1.subgroup_size), ((_GLF_struct_replacement_14._f1.subgroup_size)) | 0u) - 0u) : _GLF_IDENTITY(_GLF_FUZZED(workgroup_base), (_GLF_FUZZED(workgroup_base)) << 0u)))) / 1u))), 0u ^ (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_struct_replacement_14._f1.subgroup_size, (_GLF_IDENTITY(true, (true) || false) ? _GLF_IDENTITY(_GLF_struct_replacement_14._f1.subgroup_size, (_GLF_struct_replacement_14._f1.subgroup_size) - 0u) : _GLF_FUZZED(workgroup_base))), (_GLF_IDENTITY(_GLF_struct_replacement_14._f1.subgroup_size, (_GLF_IDENTITY(true, (true) || false) ? _GLF_IDENTITY(_GLF_struct_replacement_14._f1.subgroup_size, (_GLF_struct_replacement_14._f1.subgroup_size) - 0u) : _GLF_FUZZED(workgroup_base)))) | (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_struct_replacement_14._f1.subgroup_size, (_GLF_IDENTITY(true, (true) || false) ? _GLF_IDENTITY(_GLF_struct_replacement_14._f1.subgroup_size, (_GLF_struct_replacement_14._f1.subgroup_size) - 0u) : _GLF_FUZZED(workgroup_base))), (_GLF_IDENTITY(_GLF_struct_replacement_14._f1.subgroup_size, (_GLF_IDENTITY(true, (true) || false) ? _GLF_IDENTITY(_GLF_struct_replacement_14._f1.subgroup_size, (_GLF_struct_replacement_14._f1.subgroup_size) - 0u) : _GLF_FUZZED(workgroup_base)))) / 1u)))))) | 0u)) / 1u)) | (_GLF_IDENTITY(_GLF_struct_replacement_14._f1.subgroup_size, (_GLF_IDENTITY(true, (true) || false) ? _GLF_IDENTITY(_GLF_struct_replacement_14._f1.subgroup_size, (_GLF_struct_replacement_14._f1.subgroup_size) - 0u) : _GLF_FUZZED(workgroup_base)))), min((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_struct_replacement_14._f1.subgroup_size, (_GLF_IDENTITY(true, (true) || false) ? _GLF_IDENTITY(_GLF_IDENTITY(_GLF_struct_replacement_14._f1.subgroup_size, (0u >> _GLF_IDENTITY(uint(8u), uint(8u))) ^ (_GLF_struct_replacement_14._f1.subgroup_size)), (_GLF_struct_replacement_14._f1.subgroup_size) - _GLF_IDENTITY(0u, _GLF_IDENTITY((true ? _GLF_IDENTITY(0u, min(_GLF_IDENTITY(0u, uint(uint(0u))), _GLF_IDENTITY(0u, (0u) << 0u))) : _GLF_FUZZED(workgroup_base)), (true ? (true ? _GLF_IDENTITY(0u, min(_GLF_IDENTITY(0u, uint(uint(0u))), _GLF_IDENTITY(0u, (0u) << 0u))) : _GLF_FUZZED(workgroup_base)) : _GLF_FUZZED(35774u))))) : _GLF_FUZZED(workgroup_base))), (_GLF_IDENTITY(_GLF_struct_replacement_14._f1.subgroup_size, (_GLF_IDENTITY(true, (_GLF_IDENTITY(true, bool(bvec4(_GLF_IDENTITY(true, (true) || false), true, false, true)))) || false) ? _GLF_IDENTITY(_GLF_struct_replacement_14._f1.subgroup_size, (_GLF_struct_replacement_14._f1.subgroup_size) - 0u) : _GLF_FUZZED(workgroup_base)))) / 1u)) | (_GLF_IDENTITY(_GLF_struct_replacement_14._f1.subgroup_size, (_GLF_IDENTITY(_GLF_IDENTITY(true, (true) || false) ? _GLF_IDENTITY(_GLF_struct_replacement_14._f1.subgroup_size, (_GLF_struct_replacement_14._f1.subgroup_size) - 0u) : _GLF_FUZZED(workgroup_base), clamp(_GLF_IDENTITY(true, (true) || false) ? _GLF_IDENTITY(_GLF_struct_replacement_14._f1.subgroup_size, (_GLF_struct_replacement_14._f1.subgroup_size) - 0u) : _GLF_FUZZED(workgroup_base), _GLF_IDENTITY(true, (true) || false) ? _GLF_IDENTITY(_GLF_struct_replacement_14._f1.subgroup_size, (_GLF_struct_replacement_14._f1.subgroup_size) - 0u) : _GLF_FUZZED(workgroup_base), _GLF_IDENTITY(true, (true) || false) ? _GLF_IDENTITY(_GLF_struct_replacement_14._f1.subgroup_size, (_GLF_struct_replacement_14._f1.subgroup_size) - 0u) : _GLF_FUZZED(workgroup_base)))))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_struct_replacement_14._f1.subgroup_size, (_GLF_IDENTITY(_GLF_IDENTITY(true, (true) || false) ? _GLF_IDENTITY(_GLF_struct_replacement_14._f1.subgroup_size, (_GLF_struct_replacement_14._f1.subgroup_size) - 0u) : _GLF_FUZZED(workgroup_base), max(_GLF_IDENTITY(true, (true) || false) ? _GLF_IDENTITY(_GLF_struct_replacement_14._f1.subgroup_size, (_GLF_struct_replacement_14._f1.subgroup_size) - 0u) : _GLF_FUZZED(workgroup_base), _GLF_IDENTITY(true, (true) || false) ? _GLF_IDENTITY(_GLF_struct_replacement_14._f1.subgroup_size, (_GLF_struct_replacement_14._f1.subgroup_size) - _GLF_IDENTITY(0u, clamp(0u, _GLF_IDENTITY(0u, clamp(0u, 0u, 0u)), 0u))) : _GLF_FUZZED(workgroup_base))))), (_GLF_IDENTITY(_GLF_struct_replacement_14._f1.subgroup_size, (_GLF_IDENTITY(true, _GLF_IDENTITY((true) || false, bool(bvec2((true) || false, false)))) ? _GLF_IDENTITY(_GLF_struct_replacement_14._f1.subgroup_size, (_GLF_struct_replacement_14._f1.subgroup_size) - 0u) : _GLF_FUZZED(_GLF_IDENTITY(workgroup_base, min(workgroup_base, _GLF_IDENTITY(workgroup_base, (workgroup_base) - 0u))))))) / 1u)) | (_GLF_IDENTITY(_GLF_struct_replacement_14._f1.subgroup_size, (_GLF_IDENTITY(_GLF_IDENTITY(true, true && (true)), (true) || false) ? _GLF_IDENTITY(_GLF_IDENTITY(_GLF_struct_replacement_14._f1.subgroup_size, max(_GLF_struct_replacement_14._f1.subgroup_size, _GLF_struct_replacement_14._f1.subgroup_size)), (_GLF_struct_replacement_14._f1.subgroup_size) - 0u) : _GLF_IDENTITY(_GLF_FUZZED(workgroup_base), max(_GLF_FUZZED(workgroup_base), _GLF_FUZZED(workgroup_base))))))))))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_struct_replacement_14._f1.subgroup_size, (_GLF_IDENTITY(true, (true) || false) ? _GLF_IDENTITY(_GLF_struct_replacement_14._f1.subgroup_size, _GLF_IDENTITY((_GLF_struct_replacement_14._f1.subgroup_size) - 0u, ~ (_GLF_IDENTITY(~ ((_GLF_struct_replacement_14._f1.subgroup_size) - 0u), 0u ^ (~ ((_GLF_struct_replacement_14._f1.subgroup_size) - 0u)))))) : _GLF_FUZZED(workgroup_base))), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_struct_replacement_14._f1.subgroup_size, (_GLF_IDENTITY(_GLF_IDENTITY(true, (true) || false), (_GLF_IDENTITY(_GLF_IDENTITY(true, (true) || false), false || (_GLF_IDENTITY(_GLF_IDENTITY(true, (true) || false), bool(bvec3(_GLF_IDENTITY(true, (true) || false), false, false)))))) || false) ? _GLF_IDENTITY(_GLF_struct_replacement_14._f1.subgroup_size, (_GLF_struct_replacement_14._f1.subgroup_size) - _GLF_IDENTITY(0u, ~ (_GLF_IDENTITY(~ (0u), 0u ^ (~ (0u)))))) : _GLF_FUZZED(workgroup_base))), (_GLF_IDENTITY(_GLF_struct_replacement_14._f1.subgroup_size, (_GLF_IDENTITY(true, (true) || false) ? _GLF_IDENTITY(_GLF_struct_replacement_14._f1.subgroup_size, (_GLF_struct_replacement_14._f1.subgroup_size) - 0u) : _GLF_FUZZED(workgroup_base)))) / 1u)) | (_GLF_IDENTITY(_GLF_struct_replacement_14._f1.subgroup_size, (_GLF_IDENTITY(true, (true) || false) ? _GLF_IDENTITY(_GLF_struct_replacement_14._f1.subgroup_size, (_GLF_struct_replacement_14._f1.subgroup_size) - 0u) : _GLF_FUZZED(workgroup_base)))), min((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_struct_replacement_14._f1.subgroup_size, (_GLF_IDENTITY(true, (true) || false) ? _GLF_IDENTITY(_GLF_struct_replacement_14._f1.subgroup_size, (_GLF_struct_replacement_14._f1.subgroup_size) - 0u) : _GLF_FUZZED(workgroup_base))), (_GLF_IDENTITY(_GLF_struct_replacement_14._f1.subgroup_size, (_GLF_IDENTITY(true, (true) || false) ? _GLF_IDENTITY(_GLF_struct_replacement_14._f1.subgroup_size, (_GLF_struct_replacement_14._f1.subgroup_size) - 0u) : _GLF_FUZZED(workgroup_base)))) / 1u)) | (_GLF_IDENTITY(_GLF_struct_replacement_14._f1.subgroup_size, (_GLF_IDENTITY(true, (true) || false) ? _GLF_IDENTITY(_GLF_struct_replacement_14._f1.subgroup_size, (_GLF_struct_replacement_14._f1.subgroup_size) - 0u) : _GLF_FUZZED(workgroup_base)))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_struct_replacement_14._f1.subgroup_size, (_GLF_IDENTITY(true, (true) || false) ? _GLF_IDENTITY(_GLF_struct_replacement_14._f1.subgroup_size, (_GLF_struct_replacement_14._f1.subgroup_size) - 0u) : _GLF_FUZZED(workgroup_base))), (_GLF_IDENTITY(_GLF_struct_replacement_14._f1.subgroup_size, (_GLF_IDENTITY(true, (true) || false) ? _GLF_IDENTITY(_GLF_struct_replacement_14._f1.subgroup_size, (_GLF_struct_replacement_14._f1.subgroup_size) - 0u) : _GLF_FUZZED(workgroup_base)))) / 1u)) | (_GLF_IDENTITY(_GLF_struct_replacement_14._f1.subgroup_size, (_GLF_IDENTITY(true, _GLF_IDENTITY((true) || false, false || ((true) || false))) ? _GLF_IDENTITY(_GLF_struct_replacement_14._f1.subgroup_size, (_GLF_struct_replacement_14._f1.subgroup_size) - 0u) : _GLF_FUZZED(workgroup_base))))))), min(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_struct_replacement_14._f1.subgroup_size, (_GLF_IDENTITY(true, (true) || false) ? _GLF_IDENTITY(_GLF_struct_replacement_14._f1.subgroup_size, (_GLF_struct_replacement_14._f1.subgroup_size) - 0u) : _GLF_FUZZED(workgroup_base))), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_struct_replacement_14._f1.subgroup_size, (_GLF_IDENTITY(true, (true) || false) ? _GLF_IDENTITY(_GLF_struct_replacement_14._f1.subgroup_size, (_GLF_struct_replacement_14._f1.subgroup_size) - 0u) : _GLF_FUZZED(workgroup_base))), (_GLF_IDENTITY(_GLF_struct_replacement_14._f1.subgroup_size, (_GLF_IDENTITY(true, (true) || false) ? _GLF_IDENTITY(_GLF_struct_replacement_14._f1.subgroup_size, (_GLF_struct_replacement_14._f1.subgroup_size) - 0u) : _GLF_FUZZED(workgroup_base)))) / 1u)) | (_GLF_IDENTITY(_GLF_struct_replacement_14._f1.subgroup_size, _GLF_IDENTITY((_GLF_IDENTITY(true, (true) || false) ? _GLF_IDENTITY(_GLF_struct_replacement_14._f1.subgroup_size, (_GLF_struct_replacement_14._f1.subgroup_size) - 0u) : _GLF_FUZZED(workgroup_base)), _GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(workgroup_size) : (_GLF_IDENTITY(true, (true) || false) ? _GLF_IDENTITY(_GLF_struct_replacement_14._f1.subgroup_size, (_GLF_struct_replacement_14._f1.subgroup_size) - 0u) : _GLF_FUZZED(workgroup_base))), max(_GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(workgroup_size) : (_GLF_IDENTITY(true, (true) || false) ? _GLF_IDENTITY(_GLF_struct_replacement_14._f1.subgroup_size, (_GLF_struct_replacement_14._f1.subgroup_size) - 0u) : _GLF_FUZZED(workgroup_base))), ((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(workgroup_size) : (_GLF_IDENTITY(true, (true) || false) ? _GLF_IDENTITY(_GLF_struct_replacement_14._f1.subgroup_size, (_GLF_struct_replacement_14._f1.subgroup_size) - 0u) : _GLF_FUZZED(workgroup_base)))) >> 0u), _GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(workgroup_size) : (_GLF_IDENTITY(true, (true) || false) ? _GLF_IDENTITY(_GLF_struct_replacement_14._f1.subgroup_size, (_GLF_struct_replacement_14._f1.subgroup_size) - 0u) : _GLF_FUZZED(workgroup_base))), clamp((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(workgroup_size) : (_GLF_IDENTITY(true, (true) || false) ? _GLF_IDENTITY(_GLF_struct_replacement_14._f1.subgroup_size, (_GLF_struct_replacement_14._f1.subgroup_size) - 0u) : _GLF_FUZZED(workgroup_base))), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(workgroup_size) : (_GLF_IDENTITY(true, (true) || false) ? _GLF_IDENTITY(_GLF_struct_replacement_14._f1.subgroup_size, (_GLF_struct_replacement_14._f1.subgroup_size) - 0u) : _GLF_FUZZED(workgroup_base))), _GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(workgroup_size) : (_GLF_IDENTITY(true, (true) || false) ? _GLF_IDENTITY(_GLF_struct_replacement_14._f1.subgroup_size, (_GLF_struct_replacement_14._f1.subgroup_size) - 0u) : _GLF_FUZZED(workgroup_base))), (false ? _GLF_FUZZED(subgroup_local_id) : (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(workgroup_size) : (_GLF_IDENTITY(true, (true) || false) ? _GLF_IDENTITY(_GLF_struct_replacement_14._f1.subgroup_size, (_GLF_struct_replacement_14._f1.subgroup_size) - 0u) : _GLF_FUZZED(workgroup_base)))))))))))), min((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_struct_replacement_14._f1.subgroup_size, (_GLF_IDENTITY(_GLF_IDENTITY(true, (true) || false) ? _GLF_IDENTITY(_GLF_struct_replacement_14._f1.subgroup_size, (_GLF_struct_replacement_14._f1.subgroup_size) - _GLF_IDENTITY(0u, min(0u, _GLF_IDENTITY(0u, 0u | (0u))))) : _GLF_FUZZED(workgroup_base), clamp(_GLF_IDENTITY(true, (true) || false) ? _GLF_IDENTITY(_GLF_struct_replacement_14._f1.subgroup_size, (_GLF_struct_replacement_14._f1.subgroup_size) - _GLF_IDENTITY(0u, min(0u, _GLF_IDENTITY(0u, 0u | (0u))))) : _GLF_FUZZED(workgroup_base), _GLF_IDENTITY(true, (true) || false) ? _GLF_IDENTITY(_GLF_struct_replacement_14._f1.subgroup_size, (_GLF_struct_replacement_14._f1.subgroup_size) - _GLF_IDENTITY(0u, min(0u, _GLF_IDENTITY(0u, 0u | (0u))))) : _GLF_FUZZED(workgroup_base), _GLF_IDENTITY(_GLF_IDENTITY(true, (true) || false) ? _GLF_IDENTITY(_GLF_struct_replacement_14._f1.subgroup_size, (_GLF_struct_replacement_14._f1.subgroup_size) - _GLF_IDENTITY(0u, min(0u, _GLF_IDENTITY(0u, 0u | (0u))))) : _GLF_FUZZED(workgroup_base), 1u * (_GLF_IDENTITY(true, (true) || false) ? _GLF_IDENTITY(_GLF_struct_replacement_14._f1.subgroup_size, (_GLF_struct_replacement_14._f1.subgroup_size) - _GLF_IDENTITY(0u, min(0u, _GLF_IDENTITY(0u, 0u | (0u))))) : _GLF_FUZZED(workgroup_base))))))), (_GLF_IDENTITY(_GLF_struct_replacement_14._f1.subgroup_size, (_GLF_IDENTITY(true, (true) || _GLF_IDENTITY(false, (false) || false)) ? _GLF_IDENTITY(_GLF_struct_replacement_14._f1.subgroup_size, (_GLF_struct_replacement_14._f1.subgroup_size) - 0u) : _GLF_FUZZED(workgroup_base)))) / 1u)) | (_GLF_IDENTITY(_GLF_struct_replacement_14._f1.subgroup_size, (_GLF_IDENTITY(true, (true) || false) ? _GLF_IDENTITY(_GLF_struct_replacement_14._f1.subgroup_size, (_GLF_struct_replacement_14._f1.subgroup_size) - 0u) : _GLF_FUZZED(workgroup_base)))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_struct_replacement_14._f1.subgroup_size, (_GLF_IDENTITY(true, (true) || false) ? _GLF_IDENTITY(_GLF_struct_replacement_14._f1.subgroup_size, (_GLF_struct_replacement_14._f1.subgroup_size) - 0u) : _GLF_FUZZED(workgroup_base))), (_GLF_IDENTITY(_GLF_struct_replacement_14._f1.subgroup_size, (_GLF_IDENTITY(true, (true) || false) ? _GLF_IDENTITY(_GLF_struct_replacement_14._f1.subgroup_size, (_GLF_struct_replacement_14._f1.subgroup_size) - 0u) : _GLF_FUZZED(workgroup_base)))) / 1u)) | (_GLF_IDENTITY(_GLF_struct_replacement_14._f1.subgroup_size, (_GLF_IDENTITY(true, (true) || false) ? _GLF_IDENTITY(_GLF_struct_replacement_14._f1.subgroup_size, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_struct_replacement_14._f1.subgroup_size, (_GLF_struct_replacement_14._f1.subgroup_size) | (_GLF_struct_replacement_14._f1.subgroup_size)), (false ? _GLF_FUZZED(virtual_gid) : _GLF_IDENTITY(_GLF_struct_replacement_14._f1.subgroup_size, (_GLF_struct_replacement_14._f1.subgroup_size) | (_GLF_struct_replacement_14._f1.subgroup_size))))) - 0u) : _GLF_FUZZED(workgroup_base))))))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_struct_replacement_14._f1.subgroup_size, (_GLF_IDENTITY(true, (true) || false) ? _GLF_IDENTITY(_GLF_struct_replacement_14._f1.subgroup_size, (_GLF_struct_replacement_14._f1.subgroup_size) - 0u) : _GLF_IDENTITY(_GLF_FUZZED(workgroup_base), (_GLF_FUZZED(_GLF_IDENTITY(workgroup_base, max(_GLF_IDENTITY(workgroup_base, (true ? workgroup_base : _GLF_FUZZED(virtual_gid))), _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, 0u ^ (workgroup_base)), max(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, 0u ^ (workgroup_base)), ~ (~ (_GLF_IDENTITY(workgroup_base, 0u ^ (workgroup_base))))), _GLF_IDENTITY(workgroup_base, 0u ^ (workgroup_base)))))))) | (_GLF_FUZZED(workgroup_base))))), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_struct_replacement_14._f1.subgroup_size, (_GLF_IDENTITY(true, (true) || false) ? _GLF_IDENTITY(_GLF_struct_replacement_14._f1.subgroup_size, (_GLF_struct_replacement_14._f1.subgroup_size) - 0u) : _GLF_FUZZED(workgroup_base))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_struct_replacement_14._f1.subgroup_size, (_GLF_IDENTITY(true, (true) || false) ? _GLF_IDENTITY(_GLF_struct_replacement_14._f1.subgroup_size, (_GLF_struct_replacement_14._f1.subgroup_size) - 0u) : _GLF_FUZZED(workgroup_base))), (_GLF_IDENTITY(_GLF_struct_replacement_14._f1.subgroup_size, (_GLF_IDENTITY(true, (true) || false) ? _GLF_IDENTITY(_GLF_struct_replacement_14._f1.subgroup_size, (_GLF_struct_replacement_14._f1.subgroup_size) - 0u) : _GLF_FUZZED(workgroup_base)))) | (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_struct_replacement_14._f1.subgroup_size, (_GLF_IDENTITY(true, (true) || false) ? _GLF_IDENTITY(_GLF_struct_replacement_14._f1.subgroup_size, (_GLF_struct_replacement_14._f1.subgroup_size) - 0u) : _GLF_FUZZED(workgroup_base))), (_GLF_IDENTITY(_GLF_struct_replacement_14._f1.subgroup_size, (_GLF_IDENTITY(true, (true) || false) ? _GLF_IDENTITY(_GLF_struct_replacement_14._f1.subgroup_size, (_GLF_struct_replacement_14._f1.subgroup_size) - 0u) : _GLF_FUZZED(workgroup_base)))) / 1u))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_struct_replacement_14._f1.subgroup_size, (_GLF_IDENTITY(true, _GLF_IDENTITY((true), ! (! ((true)))) || false) ? _GLF_IDENTITY(_GLF_struct_replacement_14._f1.subgroup_size, (_GLF_struct_replacement_14._f1.subgroup_size) - 0u) : _GLF_FUZZED(workgroup_base))), (_GLF_IDENTITY(_GLF_struct_replacement_14._f1.subgroup_size, (_GLF_IDENTITY(true, (true) || false) ? _GLF_IDENTITY(_GLF_struct_replacement_14._f1.subgroup_size, (_GLF_struct_replacement_14._f1.subgroup_size) - 0u) : _GLF_FUZZED(workgroup_base)))) | (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_struct_replacement_14._f1.subgroup_size, (_GLF_IDENTITY(true, (true) || false) ? _GLF_IDENTITY(_GLF_struct_replacement_14._f1.subgroup_size, (_GLF_struct_replacement_14._f1.subgroup_size) - 0u) : _GLF_FUZZED(workgroup_base))), (_GLF_IDENTITY(_GLF_struct_replacement_14._f1.subgroup_size, (_GLF_IDENTITY(true, (true) || false) ? _GLF_IDENTITY(_GLF_struct_replacement_14._f1.subgroup_size, _GLF_IDENTITY((_GLF_struct_replacement_14._f1.subgroup_size), ((_GLF_struct_replacement_14._f1.subgroup_size)) | 0u) - 0u) : _GLF_IDENTITY(_GLF_FUZZED(workgroup_base), (_GLF_FUZZED(workgroup_base)) << 0u)))) / 1u))), 0u ^ (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_struct_replacement_14._f1.subgroup_size, (_GLF_IDENTITY(true, (true) || false) ? _GLF_IDENTITY(_GLF_struct_replacement_14._f1.subgroup_size, (_GLF_struct_replacement_14._f1.subgroup_size) - 0u) : _GLF_FUZZED(workgroup_base))), (_GLF_IDENTITY(_GLF_struct_replacement_14._f1.subgroup_size, (_GLF_IDENTITY(true, (true) || false) ? _GLF_IDENTITY(_GLF_struct_replacement_14._f1.subgroup_size, (_GLF_struct_replacement_14._f1.subgroup_size) - 0u) : _GLF_FUZZED(workgroup_base)))) | (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_struct_replacement_14._f1.subgroup_size, (_GLF_IDENTITY(true, (true) || false) ? _GLF_IDENTITY(_GLF_struct_replacement_14._f1.subgroup_size, (_GLF_struct_replacement_14._f1.subgroup_size) - 0u) : _GLF_FUZZED(workgroup_base))), (_GLF_IDENTITY(_GLF_struct_replacement_14._f1.subgroup_size, (_GLF_IDENTITY(true, (true) || false) ? _GLF_IDENTITY(_GLF_struct_replacement_14._f1.subgroup_size, (_GLF_struct_replacement_14._f1.subgroup_size) - 0u) : _GLF_FUZZED(workgroup_base)))) / 1u)))))) | 0u)) / 1u)) | (_GLF_IDENTITY(_GLF_struct_replacement_14._f1.subgroup_size, (_GLF_IDENTITY(true, (true) || false) ? _GLF_IDENTITY(_GLF_struct_replacement_14._f1.subgroup_size, (_GLF_struct_replacement_14._f1.subgroup_size) - 0u) : _GLF_FUZZED(workgroup_base)))), min((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_struct_replacement_14._f1.subgroup_size, (_GLF_IDENTITY(true, (true) || false) ? _GLF_IDENTITY(_GLF_IDENTITY(_GLF_struct_replacement_14._f1.subgroup_size, (0u >> _GLF_IDENTITY(uint(8u), uint(8u))) ^ (_GLF_struct_replacement_14._f1.subgroup_size)), (_GLF_struct_replacement_14._f1.subgroup_size) - _GLF_IDENTITY(0u, _GLF_IDENTITY((true ? _GLF_IDENTITY(0u, min(_GLF_IDENTITY(0u, uint(uint(0u))), _GLF_IDENTITY(0u, (0u) << 0u))) : _GLF_FUZZED(workgroup_base)), (true ? (true ? _GLF_IDENTITY(0u, min(_GLF_IDENTITY(0u, uint(uint(0u))), _GLF_IDENTITY(0u, (0u) << 0u))) : _GLF_FUZZED(workgroup_base)) : _GLF_FUZZED(35774u))))) : _GLF_FUZZED(workgroup_base))), (_GLF_IDENTITY(_GLF_struct_replacement_14._f1.subgroup_size, (_GLF_IDENTITY(true, (_GLF_IDENTITY(true, bool(bvec4(_GLF_IDENTITY(true, (true) || false), true, false, true)))) || false) ? _GLF_IDENTITY(_GLF_struct_replacement_14._f1.subgroup_size, (_GLF_struct_replacement_14._f1.subgroup_size) - 0u) : _GLF_FUZZED(workgroup_base)))) / 1u)) | (_GLF_IDENTITY(_GLF_struct_replacement_14._f1.subgroup_size, (_GLF_IDENTITY(_GLF_IDENTITY(true, (true) || false) ? _GLF_IDENTITY(_GLF_struct_replacement_14._f1.subgroup_size, (_GLF_struct_replacement_14._f1.subgroup_size) - 0u) : _GLF_FUZZED(workgroup_base), clamp(_GLF_IDENTITY(true, (true) || false) ? _GLF_IDENTITY(_GLF_struct_replacement_14._f1.subgroup_size, (_GLF_struct_replacement_14._f1.subgroup_size) - 0u) : _GLF_FUZZED(workgroup_base), _GLF_IDENTITY(true, (true) || false) ? _GLF_IDENTITY(_GLF_struct_replacement_14._f1.subgroup_size, (_GLF_struct_replacement_14._f1.subgroup_size) - 0u) : _GLF_FUZZED(workgroup_base), _GLF_IDENTITY(true, (true) || false) ? _GLF_IDENTITY(_GLF_struct_replacement_14._f1.subgroup_size, (_GLF_struct_replacement_14._f1.subgroup_size) - 0u) : _GLF_FUZZED(workgroup_base)))))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_struct_replacement_14._f1.subgroup_size, (_GLF_IDENTITY(_GLF_IDENTITY(true, (true) || false) ? _GLF_IDENTITY(_GLF_struct_replacement_14._f1.subgroup_size, (_GLF_struct_replacement_14._f1.subgroup_size) - 0u) : _GLF_FUZZED(workgroup_base), max(_GLF_IDENTITY(true, (true) || false) ? _GLF_IDENTITY(_GLF_struct_replacement_14._f1.subgroup_size, (_GLF_struct_replacement_14._f1.subgroup_size) - 0u) : _GLF_FUZZED(workgroup_base), _GLF_IDENTITY(true, (true) || false) ? _GLF_IDENTITY(_GLF_struct_replacement_14._f1.subgroup_size, (_GLF_struct_replacement_14._f1.subgroup_size) - _GLF_IDENTITY(0u, clamp(0u, _GLF_IDENTITY(0u, clamp(0u, 0u, 0u)), 0u))) : _GLF_FUZZED(workgroup_base))))), (_GLF_IDENTITY(_GLF_struct_replacement_14._f1.subgroup_size, (_GLF_IDENTITY(true, _GLF_IDENTITY((true) || false, bool(bvec2((true) || false, false)))) ? _GLF_IDENTITY(_GLF_struct_replacement_14._f1.subgroup_size, (_GLF_struct_replacement_14._f1.subgroup_size) - 0u) : _GLF_FUZZED(_GLF_IDENTITY(workgroup_base, min(workgroup_base, _GLF_IDENTITY(workgroup_base, (workgroup_base) - 0u))))))) / 1u)) | (_GLF_IDENTITY(_GLF_struct_replacement_14._f1.subgroup_size, (_GLF_IDENTITY(_GLF_IDENTITY(true, true && (true)), (true) || false) ? _GLF_IDENTITY(_GLF_IDENTITY(_GLF_struct_replacement_14._f1.subgroup_size, max(_GLF_struct_replacement_14._f1.subgroup_size, _GLF_struct_replacement_14._f1.subgroup_size)), (_GLF_struct_replacement_14._f1.subgroup_size) - 0u) : _GLF_IDENTITY(_GLF_FUZZED(workgroup_base), max(_GLF_FUZZED(workgroup_base), _GLF_FUZZED(workgroup_base)))))))))))) ^ 0u), ~ (_GLF_IDENTITY(_GLF_IDENTITY(~ (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, 0u ^ (_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, min(subgroup_local_id, subgroup_local_id))) + 0u))) + 1) % _GLF_IDENTITY(_GLF_struct_replacement_14._f1.subgroup_size, (_GLF_struct_replacement_14._f1.subgroup_size) ^ (_GLF_IDENTITY(0u, 0u + (0u)) ^ 0u)), ((_GLF_IDENTITY(subgroup_local_id, 0u ^ (_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, min(subgroup_local_id, subgroup_local_id))) + 0u))) + 1) % _GLF_IDENTITY(_GLF_struct_replacement_14._f1.subgroup_size, (_GLF_struct_replacement_14._f1.subgroup_size) ^ (_GLF_IDENTITY(0u, 0u + (0u)) ^ 0u))) * (1u & 1u))), (~ ((subgroup_local_id + 1) % _GLF_IDENTITY(_GLF_struct_replacement_14._f1.subgroup_size, (_GLF_struct_replacement_14._f1.subgroup_size) ^ (0u ^ 0u)))) | (_GLF_IDENTITY(~ _GLF_IDENTITY(((_GLF_IDENTITY(subgroup_local_id + 1, max(_GLF_IDENTITY(subgroup_local_id + 1, clamp(subgroup_local_id + 1, _GLF_IDENTITY(subgroup_local_id + 1, max(subgroup_local_id + 1, subgroup_local_id + 1)), subgroup_local_id + 1)), subgroup_local_id + 1))) % _GLF_IDENTITY(_GLF_struct_replacement_14._f1.subgroup_size, (_GLF_struct_replacement_14._f1.subgroup_size) ^ (0u ^ _GLF_IDENTITY(0u, (0u) | (0u))))), _GLF_IDENTITY(uint(uvec4(((_GLF_IDENTITY(subgroup_local_id + 1, max(_GLF_IDENTITY(subgroup_local_id + 1, clamp(subgroup_local_id + 1, _GLF_IDENTITY(subgroup_local_id + 1, max(subgroup_local_id + 1, subgroup_local_id + 1)), subgroup_local_id + 1)), subgroup_local_id + 1))) % _GLF_IDENTITY(_GLF_struct_replacement_14._f1.subgroup_size, (_GLF_struct_replacement_14._f1.subgroup_size) ^ (0u ^ _GLF_IDENTITY(0u, (0u) | (0u))))), 0u, uint(_GLF_ZERO(0.0, injectionSwitch.x)), 0u)), (true ? uint(uvec4(((_GLF_IDENTITY(subgroup_local_id + 1, max(_GLF_IDENTITY(subgroup_local_id + 1, clamp(subgroup_local_id + 1, _GLF_IDENTITY(subgroup_local_id + 1, max(subgroup_local_id + 1, subgroup_local_id + 1)), subgroup_local_id + 1)), subgroup_local_id + 1))) % _GLF_IDENTITY(_GLF_struct_replacement_14._f1.subgroup_size, (_GLF_struct_replacement_14._f1.subgroup_size) ^ (0u ^ _GLF_IDENTITY(0u, (0u) | (0u))))), 0u, uint(_GLF_ZERO(0.0, injectionSwitch.x)), 0u)) : _GLF_FUZZED(174639u)))), 1u * (~ ((subgroup_local_id + 1) % _GLF_IDENTITY(_GLF_struct_replacement_14._f1.subgroup_size, (_GLF_struct_replacement_14._f1.subgroup_size) ^ (0u ^ 0u))))))), max(~ (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, ~ (_GLF_IDENTITY(~ (subgroup_local_id), _GLF_IDENTITY(uint(uvec2(~ (subgroup_local_id), 0u)), (true ? uint(uvec2(~ (subgroup_local_id), 0u)) : _GLF_FUZZED(subgroup_id)))))), _GLF_IDENTITY(0u | (subgroup_local_id), (false ? _GLF_FUZZED(subgroup_id) : 0u | (subgroup_local_id)))) + 1), clamp(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, 0u | (subgroup_local_id)) + 1), ((_GLF_IDENTITY(subgroup_local_id, 0u | (subgroup_local_id)) + 1)) >> uint(_GLF_ZERO(0.0, injectionSwitch.x))), max(_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, 0u | (subgroup_local_id)) + 1), ((_GLF_IDENTITY(subgroup_local_id, 0u | (subgroup_local_id)) + 1)) >> uint(_GLF_ZERO(0.0, injectionSwitch.x))), _GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, 0u | (subgroup_local_id)) + 1), ((_GLF_IDENTITY(subgroup_local_id, 0u | (subgroup_local_id)) + 1)) >> uint(_GLF_ZERO(0.0, injectionSwitch.x))))), max(_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, 0u | (subgroup_local_id)) + 1), ((_GLF_IDENTITY(subgroup_local_id, 0u | (subgroup_local_id)) + 1)) >> uint(_GLF_ZERO(0.0, injectionSwitch.x))), _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, 0u | (subgroup_local_id)) + 1), _GLF_IDENTITY(((_GLF_IDENTITY(subgroup_local_id, 0u | (subgroup_local_id)) + 1)), ~ (_GLF_IDENTITY(~ (((_GLF_IDENTITY(subgroup_local_id, 0u | (subgroup_local_id)) + 1))), (0u << _GLF_IDENTITY(uint(3u), uint(3u))) ^ (_GLF_IDENTITY(~ (((_GLF_IDENTITY(subgroup_local_id, 0u | (subgroup_local_id)) + 1))), (~ (((_GLF_IDENTITY(subgroup_local_id, 0u | (subgroup_local_id)) + 1)))) ^ 0u))))) >> uint(_GLF_ZERO(0.0, injectionSwitch.x))), (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, 0u | (subgroup_local_id)) + 1), ((_GLF_IDENTITY(subgroup_local_id, 0u | (subgroup_local_id)) + 1)) >> uint(_GLF_ZERO(0.0, injectionSwitch.x)))) - 0u))), (_GLF_IDENTITY(subgroup_local_id, 0u | (subgroup_local_id)) + 1), _GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, 0u | (subgroup_local_id)) + 1), ((_GLF_IDENTITY(subgroup_local_id, 0u | (subgroup_local_id)) + 1)) * 1u))) % _GLF_IDENTITY(_GLF_struct_replacement_14._f1.subgroup_size, _GLF_IDENTITY((_GLF_struct_replacement_14._f1.subgroup_size) ^ (0u ^ 0u), uint(_GLF_IDENTITY(uint((_GLF_struct_replacement_14._f1.subgroup_size) ^ (0u ^ 0u)), min(_GLF_IDENTITY(uint((_GLF_struct_replacement_14._f1.subgroup_size) ^ (0u ^ 0u)), (true ? _GLF_IDENTITY(uint((_GLF_struct_replacement_14._f1.subgroup_size) ^ (0u ^ 0u)), ~ (_GLF_IDENTITY(~ (uint((_GLF_IDENTITY(_GLF_struct_replacement_14._f1.subgroup_size, (true ? _GLF_struct_replacement_14._f1.subgroup_size : _GLF_FUZZED(workgroup_id)))) ^ (0u ^ 0u))), 0u | (~ (uint(_GLF_IDENTITY((_GLF_struct_replacement_14._f1.subgroup_size) ^ (0u ^ 0u), ((_GLF_struct_replacement_14._f1.subgroup_size) ^ (0u ^ 0u)) | ((_GLF_struct_replacement_14._f1.subgroup_size) ^ (0u ^ 0u))))))))) : _GLF_FUZZED(subgroup_id))), _GLF_IDENTITY(uint((_GLF_struct_replacement_14._f1.subgroup_size) ^ (0u ^ _GLF_IDENTITY(0u, 1u * (0u)))), max(_GLF_IDENTITY(uint((_GLF_struct_replacement_14._f1.subgroup_size) ^ (0u ^ 0u)), clamp(uint((_GLF_IDENTITY(_GLF_struct_replacement_14._f1.subgroup_size, clamp(_GLF_IDENTITY(_GLF_struct_replacement_14._f1.subgroup_size, (false ? _GLF_IDENTITY(_GLF_FUZZED(subgroup_id), (false ? _GLF_FUZZED(subgroup_id) : _GLF_FUZZED(subgroup_id))) : _GLF_IDENTITY(_GLF_struct_replacement_14._f1.subgroup_size, 0u + (_GLF_struct_replacement_14._f1.subgroup_size)))), _GLF_struct_replacement_14._f1.subgroup_size, _GLF_struct_replacement_14._f1.subgroup_size))) ^ (0u ^ 0u)), uint((_GLF_struct_replacement_14._f1.subgroup_size) ^ (0u ^ 0u)), uint((_GLF_struct_replacement_14._f1.subgroup_size) ^ (0u ^ 0u)))), uint((_GLF_struct_replacement_14._f1.subgroup_size) ^ (0u ^ 0u)))))))))), _GLF_IDENTITY(~ ((subgroup_local_id + 1) % _GLF_IDENTITY(_GLF_struct_replacement_14._f1.subgroup_size, _GLF_IDENTITY((_GLF_struct_replacement_14._f1.subgroup_size) ^ (0u ^ 0u), ((_GLF_struct_replacement_14._f1.subgroup_size) ^ (0u ^ 0u)) | ((_GLF_struct_replacement_14._f1.subgroup_size) ^ (0u ^ 0u))))), min(~ ((subgroup_local_id + 1) % _GLF_IDENTITY(_GLF_struct_replacement_14._f1.subgroup_size, (_GLF_struct_replacement_14._f1.subgroup_size) ^ (0u ^ 0u))), ~ ((subgroup_local_id + 1) % _GLF_IDENTITY(_GLF_struct_replacement_14._f1.subgroup_size, (_GLF_struct_replacement_14._f1.subgroup_size) ^ (0u ^ 0u))))))))));
 if(_GLF_DEAD(false))
  barrier();
 for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != (_GLF_IDENTITY((1 << _GLF_IDENTITY(int(7), int(7))) >> _GLF_IDENTITY(int(7), _GLF_IDENTITY(int(7), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) ? _GLF_FUZZED(-43603) : _GLF_IDENTITY(_GLF_IDENTITY(int(7), min(int(7), int(7))), (_GLF_IDENTITY(int(7), min(int(7), int(7)))) << 0)))), clamp((1 << _GLF_IDENTITY(int(7), int(7))) >> _GLF_IDENTITY(int(7), _GLF_IDENTITY(int(7), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) ? _GLF_FUZZED(-43603) : _GLF_IDENTITY(_GLF_IDENTITY(int(7), min(int(7), int(7))), (_GLF_IDENTITY(int(7), min(int(7), int(7)))) << 0)))), (1 << _GLF_IDENTITY(int(7), int(7))) >> _GLF_IDENTITY(int(7), _GLF_IDENTITY(int(7), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) ? _GLF_FUZZED(-43603) : _GLF_IDENTITY(_GLF_IDENTITY(int(7), min(int(7), int(7))), (_GLF_IDENTITY(int(7), min(int(7), int(7)))) << 0)))), (1 << _GLF_IDENTITY(int(7), int(7))) >> _GLF_IDENTITY(int(7), _GLF_IDENTITY(int(7), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) ? _GLF_FUZZED(-43603) : _GLF_IDENTITY(_GLF_IDENTITY(int(7), min(int(7), int(7))), (_GLF_IDENTITY(int(7), min(int(7), int(7)))) << 0)))))))); _injected_loop_counter ++)
  {
   for(int _injected_loop_counter = int(_GLF_ONE(1.0, injectionSwitch.y)); _GLF_WRAPPED_LOOP(_injected_loop_counter > (0 << _GLF_IDENTITY(int(5), int(5)))); _injected_loop_counter --)
    {
     GLF_merged3_0_2_50_2_1_16_3_1_13GLF_merged2_0_1_11_1_1_14virtual_gidworkgroup_sizenext_virtual_gidnum_workgroup.z = next_virtual_gid;
    }
  }
 if(_GLF_DEAD(false))
  {
   for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != (1 | ((1 << _GLF_IDENTITY(int(3), int(3))) >> _GLF_IDENTITY(int(3), int(3))))); _injected_loop_counter ++)
    {
     barrier();
    }
  }
 for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < int(_GLF_ONE(1.0, injectionSwitch.y))); _injected_loop_counter ++)
  {
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
     if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
      }
     else
      {
       if(_GLF_DEAD(false))
        barrier();
      }
    }
   else
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, false || (false))))))
      {
       if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
        }
       else
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
        }
       for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != (((((1 & 1) << _GLF_IDENTITY(int(3), int(3))) >> _GLF_IDENTITY(int(3), int(3))) << _GLF_IDENTITY(int(7), int(7))) >> _GLF_IDENTITY(int(7), int(7)))); _injected_loop_counter ++)
        {
         barrier();
        }
      }
     if(_GLF_DEAD(false))
      {
       do
        {
         barrier();
        }
       while(_GLF_WRAPPED_LOOP(false));
      }
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
      }
     else
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0)) || false)))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(_GLF_IDENTITY(true, (true) || false), true && (_GLF_IDENTITY(_GLF_IDENTITY(true, (true) || false), ! (! (_GLF_IDENTITY(true, (true) || false))))))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_WRAPPED_IF_TRUE(true))
          {
           if(_GLF_DEAD(false))
            barrier();
          }
         else
          {
          }
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
      }
     else
      {
      }
    }
  }
 do
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
  }
 while(_GLF_WRAPPED_LOOP(false));
 if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, float(mat2x4(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(-847.686) : injectionSwitch.y)))), 1.0, 1.0, 0.0, 1.0, exp(0.0), 1.0, 1.0))), _GLF_IDENTITY(bool(bvec2(injectionSwitch.x < injectionSwitch.y, true)), true && (bool(bvec2(injectionSwitch.x < injectionSwitch.y, true)))))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     if(_GLF_WRAPPED_IF_TRUE(true))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       do
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
          }
         else
          {
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(false))
              {
               do
                {
                 barrier();
                }
               while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, true && (false))));
              }
             if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
              {
               if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), _GLF_IDENTITY(bool(bool(! (true))), bool(bvec4(_GLF_IDENTITY(bool(bool(! (true))), ! (! (bool(bool(! (true)))))), false, false, false))))))))))
                {
                 barrier();
                 if(_GLF_DEAD(false))
                  barrier();
                }
               else
                {
                 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(_GLF_IDENTITY(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true), bvec3(bvec3(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true))))))))
                  barrier();
                }
              }
             else
              {
              }
            }
          }
        }
       while(_GLF_WRAPPED_LOOP(false));
      }
     else
      {
      }
    }
   else
    {
     if(_GLF_DEAD(false))
      barrier();
    }
  }
 else
  {
   if(_GLF_DEAD(false))
    {
     do
      {
       barrier();
      }
     while(_GLF_WRAPPED_LOOP(false));
    }
  }
 if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, bool(bool(false)))), ! (! (! (_GLF_IDENTITY(false, bool(bool(false)))))))))))
  {
  }
 else
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
      }
     else
      {
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
    }
   for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > (int(_GLF_ZERO(0.0, injectionSwitch.x)) << _GLF_IDENTITY(int(5), int(5)))); _injected_loop_counter --)
    {
     atomicStore(buf[GLF_merged3_0_2_50_2_1_16_3_1_13GLF_merged2_0_1_11_1_1_14virtual_gidworkgroup_sizenext_virtual_gidnum_workgroup.z], uint(1), 4, 64, _GLF_IDENTITY(4, (true ? 4 : _GLF_FUZZED(-70406))));
    }
  }
 uint read_1 = atomicLoad(buf[GLF_merged3_0_2_50_2_1_16_3_1_13GLF_merged2_0_1_11_1_1_14virtual_gidworkgroup_sizenext_virtual_gidnum_workgroup.xy.x], 4, 64, 0);
 if(_GLF_DEAD(false))
  {
   if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
    {
     barrier();
    }
   else
    {
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 atomicStore(buf[_GLF_IDENTITY(GLF_merged3_0_2_50_2_1_16_3_1_13GLF_merged2_0_1_11_1_1_14virtual_gidworkgroup_sizenext_virtual_gidnum_workgroup, uvec4(GLF_merged3_0_2_50_2_1_16_3_1_13GLF_merged2_0_1_11_1_1_14virtual_gidworkgroup_sizenext_virtual_gidnum_workgroup[0], GLF_merged3_0_2_50_2_1_16_3_1_13GLF_merged2_0_1_11_1_1_14virtual_gidworkgroup_sizenext_virtual_gidnum_workgroup[_GLF_IDENTITY(1, ~ (~ (1)))], GLF_merged3_0_2_50_2_1_16_3_1_13GLF_merged2_0_1_11_1_1_14virtual_gidworkgroup_sizenext_virtual_gidnum_workgroup[_GLF_IDENTITY(2, int(ivec4(2, 1, _GLF_IDENTITY(0, clamp(0, 0, _GLF_IDENTITY(0, int(ivec4(0, 1, 1, 1))))), 1)))], GLF_merged3_0_2_50_2_1_16_3_1_13GLF_merged2_0_1_11_1_1_14virtual_gidworkgroup_sizenext_virtual_gidnum_workgroup[3])).z], uint(read_1 + _GLF_IDENTITY(1, _GLF_IDENTITY((_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) ^ 0)) | int(_GLF_ZERO(0.0, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), (injectionSwitch.x) - 0.0)) - _GLF_IDENTITY(0.0, clamp(0.0, _GLF_IDENTITY(0.0, (0.0) * cos(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-750.690)), bool(false))))), 0.0))), (true ? _GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0)), max(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0), (injectionSwitch.x) - 0.0)), min((_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0)), (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0)))), (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0)))) - _GLF_IDENTITY(_GLF_IDENTITY(0.0, (_GLF_IDENTITY(_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-3.9))), (_GLF_IDENTITY(0.0, max(0.0, 0.0))) / 1.0)) / _GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, length(0.0), 1.0, 0.0)), dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, length(0.0), 1.0, 0.0)))), clamp(0.0, _GLF_IDENTITY(0.0, (0.0) * cos(0.0)), 0.0))) : _GLF_FUZZED(-9374.4201))))))), int(ivec3((_GLF_IDENTITY(1, (1) | int(_GLF_ZERO(0.0, injectionSwitch.x)))), 1, _GLF_IDENTITY(((1 << _GLF_IDENTITY(_GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), (int(3)) ^ 0)), 0 ^ (_GLF_IDENTITY(int(3), int(3))))) >> _GLF_IDENTITY(int(3), int(3))), (false ? _GLF_FUZZED(_GLF_IDENTITY(ivec3(_GLF_IDENTITY(94507, int(_GLF_IDENTITY(int(94507), (false ? _GLF_FUZZED(63369) : int(94507))))), -1837, _GLF_IDENTITY(397, 0 | (397))).r, _GLF_IDENTITY(min(ivec3(_GLF_IDENTITY(94507, int(_GLF_IDENTITY(int(94507), (false ? _GLF_FUZZED(63369) : int(94507))))), -1837, _GLF_IDENTITY(397, 0 | (397))).r, ivec3(_GLF_IDENTITY(94507, int(_GLF_IDENTITY(_GLF_IDENTITY(int(94507), int(ivec2(_GLF_IDENTITY(int(94507), (int(94507)) | (int(94507))), 0))), (_GLF_IDENTITY(false, ! (! (false))) ? _GLF_FUZZED(63369) : int(94507))))), -1837, _GLF_IDENTITY(397, 0 | (397))).r), (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)))) ? _GLF_FUZZED(-84661) : _GLF_IDENTITY(min(ivec3(_GLF_IDENTITY(94507, int(_GLF_IDENTITY(_GLF_IDENTITY(int(94507), (false ? _GLF_FUZZED(63369) : _GLF_IDENTITY(int(94507), 0 | (int(94507))))), min(_GLF_IDENTITY(_GLF_IDENTITY(int(94507), (false ? _GLF_FUZZED(63369) : _GLF_IDENTITY(int(94507), 0 | (int(94507))))), 0 | (_GLF_IDENTITY(_GLF_IDENTITY(int(94507), (false ? _GLF_FUZZED(63369) : _GLF_IDENTITY(int(94507), 0 | (int(94507))))), ~ (~ (_GLF_IDENTITY(int(94507), (false ? _GLF_FUZZED(63369) : _GLF_IDENTITY(int(94507), 0 | (int(94507)))))))))), _GLF_IDENTITY(int(94507), (false ? _GLF_FUZZED(63369) : _GLF_IDENTITY(int(94507), 0 | (int(94507))))))))), -1837, _GLF_IDENTITY(397, 0 | (397))).r, _GLF_IDENTITY(ivec3(_GLF_IDENTITY(94507, int(_GLF_IDENTITY(int(94507), (false ? _GLF_FUZZED(63369) : int(94507))))), -1837, _GLF_IDENTITY(397, 0 | (397))), (ivec3(_GLF_IDENTITY(94507, int(_GLF_IDENTITY(int(94507), (false ? _GLF_FUZZED(63369) : int(94507))))), -1837, _GLF_IDENTITY(397, 0 | (_GLF_IDENTITY(397, 0 | (397)))))) / ivec3(1, 1, 1)).r), (_GLF_IDENTITY(_GLF_IDENTITY(min(ivec3(_GLF_IDENTITY(94507, int(_GLF_IDENTITY(int(94507), (false ? _GLF_FUZZED(63369) : int(94507))))), -1837, _GLF_IDENTITY(397, 0 | (397))).r, _GLF_IDENTITY(ivec3(_GLF_IDENTITY(94507, int(_GLF_IDENTITY(int(94507), _GLF_IDENTITY((false ? _GLF_FUZZED(63369) : int(94507)), int(_GLF_IDENTITY(ivec2(_GLF_IDENTITY((false ? _GLF_FUZZED(63369) : int(94507)), min((false ? _GLF_FUZZED(63369) : int(94507)), (false ? _GLF_FUZZED(63369) : int(94507)))), 0), ivec2(0, 0) ^ (ivec2(_GLF_IDENTITY((false ? _GLF_FUZZED(63369) : int(94507)), min((false ? _GLF_FUZZED(63369) : int(94507)), (false ? _GLF_FUZZED(63369) : int(94507)))), 0)))))))), -1837, _GLF_IDENTITY(397, 0 | (397))), (ivec3(_GLF_IDENTITY(94507, int(_GLF_IDENTITY(int(94507), _GLF_IDENTITY((false ? _GLF_FUZZED(63369) : int(94507)), int(_GLF_IDENTITY(ivec2(_GLF_IDENTITY((false ? _GLF_FUZZED(63369) : int(94507)), min((false ? _GLF_FUZZED(63369) : int(94507)), (false ? _GLF_FUZZED(63369) : int(94507)))), 0), ivec2(0, 0) ^ (ivec2(_GLF_IDENTITY((false ? _GLF_FUZZED(63369) : int(94507)), min((false ? _GLF_FUZZED(63369) : int(94507)), (false ? _GLF_FUZZED(63369) : int(94507)))), 0)))))))), -1837, _GLF_IDENTITY(397, 0 | (397)))) | (_GLF_IDENTITY(ivec3(_GLF_IDENTITY(94507, int(_GLF_IDENTITY(int(94507), _GLF_IDENTITY((false ? _GLF_FUZZED(63369) : int(94507)), int(_GLF_IDENTITY(ivec2(_GLF_IDENTITY((false ? _GLF_FUZZED(63369) : int(94507)), min((false ? _GLF_FUZZED(63369) : int(94507)), (false ? _GLF_FUZZED(63369) : int(94507)))), 0), ivec2(0, 0) ^ (ivec2(_GLF_IDENTITY((false ? _GLF_FUZZED(63369) : int(94507)), min((false ? _GLF_FUZZED(63369) : int(94507)), (false ? _GLF_FUZZED(63369) : int(94507)))), 0)))))))), -1837, _GLF_IDENTITY(397, 0 | (397))), ~ (~ (ivec3(_GLF_IDENTITY(94507, int(_GLF_IDENTITY(int(94507), _GLF_IDENTITY((false ? _GLF_FUZZED(63369) : int(94507)), int(_GLF_IDENTITY(ivec2(_GLF_IDENTITY((false ? _GLF_FUZZED(63369) : int(94507)), min((false ? _GLF_FUZZED(63369) : int(94507)), (false ? _GLF_FUZZED(63369) : int(94507)))), 0), ivec2(0, 0) ^ (ivec2(_GLF_IDENTITY((false ? _GLF_FUZZED(63369) : int(94507)), min((false ? _GLF_FUZZED(63369) : int(94507)), (false ? _GLF_FUZZED(63369) : int(94507)))), 0)))))))), -1837, _GLF_IDENTITY(397, 0 | (397)))))))).r), 1 * (min(ivec3(_GLF_IDENTITY(94507, int(_GLF_IDENTITY(int(94507), (false ? _GLF_FUZZED(63369) : int(94507))))), -1837, _GLF_IDENTITY(397, 0 | (397))).r, ivec3(_GLF_IDENTITY(94507, int(_GLF_IDENTITY(int(94507), (false ? _GLF_FUZZED(63369) : int(94507))))), -1837, _GLF_IDENTITY(397, 0 | (397))).r))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(min(ivec3(_GLF_IDENTITY(94507, int(_GLF_IDENTITY(int(94507), (false ? _GLF_FUZZED(63369) : int(94507))))), -1837, _GLF_IDENTITY(397, 0 | (397))).r, _GLF_IDENTITY(ivec3(_GLF_IDENTITY(94507, int(_GLF_IDENTITY(int(94507), _GLF_IDENTITY((false ? _GLF_FUZZED(63369) : int(94507)), int(_GLF_IDENTITY(ivec2(_GLF_IDENTITY((false ? _GLF_FUZZED(63369) : int(94507)), min((false ? _GLF_FUZZED(63369) : int(94507)), (false ? _GLF_FUZZED(63369) : int(94507)))), 0), ivec2(0, 0) ^ (ivec2(_GLF_IDENTITY((false ? _GLF_FUZZED(63369) : int(94507)), min((false ? _GLF_FUZZED(63369) : int(94507)), (false ? _GLF_FUZZED(63369) : int(94507)))), 0)))))))), -1837, _GLF_IDENTITY(397, 0 | (397))), (ivec3(_GLF_IDENTITY(94507, int(_GLF_IDENTITY(int(94507), _GLF_IDENTITY((false ? _GLF_FUZZED(63369) : int(94507)), int(_GLF_IDENTITY(ivec2(_GLF_IDENTITY((false ? _GLF_FUZZED(63369) : int(94507)), min((false ? _GLF_FUZZED(63369) : int(94507)), (false ? _GLF_FUZZED(63369) : int(94507)))), 0), ivec2(0, 0) ^ (ivec2(_GLF_IDENTITY((false ? _GLF_FUZZED(63369) : int(94507)), min((false ? _GLF_FUZZED(63369) : int(94507)), (false ? _GLF_FUZZED(63369) : int(94507)))), 0)))))))), -1837, _GLF_IDENTITY(397, 0 | (397)))) | (_GLF_IDENTITY(ivec3(_GLF_IDENTITY(94507, int(_GLF_IDENTITY(int(94507), _GLF_IDENTITY((false ? _GLF_FUZZED(63369) : int(94507)), int(_GLF_IDENTITY(ivec2(_GLF_IDENTITY((false ? _GLF_FUZZED(63369) : int(94507)), min((false ? _GLF_FUZZED(63369) : int(94507)), (false ? _GLF_FUZZED(63369) : int(94507)))), 0), ivec2(0, 0) ^ (ivec2(_GLF_IDENTITY((false ? _GLF_FUZZED(63369) : int(94507)), min((false ? _GLF_FUZZED(63369) : int(94507)), (false ? _GLF_FUZZED(63369) : int(94507)))), 0)))))))), -1837, _GLF_IDENTITY(397, 0 | (397))), ~ (~ (ivec3(_GLF_IDENTITY(94507, int(_GLF_IDENTITY(int(94507), _GLF_IDENTITY((false ? _GLF_FUZZED(63369) : int(94507)), int(_GLF_IDENTITY(ivec2(_GLF_IDENTITY((false ? _GLF_FUZZED(63369) : int(94507)), min((false ? _GLF_FUZZED(63369) : int(94507)), (false ? _GLF_FUZZED(63369) : int(94507)))), 0), ivec2(0, 0) ^ (ivec2(_GLF_IDENTITY((false ? _GLF_FUZZED(63369) : int(94507)), min((false ? _GLF_FUZZED(63369) : int(94507)), (false ? _GLF_FUZZED(63369) : int(94507)))), 0)))))))), -1837, _GLF_IDENTITY(397, 0 | (397)))))))).r), 1 * (min(ivec3(_GLF_IDENTITY(94507, int(_GLF_IDENTITY(int(94507), (false ? _GLF_FUZZED(63369) : int(94507))))), -1837, _GLF_IDENTITY(397, 0 | (397))).r, ivec3(_GLF_IDENTITY(94507, int(_GLF_IDENTITY(int(94507), (false ? _GLF_FUZZED(63369) : int(94507))))), -1837, _GLF_IDENTITY(397, 0 | (397))).r))), (_GLF_IDENTITY(min(ivec3(_GLF_IDENTITY(94507, int(_GLF_IDENTITY(int(94507), (false ? _GLF_FUZZED(63369) : int(94507))))), -1837, _GLF_IDENTITY(397, 0 | (397))).r, _GLF_IDENTITY(ivec3(_GLF_IDENTITY(94507, int(_GLF_IDENTITY(int(94507), _GLF_IDENTITY((false ? _GLF_FUZZED(63369) : int(94507)), int(_GLF_IDENTITY(ivec2(_GLF_IDENTITY((false ? _GLF_FUZZED(63369) : int(94507)), min((false ? _GLF_FUZZED(63369) : int(94507)), (false ? _GLF_FUZZED(63369) : int(94507)))), 0), ivec2(0, 0) ^ (ivec2(_GLF_IDENTITY((false ? _GLF_FUZZED(63369) : int(94507)), min((false ? _GLF_FUZZED(63369) : int(94507)), (false ? _GLF_FUZZED(63369) : int(94507)))), 0)))))))), -1837, _GLF_IDENTITY(397, 0 | (397))), (ivec3(_GLF_IDENTITY(94507, int(_GLF_IDENTITY(int(94507), _GLF_IDENTITY((false ? _GLF_FUZZED(63369) : int(94507)), int(_GLF_IDENTITY(ivec2(_GLF_IDENTITY((false ? _GLF_FUZZED(63369) : int(94507)), min((false ? _GLF_FUZZED(63369) : int(94507)), (false ? _GLF_FUZZED(63369) : int(94507)))), 0), ivec2(0, 0) ^ (ivec2(_GLF_IDENTITY((false ? _GLF_FUZZED(63369) : int(94507)), min((false ? _GLF_FUZZED(63369) : int(94507)), (false ? _GLF_FUZZED(63369) : int(94507)))), 0)))))))), -1837, _GLF_IDENTITY(397, 0 | (397)))) | (_GLF_IDENTITY(ivec3(_GLF_IDENTITY(94507, int(_GLF_IDENTITY(int(94507), _GLF_IDENTITY((false ? _GLF_FUZZED(63369) : int(94507)), int(_GLF_IDENTITY(ivec2(_GLF_IDENTITY((false ? _GLF_FUZZED(63369) : int(94507)), min((false ? _GLF_FUZZED(63369) : int(94507)), (false ? _GLF_FUZZED(63369) : int(94507)))), 0), ivec2(0, 0) ^ (ivec2(_GLF_IDENTITY((false ? _GLF_FUZZED(63369) : int(94507)), min((false ? _GLF_FUZZED(63369) : int(94507)), (false ? _GLF_FUZZED(63369) : int(94507)))), 0)))))))), -1837, _GLF_IDENTITY(397, 0 | (397))), ~ (~ (ivec3(_GLF_IDENTITY(94507, int(_GLF_IDENTITY(int(94507), _GLF_IDENTITY((false ? _GLF_FUZZED(63369) : int(94507)), int(_GLF_IDENTITY(ivec2(_GLF_IDENTITY((false ? _GLF_FUZZED(63369) : int(94507)), min((false ? _GLF_FUZZED(63369) : int(94507)), (false ? _GLF_FUZZED(63369) : int(94507)))), 0), ivec2(0, 0) ^ (ivec2(_GLF_IDENTITY((false ? _GLF_FUZZED(63369) : int(94507)), min((false ? _GLF_FUZZED(63369) : int(94507)), (false ? _GLF_FUZZED(63369) : int(94507)))), 0)))))))), -1837, _GLF_IDENTITY(397, 0 | (397)))))))).r), 1 * (min(ivec3(_GLF_IDENTITY(94507, int(_GLF_IDENTITY(int(94507), (false ? _GLF_FUZZED(63369) : int(94507))))), -1837, _GLF_IDENTITY(397, 0 | (397))).r, ivec3(_GLF_IDENTITY(94507, int(_GLF_IDENTITY(int(94507), (false ? _GLF_FUZZED(63369) : int(94507))))), -1837, _GLF_IDENTITY(397, 0 | (397))).r)))) - 0), _GLF_IDENTITY(min(ivec3(_GLF_IDENTITY(94507, int(_GLF_IDENTITY(int(94507), (false ? _GLF_FUZZED(63369) : int(94507))))), -1837, _GLF_IDENTITY(397, 0 | (397))).r, _GLF_IDENTITY(ivec3(_GLF_IDENTITY(94507, int(_GLF_IDENTITY(int(94507), _GLF_IDENTITY((false ? _GLF_FUZZED(63369) : int(94507)), int(_GLF_IDENTITY(ivec2(_GLF_IDENTITY((false ? _GLF_FUZZED(63369) : int(94507)), min((false ? _GLF_FUZZED(63369) : int(94507)), (false ? _GLF_FUZZED(63369) : int(94507)))), 0), ivec2(0, 0) ^ (ivec2(_GLF_IDENTITY((false ? _GLF_FUZZED(63369) : int(94507)), min((false ? _GLF_FUZZED(63369) : int(94507)), (false ? _GLF_FUZZED(63369) : int(94507)))), 0)))))))), -1837, _GLF_IDENTITY(397, 0 | (397))), (ivec3(_GLF_IDENTITY(94507, int(_GLF_IDENTITY(int(94507), _GLF_IDENTITY((false ? _GLF_FUZZED(63369) : int(94507)), int(_GLF_IDENTITY(ivec2(_GLF_IDENTITY((false ? _GLF_FUZZED(63369) : int(94507)), min((false ? _GLF_FUZZED(63369) : int(94507)), (false ? _GLF_FUZZED(63369) : int(94507)))), 0), ivec2(0, 0) ^ (ivec2(_GLF_IDENTITY((false ? _GLF_FUZZED(63369) : int(94507)), min((false ? _GLF_FUZZED(63369) : int(94507)), (false ? _GLF_FUZZED(63369) : int(94507)))), 0)))))))), -1837, _GLF_IDENTITY(397, 0 | (397)))) | (_GLF_IDENTITY(ivec3(_GLF_IDENTITY(94507, int(_GLF_IDENTITY(int(94507), _GLF_IDENTITY((false ? _GLF_FUZZED(63369) : int(94507)), int(_GLF_IDENTITY(ivec2(_GLF_IDENTITY((false ? _GLF_FUZZED(63369) : int(94507)), min((false ? _GLF_FUZZED(63369) : int(94507)), (false ? _GLF_FUZZED(63369) : int(94507)))), 0), ivec2(0, 0) ^ (ivec2(_GLF_IDENTITY((false ? _GLF_FUZZED(63369) : int(94507)), min((false ? _GLF_FUZZED(63369) : int(94507)), (false ? _GLF_FUZZED(63369) : int(94507)))), 0)))))))), -1837, _GLF_IDENTITY(397, 0 | (397))), ~ (~ (ivec3(_GLF_IDENTITY(94507, int(_GLF_IDENTITY(int(94507), _GLF_IDENTITY((false ? _GLF_FUZZED(63369) : int(94507)), int(_GLF_IDENTITY(ivec2(_GLF_IDENTITY((false ? _GLF_FUZZED(63369) : int(94507)), min((false ? _GLF_FUZZED(63369) : int(94507)), (false ? _GLF_FUZZED(63369) : int(94507)))), 0), ivec2(0, 0) ^ (ivec2(_GLF_IDENTITY((false ? _GLF_FUZZED(63369) : int(94507)), min((false ? _GLF_FUZZED(63369) : int(94507)), (false ? _GLF_FUZZED(63369) : int(94507)))), 0)))))))), -1837, _GLF_IDENTITY(397, 0 | (397)))))))).r), 1 * (min(ivec3(_GLF_IDENTITY(94507, int(_GLF_IDENTITY(int(94507), (false ? _GLF_FUZZED(63369) : int(94507))))), -1837, _GLF_IDENTITY(397, 0 | (397))).r, ivec3(_GLF_IDENTITY(94507, int(_GLF_IDENTITY(int(94507), (false ? _GLF_FUZZED(63369) : int(94507))))), -1837, _GLF_IDENTITY(397, 0 | (397))).r))), _GLF_IDENTITY(min(ivec3(_GLF_IDENTITY(94507, int(_GLF_IDENTITY(int(94507), (false ? _GLF_FUZZED(63369) : int(94507))))), -1837, _GLF_IDENTITY(397, 0 | (397))).r, _GLF_IDENTITY(ivec3(_GLF_IDENTITY(94507, int(_GLF_IDENTITY(int(94507), _GLF_IDENTITY((false ? _GLF_FUZZED(63369) : int(94507)), int(_GLF_IDENTITY(ivec2(_GLF_IDENTITY((false ? _GLF_FUZZED(63369) : int(94507)), min((false ? _GLF_FUZZED(63369) : int(94507)), (false ? _GLF_FUZZED(63369) : int(94507)))), 0), ivec2(0, 0) ^ (ivec2(_GLF_IDENTITY((false ? _GLF_FUZZED(63369) : int(94507)), min((false ? _GLF_FUZZED(63369) : int(94507)), (false ? _GLF_FUZZED(63369) : int(94507)))), 0)))))))), -1837, _GLF_IDENTITY(397, 0 | (397))), (ivec3(_GLF_IDENTITY(94507, int(_GLF_IDENTITY(int(94507), _GLF_IDENTITY((false ? _GLF_FUZZED(63369) : int(94507)), int(_GLF_IDENTITY(ivec2(_GLF_IDENTITY((false ? _GLF_FUZZED(63369) : int(94507)), min((false ? _GLF_FUZZED(63369) : int(94507)), (false ? _GLF_FUZZED(63369) : int(94507)))), 0), ivec2(0, 0) ^ (ivec2(_GLF_IDENTITY((false ? _GLF_FUZZED(63369) : int(94507)), min((false ? _GLF_FUZZED(63369) : int(94507)), (false ? _GLF_FUZZED(63369) : int(94507)))), 0)))))))), -1837, _GLF_IDENTITY(397, 0 | (397)))) | (_GLF_IDENTITY(ivec3(_GLF_IDENTITY(94507, int(_GLF_IDENTITY(int(94507), _GLF_IDENTITY((false ? _GLF_FUZZED(63369) : int(94507)), int(_GLF_IDENTITY(ivec2(_GLF_IDENTITY((false ? _GLF_FUZZED(63369) : int(94507)), min((false ? _GLF_FUZZED(63369) : int(94507)), (false ? _GLF_FUZZED(63369) : int(94507)))), 0), ivec2(0, 0) ^ (ivec2(_GLF_IDENTITY((false ? _GLF_FUZZED(63369) : int(94507)), min((false ? _GLF_FUZZED(63369) : int(94507)), (false ? _GLF_FUZZED(63369) : int(94507)))), 0)))))))), -1837, _GLF_IDENTITY(397, 0 | (397))), ~ (~ (ivec3(_GLF_IDENTITY(94507, int(_GLF_IDENTITY(int(94507), _GLF_IDENTITY((false ? _GLF_FUZZED(63369) : int(94507)), int(_GLF_IDENTITY(ivec2(_GLF_IDENTITY((false ? _GLF_FUZZED(63369) : int(94507)), min((false ? _GLF_FUZZED(63369) : int(94507)), (false ? _GLF_FUZZED(63369) : int(94507)))), 0), ivec2(0, 0) ^ (ivec2(_GLF_IDENTITY((false ? _GLF_FUZZED(63369) : int(94507)), min((false ? _GLF_FUZZED(63369) : int(94507)), (false ? _GLF_FUZZED(63369) : int(94507)))), 0)))))))), -1837, _GLF_IDENTITY(397, 0 | (397)))))))).r), 1 * (min(ivec3(_GLF_IDENTITY(94507, int(_GLF_IDENTITY(int(94507), (false ? _GLF_FUZZED(63369) : int(94507))))), -1837, _GLF_IDENTITY(397, 0 | (397))).r, ivec3(_GLF_IDENTITY(94507, int(_GLF_IDENTITY(int(94507), (false ? _GLF_FUZZED(63369) : int(94507))))), -1837, _GLF_IDENTITY(397, 0 | (397))).r)))))) >> 0))))) : _GLF_IDENTITY(((1 << _GLF_IDENTITY(int(3), int(3))) >> _GLF_IDENTITY(int(3), int(3))), _GLF_IDENTITY(int(_GLF_IDENTITY(ivec3(((1 << _GLF_IDENTITY(int(_GLF_IDENTITY(3, _GLF_IDENTITY((3) / _GLF_IDENTITY(1, clamp(_GLF_IDENTITY(1, 0 ^ (1)), _GLF_IDENTITY(1, 0 ^ (_GLF_IDENTITY(1, 0 | (1)))), 1)), clamp((3) / _GLF_IDENTITY(1, clamp(1, _GLF_IDENTITY(1, 0 ^ (_GLF_IDENTITY(1, 0 | (1)))), 1)), (3) / _GLF_IDENTITY(1, clamp(1, _GLF_IDENTITY(_GLF_IDENTITY(1, 0 ^ (_GLF_IDENTITY(1, 0 | (1)))), (_GLF_IDENTITY(1, 0 ^ (_GLF_IDENTITY(1, 0 | (1))))) | (_GLF_IDENTITY(1, 0 ^ (_GLF_IDENTITY(1, 0 | (1)))))), 1)), (3) / _GLF_IDENTITY(1, clamp(1, _GLF_IDENTITY(1, _GLF_IDENTITY(0, int(_GLF_ZERO(0.0, injectionSwitch.x)) | (0)) ^ (_GLF_IDENTITY(1, 0 | (1)))), 1)))))), int(3))) >> _GLF_IDENTITY(int(3), int(3))), _GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED((-63571 % 4440)))), 1), (_GLF_IDENTITY(ivec3(((1 << _GLF_IDENTITY(int(_GLF_IDENTITY(3, _GLF_IDENTITY((3) / _GLF_IDENTITY(1, clamp(1, _GLF_IDENTITY(1, 0 ^ (_GLF_IDENTITY(1, 0 | (_GLF_IDENTITY(1, (1) / 1))))), 1)), clamp((3) / _GLF_IDENTITY(1, clamp(1, _GLF_IDENTITY(1, 0 ^ (_GLF_IDENTITY(1, 0 | (1)))), 1)), (3) / _GLF_IDENTITY(1, clamp(1, _GLF_IDENTITY(_GLF_IDENTITY(1, 0 ^ (_GLF_IDENTITY(1, 0 | (1)))), (_GLF_IDENTITY(1, 0 ^ (_GLF_IDENTITY(1, 0 | (1))))) | (_GLF_IDENTITY(1, 0 ^ (_GLF_IDENTITY(1, 0 | (1)))))), 1)), (3) / _GLF_IDENTITY(1, clamp(1, _GLF_IDENTITY(1, 0 ^ (_GLF_IDENTITY(1, 0 | (1)))), 1)))))), int(3))) >> _GLF_IDENTITY(int(3), int(3))), 1, 1), (ivec3(((1 << _GLF_IDENTITY(int(_GLF_IDENTITY(3, _GLF_IDENTITY((3) / _GLF_IDENTITY(1, clamp(1, _GLF_IDENTITY(1, 0 ^ (_GLF_IDENTITY(1, 0 | (_GLF_IDENTITY(1, (1) / 1))))), 1)), clamp((3) / _GLF_IDENTITY(1, clamp(1, _GLF_IDENTITY(1, 0 ^ (_GLF_IDENTITY(1, 0 | (1)))), 1)), (3) / _GLF_IDENTITY(1, clamp(1, _GLF_IDENTITY(_GLF_IDENTITY(1, 0 ^ (_GLF_IDENTITY(1, 0 | (1)))), (_GLF_IDENTITY(1, 0 ^ (_GLF_IDENTITY(1, 0 | (1))))) | (_GLF_IDENTITY(1, 0 ^ (_GLF_IDENTITY(1, 0 | (1)))))), 1)), (3) / _GLF_IDENTITY(1, clamp(1, _GLF_IDENTITY(1, 0 ^ (_GLF_IDENTITY(1, 0 | (1)))), 1)))))), int(3))) >> _GLF_IDENTITY(int(3), int(3))), 1, 1)) * ivec3(1, 1, 1))) | (_GLF_IDENTITY(ivec3(((1 << _GLF_IDENTITY(int(_GLF_IDENTITY(3, _GLF_IDENTITY((3) / _GLF_IDENTITY(1, clamp(_GLF_IDENTITY(1, (false ? _GLF_FUZZED(-67522) : 1)), _GLF_IDENTITY(1, 0 ^ (_GLF_IDENTITY(1, 0 | (1)))), 1)), clamp((3) / _GLF_IDENTITY(1, clamp(1, _GLF_IDENTITY(1, 0 ^ (_GLF_IDENTITY(1, 0 | (1)))), 1)), (3) / _GLF_IDENTITY(1, clamp(1, _GLF_IDENTITY(_GLF_IDENTITY(1, 0 ^ (_GLF_IDENTITY(1, 0 | (1)))), _GLF_IDENTITY((_GLF_IDENTITY(1, 0 ^ (_GLF_IDENTITY(1, 0 | (1))))), max((_GLF_IDENTITY(1, 0 ^ (_GLF_IDENTITY(1, 0 | (1))))), (_GLF_IDENTITY(1, 0 ^ (_GLF_IDENTITY(1, 0 | (1))))))) | (_GLF_IDENTITY(1, 0 ^ (_GLF_IDENTITY(1, 0 | (1)))))), 1)), (3) / _GLF_IDENTITY(1, clamp(1, _GLF_IDENTITY(1, 0 ^ (_GLF_IDENTITY(1, 0 | (1)))), 1)))))), int(3))) >> _GLF_IDENTITY(int(3), int(3))), 1, 1), (ivec3(((1 << _GLF_IDENTITY(int(_GLF_IDENTITY(3, _GLF_IDENTITY((3) / _GLF_IDENTITY(1, clamp(1, _GLF_IDENTITY(1, 0 ^ (_GLF_IDENTITY(1, 0 | (1)))), 1)), clamp((3) / _GLF_IDENTITY(1, clamp(1, _GLF_IDENTITY(_GLF_IDENTITY(1, 0 | (1)), 0 ^ (_GLF_IDENTITY(1, 0 | (1)))), 1)), (3) / _GLF_IDENTITY(1, clamp(1, _GLF_IDENTITY(_GLF_IDENTITY(1, 0 ^ (_GLF_IDENTITY(1, 0 | (1)))), (_GLF_IDENTITY(1, 0 ^ (_GLF_IDENTITY(1, 0 | (1))))) | (_GLF_IDENTITY(1, 0 ^ (_GLF_IDENTITY(1, 0 | (1)))))), 1)), (3) / _GLF_IDENTITY(1, clamp(1, _GLF_IDENTITY(1, 0 ^ (_GLF_IDENTITY(1, 0 | (1)))), 1)))))), int(3))) >> _GLF_IDENTITY(int(3), int(3))), 1, 1)) - ivec3(0, 0, 0))))), (int(ivec3((_GLF_IDENTITY((1 << _GLF_IDENTITY(int(3), int(3))), ((1 << _GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), ~ _GLF_IDENTITY((~ (int(3))), ((~ (int(3)))) << 0))))) | (_GLF_IDENTITY((_GLF_IDENTITY(1 << _GLF_IDENTITY(int(3), int(3)), clamp(1 << _GLF_IDENTITY(_GLF_IDENTITY(int(3), min(int(3), int(3))), int(3)), _GLF_IDENTITY(1 << _GLF_IDENTITY(int(3), int(3)), (1 << _GLF_IDENTITY(int(3), int(3))) << (0 >> _GLF_IDENTITY(int(3), int(3)))), 1 << _GLF_IDENTITY(int(3), int(3))))), max(_GLF_IDENTITY((_GLF_IDENTITY(1 << _GLF_IDENTITY(int(3), int(3)), clamp(1 << _GLF_IDENTITY(int(3), int(3)), _GLF_IDENTITY(1 << _GLF_IDENTITY(int(3), int(3)), (1 << _GLF_IDENTITY(int(_GLF_IDENTITY(3, (3) / 1)), int(3))) << (0 >> _GLF_IDENTITY(int(3), int(3)))), 1 << _GLF_IDENTITY(int(3), int(3))))), max((_GLF_IDENTITY(1 << _GLF_IDENTITY(int(3), int(3)), clamp(1 << _GLF_IDENTITY(int(3), int(3)), _GLF_IDENTITY(1 << _GLF_IDENTITY(int(3), int(3)), (1 << _GLF_IDENTITY(int(3), int(3))) << (0 >> _GLF_IDENTITY(int(3), int(3)))), 1 << _GLF_IDENTITY(_GLF_IDENTITY(int(3), (false ? _GLF_FUZZED((-67785 + -34922)) : int(3))), int(3))))), (_GLF_IDENTITY(1 << _GLF_IDENTITY(int(3), int(3)), clamp(1 << _GLF_IDENTITY(int(3), int(3)), _GLF_IDENTITY(1 << _GLF_IDENTITY(int(3), int(3)), (_GLF_IDENTITY(1, 0 + (1)) << _GLF_IDENTITY(int(3), int(3))) << (0 >> _GLF_IDENTITY(int(3), int(3)))), 1 << _GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), ~ (~ (int(3)))))))))), (_GLF_IDENTITY(1 << _GLF_IDENTITY(int(3), int(3)), clamp(1 << _GLF_IDENTITY(int(3), int(3)), _GLF_IDENTITY(1 << _GLF_IDENTITY(int(3), int(3)), (1 << _GLF_IDENTITY(int(3), int(3))) << (0 >> _GLF_IDENTITY(int(3), int(3)))), 1 << _GLF_IDENTITY(int(3), int(3))))))))) >> _GLF_IDENTITY(int(3), int(3))), 1, 1))) << 0))))))) | (1))), 4, 64, _GLF_IDENTITY(4, int(ivec2(4, 1))));
 do
  {
   for(int _injected_loop_counter = _GLF_IDENTITY(1, (1) - 0); _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
    {
     if(_GLF_DEAD(false))
      barrier();
    }
  }
 while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
 if(_GLF_DEAD(false))
  barrier();
}
