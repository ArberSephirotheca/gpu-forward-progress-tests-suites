#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(_GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)) || false, _GLF_IDENTITY(! (! (_GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)) || false, false || (((injectionSwitch.x > injectionSwitch.y)) || false)))), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(! (! (_GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)) || false, false || (((injectionSwitch.x > injectionSwitch.y)) || false)))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(! (! (_GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)) || false, false || (((injectionSwitch.x > injectionSwitch.y)) || false)))), bool(bvec3(! (! (_GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)) || false, false || (((injectionSwitch.x > injectionSwitch.y)) || false)))), true, true)))), true && (! (_GLF_IDENTITY(! (! (_GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)) || false, false || (((injectionSwitch.x > injectionSwitch.y)) || false)))), bool(bvec3(! (! (_GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)) || false, false || (((injectionSwitch.x > injectionSwitch.y)) || false)))), true, true)))))))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec3(bvec4(bvec3(_GLF_IDENTITY(! (! (_GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)) || false, false || (((injectionSwitch.x > injectionSwitch.y)) || false)))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(! (! (_GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)) || false, false || (((injectionSwitch.x > injectionSwitch.y)) || false)))), bool(bvec3(! (! (_GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)) || false, false || (((injectionSwitch.x > injectionSwitch.y)) || false)))), true, true)))), true && (! (_GLF_IDENTITY(! (! (_GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)) || false, false || (((injectionSwitch.x > injectionSwitch.y)) || false)))), bool(bvec3(! (! (_GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)) || false, false || (((injectionSwitch.x > injectionSwitch.y)) || false)))), true, true)))))))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false)))))), bool(bvec3(_GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)) || false, _GLF_IDENTITY(! (! (_GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)) || false, false || (((injectionSwitch.x > injectionSwitch.y)) || false)))), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(! (! (_GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)) || false, false || (((injectionSwitch.x > injectionSwitch.y)) || false)))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(! (! (_GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)) || false, false || (((injectionSwitch.x > injectionSwitch.y)) || false)))), bool(bvec3(! (! (_GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)) || false, false || (((injectionSwitch.x > injectionSwitch.y)) || false)))), true, true)))), true && (! (_GLF_IDENTITY(! (! (_GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)) || false, false || (((injectionSwitch.x > injectionSwitch.y)) || false)))), bool(bvec3(! (! (_GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)) || false, false || (((injectionSwitch.x > injectionSwitch.y)) || false)))), true, true)))))))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec3(bvec4(bvec3(_GLF_IDENTITY(! (! (_GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)) || false, false || (((injectionSwitch.x > injectionSwitch.y)) || false)))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(! (! (_GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)) || false, false || (((injectionSwitch.x > injectionSwitch.y)) || false)))), bool(bvec3(! (! (_GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)) || false, false || (((injectionSwitch.x > injectionSwitch.y)) || false)))), true, true)))), true && (! (_GLF_IDENTITY(! (! (_GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)) || false, false || (((injectionSwitch.x > injectionSwitch.y)) || false)))), bool(bvec3(! (! (_GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)) || false, false || (((injectionSwitch.x > injectionSwitch.y)) || false)))), true, true)))))))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false)))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)))))))
  barrier();
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(bvec3(! (false), false, true)))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, true && (false)), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, float(float(injectionSwitch.y))), injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y))))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 uint subgroup_local_id = gl_SubgroupInvocationID;
 uint num_workgroup = gl_NumWorkGroups.x;
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true), bvec2(bvec2(bvec2(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))))), true))))), (bool(_GLF_IDENTITY(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true), bvec2(bvec2(bvec2(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0))), _GLF_IDENTITY(true, ! (! (true))))))))) || false))), ! (_GLF_IDENTITY(! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), bool(bool(_GLF_IDENTITY(! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))), (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! _GLF_IDENTITY((! (_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y)))) || false))))), ! (_GLF_IDENTITY(! ((! (_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y)))) || false)))))), ! (_GLF_IDENTITY(! (! ((! (_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y)))) || false))))))), false || (! (! ((! (_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y)))) || false))))))))))))))), ! (! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), ! (! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! _GLF_IDENTITY((! (_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY((_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y)))), true && ((_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y)))))) || false))))), ! (_GLF_IDENTITY(! ((_GLF_IDENTITY(! (_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y)))) || false)))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(! (_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y)))) || false)))), ! (! (_GLF_IDENTITY(! (_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y)))) || false)))), ! (! (! (_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y)))) || false))))))))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (! (_GLF_IDENTITY(! (_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y)))) || false)))), ! (! (_GLF_IDENTITY(! (_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y)))) || false)))), ! (! (! (_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y)))) || false))))))))))))))))), ! (_GLF_IDENTITY(! (! ((! (_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), injectionSwitch)).y), false || ((injectionSwitch.x > injectionSwitch.y)))) || false))))))), false || (! (_GLF_IDENTITY(! ((! (_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y)))) || false)))))), ! (! (_GLF_IDENTITY(! ((! (_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y)))) || false)))))), bool(bvec3(! ((! (_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y)))) || false)))))), false, false))))))))))))))), ! (! (! (_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))))))))))) || false)), ! (! (! (_GLF_IDENTITY(! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), _GLF_IDENTITY(! (! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), bool(bvec4(! (! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y)))))))))))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint workgroup_size = _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize.x, (_GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) ^ 0u)) * 1u), _GLF_IDENTITY(uint(uvec2(_GLF_IDENTITY(gl_WorkGroupSize.x, max(gl_WorkGroupSize.x, _GLF_IDENTITY(gl_WorkGroupSize.x, clamp(gl_WorkGroupSize.x, gl_WorkGroupSize.x, gl_WorkGroupSize.x)))), 1u)), (uint(_GLF_IDENTITY(uvec2(gl_WorkGroupSize.x, 1u), (false ? _GLF_FUZZED(uvec2(7309u, 88327u)) : uvec2(gl_WorkGroupSize.x, 1u))))) >> (0u << _GLF_IDENTITY(uint(2u), uint(2u)))));
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint workgroup_id = _GLF_IDENTITY(gl_WorkGroupID, _GLF_IDENTITY(uvec3(_GLF_IDENTITY(uvec4(gl_WorkGroupID, 1u), clamp(uvec4(gl_WorkGroupID, 1u), uvec4(gl_WorkGroupID, 1u), _GLF_IDENTITY(uvec4(gl_WorkGroupID, 1u), _GLF_IDENTITY((uvec4(gl_WorkGroupID, 1u)) << uvec4(_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) * 1u)) + 0u), 0u, 0u, 0u), max(_GLF_IDENTITY((uvec4(gl_WorkGroupID, 1u)) << uvec4(0u, 0u, 0u, 0u), (true ? (uvec4(gl_WorkGroupID, 1u)) << uvec4(0u, 0u, 0u, 0u) : _GLF_FUZZED(uvec4(144612u, 13334u, 24533u, 175253u)))), _GLF_IDENTITY((uvec4(gl_WorkGroupID, 1u)), max((uvec4(gl_WorkGroupID, 1u)), (uvec4(gl_WorkGroupID, 1u)))) << uvec4(0u, 0u, 0u, 0u))))))), (uvec3(_GLF_IDENTITY(uvec4(gl_WorkGroupID, 1u), clamp(uvec4(gl_WorkGroupID, 1u), uvec4(gl_WorkGroupID, 1u), _GLF_IDENTITY(uvec4(gl_WorkGroupID, 1u), _GLF_IDENTITY((uvec4(gl_WorkGroupID, 1u)) << uvec4(0u, 0u, 0u, 0u), max(_GLF_IDENTITY((uvec4(gl_WorkGroupID, 1u)) << uvec4(0u, 0u, 0u, 0u), _GLF_IDENTITY((true ? (uvec4(gl_WorkGroupID, 1u)) << uvec4(0u, 0u, 0u, 0u) : _GLF_FUZZED(uvec4(144612u, 13334u, 24533u, 175253u))), clamp((true ? (uvec4(gl_WorkGroupID, 1u)) << uvec4(0u, 0u, 0u, 0u) : _GLF_FUZZED(uvec4(144612u, 13334u, 24533u, 175253u))), (true ? (uvec4(gl_WorkGroupID, 1u)) << uvec4(0u, 0u, 0u, 0u) : _GLF_FUZZED(uvec4(144612u, 13334u, 24533u, 175253u))), _GLF_IDENTITY((true ? (uvec4(gl_WorkGroupID, 1u)) << uvec4(0u, 0u, 0u, 0u) : _GLF_FUZZED(uvec4(144612u, 13334u, 24533u, 175253u))), uvec4(1u, 1u, 1u, 1u) * ((true ? (uvec4(gl_WorkGroupID, 1u)) << uvec4(0u, 0u, 0u, 0u) : _GLF_FUZZED(uvec4(144612u, 13334u, 24533u, 175253u)))))))), (uvec4(gl_WorkGroupID, 1u)) << uvec4(0u, _GLF_IDENTITY(0u, uint(uvec2(0u, uint(_GLF_ONE(1.0, injectionSwitch.y))))), 0u, 0u)))))))) / uvec3(1u, 1u, 1u))).x;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), true && _GLF_IDENTITY((_GLF_DEAD(false)), (_GLF_IDENTITY((_GLF_DEAD(false)), ! (! ((_GLF_DEAD(false)))))) && true)))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(false), ! _GLF_IDENTITY((! (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)), bool(bool(_GLF_DEAD(false)))))), ! (! ((! (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)), bool(bool(_GLF_DEAD(false)))))))))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY((_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && true, bool(bvec3((_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && true, true, true)))), (_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (! (bool(bvec3(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)), injectionSwitch)), clamp(injectionSwitch, injectionSwitch, injectionSwitch)), injectionSwitch))) / cos(vec2(0.0, 0.0))).x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false))))) && _GLF_TRUE(true, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(40.06))) < injectionSwitch.y, _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec4(injectionSwitch.x < injectionSwitch.y, true, false, false)), bool(bvec3(bool(bvec4(injectionSwitch.x < injectionSwitch.y, true, false, false)), false, true))), bool(bvec2(_GLF_IDENTITY(bool(bvec4(injectionSwitch.x < injectionSwitch.y, true, false, false)), bool(bvec3(bool(bvec4(injectionSwitch.x < injectionSwitch.y, true, false, false)), false, true))), true))))))))
    barrier();
   return;
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 uint workgroup_base = _GLF_IDENTITY(_GLF_IDENTITY(workgroup_size, _GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(uvec4(_GLF_IDENTITY(workgroup_size, 1u * (workgroup_size)), _GLF_IDENTITY(0u, min(0u, 0u)), uint(_GLF_ZERO(0.0, injectionSwitch.x)), _GLF_IDENTITY(0u, (0u) >> 0u)), clamp(uvec4(workgroup_size, 0u, uint(_GLF_ZERO(0.0, injectionSwitch.x)), 0u), uvec4(workgroup_size, 0u, uint(_GLF_ZERO(0.0, injectionSwitch.x)), 0u), uvec4(workgroup_size, 0u, uint(_GLF_ZERO(0.0, injectionSwitch.x)), 0u))), max(_GLF_IDENTITY(uvec4(_GLF_IDENTITY(workgroup_size, 1u * (workgroup_size)), 0u, uint(_GLF_ZERO(0.0, injectionSwitch.x)), 0u), _GLF_IDENTITY(clamp(uvec4(workgroup_size, 0u, uint(_GLF_ZERO(0.0, injectionSwitch.x)), 0u), uvec4(workgroup_size, 0u, uint(_GLF_ZERO(0.0, injectionSwitch.x)), 0u), uvec4(workgroup_size, 0u, uint(_GLF_ZERO(0.0, injectionSwitch.x)), 0u)), ((uvec4(1u, 1u, 1u, 1u) << _GLF_IDENTITY(uvec4(2u), _GLF_IDENTITY(uvec4(2u), (uvec4(2u)) ^ uvec4(0u, 0u, 0u, 0u)))) >> _GLF_IDENTITY(uvec4(2u), uvec4(2u))) * (clamp(uvec4(workgroup_size, 0u, uint(_GLF_ZERO(0.0, injectionSwitch.x)), 0u), uvec4(workgroup_size, 0u, uint(_GLF_ZERO(0.0, injectionSwitch.x)), 0u), uvec4(workgroup_size, 0u, uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(-4.9))))), injectionSwitch.x)))), 0u))))), _GLF_IDENTITY(uvec4(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_size, 1u * (workgroup_size)), (true ? _GLF_IDENTITY(workgroup_size, 1u * (workgroup_size)) : _GLF_FUZZED(subgroup_id))), 0u, uint(_GLF_ZERO(0.0, injectionSwitch.x)), 0u), clamp(uvec4(workgroup_size, 0u, uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)))), 0u), uvec4(workgroup_size, 0u, uint(_GLF_ZERO(0.0, injectionSwitch.x)), 0u), uvec4(workgroup_size, 0u, uint(_GLF_ZERO(0.0, injectionSwitch.x)), 0u))))), (_GLF_IDENTITY(_GLF_IDENTITY(uvec4(_GLF_IDENTITY(workgroup_size, 1u * (_GLF_IDENTITY(workgroup_size, (_GLF_IDENTITY(workgroup_size, (workgroup_size) - 0u)) | (workgroup_size)))), 0u, uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-325.972)), bool(false))))), 0u), clamp(uvec4(_GLF_IDENTITY(workgroup_size, min(workgroup_size, workgroup_size)), 0u, uint(_GLF_ZERO(0.0, injectionSwitch.x)), 0u), uvec4(workgroup_size, 0u, uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x)), 0u), _GLF_IDENTITY(uvec4(workgroup_size, 0u, uint(_GLF_ZERO(0.0, injectionSwitch.x)), _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, uint(_GLF_IDENTITY(uvec2(0u, 1u), (uvec2(0u, 1u)) | (_GLF_IDENTITY(uvec2(0u, 1u), ~ (~ (uvec2(0u, 1u))))))))) + 0u)), (_GLF_IDENTITY(uvec4(workgroup_size, 0u, uint(_GLF_ZERO(0.0, injectionSwitch.x)), _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, uint(uvec2(0u, 1u)))) + 0u)), max(uvec4(workgroup_size, 0u, uint(_GLF_ZERO(0.0, injectionSwitch.x)), _GLF_IDENTITY(0u, _GLF_IDENTITY((_GLF_IDENTITY(0u, uint(uvec2(0u, 1u)))) + 0u, ((_GLF_IDENTITY(0u, uint(uvec2(0u, 1u)))) + 0u) * 1u))), uvec4(workgroup_size, 0u, uint(_GLF_ZERO(0.0, injectionSwitch.x)), _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, uint(uvec2(0u, 1u)))) + 0u))))) >> uvec4(0u, 0u, 0u, 0u)))), max(_GLF_IDENTITY(_GLF_IDENTITY(uvec4(_GLF_IDENTITY(workgroup_size, 1u * (workgroup_size)), 0u, uint(_GLF_ZERO(0.0, injectionSwitch.x)), 0u), clamp(uvec4(workgroup_size, 0u, uint(_GLF_ZERO(0.0, injectionSwitch.x)), 0u), uvec4(workgroup_size, 0u, uint(_GLF_ZERO(0.0, injectionSwitch.x)), 0u), uvec4(workgroup_size, _GLF_IDENTITY(0u, max(0u, 0u)), uint(_GLF_ZERO(0.0, injectionSwitch.x)), 0u))), (_GLF_IDENTITY(uvec4(_GLF_IDENTITY(workgroup_size, 1u * (workgroup_size)), 0u, uint(_GLF_ZERO(0.0, injectionSwitch.x)), 0u), clamp(uvec4(workgroup_size, 0u, uint(_GLF_ZERO(0.0, injectionSwitch.x)), 0u), uvec4(workgroup_size, 0u, uint(_GLF_ZERO(0.0, injectionSwitch.x)), 0u), uvec4(workgroup_size, _GLF_IDENTITY(0u, max(0u, 0u)), uint(_GLF_ZERO(0.0, injectionSwitch.x)), 0u)))) << uvec4(0u, 0u, 0u, 0u)), _GLF_IDENTITY(uvec4(_GLF_IDENTITY(workgroup_size, 1u * (workgroup_size)), 0u, uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x)), _GLF_IDENTITY(0u, (0u) | (0u))), clamp(uvec4(workgroup_size, 0u, uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)).x)), _GLF_IDENTITY(0u, (0u) | 0u)), uvec4(workgroup_size, 0u, uint(_GLF_ZERO(0.0, injectionSwitch.x)), 0u), uvec4(workgroup_size, 0u, uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, vec2(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y)) * (_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(-1.9, -2.0)) : injectionSwitch)))).x)), 0u)))))) / uvec4(1u, 1u, 1u, 1u))), (uint(_GLF_IDENTITY(uvec4(workgroup_size, 0u, uint(_GLF_ZERO(_GLF_IDENTITY(0.0, min(0.0, 0.0)), _GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)))), _GLF_IDENTITY(0u, (0u) | (0u))), clamp(uvec4(workgroup_size, _GLF_IDENTITY(0u, (0u) | (0u)), uint(_GLF_ZERO(0.0, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))) * abs(vec2(1.0, 1.0))).x, clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))) * abs(vec2(1.0, 1.0))).x, max(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))) * abs(vec2(1.0, 1.0))).x, _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))) * abs(vec2(1.0, 1.0))).x)), _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))) * abs(vec2(1.0, 1.0))).x, _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))) * abs(vec2(1.0, 1.0))).x)))), 0u), uvec4(workgroup_size, 0u, uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch[1], tan(0.0) + (injectionSwitch[1])), 1.0 * (_GLF_IDENTITY(injectionSwitch[1], tan(0.0) + (injectionSwitch[1])))), (_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), (! (true)) || false))) ? _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0))[1] : _GLF_FUZZED(-4821.3731))))).x)), 0u), uvec4(workgroup_size, 0u, uint(_GLF_ZERO(0.0, injectionSwitch.x)), 0u))))) >> 0u)) * workgroup_id, 0u + (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_size, _GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_IDENTITY(uvec4(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_size, (_GLF_IDENTITY(workgroup_size, (workgroup_size) - 0u)) * 1u), 1u * (workgroup_size)), _GLF_IDENTITY(0u, (false ? _GLF_FUZZED(num_workgroup) : _GLF_IDENTITY(0u, 0u + (0u)))), uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(7.6))))), 0u), clamp(uvec4(workgroup_size, 0u, uint(_GLF_ZERO(0.0, injectionSwitch.x)), 0u), uvec4(workgroup_size, 0u, uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)))), 0u), uvec4(workgroup_size, 0u, uint(_GLF_ZERO(0.0, injectionSwitch.x)), 0u))), (_GLF_IDENTITY(uvec4(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_size, 1u * (workgroup_size)), uint(uvec2(_GLF_IDENTITY(workgroup_size, 1u * (workgroup_size)), (0u << _GLF_IDENTITY(uint(2u), uint(2u)))))), _GLF_IDENTITY(_GLF_IDENTITY(0u, (false ? _GLF_FUZZED(num_workgroup) : _GLF_IDENTITY(0u, 0u + (0u)))), clamp(_GLF_IDENTITY(0u, _GLF_IDENTITY((false ? _GLF_FUZZED(num_workgroup) : _GLF_IDENTITY(0u, 0u + (0u))), min((false ? _GLF_FUZZED(num_workgroup) : _GLF_IDENTITY(0u, 0u + (0u))), (false ? _GLF_FUZZED(num_workgroup) : _GLF_IDENTITY(0u, 0u + (0u)))))), _GLF_IDENTITY(_GLF_IDENTITY(0u, (false ? _GLF_FUZZED(num_workgroup) : _GLF_IDENTITY(0u, 0u + (0u)))), (false ? _GLF_FUZZED(subgroup_id) : _GLF_IDENTITY(0u, (false ? _GLF_FUZZED(num_workgroup) : _GLF_IDENTITY(0u, 0u + (0u)))))), _GLF_IDENTITY(0u, _GLF_IDENTITY((false ? _GLF_FUZZED(num_workgroup) : _GLF_IDENTITY(0u, 0u + (0u))), (_GLF_IDENTITY((false ? _GLF_FUZZED(num_workgroup) : _GLF_IDENTITY(0u, 0u + (0u))), clamp(_GLF_IDENTITY((false ? _GLF_FUZZED(num_workgroup) : _GLF_IDENTITY(0u, 0u + (0u))), ~ (~ ((false ? _GLF_FUZZED(num_workgroup) : _GLF_IDENTITY(0u, 0u + (0u)))))), (false ? _GLF_FUZZED(num_workgroup) : _GLF_IDENTITY(0u, 0u + (0u))), (false ? _GLF_FUZZED(num_workgroup) : _GLF_IDENTITY(0u, 0u + (0u)))))) / 1u)))), uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)))))), 0u), clamp(uvec4(workgroup_size, 0u, uint(_GLF_ZERO(0.0, injectionSwitch.x)), 0u), uvec4(workgroup_size, 0u, uint(_GLF_ZERO(0.0, injectionSwitch.x)), 0u), uvec4(workgroup_size, 0u, uint(_GLF_ZERO(0.0, injectionSwitch.x)), 0u)))) * uvec4(1u, 1u, 1u, 1u))), _GLF_IDENTITY((uint(_GLF_IDENTITY(uvec4(workgroup_size, 0u, uint(_GLF_ZERO(_GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(-806.386) : 0.0)), _GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).x, _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))).x)))), 0u), clamp(uvec4(workgroup_size, _GLF_IDENTITY(0u, (0u) >> 0u), uint(_GLF_ZERO(0.0, injectionSwitch.x)), 0u), uvec4(workgroup_size, 0u, uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x)), 0u), uvec4(workgroup_size, 0u, uint(_GLF_ZERO(0.0, injectionSwitch.x)), 0u))))), ((uint(_GLF_IDENTITY(uvec4(workgroup_size, 0u, uint(_GLF_ZERO(_GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(-806.386) : 0.0)), _GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).x, _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))).x)))), 0u), clamp(uvec4(workgroup_size, _GLF_IDENTITY(0u, (0u) >> 0u), uint(_GLF_ZERO(0.0, injectionSwitch.x)), 0u), uvec4(workgroup_size, 0u, uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x)), 0u), uvec4(workgroup_size, 0u, uint(_GLF_ZERO(0.0, injectionSwitch.x)), 0u)))))) | 0u) >> 0u)) * workgroup_id, min(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_size, _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec4(_GLF_IDENTITY(workgroup_size, 1u * _GLF_IDENTITY((workgroup_size), ((workgroup_size)) >> 0u)), 0u, uint(_GLF_ZERO(0.0, injectionSwitch.x)), 0u), clamp(uvec4(workgroup_size, 0u, uint(_GLF_ZERO(0.0, injectionSwitch.x)), 0u), uvec4(_GLF_IDENTITY(workgroup_size, (_GLF_IDENTITY(false, ! (! (false))) ? _GLF_FUZZED(subgroup_id) : _GLF_IDENTITY(workgroup_size, (workgroup_size) | (workgroup_size)))), 0u, uint(_GLF_ZERO(0.0, injectionSwitch.x)), 0u), uvec4(workgroup_size, _GLF_IDENTITY(0u, ~ (~ (0u))), uint(_GLF_ZERO(0.0, injectionSwitch.x)), 0u)))), (uint(_GLF_IDENTITY(uvec4(workgroup_size, 0u, uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)))), 0u), clamp(uvec4(workgroup_size, 0u, uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).x)), 0u), uvec4(workgroup_size, 0u, uint(_GLF_ZERO(0.0, injectionSwitch.x)), 0u), uvec4(workgroup_size, 0u, uint(_GLF_ZERO(0.0, injectionSwitch.x)), 0u))))) >> 0u)) * workgroup_id, 0u + (_GLF_IDENTITY(workgroup_size, _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec4(_GLF_IDENTITY(workgroup_size, _GLF_IDENTITY(1u * _GLF_IDENTITY((workgroup_size), ((workgroup_size)) >> 0u), (1u * _GLF_IDENTITY((_GLF_IDENTITY(workgroup_size, (workgroup_size) - 0u)), ((workgroup_size)) >> 0u)) + 0u)), 0u, uint(_GLF_ZERO(0.0, injectionSwitch.x)), 0u), clamp(uvec4(workgroup_size, 0u, uint(_GLF_ZERO(0.0, injectionSwitch.x)), 0u), uvec4(_GLF_IDENTITY(workgroup_size, (_GLF_IDENTITY(false, ! (! (false))) ? _GLF_FUZZED(subgroup_id) : _GLF_IDENTITY(workgroup_size, (workgroup_size) | (workgroup_size)))), 0u, uint(_GLF_ZERO(0.0, injectionSwitch.x)), _GLF_IDENTITY(0u, 0u | (_GLF_IDENTITY(0u, max(0u, 0u))))), uvec4(workgroup_size, _GLF_IDENTITY(0u, ~ (~ _GLF_IDENTITY((0u), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY((0u), uint(uint((0u))))), min(~ (_GLF_IDENTITY((0u), uint(uint((0u))))), ~ (_GLF_IDENTITY((0u), uint(uint((0u))))))))))), uint(_GLF_ZERO(0.0, injectionSwitch.x)), 0u)))), (uint(_GLF_IDENTITY(uvec4(workgroup_size, 0u, uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)))), 0u), clamp(uvec4(workgroup_size, 0u, uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).x)), 0u), uvec4(workgroup_size, 0u, uint(_GLF_ZERO(0.0, injectionSwitch.x)), 0u), uvec4(workgroup_size, 0u, uint(_GLF_ZERO(0.0, injectionSwitch.x)), 0u))))) >> 0u)) * workgroup_id)), _GLF_IDENTITY(workgroup_size, _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec4(_GLF_IDENTITY(workgroup_size, 1u * (workgroup_size)), 0u, uint(_GLF_ZERO(0.0, injectionSwitch.x)), 0u), clamp(uvec4(workgroup_size, 0u, uint(_GLF_ZERO(0.0, injectionSwitch.x)), 0u), uvec4(workgroup_size, 0u, uint(_GLF_ZERO(0.0, injectionSwitch.x)), 0u), uvec4(workgroup_size, 0u, uint(_GLF_ZERO(0.0, injectionSwitch.x)), 0u)))), (_GLF_IDENTITY(uint(_GLF_IDENTITY(uvec4(workgroup_size, 0u, uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)))), 0u), clamp(uvec4(workgroup_size, 0u, uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch))) / vec2(1.0, 1.0)).x)), 0u), uvec4(workgroup_size, 0u, _GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)), (uint(_GLF_ZERO(0.0, injectionSwitch.x))) / 1u), 0u), uvec4(workgroup_size, 0u, uint(_GLF_ZERO(_GLF_IDENTITY(_GLF_IDENTITY(0.0, clamp(0.0, _GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, float(vec2(0.0, 0.0))), 0.0)), 0.0)), (0.0) / 1.0), _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x)), 0u)))), min(uint(_GLF_IDENTITY(uvec4(workgroup_size, 0u, uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)))), 0u), clamp(uvec4(workgroup_size, 0u, uint(_GLF_ZERO(0.0, injectionSwitch.x)), 0u), uvec4(workgroup_size, 0u, _GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)), (uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).x))) / 1u), 0u), uvec4(workgroup_size, 0u, uint(_GLF_ZERO(_GLF_IDENTITY(0.0, (0.0) / 1.0), _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x)), 0u)))), uint(_GLF_IDENTITY(uvec4(workgroup_size, 0u, uint(_GLF_ZERO(_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(5.4))), _GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)))), 0u), clamp(uvec4(workgroup_size, 0u, uint(_GLF_ZERO(0.0, injectionSwitch.x)), 0u), uvec4(workgroup_size, 0u, _GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)), (uint(_GLF_ZERO(0.0, injectionSwitch.x))) / 1u), _GLF_IDENTITY(0u, (0u) + uint(_GLF_ZERO(0.0, injectionSwitch.x)))), uvec4(workgroup_size, 0u, uint(_GLF_ZERO(_GLF_IDENTITY(0.0, (0.0) / 1.0), _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x)), 0u))))))) >> 0u)) * workgroup_id))));
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x)), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch.x : _GLF_IDENTITY(_GLF_FUZZED(_GLF_IDENTITY(-4.8, max(_GLF_IDENTITY(-4.8, float(mat2(-4.8, 1.0, 0.0, 0.0))), -4.8))), clamp(_GLF_FUZZED(-4.8), _GLF_FUZZED(-4.8), _GLF_FUZZED(-4.8))))) > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), bool(bvec4(false, true, true, true))), _GLF_IDENTITY((_GLF_IDENTITY(false, bool(bvec4(false, true, true, _GLF_IDENTITY(true, true && (true)))))) || _GLF_IDENTITY(false, ! (! (false))), bool(_GLF_IDENTITY(bvec2((_GLF_IDENTITY(false, bool(bvec4(false, true, true, true)))) || false, false), _GLF_IDENTITY(bvec2(bvec3(bvec2((_GLF_IDENTITY(false, bool(bvec4(false, true, _GLF_IDENTITY(true, (true) || false), _GLF_IDENTITY(true, true && (true)))))) || false, false), true)), bvec2(bvec3(bvec2(bvec3(bvec2(_GLF_IDENTITY((_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(false, bool(bvec4(false, false, false, false))), true, true, true)), false || (_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(false, bool(bvec4(false, false, false, false))), true, true, true)), false || (bool(bvec4(_GLF_IDENTITY(false, bool(bvec4(false, false, false, false))), true, true, true)))))))) || false, ! (_GLF_IDENTITY(! ((_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(false, bool(bvec4(false, false, false, false))), true, true, true)), false || (_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(false, bool(bvec4(false, false, false, false))), true, true, true)), false || (bool(bvec4(_GLF_IDENTITY(false, bool(bvec4(false, false, false, false))), true, true, true)))))))) || false), bool(_GLF_IDENTITY(bvec2(! ((_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(false, bool(bvec4(false, false, false, false))), true, true, true)), false || (_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(false, bool(bvec4(false, false, false, false))), true, true, true)), false || (bool(bvec4(_GLF_IDENTITY(false, bool(bvec4(false, false, false, false))), true, true, true)))))))) || false), false), bvec2(bvec3(bvec2(! ((_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(false, bool(bvec4(false, false, false, false))), true, true, true)), false || (_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(false, bool(bvec4(false, false, false, false))), true, true, true)), false || (bool(bvec4(_GLF_IDENTITY(false, bool(bvec4(false, false, false, false))), true, true, true)))))))) || false), false), true))))))), false), true)), true)))))))), _GLF_IDENTITY(! (_GLF_IDENTITY(! (_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, true, true, true))))), (! _GLF_IDENTITY((_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, true, true, true))))), (_GLF_IDENTITY((_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, true, _GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, (_GLF_IDENTITY(true, bool(bvec3(true, false, true)))) && true))), true))))), true && ((_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, true, true, true)))))))) && true)) && true)), bool(bvec3(_GLF_IDENTITY(! (_GLF_IDENTITY(! (_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, true, _GLF_IDENTITY(true, (true) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true))))), (! (_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, true, true, true)))))) && true)), (! (_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, true, _GLF_IDENTITY(true, true && (true)), true))))), ((_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), bool(bvec4(false, true, _GLF_IDENTITY(true, true && (true)), true)))))) && true), (! (_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, true, true, true)))))) && true))) && true), _GLF_IDENTITY(false, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), (_GLF_IDENTITY(false, ! (! (false)))) && true)), bool(bvec3((_GLF_IDENTITY(false, ! (! (false)))), false, false))) || false), _GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false)))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 uint virtual_gid = _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, (workgroup_base + subgroup_id * subgroup_size) ^ 0u), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, (workgroup_base + subgroup_id * subgroup_size) ^ _GLF_IDENTITY(0u, max(0u, 0u))), clamp(_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, (workgroup_base + subgroup_id * subgroup_size) ^ 0u), _GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, (workgroup_base + subgroup_id * subgroup_size) ^ 0u), _GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, _GLF_IDENTITY((workgroup_base + subgroup_id * _GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, (0u >> _GLF_IDENTITY(uint(1u), uint(1u))) + (_GLF_IDENTITY(subgroup_size, uint(uvec4(subgroup_size, 0u, 0u, 0u)))))) << 0u)), (_GLF_IDENTITY((workgroup_base + subgroup_id * _GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, (0u >> _GLF_IDENTITY(uint(1u), uint(1u))) + (_GLF_IDENTITY(subgroup_size, uint(uvec4(subgroup_size, 0u, 0u, 0u)))))) << 0u)), ((workgroup_base + subgroup_id * _GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, (0u >> _GLF_IDENTITY(uint(1u), uint(1u))) + (_GLF_IDENTITY(subgroup_size, uint(uvec4(subgroup_size, 0u, 0u, 0u)))))) << 0u))) * 1u)) - 0u) ^ 0u))), (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, (workgroup_base + subgroup_id * subgroup_size) ^ _GLF_IDENTITY(0u, max(0u, 0u))), clamp(_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, (workgroup_base + subgroup_id * subgroup_size) ^ 0u), _GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, (workgroup_base + subgroup_id * subgroup_size) ^ 0u), _GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, _GLF_IDENTITY((workgroup_base + subgroup_id * _GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, (0u >> _GLF_IDENTITY(uint(1u), uint(1u))) + (_GLF_IDENTITY(subgroup_size, uint(uvec4(subgroup_size, 0u, 0u, 0u)))))) << 0u)), (_GLF_IDENTITY((workgroup_base + subgroup_id * _GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, (0u >> _GLF_IDENTITY(uint(1u), uint(1u))) + (_GLF_IDENTITY(subgroup_size, uint(uvec4(subgroup_size, 0u, 0u, 0u)))))) << 0u)), ((workgroup_base + subgroup_id * _GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, (0u >> _GLF_IDENTITY(uint(1u), uint(1u))) + (_GLF_IDENTITY(subgroup_size, uint(uvec4(subgroup_size, 0u, 0u, 0u)))))) << 0u))) * 1u)) - 0u) ^ 0u)))) | (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, (workgroup_base + subgroup_id * subgroup_size) ^ _GLF_IDENTITY(0u, max(0u, 0u))), clamp(_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, (workgroup_base + subgroup_id * subgroup_size) ^ 0u), _GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, (workgroup_base + subgroup_id * subgroup_size) ^ 0u), _GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, _GLF_IDENTITY((workgroup_base + subgroup_id * _GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, (0u >> _GLF_IDENTITY(uint(1u), uint(1u))) + (_GLF_IDENTITY(subgroup_size, uint(uvec4(subgroup_size, 0u, 0u, 0u)))))) << 0u)), (_GLF_IDENTITY((workgroup_base + subgroup_id * _GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, (0u >> _GLF_IDENTITY(uint(1u), uint(1u))) + (_GLF_IDENTITY(subgroup_size, uint(uvec4(subgroup_size, 0u, 0u, 0u)))))) << 0u)), ((workgroup_base + subgroup_id * _GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, (0u >> _GLF_IDENTITY(uint(1u), uint(1u))) + (_GLF_IDENTITY(subgroup_size, uint(uvec4(subgroup_size, 0u, 0u, 0u)))))) << 0u))) * 1u)) - 0u) ^ 0u)))))))) + subgroup_local_id, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, (workgroup_base + subgroup_id * subgroup_size) ^ 0u), ~ (~ _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, (workgroup_base + subgroup_id * subgroup_size) ^ 0u), clamp(_GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_id * subgroup_size, (true ? subgroup_id * subgroup_size : _GLF_FUZZED(subgroup_id))), (workgroup_base + subgroup_id * subgroup_size) ^ 0u), _GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_id * subgroup_size, (_GLF_IDENTITY(subgroup_id * subgroup_size, uint(uvec3(subgroup_id * subgroup_size, uint(_GLF_ONE(1.0, injectionSwitch.y)), 1u)))) + (0u >> _GLF_IDENTITY(uint(0u), uint(0u)))), _GLF_IDENTITY((workgroup_base + subgroup_id * subgroup_size), clamp((workgroup_base + subgroup_id * subgroup_size), (workgroup_base + subgroup_id * subgroup_size), (workgroup_base + subgroup_id * subgroup_size))) ^ 0u), _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, ~ (_GLF_IDENTITY(~ (workgroup_base + subgroup_id * subgroup_size), (true ? ~ (workgroup_base + subgroup_id * _GLF_IDENTITY(subgroup_size, clamp(_GLF_IDENTITY(subgroup_size, 0u ^ (subgroup_size)), subgroup_size, subgroup_size))) : _GLF_FUZZED(subgroup_size))))), _GLF_IDENTITY((workgroup_base + subgroup_id * subgroup_size), clamp(_GLF_IDENTITY((workgroup_base + subgroup_id * subgroup_size), 0u ^ ((workgroup_base + subgroup_id * subgroup_size))), _GLF_IDENTITY((workgroup_base + subgroup_id * subgroup_size), min((workgroup_base + subgroup_id * subgroup_size), (workgroup_base + subgroup_id * subgroup_size))), (workgroup_base + subgroup_id * subgroup_size))) ^ 0u)))), _GLF_IDENTITY(~ (~ ((_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, (workgroup_base + subgroup_id * subgroup_size) ^ 0u), clamp(_GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_id * subgroup_size, (true ? subgroup_id * subgroup_size : _GLF_FUZZED(subgroup_id))), (workgroup_base + subgroup_id * subgroup_size) ^ 0u), _GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, (workgroup_base + subgroup_id * subgroup_size) ^ 0u), _GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, (workgroup_base + subgroup_id * subgroup_size) ^ 0u)))))), 0u ^ (~ (~ ((_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, (workgroup_base + subgroup_id * subgroup_size) ^ 0u), clamp(_GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_id * subgroup_size, (true ? subgroup_id * subgroup_size : _GLF_FUZZED(subgroup_id))), (workgroup_base + subgroup_id * subgroup_size) ^ 0u), _GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, (workgroup_base + subgroup_id * subgroup_size) ^ 0u), _GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, (workgroup_base + subgroup_id * subgroup_size) ^ 0u))))))))))), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, (workgroup_base + subgroup_id * subgroup_size) ^ 0u), ~ (~ _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, (workgroup_base + subgroup_id * subgroup_size) ^ 0u), (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, (workgroup_base + subgroup_id * subgroup_size) ^ 0u), (_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, (workgroup_base + subgroup_id * subgroup_size) ^ 0u)) << 0u)) ^ 0u), clamp(_GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_id * subgroup_size, (true ? subgroup_id * subgroup_size : _GLF_FUZZED(subgroup_id))), (workgroup_base + subgroup_id * subgroup_size) ^ 0u), _GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_id * subgroup_size, (_GLF_IDENTITY(subgroup_id * subgroup_size, uint(uvec3(subgroup_id * subgroup_size, uint(_GLF_ONE(1.0, injectionSwitch.y)), 1u)))) + (0u >> _GLF_IDENTITY(uint(0u), uint(0u)))), _GLF_IDENTITY((workgroup_base + subgroup_id * subgroup_size), clamp((workgroup_base + subgroup_id * subgroup_size), (workgroup_base + _GLF_IDENTITY(subgroup_id * subgroup_size, max(subgroup_id * subgroup_size, subgroup_id * subgroup_size))), (workgroup_base + _GLF_IDENTITY(subgroup_id, ~ (~ (_GLF_IDENTITY(subgroup_id, clamp(subgroup_id, subgroup_id, _GLF_IDENTITY(subgroup_id, ~ (~ (subgroup_id)))))))) * subgroup_size))) ^ 0u), _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, ~ (_GLF_IDENTITY(~ (workgroup_base + subgroup_id * subgroup_size), (true ? ~ (workgroup_base + subgroup_id * _GLF_IDENTITY(subgroup_size, clamp(_GLF_IDENTITY(subgroup_size, 0u ^ (subgroup_size)), subgroup_size, subgroup_size))) : _GLF_FUZZED(subgroup_size))))), _GLF_IDENTITY((workgroup_base + subgroup_id * subgroup_size), clamp(_GLF_IDENTITY((_GLF_IDENTITY(workgroup_base, (workgroup_base) ^ 0u) + subgroup_id * subgroup_size), 0u ^ ((workgroup_base + subgroup_id * subgroup_size))), _GLF_IDENTITY((workgroup_base + subgroup_id * subgroup_size), min((workgroup_base + _GLF_IDENTITY(subgroup_id, clamp(subgroup_id, subgroup_id, subgroup_id)) * subgroup_size), (workgroup_base + subgroup_id * subgroup_size))), (workgroup_base + subgroup_id * subgroup_size))) ^ _GLF_IDENTITY(0u, (0u) >> 0u))))), _GLF_IDENTITY(~ (~ ((_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, (workgroup_base + subgroup_id * subgroup_size) ^ 0u), clamp(_GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_id * subgroup_size, _GLF_IDENTITY((true ? subgroup_id * subgroup_size : _GLF_FUZZED(subgroup_id)), 0u | ((true ? subgroup_id * subgroup_size : _GLF_FUZZED(subgroup_id))))), _GLF_IDENTITY((_GLF_IDENTITY(workgroup_base, ~ (_GLF_IDENTITY(~ (workgroup_base), (true ? ~ (workgroup_base) : _GLF_FUZZED(num_workgroup))))) + subgroup_id * subgroup_size), (false ? _GLF_FUZZED(uint(clamp(-7.7, -44.85, 45.27))) : (_GLF_IDENTITY(workgroup_base, ~ (_GLF_IDENTITY(~ (workgroup_base), (true ? ~ (workgroup_base) : _GLF_FUZZED(num_workgroup))))) + subgroup_id * subgroup_size))) ^ 0u), _GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, (_GLF_IDENTITY(workgroup_base, (workgroup_base) << 0u) + subgroup_id * subgroup_size) ^ 0u), _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, clamp(workgroup_base + subgroup_id * subgroup_size, workgroup_base + subgroup_id * subgroup_size, workgroup_base + subgroup_id * subgroup_size)), (workgroup_base + subgroup_id * subgroup_size) ^ 0u)))))), 0u ^ (~ (~ (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_id * subgroup_size, 0u | (subgroup_id * subgroup_size)), (workgroup_base + subgroup_id * subgroup_size) ^ 0u), clamp(_GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_id * subgroup_size, (true ? subgroup_id * subgroup_size : _GLF_FUZZED(subgroup_id))), (workgroup_base + subgroup_id * subgroup_size) ^ 0u), _GLF_IDENTITY(workgroup_base + subgroup_id * _GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size)), (workgroup_base + subgroup_id * subgroup_size) ^ 0u), _GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, (workgroup_base + subgroup_id * subgroup_size) ^ 0u)))), (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_id * subgroup_size, 0u | (subgroup_id * subgroup_size)), (workgroup_base + subgroup_id * subgroup_size) ^ 0u), clamp(_GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_id * subgroup_size, (true ? subgroup_id * subgroup_size : _GLF_FUZZED(subgroup_id))), (workgroup_base + subgroup_id * subgroup_size) ^ 0u), _GLF_IDENTITY(workgroup_base + subgroup_id * _GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size)), (workgroup_base + subgroup_id * subgroup_size) ^ 0u), _GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, (workgroup_base + subgroup_id * subgroup_size) ^ 0u)))), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(subgroup_size) : (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_id * subgroup_size, 0u | (subgroup_id * subgroup_size)), (workgroup_base + subgroup_id * subgroup_size) ^ 0u), clamp(_GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_id * subgroup_size, (true ? subgroup_id * subgroup_size : _GLF_FUZZED(subgroup_id))), (workgroup_base + subgroup_id * subgroup_size) ^ 0u), _GLF_IDENTITY(workgroup_base + subgroup_id * _GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size)), (workgroup_base + subgroup_id * subgroup_size) ^ 0u), _GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, (workgroup_base + subgroup_id * subgroup_size) ^ 0u))))))) | (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_id * subgroup_size, 0u | (subgroup_id * subgroup_size)), (workgroup_base + subgroup_id * subgroup_size) ^ 0u), clamp(_GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_id * subgroup_size, (true ? subgroup_id * subgroup_size : _GLF_FUZZED(subgroup_id))), (workgroup_base + subgroup_id * subgroup_size) ^ 0u), _GLF_IDENTITY(workgroup_base + subgroup_id * _GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size)), (workgroup_base + subgroup_id * subgroup_size) ^ 0u), _GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, (workgroup_base + subgroup_id * subgroup_size) ^ 0u)))), ~ (~ ((_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_id * subgroup_size, 0u | (subgroup_id * subgroup_size)), (workgroup_base + subgroup_id * subgroup_size) ^ 0u), clamp(_GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_id * subgroup_size, (true ? subgroup_id * subgroup_size : _GLF_FUZZED(subgroup_id))), (workgroup_base + subgroup_id * subgroup_size) ^ 0u), _GLF_IDENTITY(workgroup_base + subgroup_id * _GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size)), (workgroup_base + subgroup_id * subgroup_size) ^ 0u), _GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, (workgroup_base + subgroup_id * subgroup_size) ^ 0u))))))))))))))))))) + subgroup_local_id) | (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, (workgroup_base + subgroup_id * subgroup_size) ^ 0u), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(subgroup_id, max(subgroup_id, _GLF_IDENTITY(subgroup_id, (subgroup_id) | (subgroup_id))))) / 1u) * subgroup_size, _GLF_IDENTITY((_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, 0u ^ (workgroup_base + subgroup_id * subgroup_size))) ^ 0u, (true ? (workgroup_base + subgroup_id * subgroup_size) ^ 0u : _GLF_FUZZED((~ _GLF_IDENTITY(_GLF_IDENTITY(uvec2(153758u, _GLF_IDENTITY(133450u, (133450u) + (1u ^ 1u))), ~ (~ (uvec2(153758u, _GLF_IDENTITY(133450u, (133450u) + (1u ^ 1u)))))), uvec2(0u, 0u) + (_GLF_IDENTITY(uvec2(153758u, _GLF_IDENTITY(_GLF_IDENTITY(133450u, (133450u) + (1u ^ 1u)), (false ? _GLF_FUZZED(14065u) : _GLF_IDENTITY(133450u, (133450u) + (1u ^ 1u))))), ~ (~ (uvec2(153758u, _GLF_IDENTITY(133450u, (133450u) + (1u ^ 1u))))))))[0]))))), clamp(_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, (workgroup_base + _GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(subgroup_id, clamp(subgroup_id, subgroup_id, subgroup_id))) / 1u) * subgroup_size) ^ 0u), _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, (workgroup_base + _GLF_IDENTITY(subgroup_id, (subgroup_id) << 0u) * subgroup_size) ^ 0u), (_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, (workgroup_base + _GLF_IDENTITY(subgroup_id, (subgroup_id) << 0u) * subgroup_size) ^ 0u)) | (0u | 0u)), _GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, (workgroup_base + subgroup_id * subgroup_size) ^ 0u)))))) + _GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) / 1u)));
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), ! (! (false)))), _GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(bool((_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(bvec4(! (false), true, true, true))))))), ! (! (bool((_GLF_IDENTITY(false, ! (! (false)))))))), true && (_GLF_IDENTITY(bool((_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)), ! (! (_GLF_IDENTITY(bool(bvec4(false, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)), true && (bool(bvec4(false, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))))))))), bool(bvec4(! (false), true, true, true))))))), ! (_GLF_IDENTITY(! (bool((_GLF_IDENTITY(false, ! (! (false)))))), false || (_GLF_IDENTITY(! (bool((_GLF_IDENTITY(false, ! (! (false)))))), ! (! (! (bool((_GLF_IDENTITY(false, ! (! (false)))))))))))))))), ! (! (bool(_GLF_IDENTITY(_GLF_IDENTITY(bool((_GLF_IDENTITY(false, ! (! (false))))), (bool((_GLF_IDENTITY(false, ! (! (false)))))) || false), ! (! (bool((_GLF_IDENTITY(false, ! (! (false))))))))))))) || false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), ! (! (false)))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool((_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(bvec4(! (false), true, true, true))))))), ! (! (bool((_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(! (false), false || (! (false))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)), bool(bvec2(bool(bvec3(_GLF_IDENTITY(! (false), false || (! (false))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)), false)))))))))))), ! (! (bool(_GLF_IDENTITY(bool((_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((false), ! (! ((false)))))))), ! (! (bool((_GLF_IDENTITY(false, ! (! (false))))))))))))) || false, true && (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), ! (! (false)))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool((_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(bvec4(! (false), true, true, true))))))), ! (! (bool((_GLF_IDENTITY(false, ! (! (false))))))))), ! (! (bool(_GLF_IDENTITY(bool((_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (false))))), ! (! (bool((_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((false), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY((false), bool(bvec2((false), true))), false), bvec2(_GLF_IDENTITY(bvec3(bvec2(_GLF_IDENTITY((false), bool(bvec2((false), true))), false), true), bvec3(bvec3(bvec3(bvec2(_GLF_IDENTITY((false), bool(bvec2((false), true))), false), true)))))))))))))))))))) || false))), bool(bool(_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), ! (! (false)))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool((_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(bvec4(! (false), true, true, true))))))), ! _GLF_IDENTITY((! (bool((_GLF_IDENTITY(false, ! (! (false))))))), true && ((! (bool((_GLF_IDENTITY(false, ! (! (false))))))))))), ! (! (bool(_GLF_IDENTITY(_GLF_IDENTITY(bool((_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), (_GLF_IDENTITY((! (false)), _GLF_IDENTITY(bool(bvec2((! (false)), true)), false || (bool(bvec2((! (false)), true)))))) && true)))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bool((_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), (_GLF_IDENTITY((! (false)), _GLF_IDENTITY(bool(bvec2((! (false)), true)), false || (bool(bvec2((! (false)), true)))))) && true)))), false || (bool((_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), (_GLF_IDENTITY((! (false)), _GLF_IDENTITY(bool(bvec2((! (false)), true)), false || (bool(bvec2((! (false)), true)))))) && true)))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false), bvec3(bvec4(bvec3(_GLF_IDENTITY(bool((_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), (_GLF_IDENTITY((! (false)), _GLF_IDENTITY(bool(bvec2((! (false)), true)), false || (bool(bvec2((! (false)), true)))))) && true)))), false || (bool((_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), (_GLF_IDENTITY((! (false)), _GLF_IDENTITY(bool(bvec2((! (false)), true)), false || (bool(bvec2((! (false)), true)))))) && true)))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false), false)))), _GLF_IDENTITY(bool(bvec4(bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bool((_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), (_GLF_IDENTITY((! (false)), _GLF_IDENTITY(bool(bvec2((! (false)), true)), false || (bool(bvec2((! (false)), true)))))) && true)))), false || (bool((_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), (_GLF_IDENTITY((! (false)), _GLF_IDENTITY(bool(bvec2((! (false)), true)), false || (bool(bvec2((! (false)), true)))))) && true)))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false), bvec3(bvec4(bvec3(_GLF_IDENTITY(bool((_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), (_GLF_IDENTITY((! (false)), _GLF_IDENTITY(bool(bvec2((! (false)), true)), false || (bool(bvec2((! (false)), true)))))) && true)))), false || (bool((_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), (_GLF_IDENTITY((! (false)), _GLF_IDENTITY(bool(bvec2((! (false)), true)), false || (bool(bvec2((! (false)), true)))))) && true)))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false), false)))), true, false, true)), (bool(bvec4(bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bool((_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), (_GLF_IDENTITY((! (false)), _GLF_IDENTITY(bool(bvec2((! (false)), true)), false || (bool(bvec2((! (false)), true)))))) && true)))), false || (bool((_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), (_GLF_IDENTITY((! (false)), _GLF_IDENTITY(bool(bvec2((! (false)), true)), false || (bool(bvec2((! (false)), true)))))) && true)))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false), bvec3(bvec4(bvec3(_GLF_IDENTITY(bool((_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), (_GLF_IDENTITY((! (false)), _GLF_IDENTITY(bool(bvec2((! (false)), true)), false || (bool(bvec2((! (false)), true)))))) && true)))), false || (bool((_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), (_GLF_IDENTITY((! (false)), _GLF_IDENTITY(bool(bvec2((! (false)), true)), false || (bool(bvec2((! (false)), true)))))) && true)))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false), false)))), true, false, true))) && true))), ! (! (bool((_GLF_IDENTITY(false, ! (! (false))))))))))))) || false, true && (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), ! (! (false)))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool((_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(bvec4(! (false), true, true, true))))))), ! (! (bool((_GLF_IDENTITY(false, ! (! (false))))))))), ! (! (bool(_GLF_IDENTITY(bool((_GLF_IDENTITY(false, ! (! (false))))), ! (! (bool((_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false)), ! _GLF_IDENTITY((! (false)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((! (false)), bool(bool((! (false)))))), (! (_GLF_IDENTITY((! (false)), bool(bool((! (false))))))) || false)))))))))))))) || false))), bool(bool(! (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), ! (! (false)))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool((_GLF_IDENTITY(false, ! (_GLF_IDENTITY(_GLF_IDENTITY(! (false), bool(bvec4(! (false), true, true, true))), false || (_GLF_IDENTITY(! (false), bool(bvec4(! (false), true, true, true))))))))), ! (! (bool((_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), ! (! (false))))))))), ! (! (bool(_GLF_IDENTITY(bool((_GLF_IDENTITY(false, ! (! (false))))), ! (! (bool((_GLF_IDENTITY(false, ! (! (false))))))))))))) || false, true && (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), ! (! (false)))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool((_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(bvec4(! (false), true, true, true))))))), ! (! (bool((_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, true && (false))))))))))), ! (! (_GLF_IDENTITY(bool(_GLF_IDENTITY(bool((_GLF_IDENTITY(false, ! (! (false))))), ! (! (bool(_GLF_IDENTITY((_GLF_IDENTITY(false, ! (! (false)))), ! (_GLF_IDENTITY(! ((_GLF_IDENTITY(false, ! (! (false))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(! ((_GLF_IDENTITY(false, ! (! (false))))), ! (! (! ((_GLF_IDENTITY(false, ! (! (false))))))))))))))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(bool(_GLF_IDENTITY(bool((_GLF_IDENTITY(false, ! (! (false))))), ! (! (bool(_GLF_IDENTITY((_GLF_IDENTITY(false, ! (! (false)))), ! (_GLF_IDENTITY(! ((_GLF_IDENTITY(false, ! (! (false))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(! ((_GLF_IDENTITY(false, ! (! (false))))), ! (! (! ((_GLF_IDENTITY(false, ! (! (false))))))))))))))))), bool(bvec4(bool(_GLF_IDENTITY(bool((_GLF_IDENTITY(false, ! (! (false))))), ! (! (bool(_GLF_IDENTITY((_GLF_IDENTITY(false, ! (! (false)))), ! (_GLF_IDENTITY(! ((_GLF_IDENTITY(false, ! (! (false))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(! ((_GLF_IDENTITY(false, ! (! (false))))), ! (! (! ((_GLF_IDENTITY(false, ! (! (false))))))))))))))))), false, false, false))))))))) || false)))))))))))), (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint next_virtual_gid = _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(workgroup_base, clamp(workgroup_base, _GLF_IDENTITY(workgroup_base, clamp(workgroup_base, workgroup_base, workgroup_base)), workgroup_base)) : _GLF_FUZZED(subgroup_size))), ~ (~ (workgroup_base))) + _GLF_IDENTITY(subgroup_id * _GLF_IDENTITY(subgroup_size, uint(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), (_GLF_ZERO(0.0, injectionSwitch.x)) + 0.0)) ^ (subgroup_size)), max(subgroup_id * subgroup_size, subgroup_id * subgroup_size)) + (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id + 1, uint(uint(_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) * 1u))))) % subgroup_size, ((subgroup_local_id + 1) % subgroup_size) << _GLF_IDENTITY(0u, ~ (~ (0u))))), min(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, ~ (~ (workgroup_base))), (0u & 167574u) + (_GLF_IDENTITY(workgroup_base, ~ (~ (workgroup_base))))) + _GLF_IDENTITY(subgroup_id * subgroup_size, max(subgroup_id * _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size))), (subgroup_size) >> _GLF_IDENTITY(0u, 0u | (0u))), _GLF_IDENTITY(subgroup_id, 1u * (subgroup_id)) * subgroup_size)) + ((subgroup_local_id + 1) % subgroup_size), _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, ~ (~ (workgroup_base))) + _GLF_IDENTITY(subgroup_id * subgroup_size, max(subgroup_id * subgroup_size, subgroup_id * subgroup_size)) + ((subgroup_local_id + 1) % subgroup_size), 0u | (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, ~ (~ (workgroup_base))) + _GLF_IDENTITY(subgroup_id * subgroup_size, max(subgroup_id * subgroup_size, subgroup_id * subgroup_size)) + ((subgroup_local_id + 1) % subgroup_size), min(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, ~ (~ (workgroup_base))) + _GLF_IDENTITY(subgroup_id * subgroup_size, max(subgroup_id * subgroup_size, subgroup_id * subgroup_size)) + ((subgroup_local_id + 1) % subgroup_size), ~ (~ (_GLF_IDENTITY(workgroup_base, ~ (~ (workgroup_base))) + _GLF_IDENTITY(subgroup_id * subgroup_size, max(subgroup_id * subgroup_size, subgroup_id * subgroup_size)) + ((subgroup_local_id + 1) % subgroup_size)))), _GLF_IDENTITY(workgroup_base, ~ _GLF_IDENTITY((~ (workgroup_base)), ((~ (workgroup_base))) >> 0u)) + _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, max(subgroup_id, subgroup_id)) * subgroup_size, max(subgroup_id * subgroup_size, subgroup_id * subgroup_size)) + ((subgroup_local_id + 1) % subgroup_size)))))));
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec4(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), false, true, false)))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (_GLF_IDENTITY(! ((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true && (! ((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), false, true)), _GLF_IDENTITY(bool(bvec2(bool(bvec3(_GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (_GLF_IDENTITY(! ((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true && (! ((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), false, true)), true)), true && (bool(bvec2(bool(bvec3(_GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (_GLF_IDENTITY(! ((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true && (! ((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), false, true)), true)))))), false || (! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > injectionSwitch.y)))))))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
        barrier();
      }
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 atomicStore(buf[next_virtual_gid], uint(_GLF_IDENTITY(1, (0 << _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(int(0), min(int(0), int(0))), (_GLF_IDENTITY(int(0), min(int(0), int(0)))) / 1), int(0))) | _GLF_IDENTITY((1), int(int((1)))))), _GLF_IDENTITY(_GLF_IDENTITY(4, (4) | (4)), 0 ^ (4)), 64, 4);
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint read_1 = atomicLoad(_GLF_IDENTITY(_GLF_IDENTITY(buf[_GLF_IDENTITY(virtual_gid, (_GLF_IDENTITY(virtual_gid, (false ? _GLF_FUZZED(next_virtual_gid) : _GLF_IDENTITY(virtual_gid, (virtual_gid) << uint(_GLF_ZERO(0.0, injectionSwitch.x)))))) | (virtual_gid))], 0u + (buf[_GLF_IDENTITY(_GLF_IDENTITY(virtual_gid, uint(uint(_GLF_IDENTITY(virtual_gid, (false ? _GLF_FUZZED(next_virtual_gid) : virtual_gid))))), (_GLF_IDENTITY(virtual_gid, (_GLF_IDENTITY(false ? _GLF_FUZZED(next_virtual_gid) : virtual_gid, 0u ^ (_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, bool(bool(false)))))) ? _GLF_FUZZED(next_virtual_gid) : virtual_gid))))) | (virtual_gid))])), _GLF_IDENTITY(min(buf[_GLF_IDENTITY(virtual_gid, (false ? _GLF_FUZZED(subgroup_id) : virtual_gid))], _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(buf[virtual_gid], (buf[virtual_gid]) | (buf[virtual_gid])), uint(uvec4(_GLF_IDENTITY(buf[virtual_gid], clamp(buf[virtual_gid], buf[virtual_gid], _GLF_IDENTITY(buf[virtual_gid], clamp(_GLF_IDENTITY(_GLF_IDENTITY(buf[virtual_gid], _GLF_IDENTITY(uint(uvec2(buf[virtual_gid], 0u)), uint(_GLF_IDENTITY(uint(_GLF_IDENTITY(uint(uvec2(buf[virtual_gid], 0u)), ~ (~ (uint(uvec2(buf[virtual_gid], 0u)))))), (uint(_GLF_IDENTITY(uint(uvec2(buf[virtual_gid], 0u)), ~ (~ (uint(uvec2(buf[virtual_gid], 0u))))))) - 0u)))), (false ? _GLF_FUZZED(subgroup_size) : _GLF_IDENTITY(buf[virtual_gid], max(buf[virtual_gid], buf[virtual_gid])))), buf[_GLF_IDENTITY(virtual_gid, (virtual_gid) >> 0u)], buf[virtual_gid])))), 1u, 1u, 0u))), (1u ^ 1u) + (_GLF_IDENTITY(_GLF_IDENTITY(buf[virtual_gid], (buf[virtual_gid]) | (buf[virtual_gid])), uint(uvec4(_GLF_IDENTITY(_GLF_IDENTITY(buf[virtual_gid], (buf[virtual_gid]) + 0u), clamp(buf[virtual_gid], buf[virtual_gid], _GLF_IDENTITY(buf[virtual_gid], clamp(_GLF_IDENTITY(_GLF_IDENTITY(buf[virtual_gid], _GLF_IDENTITY(uint(uvec2(buf[virtual_gid], 0u)), uint(_GLF_IDENTITY(uint(_GLF_IDENTITY(uint(uvec2(buf[virtual_gid], _GLF_IDENTITY(0u, (0u) - 0u))), ~ (_GLF_IDENTITY(~ (uint(uvec2(buf[virtual_gid], 0u))), min(~ (uint(uvec2(buf[virtual_gid], 0u))), ~ (uint(uvec2(buf[virtual_gid], 0u)))))))), (uint(_GLF_IDENTITY(uint(uvec2(buf[virtual_gid], 0u)), ~ (~ (uint(_GLF_IDENTITY(uvec2(buf[virtual_gid], 0u), (uvec2(buf[virtual_gid], 0u)) + (uvec2(1u, 1u) ^ uvec2(1u, 1u))))))))) - 0u)))), (false ? _GLF_FUZZED(subgroup_size) : _GLF_IDENTITY(buf[virtual_gid], max(buf[virtual_gid], buf[virtual_gid])))), buf[_GLF_IDENTITY(_GLF_IDENTITY(virtual_gid, (virtual_gid) >> 0u), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(virtual_gid, (virtual_gid) >> 0u), 0u ^ (_GLF_IDENTITY(virtual_gid, (virtual_gid) >> 0u))))))], buf[virtual_gid])))), 1u, 1u, 0u)))))), ~ (~ (min(buf[_GLF_IDENTITY(virtual_gid, (false ? _GLF_FUZZED(subgroup_id) : virtual_gid))], _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(buf[virtual_gid], ~ (_GLF_IDENTITY(~ (buf[virtual_gid]), (_GLF_IDENTITY(~ (buf[virtual_gid]), (~ (buf[virtual_gid])) - 0u)) | (~ (buf[virtual_gid]))))), (buf[virtual_gid]) | (buf[virtual_gid])), uint(uvec4(_GLF_IDENTITY(buf[virtual_gid], clamp(buf[virtual_gid], buf[_GLF_IDENTITY(virtual_gid, (virtual_gid) * 1u)], _GLF_IDENTITY(buf[virtual_gid], clamp(_GLF_IDENTITY(_GLF_IDENTITY(buf[virtual_gid], _GLF_IDENTITY(uint(uvec2(buf[virtual_gid], 0u)), uint(_GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(uint(uvec2(buf[_GLF_IDENTITY(virtual_gid, max(virtual_gid, _GLF_IDENTITY(virtual_gid, (0u >> _GLF_IDENTITY(uint(1u), uint(1u))) + (virtual_gid))))], 0u)), ~ (~ (uint(uvec2(buf[_GLF_IDENTITY(virtual_gid, max(virtual_gid, _GLF_IDENTITY(virtual_gid, (0u >> _GLF_IDENTITY(uint(1u), uint(1u))) + (virtual_gid))))], 0u))))), ~ (~ (uint(uvec2(buf[virtual_gid], 0u))))), (true ? _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(uint(uvec2(buf[_GLF_IDENTITY(virtual_gid, max(virtual_gid, _GLF_IDENTITY(virtual_gid, (0u >> _GLF_IDENTITY(uint(1u), uint(1u))) + (virtual_gid))))], 0u)), ~ (~ (uint(uvec2(buf[_GLF_IDENTITY(virtual_gid, max(virtual_gid, _GLF_IDENTITY(virtual_gid, (0u >> _GLF_IDENTITY(uint(1u), uint(1u))) + (virtual_gid))))], 0u))))), ~ (~ (uint(uvec2(buf[virtual_gid], 0u))))), min(_GLF_IDENTITY(_GLF_IDENTITY(uint(uvec2(buf[_GLF_IDENTITY(virtual_gid, max(virtual_gid, _GLF_IDENTITY(virtual_gid, (0u >> _GLF_IDENTITY(uint(1u), uint(1u))) + (virtual_gid))))], 0u)), ~ (~ (uint(uvec2(buf[_GLF_IDENTITY(virtual_gid, max(virtual_gid, _GLF_IDENTITY(virtual_gid, (0u >> _GLF_IDENTITY(uint(1u), uint(1u))) + (virtual_gid))))], 0u))))), ~ (~ (uint(uvec2(buf[virtual_gid], 0u))))), _GLF_IDENTITY(_GLF_IDENTITY(uint(uvec2(buf[_GLF_IDENTITY(virtual_gid, max(virtual_gid, _GLF_IDENTITY(virtual_gid, (0u >> _GLF_IDENTITY(uint(1u), uint(1u))) + (virtual_gid))))], 0u)), ~ (~ (uint(uvec2(buf[_GLF_IDENTITY(virtual_gid, max(virtual_gid, _GLF_IDENTITY(virtual_gid, (0u >> _GLF_IDENTITY(uint(1u), uint(1u))) + (virtual_gid))))], 0u))))), ~ (~ (uint(uvec2(buf[virtual_gid], 0u))))))) : _GLF_FUZZED(workgroup_id)))), (uint(_GLF_IDENTITY(uint(uvec2(buf[virtual_gid], 0u)), ~ (~ (_GLF_IDENTITY(uint(uvec2(buf[virtual_gid], 0u)), 0u | (uint(uvec2(buf[virtual_gid], 0u))))))))) - 0u)))), (false ? _GLF_FUZZED(subgroup_size) : _GLF_IDENTITY(buf[virtual_gid], max(buf[virtual_gid], buf[virtual_gid])))), buf[_GLF_IDENTITY(virtual_gid, (virtual_gid) >> 0u)], buf[virtual_gid])))), 1u, 1u, 0u)))))))), 4, 64, 0);
 atomicStore(buf[next_virtual_gid], _GLF_IDENTITY(uint(read_1 + 1), (uint(read_1 + 1)) - 0u), 4, 64, _GLF_IDENTITY(_GLF_IDENTITY(4, (true ? 4 : _GLF_FUZZED(71985))), min(_GLF_IDENTITY(4, (true ? 4 : _GLF_FUZZED(_GLF_IDENTITY(71985, max(_GLF_IDENTITY(71985, ~ (~ (71985))), 71985))))), _GLF_IDENTITY(4, (true ? 4 : _GLF_FUZZED(71985))))));
 if(_GLF_DEAD(false))
  barrier();
}
