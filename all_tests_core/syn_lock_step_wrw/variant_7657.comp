#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


struct _GLF_struct_7 {
 ivec4 _f0;
 ivec2 _f1;
 mat4x2 _f2;
} ;

struct _GLF_struct_6 {
 uvec3 _f0;
 int _f1;
 vec2 _f2;
 uvec4 _f3;
 mat2 _f4;
 uint _f5;
} ;

struct _GLF_struct_8 {
 ivec4 _f0;
 _GLF_struct_6 _f1;
 mat2 _f2;
 bvec3 _f3;
 _GLF_struct_7 _f4;
} ;

struct _GLF_struct_4 {
 bvec3 _f0;
 vec4 _f1;
} ;

struct _GLF_struct_3 {
 vec2 _f0;
} ;

struct _GLF_struct_5 {
 _GLF_struct_3 _f0;
 uvec2 _f1;
 mat4 _f2;
 _GLF_struct_4 _f3;
 bool _f4;
 mat3 _f5;
} ;

struct _GLF_struct_1 {
 mat4x3 _f0;
 vec2 _f1;
 mat4x2 _f2;
 mat3 _f3;
} ;

struct _GLF_struct_2 {
 _GLF_struct_1 _f0;
} ;

struct _GLF_struct_9 {
 uint next_virtual_gid;
 uvec3 _f0;
 mat4x2 _f1;
 _GLF_struct_2 _f2;
 _GLF_struct_5 _f3;
 ivec4 _f4;
 _GLF_struct_8 _f5;
} ;

struct _GLF_struct_0 {
 uint subgroup_local_id;
 ivec2 _f0;
} ;

layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y, bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))), false, true), bvec3(bvec4(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))), false, true), false)))))) || false)))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), _GLF_IDENTITY(((! (false))), ! (! (((! (false)))))) || false))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(_GLF_IDENTITY(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_IDENTITY(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || false)) || false)))))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(bool(false)))))), (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)), _GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0))))) - vec2(0.0, 0.0)).x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / _GLF_IDENTITY(vec2(1.0, 1.0), min(_GLF_IDENTITY(vec2(1.0, 1.0), min(_GLF_IDENTITY(vec2(1.0, 1.0), min(_GLF_IDENTITY(vec2(1.0, 1.0), min(_GLF_IDENTITY(vec2(1.0, 1.0), min(vec2(_GLF_IDENTITY(1.0, float(mat2x4(1.0, 1.0, determinant(mat2(0.0, 1.0, 0.0, 0.0)), 1.0, 0.0, length(vec3(0.0, 0.0, 0.0)), 1.0, 1.0))), 1.0), vec2(1.0, 1.0))), vec2(1.0, 1.0))), vec2(1.0, 1.0))), vec2(1.0, 1.0))), vec2(1.0, 1.0)))).y), ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / _GLF_IDENTITY(vec2(1.0, 1.0), min(_GLF_IDENTITY(vec2(1.0, 1.0), min(vec2(1.0, 1.0), vec2(1.0, 1.0))), vec2(1.0, 1.0)))).y)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), ! (_GLF_IDENTITY(! (! (_GLF_DEAD(false))), (! (! (_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), (! (_GLF_DEAD(false))) || false)))))) && true))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))), (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))), ! (_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))), false || (_GLF_IDENTITY(false, bool(bool(false)))))), false || ((_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))), false || (_GLF_IDENTITY(false, bool(bool(false)))))))), _GLF_IDENTITY(bool(bool(! (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))), false || (_GLF_IDENTITY(false, bool(bool(false)))))))), (bool(bool(! (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))), false || (_GLF_IDENTITY(false, bool(bool(false))))))))) || false))))) && true)))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, false)))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) && true)))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec2(false, true)))) && true)))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)), bool(bvec3(_GLF_IDENTITY(bool(bvec4(false, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)), (bool(bvec4(false, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))) && _GLF_IDENTITY(true, true && (true))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, _GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec4(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, false)), bool(bvec2(bool(bvec4(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, false)), true)))), _GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), bool(bvec4(bool(bool(false)), false, false, true)))))))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)) : _GLF_FUZZED(injectionSwitch))).y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(8048.9415)), bool(false))))) > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), ! (_GLF_IDENTITY(! ((! (false))), bool(bvec4(! ((! (false))), true, false, _GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, (true) && true)))))))))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, false, false, true)))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 _GLF_struct_0 _GLF_struct_replacement_0 = _GLF_struct_0(gl_SubgroupInvocationID, ivec2(_GLF_IDENTITY(1, _GLF_IDENTITY(int(ivec2(1, 0)), int(int(int(ivec2(1, 0))))))));
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y))))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! _GLF_IDENTITY((_GLF_IDENTITY(! (false), bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(! (false)), (bool(! (false))) && true), (bool(! (false))) && true)))), ! (! ((! (false))))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_DEAD(false), true))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bool(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y)))) || false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || _GLF_IDENTITY((false), _GLF_IDENTITY(bool(bvec3((false), true, true)), bool(bvec2(bool(bvec3((false), true, true)), false)))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)), true && (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))), bool(bool(_GLF_DEAD(false)))))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint num_workgroup = _GLF_IDENTITY(gl_NumWorkGroups.x, _GLF_IDENTITY((gl_NumWorkGroups.x), 0u | ((gl_NumWorkGroups.x))) << 0u);
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, _GLF_ONE(1.0, injectionSwitch.y) * (injectionSwitch.x)) > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))), (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))), (_GLF_IDENTITY(false, bool(bool(false)))) && true)) && true), (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(-3.4) : injectionSwitch.y)), float(float(injectionSwitch.y))), (false ? _GLF_FUZZED((-878.602 * inversesqrt(_GLF_IDENTITY(-726.798, mix(float(-726.798), float(_GLF_FUZZED(3.7)), bool(false)))))) : injectionSwitch.y))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 uint workgroup_size = gl_WorkGroupSize.x;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y)))), ! (! (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y)))))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint workgroup_id = gl_WorkGroupID.x;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED((9.8)), _GLF_FUZZED(0.1)), bvec2(false, false))).x > _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y, min(injectionSwitch.y, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(749.510)), float(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)).y))), bool(_GLF_IDENTITY(_GLF_IDENTITY(true, ! (! (true))), false || (_GLF_IDENTITY(_GLF_IDENTITY(true, ! (! (true))), true && (_GLF_IDENTITY(_GLF_IDENTITY(true, ! (! (true))), (_GLF_IDENTITY(true, ! (! (true)))) && true)))))))), 1.0 * (injectionSwitch.y)))), _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(3.5)), float(injectionSwitch.y), bool(true))), injectionSwitch.y))))))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 uint workgroup_base = workgroup_size * workgroup_id;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) || false)) || false), ! (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) || false)) || false)), false || (! (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) || false)) || false)))), true && (! (_GLF_IDENTITY(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) || false)) || false), true && (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) || false)) || false))))))))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, bool(bvec3(false, false, true)))))))), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(bool(bool(_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, bool(bvec3(false, false, true)))))))), ! (! (bool(bool(_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, bool(bvec3(false, false, true))))))))))), false), bvec2(bvec2(bvec2(_GLF_IDENTITY(bool(bool(_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, bool(bvec3(false, false, true)))))))), ! (! (bool(bool(_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, bool(bvec3(false, false, true))))))))))), false)))))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * 1.0) > injectionSwitch.y))) || false))))))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, false, true)))))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint virtual_gid = _GLF_IDENTITY(workgroup_base, (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && _GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY((_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0) > injectionSwitch.y))), bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! ((_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)), injectionSwitch)), injectionSwitch)).x > injectionSwitch.y)))))), false || (_GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! ((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), false, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), false), _GLF_IDENTITY(bvec2(bvec2(bvec2((_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)), (_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch))) - vec2(0.0, 0.0)).y)), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).y)), false || (_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(false, ! (! (false))))), (_GLF_IDENTITY(bool(bool(_GLF_IDENTITY(false, ! (! (false))))), bool(bvec2(_GLF_IDENTITY(bool(bool(_GLF_IDENTITY(false, ! (! (false))))), ! (_GLF_IDENTITY(! (bool(bool(_GLF_IDENTITY(false, ! (! (false)))))), (! (bool(bool(_GLF_IDENTITY(false, ! (! (false))))))) && true))), true)))) || false)), (_GLF_IDENTITY(injectionSwitch.x, float(mat4(injectionSwitch.x, 1.0, 1.0, 0.0, 1.0, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, sqrt(0.0), 1.0, 1.0))) > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(_GLF_IDENTITY(0.0, _GLF_IDENTITY((_GLF_IDENTITY(0.0, clamp(0.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0))), clamp((_GLF_IDENTITY(0.0, clamp(0.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0))), _GLF_IDENTITY((_GLF_IDENTITY(0.0, clamp(0.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0))), mix(float(_GLF_FUZZED(7.1)), float((_GLF_IDENTITY(0.0, clamp(0.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0)))), bool(true))), (_GLF_IDENTITY(0.0, clamp(0.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0))))) - _GLF_ZERO(0.0, injectionSwitch.x)), 0.0)).y)))))))), false))), bvec2(bvec2(bvec2(bvec2(bvec2((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false))))))))))) || false) ? _GLF_FUZZED(uvec3(73745u, 111652u, _GLF_IDENTITY(105846u, max(105846u, 105846u)))[_GLF_IDENTITY(1, (_GLF_IDENTITY(1, 0 + (1))) >> 0)]) : _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, uint(uint(_GLF_IDENTITY(workgroup_base, (workgroup_base) * 1u)))), (workgroup_base) | 0u))) + subgroup_id * subgroup_size + _GLF_IDENTITY(_GLF_struct_replacement_0.subgroup_local_id, uint(_GLF_IDENTITY(uint(_GLF_struct_replacement_0.subgroup_local_id), clamp(_GLF_IDENTITY(uint(_GLF_struct_replacement_0.subgroup_local_id), min(_GLF_IDENTITY(uint(_GLF_struct_replacement_0.subgroup_local_id), 0u | (uint(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_struct_replacement_0.subgroup_local_id, 0u ^ (_GLF_struct_replacement_0.subgroup_local_id)), max(_GLF_IDENTITY(_GLF_struct_replacement_0.subgroup_local_id, 0u ^ (_GLF_struct_replacement_0.subgroup_local_id)), _GLF_IDENTITY(_GLF_struct_replacement_0.subgroup_local_id, 0u ^ (_GLF_struct_replacement_0.subgroup_local_id))))))), uint(_GLF_struct_replacement_0.subgroup_local_id))), uint(_GLF_struct_replacement_0.subgroup_local_id), uint(_GLF_IDENTITY(_GLF_struct_replacement_0.subgroup_local_id, _GLF_IDENTITY((_GLF_struct_replacement_0.subgroup_local_id), ((_GLF_struct_replacement_0.subgroup_local_id)) - uint(_GLF_ZERO(0.0, injectionSwitch.x))) | (_GLF_struct_replacement_0.subgroup_local_id)))))));
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(mat3x4(injectionSwitch.y, 0.0, sqrt(0.0), determinant(mat3(abs(1.0), 0.0, 0.0, 1.0, _GLF_IDENTITY(1.0, min(_GLF_IDENTITY(_GLF_IDENTITY(1.0, float(float(1.0))), 0.0 + (_GLF_IDENTITY(1.0, float(float(1.0))))), 1.0)), 0.0, 0.0, 1.0, 1.0)), 0.0, 0.0, 1.0, determinant(mat3(cos(0.0), 1.0, _GLF_IDENTITY(1.0, min(1.0, 1.0)), 0.0, _GLF_IDENTITY(1.0, min(1.0, 1.0)), exp(0.0), 0.0, abs(0.0), 1.0)), _GLF_IDENTITY(dot(vec4(0.0, 0.0, 0.0, _GLF_IDENTITY(_GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(_GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, _GLF_IDENTITY(float(mat2x3(0.0, 0.0, 1.0, 0.0, 0.0, 1.0)), float(mat4x3(float(mat2x3(_GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, clamp(0.0, 0.0, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(513.813)), float(0.0), bool(true)))))) / 1.0), 0.0, 1.0, 0.0, 0.0, 1.0)), 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0)))), 0.0)), 0.0, 1.0, 0.0)), dot(_GLF_IDENTITY(vec4(0.0, 0.0, 1.0, 0.0), mat4(_GLF_ONE(1.0, injectionSwitch.y)) * (vec4(0.0, 0.0, 1.0, 0.0))), vec4(_GLF_IDENTITY(0.0, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(6.2)), float(_GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(9.8) : 0.0))), bool(true))) + (0.0)), 0.0, 1.0, _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-5.4)), bool(false)))))), max(_GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(_GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, _GLF_IDENTITY(float(mat2x3(0.0, 0.0, 1.0, 0.0, 0.0, 1.0)), float(mat4x3(float(mat2x3(0.0, 0.0, 1.0, 0.0, 0.0, 1.0)), 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0)))), 0.0)), 0.0, 1.0, 0.0)), dot(_GLF_IDENTITY(vec4(0.0, 0.0, 1.0, 0.0), mat4(_GLF_ONE(1.0, injectionSwitch.y)) * (vec4(0.0, 0.0, 1.0, 0.0))), vec4(_GLF_IDENTITY(0.0, 0.0 + (0.0)), 0.0, 1.0, _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-5.4)), bool(false)))))), _GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(_GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, _GLF_IDENTITY(float(mat2x3(_GLF_IDENTITY(0.0, 1.0 * (_GLF_IDENTITY(0.0, (0.0) / 1.0))), 0.0, 1.0, 0.0, 0.0, 1.0)), float(mat4x3(float(mat2x3(0.0, 0.0, 1.0, 0.0, 0.0, 1.0)), 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0)))), 0.0)), 0.0, 1.0, 0.0)), dot(_GLF_IDENTITY(vec4(0.0, 0.0, _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED((- 3.0))), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), _GLF_IDENTITY(0.0, 1.0 * (0.0))), mat4(_GLF_ONE(1.0, injectionSwitch.y)) * (vec4(0.0, 0.0, 1.0, 0.0))), vec4(_GLF_IDENTITY(0.0, 0.0 + (0.0)), 0.0, 1.0, _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-5.4)), bool(false))))))))), vec4(0.0, 0.0, 0.0, 1.0)), dot(vec4(0.0, 0.0, 0.0, _GLF_IDENTITY(_GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0)), dot(vec4(0.0, _GLF_IDENTITY(0.0, _GLF_IDENTITY(float(_GLF_IDENTITY(_GLF_IDENTITY(mat2(0.0, 1.0, 1.0, 1.0), (false ? _GLF_FUZZED(mat2(8123.5805, -173.945, 7.1, -7193.8298)) : _GLF_IDENTITY(mat2(0.0, 1.0, 1.0, 1.0), mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (mat2(0.0, 1.0, 1.0, 1.0))))), transpose(transpose(mat2(_GLF_IDENTITY(0.0, max(0.0, 0.0)), 1.0, 1.0, 1.0))))), _GLF_IDENTITY((float(_GLF_IDENTITY(mat2(0.0, 1.0, 1.0, 1.0), transpose(transpose(mat2(0.0, 1.0, 1.0, 1.0)))))), (_GLF_IDENTITY(true ? (float(_GLF_IDENTITY(mat2(0.0, 1.0, 1.0, 1.0), _GLF_IDENTITY(transpose(transpose(mat2(0.0, 1.0, 1.0, 1.0))), (transpose(transpose(mat2(0.0, 1.0, 1.0, 1.0)))) * mat2(1.0))))) : _GLF_FUZZED(-420.693), _GLF_IDENTITY(_GLF_IDENTITY(float(mat3(_GLF_IDENTITY(true, bool(_GLF_IDENTITY(bvec2(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(bvec2(bvec2(bvec2(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), bvec2(bvec4(bvec2(bvec2(bvec2(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), false, false)))))) ? (_GLF_IDENTITY(float(_GLF_IDENTITY(mat2(0.0, 1.0, 1.0, 1.0), _GLF_IDENTITY(transpose(transpose(mat2(0.0, 1.0, 1.0, 1.0))), (transpose(transpose(mat2(0.0, 1.0, 1.0, 1.0)))) * mat2(_GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, min(1.0, 1.0)), 1.0)))))), min(_GLF_IDENTITY(float(_GLF_IDENTITY(mat2(0.0, 1.0, 1.0, 1.0), _GLF_IDENTITY(transpose(transpose(mat2(0.0, 1.0, 1.0, 1.0))), (transpose(transpose(mat2(_GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0)), 1.0, 1.0, 1.0)))) * mat2(_GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, float(mat2x3(1.0, round(length(normalize(vec2(1.0, 1.0)))), 0.0, 0.0, 0.0, sqrt(0.0)))), 1.0)), 1.0)))))), max(float(_GLF_IDENTITY(mat2(0.0, 1.0, 1.0, 1.0), _GLF_IDENTITY(transpose(transpose(mat2(0.0, 1.0, 1.0, 1.0))), (transpose(transpose(mat2(0.0, 1.0, 1.0, 1.0)))) * mat2(_GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, min(1.0, 1.0)), 1.0)))))), float(_GLF_IDENTITY(mat2(0.0, 1.0, 1.0, 1.0), _GLF_IDENTITY(_GLF_IDENTITY(transpose(transpose(mat2(0.0, 1.0, 1.0, 1.0))), (transpose(transpose(mat2(0.0, 1.0, 1.0, 1.0)))) * mat2(_GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, min(1.0, 1.0)), 1.0)))), (true ? _GLF_IDENTITY(_GLF_IDENTITY(transpose(transpose(mat2(0.0, 1.0, 1.0, 1.0))), (transpose(transpose(mat2(0.0, 1.0, 1.0, 1.0)))) * mat2(_GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, min(1.0, 1.0)), 1.0)))), (_GLF_IDENTITY(transpose(transpose(mat2(0.0, 1.0, 1.0, 1.0))), (transpose(transpose(mat2(0.0, 1.0, 1.0, 1.0)))) * mat2(_GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, min(1.0, 1.0)), 1.0))))) - mat2(0.0, 0.0, 0.0, 0.0)) : _GLF_FUZZED(mat2(-9.5, 8.8, -65.30, 359.682)))))))), float(_GLF_IDENTITY(mat2(0.0, 1.0, 1.0, 1.0), _GLF_IDENTITY(transpose(transpose(mat2(0.0, 1.0, 1.0, 1.0))), (transpose(transpose(mat2(0.0, 1.0, 1.0, 1.0)))) * mat2(_GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, min(1.0, 1.0)), 1.0))))))))) : _GLF_FUZZED(-420.693), 1.0, _GLF_ONE(1.0, injectionSwitch.y), length(vec3(0.0, _GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, float(float(0.0))), 0.0, 0.0)), _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-9213.4277)), bool(false))))), 0.0, 1.0, 0.0, 0.0, 1.0)), mix(float(_GLF_FUZZED(-72.44)), float(_GLF_IDENTITY(float(mat3(_GLF_IDENTITY(true, bool(_GLF_IDENTITY(bvec2(true, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, float(mat4x3(injectionSwitch.x, 1.0, 1.0, 1.0, 0.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 0.0, abs(1.0), sin(0.0), tan(0.0)))) > injectionSwitch.y))), _GLF_IDENTITY(bvec2(bvec2(bvec2(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), bvec2(bvec4(bvec2(bvec2(bvec2(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), false, false)))))) ? (_GLF_IDENTITY(float(_GLF_IDENTITY(mat2(0.0, 1.0, 1.0, 1.0), _GLF_IDENTITY(transpose(transpose(mat2(0.0, 1.0, 1.0, 1.0))), (transpose(transpose(mat2(0.0, 1.0, 1.0, 1.0)))) * mat2(_GLF_IDENTITY(1.0, min(_GLF_IDENTITY(_GLF_IDENTITY(1.0, min(1.0, 1.0)), min(1.0, 1.0)), 1.0)))))), min(_GLF_IDENTITY(float(_GLF_IDENTITY(mat2(0.0, 1.0, 1.0, 1.0), _GLF_IDENTITY(transpose(transpose(mat2(0.0, 1.0, 1.0, 1.0))), (transpose(transpose(mat2(0.0, 1.0, 1.0, 1.0)))) * mat2(_GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-402.087)), float(_GLF_IDENTITY(1.0, min(1.0, _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0))))), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), 1.0)), 1.0)))))), max(float(_GLF_IDENTITY(mat2(0.0, 1.0, 1.0, 1.0), _GLF_IDENTITY(_GLF_IDENTITY(transpose(transpose(mat2(0.0, 1.0, 1.0, 1.0))), mat2(mat3x4(transpose(transpose(mat2(0.0, 1.0, 1.0, 1.0)))))), (transpose(transpose(mat2(0.0, 1.0, 1.0, 1.0)))) * mat2(_GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, min(1.0, 1.0)), 1.0)))))), float(_GLF_IDENTITY(mat2(0.0, 1.0, 1.0, 1.0), _GLF_IDENTITY(transpose(transpose(mat2(0.0, 1.0, 1.0, 1.0))), (transpose(transpose(mat2(0.0, 1.0, 1.0, 1.0)))) * _GLF_IDENTITY(mat2(_GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, min(1.0, 1.0)), 1.0))), (_GLF_IDENTITY(mat2(_GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, min(1.0, 1.0)), 1.0))), mat2(1.0) * (mat2(_GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, min(1.0, 1.0)), 1.0)))))) * mat2(1.0))))))), float(_GLF_IDENTITY(mat2(0.0, 1.0, 1.0, 1.0), _GLF_IDENTITY(transpose(transpose(mat2(0.0, 1.0, 1.0, 1.0))), (transpose(transpose(mat2(0.0, 1.0, 1.0, 1.0)))) * mat2(_GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, min(1.0, 1.0)), 1.0))))))))) : _GLF_FUZZED(-420.693), 1.0, _GLF_ONE(1.0, injectionSwitch.y), length(vec3(0.0, _GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, float(float(0.0))), 0.0, 0.0)), _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-9213.4277)), bool(false))))), 0.0, 1.0, 0.0, 0.0, 1.0)), min(_GLF_IDENTITY(float(mat3(_GLF_IDENTITY(true, bool(_GLF_IDENTITY(bvec2(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(bvec2(bvec2(bvec2(true, _GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y)))))))))), bvec2(bvec4(bvec2(bvec2(bvec2(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), false, false)))))) ? (_GLF_IDENTITY(float(_GLF_IDENTITY(mat2(0.0, 1.0, 1.0, 1.0), _GLF_IDENTITY(transpose(transpose(mat2(0.0, 1.0, 1.0, 1.0))), (transpose(transpose(mat2(0.0, 1.0, 1.0, 1.0)))) * mat2(_GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, min(1.0, 1.0)), 1.0)))))), min(_GLF_IDENTITY(float(_GLF_IDENTITY(mat2(0.0, 1.0, 1.0, 1.0), _GLF_IDENTITY(transpose(transpose(mat2(0.0, 1.0, 1.0, 1.0))), (transpose(transpose(mat2(0.0, 1.0, 1.0, 1.0)))) * mat2(_GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, min(1.0, 1.0)), 1.0)))))), max(float(_GLF_IDENTITY(mat2(0.0, 1.0, 1.0, 1.0), _GLF_IDENTITY(transpose(transpose(mat2(0.0, 1.0, 1.0, 1.0))), (transpose(transpose(mat2(0.0, 1.0, 1.0, _GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, float(vec3(_GLF_IDENTITY(1.0, float(mat3(1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0))), 0.0, 1.0))), 1.0)))))) * mat2(_GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, min(1.0, 1.0)), 1.0)))))), float(_GLF_IDENTITY(mat2(0.0, 1.0, 1.0, 1.0), _GLF_IDENTITY(transpose(transpose(mat2(0.0, 1.0, 1.0, 1.0))), (transpose(transpose(mat2(0.0, 1.0, 1.0, 1.0)))) * mat2(_GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, min(1.0, 1.0)), 1.0)))))))), float(_GLF_IDENTITY(mat2(0.0, 1.0, _GLF_IDENTITY(1.0, max(1.0, _GLF_IDENTITY(1.0, (1.0) - 0.0))), 1.0), _GLF_IDENTITY(transpose(transpose(mat2(0.0, 1.0, 1.0, 1.0))), (_GLF_IDENTITY(transpose(transpose(mat2(0.0, 1.0, 1.0, 1.0))), (transpose(transpose(mat2(0.0, 1.0, 1.0, 1.0)))) + mat2(0.0, 0.0, 0.0, 0.0))) * mat2(_GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, min(1.0, 1.0)), 1.0))))))))) : _GLF_FUZZED(-420.693), 1.0, _GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), (true ? _GLF_ONE(1.0, injectionSwitch.y) : _GLF_FUZZED(4.9))), length(vec3(0.0, _GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, float(float(0.0))), 0.0, 0.0)), _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-9213.4277)), bool(false))))), 0.0, 1.0, 0.0, 0.0, 1.0)), max(float(mat3(_GLF_IDENTITY(true, bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(bvec2(bvec2(bvec2(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), bvec2(bvec4(bvec2(bvec2(bvec2(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), false, false)))), bvec2(bvec4(_GLF_IDENTITY(bvec2(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(bvec2(bvec2(bvec2(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), bvec2(bvec4(bvec2(bvec2(bvec2(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), false, false)))), true, true))))) ? (_GLF_IDENTITY(float(_GLF_IDENTITY(mat2(0.0, 1.0, 1.0, 1.0), _GLF_IDENTITY(transpose(transpose(mat2(0.0, 1.0, 1.0, 1.0))), (transpose(transpose(mat2(0.0, 1.0, 1.0, 1.0)))) * mat2(_GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, min(1.0, 1.0)), 1.0)))))), min(_GLF_IDENTITY(float(_GLF_IDENTITY(mat2(0.0, 1.0, 1.0, 1.0), _GLF_IDENTITY(transpose(transpose(mat2(0.0, 1.0, 1.0, 1.0))), (transpose(transpose(mat2(0.0, 1.0, 1.0, 1.0)))) * mat2(_GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, min(1.0, 1.0)), 1.0)))))), max(float(_GLF_IDENTITY(mat2(0.0, 1.0, 1.0, 1.0), _GLF_IDENTITY(transpose(transpose(mat2(0.0, 1.0, 1.0, 1.0))), (transpose(transpose(mat2(0.0, 1.0, 1.0, 1.0)))) * mat2(_GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, min(1.0, 1.0)), 1.0)))))), float(_GLF_IDENTITY(mat2(0.0, 1.0, 1.0, 1.0), _GLF_IDENTITY(transpose(transpose(mat2(0.0, 1.0, 1.0, 1.0))), (transpose(transpose(mat2(0.0, 1.0, 1.0, 1.0)))) * mat2(_GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, min(1.0, 1.0)), 1.0)))))))), float(_GLF_IDENTITY(mat2(0.0, 1.0, 1.0, 1.0), _GLF_IDENTITY(transpose(transpose(mat2(0.0, 1.0, 1.0, 1.0))), (transpose(transpose(mat2(0.0, 1.0, 1.0, 1.0)))) * mat2(_GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, min(1.0, 1.0)), 1.0))))))))) : _GLF_FUZZED(-420.693), 1.0, _GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0), injectionSwitch.y))), length(vec3(0.0, _GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, float(float(0.0))), 0.0, 0.0)), _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-9213.4277)), bool(false))))), 0.0, 1.0, 0.0, 0.0, 1.0)), float(mat3(_GLF_IDENTITY(true, bool(_GLF_IDENTITY(bvec2(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(bvec2(bvec2(bvec2(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), bvec2(bvec4(bvec2(bvec2(bvec2(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), false, false)))))) ? (_GLF_IDENTITY(float(_GLF_IDENTITY(mat2(0.0, 1.0, 1.0, 1.0), _GLF_IDENTITY(transpose(transpose(mat2(_GLF_IDENTITY(0.0, mix(float(_GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(-830.741) : 0.0))), float(_GLF_FUZZED(float(183441u))), bool(_GLF_IDENTITY(false, true && (false))))), 1.0, 1.0, 1.0))), (transpose(transpose(mat2(0.0, 1.0, 1.0, 1.0)))) * mat2(_GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, min(1.0, 1.0)), 1.0)))))), min(_GLF_IDENTITY(float(_GLF_IDENTITY(mat2(0.0, 1.0, 1.0, 1.0), _GLF_IDENTITY(transpose(transpose(mat2(0.0, 1.0, 1.0, 1.0))), (transpose(transpose(mat2(0.0, 1.0, 1.0, 1.0)))) * mat2(_GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, min(1.0, 1.0)), 1.0)))))), max(float(_GLF_IDENTITY(mat2(0.0, 1.0, 1.0, 1.0), _GLF_IDENTITY(transpose(transpose(mat2(0.0, 1.0, 1.0, 1.0))), _GLF_IDENTITY((transpose(transpose(mat2(0.0, 1.0, 1.0, 1.0)))), mat2(0.0, 0.0, 0.0, 0.0) + ((transpose(transpose(mat2(0.0, 1.0, 1.0, 1.0)))))) * mat2(_GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, min(1.0, 1.0)), 1.0)))))), float(_GLF_IDENTITY(mat2(0.0, 1.0, 1.0, 1.0), _GLF_IDENTITY(transpose(transpose(mat2(0.0, 1.0, 1.0, 1.0))), (transpose(transpose(mat2(0.0, 1.0, 1.0, 1.0)))) * mat2(_GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, min(1.0, 1.0)), 1.0)))))))), float(_GLF_IDENTITY(mat2(0.0, 1.0, 1.0, 1.0), _GLF_IDENTITY(transpose(transpose(mat2(0.0, 1.0, 1.0, 1.0))), (_GLF_IDENTITY(transpose(transpose(mat2(0.0, 1.0, 1.0, 1.0))), mat2(1.0) * (transpose(transpose(mat2(0.0, _GLF_IDENTITY(1.0, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(-20.81) : 1.0)), 1.0, 1.0)))))) * mat2(_GLF_IDENTITY(_GLF_IDENTITY(1.0, float(_GLF_IDENTITY(mat2x3(1.0, abs(1.0), 0.0, 0.0, 1.0, 1.0), transpose(transpose(mat2x3(1.0, abs(1.0), 0.0, 0.0, 1.0, 1.0)))))), min(_GLF_IDENTITY(1.0, min(1.0, 1.0)), 1.0))))))))) : _GLF_FUZZED(-420.693), 1.0, _GLF_ONE(1.0, injectionSwitch.y), length(vec3(0.0, _GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, float(float(0.0))), 0.0, 0.0)), _GLF_IDENTITY(0.0, mix(float(_GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(-7.9) : 0.0))), float(_GLF_FUZZED(-9213.4277)), bool(false))))), 0.0, 1.0, 0.0, 0.0, 1.0)))), float(mat3(_GLF_IDENTITY(true, bool(_GLF_IDENTITY(bvec2(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(bvec2(bvec2(bvec2(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), bvec2(bvec4(bvec2(bvec2(bvec2(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), false, false)))))) ? (_GLF_IDENTITY(float(_GLF_IDENTITY(mat2(0.0, 1.0, 1.0, 1.0), _GLF_IDENTITY(transpose(transpose(mat2(0.0, 1.0, 1.0, 1.0))), (transpose(transpose(mat2(0.0, 1.0, 1.0, 1.0)))) * mat2(_GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, min(1.0, 1.0)), 1.0)))))), min(_GLF_IDENTITY(float(_GLF_IDENTITY(mat2(0.0, 1.0, 1.0, 1.0), _GLF_IDENTITY(transpose(transpose(mat2(0.0, 1.0, 1.0, 1.0))), (transpose(transpose(mat2(0.0, 1.0, 1.0, 1.0)))) * mat2(_GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, min(1.0, 1.0)), 1.0)))))), max(float(_GLF_IDENTITY(mat2(0.0, _GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, min(1.0, 1.0)), 1.0)), 1.0, 1.0), _GLF_IDENTITY(transpose(transpose(mat2(0.0, 1.0, 1.0, 1.0))), (transpose(transpose(mat2(0.0, 1.0, 1.0, 1.0)))) * mat2(_GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, min(1.0, 1.0)), 1.0)))))), _GLF_IDENTITY(float(_GLF_IDENTITY(mat2(0.0, 1.0, 1.0, 1.0), _GLF_IDENTITY(transpose(transpose(mat2(0.0, 1.0, 1.0, 1.0))), (transpose(_GLF_IDENTITY(transpose(mat2(0.0, 1.0, 1.0, 1.0)), (false ? _GLF_FUZZED((mat4x2(-5131.7827, 74.22, 978.316, 4.1, -70.01, -66.13, -2.0, 5490.6433) * mat2x4(331.893, 0.0, 8.5, -8.0, 8288.7784, 84.88, -6.9, -9.9))) : transpose(mat2(0.0, 1.0, 1.0, 1.0)))))) * mat2(_GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, min(1.0, 1.0)), 1.0)))))), _GLF_IDENTITY(float(float(float(_GLF_IDENTITY(mat2(0.0, 1.0, 1.0, 1.0), _GLF_IDENTITY(transpose(transpose(mat2(0.0, 1.0, 1.0, 1.0))), (transpose(_GLF_IDENTITY(transpose(mat2(0.0, 1.0, 1.0, 1.0)), (false ? _GLF_FUZZED((mat4x2(-5131.7827, 74.22, 978.316, 4.1, -70.01, -66.13, -2.0, 5490.6433) * mat2x4(331.893, 0.0, 8.5, -8.0, 8288.7784, 84.88, -6.9, -9.9))) : transpose(mat2(0.0, 1.0, 1.0, 1.0)))))) * mat2(_GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, min(1.0, 1.0)), 1.0)))))))), _GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0)), dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0))) * (float(float(float(_GLF_IDENTITY(mat2(0.0, 1.0, 1.0, 1.0), _GLF_IDENTITY(transpose(transpose(mat2(0.0, 1.0, 1.0, 1.0))), (transpose(_GLF_IDENTITY(transpose(mat2(0.0, 1.0, 1.0, 1.0)), (false ? _GLF_FUZZED((mat4x2(-5131.7827, 74.22, 978.316, 4.1, -70.01, -66.13, -2.0, 5490.6433) * mat2x4(331.893, 0.0, 8.5, -8.0, 8288.7784, 84.88, -6.9, -9.9))) : transpose(mat2(0.0, 1.0, 1.0, 1.0)))))) * mat2(_GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, min(1.0, 1.0)), 1.0))))))))))))), float(_GLF_IDENTITY(mat2(0.0, 1.0, 1.0, 1.0), _GLF_IDENTITY(transpose(transpose(mat2(0.0, 1.0, 1.0, 1.0))), (transpose(transpose(mat2(0.0, 1.0, 1.0, 1.0)))) * mat2(_GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, min(1.0, 1.0)), 1.0))))))))) : _GLF_FUZZED(-420.693), 1.0, _GLF_ONE(1.0, injectionSwitch.y), length(vec3(0.0, _GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, float(float(0.0))), 0.0, 0.0)), _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-9213.4277)), bool(false))))), 0.0, 1.0, 0.0, 0.0, 1.0))))), bool(_GLF_IDENTITY(true, bool(bool(true)))))), mix(float(float(mat3(true ? (float(_GLF_IDENTITY(mat2(0.0, 1.0, 1.0, 1.0), _GLF_IDENTITY(transpose(transpose(mat2(0.0, _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(71.51)), float(1.0), bool(true))), 1.0, 1.0))), (transpose(transpose(mat2(0.0, 1.0, 1.0, 1.0)))) * mat2(1.0))))) : _GLF_FUZZED(-420.693), 1.0, _GLF_ONE(1.0, injectionSwitch.y), length(vec3(0.0, 0.0, 0.0)), 0.0, 1.0, 0.0, 0.0, 1.0))), float(_GLF_FUZZED(-9.1)), bool(false)))))) / 1.0)), 1.0, _GLF_IDENTITY(0.0, (0.0) / 1.0)), vec4(0.0, 0.0, 1.0, 0.0))), max(_GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0)), dot(vec4(0.0, _GLF_IDENTITY(0.0, _GLF_IDENTITY(float(_GLF_IDENTITY(mat2(0.0, 1.0, 1.0, 1.0), transpose(transpose(mat2(_GLF_IDENTITY(0.0, _GLF_IDENTITY(max(0.0, 0.0), 0.0 + (max(0.0, 0.0)))), 1.0, 1.0, _GLF_IDENTITY(1.0, float(mat3x4(1.0, tan(0.0), _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0))), 0.0, 1.0, 1.0, 0.0, _GLF_IDENTITY(sqrt(0.0), max(sqrt(0.0), sqrt(0.0))), 0.0, 1.0, log(round(length(normalize(vec2(1.0, 1.0))))), determinant(mat4(1.0, 1.0, _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(681.510)), bool(false))), 1.0, log(1.0), 1.0, 0.0, 1.0, 0.0, determinant(mat3(0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)), 1.0, 0.0, 0.0, 0.0, 0.0, 1.0)))))))))), _GLF_IDENTITY((float(_GLF_IDENTITY(mat2(0.0, 1.0, 1.0, 1.0), transpose(transpose(mat2(0.0, 1.0, 1.0, 1.0)))))), (_GLF_IDENTITY(true ? (float(_GLF_IDENTITY(mat2(0.0, 1.0, 1.0, 1.0), _GLF_IDENTITY(transpose(transpose(mat2(_GLF_IDENTITY(0.0, _GLF_IDENTITY(float(mat2x4(0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0)), max(float(mat2x4(0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0)), float(mat2x4(0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0))))), 1.0, 1.0, 1.0))), (transpose(transpose(mat2(0.0, 1.0, 1.0, _GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, (1.0) + 0.0)) / _GLF_IDENTITY(dot(vec4(_GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, float(vec4(0.0, 1.0, 0.0, 1.0))), 0.0, 0.0)), _GLF_IDENTITY(0.0, float(_GLF_IDENTITY(vec3(0.0, cos(0.0), abs(0.0)), max(_GLF_IDENTITY(vec3(0.0, cos(0.0), abs(0.0)), (true ? vec3(0.0, cos(0.0), abs(0.0)) : _GLF_FUZZED(vec3(6.5, 0.9, -9.9)))), _GLF_IDENTITY(vec3(0.0, cos(0.0), abs(0.0)), max(vec3(0.0, cos(0.0), abs(0.0)), vec3(0.0, cos(0.0), abs(0.0)))))))), 0.0, 1.0), vec4(0.0, 0.0, 0.0, 1.0)), dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, 0.0, 0.0, 1.0)))))))) * mat2(1.0))))) : _GLF_FUZZED(-420.693), _GLF_IDENTITY(float(mat3(true ? (float(_GLF_IDENTITY(mat2(0.0, 1.0, 1.0, 1.0), _GLF_IDENTITY(transpose(transpose(mat2(0.0, 1.0, 1.0, 1.0))), (transpose(transpose(mat2(0.0, 1.0, 1.0, 1.0)))) * mat2(1.0))))) : _GLF_FUZZED(-420.693), 1.0, _GLF_ONE(1.0, injectionSwitch.y), length(vec3(0.0, 0.0, 0.0)), 0.0, 1.0, 0.0, 0.0, 1.0)), mix(float(float(mat3(true ? (float(_GLF_IDENTITY(mat2(0.0, 1.0, 1.0, _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(5.2)), bool(false)))), _GLF_IDENTITY(transpose(transpose(mat2(0.0, _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), 1.0, 1.0))), (transpose(transpose(mat2(0.0, 1.0, 1.0, 1.0)))) * mat2(1.0))))) : _GLF_FUZZED(-420.693), 1.0, _GLF_ONE(1.0, injectionSwitch.y), length(vec3(0.0, 0.0, 0.0)), 0.0, 1.0, 0.0, 0.0, 1.0))), float(_GLF_FUZZED(-9.1)), bool(false)))))) / 1.0)), 1.0, _GLF_IDENTITY(0.0, (0.0) / 1.0)), vec4(0.0, 0.0, 1.0, 0.0))), _GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0)), dot(vec4(0.0, _GLF_IDENTITY(_GLF_IDENTITY(0.0, float(mat3x2(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(9943.7565)), _GLF_IDENTITY(bool(false), (bool(false)) || false))), _GLF_IDENTITY(dot(_GLF_IDENTITY(vec3(0.0, 1.0, _GLF_ZERO(_GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(50.00) : 0.0)), injectionSwitch.x)), mat3(1.0) * (vec3(0.0, 1.0, _GLF_ZERO(_GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(50.00) : 0.0)), injectionSwitch.x)))), vec3(0.0, 1.0, 0.0)), dot(vec3(0.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x)), vec3(0.0, 1.0, 0.0))), 1.0, 1.0, 1.0, 0.0))), _GLF_IDENTITY(float(_GLF_IDENTITY(_GLF_IDENTITY(mat2(0.0, 1.0, 1.0, 1.0), transpose(transpose(_GLF_IDENTITY(mat2(0.0, 1.0, 1.0, 1.0), (true ? mat2(0.0, 1.0, 1.0, 1.0) : _GLF_FUZZED(mat2(-1.2, -2.3, -18.83, 4.2))))))), transpose(transpose(mat2(_GLF_IDENTITY(0.0, max(0.0, 0.0)), 1.0, 1.0, 1.0))))), _GLF_IDENTITY((float(_GLF_IDENTITY(mat2(0.0, 1.0, 1.0, 1.0), transpose(transpose(mat2(0.0, 1.0, 1.0, 1.0)))))), (_GLF_IDENTITY(_GLF_IDENTITY(true ? (float(_GLF_IDENTITY(_GLF_IDENTITY(mat2(0.0, 1.0, 1.0, 1.0), _GLF_IDENTITY(transpose(transpose(mat2(0.0, 1.0, 1.0, 1.0))), (transpose(transpose(mat2(0.0, 1.0, 1.0, 1.0)))) * mat2(1.0))), transpose(transpose(_GLF_IDENTITY(mat2(0.0, 1.0, 1.0, 1.0), _GLF_IDENTITY(transpose(transpose(mat2(0.0, 1.0, 1.0, 1.0))), (transpose(transpose(mat2(0.0, 1.0, 1.0, 1.0)))) * mat2(1.0)))))))) : _GLF_FUZZED(-420.693), _GLF_IDENTITY(float(mat3(true ? (float(_GLF_IDENTITY(mat2(0.0, 1.0, _GLF_IDENTITY(1.0, clamp(1.0, _GLF_IDENTITY(1.0, (1.0) - 0.0), _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)))), _GLF_IDENTITY(1.0, (1.0) + 0.0)), _GLF_IDENTITY(transpose(transpose(mat2(0.0, 1.0, 1.0, 1.0))), (transpose(transpose(mat2(0.0, 1.0, 1.0, 1.0)))) * mat2(1.0))))) : _GLF_FUZZED(-420.693), 1.0, _GLF_ONE(1.0, injectionSwitch.y), length(vec3(0.0, 0.0, 0.0)), 0.0, 1.0, 0.0, 0.0, 1.0)), mix(float(float(mat3(true ? (float(_GLF_IDENTITY(mat2(0.0, 1.0, 1.0, 1.0), _GLF_IDENTITY(transpose(transpose(mat2(0.0, 1.0, 1.0, 1.0))), (transpose(transpose(mat2(0.0, 1.0, 1.0, 1.0)))) * mat2(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(-223.628)), bool(false)))))))) : _GLF_FUZZED(-420.693), 1.0, _GLF_ONE(1.0, injectionSwitch.y), length(vec3(0.0, 0.0, 0.0)), 0.0, 1.0, 0.0, 0.0, 1.0))), float(_GLF_FUZZED(-9.1)), bool(false)))), clamp(_GLF_IDENTITY(true ? (float(_GLF_IDENTITY(mat2(0.0, 1.0, 1.0, 1.0), _GLF_IDENTITY(transpose(transpose(mat2(0.0, 1.0, 1.0, 1.0))), (transpose(transpose(mat2(0.0, 1.0, 1.0, 1.0)))) * mat2(1.0))))) : _GLF_FUZZED(-420.693), _GLF_IDENTITY(float(mat3(true ? (float(_GLF_IDENTITY(mat2(0.0, 1.0, 1.0, 1.0), _GLF_IDENTITY(transpose(transpose(mat2(0.0, 1.0, 1.0, 1.0))), (transpose(transpose(mat2(0.0, 1.0, 1.0, 1.0)))) * mat2(1.0))))) : _GLF_FUZZED(-420.693), 1.0, _GLF_ONE(1.0, injectionSwitch.y), length(vec3(0.0, 0.0, 0.0)), 0.0, 1.0, 0.0, 0.0, 1.0)), mix(float(float(mat3(true ? (float(_GLF_IDENTITY(mat2(0.0, 1.0, 1.0, 1.0), _GLF_IDENTITY(transpose(transpose(mat2(0.0, 1.0, 1.0, 1.0))), (transpose(transpose(mat2(0.0, 1.0, 1.0, 1.0)))) * mat2(1.0))))) : _GLF_FUZZED(-420.693), _GLF_IDENTITY(1.0, float(mat2(1.0, round(length(normalize(vec4(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y))))), 1.0, 1.0))), _GLF_ONE(1.0, injectionSwitch.y), length(vec3(0.0, 0.0, 0.0)), 0.0, 1.0, 0.0, 0.0, 1.0))), float(_GLF_FUZZED(-9.1)), bool(false)))), _GLF_IDENTITY(true ? (float(_GLF_IDENTITY(mat2(0.0, 1.0, 1.0, 1.0), _GLF_IDENTITY(transpose(transpose(mat2(_GLF_IDENTITY(0.0, (0.0) / _GLF_ONE(1.0, injectionSwitch.y)), 1.0, 1.0, 1.0))), (_GLF_IDENTITY(transpose(transpose(mat2(0.0, 1.0, 1.0, 1.0))), (transpose(transpose(mat2(0.0, 1.0, 1.0, 1.0)))) * mat2(1.0))) * mat2(1.0))))) : _GLF_FUZZED(-420.693), _GLF_IDENTITY(float(_GLF_IDENTITY(mat3(true ? (float(_GLF_IDENTITY(mat2(0.0, 1.0, 1.0, 1.0), _GLF_IDENTITY(transpose(transpose(mat2(0.0, 1.0, 1.0, 1.0))), (transpose(transpose(mat2(0.0, 1.0, 1.0, 1.0)))) * mat2(1.0))))) : _GLF_FUZZED(-420.693), 1.0, _GLF_ONE(1.0, injectionSwitch.y), length(vec3(0.0, 0.0, 0.0)), 0.0, 1.0, 0.0, 0.0, 1.0), mat3(mat4x3(mat3(true ? (float(_GLF_IDENTITY(mat2(0.0, 1.0, 1.0, 1.0), _GLF_IDENTITY(transpose(transpose(mat2(0.0, 1.0, 1.0, 1.0))), (transpose(transpose(mat2(0.0, 1.0, 1.0, 1.0)))) * mat2(1.0))))) : _GLF_FUZZED(-420.693), 1.0, _GLF_ONE(1.0, injectionSwitch.y), length(vec3(0.0, 0.0, 0.0)), 0.0, 1.0, 0.0, 0.0, 1.0))))), mix(float(float(mat3(true ? (float(_GLF_IDENTITY(mat2(0.0, 1.0, 1.0, 1.0), _GLF_IDENTITY(transpose(transpose(mat2(0.0, 1.0, 1.0, 1.0))), (transpose(transpose(mat2(0.0, 1.0, 1.0, 1.0)))) * mat2(1.0))))) : _GLF_FUZZED(-420.693), 1.0, _GLF_ONE(1.0, injectionSwitch.y), length(vec3(0.0, 0.0, 0.0)), 0.0, 1.0, 0.0, 0.0, 1.0))), float(_GLF_FUZZED(-9.1)), bool(false)))), _GLF_IDENTITY(true ? (_GLF_IDENTITY(float(_GLF_IDENTITY(mat2(0.0, 1.0, 1.0, 1.0), _GLF_IDENTITY(transpose(transpose(mat2(0.0, 1.0, 1.0, 1.0))), (transpose(transpose(mat2(0.0, 1.0, 1.0, 1.0)))) * mat2(1.0)))), min(float(_GLF_IDENTITY(mat2(0.0, 1.0, 1.0, 1.0), _GLF_IDENTITY(transpose(transpose(mat2(0.0, 1.0, 1.0, 1.0))), (transpose(transpose(mat2(0.0, 1.0, 1.0, 1.0)))) * mat2(1.0)))), float(_GLF_IDENTITY(mat2(0.0, 1.0, 1.0, 1.0), _GLF_IDENTITY(transpose(transpose(mat2(0.0, 1.0, 1.0, 1.0))), (transpose(transpose(mat2(0.0, 1.0, 1.0, 1.0)))) * mat2(1.0))))))) : _GLF_FUZZED(-420.693), _GLF_IDENTITY(float(mat3(_GLF_IDENTITY(true ? (float(_GLF_IDENTITY(mat2(0.0, 1.0, 1.0, 1.0), _GLF_IDENTITY(transpose(transpose(mat2(0.0, 1.0, 1.0, 1.0))), (transpose(transpose(mat2(0.0, 1.0, 1.0, 1.0)))) * mat2(1.0))))) : _GLF_FUZZED(-420.693), (true ? (float(_GLF_IDENTITY(mat2(0.0, 1.0, 1.0, 1.0), _GLF_IDENTITY(transpose(transpose(mat2(0.0, 1.0, 1.0, 1.0))), (transpose(transpose(mat2(0.0, 1.0, 1.0, 1.0)))) * mat2(1.0))))) : _GLF_FUZZED(-420.693)) / sqrt(1.0)), 1.0, _GLF_ONE(1.0, injectionSwitch.y), length(vec3(0.0, 0.0, 0.0)), 0.0, 1.0, 0.0, 0.0, 1.0)), mix(float(float(mat3(true ? (float(_GLF_IDENTITY(mat2(0.0, 1.0, 1.0, 1.0), _GLF_IDENTITY(transpose(transpose(mat2(0.0, 1.0, 1.0, 1.0))), (transpose(transpose(mat2(0.0, 1.0, 1.0, 1.0)))) * mat2(1.0))))) : _GLF_FUZZED(-420.693), 1.0, _GLF_ONE(1.0, injectionSwitch.y), length(vec3(0.0, 0.0, 0.0)), 0.0, 1.0, 0.0, 0.0, 1.0))), float(_GLF_FUZZED(-9.1)), bool(false)))))))) / 1.0)), 1.0, _GLF_IDENTITY(0.0, (0.0) / 1.0)), vec4(0.0, 0.0, 1.0, 0.0)))))), vec4(0.0, 0.0, 0.0, 1.0))), 0.0, _GLF_IDENTITY(1.0, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(1.0, _GLF_ONE(1.0, injectionSwitch.y) * (1.0)) : _GLF_FUZZED(2.4))), _GLF_ZERO(0.0, injectionSwitch.x))))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-7.4)), bool(false)))), float(vec2(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-7.4)), bool(false)))), ((_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-7.4)), bool(false))))) * 1.0), cos(determinant(mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0)))))) / 1.0) > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * exp(vec2(0.0, 0.0))).y))), ! (_GLF_IDENTITY(! (_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * exp(vec2(0.0, 0.0))).y)))), false || (_GLF_IDENTITY(! (_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * exp(vec2(0.0, 0.0))).y)))), ! (_GLF_IDENTITY(! (! (_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * exp(vec2(0.0, 0.0))).y))))), true && (! (! (_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((false), ! (! ((false)))))), (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * exp(vec2(0.0, 0.0))).y))))))))))))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_DEAD(false), true, false))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 _GLF_struct_9 _GLF_struct_replacement_9 = _GLF_struct_9(workgroup_base + subgroup_id * subgroup_size + _GLF_IDENTITY(((_GLF_struct_replacement_0.subgroup_local_id + 1) % subgroup_size), (false ? _GLF_FUZZED(75988u) : ((_GLF_IDENTITY(_GLF_struct_replacement_0.subgroup_local_id, (false ? _GLF_FUZZED(uvec3(42883u, 194352u, 126151u)[1]) : _GLF_struct_replacement_0.subgroup_local_id)) + 1) % subgroup_size))), uvec3(1u), mat4x2(1.0), _GLF_struct_2(_GLF_struct_1(mat4x3(1.0), vec2(1.0), mat4x2(1.0), mat3(1.0))), _GLF_struct_5(_GLF_struct_3(vec2(1.0)), uvec2(_GLF_IDENTITY(1u, _GLF_IDENTITY(uint(uint(1u)), ~ (~ (_GLF_IDENTITY(uint(uint(1u)), (_GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(uint(1u), (uint(1u)) | (_GLF_IDENTITY(_GLF_IDENTITY(uint(1u), (_GLF_IDENTITY(uint(1u), (false ? _GLF_IDENTITY(_GLF_FUZZED(workgroup_id), 0u | (_GLF_FUZZED(workgroup_id))) : uint(1u)))) / 1u), (_GLF_IDENTITY(uint(1u), (_GLF_IDENTITY(uint(1u), (false ? _GLF_FUZZED(workgroup_id) : uint(1u)))) / 1u)) ^ 0u)))), clamp(uint(_GLF_IDENTITY(uint(1u), (uint(1u)) | (_GLF_IDENTITY(uint(1u), (_GLF_IDENTITY(_GLF_IDENTITY(uint(1u), (false ? _GLF_FUZZED(workgroup_size) : _GLF_IDENTITY(uint(1u), (uint(1u)) << 0u))), (_GLF_IDENTITY(false ? _GLF_FUZZED(workgroup_id) : uint(1u), min(_GLF_IDENTITY(false ? _GLF_FUZZED(workgroup_id) : uint(1u), (false ? _GLF_FUZZED(workgroup_id) : uint(1u)) << 0u), false ? _GLF_FUZZED(workgroup_id) : uint(1u)))))) / 1u)))), uint(_GLF_IDENTITY(uint(1u), (uint(1u)) | (_GLF_IDENTITY(uint(1u), (_GLF_IDENTITY(uint(1u), (false ? _GLF_IDENTITY(_GLF_FUZZED(workgroup_id), min(_GLF_FUZZED(workgroup_id), _GLF_FUZZED(workgroup_id))) : uint(1u)))) / 1u)))), uint(_GLF_IDENTITY(_GLF_IDENTITY(uint(1u), ~ (~ (uint(1u)))), (uint(1u)) | (_GLF_IDENTITY(uint(1u), (_GLF_IDENTITY(uint(_GLF_IDENTITY(1u, ~ (_GLF_IDENTITY(~ (1u), 0u ^ (~ (1u)))))), (false ? _GLF_FUZZED(workgroup_id) : uint(1u)))) / 1u)))))), (uint(uint(1u))) - 0u)) >> _GLF_IDENTITY(_GLF_IDENTITY(0u, min(_GLF_IDENTITY(0u, min(0u, 0u)), _GLF_IDENTITY(0u, (0u) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x))))), (_GLF_IDENTITY(0u, min(_GLF_IDENTITY(0u, min(_GLF_IDENTITY(0u, uint(_GLF_ZERO(0.0, injectionSwitch.x)) + (_GLF_IDENTITY(0u, uint(uvec3(_GLF_IDENTITY(0u, uint(_GLF_IDENTITY(uvec4(_GLF_IDENTITY(0u, (0u) | (_GLF_IDENTITY(0u, (0u) | (0u)))), 1u, 1u, 0u), (uvec4(_GLF_IDENTITY(0u, (0u) | (_GLF_IDENTITY(0u, (0u) | (0u)))), 1u, 1u, 0u)) | uvec4(0u, 0u, 0u, 0u)))), 0u, 1u))))), 0u)), _GLF_IDENTITY(_GLF_IDENTITY(0u, (0u >> _GLF_IDENTITY(uint(2u), uint(2u))) | (0u)), _GLF_IDENTITY((_GLF_IDENTITY(0u, _GLF_IDENTITY(uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, float(_GLF_IDENTITY(float(injectionSwitch.x), (float(injectionSwitch.x)) + 0.0))))), 0u ^ (uint(_GLF_ZERO(0.0, injectionSwitch.x)))) + (0u))), clamp((_GLF_IDENTITY(0u, _GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)), 0u ^ (uint(_GLF_ZERO(0.0, injectionSwitch.x)))) + (0u))), (_GLF_IDENTITY(0u, _GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)), 0u ^ (uint(_GLF_ZERO(0.0, injectionSwitch.x)))) + (0u))), (_GLF_IDENTITY(0u, _GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)), 0u ^ (uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(exp(-393.293)))))))) + (0u))))) ^ uint(_GLF_ZERO(_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(vec2(236.190, 9.7).s)), float(0.0), bool(true))), injectionSwitch.x)))))) / 1u))))))), mat4(1.0), _GLF_struct_4(bvec3(true), vec4(1.0)), true, mat3(1.0)), ivec4(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) * 1)) - 0)), _GLF_struct_8(_GLF_IDENTITY(_GLF_IDENTITY(ivec4(1), (_GLF_IDENTITY(ivec4(1), (ivec4(1)) << ivec4(0, 0, 0, 0))) - ivec4(0, _GLF_IDENTITY(0, (true ? 0 : _GLF_FUZZED(-58447))), _GLF_IDENTITY(0, (_GLF_IDENTITY(0 >> _GLF_IDENTITY(_GLF_IDENTITY(int(0), 0 + (int(0))), int(0)), (0 >> _GLF_IDENTITY(_GLF_IDENTITY(int(0), _GLF_IDENTITY(0 + (int(0)), 0 ^ (_GLF_IDENTITY(0 + (int(0)), clamp(0 + (int(0)), 0 + (int(0)), 0 + (int(0))))))), int(0))) - 0)) | (0)), 0)), (_GLF_IDENTITY(ivec4(1), (_GLF_IDENTITY(ivec4(1), (ivec4(1)) << ivec4(0, 0, 0, 0))) - ivec4(0, _GLF_IDENTITY(0, (true ? 0 : _GLF_FUZZED(-58447))), _GLF_IDENTITY(0, (_GLF_IDENTITY(0 >> _GLF_IDENTITY(_GLF_IDENTITY(int(0), 0 + (int(0))), int(0)), (0 >> _GLF_IDENTITY(_GLF_IDENTITY(int(0), _GLF_IDENTITY(0 + (int(0)), 0 ^ (_GLF_IDENTITY(0 + (int(0)), clamp(0 + (int(0)), 0 + (int(0)), 0 + (int(0))))))), int(0))) - 0)) | (0)), 0))) >> ivec4(0, 0, 0, 0)), _GLF_struct_6(uvec3(1u), 1, vec2(_GLF_IDENTITY(_GLF_IDENTITY(1.0, max(1.0, 1.0)), (true ? _GLF_IDENTITY(1.0, max(1.0, 1.0)) : _GLF_FUZZED(-3.9)))), _GLF_IDENTITY(uvec4(_GLF_IDENTITY(1u, ~ (_GLF_IDENTITY(~ (1u), min(~ (1u), ~ (1u)))))), uvec4(0u, 0u, 0u, 0u) ^ (uvec4(_GLF_IDENTITY(1u, ~ (_GLF_IDENTITY(~ (1u), min(~ (1u), ~ (1u)))))))), mat2(_GLF_IDENTITY(1.0, _GLF_IDENTITY(min(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(2711.5256)), float(1.0), bool(true))), 1.0), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(460.666) : min(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(2711.5256)), float(1.0), bool(true))), 1.0))))), 1u), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(mat2(1.0), mat2(1.0) * (mat2(1.0))), mat2(0.0, 0.0, 0.0, 0.0) + (_GLF_IDENTITY(mat2(1.0), mat2(1.0) * (mat2(1.0))))), transpose(transpose(_GLF_IDENTITY(mat2(1.0), _GLF_IDENTITY((mat2(1.0)) - mat2(0.0, 0.0, 0.0, 0.0), mat2(mat4((mat2(1.0)) - mat2(0.0, _GLF_IDENTITY(0.0, _GLF_IDENTITY(float(mat3x2(_GLF_IDENTITY(0.0, float(mat3(0.0, 1.0, 1.0, 0.0, 1.0, 0.0, _GLF_IDENTITY(1.0, (1.0) / round(length(normalize(vec2(1.0, 1.0))))), 1.0, 1.0))), 0.0, 0.0, 0.0, log(1.0), 1.0)), float(float(float(mat3x2(_GLF_IDENTITY(0.0, float(mat3(0.0, 1.0, 1.0, 0.0, 1.0, 0.0, _GLF_IDENTITY(1.0, (1.0) / round(length(normalize(vec2(1.0, 1.0))))), 1.0, 1.0))), 0.0, 0.0, 0.0, log(1.0), 1.0)))))), 0.0, 0.0)))))))), _GLF_IDENTITY(bvec3(true), bvec3(_GLF_IDENTITY(bvec3(bvec3(true)), bvec3(bvec4(bvec3(bvec3(true)), false))))), _GLF_struct_7(ivec4(_GLF_IDENTITY(1, 0 + (_GLF_IDENTITY(1, min(1, _GLF_IDENTITY(1, max(1, _GLF_IDENTITY(1, (1) ^ 0)))))))), ivec2(_GLF_IDENTITY(1, (_GLF_IDENTITY(false ? _GLF_FUZZED(81393) : 1, (false ? _GLF_FUZZED(max(-49839, -50987)) : false ? _GLF_FUZZED(81393) : 1))))), mat4x2(1.0))));
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  barrier();
 atomicStore(buf[_GLF_struct_replacement_9.next_virtual_gid], uint(1), 4, 64, 4);
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec3(_GLF_DEAD(false), false, false)), (bool(bvec3(_GLF_DEAD(false), false, false))) && true)), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec3(_GLF_DEAD(false), false, false)), (bool(bvec3(_GLF_DEAD(false), false, false))) && true)), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec3(_GLF_DEAD(false), false, false)), (bool(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), true, false, false))))), false, false))) && true)))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec3(_GLF_DEAD(false), false, false)), (bool(bvec3(_GLF_DEAD(false), false, false))) && true)), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec3(_GLF_DEAD(false), false, false)), (bool(bvec3(_GLF_DEAD(false), false, false))) && true)), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec3(_GLF_DEAD(false), false, false)), (bool(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), true, false, false))))), false, false))) && true)))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec3(_GLF_DEAD(false), false, false)), (bool(bvec3(_GLF_DEAD(false), false, false))) && true)), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec3(_GLF_DEAD(false), false, false)), (bool(bvec3(_GLF_DEAD(false), false, false))) && true)), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec3(_GLF_DEAD(false), false, false)), (bool(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), true, false, false))))), false, false))) && true)))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > injectionSwitch.y)))), bool(bvec4(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > injectionSwitch.y)))), true, true, true))))), bool(bvec2(bool(! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)), injectionSwitch)).x, injectionSwitch.x)) > injectionSwitch.y)))), false)))), bool(bool(_GLF_IDENTITY(bool(bool(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), true && (bool(bool(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))), (_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(! (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y))))))), bool(bvec2(_GLF_IDENTITY(bool(! (_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > injectionSwitch.y)))), ! (! (bool(! (_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > injectionSwitch.y))))))), false)))), bool(bool(bool(bool(! _GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! ((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))) || false))))))) && true))))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   barrier();
  }
 uint read_1 = atomicLoad(buf[virtual_gid], 4, 64, 0);
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, bool(bvec4(false, false, false, true)))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bool(injectionSwitch.x > injectionSwitch.y)))))))), _GLF_IDENTITY(! (! (_GLF_FALSE(_GLF_IDENTITY(false, (false) || false), (injectionSwitch.x > injectionSwitch.y)))), false || (! (! (_GLF_FALSE(_GLF_IDENTITY(false, (false) || false), (injectionSwitch.x > injectionSwitch.y)))))))))
  barrier();
 atomicStore(buf[_GLF_IDENTITY(_GLF_struct_replacement_9.next_virtual_gid, 0u ^ (_GLF_IDENTITY(_GLF_struct_replacement_9.next_virtual_gid, (_GLF_struct_replacement_9.next_virtual_gid) * 1u)))], uint(_GLF_IDENTITY(read_1, (false ? _GLF_FUZZED(158908u) : read_1)) + 1), 4, 64, 4);
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), bool(bool(bool(bool(false))))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
}
