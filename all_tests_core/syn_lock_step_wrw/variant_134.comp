#version 460
struct _GLF_struct_10 {
 ivec4 _f0;
} ;

struct _GLF_struct_9 {
 vec3 _f0;
 vec2 _f1;
 mat4 _f2;
} ;

struct _GLF_struct_8 {
 mat4 _f0;
 uint _f1;
 mat2x3 _f2;
 bvec4 _f3;
} ;

struct _GLF_struct_11 {
 _GLF_struct_8 _f0;
 uvec2 _f1;
 _GLF_struct_9 _f2;
 _GLF_struct_10 _f3;
} ;

struct _GLF_struct_7 {
 uint workgroup_id;
 mat4 _f0;
} ;

struct _GLF_struct_5 {
 vec2 _f0;
 mat4 _f1;
} ;

struct _GLF_struct_6 {
 _GLF_struct_5 _f0;
} ;

struct _GLF_struct_12 {
 _GLF_struct_6 _f0;
 _GLF_struct_7 _f1;
 _GLF_struct_11 _f2;
 uint _f3;
} ;

struct _GLF_struct_2 {
 mat3x2 _f0;
} ;

struct _GLF_struct_3 {
 mat4x3 _f0;
 bool _f1;
 _GLF_struct_2 _f2;
 vec4 _f3;
 mat4x3 _f4;
 uvec4 _f5;
} ;

struct _GLF_struct_0 {
 uint num_workgroup;
 uvec3 _f0;
 bvec4 _f1;
 bvec2 _f2;
} ;

struct _GLF_struct_1 {
 _GLF_struct_0 _f0;
} ;

struct _GLF_struct_4 {
 uvec3 _f0;
 _GLF_struct_1 _f1;
 _GLF_struct_3 _f2;
} ;

layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 uint subgroup_id = gl_SubgroupID;
 uint subgroup_size = gl_SubgroupSize;
 uint subgroup_local_id = gl_SubgroupInvocationID;
 _GLF_struct_4 _GLF_struct_replacement_4 = _GLF_struct_4(uvec3(1u), _GLF_struct_1(_GLF_struct_0(gl_NumWorkGroups.x, uvec3(1u), bvec4(true), bvec2(true))), _GLF_struct_3(mat4x3(1.0), true, _GLF_struct_2(mat3x2(1.0)), vec4(1.0), mat4x3(1.0), uvec4(1u)));
 uint workgroup_size = gl_WorkGroupSize.x;
 _GLF_struct_12 _GLF_struct_replacement_12 = _GLF_struct_12(_GLF_struct_6(_GLF_struct_5(vec2(1.0), mat4(1.0))), _GLF_struct_7(gl_WorkGroupID.x, mat4(1.0)), _GLF_struct_11(_GLF_struct_8(mat4(1.0), 1u, mat2x3(1.0), bvec4(true)), uvec2(1u), _GLF_struct_9(vec3(1.0), vec2(1.0), mat4(1.0)), _GLF_struct_10(ivec4(1))), 1u);
 uint workgroup_base = workgroup_size * _GLF_struct_replacement_12._f1.workgroup_id;
 uint virtual_gid = workgroup_base + subgroup_id * subgroup_size + subgroup_local_id;
 uint next_virtual_gid = workgroup_base + subgroup_id * subgroup_size + ((subgroup_local_id + 1) % subgroup_size);
 atomicStore(buf[next_virtual_gid], uint(1), 4, 64, 4);
 uint read_1 = atomicLoad(buf[virtual_gid], 4, 64, 0);
 atomicStore(buf[next_virtual_gid], uint(read_1 + 1), 4, 64, 4);
}
