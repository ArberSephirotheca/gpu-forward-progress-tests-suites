#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ! (! (_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ((injectionSwitch.x < injectionSwitch.y)) || false)))))))
    {
     barrier();
    }
   else
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, bool(bool(false)))), (bool(_GLF_IDENTITY(false, bool(bool(false))))) || false)))))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
  }
 uvec2 GLF_merged2_0_1_17_1_1_12subgroup_local_idworkgroup_id;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0), injectionSwitch.y))))))
  {
   do
    {
     if(_GLF_DEAD(false))
      barrier();
    }
   while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
   barrier();
  }
 uvec4 GLF_merged4_0_1_16_1_1_13_2_1_6_3_1_13next_virtual_gidnum_workgroupread_1subgroup_size;
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, true && (false)))))), bool(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), ! (! _GLF_IDENTITY((_GLF_DEAD(false)), ! (! (_GLF_IDENTITY((_GLF_DEAD(false)), false || ((_GLF_DEAD(false))))))))), false, true))))
  {
   if(_GLF_DEAD(false))
    barrier();
   for(int _injected_loop_counter = (1 & 1); _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
    {
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) || false), (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))))))
    {
     for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > _GLF_IDENTITY((0 | 0), _GLF_IDENTITY(clamp(_GLF_IDENTITY((_GLF_IDENTITY(0 | 0, (true ? _GLF_IDENTITY(0 | 0, clamp(_GLF_IDENTITY(0 | 0, (0 | _GLF_IDENTITY(0, (0) / 1)) / 1), _GLF_IDENTITY(0 | 0, (0 | 0) | (0 | 0)), 0 | 0)) : _GLF_FUZZED((+ _injected_loop_counter))))), _GLF_IDENTITY(((0 | 0)) - 0, (((0 | 0)) - 0) >> _GLF_IDENTITY(0, (false ? _GLF_FUZZED((_injected_loop_counter ++)) : _GLF_IDENTITY(0, (0) / 1))))), (0 | 0), _GLF_IDENTITY((0 | 0), ((_GLF_IDENTITY(0, (0) ^ 0) | 0)) - 0)), (clamp(_GLF_IDENTITY((_GLF_IDENTITY(0 | 0, (true ? _GLF_IDENTITY(0 | 0, clamp(_GLF_IDENTITY(0 | 0, (0 | _GLF_IDENTITY(0, (0) / 1)) / 1), _GLF_IDENTITY(0 | 0, (0 | 0) | (0 | 0)), 0 | 0)) : _GLF_FUZZED((+ _injected_loop_counter))))), _GLF_IDENTITY(((0 | 0)) - 0, (((0 | 0)) - 0) >> _GLF_IDENTITY(0, (false ? _GLF_FUZZED((_injected_loop_counter ++)) : _GLF_IDENTITY(0, (0) / 1))))), (0 | 0), _GLF_IDENTITY((0 | _GLF_IDENTITY(0, clamp(0, 0, _GLF_IDENTITY(0, int(_GLF_IDENTITY(ivec2(_GLF_IDENTITY(0, max(0, 0)), 1), ivec2(1, 1) * (ivec2(_GLF_IDENTITY(0, max(0, 0)), 1)))))))), ((_GLF_IDENTITY(0, (0) ^ 0) | 0)) - 0))) + 0))); _GLF_IDENTITY(_injected_loop_counter --, ~ (~ (_injected_loop_counter --))))
      {
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
    }
   else
    {
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
      }
     else
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_WRAPPED_IF_FALSE(false))
        {
        }
       else
        {
         barrier();
        }
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
  }
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY((injectionSwitch.y) - determinant(mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, abs(1.0), 1.0, 0.0)), clamp(_GLF_IDENTITY((injectionSwitch.y) - determinant(mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, abs(1.0), 1.0, 0.0)), ((injectionSwitch.y) - determinant(mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, abs(1.0), 1.0, 0.0))) * 1.0), _GLF_IDENTITY((injectionSwitch.y) - determinant(mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, abs(1.0), 1.0, 0.0)), ((injectionSwitch.y) - determinant(mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, abs(1.0), 1.0, 0.0))) - 0.0), (injectionSwitch.y) - determinant(mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, abs(1.0), 1.0, 0.0)))))))), bool(bvec2(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], (_GLF_IDENTITY(injectionSwitch[0], clamp(injectionSwitch[0], injectionSwitch[0], injectionSwitch[0]))) / 1.0), injectionSwitch[1])).x < injectionSwitch.y))), ! (! (_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), true))))
  {
   GLF_merged4_0_1_16_1_1_13_2_1_6_3_1_13next_virtual_gidnum_workgroupread_1subgroup_size.w = subgroup_size;
  }
 else
  {
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)), max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)), _GLF_IDENTITY(vec2(vec2(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)))), vec2(mat2x3(vec2(vec2(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)))), 1.0, 1.0, 1.0, 1.0)))), _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)))).x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(clamp(vec2(2.9, 1.6), _GLF_IDENTITY((vec3(-1.7, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(4281.9594, float(mat4x3(4281.9594, 0.0, 1.0, 0.0, 0.0, cos(abs(0.0)), 0.0, 1.0, 0.0, 0.0, 1.0, 1.0))), min(_GLF_IDENTITY(4281.9594, float(mat4x3(4281.9594, 0.0, 1.0, 0.0, 0.0, cos(abs(0.0)), 0.0, 1.0, 0.0, 0.0, 1.0, 1.0))), _GLF_IDENTITY(4281.9594, float(mat4x3(4281.9594, 0.0, 1.0, 0.0, 0.0, cos(abs(0.0)), 0.0, 1.0, 0.0, 0.0, 1.0, 1.0))))), (_GLF_IDENTITY(4281.9594, float(mat4x3(4281.9594, 0.0, 1.0, 0.0, 0.0, cos(abs(0.0)), 0.0, 1.0, 0.0, 0.0, 1.0, 1.0)))) - 0.0), -8.4) , vec2(-45.53, 1753.9435)), vec2(_GLF_IDENTITY(mat4x3(_GLF_IDENTITY((vec3(-1.7, _GLF_IDENTITY(_GLF_IDENTITY(4281.9594, float(mat4x3(4281.9594, 0.0, 1.0, 0.0, 0.0, cos(abs(0.0)), 0.0, 1.0, 0.0, 0.0, 1.0, 1.0))), (_GLF_IDENTITY(4281.9594, float(mat4x3(4281.9594, 0.0, 1.0, 0.0, 0.0, cos(abs(0.0)), _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(9.6)), bool(false))), 1.0, 0.0, 0.0, 1.0, 1.0)))) - 0.0), -8.4) , vec2(-45.53, 1753.9435)), ((vec3(-1.7, _GLF_IDENTITY(_GLF_IDENTITY(4281.9594, _GLF_IDENTITY(float(mat4x3(4281.9594, 0.0, 1.0, 0.0, 0.0, cos(abs(0.0)), _GLF_IDENTITY(0.0, (0.0) / 1.0), 1.0, 0.0, 0.0, 1.0, 1.0)), (_GLF_IDENTITY(float(mat4x3(4281.9594, 0.0, 1.0, 0.0, 0.0, cos(abs(0.0)), _GLF_IDENTITY(0.0, (0.0) / 1.0), 1.0, 0.0, 0.0, 1.0, 1.0)), clamp(float(mat4x3(4281.9594, 0.0, 1.0, 0.0, 0.0, cos(abs(0.0)), _GLF_IDENTITY(0.0, (0.0) / 1.0), 1.0, 0.0, 0.0, 1.0, 1.0)), float(mat4x3(4281.9594, 0.0, 1.0, 0.0, 0.0, cos(abs(0.0)), _GLF_IDENTITY(0.0, (0.0) / 1.0), 1.0, 0.0, 0.0, 1.0, 1.0)), _GLF_IDENTITY(float(mat4x3(4281.9594, 0.0, 1.0, 0.0, 0.0, cos(abs(0.0)), _GLF_IDENTITY(0.0, (0.0) / 1.0), 1.0, 0.0, 0.0, 1.0, 1.0)), float(vec3(float(mat4x3(4281.9594, 0.0, 1.0, 0.0, 0.0, cos(abs(0.0)), _GLF_IDENTITY(0.0, (0.0) / 1.0), 1.0, 0.0, 0.0, 1.0, 1.0)), 1.0, 0.0)))))) / exp(_GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(0.0, 1.0)), dot(vec2(1.0, 0.0), vec2(0.0, 1.0)))))), (_GLF_IDENTITY(4281.9594, float(mat4x3(4281.9594, 0.0, 1.0, 0.0, 0.0, cos(abs(0.0)), 0.0, 1.0, 0.0, 0.0, 1.0, 1.0)))) - 0.0), -8.4) , vec2(-45.53, 1753.9435))) / vec2(1.0, 1.0)), _GLF_ONE(1.0, injectionSwitch.y), 0.0, _GLF_ONE(1.0, injectionSwitch.y), _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(3.2)), float(_GLF_IDENTITY(1.0, min(1.0, 1.0))), bool(true))), 0.0, 1.0, abs(0.0), abs(0.0), 1.0, 1.0), mat4x3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0) + (_GLF_IDENTITY(mat4x3(_GLF_IDENTITY((vec3(-1.7, _GLF_IDENTITY(_GLF_IDENTITY(4281.9594, float(mat4x3(4281.9594, 0.0, 1.0, 0.0, 0.0, cos(abs(0.0)), 0.0, 1.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(22.47)), bool(false)))))), (_GLF_IDENTITY(4281.9594, float(mat4x3(4281.9594, 0.0, 1.0, 0.0, 0.0, cos(abs(_GLF_IDENTITY(0.0, max(0.0, 0.0)))), 0.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), 1.0)))) - 0.0), -8.4) , vec2(-45.53, 1753.9435)), ((vec3(-1.7, _GLF_IDENTITY(_GLF_IDENTITY(4281.9594, _GLF_IDENTITY(float(mat4x3(4281.9594, 0.0, 1.0, 0.0, 0.0, cos(abs(0.0)), 0.0, 1.0, 0.0, 0.0, 1.0, 1.0)), 0.0 + (float(mat4x3(4281.9594, 0.0, 1.0, 0.0, 0.0, cos(abs(0.0)), 0.0, 1.0, 0.0, 0.0, 1.0, 1.0))))), (_GLF_IDENTITY(4281.9594, float(mat4x3(4281.9594, 0.0, 1.0, 0.0, 0.0, cos(abs(0.0)), 0.0, 1.0, 0.0, 0.0, 1.0, 1.0)))) - 0.0), -8.4) , vec2(-45.53, 1753.9435))) / vec2(1.0, 1.0)), _GLF_ONE(1.0, injectionSwitch.y), 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0, 1.0, abs(0.0), abs(0.0), 1.0, 1.0), (mat4x3(_GLF_IDENTITY((vec3(-1.7, _GLF_IDENTITY(_GLF_IDENTITY(4281.9594, float(mat4x3(4281.9594, 0.0, 1.0, 0.0, 0.0, cos(abs(0.0)), 0.0, 1.0, 0.0, 0.0, 1.0, 1.0))), (_GLF_IDENTITY(4281.9594, float(mat4x3(4281.9594, 0.0, 1.0, 0.0, 0.0, cos(abs(0.0)), 0.0, 1.0, 0.0, 0.0, 1.0, 1.0)))) - 0.0), -8.4) , vec2(-45.53, 1753.9435)), ((vec3(-1.7, _GLF_IDENTITY(_GLF_IDENTITY(4281.9594, float(mat4x3(4281.9594, 0.0, 1.0, 0.0, 0.0, cos(abs(0.0)), 0.0, 1.0, 0.0, 0.0, 1.0, 1.0))), (_GLF_IDENTITY(4281.9594, float(mat4x3(4281.9594, 0.0, 1.0, 0.0, 0.0, cos(abs(0.0)), 0.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED((-3831.3109 * 1.2))), bool(false))), _GLF_IDENTITY(1.0, (1.0) + 0.0))))) - 0.0), -8.4) , vec2(-45.53, 1753.9435))) / vec2(1.0, 1.0)), _GLF_ONE(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), injectionSwitch.y), 0.0, _GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_ONE(1.0, injectionSwitch.y) : _GLF_FUZZED(-9319.1493))), 1.0, 0.0, 1.0, abs(0.0), abs(0.0), 1.0, 1.0)) * mat4(1.0)))))), vec2(-6.1, 6.4))))).y))) || false)))
  barrier();
 if(_GLF_WRAPPED_IF_FALSE(false))
  {
  }
 else
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)).x < injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
      }
     else
      {
      }
     barrier();
    }
  }
 for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != int(_GLF_ZERO(0.0, injectionSwitch.x))); _injected_loop_counter --)
  {
   if(_GLF_DEAD(false))
    barrier();
   do
    {
     if(_GLF_DEAD(false))
      {
       for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
        {
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
       barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
    }
   while(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_GLF_FALSE(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! (false)))))), (injectionSwitch.x > injectionSwitch.y))), true && (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), false || (_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false)), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(1.9), _GLF_FUZZED(-2218.7483)), vec2((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)))[0], (injectionSwitch)[1]), bvec2(true, true))), injectionSwitch)).y)), ! (! (_GLF_FALSE(false, _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(bool(bvec2((injectionSwitch.x > injectionSwitch.y), false)), bool(bvec2(bool(bvec2((injectionSwitch.x > injectionSwitch.y), false)), true)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(bool(bvec2((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, sin(vec2(0.0, 0.0)) + (injectionSwitch)))).y), false)), bool(bvec2(bool(_GLF_IDENTITY(bvec2((injectionSwitch.x > injectionSwitch.y), false), _GLF_IDENTITY(bvec2(bvec3(bvec2((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(false, (false) || false)), true)), bvec2(bvec3(bvec2(bvec3(bvec2((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(false, (false) || false)), true)), false))))), true)))))))))))))) && true))), ! (! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(bool(bvec2((injectionSwitch.x > injectionSwitch.y), false)), bool(bvec2(bool(bvec2((injectionSwitch.x > injectionSwitch.y), false)), true))))))))))), bool(bool(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(bool(bvec2((injectionSwitch.x > injectionSwitch.y), false)), bool(bvec2(bool(bvec2((injectionSwitch.x > injectionSwitch.y), false)), true))))))))))))))) && true))), true && (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_GLF_FALSE(_GLF_IDENTITY(false, (false) || false), (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x > injectionSwitch.y))), (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_GLF_FALSE(_GLF_IDENTITY(false, false || (false)), (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(! (! (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(bool(bvec2((injectionSwitch.x > injectionSwitch.y), false)), bool(_GLF_IDENTITY(bvec2(bool(bvec2((injectionSwitch.x > injectionSwitch.y), false)), true), bvec2(_GLF_IDENTITY(bvec3(bvec2(bool(bvec2((injectionSwitch.x > injectionSwitch.y), false)), true), true), bvec3(bvec3(bvec3(bvec2(bool(bvec2((injectionSwitch.x > injectionSwitch.y), false)), true), true)))))))))))), ! (! (! (! (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(bool(bvec2((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))), false)), bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(bool(bvec2((injectionSwitch.x > injectionSwitch.y), false)), true), bvec2(bvec4(bvec2(bool(bvec2((injectionSwitch.x > injectionSwitch.y), false)), true), false, false))), bvec2(_GLF_IDENTITY(bvec3(bvec2(bool(bvec2((injectionSwitch.x > injectionSwitch.y), false)), true), true), bvec3(bvec3(bvec3(bvec2(_GLF_IDENTITY(bool(bvec2((injectionSwitch.x > injectionSwitch.y), false)), (_GLF_IDENTITY(bool(bvec2((injectionSwitch.x > injectionSwitch.y), false)), bool(bvec4(bool(bvec2((injectionSwitch.x > injectionSwitch.y), false)), false, false, false)))) || false), true), true)))))))))))))))))))) && true)))))), true && ((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(bool(bvec2((injectionSwitch.x > injectionSwitch.y), false)), bool(bvec2(bool(bvec2((injectionSwitch.x > injectionSwitch.y), false)), true))))))))))), bool(bool(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(bool(bvec2((injectionSwitch.x > injectionSwitch.y), false)), bool(bvec2(bool(bvec2((injectionSwitch.x > injectionSwitch.y), false)), true))))))))))))))) && true))), true && (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_GLF_FALSE(_GLF_IDENTITY(false, (false) || false), (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x > injectionSwitch.y))), (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_GLF_FALSE(_GLF_IDENTITY(false, false || (false)), (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(! (! (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(bool(bvec2((injectionSwitch.x > injectionSwitch.y), false)), bool(_GLF_IDENTITY(bvec2(bool(bvec2((injectionSwitch.x > injectionSwitch.y), false)), true), bvec2(_GLF_IDENTITY(bvec3(bvec2(bool(bvec2((injectionSwitch.x > injectionSwitch.y), false)), true), true), bvec3(bvec3(bvec3(bvec2(bool(bvec2((injectionSwitch.x > injectionSwitch.y), false)), true), true)))))))))))), ! (! (! (! (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(bool(bvec2((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))), false)), bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(bool(bvec2((injectionSwitch.x > injectionSwitch.y), false)), true), bvec2(bvec4(bvec2(bool(bvec2((injectionSwitch.x > injectionSwitch.y), false)), true), false, false))), bvec2(_GLF_IDENTITY(bvec3(bvec2(bool(bvec2((injectionSwitch.x > injectionSwitch.y), false)), true), true), bvec3(bvec3(bvec3(bvec2(_GLF_IDENTITY(bool(bvec2((injectionSwitch.x > injectionSwitch.y), false)), (_GLF_IDENTITY(bool(bvec2((injectionSwitch.x > injectionSwitch.y), false)), bool(bvec4(bool(bvec2((injectionSwitch.x > injectionSwitch.y), false)), false, false, false)))) || false), true), true)))))))))))))))))))) && true)))))))))));
  }
 uint subgroup_local_id = gl_SubgroupInvocationID;
 do
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
  }
 while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
 if(_GLF_WRAPPED_IF_TRUE(true))
  {
   if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), true && (! (! (false)))))))
    {
    }
   else
    {
     GLF_merged2_0_1_17_1_1_12subgroup_local_idworkgroup_id.x = subgroup_local_id;
    }
  }
 else
  {
  }
 do
  {
   if(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), ! (_GLF_IDENTITY(! (_GLF_WRAPPED_IF_FALSE(false)), bool(bvec2(! (_GLF_WRAPPED_IF_FALSE(false)), _GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, ! (! (false)))))))))))
    {
    }
   else
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
      barrier();
    }
  }
 while(_GLF_WRAPPED_LOOP(false));
 for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, false)))))
    {
     if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (true))))
      {
       if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          barrier();
        }
       else
        {
         for(int _injected_loop_counter = (1 ^ 0); _GLF_WRAPPED_LOOP(_injected_loop_counter > (16022 & 0)); _injected_loop_counter --)
          {
           barrier();
          }
        }
       if(_GLF_DEAD(false))
        barrier();
      }
     else
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
    }
  }
 uint num_workgroup = gl_NumWorkGroups.x;
 _GLF_IDENTITY(GLF_merged4_0_1_16_1_1_13_2_1_6_3_1_13next_virtual_gidnum_workgroupread_1subgroup_size.y = num_workgroup, (_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_13_2_1_6_3_1_13next_virtual_gidnum_workgroupread_1subgroup_size.y = num_workgroup, (_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_13_2_1_6_3_1_13next_virtual_gidnum_workgroupread_1subgroup_size.y = num_workgroup, (GLF_merged4_0_1_16_1_1_13_2_1_6_3_1_13next_virtual_gidnum_workgroupread_1subgroup_size.y = num_workgroup) << (121397u & 0u))) ^ 0u)) << 0u);
 uint workgroup_size = gl_WorkGroupSize.x;
 uint workgroup_id = _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) | (_GLF_IDENTITY(gl_WorkGroupID, uvec3(0u, 0u, 0u) + (gl_WorkGroupID)))), uvec3(uvec3(_GLF_IDENTITY(gl_WorkGroupID, clamp(gl_WorkGroupID, gl_WorkGroupID, gl_WorkGroupID))))).x;
 if(_GLF_DEAD(false))
  {
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < (((1 ^ 0) << _GLF_IDENTITY(int(0), int(0))) >> _GLF_IDENTITY(int(0), _GLF_IDENTITY(_GLF_IDENTITY(int(0), min(_GLF_IDENTITY(int(0), clamp(int(0), int(0), int(0))), int(0))), 0 | (int(0)))))); _injected_loop_counter ++)
      {
       barrier();
      }
    }
   else
    {
    }
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y), ((_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 GLF_merged2_0_1_17_1_1_12subgroup_local_idworkgroup_id.y = workgroup_id;
 for(int _injected_loop_counter = (1 | 1); _GLF_WRAPPED_LOOP(_injected_loop_counter > (int(_GLF_ZERO(0.0, injectionSwitch.x)) >> _GLF_IDENTITY(int(2), int(2)))); _injected_loop_counter --)
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 uint workgroup_base = workgroup_size * GLF_merged2_0_1_17_1_1_12subgroup_local_idworkgroup_id.y;
 do
  {
   if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, vec2(mat3x4(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat2x4(injectionSwitch, 1.0, cos(0.0), 0.0, 1.0, 1.0, 0.0), mat2x4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0) + (mat2x4(injectionSwitch, 1.0, cos(0.0), 0.0, 1.0, 1.0, 0.0))))), 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0))).y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
      }
     else
      {
       if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))
        {
         for(int _injected_loop_counter = int(_GLF_ZERO(0.0, injectionSwitch.x)); _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter, (_injected_loop_counter) - (0 | 0)) < (1 ^ int(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-556.589)), float(injectionSwitch.x), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))); _injected_loop_counter ++)
          {
           do
            {
             for(int _injected_loop_counter = int(_GLF_ONE(1.0, injectionSwitch.y)); _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
              {
               barrier();
              }
             if(_GLF_DEAD(false))
              barrier();
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              barrier();
            }
           while(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / _GLF_IDENTITY(vec2(1.0, 1.0), vec2(0.0, 0.0) + (vec2(1.0, 1.0)))).x > injectionSwitch.y))), ! (! (_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / _GLF_IDENTITY(vec2(1.0, 1.0), vec2(0.0, 0.0) + (vec2(1.0, 1.0)))).x > injectionSwitch.y)))))));
          }
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
        }
      }
     if(_GLF_DEAD(false))
      barrier();
    }
   else
    {
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
    {
     if(_GLF_DEAD(false))
      barrier();
    }
  }
 while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
 uint virtual_gid = workgroup_base + subgroup_id * GLF_merged4_0_1_16_1_1_13_2_1_6_3_1_13next_virtual_gidnum_workgroupread_1subgroup_size.w + GLF_merged2_0_1_17_1_1_12subgroup_local_idworkgroup_id.x;
 if(_GLF_WRAPPED_IF_FALSE(false))
  {
   if(_GLF_DEAD(false))
    barrier();
  }
 else
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     do
      {
       barrier();
      }
     while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-4.2)), bool(false))) > injectionSwitch.y))));
    }
  }
 if(_GLF_DEAD(false))
  barrier();
 uint next_virtual_gid = workgroup_base + subgroup_id * GLF_merged4_0_1_16_1_1_13_2_1_6_3_1_13next_virtual_gidnum_workgroupread_1subgroup_size.w + _GLF_IDENTITY(((GLF_merged2_0_1_17_1_1_12subgroup_local_idworkgroup_id.x + 1) % _GLF_IDENTITY(GLF_merged4_0_1_16_1_1_13_2_1_6_3_1_13next_virtual_gidnum_workgroupread_1subgroup_size.w, _GLF_IDENTITY(clamp(GLF_merged4_0_1_16_1_1_13_2_1_6_3_1_13next_virtual_gidnum_workgroupread_1subgroup_size.w, GLF_merged4_0_1_16_1_1_13_2_1_6_3_1_13next_virtual_gidnum_workgroupread_1subgroup_size.w, GLF_merged4_0_1_16_1_1_13_2_1_6_3_1_13next_virtual_gidnum_workgroupread_1subgroup_size.w), _GLF_IDENTITY(uint(uvec2(clamp(GLF_merged4_0_1_16_1_1_13_2_1_6_3_1_13next_virtual_gidnum_workgroupread_1subgroup_size.w, GLF_merged4_0_1_16_1_1_13_2_1_6_3_1_13next_virtual_gidnum_workgroupread_1subgroup_size.w, GLF_merged4_0_1_16_1_1_13_2_1_6_3_1_13next_virtual_gidnum_workgroupread_1subgroup_size.w), 1u)), 1u * (_GLF_IDENTITY(uint(uvec2(clamp(GLF_merged4_0_1_16_1_1_13_2_1_6_3_1_13next_virtual_gidnum_workgroupread_1subgroup_size.w, GLF_merged4_0_1_16_1_1_13_2_1_6_3_1_13next_virtual_gidnum_workgroupread_1subgroup_size.w, GLF_merged4_0_1_16_1_1_13_2_1_6_3_1_13next_virtual_gidnum_workgroupread_1subgroup_size.w), _GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, clamp(1u, 1u, 1u))) - ((_GLF_IDENTITY(0u, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(workgroup_base) : _GLF_IDENTITY(0u, max(0u, 0u)))) >> _GLF_IDENTITY(uint(4u), uint(4u))) << _GLF_IDENTITY(uint(7u), uint(7u)))))), (uint(uvec2(clamp(GLF_merged4_0_1_16_1_1_13_2_1_6_3_1_13next_virtual_gidnum_workgroupread_1subgroup_size.w, _GLF_IDENTITY(GLF_merged4_0_1_16_1_1_13_2_1_6_3_1_13next_virtual_gidnum_workgroupread_1subgroup_size.w, (GLF_merged4_0_1_16_1_1_13_2_1_6_3_1_13next_virtual_gidnum_workgroupread_1subgroup_size.w) | (GLF_merged4_0_1_16_1_1_13_2_1_6_3_1_13next_virtual_gidnum_workgroupread_1subgroup_size.w)), GLF_merged4_0_1_16_1_1_13_2_1_6_3_1_13next_virtual_gidnum_workgroupread_1subgroup_size.w), 1u))) >> 0u)))))), _GLF_IDENTITY(min((_GLF_IDENTITY((GLF_merged2_0_1_17_1_1_12subgroup_local_idworkgroup_id.x + 1), 1u * (_GLF_IDENTITY((GLF_merged2_0_1_17_1_1_12subgroup_local_idworkgroup_id.x + 1), ~ (_GLF_IDENTITY(~ ((GLF_merged2_0_1_17_1_1_12subgroup_local_idworkgroup_id.x + 1)), (~ ((GLF_merged2_0_1_17_1_1_12subgroup_local_idworkgroup_id.x + 1))) - 0u))))) % GLF_merged4_0_1_16_1_1_13_2_1_6_3_1_13next_virtual_gidnum_workgroupread_1subgroup_size.w), ((_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged2_0_1_17_1_1_12subgroup_local_idworkgroup_id.x + 1, min(GLF_merged2_0_1_17_1_1_12subgroup_local_idworkgroup_id.x + 1, GLF_merged2_0_1_17_1_1_12subgroup_local_idworkgroup_id.x + 1)), uint(uvec4(_GLF_IDENTITY(GLF_merged2_0_1_17_1_1_12subgroup_local_idworkgroup_id.x + 1, min(GLF_merged2_0_1_17_1_1_12subgroup_local_idworkgroup_id.x + 1, GLF_merged2_0_1_17_1_1_12subgroup_local_idworkgroup_id.x + 1)), (0u & 116329u), 1u, 1u)))) % GLF_merged4_0_1_16_1_1_13_2_1_6_3_1_13next_virtual_gidnum_workgroupread_1subgroup_size.w)), min(min((_GLF_IDENTITY((GLF_merged2_0_1_17_1_1_12subgroup_local_idworkgroup_id.x + 1), 1u * (_GLF_IDENTITY((GLF_merged2_0_1_17_1_1_12subgroup_local_idworkgroup_id.x + 1), ~ (_GLF_IDENTITY(~ ((GLF_merged2_0_1_17_1_1_12subgroup_local_idworkgroup_id.x + 1)), (~ ((GLF_merged2_0_1_17_1_1_12subgroup_local_idworkgroup_id.x + 1))) - 0u))))) % GLF_merged4_0_1_16_1_1_13_2_1_6_3_1_13next_virtual_gidnum_workgroupread_1subgroup_size.w), ((_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged2_0_1_17_1_1_12subgroup_local_idworkgroup_id.x + 1, min(GLF_merged2_0_1_17_1_1_12subgroup_local_idworkgroup_id.x + 1, GLF_merged2_0_1_17_1_1_12subgroup_local_idworkgroup_id.x + 1)), uint(uvec4(_GLF_IDENTITY(GLF_merged2_0_1_17_1_1_12subgroup_local_idworkgroup_id.x + 1, min(GLF_merged2_0_1_17_1_1_12subgroup_local_idworkgroup_id.x + 1, GLF_merged2_0_1_17_1_1_12subgroup_local_idworkgroup_id.x + 1)), (0u & 116329u), 1u, 1u)))) % GLF_merged4_0_1_16_1_1_13_2_1_6_3_1_13next_virtual_gidnum_workgroupread_1subgroup_size.w)), min((_GLF_IDENTITY((GLF_merged2_0_1_17_1_1_12subgroup_local_idworkgroup_id.x + 1), 1u * (_GLF_IDENTITY((GLF_merged2_0_1_17_1_1_12subgroup_local_idworkgroup_id.x + 1), ~ (_GLF_IDENTITY(~ ((GLF_merged2_0_1_17_1_1_12subgroup_local_idworkgroup_id.x + 1)), (~ ((GLF_merged2_0_1_17_1_1_12subgroup_local_idworkgroup_id.x + 1))) - 0u))))) % GLF_merged4_0_1_16_1_1_13_2_1_6_3_1_13next_virtual_gidnum_workgroupread_1subgroup_size.w), ((_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged2_0_1_17_1_1_12subgroup_local_idworkgroup_id.x + 1, min(GLF_merged2_0_1_17_1_1_12subgroup_local_idworkgroup_id.x + 1, GLF_merged2_0_1_17_1_1_12subgroup_local_idworkgroup_id.x + 1)), uint(uvec4(_GLF_IDENTITY(GLF_merged2_0_1_17_1_1_12subgroup_local_idworkgroup_id.x + 1, min(GLF_merged2_0_1_17_1_1_12subgroup_local_idworkgroup_id.x + 1, GLF_merged2_0_1_17_1_1_12subgroup_local_idworkgroup_id.x + 1)), (0u & 116329u), 1u, 1u)))) % GLF_merged4_0_1_16_1_1_13_2_1_6_3_1_13next_virtual_gidnum_workgroupread_1subgroup_size.w)))));
 GLF_merged4_0_1_16_1_1_13_2_1_6_3_1_13next_virtual_gidnum_workgroupread_1subgroup_size.x = _GLF_IDENTITY(_GLF_IDENTITY(next_virtual_gid, (1u ^ 1u) ^ (next_virtual_gid)), uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(min(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)), injectionSwitch), clamp(min(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch), vec2(mat3x4((injectionSwitch), 0.0, 1.0, exp(0.0), 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0))) + vec2(0.0, 0.0)), injectionSwitch), _GLF_IDENTITY(min(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)), injectionSwitch), (true ? min(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, _GLF_IDENTITY(0.0, float(_GLF_IDENTITY(mat2(0.0, sqrt(1.0), 1.0, 0.0), transpose(transpose(_GLF_IDENTITY(mat2(0.0, sqrt(1.0), 1.0, 0.0), (false ? _GLF_FUZZED(mat2(751.100, -0.8, 9.8, -8806.1931)) : mat2(0.0, sqrt(1.0), 1.0, 0.0)))))))))), injectionSwitch) : _GLF_FUZZED(injectionSwitch))), min(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)), injectionSwitch)))).x)) ^ (next_virtual_gid));
 if(_GLF_WRAPPED_IF_FALSE(false))
  {
  }
 else
  {
   if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(_GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, (_GLF_IDENTITY(true, bool(bvec3(true, false, false)))) && true))), ! (_GLF_IDENTITY(! (true), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (! (true)))))))
    {
     if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
      }
     else
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(vec2(injectionSwitch), (vec2(injectionSwitch)) / vec2(1.0, 1.0))))))).y, clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_IDENTITY(_GLF_FUZZED(injectionSwitch), vec2(_GLF_IDENTITY(vec4(_GLF_FUZZED(injectionSwitch), 0.0, 0.0), min(vec4(_GLF_FUZZED(injectionSwitch), 0.0, 0.0), vec4(_GLF_FUZZED(injectionSwitch), 0.0, 0.0))))))).y, mix(float(_GLF_IDENTITY(_GLF_FUZZED((-4.1)), _GLF_IDENTITY(_GLF_IDENTITY((_GLF_FUZZED((-4.1))) - 0.0, max(_GLF_IDENTITY((_GLF_FUZZED((-4.1))) - 0.0, (true ? (_GLF_FUZZED((-4.1))) - 0.0 : _GLF_FUZZED(6882.5160))), (_GLF_FUZZED((-4.1))) - 0.0)), mix(float(_GLF_IDENTITY((_GLF_FUZZED((-4.1))) - 0.0, max(_GLF_IDENTITY((_GLF_FUZZED((-4.1))) - 0.0, (true ? (_GLF_FUZZED((-4.1))) - 0.0 : _GLF_FUZZED(6882.5160))), (_GLF_FUZZED((-4.1))) - 0.0))), float(_GLF_FUZZED(4578.2334)), bool(false))))), float(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((true ? _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)) : _GLF_FUZZED(injectionSwitch)), log(vec2(1.0, 1.0)) + ((true ? _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)) : _GLF_FUZZED(injectionSwitch))))).y), bool(true))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))).y, max(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))).y, _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))).y)), _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))).y)), _GLF_IDENTITY(max(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))), clamp(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))), _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))), _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))))).y, clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))).y, mix(float(_GLF_FUZZED(_GLF_IDENTITY((-4.1), mix(float(_GLF_IDENTITY((-4.1), mix(float(_GLF_FUZZED(4008.7809)), float((-4.1)), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), float(_GLF_FUZZED((true ? -81.82 : -0.3))), bool(false))))), float(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))).y), bool(true))), _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(true ? injectionSwitch : _GLF_FUZZED(injectionSwitch), min(true ? injectionSwitch : _GLF_FUZZED(injectionSwitch), true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))))).y, _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))).y)), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))).y, clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((true ? injectionSwitch : _GLF_FUZZED(injectionSwitch)), ((true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))) * _GLF_IDENTITY(mat2(1.0), (mat2(1.0)) * mat2(1.0)))).y, mix(float(_GLF_FUZZED((-4.1))), _GLF_IDENTITY(float(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_IDENTITY(_GLF_FUZZED(injectionSwitch), mix(vec2(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_FUZZED(injectionSwitch), (_GLF_FUZZED(injectionSwitch)) * exp(vec2(0.0, 0.0))))[0], min(_GLF_IDENTITY((_GLF_FUZZED(injectionSwitch))[0], mix(float(_GLF_FUZZED((2.8 / 124.587))), float((_GLF_FUZZED(injectionSwitch))[0]), bool(true))), (_GLF_FUZZED(injectionSwitch))[0])), (_GLF_FUZZED(injectionSwitch))[1]), vec2(_GLF_FUZZED(0.5), _GLF_FUZZED(-3.8)), bvec2(false, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).x > injectionSwitch.y))))))).y), mix(float(float(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_IDENTITY(_GLF_FUZZED(injectionSwitch), mix(vec2(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_FUZZED(injectionSwitch), (_GLF_FUZZED(injectionSwitch)) * exp(vec2(0.0, 0.0))))[0], min(_GLF_IDENTITY((_GLF_FUZZED(injectionSwitch))[0], mix(float(_GLF_FUZZED((2.8 / 124.587))), float((_GLF_FUZZED(injectionSwitch))[0]), bool(true))), (_GLF_FUZZED(injectionSwitch))[0])), (_GLF_FUZZED(injectionSwitch))[1]), vec2(_GLF_FUZZED(0.5), _GLF_FUZZED(-3.8)), bvec2(false, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).x > injectionSwitch.y))))))).y)), float(_GLF_FUZZED(-3.5)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), bool(true))), _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))).y, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))).y, (_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))).y) - 0.0))), min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))).y, clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))).y, mix(float(_GLF_FUZZED((-4.1))), float(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))).y), bool(true))), _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((true ? injectionSwitch : _GLF_FUZZED(injectionSwitch)), max((true ? injectionSwitch : _GLF_FUZZED(injectionSwitch)), (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))))).y, _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))).y)), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))).y, clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(true, true && (true)) ? injectionSwitch : _GLF_FUZZED(injectionSwitch))).y, mix(float(_GLF_FUZZED((-4.1))), float(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))).y), bool(true))), _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))).y, _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))).y))))), (false ? _GLF_FUZZED(step(5.7, 3238.1193)) : max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_IDENTITY(_GLF_FUZZED(injectionSwitch), (_GLF_FUZZED(injectionSwitch)) - vec2(0.0, 0.0)))).y, clamp(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))).y, (_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))).y) * 1.0), mix(float(_GLF_FUZZED((-4.1))), _GLF_IDENTITY(float(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((true ? injectionSwitch : _GLF_FUZZED(injectionSwitch)), ((true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))) * vec2(1.0, 1.0))).y), min(float(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((true ? injectionSwitch : _GLF_FUZZED(injectionSwitch)), ((true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))) * vec2(1.0, 1.0))).y), float(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((true ? injectionSwitch : _GLF_FUZZED(injectionSwitch)), ((true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))) * vec2(1.0, 1.0))).y))), bool(true))), _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))).y, _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(true ? injectionSwitch : _GLF_FUZZED(injectionSwitch), _GLF_IDENTITY(mix(vec2(_GLF_FUZZED(-8.3), _GLF_FUZZED(_GLF_IDENTITY(-697.746, min(-697.746, -697.746)))), vec2(_GLF_IDENTITY((true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))[0], 0.0 + ((_GLF_IDENTITY(true ? injectionSwitch : _GLF_FUZZED(injectionSwitch), (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch)) * mat2(1.0)))[0])), (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))[1]), bvec2(true, true)), mat2(1.0) * (mix(vec2(_GLF_FUZZED(-8.3), _GLF_FUZZED(-697.746)), vec2(_GLF_IDENTITY(_GLF_IDENTITY((true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))[0], mix(float((true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))[0]), float(_GLF_FUZZED(226.172)), bool(false))), 0.0 + (_GLF_IDENTITY((_GLF_IDENTITY(true, bool(bvec3(true, true, true))) ? injectionSwitch : _GLF_FUZZED(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-5369.4677), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(167.082)), bvec2(true, _GLF_IDENTITY(false, ! (! (false))))))))[0], clamp((_GLF_IDENTITY(true, bool(bvec3(true, true, true))) ? injectionSwitch : _GLF_FUZZED(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-5369.4677), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(167.082)), bvec2(true, _GLF_IDENTITY(false, ! (! (false))))))))[0], (_GLF_IDENTITY(true, bool(bvec3(true, true, true))) ? injectionSwitch : _GLF_FUZZED(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-5369.4677), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(167.082)), bvec2(true, _GLF_IDENTITY(false, ! (! (false))))))))[0], (_GLF_IDENTITY(true, bool(bvec3(true, true, true))) ? injectionSwitch : _GLF_FUZZED(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-5369.4677), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(167.082)), bvec2(true, _GLF_IDENTITY(false, ! (! (false))))))))[0])))), (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))[1]), bvec2(true, true))))))).y)), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))).y, clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(_GLF_IDENTITY(true ? injectionSwitch : _GLF_IDENTITY(_GLF_FUZZED(injectionSwitch), max(_GLF_FUZZED(injectionSwitch), _GLF_FUZZED(injectionSwitch))), vec2(mat2x4(true ? injectionSwitch : _GLF_IDENTITY(_GLF_FUZZED(injectionSwitch), max(_GLF_FUZZED(injectionSwitch), _GLF_FUZZED(injectionSwitch))), 1.0, round(length(normalize(1.0))), 0.0, 1.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0)), dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0))), 0.0))), mix(vec2(_GLF_FUZZED(float(128543u)), (true ? injectionSwitch : _GLF_IDENTITY(_GLF_FUZZED(injectionSwitch), max(_GLF_FUZZED(injectionSwitch), _GLF_FUZZED(injectionSwitch))))[1]), vec2((true ? injectionSwitch : _GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(injectionSwitch), mix(vec2(_GLF_FUZZED(float(false)), _GLF_FUZZED(-6.1)), vec2((_GLF_FUZZED(injectionSwitch))[0], (_GLF_FUZZED(injectionSwitch))[1]), bvec2(true, true))), max(_GLF_FUZZED(injectionSwitch), _GLF_IDENTITY(_GLF_FUZZED(injectionSwitch), vec2(_GLF_IDENTITY(mat2x3(_GLF_IDENTITY(_GLF_FUZZED(injectionSwitch), max(_GLF_FUZZED(injectionSwitch), _GLF_FUZZED(injectionSwitch))), 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 0.0), (mat2x3(_GLF_IDENTITY(_GLF_FUZZED(injectionSwitch), max(_GLF_FUZZED(injectionSwitch), _GLF_FUZZED(injectionSwitch))), 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 0.0)) - mat2x3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0)))))))[0], _GLF_FUZZED(-2.4)), bvec2(true, false))))).y, mix(float(_GLF_FUZZED((-4.1))), float(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))).y), bool(true))), _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)), injectionSwitch, injectionSwitch))))).y, _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(true, bool(bvec3(true, true, false))) ? injectionSwitch : _GLF_FUZZED(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat4x3(injectionSwitch, 0.0, 1.0, cos(0.0), 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, _GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(2.0))))), clamp(vec2(mat4x3(injectionSwitch, 0.0, 1.0, cos(0.0), 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0)), vec2(mat4x3(injectionSwitch, 0.0, 1.0, cos(0.0), 0.0, 1.0, 0.0, 1.0, _GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0, 1.0)), vec2(mat4x3(injectionSwitch, 0.0, 1.0, cos(0.0), 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0)))))))).y)), min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(true ? injectionSwitch : _GLF_FUZZED(injectionSwitch), mat2(1.0) * (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))))).y, clamp(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))).y, mix(float(_GLF_FUZZED((-4.1))), float(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))).y), bool(true))), (_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(1964.6151)), float(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0)), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) < _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0), transpose(transpose(mat2(1.0)))) * (injectionSwitch)).y)) ? _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((_GLF_IDENTITY(true ? injectionSwitch : _GLF_IDENTITY(_GLF_FUZZED(injectionSwitch), vec2(0.0, 0.0) + (_GLF_FUZZED(injectionSwitch))), mat2(1.0) * (true ? injectionSwitch : _GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(injectionSwitch), (false ? _GLF_FUZZED(injectionSwitch) : _GLF_FUZZED(injectionSwitch))), vec2(_GLF_IDENTITY(0.0, float(mat3x4(0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, _GLF_IDENTITY(dot(vec3(tan(0.0), 0.0, 1.0), vec3(0.0, 0.0, 1.0)), dot(vec3(tan(0.0), 0.0, 1.0), vec3(0.0, 0.0, 1.0))), 0.0, 1.0, 0.0, 0.0))), 0.0) + (_GLF_FUZZED(injectionSwitch)))))), ((_GLF_IDENTITY(true ? injectionSwitch : _GLF_IDENTITY(_GLF_FUZZED(injectionSwitch), vec2(0.0, 0.0) + (_GLF_FUZZED(injectionSwitch))), mat2(1.0) * (true ? injectionSwitch : _GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(injectionSwitch), (false ? _GLF_FUZZED(injectionSwitch) : _GLF_FUZZED(injectionSwitch))), vec2(_GLF_IDENTITY(0.0, float(mat3x4(0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, _GLF_IDENTITY(dot(vec3(tan(0.0), 0.0, 1.0), vec3(0.0, 0.0, 1.0)), dot(vec3(tan(0.0), 0.0, 1.0), vec3(0.0, 0.0, 1.0))), 0.0, 1.0, 0.0, 0.0))), 0.0) + (_GLF_FUZZED(injectionSwitch))))))) / vec2(1.0, 1.0))).y, mix(float(_GLF_FUZZED((_GLF_IDENTITY(-4.1, (-4.1) + log(1.0))))), float(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))).y), bool(true))) : _GLF_FUZZED(-33.95))), _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))).y, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)), (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))).y)), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch)[1], 0.0 + ((injectionSwitch)[1]))), vec2(_GLF_FUZZED(5324.5872), _GLF_FUZZED(9218.0788)), bvec2(false, false))), (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))).y, clamp(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)), _GLF_IDENTITY((true ? injectionSwitch : _GLF_FUZZED(injectionSwitch)), vec2(1.0, 1.0) * ((true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))))).y, mix(float(_GLF_FUZZED((-4.1))), float(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))).y), bool(true))), _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))).y, _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))).y))))))))), ! (! ((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(_GLF_IDENTITY(true, (true) && true) ? injectionSwitch : _GLF_FUZZED(injectionSwitch), vec2(mat3(_GLF_IDENTITY(true, (true) && true) ? injectionSwitch : _GLF_FUZZED(injectionSwitch), _GLF_ZERO(0.0, injectionSwitch.x), determinant(mat4(0.0, 0.0, 0.0, 0.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0)), 0.0, 0.0, determinant(mat4(1.0, 0.0, 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0, 0.0, 0.0, 1.0, abs(1.0), 0.0, 0.0, 0.0, exp(0.0), 1.0)), abs(sqrt(1.0)), 0.0))))).y)))))))
      {
       do
        {
         if(_GLF_DEAD(false))
          barrier();
         for(int _injected_loop_counter = int(_GLF_ONE(1.0, injectionSwitch.y)); _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _GLF_IDENTITY(_injected_loop_counter --, (true ? _injected_loop_counter -- : _GLF_FUZZED(_injected_loop_counter))))
          {
           if(_GLF_DEAD(false))
            {
             if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, (_GLF_IDENTITY(true, (true) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && true)))
              {
               if(_GLF_DEAD(false))
                barrier();
               if(_GLF_DEAD(false))
                {
                 if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
                  barrier();
                 barrier();
                }
               if(_GLF_DEAD(false))
                barrier();
              }
             else
              {
              }
             for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < ((1 << _GLF_IDENTITY(int(6), int(6))) >> _GLF_IDENTITY(int(6), int(6)))); _injected_loop_counter ++)
              {
               if(_GLF_DEAD(false))
                {
                 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                  barrier();
                 barrier();
                }
              }
             barrier();
            }
          }
        }
       while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, (false) && true)));
       if(_GLF_DEAD(false))
        barrier();
       do
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if(_GLF_WRAPPED_IF_FALSE(false))
          {
          }
         else
          {
           if(_GLF_DEAD(false))
            {
             do
              {
               barrier();
              }
             while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
             if(_GLF_DEAD(false))
              barrier();
            }
           if(_GLF_DEAD(false))
            barrier();
          }
         atomicStore(buf[GLF_merged4_0_1_16_1_1_13_2_1_6_3_1_13next_virtual_gidnum_workgroupread_1subgroup_size.x], uint(1), 4, 64, _GLF_IDENTITY(4, (4) / 1));
         if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(true, (true) || false) && (_GLF_DEAD(false))))
          barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
        }
       while(_GLF_WRAPPED_LOOP(false));
       do
        {
         if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(false, ! (! (false))) || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
          barrier();
        }
       while(_GLF_WRAPPED_LOOP(false));
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            {
            }
           else
            {
             barrier();
            }
          }
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))))))
          barrier();
         barrier();
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
        }
       for(int _injected_loop_counter = int(_GLF_ONE(1.0, injectionSwitch.y)); _GLF_WRAPPED_LOOP(_injected_loop_counter != int(_GLF_ZERO(0.0, injectionSwitch.x))); _injected_loop_counter --)
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, ! (! (false))))))))
          {
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
         if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) || false)) && true), false || (false))), ! (! (_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) || false)) && true), false || (false)))))))
          {
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_DEAD(false))
            {
             if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, bool(bvec4(true, false, false, true)))))
              {
               barrier();
              }
             else
              {
              }
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              barrier();
            }
           for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
            {
             barrier();
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              barrier();
            }
          }
        }
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     else
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
    }
   else
    {
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 uint read_1 = atomicLoad(buf[virtual_gid], 4, 64, _GLF_IDENTITY(0, int(int(0))));
 if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), bool(_GLF_IDENTITY(bvec3(_GLF_DEAD(false), false, false), bvec3(bvec4(bvec3(_GLF_DEAD(false), false, false), _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-6.4)), float(injectionSwitch.y), bool(true)))))))))), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(_GLF_DEAD(false), false, false), bvec3(bvec4(bvec3(_GLF_DEAD(false), false, false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), bool(bool(bool(_GLF_IDENTITY(bvec3(_GLF_DEAD(false), false, false), bvec3(bvec4(bvec3(_GLF_DEAD(false), false, false), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false), false, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))))))))))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < (_GLF_IDENTITY((1 << _GLF_IDENTITY(_GLF_IDENTITY(int(6), _GLF_IDENTITY(_GLF_IDENTITY((int(6)), (false ? _GLF_FUZZED(_injected_loop_counter) : _GLF_IDENTITY((int(6)), clamp(_GLF_IDENTITY((int(6)), ((int(6))) | 0), (int(6)), (int(6)))))) >> (0 << _GLF_IDENTITY(int(3), int(3))), (_GLF_IDENTITY(_GLF_IDENTITY((int(6)), (false ? _GLF_FUZZED(_injected_loop_counter) : _GLF_IDENTITY((int(6)), clamp(_GLF_IDENTITY((int(6)), ((int(6))) | 0), (int(6)), (int(6)))))) >> (0 << _GLF_IDENTITY(int(3), int(3))), (_GLF_IDENTITY(_GLF_IDENTITY((int(6)), (false ? _GLF_FUZZED(_injected_loop_counter) : _GLF_IDENTITY((int(6)), clamp(_GLF_IDENTITY((int(6)), ((int(6))) | 0), (int(6)), (int(6)))))) >> (0 << _GLF_IDENTITY(int(3), int(3))), clamp(_GLF_IDENTITY((int(6)), (false ? _GLF_FUZZED(_injected_loop_counter) : _GLF_IDENTITY((int(6)), clamp(_GLF_IDENTITY((int(6)), ((int(6))) | 0), (int(6)), (int(6)))))) >> (0 << _GLF_IDENTITY(int(3), int(3))), _GLF_IDENTITY((int(6)), (false ? _GLF_FUZZED(_injected_loop_counter) : _GLF_IDENTITY((int(6)), clamp(_GLF_IDENTITY((int(6)), ((int(6))) | 0), (int(6)), (int(6)))))) >> (0 << _GLF_IDENTITY(int(3), int(3))), _GLF_IDENTITY((int(6)), (false ? _GLF_FUZZED(_injected_loop_counter) : _GLF_IDENTITY((int(6)), clamp(_GLF_IDENTITY((int(6)), ((int(6))) | 0), (int(6)), (int(6)))))) >> (0 << _GLF_IDENTITY(int(3), int(3)))))) | (_GLF_IDENTITY((int(6)), (false ? _GLF_FUZZED(_injected_loop_counter) : _GLF_IDENTITY((int(6)), clamp(_GLF_IDENTITY((int(6)), ((int(6))) | 0), (int(6)), (int(6)))))) >> (0 << _GLF_IDENTITY(int(3), int(3)))))) + 0)), int(6))), int(ivec3((1 << _GLF_IDENTITY(_GLF_IDENTITY(int(6), _GLF_IDENTITY(_GLF_IDENTITY((int(6)), (false ? _GLF_FUZZED(_injected_loop_counter) : _GLF_IDENTITY((int(6)), clamp(_GLF_IDENTITY((int(6)), ((int(6))) | 0), (int(6)), (int(6)))))) >> (0 << _GLF_IDENTITY(int(3), int(3))), (_GLF_IDENTITY(_GLF_IDENTITY((int(6)), (false ? _GLF_FUZZED(_injected_loop_counter) : _GLF_IDENTITY((int(6)), clamp(_GLF_IDENTITY((int(6)), ((int(6))) | 0), (int(6)), (int(6)))))) >> (0 << _GLF_IDENTITY(int(3), int(3))), (_GLF_IDENTITY(_GLF_IDENTITY((int(6)), (false ? _GLF_FUZZED(_injected_loop_counter) : _GLF_IDENTITY((int(6)), clamp(_GLF_IDENTITY((int(6)), ((int(6))) | 0), (int(6)), (int(6)))))) >> (0 << _GLF_IDENTITY(int(3), int(3))), clamp(_GLF_IDENTITY((int(6)), (false ? _GLF_FUZZED(_injected_loop_counter) : _GLF_IDENTITY((int(6)), clamp(_GLF_IDENTITY((int(6)), ((int(6))) | 0), (int(6)), (int(6)))))) >> (0 << _GLF_IDENTITY(int(3), int(3))), _GLF_IDENTITY((int(6)), (false ? _GLF_FUZZED(_injected_loop_counter) : _GLF_IDENTITY((int(6)), clamp(_GLF_IDENTITY((int(6)), ((int(6))) | 0), (int(6)), (int(6)))))) >> (0 << _GLF_IDENTITY(int(3), int(3))), _GLF_IDENTITY((int(6)), (false ? _GLF_FUZZED(_injected_loop_counter) : _GLF_IDENTITY((int(6)), clamp(_GLF_IDENTITY((int(6)), ((int(6))) | 0), (int(6)), (int(6)))))) >> (0 << _GLF_IDENTITY(int(3), int(3)))))) | (_GLF_IDENTITY((int(6)), (false ? _GLF_FUZZED(_injected_loop_counter) : _GLF_IDENTITY((int(6)), clamp(_GLF_IDENTITY((int(6)), ((int(6))) | 0), (int(6)), (int(6)))))) >> (0 << _GLF_IDENTITY(int(3), int(3)))))) + 0)), int(6))), 1, 0))) >> _GLF_IDENTITY(int(6), int(6)))); _injected_loop_counter ++)
  {
   GLF_merged4_0_1_16_1_1_13_2_1_6_3_1_13next_virtual_gidnum_workgroupread_1subgroup_size.z = read_1;
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0)))), bool(bvec2(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0)))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), true))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
      }
     else
      {
       for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
        {
         if(_GLF_DEAD(false))
          {
           for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != int(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), clamp(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), (true ? _GLF_ONE(1.0, injectionSwitch.y) : _GLF_FUZZED(1.2))))))); _injected_loop_counter ++)
            {
             barrier();
            }
          }
         barrier();
        }
      }
    }
   barrier();
  }
 for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != ((1 << _GLF_IDENTITY(int(6), int(6))) >> _GLF_IDENTITY(int(6), int(6)))); _injected_loop_counter ++)
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   atomicStore(buf[GLF_merged4_0_1_16_1_1_13_2_1_6_3_1_13next_virtual_gidnum_workgroupread_1subgroup_size.x], uint(GLF_merged4_0_1_16_1_1_13_2_1_6_3_1_13next_virtual_gidnum_workgroupread_1subgroup_size.z + 1), 4, 64, _GLF_IDENTITY(4, (4) << 0));
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
}
