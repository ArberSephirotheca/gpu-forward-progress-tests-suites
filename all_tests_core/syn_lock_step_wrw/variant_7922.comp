#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 uvec4 GLF_merged4_0_1_6_1_1_11_2_1_17_3_1_13read_1subgroup_idsubgroup_local_idsubgroup_size;
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, true && (false)), true, false)))))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[_GLF_IDENTITY(0, (_GLF_IDENTITY(0, (0) >> 0)) / 1)], injectionSwitch[1])) : _GLF_FUZZED(vec2(-9.2, 62.40)))).x > _GLF_IDENTITY(injectionSwitch.y, mix(_GLF_IDENTITY(_GLF_IDENTITY(float(_GLF_FUZZED(_GLF_IDENTITY(42.76, float(mat4x3(42.76, _GLF_IDENTITY(dot(vec3(0.0, _GLF_IDENTITY(1.0, max(1.0, 1.0)), 0.0), vec3(0.0, 1.0, 0.0)), dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0))), 1.0, _GLF_IDENTITY(sin(0.0), 1.0 * (sin(0.0))), 1.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 1.0, 0.0, 0.0, 1.0))))), float(mat3(float(_GLF_FUZZED(_GLF_IDENTITY(42.76, float(mat4x3(42.76, _GLF_IDENTITY(dot(vec3(0.0, _GLF_IDENTITY(1.0, max(1.0, 1.0)), 0.0), vec3(0.0, 1.0, 0.0)), dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0))), 1.0, _GLF_IDENTITY(sin(0.0), 1.0 * (sin(0.0))), 1.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 1.0, 0.0, 0.0, 1.0))))), 0.0, 1.0, 0.0, tan(log(1.0)), 0.0, 1.0, 1.0, 0.0))), (float(_GLF_FUZZED(_GLF_IDENTITY(42.76, float(mat4x3(42.76, _GLF_IDENTITY(dot(vec3(0.0, _GLF_IDENTITY(1.0, max(1.0, 1.0)), _GLF_IDENTITY(0.0, float(_GLF_IDENTITY(mat4x2(0.0, determinant(mat3(1.0, 1.0, cos(0.0), 0.0, 1.0, 0.0, log(1.0), 0.0, 1.0)), cos(0.0), 1.0, 0.0, abs(0.0), 0.0, 1.0), transpose(transpose(mat4x2(0.0, determinant(mat3(1.0, 1.0, cos(0.0), 0.0, 1.0, 0.0, log(1.0), 0.0, 1.0)), cos(0.0), 1.0, 0.0, abs(0.0), 0.0, 1.0))))))), vec3(0.0, _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(156.500)), float(_GLF_IDENTITY(1.0, _GLF_IDENTITY(float(float(1.0)), max(float(float(1.0)), float(float(1.0)))))), bool(true))), 0.0)), dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0))), 1.0, _GLF_IDENTITY(sin(0.0), 1.0 * (sin(0.0))), 1.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 1.0, 0.0, 0.0, 1.0)))))) - 0.0), float(injectionSwitch.y), bool(_GLF_IDENTITY(true, bool(bvec4(true, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bool(injectionSwitch.x > injectionSwitch.y)))) && true))), false, true))))))))), (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])) : _GLF_FUZZED(vec2(-9.2, 62.40)))).x > _GLF_IDENTITY(injectionSwitch.y, mix(_GLF_IDENTITY(float(_GLF_FUZZED(_GLF_IDENTITY(42.76, float(mat4x3(42.76, _GLF_IDENTITY(dot(vec3(0.0, _GLF_IDENTITY(1.0, max(1.0, 1.0)), 0.0), vec3(0.0, 1.0, 0.0)), dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0))), 1.0, _GLF_IDENTITY(sin(0.0), 1.0 * (sin(0.0))), 1.0, 0.0, _GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-173.475)), float(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))), bool(true)))), 1.0, 1.0, 0.0, 0.0, 1.0))))), (float(_GLF_FUZZED(_GLF_IDENTITY(42.76, float(mat4x3(42.76, _GLF_IDENTITY(dot(vec3(0.0, _GLF_IDENTITY(1.0, max(1.0, 1.0)), 0.0), vec3(0.0, _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(156.500)), float(_GLF_IDENTITY(1.0, float(float(1.0)))), bool(true))), 0.0)), dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0))), 1.0, _GLF_IDENTITY(sin(0.0), 1.0 * (sin(0.0))), 1.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 1.0, 0.0, 0.0, 1.0)))))) - 0.0), float(injectionSwitch.y), bool(_GLF_IDENTITY(true, bool(bvec4(true, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bool(injectionSwitch.x > injectionSwitch.y)))) && true))), false, true)))))))))) || false))
  {
   if(_GLF_DEAD(false))
    return;
   do
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      continue;
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), false || (_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, false || (false))) && true), true && (false)), false, false, false)))))))
      break;
     if(_GLF_DEAD(false))
      {
       if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))
        {
         if(_GLF_DEAD(false))
          continue;
         break;
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        break;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          continue;
         break;
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          continue;
         continue;
        }
       if(_GLF_DEAD(false))
        break;
       if(_GLF_DEAD(false))
        continue;
       if(_GLF_DEAD(false))
        break;
       return;
       if(_GLF_DEAD(false))
        continue;
      }
     if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          break;
         return;
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          break;
        }
       return;
      }
    }
   while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), ! (_GLF_IDENTITY(! (bool(bvec2(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), (! (bool(bvec2(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))) && true))))));
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), true && (_GLF_IDENTITY(false, (false) && true))), false, false)))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            return;
           return;
          }
         return;
         if(_GLF_DEAD(false))
          return;
        }
       return;
      }
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, false)))) || false))
    return;
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, float(mat2x3(injectionSwitch.y, 1.0, 0.0, sqrt(1.0), 1.0, 1.0)))))))))
    return;
  }
 do
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      break;
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y))))
      {
       if(_GLF_DEAD(false))
        return;
       continue;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[_GLF_IDENTITY(1, max(1, 1))])).x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        continue;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          break;
         continue;
        }
       break;
      }
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, true, true)))))
      {
       if(_GLF_DEAD(false))
        continue;
       if(_GLF_DEAD(false))
        return;
       break;
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
      break;
     continue;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) && true)))) || false), (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(3.6))), (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))) ? _GLF_FUZZED(_GLF_IDENTITY((_GLF_IDENTITY(false, true && (false)) ? -946.870 : -253.927), ((_GLF_IDENTITY(false, true && (false)) ? -946.870 : -253.927)) - 0.0)) : injectionSwitch.y, (_GLF_IDENTITY(false, ! (! (false))) ? _GLF_FUZZED(_GLF_IDENTITY((_GLF_IDENTITY(false, true && (false)) ? -946.870 : -253.927), ((_GLF_IDENTITY(false, true && (false)) ? -946.870 : -253.927)) - 0.0)) : injectionSwitch.y) + _GLF_IDENTITY(dot(vec4(1.0, 0.0, 0.0, 0.0), vec4(sin(0.0), 1.0, 1.0, 1.0)), dot(vec4(1.0, 0.0, 0.0, 0.0), vec4(sin(0.0), 1.0, 1.0, 1.0))))))))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
      return;
     if(_GLF_DEAD(false))
      break;
     if(_GLF_DEAD(false))
      continue;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        break;
       break;
      }
     if(_GLF_DEAD(false))
      continue;
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(bvec2(false, true))))))), true && (_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY((_GLF_DEAD(false)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && ((_GLF_DEAD(false)))) && true))))
      break;
     if(_GLF_DEAD(false))
      break;
     return;
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false)), (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          break;
         continue;
        }
       return;
      }
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    break;
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! _GLF_IDENTITY((_GLF_DEAD(false)), bool(bool(_GLF_IDENTITY((_GLF_DEAD(false)), ! (_GLF_IDENTITY(! ((_GLF_DEAD(false))), ! (! (! ((_GLF_DEAD(false))))))))))))))
    break;
  }
 while(_GLF_WRAPPED_LOOP(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false)), (injectionSwitch.x > injectionSwitch.y))));
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(bool(false))))))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          return;
         return;
        }
       return;
      }
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(2511.0483), _GLF_FUZZED(8.1)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))).x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch))) * _GLF_IDENTITY(vec2(1.0, 1.0), max(vec2(1.0, 1.0), vec2(1.0, 1.0)))).x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).y))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 uint subgroup_id = gl_SubgroupID;
 GLF_merged4_0_1_6_1_1_11_2_1_17_3_1_13read_1subgroup_idsubgroup_local_idsubgroup_size.y = subgroup_id;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y))))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), (bool(bool(false))) && true))))
    return;
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(8.7, -2.8)) : injectionSwitch)).x > injectionSwitch.y))))
    return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
   if(_GLF_DEAD(false))
    return;
  }
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, false || (false)), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(8.1)))))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   return;
  }
 if(_GLF_DEAD(false))
  return;
 _GLF_IDENTITY(_GLF_IDENTITY(GLF_merged4_0_1_6_1_1_11_2_1_17_3_1_13read_1subgroup_idsubgroup_local_idsubgroup_size.w = subgroup_size, (_GLF_IDENTITY(true ? GLF_merged4_0_1_6_1_1_11_2_1_17_3_1_13read_1subgroup_idsubgroup_local_idsubgroup_size.w = subgroup_size : _GLF_FUZZED(41231u), ~ (~ (true ? GLF_merged4_0_1_6_1_1_11_2_1_17_3_1_13read_1subgroup_idsubgroup_local_idsubgroup_size.w = subgroup_size : _GLF_FUZZED(41231u)))))), (_GLF_IDENTITY(GLF_merged4_0_1_6_1_1_11_2_1_17_3_1_13read_1subgroup_idsubgroup_local_idsubgroup_size.w = _GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, subgroup_size)), (true ? GLF_merged4_0_1_6_1_1_11_2_1_17_3_1_13read_1subgroup_idsubgroup_local_idsubgroup_size.w = subgroup_size : _GLF_FUZZED(41231u)))) << 0u);
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, true && (false)), true)))) && true)))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) || false)) || false))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)), injectionSwitch)).y)), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, true && (false))), ! (! _GLF_IDENTITY((bool(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) && true)))))))), true && (_GLF_IDENTITY((bool(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) && true)))))))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2((bool(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) && true)))))))), true), bvec2(bvec3(bvec2((bool(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) && true)))))))), true), false)))), bool(bvec2(bool(_GLF_IDENTITY(bvec2((bool(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) && true)))))))), true), bvec2(bvec3(bvec2((bool(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) && true)))))))), true), false)))), true))))))))))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, 1.0 * (injectionSwitch.x)) > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && _GLF_IDENTITY(true, ! (! (true))))))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), true && (! (false))))), _GLF_IDENTITY(_GLF_IDENTITY(bool(bool(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), true && (! (false))))))), ! (! (bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), true && (! (false))))), (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), true && (! (false))))), (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), true && (! (false)))))) || false)) || false)))))), bool(bvec2(_GLF_IDENTITY(bool(bool(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), true && (! (false))))))), ! (! (bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), true && (! (false))))), (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), true && (! (false))))), (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), true && (! (false)))))) || false)) || false)))))), true)))), (_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(! (_GLF_IDENTITY(! (false), true && (! (false)))), (_GLF_IDENTITY(! (_GLF_IDENTITY(! (false), true && (! (false)))), (! (_GLF_IDENTITY(! (false), true && (! (false))))) && true)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! _GLF_IDENTITY((false), _GLF_IDENTITY(! (! ((false))), ! (_GLF_IDENTITY(! (! (! ((false)))), _GLF_IDENTITY(bool(bool(! (! (! ((false)))))), bool(bvec3(bool(bool(! (! (! ((false)))))), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))), true && _GLF_IDENTITY((! (false)), ! (! ((! (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(false, false, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), ! (! (_GLF_IDENTITY(false, bool(bvec4(false, false, true, _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || ((injectionSwitch.x < injectionSwitch.y)))))))))))))))))))), ! (! (bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(_GLF_IDENTITY(! (false), true && (! (false))), bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(! (false), true && (! (false))), (_GLF_IDENTITY(_GLF_IDENTITY(! (false), true && (! (false))), ! (! (_GLF_IDENTITY(! (false), _GLF_IDENTITY(true, bool(bool(_GLF_IDENTITY(true, ! (! (true)))))) && (! (false))))))) && true), true))))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), true && (! (false))))), (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), _GLF_IDENTITY(true, (true) && true) && (! (false)))))) || false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), true && (! (false))))), (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), ! (_GLF_IDENTITY(! (false), _GLF_IDENTITY(true, (true) && true) && (! (false)))))) || false), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), _GLF_IDENTITY(true, bool(bvec3(true, true, true))) && (! (false))))), (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), _GLF_IDENTITY(true, (true) && true) && (! (false)))))) || false), true && (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), true && (! (false))))), (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(_GLF_IDENTITY(! (false), ! (! (! (false)))), _GLF_IDENTITY(true, (true) && true) && (! (false)))))) || false))))))))) || false)))))))) || false), bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, false || (false))) || false))), ! (_GLF_IDENTITY(_GLF_IDENTITY(! (false), true && (! (false))), true && (! (false))))), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), true && _GLF_IDENTITY((! (false)), bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY((! (false)), ((! (false))) || false), bool(bvec3((! (false)), true, false))), false, true, false)))))))), ! (! (bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(false, bool(bvec4(false, true, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), ! (_GLF_IDENTITY(! (false), true && (_GLF_IDENTITY(! (false), bool(_GLF_IDENTITY(bvec3(! (false), true, false), bvec3(bvec3(bvec3(! (false), true, false)))))))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(false, bool(bvec4(false, true, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), ! (_GLF_IDENTITY(! (false), true && (! (false)))))), ! (! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * 1.0) < injectionSwitch.y)) && (_GLF_IDENTITY(false, bool(bvec4(false, true, false, _GLF_TRUE(true, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0) < injectionSwitch.y), ((_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0) < injectionSwitch.y)) && true))))))), bool(bvec2(_GLF_IDENTITY(false, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * 1.0) < injectionSwitch.y)) && (_GLF_IDENTITY(false, bool(bvec4(false, true, false, _GLF_TRUE(true, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0) < injectionSwitch.y), ((_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0) < injectionSwitch.y)) && true))))))), false))), ! (_GLF_IDENTITY(! (false), true && (! (false))))))))))), (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), true && (! (false))))), (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), true && (! (false)))))) || false)) || false))))))), (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! _GLF_IDENTITY((false), false || ((false))), true && (! (false))))), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! _GLF_IDENTITY(_GLF_IDENTITY((false), ! (! ((false)))), _GLF_IDENTITY(! (! ((false))), ! (! (! (! ((false))))))), true && _GLF_IDENTITY((! (false)), ! (! ((! (false)))))))))), ! (! (bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! (! (false)))), true && (! _GLF_IDENTITY((false), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY((false), ((false)) && true), true, true)), false || (bool(bvec3(_GLF_IDENTITY((false), ((false)) && true), true, true))))))))), (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! (! (false)))), true && (! (false))))), (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), _GLF_IDENTITY(true, _GLF_IDENTITY((true), ((true)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true) && (! (false)))))) || false)) || false)))))))) || false), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), true && (! (false))))), ! (! (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), true && (! (false)))))))), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), true && (! (false))))))), ! (! (bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), true && (! (false))))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), _GLF_IDENTITY(true && (! (false)), true && (true && (! (false))))))), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), _GLF_IDENTITY(true && (! (false)), true && (true && (! (false))))))), true && (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), _GLF_IDENTITY(true && (! (false)), true && (true && (! (false))))))))), false), _GLF_IDENTITY(bvec2(bvec4(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), _GLF_IDENTITY(true && (! (false)), true && (true && (! (false))))))), true && (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), _GLF_IDENTITY(true && (! (false)), true && (true && (! (false))))))))), false), true, false)), bvec2(bvec3(bvec2(bvec4(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), _GLF_IDENTITY(true && (! (false)), true && (true && (! (false))))))), true && (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), _GLF_IDENTITY(true && (! (false)), true && (true && (! (false))))))))), false), true, false)), false)))))), (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, bool(bool(false)))), true && (! (false)))))) || false)) || false))))))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec2(false, false)))) || false), _GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(! (false), true && (! (false)))), (_GLF_IDENTITY(! (_GLF_IDENTITY(! (false), true && (! (false)))), true && (! (_GLF_IDENTITY(! (false), true && (! (false))))))) || false), bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(! (false), true && (! (false)))), (_GLF_IDENTITY(! (_GLF_IDENTITY(! (false), true && (! (false)))), true && (! (_GLF_IDENTITY(! (false), true && (! (false))))))) || false), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(! (_GLF_IDENTITY(! (false), true && (! (false)))), (_GLF_IDENTITY(! (_GLF_IDENTITY(! (false), true && (! (false)))), true && (! (_GLF_IDENTITY(! (false), true && (! (false))))))) || false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true)), ! (! (bool(bvec4(_GLF_IDENTITY(! (_GLF_IDENTITY(! (false), true && (! (false)))), (_GLF_IDENTITY(! (_GLF_IDENTITY(! (false), true && (! (false)))), true && (! (_GLF_IDENTITY(! (false), true && (! (false))))))) || false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true)))))), true, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! _GLF_IDENTITY((false), ! (! ((false)))), true && _GLF_IDENTITY((! (false)), _GLF_IDENTITY(! (! ((! (false)))), ! (! (! (! _GLF_IDENTITY((_GLF_IDENTITY((! (false)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || ((! (false))))), ! (! (((! (false)))))))))))))))), ! (! (bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! _GLF_IDENTITY((false), _GLF_IDENTITY(bool(bvec2((false), false)), bool(_GLF_IDENTITY(bvec3(bool(bvec2(_GLF_IDENTITY((false), ! (_GLF_IDENTITY(! ((false)), (! ((false))) && true))), false)), false, false), bvec3(bvec3(bvec3(bool(bvec2(_GLF_IDENTITY((false), ! (_GLF_IDENTITY(! ((false)), (! ((false))) && true))), false)), false, false))))))), true && (! (false))))), (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), true && (! (_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, (false) && true)))))))), _GLF_IDENTITY((_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), _GLF_IDENTITY(true, (true) && true) && (! (false)))))) || _GLF_IDENTITY(false, (false) || false), false || ((_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), _GLF_IDENTITY(true, (true) && true) && (! (_GLF_IDENTITY(false, (false) || false))))))) || false)))) || false)))))))) || false)))))))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
  }
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))))))))
      return;
     return;
    }
   return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], (injectionSwitch[0]) - _GLF_IDENTITY(0.0, min(0.0, 0.0))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(84.66)), vec2(_GLF_FUZZED(29.94), (injectionSwitch)[1]), bvec2(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))[1], (_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(84.66)), vec2(_GLF_FUZZED(29.94), (injectionSwitch)[1]), bvec2(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))[1]) / 1.0))).x > injectionSwitch.y, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, float(_GLF_IDENTITY(mat3x2(_GLF_IDENTITY(injectionSwitch.y, sqrt(0.0) + (injectionSwitch.y)), 1.0, log(1.0), 0.0, round(length(normalize(1.0))), 1.0), transpose(transpose(mat3x2(injectionSwitch.y, 1.0, log(1.0), 0.0, round(length(normalize(1.0))), 1.0)))))), _GLF_IDENTITY(injectionSwitch.y, float(vec4(injectionSwitch.y, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 0.0, 0.0), vec4(1.0, 1.0, _GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, max(1.0, 1.0))) - tan(0.0)), 1.0)), dot(vec4(0.0, 0.0, _GLF_IDENTITY(0.0, float(mat3(0.0, 1.0, _GLF_IDENTITY(determinant(mat4(1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0)), min(determinant(mat4(1.0, 0.0, 1.0, _GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(-5.2)), bool(false))), 1.0)), 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0)), determinant(mat4(1.0, _GLF_IDENTITY(0.0, max(0.0, _GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(1567.3562)), bool(false)))) * _GLF_IDENTITY(determinant(mat4(1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0)), (determinant(mat4(1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0))) / 1.0)))), 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0)))), 0.0, 1.0, 0.0, 1.0, round(length(_GLF_IDENTITY(normalize(vec2(1.0, 1.0)), vec2(mat2(normalize(vec2(1.0, 1.0)), 0.0, 1.0))))), 0.0))), 0.0), vec4(1.0, 1.0, 1.0, 1.0))), 1.0, 1.0)))))) && true)))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec3(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec3((injectionSwitch.x > injectionSwitch.y), true, true))), true, false)))), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false)))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(true, ! (! (true))) && (false))))
    return;
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(_GLF_ONE(1.0, injectionSwitch.y))).x > injectionSwitch.y))))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(false || (false), bool(_GLF_IDENTITY(bool(false || (false)), (bool(false || (false))) && true)))), (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   return;
  }
 GLF_merged4_0_1_6_1_1_11_2_1_17_3_1_13read_1subgroup_idsubgroup_local_idsubgroup_size.z = subgroup_local_id;
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0))) > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0))) > injectionSwitch.y)))) && true), true)))))))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 uint num_workgroup = _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, (_GLF_IDENTITY(gl_NumWorkGroups, min(gl_NumWorkGroups, gl_NumWorkGroups))) + uvec3(0u, _GLF_IDENTITY(0u, (false ? _GLF_FUZZED(subgroup_id) : 0u)), 0u)), (_GLF_IDENTITY(gl_NumWorkGroups, (_GLF_IDENTITY(gl_NumWorkGroups, min(gl_NumWorkGroups, gl_NumWorkGroups))) + uvec3(0u, _GLF_IDENTITY(0u, (false ? _GLF_FUZZED(subgroup_id) : _GLF_IDENTITY(0u, (0u) + 0u))), 0u))) | (_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, (_GLF_IDENTITY(gl_NumWorkGroups, min(_GLF_IDENTITY(gl_NumWorkGroups, (_GLF_IDENTITY(gl_NumWorkGroups, max(gl_NumWorkGroups, _GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) << uvec3(0u, 0u, 0u))))) / uvec3(1u, 1u, 1u)), gl_NumWorkGroups))) + uvec3(0u, _GLF_IDENTITY(0u, (false ? _GLF_FUZZED(subgroup_id) : 0u)), 0u)), uvec3(0u, 0u, 0u) + (_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) | (_GLF_IDENTITY(gl_NumWorkGroups, uvec3(gl_NumWorkGroups[0], gl_NumWorkGroups[1], gl_NumWorkGroups[2])))), (_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, min(gl_NumWorkGroups, gl_NumWorkGroups)), clamp(_GLF_IDENTITY(gl_NumWorkGroups, min(gl_NumWorkGroups, gl_NumWorkGroups)), _GLF_IDENTITY(gl_NumWorkGroups, min(gl_NumWorkGroups, gl_NumWorkGroups)), _GLF_IDENTITY(gl_NumWorkGroups, min(gl_NumWorkGroups, gl_NumWorkGroups))))) + uvec3(0u, _GLF_IDENTITY(_GLF_IDENTITY(0u, (false ? _GLF_FUZZED(_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY(uint(uvec2(subgroup_id, (uint(_GLF_ONE(1.0, injectionSwitch.y)) ^ uint(_GLF_ONE(1.0, injectionSwitch.y))))), (false ? _GLF_FUZZED(subgroup_size) : uint(_GLF_IDENTITY(uvec2(subgroup_id, (uint(_GLF_ONE(1.0, injectionSwitch.y)) ^ uint(_GLF_ONE(1.0, injectionSwitch.y)))), uvec2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)) ^ (uvec2(subgroup_id, (uint(_GLF_ONE(1.0, injectionSwitch.y)) ^ uint(_GLF_ONE(1.0, injectionSwitch.y))))))))))) : 0u)), (_GLF_IDENTITY(_GLF_IDENTITY(0u, (false ? _GLF_FUZZED(_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY(uint(uvec2(subgroup_id, (uint(_GLF_ONE(1.0, injectionSwitch.y)) ^ uint(_GLF_ONE(1.0, injectionSwitch.y))))), (false ? _GLF_FUZZED(subgroup_size) : uint(_GLF_IDENTITY(uvec2(subgroup_id, (uint(_GLF_ONE(1.0, injectionSwitch.y)) ^ uint(_GLF_ONE(1.0, injectionSwitch.y)))), uvec2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)) ^ (uvec2(subgroup_id, (uint(_GLF_ONE(1.0, injectionSwitch.y)) ^ uint(_GLF_ONE(1.0, injectionSwitch.y))))))))))) : 0u)), (_GLF_IDENTITY(_GLF_IDENTITY(0u, (false ? _GLF_FUZZED(_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY(uint(uvec2(subgroup_id, (uint(_GLF_ONE(1.0, injectionSwitch.y)) ^ uint(_GLF_ONE(1.0, injectionSwitch.y))))), (false ? _GLF_FUZZED(subgroup_size) : uint(_GLF_IDENTITY(uvec2(subgroup_id, (uint(_GLF_ONE(1.0, injectionSwitch.y)) ^ uint(_GLF_ONE(1.0, injectionSwitch.y)))), uvec2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)) ^ (uvec2(subgroup_id, (uint(_GLF_ONE(1.0, injectionSwitch.y)) ^ uint(_GLF_ONE(1.0, injectionSwitch.y))))))))))) : 0u)), ~ (~ (_GLF_IDENTITY(0u, (false ? _GLF_FUZZED(_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY(uint(uvec2(subgroup_id, (uint(_GLF_ONE(1.0, injectionSwitch.y)) ^ uint(_GLF_ONE(1.0, injectionSwitch.y))))), (false ? _GLF_FUZZED(subgroup_size) : uint(_GLF_IDENTITY(uvec2(subgroup_id, (uint(_GLF_ONE(1.0, injectionSwitch.y)) ^ uint(_GLF_ONE(1.0, injectionSwitch.y)))), uvec2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)) ^ (uvec2(subgroup_id, (uint(_GLF_ONE(1.0, injectionSwitch.y)) ^ uint(_GLF_ONE(1.0, injectionSwitch.y))))))))))) : 0u)))))) - (0u | 0u))) ^ 0u), 0u)))))), (_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, _GLF_IDENTITY((_GLF_IDENTITY(gl_NumWorkGroups, min(gl_NumWorkGroups, gl_NumWorkGroups))), ((_GLF_IDENTITY(gl_NumWorkGroups, min(gl_NumWorkGroups, gl_NumWorkGroups)))) + uvec3(0u, 0u, 0u)) + uvec3(0u, 0u, 0u)), uvec3(uvec4(_GLF_IDENTITY(gl_NumWorkGroups, (_GLF_IDENTITY(gl_NumWorkGroups, min(gl_NumWorkGroups, gl_NumWorkGroups))) + uvec3(0u, 0u, 0u)), 0u)))) ^ uvec3(0u, 0u, 0u)).x, (true ? _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, _GLF_IDENTITY((_GLF_IDENTITY(gl_NumWorkGroups, min(gl_NumWorkGroups, gl_NumWorkGroups))) + uvec3(0u, _GLF_IDENTITY(0u, (false ? _GLF_FUZZED(subgroup_id) : _GLF_IDENTITY(0u, max(0u, 0u)))), 0u), (_GLF_IDENTITY((_GLF_IDENTITY(gl_NumWorkGroups, min(gl_NumWorkGroups, gl_NumWorkGroups))) + uvec3(0u, _GLF_IDENTITY(0u, (false ? _GLF_FUZZED(subgroup_id) : _GLF_IDENTITY(0u, max(0u, 0u)))), _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) << 0u)) >> (0u >> _GLF_IDENTITY(uint(2u), uint(2u))))), ((_GLF_IDENTITY(gl_NumWorkGroups, min(gl_NumWorkGroups, gl_NumWorkGroups))) + uvec3(0u, _GLF_IDENTITY(0u, (false ? _GLF_FUZZED(subgroup_id) : _GLF_IDENTITY(0u, max(0u, 0u)))), 0u)) * uvec3(1u, 1u, 1u))) << uvec3(0u, 0u, 0u))), (_GLF_IDENTITY(gl_NumWorkGroups, (_GLF_IDENTITY(gl_NumWorkGroups, min(gl_NumWorkGroups, gl_NumWorkGroups))) + _GLF_IDENTITY(uvec3(0u, _GLF_IDENTITY(0u, (false ? _GLF_FUZZED(subgroup_id) : 0u)), 0u), clamp(uvec3(0u, _GLF_IDENTITY(0u, (false ? _GLF_FUZZED(subgroup_id) : 0u)), 0u), uvec3(0u, _GLF_IDENTITY(0u, (false ? _GLF_FUZZED(subgroup_id) : 0u)), 0u), uvec3(0u, _GLF_IDENTITY(0u, (false ? _GLF_FUZZED(subgroup_id) : 0u)), 0u))))) | (_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, (_GLF_IDENTITY(gl_NumWorkGroups, min(_GLF_IDENTITY(gl_NumWorkGroups, (_GLF_IDENTITY(gl_NumWorkGroups, max(gl_NumWorkGroups, _GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) << uvec3(0u, 0u, 0u))))) / uvec3(1u, 1u, 1u)), gl_NumWorkGroups))) + uvec3(0u, _GLF_IDENTITY(0u, (false ? _GLF_FUZZED(subgroup_id) : 0u)), 0u)), uvec3(0u, 0u, 0u) + (_GLF_IDENTITY(gl_NumWorkGroups, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, min(gl_NumWorkGroups, gl_NumWorkGroups)), clamp(_GLF_IDENTITY(gl_NumWorkGroups, min(gl_NumWorkGroups, gl_NumWorkGroups)), _GLF_IDENTITY(gl_NumWorkGroups, min(gl_NumWorkGroups, gl_NumWorkGroups)), _GLF_IDENTITY(gl_NumWorkGroups, min(gl_NumWorkGroups, gl_NumWorkGroups))))) + uvec3(0u, _GLF_IDENTITY(_GLF_IDENTITY(0u, uint(_GLF_IDENTITY(uint(_GLF_IDENTITY(0u, 0u | (0u))), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(uint(_GLF_IDENTITY(0u, 0u | (0u))), (uint(_GLF_IDENTITY(0u, 0u | (0u)))) / 1u)), min(~ (_GLF_IDENTITY(uint(_GLF_IDENTITY(0u, 0u | (0u))), (uint(_GLF_IDENTITY(0u, 0u | (0u)))) / 1u)), ~ (_GLF_IDENTITY(uint(_GLF_IDENTITY(0u, 0u | (0u))), (uint(_GLF_IDENTITY(0u, 0u | (0u)))) / 1u)))))))), (false ? _GLF_FUZZED(_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY(_GLF_IDENTITY(uint(uvec2(subgroup_id, (uint(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, float(_GLF_IDENTITY(float(injectionSwitch.y), 0.0 + (float(injectionSwitch.y))))))) ^ uint(_GLF_ONE(1.0, injectionSwitch.y))))), (uint(uvec2(subgroup_id, (uint(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, float(_GLF_IDENTITY(float(injectionSwitch.y), 0.0 + (float(injectionSwitch.y))))))) ^ uint(_GLF_ONE(1.0, injectionSwitch.y)))))) ^ 0u), (false ? _GLF_FUZZED(subgroup_size) : uint(uvec2(subgroup_id, (uint(_GLF_ONE(1.0, injectionSwitch.y)) ^ uint(_GLF_ONE(1.0, injectionSwitch.y))))))))) : 0u)), 0u), uvec3(_GLF_IDENTITY(uvec3(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, min(gl_NumWorkGroups, gl_NumWorkGroups)), clamp(_GLF_IDENTITY(gl_NumWorkGroups, min(gl_NumWorkGroups, gl_NumWorkGroups)), _GLF_IDENTITY(gl_NumWorkGroups, min(gl_NumWorkGroups, gl_NumWorkGroups)), _GLF_IDENTITY(gl_NumWorkGroups, min(gl_NumWorkGroups, gl_NumWorkGroups))))) + uvec3(0u, _GLF_IDENTITY(_GLF_IDENTITY(0u, uint(_GLF_IDENTITY(uint(_GLF_IDENTITY(0u, 0u | (0u))), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(uint(_GLF_IDENTITY(0u, 0u | (0u))), (uint(_GLF_IDENTITY(0u, 0u | (0u)))) / 1u)), min(~ (_GLF_IDENTITY(uint(_GLF_IDENTITY(0u, 0u | (0u))), (uint(_GLF_IDENTITY(0u, 0u | (0u)))) / 1u)), ~ (_GLF_IDENTITY(uint(_GLF_IDENTITY(0u, 0u | (0u))), (uint(_GLF_IDENTITY(0u, 0u | (0u)))) / 1u)))))))), (false ? _GLF_FUZZED(_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY(_GLF_IDENTITY(uint(uvec2(subgroup_id, (uint(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, float(_GLF_IDENTITY(float(injectionSwitch.y), 0.0 + (float(injectionSwitch.y))))))) ^ uint(_GLF_ONE(1.0, injectionSwitch.y))))), (uint(uvec2(subgroup_id, (uint(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, float(_GLF_IDENTITY(float(injectionSwitch.y), 0.0 + (float(injectionSwitch.y))))))) ^ uint(_GLF_ONE(1.0, injectionSwitch.y)))))) ^ 0u), (false ? _GLF_FUZZED(subgroup_size) : uint(uvec2(subgroup_id, (uint(_GLF_ONE(1.0, injectionSwitch.y)) ^ uint(_GLF_ONE(1.0, injectionSwitch.y))))))))) : 0u)), 0u), uvec3(1u, 1u, 1u) * ((_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, min(gl_NumWorkGroups, gl_NumWorkGroups)), clamp(_GLF_IDENTITY(gl_NumWorkGroups, min(gl_NumWorkGroups, gl_NumWorkGroups)), _GLF_IDENTITY(gl_NumWorkGroups, min(gl_NumWorkGroups, gl_NumWorkGroups)), _GLF_IDENTITY(gl_NumWorkGroups, min(gl_NumWorkGroups, gl_NumWorkGroups))))) + uvec3(0u, _GLF_IDENTITY(_GLF_IDENTITY(0u, uint(_GLF_IDENTITY(uint(_GLF_IDENTITY(0u, 0u | (0u))), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(uint(_GLF_IDENTITY(0u, 0u | (0u))), (uint(_GLF_IDENTITY(0u, 0u | (0u)))) / 1u)), min(~ (_GLF_IDENTITY(uint(_GLF_IDENTITY(0u, 0u | (0u))), (uint(_GLF_IDENTITY(0u, 0u | (0u)))) / 1u)), ~ (_GLF_IDENTITY(uint(_GLF_IDENTITY(0u, 0u | (0u))), (uint(_GLF_IDENTITY(0u, 0u | (0u)))) / 1u)))))))), (false ? _GLF_FUZZED(_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY(_GLF_IDENTITY(uint(uvec2(subgroup_id, (uint(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, float(_GLF_IDENTITY(float(injectionSwitch.y), 0.0 + (float(injectionSwitch.y))))))) ^ uint(_GLF_ONE(1.0, injectionSwitch.y))))), (uint(uvec2(subgroup_id, (uint(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, float(_GLF_IDENTITY(float(injectionSwitch.y), 0.0 + (float(injectionSwitch.y))))))) ^ uint(_GLF_ONE(1.0, injectionSwitch.y)))))) ^ 0u), (false ? _GLF_FUZZED(subgroup_size) : uint(uvec2(subgroup_id, (uint(_GLF_ONE(1.0, injectionSwitch.y)) ^ uint(_GLF_ONE(1.0, injectionSwitch.y))))))))) : 0u)), 0u)))), min(uvec3(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, min(gl_NumWorkGroups, gl_NumWorkGroups)), clamp(_GLF_IDENTITY(gl_NumWorkGroups, min(gl_NumWorkGroups, gl_NumWorkGroups)), _GLF_IDENTITY(gl_NumWorkGroups, min(gl_NumWorkGroups, gl_NumWorkGroups)), _GLF_IDENTITY(gl_NumWorkGroups, min(gl_NumWorkGroups, gl_NumWorkGroups))))) + uvec3(0u, _GLF_IDENTITY(_GLF_IDENTITY(0u, uint(_GLF_IDENTITY(uint(_GLF_IDENTITY(0u, 0u | (0u))), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(uint(_GLF_IDENTITY(0u, 0u | (0u))), (uint(_GLF_IDENTITY(0u, 0u | (0u)))) / 1u)), min(~ (_GLF_IDENTITY(uint(_GLF_IDENTITY(0u, 0u | (0u))), (uint(_GLF_IDENTITY(0u, 0u | (0u)))) / 1u)), ~ (_GLF_IDENTITY(uint(_GLF_IDENTITY(0u, 0u | (0u))), (uint(_GLF_IDENTITY(0u, 0u | (0u)))) / 1u)))))))), (false ? _GLF_FUZZED(_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY(_GLF_IDENTITY(uint(uvec2(subgroup_id, (uint(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, float(_GLF_IDENTITY(float(injectionSwitch.y), 0.0 + (float(injectionSwitch.y))))))) ^ uint(_GLF_ONE(1.0, injectionSwitch.y))))), (uint(uvec2(subgroup_id, (uint(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, float(_GLF_IDENTITY(float(injectionSwitch.y), 0.0 + (float(injectionSwitch.y))))))) ^ uint(_GLF_ONE(1.0, injectionSwitch.y)))))) ^ 0u), (false ? _GLF_FUZZED(subgroup_size) : uint(uvec2(subgroup_id, (uint(_GLF_ONE(1.0, injectionSwitch.y)) ^ uint(_GLF_ONE(1.0, injectionSwitch.y))))))))) : 0u)), 0u), uvec3(1u, 1u, 1u) * ((_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, min(gl_NumWorkGroups, gl_NumWorkGroups)), clamp(_GLF_IDENTITY(gl_NumWorkGroups, min(gl_NumWorkGroups, gl_NumWorkGroups)), _GLF_IDENTITY(gl_NumWorkGroups, min(gl_NumWorkGroups, gl_NumWorkGroups)), _GLF_IDENTITY(gl_NumWorkGroups, min(gl_NumWorkGroups, gl_NumWorkGroups))))) + uvec3(0u, _GLF_IDENTITY(_GLF_IDENTITY(0u, uint(_GLF_IDENTITY(uint(_GLF_IDENTITY(0u, 0u | (0u))), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(uint(_GLF_IDENTITY(0u, 0u | (0u))), (uint(_GLF_IDENTITY(0u, 0u | (0u)))) / 1u)), min(~ (_GLF_IDENTITY(uint(_GLF_IDENTITY(0u, 0u | (0u))), (uint(_GLF_IDENTITY(0u, 0u | (0u)))) / 1u)), ~ (_GLF_IDENTITY(uint(_GLF_IDENTITY(0u, 0u | (0u))), (uint(_GLF_IDENTITY(0u, 0u | (0u)))) / 1u)))))))), (false ? _GLF_FUZZED(_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY(_GLF_IDENTITY(uint(uvec2(subgroup_id, (uint(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, float(_GLF_IDENTITY(float(injectionSwitch.y), 0.0 + (float(injectionSwitch.y))))))) ^ uint(_GLF_ONE(1.0, injectionSwitch.y))))), (uint(uvec2(subgroup_id, (uint(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, float(_GLF_IDENTITY(float(injectionSwitch.y), 0.0 + (float(injectionSwitch.y))))))) ^ uint(_GLF_ONE(1.0, injectionSwitch.y)))))) ^ 0u), (false ? _GLF_FUZZED(subgroup_size) : uint(uvec2(subgroup_id, (uint(_GLF_ONE(1.0, injectionSwitch.y)) ^ uint(_GLF_ONE(1.0, injectionSwitch.y))))))))) : 0u)), 0u)))), uvec3(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, min(gl_NumWorkGroups, gl_NumWorkGroups)), clamp(_GLF_IDENTITY(gl_NumWorkGroups, min(gl_NumWorkGroups, gl_NumWorkGroups)), _GLF_IDENTITY(gl_NumWorkGroups, min(gl_NumWorkGroups, gl_NumWorkGroups)), _GLF_IDENTITY(gl_NumWorkGroups, min(gl_NumWorkGroups, gl_NumWorkGroups))))) + uvec3(0u, _GLF_IDENTITY(_GLF_IDENTITY(0u, uint(_GLF_IDENTITY(uint(_GLF_IDENTITY(0u, 0u | (0u))), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(uint(_GLF_IDENTITY(0u, 0u | (0u))), (uint(_GLF_IDENTITY(0u, 0u | (0u)))) / 1u)), min(~ (_GLF_IDENTITY(uint(_GLF_IDENTITY(0u, 0u | (0u))), (uint(_GLF_IDENTITY(0u, 0u | (0u)))) / 1u)), ~ (_GLF_IDENTITY(uint(_GLF_IDENTITY(0u, 0u | (0u))), (uint(_GLF_IDENTITY(0u, 0u | (0u)))) / 1u)))))))), (false ? _GLF_FUZZED(_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY(_GLF_IDENTITY(uint(uvec2(subgroup_id, (uint(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, float(_GLF_IDENTITY(float(injectionSwitch.y), 0.0 + (float(injectionSwitch.y))))))) ^ uint(_GLF_ONE(1.0, injectionSwitch.y))))), (uint(uvec2(subgroup_id, (uint(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, float(_GLF_IDENTITY(float(injectionSwitch.y), 0.0 + (float(injectionSwitch.y))))))) ^ uint(_GLF_ONE(1.0, injectionSwitch.y)))))) ^ 0u), (false ? _GLF_FUZZED(subgroup_size) : uint(uvec2(subgroup_id, (uint(_GLF_ONE(1.0, injectionSwitch.y)) ^ uint(_GLF_ONE(1.0, injectionSwitch.y))))))))) : 0u)), 0u), uvec3(1u, 1u, 1u) * ((_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, min(gl_NumWorkGroups, gl_NumWorkGroups)), clamp(_GLF_IDENTITY(gl_NumWorkGroups, min(gl_NumWorkGroups, gl_NumWorkGroups)), _GLF_IDENTITY(gl_NumWorkGroups, min(gl_NumWorkGroups, gl_NumWorkGroups)), _GLF_IDENTITY(gl_NumWorkGroups, min(gl_NumWorkGroups, gl_NumWorkGroups))))) + uvec3(0u, _GLF_IDENTITY(_GLF_IDENTITY(0u, uint(_GLF_IDENTITY(uint(_GLF_IDENTITY(0u, 0u | (0u))), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(uint(_GLF_IDENTITY(0u, 0u | (0u))), (uint(_GLF_IDENTITY(0u, 0u | (0u)))) / 1u)), min(~ (_GLF_IDENTITY(uint(_GLF_IDENTITY(0u, 0u | (0u))), (uint(_GLF_IDENTITY(0u, 0u | (0u)))) / 1u)), ~ (_GLF_IDENTITY(uint(_GLF_IDENTITY(0u, 0u | (0u))), (uint(_GLF_IDENTITY(0u, 0u | (0u)))) / 1u)))))))), (false ? _GLF_FUZZED(_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY(_GLF_IDENTITY(uint(uvec2(subgroup_id, (uint(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, float(_GLF_IDENTITY(float(injectionSwitch.y), 0.0 + (float(injectionSwitch.y))))))) ^ uint(_GLF_ONE(1.0, injectionSwitch.y))))), (uint(uvec2(subgroup_id, (uint(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, float(_GLF_IDENTITY(float(injectionSwitch.y), 0.0 + (float(injectionSwitch.y))))))) ^ uint(_GLF_ONE(1.0, injectionSwitch.y)))))) ^ 0u), (false ? _GLF_FUZZED(subgroup_size) : uint(uvec2(subgroup_id, (uint(_GLF_ONE(1.0, injectionSwitch.y)) ^ uint(_GLF_ONE(1.0, injectionSwitch.y))))))))) : 0u)), 0u))))))))))))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, clamp(gl_NumWorkGroups, gl_NumWorkGroups, gl_NumWorkGroups)), _GLF_IDENTITY((_GLF_IDENTITY(gl_NumWorkGroups, min(gl_NumWorkGroups, gl_NumWorkGroups))), ((_GLF_IDENTITY(gl_NumWorkGroups, min(gl_NumWorkGroups, gl_NumWorkGroups)))) + uvec3(0u, 0u, 0u)) + uvec3(0u, 0u, 0u)), uvec3(_GLF_IDENTITY(uvec4(_GLF_IDENTITY(gl_NumWorkGroups, (_GLF_IDENTITY(gl_NumWorkGroups, min(gl_NumWorkGroups, gl_NumWorkGroups))) + uvec3(0u, 0u, 0u)), 0u), (_GLF_IDENTITY(uvec4(_GLF_IDENTITY(gl_NumWorkGroups, (_GLF_IDENTITY(gl_NumWorkGroups, min(gl_NumWorkGroups, gl_NumWorkGroups))) + uvec3(0u, 0u, 0u)), 0u), (uvec4(_GLF_IDENTITY(gl_NumWorkGroups, _GLF_IDENTITY((_GLF_IDENTITY(gl_NumWorkGroups, min(gl_NumWorkGroups, gl_NumWorkGroups))) + uvec3(0u, 0u, 0u), (false ? _GLF_FUZZED(uvec3(6333u, 12140u, 158106u)) : _GLF_IDENTITY((_GLF_IDENTITY(gl_NumWorkGroups, min(gl_NumWorkGroups, gl_NumWorkGroups))) + uvec3(0u, 0u, 0u), ((_GLF_IDENTITY(gl_NumWorkGroups, min(gl_NumWorkGroups, gl_NumWorkGroups))) + uvec3(0u, 0u, 0u)) + uvec3(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)))))), 0u)) + uvec4(0u, 0u, 0u, 0u))) - uvec4(0u, 0u, 0u, 0u))))) ^ _GLF_IDENTITY(uvec3(0u, 0u, 0u), (uvec3(1u, 1u, 1u) & (uvec3(_GLF_IDENTITY(1u, ~ (~ (1u))), 1u, 1u) ^ uvec3(0u, 0u, 0u))) * (uvec3(0u, 0u, 0u)))).x : _GLF_FUZZED(15242u)));
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   return;
  }
 if(_GLF_DEAD(false))
  return;
 uint workgroup_size = gl_WorkGroupSize.x;
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY((false), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool((false)), false || (bool((false))))), true && (bool(_GLF_IDENTITY(bool((false)), false || (bool((false)))))))), ! (! (_GLF_IDENTITY((false), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool((false)), false || (bool((false))))), true && (bool(_GLF_IDENTITY(bool((false)), false || (bool((false))))))))))) && true)) || _GLF_IDENTITY(false, (false) && true)), (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
        return;
       if(_GLF_DEAD(false))
        return;
       return;
      }
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   return;
  }
 uint workgroup_id = gl_WorkGroupID.x;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      return;
     return;
    }
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_WRAPPED_IF_TRUE(true))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x, float(mat4x3(injectionSwitch.x, sqrt(1.0), 0.0, 0.0, _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-408.473))), _GLF_IDENTITY(0.0, (0.0) - 0.0), 0.0, 1.0, 0.0, 1.0, 0.0, 0.0))) > injectionSwitch.y) && true)), true && ((injectionSwitch.x > injectionSwitch.y))))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED((- -4111.1010)), _GLF_FUZZED(0.5)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(45.30, 73.36)) : _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)))).x < injectionSwitch.y)), true))).y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)), injectionSwitch)))), _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)), (injectionSwitch) * mat2(1.0)), injectionSwitch))))) * mat2(1.0), (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)), injectionSwitch), (_GLF_IDENTITY(clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)), injectionSwitch), min(clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)), injectionSwitch), clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)), injectionSwitch)))) - sqrt(vec2(0.0, 0.0))))))) * mat2(1.0), vec2(mat2x4((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)), injectionSwitch)))), (false ? _GLF_FUZZED(vec2(-387.481, 915.742)) : _GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), clamp((injectionSwitch) * mat2(1.0), _GLF_IDENTITY((injectionSwitch) * mat2(1.0), mix(vec2(((injectionSwitch) * mat2(1.0))[0], ((injectionSwitch) * mat2(1.0))[1]), vec2(_GLF_FUZZED(981.245), _GLF_FUZZED(681.000)), bvec2(false, false))), (injectionSwitch) * mat2(1.0)))), _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch))))))))) * mat2(1.0), 0.0, 0.0, 0.0, 1.0, 0.0, 0.0)))) * vec2(1.0, 1.0)), max(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)), (injectionSwitch) * mat2(1.0)), injectionSwitch))))) * mat2(1.0), (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)), injectionSwitch), (_GLF_IDENTITY(clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)), injectionSwitch), min(clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)), injectionSwitch), clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)), injectionSwitch)))) - sqrt(vec2(0.0, 0.0))))))) * mat2(1.0), vec2(mat2x4((_GLF_IDENTITY(injectionSwitch, vec2(0.0, _GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(float(subgroup_local_id)) : 0.0))) / 1.0)) + (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)), injectionSwitch))))) * mat2(1.0), 0.0, 0.0, 0.0, 1.0, 0.0, 0.0)))) * vec2(1.0, 1.0)), _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)), (injectionSwitch) * mat2(1.0)), injectionSwitch))))) * mat2(1.0), (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, vec2(0.0, _GLF_IDENTITY(0.0, min(0.0, 0.0))) + (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)), injectionSwitch), (_GLF_IDENTITY(clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)), injectionSwitch), min(clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)), injectionSwitch), clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)), injectionSwitch)))) - sqrt(vec2(0.0, 0.0))))))) * mat2(1.0), vec2(mat2x4((_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)), injectionSwitch))))) * mat2(1.0), 0.0, 0.0, 0.0, 1.0, 0.0, 0.0)))) * vec2(1.0, 1.0))))).y))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(false, (false) && true), true)), bool(_GLF_IDENTITY(bvec2(bool(bvec2(_GLF_IDENTITY(false, _GLF_IDENTITY((false) && true, true && ((false) && true))), true)), true), bvec2(bvec2(bvec2(bool(bvec2(_GLF_IDENTITY(false, (false) && true), true)), true)))))))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
      }
     if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, false)))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4((injectionSwitch.x > injectionSwitch.y), true, false, false))))))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            return;
           return;
          }
         return;
        }
       return;
       if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(true, true && (true)) && (_GLF_DEAD(false))))
        {
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(false))
          return;
         return;
        }
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true, true)))))
        return;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         return;
        }
       if(_GLF_DEAD(false))
        return;
       if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))
        return;
       if(_GLF_DEAD(false))
        return;
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
    }
  }
 else
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
    }
  }
 uint workgroup_base = workgroup_size * _GLF_IDENTITY(workgroup_id, (_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, true && (injectionSwitch.x < injectionSwitch.y)))) ? workgroup_id : _GLF_IDENTITY(_GLF_FUZZED(_GLF_IDENTITY(atomicMin(subgroup_size, subgroup_size), (_GLF_IDENTITY(atomicMin(subgroup_size, subgroup_size), 0u ^ (atomicMin(subgroup_size, subgroup_size)))) - (0u << _GLF_IDENTITY(uint(3u), uint(3u))))), (_GLF_FUZZED(_GLF_IDENTITY(_GLF_IDENTITY(atomicMin(subgroup_size, subgroup_size), (_GLF_IDENTITY(atomicMin(subgroup_size, subgroup_size), 0u ^ (atomicMin(subgroup_size, subgroup_size)))) - (0u << _GLF_IDENTITY(uint(3u), uint(3u)))), (_GLF_IDENTITY(_GLF_IDENTITY(atomicMin(subgroup_size, subgroup_size), (_GLF_IDENTITY(atomicMin(subgroup_size, subgroup_size), 0u ^ (atomicMin(subgroup_size, subgroup_size)))) - (0u << _GLF_IDENTITY(uint(3u), uint(3u)))), ~ (~ (_GLF_IDENTITY(atomicMin(subgroup_size, subgroup_size), (_GLF_IDENTITY(atomicMin(subgroup_size, subgroup_size), 0u ^ (atomicMin(subgroup_size, subgroup_size)))) - (0u << _GLF_IDENTITY(uint(3u), uint(3u)))))))) - 0u))) | 0u)));
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 uint virtual_gid = _GLF_IDENTITY(workgroup_base, (workgroup_base) >> 0u) + GLF_merged4_0_1_6_1_1_11_2_1_17_3_1_13read_1subgroup_idsubgroup_local_idsubgroup_size.y * GLF_merged4_0_1_6_1_1_11_2_1_17_3_1_13read_1subgroup_idsubgroup_local_idsubgroup_size.w + _GLF_IDENTITY(GLF_merged4_0_1_6_1_1_11_2_1_17_3_1_13read_1subgroup_idsubgroup_local_idsubgroup_size.z, (GLF_merged4_0_1_6_1_1_11_2_1_17_3_1_13read_1subgroup_idsubgroup_local_idsubgroup_size.z) ^ _GLF_IDENTITY(0u, (0u) | (_GLF_IDENTITY(0u, (false ? _GLF_FUZZED(subgroup_local_id) : 0u)))));
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bool(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && true))
    return;
   return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec2(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false)))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, true && (false))))))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, _GLF_IDENTITY(true, bool(bvec4(true, true, false, false))))))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, _GLF_IDENTITY(true, bool(bvec4(true, true, false, false))))))), ! (_GLF_IDENTITY(! (_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, _GLF_IDENTITY(true, bool(bvec4(true, true, false, false)))))))), (! (_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, _GLF_IDENTITY(true, bool(bvec4(true, true, false, false))))))))) && true)))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && true))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 uint next_virtual_gid = workgroup_base + GLF_merged4_0_1_6_1_1_11_2_1_17_3_1_13read_1subgroup_idsubgroup_local_idsubgroup_size.y * _GLF_IDENTITY(GLF_merged4_0_1_6_1_1_11_2_1_17_3_1_13read_1subgroup_idsubgroup_local_idsubgroup_size.w, _GLF_IDENTITY((GLF_merged4_0_1_6_1_1_11_2_1_17_3_1_13read_1subgroup_idsubgroup_local_idsubgroup_size.w) | (GLF_merged4_0_1_6_1_1_11_2_1_17_3_1_13read_1subgroup_idsubgroup_local_idsubgroup_size.w), ((GLF_merged4_0_1_6_1_1_11_2_1_17_3_1_13read_1subgroup_idsubgroup_local_idsubgroup_size.w) | (GLF_merged4_0_1_6_1_1_11_2_1_17_3_1_13read_1subgroup_idsubgroup_local_idsubgroup_size.w)) / 1u)) + ((_GLF_IDENTITY(GLF_merged4_0_1_6_1_1_11_2_1_17_3_1_13read_1subgroup_idsubgroup_local_idsubgroup_size.z + _GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) ^ 0)) + (0 << _GLF_IDENTITY(int(2), int(_GLF_IDENTITY(2, int(_GLF_IDENTITY(ivec2(2, 0), min(_GLF_IDENTITY(ivec2(_GLF_IDENTITY(2, int(ivec4(2, 1, 1, 1))), 0), _GLF_IDENTITY((ivec2(2, 0)) ^ ivec2(0, 0), max((ivec2(2, 0)) ^ ivec2(0, 0), (ivec2(2, 0)) ^ ivec2(0, 0)))), ivec2(2, 0))))))))), min(_GLF_IDENTITY(GLF_merged4_0_1_6_1_1_11_2_1_17_3_1_13read_1subgroup_idsubgroup_local_idsubgroup_size, uvec4(0u, 0u, 0u, 0u) ^ (GLF_merged4_0_1_6_1_1_11_2_1_17_3_1_13read_1subgroup_idsubgroup_local_idsubgroup_size)).z + _GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) ^ 0)) + (0 << _GLF_IDENTITY(int(2), int(_GLF_IDENTITY(2, int(_GLF_IDENTITY(ivec2(2, 0), min(_GLF_IDENTITY(ivec2(2, 0), (ivec2(2, 0)) ^ ivec2(_GLF_IDENTITY(0, _GLF_IDENTITY((0), max(_GLF_IDENTITY((0), ((0)) / 1), (0))) - 0), _GLF_IDENTITY(0, 0 ^ (0)))), ivec2(2, 0))))))))), GLF_merged4_0_1_6_1_1_11_2_1_17_3_1_13read_1subgroup_idsubgroup_local_idsubgroup_size.z + _GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) ^ 0)) + (_GLF_IDENTITY(0 << _GLF_IDENTITY(int(2), int(_GLF_IDENTITY(_GLF_IDENTITY(2, int(_GLF_IDENTITY(ivec2(2, 0), min(_GLF_IDENTITY(ivec2(2, 0), (ivec2(2, 0)) ^ _GLF_IDENTITY(ivec2(0, 0), ~ (~ (ivec2(0, 0))))), ivec2(2, 0))))), min(_GLF_IDENTITY(2, int(_GLF_IDENTITY(ivec2(2, 0), min(_GLF_IDENTITY(ivec2(2, 0), (ivec2(2, 0)) ^ _GLF_IDENTITY(ivec2(0, 0), ~ (~ (ivec2(0, 0))))), ivec2(2, 0))))), _GLF_IDENTITY(2, int(_GLF_IDENTITY(ivec2(2, 0), min(_GLF_IDENTITY(ivec2(2, 0), (ivec2(2, 0)) ^ _GLF_IDENTITY(ivec2(0, 0), ~ (_GLF_IDENTITY(~ (ivec2(0, 0)), (~ (ivec2(0, 0))) | (~ (ivec2(0, 0))))))), ivec2(2, 0))))))))), (_GLF_IDENTITY(0 << _GLF_IDENTITY(int(2), int(_GLF_IDENTITY(2, int(_GLF_IDENTITY(ivec2(2, 0), min(_GLF_IDENTITY(ivec2(2, 0), (ivec2(2, 0)) ^ ivec2(0, 0)), ivec2(_GLF_IDENTITY(2, (true ? 2 : _GLF_FUZZED(-98769))), 0))))))), _GLF_IDENTITY((0 << _GLF_IDENTITY(int(2), int(_GLF_IDENTITY(2, int(_GLF_IDENTITY(ivec2(2, 0), min(_GLF_IDENTITY(ivec2(2, 0), (ivec2(2, 0)) ^ ivec2(0, 0)), _GLF_IDENTITY(ivec2(2, 0), ivec2(0, 0) ^ (_GLF_IDENTITY(ivec2(2, 0), (true ? ivec2(2, 0) : _GLF_FUZZED(ivec2(-59680, -91018))))))))))))) + _GLF_IDENTITY(0, max(0, 0)), ((0 << _GLF_IDENTITY(int(2), int(_GLF_IDENTITY(2, int(_GLF_IDENTITY(ivec2(2, 0), min(_GLF_IDENTITY(ivec2(2, 0), (ivec2(2, 0)) ^ ivec2(0, 0)), _GLF_IDENTITY(ivec2(2, 0), ivec2(0, 0) ^ (_GLF_IDENTITY(ivec2(2, 0), (true ? ivec2(2, 0) : _GLF_FUZZED(ivec2(-59680, -91018))))))))))))) + _GLF_IDENTITY(0, max(0, 0))) ^ 0))) | _GLF_IDENTITY((0 << _GLF_IDENTITY(int(2), int(_GLF_IDENTITY(2, int(_GLF_IDENTITY(ivec2(2, 0), min(_GLF_IDENTITY(ivec2(2, 0), (ivec2(_GLF_IDENTITY(2, max(2, 2)), 0)) ^ ivec2(_GLF_IDENTITY(0, (_GLF_IDENTITY(0, (_GLF_IDENTITY(0, clamp(0, 0, 0))) | (0))) * 1), 0)), ivec2(2, 0)))))))), ~ (~ ((0 << _GLF_IDENTITY(int(2), int(_GLF_IDENTITY(2, int(_GLF_IDENTITY(ivec2(2, 0), min(_GLF_IDENTITY(ivec2(2, 0), (ivec2(_GLF_IDENTITY(2, max(2, 2)), 0)) ^ ivec2(_GLF_IDENTITY(0, (_GLF_IDENTITY(0, (_GLF_IDENTITY(0, clamp(0, 0, 0))) | (0))) * 1), 0)), ivec2(2, 0))))))))))))))))) % GLF_merged4_0_1_6_1_1_11_2_1_17_3_1_13read_1subgroup_idsubgroup_local_idsubgroup_size.w);
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 atomicStore(buf[next_virtual_gid], uint(_GLF_IDENTITY(_GLF_IDENTITY(1, ~ (_GLF_IDENTITY(~ (1), max(~ (1), ~ (1))))), _GLF_IDENTITY((_GLF_IDENTITY(1, _GLF_IDENTITY((1) >> (0 >> _GLF_IDENTITY(int(6), int(6))), (_GLF_IDENTITY((1) >> (0 >> _GLF_IDENTITY(int(6), int(6))), _GLF_IDENTITY(min((1) >> (0 >> _GLF_IDENTITY(_GLF_IDENTITY(int(6), int(6)), min(_GLF_IDENTITY(int(6), int(6)), _GLF_IDENTITY(int(6), int(6))))), _GLF_IDENTITY((1), max((1), _GLF_IDENTITY((1), ((1)) | (_GLF_IDENTITY((1), int(ivec4((1), 1, 1, 1))))))) >> (0 >> _GLF_IDENTITY(int(6), int(_GLF_IDENTITY(6, (false ? _GLF_FUZZED(64414) : 6)))))), _GLF_IDENTITY(min(_GLF_IDENTITY(min((1) >> (0 >> _GLF_IDENTITY(int(6), int(6))), (1) >> (0 >> _GLF_IDENTITY(int(6), int(6)))), (min((1) >> (0 >> _GLF_IDENTITY(int(6), int(6))), (1) >> (0 >> _GLF_IDENTITY(int(6), int(6))))) - 0), _GLF_IDENTITY(min((1) >> (0 >> _GLF_IDENTITY(int(6), int(6))), (1) >> (_GLF_IDENTITY(_GLF_IDENTITY(0, (false ? _GLF_FUZZED(79497) : 0)), clamp(0, 0, _GLF_IDENTITY(0, clamp(0, 0, 0)))) >> _GLF_IDENTITY(int(6), int(6)))), ~ (~ (min((1) >> (0 >> _GLF_IDENTITY(int(6), int(6))), _GLF_IDENTITY((1) >> (_GLF_IDENTITY(0, clamp(0, 0, _GLF_IDENTITY(0, _GLF_IDENTITY(clamp(0, 0, 0), clamp(clamp(0, 0, 0), clamp(0, 0, 0), clamp(0, 0, 0)))))) >> _GLF_IDENTITY(int(6), int(6))), 0 + ((1) >> (_GLF_IDENTITY(0, clamp(0, 0, _GLF_IDENTITY(0, clamp(0, 0, 0)))) >> _GLF_IDENTITY(int(6), int(6)))))))))), min(_GLF_IDENTITY(min(min(_GLF_IDENTITY((1) >> (0 >> _GLF_IDENTITY(int(6), int(6))), ((1) >> (0 >> _GLF_IDENTITY(int(6), int(6)))) ^ 0), (1) >> (_GLF_IDENTITY(0, max(_GLF_IDENTITY(0, (0) * 1), 0)) >> _GLF_IDENTITY(int(6), int(6)))), min((1) >> (0 >> _GLF_IDENTITY(int(6), int(6))), (1) >> (0 >> _GLF_IDENTITY(_GLF_IDENTITY(int(6), (int(6)) - 0), int(6))))), (min(min((1) >> (0 >> _GLF_IDENTITY(int(6), int(6))), (_GLF_IDENTITY(1, (1) | (1))) >> (0 >> _GLF_IDENTITY(int(6), int(6)))), min((1) >> (0 >> _GLF_IDENTITY(int(_GLF_IDENTITY(6, (0 ^ 0) | (_GLF_IDENTITY(6, (6) << 0)))), int(6))), (1) >> (0 >> _GLF_IDENTITY(int(6), int(6)))))) - 0), min(_GLF_IDENTITY(min((1) >> (0 >> _GLF_IDENTITY(int(6), int(6))), (1) >> (0 >> _GLF_IDENTITY(int(6), int(6)))), (min((1) >> (_GLF_IDENTITY(0, _GLF_IDENTITY(int(int(_GLF_IDENTITY(0, (0) / 1))), 1 * (int(int(_GLF_IDENTITY(0, (_GLF_IDENTITY(0, clamp(0, 0, 0))) / 1)))))) >> _GLF_IDENTITY(int(6), int(6))), (1) >> (0 >> _GLF_IDENTITY(int(6), int(6))))) << 0), min((1) >> (0 >> _GLF_IDENTITY(int(6), int(6))), (1) >> (0 >> _GLF_IDENTITY(int(6), int(6)))))))))) | _GLF_IDENTITY(0, int(ivec4(_GLF_IDENTITY(0, _GLF_IDENTITY(min(0, 0), 1 * (min(0, 0)))), 1, (0 | 0), 0)))))), ((_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(-1309)))) >> (0 >> _GLF_IDENTITY(_GLF_IDENTITY(int(_GLF_IDENTITY(6, int(ivec3(6, 0, (0 << _GLF_IDENTITY(int(7), _GLF_IDENTITY(int(7), clamp(int(7), int(7), int(7))))))))), int(6)), (_GLF_IDENTITY(_GLF_IDENTITY(int(6), int(6)), (_GLF_IDENTITY(int(6), int(6))) * 1)) ^ 0))))) | _GLF_IDENTITY(0, 0 ^ (0))) - _GLF_IDENTITY((_GLF_IDENTITY(0, (true ? 0 : _GLF_FUZZED(-65737))) | 0), (_GLF_IDENTITY(_GLF_IDENTITY((0 | 0), 0 | (_GLF_IDENTITY((0 | 0), ~ (~ ((0 | 0)))))), ((0 | 0)) | ((_GLF_IDENTITY(0, ~ (~ (0))) | 0)))) | (_GLF_IDENTITY((0 | 0), ((0 | 0)) | ((0 | _GLF_IDENTITY(0, 1 * (_GLF_IDENTITY(_GLF_IDENTITY(0, (0) >> 0), 0 + (0))))))))))), 4, 64, 4);
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
     if(_GLF_DEAD(false))
      return;
    }
   return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, true, true)), (bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, true, true))) || false))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   return;
  }
 uint read_1 = atomicLoad(buf[virtual_gid], 4, 64, _GLF_IDENTITY(0, (true ? 0 : _GLF_FUZZED(-43663))));
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), (false) || false), (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 GLF_merged4_0_1_6_1_1_11_2_1_17_3_1_13read_1subgroup_idsubgroup_local_idsubgroup_size.x = read_1;
 do
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    continue;
   for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
      break;
     if(_GLF_DEAD(false))
      continue;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY((false), (_GLF_IDENTITY((_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, true)), _GLF_IDENTITY(! (! _GLF_IDENTITY((_GLF_IDENTITY(bool(bvec4(false, _GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec2((injectionSwitch.x > injectionSwitch.y), false)))), true, true)), _GLF_IDENTITY((bool(bvec4(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, true))), bool(bvec4(_GLF_IDENTITY((bool(bvec4(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, true))), ((bool(bvec4(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, true)))) && true), true, true, true))) && true)), ! (! ((_GLF_IDENTITY(bool(bvec4(false, _GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), bool(bvec3(! ((injectionSwitch.x > injectionSwitch.y)), true, false)))))), true, true)), (bool(bvec4(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, true))) && true)))))), true && (! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec4(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, true)), ! (! (bool(bvec4(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, true))))), false || (_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec4(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, true)), ! (! (bool(bvec4(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, true))))), (_GLF_IDENTITY(bool(bvec4(false, _GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false)) || false)), true, true)), ! (! (bool(bvec4(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, true)))))) || false))), (bool(bvec4(false, _GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), (injectionSwitch.x) + sin(sin(0.0))) > injectionSwitch.y)), true, true))) && true)))))))), ! (_GLF_IDENTITY(! ((_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(true, true && (true)), true)), _GLF_IDENTITY(_GLF_IDENTITY(! (! _GLF_IDENTITY((_GLF_IDENTITY(bool(bvec4(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, true)), (bool(bvec4(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, true))) && true)), ! (! ((_GLF_IDENTITY(bool(bvec4(false, _GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), bool(bvec3(! ((injectionSwitch.x > injectionSwitch.y)), true, false)))))), true, true)), (bool(bvec4(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, true))) && true)))))), false || (! (! _GLF_IDENTITY((_GLF_IDENTITY(bool(bvec4(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, true)), (bool(bvec4(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, _GLF_IDENTITY(true, bool(bvec4(true, true, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))) && true)), ! (! ((_GLF_IDENTITY(bool(bvec4(false, _GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), bool(bvec3(! ((injectionSwitch.x > injectionSwitch.y)), true, false)))))), true, true)), (bool(bvec4(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, true))) && true)))))))), true && (! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec4(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, true)), ! (! (bool(bvec4(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, true))))), false || (_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec4(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, true)), ! (! (bool(bvec4(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, true))))), (_GLF_IDENTITY(bool(bvec4(false, _GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false)) || false)), true, true)), ! (! (bool(bvec4(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, true)))))) || false))), (_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec4(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, true)), ! (! (bool(bvec4(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, true))))), false || (_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec4(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, true)), ! (! (bool(bvec4(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, true))))), (_GLF_IDENTITY(bool(bvec4(false, _GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(-37.87), _GLF_FUZZED(9.9)), bvec2(false, false))).y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false)) || false)), true, true)), ! (! (bool(bvec4(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, true)))))) || false)))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), (bool(bvec4(false, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + sin(sin(0.0))) > injectionSwitch.y)), true, true))) && true))))))))), true && (! ((_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-2027.3508)), bool(false))) > injectionSwitch.y)), true, true)), _GLF_IDENTITY(! (! _GLF_IDENTITY((_GLF_IDENTITY(bool(bvec4(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, true)), (bool(bvec4(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, true))) && true)), ! (! ((_GLF_IDENTITY(bool(bvec4(false, _GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), bool(bvec3(! ((injectionSwitch.x > injectionSwitch.y)), true, false)))))), true, true)), (bool(bvec4(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, true))) && true)))))), true && (! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec4(false, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bool(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), false || (! (injectionSwitch.x > injectionSwitch.y)))))))))), true, true)), ! (! (bool(bvec4(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, true))))), false || (_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec4(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, true)), ! (! _GLF_IDENTITY((bool(bvec4(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, true))), bool(bvec2((bool(bvec4(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, true))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), (_GLF_IDENTITY(bool(bvec4(false, _GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false)) || false)), true, true)), ! (! (bool(bvec4(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, true)))))) || false))), (bool(bvec4(false, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + sin(sin(0.0))) > injectionSwitch.y)), true, true))) && true)))))))))))))) && true) && true)))
      {
       if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), (_GLF_IDENTITY(injectionSwitch.x, float(mat2x3(injectionSwitch.x, sqrt(1.0), 1.0, 0.0, 1.0, 0.0))) > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          continue;
         if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (_GLF_IDENTITY(! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bool(_GLF_IDENTITY(bvec2(! (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(_GLF_IDENTITY(vec2(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[_GLF_IDENTITY(1, (1) | (1))]))), min(_GLF_IDENTITY(vec2(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))), (true ? vec2(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(injectionSwitch[0], injectionSwitch[1]), max(vec2(injectionSwitch[0], injectionSwitch[1]), vec2(injectionSwitch[0], injectionSwitch[1]))))) : _GLF_FUZZED(vec2(-4.9, 1072.6429)))), vec2(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))))), (vec2(vec2(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))))) + vec2(0.0, 0.0))).x > injectionSwitch.y)))), true), bvec2(bvec3(bvec2(! (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(vec2(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], clamp(_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), _GLF_IDENTITY(injectionSwitch, vec2(mat4(injectionSwitch, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 1.0, 0.0, 1.0, 0.0, length(vec3(0.0, 0.0, 0.0)), 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0))), injectionSwitch))[1], injectionSwitch[1], injectionSwitch[1])))))), (vec2(vec2(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))))) + _GLF_IDENTITY(vec2(0.0, 0.0), max(vec2(0.0, 0.0), vec2(0.0, 0.0))))).x > injectionSwitch.y)))), true), false))))))), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false)), ! (_GLF_IDENTITY(! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(! (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(vec2(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[_GLF_IDENTITY(1, (1) ^ 0)])))), (vec2(vec2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)), vec2(injectionSwitch[0], injectionSwitch[1]))))) + vec2(0.0, 0.0))).x > injectionSwitch.y)))), true), bvec2(bvec3(bvec2(! (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(vec2(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))), (vec2(vec2(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))))) + vec2(0.0, 0.0))).x > injectionSwitch.y)))), true), false))), _GLF_IDENTITY(bvec2(bvec2(_GLF_IDENTITY(bvec2(! (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(vec2(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[_GLF_IDENTITY(1, (1) ^ 0)])))), (vec2(vec2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)), vec2(injectionSwitch[0], injectionSwitch[1]))))) + vec2(0.0, 0.0))).x > injectionSwitch.y)))), true), bvec2(bvec3(bvec2(! (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(vec2(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))), (vec2(vec2(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))))) + vec2(0.0, 0.0))).x > injectionSwitch.y)))), true), false))))), bvec2(bvec3(bvec2(bvec2(_GLF_IDENTITY(bvec2(! (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(vec2(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[_GLF_IDENTITY(1, (1) ^ 0)])))), (vec2(vec2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)), vec2(injectionSwitch[0], injectionSwitch[1]))))) + vec2(0.0, 0.0))).x > injectionSwitch.y)))), true), bvec2(bvec3(bvec2(! (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(vec2(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))), (vec2(vec2(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))))) + vec2(0.0, 0.0))).x > injectionSwitch.y)))), true), false))))), false)))))))), false, false)), _GLF_IDENTITY(bool(bvec3(bool(bvec3(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(_GLF_IDENTITY(bvec3((injectionSwitch.x > injectionSwitch.y), false, false), bvec3(bvec3(bvec3((injectionSwitch.x > injectionSwitch.y), false, false)))))))), ! (_GLF_IDENTITY(! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bool(_GLF_IDENTITY(bvec2(! (_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(vec2(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))), (vec2(vec2(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))))) + vec2(0.0, 0.0))), mat2(1.0) * (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(vec2(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))), (vec2(vec2(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))))) + vec2(0.0, 0.0))))).x > injectionSwitch.y), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(vec2(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))), (vec2(vec2(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))))) + vec2(0.0, 0.0))), mat2(1.0) * (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(vec2(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))), (vec2(vec2(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))))) + vec2(0.0, 0.0))))).x > injectionSwitch.y), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(vec2(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))), (vec2(vec2(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))))) + vec2(0.0, 0.0))), mat2(1.0) * (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(vec2(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)), injectionSwitch, injectionSwitch))[0], injectionSwitch[1])))), (vec2(vec2(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))))) + vec2(0.0, 0.0))))).x > injectionSwitch.y)), ! (! (bool((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(vec2(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))), (vec2(vec2(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))))) + vec2(0.0, 0.0))), _GLF_IDENTITY(mat2(1.0) * (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(vec2(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))), (vec2(vec2(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))))) + vec2(0.0, 0.0)))), (mat2(1.0) * (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(vec2(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))), (vec2(vec2(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))))) + vec2(0.0, 0.0))))) - vec2(0.0, 0.0))).x > injectionSwitch.y)))))), ! (! (bool(_GLF_IDENTITY(bool((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(vec2(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(injectionSwitch[0], injectionSwitch[1]), _GLF_IDENTITY(vec2(mat2x4(vec2(injectionSwitch[0], injectionSwitch[1]), 1.0, exp(0.0), 0.0, _GLF_IDENTITY(dot(vec4(0.0, 1.0, 1.0, 1.0), vec4(1.0, 0.0, 0.0, 0.0)), dot(vec4(0.0, 1.0, 1.0, 1.0), vec4(1.0, 0.0, 0.0, 0.0))), round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), 0.0)), vec2(1.0, 1.0) * (vec2(mat2x4(vec2(injectionSwitch[0], injectionSwitch[1]), 1.0, exp(0.0), 0.0, _GLF_IDENTITY(dot(vec4(0.0, 1.0, 1.0, 1.0), vec4(1.0, 0.0, 0.0, 0.0)), dot(vec4(0.0, 1.0, 1.0, 1.0), vec4(1.0, 0.0, 0.0, 0.0))), round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), 0.0)))))))), (vec2(vec2(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))))) + vec2(0.0, 0.0))), mat2(1.0) * (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(vec2(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))), (vec2(vec2(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))))) + vec2(0.0, 0.0))))).x > injectionSwitch.y)), ! (! (bool((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(vec2(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))), (vec2(vec2(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))))) + vec2(0.0, 0.0))), mat2(1.0) * (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(vec2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), (true ? _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])) : _GLF_FUZZED(vec2(2280.0834, 2.0)))))), (vec2(vec2(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[_GLF_IDENTITY(0, 0 ^ (0))], injectionSwitch[1]))))) + vec2(0.0, 0.0))))).x > injectionSwitch.y)))))))))), true, false)), ! (! (_GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(vec2(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))), (vec2(vec2(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))))) + vec2(0.0, 0.0))), mat2(1.0) * (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(vec2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(-9.5, -6.2)) : _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)))), vec2(injectionSwitch[0], injectionSwitch[1])))), (_GLF_IDENTITY(vec2(vec2(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))), max(vec2(vec2(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))), vec2(vec2(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))))))) + vec2(0.0, 0.0))))).x > injectionSwitch.y), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(vec2(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))), (vec2(vec2(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))))) + vec2(0.0, 0.0))), mat2(1.0) * _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(vec2(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))), (vec2(vec2(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))))) + vec2(0.0, 0.0)))), mat2(1.0) * ((_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(vec2(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))), (vec2(vec2(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))))) + vec2(0.0, 0.0))))))).x, mix(float(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(vec2(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))), (vec2(vec2(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))))) + vec2(0.0, 0.0))), mat2(1.0) * _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(vec2(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))), (vec2(vec2(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))))) + vec2(0.0, 0.0)))), mat2(1.0) * ((_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(vec2(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))), (vec2(vec2(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))))) + vec2(0.0, 0.0))))))).x, float(vec2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(vec2(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))), (vec2(vec2(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))))) + vec2(0.0, 0.0))), mat2(1.0) * _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(vec2(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))), (vec2(vec2(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))))) + vec2(0.0, 0.0)))), mat2(1.0) * ((_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(vec2(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))), (vec2(vec2(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))))) + vec2(0.0, 0.0))))))).x, mix(float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(vec2(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))), (vec2(vec2(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))))) + vec2(0.0, 0.0))), mat2(1.0) * _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(vec2(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))), (vec2(vec2(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))))) + vec2(0.0, 0.0)))), mat2(1.0) * ((_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(vec2(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))), (vec2(vec2(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))))) + vec2(0.0, 0.0))))))).x), float(_GLF_FUZZED(6.1)), bool(false))), 0.0)))), float(_GLF_FUZZED(294.318)), bool(false))) > injectionSwitch.y)), ! (! (bool((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(vec2(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))), (vec2(vec2(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))))) + vec2(0.0, 0.0))), mat2(1.0) * (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(vec2(vec2(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))), vec2(mat3x4(_GLF_IDENTITY(vec2(vec2(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))), min(vec2(vec2(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))), vec2(vec2(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))))), 0.0, 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), determinant(mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, tan(0.0))), 1.0, 1.0, 0.0, 0.0, 1.0))), (vec2(vec2(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))))) + vec2(0.0, 0.0))))).x > injectionSwitch.y)))))), ! (! (bool(_GLF_IDENTITY(bool((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(vec2(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch : _GLF_FUZZED(vec2(9273.2981, -78.86))))[1])))), (vec2(vec2(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))))) + vec2(0.0, 0.0))), mat2(1.0) * (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(vec2(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))), (vec2(_GLF_IDENTITY(vec2(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))), max(vec2(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))), vec2(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))))))) + vec2(0.0, 0.0))))).x > injectionSwitch.y)), ! (! (bool((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(vec2(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], mix(float(injectionSwitch[0]), float(_GLF_FUZZED(-22.17)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), injectionSwitch[1])))), (vec2(vec2(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))))) + vec2(0.0, 0.0))), mat2(1.0) * (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(vec2(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))), (vec2(vec2(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))))) + vec2(0.0, 0.0))))).x > injectionSwitch.y)))))))))), true, false)), true && (bool(bvec3(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(vec2(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))), (vec2(vec2(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], mix(float(_GLF_FUZZED(2773.9115)), float(injectionSwitch[1]), bool(true)))))))) + vec2(0.0, 0.0))), mat2(1.0) * (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(vec2(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))), (vec2(vec2(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch))[1]))))) + vec2(0.0, 0.0))))).x > injectionSwitch.y), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(vec2(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], float(mat4(injectionSwitch[1], 1.0, abs(1.0), _GLF_ONE(1.0, injectionSwitch.y), round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), 1.0, 1.0, 0.0, 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 1.0, 1.0, 1.0, 0.0))))))), (vec2(vec2(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))))) + vec2(0.0, 0.0))), mat2(1.0) * (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(vec2(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))), _GLF_IDENTITY((vec2(vec2(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))))), vec2(1.0, 1.0) * ((vec2(vec2(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))))))) + vec2(0.0, 0.0))))).x > injectionSwitch.y)), ! (! (bool((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(vec2(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))), (vec2(vec2(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))))) + vec2(0.0, 0.0))), mat2(1.0) * (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(vec2(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))), (vec2(vec2(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], clamp(injectionSwitch[1], _GLF_IDENTITY(injectionSwitch[1], (injectionSwitch[1]) / 1.0), injectionSwitch[1]))))))) + vec2(_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(53.04)), float(0.0), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), 0.0))))).x > injectionSwitch.y)))))), ! (! (bool(_GLF_IDENTITY(bool((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(vec2(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))), (vec2(vec2(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))))) + vec2(0.0, 0.0))), mat2(1.0) * (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(fract(injectionSwitch)) : injectionSwitch)), injectionSwitch)), _GLF_IDENTITY(vec2(vec2(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))), (vec2(vec2(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))))) + vec2(0.0, 0.0))))).x > injectionSwitch.y)), ! (! (bool((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(vec2(vec2(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))), (vec2(vec2(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))))) + vec2(0.0, 0.0)), mix(vec2((_GLF_IDENTITY(vec2(vec2(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))), (vec2(vec2(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))))) + vec2(0.0, 0.0)))[0], (_GLF_IDENTITY(vec2(vec2(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))), (vec2(vec2(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))))) + vec2(0.0, 0.0)))[1]), vec2(_GLF_FUZZED(-0.2), _GLF_FUZZED(63.25)), bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)))), mat2(1.0) * (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(vec2(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))), (vec2(vec2(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))))) + vec2(0.0, 0.0))))).x > injectionSwitch.y)))))))))), true, false))))))))))), true), bvec2(bvec3(bvec2(! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(vec2(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))), (vec2(vec2(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))))) + vec2(0.0, 0.0))).x > _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat4(injectionSwitch, 0.0, 1.0, cos(0.0), determinant(mat2(0.0, sin(0.0), 0.0, 0.0)), 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, round(length(normalize(vec3(1.0, 1.0, 1.0)))), 1.0, _GLF_IDENTITY(0.0, float(mat4(0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0)))), transpose(transpose(mat4(injectionSwitch, 0.0, 1.0, cos(0.0), determinant(mat2(0.0, sin(0.0), 0.0, 0.0)), 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, round(length(normalize(vec3(1.0, 1.0, 1.0)))), 1.0, _GLF_IDENTITY(0.0, float(mat4(0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0))))))))).y, bool(bvec4(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(vec2(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))), (vec2(vec2(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))))) + vec2(0.0, 0.0))).x > _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat4(injectionSwitch, 0.0, 1.0, cos(0.0), determinant(mat2(0.0, sin(0.0), 0.0, 0.0)), 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, round(length(normalize(vec3(1.0, 1.0, 1.0)))), 1.0, _GLF_IDENTITY(0.0, float(mat4(0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0)))), transpose(transpose(mat4(injectionSwitch, 0.0, 1.0, cos(0.0), determinant(mat2(0.0, sin(0.0), 0.0, 0.0)), 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, round(length(normalize(vec3(1.0, 1.0, 1.0)))), 1.0, _GLF_IDENTITY(0.0, float(mat4(0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0))))))))).y, true, true, true)))))), true && (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(vec2(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))), (vec2(vec2(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))))) + vec2(0.0, 0.0))).x > _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat4(injectionSwitch, 0.0, 1.0, cos(0.0), determinant(mat2(0.0, sin(0.0), 0.0, 0.0)), 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, round(length(normalize(vec3(1.0, 1.0, 1.0)))), 1.0, _GLF_IDENTITY(0.0, float(mat4(0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0)))), transpose(transpose(mat4(injectionSwitch, 0.0, 1.0, cos(0.0), determinant(mat2(0.0, sin(0.0), 0.0, 0.0)), 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, round(length(normalize(vec3(1.0, 1.0, 1.0)))), 1.0, _GLF_IDENTITY(0.0, float(mat4(0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0))))))))).y, bool(bvec4(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(vec2(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))), (vec2(vec2(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))))) + vec2(0.0, 0.0))).x > _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat4(injectionSwitch, 0.0, 1.0, cos(0.0), determinant(mat2(0.0, sin(0.0), 0.0, 0.0)), 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, round(length(normalize(vec3(1.0, 1.0, 1.0)))), 1.0, _GLF_IDENTITY(0.0, float(mat4(0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0)))), transpose(transpose(mat4(injectionSwitch, 0.0, 1.0, cos(0.0), determinant(mat2(0.0, sin(0.0), 0.0, 0.0)), 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, round(length(normalize(vec3(1.0, 1.0, 1.0)))), 1.0, _GLF_IDENTITY(0.0, float(mat4(0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0))))))))).y, true, true, true)))))), ! (_GLF_IDENTITY(! (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(vec2(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))), (vec2(vec2(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))))) + vec2(0.0, 0.0))).x > _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat4(injectionSwitch, 0.0, 1.0, cos(0.0), determinant(mat2(0.0, sin(0.0), 0.0, 0.0)), 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, round(length(normalize(vec3(1.0, 1.0, 1.0)))), 1.0, _GLF_IDENTITY(0.0, float(mat4(0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0)))), transpose(transpose(mat4(injectionSwitch, 0.0, 1.0, cos(0.0), determinant(mat2(0.0, sin(0.0), 0.0, 0.0)), 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, round(length(normalize(vec3(1.0, 1.0, 1.0)))), 1.0, _GLF_IDENTITY(0.0, float(mat4(0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0))))))))).y, bool(bvec4(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(vec2(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))), (vec2(vec2(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))))) + vec2(0.0, 0.0))).x > _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat4(injectionSwitch, 0.0, 1.0, cos(0.0), determinant(mat2(0.0, sin(0.0), 0.0, 0.0)), 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, round(length(normalize(vec3(1.0, 1.0, 1.0)))), 1.0, _GLF_IDENTITY(0.0, float(mat4(0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0)))), transpose(transpose(mat4(injectionSwitch, 0.0, 1.0, cos(0.0), determinant(mat2(0.0, sin(0.0), 0.0, 0.0)), 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, round(length(normalize(vec3(1.0, 1.0, 1.0)))), 1.0, _GLF_IDENTITY(0.0, float(mat4(0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0))))))))).y, true, true, true))))))), bool(bvec2(! (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(vec2(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))), (vec2(vec2(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))))) + vec2(0.0, 0.0))).x > _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat4(injectionSwitch, 0.0, 1.0, cos(0.0), determinant(mat2(0.0, sin(0.0), 0.0, 0.0)), 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, round(length(normalize(vec3(1.0, 1.0, 1.0)))), 1.0, _GLF_IDENTITY(0.0, float(mat4(0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0)))), transpose(transpose(mat4(injectionSwitch, 0.0, 1.0, cos(0.0), determinant(mat2(0.0, sin(0.0), 0.0, 0.0)), 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, round(length(normalize(vec3(1.0, 1.0, 1.0)))), 1.0, _GLF_IDENTITY(0.0, float(mat4(0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0))))))))).y, bool(bvec4(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(vec2(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))), (vec2(vec2(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))))) + vec2(0.0, 0.0))).x > _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat4(injectionSwitch, 0.0, 1.0, cos(0.0), determinant(mat2(0.0, sin(0.0), 0.0, 0.0)), 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, round(length(normalize(vec3(1.0, 1.0, 1.0)))), 1.0, _GLF_IDENTITY(0.0, float(mat4(0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0)))), transpose(transpose(mat4(injectionSwitch, 0.0, 1.0, cos(0.0), determinant(mat2(0.0, sin(0.0), 0.0, 0.0)), 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, round(length(normalize(vec3(1.0, 1.0, 1.0)))), 1.0, _GLF_IDENTITY(0.0, float(mat4(0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0))))))))).y, true, true, true))))))), true)))))))), true), false))))))), false, false)), false, _GLF_IDENTITY(false, (false) && true))), ! (_GLF_IDENTITY(! (bool(bvec3(bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), ! (_GLF_IDENTITY(! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bool(_GLF_IDENTITY(bvec2(! (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(vec2(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))), (vec2(vec2(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], (_GLF_IDENTITY(injectionSwitch[0], clamp(_GLF_IDENTITY(injectionSwitch[0], mix(float(_GLF_FUZZED(7.6)), float(injectionSwitch[0]), bool(true))), injectionSwitch[0], injectionSwitch[0]))) / sqrt(1.0)), injectionSwitch[1]))))) + vec2(0.0, 0.0))).x > injectionSwitch.y)))), true), bvec2(bvec3(bvec2(! (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(vec2(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))), (vec2(vec2(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))))) + vec2(_GLF_IDENTITY(0.0, max(0.0, _GLF_IDENTITY(0.0, (0.0) - 0.0))), 0.0))).x > injectionSwitch.y)))), true), false))))))), bool(bool(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), ! (_GLF_IDENTITY(! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bool(_GLF_IDENTITY(bvec2(! (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(vec2(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))), (vec2(vec2(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], (_GLF_IDENTITY(injectionSwitch[0], clamp(_GLF_IDENTITY(injectionSwitch[0], mix(float(_GLF_FUZZED(7.6)), float(injectionSwitch[0]), bool(true))), injectionSwitch[0], injectionSwitch[0]))) / sqrt(1.0)), injectionSwitch[1]))))) + vec2(0.0, 0.0))).x > injectionSwitch.y)))), true), bvec2(bvec3(bvec2(! (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(vec2(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))), (vec2(vec2(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))))) + vec2(_GLF_IDENTITY(0.0, max(0.0, _GLF_IDENTITY(0.0, (0.0) - 0.0))), 0.0))).x > injectionSwitch.y)))), true), false)))))))))), _GLF_IDENTITY(false, _GLF_IDENTITY(false || (_GLF_IDENTITY(false, ! (! (false)))), false || (false || (_GLF_IDENTITY(false, ! (! (false))))))), false)), false, false))), (! (bool(bvec3(bool(bvec3(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)))), _GLF_IDENTITY(false, false || (false))), _GLF_IDENTITY(bvec3(bvec4(_GLF_IDENTITY(bvec3(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_IDENTITY(false, false || (false))), bvec3(bvec3(bvec3(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_IDENTITY(false, false || (false)))))), false)), bvec3(bvec3(bvec3(bvec4(_GLF_IDENTITY(bvec3(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_IDENTITY(false, false || (false))), bvec3(bvec3(bvec3(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_IDENTITY(false, false || (false)))))), false)))))))), (injectionSwitch.x > injectionSwitch.y))), ! (_GLF_IDENTITY(! (_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false)), (injectionSwitch.x > injectionSwitch.y)))), bool(_GLF_IDENTITY(bvec2(! (_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) || false), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(vec2(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))), (vec2(vec2(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))))) + vec2(0.0, 0.0))).x > injectionSwitch.y, ! (! (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(vec2(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))), (vec2(vec2(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], (true ? injectionSwitch[0] : _GLF_FUZZED(2821.7457))), injectionSwitch[1]))))) + vec2(0.0, 0.0))).x, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(vec2(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))), (vec2(vec2(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], (true ? injectionSwitch[0] : _GLF_FUZZED(2821.7457))), injectionSwitch[1]))))) + vec2(0.0, 0.0))).x) / determinant(mat4(1.0, 0.0, 1.0, _GLF_IDENTITY(1.0, (1.0) + log(1.0)), 0.0, 1.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(1.0, 1.0, 0.0)), dot(vec3(0.0, 0.0, 1.0), vec3(1.0, 1.0, 0.0))), 1.0, 0.0, 0.0, 0.0, tan(0.0), 1.0))) > injectionSwitch.y))))))), true), bvec2(bvec3(bvec2(! (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(vec2(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))), (vec2(vec2(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))))) + vec2(0.0, 0.0))).x > injectionSwitch.y)))), true), false))))))), false, false)), false, false)))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))
          break;
         return;
         if(_GLF_DEAD(false))
          continue;
        }
       break;
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        break;
       continue;
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
      break;
     if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(mat4x3(injectionSwitch.y, 1.0, 0.0, _GLF_IDENTITY(abs(0.0), (true ? abs(0.0) : _GLF_IDENTITY(_GLF_FUZZED(9.3), (true ? _GLF_FUZZED(9.3) : _GLF_FUZZED(-70.54))))), 0.0, 1.0, 0.0, 0.0, determinant(mat4(1.0, 1.0, _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-4959.6378)), float(1.0), bool(true))), 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0)), 1.0, 1.0, 1.0)), 0.0 + (float(mat4x3(_GLF_IDENTITY(injectionSwitch.y, 1.0 * (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - sqrt(vec2(0.0, 0.0)))) / vec2(1.0, 1.0)).y)), 1.0, 0.0, abs(0.0), _GLF_IDENTITY(0.0, (0.0) - _GLF_ZERO(0.0, injectionSwitch.x)), 1.0, 0.0, 0.0, determinant(mat4(1.0, _GLF_IDENTITY(1.0, _GLF_IDENTITY(_GLF_IDENTITY((1.0), mix(float(_GLF_FUZZED(0.1)), float((1.0)), bool(true))), (_GLF_IDENTITY((1.0), (true ? (1.0) : _GLF_FUZZED(-0.3)))) / 1.0) / 1.0), _GLF_IDENTITY(1.0, (_GLF_IDENTITY(false, (false) && true) ? _GLF_FUZZED(-2.7) : _GLF_IDENTITY(1.0, _GLF_IDENTITY(mix(_GLF_IDENTITY(float(_GLF_IDENTITY(1.0, max(1.0, 1.0))), clamp(float(_GLF_IDENTITY(1.0, max(1.0, 1.0))), float(_GLF_IDENTITY(1.0, max(1.0, 1.0))), float(_GLF_IDENTITY(1.0, max(1.0, 1.0))))), float(_GLF_FUZZED(-261.160)), bool(false)), (mix(float(1.0), float(_GLF_FUZZED(-261.160)), bool(false))) / 1.0)))), 1.0, 0.0, 1.0, 0.0, _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), 0.0, 0.0, _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), 1.0, 0.0, 0.0, 0.0, 1.0)), 1.0, 1.0, 1.0))))), injectionSwitch.y)), _GLF_IDENTITY(float(vec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(mat4x3(injectionSwitch.y, 1.0, 0.0, _GLF_IDENTITY(abs(0.0), (true ? abs(0.0) : _GLF_FUZZED(9.3))), 0.0, 1.0, 0.0, 0.0, determinant(mat4(1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0)), 1.0, 1.0, 1.0)), 0.0 + _GLF_IDENTITY((float(mat4x3(injectionSwitch.y, 1.0, 0.0, abs(0.0), 0.0, 1.0, 0.0, 0.0, determinant(mat4(1.0, _GLF_IDENTITY(1.0, (1.0) / 1.0), _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-2.7) : _GLF_IDENTITY(1.0, _GLF_IDENTITY(mix(float(1.0), float(_GLF_FUZZED(-261.160)), bool(false)), clamp(mix(float(1.0), float(_GLF_FUZZED(-261.160)), bool(false)), mix(float(1.0), float(_GLF_FUZZED(-261.160)), bool(false)), mix(float(1.0), float(_GLF_FUZZED(-261.160)), bool(false))))))), 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), 1.0, 0.0, 0.0, 0.0, 1.0)), 1.0, 1.0, 1.0))), (_GLF_IDENTITY((float(mat4x3(injectionSwitch.y, 1.0, 0.0, abs(0.0), 0.0, 1.0, 0.0, 0.0, determinant(mat4(1.0, _GLF_IDENTITY(1.0, (1.0) / 1.0), _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-2.7) : _GLF_IDENTITY(1.0, _GLF_IDENTITY(mix(float(1.0), float(_GLF_FUZZED(-261.160)), bool(false)), clamp(mix(float(1.0), float(_GLF_FUZZED(-261.160)), bool(false)), mix(float(1.0), float(_GLF_FUZZED(-261.160)), bool(false)), mix(float(1.0), float(_GLF_FUZZED(-261.160)), bool(false))))))), 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), 1.0, 0.0, 0.0, 0.0, 1.0)), 1.0, 1.0, 1.0))), 0.0 + ((float(mat4x3(injectionSwitch.y, 1.0, 0.0, abs(0.0), 0.0, 1.0, 0.0, 0.0, determinant(mat4(1.0, _GLF_IDENTITY(1.0, (1.0) / 1.0), _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-2.7) : _GLF_IDENTITY(1.0, _GLF_IDENTITY(mix(float(1.0), float(_GLF_FUZZED(-261.160)), bool(false)), clamp(mix(float(1.0), float(_GLF_FUZZED(-261.160)), bool(false)), mix(float(1.0), float(_GLF_FUZZED(-261.160)), bool(false)), mix(float(1.0), float(_GLF_FUZZED(-261.160)), bool(false))))))), 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), 1.0, 0.0, 0.0, 0.0, 1.0)), 1.0, 1.0, 1.0)))))) - 0.0))), injectionSwitch.y)), float(mat2x3(_GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(mat4x3(injectionSwitch.y, 1.0, 0.0, _GLF_IDENTITY(abs(0.0), (_GLF_IDENTITY(_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec3(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)), (bool(bvec3(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))) || false)) ? abs(0.0) : _GLF_FUZZED(9.3), mix(float(_GLF_FUZZED(1.1)), float(_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec3(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)), (bool(bvec3(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))) || false)) ? abs(0.0) : _GLF_FUZZED(9.3)), bool(true))))), 0.0, 1.0, 0.0, 0.0, determinant(mat4(1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0, 0.0, 1.0)), 1.0, 1.0, 1.0)), 0.0 + (float(mat4x3(injectionSwitch.y, _GLF_IDENTITY(1.0, 1.0 * (1.0)), 0.0, abs(0.0), 0.0, 1.0, 0.0, 0.0, determinant(mat4(1.0, _GLF_IDENTITY(1.0, (1.0) / 1.0), _GLF_IDENTITY(1.0, (_GLF_IDENTITY(false ? _GLF_FUZZED(-2.7) : _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(-261.160)), bool(_GLF_IDENTITY(false, ! (! (false)))))), max(false ? _GLF_FUZZED(-2.7) : _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(-261.160)), bool(_GLF_IDENTITY(false, ! (! (false)))))), false ? _GLF_FUZZED(-2.7) : _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(-261.160)), bool(_GLF_IDENTITY(false, ! (! (false)))))))))), 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), 1.0, 0.0, 0.0, 0.0, 1.0)), 1.0, 1.0, 1.0))))), injectionSwitch.y)), 1.0, 1.0, _GLF_IDENTITY(dot(vec4(abs(1.0), 0.0, 1.0, 0.0), vec4(0.0, 1.0, 0.0, _GLF_IDENTITY(1.0, max(1.0, 1.0)))), dot(vec4(abs(1.0), 0.0, 1.0, 0.0), vec4(0.0, 1.0, 0.0, 1.0))), 1.0, 0.0))), (false ? _GLF_FUZZED(-2.2) : _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(mat4x3(injectionSwitch.y, 1.0, 0.0, _GLF_IDENTITY(abs(0.0), (true ? abs(0.0) : _GLF_FUZZED(9.3))), 0.0, 1.0, 0.0, _GLF_IDENTITY(0.0, (0.0) / 1.0), determinant(mat4(1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(7169.7191)), float(1.0), bool(true))), 0.0, 0.0, 1.0, 1.0, _GLF_IDENTITY(0.0, (0.0) / 1.0), 0.0, 0.0, 1.0)), 1.0, 1.0, 1.0)), _GLF_IDENTITY(0.0 + (float(mat4x3(injectionSwitch.y, 1.0, 0.0, abs(0.0), 0.0, 1.0, 0.0, 0.0, determinant(mat4(1.0, _GLF_IDENTITY(1.0, (1.0) / 1.0), _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(_GLF_IDENTITY(-2.7, mix(float(-2.7), float(_GLF_FUZZED(5.2)), bool(_GLF_IDENTITY(false, (false) && true))))) : _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(-261.160)), bool(false))))), 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), 1.0, 0.0, 0.0, 0.0, 1.0)), 1.0, 1.0, 1.0))), mix(float(_GLF_FUZZED(-1283.4882)), float(0.0 + (float(mat4x3(injectionSwitch.y, 1.0, 0.0, abs(0.0), 0.0, 1.0, 0.0, 0.0, determinant(mat4(1.0, _GLF_IDENTITY(1.0, (1.0) / 1.0), _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(_GLF_IDENTITY(-2.7, mix(float(-2.7), float(_GLF_FUZZED(5.2)), bool(_GLF_IDENTITY(false, (false) && true))))) : _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(-261.160)), bool(false))))), 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), 1.0, 0.0, 0.0, 0.0, 1.0)), 1.0, 1.0, 1.0)))), bool(true))))), injectionSwitch.y)))), 0.0, 1.0)), mix(float(_GLF_FUZZED(15.32)), float(float(vec3(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(mat4x3(injectionSwitch.y, 1.0, 0.0, _GLF_IDENTITY(abs(0.0), (true ? abs(0.0) : _GLF_FUZZED(9.3))), 0.0, 1.0, 0.0, 0.0, determinant(mat4(1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0)), 1.0, 1.0, 1.0)), 0.0 + (float(mat4x3(injectionSwitch.y, 1.0, 0.0, abs(0.0), 0.0, 1.0, 0.0, 0.0, determinant(mat4(1.0, _GLF_IDENTITY(1.0, (1.0) / 1.0), _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-2.7) : _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(-261.160)), bool(false))))), 1.0, 0.0, _GLF_IDENTITY(1.0, _GLF_IDENTITY(float(mat2x3(_GLF_IDENTITY(1.0, 1.0 * (1.0)), 0.0, log(1.0), 0.0, 1.0, 1.0)), (true ? _GLF_IDENTITY(float(mat2x3(_GLF_IDENTITY(1.0, 1.0 * (1.0)), 0.0, log(1.0), 0.0, 1.0, 1.0)), clamp(_GLF_IDENTITY(float(mat2x3(_GLF_IDENTITY(1.0, 1.0 * (1.0)), 0.0, log(1.0), 0.0, 1.0, 1.0)), clamp(float(mat2x3(_GLF_IDENTITY(1.0, 1.0 * (1.0)), 0.0, log(1.0), 0.0, 1.0, 1.0)), float(mat2x3(_GLF_IDENTITY(1.0, 1.0 * (1.0)), 0.0, log(1.0), 0.0, 1.0, 1.0)), float(mat2x3(_GLF_IDENTITY(1.0, 1.0 * (1.0)), 0.0, log(1.0), 0.0, 1.0, 1.0)))), float(mat2x3(_GLF_IDENTITY(1.0, _GLF_IDENTITY(1.0 * (1.0), clamp(1.0 * (1.0), _GLF_IDENTITY(1.0 * (1.0), float(mat2x4(1.0 * (1.0), _GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, 1.0 * (0.0))) / 1.0), _GLF_IDENTITY(0.0, (0.0) / 1.0), 1.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), log(1.0), 1.0))), _GLF_IDENTITY(1.0 * (1.0), max(1.0 * (_GLF_IDENTITY(1.0, (1.0) / 1.0)), 1.0 * (1.0)))))), 0.0, log(1.0), 0.0, 1.0, 1.0)), float(mat2x3(_GLF_IDENTITY(1.0, 1.0 * _GLF_IDENTITY((1.0), mix(float(_GLF_FUZZED(-2394.1191)), float(_GLF_IDENTITY((1.0), ((1.0)) / 1.0)), bool(true)))), 0.0, log(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(-4.4)), bool(false)))) - 0.0)), 0.0, 1.0, 1.0)))) : _GLF_FUZZED(70.54)))), 0.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(1.0, _GLF_IDENTITY(clamp(1.0, 1.0, 1.0), float(mat4(clamp(1.0, 1.0, 1.0), 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, sin(_GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(0.0, 1.0)), dot(vec2(1.0, 0.0), vec2(0.0, 1.0)))), 1.0, 0.0, 1.0, 1.0)))), 1.0, 0.0, 0.0, 0.0, 1.0)), 1.0, 1.0, 1.0))))), injectionSwitch.y)), (false ? _GLF_FUZZED(-2.2) : _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(mat4x3(injectionSwitch.y, 1.0, 0.0, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(abs(0.0), (abs(0.0)) * 1.0), (true ? abs(_GLF_IDENTITY(0.0, max(0.0, 0.0))) : _GLF_FUZZED(9.3))), _GLF_IDENTITY(float(mat4x2(_GLF_IDENTITY(_GLF_IDENTITY(abs(0.0), (abs(0.0)) * 1.0), (true ? abs(_GLF_IDENTITY(0.0, max(0.0, 0.0))) : _GLF_FUZZED(9.3))), sqrt(1.0), 0.0, 0.0, 1.0, 1.0, 1.0, 0.0)), clamp(_GLF_IDENTITY(float(mat4x2(_GLF_IDENTITY(_GLF_IDENTITY(abs(0.0), (abs(0.0)) * 1.0), (true ? abs(_GLF_IDENTITY(0.0, max(0.0, 0.0))) : _GLF_FUZZED(9.3))), sqrt(1.0), 0.0, 0.0, 1.0, 1.0, 1.0, 0.0)), mix(float(_GLF_FUZZED(9.6)), float(float(mat4x2(_GLF_IDENTITY(_GLF_IDENTITY(abs(0.0), (abs(0.0)) * 1.0), (true ? abs(_GLF_IDENTITY(0.0, max(0.0, 0.0))) : _GLF_FUZZED(9.3))), sqrt(1.0), 0.0, 0.0, 1.0, 1.0, 1.0, 0.0))), bool(true))), float(mat4x2(_GLF_IDENTITY(_GLF_IDENTITY(abs(0.0), (abs(0.0)) * 1.0), (true ? abs(_GLF_IDENTITY(0.0, max(0.0, 0.0))) : _GLF_FUZZED(9.3))), sqrt(1.0), 0.0, 0.0, 1.0, 1.0, 1.0, 0.0)), float(mat4x2(_GLF_IDENTITY(_GLF_IDENTITY(abs(0.0), (abs(0.0)) * 1.0), (true ? abs(_GLF_IDENTITY(0.0, max(0.0, 0.0))) : _GLF_FUZZED(9.3))), sqrt(1.0), 0.0, 0.0, 1.0, 1.0, 1.0, 0.0))))), 0.0, 1.0, 0.0, 0.0, determinant(mat4(1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0)), 1.0, 1.0, 1.0)), 0.0 + (float(mat4x3(injectionSwitch.y, 1.0, _GLF_IDENTITY(0.0, clamp(0.0, _GLF_IDENTITY(_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(7.1))), 0.0 + (_GLF_IDENTITY(_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(7.1))), float(vec4(_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(7.1))), 0.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(1.0, 1.0, 0.0, 1.0)), dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(1.0, 1.0, 0.0, 1.0))), 1.0))))), 0.0)), abs(0.0), 0.0, 1.0, 0.0, 0.0, determinant(mat4(1.0, _GLF_IDENTITY(1.0, (1.0) / 1.0), _GLF_IDENTITY(1.0, _GLF_IDENTITY((false ? _GLF_FUZZED(-2.7) : _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(-261.160)), bool(false)))), float(_GLF_IDENTITY(mat4x3((false ? _GLF_FUZZED(-2.7) : _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(-261.160)), bool(false)))), 1.0, 0.0, 0.0, _GLF_IDENTITY(dot(vec3(abs(1.0), 0.0, 0.0), vec3(1.0, 0.0, 0.0)), dot(vec3(abs(1.0), 0.0, 0.0), vec3(1.0, 0.0, 0.0))), 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(mat4x3(mat3x4(432.828, -216.020, -6.4, 575.508, 489.625, -1.3, -7.5, -4.3, -40.85, -996.763, -9.4, -66.64))) : mat4x3((false ? _GLF_FUZZED(-2.7) : _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(-261.160)), bool(false)))), 1.0, 0.0, 0.0, _GLF_IDENTITY(dot(vec3(abs(1.0), 0.0, 0.0), vec3(1.0, 0.0, 0.0)), dot(vec3(abs(1.0), 0.0, 0.0), vec3(1.0, 0.0, 0.0))), 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0)))))), 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-6427.1652)), float(1.0), bool(true))), 1.0, 1.0)), 1.0, 0.0, 0.0, 0.0, 1.0)), 1.0, 1.0, 1.0))))), injectionSwitch.y)))), 0.0, 1.0))), bool(true))))))))
      {
       if(_GLF_DEAD(false))
        continue;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
           if(_GLF_DEAD(false))
            continue;
           break;
          }
         break;
        }
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec4(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), (injectionSwitch.x > injectionSwitch.y)), false, true, false))))))))
        continue;
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          continue;
         break;
        }
      }
     else
      {
       if(_GLF_DEAD(false))
        return;
       atomicStore(buf[next_virtual_gid], uint(_GLF_IDENTITY(GLF_merged4_0_1_6_1_1_11_2_1_17_3_1_13read_1subgroup_idsubgroup_local_idsubgroup_size.x + 1, 1u * (_GLF_IDENTITY(GLF_merged4_0_1_6_1_1_11_2_1_17_3_1_13read_1subgroup_idsubgroup_local_idsubgroup_size.x + 1, (GLF_merged4_0_1_6_1_1_11_2_1_17_3_1_13read_1subgroup_idsubgroup_local_idsubgroup_size.x + 1) << _GLF_IDENTITY(_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) << 0u)) / 1u), 0u | (_GLF_IDENTITY(_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) << 0u)) / 1u), _GLF_IDENTITY(uint(uint(_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) << 0u)) / 1u))), (uint(uint(_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) << 0u)) / 1u)))) | 0u)))))))), 4, 64, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(4, (4) | (4)), _GLF_IDENTITY((4) - 0, (_GLF_IDENTITY((4) - 0, ((4) - 0) << 0)) + 0)), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(4, (4) | (4)), _GLF_IDENTITY((4) - 0, (_GLF_IDENTITY((4) - 0, ((4) - 0) << 0)) + 0))), ((_GLF_IDENTITY(_GLF_IDENTITY(4, (4) | (4)), _GLF_IDENTITY((4) - 0, (_GLF_IDENTITY((4) - 0, ((4) - 0) << 0)) + 0)))) | (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(4, (4) | (4)), _GLF_IDENTITY((4) - 0, (_GLF_IDENTITY((4) - 0, ((4) - 0) << 0)) + 0))), 0 | (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(4, (4) | (4)), _GLF_IDENTITY((4) - 0, (_GLF_IDENTITY((4) - 0, ((4) - 0) << 0)) + 0))), ~ (~ ((_GLF_IDENTITY(_GLF_IDENTITY(4, (4) | (4)), _GLF_IDENTITY((4) - 0, (_GLF_IDENTITY((4) - 0, ((4) - 0) << 0)) + 0)))))))))) ^ 0));
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      break;
    }
  }
 while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(bool(bool((injectionSwitch.x > injectionSwitch.y))), bool(bvec2(bool(bool((_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))), _GLF_IDENTITY(true, true && (true))))))), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)));
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).y))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).y))))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
}
