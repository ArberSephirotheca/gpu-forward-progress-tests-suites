#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(mat3x4(injectionSwitch, 0.0, _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-5.1)), bool(false))), 1.0, 0.0, 1.0, 1.0, 0.0, _GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(6.1)), float(0.0), bool(true)))) / 1.0), 0.0)), 0.0, round(length(normalize(vec2(1.0, 1.0))))))).x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        return;
       return;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec2(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(-48.41))) > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && _GLF_TRUE(true, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x < injectionSwitch.y), false || (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x < injectionSwitch.y), bool(bvec2((_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x < injectionSwitch.y), false))))))), false)))))
          barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         return;
        }
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) || false)) && true)))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), bool(bvec2(! (true), false))))) && (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         return;
        }
       barrier();
      }
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    return;
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       return;
      }
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         barrier();
        }
       return;
      }
     return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
    }
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (_GLF_IDENTITY(false, ! (! (false))))), _GLF_IDENTITY(bool(bvec4(! (! (_GLF_IDENTITY(false, ! (! (false))))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)), (bool(bvec4(! (! (_GLF_IDENTITY(false, ! (! (false))))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))) || false)))))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   barrier();
  }
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))), ! (! (_GLF_DEAD(false))))))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x))) - 0.0) > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y))))))))))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(injectionSwitch.x > injectionSwitch.y, true, _GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(2453.7892)), bool(false))))))) && _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(-6.7, 9799.9271)))), _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), injectionSwitch)).y)))), false))))), (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(injectionSwitch.x > injectionSwitch.y, true, _GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))) && _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, false || (injectionSwitch.x < injectionSwitch.y)))))), false)))))) && true)))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        return;
       if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), true, _GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! (false)))))), true))))
        {
         if(_GLF_DEAD(false))
          return;
         return;
        }
       return;
       if(_GLF_DEAD(false))
        return;
      }
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0) > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
    }
   barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) < injectionSwitch.y)))))
        return;
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec3(false, true, true))), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y))), (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y)))) || false)))))), (injectionSwitch.x > injectionSwitch.y) && true)))))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
    }
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, false || (false)), (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
  {
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 uint num_workgroup = _GLF_IDENTITY(gl_NumWorkGroups, max(_GLF_IDENTITY(gl_NumWorkGroups, (true ? gl_NumWorkGroups : _GLF_IDENTITY(_GLF_FUZZED(uvec3(subgroup_size, uvec2(80391u, 52597u))), clamp(_GLF_IDENTITY(_GLF_FUZZED(uvec3(subgroup_size, uvec2(80391u, 52597u))), (_GLF_FUZZED(uvec3(subgroup_size, uvec2(80391u, 52597u)))) | (_GLF_FUZZED(uvec3(subgroup_size, uvec2(80391u, 52597u))))), _GLF_FUZZED(uvec3(subgroup_size, uvec2(80391u, 52597u))), _GLF_IDENTITY(_GLF_FUZZED(uvec3(subgroup_size, uvec2(80391u, 52597u))), uvec3(0u, 0u, 0u) ^ _GLF_IDENTITY((_GLF_FUZZED(_GLF_IDENTITY(uvec3(subgroup_size, uvec2(80391u, 52597u)), (uvec3(subgroup_size, uvec2(80391u, 52597u))) | uvec3(0u, 0u, 0u)))), ~ (~ (_GLF_IDENTITY((_GLF_FUZZED(uvec3(subgroup_size, uvec2(80391u, 52597u)))), ~ (~ ((_GLF_FUZZED(uvec3(subgroup_size, uvec2(80391u, 52597u))))))))))))))), _GLF_IDENTITY(gl_NumWorkGroups, uvec3(gl_NumWorkGroups[0], gl_NumWorkGroups[1], gl_NumWorkGroups[2])))).x;
 uint workgroup_size = _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, (_GLF_IDENTITY(gl_WorkGroupSize, clamp(_GLF_IDENTITY(gl_WorkGroupSize, max(gl_WorkGroupSize, gl_WorkGroupSize)), _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, clamp(gl_WorkGroupSize, gl_WorkGroupSize, gl_WorkGroupSize)), uvec3(gl_WorkGroupSize[0], gl_WorkGroupSize[1], gl_WorkGroupSize[2])), gl_WorkGroupSize))) << uvec3(0u, 0u, 0u)), _GLF_IDENTITY(uvec3(0u, 0u, 0u) | _GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupSize, (_GLF_IDENTITY(gl_WorkGroupSize, _GLF_IDENTITY(clamp(gl_WorkGroupSize, _GLF_IDENTITY(gl_WorkGroupSize, _GLF_IDENTITY((gl_WorkGroupSize) + uvec3(0u, 0u, 0u), ((gl_WorkGroupSize) + uvec3(0u, 0u, 0u)) ^ uvec3(0u, 0u, 0u))), gl_WorkGroupSize), uvec3(0u, _GLF_IDENTITY(0u, (0u) << 0u), 0u) ^ (clamp(gl_WorkGroupSize, gl_WorkGroupSize, gl_WorkGroupSize))))) << uvec3(0u, _GLF_IDENTITY(0u, 0u ^ (0u)), 0u))), uvec3(_GLF_IDENTITY(uvec3(_GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupSize, (_GLF_IDENTITY(gl_WorkGroupSize, _GLF_IDENTITY(clamp(gl_WorkGroupSize, _GLF_IDENTITY(gl_WorkGroupSize, _GLF_IDENTITY((gl_WorkGroupSize) + uvec3(0u, 0u, 0u), ((gl_WorkGroupSize) + uvec3(0u, 0u, 0u)) ^ uvec3(0u, 0u, 0u))), gl_WorkGroupSize), uvec3(0u, _GLF_IDENTITY(0u, (0u) << 0u), 0u) ^ (clamp(gl_WorkGroupSize, gl_WorkGroupSize, gl_WorkGroupSize))))) << uvec3(0u, _GLF_IDENTITY(0u, 0u ^ (0u)), 0u))), uvec3(0u, 0u, 0u) ^ ((_GLF_IDENTITY(gl_WorkGroupSize, (_GLF_IDENTITY(gl_WorkGroupSize, _GLF_IDENTITY(clamp(gl_WorkGroupSize, _GLF_IDENTITY(gl_WorkGroupSize, _GLF_IDENTITY((gl_WorkGroupSize) + uvec3(0u, 0u, 0u), ((gl_WorkGroupSize) + uvec3(0u, 0u, 0u)) ^ uvec3(0u, 0u, 0u))), gl_WorkGroupSize), uvec3(0u, _GLF_IDENTITY(0u, (0u) << 0u), 0u) ^ (clamp(gl_WorkGroupSize, gl_WorkGroupSize, gl_WorkGroupSize))))) << uvec3(0u, _GLF_IDENTITY(0u, 0u ^ (0u)), 0u)))))), ~ (~ (uvec3(_GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupSize, (_GLF_IDENTITY(gl_WorkGroupSize, _GLF_IDENTITY(clamp(gl_WorkGroupSize, _GLF_IDENTITY(gl_WorkGroupSize, _GLF_IDENTITY((gl_WorkGroupSize) + uvec3(0u, 0u, 0u), ((gl_WorkGroupSize) + uvec3(0u, 0u, 0u)) ^ uvec3(0u, 0u, 0u))), gl_WorkGroupSize), uvec3(0u, _GLF_IDENTITY(0u, (0u) << 0u), 0u) ^ (clamp(gl_WorkGroupSize, gl_WorkGroupSize, gl_WorkGroupSize))))) << uvec3(0u, _GLF_IDENTITY(0u, 0u ^ (0u)), 0u))), uvec3(0u, 0u, 0u) ^ ((_GLF_IDENTITY(gl_WorkGroupSize, (_GLF_IDENTITY(gl_WorkGroupSize, _GLF_IDENTITY(clamp(gl_WorkGroupSize, _GLF_IDENTITY(gl_WorkGroupSize, _GLF_IDENTITY((gl_WorkGroupSize) + uvec3(0u, 0u, 0u), ((gl_WorkGroupSize) + uvec3(0u, 0u, 0u)) ^ uvec3(0u, 0u, 0u))), gl_WorkGroupSize), uvec3(0u, _GLF_IDENTITY(0u, (0u) << 0u), 0u) ^ (clamp(gl_WorkGroupSize, gl_WorkGroupSize, gl_WorkGroupSize))))) << uvec3(0u, _GLF_IDENTITY(0u, 0u ^ (0u)), 0u))))))))))), (uvec3(0u, 0u, 0u) | (_GLF_IDENTITY(gl_WorkGroupSize, (_GLF_IDENTITY(gl_WorkGroupSize, _GLF_IDENTITY(clamp(gl_WorkGroupSize, gl_WorkGroupSize, gl_WorkGroupSize), uvec3(0u, 0u, 0u) ^ (clamp(gl_WorkGroupSize, gl_WorkGroupSize, gl_WorkGroupSize))))) << uvec3(0u, 0u, 0u)))) - uvec3(0u, 0u, _GLF_IDENTITY(0u, 1u * (0u))))), (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, (_GLF_IDENTITY(gl_WorkGroupSize, clamp(_GLF_IDENTITY(gl_WorkGroupSize, max(gl_WorkGroupSize, gl_WorkGroupSize)), _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, clamp(gl_WorkGroupSize, gl_WorkGroupSize, gl_WorkGroupSize)), uvec3(gl_WorkGroupSize[0], gl_WorkGroupSize[1], gl_WorkGroupSize[2])), gl_WorkGroupSize))) << uvec3(0u, 0u, 0u)), _GLF_IDENTITY(uvec3(0u, 0u, 0u) | _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupSize, (_GLF_IDENTITY(gl_WorkGroupSize, _GLF_IDENTITY(clamp(gl_WorkGroupSize, _GLF_IDENTITY(gl_WorkGroupSize, _GLF_IDENTITY((gl_WorkGroupSize) + uvec3(0u, 0u, 0u), ((gl_WorkGroupSize) + _GLF_IDENTITY(uvec3(0u, 0u, 0u), (_GLF_IDENTITY(uvec3(0u, 0u, 0u), uvec3(uvec3(uvec3(0u, 0u, 0u))))) >> (uvec3(0u, 0u, 0u) ^ uvec3(0u, 0u, 0u)))) ^ uvec3(0u, 0u, 0u))), gl_WorkGroupSize), uvec3(0u, _GLF_IDENTITY(0u, (0u) << 0u), 0u) ^ (clamp(gl_WorkGroupSize, gl_WorkGroupSize, gl_WorkGroupSize))))) << uvec3(0u, _GLF_IDENTITY(0u, 0u ^ (0u)), 0u))), ((_GLF_IDENTITY(gl_WorkGroupSize, (_GLF_IDENTITY(gl_WorkGroupSize, _GLF_IDENTITY(clamp(gl_WorkGroupSize, _GLF_IDENTITY(gl_WorkGroupSize, _GLF_IDENTITY((gl_WorkGroupSize) + uvec3(0u, 0u, 0u), ((gl_WorkGroupSize) + _GLF_IDENTITY(uvec3(0u, 0u, 0u), (_GLF_IDENTITY(uvec3(0u, 0u, 0u), uvec3(uvec3(uvec3(0u, 0u, 0u))))) >> (uvec3(0u, 0u, 0u) ^ uvec3(0u, 0u, 0u)))) ^ uvec3(0u, 0u, 0u))), gl_WorkGroupSize), uvec3(0u, _GLF_IDENTITY(0u, (0u) << 0u), 0u) ^ (clamp(gl_WorkGroupSize, gl_WorkGroupSize, gl_WorkGroupSize))))) << uvec3(0u, _GLF_IDENTITY(0u, 0u ^ (0u)), 0u)))) | ((_GLF_IDENTITY(gl_WorkGroupSize, (_GLF_IDENTITY(gl_WorkGroupSize, _GLF_IDENTITY(clamp(gl_WorkGroupSize, _GLF_IDENTITY(gl_WorkGroupSize, _GLF_IDENTITY((gl_WorkGroupSize) + uvec3(0u, 0u, 0u), ((gl_WorkGroupSize) + _GLF_IDENTITY(uvec3(0u, 0u, 0u), (_GLF_IDENTITY(uvec3(0u, 0u, 0u), uvec3(uvec3(uvec3(0u, 0u, 0u))))) >> (uvec3(0u, 0u, 0u) ^ uvec3(0u, 0u, 0u)))) ^ uvec3(0u, 0u, 0u))), gl_WorkGroupSize), uvec3(0u, _GLF_IDENTITY(0u, (0u) << 0u), 0u) ^ (clamp(gl_WorkGroupSize, gl_WorkGroupSize, gl_WorkGroupSize))))) << uvec3(0u, _GLF_IDENTITY(0u, 0u ^ (0u)), 0u))))), uvec3(_GLF_IDENTITY(uvec3(_GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupSize, (_GLF_IDENTITY(gl_WorkGroupSize, _GLF_IDENTITY(clamp(gl_WorkGroupSize, _GLF_IDENTITY(gl_WorkGroupSize, _GLF_IDENTITY((gl_WorkGroupSize) + uvec3(0u, 0u, 0u), ((gl_WorkGroupSize) + uvec3(0u, 0u, 0u)) ^ uvec3(0u, 0u, 0u))), gl_WorkGroupSize), uvec3(0u, _GLF_IDENTITY(0u, (0u) << 0u), 0u) ^ (clamp(gl_WorkGroupSize, _GLF_IDENTITY(gl_WorkGroupSize, (_GLF_IDENTITY(gl_WorkGroupSize, max(_GLF_IDENTITY(gl_WorkGroupSize, ~ (~ (gl_WorkGroupSize))), gl_WorkGroupSize))) / uvec3(1u, 1u, 1u)), gl_WorkGroupSize))))) << uvec3(0u, _GLF_IDENTITY(0u, 0u ^ (0u)), 0u))), uvec3(0u, 0u, 0u) ^ ((_GLF_IDENTITY(gl_WorkGroupSize, (_GLF_IDENTITY(gl_WorkGroupSize, _GLF_IDENTITY(clamp(gl_WorkGroupSize, _GLF_IDENTITY(gl_WorkGroupSize, _GLF_IDENTITY((gl_WorkGroupSize) + uvec3(0u, 0u, 0u), (_GLF_IDENTITY((gl_WorkGroupSize), (false ? _GLF_FUZZED((uvec3(102960u, 10275u, 180205u) & uvec3(67952u, 13246u, 12924u))) : _GLF_IDENTITY((gl_WorkGroupSize), uvec3(uvec4((gl_WorkGroupSize), 0u))))) + uvec3(0u, 0u, 0u)) ^ uvec3(0u, 0u, 0u))), gl_WorkGroupSize), uvec3(0u, _GLF_IDENTITY(0u, (0u) << 0u), 0u) ^ (clamp(gl_WorkGroupSize, gl_WorkGroupSize, gl_WorkGroupSize))))) << uvec3(0u, _GLF_IDENTITY(0u, 0u ^ (0u)), 0u)))))), ~ (~ (uvec3(_GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupSize, (_GLF_IDENTITY(gl_WorkGroupSize, _GLF_IDENTITY(clamp(gl_WorkGroupSize, _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, _GLF_IDENTITY((gl_WorkGroupSize) + uvec3(0u, 0u, 0u), ((gl_WorkGroupSize) + uvec3(0u, 0u, 0u)) ^ uvec3(0u, 0u, 0u))), clamp(_GLF_IDENTITY(gl_WorkGroupSize, _GLF_IDENTITY((gl_WorkGroupSize) + uvec3(0u, 0u, 0u), ((gl_WorkGroupSize) + uvec3(0u, 0u, 0u)) ^ uvec3(0u, 0u, 0u))), _GLF_IDENTITY(gl_WorkGroupSize, _GLF_IDENTITY((gl_WorkGroupSize) + uvec3(0u, 0u, 0u), ((gl_WorkGroupSize) + uvec3(0u, 0u, 0u)) ^ uvec3(0u, 0u, 0u))), _GLF_IDENTITY(gl_WorkGroupSize, _GLF_IDENTITY((gl_WorkGroupSize) + uvec3(0u, 0u, 0u), ((gl_WorkGroupSize) + uvec3(0u, 0u, 0u)) ^ uvec3(0u, 0u, 0u))))), gl_WorkGroupSize), uvec3(0u, _GLF_IDENTITY(0u, (0u) << 0u), 0u) ^ (clamp(gl_WorkGroupSize, gl_WorkGroupSize, gl_WorkGroupSize))))) << uvec3(0u, _GLF_IDENTITY(0u, 0u ^ (0u)), 0u))), uvec3(0u, 0u, 0u) ^ ((_GLF_IDENTITY(gl_WorkGroupSize, (_GLF_IDENTITY(gl_WorkGroupSize, _GLF_IDENTITY(clamp(gl_WorkGroupSize, _GLF_IDENTITY(gl_WorkGroupSize, _GLF_IDENTITY((gl_WorkGroupSize) + uvec3(0u, 0u, 0u), ((gl_WorkGroupSize) + uvec3(0u, 0u, 0u)) ^ uvec3(0u, 0u, 0u))), gl_WorkGroupSize), uvec3(0u, _GLF_IDENTITY(0u, (0u) << 0u), 0u) ^ (clamp(gl_WorkGroupSize, gl_WorkGroupSize, gl_WorkGroupSize))))) << uvec3(0u, _GLF_IDENTITY(0u, 0u ^ (0u)), 0u))))))))))), (uvec3(0u, 0u, 0u) | (_GLF_IDENTITY(gl_WorkGroupSize, (_GLF_IDENTITY(gl_WorkGroupSize, _GLF_IDENTITY(clamp(gl_WorkGroupSize, gl_WorkGroupSize, gl_WorkGroupSize), uvec3(0u, 0u, 0u) ^ (clamp(gl_WorkGroupSize, gl_WorkGroupSize, gl_WorkGroupSize))))) << uvec3(_GLF_IDENTITY(0u, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(197016u) : 0u)), 0u, 0u)))) - uvec3(0u, 0u, _GLF_IDENTITY(0u, 1u * (0u)))))) - uvec3(0u, 0u, 0u)), uvec3(0u, 0u, 0u) | (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, (_GLF_IDENTITY(gl_WorkGroupSize, clamp(gl_WorkGroupSize, _GLF_IDENTITY(gl_WorkGroupSize, uvec3(gl_WorkGroupSize[0], gl_WorkGroupSize[1], gl_WorkGroupSize[2])), gl_WorkGroupSize))) << uvec3(0u, 0u, 0u)), _GLF_IDENTITY(uvec3(0u, 0u, 0u) | (_GLF_IDENTITY(gl_WorkGroupSize, (_GLF_IDENTITY(gl_WorkGroupSize, _GLF_IDENTITY(clamp(gl_WorkGroupSize, _GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) + uvec3(0u, 0u, 0u)), gl_WorkGroupSize), _GLF_IDENTITY(uvec3(0u, _GLF_IDENTITY(0u, (0u) << 0u), 0u) ^ (clamp(gl_WorkGroupSize, gl_WorkGroupSize, gl_WorkGroupSize)), (uvec3(0u, _GLF_IDENTITY(0u, (0u) << 0u), 0u) ^ (clamp(gl_WorkGroupSize, gl_WorkGroupSize, gl_WorkGroupSize))) << uvec3(0u, 0u, 0u))))) << uvec3(0u, 0u, 0u))), (uvec3(_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) / 1u)) | (0u)), 0u, 0u) | (_GLF_IDENTITY(gl_WorkGroupSize, (_GLF_IDENTITY(gl_WorkGroupSize, _GLF_IDENTITY(clamp(gl_WorkGroupSize, gl_WorkGroupSize, gl_WorkGroupSize), uvec3(0u, 0u, 0u) ^ (clamp(gl_WorkGroupSize, gl_WorkGroupSize, gl_WorkGroupSize))))) << uvec3(0u, 0u, 0u)))) - uvec3(0u, 0u, _GLF_IDENTITY(0u, 1u * (0u))))), (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, (_GLF_IDENTITY(gl_WorkGroupSize, clamp(gl_WorkGroupSize, _GLF_IDENTITY(gl_WorkGroupSize, uvec3(gl_WorkGroupSize[0], gl_WorkGroupSize[1], gl_WorkGroupSize[2])), gl_WorkGroupSize))) << uvec3(0u, 0u, 0u)), _GLF_IDENTITY(uvec3(0u, 0u, 0u) | (_GLF_IDENTITY(gl_WorkGroupSize, (_GLF_IDENTITY(gl_WorkGroupSize, _GLF_IDENTITY(clamp(gl_WorkGroupSize, _GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) + uvec3(0u, 0u, 0u)), gl_WorkGroupSize), _GLF_IDENTITY(uvec3(0u, _GLF_IDENTITY(0u, (0u) << 0u), 0u) ^ (clamp(gl_WorkGroupSize, gl_WorkGroupSize, gl_WorkGroupSize)), (uvec3(0u, _GLF_IDENTITY(0u, (0u) << 0u), 0u) ^ (clamp(gl_WorkGroupSize, gl_WorkGroupSize, gl_WorkGroupSize))) << uvec3(0u, 0u, 0u))))) << uvec3(0u, 0u, 0u))), (uvec3(_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) / 1u)) | (0u)), 0u, 0u) | (_GLF_IDENTITY(gl_WorkGroupSize, (_GLF_IDENTITY(gl_WorkGroupSize, _GLF_IDENTITY(clamp(gl_WorkGroupSize, gl_WorkGroupSize, gl_WorkGroupSize), uvec3(0u, 0u, 0u) ^ (clamp(gl_WorkGroupSize, gl_WorkGroupSize, gl_WorkGroupSize))))) << uvec3(0u, 0u, 0u)))) - uvec3(0u, 0u, _GLF_IDENTITY(0u, 1u * (0u)))))) | uvec3(0u, 0u, 0u)))).x, clamp(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, (_GLF_IDENTITY(gl_WorkGroupSize, clamp(_GLF_IDENTITY(gl_WorkGroupSize, max(gl_WorkGroupSize, gl_WorkGroupSize)), _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, clamp(gl_WorkGroupSize, gl_WorkGroupSize, gl_WorkGroupSize)), uvec3(gl_WorkGroupSize[0], gl_WorkGroupSize[1], gl_WorkGroupSize[2])), gl_WorkGroupSize))) << uvec3(0u, 0u, 0u)), _GLF_IDENTITY(uvec3(0u, 0u, 0u) | _GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupSize, (_GLF_IDENTITY(gl_WorkGroupSize, _GLF_IDENTITY(clamp(gl_WorkGroupSize, _GLF_IDENTITY(gl_WorkGroupSize, _GLF_IDENTITY((gl_WorkGroupSize) + uvec3(0u, 0u, 0u), ((gl_WorkGroupSize) + uvec3(0u, 0u, 0u)) ^ uvec3(0u, 0u, 0u))), gl_WorkGroupSize), uvec3(0u, _GLF_IDENTITY(0u, (0u) << 0u), 0u) ^ (clamp(gl_WorkGroupSize, gl_WorkGroupSize, gl_WorkGroupSize))))) << uvec3(0u, _GLF_IDENTITY(0u, 0u ^ (0u)), 0u))), uvec3(_GLF_IDENTITY(uvec3(_GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupSize, (_GLF_IDENTITY(gl_WorkGroupSize, _GLF_IDENTITY(clamp(gl_WorkGroupSize, _GLF_IDENTITY(gl_WorkGroupSize, _GLF_IDENTITY((gl_WorkGroupSize) + uvec3(0u, 0u, 0u), ((gl_WorkGroupSize) + uvec3(0u, 0u, 0u)) ^ uvec3(0u, 0u, 0u))), gl_WorkGroupSize), uvec3(0u, _GLF_IDENTITY(0u, (0u) << 0u), 0u) ^ (clamp(gl_WorkGroupSize, gl_WorkGroupSize, gl_WorkGroupSize))))) << uvec3(0u, _GLF_IDENTITY(0u, 0u ^ (0u)), 0u))), uvec3(0u, 0u, 0u) ^ ((_GLF_IDENTITY(gl_WorkGroupSize, (_GLF_IDENTITY(gl_WorkGroupSize, _GLF_IDENTITY(clamp(gl_WorkGroupSize, _GLF_IDENTITY(gl_WorkGroupSize, _GLF_IDENTITY((gl_WorkGroupSize) + uvec3(0u, 0u, 0u), ((gl_WorkGroupSize) + uvec3(0u, 0u, 0u)) ^ uvec3(0u, 0u, 0u))), gl_WorkGroupSize), uvec3(0u, _GLF_IDENTITY(0u, (0u) << 0u), 0u) ^ (clamp(gl_WorkGroupSize, gl_WorkGroupSize, gl_WorkGroupSize))))) << uvec3(0u, _GLF_IDENTITY(0u, 0u ^ (0u)), 0u)))))), ~ (~ (uvec3(_GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupSize, (_GLF_IDENTITY(gl_WorkGroupSize, _GLF_IDENTITY(clamp(gl_WorkGroupSize, _GLF_IDENTITY(gl_WorkGroupSize, _GLF_IDENTITY((gl_WorkGroupSize) + uvec3(0u, 0u, 0u), ((gl_WorkGroupSize) + uvec3(0u, 0u, 0u)) ^ uvec3(0u, 0u, 0u))), gl_WorkGroupSize), uvec3(0u, _GLF_IDENTITY(0u, (0u) << 0u), 0u) ^ (clamp(gl_WorkGroupSize, gl_WorkGroupSize, gl_WorkGroupSize))))) << uvec3(0u, _GLF_IDENTITY(0u, 0u ^ (0u)), 0u))), uvec3(0u, 0u, 0u) ^ ((_GLF_IDENTITY(gl_WorkGroupSize, (_GLF_IDENTITY(gl_WorkGroupSize, _GLF_IDENTITY(clamp(gl_WorkGroupSize, _GLF_IDENTITY(gl_WorkGroupSize, _GLF_IDENTITY((gl_WorkGroupSize) + uvec3(0u, 0u, 0u), ((gl_WorkGroupSize) + uvec3(0u, 0u, 0u)) ^ uvec3(0u, 0u, 0u))), gl_WorkGroupSize), uvec3(0u, _GLF_IDENTITY(0u, (0u) << 0u), 0u) ^ (clamp(gl_WorkGroupSize, gl_WorkGroupSize, gl_WorkGroupSize))))) << uvec3(0u, _GLF_IDENTITY(0u, 0u ^ (0u)), 0u))))))))))), (uvec3(0u, 0u, 0u) | (_GLF_IDENTITY(gl_WorkGroupSize, (_GLF_IDENTITY(gl_WorkGroupSize, _GLF_IDENTITY(clamp(gl_WorkGroupSize, gl_WorkGroupSize, gl_WorkGroupSize), uvec3(0u, 0u, 0u) ^ (clamp(gl_WorkGroupSize, gl_WorkGroupSize, gl_WorkGroupSize))))) << uvec3(0u, 0u, 0u)))) - uvec3(0u, 0u, _GLF_IDENTITY(0u, 1u * (0u))))), (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, (_GLF_IDENTITY(gl_WorkGroupSize, clamp(_GLF_IDENTITY(gl_WorkGroupSize, max(gl_WorkGroupSize, gl_WorkGroupSize)), _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, clamp(gl_WorkGroupSize, gl_WorkGroupSize, gl_WorkGroupSize)), uvec3(gl_WorkGroupSize[0], gl_WorkGroupSize[1], gl_WorkGroupSize[2])), gl_WorkGroupSize))) << uvec3(0u, 0u, 0u)), _GLF_IDENTITY(uvec3(0u, 0u, 0u) | _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupSize, (_GLF_IDENTITY(gl_WorkGroupSize, _GLF_IDENTITY(clamp(gl_WorkGroupSize, _GLF_IDENTITY(gl_WorkGroupSize, _GLF_IDENTITY((gl_WorkGroupSize) + uvec3(0u, 0u, 0u), ((gl_WorkGroupSize) + _GLF_IDENTITY(uvec3(0u, 0u, 0u), (_GLF_IDENTITY(uvec3(0u, 0u, 0u), uvec3(uvec3(uvec3(0u, 0u, 0u))))) >> (uvec3(0u, 0u, 0u) ^ uvec3(0u, 0u, 0u)))) ^ uvec3(0u, 0u, 0u))), gl_WorkGroupSize), uvec3(0u, _GLF_IDENTITY(0u, (0u) << 0u), 0u) ^ (clamp(gl_WorkGroupSize, gl_WorkGroupSize, gl_WorkGroupSize))))) << uvec3(0u, _GLF_IDENTITY(0u, 0u ^ (0u)), 0u))), ((_GLF_IDENTITY(gl_WorkGroupSize, (_GLF_IDENTITY(gl_WorkGroupSize, _GLF_IDENTITY(clamp(gl_WorkGroupSize, _GLF_IDENTITY(gl_WorkGroupSize, _GLF_IDENTITY((gl_WorkGroupSize) + uvec3(0u, 0u, 0u), ((gl_WorkGroupSize) + _GLF_IDENTITY(uvec3(0u, 0u, 0u), (_GLF_IDENTITY(uvec3(0u, 0u, 0u), uvec3(uvec3(uvec3(0u, 0u, 0u))))) >> (uvec3(0u, 0u, 0u) ^ uvec3(0u, 0u, 0u)))) ^ uvec3(0u, 0u, 0u))), gl_WorkGroupSize), uvec3(0u, _GLF_IDENTITY(0u, (0u) << 0u), 0u) ^ (clamp(gl_WorkGroupSize, gl_WorkGroupSize, gl_WorkGroupSize))))) << uvec3(0u, _GLF_IDENTITY(0u, 0u ^ (0u)), 0u)))) | ((_GLF_IDENTITY(gl_WorkGroupSize, (_GLF_IDENTITY(gl_WorkGroupSize, _GLF_IDENTITY(clamp(gl_WorkGroupSize, _GLF_IDENTITY(gl_WorkGroupSize, _GLF_IDENTITY((gl_WorkGroupSize) + uvec3(0u, 0u, 0u), ((gl_WorkGroupSize) + _GLF_IDENTITY(uvec3(0u, 0u, 0u), (_GLF_IDENTITY(uvec3(0u, 0u, 0u), uvec3(uvec3(uvec3(0u, 0u, 0u))))) >> (uvec3(0u, 0u, 0u) ^ uvec3(0u, 0u, 0u)))) ^ uvec3(0u, 0u, 0u))), gl_WorkGroupSize), uvec3(0u, _GLF_IDENTITY(0u, (0u) << 0u), 0u) ^ (clamp(gl_WorkGroupSize, gl_WorkGroupSize, gl_WorkGroupSize))))) << uvec3(0u, _GLF_IDENTITY(0u, 0u ^ (0u)), 0u))))), uvec3(_GLF_IDENTITY(uvec3(_GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupSize, (_GLF_IDENTITY(gl_WorkGroupSize, _GLF_IDENTITY(clamp(gl_WorkGroupSize, _GLF_IDENTITY(gl_WorkGroupSize, _GLF_IDENTITY((gl_WorkGroupSize) + uvec3(0u, 0u, 0u), ((gl_WorkGroupSize) + uvec3(0u, 0u, 0u)) ^ uvec3(0u, 0u, 0u))), gl_WorkGroupSize), uvec3(0u, _GLF_IDENTITY(0u, (0u) << 0u), 0u) ^ (clamp(gl_WorkGroupSize, _GLF_IDENTITY(gl_WorkGroupSize, (_GLF_IDENTITY(gl_WorkGroupSize, max(_GLF_IDENTITY(gl_WorkGroupSize, ~ (~ (gl_WorkGroupSize))), gl_WorkGroupSize))) / uvec3(1u, 1u, 1u)), gl_WorkGroupSize))))) << uvec3(0u, _GLF_IDENTITY(0u, 0u ^ (0u)), 0u))), uvec3(0u, 0u, 0u) ^ ((_GLF_IDENTITY(gl_WorkGroupSize, (_GLF_IDENTITY(gl_WorkGroupSize, _GLF_IDENTITY(clamp(gl_WorkGroupSize, _GLF_IDENTITY(gl_WorkGroupSize, _GLF_IDENTITY((gl_WorkGroupSize) + uvec3(0u, 0u, 0u), (_GLF_IDENTITY((gl_WorkGroupSize), (false ? _GLF_FUZZED((uvec3(102960u, 10275u, 180205u) & uvec3(67952u, 13246u, 12924u))) : _GLF_IDENTITY((gl_WorkGroupSize), uvec3(uvec4((gl_WorkGroupSize), 0u))))) + uvec3(0u, 0u, 0u)) ^ uvec3(0u, 0u, 0u))), gl_WorkGroupSize), uvec3(0u, _GLF_IDENTITY(0u, (0u) << 0u), 0u) ^ (clamp(gl_WorkGroupSize, gl_WorkGroupSize, gl_WorkGroupSize))))) << uvec3(0u, _GLF_IDENTITY(0u, 0u ^ (0u)), 0u)))))), ~ (~ (uvec3(_GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupSize, (_GLF_IDENTITY(gl_WorkGroupSize, _GLF_IDENTITY(clamp(gl_WorkGroupSize, _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, _GLF_IDENTITY((gl_WorkGroupSize) + uvec3(0u, 0u, 0u), ((gl_WorkGroupSize) + uvec3(0u, 0u, 0u)) ^ uvec3(0u, 0u, 0u))), clamp(_GLF_IDENTITY(gl_WorkGroupSize, _GLF_IDENTITY((gl_WorkGroupSize) + uvec3(0u, 0u, 0u), ((gl_WorkGroupSize) + uvec3(0u, 0u, 0u)) ^ uvec3(0u, 0u, 0u))), _GLF_IDENTITY(gl_WorkGroupSize, _GLF_IDENTITY((gl_WorkGroupSize) + uvec3(0u, 0u, 0u), ((gl_WorkGroupSize) + uvec3(0u, 0u, 0u)) ^ uvec3(0u, 0u, 0u))), _GLF_IDENTITY(gl_WorkGroupSize, _GLF_IDENTITY((gl_WorkGroupSize) + uvec3(0u, 0u, 0u), ((gl_WorkGroupSize) + uvec3(0u, 0u, 0u)) ^ uvec3(0u, 0u, 0u))))), gl_WorkGroupSize), uvec3(0u, _GLF_IDENTITY(0u, (0u) << 0u), 0u) ^ (clamp(gl_WorkGroupSize, gl_WorkGroupSize, gl_WorkGroupSize))))) << uvec3(0u, _GLF_IDENTITY(0u, 0u ^ (0u)), 0u))), uvec3(0u, 0u, 0u) ^ ((_GLF_IDENTITY(gl_WorkGroupSize, (_GLF_IDENTITY(gl_WorkGroupSize, _GLF_IDENTITY(clamp(gl_WorkGroupSize, _GLF_IDENTITY(gl_WorkGroupSize, _GLF_IDENTITY((gl_WorkGroupSize) + uvec3(0u, 0u, 0u), ((gl_WorkGroupSize) + uvec3(0u, 0u, 0u)) ^ uvec3(0u, 0u, 0u))), gl_WorkGroupSize), uvec3(0u, _GLF_IDENTITY(0u, (0u) << 0u), 0u) ^ (clamp(gl_WorkGroupSize, gl_WorkGroupSize, gl_WorkGroupSize))))) << uvec3(0u, _GLF_IDENTITY(0u, 0u ^ (0u)), 0u))))))))))), (uvec3(0u, 0u, 0u) | (_GLF_IDENTITY(gl_WorkGroupSize, (_GLF_IDENTITY(gl_WorkGroupSize, _GLF_IDENTITY(clamp(gl_WorkGroupSize, gl_WorkGroupSize, gl_WorkGroupSize), uvec3(0u, 0u, 0u) ^ (clamp(gl_WorkGroupSize, gl_WorkGroupSize, gl_WorkGroupSize))))) << uvec3(_GLF_IDENTITY(0u, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(197016u) : 0u)), 0u, 0u)))) - uvec3(0u, 0u, _GLF_IDENTITY(0u, 1u * (0u)))))) - uvec3(0u, 0u, 0u)), uvec3(0u, 0u, 0u) | (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, (_GLF_IDENTITY(gl_WorkGroupSize, clamp(gl_WorkGroupSize, _GLF_IDENTITY(gl_WorkGroupSize, uvec3(gl_WorkGroupSize[0], gl_WorkGroupSize[1], gl_WorkGroupSize[2])), gl_WorkGroupSize))) << uvec3(0u, 0u, 0u)), _GLF_IDENTITY(uvec3(0u, 0u, 0u) | (_GLF_IDENTITY(gl_WorkGroupSize, (_GLF_IDENTITY(gl_WorkGroupSize, _GLF_IDENTITY(clamp(gl_WorkGroupSize, _GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) + uvec3(0u, 0u, 0u)), gl_WorkGroupSize), _GLF_IDENTITY(uvec3(0u, _GLF_IDENTITY(0u, (0u) << 0u), 0u) ^ (clamp(gl_WorkGroupSize, gl_WorkGroupSize, gl_WorkGroupSize)), (uvec3(0u, _GLF_IDENTITY(0u, (0u) << 0u), 0u) ^ (clamp(gl_WorkGroupSize, gl_WorkGroupSize, gl_WorkGroupSize))) << uvec3(0u, 0u, 0u))))) << uvec3(0u, 0u, 0u))), (uvec3(_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) / 1u)) | (0u)), 0u, 0u) | (_GLF_IDENTITY(gl_WorkGroupSize, (_GLF_IDENTITY(gl_WorkGroupSize, _GLF_IDENTITY(clamp(gl_WorkGroupSize, gl_WorkGroupSize, gl_WorkGroupSize), uvec3(0u, 0u, 0u) ^ (clamp(gl_WorkGroupSize, gl_WorkGroupSize, gl_WorkGroupSize))))) << uvec3(0u, 0u, 0u)))) - uvec3(0u, 0u, _GLF_IDENTITY(0u, 1u * (0u))))), (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, (_GLF_IDENTITY(gl_WorkGroupSize, clamp(gl_WorkGroupSize, _GLF_IDENTITY(gl_WorkGroupSize, uvec3(gl_WorkGroupSize[0], gl_WorkGroupSize[1], gl_WorkGroupSize[2])), gl_WorkGroupSize))) << uvec3(0u, 0u, 0u)), _GLF_IDENTITY(uvec3(0u, 0u, 0u) | (_GLF_IDENTITY(gl_WorkGroupSize, (_GLF_IDENTITY(gl_WorkGroupSize, _GLF_IDENTITY(clamp(gl_WorkGroupSize, _GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) + uvec3(0u, 0u, 0u)), gl_WorkGroupSize), _GLF_IDENTITY(uvec3(0u, _GLF_IDENTITY(0u, (0u) << 0u), 0u) ^ (clamp(gl_WorkGroupSize, gl_WorkGroupSize, gl_WorkGroupSize)), (uvec3(0u, _GLF_IDENTITY(0u, (0u) << 0u), 0u) ^ (clamp(gl_WorkGroupSize, gl_WorkGroupSize, gl_WorkGroupSize))) << uvec3(0u, 0u, 0u))))) << uvec3(0u, 0u, 0u))), (uvec3(_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) / 1u)) | (0u)), 0u, 0u) | (_GLF_IDENTITY(gl_WorkGroupSize, (_GLF_IDENTITY(gl_WorkGroupSize, _GLF_IDENTITY(clamp(gl_WorkGroupSize, gl_WorkGroupSize, gl_WorkGroupSize), uvec3(0u, 0u, 0u) ^ (clamp(gl_WorkGroupSize, gl_WorkGroupSize, gl_WorkGroupSize))))) << uvec3(0u, 0u, 0u)))) - uvec3(0u, 0u, _GLF_IDENTITY(0u, 1u * (0u)))))) | uvec3(0u, 0u, 0u)))).x, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, (_GLF_IDENTITY(gl_WorkGroupSize, clamp(_GLF_IDENTITY(gl_WorkGroupSize, max(gl_WorkGroupSize, gl_WorkGroupSize)), _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, clamp(gl_WorkGroupSize, gl_WorkGroupSize, gl_WorkGroupSize)), uvec3(gl_WorkGroupSize[0], gl_WorkGroupSize[1], gl_WorkGroupSize[2])), gl_WorkGroupSize))) << uvec3(0u, 0u, 0u)), _GLF_IDENTITY(uvec3(0u, 0u, 0u) | _GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupSize, (_GLF_IDENTITY(gl_WorkGroupSize, _GLF_IDENTITY(clamp(gl_WorkGroupSize, _GLF_IDENTITY(gl_WorkGroupSize, _GLF_IDENTITY((gl_WorkGroupSize) + uvec3(0u, 0u, 0u), ((gl_WorkGroupSize) + uvec3(0u, 0u, 0u)) ^ uvec3(0u, 0u, 0u))), gl_WorkGroupSize), uvec3(0u, _GLF_IDENTITY(0u, (0u) << 0u), 0u) ^ (clamp(gl_WorkGroupSize, gl_WorkGroupSize, gl_WorkGroupSize))))) << uvec3(0u, _GLF_IDENTITY(0u, 0u ^ (0u)), 0u))), uvec3(_GLF_IDENTITY(uvec3(_GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupSize, (_GLF_IDENTITY(gl_WorkGroupSize, _GLF_IDENTITY(clamp(gl_WorkGroupSize, _GLF_IDENTITY(gl_WorkGroupSize, _GLF_IDENTITY((gl_WorkGroupSize) + uvec3(0u, 0u, 0u), ((gl_WorkGroupSize) + uvec3(0u, 0u, 0u)) ^ uvec3(0u, 0u, 0u))), gl_WorkGroupSize), uvec3(0u, _GLF_IDENTITY(0u, (0u) << 0u), 0u) ^ (clamp(gl_WorkGroupSize, gl_WorkGroupSize, gl_WorkGroupSize))))) << uvec3(0u, _GLF_IDENTITY(0u, 0u ^ (0u)), 0u))), uvec3(0u, 0u, 0u) ^ ((_GLF_IDENTITY(gl_WorkGroupSize, (_GLF_IDENTITY(gl_WorkGroupSize, _GLF_IDENTITY(clamp(gl_WorkGroupSize, _GLF_IDENTITY(gl_WorkGroupSize, _GLF_IDENTITY((gl_WorkGroupSize) + uvec3(0u, 0u, 0u), ((gl_WorkGroupSize) + uvec3(0u, 0u, 0u)) ^ uvec3(0u, 0u, 0u))), gl_WorkGroupSize), uvec3(0u, _GLF_IDENTITY(0u, (0u) << 0u), 0u) ^ (clamp(gl_WorkGroupSize, gl_WorkGroupSize, gl_WorkGroupSize))))) << uvec3(0u, _GLF_IDENTITY(0u, 0u ^ (0u)), 0u)))))), ~ (~ (uvec3(_GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupSize, (_GLF_IDENTITY(gl_WorkGroupSize, _GLF_IDENTITY(clamp(gl_WorkGroupSize, _GLF_IDENTITY(gl_WorkGroupSize, _GLF_IDENTITY((gl_WorkGroupSize) + uvec3(0u, 0u, 0u), ((gl_WorkGroupSize) + uvec3(0u, 0u, 0u)) ^ uvec3(0u, 0u, 0u))), gl_WorkGroupSize), uvec3(0u, _GLF_IDENTITY(0u, (0u) << 0u), 0u) ^ (clamp(gl_WorkGroupSize, gl_WorkGroupSize, gl_WorkGroupSize))))) << uvec3(0u, _GLF_IDENTITY(0u, 0u ^ (0u)), 0u))), uvec3(0u, 0u, 0u) ^ ((_GLF_IDENTITY(gl_WorkGroupSize, (_GLF_IDENTITY(gl_WorkGroupSize, _GLF_IDENTITY(clamp(gl_WorkGroupSize, _GLF_IDENTITY(gl_WorkGroupSize, _GLF_IDENTITY((gl_WorkGroupSize) + uvec3(0u, 0u, 0u), ((gl_WorkGroupSize) + uvec3(0u, 0u, 0u)) ^ uvec3(0u, 0u, 0u))), gl_WorkGroupSize), uvec3(0u, _GLF_IDENTITY(0u, (0u) << 0u), 0u) ^ (clamp(gl_WorkGroupSize, gl_WorkGroupSize, gl_WorkGroupSize))))) << uvec3(0u, _GLF_IDENTITY(0u, 0u ^ (0u)), 0u))))))))))), (uvec3(0u, 0u, 0u) | (_GLF_IDENTITY(gl_WorkGroupSize, (_GLF_IDENTITY(gl_WorkGroupSize, _GLF_IDENTITY(clamp(gl_WorkGroupSize, gl_WorkGroupSize, gl_WorkGroupSize), uvec3(0u, 0u, 0u) ^ (clamp(gl_WorkGroupSize, gl_WorkGroupSize, gl_WorkGroupSize))))) << uvec3(0u, 0u, 0u)))) - uvec3(0u, 0u, _GLF_IDENTITY(0u, 1u * (0u))))), (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, (_GLF_IDENTITY(gl_WorkGroupSize, clamp(_GLF_IDENTITY(gl_WorkGroupSize, max(gl_WorkGroupSize, gl_WorkGroupSize)), _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, clamp(gl_WorkGroupSize, gl_WorkGroupSize, gl_WorkGroupSize)), uvec3(gl_WorkGroupSize[0], gl_WorkGroupSize[1], gl_WorkGroupSize[2])), gl_WorkGroupSize))) << uvec3(0u, 0u, 0u)), _GLF_IDENTITY(uvec3(0u, 0u, 0u) | _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupSize, (_GLF_IDENTITY(gl_WorkGroupSize, _GLF_IDENTITY(clamp(gl_WorkGroupSize, _GLF_IDENTITY(gl_WorkGroupSize, _GLF_IDENTITY((gl_WorkGroupSize) + uvec3(0u, 0u, 0u), ((gl_WorkGroupSize) + _GLF_IDENTITY(uvec3(0u, 0u, 0u), (_GLF_IDENTITY(uvec3(0u, 0u, 0u), uvec3(uvec3(uvec3(0u, 0u, 0u))))) >> (uvec3(0u, 0u, 0u) ^ uvec3(0u, 0u, 0u)))) ^ uvec3(0u, 0u, 0u))), gl_WorkGroupSize), uvec3(0u, _GLF_IDENTITY(0u, (0u) << 0u), 0u) ^ (clamp(gl_WorkGroupSize, gl_WorkGroupSize, gl_WorkGroupSize))))) << uvec3(0u, _GLF_IDENTITY(0u, 0u ^ (0u)), 0u))), ((_GLF_IDENTITY(gl_WorkGroupSize, (_GLF_IDENTITY(gl_WorkGroupSize, _GLF_IDENTITY(clamp(gl_WorkGroupSize, _GLF_IDENTITY(gl_WorkGroupSize, _GLF_IDENTITY((gl_WorkGroupSize) + uvec3(0u, 0u, 0u), ((gl_WorkGroupSize) + _GLF_IDENTITY(uvec3(0u, 0u, 0u), (_GLF_IDENTITY(uvec3(0u, 0u, 0u), uvec3(uvec3(uvec3(0u, 0u, 0u))))) >> (uvec3(0u, 0u, 0u) ^ uvec3(0u, 0u, 0u)))) ^ uvec3(0u, 0u, 0u))), gl_WorkGroupSize), uvec3(0u, _GLF_IDENTITY(0u, (0u) << 0u), 0u) ^ (clamp(gl_WorkGroupSize, gl_WorkGroupSize, gl_WorkGroupSize))))) << uvec3(0u, _GLF_IDENTITY(0u, 0u ^ (0u)), 0u)))) | ((_GLF_IDENTITY(gl_WorkGroupSize, (_GLF_IDENTITY(gl_WorkGroupSize, _GLF_IDENTITY(clamp(gl_WorkGroupSize, _GLF_IDENTITY(gl_WorkGroupSize, _GLF_IDENTITY((gl_WorkGroupSize) + uvec3(0u, 0u, 0u), ((gl_WorkGroupSize) + _GLF_IDENTITY(uvec3(0u, 0u, 0u), (_GLF_IDENTITY(uvec3(0u, 0u, 0u), uvec3(uvec3(uvec3(0u, 0u, 0u))))) >> (uvec3(0u, 0u, 0u) ^ uvec3(0u, 0u, 0u)))) ^ uvec3(0u, 0u, 0u))), gl_WorkGroupSize), uvec3(0u, _GLF_IDENTITY(0u, (0u) << 0u), 0u) ^ (clamp(gl_WorkGroupSize, gl_WorkGroupSize, gl_WorkGroupSize))))) << uvec3(0u, _GLF_IDENTITY(0u, 0u ^ (0u)), 0u))))), uvec3(_GLF_IDENTITY(uvec3(_GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupSize, (_GLF_IDENTITY(gl_WorkGroupSize, _GLF_IDENTITY(clamp(gl_WorkGroupSize, _GLF_IDENTITY(gl_WorkGroupSize, _GLF_IDENTITY((gl_WorkGroupSize) + uvec3(0u, 0u, 0u), ((gl_WorkGroupSize) + uvec3(0u, 0u, 0u)) ^ uvec3(0u, 0u, 0u))), gl_WorkGroupSize), uvec3(0u, _GLF_IDENTITY(0u, (0u) << 0u), 0u) ^ (clamp(gl_WorkGroupSize, _GLF_IDENTITY(gl_WorkGroupSize, (_GLF_IDENTITY(gl_WorkGroupSize, max(_GLF_IDENTITY(gl_WorkGroupSize, ~ (~ (gl_WorkGroupSize))), gl_WorkGroupSize))) / uvec3(1u, 1u, 1u)), gl_WorkGroupSize))))) << uvec3(0u, _GLF_IDENTITY(0u, 0u ^ (0u)), 0u))), uvec3(0u, 0u, 0u) ^ ((_GLF_IDENTITY(gl_WorkGroupSize, (_GLF_IDENTITY(gl_WorkGroupSize, _GLF_IDENTITY(clamp(gl_WorkGroupSize, _GLF_IDENTITY(gl_WorkGroupSize, _GLF_IDENTITY((gl_WorkGroupSize) + uvec3(0u, 0u, 0u), (_GLF_IDENTITY((gl_WorkGroupSize), (false ? _GLF_FUZZED((uvec3(102960u, 10275u, 180205u) & uvec3(67952u, 13246u, 12924u))) : _GLF_IDENTITY((gl_WorkGroupSize), uvec3(uvec4((gl_WorkGroupSize), 0u))))) + uvec3(0u, 0u, 0u)) ^ uvec3(0u, 0u, 0u))), gl_WorkGroupSize), uvec3(0u, _GLF_IDENTITY(0u, (0u) << 0u), 0u) ^ (clamp(gl_WorkGroupSize, gl_WorkGroupSize, gl_WorkGroupSize))))) << uvec3(0u, _GLF_IDENTITY(0u, 0u ^ (0u)), 0u)))))), ~ (~ (uvec3(_GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupSize, (_GLF_IDENTITY(gl_WorkGroupSize, _GLF_IDENTITY(clamp(gl_WorkGroupSize, _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, _GLF_IDENTITY((gl_WorkGroupSize) + uvec3(0u, 0u, 0u), ((gl_WorkGroupSize) + uvec3(0u, 0u, 0u)) ^ uvec3(0u, 0u, 0u))), clamp(_GLF_IDENTITY(gl_WorkGroupSize, _GLF_IDENTITY((gl_WorkGroupSize) + uvec3(0u, 0u, 0u), ((gl_WorkGroupSize) + uvec3(0u, 0u, 0u)) ^ uvec3(0u, 0u, 0u))), _GLF_IDENTITY(gl_WorkGroupSize, _GLF_IDENTITY((gl_WorkGroupSize) + uvec3(0u, 0u, 0u), ((gl_WorkGroupSize) + uvec3(0u, 0u, 0u)) ^ uvec3(0u, 0u, 0u))), _GLF_IDENTITY(gl_WorkGroupSize, _GLF_IDENTITY((gl_WorkGroupSize) + uvec3(0u, 0u, 0u), ((gl_WorkGroupSize) + uvec3(0u, 0u, 0u)) ^ uvec3(0u, 0u, 0u))))), gl_WorkGroupSize), uvec3(0u, _GLF_IDENTITY(0u, (0u) << 0u), 0u) ^ (clamp(gl_WorkGroupSize, gl_WorkGroupSize, gl_WorkGroupSize))))) << uvec3(0u, _GLF_IDENTITY(0u, 0u ^ (0u)), 0u))), uvec3(0u, 0u, 0u) ^ ((_GLF_IDENTITY(gl_WorkGroupSize, (_GLF_IDENTITY(gl_WorkGroupSize, _GLF_IDENTITY(clamp(gl_WorkGroupSize, _GLF_IDENTITY(gl_WorkGroupSize, _GLF_IDENTITY((gl_WorkGroupSize) + uvec3(0u, 0u, 0u), ((gl_WorkGroupSize) + uvec3(0u, 0u, 0u)) ^ uvec3(0u, 0u, 0u))), gl_WorkGroupSize), uvec3(0u, _GLF_IDENTITY(0u, (0u) << 0u), 0u) ^ (clamp(gl_WorkGroupSize, gl_WorkGroupSize, gl_WorkGroupSize))))) << uvec3(0u, _GLF_IDENTITY(0u, 0u ^ (0u)), 0u))))))))))), (uvec3(0u, 0u, 0u) | (_GLF_IDENTITY(gl_WorkGroupSize, (_GLF_IDENTITY(gl_WorkGroupSize, _GLF_IDENTITY(clamp(gl_WorkGroupSize, gl_WorkGroupSize, gl_WorkGroupSize), uvec3(0u, 0u, 0u) ^ (clamp(gl_WorkGroupSize, gl_WorkGroupSize, gl_WorkGroupSize))))) << uvec3(_GLF_IDENTITY(0u, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(197016u) : 0u)), 0u, 0u)))) - uvec3(0u, 0u, _GLF_IDENTITY(0u, 1u * (0u)))))) - uvec3(0u, 0u, 0u)), uvec3(0u, 0u, 0u) | (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, (_GLF_IDENTITY(gl_WorkGroupSize, clamp(gl_WorkGroupSize, _GLF_IDENTITY(gl_WorkGroupSize, uvec3(gl_WorkGroupSize[0], gl_WorkGroupSize[1], gl_WorkGroupSize[2])), gl_WorkGroupSize))) << uvec3(0u, 0u, 0u)), _GLF_IDENTITY(uvec3(0u, 0u, 0u) | (_GLF_IDENTITY(gl_WorkGroupSize, (_GLF_IDENTITY(gl_WorkGroupSize, _GLF_IDENTITY(clamp(gl_WorkGroupSize, _GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) + uvec3(0u, 0u, 0u)), gl_WorkGroupSize), _GLF_IDENTITY(uvec3(0u, _GLF_IDENTITY(0u, (0u) << 0u), 0u) ^ (clamp(gl_WorkGroupSize, gl_WorkGroupSize, gl_WorkGroupSize)), (uvec3(0u, _GLF_IDENTITY(0u, (0u) << 0u), 0u) ^ (clamp(gl_WorkGroupSize, gl_WorkGroupSize, gl_WorkGroupSize))) << uvec3(0u, 0u, 0u))))) << uvec3(0u, 0u, 0u))), (uvec3(_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) / 1u)) | (0u)), 0u, 0u) | (_GLF_IDENTITY(gl_WorkGroupSize, (_GLF_IDENTITY(gl_WorkGroupSize, _GLF_IDENTITY(clamp(gl_WorkGroupSize, gl_WorkGroupSize, gl_WorkGroupSize), uvec3(0u, 0u, 0u) ^ (clamp(gl_WorkGroupSize, gl_WorkGroupSize, gl_WorkGroupSize))))) << uvec3(0u, 0u, 0u)))) - uvec3(0u, 0u, _GLF_IDENTITY(0u, 1u * (0u))))), (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, (_GLF_IDENTITY(gl_WorkGroupSize, clamp(gl_WorkGroupSize, _GLF_IDENTITY(gl_WorkGroupSize, uvec3(gl_WorkGroupSize[0], gl_WorkGroupSize[1], gl_WorkGroupSize[2])), gl_WorkGroupSize))) << uvec3(0u, 0u, 0u)), _GLF_IDENTITY(uvec3(0u, 0u, 0u) | (_GLF_IDENTITY(gl_WorkGroupSize, (_GLF_IDENTITY(gl_WorkGroupSize, _GLF_IDENTITY(clamp(gl_WorkGroupSize, _GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) + uvec3(0u, 0u, 0u)), gl_WorkGroupSize), _GLF_IDENTITY(uvec3(0u, _GLF_IDENTITY(0u, (0u) << 0u), 0u) ^ (clamp(gl_WorkGroupSize, gl_WorkGroupSize, gl_WorkGroupSize)), (uvec3(0u, _GLF_IDENTITY(0u, (0u) << 0u), 0u) ^ (clamp(gl_WorkGroupSize, gl_WorkGroupSize, gl_WorkGroupSize))) << uvec3(0u, 0u, 0u))))) << uvec3(0u, 0u, 0u))), (uvec3(_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) / 1u)) | (0u)), 0u, 0u) | (_GLF_IDENTITY(gl_WorkGroupSize, (_GLF_IDENTITY(gl_WorkGroupSize, _GLF_IDENTITY(clamp(gl_WorkGroupSize, gl_WorkGroupSize, gl_WorkGroupSize), uvec3(0u, 0u, 0u) ^ (clamp(gl_WorkGroupSize, gl_WorkGroupSize, gl_WorkGroupSize))))) << uvec3(0u, 0u, 0u)))) - uvec3(0u, 0u, _GLF_IDENTITY(0u, 1u * (0u)))))) | uvec3(0u, 0u, 0u)))).x, ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, (_GLF_IDENTITY(gl_WorkGroupSize, clamp(_GLF_IDENTITY(gl_WorkGroupSize, max(gl_WorkGroupSize, gl_WorkGroupSize)), _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, clamp(gl_WorkGroupSize, gl_WorkGroupSize, gl_WorkGroupSize)), uvec3(gl_WorkGroupSize[0], gl_WorkGroupSize[1], gl_WorkGroupSize[2])), gl_WorkGroupSize))) << uvec3(0u, 0u, 0u)), _GLF_IDENTITY(uvec3(0u, 0u, 0u) | _GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupSize, (_GLF_IDENTITY(gl_WorkGroupSize, _GLF_IDENTITY(clamp(gl_WorkGroupSize, _GLF_IDENTITY(gl_WorkGroupSize, _GLF_IDENTITY((gl_WorkGroupSize) + uvec3(0u, 0u, 0u), ((gl_WorkGroupSize) + uvec3(0u, 0u, 0u)) ^ uvec3(0u, 0u, 0u))), gl_WorkGroupSize), uvec3(0u, _GLF_IDENTITY(0u, (0u) << 0u), 0u) ^ (clamp(gl_WorkGroupSize, gl_WorkGroupSize, gl_WorkGroupSize))))) << uvec3(0u, _GLF_IDENTITY(0u, 0u ^ (0u)), 0u))), uvec3(_GLF_IDENTITY(uvec3(_GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupSize, (_GLF_IDENTITY(gl_WorkGroupSize, _GLF_IDENTITY(clamp(gl_WorkGroupSize, _GLF_IDENTITY(gl_WorkGroupSize, _GLF_IDENTITY((gl_WorkGroupSize) + uvec3(0u, 0u, 0u), ((gl_WorkGroupSize) + uvec3(0u, 0u, 0u)) ^ uvec3(0u, 0u, 0u))), gl_WorkGroupSize), uvec3(0u, _GLF_IDENTITY(0u, (0u) << 0u), 0u) ^ (clamp(gl_WorkGroupSize, gl_WorkGroupSize, gl_WorkGroupSize))))) << uvec3(0u, _GLF_IDENTITY(0u, 0u ^ (0u)), 0u))), uvec3(0u, 0u, 0u) ^ ((_GLF_IDENTITY(gl_WorkGroupSize, (_GLF_IDENTITY(gl_WorkGroupSize, _GLF_IDENTITY(clamp(gl_WorkGroupSize, _GLF_IDENTITY(gl_WorkGroupSize, _GLF_IDENTITY((gl_WorkGroupSize) + uvec3(0u, 0u, 0u), ((gl_WorkGroupSize) + uvec3(0u, 0u, 0u)) ^ uvec3(0u, 0u, 0u))), gl_WorkGroupSize), uvec3(0u, _GLF_IDENTITY(0u, (0u) << 0u), 0u) ^ (clamp(gl_WorkGroupSize, gl_WorkGroupSize, gl_WorkGroupSize))))) << uvec3(0u, _GLF_IDENTITY(0u, 0u ^ (0u)), 0u)))))), ~ (~ (uvec3(_GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupSize, (_GLF_IDENTITY(gl_WorkGroupSize, _GLF_IDENTITY(clamp(gl_WorkGroupSize, _GLF_IDENTITY(gl_WorkGroupSize, _GLF_IDENTITY((gl_WorkGroupSize) + uvec3(0u, 0u, 0u), ((gl_WorkGroupSize) + uvec3(0u, 0u, 0u)) ^ uvec3(0u, 0u, 0u))), gl_WorkGroupSize), uvec3(0u, _GLF_IDENTITY(0u, (0u) << 0u), 0u) ^ (clamp(gl_WorkGroupSize, gl_WorkGroupSize, gl_WorkGroupSize))))) << uvec3(0u, _GLF_IDENTITY(0u, 0u ^ (0u)), 0u))), uvec3(0u, 0u, 0u) ^ ((_GLF_IDENTITY(gl_WorkGroupSize, (_GLF_IDENTITY(gl_WorkGroupSize, _GLF_IDENTITY(clamp(gl_WorkGroupSize, _GLF_IDENTITY(gl_WorkGroupSize, _GLF_IDENTITY((gl_WorkGroupSize) + uvec3(0u, 0u, 0u), ((gl_WorkGroupSize) + uvec3(0u, 0u, 0u)) ^ uvec3(0u, 0u, 0u))), gl_WorkGroupSize), uvec3(0u, _GLF_IDENTITY(0u, (0u) << 0u), 0u) ^ (clamp(gl_WorkGroupSize, gl_WorkGroupSize, gl_WorkGroupSize))))) << uvec3(0u, _GLF_IDENTITY(0u, 0u ^ (0u)), 0u))))))))))), (uvec3(0u, 0u, 0u) | (_GLF_IDENTITY(gl_WorkGroupSize, (_GLF_IDENTITY(gl_WorkGroupSize, _GLF_IDENTITY(clamp(gl_WorkGroupSize, gl_WorkGroupSize, gl_WorkGroupSize), uvec3(0u, 0u, 0u) ^ (clamp(gl_WorkGroupSize, gl_WorkGroupSize, gl_WorkGroupSize))))) << uvec3(0u, 0u, 0u)))) - uvec3(0u, 0u, _GLF_IDENTITY(0u, 1u * (0u))))), (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, (_GLF_IDENTITY(gl_WorkGroupSize, clamp(_GLF_IDENTITY(gl_WorkGroupSize, max(gl_WorkGroupSize, gl_WorkGroupSize)), _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, clamp(gl_WorkGroupSize, gl_WorkGroupSize, gl_WorkGroupSize)), uvec3(gl_WorkGroupSize[0], gl_WorkGroupSize[1], gl_WorkGroupSize[2])), gl_WorkGroupSize))) << uvec3(0u, 0u, 0u)), _GLF_IDENTITY(uvec3(0u, 0u, 0u) | _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupSize, (_GLF_IDENTITY(gl_WorkGroupSize, _GLF_IDENTITY(clamp(gl_WorkGroupSize, _GLF_IDENTITY(gl_WorkGroupSize, _GLF_IDENTITY((gl_WorkGroupSize) + uvec3(0u, 0u, 0u), ((gl_WorkGroupSize) + _GLF_IDENTITY(uvec3(0u, 0u, 0u), (_GLF_IDENTITY(uvec3(0u, 0u, 0u), uvec3(uvec3(uvec3(0u, 0u, 0u))))) >> (uvec3(0u, 0u, 0u) ^ uvec3(0u, 0u, 0u)))) ^ uvec3(0u, 0u, 0u))), gl_WorkGroupSize), uvec3(0u, _GLF_IDENTITY(0u, (0u) << 0u), 0u) ^ (clamp(gl_WorkGroupSize, gl_WorkGroupSize, gl_WorkGroupSize))))) << uvec3(0u, _GLF_IDENTITY(0u, 0u ^ (0u)), 0u))), ((_GLF_IDENTITY(gl_WorkGroupSize, (_GLF_IDENTITY(gl_WorkGroupSize, _GLF_IDENTITY(clamp(gl_WorkGroupSize, _GLF_IDENTITY(gl_WorkGroupSize, _GLF_IDENTITY((gl_WorkGroupSize) + uvec3(0u, 0u, 0u), ((gl_WorkGroupSize) + _GLF_IDENTITY(uvec3(0u, 0u, 0u), (_GLF_IDENTITY(uvec3(0u, 0u, 0u), uvec3(uvec3(uvec3(0u, 0u, 0u))))) >> (uvec3(0u, 0u, 0u) ^ uvec3(0u, 0u, 0u)))) ^ uvec3(0u, 0u, 0u))), gl_WorkGroupSize), uvec3(0u, _GLF_IDENTITY(0u, (0u) << 0u), 0u) ^ (clamp(gl_WorkGroupSize, gl_WorkGroupSize, gl_WorkGroupSize))))) << uvec3(0u, _GLF_IDENTITY(0u, 0u ^ (0u)), 0u)))) | ((_GLF_IDENTITY(gl_WorkGroupSize, (_GLF_IDENTITY(gl_WorkGroupSize, _GLF_IDENTITY(clamp(gl_WorkGroupSize, _GLF_IDENTITY(gl_WorkGroupSize, _GLF_IDENTITY((gl_WorkGroupSize) + uvec3(0u, 0u, 0u), ((gl_WorkGroupSize) + _GLF_IDENTITY(uvec3(0u, 0u, 0u), (_GLF_IDENTITY(uvec3(0u, 0u, 0u), uvec3(uvec3(uvec3(0u, 0u, 0u))))) >> (uvec3(0u, 0u, 0u) ^ uvec3(0u, 0u, 0u)))) ^ uvec3(0u, 0u, 0u))), gl_WorkGroupSize), uvec3(0u, _GLF_IDENTITY(0u, (0u) << 0u), 0u) ^ (clamp(gl_WorkGroupSize, gl_WorkGroupSize, gl_WorkGroupSize))))) << uvec3(0u, _GLF_IDENTITY(0u, 0u ^ (0u)), 0u))))), uvec3(_GLF_IDENTITY(uvec3(_GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupSize, (_GLF_IDENTITY(gl_WorkGroupSize, _GLF_IDENTITY(clamp(gl_WorkGroupSize, _GLF_IDENTITY(gl_WorkGroupSize, _GLF_IDENTITY((gl_WorkGroupSize) + uvec3(0u, 0u, 0u), ((gl_WorkGroupSize) + uvec3(0u, 0u, 0u)) ^ uvec3(0u, 0u, 0u))), gl_WorkGroupSize), uvec3(0u, _GLF_IDENTITY(0u, (0u) << 0u), 0u) ^ (clamp(gl_WorkGroupSize, _GLF_IDENTITY(gl_WorkGroupSize, (_GLF_IDENTITY(gl_WorkGroupSize, max(_GLF_IDENTITY(gl_WorkGroupSize, ~ (~ (gl_WorkGroupSize))), gl_WorkGroupSize))) / uvec3(1u, 1u, 1u)), gl_WorkGroupSize))))) << uvec3(0u, _GLF_IDENTITY(0u, 0u ^ (0u)), 0u))), uvec3(0u, 0u, 0u) ^ ((_GLF_IDENTITY(gl_WorkGroupSize, (_GLF_IDENTITY(gl_WorkGroupSize, _GLF_IDENTITY(clamp(gl_WorkGroupSize, _GLF_IDENTITY(gl_WorkGroupSize, _GLF_IDENTITY((gl_WorkGroupSize) + uvec3(0u, 0u, 0u), (_GLF_IDENTITY((gl_WorkGroupSize), (false ? _GLF_FUZZED((uvec3(102960u, 10275u, 180205u) & uvec3(67952u, 13246u, 12924u))) : _GLF_IDENTITY((gl_WorkGroupSize), uvec3(uvec4((gl_WorkGroupSize), 0u))))) + uvec3(0u, 0u, 0u)) ^ uvec3(0u, 0u, 0u))), gl_WorkGroupSize), uvec3(0u, _GLF_IDENTITY(0u, (0u) << 0u), 0u) ^ (clamp(gl_WorkGroupSize, gl_WorkGroupSize, gl_WorkGroupSize))))) << uvec3(0u, _GLF_IDENTITY(0u, 0u ^ (0u)), 0u)))))), ~ (~ (uvec3(_GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupSize, (_GLF_IDENTITY(gl_WorkGroupSize, _GLF_IDENTITY(clamp(gl_WorkGroupSize, _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, _GLF_IDENTITY((gl_WorkGroupSize) + uvec3(0u, 0u, 0u), ((gl_WorkGroupSize) + uvec3(0u, 0u, 0u)) ^ uvec3(0u, 0u, 0u))), clamp(_GLF_IDENTITY(gl_WorkGroupSize, _GLF_IDENTITY((gl_WorkGroupSize) + uvec3(0u, 0u, 0u), ((gl_WorkGroupSize) + uvec3(0u, 0u, 0u)) ^ uvec3(0u, 0u, 0u))), _GLF_IDENTITY(gl_WorkGroupSize, _GLF_IDENTITY((gl_WorkGroupSize) + uvec3(0u, 0u, 0u), ((gl_WorkGroupSize) + uvec3(0u, 0u, 0u)) ^ uvec3(0u, 0u, 0u))), _GLF_IDENTITY(gl_WorkGroupSize, _GLF_IDENTITY((gl_WorkGroupSize) + uvec3(0u, 0u, 0u), ((gl_WorkGroupSize) + uvec3(0u, 0u, 0u)) ^ uvec3(0u, 0u, 0u))))), gl_WorkGroupSize), uvec3(0u, _GLF_IDENTITY(0u, (0u) << 0u), 0u) ^ (clamp(gl_WorkGroupSize, gl_WorkGroupSize, gl_WorkGroupSize))))) << uvec3(0u, _GLF_IDENTITY(0u, 0u ^ (0u)), 0u))), uvec3(0u, 0u, 0u) ^ ((_GLF_IDENTITY(gl_WorkGroupSize, (_GLF_IDENTITY(gl_WorkGroupSize, _GLF_IDENTITY(clamp(gl_WorkGroupSize, _GLF_IDENTITY(gl_WorkGroupSize, _GLF_IDENTITY((gl_WorkGroupSize) + uvec3(0u, 0u, 0u), ((gl_WorkGroupSize) + uvec3(0u, 0u, 0u)) ^ uvec3(0u, 0u, 0u))), gl_WorkGroupSize), uvec3(0u, _GLF_IDENTITY(0u, (0u) << 0u), 0u) ^ (clamp(gl_WorkGroupSize, gl_WorkGroupSize, gl_WorkGroupSize))))) << uvec3(0u, _GLF_IDENTITY(0u, 0u ^ (0u)), 0u))))))))))), (uvec3(0u, 0u, 0u) | (_GLF_IDENTITY(gl_WorkGroupSize, (_GLF_IDENTITY(gl_WorkGroupSize, _GLF_IDENTITY(clamp(gl_WorkGroupSize, gl_WorkGroupSize, gl_WorkGroupSize), uvec3(0u, 0u, 0u) ^ (clamp(gl_WorkGroupSize, gl_WorkGroupSize, gl_WorkGroupSize))))) << uvec3(_GLF_IDENTITY(0u, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(197016u) : 0u)), 0u, 0u)))) - uvec3(0u, 0u, _GLF_IDENTITY(0u, 1u * (0u)))))) - uvec3(0u, 0u, 0u)), uvec3(0u, 0u, 0u) | (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, (_GLF_IDENTITY(gl_WorkGroupSize, clamp(gl_WorkGroupSize, _GLF_IDENTITY(gl_WorkGroupSize, uvec3(gl_WorkGroupSize[0], gl_WorkGroupSize[1], gl_WorkGroupSize[2])), gl_WorkGroupSize))) << uvec3(0u, 0u, 0u)), _GLF_IDENTITY(uvec3(0u, 0u, 0u) | (_GLF_IDENTITY(gl_WorkGroupSize, (_GLF_IDENTITY(gl_WorkGroupSize, _GLF_IDENTITY(clamp(gl_WorkGroupSize, _GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) + uvec3(0u, 0u, 0u)), gl_WorkGroupSize), _GLF_IDENTITY(uvec3(0u, _GLF_IDENTITY(0u, (0u) << 0u), 0u) ^ (clamp(gl_WorkGroupSize, gl_WorkGroupSize, gl_WorkGroupSize)), (uvec3(0u, _GLF_IDENTITY(0u, (0u) << 0u), 0u) ^ (clamp(gl_WorkGroupSize, gl_WorkGroupSize, gl_WorkGroupSize))) << uvec3(0u, 0u, 0u))))) << uvec3(0u, 0u, 0u))), (uvec3(_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) / 1u)) | (0u)), 0u, 0u) | (_GLF_IDENTITY(gl_WorkGroupSize, (_GLF_IDENTITY(gl_WorkGroupSize, _GLF_IDENTITY(clamp(gl_WorkGroupSize, gl_WorkGroupSize, gl_WorkGroupSize), uvec3(0u, 0u, 0u) ^ (clamp(gl_WorkGroupSize, gl_WorkGroupSize, gl_WorkGroupSize))))) << uvec3(0u, 0u, 0u)))) - uvec3(0u, 0u, _GLF_IDENTITY(0u, 1u * (0u))))), (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, (_GLF_IDENTITY(gl_WorkGroupSize, clamp(gl_WorkGroupSize, _GLF_IDENTITY(gl_WorkGroupSize, uvec3(gl_WorkGroupSize[0], gl_WorkGroupSize[1], gl_WorkGroupSize[2])), gl_WorkGroupSize))) << uvec3(0u, 0u, 0u)), _GLF_IDENTITY(uvec3(0u, 0u, 0u) | (_GLF_IDENTITY(gl_WorkGroupSize, (_GLF_IDENTITY(gl_WorkGroupSize, _GLF_IDENTITY(clamp(gl_WorkGroupSize, _GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) + uvec3(0u, 0u, 0u)), gl_WorkGroupSize), _GLF_IDENTITY(uvec3(0u, _GLF_IDENTITY(0u, (0u) << 0u), 0u) ^ (clamp(gl_WorkGroupSize, gl_WorkGroupSize, gl_WorkGroupSize)), (uvec3(0u, _GLF_IDENTITY(0u, (0u) << 0u), 0u) ^ (clamp(gl_WorkGroupSize, gl_WorkGroupSize, gl_WorkGroupSize))) << uvec3(0u, 0u, 0u))))) << uvec3(0u, 0u, 0u))), (uvec3(_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) / 1u)) | (0u)), 0u, 0u) | (_GLF_IDENTITY(gl_WorkGroupSize, (_GLF_IDENTITY(gl_WorkGroupSize, _GLF_IDENTITY(clamp(gl_WorkGroupSize, gl_WorkGroupSize, gl_WorkGroupSize), uvec3(0u, 0u, 0u) ^ (clamp(gl_WorkGroupSize, gl_WorkGroupSize, gl_WorkGroupSize))))) << uvec3(0u, 0u, 0u)))) - uvec3(0u, 0u, _GLF_IDENTITY(0u, 1u * (0u)))))) | uvec3(0u, 0u, 0u)))).x))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, (_GLF_IDENTITY(gl_WorkGroupSize, clamp(_GLF_IDENTITY(gl_WorkGroupSize, max(gl_WorkGroupSize, gl_WorkGroupSize)), _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, clamp(gl_WorkGroupSize, gl_WorkGroupSize, gl_WorkGroupSize)), uvec3(gl_WorkGroupSize[0], gl_WorkGroupSize[1], gl_WorkGroupSize[2])), gl_WorkGroupSize))) << uvec3(0u, 0u, 0u)), _GLF_IDENTITY(uvec3(0u, 0u, 0u) | _GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupSize, (_GLF_IDENTITY(gl_WorkGroupSize, _GLF_IDENTITY(clamp(gl_WorkGroupSize, _GLF_IDENTITY(gl_WorkGroupSize, _GLF_IDENTITY((gl_WorkGroupSize) + uvec3(0u, 0u, 0u), ((gl_WorkGroupSize) + uvec3(0u, 0u, 0u)) ^ uvec3(0u, 0u, 0u))), gl_WorkGroupSize), uvec3(0u, _GLF_IDENTITY(0u, (0u) << 0u), 0u) ^ (clamp(gl_WorkGroupSize, gl_WorkGroupSize, gl_WorkGroupSize))))) << uvec3(0u, _GLF_IDENTITY(0u, 0u ^ (0u)), 0u))), uvec3(_GLF_IDENTITY(uvec3(_GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupSize, (_GLF_IDENTITY(gl_WorkGroupSize, _GLF_IDENTITY(clamp(gl_WorkGroupSize, _GLF_IDENTITY(gl_WorkGroupSize, _GLF_IDENTITY((gl_WorkGroupSize) + uvec3(0u, 0u, 0u), ((gl_WorkGroupSize) + uvec3(0u, 0u, 0u)) ^ uvec3(0u, 0u, 0u))), gl_WorkGroupSize), uvec3(0u, _GLF_IDENTITY(0u, (0u) << 0u), 0u) ^ (clamp(gl_WorkGroupSize, gl_WorkGroupSize, gl_WorkGroupSize))))) << uvec3(0u, _GLF_IDENTITY(0u, 0u ^ (0u)), 0u))), uvec3(0u, 0u, 0u) ^ ((_GLF_IDENTITY(gl_WorkGroupSize, (_GLF_IDENTITY(gl_WorkGroupSize, _GLF_IDENTITY(clamp(gl_WorkGroupSize, _GLF_IDENTITY(gl_WorkGroupSize, _GLF_IDENTITY((gl_WorkGroupSize) + uvec3(0u, 0u, 0u), ((gl_WorkGroupSize) + uvec3(0u, 0u, 0u)) ^ uvec3(0u, 0u, 0u))), gl_WorkGroupSize), uvec3(0u, _GLF_IDENTITY(0u, (0u) << 0u), 0u) ^ (clamp(gl_WorkGroupSize, gl_WorkGroupSize, gl_WorkGroupSize))))) << uvec3(0u, _GLF_IDENTITY(0u, 0u ^ (0u)), 0u)))))), ~ (~ (uvec3(_GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupSize, (_GLF_IDENTITY(gl_WorkGroupSize, _GLF_IDENTITY(clamp(gl_WorkGroupSize, _GLF_IDENTITY(gl_WorkGroupSize, _GLF_IDENTITY((gl_WorkGroupSize) + uvec3(0u, 0u, 0u), ((gl_WorkGroupSize) + uvec3(0u, 0u, 0u)) ^ uvec3(0u, 0u, 0u))), gl_WorkGroupSize), uvec3(0u, _GLF_IDENTITY(0u, (0u) << 0u), 0u) ^ (clamp(gl_WorkGroupSize, gl_WorkGroupSize, gl_WorkGroupSize))))) << uvec3(0u, _GLF_IDENTITY(0u, 0u ^ (0u)), 0u))), uvec3(0u, 0u, 0u) ^ ((_GLF_IDENTITY(gl_WorkGroupSize, (_GLF_IDENTITY(gl_WorkGroupSize, _GLF_IDENTITY(clamp(gl_WorkGroupSize, _GLF_IDENTITY(gl_WorkGroupSize, _GLF_IDENTITY((gl_WorkGroupSize) + uvec3(0u, 0u, 0u), ((gl_WorkGroupSize) + uvec3(0u, 0u, 0u)) ^ uvec3(0u, 0u, 0u))), gl_WorkGroupSize), uvec3(0u, _GLF_IDENTITY(0u, (0u) << 0u), 0u) ^ (clamp(gl_WorkGroupSize, gl_WorkGroupSize, gl_WorkGroupSize))))) << uvec3(0u, _GLF_IDENTITY(0u, 0u ^ (0u)), 0u))))))))))), (uvec3(0u, 0u, 0u) | (_GLF_IDENTITY(gl_WorkGroupSize, (_GLF_IDENTITY(gl_WorkGroupSize, _GLF_IDENTITY(clamp(gl_WorkGroupSize, gl_WorkGroupSize, gl_WorkGroupSize), uvec3(0u, 0u, 0u) ^ (clamp(gl_WorkGroupSize, gl_WorkGroupSize, gl_WorkGroupSize))))) << uvec3(0u, 0u, 0u)))) - uvec3(0u, 0u, _GLF_IDENTITY(0u, 1u * (0u))))), (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, (_GLF_IDENTITY(gl_WorkGroupSize, clamp(_GLF_IDENTITY(gl_WorkGroupSize, max(gl_WorkGroupSize, gl_WorkGroupSize)), _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, clamp(gl_WorkGroupSize, gl_WorkGroupSize, gl_WorkGroupSize)), uvec3(gl_WorkGroupSize[0], gl_WorkGroupSize[1], gl_WorkGroupSize[2])), gl_WorkGroupSize))) << uvec3(0u, 0u, 0u)), _GLF_IDENTITY(uvec3(0u, 0u, 0u) | _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupSize, (_GLF_IDENTITY(gl_WorkGroupSize, _GLF_IDENTITY(clamp(gl_WorkGroupSize, _GLF_IDENTITY(gl_WorkGroupSize, _GLF_IDENTITY((gl_WorkGroupSize) + uvec3(0u, 0u, 0u), ((gl_WorkGroupSize) + _GLF_IDENTITY(uvec3(0u, 0u, 0u), (_GLF_IDENTITY(uvec3(0u, 0u, 0u), uvec3(uvec3(uvec3(0u, 0u, 0u))))) >> (uvec3(0u, 0u, 0u) ^ uvec3(0u, 0u, 0u)))) ^ uvec3(0u, 0u, 0u))), gl_WorkGroupSize), uvec3(0u, _GLF_IDENTITY(0u, (0u) << 0u), 0u) ^ (clamp(gl_WorkGroupSize, gl_WorkGroupSize, gl_WorkGroupSize))))) << uvec3(0u, _GLF_IDENTITY(0u, 0u ^ (0u)), 0u))), ((_GLF_IDENTITY(gl_WorkGroupSize, (_GLF_IDENTITY(gl_WorkGroupSize, _GLF_IDENTITY(clamp(gl_WorkGroupSize, _GLF_IDENTITY(gl_WorkGroupSize, _GLF_IDENTITY((gl_WorkGroupSize) + uvec3(0u, 0u, 0u), ((gl_WorkGroupSize) + _GLF_IDENTITY(uvec3(0u, 0u, 0u), (_GLF_IDENTITY(uvec3(0u, 0u, 0u), uvec3(uvec3(uvec3(0u, 0u, 0u))))) >> (uvec3(0u, 0u, 0u) ^ uvec3(0u, 0u, 0u)))) ^ uvec3(0u, 0u, 0u))), gl_WorkGroupSize), uvec3(0u, _GLF_IDENTITY(0u, (0u) << 0u), 0u) ^ (clamp(gl_WorkGroupSize, gl_WorkGroupSize, gl_WorkGroupSize))))) << uvec3(0u, _GLF_IDENTITY(0u, 0u ^ (0u)), 0u)))) | ((_GLF_IDENTITY(gl_WorkGroupSize, (_GLF_IDENTITY(gl_WorkGroupSize, _GLF_IDENTITY(clamp(gl_WorkGroupSize, _GLF_IDENTITY(gl_WorkGroupSize, _GLF_IDENTITY((gl_WorkGroupSize) + uvec3(0u, 0u, 0u), ((gl_WorkGroupSize) + _GLF_IDENTITY(uvec3(0u, 0u, 0u), (_GLF_IDENTITY(uvec3(0u, 0u, 0u), uvec3(uvec3(uvec3(0u, 0u, 0u))))) >> (uvec3(0u, 0u, 0u) ^ uvec3(0u, 0u, 0u)))) ^ uvec3(0u, 0u, 0u))), gl_WorkGroupSize), uvec3(0u, _GLF_IDENTITY(0u, (0u) << 0u), 0u) ^ (clamp(gl_WorkGroupSize, gl_WorkGroupSize, gl_WorkGroupSize))))) << uvec3(0u, _GLF_IDENTITY(0u, 0u ^ (0u)), 0u))))), uvec3(_GLF_IDENTITY(uvec3(_GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupSize, (_GLF_IDENTITY(gl_WorkGroupSize, _GLF_IDENTITY(clamp(gl_WorkGroupSize, _GLF_IDENTITY(gl_WorkGroupSize, _GLF_IDENTITY((gl_WorkGroupSize) + uvec3(0u, 0u, 0u), ((gl_WorkGroupSize) + uvec3(0u, 0u, 0u)) ^ uvec3(0u, 0u, 0u))), gl_WorkGroupSize), uvec3(0u, _GLF_IDENTITY(0u, (0u) << 0u), 0u) ^ (clamp(gl_WorkGroupSize, _GLF_IDENTITY(gl_WorkGroupSize, (_GLF_IDENTITY(gl_WorkGroupSize, max(_GLF_IDENTITY(gl_WorkGroupSize, ~ (~ (gl_WorkGroupSize))), gl_WorkGroupSize))) / uvec3(1u, 1u, 1u)), gl_WorkGroupSize))))) << uvec3(0u, _GLF_IDENTITY(0u, 0u ^ (0u)), 0u))), uvec3(0u, 0u, 0u) ^ ((_GLF_IDENTITY(gl_WorkGroupSize, (_GLF_IDENTITY(gl_WorkGroupSize, _GLF_IDENTITY(clamp(gl_WorkGroupSize, _GLF_IDENTITY(gl_WorkGroupSize, _GLF_IDENTITY((gl_WorkGroupSize) + uvec3(0u, 0u, 0u), (_GLF_IDENTITY((gl_WorkGroupSize), (false ? _GLF_FUZZED((uvec3(102960u, 10275u, 180205u) & uvec3(67952u, 13246u, 12924u))) : _GLF_IDENTITY((gl_WorkGroupSize), uvec3(uvec4((gl_WorkGroupSize), 0u))))) + uvec3(0u, 0u, 0u)) ^ uvec3(0u, 0u, 0u))), gl_WorkGroupSize), uvec3(0u, _GLF_IDENTITY(0u, (0u) << 0u), 0u) ^ (clamp(gl_WorkGroupSize, gl_WorkGroupSize, gl_WorkGroupSize))))) << uvec3(0u, _GLF_IDENTITY(0u, 0u ^ (0u)), 0u)))))), ~ (~ (uvec3(_GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupSize, (_GLF_IDENTITY(gl_WorkGroupSize, _GLF_IDENTITY(clamp(gl_WorkGroupSize, _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, _GLF_IDENTITY((gl_WorkGroupSize) + uvec3(0u, 0u, 0u), ((gl_WorkGroupSize) + uvec3(0u, 0u, 0u)) ^ uvec3(0u, 0u, 0u))), clamp(_GLF_IDENTITY(gl_WorkGroupSize, _GLF_IDENTITY((gl_WorkGroupSize) + uvec3(0u, 0u, 0u), ((gl_WorkGroupSize) + uvec3(0u, 0u, 0u)) ^ uvec3(0u, 0u, 0u))), _GLF_IDENTITY(gl_WorkGroupSize, _GLF_IDENTITY((gl_WorkGroupSize) + uvec3(0u, 0u, 0u), ((gl_WorkGroupSize) + uvec3(0u, 0u, 0u)) ^ uvec3(0u, 0u, 0u))), _GLF_IDENTITY(gl_WorkGroupSize, _GLF_IDENTITY((gl_WorkGroupSize) + uvec3(0u, 0u, 0u), ((gl_WorkGroupSize) + uvec3(0u, 0u, 0u)) ^ uvec3(0u, 0u, 0u))))), gl_WorkGroupSize), uvec3(0u, _GLF_IDENTITY(0u, (0u) << 0u), 0u) ^ (clamp(gl_WorkGroupSize, gl_WorkGroupSize, gl_WorkGroupSize))))) << uvec3(0u, _GLF_IDENTITY(0u, 0u ^ (0u)), 0u))), uvec3(0u, 0u, 0u) ^ ((_GLF_IDENTITY(gl_WorkGroupSize, (_GLF_IDENTITY(gl_WorkGroupSize, _GLF_IDENTITY(clamp(gl_WorkGroupSize, _GLF_IDENTITY(gl_WorkGroupSize, _GLF_IDENTITY((gl_WorkGroupSize) + uvec3(0u, 0u, 0u), ((gl_WorkGroupSize) + uvec3(0u, 0u, 0u)) ^ uvec3(0u, 0u, 0u))), gl_WorkGroupSize), uvec3(0u, _GLF_IDENTITY(0u, (0u) << 0u), 0u) ^ (clamp(gl_WorkGroupSize, gl_WorkGroupSize, gl_WorkGroupSize))))) << uvec3(0u, _GLF_IDENTITY(0u, 0u ^ (0u)), 0u))))))))))), (uvec3(0u, 0u, 0u) | (_GLF_IDENTITY(gl_WorkGroupSize, (_GLF_IDENTITY(gl_WorkGroupSize, _GLF_IDENTITY(clamp(gl_WorkGroupSize, gl_WorkGroupSize, gl_WorkGroupSize), uvec3(0u, 0u, 0u) ^ (clamp(gl_WorkGroupSize, gl_WorkGroupSize, gl_WorkGroupSize))))) << uvec3(_GLF_IDENTITY(0u, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(197016u) : 0u)), 0u, 0u)))) - uvec3(0u, 0u, _GLF_IDENTITY(0u, 1u * (0u)))))) - uvec3(0u, 0u, 0u)), uvec3(0u, 0u, 0u) | (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, (_GLF_IDENTITY(gl_WorkGroupSize, clamp(gl_WorkGroupSize, _GLF_IDENTITY(gl_WorkGroupSize, uvec3(gl_WorkGroupSize[0], gl_WorkGroupSize[1], gl_WorkGroupSize[2])), gl_WorkGroupSize))) << uvec3(0u, 0u, 0u)), _GLF_IDENTITY(uvec3(0u, 0u, 0u) | (_GLF_IDENTITY(gl_WorkGroupSize, (_GLF_IDENTITY(gl_WorkGroupSize, _GLF_IDENTITY(clamp(gl_WorkGroupSize, _GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) + uvec3(0u, 0u, 0u)), gl_WorkGroupSize), _GLF_IDENTITY(uvec3(0u, _GLF_IDENTITY(0u, (0u) << 0u), 0u) ^ (clamp(gl_WorkGroupSize, gl_WorkGroupSize, gl_WorkGroupSize)), (uvec3(0u, _GLF_IDENTITY(0u, (0u) << 0u), 0u) ^ (clamp(gl_WorkGroupSize, gl_WorkGroupSize, gl_WorkGroupSize))) << uvec3(0u, 0u, 0u))))) << uvec3(0u, 0u, 0u))), (uvec3(_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) / 1u)) | (0u)), 0u, 0u) | (_GLF_IDENTITY(gl_WorkGroupSize, (_GLF_IDENTITY(gl_WorkGroupSize, _GLF_IDENTITY(clamp(gl_WorkGroupSize, gl_WorkGroupSize, gl_WorkGroupSize), uvec3(0u, 0u, 0u) ^ (clamp(gl_WorkGroupSize, gl_WorkGroupSize, gl_WorkGroupSize))))) << uvec3(0u, 0u, 0u)))) - uvec3(0u, 0u, _GLF_IDENTITY(0u, 1u * (0u))))), (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, (_GLF_IDENTITY(gl_WorkGroupSize, clamp(gl_WorkGroupSize, _GLF_IDENTITY(gl_WorkGroupSize, uvec3(gl_WorkGroupSize[0], gl_WorkGroupSize[1], gl_WorkGroupSize[2])), gl_WorkGroupSize))) << uvec3(0u, 0u, 0u)), _GLF_IDENTITY(uvec3(0u, 0u, 0u) | (_GLF_IDENTITY(gl_WorkGroupSize, (_GLF_IDENTITY(gl_WorkGroupSize, _GLF_IDENTITY(clamp(gl_WorkGroupSize, _GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) + uvec3(0u, 0u, 0u)), gl_WorkGroupSize), _GLF_IDENTITY(uvec3(0u, _GLF_IDENTITY(0u, (0u) << 0u), 0u) ^ (clamp(gl_WorkGroupSize, gl_WorkGroupSize, gl_WorkGroupSize)), (uvec3(0u, _GLF_IDENTITY(0u, (0u) << 0u), 0u) ^ (clamp(gl_WorkGroupSize, gl_WorkGroupSize, gl_WorkGroupSize))) << uvec3(0u, 0u, 0u))))) << uvec3(0u, 0u, 0u))), (uvec3(_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) / 1u)) | (0u)), 0u, 0u) | (_GLF_IDENTITY(gl_WorkGroupSize, (_GLF_IDENTITY(gl_WorkGroupSize, _GLF_IDENTITY(clamp(gl_WorkGroupSize, gl_WorkGroupSize, gl_WorkGroupSize), uvec3(0u, 0u, 0u) ^ (clamp(gl_WorkGroupSize, gl_WorkGroupSize, gl_WorkGroupSize))))) << uvec3(0u, 0u, 0u)))) - uvec3(0u, 0u, _GLF_IDENTITY(0u, 1u * (0u)))))) | uvec3(0u, 0u, 0u)))).x, ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, (_GLF_IDENTITY(gl_WorkGroupSize, clamp(_GLF_IDENTITY(gl_WorkGroupSize, max(gl_WorkGroupSize, gl_WorkGroupSize)), _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, clamp(gl_WorkGroupSize, gl_WorkGroupSize, gl_WorkGroupSize)), uvec3(gl_WorkGroupSize[0], gl_WorkGroupSize[1], gl_WorkGroupSize[2])), gl_WorkGroupSize))) << uvec3(0u, 0u, 0u)), _GLF_IDENTITY(uvec3(0u, 0u, 0u) | _GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupSize, (_GLF_IDENTITY(gl_WorkGroupSize, _GLF_IDENTITY(clamp(gl_WorkGroupSize, _GLF_IDENTITY(gl_WorkGroupSize, _GLF_IDENTITY((gl_WorkGroupSize) + uvec3(0u, 0u, 0u), ((gl_WorkGroupSize) + uvec3(0u, 0u, 0u)) ^ uvec3(0u, 0u, 0u))), gl_WorkGroupSize), uvec3(0u, _GLF_IDENTITY(0u, (0u) << 0u), 0u) ^ (clamp(gl_WorkGroupSize, gl_WorkGroupSize, gl_WorkGroupSize))))) << uvec3(0u, _GLF_IDENTITY(0u, 0u ^ (0u)), 0u))), uvec3(_GLF_IDENTITY(uvec3(_GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupSize, (_GLF_IDENTITY(gl_WorkGroupSize, _GLF_IDENTITY(clamp(gl_WorkGroupSize, _GLF_IDENTITY(gl_WorkGroupSize, _GLF_IDENTITY((gl_WorkGroupSize) + uvec3(0u, 0u, 0u), ((gl_WorkGroupSize) + uvec3(0u, 0u, 0u)) ^ uvec3(0u, 0u, 0u))), gl_WorkGroupSize), uvec3(0u, _GLF_IDENTITY(0u, (0u) << 0u), 0u) ^ (clamp(gl_WorkGroupSize, gl_WorkGroupSize, gl_WorkGroupSize))))) << uvec3(0u, _GLF_IDENTITY(0u, 0u ^ (0u)), 0u))), uvec3(0u, 0u, 0u) ^ ((_GLF_IDENTITY(gl_WorkGroupSize, (_GLF_IDENTITY(gl_WorkGroupSize, _GLF_IDENTITY(clamp(gl_WorkGroupSize, _GLF_IDENTITY(gl_WorkGroupSize, _GLF_IDENTITY((gl_WorkGroupSize) + uvec3(0u, 0u, 0u), ((gl_WorkGroupSize) + uvec3(0u, 0u, 0u)) ^ uvec3(0u, 0u, 0u))), gl_WorkGroupSize), uvec3(0u, _GLF_IDENTITY(0u, (0u) << 0u), 0u) ^ (clamp(gl_WorkGroupSize, gl_WorkGroupSize, gl_WorkGroupSize))))) << uvec3(0u, _GLF_IDENTITY(0u, 0u ^ (0u)), 0u)))))), ~ (~ (uvec3(_GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupSize, (_GLF_IDENTITY(gl_WorkGroupSize, _GLF_IDENTITY(clamp(gl_WorkGroupSize, _GLF_IDENTITY(gl_WorkGroupSize, _GLF_IDENTITY((gl_WorkGroupSize) + uvec3(0u, 0u, 0u), ((gl_WorkGroupSize) + uvec3(0u, 0u, 0u)) ^ uvec3(0u, 0u, 0u))), gl_WorkGroupSize), uvec3(0u, _GLF_IDENTITY(0u, (0u) << 0u), 0u) ^ (clamp(gl_WorkGroupSize, gl_WorkGroupSize, gl_WorkGroupSize))))) << uvec3(0u, _GLF_IDENTITY(0u, 0u ^ (0u)), 0u))), uvec3(0u, 0u, 0u) ^ ((_GLF_IDENTITY(gl_WorkGroupSize, (_GLF_IDENTITY(gl_WorkGroupSize, _GLF_IDENTITY(clamp(gl_WorkGroupSize, _GLF_IDENTITY(gl_WorkGroupSize, _GLF_IDENTITY((gl_WorkGroupSize) + uvec3(0u, 0u, 0u), ((gl_WorkGroupSize) + uvec3(0u, 0u, 0u)) ^ uvec3(0u, 0u, 0u))), gl_WorkGroupSize), uvec3(0u, _GLF_IDENTITY(0u, (0u) << 0u), 0u) ^ (clamp(gl_WorkGroupSize, gl_WorkGroupSize, gl_WorkGroupSize))))) << uvec3(0u, _GLF_IDENTITY(0u, 0u ^ (0u)), 0u))))))))))), (uvec3(0u, 0u, 0u) | (_GLF_IDENTITY(gl_WorkGroupSize, (_GLF_IDENTITY(gl_WorkGroupSize, _GLF_IDENTITY(clamp(gl_WorkGroupSize, gl_WorkGroupSize, gl_WorkGroupSize), uvec3(0u, 0u, 0u) ^ (clamp(gl_WorkGroupSize, gl_WorkGroupSize, gl_WorkGroupSize))))) << uvec3(0u, 0u, 0u)))) - uvec3(0u, 0u, _GLF_IDENTITY(0u, 1u * (0u))))), (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, (_GLF_IDENTITY(gl_WorkGroupSize, clamp(_GLF_IDENTITY(gl_WorkGroupSize, max(gl_WorkGroupSize, gl_WorkGroupSize)), _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, clamp(gl_WorkGroupSize, gl_WorkGroupSize, gl_WorkGroupSize)), uvec3(gl_WorkGroupSize[0], gl_WorkGroupSize[1], gl_WorkGroupSize[2])), gl_WorkGroupSize))) << uvec3(0u, 0u, 0u)), _GLF_IDENTITY(uvec3(0u, 0u, 0u) | _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupSize, (_GLF_IDENTITY(gl_WorkGroupSize, _GLF_IDENTITY(clamp(gl_WorkGroupSize, _GLF_IDENTITY(gl_WorkGroupSize, _GLF_IDENTITY((gl_WorkGroupSize) + uvec3(0u, 0u, 0u), ((gl_WorkGroupSize) + _GLF_IDENTITY(uvec3(0u, 0u, 0u), (_GLF_IDENTITY(uvec3(0u, 0u, 0u), uvec3(uvec3(uvec3(0u, 0u, 0u))))) >> (uvec3(0u, 0u, 0u) ^ uvec3(0u, 0u, 0u)))) ^ uvec3(0u, 0u, 0u))), gl_WorkGroupSize), uvec3(0u, _GLF_IDENTITY(0u, (0u) << 0u), 0u) ^ (clamp(gl_WorkGroupSize, gl_WorkGroupSize, gl_WorkGroupSize))))) << uvec3(0u, _GLF_IDENTITY(0u, 0u ^ (0u)), 0u))), ((_GLF_IDENTITY(gl_WorkGroupSize, (_GLF_IDENTITY(gl_WorkGroupSize, _GLF_IDENTITY(clamp(gl_WorkGroupSize, _GLF_IDENTITY(gl_WorkGroupSize, _GLF_IDENTITY((gl_WorkGroupSize) + uvec3(0u, 0u, 0u), ((gl_WorkGroupSize) + _GLF_IDENTITY(uvec3(0u, 0u, 0u), (_GLF_IDENTITY(uvec3(0u, 0u, 0u), uvec3(uvec3(uvec3(0u, 0u, 0u))))) >> (uvec3(0u, 0u, 0u) ^ uvec3(0u, 0u, 0u)))) ^ uvec3(0u, 0u, 0u))), gl_WorkGroupSize), uvec3(0u, _GLF_IDENTITY(0u, (0u) << 0u), 0u) ^ (clamp(gl_WorkGroupSize, gl_WorkGroupSize, gl_WorkGroupSize))))) << uvec3(0u, _GLF_IDENTITY(0u, 0u ^ (0u)), 0u)))) | ((_GLF_IDENTITY(gl_WorkGroupSize, (_GLF_IDENTITY(gl_WorkGroupSize, _GLF_IDENTITY(clamp(gl_WorkGroupSize, _GLF_IDENTITY(gl_WorkGroupSize, _GLF_IDENTITY((gl_WorkGroupSize) + uvec3(0u, 0u, 0u), ((gl_WorkGroupSize) + _GLF_IDENTITY(uvec3(0u, 0u, 0u), (_GLF_IDENTITY(uvec3(0u, 0u, 0u), uvec3(uvec3(uvec3(0u, 0u, 0u))))) >> (uvec3(0u, 0u, 0u) ^ uvec3(0u, 0u, 0u)))) ^ uvec3(0u, 0u, 0u))), gl_WorkGroupSize), uvec3(0u, _GLF_IDENTITY(0u, (0u) << 0u), 0u) ^ (clamp(gl_WorkGroupSize, gl_WorkGroupSize, gl_WorkGroupSize))))) << uvec3(0u, _GLF_IDENTITY(0u, 0u ^ (0u)), 0u))))), uvec3(_GLF_IDENTITY(uvec3(_GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupSize, (_GLF_IDENTITY(gl_WorkGroupSize, _GLF_IDENTITY(clamp(gl_WorkGroupSize, _GLF_IDENTITY(gl_WorkGroupSize, _GLF_IDENTITY((gl_WorkGroupSize) + uvec3(0u, 0u, 0u), ((gl_WorkGroupSize) + uvec3(0u, 0u, 0u)) ^ uvec3(0u, 0u, 0u))), gl_WorkGroupSize), uvec3(0u, _GLF_IDENTITY(0u, (0u) << 0u), 0u) ^ (clamp(gl_WorkGroupSize, _GLF_IDENTITY(gl_WorkGroupSize, (_GLF_IDENTITY(gl_WorkGroupSize, max(_GLF_IDENTITY(gl_WorkGroupSize, ~ (~ (gl_WorkGroupSize))), gl_WorkGroupSize))) / uvec3(1u, 1u, 1u)), gl_WorkGroupSize))))) << uvec3(0u, _GLF_IDENTITY(0u, 0u ^ (0u)), 0u))), uvec3(0u, 0u, 0u) ^ ((_GLF_IDENTITY(gl_WorkGroupSize, (_GLF_IDENTITY(gl_WorkGroupSize, _GLF_IDENTITY(clamp(gl_WorkGroupSize, _GLF_IDENTITY(gl_WorkGroupSize, _GLF_IDENTITY((gl_WorkGroupSize) + uvec3(0u, 0u, 0u), (_GLF_IDENTITY((gl_WorkGroupSize), (false ? _GLF_FUZZED((uvec3(102960u, 10275u, 180205u) & uvec3(67952u, 13246u, 12924u))) : _GLF_IDENTITY((gl_WorkGroupSize), uvec3(uvec4((gl_WorkGroupSize), 0u))))) + uvec3(0u, 0u, 0u)) ^ uvec3(0u, 0u, 0u))), gl_WorkGroupSize), uvec3(0u, _GLF_IDENTITY(0u, (0u) << 0u), 0u) ^ (clamp(gl_WorkGroupSize, gl_WorkGroupSize, gl_WorkGroupSize))))) << uvec3(0u, _GLF_IDENTITY(0u, 0u ^ (0u)), 0u)))))), ~ (~ (uvec3(_GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupSize, (_GLF_IDENTITY(gl_WorkGroupSize, _GLF_IDENTITY(clamp(gl_WorkGroupSize, _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, _GLF_IDENTITY((gl_WorkGroupSize) + uvec3(0u, 0u, 0u), ((gl_WorkGroupSize) + uvec3(0u, 0u, 0u)) ^ uvec3(0u, 0u, 0u))), clamp(_GLF_IDENTITY(gl_WorkGroupSize, _GLF_IDENTITY((gl_WorkGroupSize) + uvec3(0u, 0u, 0u), ((gl_WorkGroupSize) + uvec3(0u, 0u, 0u)) ^ uvec3(0u, 0u, 0u))), _GLF_IDENTITY(gl_WorkGroupSize, _GLF_IDENTITY((gl_WorkGroupSize) + uvec3(0u, 0u, 0u), ((gl_WorkGroupSize) + uvec3(0u, 0u, 0u)) ^ uvec3(0u, 0u, 0u))), _GLF_IDENTITY(gl_WorkGroupSize, _GLF_IDENTITY((gl_WorkGroupSize) + uvec3(0u, 0u, 0u), ((gl_WorkGroupSize) + uvec3(0u, 0u, 0u)) ^ uvec3(0u, 0u, 0u))))), gl_WorkGroupSize), uvec3(0u, _GLF_IDENTITY(0u, (0u) << 0u), 0u) ^ (clamp(gl_WorkGroupSize, gl_WorkGroupSize, gl_WorkGroupSize))))) << uvec3(0u, _GLF_IDENTITY(0u, 0u ^ (0u)), 0u))), uvec3(0u, 0u, 0u) ^ ((_GLF_IDENTITY(gl_WorkGroupSize, (_GLF_IDENTITY(gl_WorkGroupSize, _GLF_IDENTITY(clamp(gl_WorkGroupSize, _GLF_IDENTITY(gl_WorkGroupSize, _GLF_IDENTITY((gl_WorkGroupSize) + uvec3(0u, 0u, 0u), ((gl_WorkGroupSize) + uvec3(0u, 0u, 0u)) ^ uvec3(0u, 0u, 0u))), gl_WorkGroupSize), uvec3(0u, _GLF_IDENTITY(0u, (0u) << 0u), 0u) ^ (clamp(gl_WorkGroupSize, gl_WorkGroupSize, gl_WorkGroupSize))))) << uvec3(0u, _GLF_IDENTITY(0u, 0u ^ (0u)), 0u))))))))))), (uvec3(0u, 0u, 0u) | (_GLF_IDENTITY(gl_WorkGroupSize, (_GLF_IDENTITY(gl_WorkGroupSize, _GLF_IDENTITY(clamp(gl_WorkGroupSize, gl_WorkGroupSize, gl_WorkGroupSize), uvec3(0u, 0u, 0u) ^ (clamp(gl_WorkGroupSize, gl_WorkGroupSize, gl_WorkGroupSize))))) << uvec3(_GLF_IDENTITY(0u, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(197016u) : 0u)), 0u, 0u)))) - uvec3(0u, 0u, _GLF_IDENTITY(0u, 1u * (0u)))))) - uvec3(0u, 0u, 0u)), uvec3(0u, 0u, 0u) | (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, (_GLF_IDENTITY(gl_WorkGroupSize, clamp(gl_WorkGroupSize, _GLF_IDENTITY(gl_WorkGroupSize, uvec3(gl_WorkGroupSize[0], gl_WorkGroupSize[1], gl_WorkGroupSize[2])), gl_WorkGroupSize))) << uvec3(0u, 0u, 0u)), _GLF_IDENTITY(uvec3(0u, 0u, 0u) | (_GLF_IDENTITY(gl_WorkGroupSize, (_GLF_IDENTITY(gl_WorkGroupSize, _GLF_IDENTITY(clamp(gl_WorkGroupSize, _GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) + uvec3(0u, 0u, 0u)), gl_WorkGroupSize), _GLF_IDENTITY(uvec3(0u, _GLF_IDENTITY(0u, (0u) << 0u), 0u) ^ (clamp(gl_WorkGroupSize, gl_WorkGroupSize, gl_WorkGroupSize)), (uvec3(0u, _GLF_IDENTITY(0u, (0u) << 0u), 0u) ^ (clamp(gl_WorkGroupSize, gl_WorkGroupSize, gl_WorkGroupSize))) << uvec3(0u, 0u, 0u))))) << uvec3(0u, 0u, 0u))), (uvec3(_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) / 1u)) | (0u)), 0u, 0u) | (_GLF_IDENTITY(gl_WorkGroupSize, (_GLF_IDENTITY(gl_WorkGroupSize, _GLF_IDENTITY(clamp(gl_WorkGroupSize, gl_WorkGroupSize, gl_WorkGroupSize), uvec3(0u, 0u, 0u) ^ (clamp(gl_WorkGroupSize, gl_WorkGroupSize, gl_WorkGroupSize))))) << uvec3(0u, 0u, 0u)))) - uvec3(0u, 0u, _GLF_IDENTITY(0u, 1u * (0u))))), (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, (_GLF_IDENTITY(gl_WorkGroupSize, clamp(gl_WorkGroupSize, _GLF_IDENTITY(gl_WorkGroupSize, uvec3(gl_WorkGroupSize[0], gl_WorkGroupSize[1], gl_WorkGroupSize[2])), gl_WorkGroupSize))) << uvec3(0u, 0u, 0u)), _GLF_IDENTITY(uvec3(0u, 0u, 0u) | (_GLF_IDENTITY(gl_WorkGroupSize, (_GLF_IDENTITY(gl_WorkGroupSize, _GLF_IDENTITY(clamp(gl_WorkGroupSize, _GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) + uvec3(0u, 0u, 0u)), gl_WorkGroupSize), _GLF_IDENTITY(uvec3(0u, _GLF_IDENTITY(0u, (0u) << 0u), 0u) ^ (clamp(gl_WorkGroupSize, gl_WorkGroupSize, gl_WorkGroupSize)), (uvec3(0u, _GLF_IDENTITY(0u, (0u) << 0u), 0u) ^ (clamp(gl_WorkGroupSize, gl_WorkGroupSize, gl_WorkGroupSize))) << uvec3(0u, 0u, 0u))))) << uvec3(0u, 0u, 0u))), (uvec3(_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) / 1u)) | (0u)), 0u, 0u) | (_GLF_IDENTITY(gl_WorkGroupSize, (_GLF_IDENTITY(gl_WorkGroupSize, _GLF_IDENTITY(clamp(gl_WorkGroupSize, gl_WorkGroupSize, gl_WorkGroupSize), uvec3(0u, 0u, 0u) ^ (clamp(gl_WorkGroupSize, gl_WorkGroupSize, gl_WorkGroupSize))))) << uvec3(0u, 0u, 0u)))) - uvec3(0u, 0u, _GLF_IDENTITY(0u, 1u * (0u)))))) | uvec3(0u, 0u, 0u)))).x)))));
 uint workgroup_id = gl_WorkGroupID.x;
 uint workgroup_base = workgroup_size * workgroup_id;
 uint virtual_gid = _GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY((subgroup_id), (true ? (subgroup_id) : _GLF_FUZZED(num_workgroup))) | (_GLF_IDENTITY(subgroup_id, uint(uvec4(subgroup_id, 1u, 1u, 1u)))))) - 0u) * subgroup_size + subgroup_local_id, (true ? _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (0u | _GLF_IDENTITY(0u, (0u) | (0u))) ^ (_GLF_IDENTITY(workgroup_base, 0u | (workgroup_base)))) + _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY((_GLF_IDENTITY(subgroup_id, (subgroup_id) | (subgroup_id))), uint(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_id, (subgroup_id) | (subgroup_id))), max((_GLF_IDENTITY(subgroup_id, (subgroup_id) | (subgroup_id))), (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (subgroup_id) | (subgroup_id)), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, uint(uvec2(subgroup_id, (uint(_GLF_ONE(1.0, injectionSwitch.y)) ^ 1u)))), (subgroup_id) | (subgroup_id)))))))))) - 0u) * subgroup_size, max(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY((_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY((subgroup_id), (_GLF_IDENTITY((subgroup_id), ((subgroup_id)) | ((subgroup_id)))) | ((subgroup_id))) | (subgroup_id))), uint(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (subgroup_id) | (subgroup_id)), (_GLF_IDENTITY(subgroup_id, (subgroup_id) | (subgroup_id))) >> 0u)), max((_GLF_IDENTITY(subgroup_id, (subgroup_id) | (subgroup_id))), (_GLF_IDENTITY(subgroup_id, (subgroup_id) | (subgroup_id))))))) - 0u), (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), (! (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))) || false))) ? _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, 0u | (_GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(subgroup_id, min(_GLF_IDENTITY(subgroup_id, (subgroup_id) - 0u), subgroup_id))) | (subgroup_id)))), _GLF_IDENTITY(_GLF_IDENTITY((subgroup_id), (_GLF_IDENTITY((subgroup_id), ((subgroup_id)) | ((subgroup_id)))) | ((subgroup_id))), 0u | (_GLF_IDENTITY((subgroup_id), (_GLF_IDENTITY((subgroup_id), ((subgroup_id)) | ((subgroup_id)))) | ((subgroup_id))))) | (subgroup_id))), uint(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_id, (subgroup_id) | (subgroup_id))), _GLF_IDENTITY(max((_GLF_IDENTITY(subgroup_id, (subgroup_id) | (subgroup_id))), (_GLF_IDENTITY(subgroup_id, (subgroup_id) | (subgroup_id)))), 0u | (max((_GLF_IDENTITY(subgroup_id, (subgroup_id) | (subgroup_id))), (_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY((subgroup_id), (false ? _GLF_FUZZED(subgroup_id) : (subgroup_id))) | (subgroup_id))))))))) - 0u), 0u ^ (_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY((_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY(_GLF_IDENTITY((subgroup_id), (_GLF_IDENTITY((subgroup_id), ((subgroup_id)) | ((subgroup_id)))) | ((subgroup_id))), (_GLF_IDENTITY((subgroup_id), (_GLF_IDENTITY((subgroup_id), ((subgroup_id)) | ((subgroup_id)))) | ((subgroup_id)))) | (_GLF_IDENTITY((subgroup_id), (_GLF_IDENTITY((subgroup_id), ((subgroup_id)) | ((subgroup_id)))) | ((subgroup_id))))) | (subgroup_id))), uint(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_id, (subgroup_id) | (subgroup_id))), max((_GLF_IDENTITY(subgroup_id, (subgroup_id) | (subgroup_id))), (_GLF_IDENTITY(subgroup_id, (subgroup_id) | (subgroup_id))))))) - 0u))) : _GLF_FUZZED(atomicCompSwap(workgroup_base, workgroup_id, subgroup_id)))) * subgroup_size, _GLF_IDENTITY(subgroup_id, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY((_GLF_IDENTITY(subgroup_id, (subgroup_id) << 0u)) | (subgroup_id), max(_GLF_IDENTITY((_GLF_IDENTITY(subgroup_id, (subgroup_id) << 0u)) | (subgroup_id), ((_GLF_IDENTITY(subgroup_id, (subgroup_id) << 0u)) | (subgroup_id)) - 0u), (_GLF_IDENTITY(subgroup_id, (subgroup_id) << 0u)) | (subgroup_id))))), _GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_id, (subgroup_id) | (subgroup_id))), max((_GLF_IDENTITY(subgroup_id, (subgroup_id) | (subgroup_id))), (_GLF_IDENTITY(subgroup_id, (subgroup_id) | (subgroup_id)))))), (uint(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_id, (subgroup_id) | (subgroup_id))), max((_GLF_IDENTITY(subgroup_id, (subgroup_id) | (subgroup_id))), (_GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(subgroup_id, (subgroup_id) / 1u)) | (subgroup_id))))))) >> 0u)) - 0u, uint(_GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(subgroup_id, (subgroup_id) | (subgroup_id))), uint(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (subgroup_id) | (subgroup_id)), (_GLF_IDENTITY(subgroup_id, (subgroup_id) | (subgroup_id))) ^ 0u)), max((_GLF_IDENTITY(subgroup_id, (subgroup_id) | (subgroup_id))), (_GLF_IDENTITY(subgroup_id, (subgroup_id) | (subgroup_id))))))) - 0u, max(_GLF_IDENTITY((_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY((subgroup_id) | (subgroup_id), (_GLF_IDENTITY((subgroup_id) | (subgroup_id), clamp((subgroup_id) | (subgroup_id), (subgroup_id) | (subgroup_id), _GLF_IDENTITY((subgroup_id) | (subgroup_id), uint(uvec4((subgroup_id) | (subgroup_id), 1u, 1u, 0u)))))) ^ 0u))), uint(_GLF_ZERO(_GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(4.2)), bool(false)))) + 0.0), injectionSwitch.x)) ^ (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_id, (subgroup_id) | (subgroup_id))), max((_GLF_IDENTITY(subgroup_id, (subgroup_id) | (subgroup_id))), (_GLF_IDENTITY(subgroup_id, (subgroup_id) | (subgroup_id))))))) - 0u, _GLF_IDENTITY((_GLF_IDENTITY(subgroup_id, (subgroup_id) | (subgroup_id))), uint(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_id, (subgroup_id) | (subgroup_id))), max((_GLF_IDENTITY(subgroup_id, (subgroup_id) | (subgroup_id))), (_GLF_IDENTITY(subgroup_id, (subgroup_id) | (subgroup_id))))))) - 0u))), (0u >> _GLF_IDENTITY(uint(8u), uint(8u))) ^ (uint(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (subgroup_id) | (subgroup_id)), (_GLF_IDENTITY(subgroup_id, (subgroup_id) | (subgroup_id))) | uint(_GLF_ZERO(0.0, injectionSwitch.x)))), uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / abs(vec2(1.0, 1.0))).x)) ^ (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY((subgroup_id), ~ (~ ((subgroup_id)))) | (subgroup_id))), max((_GLF_IDENTITY(subgroup_id, (subgroup_id) | (subgroup_id))), (_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY((subgroup_id), _GLF_IDENTITY(0u ^ ((subgroup_id)), (0u ^ ((subgroup_id))) ^ 0u)) | (subgroup_id))))))) - 0u))))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(subgroup_id, (subgroup_id) << 0u)) | (subgroup_id))), _GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_id, (subgroup_id) | (subgroup_id))), max((_GLF_IDENTITY(subgroup_id, (subgroup_id) | (subgroup_id))), (_GLF_IDENTITY(subgroup_id, (subgroup_id) | (subgroup_id)))))), (uint(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_id, (subgroup_id) | (subgroup_id))), max((_GLF_IDENTITY(subgroup_id, (subgroup_id) | (subgroup_id))), (_GLF_IDENTITY(subgroup_id, (subgroup_id) | (subgroup_id))))))) >> 0u)) - 0u, max(_GLF_IDENTITY((_GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(subgroup_id, (subgroup_id) << 0u)) | (subgroup_id))), _GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_id, (subgroup_id) | (subgroup_id))), max((_GLF_IDENTITY(subgroup_id, (subgroup_id) | (subgroup_id))), (_GLF_IDENTITY(subgroup_id, (subgroup_id) | (subgroup_id)))))), (uint(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_id, (subgroup_id) | (subgroup_id))), max((_GLF_IDENTITY(subgroup_id, (subgroup_id) | (subgroup_id))), (_GLF_IDENTITY(subgroup_id, (subgroup_id) | (subgroup_id))))))) >> 0u)) - 0u, _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(subgroup_id, (subgroup_id) << 0u)) | (subgroup_id))), _GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_id, (subgroup_id) | (subgroup_id))), max((_GLF_IDENTITY(subgroup_id, (subgroup_id) | (subgroup_id))), (_GLF_IDENTITY(subgroup_id, (subgroup_id) | (subgroup_id)))))), (uint(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_id, (subgroup_id) | (subgroup_id))), max((_GLF_IDENTITY(subgroup_id, (subgroup_id) | (subgroup_id))), (_GLF_IDENTITY(subgroup_id, (subgroup_id) | (subgroup_id))))))) >> 0u)) - 0u, (true ? _GLF_IDENTITY((_GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(subgroup_id, (subgroup_id) << 0u)) | (subgroup_id))), _GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_id, (subgroup_id) | (subgroup_id))), max((_GLF_IDENTITY(subgroup_id, (subgroup_id) | (subgroup_id))), (_GLF_IDENTITY(subgroup_id, (subgroup_id) | (subgroup_id)))))), (uint(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_id, (subgroup_id) | (subgroup_id))), max((_GLF_IDENTITY(subgroup_id, (subgroup_id) | (subgroup_id))), (_GLF_IDENTITY(subgroup_id, (subgroup_id) | (subgroup_id))))))) >> 0u)) - 0u : _GLF_FUZZED(num_workgroup))))), uint(_GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(subgroup_id, (subgroup_id) | (subgroup_id))), uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0)) + sin(0.0)))))) ^ (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY((subgroup_id), clamp(_GLF_IDENTITY((subgroup_id), ((subgroup_id)) + (0u >> _GLF_IDENTITY(uint(1u), uint(1u)))), (subgroup_id), _GLF_IDENTITY((subgroup_id), ~ (~ (_GLF_IDENTITY((subgroup_id), 0u ^ ((subgroup_id)))))))) | (subgroup_id))), max((_GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(subgroup_id, 0u | (_GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(subgroup_id, (subgroup_id) | (subgroup_id))) - (0u >> _GLF_IDENTITY(uint(4u), uint(4u))))))) | (subgroup_id))), (_GLF_IDENTITY(subgroup_id, (subgroup_id) | (subgroup_id))))))) - 0u, max(_GLF_IDENTITY((_GLF_IDENTITY(subgroup_id, (subgroup_id) | (subgroup_id))), uint(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_id, (subgroup_id) | (subgroup_id))), max((_GLF_IDENTITY(subgroup_id, (subgroup_id) | (subgroup_id))), (_GLF_IDENTITY(subgroup_id, (subgroup_id) | (subgroup_id))))))) - 0u, _GLF_IDENTITY((_GLF_IDENTITY(subgroup_id, (subgroup_id) | (subgroup_id))), uint(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_id, (subgroup_id) | (subgroup_id))), max((_GLF_IDENTITY(subgroup_id, (subgroup_id) | (subgroup_id))), (_GLF_IDENTITY(subgroup_id, (subgroup_id) | (subgroup_id))))))) - 0u))), (0u >> _GLF_IDENTITY(uint(8u), _GLF_IDENTITY(uint(8u), (uint(8u)) | 0u))) ^ (uint(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (subgroup_id) | (subgroup_id)), (_GLF_IDENTITY(subgroup_id, (subgroup_id) | (subgroup_id))) | uint(_GLF_ZERO(0.0, injectionSwitch.x)))), uint(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY((subgroup_id), ~ (~ ((_GLF_IDENTITY(subgroup_id, clamp(_GLF_IDENTITY(subgroup_id, min(subgroup_id, subgroup_id)), subgroup_id, subgroup_id)))))) | (subgroup_id))), max((_GLF_IDENTITY(subgroup_id, (subgroup_id) | (subgroup_id))), (_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY((subgroup_id), 0u ^ ((subgroup_id))) | (subgroup_id))))))) - 0u)))))) >> 0u)) * subgroup_size)), (_GLF_IDENTITY(workgroup_base, (0u | _GLF_IDENTITY(0u, (0u) | (0u))) ^ (_GLF_IDENTITY(workgroup_base, 0u | (workgroup_base)))) + _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY((_GLF_IDENTITY(subgroup_id, (subgroup_id) | (subgroup_id))), uint(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_id, (subgroup_id) | (subgroup_id))), max((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (subgroup_id) | (subgroup_id)), _GLF_IDENTITY(uint(uvec3(_GLF_IDENTITY(subgroup_id, (subgroup_id) | (subgroup_id)), 0u, 1u)), (false ? _GLF_FUZZED(workgroup_base) : uint(uvec3(_GLF_IDENTITY(subgroup_id, (subgroup_id) | (subgroup_id)), 0u, 1u)))))), (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (subgroup_id) | (subgroup_id)), ~ (~ (_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY((subgroup_id) | (subgroup_id), min((subgroup_id) | (subgroup_id), (subgroup_id) | (subgroup_id)))))))))))) - 0u) * subgroup_size, max(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY((_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY((subgroup_id), (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_id, min(_GLF_IDENTITY(subgroup_id, max(subgroup_id, subgroup_id)), subgroup_id))), ((subgroup_id)) | ((subgroup_id)))) | ((subgroup_id))) | (subgroup_id))), uint(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (subgroup_id) | (subgroup_id)), (_GLF_IDENTITY(subgroup_id, (subgroup_id) | (subgroup_id))) >> 0u)), max(_GLF_IDENTITY((_GLF_IDENTITY(subgroup_id, (subgroup_id) | (subgroup_id))), 0u ^ ((_GLF_IDENTITY(subgroup_id, (subgroup_id) | (subgroup_id))))), (_GLF_IDENTITY(subgroup_id, (subgroup_id) | (subgroup_id))))))) - _GLF_IDENTITY(0u, max(0u, 0u))), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, 0u | (subgroup_id)), _GLF_IDENTITY(_GLF_IDENTITY((subgroup_id), (_GLF_IDENTITY((subgroup_id), ((subgroup_id)) | ((subgroup_id)))) | ((subgroup_id))), 0u | (_GLF_IDENTITY((subgroup_id), (_GLF_IDENTITY((subgroup_id), ((subgroup_id)) | ((subgroup_id)))) | ((_GLF_IDENTITY(subgroup_id, min(subgroup_id, _GLF_IDENTITY(subgroup_id, max(subgroup_id, subgroup_id))))))))) | (subgroup_id))), uint(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_id, (subgroup_id) | (subgroup_id))), _GLF_IDENTITY(max((_GLF_IDENTITY(subgroup_id, (subgroup_id) | (subgroup_id))), (_GLF_IDENTITY(subgroup_id, (subgroup_id) | (subgroup_id)))), 0u | (max((_GLF_IDENTITY(subgroup_id, (subgroup_id) | (subgroup_id))), (_GLF_IDENTITY(subgroup_id, (subgroup_id) | (subgroup_id))))))))) - 0u), 0u ^ (_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY((_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY(_GLF_IDENTITY((subgroup_id), (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_id, min(subgroup_id, subgroup_id))), ((subgroup_id)) | ((subgroup_id)))) | ((subgroup_id))), _GLF_IDENTITY((_GLF_IDENTITY((subgroup_id), (_GLF_IDENTITY((subgroup_id), ((subgroup_id)) | ((subgroup_id)))) | ((subgroup_id)))) | (_GLF_IDENTITY((subgroup_id), (_GLF_IDENTITY((subgroup_id), ((subgroup_id)) | ((subgroup_id)))) | ((subgroup_id)))), ~ (_GLF_IDENTITY(~ ((_GLF_IDENTITY((subgroup_id), (_GLF_IDENTITY((subgroup_id), ((subgroup_id)) | ((subgroup_id)))) | ((subgroup_id)))) | (_GLF_IDENTITY((subgroup_id), (_GLF_IDENTITY((subgroup_id), ((subgroup_id)) | ((subgroup_id)))) | ((subgroup_id))))), (~ ((_GLF_IDENTITY((subgroup_id), (_GLF_IDENTITY((subgroup_id), ((subgroup_id)) | ((subgroup_id)))) | ((subgroup_id)))) | (_GLF_IDENTITY((subgroup_id), (_GLF_IDENTITY((subgroup_id), ((subgroup_id)) | ((subgroup_id)))) | ((subgroup_id)))))) | 0u)))) | (subgroup_id))), uint(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_id, (subgroup_id) | (subgroup_id))), max((_GLF_IDENTITY(subgroup_id, (subgroup_id) | (subgroup_id))), (_GLF_IDENTITY(subgroup_id, (subgroup_id) | (subgroup_id))))))) - 0u))) : _GLF_FUZZED(atomicCompSwap(workgroup_base, workgroup_id, subgroup_id)))) * subgroup_size, _GLF_IDENTITY(subgroup_id, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY((_GLF_IDENTITY(subgroup_id, (subgroup_id) << 0u)) | (subgroup_id), min((_GLF_IDENTITY(subgroup_id, (subgroup_id) << 0u)) | (subgroup_id), (_GLF_IDENTITY(subgroup_id, (subgroup_id) << 0u)) | (subgroup_id))))), _GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_id, (subgroup_id) | (subgroup_id))), max((_GLF_IDENTITY(subgroup_id, (subgroup_id) | (subgroup_id))), (_GLF_IDENTITY(subgroup_id, (subgroup_id) | (subgroup_id)))))), (uint(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_id, (subgroup_id) | (subgroup_id))), max((_GLF_IDENTITY(subgroup_id, (subgroup_id) | (subgroup_id))), (_GLF_IDENTITY(subgroup_id, (subgroup_id) | (subgroup_id))))))) >> 0u)) - 0u, uint(_GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(subgroup_id, (subgroup_id) | (subgroup_id))), uint(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_id, (subgroup_id) | (subgroup_id))), max((_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY((subgroup_id) | (subgroup_id), (true ? (subgroup_id) | (subgroup_id) : _GLF_FUZZED(subgroup_local_id))))), (_GLF_IDENTITY(subgroup_id, (subgroup_id) | (subgroup_id))))))) - 0u, max(_GLF_IDENTITY((_GLF_IDENTITY(subgroup_id, (subgroup_id) | (subgroup_id))), uint(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_id, (subgroup_id) | (subgroup_id))), max((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, min(subgroup_id, subgroup_id)), (subgroup_id) | (subgroup_id))), (_GLF_IDENTITY(subgroup_id, (subgroup_id) | (subgroup_id))))))) - 0u, _GLF_IDENTITY((_GLF_IDENTITY(subgroup_id, (subgroup_id) | (subgroup_id))), uint(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_id, (subgroup_id) | (subgroup_id))), max(_GLF_IDENTITY((_GLF_IDENTITY(subgroup_id, (subgroup_id) | (subgroup_id))), _GLF_IDENTITY(uint(uvec3((_GLF_IDENTITY(subgroup_id, (subgroup_id) | (subgroup_id))), 1u, 1u)), (uint(uvec3((_GLF_IDENTITY(subgroup_id, (subgroup_id) | (subgroup_id))), 1u, 1u))) | 0u)), (_GLF_IDENTITY(subgroup_id, (subgroup_id) | (subgroup_id))))))) - 0u))), (0u >> _GLF_IDENTITY(_GLF_IDENTITY(uint(8u), uint(8u)), min(_GLF_IDENTITY(uint(8u), uint(8u)), _GLF_IDENTITY(uint(8u), uint(8u))))) ^ (uint(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (subgroup_id) | (subgroup_id)), (_GLF_IDENTITY(subgroup_id, (subgroup_id) | (subgroup_id))) | uint(_GLF_ZERO(0.0, injectionSwitch.x)))), uint(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY((subgroup_id), ~ (~ ((subgroup_id)))) | (subgroup_id))), max((_GLF_IDENTITY(subgroup_id, (subgroup_id) | (subgroup_id))), (_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY((subgroup_id), 0u ^ ((subgroup_id))) | (subgroup_id))))))), max(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (subgroup_id) | (subgroup_id)), (_GLF_IDENTITY(subgroup_id, (subgroup_id) | (subgroup_id))) | uint(_GLF_ZERO(0.0, injectionSwitch.x)))), uint(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY((subgroup_id), ~ (~ ((subgroup_id)))) | (subgroup_id))), max((_GLF_IDENTITY(subgroup_id, (subgroup_id) | (subgroup_id))), (_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY((subgroup_id), 0u ^ ((subgroup_id))) | (subgroup_id))))))), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (subgroup_id) | (subgroup_id)), (_GLF_IDENTITY(subgroup_id, (subgroup_id) | (subgroup_id))) | uint(_GLF_ZERO(0.0, injectionSwitch.x)))), uint(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY((subgroup_id), ~ (~ ((subgroup_id)))) | (subgroup_id))), max((_GLF_IDENTITY(subgroup_id, (subgroup_id) | (subgroup_id))), (_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY((subgroup_id), 0u ^ ((subgroup_id))) | (subgroup_id))))))))) - 0u))))), (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(subgroup_id, (subgroup_id) << 0u)) | (subgroup_id))), _GLF_IDENTITY(uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0)) / 1.0))) ^ (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_id, (subgroup_id) | (subgroup_id))), max((_GLF_IDENTITY(subgroup_id, (subgroup_id) | (subgroup_id))), (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (subgroup_id) | (subgroup_id)), (_GLF_IDENTITY(subgroup_id, (subgroup_id) | (subgroup_id))) >> 0u))))), (uint(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_id, (subgroup_id) | (subgroup_id))), max((_GLF_IDENTITY(subgroup_id, (subgroup_id) | (subgroup_id))), (_GLF_IDENTITY(subgroup_id, (subgroup_id) | (subgroup_id))))))) >> 0u)) - _GLF_IDENTITY(0u, (false ? _GLF_FUZZED(workgroup_base) : _GLF_IDENTITY(0u, 0u | (0u)))), uint(_GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY((subgroup_id), min((subgroup_id), (subgroup_id))) | (subgroup_id))), uint(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_id, (subgroup_id) | (subgroup_id))), max(_GLF_IDENTITY((_GLF_IDENTITY(subgroup_id, (subgroup_id) | (subgroup_id))), ((_GLF_IDENTITY(subgroup_id, (subgroup_id) | (subgroup_id)))) * uint(_GLF_ONE(1.0, injectionSwitch.y))), (_GLF_IDENTITY(subgroup_id, (subgroup_id) | (subgroup_id))))))) - 0u, max(_GLF_IDENTITY((_GLF_IDENTITY(subgroup_id, (subgroup_id) | (subgroup_id))), uint(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_id, (subgroup_id) | (subgroup_id))), max((_GLF_IDENTITY(subgroup_id, (subgroup_id) | (subgroup_id))), (_GLF_IDENTITY(subgroup_id, (subgroup_id) | (subgroup_id))))))) - 0u, _GLF_IDENTITY((_GLF_IDENTITY(subgroup_id, (subgroup_id) | (subgroup_id))), uint(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_id, (subgroup_id) | _GLF_IDENTITY((subgroup_id), ((subgroup_id)) - uint(_GLF_ZERO(0.0, injectionSwitch.x))))), max((_GLF_IDENTITY(subgroup_id, (subgroup_id) | (subgroup_id))), (_GLF_IDENTITY(subgroup_id, (subgroup_id) | (subgroup_id))))))) - 0u))), (_GLF_IDENTITY(0u >> _GLF_IDENTITY(uint(8u), uint(8u)), (0u >> _GLF_IDENTITY(uint(8u), uint(8u))) << 0u)) ^ (uint(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (subgroup_id) | (subgroup_id)), (_GLF_IDENTITY(subgroup_id, (subgroup_id) | (subgroup_id))) | uint(_GLF_ZERO(0.0, injectionSwitch.x)))), uint(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY((subgroup_id), ~ (_GLF_IDENTITY(~ ((subgroup_id)), clamp(_GLF_IDENTITY(~ ((subgroup_id)), (~ ((subgroup_id))) ^ 0u), _GLF_IDENTITY(~ ((subgroup_id)), max(~ ((subgroup_id)), ~ ((subgroup_id)))), ~ ((subgroup_id)))))) | (subgroup_id))), max((_GLF_IDENTITY(subgroup_id, (subgroup_id) | _GLF_IDENTITY((subgroup_id), (_GLF_IDENTITY((subgroup_id), (false ? _GLF_FUZZED(workgroup_id) : (subgroup_id)))) * 1u))), (_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY((subgroup_id), 0u ^ ((subgroup_id))) | (subgroup_id))))))) - 0u)))))) >> 0u)) * subgroup_size))) | 0u) + subgroup_local_id : _GLF_FUZZED(workgroup_size)));
 if(_GLF_DEAD(false))
  barrier();
 uint next_virtual_gid = workgroup_base + _GLF_IDENTITY(subgroup_id * subgroup_size, uint(uint(subgroup_id * subgroup_size))) + ((_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + _GLF_IDENTITY(1, ~ (~ (1)))) | (subgroup_local_id + 1))) % subgroup_size);
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   return;
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, false || (false))), _GLF_IDENTITY(! (! (! (false))), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(! (! (! (false))), (! (! (! (false)))) || false), false, true)), (bool(bvec3(_GLF_IDENTITY(! (! (! (false))), (! (! (! (false)))) || false), false, true))) || false)))))))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), (_GLF_IDENTITY(bool(bool(false)), false || (bool(bool(false))))) || false)), (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, _GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(bvec4(! (false), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))))))), ! (! (bool(bvec2(false, false))))))))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, bool(bvec2(false, true))), true, true)))))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            return;
           barrier();
           if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, bool(bvec2(injectionSwitch.x < injectionSwitch.y, false))))) && (false))))
            barrier();
          }
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          return;
         barrier();
         if(_GLF_DEAD(false))
          return;
        }
       return;
       if(_GLF_DEAD(false))
        return;
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (false)))))), (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      barrier();
     return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(ceil(vec2(-4.1, -582.418))))).x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(_GLF_IDENTITY(mat3x2(injectionSwitch, 0.0, abs(0.0), 1.0, 0.0), (mat3x2(injectionSwitch, 0.0, abs(0.0), 1.0, 0.0)) * mat3(_GLF_ONE(1.0, injectionSwitch.y)))), (_GLF_IDENTITY(vec2(_GLF_IDENTITY(mat3x2(injectionSwitch, 0.0, abs(0.0), 1.0, 0.0), (mat3x2(injectionSwitch, 0.0, abs(0.0), 1.0, 0.0)) * mat3(_GLF_ONE(1.0, injectionSwitch.y)))), mix(vec2((vec2(_GLF_IDENTITY(mat3x2(injectionSwitch, 0.0, abs(0.0), 1.0, 0.0), (mat3x2(injectionSwitch, 0.0, abs(0.0), 1.0, 0.0)) * mat3(_GLF_ONE(1.0, injectionSwitch.y)))))[0], (vec2(_GLF_IDENTITY(mat3x2(injectionSwitch, 0.0, abs(0.0), 1.0, 0.0), (mat3x2(injectionSwitch, 0.0, abs(0.0), 1.0, 0.0)) * mat3(_GLF_ONE(1.0, injectionSwitch.y)))))[1]), vec2(_GLF_FUZZED(0.3), _GLF_FUZZED(-7565.5745)), bvec2(false, false)))) + vec2(0.0, 0.0))).x > injectionSwitch.y))))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y))))), _GLF_IDENTITY(false || (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (_GLF_IDENTITY(false || (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bool(bool(false || (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))) || false)))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), true && (bool(bool(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(-7.8))))) > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false)))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, 1.0 * (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat4x3(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0)), mix(vec2(_GLF_FUZZED(-3.3), _GLF_FUZZED(-37.31)), vec2((vec2(mat4x3(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0)))[0], (vec2(mat4x3(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0)))[1]), bvec2(true, true)))).x)) > _GLF_IDENTITY(injectionSwitch, vec2(mat3x4(injectionSwitch, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, determinant(mat2(1.0, 1.0, 0.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, 0.0, 0.0, 1.0)), dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, 0.0, 0.0, 1.0))))), abs(1.0)))).y))), false || (_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(true ? injectionSwitch : _GLF_FUZZED(injectionSwitch), (false ? _GLF_FUZZED(injectionSwitch) : true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))))) : _GLF_FUZZED(injectionSwitch))), max(_GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(true ? injectionSwitch : _GLF_FUZZED(injectionSwitch), (false ? _GLF_FUZZED(injectionSwitch) : true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))))) : _GLF_FUZZED(injectionSwitch))), _GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(true ? injectionSwitch : _GLF_FUZZED(injectionSwitch), (false ? _GLF_FUZZED(injectionSwitch) : true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))))) : _GLF_FUZZED(injectionSwitch))))).y, mix(float(_GLF_FUZZED(468.517)), float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))) : _GLF_FUZZED(injectionSwitch))).y, max(_GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))) : _GLF_FUZZED(injectionSwitch))).y, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))) : _GLF_FUZZED(injectionSwitch))).y, mix(float(_GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))) : _GLF_FUZZED(injectionSwitch))).y), float(_GLF_FUZZED(-17.99)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), bool(true)))), ((injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(_GLF_IDENTITY(injectionSwitch, vec2(mat2x4(injectionSwitch, 1.0, 1.0, 1.0, 0.0, 0.0, round(length(normalize(vec2(1.0, 1.0)))))))))) : _GLF_FUZZED(injectionSwitch))).y, mix(float(_GLF_FUZZED(468.517)), float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((true ? _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))) : _GLF_FUZZED(injectionSwitch)), mix(vec2(_GLF_FUZZED(512.104), ((true ? _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_IDENTITY(_GLF_FUZZED(injectionSwitch), (true ? _GLF_FUZZED(injectionSwitch) : _GLF_FUZZED(vec2(-3.4, 1.3)))))) : _GLF_FUZZED(injectionSwitch)))[1]), vec2(((true ? _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))) : _GLF_FUZZED(injectionSwitch)))[0], _GLF_FUZZED(3742.8630)), bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, (false) && true)), ! (! (! (_GLF_IDENTITY(false, (false) && true))))))))))).y, max(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((true ? _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))) : _GLF_FUZZED(injectionSwitch)), mix(vec2(_GLF_FUZZED(512.104), ((true ? _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))) : _GLF_FUZZED(injectionSwitch)))[1]), vec2(((true ? _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))) : _GLF_FUZZED(injectionSwitch)))[0], _GLF_FUZZED(_GLF_IDENTITY(3742.8630, (3742.8630) + 0.0))), bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)))).y, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((true ? _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))) : _GLF_FUZZED(injectionSwitch)), mix(vec2(_GLF_FUZZED(512.104), ((true ? _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))) : _GLF_FUZZED(injectionSwitch)))[1]), vec2(((true ? _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))) : _GLF_FUZZED(injectionSwitch)))[0], _GLF_FUZZED(3742.8630)), bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)))).y))), bool(true))))) && true))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(_GLF_IDENTITY(bool(injectionSwitch.x > injectionSwitch.y), (bool(injectionSwitch.x > injectionSwitch.y)) && true)))))))
    return;
  }
 atomicStore(buf[next_virtual_gid], uint(1), 4, 64, _GLF_IDENTITY(_GLF_IDENTITY(4, min(_GLF_IDENTITY(_GLF_IDENTITY(4, clamp(4, 4, 4)), _GLF_IDENTITY((_GLF_IDENTITY(4, ~ (_GLF_IDENTITY(~ (4), (~ (4)) + 0)))), max((_GLF_IDENTITY(4, ~ (_GLF_IDENTITY(~ (4), (~ (4)) + 0)))), (_GLF_IDENTITY(4, ~ (_GLF_IDENTITY(~ (4), (~ (4)) + 0)))))) * 1), 4)), (4) << 0));
 if(_GLF_DEAD(false))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false)))))))), _GLF_IDENTITY(! (! (! (_GLF_DEAD(false)))), false || (! (! (! (_GLF_DEAD(false))))))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true, false)))))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
        {
         if(_GLF_DEAD(false))
          return;
         barrier();
        }
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x > injectionSwitch.y))))
        return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(false || (false), false || (false || (false)))), false || (_GLF_IDENTITY(false, _GLF_IDENTITY(false || (false), false || (false || (false))))))))
          return;
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
          return;
         return;
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)), mix(vec2(_GLF_FUZZED((-76.06 / (3589.1448 - 7.0))), (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)))[1]), vec2((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)))[0], _GLF_FUZZED(1937.2346)), bvec2(true, false))).x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))))))
        {
         if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec2(false, true)), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(bool(bvec2(false, true)), true), bvec2(bvec3(bvec2(bool(bvec2(false, true)), true), true)))), bool(bvec4(bool(_GLF_IDENTITY(bvec2(bool(bvec2(false, true)), true), bvec2(bvec3(bvec2(bool(bvec2(false, true)), true), true)))), false, false, false)))), bool(bvec2(bool(bvec2(false, true)), true)))), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, (false) && true), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))), _GLF_IDENTITY(bool(bvec2(false, true)), bool(bvec2(bool(_GLF_IDENTITY(bvec2(false, _GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(true, true && (true)), true, true, false)), _GLF_IDENTITY((bool(bvec4(_GLF_IDENTITY(true, true && (true)), true, true, false))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), ! (! ((bool(bvec4(_GLF_IDENTITY(true, true && (true)), true, true, false))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))), bvec2(bvec3(bvec2(false, _GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(true, true && (true)), true, true, false)), _GLF_IDENTITY((bool(bvec4(_GLF_IDENTITY(true, true && (true)), true, true, false))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), ! (! ((bool(bvec4(_GLF_IDENTITY(true, true && (true)), true, true, false))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))), true)))), true))))), bool(bool(bool(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, true)), bool(bvec2(bool(bvec2(false, true)), _GLF_IDENTITY(true, (_GLF_IDENTITY(true, false || (true))) || false))))))))))), (injectionSwitch.x > injectionSwitch.y))))
          return;
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            barrier();
           return;
          }
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false))))
          barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false) || (injectionSwitch.x > injectionSwitch.y), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (injectionSwitch.x > injectionSwitch.y), ! (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (injectionSwitch.x > injectionSwitch.y)), ! (! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (injectionSwitch.x > injectionSwitch.y))))))))))), bool(_GLF_IDENTITY(bool(! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (injectionSwitch.x > injectionSwitch.y), ! (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true))), ! (! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || (injectionSwitch.x > injectionSwitch.y))))))))), ! (! (bool(_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (injectionSwitch.x > injectionSwitch.y), ! (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (injectionSwitch.x > injectionSwitch.y)), ! (! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (injectionSwitch.x > injectionSwitch.y)))))))), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (injectionSwitch.x > injectionSwitch.y), ! (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (injectionSwitch.x > injectionSwitch.y)), ! (! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (injectionSwitch.x > injectionSwitch.y)))))))), (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (injectionSwitch.x > injectionSwitch.y), ! (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (injectionSwitch.x > injectionSwitch.y)), ! (! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (injectionSwitch.x > injectionSwitch.y))))))))) && true), true), bvec2(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (injectionSwitch.x > injectionSwitch.y), ! (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (injectionSwitch.x > injectionSwitch.y)), ! (! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (injectionSwitch.x > injectionSwitch.y)))))))), (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (injectionSwitch.x > injectionSwitch.y), ! (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (injectionSwitch.x > injectionSwitch.y)), ! (! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (injectionSwitch.x > injectionSwitch.y))))))))) && true), true), bvec2(bvec2(bvec2(_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (injectionSwitch.x > injectionSwitch.y), ! (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (injectionSwitch.x > injectionSwitch.y)), ! (! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (injectionSwitch.x > injectionSwitch.y)))))))), (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (injectionSwitch.x > injectionSwitch.y), ! (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (injectionSwitch.x > injectionSwitch.y)), ! (! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (injectionSwitch.x > injectionSwitch.y))))))))) && true), true)))), false), bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (injectionSwitch.x > injectionSwitch.y), ! (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (injectionSwitch.x > injectionSwitch.y)), ! (! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (injectionSwitch.x > injectionSwitch.y)))))))), (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (injectionSwitch.x > injectionSwitch.y), ! (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (injectionSwitch.x > injectionSwitch.y)), ! (! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (injectionSwitch.x > injectionSwitch.y))))))))) && true), true), bvec2(bvec2(bvec2(_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (injectionSwitch.x > injectionSwitch.y), ! (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (injectionSwitch.x > injectionSwitch.y)), ! (! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (injectionSwitch.x > injectionSwitch.y)))))))), (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (injectionSwitch.x > injectionSwitch.y), ! (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (injectionSwitch.x > injectionSwitch.y)), ! (! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (injectionSwitch.x > injectionSwitch.y))))))))) && true), true)))), false)))))))))))))))))))))
            {
             if(_GLF_DEAD(false))
              barrier();
             return;
            }
           barrier();
          }
         barrier();
         if(_GLF_DEAD(false))
          barrier();
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0)))))
          return;
         if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false)))))
          {
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
         return;
        }
       return;
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-68.49), _GLF_FUZZED(-7554.0328)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))).y, (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-68.49), _GLF_FUZZED(-7554.0328)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))).y) * 1.0)))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(true, true && (true)) && (false)), (injectionSwitch.x > injectionSwitch.y))))
      return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! (false))))))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y), ! (! ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y)))))))))
    return;
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, bool(bvec3(false, false, false)))))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(-26.70) : _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))))))))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
        return;
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(false, bool(bvec3(false, false, true))))), (bool(bool(_GLF_IDENTITY(false, bool(bvec3(false, false, true)))))) && true))), true && (_GLF_DEAD(false))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), (_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY((false), true && (_GLF_IDENTITY((false), ((false)) || false))) || false), false || (_GLF_IDENTITY(false, (false) || false)))) && true)))
  {
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 uint read_1 = atomicLoad(buf[virtual_gid], 4, _GLF_IDENTITY(64, 1 * (64)), 0);
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, true, true)))))
  return;
 atomicStore(buf[next_virtual_gid], uint(read_1 + 1), 4, 64, 4);
}
