#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch))) - vec2(0.0, 0.0)).y), bool(bvec3(_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch))) - vec2(0.0, 0.0)).y), false || ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch))) - vec2(0.0, 0.0)).y))), true, true))))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, true, false)))))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))
        {
         if(_GLF_DEAD(false))
          barrier();
         return;
         if(_GLF_DEAD(false))
          return;
        }
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        return;
       return;
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   return;
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bool(injectionSwitch.x > injectionSwitch.y)))))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     return;
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(-5.3) : injectionSwitch.x)), injectionSwitch.x)), (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(-5.3) : injectionSwitch.x)), injectionSwitch.x))) - 0.0) > injectionSwitch.y))), bool(bvec3(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(-5.3) : injectionSwitch.x)), injectionSwitch.x), (clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_IDENTITY(_GLF_FUZZED(-5.3), clamp(_GLF_IDENTITY(_GLF_FUZZED(-5.3), float(mat4(_GLF_FUZZED(-5.3), cos(0.0), 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0))), _GLF_IDENTITY(_GLF_FUZZED(-5.3), clamp(_GLF_FUZZED(-5.3), _GLF_FUZZED(-5.3), _GLF_IDENTITY(_GLF_FUZZED(-5.3), min(_GLF_FUZZED(-5.3), _GLF_FUZZED(-5.3))))), _GLF_IDENTITY(_GLF_FUZZED(-5.3), clamp(_GLF_FUZZED(-5.3), _GLF_FUZZED(-5.3), _GLF_FUZZED(-5.3))))) : injectionSwitch.x)), injectionSwitch.x)) / 1.0)) > injectionSwitch.y))), _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), bool(bvec4(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, false, false))), true))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), false, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y)), true))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y)), true)))), ! (_GLF_IDENTITY(! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y)), true))))), bool(bvec2(! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y)), true))))), true)))))))))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))
        barrier();
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) && true))))), true && (_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), (false) && true))))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat4x2(injectionSwitch, cos(_GLF_IDENTITY(length(vec2(0.0, 0.0)), max(length(vec2(0.0, 0.0)), length(vec2(0.0, 0.0))))), abs(0.0), 0.0, 0.0, _GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, determinant(mat3(0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0)))), dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, determinant(mat3(0.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(0.0, float(vec3(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 1.0, 1.0))), 1.0, 0.0, 0.0, 0.0))))), 0.0)), clamp(vec2(mat4x2(injectionSwitch, cos(length(vec2(0.0, 0.0))), abs(0.0), 0.0, 0.0, _GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, determinant(mat3(0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, _GLF_IDENTITY(0.0, (0.0) - 0.0), _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-8.7))))))), dot(vec3(_GLF_IDENTITY(0.0, (0.0) * 1.0), 1.0, _GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, (0.0) - 0.0)) - 0.0)), vec3(0.0, 1.0, determinant(mat3(0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0))))), 0.0)), _GLF_IDENTITY(vec2(mat4x2(injectionSwitch, cos(length(vec2(0.0, 0.0))), abs(0.0), 0.0, 0.0, _GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, _GLF_IDENTITY(determinant(mat3(0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0)), min(_GLF_IDENTITY(determinant(mat3(0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0)), (determinant(mat3(0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0))) / 1.0), determinant(mat3(0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0)))))), dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, determinant(mat3(0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0))))), 0.0)), (false ? _GLF_FUZZED((mat4x2(958.123, 3.0, -51.74, 5.4, -25.08, 439.093, -4584.9193, -18.60) , injectionSwitch)) : vec2(mat4x2(injectionSwitch, cos(length(vec2(0.0, 0.0))), abs(0.0), 0.0, 0.0, _GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, _GLF_IDENTITY(determinant(mat3(0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0)), min(_GLF_IDENTITY(determinant(mat3(0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0)), (determinant(mat3(0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0))) / 1.0), determinant(mat3(0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0)))))), dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, determinant(mat3(0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0))))), 0.0)))), vec2(mat4x2(injectionSwitch, cos(length(vec2(0.0, 0.0))), abs(0.0), 0.0, 0.0, _GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, determinant(mat3(0.0, 1.0, 0.0, _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(336.038))), 0.0, 1.0, 0.0, 0.0, 0.0)))), _GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, determinant(mat3(0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0)))), (true ? dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, determinant(mat3(0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0)))) : _GLF_FUZZED(dot(inversesqrt(vec4(-29.38, 8.8, -3594.8733, -77.55)), vec4(49.66, -568.276, 44.13, -58.38)))))), 0.0))))).x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
  }
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) && true), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, 1.0 * (injectionSwitch.x)), _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / sqrt(1.0)))) > injectionSwitch.y, false || (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, 1.0 * (injectionSwitch.x)), _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / sqrt(1.0))), _GLF_IDENTITY((_GLF_IDENTITY(clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, 1.0 * (injectionSwitch.x)), _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / sqrt(1.0))), min(clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, 1.0 * (injectionSwitch.x)), _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / sqrt(1.0))), clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, 1.0 * (injectionSwitch.x)), _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / sqrt(1.0)))))) / 1.0, min((_GLF_IDENTITY(clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, 1.0 * (injectionSwitch.x)), _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / sqrt(1.0))), min(clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, 1.0 * (injectionSwitch.x)), _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / sqrt(1.0))), clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, 1.0 * (injectionSwitch.x)), _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / sqrt(1.0)))))) / 1.0, (_GLF_IDENTITY(clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, 1.0 * (injectionSwitch.x)), _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / sqrt(1.0))), min(clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, 1.0 * (injectionSwitch.x)), _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / sqrt(1.0))), clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, 1.0 * (injectionSwitch.x)), _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / sqrt(1.0)))))) / 1.0)))) > injectionSwitch.y))))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, false)))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))
  {
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true, false)), ! (_GLF_IDENTITY(! (bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true, false))), _GLF_IDENTITY((! (bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true, false)))), ! (_GLF_IDENTITY(! ((! (bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true, false))))), false || (! ((! (bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true, false))))))))) || false))))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), ! _GLF_IDENTITY((_GLF_IDENTITY(! (bool(false)), ! _GLF_IDENTITY((! (! (bool(false)))), false || ((! (! (bool(false)))))))), ! (! ((_GLF_IDENTITY(! (bool(false)), ! _GLF_IDENTITY((! (! (bool(false)))), false || ((! (! (bool(false)))))))))))))), bool(bool(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), ! (_GLF_IDENTITY(_GLF_IDENTITY(! (bool(false)), (! (bool(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, true && (false)), true)))))))) || false), ! _GLF_IDENTITY((! (! (bool(false)))), false || ((! (! (bool(false))))))))))))))))
    return;
   return;
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || _GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! _GLF_IDENTITY(((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (! (_GLF_IDENTITY(((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true && (((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))) && true)))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(-56.40), _GLF_FUZZED(5208.2725)), bvec2(false, false))).x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], mix(float(injectionSwitch[0]), float(_GLF_FUZZED(-175.210)), bool(false))), injectionSwitch[1])).y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), ! (! (bool(bool(false))))))), (_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), ! (! (bool(bool(false)))))))) && true))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   return;
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)).x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), bool(_GLF_IDENTITY(bvec3(_GLF_DEAD(false), false, false), bvec3(bvec3(_GLF_IDENTITY(bvec3(_GLF_DEAD(false), false, false), bvec3(bvec4(bvec3(_GLF_DEAD(false), false, false), true)))))))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y) && true)))))))))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       barrier();
      }
     return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(5185.8729, -9202.9970)) : injectionSwitch)).y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(vec4(injectionSwitch, 0.0, 1.0), (_GLF_IDENTITY(vec4(injectionSwitch, 0.0, 1.0), (vec4(injectionSwitch, 0.0, 1.0)) + vec4(0.0, 0.0, 0.0, 0.0))) + vec4(0.0, 0.0, 0.0, 0.0)))), (_GLF_IDENTITY(false, true && (false)) ? _GLF_FUZZED(vec2(5185.8729, -9202.9970)) : injectionSwitch)).y)))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, _GLF_IDENTITY(true, true && (true)), false)), (bool(bvec3(false, true, false))) && true)), _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false))))))
    barrier();
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), ((! (false))) || false))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).x > injectionSwitch.y))))
  barrier();
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(_GLF_IDENTITY(2560.8815, min(_GLF_IDENTITY(2560.8815, mix(float(_GLF_FUZZED(-8356.0472)), float(2560.8815), bool(true))), _GLF_IDENTITY(2560.8815, mix(float(2560.8815), float(_GLF_FUZZED(vec3(6947.3941, 1.3, 8440.5515).b)), bool(false))))))), float(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * abs(vec2(1.0, 1.0))).y), bool(true)))))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, true, true, _GLF_IDENTITY(false, ! (! (false))))), bool(_GLF_IDENTITY(bvec3(bool(bvec4(false, true, true, _GLF_IDENTITY(false, ! (! (false))))), true, false), bvec3(bvec3(bvec3(bool(bvec4(false, true, true, _GLF_IDENTITY(false, ! (! (false))))), true, false))))))), bool(bvec3(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, true, true, _GLF_IDENTITY(false, ! (! (false))))), bool(_GLF_IDENTITY(bvec3(bool(bvec4(false, true, true, _GLF_IDENTITY(false, ! (! (false))))), true, false), bvec3(bvec3(bvec3(bool(bvec4(false, true, true, _GLF_IDENTITY(false, ! (! (false))))), true, false))))))), true, false))), _GLF_IDENTITY((false) || false, (_GLF_IDENTITY(_GLF_IDENTITY((false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && ((false))) || _GLF_IDENTITY(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, _GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, false, false), bvec3(bvec4(_GLF_IDENTITY(bvec3(false, false, false), bvec3(bvec4(bvec3(false, false, false), true))), true))))) || (false))) || false), false || (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, false || (false))) || false))), true && (_GLF_IDENTITY((false), false || (_GLF_IDENTITY((false), bool(bool(_GLF_IDENTITY((false), bool(bool((false))))))))) || _GLF_IDENTITY(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, false || (false))) || false), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, (_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, (false) && true), true))) || (false)), true && (_GLF_IDENTITY(false, false || (false))))) || false)), true && (! (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, false || _GLF_IDENTITY((false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY((false), bool(bvec2((false), true))))))) || false))))))))) || false))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y), ! (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y))))))))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), vec2(vec4((injectionSwitch) * mat2(1.0), 1.0, 1.0)))).x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), ! (! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), bool(bvec2(! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), false))))))))))
      return;
     return;
    }
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))))
      return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(_GLF_IDENTITY(38.52, _GLF_IDENTITY((38.52) / 1.0, ((38.52) / 1.0) / 1.0))) : _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-433.428)), float(injectionSwitch.y), bool(true))))))), ! (! (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + sin(vec2(0.0, 0.0))).y, (false ? _GLF_FUZZED(_GLF_IDENTITY(38.52, (38.52) / 1.0)) : _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-433.428)), float(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(1.5), _GLF_FUZZED(112.820)), bvec2(false, false))).y), bool(true))))))))))), bool(bool(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) || false), (injectionSwitch.x > injectionSwitch.y)))))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, exp(0.0) * (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(_GLF_IDENTITY(vec4(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(8.4)))), 1.0, 0.0, 0.0), mix(vec4(_GLF_FUZZED(-5.9), _GLF_FUZZED(2.1), (vec4(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(8.4)))), 1.0, 0.0, 0.0))[2], _GLF_FUZZED(3265.6332)), vec4((vec4(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(8.4)))), 1.0, 0.0, 0.0))[0], (vec4(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(8.4)))), 1.0, 0.0, 0.0))[1], _GLF_FUZZED(float((bvec3(false, true, false) != bvec3(true, false, true)))), (vec4(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(8.4)))), 1.0, 0.0, 0.0))[3]), bvec4(true, true, false, true)))), min(float(vec4(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + 0.0), 1.0, 0.0, 0.0)), float(vec4(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY((injectionSwitch.x) + 0.0, min((injectionSwitch.x) + 0.0, (injectionSwitch.x) + 0.0))), 1.0, _GLF_IDENTITY(0.0, float(_GLF_IDENTITY(vec2(0.0, 1.0), (true ? vec2(0.0, 1.0) : _GLF_FUZZED(injectionSwitch))))), 0.0))))))) > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(-61.31) : injectionSwitch.y)))), (_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(-61.31) : injectionSwitch.y)), 0.0 + (_GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(-61.31) : _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))) - 0.0))))))), _GLF_IDENTITY(bool(bool(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(-61.31) : injectionSwitch.y)))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (bool(bool(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(-61.31) : injectionSwitch.y)))))))))) && true)))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)), injectionSwitch, injectionSwitch)).x > injectionSwitch.y))), ! (! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false))), ! (! (! (_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false)))))))), (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(bool(bvec3(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (bool(bvec3(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) || false))), ! (_GLF_IDENTITY(! ((_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false))), ! (! (! (_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false)))))))), (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(bool(bvec3(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (bool(bvec3(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) || false)))), (! ((_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false))), ! (! (! (_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false)))))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false))), ! (_GLF_IDENTITY(! (! (_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false)))), ! (! (_GLF_IDENTITY(! (! (_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false)))), true && (! (! (_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || false))) || (false))))))))))))))), (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(((-846.670 / -1.4)))), float(injectionSwitch.x), bool(true))) > injectionSwitch.y))), bvec3(bvec4(bvec3(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(((-846.670 / -1.4)))), float(injectionSwitch.x), bool(true))) > injectionSwitch.y))), false)))), (bool(bvec3(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) || false))))) && true))))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat2x4(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-5858.3826), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(-7.3)), bvec2(true, false))), 0.0, 0.0, 0.0, 1.0, 1.0, 1.0)), _GLF_IDENTITY(vec2(mat3(vec2(mat2x4(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-5858.3826), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(-7.3)), bvec2(true, false))), 0.0, 0.0, 0.0, 1.0, 1.0, 1.0)), 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0)), min(vec2(mat3(vec2(mat2x4(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-5858.3826), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(-7.3)), bvec2(true, false))), 0.0, 0.0, 0.0, 1.0, 1.0, 1.0)), 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0)), vec2(mat3(vec2(mat2x4(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-5858.3826), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(-7.3)), bvec2(true, false))), 0.0, 0.0, 0.0, 1.0, 1.0, 1.0)), 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0)))))).y)), (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat2x4(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-5858.3826), (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(-7.3)), bvec2(_GLF_IDENTITY(true, (true) && true), false))), 0.0, 0.0, 0.0, 1.0, 1.0, 1.0)), _GLF_IDENTITY(vec2(mat3(vec2(mat2x4(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-5858.3826), (injectionSwitch)[1]), vec2((injectionSwitch)[_GLF_IDENTITY(0, (0) | 0)], _GLF_FUZZED(-7.3)), bvec2(true, _GLF_IDENTITY(false, ! (! (false)))))), 0.0, 0.0, 0.0, 1.0, 1.0, 1.0)), 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0)), min(vec2(mat3(vec2(mat2x4(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-5858.3826), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(-7.3)), bvec2(true, false))), 0.0, _GLF_IDENTITY(0.0, 0.0 + (0.0)), 0.0, 1.0, 1.0, 1.0)), 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0)), vec2(mat3(vec2(mat2x4(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-5858.3826), (injectionSwitch)[1]), _GLF_IDENTITY(vec2((injectionSwitch)[0], _GLF_FUZZED(-7.3)), clamp(_GLF_IDENTITY(vec2((injectionSwitch)[0], _GLF_FUZZED(-7.3)), (vec2((injectionSwitch)[0], _GLF_FUZZED(-7.3))) * mat2(1.0)), vec2((injectionSwitch)[0], _GLF_FUZZED(-7.3)), vec2((injectionSwitch)[0], _GLF_FUZZED(-7.3)))), bvec2(_GLF_IDENTITY(true, (_GLF_IDENTITY(true, bool(bool(true)))) && true), false))), 0.0, 0.0, 0.0, 1.0, 1.0, 1.0)), 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0)))))).y))) && true)))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, true, false), bvec3(bvec4(bvec3(false, true, false), false))))), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, true, false), bvec3(bvec4(bvec3(false, true, false), false))))), true, false, true)), (bool(bvec4(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, true, false), bvec3(bvec4(bvec3(false, true, false), false))))), true, false, true))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), bool(bvec4(false, false, false, true)))) || false)))
    return;
   return;
  }
 uint num_workgroup = gl_NumWorkGroups.x;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     barrier();
    }
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (true ? _GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) : _GLF_FUZZED(6895.8273))) > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bool(false)))) || false)))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), true && (! (_GLF_DEAD(false)))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)), false || _GLF_IDENTITY((_GLF_IDENTITY(bool(bvec3(_GLF_DEAD(false), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ((injectionSwitch.x < injectionSwitch.y)) && true) && true))), true)), bool(bvec4(bool(bvec3(_GLF_DEAD(false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)), _GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), ! (! (_GLF_IDENTITY(false, false || (false))))), false, false)))), ((_GLF_IDENTITY(bool(bvec3(_GLF_DEAD(false), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ! (! ((injectionSwitch.x < injectionSwitch.y)))) && true))), true)), bool(bvec4(bool(bvec3(_GLF_DEAD(false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)), _GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, false || (false))), true && (bool(_GLF_IDENTITY(false, false || (false))))))), false, false))))) || false))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   barrier();
  }
 if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - tan(0.0)) > injectionSwitch.y)), true && (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-2.1)), bool(false))), _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0))) > injectionSwitch.y))))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && true), bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, 1.0 * (injectionSwitch.y))))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY((false) && true, ! (! ((_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! (! (false)))), true && (! (_GLF_IDENTITY(false, ! (! (false))))))))) && true)))), (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))) || false), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, 1.0 * (injectionSwitch.y))))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY((false) && true, ! (! ((_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! (! (false)))), true && (! (_GLF_IDENTITY(false, ! (! (false))))))))) && true)))), (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))) || false, ((_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY((false) && true, ! (! ((_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), bool(bvec2(! (! (false)), false))))), true && (! (_GLF_IDENTITY(false, ! (! (false))))))))) && true)))), (_GLF_IDENTITY(injectionSwitch.x, float(vec2(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)), 1.0))) > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))) || false) && true))) || false), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > injectionSwitch.y)), _GLF_IDENTITY(true, true && (true)), true))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(_GLF_ONE(1.0, injectionSwitch.y))), injectionSwitch, injectionSwitch)).x > injectionSwitch.y))))
    return;
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(! _GLF_IDENTITY((! (false)), ((! (false))) || false), (_GLF_IDENTITY(! _GLF_IDENTITY((! (false)), ((! (false))) || false), bool(bvec3(_GLF_IDENTITY(! _GLF_IDENTITY((! (false)), ((! (false))) || false), (! _GLF_IDENTITY((! (false)), ((! (false))) || false)) && true), true, true)))) && true)), (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(30.96)), float(_GLF_IDENTITY(injectionSwitch.y, float(mat3x2(injectionSwitch.y, 1.0, 0.0, sqrt(0.0), abs(0.0), 0.0)))), bool(_GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, ! (! (true))))))))))))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, false || (false))))))
        {
         if(_GLF_DEAD(false))
          return;
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     barrier();
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! (false))))))))
  barrier();
 uint workgroup_size = gl_WorkGroupSize.x;
 uint workgroup_id = gl_WorkGroupID.x;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, (false) && true), (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(_GLF_IDENTITY(false, (false) && true), _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y))))) && _GLF_IDENTITY(true, false || (true)))))))))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(vec4(7.1, 1.2, -4933.9313, -3.3).r)), bool(_GLF_IDENTITY(false, bool(bvec2(false, _GLF_IDENTITY(false, (false) || false)))))))))))
      barrier();
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
    return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 uint workgroup_base = _GLF_IDENTITY(workgroup_size * workgroup_id, clamp(workgroup_size * workgroup_id, _GLF_IDENTITY(workgroup_size * workgroup_id, (_GLF_IDENTITY(workgroup_size * _GLF_IDENTITY(workgroup_id, (workgroup_id) | (workgroup_id)), ~ (~ (workgroup_size * workgroup_id)))) | (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_size, (_GLF_IDENTITY(workgroup_size, 0u | (workgroup_size))) / 1u), (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_size, (_GLF_IDENTITY(workgroup_size, 0u | (workgroup_size))) / 1u), max(_GLF_IDENTITY(workgroup_size, (_GLF_IDENTITY(workgroup_size, 0u | (workgroup_size))) / 1u), _GLF_IDENTITY(workgroup_size, (_GLF_IDENTITY(workgroup_size, 0u | (workgroup_size))) / 1u)))) / 1u) * workgroup_id)), _GLF_IDENTITY(workgroup_size * workgroup_id, (workgroup_size * workgroup_id) / 1u)));
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y))))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, true && (false)))))))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, false, false, true)))))
  barrier();
 uint virtual_gid = _GLF_IDENTITY(workgroup_base, max(workgroup_base, workgroup_base)) + subgroup_id * _GLF_IDENTITY(subgroup_size, (subgroup_size) | (_GLF_IDENTITY(subgroup_size, (subgroup_size) - 0u))) + subgroup_local_id;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), false, true, true))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(mat2(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat4x3(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)), log(1.0), 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, sqrt(1.0), 0.0)), min(vec2(mat4x3(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)), log(1.0), 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, sqrt(1.0), 0.0)), vec2(mat4x3(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)), log(1.0), 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, sqrt(1.0), 0.0))))), 0.0, 1.0))).x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) && true)) && true)))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  barrier();
 uint next_virtual_gid = _GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size + ((subgroup_local_id + 1) % subgroup_size), max(workgroup_base + subgroup_id * subgroup_size + _GLF_IDENTITY(((subgroup_local_id + _GLF_IDENTITY(1, max(1, _GLF_IDENTITY(1, (false ? _GLF_FUZZED(98582) : 1))))) % subgroup_size), min(((subgroup_local_id + _GLF_IDENTITY(1, max(1, _GLF_IDENTITY(1, (false ? _GLF_FUZZED(98582) : 1))))) % subgroup_size), ((subgroup_local_id + _GLF_IDENTITY(1, max(1, _GLF_IDENTITY(1, (false ? _GLF_FUZZED(98582) : 1))))) % subgroup_size))), workgroup_base + _GLF_IDENTITY(subgroup_id, (subgroup_id) | (subgroup_id)) * subgroup_size + ((_GLF_IDENTITY(subgroup_local_id, 0u ^ (subgroup_local_id)) + 1) % subgroup_size)));
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, true && (false)), (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)).y))))), false || _GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || false))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(mat2(injectionSwitch, 0.0, 0.0))).x > injectionSwitch.y))))
  barrier();
 atomicStore(buf[next_virtual_gid], _GLF_IDENTITY(uint(_GLF_IDENTITY(1, int(_GLF_IDENTITY(ivec3(1, int(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).y)), 0), _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(ivec3(1, int(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(6907.8082)), bool(false))))), 0), (ivec3(1, int(_GLF_ONE(1.0, injectionSwitch.y)), 0)) << ivec3(0, 0, 0))), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(ivec3(-68355, 8514, 6882)) : _GLF_IDENTITY((_GLF_IDENTITY(ivec3(1, int(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(6907.8082)), bool(false))))), 0), (ivec3(1, int(_GLF_ONE(1.0, injectionSwitch.y)), 0)) << ivec3(0, 0, 0))), ~ (~ ((_GLF_IDENTITY(ivec3(1, int(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(6907.8082)), bool(false))))), 0), (ivec3(1, int(_GLF_ONE(1.0, injectionSwitch.y)), 0)) << ivec3(0, 0, 0)))))))), (_GLF_IDENTITY((_GLF_IDENTITY(ivec3(1, int(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(6907.8082)), bool(false))))), 0), (ivec3(1, int(_GLF_ONE(1.0, injectionSwitch.y)), 0)) << ivec3(0, 0, 0))), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(ivec3(-68355, 8514, 6882)) : _GLF_IDENTITY((_GLF_IDENTITY(ivec3(1, int(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(6907.8082)), bool(false))))), 0), (ivec3(1, int(_GLF_ONE(1.0, injectionSwitch.y)), 0)) << ivec3(0, 0, 0))), ~ (~ ((_GLF_IDENTITY(ivec3(1, int(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(6907.8082)), bool(false))))), 0), (ivec3(1, int(_GLF_ONE(1.0, injectionSwitch.y)), 0)) << ivec3(0, 0, 0))))))))) ^ ivec3(0, 0, 0)) / ((ivec3(1, _GLF_IDENTITY(1, max(1, 1)), 1) << _GLF_IDENTITY(ivec3(4), ivec3(4))) >> _GLF_IDENTITY(ivec3(4), ivec3(4))))))), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (_GLF_IDENTITY(! (! (false)), true && (! (! (false)))))))), false || (false)) ? _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED((next_virtual_gid ++)), _GLF_IDENTITY((_GLF_FUZZED((next_virtual_gid ++))) + 0u, 0u | ((_GLF_FUZZED((next_virtual_gid ++))) + 0u))), (_GLF_IDENTITY(true, bool(bvec2(_GLF_IDENTITY(true, bool(bvec4(true, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))).x < injectionSwitch.y)), false, false))), false))) ? _GLF_FUZZED((next_virtual_gid ++)) : _GLF_FUZZED(num_workgroup))), 0u ^ (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED((next_virtual_gid ++)), (_GLF_FUZZED((next_virtual_gid ++))) + 0u), _GLF_IDENTITY((true ? _GLF_FUZZED((next_virtual_gid ++)) : _GLF_IDENTITY(_GLF_FUZZED(num_workgroup), (_GLF_IDENTITY(_GLF_FUZZED(num_workgroup), clamp(_GLF_FUZZED(num_workgroup), _GLF_IDENTITY(_GLF_FUZZED(num_workgroup), _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(_GLF_FUZZED(num_workgroup), max(_GLF_FUZZED(num_workgroup), _GLF_FUZZED(num_workgroup))), 0u, 1u), max(uvec3(_GLF_IDENTITY(_GLF_FUZZED(num_workgroup), max(_GLF_FUZZED(num_workgroup), _GLF_FUZZED(num_workgroup))), 0u, 1u), uvec3(_GLF_IDENTITY(_GLF_FUZZED(num_workgroup), max(_GLF_FUZZED(num_workgroup), _GLF_FUZZED(num_workgroup))), 0u, 1u)))), max(uint(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(_GLF_FUZZED(num_workgroup), max(_GLF_FUZZED(num_workgroup), _GLF_FUZZED(num_workgroup))), 0u, 1u), max(uvec3(_GLF_IDENTITY(_GLF_FUZZED(num_workgroup), max(_GLF_FUZZED(num_workgroup), _GLF_FUZZED(num_workgroup))), 0u, 1u), uvec3(_GLF_IDENTITY(_GLF_FUZZED(num_workgroup), max(_GLF_FUZZED(num_workgroup), _GLF_FUZZED(num_workgroup))), 0u, 1u)))), uint(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(_GLF_FUZZED(num_workgroup), max(_GLF_FUZZED(num_workgroup), _GLF_FUZZED(num_workgroup))), 0u, 1u), max(uvec3(_GLF_IDENTITY(_GLF_FUZZED(num_workgroup), max(_GLF_FUZZED(num_workgroup), _GLF_FUZZED(num_workgroup))), 0u, 1u), uvec3(_GLF_IDENTITY(_GLF_FUZZED(num_workgroup), max(_GLF_FUZZED(num_workgroup), _GLF_FUZZED(num_workgroup))), 0u, 1u))))))), _GLF_FUZZED(num_workgroup)))) | (_GLF_FUZZED(num_workgroup)))), ((true ? _GLF_FUZZED((next_virtual_gid ++)) : _GLF_IDENTITY(_GLF_FUZZED(num_workgroup), (_GLF_IDENTITY(_GLF_FUZZED(num_workgroup), clamp(_GLF_FUZZED(num_workgroup), _GLF_IDENTITY(_GLF_FUZZED(num_workgroup), _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(_GLF_FUZZED(num_workgroup), max(_GLF_FUZZED(num_workgroup), _GLF_FUZZED(num_workgroup))), 0u, 1u), max(uvec3(_GLF_IDENTITY(_GLF_FUZZED(num_workgroup), max(_GLF_FUZZED(num_workgroup), _GLF_FUZZED(num_workgroup))), 0u, 1u), uvec3(_GLF_IDENTITY(_GLF_FUZZED(num_workgroup), max(_GLF_FUZZED(num_workgroup), _GLF_FUZZED(num_workgroup))), 0u, 1u)))), max(uint(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(_GLF_FUZZED(num_workgroup), max(_GLF_FUZZED(num_workgroup), _GLF_FUZZED(num_workgroup))), 0u, 1u), max(uvec3(_GLF_IDENTITY(_GLF_FUZZED(num_workgroup), max(_GLF_FUZZED(num_workgroup), _GLF_FUZZED(num_workgroup))), 0u, 1u), uvec3(_GLF_IDENTITY(_GLF_FUZZED(num_workgroup), max(_GLF_FUZZED(num_workgroup), _GLF_FUZZED(num_workgroup))), 0u, 1u)))), uint(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(_GLF_FUZZED(num_workgroup), max(_GLF_FUZZED(num_workgroup), _GLF_FUZZED(num_workgroup))), 0u, 1u), max(uvec3(_GLF_IDENTITY(_GLF_FUZZED(num_workgroup), max(_GLF_FUZZED(num_workgroup), _GLF_FUZZED(num_workgroup))), 0u, 1u), uvec3(_GLF_IDENTITY(_GLF_FUZZED(num_workgroup), max(_GLF_FUZZED(num_workgroup), _GLF_FUZZED(num_workgroup))), 0u, 1u))))))), _GLF_FUZZED(num_workgroup)))) | (_GLF_FUZZED(num_workgroup))))) + 0u)), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED((next_virtual_gid ++)), _GLF_IDENTITY((_GLF_FUZZED((next_virtual_gid ++))), ((_GLF_FUZZED((next_virtual_gid ++)))) + 0u) + 0u), (true ? _GLF_IDENTITY(_GLF_FUZZED((next_virtual_gid ++)), (_GLF_FUZZED((next_virtual_gid ++))) + (0u ^ 0u)) : _GLF_FUZZED(num_workgroup)))) ^ 0u))) : _GLF_IDENTITY(uint(1), _GLF_IDENTITY((uint(1)) << 0u, _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY((uint(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, int(ivec3(1, 0, 1)))) | 0))), ((uint(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, int(ivec3(1, 0, 1)))) | 0)))) << 0u) << 0u) << 0u, _GLF_IDENTITY(clamp(_GLF_IDENTITY(_GLF_IDENTITY(((uint(_GLF_IDENTITY(1, (1) * 1))) << 0u) << 0u, (((uint(1)) << 0u) << 0u) ^ 0u), min(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(((uint(1)) << 0u) << 0u, (((uint(1)) << 0u) << 0u) ^ 0u), (_GLF_IDENTITY(((uint(1)) << 0u) << 0u, (((uint(1)) << 0u) << 0u) ^ 0u)) | (_GLF_IDENTITY(((uint(1)) << 0u) << 0u, (((uint(1)) << 0u) << 0u) ^ 0u))), (_GLF_IDENTITY(_GLF_IDENTITY(((uint(1)) << 0u) << 0u, (((uint(1)) << 0u) << 0u) ^ 0u), max(_GLF_IDENTITY(_GLF_IDENTITY(((uint(1)) << 0u) << 0u, (((uint(1)) << 0u) << 0u) ^ 0u), (_GLF_IDENTITY(((uint(1)) << 0u) << 0u, (((uint(1)) << 0u) << 0u) ^ 0u)) | 0u), _GLF_IDENTITY(((uint(1)) << 0u) << 0u, (((uint(1)) << 0u) << 0u) ^ 0u)))) ^ 0u), _GLF_IDENTITY(_GLF_IDENTITY(((uint(1)) << 0u) << 0u, clamp(((uint(1)) << 0u) << 0u, ((uint(1)) << 0u) << 0u, ((uint(1)) << 0u) << 0u)), ((_GLF_IDENTITY((uint(_GLF_IDENTITY(1, (1) / 1))), min(_GLF_IDENTITY((uint(_GLF_IDENTITY(1, (1) / 1))), (false ? _GLF_FUZZED(subgroup_size) : _GLF_IDENTITY((uint(_GLF_IDENTITY(1, (1) / 1))), max((uint(_GLF_IDENTITY(1, (1) / 1))), (uint(_GLF_IDENTITY(1, (1) / 1))))))), (uint(_GLF_IDENTITY(1, (1) / 1))))) << 0u) << 0u) ^ 0u))), (_GLF_IDENTITY(_GLF_IDENTITY((uint(1)), uint(uvec2((uint(1)), 0u))), max(_GLF_IDENTITY(_GLF_IDENTITY((uint(1)), uint(uvec2((uint(1)), 0u))), 0u ^ (_GLF_IDENTITY((uint(1)), uint(uvec2((uint(1)), 0u))))), _GLF_IDENTITY((uint(1)), uint(uvec2((uint(1)), 0u))))) << 0u) << 0u, ((uint(1)) << 0u) << 0u), ~ (~ (clamp(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(((uint(_GLF_IDENTITY(_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(57692))), (1) * 1))) << 0u) << 0u, max(_GLF_IDENTITY(((uint(_GLF_IDENTITY(_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(57692))), (1) * 1))) << 0u) << 0u, (((uint(_GLF_IDENTITY(_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(57692))), (1) * 1))) << 0u) << 0u) - 0u), ((uint(_GLF_IDENTITY(_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(57692))), (1) * 1))) << 0u) << 0u)), (((uint(1)) << 0u) << 0u) ^ 0u), min(_GLF_IDENTITY(_GLF_IDENTITY(((uint(1)) << 0u) << 0u, (((_GLF_IDENTITY(uint(1), 0u ^ (uint(1)))) << 0u) << 0u) ^ 0u), (_GLF_IDENTITY(_GLF_IDENTITY(((uint(1)) << 0u) << 0u, (((uint(1)) << 0u) << 0u) ^ 0u), (_GLF_IDENTITY(((uint(1)) << 0u) << 0u, (((uint(_GLF_IDENTITY(1, ~ (_GLF_IDENTITY(~ (1), (1 ^ 1) | (~ (1))))))) << 0u) << 0u) ^ 0u)) / (1u & (1u & 1u)))) ^ 0u), _GLF_IDENTITY(((uint(1)) << _GLF_IDENTITY(0u, (0u) | (0u))) << 0u, (((uint(1)) << 0u) << 0u) ^ _GLF_IDENTITY(0u, uint(uvec3(0u, 1u, 1u)))))), (_GLF_IDENTITY((uint(1)), uint(uvec2((uint(1)), 0u))) << 0u) << 0u, (_GLF_IDENTITY((uint(1)) << 0u, max(_GLF_IDENTITY((uint(1)) << 0u, ((uint(1)) << 0u) / 1u), (uint(1)) << 0u))) << 0u))))), min(_GLF_IDENTITY(_GLF_IDENTITY(((uint(1)) << 0u) << 0u, clamp(_GLF_IDENTITY(_GLF_IDENTITY(((uint(1)) << 0u) << 0u, (((uint(1)) << 0u) << 0u) ^ _GLF_IDENTITY(0u, (false ? _GLF_IDENTITY(_GLF_FUZZED(next_virtual_gid), clamp(_GLF_IDENTITY(_GLF_FUZZED(next_virtual_gid), max(_GLF_FUZZED(next_virtual_gid), _GLF_FUZZED(next_virtual_gid))), _GLF_IDENTITY(_GLF_FUZZED(next_virtual_gid), (_GLF_FUZZED(next_virtual_gid)) * 1u), _GLF_FUZZED(next_virtual_gid))) : _GLF_IDENTITY(0u, uint(uint(0u)))))), min(_GLF_IDENTITY(((uint(_GLF_IDENTITY(1, (1) / 1))) << _GLF_IDENTITY(0u, clamp(_GLF_IDENTITY(0u, min(0u, _GLF_IDENTITY(0u, (true ? _GLF_IDENTITY(0u, 0u | (0u)) : _GLF_FUZZED(subgroup_local_id))))), 0u, 0u))) << 0u, (((uint(1)) << 0u) << 0u) ^ 0u), _GLF_IDENTITY(((uint(1)) << 0u) << 0u, (((uint(1)) << 0u) << 0u) ^ 0u))), (_GLF_IDENTITY((uint(1)), uint(uvec2((uint(1)), 0u))) << 0u) << 0u, ((uint(1)) << 0u) << 0u)), (true ? _GLF_IDENTITY(((uint(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) + 0)) >> 0))) << 0u) << 0u, clamp(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY((uint(1)), ((uint(1))) - 0u) << 0u) << 0u, (((uint(1)) << 0u) << 0u) ^ 0u), min(_GLF_IDENTITY(_GLF_IDENTITY(((uint(1)) << 0u) << 0u, 0u ^ (((uint(1)) << 0u) << 0u)), (((uint(1)) << 0u) << 0u) ^ _GLF_IDENTITY(0u, _GLF_IDENTITY((_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) / 1u)) / 1u)), min((_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) / 1u)) / 1u)), _GLF_IDENTITY((_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) / 1u)) / 1u)), ((_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) / 1u)) / 1u))) | ((_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) / 1u)) / 1u)))))) | (0u << _GLF_IDENTITY(uint(1u), uint(1u))))), _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY((uint(1)) << 0u, _GLF_IDENTITY(((uint(1)) << 0u) ^ 0u, min(((uint(1)) << 0u) ^ 0u, ((uint(1)) << 0u) ^ 0u)))) << 0u, ((_GLF_IDENTITY((uint(1)) << 0u, ((uint(1)) << 0u) ^ 0u)) << 0u) | ((_GLF_IDENTITY((uint(1)) << 0u, ((uint(1)) << 0u) ^ 0u)) << 0u)), ((_GLF_IDENTITY((uint(1)) << 0u, ((uint(1)) << 0u) - 0u)) << 0u) ^ 0u))), (_GLF_IDENTITY(_GLF_IDENTITY((uint(1)), uint(uvec2((uint(1)), 0u))), min(_GLF_IDENTITY((uint(1)), uint(uvec2((uint(1)), 0u))), _GLF_IDENTITY(_GLF_IDENTITY((uint(1)), uint(uvec2((uint(1)), 0u))), uint(uvec2(_GLF_IDENTITY((uint(1)), uint(uvec2((uint(1)), 0u))), 1u))))) << 0u) << 0u, ((uint(1)) << 0u) << 0u)) : _GLF_FUZZED(_GLF_IDENTITY(uvec2(193268u, 30283u), (uvec2(_GLF_IDENTITY(193268u, clamp(193268u, _GLF_IDENTITY(193268u, (193268u) >> 0u), _GLF_IDENTITY(193268u, ~ (~ (193268u))))), 30283u)) | (_GLF_IDENTITY(uvec2(193268u, 30283u), uvec2(0u, 0u) | (_GLF_IDENTITY(uvec2(193268u, 30283u), uvec2(_GLF_IDENTITY(uvec2(uvec2(193268u, 30283u)), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? uvec2(uvec2(193268u, 30283u)) : _GLF_FUZZED((workgroup_size - uvec2(186278u, 97950u))))))))))).t))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(((uint(1)) << _GLF_IDENTITY(0u, _GLF_IDENTITY(uint(uvec3(_GLF_IDENTITY(0u, (true ? 0u : _GLF_FUZZED(atomicOr(workgroup_id, workgroup_id)))), 1u, 0u)), (uint(uvec3(_GLF_IDENTITY(0u, (true ? 0u : _GLF_FUZZED(atomicOr(workgroup_id, workgroup_id)))), 1u, 0u))) >> 0u))) << 0u, (((uint(1)) << 0u) << 0u) >> uint(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), (_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), (false ? _GLF_FUZZED(-6.8) : _GLF_ZERO(0.0, injectionSwitch.x)))) * 1.0))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(((uint(_GLF_IDENTITY(1, clamp(1, 1, 1)))) << _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) / 1u)) | (0u))), (_GLF_IDENTITY(((uint(_GLF_IDENTITY(1, clamp(1, 1, 1)))) << _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) / 1u)) | (0u))), (((uint(_GLF_IDENTITY(1, clamp(1, 1, 1)))) << _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) / 1u)) | (0u)))) << (0u ^ 0u))) | (_GLF_IDENTITY(((uint(_GLF_IDENTITY(1, clamp(1, 1, 1)))) << _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) / 1u)) | (0u))), 0u | (((uint(_GLF_IDENTITY(1, clamp(1, 1, 1)))) << _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) / 1u)) | (0u))))))) << 0u, _GLF_IDENTITY(_GLF_IDENTITY((((uint(1)) << 0u) << 0u), max(_GLF_IDENTITY((((uint(1)) << 0u) << 0u), ((((uint(1)) << 0u) << 0u)) * 1u), (((uint(1)) << 0u) << 0u))), uint(uint((((uint(1)) << 0u) << 0u)))) ^ 0u), min(_GLF_IDENTITY(((uint(1)) << 0u) << 0u, (((uint(1)) << _GLF_IDENTITY(0u, max(0u, _GLF_IDENTITY(0u, 0u + (0u))))) << 0u) ^ 0u), _GLF_IDENTITY((_GLF_IDENTITY((uint(1)) << 0u, clamp((uint(1)) << 0u, _GLF_IDENTITY((uint(1)) << 0u, ((uint(1)) << 0u) << uint(_GLF_ZERO(0.0, injectionSwitch.x))), (uint(1)) << 0u))) << 0u, (((uint(1)) << 0u) << 0u) ^ 0u))), (_GLF_IDENTITY((uint(_GLF_IDENTITY(1, int(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y)) * (1)))), uint(uvec2((uint(1)), 0u))) << 0u) << 0u, ((uint(1)) << _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) >> 0u)) + _GLF_IDENTITY(0u, min(0u, _GLF_IDENTITY(0u, uint(uint(0u))))))) << _GLF_IDENTITY(0u, (0u) | (_GLF_IDENTITY(0u, clamp(_GLF_IDENTITY(0u, 1u * (0u)), 0u, _GLF_IDENTITY(0u, (0u) | 0u))))))), (_GLF_IDENTITY(((uint(1)) << 0u) << 0u, clamp(_GLF_IDENTITY(_GLF_IDENTITY(((uint(1)) << 0u) << 0u, (((uint(1)) << _GLF_IDENTITY(0u, clamp(_GLF_IDENTITY(0u, (0u) | 0u), 0u, 0u))) << 0u) ^ 0u), min(_GLF_IDENTITY(((uint(1)) << _GLF_IDENTITY(0u, (0u) | 0u)) << 0u, (_GLF_IDENTITY(((uint(1)) << 0u), (((uint(1)) << 0u)) ^ (0u >> _GLF_IDENTITY(uint(0u), uint(0u)))) << 0u) ^ 0u), _GLF_IDENTITY(_GLF_IDENTITY(((uint(1)) << 0u) << 0u, 0u ^ (((uint(1)) << 0u) << 0u)), ((_GLF_IDENTITY((uint(1)), ~ (~ _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY((uint(1)), ((uint(1))) << 0u), (_GLF_IDENTITY((uint(1)), uint(uint((uint(1)))))) >> 0u)), min((_GLF_IDENTITY(_GLF_IDENTITY((uint(1)), ((uint(1))) << 0u), (_GLF_IDENTITY((uint(1)), uint(uint((uint(1)))))) >> 0u)), (_GLF_IDENTITY(_GLF_IDENTITY((uint(1)), ((uint(1))) << 0u), (_GLF_IDENTITY((uint(1)), uint(uint((uint(1)))))) >> 0u)))))) << 0u) << 0u) ^ 0u))), (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(uint(1), (uint(1)) | (uint(1)))), uint(uvec4((_GLF_IDENTITY(uint(1), (uint(1)) | (uint(1)))), 1u, 0u, 0u))), uint(uvec2((uint(1)), 0u))) << _GLF_IDENTITY(0u, (0u) - _GLF_IDENTITY((0u >> _GLF_IDENTITY(uint(2u), uint(2u))), _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec2(_GLF_IDENTITY(_GLF_IDENTITY((0u >> _GLF_IDENTITY(uint(2u), uint(2u))), ((0u >> _GLF_IDENTITY(uint(2u), uint(2u)))) + 0u), ((0u >> _GLF_IDENTITY(_GLF_IDENTITY(uint(2u), uint(2u)), (_GLF_IDENTITY(uint(2u), uint(2u))) >> 0u))) >> 0u), uint(_GLF_ZERO(0.0, injectionSwitch.x))), (false ? _GLF_FUZZED((subgroup_local_id | uvec2(4754u, 174563u))) : uvec2(_GLF_IDENTITY((0u >> _GLF_IDENTITY(uint(2u), uint(2u))), ((0u >> _GLF_IDENTITY(uint(2u), uint(2u)))) >> 0u), uint(_GLF_ZERO(0.0, injectionSwitch.x)))))), (uint(_GLF_IDENTITY(uvec2(_GLF_IDENTITY((0u >> _GLF_IDENTITY(uint(2u), uint(2u))), ((_GLF_IDENTITY(0u >> _GLF_IDENTITY(uint(2u), uint(2u)), uint(_GLF_ONE(1.0, injectionSwitch.y)) * (0u >> _GLF_IDENTITY(uint(2u), uint(2u)))))) >> 0u), uint(_GLF_ZERO(0.0, injectionSwitch.x))), (false ? _GLF_FUZZED((subgroup_local_id | uvec2(4754u, 174563u))) : uvec2(_GLF_IDENTITY((0u >> _GLF_IDENTITY(uint(_GLF_IDENTITY(2u, clamp(2u, 2u, 2u))), uint(2u))), _GLF_IDENTITY(((0u >> _GLF_IDENTITY(uint(2u), uint(2u)))), max(_GLF_IDENTITY(((0u >> _GLF_IDENTITY(uint(2u), uint(2u)))), max(((0u >> _GLF_IDENTITY(uint(2u), uint(2u)))), ((0u >> _GLF_IDENTITY(uint(2u), uint(2u)))))), ((0u >> _GLF_IDENTITY(uint(2u), uint(2u)))))) >> 0u), uint(_GLF_ZERO(0.0, injectionSwitch.x))))))) ^ 0u)))) << 0u, (_GLF_IDENTITY((uint(1)), _GLF_IDENTITY(_GLF_IDENTITY(((uint(1))) | ((uint(1))), min(((uint(1))) | ((uint(1))), ((uint(1))) | ((uint(1))))), (_GLF_IDENTITY(_GLF_IDENTITY(((uint(1))) | ((uint(1))), min(((uint(1))) | ((uint(1))), ((uint(1))) | ((uint(1))))), min(_GLF_IDENTITY(_GLF_IDENTITY(((uint(1))) | ((uint(1))), min(((uint(1))) | ((uint(1))), ((uint(1))) | ((uint(1))))), 0u ^ (_GLF_IDENTITY(((uint(1))) | ((uint(1))), min(((uint(1))) | ((uint(1))), ((uint(1))) | ((uint(1))))))), _GLF_IDENTITY(((uint(1))) | ((uint(1))), min(((uint(1))) | ((uint(1))), ((uint(1))) | ((uint(1)))))))) << 0u)) << 0u) << 0u))) | 0u)))))), _GLF_IDENTITY(((_GLF_IDENTITY(false, false || _GLF_IDENTITY((false), ((false)) && true)) ? _GLF_IDENTITY(_GLF_FUZZED((next_virtual_gid ++)), (true ? _GLF_IDENTITY(_GLF_FUZZED((next_virtual_gid ++)), (_GLF_FUZZED((next_virtual_gid ++))) + 0u) : _GLF_FUZZED(num_workgroup))) : _GLF_IDENTITY(uint(1), _GLF_IDENTITY((uint(1)) << 0u, _GLF_IDENTITY(_GLF_IDENTITY(((uint(1)) << 0u) << 0u, clamp(_GLF_IDENTITY(_GLF_IDENTITY(((uint(1)) << 0u) << 0u, (_GLF_IDENTITY(((uint(1)) << 0u), (((uint(1)) << 0u)) >> 0u) << 0u) ^ _GLF_IDENTITY(0u, 0u | (0u))), min(_GLF_IDENTITY(_GLF_IDENTITY(((uint(1)) << 0u) << 0u, (false ? _GLF_FUZZED(next_virtual_gid) : _GLF_IDENTITY(((uint(1)) << 0u) << 0u, (_GLF_IDENTITY((_GLF_IDENTITY((uint(1)), ((uint(1))) - 0u) << 0u) << 0u, 0u ^ ((_GLF_IDENTITY((uint(1)), (_GLF_IDENTITY((uint(1)), ((uint(1))) ^ 0u)) ^ 0u) << 0u) << 0u))) | (((uint(_GLF_IDENTITY(1, int(ivec2(1, 1))))) << 0u) << 0u)))), (((uint(1)) << 0u) << _GLF_IDENTITY(0u, (false ? _GLF_FUZZED(num_workgroup) : 0u))) ^ 0u), _GLF_IDENTITY(((_GLF_IDENTITY(uint(1), 0u ^ (uint(1)))) << 0u) << 0u, _GLF_IDENTITY((((_GLF_IDENTITY(uint(1), (_GLF_IDENTITY(uint(1), (uint(1)) << (0u & 75578u))) << 0u)) << 0u) << 0u), min((((_GLF_IDENTITY(uint(1), (_GLF_IDENTITY(uint(1), (uint(1)) << (0u & 75578u))) << 0u)) << 0u) << 0u), (((_GLF_IDENTITY(uint(1), (_GLF_IDENTITY(uint(1), (uint(1)) << (0u & 75578u))) << 0u)) << 0u) << 0u))) ^ 0u))), (_GLF_IDENTITY((uint(1)), uint(uvec2((uint(_GLF_IDENTITY(1, clamp(1, 1, 1)))), 0u))) << 0u) << _GLF_IDENTITY(0u, (0u) - 0u), _GLF_IDENTITY((_GLF_IDENTITY((uint(1)) << 0u, (_GLF_IDENTITY((uint(1)) << 0u, clamp((uint(_GLF_IDENTITY(1, (1) - 0))) << 0u, (uint(1)) << 0u, (uint(1)) << 0u))) ^ 0u)), (((uint(1)) << 0u)) - 0u) << 0u)), (false ? _GLF_FUZZED(workgroup_id) : _GLF_IDENTITY(((uint(1)) << 0u) << 0u, clamp(_GLF_IDENTITY(_GLF_IDENTITY(((uint(1)) << 0u) << 0u, (_GLF_IDENTITY(((uint(1)) << 0u), (((uint(1)) << 0u)) >> 0u) << 0u) ^ _GLF_IDENTITY(0u, 0u | (0u))), min(_GLF_IDENTITY(_GLF_IDENTITY(((uint(1)) << 0u) << 0u, (false ? _GLF_FUZZED(next_virtual_gid) : _GLF_IDENTITY(_GLF_IDENTITY(((uint(1)) << 0u) << 0u, (((uint(1)) << 0u) << 0u) + 0u), _GLF_IDENTITY((_GLF_IDENTITY((_GLF_IDENTITY((uint(1)), ((uint(1))) - 0u) << 0u) << 0u, 0u ^ ((_GLF_IDENTITY((uint(1)), (_GLF_IDENTITY((uint(1)), ((uint(1))) ^ 0u)) ^ 0u) << 0u) << 0u))) | (((uint(_GLF_IDENTITY(1, int(ivec2(1, 1))))) << 0u) << 0u), (_GLF_IDENTITY((_GLF_IDENTITY((_GLF_IDENTITY((uint(1)), ((uint(1))) - 0u) << 0u) << 0u, 0u ^ ((_GLF_IDENTITY((uint(1)), (_GLF_IDENTITY((uint(1)), ((uint(1))) ^ 0u)) ^ 0u) << 0u) << 0u))) | (((uint(_GLF_IDENTITY(1, int(ivec2(1, 1))))) << 0u) << 0u), max((_GLF_IDENTITY((_GLF_IDENTITY((uint(1)), ((uint(1))) - 0u) << 0u) << 0u, 0u ^ ((_GLF_IDENTITY((uint(1)), (_GLF_IDENTITY((uint(1)), ((uint(1))) ^ 0u)) ^ 0u) << 0u) << 0u))) | (((uint(_GLF_IDENTITY(1, int(ivec2(1, 1))))) << 0u) << 0u), (_GLF_IDENTITY((_GLF_IDENTITY((uint(1)), ((uint(1))) - 0u) << 0u) << 0u, 0u ^ ((_GLF_IDENTITY((uint(1)), (_GLF_IDENTITY((uint(1)), ((uint(1))) ^ 0u)) ^ 0u) << 0u) << 0u))) | (((uint(_GLF_IDENTITY(1, int(ivec2(1, 1))))) << 0u) << 0u)))) ^ (0u << _GLF_IDENTITY(uint(2u), uint(2u))))))), (((uint(1)) << 0u) << _GLF_IDENTITY(0u, (false ? _GLF_IDENTITY(_GLF_FUZZED(num_workgroup), 0u ^ (_GLF_FUZZED(num_workgroup))) : 0u))) ^ 0u), _GLF_IDENTITY(((_GLF_IDENTITY(uint(1), 0u ^ (uint(1)))) << 0u) << 0u, _GLF_IDENTITY((((_GLF_IDENTITY(uint(1), _GLF_IDENTITY((_GLF_IDENTITY(uint(1), (uint(1)) << (0u & 75578u))) << 0u, 0u + ((_GLF_IDENTITY(uint(1), (uint(1)) << (0u & 75578u))) << 0u)))) << 0u) << 0u), min((((_GLF_IDENTITY(uint(1), (_GLF_IDENTITY(uint(1), (uint(1)) << (0u & 75578u))) << 0u)) << 0u) << 0u), (((_GLF_IDENTITY(uint(1), (_GLF_IDENTITY(_GLF_IDENTITY(uint(1), (_GLF_IDENTITY(uint(1), (uint(1)) | (uint(1)))) | (uint(1))), (uint(1)) << (0u & _GLF_IDENTITY(75578u, max(_GLF_IDENTITY(75578u, (75578u) ^ 0u), _GLF_IDENTITY(75578u, clamp(75578u, 75578u, 75578u))))))) << 0u)) << 0u) << 0u))) ^ 0u))), (_GLF_IDENTITY((uint(1)), uint(uvec2((uint(_GLF_IDENTITY(1, clamp(1, 1, 1)))), 0u))) << 0u) << _GLF_IDENTITY(0u, _GLF_IDENTITY((0u), ((0u)) >> 0u) - 0u), _GLF_IDENTITY((_GLF_IDENTITY((uint(1)) << 0u, _GLF_IDENTITY((_GLF_IDENTITY((uint(1)) << 0u, clamp((uint(_GLF_IDENTITY(1, (1) - 0))) << 0u, (uint(1)) << 0u, (uint(1)) << 0u))) ^ 0u, clamp((_GLF_IDENTITY((uint(1)) << 0u, clamp((uint(_GLF_IDENTITY(1, (1) - 0))) << 0u, (uint(1)) << 0u, (uint(1)) << 0u))) ^ 0u, (_GLF_IDENTITY((uint(1)) << 0u, clamp((uint(_GLF_IDENTITY(1, (1) - 0))) << 0u, (uint(1)) << 0u, (uint(1)) << 0u))) ^ 0u, (_GLF_IDENTITY((uint(1)) << 0u, clamp((uint(_GLF_IDENTITY(1, (1) - 0))) << 0u, (uint(1)) << 0u, (uint(1)) << 0u))) ^ 0u)))), (_GLF_IDENTITY(((uint(1)) << 0u), (((uint(1)) << 0u)) | 0u)) - 0u) << 0u)))))))), (((_GLF_IDENTITY(_GLF_IDENTITY(false, false || _GLF_IDENTITY((false), ((false)) && true)), (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), _GLF_IDENTITY(false || _GLF_IDENTITY((false), ((false)) && true), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(false || _GLF_IDENTITY((false), ((false)) && true), true && (false || _GLF_IDENTITY((false), ((false)) && true))), false, true, false)), (bool(bvec4(_GLF_IDENTITY(false || _GLF_IDENTITY((false), ((false)) && true), true && (false || _GLF_IDENTITY((false), ((false)) && true))), false, true, false))) && true)))) || false) ? _GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(_GLF_IDENTITY((next_virtual_gid ++), (_GLF_IDENTITY((next_virtual_gid ++), ((next_virtual_gid ++)) * 1u)) | 0u)), 1u * (_GLF_FUZZED(_GLF_IDENTITY((next_virtual_gid ++), (_GLF_IDENTITY((next_virtual_gid ++), ((next_virtual_gid ++)) * 1u)) | 0u)))), (true ? _GLF_IDENTITY(_GLF_FUZZED((next_virtual_gid ++)), (true ? _GLF_FUZZED((next_virtual_gid ++)) : _GLF_FUZZED(virtual_gid))) : _GLF_FUZZED(num_workgroup))) : _GLF_IDENTITY(uint(1), _GLF_IDENTITY((uint(1)) << 0u, _GLF_IDENTITY(((uint(1)) << 0u) << 0u, clamp(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(((uint(1)) << 0u) << 0u, (_GLF_IDENTITY(((uint(1)) << 0u), (((uint(1)) << 0u)) >> 0u) << 0u) ^ _GLF_IDENTITY(_GLF_IDENTITY(0u, 0u | (0u)), uint(_GLF_ZERO(0.0, injectionSwitch.x)) | (_GLF_IDENTITY(0u, 0u | (0u))))), min(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY((uint(1)) << 0u, clamp((uint(1)) << 0u, _GLF_IDENTITY((uint(1)) << 0u, uint(uvec2((uint(1)) << 0u, 0u))), (uint(1)) << 0u))) << 0u, (false ? _GLF_FUZZED(next_virtual_gid) : _GLF_IDENTITY(((uint(1)) << 0u) << 0u, (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY((uint(1)), max((uint(1)), (uint(1)))), ((uint(1))) - 0u) << 0u) << 0u, 0u ^ ((_GLF_IDENTITY((uint(1)), ((uint(1))) << 0u) << 0u) << 0u))) | (((uint(_GLF_IDENTITY(1, int(ivec2(1, 1))))) << 0u) << 0u)))), (((uint(1)) << 0u) << _GLF_IDENTITY(0u, (false ? _GLF_FUZZED(num_workgroup) : 0u))) ^ 0u), _GLF_IDENTITY(((_GLF_IDENTITY(uint(1), 0u ^ (uint(1)))) << 0u) << 0u, (((uint(1)) << 0u) << 0u) ^ 0u))), (_GLF_IDENTITY(_GLF_IDENTITY(((uint(1)) << 0u) << 0u, (_GLF_IDENTITY(((uint(1)) << 0u), (((uint(1)) << 0u)) >> 0u) << 0u) ^ _GLF_IDENTITY(_GLF_IDENTITY(0u, 0u | (0u)), uint(_GLF_ZERO(0.0, injectionSwitch.x)) | (_GLF_IDENTITY(0u, 0u | (0u))))), min(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY((uint(1)) << 0u, clamp((uint(1)) << 0u, _GLF_IDENTITY((uint(1)) << 0u, uint(uvec2((uint(1)) << 0u, 0u))), (uint(1)) << 0u))) << 0u, (false ? _GLF_FUZZED(next_virtual_gid) : _GLF_IDENTITY(((uint(1)) << 0u) << 0u, (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY((uint(1)), max((uint(1)), (uint(1)))), ((uint(1))) - 0u) << 0u) << 0u, 0u ^ ((_GLF_IDENTITY((uint(1)), ((uint(1))) << 0u) << 0u) << 0u))) | (((uint(_GLF_IDENTITY(1, int(ivec2(1, 1))))) << 0u) << 0u)))), (((uint(1)) << 0u) << _GLF_IDENTITY(0u, (false ? _GLF_FUZZED(num_workgroup) : 0u))) ^ 0u), _GLF_IDENTITY(((_GLF_IDENTITY(uint(1), 0u ^ (uint(1)))) << 0u) << 0u, (((uint(1)) << 0u) << 0u) ^ 0u)))) | (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(((uint(1)) << 0u) << 0u, (_GLF_IDENTITY(((uint(1)) << 0u), (((uint(1)) << 0u)) >> 0u) << 0u) ^ _GLF_IDENTITY(_GLF_IDENTITY(0u, 0u | (0u)), uint(_GLF_ZERO(0.0, injectionSwitch.x)) | (_GLF_IDENTITY(0u, 0u | (0u))))), min(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY((uint(1)) << 0u, clamp((uint(1)) << 0u, _GLF_IDENTITY((uint(1)) << 0u, uint(uvec2((uint(1)) << 0u, 0u))), (uint(1)) << 0u))) << 0u, (false ? _GLF_FUZZED(next_virtual_gid) : _GLF_IDENTITY(((uint(1)) << 0u) << 0u, (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY((uint(1)), max((uint(1)), (uint(1)))), ((uint(1))) - 0u) << 0u) << 0u, 0u ^ ((_GLF_IDENTITY((uint(1)), ((uint(1))) << 0u) << 0u) << 0u))) | (((uint(_GLF_IDENTITY(1, int(ivec2(1, 1))))) << 0u) << 0u)))), (((uint(1)) << 0u) << _GLF_IDENTITY(0u, (false ? _GLF_FUZZED(num_workgroup) : 0u))) ^ 0u), _GLF_IDENTITY(((_GLF_IDENTITY(uint(1), 0u ^ (uint(1)))) << 0u) << 0u, (((uint(1)) << 0u) << 0u) ^ 0u))), (_GLF_IDENTITY(_GLF_IDENTITY(((uint(1)) << 0u) << 0u, (_GLF_IDENTITY(((uint(1)) << 0u), (((uint(1)) << 0u)) >> 0u) << 0u) ^ _GLF_IDENTITY(_GLF_IDENTITY(0u, 0u | (0u)), uint(_GLF_ZERO(0.0, injectionSwitch.x)) | (_GLF_IDENTITY(0u, 0u | (0u))))), min(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY((uint(1)) << 0u, clamp((uint(1)) << 0u, _GLF_IDENTITY((uint(1)) << 0u, uint(uvec2((uint(1)) << 0u, 0u))), (uint(1)) << 0u))) << 0u, (false ? _GLF_FUZZED(next_virtual_gid) : _GLF_IDENTITY(((uint(1)) << 0u) << 0u, (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY((uint(1)), max((uint(1)), (uint(1)))), ((uint(1))) - 0u) << 0u) << 0u, 0u ^ ((_GLF_IDENTITY((uint(1)), ((uint(1))) << 0u) << 0u) << 0u))) | (((uint(_GLF_IDENTITY(1, int(ivec2(1, 1))))) << 0u) << 0u)))), (((uint(1)) << 0u) << _GLF_IDENTITY(0u, (false ? _GLF_FUZZED(num_workgroup) : 0u))) ^ 0u), _GLF_IDENTITY(((_GLF_IDENTITY(uint(1), 0u ^ (uint(1)))) << 0u) << 0u, (((uint(1)) << 0u) << 0u) ^ 0u)))) | (_GLF_IDENTITY(_GLF_IDENTITY(((uint(1)) << 0u) << 0u, (_GLF_IDENTITY(((uint(1)) << 0u), (((uint(1)) << 0u)) >> 0u) << 0u) ^ _GLF_IDENTITY(_GLF_IDENTITY(0u, 0u | (0u)), uint(_GLF_ZERO(0.0, injectionSwitch.x)) | (_GLF_IDENTITY(0u, 0u | (0u))))), min(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY((uint(1)) << 0u, clamp((uint(1)) << 0u, _GLF_IDENTITY((uint(1)) << 0u, uint(uvec2((uint(1)) << 0u, 0u))), (uint(1)) << 0u))) << 0u, (false ? _GLF_FUZZED(next_virtual_gid) : _GLF_IDENTITY(((uint(1)) << 0u) << 0u, (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY((uint(1)), max((uint(1)), (uint(1)))), ((uint(1))) - 0u) << 0u) << 0u, 0u ^ ((_GLF_IDENTITY((uint(1)), ((uint(1))) << 0u) << 0u) << 0u))) | (((uint(_GLF_IDENTITY(1, int(ivec2(1, 1))))) << 0u) << 0u)))), (((uint(1)) << 0u) << _GLF_IDENTITY(0u, (false ? _GLF_FUZZED(num_workgroup) : 0u))) ^ 0u), _GLF_IDENTITY(((_GLF_IDENTITY(uint(1), 0u ^ (uint(1)))) << 0u) << 0u, (((uint(1)) << 0u) << 0u) ^ 0u))))))), (_GLF_IDENTITY(_GLF_IDENTITY((uint(1)), uint(uvec3((uint(1)), 0u, 1u))), uint(uvec2((uint(1)), 0u))) << 0u) << 0u, _GLF_IDENTITY((_GLF_IDENTITY((uint(1)) << _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, min(0u, 0u))) * _GLF_IDENTITY(1u, (1u) ^ 0u)), (_GLF_IDENTITY((uint(_GLF_IDENTITY(1, clamp(_GLF_IDENTITY(1, (1) | (1)), 1, 1)))) << 0u, clamp(_GLF_IDENTITY((uint(1)) << 0u, uint(uvec4((uint(1)) << 0u, 0u, (1u & 1u), 1u))), (uint(1)) << 0u, _GLF_IDENTITY((uint(1)), clamp((uint(1)), (uint(1)), (uint(1)))) << 0u))) ^ 0u)), (((_GLF_IDENTITY(uint(1), uint(_GLF_ZERO(_GLF_IDENTITY(0.0, _GLF_IDENTITY(float(_GLF_IDENTITY(mat2x4(0.0, 1.0, 1.0, exp(0.0), tan(0.0), cos(0.0), 1.0, 1.0), (mat2x4(0.0, 1.0, 1.0, exp(0.0), tan(0.0), cos(0.0), 1.0, 1.0)) - mat2x4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))), min(float(_GLF_IDENTITY(mat2x4(0.0, 1.0, 1.0, exp(0.0), tan(0.0), cos(0.0), 1.0, 1.0), (mat2x4(0.0, 1.0, 1.0, exp(0.0), tan(0.0), cos(0.0), 1.0, 1.0)) - mat2x4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))), float(_GLF_IDENTITY(mat2x4(0.0, 1.0, 1.0, exp(0.0), tan(0.0), cos(0.0), 1.0, 1.0), (mat2x4(0.0, 1.0, 1.0, exp(0.0), tan(0.0), cos(0.0), 1.0, 1.0)) - mat2x4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)))))), injectionSwitch.x)) | (uint(1)))) << 0u)) - 0u) << 0u))))))) >> (0u << _GLF_IDENTITY(_GLF_IDENTITY(uint(6u), (uint(6u)) ^ 0u), uint(6u)))) - uint(_GLF_ZERO(_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(24.70)), float(_GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0))), bool(true))), injectionSwitch.x)))), 4, _GLF_IDENTITY(_GLF_IDENTITY(64, ~ (_GLF_IDENTITY(~ (64), _GLF_IDENTITY(max(_GLF_IDENTITY(~ (64), (_GLF_IDENTITY(false ? _GLF_FUZZED(-13465) : ~ (_GLF_IDENTITY(64, (64) | (_GLF_IDENTITY(64, _GLF_IDENTITY((64), ((64)) * 1) | (_GLF_IDENTITY(-8658 & 0, (-8658 & 0) - 0)))))), int(_GLF_IDENTITY(_GLF_IDENTITY(int(false ? _GLF_FUZZED(-13465) : _GLF_IDENTITY(~ (64), 1 * (~ (64)))), (int(false ? _GLF_FUZZED(-13465) : ~ (64))) + 0), 0 | (_GLF_IDENTITY(int(false ? _GLF_FUZZED(-13465) : ~ (_GLF_IDENTITY(64, (64) / 1))), (int(false ? _GLF_FUZZED(-13465) : ~ (64))) + 0))))))), ~ (64)), 0 | (max(_GLF_IDENTITY(~ (64), (_GLF_IDENTITY(false ? _GLF_FUZZED(-13465) : ~ (_GLF_IDENTITY(64, (64) | (_GLF_IDENTITY(64, _GLF_IDENTITY((64), ((64)) * 1) | (_GLF_IDENTITY(-8658 & 0, (-8658 & 0) - 0)))))), int(_GLF_IDENTITY(_GLF_IDENTITY(int(false ? _GLF_FUZZED(-13465) : _GLF_IDENTITY(~ (64), 1 * (~ (64)))), (int(false ? _GLF_FUZZED(-13465) : ~ (64))) + 0), 0 | (_GLF_IDENTITY(int(false ? _GLF_FUZZED(-13465) : ~ (_GLF_IDENTITY(64, (64) / 1))), (int(false ? _GLF_FUZZED(-13465) : ~ (64))) + 0))))))), ~ (64))))))), (_GLF_IDENTITY(64, ~ (_GLF_IDENTITY(~ (64), max(_GLF_IDENTITY(~ (64), (_GLF_IDENTITY(false ? _GLF_FUZZED(-13465) : ~ (_GLF_IDENTITY(64, (64) | (_GLF_IDENTITY(_GLF_IDENTITY(64, (false ? _GLF_FUZZED(-27752) : 64)), (64) | (-8658 & 0))))), int(_GLF_IDENTITY(_GLF_IDENTITY(int(false ? _GLF_FUZZED(-13465) : ~ (64)), _GLF_IDENTITY((int(false ? _GLF_FUZZED(-13465) : ~ (64))) + 0, ((int(false ? _GLF_FUZZED(-13465) : ~ (64))) + 0) >> int(_GLF_ZERO(0.0, injectionSwitch.x)))), 0 | (_GLF_IDENTITY(int(false ? _GLF_FUZZED(-13465) : ~ (64)), _GLF_IDENTITY((int(false ? _GLF_FUZZED(-13465) : ~ (64))) + 0, int(_GLF_IDENTITY(int((int(false ? _GLF_FUZZED(-13465) : ~ (64))) + 0), (int((int(false ? _GLF_FUZZED(-13465) : ~ (64))) + 0)) << 0)))))))))), ~ (64)))))) ^ _GLF_IDENTITY(0, int(ivec4(_GLF_IDENTITY(0, min(0, 0)), 0, 0, 0)))), _GLF_IDENTITY(4, (4) / 1));
 if(_GLF_IDENTITY(_GLF_DEAD(false), false || _GLF_IDENTITY((_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false))))) && true)), ! (! ((_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false))))) && true)))))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(_GLF_IDENTITY(false, bool(bool(false))), _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y))))))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     barrier();
    }
   return;
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], (true ? injectionSwitch[1] : _GLF_FUZZED(38.39))))).y))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
    return;
   return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(false), bool(_GLF_IDENTITY(bvec2(_GLF_DEAD(false), true), _GLF_IDENTITY(bvec2(bvec4(bvec2(_GLF_DEAD(false), true), true, false)), _GLF_IDENTITY(bvec2(bvec4(bvec2(bvec4(bvec2(_GLF_DEAD(false), true), true, false)), true, true)), bvec2(bvec2(bvec2(bvec4(bvec2(bvec4(bvec2(_GLF_DEAD(false), true), true, false)), true, true))))))))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((false), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY((false), ((false)) && true))), bool(bool(bool(bool(_GLF_IDENTITY((false), ((false)) && true)))))))))))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), (bool(bool(false))) || false))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec3(_GLF_DEAD(false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)), bool(bvec3(bool(bvec3(_GLF_DEAD(false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)), false, false)))))
      barrier();
     return;
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec4(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))), (injectionSwitch.x > injectionSwitch.y))))
      return;
    }
   barrier();
  }
 uint read_1 = atomicLoad(buf[virtual_gid], _GLF_IDENTITY(4, clamp(_GLF_IDENTITY(4, (4) / int(_GLF_ONE(1.0, injectionSwitch.y))), 4, 4)), _GLF_IDENTITY(64, min(64, 64)), 0);
 atomicStore(buf[_GLF_IDENTITY(next_virtual_gid, (_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(true, (true) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), true, true)), (bool(bvec3(_GLF_IDENTITY(true, (true) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), true, true))) || false)) ? next_virtual_gid : _GLF_FUZZED(read_1)))], uint(read_1 + 1), 4, 64, 4);
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false)), false || (_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false))), false || (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0))) / vec2(1.0, 1.0)).y))))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(-8.1, -21.03)) : injectionSwitch)).y), bool(bvec3((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(-8.1, -21.03)) : injectionSwitch)).y), true, false))))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bool(_GLF_DEAD(false))), _GLF_IDENTITY(bool(bool(bool(bool(_GLF_DEAD(false))))), bool(_GLF_IDENTITY(bvec2(bool(bool(_GLF_IDENTITY(bool(bool(_GLF_DEAD(false))), bool(bvec4(bool(bool(_GLF_DEAD(false))), true, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + 0.0) < injectionSwitch.y)), true))))), true), bvec2(bvec3(bvec2(bool(bool(_GLF_IDENTITY(bool(bool(_GLF_DEAD(false))), bool(bvec4(bool(bool(_GLF_DEAD(false))), true, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + 0.0) < injectionSwitch.y)), true))))), true), false))))))))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, true && (false)), false, true, true))))), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))))), false || (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))))), bool(bool(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))))))))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) < injectionSwitch.y)) && (injectionSwitch.x > injectionSwitch.y))))))
        barrier();
       return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y))))))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
        return;
      }
     barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(false), bool(_GLF_IDENTITY(bvec3(_GLF_DEAD(false), false, true), bvec3(bvec4(bvec3(_GLF_DEAD(false), false, true), false))))))
      return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (bool(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), ! (! (bool(_GLF_IDENTITY(bool(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (bool(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true)))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)), injectionSwitch, injectionSwitch)).y))))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
   barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec4(false, false, true, true)))) || false)))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && _GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bool(_GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || ((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        return;
       return;
      }
     barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, _GLF_IDENTITY(true, false || (true)))))))
      return;
    }
   if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0) < injectionSwitch.y)) && (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(injectionSwitch.x > injectionSwitch.y, _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y)), true, true)))))))), false || (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))), ! (_GLF_IDENTITY(! (_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(3.5, 4.0)))).x > _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], max(injectionSwitch[0], injectionSwitch[0])), injectionSwitch[1])).y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), ! (! (_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false)), (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y)))))))))), (! (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat3(injectionSwitch, tan(0.0), determinant(mat3(1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0)), sqrt(0.0), 0.0, 0.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), _GLF_IDENTITY(vec2(1.0, 0.0), (_GLF_IDENTITY(vec2(1.0, 0.0), min(vec2(1.0, 0.0), vec2(1.0, 0.0)))) / vec2(1.0, 1.0))), dot(vec2(1.0, 0.0), vec2(1.0, 0.0))), 1.0), transpose(transpose(mat3(injectionSwitch, tan(0.0), determinant(mat3(1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0)), sqrt(0.0), 0.0, 0.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), vec2(1.0, 0.0))), 1.0)))))).y)), ! (! (_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, bool(bvec2(false, true))), true, false)))))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)).y)), ! _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), bool(bvec2((_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), true))), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), bool(bvec2((_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), true))), true, false, false)), bool(bvec2(_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), bool(bvec2((_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), true))), true, false, false)), (bool(bvec4(_GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), bool(bvec2((_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), true))), true, false, false))) || false), false))))))))))) || false))))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
      {
       if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), false, false, false))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))))
        return;
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, float(mat4x3(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(53.99, 8.8)))).x, 0.0, cos(0.0), _GLF_ONE(1.0, injectionSwitch.y), 0.0, 1.0, _GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0, 0.0, 1.0, 0.0, 0.0))) > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))))))
        {
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          return;
         barrier();
         if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, true, false, true)))))
          return;
         if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))))
          barrier();
        }
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     return;
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(426.787))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), (! (injectionSwitch.x > injectionSwitch.y)) || false))))), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     barrier();
    }
   if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), ! (! (! (_GLF_DEAD(false))))))), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), ! (! (! (_GLF_DEAD(false)))))))))))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, cos(tan(vec2(0.0, 0.0))) * (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))).x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) && true), _GLF_IDENTITY(! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, vec2(vec2(injectionSwitch))), injectionSwitch)).y)), (_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > injectionSwitch.y))) && true))), ! (_GLF_IDENTITY(! (! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, vec2(vec2(injectionSwitch))), injectionSwitch)).y)), (_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > injectionSwitch.y))) && true)))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(! (! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, vec2(vec2(injectionSwitch))), injectionSwitch)).y)), (_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > injectionSwitch.y))) && true))))), bool(bvec4(bool(! (! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, vec2(vec2(injectionSwitch))), injectionSwitch)).y)), (_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > injectionSwitch.y))) && true))))), false, false, true)))), true && (bool(_GLF_IDENTITY(bool(! (! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, vec2(vec2(injectionSwitch))), injectionSwitch)).y)), (_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > injectionSwitch.y))) && true))))), bool(bvec4(bool(! (! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, vec2(vec2(injectionSwitch))), injectionSwitch)).y)), (_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > injectionSwitch.y))) && true))))), false, false, true))))))))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, float(_GLF_IDENTITY(mat3x4(injectionSwitch.x, 0.0, _GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0)), dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0))), 0.0, exp(abs(0.0)), 0.0, 1.0, 0.0, 1.0, round(length(normalize(vec2(1.0, 1.0)))), 0.0, 1.0), (true ? mat3x4(injectionSwitch.x, 0.0, _GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0)), dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0))), 0.0, exp(abs(0.0)), 0.0, 1.0, 0.0, 1.0, round(length(normalize(vec2(1.0, 1.0)))), 0.0, 1.0) : _GLF_FUZZED(mat3x4(2.4, 22.88, 5151.4666, 33.17, 4.7, 2736.7231, 263.453, -7319.6426, -0.8, -8.8, -0.7, -6045.4371)))))) > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat3x2(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), clamp((injectionSwitch) * mat2(1.0), (injectionSwitch) * mat2(1.0), (injectionSwitch) * mat2(1.0)))), 1.0, 0.0, 1.0, 0.0)), max(vec2(mat3x2(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), clamp((injectionSwitch) * mat2(1.0), (injectionSwitch) * mat2(1.0), (injectionSwitch) * mat2(1.0)))), 1.0, 0.0, 1.0, 0.0)), vec2(mat3x2(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), clamp((injectionSwitch) * mat2(1.0), (injectionSwitch) * mat2(1.0), (injectionSwitch) * mat2(1.0)))), 1.0, 0.0, 1.0, 0.0))))).y))))
    return;
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
}
