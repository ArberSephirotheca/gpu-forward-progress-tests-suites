#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
        barrier();
       barrier();
      }
     barrier();
    }
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(! (! (injectionSwitch.x > injectionSwitch.y)), false || (! (! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y)))))))))
  barrier();
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_DEAD(false))
  barrier();
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch.y : _GLF_FUZZED(1.5)))) && true)))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (true ? _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0) : _GLF_FUZZED(-262.569))), (_GLF_IDENTITY(injectionSwitch.y, (true ? _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0) : _GLF_FUZZED(-262.569)))) + 0.0)))))
  barrier();
 uint num_workgroup = gl_NumWorkGroups.x;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint workgroup_size = gl_WorkGroupSize.x;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(max(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(2.9)), float(injectionSwitch.x), bool(true))), _GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(-8736.7080)))), float(mat4x2(max(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(2.9)), float(injectionSwitch.x), bool(true))), _GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(-8736.7080)))), 1.0, determinant(mat3(_GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0, sqrt(0.0), 1.0, 0.0, 0.0, 0.0, 1.0)), 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 0.0, 1.0)))), _GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * 1.0), injectionSwitch.x, injectionSwitch.x)))) > injectionSwitch.y))), _GLF_IDENTITY((_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(_GLF_IDENTITY(true, bool(bvec2(true, true))), ! (! (_GLF_IDENTITY(true, bool(bvec2(true, _GLF_IDENTITY(_GLF_IDENTITY(true, (true) && true), bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(true, (true) && true), (_GLF_IDENTITY(true, (true) && true)) || false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true))))))))) ? _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), vec2(vec3(injectionSwitch, 1.0))) : _GLF_FUZZED(clamp(injectionSwitch, distance(1.3, 9711.2771), -5215.8145)))).y, clamp(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(_GLF_IDENTITY(true, bool(bvec2(true, true))), ! (! (_GLF_IDENTITY(true, bool(bvec2(true, true)))))) ? _GLF_IDENTITY(injectionSwitch, vec2(vec3(injectionSwitch, 1.0))) : _GLF_FUZZED(clamp(injectionSwitch, distance(1.3, 9711.2771), -5215.8145)))).y, _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(_GLF_IDENTITY(true, bool(bvec2(true, true))), _GLF_IDENTITY(! (! (_GLF_IDENTITY(true, bool(bvec2(true, true))))), (_GLF_IDENTITY(! (! (_GLF_IDENTITY(true, bool(bvec2(true, true))))), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(! (! (_GLF_IDENTITY(true, bool(bvec2(true, true))))), ! (! (! (! (_GLF_IDENTITY(true, bool(bvec2(true, true)))))))), false, false)), bool(bvec3(bool(bvec3(_GLF_IDENTITY(! (! (_GLF_IDENTITY(true, bool(bvec2(true, true))))), ! (! (! (! (_GLF_IDENTITY(true, bool(bvec2(true, true)))))))), false, false)), false, true))))) || false)) ? _GLF_IDENTITY(injectionSwitch, vec2(vec3(injectionSwitch, 1.0))) : _GLF_FUZZED(_GLF_IDENTITY(clamp(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), distance(1.3, 9711.2771), -5215.8145), (false ? _GLF_FUZZED(vec2(-72.78, 4109.2512)) : clamp(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), _GLF_IDENTITY(distance(1.3, 9711.2771), _GLF_IDENTITY(float(_GLF_IDENTITY(mat3x4(distance(1.3, 9711.2771), 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 1.0, 0.0), (true ? mat3x4(distance(1.3, 9711.2771), 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 1.0, 0.0) : _GLF_FUZZED(mat3x4(8971.1524, 4.9, -160.352, -5.7, 967.466, 4872.2659, -549.800, 309.880, -81.02, 8769.2584, -6.6, 3.4))))), mix(float(_GLF_FUZZED(3.0)), float(float(_GLF_IDENTITY(mat3x4(distance(1.3, 9711.2771), 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 1.0, 0.0), (true ? mat3x4(distance(1.3, 9711.2771), 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 1.0, 0.0) : _GLF_FUZZED(mat3x4(8971.1524, 4.9, -160.352, -5.7, 967.466, 4872.2659, -549.800, 309.880, -81.02, 8769.2584, -6.6, 3.4)))))), bool(true)))), -5215.8145)))))).y, _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(_GLF_IDENTITY(true, bool(bvec2(true, true))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(true, false || (true)), bool(bvec2(true, true)))))) ? _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(vec3(injectionSwitch, _GLF_IDENTITY(1.0, (1.0) - 0.0)), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(vec3(injectionSwitch, _GLF_IDENTITY(1.0, (1.0) - 0.0)), (false ? _GLF_FUZZED(vec3(-1.9, 1.1, 2.9)) : vec3(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), _GLF_IDENTITY(1.0, (1.0) - 0.0)))) : _GLF_FUZZED(vec3(-0.7, 3.9, -23.37)))))) : _GLF_FUZZED(clamp(injectionSwitch, distance(1.3, 9711.2771), -5215.8145)))).y))), ! (! ((injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(_GLF_IDENTITY(true, bool(bvec2(true, true))), ! (! (_GLF_IDENTITY(true, bool(bvec2(true, _GLF_IDENTITY(true, (true) && true))))))) ? _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), vec2(vec3(injectionSwitch, 1.0))) : _GLF_FUZZED(clamp(injectionSwitch, distance(1.3, 9711.2771), -5215.8145)))).y, clamp(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(_GLF_IDENTITY(true, bool(bvec2(true, true))), ! (! (_GLF_IDENTITY(true, bool(bvec2(true, true)))))) ? _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(vec3(injectionSwitch, 1.0))), (_GLF_IDENTITY(injectionSwitch, vec2(vec3(injectionSwitch, 1.0)))) / vec2(1.0, 1.0)) : _GLF_FUZZED(clamp(injectionSwitch, distance(1.3, 9711.2771), -5215.8145)))).y, _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(_GLF_IDENTITY(true, bool(bvec2(true, true))), ! (! (_GLF_IDENTITY(true, bool(bvec2(true, true)))))) ? _GLF_IDENTITY(injectionSwitch, vec2(vec3(injectionSwitch, 1.0))) : _GLF_FUZZED(clamp(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), _GLF_IDENTITY(distance(1.3, 9711.2771), min(_GLF_IDENTITY(distance(1.3, 9711.2771), 1.0 * (distance(1.3, 9711.2771))), distance(1.3, 9711.2771))), -5215.8145)))).y, _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(_GLF_IDENTITY(true, bool(bvec2(true, true))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(true, false || (true)), bool(bvec2(true, true)))))) ? _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(vec3(injectionSwitch, _GLF_IDENTITY(1.0, (1.0) - 0.0)), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(vec3(injectionSwitch, _GLF_IDENTITY(1.0, (1.0) - 0.0)), (false ? _GLF_FUZZED(vec3(-1.9, 1.1, 2.9)) : vec3(injectionSwitch, _GLF_IDENTITY(1.0, (1.0) - 0.0)))) : _GLF_FUZZED(vec3(-0.7, 3.9, -23.37)))))), _GLF_IDENTITY(vec2(mat3x4(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(vec3(injectionSwitch, _GLF_IDENTITY(1.0, (1.0) - 0.0)), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(vec3(injectionSwitch, _GLF_IDENTITY(1.0, (1.0) - 0.0)), (false ? _GLF_FUZZED(vec3(-1.9, 1.1, 2.9)) : vec3(injectionSwitch, _GLF_IDENTITY(1.0, (1.0) - 0.0)))) : _GLF_FUZZED(vec3(-0.7, 3.9, -23.37)))))), clamp(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(vec3(injectionSwitch, _GLF_IDENTITY(1.0, (1.0) - 0.0)), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(vec3(injectionSwitch, _GLF_IDENTITY(1.0, (1.0) - 0.0)), (false ? _GLF_FUZZED(vec3(-1.9, 1.1, 2.9)) : vec3(injectionSwitch, _GLF_IDENTITY(1.0, (1.0) - 0.0)))) : _GLF_FUZZED(vec3(-0.7, 3.9, -23.37)))))), _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(vec3(injectionSwitch, _GLF_IDENTITY(1.0, (1.0) - 0.0)), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(vec3(injectionSwitch, _GLF_IDENTITY(1.0, (1.0) - 0.0)), (false ? _GLF_FUZZED(vec3(-1.9, 1.1, 2.9)) : vec3(injectionSwitch, _GLF_IDENTITY(1.0, (1.0) - 0.0)))) : _GLF_FUZZED(vec3(-0.7, 3.9, -23.37)))))), _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(vec3(injectionSwitch, _GLF_IDENTITY(1.0, (1.0) - 0.0)), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(vec3(injectionSwitch, _GLF_IDENTITY(1.0, (1.0) - 0.0)), (false ? _GLF_FUZZED(vec3(-1.9, 1.1, 2.9)) : vec3(injectionSwitch, _GLF_IDENTITY(1.0, (1.0) - 0.0)))) : _GLF_FUZZED(vec3(-0.7, 3.9, -23.37)))))))), 1.0, 1.0, sqrt(1.0), _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 0.0, 0.0, 1.0, 1.0, 1.0)), (vec2(mat3x4(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(vec3(injectionSwitch, _GLF_IDENTITY(1.0, (1.0) - 0.0)), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(vec3(injectionSwitch, _GLF_IDENTITY(1.0, (1.0) - 0.0)), (false ? _GLF_FUZZED(vec3(-1.9, 1.1, 2.9)) : vec3(injectionSwitch, _GLF_IDENTITY(1.0, (1.0) - 0.0)))) : _GLF_FUZZED(vec3(-0.7, 3.9, -23.37)))))), clamp(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(vec3(injectionSwitch, _GLF_IDENTITY(1.0, (1.0) - 0.0)), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(vec3(injectionSwitch, _GLF_IDENTITY(1.0, (1.0) - 0.0)), (false ? _GLF_FUZZED(vec3(-1.9, 1.1, 2.9)) : vec3(injectionSwitch, _GLF_IDENTITY(1.0, (1.0) - 0.0)))) : _GLF_FUZZED(vec3(-0.7, 3.9, -23.37)))))), _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(vec3(injectionSwitch, _GLF_IDENTITY(1.0, (1.0) - 0.0)), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(vec3(injectionSwitch, _GLF_IDENTITY(1.0, (1.0) - 0.0)), (false ? _GLF_FUZZED(vec3(-1.9, 1.1, 2.9)) : vec3(injectionSwitch, _GLF_IDENTITY(1.0, (1.0) - 0.0)))) : _GLF_FUZZED(vec3(-0.7, 3.9, -23.37)))))), _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(vec3(injectionSwitch, _GLF_IDENTITY(1.0, (1.0) - 0.0)), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(vec3(injectionSwitch, _GLF_IDENTITY(1.0, (1.0) - 0.0)), (false ? _GLF_FUZZED(vec3(-1.9, 1.1, 2.9)) : vec3(injectionSwitch, _GLF_IDENTITY(1.0, (1.0) - 0.0)))) : _GLF_FUZZED(vec3(-0.7, 3.9, -23.37)))))))), 1.0, 1.0, sqrt(1.0), _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 0.0, 0.0, 1.0, 1.0, 1.0))) - vec2(0.0, 0.0))) : _GLF_FUZZED(clamp(injectionSwitch, distance(1.3, 9711.2771), -5215.8145)))).y))))))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || ((_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(_GLF_IDENTITY(true, bool(bvec2(true, true))), ! (! (_GLF_IDENTITY(true, bool(bvec2(true, _GLF_IDENTITY(_GLF_IDENTITY(true, (true) && true), bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(true, (true) && true), (_GLF_IDENTITY(true, (true) && true)) || false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true))))))))) ? _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), vec2(vec3(injectionSwitch, 1.0))) : _GLF_FUZZED(clamp(injectionSwitch, distance(1.3, 9711.2771), -5215.8145)))).y, clamp(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(_GLF_IDENTITY(true, bool(bvec2(true, true))), ! (! (_GLF_IDENTITY(true, bool(bvec2(true, true)))))) ? _GLF_IDENTITY(injectionSwitch, vec2(vec3(injectionSwitch, 1.0))) : _GLF_FUZZED(clamp(injectionSwitch, distance(1.3, 9711.2771), -5215.8145)))).y, _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(_GLF_IDENTITY(true, bool(bvec2(true, true))), _GLF_IDENTITY(! (! (_GLF_IDENTITY(true, bool(bvec2(true, true))))), (_GLF_IDENTITY(! (! (_GLF_IDENTITY(true, bool(bvec2(true, true))))), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(! (! (_GLF_IDENTITY(true, bool(bvec2(true, true))))), ! (! (! (! (_GLF_IDENTITY(true, bool(bvec2(true, true)))))))), false, false)), bool(bvec3(bool(bvec3(_GLF_IDENTITY(! (! (_GLF_IDENTITY(true, bool(bvec2(true, true))))), ! (! (! (! (_GLF_IDENTITY(true, bool(bvec2(true, true)))))))), false, false)), false, true))))) || false)) ? _GLF_IDENTITY(injectionSwitch, vec2(vec3(injectionSwitch, 1.0))) : _GLF_FUZZED(_GLF_IDENTITY(clamp(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), distance(1.3, 9711.2771), -5215.8145), (false ? _GLF_FUZZED(vec2(-72.78, 4109.2512)) : clamp(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), _GLF_IDENTITY(distance(1.3, 9711.2771), _GLF_IDENTITY(float(_GLF_IDENTITY(mat3x4(distance(1.3, 9711.2771), 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 1.0, 0.0), (true ? mat3x4(distance(1.3, 9711.2771), 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 1.0, 0.0) : _GLF_FUZZED(mat3x4(8971.1524, 4.9, -160.352, -5.7, 967.466, 4872.2659, -549.800, 309.880, -81.02, 8769.2584, -6.6, 3.4))))), mix(float(_GLF_FUZZED(3.0)), float(float(_GLF_IDENTITY(mat3x4(distance(1.3, 9711.2771), 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 1.0, 0.0), (true ? mat3x4(distance(1.3, 9711.2771), 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 1.0, 0.0) : _GLF_FUZZED(mat3x4(8971.1524, 4.9, -160.352, -5.7, 967.466, 4872.2659, -549.800, 309.880, -81.02, 8769.2584, -6.6, 3.4)))))), bool(true)))), -5215.8145)))))).y, _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(_GLF_IDENTITY(true, bool(bvec2(true, true))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(true, false || (true)), bool(bvec2(true, true)))))) ? _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(vec3(injectionSwitch, _GLF_IDENTITY(1.0, (1.0) - 0.0)), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(vec3(injectionSwitch, _GLF_IDENTITY(1.0, (1.0) - 0.0)), (false ? _GLF_FUZZED(vec3(-1.9, 1.1, 2.9)) : vec3(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), _GLF_IDENTITY(1.0, (1.0) - 0.0)))) : _GLF_FUZZED(vec3(-0.7, 3.9, -23.37)))))) : _GLF_FUZZED(clamp(injectionSwitch, distance(1.3, 9711.2771), -5215.8145)))).y))), ! (! ((injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(_GLF_IDENTITY(true, bool(bvec2(true, true))), ! (! (_GLF_IDENTITY(true, bool(bvec2(true, _GLF_IDENTITY(true, (true) && true))))))) ? _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), vec2(vec3(injectionSwitch, 1.0))) : _GLF_FUZZED(clamp(injectionSwitch, distance(1.3, 9711.2771), -5215.8145)))).y, clamp(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(_GLF_IDENTITY(true, bool(bvec2(true, true))), ! (! (_GLF_IDENTITY(true, bool(bvec2(true, true)))))) ? _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(vec3(injectionSwitch, 1.0))), (_GLF_IDENTITY(injectionSwitch, vec2(vec3(injectionSwitch, 1.0)))) / vec2(1.0, 1.0)) : _GLF_FUZZED(clamp(injectionSwitch, distance(1.3, 9711.2771), -5215.8145)))).y, _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(_GLF_IDENTITY(true, bool(bvec2(true, true))), ! (! (_GLF_IDENTITY(true, bool(bvec2(true, true)))))) ? _GLF_IDENTITY(injectionSwitch, vec2(vec3(injectionSwitch, 1.0))) : _GLF_FUZZED(clamp(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), _GLF_IDENTITY(distance(1.3, 9711.2771), min(_GLF_IDENTITY(distance(1.3, 9711.2771), 1.0 * (distance(1.3, 9711.2771))), distance(1.3, 9711.2771))), -5215.8145)))).y, _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(_GLF_IDENTITY(true, bool(bvec2(true, true))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(true, false || (true)), bool(bvec2(true, true)))))) ? _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(vec3(injectionSwitch, _GLF_IDENTITY(1.0, (1.0) - 0.0)), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(vec3(injectionSwitch, _GLF_IDENTITY(1.0, (1.0) - 0.0)), (false ? _GLF_FUZZED(vec3(-1.9, 1.1, 2.9)) : vec3(injectionSwitch, _GLF_IDENTITY(1.0, (1.0) - 0.0)))) : _GLF_FUZZED(vec3(-0.7, 3.9, -23.37)))))), _GLF_IDENTITY(vec2(mat3x4(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(vec3(injectionSwitch, _GLF_IDENTITY(1.0, (1.0) - 0.0)), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(vec3(injectionSwitch, _GLF_IDENTITY(1.0, (1.0) - 0.0)), (false ? _GLF_FUZZED(vec3(-1.9, 1.1, 2.9)) : vec3(injectionSwitch, _GLF_IDENTITY(1.0, (1.0) - 0.0)))) : _GLF_FUZZED(vec3(-0.7, 3.9, -23.37)))))), clamp(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(vec3(injectionSwitch, _GLF_IDENTITY(1.0, (1.0) - 0.0)), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(vec3(injectionSwitch, _GLF_IDENTITY(1.0, (1.0) - 0.0)), (false ? _GLF_FUZZED(vec3(-1.9, 1.1, 2.9)) : vec3(injectionSwitch, _GLF_IDENTITY(1.0, (1.0) - 0.0)))) : _GLF_FUZZED(vec3(-0.7, 3.9, -23.37)))))), _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(vec3(injectionSwitch, _GLF_IDENTITY(1.0, (1.0) - 0.0)), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(vec3(injectionSwitch, _GLF_IDENTITY(1.0, (1.0) - 0.0)), (false ? _GLF_FUZZED(vec3(-1.9, 1.1, 2.9)) : vec3(injectionSwitch, _GLF_IDENTITY(1.0, (1.0) - 0.0)))) : _GLF_FUZZED(vec3(-0.7, 3.9, -23.37)))))), _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(vec3(injectionSwitch, _GLF_IDENTITY(1.0, (1.0) - 0.0)), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(vec3(injectionSwitch, _GLF_IDENTITY(1.0, (1.0) - 0.0)), (false ? _GLF_FUZZED(vec3(-1.9, 1.1, 2.9)) : vec3(injectionSwitch, _GLF_IDENTITY(1.0, (1.0) - 0.0)))) : _GLF_FUZZED(vec3(-0.7, 3.9, -23.37)))))))), 1.0, 1.0, sqrt(1.0), _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 0.0, 0.0, 1.0, 1.0, 1.0)), (vec2(mat3x4(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(vec3(injectionSwitch, _GLF_IDENTITY(1.0, (1.0) - 0.0)), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(vec3(injectionSwitch, _GLF_IDENTITY(1.0, (1.0) - 0.0)), (false ? _GLF_FUZZED(vec3(-1.9, 1.1, 2.9)) : vec3(injectionSwitch, _GLF_IDENTITY(1.0, (1.0) - 0.0)))) : _GLF_FUZZED(vec3(-0.7, 3.9, -23.37)))))), clamp(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(vec3(injectionSwitch, _GLF_IDENTITY(1.0, (1.0) - 0.0)), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(vec3(injectionSwitch, _GLF_IDENTITY(1.0, (1.0) - 0.0)), (false ? _GLF_FUZZED(vec3(-1.9, 1.1, 2.9)) : vec3(injectionSwitch, _GLF_IDENTITY(1.0, (1.0) - 0.0)))) : _GLF_FUZZED(vec3(-0.7, 3.9, -23.37)))))), _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(vec3(injectionSwitch, _GLF_IDENTITY(1.0, (1.0) - 0.0)), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(vec3(injectionSwitch, _GLF_IDENTITY(1.0, (1.0) - 0.0)), (false ? _GLF_FUZZED(vec3(-1.9, 1.1, 2.9)) : vec3(injectionSwitch, _GLF_IDENTITY(1.0, (1.0) - 0.0)))) : _GLF_FUZZED(vec3(-0.7, 3.9, -23.37)))))), _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(vec3(injectionSwitch, _GLF_IDENTITY(1.0, (1.0) - 0.0)), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(vec3(injectionSwitch, _GLF_IDENTITY(1.0, (1.0) - 0.0)), (false ? _GLF_FUZZED(vec3(-1.9, 1.1, 2.9)) : vec3(injectionSwitch, _GLF_IDENTITY(1.0, (1.0) - 0.0)))) : _GLF_FUZZED(vec3(-0.7, 3.9, -23.37)))))))), 1.0, 1.0, sqrt(1.0), _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 0.0, 0.0, 1.0, 1.0, 1.0))) - vec2(0.0, 0.0))) : _GLF_FUZZED(clamp(injectionSwitch, distance(1.3, 9711.2771), -5215.8145)))).y))))))))))) || false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(mat3(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)), 1.0, 0.0, determinant(mat3(exp(0.0), 0.0, 1.0, tan(0.0), 1.0, 1.0, 0.0, 0.0, 1.0)), 0.0, 0.0, 0.0, 1.0))).y))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 uint workgroup_id = gl_WorkGroupID.x;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true))), false)), true && (bool(bvec2(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true))), false)))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_DEAD(false)), ! (_GLF_IDENTITY(! (bool(_GLF_DEAD(false))), bool(bool(! (bool(_GLF_DEAD(false)))))))), _GLF_IDENTITY(bool(bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && _GLF_IDENTITY(true, ! (! (true)))), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))), (_GLF_DEAD(false)) && _GLF_IDENTITY(true, ! (! (true))))), bool(bvec2(bool(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && _GLF_IDENTITY(true, ! (! (true))))), true)))))))), (bool(bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && _GLF_IDENTITY(true, ! (! (true)))), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && _GLF_IDENTITY(true, ! (! (true))))), bool(bvec2(bool(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && _GLF_IDENTITY(true, ! (! (true))))), true))))))))) && true)))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
  barrier();
 uint workgroup_base = _GLF_IDENTITY(workgroup_size, uint(uvec3(workgroup_size, 0u, 1u))) * workgroup_id;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(-29.20) : injectionSwitch.y))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(_GLF_IDENTITY(bool(bool(_GLF_DEAD(false))), (bool(bool(_GLF_DEAD(false)))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), ! _GLF_IDENTITY((! (_GLF_IDENTITY(_GLF_IDENTITY(bool(bool(_GLF_DEAD(false))), ! _GLF_IDENTITY((! (bool(_GLF_IDENTITY(bool(_GLF_DEAD(false)), _GLF_IDENTITY(bool(bvec4(bool(_GLF_DEAD(false)), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)), true && (bool(bvec4(bool(_GLF_DEAD(false)), true, _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ((injectionSwitch.x < injectionSwitch.y)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), false)))))))), true && ((! (bool(_GLF_IDENTITY(bool(_GLF_DEAD(false)), _GLF_IDENTITY(bool(bvec4(bool(_GLF_DEAD(false)), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)), true && (bool(bvec4(bool(_GLF_DEAD(false)), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))))))))))), true && (_GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_DEAD(false)), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(bool(_GLF_DEAD(false)), (bool(_GLF_DEAD(false))) && true))), bool(bvec3(bool(bool(_GLF_IDENTITY(bool(_GLF_DEAD(false)), (bool(_GLF_DEAD(false))) && true))), true, false))))), ! (! (bool(_GLF_IDENTITY(bool(_GLF_DEAD(false)), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(bool(_GLF_DEAD(false)), (bool(_GLF_DEAD(false))) && true))), bool(bvec3(bool(bool(_GLF_IDENTITY(bool(_GLF_DEAD(false)), (bool(_GLF_DEAD(false))) && true))), true, false)))))))), ! _GLF_IDENTITY((! _GLF_IDENTITY((bool(_GLF_IDENTITY(bool(_GLF_DEAD(false)), _GLF_IDENTITY(bool(bvec4(bool(_GLF_DEAD(false)), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)), _GLF_IDENTITY(true, bool(bvec2(_GLF_IDENTITY(true, true && (true)), false))) && (_GLF_IDENTITY(bool(bvec4(bool(_GLF_DEAD(false)), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(bool(bvec4(bool(_GLF_DEAD(false)), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)), (bool(bvec4(bool(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false)))))), true)), bool(bvec3(bool(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false)))))), true)), false, false))))), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))) || false))), bool(bool(bool(bool(_GLF_IDENTITY(bool(bvec4(bool(_GLF_DEAD(false)), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)), (bool(bvec4(bool(_GLF_DEAD(false)), true, _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ! (! ((injectionSwitch.x < injectionSwitch.y))))), false))) || false)))))))))))), ! (! (_GLF_IDENTITY((bool(_GLF_IDENTITY(bool(_GLF_DEAD(false)), _GLF_IDENTITY(bool(bvec4(bool(_GLF_DEAD(false)), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)), _GLF_IDENTITY(true, bool(bvec2(_GLF_IDENTITY(true, true && (true)), false))) && (_GLF_IDENTITY(bool(bvec4(bool(_GLF_DEAD(false)), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(bool(bvec4(bool(_GLF_DEAD(false)), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)), (bool(bvec4(bool(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false)))))), true)), bool(bvec3(bool(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false)))))), true)), false, false))))), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))) || false))), bool(bool(bool(bool(_GLF_IDENTITY(bool(bvec4(bool(_GLF_DEAD(false)), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)), (bool(bvec4(bool(_GLF_DEAD(false)), true, _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ! (! ((injectionSwitch.x < injectionSwitch.y))))), false))) || false)))))))))))), false || ((bool(_GLF_IDENTITY(bool(_GLF_DEAD(false)), _GLF_IDENTITY(bool(bvec4(bool(_GLF_DEAD(false)), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)), _GLF_IDENTITY(true, bool(bvec2(_GLF_IDENTITY(true, true && (true)), false))) && (_GLF_IDENTITY(bool(bvec4(bool(_GLF_DEAD(false)), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(bool(bvec4(bool(_GLF_DEAD(false)), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)), (bool(bvec4(bool(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false)))))), true)), bool(bvec3(bool(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false)))))), true)), false, false))))), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))) || false))), bool(bool(bool(bool(_GLF_IDENTITY(bool(bvec4(bool(_GLF_DEAD(false)), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)), (bool(bvec4(bool(_GLF_DEAD(false)), true, _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ! (! ((injectionSwitch.x < injectionSwitch.y))))), false))) || false)))))))))))))))))), true && ((! (bool(_GLF_IDENTITY(bool(_GLF_DEAD(false)), _GLF_IDENTITY(bool(bvec4(bool(_GLF_DEAD(false)), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)), _GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), ! (! (! (true)))))) && (bool(bvec4(bool(_GLF_DEAD(false)), true, _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), bool(_GLF_IDENTITY(bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false), bvec2(bvec2(bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)))))), false))))))))))))))), ! (! ((! (_GLF_IDENTITY(_GLF_IDENTITY(bool(bool(_GLF_DEAD(false))), ! _GLF_IDENTITY((! (bool(_GLF_IDENTITY(bool(_GLF_DEAD(false)), _GLF_IDENTITY(bool(bvec4(bool(_GLF_DEAD(false)), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)), true && (bool(bvec4(bool(_GLF_DEAD(false)), true, _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ((injectionSwitch.x < injectionSwitch.y)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), false)))))))), true && ((! (bool(_GLF_IDENTITY(bool(_GLF_DEAD(false)), _GLF_IDENTITY(bool(bvec4(bool(_GLF_DEAD(false)), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)), true && (bool(bvec4(bool(_GLF_DEAD(false)), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))))))))))), true && (_GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_DEAD(false)), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(bool(_GLF_DEAD(false)), (bool(_GLF_DEAD(false))) && true))), bool(bvec3(bool(bool(_GLF_IDENTITY(bool(_GLF_DEAD(false)), (bool(_GLF_DEAD(false))) && true))), true, false))))), ! (! (bool(_GLF_IDENTITY(bool(_GLF_DEAD(false)), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(bool(_GLF_DEAD(false)), (bool(_GLF_DEAD(false))) && true))), bool(bvec3(bool(bool(_GLF_IDENTITY(bool(_GLF_DEAD(false)), (bool(_GLF_DEAD(false))) && true))), true, false)))))))), ! _GLF_IDENTITY((! _GLF_IDENTITY((bool(_GLF_IDENTITY(bool(_GLF_DEAD(false)), _GLF_IDENTITY(bool(bvec4(bool(_GLF_DEAD(false)), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)), _GLF_IDENTITY(true, bool(bvec2(_GLF_IDENTITY(true, true && (true)), false))) && (_GLF_IDENTITY(bool(bvec4(bool(_GLF_DEAD(false)), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(bool(bvec4(bool(_GLF_DEAD(false)), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)), (bool(bvec4(bool(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false)))))), true)), bool(bvec3(bool(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false)))))), true)), false, false))))), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))) || false))), bool(bool(bool(bool(_GLF_IDENTITY(bool(bvec4(bool(_GLF_DEAD(false)), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)), (bool(bvec4(bool(_GLF_DEAD(false)), true, _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ! (! ((injectionSwitch.x < injectionSwitch.y))))), false))) || false)))))))))))), ! (! (_GLF_IDENTITY((bool(_GLF_IDENTITY(bool(_GLF_DEAD(false)), _GLF_IDENTITY(bool(bvec4(bool(_GLF_DEAD(false)), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)), _GLF_IDENTITY(true, bool(bvec2(_GLF_IDENTITY(true, true && (true)), false))) && (_GLF_IDENTITY(bool(bvec4(bool(_GLF_DEAD(false)), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(bool(bvec4(bool(_GLF_DEAD(false)), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)), (bool(bvec4(bool(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false)))))), true)), bool(bvec3(bool(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false)))))), true)), false, false))))), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))) || false))), bool(bool(bool(bool(_GLF_IDENTITY(bool(bvec4(bool(_GLF_DEAD(false)), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)), (bool(bvec4(bool(_GLF_DEAD(false)), true, _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ! (! ((injectionSwitch.x < injectionSwitch.y))))), false))) || false)))))))))))), false || ((bool(_GLF_IDENTITY(bool(_GLF_DEAD(false)), _GLF_IDENTITY(bool(bvec4(bool(_GLF_DEAD(false)), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)), _GLF_IDENTITY(true, bool(bvec2(_GLF_IDENTITY(true, true && (true)), false))) && (_GLF_IDENTITY(bool(bvec4(bool(_GLF_DEAD(false)), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(bool(bvec4(bool(_GLF_DEAD(false)), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)), (bool(bvec4(bool(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false)))))), true)), bool(bvec3(bool(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false)))))), true)), false, false))))), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))) || false))), bool(bool(bool(bool(_GLF_IDENTITY(bool(bvec4(bool(_GLF_DEAD(false)), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)), (bool(bvec4(bool(_GLF_DEAD(false)), true, _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ! (! ((injectionSwitch.x < injectionSwitch.y))))), false))) || false)))))))))))))))))), true && ((! (bool(_GLF_IDENTITY(bool(_GLF_DEAD(false)), _GLF_IDENTITY(bool(bvec4(bool(_GLF_DEAD(false)), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)), _GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), ! (! (! (true)))))) && (bool(bvec4(bool(_GLF_DEAD(false)), true, _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), bool(_GLF_IDENTITY(bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false), bvec2(bvec2(bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)))))), false)))))))))))))))))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, true, false)))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
  }
 uint virtual_gid = workgroup_base + subgroup_id * subgroup_size + subgroup_local_id;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, false || (false))) && true)))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)))))
        barrier();
      }
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint next_virtual_gid = workgroup_base + subgroup_id * _GLF_IDENTITY(subgroup_size, (subgroup_size) | 0u) + (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) - (0u & 188429u)) + 1, (false ? _GLF_FUZZED(workgroup_base) : _GLF_IDENTITY(subgroup_local_id + 1, (false ? _GLF_FUZZED(workgroup_id) : _GLF_IDENTITY(subgroup_local_id + 1, uint(_GLF_IDENTITY(uint(subgroup_local_id + _GLF_IDENTITY(1, (1) | _GLF_IDENTITY((1), max((1), (1))))), (_GLF_IDENTITY(uint(subgroup_local_id + _GLF_IDENTITY(1, (1) | _GLF_IDENTITY((1), max((1), (1))))), 0u ^ (uint(subgroup_local_id + _GLF_IDENTITY(1, (1) | _GLF_IDENTITY((1), max((1), (1)))))))) | (uint(subgroup_local_id + _GLF_IDENTITY(1, (1) | _GLF_IDENTITY((1), max((1), (1)))))))))))))), ~ (~ ((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, 0u | (subgroup_local_id)) + 1, (false ? _GLF_FUZZED(workgroup_base) : _GLF_IDENTITY(subgroup_local_id + 1, (false ? _GLF_FUZZED(workgroup_id) : _GLF_IDENTITY(subgroup_local_id + 1, uint(uint(subgroup_local_id + _GLF_IDENTITY(1, (1) | (1))))))))))))) % subgroup_size);
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))).y, _GLF_IDENTITY(float(mat2x4(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))).y, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0)), (true ? float(mat2x4(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))).y, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0)) : _GLF_FUZZED(0.0))))))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(false, (false) || false) || (false))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(_GLF_IDENTITY(true, bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec4(true, false, true, true)), bool(_GLF_IDENTITY(bool(bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(true, true && (true)), false, true, false)), (bool(bvec4(_GLF_IDENTITY(true, true && (true)), false, true, false))) || false)), (_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(true, (true) && true), true && (true)), false, true, false)), _GLF_IDENTITY((bool(bvec4(_GLF_IDENTITY(true, true && (true)), false, true, false))), ! (! (_GLF_IDENTITY((bool(bvec4(_GLF_IDENTITY(true, true && (true)), false, true, false))), bool(bvec3((bool(bvec4(_GLF_IDENTITY(true, true && (true)), false, true, false))), true, true)))))) || false))) || false), false, true, true))), ! (! (bool(bool(bvec4(true, false, true, true))))))))), false || (true)), _GLF_IDENTITY(true, (true) || _GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), (false) && true)), _GLF_TRUE(true, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)), clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch))) / vec2(1.0, 1.0)), injectionSwitch)).x < injectionSwitch.y), _GLF_IDENTITY(((_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) / vec2(1.0, _GLF_IDENTITY(1.0, float(mat4x2(_GLF_IDENTITY(1.0, float(mat3x2(1.0, 0.0, 0.0, 1.0, 0.0, 1.0))), sin(0.0), 1.0, 0.0, 0.0, 1.0, cos(0.0), 1.0)))), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(vec2(774.572, -22.11)) : _GLF_IDENTITY((injectionSwitch) / vec2(1.0, _GLF_IDENTITY(1.0, float(mat4x2(_GLF_IDENTITY(1.0, float(mat3x2(1.0, 0.0, 0.0, 1.0, 0.0, 1.0))), sin(0.0), 1.0, 0.0, 0.0, 1.0, cos(0.0), 1.0)))), max((injectionSwitch) / vec2(1.0, _GLF_IDENTITY(1.0, float(mat4x2(_GLF_IDENTITY(1.0, float(mat3x2(1.0, 0.0, 0.0, 1.0, 0.0, 1.0))), sin(0.0), 1.0, 0.0, 0.0, 1.0, cos(0.0), 1.0)))), (injectionSwitch) / vec2(1.0, _GLF_IDENTITY(1.0, float(mat4x2(_GLF_IDENTITY(1.0, float(mat3x2(1.0, 0.0, 0.0, 1.0, 0.0, 1.0))), sin(0.0), 1.0, 0.0, 0.0, 1.0, cos(0.0), 1.0))))))))), injectionSwitch)).x < _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], mix(float(injectionSwitch[1]), _GLF_IDENTITY(float(_GLF_FUZZED(-86.62)), mix(float(float(_GLF_FUZZED(-86.62))), float(_GLF_FUZZED(7.8)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), bool(false)))), _GLF_IDENTITY(mat2(1.0) * (vec2(injectionSwitch[0], _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), max((injectionSwitch) * mat2(1.0), (injectionSwitch) * mat2(1.0))))[1], mix(_GLF_IDENTITY(float(injectionSwitch[1]), (false ? _GLF_FUZZED(-290.914) : float(injectionSwitch[1]))), float(_GLF_FUZZED(-86.62)), bool(false))))), min(mat2(1.0) * (vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], mix(float(injectionSwitch[1]), float(_GLF_FUZZED(-86.62)), bool(_GLF_IDENTITY(false, bool(bvec4(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)))))))), mat2(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(((50.15 + 1980.8533) * 8.1))), float(1.0), bool(true)))) * (vec2(injectionSwitch[_GLF_IDENTITY(0, (_GLF_IDENTITY(0, ~ (~ (0)))) - 0)], _GLF_IDENTITY(injectionSwitch[1], mix(float(injectionSwitch[1]), float(_GLF_FUZZED(_GLF_IDENTITY(-86.62, min(_GLF_IDENTITY(-86.62, min(_GLF_IDENTITY(-86.62, min(-86.62, -86.62)), -86.62)), -86.62)))), bool(false))))))))).y)) && true, _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(((_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, _GLF_IDENTITY(1.0, float(mat4x2(_GLF_IDENTITY(1.0, float(mat3x2(1.0, 0.0, 0.0, 1.0, 0.0, 1.0))), sin(0.0), 1.0, 0.0, 0.0, 1.0, cos(0.0), 1.0))))), injectionSwitch)).x < _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(-5.5, 39.10)) : injectionSwitch))[0], _GLF_IDENTITY(injectionSwitch[1], mix(float(injectionSwitch[1]), _GLF_IDENTITY(float(_GLF_FUZZED(-86.62)), mix(float(float(_GLF_FUZZED(-86.62))), float(_GLF_FUZZED(7.8)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), bool(false)))), _GLF_IDENTITY(mat2(1.0) * (vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], _GLF_IDENTITY(mix(float(injectionSwitch[1]), float(_GLF_FUZZED(-86.62)), bool(false)), (_GLF_IDENTITY(mix(float(injectionSwitch[1]), float(_GLF_FUZZED(-86.62)), bool(false)), float(mat3x4(mix(float(injectionSwitch[1]), float(_GLF_FUZZED(-86.62)), bool(false)), determinant(mat2(0.0, 1.0, 0.0, 0.0)), 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0)))) / 1.0)))), min(mat2(1.0) * (vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], mix(float(injectionSwitch[1]), float(_GLF_FUZZED(-86.62)), bool(_GLF_IDENTITY(false, bool(bvec4(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)))))))), mat2(1.0) * (_GLF_IDENTITY(vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], mix(float(injectionSwitch[1]), float(_GLF_FUZZED(_GLF_IDENTITY(_GLF_IDENTITY(-86.62, clamp(_GLF_IDENTITY(-86.62, min(-86.62, _GLF_IDENTITY(-86.62, (false ? _GLF_FUZZED(-320.541) : -86.62)))), _GLF_IDENTITY(-86.62, _GLF_IDENTITY(float(mat3x2(-86.62, 0.0, 0.0, 1.0, exp(0.0), 0.0)), (true ? float(mat3x2(-86.62, 0.0, 0.0, 1.0, exp(0.0), 0.0)) : _GLF_FUZZED(2033.9786)))), -86.62)), min(_GLF_IDENTITY(_GLF_IDENTITY(-86.62, max(_GLF_IDENTITY(-86.62, min(-86.62, -86.62)), -86.62)), min(_GLF_IDENTITY(-86.62, min(-86.62, -86.62)), -86.62)), -86.62)))), bool(false)))), min(vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], mix(float(injectionSwitch[1]), float(_GLF_FUZZED(_GLF_IDENTITY(_GLF_IDENTITY(-86.62, clamp(_GLF_IDENTITY(-86.62, min(-86.62, _GLF_IDENTITY(-86.62, (false ? _GLF_FUZZED(-320.541) : -86.62)))), _GLF_IDENTITY(-86.62, _GLF_IDENTITY(float(mat3x2(-86.62, 0.0, 0.0, 1.0, exp(0.0), 0.0)), (true ? float(mat3x2(-86.62, 0.0, 0.0, 1.0, exp(0.0), 0.0)) : _GLF_FUZZED(2033.9786)))), -86.62)), min(_GLF_IDENTITY(_GLF_IDENTITY(-86.62, max(_GLF_IDENTITY(-86.62, min(-86.62, -86.62)), -86.62)), min(_GLF_IDENTITY(-86.62, min(-86.62, -86.62)), -86.62)), -86.62)))), bool(false)))), _GLF_IDENTITY(vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], mix(float(injectionSwitch[1]), float(_GLF_FUZZED(_GLF_IDENTITY(_GLF_IDENTITY(-86.62, clamp(_GLF_IDENTITY(-86.62, min(-86.62, _GLF_IDENTITY(-86.62, (false ? _GLF_FUZZED(-320.541) : -86.62)))), _GLF_IDENTITY(-86.62, _GLF_IDENTITY(float(mat3x2(-86.62, 0.0, 0.0, 1.0, exp(0.0), 0.0)), (true ? float(mat3x2(-86.62, 0.0, 0.0, 1.0, exp(0.0), 0.0)) : _GLF_FUZZED(2033.9786)))), -86.62)), min(_GLF_IDENTITY(_GLF_IDENTITY(-86.62, max(_GLF_IDENTITY(-86.62, min(-86.62, -86.62)), -86.62)), min(_GLF_IDENTITY(-86.62, min(-86.62, -86.62)), -86.62)), -86.62)))), bool(false)))), (vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], mix(float(injectionSwitch[1]), float(_GLF_FUZZED(_GLF_IDENTITY(_GLF_IDENTITY(-86.62, clamp(_GLF_IDENTITY(-86.62, min(-86.62, _GLF_IDENTITY(-86.62, (false ? _GLF_FUZZED(-320.541) : -86.62)))), _GLF_IDENTITY(-86.62, _GLF_IDENTITY(float(mat3x2(-86.62, 0.0, 0.0, 1.0, exp(0.0), 0.0)), (true ? float(mat3x2(-86.62, 0.0, 0.0, 1.0, exp(0.0), 0.0)) : _GLF_FUZZED(2033.9786)))), -86.62)), min(_GLF_IDENTITY(_GLF_IDENTITY(-86.62, max(_GLF_IDENTITY(-86.62, min(-86.62, -86.62)), -86.62)), min(_GLF_IDENTITY(-86.62, min(-86.62, -86.62)), -86.62)), -86.62)))), bool(false))))) - vec2(0.0, 0.0))))))))).y)) && true), true && (bool(((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, _GLF_IDENTITY(1.0, float(mat4x2(_GLF_IDENTITY(1.0, float(mat3x2(1.0, 0.0, 0.0, 1.0, 0.0, 1.0))), sin(0.0), 1.0, 0.0, 0.0, 1.0, cos(0.0), 1.0))))), injectionSwitch)), (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(_GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, max(1.0, 1.0)), _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), 1.0)), _GLF_IDENTITY(1.0, float(mat4x2(_GLF_IDENTITY(1.0, float(mat3x2(1.0, 0.0, 0.0, 1.0, 0.0, 1.0))), sin(0.0), 1.0, 0.0, 0.0, 1.0, cos(0.0), 1.0))))), injectionSwitch))) - vec2(0.0, 0.0)).x < _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], mix(float(injectionSwitch[1]), _GLF_IDENTITY(float(_GLF_FUZZED(-86.62)), mix(float(float(_GLF_FUZZED(-86.62))), float(_GLF_FUZZED(7.8)), _GLF_IDENTITY(bool(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec4(false, true, _GLF_IDENTITY(false, true && (false)), true))), (injectionSwitch.x > injectionSwitch.y))), false || (bool(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec4(false, true, _GLF_IDENTITY(false, true && (false)), true))), (injectionSwitch.x > injectionSwitch.y))))))), bool(false)))), max(vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], mix(float(injectionSwitch[1]), _GLF_IDENTITY(float(_GLF_FUZZED(-86.62)), mix(float(float(_GLF_FUZZED(-86.62))), float(_GLF_FUZZED(7.8)), _GLF_IDENTITY(bool(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec4(false, true, _GLF_IDENTITY(false, true && (false)), true))), (injectionSwitch.x > injectionSwitch.y))), false || (bool(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec4(false, true, _GLF_IDENTITY(false, true && (false)), true))), (injectionSwitch.x > injectionSwitch.y))))))), bool(false)))), _GLF_IDENTITY(vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], mix(float(injectionSwitch[1]), _GLF_IDENTITY(float(_GLF_FUZZED(-86.62)), mix(float(float(_GLF_FUZZED(-86.62))), float(_GLF_FUZZED(7.8)), _GLF_IDENTITY(bool(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec4(false, true, _GLF_IDENTITY(false, true && (false)), true))), (injectionSwitch.x > injectionSwitch.y))), false || (bool(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec4(false, true, _GLF_IDENTITY(false, true && (false)), true))), (injectionSwitch.x > injectionSwitch.y))))))), bool(false)))), (vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], mix(float(injectionSwitch[1]), _GLF_IDENTITY(float(_GLF_FUZZED(-86.62)), mix(float(float(_GLF_FUZZED(-86.62))), float(_GLF_FUZZED(7.8)), _GLF_IDENTITY(bool(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec4(false, true, _GLF_IDENTITY(false, true && (false)), true))), (injectionSwitch.x > injectionSwitch.y))), false || (bool(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec4(false, true, _GLF_IDENTITY(false, true && (false)), true))), (injectionSwitch.x > injectionSwitch.y))))))), bool(false))))) / cos(vec2(0.0, 0.0))))), _GLF_IDENTITY(_GLF_IDENTITY(mat2(1.0) * (vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], mix(float(injectionSwitch[1]), float(_GLF_FUZZED(-86.62)), bool(false))))), min(mat2(1.0) * (vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], mix(float(injectionSwitch[1]), float(_GLF_FUZZED(-86.62)), bool(_GLF_IDENTITY(false, bool(bvec4(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)))))))), mat2(1.0) * (vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], mix(float(injectionSwitch[1]), float(_GLF_FUZZED(_GLF_IDENTITY(-86.62, min(_GLF_IDENTITY(-86.62, min(_GLF_IDENTITY(-86.62, min(-86.62, -86.62)), -86.62)), -86.62)))), bool(false))))))), mix(vec2(_GLF_FUZZED(-9.3), (_GLF_IDENTITY(mat2(1.0) * (vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], mix(float(injectionSwitch[1]), float(_GLF_FUZZED(-86.62)), bool(false))))), min(mat2(1.0) * (vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], mix(float(injectionSwitch[1]), float(_GLF_FUZZED(-86.62)), bool(_GLF_IDENTITY(false, bool(bvec4(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)))))))), mat2(1.0) * (vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], mix(float(injectionSwitch[1]), float(_GLF_FUZZED(_GLF_IDENTITY(-86.62, min(_GLF_IDENTITY(-86.62, min(_GLF_IDENTITY(-86.62, min(-86.62, -86.62)), -86.62)), -86.62)))), bool(false))))))))[1]), vec2((_GLF_IDENTITY(mat2(1.0) * (vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], mix(float(injectionSwitch[1]), float(_GLF_FUZZED(-86.62)), bool(false))))), min(mat2(1.0) * (vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], mix(float(injectionSwitch[1]), float(_GLF_FUZZED(-86.62)), bool(_GLF_IDENTITY(false, bool(bvec4(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)))))))), mat2(1.0) * (vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], mix(float(injectionSwitch[1]), float(_GLF_FUZZED(_GLF_IDENTITY(-86.62, min(_GLF_IDENTITY(-86.62, min(_GLF_IDENTITY(-86.62, min(-86.62, -86.62)), -86.62)), -86.62)))), bool(false))))))))[0], _GLF_FUZZED(-497.937)), bvec2(true, false))))).y)) && _GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), bool(bvec4(! (true), true, false, true))))))))), ! _GLF_IDENTITY((! (bool(_GLF_IDENTITY(bool(((_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, _GLF_IDENTITY(1.0, float(mat4x2(_GLF_IDENTITY(1.0, float(mat3x2(1.0, 0.0, 0.0, 1.0, 0.0, 1.0))), sin(0.0), 1.0, 0.0, 0.0, 1.0, cos(0.0), 1.0))))), injectionSwitch)).x < _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], mix(float(injectionSwitch[1]), _GLF_IDENTITY(float(_GLF_FUZZED(-86.62)), mix(float(float(_GLF_FUZZED(-86.62))), float(_GLF_FUZZED(7.8)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), bool(false)))), _GLF_IDENTITY(mat2(1.0) * (vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], mix(float(injectionSwitch[1]), float(_GLF_FUZZED(-86.62)), bool(false))))), min(mat2(1.0) * (vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], mix(float(injectionSwitch[1]), float(_GLF_FUZZED(-86.62)), bool(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)), bool(bvec4(bool(bvec4(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)), false, false, false))))))))), mat2(1.0) * (vec2(injectionSwitch[_GLF_IDENTITY(0, min(0, _GLF_IDENTITY(0, ~ (~ (0)))))], _GLF_IDENTITY(injectionSwitch[1], mix(float(injectionSwitch[1]), float(_GLF_FUZZED(_GLF_IDENTITY(-86.62, min(_GLF_IDENTITY(-86.62, min(_GLF_IDENTITY(-86.62, min(_GLF_IDENTITY(-86.62, (-86.62) / 1.0), -86.62)), -86.62)), -86.62)))), bool(false))))))))).y)) && true), true && (bool(((_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, _GLF_IDENTITY(1.0, float(mat4x2(_GLF_IDENTITY(1.0, float(mat3x2(1.0, 0.0, 0.0, 1.0, 0.0, 1.0))), sin(0.0), 1.0, 0.0, 0.0, 1.0, cos(0.0), 1.0))))), injectionSwitch)).x < _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], mix(float(injectionSwitch[1]), _GLF_IDENTITY(float(_GLF_FUZZED(-86.62)), mix(float(float(_GLF_FUZZED(-86.62))), float(_GLF_FUZZED(7.8)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), bool(false)))), _GLF_IDENTITY(mat2(1.0) * (vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], mix(float(injectionSwitch[1]), float(_GLF_FUZZED(-86.62)), bool(false))))), min(mat2(1.0) * (vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], mix(float(injectionSwitch[1]), float(_GLF_FUZZED(-86.62)), bool(_GLF_IDENTITY(false, bool(bvec4(false, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)).x < injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)))))))), mat2(1.0) * (vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], mix(float(injectionSwitch[1]), float(_GLF_FUZZED(_GLF_IDENTITY(-86.62, min(_GLF_IDENTITY(-86.62, min(_GLF_IDENTITY(-86.62, min(-86.62, -86.62)), -86.62)), -86.62)))), bool(false))))))))).y)) && true)))))), ! (_GLF_IDENTITY(! ((! (bool(_GLF_IDENTITY(bool(((_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, _GLF_IDENTITY(1.0, float(mat4x2(_GLF_IDENTITY(1.0, float(mat3x2(1.0, 0.0, 0.0, 1.0, 0.0, 1.0))), sin(0.0), 1.0, 0.0, 0.0, 1.0, cos(0.0), 1.0))))), injectionSwitch)).x < _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], mix(float(injectionSwitch[1]), _GLF_IDENTITY(float(_GLF_FUZZED(-86.62)), mix(float(float(_GLF_FUZZED(-86.62))), float(_GLF_FUZZED(7.8)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), bool(false)))), _GLF_IDENTITY(mat2(1.0) * (vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], mix(float(injectionSwitch[1]), float(_GLF_FUZZED(-86.62)), bool(false))))), min(mat2(1.0) * (vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], mix(float(injectionSwitch[1]), float(_GLF_FUZZED(-86.62)), bool(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)), bool(bvec4(bool(bvec4(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)), false, false, false))))))))), mat2(1.0) * (vec2(injectionSwitch[_GLF_IDENTITY(0, min(0, _GLF_IDENTITY(0, ~ (~ (0)))))], _GLF_IDENTITY(injectionSwitch[1], mix(float(injectionSwitch[1]), float(_GLF_FUZZED(_GLF_IDENTITY(-86.62, min(_GLF_IDENTITY(-86.62, min(_GLF_IDENTITY(-86.62, min(_GLF_IDENTITY(-86.62, (-86.62) / 1.0), -86.62)), -86.62)), -86.62)))), bool(false))))))))).y)) && true), true && (bool(((_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, _GLF_IDENTITY(1.0, float(mat4x2(_GLF_IDENTITY(1.0, float(mat3x2(1.0, 0.0, 0.0, 1.0, 0.0, 1.0))), sin(0.0), 1.0, 0.0, 0.0, 1.0, cos(0.0), 1.0))))), injectionSwitch)).x < _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], mix(float(injectionSwitch[1]), _GLF_IDENTITY(float(_GLF_FUZZED(-86.62)), mix(float(float(_GLF_FUZZED(-86.62))), float(_GLF_FUZZED(7.8)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), bool(false)))), _GLF_IDENTITY(mat2(1.0) * (vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], mix(float(injectionSwitch[1]), float(_GLF_FUZZED(-86.62)), bool(false))))), min(mat2(1.0) * (vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], mix(float(injectionSwitch[1]), float(_GLF_FUZZED(-86.62)), bool(_GLF_IDENTITY(false, bool(bvec4(false, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)).x < injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)))))))), mat2(1.0) * (vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], mix(float(injectionSwitch[1]), float(_GLF_FUZZED(_GLF_IDENTITY(-86.62, min(_GLF_IDENTITY(-86.62, min(_GLF_IDENTITY(-86.62, min(-86.62, -86.62)), -86.62)), -86.62)))), bool(false))))))))).y)) && true))))))), false || (! ((! (bool(_GLF_IDENTITY(bool(((_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, _GLF_IDENTITY(1.0, float(mat4x2(_GLF_IDENTITY(1.0, float(mat3x2(1.0, 0.0, 0.0, 1.0, 0.0, 1.0))), sin(0.0), 1.0, 0.0, 0.0, 1.0, cos(0.0), 1.0))))), injectionSwitch)).x < _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], mix(float(injectionSwitch[1]), _GLF_IDENTITY(float(_GLF_FUZZED(-86.62)), mix(float(float(_GLF_FUZZED(-86.62))), float(_GLF_FUZZED(7.8)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), bool(false)))), _GLF_IDENTITY(mat2(1.0) * (vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], mix(float(injectionSwitch[1]), float(_GLF_FUZZED(-86.62)), bool(false))))), min(mat2(1.0) * (vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], mix(float(injectionSwitch[1]), float(_GLF_FUZZED(-86.62)), bool(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)), bool(bvec4(bool(bvec4(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)), false, false, false))))))))), mat2(1.0) * (vec2(injectionSwitch[_GLF_IDENTITY(0, min(0, _GLF_IDENTITY(0, ~ (~ (0)))))], _GLF_IDENTITY(injectionSwitch[1], mix(float(injectionSwitch[1]), float(_GLF_FUZZED(_GLF_IDENTITY(-86.62, min(_GLF_IDENTITY(-86.62, min(_GLF_IDENTITY(-86.62, min(_GLF_IDENTITY(-86.62, (-86.62) / 1.0), -86.62)), -86.62)), -86.62)))), bool(false))))))))).y)) && true), true && (bool(((_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, _GLF_IDENTITY(1.0, float(mat4x2(_GLF_IDENTITY(1.0, float(mat3x2(1.0, 0.0, 0.0, 1.0, 0.0, 1.0))), sin(0.0), 1.0, 0.0, 0.0, 1.0, cos(0.0), 1.0))))), injectionSwitch)).x < _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], mix(float(injectionSwitch[1]), _GLF_IDENTITY(float(_GLF_FUZZED(-86.62)), mix(float(float(_GLF_FUZZED(-86.62))), float(_GLF_FUZZED(7.8)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), bool(false)))), _GLF_IDENTITY(mat2(1.0) * (vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], mix(float(injectionSwitch[1]), float(_GLF_FUZZED(-86.62)), bool(false))))), min(mat2(1.0) * (vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], mix(float(injectionSwitch[1]), float(_GLF_FUZZED(-86.62)), bool(_GLF_IDENTITY(false, bool(bvec4(false, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)).x < injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)))))))), mat2(1.0) * (vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], mix(float(injectionSwitch[1]), float(_GLF_FUZZED(_GLF_IDENTITY(-86.62, min(_GLF_IDENTITY(-86.62, min(_GLF_IDENTITY(-86.62, min(-86.62, -86.62)), -86.62)), -86.62)))), bool(false))))))))).y)) && true))))))))))))))), false))), _GLF_IDENTITY((injectionSwitch.x < _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), vec2(_GLF_IDENTITY(injectionSwitch[0], min(injectionSwitch[0], injectionSwitch[0])), injectionSwitch[1])).y), bool(bvec4((injectionSwitch.x < injectionSwitch.y), true, false, false))))))
  {
   if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || false), ! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bool((injectionSwitch.x > injectionSwitch.y))))))), false || (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), (_GLF_IDENTITY(! (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x))) / abs(1.0)) > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(48.65), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(7.6)), bvec2(true, false))).y)))), false || (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)).y))))))) || false), bool(bvec2(_GLF_IDENTITY(! (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y)), true, false), bvec3(bvec4(bvec3(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y)), true, false), true))))))), ! (! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, sqrt(1.0) * (injectionSwitch.y)), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))), true && (injectionSwitch.x > injectionSwitch.y)), true, false), bvec3(bvec4(bvec3(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y)), true, false), true)))))))))))), false || _GLF_IDENTITY((! (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > injectionSwitch.y))))), bool(bvec2((! (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], max(injectionSwitch[0], injectionSwitch[0])), injectionSwitch[1])))), mix(vec2((_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))[0], _GLF_FUZZED(7.2)), vec2(_GLF_FUZZED(-9.2), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), clamp(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), min(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))))))[1]), bvec2(false, true))).x > injectionSwitch.y))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   atomicStore(buf[next_virtual_gid], uint(1), 4, 64, 4);
  }
 else
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((false), ! (! ((false)))))))) || false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
  }
 if(_GLF_DEAD(false))
  barrier();
 uint read_1 = atomicLoad(_GLF_IDENTITY(buf[_GLF_IDENTITY(virtual_gid, 0u ^ (virtual_gid))], (buf[_GLF_IDENTITY(virtual_gid, 0u ^ (virtual_gid))]) - 0u), 4, _GLF_IDENTITY(64, max(64, _GLF_IDENTITY(64, (64) ^ _GLF_IDENTITY(0, (false ? _GLF_FUZZED(_GLF_IDENTITY(-21010, 1 * (_GLF_IDENTITY(-21010, (-21010) | (-21010))))) : 0))))), 0);
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))), bool(bvec2(_GLF_DEAD(false), false))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-788.365), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(3.8)), bvec2(true, false))), (injectionSwitch) * vec2(1.0, 1.0)).x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0)), false || (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)).x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0)), _GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) || false)) && true) || ((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)).x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0), mix(float(_GLF_FUZZED(7248.0908)), float(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0)), bool(true))))))))) || (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false)), _GLF_IDENTITY(bool(bvec2(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false)), true)), false || (bool(bvec2(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false)), true))))), ! (_GLF_IDENTITY(! (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / abs(vec2(1.0, 1.0))).y)) || false))), bool(_GLF_IDENTITY(bvec3(! (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec3((injectionSwitch.x > injectionSwitch.y), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))) || false))), true, true), bvec3(bvec4(bvec3(! (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false))), true, true), true)))))))), bool(bvec3(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))) - _GLF_IDENTITY(dot(vec3(1.0, 1.0, 0.0), vec3(_GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, 1.0), vec4(1.0, 1.0, 0.0, 0.0)), dot(vec4(0.0, 0.0, 1.0, 1.0), vec4(1.0, 1.0, 0.0, 0.0))), 0.0, 1.0)), dot(vec3(1.0, 1.0, 0.0), vec3(_GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, 1.0), vec4(1.0, 1.0, 0.0, 0.0)), dot(vec4(0.0, 0.0, 1.0, 1.0), vec4(1.0, 1.0, 0.0, 0.0))), 0.0, 1.0)))))) || (_GLF_FALSE(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, _GLF_IDENTITY((false) && true, ((false) && true) && true))) && true), _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false)), true && (! (_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat2x3(injectionSwitch, round(length(normalize(exp(vec2(0.0, 0.0))))), round(length(normalize(vec2(1.0, _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(4748.9622)), float(1.0), bool(true))))))), 1.0, 1.0)), _GLF_IDENTITY(vec2(mat3x2(vec2(mat2x3(injectionSwitch, round(length(normalize(exp(vec2(0.0, 0.0))))), round(length(normalize(vec2(1.0, 1.0)))), 1.0, 1.0)), 1.0, 1.0, 1.0, 1.0)), vec2(_GLF_IDENTITY(mat4x2(_GLF_IDENTITY(vec2(mat3x2(vec2(mat2x3(injectionSwitch, round(length(normalize(exp(vec2(0.0, 0.0))))), round(length(normalize(vec2(1.0, 1.0)))), 1.0, 1.0)), 1.0, 1.0, 1.0, 1.0)), (vec2(mat3x2(vec2(mat2x3(injectionSwitch, round(length(normalize(exp(vec2(0.0, 0.0))))), round(length(normalize(vec2(1.0, 1.0)))), 1.0, 1.0)), 1.0, 1.0, 1.0, 1.0))) * mat2(1.0)), 1.0, 0.0, 1.0, 1.0, 1.0, 1.0), _GLF_IDENTITY(mat4x2(_GLF_IDENTITY(mat4(mat4x2(_GLF_IDENTITY(vec2(mat3x2(vec2(mat2x3(injectionSwitch, round(length(normalize(exp(vec2(0.0, 0.0))))), round(length(normalize(vec2(1.0, 1.0)))), 1.0, 1.0)), 1.0, 1.0, 1.0, 1.0)), (vec2(mat3x2(vec2(mat2x3(injectionSwitch, round(length(normalize(exp(vec2(0.0, 0.0))))), round(length(normalize(vec2(1.0, 1.0)))), 1.0, 1.0)), 1.0, 1.0, 1.0, 1.0))) * mat2(1.0)), 1.0, 0.0, 1.0, 1.0, 1.0, 1.0)), transpose(transpose(mat4(mat4x2(_GLF_IDENTITY(vec2(mat3x2(vec2(mat2x3(injectionSwitch, round(length(normalize(exp(vec2(0.0, 0.0))))), round(length(normalize(vec2(1.0, 1.0)))), 1.0, 1.0)), 1.0, 1.0, 1.0, 1.0)), (vec2(mat3x2(vec2(mat2x3(injectionSwitch, round(length(normalize(exp(vec2(0.0, 0.0))))), round(length(normalize(vec2(1.0, 1.0)))), 1.0, 1.0)), 1.0, 1.0, 1.0, 1.0))) * mat2(1.0)), 1.0, 0.0, 1.0, 1.0, 1.0, 1.0)))))), transpose(transpose(mat4x2(_GLF_IDENTITY(mat4(mat4x2(_GLF_IDENTITY(vec2(mat3x2(vec2(mat2x3(injectionSwitch, round(length(normalize(exp(vec2(0.0, 0.0))))), round(length(normalize(vec2(1.0, 1.0)))), 1.0, 1.0)), 1.0, 1.0, 1.0, 1.0)), (vec2(mat3x2(vec2(mat2x3(injectionSwitch, round(length(normalize(exp(vec2(0.0, 0.0))))), round(length(normalize(vec2(1.0, 1.0)))), 1.0, 1.0)), 1.0, 1.0, 1.0, 1.0))) * mat2(1.0)), 1.0, 0.0, 1.0, 1.0, 1.0, 1.0)), transpose(transpose(mat4(mat4x2(_GLF_IDENTITY(vec2(mat3x2(vec2(mat2x3(injectionSwitch, round(length(normalize(exp(vec2(0.0, 0.0))))), round(length(normalize(vec2(1.0, 1.0)))), 1.0, 1.0)), 1.0, 1.0, 1.0, 1.0)), (vec2(mat3x2(vec2(mat2x3(injectionSwitch, round(length(normalize(exp(vec2(0.0, 0.0))))), round(length(normalize(vec2(1.0, 1.0)))), 1.0, 1.0)), 1.0, 1.0, 1.0, 1.0))) * mat2(1.0)), 1.0, 0.0, 1.0, 1.0, 1.0, 1.0)))))))))))))).y), ((injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-1.6), (injectionSwitch)[1]), vec2(_GLF_IDENTITY((injectionSwitch)[0], clamp((injectionSwitch)[0], (injectionSwitch)[0], (injectionSwitch)[0])), _GLF_FUZZED(7366.5845)), bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))).y, clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, 0.0 + (injectionSwitch.y)), injectionSwitch.y)))) || false)))))))), false || (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false))), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || _GLF_IDENTITY((_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), ! (! (((injectionSwitch.x > injectionSwitch.y))))) || false)), ! (! (_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(injectionSwitch.x > injectionSwitch.y, false)))), true && ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(injectionSwitch.x > injectionSwitch.y, false))))))))), _GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)) || false, ! (_GLF_IDENTITY(! (((injectionSwitch.x > injectionSwitch.y)) || false), bool(bvec3(_GLF_IDENTITY(! (((injectionSwitch.x > injectionSwitch.y)) || false), false || (! (((injectionSwitch.x > injectionSwitch.y)) || false))), true, true))))))))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), ! (! (((injectionSwitch.x > injectionSwitch.y))))) || false)), ! (! (_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + log(vec2(1.0, 1.0))), injectionSwitch)).y, ! (! _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(injectionSwitch.x > injectionSwitch.y, false)))), true && _GLF_IDENTITY(((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(injectionSwitch.x > injectionSwitch.y, false))))), true && (((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(injectionSwitch.x > injectionSwitch.y, false))))))))))), ((injectionSwitch.x > injectionSwitch.y)) || false)))))), ((_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))))), ! (! (((injectionSwitch.x > injectionSwitch.y))))) || false)), ! (! (_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(injectionSwitch.x > injectionSwitch.y, false)))), true && ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(injectionSwitch.x > injectionSwitch.y, false))))))))), ((injectionSwitch.x > injectionSwitch.y)) || false))))))) && true))))))), false, true)))), bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0))) || (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false))), bool(bvec3(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_FALSE(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) && true)) && true), _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false), ! (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false)))))), false || (_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch)[1], min((injectionSwitch)[1], (injectionSwitch)[1]))), vec2(_GLF_FUZZED((9.9 + 12.64)), _GLF_FUZZED(-7.2)), bvec2(false, false))).x > injectionSwitch.y)) || (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)), injectionSwitch)).y)) || false))), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false)), ! (! (_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(injectionSwitch.x > injectionSwitch.y, false))))))), ((injectionSwitch.x > injectionSwitch.y)) || false)))))))))), false, true))), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0))) || (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false))), bool(bvec3(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), false || (! (false))))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y)) || (_GLF_FALSE(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) && true)) && true), _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false), ! (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((_GLF_IDENTITY(injectionSwitch.x, float(_GLF_IDENTITY(mat3x4(injectionSwitch.x, 1.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0), (mat3x4(injectionSwitch.x, 1.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0)) * mat3(1.0)))) > injectionSwitch.y)) || false)))))), false || (_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch)[1], _GLF_IDENTITY(min((injectionSwitch)[1], (injectionSwitch)[1]), (min((injectionSwitch)[1], (injectionSwitch)[1])) * 1.0))), vec2(_GLF_FUZZED((9.9 + 12.64)), _GLF_FUZZED(-7.2)), bvec2(false, false))).x > injectionSwitch.y)) || (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x, (false ? _GLF_FUZZED(-186.636) : _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x)) > _GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)), injectionSwitch)).y)) || false))), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false)), ! (! (_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(injectionSwitch.x > injectionSwitch.y, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true))), false))))))), ((injectionSwitch.x > injectionSwitch.y)) || false)))))))))), false, true))))))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > injectionSwitch.y)), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) && _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / cos(abs(vec2(0.0, 0.0)))).y))), _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0))) || (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false))), bool(bvec3(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_FALSE(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) && true)) && true), _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false))), false || _GLF_IDENTITY((_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true))) || (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false))), false || (_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec3(false, false, true))), (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), ! (! (! ((injectionSwitch.x > injectionSwitch.y)))))))) || false)), ! (! _GLF_IDENTITY((_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).y, true && (injectionSwitch.x > injectionSwitch.y)), false))))))), ((injectionSwitch.x > injectionSwitch.y)) || false))), bool(bvec2((_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y)), false))))))), ((injectionSwitch.x > injectionSwitch.y)) || false))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))))), true && ((_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true))) || (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false))), false || (_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec3(false, false, true))), (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), ! (! (! ((injectionSwitch.x > injectionSwitch.y)))))))) || false)), ! (! _GLF_IDENTITY((_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).y, true && (injectionSwitch.x > injectionSwitch.y)), false))))))), ((injectionSwitch.x > injectionSwitch.y)) || false))), bool(bvec2((_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y)), false))))))), ((injectionSwitch.x > injectionSwitch.y)) || false))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))))))))), false, true))))))), _GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, false || (false)))), true, false)))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   barrier();
  }
 atomicStore(buf[_GLF_IDENTITY(next_virtual_gid, 1u * _GLF_IDENTITY((next_virtual_gid), _GLF_IDENTITY(((next_virtual_gid)), (((next_virtual_gid))) | (_GLF_IDENTITY(((next_virtual_gid)), max(((next_virtual_gid)), ((next_virtual_gid)))))) - 0u))], uint(read_1 + _GLF_IDENTITY(_GLF_IDENTITY(1, _GLF_IDENTITY(~ (~ (_GLF_IDENTITY(1, _GLF_IDENTITY(int(ivec2(1, int(_GLF_ONE(1.0, injectionSwitch.y)))), (true ? int(ivec2(1, int(_GLF_ONE(1.0, injectionSwitch.y)))) : _GLF_FUZZED(-37462)))))), clamp(~ (~ (_GLF_IDENTITY(1, _GLF_IDENTITY(int(ivec2(1, int(_GLF_ONE(1.0, injectionSwitch.y)))), (true ? int(ivec2(1, int(_GLF_ONE(1.0, injectionSwitch.y)))) : _GLF_FUZZED(-37462)))))), ~ (~ (_GLF_IDENTITY(1, _GLF_IDENTITY(int(ivec2(1, int(_GLF_ONE(1.0, injectionSwitch.y)))), (true ? int(ivec2(1, int(_GLF_ONE(1.0, injectionSwitch.y)))) : _GLF_FUZZED(-37462)))))), ~ (~ (_GLF_IDENTITY(1, _GLF_IDENTITY(int(ivec2(1, int(_GLF_ONE(1.0, injectionSwitch.y)))), (true ? int(ivec2(1, int(_GLF_ONE(1.0, injectionSwitch.y)))) : _GLF_FUZZED(-37462))))))))), max(1, _GLF_IDENTITY(1, max(1, _GLF_IDENTITY(1, min(1, 1))))))), _GLF_IDENTITY(4, 0 | (_GLF_IDENTITY(4, clamp(4, 4, _GLF_IDENTITY(4, 0 | (4)))))), 64, 4);
}
