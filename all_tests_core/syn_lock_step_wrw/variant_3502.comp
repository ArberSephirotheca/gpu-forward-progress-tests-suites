#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  {
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_DEAD(false)))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     return;
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, 1.0 * (injectionSwitch.y))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), bool(bvec3(_GLF_IDENTITY(false, (false) && true), true, false)))))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    barrier();
   return;
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-0.6)), bool(false))), injectionSwitch.x)) > injectionSwitch.y))), bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! _GLF_IDENTITY((! (_GLF_IDENTITY(bool(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bool(bvec3(bool(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false, false))))), true && ((! (_GLF_IDENTITY(bool(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bool(bvec3(bool(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false, false)))))))), ! (! (_GLF_IDENTITY(bool(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! _GLF_IDENTITY((! _GLF_IDENTITY((_GLF_IDENTITY(bool(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bool(bvec3(bool(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false, false)))), ((_GLF_IDENTITY(bool(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bool(bvec3(bool(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false, false))))) && true)), true && ((! _GLF_IDENTITY((_GLF_IDENTITY(bool(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bool(bvec3(bool(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, bool(bvec4(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))), (injectionSwitch.x > injectionSwitch.y)))), false, false)))), ! (! ((_GLF_IDENTITY(bool(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bool(bvec3(bool(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, bool(bvec4(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))), (injectionSwitch.x > injectionSwitch.y)))), false, false)))))))))))))))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-0.6)), bool(false))), injectionSwitch.x)), (_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-0.6)), bool(false))), injectionSwitch.x))) / 1.0) > injectionSwitch.y))), bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! _GLF_IDENTITY((! (_GLF_IDENTITY(bool(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bool(bvec3(bool(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false, false))))), true && ((! (_GLF_IDENTITY(bool(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bool(bvec3(bool(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false, false)))))))), false || (_GLF_IDENTITY(bool(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! _GLF_IDENTITY((! (_GLF_IDENTITY(bool(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bool(bvec3(bool(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y)))), false, false))))), true && ((! (_GLF_IDENTITY(bool(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bool(bvec3(bool(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y)))), false, false)))))))))), _GLF_IDENTITY(! (! (_GLF_IDENTITY(bool(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! _GLF_IDENTITY((! _GLF_IDENTITY((_GLF_IDENTITY(bool(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bool(bvec3(bool(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false, false)))), ((_GLF_IDENTITY(bool(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bool(bvec3(bool(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false, false))))) && true)), true && ((! _GLF_IDENTITY((_GLF_IDENTITY(bool(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bool(bvec3(bool(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, bool(bvec4(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))), (injectionSwitch.x > injectionSwitch.y)))), false, false)))), ! (! ((_GLF_IDENTITY(bool(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bool(bvec3(bool(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, bool(bvec4(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))), (injectionSwitch.x > injectionSwitch.y)))), false, false))))))))))))), _GLF_IDENTITY(bool(bvec4(! (! (_GLF_IDENTITY(bool(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! _GLF_IDENTITY((! _GLF_IDENTITY((_GLF_IDENTITY(bool(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bool(bvec3(bool(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false, false)))), ((_GLF_IDENTITY(bool(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bool(bvec3(bool(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false, false))))) && true)), true && ((! _GLF_IDENTITY((_GLF_IDENTITY(bool(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bool(bvec3(bool(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, bool(bvec4(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))), (injectionSwitch.x > injectionSwitch.y)))), false, false)))), ! (! ((_GLF_IDENTITY(bool(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bool(bvec3(bool(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, bool(bvec4(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))), (injectionSwitch.x > injectionSwitch.y)))), false, false))))))))))))), false, false, false)), (bool(bvec4(! (! (_GLF_IDENTITY(bool(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! _GLF_IDENTITY((! _GLF_IDENTITY((_GLF_IDENTITY(bool(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bool(bvec3(bool(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false, false)))), ((_GLF_IDENTITY(bool(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bool(bvec3(bool(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false, false))))) && true)), true && ((! _GLF_IDENTITY((_GLF_IDENTITY(bool(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bool(bvec3(bool(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, bool(bvec4(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))), (injectionSwitch.x > injectionSwitch.y)))), false, false)))), ! (! ((_GLF_IDENTITY(bool(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bool(bvec3(bool(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, bool(bvec4(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))), (injectionSwitch.x > injectionSwitch.y)))), false, false))))))))))))), false, false, false))) && true)))))) || false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     return;
    }
   barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), ! _GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_DEAD(false)), _GLF_IDENTITY(bool(bvec4(! (_GLF_DEAD(false)), _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / exp(0.0)))), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))).x < injectionSwitch.y)), true)), bool(bvec2(bool(bvec4(! (_GLF_DEAD(false)), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) < injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)), false))))), ((_GLF_IDENTITY(! (_GLF_DEAD(false)), _GLF_IDENTITY(bool(bvec4(! (_GLF_DEAD(false)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)), bool(bvec2(bool(bvec4(! (_GLF_DEAD(false)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)), false)))))) || false)))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_IDENTITY(_GLF_DEAD(false), bool(_GLF_IDENTITY(bool(_GLF_DEAD(false)), bool(bool(bool(_GLF_DEAD(false))))))))))
      return;
     if(_GLF_DEAD(false))
      return;
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     return;
    }
   return;
  }
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bvec4(injectionSwitch.x > injectionSwitch.y, true, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (_GLF_IDENTITY(! (bool(bvec4(injectionSwitch.x > injectionSwitch.y, true, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), ! (! (! (bool(bvec4(injectionSwitch.x > injectionSwitch.y, true, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         barrier();
        }
       barrier();
      }
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, 1.0 * (injectionSwitch.x)) > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * 1.0) > injectionSwitch.y))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * 1.0) > injectionSwitch.y))), bool(bvec4(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * 1.0) > injectionSwitch.y))), true, true, false)))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
  barrier();
 if(_GLF_DEAD(false))
  return;
 uint num_workgroup = gl_NumWorkGroups.x;
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, false, false)))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         barrier();
        }
       barrier();
      }
     return;
    }
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
    barrier();
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       barrier();
       if(_GLF_DEAD(false))
        return;
      }
     if(_GLF_DEAD(false))
      barrier();
     return;
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     return;
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         return;
        }
       barrier();
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true)))), bool(_GLF_IDENTITY(bvec2(! (_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true)))), true), bvec2(bvec3(bvec2(! (_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true)))), true), false))))))))
      barrier();
     if(_GLF_DEAD(false))
      return;
     barrier();
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          return;
         barrier();
        }
       return;
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), false, false, false)), bool(bvec4(bool(bvec4(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), false, false, false)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, true))))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false))) || false), bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)))))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
           if(_GLF_DEAD(false))
            return;
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           barrier();
          }
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            return;
           if(_GLF_DEAD(false))
            barrier();
           return;
           if(_GLF_DEAD(false))
            return;
          }
         return;
        }
       return;
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     barrier();
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))).y, bool(bvec3(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], min(_GLF_IDENTITY(injectionSwitch[1], min(injectionSwitch[1], injectionSwitch[1])), injectionSwitch[1])))))).y, false, true)))))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
      }
     barrier();
    }
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(4.3)), float(injectionSwitch.x), bool(true))) > injectionSwitch.y), ! (! ((_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(-7079.6996), _GLF_FUZZED(82.17)), bvec2(false, false))).x > injectionSwitch.y)))))), true && (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), true, true, false))))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, _GLF_IDENTITY((false), ! (! (_GLF_IDENTITY((false), ((false)) || false)))) || false)) && true)))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     return;
    }
   if(_GLF_DEAD(false))
    barrier();
  }
 uint workgroup_size = gl_WorkGroupSize.x;
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), bool(bool((! (false)))))), true, true, _GLF_IDENTITY(true, true && (true)))), bool(bvec3(bool(bvec4(_GLF_IDENTITY(false, _GLF_IDENTITY((false) && true, bool(_GLF_IDENTITY(bool((false) && true), ! (_GLF_IDENTITY(! (bool((false) && true)), _GLF_IDENTITY(! (! (! (bool((false) && true)))), ! (_GLF_IDENTITY(! (! (! (! (bool(_GLF_IDENTITY((false), false || ((false))) && true))))), bool(bvec4(! (! (! (! (bool((false) && true))))), false, false, true))))))))))), true, true, true)), true, false))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, false, false)))))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), true && (_GLF_IDENTITY(false, (false) && true)))))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, false)))))
    return;
   barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, false || (false))), bool(bvec4(! (_GLF_IDENTITY(false, false || (false))), true, true, true))))), (_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED((+ _GLF_IDENTITY(-8.4, 1.0 * (-8.4)))) : injectionSwitch.x)) > injectionSwitch.y))), bool(_GLF_IDENTITY(bvec3(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, false || (false)), (_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(false ? _GLF_FUZZED((+ -8.4)) : injectionSwitch.x, max(false ? _GLF_FUZZED((+ -8.4)) : injectionSwitch.x, false ? _GLF_FUZZED((+ -8.4)) : injectionSwitch.x)))) > injectionSwitch.y))), false, true), bvec3(bvec3(bvec3(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, false || (false)), (_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED((+ -8.4)) : _GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)).x)) > injectionSwitch.y))), false, true)))))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     barrier();
    }
   barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
        return;
      }
     return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        return;
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) || false), (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if(_GLF_DEAD(false))
          return;
         return;
         if(_GLF_DEAD(false))
          return;
        }
       barrier();
      }
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)))).y))))
  return;
 uint workgroup_id = _GLF_IDENTITY(gl_WorkGroupID.x, (gl_WorkGroupID.x) + 0u);
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))))))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 uint workgroup_base = workgroup_size * workgroup_id;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y))))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   return;
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, false, true), bvec3(bvec3(bvec3(false, false, true)))))), (false) && true)))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     return;
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
    return;
   return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, ! (! (false))), true, false, false)))))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y) - 0.0)))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), _GLF_IDENTITY(! (! _GLF_IDENTITY((! (false)), false || (_GLF_IDENTITY((! (false)), bool(_GLF_IDENTITY(bool((! (false))), true && (bool((! (false)))))))))), true && (_GLF_IDENTITY(! (! (! (false))), ! (! (! (! (! (false)))))))))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 uint virtual_gid = _GLF_IDENTITY(workgroup_base, (workgroup_base) >> uint(_GLF_ZERO(0.0, injectionSwitch.x))) + _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, (true ? subgroup_id * subgroup_size : _GLF_FUZZED(70994u))), (subgroup_id * subgroup_size) ^ 0u) + subgroup_local_id;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(-1568.2657) : injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat3(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(-60.96, 9954.7244)) : injectionSwitch)), 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0)), clamp(_GLF_IDENTITY(vec2(mat3(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(-60.96, 9954.7244)) : injectionSwitch)), 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0)), max(vec2(mat3(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(-60.96, 9954.7244)) : injectionSwitch)), 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0)), vec2(mat3(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(-60.96, 9954.7244)) : injectionSwitch)), 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0)))), vec2(mat3(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(-60.96, 9954.7244)) : injectionSwitch)), 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0)), vec2(mat3(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(-60.96, 9954.7244)) : injectionSwitch)), 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0))))).y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))), (_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, false || (false))))) || false), (_GLF_IDENTITY(false, false || (false))) || false)))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 uint next_virtual_gid = workgroup_base + _GLF_IDENTITY(subgroup_id, uint(uint(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, uint(uint(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, 0u | (subgroup_id)), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1u, ~ (~ (1u))), min(_GLF_IDENTITY(_GLF_IDENTITY(1u, ~ (~ (1u))), (_GLF_IDENTITY(1u, ~ (~ (1u)))) / 1u), _GLF_IDENTITY(1u, ~ (~ (1u))))), min(_GLF_IDENTITY(_GLF_IDENTITY(1u, ~ (~ (1u))), min(_GLF_IDENTITY(_GLF_IDENTITY(1u, ~ (~ (1u))), min(_GLF_IDENTITY(1u, ~ (~ (1u))), _GLF_IDENTITY(1u, ~ (~ (1u))))), _GLF_IDENTITY(1u, ~ (~ (1u))))), _GLF_IDENTITY(1u, ~ (~ (1u))))) * (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, 0u | (subgroup_id)), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, 0u | (subgroup_id)), (_GLF_IDENTITY(subgroup_id, 0u | (subgroup_id))) | (_GLF_IDENTITY(subgroup_id, 0u | (subgroup_id))))) >> 0u, 0u ^ ((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, 0u | (subgroup_id)), (_GLF_IDENTITY(subgroup_id, 0u | (subgroup_id))) | (_GLF_IDENTITY(subgroup_id, 0u | (subgroup_id))))) >> 0u)))))))), (_GLF_IDENTITY(subgroup_id, uint(uint(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, 0u | (subgroup_id)), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1u, ~ (~ (1u))), min(_GLF_IDENTITY(_GLF_IDENTITY(1u, ~ (~ (1u))), (_GLF_IDENTITY(1u, ~ (~ (1u)))) / 1u), _GLF_IDENTITY(1u, ~ (~ (1u))))), min(_GLF_IDENTITY(_GLF_IDENTITY(1u, ~ (~ (1u))), min(_GLF_IDENTITY(_GLF_IDENTITY(1u, ~ (~ (1u))), min(_GLF_IDENTITY(1u, ~ (~ (1u))), _GLF_IDENTITY(1u, ~ (~ (1u))))), _GLF_IDENTITY(1u, ~ (~ (1u))))), _GLF_IDENTITY(1u, ~ (~ (1u))))) * (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, 0u | (subgroup_id)), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, 0u | (subgroup_id)), (_GLF_IDENTITY(subgroup_id, 0u | (subgroup_id))) | (_GLF_IDENTITY(subgroup_id, 0u | (subgroup_id))))) >> 0u, 0u ^ ((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, 0u | (subgroup_id)), (_GLF_IDENTITY(subgroup_id, 0u | (subgroup_id))) | (_GLF_IDENTITY(subgroup_id, 0u | (subgroup_id))))) >> 0u))))))))) >> 0u)))) * _GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(true ? _GLF_IDENTITY(subgroup_size, max(_GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, _GLF_IDENTITY(subgroup_size, 0u | (subgroup_size)))), subgroup_size)) : _GLF_FUZZED(virtual_gid), clamp(true ? _GLF_IDENTITY(subgroup_size, max(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, _GLF_IDENTITY(subgroup_size, 0u | (subgroup_size)))), clamp(_GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, _GLF_IDENTITY(subgroup_size, 0u | (subgroup_size)))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, _GLF_IDENTITY(subgroup_size, 0u | (subgroup_size)))), (_GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, _GLF_IDENTITY(subgroup_size, 0u | (subgroup_size))))) - 0u), ~ (~ (_GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, _GLF_IDENTITY(subgroup_size, 0u | (subgroup_size))))))), _GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, _GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(0u, (0u) | (1u ^ 1u)) | (subgroup_size)))))), subgroup_size)) : _GLF_FUZZED(virtual_gid), true ? _GLF_IDENTITY(subgroup_size, max(_GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, min(subgroup_size, subgroup_size)), 0u | (subgroup_size)))), subgroup_size)) : _GLF_FUZZED(virtual_gid), _GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec2(true, true)), bool(bool(bool(bvec2(true, true)))))) ? _GLF_IDENTITY(subgroup_size, max(_GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, _GLF_IDENTITY(subgroup_size, 0u | _GLF_IDENTITY((subgroup_size), max((subgroup_size), (subgroup_size)))))), subgroup_size)) : _GLF_FUZZED(virtual_gid))))) + _GLF_IDENTITY(_GLF_IDENTITY(((subgroup_local_id + _GLF_IDENTITY(1, int(_GLF_IDENTITY(ivec2(1, 1), _GLF_IDENTITY(~ _GLF_IDENTITY((~ (ivec2(1, 1))), ivec2(ivec4((~ (ivec2(1, 1))), 1, 0))), min(~ _GLF_IDENTITY((~ (ivec2(1, 1))), ivec2(ivec4((~ (ivec2(1, 1))), 1, 0))), ~ _GLF_IDENTITY((~ (ivec2(1, 1))), ivec2(ivec4((~ (ivec2(1, 1))), 1, 0))))))))) % subgroup_size), (false ? _GLF_FUZZED(subgroup_size) : ((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, int(_GLF_IDENTITY(ivec2(1, _GLF_IDENTITY(1, int(int(1)))), ~ _GLF_IDENTITY((_GLF_IDENTITY(~ (ivec2(1, 1)), ~ (~ (~ (ivec2(1, 1)))))), ivec2(ivec4((~ (ivec2(1, 1))), 1, 0)))))), clamp(_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, int(_GLF_IDENTITY(ivec2(1, _GLF_IDENTITY(1, int(int(1)))), ~ _GLF_IDENTITY((_GLF_IDENTITY(~ (ivec2(1, 1)), ~ (~ (~ (ivec2(1, 1)))))), ivec2(ivec4((~ (ivec2(1, 1))), 1, 0)))))), (subgroup_local_id + _GLF_IDENTITY(1, int(_GLF_IDENTITY(ivec2(1, _GLF_IDENTITY(1, int(int(1)))), ~ _GLF_IDENTITY((_GLF_IDENTITY(~ (ivec2(1, 1)), ~ (~ (~ (ivec2(1, 1)))))), ivec2(ivec4((~ (ivec2(1, 1))), 1, 0))))))) | 0u), subgroup_local_id + _GLF_IDENTITY(1, int(_GLF_IDENTITY(ivec2(1, _GLF_IDENTITY(1, int(int(1)))), ~ _GLF_IDENTITY((_GLF_IDENTITY(~ (ivec2(1, 1)), ~ (~ (~ (ivec2(1, 1)))))), ivec2(ivec4((~ (ivec2(1, 1))), 1, 0)))))), subgroup_local_id + _GLF_IDENTITY(1, int(_GLF_IDENTITY(ivec2(1, _GLF_IDENTITY(1, int(int(1)))), ~ _GLF_IDENTITY((_GLF_IDENTITY(~ (ivec2(1, 1)), ~ (~ (~ (ivec2(1, 1)))))), ivec2(ivec4((~ (ivec2(1, 1))), 1, 0)))))))), (_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, int(_GLF_IDENTITY(ivec2(1, _GLF_IDENTITY(1, int(int(1)))), ~ _GLF_IDENTITY((_GLF_IDENTITY(~ (ivec2(1, 1)), ~ (~ (~ (ivec2(1, 1)))))), ivec2(ivec4((~ (ivec2(1, 1))), 1, 0)))))), clamp(_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, int(_GLF_IDENTITY(ivec2(1, _GLF_IDENTITY(1, int(int(1)))), ~ _GLF_IDENTITY((_GLF_IDENTITY(~ (ivec2(1, 1)), ~ (~ (~ (ivec2(1, 1)))))), ivec2(ivec4((~ (ivec2(1, 1))), 1, 0)))))), (subgroup_local_id + _GLF_IDENTITY(1, int(_GLF_IDENTITY(ivec2(1, _GLF_IDENTITY(1, int(int(1)))), ~ _GLF_IDENTITY((_GLF_IDENTITY(~ (ivec2(1, 1)), ~ (~ (~ (ivec2(1, 1)))))), ivec2(ivec4((~ (ivec2(1, 1))), 1, 0))))))) | 0u), subgroup_local_id + _GLF_IDENTITY(1, int(_GLF_IDENTITY(ivec2(1, _GLF_IDENTITY(1, int(int(1)))), ~ _GLF_IDENTITY((_GLF_IDENTITY(~ (ivec2(1, 1)), ~ (~ (~ (ivec2(1, 1)))))), ivec2(ivec4((~ (ivec2(1, 1))), 1, 0)))))), subgroup_local_id + _GLF_IDENTITY(1, int(_GLF_IDENTITY(ivec2(1, _GLF_IDENTITY(1, int(int(1)))), ~ _GLF_IDENTITY((_GLF_IDENTITY(~ (ivec2(1, 1)), ~ (~ (~ (ivec2(1, 1)))))), ivec2(ivec4((~ (ivec2(1, 1))), 1, 0))))))))) >> 0u)) % _GLF_IDENTITY(subgroup_size, (true ? subgroup_size : _GLF_FUZZED(virtual_gid)))))), clamp(_GLF_IDENTITY(((subgroup_local_id + _GLF_IDENTITY(1, int(_GLF_IDENTITY(_GLF_IDENTITY(ivec2(1, 1), _GLF_IDENTITY(~ _GLF_IDENTITY((~ (ivec2(1, 1))), ivec2(ivec4((~ (ivec2(1, 1))), 1, 0))), min(~ _GLF_IDENTITY((~ (ivec2(1, 1))), ivec2(ivec4((~ (ivec2(1, 1))), 1, 0))), _GLF_IDENTITY(~ _GLF_IDENTITY((~ (ivec2(1, 1))), ivec2(ivec4(_GLF_IDENTITY((_GLF_IDENTITY(~ (ivec2(1, 1)), ~ (~ (~ (ivec2(1, 1)))))), clamp((_GLF_IDENTITY(~ (ivec2(1, 1)), ~ (~ (~ (ivec2(1, 1)))))), _GLF_IDENTITY((_GLF_IDENTITY(~ (ivec2(1, 1)), ~ (~ (~ (ivec2(1, 1)))))), (_GLF_IDENTITY((_GLF_IDENTITY(~ (ivec2(1, 1)), ~ (~ (~ (ivec2(1, 1)))))), ivec2(0, 0) | ((_GLF_IDENTITY(~ (ivec2(1, 1)), ~ (~ (~ (ivec2(1, 1))))))))) / (ivec2(0, 0) ^ ivec2(1, 1))), _GLF_IDENTITY((_GLF_IDENTITY(~ (ivec2(1, 1)), ~ (~ (~ (ivec2(1, 1)))))), ivec2(0, 0) ^ ((_GLF_IDENTITY(~ (ivec2(1, 1)), ~ (~ (~ (ivec2(1, 1)))))))))), 1, 0))), (~ _GLF_IDENTITY((~ (ivec2(1, 1))), ivec2(ivec4((~ _GLF_IDENTITY((ivec2(_GLF_IDENTITY(_GLF_IDENTITY(1, max(1, 1)), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY(1, max(1, 1)), (_GLF_IDENTITY(1, max(1, 1))) / int(_GLF_ONE(1.0, injectionSwitch.y)))), (~ (_GLF_IDENTITY(_GLF_IDENTITY(1, max(1, 1)), (_GLF_IDENTITY(1, max(1, 1))) / int(_GLF_ONE(1.0, injectionSwitch.y))))) / 1))), 1)), (true ? _GLF_IDENTITY((ivec2(1, 1)), min((ivec2(1, 1)), _GLF_IDENTITY((ivec2(1, 1)), ((_GLF_IDENTITY(ivec2(1, 1), (ivec2(_GLF_IDENTITY(1, ~ (~ (1))), 1)) | ivec2(0, 0)))) - ivec2(0, 0)))) : _GLF_FUZZED(ivec2(52794, 93589))))), 1, 0)))) ^ ivec2(0, 0))))), clamp(_GLF_IDENTITY(ivec2(1, 1), _GLF_IDENTITY(_GLF_IDENTITY(~ _GLF_IDENTITY((~ (ivec2(1, 1))), ivec2(ivec4((~ (ivec2(1, 1))), 1, 0))), (_GLF_IDENTITY(~ _GLF_IDENTITY((~ (ivec2(1, 1))), ivec2(ivec4((~ (ivec2(1, 1))), 1, 0))), ivec2(0, 0) ^ (~ _GLF_IDENTITY((~ (ivec2(1, 1))), ivec2(ivec4((~ (ivec2(1, 1))), 1, 0)))))) ^ ivec2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))), min(~ _GLF_IDENTITY((~ (ivec2(1, _GLF_IDENTITY(1, int(_GLF_IDENTITY(ivec4(1, 0, ((1 << _GLF_IDENTITY(int(5), int(5))) >> _GLF_IDENTITY(int(5), int(5))), 0), min(ivec4(1, 0, ((1 << _GLF_IDENTITY(int(5), int(5))) >> _GLF_IDENTITY(int(5), int(5))), 0), ivec4(1, 0, ((1 << _GLF_IDENTITY(int(5), int(5))) >> _GLF_IDENTITY(int(5), int(5))), 0)))))))), ivec2(ivec4((~ (ivec2(1, 1))), 1, 0))), _GLF_IDENTITY(~ _GLF_IDENTITY((~ (_GLF_IDENTITY(ivec2(_GLF_IDENTITY(1, int(int(_GLF_IDENTITY(1, 0 | (1))))), 1), ~ (~ (ivec2(_GLF_IDENTITY(1, int(int(_GLF_IDENTITY(1, 0 | (1))))), 1)))))), ivec2(ivec4((~ (ivec2(1, 1))), 1, 0))), (~ _GLF_IDENTITY((~ (ivec2(1, 1))), ivec2(ivec4((~ _GLF_IDENTITY((ivec2(_GLF_IDENTITY(1, max(1, 1)), 1)), (true ? _GLF_IDENTITY((ivec2(1, 1)), min(_GLF_IDENTITY((ivec2(1, 1)), ((ivec2(1, 1))) >> ivec2(0, 0)), _GLF_IDENTITY((ivec2(1, 1)), ((_GLF_IDENTITY(ivec2(1, 1), (ivec2(1, 1)) | ivec2(0, 0)))) - ivec2(0, 0)))) : _GLF_FUZZED(ivec2(52794, 93589))))), 1, 0)))) ^ ivec2(0, 0))))), _GLF_IDENTITY(_GLF_IDENTITY(ivec2(1, 1), _GLF_IDENTITY(~ _GLF_IDENTITY((~ (ivec2(1, 1))), ivec2(ivec4((~ (ivec2(1, 1))), 1, 0))), min(~ _GLF_IDENTITY((~ (ivec2(1, 1))), ivec2(ivec4((~ (ivec2(1, 1))), 1, 0))), _GLF_IDENTITY(~ _GLF_IDENTITY((~ (ivec2(1, 1))), ivec2(ivec4((~ (ivec2(1, 1))), 1, 0))), _GLF_IDENTITY((_GLF_IDENTITY(~ _GLF_IDENTITY((~ (ivec2(1, 1))), ivec2(ivec4((~ _GLF_IDENTITY((ivec2(_GLF_IDENTITY(1, max(1, 1)), 1)), (true ? _GLF_IDENTITY((ivec2(1, 1)), min((ivec2(1, 1)), _GLF_IDENTITY((ivec2(1, 1)), ((_GLF_IDENTITY(ivec2(1, 1), (ivec2(1, 1)) | ivec2(0, 0)))) - ivec2(0, 0)))) : _GLF_FUZZED(ivec2(52794, 93589))))), 1, 0))), min(~ _GLF_IDENTITY((~ (ivec2(1, 1))), ivec2(ivec4((~ _GLF_IDENTITY((ivec2(_GLF_IDENTITY(1, max(1, 1)), 1)), (true ? _GLF_IDENTITY((ivec2(1, 1)), min((ivec2(1, 1)), _GLF_IDENTITY((ivec2(1, 1)), ((_GLF_IDENTITY(ivec2(1, 1), (ivec2(1, 1)) | ivec2(0, 0)))) - ivec2(0, 0)))) : _GLF_FUZZED(ivec2(52794, 93589))))), 1, 0))), _GLF_IDENTITY(~ _GLF_IDENTITY((~ (ivec2(1, 1))), ivec2(ivec4((~ _GLF_IDENTITY((ivec2(_GLF_IDENTITY(1, max(1, 1)), 1)), (true ? _GLF_IDENTITY((ivec2(1, 1)), min((ivec2(1, 1)), _GLF_IDENTITY((ivec2(1, 1)), ((_GLF_IDENTITY(ivec2(1, 1), (ivec2(1, 1)) | ivec2(0, 0)))) - ivec2(0, 0)))) : _GLF_FUZZED(ivec2(52794, 93589))))), 1, 0))), ivec2(_GLF_IDENTITY(ivec2(~ _GLF_IDENTITY((~ (ivec2(1, 1))), ivec2(ivec4((~ _GLF_IDENTITY((ivec2(_GLF_IDENTITY(1, max(1, 1)), 1)), (true ? _GLF_IDENTITY((ivec2(1, 1)), min((ivec2(1, 1)), _GLF_IDENTITY((ivec2(1, 1)), ((_GLF_IDENTITY(ivec2(1, 1), (ivec2(1, 1)) | ivec2(0, 0)))) - ivec2(0, 0)))) : _GLF_FUZZED(ivec2(52794, 93589))))), 1, 0)))), (ivec2(~ _GLF_IDENTITY((~ (ivec2(1, 1))), ivec2(ivec4((~ _GLF_IDENTITY((ivec2(_GLF_IDENTITY(1, max(1, 1)), 1)), (true ? _GLF_IDENTITY((ivec2(1, 1)), min((ivec2(1, 1)), _GLF_IDENTITY((ivec2(1, 1)), ((_GLF_IDENTITY(ivec2(1, 1), (ivec2(1, 1)) | ivec2(0, 0)))) - ivec2(0, 0)))) : _GLF_FUZZED(ivec2(52794, 93589))))), 1, 0))))) ^ ivec2(0, 0))))))), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(ivec2(12797, -81356)) : _GLF_IDENTITY((_GLF_IDENTITY(~ _GLF_IDENTITY((~ (ivec2(1, 1))), ivec2(ivec4((~ _GLF_IDENTITY((ivec2(_GLF_IDENTITY(1, max(1, 1)), 1)), (true ? _GLF_IDENTITY((ivec2(1, 1)), min((ivec2(1, 1)), _GLF_IDENTITY((ivec2(1, 1)), ((_GLF_IDENTITY(ivec2(1, 1), (ivec2(1, 1)) | ivec2(0, 0)))) - ivec2(0, 0)))) : _GLF_FUZZED(ivec2(52794, 93589))))), 1, 0))), min(~ _GLF_IDENTITY((~ (ivec2(1, 1))), ivec2(ivec4((~ _GLF_IDENTITY((ivec2(_GLF_IDENTITY(1, max(1, 1)), 1)), (true ? _GLF_IDENTITY((ivec2(1, 1)), min((ivec2(1, 1)), _GLF_IDENTITY((ivec2(1, 1)), ((_GLF_IDENTITY(ivec2(1, 1), (ivec2(1, 1)) | ivec2(0, 0)))) - ivec2(0, 0)))) : _GLF_FUZZED(ivec2(52794, 93589))))), 1, 0))), _GLF_IDENTITY(~ _GLF_IDENTITY((~ (ivec2(1, 1))), ivec2(ivec4((~ _GLF_IDENTITY((ivec2(_GLF_IDENTITY(1, max(1, 1)), 1)), (true ? _GLF_IDENTITY((ivec2(1, 1)), min((ivec2(1, 1)), _GLF_IDENTITY((ivec2(1, 1)), ((_GLF_IDENTITY(ivec2(1, 1), (ivec2(1, 1)) | ivec2(0, 0)))) - ivec2(0, 0)))) : _GLF_FUZZED(ivec2(52794, 93589))))), 1, 0))), ivec2(_GLF_IDENTITY(ivec2(~ _GLF_IDENTITY((~ (ivec2(1, 1))), ivec2(ivec4((~ _GLF_IDENTITY((ivec2(_GLF_IDENTITY(1, max(1, 1)), 1)), (true ? _GLF_IDENTITY((ivec2(1, 1)), min((ivec2(1, 1)), _GLF_IDENTITY((ivec2(1, 1)), ((_GLF_IDENTITY(ivec2(1, 1), (ivec2(1, 1)) | ivec2(0, 0)))) - ivec2(0, 0)))) : _GLF_FUZZED(ivec2(52794, 93589))))), 1, 0)))), (ivec2(~ _GLF_IDENTITY((~ (ivec2(1, 1))), ivec2(ivec4((~ _GLF_IDENTITY((ivec2(_GLF_IDENTITY(1, max(1, 1)), 1)), (true ? _GLF_IDENTITY((ivec2(1, 1)), min((ivec2(1, 1)), _GLF_IDENTITY((ivec2(1, 1)), ((_GLF_IDENTITY(ivec2(1, 1), (ivec2(1, 1)) | ivec2(0, 0)))) - ivec2(0, 0)))) : _GLF_FUZZED(ivec2(52794, 93589))))), 1, 0))))) ^ ivec2(0, 0))))))), ~ (~ (_GLF_IDENTITY((_GLF_IDENTITY(~ _GLF_IDENTITY((~ (ivec2(1, 1))), ivec2(ivec4((~ _GLF_IDENTITY((ivec2(_GLF_IDENTITY(1, max(1, 1)), 1)), (true ? _GLF_IDENTITY((ivec2(1, 1)), min((ivec2(1, 1)), _GLF_IDENTITY((ivec2(1, 1)), ((_GLF_IDENTITY(ivec2(1, 1), (ivec2(1, 1)) | ivec2(0, 0)))) - ivec2(0, 0)))) : _GLF_FUZZED(ivec2(52794, 93589))))), 1, 0))), min(~ _GLF_IDENTITY((~ (ivec2(1, 1))), ivec2(ivec4((~ _GLF_IDENTITY((ivec2(_GLF_IDENTITY(1, max(1, 1)), 1)), (true ? _GLF_IDENTITY((ivec2(1, 1)), min((ivec2(1, 1)), _GLF_IDENTITY((ivec2(1, 1)), ((_GLF_IDENTITY(ivec2(1, 1), (ivec2(1, 1)) | ivec2(0, 0)))) - ivec2(0, 0)))) : _GLF_FUZZED(ivec2(52794, 93589))))), 1, 0))), _GLF_IDENTITY(~ _GLF_IDENTITY((~ (ivec2(1, 1))), ivec2(ivec4((~ _GLF_IDENTITY((ivec2(_GLF_IDENTITY(1, max(1, 1)), 1)), (true ? _GLF_IDENTITY((ivec2(1, 1)), min((ivec2(1, 1)), _GLF_IDENTITY((ivec2(1, 1)), ((_GLF_IDENTITY(ivec2(1, 1), (ivec2(1, 1)) | ivec2(0, 0)))) - ivec2(0, 0)))) : _GLF_FUZZED(ivec2(52794, 93589))))), 1, 0))), ivec2(_GLF_IDENTITY(ivec2(~ _GLF_IDENTITY((~ (ivec2(1, 1))), ivec2(ivec4((~ _GLF_IDENTITY((ivec2(_GLF_IDENTITY(1, max(1, 1)), 1)), (true ? _GLF_IDENTITY((ivec2(1, 1)), min((ivec2(1, 1)), _GLF_IDENTITY((ivec2(1, 1)), ((_GLF_IDENTITY(ivec2(1, 1), (ivec2(1, 1)) | ivec2(0, 0)))) - ivec2(0, 0)))) : _GLF_FUZZED(ivec2(52794, 93589))))), 1, 0)))), (ivec2(~ _GLF_IDENTITY((~ (ivec2(1, 1))), ivec2(ivec4((~ _GLF_IDENTITY((ivec2(_GLF_IDENTITY(1, max(1, 1)), 1)), (true ? _GLF_IDENTITY((ivec2(1, 1)), min((ivec2(1, 1)), _GLF_IDENTITY((ivec2(1, 1)), ((_GLF_IDENTITY(ivec2(1, 1), (ivec2(1, 1)) | ivec2(0, 0)))) - ivec2(0, 0)))) : _GLF_FUZZED(ivec2(52794, 93589))))), 1, 0))))) ^ ivec2(0, 0))))))), ((_GLF_IDENTITY(~ _GLF_IDENTITY((~ (ivec2(1, 1))), ivec2(ivec4((~ _GLF_IDENTITY((ivec2(_GLF_IDENTITY(1, max(1, 1)), 1)), (true ? _GLF_IDENTITY((ivec2(1, 1)), min((ivec2(1, 1)), _GLF_IDENTITY((ivec2(1, 1)), ((_GLF_IDENTITY(ivec2(1, 1), (ivec2(1, 1)) | ivec2(0, 0)))) - ivec2(0, 0)))) : _GLF_FUZZED(ivec2(52794, 93589))))), 1, 0))), min(~ _GLF_IDENTITY((~ (ivec2(1, 1))), ivec2(ivec4((~ _GLF_IDENTITY((ivec2(_GLF_IDENTITY(1, max(1, 1)), 1)), (true ? _GLF_IDENTITY((ivec2(1, 1)), min((ivec2(1, 1)), _GLF_IDENTITY((ivec2(1, 1)), ((_GLF_IDENTITY(ivec2(1, 1), (ivec2(1, 1)) | ivec2(0, 0)))) - ivec2(0, 0)))) : _GLF_FUZZED(ivec2(52794, 93589))))), 1, 0))), _GLF_IDENTITY(~ _GLF_IDENTITY((~ (ivec2(1, 1))), ivec2(ivec4((~ _GLF_IDENTITY((ivec2(_GLF_IDENTITY(1, max(1, 1)), 1)), (true ? _GLF_IDENTITY((ivec2(1, 1)), min((ivec2(1, 1)), _GLF_IDENTITY((ivec2(1, 1)), ((_GLF_IDENTITY(ivec2(1, 1), (ivec2(1, 1)) | ivec2(0, 0)))) - ivec2(0, 0)))) : _GLF_FUZZED(ivec2(52794, 93589))))), 1, 0))), ivec2(_GLF_IDENTITY(ivec2(~ _GLF_IDENTITY((~ (ivec2(1, 1))), ivec2(ivec4((~ _GLF_IDENTITY((ivec2(_GLF_IDENTITY(1, max(1, 1)), 1)), (true ? _GLF_IDENTITY((ivec2(1, 1)), min((ivec2(1, 1)), _GLF_IDENTITY((ivec2(1, 1)), ((_GLF_IDENTITY(ivec2(1, 1), (ivec2(1, 1)) | ivec2(0, 0)))) - ivec2(0, 0)))) : _GLF_FUZZED(ivec2(52794, 93589))))), 1, 0)))), (ivec2(~ _GLF_IDENTITY((~ (ivec2(1, 1))), ivec2(ivec4((~ _GLF_IDENTITY((ivec2(_GLF_IDENTITY(1, max(1, 1)), 1)), (true ? _GLF_IDENTITY((ivec2(1, 1)), min((ivec2(1, 1)), _GLF_IDENTITY((ivec2(1, 1)), ((_GLF_IDENTITY(ivec2(1, 1), (ivec2(1, 1)) | ivec2(0, 0)))) - ivec2(0, 0)))) : _GLF_FUZZED(ivec2(52794, 93589))))), 1, 0))))) ^ ivec2(0, 0)))))))) << ivec2(0, 0))))))) ^ ivec2(0, 0))))), min(_GLF_IDENTITY(ivec2(1, 1), _GLF_IDENTITY(~ _GLF_IDENTITY((~ (ivec2(1, 1))), ivec2(ivec4((~ (ivec2(1, 1))), 1, 0))), min(~ _GLF_IDENTITY((~ (ivec2(1, 1))), ivec2(ivec4((~ (ivec2(1, 1))), 1, 0))), _GLF_IDENTITY(~ _GLF_IDENTITY((~ (ivec2(1, 1))), ivec2(ivec4((~ (ivec2(1, 1))), 1, 0))), (~ _GLF_IDENTITY((~ (ivec2(1, 1))), ivec2(ivec4((~ _GLF_IDENTITY((ivec2(_GLF_IDENTITY(1, max(1, 1)), 1)), (true ? _GLF_IDENTITY((ivec2(1, 1)), min((ivec2(1, 1)), _GLF_IDENTITY((ivec2(1, 1)), ((_GLF_IDENTITY(ivec2(1, 1), (ivec2(1, 1)) | ivec2(0, 0)))) - ivec2(0, 0)))) : _GLF_FUZZED(ivec2(52794, 93589))))), 1, 0)))) ^ ivec2(_GLF_IDENTITY(0, ~ (~ (_GLF_IDENTITY(0, 1 * (0))))), 0))))), _GLF_IDENTITY(ivec2(1, 1), _GLF_IDENTITY(~ _GLF_IDENTITY((~ (ivec2(1, 1))), ivec2(ivec4((~ (ivec2(1, 1))), 1, 0))), min(~ _GLF_IDENTITY((~ (ivec2(1, 1))), ivec2(ivec4((~ (ivec2(1, 1))), 1, 0))), _GLF_IDENTITY(~ _GLF_IDENTITY((~ _GLF_IDENTITY((ivec2(1, 1)), min((ivec2(1, 1)), _GLF_IDENTITY((ivec2(1, 1)), min((ivec2(1, 1)), (ivec2(1, 1))))))), ivec2(ivec4((~ (ivec2(1, 1))), 1, 0))), (~ _GLF_IDENTITY((~ (ivec2(1, 1))), ivec2(ivec4((~ _GLF_IDENTITY((ivec2(_GLF_IDENTITY(1, max(1, 1)), 1)), (true ? _GLF_IDENTITY((ivec2(1, 1)), min((ivec2(1, 1)), _GLF_IDENTITY(_GLF_IDENTITY((ivec2(1, 1)), ivec2(0, 0) ^ ((ivec2(1, 1)))), ((_GLF_IDENTITY(ivec2(1, 1), (ivec2(1, 1)) | ivec2(0, 0)))) - ivec2(0, _GLF_IDENTITY(0, ~ (_GLF_IDENTITY(~ (0), 0 | (~ (0))))))))) : _GLF_FUZZED(ivec2(52794, 93589))))), 1, 0)))) ^ ivec2(0, 0))))))), _GLF_IDENTITY(ivec2(1, _GLF_IDENTITY(1, (1) >> 0)), _GLF_IDENTITY(~ _GLF_IDENTITY(_GLF_IDENTITY((~ (ivec2(1, 1))), ivec2(ivec4((~ (ivec2(1, 1))), 1, 0))), (_GLF_IDENTITY((~ (ivec2(1, 1))), ivec2(ivec4((~ (ivec2(1, 1))), 1, 0)))) - (ivec2(0, 0) | ivec2(0, 0))), min(_GLF_IDENTITY(~ _GLF_IDENTITY((~ (ivec2(1, 1))), ivec2(ivec4((~ (ivec2(1, 1))), 1, 0))), min(~ _GLF_IDENTITY((~ (ivec2(1, 1))), ivec2(ivec4((~ (ivec2(1, 1))), 1, 0))), ~ _GLF_IDENTITY((~ (ivec2(1, 1))), ivec2(ivec4((~ (ivec2(1, 1))), 1, 0))))), _GLF_IDENTITY(~ _GLF_IDENTITY(_GLF_IDENTITY((~ (ivec2(1, 1))), ivec2(ivec4((~ (ivec2(1, 1))), 1, 0))), ivec2(ivec4(_GLF_IDENTITY(_GLF_IDENTITY((~ (ivec2(1, 1))), ivec2(ivec4((~ (ivec2(1, 1))), 1, 0))), clamp(_GLF_IDENTITY(_GLF_IDENTITY((~ (ivec2(1, 1))), ivec2(ivec4((~ (ivec2(1, 1))), 1, 0))), (false ? _GLF_FUZZED(ivec2(37276, 10531)) : _GLF_IDENTITY((~ (ivec2(1, 1))), ivec2(ivec4((~ (ivec2(1, 1))), 1, 0))))), _GLF_IDENTITY((~ (ivec2(1, 1))), ivec2(ivec4((~ (ivec2(1, 1))), 1, 0))), _GLF_IDENTITY((~ (ivec2(1, 1))), ivec2(ivec4((~ (ivec2(1, 1))), 1, 0))))), 1, 0))), (~ _GLF_IDENTITY((~ (ivec2(1, 1))), _GLF_IDENTITY(ivec2(ivec4((~ _GLF_IDENTITY((ivec2(_GLF_IDENTITY(1, max(1, 1)), 1)), (true ? _GLF_IDENTITY((ivec2(1, 1)), min((ivec2(1, 1)), _GLF_IDENTITY((ivec2(1, 1)), ((_GLF_IDENTITY(ivec2(1, 1), (ivec2(1, 1)) | ivec2(0, 0)))) - ivec2(0, 0)))) : _GLF_FUZZED(ivec2(52794, 93589))))), 1, 0)), clamp(ivec2(ivec4((~ _GLF_IDENTITY((ivec2(_GLF_IDENTITY(1, max(1, 1)), 1)), (true ? _GLF_IDENTITY((ivec2(1, 1)), min((ivec2(1, 1)), _GLF_IDENTITY((ivec2(1, 1)), ((_GLF_IDENTITY(ivec2(1, 1), (ivec2(1, 1)) | ivec2(0, 0)))) - ivec2(0, 0)))) : _GLF_FUZZED(ivec2(52794, 93589))))), 1, 0)), ivec2(ivec4((~ _GLF_IDENTITY((ivec2(_GLF_IDENTITY(1, max(1, 1)), 1)), (true ? _GLF_IDENTITY((ivec2(1, 1)), min((ivec2(1, 1)), _GLF_IDENTITY((ivec2(1, 1)), ((_GLF_IDENTITY(ivec2(1, 1), (ivec2(1, 1)) | ivec2(0, 0)))) - ivec2(0, 0)))) : _GLF_FUZZED(ivec2(52794, 93589))))), 1, 0)), ivec2(ivec4((~ _GLF_IDENTITY((ivec2(_GLF_IDENTITY(1, max(1, 1)), 1)), (true ? _GLF_IDENTITY((ivec2(1, 1)), min((ivec2(1, 1)), _GLF_IDENTITY((ivec2(1, 1)), ((_GLF_IDENTITY(ivec2(1, 1), (ivec2(1, 1)) | ivec2(0, 0)))) - ivec2(0, 0)))) : _GLF_FUZZED(ivec2(52794, 93589))))), 1, 0)))))) ^ ivec2(0, 0)))))))))) % subgroup_size), clamp(((_GLF_IDENTITY(subgroup_local_id, ~ (~ (subgroup_local_id))) + _GLF_IDENTITY(1, int(_GLF_IDENTITY(ivec2(1, 1), _GLF_IDENTITY(~ _GLF_IDENTITY((_GLF_IDENTITY(~ (ivec2(1, 1)), min(~ (ivec2(1, 1)), ~ (ivec2(1, 1))))), ivec2(ivec4((~ (ivec2(1, 1))), 1, 0))), max(_GLF_IDENTITY(~ _GLF_IDENTITY((_GLF_IDENTITY(~ (ivec2(1, 1)), min(~ (ivec2(1, 1)), ~ (ivec2(1, 1))))), ivec2(ivec4((~ (ivec2(1, 1))), 1, 0))), ~ (_GLF_IDENTITY(~ (~ _GLF_IDENTITY((_GLF_IDENTITY(~ (ivec2(1, 1)), min(~ (ivec2(1, 1)), ~ (ivec2(1, 1))))), ivec2(ivec4((~ (ivec2(1, 1))), 1, 0)))), (~ (~ _GLF_IDENTITY((_GLF_IDENTITY(~ (ivec2(1, 1)), min(~ (ivec2(1, 1)), ~ (ivec2(1, 1))))), ivec2(ivec4((~ (ivec2(1, 1))), 1, 0))))) + ivec2(0, 0)))), ~ _GLF_IDENTITY((_GLF_IDENTITY(~ (ivec2(1, 1)), min(~ (ivec2(1, 1)), ~ (ivec2(1, 1))))), ivec2(ivec4((~ (ivec2(1, 1))), 1, 0))))))))) % subgroup_size), (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, uint(uvec2(_GLF_IDENTITY(subgroup_local_id, max(subgroup_local_id, subgroup_local_id)), 1u))) + _GLF_IDENTITY(1, int(_GLF_IDENTITY(ivec2(1, 1), ~ _GLF_IDENTITY((~ (ivec2(1, 1))), _GLF_IDENTITY(ivec2(ivec4((~ (ivec2(1, 1))), 1, 0)), max(_GLF_IDENTITY(ivec2(ivec4((~ (ivec2(1, 1))), 1, 0)), (ivec2(ivec4((~ (ivec2(1, 1))), 1, 0))) - ivec2(0, 0)), _GLF_IDENTITY(ivec2(ivec4((~ (ivec2(1, 1))), 1, 0)), _GLF_IDENTITY((ivec2(ivec4((~ (ivec2(1, 1))), 1, 0))) / ((ivec2(1, 1) << _GLF_IDENTITY(ivec2(0), ivec2(0))) >> _GLF_IDENTITY(ivec2(0), ivec2(0))), ((ivec2(ivec4((~ (ivec2(1, 1))), 1, 0))) / ((ivec2(1, 1) << _GLF_IDENTITY(ivec2(0), ivec2(0))) >> _GLF_IDENTITY(_GLF_IDENTITY(ivec2(0), ~ (~ (ivec2(0)))), ivec2(0)))) / (ivec2(1, 1) & ivec2(1, 1))))))))))), (_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(5054.1085)), vec2(_GLF_FUZZED((+ -2.2)), (injectionSwitch)[1]), bvec2(false, true))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(868.598, 998.526)) : injectionSwitch)), mat2(1.0) * (injectionSwitch)))).y)) ? (_GLF_IDENTITY(subgroup_local_id, uint(uvec2(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, max(subgroup_local_id, subgroup_local_id)), (false ? _GLF_FUZZED(subgroup_id) : _GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, max(subgroup_local_id, subgroup_local_id)), (_GLF_IDENTITY(subgroup_local_id, max(subgroup_local_id, subgroup_local_id))) / 1u))), 1u))) + _GLF_IDENTITY(1, int(_GLF_IDENTITY(ivec2(1, 1), ~ _GLF_IDENTITY((~ (_GLF_IDENTITY(ivec2(1, 1), ~ (~ (ivec2(1, 1)))))), ivec2(ivec4((~ (ivec2(_GLF_IDENTITY(1, int(ivec3(1, (0 | 0), _GLF_IDENTITY(0, (_GLF_IDENTITY(0, (true ? 0 : _GLF_FUZZED(-25561)))) << (0 >> _GLF_IDENTITY(int(8), int(8))))))), 1))), 1, 0))))))) : _GLF_FUZZED(workgroup_id))) % subgroup_size), ((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, uint(_GLF_IDENTITY(uint(_GLF_IDENTITY(subgroup_local_id, min(subgroup_local_id, subgroup_local_id))), uint(uvec2(uint(_GLF_IDENTITY(subgroup_local_id, min(subgroup_local_id, subgroup_local_id))), 0u)))))) / 1u), clamp(subgroup_local_id, subgroup_local_id, subgroup_local_id)) + _GLF_IDENTITY(1, int(_GLF_IDENTITY(ivec2(1, 1), _GLF_IDENTITY(~ _GLF_IDENTITY((~ (ivec2(1, 1))), ivec2(ivec4((~ (ivec2(1, 1))), 1, 0))), (~ _GLF_IDENTITY((~ _GLF_IDENTITY((ivec2(1, 1)), ivec2(ivec2((ivec2(1, 1)))))), ivec2(ivec4((~ (ivec2(1, 1))), 1, 0)))) ^ _GLF_IDENTITY(ivec2(0, 0), clamp(ivec2(0, 0), _GLF_IDENTITY(ivec2(0, 0), (true ? _GLF_IDENTITY(ivec2(0, 0), clamp(ivec2(0, 0), ivec2(0, 0), ivec2(0, 0))) : _GLF_FUZZED(ivec2(76873, 94035)))), ivec2(0, 0)))))))) % _GLF_IDENTITY(subgroup_size, (subgroup_size) | 0u)))), ((_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) << 0u) + _GLF_IDENTITY(1, int(_GLF_IDENTITY(_GLF_IDENTITY(ivec2(1, 1), (ivec2(1, 1)) - ivec2(0, 0)), ~ _GLF_IDENTITY((~ (ivec2(1, _GLF_IDENTITY(1, 0 | (_GLF_IDENTITY(1, ~ (~ (_GLF_IDENTITY(1, (1) | (_GLF_IDENTITY(1, (1) | (1)))))))))))), ivec2(_GLF_IDENTITY(ivec4((~ (ivec2(1, 1))), 1, 0), (_GLF_IDENTITY(ivec4((~ (ivec2(1, 1))), 1, 0), ivec4(1, 1, 1, 1) * (ivec4((~ (ivec2(1, 1))), 1, 0)))) ^ ivec4(0, 0, 0, 0)))))))) % subgroup_size), ((subgroup_local_id + _GLF_IDENTITY(1, int(_GLF_IDENTITY(ivec2(1, 1), ~ _GLF_IDENTITY((~ (ivec2(1, 1))), ivec2(ivec4((~ _GLF_IDENTITY((ivec2(1, 1)), ivec2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)) ^ (_GLF_IDENTITY((ivec2(1, 1)), ((ivec2(1, 1))) | ((ivec2(1, 1))))))), 1, 0))))))) % subgroup_size)));
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec3(false, _GLF_IDENTITY(false, (false) && true), false))), (_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(-4981.5473), _GLF_FUZZED(-61.81)), bvec2(false, false))), sin(vec2(0.0, 0.0)) + (_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(-4981.5473), _GLF_FUZZED(-61.81)), _GLF_IDENTITY(bvec2(false, false), bvec2(_GLF_IDENTITY(bvec3(bvec2(false, false), false), bvec3(bvec4(bvec3(bvec2(false, false), false), false))))))))), _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], (false ? _GLF_FUZZED(-1.2) : injectionSwitch[1]))), max(vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], (false ? _GLF_FUZZED(-1.2) : injectionSwitch[1]))), vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], (false ? _GLF_FUZZED(-1.2) : injectionSwitch[1]))))))), (false ? _GLF_FUZZED(mod(vec2(6.2, -4664.2106), 25.64)) : _GLF_IDENTITY(min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], (false ? _GLF_FUZZED(-1.2) : injectionSwitch[1]))), max(vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], (false ? _GLF_FUZZED(-1.2) : injectionSwitch[1]))), vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], (false ? _GLF_FUZZED(-1.2) : injectionSwitch[1]))))))), clamp(min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], (false ? _GLF_FUZZED(-1.2) : injectionSwitch[1]))), max(vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], (false ? _GLF_FUZZED(-1.2) : injectionSwitch[1]))), vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], (false ? _GLF_FUZZED(-1.2) : injectionSwitch[1]))))))), min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], (false ? _GLF_FUZZED(-1.2) : injectionSwitch[1]))), max(vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], (false ? _GLF_FUZZED(-1.2) : injectionSwitch[1]))), vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], (false ? _GLF_FUZZED(-1.2) : injectionSwitch[1]))))))), min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], (false ? _GLF_FUZZED(-1.2) : injectionSwitch[1]))), max(vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], (false ? _GLF_FUZZED(-1.2) : injectionSwitch[1]))), vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], (false ? _GLF_FUZZED(-1.2) : injectionSwitch[1])))))))))))))).x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec4(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, true)))), bool(bvec3(! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec4(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), _GLF_IDENTITY(injectionSwitch, vec2(mat3(injectionSwitch, 1.0, _GLF_IDENTITY(1.0, (1.0) / _GLF_IDENTITY(1.0, (1.0) - 0.0)), 1.0, 1.0, 1.0, 1.0, 0.0))))).y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, true)))), ! (! ((_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec4(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), _GLF_IDENTITY(injectionSwitch, vec2(mat3(injectionSwitch, 1.0, _GLF_IDENTITY(1.0, (1.0) / _GLF_IDENTITY(1.0, (1.0) - 0.0)), 1.0, 1.0, 1.0, 1.0, 0.0))))).y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, true))))))), true, false)))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_DEAD(false))))
    return;
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(89.83), _GLF_FUZZED(vec4(-42.89, 230.076, -778.679, 59.37).q)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))), injectionSwitch, injectionSwitch)).x > injectionSwitch.y), ! (! ((_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(89.83), _GLF_FUZZED(vec4(-42.89, 230.076, -778.679, 59.37).q)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))), injectionSwitch, injectionSwitch)).x > injectionSwitch.y)))))))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), ((! (false))) && true))))
    return;
   if(_GLF_DEAD(false))
    barrier();
   return;
   if(_GLF_DEAD(false))
    return;
  }
 atomicStore(buf[next_virtual_gid], _GLF_IDENTITY(uint(1), _GLF_IDENTITY(max(uint(1), uint(1)), (true ? max(uint(1), uint(1)) : _GLF_FUZZED(subgroup_size)))), _GLF_IDENTITY(4, (4) - int(_GLF_ZERO(0.0, injectionSwitch.x))), 64, 4);
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    return;
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  return;
 uint read_1 = atomicLoad(_GLF_IDENTITY(buf[virtual_gid], (buf[virtual_gid]) - 0u), 4, 64, 0);
 atomicStore(buf[next_virtual_gid], uint(read_1 + 1), 4, 64, 4);
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec4(false, false, false, false)), ! (_GLF_IDENTITY(! (bool(bvec4(false, false, false, false))), bool(bvec2(! (bool(bvec4(false, false, false, false))), true))))), true && (bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), _GLF_IDENTITY(false || (false), bool(bool(_GLF_IDENTITY(false || (false), _GLF_IDENTITY(bool(bvec4(false || (false), false, false, true)), bool(bool(bool(bvec4(false || _GLF_IDENTITY((false), bool(bool(_GLF_IDENTITY((false), bool(bvec2((false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))), false, false, true)))))))))), false, _GLF_IDENTITY(false, ! (! (false))), false)))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && _GLF_IDENTITY(_GLF_IDENTITY(true, ! (! (true))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(true, ! (! (true))))))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  return;
}
