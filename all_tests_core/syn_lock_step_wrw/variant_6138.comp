#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec3(false, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), (_GLF_IDENTITY(false, bool(bvec3(false, false, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(vec2(-324.141, -292.350)) : injectionSwitch)).x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0))))))) || false)))
      return;
     return;
    }
   return;
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_DEAD(false)), ((_GLF_DEAD(false))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bool(bvec3(! (_GLF_DEAD(false)), false, false))))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, bool(bvec3(false, true, false))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))), (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(mix(float(_GLF_FUZZED(-9854.1096)), float(injectionSwitch.x), bool(true)), float(_GLF_IDENTITY(mat2x3(_GLF_IDENTITY(mix(float(_GLF_FUZZED(-9854.1096)), float(injectionSwitch.x), bool(true)), clamp(mix(float(_GLF_FUZZED(-9854.1096)), float(injectionSwitch.x), bool(true)), mix(float(_GLF_FUZZED(-9854.1096)), float(injectionSwitch.x), bool(true)), mix(float(_GLF_FUZZED(-9854.1096)), float(injectionSwitch.x), bool(true)))), 0.0, 0.0, 0.0, 0.0, 0.0), mat2x3(mat2x3(mat2x3(_GLF_IDENTITY(mix(float(_GLF_FUZZED(-9854.1096)), float(injectionSwitch.x), bool(true)), clamp(mix(float(_GLF_FUZZED(-9854.1096)), float(injectionSwitch.x), bool(true)), mix(float(_GLF_FUZZED(-9854.1096)), float(injectionSwitch.x), bool(true)), mix(float(_GLF_FUZZED(-9854.1096)), float(injectionSwitch.x), bool(true)))), 0.0, 0.0, 0.0, 0.0, 0.0))))))) > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))).y), true && ((injectionSwitch.x > injectionSwitch.y))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_DEAD(false), false))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(269.326) : injectionSwitch.y))))))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && _GLF_IDENTITY(true, (true) || false))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(false))
    return;
  }
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
          return;
         return;
        }
       return;
      }
     return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, false || (false))) && true)))
      return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         return;
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
        }
       return;
      }
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
    }
   return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, bool(bool(false)))), (! (_GLF_IDENTITY(false, bool(bool(false))))) && true)))))
    return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false)))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y))), mix(vec2(_GLF_FUZZED(944.651), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(-0.4)), bvec2(true, false))).x, clamp(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)), _GLF_IDENTITY((injectionSwitch), _GLF_IDENTITY(mat2(1.0), (mat2(1.0)) * mat2(1.0)) * ((injectionSwitch))) / vec2(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y))), mix(vec2(_GLF_FUZZED(944.651), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(-0.4)), bvec2(true, false))).x, float(vec3(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))).y))), mix(vec2(_GLF_FUZZED(944.651), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(-0.4)), bvec2(true, false))).x, 1.0, 0.0))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y))), mix(vec2(_GLF_FUZZED(944.651), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(-0.4)), bvec2(true, false))).x, clamp(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y))), mix(vec2(_GLF_FUZZED(944.651), (injectionSwitch)[_GLF_IDENTITY(1, ~ (~ (1)))]), vec2((injectionSwitch)[0], _GLF_FUZZED(-0.4)), bvec2(true, false))).x, (true ? _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y))), mix(vec2(_GLF_FUZZED(944.651), (injectionSwitch)[_GLF_IDENTITY(1, ~ (~ (1)))]), vec2((injectionSwitch)[0], _GLF_FUZZED(-0.4)), bvec2(true, false))).x : _GLF_FUZZED(9080.4404))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y))), mix(vec2(_GLF_FUZZED(944.651), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(-0.4)), bvec2(true, false))).x, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), _GLF_IDENTITY(float(mat4(_GLF_ONE(1.0, injectionSwitch.y), cos(0.0), 0.0, 1.0, length(vec3(0.0, 0.0, 0.0)), 1.0, log(1.0), 1.0, determinant(mat4(0.0, 1.0, 1.0, 1.0, 0.0, tan(0.0), 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, sin(0.0), 0.0, 0.0)), 0.0, 0.0, log(1.0), 0.0, 0.0, 0.0, exp(0.0))), (true ? float(mat4(_GLF_ONE(1.0, injectionSwitch.y), cos(0.0), 0.0, 1.0, length(vec3(0.0, 0.0, 0.0)), 1.0, log(1.0), 1.0, determinant(mat4(0.0, 1.0, 1.0, 1.0, 0.0, tan(0.0), 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, sin(0.0), 0.0, 0.0)), 0.0, 0.0, log(1.0), 0.0, 0.0, 0.0, exp(0.0))) : _GLF_FUZZED(1.7)))), _GLF_ONE(1.0, injectionSwitch.y))), mix(vec2(_GLF_FUZZED(944.651), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(-0.4)), bvec2(true, false))).x)), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch), vec2(mat3((injectionSwitch), 1.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 1.0, 1.0, 1.0))) / vec2(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y))), mix(vec2(_GLF_IDENTITY(_GLF_FUZZED(944.651), max(_GLF_IDENTITY(_GLF_FUZZED(944.651), mix(float(_GLF_FUZZED(944.651)), float(_GLF_FUZZED(36.01)), bool(false))), _GLF_IDENTITY(_GLF_FUZZED(944.651), min(_GLF_FUZZED(944.651), _GLF_FUZZED(944.651))))), (injectionSwitch)[_GLF_IDENTITY(1, int(_GLF_IDENTITY(ivec2(1, 1), ~ (~ (ivec2(1, 1))))))]), vec2((injectionSwitch)[0], _GLF_FUZZED(-0.4)), bvec2(true, false))).x, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y))), mix(vec2(_GLF_FUZZED(944.651), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(-0.4)), bvec2(true, false))).x) - 0.0))) > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) && true))))))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         return;
        }
       return;
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + 0.0), injectionSwitch.x)))) > injectionSwitch.y))))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, _GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), (false) || false), true)), (bool(bvec3(false, _GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), ! _GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, true && (false))), ! (_GLF_IDENTITY(! (bool(_GLF_IDENTITY(false, true && (false)))), (! (bool(_GLF_IDENTITY(false, true && (false))))) && true)))))) || false)), ! (! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, (false) || false), true), bvec2(bvec2(bvec2(_GLF_IDENTITY(false, (false) || false), true))))), true && (bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, (false) || false), true), bvec2(bvec2(bvec2(_GLF_IDENTITY(false, (false) || false), true))))))))))))), ! (! ((_GLF_IDENTITY(! (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, true && (false))), ! (_GLF_IDENTITY(! (bool(_GLF_IDENTITY(false, true && (false)))), (! (bool(_GLF_IDENTITY(false, true && (false))))) && true)))))) || false)), ! (! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, (false) || false), true), bvec2(bvec2(bvec2(_GLF_IDENTITY(false, (false) || false), true))))), true && (bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, (false) || false), true), bvec2(bvec2(bvec2(_GLF_IDENTITY(false, (false) || false), true))))))))))))))))), _GLF_IDENTITY(true, (true) && true)))) || false)), (injectionSwitch.x > injectionSwitch.y))), bool(bvec2(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_DEAD(false)))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], max(injectionSwitch[0], injectionSwitch[0])), injectionSwitch[1])).y, (false ? _GLF_FUZZED((dot(vec2(-2.9, -36.22), vec2(326.175, -2.7)) / -155.830)) : injectionSwitch.y))))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
     if(_GLF_DEAD(false))
      return;
    }
   return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
  }
 uint num_workgroup = gl_NumWorkGroups.x;
 if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY((_GLF_DEAD(false)) && true, ! (! (_GLF_IDENTITY((_GLF_DEAD(false)), false || ((_GLF_DEAD(false)))) && true))))))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY((false), (_GLF_IDENTITY((false), (_GLF_IDENTITY((false), ((false)) && true)) || false)) || false) && true), (_GLF_IDENTITY(false, (false) && true)) && _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, bool(bvec4(injectionSwitch.x < injectionSwitch.y, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, false))))))))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, true)), (bool(bvec2(false, true))) || false))))
        return;
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        return;
       return;
      }
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))).y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
      }
     return;
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_DEAD(false), false))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      return;
    }
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))), false || (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), bool(bvec4(! (_GLF_DEAD(false)), false, true, true))))), true && (_GLF_DEAD(false))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         return;
        }
       return;
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || _GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, (false) || false)), (! (_GLF_IDENTITY(false, (false) || false))) || false))), false || (false))))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), ! _GLF_IDENTITY((! (_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), ! (! ((! (_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))))))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false)))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(6066.7173)), bool(false)))))))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   return;
  }
 uint workgroup_size = _GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) ^ 0u);
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, false, false)))))
          return;
         return;
        }
       return;
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        return;
      }
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), ! _GLF_IDENTITY((! (_GLF_IDENTITY(false, true && (false)))), bool(bvec2((! (_GLF_IDENTITY(false, true && (false)))), true))))))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(-7.3, 81.31)) : injectionSwitch)).y))))
      return;
     return;
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x)) > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) && true))))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))), _GLF_IDENTITY(bool(bvec3(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)), bool(bvec3(_GLF_IDENTITY(bool(bvec3(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)), bool(bool(bool(bvec3(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))))), true, false)))))
    return;
  }
 uint workgroup_id = _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID.x, (true ? gl_WorkGroupID.x : _GLF_FUZZED(atomicExchange(workgroup_size, subgroup_id)))), (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID.x, _GLF_IDENTITY(0u + (_GLF_IDENTITY(gl_WorkGroupID.x, (true ? gl_WorkGroupID.x : _GLF_FUZZED(subgroup_size)))), (true ? _GLF_IDENTITY(0u, ~ (_GLF_IDENTITY(~ (0u), (~ (0u)) | (_GLF_IDENTITY(~ (0u), (~ (0u)) | 0u))))) + (_GLF_IDENTITY(gl_WorkGroupID.x, (true ? gl_WorkGroupID.x : _GLF_IDENTITY(_GLF_FUZZED(subgroup_size), max(_GLF_IDENTITY(_GLF_FUZZED(subgroup_size), uint(uvec4(_GLF_FUZZED(subgroup_size), 0u, 0u, 1u))), _GLF_FUZZED(subgroup_size)))))) : _GLF_IDENTITY(_GLF_FUZZED(42740u), (_GLF_IDENTITY(_GLF_FUZZED(42740u), max(_GLF_IDENTITY(_GLF_FUZZED(42740u), (_GLF_FUZZED(42740u)) ^ 0u), _GLF_FUZZED(42740u)))) >> 0u)))), (_GLF_IDENTITY(gl_WorkGroupID.x, _GLF_IDENTITY(0u + (_GLF_IDENTITY(gl_WorkGroupID.x, (true ? gl_WorkGroupID.x : _GLF_FUZZED(subgroup_size)))), (true ? 0u + (_GLF_IDENTITY(gl_WorkGroupID.x, (true ? gl_WorkGroupID.x : _GLF_IDENTITY(_GLF_FUZZED(subgroup_size), _GLF_IDENTITY(max(_GLF_IDENTITY(_GLF_FUZZED(subgroup_size), uint(uvec4(_GLF_FUZZED(subgroup_size), 0u, 0u, 1u))), _GLF_FUZZED(subgroup_size)), (max(_GLF_IDENTITY(_GLF_FUZZED(subgroup_size), uint(uvec4(_GLF_FUZZED(subgroup_size), 0u, 0u, 1u))), _GLF_FUZZED(subgroup_size))) ^ 0u))))) : _GLF_FUZZED(42740u))))) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x)))) << _GLF_IDENTITY(0u, (true ? 0u : _GLF_FUZZED(num_workgroup))));
 uint workgroup_base = workgroup_size * workgroup_id;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(clamp(vec2(-8139.7876, 0.7), vec2(3964.4058, 83.19), vec2(-64.08, 622.284))))).x, _GLF_IDENTITY(max(_GLF_IDENTITY(injectionSwitch, vec2(mat2x3(_GLF_IDENTITY(injectionSwitch, vec2(vec4(injectionSwitch, 1.0, 1.0))), 0.0, 1.0, 1.0, 1.0))).x, injectionSwitch.x), clamp(max(injectionSwitch.x, injectionSwitch.x), _GLF_IDENTITY(max(injectionSwitch.x, injectionSwitch.x), _GLF_IDENTITY(float(mat4x2(max(injectionSwitch.x, injectionSwitch.x), 1.0, abs(1.0), cos(0.0), abs(_GLF_IDENTITY(1.0, (1.0) * 1.0)), sin(0.0), 1.0, 0.0)), clamp(float(mat4x2(max(injectionSwitch.x, injectionSwitch.x), 1.0, abs(1.0), cos(_GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(degrees(-32.75)) : _GLF_IDENTITY(0.0, max(0.0, 0.0))))), abs(1.0), sin(0.0), 1.0, 0.0)), float(mat4x2(max(injectionSwitch.x, injectionSwitch.x), 1.0, abs(_GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0))), cos(0.0), abs(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, min(1.0, _GLF_IDENTITY(1.0, (1.0) / 1.0)))) / 1.0)), sin(0.0), 1.0, 0.0)), float(mat4x2(max(injectionSwitch.x, injectionSwitch.x), 1.0, abs(1.0), cos(0.0), abs(1.0), sin(0.0), 1.0, 0.0))))), max(injectionSwitch.x, injectionSwitch.x)))), clamp(injectionSwitch.x, injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(607.419))))) > _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-0.0)), vec2(_GLF_FUZZED(33.91), (injectionSwitch)[1]), bvec2(false, true))), injectionSwitch)).y))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_DEAD(false), true))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
      }
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
      }
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y))))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         return;
        }
       return;
      }
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          return;
         return;
        }
       return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).x, mix(float(_GLF_FUZZED(314.427)), float(injectionSwitch.x), bool(_GLF_TRUE(_GLF_IDENTITY(_GLF_IDENTITY(true, (true) || false), ! (! (_GLF_IDENTITY(true, (true) || false)))), _GLF_IDENTITY((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y), (_GLF_IDENTITY((injectionSwitch.x < _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), max(injectionSwitch, injectionSwitch)).y), true && ((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y)))) || false))))) > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-1502.8740)), float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - tan(0.0)), injectionSwitch.x)), clamp(injectionSwitch.x, injectionSwitch.x, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY((injectionSwitch.x) / 1.0, (false ? _GLF_FUZZED(ceil(-631.080)) : (injectionSwitch.x) / 1.0))), mix(float(_GLF_FUZZED((23.82 + -9010.7131))), float(injectionSwitch.x), _GLF_IDENTITY(bool(true), false || (bool(true)))))))), bool(true))) > injectionSwitch.y), ! (! ((_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-1502.8740)), float(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED((23.82 + _GLF_IDENTITY(-9010.7131, clamp(-9010.7131, -9010.7131, -9010.7131))))), float(_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)), _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(true ? injectionSwitch : _GLF_FUZZED(injectionSwitch), vec2(vec4(true ? injectionSwitch : _GLF_FUZZED(injectionSwitch), 0.0, sin(0.0)))))))).x), bool(true)))))), bool(true))) > injectionSwitch.y)))), bool(bvec4((_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-1502.8740)), float(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, (true ? _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * 1.0), min(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * 1.0), _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * 1.0))), max(injectionSwitch.x, injectionSwitch.x)) : _GLF_FUZZED(0.4)))) - 0.0), _GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(mix(float(_GLF_FUZZED((23.82 + -9010.7131))), float(injectionSwitch.x), bool(true)), (mix(float(_GLF_FUZZED((23.82 + -9010.7131))), float(injectionSwitch.x), bool(true))) / _GLF_IDENTITY(1.0, _GLF_IDENTITY((1.0), mix(float((1.0)), float(_GLF_FUZZED(-3093.8900)), bool(false))) - 0.0)))))), bool(true))) > injectionSwitch.y), true, false, true)))) && true)) && true))), ! (! (_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(1.0, _GLF_IDENTITY(1.0, max(1.0, 1.0))) * (injectionSwitch)).x, mix(float(_GLF_FUZZED(314.427)), float(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat3x2(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(vec3(injectionSwitch, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), vec2(1.0, 0.0))))), (false ? _GLF_FUZZED(vec2(996.678, -27.50)) : vec2(vec3(injectionSwitch, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), vec2(1.0, 0.0)))))))), log(abs(1.0)), abs(0.0), 0.0, determinant(mat3(0.0, _GLF_ZERO(0.0, injectionSwitch.x), _GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(1.0, 1.0, 0.0)), dot(vec3(0.0, 0.0, 1.0), vec3(1.0, 1.0, 0.0))), 1.0, 0.0, 0.0, 1.0, 0.0, 0.0))), (mat3x2(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(vec3(injectionSwitch, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), vec2(1.0, 0.0))))), (false ? _GLF_FUZZED(vec2(996.678, -27.50)) : vec2(vec3(injectionSwitch, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), vec2(1.0, 0.0)))))))), log(abs(1.0)), abs(0.0), 0.0, determinant(mat3(0.0, _GLF_ZERO(0.0, injectionSwitch.x), _GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(1.0, 1.0, 0.0)), dot(vec3(0.0, 0.0, 1.0), vec3(1.0, 1.0, 0.0))), 1.0, 0.0, 0.0, 1.0, 0.0, 0.0)))) * mat3(1.0)))).x, injectionSwitch.x)), injectionSwitch.x))), bool(_GLF_TRUE(_GLF_IDENTITY(_GLF_IDENTITY(true, _GLF_IDENTITY((true), ((true)) && true) || false), ! (! (_GLF_IDENTITY(true, (true) || false)))), (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y))))) > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-1502.8740)), float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)), clamp(injectionSwitch.x, injectionSwitch.x, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0), mix(float(_GLF_FUZZED((23.82 + -9010.7131))), float(injectionSwitch.x), _GLF_IDENTITY(_GLF_IDENTITY(bool(true), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(bool(true), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(bvec3(bvec3(bvec3(bool(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(_GLF_IDENTITY(! (true), bool(bvec3(! (true), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), (! (true)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), bvec3(bvec4(bvec3(bvec3(bvec3(bool(true), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), false))))), false || (_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(bool(true), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(bvec3(bvec3(bvec3(bool(true), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), bvec3(bvec4(bvec3(bvec3(bvec3(bool(true), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), false))))), _GLF_IDENTITY(false || (_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(bool(true), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(bvec3(bvec3(bvec3(bool(true), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), _GLF_IDENTITY(bvec3(bvec4(bvec3(bvec3(bvec3(bool(true), true, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(_GLF_IDENTITY(bool(bool(injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(bool(bool(injectionSwitch.x > injectionSwitch.y)), bool(bvec4(bool(bool(injectionSwitch.x > injectionSwitch.y)), true, true, false)))) && true), ! (! (bool(_GLF_IDENTITY(bool(injectionSwitch.x > injectionSwitch.y), true && (bool(injectionSwitch.x > injectionSwitch.y))))))))))))), false)), bvec3(bvec3(bvec3(bvec4(bvec3(bvec3(bvec3(bool(true), true, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(_GLF_IDENTITY(bool(bool(injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(bool(bool(injectionSwitch.x > injectionSwitch.y)), bool(bvec4(bool(bool(injectionSwitch.x > injectionSwitch.y)), true, true, false)))) && true), ! (! (bool(_GLF_IDENTITY(bool(injectionSwitch.x > injectionSwitch.y), true && (bool(injectionSwitch.x > injectionSwitch.y))))))))))))), false)))))))), (_GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bool(true), false || (bool(true))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(bvec3(bvec3(bvec3(bool(_GLF_IDENTITY(true, (true) && true)), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), bvec3(bvec4(bvec3(bvec3(bvec3(bool(true), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), false))))), false || (_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(bool(true), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(bvec3(bvec3(bvec3(bool(true), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), bvec3(bvec4(bvec3(bvec3(bvec3(bool(true), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), false))))), bool(bvec4(bool(_GLF_IDENTITY(bvec3(bool(true), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(bvec3(bvec3(bvec3(bool(true), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), bvec3(bvec4(bvec3(bvec3(bvec3(bool(true), true, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(4.4), _GLF_FUZZED(-14.05)), bvec2(false, false))).x > injectionSwitch.y))))), false))))), false, true, true))))), ! (! (bool(_GLF_IDENTITY(bvec3(bool(true), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(bvec3(bvec3(bvec3(bool(true), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), bvec3(bvec4(bvec3(bvec3(bvec3(bool(true), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), false))))))))) && true)), (false || (_GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(bool(true), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(_GLF_IDENTITY(bvec3(bvec3(bvec3(bool(true), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), _GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec3(bvec3(bool(true), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), bvec3(bvec3(bvec3(bvec3(bvec3(bool(true), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))), bvec3(bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec3(bvec3(bool(true), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), bvec3(bvec3(bvec3(bvec3(bvec3(bool(true), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))))))), bvec3(bvec4(bvec3(bvec3(bvec3(bool(true), true, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bool(injectionSwitch.x > injectionSwitch.y)), ! (! (bool(bool(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))) || false)))))))))))), false))))), bool(bool(bool(_GLF_IDENTITY(bvec3(bool(true), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(bvec3(bvec3(bvec3(bool(true), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), bvec3(bvec4(bvec3(bvec3(bvec3(bool(true), true, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bool(injectionSwitch.x > injectionSwitch.y)), ! (! (bool(bool(injectionSwitch.x > injectionSwitch.y))))))))))), false)))))))), (_GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(bool(true), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(bvec3(bvec3(bvec3(bool(_GLF_IDENTITY(true, (true) && true)), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), bvec3(bvec4(bvec3(bvec3(bvec3(bool(true), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), false))))), false || (_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(bool(true), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(bvec3(bvec3(bvec3(bool(true), true, _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), bvec3(bvec4(bvec3(bvec3(bvec3(bool(true), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), false))))), bool(bvec4(bool(_GLF_IDENTITY(bvec3(bool(true), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(bvec3(bvec3(bvec3(_GLF_IDENTITY(bool(true), bool(bvec3(bool(true), false, false))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), bvec3(bvec4(bvec3(bvec3(bvec3(bool(true), true, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(4.4), _GLF_FUZZED(-14.05)), _GLF_IDENTITY(bvec2(false, false), bvec2(bvec2(bvec2(false, false)))))).x > injectionSwitch.y))))), false))))), false, true, true))))), ! (! (bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bool(true), (bool(true)) || false), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(bvec3(bvec3(bvec3(bool(true), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), bvec3(bvec4(bvec3(bvec3(bvec3(bool(true), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), false))))))))) && true))) || false))))), false || (bool(true)))))))), bool(true))) > injectionSwitch.y), ! (! ((_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(_GLF_FUZZED(-1502.8740), clamp(_GLF_FUZZED(-1502.8740), _GLF_FUZZED(-1502.8740), _GLF_FUZZED(-1502.8740)))), float(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED((23.82 + -9010.7131))), float(injectionSwitch.x), bool(true)))))), bool(true))) > injectionSwitch.y)))), bool(bvec4((_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-1502.8740)), float(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * 1.0), (true ? _GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) : _GLF_FUZZED(0.4)))) - 0.0), _GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(mix(float(_GLF_FUZZED((23.82 + -9010.7131))), float(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))) - sin(sqrt(vec2(0.0, 0.0)))).x), bool(true)), (mix(float(_GLF_FUZZED((_GLF_IDENTITY(23.82 + -9010.7131, clamp(23.82 + -9010.7131, 23.82 + -9010.7131, 23.82 + -9010.7131))))), float(injectionSwitch.x), _GLF_IDENTITY(bool(true), bool(_GLF_IDENTITY(bvec3(bool(true), false, false), _GLF_IDENTITY(bvec3(bvec4(bvec3(bool(true), false, false), false)), bvec3(bvec3(bvec3(bvec4(bvec3(bool(true), false, false), false)))))))))) / 1.0))))), bool(_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec4(true, false, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), _GLF_IDENTITY(bool(bvec3(bool(bvec4(true, false, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), false, false)), false || (bool(bvec3(bool(bvec4(true, false, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), false, false))))))))) > injectionSwitch.y), true, false, true)))) && true)) && true)))))))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 uint virtual_gid = _GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, 1u * (_GLF_IDENTITY(workgroup_base, (workgroup_base) | 0u) + subgroup_id * subgroup_size)) + _GLF_IDENTITY(subgroup_local_id, max(subgroup_local_id, subgroup_local_id));
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(_GLF_IDENTITY(bvec2((injectionSwitch.x > injectionSwitch.y), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec2(bvec2(bvec2((injectionSwitch.x > injectionSwitch.y), _GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))))))
  return;
 uint next_virtual_gid = workgroup_base + subgroup_id * subgroup_size + _GLF_IDENTITY(((_GLF_IDENTITY(subgroup_local_id + 1, _GLF_IDENTITY(max(subgroup_local_id + 1, subgroup_local_id + 1), (max(subgroup_local_id + 1, _GLF_IDENTITY(subgroup_local_id, ~ (~ (subgroup_local_id))) + 1)) << _GLF_IDENTITY(0u, ~ (~ (0u)))))) % subgroup_size), ~ (~ (((subgroup_local_id + 1) % subgroup_size))));
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, false, true)))))
  return;
 atomicStore(buf[next_virtual_gid], uint(_GLF_IDENTITY(1, ~ (~ (1)))), 4, _GLF_IDENTITY(_GLF_IDENTITY(64, ~ (~ (_GLF_IDENTITY(64, (64) >> 0)))), int(ivec2(_GLF_IDENTITY(64, ~ (~ (_GLF_IDENTITY(64, _GLF_IDENTITY((64), (_GLF_IDENTITY((64), (_GLF_IDENTITY((64), min((64), (64)))) >> 0)) / ((1 << _GLF_IDENTITY(int(0), int(0))) >> _GLF_IDENTITY(int(0), int(0)))) >> 0)))), 0))), 4);
 if(_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, true && (false))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 uint read_1 = atomicLoad(buf[_GLF_IDENTITY(virtual_gid, uint(uvec4(_GLF_IDENTITY(virtual_gid, (false ? _GLF_FUZZED(workgroup_size) : virtual_gid)), 0u, _GLF_IDENTITY(0u, max(0u, 0u)), 0u)))], 4, 64, _GLF_IDENTITY(0, (0) / 1));
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (false)))))) || (false)))) || false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), false))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   return;
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))
    return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec3(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true), false, true))), false || (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))))))), ! (! _GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), bool(bvec2(((injectionSwitch.x > injectionSwitch.y)), true)))))))), _GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), ! (! (_GLF_IDENTITY(! (true), true && (! (true)))))))) && (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x > injectionSwitch.y), ! (! ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true)) || false))))))))), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(vec2(mat3x4(injectionSwitch, 0.0, cos(0.0), 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0)), min(vec2(mat3x4(injectionSwitch, _GLF_IDENTITY(0.0, float(mat2x4(0.0, 1.0, 1.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0, 1.0))), cos(0.0), 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-6763.1044)), bool(false))))), vec2(mat3x4(injectionSwitch, 0.0, cos(0.0), 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0)))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(vec2(mat3x4(injectionSwitch, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(341.804)), float(0.0), bool(true))), cos(0.0), 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0)), min(vec2(mat3x4(injectionSwitch, _GLF_IDENTITY(0.0, float(mat2x4(0.0, 1.0, 1.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0, 1.0))), cos(0.0), 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0)), vec2(mat3x4(injectionSwitch, 0.0, cos(0.0), 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0)))), (_GLF_IDENTITY(vec2(mat3x4(injectionSwitch, 0.0, cos(0.0), 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0)), min(vec2(mat3x4(injectionSwitch, _GLF_IDENTITY(0.0, float(mat2x4(0.0, 1.0, 1.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0, 1.0))), cos(0.0), 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0)), vec2(mat3x4(injectionSwitch, 0.0, cos(0.0), 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0))))) / vec2(1.0, 1.0)), vec2(_GLF_IDENTITY(mat2(_GLF_IDENTITY(_GLF_IDENTITY(vec2(mat3x4(injectionSwitch, 0.0, cos(0.0), 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0)), min(vec2(mat3x4(injectionSwitch, _GLF_IDENTITY(0.0, float(mat2x4(0.0, 1.0, 1.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0, 1.0))), cos(0.0), 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0)), vec2(mat3x4(injectionSwitch, 0.0, cos(0.0), 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, float(mat2x3(0.0, 1.0, determinant(mat2(0.0, 0.0, 1.0, 0.0)), 0.0, 0.0, 1.0))), _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-1632.8986)), float(0.0), bool(true))))), 1.0, 1.0, 1.0, 0.0)))), (_GLF_IDENTITY(vec2(mat3x4(injectionSwitch, 0.0, cos(0.0), 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0)), min(vec2(mat3x4(injectionSwitch, _GLF_IDENTITY(0.0, float(mat2x4(0.0, 1.0, 1.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0, 1.0))), cos(0.0), 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0)), vec2(mat3x4(injectionSwitch, 0.0, cos(0.0), _GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0))))) / vec2(1.0, 1.0)), 0.0, 0.0), transpose(transpose(mat2(_GLF_IDENTITY(_GLF_IDENTITY(vec2(mat3x4(injectionSwitch, 0.0, cos(0.0), 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0)), min(vec2(mat3x4(injectionSwitch, _GLF_IDENTITY(0.0, float(mat2x4(0.0, 1.0, 1.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0, 1.0))), cos(0.0), _GLF_IDENTITY(0.0, (0.0) + determinant(mat4(0.0, 0.0, 1.0, 0.0, _GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, (0.0) / 1.0), 0.0)), 0.0, 0.0, 0.0, 0.0, sin(0.0), 0.0, 1.0, 0.0, 0.0, 0.0, 0.0))), 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0)), vec2(mat3x4(injectionSwitch, 0.0, cos(0.0), 0.0, 0.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(9171.8610)), bool(false))), 1.0, 0.0)))), (_GLF_IDENTITY(vec2(mat3x4(injectionSwitch, 0.0, cos(0.0), 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0)), min(vec2(mat3x4(injectionSwitch, _GLF_IDENTITY(0.0, float(mat2x4(0.0, 1.0, 1.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0, 1.0))), cos(0.0), 0.0, _GLF_IDENTITY(0.0, max(0.0, _GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0, 0.0)))), 0.0, 0.0, 1.0, 1.0, 1.0, 0.0)), vec2(mat3x4(injectionSwitch, 0.0, cos(0.0), 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0))))) / vec2(1.0, 1.0)), 0.0, 0.0)))))), _GLF_IDENTITY(vec2(mat3x4(injectionSwitch, 0.0, cos(0.0), 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0)), min(vec2(mat3x4(injectionSwitch, _GLF_IDENTITY(0.0, float(mat2x4(0.0, 1.0, 1.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0, 1.0))), cos(0.0), _GLF_IDENTITY(0.0, float(vec2(0.0, tan(0.0)))), 0.0, 0.0, _GLF_IDENTITY(0.0, float(mat2(0.0, 0.0, 0.0, 0.0))), 1.0, 1.0, 1.0, 0.0)), vec2(mat3x4(injectionSwitch, 0.0, cos(0.0), 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0)))), _GLF_IDENTITY(vec2(mat3x4(injectionSwitch, 0.0, cos(0.0), 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0)), min(vec2(mat3x4(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(0.0, float(mat2x4(0.0, 1.0, 1.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0, 1.0))), mix(float(_GLF_IDENTITY(0.0, float(mat2x4(0.0, 1.0, 1.0, 0.0, _GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y), 0.0, 0.0, 1.0)))), float(_GLF_FUZZED((_GLF_IDENTITY(- 6.7, min(_GLF_IDENTITY(- 6.7, float(float(- 6.7))), - 6.7))))), bool(false))), cos(0.0), 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0)), vec2(mat3x4(injectionSwitch, 0.0, _GLF_IDENTITY(cos(0.0), min(_GLF_IDENTITY(cos(0.0), mix(float(_GLF_FUZZED(-5994.3772)), float(cos(0.0)), bool(true))), _GLF_IDENTITY(cos(0.0), float(mat3x2(cos(0.0), 0.0, 1.0, 0.0, 0.0, 0.0))))), 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(1.0, (1.0) / 1.0), 1.0, 1.0, 0.0))))))).x, float(_GLF_IDENTITY(mat2x4(injectionSwitch.x, 1.0, 0.0, 1.0, sqrt(1.0), 0.0, exp(0.0), 1.0), transpose(transpose(mat2x4(injectionSwitch.x, _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), 0.0, 1.0, sqrt(1.0), 0.0, exp(0.0), _GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, min(1.0, 1.0))) * exp(0.0)))))))) > _GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)).y), ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-526.709)), float(injectionSwitch.x), bool(true))), float(_GLF_IDENTITY(mat2x4(injectionSwitch.x, 1.0, 0.0, 1.0, sqrt(1.0), 0.0, exp(0.0), 1.0), transpose(transpose(mat2x4(injectionSwitch.x, 1.0, 0.0, 1.0, sqrt(1.0), 0.0, exp(0.0), 1.0)))))) > injectionSwitch.y)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! ((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(0.0), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(-395.311)), bvec2(true, false)))) / vec2(1.0, 1.0)).x, min(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(_GLF_IDENTITY(3.3, (3.3) / 1.0)), _GLF_FUZZED(0.7)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))).x)) > injectionSwitch.y, ! (! (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(0.0), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(-395.311)), bvec2(true, false)))) / vec2(1.0, 1.0)).x, min(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(_GLF_IDENTITY(3.3, (_GLF_IDENTITY(3.3, (_GLF_IDENTITY(3.3, float(mat3x4(3.3, 0.0, 0.0, sin(0.0), 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0)))) - sin(_GLF_ZERO(0.0, injectionSwitch.x)))) / 1.0)), _GLF_FUZZED(0.7)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))).x)) > injectionSwitch.y))))))))), (bool(bool(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! _GLF_IDENTITY((! _GLF_IDENTITY(_GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), (((injectionSwitch.x > injectionSwitch.y))) && true), (_GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), false || (((injectionSwitch.x > injectionSwitch.y))))), ! (! (! (_GLF_IDENTITY(((_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(658.201)), vec2(_GLF_FUZZED(-5189.8212), (injectionSwitch)[1]), bvec2(false, true))).x > injectionSwitch.y)), false || (((injectionSwitch.x > injectionSwitch.y))))))))))) && true)) || false)), ((! _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), ! (! (((injectionSwitch.x > injectionSwitch.y))))), (((injectionSwitch.x > injectionSwitch.y))) && true), (_GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), (((injectionSwitch.x > injectionSwitch.y))) && true)) || false))) && true))))) || false)))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)).y))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     return;
     if(_GLF_DEAD(false))
      return;
    }
   return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
  }
 atomicStore(buf[next_virtual_gid], uint(read_1 + 1), 4, 64, 4);
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
    }
   return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
  }
}
