#version 460
struct _GLF_struct_5 {
 uint virtual_gid;
 int _f0;
} ;

struct _GLF_struct_2 {
 ivec3 _f0;
 mat3x2 _f1;
} ;

struct _GLF_struct_1 {
 mat3 _f0;
 bvec2 _f1;
} ;

struct _GLF_struct_0 {
 bvec3 _f0;
 ivec3 _f1;
 bvec2 _f2;
 vec3 _f3;
 int _f4;
} ;

struct _GLF_struct_3 {
 _GLF_struct_0 _f0;
 bool _f1;
 uvec2 _f2;
 ivec4 _f3;
 _GLF_struct_1 _f4;
 _GLF_struct_2 _f5;
 bool _f6;
} ;

struct _GLF_struct_4 {
 _GLF_struct_3 _f0;
 uint next_virtual_gid;
} ;

layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 uint subgroup_id = gl_SubgroupID;
 uint subgroup_size = gl_SubgroupSize;
 uint subgroup_local_id = gl_SubgroupInvocationID;
 uint num_workgroup = gl_NumWorkGroups.x;
 uint workgroup_size = gl_WorkGroupSize.x;
 uint workgroup_id = gl_WorkGroupID.x;
 uint workgroup_base = workgroup_size * workgroup_id;
 _GLF_struct_5 _GLF_struct_replacement_5 = _GLF_struct_5(workgroup_base + subgroup_id * subgroup_size + subgroup_local_id, 1);
 _GLF_struct_4 _GLF_struct_replacement_4 = _GLF_struct_4(_GLF_struct_3(_GLF_struct_0(bvec3(true), ivec3(1), bvec2(true), vec3(1.0), 1), true, uvec2(1u), ivec4(1), _GLF_struct_1(mat3(1.0), bvec2(true)), _GLF_struct_2(ivec3(1), mat3x2(1.0)), true), workgroup_base + subgroup_id * subgroup_size + ((subgroup_local_id + 1) % subgroup_size));
 atomicStore(buf[_GLF_struct_replacement_4.next_virtual_gid], uint(1), 4, 64, 4);
 uint read_1 = atomicLoad(buf[_GLF_struct_replacement_5.virtual_gid], 4, 64, 0);
 atomicStore(buf[_GLF_struct_replacement_4.next_virtual_gid], uint(read_1 + 1), 4, 64, 4);
}
