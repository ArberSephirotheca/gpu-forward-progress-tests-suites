#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))))
    return;
   return;
  }
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))), ! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))), false || (_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false))))))))))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, (false) || false), (injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_FALSE(_GLF_IDENTITY(false, (false) || false), (injectionSwitch.x > injectionSwitch.y))), ! (_GLF_IDENTITY(! (! (_GLF_FALSE(_GLF_IDENTITY(false, (false) || false), (injectionSwitch.x > injectionSwitch.y)))), _GLF_IDENTITY(bool(bvec3(! (! (_GLF_FALSE(_GLF_IDENTITY(false, (false) || false), (injectionSwitch.x > injectionSwitch.y)))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)), bool(bvec2(_GLF_IDENTITY(bool(bvec3(! (! (_GLF_FALSE(_GLF_IDENTITY(false, (false) || false), (injectionSwitch.x > injectionSwitch.y)))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)), false || (bool(bvec3(! (! (_GLF_FALSE(_GLF_IDENTITY(false, (false) || false), (injectionSwitch.x > injectionSwitch.y)))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)))), false))))))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(injectionSwitch[0], injectionSwitch[1]), max(vec2(injectionSwitch[0], injectionSwitch[1]), vec2(injectionSwitch[0], injectionSwitch[1])))).y) && true)))))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)), false || (bool(bvec3(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))))), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false)))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).y)), false || (_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), bool(bvec3(false, false, true))), (injectionSwitch.x > injectionSwitch.y))))))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(injectionSwitch.x > injectionSwitch.y, true), bvec2(bvec2(bvec2(injectionSwitch.x > injectionSwitch.y, true))))), true && (bool(_GLF_IDENTITY(bvec2(injectionSwitch.x > injectionSwitch.y, true), bvec2(bvec2(bvec2(injectionSwitch.x > injectionSwitch.y, true))))))))))))
      return;
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(false), bool(_GLF_IDENTITY(bvec2(_GLF_DEAD(false), false), bvec2(bvec3(bvec2(_GLF_DEAD(false), false), false))))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(_GLF_IDENTITY(float(mat3x2(injectionSwitch.y, 0.0, 0.0, 0.0, 1.0, 1.0)), 0.0 + (float(mat3x2(injectionSwitch.y, 0.0, 0.0, 0.0, 1.0, 1.0)))), (false ? _GLF_FUZZED(8791.9520) : _GLF_IDENTITY(float(mat3x2(injectionSwitch.y, 0.0, 0.0, 0.0, 1.0, 1.0)), 0.0 + (float(mat3x2(injectionSwitch.y, 0.0, 0.0, 0.0, 1.0, 1.0)))))))))))
      return;
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), true && (_GLF_IDENTITY(false, ! (! (false)))))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false))))) && true))
  {
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         barrier();
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(8.3))), injectionSwitch.y))))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     if(_GLF_DEAD(false))
      barrier();
     return;
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, false, true, false)))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     return;
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, true && (false)), (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, bool(bvec2(false, false))), false, true)))))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-0.1)), float(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x), _GLF_IDENTITY(bool(true), false || (bool(true))))) > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      {
       if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) || false)))), (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && _GLF_IDENTITY((_GLF_FALSE(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), ! (! (_GLF_IDENTITY(false, ! (! (false))))))) && true), false))))), _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))))), bool(bvec3((_GLF_FALSE(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), ! (! (_GLF_IDENTITY(false, ! (! (false))))))) && true), false))))), _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))))), true, false))))))
      {
       if(_GLF_DEAD(false))
        return;
       return;
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY((! (false)), (_GLF_IDENTITY((! (_GLF_IDENTITY(false, bool(bvec4(false, false, true, _GLF_IDENTITY(_GLF_IDENTITY(true, bool(bool(_GLF_IDENTITY(true, bool(bvec2(true, false)))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (true))))))), ! (! ((! (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (false)))))))))))) || false)), ! (! (_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY((! (false)), ! (! ((_GLF_IDENTITY(! (false), bool(bool(! (false)))))))), _GLF_IDENTITY((_GLF_IDENTITY((! _GLF_IDENTITY((false), bool(bool(_GLF_IDENTITY((false), ! (_GLF_IDENTITY(! ((false)), true && (! ((false)))))))))), ! (! _GLF_IDENTITY(((! (false))), ! (! (_GLF_IDENTITY(((! (false))), false || ((_GLF_IDENTITY((! (false)), bool(bool((! (false)))))))))))))) || false, true && ((_GLF_IDENTITY((! (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, true && (false))))) || false))), ! (! ((! (_GLF_IDENTITY(false, true && (false)))))))) || false)))), _GLF_IDENTITY((bool(_GLF_IDENTITY(_GLF_IDENTITY((! (false)), (_GLF_IDENTITY((! (false)), ! (! ((! (false)))))) || false), true && (_GLF_IDENTITY(_GLF_IDENTITY((! (false)), ! (! ((! (false))))), (_GLF_IDENTITY((! (false)), ! (! ((! (false)))))) || false))))), ! (! ((bool(_GLF_IDENTITY(_GLF_IDENTITY((! (false)), (_GLF_IDENTITY((! (false)), ! (! ((! (false)))))) || false), true && (_GLF_IDENTITY(_GLF_IDENTITY((! (false)), ! (! ((! (false))))), (_GLF_IDENTITY((! (false)), ! (! ((! (false)))))) || false)))))))) || false)))))))))
    barrier();
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, false || (false)), (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, false || (false)), (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (_GLF_IDENTITY(false, _GLF_IDENTITY(false || (false), true && _GLF_IDENTITY((_GLF_IDENTITY(false || (false), bool(_GLF_IDENTITY(bvec2(false || (false), true), bvec2(bvec3(bvec2(false || (false), _GLF_IDENTITY(true, ! (! (true)))), true)))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(false, false))) || (false), bool(_GLF_IDENTITY(bvec2(false || (false), true), bvec2(bvec3(bvec2(false || (false), true), true)))))), true && ((_GLF_IDENTITY(false || (false), bool(_GLF_IDENTITY(bvec2(false || (false), true), bvec2(bvec3(bvec2(false || (false), true), true))))))))), (! (_GLF_IDENTITY((_GLF_IDENTITY(false || (false), bool(_GLF_IDENTITY(bvec2(false || (false), true), bvec2(bvec3(bvec2(false || (false), true), true)))))), true && ((_GLF_IDENTITY(false || (false), bool(_GLF_IDENTITY(bvec2(false || (false), _GLF_IDENTITY(true, true && (true))), bvec2(bvec3(bvec2(false || (false), true), true)))))))))) && true))))))), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(! (! (_GLF_IDENTITY(false, _GLF_IDENTITY(false || (false), true && (_GLF_IDENTITY(_GLF_IDENTITY(false || (false), bool(_GLF_IDENTITY(bvec2(false || (false), true), bvec2(bvec3(bvec2(false || (_GLF_IDENTITY(false, ! (! (false)))), true), true))))), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false || (false), bool(_GLF_IDENTITY(bvec2(false || (false), true), bvec2(bvec3(bvec2(false || (false), true), true))))), ! _GLF_IDENTITY((! (_GLF_IDENTITY(_GLF_IDENTITY(false || (false), bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(false || (false), true), bvec2(bvec4(bvec2(false || (false), true), false, false))), bvec2(bvec3(bvec2(false || (false), true), true))))), bool(bvec3(_GLF_IDENTITY(false || (_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bool(_GLF_IDENTITY(bvec2(false || (false), true), bvec2(bvec3(bvec2(false || (false), true), true))))), true, true))))), ! (! (_GLF_IDENTITY((! (_GLF_IDENTITY(_GLF_IDENTITY(false || (false), bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(false || (false), true), bvec2(bvec4(bvec2(false || (false), true), false, false))), bvec2(bvec3(bvec2(false || (false), true), true))))), bool(bvec3(_GLF_IDENTITY(false || (_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bool(_GLF_IDENTITY(bvec2(false || (false), true), bvec2(bvec3(bvec2(false || (false), true), true))))), true, true))))), true && ((! (_GLF_IDENTITY(_GLF_IDENTITY(false || (false), bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(false || (false), true), bvec2(bvec4(bvec2(false || (false), true), false, false))), bvec2(bvec3(bvec2(false || (false), true), true))))), bool(bvec3(_GLF_IDENTITY(false || (_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bool(_GLF_IDENTITY(bvec2(false || (false), true), bvec2(bvec3(bvec2(false || (false), true), true))))), true, true))))))))))), false, false)), bool(bvec2(bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))) || (false), bool(_GLF_IDENTITY(bvec2(false || (false), true), bvec2(bvec3(bvec2(false || (false), true), true))))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false || (false), bool(_GLF_IDENTITY(bvec2(false || (false), true), bvec2(bvec3(bvec2(false || (false), true), true))))), bool(bvec3(_GLF_IDENTITY(false || (false), bool(_GLF_IDENTITY(bvec2(false || (false), true), bvec2(bvec3(bvec2(false || (false), true), true))))), true, true)))))), false, false), bvec3(bvec4(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))) || (false), bool(_GLF_IDENTITY(bvec2(false || (false), true), bvec2(bvec3(bvec2(false || (false), true), true))))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false || (false), bool(_GLF_IDENTITY(bvec2(false || (false), true), bvec2(bvec3(bvec2(false || (false), true), true))))), bool(bvec3(_GLF_IDENTITY(false || (false), bool(_GLF_IDENTITY(bvec2(false || (false), true), bvec2(bvec3(bvec2(false || (false), true), true))))), true, true)))))), false, false), true)))), true))))))))), (! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, _GLF_IDENTITY(false || (false), true && (_GLF_IDENTITY(false || (false), bool(_GLF_IDENTITY(bvec2(false || (false), true), bvec2(bvec3(bvec2(false || (false), true), true))))))))), _GLF_IDENTITY(bool(bool(! (_GLF_IDENTITY(false, _GLF_IDENTITY(false || (false), true && (_GLF_IDENTITY(false || (false), bool(_GLF_IDENTITY(bvec2(false || (false), true), bvec2(bvec3(bvec2(false || (false), true), true))))))))))), ! (! (bool(bool(! (_GLF_IDENTITY(false, _GLF_IDENTITY(false || (false), true && (_GLF_IDENTITY(false || (false), bool(_GLF_IDENTITY(bvec2(false || (false), true), bvec2(bvec3(bvec2(false || (false), true), true))))))))))))))))) && true), false, false)), (bool(bvec3(_GLF_IDENTITY(! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, _GLF_IDENTITY(false || (false), true && (_GLF_IDENTITY(false || (false), bool(_GLF_IDENTITY(bvec2(false || (false), true), bvec2(bvec3(bvec2(false || (false), true), true))))))))), false || (! (_GLF_IDENTITY(false, _GLF_IDENTITY(false || (false), true && (_GLF_IDENTITY(false || (false), bool(_GLF_IDENTITY(bvec2(false || (false), true), bvec2(bvec3(bvec2(false || (false), true), true)))))))))))), (! (! (_GLF_IDENTITY(false, _GLF_IDENTITY(false || (false), true && (_GLF_IDENTITY(false || (false), bool(_GLF_IDENTITY(bvec2(false || _GLF_IDENTITY((false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY((false), bool(bvec4((false), true, true, false))))), true), bvec2(bvec3(bvec2(false || (false), true), true))))))))))) && true), false, false))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true)))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, true && (false))) || false)))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
    }
   return;
  }
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)))))))))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(3742.1814), _GLF_FUZZED((2.7))), _GLF_IDENTITY(bvec2(false, false), bvec2(bvec4(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec4(bvec2(false, false), false, true))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))))).y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true, false))))), ! (! (bool(bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x, float(_GLF_IDENTITY(mat3x2(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(max(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), injectionSwitch), (max(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), injectionSwitch)) / vec2(1.0, 1.0))).x, 1.0, _GLF_IDENTITY(1.0, (1.0) - 0.0), 1.0, sqrt(1.0), determinant(mat3(0.0, _GLF_IDENTITY(_GLF_IDENTITY(exp(0.0), (true ? exp(0.0) : _GLF_FUZZED(vec4(-7318.2039, -6.6, 69.72, 0.4).q))), clamp(exp(0.0), _GLF_IDENTITY(exp(0.0), (exp(0.0)) * _GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0)), dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0)))), exp(0.0))), 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0))), transpose(transpose(mat3x2(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x, 1.0, 1.0, 1.0, sqrt(1.0), determinant(mat3(0.0, exp(0.0), 1.0, 0.0, 0.0, 1.0, 0.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, _GLF_IDENTITY(0.0, (0.0) - 0.0))), _GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-7.5)), bool(false))), 0.0)))))))))), max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x, (true ? _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), mix(vec2(_GLF_FUZZED(7.6), _GLF_FUZZED(45.65)), vec2((_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))[0], (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)), injectionSwitch)), max(injectionSwitch, injectionSwitch)))[1]), bvec2(true, true))), _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))).x : _GLF_FUZZED(-4269.0397))), _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x))) / 1.0) > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, float(mat3(_GLF_IDENTITY(injectionSwitch.y, 0.0 + (injectionSwitch.y)), 1.0, tan(0.0), 0.0, 0.0, 0.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0)))) * 1.0)))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0))) > injectionSwitch.y))))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    barrier();
   if(_GLF_DEAD(false))
    return;
   barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, false || (false)), (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     return;
    }
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(-8.9)))) - 0.0)))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0)))))
      return;
     return;
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0))) - vec2(0.0, 0.0)).x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), false || (! _GLF_IDENTITY((false), ! (! ((false)))))))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), false || (! _GLF_IDENTITY((false), ! (! ((false)))))))), bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), false || (! _GLF_IDENTITY((false), ! (! ((false)))))))), (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), false || (! _GLF_IDENTITY((false), ! (! ((false))))))))) || false), false, true)))))))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch)[1], mix(float((injectionSwitch)[1]), float(_GLF_FUZZED(-282.429)), bool(false)))), vec2(_GLF_FUZZED(774.853), _GLF_FUZZED(88.14)), bvec2(false, false))).x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch)[1], mix(float((injectionSwitch)[1]), float(_GLF_FUZZED(-282.429)), bool(false)))), vec2(_GLF_FUZZED(774.853), _GLF_FUZZED(88.14)), bvec2(false, false))).x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true))))))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   barrier();
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
    barrier();
   barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (bool(bool(false))))), ! (! (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(false, (false) && true))), _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y)) || (bool(bool(false)))))))))), (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(_GLF_IDENTITY(1.0, 1.0 * (1.0)), 1.0) * (injectionSwitch), mix(vec2(_GLF_FUZZED(-9.4), (vec2(_GLF_IDENTITY(1.0, _GLF_IDENTITY(1.0 * (1.0), min(_GLF_IDENTITY(_GLF_IDENTITY(1.0, _GLF_IDENTITY(float(vec4(1.0, 1.0, 0.0, 1.0)), (float(vec4(1.0, 1.0, 0.0, 1.0))) - 0.0)) * (1.0), _GLF_IDENTITY(min(1.0 * (1.0), 1.0 * (1.0)), max(min(1.0 * (1.0), 1.0 * (1.0)), min(1.0 * (1.0), 1.0 * (1.0))))), _GLF_IDENTITY(1.0 * (1.0), mix(float(1.0 * (1.0)), float(_GLF_FUZZED((false ? -25.90 : 32.02))), bool(false)))))), 1.0) * (injectionSwitch))[1]), vec2(_GLF_IDENTITY((vec2(_GLF_IDENTITY(1.0, 1.0 * (1.0)), 1.0) * (injectionSwitch))[0], min((vec2(_GLF_IDENTITY(_GLF_IDENTITY(1.0, 1.0 * (1.0)), (false ? _GLF_FUZZED(-18.78) : _GLF_IDENTITY(1.0, 1.0 * (1.0)))), 1.0) * (injectionSwitch))[0], _GLF_IDENTITY((vec2(_GLF_IDENTITY(1.0, 1.0 * (1.0)), 1.0) * (injectionSwitch))[0], (true ? (vec2(_GLF_IDENTITY(1.0, 1.0 * (1.0)), 1.0) * (injectionSwitch))[0] : _GLF_IDENTITY(_GLF_FUZZED(-4105.6774), 1.0 * (_GLF_FUZZED(-4105.6774))))))), _GLF_FUZZED(87.84)), bvec2(true, _GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, true && (false)), false, true, _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(_GLF_IDENTITY(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))))))) - tan(vec2(0.0, 0.0))).x > _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)), injectionSwitch, injectionSwitch))) + vec2(0.0, 0.0)), injectionSwitch)).y))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))), bool(bvec3(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))), bool(bvec2(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))), true))), false, false))))
      return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))), bool(_GLF_IDENTITY(bvec3(_GLF_DEAD(false), true, false), bvec3(bvec4(bvec3(_GLF_DEAD(false), _GLF_IDENTITY(true, true && (true)), false), true))))), ! (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))), bool(_GLF_IDENTITY(bvec3(_GLF_DEAD(false), true, false), bvec3(bvec4(bvec3(_GLF_DEAD(false), true, false), true)))))), ! (! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))), bool(_GLF_IDENTITY(bvec3(_GLF_DEAD(false), true, false), bvec3(bvec4(bvec3(_GLF_DEAD(false), true, false), true))))))))), (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))), bool(_GLF_IDENTITY(bvec3(_GLF_DEAD(false), true, false), bvec3(bvec4(bvec3(_GLF_DEAD(false), true, false), true)))))), ! (_GLF_IDENTITY(! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))), bool(_GLF_IDENTITY(bvec3(_GLF_DEAD(false), true, false), bvec3(bvec4(bvec3(_GLF_DEAD(false), true, false), true))))))), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))), bool(_GLF_IDENTITY(bvec3(_GLF_DEAD(false), true, false), bvec3(bvec4(bvec3(_GLF_DEAD(false), true, false), true))))))), bool(bvec2(! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))), bool(_GLF_IDENTITY(bvec3(_GLF_DEAD(false), true, false), bvec3(bvec4(bvec3(_GLF_DEAD(false), true, false), true))))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), (bool(_GLF_IDENTITY(! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))), bool(_GLF_IDENTITY(bvec3(_GLF_DEAD(false), true, false), bvec3(bvec4(bvec3(_GLF_DEAD(false), true, false), true))))))), bool(bvec2(! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))), bool(_GLF_IDENTITY(bvec3(_GLF_DEAD(false), true, false), bvec3(bvec4(bvec3(_GLF_DEAD(false), true, false), true))))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))) && true)))))) && true)))) || false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
      return;
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, _GLF_IDENTITY(true, true && _GLF_IDENTITY((true), (_GLF_IDENTITY((true), ! (! ((true))))) && true)) && (false)), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(mat4x3(injectionSwitch, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0))))).y))))), _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y), _GLF_IDENTITY(false, true && (false)) || ((injectionSwitch.x > injectionSwitch.y))))))
      barrier();
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bool(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y), (_GLF_IDENTITY(clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y), max(clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y), clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)))) + 0.0)))))) || false)))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), bool(bool(_GLF_IDENTITY(false, ! (! (false))))))))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], (true ? injectionSwitch[0] : _GLF_FUZZED(-85.99))), injectionSwitch[1])).x) / 1.0) > injectionSwitch.y) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), true && _GLF_IDENTITY((_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(-3368.3531) : injectionSwitch.y)), _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(5242.6582))) > injectionSwitch.y), false || ((_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > injectionSwitch.y))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), (_GLF_IDENTITY((_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(-3368.3531) : _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(-2.2) : _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)))))))), _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > injectionSwitch.y))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), ! (! ((_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(-3368.3531) : injectionSwitch.y)), _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > injectionSwitch.y))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))))) && true))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) || false), (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)))).y, (injectionSwitch.x > injectionSwitch.y) && true)))))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), ! (! (_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), false || ((! (false))))))))))
    barrier();
   return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
    return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, ! (! (false))), true), bvec2(bvec4(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec3(bvec2(false, true), false))), true, true)))), ! (! (bool(bvec2(false, true))))))))), ! (_GLF_IDENTITY(! (_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, ! (! (false))), true), bvec2(bvec4(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec3(bvec2(false, true), false))), true, true)))), ! (! (bool(bvec2(false, true)))))))))), false || (! (_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, ! (! (false))), true), bvec2(bvec4(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec3(bvec2(_GLF_IDENTITY(false, ! (! (false))), true), false))), true, true)))), ! (! (bool(bvec2(false, true)))))))))))))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(_GLF_IDENTITY(mat3x4(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))), 0.0, _GLF_IDENTITY(dot(vec3(0.0, 1.0, 1.0), vec3(1.0, 0.0, 0.0)), _GLF_IDENTITY(dot(vec3(0.0, 1.0, 1.0), vec3(1.0, 0.0, 0.0)), min(dot(vec3(0.0, 1.0, 1.0), vec3(1.0, 0.0, 0.0)), dot(vec3(0.0, 1.0, 1.0), vec3(1.0, 0.0, 0.0))))), 0.0, 0.0, 1.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec3(0.0, 1.0, 1.0), vec3(1.0, 0.0, log(1.0))), dot(vec3(0.0, 1.0, 1.0), vec3(1.0, 0.0, log(1.0)))), 1.0, 1.0), (mat3x4(injectionSwitch, 0.0, _GLF_IDENTITY(_GLF_IDENTITY(dot(vec3(0.0, 1.0, 1.0), vec3(1.0, 0.0, 0.0)), float(mat2(dot(vec3(0.0, 1.0, 1.0), vec3(1.0, 0.0, 0.0)), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), 1.0))), dot(vec3(0.0, 1.0, 1.0), vec3(1.0, 0.0, 0.0))), 0.0, 0.0, 1.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec3(0.0, 1.0, 1.0), vec3(1.0, 0.0, log(1.0))), dot(vec3(0.0, 1.0, 1.0), vec3(1.0, 0.0, log(1.0)))), 1.0, 1.0)) - mat3x4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))), (_GLF_IDENTITY(vec2(_GLF_IDENTITY(mat3x4(injectionSwitch, 0.0, _GLF_IDENTITY(dot(vec3(0.0, 1.0, 1.0), vec3(1.0, 0.0, 0.0)), dot(vec3(0.0, 1.0, 1.0), vec3(1.0, 0.0, 0.0))), 0.0, 0.0, 1.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec3(_GLF_IDENTITY(0.0, _GLF_IDENTITY(float(mat2x3(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 1.0, 0.0, 1.0, 0.0, 0.0)), (false ? _GLF_FUZZED(1.4) : float(mat2x3(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 1.0, 0.0, 1.0, 0.0, 0.0))))), 1.0, 1.0), vec3(1.0, 0.0, log(_GLF_IDENTITY(1.0, (1.0) * determinant(mat3(1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0)))))), dot(vec3(0.0, 1.0, 1.0), vec3(1.0, 0.0, log(1.0)))), 1.0, _GLF_IDENTITY(1.0, min(1.0, 1.0))), (mat3x4(injectionSwitch, 0.0, _GLF_IDENTITY(_GLF_IDENTITY(dot(vec3(0.0, 1.0, 1.0), _GLF_IDENTITY(vec3(1.0, 0.0, 0.0), mat3(1.0) * (vec3(1.0, 0.0, 0.0)))), min(dot(vec3(0.0, 1.0, 1.0), _GLF_IDENTITY(vec3(1.0, 0.0, 0.0), mat3(1.0) * (vec3(1.0, 0.0, 0.0)))), dot(vec3(0.0, 1.0, 1.0), _GLF_IDENTITY(vec3(1.0, 0.0, 0.0), mat3(1.0) * (vec3(1.0, 0.0, 0.0)))))), dot(vec3(0.0, 1.0, 1.0), vec3(1.0, 0.0, 0.0))), 0.0, 0.0, 1.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec3(0.0, 1.0, 1.0), vec3(1.0, 0.0, log(1.0))), dot(vec3(0.0, 1.0, 1.0), vec3(1.0, 0.0, log(1.0)))), 1.0, 1.0)) - mat3x4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))), mat2(1.0) * (vec2(_GLF_IDENTITY(mat3x4(injectionSwitch, 0.0, _GLF_IDENTITY(dot(vec3(0.0, 1.0, 1.0), vec3(1.0, 0.0, 0.0)), dot(vec3(0.0, 1.0, 1.0), vec3(1.0, 0.0, 0.0))), 0.0, 0.0, 1.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec3(_GLF_IDENTITY(0.0, _GLF_IDENTITY(float(mat2x3(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 1.0, 0.0, 1.0, 0.0, 0.0)), (false ? _GLF_FUZZED(1.4) : float(mat2x3(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 1.0, 0.0, 1.0, 0.0, 0.0))))), 1.0, 1.0), vec3(1.0, 0.0, log(_GLF_IDENTITY(1.0, (1.0) * determinant(mat3(1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0)))))), dot(vec3(0.0, 1.0, 1.0), vec3(1.0, 0.0, log(1.0)))), 1.0, _GLF_IDENTITY(1.0, min(1.0, 1.0))), (mat3x4(injectionSwitch, 0.0, _GLF_IDENTITY(_GLF_IDENTITY(dot(vec3(0.0, 1.0, 1.0), _GLF_IDENTITY(vec3(1.0, 0.0, 0.0), mat3(1.0) * (vec3(1.0, 0.0, 0.0)))), min(dot(vec3(0.0, 1.0, 1.0), _GLF_IDENTITY(vec3(1.0, 0.0, 0.0), mat3(1.0) * (vec3(1.0, 0.0, 0.0)))), dot(vec3(0.0, 1.0, 1.0), _GLF_IDENTITY(vec3(1.0, 0.0, 0.0), mat3(1.0) * (vec3(1.0, 0.0, 0.0)))))), dot(vec3(0.0, 1.0, 1.0), vec3(1.0, 0.0, 0.0))), 0.0, 0.0, 1.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec3(0.0, 1.0, 1.0), vec3(1.0, 0.0, log(1.0))), dot(vec3(0.0, 1.0, 1.0), vec3(1.0, 0.0, log(1.0)))), 1.0, 1.0)) - mat3x4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)))))) / vec2(1.0, 1.0))).x), _GLF_IDENTITY(_GLF_IDENTITY(float(_GLF_FUZZED(-5.0)), (true ? _GLF_IDENTITY(_GLF_IDENTITY(float(_GLF_FUZZED(-5.0)), _GLF_IDENTITY(min(_GLF_IDENTITY(float(_GLF_FUZZED(-5.0)), clamp(_GLF_IDENTITY(float(_GLF_FUZZED(-5.0)), max(float(_GLF_FUZZED(-5.0)), float(_GLF_FUZZED(-5.0)))), float(_GLF_FUZZED(-5.0)), float(_GLF_FUZZED(-5.0)))), _GLF_IDENTITY(float(_GLF_FUZZED(-5.0)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(cosh(-396.925)) : float(_GLF_FUZZED(-5.0))))), min(min(_GLF_IDENTITY(float(_GLF_FUZZED(-5.0)), clamp(_GLF_IDENTITY(float(_GLF_FUZZED(-5.0)), max(float(_GLF_FUZZED(-5.0)), float(_GLF_FUZZED(-5.0)))), float(_GLF_FUZZED(-5.0)), float(_GLF_FUZZED(-5.0)))), _GLF_IDENTITY(float(_GLF_FUZZED(-5.0)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(cosh(-396.925)) : float(_GLF_FUZZED(-5.0))))), _GLF_IDENTITY(min(_GLF_IDENTITY(float(_GLF_FUZZED(-5.0)), clamp(_GLF_IDENTITY(float(_GLF_FUZZED(-5.0)), max(float(_GLF_FUZZED(-5.0)), float(_GLF_FUZZED(-5.0)))), float(_GLF_FUZZED(-5.0)), float(_GLF_FUZZED(-5.0)))), _GLF_IDENTITY(float(_GLF_FUZZED(-5.0)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(cosh(-396.925)) : float(_GLF_FUZZED(-5.0))))), mix(float(_GLF_FUZZED(55.41)), float(min(_GLF_IDENTITY(float(_GLF_FUZZED(-5.0)), clamp(_GLF_IDENTITY(float(_GLF_FUZZED(-5.0)), max(float(_GLF_FUZZED(-5.0)), float(_GLF_FUZZED(-5.0)))), float(_GLF_FUZZED(-5.0)), float(_GLF_FUZZED(-5.0)))), _GLF_IDENTITY(float(_GLF_FUZZED(-5.0)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(cosh(-396.925)) : float(_GLF_FUZZED(-5.0)))))), bool(true)))))), 0.0 + (float(_GLF_FUZZED(-5.0)))) : _GLF_FUZZED(-62.94))), min(float(_GLF_FUZZED(-5.0)), _GLF_IDENTITY(float(_GLF_FUZZED(-5.0)), _GLF_IDENTITY(min(float(_GLF_FUZZED(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(-5.0, float(float(-5.0))), (-5.0) * 1.0), 1.0 * _GLF_IDENTITY(_GLF_IDENTITY((-5.0), float(mat2x3(_GLF_IDENTITY((-5.0), (false ? _GLF_FUZZED(-42.36) : (-5.0))), 1.0, 1.0, 1.0, 1.0, 1.0))), (true ? _GLF_IDENTITY((-5.0), float(mat2x3(_GLF_IDENTITY((-5.0), (false ? _GLF_FUZZED(-42.36) : (-5.0))), 1.0, 1.0, 1.0, 1.0, 1.0))) : _GLF_FUZZED(-69.46)))))), float(_GLF_FUZZED(-5.0))), _GLF_IDENTITY(_GLF_IDENTITY((min(_GLF_IDENTITY(float(_GLF_FUZZED(-5.0)), (float(_GLF_FUZZED(-5.0))) / 1.0), float(_GLF_FUZZED(-5.0)))), mix(float(_GLF_FUZZED(0.9)), float((min(_GLF_IDENTITY(float(_GLF_FUZZED(-5.0)), (float(_GLF_FUZZED(-5.0))) / 1.0), float(_GLF_FUZZED(-5.0))))), bool(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, bool(bvec2(injectionSwitch.x < injectionSwitch.y, false)))))))), float(_GLF_IDENTITY(mat4(_GLF_IDENTITY((min(_GLF_IDENTITY(float(_GLF_FUZZED(-5.0)), (float(_GLF_FUZZED(-5.0))) / 1.0), float(_GLF_FUZZED(-5.0)))), mix(float(_GLF_FUZZED(0.9)), float((min(_GLF_IDENTITY(float(_GLF_FUZZED(-5.0)), (float(_GLF_FUZZED(-5.0))) / 1.0), float(_GLF_FUZZED(-5.0))))), bool(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, bool(bvec2(injectionSwitch.x < injectionSwitch.y, false)))))))), round(length(normalize(vec2(1.0, 1.0)))), tan(0.0), 0.0, 0.0, 0.0, 1.0, sin(0.0), 0.0, 1.0, 1.0, cos(0.0), 0.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0), (_GLF_IDENTITY(mat4(_GLF_IDENTITY((min(_GLF_IDENTITY(float(_GLF_FUZZED(-5.0)), (float(_GLF_FUZZED(-5.0))) / 1.0), float(_GLF_FUZZED(-5.0)))), mix(float(_GLF_FUZZED(0.9)), float((min(_GLF_IDENTITY(float(_GLF_FUZZED(-5.0)), (float(_GLF_FUZZED(-5.0))) / 1.0), float(_GLF_FUZZED(-5.0))))), bool(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, bool(bvec2(injectionSwitch.x < injectionSwitch.y, false)))))))), round(length(normalize(vec2(1.0, 1.0)))), tan(0.0), 0.0, 0.0, 0.0, 1.0, sin(0.0), 0.0, 1.0, 1.0, cos(0.0), 0.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0), (false ? _GLF_FUZZED(mat4(3843.5893, -9174.4497, 9.2, 4.6, 0.8, -838.029, 7390.3085, 320.872, -7.3, -3.2, 5.5, 0.8, 4.3, 4.3, -0.3, -1.8)) : mat4(_GLF_IDENTITY((min(_GLF_IDENTITY(float(_GLF_FUZZED(-5.0)), (float(_GLF_FUZZED(-5.0))) / 1.0), float(_GLF_FUZZED(-5.0)))), mix(float(_GLF_FUZZED(0.9)), float((min(_GLF_IDENTITY(float(_GLF_FUZZED(-5.0)), (float(_GLF_FUZZED(-5.0))) / 1.0), float(_GLF_FUZZED(-5.0))))), bool(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, bool(bvec2(injectionSwitch.x < injectionSwitch.y, false)))))))), round(length(normalize(vec2(1.0, 1.0)))), tan(0.0), 0.0, 0.0, 0.0, 1.0, sin(0.0), 0.0, 1.0, 1.0, cos(0.0), 0.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0)))) / mat4(1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0)))) / _GLF_IDENTITY(1.0, clamp(1.0, 1.0, _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)))))))), bool(false))), _GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED((false ? -57.27 : 638.446))), float(injectionSwitch.x), bool(true))))) > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, false)))))
        return;
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, false)), bool(bool(bool(bvec2(false, false)))))), (injectionSwitch.x > injectionSwitch.y)), bool(bool(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, false)), bool(bool(bool(bvec2(false, false)))))), (injectionSwitch.x > injectionSwitch.y)))))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true)))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
          return;
         if(_GLF_DEAD(false))
          barrier();
         return;
        }
       barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(false))
          return;
         barrier();
         if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bool(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
          return;
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
        }
      }
     barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(_GLF_IDENTITY(bvec3(injectionSwitch.x > injectionSwitch.y, false, true), bvec3(bvec4(bvec3(injectionSwitch.x > injectionSwitch.y, false, true), true)))))), ! (_GLF_IDENTITY(! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(_GLF_IDENTITY(bvec3(injectionSwitch.x > injectionSwitch.y, false, true), bvec3(bvec4(bvec3(injectionSwitch.x > injectionSwitch.y, false, true), true))))))), ! (! (! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(_GLF_IDENTITY(bvec3(injectionSwitch.x > injectionSwitch.y, false, true), bvec3(bvec4(bvec3(injectionSwitch.x > injectionSwitch.y, false, true), true))))))))))))))))))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(-75.02)))))))
    return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  barrier();
 uint num_workgroup = _GLF_IDENTITY(gl_NumWorkGroups, _GLF_IDENTITY((gl_NumWorkGroups) | (_GLF_IDENTITY(gl_NumWorkGroups, uvec3(uvec3(_GLF_IDENTITY(gl_NumWorkGroups, min(_GLF_IDENTITY(gl_NumWorkGroups, max(gl_NumWorkGroups, gl_NumWorkGroups)), gl_NumWorkGroups)))))), ((gl_NumWorkGroups) | (gl_NumWorkGroups)) | ((gl_NumWorkGroups) | (gl_NumWorkGroups)))).x;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(-2720.9530) : injectionSwitch.x))), _GLF_IDENTITY(float(_GLF_FUZZED(-0.2)), float(mat4x3(_GLF_IDENTITY(float(_GLF_FUZZED(_GLF_IDENTITY(-0.2, (_GLF_IDENTITY(-0.2, clamp(-0.2, -0.2, -0.2))) / cos(0.0)))), (float(_GLF_FUZZED(-0.2))) - 0.0), 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, abs(0.0), 0.0, sqrt(log(1.0)), 1.0, 0.0))), bool(false))) > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y, min(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y)))), ! (! (_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, float(_GLF_IDENTITY(mat3(_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(5.8))), 1.0, 1.0, 0.0, abs(0.0), 1.0, 1.0, determinant(mat4(0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)), 0.0), transpose(transpose(mat3(_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(5.8))), 1.0, 1.0, 0.0, abs(0.0), 1.0, 1.0, determinant(mat4(0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)), 0.0)))))), mix(float(_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(false, ! (! (false))) ? _GLF_FUZZED(-2720.9530) : injectionSwitch.x))), _GLF_IDENTITY(float(_GLF_FUZZED(-0.2)), float(mat4x3(_GLF_IDENTITY(float(_GLF_FUZZED(-0.2)), (float(_GLF_FUZZED(-0.2))) - 0.0), 0.0, 1.0, _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(asin(2.8)) : _GLF_IDENTITY(1.0, max(1.0, 1.0)))), 1.0, 0.0, 1.0, _GLF_IDENTITY(abs(0.0), max(abs(0.0), abs(0.0))), 0.0, sqrt(log(1.0)), 1.0, 0.0))), bool(false))) > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y, min(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y)))))))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y))))))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, false || (false))), false || (bool(_GLF_IDENTITY(false, false || (false)))))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY((false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || ((false))) && _GLF_IDENTITY(true, true && (true))), true && (false))))
        barrier();
       return;
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), true && (_GLF_IDENTITY(false, (false) && true)))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)))))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(mat2x4(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), sqrt(0.0), 1.0, 1.0, 0.0, 0.0, 1.0))))).x > injectionSwitch.y))), ! (! ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(mat2x4(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), sqrt(0.0), 1.0, 1.0, 0.0, 0.0, 1.0))))).x > injectionSwitch.y)))))))))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
      barrier();
     return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            return;
           return;
          }
         return;
         if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
          return;
        }
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(bool(false))))))))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), true && (! (false)))))))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        return;
      }
     return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), bool(bvec2(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), true))), true)))), (bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) || false)))), (bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) || false))))) && true))))) && true)), bool(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bool(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(_GLF_IDENTITY(bvec3(injectionSwitch.x > injectionSwitch.y, false, true), bvec3(bvec3(bvec3(injectionSwitch.x > injectionSwitch.y, false, true)))))))))))), (bool(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))) && true)), (bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bool(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(_GLF_IDENTITY(bvec3(injectionSwitch.x > injectionSwitch.y, false, true), bvec3(bvec3(bvec3(injectionSwitch.x > injectionSwitch.y, false, true)))))))))))), (bool(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))) && true))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))))
      return;
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || false))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
      return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), false || ((! (false))))), bool(bvec4(false, false, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(_GLF_IDENTITY(1.0, min(1.0, _GLF_IDENTITY(1.0, min(1.0, 1.0)))), 1.0)).x > injectionSwitch.y), ! (! ((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(_GLF_IDENTITY(1.0, min(1.0, _GLF_IDENTITY(1.0, min(1.0, 1.0)))), 1.0)).x > injectionSwitch.y))))), true && (_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(false, true && _GLF_IDENTITY((false), ! (! ((false))))) ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)).x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y))))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), (_GLF_IDENTITY(bool(bool(false)), ! (! (bool(bool(false)))))) && true))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, ! (! (false))), false), bvec2(bvec2(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), bool(bvec2(_GLF_IDENTITY(! (! (false)), true && (! (! (false)))), true)))), false), bvec2(bvec2(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, ! (! (false))), false), bvec2(bvec3(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, ! (! (false))), false), bvec2(bvec3(bvec2(_GLF_IDENTITY(false, ! (! (false))), false), true))), false)))))))))))))
      return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4((injectionSwitch.x > injectionSwitch.y), true, true, true))))), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4((injectionSwitch.x > injectionSwitch.y), true, true, true)))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), ! (! (_GLF_IDENTITY(false, (false) && true)))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), ! (! (_GLF_IDENTITY(false, (false) && true)))), bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), ! (! (_GLF_IDENTITY(false, (false) && true)))), bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), ! (! (_GLF_IDENTITY(false, (false) && true)))), true))), false, false)))), (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), ! (! (_GLF_IDENTITY(false, (false) && true)))), bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), ! (! (_GLF_IDENTITY(false, (false) && true)))), bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), ! (! (_GLF_IDENTITY(false, (false) && true)))), true))), false, false))))) || false)))))
    {
     if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(true, _GLF_IDENTITY(false || (true), bool(bool(false || (true))))) && (injectionSwitch.x > injectionSwitch.y))))), _GLF_IDENTITY(bool(bvec3(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y))))), false, false)), ! (_GLF_IDENTITY(! (bool(bvec3(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y))))), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y))))), true && (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y)))), (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), true && (injectionSwitch.x > injectionSwitch.y))))) && true))))) || false, false || ((_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y))))), true && (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y)))), (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(max(injectionSwitch.y, injectionSwitch.y), float(mat4(_GLF_IDENTITY(max(injectionSwitch.y, injectionSwitch.y), float(vec3(max(injectionSwitch.y, injectionSwitch.y), 1.0, 1.0))), length(0.0), 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, determinant(mat3(1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0)), round(length(normalize(cos(0.0)))), 0.0, 1.0, 1.0, sin(0.0), 1.0, sqrt(0.0))))), true && (injectionSwitch.x > injectionSwitch.y))))) && true))))) || false))), false, false))), ! (! (! (bool(bvec3(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y))))), _GLF_IDENTITY(false, bool(bvec2(false, true))), false))))))))), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(bool(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (bool(bool(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y)))))))))), true), bvec2(bvec3(bvec2(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], min(injectionSwitch[0], injectionSwitch[0])), injectionSwitch[1])).y))), _GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, (false) || false), _GLF_IDENTITY(false, (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, true, true)), bool(bvec4(bool(bvec3(false, true, true)), true, false, true))))) || false), false, true))) || (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], _GLF_IDENTITY(min(injectionSwitch[1], injectionSwitch[1]), mix(float(_GLF_IDENTITY(min(injectionSwitch[1], injectionSwitch[1]), clamp(min(injectionSwitch[1], injectionSwitch[1]), min(injectionSwitch[1], injectionSwitch[1]), min(injectionSwitch[1], injectionSwitch[1])))), float(_GLF_FUZZED(138.412)), bool(false)))))).y))))), true), true))))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, true && _GLF_IDENTITY((_GLF_IDENTITY(false, (false) || _GLF_IDENTITY(false, bool(bvec3(false, _GLF_IDENTITY(true, _GLF_IDENTITY(true && (true), bool(bool(true && (true))))), true))))), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY((_GLF_IDENTITY(false, (false) || _GLF_IDENTITY(false, bool(bvec3(false, _GLF_IDENTITY(true, _GLF_IDENTITY(true && (true), bool(bool(true && (true))))), true))))), ! (_GLF_IDENTITY(! ((_GLF_IDENTITY(false, (false) || _GLF_IDENTITY(false, bool(bvec3(false, _GLF_IDENTITY(true, _GLF_IDENTITY(true && (true), bool(bool(true && (true))))), true)))))), true && (! ((_GLF_IDENTITY(false, (false) || _GLF_IDENTITY(false, bool(bvec3(false, _GLF_IDENTITY(true, _GLF_IDENTITY(true && (true), bool(bool(true && (true))))), true)))))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, true)), ! (! (bool(bvec4(_GLF_IDENTITY((_GLF_IDENTITY(false, (false) || _GLF_IDENTITY(false, bool(bvec3(false, _GLF_IDENTITY(true, _GLF_IDENTITY(true && (true), bool(bool(true && (true))))), true))))), ! (_GLF_IDENTITY(! ((_GLF_IDENTITY(false, (false) || _GLF_IDENTITY(false, bool(bvec3(false, _GLF_IDENTITY(true, _GLF_IDENTITY(true && (true), bool(bool(true && (true))))), true)))))), true && (! ((_GLF_IDENTITY(false, (false) || _GLF_IDENTITY(false, bool(bvec3(false, _GLF_IDENTITY(true, _GLF_IDENTITY(true && (true), bool(bool(true && (true))))), true)))))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, true)))))))))
        return;
       barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x))) / sqrt(1.0)) > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false), bool(bvec2(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(-8.5) : injectionSwitch.x)) > injectionSwitch.y)), true)))))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(_GLF_IDENTITY(bool(injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(bool(injectionSwitch.x > injectionSwitch.y), false || (bool(injectionSwitch.x > injectionSwitch.y)))) && true, ! (_GLF_IDENTITY(! (_GLF_IDENTITY((_GLF_IDENTITY(bool(injectionSwitch.x > injectionSwitch.y), false || (bool(injectionSwitch.x > injectionSwitch.y)))) && true, ! (! ((_GLF_IDENTITY(bool(injectionSwitch.x > injectionSwitch.y), false || (bool(injectionSwitch.x > injectionSwitch.y)))) && true)))), (_GLF_IDENTITY(! (_GLF_IDENTITY((_GLF_IDENTITY(bool(injectionSwitch.x > injectionSwitch.y), false || (bool(injectionSwitch.x > injectionSwitch.y)))) && true, ! (! ((_GLF_IDENTITY(bool(injectionSwitch.x > injectionSwitch.y), false || (bool(injectionSwitch.x > injectionSwitch.y)))) && true)))), (! (_GLF_IDENTITY((_GLF_IDENTITY(bool(injectionSwitch.x > injectionSwitch.y), false || (bool(injectionSwitch.x > injectionSwitch.y)))) && true, ! (! ((_GLF_IDENTITY(bool(injectionSwitch.x > injectionSwitch.y), false || (bool(injectionSwitch.x > injectionSwitch.y)))) && true))))) && true)) || false))), false || ((_GLF_IDENTITY(bool(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(-54.67) : injectionSwitch.y))), false || (bool(injectionSwitch.x > injectionSwitch.y)))) && true)))))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > injectionSwitch.y, true && (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > injectionSwitch.y))))))
      return;
     barrier();
    }
  }
 uint workgroup_size = _GLF_IDENTITY(gl_WorkGroupSize.x, (true ? gl_WorkGroupSize.x : _GLF_FUZZED((+ 108994u))));
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), false, false, false))), false || (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).y))))))))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), (false) && true)))
  barrier();
 uint workgroup_id = gl_WorkGroupID.x;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(false, false, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), bool(bool(false)))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))))
      return;
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(_GLF_IDENTITY(bvec3((injectionSwitch.x > injectionSwitch.y), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false), _GLF_IDENTITY(bvec3(bvec3(bvec3((injectionSwitch.x > injectionSwitch.y), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))), bvec3(bvec4(bvec3(bvec3(bvec3((injectionSwitch.x > injectionSwitch.y), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false))), false))), true)))))))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         barrier();
        }
       return;
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * 1.0), clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         return;
        }
       barrier();
      }
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, false || (false)), false, false, false)))))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), ! (! (_GLF_IDENTITY(false, (false) || false))))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         barrier();
        }
       barrier();
      }
     if(_GLF_DEAD(false))
      return;
     barrier();
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   barrier();
   if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))))))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (injectionSwitch.x > injectionSwitch.y))))))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false)))))
        barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       return;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, 0.0 + (injectionSwitch.y))))))))
          return;
         return;
        }
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(79.98)), bool(false))) > injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) && true))))))))
        {
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(false))
          return;
         return;
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if(_GLF_DEAD(false))
          return;
        }
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)))))))))
      barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (_GLF_IDENTITY(! (! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), true && (! (! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))), ! (! (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, (false) || false), (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * abs(vec2(1.0, 1.0)))) * vec2(1.0, 1.0)).y))))))))))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false)))))))
      return;
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(vec3(injectionSwitch, 1.0))).x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, true && (false)), (_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)))[1], max((injectionSwitch)[1], (injectionSwitch)[1]))), vec2(_GLF_FUZZED(8.5), _GLF_FUZZED(-5795.2016)), bvec2(false, false))).x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
    return;
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y) + _GLF_IDENTITY(0.0, (0.0) / 1.0)))), _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))))))))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, false)))))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         return;
        }
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(vec2(-65.15, 8.0)), _GLF_IDENTITY(mat2(1.0) * (_GLF_IDENTITY(_GLF_FUZZED(vec2(-65.15, 8.0)), min(_GLF_FUZZED(vec2(-65.15, 8.0)), _GLF_FUZZED(vec2(-65.15, 8.0))))), _GLF_IDENTITY((mat2(1.0) * (_GLF_FUZZED(vec2(-65.15, 8.0)))), clamp((mat2(1.0) * (_GLF_FUZZED(vec2(-65.15, 8.0)))), (mat2(1.0) * (_GLF_FUZZED(vec2(-65.15, 8.0)))), (mat2(1.0) * (_GLF_FUZZED(vec2(-65.15, 8.0)))))) / vec2(1.0, 1.0))), vec2(mat2x4(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(vec2(-65.15, 8.0)), _GLF_IDENTITY(mat2(1.0) * (_GLF_FUZZED(vec2(-65.15, 8.0))), (mat2(1.0) * (_GLF_FUZZED(vec2(-65.15, 8.0)))) / vec2(1.0, 1.0))), min(_GLF_IDENTITY(_GLF_FUZZED(vec2(-65.15, 8.0)), _GLF_IDENTITY(mat2(1.0) * (_GLF_FUZZED(vec2(-65.15, 8.0))), _GLF_IDENTITY((mat2(1.0) * (_GLF_FUZZED(vec2(-65.15, 8.0)))), clamp((mat2(1.0) * (_GLF_FUZZED(vec2(-65.15, 8.0)))), (mat2(1.0) * (_GLF_FUZZED(vec2(-65.15, 8.0)))), (mat2(1.0) * (_GLF_FUZZED(vec2(-65.15, 8.0)))))) / vec2(1.0, 1.0))), _GLF_IDENTITY(_GLF_FUZZED(_GLF_IDENTITY(vec2(-65.15, 8.0), min(vec2(-65.15, 8.0), _GLF_IDENTITY(vec2(-65.15, 8.0), (false ? _GLF_FUZZED(vec2(-82.99, -709.254)) : vec2(-65.15, 8.0)))))), _GLF_IDENTITY(mat2(1.0) * (_GLF_FUZZED(vec2(-65.15, 8.0))), (mat2(1.0) * (_GLF_FUZZED(vec2(-65.15, 8.0)))) / _GLF_IDENTITY(vec2(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0))) - 0.0), 1.0), (false ? _GLF_FUZZED(injectionSwitch) : vec2(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0))) - 0.0), 1.0))))))), 1.0, 0.0, 1.0, 0.0, _GLF_IDENTITY(_GLF_IDENTITY(dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(0.0, 1.0, 0.0, 0.0)), dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(0.0, 1.0, 0.0, 0.0))), _GLF_IDENTITY(float(vec3(_GLF_IDENTITY(dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(0.0, 1.0, 0.0, 0.0)), dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(0.0, 1.0, 0.0, 0.0))), sqrt(tan(0.0)), log(1.0))), (float(vec3(_GLF_IDENTITY(dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(0.0, 1.0, 0.0, 0.0)), dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(0.0, 1.0, 0.0, 0.0))), sqrt(tan(0.0)), log(1.0)))) - 0.0)), 0.0))))).y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), false || (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), false || ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))))))))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            return;
           return;
          }
         return;
         if(_GLF_DEAD(false))
          barrier();
        }
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         return;
         if(_GLF_DEAD(false))
          barrier();
        }
       barrier();
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(false, true && (false)), true, true, true)), bool(bvec4(bool(bvec4(false, true, _GLF_IDENTITY(true, ! (! (true))), true)), false, true, false))))))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
        return;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat3x4(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), 1.0, sqrt(1.0), sqrt(0.0), 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0)), (vec2(mat3x4(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), 1.0, sqrt(1.0), sqrt(0.0), 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0))) / _GLF_IDENTITY(vec2(1.0, 1.0), (vec2(1.0, 1.0)) - vec2(0.0, 0.0)))).x > injectionSwitch.y), _GLF_IDENTITY(bool(bvec3((_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat3x4(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), 1.0, sqrt(1.0), sqrt(0.0), 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0)), (vec2(mat3x4(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[_GLF_IDENTITY(0, clamp(_GLF_IDENTITY(0, (0) << 0), 0, 0))], injectionSwitch[1])), 1.0, sqrt(1.0), sqrt(0.0), 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0))) / vec2(1.0, 1.0))).x > injectionSwitch.y), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(bool(bvec3((_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat3x4(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), 1.0, sqrt(1.0), sqrt(0.0), 1.0, 1.0, 1.0, 1.0, 0.0, _GLF_IDENTITY(1.0, (1.0) - 0.0), 0.0)), (vec2(mat3x4(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), 1.0, sqrt(1.0), sqrt(0.0), 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0))) / vec2(1.0, 1.0))).x > injectionSwitch.y), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))), true && (bool(bool(bvec3((_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat3x4(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), 1.0, sqrt(1.0), sqrt(0.0), 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0)), (vec2(mat3x4(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), 1.0, sqrt(1.0), sqrt(0.0), 1.0, 1.0, 1.0, 1.0, 0.0, _GLF_IDENTITY(1.0, min(1.0, 1.0)), 0.0))) / vec2(1.0, 1.0))).x > injectionSwitch.y), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)))))), (bool(_GLF_IDENTITY(bool(bool(bvec3((_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat3x4(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), 1.0, sqrt(1.0), sqrt(0.0), 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0)), (vec2(mat3x4(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), 1.0, sqrt(1.0), _GLF_IDENTITY(sqrt(0.0), mix(float(_GLF_IDENTITY(sqrt(0.0), min(sqrt(0.0), sqrt(0.0)))), float(_GLF_FUZZED(2101.2200)), bool(false))), 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0))) / vec2(1.0, 1.0))).x > injectionSwitch.y), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))), true && (bool(bool(bvec3((_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(vec2(mat3x4(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), 1.0, sqrt(1.0), sqrt(_GLF_IDENTITY(0.0, min(0.0, 0.0))), 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0)), (vec2(mat3x4(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), 1.0, sqrt(1.0), sqrt(_GLF_IDENTITY(0.0, min(0.0, 0.0))), 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0))) / vec2(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y))), (vec2(mat3x4(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), max(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))), 1.0, sqrt(1.0), sqrt(0.0), 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0))) / vec2(1.0, 1.0))).x > injectionSwitch.y), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))))))) && true))))))
          return;
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, (false) && true)), false || (! (_GLF_IDENTITY(false, (false) && true))))))))
          {
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
         return;
         if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec4(_GLF_DEAD(false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, false)), false || (bool(bvec4(_GLF_DEAD(false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, false)))))))))
          return;
         if(_GLF_DEAD(false))
          barrier();
        }
       return;
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, false)))))
        barrier();
       if(_GLF_DEAD(false))
        return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))
          return;
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))))
      barrier();
    }
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), (injectionSwitch) + vec2(0.0, 0.0)).y))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : _GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)))).x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : _GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)))).x > injectionSwitch.y))), (! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : _GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)))).x > injectionSwitch.y)))) || false)))))
    return;
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(! (! (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_IDENTITY(! (! (injectionSwitch.x > injectionSwitch.y)), true && (! (! (injectionSwitch.x > injectionSwitch.y)))))))))))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 uint workgroup_base = workgroup_size * workgroup_id;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! _GLF_IDENTITY((! _GLF_IDENTITY((false), ! (! ((false))))), ! (! ((! (false)))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), ! (! (! (! (false))))))), (! (_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), ! (! (! (! (false)))))))) && true)))))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))), false, false, true)))))))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(1.0, min(1.0, 1.0)) * (_GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(-0.2) : injectionSwitch.y))))))))
    return;
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-2109.2805), _GLF_FUZZED(-8.7)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))), max(injectionSwitch, injectionSwitch)).y))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
        return;
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     return;
    }
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), mat2(1.0) * (injectionSwitch)).y)), ! (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)), max(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)), _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)))).y))), bool(bvec4(_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0), (false ? _GLF_FUZZED(mat2(-7.5, 7.4, 1.4, 5.9)) : mat2(1.0))) * (injectionSwitch)).y))), ! (! (! (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).y)))))), false, true, true)))))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, false, false, true)))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch))) * mat2(1.0), max((injectionSwitch) * mat2(1.0), (injectionSwitch) * mat2(1.0)))).y))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, (false) || _GLF_FALSE(_GLF_IDENTITY(false, (false) && true), (injectionSwitch.x > injectionSwitch.y)))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, (false) || _GLF_FALSE(_GLF_IDENTITY(false, (false) && true), (injectionSwitch.x > injectionSwitch.y)))), false || (_GLF_DEAD(_GLF_IDENTITY(false, (false) || _GLF_FALSE(_GLF_IDENTITY(false, (false) && true), (injectionSwitch.x > injectionSwitch.y))))))) && true))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || _GLF_IDENTITY(false, ! (! (false)))), (false) || false)))
  return;
 uint virtual_gid = _GLF_IDENTITY(workgroup_base, 0u ^ (_GLF_IDENTITY(workgroup_base, 0u | (workgroup_base)))) + subgroup_id * _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, uint(uint(subgroup_size))), clamp(subgroup_size, subgroup_size, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size))), (_GLF_IDENTITY(subgroup_size, ~ (~ _GLF_IDENTITY((subgroup_size), ((subgroup_size)) >> 0u)))) | (_GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size))))), 0u ^ (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size))), (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (123793u & 0u) ^ (subgroup_size)), _GLF_IDENTITY(_GLF_IDENTITY(~ (~ (subgroup_size)), (~ (~ (subgroup_size))) | 0u), uint(uvec3(_GLF_IDENTITY(~ (~ (subgroup_size)), min(_GLF_IDENTITY(~ (~ (subgroup_size)), (~ (~ (subgroup_size))) >> 0u), ~ (~ (subgroup_size)))), 1u, 0u))))) | (_GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size))))))))), 1u * (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(~ (~ (subgroup_size)), clamp(~ (~ (subgroup_size)), ~ (~ (subgroup_size)), _GLF_IDENTITY(~ (~ (subgroup_size)), max(~ (~ (subgroup_size)), ~ (~ (subgroup_size))))))), (_GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size)))) | (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, ~ _GLF_IDENTITY((~ (subgroup_size)), min(_GLF_IDENTITY((~ (subgroup_size)), (_GLF_IDENTITY((_GLF_IDENTITY(~ (subgroup_size), (~ _GLF_IDENTITY((_GLF_IDENTITY(subgroup_size, 0u ^ (subgroup_size))), ((_GLF_IDENTITY(subgroup_size, 0u ^ (subgroup_size)))) >> 0u)) | 0u)), ((~ (subgroup_size))) + 0u)) << 0u), (~ (subgroup_size))))), clamp(_GLF_IDENTITY(subgroup_size, ~ _GLF_IDENTITY((~ (subgroup_size)), min(_GLF_IDENTITY((~ (subgroup_size)), (_GLF_IDENTITY((_GLF_IDENTITY(~ (subgroup_size), (~ _GLF_IDENTITY((_GLF_IDENTITY(subgroup_size, 0u ^ (subgroup_size))), ((_GLF_IDENTITY(subgroup_size, 0u ^ (subgroup_size)))) >> 0u)) | 0u)), ((~ (subgroup_size))) + 0u)) << 0u), (~ (subgroup_size))))), _GLF_IDENTITY(subgroup_size, ~ _GLF_IDENTITY((~ (subgroup_size)), min(_GLF_IDENTITY((~ (subgroup_size)), (_GLF_IDENTITY((_GLF_IDENTITY(~ (subgroup_size), (~ _GLF_IDENTITY((_GLF_IDENTITY(subgroup_size, 0u ^ (subgroup_size))), ((_GLF_IDENTITY(subgroup_size, 0u ^ (subgroup_size)))) >> 0u)) | 0u)), ((~ (subgroup_size))) + 0u)) << 0u), (~ (subgroup_size))))), _GLF_IDENTITY(subgroup_size, ~ _GLF_IDENTITY((~ (subgroup_size)), min(_GLF_IDENTITY((~ (subgroup_size)), (_GLF_IDENTITY((_GLF_IDENTITY(~ (subgroup_size), (~ _GLF_IDENTITY((_GLF_IDENTITY(subgroup_size, 0u ^ (subgroup_size))), ((_GLF_IDENTITY(subgroup_size, 0u ^ (subgroup_size)))) >> 0u)) | 0u)), ((~ (subgroup_size))) + 0u)) << 0u), (~ (subgroup_size))))))))))), (_GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(~ _GLF_IDENTITY((~ (subgroup_size)), _GLF_IDENTITY(~ (~ ((~ (subgroup_size)))), 0u + (_GLF_IDENTITY(~ (~ ((~ (subgroup_size)))), min(~ (~ ((~ (subgroup_size)))), ~ (~ ((~ (subgroup_size))))))))), clamp(~ _GLF_IDENTITY((~ (subgroup_size)), ~ (~ ((~ (subgroup_size))))), ~ _GLF_IDENTITY((~ (subgroup_size)), ~ (~ ((~ (subgroup_size))))), ~ _GLF_IDENTITY((~ (subgroup_size)), ~ (~ ((~ (subgroup_size)))))))), (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, ~ (_GLF_IDENTITY(~ (subgroup_size), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(~ (subgroup_size), (~ (subgroup_size)) - 0u)), (~ (_GLF_IDENTITY(~ (subgroup_size), (~ (subgroup_size)) - 0u))) / 1u))))), ~ (~ (_GLF_IDENTITY(subgroup_size, (subgroup_size) + 0u))))) | (_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(~ (~ (subgroup_size)), 0u ^ (~ (~ (subgroup_size)))))))))) ^ 0u), _GLF_IDENTITY(uint(_GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, clamp(_GLF_IDENTITY(subgroup_size, (false ? _GLF_FUZZED(uint(-2386.5075)) : subgroup_size)), subgroup_size, _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, ~ _GLF_IDENTITY((_GLF_IDENTITY(~ (subgroup_size), (_GLF_IDENTITY(~ _GLF_IDENTITY((subgroup_size), min((subgroup_size), (subgroup_size))), uint(uvec3(~ (subgroup_size), 0u, 0u)))) - 0u)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(atomicAnd(workgroup_base, _GLF_IDENTITY(subgroup_size, (true ? subgroup_size : _GLF_FUZZED(subgroup_local_id))))) : (_GLF_IDENTITY(~ (subgroup_size), (_GLF_IDENTITY(~ (subgroup_size), uint(uvec3(~ (subgroup_size), 0u, 0u)))) - 0u))))), _GLF_IDENTITY((_GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size)))) | (_GLF_IDENTITY(subgroup_size, ~ _GLF_IDENTITY((~ (subgroup_size)), min(_GLF_IDENTITY((~ (subgroup_size)), _GLF_IDENTITY((_GLF_IDENTITY((~ (_GLF_IDENTITY(subgroup_size, min(subgroup_size, subgroup_size)))), ((~ (subgroup_size))) + 0u)), ((_GLF_IDENTITY((~ (_GLF_IDENTITY(subgroup_size, min(subgroup_size, subgroup_size)))), ((~ (subgroup_size))) + 0u))) ^ 0u) << 0u), (_GLF_IDENTITY(~ (subgroup_size), (~ (subgroup_size)) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x)))))))), (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size)))) | (_GLF_IDENTITY(subgroup_size, ~ _GLF_IDENTITY((~ (subgroup_size)), min(_GLF_IDENTITY((~ (subgroup_size)), (_GLF_IDENTITY((~ (subgroup_size)), ((~ (subgroup_size))) + 0u)) << _GLF_IDENTITY(0u, 0u + (0u))), (_GLF_IDENTITY(~ (subgroup_size), (~ (subgroup_size)) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x)))))))), max(_GLF_IDENTITY((_GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size)))) | (_GLF_IDENTITY(subgroup_size, ~ _GLF_IDENTITY((~ (subgroup_size)), min(_GLF_IDENTITY(_GLF_IDENTITY((~ (subgroup_size)), (_GLF_IDENTITY((~ (subgroup_size)), ((~ (subgroup_size))) + 0u)) << 0u), 0u | (_GLF_IDENTITY((~ (subgroup_size)), (_GLF_IDENTITY((~ (subgroup_size)), ((~ (subgroup_size))) + 0u)) << 0u))), (_GLF_IDENTITY(~ (subgroup_size), (~ (subgroup_size)) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x)))))))), _GLF_IDENTITY(((_GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size)))) | (_GLF_IDENTITY(subgroup_size, ~ _GLF_IDENTITY((~ (subgroup_size)), min(_GLF_IDENTITY((~ (subgroup_size)), (_GLF_IDENTITY(_GLF_IDENTITY((~ (subgroup_size)), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY((~ (subgroup_size)), 0u | ((~ (subgroup_size))))), min(~ (_GLF_IDENTITY((~ (subgroup_size)), 0u | ((~ (subgroup_size))))), ~ (_GLF_IDENTITY((~ (subgroup_size)), 0u | ((~ (subgroup_size))))))))), ((~ (subgroup_size))) + 0u)) << 0u), (_GLF_IDENTITY(~ (subgroup_size), (~ (subgroup_size)) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x))))))))), (((_GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size)))) | (_GLF_IDENTITY(subgroup_size, ~ _GLF_IDENTITY((~ (subgroup_size)), min(_GLF_IDENTITY((~ (subgroup_size)), (_GLF_IDENTITY(_GLF_IDENTITY((~ (subgroup_size)), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY((~ (subgroup_size)), 0u | ((~ (subgroup_size))))), min(~ (_GLF_IDENTITY((~ (subgroup_size)), 0u | ((~ (subgroup_size))))), ~ (_GLF_IDENTITY((~ (subgroup_size)), 0u | ((~ (subgroup_size))))))))), ((~ (subgroup_size))) + 0u)) << 0u), (_GLF_IDENTITY(~ (subgroup_size), (~ (subgroup_size)) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x)))))))))) | 0u) << 0u), _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size)))), ((_GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size))))) ^ (1u ^ 1u)) | (_GLF_IDENTITY(subgroup_size, ~ _GLF_IDENTITY((~ (subgroup_size)), min(_GLF_IDENTITY((~ (subgroup_size)), (_GLF_IDENTITY((~ (subgroup_size)), ((~ (subgroup_size))) + 0u)) << _GLF_IDENTITY(0u, (true ? 0u : _GLF_FUZZED(subgroup_local_id)))), (_GLF_IDENTITY(~ (subgroup_size), (~ (subgroup_size)) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x)))))))), ((_GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size)))) | (_GLF_IDENTITY(subgroup_size, ~ _GLF_IDENTITY((~ (subgroup_size)), min(_GLF_IDENTITY(_GLF_IDENTITY((~ (subgroup_size)), ((~ (subgroup_size))) >> 0u), (_GLF_IDENTITY((~ (_GLF_IDENTITY(subgroup_size, max(_GLF_IDENTITY(subgroup_size, (false ? _GLF_FUZZED(atomicXor(subgroup_local_id, num_workgroup)) : subgroup_size)), subgroup_size)))), ((~ (subgroup_size))) + 0u)) << 0u), (_GLF_IDENTITY(~ (subgroup_size), (~ (subgroup_size)) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x))))))))) >> 0u)))) | ((_GLF_IDENTITY(subgroup_size, ~ _GLF_IDENTITY((~ (subgroup_size)), ((~ (subgroup_size))) * 1u))) | (_GLF_IDENTITY(subgroup_size, ~ _GLF_IDENTITY((~ (subgroup_size)), min(_GLF_IDENTITY((~ (subgroup_size)), (_GLF_IDENTITY((~ (subgroup_size)), ((~ (subgroup_size))) + 0u)) << 0u), (_GLF_IDENTITY(~ (subgroup_size), (~ (subgroup_size)) ^ uint(_GLF_ZERO(_GLF_IDENTITY(0.0, (0.0) - 0.0), injectionSwitch.x))))))))))))), (_GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, ~ (_GLF_IDENTITY(~ (subgroup_size), min(~ (subgroup_size), _GLF_IDENTITY(~ (subgroup_size), (true ? ~ (subgroup_size) : _GLF_FUZZED(workgroup_size))))))), (_GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size)))) | (_GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size)))))))) ^ _GLF_IDENTITY(0u, (0u) / 1u))), 0u ^ (uint(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size))), (_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(~ (~ (subgroup_size)), 0u ^ (~ (~ (subgroup_size)))))) | (_GLF_IDENTITY(subgroup_size, ~ _GLF_IDENTITY((~ (subgroup_size)), min(_GLF_IDENTITY((~ _GLF_IDENTITY((subgroup_size), 0u ^ (_GLF_IDENTITY((subgroup_size), _GLF_IDENTITY(uint(uvec4((subgroup_size), 1u, 1u, 0u)), 0u + (uint(uvec4((subgroup_size), 1u, 1u, 0u)))))))), (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(~ (subgroup_size), 1u * (_GLF_IDENTITY(~ _GLF_IDENTITY((_GLF_IDENTITY(subgroup_size, max(subgroup_size, _GLF_IDENTITY(subgroup_size, (subgroup_size) / 1u)))), min(_GLF_IDENTITY((subgroup_size), ((subgroup_size)) - 0u), (subgroup_size))), min(~ (subgroup_size), ~ (subgroup_size)))))), _GLF_IDENTITY(1u, clamp(1u, 1u, _GLF_IDENTITY(1u, (1u) / 1u))) * ((_GLF_IDENTITY(~ (subgroup_size), 1u * (_GLF_IDENTITY(~ _GLF_IDENTITY((subgroup_size), min(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size))), 0u | (_GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size)))))), ((subgroup_size)) - 0u), (subgroup_size))), min(~ (subgroup_size), ~ (subgroup_size)))))))), _GLF_IDENTITY(((~ (subgroup_size))) + 0u, (_GLF_IDENTITY(((~ (subgroup_size))) + _GLF_IDENTITY(_GLF_IDENTITY(0u, uint(_GLF_IDENTITY(uvec3(0u, 1u, uint(_GLF_ZERO(0.0, injectionSwitch.x))), max(uvec3(0u, 1u, uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x))))), uvec3(0u, 1u, uint(_GLF_ZERO(0.0, injectionSwitch.x))))))), min(_GLF_IDENTITY(0u, uint(_GLF_IDENTITY(uvec3(0u, 1u, uint(_GLF_ZERO(0.0, injectionSwitch.x))), max(uvec3(0u, 1u, uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x))))), uvec3(0u, 1u, uint(_GLF_ZERO(0.0, injectionSwitch.x))))))), _GLF_IDENTITY(0u, uint(_GLF_IDENTITY(uvec3(0u, 1u, uint(_GLF_ZERO(0.0, injectionSwitch.x))), max(uvec3(0u, 1u, uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x))))), uvec3(0u, 1u, uint(_GLF_ZERO(0.0, injectionSwitch.x))))))))), max(((~ (subgroup_size))) + 0u, ((~ (subgroup_size))) + 0u))) ^ 0u))) << _GLF_IDENTITY(0u, (true ? 0u : _GLF_FUZZED(workgroup_base)))), (~ (subgroup_size))))))))), (_GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size))), _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size)))) | (_GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size)))), (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size))), clamp(_GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size))), _GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size))), _GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size)))))) | (_GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size)))), max((_GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size)))) | _GLF_IDENTITY((_GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size)))), (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size)))), (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size)))), min((_GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size)))), (_GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size))))))) | ((_GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size))))))) | ((_GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size)))))), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, min(_GLF_IDENTITY(subgroup_size, 1u * (subgroup_size)), subgroup_size)), ~ (~ (subgroup_size)))) | (_GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size)))), ((_GLF_IDENTITY(subgroup_size, ~ (_GLF_IDENTITY(~ (subgroup_size), (_GLF_IDENTITY(~ (subgroup_size), clamp(_GLF_IDENTITY(~ (subgroup_size), min(~ (subgroup_size), ~ (subgroup_size))), ~ (subgroup_size), ~ (subgroup_size)))) - uint(_GLF_ZERO(0.0, injectionSwitch.x)))))) | (_GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size))))) + 0u)))) * 1u), ((_GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size)))) | (_GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size))))) / 1u))))) ^ 0u))))), max(uint(_GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size))), (_GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size)))) | (_GLF_IDENTITY(subgroup_size, ~ _GLF_IDENTITY((~ (subgroup_size)), min(_GLF_IDENTITY((~ (subgroup_size)), (_GLF_IDENTITY((~ (subgroup_size)), ((~ (subgroup_size))) + 0u)) << 0u), (~ (subgroup_size))))))))), (_GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, ~ _GLF_IDENTITY((~ (subgroup_size)), min((~ (subgroup_size)), (~ (subgroup_size))))), (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, ~ (~ (_GLF_IDENTITY(subgroup_size, min(_GLF_IDENTITY(subgroup_size, (false ? _GLF_FUZZED(subgroup_local_id) : subgroup_size)), subgroup_size))))), uint(uvec2(_GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size))), (0u >> _GLF_IDENTITY(uint(0u), uint(0u))))))) | (_GLF_IDENTITY(subgroup_size, ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, min(_GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, subgroup_size)), _GLF_IDENTITY(subgroup_size, (subgroup_size) ^ 0u))), (subgroup_size) << 0u))))))))) ^ 0u)), 0u ^ (uint(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size))), (_GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size)))) | (_GLF_IDENTITY(subgroup_size, ~ _GLF_IDENTITY(_GLF_IDENTITY((~ (subgroup_size)), min(_GLF_IDENTITY(_GLF_IDENTITY((~ (subgroup_size)), ((~ (subgroup_size))) << uint(_GLF_ZERO(0.0, injectionSwitch.x))), (_GLF_IDENTITY((~ (subgroup_size)), ((~ (subgroup_size))) + _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, clamp(0u, 0u, 0u))) / ((1u << _GLF_IDENTITY(uint(3u), uint(3u))) >> _GLF_IDENTITY(uint(3u), _GLF_IDENTITY(uint(3u), (uint(3u)) + 0u)))))) << _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, 0u | (_GLF_IDENTITY(0u, (0u) + 0u)))) / (1u | 0u))), (~ (subgroup_size)))), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY((~ (subgroup_size)), min(_GLF_IDENTITY(_GLF_IDENTITY((~ (subgroup_size)), ((~ (subgroup_size))) << uint(_GLF_ZERO(0.0, injectionSwitch.x))), (_GLF_IDENTITY((~ (subgroup_size)), ((~ (subgroup_size))) + _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, clamp(0u, 0u, 0u))) / ((1u << _GLF_IDENTITY(uint(3u), uint(3u))) >> _GLF_IDENTITY(uint(3u), _GLF_IDENTITY(uint(3u), (uint(3u)) + 0u)))))) << _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, 0u | (_GLF_IDENTITY(0u, (0u) + 0u)))) / (1u | 0u))), (~ (subgroup_size)))), min(_GLF_IDENTITY((~ (subgroup_size)), min(_GLF_IDENTITY(_GLF_IDENTITY((~ (subgroup_size)), ((~ (subgroup_size))) << uint(_GLF_ZERO(0.0, injectionSwitch.x))), (_GLF_IDENTITY((~ (subgroup_size)), ((~ (subgroup_size))) + _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, clamp(0u, 0u, 0u))) / ((1u << _GLF_IDENTITY(uint(3u), uint(3u))) >> _GLF_IDENTITY(uint(3u), _GLF_IDENTITY(uint(3u), (uint(3u)) + 0u)))))) << _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, 0u | (_GLF_IDENTITY(0u, (0u) + 0u)))) / (1u | 0u))), (~ (subgroup_size)))), _GLF_IDENTITY(_GLF_IDENTITY((~ (subgroup_size)), min(_GLF_IDENTITY(_GLF_IDENTITY((~ (subgroup_size)), ((~ (subgroup_size))) << uint(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), (_GLF_ZERO(0.0, injectionSwitch.x)) + 0.0))), (_GLF_IDENTITY((~ (subgroup_size)), ((~ (subgroup_size))) + _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, clamp(0u, 0u, 0u))) / ((1u << _GLF_IDENTITY(uint(3u), uint(3u))) >> _GLF_IDENTITY(uint(3u), _GLF_IDENTITY(uint(3u), (uint(3u)) + 0u)))))) << _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, 0u | (_GLF_IDENTITY(0u, (0u) + 0u)))) / (1u | 0u))), (~ (subgroup_size)))), 1u * (_GLF_IDENTITY((~ (subgroup_size)), min(_GLF_IDENTITY(_GLF_IDENTITY((~ (subgroup_size)), ((~ (subgroup_size))) << uint(_GLF_ZERO(0.0, injectionSwitch.x))), (_GLF_IDENTITY((~ (subgroup_size)), ((~ (subgroup_size))) + _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, clamp(0u, 0u, _GLF_IDENTITY(0u, max(0u, 0u))))) / ((1u << _GLF_IDENTITY(uint(3u), uint(3u))) >> _GLF_IDENTITY(uint(3u), _GLF_IDENTITY(uint(3u), (uint(3u)) + 0u)))))) << _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, 0u | (_GLF_IDENTITY(0u, (0u) + 0u)))) / (1u | 0u))), (~ (subgroup_size)))))))))))))))), (_GLF_IDENTITY(subgroup_size, clamp(subgroup_size, _GLF_IDENTITY(subgroup_size, (165915u & 0u) | (subgroup_size)), _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, ~ (_GLF_IDENTITY(~ (subgroup_size), (true ? ~ (subgroup_size) : _GLF_FUZZED(atomicExchange(subgroup_id, num_workgroup)))))), (_GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size)))) | (_GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size)))))))) ^ 0u))))), uint(_GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, ~ (~ (_GLF_IDENTITY(subgroup_size, uint(uvec3(subgroup_size, 0u, (0u | 0u))))))), (_GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size)))) | _GLF_IDENTITY((_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(~ _GLF_IDENTITY((~ (subgroup_size)), min(_GLF_IDENTITY((~ _GLF_IDENTITY((subgroup_size), (false ? _GLF_FUZZED((subgroup_size - workgroup_size)) : (subgroup_size)))), (_GLF_IDENTITY((~ (_GLF_IDENTITY(subgroup_size, clamp(_GLF_IDENTITY(subgroup_size, (true ? subgroup_size : _GLF_FUZZED(num_workgroup))), subgroup_size, _GLF_IDENTITY(subgroup_size, (subgroup_size) / 1u))))), _GLF_IDENTITY(((~ (subgroup_size))) + 0u, min(_GLF_IDENTITY(((~ (subgroup_size))) + 0u, (((~ (subgroup_size))) + 0u) * 1u), _GLF_IDENTITY(((~ (subgroup_size))) + 0u, (((~ (subgroup_size))) + 0u) ^ 0u))))) << 0u), (~ (subgroup_size)))), _GLF_IDENTITY(uint(uvec3(~ _GLF_IDENTITY((~ (subgroup_size)), min(_GLF_IDENTITY(_GLF_IDENTITY((~ (subgroup_size)), (_GLF_IDENTITY((~ (subgroup_size)), ((~ (subgroup_size))) + 0u)) << 0u), ~ (~ (_GLF_IDENTITY((~ (subgroup_size)), (_GLF_IDENTITY((~ (subgroup_size)), ((~ (subgroup_size))) + 0u)) << 0u)))), (~ (subgroup_size)))), 0u, 1u)), (uint(uvec3(~ _GLF_IDENTITY((~ _GLF_IDENTITY((subgroup_size), 0u + ((subgroup_size)))), min(_GLF_IDENTITY((~ (subgroup_size)), (_GLF_IDENTITY((~ (subgroup_size)), _GLF_IDENTITY(((~ (subgroup_size))) + 0u, (((~ (subgroup_size))) + 0u) / (1u ^ 0u)))) << 0u), (~ (_GLF_IDENTITY(subgroup_size, uint(uvec4(subgroup_size, 0u, ((0u << _GLF_IDENTITY(uint(6u), uint(6u))) | (1u | 1u)), 0u))))))), 0u, 1u))) >> 0u)))), ((_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(~ _GLF_IDENTITY((~ (subgroup_size)), min(_GLF_IDENTITY((~ _GLF_IDENTITY((subgroup_size), min(_GLF_IDENTITY((subgroup_size), 0u + (_GLF_IDENTITY((subgroup_size), ((subgroup_size)) | ((subgroup_size))))), (subgroup_size)))), (_GLF_IDENTITY((~ (subgroup_size)), ((~ (subgroup_size))) + 0u)) << 0u), (~ (subgroup_size)))), _GLF_IDENTITY(uint(uvec3(~ _GLF_IDENTITY((~ _GLF_IDENTITY((_GLF_IDENTITY(subgroup_size, (subgroup_size) | 0u)), clamp((_GLF_IDENTITY(subgroup_size, (subgroup_size) | 0u)), (_GLF_IDENTITY(subgroup_size, (subgroup_size) | 0u)), (_GLF_IDENTITY(subgroup_size, (subgroup_size) | 0u))))), min(_GLF_IDENTITY((~ (subgroup_size)), (_GLF_IDENTITY((~ (subgroup_size)), ((~ (subgroup_size))) + 0u)) << 0u), (~ (subgroup_size)))), 0u, 1u)), (uint(uvec3(~ _GLF_IDENTITY((~ (subgroup_size)), min(_GLF_IDENTITY((~ (subgroup_size)), (_GLF_IDENTITY((~ (subgroup_size)), ((~ (subgroup_size))) + 0u)) << 0u), (~ (subgroup_size)))), 0u, 1u))) >> 0u))))) | ((_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(~ _GLF_IDENTITY((~ (subgroup_size)), min(_GLF_IDENTITY((~ (subgroup_size)), (_GLF_IDENTITY((~ (subgroup_size)), ((~ (subgroup_size))) + 0u)) << 0u), (~ (subgroup_size)))), _GLF_IDENTITY(uint(uvec3(~ _GLF_IDENTITY((~ (subgroup_size)), min(_GLF_IDENTITY(_GLF_IDENTITY((~ (subgroup_size)), _GLF_IDENTITY((_GLF_IDENTITY((~ (subgroup_size)), ((~ (subgroup_size))) + 0u)), ~ (~ ((_GLF_IDENTITY((~ (subgroup_size)), ((~ (subgroup_size))) + 0u))))) << 0u), (0u & 167337u) ^ (_GLF_IDENTITY((~ (subgroup_size)), _GLF_IDENTITY((_GLF_IDENTITY((~ (subgroup_size)), ((~ (subgroup_size))) + 0u)), ~ (~ ((_GLF_IDENTITY((~ (subgroup_size)), ((~ (subgroup_size))) + 0u))))) << 0u))), (~ (subgroup_size)))), 0u, 1u)), (uint(uvec3(~ _GLF_IDENTITY((~ (subgroup_size)), min(_GLF_IDENTITY((~ (subgroup_size)), (_GLF_IDENTITY(_GLF_IDENTITY((~ (subgroup_size)), (_GLF_IDENTITY((~ (subgroup_size)), min((~ (subgroup_size)), (~ (subgroup_size))))) | uint(_GLF_ZERO(0.0, injectionSwitch.x))), ((~ (subgroup_size))) + 0u)) << 0u), (~ (_GLF_IDENTITY(subgroup_size, (subgroup_size) | (subgroup_size)))))), 0u, 1u))) >> 0u))))))))), (_GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, ~ (~ _GLF_IDENTITY((subgroup_size), 0u + (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_size, 0u | (subgroup_size))), clamp((subgroup_size), _GLF_IDENTITY((subgroup_size), ((subgroup_size)) / 1u), _GLF_IDENTITY((subgroup_size), _GLF_IDENTITY(~ (~ ((subgroup_size))), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? ~ (~ ((subgroup_size))) : _GLF_IDENTITY(_GLF_FUZZED(subgroup_size), uint(uint(_GLF_FUZZED(subgroup_size))))))))))))), (_GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size)))) | (_GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size)))))))) ^ 0u), 0u ^ (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size))), (_GLF_IDENTITY(subgroup_size, ~ (~ _GLF_IDENTITY((subgroup_size), ((subgroup_size)) / (1u ^ (0u << _GLF_IDENTITY(_GLF_IDENTITY(uint(4u), 0u ^ (uint(4u))), uint(4u)))))))) | (_GLF_IDENTITY(subgroup_size, ~ _GLF_IDENTITY(_GLF_IDENTITY((~ (subgroup_size)), clamp((~ (subgroup_size)), _GLF_IDENTITY((~ (subgroup_size)), max((~ (subgroup_size)), (~ (subgroup_size)))), (~ (subgroup_size)))), min(_GLF_IDENTITY((~ (subgroup_size)), (_GLF_IDENTITY((~ (subgroup_size)), ((~ (subgroup_size))) + 0u)) << 0u), (_GLF_IDENTITY(~ _GLF_IDENTITY((subgroup_size), (_GLF_IDENTITY((subgroup_size), ((subgroup_size)) / 1u)) >> 0u), min(~ (subgroup_size), ~ (_GLF_IDENTITY(subgroup_size, (subgroup_size) - 0u)))))))))))), (_GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size))), (_GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size)))) | (_GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size)))))))) ^ _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, ~ (~ (0u)))) | (0u)))))), 0u ^ (_GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size))), (_GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size)))) | (_GLF_IDENTITY(subgroup_size, ~ _GLF_IDENTITY((~ (subgroup_size)), min(_GLF_IDENTITY((~ (subgroup_size)), (_GLF_IDENTITY((~ (subgroup_size)), ((~ (subgroup_size))) + 0u)) << 0u), _GLF_IDENTITY((_GLF_IDENTITY(~ (subgroup_size), (false ? _GLF_FUZZED(75773u) : ~ (subgroup_size)))), min(_GLF_IDENTITY((~ (subgroup_size)), ((~ (subgroup_size))) / 1u), _GLF_IDENTITY((~ (subgroup_size)), uint(uvec2(_GLF_IDENTITY(_GLF_IDENTITY((~ (subgroup_size)), (true ? (~ (subgroup_size)) : _GLF_FUZZED(workgroup_base))), max(_GLF_IDENTITY((~ (subgroup_size)), (true ? (~ (subgroup_size)) : _GLF_FUZZED(workgroup_base))), _GLF_IDENTITY((~ (subgroup_size)), (true ? (~ (subgroup_size)) : _GLF_FUZZED(workgroup_base))))), 1u)))))))))))), _GLF_IDENTITY((_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(_GLF_IDENTITY(clamp(subgroup_size, subgroup_size, _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size))), (_GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size)))) | (_GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size)))))), max(clamp(subgroup_size, subgroup_size, _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size))), (_GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size)))) | (_GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size)))))), _GLF_IDENTITY(clamp(subgroup_size, subgroup_size, _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size))), (_GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size)))) | (_GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size)))))), (clamp(subgroup_size, subgroup_size, _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size))), (_GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size)))) | (_GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size))))))) - 0u))), clamp(clamp(_GLF_IDENTITY(subgroup_size, (subgroup_size) + 0u), subgroup_size, _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size))), (_GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size)))) | (_GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size)))))), _GLF_IDENTITY(clamp(subgroup_size, subgroup_size, _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size))), (_GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size)))) | (_GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size)))))), min(clamp(subgroup_size, subgroup_size, _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size))), (_GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size)))) | (_GLF_IDENTITY(subgroup_size, ~ (~ (_GLF_IDENTITY(subgroup_size, (subgroup_size) << 0u))))))), clamp(subgroup_size, subgroup_size, _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size))), (_GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size)))) | (_GLF_IDENTITY(subgroup_size, ~ (~ _GLF_IDENTITY((subgroup_size), ((subgroup_size)) | 0u)))))))), _GLF_IDENTITY(clamp(subgroup_size, subgroup_size, _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, ~ (~ _GLF_IDENTITY((_GLF_IDENTITY(subgroup_size, (true ? subgroup_size : _GLF_FUZZED(workgroup_size)))), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_size, (true ? subgroup_size : _GLF_FUZZED(workgroup_size)))), ((_GLF_IDENTITY(subgroup_size, (true ? subgroup_size : _GLF_FUZZED(workgroup_size))))) - 0u)), (~ (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_size, (true ? subgroup_size : _GLF_FUZZED(workgroup_size)))), ((_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(true, bool(bvec4(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), false || (! (true))))), true, true, true))) ? subgroup_size : _GLF_FUZZED(workgroup_size))))) - 0u))) / 1u))))), (_GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size)))) | (_GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size)))))), (true ? clamp(subgroup_size, subgroup_size, _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(~ _GLF_IDENTITY((~ (subgroup_size)), ((~ (subgroup_size))) | ((~ (subgroup_size)))), uint(uvec3(~ (~ (subgroup_size)), 0u, 1u)))), (_GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size)))) | (_GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size)))))) : _GLF_FUZZED(workgroup_base))))))) ^ _GLF_IDENTITY(0u, 0u ^ (0u)), (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(clamp(subgroup_size, subgroup_size, _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size))), (_GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size)))) | (_GLF_IDENTITY(subgroup_size, ~ (~ (_GLF_IDENTITY(subgroup_size, (subgroup_size) | 0u))))))), clamp(clamp(_GLF_IDENTITY(subgroup_size, (subgroup_size) + 0u), subgroup_size, _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size))), (_GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size)))) | (_GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size)))))), _GLF_IDENTITY(clamp(subgroup_size, subgroup_size, _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size))), (_GLF_IDENTITY(subgroup_size, ~ (~ (_GLF_IDENTITY(subgroup_size, (0u & 52050u) + (subgroup_size)))))) | (_GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size)))))), min(clamp(subgroup_size, subgroup_size, _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size))), (_GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size)))) | (_GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size)))))), clamp(subgroup_size, subgroup_size, _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size))), _GLF_IDENTITY((_GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size)))), ((_GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size))))) | (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size)))), ((_GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size))))) | 0u))) | _GLF_IDENTITY((_GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size)))), max((_GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size)))), (_GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size)))))))))), _GLF_IDENTITY(clamp(subgroup_size, _GLF_IDENTITY(subgroup_size, (subgroup_size) << 0u), _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, ~ (~ _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(subgroup_size, (true ? subgroup_size : _GLF_FUZZED(workgroup_size)))), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_size, (true ? subgroup_size : _GLF_FUZZED(workgroup_size)))), ((_GLF_IDENTITY(subgroup_size, (true ? subgroup_size : _GLF_FUZZED(workgroup_size))))) - 0u)), (~ (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_size, (true ? subgroup_size : _GLF_FUZZED(workgroup_size)))), ((_GLF_IDENTITY(subgroup_size, (true ? subgroup_size : _GLF_FUZZED(workgroup_size))))) - 0u))) / 1u))), min(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(subgroup_size, (true ? subgroup_size : _GLF_FUZZED(workgroup_size)))), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_size, (true ? subgroup_size : _GLF_FUZZED(workgroup_size)))), ((_GLF_IDENTITY(subgroup_size, (true ? subgroup_size : _GLF_FUZZED(workgroup_size))))) - 0u)), (~ (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_size, (true ? subgroup_size : _GLF_FUZZED(workgroup_size)))), ((_GLF_IDENTITY(subgroup_size, (true ? subgroup_size : _GLF_FUZZED(workgroup_size))))) - 0u))) / 1u))), (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_size, (true ? subgroup_size : _GLF_FUZZED(workgroup_size)))), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_size, (true ? subgroup_size : _GLF_FUZZED(workgroup_size)))), ((_GLF_IDENTITY(subgroup_size, (true ? subgroup_size : _GLF_FUZZED(workgroup_size))))) - 0u)), (~ (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_size, (true ? subgroup_size : _GLF_FUZZED(workgroup_size)))), ((_GLF_IDENTITY(subgroup_size, (true ? subgroup_size : _GLF_FUZZED(workgroup_size))))) - 0u))) / 1u)))) + 0u), _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(subgroup_size, (true ? subgroup_size : _GLF_FUZZED(workgroup_size)))), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_size, (true ? subgroup_size : _GLF_FUZZED(workgroup_size)))), ((_GLF_IDENTITY(subgroup_size, (true ? subgroup_size : _GLF_FUZZED(workgroup_size))))) - 0u)), (~ (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_size, (true ? subgroup_size : _GLF_FUZZED(workgroup_size)))), ((_GLF_IDENTITY(subgroup_size, (true ? subgroup_size : _GLF_FUZZED(workgroup_size))))) - 0u))) / 1u))), (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_size, (true ? subgroup_size : _GLF_FUZZED(workgroup_size)))), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_size, (true ? subgroup_size : _GLF_FUZZED(workgroup_size)))), ((_GLF_IDENTITY(subgroup_size, (true ? subgroup_size : _GLF_FUZZED(workgroup_size))))) - 0u)), (~ (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_size, (true ? subgroup_size : _GLF_FUZZED(workgroup_size)))), ((_GLF_IDENTITY(subgroup_size, (true ? subgroup_size : _GLF_FUZZED(workgroup_size))))) - 0u))) / 1u)))) - (0u << _GLF_IDENTITY(uint(1u), uint(1u)))))))), (_GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size)))) | (_GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size)))))), (true ? clamp(subgroup_size, subgroup_size, _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(~ (~ (subgroup_size)), uint(uvec3(~ (~ (subgroup_size)), 0u, 1u)))), (_GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size)))) | (_GLF_IDENTITY(subgroup_size, ~ (~ (_GLF_IDENTITY(subgroup_size, (true ? subgroup_size : _GLF_FUZZED(workgroup_id))))))))) : _GLF_FUZZED(workgroup_base))))))) ^ _GLF_IDENTITY(0u, 0u ^ (0u)), (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(clamp(subgroup_size, subgroup_size, _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size))), (_GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size)))) | (_GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size)))))), clamp(clamp(_GLF_IDENTITY(subgroup_size, (subgroup_size) + 0u), subgroup_size, _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size))), (_GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size)))) | (_GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size)))))), _GLF_IDENTITY(clamp(subgroup_size, subgroup_size, _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size))), (_GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size)))) | (_GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size)))))), min(clamp(subgroup_size, subgroup_size, _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, ~ (~ _GLF_IDENTITY((subgroup_size), ((subgroup_size)) | ((subgroup_size))))), (_GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size)))) | (_GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size)))))), clamp(subgroup_size, subgroup_size, _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size))), (_GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size)))) | (_GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size)))))))), _GLF_IDENTITY(clamp(subgroup_size, subgroup_size, _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, ~ (~ _GLF_IDENTITY((_GLF_IDENTITY(subgroup_size, (true ? subgroup_size : _GLF_FUZZED(workgroup_size)))), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_size, (true ? subgroup_size : _GLF_FUZZED(workgroup_size)))), ((_GLF_IDENTITY(subgroup_size, (true ? subgroup_size : _GLF_FUZZED(workgroup_size))))) - 0u)), (~ (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_size, (true ? subgroup_size : _GLF_FUZZED(workgroup_size)))), ((_GLF_IDENTITY(subgroup_size, (true ? subgroup_size : _GLF_FUZZED(workgroup_size))))) - 0u))) / 1u))))), (_GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size)))) | (_GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size)))))), (true ? clamp(subgroup_size, subgroup_size, _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(~ (~ (subgroup_size)), uint(uvec3(~ (~ (subgroup_size)), 0u, 1u)))), (_GLF_IDENTITY(subgroup_size, ~ (~ _GLF_IDENTITY((subgroup_size), ((subgroup_size)) / 1u)))) | (_GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size)))))) : _GLF_FUZZED(workgroup_base))))))) ^ _GLF_IDENTITY(0u, 0u ^ (0u)), ((_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(clamp(subgroup_size, subgroup_size, _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, ~ (~ _GLF_IDENTITY((subgroup_size), 0u ^ ((subgroup_size))))), (_GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size)))) | (_GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size)))))), clamp(clamp(_GLF_IDENTITY(subgroup_size, (subgroup_size) + 0u), subgroup_size, _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size))), (_GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size)))) | (_GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size)))))), _GLF_IDENTITY(clamp(subgroup_size, subgroup_size, _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size))), (_GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size)))) | (_GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size)))))), min(clamp(subgroup_size, subgroup_size, _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size))), (_GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size)))) | (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(~ (~ (subgroup_size)), (~ (~ (subgroup_size))) << 0u)), _GLF_IDENTITY(uint(uint(_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(~ (~ (subgroup_size)), (~ (~ (subgroup_size))) << 0u)))), max(uint(uint(_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(~ (~ (subgroup_size)), (~ (~ (subgroup_size))) << 0u)))), uint(uint(_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(~ (~ (subgroup_size)), (~ (~ (subgroup_size))) << 0u)))))))))), clamp(subgroup_size, _GLF_IDENTITY(subgroup_size, (subgroup_size) ^ 0u), _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size))), (_GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size)))) | (_GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size)))))))), _GLF_IDENTITY(clamp(subgroup_size, subgroup_size, _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(~ (~ _GLF_IDENTITY((_GLF_IDENTITY(subgroup_size, (true ? subgroup_size : _GLF_FUZZED(workgroup_size)))), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_size, (true ? subgroup_size : _GLF_FUZZED(workgroup_size)))), ((_GLF_IDENTITY(subgroup_size, (true ? subgroup_size : _GLF_FUZZED(workgroup_size))))) - 0u)), (~ (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_size, (true ? subgroup_size : _GLF_FUZZED(workgroup_size)))), ((_GLF_IDENTITY(subgroup_size, (true ? subgroup_size : _GLF_FUZZED(workgroup_size))))) - 0u))) / 1u)))), (true ? ~ (~ _GLF_IDENTITY((_GLF_IDENTITY(subgroup_size, (true ? subgroup_size : _GLF_FUZZED(workgroup_size)))), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_size, (true ? subgroup_size : _GLF_FUZZED(workgroup_size)))), ((_GLF_IDENTITY(subgroup_size, (true ? subgroup_size : _GLF_FUZZED(workgroup_size))))) - 0u)), (~ (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (true ? subgroup_size : _GLF_FUZZED(workgroup_size))), (_GLF_IDENTITY(subgroup_size, (true ? subgroup_size : _GLF_FUZZED(workgroup_size)))) * 1u)), _GLF_IDENTITY(((_GLF_IDENTITY(subgroup_size, (true ? subgroup_size : _GLF_FUZZED(workgroup_size))))), clamp(((_GLF_IDENTITY(subgroup_size, (true ? subgroup_size : _GLF_FUZZED(workgroup_size))))), _GLF_IDENTITY(((_GLF_IDENTITY(subgroup_size, (true ? subgroup_size : _GLF_FUZZED(workgroup_size))))), (true ? ((_GLF_IDENTITY(subgroup_size, (true ? subgroup_size : _GLF_FUZZED(workgroup_size))))) : _GLF_FUZZED(usubBorrow(workgroup_size, subgroup_id, subgroup_local_id)))), _GLF_IDENTITY(((_GLF_IDENTITY(subgroup_size, (true ? subgroup_size : _GLF_FUZZED(workgroup_size))))), (((_GLF_IDENTITY(subgroup_size, (true ? subgroup_size : _GLF_FUZZED(workgroup_size)))))) - 0u))) - 0u))) / 1u)))) : _GLF_FUZZED(workgroup_size)))), (_GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size)))) | (_GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size)))))), (true ? clamp(subgroup_size, subgroup_size, _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(~ (~ _GLF_IDENTITY((subgroup_size), max((subgroup_size), (subgroup_size)))), uint(uvec3(~ (~ (subgroup_size)), 0u, 1u)))), (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size))), (_GLF_IDENTITY(subgroup_size, ~ (_GLF_IDENTITY(~ (subgroup_size), _GLF_IDENTITY(uint(uvec3(~ (subgroup_size), 1u, 0u)), 0u ^ (uint(uvec3(~ (subgroup_size), 1u, 0u)))))))) - uint(_GLF_ZERO(0.0, injectionSwitch.x)))) | (_GLF_IDENTITY(subgroup_size, ~ _GLF_IDENTITY((~ (subgroup_size)), clamp(_GLF_IDENTITY((~ (subgroup_size)), clamp((~ (subgroup_size)), (~ (subgroup_size)), (~ (subgroup_size)))), (~ (subgroup_size)), (~ (subgroup_size)))))))) : _GLF_FUZZED(workgroup_base))))))) ^ _GLF_IDENTITY(0u, 0u ^ (0u))) / 1u)) / 1u)) / 1u))), ~ (~ (uint(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size))), (_GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size)))) | (_GLF_IDENTITY(subgroup_size, ~ _GLF_IDENTITY((~ (subgroup_size)), min(_GLF_IDENTITY((~ (subgroup_size)), (_GLF_IDENTITY((~ (subgroup_size)), ((~ (subgroup_size))) + 0u)) << 0u), _GLF_IDENTITY((_GLF_IDENTITY(~ (subgroup_size), (false ? _GLF_FUZZED(75773u) : ~ (subgroup_size)))), min(_GLF_IDENTITY((~ (subgroup_size)), ((~ (subgroup_size))) / 1u), _GLF_IDENTITY((~ (subgroup_size)), uint(uvec2(_GLF_IDENTITY(_GLF_IDENTITY((~ (subgroup_size)), (true ? (~ (subgroup_size)) : _GLF_FUZZED(workgroup_base))), max(_GLF_IDENTITY((~ (subgroup_size)), (true ? (~ (subgroup_size)) : _GLF_FUZZED(workgroup_base))), _GLF_IDENTITY((~ (subgroup_size)), (true ? (~ (subgroup_size)) : _GLF_FUZZED(workgroup_base))))), 1u)))))))))))), _GLF_IDENTITY((_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(_GLF_IDENTITY(clamp(subgroup_size, subgroup_size, _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size))), (_GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size)))) | (_GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size)))))), max(clamp(subgroup_size, subgroup_size, _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size))), (_GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size)))) | (_GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size)))))), _GLF_IDENTITY(clamp(subgroup_size, subgroup_size, _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size))), (_GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size)))) | (_GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size)))))), (clamp(subgroup_size, subgroup_size, _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size))), (_GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size)))) | (_GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size))))))) - 0u))), clamp(clamp(_GLF_IDENTITY(subgroup_size, (subgroup_size) + 0u), subgroup_size, _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size))), (_GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size)))) | (_GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size)))))), _GLF_IDENTITY(clamp(subgroup_size, subgroup_size, _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size))), (_GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size)))) | (_GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size)))))), min(clamp(subgroup_size, subgroup_size, _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size))), (_GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size)))) | (_GLF_IDENTITY(subgroup_size, ~ (~ (_GLF_IDENTITY(subgroup_size, (subgroup_size) << 0u))))))), clamp(subgroup_size, subgroup_size, _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size))), (_GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size)))) | (_GLF_IDENTITY(subgroup_size, ~ (~ _GLF_IDENTITY((subgroup_size), ((subgroup_size)) | 0u)))))))), _GLF_IDENTITY(clamp(subgroup_size, subgroup_size, _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, ~ (~ _GLF_IDENTITY((_GLF_IDENTITY(subgroup_size, (true ? subgroup_size : _GLF_FUZZED(workgroup_size)))), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_size, (true ? subgroup_size : _GLF_FUZZED(workgroup_size)))), ((_GLF_IDENTITY(subgroup_size, (true ? subgroup_size : _GLF_FUZZED(workgroup_size))))) - 0u)), (~ (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_size, (true ? subgroup_size : _GLF_FUZZED(workgroup_size)))), ((_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(true, bool(bvec4(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), false || (! (true))))), true, true, true))) ? subgroup_size : _GLF_FUZZED(workgroup_size))))) - 0u))) / 1u))))), (_GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size)))) | (_GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size)))))), (true ? clamp(subgroup_size, subgroup_size, _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(~ _GLF_IDENTITY((~ (subgroup_size)), ((~ (subgroup_size))) | ((~ (subgroup_size)))), uint(uvec3(~ (~ (subgroup_size)), 0u, 1u)))), (_GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size)))) | (_GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size)))))) : _GLF_FUZZED(workgroup_base))))))) ^ _GLF_IDENTITY(0u, 0u ^ (0u)), (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(clamp(subgroup_size, subgroup_size, _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size))), (_GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size)))) | (_GLF_IDENTITY(subgroup_size, ~ (~ (_GLF_IDENTITY(subgroup_size, (subgroup_size) | 0u))))))), clamp(clamp(_GLF_IDENTITY(subgroup_size, (subgroup_size) + 0u), subgroup_size, _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size))), (_GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size)))) | (_GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size)))))), _GLF_IDENTITY(clamp(subgroup_size, subgroup_size, _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size))), (_GLF_IDENTITY(subgroup_size, ~ (~ (_GLF_IDENTITY(subgroup_size, (0u & 52050u) + (subgroup_size)))))) | (_GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size)))))), min(clamp(subgroup_size, subgroup_size, _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size))), (_GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size)))) | (_GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size)))))), clamp(subgroup_size, subgroup_size, _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size))), _GLF_IDENTITY((_GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size)))), ((_GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size))))) | (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size)))), ((_GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size))))) | 0u))) | _GLF_IDENTITY((_GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size)))), max((_GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size)))), (_GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size)))))))))), _GLF_IDENTITY(clamp(subgroup_size, _GLF_IDENTITY(subgroup_size, (subgroup_size) << 0u), _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, ~ (~ _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(subgroup_size, (true ? subgroup_size : _GLF_FUZZED(workgroup_size)))), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_size, (true ? subgroup_size : _GLF_FUZZED(workgroup_size)))), ((_GLF_IDENTITY(subgroup_size, (true ? subgroup_size : _GLF_FUZZED(workgroup_size))))) - 0u)), (~ (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_size, (true ? subgroup_size : _GLF_FUZZED(workgroup_size)))), ((_GLF_IDENTITY(subgroup_size, (true ? subgroup_size : _GLF_FUZZED(workgroup_size))))) - 0u))) / 1u))), min(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(subgroup_size, (true ? subgroup_size : _GLF_FUZZED(workgroup_size)))), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_size, (true ? subgroup_size : _GLF_FUZZED(workgroup_size)))), ((_GLF_IDENTITY(subgroup_size, (true ? subgroup_size : _GLF_FUZZED(workgroup_size))))) - 0u)), (~ (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_size, (true ? subgroup_size : _GLF_FUZZED(workgroup_size)))), ((_GLF_IDENTITY(subgroup_size, (true ? subgroup_size : _GLF_FUZZED(workgroup_size))))) - 0u))) / 1u))), (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_size, (true ? subgroup_size : _GLF_FUZZED(workgroup_size)))), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_size, (true ? subgroup_size : _GLF_FUZZED(workgroup_size)))), ((_GLF_IDENTITY(subgroup_size, (true ? subgroup_size : _GLF_FUZZED(workgroup_size))))) - 0u)), (~ (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_size, (true ? subgroup_size : _GLF_FUZZED(workgroup_size)))), ((_GLF_IDENTITY(subgroup_size, (true ? subgroup_size : _GLF_FUZZED(workgroup_size))))) - 0u))) / 1u)))) + 0u), _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(subgroup_size, (true ? subgroup_size : _GLF_FUZZED(workgroup_size)))), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_size, (true ? subgroup_size : _GLF_FUZZED(workgroup_size)))), ((_GLF_IDENTITY(subgroup_size, (true ? subgroup_size : _GLF_FUZZED(workgroup_size))))) - 0u)), (~ (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_size, (true ? subgroup_size : _GLF_FUZZED(workgroup_size)))), ((_GLF_IDENTITY(subgroup_size, (true ? subgroup_size : _GLF_FUZZED(workgroup_size))))) - 0u))) / 1u))), (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_size, (true ? subgroup_size : _GLF_FUZZED(workgroup_size)))), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_size, (true ? subgroup_size : _GLF_FUZZED(workgroup_size)))), ((_GLF_IDENTITY(subgroup_size, (true ? subgroup_size : _GLF_FUZZED(workgroup_size))))) - 0u)), (~ (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_size, (true ? subgroup_size : _GLF_FUZZED(workgroup_size)))), ((_GLF_IDENTITY(subgroup_size, (true ? subgroup_size : _GLF_FUZZED(workgroup_size))))) - 0u))) / 1u)))) - (0u << _GLF_IDENTITY(uint(1u), uint(1u)))))))), (_GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size)))) | (_GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size)))))), (true ? clamp(subgroup_size, subgroup_size, _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(~ (~ (subgroup_size)), uint(uvec3(~ (~ (subgroup_size)), 0u, 1u)))), (_GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size)))) | (_GLF_IDENTITY(subgroup_size, ~ (~ (_GLF_IDENTITY(subgroup_size, (true ? subgroup_size : _GLF_FUZZED(workgroup_id))))))))) : _GLF_FUZZED(workgroup_base))))))) ^ _GLF_IDENTITY(0u, 0u ^ (0u)), (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(clamp(subgroup_size, subgroup_size, _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size))), (_GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size)))) | (_GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size)))))), clamp(clamp(_GLF_IDENTITY(subgroup_size, (subgroup_size) + 0u), subgroup_size, _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size))), (_GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size)))) | (_GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size)))))), _GLF_IDENTITY(clamp(subgroup_size, subgroup_size, _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size))), (_GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size)))) | (_GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size)))))), min(clamp(subgroup_size, subgroup_size, _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, ~ (~ _GLF_IDENTITY((subgroup_size), ((subgroup_size)) | ((subgroup_size))))), (_GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size)))) | (_GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size)))))), clamp(subgroup_size, subgroup_size, _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size))), (_GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size)))) | (_GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size)))))))), _GLF_IDENTITY(clamp(subgroup_size, subgroup_size, _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, ~ (~ _GLF_IDENTITY((_GLF_IDENTITY(subgroup_size, (true ? subgroup_size : _GLF_FUZZED(workgroup_size)))), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_size, (true ? subgroup_size : _GLF_FUZZED(workgroup_size)))), ((_GLF_IDENTITY(subgroup_size, (true ? subgroup_size : _GLF_FUZZED(workgroup_size))))) - 0u)), (~ (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_size, (true ? subgroup_size : _GLF_FUZZED(workgroup_size)))), ((_GLF_IDENTITY(subgroup_size, (true ? subgroup_size : _GLF_FUZZED(workgroup_size))))) - 0u))) / 1u))))), (_GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size)))) | (_GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size)))))), (true ? clamp(subgroup_size, subgroup_size, _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(~ (~ (subgroup_size)), uint(uvec3(~ (~ (subgroup_size)), 0u, 1u)))), (_GLF_IDENTITY(subgroup_size, ~ (~ _GLF_IDENTITY((subgroup_size), ((subgroup_size)) / 1u)))) | (_GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size)))))) : _GLF_FUZZED(workgroup_base))))))) ^ _GLF_IDENTITY(0u, 0u ^ (0u)), ((_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(clamp(subgroup_size, subgroup_size, _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, ~ (~ _GLF_IDENTITY((subgroup_size), 0u ^ ((subgroup_size))))), (_GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size)))) | (_GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size)))))), clamp(clamp(_GLF_IDENTITY(subgroup_size, (subgroup_size) + 0u), subgroup_size, _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size))), (_GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size)))) | (_GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size)))))), _GLF_IDENTITY(clamp(subgroup_size, subgroup_size, _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size))), (_GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size)))) | (_GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size)))))), min(clamp(subgroup_size, subgroup_size, _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size))), (_GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size)))) | (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(~ (~ (subgroup_size)), (~ (~ (subgroup_size))) << 0u)), _GLF_IDENTITY(uint(uint(_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(~ (~ (subgroup_size)), (~ (~ (subgroup_size))) << 0u)))), max(uint(uint(_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(~ (~ (subgroup_size)), (~ (~ (subgroup_size))) << 0u)))), uint(uint(_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(~ (~ (subgroup_size)), (~ (~ (subgroup_size))) << 0u)))))))))), clamp(subgroup_size, _GLF_IDENTITY(subgroup_size, (subgroup_size) ^ 0u), _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size))), (_GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size)))) | (_GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size)))))))), _GLF_IDENTITY(clamp(subgroup_size, subgroup_size, _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(~ (~ _GLF_IDENTITY((_GLF_IDENTITY(subgroup_size, (true ? subgroup_size : _GLF_FUZZED(workgroup_size)))), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_size, (true ? subgroup_size : _GLF_FUZZED(workgroup_size)))), ((_GLF_IDENTITY(subgroup_size, (true ? subgroup_size : _GLF_FUZZED(workgroup_size))))) - 0u)), (~ (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_size, (true ? subgroup_size : _GLF_FUZZED(workgroup_size)))), ((_GLF_IDENTITY(subgroup_size, (true ? subgroup_size : _GLF_FUZZED(workgroup_size))))) - 0u))) / 1u)))), (true ? ~ (~ _GLF_IDENTITY((_GLF_IDENTITY(subgroup_size, (true ? subgroup_size : _GLF_FUZZED(workgroup_size)))), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_size, (true ? subgroup_size : _GLF_FUZZED(workgroup_size)))), ((_GLF_IDENTITY(subgroup_size, (true ? subgroup_size : _GLF_FUZZED(workgroup_size))))) - 0u)), (~ (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (true ? subgroup_size : _GLF_FUZZED(workgroup_size))), (_GLF_IDENTITY(subgroup_size, (true ? subgroup_size : _GLF_FUZZED(workgroup_size)))) * 1u)), _GLF_IDENTITY(((_GLF_IDENTITY(subgroup_size, (true ? subgroup_size : _GLF_FUZZED(workgroup_size))))), clamp(((_GLF_IDENTITY(subgroup_size, (true ? subgroup_size : _GLF_FUZZED(workgroup_size))))), _GLF_IDENTITY(((_GLF_IDENTITY(subgroup_size, (true ? subgroup_size : _GLF_FUZZED(workgroup_size))))), (true ? ((_GLF_IDENTITY(subgroup_size, (true ? subgroup_size : _GLF_FUZZED(workgroup_size))))) : _GLF_FUZZED(usubBorrow(workgroup_size, subgroup_id, subgroup_local_id)))), _GLF_IDENTITY(((_GLF_IDENTITY(subgroup_size, (true ? subgroup_size : _GLF_FUZZED(workgroup_size))))), (((_GLF_IDENTITY(subgroup_size, (true ? subgroup_size : _GLF_FUZZED(workgroup_size)))))) - 0u))) - 0u))) / 1u)))) : _GLF_FUZZED(workgroup_size)))), (_GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size)))) | (_GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size)))))), (true ? clamp(subgroup_size, subgroup_size, _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(~ (~ _GLF_IDENTITY((subgroup_size), max((subgroup_size), (subgroup_size)))), uint(uvec3(~ (~ (subgroup_size)), 0u, 1u)))), (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size))), (_GLF_IDENTITY(subgroup_size, ~ (_GLF_IDENTITY(~ (subgroup_size), _GLF_IDENTITY(uint(uvec3(~ (subgroup_size), 1u, 0u)), 0u ^ (uint(uvec3(~ (subgroup_size), 1u, 0u)))))))) - uint(_GLF_ZERO(0.0, injectionSwitch.x)))) | (_GLF_IDENTITY(subgroup_size, ~ _GLF_IDENTITY((~ (subgroup_size)), clamp(_GLF_IDENTITY((~ (subgroup_size)), clamp((~ (subgroup_size)), (~ (subgroup_size)), (~ (subgroup_size)))), (~ (subgroup_size)), (~ (subgroup_size)))))))) : _GLF_FUZZED(workgroup_base))))))) ^ _GLF_IDENTITY(0u, 0u ^ (0u))) / 1u)) / 1u)) / 1u)))))))))))))) + subgroup_local_id;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 uint next_virtual_gid = _GLF_IDENTITY(workgroup_base, (workgroup_base) + (0u | 0u)) + subgroup_id * subgroup_size + ((subgroup_local_id + 1) % _GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY((subgroup_size), (_GLF_IDENTITY((subgroup_size), ((subgroup_size)) / uint(_GLF_ONE(1.0, injectionSwitch.y)))) | (_GLF_IDENTITY((subgroup_size), clamp(_GLF_IDENTITY((subgroup_size), ((subgroup_size)) - 0u), (subgroup_size), (subgroup_size))))) ^ (0u >> _GLF_IDENTITY(uint(3u), uint(3u))))) >> (1u ^ ((1u << _GLF_IDENTITY(uint(7u), uint(7u))) >> _GLF_IDENTITY(uint(7u), uint(7u))))));
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), ! (! (! (! _GLF_IDENTITY((false), ! (! ((false)))))))))))))
  {
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, false || (false)), false, false)))))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! _GLF_IDENTITY((! (_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec3((injectionSwitch.x > injectionSwitch.y), true, false))))), bool(bool(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec3((injectionSwitch.x > injectionSwitch.y), true, false)))))))))), ! (_GLF_IDENTITY(_GLF_IDENTITY(! ((! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec3((injectionSwitch.x > injectionSwitch.y), true, false)))))))), (! ((! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec3(_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, 1.0 * (_GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(-32.82)), bool(false)))))), _GLF_IDENTITY(bool(bool((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, 1.0 * (_GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(-32.82)), bool(false)))))))), ! (! (bool(bool((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, 1.0 * (_GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(-32.82)), bool(false)))))))))))), true, false))))))))) && true), bool(_GLF_IDENTITY(bvec3(! ((! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || (_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(_GLF_IDENTITY(vec2(injectionSwitch.y, 0.0), (vec2(injectionSwitch.y, 0.0)) / vec2(1.0, 1.0))))), bool(bvec3((injectionSwitch.x > injectionSwitch.y), true, false)))))))), false, false), bvec3(bvec3(bvec3(! ((! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec3((injectionSwitch.x > injectionSwitch.y), true, false)))))))), false, false))))))))))))
        {
         if(_GLF_DEAD(false))
          return;
         return;
        }
       barrier();
      }
     return;
    }
   return;
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec2(_GLF_DEAD(false), false)), ! (! (bool(bvec2(_GLF_DEAD(false), false)))))), false, true))))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
      barrier();
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec4(false, true, true, true)), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, float(mat3(injectionSwitch.x, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0))) < injectionSwitch.y)) && (bool(bvec4(_GLF_IDENTITY(false, true && (false)), true, true, true)))), true && (_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec4(false, true, true, true)), _GLF_IDENTITY(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, float(mat3(injectionSwitch.x, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0))) < injectionSwitch.y)), _GLF_IDENTITY(true, true && (true)) && (_GLF_IDENTITY(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, float(mat3(injectionSwitch.x, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0))) < injectionSwitch.y)), (_GLF_TRUE(true, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, float(mat3(injectionSwitch.x, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0))), min(_GLF_IDENTITY(injectionSwitch.x, float(mat3(injectionSwitch.x, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0))), _GLF_IDENTITY(injectionSwitch.x, float(mat3(injectionSwitch.x, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0))))) < injectionSwitch.y))) || false))) && (bool(bvec4(_GLF_IDENTITY(false, true && (false)), true, true, true)))), (_GLF_IDENTITY(bool(bvec4(false, true, true, true)), _GLF_IDENTITY(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, float(mat3(injectionSwitch.x, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0))) < injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, float(mat3(injectionSwitch.x, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0))) < injectionSwitch.y))), false || (! (_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, float(mat3(injectionSwitch.x, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0))) < injectionSwitch.y))))))) && (bool(bvec4(_GLF_IDENTITY(false, true && (false)), _GLF_IDENTITY(true, true && (true)), true, true))))) && true)))), (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY((false), _GLF_IDENTITY(((false)), bool(bvec3(((false)), false, false))) || false) && true)))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - abs(vec2(0.0, 0.0))).y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bool((_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(-8789.8921), _GLF_FUZZED(2919.3053)), bvec2(false, false)))) / vec2(1.0, 1.0)).x > injectionSwitch.y)))))))))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     return;
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true), _GLF_IDENTITY(true, _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(true, ! (! (true))), false)), ! (! _GLF_IDENTITY((bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, bool(bvec2(true, false)))))), _GLF_IDENTITY(! (! (true)), ! (! (! (! (true)))))), false))), ! (! ((bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, bool(bvec2(true, false)))))), _GLF_IDENTITY(! (! (true)), ! (! (! (! (true)))))), false)))))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(true, ! (! (true))), false)), ! (! _GLF_IDENTITY((bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(true, ! (! _GLF_IDENTITY((_GLF_IDENTITY(true, bool(bvec2(true, false)))), false || ((_GLF_IDENTITY(true, bool(bvec2(true, false)))))))), _GLF_IDENTITY(! _GLF_IDENTITY((! (true)), bool(bvec4((! (true)), true, false, false))), ! (! (! (! (true)))))), false))), ! (! ((bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, bool(bvec2(true, false)))))), _GLF_IDENTITY(! (! (true)), ! (! (_GLF_IDENTITY(! (! (true)), true && (! _GLF_IDENTITY((! (true)), ! (! (_GLF_IDENTITY((! (true)), true && ((! (true))))))))))))), false))))))))))))), ! (! (bool(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true), true)))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, 1.0 * (injectionSwitch.y))))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
        return;
      }
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  return;
 atomicStore(buf[next_virtual_gid], uint(1), 4, _GLF_IDENTITY(64, (64) | 0), 4);
 uint read_1 = atomicLoad(_GLF_IDENTITY(_GLF_IDENTITY(buf[virtual_gid], (false ? _GLF_FUZZED(next_virtual_gid) : buf[virtual_gid])), clamp(buf[virtual_gid], _GLF_IDENTITY(buf[virtual_gid], ~ _GLF_IDENTITY((~ (_GLF_IDENTITY(buf[virtual_gid], max(buf[virtual_gid], _GLF_IDENTITY(buf[virtual_gid], min(buf[virtual_gid], buf[_GLF_IDENTITY(virtual_gid, (_GLF_IDENTITY(_GLF_IDENTITY(virtual_gid, min(virtual_gid, virtual_gid)), ~ (~ (_GLF_IDENTITY(virtual_gid, min(virtual_gid, virtual_gid)))))) | 0u)])))))), ((~ (_GLF_IDENTITY(buf[virtual_gid], max(buf[virtual_gid], _GLF_IDENTITY(buf[virtual_gid], min(buf[virtual_gid], buf[_GLF_IDENTITY(virtual_gid, (_GLF_IDENTITY(_GLF_IDENTITY(virtual_gid, min(virtual_gid, virtual_gid)), ~ (~ (_GLF_IDENTITY(virtual_gid, min(virtual_gid, virtual_gid)))))) | 0u)]))))))) ^ 0u)), _GLF_IDENTITY(buf[virtual_gid], (_GLF_IDENTITY(buf[virtual_gid], (buf[_GLF_IDENTITY(virtual_gid, _GLF_IDENTITY((virtual_gid), min((virtual_gid), (virtual_gid))) >> uint(_GLF_ZERO(0.0, injectionSwitch.x)))]) | 0u)) | 0u))), 4, _GLF_IDENTITY(64, _GLF_IDENTITY((_GLF_IDENTITY(false, _GLF_IDENTITY(true && (_GLF_IDENTITY(false, ! (! (false)))), _GLF_IDENTITY(true, true && (true)) && (true && (_GLF_IDENTITY(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) && true))))) || false), ! (! (_GLF_IDENTITY(false, (false) && true)))))))) ? _GLF_FUZZED(94565) : _GLF_IDENTITY(_GLF_IDENTITY(64, min(64, 64)), (_GLF_IDENTITY(_GLF_IDENTITY(64, min(64, 64)), (_GLF_IDENTITY(64, min(64, 64))) + 0)) ^ 0)), min((_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(true, (_GLF_IDENTITY(true, _GLF_IDENTITY(_GLF_IDENTITY((true), bool(bvec2(_GLF_IDENTITY((true), ! (! ((true)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), true && ((true))) && true)) || false) && (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, bool(bool(false))), true, false, false))))))), bool(bvec2(_GLF_IDENTITY(true, (_GLF_IDENTITY(true, _GLF_IDENTITY(_GLF_IDENTITY((true), bool(bvec2(_GLF_IDENTITY((true), ! (! ((true)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), true && ((true))) && true)) || false) && (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, bool(bool(false))), true, false, false))))))), false)))) ? _GLF_FUZZED(94565) : _GLF_IDENTITY(64, min(64, _GLF_IDENTITY(64, int(ivec4(64, 1, _GLF_IDENTITY(0, clamp(0, 0, 0)), 1)))))), (_GLF_IDENTITY(false, true && (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (_GLF_IDENTITY(! _GLF_IDENTITY((false), ((false)) || false), ! (! (! (false))))) || false))), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(false, ! (! (false))))), (bool(bool(_GLF_IDENTITY(false, ! (! (false)))))) || false)))) ? _GLF_FUZZED(94565) : _GLF_IDENTITY(64, min(64, 64)))))), 0);
 if(_GLF_DEAD(false))
  return;
 atomicStore(buf[next_virtual_gid], uint(_GLF_IDENTITY(read_1, min(read_1, read_1)) + 1), 4, 64, 4);
 if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_DEAD(false), true)))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
}
