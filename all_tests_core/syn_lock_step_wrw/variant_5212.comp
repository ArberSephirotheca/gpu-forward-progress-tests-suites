#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec4(false, false, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true, ! (_GLF_IDENTITY(! ((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true), false || (_GLF_IDENTITY(! ((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true), ! (! (! ((_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0) > injectionSwitch.y))) && true)))))))))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false), true)), ! (! (bool(bvec2(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false), true)))))), _GLF_IDENTITY(true, false || (true)) && ((injectionSwitch.x > injectionSwitch.y))))))
    barrier();
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     barrier();
    }
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY((false) && true, ! (! ((false) && true)))), ! (! (_GLF_IDENTITY(false, _GLF_IDENTITY((false) && true, ! (! ((false) && true)))))))))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y))))))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(false))
    return;
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), (bool(false)) && true)))) && true)))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec4(false, false, false, true))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(mat4x3(injectionSwitch, round(length(normalize(vec2(1.0, 1.0)))), 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, round(length(normalize(vec3(1.0, 1.0, 1.0)))), 0.0, 1.0))).y)), false || (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bool(injectionSwitch.x > injectionSwitch.y))))), ! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(true, ! (! (true))) && (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bool(injectionSwitch.x > injectionSwitch.y))))))))))))))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, true, false)))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, false, false)))))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        return;
       return;
      }
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2((injectionSwitch.x > injectionSwitch.y), false), bvec2(bvec4(bvec2((injectionSwitch.x > injectionSwitch.y), false), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), false || (bool(_GLF_IDENTITY(bvec2((injectionSwitch.x > injectionSwitch.y), false), bvec2(bvec4(bvec2((injectionSwitch.x > injectionSwitch.y), false), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))))))
  barrier();
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), (bool(false)) && true)))) || false)))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec2(_GLF_DEAD(false), true)), bool(bvec2(bool(bvec2(_GLF_DEAD(false), true)), true)))))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
    }
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec2(bvec2(false, false))))), ! (! (bool(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec2(bvec2(false, false))))))))) ? _GLF_IDENTITY(_GLF_FUZZED(injectionSwitch), min(_GLF_FUZZED(injectionSwitch), _GLF_FUZZED(injectionSwitch))) : _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)))).x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, float(mat2x4(injectionSwitch.x, round(length(normalize(1.0))), _GLF_IDENTITY(dot(vec2(_GLF_ZERO(0.0, injectionSwitch.x), 1.0), vec2(0.0, 1.0)), _GLF_IDENTITY(_GLF_IDENTITY(dot(vec2(_GLF_ZERO(0.0, injectionSwitch.x), 1.0), vec2(0.0, 1.0)), max(dot(vec2(_GLF_ZERO(0.0, injectionSwitch.x), 1.0), vec2(0.0, 1.0)), dot(vec2(_GLF_ZERO(0.0, injectionSwitch.x), 1.0), vec2(0.0, 1.0)))), clamp(dot(vec2(_GLF_ZERO(0.0, injectionSwitch.x), 1.0), vec2(0.0, 1.0)), dot(vec2(_GLF_ZERO(0.0, injectionSwitch.x), 1.0), vec2(0.0, 1.0)), dot(vec2(_GLF_ZERO(0.0, injectionSwitch.x), 1.0), vec2(0.0, 1.0))))), _GLF_ZERO(0.0, injectionSwitch.x), abs(0.0), 0.0, 1.0, 1.0))) > injectionSwitch.y))))
    barrier();
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), (_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))), _GLF_IDENTITY(! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (! (! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))) || false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - sin(vec2(0.0, 0.0))).x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
      return;
     barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       barrier();
      }
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
      return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(142.049), _GLF_FUZZED((- 20.92))), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))).y, false || (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(142.049), _GLF_FUZZED((- 20.92))), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))).y)), bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(142.049), _GLF_FUZZED((- 20.92))), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))).y, bool(bvec2(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(142.049), _GLF_FUZZED((- 20.92))), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))).y, false))), false || (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(142.049), _GLF_FUZZED((- 20.92))), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))).y, bool(bvec2(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(142.049), _GLF_FUZZED((- 20.92))), _GLF_IDENTITY(vec2((injectionSwitch)[0], (injectionSwitch)[1]), (vec2((injectionSwitch)[0], (injectionSwitch)[1])) - vec2(0.0, 0.0)), bvec2(true, true))).y, false))))), true, true)))))))
      return;
     return;
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))), false, false), bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_DEAD(false), false, false), _GLF_IDENTITY(bvec3(bvec4(bvec3(_GLF_DEAD(false), false, false), true)), bvec3(bvec4(bvec3(bvec4(bvec3(_GLF_DEAD(false), false, false), true)), false)))), false))))))
  barrier();
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), true && (_GLF_IDENTITY(false, _GLF_IDENTITY((false) || _GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(false, bool(bvec2(false, false))), true, _GLF_IDENTITY(false, (false) && true), false)), true && (_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(false, bool(bvec2(false, false))), true, _GLF_IDENTITY(false, (false) && true), false)), ! (! (bool(bvec4(_GLF_IDENTITY(false, bool(bvec2(false, false))), true, _GLF_IDENTITY(false, (false) && true), false)))))))), ! (! (_GLF_IDENTITY((false) || false, ! (! (_GLF_IDENTITY((false) || false, _GLF_IDENTITY(bool(bvec3((false) || false, true, true)), bool(bvec3(bool(bvec3((false) || false, true, true)), true, false))))))))))))), _GLF_IDENTITY(! (! (_GLF_IDENTITY(false, (false) || false))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (! (! (_GLF_IDENTITY(false, (false) || false))))))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).x, max(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(537.799), _GLF_FUZZED(435.200)), vec2((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch)[1], clamp(_GLF_IDENTITY((injectionSwitch)[1], (_GLF_IDENTITY((injectionSwitch)[1], float(mat2x4((injectionSwitch)[1], 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0)))) * 1.0), (injectionSwitch)[1], _GLF_IDENTITY((injectionSwitch)[1], clamp((injectionSwitch)[1], (injectionSwitch)[1], (injectionSwitch)[1]))))), _GLF_IDENTITY(bvec2(true, _GLF_IDENTITY(true, bool(bvec4(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, true)))), bvec2(bvec2(bvec2(true, _GLF_IDENTITY(true, bool(bvec4(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, true))))))))).x, injectionSwitch.x)))) > injectionSwitch.y))))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) || false)))), false || (false)), (false) && true)))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, false, false)), true && (bool(bvec3(false, false, _GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(false), (bool(false)) && true)), (bool(_GLF_IDENTITY(bool(false), (bool(false)) && true))) && true)))))))))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(vec4(injectionSwitch.y, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), determinant(mat4(1.0, 1.0, _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED((-2.5 + -563.224)) : 1.0)), 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0)), 0.0)))))))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      return;
    }
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec2((injectionSwitch.x > injectionSwitch.y), false))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) && true)))), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))), (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], max(injectionSwitch[1], injectionSwitch[1]))))), _GLF_IDENTITY(mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], max(injectionSwitch[1], injectionSwitch[1])))))), min(mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], max(injectionSwitch[1], injectionSwitch[1])))))), mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], max(injectionSwitch[1], injectionSwitch[1])))))))))).x > injectionSwitch.y), true && ((_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], max(injectionSwitch[1], injectionSwitch[1]))))), _GLF_IDENTITY(mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], max(injectionSwitch[1], injectionSwitch[1])))))), min(mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], max(injectionSwitch[1], injectionSwitch[1])))))), mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], max(injectionSwitch[1], injectionSwitch[1])))))))))).x > injectionSwitch.y))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(mat4(injectionSwitch.x, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0)), clamp(float(mat4(injectionSwitch.x, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0)), float(mat4(injectionSwitch.x, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0)), float(mat4(injectionSwitch.x, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0)))))) * 1.0) > injectionSwitch.y))))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_DEAD(false), true, false))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, false, false), _GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(bvec3(false, false, false)), bvec3(bvec4(bvec3(bvec3(false, false, false)), false)))), bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec3(false, false, false)), bvec3(bvec4(bvec3(bvec3(false, false, false)), false))))))))))))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(false || (false), (false || (false)) || false))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     return;
    }
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))).y))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    return;
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(334.639)))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) && true)))
  return;
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), bool(bool(_GLF_IDENTITY(false, false || (false)))))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))
      barrier();
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), true, true, false))))
    barrier();
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)).y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(_GLF_IDENTITY(bool(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), _GLF_IDENTITY(bool(bvec2(bool(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true)), true && (bool(bvec2(bool(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true))))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(true, (true) && _GLF_IDENTITY(true, (true) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && (_GLF_IDENTITY(false, bool(bvec4(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)))))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), injectionSwitch)))[0], float(mat2x3((injectionSwitch)[0], 1.0, 1.0, 0.0, 1.0, 0.0))), _GLF_FUZZED(float(4672u))), vec2(_GLF_FUZZED(-907.438), (injectionSwitch)[1]), bvec2(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))).x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))), max(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))), _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))))).y))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      return;
    }
   barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4((injectionSwitch.x > injectionSwitch.y), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true))))))))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 uint num_workgroup = gl_NumWorkGroups.x;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_DEAD(false), true, true))), false, true, true))), bool(_GLF_IDENTITY(bvec2(_GLF_DEAD(false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bvec2(bvec2(bvec2(_GLF_DEAD(false), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x < injectionSwitch.y)))))))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x > injectionSwitch.y), bool(bvec4(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x > injectionSwitch.y), bool(_GLF_IDENTITY(bvec2((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), max(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)))).x > injectionSwitch.y), false), bvec2(bvec3(bvec2((_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x > injectionSwitch.y), false), false))))), true, false, false))))), bool(_GLF_IDENTITY(bool(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x > injectionSwitch.y), bool(bvec4(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x > injectionSwitch.y), bool(_GLF_IDENTITY(bvec2((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), max(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)))).x > injectionSwitch.y), false), bvec2(bvec3(bvec2((_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x > injectionSwitch.y), false), false))))), true, false, false)))))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(bool(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x > injectionSwitch.y), bool(bvec4(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x > injectionSwitch.y), bool(_GLF_IDENTITY(bvec2((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), max(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)))).x > injectionSwitch.y), false), bvec2(bvec3(bvec2((_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x > injectionSwitch.y), false), false))))), true, false, false)))))), true, true), bvec3(bvec3(bvec3(bool(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x > injectionSwitch.y), bool(bvec4(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x > injectionSwitch.y), bool(_GLF_IDENTITY(bvec2((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), max(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)))).x > injectionSwitch.y), false), bvec2(bvec3(bvec2((_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x > injectionSwitch.y), false), false))))), true, false, false)))))), true, true))))), ! (! (bool(_GLF_IDENTITY(bvec3(bool(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x > injectionSwitch.y), bool(bvec4(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x > injectionSwitch.y), bool(_GLF_IDENTITY(bvec2((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), max(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)))).x > injectionSwitch.y), false), bvec2(bvec3(bvec2((_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x > injectionSwitch.y), false), false))))), true, false, false)))))), true, true), bvec3(bvec3(bvec3(bool(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x > injectionSwitch.y), bool(bvec4(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x > injectionSwitch.y), bool(_GLF_IDENTITY(bvec2((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), max(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)))).x > injectionSwitch.y), false), bvec2(bvec3(bvec2((_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x > injectionSwitch.y), false), false))))), true, false, false)))))), true, true))))))))))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec3(_GLF_DEAD(false), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(bool(bvec3(_GLF_DEAD(false), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), false || (bool(bvec3(_GLF_DEAD(false), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), true, false, true)), true && (bool(bvec4(_GLF_IDENTITY(bool(bvec3(_GLF_DEAD(false), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), false || (bool(bvec3(_GLF_DEAD(false), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), true, false, true)))))))
          barrier();
         return;
        }
       barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
            return;
           barrier();
          }
         if(_GLF_DEAD(false))
          return;
         return;
        }
       if(_GLF_DEAD(false))
        return;
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_DEAD(false), true))))
      barrier();
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_DEAD(false))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, true)), ! (! (bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec4(bvec2(false, true), true, false))))))))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_DEAD(false), true, false)))))), false, true, true)), (bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_DEAD(false), true, false)))))), false, true, true))) || false)))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), ! (! (bool(bool(false))))))))
        barrier();
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      return;
     barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, _GLF_IDENTITY(false, ! (! (false))), false, _GLF_TRUE(_GLF_IDENTITY(true, bool(bool(true))), (injectionSwitch.x < injectionSwitch.y)))))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
    }
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))), ! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))), ! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))), (_GLF_DEAD(_GLF_IDENTITY(false, true && (false)))) && true))))))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, true && (false)), (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(_GLF_IDENTITY(false, true && (false)), (injectionSwitch.x > injectionSwitch.y))))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        return;
      }
     return;
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_DEAD(false), false))), _GLF_IDENTITY(! _GLF_IDENTITY((! (_GLF_DEAD(false))), bool(_GLF_IDENTITY(bvec3((! (_GLF_DEAD(false))), false, true), bvec3(bvec3(bvec3((! (_GLF_DEAD(false))), false, true)))))), _GLF_IDENTITY(bool(bvec4(! _GLF_IDENTITY((! (_GLF_DEAD(false))), bool(_GLF_IDENTITY(bvec3((! (_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))), false, true), bvec3(bvec3(bvec3((! (_GLF_DEAD(false))), false, true)))))), true, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), ! (! (bool(bvec4(! _GLF_IDENTITY((! (_GLF_DEAD(false))), bool(_GLF_IDENTITY(bvec3((! (_GLF_DEAD(false))), false, true), bvec3(bvec3(bvec3((! (_GLF_DEAD(false))), false, true)))))), true, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(false, true, true), bvec3(bvec4(bvec3(false, true, true), true)))), (bool(_GLF_IDENTITY(bvec3(false, true, true), bvec3(bvec4(bvec3(false, true, true), true))))) || false))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), _GLF_IDENTITY((false ? _GLF_FUZZED(330.645) : injectionSwitch.x), clamp((false ? _GLF_FUZZED(330.645) : injectionSwitch.x), (false ? _GLF_FUZZED(330.645) : _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], min(injectionSwitch[0], injectionSwitch[0])), injectionSwitch[1])).x), _GLF_IDENTITY((false ? _GLF_FUZZED(330.645) : injectionSwitch.x), (false ? _GLF_FUZZED(1.5) : (false ? _GLF_FUZZED(330.645) : injectionSwitch.x)))))) > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), false || (false))))
      barrier();
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))
    return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false))))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, bool(bvec2(false, false))))))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(false, ! (! (false))))), (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(mix(float(_GLF_FUZZED(-2.3)), float(injectionSwitch.x), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), float(mat2(mix(float(_GLF_FUZZED(-2.3)), float(injectionSwitch.x), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), 1.0, abs(1.0), 1.0)))) > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
    }
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), false || (false)))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(0.3), _GLF_FUZZED(_GLF_IDENTITY(37.18, clamp(37.18, 37.18, 37.18)))), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))))) : _GLF_FUZZED(injectionSwitch))).y))))
      {
       if(_GLF_DEAD(false))
        return;
       return;
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).y))))
          barrier();
         return;
        }
       return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-7.2)), vec2(_GLF_FUZZED(-29.86), (injectionSwitch)[1]), bvec2(false, true))).x > injectionSwitch.y))))
          return;
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-5.6), _GLF_FUZZED(-9.6)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))), _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch), vec2(mat4x2((false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch), 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 1.0, 1.0, 0.0)))), injectionSwitch)).y))) && true)))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         return;
        }
       if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         return;
        }
       barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         barrier();
        }
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) || false))))))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
    }
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))
    barrier();
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec3((injectionSwitch.x > injectionSwitch.y), false, true))))))
      return;
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 if(_GLF_DEAD(false))
  barrier();
 uint workgroup_size = gl_WorkGroupSize.x;
 if(_GLF_DEAD(false))
  barrier();
 uint workgroup_id = gl_WorkGroupID.x;
 if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bool(_GLF_DEAD(false))), ! (! (bool(bool(_GLF_DEAD(false))))))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0))) + abs(vec2(0.0, 0.0))).x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true)))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, true && (false))))))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), vec2(mat4x3(injectionSwitch, 1.0, 0.0, abs(0.0), 0.0, 1.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0))), _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), _GLF_IDENTITY(dot(vec2(_GLF_IDENTITY(1.0, min(1.0, 1.0)), 0.0), vec2(1.0, 0.0)), min(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), vec2(1.0, 0.0))))), 0.0))).y))))
      barrier();
     return;
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y))))))
    return;
   if(_GLF_DEAD(false))
    barrier();
   return;
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(atanh(3066.7575)) : injectionSwitch.x)) > injectionSwitch.y)))) && true))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_DEAD(false))
  barrier();
 uint workgroup_base = workgroup_size * workgroup_id;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bool(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))))))), false || ((injectionSwitch.x > injectionSwitch.y))), false, false, _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(6.9)), bool(false)))))))))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (! (_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
    }
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint virtual_gid = _GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, min(_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, ~ (~ (workgroup_base + _GLF_IDENTITY(subgroup_id, uint(uvec2(subgroup_id, 0u))) * subgroup_size))), _GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, (workgroup_base + subgroup_id * subgroup_size) | 0u))) + subgroup_local_id;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))), ! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), (! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)), injectionSwitch)).y)) && true)))))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
    }
   barrier();
   if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, false, false)), bool(bool(bool(bvec3(false, false, false)))))), (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(vec4(injectionSwitch, 0.0, 1.0)), (vec2(vec4(injectionSwitch, 0.0, 1.0))) * mat2(1.0))).x > injectionSwitch.y))))), ! (! (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, ! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false))), (_GLF_IDENTITY(! (_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false))), ! (! (! (_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false))))))) || false), _GLF_IDENTITY(! (! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false))), false || (! (_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false))))))), bool(bvec2(! (! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false))), false || (! (_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false))))))), false))))), bool(bvec3((_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false))), (_GLF_IDENTITY(! (_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false))), ! (! (! (_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false))))))) || false), _GLF_IDENTITY(! (! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false))), false || (! (_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false))))))), bool(bvec2(! (! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false))), false || (! (_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false))))))), false))))), true, true)))), (injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_FALSE(_GLF_IDENTITY(false, (false) && true), _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))))), true && (! (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec2((injectionSwitch.x > injectionSwitch.y), true))))))))))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * 1.0) > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0))) / vec2(1.0, 1.0)), (true ? injectionSwitch : _GLF_FUZZED(abs(cos(_GLF_IDENTITY(vec2(_GLF_IDENTITY(-3936.3394, float(mat2x4(-3936.3394, 0.0, 1.0, 1.0, 1.0, 1.0, cos(0.0), 0.0))), -67.94), vec2(0.0, 0.0) + (vec2(_GLF_IDENTITY(-3936.3394, float(mat2x4(-3936.3394, 0.0, 1.0, 1.0, 1.0, 1.0, cos(0.0), 0.0))), -67.94)))))))).y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_DEAD(false))))
      return;
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).y))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(false, true))), ! (! (_GLF_IDENTITY(false, bool(bvec2(false, true))))))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      return;
    }
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > injectionSwitch.y), ! (! ((_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > injectionSwitch.y)))))) || false)))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 uint next_virtual_gid = workgroup_base + _GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, uint(uvec2(subgroup_id, 1u))), clamp(subgroup_id, subgroup_id, subgroup_id)), uint(uvec2(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, uint(uvec2(subgroup_id, 1u))), clamp(subgroup_id, subgroup_id, subgroup_id)), 0u)))) | (subgroup_id)) * _GLF_IDENTITY(subgroup_size, (subgroup_size) >> 0u) + ((subgroup_local_id + 1) % subgroup_size);
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     return;
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec3(injectionSwitch.x > injectionSwitch.y, true, false)))) && true)))))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), false || (_GLF_IDENTITY(false, (false) || false))))))), bool(bvec2(bool(bool(_GLF_IDENTITY(false, _GLF_IDENTITY(false || (_GLF_IDENTITY(false, (false) || false)), true && (_GLF_IDENTITY(false || (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) && true)) || false)), ! (_GLF_IDENTITY(! (false || (_GLF_IDENTITY(false, (false) || false))), true && _GLF_IDENTITY((! (_GLF_IDENTITY(false, bool(bvec2(false, _GLF_IDENTITY(false, bool(bvec3(false, false, false)))))) || (_GLF_IDENTITY(false, (false) || false)))), _GLF_IDENTITY((_GLF_IDENTITY((! (false || (_GLF_IDENTITY(false, (false) || false)))), ! (! ((! (false || (_GLF_IDENTITY(false, (false) || false)))))))), bool(bvec3(_GLF_IDENTITY((_GLF_IDENTITY((! (false || (_GLF_IDENTITY(false, (false) || false)))), ! (! ((! (false || (_GLF_IDENTITY(false, (false) || false)))))))), ((_GLF_IDENTITY((! (false || (_GLF_IDENTITY(false, (false) || false)))), ! (! ((! (false || (_GLF_IDENTITY(false, (false) || false))))))))) || false), true, false))) && _GLF_IDENTITY(true, ! (! (true)))))))))))), true))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(-6130.2869))) > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         barrier();
        }
       if(_GLF_DEAD(false))
        return;
       barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
      }
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         barrier();
        }
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        barrier();
       return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          barrier();
         return;
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         barrier();
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
           if(_GLF_DEAD(false))
            barrier();
           return;
          }
         if(_GLF_DEAD(false))
          return;
         barrier();
        }
       if(_GLF_DEAD(false))
        return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(mat2x4(injectionSwitch, 1.0, 1.0, 0.0, 1.0, 0.0, abs(1.0)))).y, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(mat2x4(injectionSwitch, 1.0, 1.0, 0.0, 1.0, 0.0, abs(1.0)))).y, true && (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(mat2x4(injectionSwitch, 1.0, 1.0, 0.0, 1.0, 0.0, abs(1.0)))).y, clamp(_GLF_IDENTITY(injectionSwitch, vec2(mat2x4(injectionSwitch, 1.0, 1.0, 0.0, 1.0, 0.0, abs(1.0)))).y, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(mat2x4(injectionSwitch, 1.0, 1.0, 0.0, 1.0, 0.0, abs(1.0)))).y, float(mat2x3(_GLF_IDENTITY(injectionSwitch, vec2(mat2x4(injectionSwitch, 1.0, 1.0, 0.0, 1.0, 0.0, abs(1.0)))).y, 0.0, 0.0, 0.0, 1.0, 0.0))), _GLF_IDENTITY(injectionSwitch, vec2(mat2x4(injectionSwitch, 1.0, 1.0, 0.0, 1.0, 0.0, abs(1.0)))).y))))))))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     barrier();
    }
   return;
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(_GLF_IDENTITY((_GLF_DEAD(false)) || false, ((_GLF_DEAD(false)) || false) || false), ((_GLF_DEAD(false)) || false) && true))) && true))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), ! (_GLF_IDENTITY(! (! (injectionSwitch.x > injectionSwitch.y)), false || (! (! (injectionSwitch.x > injectionSwitch.y))))))))))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, true && (false))) && true)))
          return;
         barrier();
        }
       if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY((false), bool(bvec4(_GLF_IDENTITY((false), bool(bvec2((false), false))), false, false, true))) && true)))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         barrier();
         if(_GLF_DEAD(false))
          barrier();
        }
       return;
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true))), ! (_GLF_IDENTITY(! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true)))), bool(bvec2(! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true)))), true)))))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         return;
         if(_GLF_DEAD(false))
          barrier();
        }
       return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(false, ! (! (false)))))))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec4(_GLF_DEAD(false), false, false, false)), ! (! (bool(bvec4(_GLF_DEAD(false), false, false, false)))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(975.123)), float(injectionSwitch.y), bool(true)))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       return;
      }
    }
   barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-3599.3102)), vec2(_GLF_FUZZED(34.71), _GLF_IDENTITY((injectionSwitch)[1], float(_GLF_IDENTITY(mat3x4((injectionSwitch)[1], 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, cos(0.0), 0.0, 1.0, 1.0), transpose(transpose(mat3x4((injectionSwitch)[1], 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, cos(0.0), 0.0, 1.0, 1.0))))))), bvec2(false, true))).x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, bool(bvec3(false, _GLF_IDENTITY(true, _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(true), bool(bool(bool(true))))), (bool(_GLF_IDENTITY(bool(true), bool(bool(bool(true)))))) || false)), false))))), (false) || false)))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     barrier();
    }
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0) > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-25.35), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED((7.1 * 14.61))), bvec2(true, false))).x < _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)))), false))))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(! (! (_GLF_DEAD(false))), bool(bvec4(! (! (_GLF_DEAD(false))), false, false, false)))))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y)), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)), bool(bool(bool(bvec4(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y)), true, _GLF_FALSE(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, bool(bool(false)))), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(! (_GLF_IDENTITY(false, bool(bool(false)))), true && (! (_GLF_IDENTITY(false, bool(bool(false))))))), bool(bvec4(bool(_GLF_IDENTITY(! (_GLF_IDENTITY(false, bool(bool(false)))), true && (! (_GLF_IDENTITY(false, bool(bool(false))))))), true, false, true))))))), (injectionSwitch.x > injectionSwitch.y)), true)))))), false, _GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(55.56)), bool(false))) > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).x > injectionSwitch.y)) && true)) && true)), false)), bool(bvec3(bool(bvec4(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(-4398.5586))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec3(bvec2(false, true), false))))))), false, true))))))))))
        barrier();
       return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / _GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0)), dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0))))))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false))))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            return;
           barrier();
          }
         if(_GLF_DEAD(false))
          barrier();
         return;
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, true)))))
            barrier();
           if(_GLF_DEAD(false))
            return;
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_DEAD(false))
            return;
           return;
          }
         barrier();
        }
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         return;
        }
       return;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))) && true))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
          return;
         barrier();
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0)))))
        barrier();
       return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        return;
      }
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      return;
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec3(false, true, false)), false || (bool(bvec3(false, true, false)))), bool(bool(bool(bvec3(false, true, false))))))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (false))))))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))).y), ! (! ((_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > injectionSwitch.y)))))))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, bool(bool(false)))))))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(injectionSwitch.x > injectionSwitch.y, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, true)))))))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
      barrier();
     return;
    }
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bvec4(injectionSwitch.x > injectionSwitch.y, false, true, false)), bool(bvec4(bool(bvec4(injectionSwitch.x > injectionSwitch.y, false, true, false)), true, true, false))))) || false)))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)).x > injectionSwitch.y)) || (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, bool(bvec4(false, false, false, true))), true, false), bvec3(bvec4(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(false, false, false, true))), bool(bool(_GLF_IDENTITY(false, bool(bvec4(false, false, false, true)))))), true, false), true))))), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true)))), false || (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), false || (! (false))))), (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), false || (! (false))))), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(true, bool(bool(true))) && (injectionSwitch.x > injectionSwitch.y))))) || false)) && true)), bool(bool(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], (injectionSwitch[0]) - 0.0), injectionSwitch[1])).y))))))))))))))), (! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, bool(bvec4(false, _GLF_IDENTITY(false, (_GLF_IDENTITY(false, false || (false))) && true), false, true))), true, _GLF_IDENTITY(false, bool(bvec3(false, true, true)))), bvec3(bvec4(bvec3(_GLF_IDENTITY(false, bool(bvec4(false, false, false, true))), true, false), true))))), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + 0.0) > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true)), ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + 0.0) > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true))) || false))), false || (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), _GLF_IDENTITY(false, bool(bool(false))) || (! (false))))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(43.71), _GLF_FUZZED(-38.39)), bvec2(false, false))) : _GLF_FUZZED(log(injectionSwitch)))).y))) && true)), ! (! (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY((_GLF_FALSE(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), false || (! (false))))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y))) && true, false || (_GLF_IDENTITY((_GLF_FALSE(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), false || (! (false))))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y))) && true, ! (! (_GLF_IDENTITY((_GLF_FALSE(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), false || (! (false))))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y))) && true, true && ((_GLF_FALSE(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), false || (! (false))))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y))) && true)))))))))))), bool(bool(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).y)))))))))))))))) || _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bvec2(injectionSwitch.x > injectionSwitch.y, true)), bool(bvec4(bool(bvec2(injectionSwitch.x > injectionSwitch.y, true)), true, false, false)))))))))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), true, false, true))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, (true ? _GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(-22.82))) : _GLF_FUZZED(7.7))), injectionSwitch.x)) > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
        return;
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) && true), (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))
        barrier();
       barrier();
      }
     return;
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY((false), bool(bvec4((false), true, false, true))) && true)))
    return;
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(injectionSwitch.x > injectionSwitch.y, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, false)))))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, (false) && true)))) && true)))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((_GLF_IDENTITY(injectionSwitch.x, float(mat4x3(injectionSwitch.x, abs(0.0), _GLF_IDENTITY(dot(vec4(1.0, 0.0, 1.0, 0.0), vec4(0.0, 1.0, 0.0, 1.0)), dot(vec4(1.0, 0.0, 1.0, 0.0), vec4(0.0, 1.0, 0.0, 1.0))), 1.0, cos(0.0), 1.0, cos(0.0), 1.0, 0.0, 1.0, 0.0, 0.0))) > _GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, float(mat2x3(injectionSwitch.y, exp(0.0), 1.0, 1.0, sqrt(1.0), 0.0))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)), float(vec2(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), 1.0))), injectionSwitch.y)))) || _GLF_IDENTITY(false, ! (! (false)))))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(-8.3))) > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)).x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         return;
        }
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         return;
        }
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(_GLF_IDENTITY(! (false), bool(_GLF_IDENTITY(bool(! (false)), false || (bool(! (false)))))), (_GLF_IDENTITY(! (false), ! (! (! (false))))) || false)))))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
          barrier();
         return;
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         return;
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(_GLF_IDENTITY(float(injectionSwitch.y), min(_GLF_IDENTITY(float(injectionSwitch.y), _GLF_IDENTITY(mix(float(_GLF_FUZZED(-98.04)), float(float(injectionSwitch.y)), bool(true)), max(mix(float(_GLF_FUZZED(-98.04)), float(float(injectionSwitch.y)), bool(true)), mix(float(_GLF_FUZZED(-98.04)), _GLF_IDENTITY(float(float(injectionSwitch.y)), (false ? _GLF_FUZZED(481.699) : float(float(injectionSwitch.y)))), bool(true))))), float(injectionSwitch.y)))))))))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
      return;
     return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(false, false || (false)) || (false)), (_GLF_IDENTITY(false, false || (false))) || false))))), true && (_GLF_IDENTITY(! (_GLF_IDENTITY(false, false || (false))), (_GLF_IDENTITY(! (_GLF_IDENTITY(false, false || (false))), true && (! (_GLF_IDENTITY(false, _GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), true && (! (false))))) || (false)))))) && _GLF_IDENTITY(true, false || (true))))), true && (! (_GLF_IDENTITY(false, false || (false)))))))))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false)))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     barrier();
    }
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     return;
     if(_GLF_DEAD(false))
      return;
    }
   return;
   if(_GLF_DEAD(false))
    return;
  }
 atomicStore(buf[_GLF_IDENTITY(next_virtual_gid, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(uvec2(next_virtual_gid, 0u), uvec2(1u, 1u) * _GLF_IDENTITY((uvec2(next_virtual_gid, 0u)), ((uvec2(next_virtual_gid, 0u))) >> uvec2(0u, 0u)))), min(uint(_GLF_IDENTITY(uvec2(next_virtual_gid, 0u), uvec2(1u, 1u) * _GLF_IDENTITY((uvec2(next_virtual_gid, 0u)), ((uvec2(next_virtual_gid, 0u))) >> uvec2(0u, 0u)))), uint(_GLF_IDENTITY(uvec2(next_virtual_gid, 0u), uvec2(1u, 1u) * _GLF_IDENTITY((uvec2(next_virtual_gid, 0u)), ((uvec2(next_virtual_gid, 0u))) >> uvec2(0u, 0u)))))), max(uint(_GLF_IDENTITY(uvec2(next_virtual_gid, _GLF_IDENTITY(0u, ~ (~ (_GLF_IDENTITY(0u, max(0u, 0u)))))), _GLF_IDENTITY(uvec2(1u, 1u), (uvec2(1u, _GLF_IDENTITY(1u, (1u) | (_GLF_IDENTITY(1u, 0u | (1u)))))) >> uvec2(0u, 0u)) * (uvec2(next_virtual_gid, 0u)))), uint(_GLF_IDENTITY(uvec2(next_virtual_gid, 0u), _GLF_IDENTITY(uvec2(1u, 1u), _GLF_IDENTITY(uvec2(uvec2(uvec2(1u, 1u))), (uvec2(0u, _GLF_IDENTITY(0u, (true ? 0u : _GLF_FUZZED(next_virtual_gid)))) | uvec2(0u, 0u)) | (uvec2(uvec2(_GLF_IDENTITY(uvec2(1u, 1u), uvec2(uvec3(uvec2(1u, 1u), 1u)))))))) * (uvec2(next_virtual_gid, 0u)))))), (uint(_GLF_IDENTITY(uvec2(next_virtual_gid, _GLF_IDENTITY(0u, _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec2(_GLF_IDENTITY(0u, ~ (_GLF_IDENTITY(_GLF_IDENTITY(~ (0u), _GLF_IDENTITY(min(_GLF_IDENTITY(_GLF_IDENTITY(~ (0u), (false ? _GLF_FUZZED(subgroup_local_id) : ~ (0u))), ~ (~ (_GLF_IDENTITY(~ (0u), _GLF_IDENTITY(~ (~ (~ (0u))), _GLF_IDENTITY(uint(uvec3(~ (~ (~ (0u))), 1u, 0u)), 0u | (_GLF_IDENTITY(uint(uvec3(~ (~ (~ (0u))), 1u, 0u)), (uint(uvec3(~ (~ (~ (0u))), 1u, 0u))) >> 0u)))))))), ~ (0u)), max(min(_GLF_IDENTITY(_GLF_IDENTITY(~ (0u), (false ? _GLF_FUZZED(subgroup_local_id) : ~ (0u))), ~ (~ (_GLF_IDENTITY(~ (0u), ~ (~ (~ (0u))))))), ~ (0u)), min(_GLF_IDENTITY(_GLF_IDENTITY(~ (0u), (false ? _GLF_FUZZED(subgroup_local_id) : ~ (0u))), ~ (~ (_GLF_IDENTITY(~ (0u), ~ (~ (~ (0u))))))), ~ (0u))))), 0u ^ (_GLF_IDENTITY(~ (0u), _GLF_IDENTITY(min(_GLF_IDENTITY(_GLF_IDENTITY(~ (0u), (false ? _GLF_FUZZED(subgroup_local_id) : ~ (0u))), ~ (~ (_GLF_IDENTITY(~ (0u), _GLF_IDENTITY(~ (~ (~ (0u))), _GLF_IDENTITY(uint(uvec3(~ (~ (~ (0u))), 1u, 0u)), 0u | (_GLF_IDENTITY(uint(uvec3(~ (~ (~ (0u))), 1u, 0u)), (uint(uvec3(~ (~ (~ (0u))), 1u, 0u))) >> 0u)))))))), ~ (0u)), max(min(_GLF_IDENTITY(_GLF_IDENTITY(~ (0u), (false ? _GLF_FUZZED(subgroup_local_id) : ~ (0u))), ~ (~ (_GLF_IDENTITY(~ (0u), ~ (~ (~ (0u))))))), ~ (0u)), min(_GLF_IDENTITY(_GLF_IDENTITY(~ (0u), (false ? _GLF_FUZZED(subgroup_local_id) : ~ (0u))), ~ (~ (_GLF_IDENTITY(~ (0u), ~ (~ (~ (0u))))))), ~ (0u))))))))), (_GLF_IDENTITY(1u | 0u, 0u | (1u | 0u)))), max(uvec2(_GLF_IDENTITY(0u, ~ (~ (0u))), (_GLF_IDENTITY(1u | 0u, (_GLF_IDENTITY(1u | 0u, (_GLF_IDENTITY(1u | 0u, uint(uvec2(1u | 0u, 1u)))) ^ 0u)) >> (0u & 190693u)))), uvec2(_GLF_IDENTITY(0u, ~ _GLF_IDENTITY((~ (0u)), (_GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, ! (! (true))))) ? (~ (0u)) : _GLF_FUZZED(packSnorm4x8(vec4(-223.056, -679.202, 0.3, -762.263)))))), (1u | 0u))))), (uint(_GLF_IDENTITY(uvec2(_GLF_IDENTITY(0u, ~ (_GLF_IDENTITY(~ (0u), _GLF_IDENTITY(min(_GLF_IDENTITY(_GLF_IDENTITY(~ (0u), (false ? _GLF_FUZZED(subgroup_local_id) : ~ (0u))), ~ (~ (_GLF_IDENTITY(~ (0u), _GLF_IDENTITY(~ (~ (~ (0u))), _GLF_IDENTITY(uint(uvec3(~ (~ (~ (0u))), 1u, 0u)), 0u | (_GLF_IDENTITY(uint(uvec3(~ (~ (~ (0u))), 1u, 0u)), (uint(uvec3(~ (~ (~ (0u))), 1u, 0u))) >> 0u)))))))), ~ (0u)), max(min(_GLF_IDENTITY(_GLF_IDENTITY(~ (0u), (_GLF_IDENTITY(false ? _GLF_FUZZED(subgroup_local_id) : ~ (0u), (_GLF_IDENTITY(false ? _GLF_FUZZED(subgroup_local_id) : ~ (0u), 0u ^ (false ? _GLF_FUZZED(subgroup_local_id) : ~ (0u)))) - (0u | 0u)))), ~ (~ (_GLF_IDENTITY(~ (0u), ~ (~ _GLF_IDENTITY((~ (0u)), 0u | ((~ (0u))))))))), ~ (0u)), min(_GLF_IDENTITY(_GLF_IDENTITY(~ (0u), (false ? _GLF_FUZZED(subgroup_local_id) : ~ (0u))), ~ (~ (_GLF_IDENTITY(~ (0u), ~ (~ (~ (0u))))))), ~ (0u))))))), (1u | 0u)), max(uvec2(_GLF_IDENTITY(0u, ~ (~ (0u))), (_GLF_IDENTITY(1u | 0u, (_GLF_IDENTITY(1u | 0u, (_GLF_IDENTITY(1u | 0u, uint(uvec2(1u | 0u, 1u)))) ^ 0u)) >> (0u & _GLF_IDENTITY(190693u, min(190693u, _GLF_IDENTITY(190693u, 1u * (_GLF_IDENTITY(190693u, (true ? 190693u : _GLF_FUZZED(workgroup_size))))))))))), uvec2(_GLF_IDENTITY(0u, ~ _GLF_IDENTITY((~ (0u)), (_GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, ! (! (true))))) ? (~ (0u)) : _GLF_FUZZED(packSnorm4x8(vec4(-223.056, -679.202, 0.3, -762.263)))))), (1u | 0u)))))) | (uint(_GLF_IDENTITY(uvec2(_GLF_IDENTITY(0u, ~ (_GLF_IDENTITY(~ (0u), _GLF_IDENTITY(min(_GLF_IDENTITY(_GLF_IDENTITY(~ (0u), (false ? _GLF_FUZZED(subgroup_local_id) : ~ (0u))), ~ (~ (_GLF_IDENTITY(~ (0u), _GLF_IDENTITY(~ (~ (~ (0u))), _GLF_IDENTITY(uint(uvec3(~ (~ (~ (0u))), 1u, 0u)), 0u | (_GLF_IDENTITY(uint(uvec3(~ (~ (~ (0u))), 1u, 0u)), _GLF_IDENTITY((uint(uvec3(~ (~ (~ (0u))), 1u, 0u))), ((uint(uvec3(~ (~ (~ (0u))), 1u, 0u)))) | (_GLF_IDENTITY((uint(uvec3(~ (~ (~ (0u))), 1u, 0u))), (0u << _GLF_IDENTITY(uint(2u), uint(2u))) + ((uint(uvec3(~ (~ (~ (0u))), 1u, 0u))))))) >> 0u)))))))), ~ (0u)), max(min(_GLF_IDENTITY(_GLF_IDENTITY(~ (0u), (false ? _GLF_FUZZED(subgroup_local_id) : ~ (0u))), ~ (~ _GLF_IDENTITY((_GLF_IDENTITY(~ (0u), ~ (~ (~ (0u))))), (false ? _GLF_FUZZED(subgroup_id) : (_GLF_IDENTITY(~ (0u), ~ (~ (~ (0u))))))))), ~ (0u)), min(_GLF_IDENTITY(_GLF_IDENTITY(~ (0u), (false ? _GLF_FUZZED(subgroup_local_id) : ~ (0u))), ~ (~ (_GLF_IDENTITY(~ (0u), ~ (~ (~ (0u))))))), ~ (0u))))))), (1u | 0u)), max(uvec2(_GLF_IDENTITY(0u, ~ (~ (0u))), _GLF_IDENTITY((_GLF_IDENTITY(1u | 0u, _GLF_IDENTITY((_GLF_IDENTITY(1u | 0u, (_GLF_IDENTITY(1u | 0u, uint(uvec2(1u | 0u, 1u)))) ^ 0u)), ~ (~ ((_GLF_IDENTITY(1u | 0u, (_GLF_IDENTITY(1u | 0u, uint(uvec2(1u | 0u, 1u)))) ^ 0u))))) >> (0u & 190693u))), min((_GLF_IDENTITY(1u | 0u, _GLF_IDENTITY((_GLF_IDENTITY(1u | 0u, (_GLF_IDENTITY(1u | 0u, uint(uvec2(1u | 0u, 1u)))) ^ 0u)), ~ (~ ((_GLF_IDENTITY(1u | 0u, (_GLF_IDENTITY(1u | 0u, uint(uvec2(1u | 0u, 1u)))) ^ 0u))))) >> (0u & 190693u))), (_GLF_IDENTITY(1u | 0u, _GLF_IDENTITY((_GLF_IDENTITY(1u | 0u, (_GLF_IDENTITY(1u | 0u, uint(uvec2(1u | 0u, 1u)))) ^ 0u)), ~ (~ ((_GLF_IDENTITY(1u | 0u, (_GLF_IDENTITY(1u | 0u, uint(uvec2(1u | 0u, 1u)))) ^ 0u))))) >> (0u & 190693u)))))), uvec2(_GLF_IDENTITY(0u, ~ _GLF_IDENTITY((~ (0u)), (_GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, ! (! (true))))) ? (~ (0u)) : _GLF_FUZZED(packSnorm4x8(vec4(-223.056, -679.202, 0.3, -762.263)))))), (1u | 0u))))))))), uvec2(1u, 1u) * (uvec2(next_virtual_gid, 0u))))) | (uint(_GLF_IDENTITY(_GLF_IDENTITY(uvec2(next_virtual_gid, 0u), _GLF_IDENTITY(uvec2(1u, 1u), uvec2(uvec3(uvec2(1u, 1u), 0u))) * (_GLF_IDENTITY(_GLF_IDENTITY(uvec2(next_virtual_gid, 0u), _GLF_IDENTITY(uvec2(0u, 0u), uvec2(uvec2(uvec2(0u, 0u)))) + (_GLF_IDENTITY(uvec2(next_virtual_gid, 0u), (uvec2(next_virtual_gid, 0u)) | (uvec2(next_virtual_gid, 0u))))), (_GLF_IDENTITY(uvec2(next_virtual_gid, 0u), clamp(uvec2(next_virtual_gid, 0u), uvec2(next_virtual_gid, 0u), uvec2(next_virtual_gid, 0u)))) | (_GLF_IDENTITY(uvec2(next_virtual_gid, 0u), clamp(uvec2(next_virtual_gid, 0u), uvec2(next_virtual_gid, 0u), uvec2(next_virtual_gid, 0u))))))), uvec2(0u, 0u) ^ (_GLF_IDENTITY(uvec2(next_virtual_gid, 0u), _GLF_IDENTITY(uvec2(1u, 1u), uvec2(uvec3(uvec2(1u, 1u), 0u))) * (_GLF_IDENTITY(_GLF_IDENTITY(uvec2(next_virtual_gid, 0u), _GLF_IDENTITY(uvec2(0u, 0u), uvec2(uvec2(uvec2(0u, 0u)))) + (_GLF_IDENTITY(uvec2(next_virtual_gid, 0u), (uvec2(next_virtual_gid, 0u)) | (uvec2(next_virtual_gid, 0u))))), (_GLF_IDENTITY(uvec2(next_virtual_gid, 0u), clamp(uvec2(next_virtual_gid, 0u), uvec2(next_virtual_gid, 0u), uvec2(next_virtual_gid, 0u)))) | (_GLF_IDENTITY(uvec2(next_virtual_gid, 0u), clamp(uvec2(next_virtual_gid, 0u), uvec2(next_virtual_gid, 0u), uvec2(next_virtual_gid, 0u)))))))))))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(uvec2(next_virtual_gid, 0u), uvec2(1u, 1u) * _GLF_IDENTITY((uvec2(next_virtual_gid, 0u)), ((uvec2(next_virtual_gid, 0u))) >> uvec2(0u, 0u)))), min(uint(_GLF_IDENTITY(uvec2(next_virtual_gid, 0u), uvec2(1u, 1u) * _GLF_IDENTITY((uvec2(next_virtual_gid, 0u)), ((uvec2(next_virtual_gid, 0u))) >> uvec2(0u, 0u)))), uint(_GLF_IDENTITY(uvec2(next_virtual_gid, 0u), uvec2(1u, 1u) * _GLF_IDENTITY((uvec2(next_virtual_gid, 0u)), ((uvec2(next_virtual_gid, 0u))) >> uvec2(0u, 0u)))))), max(uint(_GLF_IDENTITY(uvec2(next_virtual_gid, _GLF_IDENTITY(0u, ~ (~ (_GLF_IDENTITY(0u, max(0u, 0u)))))), _GLF_IDENTITY(uvec2(1u, 1u), (uvec2(1u, _GLF_IDENTITY(1u, (1u) | (_GLF_IDENTITY(1u, 0u | (1u)))))) >> uvec2(0u, 0u)) * (uvec2(next_virtual_gid, 0u)))), uint(_GLF_IDENTITY(uvec2(next_virtual_gid, 0u), _GLF_IDENTITY(uvec2(1u, 1u), _GLF_IDENTITY(uvec2(uvec2(uvec2(1u, 1u))), (uvec2(0u, _GLF_IDENTITY(0u, (true ? 0u : _GLF_FUZZED(next_virtual_gid)))) | uvec2(0u, 0u)) | (uvec2(uvec2(_GLF_IDENTITY(uvec2(1u, 1u), uvec2(uvec3(uvec2(1u, 1u), 1u)))))))) * (uvec2(next_virtual_gid, 0u)))))), (uint(_GLF_IDENTITY(uvec2(next_virtual_gid, _GLF_IDENTITY(0u, _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec2(_GLF_IDENTITY(0u, ~ (_GLF_IDENTITY(_GLF_IDENTITY(~ (0u), _GLF_IDENTITY(min(_GLF_IDENTITY(_GLF_IDENTITY(~ (0u), (false ? _GLF_FUZZED(subgroup_local_id) : ~ (0u))), ~ (~ (_GLF_IDENTITY(~ (0u), _GLF_IDENTITY(~ (~ (~ (0u))), _GLF_IDENTITY(uint(uvec3(~ (~ (~ (0u))), 1u, 0u)), 0u | (_GLF_IDENTITY(uint(uvec3(~ (~ (~ (0u))), 1u, 0u)), (uint(uvec3(~ (~ (~ (0u))), 1u, 0u))) >> 0u)))))))), ~ (0u)), max(min(_GLF_IDENTITY(_GLF_IDENTITY(~ (0u), (false ? _GLF_FUZZED(subgroup_local_id) : ~ (0u))), ~ (~ (_GLF_IDENTITY(~ (0u), ~ (~ (~ (0u))))))), ~ (0u)), min(_GLF_IDENTITY(_GLF_IDENTITY(~ (0u), (false ? _GLF_FUZZED(subgroup_local_id) : ~ (0u))), ~ (~ (_GLF_IDENTITY(~ (0u), ~ (~ (~ (0u))))))), ~ (0u))))), 0u ^ (_GLF_IDENTITY(~ (0u), _GLF_IDENTITY(min(_GLF_IDENTITY(_GLF_IDENTITY(~ (0u), (false ? _GLF_FUZZED(subgroup_local_id) : ~ (0u))), ~ (~ (_GLF_IDENTITY(~ (0u), _GLF_IDENTITY(~ (~ (~ (0u))), _GLF_IDENTITY(uint(uvec3(~ (~ (~ (0u))), 1u, 0u)), 0u | (_GLF_IDENTITY(uint(uvec3(~ (~ (~ (0u))), 1u, 0u)), (uint(uvec3(~ (~ (~ (0u))), 1u, 0u))) >> 0u)))))))), ~ (0u)), max(min(_GLF_IDENTITY(_GLF_IDENTITY(~ (0u), (false ? _GLF_FUZZED(subgroup_local_id) : ~ (0u))), ~ (~ (_GLF_IDENTITY(~ (0u), ~ (~ (~ (0u))))))), ~ (0u)), min(_GLF_IDENTITY(_GLF_IDENTITY(~ (0u), (false ? _GLF_FUZZED(subgroup_local_id) : ~ (0u))), ~ (~ (_GLF_IDENTITY(~ (0u), ~ (~ (~ (0u))))))), ~ (0u))))))))), (_GLF_IDENTITY(1u | 0u, 0u | (1u | 0u)))), max(uvec2(_GLF_IDENTITY(0u, ~ (~ (0u))), (_GLF_IDENTITY(1u | 0u, (_GLF_IDENTITY(1u | 0u, (_GLF_IDENTITY(1u | 0u, uint(uvec2(1u | 0u, 1u)))) ^ 0u)) >> (0u & 190693u)))), uvec2(_GLF_IDENTITY(0u, ~ _GLF_IDENTITY((~ (0u)), (_GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, ! (! (true))))) ? (~ (0u)) : _GLF_FUZZED(packSnorm4x8(vec4(-223.056, -679.202, 0.3, -762.263)))))), (1u | 0u))))), (uint(_GLF_IDENTITY(uvec2(_GLF_IDENTITY(0u, ~ (_GLF_IDENTITY(~ (0u), _GLF_IDENTITY(min(_GLF_IDENTITY(_GLF_IDENTITY(~ (0u), (false ? _GLF_FUZZED(subgroup_local_id) : ~ (0u))), ~ (~ (_GLF_IDENTITY(~ (0u), _GLF_IDENTITY(~ (~ (~ (0u))), _GLF_IDENTITY(uint(uvec3(~ (~ (~ (0u))), 1u, 0u)), 0u | (_GLF_IDENTITY(uint(uvec3(~ (~ (~ (0u))), 1u, 0u)), (uint(uvec3(~ (~ (~ (0u))), 1u, 0u))) >> 0u)))))))), ~ (0u)), max(min(_GLF_IDENTITY(_GLF_IDENTITY(~ (0u), (_GLF_IDENTITY(false ? _GLF_FUZZED(subgroup_local_id) : ~ (0u), (_GLF_IDENTITY(false ? _GLF_FUZZED(subgroup_local_id) : ~ (0u), 0u ^ (false ? _GLF_FUZZED(subgroup_local_id) : ~ (0u)))) - (0u | 0u)))), ~ (~ (_GLF_IDENTITY(~ (0u), ~ (~ _GLF_IDENTITY((~ (0u)), 0u | ((~ (0u))))))))), ~ (0u)), min(_GLF_IDENTITY(_GLF_IDENTITY(~ (0u), (false ? _GLF_FUZZED(subgroup_local_id) : ~ (0u))), ~ (~ (_GLF_IDENTITY(~ (0u), ~ (~ (~ (0u))))))), ~ (0u))))))), (1u | 0u)), max(uvec2(_GLF_IDENTITY(0u, ~ (~ (0u))), (_GLF_IDENTITY(1u | 0u, (_GLF_IDENTITY(1u | 0u, (_GLF_IDENTITY(1u | 0u, uint(uvec2(1u | 0u, 1u)))) ^ 0u)) >> (0u & _GLF_IDENTITY(190693u, min(190693u, _GLF_IDENTITY(190693u, 1u * (_GLF_IDENTITY(190693u, (true ? 190693u : _GLF_FUZZED(workgroup_size))))))))))), uvec2(_GLF_IDENTITY(0u, ~ _GLF_IDENTITY((~ (0u)), (_GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, ! (! (true))))) ? (~ (0u)) : _GLF_FUZZED(packSnorm4x8(vec4(-223.056, -679.202, 0.3, -762.263)))))), (1u | 0u)))))) | (uint(_GLF_IDENTITY(uvec2(_GLF_IDENTITY(0u, ~ (_GLF_IDENTITY(~ (0u), _GLF_IDENTITY(min(_GLF_IDENTITY(_GLF_IDENTITY(~ (0u), (false ? _GLF_FUZZED(subgroup_local_id) : ~ (0u))), ~ (~ (_GLF_IDENTITY(~ (0u), _GLF_IDENTITY(~ (~ (~ (0u))), _GLF_IDENTITY(uint(uvec3(~ (~ (~ (0u))), 1u, 0u)), 0u | (_GLF_IDENTITY(uint(uvec3(~ (~ (~ (0u))), 1u, 0u)), _GLF_IDENTITY((uint(uvec3(~ (~ (~ (0u))), 1u, 0u))), ((uint(uvec3(~ (~ (~ (0u))), 1u, 0u)))) | (_GLF_IDENTITY((uint(uvec3(~ (~ (~ (0u))), 1u, 0u))), (0u << _GLF_IDENTITY(uint(2u), uint(2u))) + ((uint(uvec3(~ (~ (~ (0u))), 1u, 0u))))))) >> 0u)))))))), ~ (0u)), max(min(_GLF_IDENTITY(_GLF_IDENTITY(~ (0u), (false ? _GLF_FUZZED(subgroup_local_id) : ~ (0u))), ~ (~ _GLF_IDENTITY((_GLF_IDENTITY(~ (0u), ~ (~ (~ (0u))))), (false ? _GLF_FUZZED(subgroup_id) : (_GLF_IDENTITY(~ (0u), ~ (~ (~ (0u))))))))), ~ (0u)), min(_GLF_IDENTITY(_GLF_IDENTITY(~ (0u), (false ? _GLF_FUZZED(subgroup_local_id) : ~ (0u))), ~ (~ (_GLF_IDENTITY(~ (0u), ~ (~ (~ (0u))))))), ~ (0u))))))), (1u | 0u)), max(uvec2(_GLF_IDENTITY(0u, ~ (~ (0u))), _GLF_IDENTITY((_GLF_IDENTITY(1u | 0u, _GLF_IDENTITY((_GLF_IDENTITY(1u | 0u, (_GLF_IDENTITY(1u | 0u, uint(uvec2(1u | 0u, 1u)))) ^ 0u)), ~ (~ ((_GLF_IDENTITY(1u | 0u, (_GLF_IDENTITY(1u | 0u, uint(uvec2(1u | 0u, 1u)))) ^ 0u))))) >> (0u & 190693u))), min((_GLF_IDENTITY(1u | 0u, _GLF_IDENTITY((_GLF_IDENTITY(1u | 0u, (_GLF_IDENTITY(1u | 0u, uint(uvec2(1u | 0u, 1u)))) ^ 0u)), ~ (~ ((_GLF_IDENTITY(1u | 0u, (_GLF_IDENTITY(1u | 0u, uint(uvec2(1u | 0u, 1u)))) ^ 0u))))) >> (0u & 190693u))), (_GLF_IDENTITY(1u | 0u, _GLF_IDENTITY((_GLF_IDENTITY(1u | 0u, (_GLF_IDENTITY(1u | 0u, uint(uvec2(1u | 0u, 1u)))) ^ 0u)), ~ (~ ((_GLF_IDENTITY(1u | 0u, (_GLF_IDENTITY(1u | 0u, uint(uvec2(1u | 0u, 1u)))) ^ 0u))))) >> (0u & 190693u)))))), uvec2(_GLF_IDENTITY(0u, ~ _GLF_IDENTITY((~ (0u)), (_GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, ! (! (true))))) ? (~ (0u)) : _GLF_FUZZED(packSnorm4x8(vec4(-223.056, -679.202, 0.3, -762.263)))))), (1u | 0u))))))))), uvec2(1u, 1u) * (uvec2(next_virtual_gid, 0u))))) | (uint(_GLF_IDENTITY(_GLF_IDENTITY(uvec2(next_virtual_gid, 0u), _GLF_IDENTITY(uvec2(1u, 1u), uvec2(uvec3(uvec2(1u, 1u), 0u))) * (_GLF_IDENTITY(_GLF_IDENTITY(uvec2(next_virtual_gid, 0u), _GLF_IDENTITY(uvec2(0u, 0u), uvec2(uvec2(uvec2(0u, 0u)))) + (_GLF_IDENTITY(uvec2(next_virtual_gid, 0u), (uvec2(next_virtual_gid, 0u)) | (uvec2(next_virtual_gid, 0u))))), (_GLF_IDENTITY(uvec2(next_virtual_gid, 0u), clamp(uvec2(next_virtual_gid, 0u), uvec2(next_virtual_gid, 0u), uvec2(next_virtual_gid, 0u)))) | (_GLF_IDENTITY(uvec2(next_virtual_gid, 0u), clamp(uvec2(next_virtual_gid, 0u), uvec2(next_virtual_gid, 0u), uvec2(next_virtual_gid, 0u))))))), uvec2(0u, 0u) ^ (_GLF_IDENTITY(uvec2(next_virtual_gid, 0u), _GLF_IDENTITY(uvec2(1u, 1u), uvec2(uvec3(uvec2(1u, 1u), 0u))) * (_GLF_IDENTITY(_GLF_IDENTITY(uvec2(next_virtual_gid, 0u), _GLF_IDENTITY(uvec2(0u, 0u), uvec2(uvec2(uvec2(0u, 0u)))) + (_GLF_IDENTITY(uvec2(next_virtual_gid, 0u), (uvec2(next_virtual_gid, 0u)) | (uvec2(next_virtual_gid, 0u))))), (_GLF_IDENTITY(uvec2(next_virtual_gid, 0u), clamp(uvec2(next_virtual_gid, 0u), uvec2(next_virtual_gid, 0u), uvec2(next_virtual_gid, 0u)))) | (_GLF_IDENTITY(uvec2(next_virtual_gid, 0u), clamp(uvec2(next_virtual_gid, 0u), uvec2(next_virtual_gid, 0u), uvec2(next_virtual_gid, 0u)))))))))))), (false ? _GLF_FUZZED(subgroup_id) : _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(uvec2(next_virtual_gid, 0u), uvec2(1u, 1u) * _GLF_IDENTITY((uvec2(next_virtual_gid, 0u)), ((uvec2(next_virtual_gid, 0u))) >> uvec2(0u, 0u)))), min(uint(_GLF_IDENTITY(uvec2(next_virtual_gid, 0u), uvec2(1u, 1u) * _GLF_IDENTITY((uvec2(next_virtual_gid, 0u)), ((uvec2(next_virtual_gid, 0u))) >> uvec2(0u, 0u)))), uint(_GLF_IDENTITY(uvec2(next_virtual_gid, 0u), uvec2(1u, 1u) * _GLF_IDENTITY((uvec2(next_virtual_gid, 0u)), ((uvec2(next_virtual_gid, 0u))) >> uvec2(0u, 0u)))))), max(uint(_GLF_IDENTITY(uvec2(next_virtual_gid, _GLF_IDENTITY(0u, ~ (~ (_GLF_IDENTITY(0u, max(0u, 0u)))))), _GLF_IDENTITY(uvec2(1u, 1u), (uvec2(1u, _GLF_IDENTITY(1u, (1u) | (_GLF_IDENTITY(1u, 0u | (1u)))))) >> uvec2(0u, 0u)) * (uvec2(next_virtual_gid, 0u)))), uint(_GLF_IDENTITY(uvec2(next_virtual_gid, 0u), _GLF_IDENTITY(uvec2(1u, 1u), _GLF_IDENTITY(uvec2(uvec2(uvec2(1u, 1u))), (uvec2(0u, _GLF_IDENTITY(0u, (true ? 0u : _GLF_FUZZED(next_virtual_gid)))) | uvec2(0u, 0u)) | (uvec2(uvec2(_GLF_IDENTITY(uvec2(1u, 1u), uvec2(uvec3(uvec2(1u, 1u), 1u)))))))) * (uvec2(next_virtual_gid, 0u)))))), (uint(_GLF_IDENTITY(uvec2(next_virtual_gid, _GLF_IDENTITY(0u, _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec2(_GLF_IDENTITY(0u, ~ (_GLF_IDENTITY(_GLF_IDENTITY(~ (0u), _GLF_IDENTITY(min(_GLF_IDENTITY(_GLF_IDENTITY(~ (0u), (false ? _GLF_FUZZED(subgroup_local_id) : ~ (0u))), ~ (~ (_GLF_IDENTITY(~ (0u), _GLF_IDENTITY(~ (~ (~ (0u))), _GLF_IDENTITY(uint(uvec3(~ (~ (~ (0u))), 1u, 0u)), 0u | (_GLF_IDENTITY(uint(uvec3(~ (~ (~ (0u))), 1u, 0u)), (uint(uvec3(~ (~ (~ (0u))), 1u, 0u))) >> 0u)))))))), ~ (0u)), max(min(_GLF_IDENTITY(_GLF_IDENTITY(~ (0u), (false ? _GLF_FUZZED(subgroup_local_id) : ~ (0u))), ~ (~ (_GLF_IDENTITY(~ (0u), ~ (~ (~ (0u))))))), ~ (0u)), min(_GLF_IDENTITY(_GLF_IDENTITY(~ (0u), (false ? _GLF_FUZZED(subgroup_local_id) : ~ (0u))), ~ (~ (_GLF_IDENTITY(~ (0u), ~ (~ (~ (0u))))))), ~ (0u))))), 0u ^ (_GLF_IDENTITY(~ (0u), _GLF_IDENTITY(min(_GLF_IDENTITY(_GLF_IDENTITY(~ (0u), (false ? _GLF_FUZZED(subgroup_local_id) : ~ (0u))), ~ (~ (_GLF_IDENTITY(~ (0u), _GLF_IDENTITY(~ (~ (~ (0u))), _GLF_IDENTITY(uint(uvec3(~ (~ (~ (0u))), 1u, 0u)), 0u | (_GLF_IDENTITY(uint(uvec3(~ (~ (~ (0u))), 1u, 0u)), (uint(uvec3(~ (~ (~ (0u))), 1u, 0u))) >> 0u)))))))), ~ (0u)), max(min(_GLF_IDENTITY(_GLF_IDENTITY(~ (0u), (false ? _GLF_FUZZED(subgroup_local_id) : ~ (0u))), ~ (~ (_GLF_IDENTITY(~ (0u), ~ (~ (~ (0u))))))), ~ (0u)), min(_GLF_IDENTITY(_GLF_IDENTITY(~ (0u), (false ? _GLF_FUZZED(subgroup_local_id) : ~ (0u))), ~ (~ (_GLF_IDENTITY(~ (0u), ~ (~ (~ (0u))))))), ~ (0u))))))))), (_GLF_IDENTITY(1u | 0u, 0u | (1u | 0u)))), max(uvec2(_GLF_IDENTITY(0u, ~ (~ (0u))), (_GLF_IDENTITY(1u | 0u, (_GLF_IDENTITY(1u | 0u, (_GLF_IDENTITY(1u | 0u, uint(uvec2(1u | 0u, 1u)))) ^ 0u)) >> (0u & 190693u)))), uvec2(_GLF_IDENTITY(0u, ~ _GLF_IDENTITY((~ (0u)), (_GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, ! (! (true))))) ? (~ (0u)) : _GLF_FUZZED(packSnorm4x8(vec4(-223.056, -679.202, 0.3, -762.263)))))), (1u | 0u))))), (uint(_GLF_IDENTITY(uvec2(_GLF_IDENTITY(0u, ~ (_GLF_IDENTITY(~ (0u), _GLF_IDENTITY(min(_GLF_IDENTITY(_GLF_IDENTITY(~ (0u), (false ? _GLF_FUZZED(subgroup_local_id) : ~ (0u))), ~ (~ (_GLF_IDENTITY(~ (0u), _GLF_IDENTITY(~ (~ (~ (0u))), _GLF_IDENTITY(uint(uvec3(~ (~ (~ (0u))), 1u, 0u)), 0u | (_GLF_IDENTITY(uint(uvec3(~ (~ (~ (0u))), 1u, 0u)), (uint(uvec3(~ (~ (~ (0u))), 1u, 0u))) >> 0u)))))))), ~ (0u)), max(min(_GLF_IDENTITY(_GLF_IDENTITY(~ (0u), (_GLF_IDENTITY(false ? _GLF_FUZZED(subgroup_local_id) : ~ (0u), (_GLF_IDENTITY(false ? _GLF_FUZZED(subgroup_local_id) : ~ (0u), 0u ^ (false ? _GLF_FUZZED(subgroup_local_id) : ~ (0u)))) - (0u | 0u)))), ~ (~ (_GLF_IDENTITY(~ (0u), ~ (~ _GLF_IDENTITY((~ (0u)), 0u | ((~ (0u))))))))), ~ (0u)), min(_GLF_IDENTITY(_GLF_IDENTITY(~ (0u), (false ? _GLF_FUZZED(subgroup_local_id) : ~ (0u))), ~ (~ (_GLF_IDENTITY(~ (0u), ~ (~ (~ (0u))))))), ~ (0u))))))), (1u | 0u)), max(uvec2(_GLF_IDENTITY(0u, ~ (~ (0u))), (_GLF_IDENTITY(1u | 0u, (_GLF_IDENTITY(1u | 0u, (_GLF_IDENTITY(1u | 0u, uint(uvec2(1u | 0u, 1u)))) ^ 0u)) >> (0u & _GLF_IDENTITY(190693u, min(190693u, _GLF_IDENTITY(190693u, 1u * (_GLF_IDENTITY(190693u, (true ? 190693u : _GLF_FUZZED(workgroup_size))))))))))), uvec2(_GLF_IDENTITY(0u, ~ _GLF_IDENTITY((~ (0u)), (_GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, ! (! (true))))) ? (~ (0u)) : _GLF_FUZZED(packSnorm4x8(vec4(-223.056, -679.202, 0.3, -762.263)))))), (1u | 0u)))))) | (uint(_GLF_IDENTITY(uvec2(_GLF_IDENTITY(0u, ~ (_GLF_IDENTITY(~ (0u), _GLF_IDENTITY(min(_GLF_IDENTITY(_GLF_IDENTITY(~ (0u), (false ? _GLF_FUZZED(subgroup_local_id) : ~ (0u))), ~ (~ (_GLF_IDENTITY(~ (0u), _GLF_IDENTITY(~ (~ (~ (0u))), _GLF_IDENTITY(uint(uvec3(~ (~ (~ (0u))), 1u, 0u)), 0u | (_GLF_IDENTITY(uint(uvec3(~ (~ (~ (0u))), 1u, 0u)), _GLF_IDENTITY((uint(uvec3(~ (~ (~ (0u))), 1u, 0u))), ((uint(uvec3(~ (~ (~ (0u))), 1u, 0u)))) | (_GLF_IDENTITY((uint(uvec3(~ (~ (~ (0u))), 1u, 0u))), (0u << _GLF_IDENTITY(uint(2u), uint(2u))) + ((uint(uvec3(~ (~ (~ (0u))), 1u, 0u))))))) >> 0u)))))))), ~ (0u)), max(min(_GLF_IDENTITY(_GLF_IDENTITY(~ (0u), (false ? _GLF_FUZZED(subgroup_local_id) : ~ (0u))), ~ (~ _GLF_IDENTITY((_GLF_IDENTITY(~ (0u), ~ (~ (~ (0u))))), (false ? _GLF_FUZZED(subgroup_id) : (_GLF_IDENTITY(~ (0u), ~ (~ (~ (0u))))))))), ~ (0u)), min(_GLF_IDENTITY(_GLF_IDENTITY(~ (0u), (false ? _GLF_FUZZED(subgroup_local_id) : ~ (0u))), ~ (~ (_GLF_IDENTITY(~ (0u), ~ (~ (~ (0u))))))), ~ (0u))))))), (1u | 0u)), max(uvec2(_GLF_IDENTITY(0u, ~ (~ (0u))), _GLF_IDENTITY((_GLF_IDENTITY(1u | 0u, _GLF_IDENTITY((_GLF_IDENTITY(1u | 0u, (_GLF_IDENTITY(1u | 0u, uint(uvec2(1u | 0u, 1u)))) ^ 0u)), ~ (~ ((_GLF_IDENTITY(1u | 0u, (_GLF_IDENTITY(1u | 0u, uint(uvec2(1u | 0u, 1u)))) ^ 0u))))) >> (0u & 190693u))), min((_GLF_IDENTITY(1u | 0u, _GLF_IDENTITY((_GLF_IDENTITY(1u | 0u, (_GLF_IDENTITY(1u | 0u, uint(uvec2(1u | 0u, 1u)))) ^ 0u)), ~ (~ ((_GLF_IDENTITY(1u | 0u, (_GLF_IDENTITY(1u | 0u, uint(uvec2(1u | 0u, 1u)))) ^ 0u))))) >> (0u & 190693u))), (_GLF_IDENTITY(1u | 0u, _GLF_IDENTITY((_GLF_IDENTITY(1u | 0u, (_GLF_IDENTITY(1u | 0u, uint(uvec2(1u | 0u, 1u)))) ^ 0u)), ~ (~ ((_GLF_IDENTITY(1u | 0u, (_GLF_IDENTITY(1u | 0u, uint(uvec2(1u | 0u, 1u)))) ^ 0u))))) >> (0u & 190693u)))))), uvec2(_GLF_IDENTITY(0u, ~ _GLF_IDENTITY((~ (0u)), (_GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, ! (! (true))))) ? (~ (0u)) : _GLF_FUZZED(packSnorm4x8(vec4(-223.056, -679.202, 0.3, -762.263)))))), (1u | 0u))))))))), uvec2(1u, 1u) * (uvec2(next_virtual_gid, 0u))))) | (uint(_GLF_IDENTITY(_GLF_IDENTITY(uvec2(next_virtual_gid, 0u), _GLF_IDENTITY(uvec2(1u, 1u), uvec2(uvec3(uvec2(1u, 1u), 0u))) * (_GLF_IDENTITY(_GLF_IDENTITY(uvec2(next_virtual_gid, 0u), _GLF_IDENTITY(uvec2(0u, 0u), uvec2(uvec2(uvec2(0u, 0u)))) + (_GLF_IDENTITY(uvec2(next_virtual_gid, 0u), (uvec2(next_virtual_gid, 0u)) | (uvec2(next_virtual_gid, 0u))))), (_GLF_IDENTITY(uvec2(next_virtual_gid, 0u), clamp(uvec2(next_virtual_gid, 0u), uvec2(next_virtual_gid, 0u), uvec2(next_virtual_gid, 0u)))) | (_GLF_IDENTITY(uvec2(next_virtual_gid, 0u), clamp(uvec2(next_virtual_gid, 0u), uvec2(next_virtual_gid, 0u), uvec2(next_virtual_gid, 0u))))))), uvec2(0u, 0u) ^ (_GLF_IDENTITY(uvec2(next_virtual_gid, 0u), _GLF_IDENTITY(uvec2(1u, 1u), uvec2(uvec3(uvec2(1u, 1u), 0u))) * (_GLF_IDENTITY(_GLF_IDENTITY(uvec2(next_virtual_gid, 0u), _GLF_IDENTITY(uvec2(0u, 0u), uvec2(uvec2(uvec2(0u, 0u)))) + (_GLF_IDENTITY(uvec2(next_virtual_gid, 0u), (uvec2(next_virtual_gid, 0u)) | (uvec2(next_virtual_gid, 0u))))), (_GLF_IDENTITY(uvec2(next_virtual_gid, 0u), clamp(uvec2(next_virtual_gid, 0u), uvec2(next_virtual_gid, 0u), uvec2(next_virtual_gid, 0u)))) | (_GLF_IDENTITY(uvec2(next_virtual_gid, 0u), clamp(uvec2(next_virtual_gid, 0u), uvec2(next_virtual_gid, 0u), uvec2(next_virtual_gid, 0u))))))))))))))) | (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(uvec2(next_virtual_gid, 0u), uvec2(1u, 1u) * _GLF_IDENTITY((uvec2(next_virtual_gid, 0u)), ((uvec2(next_virtual_gid, 0u))) >> uvec2(0u, 0u)))), min(uint(_GLF_IDENTITY(uvec2(next_virtual_gid, 0u), uvec2(1u, 1u) * _GLF_IDENTITY((uvec2(next_virtual_gid, 0u)), ((uvec2(next_virtual_gid, 0u))) >> uvec2(0u, 0u)))), uint(_GLF_IDENTITY(uvec2(next_virtual_gid, 0u), uvec2(1u, 1u) * _GLF_IDENTITY((uvec2(next_virtual_gid, 0u)), ((uvec2(next_virtual_gid, 0u))) >> uvec2(0u, 0u)))))), max(uint(_GLF_IDENTITY(uvec2(next_virtual_gid, _GLF_IDENTITY(0u, ~ (~ (_GLF_IDENTITY(0u, max(0u, 0u)))))), _GLF_IDENTITY(uvec2(1u, 1u), (uvec2(1u, _GLF_IDENTITY(1u, (1u) | (_GLF_IDENTITY(1u, 0u | (1u)))))) >> uvec2(0u, 0u)) * (uvec2(next_virtual_gid, 0u)))), uint(_GLF_IDENTITY(uvec2(next_virtual_gid, 0u), _GLF_IDENTITY(uvec2(1u, 1u), _GLF_IDENTITY(uvec2(uvec2(uvec2(1u, 1u))), (uvec2(0u, _GLF_IDENTITY(0u, (true ? 0u : _GLF_FUZZED(next_virtual_gid)))) | uvec2(0u, 0u)) | (uvec2(uvec2(_GLF_IDENTITY(uvec2(1u, 1u), uvec2(uvec3(uvec2(1u, 1u), 1u)))))))) * (uvec2(next_virtual_gid, 0u)))))), (uint(_GLF_IDENTITY(uvec2(next_virtual_gid, _GLF_IDENTITY(0u, _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec2(_GLF_IDENTITY(0u, ~ (_GLF_IDENTITY(_GLF_IDENTITY(~ (0u), _GLF_IDENTITY(min(_GLF_IDENTITY(_GLF_IDENTITY(~ (0u), (false ? _GLF_FUZZED(subgroup_local_id) : ~ (0u))), ~ (~ (_GLF_IDENTITY(~ (0u), _GLF_IDENTITY(~ (~ (~ (0u))), _GLF_IDENTITY(uint(uvec3(~ (~ (~ (0u))), 1u, 0u)), 0u | (_GLF_IDENTITY(uint(uvec3(~ (~ (~ (0u))), 1u, 0u)), (uint(uvec3(~ (~ (~ (0u))), 1u, 0u))) >> 0u)))))))), ~ (0u)), max(min(_GLF_IDENTITY(_GLF_IDENTITY(~ (0u), (false ? _GLF_FUZZED(subgroup_local_id) : ~ (0u))), ~ (~ (_GLF_IDENTITY(~ (0u), ~ (~ (~ (0u))))))), ~ (0u)), min(_GLF_IDENTITY(_GLF_IDENTITY(~ (0u), (false ? _GLF_FUZZED(subgroup_local_id) : ~ (0u))), ~ (~ (_GLF_IDENTITY(~ (0u), ~ (~ (~ (0u))))))), ~ (0u))))), 0u ^ (_GLF_IDENTITY(~ (0u), _GLF_IDENTITY(min(_GLF_IDENTITY(_GLF_IDENTITY(~ (0u), (false ? _GLF_FUZZED(subgroup_local_id) : ~ (0u))), ~ (~ (_GLF_IDENTITY(~ (0u), _GLF_IDENTITY(~ (~ (~ (0u))), _GLF_IDENTITY(uint(uvec3(~ (~ (~ (0u))), 1u, 0u)), 0u | (_GLF_IDENTITY(uint(uvec3(~ (~ (~ (0u))), 1u, 0u)), (uint(uvec3(~ (~ (~ (0u))), 1u, 0u))) >> 0u)))))))), ~ (0u)), max(min(_GLF_IDENTITY(_GLF_IDENTITY(~ (0u), (false ? _GLF_FUZZED(subgroup_local_id) : ~ (0u))), ~ (~ (_GLF_IDENTITY(~ (0u), ~ (~ (~ (0u))))))), ~ (0u)), min(_GLF_IDENTITY(_GLF_IDENTITY(~ (0u), (false ? _GLF_FUZZED(subgroup_local_id) : ~ (0u))), ~ (~ (_GLF_IDENTITY(~ (0u), ~ (~ (~ (0u))))))), ~ (0u))))))))), (_GLF_IDENTITY(1u | 0u, 0u | (1u | 0u)))), max(uvec2(_GLF_IDENTITY(0u, ~ (~ (0u))), (_GLF_IDENTITY(1u | 0u, (_GLF_IDENTITY(1u | 0u, (_GLF_IDENTITY(1u | 0u, uint(uvec2(1u | 0u, 1u)))) ^ 0u)) >> (0u & 190693u)))), uvec2(_GLF_IDENTITY(0u, ~ _GLF_IDENTITY((~ (0u)), (_GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, ! (! (true))))) ? (~ (0u)) : _GLF_FUZZED(packSnorm4x8(vec4(-223.056, -679.202, 0.3, -762.263)))))), (1u | 0u))))), (uint(_GLF_IDENTITY(uvec2(_GLF_IDENTITY(0u, ~ (_GLF_IDENTITY(~ (0u), _GLF_IDENTITY(min(_GLF_IDENTITY(_GLF_IDENTITY(~ (0u), (false ? _GLF_FUZZED(subgroup_local_id) : ~ (0u))), ~ (~ (_GLF_IDENTITY(~ (0u), _GLF_IDENTITY(~ (~ (~ (0u))), _GLF_IDENTITY(uint(uvec3(~ (~ (~ (0u))), 1u, 0u)), 0u | (_GLF_IDENTITY(uint(uvec3(~ (~ (~ (0u))), 1u, 0u)), (uint(uvec3(~ (~ (~ (0u))), 1u, 0u))) >> 0u)))))))), ~ (0u)), max(min(_GLF_IDENTITY(_GLF_IDENTITY(~ (0u), (_GLF_IDENTITY(false ? _GLF_FUZZED(subgroup_local_id) : ~ (0u), (_GLF_IDENTITY(false ? _GLF_FUZZED(subgroup_local_id) : ~ (0u), 0u ^ (false ? _GLF_FUZZED(subgroup_local_id) : ~ (0u)))) - (0u | 0u)))), ~ (~ (_GLF_IDENTITY(~ (0u), ~ (~ _GLF_IDENTITY((~ (0u)), 0u | ((~ (0u))))))))), ~ (0u)), min(_GLF_IDENTITY(_GLF_IDENTITY(~ (0u), (false ? _GLF_FUZZED(subgroup_local_id) : ~ (0u))), ~ (~ (_GLF_IDENTITY(~ (0u), ~ (~ (~ (0u))))))), ~ (0u))))))), (1u | 0u)), max(uvec2(_GLF_IDENTITY(0u, ~ (~ (0u))), (_GLF_IDENTITY(1u | 0u, (_GLF_IDENTITY(1u | 0u, (_GLF_IDENTITY(1u | 0u, uint(uvec2(1u | 0u, 1u)))) ^ 0u)) >> (0u & _GLF_IDENTITY(190693u, min(190693u, _GLF_IDENTITY(190693u, 1u * (_GLF_IDENTITY(190693u, (true ? 190693u : _GLF_FUZZED(workgroup_size))))))))))), uvec2(_GLF_IDENTITY(0u, ~ _GLF_IDENTITY((~ (0u)), (_GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, ! (! (true))))) ? (~ (0u)) : _GLF_FUZZED(packSnorm4x8(vec4(-223.056, -679.202, 0.3, -762.263)))))), (1u | 0u)))))) | (uint(_GLF_IDENTITY(uvec2(_GLF_IDENTITY(0u, ~ (_GLF_IDENTITY(~ (0u), _GLF_IDENTITY(min(_GLF_IDENTITY(_GLF_IDENTITY(~ (0u), (false ? _GLF_FUZZED(subgroup_local_id) : ~ (0u))), ~ (~ (_GLF_IDENTITY(~ (0u), _GLF_IDENTITY(~ (~ (~ (0u))), _GLF_IDENTITY(uint(uvec3(~ (~ (~ (0u))), 1u, 0u)), 0u | (_GLF_IDENTITY(uint(uvec3(~ (~ (~ (0u))), 1u, 0u)), _GLF_IDENTITY((uint(uvec3(~ (~ (~ (0u))), 1u, 0u))), ((uint(uvec3(~ (~ (~ (0u))), 1u, 0u)))) | (_GLF_IDENTITY((uint(uvec3(~ (~ (~ (0u))), 1u, 0u))), (0u << _GLF_IDENTITY(uint(2u), uint(2u))) + ((uint(uvec3(~ (~ (~ (0u))), 1u, 0u))))))) >> 0u)))))))), ~ (0u)), max(min(_GLF_IDENTITY(_GLF_IDENTITY(~ (0u), (false ? _GLF_FUZZED(subgroup_local_id) : ~ (0u))), ~ (~ _GLF_IDENTITY((_GLF_IDENTITY(~ (0u), ~ (~ (~ (0u))))), (false ? _GLF_FUZZED(subgroup_id) : (_GLF_IDENTITY(~ (0u), ~ (~ (~ (0u))))))))), ~ (0u)), min(_GLF_IDENTITY(_GLF_IDENTITY(~ (0u), (false ? _GLF_FUZZED(subgroup_local_id) : ~ (0u))), ~ (~ (_GLF_IDENTITY(~ (0u), ~ (~ (~ (0u))))))), ~ (0u))))))), (1u | 0u)), max(uvec2(_GLF_IDENTITY(0u, ~ (~ (0u))), _GLF_IDENTITY((_GLF_IDENTITY(1u | 0u, _GLF_IDENTITY((_GLF_IDENTITY(1u | 0u, (_GLF_IDENTITY(1u | 0u, uint(uvec2(1u | 0u, 1u)))) ^ 0u)), ~ (~ ((_GLF_IDENTITY(1u | 0u, (_GLF_IDENTITY(1u | 0u, uint(uvec2(1u | 0u, 1u)))) ^ 0u))))) >> (0u & 190693u))), min((_GLF_IDENTITY(1u | 0u, _GLF_IDENTITY((_GLF_IDENTITY(1u | 0u, (_GLF_IDENTITY(1u | 0u, uint(uvec2(1u | 0u, 1u)))) ^ 0u)), ~ (~ ((_GLF_IDENTITY(1u | 0u, (_GLF_IDENTITY(1u | 0u, uint(uvec2(1u | 0u, 1u)))) ^ 0u))))) >> (0u & 190693u))), (_GLF_IDENTITY(1u | 0u, _GLF_IDENTITY((_GLF_IDENTITY(1u | 0u, (_GLF_IDENTITY(1u | 0u, uint(uvec2(1u | 0u, 1u)))) ^ 0u)), ~ (~ ((_GLF_IDENTITY(1u | 0u, (_GLF_IDENTITY(1u | 0u, uint(uvec2(1u | 0u, 1u)))) ^ 0u))))) >> (0u & 190693u)))))), uvec2(_GLF_IDENTITY(0u, ~ _GLF_IDENTITY((~ (0u)), (_GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, ! (! (true))))) ? (~ (0u)) : _GLF_FUZZED(packSnorm4x8(vec4(-223.056, -679.202, 0.3, -762.263)))))), (1u | 0u))))))))), uvec2(1u, 1u) * (uvec2(next_virtual_gid, 0u))))) | (uint(_GLF_IDENTITY(_GLF_IDENTITY(uvec2(next_virtual_gid, 0u), _GLF_IDENTITY(uvec2(1u, 1u), uvec2(uvec3(uvec2(1u, 1u), 0u))) * (_GLF_IDENTITY(_GLF_IDENTITY(uvec2(next_virtual_gid, 0u), _GLF_IDENTITY(uvec2(0u, 0u), uvec2(uvec2(uvec2(0u, 0u)))) + (_GLF_IDENTITY(uvec2(next_virtual_gid, 0u), (uvec2(next_virtual_gid, 0u)) | (uvec2(next_virtual_gid, 0u))))), (_GLF_IDENTITY(uvec2(next_virtual_gid, 0u), clamp(uvec2(next_virtual_gid, 0u), uvec2(next_virtual_gid, 0u), uvec2(next_virtual_gid, 0u)))) | (_GLF_IDENTITY(uvec2(next_virtual_gid, 0u), clamp(uvec2(next_virtual_gid, 0u), uvec2(next_virtual_gid, 0u), uvec2(next_virtual_gid, 0u))))))), uvec2(0u, 0u) ^ (_GLF_IDENTITY(uvec2(next_virtual_gid, 0u), _GLF_IDENTITY(uvec2(1u, 1u), uvec2(uvec3(uvec2(1u, 1u), 0u))) * (_GLF_IDENTITY(_GLF_IDENTITY(uvec2(next_virtual_gid, 0u), _GLF_IDENTITY(uvec2(0u, 0u), uvec2(uvec2(uvec2(0u, 0u)))) + (_GLF_IDENTITY(uvec2(next_virtual_gid, 0u), (uvec2(next_virtual_gid, 0u)) | (uvec2(next_virtual_gid, 0u))))), (_GLF_IDENTITY(uvec2(next_virtual_gid, 0u), clamp(uvec2(next_virtual_gid, 0u), uvec2(next_virtual_gid, 0u), uvec2(next_virtual_gid, 0u)))) | (_GLF_IDENTITY(uvec2(next_virtual_gid, 0u), clamp(uvec2(next_virtual_gid, 0u), uvec2(next_virtual_gid, 0u), uvec2(next_virtual_gid, 0u)))))))))))))))], _GLF_IDENTITY(uint(1), max(uint(1), uint(1))), 4, _GLF_IDENTITY(_GLF_IDENTITY(64, ~ (~ (64))), _GLF_IDENTITY(~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(64, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(64, (64) / ((1 << _GLF_IDENTITY(int(3), int(3))) >> _GLF_IDENTITY(int(3), int(3))))), max(~ (_GLF_IDENTITY(64, (64) / ((1 << _GLF_IDENTITY(int(3), int(3))) >> _GLF_IDENTITY(int(3), int(3))))), ~ (_GLF_IDENTITY(64, (64) / ((1 << _GLF_IDENTITY(int(3), int(3))) >> _GLF_IDENTITY(int(3), int(3)))))))))), min(~ (_GLF_IDENTITY(64, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(64, (64) / ((1 << _GLF_IDENTITY(int(3), int(3))) >> _GLF_IDENTITY(int(3), int(3))))), max(~ (_GLF_IDENTITY(64, (64) / ((1 << _GLF_IDENTITY(int(3), int(3))) >> _GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), (int(3)) / (0 ^ 1)))))), ~ (_GLF_IDENTITY(64, (64) / ((1 << _GLF_IDENTITY(int(3), int(_GLF_IDENTITY(3, 0 | (3))))) >> _GLF_IDENTITY(int(3), int(3)))))))))), ~ (_GLF_IDENTITY(64, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(64, (64) / ((1 << _GLF_IDENTITY(int(3), int(3))) >> _GLF_IDENTITY(int(3), int(3))))), max(~ _GLF_IDENTITY((_GLF_IDENTITY(64, (64) / ((1 << _GLF_IDENTITY(int(3), int(3))) >> _GLF_IDENTITY(int(3), int(3))))), (false ? _GLF_FUZZED(88540) : _GLF_IDENTITY((_GLF_IDENTITY(64, (64) / ((1 << _GLF_IDENTITY(int(3), int(3))) >> _GLF_IDENTITY(int(3), int(3))))), (_GLF_IDENTITY((_GLF_IDENTITY(64, (64) / ((1 << _GLF_IDENTITY(int(3), int(3))) >> _GLF_IDENTITY(int(3), int(3))))), ((_GLF_IDENTITY(64, (64) / ((1 << _GLF_IDENTITY(int(3), int(3))) >> _GLF_IDENTITY(int(3), int(3)))))) | 0)) + 0))), ~ (_GLF_IDENTITY(64, (64) / ((1 << _GLF_IDENTITY(int(_GLF_IDENTITY(3, (3) | (3))), int(3))) >> _GLF_IDENTITY(int(3), int(3))))))))))))), _GLF_IDENTITY(max(_GLF_IDENTITY(~ (~ (64)), (~ (~ (64))) - (1 ^ 1)), ~ (~ (64))), (max(_GLF_IDENTITY(~ (~ (64)), (~ (~ (64))) - (1 ^ 1)), ~ (~ (64)))) - 0))), 4);
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint read_1 = atomicLoad(buf[virtual_gid], 4, 64, 0);
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true)))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) || false), (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       return;
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           barrier();
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            return;
          }
         return;
        }
       return;
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY((_GLF_IDENTITY(false, true && (false))), ((_GLF_IDENTITY(false, true && (false)))) && _GLF_IDENTITY(true, bool(bool(true)))) && true), (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      return;
     barrier();
    }
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, false, false, true))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))
    barrier();
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      return;
    }
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 atomicStore(buf[next_virtual_gid], _GLF_IDENTITY(uint(read_1 + 1), (uint(_GLF_IDENTITY(read_1, max(read_1, _GLF_IDENTITY(read_1, (read_1) * 1u))) + 1)) | (_GLF_IDENTITY(uint(read_1 + 1), clamp(uint(read_1 + 1), uint(read_1 + 1), uint(_GLF_IDENTITY(read_1, (read_1) | (_GLF_IDENTITY(read_1, ~ (~ (read_1))))) + 1))))), 4, 64, 4);
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, true, false, false)), ! (! (bool(bvec4(false, true, false, false))))))))
  barrier();
}
