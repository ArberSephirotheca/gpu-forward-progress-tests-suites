#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(mat4(injectionSwitch.y, sin(0.0), 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, determinant(mat4(0.0, 0.0, 0.0, 1.0, 0.0, 0.0, round(length(normalize(vec3(1.0, 1.0, 1.0)))), 0.0, length(0.0), 0.0, determinant(mat2(0.0, 0.0, 1.0, 0.0)), 0.0, _GLF_IDENTITY(dot(vec2(0.0, 0.0), vec2(1.0, 1.0)), dot(vec2(0.0, 0.0), vec2(1.0, 1.0))), 0.0, 0.0, 0.0)), 1.0, 1.0)))))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).x > injectionSwitch.y))))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, false, true)))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(false, true && (false)), false, true, true)), true && (bool(bvec4(_GLF_IDENTITY(false, true && (false)), false, true, true)))))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
    barrier();
  }
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  barrier();
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) && true), (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(acosh(injectionSwitch)) : injectionSwitch)).x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y)), max(injectionSwitch.y, injectionSwitch.y))))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec4(_GLF_DEAD(false), true, true, false)), (bool(bvec4(_GLF_DEAD(false), true, true, false))) && true)))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(_GLF_IDENTITY(bool(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).x > injectionSwitch.y, bool(bool(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true))))))), bool(_GLF_IDENTITY(bool(bool(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)).y), ((injectionSwitch.x > injectionSwitch.y)) && true)))), bool(bvec3(bool(bool(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true)))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))), true && (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(_GLF_IDENTITY(bool(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).x > injectionSwitch.y, bool(bool(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true))))))), bool(_GLF_IDENTITY(bool(bool(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)).y), ((injectionSwitch.x > injectionSwitch.y)) && true)))), bool(bvec3(bool(bool(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true)))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))), true && (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(_GLF_IDENTITY(bool(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).x > injectionSwitch.y, bool(bool(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true))))))), bool(_GLF_IDENTITY(bool(bool(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)).y), ((injectionSwitch.x > injectionSwitch.y)) && true)))), bool(bvec3(bool(bool(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true)))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))))))), ! (! (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(_GLF_IDENTITY(bool(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bool(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true))))))), bool(_GLF_IDENTITY(bool(bool(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)).y), _GLF_IDENTITY(((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), injectionSwitch)).y)) && true, (((_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y)) && true) && true))))), bool(_GLF_IDENTITY(bvec3(bool(bool(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true)))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec3(bvec4(bvec3(bool(_GLF_IDENTITY(bool(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (bool(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true)))))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false))))))))))))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))))))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     barrier();
    }
   return;
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, false)))))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0), mix(float(injectionSwitch.x), float(_GLF_FUZZED(3747.6465)), bool(false))) > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))) - 0.0)))), (_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))) - 0.0))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   return;
  }
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(bvec2(! (false), true))))), ! _GLF_IDENTITY((! (false)), ((! (false))) || false)), (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y, _GLF_IDENTITY(! (! (injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (! _GLF_IDENTITY((! (injectionSwitch.x > injectionSwitch.y)), true && ((! (injectionSwitch.x > injectionSwitch.y))))), (! (! (! (injectionSwitch.x > injectionSwitch.y)))) || false)))))), bool(bvec4(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y, _GLF_IDENTITY(! (! (injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (! (! (injectionSwitch.x > injectionSwitch.y))), (! (! (! (injectionSwitch.x > injectionSwitch.y)))) || false)))))), true, _GLF_IDENTITY(true, ! (! (true))), true))), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) && true, _GLF_IDENTITY(bool(bvec2((_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)) : _GLF_FUZZED(vec2(-931.809, -84.14)))).x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)), injectionSwitch)), vec2(injectionSwitch[0], injectionSwitch[1])).y, _GLF_IDENTITY(! (! (injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(_GLF_IDENTITY(! (! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), (! (injectionSwitch.x > injectionSwitch.y)) && true))), (! (! (! (injectionSwitch.x > injectionSwitch.y)))) || false), bool(bool(_GLF_IDENTITY(! (! (! (injectionSwitch.x > injectionSwitch.y))), (! (! (! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, vec2(mat2(injectionSwitch, tan(0.0), _GLF_ONE(1.0, injectionSwitch.y)))), injectionSwitch)).y)))) || false))))))))), ! (! (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true)))))) && true, true)), ! (! (bool(bvec2((_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y, _GLF_IDENTITY(! (! (injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bool(injectionSwitch.x > injectionSwitch.y)))))), (! (! (! (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0) > injectionSwitch.y)))) || false)))))), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) && true, true)))))))))
  barrier();
 uint num_workgroup = _GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, _GLF_IDENTITY(uvec3(_GLF_IDENTITY(_GLF_IDENTITY(uvec3(gl_NumWorkGroups), (uvec3(gl_NumWorkGroups)) >> uvec3(0u, _GLF_IDENTITY(0u, uint(uint(_GLF_IDENTITY(0u, max(0u, 0u))))), 0u)), (_GLF_IDENTITY(uvec3(gl_NumWorkGroups), (uvec3(gl_NumWorkGroups)) >> uvec3(0u, _GLF_IDENTITY(0u, uint(uint(_GLF_IDENTITY(0u, max(0u, 0u))))), 0u))) | (_GLF_IDENTITY(uvec3(gl_NumWorkGroups), (uvec3(gl_NumWorkGroups)) >> uvec3(0u, _GLF_IDENTITY(0u, uint(uint(_GLF_IDENTITY(0u, max(0u, 0u))))), 0u))))), (uvec3(_GLF_IDENTITY(_GLF_IDENTITY(uvec3(gl_NumWorkGroups), (uvec3(gl_NumWorkGroups)) >> uvec3(0u, _GLF_IDENTITY(0u, uint(uint(_GLF_IDENTITY(0u, max(0u, 0u))))), 0u)), (_GLF_IDENTITY(uvec3(gl_NumWorkGroups), (uvec3(gl_NumWorkGroups)) >> uvec3(0u, _GLF_IDENTITY(0u, uint(uint(_GLF_IDENTITY(0u, max(0u, 0u))))), 0u))) | (_GLF_IDENTITY(uvec3(gl_NumWorkGroups), (uvec3(gl_NumWorkGroups)) >> uvec3(0u, _GLF_IDENTITY(0u, uint(uint(_GLF_IDENTITY(0u, max(0u, 0u))))), 0u)))))) | uvec3(0u, 0u, 0u))), uvec3(uvec3(_GLF_IDENTITY(gl_NumWorkGroups, uvec3(_GLF_IDENTITY(_GLF_IDENTITY(uvec3(gl_NumWorkGroups), (uvec3(gl_NumWorkGroups)) >> uvec3(0u, _GLF_IDENTITY(0u, uint(uint(_GLF_IDENTITY(0u, max(0u, 0u))))), 0u)), (_GLF_IDENTITY(uvec3(gl_NumWorkGroups), (uvec3(gl_NumWorkGroups)) >> uvec3(0u, _GLF_IDENTITY(0u, uint(uint(_GLF_IDENTITY(0u, max(0u, 0u))))), 0u))) | (_GLF_IDENTITY(uvec3(gl_NumWorkGroups), (uvec3(gl_NumWorkGroups)) >> uvec3(0u, _GLF_IDENTITY(0u, uint(uint(_GLF_IDENTITY(0u, max(0u, 0u))))), 0u))))))))).x;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     return;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)) : _GLF_FUZZED(injectionSwitch))).x > _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(862.633)), vec2(_GLF_FUZZED(-26.02), (injectionSwitch)[1]), bvec2(false, true))).y)), false || _GLF_IDENTITY((_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > injectionSwitch.y))))), ! (! ((_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > injectionSwitch.y)))))))))))
    barrier();
   return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)))).x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  return;
 uint workgroup_size = gl_WorkGroupSize.x;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec3(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(length(47.91)))) > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)).y), bool(bool((_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(length(47.91)))) > injectionSwitch.y)))))), true, false))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)))))
    barrier();
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint workgroup_id = _GLF_IDENTITY(gl_WorkGroupID, uvec3(uvec3(_GLF_IDENTITY(gl_WorkGroupID, uvec3(_GLF_IDENTITY(uvec4(gl_WorkGroupID, 1u), ~ (~ (uvec4(gl_WorkGroupID, 1u))))))))).x;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, float(mat3x2(injectionSwitch.y, 0.0, 0.0, 0.0, 1.0, 1.0)))) - 0.0)))))
  return;
 uint workgroup_base = _GLF_IDENTITY(workgroup_size, _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec2(_GLF_IDENTITY(workgroup_size, (workgroup_size) | (0u << _GLF_IDENTITY(uint(_GLF_IDENTITY(3u, (3u) ^ 0u)), uint(3u)))), _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) >> 0u)) | (0u))) * 1u)), (false ? _GLF_FUZZED(uvec2(58224u, 181957u)) : uvec2(_GLF_IDENTITY(workgroup_size, (workgroup_size) | (0u << _GLF_IDENTITY(uint(3u), uint(_GLF_IDENTITY(3u, (3u) / 1u))))), 0u)))), (uint(_GLF_IDENTITY(uvec2(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_size, _GLF_IDENTITY(_GLF_IDENTITY(uint(uvec3(workgroup_size, 1u, 0u)), (uint(uvec3(workgroup_size, 1u, 0u))) | (uint(uvec3(workgroup_size, 1u, 0u)))), (_GLF_IDENTITY(uint(uvec3(workgroup_size, 1u, 0u)), (uint(uvec3(workgroup_size, 1u, 0u))) | (uint(uvec3(workgroup_size, 1u, 0u))))) << 0u)), (workgroup_size) | (_GLF_IDENTITY(_GLF_IDENTITY(0u, uint(uvec2(0u, 0u))) << _GLF_IDENTITY(uint(3u), uint(3u)), (true ? _GLF_IDENTITY(0u, uint(uvec2(0u, 0u))) << _GLF_IDENTITY(uint(3u), uint(3u)) : _GLF_FUZZED(subgroup_id))))), 0u), _GLF_IDENTITY((false ? _GLF_FUZZED(uvec2(58224u, 181957u)) : uvec2(_GLF_IDENTITY(workgroup_size, (workgroup_size) | (0u << _GLF_IDENTITY(uint(3u), uint(3u)))), 0u)), uvec2(0u, 0u) + ((false ? _GLF_FUZZED(uvec2(58224u, 181957u)) : uvec2(_GLF_IDENTITY(workgroup_size, (workgroup_size) | (0u << _GLF_IDENTITY(uint(3u), uint(3u)))), 0u))))))) | (uint(_GLF_IDENTITY(uvec2(_GLF_IDENTITY(workgroup_size, (workgroup_size) | _GLF_IDENTITY((0u << _GLF_IDENTITY(uint(3u), uint(3u))), uint(uvec2((0u << _GLF_IDENTITY(uint(_GLF_IDENTITY(3u, (false ? _GLF_FUZZED(workgroup_size) : 3u))), uint(3u))), 0u)))), 0u), (_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false)) ? _GLF_FUZZED(uvec2(58224u, 181957u)) : uvec2(_GLF_IDENTITY(workgroup_size, (workgroup_size) | (0u << _GLF_IDENTITY(uint(3u), uint(_GLF_IDENTITY(3u, uint(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (_GLF_IDENTITY(3u, _GLF_IDENTITY(0u, 1u * (0u)) | (3u)))))))), 0u))))))) * workgroup_id;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, _GLF_IDENTITY(! _GLF_IDENTITY((! (false)), ((! (false))) && true), false || (! _GLF_IDENTITY((! (false)), ((! (false))) && true)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     return;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, false, true, true)), ! (! (bool(bvec4(false, false, _GLF_IDENTITY(true, true && (true)), true))))))))
    barrier();
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(vec2(injectionSwitch))).y))))
      barrier();
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  return;
 uint virtual_gid = workgroup_base + subgroup_id * _GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, subgroup_size))) | (subgroup_size)) + _GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, 0u | (_GLF_IDENTITY(subgroup_local_id, clamp(subgroup_local_id, subgroup_local_id, subgroup_local_id))))) - _GLF_IDENTITY(0u, (0u) ^ 0u)), uint(_GLF_IDENTITY(_GLF_IDENTITY(uvec4(_GLF_IDENTITY(subgroup_local_id, (true ? subgroup_local_id : _GLF_FUZZED(workgroup_size))), 1u, 0u, 1u), max(uvec4(subgroup_local_id, 1u, 0u, 1u), uvec4(subgroup_local_id, 1u, 0u, 1u))), min(uvec4(subgroup_local_id, 1u, _GLF_IDENTITY(0u, ~ (~ (_GLF_IDENTITY(0u, (0u) + 0u)))), 1u), uvec4(subgroup_local_id, _GLF_IDENTITY(_GLF_IDENTITY(1u, (true ? _GLF_IDENTITY(1u, max(1u, 1u)) : _GLF_FUZZED(workgroup_size))), min(_GLF_IDENTITY(1u, (1u) ^ 0u), 1u)), 0u, 1u)))));
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat3(injectionSwitch, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(dot(vec4(0.0, length(vec4(0.0, 0.0, 0.0, 0.0)), cos(0.0), 0.0), vec4(0.0, 0.0, 1.0, 0.0)), dot(vec4(0.0, length(vec4(0.0, 0.0, 0.0, 0.0)), cos(0.0), 0.0), vec4(0.0, 0.0, 1.0, 0.0)))), mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0) + (mat3(injectionSwitch, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(dot(vec4(0.0, length(vec4(0.0, 0.0, 0.0, 0.0)), cos(0.0), 0.0), vec4(0.0, 0.0, 1.0, 0.0)), dot(vec4(0.0, length(vec4(0.0, 0.0, 0.0, 0.0)), cos(0.0), 0.0), vec4(0.0, 0.0, 1.0, 0.0)))))))), max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(-8.1), _GLF_FUZZED(894.587)), bvec2(false, false)), max(mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(-8.1), _GLF_FUZZED(894.587)), bvec2(false, false)), mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(-8.1), _GLF_FUZZED(894.587)), bvec2(false, false))))))).x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(7.8), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(-6828.7083)), bvec2(true, false))).y))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
      barrier();
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + 0.0), injectionSwitch.x, injectionSwitch.x)), (false ? _GLF_FUZZED(-8376.9338) : _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + 0.0), injectionSwitch.x, injectionSwitch.x)), clamp(_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + 0.0), injectionSwitch.x, injectionSwitch.x)), _GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + 0.0), injectionSwitch.x, injectionSwitch.x)), _GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + 0.0), injectionSwitch.x, injectionSwitch.x)))), min(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + 0.0), injectionSwitch.x, injectionSwitch.x)), clamp(_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + 0.0), injectionSwitch.x, injectionSwitch.x)), _GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + 0.0), injectionSwitch.x, injectionSwitch.x)), _GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + 0.0), injectionSwitch.x, injectionSwitch.x)))), float(mat3x2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + 0.0), injectionSwitch.x, injectionSwitch.x)), clamp(_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + 0.0), injectionSwitch.x, injectionSwitch.x)), _GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + 0.0), injectionSwitch.x, injectionSwitch.x)), _GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + 0.0), injectionSwitch.x, injectionSwitch.x)))), abs(1.0), 0.0, 0.0, 1.0, 1.0))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + 0.0), injectionSwitch.x, injectionSwitch.x)), clamp(_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + 0.0), injectionSwitch.x, injectionSwitch.x)), _GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + 0.0), injectionSwitch.x, injectionSwitch.x)), _GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + 0.0), injectionSwitch.x, injectionSwitch.x)))))))) > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      return;
     barrier();
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, true && (false)), _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-612.927)), vec2(_GLF_FUZZED(7.2), (injectionSwitch)[1]), bvec2(false, true))).y)) || _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y))))))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       return;
      }
     return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
      return;
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(! (false), true && (! (false))), ! (! (! (false))))), ! (! ((_GLF_IDENTITY(! (false), ! (_GLF_IDENTITY(! (! _GLF_IDENTITY((false), true && ((false)))), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(! (! _GLF_IDENTITY((false), true && ((false)))), (! (! _GLF_IDENTITY((false), true && ((false))))) && true))), false || (bool(bool(_GLF_IDENTITY(! (! _GLF_IDENTITY((false), true && ((false)))), (! (! _GLF_IDENTITY((false), true && ((false))))) && true)))))))))))))) || false), false || (false)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! (! (false)))), bool(bool(! (_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false))))))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(injectionSwitch.x > injectionSwitch.y, false)))))))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        barrier();
       return;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         return;
        }
      }
     return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
        return;
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
    }
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false)))
    return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(-301.533, 9297.1329)) : injectionSwitch))) + _GLF_IDENTITY(vec2(0.0, 0.0), (_GLF_IDENTITY(vec2(0.0, 0.0), sin(vec2(0.0, 0.0)) + (vec2(0.0, 0.0)))) - vec2(0.0, 0.0))).y))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     return;
    }
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y)))))))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false)))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false)))))
    barrier();
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y))))
    return;
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-689.540)), float(injectionSwitch.x), bool(true))) > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     return;
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-4245.1735)), float(injectionSwitch.x), bool(true))) > injectionSwitch.y)))))))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, true)))))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false)))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, false, false, true)))))
        return;
       return;
      }
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bool((injectionSwitch.x > injectionSwitch.y)))), false, false, _GLF_IDENTITY(true, (true) || false)))))))
    return;
  }
 uint next_virtual_gid = workgroup_base + _GLF_IDENTITY(subgroup_id * _GLF_IDENTITY(subgroup_size, clamp(subgroup_size, _GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, subgroup_size)), subgroup_size)), clamp(subgroup_id * _GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, subgroup_size)), subgroup_id * _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, _GLF_IDENTITY(subgroup_size, 0u | (subgroup_size)))), (_GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, _GLF_IDENTITY(subgroup_size, 0u | (subgroup_size))))) | (_GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, _GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(0u | (subgroup_size), (0u | (subgroup_size)) - 0u)))))), subgroup_id * _GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(clamp(subgroup_size, subgroup_size, subgroup_size), 0u | (clamp(subgroup_size, subgroup_size, subgroup_size)))))) + _GLF_IDENTITY(((subgroup_local_id + 1) % _GLF_IDENTITY(subgroup_size, (subgroup_size) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x)))), (true ? ((subgroup_local_id + 1) % subgroup_size) : _GLF_FUZZED(22142u)));
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > injectionSwitch.y))))
      barrier();
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) || false)) || false), (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], float(mat4x2(_GLF_IDENTITY(injectionSwitch[1], (injectionSwitch[1]) * 1.0), 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0))))).x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   return;
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
    }
   return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   barrier();
  }
 atomicStore(buf[next_virtual_gid], uint(1), 4, 64, 4);
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y))), bool(_GLF_IDENTITY(bvec2((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y))), false), bvec2(bvec4(bvec2((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y))), false), false, false))))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-3702.2108)), float(injectionSwitch.x), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), (injectionSwitch.x) / 1.0) > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(bvec3(false, true, false)))))), bool(bvec3(false, false, false)))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(injectionSwitch.x > injectionSwitch.y), true && (bool(injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(injectionSwitch.x > injectionSwitch.y), true && (bool(injectionSwitch.x > injectionSwitch.y)))), (bool(_GLF_IDENTITY(bool(injectionSwitch.x > injectionSwitch.y), true && (bool(injectionSwitch.x > injectionSwitch.y))))) || false)), (bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(injectionSwitch.x > injectionSwitch.y), true && (bool(injectionSwitch.x > injectionSwitch.y)))), (bool(_GLF_IDENTITY(bool(injectionSwitch.x > injectionSwitch.y), true && (bool(injectionSwitch.x > injectionSwitch.y))))) || false))) || false)))))), (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(_GLF_IDENTITY(bool(injectionSwitch.x > injectionSwitch.y), true && (_GLF_IDENTITY(bool(injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY(bool(injectionSwitch.x > injectionSwitch.y), ! (! (bool(injectionSwitch.x > injectionSwitch.y))))) && true)))))))) && true)))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   barrier();
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(false, bool(bvec4(false, true, false, true))) || (false))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(5.6) : injectionSwitch.y))))))
      barrier();
     return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, false, _GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, false || (false))))), _GLF_IDENTITY(false, false || (false)))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     return;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) && true))), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, abs(vec2(1.0, 1.0)) * (injectionSwitch)).x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false)) || false, ! (! ((_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false)) || false))))))
      return;
     return;
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
   barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
  }
 uint read_1 = atomicLoad(buf[_GLF_IDENTITY(virtual_gid, 0u ^ _GLF_IDENTITY((virtual_gid), 1u * (_GLF_IDENTITY((virtual_gid), 0u ^ ((virtual_gid))))))], 4, 64, 0);
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     barrier();
     if(_GLF_DEAD(false))
      return;
    }
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(5.7), _GLF_FUZZED(vec3(5.5, 3059.0162, 9557.5870).g)), _GLF_IDENTITY(bvec2(false, false), bvec2(_GLF_IDENTITY(bvec2(bvec2(false, false)), bvec2(bvec2(bvec2(bvec2(false, false))))))))).x > injectionSwitch.y)), false || (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mix(vec2((_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(cos(vec2(-457.728, 3.0))))))[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(5.7), _GLF_FUZZED(vec3(5.5, 3059.0162, 9557.5870).g)), _GLF_IDENTITY(bvec2(false, false), bvec2(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec3(bvec2(false, false), true)))), bvec2(bvec2(bvec2(_GLF_IDENTITY(bvec2(false, false), _GLF_IDENTITY(bvec2(bvec4(bvec2(false, false), false, true)), bvec2(bvec4(bvec2(bvec4(bvec2(false, false), false, true)), false, true)))))))))))).x > injectionSwitch.y))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, true && (false)), (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * _GLF_IDENTITY((injectionSwitch), max(_GLF_IDENTITY((injectionSwitch), max((injectionSwitch), (injectionSwitch))), _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(452.415)), vec2(_GLF_IDENTITY(_GLF_FUZZED(954.306), (false ? _GLF_FUZZED(4.1) : _GLF_FUZZED(954.306))), (injectionSwitch)[1]), bvec2(false, true)))), vec2(1.0, 1.0) * ((_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(452.415)), vec2(_GLF_IDENTITY(_GLF_FUZZED(954.306), (false ? _GLF_FUZZED(4.1) : _GLF_FUZZED(954.306))), (injectionSwitch)[1]), bvec2(false, true)))))))), _GLF_IDENTITY(_GLF_IDENTITY((mat2(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0))) - 0.0)) * (injectionSwitch)) * mat2(1.0), clamp((mat2(1.0) * (injectionSwitch)) * mat2(1.0), _GLF_IDENTITY((mat2(1.0) * (injectionSwitch)) * mat2(1.0), _GLF_IDENTITY(vec2(_GLF_IDENTITY(_GLF_IDENTITY(vec4((mat2(1.0) * (injectionSwitch)) * mat2(1.0), 0.0, 0.0), mix(vec4(_GLF_IDENTITY((vec4((mat2(1.0) * (injectionSwitch)) * mat2(1.0), 0.0, 0.0))[0], float(mat4((vec4((mat2(1.0) * (injectionSwitch)) * mat2(1.0), 0.0, 0.0))[0], 0.0, 1.0, 1.0, log(1.0), 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0))), _GLF_FUZZED(80.78), _GLF_FUZZED(5.2), _GLF_FUZZED(996.984)), vec4(_GLF_FUZZED(37.79), (vec4((mat2(1.0) * (injectionSwitch)) * mat2(1.0), 0.0, 0.0))[1], (vec4((mat2(1.0) * (injectionSwitch)) * mat2(1.0), 0.0, 0.0))[2], (vec4((mat2(1.0) * (injectionSwitch)) * mat2(1.0), 0.0, 0.0))[3]), bvec4(false, true, true, true))), _GLF_IDENTITY((vec4((mat2(1.0) * (injectionSwitch)) * mat2(1.0), 0.0, 0.0)) - vec4(0.0, 0.0, 0.0, 0.0), clamp(_GLF_IDENTITY((vec4((mat2(1.0) * (injectionSwitch)) * mat2(1.0), 0.0, 0.0)) - vec4(0.0, 0.0, 0.0, 0.0), clamp((vec4((mat2(1.0) * (injectionSwitch)) * mat2(1.0), 0.0, 0.0)) - vec4(0.0, 0.0, 0.0, 0.0), (vec4((mat2(1.0) * (injectionSwitch)) * mat2(1.0), 0.0, 0.0)) - vec4(0.0, 0.0, 0.0, 0.0), (vec4((mat2(1.0) * (injectionSwitch)) * mat2(1.0), 0.0, 0.0)) - vec4(0.0, 0.0, 0.0, 0.0))), (vec4((mat2(1.0) * (injectionSwitch)) * mat2(1.0), 0.0, 0.0)) - vec4(0.0, 0.0, 0.0, 0.0), (vec4((mat2(1.0) * (injectionSwitch)) * mat2(1.0), 0.0, 0.0)) - vec4(0.0, 0.0, 0.0, 0.0))))), min(vec2(_GLF_IDENTITY(vec4((mat2(1.0) * (injectionSwitch)) * mat2(1.0), 0.0, 0.0), (_GLF_IDENTITY(vec4((mat2(1.0) * (injectionSwitch)) * mat2(1.0), 0.0, 0.0), clamp(vec4((mat2(1.0) * (injectionSwitch)) * mat2(1.0), 0.0, 0.0), vec4((mat2(1.0) * (injectionSwitch)) * mat2(1.0), 0.0, 0.0), _GLF_IDENTITY(vec4((mat2(1.0) * (injectionSwitch)) * mat2(1.0), 0.0, 0.0), (vec4((mat2(1.0) * (injectionSwitch)) * mat2(1.0), 0.0, 0.0)) / cos(vec4(0.0, 0.0, 0.0, 0.0)))))) - vec4(0.0, 0.0, 0.0, 0.0))), vec2(_GLF_IDENTITY(vec4((mat2(1.0) * (injectionSwitch)) * mat2(1.0), 0.0, 0.0), (vec4((mat2(1.0) * (injectionSwitch)) * mat2(1.0), 0.0, 0.0)) - vec4(0.0, 0.0, 0.0, 0.0)))))), (mat2(1.0) * (_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), injectionSwitch, injectionSwitch)), _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(max(injectionSwitch, injectionSwitch), _GLF_IDENTITY(vec2(mat4x3(_GLF_IDENTITY(max(injectionSwitch, injectionSwitch), max(max(injectionSwitch, injectionSwitch), max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)), injectionSwitch))))), tan(0.0), 0.0, 1.0, 1.0, 0.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0)), (vec2(mat4x3(_GLF_IDENTITY(max(injectionSwitch, injectionSwitch), max(max(injectionSwitch, injectionSwitch), max(injectionSwitch, injectionSwitch))), tan(_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-6.2)), float(_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-1.8)))), bool(true)))), 0.0, 1.0, 1.0, 0.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0))) * vec2(1.0, 1.0))))), mat2(_GLF_ONE(1.0, injectionSwitch.y)) * ((_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(max(injectionSwitch, injectionSwitch), _GLF_IDENTITY(vec2(mat4x3(_GLF_IDENTITY(max(injectionSwitch, injectionSwitch), max(max(injectionSwitch, injectionSwitch), max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)), injectionSwitch))))), tan(0.0), 0.0, 1.0, 1.0, 0.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0)), (vec2(mat4x3(_GLF_IDENTITY(max(injectionSwitch, injectionSwitch), max(max(injectionSwitch, injectionSwitch), max(injectionSwitch, injectionSwitch))), tan(_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-6.2)), float(_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-1.8)))), bool(true)))), 0.0, 1.0, 1.0, 0.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0))) * vec2(1.0, 1.0))))))) + vec2(0.0, 0.0)), injectionSwitch)))) * _GLF_IDENTITY(mat2(1.0), mat2(1.0) * (mat2(1.0))))), clamp(_GLF_IDENTITY(_GLF_IDENTITY((mat2(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0))) - 0.0)) * (injectionSwitch)) * mat2(1.0), clamp((mat2(1.0) * (injectionSwitch)) * mat2(1.0), _GLF_IDENTITY((mat2(1.0) * (injectionSwitch)) * mat2(1.0), _GLF_IDENTITY(vec2(_GLF_IDENTITY(_GLF_IDENTITY(vec4((mat2(1.0) * (injectionSwitch)) * mat2(1.0), 0.0, 0.0), mix(vec4(_GLF_IDENTITY((vec4((mat2(1.0) * (injectionSwitch)) * mat2(1.0), 0.0, 0.0))[0], float(mat4((vec4((mat2(1.0) * (injectionSwitch)) * mat2(1.0), 0.0, 0.0))[0], 0.0, 1.0, 1.0, log(1.0), 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0))), _GLF_FUZZED(80.78), _GLF_FUZZED(5.2), _GLF_FUZZED(996.984)), vec4(_GLF_FUZZED(37.79), (vec4((mat2(1.0) * (injectionSwitch)) * mat2(1.0), 0.0, 0.0))[1], (vec4((mat2(1.0) * (injectionSwitch)) * mat2(1.0), 0.0, 0.0))[2], (vec4((mat2(1.0) * (injectionSwitch)) * mat2(1.0), 0.0, 0.0))[3]), bvec4(false, true, true, true))), _GLF_IDENTITY((vec4((mat2(1.0) * (injectionSwitch)) * mat2(1.0), 0.0, 0.0)) - vec4(0.0, 0.0, 0.0, 0.0), clamp(_GLF_IDENTITY((vec4((mat2(1.0) * (injectionSwitch)) * mat2(1.0), 0.0, 0.0)) - vec4(0.0, 0.0, 0.0, 0.0), clamp((vec4((mat2(1.0) * (injectionSwitch)) * mat2(1.0), 0.0, 0.0)) - vec4(0.0, 0.0, 0.0, 0.0), (vec4((mat2(1.0) * (injectionSwitch)) * mat2(1.0), 0.0, 0.0)) - vec4(0.0, 0.0, 0.0, 0.0), (vec4((mat2(1.0) * (injectionSwitch)) * mat2(1.0), 0.0, 0.0)) - vec4(0.0, 0.0, 0.0, 0.0))), (vec4((mat2(1.0) * (injectionSwitch)) * mat2(1.0), 0.0, 0.0)) - vec4(0.0, 0.0, 0.0, 0.0), (vec4((mat2(1.0) * (injectionSwitch)) * mat2(1.0), 0.0, 0.0)) - vec4(0.0, 0.0, 0.0, 0.0))))), min(vec2(_GLF_IDENTITY(vec4((mat2(1.0) * (injectionSwitch)) * mat2(1.0), 0.0, 0.0), (_GLF_IDENTITY(vec4((mat2(1.0) * (injectionSwitch)) * mat2(1.0), 0.0, 0.0), clamp(vec4((mat2(1.0) * (injectionSwitch)) * mat2(1.0), 0.0, 0.0), vec4((mat2(1.0) * (injectionSwitch)) * mat2(1.0), 0.0, 0.0), _GLF_IDENTITY(vec4((mat2(1.0) * (injectionSwitch)) * mat2(1.0), 0.0, 0.0), (vec4((mat2(1.0) * (injectionSwitch)) * mat2(1.0), 0.0, 0.0)) / cos(vec4(0.0, 0.0, 0.0, 0.0)))))) - vec4(0.0, 0.0, 0.0, 0.0))), vec2(_GLF_IDENTITY(vec4((mat2(1.0) * (injectionSwitch)) * mat2(1.0), 0.0, 0.0), (vec4((mat2(1.0) * (injectionSwitch)) * mat2(1.0), 0.0, 0.0)) - vec4(0.0, 0.0, 0.0, 0.0)))))), (mat2(1.0) * (_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), injectionSwitch, injectionSwitch)), _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(max(injectionSwitch, injectionSwitch), _GLF_IDENTITY(vec2(mat4x3(_GLF_IDENTITY(max(injectionSwitch, injectionSwitch), max(max(injectionSwitch, injectionSwitch), max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)), injectionSwitch))))), tan(0.0), 0.0, 1.0, 1.0, 0.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0)), (vec2(mat4x3(_GLF_IDENTITY(max(injectionSwitch, injectionSwitch), max(max(injectionSwitch, injectionSwitch), max(injectionSwitch, injectionSwitch))), tan(_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-6.2)), float(_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-1.8)))), bool(true)))), 0.0, 1.0, 1.0, 0.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0))) * vec2(1.0, 1.0))))), mat2(_GLF_ONE(1.0, injectionSwitch.y)) * ((_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(max(injectionSwitch, injectionSwitch), _GLF_IDENTITY(vec2(mat4x3(_GLF_IDENTITY(max(injectionSwitch, injectionSwitch), max(max(injectionSwitch, injectionSwitch), max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)), injectionSwitch))))), tan(0.0), 0.0, 1.0, 1.0, 0.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0)), (vec2(mat4x3(_GLF_IDENTITY(max(injectionSwitch, injectionSwitch), max(max(injectionSwitch, injectionSwitch), max(injectionSwitch, injectionSwitch))), tan(_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-6.2)), float(_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-1.8)))), bool(true)))), 0.0, 1.0, 1.0, 0.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0))) * vec2(1.0, 1.0))))))) + vec2(0.0, 0.0)), injectionSwitch)))) * _GLF_IDENTITY(mat2(1.0), mat2(1.0) * (mat2(1.0))))), mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (_GLF_IDENTITY((mat2(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0))) - 0.0)) * (injectionSwitch)) * mat2(1.0), clamp((mat2(1.0) * (injectionSwitch)) * mat2(1.0), _GLF_IDENTITY((mat2(1.0) * (injectionSwitch)) * mat2(1.0), _GLF_IDENTITY(vec2(_GLF_IDENTITY(_GLF_IDENTITY(vec4((mat2(1.0) * (injectionSwitch)) * mat2(1.0), 0.0, 0.0), mix(vec4(_GLF_IDENTITY((vec4((mat2(1.0) * (injectionSwitch)) * mat2(1.0), 0.0, 0.0))[0], float(mat4((vec4((mat2(1.0) * (injectionSwitch)) * mat2(1.0), 0.0, 0.0))[0], 0.0, 1.0, 1.0, log(1.0), 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0))), _GLF_FUZZED(80.78), _GLF_FUZZED(5.2), _GLF_FUZZED(996.984)), vec4(_GLF_FUZZED(37.79), (vec4((mat2(1.0) * (injectionSwitch)) * mat2(1.0), 0.0, 0.0))[1], (vec4((mat2(1.0) * (injectionSwitch)) * mat2(1.0), 0.0, 0.0))[2], (vec4((mat2(1.0) * (injectionSwitch)) * mat2(1.0), 0.0, 0.0))[3]), bvec4(false, true, true, true))), _GLF_IDENTITY((vec4((mat2(1.0) * (injectionSwitch)) * mat2(1.0), 0.0, 0.0)) - vec4(0.0, 0.0, 0.0, 0.0), clamp(_GLF_IDENTITY((vec4((mat2(1.0) * (injectionSwitch)) * mat2(1.0), 0.0, 0.0)) - vec4(0.0, 0.0, 0.0, 0.0), clamp((vec4((mat2(1.0) * (injectionSwitch)) * mat2(1.0), 0.0, 0.0)) - vec4(0.0, 0.0, 0.0, 0.0), (vec4((mat2(1.0) * (injectionSwitch)) * mat2(1.0), 0.0, 0.0)) - vec4(0.0, 0.0, 0.0, 0.0), (vec4((mat2(1.0) * (injectionSwitch)) * mat2(1.0), 0.0, 0.0)) - vec4(0.0, 0.0, 0.0, 0.0))), (vec4((mat2(1.0) * (injectionSwitch)) * mat2(1.0), 0.0, 0.0)) - vec4(0.0, 0.0, 0.0, 0.0), (vec4((mat2(1.0) * (injectionSwitch)) * mat2(1.0), 0.0, 0.0)) - vec4(0.0, 0.0, 0.0, 0.0))))), min(vec2(_GLF_IDENTITY(vec4((mat2(1.0) * (injectionSwitch)) * mat2(1.0), 0.0, 0.0), (_GLF_IDENTITY(vec4((mat2(1.0) * (injectionSwitch)) * mat2(1.0), 0.0, 0.0), clamp(vec4((mat2(1.0) * (injectionSwitch)) * mat2(1.0), 0.0, 0.0), vec4((mat2(1.0) * (injectionSwitch)) * mat2(1.0), 0.0, 0.0), _GLF_IDENTITY(vec4((mat2(1.0) * (injectionSwitch)) * mat2(1.0), 0.0, 0.0), (vec4((mat2(1.0) * (injectionSwitch)) * mat2(1.0), 0.0, 0.0)) / cos(vec4(0.0, 0.0, 0.0, 0.0)))))) - vec4(0.0, 0.0, 0.0, 0.0))), vec2(_GLF_IDENTITY(vec4((mat2(1.0) * (injectionSwitch)) * mat2(1.0), 0.0, 0.0), (vec4((mat2(1.0) * (injectionSwitch)) * mat2(1.0), 0.0, 0.0)) - vec4(0.0, 0.0, 0.0, 0.0)))))), (mat2(1.0) * (_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), injectionSwitch, injectionSwitch)), _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(max(injectionSwitch, injectionSwitch), _GLF_IDENTITY(vec2(mat4x3(_GLF_IDENTITY(max(injectionSwitch, injectionSwitch), max(max(injectionSwitch, injectionSwitch), max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)), injectionSwitch))))), tan(0.0), 0.0, 1.0, 1.0, 0.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0)), (vec2(mat4x3(_GLF_IDENTITY(max(injectionSwitch, injectionSwitch), max(max(injectionSwitch, injectionSwitch), max(injectionSwitch, injectionSwitch))), tan(_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-6.2)), float(_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-1.8)))), bool(true)))), 0.0, 1.0, 1.0, 0.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0))) * vec2(1.0, 1.0))))), mat2(_GLF_ONE(1.0, injectionSwitch.y)) * ((_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(max(injectionSwitch, injectionSwitch), _GLF_IDENTITY(vec2(mat4x3(_GLF_IDENTITY(max(injectionSwitch, injectionSwitch), max(max(injectionSwitch, injectionSwitch), max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)), injectionSwitch))))), tan(0.0), 0.0, 1.0, 1.0, 0.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0)), (vec2(mat4x3(_GLF_IDENTITY(max(injectionSwitch, injectionSwitch), max(max(injectionSwitch, injectionSwitch), max(injectionSwitch, injectionSwitch))), tan(_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-6.2)), float(_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-1.8)))), bool(true)))), 0.0, 1.0, 1.0, 0.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0))) * vec2(1.0, 1.0))))))) + vec2(0.0, 0.0)), injectionSwitch)))) * _GLF_IDENTITY(mat2(1.0), mat2(1.0) * (mat2(1.0))))))), _GLF_IDENTITY((mat2(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0))) - 0.0)) * (injectionSwitch)) * mat2(1.0), clamp((mat2(1.0) * (injectionSwitch)) * mat2(1.0), _GLF_IDENTITY((mat2(1.0) * (injectionSwitch)) * mat2(1.0), _GLF_IDENTITY(vec2(_GLF_IDENTITY(_GLF_IDENTITY(vec4((mat2(1.0) * (injectionSwitch)) * mat2(1.0), 0.0, 0.0), mix(vec4(_GLF_IDENTITY((vec4((mat2(1.0) * (injectionSwitch)) * mat2(1.0), 0.0, 0.0))[0], float(mat4((vec4((mat2(1.0) * (injectionSwitch)) * mat2(1.0), 0.0, 0.0))[0], 0.0, 1.0, 1.0, log(1.0), 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0))), _GLF_FUZZED(80.78), _GLF_FUZZED(5.2), _GLF_FUZZED(996.984)), vec4(_GLF_FUZZED(37.79), (vec4((mat2(1.0) * (injectionSwitch)) * mat2(1.0), 0.0, 0.0))[1], (vec4((mat2(1.0) * (injectionSwitch)) * mat2(1.0), 0.0, 0.0))[2], (vec4((mat2(1.0) * (injectionSwitch)) * mat2(1.0), 0.0, 0.0))[3]), bvec4(false, true, true, true))), _GLF_IDENTITY((vec4((mat2(1.0) * (injectionSwitch)) * mat2(1.0), 0.0, 0.0)) - vec4(0.0, 0.0, 0.0, 0.0), clamp(_GLF_IDENTITY((vec4((mat2(1.0) * (injectionSwitch)) * mat2(1.0), 0.0, 0.0)) - vec4(0.0, 0.0, 0.0, 0.0), clamp((vec4((mat2(1.0) * (injectionSwitch)) * mat2(1.0), 0.0, 0.0)) - vec4(0.0, 0.0, 0.0, 0.0), (vec4((mat2(1.0) * (injectionSwitch)) * mat2(1.0), 0.0, 0.0)) - vec4(0.0, 0.0, 0.0, 0.0), (vec4((mat2(1.0) * (injectionSwitch)) * mat2(1.0), 0.0, 0.0)) - vec4(0.0, 0.0, 0.0, 0.0))), (vec4((mat2(1.0) * (injectionSwitch)) * mat2(1.0), 0.0, 0.0)) - vec4(0.0, 0.0, 0.0, 0.0), (vec4((mat2(1.0) * (injectionSwitch)) * mat2(1.0), 0.0, 0.0)) - vec4(0.0, 0.0, 0.0, 0.0))))), min(vec2(_GLF_IDENTITY(vec4((mat2(1.0) * (injectionSwitch)) * mat2(1.0), 0.0, 0.0), (_GLF_IDENTITY(vec4((mat2(1.0) * (injectionSwitch)) * mat2(1.0), 0.0, 0.0), clamp(vec4((mat2(1.0) * (injectionSwitch)) * mat2(1.0), 0.0, 0.0), vec4((mat2(1.0) * (injectionSwitch)) * mat2(1.0), 0.0, 0.0), _GLF_IDENTITY(vec4((mat2(1.0) * (injectionSwitch)) * mat2(1.0), 0.0, 0.0), (vec4((mat2(1.0) * (injectionSwitch)) * mat2(1.0), 0.0, 0.0)) / cos(vec4(0.0, 0.0, 0.0, 0.0)))))) - vec4(0.0, 0.0, 0.0, 0.0))), vec2(_GLF_IDENTITY(vec4((mat2(1.0) * (injectionSwitch)) * mat2(1.0), 0.0, 0.0), (vec4((mat2(1.0) * (injectionSwitch)) * mat2(1.0), 0.0, 0.0)) - vec4(0.0, 0.0, 0.0, 0.0)))))), (mat2(1.0) * (_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), injectionSwitch, injectionSwitch)), _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(max(injectionSwitch, injectionSwitch), _GLF_IDENTITY(vec2(mat4x3(_GLF_IDENTITY(max(injectionSwitch, injectionSwitch), max(max(injectionSwitch, injectionSwitch), max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)), injectionSwitch))))), tan(0.0), 0.0, 1.0, 1.0, 0.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0)), (vec2(mat4x3(_GLF_IDENTITY(max(injectionSwitch, injectionSwitch), max(max(injectionSwitch, injectionSwitch), max(injectionSwitch, injectionSwitch))), tan(_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-6.2)), float(_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-1.8)))), bool(true)))), 0.0, 1.0, 1.0, 0.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0))) * vec2(1.0, 1.0))))), mat2(_GLF_ONE(1.0, injectionSwitch.y)) * ((_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(max(injectionSwitch, injectionSwitch), _GLF_IDENTITY(vec2(mat4x3(_GLF_IDENTITY(max(injectionSwitch, injectionSwitch), max(max(injectionSwitch, injectionSwitch), max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)), injectionSwitch))))), tan(0.0), 0.0, 1.0, 1.0, 0.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0)), (vec2(mat4x3(_GLF_IDENTITY(max(injectionSwitch, injectionSwitch), max(max(injectionSwitch, injectionSwitch), max(injectionSwitch, injectionSwitch))), tan(_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-6.2)), float(_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-1.8)))), bool(true)))), 0.0, 1.0, 1.0, 0.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0))) * vec2(1.0, 1.0))))))) + vec2(0.0, 0.0)), injectionSwitch)))) * _GLF_IDENTITY(mat2(1.0), mat2(1.0) * (mat2(1.0))))), _GLF_IDENTITY((mat2(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0))) - 0.0)) * (injectionSwitch)) * mat2(1.0), clamp((mat2(1.0) * (injectionSwitch)) * mat2(1.0), _GLF_IDENTITY((mat2(1.0) * (injectionSwitch)) * mat2(1.0), _GLF_IDENTITY(vec2(_GLF_IDENTITY(_GLF_IDENTITY(vec4((mat2(1.0) * (injectionSwitch)) * mat2(1.0), 0.0, 0.0), mix(vec4(_GLF_IDENTITY((vec4((mat2(1.0) * (injectionSwitch)) * mat2(1.0), 0.0, 0.0))[0], float(mat4((vec4((mat2(1.0) * (injectionSwitch)) * mat2(1.0), 0.0, 0.0))[0], 0.0, 1.0, 1.0, log(1.0), 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0))), _GLF_FUZZED(80.78), _GLF_FUZZED(5.2), _GLF_FUZZED(996.984)), vec4(_GLF_FUZZED(37.79), (vec4((mat2(1.0) * (injectionSwitch)) * mat2(1.0), 0.0, 0.0))[1], (vec4((mat2(1.0) * (injectionSwitch)) * mat2(1.0), 0.0, 0.0))[2], (vec4((mat2(1.0) * (injectionSwitch)) * mat2(1.0), 0.0, 0.0))[3]), bvec4(false, true, true, true))), _GLF_IDENTITY((vec4((mat2(1.0) * (injectionSwitch)) * mat2(1.0), 0.0, 0.0)) - vec4(0.0, 0.0, 0.0, 0.0), clamp(_GLF_IDENTITY((vec4((mat2(1.0) * (injectionSwitch)) * mat2(1.0), 0.0, 0.0)) - vec4(0.0, 0.0, 0.0, 0.0), clamp((vec4((mat2(1.0) * (injectionSwitch)) * mat2(1.0), 0.0, 0.0)) - vec4(0.0, 0.0, 0.0, 0.0), (vec4((mat2(1.0) * (injectionSwitch)) * mat2(1.0), 0.0, 0.0)) - vec4(0.0, 0.0, 0.0, 0.0), (vec4((mat2(1.0) * (injectionSwitch)) * mat2(1.0), 0.0, 0.0)) - vec4(0.0, 0.0, 0.0, 0.0))), (vec4((mat2(1.0) * (injectionSwitch)) * mat2(1.0), 0.0, 0.0)) - vec4(0.0, 0.0, 0.0, 0.0), (vec4((mat2(1.0) * (injectionSwitch)) * mat2(1.0), 0.0, 0.0)) - vec4(0.0, 0.0, 0.0, 0.0))))), min(vec2(_GLF_IDENTITY(vec4((mat2(1.0) * (injectionSwitch)) * mat2(1.0), 0.0, 0.0), (_GLF_IDENTITY(vec4((mat2(1.0) * (injectionSwitch)) * mat2(1.0), 0.0, 0.0), clamp(vec4((mat2(1.0) * (injectionSwitch)) * mat2(1.0), 0.0, 0.0), vec4((mat2(1.0) * (injectionSwitch)) * mat2(1.0), 0.0, 0.0), _GLF_IDENTITY(vec4((mat2(1.0) * (injectionSwitch)) * mat2(1.0), 0.0, 0.0), (vec4((mat2(1.0) * (injectionSwitch)) * mat2(1.0), 0.0, 0.0)) / cos(vec4(0.0, 0.0, 0.0, 0.0)))))) - vec4(0.0, 0.0, 0.0, 0.0))), vec2(_GLF_IDENTITY(vec4((mat2(1.0) * (injectionSwitch)) * mat2(1.0), 0.0, 0.0), (vec4((mat2(1.0) * (injectionSwitch)) * mat2(1.0), 0.0, 0.0)) - vec4(0.0, 0.0, 0.0, 0.0)))))), (mat2(1.0) * (_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), injectionSwitch, injectionSwitch)), _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(max(injectionSwitch, injectionSwitch), _GLF_IDENTITY(vec2(mat4x3(_GLF_IDENTITY(max(injectionSwitch, injectionSwitch), max(max(injectionSwitch, injectionSwitch), max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)), injectionSwitch))))), tan(0.0), 0.0, 1.0, 1.0, 0.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0)), (vec2(mat4x3(_GLF_IDENTITY(max(injectionSwitch, injectionSwitch), max(max(injectionSwitch, injectionSwitch), max(injectionSwitch, injectionSwitch))), tan(_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-6.2)), float(_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-1.8)))), bool(true)))), 0.0, 1.0, 1.0, 0.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0))) * vec2(1.0, 1.0))))), mat2(_GLF_ONE(1.0, injectionSwitch.y)) * ((_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(max(injectionSwitch, injectionSwitch), _GLF_IDENTITY(vec2(mat4x3(_GLF_IDENTITY(max(injectionSwitch, injectionSwitch), max(max(injectionSwitch, injectionSwitch), max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)), injectionSwitch))))), tan(0.0), 0.0, 1.0, 1.0, 0.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0)), (vec2(mat4x3(_GLF_IDENTITY(max(injectionSwitch, injectionSwitch), max(max(injectionSwitch, injectionSwitch), max(injectionSwitch, injectionSwitch))), tan(_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-6.2)), float(_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-1.8)))), bool(true)))), 0.0, 1.0, 1.0, 0.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0))) * vec2(1.0, 1.0))))))) + vec2(0.0, 0.0)), injectionSwitch)))) * _GLF_IDENTITY(mat2(1.0), mat2(1.0) * (mat2(1.0))))))))).y), ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * _GLF_IDENTITY((injectionSwitch), max(_GLF_IDENTITY((injectionSwitch), max((injectionSwitch), (injectionSwitch))), _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(452.415)), vec2(_GLF_IDENTITY(_GLF_FUZZED(954.306), (false ? _GLF_FUZZED(4.1) : _GLF_FUZZED(954.306))), (injectionSwitch)[1]), bvec2(false, true)))), vec2(1.0, 1.0) * ((_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(452.415)), vec2(_GLF_IDENTITY(_GLF_FUZZED(954.306), (false ? _GLF_FUZZED(4.1) : _GLF_FUZZED(954.306))), (injectionSwitch)[1]), bvec2(false, true)))))))), _GLF_IDENTITY(_GLF_IDENTITY((mat2(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0))) - 0.0)) * (injectionSwitch)) * mat2(1.0), clamp((mat2(1.0) * (injectionSwitch)) * mat2(1.0), _GLF_IDENTITY((mat2(1.0) * (injectionSwitch)) * mat2(1.0), _GLF_IDENTITY(vec2(_GLF_IDENTITY(_GLF_IDENTITY(vec4((mat2(1.0) * (injectionSwitch)) * mat2(1.0), 0.0, 0.0), mix(vec4(_GLF_IDENTITY((vec4((mat2(1.0) * (injectionSwitch)) * mat2(1.0), 0.0, 0.0))[0], float(mat4((vec4((mat2(1.0) * (injectionSwitch)) * mat2(1.0), 0.0, 0.0))[0], 0.0, 1.0, 1.0, log(1.0), 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0))), _GLF_FUZZED(80.78), _GLF_FUZZED(5.2), _GLF_FUZZED(996.984)), vec4(_GLF_FUZZED(37.79), (vec4((mat2(1.0) * (injectionSwitch)) * mat2(1.0), 0.0, 0.0))[1], (vec4((mat2(1.0) * (injectionSwitch)) * mat2(1.0), 0.0, 0.0))[2], (vec4((mat2(1.0) * (injectionSwitch)) * mat2(1.0), 0.0, 0.0))[3]), bvec4(false, true, true, true))), _GLF_IDENTITY((vec4((mat2(1.0) * (injectionSwitch)) * mat2(1.0), 0.0, 0.0)) - vec4(0.0, 0.0, 0.0, 0.0), clamp(_GLF_IDENTITY((vec4((mat2(1.0) * (injectionSwitch)) * mat2(1.0), 0.0, 0.0)) - vec4(0.0, 0.0, 0.0, 0.0), clamp((vec4((mat2(1.0) * (injectionSwitch)) * mat2(1.0), 0.0, 0.0)) - vec4(0.0, 0.0, 0.0, 0.0), (vec4((mat2(1.0) * (injectionSwitch)) * mat2(1.0), 0.0, 0.0)) - vec4(0.0, 0.0, 0.0, 0.0), (vec4((mat2(1.0) * (injectionSwitch)) * mat2(1.0), 0.0, 0.0)) - vec4(0.0, 0.0, 0.0, 0.0))), (vec4((mat2(1.0) * (injectionSwitch)) * mat2(1.0), 0.0, 0.0)) - vec4(0.0, 0.0, 0.0, 0.0), (vec4((mat2(1.0) * (injectionSwitch)) * mat2(1.0), 0.0, 0.0)) - vec4(0.0, 0.0, 0.0, 0.0))))), min(vec2(_GLF_IDENTITY(vec4((mat2(1.0) * (injectionSwitch)) * mat2(1.0), 0.0, 0.0), (_GLF_IDENTITY(vec4((mat2(1.0) * (injectionSwitch)) * mat2(1.0), 0.0, 0.0), clamp(vec4((mat2(1.0) * (injectionSwitch)) * mat2(1.0), 0.0, 0.0), vec4((mat2(1.0) * (injectionSwitch)) * mat2(1.0), 0.0, 0.0), _GLF_IDENTITY(vec4((mat2(1.0) * (injectionSwitch)) * mat2(1.0), 0.0, 0.0), (vec4((mat2(1.0) * (injectionSwitch)) * mat2(1.0), 0.0, 0.0)) / cos(vec4(0.0, 0.0, 0.0, 0.0)))))) - vec4(0.0, 0.0, 0.0, 0.0))), vec2(_GLF_IDENTITY(vec4((mat2(1.0) * (injectionSwitch)) * mat2(1.0), 0.0, 0.0), (vec4((mat2(1.0) * (injectionSwitch)) * mat2(1.0), 0.0, 0.0)) - vec4(0.0, 0.0, 0.0, 0.0)))))), (mat2(1.0) * (_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), injectionSwitch, injectionSwitch)), _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(max(injectionSwitch, injectionSwitch), _GLF_IDENTITY(vec2(mat4x3(_GLF_IDENTITY(max(injectionSwitch, injectionSwitch), max(max(injectionSwitch, injectionSwitch), max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)), injectionSwitch))))), tan(0.0), 0.0, 1.0, 1.0, 0.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0)), (vec2(mat4x3(_GLF_IDENTITY(max(injectionSwitch, injectionSwitch), max(max(injectionSwitch, injectionSwitch), max(injectionSwitch, injectionSwitch))), tan(_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-6.2)), float(_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-1.8)))), bool(true)))), 0.0, 1.0, 1.0, 0.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0))) * vec2(1.0, 1.0))))), mat2(_GLF_ONE(1.0, injectionSwitch.y)) * ((_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(max(injectionSwitch, injectionSwitch), _GLF_IDENTITY(vec2(mat4x3(_GLF_IDENTITY(max(injectionSwitch, injectionSwitch), max(max(injectionSwitch, injectionSwitch), max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)), injectionSwitch))))), tan(0.0), 0.0, 1.0, 1.0, 0.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0)), (vec2(mat4x3(_GLF_IDENTITY(max(injectionSwitch, injectionSwitch), max(max(injectionSwitch, injectionSwitch), max(injectionSwitch, injectionSwitch))), tan(_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-6.2)), float(_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-1.8)))), bool(true)))), 0.0, 1.0, 1.0, 0.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0))) * vec2(1.0, 1.0))))))) + vec2(0.0, 0.0)), injectionSwitch)))) * _GLF_IDENTITY(mat2(1.0), mat2(1.0) * (mat2(1.0))))), clamp(_GLF_IDENTITY(_GLF_IDENTITY((mat2(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0))) - 0.0)) * (injectionSwitch)) * mat2(1.0), clamp((mat2(1.0) * (injectionSwitch)) * mat2(1.0), _GLF_IDENTITY((mat2(1.0) * (injectionSwitch)) * mat2(1.0), _GLF_IDENTITY(vec2(_GLF_IDENTITY(_GLF_IDENTITY(vec4((mat2(1.0) * (injectionSwitch)) * mat2(1.0), 0.0, 0.0), mix(vec4(_GLF_IDENTITY((vec4((mat2(1.0) * (injectionSwitch)) * mat2(1.0), 0.0, 0.0))[0], float(mat4((vec4((mat2(1.0) * (injectionSwitch)) * mat2(1.0), 0.0, 0.0))[0], 0.0, 1.0, 1.0, log(1.0), 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0))), _GLF_FUZZED(80.78), _GLF_FUZZED(5.2), _GLF_FUZZED(996.984)), vec4(_GLF_FUZZED(37.79), (vec4((mat2(1.0) * (injectionSwitch)) * mat2(1.0), 0.0, 0.0))[1], (vec4((mat2(1.0) * (injectionSwitch)) * mat2(1.0), 0.0, 0.0))[2], (vec4((mat2(1.0) * (injectionSwitch)) * mat2(1.0), 0.0, 0.0))[3]), bvec4(false, true, true, true))), _GLF_IDENTITY((vec4((mat2(1.0) * (injectionSwitch)) * mat2(1.0), 0.0, 0.0)) - vec4(0.0, 0.0, 0.0, 0.0), clamp(_GLF_IDENTITY((vec4((mat2(1.0) * (injectionSwitch)) * mat2(1.0), 0.0, 0.0)) - vec4(0.0, 0.0, 0.0, 0.0), clamp((vec4((mat2(1.0) * (injectionSwitch)) * mat2(1.0), 0.0, 0.0)) - vec4(0.0, 0.0, 0.0, 0.0), (vec4((mat2(1.0) * (injectionSwitch)) * mat2(1.0), 0.0, 0.0)) - vec4(0.0, 0.0, 0.0, 0.0), (vec4((mat2(1.0) * (injectionSwitch)) * mat2(1.0), 0.0, 0.0)) - vec4(0.0, 0.0, 0.0, 0.0))), (vec4((mat2(1.0) * (injectionSwitch)) * mat2(1.0), 0.0, 0.0)) - vec4(0.0, 0.0, 0.0, 0.0), (vec4((mat2(1.0) * (injectionSwitch)) * mat2(1.0), 0.0, 0.0)) - vec4(0.0, 0.0, 0.0, 0.0))))), min(vec2(_GLF_IDENTITY(vec4((mat2(1.0) * (injectionSwitch)) * mat2(1.0), 0.0, 0.0), (_GLF_IDENTITY(vec4((mat2(1.0) * (injectionSwitch)) * mat2(1.0), 0.0, 0.0), clamp(vec4((mat2(1.0) * (injectionSwitch)) * mat2(1.0), 0.0, 0.0), vec4((mat2(1.0) * (injectionSwitch)) * mat2(1.0), 0.0, 0.0), _GLF_IDENTITY(vec4((mat2(1.0) * (injectionSwitch)) * mat2(1.0), 0.0, 0.0), (vec4((mat2(1.0) * (injectionSwitch)) * mat2(1.0), 0.0, 0.0)) / cos(vec4(0.0, 0.0, 0.0, 0.0)))))) - vec4(0.0, 0.0, 0.0, 0.0))), vec2(_GLF_IDENTITY(vec4((mat2(1.0) * (injectionSwitch)) * mat2(1.0), 0.0, 0.0), (vec4((mat2(1.0) * (injectionSwitch)) * mat2(1.0), 0.0, 0.0)) - vec4(0.0, 0.0, 0.0, 0.0)))))), (mat2(1.0) * (_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), injectionSwitch, injectionSwitch)), _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(max(injectionSwitch, injectionSwitch), _GLF_IDENTITY(vec2(mat4x3(_GLF_IDENTITY(max(injectionSwitch, injectionSwitch), max(max(injectionSwitch, injectionSwitch), max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)), injectionSwitch))))), tan(0.0), 0.0, 1.0, 1.0, 0.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0)), (vec2(mat4x3(_GLF_IDENTITY(max(injectionSwitch, injectionSwitch), max(max(injectionSwitch, injectionSwitch), max(injectionSwitch, injectionSwitch))), tan(_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-6.2)), float(_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-1.8)))), bool(true)))), 0.0, 1.0, 1.0, 0.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0))) * vec2(1.0, 1.0))))), mat2(_GLF_ONE(1.0, injectionSwitch.y)) * ((_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(max(injectionSwitch, injectionSwitch), _GLF_IDENTITY(vec2(mat4x3(_GLF_IDENTITY(max(injectionSwitch, injectionSwitch), max(max(injectionSwitch, injectionSwitch), max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)), injectionSwitch))))), tan(0.0), 0.0, 1.0, 1.0, 0.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0)), (vec2(mat4x3(_GLF_IDENTITY(max(injectionSwitch, injectionSwitch), max(max(injectionSwitch, injectionSwitch), max(injectionSwitch, injectionSwitch))), tan(_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-6.2)), float(_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-1.8)))), bool(true)))), 0.0, 1.0, 1.0, 0.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0))) * vec2(1.0, 1.0))))))) + vec2(0.0, 0.0)), injectionSwitch)))) * _GLF_IDENTITY(mat2(1.0), mat2(1.0) * (mat2(1.0))))), mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (_GLF_IDENTITY((mat2(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0))) - 0.0)) * (injectionSwitch)) * mat2(1.0), clamp((mat2(1.0) * (injectionSwitch)) * mat2(1.0), _GLF_IDENTITY((mat2(1.0) * (injectionSwitch)) * mat2(1.0), _GLF_IDENTITY(vec2(_GLF_IDENTITY(_GLF_IDENTITY(vec4((mat2(1.0) * (injectionSwitch)) * mat2(1.0), 0.0, 0.0), mix(vec4(_GLF_IDENTITY((vec4((mat2(1.0) * (injectionSwitch)) * mat2(1.0), 0.0, 0.0))[0], float(mat4((vec4((mat2(1.0) * (injectionSwitch)) * mat2(1.0), 0.0, 0.0))[0], 0.0, 1.0, 1.0, log(1.0), 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0))), _GLF_FUZZED(80.78), _GLF_FUZZED(5.2), _GLF_FUZZED(996.984)), vec4(_GLF_FUZZED(37.79), (vec4((mat2(1.0) * (injectionSwitch)) * mat2(1.0), 0.0, 0.0))[1], (vec4((mat2(1.0) * (injectionSwitch)) * mat2(1.0), 0.0, 0.0))[2], (vec4((mat2(1.0) * (injectionSwitch)) * mat2(1.0), 0.0, 0.0))[3]), bvec4(false, true, true, true))), _GLF_IDENTITY((vec4((mat2(1.0) * (injectionSwitch)) * mat2(1.0), 0.0, 0.0)) - vec4(0.0, 0.0, 0.0, 0.0), clamp(_GLF_IDENTITY((vec4((mat2(1.0) * (injectionSwitch)) * mat2(1.0), 0.0, 0.0)) - vec4(0.0, 0.0, 0.0, 0.0), clamp((vec4((mat2(1.0) * (injectionSwitch)) * mat2(1.0), 0.0, 0.0)) - vec4(0.0, 0.0, 0.0, 0.0), (vec4((mat2(1.0) * (injectionSwitch)) * mat2(1.0), 0.0, 0.0)) - vec4(0.0, 0.0, 0.0, 0.0), (vec4((mat2(1.0) * (injectionSwitch)) * mat2(1.0), 0.0, 0.0)) - vec4(0.0, 0.0, 0.0, 0.0))), (vec4((mat2(1.0) * (injectionSwitch)) * mat2(1.0), 0.0, 0.0)) - vec4(0.0, 0.0, 0.0, 0.0), (vec4((mat2(1.0) * (injectionSwitch)) * mat2(1.0), 0.0, 0.0)) - vec4(0.0, 0.0, 0.0, 0.0))))), min(vec2(_GLF_IDENTITY(vec4((mat2(1.0) * (injectionSwitch)) * mat2(1.0), 0.0, 0.0), (_GLF_IDENTITY(vec4((mat2(1.0) * (injectionSwitch)) * mat2(1.0), 0.0, 0.0), clamp(vec4((mat2(1.0) * (injectionSwitch)) * mat2(1.0), 0.0, 0.0), vec4((mat2(1.0) * (injectionSwitch)) * mat2(1.0), 0.0, 0.0), _GLF_IDENTITY(vec4((mat2(1.0) * (injectionSwitch)) * mat2(1.0), 0.0, 0.0), (vec4((mat2(1.0) * (injectionSwitch)) * mat2(1.0), 0.0, 0.0)) / cos(vec4(0.0, 0.0, 0.0, 0.0)))))) - vec4(0.0, 0.0, 0.0, 0.0))), vec2(_GLF_IDENTITY(vec4((mat2(1.0) * (injectionSwitch)) * mat2(1.0), 0.0, 0.0), (vec4((mat2(1.0) * (injectionSwitch)) * mat2(1.0), 0.0, 0.0)) - vec4(0.0, 0.0, 0.0, 0.0)))))), (mat2(1.0) * (_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), injectionSwitch, injectionSwitch)), _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(max(injectionSwitch, injectionSwitch), _GLF_IDENTITY(vec2(mat4x3(_GLF_IDENTITY(max(injectionSwitch, injectionSwitch), max(max(injectionSwitch, injectionSwitch), max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)), injectionSwitch))))), tan(0.0), 0.0, 1.0, 1.0, 0.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0)), (vec2(mat4x3(_GLF_IDENTITY(max(injectionSwitch, injectionSwitch), max(max(injectionSwitch, injectionSwitch), max(injectionSwitch, injectionSwitch))), tan(_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-6.2)), float(_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-1.8)))), bool(true)))), 0.0, 1.0, 1.0, 0.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0))) * vec2(1.0, 1.0))))), mat2(_GLF_ONE(1.0, injectionSwitch.y)) * ((_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(max(injectionSwitch, injectionSwitch), _GLF_IDENTITY(vec2(mat4x3(_GLF_IDENTITY(max(injectionSwitch, injectionSwitch), max(max(injectionSwitch, injectionSwitch), max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)), injectionSwitch))))), tan(0.0), 0.0, 1.0, 1.0, 0.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0)), (vec2(mat4x3(_GLF_IDENTITY(max(injectionSwitch, injectionSwitch), max(max(injectionSwitch, injectionSwitch), max(injectionSwitch, injectionSwitch))), tan(_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-6.2)), float(_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-1.8)))), bool(true)))), 0.0, 1.0, 1.0, 0.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0))) * vec2(1.0, 1.0))))))) + vec2(0.0, 0.0)), injectionSwitch)))) * _GLF_IDENTITY(mat2(1.0), mat2(1.0) * (mat2(1.0))))))), _GLF_IDENTITY((mat2(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0))) - 0.0)) * (injectionSwitch)) * mat2(1.0), clamp((mat2(1.0) * (injectionSwitch)) * mat2(1.0), _GLF_IDENTITY((mat2(1.0) * (injectionSwitch)) * mat2(1.0), _GLF_IDENTITY(vec2(_GLF_IDENTITY(_GLF_IDENTITY(vec4((mat2(1.0) * (injectionSwitch)) * mat2(1.0), 0.0, 0.0), mix(vec4(_GLF_IDENTITY((vec4((mat2(1.0) * (injectionSwitch)) * mat2(1.0), 0.0, 0.0))[0], float(mat4((vec4((mat2(1.0) * (injectionSwitch)) * mat2(1.0), 0.0, 0.0))[0], 0.0, 1.0, 1.0, log(1.0), 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0))), _GLF_FUZZED(80.78), _GLF_FUZZED(5.2), _GLF_FUZZED(996.984)), vec4(_GLF_FUZZED(37.79), (vec4((mat2(1.0) * (injectionSwitch)) * mat2(1.0), 0.0, 0.0))[1], (vec4((mat2(1.0) * (injectionSwitch)) * mat2(1.0), 0.0, 0.0))[2], (vec4((mat2(1.0) * (injectionSwitch)) * mat2(1.0), 0.0, 0.0))[3]), bvec4(false, true, true, true))), _GLF_IDENTITY((vec4((mat2(1.0) * (injectionSwitch)) * mat2(1.0), 0.0, 0.0)) - vec4(0.0, 0.0, 0.0, 0.0), clamp(_GLF_IDENTITY((vec4((mat2(1.0) * (injectionSwitch)) * mat2(1.0), 0.0, 0.0)) - vec4(0.0, 0.0, 0.0, 0.0), clamp((vec4((mat2(1.0) * (injectionSwitch)) * mat2(1.0), 0.0, 0.0)) - vec4(0.0, 0.0, 0.0, 0.0), (vec4((mat2(1.0) * (injectionSwitch)) * mat2(1.0), 0.0, 0.0)) - vec4(0.0, 0.0, 0.0, 0.0), (vec4((mat2(1.0) * (injectionSwitch)) * mat2(1.0), 0.0, 0.0)) - vec4(0.0, 0.0, 0.0, 0.0))), (vec4((mat2(1.0) * (injectionSwitch)) * mat2(1.0), 0.0, 0.0)) - vec4(0.0, 0.0, 0.0, 0.0), (vec4((mat2(1.0) * (injectionSwitch)) * mat2(1.0), 0.0, 0.0)) - vec4(0.0, 0.0, 0.0, 0.0))))), min(vec2(_GLF_IDENTITY(vec4((mat2(1.0) * (injectionSwitch)) * mat2(1.0), 0.0, 0.0), (_GLF_IDENTITY(vec4((mat2(1.0) * (injectionSwitch)) * mat2(1.0), 0.0, 0.0), clamp(vec4((mat2(1.0) * (injectionSwitch)) * mat2(1.0), 0.0, 0.0), vec4((mat2(1.0) * (injectionSwitch)) * mat2(1.0), 0.0, 0.0), _GLF_IDENTITY(vec4((mat2(1.0) * (injectionSwitch)) * mat2(1.0), 0.0, 0.0), (vec4((mat2(1.0) * (injectionSwitch)) * mat2(1.0), 0.0, 0.0)) / cos(vec4(0.0, 0.0, 0.0, 0.0)))))) - vec4(0.0, 0.0, 0.0, 0.0))), vec2(_GLF_IDENTITY(vec4((mat2(1.0) * (injectionSwitch)) * mat2(1.0), 0.0, 0.0), (vec4((mat2(1.0) * (injectionSwitch)) * mat2(1.0), 0.0, 0.0)) - vec4(0.0, 0.0, 0.0, 0.0)))))), (mat2(1.0) * (_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), injectionSwitch, injectionSwitch)), _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(max(injectionSwitch, injectionSwitch), _GLF_IDENTITY(vec2(mat4x3(_GLF_IDENTITY(max(injectionSwitch, injectionSwitch), max(max(injectionSwitch, injectionSwitch), max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)), injectionSwitch))))), tan(0.0), 0.0, 1.0, 1.0, 0.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0)), (vec2(mat4x3(_GLF_IDENTITY(max(injectionSwitch, injectionSwitch), max(max(injectionSwitch, injectionSwitch), max(injectionSwitch, injectionSwitch))), tan(_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-6.2)), float(_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-1.8)))), bool(true)))), 0.0, 1.0, 1.0, 0.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0))) * vec2(1.0, 1.0))))), mat2(_GLF_ONE(1.0, injectionSwitch.y)) * ((_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(max(injectionSwitch, injectionSwitch), _GLF_IDENTITY(vec2(mat4x3(_GLF_IDENTITY(max(injectionSwitch, injectionSwitch), max(max(injectionSwitch, injectionSwitch), max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)), injectionSwitch))))), tan(0.0), 0.0, 1.0, 1.0, 0.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0)), (vec2(mat4x3(_GLF_IDENTITY(max(injectionSwitch, injectionSwitch), max(max(injectionSwitch, injectionSwitch), max(injectionSwitch, injectionSwitch))), tan(_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-6.2)), float(_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-1.8)))), bool(true)))), 0.0, 1.0, 1.0, 0.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0))) * vec2(1.0, 1.0))))))) + vec2(0.0, 0.0)), injectionSwitch)))) * _GLF_IDENTITY(mat2(1.0), mat2(1.0) * (mat2(1.0))))), _GLF_IDENTITY((mat2(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0))) - 0.0)) * (injectionSwitch)) * mat2(1.0), clamp((mat2(1.0) * (injectionSwitch)) * mat2(1.0), _GLF_IDENTITY((mat2(1.0) * (injectionSwitch)) * mat2(1.0), _GLF_IDENTITY(vec2(_GLF_IDENTITY(_GLF_IDENTITY(vec4((mat2(1.0) * (injectionSwitch)) * mat2(1.0), 0.0, 0.0), mix(vec4(_GLF_IDENTITY((vec4((mat2(1.0) * (injectionSwitch)) * mat2(1.0), 0.0, 0.0))[0], float(mat4((vec4((mat2(1.0) * (injectionSwitch)) * mat2(1.0), 0.0, 0.0))[0], 0.0, 1.0, 1.0, log(1.0), 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0))), _GLF_FUZZED(80.78), _GLF_FUZZED(5.2), _GLF_FUZZED(996.984)), vec4(_GLF_FUZZED(37.79), (vec4((mat2(1.0) * (injectionSwitch)) * mat2(1.0), 0.0, 0.0))[1], (vec4((mat2(1.0) * (injectionSwitch)) * mat2(1.0), 0.0, 0.0))[2], (vec4((mat2(1.0) * (injectionSwitch)) * mat2(1.0), 0.0, 0.0))[3]), bvec4(false, true, true, true))), _GLF_IDENTITY((vec4((mat2(1.0) * (injectionSwitch)) * mat2(1.0), 0.0, 0.0)) - vec4(0.0, 0.0, 0.0, 0.0), clamp(_GLF_IDENTITY((vec4((mat2(1.0) * (injectionSwitch)) * mat2(1.0), 0.0, 0.0)) - vec4(0.0, 0.0, 0.0, 0.0), clamp((vec4((mat2(1.0) * (injectionSwitch)) * mat2(1.0), 0.0, 0.0)) - vec4(0.0, 0.0, 0.0, 0.0), (vec4((mat2(1.0) * (injectionSwitch)) * mat2(1.0), 0.0, 0.0)) - vec4(0.0, 0.0, 0.0, 0.0), (vec4((mat2(1.0) * (injectionSwitch)) * mat2(1.0), 0.0, 0.0)) - vec4(0.0, 0.0, 0.0, 0.0))), (vec4((mat2(1.0) * (injectionSwitch)) * mat2(1.0), 0.0, 0.0)) - vec4(0.0, 0.0, 0.0, 0.0), (vec4((mat2(1.0) * (injectionSwitch)) * mat2(1.0), 0.0, 0.0)) - vec4(0.0, 0.0, 0.0, 0.0))))), min(vec2(_GLF_IDENTITY(vec4((mat2(1.0) * (injectionSwitch)) * mat2(1.0), 0.0, 0.0), (_GLF_IDENTITY(vec4((mat2(1.0) * (injectionSwitch)) * mat2(1.0), 0.0, 0.0), clamp(vec4((mat2(1.0) * (injectionSwitch)) * mat2(1.0), 0.0, 0.0), vec4((mat2(1.0) * (injectionSwitch)) * mat2(1.0), 0.0, 0.0), _GLF_IDENTITY(vec4((mat2(1.0) * (injectionSwitch)) * mat2(1.0), 0.0, 0.0), (vec4((mat2(1.0) * (injectionSwitch)) * mat2(1.0), 0.0, 0.0)) / cos(vec4(0.0, 0.0, 0.0, 0.0)))))) - vec4(0.0, 0.0, 0.0, 0.0))), vec2(_GLF_IDENTITY(vec4((mat2(1.0) * (injectionSwitch)) * mat2(1.0), 0.0, 0.0), (vec4((mat2(1.0) * (injectionSwitch)) * mat2(1.0), 0.0, 0.0)) - vec4(0.0, 0.0, 0.0, 0.0)))))), (mat2(1.0) * (_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), injectionSwitch, injectionSwitch)), _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(max(injectionSwitch, injectionSwitch), _GLF_IDENTITY(vec2(mat4x3(_GLF_IDENTITY(max(injectionSwitch, injectionSwitch), max(max(injectionSwitch, injectionSwitch), max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)), injectionSwitch))))), tan(0.0), 0.0, 1.0, 1.0, 0.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0)), (vec2(mat4x3(_GLF_IDENTITY(max(injectionSwitch, injectionSwitch), max(max(injectionSwitch, injectionSwitch), max(injectionSwitch, injectionSwitch))), tan(_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-6.2)), float(_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-1.8)))), bool(true)))), 0.0, 1.0, 1.0, 0.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0))) * vec2(1.0, 1.0))))), mat2(_GLF_ONE(1.0, injectionSwitch.y)) * ((_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(max(injectionSwitch, injectionSwitch), _GLF_IDENTITY(vec2(mat4x3(_GLF_IDENTITY(max(injectionSwitch, injectionSwitch), max(max(injectionSwitch, injectionSwitch), max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)), injectionSwitch))))), tan(0.0), 0.0, 1.0, 1.0, 0.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0)), (vec2(mat4x3(_GLF_IDENTITY(max(injectionSwitch, injectionSwitch), max(max(injectionSwitch, injectionSwitch), max(injectionSwitch, injectionSwitch))), tan(_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-6.2)), float(_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-1.8)))), bool(true)))), 0.0, 1.0, 1.0, 0.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0))) * vec2(1.0, 1.0))))))) + vec2(0.0, 0.0)), injectionSwitch)))) * _GLF_IDENTITY(mat2(1.0), mat2(1.0) * (mat2(1.0))))))))).y)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, false)))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(1.0)), bool(false)))))))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(degrees((uvec2(69912u, 198461u) , vec2(250.528, 127.616)))) : _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(7.9), _GLF_FUZZED(-6266.8172)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))))).x > injectionSwitch.y))))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec3(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false, true))), true, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), bool(bvec2(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true)))))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       barrier();
      }
     return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(false, (false) || false), false)), ! (_GLF_IDENTITY(! (bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, (false) || false), false), bvec2(bvec3(bvec2(_GLF_IDENTITY(false, (false) || false), false), true))))), bool(bvec4(_GLF_IDENTITY(! (bool(bvec2(_GLF_IDENTITY(false, (false) || false), false))), (! (bool(bvec2(_GLF_IDENTITY(false, (false) || false), false)))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), true, true, false)))))), ! (_GLF_IDENTITY(! (false), true && (! (false))))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(false, (false) || false), false)), ! (_GLF_IDENTITY(! (bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, (false) || false), false), bvec2(bvec3(bvec2(_GLF_IDENTITY(false, (false) || false), false), true))))), bool(bvec4(_GLF_IDENTITY(! (bool(bvec2(_GLF_IDENTITY(false, (false) || false), false))), (! (bool(bvec2(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, true && (false))) || false)) || false), false)))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), true, true, false)))))), ! (_GLF_IDENTITY(! (false), true && (! (false))))))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, false || _GLF_IDENTITY((false), ((false)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))
        return;
       barrier();
      }
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(false))
      barrier();
    }
   return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, false, false), bvec3(bvec3(bvec3(false, false, false))))))))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), ! (_GLF_IDENTITY(! ((_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), bool(bool(_GLF_IDENTITY(! ((_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (! ((_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))))))))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, false || _GLF_IDENTITY((false), ((false)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), _GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, ! (! (false))))), true)))))
  return;
 atomicStore(buf[next_virtual_gid], uint(_GLF_IDENTITY(read_1, clamp(_GLF_IDENTITY(read_1, (false ? _GLF_IDENTITY(_GLF_FUZZED(virtual_gid), ~ (~ (_GLF_FUZZED(virtual_gid)))) : read_1)), _GLF_IDENTITY(read_1, (read_1) | _GLF_IDENTITY((read_1), ((read_1)) - 0u)), read_1)) + 1), 4, 64, 4);
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, (false) && true), true, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(bvec2(false, false))))))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)))).x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
        {
         if(_GLF_DEAD(false))
          return;
         return;
        }
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(false))
          barrier();
         return;
        }
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(5.6) : injectionSwitch.y))))))
        return;
       if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(-1780.2606) : injectionSwitch.y)), injectionSwitch.y))))))
        {
         if(_GLF_DEAD(false))
          return;
         barrier();
        }
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       return;
       if(_GLF_DEAD(false))
        return;
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(_GLF_IDENTITY(vec3(injectionSwitch.y, 0.0, _GLF_ZERO(0.0, injectionSwitch.x)), mix(vec3((vec3(injectionSwitch.y, 0.0, _GLF_ZERO(0.0, injectionSwitch.x)))[0], _GLF_FUZZED(-7.3), _GLF_FUZZED(9.3)), vec3(_GLF_FUZZED(vec2(-429.346, 713.694).s), (vec3(injectionSwitch.y, 0.0, _GLF_ZERO(0.0, injectionSwitch.x)))[1], (vec3(injectionSwitch.y, 0.0, _GLF_ZERO(0.0, injectionSwitch.x)))[2]), bvec3(false, true, true)))))))))
      return;
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bool(injectionSwitch.x > injectionSwitch.y)))))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         return;
        }
       barrier();
      }
     return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       return;
      }
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), (injectionSwitch) * mat2(1.0)).x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(_GLF_IDENTITY(_GLF_IDENTITY(float(injectionSwitch.y), mix(float(float(injectionSwitch.y)), float(_GLF_FUZZED(8.6)), bool(false))), max(_GLF_IDENTITY(float(injectionSwitch.y), mix(float(float(injectionSwitch.y)), float(_GLF_FUZZED(8.6)), bool(false))), _GLF_IDENTITY(_GLF_IDENTITY(float(injectionSwitch.y), mix(float(float(injectionSwitch.y)), float(_GLF_FUZZED(8.6)), bool(false))), min(_GLF_IDENTITY(float(injectionSwitch.y), mix(float(float(injectionSwitch.y)), float(_GLF_FUZZED(8.6)), bool(false))), _GLF_IDENTITY(float(injectionSwitch.y), mix(float(float(injectionSwitch.y)), float(_GLF_FUZZED(8.6)), bool(false))))))), _GLF_IDENTITY(float(_GLF_FUZZED(vec4(-4.1, -6.2, 460.438, 9.5).t)), (float(_GLF_FUZZED(vec4(-4.1, -6.2, 460.438, 9.5).t))) - determinant(mat4(0.0, length(vec3(0.0, 0.0, 0.0)), 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 0.0, 0.0))), _GLF_IDENTITY(bool(false), bool(bvec3(bool(false), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
    barrier();
   return;
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))
  barrier();
 if(_GLF_DEAD(false))
  return;
}
