#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


struct _GLF_struct_5 {
 bvec2 _f0;
 vec4 _f1;
 uint subgroup_size;
 bvec4 _f2;
 uvec3 _f3;
 uint _f4;
} ;

struct _GLF_struct_4 {
 ivec2 _f0;
 mat4 _f1;
 uvec4 _f2;
 uint _f3;
 mat2x4 _f4;
} ;

struct _GLF_struct_3 {
 uvec4 _f0;
 mat3x4 _f1;
 bvec2 _f2;
} ;

struct _GLF_struct_6 {
 _GLF_struct_3 _f0;
 mat4x2 _f1;
 _GLF_struct_4 _f2;
 _GLF_struct_5 _f3;
 mat4x3 _f4;
} ;

struct _GLF_struct_2 {
 bool _f0;
 mat3x2 _f1;
 mat2x3 _f2;
 mat2x4 _f3;
 mat4 _f4;
} ;

struct _GLF_struct_0 {
 mat2 _f0;
 bvec4 _f1;
 mat4x3 _f2;
 ivec2 _f3;
} ;

struct _GLF_struct_1 {
 vec2 _f0;
 _GLF_struct_0 _f1;
} ;

struct _GLF_struct_7 {
 _GLF_struct_1 _f0;
 _GLF_struct_2 _f1;
 uvec3 _f2;
 mat2 _f3;
 bvec4 _f4;
 mat3x2 _f5;
 _GLF_struct_6 _f6;
} ;

layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, (true ? _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0))) - log(vec2(1.0, 1.0))).y : _GLF_FUZZED(-23.96)))) / _GLF_IDENTITY(dot(vec3(0.0, _GLF_IDENTITY(dot(vec2(0.0, 0.0), vec2(1.0, 1.0)), dot(vec2(0.0, 0.0), _GLF_IDENTITY(vec2(1.0, 1.0), vec2(_GLF_IDENTITY(vec3(_GLF_IDENTITY(vec2(1.0, 1.0), (vec2(1.0, 1.0)) / sqrt(vec2(1.0, 1.0))), 0.0), (vec3(_GLF_IDENTITY(vec2(1.0, 1.0), (vec2(1.0, 1.0)) / sqrt(vec2(1.0, 1.0))), 0.0)) * mat3(1.0)))))), _GLF_ONE(1.0, injectionSwitch.y)), vec3(0.0, 0.0, 1.0)), _GLF_IDENTITY(dot(vec3(0.0, _GLF_IDENTITY(dot(vec2(0.0, 0.0), vec2(1.0, 1.0)), dot(vec2(0.0, 0.0), vec2(1.0, 1.0))), _GLF_ONE(1.0, injectionSwitch.y)), vec3(0.0, 0.0, 1.0)), (dot(vec3(0.0, _GLF_IDENTITY(dot(vec2(0.0, 0.0), vec2(1.0, 1.0)), dot(vec2(0.0, 0.0), vec2(1.0, 1.0))), _GLF_ONE(1.0, injectionSwitch.y)), vec3(0.0, 0.0, 1.0))) - 0.0)))))))
    barrier();
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(63.77))) > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(false))
  barrier();
 _GLF_struct_7 _GLF_struct_replacement_7 = _GLF_struct_7(_GLF_struct_1(vec2(1.0), _GLF_struct_0(mat2(1.0), bvec4(_GLF_IDENTITY(true, bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), _GLF_IDENTITY(! (! (! (true))), ! (_GLF_IDENTITY(! (! (! (! (true)))), bool(bvec2(! (! (! (! (true)))), true)))))))), _GLF_IDENTITY(bool(bool(true)), (bool(bool(_GLF_IDENTITY(true, bool(bvec2(true, true)))))) || _GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(false || (false), (false || (false)) || false)), bool(bvec4(_GLF_IDENTITY(false, false || (false)), true, _GLF_IDENTITY(false, (false) && true), false))))), false, false, false)))), mat4x3(1.0), ivec2(1))), _GLF_struct_2(_GLF_IDENTITY(_GLF_IDENTITY(true, false || (true)), ! (! (_GLF_IDENTITY(true, _GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, bool(bvec3(false, false, false))))))), bool(bvec2(! (_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, bool(bvec3(false, false, false))))))), false))))) || (_GLF_IDENTITY(true, (true) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), mat3x2(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-0.0)), float(1.0), bool(true)))), mat2x3(1.0), mat2x4(1.0), mat4(_GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, _GLF_IDENTITY(max(_GLF_IDENTITY(1.0, (_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (! (injectionSwitch.x < injectionSwitch.y))))) ? 1.0 : _GLF_IDENTITY(_GLF_FUZZED(-5.9), max(_GLF_IDENTITY(_GLF_FUZZED(-5.9), min(_GLF_FUZZED(-5.9), _GLF_FUZZED(-5.9))), _GLF_FUZZED(-5.9))))), 1.0), max(max(_GLF_IDENTITY(1.0, (_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (! (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y))))) ? 1.0 : _GLF_FUZZED(-5.9))), 1.0), max(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (! (injectionSwitch.x < injectionSwitch.y))))) ? 1.0 : _GLF_FUZZED(-5.9), mix(float(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (! (injectionSwitch.x < injectionSwitch.y))))) ? 1.0 : _GLF_FUZZED(-5.9)), float(_GLF_FUZZED(1.3)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), 1.0)))), 1.0)))), _GLF_IDENTITY(uvec3(1u), _GLF_IDENTITY(max(uvec3(1u), uvec3(1u)), uvec3(uvec4(max(uvec3(1u), uvec3(_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, clamp(1u, _GLF_IDENTITY(1u, max(1u, 1u)), 1u))) - (0u >> _GLF_IDENTITY(uint(0u), uint(0u)))))), 0u)))), _GLF_IDENTITY(mat2(1.0), (_GLF_IDENTITY(mat2(1.0), (mat2(1.0)) * mat2(1.0))) / mat2(1.0, _GLF_IDENTITY(1.0, 0.0 + (1.0)), 1.0, 1.0)), bvec4(true), mat3x2(1.0), _GLF_struct_6(_GLF_struct_3(uvec4(1u), mat3x4(1.0), bvec2(_GLF_IDENTITY(true, bool(bvec2(true, _GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((false), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY((false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY((false), bool(bvec2((false), false))))), false, false, false)), (bool(bvec4(_GLF_IDENTITY((false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY((false), bool(bvec2((false), false))))), false, false, false))) || false)))))))))))), mat4x2(1.0), _GLF_struct_4(ivec2(1), mat4(1.0), uvec4(1u), 1u, mat2x4(1.0)), _GLF_struct_5(_GLF_IDENTITY(bvec2(true), bvec2(bvec2(_GLF_IDENTITY(bvec2(true), _GLF_IDENTITY(bvec2(bvec3(_GLF_IDENTITY(bvec2(true), bvec2(bvec4(bvec2(true), true, true))), _GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec4(true, false, false, false)), (bool(bvec4(true, false, false, false))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), bvec2(bvec2(bvec2(bvec3(bvec2(true), true))))))))), vec4(1.0), gl_SubgroupSize, bvec4(_GLF_IDENTITY(_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, bool(bvec3(true, false, true)))))), (_GLF_IDENTITY(true, ! (! (true)))) && true)), _GLF_IDENTITY(uvec3(1u), _GLF_IDENTITY(uvec3(0u, 0u, 0u), uvec3(uvec4(uvec3(_GLF_IDENTITY(0u, (0u) | 0u), 0u, 0u), 0u))) | (uvec3(1u))), 1u), mat4x3(1.0)));
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false))))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 uint num_workgroup = gl_NumWorkGroups.x;
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))), (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false))))) || false))
  barrier();
 uint workgroup_size = gl_WorkGroupSize.x;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(6.2)), bool(false))), mix(float(_GLF_FUZZED((- -3.1))), float(injectionSwitch.x), bool(_GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), _GLF_IDENTITY(true, (true) && true) && ((injectionSwitch.x < injectionSwitch.y))))))), clamp(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(mix(float(_GLF_FUZZED((- -3.1))), float(injectionSwitch.x), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), (false ? _GLF_FUZZED(8.3) : mix(float(_GLF_FUZZED((- -3.1))), float(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)).x), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(mix(float(_GLF_IDENTITY(_GLF_FUZZED((- -3.1)), min(_GLF_IDENTITY(_GLF_FUZZED((- -3.1)), min(_GLF_FUZZED((- -3.1)), _GLF_FUZZED((- -3.1)))), _GLF_FUZZED((- -3.1))))), float(injectionSwitch.x), bool(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(47.05), _GLF_FUZZED(-9.9)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true)))) / sqrt(vec2(1.0, 1.0))))).x < injectionSwitch.y)))), (_GLF_IDENTITY(mix(float(_GLF_FUZZED((- -3.1))), float(injectionSwitch.x), bool(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(_GLF_IDENTITY(mat3x2(injectionSwitch.y, 0.0, 1.0, 1.0, 1.0, 0.0), (false ? _GLF_FUZZED(mat3x2(-5447.4358, 4791.5410, -1179.5068, -3.3, -2.2, -941.666)) : mat3x2(injectionSwitch.y, 0.0, 1.0, 1.0, 1.0, 0.0)))), min(float(_GLF_IDENTITY(mat3x2(injectionSwitch.y, 0.0, 1.0, 1.0, 1.0, 0.0), (false ? _GLF_FUZZED(mat3x2(-5447.4358, 4791.5410, -1179.5068, -3.3, -2.2, -941.666)) : mat3x2(injectionSwitch.y, 0.0, 1.0, 1.0, 1.0, 0.0)))), float(_GLF_IDENTITY(mat3x2(injectionSwitch.y, 0.0, 1.0, 1.0, 1.0, 0.0), (false ? _GLF_FUZZED(mat3x2(-5447.4358, 4791.5410, -1179.5068, -3.3, -2.2, -941.666)) : mat3x2(injectionSwitch.y, 0.0, 1.0, 1.0, 1.0, 0.0))))))))))), mix(_GLF_IDENTITY(float(_GLF_IDENTITY(mix(float(_GLF_FUZZED((- -3.1))), float(injectionSwitch.x), _GLF_IDENTITY(bool(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))), float(_GLF_FUZZED(-7512.6004)), bool(false)))))), ! (_GLF_IDENTITY(! (bool(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))), float(_GLF_FUZZED(-7512.6004)), bool(false))))))), ! (! (! (bool(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))), float(_GLF_FUZZED(-7512.6004)), bool(false))))))))))))), clamp(mix(float(_GLF_FUZZED((- -3.1))), float(injectionSwitch.x), bool(_GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ((injectionSwitch.x < injectionSwitch.y)) && true)))), mix(float(_GLF_FUZZED((- -3.1))), float(injectionSwitch.x), _GLF_IDENTITY(bool(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).y))), ! (! (bool(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).y))))))), mix(float(_GLF_FUZZED((- -3.1))), float(_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(0.5, -9216.6942)))), _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(632.324), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(-75.24)), bvec2(true, false))), injectionSwitch)).x), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), float(mat2(float(_GLF_IDENTITY(mix(float(_GLF_FUZZED((- -3.1))), float(injectionSwitch.x), _GLF_IDENTITY(bool(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))), float(_GLF_FUZZED(-7512.6004)), bool(false)))))), ! (_GLF_IDENTITY(! (bool(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))), float(_GLF_FUZZED(-7512.6004)), bool(false))))))), ! (! (! (bool(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))), float(_GLF_FUZZED(-7512.6004)), bool(false))))))))))))), clamp(mix(float(_GLF_FUZZED((- -3.1))), float(injectionSwitch.x), bool(_GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ((injectionSwitch.x < injectionSwitch.y)) && true)))), mix(float(_GLF_FUZZED((- -3.1))), float(injectionSwitch.x), _GLF_IDENTITY(bool(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).y))), ! (! (bool(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).y))))))), mix(float(_GLF_FUZZED((- -3.1))), float(_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(0.5, -9216.6942)))), _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(632.324), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(-75.24)), bvec2(true, false))), injectionSwitch)).x), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), length(0.0), 1.0, 1.0))), float(_GLF_FUZZED(-789.948)), bool(false)))) / 1.0)), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED((- -3.1))), float(injectionSwitch.x), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), clamp(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(_GLF_IDENTITY((- -3.1), max(_GLF_IDENTITY((- -3.1), float(mat2x4(_GLF_IDENTITY((- -3.1), min((- -3.1), (- -3.1))), 0.0, 0.0, 0.0, 0.0, length(0.0), 1.0, 0.0))), (- -3.1))))), _GLF_IDENTITY(float(injectionSwitch.x), mix(float(float(injectionSwitch.x)), float(_GLF_FUZZED(20.31)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), bool(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0)))))))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - log(1.0)), clamp(injectionSwitch.x, injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x))))) * cos(0.0)), mix(float(_GLF_FUZZED((- -3.1))), float(injectionSwitch.x), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED((- -3.1))), float(injectionSwitch.x), bool(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))))))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED((- -3.1))), float(injectionSwitch.x), _GLF_IDENTITY(bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), ! (! (_GLF_IDENTITY(bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), ! (! (bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))))), float(mat2(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED((- -3.1))), float(injectionSwitch.x), _GLF_IDENTITY(bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), ! (! (_GLF_IDENTITY(bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), ! (! (bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))))), 1.0, 0.0, 1.0))), _GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED((- _GLF_IDENTITY(-3.1, mix(float(_GLF_FUZZED(55.19)), float(_GLF_IDENTITY(-3.1, clamp(_GLF_IDENTITY(-3.1, (-3.1) / 1.0), -3.1, -3.1))), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))), float(injectionSwitch.x), _GLF_IDENTITY(bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), ! (! (_GLF_IDENTITY(bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), true && (bool(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0)) - 0.0) < injectionSwitch.y)))))))))), _GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED((- -3.1))), float(injectionSwitch.x), bool(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, (injectionSwitch.x < injectionSwitch.y) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))))))) * 1.0), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0))) / _GLF_IDENTITY(vec2(1.0, 1.0), (false ? _GLF_FUZZED(atan(injectionSwitch)) : _GLF_IDENTITY(vec2(1.0, 1.0), (false ? _GLF_FUZZED(vec2(132.722, 692.083)) : vec2(1.0, 1.0)))))).x, mix(float(_GLF_FUZZED((- -3.1))), float(injectionSwitch.x), bool(_GLF_TRUE(_GLF_IDENTITY(_GLF_IDENTITY(true, true && (true)), ! (! (_GLF_IDENTITY(true, true && (true))))), (injectionSwitch.x < injectionSwitch.y))))))) > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(-9526.6540)), bool(false))))), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED((- -3.1))), float(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))).x), bool(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(mat2x4(injectionSwitch, 1.0, 1.0, 1.0, _GLF_IDENTITY(dot(vec2(0.0, 0.0), vec2(1.0, 1.0)), dot(vec2(0.0, 0.0), vec2(1.0, 1.0))), 0.0, 1.0))))).y))))), clamp(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED((- -3.1))), _GLF_IDENTITY(float(injectionSwitch.x), min(float(injectionSwitch.x), float(injectionSwitch.x))), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(_GLF_FUZZED((- -3.1)), max(_GLF_FUZZED((_GLF_IDENTITY(- -3.1, _GLF_IDENTITY(float(mat3x2(- -3.1, 0.0, 0.0, log(1.0), 1.0, 1.0)), mix(float(_GLF_FUZZED(-51.84)), float(float(mat3x2(- -3.1, 0.0, 0.0, log(1.0), 1.0, 1.0))), bool(true)))))), _GLF_FUZZED((- -3.1))))), _GLF_IDENTITY(float(injectionSwitch.x), (float(injectionSwitch.x)) * _GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, mix(float(_GLF_IDENTITY(1.0, (1.0) / 1.0)), float(_GLF_FUZZED(-11.00)), bool(false))), 1.0))), bool(_GLF_TRUE(true, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch))) * vec2(1.0, 1.0)), max(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), injectionSwitch)).x < injectionSwitch.y))))), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(_GLF_FUZZED((- -3.1)), mix(float(_GLF_FUZZED(_GLF_IDENTITY(-5.2, 1.0 * (_GLF_IDENTITY(-5.2, 0.0 + (_GLF_IDENTITY(-5.2, (-5.2) - 0.0))))))), float(_GLF_IDENTITY(_GLF_FUZZED((- _GLF_IDENTITY(-3.1, mix(float(_GLF_FUZZED(-1.7)), float(-3.1), bool(true))))), (_GLF_IDENTITY(_GLF_FUZZED((- _GLF_IDENTITY(-3.1, (_GLF_IDENTITY(-3.1, min(-3.1, -3.1))) + _GLF_ZERO(0.0, injectionSwitch.x)))), (true ? _GLF_FUZZED(_GLF_IDENTITY((- _GLF_IDENTITY(-3.1, max(-3.1, _GLF_IDENTITY(-3.1, float(float(-3.1)))))), (true ? _GLF_IDENTITY((- -3.1), mix(float(_GLF_FUZZED(2.4)), float((- -3.1)), bool(true))) : _GLF_FUZZED(_GLF_IDENTITY(roundEven(-941.447), max(roundEven(-941.447), _GLF_IDENTITY(roundEven(-941.447), min(roundEven(-941.447), roundEven(-941.447))))))))) : _GLF_FUZZED(-4271.0023)))) - 0.0)), bool(true)))), float(injectionSwitch.x), bool(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).x < injectionSwitch.y))))), _GLF_IDENTITY(clamp(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED((- -3.1))), float(injectionSwitch.x), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), _GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(_GLF_FUZZED((- -3.1)), float(mat3(_GLF_FUZZED((- -3.1)), 0.0, 1.0, 1.0, 0.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 1.0)))), float(injectionSwitch.x), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), _GLF_IDENTITY(injectionSwitch.x, mix(_GLF_IDENTITY(float(_GLF_FUZZED((- -3.1))), max(float(_GLF_FUZZED((- -3.1))), _GLF_IDENTITY(float(_GLF_FUZZED((- -3.1))), clamp(float(_GLF_FUZZED((- -3.1))), _GLF_IDENTITY(float(_GLF_IDENTITY(_GLF_FUZZED((- -3.1)), (_GLF_IDENTITY(_GLF_FUZZED((- -3.1)), (true ? _GLF_FUZZED((- -3.1)) : _GLF_FUZZED(asinh(5.3))))) - 0.0)), (false ? _GLF_FUZZED(-6387.0261) : _GLF_IDENTITY(float(_GLF_IDENTITY(_GLF_FUZZED((- -3.1)), (_GLF_IDENTITY(_GLF_FUZZED((- -3.1)), (true ? _GLF_FUZZED((- -3.1)) : _GLF_FUZZED(asinh(5.3))))) - 0.0)), float(mat2x4(float(_GLF_IDENTITY(_GLF_FUZZED((- -3.1)), (_GLF_IDENTITY(_GLF_FUZZED((- -3.1)), (true ? _GLF_FUZZED((- -3.1)) : _GLF_FUZZED(asinh(5.3))))) - 0.0)), 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0))))), float(_GLF_FUZZED((- -3.1))))))), float(injectionSwitch.x), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), clamp(clamp(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED((- -3.1))), float(injectionSwitch.x), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY((injectionSwitch)[0], float(vec3((injectionSwitch)[0], 1.0, 1.0))), _GLF_FUZZED(5.6)), vec2(_GLF_FUZZED(-75.75), (injectionSwitch)[1]), bvec2(false, true))).x, mix(float(_GLF_IDENTITY(_GLF_FUZZED((- -3.1)), float(mat3(_GLF_FUZZED((- -3.1)), 0.0, 1.0, 1.0, 0.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 1.0)))), _GLF_IDENTITY(float(injectionSwitch.x), clamp(float(injectionSwitch.x), float(injectionSwitch.x), _GLF_IDENTITY(float(injectionSwitch.x), (float(injectionSwitch.x)) + 0.0))), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), _GLF_IDENTITY(injectionSwitch.x, mix(_GLF_IDENTITY(float(_GLF_FUZZED((- -3.1))), max(float(_GLF_FUZZED((- -3.1))), _GLF_IDENTITY(float(_GLF_FUZZED((- -3.1))), clamp(float(_GLF_FUZZED((- -3.1))), float(_GLF_FUZZED((- -3.1))), float(_GLF_FUZZED((- -3.1))))))), float(injectionSwitch.x), bool(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, abs(0.0) + (injectionSwitch.y)))))))), _GLF_IDENTITY(clamp(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED((- _GLF_IDENTITY(-3.1, (false ? _GLF_FUZZED(-8922.6112) : -3.1))))), float(injectionSwitch.x), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), _GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(_GLF_FUZZED((- -3.1)), float(mat3(_GLF_IDENTITY(_GLF_FUZZED((- -3.1)), (true ? _GLF_FUZZED((- -3.1)) : _GLF_FUZZED(determinant(mat4(-2695.2256, -957.577, -6.7, -0.4, -6828.5029, -6.7, 11.11, 8.7, 15.57, -35.15, 660.360, 1.9, -48.91, 4.3, 5867.6378, 446.491))))), 0.0, 1.0, 1.0, 0.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), _GLF_IDENTITY(0.0, min(0.0, 0.0)), 1.0)))), float(injectionSwitch.x), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), _GLF_IDENTITY(injectionSwitch.x, mix(_GLF_IDENTITY(float(_GLF_FUZZED((- -3.1))), max(float(_GLF_FUZZED((- -3.1))), _GLF_IDENTITY(float(_GLF_FUZZED((- -3.1))), clamp(float(_GLF_FUZZED((- -3.1))), float(_GLF_FUZZED((- -3.1))), float(_GLF_FUZZED((- -3.1))))))), float(injectionSwitch.x), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), (false ? _GLF_FUZZED(_GLF_IDENTITY(-9.4, (true ? -9.4 : _GLF_FUZZED(0.9)))) : clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(_GLF_ONE(1.0, injectionSwitch.y))).x, mix(float(_GLF_FUZZED((- -3.1))), _GLF_IDENTITY(float(injectionSwitch.x), round(length(normalize(vec3(1.0, 1.0, 1.0)))) * (float(injectionSwitch.x))), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), _GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(_GLF_FUZZED((- -3.1)), float(mat3(_GLF_FUZZED((- -3.1)), 0.0, _GLF_IDENTITY(1.0, float(vec2(_GLF_IDENTITY(1.0, max(1.0, 1.0)), 0.0))), 1.0, 0.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 1.0)))), float(injectionSwitch.x), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), _GLF_IDENTITY(injectionSwitch.x, mix(_GLF_IDENTITY(float(_GLF_FUZZED((- -3.1))), max(float(_GLF_FUZZED((- -3.1))), _GLF_IDENTITY(_GLF_IDENTITY(float(_GLF_FUZZED((- -3.1))), clamp(float(_GLF_FUZZED((- -3.1))), float(_GLF_FUZZED((- -3.1))), float(_GLF_FUZZED((- -3.1))))), mix(float(_GLF_FUZZED(7.7)), float(_GLF_IDENTITY(float(_GLF_FUZZED((- -3.1))), clamp(float(_GLF_FUZZED((- -3.1))), float(_GLF_FUZZED((- -3.1))), float(_GLF_FUZZED((- -3.1)))))), bool(true))))), float(injectionSwitch.x), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))), clamp(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED((- -3.1))), float(injectionSwitch.x), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), _GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(_GLF_FUZZED((- -3.1)), float(mat3(_GLF_FUZZED((- -3.1)), 0.0, 1.0, 1.0, 0.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 1.0)))), float(injectionSwitch.x), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), _GLF_IDENTITY(injectionSwitch.x, mix(_GLF_IDENTITY(float(_GLF_FUZZED((- -3.1))), max(float(_GLF_FUZZED((- -3.1))), _GLF_IDENTITY(float(_GLF_FUZZED((- -3.1))), clamp(float(_GLF_FUZZED((- -3.1))), float(_GLF_FUZZED((- -3.1))), float(_GLF_FUZZED((- -3.1))))))), float(injectionSwitch.x), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))))) * 1.0), _GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(mix(float(_GLF_FUZZED(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(- -3.1, (- -3.1) * 1.0), min(_GLF_IDENTITY(- -3.1, float(float(- -3.1))), - -3.1))), (false ? _GLF_FUZZED(-1.6) : (_GLF_IDENTITY(- -3.1, min(_GLF_IDENTITY(- -3.1, float(float(_GLF_IDENTITY(- -3.1, clamp(- -3.1, _GLF_IDENTITY(- -3.1, clamp(_GLF_IDENTITY(- -3.1, clamp(- -3.1, - -3.1, - -3.1)), - -3.1, - -3.1)), - -3.1))))), - -3.1))))))), float(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], min(injectionSwitch[1], _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0))[1])))).x), bool(_GLF_TRUE(_GLF_IDENTITY(true, ! (! (true))), (injectionSwitch.x < injectionSwitch.y)))), max(_GLF_IDENTITY(mix(float(_GLF_FUZZED(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(- -3.1, (- -3.1) * 1.0), min(_GLF_IDENTITY(- -3.1, float(float(- -3.1))), - -3.1))), (false ? _GLF_FUZZED(-1.6) : (_GLF_IDENTITY(- -3.1, min(_GLF_IDENTITY(- -3.1, float(float(_GLF_IDENTITY(- -3.1, clamp(- -3.1, _GLF_IDENTITY(- -3.1, clamp(_GLF_IDENTITY(- -3.1, clamp(- -3.1, - -3.1, - -3.1)), - -3.1, - -3.1)), - -3.1))))), - -3.1))))))), float(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], min(injectionSwitch[1], _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0))[1])))).x), bool(_GLF_TRUE(_GLF_IDENTITY(true, ! (! (true))), (injectionSwitch.x < injectionSwitch.y)))), mix(float(mix(float(_GLF_FUZZED(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(- -3.1, (- -3.1) * 1.0), min(_GLF_IDENTITY(- -3.1, float(float(- -3.1))), - -3.1))), (false ? _GLF_FUZZED(-1.6) : (_GLF_IDENTITY(- -3.1, min(_GLF_IDENTITY(- -3.1, float(float(_GLF_IDENTITY(- -3.1, clamp(- -3.1, _GLF_IDENTITY(- -3.1, clamp(_GLF_IDENTITY(- -3.1, clamp(- -3.1, - -3.1, - -3.1)), - -3.1, - -3.1)), - -3.1))))), - -3.1))))))), float(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], min(injectionSwitch[1], _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0))[1])))).x), bool(_GLF_TRUE(_GLF_IDENTITY(true, ! (! (true))), (injectionSwitch.x < injectionSwitch.y))))), float(_GLF_FUZZED(7.7)), bool(false))), mix(float(_GLF_FUZZED(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(- -3.1, (- -3.1) * 1.0), min(_GLF_IDENTITY(- -3.1, float(float(- -3.1))), - -3.1))), (false ? _GLF_FUZZED(-1.6) : (_GLF_IDENTITY(- -3.1, min(_GLF_IDENTITY(- -3.1, float(float(_GLF_IDENTITY(- -3.1, clamp(- -3.1, _GLF_IDENTITY(- -3.1, clamp(_GLF_IDENTITY(- -3.1, clamp(- -3.1, - -3.1, - -3.1)), - -3.1, - -3.1)), - -3.1))))), - -3.1))))))), float(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], min(injectionSwitch[1], _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0))[1])))).x), bool(_GLF_TRUE(_GLF_IDENTITY(true, ! (! (true))), (injectionSwitch.x < injectionSwitch.y))))))))) > injectionSwitch.y) || false)))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, true)))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))), _GLF_IDENTITY(false, ! (! (false))) || (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (! (false)))))))))))), (! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false))))), ! (_GLF_IDENTITY(_GLF_IDENTITY(! ((_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))), bool(_GLF_IDENTITY(bool(! (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bool(_GLF_DEAD(false))), true && (bool(bool(_GLF_DEAD(false)))))))))), bool(bool(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bool(_GLF_DEAD(false))), true && (bool(bool(_GLF_DEAD(false)))))))))), false || ((_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bool(_GLF_DEAD(false))), true && (bool(bool(_GLF_DEAD(false))))))))))))))))), (bool(! ((_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))))) && true))), false || (! _GLF_IDENTITY((_GLF_IDENTITY((_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false))))), ((_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))) && true)), ! (_GLF_IDENTITY(! (((_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false))))))), bool(bool(! (((_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false))))))))))))))))) && true))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(false, (false) || false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)), (bool(bvec3(_GLF_IDENTITY(false, (false) || false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))) && true))))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec3(false, false, false)))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))
      barrier();
     barrier();
    }
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), false || _GLF_IDENTITY((_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, (false) && true))))), ((_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, (false) && true)))))) && true)))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint workgroup_id = gl_WorkGroupID.x;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint workgroup_base = workgroup_size * workgroup_id;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint virtual_gid = workgroup_base + subgroup_id * _GLF_struct_replacement_7._f6._f3.subgroup_size + subgroup_local_id;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (_GLF_IDENTITY(! ((_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y)), _GLF_IDENTITY((! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(-268.189, -1.3)))))).y))), ((! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(-268.189, -1.3)))))).y)))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))) || false)))), ! (! (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), (! ((injectionSwitch.x > injectionSwitch.y))) || false)))))))))), bool(_GLF_IDENTITY(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, false), _GLF_IDENTITY(bvec3(bvec4(bvec3(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bool(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y))))))))))), true, false), true)), bvec3(bvec3(bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, false), bvec3(bvec4(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, false), true))), true))))))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 uint next_virtual_gid = workgroup_base + subgroup_id * _GLF_struct_replacement_7._f6._f3.subgroup_size + ((subgroup_local_id + 1) % _GLF_struct_replacement_7._f6._f3.subgroup_size);
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))), true, false, true)), bool(bvec2(bool(bvec4(injectionSwitch.x > injectionSwitch.y, true, false, true)), false))))))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((_GLF_IDENTITY(false, bool(bvec4(false, false, true, false)))), true && ((_GLF_IDENTITY(false, bool(bvec4(false, false, true, false)))))))), bool(bvec4(_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((_GLF_IDENTITY(false, bool(bvec4(false, false, true, false)))), true && ((_GLF_IDENTITY(false, bool(bvec4(false, false, true, false)))))))), true, false, true))), (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(_GLF_DEAD(false), false, false), bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_DEAD(false), false, false), bvec3(bvec4(bvec3(_GLF_DEAD(false), false, false), false))), true)))), ! (! (bool(_GLF_IDENTITY(bvec3(_GLF_DEAD(false), false, false), bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_DEAD(false), false, false), bvec3(bvec4(bvec3(_GLF_DEAD(false), false, false), false))), true)))))))), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(_GLF_DEAD(false), false, false), bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_DEAD(false), false, false), bvec3(bvec4(bvec3(_GLF_DEAD(false), false, false), false))), true)))), _GLF_IDENTITY(! (! (bool(_GLF_IDENTITY(bvec3(_GLF_DEAD(false), false, false), bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_DEAD(false), false, false), bvec3(bvec4(bvec3(_GLF_DEAD(false), false, false), false))), true)))))), (_GLF_IDENTITY(! (! (bool(_GLF_IDENTITY(bvec3(_GLF_DEAD(false), false, false), bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_DEAD(false), false, false), bvec3(bvec4(bvec3(_GLF_DEAD(false), false, false), false))), true)))))), bool(_GLF_IDENTITY(bool(! (! (bool(_GLF_IDENTITY(bvec3(_GLF_DEAD(false), false, false), bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_DEAD(false), false, false), bvec3(bvec4(bvec3(_GLF_DEAD(false), false, false), false))), true))))))), bool(bvec3(bool(! (! (bool(_GLF_IDENTITY(bvec3(_GLF_DEAD(false), false, false), bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_DEAD(false), false, false), bvec3(bvec4(bvec3(_GLF_DEAD(false), false, false), false))), true))))))), true, true)))))) && true)))))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(_GLF_DEAD(false), false, false), bvec3(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(_GLF_DEAD(false), false, false), bvec3(bvec4(bvec3(_GLF_DEAD(false), false, false), false))), bvec3(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(_GLF_DEAD(false), false, false), bvec3(bvec4(bvec3(_GLF_DEAD(false), false, false), false))), bvec3(bvec3(_GLF_IDENTITY(bvec3(_GLF_DEAD(false), false, false), bvec3(bvec4(bvec3(_GLF_DEAD(false), false, false), false)))))), false))), true)))), ! _GLF_IDENTITY((! (bool(_GLF_IDENTITY(bvec3(_GLF_DEAD(false), false, false), bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_DEAD(false), false, false), bvec3(bvec4(bvec3(_GLF_DEAD(false), false, false), false))), true)))))), bool(bvec2((! (bool(_GLF_IDENTITY(bvec3(_GLF_DEAD(false), false, false), bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_DEAD(false), false, false), bvec3(bvec4(bvec3(_GLF_DEAD(false), false, false), false))), true)))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(_GLF_DEAD(false), false, false), bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_DEAD(false), false, false), bvec3(bvec4(bvec3(_GLF_DEAD(false), false, false), false))), true)))), _GLF_IDENTITY(! (! (bool(_GLF_IDENTITY(bvec3(_GLF_DEAD(false), false, false), bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_DEAD(false), false, false), bvec3(bvec4(bvec3(_GLF_DEAD(false), false, false), false))), true)))))), (_GLF_IDENTITY(! (! (bool(_GLF_IDENTITY(bvec3(_GLF_DEAD(false), false, false), bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_DEAD(false), false, false), bvec3(bvec4(bvec3(_GLF_DEAD(false), false, false), false))), true)))))), bool(_GLF_IDENTITY(bool(! (! (bool(_GLF_IDENTITY(bvec3(_GLF_DEAD(false), false, false), bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_DEAD(false), _GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false), bvec3(bvec4(bvec3(_GLF_DEAD(false), false, false), false))), true))))))), _GLF_IDENTITY(bool(bvec3(bool(! (! (bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false, false), bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_DEAD(false), false, false), bvec3(bvec4(bvec3(_GLF_DEAD(false), false, false), false))), true))))))), true, true)), ! (! (bool(bvec3(bool(! (! (bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false, false), bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_DEAD(false), false, false), bvec3(bvec4(bvec3(_GLF_DEAD(false), false, false), false))), true))))))), true, true))))))))) && true))))))) && true))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), (_GLF_IDENTITY(false, true && (false))) && true), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(false, true && _GLF_IDENTITY((false), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((false), ((false)) && true)), ! (! (! (_GLF_IDENTITY((false), ((false)) && true)))))))), (_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, false || (false))))) && true)), false || (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), _GLF_IDENTITY((_GLF_IDENTITY(false, true && (false))) && true, bool(bool((_GLF_IDENTITY(false, true && (false))) && true))))), (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), ! (! (_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, ! (! (false)))))))), (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), true && (false))) && true))) || _GLF_IDENTITY(false, ! (! (false))))))))))
        return;
       return;
      }
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))
      barrier();
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       return;
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), ! (! (bool(false))))))))), (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  barrier();
 atomicStore(buf[next_virtual_gid], _GLF_IDENTITY(_GLF_IDENTITY(uint(1), clamp(_GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_IDENTITY(1, min(1, 1)), clamp(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, clamp(_GLF_IDENTITY(1, max(1, 1)), _GLF_IDENTITY(1, (1) | (1)), _GLF_IDENTITY(1, 0 + (1))))) | (1)), 1, _GLF_IDENTITY(1, clamp(1, 1, 1))))), (uint(1)) | (uint(1))), _GLF_IDENTITY(uint(1), clamp(uint(1), uint(1), _GLF_IDENTITY(_GLF_IDENTITY(uint(1), (uint(1)) - 0u), ~ (~ _GLF_IDENTITY(_GLF_IDENTITY((uint(1)), ((uint(1))) | ((uint(1)))), min((uint(1)), (uint(1)))))))), uint(_GLF_IDENTITY(_GLF_IDENTITY(1, _GLF_IDENTITY(int(_GLF_IDENTITY(ivec2(1, 0), min(ivec2(1, 0), ivec2(1, 0)))), (int(_GLF_IDENTITY(ivec2(1, 0), min(ivec2(_GLF_IDENTITY(_GLF_IDENTITY(1, ~ (~ (1))), int(ivec4(1, 1, 0, _GLF_IDENTITY(0, (_GLF_IDENTITY(0, max(0, 0))) << 0)))), 0), ivec2(1, 0))))) | (0 | 0))), (_GLF_IDENTITY(1, _GLF_IDENTITY(int(_GLF_IDENTITY(ivec2(1, 0), min(ivec2(_GLF_IDENTITY(1, min(1, _GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(80058))))), 0), ivec2(1, 0)))), (int(_GLF_IDENTITY(_GLF_IDENTITY(ivec2(1, 0), min(ivec2(_GLF_IDENTITY(1, int(ivec4(1, 1, 0, 0))), 0), ivec2(1, 0))), min(_GLF_IDENTITY(ivec2(1, 0), min(ivec2(_GLF_IDENTITY(1, int(ivec4(1, 1, 0, 0))), 0), ivec2(1, 0))), _GLF_IDENTITY(_GLF_IDENTITY(ivec2(1, 0), min(ivec2(_GLF_IDENTITY(1, int(ivec4(1, 1, 0, 0))), 0), ivec2(1, 0))), min(_GLF_IDENTITY(ivec2(1, 0), min(ivec2(_GLF_IDENTITY(1, int(ivec4(1, 1, 0, 0))), 0), ivec2(1, 0))), _GLF_IDENTITY(ivec2(1, 0), min(ivec2(_GLF_IDENTITY(1, int(ivec4(1, 1, 0, 0))), 0), ivec2(1, 0))))))))) | (0 | 0)))) | 0)))), 1u * (_GLF_IDENTITY(uint(1), _GLF_IDENTITY(clamp(uint(_GLF_IDENTITY(1, int(ivec4(_GLF_IDENTITY(1, (1) | 0), 1, 0, 0)))), _GLF_IDENTITY(uint(1), clamp(uint(1), _GLF_IDENTITY(uint(1), (uint(_GLF_IDENTITY(1, (false ? _GLF_FUZZED(1490) : 1)))) << uint(_GLF_ZERO(0.0, injectionSwitch.x))), _GLF_IDENTITY(uint(1), _GLF_IDENTITY(~ (~ _GLF_IDENTITY(_GLF_IDENTITY((uint(1)), clamp(_GLF_IDENTITY((uint(1)), min(_GLF_IDENTITY((uint(1)), clamp(_GLF_IDENTITY((uint(1)), ((uint(1))) / 1u), (uint(1)), _GLF_IDENTITY((uint(1)), ((uint(1))) << 0u))), (uint(1)))), (uint(1)), (uint(1)))), max(_GLF_IDENTITY(_GLF_IDENTITY((uint(1)), clamp(_GLF_IDENTITY((uint(1)), min((uint(1)), (uint(1)))), (uint(1)), (uint(1)))), 1u * (_GLF_IDENTITY((uint(1)), clamp(_GLF_IDENTITY((uint(1)), min((uint(1)), (uint(1)))), (uint(1)), (uint(1)))))), _GLF_IDENTITY((uint(1)), _GLF_IDENTITY(clamp(_GLF_IDENTITY((uint(1)), min((uint(1)), (uint(1)))), (uint(1)), (uint(1))), (true ? clamp(_GLF_IDENTITY((uint(1)), min((uint(1)), (uint(1)))), (uint(1)), (uint(1))) : _GLF_FUZZED(virtual_gid))))))), min(~ (~ _GLF_IDENTITY(_GLF_IDENTITY((uint(1)), clamp(_GLF_IDENTITY((uint(1)), min(_GLF_IDENTITY((uint(1)), clamp(_GLF_IDENTITY((uint(1)), ((uint(1))) / 1u), (uint(1)), _GLF_IDENTITY((uint(1)), ((uint(1))) << 0u))), (uint(1)))), (uint(1)), (uint(1)))), max(_GLF_IDENTITY(_GLF_IDENTITY((uint(1)), clamp(_GLF_IDENTITY((uint(1)), min((uint(1)), (uint(1)))), (uint(1)), (uint(1)))), 1u * (_GLF_IDENTITY((uint(1)), clamp(_GLF_IDENTITY((uint(1)), min((uint(1)), (uint(1)))), (uint(1)), (uint(1)))))), _GLF_IDENTITY((uint(1)), _GLF_IDENTITY(clamp(_GLF_IDENTITY((uint(1)), min((uint(1)), (uint(1)))), (uint(1)), (uint(1))), (true ? clamp(_GLF_IDENTITY((uint(1)), min((uint(1)), (uint(1)))), (uint(1)), (uint(1))) : _GLF_FUZZED(virtual_gid))))))), ~ (~ _GLF_IDENTITY(_GLF_IDENTITY((uint(1)), clamp(_GLF_IDENTITY((uint(1)), min(_GLF_IDENTITY((uint(1)), clamp(_GLF_IDENTITY((uint(1)), ((uint(1))) / 1u), (uint(1)), _GLF_IDENTITY((uint(1)), ((uint(1))) << 0u))), (uint(1)))), (uint(1)), (uint(1)))), max(_GLF_IDENTITY(_GLF_IDENTITY((uint(1)), clamp(_GLF_IDENTITY((uint(1)), min((uint(1)), (uint(1)))), (uint(1)), (uint(1)))), 1u * (_GLF_IDENTITY((uint(1)), clamp(_GLF_IDENTITY((uint(1)), min((uint(1)), (uint(1)))), (uint(1)), (uint(1)))))), _GLF_IDENTITY((uint(1)), _GLF_IDENTITY(clamp(_GLF_IDENTITY((uint(1)), min((uint(1)), (uint(1)))), (uint(1)), (uint(1))), (true ? clamp(_GLF_IDENTITY((uint(1)), min((uint(1)), (uint(1)))), (uint(1)), (uint(1))) : _GLF_FUZZED(virtual_gid)))))))))))), uint(1)), min(clamp(uint(1), _GLF_IDENTITY(uint(1), clamp(uint(1), uint(1), _GLF_IDENTITY(uint(1), ~ (~ _GLF_IDENTITY(_GLF_IDENTITY((uint(1)), ~ (~ (_GLF_IDENTITY((uint(1)), ((uint(1))) - 0u)))), clamp(_GLF_IDENTITY((_GLF_IDENTITY(uint(1), (uint(1)) | (_GLF_IDENTITY(uint(1), (uint(1)) >> 0u)))), min((uint(1)), (uint(1)))), (uint(1)), (uint(1)))))))), uint(1)), _GLF_IDENTITY(clamp(uint(1), _GLF_IDENTITY(uint(1), clamp(uint(1), _GLF_IDENTITY(uint(1), 0u | (_GLF_IDENTITY(uint(1), clamp(uint(1), uint(1), uint(1))))), _GLF_IDENTITY(uint(1), ~ _GLF_IDENTITY((~ _GLF_IDENTITY((uint(1)), clamp(_GLF_IDENTITY((uint(1)), min((uint(1)), (uint(1)))), _GLF_IDENTITY((uint(1)), clamp((uint(1)), (uint(1)), (uint(1)))), (_GLF_IDENTITY(uint(_GLF_IDENTITY(1, (1) >> 0)), (uint(1)) | (_GLF_IDENTITY(_GLF_IDENTITY(uint(1), 0u ^ (_GLF_IDENTITY(_GLF_IDENTITY(uint(1), (uint(1)) - 0u), clamp(_GLF_IDENTITY(_GLF_IDENTITY(uint(1), (uint(1)) - 0u), (true ? _GLF_IDENTITY(uint(1), (uint(1)) - 0u) : _GLF_FUZZED(subgroup_id))), _GLF_IDENTITY(uint(1), (uint(1)) - 0u), _GLF_IDENTITY(_GLF_IDENTITY(uint(1), (uint(1)) - 0u), 1u * (_GLF_IDENTITY(uint(1), (uint(1)) - 0u))))))), min(uint(1), uint(1))))))))), 0u ^ (_GLF_IDENTITY((_GLF_IDENTITY(~ _GLF_IDENTITY((uint(1)), clamp(_GLF_IDENTITY((uint(1)), min((uint(1)), (uint(1)))), (uint(1)), (_GLF_IDENTITY(uint(1), _GLF_IDENTITY((uint(1)), ((uint(1))) | (_GLF_IDENTITY((uint(1)), 0u | ((uint(1)))))) | (_GLF_IDENTITY(uint(1), min(uint(1), uint(1)))))))), (false ? _GLF_FUZZED(workgroup_id) : ~ _GLF_IDENTITY((uint(1)), clamp(_GLF_IDENTITY((uint(1)), min((uint(1)), _GLF_IDENTITY((uint(1)), 0u ^ ((uint(1)))))), (uint(1)), (_GLF_IDENTITY(_GLF_IDENTITY(uint(1), 0u | (uint(1))), (uint(1)) | (_GLF_IDENTITY(uint(1), min(uint(1), uint(1))))))))))), _GLF_IDENTITY(uint(uvec4((~ _GLF_IDENTITY((uint(1)), clamp(_GLF_IDENTITY((uint(1)), min((uint(1)), (uint(1)))), (uint(1)), (_GLF_IDENTITY(uint(_GLF_IDENTITY(1, (1) | 0)), (uint(1)) | (_GLF_IDENTITY(uint(1), min(uint(1), uint(1))))))))), 0u, _GLF_IDENTITY(1u, min(1u, 1u)), 1u)), (_GLF_IDENTITY(uint(uvec4((~ _GLF_IDENTITY((uint(1)), clamp(_GLF_IDENTITY((uint(1)), min((uint(1)), (uint(1)))), (uint(1)), (_GLF_IDENTITY(uint(_GLF_IDENTITY(1, (1) | 0)), (uint(1)) | (_GLF_IDENTITY(uint(1), min(uint(1), uint(1))))))))), 0u, _GLF_IDENTITY(1u, min(1u, 1u)), 1u)), max(uint(uvec4((~ _GLF_IDENTITY((uint(1)), clamp(_GLF_IDENTITY((uint(1)), min((uint(1)), (uint(1)))), (uint(1)), (_GLF_IDENTITY(uint(_GLF_IDENTITY(1, (1) | 0)), (uint(1)) | (_GLF_IDENTITY(uint(1), min(uint(1), uint(1))))))))), 0u, _GLF_IDENTITY(1u, min(1u, 1u)), 1u)), uint(uvec4((~ _GLF_IDENTITY((uint(1)), clamp(_GLF_IDENTITY((uint(1)), min((uint(1)), (uint(1)))), (uint(1)), (_GLF_IDENTITY(uint(_GLF_IDENTITY(1, (1) | 0)), (uint(1)) | (_GLF_IDENTITY(uint(1), min(uint(1), uint(1))))))))), 0u, _GLF_IDENTITY(1u, min(1u, 1u)), 1u))))) << 0u))))))), uint(1)), clamp(clamp(uint(_GLF_IDENTITY(1, int(ivec2(1, 0)))), _GLF_IDENTITY(uint(1), clamp(uint(1), uint(1), _GLF_IDENTITY(uint(_GLF_IDENTITY(1, (1) / 1)), ~ (~ _GLF_IDENTITY(_GLF_IDENTITY((uint(1)), clamp(_GLF_IDENTITY((uint(1)), min((uint(1)), (uint(1)))), (_GLF_IDENTITY(uint(1), (false ? _GLF_IDENTITY(_GLF_FUZZED(workgroup_base), (_GLF_IDENTITY(_GLF_FUZZED(workgroup_base), (_GLF_FUZZED(workgroup_base)) | (_GLF_FUZZED(workgroup_base)))) + 0u) : uint(1)))), _GLF_IDENTITY((uint(1)), ((uint(1))) >> 0u))), min(_GLF_IDENTITY((_GLF_IDENTITY(uint(1), (uint(1)) >> 0u)), clamp(_GLF_IDENTITY((uint(1)), min((uint(1)), (uint(1)))), (_GLF_IDENTITY(uint(1), (false ? _GLF_FUZZED(workgroup_base) : uint(1)))), (uint(1)))), _GLF_IDENTITY(_GLF_IDENTITY((uint(1)), clamp(_GLF_IDENTITY((uint(1)), min((uint(1)), (uint(1)))), _GLF_IDENTITY((_GLF_IDENTITY(uint(1), (false ? _GLF_FUZZED(workgroup_base) : uint(1)))), (_GLF_IDENTITY((_GLF_IDENTITY(uint(1), (false ? _GLF_FUZZED(workgroup_base) : uint(1)))), ((_GLF_IDENTITY(uint(1), (false ? _GLF_FUZZED(workgroup_base) : uint(1))))) | ((_GLF_IDENTITY(uint(1), (false ? _GLF_FUZZED(workgroup_base) : uint(1))))))) >> (0u ^ 0u)), (uint(1)))), min(_GLF_IDENTITY((uint(1)), clamp(_GLF_IDENTITY((uint(1)), min((uint(1)), (uint(1)))), (_GLF_IDENTITY(uint(1), (false ? _GLF_FUZZED(workgroup_base) : uint(1)))), (uint(1)))), _GLF_IDENTITY((uint(1)), clamp(_GLF_IDENTITY((uint(1)), min((_GLF_IDENTITY(uint(1), 0u ^ (uint(1)))), (uint(1)))), (_GLF_IDENTITY(uint(1), (false ? _GLF_FUZZED(workgroup_base) : uint(1)))), (uint(1)))))))))))), uint(1)), clamp(uint(1), _GLF_IDENTITY(uint(_GLF_IDENTITY(1, clamp(_GLF_IDENTITY(1, (1) ^ 0), 1, 1))), clamp(uint(1), uint(1), _GLF_IDENTITY(uint(1), ~ (~ _GLF_IDENTITY((uint(1)), clamp(_GLF_IDENTITY((uint(1)), min((uint(1)), (uint(_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(82681))))))), (uint(1)), _GLF_IDENTITY((uint(1)), uint(_GLF_IDENTITY(_GLF_IDENTITY(uvec4((uint(1)), ((1u << _GLF_IDENTITY(uint(7u), uint(7u))) >> _GLF_IDENTITY(uint(7u), uint(7u))), 0u, 1u), clamp(uvec4((uint(1)), ((1u << _GLF_IDENTITY(uint(7u), uint(7u))) >> _GLF_IDENTITY(uint(7u), uint(7u))), 0u, 1u), uvec4((uint(1)), ((1u << _GLF_IDENTITY(uint(7u), uint(7u))) >> _GLF_IDENTITY(uint(7u), uint(7u))), 0u, 1u), uvec4((uint(1)), ((1u << _GLF_IDENTITY(uint(7u), uint(7u))) >> _GLF_IDENTITY(uint(7u), uint(7u))), 0u, 1u))), (uvec4((uint(1)), ((1u << _GLF_IDENTITY(uint(7u), uint(7u))) >> _GLF_IDENTITY(uint(7u), uint(7u))), 0u, 1u)) * uvec4(1u, 1u, 1u, 1u)))))))))), uint(1)), clamp(uint(_GLF_IDENTITY(1, (1) - 0)), _GLF_IDENTITY(uint(1), clamp(uint(1), uint(1), _GLF_IDENTITY(uint(1), ~ (~ _GLF_IDENTITY((uint(1)), clamp(_GLF_IDENTITY((uint(1)), min((uint(1)), (uint(1)))), (uint(1)), (uint(1)))))))), uint(1))))))))), _GLF_IDENTITY(4, int(int(4))), 64, 4);
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
  barrier();
 uint read_1 = atomicLoad(_GLF_IDENTITY(_GLF_IDENTITY(buf[virtual_gid], uint(uvec2(_GLF_IDENTITY(buf[virtual_gid], (_GLF_IDENTITY(buf[virtual_gid], (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(5.4), _GLF_FUZZED(4.8)), bvec2(false, false))).y)) ? _GLF_FUZZED(subgroup_local_id) : buf[virtual_gid]))) ^ uint(_GLF_ZERO(_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-84.01))), injectionSwitch.x))), 1u))), min(_GLF_IDENTITY(buf[virtual_gid], uint(uvec2(_GLF_IDENTITY(buf[virtual_gid], (_GLF_IDENTITY(buf[virtual_gid], (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(subgroup_local_id) : buf[virtual_gid]))) ^ uint(_GLF_ZERO(_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_IDENTITY(_GLF_FUZZED(-84.01), (_GLF_FUZZED(-84.01)) - 0.0))), injectionSwitch.x))), 1u))), _GLF_IDENTITY(_GLF_IDENTITY(buf[virtual_gid], uint(uvec2(_GLF_IDENTITY(buf[virtual_gid], (_GLF_IDENTITY(_GLF_IDENTITY(buf[virtual_gid], min(buf[virtual_gid], _GLF_IDENTITY(buf[virtual_gid], uint(uvec2(buf[virtual_gid], 1u))))), _GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(subgroup_local_id) : buf[virtual_gid]), uint(_GLF_IDENTITY(uvec3((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(subgroup_local_id) : buf[virtual_gid]), uint(_GLF_ONE(1.0, injectionSwitch.y)), 1u), ~ (~ (uvec3((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(subgroup_local_id) : buf[virtual_gid]), uint(_GLF_ONE(1.0, injectionSwitch.y)), 1u)))))))) ^ uint(_GLF_ZERO(_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-84.01))), injectionSwitch.x))), 1u))), uint(_GLF_ZERO(0.0, injectionSwitch.x)) + (_GLF_IDENTITY(buf[virtual_gid], uint(uvec2(_GLF_IDENTITY(buf[virtual_gid], (_GLF_IDENTITY(_GLF_IDENTITY(buf[virtual_gid], min(buf[virtual_gid], buf[virtual_gid])), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(subgroup_local_id) : buf[virtual_gid]))) ^ uint(_GLF_ZERO(_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-84.01))), injectionSwitch.x))), 1u))))))), 4, _GLF_IDENTITY(_GLF_IDENTITY(64, int(ivec2(_GLF_IDENTITY(64, _GLF_IDENTITY(int(int(64)), (int(int(64))) << 0)), 0))), (_GLF_IDENTITY(_GLF_IDENTITY(64, 0 ^ (64)), 0 ^ (_GLF_IDENTITY(64, 0 ^ (64))))) << 0), 0);
 atomicStore(buf[next_virtual_gid], _GLF_IDENTITY(uint(_GLF_IDENTITY(read_1 + 1, max(_GLF_IDENTITY(read_1 + 1, (read_1 + 1) | (read_1 + 1)), read_1 + _GLF_IDENTITY(1, clamp(1, 1, 1))))), (uint(_GLF_IDENTITY(read_1 + 1, max(_GLF_IDENTITY(read_1 + 1, (read_1 + 1) | (read_1 + 1)), read_1 + _GLF_IDENTITY(1, clamp(1, 1, 1)))))) << (0u >> _GLF_IDENTITY(uint(7u), uint(7u)))), 4, 64, 4);
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-457.231)), float(injectionSwitch.y), bool(true))))), false)))))
  barrier();
 if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))), ! (! (_GLF_DEAD(false)))), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), ! _GLF_IDENTITY((! (_GLF_DEAD(false))), ! (! (_GLF_IDENTITY((! (_GLF_DEAD(false))), ((! (_GLF_DEAD(false)))) || false)))))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec2(_GLF_IDENTITY(bvec3(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))), ! (! (_GLF_DEAD(false)))), ! _GLF_IDENTITY((! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))), (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false))))) && true))), bool(bool((! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))), (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false))))) && true))))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true), bvec3(_GLF_IDENTITY(bvec3(bvec3(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))), ! (! (_GLF_DEAD(false)))), ! _GLF_IDENTITY((! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))), (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false))))) && true))), bool(bool((! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))), (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false))))) && true))))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true)), bvec3(bvec4(bvec3(bvec3(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))), ! (! (_GLF_DEAD(false)))), ! _GLF_IDENTITY((! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))), (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false))))) && true))), bool(bool((! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))), (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false))))) && true))))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true)), false))))))))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y))))))))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y)))))))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), (_GLF_IDENTITY(false, true && (false))) && true))), (bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), (_GLF_IDENTITY(false, true && (false))) && true)))) || false))))))), (bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, true && (false))), (bool(_GLF_IDENTITY(false, true && (false)))) && true))) && true)), true && (false))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED((injectionSwitch + vec2(84.94, 5.8))))))).x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat2(injectionSwitch, _GLF_ONE(1.0, injectionSwitch.y), 0.0)), vec2(1.0, 1.0) * (vec2(mat2(injectionSwitch, _GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), mix(float(_GLF_FUZZED(9.2)), float(_GLF_ONE(1.0, injectionSwitch.y)), bool(true))), 0.0))))).x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)), ! (! (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(vec2(mat2(injectionSwitch, _GLF_ONE(1.0, injectionSwitch.y), 0.0)), _GLF_IDENTITY(vec2(mat4x3(vec2(mat2(injectionSwitch, _GLF_ONE(1.0, injectionSwitch.y), 0.0)), 0.0, 1.0, 0.0, 0.0, 0.0, abs(1.0), 0.0, 0.0, abs(0.0), cos(0.0))), (vec2(mat4x3(vec2(mat2(injectionSwitch, _GLF_ONE(1.0, injectionSwitch.y), 0.0)), 0.0, 1.0, 0.0, 0.0, 0.0, abs(1.0), 0.0, 0.0, abs(0.0), cos(0.0)))) * vec2(1.0, 1.0))), vec2(1.0, 1.0) * _GLF_IDENTITY((vec2(mat2(injectionSwitch, _GLF_ONE(1.0, injectionSwitch.y), 0.0))), max(_GLF_IDENTITY((vec2(mat2(injectionSwitch, _GLF_ONE(1.0, injectionSwitch.y), 0.0))), max((vec2(mat2(injectionSwitch, _GLF_ONE(1.0, injectionSwitch.y), 0.0))), (vec2(mat2(injectionSwitch, _GLF_ONE(1.0, injectionSwitch.y), 0.0))))), (vec2(mat2(injectionSwitch, _GLF_ONE(1.0, injectionSwitch.y), 0.0))))))).x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)))), (_GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, (true ? _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))) + 0.0) : _GLF_FUZZED(5.9))), injectionSwitch.y, injectionSwitch.y))) / 1.0))))) && true)))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))))))
      barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))))) * vec2(1.0, 1.0)).y))))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(mat4x2(injectionSwitch, 1.0, sqrt(1.0), 0.0, 0.0, 0.0, 0.0))).y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
       if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, false || (false)), (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bool((injectionSwitch.x > injectionSwitch.y)))))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(injectionSwitch.g) : injectionSwitch.y))))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     barrier();
    }
   if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_DEAD(false)))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y)), _GLF_IDENTITY(bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)), ! (! (bool(_GLF_IDENTITY(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true), bvec2(bvec3(bvec2(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).y)), true), true))))))))))
    barrier();
   barrier();
  }
}
