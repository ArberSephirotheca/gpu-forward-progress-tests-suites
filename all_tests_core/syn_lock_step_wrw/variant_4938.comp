#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


struct _GLF_struct_29 {
 mat2x3 _f0;
 mat2x3 _f1;
} ;

struct _GLF_struct_28 {
 uvec3 _f0;
 uvec2 _f1;
 mat2x4 _f2;
 mat4x2 _f3;
 mat4x2 _f4;
} ;

struct _GLF_struct_30 {
 _GLF_struct_28 _f0;
 _GLF_struct_29 _f1;
 uint _f2;
} ;

struct _GLF_struct_31 {
 _GLF_struct_30 _f0;
 uint subgroup_size;
} ;

struct _GLF_struct_25 {
 uint _f0;
 int _f1;
 mat3x2 _f2;
 mat2x3 _f3;
} ;

struct _GLF_struct_24 {
 mat3x4 _f0;
 ivec4 _f1;
 float _f2;
 int _f3;
 float _f4;
} ;

struct _GLF_struct_23 {
 mat3x4 _f0;
 mat4 _f1;
} ;

struct _GLF_struct_26 {
 _GLF_struct_23 _f0;
 _GLF_struct_24 _f1;
 _GLF_struct_25 _f2;
} ;

struct _GLF_struct_21 {
 bool _f0;
 mat2x4 _f1;
 vec4 _f2;
 mat2x3 _f3;
 ivec4 _f4;
} ;

struct _GLF_struct_20 {
 vec4 _f0;
 mat4x2 _f1;
 mat4x2 _f2;
 bool _f3;
 bool _f4;
 mat2 _f5;
 mat2x4 _f6;
} ;

struct _GLF_struct_22 {
 _GLF_struct_20 _f0;
 _GLF_struct_21 _f1;
} ;

struct _GLF_struct_27 {
 uint read_1;
 mat3x4 _f0;
 _GLF_struct_22 _f1;
 _GLF_struct_26 _f2;
} ;

struct _GLF_struct_17 {
 ivec3 _f0;
 ivec3 _f1;
} ;

struct _GLF_struct_16 {
 vec3 _f0;
 vec3 _f1;
 int _f2;
 ivec4 _f3;
 mat4x3 _f4;
 mat3 _f5;
 mat4x3 _f6;
} ;

struct _GLF_struct_15 {
 uvec2 _f0;
} ;

struct _GLF_struct_14 {
 mat2x3 _f0;
 vec3 _f1;
 int _f2;
 uint _f3;
 mat3x4 _f4;
} ;

struct _GLF_struct_13 {
 vec3 _f0;
 ivec3 _f1;
 bvec3 _f2;
 bvec4 _f3;
} ;

struct _GLF_struct_18 {
 _GLF_struct_13 _f0;
 _GLF_struct_14 _f1;
 _GLF_struct_15 _f2;
 mat4x2 _f3;
 int _f4;
 _GLF_struct_16 _f5;
 _GLF_struct_17 _f6;
} ;

struct _GLF_struct_11 {
 mat2x3 _f0;
} ;

struct _GLF_struct_10 {
 bvec3 _f0;
} ;

struct _GLF_struct_12 {
 bvec4 _f0;
 _GLF_struct_10 _f1;
 vec3 _f2;
 mat3x4 _f3;
 _GLF_struct_11 _f4;
 bvec3 _f5;
} ;

struct _GLF_struct_8 {
 uvec3 _f0;
 uvec2 _f1;
 mat3x4 _f2;
} ;

struct _GLF_struct_7 {
 mat3 _f0;
 ivec4 _f1;
 int _f2;
 ivec2 _f3;
 mat2x3 _f4;
 uvec4 _f5;
} ;

struct _GLF_struct_6 {
 uvec3 _f0;
 ivec3 _f1;
 ivec4 _f2;
 vec4 _f3;
} ;

struct _GLF_struct_5 {
 ivec2 _f0;
 bvec2 _f1;
 bool _f2;
 uint _f3;
 ivec4 _f4;
} ;

struct _GLF_struct_9 {
 bvec3 _f0;
 _GLF_struct_5 _f1;
 mat2x4 _f2;
 _GLF_struct_6 _f3;
 _GLF_struct_7 _f4;
 _GLF_struct_8 _f5;
} ;

struct _GLF_struct_3 {
 ivec2 _f0;
 int _f1;
 uint num_workgroup;
 bvec3 _f2;
 vec4 _f3;
 mat4x2 _f4;
 vec2 _f5;
 bvec3 _f6;
} ;

struct _GLF_struct_4 {
 _GLF_struct_3 _f0;
} ;

struct _GLF_struct_19 {
 _GLF_struct_4 _f0;
 _GLF_struct_9 _f1;
 _GLF_struct_12 _f2;
 _GLF_struct_18 _f3;
} ;

struct _GLF_struct_0 {
 bvec4 _f0;
 bvec3 _f1;
 vec3 _f2;
} ;

struct _GLF_struct_1 {
 ivec4 _f0;
 mat4x2 _f1;
 _GLF_struct_0 _f2;
 uint workgroup_size;
} ;

struct _GLF_struct_2 {
 int _f0;
 _GLF_struct_1 _f1;
} ;

layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - abs(vec2(0.0, 0.0))).x > _GLF_IDENTITY(injectionSwitch, exp(vec2(0.0, 0.0)) * (injectionSwitch)).y), (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) - abs(vec2(0.0, 0.0)), vec2(_GLF_IDENTITY(mat2x3((injectionSwitch) - abs(vec2(0.0, 0.0)), sqrt(1.0), 1.0, 1.0, 0.0), transpose(transpose(mat2x3((injectionSwitch) - abs(vec2(0.0, 0.0)), sqrt(1.0), 1.0, 1.0, 0.0))))))).x > _GLF_IDENTITY(injectionSwitch, exp(vec2(0.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)))) * (injectionSwitch)).y), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || ((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - _GLF_IDENTITY(abs(vec2(0.0, 0.0)), (abs(vec2(0.0, 0.0))) - sqrt(vec2(0.0, 0.0)))).x > _GLF_IDENTITY(injectionSwitch, exp(vec2(0.0, 0.0)) * _GLF_IDENTITY((injectionSwitch), ((injectionSwitch)) + vec2(0.0, 0.0))).y)))) && true))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), bool(_GLF_IDENTITY(bool((! (false))), ! (! (bool((! (false))))))))))), (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0))) / vec2(1.0, 1.0)).x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bool(false))), (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(vec2(vec2(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch : _GLF_FUZZED(vec2(-4.8, 938.583))), ((_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch : _GLF_FUZZED(vec2(-4.8, 938.583)))) * sqrt(vec2(1.0, 1.0)))))), max(vec2(vec2(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch : _GLF_FUZZED(vec2(-4.8, 938.583))), ((_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(vec4(injectionSwitch, 1.0, 0.0)), mat2(1.0) * (vec2(vec4(injectionSwitch, 1.0, 0.0))))).y)) ? injectionSwitch : _GLF_FUZZED(vec2(-4.8, 938.583)))) * sqrt(vec2(1.0, 1.0)))))), vec2(vec2(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch : _GLF_FUZZED(vec2(-4.8, 938.583))), (_GLF_IDENTITY((_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(vec3(injectionSwitch, 1.0), (false ? _GLF_FUZZED(vec3(7954.9340, injectionSwitch)) : vec3(injectionSwitch, 1.0))))).y)) ? injectionSwitch : _GLF_FUZZED(vec2(-4.8, 938.583))), vec2(_GLF_IDENTITY(vec2(_GLF_IDENTITY((_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(vec3(injectionSwitch, 1.0), (false ? _GLF_FUZZED(vec3(7954.9340, injectionSwitch)) : vec3(injectionSwitch, 1.0))))).y)) ? injectionSwitch : _GLF_FUZZED(vec2(-4.8, 938.583))), min((_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(vec3(injectionSwitch, 1.0), (false ? _GLF_FUZZED(vec3(7954.9340, injectionSwitch)) : vec3(injectionSwitch, 1.0))))).y)) ? injectionSwitch : _GLF_FUZZED(vec2(-4.8, 938.583))), (_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(vec3(injectionSwitch, 1.0), (false ? _GLF_FUZZED(vec3(7954.9340, injectionSwitch)) : vec3(injectionSwitch, 1.0))))).y)) ? injectionSwitch : _GLF_FUZZED(vec2(-4.8, 938.583)))))), max(vec2(_GLF_IDENTITY((_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(vec3(injectionSwitch, 1.0), (false ? _GLF_FUZZED(vec3(7954.9340, injectionSwitch)) : vec3(injectionSwitch, 1.0))))).y)) ? injectionSwitch : _GLF_FUZZED(vec2(-4.8, 938.583))), min((_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(vec3(injectionSwitch, 1.0), (false ? _GLF_FUZZED(vec3(7954.9340, injectionSwitch)) : vec3(injectionSwitch, 1.0))))).y)) ? injectionSwitch : _GLF_FUZZED(vec2(-4.8, 938.583))), (_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(vec3(injectionSwitch, 1.0), (false ? _GLF_FUZZED(vec3(7954.9340, injectionSwitch)) : vec3(injectionSwitch, 1.0))))).y)) ? injectionSwitch : _GLF_FUZZED(vec2(-4.8, 938.583)))))), vec2(_GLF_IDENTITY((_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(vec3(injectionSwitch, 1.0), (false ? _GLF_FUZZED(vec3(7954.9340, injectionSwitch)) : vec3(injectionSwitch, 1.0))))).y)) ? injectionSwitch : _GLF_FUZZED(vec2(-4.8, 938.583))), min((_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(vec3(injectionSwitch, 1.0), (false ? _GLF_FUZZED(vec3(7954.9340, injectionSwitch)) : vec3(injectionSwitch, 1.0))))).y)) ? injectionSwitch : _GLF_FUZZED(vec2(-4.8, 938.583))), (_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(vec3(injectionSwitch, 1.0), (false ? _GLF_FUZZED(vec3(7954.9340, injectionSwitch)) : vec3(injectionSwitch, 1.0))))).y)) ? injectionSwitch : _GLF_FUZZED(vec2(-4.8, 938.583))))))))))) * sqrt(vec2(1.0, 1.0)))))))), vec2(mat2x3(vec2(vec2(_GLF_IDENTITY(injectionSwitch, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch : _GLF_IDENTITY(_GLF_FUZZED(vec2(-4.8, 938.583)), (_GLF_FUZZED(vec2(-4.8, 938.583))) / vec2(1.0, 1.0)))))), 1.0, 0.0, 0.0, 1.0)))).x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))))))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  return;
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  barrier();
 _GLF_struct_31 _GLF_struct_replacement_31 = _GLF_struct_31(_GLF_struct_30(_GLF_struct_28(uvec3(1u), _GLF_IDENTITY(uvec2(_GLF_IDENTITY(1u, uint(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (1u))), (uvec2(1u)) ^ uvec2(0u, 0u)), mat2x4(1.0), mat4x2(1.0), mat4x2(1.0)), _GLF_struct_29(mat2x3(1.0), mat2x3(1.0)), 1u), gl_SubgroupSize);
 if(_GLF_DEAD(false))
  barrier();
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch)), mix(vec2(_GLF_FUZZED((-88.88)), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(vec3(3.9, -6.8, -846.499).g)), bvec2(true, _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)))).x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0), injectionSwitch.x)) > injectionSwitch.y))), _GLF_IDENTITY(bool(bool(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED((-88.88)), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(vec3(3.9, -6.8, -846.499).g)), bvec2(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))).x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x))) / 1.0), injectionSwitch.x)) > injectionSwitch.y))))), bool(bool(_GLF_IDENTITY(bool(bool(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED((-88.88)), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(vec3(3.9, -6.8, -846.499).g)), bvec2(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))).x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0), injectionSwitch.x)) > injectionSwitch.y))))), _GLF_IDENTITY(false || (bool(_GLF_IDENTITY(bool(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED((-88.88)), _GLF_IDENTITY((injectionSwitch), max(_GLF_IDENTITY((injectionSwitch), min(_GLF_IDENTITY((injectionSwitch), min((injectionSwitch), (injectionSwitch))), (injectionSwitch))), (injectionSwitch)))[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(vec3(3.9, -6.8, -846.499).g)), bvec2(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))).x, clamp(_GLF_IDENTITY(injectionSwitch.x, float(vec3(injectionSwitch.x, 0.0, abs(1.0)))), _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0), injectionSwitch.x)) > injectionSwitch.y)))), false || (bool(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED((-88.88)), _GLF_IDENTITY((injectionSwitch), max(_GLF_IDENTITY((injectionSwitch), min(_GLF_IDENTITY((injectionSwitch), min((injectionSwitch), (injectionSwitch))), (injectionSwitch))), (injectionSwitch)))[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(vec3(3.9, -6.8, -846.499).g)), bvec2(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))).x, clamp(_GLF_IDENTITY(injectionSwitch.x, float(vec3(injectionSwitch.x, 0.0, abs(1.0)))), _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0), injectionSwitch.x)) > injectionSwitch.y)))))))), false || (false || (bool(_GLF_IDENTITY(bool(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED((-88.88)), (injectionSwitch)[1]), vec2((_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)))[0], _GLF_FUZZED(vec3(3.9, -6.8, -846.499).g)), bvec2(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))).x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0), injectionSwitch.x)) > injectionSwitch.y)))), false || (bool(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED((-88.88)), (injectionSwitch)[1]), vec2((_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)))[0], _GLF_FUZZED(vec3(3.9, -6.8, -846.499).g)), bvec2(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))).x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0), injectionSwitch.x)) > injectionSwitch.y))))))))))))))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), bool(bool(bool(false))))))))))
    return;
   if(_GLF_DEAD(false))
    barrier();
   return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_DEAD(false), true, true))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).x > injectionSwitch.y))), _GLF_IDENTITY(bool(bvec2(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).x > injectionSwitch.y))), false)), bool(bvec4(bool(bvec2(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).x > injectionSwitch.y))), false)), false, true, false)))))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, false || (false)), true, true)))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   return;
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, false, true)))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  return;
 _GLF_struct_19 _GLF_struct_replacement_19 = _GLF_struct_19(_GLF_struct_4(_GLF_struct_3(ivec2(1), 1, gl_NumWorkGroups.x, bvec3(true), vec4(1.0), mat4x2(1.0), vec2(1.0), bvec3(true))), _GLF_struct_9(bvec3(true), _GLF_struct_5(ivec2(1), _GLF_IDENTITY(bvec2(true), bvec2(bvec2(bvec2(true)))), true, 1u, ivec4(_GLF_IDENTITY(1, _GLF_IDENTITY((1), _GLF_IDENTITY(int(ivec2((1), 0)), (int(ivec2((1), 0))) / 1)) | (1)))), mat2x4(1.0), _GLF_struct_6(uvec3(1u), _GLF_IDENTITY(ivec3(1), ivec3(ivec4(ivec3(1), (((1 << _GLF_IDENTITY(int(7), int(7))) >> _GLF_IDENTITY(int(7), int(7))) & 1)))), ivec4(1), vec4(1.0)), _GLF_struct_7(mat3(1.0), ivec4(1), 1, ivec2(_GLF_IDENTITY(1, clamp(1, 1, 1))), mat2x3(1.0), uvec4(_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, min(_GLF_IDENTITY(_GLF_IDENTITY(1u, (false ? _GLF_FUZZED(subgroup_local_id) : 1u)), ~ (~ (1u))), 1u))) << 0u))), _GLF_struct_8(uvec3(1u), _GLF_IDENTITY(uvec2(1u), (_GLF_IDENTITY(uvec2(1u), min(uvec2(1u), uvec2(1u)))) << uvec2(_GLF_IDENTITY(0u, uint(uvec3(0u, (1u ^ 0u), 1u))), 0u)), mat3x4(1.0))), _GLF_struct_12(bvec4(true), _GLF_struct_10(bvec3(true)), vec3(1.0), mat3x4(1.0), _GLF_struct_11(mat2x3(1.0)), _GLF_IDENTITY(bvec3(_GLF_IDENTITY(true, bool(bvec2(true, false)))), bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(true, bool(bvec2(true, false)))), _GLF_IDENTITY(bvec3(bvec4(bvec3(_GLF_IDENTITY(true, bool(bvec2(true, false)))), true)), bvec3(bvec4(bvec3(bvec4(bvec3(_GLF_IDENTITY(true, bool(bvec2(true, false)))), true)), false)))), true)))), _GLF_struct_18(_GLF_struct_13(vec3(1.0), ivec3(1), bvec3(true), bvec4(_GLF_IDENTITY(true, (true) && true))), _GLF_struct_14(mat2x3(_GLF_IDENTITY(1.0, 1.0 * (1.0))), _GLF_IDENTITY(vec3(1.0), (vec3(1.0)) * mat3(1.0)), _GLF_IDENTITY(1, _GLF_IDENTITY((1), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(3290) : (1))) << 0), 1u, mat3x4(1.0)), _GLF_struct_15(uvec2(1u)), mat4x2(1.0), 1, _GLF_struct_16(vec3(1.0), vec3(_GLF_IDENTITY(_GLF_IDENTITY(1.0, float(_GLF_IDENTITY(vec3(_GLF_IDENTITY(1.0, (1.0) + 0.0), 0.0, 1.0), max(vec3(_GLF_IDENTITY(1.0, (1.0) + 0.0), 0.0, 1.0), vec3(_GLF_IDENTITY(1.0, (1.0) + 0.0), 0.0, 1.0))))), (_GLF_IDENTITY(1.0, float(_GLF_IDENTITY(vec3(_GLF_IDENTITY(1.0, (1.0) + 0.0), 0.0, 1.0), max(vec3(_GLF_IDENTITY(1.0, (1.0) + 0.0), 0.0, 1.0), vec3(_GLF_IDENTITY(1.0, (1.0) + 0.0), 0.0, 1.0)))))) * 1.0)), 1, ivec4(1), mat4x3(1.0), mat3(1.0), mat4x3(1.0)), _GLF_struct_17(_GLF_IDENTITY(ivec3(1), (ivec3(1)) + ivec3(0, _GLF_IDENTITY(0, (false ? _GLF_FUZZED((+ -90253)) : 0)), 0)), ivec3(1))));
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_DEAD(false))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(float(injectionSwitch.y)))))))
      barrier();
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > injectionSwitch.y)), _GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(bool(bool((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), ! (! (bool(bool((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))) && true), _GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true), ! (! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)), ! (! (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)), false || ((_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true))))))))), false, true), bvec3(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true), ! (! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)), ! (! (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)), false || ((_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true))))))))), false, true), bvec3(bvec4(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true), ! (! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)), ! (! (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)), false || ((_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true))))))))), false, true), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))), bvec3(bvec4(bvec3(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, (false) || false))), (injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec4(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! _GLF_IDENTITY((! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (! ((! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), true, false, true)))) && true), false, true), false)))), bool(bvec4(bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat2(injectionSwitch, 1.0, 0.0)), clamp(vec2(mat2(injectionSwitch, 1.0, 0.0)), vec2(mat2(injectionSwitch, 1.0, 0.0)), vec2(mat2(injectionSwitch, 1.0, 0.0))))).y)), (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bool(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))))))))))) && _GLF_IDENTITY(true, bool(bvec4(true, true, false, false)))), false, true), bvec3(bvec4(bvec3(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(bool(false)))))), (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec3(false, true, false)))) && true), (injectionSwitch.x > injectionSwitch.y))) && true), false, _GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(true, bool(bvec4(true, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))), false, true)), ! (! (bool(bvec3(_GLF_IDENTITY(true, bool(bvec4(true, _GLF_IDENTITY(false, true && (false)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))), false, true))))))), false)))), true, true, false))))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))
  {
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 _GLF_struct_2 _GLF_struct_replacement_2 = _GLF_struct_2(1, _GLF_struct_1(ivec4(_GLF_IDENTITY(_GLF_IDENTITY(1, (1) - 0), 0 ^ (_GLF_IDENTITY(_GLF_IDENTITY(1, (1) - 0), (_GLF_IDENTITY(1, (1) - 0)) >> 0)))), mat4x2(1.0), _GLF_struct_0(bvec4(true), bvec3(true), vec3(1.0)), _GLF_IDENTITY(gl_WorkGroupSize.x, 0u | (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) * 1u), min(gl_WorkGroupSize.x, _GLF_IDENTITY(gl_WorkGroupSize.x, (_GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) - 0u)) | (gl_WorkGroupSize.x))))))));
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       return;
      }
     if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
      }
     barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
    }
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false)))
    barrier();
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   barrier();
  }
 uint workgroup_id = gl_WorkGroupID.x;
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  return;
 uint workgroup_base = _GLF_IDENTITY(_GLF_struct_replacement_2._f1.workgroup_size, _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, 0u ^ (0u))) | 0u) ^ (_GLF_struct_replacement_2._f1.workgroup_size)) * workgroup_id;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 uint virtual_gid = _GLF_IDENTITY(workgroup_base + subgroup_id * _GLF_struct_replacement_31.subgroup_size, uint(_GLF_IDENTITY(uvec2(workgroup_base + subgroup_id * _GLF_struct_replacement_31.subgroup_size, 1u), (uvec2(workgroup_base + subgroup_id * _GLF_struct_replacement_31.subgroup_size, 1u)) + uvec2(0u, 0u)))) + subgroup_local_id;
 if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))), true && (_GLF_DEAD(false)))) && true))
  barrier();
 if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), false, _GLF_IDENTITY(true, true && (true)), true))), bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false), bool(bvec4(_GLF_DEAD(false), false, _GLF_IDENTITY(true, true && _GLF_IDENTITY((true), ((true)) && true)), true))), _GLF_IDENTITY(true, (true) || false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))))
  return;
 if(_GLF_DEAD(false))
  barrier();
 uint next_virtual_gid = workgroup_base + subgroup_id * _GLF_struct_replacement_31.subgroup_size + ((subgroup_local_id + 1) % _GLF_struct_replacement_31.subgroup_size);
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false))))
  barrier();
 atomicStore(buf[next_virtual_gid], uint(1), 4, 64, 4);
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false)) || false)))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, 1.0 * (injectionSwitch.y)))), bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, 1.0 * (injectionSwitch.y)))), true))), true && (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-8479.1468), _GLF_FUZZED(-59.50)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(_GLF_IDENTITY(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(true, true && (true)))), true)))) / vec2(1.0, 1.0)), injectionSwitch)).y)), ! (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec3(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false, true))))), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-8479.1468), _GLF_FUZZED(-59.50)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(_GLF_IDENTITY(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(true, true && (true)))), true)))) / vec2(1.0, 1.0)), injectionSwitch)).y)), ! (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec3(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false, true))))), false, true, false)), (_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-8479.1468), _GLF_FUZZED(-59.50)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(_GLF_IDENTITY(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(true, true && (true)))), true)))) / vec2(1.0, 1.0)), injectionSwitch)).y)), ! (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec3(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false, true))))), false, true, false)), false || (bool(bvec4(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-8479.1468), _GLF_FUZZED(-59.50)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(_GLF_IDENTITY(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(true, true && (true)))), true)))) / vec2(1.0, 1.0)), injectionSwitch)).y)), ! (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec3(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false, true))))), false, true, false))))) && true))))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 _GLF_struct_27 _GLF_struct_replacement_27 = _GLF_struct_27(atomicLoad(buf[_GLF_IDENTITY(virtual_gid, min(_GLF_IDENTITY(virtual_gid, uint(uint(virtual_gid))), virtual_gid))], 4, _GLF_IDENTITY(64, _GLF_IDENTITY((64) | (_GLF_IDENTITY(64, min(64, 64))), (1 ^ 1) ^ (_GLF_IDENTITY((64) | (_GLF_IDENTITY(64, min(64, 64))), max((64) | (_GLF_IDENTITY(64, min(64, 64))), (64) | (_GLF_IDENTITY(64, min(64, 64)))))))), 0), mat3x4(1.0), _GLF_struct_22(_GLF_struct_20(vec4(1.0), mat4x2(1.0), mat4x2(1.0), true, true, mat2(1.0), mat2x4(1.0)), _GLF_struct_21(true, mat2x4(1.0), _GLF_IDENTITY(vec4(1.0), min(_GLF_IDENTITY(vec4(1.0), max(_GLF_IDENTITY(vec4(1.0), max(vec4(1.0), vec4(1.0))), vec4(1.0))), vec4(1.0))), mat2x3(1.0), _GLF_IDENTITY(ivec4(1), min(ivec4(1), ivec4(1))))), _GLF_struct_26(_GLF_struct_23(mat3x4(1.0), mat4(1.0)), _GLF_struct_24(mat3x4(1.0), ivec4(1), _GLF_IDENTITY(1.0, _GLF_IDENTITY(float(_GLF_IDENTITY(mat4x3(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), 1.0, 0.0, 1.0, 1.0, 1.0, _GLF_IDENTITY(_GLF_IDENTITY(dot(vec4(1.0, 0.0, abs(1.0), 1.0), vec4(0.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0)), dot(vec4(1.0, 0.0, abs(1.0), 1.0), vec4(0.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0))), mix(float(_GLF_FUZZED(9.3)), float(_GLF_IDENTITY(dot(vec4(1.0, 0.0, abs(1.0), 1.0), vec4(0.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0)), dot(vec4(1.0, 0.0, abs(1.0), 1.0), vec4(0.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0)))), bool(true))), 0.0, 1.0, determinant(mat3(0.0, 0.0, 0.0, _GLF_IDENTITY(_GLF_IDENTITY(dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(1.0, 1.0, 1.0, 0.0)), (dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(1.0, 1.0, 1.0, _GLF_IDENTITY(0.0, (0.0) - _GLF_IDENTITY(dot(vec3(0.0, 0.0, 0.0), vec3(1.0, 1.0, 1.0)), dot(vec3(0.0, 0.0, 0.0), vec3(1.0, 1.0, 1.0))))))) / 1.0), dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(1.0, 1.0, 1.0, 0.0))), 0.0, 0.0, 0.0, 0.0, 0.0)), 1.0, 0.0), (mat4x3(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), 1.0, 0.0, 1.0, 1.0, 1.0, _GLF_IDENTITY(dot(vec4(1.0, 0.0, abs(1.0), 1.0), vec4(0.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0)), dot(vec4(1.0, 0.0, abs(1.0), 1.0), vec4(0.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0))), 0.0, 1.0, determinant(mat3(0.0, 0.0, 0.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(1.0, 1.0, 1.0, 0.0)), dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(1.0, 1.0, 1.0, 0.0))), 0.0, 0.0, 0.0, 0.0, 0.0)), 1.0, 0.0)) * mat4(1.0))), _GLF_IDENTITY((true ? float(_GLF_IDENTITY(mat4x3(_GLF_IDENTITY(_GLF_IDENTITY(1.0, min(1.0, _GLF_IDENTITY(1.0, float(mat4x3(_GLF_IDENTITY(1.0, 1.0 * (1.0)), 1.0, 1.0, 1.0, 0.0, 1.0, determinant(mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0)), 0.0, 1.0, 1.0, 0.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0)))))))), clamp(1.0, 1.0, 1.0)), 1.0, _GLF_IDENTITY(0.0, 1.0 * (0.0)), 1.0, 1.0, 1.0, _GLF_IDENTITY(dot(vec4(1.0, 0.0, abs(1.0), 1.0), vec4(0.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0)), dot(vec4(1.0, 0.0, abs(1.0), 1.0), vec4(0.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0))), 0.0, 1.0, determinant(mat3(0.0, 0.0, 0.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(4.0)), float(0.0), bool(true))), 1.0), vec4(1.0, 1.0, 1.0, 0.0)), dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(1.0, 1.0, 1.0, 0.0))), 0.0, 0.0, 0.0, 0.0, 0.0)), 1.0, 0.0), (mat4x3(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), 1.0, 0.0, 1.0, 1.0, 1.0, _GLF_IDENTITY(dot(vec4(1.0, 0.0, abs(1.0), 1.0), vec4(0.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0)), dot(vec4(1.0, 0.0, _GLF_IDENTITY(abs(1.0), (abs(1.0)) * determinant(mat3(1.0, determinant(mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0)), 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0))), 1.0), vec4(0.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0))), 0.0, 1.0, determinant(mat3(0.0, 0.0, 0.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(1.0, 1.0, 1.0, 0.0)), dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(1.0, 1.0, 1.0, 0.0))), 0.0, 0.0, 0.0, 0.0, 0.0)), 1.0, 0.0)) * mat4(1.0))) : _GLF_FUZZED(-846.964)), ((true ? float(_GLF_IDENTITY(mat4x3(_GLF_IDENTITY(_GLF_IDENTITY(1.0, min(1.0, _GLF_IDENTITY(1.0, float(mat4x3(_GLF_IDENTITY(1.0, 1.0 * (1.0)), 1.0, 1.0, 1.0, 0.0, 1.0, determinant(mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0)), 0.0, 1.0, 1.0, 0.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0)))))))), clamp(1.0, 1.0, 1.0)), 1.0, _GLF_IDENTITY(0.0, 1.0 * (0.0)), 1.0, 1.0, 1.0, _GLF_IDENTITY(dot(vec4(1.0, 0.0, abs(1.0), 1.0), vec4(0.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0)), dot(vec4(1.0, 0.0, abs(1.0), 1.0), vec4(0.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0))), 0.0, 1.0, determinant(mat3(0.0, 0.0, 0.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(4.0)), float(0.0), bool(true))), 1.0), vec4(1.0, 1.0, 1.0, 0.0)), dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(1.0, 1.0, 1.0, 0.0))), 0.0, 0.0, 0.0, 0.0, 0.0)), 1.0, 0.0), (mat4x3(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), 1.0, 0.0, 1.0, 1.0, 1.0, _GLF_IDENTITY(dot(vec4(1.0, 0.0, abs(1.0), 1.0), vec4(0.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0)), dot(vec4(1.0, 0.0, _GLF_IDENTITY(abs(1.0), (abs(1.0)) * determinant(mat3(1.0, determinant(mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0)), 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0))), 1.0), vec4(0.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0))), 0.0, 1.0, determinant(mat3(0.0, 0.0, 0.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(1.0, 1.0, 1.0, 0.0)), dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(1.0, 1.0, 1.0, 0.0))), 0.0, 0.0, 0.0, 0.0, 0.0)), 1.0, 0.0)) * mat4(1.0))) : _GLF_FUZZED(-846.964))) * 1.0))), 1, 1.0), _GLF_struct_25(1u, _GLF_IDENTITY(1, _GLF_IDENTITY(_GLF_IDENTITY(min(1, _GLF_IDENTITY(1, (1) | (_GLF_IDENTITY(1, ~ (~ (1)))))), (min(1, _GLF_IDENTITY(1, (1) | (_GLF_IDENTITY(1, ~ (~ (1))))))) << 0), ~ (~ (_GLF_IDENTITY(min(1, _GLF_IDENTITY(1, (1) | (_GLF_IDENTITY(1, ~ (~ (1)))))), int(ivec4(_GLF_IDENTITY(min(1, _GLF_IDENTITY(1, (1) | (_GLF_IDENTITY(1, ~ (~ (1)))))), (min(1, _GLF_IDENTITY(1, (1) | (_GLF_IDENTITY(1, ~ (~ (1))))))) | (min(1, _GLF_IDENTITY(1, (1) | (_GLF_IDENTITY(1, ~ (~ (1)))))))), 1, 1, 0))))))), mat3x2(_GLF_IDENTITY(_GLF_IDENTITY(1.0, min(1.0, 1.0)), _GLF_IDENTITY(max(_GLF_IDENTITY(_GLF_IDENTITY(1.0, min(1.0, 1.0)), _GLF_IDENTITY(mix(float(_GLF_IDENTITY(1.0, min(1.0, 1.0))), float(_GLF_FUZZED(-9993.6184)), bool(false)), sqrt(0.0) + (mix(float(_GLF_IDENTITY(_GLF_IDENTITY(1.0, max(1.0, 1.0)), min(1.0, 1.0))), float(_GLF_FUZZED(-9993.6184)), bool(false))))), _GLF_IDENTITY(1.0, min(1.0, _GLF_IDENTITY(1.0, min(1.0, _GLF_IDENTITY(1.0, (1.0) - 0.0)))))), mix(float(_GLF_IDENTITY(max(_GLF_IDENTITY(_GLF_IDENTITY(1.0, min(1.0, 1.0)), _GLF_IDENTITY(mix(float(_GLF_IDENTITY(1.0, min(1.0, 1.0))), float(_GLF_FUZZED(-9993.6184)), bool(false)), sqrt(0.0) + (mix(float(_GLF_IDENTITY(_GLF_IDENTITY(1.0, max(1.0, 1.0)), min(1.0, 1.0))), float(_GLF_FUZZED(-9993.6184)), bool(false))))), _GLF_IDENTITY(1.0, min(1.0, _GLF_IDENTITY(1.0, min(1.0, _GLF_IDENTITY(1.0, (1.0) - 0.0)))))), 1.0 * (max(_GLF_IDENTITY(_GLF_IDENTITY(1.0, min(1.0, 1.0)), _GLF_IDENTITY(mix(float(_GLF_IDENTITY(1.0, min(1.0, 1.0))), float(_GLF_FUZZED(-9993.6184)), bool(false)), sqrt(0.0) + (mix(float(_GLF_IDENTITY(_GLF_IDENTITY(1.0, max(1.0, 1.0)), min(1.0, 1.0))), float(_GLF_FUZZED(-9993.6184)), bool(false))))), _GLF_IDENTITY(1.0, min(1.0, _GLF_IDENTITY(1.0, min(1.0, _GLF_IDENTITY(1.0, (1.0) - 0.0))))))))), float(_GLF_FUZZED(-8.3)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), mat2x3(1.0))));
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4((injectionSwitch.x > injectionSwitch.y), true, true, false)))) || false))))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(5.6), (injectionSwitch)[1]), vec2(_GLF_IDENTITY((injectionSwitch)[0], min(_GLF_IDENTITY((injectionSwitch)[0], float(vec2((injectionSwitch)[0], 0.0))), (injectionSwitch)[0])), _GLF_FUZZED(-5246.5060)), bvec2(true, false))).x > injectionSwitch.y)))))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(false, false))), bool(bvec2(_GLF_IDENTITY(false, bool(bvec2(false, false))), false))), ! (_GLF_IDENTITY(! (false), bool(bvec4(! (false), true, false, false))))), true && (false)), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(false, false))), bool(bvec2(_GLF_IDENTITY(false, bool(bvec2(false, false))), false))), ! (_GLF_IDENTITY(! (false), bool(bvec4(! (false), true, false, false))))), true && (false)), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(false, false))), bool(bvec2(_GLF_IDENTITY(false, bool(bvec2(false, false))), false))), ! (_GLF_IDENTITY(! (false), bool(bvec4(! (false), true, false, false))))), true && (false)), bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(false, false))), bool(bvec2(_GLF_IDENTITY(false, bool(bvec2(false, false))), false))), ! (_GLF_IDENTITY(! (false), bool(bvec4(! (false), true, false, false))))), true && (false)), true, true)))))), true)), bool(bvec2(_GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(false, false))), bool(bvec2(_GLF_IDENTITY(false, bool(bvec2(false, false))), false))), ! (_GLF_IDENTITY(! (false), bool(bvec4(! (false), true, false, false))))), true && (false)), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(false, false))), bool(bvec2(_GLF_IDENTITY(false, bool(bvec2(false, false))), false))), ! (_GLF_IDENTITY(! (false), bool(bvec4(! (false), true, false, false))))), true && (false)), bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(false, false))), bool(bvec2(_GLF_IDENTITY(false, bool(bvec2(false, false))), false))), ! (_GLF_IDENTITY(! (false), bool(bvec4(! (false), true, false, false))))), true && (false)), true, true)))))), true)), false || (bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(false, false))), bool(bvec2(_GLF_IDENTITY(false, bool(bvec2(false, false))), false))), ! (_GLF_IDENTITY(! (false), bool(bvec4(! (false), true, false, false))))), true && (false)), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(false, false))), bool(bvec2(_GLF_IDENTITY(false, bool(bvec2(false, false))), false))), ! (_GLF_IDENTITY(! (false), bool(bvec4(! (false), true, false, false))))), true && (false)), bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(false, false))), bool(bvec2(_GLF_IDENTITY(false, bool(bvec2(false, false))), false))), ! (_GLF_IDENTITY(! (false), bool(bvec4(! (false), true, false, false))))), true && (false)), true, true)))))), true)))), true))))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       barrier();
      }
     return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((false), ! (! (_GLF_IDENTITY((false), ! (! _GLF_IDENTITY((_GLF_IDENTITY((false), ! (! ((false))))), true && ((_GLF_IDENTITY((false), ! (! ((false))))))))))))))), ! (! (_GLF_DEAD(_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((false), ! (! (_GLF_IDENTITY((false), ! (! _GLF_IDENTITY((_GLF_IDENTITY((false), ! (! ((false))))), true && ((_GLF_IDENTITY((false), ! (! _GLF_IDENTITY(((false)), false || (_GLF_IDENTITY(((false)), bool(bool(((false))))))))))))))))))))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false)))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_IDENTITY(_GLF_DEAD(false), bool(_GLF_IDENTITY(bvec3(_GLF_DEAD(false), true, true), bvec3(bvec4(bvec3(_GLF_DEAD(false), true, true), false))))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_DEAD(false), true, true))))))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), injectionSwitch)).y))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   return;
  }
 atomicStore(buf[_GLF_IDENTITY(next_virtual_gid, (_GLF_IDENTITY(next_virtual_gid, 0u | _GLF_IDENTITY((next_virtual_gid), max((next_virtual_gid), (next_virtual_gid))))) + 0u)], uint(_GLF_struct_replacement_27.read_1 + 1), 4, 64, 4);
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y))))), false || (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))), true && ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y)))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > injectionSwitch.y)))), false), bvec2(bvec4(bvec2(! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(exp2(960.746)))) > injectionSwitch.y)))), false), false, true)))), (bool(_GLF_IDENTITY(bvec2(! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > injectionSwitch.y)))), false), bvec2(bvec4(bvec2(! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(exp2(960.746)))) > injectionSwitch.y)))), false), false, true))))) || false)))))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
}
