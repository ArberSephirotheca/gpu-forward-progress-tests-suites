#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


struct _GLF_struct_10 {
 vec2 _f0;
 mat2 _f1;
 bvec4 _f2;
 mat4x2 _f3;
} ;

struct _GLF_struct_11 {
 _GLF_struct_10 _f0;
 vec4 _f1;
 uint subgroup_local_id;
} ;

struct _GLF_struct_8 {
 mat3 _f0;
} ;

struct _GLF_struct_7 {
 bvec2 _f0;
 bvec3 _f1;
 ivec3 _f2;
 mat2x3 _f3;
 bool _f4;
} ;

struct _GLF_struct_6 {
 mat2x3 _f0;
 mat4 _f1;
 vec4 _f2;
 vec4 _f3;
 ivec2 _f4;
 float _f5;
} ;

struct _GLF_struct_5 {
 ivec3 _f0;
 ivec2 _f1;
 mat3x4 _f2;
} ;

struct _GLF_struct_4 {
 uint _f0;
 float _f1;
 bvec2 _f2;
 bvec4 _f3;
 vec3 _f4;
 bvec4 _f5;
 float _f6;
} ;

struct _GLF_struct_9 {
 _GLF_struct_4 _f0;
 _GLF_struct_5 _f1;
 _GLF_struct_6 _f2;
 _GLF_struct_7 _f3;
 _GLF_struct_8 _f4;
 bvec2 _f5;
} ;

struct _GLF_struct_2 {
 ivec4 _f0;
 vec2 _f1;
} ;

struct _GLF_struct_1 {
 mat4 _f0;
} ;

struct _GLF_struct_0 {
 mat2x4 _f0;
 float _f1;
} ;

struct _GLF_struct_3 {
 _GLF_struct_0 _f0;
 uvec4 _f1;
 _GLF_struct_1 _f2;
 _GLF_struct_2 _f3;
 uvec4 _f4;
 vec2 _f5;
} ;

struct _GLF_struct_12 {
 bool _f0;
 bvec3 _f1;
 _GLF_struct_3 _f2;
 _GLF_struct_9 _f3;
 _GLF_struct_11 _f4;
} ;

layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_WRAPPED_IF_TRUE(true))
  {
   if(_GLF_DEAD(false))
    barrier();
  }
 else
  {
  }
 if(_GLF_DEAD(false))
  {
   do
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))) / 1.0)))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       do
        {
         barrier();
        }
       while(_GLF_WRAPPED_LOOP(false));
      }
    }
   while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, bool(bvec2(false, false)))));
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     barrier();
    }
   else
    {
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint subgroup_id = gl_SubgroupID;
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_WRAPPED_IF_FALSE(false))
  {
  }
 else
  {
   do
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY((_GLF_DEAD(false)) && true, bool(bvec2((_GLF_DEAD(false)) && true, false)))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_WRAPPED_IF_TRUE(true))
          {
           barrier();
          }
         else
          {
          }
        }
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
    }
   while(_GLF_WRAPPED_LOOP(false));
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
     if(_GLF_DEAD(false))
      barrier();
    }
   else
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_WRAPPED_IF_TRUE(true))
      {
       if(_GLF_DEAD(false))
        barrier();
      }
     else
      {
      }
    }
   do
    {
     barrier();
    }
   while(_GLF_WRAPPED_LOOP(false));
  }
 _GLF_struct_12 _GLF_struct_replacement_12 = _GLF_struct_12(_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(true, (true) || false), true)), false || (bool(bvec2(_GLF_IDENTITY(true, (true) || false), true))))), bvec3(true), _GLF_struct_3(_GLF_struct_0(mat2x4(_GLF_IDENTITY(1.0, (1.0) - length(vec3(0.0, 0.0, 0.0)))), 1.0), uvec4(_GLF_IDENTITY(1u, (_GLF_IDENTITY(_GLF_IDENTITY(1u, min(1u, 1u)), min(_GLF_IDENTITY(_GLF_IDENTITY(1u, min(1u, 1u)), (_GLF_IDENTITY(_GLF_IDENTITY(1u, min(1u, 1u)), (_GLF_IDENTITY(1u, min(1u, 1u))) | 0u)) / 1u), _GLF_IDENTITY(_GLF_IDENTITY(1u, min(1u, 1u)), ~ (~ (_GLF_IDENTITY(1u, min(1u, 1u)))))))) | 0u)), _GLF_struct_1(_GLF_IDENTITY(mat4(_GLF_IDENTITY(1.0, (1.0) - 0.0)), (false ? _GLF_FUZZED(mat4(-33.81, 300.188, -328.207, -1.7, -8.8, 230.317, 7.7, -9.5, -90.57, 41.64, 9.5, -659.319, 83.18, -8673.1172, 2.6, 43.24)) : _GLF_IDENTITY(mat4(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, float(vec2(_GLF_IDENTITY(1.0, float(mat2x4(1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0))), length(tan(vec3(0.0, 0.0, 0.0))))))) - 0.0)), (true ? mat4(_GLF_IDENTITY(1.0, (1.0) - 0.0)) : _GLF_FUZZED(mat4(-345.314, -585.165, -578.525, 2.8, 8232.2031, -56.92, 6.9, 322.555, 1.8, -3.2, -4.5, -3364.4134, 83.55, -4.4, 4808.2711, -895.659))))))), _GLF_struct_2(ivec4(1), _GLF_IDENTITY(vec2(1.0), vec2(mat4x2(_GLF_IDENTITY(vec2(1.0), _GLF_IDENTITY(min(_GLF_IDENTITY(vec2(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, min(1.0, 1.0))) * _GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, float(mat4x3(1.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 1.0, round(length(normalize(vec2(1.0, 1.0)))), 0.0, 1.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(1.0, 0.0)), dot(vec2(0.0, 1.0), vec2(1.0, 0.0))), _GLF_IDENTITY(dot(vec3(1.0, 0.0, 1.0), vec3(0.0, 1.0, 0.0)), dot(vec3(1.0, 0.0, 1.0), vec3(0.0, 1.0, 0.0))), cos(0.0), 0.0, 0.0))), 1.0)))) - 0.0)), _GLF_IDENTITY((true ? vec2(1.0) : _GLF_FUZZED(injectionSwitch)), (true ? _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((true ? vec2(1.0) : _GLF_FUZZED(injectionSwitch)), max((true ? vec2(1.0) : _GLF_FUZZED(injectionSwitch)), (true ? vec2(1.0) : _GLF_FUZZED(injectionSwitch)))), vec2(1.0, 1.0) * _GLF_IDENTITY(((true ? vec2(1.0) : _GLF_FUZZED(injectionSwitch))), max(((true ? vec2(1.0) : _GLF_FUZZED(injectionSwitch))), ((true ? vec2(1.0) : _GLF_FUZZED(injectionSwitch)))))), (_GLF_IDENTITY(_GLF_IDENTITY((true ? vec2(1.0) : _GLF_FUZZED(injectionSwitch)), vec2(1.0, _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0))) * ((true ? vec2(1.0) : _GLF_FUZZED(injectionSwitch)))), min(_GLF_IDENTITY(_GLF_IDENTITY((true ? vec2(1.0) : _GLF_FUZZED(injectionSwitch)), (false ? _GLF_FUZZED(vec2(3011.5294, -8926.9978)) : (true ? vec2(1.0) : _GLF_FUZZED(injectionSwitch)))), vec2(1.0, 1.0) * ((true ? vec2(1.0) : _GLF_FUZZED(injectionSwitch)))), _GLF_IDENTITY((true ? vec2(1.0) : _GLF_FUZZED(injectionSwitch)), vec2(1.0, 1.0) * ((true ? vec2(1.0) : _GLF_IDENTITY(_GLF_FUZZED(injectionSwitch), max(_GLF_FUZZED(injectionSwitch), _GLF_FUZZED(injectionSwitch))))))))) - vec2(0.0, 0.0)) : _GLF_FUZZED(injectionSwitch)))), vec2(1.0)), max(_GLF_IDENTITY(_GLF_IDENTITY(min(_GLF_IDENTITY(vec2(1.0), (true ? vec2(1.0) : _GLF_FUZZED(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0))))), vec2(1.0)), (min(_GLF_IDENTITY(vec2(1.0), (true ? vec2(1.0) : _GLF_FUZZED(injectionSwitch))), vec2(1.0))) * mat2(1.0)), vec2(_GLF_IDENTITY(mat3x2(_GLF_IDENTITY(min(_GLF_IDENTITY(vec2(1.0), (true ? vec2(1.0) : _GLF_FUZZED(injectionSwitch))), vec2(1.0)), (min(_GLF_IDENTITY(vec2(1.0), (_GLF_IDENTITY(true, bool(bool(true))) ? vec2(1.0) : _GLF_FUZZED(injectionSwitch))), vec2(1.0))) * mat2(1.0)), 1.0, 0.0, 0.0, 0.0), (mat3x2(_GLF_IDENTITY(min(_GLF_IDENTITY(vec2(1.0), (_GLF_IDENTITY(true, bool(_GLF_IDENTITY(bool(true), ! (! (bool(true)))))) ? vec2(1.0) : _GLF_FUZZED(injectionSwitch))), vec2(1.0)), (min(_GLF_IDENTITY(vec2(1.0), (true ? _GLF_IDENTITY(vec2(_GLF_IDENTITY(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(-589.455)), bool(false))), min(1.0, _GLF_IDENTITY(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(588.410) : 1.0)), (false ? _GLF_FUZZED(-6516.1571) : 1.0))))), (_GLF_IDENTITY(vec2(_GLF_IDENTITY(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(-589.455)), bool(false))), min(1.0, _GLF_IDENTITY(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(588.410) : 1.0)), (false ? _GLF_FUZZED(-6516.1571) : 1.0))))), max(vec2(_GLF_IDENTITY(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(-589.455)), bool(false))), min(1.0, _GLF_IDENTITY(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(588.410) : 1.0)), (false ? _GLF_FUZZED(-6516.1571) : 1.0))))), vec2(_GLF_IDENTITY(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(-589.455)), bool(false))), min(1.0, _GLF_IDENTITY(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(588.410) : 1.0)), (false ? _GLF_FUZZED(-6516.1571) : 1.0)))))))) - tan(vec2(0.0, 0.0))) : _GLF_FUZZED(injectionSwitch))), vec2(1.0))) * mat2(1.0)), 1.0, 0.0, 0.0, 0.0)) - mat3x2(0.0, 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)))))), min(_GLF_IDENTITY(vec2(1.0), (_GLF_IDENTITY(true, ! (! (true))) ? _GLF_IDENTITY(vec2(1.0), min(vec2(1.0), vec2(1.0))) : _GLF_IDENTITY(_GLF_FUZZED(injectionSwitch), (_GLF_FUZZED(injectionSwitch)) + _GLF_IDENTITY(abs(sin(vec2(0.0, 0.0))), vec2(_GLF_IDENTITY(vec3(abs(sin(vec2(0.0, 0.0))), 1.0), clamp(vec3(abs(sin(vec2(0.0, 0.0))), 1.0), vec3(abs(sin(vec2(0.0, 0.0))), 1.0), vec3(abs(sin(vec2(0.0, 0.0))), 1.0)))))))), _GLF_IDENTITY(vec2(1.0), _GLF_IDENTITY(vec2(mat3x2(vec2(1.0), 0.0, 1.0, 0.0, 1.0)), min(vec2(mat3x2(vec2(1.0), 0.0, 1.0, 0.0, 1.0)), vec2(mat3x2(vec2(1.0), 0.0, 1.0, 0.0, 1.0))))))))), 1.0, 1.0, 1.0, 0.0, 1.0, 0.0)))), uvec4(1u), vec2(_GLF_IDENTITY(1.0, min(1.0, 1.0)))), _GLF_struct_9(_GLF_struct_4(1u, 1.0, _GLF_IDENTITY(_GLF_IDENTITY(bvec2(true), bvec2(bvec2(_GLF_IDENTITY(bvec2(true), bvec2(bvec3(bvec2(true), false)))))), bvec2(bvec4(bvec2(true), false, _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), bvec4(true), vec3(_GLF_IDENTITY(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(857.893)), float(1.0), bool(true))), min(1.0, _GLF_IDENTITY(1.0, clamp(1.0, _GLF_IDENTITY(1.0, clamp(1.0, _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-3.2) : 1.0)), _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)))), 1.0))))), bvec4(true), 1.0), _GLF_struct_5(ivec3(1), ivec2(1), mat3x4(1.0)), _GLF_struct_6(mat2x3(1.0), _GLF_IDENTITY(mat4(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(mix(-1356.6675, (28.74 - 0.7), false)) : 1.0))), (mat4(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(mix(-1356.6675, (28.74 - 0.7), false)) : 1.0)))) * mat4(1.0)), vec4(1.0), vec4(_GLF_IDENTITY(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-188.430)), float(1.0), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), clamp(_GLF_IDENTITY(1.0, mix(float(_GLF_IDENTITY(_GLF_FUZZED(_GLF_IDENTITY(_GLF_IDENTITY(634.410, _GLF_IDENTITY(mix(float(_GLF_IDENTITY(634.410, min(634.410, 634.410))), float(_GLF_FUZZED(1935.7022)), bool(false)), mix(float(_GLF_FUZZED(-18.30)), float(mix(float(_GLF_IDENTITY(634.410, min(634.410, 634.410))), float(_GLF_FUZZED(1935.7022)), bool(false))), bool(true)))), min(634.410, 634.410))), clamp(_GLF_FUZZED(_GLF_IDENTITY(_GLF_IDENTITY(634.410, _GLF_IDENTITY(mix(float(_GLF_IDENTITY(634.410, min(634.410, 634.410))), float(_GLF_FUZZED(1935.7022)), bool(false)), mix(float(_GLF_FUZZED(-18.30)), float(mix(float(_GLF_IDENTITY(634.410, min(634.410, 634.410))), float(_GLF_FUZZED(1935.7022)), bool(false))), bool(true)))), min(634.410, 634.410))), _GLF_FUZZED(_GLF_IDENTITY(_GLF_IDENTITY(634.410, _GLF_IDENTITY(mix(float(_GLF_IDENTITY(634.410, min(634.410, 634.410))), float(_GLF_FUZZED(1935.7022)), bool(false)), mix(float(_GLF_FUZZED(-18.30)), float(mix(float(_GLF_IDENTITY(634.410, min(634.410, 634.410))), float(_GLF_FUZZED(1935.7022)), bool(false))), bool(true)))), min(634.410, 634.410))), _GLF_FUZZED(_GLF_IDENTITY(_GLF_IDENTITY(634.410, _GLF_IDENTITY(mix(float(_GLF_IDENTITY(634.410, min(634.410, 634.410))), float(_GLF_FUZZED(1935.7022)), bool(false)), mix(float(_GLF_FUZZED(-18.30)), float(mix(float(_GLF_IDENTITY(634.410, min(634.410, 634.410))), float(_GLF_FUZZED(1935.7022)), bool(false))), bool(true)))), min(634.410, 634.410)))))), _GLF_IDENTITY(float(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(true ? 1.0 : _GLF_FUZZED(-202.344), (false ? _GLF_FUZZED(5.7) : true ? _GLF_IDENTITY(1.0, mix(float(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0))), float(_GLF_FUZZED(18.78)), bool(false))) : _GLF_FUZZED(-202.344)))))), (false ? _GLF_FUZZED(45.37) : _GLF_IDENTITY(float(_GLF_IDENTITY(_GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(-202.344))), min(_GLF_IDENTITY(_GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(-202.344))), max(_GLF_IDENTITY(1.0, _GLF_IDENTITY((true ? 1.0 : _GLF_FUZZED(-202.344)), min(_GLF_IDENTITY((true ? 1.0 : _GLF_FUZZED(-202.344)), 0.0 + ((true ? 1.0 : _GLF_FUZZED(-202.344)))), (true ? 1.0 : _GLF_FUZZED(-202.344))))), _GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(-202.344))))), _GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(-202.344)))))), (float(_GLF_IDENTITY(_GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, min(1.0, 1.0)), 1.0, 1.0)), (_GLF_IDENTITY(true ? _GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, (1.0) + 0.0), _GLF_IDENTITY(1.0, float(_GLF_IDENTITY(mat4x2(1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0), (mat4x2(1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0)) - mat4x2(0.0, 0.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0)))))) : _GLF_FUZZED(-202.344), _GLF_IDENTITY(_GLF_IDENTITY(float(vec3(true ? _GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, (1.0) + 0.0), _GLF_IDENTITY(1.0, _GLF_IDENTITY(float(_GLF_IDENTITY(mat4x2(1.0, 1.0, 0.0, 1.0, 1.0, 1.0, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(2.8)), float(0.0), bool(true))), 0.0), (mat4x2(1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0)) - mat4x2(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))), mix(float(_GLF_IDENTITY(float(_GLF_IDENTITY(mat4x2(1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0), (mat4x2(1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0)) - mat4x2(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))), min(_GLF_IDENTITY(float(_GLF_IDENTITY(mat4x2(1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0), (mat4x2(1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0)) - mat4x2(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))), clamp(float(_GLF_IDENTITY(mat4x2(1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0), (mat4x2(1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0)) - mat4x2(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))), float(_GLF_IDENTITY(mat4x2(1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0), (mat4x2(1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0)) - mat4x2(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))), _GLF_IDENTITY(float(_GLF_IDENTITY(mat4x2(1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0), (mat4x2(1.0, 1.0, 0.0, 1.0, 1.0, _GLF_IDENTITY(1.0, (1.0) / 1.0), _GLF_IDENTITY(0.0, float(mat3x2(0.0, 0.0, 0.0, exp(0.0), 1.0, length(vec2(0.0, 0.0))))), 0.0)) - mat4x2(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))), min(float(_GLF_IDENTITY(mat4x2(1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0), (mat4x2(1.0, 1.0, 0.0, 1.0, 1.0, _GLF_IDENTITY(1.0, (1.0) / 1.0), _GLF_IDENTITY(0.0, float(mat3x2(0.0, 0.0, 0.0, exp(0.0), 1.0, length(vec2(0.0, 0.0))))), 0.0)) - mat4x2(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))), float(_GLF_IDENTITY(mat4x2(1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0), (mat4x2(1.0, 1.0, 0.0, 1.0, 1.0, _GLF_IDENTITY(1.0, (1.0) / 1.0), _GLF_IDENTITY(0.0, float(mat3x2(0.0, 0.0, 0.0, exp(0.0), 1.0, length(vec2(0.0, 0.0))))), 0.0)) - mat4x2(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))))))), float(_GLF_IDENTITY(mat4x2(1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0), (mat4x2(1.0, 1.0, 0.0, 1.0, 1.0, 1.0, _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-997.609)), bool(false))), 0.0)) - mat4x2(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)))))), float(_GLF_FUZZED(738.785)), bool(false)))))) : _GLF_FUZZED(-202.344), 1.0, 0.0)), mix(float(float(vec3(true ? _GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, (1.0) + 0.0), _GLF_IDENTITY(1.0, _GLF_IDENTITY(float(_GLF_IDENTITY(mat4x2(1.0, 1.0, 0.0, 1.0, 1.0, 1.0, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(2.8)), float(0.0), bool(true))), 0.0), (mat4x2(1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0)) - mat4x2(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))), mix(float(_GLF_IDENTITY(float(_GLF_IDENTITY(mat4x2(1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0), (mat4x2(1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0)) - mat4x2(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))), min(_GLF_IDENTITY(float(_GLF_IDENTITY(mat4x2(1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0), (mat4x2(1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0)) - mat4x2(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))), clamp(float(_GLF_IDENTITY(mat4x2(1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0), (mat4x2(1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0)) - mat4x2(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))), float(_GLF_IDENTITY(mat4x2(1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0), (mat4x2(1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0)) - mat4x2(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))), _GLF_IDENTITY(float(_GLF_IDENTITY(mat4x2(1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0), (mat4x2(1.0, 1.0, 0.0, 1.0, 1.0, _GLF_IDENTITY(1.0, (1.0) / 1.0), _GLF_IDENTITY(0.0, float(mat3x2(0.0, 0.0, 0.0, exp(0.0), 1.0, length(vec2(0.0, 0.0))))), 0.0)) - mat4x2(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))), min(float(_GLF_IDENTITY(mat4x2(1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0), (mat4x2(1.0, 1.0, 0.0, 1.0, 1.0, _GLF_IDENTITY(1.0, (1.0) / 1.0), _GLF_IDENTITY(0.0, float(mat3x2(0.0, 0.0, 0.0, exp(0.0), 1.0, length(vec2(0.0, 0.0))))), 0.0)) - mat4x2(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))), float(_GLF_IDENTITY(mat4x2(1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0), (mat4x2(1.0, 1.0, 0.0, 1.0, 1.0, _GLF_IDENTITY(1.0, (1.0) / 1.0), _GLF_IDENTITY(0.0, float(mat3x2(0.0, 0.0, 0.0, exp(0.0), 1.0, length(vec2(0.0, 0.0))))), 0.0)) - mat4x2(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))))))), float(_GLF_IDENTITY(mat4x2(1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0), (mat4x2(1.0, 1.0, 0.0, 1.0, 1.0, 1.0, _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-997.609)), bool(false))), 0.0)) - mat4x2(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)))))), float(_GLF_FUZZED(738.785)), bool(false)))))) : _GLF_FUZZED(-202.344), 1.0, 0.0))), float(_GLF_FUZZED(434.034)), bool(false))), min(_GLF_IDENTITY(float(vec3(true ? _GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, (1.0) + 0.0), _GLF_IDENTITY(1.0, _GLF_IDENTITY(float(_GLF_IDENTITY(mat4x2(1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0), (mat4x2(1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0)) - mat4x2(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))), mix(float(_GLF_IDENTITY(float(_GLF_IDENTITY(mat4x2(1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0), (mat4x2(1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0)) - mat4x2(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))), min(_GLF_IDENTITY(float(_GLF_IDENTITY(mat4x2(1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0), (mat4x2(1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0)) - mat4x2(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))), clamp(float(_GLF_IDENTITY(mat4x2(1.0, 1.0, 0.0, 1.0, _GLF_IDENTITY(1.0, (1.0) - 0.0), 1.0, 0.0, 0.0), (mat4x2(1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0)) - mat4x2(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))), float(_GLF_IDENTITY(mat4x2(1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0), (mat4x2(1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0)) - mat4x2(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))), float(_GLF_IDENTITY(mat4x2(1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0), (mat4x2(1.0, 1.0, 0.0, 1.0, 1.0, _GLF_IDENTITY(1.0, float(mat3x2(_GLF_IDENTITY(1.0, mix(float(_GLF_IDENTITY(1.0, max(1.0, 1.0))), float(_GLF_FUZZED(-4.3)), bool(false))), 1.0, 0.0, 1.0, exp(0.0), 0.0))), 0.0, 0.0)) - mat4x2(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))))), float(_GLF_IDENTITY(mat4x2(1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, _GLF_IDENTITY(0.0, (_GLF_IDENTITY(false, ! (! (false))) ? _GLF_FUZZED(48.17) : 0.0))), (mat4x2(1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0)) - mat4x2(0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0, _GLF_IDENTITY(0.0, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(0.0, min(0.0, 0.0)) : _GLF_FUZZED(-2046.2954))), 0.0)))))), float(_GLF_FUZZED(738.785)), bool(false)))))) : _GLF_FUZZED(-202.344), 1.0, 0.0)), min(float(vec3(_GLF_IDENTITY(true ? _GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, (1.0) + 0.0), _GLF_IDENTITY(1.0, _GLF_IDENTITY(float(_GLF_IDENTITY(mat4x2(1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0), (mat4x2(1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0)) - mat4x2(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))), mix(float(_GLF_IDENTITY(float(_GLF_IDENTITY(mat4x2(1.0, 1.0, 0.0, 1.0, _GLF_IDENTITY(1.0, float(vec2(1.0, 0.0))), 1.0, 0.0, 0.0), (mat4x2(1.0, 1.0, 0.0, 1.0, 1.0, 1.0, _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(-37.59) : _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(805.292)), bool(false))))), 0.0)) - mat4x2(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))), _GLF_IDENTITY(min(_GLF_IDENTITY(float(_GLF_IDENTITY(mat4x2(1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0), (mat4x2(1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0)) - mat4x2(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))), clamp(float(_GLF_IDENTITY(mat4x2(1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0), (mat4x2(1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0)) - mat4x2(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))), float(_GLF_IDENTITY(mat4x2(1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0), (mat4x2(1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0)) - mat4x2(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))), float(_GLF_IDENTITY(mat4x2(1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0), (mat4x2(1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0)) - mat4x2(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))))), float(_GLF_IDENTITY(mat4x2(1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0), (mat4x2(1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0)) - mat4x2(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)))), 0.0 + (_GLF_IDENTITY(min(_GLF_IDENTITY(float(_GLF_IDENTITY(mat4x2(1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0), (mat4x2(1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0)) - mat4x2(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))), clamp(float(_GLF_IDENTITY(mat4x2(1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0), (mat4x2(1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0)) - mat4x2(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))), float(_GLF_IDENTITY(mat4x2(1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0), (mat4x2(1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0)) - mat4x2(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))), float(_GLF_IDENTITY(mat4x2(1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0), (mat4x2(1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0)) - mat4x2(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))))), float(_GLF_IDENTITY(mat4x2(1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0), (mat4x2(1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0)) - mat4x2(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)))), (min(_GLF_IDENTITY(float(_GLF_IDENTITY(mat4x2(1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0), (mat4x2(1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0)) - mat4x2(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))), clamp(float(_GLF_IDENTITY(mat4x2(1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0), (mat4x2(1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0)) - mat4x2(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))), float(_GLF_IDENTITY(mat4x2(1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0), (mat4x2(1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0)) - mat4x2(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))), float(_GLF_IDENTITY(mat4x2(1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0), (mat4x2(1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0)) - mat4x2(0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, (0.0) - 0.0), 0.0, 0.0, 0.0))))), float(_GLF_IDENTITY(mat4x2(1.0, 1.0, 0.0, _GLF_IDENTITY(1.0, clamp(1.0, 1.0, _GLF_IDENTITY(1.0, min(1.0, _GLF_IDENTITY(1.0, min(1.0, 1.0)))))), 1.0, 1.0, 0.0, 0.0), (mat4x2(1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0)) - mat4x2(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))))) / _GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0)), dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0)))))))), _GLF_IDENTITY(float(_GLF_FUZZED(738.785)), float(float(float(_GLF_FUZZED(738.785))))), bool(false)))))) : _GLF_FUZZED(-202.344), (true ? true ? _GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, (1.0) + 0.0), _GLF_IDENTITY(1.0, _GLF_IDENTITY(float(_GLF_IDENTITY(mat4x2(1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0), (mat4x2(1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0)) - mat4x2(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))), mix(float(_GLF_IDENTITY(float(_GLF_IDENTITY(mat4x2(1.0, 1.0, 0.0, 1.0, _GLF_IDENTITY(1.0, float(vec2(1.0, 0.0))), 1.0, 0.0, 0.0), (mat4x2(1.0, 1.0, 0.0, 1.0, 1.0, 1.0, _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(-37.59) : _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(805.292)), bool(false))))), 0.0)) - mat4x2(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))), _GLF_IDENTITY(min(_GLF_IDENTITY(float(_GLF_IDENTITY(mat4x2(1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0), (mat4x2(1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0)) - mat4x2(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))), clamp(float(_GLF_IDENTITY(mat4x2(1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0), (mat4x2(1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0)) - mat4x2(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))), float(_GLF_IDENTITY(mat4x2(1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0), (mat4x2(1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0)) - mat4x2(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))), float(_GLF_IDENTITY(mat4x2(1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0), (mat4x2(1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0)) - mat4x2(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))))), float(_GLF_IDENTITY(mat4x2(1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0), (mat4x2(1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0)) - mat4x2(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)))), 0.0 + (_GLF_IDENTITY(min(_GLF_IDENTITY(float(_GLF_IDENTITY(mat4x2(1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0), (mat4x2(1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0)) - mat4x2(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))), clamp(float(_GLF_IDENTITY(mat4x2(1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0), (mat4x2(1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0)) - mat4x2(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))), float(_GLF_IDENTITY(mat4x2(1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0), (mat4x2(1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0)) - mat4x2(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))), float(_GLF_IDENTITY(mat4x2(1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0), (mat4x2(1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0)) - mat4x2(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))))), float(_GLF_IDENTITY(mat4x2(1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0), (mat4x2(1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0)) - mat4x2(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)))), (min(_GLF_IDENTITY(float(_GLF_IDENTITY(mat4x2(1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0), (mat4x2(1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0)) - mat4x2(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))), clamp(float(_GLF_IDENTITY(mat4x2(1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0), (mat4x2(1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0)) - mat4x2(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))), float(_GLF_IDENTITY(mat4x2(1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0), (mat4x2(1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0)) - mat4x2(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))), float(_GLF_IDENTITY(mat4x2(1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0), (mat4x2(1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0)) - mat4x2(0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, (0.0) - 0.0), 0.0, 0.0, 0.0))))), float(_GLF_IDENTITY(mat4x2(1.0, 1.0, 0.0, _GLF_IDENTITY(1.0, clamp(1.0, 1.0, _GLF_IDENTITY(1.0, min(1.0, _GLF_IDENTITY(1.0, min(1.0, 1.0)))))), 1.0, 1.0, 0.0, 0.0), (mat4x2(1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0)) - mat4x2(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))))) / _GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0)), dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0)))))))), _GLF_IDENTITY(float(_GLF_FUZZED(738.785)), float(float(float(_GLF_FUZZED(738.785))))), bool(false)))))) : _GLF_FUZZED(-202.344) : _GLF_FUZZED(-71.14))), 1.0, 0.0)), float(vec3(true ? _GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, _GLF_IDENTITY((1.0) + 0.0, (true ? _GLF_IDENTITY((1.0) + 0.0, clamp((1.0) + 0.0, (1.0) + 0.0, (1.0) + 0.0)) : _GLF_FUZZED(-9.6)))), _GLF_IDENTITY(1.0, _GLF_IDENTITY(float(_GLF_IDENTITY(mat4x2(1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0), (mat4x2(1.0, 1.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)), 1.0, 1.0, 1.0, 0.0, 0.0)) - mat4x2(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))), mix(float(_GLF_IDENTITY(float(_GLF_IDENTITY(mat4x2(1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0), (mat4x2(1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0)) - mat4x2(0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, mix(float(_GLF_IDENTITY(0.0, float(mat3x2(0.0, 1.0, abs(1.0), 1.0, 1.0, 0.0)))), float(_GLF_FUZZED(26.33)), bool(false))), 0.0, 0.0, 0.0, 0.0))), min(_GLF_IDENTITY(float(_GLF_IDENTITY(mat4x2(1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0), (mat4x2(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, (1.0) * 1.0)) - 0.0), 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0)) - mat4x2(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))), clamp(float(_GLF_IDENTITY(mat4x2(1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0), (mat4x2(1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0)) - mat4x2(0.0, 0.0, _GLF_IDENTITY(0.0, float(mat4x3(_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-6070.7070)), float(0.0), bool(true))), 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, determinant(mat4(sqrt(1.0), 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, sqrt(1.0), _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(dot(vec2(1.0, 1.0), vec2(0.0, 0.0)), dot(vec2(1.0, 1.0), vec2(0.0, 0.0))), 0.0, 1.0))))), 0.0, 0.0, 0.0, 0.0, 0.0))), float(_GLF_IDENTITY(mat4x2(1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0), (mat4x2(1.0, 1.0, _GLF_IDENTITY(0.0, (0.0) / determinant(mat4(1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, cos(0.0), 1.0, 0.0, 0.0, log(1.0), 1.0))), 1.0, _GLF_IDENTITY(1.0, (1.0) - 0.0), 1.0, 0.0, 0.0)) - mat4x2(0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, (0.0) + 0.0), 0.0, 0.0, 0.0, 0.0))), float(_GLF_IDENTITY(mat4x2(1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0), (mat4x2(1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0)) - mat4x2(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))))), float(_GLF_IDENTITY(mat4x2(1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0), (mat4x2(1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0)) - mat4x2(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, (0.0) * 1.0))))))), float(_GLF_FUZZED(738.785)), bool(false)))))) : _GLF_FUZZED(-202.344), 1.0, 0.0)))), float(vec3(true ? _GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, _GLF_IDENTITY(float(mat3x2(_GLF_IDENTITY(1.0, max(1.0, 1.0)), abs(0.0), 0.0, 1.0, 1.0, 0.0)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(-7.4) : float(mat3x2(_GLF_IDENTITY(1.0, max(1.0, 1.0)), abs(0.0), 0.0, 1.0, 1.0, 0.0)))))) + _GLF_IDENTITY(0.0, _GLF_IDENTITY(float(mat4x3(0.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 0.0, exp(0.0)), vec4(1.0, 1.0, 1.0, 0.0)), dot(vec4(0.0, 0.0, 0.0, exp(0.0)), vec4(1.0, 1.0, 1.0, 0.0))), 1.0, 1.0, _GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, abs(0.0))), dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, abs(0.0)))), 1.0, sqrt(0.0), _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 0.0, 0.0, 1.0)), min(float(mat4x3(0.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 0.0, exp(0.0)), vec4(1.0, 1.0, 1.0, 0.0)), dot(vec4(0.0, 0.0, 0.0, exp(0.0)), vec4(1.0, 1.0, 1.0, 0.0))), 1.0, 1.0, _GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, abs(0.0))), dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, abs(0.0)))), 1.0, sqrt(0.0), _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 0.0, 0.0, 1.0)), float(mat4x3(0.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 0.0, exp(0.0)), vec4(1.0, 1.0, 1.0, 0.0)), dot(vec4(0.0, 0.0, 0.0, exp(0.0)), vec4(1.0, 1.0, 1.0, 0.0))), 1.0, 1.0, _GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, abs(0.0))), dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, abs(0.0)))), 1.0, sqrt(0.0), _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 0.0, 0.0, 1.0)))))), _GLF_IDENTITY(1.0, _GLF_IDENTITY(float(_GLF_IDENTITY(mat4x2(1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0), (mat4x2(1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0)) - mat4x2(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))), mix(float(_GLF_IDENTITY(float(_GLF_IDENTITY(mat4x2(1.0, 1.0, 0.0, 1.0, 1.0, _GLF_IDENTITY(1.0, max(1.0, 1.0)), 0.0, 0.0), (mat4x2(1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0)) - mat4x2(0.0, 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, max(0.0, _GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0)))), 0.0, 0.0))), min(_GLF_IDENTITY(_GLF_IDENTITY(float(_GLF_IDENTITY(mat4x2(1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0), (mat4x2(1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0)) - mat4x2(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))), clamp(float(_GLF_IDENTITY(mat4x2(1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0), (mat4x2(1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0)) - mat4x2(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))), float(_GLF_IDENTITY(mat4x2(1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0), (mat4x2(1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0)) - mat4x2(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))), float(_GLF_IDENTITY(mat4x2(1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0), (mat4x2(1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0)) - mat4x2(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))))), max(_GLF_IDENTITY(float(_GLF_IDENTITY(mat4x2(1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0), (mat4x2(1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0)) - mat4x2(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))), clamp(float(_GLF_IDENTITY(mat4x2(1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0), (mat4x2(1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0)) - mat4x2(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))), float(_GLF_IDENTITY(mat4x2(1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0), (mat4x2(1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0)) - mat4x2(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))), float(_GLF_IDENTITY(mat4x2(1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0), (mat4x2(1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0)) - mat4x2(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))))), _GLF_IDENTITY(float(_GLF_IDENTITY(mat4x2(1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0), (mat4x2(1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0)) - mat4x2(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))), clamp(float(_GLF_IDENTITY(mat4x2(1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0), (mat4x2(1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0)) - mat4x2(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))), float(_GLF_IDENTITY(mat4x2(1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0), (mat4x2(1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0)) - mat4x2(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))), float(_GLF_IDENTITY(mat4x2(1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0), (mat4x2(1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0)) - mat4x2(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))))))), float(_GLF_IDENTITY(mat4x2(1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0), (mat4x2(1.0, 1.0, 0.0, 1.0, _GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), 1.0)), 1.0, 0.0, 0.0)) - mat4x2(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)))))), float(_GLF_FUZZED(738.785)), bool(false)))))) : _GLF_FUZZED(-202.344), 1.0, 0.0))))))))) / 1.0))), bool(true))), 1.0, 1.0))), ivec2(1), 1.0), _GLF_struct_7(bvec2(true), _GLF_IDENTITY(bvec3(true), bvec3(bvec4(bvec3(true), false))), _GLF_IDENTITY(ivec3(1), (ivec3(_GLF_IDENTITY(0, (_GLF_IDENTITY(0, (0) | (0))) | (0)), 0, 0) << _GLF_IDENTITY(ivec3(_GLF_IDENTITY(3, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(3, (3) | (0 >> _GLF_IDENTITY(int(1), int(1)))) : _GLF_FUZZED(93086)))), ivec3(3))) + (ivec3(1))), mat2x3(_GLF_IDENTITY(1.0, float(vec3(1.0, 0.0, 1.0)))), _GLF_IDENTITY(true, (true) && true)), _GLF_struct_8(mat3(1.0)), bvec2(_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(true, ! (! (true))), false, _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), ! (! (_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, false || (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(1683.0101)), vec2(_GLF_FUZZED(4.9), (injectionSwitch)[1]), bvec2(false, true))), injectionSwitch, injectionSwitch)).y)))))))))), true)), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(true, ! (! (true))), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)), ! (! (bool(bvec4(_GLF_IDENTITY(true, _GLF_IDENTITY(! (! (true)), (_GLF_IDENTITY(! (! (true)), bool(bvec2(! (! (true)), false)))) || false)), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))))), _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y), true && ((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y))))), bvec2(bvec4(bvec2(_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(true, ! _GLF_IDENTITY(_GLF_IDENTITY((! (true)), bool(bvec4((! (true)), true, true, false))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY((! (true)), bool(bvec4((! (true)), true, true, false))), false || (_GLF_IDENTITY((! (true)), bool(bvec4((! (true)), true, true, false)))))), (! (_GLF_IDENTITY(_GLF_IDENTITY((! (true)), bool(bvec4((! (true)), true, true, false))), false || (_GLF_IDENTITY((! (true)), bool(bvec4((! (_GLF_IDENTITY(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (true)))), true, true, false))))))) && true)))), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)), ! (! (_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(true, ! (! (true))), _GLF_IDENTITY(false, ! (! (false))), _GLF_TRUE(_GLF_IDENTITY(true, (true) || false), (injectionSwitch.x < injectionSwitch.y)), true)), bool(bvec2(bool(bvec4(_GLF_IDENTITY(true, ! (! (true))), _GLF_IDENTITY(false, ! (! (false))), _GLF_TRUE(_GLF_IDENTITY(true, (true) || false), (injectionSwitch.x < injectionSwitch.y)), true)), true)))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), false, true)))), (bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(true, _GLF_IDENTITY(! (! (true)), (_GLF_IDENTITY(! (! (true)), ! _GLF_IDENTITY((_GLF_IDENTITY(! (! (! (true))), ! (! (! (! (! (true))))))), ((_GLF_IDENTITY(! (! (! (true))), ! (! (! (! (! (true)))))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)), ! (! (bool(bvec4(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(_GLF_IDENTITY(! (true), ! (_GLF_IDENTITY(! (! (true)), false || (! (! (true)))))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(! (true), bool(bvec2(_GLF_IDENTITY(! (true), ! (! (! (true)))), false))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec3(bvec4(_GLF_IDENTITY(bvec3(! (true), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec3(bvec4(bvec3(! (true), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false))), true)))), bool(bvec4(bool(_GLF_IDENTITY(bvec3(! (true), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec3(bvec4(bvec3(_GLF_IDENTITY(! (true), bool(bvec2(! (true), true))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true)))), true, _GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, ! (! (true)))))), _GLF_IDENTITY(false, (false) && true))))))), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), _GLF_IDENTITY(bvec2(bvec4(bvec2(_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(true, ! (! (true))), false, _GLF_TRUE(_GLF_IDENTITY(true, ! (! (true))), (_GLF_IDENTITY(injectionSwitch.x, 1.0 * (injectionSwitch.x)) < injectionSwitch.y)), true)), ! (! (bool(bvec4(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(_GLF_IDENTITY(! (true), true && (! (true))), false || (! (true))))), false, _GLF_TRUE(true, _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))).y), bool(bvec4(_GLF_IDENTITY((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))).y), true && ((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))).y))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true))), false || (_GLF_IDENTITY((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))).y), bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))).y), true && ((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))).y))), true && (_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))).y), true && ((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))).y))), (_GLF_IDENTITY((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))).y), true && _GLF_IDENTITY(((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))).y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))).y)))))) || false))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true)))))), true))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), false, true)), _GLF_IDENTITY(bvec2(bvec3(bvec2(bvec4(bvec2(_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(true, ! (! (true))), false, _GLF_TRUE(_GLF_IDENTITY(true, ! (! (true))), (injectionSwitch.x < injectionSwitch.y)), true)), ! (! (bool(bvec4(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), false || (! (true))))), false, _GLF_TRUE(true, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(-398.559, -5.3)) : injectionSwitch)).x < _GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))).y), bool(bvec4(_GLF_IDENTITY((injectionSwitch.x < _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))), clamp(_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))), _GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))), _GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))))).y), true && _GLF_IDENTITY(((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(0.0, 0.0) + (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))), _GLF_IDENTITY(vec2(mat2x4(_GLF_IDENTITY(vec2(0.0, 0.0) + (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))), max(vec2(0.0, 0.0) + (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))), vec2(0.0, 0.0) + (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))))), 0.0, 1.0, 1.0, 1.0, 1.0, 1.0)), (vec2(mat2x4(_GLF_IDENTITY(vec2(0.0, 0.0) + (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))), max(vec2(0.0, 0.0) + (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))), vec2(0.0, 0.0) + (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))))), 0.0, 1.0, 1.0, 1.0, 1.0, 1.0))) / vec2(1.0, 1.0)))).y)), (((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(0.0, 0.0) + (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))), _GLF_IDENTITY(vec2(mat2x4(_GLF_IDENTITY(vec2(0.0, 0.0) + (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))), max(vec2(0.0, 0.0) + (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))), vec2(0.0, 0.0) + (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))))), 0.0, 1.0, 1.0, 1.0, 1.0, 1.0)), (vec2(mat2x4(_GLF_IDENTITY(vec2(0.0, 0.0) + (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))), max(vec2(0.0, 0.0) + (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))), vec2(0.0, 0.0) + (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))))), 0.0, 1.0, 1.0, 1.0, 1.0, 1.0))) / vec2(1.0, 1.0)))).y))) && true)), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(1.3), _GLF_FUZZED(vec4(-519.831, -5.5, -472.378, -5.8).grbg.y)), bvec2(false, false))).x > injectionSwitch.y)), false, true)))), true))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), false, true)), true)), bvec2(bvec4(bvec2(bvec3(bvec2(bvec4(bvec2(_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(true, ! (! (true))), false, _GLF_TRUE(_GLF_IDENTITY(true, ! (! (true))), (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y)), true)), ! (! (bool(bvec4(_GLF_IDENTITY(true, _GLF_IDENTITY(! (_GLF_IDENTITY(! (true), false || (! (true)))), ! (_GLF_IDENTITY(! (! (_GLF_IDENTITY(! (true), false || (! (true))))), (! (! (_GLF_IDENTITY(! _GLF_IDENTITY((true), bool(bool((true)))), false || (! (true)))))) || false)))), false, _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))).y), bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))).y), ((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))).y)) && true), true && ((_GLF_IDENTITY(injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))).y, ! (! (_GLF_IDENTITY(injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))).y, bool(bvec3(injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))).y, true, false))))))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true)))), true))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), false, true)), true)), false, false))))))) || false))))), _GLF_struct_11(_GLF_struct_10(vec2(1.0), mat2(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(_GLF_IDENTITY(1.0, 1.0 * (1.0)), (_GLF_IDENTITY(1.0, _GLF_IDENTITY(1.0 * (1.0), mix(float(1.0 * (1.0)), float(_GLF_FUZZED(8.7)), bool(_GLF_IDENTITY(false, bool(bool(false)))))))) - determinant(mat4(0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, abs(0.0), 0.0, 0.0, 0.0, 1.0, 0.0)))) / 1.0)), bvec4(true), mat4x2(1.0)), vec4(1.0), gl_SubgroupInvocationID));
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, false || (false))) && _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) < injectionSwitch.y))), (injectionSwitch.x > injectionSwitch.y))))
    {
     for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
      {
       do
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
      }
    }
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 do
  {
   if(_GLF_DEAD(false))
    {
     for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != (38967 & 0)); _injected_loop_counter --)
      {
       for(int _injected_loop_counter = 0; _GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter < 1), true && (_GLF_WRAPPED_LOOP(_injected_loop_counter < 1))); _injected_loop_counter ++)
        {
         for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < ((1 << _GLF_IDENTITY(_GLF_IDENTITY(int(1), (_GLF_IDENTITY(int(1), (int(1)) - 0)) ^ 0), int(1))) >> _GLF_IDENTITY(int(1), int(1)))); _injected_loop_counter ++)
          {
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
            {
             barrier();
            }
           else
            {
            }
          }
         if(_GLF_WRAPPED_IF_TRUE(true))
          {
           for(int _injected_loop_counter = (0 << _GLF_IDENTITY(int(4), int(4))); _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
            {
             if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))))
              barrier();
            }
          }
         else
          {
          }
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           barrier();
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
          }
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_WRAPPED_IF_TRUE(true))
          {
           do
            {
             if(_GLF_DEAD(false))
              barrier();
             if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(_GLF_IDENTITY(true, bool(bvec4(true, false, false, _GLF_IDENTITY(true, (true) || false)))), (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)).y))))
              {
               if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(bvec3(_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (false))))))), bool(bool(_GLF_IDENTITY(! (false), false || (! (_GLF_IDENTITY(false, bool(bvec2(false, false))))))))), false, false)))))))
                barrier();
              }
             else
              {
              }
            }
           while(_GLF_WRAPPED_LOOP(false));
          }
         else
          {
          }
         if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(false || (false), (_GLF_IDENTITY(false || (false), (false || (false)) || false)) && true))))
          barrier();
        }
      }
    }
  }
 while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false))));
 if(_GLF_DEAD(false))
  {
   do
    {
     barrier();
    }
   while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
  }
 uint num_workgroup = gl_NumWorkGroups.x;
 if(_GLF_WRAPPED_IF_TRUE(true))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 else
  {
  }
 uint workgroup_size = gl_WorkGroupSize.x;
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(true && (false), bool(bvec4(true && (false), false, false, true))))))
  barrier();
 uint workgroup_id = gl_WorkGroupID.x;
 if(_GLF_DEAD(false))
  {
   do
    {
     barrier();
    }
   while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y))))))));
  }
 uint workgroup_base = _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_size, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(workgroup_size, uint(uvec2(workgroup_size, 1u)))), uint(uvec4(~ (_GLF_IDENTITY(workgroup_size, uint(uvec2(workgroup_size, 1u)))), 1u, 0u, 1u))))) * workgroup_id, (_GLF_IDENTITY(workgroup_size, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(workgroup_size, uint(uvec2(workgroup_size, 1u)))), uint(uvec4(~ (_GLF_IDENTITY(workgroup_size, uint(uvec2(workgroup_size, 1u)))), 1u, 0u, 1u))))) * workgroup_id) | 0u), _GLF_IDENTITY(clamp(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_size * workgroup_id, uint(uvec4(_GLF_IDENTITY(workgroup_size * workgroup_id, (_GLF_IDENTITY(workgroup_size * workgroup_id, ~ (~ (workgroup_size * workgroup_id)))) ^ 0u), _GLF_IDENTITY(1u, ~ (_GLF_IDENTITY(~ (1u), ~ (~ (~ (1u)))))), (0u >> _GLF_IDENTITY(_GLF_IDENTITY(uint(8u), 0u ^ (uint(8u))), uint(8u))), 1u))), ~ (~ (_GLF_IDENTITY(workgroup_size * _GLF_IDENTITY(workgroup_id, min(workgroup_id, _GLF_IDENTITY(workgroup_id, 0u | (workgroup_id)))), uint(uvec4(workgroup_size * workgroup_id, 1u, (0u >> _GLF_IDENTITY(uint(8u), _GLF_IDENTITY(uint(8u), min(uint(8u), uint(8u))))), _GLF_IDENTITY(1u, max(_GLF_IDENTITY(1u, uint(uvec2(_GLF_IDENTITY(1u, ~ (~ (1u))), 1u))), 1u)))))))), _GLF_IDENTITY(workgroup_size * workgroup_id, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(subgroup_size) : workgroup_size * workgroup_id)), workgroup_size * workgroup_id), (_GLF_IDENTITY(clamp(_GLF_IDENTITY(workgroup_size * workgroup_id, uint(uvec4(workgroup_size * workgroup_id, 1u, (0u >> _GLF_IDENTITY(uint(8u), uint(8u))), 1u))), workgroup_size * workgroup_id, workgroup_size * workgroup_id), 1u * (clamp(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_size * workgroup_id, (workgroup_size * workgroup_id) | 0u), uint(uvec4(workgroup_size * workgroup_id, 1u, (0u >> _GLF_IDENTITY(uint(8u), uint(8u))), 1u))), workgroup_size * workgroup_id, workgroup_size * workgroup_id)))) >> 0u));
 for(int _injected_loop_counter = (0 << _GLF_IDENTITY(int(6), _GLF_IDENTITY(int(6), (int(6)) | (int(6))))); _GLF_WRAPPED_LOOP(_injected_loop_counter < (1 & 1)); _injected_loop_counter ++)
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(4.5))) > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_WRAPPED_IF_TRUE(true))
  {
   if(_GLF_DEAD(false))
    barrier();
  }
 else
  {
  }
 uint virtual_gid = _GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, _GLF_IDENTITY((subgroup_id * subgroup_size) | (subgroup_id * subgroup_size), _GLF_IDENTITY(uint(uvec3((subgroup_id * subgroup_size) | (subgroup_id * subgroup_size), 1u, 1u)), (uint(uvec3((subgroup_id * subgroup_size) | (subgroup_id * subgroup_size), 1u, 1u))) | (uint(uvec3((subgroup_id * subgroup_size) | (subgroup_id * subgroup_size), 1u, 1u)))))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, _GLF_IDENTITY((subgroup_id * subgroup_size) | (subgroup_id * subgroup_size), ((subgroup_id * subgroup_size) | (subgroup_id * subgroup_size)) | (_GLF_IDENTITY((subgroup_id * subgroup_size) | (subgroup_id * subgroup_size), ((subgroup_id * subgroup_size) | (subgroup_id * subgroup_size)) << (0u & 72196u))))), (_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) | (subgroup_id * subgroup_size))) | uint(_GLF_ZERO(0.0, injectionSwitch.x))), _GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) | (subgroup_id * subgroup_size)), _GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) | (subgroup_id * subgroup_size)))) + _GLF_struct_replacement_12._f4.subgroup_local_id, min(_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size + _GLF_struct_replacement_12._f4.subgroup_local_id, max(_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, max(workgroup_base + subgroup_id * subgroup_size, workgroup_base + subgroup_id * subgroup_size)) + _GLF_struct_replacement_12._f4.subgroup_local_id, workgroup_base + subgroup_id * subgroup_size + _GLF_struct_replacement_12._f4.subgroup_local_id)), _GLF_IDENTITY(workgroup_base, (workgroup_base) - 0u) + subgroup_id * subgroup_size + _GLF_struct_replacement_12._f4.subgroup_local_id));
 uint next_virtual_gid = _GLF_IDENTITY(workgroup_base, (_GLF_IDENTITY(workgroup_base, (workgroup_base) / 1u)) << 0u) + subgroup_id * subgroup_size + ((_GLF_struct_replacement_12._f4.subgroup_local_id + 1) % subgroup_size);
 if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))
    {
     do
      {
       if(_GLF_DEAD(false))
        {
         do
          {
           barrier();
          }
         while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, 1.0 * (injectionSwitch.y))))));
        }
      }
     while(_GLF_WRAPPED_LOOP(false));
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(-87.49)), bool(false))), injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)))))))))))
        barrier();
      }
     else
      {
       barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          barrier();
        }
       else
        {
        }
      }
    }
  }
 else
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(bvec3(! (false), true, false)))))))
    barrier();
   if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))))
    {
    }
   else
    {
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
      {
       if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))) || false))
        barrier();
      }
     else
      {
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   for(int _injected_loop_counter = ((_GLF_IDENTITY(_GLF_IDENTITY(1, 0 ^ (1)), int(_GLF_IDENTITY(ivec4(1, 1, 1, ((1 | 1) ^ 1)), _GLF_IDENTITY((_GLF_IDENTITY(ivec4(1, 1, _GLF_IDENTITY(_GLF_IDENTITY(1, min(_GLF_IDENTITY(1, (1) + 0), _GLF_IDENTITY(1, int(_GLF_ONE(1.0, injectionSwitch.y)) * (1)))), max(_GLF_IDENTITY(1, min(_GLF_IDENTITY(1, (1) + 0), _GLF_IDENTITY(1, int(_GLF_ONE(1.0, injectionSwitch.y)) * (1)))), _GLF_IDENTITY(1, min(_GLF_IDENTITY(1, (1) + 0), _GLF_IDENTITY(1, int(_GLF_ONE(1.0, injectionSwitch.y)) * (1)))))), ((1 | 1) ^ 1)), min(ivec4(1, _GLF_IDENTITY(1, ~ (~ (_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) - 0)) + 0)))), _GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) - 0)) | 0), _GLF_IDENTITY(((1 | 1) ^ 1), (_GLF_IDENTITY(((1 | 1) ^ 1), (((1 | 1) ^ 1)) - 0)) >> (0 >> _GLF_IDENTITY(int(6), int(6))))), ivec4(1, 1, 1, ((1 | 1) ^ _GLF_IDENTITY(1, max(1, _GLF_IDENTITY(1, (1) >> 0)))))))) >> ivec4(0, 0, 0, 0), ((_GLF_IDENTITY(ivec4(1, 1, _GLF_IDENTITY(_GLF_IDENTITY(1, min(_GLF_IDENTITY(1, (1) + 0), _GLF_IDENTITY(1, int(_GLF_ONE(1.0, injectionSwitch.y)) * (1)))), max(_GLF_IDENTITY(1, min(_GLF_IDENTITY(1, (1) + 0), _GLF_IDENTITY(1, int(_GLF_ONE(1.0, injectionSwitch.y)) * (1)))), _GLF_IDENTITY(1, min(_GLF_IDENTITY(1, (1) + 0), _GLF_IDENTITY(1, int(_GLF_ONE(1.0, injectionSwitch.y)) * (1)))))), ((1 | 1) ^ 1)), min(ivec4(1, _GLF_IDENTITY(1, ~ (~ (_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) - 0)) + 0)))), _GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) - 0)) | 0), _GLF_IDENTITY(((1 | 1) ^ 1), (_GLF_IDENTITY(((1 | 1) ^ 1), (((1 | 1) ^ 1)) - 0)) >> (0 >> _GLF_IDENTITY(int(6), int(6))))), ivec4(1, 1, 1, ((1 | 1) ^ _GLF_IDENTITY(1, max(1, _GLF_IDENTITY(1, (1) >> 0)))))))) >> ivec4(0, 0, 0, 0)) >> ivec4(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)))))) << _GLF_IDENTITY(int(_GLF_IDENTITY(4, ~ _GLF_IDENTITY((~ (4)), max((~ (4)), (~ (4)))))), int(4))) >> _GLF_IDENTITY(int(4), int(4))); _GLF_WRAPPED_LOOP(_injected_loop_counter != (0 & -67529)); _injected_loop_counter --)
    {
     if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false))))))), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), bool(_GLF_IDENTITY(bool(_GLF_DEAD(false)), (bool(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))) && _GLF_IDENTITY(true, bool(_GLF_IDENTITY(bvec2(true, true), bvec2(bvec2(bvec2(true, true)))))))))))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     atomicStore(buf[next_virtual_gid], uint(_GLF_IDENTITY(1, (1) ^ 0)), _GLF_IDENTITY(4, (4) / (1 ^ 0)), _GLF_IDENTITY(64, (64) | (_GLF_IDENTITY(64, (64) / 1))), 4);
     if(_GLF_DEAD(false))
      {
       if(_GLF_WRAPPED_IF_TRUE(true))
        {
         if(_GLF_WRAPPED_IF_TRUE(true))
          {
           barrier();
          }
         else
          {
          }
        }
       else
        {
        }
      }
    }
  }
 if(_GLF_DEAD(false))
  {
   for(int _injected_loop_counter = _GLF_IDENTITY(1, (1) ^ 0); _GLF_WRAPPED_LOOP(_injected_loop_counter != int(_GLF_ZERO(_GLF_IDENTITY(0.0, float(_GLF_IDENTITY(mat2x4(0.0, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), sqrt(1.0), 1.0, exp(0.0), 1.0, 1.0, 1.0), mat2x4(mat2x4(mat2x4(0.0, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), sqrt(1.0), 1.0, exp(0.0), 1.0, 1.0, 1.0)))))), injectionSwitch.x))); _injected_loop_counter --)
    {
     if(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), bool(bvec2(_GLF_WRAPPED_IF_FALSE(false), false))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     else
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       do
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
        }
       while(_GLF_WRAPPED_LOOP(false));
       if(_GLF_DEAD(false))
        barrier();
      }
    }
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
    }
   else
    {
     if(_GLF_DEAD(false))
      barrier();
    }
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 uint read_1 = atomicLoad(buf[virtual_gid], _GLF_IDENTITY(4, ~ (~ (4))), 64, 0);
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))), _GLF_IDENTITY((_GLF_DEAD(false)), false || ((_GLF_DEAD(false)))) || false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_WRAPPED_IF_TRUE(true))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch)).y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), bool(_GLF_IDENTITY(bvec2(_GLF_DEAD(false), false), bvec2(bvec2(bvec2(_GLF_DEAD(false), false)))))), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), bool(_GLF_IDENTITY(bvec2(_GLF_DEAD(false), false), bvec2(bvec2(bvec2(_GLF_DEAD(false), false)))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)), (bool(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), bool(_GLF_IDENTITY(bvec2(_GLF_DEAD(false), false), bvec2(bvec2(bvec2(_GLF_DEAD(false), false)))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))) && true))))))
    {
     do
      {
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     while(_GLF_WRAPPED_LOOP(false));
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * abs(1.0))))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
      }
     else
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0))) - _GLF_IDENTITY(vec2(0.0, 0.0), (vec2(0.0, 0.0)) * vec2(1.0, 1.0))).x, clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0))) - vec2(0.0, 0.0)), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0))) - vec2(0.0, 0.0)), mix(vec2(_GLF_FUZZED(8.7), (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0))) - vec2(0.0, 0.0)))[1]), vec2((_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0))) - vec2(0.0, 0.0)))[0], _GLF_FUZZED(70.42)), bvec2(true, false)))) * vec2(1.0, 1.0)).x, _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + _GLF_IDENTITY(vec2(0.0, 0.0), vec2(1.0, 1.0) * (vec2(0.0, 0.0))))) - vec2(0.0, 0.0)).x, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0))) - vec2(0.0, 0.0)).x, 0.0 + (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0))) - vec2(0.0, 0.0), mix(vec2(_GLF_FUZZED(96.80), ((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0))) - vec2(0.0, 0.0))[1]), vec2(((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0))) - vec2(0.0, 0.0))[0], _GLF_FUZZED(189.177)), bvec2(true, false)))).x)))) > injectionSwitch.y), true && ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0))) - _GLF_IDENTITY(vec2(0.0, 0.0), (vec2(0.0, 0.0)) * vec2(1.0, 1.0))).x, clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0))) - vec2(0.0, 0.0)), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0))) - vec2(0.0, 0.0)), mix(vec2(_GLF_FUZZED(8.7), (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0))) - vec2(0.0, 0.0)))[1]), vec2((_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0))) - vec2(0.0, 0.0)))[0], _GLF_FUZZED(70.42)), bvec2(true, false)))) * vec2(1.0, 1.0)).x, _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + _GLF_IDENTITY(vec2(0.0, 0.0), vec2(1.0, 1.0) * (vec2(0.0, 0.0))))) - vec2(0.0, 0.0)).x, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0))) - vec2(0.0, 0.0)).x, 0.0 + (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0))) - vec2(0.0, 0.0), mix(vec2(_GLF_FUZZED(96.80), ((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0))) - vec2(0.0, 0.0))[1]), vec2(((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0))) - vec2(0.0, 0.0))[0], _GLF_FUZZED(189.177)), bvec2(true, false)))).x)))) > injectionSwitch.y))))))
        {
         do
          {
           barrier();
          }
         while(_GLF_WRAPPED_LOOP(false));
        }
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_WRAPPED_IF_TRUE(true))
      {
       barrier();
      }
     else
      {
      }
    }
   for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != ((0 & 74112) & ivec4(-99339, -41202, 90550, -18573).z)); _injected_loop_counter --)
    {
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec3(bvec2(false, false), true))))), true && (false))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, ! (! (false)))))
      {
      }
     else
      {
       barrier();
      }
    }
   do
    {
     do
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(1758.0309) : injectionSwitch.y))) * 1.0)))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
           for(int _injected_loop_counter = _GLF_IDENTITY(1, (1) >> 0); _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter != 0, false || (_injected_loop_counter != 0))); _injected_loop_counter --)
            {
             barrier();
            }
          }
         barrier();
        }
       if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
        barrier();
       do
        {
         if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), (! ((injectionSwitch.x > injectionSwitch.y))) && _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true && (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
            {
             if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, false, false)))))
              {
               if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))))))
                barrier();
               barrier();
              }
            }
           if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, float(mat2(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), 1.0, 1.0, 1.0)))) - 0.0)))))
            {
            }
           else
            {
             if(_GLF_DEAD(false))
              barrier();
            }
           if(_GLF_WRAPPED_IF_FALSE(false))
            {
            }
           else
            {
             for(int _injected_loop_counter = (_GLF_IDENTITY(_GLF_IDENTITY((1 << _GLF_IDENTITY(int(4), int(4))), int(int(_GLF_IDENTITY((1 << _GLF_IDENTITY(int(4), int(4))), ((1 << _GLF_IDENTITY(int(4), int(4)))) >> int(_GLF_ZERO(0.0, injectionSwitch.x)))))), _GLF_IDENTITY(((1 << _GLF_IDENTITY(int(4), int(4)))), min(((1 << _GLF_IDENTITY(int(4), int(4)))), ((1 << _GLF_IDENTITY(_GLF_IDENTITY(int(4), int(4)), (_GLF_IDENTITY(int(4), int(4))) | 0))))) * 1) >> _GLF_IDENTITY(int(4), int(4))); _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter > _GLF_IDENTITY(((0 & _GLF_IDENTITY(38478, (_GLF_IDENTITY(38478, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? 38478 : _GLF_FUZZED(-25802)))) >> 0)) >> _GLF_IDENTITY(int(_GLF_IDENTITY(4, int(ivec3(4, 1, 0)))), int(4))), clamp(_GLF_IDENTITY(((0 & _GLF_IDENTITY(38478, (_GLF_IDENTITY(38478, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? 38478 : _GLF_FUZZED(-25802)))) >> 0)) >> _GLF_IDENTITY(int(_GLF_IDENTITY(4, int(ivec3(4, 1, 0)))), int(4))), (((0 & _GLF_IDENTITY(38478, (_GLF_IDENTITY(38478, (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? 38478 : _GLF_FUZZED(-25802), int(int(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? 38478 : _GLF_FUZZED(-25802), (true ? _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? 38478 : _GLF_FUZZED(-25802) : _GLF_FUZZED(_injected_loop_counter))))))))) >> 0)) >> _GLF_IDENTITY(int(_GLF_IDENTITY(4, int(ivec3(4, 1, 0)))), int(4)))) - 0), ((0 & _GLF_IDENTITY(_GLF_IDENTITY(38478, 0 | (38478)), (_GLF_IDENTITY(38478, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? 38478 : _GLF_FUZZED(-25802)))) >> 0)) >> _GLF_IDENTITY(int(_GLF_IDENTITY(4, int(ivec3(4, 1, 0)))), int(4))), (_GLF_IDENTITY((0 & _GLF_IDENTITY(38478, (_GLF_IDENTITY(38478, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? 38478 : _GLF_FUZZED(-25802)))) >> 0)) >> _GLF_IDENTITY(int(_GLF_IDENTITY(4, int(ivec3(4, 1, 0)))), int(4)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(_injected_loop_counter) : (0 & _GLF_IDENTITY(38478, (_GLF_IDENTITY(38478, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? 38478 : _GLF_FUZZED(-25802)))) >> 0)) >> _GLF_IDENTITY(int(_GLF_IDENTITY(4, int(ivec3(4, 1, 0)))), int(4))))))), (_GLF_IDENTITY(_injected_loop_counter > _GLF_IDENTITY(((0 & _GLF_IDENTITY(38478, (_GLF_IDENTITY(38478, (_GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), bool(bool((injectionSwitch.x < injectionSwitch.y))))) ? 38478 : _GLF_FUZZED(-25802)))) >> 0)) >> _GLF_IDENTITY(int(_GLF_IDENTITY(4, int(ivec3(_GLF_IDENTITY(4, (4) << 0), 1, 0)))), int(_GLF_IDENTITY(4, clamp(4, _GLF_IDENTITY(4, ~ (~ (4))), 4))))), clamp(_GLF_IDENTITY(((0 & _GLF_IDENTITY(38478, (_GLF_IDENTITY(38478, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? 38478 : _GLF_FUZZED(-25802)))) >> 0)) >> _GLF_IDENTITY(int(_GLF_IDENTITY(4, int(ivec3(4, 1, 0)))), int(4))), (((0 & _GLF_IDENTITY(38478, (_GLF_IDENTITY(38478, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? 38478 : _GLF_FUZZED(-25802)))) >> 0)) >> _GLF_IDENTITY(int(_GLF_IDENTITY(4, _GLF_IDENTITY(int(ivec3(_GLF_IDENTITY(4, (_GLF_IDENTITY(4, (_GLF_IDENTITY(4, int(ivec2(4, 0)))) >> 0)) >> 0), 1, 0)), (int(ivec3(_GLF_IDENTITY(4, (_GLF_IDENTITY(4, (_GLF_IDENTITY(4, int(ivec2(4, 0)))) >> 0)) >> 0), 1, 0))) - 0))), int(4)))) - 0), ((0 & _GLF_IDENTITY(38478, (_GLF_IDENTITY(38478, (_GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), bool(bvec4(_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ! (! ((injectionSwitch.x < injectionSwitch.y)))), true, true, false)))) ? 38478 : _GLF_FUZZED(-25802)))) >> 0)) >> _GLF_IDENTITY(int(_GLF_IDENTITY(4, int(ivec3(4, 1, 0)))), _GLF_IDENTITY(int(4), min(_GLF_IDENTITY(int(4), (_GLF_IDENTITY(int(4), min(int(4), int(4)))) * 1), int(4))))), ((0 & _GLF_IDENTITY(38478, (_GLF_IDENTITY(38478, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? 38478 : _GLF_FUZZED(-25802)))) >> 0)) >> _GLF_IDENTITY(int(_GLF_IDENTITY(4, int(ivec3(4, 1, 0)))), int(4))))), ! (! (_injected_loop_counter > _GLF_IDENTITY(((_GLF_IDENTITY(0, min(_GLF_IDENTITY(0, (0) | (0)), 0)) & _GLF_IDENTITY(_GLF_IDENTITY(38478, (38478) + 0), (_GLF_IDENTITY(38478, (_GLF_TRUE(_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, ! (! (true)))))), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (! (injectionSwitch.x < injectionSwitch.y))))), (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, bool(bool(injectionSwitch.x < injectionSwitch.y)))) || false))) ? 38478 : _GLF_FUZZED(-25802)))) >> _GLF_IDENTITY(0, min(_GLF_IDENTITY(0, min(0, 0)), 0)))) >> _GLF_IDENTITY(int(_GLF_IDENTITY(4, int(ivec3(4, 1, 0)))), int(4))), clamp(_GLF_IDENTITY(((0 & _GLF_IDENTITY(_GLF_IDENTITY(38478, 0 ^ (38478)), (_GLF_IDENTITY(38478, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? 38478 : _GLF_FUZZED(-25802)))) >> 0)) >> _GLF_IDENTITY(int(_GLF_IDENTITY(_GLF_IDENTITY(4, (4) | (4)), int(ivec3(4, 1, 0)))), int(4))), (_GLF_IDENTITY(((0 & _GLF_IDENTITY(_GLF_IDENTITY(38478, (_GLF_IDENTITY(38478, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? 38478 : _GLF_FUZZED(-25802)))) >> 0), int(ivec3(_GLF_IDENTITY(38478, (_GLF_IDENTITY(38478, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? 38478 : _GLF_FUZZED(-25802)))) >> 0), 1, int(_GLF_ZERO(0.0, injectionSwitch.x)))))) >> _GLF_IDENTITY(int(_GLF_IDENTITY(4, int(ivec3(4, 1, 0)))), int(4))), ~ (~ (((0 & _GLF_IDENTITY(_GLF_IDENTITY(38478, (_GLF_IDENTITY(38478, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? 38478 : _GLF_FUZZED(-25802)))) >> 0), int(ivec3(_GLF_IDENTITY(38478, (_GLF_IDENTITY(38478, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? 38478 : _GLF_FUZZED(-25802)))) >> 0), 1, int(_GLF_ZERO(0.0, injectionSwitch.x)))))) >> _GLF_IDENTITY(int(_GLF_IDENTITY(4, int(ivec3(4, 1, 0)))), int(4))))))) - 0), ((0 & _GLF_IDENTITY(38478, (_GLF_IDENTITY(38478, (_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(vec3(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), 0.0)), mat2(1.0) * (vec2(vec3(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), 0.0))))).y)) ? 38478 : _GLF_FUZZED(-25802)))) >> 0)) >> _GLF_IDENTITY(int(_GLF_IDENTITY(4, int(ivec3(4, 1, 0)))), int(4))), ((0 & _GLF_IDENTITY(_GLF_IDENTITY(38478, (_GLF_IDENTITY(_GLF_IDENTITY(38478, min(38478, 38478)), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? 38478 : _GLF_FUZZED(-25802)))) >> 0), (_GLF_IDENTITY(_GLF_IDENTITY(38478, (_GLF_IDENTITY(_GLF_IDENTITY(38478, min(38478, 38478)), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? 38478 : _GLF_FUZZED(-25802)))) >> 0), (_GLF_IDENTITY(38478, (_GLF_IDENTITY(_GLF_IDENTITY(38478, min(38478, 38478)), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? 38478 : _GLF_FUZZED(-25802)))) >> 0)) | 0)) << 0)) >> _GLF_IDENTITY(_GLF_IDENTITY(int(_GLF_IDENTITY(4, int(ivec3(4, 1, 0)))), int(4)), clamp(_GLF_IDENTITY(int(_GLF_IDENTITY(4, int(ivec3(4, 1, _GLF_IDENTITY(0, ~ (_GLF_IDENTITY(~ (0), min(~ (0), ~ (0))))))))), _GLF_IDENTITY(int(4), ~ (~ (int(4))))), _GLF_IDENTITY(_GLF_IDENTITY(int(_GLF_IDENTITY(4, int(ivec3(4, 1, 0)))), int(4)), _GLF_IDENTITY(clamp(_GLF_IDENTITY(int(_GLF_IDENTITY(4, int(ivec3(4, 1, 0)))), int(4)), _GLF_IDENTITY(int(_GLF_IDENTITY(4, int(ivec3(4, 1, 0)))), int(4)), _GLF_IDENTITY(int(_GLF_IDENTITY(4, int(ivec3(4, 1, 0)))), int(4))), (_GLF_IDENTITY(clamp(_GLF_IDENTITY(int(_GLF_IDENTITY(4, int(ivec3(4, 1, 0)))), int(4)), _GLF_IDENTITY(int(_GLF_IDENTITY(4, int(ivec3(4, 1, 0)))), int(4)), _GLF_IDENTITY(int(_GLF_IDENTITY(4, int(ivec3(4, 1, 0)))), int(4))), 0 ^ (clamp(_GLF_IDENTITY(int(_GLF_IDENTITY(4, int(ivec3(4, 1, 0)))), int(4)), _GLF_IDENTITY(int(_GLF_IDENTITY(4, int(ivec3(4, 1, 0)))), int(4)), _GLF_IDENTITY(int(_GLF_IDENTITY(4, int(ivec3(4, 1, 0)))), int(4)))))) - 0)), _GLF_IDENTITY(int(_GLF_IDENTITY(4, int(ivec3(4, 1, 0)))), int(4))))))))))) || false)); _injected_loop_counter --)
              {
               barrier();
               if(_GLF_DEAD(false))
                barrier();
               do
                {
                 for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < int(_GLF_ONE(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(6620.1533)), bool(false))), injectionSwitch.y))); _injected_loop_counter ++)
                  {
                   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) / vec2(1.0, 1.0), mix(vec2(((injectionSwitch) / vec2(1.0, 1.0))[0], _GLF_FUZZED(-4.5)), vec2(_GLF_FUZZED((+ 9.1)), ((injectionSwitch) / vec2(1.0, 1.0))[1]), bvec2(false, true)))).y))))
                    {
                     if(_GLF_DEAD(false))
                      barrier();
                     do
                      {
                       do
                        {
                         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                          {
                           for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < (1 | 1)); _injected_loop_counter ++)
                            {
                             barrier();
                            }
                          }
                        }
                       while(_GLF_WRAPPED_LOOP(false));
                       do
                        {
                         barrier();
                        }
                       while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, false || (false))))));
                      }
                     while(_GLF_WRAPPED_LOOP(false));
                    }
                  }
                }
               while(_GLF_WRAPPED_LOOP(false));
               if(_GLF_WRAPPED_IF_TRUE(true))
                {
                 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
                  barrier();
                }
               else
                {
                }
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                {
                 do
                  {
                   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                    {
                     if(_GLF_WRAPPED_IF_TRUE(true))
                      {
                       barrier();
                      }
                     else
                      {
                      }
                    }
                  }
                 while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
                 barrier();
                }
              }
            }
           do
            {
             if(_GLF_DEAD(false))
              barrier();
            }
           while(_GLF_WRAPPED_LOOP(false));
          }
        }
       while(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, true && (false))), false || (_GLF_WRAPPED_LOOP(false))), _GLF_IDENTITY(false, (false) && true) || (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(false), _GLF_IDENTITY(false, (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec2(false, false)))) || false)) || false) || (_GLF_WRAPPED_LOOP(false))))), (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(false), ! (! (_GLF_WRAPPED_LOOP(false))))) || _GLF_IDENTITY(false, ! (! _GLF_IDENTITY((false), false || ((false)))))));
      }
     while(_GLF_WRAPPED_LOOP(false));
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0)))))
      barrier();
    }
   while(_GLF_WRAPPED_LOOP(false));
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! _GLF_IDENTITY((false), true && ((false)))))))), (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 else
  {
   if(_GLF_DEAD(false))
    barrier();
  }
 atomicStore(buf[next_virtual_gid], uint(_GLF_IDENTITY(read_1, 0u ^ (read_1)) + 1), 4, 64, 4);
 if(_GLF_WRAPPED_IF_TRUE(true))
  {
   if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
          }
         else
          {
           barrier();
          }
        }
       if(_GLF_DEAD(false))
        barrier();
       do
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
           if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
            {
             do
              {
               barrier();
              }
             while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
            }
           for(int _injected_loop_counter = (0 ^ (0 << _GLF_IDENTITY(int(4), int(4)))); _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter, (_injected_loop_counter) ^ 0) < 1); _injected_loop_counter ++)
            {
             if(_GLF_DEAD(false))
              barrier();
             if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))), bool(bvec4(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))), false, true, false))))
              {
               if(_GLF_DEAD(false))
                barrier();
               barrier();
              }
             if(_GLF_DEAD(false))
              barrier();
            }
           if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            {
            }
           else
            {
             if(_GLF_DEAD(false))
              barrier();
            }
           barrier();
          }
        }
       while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
       if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(_GLF_IDENTITY(true, bool(bvec2(true, false))), bool(bvec3(_GLF_IDENTITY(true, bool(bvec2(true, false))), false, true)))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
           if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
            {
             barrier();
            }
           else
            {
            }
          }
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if(_GLF_WRAPPED_IF_TRUE(true))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           barrier();
          }
         else
          {
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_DEAD(false))
            barrier();
          }
         if(_GLF_DEAD(false))
          {
           do
            {
             barrier();
             if(_GLF_DEAD(false))
              barrier();
            }
           while(_GLF_WRAPPED_LOOP(_GLF_FALSE(_GLF_IDENTITY(false, true && (false)), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / cos(_GLF_IDENTITY(0.0, max(0.0, 0.0))))))));
          }
        }
       else
        {
        }
      }
     if(_GLF_DEAD(false))
      barrier();
    }
   else
    {
    }
  }
 else
  {
  }
 if(_GLF_DEAD(false))
  barrier();
}
