#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


struct _GLF_struct_27 {
 vec2 _f0;
 bvec2 _f1;
 bvec3 _f2;
} ;

struct _GLF_struct_26 {
 mat2x4 _f0;
 mat4 _f1;
 int _f2;
 mat4 _f3;
 uvec4 _f4;
 mat4 _f5;
 mat2x3 _f6;
} ;

struct _GLF_struct_28 {
 _GLF_struct_26 _f0;
 uint _f1;
 ivec2 _f2;
 bvec4 _f3;
 uint _f4;
 _GLF_struct_27 _f5;
} ;

struct _GLF_struct_24 {
 vec4 _f0;
 mat3x4 _f1;
 mat3 _f2;
 vec4 _f3;
} ;

struct _GLF_struct_23 {
 mat3 _f0;
 vec2 _f1;
} ;

struct _GLF_struct_22 {
 mat4x3 _f0;
 mat4 _f1;
 mat2 _f2;
 mat4 _f3;
 mat2x4 _f4;
} ;

struct _GLF_struct_21 {
 bvec3 _f0;
 mat3x4 _f1;
 ivec3 _f2;
} ;

struct _GLF_struct_25 {
 _GLF_struct_21 _f0;
 _GLF_struct_22 _f1;
 _GLF_struct_23 _f2;
 _GLF_struct_24 _f3;
} ;

struct _GLF_struct_29 {
 uint _f0;
 _GLF_struct_25 _f1;
 uint virtual_gid;
 _GLF_struct_28 _f2;
 ivec4 _f3;
 mat3x4 _f4;
} ;

struct _GLF_struct_18 {
 ivec2 _f0;
 mat4x3 _f1;
 mat2x3 _f2;
 mat3 _f3;
 mat3x2 _f4;
 vec3 _f5;
 vec4 _f6;
} ;

struct _GLF_struct_17 {
 mat4 _f0;
 mat3 _f1;
} ;

struct _GLF_struct_19 {
 _GLF_struct_17 _f0;
 _GLF_struct_18 _f1;
 bool _f2;
 mat3 _f3;
} ;

struct _GLF_struct_15 {
 uint workgroup_base;
 mat3x4 _f0;
 uvec2 _f1;
 mat2 _f2;
 uvec3 _f3;
 bvec4 _f4;
 mat4 _f5;
 vec3 _f6;
} ;

struct _GLF_struct_16 {
 mat4 _f0;
 mat3x4 _f1;
 float _f2;
 _GLF_struct_15 _f3;
} ;

struct _GLF_struct_13 {
 uint _f0;
 ivec4 _f1;
 uvec4 _f2;
} ;

struct _GLF_struct_14 {
 _GLF_struct_13 _f0;
} ;

struct _GLF_struct_11 {
 mat2 _f0;
 float _f1;
 float _f2;
 bool _f3;
 bool _f4;
 mat3x2 _f5;
 mat4x3 _f6;
} ;

struct _GLF_struct_12 {
 _GLF_struct_11 _f0;
} ;

struct _GLF_struct_9 {
 uvec2 _f0;
 bvec4 _f1;
 ivec3 _f2;
 int _f3;
 mat2 _f4;
} ;

struct _GLF_struct_10 {
 _GLF_struct_9 _f0;
 ivec2 _f1;
 mat3x2 _f2;
 mat4x2 _f3;
} ;

struct _GLF_struct_20 {
 _GLF_struct_10 _f0;
 _GLF_struct_12 _f1;
 _GLF_struct_14 _f2;
 _GLF_struct_16 _f3;
 uvec4 _f4;
 _GLF_struct_19 _f5;
 mat3 _f6;
} ;

struct _GLF_struct_6 {
 mat3x4 _f0;
 ivec3 _f1;
} ;

struct _GLF_struct_7 {
 bvec2 _f0;
 uint num_workgroup;
 _GLF_struct_6 _f1;
} ;

struct _GLF_struct_4 {
 mat3x4 _f0;
} ;

struct _GLF_struct_3 {
 mat4x3 _f0;
 bool _f1;
 mat3x4 _f2;
 mat2 _f3;
 ivec4 _f4;
 uint _f5;
 mat2x3 _f6;
} ;

struct _GLF_struct_2 {
 uvec4 _f0;
} ;

struct _GLF_struct_5 {
 _GLF_struct_2 _f0;
 mat3x4 _f1;
 mat4x3 _f2;
 _GLF_struct_3 _f3;
 _GLF_struct_4 _f4;
} ;

struct _GLF_struct_0 {
 int _f0;
} ;

struct _GLF_struct_1 {
 mat3 _f0;
 _GLF_struct_0 _f1;
 uint _f2;
} ;

struct _GLF_struct_8 {
 vec4 _f0;
 vec2 _f1;
 mat2x4 _f2;
 vec3 _f3;
 _GLF_struct_1 _f4;
 _GLF_struct_5 _f5;
 _GLF_struct_7 _f6;
} ;

layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   return;
  }
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))), _GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! _GLF_IDENTITY((! _GLF_IDENTITY((false), _GLF_IDENTITY(bool(bool((false))), ! (_GLF_IDENTITY(! (bool(bool((false)))), bool(bvec4(! (bool(bool((false)))), false, false, true))))))), ((! _GLF_IDENTITY((false), _GLF_IDENTITY(bool(bool((false))), ! (_GLF_IDENTITY(! (bool(bool((false)))), bool(bvec4(! (bool(bool((false)))), false, false, true)))))))) || false))))) || (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))), (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false))))) && true)) && true)), true && _GLF_IDENTITY((false || (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))), (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false))))) && true))), ((false || (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))), (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false))))) && true)))) && true))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, true)))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
   return;
  }
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(false || (_GLF_DEAD(false)), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(false, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))) || (_GLF_DEAD(false)), true && (_GLF_IDENTITY(false || (_GLF_DEAD(false)), (false || (_GLF_DEAD(false))) || false))))))), true, _GLF_IDENTITY(false, bool(bvec2(false, true))))), _GLF_IDENTITY(! (! (bool(bvec3(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)), false || (_GLF_DEAD(false))), true, false)))), _GLF_IDENTITY(bool(bvec2(! (! (bool(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))), true, false)))), false)), ! (_GLF_IDENTITY(! (bool(bvec2(! (! (bool(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))), true, false)))), false))), bool(bvec3(! (bool(bvec2(! (! (bool(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))), true, false)))), false))), true, false))))))), bool(bvec4(_GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))), true, _GLF_IDENTITY(false, bool(bvec2(false, true))))), _GLF_IDENTITY(! (! (bool(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))), true, false)))), _GLF_IDENTITY(bool(bvec2(! (! (bool(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))), true, false)))), false)), bool(bvec3(bool(bvec2(! (! (bool(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))), true, false)))), false)), true, true))))), false, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))
  return;
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), max(_GLF_IDENTITY((injectionSwitch) * mat2(1.0), ((injectionSwitch) * mat2(1.0)) / vec2(1.0, 1.0)), (injectionSwitch) * mat2(1.0)))).y)), _GLF_IDENTITY(! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true))), (! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false)) && true)))) || false))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(float(70523))), float(_GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_IDENTITY(_GLF_FUZZED(float(100119u)), mix(float(_GLF_FUZZED(-1.9)), float(_GLF_FUZZED(float(100119u))), bool(true)))), bool(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(-9.3)))).x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-8.7)), bool(false))) > injectionSwitch.y), ! (! _GLF_IDENTITY(((_GLF_IDENTITY(injectionSwitch.x, mix(_GLF_IDENTITY(float(injectionSwitch.x), 1.0 * (float(injectionSwitch.x))), float(_GLF_FUZZED(-8.7)), bool(false))) > injectionSwitch.y)), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(((_GLF_IDENTITY(injectionSwitch.x, mix(_GLF_IDENTITY(float(injectionSwitch.x), 1.0 * (float(injectionSwitch.x))), float(_GLF_FUZZED(-8.7)), bool(false))) > injectionSwitch.y)), (((_GLF_IDENTITY(injectionSwitch.x, mix(_GLF_IDENTITY(float(injectionSwitch.x), 1.0 * (float(injectionSwitch.x))), float(_GLF_FUZZED(-8.7)), bool(false))) > injectionSwitch.y))) && true), false, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bool(bvec4(bool(bvec4(_GLF_IDENTITY(((_GLF_IDENTITY(injectionSwitch.x, mix(_GLF_IDENTITY(float(injectionSwitch.x), 1.0 * (float(injectionSwitch.x))), float(_GLF_FUZZED(-8.7)), bool(false))) > injectionSwitch.y)), (((_GLF_IDENTITY(injectionSwitch.x, mix(_GLF_IDENTITY(float(injectionSwitch.x), 1.0 * (float(injectionSwitch.x))), float(_GLF_FUZZED(-8.7)), bool(false))) > injectionSwitch.y))) && true), false, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true, false, false))))))))))), bool(_GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), bool(bvec2((injectionSwitch.x < injectionSwitch.y), false))))))), ! (! (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(float(70523))), float(_GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(float(100119u))), bool(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(mix(float(injectionSwitch.x), float(_GLF_FUZZED(-8.7)), bool(false)), min(_GLF_IDENTITY(mix(float(injectionSwitch.x), float(_GLF_FUZZED(-8.7)), bool(false)), float(mat3x4(mix(float(injectionSwitch.x), float(_GLF_FUZZED(-8.7)), bool(false)), 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, cos(0.0), 1.0, 1.0, 0.0, 1.0))), mix(float(injectionSwitch.x), float(_GLF_FUZZED(-8.7)), bool(false))))) > _GLF_IDENTITY(injectionSwitch.y, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch.y : _GLF_FUZZED(-96.74)))), ! (! ((_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-8.7)), bool(false))) > injectionSwitch.y))))))))), bool(_GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), bool(bvec2((injectionSwitch.x < injectionSwitch.y), false))))))), ! (! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(float(70523))), float(_GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(float(100119u))), bool(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-8.7)), bool(false))) > injectionSwitch.y), ! (! ((_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_IDENTITY(_GLF_FUZZED(-8.7), (_GLF_FUZZED(-8.7)) - 0.0)), bool(false))) > injectionSwitch.y))))))))), bool(_GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), bool(bvec2((injectionSwitch.x < injectionSwitch.y), false)))))))))))))), false || ((_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(float(70523))), float(_GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_IDENTITY(_GLF_FUZZED(float(100119u)), mix(float(_GLF_FUZZED(-1.9)), float(_GLF_FUZZED(float(100119u))), bool(true)))), bool(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(-9.3)))).x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-8.7)), bool(false))) > injectionSwitch.y), ! (! _GLF_IDENTITY(((_GLF_IDENTITY(injectionSwitch.x, mix(_GLF_IDENTITY(float(injectionSwitch.x), 1.0 * (float(injectionSwitch.x))), float(_GLF_FUZZED(_GLF_IDENTITY(-8.7, (true ? -8.7 : _GLF_FUZZED(57.58))))), bool(false))) > injectionSwitch.y)), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(((_GLF_IDENTITY(injectionSwitch.x, mix(_GLF_IDENTITY(float(injectionSwitch.x), 1.0 * (float(injectionSwitch.x))), float(_GLF_FUZZED(-8.7)), bool(false))) > injectionSwitch.y)), (((_GLF_IDENTITY(injectionSwitch.x, mix(_GLF_IDENTITY(float(injectionSwitch.x), 1.0 * (float(injectionSwitch.x))), float(_GLF_FUZZED(-8.7)), bool(false))) > injectionSwitch.y))) && true), false, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bool(bvec4(bool(bvec4(_GLF_IDENTITY(((_GLF_IDENTITY(injectionSwitch.x, mix(_GLF_IDENTITY(_GLF_IDENTITY(float(injectionSwitch.x), 1.0 * (float(injectionSwitch.x))), mix(float(_GLF_FUZZED(319.469)), float(_GLF_IDENTITY(float(injectionSwitch.x), 1.0 * (float(injectionSwitch.x)))), bool(true))), float(_GLF_FUZZED(-8.7)), bool(false))) > injectionSwitch.y)), (((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat2(injectionSwitch, 1.0, 1.0), (true ? mat2(injectionSwitch, 1.0, 1.0) : _GLF_FUZZED((mat4x2(584.615, -76.24, -9646.7579, -7616.9250, -770.462, 510.639, 156.250, -125.353) * mat2x4(4.4, 21.54, -734.827, -1.4, 5.1, 84.10, 3524.6137, -63.40))))))).x, mix(_GLF_IDENTITY(float(injectionSwitch.x), 1.0 * (float(injectionSwitch.x))), float(_GLF_FUZZED(-8.7)), bool(false))) > injectionSwitch.y))) && true), false, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true, false, false))))))))))), bool(_GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), bool(bvec2((injectionSwitch.x < injectionSwitch.y), false))))))), ! (! (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(float(70523))), float(_GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(float(100119u))), bool(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-8.7)), bool(false))) > _GLF_IDENTITY(injectionSwitch.y, (_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (! (injectionSwitch.x < injectionSwitch.y))))) ? injectionSwitch.y : _GLF_FUZZED(-96.74)))), ! (! ((_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-8.7)), bool(false))) > injectionSwitch.y))))))))), bool(_GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), bool(bvec2((injectionSwitch.x < injectionSwitch.y), false))))))), ! (! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(float(70523))), float(_GLF_IDENTITY(injectionSwitch.y, mix(_GLF_IDENTITY(float(injectionSwitch.y), float(float(float(injectionSwitch.y)))), float(_GLF_FUZZED(float(100119u))), bool(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-8.7)), bool(false))) > injectionSwitch.y), ! (! ((_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_IDENTITY(_GLF_FUZZED(-8.7), (_GLF_FUZZED(-8.7)) - 0.0)), bool(false))) > injectionSwitch.y))))))))), bool(_GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), bool(bvec2((injectionSwitch.x < injectionSwitch.y), false)))))))))))))))))))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)))).x > injectionSwitch.y)), bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true)))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))
    return;
  }
 if(_GLF_DEAD(false))
  return;
 _GLF_struct_8 _GLF_struct_replacement_8 = _GLF_struct_8(vec4(1.0), _GLF_IDENTITY(vec2(1.0), _GLF_IDENTITY(vec2(_GLF_IDENTITY(mat2x4(vec2(1.0), length(vec2(0.0, 0.0)), 1.0, 1.0, 0.0, 0.0, 1.0), (mat2x4(vec2(1.0), length(_GLF_IDENTITY(vec2(0.0, 0.0), vec2(0.0, 0.0) + (vec2(0.0, 0.0)))), 1.0, 1.0, 0.0, 0.0, 1.0)) - mat2x4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))), vec2(mat3(vec2(_GLF_IDENTITY(mat2x4(vec2(1.0), length(vec2(0.0, 0.0)), 1.0, 1.0, 0.0, 0.0, 1.0), (mat2x4(vec2(1.0), length(vec2(0.0, 0.0)), _GLF_IDENTITY(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(-0.3)), bool(false)))) * 1.0), min(1.0, 1.0)), _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_IDENTITY(_GLF_FUZZED(5176.1140), max(_GLF_IDENTITY(_GLF_FUZZED(5176.1140), float(float(_GLF_FUZZED(5176.1140)))), _GLF_FUZZED(5176.1140)))), bool(false))), 0.0, _GLF_IDENTITY(0.0, max(0.0, _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-63.01)), bool(false))))), 1.0)) - mat2x4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, min(0.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)))), 0.0))), 0.0, _GLF_IDENTITY(0.0, float(mat3(_GLF_IDENTITY(0.0, (0.0) / 1.0), 1.0, 1.0, 1.0, 1.0, 0.0, _GLF_IDENTITY(determinant(mat4(1.0, 0.0, exp(0.0), 0.0, 0.0, determinant(mat4(1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, _GLF_IDENTITY(0.0, (0.0) - 0.0), 0.0, 0.0, 1.0)), 0.0, 0.0, 0.0, 0.0, exp(0.0), 0.0, 0.0, 0.0, 0.0, 1.0)), _GLF_IDENTITY((false ? _GLF_FUZZED(-0.8) : determinant(mat4(1.0, 0.0, exp(0.0), 0.0, 0.0, determinant(mat4(1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0)), 0.0, 0.0, 0.0, 0.0, exp(0.0), 0.0, 0.0, 0.0, 0.0, 1.0))), _GLF_IDENTITY(float(mat4x3((false ? _GLF_FUZZED(-0.8) : determinant(mat4(1.0, 0.0, exp(0.0), 0.0, 0.0, determinant(mat4(1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0)), 0.0, 0.0, 0.0, 0.0, exp(0.0), 0.0, 0.0, 0.0, 0.0, 1.0))), 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, log(1.0), 1.0, abs(1.0), 1.0)), mix(float(_GLF_FUZZED(-0.5)), float(float(mat4x3((false ? _GLF_FUZZED(-0.8) : determinant(mat4(1.0, 0.0, exp(0.0), 0.0, 0.0, determinant(mat4(1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0)), 0.0, 0.0, 0.0, 0.0, exp(0.0), 0.0, 0.0, 0.0, 0.0, 1.0))), 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, log(1.0), 1.0, abs(1.0), 1.0))), bool(true))))), 1.0, exp(0.0)))), 0.0, 0.0, _GLF_IDENTITY(1.0, min(1.0, 1.0)), 0.0, 1.0)))), mat2x4(1.0), vec3(1.0), _GLF_struct_1(mat3(1.0), _GLF_struct_0(_GLF_IDENTITY(1, ~ (~ (1)))), 1u), _GLF_struct_5(_GLF_struct_2(uvec4(1u)), mat3x4(1.0), mat4x3(1.0), _GLF_struct_3(mat4x3(1.0), true, mat3x4(1.0), _GLF_IDENTITY(mat2(1.0), transpose(_GLF_IDENTITY(transpose(mat2(1.0)), transpose(transpose(transpose(mat2(1.0))))))), ivec4(1), 1u, mat2x3(1.0)), _GLF_struct_4(mat3x4(1.0))), _GLF_struct_7(_GLF_IDENTITY(bvec2(true), bvec2(bvec2(bvec2(true)))), _GLF_IDENTITY(gl_NumWorkGroups.x, _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec4(gl_NumWorkGroups.x, 0u, _GLF_IDENTITY(0u, (true ? 0u : _GLF_FUZZED(subgroup_size))), 0u), (uvec4(gl_NumWorkGroups.x, 0u, 0u, 0u)) ^ uvec4(0u, 0u, 0u, 0u))), uint(_GLF_ZERO(0.0, injectionSwitch.x)) | (uint(_GLF_IDENTITY(uvec4(gl_NumWorkGroups.x, 0u, 0u, 0u), (uvec4(gl_NumWorkGroups.x, 0u, 0u, 0u)) ^ uvec4(0u, 0u, 0u, 0u)))))), _GLF_struct_6(mat3x4(_GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(12.55)))), ivec3(1))));
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 uint workgroup_size = gl_WorkGroupSize.x;
 if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, true)))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 uint workgroup_id = gl_WorkGroupID.x;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         return;
        }
       return;
      }
     return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4((injectionSwitch.x > injectionSwitch.y), true, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))
    return;
   if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), bool(_GLF_IDENTITY(bvec2(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! (false))))))), false), bvec2(_GLF_IDENTITY(bvec2(bvec2(_GLF_DEAD(false), false)), bvec2(bvec2(bvec2(bvec2(_GLF_DEAD(false), false))))))))), (_GLF_IDENTITY(_GLF_DEAD(false), bool(_GLF_IDENTITY(bvec2(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! (false))))))), false), bvec2(_GLF_IDENTITY(bvec2(bvec2(_GLF_DEAD(false), false)), bvec2(bvec2(bvec2(bvec2(_GLF_DEAD(false), false)))))))))) || false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY((_GLF_IDENTITY(false, (false) || false)), bool(_GLF_IDENTITY(bvec3((_GLF_IDENTITY(false, (false) || false)), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bvec3(bvec4(bvec3((_GLF_IDENTITY(false, (false) || false)), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), false))))) || false), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec3(injectionSwitch.x > injectionSwitch.y, false, true))))))))))))
      return;
     return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, bool(bvec4(false, true, true, true))))), (_GLF_IDENTITY(false, (false) && true)) || false)))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))))) && _GLF_IDENTITY(true, false || (true)))) && true))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         return;
        }
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        return;
       return;
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         return;
        }
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(false, ! (! (false))) || _GLF_IDENTITY((_GLF_IDENTITY(false, (false) && true)), ((_GLF_IDENTITY(false, (false) && true))) && true))))
        return;
       return;
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
      }
     return;
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 _GLF_struct_20 _GLF_struct_replacement_20 = _GLF_struct_20(_GLF_struct_10(_GLF_struct_9(uvec2(1u), bvec4(true), ivec3(1), 1, mat2(1.0)), ivec2(1), mat3x2(1.0), mat4x2(1.0)), _GLF_struct_12(_GLF_struct_11(mat2(_GLF_IDENTITY(1.0, (1.0) - 0.0)), 1.0, 1.0, true, _GLF_IDENTITY(true, bool(bvec2(true, true))), mat3x2(_GLF_IDENTITY(1.0, min(1.0, 1.0))), mat4x3(1.0))), _GLF_struct_14(_GLF_struct_13(_GLF_IDENTITY(1u, clamp(_GLF_IDENTITY(1u, clamp(1u, 1u, 1u)), 1u, _GLF_IDENTITY(1u, uint(uvec4(1u, (0u ^ 0u), 0u, 1u))))), ivec4(1), uvec4(1u))), _GLF_struct_16(mat4(1.0), mat3x4(1.0), 1.0, _GLF_struct_15(workgroup_size * _GLF_IDENTITY(_GLF_IDENTITY(workgroup_id, max(workgroup_id, workgroup_id)), ~ (~ (_GLF_IDENTITY(workgroup_id, ~ (~ (workgroup_id)))))), mat3x4(1.0), uvec2(1u), mat2(1.0), uvec3(1u), bvec4(true), mat4(1.0), vec3(1.0))), uvec4(1u), _GLF_struct_19(_GLF_struct_17(mat4(1.0), mat3(1.0)), _GLF_struct_18(ivec2(1), mat4x3(1.0), mat2x3(1.0), mat3(1.0), mat3x2(1.0), vec3(1.0), _GLF_IDENTITY(vec4(1.0), mix(_GLF_IDENTITY(vec4((vec4(1.0))[0], (vec4(1.0))[1], (vec4(1.0))[2], _GLF_FUZZED(-7687.2202)), (false ? _GLF_FUZZED(vec4(2.7, -32.35, 374.849, 1.9)) : _GLF_IDENTITY(vec4((vec4(1.0))[0], (_GLF_IDENTITY(vec4(1.0), (vec4(1.0)) - vec4(0.0, 0.0, 0.0, 0.0)))[1], (vec4(1.0))[2], _GLF_IDENTITY(_GLF_FUZZED(-7687.2202), min(_GLF_FUZZED(-7687.2202), _GLF_FUZZED(-7687.2202)))), _GLF_IDENTITY((vec4((vec4(1.0))[0], (vec4(1.0))[1], (vec4(1.0))[2], _GLF_FUZZED(-7687.2202))) * mat4(1.0), ((vec4((vec4(1.0))[0], (vec4(1.0))[1], (vec4(1.0))[2], _GLF_FUZZED(-7687.2202))) * mat4(1.0)) * mat4(1.0))))), vec4(_GLF_FUZZED(30.53), _GLF_FUZZED(-35.76), _GLF_FUZZED((+ vec2(9.2, 5843.2110).s)), (_GLF_IDENTITY(vec4(1.0), _GLF_IDENTITY((vec4(1.0)), clamp((vec4(1.0)), (vec4(1.0)), (vec4(1.0)))) / vec4(1.0, 1.0, 1.0, 1.0)))[3]), bvec4(false, false, false, _GLF_IDENTITY(true, _GLF_IDENTITY(false || (true), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false || (true)))))))), true, mat3(1.0)), mat3(1.0));
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 _GLF_struct_29 _GLF_struct_replacement_29 = _GLF_struct_29(1u, _GLF_struct_25(_GLF_struct_21(bvec3(true), mat3x4(1.0), ivec3(1)), _GLF_struct_22(mat4x3(1.0), _GLF_IDENTITY(mat4(1.0), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(_GLF_IDENTITY((mat2x4(_GLF_IDENTITY(442.528, max(_GLF_IDENTITY(442.528, mix(float(_GLF_FUZZED(-9848.9593)), float(442.528), bool(true))), _GLF_IDENTITY(442.528, max(442.528, 442.528)))), 419.181, 2005.1079, -5197.2114, 713.736, _GLF_IDENTITY(1868.1408, min(1868.1408, 1868.1408)), -792.981, -4.2) * mat4x2(4202.6409, 566.727, _GLF_IDENTITY(-7065.1353, max(-7065.1353, _GLF_IDENTITY(-7065.1353, float(mat4(-7065.1353, determinant(mat4(0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)), 1.0, 0.0, 0.0)), determinant(mat4(1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0)), 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0))))), -42.12, 3.8, -2.2, _GLF_IDENTITY(54.52, max(54.52, 54.52)), _GLF_IDENTITY(-7.6, max(-7.6, -7.6)))), (_GLF_IDENTITY((mat2x4(_GLF_IDENTITY(_GLF_IDENTITY(442.528, max(442.528, 442.528)), max(_GLF_IDENTITY(442.528, mix(float(_GLF_FUZZED(-9848.9593)), float(442.528), bool(true))), _GLF_IDENTITY(442.528, max(442.528, 442.528)))), 419.181, 2005.1079, -5197.2114, 713.736, _GLF_IDENTITY(1868.1408, min(1868.1408, 1868.1408)), -792.981, -4.2) * mat4x2(4202.6409, 566.727, _GLF_IDENTITY(-7065.1353, max(-7065.1353, _GLF_IDENTITY(-7065.1353, float(mat4(-7065.1353, determinant(mat4(0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0)), determinant(mat4(1.0, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(float(-80176))), float(0.0), bool(true))), 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0)), 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0))))), -42.12, 3.8, -2.2, 54.52, _GLF_IDENTITY(-7.6, max(-7.6, -7.6)))), ((mat2x4(_GLF_IDENTITY(442.528, max(_GLF_IDENTITY(442.528, mix(float(_GLF_FUZZED(-9848.9593)), float(442.528), bool(true))), _GLF_IDENTITY(442.528, max(442.528, _GLF_IDENTITY(442.528, (true ? 442.528 : _GLF_FUZZED(refract(-5.2, 2.5, 714.906)))))))), 419.181, 2005.1079, -5197.2114, 713.736, _GLF_IDENTITY(1868.1408, min(1868.1408, 1868.1408)), -792.981, -4.2) * mat4x2(4202.6409, 566.727, _GLF_IDENTITY(-7065.1353, max(-7065.1353, _GLF_IDENTITY(-7065.1353, float(mat4(-7065.1353, determinant(mat4(0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, (0.0) - abs(0.0)), 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0)), determinant(mat4(1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0)), 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0))))), -42.12, 3.8, -2.2, 54.52, _GLF_IDENTITY(-7.6, max(-7.6, -7.6))))) / mat4(1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0))) * mat4(1.0))) : mat4(_GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(4.0)))))), mat2(1.0), mat4(1.0), mat2x4(_GLF_IDENTITY(1.0, clamp(1.0, _GLF_IDENTITY(1.0, (1.0) / 1.0), _GLF_IDENTITY(1.0, min(1.0, 1.0)))))), _GLF_struct_23(mat3(1.0), vec2(1.0)), _GLF_struct_24(vec4(1.0), mat3x4(1.0), mat3(1.0), _GLF_IDENTITY(vec4(1.0), min(vec4(1.0), vec4(1.0))))), _GLF_struct_replacement_20._f3._f3.workgroup_base + _GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(subgroup_id, uint(uvec4(subgroup_id, 1u, 1u, 0u)))) | (_GLF_IDENTITY(subgroup_id, (subgroup_id) - 0u))) * _GLF_IDENTITY(subgroup_size, ~ (~ (_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(uint(uvec3(subgroup_size, 1u, 1u)), (uint(uvec3(subgroup_size, _GLF_IDENTITY(1u, (1u) / 1u), 1u))) | (uint(_GLF_IDENTITY(uvec3(subgroup_size, _GLF_IDENTITY(1u, _GLF_IDENTITY((false ? _GLF_FUZZED(subgroup_local_id) : _GLF_IDENTITY(1u, max(1u, _GLF_IDENTITY(1u, ~ (~ (1u)))))), (_GLF_IDENTITY((false ? _GLF_FUZZED(subgroup_local_id) : _GLF_IDENTITY(_GLF_IDENTITY(1u, max(1u, _GLF_IDENTITY(1u, ~ (~ (1u))))), 0u | (_GLF_IDENTITY(1u, max(1u, _GLF_IDENTITY(1u, ~ (~ (1u)))))))), _GLF_IDENTITY(((false ? _GLF_FUZZED(subgroup_local_id) : _GLF_IDENTITY(1u, max(1u, _GLF_IDENTITY(1u, ~ (~ (1u))))))) << 0u, min(((false ? _GLF_FUZZED(subgroup_local_id) : _GLF_IDENTITY(1u, max(1u, _GLF_IDENTITY(1u, ~ (~ (1u))))))) << 0u, ((false ? _GLF_FUZZED(subgroup_local_id) : _GLF_IDENTITY(1u, max(1u, _GLF_IDENTITY(1u, ~ (~ (1u))))))) << 0u)))) | (_GLF_IDENTITY((false ? _GLF_FUZZED(subgroup_local_id) : _GLF_IDENTITY(1u, max(1u, _GLF_IDENTITY(1u, ~ (~ (1u)))))), ((false ? _GLF_FUZZED(subgroup_local_id) : _GLF_IDENTITY(1u, max(1u, _GLF_IDENTITY(1u, ~ (~ (1u))))))) | ((false ? _GLF_FUZZED(subgroup_local_id) : _GLF_IDENTITY(1u, max(1u, _GLF_IDENTITY(1u, ~ (~ (1u))))))))))), 1u), (uvec3(subgroup_size, _GLF_IDENTITY(1u, _GLF_IDENTITY((false ? _GLF_FUZZED(subgroup_local_id) : _GLF_IDENTITY(1u, max(1u, _GLF_IDENTITY(1u, ~ (~ (1u)))))), (_GLF_IDENTITY(_GLF_IDENTITY((false ? _GLF_FUZZED(subgroup_local_id) : _GLF_IDENTITY(1u, max(1u, _GLF_IDENTITY(1u, ~ (~ (1u)))))), max((false ? _GLF_FUZZED(subgroup_local_id) : _GLF_IDENTITY(1u, max(1u, _GLF_IDENTITY(1u, ~ (~ (1u)))))), _GLF_IDENTITY((false ? _GLF_FUZZED(subgroup_local_id) : _GLF_IDENTITY(1u, max(1u, _GLF_IDENTITY(1u, ~ (~ (1u)))))), uint(_GLF_IDENTITY(uvec2((false ? _GLF_FUZZED(subgroup_local_id) : _GLF_IDENTITY(1u, max(1u, _GLF_IDENTITY(1u, ~ (~ (1u)))))), 0u), min(uvec2((false ? _GLF_FUZZED(subgroup_local_id) : _GLF_IDENTITY(1u, max(1u, _GLF_IDENTITY(1u, ~ (~ (1u)))))), 0u), uvec2((false ? _GLF_FUZZED(subgroup_local_id) : _GLF_IDENTITY(1u, max(1u, _GLF_IDENTITY(1u, ~ (~ (1u)))))), 0u))))))), _GLF_IDENTITY(((false ? _GLF_FUZZED(subgroup_local_id) : _GLF_IDENTITY(1u, max(1u, _GLF_IDENTITY(1u, ~ (~ (1u))))))) << 0u, min(((false ? _GLF_FUZZED(subgroup_local_id) : _GLF_IDENTITY(1u, max(1u, _GLF_IDENTITY(1u, ~ (~ (1u))))))) << 0u, ((false ? _GLF_FUZZED(subgroup_local_id) : _GLF_IDENTITY(1u, max(1u, _GLF_IDENTITY(1u, ~ (~ (1u))))))) << 0u)))) | (_GLF_IDENTITY((false ? _GLF_FUZZED(subgroup_local_id) : _GLF_IDENTITY(1u, max(1u, _GLF_IDENTITY(1u, ~ (~ (1u)))))), ((false ? _GLF_FUZZED(subgroup_local_id) : _GLF_IDENTITY(1u, max(1u, _GLF_IDENTITY(1u, ~ (~ _GLF_IDENTITY((1u), max(_GLF_IDENTITY((1u), ((1u)) << 0u), (1u))))))))) | ((false ? _GLF_FUZZED(subgroup_local_id) : _GLF_IDENTITY(1u, max(1u, _GLF_IDENTITY(1u, ~ (~ (1u))))))))))), 1u)) ^ _GLF_IDENTITY(uvec3(0u, 0u, 0u), (uvec3(0u, 0u, 0u)) << uvec3(0u, 0u, 0u)))))))))) + subgroup_local_id, _GLF_struct_28(_GLF_struct_26(mat2x4(_GLF_IDENTITY(1.0, _GLF_IDENTITY(float(_GLF_IDENTITY(mat3x2(1.0, 0.0, 0.0, 0.0, 0.0, 0.0), (mat3x2(1.0, 0.0, 0.0, 0.0, 0.0, 0.0)) * mat3(1.0))), clamp(float(_GLF_IDENTITY(mat3x2(1.0, 0.0, 0.0, 0.0, 0.0, 0.0), (mat3x2(1.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, _GLF_IDENTITY(float(mat2(0.0, 0.0, 0.0, 0.0)), float(vec2(float(mat2(0.0, 0.0, 0.0, 0.0)), 0.0)))), 0.0)) * mat3(1.0))), float(_GLF_IDENTITY(mat3x2(1.0, 0.0, 0.0, 0.0, 0.0, 0.0), (mat3x2(1.0, 0.0, 0.0, 0.0, 0.0, 0.0)) * mat3(1.0))), float(_GLF_IDENTITY(mat3x2(1.0, 0.0, _GLF_IDENTITY(0.0, (0.0) - length(vec2(0.0, 0.0))), 0.0, 0.0, 0.0), (mat3x2(1.0, 0.0, 0.0, 0.0, 0.0, 0.0)) * mat3(1.0))))))), mat4(1.0), 1, _GLF_IDENTITY(mat4(1.0), transpose(transpose(_GLF_IDENTITY(mat4(1.0), (mat4(1.0)) * mat4(1.0))))), uvec4(1u), mat4(1.0), mat2x3(1.0)), _GLF_IDENTITY(1u, uint(uvec3(1u, uint(_GLF_ONE(1.0, injectionSwitch.y)), 1u))), ivec2(1), bvec4(true), 1u, _GLF_struct_27(vec2(_GLF_IDENTITY(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-7492.2100)), _GLF_IDENTITY(float(1.0), (_GLF_IDENTITY(true, (_GLF_IDENTITY(true, ! (! (true)))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) ? _GLF_IDENTITY(float(1.0), max(_GLF_IDENTITY(float(1.0), max(float(1.0), float(1.0))), float(1.0))) : _GLF_FUZZED(-9.2))), bool(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), (_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(false, bool(bvec3(false, true, false))) ? _GLF_FUZZED(8.5) : injectionSwitch.y))))) || false)))), min(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-7492.2100)), float(1.0), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-7492.2100)), float(1.0), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))), bvec2(_GLF_IDENTITY(true, (_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec4(true, false, true, true)), false || (bool(bvec4(true, _GLF_IDENTITY(false, (false) || false), _GLF_IDENTITY(_GLF_IDENTITY(true, ! (! (true))), true && (true)), true)))))) && true)), bvec3(true))), ivec4(1), mat3x4(1.0));
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(-21.43)))))))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(_GLF_IDENTITY(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true), bvec3(bvec4(bvec3(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, float(mat2x4(injectionSwitch.x, 1.0, determinant(mat3(_GLF_IDENTITY(0.0, max(0.0, _GLF_IDENTITY(0.0, (0.0) / 1.0))), 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, sqrt(0.0), 0.0)), 1.0, determinant(mat4(1.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec4(1.0, 1.0, 0.0, 0.0), vec4(0.0, 0.0, 1.0, 1.0)), dot(vec4(1.0, 1.0, 0.0, 0.0), vec4(0.0, 0.0, 1.0, 1.0))), 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, sin(0.0), 1.0)), cos(0.0), 0.0, 1.0))) > injectionSwitch.y)), _GLF_IDENTITY(false, (false) || false), true), false)))))), bool(bvec2(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(_GLF_IDENTITY(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true), bvec3(bvec4(bvec3(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, float(mat2x4(injectionSwitch.x, 1.0, determinant(mat3(0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, sqrt(0.0), 0.0)), 1.0, determinant(mat4(1.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec4(1.0, 1.0, 0.0, 0.0), vec4(0.0, 0.0, 1.0, 1.0)), dot(vec4(1.0, 1.0, 0.0, 0.0), vec4(0.0, 0.0, 1.0, 1.0))), 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(sin(0.0), min(sin(0.0), sin(0.0))), 1.0)), cos(0.0), 0.0, 1.0))) > injectionSwitch.y)), false, true), false)))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(_GLF_IDENTITY(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true), bvec3(bvec4(bvec3(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, float(mat2x4(injectionSwitch.x, 1.0, determinant(mat3(0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, sqrt(0.0), 0.0)), 1.0, determinant(mat4(1.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(dot(_GLF_IDENTITY(vec4(1.0, 1.0, 0.0, 0.0), min(vec4(1.0, 1.0, 0.0, 0.0), vec4(1.0, 1.0, 0.0, 0.0))), vec4(0.0, 0.0, 1.0, 1.0)), dot(vec4(1.0, 1.0, 0.0, 0.0), vec4(0.0, 0.0, 1.0, 1.0))), 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, sin(0.0), 1.0)), _GLF_IDENTITY(cos(0.0), (true ? cos(0.0) : _GLF_FUZZED(3241.6423))), 0.0, 1.0))) > injectionSwitch.y)), false, true), false)))))))), false))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 uint next_virtual_gid = _GLF_struct_replacement_20._f3._f3.workgroup_base + subgroup_id * subgroup_size + ((subgroup_local_id + _GLF_IDENTITY(1, 0 ^ (_GLF_IDENTITY(1, (1) << 0)))) % subgroup_size);
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (_GLF_IDENTITY(false, bool(bvec3(false, true, true))))), (! (! (_GLF_IDENTITY(false, bool(bvec3(false, true, true)))))) || false)), (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))), bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))), (_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! _GLF_IDENTITY((! ((_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)))).x > injectionSwitch.y))), bool(bvec2((! ((_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)))).x > injectionSwitch.y))), true))))) && true)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), false, true, true))))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
      }
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, ! (! (false)))))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  return;
 atomicStore(buf[next_virtual_gid], uint(1), 4, _GLF_IDENTITY(64, (_GLF_IDENTITY(64, _GLF_IDENTITY(int(int(64)), ~ (~ (_GLF_IDENTITY(int(int(64)), ((1 << _GLF_IDENTITY(int(2), int(2))) >> _GLF_IDENTITY(int(2), int(2))) * (int(int(64))))))))) * 1), 4);
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(bvec3(false, true, true))))))))
  return;
 uint read_1 = atomicLoad(buf[_GLF_struct_replacement_29.virtual_gid], 4, 64, 0);
 if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), bool(bool(_GLF_IDENTITY(false, (false) || false))))), false || (bool(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), bool(bool(_GLF_IDENTITY(false, (false) || false)))))))))))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y))))))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
      return;
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), _GLF_IDENTITY((_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))) || false, ((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false) && true))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
  }
 atomicStore(buf[next_virtual_gid], _GLF_IDENTITY(uint(_GLF_IDENTITY(read_1, ~ (~ (read_1))) + 1), (false ? _GLF_FUZZED(184974u) : uint(_GLF_IDENTITY(read_1, ~ (~ (read_1))) + 1))), 4, _GLF_IDENTITY(64, (64) * 1), 4);
}
