#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(injectionSwitch.x > injectionSwitch.y, false, true, true)))), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4((injectionSwitch.x > injectionSwitch.y), true, true, true)))) || false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, false))))))
    return;
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(_GLF_IDENTITY(vec2(_GLF_FUZZED(-106.477), _GLF_FUZZED(vec4(9092.4013, 2.8, 62.62, -2.0).w)), mix(vec2(_GLF_FUZZED(825.620), _GLF_FUZZED(7063.4195)), vec2((vec2(_GLF_FUZZED(-106.477), _GLF_FUZZED(vec4(9092.4013, 2.8, 62.62, -2.0).w)))[0], (vec2(_GLF_FUZZED(-106.477), _GLF_IDENTITY(_GLF_FUZZED(vec4(9092.4013, 2.8, 62.62, -2.0).w), (true ? _GLF_IDENTITY(_GLF_FUZZED(vec4(9092.4013, 2.8, 62.62, -2.0).w), clamp(_GLF_FUZZED(vec4(9092.4013, 2.8, 62.62, -2.0).w), _GLF_IDENTITY(_GLF_FUZZED(vec4(9092.4013, 2.8, 62.62, -2.0).w), (true ? _GLF_FUZZED(vec4(9092.4013, 2.8, 62.62, -2.0).w) : _GLF_FUZZED(7858.1653))), _GLF_FUZZED(vec4(9092.4013, 2.8, 62.62, -2.0).w))) : _GLF_FUZZED(cos(138.200))))))[1]), bvec2(true, true))), vec2(_GLF_IDENTITY((injectionSwitch), mix(vec2(_GLF_FUZZED(4.3), ((injectionSwitch))[1]), vec2(((injectionSwitch))[0], _GLF_FUZZED((-4.7 * -379.055))), bvec2(true, false)))[0], (injectionSwitch)[1]), bvec2(true, true))).y))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 if(_GLF_DEAD(false))
  return;
 do
  {
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY((false), false || ((false))) && true)), ! (! (_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY((false), false || ((false))) && true))))))
    {
     for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_GLF_IDENTITY(_injected_loop_counter, (true ? _injected_loop_counter : _GLF_FUZZED(87490))), (_injected_loop_counter) | (_GLF_IDENTITY(_injected_loop_counter, min(_injected_loop_counter, _injected_loop_counter)))) > _GLF_IDENTITY(int(_GLF_ZERO(0.0, injectionSwitch.x)), 0 | (_GLF_IDENTITY(int(_GLF_ZERO(0.0, injectionSwitch.x)), (int(_GLF_ZERO(0.0, injectionSwitch.x))) ^ 0)))); _injected_loop_counter --)
      {
       return;
       if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(_GLF_IDENTITY(true, bool(bvec3(true, false, true))) && (_GLF_DEAD(false)), true && (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(true, bool(bvec3(true, false, _GLF_IDENTITY(true, ! (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(true, true && (true))), bool(_GLF_IDENTITY(bvec2(! (_GLF_IDENTITY(true, true && (true))), true), _GLF_IDENTITY(bvec2(bvec2(bvec2(! (_GLF_IDENTITY(_GLF_IDENTITY(true, bool(bvec2(true, false))), true && (true))), true))), bvec2(bvec4(bvec2(bvec2(bvec2(! (_GLF_IDENTITY(_GLF_IDENTITY(true, bool(bvec2(true, false))), true && (true))), true))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), false || (! (_GLF_IDENTITY(true, true && (true)))))))))) && (_GLF_DEAD(false)), (_GLF_IDENTITY(true, bool(bvec3(true, false, true))) && (_GLF_DEAD(false))) && _GLF_TRUE(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(! (true), bool(bvec3(! (true), false, true)))), ! (! (! (_GLF_IDENTITY(! (true), bool(bvec3(! (true), false, true))))))))))), (injectionSwitch.x < injectionSwitch.y))), bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(true, true && (true)), bool(bvec3(true, false, true))) && (_GLF_DEAD(false)), true, true, true)))))))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            return;
           return;
          }
         break;
         if(_GLF_DEAD(false))
          return;
        }
       if(_GLF_DEAD(false))
        break;
       if(_GLF_DEAD(false))
        continue;
      }
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      break;
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY((false), ((false)) || false) || false), false || (_GLF_IDENTITY(false, (false) || false)))))
      break;
     break;
     if(_GLF_DEAD(false))
      return;
    }
  }
 while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(false, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) < _GLF_IDENTITY(injectionSwitch, cos(vec2(0.0, 0.0)) * (_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch), clamp((injectionSwitch), (injectionSwitch), (injectionSwitch)))[_GLF_IDENTITY(1, (_GLF_IDENTITY(_GLF_IDENTITY(1, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? 1 : _GLF_FUZZED(sign(-11442)))), clamp(1, 1, 1))) | (_GLF_IDENTITY(1, max(_GLF_IDENTITY(1, _GLF_IDENTITY((1) | (1), ~ (_GLF_IDENTITY(~ ((1) | (1)), (~ ((1) | (1))) | 0)))), 1))))]), vec2(_GLF_FUZZED(63.96), _GLF_FUZZED((- -395.079))), bvec2(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), false || (_GLF_IDENTITY(! (false), ! (! (! (false)))))))), ! (! (false))), false))))).y))), bvec2(bvec4(bvec2(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), _GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, false, true), bvec3(bvec4(bvec3(false, false, true), false))))))), false))), bvec2(bvec2(_GLF_IDENTITY(bvec2(false, _GLF_TRUE(_GLF_IDENTITY(true, _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0))) && (_GLF_IDENTITY(true, true && (true)))), (_GLF_IDENTITY(injectionSwitch, vec2(mat3(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-946.642), _GLF_FUZZED(2532.1659)), vec2((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y))))[0], _GLF_IDENTITY((injectionSwitch)[1], min((injectionSwitch)[1], (injectionSwitch)[1]))), bvec2(true, true))), 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0))).x < _GLF_IDENTITY(injectionSwitch, cos(vec2(0.0, 0.0)) * (injectionSwitch)).y))), bvec2(bvec4(bvec2(false, _GLF_TRUE(_GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, bool(_GLF_IDENTITY(bvec2(true, false), bvec2(bvec4(bvec2(true, false), false, true))))))), (injectionSwitch.x < injectionSwitch.y))), _GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(bool(bool(false)), ! (! (bool(bool(false))))), true && (_GLF_IDENTITY(bool(bool(false)), ! (! (bool(bool(false)))))))), _GLF_IDENTITY(false, ! (! (false)))))))))), (bool(bvec2(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) && true))));
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).y))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))))))
    return;
   return;
  }
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(! _GLF_IDENTITY((! (_GLF_DEAD(false))), ((! (_GLF_DEAD(false)))) && true), _GLF_IDENTITY((! (_GLF_IDENTITY(! (_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false))))), bool(bvec3(! (_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, false)), false || (_GLF_IDENTITY(bool(bvec2(false, false)), true && (bool(bvec2(false, false)))))))))))), false, false))))), false || ((! (! (_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false))))))))) && true))))), false))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true)))))
      return;
     return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
    }
   return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, 0.0 + (injectionSwitch.y))))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_TRUE(true, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), injectionSwitch)), injectionSwitch))[1], _GLF_IDENTITY((false ? _GLF_FUZZED(48.76) : injectionSwitch[1]), max((false ? _GLF_IDENTITY(_GLF_FUZZED(48.76), mix(float(_GLF_FUZZED(48.76)), float(_GLF_FUZZED(3.3)), bool(false))) : injectionSwitch[1]), (false ? _GLF_FUZZED(48.76) : injectionSwitch[1])))))).x, max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + sqrt(0.0)), _GLF_IDENTITY((injectionSwitch.x), min((injectionSwitch.x), (injectionSwitch.x))) / abs(1.0)), injectionSwitch.x)) < injectionSwitch.y)) && (false))))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_DEAD(false))))
  return;
 if(_GLF_DEAD(false))
  return;
 uint num_workgroup = gl_NumWorkGroups.x;
 if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_DEAD(false), false, true)))) && true))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), _GLF_IDENTITY(float(_GLF_FUZZED(3.3)), float(_GLF_IDENTITY(mat4x3(float(_GLF_FUZZED(3.3)), 0.0, 0.0, sin(0.0), 0.0, 1.0, 1.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 0.0, 0.0), mat4x3(mat4(mat4x3(float(_GLF_FUZZED(3.3)), 0.0, 0.0, sin(0.0), 0.0, 1.0, 1.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 0.0, 0.0)))))), bool(_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false)))))))), false || (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(false))
      return;
    }
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y))))
    return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), ! (! (_GLF_IDENTITY(false, ! (! (false)))))), bool(bool(_GLF_IDENTITY(false, ! (! (false))))))), bool(bool(! (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), bool(bool(_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY((! (false)), ! (! ((! (false)))))))))))))))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false)) || false))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, false, false)))))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, bool(bvec2(false, true))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true), bvec3(bvec4(bvec3(_GLF_IDENTITY(false, bool(bvec2(false, true))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true), true))))), true, false)))))
    return;
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
  }
 if(_GLF_DEAD(false))
  return;
 uint workgroup_size = gl_WorkGroupSize.x;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0)))))
      return;
     return;
     if(_GLF_DEAD(false))
      return;
    }
   return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], max(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[0], 1.0 * (_GLF_IDENTITY(injectionSwitch[0], _GLF_IDENTITY(mix(float(injectionSwitch[0]), float(_GLF_FUZZED(9154.3466)), bool(false)), mix(float(_GLF_FUZZED(3399.2253)), float(_GLF_IDENTITY(mix(_GLF_IDENTITY(float(injectionSwitch[0]), min(float(injectionSwitch[0]), float(injectionSwitch[0]))), float(_GLF_FUZZED(9154.3466)), bool(false)), float(mat2(mix(float(injectionSwitch[0]), float(_GLF_FUZZED(9154.3466)), bool(false)), 0.0, 1.0, 1.0)))), bool(true)))))))), _GLF_IDENTITY(injectionSwitch[1], max(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-6.2), _GLF_IDENTITY((injectionSwitch)[1], min((injectionSwitch)[1], _GLF_IDENTITY((injectionSwitch)[1], max((injectionSwitch)[1], (injectionSwitch)[1]))))), vec2((injectionSwitch)[0], _GLF_FUZZED((-2.7 / 91.67))), bvec2(true, false)))[1], _GLF_IDENTITY(injectionSwitch[1], float(vec2(injectionSwitch[1], 1.0))))))).x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && _GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(true, true && _GLF_IDENTITY((true), ! (! ((true)))))), true && (! (_GLF_IDENTITY(true, true && (true))))))))))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   return;
  }
 uint workgroup_id = _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID.x, ~ (~ (_GLF_IDENTITY(gl_WorkGroupID.x, min(gl_WorkGroupID.x, gl_WorkGroupID.x))))), _GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupID, (_GLF_IDENTITY(gl_WorkGroupID, uvec3(uvec3(_GLF_IDENTITY(gl_WorkGroupID, max(gl_WorkGroupID, gl_WorkGroupID)))))) | (gl_WorkGroupID)).x), ~ (~ ((_GLF_IDENTITY(gl_WorkGroupID, (_GLF_IDENTITY(gl_WorkGroupID, uvec3(uvec3(_GLF_IDENTITY(gl_WorkGroupID, max(gl_WorkGroupID, gl_WorkGroupID)))))) | (gl_WorkGroupID)).x)))) | (_GLF_IDENTITY(gl_WorkGroupID.x, _GLF_IDENTITY(uint(uvec4(_GLF_IDENTITY(gl_WorkGroupID.x, _GLF_IDENTITY(_GLF_IDENTITY((false ? _GLF_FUZZED(_GLF_IDENTITY(35774u, min(35774u, 35774u))) : _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, uvec3(gl_WorkGroupID[0], gl_WorkGroupID[1], gl_WorkGroupID[2])), (gl_WorkGroupID) - uvec3(_GLF_IDENTITY(0u, (false ? _GLF_FUZZED(workgroup_size) : 0u)), 0u, 0u)).x), ((false ? _GLF_FUZZED(35774u) : _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, uvec3(gl_WorkGroupID[0], gl_WorkGroupID[1], _GLF_IDENTITY(gl_WorkGroupID[2], uint(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(gl_WorkGroupID[2], (gl_WorkGroupID[2]) | 0u), 0u, 0u), (false ? _GLF_FUZZED(uvec3(75667u, 27295u, 54765u)) : uvec3(_GLF_IDENTITY(gl_WorkGroupID[2], (gl_WorkGroupID[2]) | 0u), 0u, 0u))))))), (gl_WorkGroupID) - uvec3(0u, 0u, 0u)).x)) << 0u), ~ (~ ((false ? _GLF_FUZZED(35774u) : _GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) - uvec3(0u, 0u, 0u)).x))))), 1u, _GLF_IDENTITY(1u, clamp(1u, 1u, 1u)), uint(_GLF_ONE(1.0, injectionSwitch.y)))), (uint(uvec4(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID.x, _GLF_IDENTITY((false ? _GLF_FUZZED(35774u) : _GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) - uvec3(0u, 0u, 0u)).x), ~ (~ ((false ? _GLF_FUZZED(35774u) : _GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) - uvec3(0u, 0u, 0u)).x))))), (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID.x, _GLF_IDENTITY((false ? _GLF_FUZZED(35774u) : _GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) - uvec3(0u, 0u, 0u)).x), ~ (~ ((false ? _GLF_FUZZED(35774u) : _GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) - uvec3(0u, 0u, 0u)).x))))), (_GLF_IDENTITY(gl_WorkGroupID.x, _GLF_IDENTITY((false ? _GLF_FUZZED(35774u) : _GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) - uvec3(0u, 0u, 0u)).x), ~ (~ ((false ? _GLF_FUZZED(35774u) : _GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) - uvec3(0u, 0u, 0u)).x)))))) / 1u)) - uint(_GLF_ZERO(0.0, injectionSwitch.x))), 1u, 1u, uint(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)) : _GLF_FUZZED(injectionSwitch))).y))))) - 0u)))), (gl_WorkGroupID.x) << _GLF_IDENTITY(0u, (0u) | (0u)));
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(_GLF_IDENTITY(bvec2((injectionSwitch.x > injectionSwitch.y), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(bvec2(bvec2(bvec2((injectionSwitch.x > injectionSwitch.y), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), bvec2(bvec2(_GLF_IDENTITY(bvec2(bvec2(bvec2((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).y), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), _GLF_IDENTITY(bvec2(bvec3(bvec2(bvec2(bvec2((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).y), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), false)), _GLF_IDENTITY(bvec2(bvec2(bvec2(bvec3(bvec2(bvec2(bvec2((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).y), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), false)))), bvec2(bvec2(bvec2(bvec2(bvec2(bvec3(bvec2(bvec2(bvec2((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).y), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), false))))))))))))))))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  return;
 uint workgroup_base = workgroup_size * workgroup_id;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) || false))), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, false)))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY((false), ! (! ((false)))) || false), (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), mix(float(_GLF_FUZZED(-3.7)), _GLF_IDENTITY(float(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x))), clamp(float(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x))), float(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x))), float(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x))))), bool(true))) > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, true, true, true)))))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false))))))), true)), _GLF_IDENTITY(true && (_GLF_IDENTITY(bool(bvec2(_GLF_DEAD(false), true)), (bool(bvec2(_GLF_DEAD(false), true))) && true)), true && (true && (_GLF_IDENTITY(bool(bvec2(_GLF_DEAD(false), true)), (bool(bvec2(_GLF_DEAD(false), true))) && true)))))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
    }
   return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false)))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(-95.99) : injectionSwitch.x)), mix(float(_GLF_FUZZED(2.9)), float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(-95.99) : injectionSwitch.x)), min(_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(-95.99) : injectionSwitch.x)), _GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(-95.99) : injectionSwitch.x))))), bool(true))) > injectionSwitch.y))))
      {
       if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_DEAD(false)))))
        return;
       return;
      }
     return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) && true))))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(false, true, false, false))), true && (false)), (false) && _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(true, (_GLF_IDENTITY(true, _GLF_IDENTITY((true) || false, false || ((true) || false)))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (true))), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(true, (_GLF_IDENTITY(true, _GLF_IDENTITY((true) || false, false || ((true) || false)))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (true))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(true, (_GLF_IDENTITY(true, _GLF_IDENTITY((true) || false, false || ((true) || false)))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (true)))), true && (! (_GLF_IDENTITY(_GLF_IDENTITY(true, (_GLF_IDENTITY(true, _GLF_IDENTITY((true) || false, false || ((true) || false)))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (true)))))))), false, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false || (bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(true, (_GLF_IDENTITY(true, _GLF_IDENTITY((true) || false, false || ((true) || false)))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (true))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(true, (_GLF_IDENTITY(true, _GLF_IDENTITY((true) || false, false || ((true) || false)))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (true)))), true && (! (_GLF_IDENTITY(_GLF_IDENTITY(true, (_GLF_IDENTITY(true, _GLF_IDENTITY((true) || false, false || ((true) || false)))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (true)))))))), false, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), _GLF_IDENTITY(_GLF_IDENTITY(true, (true) && _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (injectionSwitch.x < injectionSwitch.y))))), false || (_GLF_IDENTITY(true, bool(bvec4(true, false, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))) && (_GLF_IDENTITY(true, (true) && true))), _GLF_IDENTITY(true, _GLF_IDENTITY(! _GLF_IDENTITY((! (_GLF_IDENTITY(true, _GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) && true)))) || (_GLF_IDENTITY(true, false || (true)))))), ((! (_GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, false || (true))))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), true && (! _GLF_IDENTITY((! (_GLF_IDENTITY(true, _GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((false), ! (! (_GLF_IDENTITY((false), true && ((false))))))))) && true)))) || _GLF_IDENTITY((_GLF_IDENTITY(true, false || (true))), ((_GLF_IDENTITY(true, false || (true)))) && true)))), _GLF_IDENTITY(((! (_GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, false || (true))))))), ! (! (((! (_GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, false || (true)))))))))) && _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-9.6)), float(_GLF_IDENTITY(injectionSwitch.x, 1.0 * (injectionSwitch.x))), bool(true))) < injectionSwitch.y)))))) && (_GLF_IDENTITY(_GLF_IDENTITY(true, ! (! (true))), _GLF_IDENTITY(true, (true) && true) && (true))))), (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
      return;
     return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
    }
   return;
  }
 uint virtual_gid = _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_id * subgroup_size, min(_GLF_IDENTITY(subgroup_id * subgroup_size, 1u * (subgroup_id * subgroup_size)), subgroup_id * subgroup_size)), max(workgroup_base + subgroup_id * subgroup_size, workgroup_base + subgroup_id * subgroup_size)), uint(uvec2(workgroup_base + _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, min(subgroup_id, _GLF_IDENTITY(subgroup_id, 1u * (_GLF_IDENTITY(subgroup_id, (subgroup_id) * 1u))))), min(_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY(min(subgroup_id, _GLF_IDENTITY(subgroup_id, 1u * (_GLF_IDENTITY(subgroup_id, (subgroup_id) * 1u)))), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? min(subgroup_id, _GLF_IDENTITY(subgroup_id, 1u * (_GLF_IDENTITY(subgroup_id, (subgroup_id) * 1u)))) : _GLF_FUZZED(subgroup_size)))), _GLF_IDENTITY(subgroup_id, min(subgroup_id, _GLF_IDENTITY(subgroup_id, 1u * (_GLF_IDENTITY(subgroup_id, (subgroup_id) * 1u))))))) * subgroup_size, 1u))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, uint(uvec2(workgroup_base + subgroup_id * subgroup_size, 1u))), (_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, uint(uvec2(workgroup_base + subgroup_id * subgroup_size, 1u)))) | (_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, uint(uvec2(workgroup_base + subgroup_id * subgroup_size, 1u))))), _GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, uint(uvec2(workgroup_base + subgroup_id * subgroup_size, 1u))), _GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, uint(uvec2(workgroup_base + _GLF_IDENTITY(subgroup_id * subgroup_size, clamp(subgroup_id * subgroup_size, subgroup_id * subgroup_size, _GLF_IDENTITY(subgroup_id * subgroup_size, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, (true ? subgroup_id * subgroup_size : _GLF_FUZZED(workgroup_id))), uint(uint(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, (true ? subgroup_id * subgroup_size : _GLF_FUZZED(workgroup_id))), (_GLF_IDENTITY(subgroup_id * subgroup_size, (true ? subgroup_id * subgroup_size : _GLF_FUZZED(workgroup_id)))) + 0u))))), clamp((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, (true ? subgroup_id * subgroup_size : _GLF_FUZZED(workgroup_id))), uint(uint(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, (true ? subgroup_id * subgroup_size : _GLF_FUZZED(workgroup_id))), (_GLF_IDENTITY(subgroup_id * subgroup_size, (true ? subgroup_id * subgroup_size : _GLF_FUZZED(workgroup_id)))) + 0u))))), (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, (true ? subgroup_id * subgroup_size : _GLF_FUZZED(workgroup_id))), uint(uint(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, (true ? subgroup_id * subgroup_size : _GLF_FUZZED(workgroup_id))), (_GLF_IDENTITY(subgroup_id * subgroup_size, (true ? subgroup_id * subgroup_size : _GLF_FUZZED(workgroup_id)))) + 0u))))), (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, (true ? subgroup_id * subgroup_size : _GLF_FUZZED(workgroup_id))), uint(uint(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, (true ? subgroup_id * subgroup_size : _GLF_FUZZED(workgroup_id))), (_GLF_IDENTITY(subgroup_id * subgroup_size, (true ? subgroup_id * subgroup_size : _GLF_FUZZED(workgroup_id)))) + 0u))))))) - 0u))), 1u))))), min(workgroup_base + subgroup_id * subgroup_size, workgroup_base + subgroup_id * subgroup_size)), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_id * subgroup_size, uint(_GLF_IDENTITY(uvec2(subgroup_id * subgroup_size, 0u), uvec2(_GLF_IDENTITY(uvec4(_GLF_IDENTITY(uvec2(subgroup_id * subgroup_size, 0u), uvec2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)) ^ (uvec2(subgroup_id * subgroup_size, 0u))), 1u, 0u), min(uvec4(uvec2(_GLF_IDENTITY(subgroup_id, 0u ^ (subgroup_id)) * subgroup_size, 0u), 1u, 0u), uvec4(uvec2(subgroup_id * subgroup_size, 0u), 1u, 0u))))))), uint(uvec2(workgroup_base + subgroup_id * subgroup_size, 1u))), min(_GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_id * subgroup_size, uint(_GLF_IDENTITY(uvec2(subgroup_id * subgroup_size, 0u), uvec2(_GLF_IDENTITY(uvec4(_GLF_IDENTITY(uvec2(subgroup_id * subgroup_size, 0u), uvec2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)) ^ (uvec2(subgroup_id * subgroup_size, 0u))), 1u, 0u), min(uvec4(uvec2(_GLF_IDENTITY(subgroup_id, 0u ^ (subgroup_id)) * subgroup_size, 0u), 1u, 0u), uvec4(uvec2(subgroup_id * subgroup_size, 0u), 1u, 0u))))))), uint(uvec2(workgroup_base + subgroup_id * subgroup_size, 1u))), _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_id * subgroup_size, uint(_GLF_IDENTITY(uvec2(subgroup_id * subgroup_size, 0u), uvec2(_GLF_IDENTITY(uvec4(_GLF_IDENTITY(uvec2(subgroup_id * subgroup_size, 0u), uvec2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)) ^ (uvec2(subgroup_id * subgroup_size, 0u))), 1u, 0u), min(uvec4(uvec2(_GLF_IDENTITY(subgroup_id, 0u ^ (subgroup_id)) * subgroup_size, 0u), 1u, 0u), uvec4(uvec2(subgroup_id * subgroup_size, 0u), 1u, 0u))))))), uint(uvec2(workgroup_base + subgroup_id * subgroup_size, 1u))), (false ? _GLF_FUZZED(subgroup_local_id) : _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_id * subgroup_size, uint(_GLF_IDENTITY(uvec2(subgroup_id * subgroup_size, 0u), uvec2(_GLF_IDENTITY(uvec4(_GLF_IDENTITY(uvec2(subgroup_id * subgroup_size, 0u), uvec2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)) ^ (uvec2(subgroup_id * subgroup_size, 0u))), 1u, 0u), min(uvec4(uvec2(_GLF_IDENTITY(subgroup_id, 0u ^ (subgroup_id)) * subgroup_size, 0u), 1u, 0u), uvec4(uvec2(subgroup_id * subgroup_size, 0u), 1u, 0u))))))), uint(uvec2(workgroup_base + subgroup_id * subgroup_size, 1u))), (_GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_id * subgroup_size, uint(_GLF_IDENTITY(uvec2(subgroup_id * subgroup_size, 0u), uvec2(_GLF_IDENTITY(uvec4(_GLF_IDENTITY(uvec2(subgroup_id * subgroup_size, 0u), uvec2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)) ^ (uvec2(subgroup_id * subgroup_size, 0u))), 1u, 0u), min(uvec4(uvec2(_GLF_IDENTITY(subgroup_id, 0u ^ (subgroup_id)) * subgroup_size, 0u), 1u, 0u), uvec4(uvec2(subgroup_id * subgroup_size, 0u), 1u, 0u))))))), uint(uvec2(workgroup_base + subgroup_id * subgroup_size, 1u)))) / 1u))))), min(workgroup_base + subgroup_id * subgroup_size, workgroup_base + subgroup_id * subgroup_size)), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_id * subgroup_size, uint(_GLF_IDENTITY(uvec2(subgroup_id * subgroup_size, 0u), uvec2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(uvec4(uvec2(subgroup_id * subgroup_size, 0u), 1u, 0u), clamp(uvec4(uvec2(subgroup_id * subgroup_size, 0u), 1u, 0u), uvec4(uvec2(subgroup_id * subgroup_size, 0u), 1u, 0u), _GLF_IDENTITY(uvec4(uvec2(subgroup_id * subgroup_size, 0u), 1u, 0u), max(uvec4(uvec2(subgroup_id * subgroup_size, 0u), 1u, 0u), uvec4(uvec2(subgroup_id * subgroup_size, 0u), 1u, 0u))))), ~ (~ (_GLF_IDENTITY(uvec4(uvec2(subgroup_id * subgroup_size, 0u), 1u, 0u), clamp(uvec4(uvec2(subgroup_id * subgroup_size, 0u), 1u, 0u), uvec4(uvec2(subgroup_id * subgroup_size, 0u), 1u, 0u), _GLF_IDENTITY(uvec4(uvec2(subgroup_id * subgroup_size, 0u), 1u, 0u), max(uvec4(uvec2(subgroup_id * subgroup_size, 0u), 1u, 0u), uvec4(uvec2(subgroup_id * subgroup_size, 0u), 1u, 0u)))))))), min(uvec4(uvec2(_GLF_IDENTITY(subgroup_id, max(_GLF_IDENTITY(subgroup_id, uint(uvec4(subgroup_id, 1u, 0u, 0u))), subgroup_id)) * subgroup_size, 0u), 1u, 0u), uvec4(uvec2(subgroup_id * subgroup_size, 0u), 1u, 0u))))))), uint(uvec2(workgroup_base + subgroup_id * subgroup_size, 1u))), min(_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, 0u | (workgroup_base + subgroup_id * subgroup_size)), _GLF_IDENTITY(workgroup_base, 0u | (workgroup_base)) + subgroup_id * subgroup_size)), (true ? _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, ~ (~ (workgroup_base))) + _GLF_IDENTITY(subgroup_id * subgroup_size, uint(_GLF_IDENTITY(uvec2(subgroup_id * subgroup_size, 0u), uvec2(_GLF_IDENTITY(uvec4(uvec2(subgroup_id * subgroup_size, 0u), _GLF_IDENTITY(1u, (true ? _GLF_IDENTITY(1u, (1u) >> 0u) : _GLF_FUZZED(workgroup_base))), 0u), min(_GLF_IDENTITY(uvec4(uvec2(subgroup_id * subgroup_size, 0u), 1u, 0u), (uvec4(uvec2(subgroup_id * subgroup_size, 0u), 1u, 0u)) | (uvec4(uvec2(subgroup_id * subgroup_size, 0u), 1u, 0u))), uvec4(uvec2(subgroup_id * subgroup_size, 0u), 1u, 0u))))))), _GLF_IDENTITY(uint(uvec2(workgroup_base + subgroup_id * subgroup_size, 1u)), uint(_GLF_ZERO(0.0, injectionSwitch.x)) + (uint(uvec2(workgroup_base + subgroup_id * subgroup_size, 1u))))), 1u * (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, ~ (~ (workgroup_base))) + _GLF_IDENTITY(subgroup_id * subgroup_size, uint(_GLF_IDENTITY(uvec2(subgroup_id * subgroup_size, 0u), uvec2(_GLF_IDENTITY(uvec4(uvec2(subgroup_id * subgroup_size, 0u), _GLF_IDENTITY(1u, (true ? _GLF_IDENTITY(1u, (1u) >> 0u) : _GLF_FUZZED(workgroup_base))), 0u), min(_GLF_IDENTITY(uvec4(uvec2(subgroup_id * subgroup_size, 0u), 1u, 0u), (uvec4(uvec2(subgroup_id * subgroup_size, 0u), 1u, 0u)) | (uvec4(uvec2(subgroup_id * subgroup_size, 0u), 1u, 0u))), uvec4(uvec2(subgroup_id * subgroup_size, 0u), 1u, 0u))))))), _GLF_IDENTITY(_GLF_IDENTITY(uint(uvec2(workgroup_base + subgroup_id * subgroup_size, 1u)), (uint(uvec2(workgroup_base + subgroup_id * subgroup_size, 1u))) * 1u), uint(_GLF_ZERO(0.0, injectionSwitch.x)) + (uint(uvec2(workgroup_base + subgroup_id * subgroup_size, 1u))))))), min(workgroup_base + subgroup_id * subgroup_size, workgroup_base + subgroup_id * subgroup_size)) : _GLF_FUZZED(num_workgroup)))) << 0u)) | 0u) + _GLF_IDENTITY(subgroup_local_id, min(subgroup_local_id, subgroup_local_id)), max(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_id, (subgroup_id) * 1u) * subgroup_size, uint(uvec2(workgroup_base + subgroup_id * subgroup_size, 1u))), min(workgroup_base + subgroup_id * _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, 0u ^ (_GLF_IDENTITY(subgroup_size, (subgroup_size) | (subgroup_size)))), ~ (~ (_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) * (1u | 1u))) | (0u)) ^ (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (subgroup_size) | (subgroup_size)), clamp(_GLF_IDENTITY(subgroup_size, (subgroup_size) | (subgroup_size)), _GLF_IDENTITY(subgroup_size, (subgroup_size) | (subgroup_size)), _GLF_IDENTITY(subgroup_size, (subgroup_size) | (subgroup_size))))))))), workgroup_base + _GLF_IDENTITY(subgroup_id * subgroup_size, 0u ^ (_GLF_IDENTITY(subgroup_id * subgroup_size, min(subgroup_id * subgroup_size, subgroup_id * subgroup_size)))))), (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, uint(uvec2(workgroup_base + subgroup_id * subgroup_size, 1u))), min(workgroup_base + subgroup_id * subgroup_size, workgroup_base + _GLF_IDENTITY(subgroup_id * subgroup_size, _GLF_IDENTITY(0u, (0u) << 0u) | (subgroup_id * subgroup_size))))) | 0u) + _GLF_IDENTITY(subgroup_local_id, min(subgroup_local_id, subgroup_local_id)), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, uint(uvec2(workgroup_base + subgroup_id * _GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size)), 1u))), min(workgroup_base + subgroup_id * subgroup_size, workgroup_base + subgroup_id * subgroup_size)), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, uint(uvec2(workgroup_base + subgroup_id * subgroup_size, 1u))), clamp(_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, uint(uvec2(workgroup_base + subgroup_id * subgroup_size, 1u))), _GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, uint(uvec2(workgroup_base + subgroup_id * subgroup_size, 1u))), _GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, uint(uvec2(workgroup_base + _GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) << uint(_GLF_ZERO(0.0, injectionSwitch.x))), 1u))))), min(workgroup_base + subgroup_id * subgroup_size, workgroup_base + subgroup_id * subgroup_size))) | 0u) + _GLF_IDENTITY(subgroup_local_id, min(subgroup_local_id, subgroup_local_id)))), clamp(_GLF_IDENTITY(workgroup_base, (workgroup_base) << 0u) + subgroup_id * subgroup_size + subgroup_local_id, workgroup_base + _GLF_IDENTITY(subgroup_id, _GLF_IDENTITY((true ? _GLF_IDENTITY(subgroup_id, ~ (_GLF_IDENTITY(~ (subgroup_id), (~ (subgroup_id)) | (_GLF_IDENTITY(~ (subgroup_id), uint(uvec4(~ (subgroup_id), 1u, 0u, 1u))))))) : _GLF_FUZZED(workgroup_base)), uint(_GLF_IDENTITY(uvec2((true ? subgroup_id : _GLF_FUZZED(workgroup_base)), 1u), uvec2(0u, 0u) ^ (uvec2((true ? subgroup_id : _GLF_FUZZED(workgroup_base)), 1u)))))) * subgroup_size + subgroup_local_id, workgroup_base + subgroup_id * subgroup_size + subgroup_local_id));
 if(_GLF_DEAD(false))
  return;
 uint next_virtual_gid = workgroup_base + _GLF_IDENTITY(subgroup_id, _GLF_IDENTITY((subgroup_id) | ((0u & 190557u) ^ 0u), _GLF_IDENTITY(((subgroup_id) | ((0u & 190557u) ^ 0u)) << 0u, (_GLF_IDENTITY(((subgroup_id) | ((0u & 190557u) ^ 0u)) << 0u, (false ? _GLF_FUZZED(subgroup_id) : ((subgroup_id) | ((0u & 190557u) ^ 0u)) << 0u))) >> uint(_GLF_ZERO(0.0, injectionSwitch.x))))) * _GLF_IDENTITY(subgroup_size, (true ? subgroup_size : _GLF_FUZZED((subgroup_id / subgroup_local_id)))) + _GLF_IDENTITY(((subgroup_local_id + _GLF_IDENTITY(1, (1) - 0)) % subgroup_size), clamp(((subgroup_local_id + _GLF_IDENTITY(1, (1) - 0)) % subgroup_size), ((subgroup_local_id + _GLF_IDENTITY(1, (1) - 0)) % subgroup_size), ((subgroup_local_id + _GLF_IDENTITY(1, (1) - 0)) % subgroup_size)));
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 atomicStore(buf[next_virtual_gid], _GLF_IDENTITY(uint(1), clamp(uint(1), uint(1), uint(1))), 4, 64, 4);
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 uint read_1 = atomicLoad(buf[virtual_gid], 4, 64, 0);
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  return;
 atomicStore(buf[next_virtual_gid], _GLF_IDENTITY(uint(read_1 + 1), (_GLF_IDENTITY(uint(read_1 + 1), min(uint(read_1 + 1), uint(read_1 + 1)))) | (uint(read_1 + 1))), 4, _GLF_IDENTITY(64, (false ? _GLF_FUZZED(_GLF_IDENTITY(4661, (false ? _GLF_FUZZED(-28872) : 4661))) : _GLF_IDENTITY(64, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(int(_GLF_IDENTITY(ivec3(64, _GLF_IDENTITY((1 | 1), ((1 | 1)) >> 0), 1), min(ivec3(64, (_GLF_IDENTITY(1, (1) / 1) | 1), 1), _GLF_IDENTITY(ivec3(64, _GLF_IDENTITY((1 | 1), _GLF_IDENTITY(~ (~ ((1 | 1))), (_GLF_IDENTITY(~ _GLF_IDENTITY((~ ((1 | 1))), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? (~ ((1 | 1))) : _GLF_FUZZED(-61055))), (~ (~ ((1 | 1)))) >> 0)) * 1)), 1), ivec3(0, _GLF_IDENTITY(0, (0) ^ 0), 0) ^ (ivec3(64, _GLF_IDENTITY(_GLF_IDENTITY((1 | 1), ~ (_GLF_IDENTITY(~ ((_GLF_IDENTITY(1 | 1, (1 | 1) << 0))), (~ ((_GLF_IDENTITY(1 | 1, _GLF_IDENTITY((1 | 1), (_GLF_IDENTITY((1 | 1), max((1 | 1), (1 | 1)))) << (0 >> _GLF_IDENTITY(int(8), _GLF_IDENTITY(int(8), (true ? int(8) : _GLF_FUZZED(-99213)))))) << 0)))) / int(_GLF_ONE(1.0, injectionSwitch.y))))), _GLF_IDENTITY(int(_GLF_IDENTITY(ivec3(_GLF_IDENTITY(_GLF_IDENTITY((1 | _GLF_IDENTITY(1, (1) >> 0)), ~ (~ ((1 | 1)))), ~ (~ ((1 | 1)))), int(_GLF_ONE(1.0, injectionSwitch.y)), ((1 << _GLF_IDENTITY(int(2), int(2))) >> _GLF_IDENTITY(int(2), int(2)))), min(ivec3(_GLF_IDENTITY((_GLF_IDENTITY(1 | 1, (_GLF_IDENTITY(_GLF_IDENTITY(1, (1) << 0) | 1, int(ivec4(1 | 1, 0, 1, 1)))) ^ 0)), ~ (~ ((1 | 1)))), int(_GLF_ONE(1.0, injectionSwitch.y)), ((1 << _GLF_IDENTITY(int(_GLF_IDENTITY(2, (2) - 0)), int(2))) >> _GLF_IDENTITY(int(2), int(2)))), ivec3(_GLF_IDENTITY((1 | _GLF_IDENTITY(1, min(1, _GLF_IDENTITY(1, 0 ^ (1))))), ~ (~ (_GLF_IDENTITY((1 | 1), ((1 | 1)) / 1)))), int(_GLF_ONE(1.0, injectionSwitch.y)), ((1 << _GLF_IDENTITY(int(2), int(2))) >> _GLF_IDENTITY(int(2), int(2))))))), max(int(_GLF_IDENTITY(ivec3(_GLF_IDENTITY(_GLF_IDENTITY((1 | 1), min((1 | 1), (1 | 1))), ~ (~ ((1 | _GLF_IDENTITY(1, (1) - 0))))), int(_GLF_ONE(1.0, injectionSwitch.y)), (_GLF_IDENTITY((1 << _GLF_IDENTITY(int(2), int(2))), ((1 << _GLF_IDENTITY(int(2), int(2)))) | (_GLF_IDENTITY((1 << _GLF_IDENTITY(int(2), int(2))), int(ivec3((1 << _GLF_IDENTITY(int(2), int(2))), ((1 << _GLF_IDENTITY(int(3), int(3))) >> _GLF_IDENTITY(int(3), int(3))), 1))))) >> _GLF_IDENTITY(int(2), int(2)))), min(ivec3(_GLF_IDENTITY((1 | 1), ~ (_GLF_IDENTITY(~ ((1 | 1)), clamp(~ ((1 | 1)), _GLF_IDENTITY(~ ((1 | 1)), (~ ((1 | 1))) | 0), ~ ((1 | 1)))))), int(_GLF_ONE(1.0, injectionSwitch.y)), (_GLF_IDENTITY((_GLF_IDENTITY(1, 0 ^ (1)) << _GLF_IDENTITY(int(2), int(2))) >> _GLF_IDENTITY(int(2), int(2)), ((_GLF_IDENTITY(1, 0 ^ (1)) << _GLF_IDENTITY(int(2), int(2))) >> _GLF_IDENTITY(int(2), int(2))) / 1))), ivec3(_GLF_IDENTITY((1 | 1), ~ (~ ((1 | 1)))), int(_GLF_ONE(1.0, injectionSwitch.y)), (_GLF_IDENTITY((1 << _GLF_IDENTITY(int(2), int(2))) >> _GLF_IDENTITY(int(2), int(2)), _GLF_IDENTITY(clamp(_GLF_IDENTITY((1 << _GLF_IDENTITY(int(2), int(2))) >> _GLF_IDENTITY(int(2), int(2)), ((1 << _GLF_IDENTITY(int(2), int(2))) >> _GLF_IDENTITY(int(2), int(2))) | ((1 << _GLF_IDENTITY(int(2), int(2))) >> _GLF_IDENTITY(int(2), int(2)))), _GLF_IDENTITY((1 << _GLF_IDENTITY(int(2), int(2))) >> _GLF_IDENTITY(int(2), int(2)), 0 | ((1 << _GLF_IDENTITY(int(2), int(2))) >> _GLF_IDENTITY(int(2), int(2)))), (1 << _GLF_IDENTITY(int(2), int(2))) >> _GLF_IDENTITY(int(2), int(2))), (clamp(_GLF_IDENTITY((1 << _GLF_IDENTITY(int(2), int(2))) >> _GLF_IDENTITY(int(2), int(2)), ((1 << _GLF_IDENTITY(int(2), int(2))) >> _GLF_IDENTITY(int(2), int(2))) | ((1 << _GLF_IDENTITY(int(2), int(2))) >> _GLF_IDENTITY(int(2), int(2)))), _GLF_IDENTITY((1 << _GLF_IDENTITY(int(2), int(2))) >> _GLF_IDENTITY(int(2), int(2)), 0 | ((1 << _GLF_IDENTITY(int(2), int(2))) >> _GLF_IDENTITY(int(2), int(2)))), (1 << _GLF_IDENTITY(int(2), int(2))) >> _GLF_IDENTITY(int(2), int(2)))) << 0))))))), int(_GLF_IDENTITY(ivec3(_GLF_IDENTITY((_GLF_IDENTITY(1, 0 + (_GLF_IDENTITY(1, ~ (~ (1))))) | 1), ~ (~ (_GLF_IDENTITY((1 | 1), ((1 | 1)) | ((1 | 1)))))), int(_GLF_ONE(1.0, injectionSwitch.y)), ((1 << _GLF_IDENTITY(int(2), int(2))) >> _GLF_IDENTITY(_GLF_IDENTITY(int(2), int(2)), 1 * (_GLF_IDENTITY(int(2), int(2)))))), min(ivec3(_GLF_IDENTITY(_GLF_IDENTITY((1 | 1), ~ (~ ((1 | 1)))), max(_GLF_IDENTITY(_GLF_IDENTITY((1 | 1), ~ (~ ((1 | 1)))), 0 ^ (_GLF_IDENTITY((1 | 1), ~ (~ ((1 | 1)))))), _GLF_IDENTITY((1 | 1), ~ (~ ((1 | 1)))))), int(_GLF_ONE(1.0, injectionSwitch.y)), (_GLF_IDENTITY((1 << _GLF_IDENTITY(int(2), int(2))) >> _GLF_IDENTITY(_GLF_IDENTITY(int(2), int(2)), (_GLF_IDENTITY(int(2), int(2))) * (_GLF_IDENTITY((1 << _GLF_IDENTITY(int(1), int(1))), min((1 << _GLF_IDENTITY(int(1), int(1))), (1 << _GLF_IDENTITY(int(1), int(1))))) >> _GLF_IDENTITY(_GLF_IDENTITY(int(1), int(1)), 0 + (_GLF_IDENTITY(_GLF_IDENTITY(int(1), int(1)), _GLF_IDENTITY((_GLF_IDENTITY(int(1), int(1))) | (_GLF_IDENTITY(_GLF_IDENTITY(int(1), int(1)), max(_GLF_IDENTITY(int(1), int(1)), _GLF_IDENTITY(_GLF_IDENTITY(int(1), int(1)), (_GLF_IDENTITY(int(1), int(1))) | (_GLF_IDENTITY(int(1), int(1))))))), ((_GLF_IDENTITY(int(1), int(1))) | (_GLF_IDENTITY(_GLF_IDENTITY(int(1), int(1)), max(_GLF_IDENTITY(int(1), int(1)), _GLF_IDENTITY(_GLF_IDENTITY(int(1), int(1)), (_GLF_IDENTITY(int(1), int(1))) | (_GLF_IDENTITY(int(1), int(1)))))))) >> int(_GLF_ZERO(0.0, injectionSwitch.x)))))))), ((1 << _GLF_IDENTITY(int(2), int(2))) >> _GLF_IDENTITY(_GLF_IDENTITY(int(2), int(2)), (_GLF_IDENTITY(int(2), int(2))) * (_GLF_IDENTITY((1 << _GLF_IDENTITY(int(1), int(1))), min((1 << _GLF_IDENTITY(int(1), int(1))), (1 << _GLF_IDENTITY(int(1), int(1))))) >> _GLF_IDENTITY(_GLF_IDENTITY(int(1), int(1)), 0 + (_GLF_IDENTITY(_GLF_IDENTITY(int(1), int(1)), _GLF_IDENTITY((_GLF_IDENTITY(int(1), int(1))) | (_GLF_IDENTITY(_GLF_IDENTITY(int(1), int(1)), max(_GLF_IDENTITY(int(1), int(1)), _GLF_IDENTITY(_GLF_IDENTITY(int(1), int(1)), (_GLF_IDENTITY(int(1), int(1))) | (_GLF_IDENTITY(int(1), int(1))))))), ((_GLF_IDENTITY(int(1), int(1))) | (_GLF_IDENTITY(_GLF_IDENTITY(int(1), int(1)), max(_GLF_IDENTITY(int(1), int(1)), _GLF_IDENTITY(_GLF_IDENTITY(int(1), int(1)), (_GLF_IDENTITY(int(1), int(1))) | (_GLF_IDENTITY(int(1), int(1)))))))) >> int(_GLF_ZERO(0.0, injectionSwitch.x))))))))) + 0))), ivec3(_GLF_IDENTITY((1 | 1), _GLF_IDENTITY(~ (~ ((1 | 1))), (true ? _GLF_IDENTITY(~ (~ ((1 | 1))), (~ (~ ((1 | 1)))) >> 0) : _GLF_FUZZED(40163)))), int(_GLF_ONE(1.0, injectionSwitch.y)), ((1 << _GLF_IDENTITY(_GLF_IDENTITY(int(2), min(int(2), int(2))), int(2))) >> _GLF_IDENTITY(int(2), int(2)))))))))), 1)))))), (int(_GLF_IDENTITY(ivec3(64, (1 | 1), 1), min(ivec3(64, _GLF_IDENTITY((1 | 1), (_GLF_IDENTITY((1 | 1), ((1 | 1)) | ((1 | 1)))) / 1), 1), _GLF_IDENTITY(ivec3(_GLF_IDENTITY(64, (64) / 1), _GLF_IDENTITY((1 | 1), _GLF_IDENTITY(~ (~ ((1 | 1))), _GLF_IDENTITY((_GLF_IDENTITY(~ (~ ((1 | 1))), (~ (~ ((1 | 1)))) >> 0)), 0 | ((_GLF_IDENTITY(~ (~ ((1 | 1))), (~ (~ ((1 | 1)))) >> 0)))) * 1)), 1), ivec3(0, 0, 0) ^ (ivec3(64, _GLF_IDENTITY(_GLF_IDENTITY((1 | 1), ~ (~ ((1 | 1)))), _GLF_IDENTITY(int(_GLF_IDENTITY(ivec3(_GLF_IDENTITY((1 | 1), ~ (~ ((_GLF_IDENTITY(1 | 1, (1 | 1) >> 0))))), int(_GLF_ONE(1.0, injectionSwitch.y)), ((1 << _GLF_IDENTITY(int(2), int(_GLF_IDENTITY(2, clamp(_GLF_IDENTITY(2, (2) / 1), 2, 2))))) >> _GLF_IDENTITY(int(2), int(2)))), min(ivec3(_GLF_IDENTITY((_GLF_IDENTITY(1 | 1, (_GLF_IDENTITY(1 | 1, int(ivec4(_GLF_IDENTITY(1 | 1, _GLF_IDENTITY(0 | (_GLF_IDENTITY(1 | 1, int(ivec2(1 | 1, 0)))), 0 ^ (_GLF_IDENTITY(0 | (_GLF_IDENTITY(1 | 1, int(ivec2(1 | 1, 0)))), (0 | (_GLF_IDENTITY(1 | 1, int(ivec2(1 | 1, 0))))) * 1)))), 0, 1, 1)))) ^ 0)), _GLF_IDENTITY(~ (~ ((1 | 1))), int(ivec2(~ (~ ((1 | 1))), 1)))), int(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), max(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y)))), ((1 << _GLF_IDENTITY(int(2), int(2))) >> _GLF_IDENTITY(int(2), int(2)))), ivec3(_GLF_IDENTITY((1 | 1), ~ (~ ((1 | 1)))), int(_GLF_ONE(_GLF_IDENTITY(1.0, max(1.0, 1.0)), injectionSwitch.y)), ((1 << _GLF_IDENTITY(int(2), int(2))) >> _GLF_IDENTITY(int(_GLF_IDENTITY(2, (2) | (_GLF_IDENTITY(_GLF_IDENTITY(2, int(int(2))), min(2, 2))))), int(2))))))), max(int(_GLF_IDENTITY(ivec3(_GLF_IDENTITY((1 | 1), ~ (~ ((1 | 1)))), int(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).y)), (_GLF_IDENTITY((1 << _GLF_IDENTITY(int(2), int(2))) >> _GLF_IDENTITY(int(2), int(2)), max((1 << _GLF_IDENTITY(int(2), int(2))) >> _GLF_IDENTITY(int(2), int(2)), (1 << _GLF_IDENTITY(int(2), int(2))) >> _GLF_IDENTITY(int(2), int(2)))))), _GLF_IDENTITY(min(ivec3(_GLF_IDENTITY((1 | 1), ~ (~ ((1 | 1)))), int(_GLF_ONE(1.0, injectionSwitch.y)), ((1 << _GLF_IDENTITY(int(2), int(2))) >> _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), (int(2)) - 0)))), ivec3(_GLF_IDENTITY((1 | 1), ~ (~ _GLF_IDENTITY(((1 | 1)), ~ (_GLF_IDENTITY(~ (((1 | 1))), (true ? ~ (((1 | 1))) : _GLF_FUZZED(13072))))))), int(_GLF_ONE(1.0, injectionSwitch.y)), ((1 << _GLF_IDENTITY(int(2), int(2))) >> _GLF_IDENTITY(_GLF_IDENTITY(int(2), int(ivec4(_GLF_IDENTITY(int(2), ~ (~ (int(2)))), 1, 1, ((1 << _GLF_IDENTITY(int(0), _GLF_IDENTITY(int(0), (int(0)) ^ 0))) >> _GLF_IDENTITY(int(0), int(0)))))), int(2))))), (min(ivec3(_GLF_IDENTITY((1 | 1), ~ (~ ((1 | 1)))), int(_GLF_ONE(1.0, injectionSwitch.y)), ((1 << _GLF_IDENTITY(int(2), int(2))) >> _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), (int(2)) - 0)))), ivec3(_GLF_IDENTITY((1 | 1), ~ (~ _GLF_IDENTITY(((1 | 1)), ~ (_GLF_IDENTITY(~ (((1 | 1))), (true ? ~ (((1 | 1))) : _GLF_FUZZED(13072))))))), int(_GLF_ONE(1.0, injectionSwitch.y)), ((1 << _GLF_IDENTITY(int(2), int(2))) >> _GLF_IDENTITY(_GLF_IDENTITY(int(2), int(ivec4(_GLF_IDENTITY(int(2), ~ (~ (int(2)))), 1, 1, ((1 << _GLF_IDENTITY(int(0), _GLF_IDENTITY(int(0), (int(0)) ^ 0))) >> _GLF_IDENTITY(int(0), int(0)))))), int(2)))))) + ivec3(0, 0, 0)))), int(_GLF_IDENTITY(ivec3(_GLF_IDENTITY((1 | 1), ~ (~ ((1 | 1)))), int(_GLF_ONE(1.0, injectionSwitch.y)), ((1 << _GLF_IDENTITY(int(2), int(2))) >> _GLF_IDENTITY(int(2), int(2)))), min(ivec3(_GLF_IDENTITY((1 | 1), ~ (~ ((1 | 1)))), int(_GLF_ONE(1.0, injectionSwitch.y)), (_GLF_IDENTITY((1 << _GLF_IDENTITY(int(2), int(2))) >> _GLF_IDENTITY(_GLF_IDENTITY(int(2), int(_GLF_IDENTITY(2, clamp(2, 2, 2)))), (_GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), (int(2)) + 0))) * _GLF_IDENTITY(((1 << _GLF_IDENTITY(int(1), int(1))) >> _GLF_IDENTITY(int(1), int(1))), (_GLF_IDENTITY(((1 << _GLF_IDENTITY(int(1), int(1))) >> _GLF_IDENTITY(int(1), int(1))), min(((1 << _GLF_IDENTITY(int(1), int(1))) >> _GLF_IDENTITY(int(1), int(1))), ((1 << _GLF_IDENTITY(int(1), int(1))) >> _GLF_IDENTITY(int(1), int(1)))))) | 0)), clamp((1 << _GLF_IDENTITY(int(2), int(2))) >> _GLF_IDENTITY(_GLF_IDENTITY(int(2), int(_GLF_IDENTITY(2, clamp(2, 2, 2)))), (_GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), (int(2)) + 0))) * _GLF_IDENTITY(((1 << _GLF_IDENTITY(int(1), int(1))) >> _GLF_IDENTITY(int(1), int(1))), (_GLF_IDENTITY(((1 << _GLF_IDENTITY(int(1), int(1))) >> _GLF_IDENTITY(int(1), int(1))), min(((1 << _GLF_IDENTITY(int(1), int(1))) >> _GLF_IDENTITY(int(1), int(1))), ((1 << _GLF_IDENTITY(int(1), int(1))) >> _GLF_IDENTITY(int(1), int(1)))))) | 0)), (1 << _GLF_IDENTITY(int(2), int(2))) >> _GLF_IDENTITY(_GLF_IDENTITY(int(2), int(_GLF_IDENTITY(2, clamp(2, 2, 2)))), (_GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), (int(2)) + 0))) * _GLF_IDENTITY(((1 << _GLF_IDENTITY(int(1), int(1))) >> _GLF_IDENTITY(int(1), int(1))), (_GLF_IDENTITY(((1 << _GLF_IDENTITY(int(1), int(1))) >> _GLF_IDENTITY(int(1), int(1))), min(((1 << _GLF_IDENTITY(int(1), int(1))) >> _GLF_IDENTITY(int(1), int(1))), ((1 << _GLF_IDENTITY(int(1), int(1))) >> _GLF_IDENTITY(int(1), int(1)))))) | 0)), (1 << _GLF_IDENTITY(int(2), int(2))) >> _GLF_IDENTITY(_GLF_IDENTITY(int(2), int(_GLF_IDENTITY(2, clamp(2, 2, 2)))), (_GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), (int(2)) + 0))) * _GLF_IDENTITY(((1 << _GLF_IDENTITY(int(1), int(1))) >> _GLF_IDENTITY(int(1), int(1))), (_GLF_IDENTITY(((1 << _GLF_IDENTITY(int(1), int(1))) >> _GLF_IDENTITY(int(1), int(1))), min(((1 << _GLF_IDENTITY(int(1), int(1))) >> _GLF_IDENTITY(int(1), int(1))), ((1 << _GLF_IDENTITY(int(1), int(1))) >> _GLF_IDENTITY(int(1), int(1)))))) | 0)))))), ivec3(_GLF_IDENTITY((1 | 1), ~ (~ ((1 | 1)))), int(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, exp(vec2(0.0, 0.0)) * (injectionSwitch)).y)), (_GLF_IDENTITY((1 << _GLF_IDENTITY(int(2), int(2))) >> _GLF_IDENTITY(int(2), int(2)), ((1 << _GLF_IDENTITY(int(2), int(2))) >> _GLF_IDENTITY(int(_GLF_IDENTITY(2, ~ (~ (2)))), int(2))) * 1))))))))), 1))))))) | int(_GLF_ZERO(0.0, injectionSwitch.x))), (int(_GLF_IDENTITY(ivec3(64, (1 | 1), 1), min(ivec3(64, (1 | 1), 1), ivec3(64, (1 | 1), 1))))) / 1), 0 + (_GLF_IDENTITY(int(_GLF_IDENTITY(ivec3(64, (_GLF_IDENTITY(1 | _GLF_IDENTITY(1, 0 | (1)), clamp(1 | _GLF_IDENTITY(1, 0 | (1)), 1 | _GLF_IDENTITY(1, 0 | (1)), _GLF_IDENTITY(1 | _GLF_IDENTITY(1, 0 | (1)), max(1 | _GLF_IDENTITY(1, 0 | (1)), 1 | _GLF_IDENTITY(1, 0 | (1))))))), 1), min(ivec3(64, (1 | 1), 1), _GLF_IDENTITY(ivec3(64, _GLF_IDENTITY((_GLF_IDENTITY(1 | _GLF_IDENTITY(1, clamp(1, 1, 1)), (_GLF_IDENTITY(1 | _GLF_IDENTITY(1, clamp(1, 1, 1)), (1 | _GLF_IDENTITY(1, clamp(1, 1, 1))) | 0)) | 0)), ~ (_GLF_IDENTITY(~ ((_GLF_IDENTITY(1, (false ? _GLF_FUZZED(bitfieldReverse(11093)) : 1)) | 1)), min(_GLF_IDENTITY(~ ((_GLF_IDENTITY(1, (false ? _GLF_FUZZED(bitfieldReverse(11093)) : 1)) | 1)), (~ ((_GLF_IDENTITY(1, (false ? _GLF_FUZZED(bitfieldReverse(11093)) : 1)) | 1))) | 0), ~ ((_GLF_IDENTITY(1, (false ? _GLF_FUZZED(bitfieldReverse(11093)) : 1)) | 1)))))), 1), ivec3(_GLF_IDENTITY(0, _GLF_IDENTITY(max(_GLF_IDENTITY(0, clamp(0, 0, 0)), 0), int(ivec3(_GLF_IDENTITY(max(_GLF_IDENTITY(0, clamp(0, 0, 0)), 0), max(max(_GLF_IDENTITY(0, clamp(0, 0, 0)), 0), max(_GLF_IDENTITY(0, clamp(0, 0, 0)), 0))), 1, 0)))), 0, 0) ^ (_GLF_IDENTITY(ivec3(64, _GLF_IDENTITY((1 | 1), ~ (~ ((1 | 1)))), 1), clamp(ivec3(64, _GLF_IDENTITY((1 | _GLF_IDENTITY(_GLF_IDENTITY(1, (1) ^ 0), (1) ^ int(_GLF_ZERO(0.0, injectionSwitch.x)))), ~ (~ ((1 | 1)))), 1), ivec3(64, _GLF_IDENTITY((1 | 1), _GLF_IDENTITY(~ (_GLF_IDENTITY(~ ((1 | 1)), 0 + (~ ((_GLF_IDENTITY(1 | 1, (1 | 1) - 0)))))), (~ (~ ((1 | 1)))) - 0)), _GLF_IDENTITY(1, 0 | (1))), ivec3(64, _GLF_IDENTITY((1 | 1), ~ (~ ((1 | 1)))), 1)))))))), (int(_GLF_IDENTITY(ivec3(64, (1 | 1), 1), min(_GLF_IDENTITY(ivec3(64, (1 | 1), 1), max(ivec3(64, (1 | 1), 1), ivec3(64, (1 | 1), 1))), ivec3(64, (1 | 1), _GLF_IDENTITY(1, 0 ^ (_GLF_IDENTITY(1, min(1, _GLF_IDENTITY(1, ~ (~ (1)))))))))))) / 1)))))), _GLF_IDENTITY(4, (4) ^ _GLF_IDENTITY(0, _GLF_IDENTITY(0 | (_GLF_IDENTITY(_GLF_IDENTITY(0, 0 | (_GLF_IDENTITY(0, (false ? _GLF_FUZZED(72398) : 0)))), _GLF_IDENTITY((0), ((_GLF_IDENTITY(0, max(_GLF_IDENTITY(0, max(_GLF_IDENTITY(0, (0) * 1), 0)), _GLF_IDENTITY(0, 0 ^ (_GLF_IDENTITY(0, (0) - 0))))))) | ((0))) | (0))), ~ (~ (0 | (_GLF_IDENTITY(_GLF_IDENTITY(0, _GLF_IDENTITY((_GLF_IDENTITY(0, (0) * 1)), _GLF_IDENTITY(((0)) | ((0)), clamp(_GLF_IDENTITY(((0)) | ((0)), (((0)) | ((0))) | 0), ((0)) | ((0)), ((0)) | ((0))))) | (0)), (_GLF_IDENTITY(0, _GLF_IDENTITY((_GLF_IDENTITY(0, (0) * 1)), ((0)) | ((0))) | (0))) >> 0))))))));
 if(_GLF_DEAD(false))
  return;
}
