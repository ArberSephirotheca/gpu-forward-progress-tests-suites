#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec2(false, false))), (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).y))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   barrier();
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY((false), ((false)) && true) && true)))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec4(false, false, false, true))), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0) > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch), mix(vec2((mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch))[0], (mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch))[1]), vec2(_GLF_FUZZED(7401.0556), _GLF_FUZZED(-410.476)), bvec2(false, false)))).x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
          barrier();
         barrier();
        }
       barrier();
      }
     barrier();
    }
   barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, float(mat3x4(injectionSwitch.x, 0.0, 1.0, 0.0, determinant(mat2(_GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(0.0, 1.0)), dot(_GLF_IDENTITY(vec2(1.0, 0.0), clamp(vec2(1.0, 0.0), vec2(1.0, 0.0), vec2(1.0, 0.0))), vec2(0.0, 1.0))), 0.0, sqrt(0.0), 0.0)), 1.0, 0.0, 1.0, sin(0.0), 1.0, 1.0, 0.0))) > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(true, (true) && true))))))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       return;
      }
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   return;
   if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bool(_GLF_DEAD(false))), ! (! (bool(bool(_GLF_DEAD(false))))))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))))), _GLF_IDENTITY((bool(bool(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(! (! (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (! (! (injectionSwitch.x > injectionSwitch.y)))))))), bool(_GLF_IDENTITY(bvec2((bool(bool(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec2(bvec2(bvec2((bool(bool(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true)))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))) && true))))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY((false), true && ((false))) || false)))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   return;
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) && true), (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(bvec2(! (false), true)))))))
      return;
     barrier();
    }
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      return;
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, exp(_GLF_IDENTITY(0.0, min(0.0, 0.0))) * (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * 1.0)), float(_GLF_FUZZED(234.625)), bool(false))))) > injectionSwitch.y), ! _GLF_IDENTITY((! (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, exp(0.0) * (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * 1.0)), float(_GLF_FUZZED(234.625)), bool(false))))) > injectionSwitch.y), bool(bvec4((_GLF_IDENTITY(injectionSwitch.x, exp(0.0) * (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * 1.0)), float(_GLF_FUZZED(234.625)), bool(false))))) > injectionSwitch.y), true, true, true))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((! (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, exp(0.0) * (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * 1.0)), float(_GLF_FUZZED(234.625)), bool(false))))) > injectionSwitch.y), bool(bvec4((_GLF_IDENTITY(injectionSwitch.x, exp(0.0) * (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * 1.0)), float(_GLF_FUZZED(234.625)), bool(false))))) > injectionSwitch.y), true, true, true))))), bool(bvec4((! (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, exp(0.0) * (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * 1.0)), float(_GLF_FUZZED(234.625)), bool(false))))) > injectionSwitch.y), bool(bvec4((_GLF_IDENTITY(injectionSwitch.x, exp(0.0) * (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * 1.0)), float(_GLF_FUZZED(234.625)), bool(false))))) > injectionSwitch.y), true, true, true))))), true, true, false)))), bool(bvec3(_GLF_IDENTITY(! (_GLF_IDENTITY((! (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, exp(0.0) * (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * 1.0)), float(_GLF_FUZZED(234.625)), bool(false))))) > injectionSwitch.y), bool(bvec4((_GLF_IDENTITY(injectionSwitch.x, exp(0.0) * (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * 1.0)), float(_GLF_FUZZED(234.625)), bool(false))))) > injectionSwitch.y), true, true, true))))), bool(bvec4((! (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, exp(0.0) * (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * 1.0)), float(_GLF_FUZZED(234.625)), bool(false))))) > injectionSwitch.y), bool(bvec4((_GLF_IDENTITY(injectionSwitch.x, exp(0.0) * (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * 1.0)), float(_GLF_FUZZED(234.625)), bool(false))))) > injectionSwitch.y), true, true, true))))), true, true, false)))), false || (! (_GLF_IDENTITY((! (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, exp(0.0) * (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * 1.0)), float(_GLF_FUZZED(234.625)), bool(false))))) > injectionSwitch.y), bool(bvec4((_GLF_IDENTITY(injectionSwitch.x, exp(0.0) * (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * 1.0)), float(_GLF_FUZZED(234.625)), bool(false))))) > injectionSwitch.y), true, true, true))))), bool(bvec4((! (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, exp(0.0) * (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * 1.0)), float(_GLF_FUZZED(234.625)), bool(false))))) > injectionSwitch.y), bool(bvec4((_GLF_IDENTITY(injectionSwitch.x, exp(0.0) * (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * 1.0)), float(_GLF_FUZZED(234.625)), bool(false))))) > injectionSwitch.y), true, true, true))))), true, true, false)))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)))))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y))))))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y))))))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         return;
        }
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_DEAD(false))
  barrier();
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat2x3(injectionSwitch, 0.0, 0.0, cos(0.0), 1.0), (true ? _GLF_IDENTITY(mat2x3(injectionSwitch, 0.0, 0.0, cos(0.0), 1.0), (true ? mat2x3(injectionSwitch, 0.0, 0.0, cos(0.0), 1.0) : _GLF_FUZZED(mat2x3(-26.45, 3640.1461, 470.342, -1467.4273, -736.386, 4.6)))) : _GLF_FUZZED(mat2x3(9.4, -956.579, -34.05, -651.188, -43.65, -5.1)))))).x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_DEAD(false))
  return;
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), (_GLF_IDENTITY(! (true), true && (! (true)))) && _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0)) - determinant(mat3(0.0, 0.0, 0.0, 1.0, sin(0.0), 0.0, 1.0, 0.0, 0.0)))))))) && ((injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y, (injectionSwitch.y) / 1.0)))))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
      return;
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
        barrier();
       return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       barrier();
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 uint num_workgroup = _GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, ~ (~ (_GLF_IDENTITY(gl_NumWorkGroups, clamp(gl_NumWorkGroups, gl_NumWorkGroups, gl_NumWorkGroups))))), (_GLF_IDENTITY(gl_NumWorkGroups, ~ (~ (_GLF_IDENTITY(gl_NumWorkGroups, clamp(gl_NumWorkGroups, gl_NumWorkGroups, gl_NumWorkGroups)))))) | (_GLF_IDENTITY(gl_NumWorkGroups, ~ _GLF_IDENTITY((~ (_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, clamp(gl_NumWorkGroups, gl_NumWorkGroups, gl_NumWorkGroups)), (_GLF_IDENTITY(gl_NumWorkGroups, clamp(gl_NumWorkGroups, gl_NumWorkGroups, _GLF_IDENTITY(gl_NumWorkGroups, uvec3(uvec4(gl_NumWorkGroups, 1u)))))) - uvec3(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))))), ((~ (_GLF_IDENTITY(gl_NumWorkGroups, clamp(gl_NumWorkGroups, gl_NumWorkGroups, gl_NumWorkGroups))))) | uvec3(0u, 0u, 0u))))).x;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    barrier();
   return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true))))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (_GLF_IDENTITY(! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (! (! (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec3(injectionSwitch.x > injectionSwitch.y, false, false))))))))))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (_GLF_IDENTITY(! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (! (! (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec3(injectionSwitch.x > injectionSwitch.y, false, false))))))))))))) || _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).y)))))))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(true && (_GLF_IDENTITY(false, (false) || false)), (true && (_GLF_IDENTITY(false, _GLF_IDENTITY((false) || false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2((false) || false, true), bvec2(bvec3(bvec2((false) || false, true), false)))), (bool(_GLF_IDENTITY(bvec2((false) || false, true), bvec2(bvec3(bvec2((false) || false, true), false))))) && true))))) && true))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) && true)))), (false) || false)))
    return;
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, false, true, true)), false || (bool(bvec4(false, false, true, true)))))))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_DEAD(false), true))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y))))))
    return;
   if(_GLF_DEAD(false))
    return;
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  return;
 uint workgroup_size = gl_WorkGroupSize.x;
 uint workgroup_id = _GLF_IDENTITY(gl_WorkGroupID.x, (_GLF_IDENTITY(gl_WorkGroupID.x, (true ? _GLF_IDENTITY(gl_WorkGroupID, uvec3(0u, 0u, 0u) + (gl_WorkGroupID)).x : _GLF_FUZZED(subgroup_local_id)))) ^ 0u);
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y))))))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), bool(bvec3(bool(bool(false)), false, true))))))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)).y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(vec3(injectionSwitch, 1.0))).y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y) || false))))))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0) > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(false, (false) || false))), bool(bool(bool(bool(_GLF_IDENTITY(false, (false) || false)))))))))
      return;
     return;
    }
   barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, true, true, true)), ! (! (bool(bvec4(false, true, true, true))))))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         return;
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       barrier();
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        barrier();
      }
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  barrier();
 uint workgroup_base = _GLF_IDENTITY(_GLF_IDENTITY(workgroup_size * workgroup_id, min(workgroup_size * workgroup_id, _GLF_IDENTITY(workgroup_size * workgroup_id, uint(uvec3(workgroup_size * workgroup_id, 0u, 0u))))), _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(workgroup_size * workgroup_id, min(workgroup_size * _GLF_IDENTITY(workgroup_id, 0u + (workgroup_id)), _GLF_IDENTITY(workgroup_size * workgroup_id, uint(uvec3(_GLF_IDENTITY(workgroup_size * workgroup_id, (workgroup_size * workgroup_id) << _GLF_IDENTITY(0u, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? 0u : _GLF_FUZZED(workgroup_id)))), 0u, 0u))))), 0u, 1u), (false ? _GLF_FUZZED(uvec3(110549u, 69630u, 81569u)) : uvec3(_GLF_IDENTITY(workgroup_size * workgroup_id, min(workgroup_size * workgroup_id, _GLF_IDENTITY(workgroup_size * workgroup_id, uint(uvec3(workgroup_size * workgroup_id, 0u, 0u))))), 0u, 1u)))), (uint(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(workgroup_size * workgroup_id, min(workgroup_size * workgroup_id, _GLF_IDENTITY(workgroup_size * workgroup_id, uint(uvec3(_GLF_IDENTITY(workgroup_size, (_GLF_IDENTITY(workgroup_size, (workgroup_size) | 0u)) ^ 0u) * workgroup_id, 0u, 0u))))), 0u, 1u), (false ? _GLF_FUZZED(uvec3(110549u, 69630u, 81569u)) : uvec3(_GLF_IDENTITY(workgroup_size * workgroup_id, min(workgroup_size * workgroup_id, _GLF_IDENTITY(_GLF_IDENTITY(workgroup_size, (workgroup_size) >> 0u) * workgroup_id, uint(uvec3(workgroup_size * workgroup_id, _GLF_IDENTITY(0u, (0u) | (0u)), 0u))))), 0u, 1u))))) << 0u));
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(false))
      return;
    }
   barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), true && (! (_GLF_DEAD(false)))))))
    return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        return;
       return;
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
        barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
   if(_GLF_DEAD(false))
    return;
  }
 uint virtual_gid = _GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, uint(_GLF_IDENTITY(uint(workgroup_base + subgroup_id * subgroup_size), uint(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(uvec4(uint(workgroup_base + _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, (false ? _GLF_FUZZED(num_workgroup) : _GLF_IDENTITY(subgroup_id * subgroup_size, (false ? _GLF_IDENTITY(_GLF_FUZZED(subgroup_local_id), (_GLF_FUZZED(subgroup_local_id)) | (_GLF_FUZZED(subgroup_local_id))) : subgroup_id * subgroup_size)))), _GLF_IDENTITY((_GLF_IDENTITY(subgroup_id * subgroup_size, (false ? _GLF_FUZZED(num_workgroup) : _GLF_IDENTITY(subgroup_id * subgroup_size, (false ? _GLF_FUZZED(_GLF_IDENTITY(subgroup_local_id, min(subgroup_local_id, subgroup_local_id))) : subgroup_id * subgroup_size))))) * 1u, uint(_GLF_IDENTITY(uvec2((_GLF_IDENTITY(subgroup_id * subgroup_size, (false ? _GLF_FUZZED(num_workgroup) : _GLF_IDENTITY(subgroup_id * subgroup_size, (false ? _GLF_FUZZED(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, min(subgroup_local_id, subgroup_local_id)), max(_GLF_IDENTITY(subgroup_local_id, min(subgroup_local_id, subgroup_local_id)), _GLF_IDENTITY(subgroup_local_id, min(subgroup_local_id, subgroup_local_id))))) : subgroup_id * subgroup_size))))) * 1u, 0u), (uvec2((_GLF_IDENTITY(subgroup_id * _GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size))), (_GLF_IDENTITY(false, bool(bvec2(false, false))) ? _GLF_FUZZED(num_workgroup) : _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, (false ? _GLF_FUZZED(_GLF_IDENTITY(subgroup_local_id, min(subgroup_local_id, subgroup_local_id))) : subgroup_id * subgroup_size)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(workgroup_id) : _GLF_IDENTITY(subgroup_id * subgroup_size, (false ? _GLF_FUZZED(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, min(subgroup_local_id, subgroup_local_id)), clamp(_GLF_IDENTITY(subgroup_local_id, min(subgroup_local_id, subgroup_local_id)), _GLF_IDENTITY(subgroup_local_id, min(subgroup_local_id, subgroup_local_id)), _GLF_IDENTITY(subgroup_local_id, min(subgroup_local_id, subgroup_local_id))))) : subgroup_id * subgroup_size))))))) * 1u, 0u)) / uvec2(1u, 1u)))))), 1u, 1u, 1u), (_GLF_IDENTITY(uvec4(uint(workgroup_base + _GLF_IDENTITY(subgroup_id * subgroup_size, min(subgroup_id * subgroup_size, subgroup_id * subgroup_size))), 1u, 1u, 1u), max(uvec4(_GLF_IDENTITY(uint(workgroup_base + subgroup_id * subgroup_size), 0u ^ (uint(_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, uint(uvec4(_GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_id * subgroup_size, min(subgroup_id * subgroup_size, subgroup_id * subgroup_size)), (true ? workgroup_base + subgroup_id * subgroup_size : _GLF_FUZZED((workgroup_size ++)))), (0u ^ 1u), 0u, (_GLF_IDENTITY((1u << _GLF_IDENTITY(uint(7u), uint(7u))) >> _GLF_IDENTITY(uint(7u), uint(7u)), ((1u << _GLF_IDENTITY(uint(7u), uint(7u))) >> _GLF_IDENTITY(uint(7u), uint(7u))) + 0u)))))))), 1u, 1u, 1u), uvec4(uint(workgroup_base + subgroup_id * subgroup_size), 1u, 1u, 1u)))) >> uvec4(0u, 0u, 0u, _GLF_IDENTITY(0u, uint(uvec2(_GLF_IDENTITY(0u, min(0u, 0u)), 1u))))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(uvec4(uint(workgroup_base + _GLF_IDENTITY(subgroup_id * subgroup_size, (_GLF_IDENTITY(false, ! (! (false))) ? _GLF_FUZZED(num_workgroup) : _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, 0u ^ (subgroup_id * subgroup_size)), (false ? _GLF_FUZZED(subgroup_local_id) : subgroup_id * subgroup_size)), ~ (~ (_GLF_IDENTITY(subgroup_id * subgroup_size, (false ? _GLF_FUZZED(subgroup_local_id) : subgroup_id * subgroup_size)))))))), 1u, 1u, 1u), (_GLF_IDENTITY(uvec4(uint(workgroup_base + subgroup_id * subgroup_size), 1u, 1u, 1u), max(uvec4(uint(workgroup_base + subgroup_id * subgroup_size), 1u, 1u, _GLF_IDENTITY(1u, (1u) | 0u)), uvec4(uint(workgroup_base + subgroup_id * subgroup_size), _GLF_IDENTITY(1u, (1u) * (0u | uint(_GLF_ONE(1.0, injectionSwitch.y)))), 1u, 1u)))) >> uvec4(0u, 0u, 0u, _GLF_IDENTITY(0u, uint(uvec2(_GLF_IDENTITY(0u, min(0u, 0u)), 1u))))), _GLF_IDENTITY(uvec4(0u, 0u, 0u, 0u), max(uvec4(_GLF_IDENTITY(0u, (0u >> _GLF_IDENTITY(uint(8u), _GLF_IDENTITY(uint(8u), min(uint(8u), uint(8u))))) ^ (0u)), 0u, 0u, 0u), uvec4(0u, 0u, 0u, 0u))) ^ (_GLF_IDENTITY(_GLF_IDENTITY(uvec4(uint(workgroup_base + _GLF_IDENTITY(subgroup_id * subgroup_size, (false ? _GLF_FUZZED(num_workgroup) : _GLF_IDENTITY(subgroup_id * subgroup_size, (false ? _GLF_FUZZED(subgroup_local_id) : subgroup_id * subgroup_size))))), 1u, 1u, 1u), (_GLF_IDENTITY(uvec4(uint(workgroup_base + subgroup_id * subgroup_size), 1u, 1u, _GLF_IDENTITY(1u, (1u) ^ (0u << _GLF_IDENTITY(uint(5u), uint(5u))))), max(uvec4(uint(_GLF_IDENTITY(workgroup_base, 0u | (_GLF_IDENTITY(workgroup_base, (true ? workgroup_base : _GLF_FUZZED(workgroup_base))))) + subgroup_id * subgroup_size), 1u, 1u, 1u), uvec4(uint(workgroup_base + _GLF_IDENTITY(subgroup_id * subgroup_size, clamp(subgroup_id * subgroup_size, _GLF_IDENTITY(subgroup_id * subgroup_size, ~ (~ (subgroup_id * subgroup_size))), subgroup_id * subgroup_size))), 1u, _GLF_IDENTITY(1u, (1u) | (_GLF_IDENTITY(1u, ~ _GLF_IDENTITY((~ (1u)), ((~ (1u))) ^ 0u)))), 1u)))) >> uvec4(0u, 0u, 0u, _GLF_IDENTITY(0u, uint(_GLF_IDENTITY(uvec2(_GLF_IDENTITY(0u, min(0u, 0u)), 1u), uvec2(0u, 0u) | (_GLF_IDENTITY(uvec2(_GLF_IDENTITY(0u, min(0u, 0u)), 1u), uvec2(0u, 0u) ^ (_GLF_IDENTITY(uvec2(_GLF_IDENTITY(0u, min(0u, 0u)), 1u), (_GLF_IDENTITY(uvec2(_GLF_IDENTITY(0u, min(0u, 0u)), 1u), (uvec2(_GLF_IDENTITY(0u, min(0u, 0u)), 1u)) ^ uvec2(0u, 0u))) ^ uvec2(0u, 0u)))))))))), (_GLF_IDENTITY(uvec4(uint(workgroup_base + _GLF_IDENTITY(subgroup_id * subgroup_size, (false ? _GLF_FUZZED(num_workgroup) : _GLF_IDENTITY(subgroup_id * subgroup_size, (false ? _GLF_FUZZED(subgroup_local_id) : _GLF_IDENTITY(subgroup_id, (true ? subgroup_id : _GLF_FUZZED(atomicAdd(subgroup_local_id, workgroup_size)))) * subgroup_size))))), 1u, 1u, 1u), (_GLF_IDENTITY(uvec4(uint(workgroup_base + subgroup_id * subgroup_size), 1u, 1u, _GLF_IDENTITY(1u, (1u) ^ _GLF_IDENTITY((0u << _GLF_IDENTITY(uint(5u), uint(5u))), ((0u << _GLF_IDENTITY(uint(5u), uint(5u)))) | ((0u << _GLF_IDENTITY(uint(5u), uint(5u))))))), max(uvec4(uint(_GLF_IDENTITY(workgroup_base, 0u | (_GLF_IDENTITY(workgroup_base, (_GLF_IDENTITY(true, (_GLF_IDENTITY(true, false || (true))) || _GLF_IDENTITY(false, bool(bvec4(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, false)))) ? workgroup_base : _GLF_FUZZED(workgroup_base))))) + subgroup_id * subgroup_size), 1u, 1u, 1u), uvec4(uint(workgroup_base + subgroup_id * subgroup_size), 1u, _GLF_IDENTITY(1u, (1u) | _GLF_IDENTITY((_GLF_IDENTITY(1u, ~ _GLF_IDENTITY((~ (1u)), ((~ (1u))) ^ 0u))), ~ (_GLF_IDENTITY(~ ((_GLF_IDENTITY(1u, ~ _GLF_IDENTITY((~ (1u)), ((~ (1u))) ^ 0u)))), max(~ ((_GLF_IDENTITY(1u, ~ _GLF_IDENTITY((~ (1u)), _GLF_IDENTITY(((~ (1u))) ^ 0u, ~ (_GLF_IDENTITY(~ (((~ (1u))) ^ 0u), (~ (((~ (1u))) ^ 0u)) << 0u))))))), ~ ((_GLF_IDENTITY(1u, ~ _GLF_IDENTITY(_GLF_IDENTITY((~ (1u)), (_GLF_IDENTITY((~ (1u)), ((~ (1u))) / 1u)) >> 0u), ((~ (_GLF_IDENTITY(1u, clamp(1u, 1u, 1u))))) ^ 0u))))))))), 1u)))) >> uvec4(0u, 0u, 0u, _GLF_IDENTITY(0u, _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec2(_GLF_IDENTITY(0u, min(0u, 0u)), 1u), uvec2(_GLF_IDENTITY(0u, (0u) >> 0u), 0u) | (_GLF_IDENTITY(_GLF_IDENTITY(uvec2(_GLF_IDENTITY(0u, min(0u, 0u)), 1u), uvec2(0u, 0u) ^ (uvec2(_GLF_IDENTITY(0u, min(0u, 0u)), 1u))), uvec2(0u, 0u) | (_GLF_IDENTITY(_GLF_IDENTITY(uvec2(_GLF_IDENTITY(0u, min(0u, 0u)), 1u), uvec2(0u, 0u) ^ (uvec2(_GLF_IDENTITY(0u, min(0u, 0u)), 1u))), (_GLF_IDENTITY(uvec2(_GLF_IDENTITY(0u, min(0u, 0u)), 1u), uvec2(0u, 0u) ^ (uvec2(_GLF_IDENTITY(0u, min(0u, 0u)), 1u)))) << uvec2(0u, 0u))))))), max(uint(_GLF_IDENTITY(uvec2(_GLF_IDENTITY(0u, min(0u, _GLF_IDENTITY(0u, clamp(0u, 0u, 0u)))), 1u), uvec2(_GLF_IDENTITY(0u, (0u) >> 0u), 0u) | (_GLF_IDENTITY(uvec2(_GLF_IDENTITY(0u, min(0u, 0u)), 1u), uvec2(0u, 0u) ^ (uvec2(_GLF_IDENTITY(0u, min(0u, 0u)), 1u)))))), _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec2(_GLF_IDENTITY(0u, min(0u, 0u)), 1u), uvec2(_GLF_IDENTITY(0u, (0u) >> 0u), 0u) | (_GLF_IDENTITY(uvec2(_GLF_IDENTITY(0u, min(0u, 0u)), 1u), uvec2(0u, 0u) ^ (uvec2(_GLF_IDENTITY(0u, min(0u, 0u)), 1u)))))), clamp(uint(_GLF_IDENTITY(uvec2(_GLF_IDENTITY(0u, min(0u, 0u)), 1u), uvec2(_GLF_IDENTITY(0u, (0u) >> 0u), 0u) | (_GLF_IDENTITY(uvec2(_GLF_IDENTITY(0u, min(0u, 0u)), 1u), uvec2(_GLF_IDENTITY(0u, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(subgroup_id) : _GLF_IDENTITY(0u, (0u) << 0u))), 0u) ^ (uvec2(_GLF_IDENTITY(0u, min(0u, 0u)), 1u)))))), uint(_GLF_IDENTITY(uvec2(_GLF_IDENTITY(0u, min(0u, 0u)), 1u), uvec2(_GLF_IDENTITY(0u, (0u) >> 0u), 0u) | (_GLF_IDENTITY(uvec2(_GLF_IDENTITY(0u, min(0u, 0u)), 1u), uvec2(0u, 0u) ^ (uvec2(_GLF_IDENTITY(0u, min(0u, 0u)), 1u)))))), uint(_GLF_IDENTITY(uvec2(_GLF_IDENTITY(0u, min(0u, 0u)), 1u), uvec2(_GLF_IDENTITY(0u, (0u) >> 0u), 0u) | (_GLF_IDENTITY(uvec2(_GLF_IDENTITY(0u, min(0u, 0u)), 1u), uvec2(0u, 0u) ^ (uvec2(_GLF_IDENTITY(0u, min(0u, 0u)), 1u)))))))))))))) * uvec4(1u, 1u, 1u, 1u)))), _GLF_IDENTITY(uvec4(uint(_GLF_IDENTITY(workgroup_base, max(_GLF_IDENTITY(workgroup_base, uint(uvec4(workgroup_base, 1u, 0u, 0u))), _GLF_IDENTITY(workgroup_base, clamp(_GLF_IDENTITY(workgroup_base, (workgroup_base) >> 0u), workgroup_base, workgroup_base)))) + _GLF_IDENTITY(subgroup_id * subgroup_size, (false ? _GLF_FUZZED(num_workgroup) : _GLF_IDENTITY(subgroup_id * subgroup_size, (_GLF_IDENTITY(false, bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, (injectionSwitch.x < injectionSwitch.y) || false)))), ! (! (false))), false, true), bvec3(bvec3(bvec3(_GLF_IDENTITY(false, ! (! (false))), false, true)))), bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), ! (! (! (! (false)))))), false, true), bvec3(bvec3(bvec3(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) || false)))), false, true)))), bvec3(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(bool(_GLF_IDENTITY(! (false), false || (! (false)))))))), false, true), bvec3(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, ! (! (false))), false, true), bvec3(_GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY(false, ! (! (false))), false, true)), bvec3(bvec3(bvec3(bvec3(_GLF_IDENTITY(false, ! (! (false))), false, true)))))))))))))), bvec3(bvec4(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(bvec3(false, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), ! (! (false))), false, true), _GLF_IDENTITY(bvec3(bvec3(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false, false || _GLF_IDENTITY((false), bool(bvec3((false), false, true)))), ! (! (false))), false, true))), bvec3(bvec3(bvec3(bvec3(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false, false || _GLF_IDENTITY((false), bool(bvec3((false), false, true)))), ! (! (false))), false, true))))))), _GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((false), ! (_GLF_IDENTITY(! ((false)), bool(bvec3(_GLF_IDENTITY(! ((false)), (! ((false))) && true), true, false))))))), false, true), bvec3(bvec3(bvec3(_GLF_IDENTITY(false, ! (! (false))), _GLF_IDENTITY(false, false || (false)), true)))))), bvec3(_GLF_IDENTITY(bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((false), ! (_GLF_IDENTITY(! ((false)), bool(bvec3(_GLF_IDENTITY(! ((false)), (! ((false))) && true), true, false))))))), false, true), bvec3(bvec3(bvec3(_GLF_IDENTITY(false, ! (! (false))), _GLF_IDENTITY(false, false || (false)), true))))))), _GLF_IDENTITY(bvec3(bvec3(bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((false), ! (_GLF_IDENTITY(! ((false)), bool(bvec3(_GLF_IDENTITY(! ((false)), (! ((false))) && true), true, false))))))), false, true), bvec3(bvec3(bvec3(_GLF_IDENTITY(false, ! (! (false))), _GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), (_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), (_GLF_IDENTITY(false, false || (false))) || false)) || false), true))))))))), bvec3(bvec3(bvec3(bvec3(bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((false), ! (_GLF_IDENTITY(_GLF_IDENTITY(! ((false)), bool(_GLF_IDENTITY(bvec3(! ((false)), true, false), bvec3(bvec3(bvec3(! ((false)), true, false)))))), bool(bvec3(_GLF_IDENTITY(! ((false)), (! ((false))) && true), true, false))))))), false, true), bvec3(bvec3(bvec3(_GLF_IDENTITY(false, ! (! (false))), _GLF_IDENTITY(false, false || (false)), true))))))))))))))))), false))))))) ? _GLF_FUZZED(subgroup_local_id) : subgroup_id * subgroup_size))))), 1u, 1u, 1u), (_GLF_IDENTITY(uvec4(_GLF_IDENTITY(uint(workgroup_base + _GLF_IDENTITY(subgroup_id, (subgroup_id) ^ 0u) * subgroup_size), _GLF_IDENTITY((uint(workgroup_base + _GLF_IDENTITY(subgroup_id, (subgroup_id) ^ 0u) * subgroup_size)) << 0u, 0u ^ ((uint(workgroup_base + _GLF_IDENTITY(subgroup_id, (subgroup_id) ^ 0u) * subgroup_size)) << 0u))), 1u, 1u, 1u), max(uvec4(uint(workgroup_base + subgroup_id * subgroup_size), 1u, 1u, 1u), _GLF_IDENTITY(uvec4(uint(workgroup_base + subgroup_id * subgroup_size), 1u, 1u, 1u), clamp(_GLF_IDENTITY(uvec4(uint(workgroup_base + subgroup_id * subgroup_size), 1u, 1u, 1u), uvec4(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)) ^ (uvec4(uint(workgroup_base + subgroup_id * subgroup_size), 1u, 1u, 1u))), uvec4(uint(workgroup_base + subgroup_id * subgroup_size), 1u, 1u, 1u), uvec4(uint(workgroup_base + subgroup_id * subgroup_size), 1u, 1u, 1u)))))) >> uvec4(0u, 0u, 0u, _GLF_IDENTITY(0u, uint(_GLF_IDENTITY(uvec2(_GLF_IDENTITY(0u, _GLF_IDENTITY(min(0u, 0u), (min(0u, 0u)) >> 0u)), 1u), (uvec2(_GLF_IDENTITY(0u, min(0u, 0u)), 1u)) * uvec2(1u, 1u)))))), _GLF_IDENTITY(uvec4(uint(workgroup_base + _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (subgroup_id) >> (0u | 0u)) * subgroup_size, (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), false || (! (false))))) ? _GLF_IDENTITY(_GLF_FUZZED(num_workgroup), clamp(_GLF_FUZZED(num_workgroup), _GLF_FUZZED(num_workgroup), _GLF_IDENTITY(_GLF_FUZZED(num_workgroup), (false ? _GLF_FUZZED(atomicMax(subgroup_local_id, subgroup_size)) : _GLF_FUZZED(num_workgroup))))) : _GLF_IDENTITY(subgroup_id * subgroup_size, (false ? _GLF_FUZZED(subgroup_local_id) : subgroup_id * subgroup_size))))), 1u, _GLF_IDENTITY(1u, (1u) | (1u)), 1u), (_GLF_IDENTITY(uvec4(uint(workgroup_base + subgroup_id * subgroup_size), 1u, 1u, 1u), max(uvec4(uint(_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, (true ? workgroup_base + subgroup_id * subgroup_size : _GLF_FUZZED(workgroup_size)))), 1u, 1u, 1u), uvec4(uint(workgroup_base + subgroup_id * subgroup_size), 1u, 1u, 1u)))) >> uvec4(0u, 0u, 0u, _GLF_IDENTITY(0u, uint(uvec2(_GLF_IDENTITY(0u, min(0u, 0u)), 1u))))))), (_GLF_IDENTITY(_GLF_IDENTITY(uvec4(uint(workgroup_base + _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, (false ? _GLF_FUZZED(num_workgroup) : _GLF_IDENTITY(subgroup_id * subgroup_size, (false ? _GLF_FUZZED(subgroup_local_id) : subgroup_id * subgroup_size)))), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (subgroup_id) | uint(_GLF_ZERO(0.0, injectionSwitch.x))) * subgroup_size, (false ? _GLF_FUZZED(num_workgroup) : _GLF_IDENTITY(subgroup_id * subgroup_size, (false ? _GLF_FUZZED(_GLF_IDENTITY(subgroup_local_id, min(subgroup_local_id, subgroup_local_id))) : subgroup_id * subgroup_size))))) * 1u, uint(_GLF_IDENTITY(uvec2((_GLF_IDENTITY(subgroup_id * subgroup_size, (false ? _GLF_FUZZED(num_workgroup) : _GLF_IDENTITY(subgroup_id * subgroup_size, (false ? _GLF_FUZZED(_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY(min(subgroup_local_id, subgroup_local_id), (false ? _GLF_FUZZED(subgroup_size) : min(subgroup_local_id, subgroup_local_id))))) : subgroup_id * subgroup_size))))) * 1u, 0u), (uvec2((_GLF_IDENTITY(subgroup_id * subgroup_size, (false ? _GLF_FUZZED(num_workgroup) : _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, (false ? _GLF_FUZZED(_GLF_IDENTITY(subgroup_local_id, min(subgroup_local_id, subgroup_local_id))) : subgroup_id * subgroup_size)), (_GLF_IDENTITY(subgroup_id * subgroup_size, (false ? _GLF_FUZZED(_GLF_IDENTITY(subgroup_local_id, min(subgroup_local_id, subgroup_local_id))) : subgroup_id * subgroup_size))) ^ (0u << _GLF_IDENTITY(uint(7u), _GLF_IDENTITY(uint(7u), clamp(uint(7u), uint(7u), uint(7u))))))))) * 1u, 0u)) / uvec2(1u, 1u)))))), 1u, 1u, 1u), (_GLF_IDENTITY(uvec4(uint(workgroup_base + _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, clamp(subgroup_id * subgroup_size, subgroup_id * subgroup_size, subgroup_id * subgroup_size)), _GLF_IDENTITY(min(subgroup_id * subgroup_size, subgroup_id * subgroup_size), _GLF_IDENTITY(_GLF_IDENTITY(0u, max(_GLF_IDENTITY(0u, (0u) | 0u), 0u)) ^ (min(subgroup_id * subgroup_size, subgroup_id * subgroup_size)), (0u ^ (min(subgroup_id * subgroup_size, subgroup_id * subgroup_size))) - (0u >> _GLF_IDENTITY(uint(3u), uint(3u))))))), 1u, 1u, 1u), _GLF_IDENTITY(max(uvec4(_GLF_IDENTITY(uint(workgroup_base + subgroup_id * subgroup_size), 0u ^ (uint(_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, uint(uvec4(_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, (true ? workgroup_base + subgroup_id * subgroup_size : _GLF_FUZZED((workgroup_size ++)))), (0u ^ 1u), 0u, ((1u << _GLF_IDENTITY(uint(7u), uint(7u))) >> _GLF_IDENTITY(uint(7u), uint(7u))))))))), 1u, 1u, 1u), uvec4(uint(workgroup_base + subgroup_id * subgroup_size), 1u, 1u, 1u)), (max(uvec4(_GLF_IDENTITY(uint(workgroup_base + subgroup_id * subgroup_size), 0u ^ (uint(_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, uint(uvec4(_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, (true ? workgroup_base + subgroup_id * subgroup_size : _GLF_FUZZED((workgroup_size ++)))), (0u ^ 1u), 0u, ((1u << _GLF_IDENTITY(uint(7u), uint(7u))) >> _GLF_IDENTITY(uint(_GLF_IDENTITY(7u, max(7u, 7u))), uint(7u))))))))), 1u, 1u, 1u), uvec4(uint(workgroup_base + subgroup_id * subgroup_size), 1u, 1u, 1u))) - uvec4(0u, 0u, 0u, 0u)))) >> uvec4(0u, 0u, 0u, _GLF_IDENTITY(0u, uint(uvec2(_GLF_IDENTITY(_GLF_IDENTITY(0u, min(0u, 0u)), clamp(_GLF_IDENTITY(0u, min(0u, 0u)), _GLF_IDENTITY(0u, min(0u, 0u)), _GLF_IDENTITY(0u, min(0u, 0u)))), 1u))))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(uvec4(uint(workgroup_base + _GLF_IDENTITY(subgroup_id * subgroup_size, (_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), false || ((! (false))))) ? _GLF_FUZZED(num_workgroup) : _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, (false ? _GLF_FUZZED(subgroup_local_id) : subgroup_id * subgroup_size)), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(subgroup_id * subgroup_size, (false ? _GLF_FUZZED(subgroup_local_id) : subgroup_id * subgroup_size))), uint(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), max(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), float(mat3x4(_GLF_ZERO(0.0, injectionSwitch.x), 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0))), _GLF_ZERO(0.0, injectionSwitch.x)))) ^ (~ (_GLF_IDENTITY(subgroup_id * subgroup_size, (false ? _GLF_FUZZED(_GLF_IDENTITY(subgroup_local_id, clamp(subgroup_local_id, _GLF_IDENTITY(subgroup_local_id, ~ (~ (subgroup_local_id))), subgroup_local_id))) : _GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) | (0u | (0u << _GLF_IDENTITY(uint(4u), uint(4u))))))))))))))), 1u, 1u, 1u), (uvec4(uint(workgroup_base + _GLF_IDENTITY(subgroup_id * subgroup_size, (_GLF_IDENTITY(false, ! (! (false))) ? _GLF_FUZZED(num_workgroup) : _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, (false) && true)))))) ? _GLF_FUZZED(subgroup_local_id) : subgroup_id * subgroup_size)), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(subgroup_id * subgroup_size, (false ? _GLF_IDENTITY(_GLF_FUZZED(subgroup_local_id), min(_GLF_FUZZED(subgroup_local_id), _GLF_FUZZED(subgroup_local_id))) : subgroup_id * subgroup_size))), uint(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (~ (_GLF_IDENTITY(subgroup_id * subgroup_size, (false ? _GLF_FUZZED(subgroup_local_id) : subgroup_id * subgroup_size)))))))))), 1u, 1u, 1u)) * uvec4(1u, 1u, 1u, 1u)), (_GLF_IDENTITY(_GLF_IDENTITY(uvec4(uint(workgroup_base + subgroup_id * subgroup_size), 1u, 1u, 1u), (uvec4(uint(workgroup_base + subgroup_id * subgroup_size), 1u, 1u, 1u)) | (uvec4(uint(workgroup_base + subgroup_id * subgroup_size), 1u, 1u, 1u))), max(uvec4(uint(workgroup_base + _GLF_IDENTITY(subgroup_id, uint(_GLF_IDENTITY(uvec3(subgroup_id, 1u, ((1u << _GLF_IDENTITY(uint(6u), uint(6u))) >> _GLF_IDENTITY(uint(6u), uint(6u)))), (uvec3(subgroup_id, 1u, ((1u << _GLF_IDENTITY(uint(6u), uint(6u))) >> _GLF_IDENTITY(uint(6u), uint(6u))))) ^ uvec3(0u, 0u, 0u)))) * subgroup_size), 1u, 1u, 1u), uvec4(uint(workgroup_base + subgroup_id * subgroup_size), 1u, 1u, 1u)))) >> uvec4(0u, 0u, 0u, _GLF_IDENTITY(0u, uint(uvec2(_GLF_IDENTITY(0u, min(0u, 0u)), 1u))))), _GLF_IDENTITY(uvec4(0u, 0u, 0u, 0u), max(uvec4(0u, 0u, 0u, 0u), uvec4(0u, 0u, 0u, 0u))) ^ (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(uvec4(uint(_GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_id * subgroup_size, (false ? _GLF_FUZZED(num_workgroup) : _GLF_IDENTITY(subgroup_id * subgroup_size, _GLF_IDENTITY((false ? _GLF_FUZZED(subgroup_local_id) : subgroup_id * subgroup_size), 0u | ((false ? _GLF_FUZZED(subgroup_local_id) : subgroup_id * subgroup_size)))))), min(workgroup_base + _GLF_IDENTITY(subgroup_id * subgroup_size, (false ? _GLF_FUZZED(num_workgroup) : _GLF_IDENTITY(subgroup_id * subgroup_size, _GLF_IDENTITY((false ? _GLF_FUZZED(subgroup_local_id) : subgroup_id * subgroup_size), 0u | ((false ? _GLF_FUZZED(subgroup_local_id) : subgroup_id * subgroup_size)))))), workgroup_base + _GLF_IDENTITY(subgroup_id * subgroup_size, (false ? _GLF_FUZZED(num_workgroup) : _GLF_IDENTITY(subgroup_id * subgroup_size, _GLF_IDENTITY((false ? _GLF_FUZZED(subgroup_local_id) : subgroup_id * subgroup_size), 0u | ((false ? _GLF_FUZZED(subgroup_local_id) : subgroup_id * subgroup_size))))))))), 1u, 1u, 1u), uvec4(1u, 1u, 1u, 1u) * (uvec4(uint(_GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_id * subgroup_size, (false ? _GLF_FUZZED(num_workgroup) : _GLF_IDENTITY(subgroup_id * subgroup_size, _GLF_IDENTITY((false ? _GLF_FUZZED(subgroup_local_id) : subgroup_id * subgroup_size), 0u | ((false ? _GLF_FUZZED(subgroup_local_id) : subgroup_id * subgroup_size)))))), min(workgroup_base + _GLF_IDENTITY(subgroup_id * subgroup_size, (false ? _GLF_FUZZED(num_workgroup) : _GLF_IDENTITY(subgroup_id * subgroup_size, _GLF_IDENTITY((false ? _GLF_FUZZED(subgroup_local_id) : subgroup_id * subgroup_size), 0u | ((false ? _GLF_FUZZED(subgroup_local_id) : subgroup_id * subgroup_size)))))), workgroup_base + _GLF_IDENTITY(subgroup_id * subgroup_size, (false ? _GLF_FUZZED(num_workgroup) : _GLF_IDENTITY(subgroup_id * subgroup_size, _GLF_IDENTITY((false ? _GLF_FUZZED(subgroup_local_id) : subgroup_id * subgroup_size), 0u | ((false ? _GLF_FUZZED(subgroup_local_id) : subgroup_id * subgroup_size))))))))), 1u, 1u, 1u))), (_GLF_IDENTITY(uvec4(uint(workgroup_base + subgroup_id * subgroup_size), 1u, 1u, _GLF_IDENTITY(1u, (1u) ^ (0u << _GLF_IDENTITY(uint(5u), uint(5u))))), max(uvec4(uint(_GLF_IDENTITY(workgroup_base, 0u | (_GLF_IDENTITY(workgroup_base, (true ? workgroup_base : _GLF_FUZZED(workgroup_base))))) + _GLF_IDENTITY(subgroup_id, ~ (~ (subgroup_id))) * subgroup_size), 1u, 1u, 1u), uvec4(uint(workgroup_base + subgroup_id * subgroup_size), 1u, _GLF_IDENTITY(1u, (1u) | (_GLF_IDENTITY(1u, ~ _GLF_IDENTITY((~ (1u)), ((~ (1u))) ^ 0u)))), 1u)))) >> uvec4(0u, 0u, 0u, _GLF_IDENTITY(0u, uint(_GLF_IDENTITY(_GLF_IDENTITY(uvec2(_GLF_IDENTITY(0u, min(0u, 0u)), 1u), uvec2(0u, 0u) | (_GLF_IDENTITY(uvec2(_GLF_IDENTITY(0u, min(0u, 0u)), 1u), _GLF_IDENTITY(uvec2(0u, 0u), uvec2(uvec4(uvec2(0u, 0u), 0u, 0u))) ^ (uvec2(_GLF_IDENTITY(0u, min(0u, 0u)), 1u))))), min(_GLF_IDENTITY(uvec2(_GLF_IDENTITY(0u, min(0u, 0u)), 1u), uvec2(0u, 0u) | (_GLF_IDENTITY(uvec2(_GLF_IDENTITY(0u, min(0u, 0u)), 1u), _GLF_IDENTITY(uvec2(0u, 0u), uvec2(uvec4(uvec2(0u, 0u), 0u, 0u))) ^ (uvec2(_GLF_IDENTITY(0u, min(0u, 0u)), 1u))))), _GLF_IDENTITY(uvec2(_GLF_IDENTITY(0u, min(0u, 0u)), 1u), uvec2(0u, 0u) | (_GLF_IDENTITY(uvec2(_GLF_IDENTITY(0u, min(0u, 0u)), 1u), _GLF_IDENTITY(uvec2(0u, 0u), uvec2(uvec4(uvec2(0u, 0u), 0u, 0u))) ^ (uvec2(_GLF_IDENTITY(0u, min(0u, 0u)), 1u))))))))))), (_GLF_IDENTITY(uvec4(uint(workgroup_base + _GLF_IDENTITY(subgroup_id * subgroup_size, (false ? _GLF_FUZZED(num_workgroup) : _GLF_IDENTITY(subgroup_id * subgroup_size, (false ? _GLF_FUZZED(subgroup_local_id) : subgroup_id * subgroup_size))))), 1u, 1u, 1u), (_GLF_IDENTITY(uvec4(uint(workgroup_base + subgroup_id * subgroup_size), 1u, 1u, _GLF_IDENTITY(1u, (1u) ^ (0u << _GLF_IDENTITY(uint(5u), uint(5u))))), max(uvec4(uint(_GLF_IDENTITY(workgroup_base, 0u | (_GLF_IDENTITY(workgroup_base, (_GLF_IDENTITY(true, (_GLF_IDENTITY(true, false || (true))) || false) ? workgroup_base : _GLF_FUZZED(workgroup_base))))) + subgroup_id * subgroup_size), 1u, 1u, 1u), uvec4(uint(workgroup_base + subgroup_id * subgroup_size), 1u, _GLF_IDENTITY(1u, (1u) | _GLF_IDENTITY((_GLF_IDENTITY(1u, ~ _GLF_IDENTITY((~ (1u)), ((~ (1u))) ^ 0u))), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(1u, ~ _GLF_IDENTITY((~ (1u)), ((~ (1u))) ^ 0u))), clamp(_GLF_IDENTITY((_GLF_IDENTITY(1u, ~ _GLF_IDENTITY((~ (1u)), ((~ (1u))) ^ 0u))), (1u & 1u) * ((_GLF_IDENTITY(1u, ~ _GLF_IDENTITY((~ (1u)), ((~ (1u))) ^ 0u))))), (_GLF_IDENTITY(1u, ~ _GLF_IDENTITY((~ (1u)), ((~ (1u))) ^ 0u))), (_GLF_IDENTITY(1u, ~ _GLF_IDENTITY((~ (1u)), ((~ (1u))) ^ 0u))))), (false ? _GLF_FUZZED(subgroup_local_id) : _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(1u, ~ _GLF_IDENTITY((~ (1u)), ((~ (1u))) ^ 0u))), clamp(_GLF_IDENTITY((_GLF_IDENTITY(1u, ~ _GLF_IDENTITY((~ (1u)), ((~ (1u))) ^ _GLF_IDENTITY(0u, _GLF_IDENTITY(uint(uint(0u)), (true ? uint(uint(0u)) : _GLF_FUZZED(subgroup_size))))))), (1u & 1u) * (_GLF_IDENTITY((_GLF_IDENTITY(1u, ~ _GLF_IDENTITY((~ (1u)), ((~ (1u))) ^ 0u))), ((_GLF_IDENTITY(1u, ~ _GLF_IDENTITY((~ (1u)), ((~ (1u))) ^ 0u)))) / ((1u << _GLF_IDENTITY(uint(2u), uint(2u))) >> _GLF_IDENTITY(uint(2u), uint(2u)))))), (_GLF_IDENTITY(1u, ~ _GLF_IDENTITY((~ (1u)), ((~ (1u))) ^ 0u))), (_GLF_IDENTITY(1u, ~ _GLF_IDENTITY((~ (1u)), ((~ (1u))) ^ 0u))))), max(_GLF_IDENTITY((_GLF_IDENTITY(1u, ~ _GLF_IDENTITY((~ (1u)), ((~ (1u))) ^ 0u))), clamp(_GLF_IDENTITY((_GLF_IDENTITY(1u, ~ _GLF_IDENTITY((~ (1u)), _GLF_IDENTITY(((~ (1u))), (((~ (1u)))) | (((~ (1u))))) ^ 0u))), (1u & 1u) * ((_GLF_IDENTITY(1u, ~ _GLF_IDENTITY((~ (1u)), ((~ (1u))) ^ 0u))))), (_GLF_IDENTITY(1u, ~ _GLF_IDENTITY((~ (1u)), ((~ (1u))) ^ 0u))), (_GLF_IDENTITY(1u, ~ _GLF_IDENTITY((~ (1u)), ((~ (1u))) ^ 0u))))), _GLF_IDENTITY((_GLF_IDENTITY(1u, ~ _GLF_IDENTITY((~ (1u)), ((~ (1u))) ^ 0u))), clamp(_GLF_IDENTITY((_GLF_IDENTITY(1u, ~ _GLF_IDENTITY((~ (1u)), ((~ (1u))) ^ 0u))), (1u & 1u) * ((_GLF_IDENTITY(1u, ~ _GLF_IDENTITY((~ (1u)), ((~ (1u))) ^ 0u))))), (_GLF_IDENTITY(1u, ~ _GLF_IDENTITY((~ (1u)), ((~ (1u))) ^ 0u))), (_GLF_IDENTITY(1u, ~ _GLF_IDENTITY((~ (1u)), ((~ (1u))) ^ 0u)))))))))), max(~ ((_GLF_IDENTITY(1u, ~ _GLF_IDENTITY((~ (1u)), ((~ (1u))) ^ 0u)))), ~ ((_GLF_IDENTITY(1u, ~ _GLF_IDENTITY((~ (1u)), ((~ (1u))) ^ 0u))))))))), 1u)))) >> uvec4(0u, 0u, 0u, _GLF_IDENTITY(_GLF_IDENTITY(0u, ~ (~ (0u))), uint(_GLF_IDENTITY(uvec2(_GLF_IDENTITY(0u, min(0u, 0u)), 1u), uvec2(_GLF_IDENTITY(0u, (0u) >> 0u), 0u) | (_GLF_IDENTITY(uvec2(_GLF_IDENTITY(0u, min(0u, 0u)), 1u), _GLF_IDENTITY(uvec2(0u, 0u), uvec2(uvec4(_GLF_IDENTITY(uvec2(0u, 0u), (uvec2(0u, 0u)) | (uvec2(0u, 0u) >> _GLF_IDENTITY(uvec2(3u), uvec2(3u)))), 0u, 0u))) ^ (uvec2(_GLF_IDENTITY(0u, min(0u, 0u)), 1u)))))))))) * uvec4(1u, 1u, 1u, 1u)))), _GLF_IDENTITY(uvec4(uint(workgroup_base + _GLF_IDENTITY(subgroup_id * subgroup_size, (false ? _GLF_FUZZED(num_workgroup) : _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * _GLF_IDENTITY(subgroup_size, (subgroup_size) + ((0u >> _GLF_IDENTITY(uint(1u), uint(1u))) >> _GLF_IDENTITY(uint(4u), uint(4u)))), max(subgroup_id * _GLF_IDENTITY(subgroup_size, (subgroup_size) + ((0u >> _GLF_IDENTITY(uint(1u), uint(1u))) >> _GLF_IDENTITY(uint(4u), uint(4u)))), subgroup_id * _GLF_IDENTITY(subgroup_size, (subgroup_size) + ((0u >> _GLF_IDENTITY(uint(1u), uint(1u))) >> _GLF_IDENTITY(uint(4u), uint(4u)))))), (_GLF_IDENTITY(false, bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), ! (! (false))), false, true), bvec3(bvec3(bvec3(_GLF_IDENTITY(false, ! (! (false))), false, true)))), bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, ! (! (false))), false, true), _GLF_IDENTITY(bvec3(bvec3(bvec3(_GLF_IDENTITY(false, ! (! (false))), false, true))), bvec3(bvec3(bvec3(bvec3(bvec3(_GLF_IDENTITY(false, ! (! (false))), false, true))))))), bvec3(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(false, false, false, false))), ! (! (false))), false, true), bvec3(bvec3(bvec3(_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), bool(_GLF_IDENTITY(bvec2(! (! (false)), false), bvec2(bvec4(bvec2(! (! (false)), false), false, true)))))), false, true)))))))), bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((false), bool(bool((false)))))), false, true), bvec3(bvec3(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), ! (! (false))), false, true)))), bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, ! (! (false))), false, true), bvec3(bvec3(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), ! (! (false))), false, true)))), true))), bvec3(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, ! (! (false))), false, true), bvec3(bvec3(bvec3(_GLF_IDENTITY(false, ! (! (false))), false, true)))))))), bvec3(bvec3(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((false), bool(bool((false)))))), false, true), bvec3(bvec3(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), ! (! (false))), false, true)))), bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, ! (! (false))), false, true), bvec3(bvec3(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), ! (! (false))), false, true)))), true))), bvec3(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, ! (! (false))), false, true), bvec3(bvec3(bvec3(_GLF_IDENTITY(false, ! (! (false))), false, true)))), bvec3(bvec3(bvec3(_GLF_IDENTITY(false, ! (! (false))), false, true))))))))))), false))))))) ? _GLF_FUZZED(subgroup_local_id) : subgroup_id * subgroup_size))))), 1u, 1u, 1u), (_GLF_IDENTITY(uvec4(_GLF_IDENTITY(_GLF_IDENTITY(uint(workgroup_base + _GLF_IDENTITY(subgroup_id, (subgroup_id) ^ 0u) * subgroup_size), (uint(workgroup_base + _GLF_IDENTITY(subgroup_id, (subgroup_id) ^ 0u) * subgroup_size)) << (0u | 0u)), (uint(workgroup_base + _GLF_IDENTITY(subgroup_id, (subgroup_id) ^ 0u) * subgroup_size)) << 0u), 1u, 1u, 1u), max(uvec4(uint(workgroup_base + subgroup_id * subgroup_size), 1u, 1u, _GLF_IDENTITY(1u, max(1u, 1u))), uvec4(uint(workgroup_base + subgroup_id * subgroup_size), 1u, _GLF_IDENTITY(1u, (1u) ^ 0u), 1u)))) >> uvec4(0u, 0u, 0u, _GLF_IDENTITY(0u, uint(_GLF_IDENTITY(uvec2(_GLF_IDENTITY(0u, min(0u, 0u)), 1u), (uvec2(_GLF_IDENTITY(0u, min(0u, 0u)), 1u)) * uvec2(1u, 1u)))))), _GLF_IDENTITY(uvec4(uint(workgroup_base + _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (subgroup_id) >> (0u | 0u)) * subgroup_size, (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), false || (! (false))))), false || (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), false || (! (false))))), false || (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), false || (! (false))))))))) ? _GLF_FUZZED(num_workgroup) : _GLF_IDENTITY(subgroup_id * subgroup_size, (false ? _GLF_FUZZED(subgroup_local_id) : subgroup_id * subgroup_size))))), 1u, 1u, 1u), (_GLF_IDENTITY(uvec4(uint(workgroup_base + subgroup_id * subgroup_size), 1u, 1u, 1u), max(uvec4(uint(workgroup_base + subgroup_id * subgroup_size), 1u, 1u, 1u), uvec4(uint(workgroup_base + subgroup_id * subgroup_size), 1u, 1u, 1u)))) >> uvec4(0u, 0u, 0u, _GLF_IDENTITY(0u, uint(uvec2(_GLF_IDENTITY(0u, min(0u, 0u)), 1u)))))))) ^ uvec4(0u, 0u, 0u, 0u)))))) + subgroup_local_id;
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
    return;
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / sqrt(1.0)) > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, true)), (bool(bvec2(false, true))) && true))))
      return;
     return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) && true)))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(injectionSwitch.x > injectionSwitch.y, false, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))
      barrier();
     return;
    }
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  barrier();
 uint next_virtual_gid = workgroup_base + subgroup_id * subgroup_size + ((subgroup_local_id + 1) % subgroup_size);
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 atomicStore(buf[virtual_gid], uint(_GLF_IDENTITY(1, min(1, 1))), 4, 64, _GLF_IDENTITY(4, ~ (~ _GLF_IDENTITY((4), _GLF_IDENTITY(0 | (_GLF_IDENTITY((4), ((_GLF_IDENTITY(4, max(_GLF_IDENTITY(4, (4) >> 0), 4)))) / 1)), max(0 | (_GLF_IDENTITY((4), ((4)) / 1)), 0 | (_GLF_IDENTITY(_GLF_IDENTITY((4), min(_GLF_IDENTITY((4), ((4)) ^ 0), (4))), ((4)) / 1))))))));
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))))) && true), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false), false || (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false)))) || false))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 atomicStore(buf[_GLF_IDENTITY(next_virtual_gid, min(next_virtual_gid, next_virtual_gid))], _GLF_IDENTITY(uint(2), (uint(2)) / 1u), _GLF_IDENTITY(4, ~ _GLF_IDENTITY(_GLF_IDENTITY((~ (4)), max((~ (4)), (~ (4)))), max((~ (4)), (~ (4))))), 64, 4);
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), ! (! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, ! (! (false)))), ! (! (bool(_GLF_IDENTITY(false, ! (! (false)))))))), false || (_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, ! (! (false)))), ! (! (bool(_GLF_IDENTITY(false, ! (! (false)))))))), bool(bvec3(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, ! (! (false)))), ! (! (bool(_GLF_IDENTITY(false, ! (! (false)))))))), true, false))))))), ! (! ((_GLF_IDENTITY(false, ! (! (false)))))))))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY((false) && true, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x > injectionSwitch.y)) || ((false) && true))), (_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false)), _GLF_IDENTITY((false), _GLF_IDENTITY(true, (_GLF_IDENTITY(true, bool(bvec4(true, false, true, true)))) && true) && (_GLF_IDENTITY((false), ! (! ((false)))))) && true)) && true))))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
  }
 if(_GLF_DEAD(false))
  return;
}
