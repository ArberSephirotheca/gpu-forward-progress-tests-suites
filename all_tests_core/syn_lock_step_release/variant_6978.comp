#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     return;
    }
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, ! (! (false))))))))))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 uvec2 GLF_merged2_0_1_11_1_1_14subgroup_idworkgroup_base;
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   return;
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), true && (_GLF_IDENTITY(false, (false) && true)))))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec4(false, false, true, false)))) || false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    barrier();
   barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, false || (false)))))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (! (bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), true && (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && _GLF_IDENTITY((false), ! (! ((false)))))))
    return;
   return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) || false), (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(true, (true) && true) && (false))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, ! (! (false))))), (_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, ! (! (false)))))) || false)))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(false), (bool(false)) || false), ! (! (_GLF_IDENTITY(bool(false), bool(_GLF_IDENTITY(bvec3(bool(false), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec3(bvec4(bvec3(bool(false), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false))))))))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || false))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], float(mat3(injectionSwitch[1], 0.0, 0.0, 0.0, 1.0, exp(0.0), sqrt(determinant(mat4(1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0))), 1.0, 1.0))))).y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
      barrier();
    }
   return;
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(mat2(injectionSwitch, 0.0, 1.0))))), injectionSwitch)).x > injectionSwitch.y))))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && _GLF_IDENTITY(true, bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(true, bool(bvec3(true, true, true))), false), bvec2(bvec4(bvec2(_GLF_IDENTITY(true, bool(bvec3(true, true, true))), false), true, false))))))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))
    barrier();
   barrier();
  }
 GLF_merged2_0_1_11_1_1_14subgroup_idworkgroup_base.x = _GLF_IDENTITY(subgroup_id, 0u ^ (subgroup_id));
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
  {
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   return;
  }
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y))))))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
  {
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bool(bvec3(bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false, true))))), true && (bool(bool(_GLF_IDENTITY(bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bool(bvec3(bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false, true)))))))))))
    return;
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))
      return;
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
    }
   barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
      return;
     barrier();
    }
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY((false) && true, ((false) && true) || false)), (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), _GLF_IDENTITY(! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(false, true, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), (false) && true))), true && (_GLF_IDENTITY(! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(false, true, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), (false) && true)), _GLF_IDENTITY(bool(bool(! (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(false, true, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), (false) && true)))), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), (false ? _GLF_FUZZED(vec2(-1.1, 3.2)) : (injectionSwitch) * mat2(1.0)))).x > injectionSwitch.y)) || (bool(bool(! (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(false, true, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), (false) && true)))))))), _GLF_IDENTITY(bool(bool(! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(false, true, false, _GLF_FALSE(_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), ((! (false))) && true)), (injectionSwitch.x > injectionSwitch.y))))), (false) && true))))), ! (! (bool(bool(! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(false, true, false, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (true ? _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(82.28)), bool(false))) : _GLF_FUZZED(-67.85))), false || (injectionSwitch.x > injectionSwitch.y))), ! (_GLF_IDENTITY(! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y)))), true && (! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(_GLF_IDENTITY(bvec2(injectionSwitch.x > injectionSwitch.y, false), bvec2(bvec4(bvec2(injectionSwitch.x > injectionSwitch.y, false), true, false)))))))))))))))))))), (false) && true))))))))))))) && true)))
  {
   if(_GLF_DEAD(false))
    return;
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
  barrier();
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), ! (_GLF_IDENTITY(_GLF_IDENTITY(! (! (_GLF_DEAD(false))), true && (! (! (_GLF_DEAD(false))))), (_GLF_IDENTITY(! (! (_GLF_DEAD(false))), (! (! (_GLF_DEAD(false)))) && true)) || false))))), bool(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))), _GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, true), _GLF_IDENTITY(bvec2(bvec2(bvec2(false, true))), bvec2(bvec4(bvec2(bvec2(bvec2(false, true))), true, true)))))), true))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, false)))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   barrier();
   if(_GLF_DEAD(false))
    return;
  }
 uint num_workgroup = _GLF_IDENTITY(gl_NumWorkGroups.x, (gl_NumWorkGroups.x) | _GLF_IDENTITY((gl_NumWorkGroups.x), 0u | ((gl_NumWorkGroups.x))));
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)))).x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(-4.2), _GLF_FUZZED(6.4)), bvec2(false, false))).y, max(_GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(8308.2936)), bool(false))), injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y))))))
  barrier();
 uint workgroup_size = _GLF_IDENTITY(gl_WorkGroupSize.x, max(gl_WorkGroupSize.x, gl_WorkGroupSize.x));
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     return;
    }
   barrier();
   if(_GLF_DEAD(false))
    return;
  }
 uint workgroup_id = gl_WorkGroupID.x;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(bvec3(_GLF_IDENTITY(! (false), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(! (false)), (bool(! (false))) && true)), ! (! (bool(_GLF_IDENTITY(bool(! (false)), (bool(! (false))) && true)))))), _GLF_IDENTITY(true, (true) && true), true))))), (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(8051.4564))), ! (! (injectionSwitch.x > injectionSwitch.y)))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 uint workgroup_base = workgroup_size * workgroup_id;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)), ! (! (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).x > injectionSwitch.y)))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, 1.0 * (injectionSwitch.y))))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, true)))))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
        barrier();
       return;
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec3(injectionSwitch.x > injectionSwitch.y, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(18.10)), bool(false))) > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     return;
    }
   return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(-1.0))), (false ? _GLF_FUZZED(4253.5197) : _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y))))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, true && (false))))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
  }
 GLF_merged2_0_1_11_1_1_14subgroup_idworkgroup_base.y = workgroup_base;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), false || (_GLF_IDENTITY(false, true && (false))))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint virtual_gid = GLF_merged2_0_1_11_1_1_14subgroup_idworkgroup_base.y + GLF_merged2_0_1_11_1_1_14subgroup_idworkgroup_base.x * subgroup_size + subgroup_local_id;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 uint next_virtual_gid = _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged2_0_1_11_1_1_14subgroup_idworkgroup_base.y + GLF_merged2_0_1_11_1_1_14subgroup_idworkgroup_base.x * subgroup_size, min(GLF_merged2_0_1_11_1_1_14subgroup_idworkgroup_base.y + GLF_merged2_0_1_11_1_1_14subgroup_idworkgroup_base.x * subgroup_size, _GLF_IDENTITY(GLF_merged2_0_1_11_1_1_14subgroup_idworkgroup_base.y + GLF_merged2_0_1_11_1_1_14subgroup_idworkgroup_base.x * subgroup_size, max(GLF_merged2_0_1_11_1_1_14subgroup_idworkgroup_base.y + GLF_merged2_0_1_11_1_1_14subgroup_idworkgroup_base.x * subgroup_size, _GLF_IDENTITY(GLF_merged2_0_1_11_1_1_14subgroup_idworkgroup_base.y + GLF_merged2_0_1_11_1_1_14subgroup_idworkgroup_base.x * subgroup_size, 0u | (GLF_merged2_0_1_11_1_1_14subgroup_idworkgroup_base.y + GLF_merged2_0_1_11_1_1_14subgroup_idworkgroup_base.x * subgroup_size)))))), (_GLF_IDENTITY(GLF_merged2_0_1_11_1_1_14subgroup_idworkgroup_base.y + GLF_merged2_0_1_11_1_1_14subgroup_idworkgroup_base.x * subgroup_size, 0u + (GLF_merged2_0_1_11_1_1_14subgroup_idworkgroup_base.y + GLF_merged2_0_1_11_1_1_14subgroup_idworkgroup_base.x * subgroup_size))) / 1u), (_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged2_0_1_11_1_1_14subgroup_idworkgroup_base.y + _GLF_IDENTITY(GLF_merged2_0_1_11_1_1_14subgroup_idworkgroup_base.x * subgroup_size, clamp(_GLF_IDENTITY(GLF_merged2_0_1_11_1_1_14subgroup_idworkgroup_base.x * subgroup_size, (GLF_merged2_0_1_11_1_1_14subgroup_idworkgroup_base.x * subgroup_size) / 1u), GLF_merged2_0_1_11_1_1_14subgroup_idworkgroup_base.x * subgroup_size, GLF_merged2_0_1_11_1_1_14subgroup_idworkgroup_base.x * subgroup_size)), min(GLF_merged2_0_1_11_1_1_14subgroup_idworkgroup_base.y + GLF_merged2_0_1_11_1_1_14subgroup_idworkgroup_base.x * subgroup_size, GLF_merged2_0_1_11_1_1_14subgroup_idworkgroup_base.y + GLF_merged2_0_1_11_1_1_14subgroup_idworkgroup_base.x * subgroup_size)), (_GLF_IDENTITY(GLF_merged2_0_1_11_1_1_14subgroup_idworkgroup_base.y + GLF_merged2_0_1_11_1_1_14subgroup_idworkgroup_base.x * subgroup_size, _GLF_IDENTITY(0u + (GLF_merged2_0_1_11_1_1_14subgroup_idworkgroup_base.y + GLF_merged2_0_1_11_1_1_14subgroup_idworkgroup_base.x * subgroup_size), (true ? 0u + (GLF_merged2_0_1_11_1_1_14subgroup_idworkgroup_base.y + GLF_merged2_0_1_11_1_1_14subgroup_idworkgroup_base.x * subgroup_size) : _GLF_FUZZED(workgroup_base))))) / 1u)) | 0u) + (_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, max((subgroup_local_id + 1) % subgroup_size, (subgroup_local_id + 1) % subgroup_size))), _GLF_IDENTITY(uint(uint(~ (_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, max((subgroup_local_id + 1) % subgroup_size, (_GLF_IDENTITY(subgroup_local_id + 1, (true ? subgroup_local_id + 1 : _GLF_FUZZED(uvec2(64051u, 141983u).r)))) % subgroup_size))))), (uint(uint(~ (_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, max((subgroup_local_id + 1) % subgroup_size, (subgroup_local_id + 1) % subgroup_size)))))) << _GLF_IDENTITY(0u, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(0u, uint(_GLF_IDENTITY(uint(0u), 0u | (uint(0u))))) : _GLF_FUZZED(subgroup_id))))))));
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(false, ! (! (false))), false, false, false)), true && (bool(bvec4(_GLF_IDENTITY(false, ! (! (false))), false, false, false)))), bool(bvec3(_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(false, ! (! (false))), false, false, false)), (bool(bvec4(_GLF_IDENTITY(false, ! (! (false))), false, false, _GLF_IDENTITY(false, (false) && true)))) || false), false, false)))), bool(bvec3(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(false, ! (! (false))), false, false, false)), true && (bool(bvec4(_GLF_IDENTITY(false, ! (! (false))), false, false, false)))), bool(bvec3(_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(false, ! (! (false))), false, false, false)), (bool(bvec4(_GLF_IDENTITY(false, ! (! (false))), false, false, _GLF_IDENTITY(false, (false) && true)))) || false), false, false)))), true, false))), (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)))))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (_GLF_IDENTITY(! (! (false)), (! (! (false))) || false)))))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    barrier();
   barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, bool(bvec4(false, false, true, true))))), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(injectionSwitch.x > injectionSwitch.y, true, true, false)))), ! (! ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(injectionSwitch.x > injectionSwitch.y, true, true, false))))))))), ! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(injectionSwitch.x > injectionSwitch.y, true, true, false)))), ! (! ((_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))).y, bool(bvec4(_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).x > injectionSwitch.y, true, true, false))))))))))))))), bool(bvec3(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, true && (false)), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(injectionSwitch.x > injectionSwitch.y, true, true, false)))), ! (! ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(injectionSwitch.x > injectionSwitch.y, true, true, false))))))))), ! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(injectionSwitch.x > injectionSwitch.y, true, true, false)))), ! (! ((_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))).y, bool(bvec4(_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).x > injectionSwitch.y, true, true, false))))))))))))))), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, false, false, false)))))
      barrier();
     return;
    }
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(true, (_GLF_IDENTITY(true, ! (! (true)))) && true) && (false))))
  return;
 atomicStore(buf[_GLF_IDENTITY(_GLF_IDENTITY(virtual_gid, (true ? virtual_gid : _GLF_FUZZED(12470u))), (virtual_gid) ^ 0u)], uint(1), _GLF_IDENTITY(_GLF_IDENTITY(4, _GLF_IDENTITY(clamp(4, _GLF_IDENTITY(4, _GLF_IDENTITY((4) | (4), max((4) | (4), (4) | (4)))), _GLF_IDENTITY(4, int(_GLF_ZERO(_GLF_IDENTITY(0.0, (0.0) * _GLF_IDENTITY(round(_GLF_IDENTITY(length(normalize(vec2(1.0, 1.0))), min(_GLF_IDENTITY(length(normalize(vec2(1.0, 1.0))), mix(float(_GLF_FUZZED(float(12863))), float(length(normalize(vec2(1.0, 1.0)))), bool(true))), _GLF_IDENTITY(length(normalize(vec2(1.0, 1.0))), max(length(normalize(vec2(1.0, 1.0))), length(normalize(vec2(1.0, 1.0)))))))), (round(length(normalize(vec2(1.0, 1.0))))) / 1.0)), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(0.0, 0.0) + (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch))), (vec2(0.0, 0.0) + (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))) - vec2(0.0, 0.0))).x, clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(0.0, 0.0) + (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch))), (vec2(0.0, 0.0) + (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))) - vec2(0.0, 0.0))).x, max(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(0.0, 0.0) + (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch))), (vec2(0.0, 0.0) + (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))) - vec2(0.0, 0.0))).x, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(0.0, 0.0) + (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch))), (vec2(0.0, 0.0) + (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))) - vec2(0.0, 0.0))).x)), _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(0.0, 0.0) + (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch))), (vec2(0.0, 0.0) + (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))) - vec2(0.0, 0.0))).x, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(0.0, 0.0) + (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch))), (vec2(0.0, 0.0) + (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))) - vec2(0.0, 0.0))).x)))) | (4))), min(clamp(4, _GLF_IDENTITY(4, _GLF_IDENTITY((4) | (4), max((4) | _GLF_IDENTITY((4), clamp((4), _GLF_IDENTITY((4), clamp((4), (4), (4))), (4))), (4) | (4)))), _GLF_IDENTITY(4, int(_GLF_ZERO(_GLF_IDENTITY(0.0, (0.0) * _GLF_IDENTITY(round(length(normalize(vec2(1.0, 1.0)))), (round(length(normalize(vec2(1.0, 1.0))))) / 1.0)), _GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))).x)) | (4))), _GLF_IDENTITY(clamp(4, _GLF_IDENTITY(4, _GLF_IDENTITY((4) | (4), max((4) | (4), (4) | (4)))), _GLF_IDENTITY(4, int(_GLF_ZERO(_GLF_IDENTITY(0.0, (0.0) * _GLF_IDENTITY(round(length(normalize(vec2(1.0, 1.0)))), (round(length(normalize(vec2(1.0, 1.0))))) / 1.0)), _GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))).x)) | (4))), max(clamp(4, _GLF_IDENTITY(4, _GLF_IDENTITY((4) | (4), _GLF_IDENTITY(max((4) | (4), (4) | (4)), (_GLF_IDENTITY(max((4) | (4), (4) | (4)), max(max((4) | (4), (4) | (4)), _GLF_IDENTITY(max((4) | (4), (4) | (4)), (max((4) | (4), (4) | (4))) / 1)))) >> 0))), _GLF_IDENTITY(4, int(_GLF_ZERO(_GLF_IDENTITY(0.0, (0.0) * _GLF_IDENTITY(round(length(normalize(vec2(1.0, 1.0)))), (round(length(normalize(vec2(1.0, 1.0))))) / 1.0)), _GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))).x)) | (4))), clamp(4, _GLF_IDENTITY(4, _GLF_IDENTITY((4) | (4), max((4) | (4), (4) | (4)))), _GLF_IDENTITY(4, int(_GLF_ZERO(_GLF_IDENTITY(0.0, (0.0) * _GLF_IDENTITY(round(length(normalize(vec2(1.0, 1.0)))), (round(length(normalize(vec2(1.0, 1.0))))) / 1.0)), _GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))).x)) | (4)))))))), (_GLF_IDENTITY(4, ~ (~ (4)))) - 0), 64, _GLF_IDENTITY(4, min(4, 4)));
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec3(-39.34, -44.41, _GLF_IDENTITY(57.61, min(57.61, 57.61))).zy))))), max(injectionSwitch, injectionSwitch)), _GLF_IDENTITY(injectionSwitch, vec2(mat3x2(injectionSwitch, 1.0, 0.0, cos(_GLF_IDENTITY(0.0, _GLF_IDENTITY((0.0) / 1.0, float(_GLF_IDENTITY(mat2x4((0.0) / 1.0, 1.0, 0.0, sqrt(1.0), 0.0, 0.0, 0.0, 0.0), (mat2x4((0.0) / 1.0, 1.0, 0.0, sqrt(1.0), 0.0, 0.0, 0.0, 0.0)) - mat2x4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)))))), 1.0))))).x > injectionSwitch.y, false, _GLF_IDENTITY(_GLF_IDENTITY(true, ! (! (true))), (true) || false), _GLF_IDENTITY(false, ! (! (false))))))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
    return;
   barrier();
  }
 atomicStore(buf[_GLF_IDENTITY(next_virtual_gid, (next_virtual_gid) ^ 0u)], _GLF_IDENTITY(uint(_GLF_IDENTITY(2, (2) - (0 << _GLF_IDENTITY(int(4), int(4))))), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(2, (0 & -57677) | (_GLF_IDENTITY(2, (2) - 0)))), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(2, (0 & -57677) | (_GLF_IDENTITY(2, (2) - 0)))), ~ (~ (uint(_GLF_IDENTITY(2, (0 & -57677) | (_GLF_IDENTITY(2, (2) - 0))))))), (uint(_GLF_IDENTITY(_GLF_IDENTITY(2, (2) / 1), _GLF_IDENTITY((0 & -57677) | (_GLF_IDENTITY(2, (2) - 0)), 0 ^ ((0 & -57677) | (_GLF_IDENTITY(2, (2) - 0))))))) | (_GLF_IDENTITY(uint(_GLF_IDENTITY(2, _GLF_IDENTITY((0 & -57677), int(_GLF_ZERO(0.0, injectionSwitch.x)) ^ ((0 & -57677))) | (_GLF_IDENTITY(2, (2) - 0)))), 0u + (uint(_GLF_IDENTITY(2, (0 & -57677) | (_GLF_IDENTITY(2, (2) - 0))))))))) >> (0u | 0u), uint(uvec2(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(2, (0 & -57677) | (_GLF_IDENTITY(2, (2) - 0)))), ~ (~ (uint(_GLF_IDENTITY(2, (0 & -57677) | (_GLF_IDENTITY(2, (2) - 0))))))), (uint(_GLF_IDENTITY(_GLF_IDENTITY(2, (2) / 1), (0 & -57677) | (_GLF_IDENTITY(2, (2) - 0))))) | (_GLF_IDENTITY(uint(_GLF_IDENTITY(2, (0 & -57677) | (_GLF_IDENTITY(2, (2) - 0)))), 0u + (uint(_GLF_IDENTITY(2, _GLF_IDENTITY((0 & -57677) | (_GLF_IDENTITY(2, (2) - 0)), _GLF_IDENTITY(int(ivec2((0 & -57677) | (_GLF_IDENTITY(2, (2) - 0)), _GLF_IDENTITY(0, ~ (~ (0))))), (int(ivec2((0 & -57677) | (_GLF_IDENTITY(2, (2) - 0)), _GLF_IDENTITY(0, ~ (~ (0)))))) << 0))))))))), (false ? _GLF_FUZZED(172532u) : (_GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(2, (0 & -57677) | (_GLF_IDENTITY(2, (2) - 0)))), ~ (~ (uint(_GLF_IDENTITY(2, (0 & -57677) | (_GLF_IDENTITY(2, (2) - 0))))))), (uint(_GLF_IDENTITY(_GLF_IDENTITY(2, (2) / 1), (0 & -57677) | (_GLF_IDENTITY(2, (2) - 0))))) | (_GLF_IDENTITY(uint(_GLF_IDENTITY(2, (0 & -57677) | (_GLF_IDENTITY(2, (2) - 0)))), 0u + (uint(_GLF_IDENTITY(2, _GLF_IDENTITY((0 & -57677) | (_GLF_IDENTITY(2, (2) - 0)), _GLF_IDENTITY(int(ivec2((0 & -57677) | (_GLF_IDENTITY(2, (2) - 0)), _GLF_IDENTITY(0, ~ (~ (0))))), (int(ivec2((0 & -57677) | (_GLF_IDENTITY(2, (2) - 0)), _GLF_IDENTITY(0, ~ (~ (0)))))) << 0))))))))))) >> (_GLF_IDENTITY(0u | 0u, (true ? _GLF_IDENTITY(0u | 0u, (0u | 0u) | (0u | 0u)) : _GLF_FUZZED(num_workgroup)))), 1u)))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(2, (0 & -57677) | (_GLF_IDENTITY(2, (2) - 0)))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(2, _GLF_IDENTITY((0 & -57677), (false ? _GLF_FUZZED(33170) : (0 & -57677))) | (_GLF_IDENTITY(2, _GLF_IDENTITY((2), 0 ^ ((2))) - 0)))), (uint(_GLF_IDENTITY(2, _GLF_IDENTITY((0 & -57677), (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, _GLF_IDENTITY(true, bool(bvec2(true, false))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)), bool(bvec4(bool(bvec4(false, _GLF_IDENTITY(true, bool(bvec2(true, false))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)), true, true, true)))) ? _GLF_FUZZED(33170) : (0 & -57677))) | (_GLF_IDENTITY(2, _GLF_IDENTITY((2), 0 ^ ((2))) - 0))))) >> (0u >> _GLF_IDENTITY(uint(7u), uint(7u)))), (uint(_GLF_IDENTITY(2, (0 & -57677) | (_GLF_IDENTITY(2, _GLF_IDENTITY((2), 0 ^ _GLF_IDENTITY(((2)), min(((2)), ((2))))) - 0))))) / 1u), (uint(_GLF_IDENTITY(_GLF_IDENTITY(2, (2) / 1), (0 & -57677) | (_GLF_IDENTITY(2, (2) - 0))))) | (_GLF_IDENTITY(uint(_GLF_IDENTITY(2, (0 & -57677) | (_GLF_IDENTITY(2, (2) - 0)))), 0u + (uint(_GLF_IDENTITY(_GLF_IDENTITY(2, ~ (~ (_GLF_IDENTITY(2, int(ivec3(2, 1, 1)))))), (0 & -57677) | (_GLF_IDENTITY(2, (2) - 0))))))))) >> (0u | 0u)), (_GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(2, (0 & -57677) | (_GLF_IDENTITY(2, (2) - 0)))), _GLF_IDENTITY((_GLF_IDENTITY(uint(_GLF_IDENTITY(2, _GLF_IDENTITY((0 & -57677) | (_GLF_IDENTITY(2, (2) - 0)), (_GLF_IDENTITY((0 & -57677) | (_GLF_IDENTITY(2, (2) - 0)), 0 | ((0 & -57677) | (_GLF_IDENTITY(2, (2) - 0))))) | ((0 & -57677) | (_GLF_IDENTITY(2, (2) - 0)))))), (uint(_GLF_IDENTITY(_GLF_IDENTITY(2, (2) / 1), (0 & -57677) | (_GLF_IDENTITY(2, (2) - 0))))) | (_GLF_IDENTITY(uint(_GLF_IDENTITY(2, (0 & -57677) | (_GLF_IDENTITY(2, (2) - 0)))), 0u + (uint(_GLF_IDENTITY(2, (0 & -57677) | (_GLF_IDENTITY(2, (_GLF_IDENTITY(2, (false ? _GLF_FUZZED(-24694) : 2))) - 0))))))))) >> (0u | 0u), ((_GLF_IDENTITY(uint(_GLF_IDENTITY(2, _GLF_IDENTITY(_GLF_IDENTITY((0 & -57677), min((0 & -57677), (0 & -57677))) | (_GLF_IDENTITY(2, (2) - 0)), (_GLF_IDENTITY((0 & -57677) | (_GLF_IDENTITY(2, (2) - 0)), 0 | ((0 & -57677) | (_GLF_IDENTITY(2, (2) - 0))))) | ((0 & -57677) | (_GLF_IDENTITY(2, (2) - 0)))))), (uint(_GLF_IDENTITY(_GLF_IDENTITY(2, (2) / 1), (0 & -57677) | (_GLF_IDENTITY(2, (2) - 0))))) | (_GLF_IDENTITY(uint(_GLF_IDENTITY(2, (0 & -57677) | (_GLF_IDENTITY(2, (2) - 0)))), 0u + (uint(_GLF_IDENTITY(2, (0 & -57677) | (_GLF_IDENTITY(2, (_GLF_IDENTITY(2, (false ? _GLF_FUZZED(-24694) : 2))) - 0))))))))) >> (0u | 0u)) | ((_GLF_IDENTITY(uint(_GLF_IDENTITY(2, _GLF_IDENTITY((0 & -57677) | (_GLF_IDENTITY(2, (2) - 0)), (_GLF_IDENTITY((0 & -57677) | (_GLF_IDENTITY(2, (2) - 0)), 0 | ((0 & -57677) | (_GLF_IDENTITY(2, (2) - 0))))) | ((0 & -57677) | (_GLF_IDENTITY(2, (2) - 0)))))), (uint(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(2, (2) / 1), (0 & -57677) | (_GLF_IDENTITY(2, (2) - 0))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(2, (2) / 1), (0 & -57677) | (_GLF_IDENTITY(2, (2) - 0))), int(_GLF_IDENTITY(int(_GLF_IDENTITY(_GLF_IDENTITY(2, (2) / 1), (0 & -57677) | (_GLF_IDENTITY(2, (2) - 0)))), (int(_GLF_IDENTITY(_GLF_IDENTITY(2, (2) / 1), (0 & -57677) | (_GLF_IDENTITY(2, (2) - 0))))) ^ 0)))) ^ 0))) | (_GLF_IDENTITY(uint(_GLF_IDENTITY(2, (0 & -57677) | (_GLF_IDENTITY(2, (2) - 0)))), 0u + (uint(_GLF_IDENTITY(2, (0 & -57677) | (_GLF_IDENTITY(2, (_GLF_IDENTITY(2, _GLF_IDENTITY((false ? _GLF_FUZZED(-24694) : 2), ((false ? _GLF_FUZZED(-24694) : 2)) - 0))) - 0))))))))) >> (0u | 0u)))), (_GLF_IDENTITY(uint(_GLF_IDENTITY(2, (_GLF_IDENTITY(0 & -57677, ~ (~ (0 & -57677)))) | (_GLF_IDENTITY(_GLF_IDENTITY(2, (2) / 1), (2) - 0)))), _GLF_IDENTITY((_GLF_IDENTITY(uint(_GLF_IDENTITY(2, _GLF_IDENTITY((0 & -57677) | (_GLF_IDENTITY(2, (2) - 0)), int(_GLF_IDENTITY(ivec4(_GLF_IDENTITY(_GLF_IDENTITY((0 & -57677), _GLF_IDENTITY(int(int(_GLF_IDENTITY((0 & -57677), int(_GLF_IDENTITY(ivec4((0 & -57677), 0, 1, 1), (true ? ivec4((0 & -57677), 0, 1, 1) : _GLF_FUZZED(ivec4(61955, -92971, -25776, -60580)))))))), clamp(int(int(_GLF_IDENTITY((0 & -57677), int(_GLF_IDENTITY(ivec4((0 & -57677), 0, 1, 1), (true ? ivec4((0 & -57677), 0, 1, 1) : _GLF_FUZZED(ivec4(61955, -92971, -25776, -60580)))))))), _GLF_IDENTITY(int(int(_GLF_IDENTITY((0 & -57677), int(_GLF_IDENTITY(ivec4((0 & -57677), 0, 1, 1), (true ? ivec4((0 & -57677), 0, 1, 1) : _GLF_FUZZED(ivec4(61955, -92971, -25776, -60580)))))))), 0 + (int(int(_GLF_IDENTITY((0 & -57677), int(_GLF_IDENTITY(ivec4((0 & -57677), 0, 1, 1), (true ? ivec4((0 & -57677), 0, 1, 1) : _GLF_FUZZED(ivec4(61955, -92971, -25776, -60580)))))))))), int(int(_GLF_IDENTITY((0 & -57677), int(_GLF_IDENTITY(ivec4((0 & -57677), 0, 1, 1), (true ? ivec4((0 & -57677), 0, 1, 1) : _GLF_FUZZED(ivec4(61955, -92971, -25776, -60580))))))))))) | (_GLF_IDENTITY(2, (2) - 0)), 0 | ((0 & -57677) | _GLF_IDENTITY((_GLF_IDENTITY(2, (2) - 0)), (_GLF_IDENTITY((_GLF_IDENTITY(2, (2) - 0)), ((_GLF_IDENTITY(2, (2) - 0))) << 0)) >> 0))), 1, int(_GLF_ONE(1.0, injectionSwitch.y)), 0), (ivec4(_GLF_IDENTITY((0 & -57677) | (_GLF_IDENTITY(2, (2) - 0)), 0 | ((0 & -57677) | (_GLF_IDENTITY(2, (2) - 0)))), 1, int(_GLF_ONE(1.0, injectionSwitch.y)), 0)) | (ivec4(_GLF_IDENTITY((0 & -57677) | (_GLF_IDENTITY(2, (2) - 0)), 0 | ((0 & -57677) | (_GLF_IDENTITY(2, _GLF_IDENTITY((2) - 0, ((2) - 0) | ((2) - 0)))))), 1, int(_GLF_ONE(1.0, injectionSwitch.y)), 0))))))), (uint(_GLF_IDENTITY(_GLF_IDENTITY(2, (2) / 1), (0 & -57677) | (_GLF_IDENTITY(2, (2) - 0))))) | (_GLF_IDENTITY(uint(_GLF_IDENTITY(2, (0 & -57677) | (_GLF_IDENTITY(_GLF_IDENTITY(2, (2) - 0), (false ? _GLF_FUZZED(34621) : _GLF_IDENTITY(2, (2) - 0)))))), 0u + (uint(_GLF_IDENTITY(2, (_GLF_IDENTITY(0, ~ (~ (0))) & -57677) | (_GLF_IDENTITY(2, (2) - 0))))))))) >> (0u | 0u), ((_GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_IDENTITY(2, _GLF_IDENTITY((0 & -57677) | (_GLF_IDENTITY(2, (2) - 0)), int(_GLF_IDENTITY(ivec4(_GLF_IDENTITY((0 & -57677) | (_GLF_IDENTITY(2, (2) - 0)), 0 | ((0 & -57677) | (_GLF_IDENTITY(2, (2) - 0)))), 1, int(_GLF_ONE(1.0, injectionSwitch.y)), 0), (ivec4(_GLF_IDENTITY((0 & -57677) | (_GLF_IDENTITY(2, (2) - 0)), 0 | ((0 & -57677) | (_GLF_IDENTITY(2, (2) - 0)))), 1, int(_GLF_ONE(1.0, injectionSwitch.y)), 0)) | (ivec4(_GLF_IDENTITY((0 & -57677) | (_GLF_IDENTITY(2, (2) - 0)), 0 | ((0 & -57677) | (_GLF_IDENTITY(2, (2) - 0)))), 1, int(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, 1.0 * (injectionSwitch.y)))), 0)))))), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(_GLF_IDENTITY(2, _GLF_IDENTITY((0 & -57677) | (_GLF_IDENTITY(2, (2) - 0)), int(_GLF_IDENTITY(ivec4(_GLF_IDENTITY((0 & -57677) | (_GLF_IDENTITY(2, (2) - 0)), 0 | ((0 & -57677) | (_GLF_IDENTITY(2, (2) - 0)))), 1, int(_GLF_ONE(1.0, injectionSwitch.y)), 0), (ivec4(_GLF_IDENTITY((0 & -57677) | (_GLF_IDENTITY(2, (2) - 0)), 0 | ((0 & -57677) | (_GLF_IDENTITY(2, (2) - 0)))), 1, int(_GLF_ONE(1.0, injectionSwitch.y)), 0)) | (ivec4(_GLF_IDENTITY((0 & -57677) | (_GLF_IDENTITY(2, (2) - 0)), 0 | ((0 & -57677) | (_GLF_IDENTITY(2, (2) - 0)))), 1, int(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, 1.0 * (injectionSwitch.y)))), 0)))))), (true ? _GLF_IDENTITY(2, _GLF_IDENTITY((0 & -57677) | (_GLF_IDENTITY(2, (2) - 0)), int(_GLF_IDENTITY(ivec4(_GLF_IDENTITY((0 & -57677) | (_GLF_IDENTITY(2, (2) - 0)), 0 | ((0 & -57677) | (_GLF_IDENTITY(2, (2) - 0)))), 1, int(_GLF_ONE(1.0, injectionSwitch.y)), 0), (ivec4(_GLF_IDENTITY((0 & -57677) | (_GLF_IDENTITY(2, (2) - 0)), 0 | ((0 & -57677) | (_GLF_IDENTITY(2, (2) - 0)))), 1, int(_GLF_ONE(1.0, injectionSwitch.y)), 0)) | (ivec4(_GLF_IDENTITY((0 & -57677) | (_GLF_IDENTITY(2, (2) - 0)), 0 | ((0 & -57677) | (_GLF_IDENTITY(2, (2) - 0)))), 1, int(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, 1.0 * (injectionSwitch.y)))), 0)))))) : _GLF_FUZZED(-66856))) : _GLF_FUZZED(37917)))), (uint(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(2, (_GLF_IDENTITY(2, (_GLF_TRUE(_GLF_IDENTITY(true, bool(_GLF_IDENTITY(bvec3(true, true, false), bvec3(bvec3(bvec3(true, true, false)))))), (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(3.0) : injectionSwitch.x)))) < injectionSwitch.y)) ? 2 : _GLF_FUZZED(-83990)))) / 1), (2) / 1), (0 & -57677) | (_GLF_IDENTITY(2, (2) - 0))))) | (_GLF_IDENTITY(uint(_GLF_IDENTITY(2, (0 & -57677) | (_GLF_IDENTITY(2, (2) - 0)))), 0u + (uint(_GLF_IDENTITY(2, (0 & -57677) | (_GLF_IDENTITY(2, (2) - 0))))))))) >> (0u | 0u)) - 0u))) / 1u)) << 0u), _GLF_IDENTITY(uint(_GLF_IDENTITY(2, (0 & -57677) | _GLF_IDENTITY((_GLF_IDENTITY(2, (2) - 0)), ((_GLF_IDENTITY(2, (2) - 0))) / 1))), (_GLF_IDENTITY(uint(_GLF_IDENTITY(2, (0 & -57677) | (_GLF_IDENTITY(2, (_GLF_IDENTITY(2, ~ (~ (2)))) - 0)))), (uint(_GLF_IDENTITY(_GLF_IDENTITY(2, (2) / 1), (0 & -57677) | (_GLF_IDENTITY(_GLF_IDENTITY(2, (2) - 0), 0 + (_GLF_IDENTITY(2, (2) - 0))))))) | (_GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(2, (0 & -57677) | (_GLF_IDENTITY(2, _GLF_IDENTITY((2), ((2)) / 1) - 0)))), (_GLF_IDENTITY(true ? uint(_GLF_IDENTITY(2, (0 & -57677) | (_GLF_IDENTITY(2, _GLF_IDENTITY((2), ((_GLF_IDENTITY(2, (_GLF_IDENTITY(2, (_GLF_IDENTITY(2, 0 ^ (2))) / 1)) >> 0))) / 1) - 0)))) : _GLF_FUZZED((num_workgroup + _GLF_IDENTITY(subgroup_id, (subgroup_id) * 1u))), (true ? uint(_GLF_IDENTITY(2, (0 & -57677) | (_GLF_IDENTITY(2, _GLF_IDENTITY((2), ((_GLF_IDENTITY(2, (_GLF_IDENTITY(2, (_GLF_IDENTITY(2, 0 ^ (2))) / 1)) >> 0))) / 1) - 0)))) : _GLF_FUZZED((num_workgroup + _GLF_IDENTITY(subgroup_id, (subgroup_id) * 1u)))) - 0u))), 0u + (uint(_GLF_IDENTITY(_GLF_IDENTITY(2, (0 & -57677) | (_GLF_IDENTITY(2, (2) - 0))), (_GLF_IDENTITY(2, (0 & -57677) | (_GLF_IDENTITY(2, (2) - 0)))) | (_GLF_IDENTITY(2, (0 & -57677) | (_GLF_IDENTITY(2, (2) - 0))))))))))) >> (0u | 0u)), _GLF_IDENTITY(uint(_GLF_IDENTITY(2, _GLF_IDENTITY((0 & -57677), (true ? (0 & -57677) : _GLF_FUZZED(81801))) | (_GLF_IDENTITY(2, (2) - 0)))), (_GLF_IDENTITY(uint(_GLF_IDENTITY(2, (0 & -57677) | (_GLF_IDENTITY(2, (2) - 0)))), (uint(_GLF_IDENTITY(_GLF_IDENTITY(2, (2) / 1), (0 & -57677) | (_GLF_IDENTITY(2, (2) - 0))))) | (_GLF_IDENTITY(uint(_GLF_IDENTITY(2, (0 & _GLF_IDENTITY(-57677, (_GLF_IDENTITY(-57677, (-57677) - 0)) | 0)) | (_GLF_IDENTITY(2, (2) - 0)))), 0u + (uint(_GLF_IDENTITY(2, (0 & -57677) | (_GLF_IDENTITY(2, (2) - 0))))))))) >> (0u | 0u))))) << _GLF_IDENTITY(0u, clamp(0u, 0u, 0u)), ((_GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_IDENTITY(2, (0 & _GLF_IDENTITY(-57677, min(-57677, -57677))) | (_GLF_IDENTITY(2, (2) - _GLF_IDENTITY(0, (0) | 0)))), (_GLF_IDENTITY(2, (0 & _GLF_IDENTITY(-57677, min(-57677, -57677))) | (_GLF_IDENTITY(2, (2) - 0)))) | (_GLF_IDENTITY(2, (0 & _GLF_IDENTITY(-57677, min(-57677, -57677))) | (_GLF_IDENTITY(2, (2) - 0)))))), (_GLF_IDENTITY(uint(_GLF_IDENTITY(2, (0 & -57677) | (_GLF_IDENTITY(2, _GLF_IDENTITY((2), (false ? _GLF_FUZZED(-29977) : _GLF_IDENTITY((2), 0 ^ ((2))))) - 0)))), (uint(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(2, (2) / 1), 0 + (_GLF_IDENTITY(2, (2) / 1))), (0 & -57677) | (_GLF_IDENTITY(2, _GLF_IDENTITY((2) - 0, ((2) - 0) | (_GLF_IDENTITY((2) - 0, ((2) - 0) >> 0)))))))) | (_GLF_IDENTITY(uint(_GLF_IDENTITY(2, (0 & -57677) | (_GLF_IDENTITY(2, _GLF_IDENTITY((2), clamp((2), (2), (2))) - _GLF_IDENTITY(0, min(0, 0)))))), 0u + (uint(_GLF_IDENTITY(2, _GLF_IDENTITY((_GLF_IDENTITY(0 & -57677, (_GLF_IDENTITY(_GLF_IDENTITY(0, (0) / 1) & -57677, min(0 & -57677, 0 & -57677))) + 0)) | _GLF_IDENTITY((_GLF_IDENTITY(2, (2) - 0)), ((_GLF_IDENTITY(2, (2) - 0))) | ((_GLF_IDENTITY(2, (2) - 0)))), ((_GLF_IDENTITY(0 & -57677, (_GLF_IDENTITY(0 & -57677, min(0 & -57677, 0 & -57677))) + 0)) | (_GLF_IDENTITY(2, (2) - 0))) | 0)))))))) >> (_GLF_IDENTITY(0u | 0u, (0u | 0u) >> 0u)))) << _GLF_IDENTITY(0u, clamp(0u, 0u, 0u))) - 0u)), 4, 64, 4);
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
  barrier();
}
