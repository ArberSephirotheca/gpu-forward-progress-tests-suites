#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) && true), (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(mat2(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), 0.0, 1.0))).y, float(_GLF_IDENTITY(mat4x2(_GLF_IDENTITY(injectionSwitch, vec2(mat2(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), 0.0, 1.0))).y, 1.0, length(vec2(0.0, 0.0)), 0.0, determinant(mat2(1.0, 0.0, 0.0, 1.0)), 1.0, 0.0, 0.0), mat4x2(mat4x3(mat4x2(_GLF_IDENTITY(injectionSwitch, vec2(mat2(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), 0.0, 1.0))).y, 1.0, length(vec2(0.0, 0.0)), 0.0, determinant(mat2(1.0, 0.0, 0.0, 1.0)), 1.0, 0.0, 0.0)))))))), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, false, true)), (bool(bvec4(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-0.7)), bool(false)))) / 1.0) > injectionSwitch.y)), false, false, true))) && _GLF_IDENTITY(true, false || (true))), true && (_GLF_IDENTITY(bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, false, true)), (bool(bvec4(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-0.7)), bool(false)))) / 1.0) > _GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(-215.004))))), false, false, true))) && _GLF_IDENTITY(true, false || (true))))))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   return;
  }
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  return;
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) && true), _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0) > injectionSwitch.y))))))
  return;
 uint num_workgroup = _GLF_IDENTITY(gl_NumWorkGroups.x, clamp(_GLF_IDENTITY(gl_NumWorkGroups.x, _GLF_IDENTITY(min(gl_NumWorkGroups.x, gl_NumWorkGroups.x), (min(gl_NumWorkGroups.x, gl_NumWorkGroups.x)) - (0u | 0u))), gl_NumWorkGroups.x, gl_NumWorkGroups.x));
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), ! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y, ! (! (injectionSwitch.x > injectionSwitch.y))))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false))))
    return;
   return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
      }
     return;
    }
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), bool(bvec4(! (injectionSwitch.x > injectionSwitch.y), false, true, false)))))))))
  return;
 if(_GLF_DEAD(false))
  return;
 uint workgroup_size = _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize.x, (_GLF_IDENTITY(gl_WorkGroupSize.x, min(gl_WorkGroupSize.x, _GLF_IDENTITY(gl_WorkGroupSize.x, min(gl_WorkGroupSize.x, gl_WorkGroupSize.x))))) ^ 0u), clamp(_GLF_IDENTITY(gl_WorkGroupSize.x, (_GLF_IDENTITY(gl_WorkGroupSize.x, min(gl_WorkGroupSize.x, _GLF_IDENTITY(gl_WorkGroupSize.x, min(gl_WorkGroupSize.x, _GLF_IDENTITY(gl_WorkGroupSize.x, (_GLF_IDENTITY(true, bool(bool(true))) ? gl_WorkGroupSize.x : _GLF_FUZZED(num_workgroup)))))))) ^ 0u), _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize.x, (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize.x, clamp(gl_WorkGroupSize.x, _GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) ^ 0u), gl_WorkGroupSize.x)), min(gl_WorkGroupSize.x, _GLF_IDENTITY(gl_WorkGroupSize.x, _GLF_IDENTITY(min(gl_WorkGroupSize.x, gl_WorkGroupSize.x), (true ? min(gl_WorkGroupSize.x, gl_WorkGroupSize.x) : _GLF_FUZZED(172940u))))))) ^ 0u), 0u | (_GLF_IDENTITY(gl_WorkGroupSize.x, (_GLF_IDENTITY(gl_WorkGroupSize.x, min(gl_WorkGroupSize.x, _GLF_IDENTITY(gl_WorkGroupSize.x, min(gl_WorkGroupSize.x, _GLF_IDENTITY(gl_WorkGroupSize, uvec3(0u, 0u, 0u) ^ (gl_WorkGroupSize)).x))))) ^ 0u))), _GLF_IDENTITY(gl_WorkGroupSize.x, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupSize.x, min(gl_WorkGroupSize.x, _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, uvec3(gl_WorkGroupSize[0], gl_WorkGroupSize[1], gl_WorkGroupSize[2])).x, min(gl_WorkGroupSize.x, gl_WorkGroupSize.x))))) ^ 0u, uint(uvec3((_GLF_IDENTITY(gl_WorkGroupSize.x, min(gl_WorkGroupSize.x, _GLF_IDENTITY(gl_WorkGroupSize.x, min(gl_WorkGroupSize.x, gl_WorkGroupSize.x))))) ^ 0u, 1u, 1u))), (_GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupSize.x, min(gl_WorkGroupSize.x, _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, uvec3(gl_WorkGroupSize[0], gl_WorkGroupSize[1], gl_WorkGroupSize[2])).x, min(gl_WorkGroupSize.x, gl_WorkGroupSize.x))))) ^ 0u, uint(uvec3((_GLF_IDENTITY(gl_WorkGroupSize.x, min(gl_WorkGroupSize.x, _GLF_IDENTITY(gl_WorkGroupSize.x, min(gl_WorkGroupSize.x, gl_WorkGroupSize.x))))) ^ 0u, 1u, 1u)))) | 0u), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupSize.x, min(gl_WorkGroupSize.x, _GLF_IDENTITY(gl_WorkGroupSize.x, min(_GLF_IDENTITY(gl_WorkGroupSize.x, max(gl_WorkGroupSize.x, gl_WorkGroupSize.x)), gl_WorkGroupSize.x))))) ^ 0u, uint(uvec3((_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, uvec3(uvec3(_GLF_IDENTITY(gl_WorkGroupSize, clamp(gl_WorkGroupSize, gl_WorkGroupSize, gl_WorkGroupSize))))).x, min(gl_WorkGroupSize.x, _GLF_IDENTITY(gl_WorkGroupSize.x, min(gl_WorkGroupSize.x, gl_WorkGroupSize.x))))) ^ 0u, 1u, 1u))), (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupSize.x, min(gl_WorkGroupSize.x, _GLF_IDENTITY(gl_WorkGroupSize.x, min(gl_WorkGroupSize.x, gl_WorkGroupSize.x))))) ^ 0u, uint(uvec3((_GLF_IDENTITY(gl_WorkGroupSize.x, min(gl_WorkGroupSize.x, _GLF_IDENTITY(gl_WorkGroupSize.x, min(gl_WorkGroupSize.x, gl_WorkGroupSize.x))))) ^ 0u, 1u, 1u))), (_GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupSize.x, min(gl_WorkGroupSize.x, _GLF_IDENTITY(gl_WorkGroupSize.x, min(gl_WorkGroupSize.x, gl_WorkGroupSize.x))))) ^ 0u, uint(uvec3((_GLF_IDENTITY(gl_WorkGroupSize.x, min(gl_WorkGroupSize.x, _GLF_IDENTITY(gl_WorkGroupSize.x, min(gl_WorkGroupSize.x, gl_WorkGroupSize.x))))) ^ 0u, 1u, 1u)))) << 0u)) | (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupSize.x, min(gl_WorkGroupSize.x, _GLF_IDENTITY(gl_WorkGroupSize.x, min(gl_WorkGroupSize.x, gl_WorkGroupSize.x))))) ^ 0u, uint(uvec3(_GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupSize.x, min(gl_WorkGroupSize.x, _GLF_IDENTITY(gl_WorkGroupSize.x, min(gl_WorkGroupSize.x, _GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) >> uvec3(0u, 0u, 0u)).x))))) ^ 0u, ~ (~ ((_GLF_IDENTITY(gl_WorkGroupSize.x, min(gl_WorkGroupSize.x, _GLF_IDENTITY(gl_WorkGroupSize.x, min(gl_WorkGroupSize.x, _GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) >> uvec3(0u, 0u, 0u)).x))))) ^ 0u))), 1u, 1u))), ~ (~ (_GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupSize.x, min(gl_WorkGroupSize.x, _GLF_IDENTITY(gl_WorkGroupSize.x, min(_GLF_IDENTITY(gl_WorkGroupSize, min(gl_WorkGroupSize, gl_WorkGroupSize)).x, gl_WorkGroupSize.x))))) ^ 0u, uint(uvec3((_GLF_IDENTITY(gl_WorkGroupSize.x, min(gl_WorkGroupSize.x, _GLF_IDENTITY(gl_WorkGroupSize.x, min(gl_WorkGroupSize.x, gl_WorkGroupSize.x))))) ^ 0u, 1u, 1u))))))))))))));
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, false, true, true)), (bool(bvec4(false, false, true, true))) || false))))
    return;
   return;
   if(_GLF_DEAD(false))
    return;
  }
 uint workgroup_id = gl_WorkGroupID.x;
 if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_DEAD(false), false || _GLF_IDENTITY((_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false))))), false || ((_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false))))))))), _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).y)) || ((_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false)))))) && true))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY((_GLF_IDENTITY(false, bool(bvec2(false, false)))), false || ((_GLF_IDENTITY(false, bool(bvec2(false, false)))))) && true), true && (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec2(false, false)))) && true)))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), bool(_GLF_IDENTITY(bool(_GLF_DEAD(false)), bool(bvec4(bool(_GLF_DEAD(false)), false, _GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(! (false), false || (! (false))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)), bool(bvec3(bool(bvec3(_GLF_IDENTITY(! (false), false || (! (false))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)), true, true)))))), true))))), bool(bool(_GLF_DEAD(false)))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(false, false))), false || (_GLF_IDENTITY(false, bool(bvec2(false, false)))))))
    return;
   return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_IDENTITY(false, (false) && true)), false || (_GLF_IDENTITY((false), ! (! ((false)))))), bool(bvec4(! (false), _GLF_IDENTITY(true, ! (! (true))), false, _GLF_IDENTITY(true, ! (! (true))))))))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false || (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(inversesqrt(-7.4)) : _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * 1.0))) > injectionSwitch.y))))))) || false)))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
       if(_GLF_DEAD(false))
        return;
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(true, false || (true)) && (injectionSwitch.x > injectionSwitch.y))))))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        return;
       return;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-57.32)), vec2(_GLF_FUZZED(17.11), (injectionSwitch)[1]), bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))).y))))
          return;
         if(_GLF_DEAD(false))
          return;
         return;
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(false))
          return;
         return;
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
        }
       if(_GLF_DEAD(false))
        return;
      }
     return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         return;
        }
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))), true && (_GLF_IDENTITY(false, bool(bool(false)))))))
        return;
       return;
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 uint workgroup_base = workgroup_size * workgroup_id;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y, false || (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(injectionSwitch.x > injectionSwitch.y, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)))))), ! (! (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(injectionSwitch.x > injectionSwitch.y, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)))))), _GLF_IDENTITY(false, ! (! (false))) || (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (injectionSwitch.x > injectionSwitch.y)), bool(bvec4(injectionSwitch.x > injectionSwitch.y, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)))))), true && ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x)) > injectionSwitch.y, bool(bvec4(injectionSwitch.x > injectionSwitch.y, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))))))))))))), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y, false || (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(injectionSwitch.x > injectionSwitch.y, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)))))), ! (! (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(injectionSwitch.x > injectionSwitch.y, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)))))), _GLF_IDENTITY(false, ! (! (false))) || (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (injectionSwitch.x > injectionSwitch.y)), bool(bvec4(injectionSwitch.x > injectionSwitch.y, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)))))), true && ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x)) > injectionSwitch.y, bool(bvec4(injectionSwitch.x > injectionSwitch.y, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)))))))))))))), ! (! (_GLF_IDENTITY(bool(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y, false || (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(injectionSwitch.x > injectionSwitch.y, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)))))), ! (! (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(injectionSwitch.x > injectionSwitch.y, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)))))), _GLF_IDENTITY(false, ! (! (false))) || (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (injectionSwitch.x > injectionSwitch.y)), bool(bvec4(injectionSwitch.x > injectionSwitch.y, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)))))), true && ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x)) > injectionSwitch.y, bool(bvec4(injectionSwitch.x > injectionSwitch.y, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)))))))))))))), ! (! (bool(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y, false || (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(injectionSwitch.x > injectionSwitch.y, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)))))), ! (! (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(injectionSwitch.x > injectionSwitch.y, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)))))), _GLF_IDENTITY(false, ! (! (false))) || (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (injectionSwitch.x > injectionSwitch.y)), bool(bvec4(injectionSwitch.x > injectionSwitch.y, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)))))), true && ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x)) > injectionSwitch.y, bool(bvec4(injectionSwitch.x > injectionSwitch.y, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)))))))))))))))))))))))))
    return;
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  return;
 uint virtual_gid = workgroup_base + _GLF_IDENTITY(subgroup_id, _GLF_IDENTITY((subgroup_id), ~ (~ ((subgroup_id)))) | 0u) * subgroup_size + subgroup_local_id;
 if(_GLF_DEAD(false))
  return;
 uint next_virtual_gid = workgroup_base + subgroup_id * subgroup_size + _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id + 1, min(subgroup_local_id + 1, subgroup_local_id + 1))), _GLF_IDENTITY(((_GLF_IDENTITY(subgroup_local_id + 1, min(subgroup_local_id + 1, subgroup_local_id + 1)))) ^ (0u & 186486u), (false ? _GLF_FUZZED(workgroup_id) : _GLF_IDENTITY(((_GLF_IDENTITY(subgroup_local_id + 1, min(subgroup_local_id + 1, subgroup_local_id + 1)))) ^ (0u & 186486u), (((_GLF_IDENTITY(subgroup_local_id + 1, min(subgroup_local_id + 1, subgroup_local_id + 1)))) ^ (0u & 186486u)) | (((_GLF_IDENTITY(subgroup_local_id + 1, min(subgroup_local_id + 1, subgroup_local_id + 1)))) ^ (0u & 186486u)))))), (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) | _GLF_IDENTITY((_GLF_IDENTITY(0u >> _GLF_IDENTITY(uint(6u), uint(6u)), (_GLF_IDENTITY(0u >> _GLF_IDENTITY(uint(6u), uint(6u)), (0u >> _GLF_IDENTITY(uint(6u), uint(6u))) | 0u)) >> 0u)), 0u ^ ((_GLF_IDENTITY(0u >> _GLF_IDENTITY(uint(6u), uint(6u)), uint(_GLF_IDENTITY(uint(_GLF_IDENTITY(0u >> _GLF_IDENTITY(uint(6u), uint(6u)), (0u >> _GLF_IDENTITY(uint(6u), uint(6u))) | (0u >> _GLF_IDENTITY(uint(6u), uint(6u))))), (110640u & 0u) | (uint(_GLF_IDENTITY(0u >> _GLF_IDENTITY(uint(6u), uint(6u)), (0u >> _GLF_IDENTITY(uint(6u), uint(6u))) | (0u >> _GLF_IDENTITY(uint(6u), uint(6u)))))))))))))), (false ? _GLF_FUZZED(subgroup_id) : _GLF_IDENTITY((subgroup_local_id + 1), ~ (_GLF_IDENTITY(~ ((subgroup_local_id + 1)), max(~ ((subgroup_local_id + 1)), ~ ((subgroup_local_id + 1))))))))) / 1u) % subgroup_size, (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id + 1, min(subgroup_local_id + 1, subgroup_local_id + 1))), (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) | (0u >> _GLF_IDENTITY(uint(6u), uint(6u))))), (false ? _GLF_FUZZED(subgroup_id) : _GLF_IDENTITY((subgroup_local_id + 1), ~ (_GLF_IDENTITY(~ ((_GLF_IDENTITY(subgroup_local_id, 0u ^ (subgroup_local_id)) + 1)), max(~ ((_GLF_IDENTITY(subgroup_local_id + 1, uint(uvec2(subgroup_local_id + 1, 0u))))), ~ ((subgroup_local_id + 1))))))))) / 1u) % subgroup_size, 1u * (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id + 1, min(_GLF_IDENTITY(subgroup_local_id + 1, max(subgroup_local_id + 1, subgroup_local_id + 1)), subgroup_local_id + 1))), (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) | _GLF_IDENTITY((0u >> _GLF_IDENTITY(_GLF_IDENTITY(uint(6u), uint(6u)), min(_GLF_IDENTITY(_GLF_IDENTITY(uint(6u), uint(6u)), (_GLF_IDENTITY(_GLF_IDENTITY(uint(6u), uint(6u)), uint(uvec3(_GLF_IDENTITY(uint(6u), uint(_GLF_IDENTITY(6u, 0u | (6u)))), 0u, 0u)))) >> 0u), _GLF_IDENTITY(uint(6u), uint(6u))))), (false ? _GLF_FUZZED(virtual_gid) : (0u >> _GLF_IDENTITY(_GLF_IDENTITY(uint(6u), uint(6u)), min(_GLF_IDENTITY(_GLF_IDENTITY(uint(6u), uint(6u)), (_GLF_IDENTITY(_GLF_IDENTITY(uint(6u), uint(6u)), uint(uvec3(_GLF_IDENTITY(uint(6u), uint(_GLF_IDENTITY(6u, 0u | (6u)))), 0u, 0u)))) >> 0u), _GLF_IDENTITY(uint(6u), uint(6u))))))))), (false ? _GLF_FUZZED(_GLF_IDENTITY(subgroup_id, uint(uvec4(subgroup_id, 1u, 1u, 0u)))) : _GLF_IDENTITY((subgroup_local_id + 1), ~ (_GLF_IDENTITY(~ ((subgroup_local_id + 1)), max(~ ((subgroup_local_id + 1)), ~ _GLF_IDENTITY(((subgroup_local_id + 1)), (_GLF_IDENTITY(((subgroup_local_id + 1)), uint(uvec3(((subgroup_local_id + 1)), 0u, 1u)))) / 1u)))))))) / _GLF_IDENTITY(1u, (1u) ^ 0u)) % subgroup_size, (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id + 1, min(_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, (1) - 0), max(subgroup_local_id + 1, subgroup_local_id + 1)), subgroup_local_id + 1))), (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) | (_GLF_IDENTITY(0u, ~ (~ (0u))) >> _GLF_IDENTITY(_GLF_IDENTITY(uint(6u), uint(6u)), min(_GLF_IDENTITY(_GLF_IDENTITY(uint(6u), uint(6u)), (_GLF_IDENTITY(_GLF_IDENTITY(uint(6u), uint(6u)), uint(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(uint(6u), uint(6u)), 0u, 0u), clamp(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(uint(6u), uint(6u)), 0u, 0u), _GLF_IDENTITY((uvec3(_GLF_IDENTITY(uint(6u), uint(6u)), 0u, 0u)) | (uvec3(_GLF_IDENTITY(uint(6u), uint(6u)), 0u, 0u)), ((uvec3(_GLF_IDENTITY(uint(6u), uint(6u)), 0u, 0u)) | (uvec3(_GLF_IDENTITY(uint(6u), uint(6u)), 0u, 0u))) | ((uvec3(_GLF_IDENTITY(uint(6u), uint(6u)), 0u, 0u)) | (uvec3(_GLF_IDENTITY(uint(6u), uint(6u)), 0u, 0u))))), uvec3(_GLF_IDENTITY(uint(6u), uint(6u)), 0u, 0u), _GLF_IDENTITY(uvec3(_GLF_IDENTITY(uint(6u), uint(6u)), 0u, 0u), (uvec3(_GLF_IDENTITY(uint(6u), uint(6u)), 0u, 0u)) | (uvec3(_GLF_IDENTITY(uint(6u), uint(6u)), 0u, 0u)))))))) >> 0u), _GLF_IDENTITY(uint(6u), uint(6u))))))), (false ? _GLF_FUZZED(subgroup_id) : _GLF_IDENTITY((subgroup_local_id + 1), ~ (_GLF_IDENTITY(~ ((subgroup_local_id + _GLF_IDENTITY(1, 0 ^ (_GLF_IDENTITY(1, (1) * 1))))), max(~ ((subgroup_local_id + 1)), ~ _GLF_IDENTITY(((subgroup_local_id + 1)), (_GLF_IDENTITY(((subgroup_local_id + 1)), uint(uvec3(((subgroup_local_id + _GLF_IDENTITY(1, ~ (_GLF_IDENTITY(~ (1), (~ (1)) * 1))))), 0u, 1u)))) / 1u)))))))) / 1u) % subgroup_size) - 0u)))) ^ 0u)), ((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id + 1, min(subgroup_local_id + 1, subgroup_local_id + 1))), ((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1, min(subgroup_local_id + 1, subgroup_local_id + 1)), (_GLF_IDENTITY(subgroup_local_id + 1, min(subgroup_local_id + 1, subgroup_local_id + 1))) ^ 0u))) ^ (0u & 186486u)), (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) | (0u >> _GLF_IDENTITY(uint(6u), uint(6u)))), (_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) | (0u >> _GLF_IDENTITY(uint(6u), uint(6u))))) << 0u)), (false ? _GLF_FUZZED(subgroup_id) : _GLF_IDENTITY((subgroup_local_id + 1), ~ (_GLF_IDENTITY(~ _GLF_IDENTITY(((subgroup_local_id + 1)), uint(uvec3(_GLF_IDENTITY(((subgroup_local_id + 1)), (((subgroup_local_id + 1))) >> 0u), ((1u << _GLF_IDENTITY(uint(5u), uint(5u))) >> _GLF_IDENTITY(uint(5u), _GLF_IDENTITY(uint(5u), uint(uint(uint(5u)))))), 1u))), max(~ ((subgroup_local_id + 1)), ~ ((subgroup_local_id + 1))))))))) / 1u) % subgroup_size, (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id + 1, min(subgroup_local_id + 1, subgroup_local_id + 1))), (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) | (0u >> _GLF_IDENTITY(uint(6u), uint(6u))))), (false ? _GLF_FUZZED(subgroup_id) : _GLF_IDENTITY((subgroup_local_id + 1), ~ (_GLF_IDENTITY(~ ((_GLF_IDENTITY(subgroup_local_id, 0u ^ (subgroup_local_id)) + 1)), max(~ ((subgroup_local_id + 1)), ~ ((subgroup_local_id + 1))))))))) / 1u) % subgroup_size, 1u * (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id + 1, min(_GLF_IDENTITY(subgroup_local_id + 1, max(_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) << (0u << _GLF_IDENTITY(uint(1u), uint(1u)))), subgroup_local_id + 1)), subgroup_local_id + 1))), (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) | (0u >> _GLF_IDENTITY(_GLF_IDENTITY(uint(6u), uint(6u)), min(_GLF_IDENTITY(_GLF_IDENTITY(uint(6u), uint(6u)), (_GLF_IDENTITY(_GLF_IDENTITY(uint(6u), uint(6u)), uint(uvec3(_GLF_IDENTITY(uint(6u), uint(6u)), 0u, 0u)))) >> 0u), _GLF_IDENTITY(uint(6u), uint(6u))))))), (false ? _GLF_FUZZED(subgroup_id) : _GLF_IDENTITY((subgroup_local_id + 1), ~ (_GLF_IDENTITY(~ ((subgroup_local_id + 1)), max(~ ((subgroup_local_id + 1)), ~ _GLF_IDENTITY(((subgroup_local_id + 1)), (_GLF_IDENTITY(((subgroup_local_id + 1)), uint(uvec3(((subgroup_local_id + 1)), 0u, 1u)))) / 1u)))))))) / 1u) % subgroup_size, (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id + 1, min(_GLF_IDENTITY(subgroup_local_id + 1, max(subgroup_local_id + 1, subgroup_local_id + 1)), subgroup_local_id + 1))), (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (false ? _GLF_FUZZED(atomicExchange(num_workgroup, subgroup_local_id)) : subgroup_local_id)) + 1, (subgroup_local_id + 1) | (0u >> _GLF_IDENTITY(_GLF_IDENTITY(uint(6u), uint(6u)), min(_GLF_IDENTITY(_GLF_IDENTITY(uint(6u), uint(6u)), (_GLF_IDENTITY(_GLF_IDENTITY(uint(6u), uint(6u)), uint(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(uint(_GLF_IDENTITY(6u, (_GLF_IDENTITY(6u, (6u) + 0u)) | 0u)), uint(6u)), 0u, 0u), clamp(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(uint(6u), uint(6u)), 0u, 0u), (uvec3(_GLF_IDENTITY(uint(6u), uint(6u)), 0u, 0u)) | (uvec3(_GLF_IDENTITY(uint(6u), uint(6u)), 0u, 0u))), uvec3(_GLF_IDENTITY(uint(6u), uint(6u)), 0u, 0u), _GLF_IDENTITY(uvec3(_GLF_IDENTITY(uint(6u), uint(6u)), 0u, 0u), (uvec3(_GLF_IDENTITY(uint(_GLF_IDENTITY(6u, ~ (~ (6u)))), uint(6u)), 0u, 0u)) | (uvec3(_GLF_IDENTITY(uint(6u), uint(6u)), 0u, 0u)))))))) >> 0u), _GLF_IDENTITY(uint(6u), uint(6u))))))), (false ? _GLF_FUZZED(subgroup_id) : _GLF_IDENTITY((subgroup_local_id + 1), _GLF_IDENTITY(~ (_GLF_IDENTITY(~ ((subgroup_local_id + _GLF_IDENTITY(1, 0 ^ (_GLF_IDENTITY(1, (1) * 1))))), max(~ ((subgroup_local_id + 1)), ~ _GLF_IDENTITY(((subgroup_local_id + 1)), (_GLF_IDENTITY(((subgroup_local_id + 1)), uint(uvec3(((subgroup_local_id + _GLF_IDENTITY(1, ~ (_GLF_IDENTITY(~ (1), (~ (1)) * 1))))), 0u, 1u)))) / 1u)))), (~ (_GLF_IDENTITY(~ ((subgroup_local_id + _GLF_IDENTITY(1, 0 ^ (_GLF_IDENTITY(1, (1) * 1))))), max(~ ((subgroup_local_id + 1)), ~ _GLF_IDENTITY(((subgroup_local_id + 1)), (_GLF_IDENTITY(((subgroup_local_id + 1)), uint(uvec3(((subgroup_local_id + _GLF_IDENTITY(1, ~ (_GLF_IDENTITY(~ (1), (~ (1)) * 1))))), 0u, 1u)))) / 1u))))) | (0u << _GLF_IDENTITY(uint(3u), uint(3u)))))))) / 1u) % subgroup_size, (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id + 1, min(_GLF_IDENTITY(subgroup_local_id + 1, max(subgroup_local_id + 1, subgroup_local_id + 1)), subgroup_local_id + 1))), (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (false ? _GLF_FUZZED(atomicExchange(num_workgroup, subgroup_local_id)) : subgroup_local_id)) + 1, (subgroup_local_id + 1) | (0u >> _GLF_IDENTITY(_GLF_IDENTITY(uint(6u), uint(6u)), min(_GLF_IDENTITY(_GLF_IDENTITY(uint(6u), uint(6u)), (_GLF_IDENTITY(_GLF_IDENTITY(uint(6u), uint(6u)), uint(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(uint(_GLF_IDENTITY(6u, (_GLF_IDENTITY(6u, (6u) + 0u)) | 0u)), uint(6u)), 0u, 0u), clamp(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(uint(6u), uint(6u)), 0u, 0u), (uvec3(_GLF_IDENTITY(uint(6u), uint(6u)), 0u, 0u)) | (uvec3(_GLF_IDENTITY(uint(6u), uint(6u)), 0u, 0u))), uvec3(_GLF_IDENTITY(uint(6u), uint(6u)), 0u, 0u), _GLF_IDENTITY(uvec3(_GLF_IDENTITY(uint(6u), uint(6u)), 0u, 0u), (uvec3(_GLF_IDENTITY(uint(_GLF_IDENTITY(6u, ~ (~ (6u)))), uint(6u)), 0u, 0u)) | (uvec3(_GLF_IDENTITY(uint(6u), uint(6u)), 0u, 0u)))))))) >> 0u), _GLF_IDENTITY(uint(6u), uint(6u))))))), (false ? _GLF_FUZZED(subgroup_id) : _GLF_IDENTITY((subgroup_local_id + 1), _GLF_IDENTITY(~ (_GLF_IDENTITY(~ ((subgroup_local_id + _GLF_IDENTITY(1, 0 ^ (_GLF_IDENTITY(1, (1) * 1))))), max(~ ((subgroup_local_id + 1)), ~ _GLF_IDENTITY(((subgroup_local_id + 1)), (_GLF_IDENTITY(((subgroup_local_id + 1)), uint(uvec3(((subgroup_local_id + _GLF_IDENTITY(1, ~ (_GLF_IDENTITY(~ (1), (~ (1)) * 1))))), 0u, 1u)))) / 1u)))), (~ (_GLF_IDENTITY(~ ((subgroup_local_id + _GLF_IDENTITY(1, 0 ^ (_GLF_IDENTITY(1, (1) * 1))))), max(~ ((subgroup_local_id + 1)), ~ _GLF_IDENTITY(((subgroup_local_id + 1)), (_GLF_IDENTITY(((subgroup_local_id + 1)), uint(uvec3(((subgroup_local_id + _GLF_IDENTITY(1, ~ (_GLF_IDENTITY(~ (1), (~ (1)) * 1))))), 0u, 1u)))) / 1u))))) | (0u << _GLF_IDENTITY(uint(3u), uint(3u)))))))) / 1u) % subgroup_size, (false ? _GLF_FUZZED(subgroup_size) : _GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id + 1, min(_GLF_IDENTITY(subgroup_local_id + 1, max(subgroup_local_id + 1, subgroup_local_id + 1)), subgroup_local_id + 1))), (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (false ? _GLF_FUZZED(atomicExchange(num_workgroup, subgroup_local_id)) : subgroup_local_id)) + 1, (subgroup_local_id + 1) | (0u >> _GLF_IDENTITY(_GLF_IDENTITY(uint(6u), uint(6u)), min(_GLF_IDENTITY(_GLF_IDENTITY(uint(6u), uint(6u)), (_GLF_IDENTITY(_GLF_IDENTITY(uint(6u), uint(6u)), uint(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(uint(_GLF_IDENTITY(6u, (_GLF_IDENTITY(6u, (6u) + 0u)) | 0u)), uint(6u)), 0u, 0u), clamp(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(uint(6u), uint(6u)), 0u, 0u), (uvec3(_GLF_IDENTITY(uint(6u), uint(6u)), 0u, 0u)) | (uvec3(_GLF_IDENTITY(uint(6u), uint(6u)), 0u, 0u))), uvec3(_GLF_IDENTITY(uint(6u), uint(6u)), 0u, 0u), _GLF_IDENTITY(uvec3(_GLF_IDENTITY(uint(6u), uint(6u)), 0u, 0u), (uvec3(_GLF_IDENTITY(uint(_GLF_IDENTITY(6u, ~ (~ (6u)))), uint(6u)), 0u, 0u)) | (uvec3(_GLF_IDENTITY(uint(6u), uint(6u)), 0u, 0u)))))))) >> 0u), _GLF_IDENTITY(uint(6u), uint(6u))))))), (false ? _GLF_FUZZED(subgroup_id) : _GLF_IDENTITY((subgroup_local_id + 1), _GLF_IDENTITY(~ (_GLF_IDENTITY(~ ((subgroup_local_id + _GLF_IDENTITY(1, 0 ^ (_GLF_IDENTITY(1, (1) * 1))))), max(~ ((subgroup_local_id + 1)), ~ _GLF_IDENTITY(((subgroup_local_id + 1)), (_GLF_IDENTITY(((subgroup_local_id + 1)), uint(uvec3(((subgroup_local_id + _GLF_IDENTITY(1, ~ (_GLF_IDENTITY(~ (1), (~ (1)) * 1))))), 0u, 1u)))) / 1u)))), (~ (_GLF_IDENTITY(~ ((subgroup_local_id + _GLF_IDENTITY(1, 0 ^ (_GLF_IDENTITY(1, (1) * 1))))), max(~ ((subgroup_local_id + 1)), ~ _GLF_IDENTITY(((subgroup_local_id + 1)), (_GLF_IDENTITY(((subgroup_local_id + 1)), uint(uvec3(((subgroup_local_id + _GLF_IDENTITY(1, ~ (_GLF_IDENTITY(~ (1), (~ (1)) * 1))))), 0u, 1u)))) / 1u))))) | (0u << _GLF_IDENTITY(uint(3u), uint(3u)))))))) / 1u) % subgroup_size))) << uint(_GLF_ZERO(0.0, injectionSwitch.x)))) - 0u)))) ^ 0u))) | ((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, uint(uvec4(_GLF_IDENTITY(subgroup_local_id, uint(uint(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | (subgroup_local_id))))), 1u, 0u, (0u << _GLF_IDENTITY(uint(8u), uint(8u)))))) + 1, min(subgroup_local_id + 1, subgroup_local_id + 1))), _GLF_IDENTITY(((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, 0u | (subgroup_local_id)) + 1, min(subgroup_local_id + 1, subgroup_local_id + 1)))), ~ (~ (((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY(0u, (true ? 0u : _GLF_FUZZED(workgroup_base))) | (subgroup_local_id)) + 1, min(subgroup_local_id + 1, subgroup_local_id + 1))))))) ^ (0u & 186486u)), (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) | (0u >> _GLF_IDENTITY(_GLF_IDENTITY(uint(6u), (_GLF_IDENTITY(uint(6u), (uint(6u)) | (uint(6u)))) * 1u), uint(6u))))), (false ? _GLF_FUZZED(subgroup_id) : _GLF_IDENTITY((subgroup_local_id + 1), ~ (_GLF_IDENTITY(~ ((subgroup_local_id + 1)), max(~ (_GLF_IDENTITY((subgroup_local_id + 1), ((subgroup_local_id + 1)) - uint(_GLF_ZERO(0.0, injectionSwitch.x)))), ~ ((subgroup_local_id + 1))))))))) / 1u) % subgroup_size, (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id + 1, min(subgroup_local_id + 1, subgroup_local_id + 1))), (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) | (0u >> _GLF_IDENTITY(uint(6u), uint(6u))))), (false ? _GLF_FUZZED(subgroup_id) : _GLF_IDENTITY((subgroup_local_id + 1), ~ (_GLF_IDENTITY(~ ((_GLF_IDENTITY(subgroup_local_id, 0u ^ (subgroup_local_id)) + 1)), max(~ ((subgroup_local_id + 1)), ~ ((subgroup_local_id + 1))))))))) / 1u) % subgroup_size, 1u * (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id + 1, min(_GLF_IDENTITY(subgroup_local_id + 1, max(subgroup_local_id + 1, subgroup_local_id + 1)), subgroup_local_id + 1))), (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) | (0u >> _GLF_IDENTITY(_GLF_IDENTITY(uint(6u), uint(6u)), min(_GLF_IDENTITY(_GLF_IDENTITY(uint(6u), uint(6u)), (_GLF_IDENTITY(_GLF_IDENTITY(uint(6u), uint(6u)), uint(uvec3(_GLF_IDENTITY(uint(6u), uint(6u)), 0u, 0u)))) >> 0u), _GLF_IDENTITY(uint(6u), uint(6u))))))), (false ? _GLF_FUZZED(subgroup_id) : _GLF_IDENTITY((subgroup_local_id + 1), ~ (_GLF_IDENTITY(~ ((subgroup_local_id + 1)), max(~ ((subgroup_local_id + 1)), ~ _GLF_IDENTITY(((subgroup_local_id + 1)), (_GLF_IDENTITY(((subgroup_local_id + 1)), uint(uvec3(((subgroup_local_id + 1)), 0u, 1u)))) / 1u))))))), (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) | (0u >> _GLF_IDENTITY(_GLF_IDENTITY(uint(6u), uint(6u)), min(_GLF_IDENTITY(_GLF_IDENTITY(uint(6u), uint(6u)), (_GLF_IDENTITY(_GLF_IDENTITY(uint(6u), uint(6u)), uint(uvec3(_GLF_IDENTITY(uint(6u), uint(6u)), 0u, 0u)))) >> 0u), _GLF_IDENTITY(uint(6u), uint(6u))))))), (false ? _GLF_FUZZED(subgroup_id) : _GLF_IDENTITY((subgroup_local_id + 1), ~ (_GLF_IDENTITY(~ ((subgroup_local_id + 1)), max(~ ((subgroup_local_id + 1)), ~ _GLF_IDENTITY(((subgroup_local_id + 1)), (_GLF_IDENTITY(((subgroup_local_id + 1)), uint(uvec3(((subgroup_local_id + 1)), 0u, 1u)))) / 1u)))))))) | (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) | (0u >> _GLF_IDENTITY(_GLF_IDENTITY(uint(6u), uint(6u)), min(_GLF_IDENTITY(_GLF_IDENTITY(uint(6u), uint(6u)), (_GLF_IDENTITY(_GLF_IDENTITY(uint(6u), uint(6u)), uint(uvec3(_GLF_IDENTITY(uint(6u), uint(6u)), 0u, 0u)))) >> 0u), _GLF_IDENTITY(uint(6u), uint(6u))))))), (false ? _GLF_FUZZED(subgroup_id) : _GLF_IDENTITY((subgroup_local_id + 1), ~ (_GLF_IDENTITY(~ ((subgroup_local_id + 1)), max(~ ((subgroup_local_id + 1)), ~ _GLF_IDENTITY(((subgroup_local_id + 1)), (_GLF_IDENTITY(((subgroup_local_id + 1)), uint(uvec3(((subgroup_local_id + 1)), 0u, 1u)))) / 1u)))))))))) / 1u) % subgroup_size, (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id + 1, min(_GLF_IDENTITY(subgroup_local_id + 1, max(subgroup_local_id + 1, subgroup_local_id + 1)), subgroup_local_id + 1))), (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, ~ (~ (_GLF_IDENTITY(subgroup_local_id, max(subgroup_local_id, subgroup_local_id))))) + 1, (subgroup_local_id + 1) | (0u >> _GLF_IDENTITY(_GLF_IDENTITY(uint(6u), uint(6u)), min(_GLF_IDENTITY(_GLF_IDENTITY(uint(6u), uint(6u)), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(uint(6u), uint(6u)), min(_GLF_IDENTITY(uint(6u), uint(6u)), _GLF_IDENTITY(uint(6u), uint(6u)))), uint(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(uint(6u), uint(6u)), 0u, 0u), clamp(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(uint(6u), uint(6u)), 0u, 0u), (_GLF_IDENTITY(uvec3(_GLF_IDENTITY(uint(6u), uint(6u)), 0u, 0u), _GLF_IDENTITY(uvec3(uvec3(uvec3(_GLF_IDENTITY(uint(6u), uint(6u)), 0u, 0u))), uvec3(uvec3(uvec3(uvec3(uvec3(_GLF_IDENTITY(uint(6u), uint(6u)), 0u, 0u)))))))) | (uvec3(_GLF_IDENTITY(uint(6u), uint(6u)), 0u, 0u))), uvec3(_GLF_IDENTITY(uint(6u), uint(_GLF_IDENTITY(6u, (6u) | (6u)))), 0u, 0u), _GLF_IDENTITY(uvec3(_GLF_IDENTITY(uint(6u), uint(6u)), 0u, 0u), (uvec3(_GLF_IDENTITY(uint(6u), uint(_GLF_IDENTITY(6u, (6u) | 0u))), 0u, 0u)) | (uvec3(_GLF_IDENTITY(uint(6u), uint(6u)), 0u, 0u)))))))) >> _GLF_IDENTITY(0u, (false ? _GLF_FUZZED(51896u) : 0u))), _GLF_IDENTITY(uint(6u), uint(6u))))))), (false ? _GLF_FUZZED(subgroup_id) : _GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id + 1), ~ (_GLF_IDENTITY(~ ((subgroup_local_id + _GLF_IDENTITY(1, 0 ^ (_GLF_IDENTITY(1, (1) * 1))))), max(~ ((subgroup_local_id + 1)), ~ _GLF_IDENTITY(((subgroup_local_id + 1)), (_GLF_IDENTITY(((subgroup_local_id + 1)), uint(uvec3(((subgroup_local_id + _GLF_IDENTITY(1, ~ (_GLF_IDENTITY(~ (1), (~ (1)) * 1))))), 0u, 1u)))) / 1u))))), max(_GLF_IDENTITY((subgroup_local_id + 1), ~ (_GLF_IDENTITY(~ ((subgroup_local_id + _GLF_IDENTITY(1, 0 ^ (_GLF_IDENTITY(1, (1) * 1))))), max(~ ((subgroup_local_id + 1)), ~ _GLF_IDENTITY(((subgroup_local_id + 1)), (_GLF_IDENTITY(((subgroup_local_id + 1)), uint(uvec3(((subgroup_local_id + _GLF_IDENTITY(1, ~ (_GLF_IDENTITY(~ (1), (~ (1)) * 1))))), 0u, 1u)))) / 1u))))), _GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id + 1), ~ (_GLF_IDENTITY(~ ((subgroup_local_id + _GLF_IDENTITY(1, 0 ^ (_GLF_IDENTITY(1, (1) * 1))))), max(~ ((subgroup_local_id + 1)), ~ _GLF_IDENTITY(((subgroup_local_id + 1)), (_GLF_IDENTITY(((subgroup_local_id + 1)), uint(uvec3(((subgroup_local_id + _GLF_IDENTITY(1, ~ (_GLF_IDENTITY(~ (1), (~ (1)) * 1))))), 0u, 1u)))) / 1u))))), clamp(_GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id + 1), ~ (_GLF_IDENTITY(~ ((subgroup_local_id + _GLF_IDENTITY(1, 0 ^ (_GLF_IDENTITY(1, (1) * 1))))), max(~ ((subgroup_local_id + 1)), ~ _GLF_IDENTITY(((subgroup_local_id + 1)), (_GLF_IDENTITY(((subgroup_local_id + 1)), uint(uvec3(((subgroup_local_id + _GLF_IDENTITY(1, ~ (_GLF_IDENTITY(~ (1), (~ (1)) * 1))))), 0u, 1u)))) / 1u))))), clamp(_GLF_IDENTITY((subgroup_local_id + 1), ~ (_GLF_IDENTITY(~ ((subgroup_local_id + _GLF_IDENTITY(1, 0 ^ (_GLF_IDENTITY(1, (1) * 1))))), max(~ ((subgroup_local_id + 1)), ~ _GLF_IDENTITY(((subgroup_local_id + 1)), (_GLF_IDENTITY(((subgroup_local_id + 1)), uint(uvec3(((subgroup_local_id + _GLF_IDENTITY(1, ~ (_GLF_IDENTITY(~ (1), (~ (1)) * 1))))), 0u, 1u)))) / 1u))))), _GLF_IDENTITY((subgroup_local_id + 1), ~ (_GLF_IDENTITY(~ ((subgroup_local_id + _GLF_IDENTITY(1, 0 ^ (_GLF_IDENTITY(1, (1) * 1))))), max(~ ((subgroup_local_id + 1)), ~ _GLF_IDENTITY(((subgroup_local_id + 1)), (_GLF_IDENTITY(((subgroup_local_id + 1)), uint(uvec3(((subgroup_local_id + _GLF_IDENTITY(1, ~ (_GLF_IDENTITY(~ (1), (~ (1)) * 1))))), 0u, 1u)))) / 1u))))), _GLF_IDENTITY((subgroup_local_id + 1), ~ (_GLF_IDENTITY(~ ((subgroup_local_id + _GLF_IDENTITY(1, 0 ^ (_GLF_IDENTITY(1, (1) * 1))))), max(~ ((subgroup_local_id + 1)), ~ _GLF_IDENTITY(((subgroup_local_id + 1)), (_GLF_IDENTITY(((subgroup_local_id + 1)), uint(uvec3(((subgroup_local_id + _GLF_IDENTITY(1, ~ (_GLF_IDENTITY(~ (1), (~ (1)) * 1))))), 0u, 1u)))) / 1u))))))), _GLF_IDENTITY((subgroup_local_id + 1), ~ (_GLF_IDENTITY(~ ((subgroup_local_id + _GLF_IDENTITY(1, 0 ^ (_GLF_IDENTITY(1, (1) * 1))))), max(~ ((subgroup_local_id + 1)), ~ _GLF_IDENTITY(((subgroup_local_id + 1)), (_GLF_IDENTITY(((subgroup_local_id + 1)), uint(uvec3(((subgroup_local_id + _GLF_IDENTITY(1, ~ (_GLF_IDENTITY(~ (1), (~ (1)) * 1))))), 0u, 1u)))) / 1u))))), _GLF_IDENTITY((subgroup_local_id + 1), ~ (_GLF_IDENTITY(~ ((subgroup_local_id + _GLF_IDENTITY(1, 0 ^ (_GLF_IDENTITY(1, (1) * 1))))), max(~ ((subgroup_local_id + 1)), ~ _GLF_IDENTITY(((subgroup_local_id + 1)), (_GLF_IDENTITY(((subgroup_local_id + 1)), uint(uvec3(((subgroup_local_id + _GLF_IDENTITY(1, ~ (_GLF_IDENTITY(~ (1), (~ (1)) * 1))))), 0u, 1u)))) / 1u)))))))))))) / 1u) % subgroup_size) - 0u)))) ^ 0u))));
 atomicStore(buf[virtual_gid], uint(1), 4, 64, _GLF_IDENTITY(_GLF_IDENTITY(4, _GLF_IDENTITY(max(_GLF_IDENTITY(_GLF_IDENTITY(4, _GLF_IDENTITY(0, (0) + 0) | (4)), _GLF_IDENTITY((4) / _GLF_IDENTITY(1, (_GLF_IDENTITY(1, int(ivec4(1, 1, 1, 0)))) + 0), (_GLF_IDENTITY((4) / 1, int(int((4) / 1)))) ^ 0)), 4), (max(_GLF_IDENTITY(_GLF_IDENTITY(4, _GLF_IDENTITY(0, (0) + 0) | (_GLF_IDENTITY(4, (true ? 4 : _GLF_FUZZED(40686))))), _GLF_IDENTITY((4) / 1, (_GLF_IDENTITY((4) / 1, int(int((4) / 1)))) ^ 0)), 4)) - (1 ^ 1))), min(_GLF_IDENTITY(4, _GLF_IDENTITY(max(_GLF_IDENTITY(_GLF_IDENTITY(4, _GLF_IDENTITY(0, (0) + 0) | (4)), _GLF_IDENTITY((4) / _GLF_IDENTITY(1, (_GLF_IDENTITY(1, int(ivec4(1, 1, 1, 0)))) + 0), (_GLF_IDENTITY((4) / 1, int(int((4) / 1)))) ^ 0)), 4), (max(_GLF_IDENTITY(_GLF_IDENTITY(4, _GLF_IDENTITY(0, (0) + 0) | (_GLF_IDENTITY(4, (true ? 4 : _GLF_FUZZED(40686))))), _GLF_IDENTITY((4) / 1, (_GLF_IDENTITY((4) / 1, int(int((4) / 1)))) ^ 0)), 4)) - (1 ^ 1))), _GLF_IDENTITY(4, _GLF_IDENTITY(max(_GLF_IDENTITY(_GLF_IDENTITY(4, _GLF_IDENTITY(0, (0) + 0) | (4)), _GLF_IDENTITY((4) / _GLF_IDENTITY(1, (_GLF_IDENTITY(1, int(ivec4(1, 1, 1, 0)))) + 0), (_GLF_IDENTITY((4) / 1, int(int((4) / 1)))) ^ 0)), 4), (max(_GLF_IDENTITY(_GLF_IDENTITY(4, _GLF_IDENTITY(0, (0) + 0) | (_GLF_IDENTITY(4, (true ? 4 : _GLF_FUZZED(40686))))), _GLF_IDENTITY((4) / 1, (_GLF_IDENTITY((4) / 1, int(int((4) / 1)))) ^ 0)), 4)) - (1 ^ 1))))));
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y)), ! (! (_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, false || (false)), (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(79.12)), float(injectionSwitch.y), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))))
    return;
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(_GLF_IDENTITY(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true), bvec2(bvec4(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true), true, false))))), true && (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(9.3)), float(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + 0.0)), bool(true))) > injectionSwitch.y))))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     return;
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
    return;
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
  }
 atomicStore(buf[next_virtual_gid], uint(2), 4, 64, 4);
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, false, true)), (bool(bvec3(false, false, true))) && true))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0) > injectionSwitch.y))))
    return;
   return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, float(mat2x4(injectionSwitch.x, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0))) > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  return;
}
