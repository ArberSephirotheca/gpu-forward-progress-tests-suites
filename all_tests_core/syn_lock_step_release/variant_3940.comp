#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(false))
  return;
 if(_GLF_WRAPPED_IF_TRUE(true))
  {
   if(_GLF_DEAD(false))
    return;
  }
 else
  {
  }
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(false))
  {
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     return;
    }
   else
    {
    }
   if(_GLF_DEAD(false))
    return;
  }
 uint subgroup_size = gl_SubgroupSize;
 for(int _injected_loop_counter = int(_GLF_ZERO(0.0, injectionSwitch.x)); _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _GLF_IDENTITY(_injected_loop_counter ++, ~ (~ (_GLF_IDENTITY(_injected_loop_counter ++, (_GLF_IDENTITY(_injected_loop_counter ++, (_injected_loop_counter ++) | 0)) / 1)))))
  {
   for(int _injected_loop_counter = int(_GLF_ZERO(0.0, injectionSwitch.x)); _GLF_WRAPPED_LOOP(_injected_loop_counter < _GLF_IDENTITY(1, max(_GLF_IDENTITY(1, _GLF_IDENTITY(_GLF_IDENTITY((1), 1 * _GLF_IDENTITY(((1)), clamp(((1)), ((1)), _GLF_IDENTITY(((1)), max(((1)), ((1))))))) * 1, (_GLF_IDENTITY((_GLF_IDENTITY(1, max(1, 1))), 1 * ((1))) * _GLF_IDENTITY(1, max(1, 1))) + 0)), _GLF_IDENTITY(_GLF_IDENTITY(1, 0 | (1)), (_GLF_IDENTITY(_GLF_IDENTITY(1, _GLF_IDENTITY(0, int(_GLF_IDENTITY(ivec4(0, 0, 1, 0), max(_GLF_IDENTITY(ivec4(0, 0, 1, 0), (ivec4(0, 0, 1, 0)) | ivec4(0, 0, 0, 0)), ivec4(0, 0, 1, 0))))) | (1)), 1 * (_GLF_IDENTITY(1, 0 | (1))))) - 0)))); _injected_loop_counter ++)
    {
     if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((false), true && ((false)))))))
      {
      }
     else
      {
       if(_GLF_WRAPPED_IF_FALSE(false))
        {
         if(_GLF_DEAD(false))
          continue;
        }
       else
        {
         if(_GLF_WRAPPED_IF_FALSE(false))
          {
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(false))
              continue;
             if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, ! (! (true)))))
              {
               return;
              }
             else
              {
              }
            }
           if(_GLF_DEAD(false))
            return;
           if(_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, ! (! (false)))))))
            break;
          }
         else
          {
           if(_GLF_DEAD(false))
            break;
           if(_GLF_WRAPPED_IF_FALSE(false))
            {
            }
           else
            {
             for(int _injected_loop_counter = int(_GLF_ZERO(0.0, injectionSwitch.x)); _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
              {
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                continue;
               for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter, (_injected_loop_counter) - (int(_GLF_ZERO(0.0, injectionSwitch.x)) >> _GLF_IDENTITY(int(2), int(2)))) != 1); _injected_loop_counter ++)
                {
                 if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(_GLF_IDENTITY(true, ! (! (true))), (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (! (injectionSwitch.x < injectionSwitch.y))))))))))
                  {
                   if(_GLF_DEAD(false))
                    {
                     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && true))
                      continue;
                     if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
                      {
                       if(_GLF_DEAD(false))
                        continue;
                       continue;
                      }
                     do
                      {
                       for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < _GLF_IDENTITY(1, int(ivec4(1, 0, 1, 1)))); _injected_loop_counter ++)
                        {
                         if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                          {
                          }
                         else
                          {
                           do
                            {
                             if(_GLF_DEAD(false))
                              break;
                             if(_GLF_DEAD(false))
                              {
                               do
                                {
                                 if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, bool(bvec4(false, true, true, false))))))), false, true, false))), (_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, bool(bvec4(false, true, true, false))))))), false, true, false)))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
                                  continue;
                                 if(_GLF_DEAD(false))
                                  break;
                                 if(_GLF_DEAD(false))
                                  return;
                                 return;
                                }
                               while(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, 0.0 + (injectionSwitch.y)))))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))));
                              }
                             for(int _injected_loop_counter = int(_GLF_ZERO(_GLF_IDENTITY(0.0, _GLF_IDENTITY(max(0.0, 0.0), max(max(_GLF_IDENTITY(0.0, max(0.0, _GLF_IDENTITY(0.0, (0.0) * 1.0))), 0.0), max(0.0, 0.0)))), injectionSwitch.x)); _GLF_WRAPPED_LOOP(_injected_loop_counter != (_GLF_IDENTITY(1 ^ 0, 0 | (1 ^ 0)))); _injected_loop_counter ++)
                              {
                               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                                continue;
                               if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
                                break;
                               if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                                {
                                 if(_GLF_DEAD(false))
                                  break;
                                }
                               else
                                {
                                 if(_GLF_WRAPPED_IF_TRUE(true))
                                  {
                                   if(_GLF_WRAPPED_IF_FALSE(false))
                                    {
                                     if(_GLF_DEAD(false))
                                      continue;
                                    }
                                   else
                                    {
                                     if(_GLF_WRAPPED_IF_FALSE(false))
                                      {
                                      }
                                     else
                                      {
                                       do
                                        {
                                         for(int _injected_loop_counter = _GLF_IDENTITY((_GLF_IDENTITY(1, max(1, _GLF_IDENTITY(1, (1) << (-83988 & 0)))) ^ 0), 0 ^ _GLF_IDENTITY((_GLF_IDENTITY((1 ^ _GLF_IDENTITY(0, (false ? _GLF_FUZZED(_injected_loop_counter) : _GLF_IDENTITY(_GLF_IDENTITY(0, (_GLF_IDENTITY(0, 0 ^ (0))) << (_GLF_IDENTITY(0 << _GLF_IDENTITY(int(4), int(4)), (0 << _GLF_IDENTITY(int(4), int(4))) + (0 | 0)))), min(0, _GLF_IDENTITY(0, _GLF_IDENTITY(int(ivec4(0, 1, 0, 1)), min(_GLF_IDENTITY(_GLF_IDENTITY(int(ivec4(0, 1, 0, 1)), 0 | (int(ivec4(0, 1, 0, 1)))), min(_GLF_IDENTITY(int(ivec4(0, 1, 0, 1)), 0 | (int(ivec4(0, 1, 0, 1)))), _GLF_IDENTITY(int(ivec4(0, 1, 0, 1)), 0 | (int(ivec4(0, 1, 0, 1)))))), int(ivec4(0, 1, 0, 1)))))))))), _GLF_IDENTITY((true ? (1 ^ 0) : _GLF_FUZZED(-36555)), ((true ? (1 ^ 0) : _GLF_FUZZED(-36555))) | 0))), (_GLF_IDENTITY(true ? (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(1 ^ 0, (_GLF_IDENTITY(1 ^ 0, (_GLF_IDENTITY(1 ^ _GLF_IDENTITY(0, (0) | (0)), min(1 ^ 0, 1 ^ 0))) << int(_GLF_ZERO(0.0, injectionSwitch.x)))) | _GLF_IDENTITY((1 ^ 0), ((1 ^ 0)) ^ 0))), (_GLF_IDENTITY(true ? (_GLF_IDENTITY(1 ^ 0, _GLF_IDENTITY((1 ^ 0), min(_GLF_IDENTITY((1 ^ 0), _GLF_IDENTITY(((1 ^ 0)), (((1 ^ 0))) + 0) - 0), (1 ^ 0))) ^ (int(_GLF_ZERO(0.0, injectionSwitch.x)) >> _GLF_IDENTITY(int(_GLF_IDENTITY(0, (_GLF_IDENTITY(0, (0) * 1)) | (0))), int(0))))) : _GLF_FUZZED(-36555), 0 ^ (_GLF_IDENTITY(true ? (_GLF_IDENTITY(1 ^ 0, _GLF_IDENTITY((1 ^ 0), min(_GLF_IDENTITY((1 ^ 0), ((1 ^ 0)) - 0), (1 ^ 0))) ^ (int(_GLF_ZERO(0.0, injectionSwitch.x)) >> _GLF_IDENTITY(int(0), int(0))))) : _GLF_FUZZED(-36555), (true ? (_GLF_IDENTITY(1 ^ 0, _GLF_IDENTITY((1 ^ 0), min(_GLF_IDENTITY((1 ^ 0), _GLF_IDENTITY(((1 ^ 0)), (((1 ^ 0))) * (1 & 1)) - 0), (1 ^ 0))) ^ (int(_GLF_ZERO(0.0, injectionSwitch.x)) >> _GLF_IDENTITY(int(_GLF_IDENTITY(0, (0) | 0)), int(0))))) : _GLF_FUZZED(-36555)) * 1))))), (false ? _GLF_FUZZED(_GLF_IDENTITY(_injected_loop_counter, (false ? _GLF_FUZZED(_injected_loop_counter) : _injected_loop_counter))) : _GLF_IDENTITY((_GLF_IDENTITY(1 ^ 0, (_GLF_IDENTITY(1 ^ 0, (_GLF_IDENTITY(1 ^ _GLF_IDENTITY(0, (0) | (0)), min(1 ^ 0, 1 ^ 0))) << int(_GLF_ZERO(0.0, injectionSwitch.x)))) | (1 ^ 0))), (_GLF_IDENTITY(true ? (_GLF_IDENTITY(1 ^ 0, _GLF_IDENTITY((1 ^ 0), min(_GLF_IDENTITY((1 ^ 0), ((1 ^ 0)) - 0), (1 ^ 0))) ^ (int(_GLF_ZERO(0.0, injectionSwitch.x)) >> _GLF_IDENTITY(int(_GLF_IDENTITY(0, (_GLF_IDENTITY(0, (0) * 1)) | (0))), int(0))))) : _GLF_FUZZED(-36555), 0 ^ (_GLF_IDENTITY(true ? (_GLF_IDENTITY(1 ^ 0, _GLF_IDENTITY((1 ^ _GLF_IDENTITY(0, (0) / 1)), min(_GLF_IDENTITY((1 ^ 0), ((1 ^ 0)) - 0), (1 ^ 0))) ^ (int(_GLF_ZERO(0.0, injectionSwitch.x)) >> _GLF_IDENTITY(int(0), int(0))))) : _GLF_FUZZED(-36555), (true ? (_GLF_IDENTITY(1 ^ 0, _GLF_IDENTITY(_GLF_IDENTITY((1 ^ 0), min(_GLF_IDENTITY((1 ^ 0), _GLF_IDENTITY(_GLF_IDENTITY(((1 ^ 0)), (((1 ^ 0))) * (1 & 1)), (_GLF_IDENTITY(((1 ^ 0)), (((1 ^ 0))) * (1 & 1))) >> 0) - 0), (1 ^ _GLF_IDENTITY(0, (0) | 0)))), (_GLF_IDENTITY(_GLF_IDENTITY((1 ^ 0), min(_GLF_IDENTITY((1 ^ 0), _GLF_IDENTITY(_GLF_IDENTITY(((1 ^ 0)), (((1 ^ 0))) * (1 & 1)), (_GLF_IDENTITY(((1 ^ 0)), (((1 ^ 0))) * (1 & 1))) >> 0) - 0), (1 ^ _GLF_IDENTITY(0, (0) | 0)))), int(ivec2(_GLF_IDENTITY((1 ^ 0), min(_GLF_IDENTITY((1 ^ 0), _GLF_IDENTITY(_GLF_IDENTITY(((1 ^ 0)), (((1 ^ 0))) * (1 & 1)), (_GLF_IDENTITY(((1 ^ 0)), (((1 ^ 0))) * (1 & 1))) >> 0) - 0), (1 ^ _GLF_IDENTITY(0, (0) | 0)))), 0)))) << 0) ^ (int(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + 0.0))) >> _GLF_IDENTITY(int(_GLF_IDENTITY(0, (0) | 0)), int(0))))) : _GLF_FUZZED(-36555)) * 1))))))), min(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(1 ^ 0, (_GLF_IDENTITY(1 ^ 0, (_GLF_IDENTITY(1 ^ _GLF_IDENTITY(0, (0) | (0)), min(1 ^ 0, 1 ^ 0))) << int(_GLF_ZERO(0.0, injectionSwitch.x)))) | _GLF_IDENTITY((1 ^ 0), ((1 ^ 0)) ^ 0))), (_GLF_IDENTITY(true ? (_GLF_IDENTITY(1 ^ 0, _GLF_IDENTITY((1 ^ 0), min(_GLF_IDENTITY((1 ^ 0), _GLF_IDENTITY(((1 ^ 0)), (((1 ^ 0))) + 0) - 0), (1 ^ 0))) ^ (int(_GLF_ZERO(0.0, injectionSwitch.x)) >> _GLF_IDENTITY(int(_GLF_IDENTITY(0, (_GLF_IDENTITY(0, (0) * 1)) | (0))), int(0))))) : _GLF_FUZZED(-36555), 0 ^ (_GLF_IDENTITY(true ? (_GLF_IDENTITY(1 ^ 0, _GLF_IDENTITY((1 ^ 0), min(_GLF_IDENTITY((1 ^ 0), ((1 ^ 0)) - 0), (1 ^ 0))) ^ (int(_GLF_ZERO(0.0, injectionSwitch.x)) >> _GLF_IDENTITY(int(0), int(0))))) : _GLF_FUZZED(-36555), (true ? (_GLF_IDENTITY(1 ^ 0, _GLF_IDENTITY((1 ^ 0), min(_GLF_IDENTITY((1 ^ 0), _GLF_IDENTITY(((1 ^ 0)), (((1 ^ 0))) * (1 & 1)) - 0), (1 ^ 0))) ^ (int(_GLF_ZERO(0.0, injectionSwitch.x)) >> _GLF_IDENTITY(int(_GLF_IDENTITY(0, (0) | 0)), int(0))))) : _GLF_FUZZED(-36555)) * 1))))), (false ? _GLF_FUZZED(_GLF_IDENTITY(_injected_loop_counter, (false ? _GLF_FUZZED(_injected_loop_counter) : _injected_loop_counter))) : _GLF_IDENTITY((_GLF_IDENTITY(1 ^ 0, (_GLF_IDENTITY(1 ^ 0, (_GLF_IDENTITY(1 ^ _GLF_IDENTITY(0, (0) | (0)), min(1 ^ 0, 1 ^ 0))) << int(_GLF_ZERO(0.0, injectionSwitch.x)))) | (1 ^ 0))), (_GLF_IDENTITY(true ? (_GLF_IDENTITY(1 ^ 0, _GLF_IDENTITY((1 ^ 0), min(_GLF_IDENTITY((1 ^ 0), ((1 ^ 0)) - 0), (1 ^ 0))) ^ (int(_GLF_ZERO(0.0, injectionSwitch.x)) >> _GLF_IDENTITY(int(_GLF_IDENTITY(0, (_GLF_IDENTITY(0, (0) * 1)) | (0))), int(0))))) : _GLF_FUZZED(-36555), 0 ^ (_GLF_IDENTITY(true ? (_GLF_IDENTITY(1 ^ 0, _GLF_IDENTITY((1 ^ _GLF_IDENTITY(0, (0) / 1)), min(_GLF_IDENTITY((1 ^ 0), ((1 ^ 0)) - 0), (1 ^ 0))) ^ (int(_GLF_ZERO(0.0, injectionSwitch.x)) >> _GLF_IDENTITY(int(0), int(0))))) : _GLF_FUZZED(-36555), (true ? (_GLF_IDENTITY(1 ^ 0, _GLF_IDENTITY(_GLF_IDENTITY((1 ^ 0), min(_GLF_IDENTITY((1 ^ 0), _GLF_IDENTITY(_GLF_IDENTITY(((1 ^ 0)), (((1 ^ 0))) * (1 & 1)), (_GLF_IDENTITY(((1 ^ 0)), (((1 ^ 0))) * (1 & 1))) >> 0) - 0), (1 ^ _GLF_IDENTITY(0, (0) | 0)))), (_GLF_IDENTITY(_GLF_IDENTITY((1 ^ 0), min(_GLF_IDENTITY((1 ^ 0), _GLF_IDENTITY(_GLF_IDENTITY(((1 ^ 0)), (((1 ^ 0))) * (1 & 1)), (_GLF_IDENTITY(((1 ^ 0)), (((1 ^ 0))) * (1 & 1))) >> 0) - 0), (1 ^ _GLF_IDENTITY(0, (0) | 0)))), int(ivec2(_GLF_IDENTITY((1 ^ 0), min(_GLF_IDENTITY((1 ^ 0), _GLF_IDENTITY(_GLF_IDENTITY(((1 ^ 0)), (((1 ^ 0))) * (1 & 1)), (_GLF_IDENTITY(((1 ^ 0)), (((1 ^ 0))) * (1 & 1))) >> 0) - 0), (1 ^ _GLF_IDENTITY(0, (0) | 0)))), 0)))) << 0) ^ (int(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + 0.0))) >> _GLF_IDENTITY(int(_GLF_IDENTITY(0, (0) | 0)), int(0))))) : _GLF_FUZZED(-36555)) * 1))))))), _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(1 ^ 0, (_GLF_IDENTITY(1 ^ 0, (_GLF_IDENTITY(1 ^ _GLF_IDENTITY(0, (0) | (0)), min(1 ^ 0, 1 ^ 0))) << int(_GLF_ZERO(0.0, injectionSwitch.x)))) | _GLF_IDENTITY((1 ^ 0), ((1 ^ 0)) ^ 0))), (_GLF_IDENTITY(true ? (_GLF_IDENTITY(1 ^ 0, _GLF_IDENTITY((1 ^ 0), min(_GLF_IDENTITY((1 ^ 0), _GLF_IDENTITY(((1 ^ 0)), (((1 ^ 0))) + 0) - 0), (1 ^ 0))) ^ (int(_GLF_ZERO(0.0, injectionSwitch.x)) >> _GLF_IDENTITY(int(_GLF_IDENTITY(0, (_GLF_IDENTITY(0, (0) * 1)) | (0))), int(0))))) : _GLF_FUZZED(-36555), 0 ^ (_GLF_IDENTITY(true ? (_GLF_IDENTITY(1 ^ 0, _GLF_IDENTITY((1 ^ 0), min(_GLF_IDENTITY((1 ^ 0), ((1 ^ 0)) - 0), (1 ^ 0))) ^ (int(_GLF_ZERO(0.0, injectionSwitch.x)) >> _GLF_IDENTITY(int(0), int(0))))) : _GLF_FUZZED(-36555), (true ? (_GLF_IDENTITY(1 ^ 0, _GLF_IDENTITY((1 ^ 0), min(_GLF_IDENTITY((1 ^ 0), _GLF_IDENTITY(((1 ^ 0)), (((1 ^ 0))) * (1 & 1)) - 0), (1 ^ 0))) ^ (int(_GLF_ZERO(0.0, injectionSwitch.x)) >> _GLF_IDENTITY(int(_GLF_IDENTITY(0, (0) | 0)), int(0))))) : _GLF_FUZZED(-36555)) * 1))))), (false ? _GLF_FUZZED(_GLF_IDENTITY(_injected_loop_counter, (false ? _GLF_FUZZED(_injected_loop_counter) : _injected_loop_counter))) : _GLF_IDENTITY((_GLF_IDENTITY(1 ^ 0, (_GLF_IDENTITY(1 ^ 0, (_GLF_IDENTITY(1 ^ _GLF_IDENTITY(0, (0) | (0)), min(1 ^ 0, 1 ^ 0))) << int(_GLF_ZERO(0.0, injectionSwitch.x)))) | (1 ^ 0))), (_GLF_IDENTITY(true ? (_GLF_IDENTITY(1 ^ 0, _GLF_IDENTITY((1 ^ 0), min(_GLF_IDENTITY((1 ^ 0), ((1 ^ 0)) - 0), (1 ^ 0))) ^ (int(_GLF_ZERO(0.0, injectionSwitch.x)) >> _GLF_IDENTITY(int(_GLF_IDENTITY(0, (_GLF_IDENTITY(0, (0) * 1)) | (0))), int(0))))) : _GLF_FUZZED(-36555), 0 ^ (_GLF_IDENTITY(true ? (_GLF_IDENTITY(1 ^ 0, _GLF_IDENTITY((1 ^ _GLF_IDENTITY(0, (0) / 1)), min(_GLF_IDENTITY((1 ^ 0), ((1 ^ 0)) - 0), (1 ^ 0))) ^ (int(_GLF_ZERO(0.0, injectionSwitch.x)) >> _GLF_IDENTITY(int(0), int(0))))) : _GLF_FUZZED(-36555), (true ? (_GLF_IDENTITY(1 ^ 0, _GLF_IDENTITY(_GLF_IDENTITY((1 ^ 0), min(_GLF_IDENTITY((1 ^ 0), _GLF_IDENTITY(_GLF_IDENTITY(((1 ^ 0)), (((1 ^ 0))) * (1 & 1)), (_GLF_IDENTITY(((1 ^ 0)), (((1 ^ 0))) * (1 & 1))) >> 0) - 0), (1 ^ _GLF_IDENTITY(0, (0) | 0)))), (_GLF_IDENTITY(_GLF_IDENTITY((1 ^ 0), min(_GLF_IDENTITY((1 ^ 0), _GLF_IDENTITY(_GLF_IDENTITY(((1 ^ 0)), (((1 ^ 0))) * (1 & 1)), (_GLF_IDENTITY(((1 ^ 0)), (((1 ^ 0))) * (1 & 1))) >> 0) - 0), (1 ^ _GLF_IDENTITY(0, (0) | 0)))), int(ivec2(_GLF_IDENTITY((1 ^ 0), min(_GLF_IDENTITY((1 ^ 0), _GLF_IDENTITY(_GLF_IDENTITY(((1 ^ 0)), (((1 ^ 0))) * (1 & 1)), (_GLF_IDENTITY(((1 ^ 0)), (((1 ^ 0))) * (1 & 1))) >> 0) - 0), (1 ^ _GLF_IDENTITY(0, (0) | 0)))), 0)))) << 0) ^ (int(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + 0.0))) >> _GLF_IDENTITY(int(_GLF_IDENTITY(0, (0) | 0)), int(0))))) : _GLF_FUZZED(-36555)) * 1)))))))))) : _GLF_FUZZED(-70673), (0 | 0) ^ (_GLF_IDENTITY(true ? (_GLF_IDENTITY((_GLF_IDENTITY(1 ^ 0, (_GLF_IDENTITY(1 ^ 0, (_GLF_IDENTITY(1 ^ 0, min(1 ^ 0, 1 ^ 0))) << int(_GLF_ZERO(0.0, injectionSwitch.x)))) | (1 ^ 0))), (_GLF_IDENTITY(true ? (_GLF_IDENTITY(1 ^ 0, _GLF_IDENTITY((_GLF_IDENTITY(1, (false ? _GLF_FUZZED(_injected_loop_counter) : _GLF_IDENTITY(1, 0 ^ _GLF_IDENTITY((1), ((1)) / 1)))) ^ 0), min(_GLF_IDENTITY((1 ^ 0), ((1 ^ 0)) - 0), (1 ^ 0))) ^ (_GLF_IDENTITY(int(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * 1.0))) >> _GLF_IDENTITY(int(0), int(0)), max(int(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * 1.0))) >> _GLF_IDENTITY(int(0), int(0)), _GLF_IDENTITY(int(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * 1.0))) >> _GLF_IDENTITY(int(0), int(0)), (_GLF_IDENTITY(int(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * 1.0))) >> _GLF_IDENTITY(int(0), int(0)), (int(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * 1.0))) >> _GLF_IDENTITY(int(0), int(0))) + 0)) ^ 0)))))) : _GLF_FUZZED(-36555), 0 ^ (_GLF_IDENTITY(true ? (_GLF_IDENTITY(1 ^ 0, _GLF_IDENTITY((_GLF_IDENTITY(1, max(1, 1)) ^ 0), min(_GLF_IDENTITY((_GLF_IDENTITY(1, (_GLF_IDENTITY(1, ~ (~ (1)))) | (1)) ^ 0), ((1 ^ 0)) - 0), (1 ^ 0))) ^ (int(_GLF_ZERO(0.0, injectionSwitch.x)) >> _GLF_IDENTITY(int(0), int(0))))) : _GLF_FUZZED(-36555), (true ? (_GLF_IDENTITY(1 ^ 0, _GLF_IDENTITY((1 ^ 0), min(_GLF_IDENTITY((1 ^ 0), ((1 ^ 0)) - 0), (_GLF_IDENTITY(1, (1) | 0) ^ 0))) ^ _GLF_IDENTITY((int(_GLF_ZERO(0.0, injectionSwitch.x)) >> _GLF_IDENTITY(int(0), int(0))), min(_GLF_IDENTITY((int(_GLF_ZERO(0.0, injectionSwitch.x)) >> _GLF_IDENTITY(int(0), _GLF_IDENTITY(int(0), (true ? int(0) : _GLF_FUZZED(_injected_loop_counter))))), ((int(_GLF_ZERO(0.0, injectionSwitch.x)) >> _GLF_IDENTITY(int(0), int(0)))) - 0), (int(_GLF_ZERO(0.0, injectionSwitch.x)) >> _GLF_IDENTITY(int(0), int(0))))))) : _GLF_FUZZED(_GLF_IDENTITY(-36555, clamp(-36555, -36555, -36555)))) * 1)))))) : _GLF_FUZZED(_GLF_IDENTITY(-70673, min(-70673, -70673))), (true ? (_GLF_IDENTITY((_GLF_IDENTITY(1 ^ 0, (_GLF_IDENTITY(1 ^ 0, (_GLF_IDENTITY(1 ^ 0, min(1 ^ 0, 1 ^ 0))) << int(_GLF_ZERO(0.0, injectionSwitch.x)))) | (1 ^ _GLF_IDENTITY(0, int(ivec3(0, 0, 0)))))), (_GLF_IDENTITY(true ? (_GLF_IDENTITY(1 ^ 0, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(1, (1) >> 0), (_GLF_IDENTITY(1, min(1, 1))) - (0 >> _GLF_IDENTITY(int(7), int(7)))) ^ 0), min(_GLF_IDENTITY((1 ^ 0), ((1 ^ 0)) - 0), (1 ^ 0))) ^ (int(_GLF_ZERO(0.0, injectionSwitch.x)) >> _GLF_IDENTITY(int(0), int(0))))) : _GLF_FUZZED(-36555), 0 ^ (_GLF_IDENTITY(_GLF_IDENTITY(true ? (_GLF_IDENTITY(1 ^ 0, _GLF_IDENTITY(_GLF_IDENTITY((1 ^ 0), min(_GLF_IDENTITY((1 ^ 0), ((1 ^ 0)) - 0), (1 ^ 0))), (_GLF_IDENTITY(_GLF_IDENTITY((1 ^ 0), ((1 ^ 0)) | 0), min(_GLF_IDENTITY((1 ^ 0), ((1 ^ 0)) - 0), (_GLF_IDENTITY(1, int(_GLF_IDENTITY(ivec3(1, ((0 | 1) & 1), 0), ivec3(0, 0, 0) ^ (ivec3(1, ((0 | 1) & 1), 0))))) ^ 0)))) * 1) ^ (int(_GLF_ZERO(0.0, injectionSwitch.x)) >> _GLF_IDENTITY(int(0), int(0))))) : _GLF_FUZZED(-36555), (true ? (_GLF_IDENTITY(1 ^ 0, _GLF_IDENTITY((1 ^ 0), min(_GLF_IDENTITY((1 ^ 0), ((1 ^ 0)) - 0), (1 ^ _GLF_IDENTITY(0, ~ (~ (0)))))) ^ (int(_GLF_ZERO(0.0, injectionSwitch.x)) >> _GLF_IDENTITY(int(0), int(0))))) : _GLF_FUZZED(-36555)) * 1), (_GLF_IDENTITY(true ? (_GLF_IDENTITY(1 ^ 0, _GLF_IDENTITY((1 ^ 0), min(_GLF_IDENTITY((1 ^ 0), ((_GLF_IDENTITY(1 ^ 0, max(1 ^ 0, 1 ^ 0)))) - 0), (_GLF_IDENTITY(1, clamp(1, 1, 1)) ^ 0))) ^ (_GLF_IDENTITY(int(_GLF_ZERO(0.0, injectionSwitch.x)) >> _GLF_IDENTITY(int(0), int(0)), (_GLF_IDENTITY(false ? _GLF_FUZZED(_injected_loop_counter) : int(_GLF_ZERO(0.0, injectionSwitch.x)) >> _GLF_IDENTITY(int(0), _GLF_IDENTITY(int(0), ~ (~ (int(0))))), (false ? _GLF_FUZZED(_injected_loop_counter) : int(_GLF_ZERO(0.0, injectionSwitch.x)) >> _GLF_IDENTITY(int(0), _GLF_IDENTITY(int(0), ~ (~ (int(0)))))) << 0)))))) : _GLF_FUZZED(-36555), (true ? (_GLF_IDENTITY(1 ^ 0, _GLF_IDENTITY((1 ^ 0), min(_GLF_IDENTITY((1 ^ 0), ((1 ^ 0)) - 0), (_GLF_IDENTITY(1 ^ _GLF_IDENTITY(0, (0) | (0)), int(int(1 ^ 0)))))) ^ (int(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * 1.0))) >> _GLF_IDENTITY(int(0), int(0))))) : _GLF_FUZZED(-36555)) * _GLF_IDENTITY(1, 0 + (1)))) - 0)))))) : _GLF_FUZZED(-70673)) ^ 0)))))); _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
                                          {
                                           do
                                            {
                                             return;
                                            }
                                           while(_GLF_WRAPPED_LOOP(false));
                                          }
                                        }
                                       while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
                                      }
                                     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                                      return;
                                    }
                                  }
                                 else
                                  {
                                   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                                    break;
                                  }
                                }
                               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                                return;
                              }
                             if(_GLF_DEAD(false))
                              {
                               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                                break;
                               break;
                              }
                            }
                           while(_GLF_WRAPPED_LOOP(_GLF_FALSE(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(false || (false), false || (false || (false))), (false || (false)) || false))) && true), _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(mat3(_GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(3.2), _GLF_FUZZED(-9136.1678)), bvec2(false, false))).y) - 0.0), _GLF_IDENTITY(sqrt(_GLF_IDENTITY(dot(vec3(_GLF_IDENTITY(0.0, float(mat2x4(0.0, 0.0, 0.0, 0.0, cos(0.0), tan(0.0), 0.0, 0.0))), 0.0, 1.0), vec3(1.0, 1.0, 0.0)), dot(vec3(0.0, 0.0, 1.0), vec3(1.0, 1.0, 0.0)))), (sqrt(_GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(1.0, 1.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)))), dot(vec3(0.0, 0.0, 1.0), vec3(1.0, 1.0, 0.0))))) - 0.0), 0.0, 1.0, sqrt(_GLF_IDENTITY(0.0, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(-4800.6910) : 0.0))), length(0.0), _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 1.0)))), ((injectionSwitch.x > injectionSwitch.y)) && true))));
                          }
                        }
                      }
                     while(_GLF_WRAPPED_LOOP(false));
                     if(_GLF_DEAD(false))
                      continue;
                     if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_DEAD(false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
                      break;
                    }
                   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))
                    continue;
                   do
                    {
                     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(_GLF_IDENTITY(mat3(injectionSwitch.x, 1.0, 0.0, cos(determinant(mat2(_GLF_IDENTITY(0.0, 0.0 + (_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(1.6))))), 0.0, 0.0, 0.0))), determinant(mat2(0.0, 1.0, 0.0, 0.0)), 1.0, 1.0, 1.0, _GLF_IDENTITY(0.0, _GLF_IDENTITY((0.0) * 1.0, min(_GLF_IDENTITY((0.0) * 1.0, min((0.0) * 1.0, (0.0) * 1.0)), (0.0) * 1.0)))), mat3(mat3x4(mat3(injectionSwitch.x, 1.0, 0.0, cos(determinant(mat2(0.0, 0.0, 0.0, 0.0))), determinant(mat2(0.0, 1.0, 0.0, 0.0)), 1.0, 1.0, 1.0, 0.0))))), (true ? float(_GLF_IDENTITY(mat3(injectionSwitch.x, 1.0, 0.0, cos(determinant(mat2(0.0, 0.0, 0.0, 0.0))), determinant(mat2(0.0, 1.0, 0.0, 0.0)), 1.0, 1.0, _GLF_IDENTITY(1.0, float(mat4x2(1.0, 1.0, 0.0, 1.0, 0.0, sin(0.0), 0.0, 1.0))), 0.0), mat3(mat3x4(mat3(injectionSwitch.x, 1.0, 0.0, cos(determinant(mat2(0.0, 0.0, 0.0, 0.0))), determinant(mat2(0.0, 1.0, 0.0, 0.0)), 1.0, 1.0, 1.0, 0.0))))) : _GLF_FUZZED(2.1)))) > injectionSwitch.y))))
                      return;
                    }
                   while(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(false), bool(bvec3(_GLF_WRAPPED_LOOP(false), _GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, bool(bool(true)))))), false))));
                   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                    break;
                  }
                 else
                  {
                  }
                }
              }
            }
          }
        }
      }
    }
  }
 if(_GLF_WRAPPED_IF_FALSE(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 else
  {
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     if(_GLF_DEAD(false))
      return;
    }
   else
    {
    }
  }
 for(int _injected_loop_counter = (1 | int(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch))), min(clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch))), _GLF_IDENTITY(clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch))), vec2(mat3x4(clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch))), 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0))))), vec2(1.0, 1.0) * (_GLF_IDENTITY(clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch))), min(clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch))), _GLF_IDENTITY(clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch))), vec2(mat3x4(clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, vec2(mat4(injectionSwitch, 0.0, 0.0, 1.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 1.0, 0.0, 0.0, round(length(normalize(sqrt(vec3(1.0, 1.0, 1.0))))), determinant(mat3(0.0, sqrt(0.0), 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0)), 1.0, 1.0, 1.0))), injectionSwitch))), 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0)))))))).y))); _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter > int(_GLF_ZERO(0.0, injectionSwitch.x)), bool(bvec4(_injected_loop_counter > int(_GLF_ZERO(0.0, injectionSwitch.x)), false, _GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(false, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bvec3(bvec4(bvec3(false, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), true)))), (bool(_GLF_IDENTITY(bvec3(false, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bvec3(bvec4(bvec3(false, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), true))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), true)))); _injected_loop_counter --)
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec4(bvec2(false, true), true, false)))))))
    {
     if(_GLF_WRAPPED_IF_TRUE(true))
      {
       return;
       if(_GLF_DEAD(false))
        return;
      }
     else
      {
      }
    }
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_WRAPPED_IF_TRUE(true))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0), transpose(transpose(_GLF_IDENTITY(mat2(1.0), (_GLF_IDENTITY(mat2(1.0), (true ? mat2(1.0) : _GLF_FUZZED(mat2(-85.71, -260.979, 965.174, 5.1))))) - mat2(0.0, 0.0, 0.0, 0.0))))) * (injectionSwitch)).y, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(194.761)), bool(false))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, mix(_GLF_IDENTITY(float(injectionSwitch.y), min(float(injectionSwitch.y), _GLF_IDENTITY(float(injectionSwitch.y), _GLF_IDENTITY(float(mat4x3(float(injectionSwitch.y), 1.0, 0.0, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), 0.0, 1.0, round(length(normalize(1.0))), 0.0, 1.0, 1.0, 1.0, 0.0)), max(float(mat4x3(float(injectionSwitch.y), 1.0, 0.0, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), 0.0, 1.0, round(length(normalize(1.0))), 0.0, 1.0, 1.0, 1.0, 0.0)), float(mat4x3(float(injectionSwitch.y), 1.0, 0.0, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), 0.0, 1.0, round(length(normalize(1.0))), 0.0, 1.0, 1.0, 1.0, 0.0))))))), float(_GLF_FUZZED(_GLF_IDENTITY(194.761, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(normalize(atan(-6.7, -755.139))) : 194.761)))), bool(false))), (false ? _GLF_FUZZED(-180.216) : _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(194.761)), bool(false))))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(194.761)), bool(false))), (false ? _GLF_FUZZED(-180.216) : _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_IDENTITY(_GLF_FUZZED(194.761), min(_GLF_FUZZED(194.761), _GLF_IDENTITY(_GLF_FUZZED(194.761), (true ? _GLF_FUZZED(_GLF_IDENTITY(194.761, min(194.761, _GLF_IDENTITY(194.761, mix(float(_GLF_FUZZED(-1.5)), float(194.761), bool(true)))))) : _GLF_FUZZED(asinh(-7032.5784))))))), bool(false))))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)), _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))))).y, mix(float(injectionSwitch.y), float(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(194.761), clamp(_GLF_FUZZED(194.761), _GLF_FUZZED(194.761), _GLF_FUZZED(194.761))), max(_GLF_FUZZED(194.761), _GLF_FUZZED(194.761)))), bool(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, (false) && true), false), bvec2(bvec4(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, (false) && true), false), bvec2(bvec2(bvec2(_GLF_IDENTITY(false, (false) && true), false)))), true, false)))), ! (! (bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, (false) && true), false), bvec2(bvec4(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, (false) && true), false), bvec2(bvec2(bvec2(_GLF_IDENTITY(false, (false) && true), false)))), true, false))))))))))), (false ? _GLF_FUZZED(-180.216) : _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(194.761)), bool(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec4(bvec2(false, false), true, true)))), bool(bvec4(bool(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec4(bvec2(false, false), true, true)))), true, true, true))))))))), (false ? _GLF_IDENTITY(_GLF_FUZZED(-538.417), (_GLF_FUZZED(-538.417)) / round(length(normalize(vec3(1.0, 1.0, 1.0))))) : _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], float(vec2(injectionSwitch[0], 1.0))), injectionSwitch[1])).y, _GLF_IDENTITY(mix(float(injectionSwitch.y), _GLF_IDENTITY(float(_GLF_FUZZED(194.761)), _GLF_IDENTITY(float(vec4(float(_GLF_FUZZED(194.761)), 0.0, 0.0, determinant(mat2(1.0, 1.0, 0.0, 1.0)))), (true ? float(vec4(float(_GLF_FUZZED(194.761)), 0.0, 0.0, determinant(mat2(1.0, 1.0, 0.0, 1.0)))) : _GLF_FUZZED(6858.0101)))), bool(false)), (mix(float(injectionSwitch.y), float(_GLF_FUZZED(194.761)), bool(false))) - 0.0)), (false ? _GLF_FUZZED(-180.216) : _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(0.0, 0.0) + (injectionSwitch), (vec2(0.0, 0.0) + (injectionSwitch)) * mat2(1.0))).y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(194.761)), bool(false))))), min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(194.761)), bool(false))), (false ? _GLF_FUZZED(-180.216) : _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(194.761)), bool(false))))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y), float(_GLF_FUZZED(194.761)), bool(false))), (false ? _GLF_FUZZED(-180.216) : _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).y), float(_GLF_FUZZED(194.761)), bool(_GLF_IDENTITY(false, true && (false))))), clamp(_GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(194.761)), bool(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec4(false, false, false, false)))) || false), true, true, false)), (bool(bvec4(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec4(false, false, false, false)))) || false), true, true, false))) || false))))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(mat2x4(injectionSwitch.y, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 1.0, 0.0, 0.0, 0.0, 0.0)), float(vec2(float(mat2x4(injectionSwitch.y, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 1.0, 0.0, 0.0, 0.0, 0.0)), 0.0)))), mix(float(injectionSwitch.y), float(_GLF_FUZZED(194.761)), bool(false))), _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(_GLF_IDENTITY(194.761, (_GLF_IDENTITY(194.761, float(float(194.761)))) * 1.0))), bool(false))))))))))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)), _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))))).y, mix(float(injectionSwitch.y), float(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(194.761), clamp(_GLF_FUZZED(194.761), _GLF_FUZZED(194.761), _GLF_FUZZED(194.761))), max(_GLF_FUZZED(194.761), _GLF_FUZZED(194.761)))), bool(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, (false) && true), false), bvec2(bvec4(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, (false) && true), false), bvec2(bvec2(bvec2(_GLF_IDENTITY(false, (false) && true), false)))), true, false)))), ! (! (bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, (false) && true), false), bvec2(bvec4(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, (false) && true), false), bvec2(bvec2(bvec2(_GLF_IDENTITY(false, (false) && true), false)))), true, false))))))))))), (false ? _GLF_FUZZED(-180.216) : _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(194.761)), bool(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec4(bvec2(false, false), true, true)))), bool(bvec4(bool(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec4(bvec2(false, false), true, true)))), true, true, true))))))))), (false ? _GLF_IDENTITY(_GLF_FUZZED(-538.417), (_GLF_FUZZED(-538.417)) / round(length(normalize(vec3(1.0, 1.0, 1.0))))) : _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], float(vec2(injectionSwitch[0], 1.0))), injectionSwitch[1])).y, _GLF_IDENTITY(mix(float(injectionSwitch.y), _GLF_IDENTITY(float(_GLF_FUZZED(194.761)), _GLF_IDENTITY(float(vec4(float(_GLF_FUZZED(194.761)), 0.0, 0.0, determinant(mat2(1.0, 1.0, 0.0, 1.0)))), (true ? float(vec4(float(_GLF_FUZZED(194.761)), 0.0, 0.0, determinant(mat2(1.0, 1.0, 0.0, 1.0)))) : _GLF_FUZZED(6858.0101)))), bool(false)), (mix(float(injectionSwitch.y), float(_GLF_FUZZED(194.761)), bool(false))) - 0.0)), (false ? _GLF_FUZZED(-180.216) : _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(0.0, 0.0) + (injectionSwitch), (vec2(0.0, 0.0) + (injectionSwitch)) * mat2(1.0))).y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(194.761)), bool(false))))), min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(194.761)), bool(false))), (false ? _GLF_FUZZED(-180.216) : _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(194.761)), bool(false))))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y), float(_GLF_FUZZED(194.761)), bool(false))), (false ? _GLF_FUZZED(-180.216) : _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).y), float(_GLF_FUZZED(194.761)), bool(_GLF_IDENTITY(false, true && (false))))), clamp(_GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(194.761)), bool(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec4(false, false, false, false)))) || false), true, true, false)), (bool(bvec4(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec4(false, false, false, false)))) || false), true, true, false))) || false))))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(mat2x4(injectionSwitch.y, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 1.0, 0.0, 0.0, 0.0, 0.0)), float(vec2(float(mat2x4(injectionSwitch.y, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 1.0, 0.0, 0.0, 0.0, 0.0)), 0.0)))), mix(float(injectionSwitch.y), float(_GLF_FUZZED(194.761)), bool(false))), _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(_GLF_IDENTITY(194.761, (_GLF_IDENTITY(194.761, float(float(194.761)))) * 1.0))), bool(false))))))))))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)), _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))))).y, mix(float(injectionSwitch.y), float(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(194.761), clamp(_GLF_FUZZED(194.761), _GLF_FUZZED(194.761), _GLF_FUZZED(194.761))), max(_GLF_FUZZED(194.761), _GLF_FUZZED(194.761)))), bool(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, (false) && true), false), bvec2(bvec4(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, (false) && true), false), bvec2(bvec2(bvec2(_GLF_IDENTITY(false, (false) && true), false)))), true, false)))), ! (! (bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, (false) && true), false), bvec2(bvec4(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, (false) && true), false), bvec2(bvec2(bvec2(_GLF_IDENTITY(false, (false) && true), false)))), true, false))))))))))), (false ? _GLF_FUZZED(-180.216) : _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(194.761)), bool(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec4(bvec2(false, false), true, true)))), bool(bvec4(bool(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec4(bvec2(false, false), true, true)))), true, true, true))))))))), (false ? _GLF_IDENTITY(_GLF_FUZZED(-538.417), (_GLF_FUZZED(-538.417)) / round(length(normalize(vec3(1.0, 1.0, 1.0))))) : _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], float(vec2(injectionSwitch[0], 1.0))), injectionSwitch[1])).y, _GLF_IDENTITY(mix(float(injectionSwitch.y), _GLF_IDENTITY(float(_GLF_FUZZED(194.761)), _GLF_IDENTITY(float(vec4(float(_GLF_FUZZED(194.761)), 0.0, 0.0, determinant(mat2(1.0, 1.0, 0.0, 1.0)))), (true ? float(vec4(float(_GLF_FUZZED(194.761)), 0.0, 0.0, determinant(mat2(1.0, 1.0, 0.0, 1.0)))) : _GLF_FUZZED(6858.0101)))), bool(false)), (mix(float(injectionSwitch.y), float(_GLF_FUZZED(194.761)), bool(false))) - 0.0)), (false ? _GLF_FUZZED(-180.216) : _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(0.0, 0.0) + (injectionSwitch), (vec2(0.0, 0.0) + (injectionSwitch)) * mat2(1.0))).y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(194.761)), bool(false))))), min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(194.761)), bool(false))), (false ? _GLF_FUZZED(-180.216) : _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(194.761)), bool(false))))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y), float(_GLF_FUZZED(194.761)), bool(false))), (false ? _GLF_FUZZED(-180.216) : _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).y), float(_GLF_FUZZED(194.761)), bool(_GLF_IDENTITY(false, true && (false))))), clamp(_GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(194.761)), bool(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec4(false, false, false, false)))) || false), true, true, false)), (bool(bvec4(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec4(false, false, false, false)))) || false), true, true, false))) || false))))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(mat2x4(injectionSwitch.y, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 1.0, 0.0, 0.0, 0.0, 0.0)), float(vec2(float(mat2x4(injectionSwitch.y, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 1.0, 0.0, 0.0, 0.0, 0.0)), 0.0)))), mix(float(injectionSwitch.y), float(_GLF_FUZZED(194.761)), bool(false))), _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(_GLF_IDENTITY(194.761, (_GLF_IDENTITY(194.761, float(float(194.761)))) * 1.0))), bool(false))))))))))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)), _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))))).y, mix(float(injectionSwitch.y), float(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(194.761), clamp(_GLF_FUZZED(194.761), _GLF_FUZZED(194.761), _GLF_FUZZED(194.761))), max(_GLF_FUZZED(194.761), _GLF_FUZZED(194.761)))), bool(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, (false) && true), false), bvec2(bvec4(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, (false) && true), false), bvec2(bvec2(bvec2(_GLF_IDENTITY(false, (false) && true), false)))), true, false)))), ! (! (bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, (false) && true), false), bvec2(bvec4(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, (false) && true), false), bvec2(bvec2(bvec2(_GLF_IDENTITY(false, (false) && true), false)))), true, false))))))))))), (false ? _GLF_FUZZED(-180.216) : _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(194.761)), bool(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec4(bvec2(false, false), true, true)))), bool(bvec4(bool(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec4(bvec2(false, false), true, true)))), true, true, true))))))))), (false ? _GLF_IDENTITY(_GLF_FUZZED(-538.417), (_GLF_FUZZED(-538.417)) / round(length(normalize(vec3(1.0, 1.0, 1.0))))) : _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], float(vec2(injectionSwitch[0], 1.0))), injectionSwitch[1])).y, _GLF_IDENTITY(mix(float(injectionSwitch.y), _GLF_IDENTITY(float(_GLF_FUZZED(194.761)), _GLF_IDENTITY(float(vec4(float(_GLF_FUZZED(194.761)), 0.0, 0.0, determinant(mat2(1.0, 1.0, 0.0, 1.0)))), (true ? float(vec4(float(_GLF_FUZZED(194.761)), 0.0, 0.0, determinant(mat2(1.0, 1.0, 0.0, 1.0)))) : _GLF_FUZZED(6858.0101)))), bool(false)), (mix(float(injectionSwitch.y), float(_GLF_FUZZED(194.761)), bool(false))) - 0.0)), (false ? _GLF_FUZZED(-180.216) : _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(0.0, 0.0) + (injectionSwitch), (vec2(0.0, 0.0) + (injectionSwitch)) * mat2(1.0))).y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(194.761)), bool(false))))), min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(194.761)), bool(false))), (false ? _GLF_FUZZED(-180.216) : _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(194.761)), bool(false))))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y), float(_GLF_FUZZED(194.761)), bool(false))), (false ? _GLF_FUZZED(-180.216) : _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).y), float(_GLF_FUZZED(194.761)), bool(_GLF_IDENTITY(false, true && (false))))), clamp(_GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(194.761)), bool(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec4(false, false, false, false)))) || false), true, true, false)), (bool(bvec4(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec4(false, false, false, false)))) || false), true, true, false))) || false))))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(mat2x4(injectionSwitch.y, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 1.0, 0.0, 0.0, 0.0, 0.0)), float(vec2(float(mat2x4(injectionSwitch.y, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 1.0, 0.0, 0.0, 0.0, 0.0)), 0.0)))), mix(float(injectionSwitch.y), float(_GLF_FUZZED(194.761)), bool(false))), _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(_GLF_IDENTITY(194.761, (_GLF_IDENTITY(194.761, float(float(194.761)))) * 1.0))), bool(false))))))))))))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(194.761)), bool(false))), (false ? _GLF_FUZZED(-180.216) : _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(194.761)), bool(false))))))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(194.761)), bool(false))), mix(float(_GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(194.761)), bool(false)))), float(_GLF_FUZZED(549.677)), bool(false))), _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(194.761)), bool(false)))))) - _GLF_IDENTITY(dot(_GLF_IDENTITY(vec2(0.0, 0.0), (false ? _GLF_FUZZED(_GLF_IDENTITY(vec2(14.61, -9.4), mix(vec2((vec2(14.61, -9.4))[0], _GLF_FUZZED(-5837.9616)), vec2(_GLF_FUZZED(-6425.6465), (vec2(14.61, -9.4))[1]), bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)))) : vec2(0.0, 0.0))), vec2(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(7355.8467)), bool(false))), _GLF_IDENTITY(abs(_GLF_IDENTITY(1.0, _GLF_IDENTITY(float(mat4(1.0, 0.0, 1.0, determinant(mat2(abs(0.0), 0.0, 1.0, 0.0)), 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0, determinant(mat4(1.0, 1.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), (dot(vec2(0.0, 1.0), vec2(0.0, 1.0))) * 1.0)), 0.0, _GLF_IDENTITY(1.0, _GLF_IDENTITY(float(mat2(_GLF_IDENTITY(1.0, min(1.0, 1.0)), 0.0, 0.0, 1.0)), (true ? _GLF_IDENTITY(float(mat2(_GLF_IDENTITY(1.0, min(1.0, 1.0)), 0.0, 0.0, 1.0)), clamp(float(mat2(_GLF_IDENTITY(1.0, min(1.0, 1.0)), 0.0, 0.0, 1.0)), float(mat2(_GLF_IDENTITY(1.0, min(1.0, 1.0)), 0.0, 0.0, 1.0)), float(mat2(_GLF_IDENTITY(1.0, min(1.0, 1.0)), 0.0, 0.0, 1.0)))) : _GLF_FUZZED(-8479.8717)))), 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0)), 1.0)), (true ? float(mat4(1.0, 0.0, 1.0, determinant(mat2(abs(0.0), 0.0, 1.0, 0.0)), 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, _GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), (_GLF_ONE(1.0, injectionSwitch.y)) / exp(0.0)), 0.0, 0.0, determinant(mat4(1.0, 1.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0))), 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0)), 1.0)) : _GLF_FUZZED(log(-1.7)))))), (false ? _GLF_FUZZED(-2.4) : abs(1.0))))), dot(vec2(0.0, 0.0), vec2(1.0, abs(1.0)))))))))
      {
      }
     else
      {
       if(_GLF_WRAPPED_IF_FALSE(false))
        {
        }
       else
        {
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
          return;
        }
       for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != int(_GLF_ZERO(0.0, injectionSwitch.x))); _injected_loop_counter --)
        {
         if(_GLF_WRAPPED_IF_TRUE(true))
          {
           if(_GLF_DEAD(false))
            break;
           if(_GLF_WRAPPED_IF_FALSE(false))
            {
            }
           else
            {
             if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
              {
               if(_GLF_DEAD(false))
                break;
               do
                {
                 do
                  {
                   for(int _injected_loop_counter = (0 & 9573); _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
                    {
                     if(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), (_GLF_WRAPPED_IF_FALSE(false)) && true))
                      {
                      }
                     else
                      {
                       do
                        {
                         if(_GLF_DEAD(false))
                          return;
                        }
                       while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
                      }
                     if(_GLF_DEAD(false))
                      break;
                    }
                   if(_GLF_DEAD(false))
                    return;
                   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
                    break;
                  }
                 while(_GLF_WRAPPED_LOOP(false));
                }
               while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(mat3(injectionSwitch.y, log(round(length(normalize(1.0)))), 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0))))), false || (_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, true && (false)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))), (injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bool(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))));
              }
             else
              {
              }
            }
          }
         else
          {
          }
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
        {
         if(_GLF_WRAPPED_IF_TRUE(true))
          {
           return;
          }
         else
          {
          }
        }
      }
    }
   else
    {
    }
  }
 else
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 if(_GLF_WRAPPED_IF_FALSE(false))
  {
  }
 else
  {
   if(_GLF_DEAD(false))
    {
     for(int _injected_loop_counter = (0 << _GLF_IDENTITY(_GLF_IDENTITY(int(7), int(7)), max(_GLF_IDENTITY(int(7), _GLF_IDENTITY(int(7), (int(7)) | 0)), _GLF_IDENTITY(_GLF_IDENTITY(int(7), (int(_GLF_IDENTITY(7, ~ (_GLF_IDENTITY(~ (7), (_GLF_IDENTITY(~ (7), 0 | (~ (7)))) ^ 0))))) << 0), int(7))))); _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
      {
       return;
       if(_GLF_DEAD(false))
        break;
      }
    }
   if(_GLF_DEAD(false))
    return;
  }
 uint subgroup_local_id = gl_SubgroupInvocationID;
 for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
    break;
   do
    {
     for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
      {
       if(_GLF_DEAD(false))
        return;
      }
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
      }
     else
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
          }
         else
          {
           return;
          }
        }
      }
    }
   while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, false || (false)), (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(false || (false), true && (false || (false)))), (injectionSwitch.x > injectionSwitch.y))))));
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
  }
 else
  {
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
     if(_GLF_DEAD(false))
      return;
    }
   else
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)), (injectionSwitch) * mat2(1.0)), max(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)), (false ? _GLF_FUZZED(vec2(6208.0397, 31.70)) : _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)))), vec2(1.0, 1.0) * (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)), (false ? _GLF_FUZZED(vec2(6208.0397, 31.70)) : _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)), (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0))) / vec2(1.0, 1.0)))))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)), mix(vec2(_GLF_FUZZED(49.72), (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)))[1]), vec2(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch), vec2(mat2((injectionSwitch), 1.0, 1.0))) * mat2(1.0)))[0], (true ? (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)))[0] : _GLF_IDENTITY(_GLF_FUZZED(-448.591), (_GLF_FUZZED(-448.591)) / 1.0))), _GLF_FUZZED(-856.840)), bvec2(true, false)))))) / vec2(1.0, 1.0)))).y))))
      return;
    }
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
    }
   else
    {
     if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        return;
      }
     else
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         do
          {
           for(int _injected_loop_counter = (1 | 1); _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
            {
             return;
            }
          }
         while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
        }
       for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < (1 | 1)); _GLF_IDENTITY(_injected_loop_counter ++, ~ (_GLF_IDENTITY(~ (_injected_loop_counter ++), (false ? _GLF_FUZZED(_GLF_IDENTITY(_injected_loop_counter, 0 ^ (_injected_loop_counter))) : ~ (_injected_loop_counter ++))))))
        {
         if(_GLF_WRAPPED_IF_FALSE(false))
          {
          }
         else
          {
           if(_GLF_WRAPPED_IF_FALSE(false))
            {
            }
           else
            {
             do
              {
               if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
                break;
               if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false)), ! (! (_GLF_IDENTITY(false, ! (! (false))))))))), (injectionSwitch.x > injectionSwitch.y))))
                {
                 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, true)), ! (_GLF_IDENTITY(! (bool(bvec2(false, true))), true && (! (bool(bvec2(false, true))))))))), ! (! (_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, true)), ! (_GLF_IDENTITY(! (bool(bvec2(false, true))), true && (! (bool(bvec2(false, true)))))))))))))
                  {
                   if(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), _GLF_IDENTITY(! (_GLF_IDENTITY(! (_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false)))), ! (! (! (_GLF_WRAPPED_IF_FALSE(false)))))), bool(bvec4(! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), (_GLF_WRAPPED_IF_FALSE(false)) || false)), _GLF_IDENTITY(! (! (_GLF_IDENTITY(! (_GLF_WRAPPED_IF_FALSE(false)), (! (_GLF_WRAPPED_IF_FALSE(false))) && true))), (! (! (_GLF_IDENTITY(! (_GLF_WRAPPED_IF_FALSE(false)), (! (_GLF_WRAPPED_IF_FALSE(false))) && true)))) || false))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)))))
                    {
                     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                      break;
                     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                      continue;
                    }
                   else
                    {
                     return;
                    }
                   if(_GLF_DEAD(false))
                    continue;
                   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                    break;
                   if(_GLF_DEAD(false))
                    continue;
                  }
                 if(_GLF_DEAD(false))
                  return;
                 if(_GLF_WRAPPED_IF_TRUE(true))
                  {
                   for(int _injected_loop_counter = _GLF_IDENTITY(_GLF_IDENTITY(int(_GLF_ONE(_GLF_IDENTITY(1.0, max(1.0, _GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(-8.9))))), injectionSwitch.y)), _GLF_IDENTITY(int(_GLF_IDENTITY(ivec2(int(_GLF_IDENTITY(_GLF_ONE(_GLF_IDENTITY(1.0, max(1.0, _GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(-8.9))))), injectionSwitch.y), (_GLF_IDENTITY(_GLF_ONE(_GLF_IDENTITY(1.0, max(1.0, _GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(-8.9))))), injectionSwitch.y), mix(float(_GLF_ONE(_GLF_IDENTITY(1.0, max(1.0, _GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(-8.9))))), injectionSwitch.y)), float(_GLF_FUZZED((+ -7.4))), bool(false)))) / 1.0)), 0), (_GLF_IDENTITY(ivec2(int(_GLF_ONE(_GLF_IDENTITY(1.0, max(1.0, _GLF_IDENTITY(1.0, _GLF_IDENTITY((true ? 1.0 : _GLF_FUZZED(_GLF_IDENTITY(-8.9, (true ? -8.9 : _GLF_FUZZED(log2(tan(-3.7))))))), float(_GLF_IDENTITY(mat3((true ? 1.0 : _GLF_FUZZED(_GLF_IDENTITY(-8.9, (true ? -8.9 : _GLF_FUZZED(log2(tan(-3.7))))))), 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0), transpose(transpose(_GLF_IDENTITY(mat3((true ? 1.0 : _GLF_FUZZED(_GLF_IDENTITY(-8.9, (true ? -8.9 : _GLF_FUZZED(log2(tan(-3.7))))))), 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0), transpose(transpose(_GLF_IDENTITY(mat3((true ? 1.0 : _GLF_FUZZED(_GLF_IDENTITY(-8.9, (true ? -8.9 : _GLF_FUZZED(log2(tan(-3.7))))))), 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0), (_GLF_IDENTITY(true, ! (! (true))) ? mat3((true ? 1.0 : _GLF_FUZZED(_GLF_IDENTITY(-8.9, (true ? -8.9 : _GLF_FUZZED(log2(tan(-3.7))))))), 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0) : _GLF_FUZZED(mat3(90.35, 9.9, -5290.6998, -6.8, -145.698, 1.2, -837.362, 8.7, -7596.6375))))))))))))))), injectionSwitch.y)), 0), (ivec2(int(_GLF_ONE(_GLF_IDENTITY(_GLF_IDENTITY(1.0, determinant(mat4(0.0, 0.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(0.0, _GLF_IDENTITY(float(float(_GLF_IDENTITY(0.0, min(0.0, 0.0)))), mix(float(float(float(_GLF_IDENTITY(_GLF_IDENTITY(0.0, min(0.0, 0.0)), _GLF_IDENTITY(min(_GLF_IDENTITY(0.0, min(0.0, 0.0)), _GLF_IDENTITY(0.0, min(0.0, 0.0))), min(min(_GLF_IDENTITY(0.0, min(0.0, 0.0)), _GLF_IDENTITY(0.0, min(0.0, 0.0))), _GLF_IDENTITY(min(_GLF_IDENTITY(0.0, min(0.0, 0.0)), _GLF_IDENTITY(0.0, min(0.0, 0.0))), _GLF_IDENTITY(float(vec3(min(_GLF_IDENTITY(0.0, min(0.0, 0.0)), _GLF_IDENTITY(0.0, min(0.0, 0.0))), 1.0, 0.0)), mix(float(_GLF_FUZZED(0.4)), float(float(vec3(min(_GLF_IDENTITY(0.0, min(0.0, 0.0)), _GLF_IDENTITY(0.0, min(0.0, 0.0))), 1.0, 0.0))), bool(true)))))))))), float(_GLF_FUZZED(2463.1457)), bool(false)))), 0.0, 0.0, abs(1.0), 1.0, _GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, max(0.0, 0.0))) / 1.0), 0.0, 0.0, 1.0, 0.0, 0.0)) + (1.0)), max(1.0, _GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(-8.9))))), injectionSwitch.y)), 0)) - ivec2(0, 0))) ^ ivec2(0, 0))), max(_GLF_IDENTITY(int(_GLF_IDENTITY(ivec2(int(_GLF_ONE(_GLF_IDENTITY(1.0, max(1.0, _GLF_IDENTITY(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-253.710)), float(1.0), bool(true))), (true ? 1.0 : _GLF_FUZZED(-8.9))))), injectionSwitch.y)), _GLF_IDENTITY(0, (0) | (_GLF_IDENTITY(0, 0 ^ (0))))), (_GLF_IDENTITY(_GLF_IDENTITY(ivec2(int(_GLF_ONE(_GLF_IDENTITY(1.0, max(1.0, _GLF_IDENTITY(_GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(-8.9))), mix(float(_GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(-8.9)))), float(_GLF_FUZZED(81.27)), bool(false))))), injectionSwitch.y)), 0), (ivec2(int(_GLF_ONE(_GLF_IDENTITY(1.0, max(1.0, _GLF_IDENTITY(_GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(-8.9))), mix(float(_GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(-8.9)))), float(_GLF_FUZZED(81.27)), bool(false))))), injectionSwitch.y)), 0)) | (_GLF_IDENTITY(ivec2(int(_GLF_ONE(_GLF_IDENTITY(1.0, max(1.0, _GLF_IDENTITY(_GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_IDENTITY(_GLF_FUZZED(-8.9), float(mat4x2(_GLF_FUZZED(-8.9), 1.0, 0.0, 0.0, 1.0, abs(1.0), abs(1.0), 1.0))))), mix(float(_GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(-8.9)))), float(_GLF_FUZZED(81.27)), bool(_GLF_IDENTITY(false, true && (false))))))), injectionSwitch.y)), _GLF_IDENTITY(0, (0) << 0)), ~ (~ (ivec2(_GLF_IDENTITY(int(_GLF_ONE(_GLF_IDENTITY(1.0, max(1.0, _GLF_IDENTITY(_GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(-8.9))), mix(float(_GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(-8.9)))), float(_GLF_FUZZED(81.27)), bool(false))))), injectionSwitch.y)), ~ (~ (int(_GLF_ONE(_GLF_IDENTITY(1.0, max(1.0, _GLF_IDENTITY(_GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(-8.9))), mix(float(_GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(-8.9)))), float(_GLF_FUZZED(81.27)), bool(false))))), injectionSwitch.y))))), 0)))))), (ivec2(int(_GLF_ONE(_GLF_IDENTITY(1.0, max(1.0, _GLF_IDENTITY(1.0, _GLF_IDENTITY((true ? 1.0 : _GLF_FUZZED(-8.9)), clamp(_GLF_IDENTITY((true ? 1.0 : _GLF_FUZZED(-8.9)), mix(float((true ? 1.0 : _GLF_FUZZED(-8.9))), float(_GLF_FUZZED(-7745.8257)), bool(false))), (true ? 1.0 : _GLF_FUZZED(-8.9)), (true ? 1.0 : _GLF_FUZZED(-8.9))))))), injectionSwitch.y)), 0)) - _GLF_IDENTITY(ivec2(0, 0), min(_GLF_IDENTITY(ivec2(0, 0), min(ivec2(0, 0), ivec2(0, 0))), ivec2(0, 0))))) ^ ivec2(_GLF_IDENTITY(0, (0) ^ 0), 0))), clamp(int(_GLF_IDENTITY(ivec2(_GLF_IDENTITY(int(_GLF_ONE(_GLF_IDENTITY(1.0, max(1.0, _GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(-8.9))))), _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(0.0)), bool(false)))) - 0.0))), (int(_GLF_ONE(_GLF_IDENTITY(1.0, max(1.0, _GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(-8.9))))), injectionSwitch.y))) | (_GLF_IDENTITY(int(_GLF_ONE(_GLF_IDENTITY(1.0, max(1.0, _GLF_IDENTITY(1.0, _GLF_IDENTITY((_GLF_IDENTITY(true ? 1.0 : _GLF_FUZZED(-8.9), max(_GLF_IDENTITY(true ? 1.0 : _GLF_FUZZED(-8.9), (true ? 1.0 : _GLF_FUZZED(-8.9)) - _GLF_IDENTITY(0.0, (0.0) * 1.0)), true ? 1.0 : _GLF_FUZZED(_GLF_IDENTITY(-8.9, float(mat4x2(-8.9, 0.0, abs(_GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0)))), 0.0, 0.0, 0.0, 1.0, 0.0))))))), mix(float(_GLF_FUZZED(8426.0691)), float(_GLF_IDENTITY((_GLF_IDENTITY(true ? 1.0 : _GLF_FUZZED(-8.9), max(_GLF_IDENTITY(true ? 1.0 : _GLF_FUZZED(-8.9), (_GLF_IDENTITY(true, (_GLF_IDENTITY(true, bool(bvec4(true, false, false, true)))) && true) ? 1.0 : _GLF_FUZZED(-8.9)) - _GLF_IDENTITY(0.0, max(0.0, _GLF_IDENTITY(0.0, (0.0) + 0.0)))), true ? 1.0 : _GLF_FUZZED(-8.9)))), _GLF_IDENTITY(((_GLF_IDENTITY(true ? 1.0 : _GLF_FUZZED(-8.9), max(_GLF_IDENTITY(true ? 1.0 : _GLF_FUZZED(-8.9), (true ? 1.0 : _GLF_FUZZED(-8.9)) - 0.0), true ? 1.0 : _GLF_FUZZED(-8.9))))) / cos(0.0), float(mat2x3(((_GLF_IDENTITY(true ? 1.0 : _GLF_FUZZED(-8.9), max(_GLF_IDENTITY(true ? 1.0 : _GLF_FUZZED(-8.9), (true ? 1.0 : _GLF_FUZZED(-8.9)) - 0.0), true ? 1.0 : _GLF_FUZZED(-8.9))))) / cos(0.0), 1.0, 0.0, 1.0, sin(0.0), length(0.0)))))), bool(true)))))), _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)))), max(int(_GLF_ONE(_GLF_IDENTITY(1.0, max(1.0, _GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(-8.9))))), injectionSwitch.y)), int(_GLF_IDENTITY(_GLF_ONE(_GLF_IDENTITY(1.0, max(1.0, _GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(_GLF_IDENTITY(-8.9, clamp(-8.9, _GLF_IDENTITY(-8.9, (false ? _GLF_FUZZED(-0.7) : -8.9)), -8.9))))))), injectionSwitch.y), (false ? _GLF_IDENTITY(_GLF_FUZZED(1082.7892), mix(float(_GLF_FUZZED(4342.6776)), float(_GLF_FUZZED(1082.7892)), bool(true))) : _GLF_IDENTITY(_GLF_ONE(_GLF_IDENTITY(1.0, max(1.0, _GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(_GLF_IDENTITY(-8.9, clamp(-8.9, _GLF_IDENTITY(-8.9, (false ? _GLF_FUZZED(-0.7) : -8.9)), -8.9))))))), injectionSwitch.y), float(mat2x4(_GLF_ONE(_GLF_IDENTITY(1.0, max(1.0, _GLF_IDENTITY(1.0, _GLF_IDENTITY((true ? 1.0 : _GLF_FUZZED(_GLF_IDENTITY(-8.9, clamp(-8.9, _GLF_IDENTITY(-8.9, (false ? _GLF_FUZZED(-0.7) : -8.9)), -8.9)))), ((true ? 1.0 : _GLF_FUZZED(_GLF_IDENTITY(-8.9, clamp(-8.9, _GLF_IDENTITY(-8.9, (false ? _GLF_FUZZED(-0.7) : -8.9)), -8.9))))) - 0.0)))), injectionSwitch.y), _GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, (1.0) * 1.0), 1.0, _GLF_IDENTITY(1.0, _GLF_IDENTITY(float(mat2(1.0, 1.0, 1.0, 0.0)), clamp(float(mat2(1.0, 1.0, 1.0, 0.0)), float(mat2(1.0, 1.0, 1.0, 0.0)), float(mat2(1.0, 1.0, 1.0, 0.0))))))), 1.0, _GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0)), 1.0, 0.0, 1.0, 0.0)))))))))), 0), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(ivec2(int(_GLF_ONE(_GLF_IDENTITY(1.0, max(1.0, _GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(-8.9))))), injectionSwitch.y)), _GLF_IDENTITY(0, (0) - 0)), max(ivec2(int(_GLF_ONE(_GLF_IDENTITY(1.0, max(1.0, _GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(-8.9))))), injectionSwitch.y)), _GLF_IDENTITY(0, (0) - 0)), ivec2(int(_GLF_ONE(_GLF_IDENTITY(1.0, max(1.0, _GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(-8.9))))), injectionSwitch.y)), _GLF_IDENTITY(0, (0) - 0)))), (ivec2(int(_GLF_ONE(_GLF_IDENTITY(1.0, max(1.0, _GLF_IDENTITY(_GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(-8.9))), min(_GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(-8.9))), _GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(-8.9))))))), injectionSwitch.y)), 0)) - ivec2(0, 0))) ^ ivec2(0, 0), ivec2(ivec4(_GLF_IDENTITY((_GLF_IDENTITY(ivec2(int(_GLF_ONE(_GLF_IDENTITY(1.0, max(1.0, _GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(-8.9))))), injectionSwitch.y)), _GLF_IDENTITY(0, (0) - 0)), (ivec2(int(_GLF_ONE(_GLF_IDENTITY(1.0, max(1.0, _GLF_IDENTITY(_GLF_IDENTITY(1.0, min(1.0, 1.0)), (true ? 1.0 : _GLF_FUZZED(-8.9))))), injectionSwitch.y)), 0)) - ivec2(0, _GLF_IDENTITY(0, 1 * (_GLF_IDENTITY(_GLF_IDENTITY(0, max(0, _GLF_IDENTITY(0, (_GLF_IDENTITY(0, (true ? 0 : _GLF_FUZZED(_injected_loop_counter)))) | (0)))), 1 * (_GLF_IDENTITY(0, clamp(0, 0, _GLF_IDENTITY(0, (_GLF_IDENTITY(0, min(0, _GLF_IDENTITY(0, min(0, 0))))) / 1)))))))))) ^ ivec2(0, 0), ((_GLF_IDENTITY(_GLF_IDENTITY(ivec2(int(_GLF_ONE(_GLF_IDENTITY(1.0, max(1.0, _GLF_IDENTITY(_GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(-8.9))), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(-5168.5528) : _GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(-8.9))))))), injectionSwitch.y)), _GLF_IDENTITY(0, (0) - 0)), (_GLF_IDENTITY(ivec2(0, 0) >> _GLF_IDENTITY(ivec2(7), ivec2(7)), (_GLF_IDENTITY(ivec2(0, 0) >> _GLF_IDENTITY(ivec2(7), ivec2(7)), (ivec2(0, 0) >> _GLF_IDENTITY(ivec2(7), ivec2(7))) | (ivec2(0, 0) >> _GLF_IDENTITY(ivec2(7), ivec2(7))))) / ivec2(1, 1))) + (ivec2(int(_GLF_ONE(_GLF_IDENTITY(1.0, max(1.0, _GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(-8.9))))), injectionSwitch.y)), _GLF_IDENTITY(0, (0) - 0)))), (ivec2(int(_GLF_ONE(_GLF_IDENTITY(1.0, _GLF_IDENTITY(max(1.0, _GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_IDENTITY(_GLF_FUZZED(-8.9), float(mat2(_GLF_IDENTITY(_GLF_FUZZED(-8.9), (false ? _GLF_FUZZED(-9872.1641) : _GLF_FUZZED(-8.9))), sin(0.0), 1.0, 1.0)))))), clamp(max(1.0, _GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_IDENTITY(_GLF_FUZZED(-8.9), float(mat2(_GLF_IDENTITY(_GLF_FUZZED(-8.9), (false ? _GLF_FUZZED(-9872.1641) : _GLF_FUZZED(-8.9))), sin(0.0), 1.0, 1.0)))))), max(1.0, _GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_IDENTITY(_GLF_FUZZED(-8.9), float(mat2(_GLF_IDENTITY(_GLF_FUZZED(-8.9), (false ? _GLF_FUZZED(-9872.1641) : _GLF_FUZZED(-8.9))), sin(0.0), 1.0, 1.0)))))), max(1.0, _GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_IDENTITY(_GLF_FUZZED(-8.9), float(mat2(_GLF_IDENTITY(_GLF_FUZZED(-8.9), (false ? _GLF_FUZZED(-9872.1641) : _GLF_FUZZED(-8.9))), sin(0.0), 1.0, 1.0))))))))), injectionSwitch.y)), 0)) - ivec2(0, 0))) ^ ivec2(0, 0)) >> ivec2(0, 0)), 1, 1))))), int(_GLF_IDENTITY(ivec2(int(_GLF_ONE(_GLF_IDENTITY(1.0, max(1.0, _GLF_IDENTITY(_GLF_IDENTITY(1.0, (true ? _GLF_IDENTITY(1.0, (1.0) / 1.0) : _GLF_FUZZED(-8.9))), clamp(_GLF_IDENTITY(1.0, (true ? _GLF_IDENTITY(1.0, (1.0) / 1.0) : _GLF_FUZZED(-8.9))), _GLF_IDENTITY(1.0, (true ? _GLF_IDENTITY(1.0, (1.0) / 1.0) : _GLF_FUZZED(-8.9))), _GLF_IDENTITY(_GLF_IDENTITY(1.0, (true ? _GLF_IDENTITY(1.0, (1.0) / 1.0) : _GLF_FUZZED(-8.9))), (false ? _GLF_FUZZED(52.95) : _GLF_IDENTITY(_GLF_IDENTITY(1.0, (true ? _GLF_IDENTITY(1.0, (1.0) / 1.0) : _GLF_FUZZED(-8.9))), 1.0 * (_GLF_IDENTITY(1.0, (true ? _GLF_IDENTITY(1.0, (1.0) / 1.0) : _GLF_FUZZED(-8.9))))))))))), injectionSwitch.y)), 0), (_GLF_IDENTITY(ivec2(int(_GLF_IDENTITY(_GLF_ONE(_GLF_IDENTITY(1.0, max(1.0, _GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(-8.9))))), injectionSwitch.y), max(_GLF_ONE(_GLF_IDENTITY(1.0, max(1.0, _GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(-8.9))))), injectionSwitch.y), _GLF_IDENTITY(_GLF_ONE(_GLF_IDENTITY(1.0, max(1.0, _GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(-8.9))))), injectionSwitch.y), float(_GLF_IDENTITY(mat3(_GLF_ONE(_GLF_IDENTITY(1.0, max(1.0, _GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(-8.9))))), injectionSwitch.y), determinant(mat2(1.0, 0.0, 1.0, 1.0)), sqrt(0.0), 0.0, 1.0, 1.0, 0.0, 1.0, 0.0), (mat3(_GLF_ONE(_GLF_IDENTITY(1.0, max(1.0, _GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(-8.9))))), injectionSwitch.y), determinant(mat2(1.0, 0.0, 1.0, 1.0)), sqrt(0.0), 0.0, 1.0, 1.0, 0.0, 1.0, 0.0)) + mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))))))), 0), (ivec2(int(_GLF_ONE(_GLF_IDENTITY(1.0, max(1.0, _GLF_IDENTITY(1.0, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(true, ! (! (true))), ! (_GLF_IDENTITY(_GLF_IDENTITY(! (true), false || _GLF_IDENTITY((! (true)), ! (! (_GLF_IDENTITY((! (true)), ((! (true))) || false))))), true && (_GLF_IDENTITY(_GLF_IDENTITY(! (true), false || (! (_GLF_IDENTITY(true, (true) || false)))), bool(bvec2(_GLF_IDENTITY(! (true), false || (! (true))), false))))))) ? 1.0 : _GLF_IDENTITY(_GLF_FUZZED(-8.9), mix(float(_GLF_FUZZED((-8777.6375 - 7.8))), float(_GLF_FUZZED(-8.9)), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), max((_GLF_IDENTITY(_GLF_IDENTITY(true, ! (! (true))), ! (_GLF_IDENTITY(_GLF_IDENTITY(! (true), false || _GLF_IDENTITY((! (true)), ! (! (_GLF_IDENTITY((! (true)), ((! (true))) || false))))), true && (_GLF_IDENTITY(_GLF_IDENTITY(! (true), false || (! (_GLF_IDENTITY(true, (true) || false)))), bool(bvec2(_GLF_IDENTITY(! (true), false || (! (true))), false))))))) ? 1.0 : _GLF_IDENTITY(_GLF_FUZZED(-8.9), mix(float(_GLF_FUZZED((-8777.6375 - 7.8))), float(_GLF_FUZZED(-8.9)), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), (_GLF_IDENTITY(_GLF_IDENTITY(true, ! (! (true))), ! (_GLF_IDENTITY(_GLF_IDENTITY(! (true), false || _GLF_IDENTITY((! (true)), ! (! (_GLF_IDENTITY((! (true)), ((! (true))) || false))))), true && (_GLF_IDENTITY(_GLF_IDENTITY(! (true), false || (! (_GLF_IDENTITY(true, (true) || false)))), bool(bvec2(_GLF_IDENTITY(! (true), false || (! (true))), false))))))) ? 1.0 : _GLF_IDENTITY(_GLF_FUZZED(-8.9), mix(float(_GLF_FUZZED((-8777.6375 - 7.8))), float(_GLF_FUZZED(-8.9)), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))))), injectionSwitch.y)), 0)) - _GLF_IDENTITY(ivec2(0, 0), (ivec2(_GLF_IDENTITY(0, _GLF_IDENTITY(int(ivec3(_GLF_IDENTITY(0, _GLF_IDENTITY((0), (_GLF_IDENTITY((0), ((0)) | ((0)))) / 1) | (_GLF_IDENTITY(0, int(ivec4(0, 0, 1, 1))))), 0, 0)), (0 >> _GLF_IDENTITY(int(3), int(3))) ^ (int(ivec3(_GLF_IDENTITY(0, _GLF_IDENTITY((0), (_GLF_IDENTITY((0), ((0)) | ((0)))) / 1) | (_GLF_IDENTITY(0, int(ivec4(0, 0, 1, 1))))), 0, 0))))), 0)) | (ivec2(0, 0))))) ^ ivec2(0, 0))), int(_GLF_IDENTITY(ivec2(int(_GLF_IDENTITY(_GLF_ONE(_GLF_IDENTITY(1.0, max(1.0, _GLF_IDENTITY(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, (1.0) - 0.0)) / 1.0), (true ? _GLF_IDENTITY(1.0, float(vec2(1.0, 1.0))) : _GLF_FUZZED(-8.9))))), injectionSwitch.y), float(mat2(_GLF_IDENTITY(_GLF_ONE(_GLF_IDENTITY(1.0, max(1.0, _GLF_IDENTITY(1.0, (_GLF_IDENTITY(true ? 1.0 : _GLF_FUZZED(-8.9), clamp(true ? 1.0 : _GLF_FUZZED(-8.9), true ? 1.0 : _GLF_FUZZED(-8.9), true ? 1.0 : _GLF_FUZZED(-8.9))))))), injectionSwitch.y), (_GLF_ONE(_GLF_IDENTITY(1.0, max(1.0, _GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(-8.9))))), injectionSwitch.y)) / 1.0), 1.0, tan(0.0), 1.0)))), 0), (_GLF_IDENTITY(ivec2(int(_GLF_ONE(_GLF_IDENTITY(1.0, max(1.0, _GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(-8.9))))), _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, abs(0.0) + (injectionSwitch.y))) + length(0.0)))), 0), (ivec2(int(_GLF_ONE(_GLF_IDENTITY(1.0, _GLF_IDENTITY(max(1.0, _GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(-8.9)))), (true ? max(1.0, _GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(_GLF_IDENTITY(-8.9, _GLF_IDENTITY(float(mat2x4(-8.9, abs(0.0), 0.0, sin(0.0), _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(-1195.2520)), bool(false))), exp(0.0), _GLF_ZERO(0.0, injectionSwitch.x), 0.0)), float(mat4x3(float(mat2x4(-8.9, _GLF_IDENTITY(abs(0.0), float(mat3(abs(0.0), 1.0, 0.0, 0.0, round(length(normalize(1.0))), 1.0, abs(round(length(normalize(1.0)))), 1.0, determinant(mat2(1.0, 0.0, 0.0, 1.0))))), 0.0, sin(0.0), _GLF_IDENTITY(1.0, mix(float(_GLF_IDENTITY(1.0, float(_GLF_IDENTITY(mat3(1.0, determinant(mat4(1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0)), 1.0, 1.0, 0.0, 0.0, cos(0.0), 0.0, 0.0), (mat3(1.0, determinant(mat4(1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0)), 1.0, 1.0, 0.0, 0.0, cos(0.0), 0.0, 0.0)) + mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))))), float(_GLF_FUZZED(-1195.2520)), bool(false))), exp(0.0), _GLF_ZERO(0.0, injectionSwitch.x), 0.0)), 0.0, 1.0, 0.0, 1.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), length(vec2(0.0, 0.0)), 0.0, 0.0, 0.0, 0.0)))))))) : _GLF_FUZZED((3359.6203 + 3664.3789))))), _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(_GLF_IDENTITY(vec4(injectionSwitch.y, length(vec2(0.0, 0.0)), abs(0.0), 1.0), (vec4(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(cosh(vec2(vec4(141.083, 22.91, 777.603, 92.48)))) : injectionSwitch)).y, length(vec2(0.0, 0.0)), abs(0.0), 1.0)) / vec4(1.0, 1.0, 1.0, 1.0))), mix(float(float(_GLF_IDENTITY(vec4(injectionSwitch.y, length(vec2(0.0, 0.0)), abs(0.0), 1.0), (vec4(injectionSwitch.y, length(vec2(0.0, 0.0)), abs(0.0), 1.0)) / vec4(1.0, 1.0, 1.0, 1.0)))), float(_GLF_FUZZED((-2204.7735 + 5380.4982))), bool(false)))))), 0)) - ivec2(0, 0))) ^ ivec2(_GLF_IDENTITY(0, (_GLF_IDENTITY(0, 0 ^ (0))) ^ 0), 0))))), _GLF_IDENTITY(int(_GLF_IDENTITY(ivec2(int(_GLF_ONE(_GLF_IDENTITY(1.0, max(1.0, _GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_IDENTITY(_GLF_FUZZED(-8.9), 0.0 + (_GLF_FUZZED(_GLF_IDENTITY(-8.9, max(-8.9, -8.9))))))))), injectionSwitch.y)), 0), (_GLF_IDENTITY(ivec2(_GLF_IDENTITY(int(_GLF_ONE(_GLF_IDENTITY(1.0, max(1.0, _GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(-8.9))))), injectionSwitch.y)), (_GLF_IDENTITY(int(_GLF_ONE(_GLF_IDENTITY(1.0, max(1.0, _GLF_IDENTITY(_GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(-8.9))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(-8.9))), min(_GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(-8.9))), _GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(-8.9))))), _GLF_IDENTITY(_GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(-8.9))), 0.0 + (_GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(-8.9))))), _GLF_IDENTITY(1.0, _GLF_IDENTITY((true ? 1.0 : _GLF_FUZZED(-8.9)), min((true ? 1.0 : _GLF_FUZZED(-8.9)), (true ? 1.0 : _GLF_FUZZED(-8.9))))))))), injectionSwitch.y)), (false ? _GLF_FUZZED((-82780 - 76870)) : _GLF_IDENTITY(int(_GLF_ONE(_GLF_IDENTITY(1.0, max(1.0, _GLF_IDENTITY(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-878.256) : 1.0)), _GLF_IDENTITY((true ? 1.0 : _GLF_FUZZED(_GLF_IDENTITY(-8.9, round(length(normalize(1.0))) * (-8.9)))), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? (true ? 1.0 : _GLF_FUZZED(_GLF_IDENTITY(-8.9, round(length(normalize(1.0))) * (-8.9)))) : _GLF_FUZZED(9.1)))))), injectionSwitch.y)), (_GLF_IDENTITY(int(_GLF_ONE(_GLF_IDENTITY(1.0, max(1.0, _GLF_IDENTITY(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-878.256) : 1.0)), _GLF_IDENTITY((true ? _GLF_IDENTITY(1.0, float(mat4(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-5694.2459) : 1.0)), 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, determinant(mat2(0.0, 0.0, 1.0, sin(0.0))), 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x)))) : _GLF_FUZZED(-8.9)), float(float(_GLF_IDENTITY((true ? _GLF_IDENTITY(1.0, float(mat4(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-5694.2459) : 1.0)), 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, determinant(mat2(0.0, 0.0, 1.0, sin(0.0))), 1.0, _GLF_IDENTITY(0.0, mix(float(_GLF_IDENTITY(0.0, (0.0) - 0.0)), float(_GLF_FUZZED((0.7 - -1.1))), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), 1.0, 0.0, 0.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x)))) : _GLF_FUZZED(-8.9)), mix(float((true ? _GLF_IDENTITY(1.0, float(mat4(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-5694.2459) : 1.0)), 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, determinant(mat2(0.0, 0.0, 1.0, sin(0.0))), 1.0, 0.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(0.0, determinant(mat4(1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, sqrt(0.0), 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0)) * (0.0)), _GLF_ZERO(0.0, injectionSwitch.x)))) : _GLF_FUZZED(-8.9))), float(_GLF_FUZZED((- 9.6))), bool(false))))))))), injectionSwitch.y)), ~ (~ (int(_GLF_ONE(_GLF_IDENTITY(1.0, max(1.0, _GLF_IDENTITY(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-878.256) : 1.0)), (true ? 1.0 : _GLF_FUZZED(-8.9))))), injectionSwitch.y)))))) | (int(_GLF_ONE(_GLF_IDENTITY(1.0, _GLF_IDENTITY(max(1.0, _GLF_IDENTITY(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-878.256) : 1.0)), (true ? 1.0 : _GLF_FUZZED(-8.9)))), (true ? _GLF_IDENTITY(max(1.0, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, (1.0) * 1.0), 1.0)), 1.0)), (false ? _GLF_FUZZED(-878.256) : 1.0)), (true ? 1.0 : _GLF_FUZZED(-8.9)))), mix(float(_GLF_FUZZED(531.458)), float(max(1.0, _GLF_IDENTITY(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-878.256) : 1.0)), (true ? 1.0 : _GLF_FUZZED(-8.9))))), bool(true))) : _GLF_FUZZED(5.8)))), injectionSwitch.y))))))) | 0), 0), (ivec2(_GLF_IDENTITY(int(_GLF_ONE(_GLF_IDENTITY(_GLF_IDENTITY(1.0, max(1.0, _GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(-8.9))))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(1.0, max(1.0, _GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(-8.9))))), (_GLF_IDENTITY(1.0, max(1.0, _GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(-8.9)))))) * 1.0), _GLF_IDENTITY(1.0, max(1.0, _GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(-8.9))))), _GLF_IDENTITY(1.0, max(1.0, _GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(-8.9))))))), injectionSwitch.y)), min(_GLF_IDENTITY(int(_GLF_ONE(_GLF_IDENTITY(1.0, max(1.0, _GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(-8.9))))), injectionSwitch.y)), (int(_GLF_ONE(_GLF_IDENTITY(1.0, max(1.0, _GLF_IDENTITY(1.0, _GLF_IDENTITY((_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(true, bool(bvec2(true, true))), false || (_GLF_IDENTITY(true, (true) || false))), false)), (bool(bvec2(_GLF_IDENTITY(true, false || _GLF_IDENTITY((true), ((true)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), false))) || false)) ? 1.0 : _GLF_FUZZED(-8.9)), (false ? _GLF_FUZZED(77.82) : (true ? 1.0 : _GLF_FUZZED(-8.9))))))), injectionSwitch.y))) | 0), int(_GLF_ONE(_GLF_IDENTITY(1.0, max(1.0, _GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(-8.9))))), injectionSwitch.y)))), 0)) - ivec2(_GLF_IDENTITY(_GLF_IDENTITY(0, (0) - 0), (_GLF_IDENTITY(0, _GLF_IDENTITY((0) | (0), (false ? _GLF_FUZZED(37971) : (0) | (0))))) ^ 0), 0))) ^ ivec2(0, _GLF_IDENTITY(0, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(0, ~ (~ _GLF_IDENTITY((0), min((0), (0)))))), ~ (~ (~ (_GLF_IDENTITY(0, ~ (~ (0)))))))))))), int(ivec3(int(_GLF_IDENTITY(_GLF_IDENTITY(ivec2(int(_GLF_ONE(_GLF_IDENTITY(1.0, _GLF_IDENTITY(max(1.0, _GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(-8.9)))), clamp(max(1.0, _GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(-8.9)))), max(1.0, _GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(-8.9)))), max(1.0, _GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(-8.9))))))), injectionSwitch.y)), 0), (_GLF_IDENTITY(ivec2(_GLF_IDENTITY(_GLF_IDENTITY(int(_GLF_ONE(_GLF_IDENTITY(_GLF_IDENTITY(1.0, (true ? _GLF_IDENTITY(1.0, 0.0 + (1.0)) : _GLF_FUZZED(_GLF_IDENTITY(-5333.7303, mix(float(_GLF_IDENTITY(-5333.7303, float(vec3(_GLF_IDENTITY(-5333.7303, clamp(-5333.7303, -5333.7303, -5333.7303)), 1.0, 0.0)))), float(_GLF_FUZZED(669.772)), bool(false)))))), max(1.0, _GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(-8.9))))), injectionSwitch.y)), clamp(int(_GLF_ONE(_GLF_IDENTITY(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(true, ! (! (true))) ? _GLF_IDENTITY(1.0, 0.0 + (1.0)) : _GLF_FUZZED(_GLF_IDENTITY(-5333.7303, mix(float(-5333.7303), float(_GLF_FUZZED(-8058.6145)), bool(false)))))), max(1.0, _GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(-8.9))))), injectionSwitch.y)), int(_GLF_ONE(_GLF_IDENTITY(_GLF_IDENTITY(1.0, (true ? _GLF_IDENTITY(1.0, 0.0 + (1.0)) : _GLF_FUZZED(-5333.7303))), max(1.0, _GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_IDENTITY(_GLF_FUZZED(-8.9), (false ? _GLF_FUZZED(930.338) : _GLF_IDENTITY(_GLF_FUZZED(-8.9), min(_GLF_IDENTITY(_GLF_FUZZED(-8.9), mix(float(_GLF_FUZZED(5.0)), float(_GLF_FUZZED(-8.9)), bool(true))), _GLF_FUZZED(-8.9))))))))), injectionSwitch.y)), int(_GLF_ONE(_GLF_IDENTITY(_GLF_IDENTITY(1.0, (true ? _GLF_IDENTITY(_GLF_IDENTITY(1.0, 0.0 + (1.0)), clamp(_GLF_IDENTITY(1.0, 0.0 + (1.0)), _GLF_IDENTITY(1.0, 0.0 + (1.0)), _GLF_IDENTITY(1.0, 0.0 + (1.0)))) : _GLF_FUZZED(-5333.7303))), max(1.0, _GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(-8.9))))), injectionSwitch.y)))), 0 ^ (int(_GLF_ONE(_GLF_IDENTITY(1.0, max(1.0, _GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(-8.9))))), _GLF_IDENTITY(injectionSwitch.y, (true ? _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)) : _GLF_FUZZED(11.95))))))), 0), (ivec2(int(_GLF_ONE(_GLF_IDENTITY(1.0, max(1.0, _GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(-8.9))))), injectionSwitch.y)), _GLF_IDENTITY(0, (0) ^ 0))) - ivec2(0, _GLF_IDENTITY(0, clamp(0, 0, 0))))) ^ ivec2(0, 0)), (_GLF_IDENTITY(ivec2(int(_GLF_ONE(_GLF_IDENTITY(1.0, _GLF_IDENTITY(max(1.0, _GLF_IDENTITY(1.0, _GLF_IDENTITY((true ? 1.0 : _GLF_FUZZED(-8.9)), min((true ? 1.0 : _GLF_FUZZED(-8.9)), (true ? 1.0 : _GLF_FUZZED(-8.9)))))), clamp(_GLF_IDENTITY(max(1.0, _GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(-8.9)))), clamp(max(1.0, _GLF_IDENTITY(_GLF_IDENTITY(1.0, min(1.0, 1.0)), (true ? 1.0 : _GLF_FUZZED(-8.9)))), max(1.0, _GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(-8.9)))), _GLF_IDENTITY(max(1.0, _GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(-8.9)))), (max(1.0, _GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(-8.9))))) * 1.0))), max(_GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(-60.90))), _GLF_IDENTITY(1.0, _GLF_IDENTITY((true ? 1.0 : _GLF_FUZZED(-8.9)), max((true ? 1.0 : _GLF_FUZZED(-8.9)), _GLF_IDENTITY((true ? 1.0 : _GLF_FUZZED(-8.9)), clamp((true ? 1.0 : _GLF_FUZZED(-8.9)), (true ? 1.0 : _GLF_FUZZED(-8.9)), _GLF_IDENTITY((true ? 1.0 : _GLF_FUZZED(-8.9)), (_GLF_IDENTITY((true ? 1.0 : _GLF_FUZZED(-8.9)), mix(float(_GLF_FUZZED((2.7 / -7659.8700))), float((true ? 1.0 : _GLF_FUZZED(-8.9))), bool(true)))) - 0.0))))))), max(1.0, _GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(-8.9))))))), injectionSwitch.y)), 0), (_GLF_IDENTITY(ivec2(_GLF_IDENTITY(_GLF_IDENTITY(int(_GLF_ONE(_GLF_IDENTITY(_GLF_IDENTITY(1.0, (true ? _GLF_IDENTITY(1.0, 0.0 + (1.0)) : _GLF_FUZZED(-5333.7303))), max(1.0, _GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(-8.9), max(_GLF_FUZZED(-8.9), _GLF_FUZZED(-8.9))), clamp(_GLF_FUZZED(-8.9), _GLF_FUZZED(-8.9), _GLF_IDENTITY(_GLF_FUZZED(-8.9), min(_GLF_IDENTITY(_GLF_FUZZED(-8.9), max(_GLF_FUZZED(-8.9), _GLF_FUZZED(-8.9))), _GLF_IDENTITY(_GLF_FUZZED(-8.9), max(_GLF_FUZZED(-8.9), _GLF_FUZZED(-8.9))))))))))), injectionSwitch.y)), clamp(int(_GLF_ONE(_GLF_IDENTITY(_GLF_IDENTITY(1.0, (true ? _GLF_IDENTITY(1.0, 0.0 + (1.0)) : _GLF_FUZZED(-5333.7303))), max(1.0, _GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(-8.9))))), injectionSwitch.y)), int(_GLF_ONE(_GLF_IDENTITY(_GLF_IDENTITY(1.0, (true ? _GLF_IDENTITY(1.0, 0.0 + (1.0)) : _GLF_FUZZED(-5333.7303))), max(1.0, _GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(-8.9))))), injectionSwitch.y)), int(_GLF_ONE(_GLF_IDENTITY(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(true, (_GLF_IDENTITY(true, true && (true))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) ? _GLF_IDENTITY(1.0, 0.0 + (1.0)) : _GLF_FUZZED(-5333.7303))), max(1.0, _GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(-8.9))))), injectionSwitch.y)))), 0 ^ (int(_GLF_ONE(_GLF_IDENTITY(1.0, max(1.0, _GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_IDENTITY(_GLF_FUZZED(-8.9), (true ? _GLF_FUZZED(-8.9) : _GLF_FUZZED(49.95))))))), injectionSwitch.y)))), 0), (ivec2(int(_GLF_ONE(_GLF_IDENTITY(1.0, max(1.0, _GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(-8.9))))), injectionSwitch.y)), 0)) - ivec2(0, 0))) ^ ivec2(0, 0))) + ivec2(0, 0))), 1, 0)))))), (int(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y))) ^ 0); _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter, (_injected_loop_counter) - int(_GLF_ZERO(0.0, injectionSwitch.x))) > 0); _injected_loop_counter --)
                    {
                     if(_GLF_WRAPPED_IF_FALSE(false))
                      {
                      }
                     else
                      {
                       if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))
                        {
                         if(_GLF_DEAD(false))
                          return;
                         if(_GLF_DEAD(false))
                          continue;
                         if(_GLF_DEAD(false))
                          break;
                         continue;
                        }
                       if(_GLF_DEAD(false))
                        {
                         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                          break;
                         break;
                        }
                       if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, true, _GLF_IDENTITY(true, true && (true))), bvec3(bvec4(bvec3(false, true, true), false))))), _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0), min(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(_GLF_ONE(1.0, injectionSwitch.y))).y, (injectionSwitch.y) - 0.0), max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0), max(_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), injectionSwitch)).y), min(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), injectionSwitch)).y), float(mat2x3((_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), injectionSwitch)).y), 0.0, 1.0, 1.0, 0.0, 1.0))), _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), injectionSwitch)).y), float(mat2x4((_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), injectionSwitch)).y), 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0))))) - 0.0), _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0))), _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY((injectionSwitch.y), mix(float(_GLF_IDENTITY((injectionSwitch.y), mix(float((injectionSwitch.y)), float(_GLF_FUZZED(980.981)), bool(false)))), float(_GLF_FUZZED(882.226)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) - 0.0))), (true ? _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], max(_GLF_IDENTITY(injectionSwitch[0], min(injectionSwitch[0], injectionSwitch[0])), injectionSwitch[0])), injectionSwitch[1])).y) - 0.0) : _GLF_FUZZED(-6.7)))))) / _GLF_IDENTITY(1.0, float(vec3(1.0, abs(1.0), length(vec2(0.0, 0.0)))))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), (injectionSwitch) - vec2(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 0.0)).y, clamp(_GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(9.8) : injectionSwitch.y)), injectionSwitch.y, injectionSwitch.y))))), ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0), min(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(_GLF_ONE(1.0, injectionSwitch.y))).y, (injectionSwitch.y) - 0.0), max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0), max(_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), injectionSwitch)).y), min(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), injectionSwitch)).y), float(mat2x3((_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), injectionSwitch)).y), 0.0, 1.0, 1.0, 0.0, 1.0))), _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), injectionSwitch)).y), float(mat2x4((_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), injectionSwitch)).y), 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0))))) - 0.0), _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0))), _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY((injectionSwitch.y), mix(float(_GLF_IDENTITY((injectionSwitch.y), mix(float((injectionSwitch.y)), float(_GLF_FUZZED(980.981)), bool(false)))), float(_GLF_FUZZED(882.226)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) - 0.0))), (true ? _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], max(_GLF_IDENTITY(injectionSwitch[0], min(injectionSwitch[0], injectionSwitch[0])), injectionSwitch[0])), injectionSwitch[1])).y) - 0.0) : _GLF_FUZZED(-6.7)))))) / _GLF_IDENTITY(1.0, float(vec3(1.0, abs(1.0), length(vec2(0.0, 0.0)))))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), (injectionSwitch) - vec2(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 0.0)).y, clamp(_GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(9.8) : injectionSwitch.y)), injectionSwitch.y, injectionSwitch.y)))))) && true))))
                        {
                         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                          continue;
                        }
                       else
                        {
                         for(int _injected_loop_counter = int(_GLF_ONE(1.0, injectionSwitch.y)); _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter, (false ? _GLF_FUZZED(_injected_loop_counter) : _injected_loop_counter)) > 0); _injected_loop_counter --)
                          {
                           return;
                          }
                        }
                       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(_GLF_IDENTITY(vec3(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - sqrt(0.0)), sqrt(1.0), sqrt(0.0)), (vec3(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - sqrt(0.0)), sqrt(1.0), sqrt(0.0))) / cos(vec3(0.0, 0.0, 0.0)))))))))
                        {
                         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                          break;
                         break;
                        }
                      }
                    }
                  }
                 else
                  {
                  }
                 if(_GLF_DEAD(false))
                  return;
                 if(_GLF_DEAD(false))
                  return;
                }
              }
             while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
            }
          }
         if(_GLF_DEAD(false))
          continue;
        }
      }
    }
  }
 if(_GLF_DEAD(false))
  return;
 for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
  {
   if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
    }
   else
    {
     do
      {
       if(_GLF_DEAD(false))
        return;
      }
     while(_GLF_WRAPPED_LOOP(false));
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       for(int _injected_loop_counter = int(_GLF_ONE(1.0, injectionSwitch.y)); _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _GLF_IDENTITY(_injected_loop_counter --, (_GLF_IDENTITY(_injected_loop_counter --, (true ? _injected_loop_counter -- : _GLF_FUZZED(_injected_loop_counter)))) - 0))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))))))
          continue;
         return;
        }
      }
    }
  }
 uint num_workgroup = _GLF_IDENTITY(gl_NumWorkGroups, min(gl_NumWorkGroups, gl_NumWorkGroups)).x;
 if(_GLF_WRAPPED_IF_FALSE(false))
  {
  }
 else
  {
   if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
    }
   else
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))), false))))
      {
       if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
        {
         return;
        }
       else
        {
        }
      }
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
      }
     else
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
          {
           if(_GLF_WRAPPED_IF_TRUE(true))
            {
             if(_GLF_DEAD(false))
              break;
             do
              {
               return;
              }
             while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
             if(_GLF_DEAD(false))
              return;
            }
           else
            {
            }
           if(_GLF_DEAD(false))
            return;
          }
        }
      }
    }
  }
 if(_GLF_DEAD(false))
  {
   do
    {
     return;
     if(_GLF_DEAD(false))
      break;
    }
   while(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bool(bool(bool(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), bool(bvec4(bool(_GLF_IDENTITY(bool(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bool(bool(bool(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), false, true, false)))));
  }
 uint workgroup_size = gl_WorkGroupSize.x;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(bvec4(false, false, true, true))))))))
  {
   for(int _injected_loop_counter = ((1 << _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(int(_GLF_IDENTITY(7, clamp(_GLF_IDENTITY(_GLF_IDENTITY(7, max(7, 7)), (_GLF_IDENTITY(7, max(7, 7))) | (_GLF_IDENTITY(7, max(7, 7)))), 7, 7))), int(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (int(7))), int(7)), max(_GLF_IDENTITY(_GLF_IDENTITY(int(_GLF_IDENTITY(7, clamp(_GLF_IDENTITY(_GLF_IDENTITY(7, max(_GLF_IDENTITY(7, (_GLF_IDENTITY(7, (7) >> 0)) | 0), 7)), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(7, max(7, 7)), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(7, max(7, 7))), (~ (_GLF_IDENTITY(_GLF_IDENTITY(7, (false ? _GLF_FUZZED(-76449) : 7)), max(7, 7)))) / 1)))) | 0, (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(7, max(7, 7)), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(7, max(7, 7))), (~ (_GLF_IDENTITY(7, max(7, 7)))) / 1)))) | _GLF_IDENTITY(0, ~ (~ (_GLF_IDENTITY(0, (0) | 0)))), ((_GLF_IDENTITY(_GLF_IDENTITY(7, max(7, 7)), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(7, max(7, 7))), (~ (_GLF_IDENTITY(7, max(_GLF_IDENTITY(7, (7) ^ 0), 7)))) / 1)))) | 0) >> 0)) - 0)), 7, 7))), _GLF_IDENTITY(int(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (int(7)), (_GLF_IDENTITY(int(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (int(7)), (int(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (int(7))) ^ 0)) + 0)), int(7)), _GLF_IDENTITY(_GLF_IDENTITY(int(_GLF_IDENTITY(7, clamp(_GLF_IDENTITY(7, max(_GLF_IDENTITY(7, (7) | (7)), 7)), _GLF_IDENTITY(7, (7) ^ (84165 & 0)), 7))), int(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (int(7))), int(7))))) >> _GLF_IDENTITY(int(7), int(_GLF_IDENTITY(7, 0 ^ (_GLF_IDENTITY(7, clamp(7, 7, 7))))))); _GLF_WRAPPED_LOOP(_injected_loop_counter != (int(_GLF_ONE(_GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, (1.0) / 1.0), 1.0, 1.0)), injectionSwitch.y)) ^ 1)); _injected_loop_counter --)
    {
     if(_GLF_WRAPPED_IF_TRUE(true))
      {
       if(_GLF_WRAPPED_IF_TRUE(true))
        {
         do
          {
           if(_GLF_DEAD(false))
            {
             if(_GLF_WRAPPED_IF_TRUE(true))
              {
               return;
              }
             else
              {
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                continue;
              }
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              {
               if(_GLF_WRAPPED_IF_FALSE(false))
                {
                }
               else
                {
                 return;
                }
              }
            }
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            break;
          }
         while(_GLF_WRAPPED_LOOP(false));
        }
       else
        {
         if(_GLF_DEAD(false))
          break;
        }
      }
     else
      {
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      break;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(! (false)), ! (! (bool(! (false)))))), bool(bool(bool(_GLF_IDENTITY(bool(! (false)), ! (! (bool(! (false)))))))))))), (injectionSwitch.x > injectionSwitch.y))))
        break;
       if(_GLF_DEAD(false))
        break;
       if(_GLF_WRAPPED_IF_TRUE(true))
        {
         return;
         if(_GLF_DEAD(false))
          break;
        }
       else
        {
         if(_GLF_DEAD(false))
          continue;
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
           if(_GLF_DEAD(false))
            break;
           if(_GLF_WRAPPED_IF_FALSE(false))
            {
            }
           else
            {
             if(_GLF_DEAD(false))
              {
               if(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), (_GLF_WRAPPED_IF_TRUE(true)) || false))
                {
                 return;
                 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                  break;
                }
               else
                {
                }
              }
            }
           break;
          }
        }
      }
    }
   for(int _injected_loop_counter = ((1 << _GLF_IDENTITY(int(6), int(6))) >> _GLF_IDENTITY(int(6), int(6))); _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter, int(int(_injected_loop_counter))) > 0); _injected_loop_counter --)
    {
     for(int _injected_loop_counter = 1; _GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter > 0), (_GLF_WRAPPED_LOOP(_injected_loop_counter > 0)) && _GLF_IDENTITY(true, (true) || false)); _injected_loop_counter --)
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(false))
        break;
       if(_GLF_WRAPPED_IF_FALSE(false))
        {
         if(_GLF_DEAD(false))
          continue;
        }
       else
        {
         do
          {
           do
            {
             if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(false, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), _GLF_IDENTITY(bvec3(bvec4(bvec3(false, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), true)), bvec3(bvec4(bvec3(bvec4(bvec3(false, _GLF_IDENTITY(false, (false) || false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), true)), false))))), true && (bool(_GLF_IDENTITY(bvec3(false, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), _GLF_IDENTITY(bvec3(bvec4(bvec3(false, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), true)), bvec3(bvec4(bvec3(bvec4(bvec3(false, _GLF_IDENTITY(false, (false) || false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), true)), false))))))))))
              {
               if(_GLF_DEAD(false))
                return;
               break;
              }
             if(_GLF_DEAD(false))
              continue;
             if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, (true) || false)))
              {
               for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter < 1, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(_injected_loop_counter < 1, true && (_injected_loop_counter < _GLF_IDENTITY(1, min(1, 1))))))); _injected_loop_counter ++)
                {
                 for(int _injected_loop_counter = int(_GLF_ZERO(0.0, injectionSwitch.x)); _GLF_WRAPPED_LOOP(_injected_loop_counter < (1 | 0)); _injected_loop_counter ++)
                  {
                   return;
                  }
                 if(_GLF_DEAD(false))
                  continue;
                 if(_GLF_DEAD(false))
                  return;
                }
              }
             else
              {
              }
            }
           while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
          }
         while(_GLF_WRAPPED_LOOP(false));
        }
      }
    }
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
      }
     else
      {
       return;
      }
    }
   else
    {
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY((injectionSwitch)[0], 0.0 + ((injectionSwitch)[0])), (injectionSwitch)[1]), vec2(_GLF_FUZZED(-2.9), _GLF_FUZZED(-2571.1672)), bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))).y))))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
    }
   else
    {
    }
  }
 for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter != 1, (_injected_loop_counter != 1) || false)); _injected_loop_counter ++)
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(-2.0) : injectionSwitch.x)), (injectionSwitch.x) - 0.0))) > injectionSwitch.y))))
    return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 uint workgroup_id = gl_WorkGroupID.x;
 uint workgroup_base = _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_size, (_GLF_IDENTITY(workgroup_size, (false ? _GLF_FUZZED(workgroup_size) : workgroup_size))) ^ 0u) * workgroup_id, 0u ^ (_GLF_IDENTITY(workgroup_size, (_GLF_IDENTITY(workgroup_size, (false ? _GLF_FUZZED(workgroup_size) : workgroup_size))) ^ 0u) * workgroup_id)), min(_GLF_IDENTITY(workgroup_size, (_GLF_IDENTITY(workgroup_size, (false ? _GLF_FUZZED(workgroup_size) : workgroup_size))) ^ 0u) * workgroup_id, _GLF_IDENTITY(workgroup_size, (_GLF_IDENTITY(workgroup_size, (false ? _GLF_FUZZED(workgroup_size) : workgroup_size))) ^ 0u) * workgroup_id));
 uint virtual_gid = workgroup_base + subgroup_id * subgroup_size + subgroup_local_id;
 uint next_virtual_gid = workgroup_base + _GLF_IDENTITY(subgroup_id, min(subgroup_id, subgroup_id)) * subgroup_size + _GLF_IDENTITY(((subgroup_local_id + 1) % subgroup_size), 0u ^ (((subgroup_local_id + 1) % subgroup_size)));
 do
  {
   for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < int(_GLF_ONE(1.0, injectionSwitch.y))); _injected_loop_counter ++)
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(7.3) : injectionSwitch.x)) > injectionSwitch.y))))
      break;
     if(_GLF_DEAD(false))
      continue;
     do
      {
       if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(vec2(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch))))).x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(vec2(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch))))).x > injectionSwitch.y)))) && true))
        {
         if(_GLF_DEAD(false))
          break;
         if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(_GLF_IDENTITY(false, true && (false)), (injectionSwitch.x > injectionSwitch.y))))
          {
          }
         else
          {
           if(_GLF_WRAPPED_IF_FALSE(false))
            {
            }
           else
            {
             if(_GLF_WRAPPED_IF_TRUE(true))
              {
               return;
              }
             else
              {
              }
            }
          }
        }
       for(int _injected_loop_counter = 1; _GLF_IDENTITY(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_injected_loop_counter, (_injected_loop_counter) / 1), min(_injected_loop_counter, _injected_loop_counter)), int(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (_GLF_IDENTITY(_injected_loop_counter, min(_injected_loop_counter, _injected_loop_counter)))) != int(_GLF_ZERO(0.0, injectionSwitch.x))), ! (! (_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter, min(_injected_loop_counter, _injected_loop_counter)) != int(_GLF_ZERO(0.0, injectionSwitch.x)))))); _injected_loop_counter --)
        {
         if(_GLF_DEAD(false))
          continue;
         if(_GLF_DEAD(false))
          break;
         if(_GLF_DEAD(false))
          break;
         atomicStore(buf[virtual_gid], uint(1), 4, 64, 4);
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          continue;
         break;
        }
      }
     while(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(false), (_GLF_WRAPPED_LOOP(false)) || false));
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
    }
  }
 while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, (false) || false)));
 if(_GLF_WRAPPED_IF_FALSE(false))
  {
  }
 else
  {
   for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > (0 >> _GLF_IDENTITY(int(5), int(5)))); _injected_loop_counter --)
    {
     for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > (0 << _GLF_IDENTITY(int(5), int(5)))); _GLF_IDENTITY(_injected_loop_counter --, (_injected_loop_counter --) ^ 0))
      {
       if(_GLF_DEAD(false))
        break;
       do
        {
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(false))
          continue;
         if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
          }
         else
          {
           do
            {
             for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
              {
               for(int _injected_loop_counter = ((0 ^ 0) << _GLF_IDENTITY(int(0), int(0))); _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter, clamp(_injected_loop_counter, _injected_loop_counter, _GLF_IDENTITY(_injected_loop_counter, (_injected_loop_counter) >> 0))) != int(_GLF_ONE(1.0, injectionSwitch.y))); _injected_loop_counter ++)
                {
                 for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
                  {
                   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                    continue;
                   do
                    {
                     for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter != 1, _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(_injected_loop_counter != 1, (_injected_loop_counter != 1) || false))), ! (! (bool(bool(_GLF_IDENTITY(_injected_loop_counter != 1, (_injected_loop_counter != 1) || false)))))))); _injected_loop_counter ++)
                      {
                       atomicStore(buf[next_virtual_gid], uint(2), _GLF_IDENTITY(4, min(_GLF_IDENTITY(4, (4) + 0), 4)), 64, 4);
                       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))))
                        return;
                       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                        {
                         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                          continue;
                         break;
                        }
                      }
                     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(-25.95), _GLF_FUZZED(396.858)), bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))), _GLF_IDENTITY(injectionSwitch, vec2(mat2(injectionSwitch, 1.0, 1.0))), _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch))) / vec2(1.0, 1.0)))), max(injectionSwitch, injectionSwitch)).y))) && true), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)), (! (_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, bool(bool(false))), _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true)) || false)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true))) || false)))))
                      {
                       if(_GLF_DEAD(false))
                        {
                         if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(false || (injectionSwitch.x > injectionSwitch.y), (false || (injectionSwitch.x > injectionSwitch.y)) && true))) || false)))))
                          break;
                         if(_GLF_WRAPPED_IF_TRUE(true))
                          {
                           return;
                          }
                         else
                          {
                           if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (false))))))) || false)))
                            continue;
                          }
                        }
                       break;
                      }
                     do
                      {
                       if(_GLF_DEAD(false))
                        return;
                      }
                     while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
                    }
                   while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bool((injectionSwitch.x > injectionSwitch.y)))))));
                   if(_GLF_DEAD(false))
                    return;
                   if(_GLF_DEAD(false))
                    {
                     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) || false)), (_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY((_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), bool(bvec4((! (false)), true, false, true))))) || false, ! (_GLF_IDENTITY(! ((_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), bool(bvec4((! (false)), true, false, true))))) || false), false || (! ((_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), bool(bvec4((! (false)), true, false, true))))) || false)))))))) && true))
                      break;
                     if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), ! (! (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))) || false))))))
                      {
                       do
                        {
                         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                          {
                           do
                            {
                             do
                              {
                               return;
                               if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec4(bvec2(false, false), true, false)))))))
                                return;
                               if(_GLF_DEAD(false))
                                continue;
                               do
                                {
                                 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                                  break;
                                 if(_GLF_DEAD(false))
                                  {
                                   for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != _GLF_IDENTITY(0, max(_GLF_IDENTITY(0, (0) | (0)), 0))); _injected_loop_counter --)
                                    {
                                     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y))))))
                                      {
                                       if(_GLF_DEAD(false))
                                        {
                                         for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != (int(_GLF_ZERO(0.0, injectionSwitch.x)) ^ 1)); _injected_loop_counter ++)
                                          {
                                           do
                                            {
                                             if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec3(bvec2(_GLF_IDENTITY(false, ! (! (false))), _GLF_IDENTITY(false, true && (false))), true)))))))
                                              break;
                                             return;
                                            }
                                           while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, true && (false))));
                                          }
                                        }
                                       return;
                                      }
                                    }
                                   return;
                                  }
                                }
                               while(_GLF_WRAPPED_LOOP(false));
                              }
                             while(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(false), (_GLF_WRAPPED_LOOP(false)) && true));
                            }
                           while(_GLF_WRAPPED_LOOP(false));
                          }
                         if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
                          break;
                        }
                       while(_GLF_WRAPPED_LOOP(false));
                      }
                     else
                      {
                      }
                     continue;
                    }
                   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                    return;
                  }
                }
              }
            }
           while(_GLF_WRAPPED_LOOP(false));
          }
         if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
          break;
        }
       while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
       if(_GLF_DEAD(false))
        continue;
       if(_GLF_DEAD(false))
        {
         for(int _injected_loop_counter = int(_GLF_ZERO(0.0, injectionSwitch.x)); _GLF_WRAPPED_LOOP(_injected_loop_counter < int(_GLF_ONE(1.0, injectionSwitch.y))); _injected_loop_counter ++)
          {
           if(_GLF_DEAD(false))
            break;
           do
            {
             if(_GLF_DEAD(false))
              return;
             return;
            }
           while(_GLF_WRAPPED_LOOP(false));
          }
        }
       do
        {
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              return;
             if(_GLF_DEAD(false))
              {
               if(_GLF_DEAD(false))
                return;
               do
                {
                 do
                  {
                   if(_GLF_WRAPPED_IF_TRUE(true))
                    {
                     return;
                    }
                   else
                    {
                    }
                  }
                 while(_GLF_WRAPPED_LOOP(false));
                }
               while(_GLF_WRAPPED_LOOP(false));
              }
             continue;
            }
           for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != int(_GLF_ONE(1.0, injectionSwitch.y))); _injected_loop_counter ++)
            {
             do
              {
               if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
                break;
               for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
                {
                 return;
                 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                  break;
                }
              }
             while(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bool(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))) || false));
            }
           if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))))))
            return;
          }
         if(_GLF_DEAD(false))
          break;
        }
       while(_GLF_WRAPPED_LOOP(false));
      }
    }
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
    }
   else
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      return;
    }
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  return;
 for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != _GLF_IDENTITY(1, min(1, 1))); _injected_loop_counter ++)
  {
   if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bool(true)), ! (! (bool(bool(true))))))))
    {
     if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
      {
       if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(_GLF_IDENTITY(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (_GLF_IDENTITY(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec3(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, true)))))))))
        {
        }
       else
        {
         if(_GLF_WRAPPED_IF_FALSE(false))
          {
          }
         else
          {
           if(_GLF_WRAPPED_IF_TRUE(true))
            {
             do
              {
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + determinant(mat2(0.0, 0.0, 0.0, 0.0)))))))
                {
                 if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, (true) || false)))
                  {
                   if(_GLF_DEAD(false))
                    continue;
                   if(_GLF_WRAPPED_IF_TRUE(true))
                    {
                     return;
                     if(_GLF_DEAD(false))
                      break;
                    }
                   else
                    {
                    }
                  }
                 else
                  {
                   if(_GLF_DEAD(false))
                    break;
                  }
                }
              }
             while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false))));
            }
           else
            {
            }
          }
        }
      }
     else
      {
      }
     if(_GLF_DEAD(false))
      return;
    }
   else
    {
    }
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))
  {
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      return;
    }
   else
    {
    }
   return;
  }
}
