#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 for(int _injected_loop_counter = 1; _GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter > _GLF_IDENTITY(0, (0) | (0))), ! (! (_GLF_WRAPPED_LOOP(_injected_loop_counter > 0)))); _injected_loop_counter --)
  {
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     break;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(mat3x2(injectionSwitch.y, _GLF_IDENTITY(_GLF_IDENTITY(dot(vec4(1.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0, 0.0), vec4(1.0, 0.0, 0.0, 0.0)), (dot(vec4(1.0, 0.0, 0.0, 0.0), vec4(1.0, 0.0, _GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)))), 0.0))) / 1.0), dot(vec4(1.0, 0.0, 0.0, 0.0), vec4(1.0, 0.0, 0.0, 0.0))), 0.0, 0.0, 1.0, 0.0)))))))
    {
     if(_GLF_DEAD(false))
      continue;
     return;
    }
  }
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_WRAPPED_IF_TRUE(true))
  {
   if(_GLF_DEAD(false))
    {
     for(int _injected_loop_counter = (0 | 0); _GLF_WRAPPED_LOOP(_injected_loop_counter != int(_GLF_ONE(1.0, injectionSwitch.y))); _injected_loop_counter ++)
      {
       return;
      }
    }
  }
 else
  {
  }
 if(_GLF_DEAD(false))
  return;
 uint subgroup_size = gl_SubgroupSize;
 do
  {
   do
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
    }
   while(_GLF_WRAPPED_LOOP(false));
  }
 while(_GLF_WRAPPED_LOOP(false));
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), bool(bvec3(! (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(9.7)), float(injectionSwitch.x), bool(true))) > injectionSwitch.y), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)))))))))
    {
     do
      {
       return;
      }
     while(_GLF_WRAPPED_LOOP(false));
    }
   if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
    }
   else
    {
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), true && _GLF_IDENTITY((_GLF_IDENTITY(false, _GLF_IDENTITY(true && _GLF_IDENTITY((false), _GLF_IDENTITY(((false)), ! (! (((false))))) || false), ! (! (true && _GLF_IDENTITY((false), _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY((false), (_GLF_IDENTITY((false), true && ((false)))) || false)), ! (! ((_GLF_IDENTITY((false), (_GLF_IDENTITY(_GLF_IDENTITY((false), true && ((false))), (_GLF_IDENTITY((false), true && ((false)))) && true)) || false))))) || false, bool(_GLF_IDENTITY(bool((_GLF_IDENTITY((false), (_GLF_IDENTITY((false), true && ((false)))) || _GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) && true)) && true), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))))) || false), bool(bvec3(bool((_GLF_IDENTITY((false), (_GLF_IDENTITY(_GLF_IDENTITY((false), true && ((false))), bool(bvec2(_GLF_IDENTITY((false), true && ((false))), true)))) || false)) || false), true, false))))))))))), ! (! ((_GLF_IDENTITY(false, true && _GLF_IDENTITY((false), ((false)) || false)))))))))
    {
     for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != int(_GLF_ZERO(0.0, injectionSwitch.x))); _injected_loop_counter --)
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
           do
            {
             return;
            }
           while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
          }
         if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, _GLF_IDENTITY(false || (true), (_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)) || (true), bool(bvec2(false || (true), true)))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
          {
           do
            {
             if(_GLF_WRAPPED_IF_TRUE(true))
              {
               if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
                {
                 return;
                }
               else
                {
                 if(_GLF_DEAD(false))
                  {
                   for(int _injected_loop_counter = ((1 << _GLF_IDENTITY(int(1), int(1))) >> _GLF_IDENTITY(int(1), int(1))); _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
                    {
                     return;
                    }
                  }
                }
              }
             else
              {
              }
            }
           while(_GLF_WRAPPED_LOOP(false));
          }
         else
          {
          }
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            return;
           for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
            {
             return;
            }
          }
        }
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), (_GLF_WRAPPED_IF_TRUE(true)) && true))
    {
     for(int _injected_loop_counter = (-93811 & (0 >> _GLF_IDENTITY(int(2), int(2)))); _GLF_IDENTITY(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter != ((((1 << _GLF_IDENTITY(int(7), int(7))) >> _GLF_IDENTITY(int(7), _GLF_IDENTITY(int(7), _GLF_IDENTITY(max(int(7), _GLF_IDENTITY(int(7), clamp(_GLF_IDENTITY(int(7), int(ivec2(int(7), 1))), int(7), int(7)))), (_GLF_IDENTITY(max(int(7), _GLF_IDENTITY(int(7), clamp(_GLF_IDENTITY(int(7), int(ivec2(int(7), 1))), int(7), int(7)))), min(max(int(7), _GLF_IDENTITY(int(7), clamp(_GLF_IDENTITY(int(7), int(ivec2(int(7), 1))), int(7), int(7)))), max(int(7), _GLF_IDENTITY(int(7), clamp(_GLF_IDENTITY(int(7), int(ivec2(int(7), 1))), int(7), int(7))))))) >> 0)))) << _GLF_IDENTITY(int(0), _GLF_IDENTITY(int(0), (int(0)) | 0))) >> _GLF_IDENTITY(int(0), _GLF_IDENTITY(int(0), clamp(int(0), int(0), int(0)))))), (_GLF_WRAPPED_LOOP(_injected_loop_counter != ((_GLF_IDENTITY((_GLF_IDENTITY((1 << _GLF_IDENTITY(int(7), int(7))), int(int((1 << _GLF_IDENTITY(int(7), int(7)))))) >> _GLF_IDENTITY(int(_GLF_IDENTITY(7, (true ? 7 : _GLF_FUZZED(22722)))), _GLF_IDENTITY(_GLF_IDENTITY(int(_GLF_IDENTITY(7, (0 >> _GLF_IDENTITY(int(1), int(1))) | (7))), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(min(25586, _GLF_IDENTITY(_injected_loop_counter, (false ? _GLF_FUZZED(_injected_loop_counter) : _injected_loop_counter)))) : int(_GLF_IDENTITY(7, (0 >> _GLF_IDENTITY(int(1), int(1))) | (7))))), max(_GLF_IDENTITY(int(7), _GLF_IDENTITY(int(ivec3(_GLF_IDENTITY(_GLF_IDENTITY(int(7), (true ? int(7) : _GLF_FUZZED(95982))), ~ (~ (_GLF_IDENTITY(int(7), (true ? int(7) : _GLF_FUZZED(95982)))))), 0, ((1 << _GLF_IDENTITY(int(2), int(2))) >> _GLF_IDENTITY(int(2), int(2))))), clamp(int(ivec3(_GLF_IDENTITY(int(7), (true ? int(7) : _GLF_FUZZED(95982))), 0, ((1 << _GLF_IDENTITY(int(2), int(2))) >> _GLF_IDENTITY(int(2), int(2))))), int(ivec3(_GLF_IDENTITY(int(7), (true ? int(7) : _GLF_FUZZED(95982))), 0, ((1 << _GLF_IDENTITY(int(2), int(2))) >> _GLF_IDENTITY(int(2), int(2))))), int(ivec3(_GLF_IDENTITY(int(7), (true ? int(7) : _GLF_FUZZED(95982))), 0, ((1 << _GLF_IDENTITY(int(2), int(2))) >> _GLF_IDENTITY(int(2), int(2)))))))), _GLF_IDENTITY(int(7), clamp(_GLF_IDENTITY(int(7), int(ivec2(int(7), 1))), int(7), int(7))))))), (_GLF_IDENTITY((_GLF_IDENTITY((1 << _GLF_IDENTITY(int(7), int(7))), int(int((1 << _GLF_IDENTITY(int(7), int(7)))))) >> _GLF_IDENTITY(int(_GLF_IDENTITY(7, (true ? 7 : _GLF_FUZZED(22722)))), _GLF_IDENTITY(_GLF_IDENTITY(int(_GLF_IDENTITY(7, (0 >> _GLF_IDENTITY(int(1), int(1))) | (7))), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(min(25586, _GLF_IDENTITY(_injected_loop_counter, (false ? _GLF_FUZZED(_injected_loop_counter) : _injected_loop_counter)))) : int(_GLF_IDENTITY(7, (0 >> _GLF_IDENTITY(int(1), int(1))) | (7))))), max(_GLF_IDENTITY(int(7), _GLF_IDENTITY(int(ivec3(_GLF_IDENTITY(_GLF_IDENTITY(int(7), (true ? int(7) : _GLF_FUZZED(95982))), ~ (~ (_GLF_IDENTITY(int(7), (true ? int(7) : _GLF_FUZZED(95982)))))), 0, ((1 << _GLF_IDENTITY(int(2), int(2))) >> _GLF_IDENTITY(int(2), int(2))))), clamp(int(ivec3(_GLF_IDENTITY(int(7), (true ? int(7) : _GLF_FUZZED(95982))), 0, ((1 << _GLF_IDENTITY(int(2), int(2))) >> _GLF_IDENTITY(int(2), int(2))))), int(ivec3(_GLF_IDENTITY(int(7), (true ? int(7) : _GLF_FUZZED(95982))), 0, ((1 << _GLF_IDENTITY(int(2), int(2))) >> _GLF_IDENTITY(int(2), int(2))))), int(ivec3(_GLF_IDENTITY(int(7), (true ? int(7) : _GLF_FUZZED(95982))), 0, ((1 << _GLF_IDENTITY(int(2), int(2))) >> _GLF_IDENTITY(int(2), int(2)))))))), _GLF_IDENTITY(int(7), clamp(_GLF_IDENTITY(int(7), int(ivec2(int(7), 1))), int(7), int(7))))))), 0 ^ ((_GLF_IDENTITY((1 << _GLF_IDENTITY(int(7), int(7))), int(int((1 << _GLF_IDENTITY(int(7), int(7)))))) >> _GLF_IDENTITY(int(_GLF_IDENTITY(7, (true ? 7 : _GLF_FUZZED(22722)))), _GLF_IDENTITY(_GLF_IDENTITY(int(_GLF_IDENTITY(7, (0 >> _GLF_IDENTITY(int(1), int(1))) | (7))), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(min(25586, _GLF_IDENTITY(_injected_loop_counter, (false ? _GLF_FUZZED(_injected_loop_counter) : _injected_loop_counter)))) : int(_GLF_IDENTITY(7, (0 >> _GLF_IDENTITY(int(1), int(1))) | (7))))), max(_GLF_IDENTITY(int(7), _GLF_IDENTITY(int(ivec3(_GLF_IDENTITY(_GLF_IDENTITY(int(7), (true ? int(7) : _GLF_FUZZED(95982))), ~ (~ (_GLF_IDENTITY(int(7), (true ? int(7) : _GLF_FUZZED(95982)))))), 0, ((1 << _GLF_IDENTITY(int(2), int(2))) >> _GLF_IDENTITY(int(2), int(2))))), clamp(int(ivec3(_GLF_IDENTITY(int(7), (true ? int(7) : _GLF_FUZZED(95982))), 0, ((1 << _GLF_IDENTITY(int(2), int(2))) >> _GLF_IDENTITY(int(2), int(2))))), int(ivec3(_GLF_IDENTITY(int(7), (true ? int(7) : _GLF_FUZZED(95982))), 0, ((1 << _GLF_IDENTITY(int(2), int(2))) >> _GLF_IDENTITY(int(2), int(2))))), int(ivec3(_GLF_IDENTITY(int(7), (true ? int(7) : _GLF_FUZZED(95982))), 0, ((1 << _GLF_IDENTITY(int(2), int(2))) >> _GLF_IDENTITY(int(2), int(2)))))))), _GLF_IDENTITY(int(7), clamp(_GLF_IDENTITY(int(7), int(ivec2(int(7), 1))), int(7), int(7)))))))))) | (0 >> _GLF_IDENTITY(int(4), int(4)))) << _GLF_IDENTITY(int(0), _GLF_IDENTITY(int(0), (int(0)) | 0))) >> _GLF_IDENTITY(int(0), _GLF_IDENTITY(int(0), clamp(int(0), int(0), int(0))))))) && true), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter != (_GLF_IDENTITY((((1 << _GLF_IDENTITY(_GLF_IDENTITY(int(7), (int(7)) >> 0), int(7))) >> _GLF_IDENTITY(int(7), _GLF_IDENTITY(int(7), (int(7)) | (_GLF_IDENTITY(int(7), clamp(int(7), int(7), int(7))))))) << _GLF_IDENTITY(int(0), _GLF_IDENTITY(int(0), (int(_GLF_IDENTITY(0, (true ? 0 : _GLF_FUZZED(_injected_loop_counter))))) | 0))), min((((1 << _GLF_IDENTITY(int(7), _GLF_IDENTITY(int(7), clamp(int(7), int(7), int(7))))) >> _GLF_IDENTITY(int(7), _GLF_IDENTITY(int(7), (int(7)) | (_GLF_IDENTITY(int(7), clamp(int(7), int(7), int(7))))))) << _GLF_IDENTITY(int(0), _GLF_IDENTITY(int(0), (int(_GLF_IDENTITY(0, (true ? 0 : _GLF_FUZZED(_injected_loop_counter))))) | 0))), (((1 << _GLF_IDENTITY(int(7), int(7))) >> _GLF_IDENTITY(int(7), _GLF_IDENTITY(int(7), (int(7)) | (_GLF_IDENTITY(int(7), clamp(int(7), int(7), int(7))))))) << _GLF_IDENTITY(int(0), _GLF_IDENTITY(int(0), (int(_GLF_IDENTITY(0, (true ? 0 : _GLF_FUZZED(_injected_loop_counter))))) | 0))))) >> _GLF_IDENTITY(int(0), _GLF_IDENTITY(int(0), clamp(int(0), int(0), _GLF_IDENTITY(int(0), min(int(0), int(0)))))))), (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter != (_GLF_IDENTITY((((1 << _GLF_IDENTITY(int(7), int(_GLF_IDENTITY(7, ~ (_GLF_IDENTITY(~ (7), (~ (7)) ^ 0)))))) >> _GLF_IDENTITY(int(7), _GLF_IDENTITY(int(7), (int(7)) | (_GLF_IDENTITY(int(7), clamp(int(7), int(7), int(7))))))) << _GLF_IDENTITY(int(0), _GLF_IDENTITY(int(0), (int(_GLF_IDENTITY(0, (true ? 0 : _GLF_FUZZED(_injected_loop_counter))))) | 0))), min((((1 << _GLF_IDENTITY(int(7), int(7))) >> _GLF_IDENTITY(int(7), _GLF_IDENTITY(int(7), (int(7)) | (_GLF_IDENTITY(int(7), clamp(int(7), int(7), int(7))))))) << _GLF_IDENTITY(int(0), _GLF_IDENTITY(int(0), (int(_GLF_IDENTITY(0, (true ? 0 : _GLF_FUZZED(_injected_loop_counter))))) | 0))), ((_GLF_IDENTITY((1 << _GLF_IDENTITY(int(7), int(7))), 0 + ((1 << _GLF_IDENTITY(int(7), int(7))))) >> _GLF_IDENTITY(int(7), _GLF_IDENTITY(int(7), (int(7)) | (_GLF_IDENTITY(int(7), clamp(int(7), int(7), int(7))))))) << _GLF_IDENTITY(int(0), _GLF_IDENTITY(int(0), (int(_GLF_IDENTITY(0, (true ? 0 : _GLF_FUZZED(_injected_loop_counter))))) | 0))))) >> _GLF_IDENTITY(int(0), _GLF_IDENTITY(int(0), clamp(int(0), int(0), _GLF_IDENTITY(int(0), min(int(0), int(0)))))))), (_GLF_WRAPPED_LOOP(_injected_loop_counter != (_GLF_IDENTITY((((1 << _GLF_IDENTITY(int(7), int(7))) >> _GLF_IDENTITY(int(7), _GLF_IDENTITY(int(7), (_GLF_IDENTITY(int(7), _GLF_IDENTITY(int(_GLF_IDENTITY(ivec3(_GLF_IDENTITY(_GLF_IDENTITY(int(7), (int(7)) << (0 << _GLF_IDENTITY(int(3), int(3)))), clamp(_GLF_IDENTITY(int(7), (int(7)) << (0 << _GLF_IDENTITY(int(3), int(3)))), _GLF_IDENTITY(int(7), (int(7)) << (0 << _GLF_IDENTITY(int(3), int(3)))), _GLF_IDENTITY(int(7), (int(7)) << (0 << _GLF_IDENTITY(int(3), int(3)))))), 1, 1), (_GLF_IDENTITY(ivec3(_GLF_IDENTITY(int(7), (int(7)) << (0 << _GLF_IDENTITY(int(3), int(3)))), 1, 1), min(ivec3(_GLF_IDENTITY(int(7), (int(7)) << (0 << _GLF_IDENTITY(int(3), int(3)))), 1, 1), ivec3(_GLF_IDENTITY(int(7), (int(7)) << (0 << _GLF_IDENTITY(int(3), int(3)))), 1, 1)))) + ivec3(0, 0, 0))), (int(_GLF_IDENTITY(ivec3(_GLF_IDENTITY(int(7), (int(7)) << (0 << _GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), ~ (~ (int(3))))))), 1, _GLF_IDENTITY(1, (1) | (1))), (_GLF_IDENTITY(ivec3(_GLF_IDENTITY(int(7), (int(7)) << (0 << _GLF_IDENTITY(int(3), int(3)))), 1, 1), min(ivec3(_GLF_IDENTITY(int(7), (int(7)) << (0 << _GLF_IDENTITY(int(3), int(3)))), 1, 1), ivec3(_GLF_IDENTITY(int(7), (int(7)) << (0 << _GLF_IDENTITY(int(3), int(3)))), 1, 1)))) + ivec3(0, 0, 0)))) / 1))) | (_GLF_IDENTITY(int(7), clamp(int(7), int(7), int(7))))))) << _GLF_IDENTITY(int(0), _GLF_IDENTITY(int(0), (int(_GLF_IDENTITY(0, _GLF_IDENTITY((true ? 0 : _GLF_FUZZED(_injected_loop_counter)), (true ? (true ? 0 : _GLF_FUZZED(_injected_loop_counter)) : _GLF_FUZZED(-22290)))))) | 0))), min((((1 << _GLF_IDENTITY(int(7), int(7))) >> _GLF_IDENTITY(int(7), _GLF_IDENTITY(int(7), (int(_GLF_IDENTITY(7, 0 ^ (7)))) | (_GLF_IDENTITY(int(7), clamp(int(7), int(7), int(7))))))) << _GLF_IDENTITY(int(0), _GLF_IDENTITY(int(0), (int(_GLF_IDENTITY(0, (true ? 0 : _GLF_FUZZED(_GLF_IDENTITY(_injected_loop_counter, (_injected_loop_counter) / 1)))))) | 0))), (((1 << _GLF_IDENTITY(int(7), int(7))) >> _GLF_IDENTITY(int(7), _GLF_IDENTITY(int(7), (int(7)) | (_GLF_IDENTITY(int(7), clamp(int(7), int(7), int(7))))))) << _GLF_IDENTITY(int(0), _GLF_IDENTITY(int(0), _GLF_IDENTITY((int(_GLF_IDENTITY(0, (true ? 0 : _GLF_FUZZED(_injected_loop_counter))))) | 0, ((int(_GLF_IDENTITY(0, (true ? 0 : _GLF_FUZZED(_injected_loop_counter))))) | 0) / 1)))))) >> _GLF_IDENTITY(int(0), _GLF_IDENTITY(int(0), clamp(int(0), int(0), _GLF_IDENTITY(_GLF_IDENTITY(int(0), min(int(0), int(0))), clamp(_GLF_IDENTITY(int(0), min(int(0), int(0))), _GLF_IDENTITY(int(0), min(int(0), int(0))), _GLF_IDENTITY(int(0), min(int(0), int(0))))))))))) && true)) && true), false || _GLF_IDENTITY((_GLF_WRAPPED_LOOP(_injected_loop_counter != ((((1 << _GLF_IDENTITY(int(7), int(7))) >> _GLF_IDENTITY(int(7), int(7))) << _GLF_IDENTITY(int(0), _GLF_IDENTITY(int(_GLF_IDENTITY(0, (false ? _GLF_FUZZED(max(-93517, _injected_loop_counter)) : 0))), (int(0)) | 0))) >> _GLF_IDENTITY(_GLF_IDENTITY(int(0), _GLF_IDENTITY(int(0), _GLF_IDENTITY(clamp(int(0), int(0), int(0)), ~ (_GLF_IDENTITY(~ (clamp(int(0), int(0), int(0))), (~ (clamp(int(0), int(0), int(0)))) << 0))))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(int(0), _GLF_IDENTITY(int(0), clamp(int(0), int(0), int(0)))), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(int(0), (int(0)) << 0), _GLF_IDENTITY(int(0), clamp(int(0), int(0), int(0))))))), _GLF_IDENTITY(int(0), _GLF_IDENTITY(int(0), clamp(int(0), int(0), int(0)))), _GLF_IDENTITY(int(0), _GLF_IDENTITY(int(0), clamp(int(0), int(0), int(0))))))))), ! (_GLF_IDENTITY(! ((_GLF_WRAPPED_LOOP(_injected_loop_counter != ((((1 << _GLF_IDENTITY(int(7), int(7))) >> _GLF_IDENTITY(int(7), int(7))) << _GLF_IDENTITY(int(0), _GLF_IDENTITY(int(_GLF_IDENTITY(0, (false ? _GLF_FUZZED(max(-93517, _injected_loop_counter)) : 0))), (int(0)) | 0))) >> _GLF_IDENTITY(_GLF_IDENTITY(int(0), _GLF_IDENTITY(int(0), _GLF_IDENTITY(clamp(int(0), int(0), int(0)), ~ (_GLF_IDENTITY(~ (clamp(int(0), int(0), int(0))), (~ (clamp(int(0), int(0), int(0)))) << 0))))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(int(0), _GLF_IDENTITY(int(0), clamp(int(0), int(0), int(0)))), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(int(0), (int(0)) << 0), _GLF_IDENTITY(int(0), clamp(int(0), int(0), int(0))))))), _GLF_IDENTITY(int(0), _GLF_IDENTITY(int(0), clamp(int(0), int(0), int(0)))), _GLF_IDENTITY(int(0), _GLF_IDENTITY(int(0), clamp(int(0), int(0), int(0)))))))))), bool(bvec4(! ((_GLF_WRAPPED_LOOP(_injected_loop_counter != ((((1 << _GLF_IDENTITY(int(7), int(7))) >> _GLF_IDENTITY(int(7), int(7))) << _GLF_IDENTITY(int(0), _GLF_IDENTITY(int(_GLF_IDENTITY(0, (false ? _GLF_FUZZED(max(-93517, _injected_loop_counter)) : 0))), (int(0)) | 0))) >> _GLF_IDENTITY(_GLF_IDENTITY(int(0), _GLF_IDENTITY(int(0), _GLF_IDENTITY(clamp(int(0), int(0), int(0)), ~ (_GLF_IDENTITY(~ (clamp(int(0), int(0), int(0))), (~ (clamp(int(0), int(0), int(0)))) << 0))))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(int(0), _GLF_IDENTITY(int(0), clamp(int(0), int(0), int(0)))), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(int(0), (int(0)) << 0), _GLF_IDENTITY(int(0), clamp(int(0), int(0), int(0))))))), _GLF_IDENTITY(int(0), _GLF_IDENTITY(int(0), clamp(int(0), int(0), int(0)))), _GLF_IDENTITY(int(0), _GLF_IDENTITY(int(0), clamp(int(0), int(0), int(0)))))))))), true, true, true))))))), true && (! (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter != ((((_GLF_IDENTITY(1, min(_GLF_IDENTITY(1, min(1, 1)), 1)) << _GLF_IDENTITY(int(7), int(7))) >> _GLF_IDENTITY(int(7), int(7))) << _GLF_IDENTITY(int(0), _GLF_IDENTITY(int(0), (int(0)) | 0))) >> _GLF_IDENTITY(int(0), _GLF_IDENTITY(int(0), clamp(_GLF_IDENTITY(int(0), (int(0)) | 0), int(_GLF_IDENTITY(0, (_GLF_IDENTITY(0, int(int(0)))) << 0)), int(0)))))), _GLF_IDENTITY(false || (_GLF_WRAPPED_LOOP(_injected_loop_counter != (((_GLF_IDENTITY((1 << _GLF_IDENTITY(int(7), int(7))), ((1 << _GLF_IDENTITY(int(7), int(7)))) / 1) >> _GLF_IDENTITY(int(7), int(7))) << _GLF_IDENTITY(int(0), _GLF_IDENTITY(int(0), (int(0)) | _GLF_IDENTITY(0, 0 | (0))))) >> _GLF_IDENTITY(int(0), _GLF_IDENTITY(int(0), clamp(int(0), int(0), _GLF_IDENTITY(int(0), (int(0)) << (0 >> _GLF_IDENTITY(int(7), int(7)))))))))), bool(bvec4(false || (_GLF_WRAPPED_LOOP(_injected_loop_counter != (((_GLF_IDENTITY((1 << _GLF_IDENTITY(int(7), int(7))), ((1 << _GLF_IDENTITY(int(7), _GLF_IDENTITY(int(7), (int(7)) * 1)))) / 1) >> _GLF_IDENTITY(int(7), int(7))) << _GLF_IDENTITY(int(_GLF_IDENTITY(0, (_GLF_IDENTITY(0, ~ (~ (0)))) | (0))), _GLF_IDENTITY(int(0), (int(0)) | 0))) >> _GLF_IDENTITY(int(0), _GLF_IDENTITY(int(0), clamp(int(0), int(0), _GLF_IDENTITY(int(0), (int(0)) << (0 >> _GLF_IDENTITY(int(7), int(7)))))))))), true, false, false))))))))); _GLF_IDENTITY(_injected_loop_counter ++, ~ (~ (_injected_loop_counter ++))))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(false))
        return;
      }
     for(int _injected_loop_counter = ((1 << _GLF_IDENTITY(int(3), int(3))) >> _GLF_IDENTITY(int(3), int(3))); _GLF_WRAPPED_LOOP(_injected_loop_counter > _GLF_IDENTITY((0 | 0), max((0 | 0), _GLF_IDENTITY((0 | 0), int(ivec3(_GLF_IDENTITY((0 | 0), ((0 | 0)) >> 0), 0, 1)))))); _GLF_IDENTITY(_injected_loop_counter --, (_GLF_IDENTITY(_injected_loop_counter --, 0 ^ (_GLF_IDENTITY(_GLF_IDENTITY(_injected_loop_counter --, (_injected_loop_counter --) >> 0), (_GLF_IDENTITY(_injected_loop_counter --, (_injected_loop_counter --) >> 0)) >> 0)))) >> 0))
      {
       return;
      }
     if(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), false || (_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), false || (_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), (_GLF_WRAPPED_IF_TRUE(true)) && true))))))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        {
         for(int _injected_loop_counter = _GLF_IDENTITY(1, (1) / 1); _GLF_WRAPPED_LOOP(_injected_loop_counter != (0 << _GLF_IDENTITY(int(3), int(3)))); _injected_loop_counter --)
          {
           return;
          }
        }
       if(_GLF_DEAD(false))
        return;
       if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x > injectionSwitch.y))))), (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0) > injectionSwitch.y)))) || false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         if(_GLF_DEAD(false))
          {
           if(_GLF_WRAPPED_IF_FALSE(false))
            {
            }
           else
            {
             do
              {
               if(_GLF_DEAD(false))
                return;
              }
             while(_GLF_WRAPPED_LOOP(false));
            }
           return;
          }
         return;
        }
       if(_GLF_DEAD(false))
        {
         do
          {
           return;
          }
         while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, (false) && true)));
        }
       for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != (int(4581u) & 0)); _injected_loop_counter --)
        {
         if(_GLF_DEAD(false))
          {
           for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
            {
             return;
             if(_GLF_DEAD(false))
              continue;
            }
          }
        }
      }
     else
      {
       if(_GLF_WRAPPED_IF_TRUE(true))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_IDENTITY(_GLF_FUZZED(0.8), mix(float(_GLF_FUZZED(0.8)), float(_GLF_FUZZED(-6.1)), bool(_GLF_IDENTITY(false, ! (! (false)))))) : _GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(-7713.9973))))), injectionSwitch.x)) > injectionSwitch.y))))
          return;
        }
       else
        {
        }
      }
    }
   else
    {
     if(_GLF_DEAD(false))
      {
       do
        {
         return;
        }
       while(_GLF_WRAPPED_LOOP(false));
      }
     for(int _injected_loop_counter = ((32353 & _GLF_IDENTITY(0, (_GLF_IDENTITY(false ? _GLF_FUZZED((~ -76518)) : 0, min(false ? _GLF_FUZZED((~ -76518)) : 0, _GLF_IDENTITY(false ? _GLF_FUZZED((~ -76518)) : 0, int(ivec3(false ? _GLF_FUZZED((~ -76518)) : 0, 0, 1)))))))) >> _GLF_IDENTITY(int(_GLF_IDENTITY(0, ~ (~ (0)))), int(0))); _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
      {
       if(_GLF_DEAD(false))
        {
         do
          {
           return;
          }
         while(_GLF_WRAPPED_LOOP(false));
        }
       if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, false || (false))))))
        {
        }
       else
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y))))
            break;
           return;
          }
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true)), bool(bvec3((injectionSwitch.x > injectionSwitch.y), true, false))))))
            break;
           if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
            continue;
           return;
          }
        }
       for(int _injected_loop_counter = (1 & 1); _GLF_WRAPPED_LOOP(_injected_loop_counter != (0 >> _GLF_IDENTITY(int(6), _GLF_IDENTITY(int(6), (false ? _GLF_FUZZED(_injected_loop_counter) : int(6)))))); _injected_loop_counter --)
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
        }
      }
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
     do
      {
       if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), ! _GLF_IDENTITY((! (_GLF_DEAD(false))), true && (_GLF_IDENTITY((! (_GLF_DEAD(false))), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY((! (_GLF_DEAD(false))), ! (! ((! (_GLF_DEAD(false)))))), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)), (bool(bvec4(_GLF_IDENTITY((! (_GLF_DEAD(false))), ! (! ((! (_GLF_DEAD(false)))))), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))) && true)))))))))
        return;
      }
     while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))));
    }
   else
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), bool(_GLF_IDENTITY(bvec2(_GLF_DEAD(false), false), bvec2(bvec3(bvec2(_GLF_DEAD(false), false), false))))))
      {
       if(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec2(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true)))), _GLF_IDENTITY(bool(bvec2(bool(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec2(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true)))), false)), (bool(bvec2(bool(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec2(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true)))), false))) || false)))))
        {
        }
       else
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
           do
            {
             if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, false)))))
              return;
            }
           while(_GLF_WRAPPED_LOOP(false));
           return;
          }
         if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
           if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            {
            }
           else
            {
             if(_GLF_DEAD(false))
              {
               for(int _injected_loop_counter = int(_GLF_ZERO(0.0, injectionSwitch.x)); _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
                {
                 return;
                }
              }
            }
          }
         else
          {
           do
            {
             return;
            }
           while(_GLF_WRAPPED_LOOP(false));
           if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, _GLF_IDENTITY(false, ! (! (false))))))))
            return;
          }
         if(_GLF_DEAD(false))
          return;
        }
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       do
        {
         return;
        }
       while(_GLF_WRAPPED_LOOP(false));
      }
     for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != (0 >> _GLF_IDENTITY(int(0), int(0)))); _injected_loop_counter --)
      {
       if(_GLF_DEAD(false))
        return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
      return;
    }
  }
 if(_GLF_DEAD(false))
  {
   for(int _injected_loop_counter = int(_GLF_ONE(1.0, injectionSwitch.y)); _GLF_WRAPPED_LOOP(_injected_loop_counter != (0 << _GLF_IDENTITY(int(6), int(6)))); _injected_loop_counter --)
    {
     return;
    }
  }
 for(int _injected_loop_counter = ((1 << _GLF_IDENTITY(int(1), _GLF_IDENTITY(int(1), min(int(1), _GLF_IDENTITY(int(1), clamp(int(1), int(1), int(1))))))) >> _GLF_IDENTITY(int(1), int(1))); _GLF_WRAPPED_LOOP(_injected_loop_counter != int(_GLF_ZERO(0.0, injectionSwitch.x))); _injected_loop_counter --)
  {
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > (0 | (0 >> _GLF_IDENTITY(int(8), int(8))))); _injected_loop_counter --)
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          {
           for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter, (_injected_loop_counter) >> 0) > 0); _injected_loop_counter --)
            {
             return;
             if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
              break;
            }
          }
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         if(_GLF_WRAPPED_IF_TRUE(true))
          {
           if(_GLF_DEAD(false))
            return;
          }
         else
          {
          }
         if(_GLF_DEAD(false))
          continue;
         return;
         if(_GLF_DEAD(false))
          return;
        }
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
      {
       do
        {
         return;
        }
       while(_GLF_WRAPPED_LOOP(false));
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec4(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))))
      return;
    }
   else
    {
    }
  }
 uint subgroup_local_id = gl_SubgroupInvocationID;
 for(int _injected_loop_counter = int(_GLF_ONE(1.0, injectionSwitch.y)); _GLF_WRAPPED_LOOP(_injected_loop_counter != (0 >> _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), (int(2)) - int(_GLF_ZERO(0.0, injectionSwitch.x)))))); _injected_loop_counter --)
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     do
      {
       for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != ((11604 - 66525) & 0)); _injected_loop_counter --)
        {
         for(int _injected_loop_counter = 1; _GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter != 0), (_GLF_WRAPPED_LOOP(_injected_loop_counter != 0)) || false); _injected_loop_counter --)
          {
           if(_GLF_DEAD(false))
            break;
           if(_GLF_DEAD(false))
            break;
           for(int _injected_loop_counter = (((1 << _GLF_IDENTITY(int(3), int(3))) >> _GLF_IDENTITY(int(3), int(3))) | 1); _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
            {
             return;
            }
           if(_GLF_DEAD(false))
            return;
          }
        }
      }
     while(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(false), bool(bvec4(_GLF_WRAPPED_LOOP(false), true, _GLF_IDENTITY(false, bool(bvec4(false, true, true, false))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))));
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
    {
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
      }
     else
      {
       return;
      }
    }
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch)).y))), true && (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch)).y))))))
  return;
 for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != ((1 << _GLF_IDENTITY(int(1), _GLF_IDENTITY(int(1), min(int(1), _GLF_IDENTITY(int(1), ~ (~ (int(1)))))))) >> _GLF_IDENTITY(int(_GLF_IDENTITY(1, (false ? _GLF_FUZZED(72114) : 1))), int(1)))); _injected_loop_counter ++)
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_WRAPPED_IF_TRUE(true))
      {
       return;
       if(_GLF_DEAD(false))
        return;
      }
     else
      {
       if(_GLF_DEAD(false))
        return;
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_WRAPPED_IF_TRUE(true))
      {
       if(_GLF_DEAD(false))
        {
         do
          {
           return;
          }
         while(_GLF_WRAPPED_LOOP(false));
        }
      }
     else
      {
      }
    }
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_WRAPPED_IF_TRUE(true))
  {
   if(_GLF_DEAD(false))
    return;
  }
 else
  {
  }
 uint num_workgroup = _GLF_IDENTITY(gl_NumWorkGroups.x, max(gl_NumWorkGroups.x, _GLF_IDENTITY(gl_NumWorkGroups.x, (gl_NumWorkGroups.x) - 0u)));
 if(_GLF_DEAD(false))
  {
   if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
    {
     return;
    }
   else
    {
    }
  }
 if(_GLF_DEAD(false))
  {
   for(int _injected_loop_counter = int(_GLF_ONE(1.0, injectionSwitch.y)); _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
    {
     return;
    }
  }
 if(_GLF_WRAPPED_IF_FALSE(false))
  {
  }
 else
  {
   if(_GLF_DEAD(false))
    {
     do
      {
       return;
      }
     while(_GLF_WRAPPED_LOOP(false));
    }
  }
 do
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y))))
    return;
  }
 while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))));
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(mat3(injectionSwitch.y, 1.0, 1.0, 0.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(0.0, 1.0)), dot(vec2(1.0, 0.0), vec2(0.0, 1.0))), cos(0.0), cos(0.0), cos(0.0), 1.0)))))))
      return;
     if(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), bool(bvec2(_GLF_WRAPPED_IF_TRUE(true), true))))
      {
       return;
      }
     else
      {
      }
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! _GLF_IDENTITY((_GLF_IDENTITY(! (false), ! (! (! _GLF_IDENTITY((false), (_GLF_IDENTITY((false), ! (! ((false))))) || false))))), ! (! ((_GLF_IDENTITY(! (false), ! (! (! _GLF_IDENTITY((false), (_GLF_IDENTITY((false), ! (! ((false))))) || false)))))))))))
    {
     if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) < injectionSwitch.y))))
      {
       return;
      }
     else
      {
      }
    }
   if(_GLF_DEAD(false))
    {
     for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter, (0 >> _GLF_IDENTITY(int(7), int(7))) | (_injected_loop_counter)) < 1); _injected_loop_counter ++)
      {
       do
        {
         return;
        }
       while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
       if(_GLF_DEAD(false))
        return;
      }
    }
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), ! (! (false)))))
    {
     for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
      {
       for(int _injected_loop_counter = ((int(_GLF_ONE(1.0, injectionSwitch.y)) << _GLF_IDENTITY(int(7), int(7))) >> _GLF_IDENTITY(int(7), _GLF_IDENTITY(int(7), _GLF_IDENTITY(0, (0) >> 0) ^ (int(7))))); _GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter > 0), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_WRAPPED_LOOP(_injected_loop_counter > 0)), (bool(_GLF_WRAPPED_LOOP(_injected_loop_counter > 0))) || false)), (bool(_GLF_IDENTITY(bool(_GLF_WRAPPED_LOOP(_injected_loop_counter > 0)), _GLF_IDENTITY((bool(_GLF_WRAPPED_LOOP(_injected_loop_counter > 0))), _GLF_IDENTITY(bool(bool((bool(_GLF_WRAPPED_LOOP(_injected_loop_counter > 0))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (bool(bool((bool(_GLF_WRAPPED_LOOP(_injected_loop_counter > 0)))))))) || false))) && true)); _injected_loop_counter --)
        {
         return;
        }
      }
    }
   for(int _injected_loop_counter = int(_GLF_ZERO(0.0, injectionSwitch.x)); _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter, min(_GLF_IDENTITY(_injected_loop_counter, (_injected_loop_counter) | (_injected_loop_counter)), _GLF_IDENTITY(_injected_loop_counter, (_GLF_IDENTITY(_injected_loop_counter, min(_injected_loop_counter, _injected_loop_counter))) | (_injected_loop_counter)))) < ((_GLF_IDENTITY(_GLF_IDENTITY(int(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0)), _GLF_IDENTITY(float(_GLF_IDENTITY(vec3((_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0)), 0.0, _GLF_ONE(1.0, injectionSwitch.y)), clamp(_GLF_IDENTITY(vec3((_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0)), 0.0, _GLF_ONE(1.0, injectionSwitch.y)), (vec3((_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0)), 0.0, _GLF_ONE(1.0, injectionSwitch.y))) / vec3(1.0, 1.0, 1.0)), _GLF_IDENTITY(vec3((_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0)), _GLF_IDENTITY(0.0, max(0.0, 0.0)), _GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), float(mat4(_GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0, 1.0, 1.0, 0.0, _GLF_IDENTITY(dot(vec4(1.0, 0.0, 0.0, 0.0), vec4(1.0, sin(0.0), 0.0, 0.0)), dot(vec4(1.0, 0.0, 0.0, 0.0), vec4(1.0, sin(0.0), 0.0, 0.0))), 0.0, 1.0, 0.0, 0.0, abs(1.0), _GLF_ONE(1.0, injectionSwitch.y), 0.0, 1.0, 0.0)))), _GLF_IDENTITY(vec3(0.0, 0.0, 0.0) + (vec3((_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0)), 0.0, _GLF_ONE(1.0, injectionSwitch.y))), (false ? _GLF_FUZZED(vec3(-8.9, 3.1, -4106.7924)) : _GLF_IDENTITY(vec3(0.0, 0.0, 0.0) + (vec3((_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0)), 0.0, _GLF_ONE(1.0, injectionSwitch.y))), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(vec3(0.0, 0.0, 0.0) + (vec3((_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0)), 0.0, _GLF_ONE(1.0, injectionSwitch.y))), vec3(mat2x4(vec3(0.0, 0.0, 0.0) + (vec3((_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0)), 0.0, _GLF_ONE(1.0, injectionSwitch.y))), 1.0, 1.0, 1.0, 0.0, 0.0))) : _GLF_FUZZED(vec3(1.5, 55.08, -897.957))))))), vec3((_GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat4x2(injectionSwitch, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0), mat4x2(mat4x3(mat4x2(injectionSwitch, 0.0, 1.0, 0.0, 1.0, 1.0, _GLF_IDENTITY(0.0, (0.0) * 1.0))))))).y, max(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat4x2(injectionSwitch, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0), mat4x2(mat4x3(mat4x2(injectionSwitch, 0.0, 1.0, 0.0, 1.0, 1.0, _GLF_IDENTITY(0.0, (0.0) * 1.0))))))).y, _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat4x2(injectionSwitch, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0), mat4x2(mat4x3(mat4x2(injectionSwitch, 0.0, 1.0, 0.0, 1.0, 1.0, _GLF_IDENTITY(0.0, (0.0) * 1.0))))))).y))) / 1.0)), 0.0, _GLF_ONE(1.0, injectionSwitch.y))))), (float(_GLF_IDENTITY(vec3((_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0)), 0.0, _GLF_ONE(1.0, injectionSwitch.y)), clamp(vec3((_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0)), 0.0, _GLF_ONE(1.0, injectionSwitch.y)), _GLF_IDENTITY(vec3((_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0)), 0.0, _GLF_ONE(1.0, injectionSwitch.y)), vec3(0.0, 0.0, 0.0) + (vec3(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(9858.9545)), vec2(_GLF_FUZZED(-4.6), (injectionSwitch)[1]), _GLF_IDENTITY(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true), bvec2(bvec2(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)))))).y, (injectionSwitch.y) / 1.0)), clamp((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(9858.9545)), _GLF_IDENTITY(vec2(_GLF_FUZZED(-4.6), (injectionSwitch)[1]), min(vec2(_GLF_FUZZED(-4.6), (injectionSwitch)[1]), vec2(_GLF_FUZZED(-4.6), (injectionSwitch)[1]))), bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))).y, (injectionSwitch.y) / 1.0)), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(9858.9545)), _GLF_IDENTITY(vec2(_GLF_FUZZED(-4.6), (injectionSwitch)[1]), vec2(mat3(vec2(_GLF_FUZZED(-4.6), (injectionSwitch)[1]), 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, tan(0.0)))), bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))).y, (injectionSwitch.y) / 1.0)), float(vec4((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(9858.9545)), vec2(_GLF_FUZZED(-4.6), (injectionSwitch)[1]), bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))).y, (injectionSwitch.y) / 1.0)), sqrt(1.0), 0.0, 0.0))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)), mix(vec2((injectionSwitch)[0], _GLF_FUZZED(9858.9545)), vec2(_GLF_FUZZED(-4.6), (injectionSwitch)[1]), bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))).y, (injectionSwitch.y) / 1.0)))), 0.0, _GLF_ONE(1.0, injectionSwitch.y)))), vec3((_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0)), 0.0, _GLF_ONE(1.0, injectionSwitch.y)))))) / 1.0)) / 1.0))), ~ (~ (int(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0)), _GLF_IDENTITY(float(_GLF_IDENTITY(vec3((_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0)), 0.0, _GLF_ONE(1.0, injectionSwitch.y)), clamp(_GLF_IDENTITY(vec3((_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0)), 0.0, _GLF_ONE(1.0, injectionSwitch.y)), (vec3((_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0)), 0.0, _GLF_ONE(1.0, injectionSwitch.y))) / vec3(1.0, 1.0, 1.0)), _GLF_IDENTITY(vec3((_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0)), _GLF_IDENTITY(0.0, max(0.0, 0.0)), _GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), float(mat4(_GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0, 1.0, 1.0, 0.0, _GLF_IDENTITY(dot(vec4(1.0, 0.0, 0.0, 0.0), vec4(1.0, sin(0.0), 0.0, 0.0)), dot(vec4(1.0, 0.0, 0.0, 0.0), vec4(1.0, sin(0.0), 0.0, 0.0))), 0.0, 1.0, 0.0, 0.0, abs(1.0), _GLF_ONE(1.0, injectionSwitch.y), 0.0, 1.0, 0.0)))), vec3(0.0, 0.0, 0.0) + (vec3((_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0)), 0.0, _GLF_ONE(1.0, injectionSwitch.y)))), vec3((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat4x2(injectionSwitch, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0), mat4x2(mat4x3(mat4x2(injectionSwitch, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0)))))).y) / 1.0), (_GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat4x2(injectionSwitch, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0), mat4x2(mat4x3(mat4x2(injectionSwitch, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0)))))).y) / 1.0)) / 1.0)), 0.0, _GLF_ONE(1.0, injectionSwitch.y))))), (float(_GLF_IDENTITY(vec3((_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0)), 0.0, _GLF_ONE(1.0, injectionSwitch.y)), clamp(vec3((_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY((injectionSwitch.y), _GLF_IDENTITY(float(vec3((injectionSwitch.y), 1.0, sin(0.0))), max(float(vec3((injectionSwitch.y), 1.0, sin(0.0))), float(vec3((injectionSwitch.y), 1.0, sin(0.0)))))) / 1.0)), 0.0, _GLF_ONE(1.0, injectionSwitch.y)), _GLF_IDENTITY(vec3((_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0)), 0.0, _GLF_ONE(1.0, injectionSwitch.y)), vec3(0.0, 0.0, 0.0) + (vec3(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(9858.9545)), vec2(_GLF_FUZZED(-4.6), (injectionSwitch)[1]), bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))).y, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y) / 1.0)), clamp((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(9858.9545)), _GLF_IDENTITY(vec2(_GLF_FUZZED(-4.6), (injectionSwitch)[1]), (_GLF_IDENTITY(vec2(_GLF_FUZZED(-4.6), (injectionSwitch)[1]), mix(vec2((vec2(_GLF_FUZZED(-4.6), (injectionSwitch)[1]))[0], (vec2(_GLF_FUZZED(-4.6), (injectionSwitch)[1]))[1]), vec2(_GLF_FUZZED(-1349.1184), _GLF_FUZZED(-8.3)), bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) - vec2(0.0, 0.0)), _GLF_IDENTITY(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true), bvec2(bvec2(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)))))).y, (injectionSwitch.y) / 1.0)), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(9858.9545)), vec2(_GLF_FUZZED(-4.6), (injectionSwitch)[1]), bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))).y, (injectionSwitch.y) / 1.0)), float(vec4(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY((injectionSwitch), min((injectionSwitch), (injectionSwitch)))[0], _GLF_FUZZED(9858.9545)), vec2(_GLF_FUZZED(-4.6), (injectionSwitch)[1]), bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))).y, (injectionSwitch.y) / 1.0)), (false ? _GLF_FUZZED(-47.91) : (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY((injectionSwitch), min((injectionSwitch), (injectionSwitch)))[0], _GLF_FUZZED(9858.9545)), vec2(_GLF_FUZZED(-4.6), (injectionSwitch)[1]), bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))).y, (injectionSwitch.y) / 1.0)))), sqrt(1.0), 0.0, 0.0))), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(_GLF_IDENTITY(9858.9545, _GLF_IDENTITY(float(mat4x2(9858.9545, 0.0, 0.0, determinant(mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, length(vec2(0.0, 0.0)), 0.0, 0.0, 1.0, 1.0, 0.0)), 1.0, 1.0, 0.0, 0.0)), (false ? _GLF_FUZZED(dot(vec3(288.878, -9264.9952, -92.85), vec3(-0.0, -802.780, -70.50))) : _GLF_IDENTITY(float(mat4x2(9858.9545, 0.0, 0.0, determinant(mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, length(vec2(0.0, 0.0)), 0.0, 0.0, 1.0, 1.0, 0.0)), 1.0, 1.0, 0.0, 0.0)), float(float(float(mat4x2(9858.9545, 0.0, 0.0, determinant(mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, length(vec2(0.0, 0.0)), 0.0, 0.0, 1.0, 1.0, 0.0)), 1.0, 1.0, 0.0, 0.0)))))))))), vec2(_GLF_FUZZED(-4.6), _GLF_IDENTITY((injectionSwitch)[1], (true ? (injectionSwitch)[1] : _GLF_FUZZED(-7.2)))), bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))).y, _GLF_IDENTITY((injectionSwitch.y) / 1.0, mix(float(_GLF_FUZZED(-84.99)), float(_GLF_IDENTITY((injectionSwitch.y) / 1.0, max((injectionSwitch.y) / 1.0, (injectionSwitch.y) / 1.0))), bool(true))))))), 0.0, _GLF_ONE(1.0, injectionSwitch.y)))), vec3((_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0)), 0.0, _GLF_ONE(1.0, injectionSwitch.y)))))) / 1.0)) / 1.0)))))), max(int(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0), clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0), 1.0 * (_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0))), _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0), _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0)))), ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0), clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0), 1.0 * (_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0))), _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0), _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0))))) - log(1.0)) / 1.0))), _GLF_IDENTITY(int(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(609.834), _GLF_FUZZED(-2210.9697)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))) : _GLF_FUZZED(injectionSwitch))), injectionSwitch)), min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(609.834), _GLF_FUZZED(-2210.9697)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))) : _GLF_FUZZED(injectionSwitch))), injectionSwitch)), vec2(0.0, 0.0) + (_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(609.834), _GLF_FUZZED(-2210.9697)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))) : _GLF_FUZZED(injectionSwitch))), injectionSwitch)))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(609.834), _GLF_FUZZED(-2210.9697)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))) : _GLF_FUZZED(injectionSwitch))), injectionSwitch)), min(_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(609.834), _GLF_FUZZED(-2210.9697)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))) : _GLF_FUZZED(injectionSwitch))), injectionSwitch)), _GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(609.834), _GLF_FUZZED(-2210.9697)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))) : _GLF_FUZZED(injectionSwitch))), injectionSwitch)))))).y, (injectionSwitch.y) / 1.0)) / 1.0))), 1 * _GLF_IDENTITY((int(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0)) / 1.0)))), (_GLF_IDENTITY((int(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(-3.6)), bool(false)))) / 1.0)) / 1.0)))), ~ (~ ((int(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0)) / 1.0)))))))) | (_GLF_IDENTITY((int(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0)) / 1.0)))), 1 * ((int(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0)) / 1.0))))))))))) << _GLF_IDENTITY(_GLF_IDENTITY(int(0), clamp(_GLF_IDENTITY(int(0), _GLF_IDENTITY((int(0)), ((int(0))) / 1) | (int(0))), int(0), int(0))), int(0))) >> _GLF_IDENTITY(int(0), int(0)))); _injected_loop_counter ++)
    {
     return;
    }
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  {
   if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
    }
   else
    {
     return;
    }
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   do
    {
     return;
    }
   while(_GLF_WRAPPED_LOOP(false));
  }
 if(_GLF_WRAPPED_IF_TRUE(true))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat2x4(injectionSwitch, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0)), _GLF_IDENTITY(vec2(_GLF_IDENTITY(mat3x2(vec2(mat2x4(injectionSwitch, 1.0, 1.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED((4.2))), float(_GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(-5.3)))), bool(true))))), 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0), (mat3x2(vec2(mat2x4(injectionSwitch, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0)), 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0)) * mat3(1.0))), mat2(1.0) * (vec2(_GLF_IDENTITY(mat3x2(vec2(mat2x4(injectionSwitch, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0)), 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0), (mat3x2(vec2(mat2x4(injectionSwitch, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0)), 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0)) * mat3(1.0))))))).x > injectionSwitch.y))))
    {
     do
      {
       return;
      }
     while(_GLF_WRAPPED_LOOP(false));
    }
   do
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
      {
       if(_GLF_DEAD(false))
        break;
       if(_GLF_DEAD(false))
        {
         if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
          }
         else
          {
           return;
          }
        }
       for(int _injected_loop_counter = (0 >> _GLF_IDENTITY(int(0), _GLF_IDENTITY(int(0), clamp(int(0), int(0), int(0))))); _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
        {
         if(_GLF_DEAD(false))
          continue;
         return;
        }
      }
    }
   while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, _GLF_IDENTITY(true && (false), _GLF_IDENTITY((true && (false)), bool(bvec4((true && (false)), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))) || false))));
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
    }
   else
    {
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(false), bool(bvec4(bool(false), true, false, true)))), true && (_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(false), bool(bvec4(bool(false), true, false, true)))), false || (bool(_GLF_IDENTITY(bool(false), bool(bvec4(bool(false), true, false, true))))))))), false || (_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, false, true), bvec3(bvec3(bvec3(false, false, true))))))))))
      return;
    }
  }
 else
  {
  }
 uint workgroup_size = gl_WorkGroupSize.x;
 uint workgroup_id = gl_WorkGroupID.x;
 if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
  }
 else
  {
   if(_GLF_DEAD(false))
    {
     do
      {
       for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
        {
         return;
        }
      }
     while(_GLF_WRAPPED_LOOP(false));
    }
  }
 uint workgroup_base = workgroup_size * _GLF_IDENTITY(_GLF_IDENTITY(workgroup_id, (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_id, (_GLF_IDENTITY(workgroup_id, (workgroup_id) | (workgroup_id))) / 1u), (workgroup_id) << (9598u & 0u))) | (_GLF_IDENTITY(workgroup_id, _GLF_IDENTITY(clamp(workgroup_id, workgroup_id, _GLF_IDENTITY(workgroup_id, max(workgroup_id, workgroup_id))), _GLF_IDENTITY(uint(uvec4(clamp(workgroup_id, workgroup_id, _GLF_IDENTITY(workgroup_id, max(workgroup_id, workgroup_id))), 1u, 0u, 1u)), (false ? _GLF_FUZZED(subgroup_size) : uint(uvec4(clamp(workgroup_id, workgroup_id, _GLF_IDENTITY(workgroup_id, max(workgroup_id, workgroup_id))), 1u, 0u, 1u)))))))), 0u + (workgroup_id));
 if(_GLF_DEAD(false))
  {
   if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
    }
   else
    {
     return;
    }
  }
 if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_DEAD(false))), ! (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec2(_GLF_DEAD(false), false)), bool(bool(bool(bvec2(_GLF_DEAD(false), false))))))), false || (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec2(_GLF_DEAD(false), false)), bool(bool(bool(bvec2(_GLF_DEAD(false), false))))))), ! (_GLF_IDENTITY(! (! (_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec2(_GLF_DEAD(false), false)), bool(bool(bool(bvec2(_GLF_DEAD(false), false)))))))), ! (! (! (! (_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec2(_GLF_DEAD(false), false)), bool(bool(bool(bvec2(_GLF_DEAD(false), false))))))))))))))), (! (_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec2(_GLF_DEAD(false), false)), bool(bool(bool(bvec2(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, false)))), false))))), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(bool(bvec2(_GLF_DEAD(false), false)), bool(bool(bool(bvec2(_GLF_DEAD(false), false))))))), ! (! (_GLF_IDENTITY(bool(bool(_GLF_IDENTITY(bool(bvec2(_GLF_DEAD(false), false)), bool(bool(bool(bvec2(_GLF_DEAD(false), false))))))), (bool(bool(_GLF_IDENTITY(bool(bvec2(_GLF_DEAD(false), false)), bool(bool(bool(bvec2(_GLF_DEAD(false), false)))))))) && true)))))))) && true))), false || (_GLF_DEAD(false))))
  return;
 uint virtual_gid = workgroup_base + _GLF_IDENTITY(subgroup_id, ~ (~ (subgroup_id))) * subgroup_size + subgroup_local_id;
 if(_GLF_WRAPPED_IF_FALSE(false))
  {
  }
 else
  {
   for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
    {
     if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), bool(bool(bool(bool(false)))))))))))
      {
       for(int _injected_loop_counter = (0 & 86225); _GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter < (1 | 1)), (_GLF_WRAPPED_LOOP(_injected_loop_counter < (1 | 1))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))); _injected_loop_counter ++)
        {
         do
          {
           if(_GLF_DEAD(false))
            break;
           if(_GLF_DEAD(false))
            {
             for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
              {
               for(int _injected_loop_counter = (((((_GLF_IDENTITY(0, int(int(_GLF_IDENTITY(0, _GLF_IDENTITY((0) ^ 0, ((0) ^ 0) >> int(_GLF_ZERO(0.0, injectionSwitch.x))))))) | 1) << _GLF_IDENTITY(int(1), int(1))) >> _GLF_IDENTITY(int(_GLF_IDENTITY(1, (1) | (1))), int(1))) << _GLF_IDENTITY(int(4), int(4))) >> _GLF_IDENTITY(int(_GLF_IDENTITY(4, (false ? _GLF_FUZZED(_injected_loop_counter) : _GLF_IDENTITY(4, (4) | 0)))), int(4))); _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter != _GLF_IDENTITY(0, _GLF_IDENTITY(int(ivec3(_GLF_IDENTITY(0, _GLF_IDENTITY((_GLF_IDENTITY(0, ~ (~ (0)))), _GLF_IDENTITY(~ (~ ((_GLF_IDENTITY(0, ~ (~ (0)))))), (true ? ~ (~ ((_GLF_IDENTITY(0, ~ (~ (0)))))) : _GLF_FUZZED(_injected_loop_counter)))) | (0)), 1, 0)), min(_GLF_IDENTITY(int(ivec3(_GLF_IDENTITY(0, _GLF_IDENTITY((_GLF_IDENTITY(0, ~ (~ (0)))), ~ (~ ((_GLF_IDENTITY(0, ~ (~ (0))))))) | (0)), 1, 0)), (int(ivec3(_GLF_IDENTITY(0, _GLF_IDENTITY((_GLF_IDENTITY(0, ~ (~ (0)))), ~ (~ ((_GLF_IDENTITY(0, ~ (~ (0))))))) | (_GLF_IDENTITY(0, int(_GLF_IDENTITY(ivec4(_GLF_IDENTITY(0, (0) >> 0), 1, 0, 1), ~ (~ (ivec4(_GLF_IDENTITY(0, (0) >> 0), 1, 0, 1)))))))), 1, 0))) * 1), _GLF_IDENTITY(int(ivec3(_GLF_IDENTITY(0, _GLF_IDENTITY((_GLF_IDENTITY(0, ~ (~ _GLF_IDENTITY((0), 0 + ((0)))))), ~ (~ ((_GLF_IDENTITY(0, ~ (~ (0))))))) | (_GLF_IDENTITY(0, (false ? _GLF_FUZZED(_injected_loop_counter) : _GLF_IDENTITY(0, ~ (~ (0))))))), _GLF_IDENTITY(1, (true ? _GLF_IDENTITY(1, 0 ^ (_GLF_IDENTITY(1, int(int(1))))) : _GLF_FUZZED(_injected_loop_counter))), 0)), (int(ivec3(_GLF_IDENTITY(0, _GLF_IDENTITY((_GLF_IDENTITY(0, ~ (~ (0)))), ~ (~ ((_GLF_IDENTITY(0, ~ (~ (0))))))) | (0)), 1, 0))) | (int(ivec3(_GLF_IDENTITY(0, _GLF_IDENTITY((_GLF_IDENTITY(0, ~ (~ (0)))), ~ (~ ((_GLF_IDENTITY(0, ~ (~ (0))))))) | (0)), 1, 0))))))), ! (! (_injected_loop_counter != _GLF_IDENTITY(0, _GLF_IDENTITY(int(ivec3(_GLF_IDENTITY(0, _GLF_IDENTITY((_GLF_IDENTITY(0, ~ (~ (0)))), ~ (~ ((_GLF_IDENTITY(0, _GLF_IDENTITY(~ (~ (0)), (_GLF_IDENTITY(~ (~ (0)), clamp(~ (~ (0)), ~ (~ (0)), ~ (~ (0))))) << 0)))))) | (0)), 1, 0)), min(_GLF_IDENTITY(_GLF_IDENTITY(int(ivec3(_GLF_IDENTITY(0, _GLF_IDENTITY((_GLF_IDENTITY(0, ~ (~ (0)))), ~ (~ ((_GLF_IDENTITY(0, ~ (~ (0))))))) | (0)), 1, 0)), (int(ivec3(_GLF_IDENTITY(0, _GLF_IDENTITY((_GLF_IDENTITY(0, ~ (~ (0)))), ~ (~ ((_GLF_IDENTITY(0, ~ (~ (0))))))) | (0)), 1, 0))) - 0), (int(ivec3(_GLF_IDENTITY(0, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(0, ~ (~ (0))), max(_GLF_IDENTITY(0, ~ (~ (0))), _GLF_IDENTITY(0, ~ (~ (0)))))), ~ (~ ((_GLF_IDENTITY(0, ~ (~ (0))))))) | (0)), 1, 0))) * 1), _GLF_IDENTITY(int(ivec3(_GLF_IDENTITY(0, _GLF_IDENTITY((_GLF_IDENTITY(0, ~ (_GLF_IDENTITY(_GLF_IDENTITY(~ (0), max(~ (0), ~ (0))), int(_GLF_IDENTITY(int(~ (0)), min(int(~ (0)), _GLF_IDENTITY(int(~ (0)), 0 | (int(~ (0))))))))))), ~ (~ ((_GLF_IDENTITY(0, ~ (~ (0))))))) | _GLF_IDENTITY((0), 0 ^ ((0)))), 1, 0)), (int(_GLF_IDENTITY(ivec3(_GLF_IDENTITY(_GLF_IDENTITY(0, (0) ^ 0), _GLF_IDENTITY((_GLF_IDENTITY(0, ~ (~ (0)))), ~ (~ ((_GLF_IDENTITY(0, ~ (~ (0))))))) | (0)), 1, 0), ivec3(ivec3(_GLF_IDENTITY(ivec3(_GLF_IDENTITY(0, _GLF_IDENTITY((_GLF_IDENTITY(0, ~ (~ (0)))), ~ (~ ((_GLF_IDENTITY(0, ~ (~ (0))))))) | (0)), 1, 0), max(ivec3(_GLF_IDENTITY(0, _GLF_IDENTITY((_GLF_IDENTITY(0, ~ (~ (0)))), ~ (~ ((_GLF_IDENTITY(0, ~ (~ (0))))))) | (0)), 1, 0), ivec3(_GLF_IDENTITY(0, _GLF_IDENTITY((_GLF_IDENTITY(0, ~ _GLF_IDENTITY((~ (0)), (true ? (~ (0)) : _GLF_FUZZED(_injected_loop_counter))))), ~ (~ ((_GLF_IDENTITY(0, ~ (~ (0))))))) | (0)), 1, 0)))))))) | (int(ivec3(_GLF_IDENTITY(0, _GLF_IDENTITY((_GLF_IDENTITY(0, ~ (~ (0)))), ~ (~ ((_GLF_IDENTITY(0, ~ (~ (0))))))) | (0)), 1, 0))))))))))); _injected_loop_counter --)
                {
                 if(_GLF_WRAPPED_IF_FALSE(false))
                  {
                  }
                 else
                  {
                   do
                    {
                     return;
                    }
                   while(_GLF_WRAPPED_LOOP(false));
                  }
                 for(int _injected_loop_counter = ((0 >> _GLF_IDENTITY(int(3), int(3))) << _GLF_IDENTITY(int(5), int(5))); _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
                  {
                   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                    break;
                   if(_GLF_DEAD(false))
                    return;
                  }
                }
              }
            }
          }
         while(_GLF_WRAPPED_LOOP(false));
         if(_GLF_DEAD(false))
          break;
        }
       if(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_DEAD(false), _GLF_IDENTITY(false, true && (false)))))), true && (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec2(_GLF_DEAD(false), false)), true && (bool(bvec2(_GLF_DEAD(false), false)))))), bool(bvec4(! (_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_DEAD(false), false)))), false, true, false))))))))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            break;
           continue;
          }
         return;
        }
       if(_GLF_DEAD(false))
        break;
      }
     else
      {
       if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, true && (true))))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            return;
           for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
            {
             return;
            }
          }
        }
       else
        {
        }
      }
    }
  }
 do
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) || false), (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  return;
 uint next_virtual_gid = _GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_id * subgroup_size, (_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) | (subgroup_id * subgroup_size))) - 0u), ~ (~ (workgroup_base + _GLF_IDENTITY(subgroup_id * subgroup_size, (_GLF_IDENTITY(subgroup_id * subgroup_size, _GLF_IDENTITY((subgroup_id * subgroup_size) | (subgroup_id * subgroup_size), min((subgroup_id * subgroup_size) | (subgroup_id * subgroup_size), (subgroup_id * subgroup_size) | (subgroup_id * subgroup_size))))) - 0u)))) + (_GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, 0u + ((subgroup_local_id + 1) % subgroup_size)), 0u | (_GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, (_GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, ((subgroup_local_id + 1) % _GLF_IDENTITY(subgroup_size, (subgroup_size) | (_GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, subgroup_size))))) + 0u), (_GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, ((subgroup_local_id + 1) % _GLF_IDENTITY(subgroup_size, (subgroup_size) | (_GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, subgroup_size))))) + 0u), 0u ^ (_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, ((subgroup_local_id + 1) % _GLF_IDENTITY(subgroup_size, (subgroup_size) | (_GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, subgroup_size))))) + 0u)))) ^ 0u)) / 1u), (_GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, ((subgroup_local_id + 1) % subgroup_size) / 1u), _GLF_IDENTITY((_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, _GLF_IDENTITY((_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, ((subgroup_local_id + 1) % subgroup_size) | ((subgroup_local_id + 1) % subgroup_size))) / _GLF_IDENTITY(1u, (true ? 1u : _GLF_FUZZED(workgroup_id))), min((_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, (_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, 0u | ((subgroup_local_id + 1) % subgroup_size))) | ((subgroup_local_id + 1) % subgroup_size))) / _GLF_IDENTITY(1u, (_GLF_IDENTITY(true ? 1u : _GLF_FUZZED(workgroup_id), max(true ? 1u : _GLF_FUZZED(workgroup_id), true ? 1u : _GLF_FUZZED(workgroup_id))))), (_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, ((subgroup_local_id + 1) % subgroup_size) | ((subgroup_local_id + 1) % subgroup_size))) / _GLF_IDENTITY(1u, (true ? 1u : _GLF_FUZZED(workgroup_id))))))), max((_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, _GLF_IDENTITY((_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, ((subgroup_local_id + 1) % subgroup_size) | ((subgroup_local_id + 1) % subgroup_size))) / _GLF_IDENTITY(1u, (true ? 1u : _GLF_FUZZED(workgroup_id))), min((_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, (_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, 0u | ((subgroup_local_id + 1) % subgroup_size))) | ((subgroup_local_id + 1) % subgroup_size))) / _GLF_IDENTITY(1u, (_GLF_IDENTITY(true ? 1u : _GLF_FUZZED(workgroup_id), max(true ? 1u : _GLF_FUZZED(workgroup_id), true ? 1u : _GLF_FUZZED(workgroup_id))))), (_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, ((subgroup_local_id + 1) % subgroup_size) | ((subgroup_local_id + 1) % subgroup_size))) / _GLF_IDENTITY(1u, (true ? 1u : _GLF_FUZZED(workgroup_id))))))), (_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, _GLF_IDENTITY((_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, ((subgroup_local_id + 1) % subgroup_size) | ((subgroup_local_id + 1) % subgroup_size))) / _GLF_IDENTITY(1u, (true ? 1u : _GLF_FUZZED(workgroup_id))), min((_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, (_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, 0u | ((subgroup_local_id + 1) % subgroup_size))) | ((subgroup_local_id + 1) % subgroup_size))) / _GLF_IDENTITY(1u, (_GLF_IDENTITY(true ? 1u : _GLF_FUZZED(workgroup_id), max(true ? 1u : _GLF_FUZZED(workgroup_id), true ? 1u : _GLF_FUZZED(workgroup_id))))), (_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, ((subgroup_local_id + 1) % subgroup_size) | ((subgroup_local_id + 1) % subgroup_size))) / _GLF_IDENTITY(1u, (true ? 1u : _GLF_FUZZED(workgroup_id))))))))) ^ 0u)) ^ 0u))));
 for(int _injected_loop_counter = int(_GLF_ONE(1.0, injectionSwitch.y)); _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter, int(ivec4(_injected_loop_counter, (_GLF_IDENTITY(0 << _GLF_IDENTITY(int(6), int(6)), (0 << _GLF_IDENTITY(int(0), int(0))) ^ (0 << _GLF_IDENTITY(int(6), int(6))))), 0, 0))) != 0); _injected_loop_counter --)
  {
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
    }
   else
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, false || (false)), (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(-940.331))) > injectionSwitch.y))))
      return;
    }
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, false || (false)), false, false, _GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, false || (false))))))))))
      return;
     if(_GLF_DEAD(false))
      break;
    }
   else
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        break;
       return;
       if(_GLF_DEAD(false))
        break;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))))
      return;
     atomicStore(buf[virtual_gid], _GLF_IDENTITY(uint(1), 0u ^ (_GLF_IDENTITY(uint(1), _GLF_IDENTITY(~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(uint(1), clamp(uint(1), uint(1), _GLF_IDENTITY(_GLF_IDENTITY(uint(1), (uint(1)) >> 0u), ~ (~ (uint(1))))))), clamp(~ (uint(1)), ~ (_GLF_IDENTITY(uint(1), (_GLF_IDENTITY(uint(1), _GLF_IDENTITY((uint(1)) << 0u, ((uint(1)) << 0u) | 0u))) | 0u)), ~ (uint(_GLF_IDENTITY(1, int(ivec4(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(_injected_loop_counter)))) >> 0), 1, _GLF_IDENTITY(0, (0) - 0), 1)))))))), (_GLF_IDENTITY(~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(uint(1), clamp(uint(1), uint(1), _GLF_IDENTITY(uint(_GLF_IDENTITY(1, (1) >> 0)), ~ (_GLF_IDENTITY(~ (uint(1)), min(~ (uint(1)), ~ (uint(1))))))))), clamp(~ (uint(1)), ~ (_GLF_IDENTITY(uint(1), (_GLF_IDENTITY(uint(1), (uint(1)) << 0u)) | 0u)), ~ (uint(_GLF_IDENTITY(_GLF_IDENTITY(1, (1) | 0), int(ivec4(_GLF_IDENTITY(_GLF_IDENTITY(1, clamp(1, 1, _GLF_IDENTITY(1, clamp(1, 1, 1)))), (_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(_injected_loop_counter)))) >> 0), 1, _GLF_IDENTITY(0, (0) - 0), 1)))))))), clamp(~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(uint(1), clamp(uint(1), uint(1), _GLF_IDENTITY(uint(1), ~ (~ (_GLF_IDENTITY(uint(1), 0u ^ (uint(1))))))))), clamp(~ (uint(1)), ~ (_GLF_IDENTITY(uint(1), (_GLF_IDENTITY(uint(1), (uint(1)) << 0u)) | 0u)), ~ (uint(_GLF_IDENTITY(1, int(ivec4(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(_injected_loop_counter)))) >> 0), 1, _GLF_IDENTITY(_GLF_IDENTITY(0, (0) - 0), (true ? _GLF_IDENTITY(0, (0) - 0) : _GLF_FUZZED(_injected_loop_counter))), 1)))))))), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY(uint(1), clamp(uint(1), uint(1), _GLF_IDENTITY(uint(1), ~ (~ (uint(1)))))), (false ? _GLF_FUZZED(subgroup_local_id) : _GLF_IDENTITY(uint(1), clamp(uint(1), uint(1), _GLF_IDENTITY(uint(1), ~ (~ (uint(1))))))))), clamp(~ (uint(1)), ~ (_GLF_IDENTITY(uint(1), (_GLF_IDENTITY(uint(1), (uint(1)) << 0u)) | 0u)), ~ (uint(_GLF_IDENTITY(1, int(ivec4(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(_injected_loop_counter)))) >> 0), 1, _GLF_IDENTITY(0, (0) - 0), 1)))))))), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(uint(1), clamp(uint(1), uint(1), _GLF_IDENTITY(uint(1), ~ (~ (uint(1))))))), clamp(~ (uint(1)), ~ (_GLF_IDENTITY(uint(1), (_GLF_IDENTITY(uint(1), (uint(1)) << 0u)) | 0u)), ~ (uint(_GLF_IDENTITY(1, int(ivec4(_GLF_IDENTITY(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(_injected_loop_counter)))) >> 0), (_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(_injected_loop_counter)))) >> 0)) / 1), 1, _GLF_IDENTITY(0, (0) - 0), 1))))))))))) ^ 0u)))), 4, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(64, min(64, 64)), 1 * (_GLF_IDENTITY(64, min(64, 64)))), min(_GLF_IDENTITY(_GLF_IDENTITY(64, min(64, 64)), 1 * (_GLF_IDENTITY(64, min(64, 64)))), _GLF_IDENTITY(_GLF_IDENTITY(64, min(64, 64)), 1 * (_GLF_IDENTITY(64, min(64, 64)))))), 4);
     if(_GLF_DEAD(false))
      continue;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! (false)))))))))))
    return;
   if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
    }
   else
    {
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    {
     for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
      {
       do
        {
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_IDENTITY(injectionSwitch.y, float(mat3(injectionSwitch.y, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, sqrt(1.0), 0.0)))), float(_GLF_FUZZED(-5.8)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))
            return;
           continue;
          }
        }
       while(_GLF_WRAPPED_LOOP(false));
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      break;
     continue;
    }
  }
 if(_GLF_WRAPPED_IF_TRUE(true))
  {
   atomicStore(buf[next_virtual_gid], _GLF_IDENTITY(uint(2), (uint(2)) - 0u), 4, 64, 4);
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
  }
 else
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))))
    return;
   do
    {
     if(_GLF_WRAPPED_IF_TRUE(true))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         return;
         if(_GLF_WRAPPED_IF_TRUE(true))
          {
           if(_GLF_DEAD(false))
            return;
          }
         else
          {
          }
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, 1.0 * (injectionSwitch.y))))))
        return;
      }
     else
      {
      }
    }
   while(_GLF_WRAPPED_LOOP(false));
  }
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(76.20) : injectionSwitch.x)) > injectionSwitch.y))), bool(bvec4(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(76.20) : injectionSwitch.x)) > injectionSwitch.y))), false, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(bool(! (false))))))))
    return;
   for(int _injected_loop_counter = _GLF_IDENTITY(int(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), mix(float(_GLF_FUZZED(9.7)), float(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), max(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), float(mat4x2(_GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(0.5)), float(0.0), _GLF_IDENTITY(_GLF_IDENTITY(bool(true), (bool(true)) || false), ! (_GLF_IDENTITY(! (bool(true)), false || (! (bool(true)))))))), 1.0, 1.0, 1.0, 0.0))), _GLF_ONE(1.0, injectionSwitch.y)))), bool(true)))), (int(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, vec2(mat4x2(injectionSwitch, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0)))) / sqrt(abs(vec2(1.0, 1.0)))).y))) << 0); _GLF_WRAPPED_LOOP(_injected_loop_counter > _GLF_IDENTITY(0, max(0, 0))); _injected_loop_counter --)
    {
     if(_GLF_DEAD(false))
      break;
     if(_GLF_DEAD(false))
      break;
     if(_GLF_DEAD(false))
      continue;
     if(_GLF_DEAD(false))
      continue;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      continue;
     for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
      {
       if(_GLF_DEAD(false))
        return;
      }
     return;
     for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > int(_GLF_ZERO(0.0, injectionSwitch.x))); _injected_loop_counter --)
      {
       if(_GLF_DEAD(false))
        return;
      }
     for(int _injected_loop_counter = int(_GLF_ZERO(0.0, injectionSwitch.x)); _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
      {
       if(_GLF_DEAD(false))
        break;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
      }
    }
  }
 for(int _injected_loop_counter = int(_GLF_ZERO(0.0, injectionSwitch.x)); _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
  {
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
     if(_GLF_DEAD(false))
      return;
    }
   else
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y))))), bool(bvec4(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-3.7)), float(injectionSwitch.x), bool(true)))) * 1.0) > injectionSwitch.y)), false, true, true))), bool(bvec2(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), ! (! (! ((injectionSwitch.x > injectionSwitch.y))))))))))), bool(bvec4(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-3.7)), float(injectionSwitch.x), bool(true)))) * 1.0) > injectionSwitch.y)), false, true, true))), false)))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       do
        {
         return;
        }
       while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
        {
         if(_GLF_WRAPPED_IF_FALSE(false))
          {
          }
         else
          {
           return;
          }
        }
       if(_GLF_DEAD(false))
        return;
       do
        {
         return;
         for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
          {
           if(_GLF_DEAD(false))
            return;
          }
         if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            return;
          }
         else
          {
          }
         if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, float(_GLF_IDENTITY(mat3x4(injectionSwitch.y, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, _GLF_IDENTITY(1.0, float(_GLF_IDENTITY(mat2(1.0, 0.0, 0.0, 1.0), transpose(_GLF_IDENTITY(transpose(mat2(1.0, 0.0, 0.0, 1.0)), transpose(transpose(transpose(mat2(1.0, 0.0, 0.0, 1.0)))))))))), transpose(transpose(mat3x4(injectionSwitch.y, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0)))))), min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, float(_GLF_IDENTITY(mat3x4(injectionSwitch.y, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, _GLF_IDENTITY(1.0, float(_GLF_IDENTITY(mat2(1.0, 0.0, 0.0, 1.0), transpose(_GLF_IDENTITY(transpose(mat2(1.0, 0.0, 0.0, 1.0)), transpose(transpose(transpose(mat2(1.0, 0.0, 0.0, 1.0)))))))))), transpose(transpose(mat3x4(injectionSwitch.y, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0)))))), max(_GLF_IDENTITY(injectionSwitch.y, float(_GLF_IDENTITY(mat3x4(injectionSwitch.y, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, _GLF_IDENTITY(1.0, float(_GLF_IDENTITY(mat2(1.0, 0.0, 0.0, 1.0), transpose(_GLF_IDENTITY(transpose(mat2(1.0, 0.0, 0.0, 1.0)), transpose(transpose(transpose(mat2(1.0, 0.0, 0.0, 1.0)))))))))), transpose(transpose(mat3x4(injectionSwitch.y, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0)))))), _GLF_IDENTITY(injectionSwitch.y, float(_GLF_IDENTITY(mat3x4(injectionSwitch.y, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, _GLF_IDENTITY(1.0, float(_GLF_IDENTITY(mat2(1.0, 0.0, 0.0, 1.0), transpose(_GLF_IDENTITY(transpose(mat2(1.0, 0.0, 0.0, 1.0)), transpose(transpose(transpose(mat2(1.0, 0.0, 0.0, 1.0)))))))))), transpose(transpose(mat3x4(injectionSwitch.y, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0)))))))), _GLF_IDENTITY(injectionSwitch.y, float(_GLF_IDENTITY(mat3x4(injectionSwitch.y, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, _GLF_IDENTITY(1.0, float(_GLF_IDENTITY(mat2(1.0, 0.0, 0.0, 1.0), transpose(_GLF_IDENTITY(transpose(mat2(1.0, 0.0, 0.0, 1.0)), transpose(transpose(transpose(mat2(1.0, 0.0, 0.0, 1.0)))))))))), transpose(transpose(mat3x4(injectionSwitch.y, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0)))))))), max(_GLF_IDENTITY(injectionSwitch.y, float(_GLF_IDENTITY(mat3x4(injectionSwitch.y, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, _GLF_IDENTITY(1.0, float(_GLF_IDENTITY(mat2(1.0, 0.0, 0.0, 1.0), transpose(_GLF_IDENTITY(transpose(mat2(1.0, 0.0, 0.0, 1.0)), transpose(transpose(_GLF_IDENTITY(transpose(mat2(1.0, 0.0, 0.0, 1.0)), (true ? _GLF_IDENTITY(transpose(mat2(1.0, 0.0, 0.0, 1.0)), mat2(1.0) * (transpose(mat2(_GLF_IDENTITY(1.0, max(1.0, 1.0)), 0.0, 0.0, 1.0)))) : _GLF_FUZZED(mat2(-45.27, 920.666, -450.882, 4.9)))))))))))), transpose(transpose(mat3x4(injectionSwitch.y, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0)))))), _GLF_IDENTITY(injectionSwitch.y, float(_GLF_IDENTITY(mat3x4(injectionSwitch.y, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, _GLF_IDENTITY(1.0, float(_GLF_IDENTITY(mat2(1.0, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-2761.6464)), float(_GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0))), bool(true))), 0.0, 1.0), transpose(_GLF_IDENTITY(transpose(mat2(1.0, 0.0, 0.0, 1.0)), transpose(transpose(transpose(mat2(1.0, _GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, (0.0) + 0.0), 0.0)), 0.0, 1.0)))))))))), transpose(transpose(mat3x4(injectionSwitch.y, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0))))))))) - 0.0)), ! (_GLF_IDENTITY(! ((injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat4(injectionSwitch, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(1.0, clamp(1.0, _GLF_IDENTITY(1.0, clamp(1.0, 1.0, _GLF_IDENTITY(_GLF_IDENTITY(1.0, max(1.0, 1.0)), mix(float(_GLF_FUZZED(-5000.0804)), float(_GLF_IDENTITY(_GLF_IDENTITY(1.0, max(1.0, 1.0)), min(_GLF_IDENTITY(1.0, max(1.0, 1.0)), _GLF_IDENTITY(1.0, max(1.0, 1.0))))), bool(true))))), 1.0)), exp(0.0), 1.0, 0.0, abs(0.0))), vec2(mat3x2(_GLF_IDENTITY(vec2(mat4(injectionSwitch, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)), 1.0, 1.0, exp(0.0), 1.0, 0.0, abs(0.0))), min(_GLF_IDENTITY(vec2(mat4(injectionSwitch, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)), 1.0, 1.0, exp(0.0), 1.0, 0.0, abs(0.0))), mix(vec2((vec2(mat4(injectionSwitch, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)), 1.0, 1.0, exp(0.0), 1.0, 0.0, abs(0.0))))[0], (vec2(mat4(injectionSwitch, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)), 1.0, 1.0, exp(0.0), 1.0, 0.0, abs(0.0))))[1]), vec2(_GLF_FUZZED(80.81), _GLF_FUZZED(-1798.2086)), bvec2(false, false))), _GLF_IDENTITY(vec2(mat4(injectionSwitch, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)), 1.0, 1.0, exp(0.0), 1.0, 0.0, abs(0.0))), mat2(1.0) * (vec2(mat4(injectionSwitch, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)), 1.0, 1.0, exp(0.0), 1.0, 0.0, abs(0.0))))))), 0.0, 1.0, 0.0, exp(0.0))))), (injectionSwitch) / abs(vec2(1.0, 1.0))).y, (_GLF_IDENTITY(injectionSwitch.y, float(_GLF_IDENTITY(mat3x4(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).y, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0), transpose(transpose(mat3x4(injectionSwitch.y, 0.0, 0.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, _GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, max(0.0, 0.0))) * 1.0))), _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), 0.0, 1.0, 0.0, _GLF_IDENTITY(_GLF_IDENTITY(0.0, float(_GLF_IDENTITY(vec3(_GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(759.161) : 0.0)), determinant(mat4(1.0, 1.0, 1.0, log(1.0), 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(0.0, (0.0) * 1.0), 0.0, 1.0)), 1.0), vec3(vec3(vec3(_GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(759.161) : 0.0)), determinant(mat4(1.0, 1.0, 1.0, log(1.0), 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0)), 1.0)))))), max(_GLF_IDENTITY(_GLF_IDENTITY(0.0, float(_GLF_IDENTITY(vec3(_GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(759.161) : 0.0)), determinant(mat4(1.0, 1.0, 1.0, log(1.0), 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(0.0, (0.0) * 1.0), 0.0, 1.0)), 1.0), vec3(vec3(vec3(_GLF_IDENTITY(0.0, (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, false)), ! (! (bool(bvec2(false, false)))))) ? _GLF_FUZZED(759.161) : 0.0)), determinant(mat4(1.0, 1.0, 1.0, log(1.0), 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0)), 1.0)))))), (_GLF_IDENTITY(_GLF_IDENTITY(0.0, float(_GLF_IDENTITY(vec3(_GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(759.161) : 0.0)), determinant(mat4(1.0, 1.0, 1.0, log(1.0), 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(0.0, (0.0) * 1.0), 0.0, 1.0)), 1.0), vec3(vec3(vec3(_GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(759.161) : 0.0)), determinant(mat4(1.0, 1.0, 1.0, log(1.0), 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0)), 1.0)))))), float(mat4(_GLF_IDENTITY(0.0, float(_GLF_IDENTITY(vec3(_GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(759.161) : 0.0)), determinant(mat4(1.0, 1.0, 1.0, log(1.0), 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(0.0, (0.0) * 1.0), 0.0, 1.0)), 1.0), vec3(vec3(vec3(_GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(759.161) : 0.0)), determinant(mat4(_GLF_IDENTITY(1.0, (1.0) - _GLF_ZERO(0.0, injectionSwitch.x)), 1.0, 1.0, log(1.0), 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0)), 1.0)))))), 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0)))) / 1.0), _GLF_IDENTITY(_GLF_IDENTITY(0.0, float(_GLF_IDENTITY(vec3(_GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(759.161) : 0.0)), determinant(mat4(_GLF_IDENTITY(1.0, (true ? _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(92.76)), float(1.0), bool(true))) : _GLF_FUZZED(-3.5))), 1.0, 1.0, log(1.0), 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(0.0, (0.0) * 1.0), 0.0, 1.0)), 1.0), vec3(vec3(vec3(_GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(759.161) : 0.0)), determinant(mat4(1.0, 1.0, 1.0, log(1.0), _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-4.6))), 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0)), 1.0)))))), (_GLF_IDENTITY(0.0, float(_GLF_IDENTITY(vec3(_GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(759.161) : 0.0)), determinant(mat4(1.0, 1.0, 1.0, log(1.0), 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(0.0, (0.0) * 1.0), 0.0, 1.0)), 1.0), vec3(vec3(vec3(_GLF_IDENTITY(_GLF_IDENTITY(0.0, min(0.0, 0.0)), (false ? _GLF_FUZZED(759.161) : 0.0)), determinant(mat4(1.0, 1.0, 1.0, log(1.0), 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0)), 1.0))))))) - 0.0))), 1.0, 0.0, 1.0))))))) - 0.0))), ! _GLF_IDENTITY((! (! ((injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(mat2x4(injectionSwitch, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0))).y, (_GLF_IDENTITY(injectionSwitch.y, float(_GLF_IDENTITY(mat3x4(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)), injectionSwitch)))).y, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0), transpose(transpose(mat3x4(injectionSwitch.y, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, sqrt(1.0) * (0.0))) * determinant(mat3(1.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 1.0, 0.0, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(94.08)), float(0.0), bool(true))), 0.0, 1.0))), 1.0))))))) - 0.0))))), bool(_GLF_IDENTITY(bvec3((! (! ((_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch))) / vec2(1.0, 1.0)).x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, float(_GLF_IDENTITY(mat3x4(injectionSwitch.y, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0), transpose(transpose(mat3x4(injectionSwitch.y, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0))))))) - 0.0))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true), _GLF_IDENTITY(bvec3(bvec4(bvec3((! _GLF_IDENTITY((! ((injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, 1.0 * (injectionSwitch.y)), (_GLF_IDENTITY(injectionSwitch.y, float(_GLF_IDENTITY(mat3x4(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / determinant(mat4(1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, log(1.0), 1.0, 0.0, 1.0, 0.0, length(vec3(0.0, 0.0, 0.0)), 1.0, 1.0, 1.0))), 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0), transpose(transpose(mat3x4(injectionSwitch.y, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0))))))) - _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(7.2))))))), ((! ((injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, 1.0 * (injectionSwitch.y)), (_GLF_IDENTITY(injectionSwitch.y, float(_GLF_IDENTITY(mat3x4(injectionSwitch.y, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0), transpose(transpose(mat3x4(injectionSwitch.y, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0))))))) - _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(7.2)))))))) && true)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true), false)), _GLF_IDENTITY(bvec3(bvec3(bvec3(bvec4(bvec3(_GLF_IDENTITY((! _GLF_IDENTITY((! ((injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, 1.0 * (injectionSwitch.y)), (_GLF_IDENTITY(injectionSwitch.y, float(_GLF_IDENTITY(mat3x4(injectionSwitch.y, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0), transpose(transpose(mat3x4(injectionSwitch.y, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0))))))) - _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(7.2))))))), ((! ((injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, 1.0 * (injectionSwitch.y)), (_GLF_IDENTITY(injectionSwitch.y, float(_GLF_IDENTITY(mat3x4(injectionSwitch.y, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0), transpose(transpose(mat3x4(injectionSwitch.y, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0))))))) - _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(7.2)))))))) && true)), ((! _GLF_IDENTITY((! ((injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, 1.0 * (injectionSwitch.y)), (_GLF_IDENTITY(injectionSwitch.y, float(_GLF_IDENTITY(mat3x4(injectionSwitch.y, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0), transpose(transpose(mat3x4(injectionSwitch.y, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0))))))) - _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(7.2))))))), ((! ((injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, 1.0 * (injectionSwitch.y)), (_GLF_IDENTITY(injectionSwitch.y, float(_GLF_IDENTITY(mat3x4(injectionSwitch.y, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0), transpose(transpose(mat3x4(injectionSwitch.y, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0))))))) - _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(7.2)))))))) && true))) && true), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true), false)))), bvec3(bvec3(bvec3(bvec3(bvec3(bvec4(bvec3((! _GLF_IDENTITY((_GLF_IDENTITY(! ((injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, 1.0 * (injectionSwitch.y)), (_GLF_IDENTITY(injectionSwitch.y, float(_GLF_IDENTITY(mat3x4(injectionSwitch.y, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0), transpose(transpose(mat3x4(injectionSwitch.y, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0))))))) - _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(7.2)))))), (! ((injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, 1.0 * (injectionSwitch.y)), _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.y, float(_GLF_IDENTITY(mat3x4(injectionSwitch.y, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0), transpose(transpose(mat3x4(injectionSwitch.y, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0))))))) - _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(7.2))), float(float((_GLF_IDENTITY(injectionSwitch.y, float(_GLF_IDENTITY(mat3x4(injectionSwitch.y, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0), transpose(transpose(mat3x4(injectionSwitch.y, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0))))))) - _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(7.2)))))))))) && true)), ((! ((injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, 1.0 * (injectionSwitch.y)), (_GLF_IDENTITY(injectionSwitch.y, float(_GLF_IDENTITY(mat3x4(injectionSwitch.y, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0), transpose(transpose(mat3x4(injectionSwitch.y, 0.0, 0.0, 0.0, _GLF_IDENTITY(1.0, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(2.3) : _GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, (1.0) + 0.0), 1.0, 1.0)))), 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0))))))) - _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(7.2)))))))) && true)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true), false)))))))))))))))))
          {
           for(int _injected_loop_counter = (1 | 1); _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
            {
             if(_GLF_WRAPPED_IF_TRUE(true))
              {
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                return;
              }
             else
              {
              }
             for(int _injected_loop_counter = (1 | (1 ^ int(_GLF_ZERO(0.0, injectionSwitch.x)))); _GLF_WRAPPED_LOOP(_injected_loop_counter != (0 >> _GLF_IDENTITY(int(5), int(5)))); _injected_loop_counter --)
              {
               return;
              }
             if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x > injectionSwitch.y))))
              {
               if(_GLF_WRAPPED_IF_FALSE(false))
                {
                }
               else
                {
                 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y))))))
                  return;
                }
               continue;
              }
            }
          }
        }
       while(_GLF_WRAPPED_LOOP(false));
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(false, (false) && true), false)), _GLF_IDENTITY((bool(bvec2(_GLF_IDENTITY(false, (false) && true), false))) || false, ! (! ((bool(bvec2(_GLF_IDENTITY(false, (false) && true), false))) || false)))))))
      return;
    }
  }
}
