#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


struct _GLF_struct_11 {
 uvec4 _f0;
 mat3 _f1;
 bvec2 _f2;
 bvec2 _f3;
 bvec3 _f4;
 float _f5;
 uint _f6;
} ;

struct _GLF_struct_10 {
 uvec4 _f0;
 mat4x3 _f1;
 bvec4 _f2;
 bvec4 _f3;
 uint _f4;
 ivec4 _f5;
 mat2 _f6;
} ;

struct _GLF_struct_9 {
 mat2x3 _f0;
 bvec4 _f1;
 mat3x2 _f2;
 mat3 _f3;
 mat2 _f4;
} ;

struct _GLF_struct_12 {
 _GLF_struct_9 _f0;
 _GLF_struct_10 _f1;
 mat2x3 _f2;
 uint _f3;
 _GLF_struct_11 _f4;
 uint workgroup_size;
 vec2 _f5;
 uvec3 _f6;
} ;

struct _GLF_struct_7 {
 vec2 _f0;
 uvec2 _f1;
} ;

struct _GLF_struct_6 {
 mat2x4 _f0;
 uvec2 _f1;
 uint _f2;
} ;

struct _GLF_struct_5 {
 vec2 _f0;
 mat2x4 _f1;
 ivec3 _f2;
 mat2x3 _f3;
} ;

struct _GLF_struct_8 {
 float _f0;
 mat4x3 _f1;
 _GLF_struct_5 _f2;
 _GLF_struct_6 _f3;
 vec4 _f4;
 _GLF_struct_7 _f5;
} ;

struct _GLF_struct_13 {
 mat3 _f0;
 _GLF_struct_8 _f1;
 _GLF_struct_12 _f2;
 ivec2 _f3;
 mat3 _f4;
 mat2 _f5;
} ;

struct _GLF_struct_3 {
 uvec3 _f0;
 float _f1;
} ;

struct _GLF_struct_1 {
 vec4 _f0;
} ;

struct _GLF_struct_0 {
 ivec4 _f0;
 vec4 _f1;
} ;

struct _GLF_struct_2 {
 _GLF_struct_0 _f0;
 int _f1;
 _GLF_struct_1 _f2;
} ;

struct _GLF_struct_4 {
 _GLF_struct_2 _f0;
 uint subgroup_id;
 _GLF_struct_3 _f1;
 ivec3 _f2;
} ;

layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != int(_GLF_ONE(1.0, injectionSwitch.y))); _injected_loop_counter ++)
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     break;
    }
   if(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), bool(bvec4(_GLF_WRAPPED_IF_FALSE(false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false))))))))
      continue;
     if(_GLF_WRAPPED_IF_TRUE(true))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
        continue;
       if(_GLF_DEAD(false))
        return;
      }
     else
      {
      }
     if(_GLF_DEAD(false))
      break;
    }
   else
    {
     if(_GLF_DEAD(false))
      break;
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(! (! (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bool((injectionSwitch.x > injectionSwitch.y))))))), _GLF_IDENTITY(! (! (_GLF_IDENTITY(! (! (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bool((injectionSwitch.x > injectionSwitch.y))))))), _GLF_IDENTITY(bool(bvec2(! (! (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bool((injectionSwitch.x > injectionSwitch.y))))))), true)), (bool(bvec2(! (! (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bool((injectionSwitch.x > injectionSwitch.y))))))), true))) || false)))), ! (! (! (! (_GLF_IDENTITY(! (! (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bool((injectionSwitch.x > injectionSwitch.y))))))), _GLF_IDENTITY(bool(bvec2(! (! (_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat3x4(injectionSwitch, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0, 0.0, 1.0, 0.0, sqrt(sin(0.0)), log(1.0), 1.0, 1.0), transpose(transpose(_GLF_IDENTITY(mat3x4(injectionSwitch, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0, 0.0, 1.0, 0.0, sqrt(sin(0.0)), log(1.0), 1.0, 1.0), transpose(transpose(mat3x4(injectionSwitch, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0, 0.0, 1.0, 0.0, sqrt(sin(0.0)), log(1.0), 1.0, 1.0))))))))).x > injectionSwitch.y), bool(bool((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true)))))))), true)), (bool(bvec2(! (! (_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bool((injectionSwitch.x > injectionSwitch.y))))), ! (! (_GLF_FALSE(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, ! (! (false))))), _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bool((injectionSwitch.x > injectionSwitch.y)))), _GLF_IDENTITY((_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec3(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y)), true, false))))))), bool(_GLF_IDENTITY(bool((injectionSwitch.x > injectionSwitch.y)), (bool(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), (! ((injectionSwitch.x > injectionSwitch.y))) || false))))) && true)))), ((_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec3(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y)), true, false))))))), bool(_GLF_IDENTITY(bool((injectionSwitch.x > injectionSwitch.y)), (bool(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), (! ((injectionSwitch.x > injectionSwitch.y))) || false))))) && true))))) || false) || false))))))), true))) || false))))))))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(! (! (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bool((injectionSwitch.x > injectionSwitch.y))))))), _GLF_IDENTITY(! _GLF_IDENTITY((! (_GLF_IDENTITY(_GLF_IDENTITY(! (! (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bool((injectionSwitch.x > injectionSwitch.y))))))), (! (! (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bool((injectionSwitch.x > injectionSwitch.y)))))))) && true), _GLF_IDENTITY(bool(bvec2(! (! (_GLF_FALSE(false, _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bool((injectionSwitch.x > injectionSwitch.y)))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y))), bool(bool((injectionSwitch.x > injectionSwitch.y)))))))))), true)), (bool(bvec2(! (! (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bool((injectionSwitch.x > injectionSwitch.y))))))), _GLF_IDENTITY(true, (true) || false)))) || false)))), ! (! ((! (_GLF_IDENTITY(_GLF_IDENTITY(! (! (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bool((injectionSwitch.x > injectionSwitch.y))))))), (! (! (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bool((injectionSwitch.x > injectionSwitch.y)))))))) && true), _GLF_IDENTITY(bool(bvec2(! (! (_GLF_FALSE(false, _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bool((injectionSwitch.x > injectionSwitch.y)))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y))), bool(bool((injectionSwitch.x > injectionSwitch.y)))))))))), true)), (bool(bvec2(! (! (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bool((injectionSwitch.x > injectionSwitch.y))))))), _GLF_IDENTITY(true, (true) || false)))) || false))))))), ! (! (! (! (_GLF_IDENTITY(! (! (_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(-3.6))))) > injectionSwitch.y), bool(bool((injectionSwitch.x > injectionSwitch.y))))))), _GLF_IDENTITY(bool(bvec2(! (! (_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat3x4(injectionSwitch, _GLF_ONE(1.0, injectionSwitch.y), _GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, min(1.0, _GLF_IDENTITY(1.0, min(1.0, 1.0)))), 1.0)), 0.0, 0.0, 1.0, 0.0, sqrt(sin(0.0)), log(1.0), 1.0, 1.0), transpose(transpose(_GLF_IDENTITY(mat3x4(injectionSwitch, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0, 0.0, 1.0, 0.0, sqrt(sin(0.0)), log(1.0), 1.0, 1.0), transpose(transpose(mat3x4(injectionSwitch, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0, 0.0, 1.0, 0.0, sqrt(sin(0.0)), log(1.0), 1.0, 1.0))))))))).x > injectionSwitch.y), bool(bool((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true)))))))), true)), (bool(bvec2(! (! (_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bool((injectionSwitch.x > injectionSwitch.y))))), ! (! (_GLF_FALSE(false, _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bool((injectionSwitch.x > injectionSwitch.y)))), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(_GLF_IDENTITY(bool((injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY((bool((injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_IDENTITY((bool((injectionSwitch.x > injectionSwitch.y))), ! (! ((bool((injectionSwitch.x > injectionSwitch.y))))))))) && true)))) || false))))))), true))) || false))))))))), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(! (! (_GLF_FALSE(false, _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bool(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec3((injectionSwitch.x > injectionSwitch.y), false, true)))))), bool(bool((injectionSwitch.x > injectionSwitch.y))))))), _GLF_IDENTITY(! (! (_GLF_IDENTITY(! (! (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bool((injectionSwitch.x > injectionSwitch.y))))))), _GLF_IDENTITY(bool(bvec2(! (! (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bool((injectionSwitch.x > injectionSwitch.y))))))), true)), _GLF_IDENTITY((bool(bvec2(! (! (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bool((injectionSwitch.x > injectionSwitch.y))))))), true))) || false, ((bool(bvec2(! (! (_GLF_FALSE(false, _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bool((injectionSwitch.x > injectionSwitch.y)))), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bool((_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, float(mat4x2(injectionSwitch.x, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0))))) > injectionSwitch.y))))) || false)))), true))) || false) && true))))), ! (! (! (! (_GLF_IDENTITY(! (! (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bool((injectionSwitch.x > injectionSwitch.y))))))), _GLF_IDENTITY(bool(bvec2(! (! (_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat3x4(injectionSwitch, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0, 0.0, 1.0, 0.0, sqrt(sin(0.0)), log(1.0), 1.0, 1.0), transpose(transpose(_GLF_IDENTITY(mat3x4(injectionSwitch, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0, 0.0, 1.0, 0.0, sqrt(sin(0.0)), log(1.0), 1.0, 1.0), transpose(transpose(mat3x4(injectionSwitch, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0, 0.0, 1.0, 0.0, sqrt(sin(0.0)), log(1.0), 1.0, 1.0))))))))).x > injectionSwitch.y), bool(bool((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true)))))), (_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat3x4(injectionSwitch, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0, 0.0, 1.0, 0.0, sqrt(sin(0.0)), log(1.0), 1.0, 1.0), transpose(transpose(_GLF_IDENTITY(mat3x4(injectionSwitch, _GLF_ONE(1.0, injectionSwitch.y), 1.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0, 1.0, 0.0, sqrt(sin(0.0)), log(1.0), 1.0, 1.0), transpose(transpose(mat3x4(injectionSwitch, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0, 0.0, 1.0, 0.0, sqrt(sin(0.0)), log(1.0), 1.0, 1.0))))))))).x > injectionSwitch.y), bool(bool((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true))))))) && true))), true)), (bool(bvec2(! (! (_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bool((injectionSwitch.x > injectionSwitch.y))))), ! (! (_GLF_FALSE(false, _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bool((injectionSwitch.x > injectionSwitch.y)))), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(_GLF_IDENTITY(bool((injectionSwitch.x > injectionSwitch.y)), (bool((injectionSwitch.x > injectionSwitch.y))) && true)))) || false))))))), true))) || false))))))))), false, false), bvec3(bvec3(bvec3(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(mat4x2(6244.3131, -74.44, -3.8, -5.0, -0.7, 63.19, 3.9, -1.4)[3]) : injectionSwitch)))).x > injectionSwitch.y)), _GLF_IDENTITY(! (! (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bool((injectionSwitch.x > injectionSwitch.y))))))), _GLF_IDENTITY(! (! (_GLF_IDENTITY(! (! (_GLF_FALSE(false, _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y))), bool(bool((injectionSwitch.x > injectionSwitch.y))))))), _GLF_IDENTITY(bool(bvec2(! (! (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bool((injectionSwitch.x > injectionSwitch.y))))))), true)), (bool(bvec2(! (! (_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bool((injectionSwitch.x > injectionSwitch.y))))), (_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bool((injectionSwitch.x > injectionSwitch.y))))), ! (! (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bool((injectionSwitch.x > injectionSwitch.y))))))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), true))) || false)))), ! (! (! (! (_GLF_IDENTITY(! (! (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bool((injectionSwitch.x > injectionSwitch.y))))))), _GLF_IDENTITY(bool(bvec2(! (! (_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat3x4(injectionSwitch, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0, 0.0, 1.0, 0.0, sqrt(sin(0.0)), log(1.0), 1.0, 1.0), transpose(transpose(_GLF_IDENTITY(mat3x4(injectionSwitch, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0, 0.0, 1.0, 0.0, sqrt(sin(0.0)), log(1.0), 1.0, 1.0), transpose(transpose(mat3x4(injectionSwitch, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0, 0.0, 1.0, 0.0, sqrt(sin(_GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, float(mat4x3(0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0))), 0.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)))))), log(1.0), 1.0, _GLF_IDENTITY(1.0, _GLF_IDENTITY(float(_GLF_IDENTITY(mat4x2(_GLF_IDENTITY(1.0, float(mat2(1.0, 1.0, 1.0, 1.0))), 1.0, length(vec3(0.0, 0.0, 0.0)), 0.0, 0.0, sqrt(0.0), sqrt(0.0), 1.0), (mat4x2(_GLF_IDENTITY(1.0, float(mat2(1.0, 1.0, 1.0, 1.0))), 1.0, length(vec3(0.0, 0.0, 0.0)), 0.0, 0.0, sqrt(0.0), sqrt(0.0), 1.0)) * mat4(1.0))), max(float(_GLF_IDENTITY(mat4x2(_GLF_IDENTITY(1.0, float(mat2(1.0, 1.0, 1.0, 1.0))), 1.0, length(vec3(0.0, 0.0, 0.0)), 0.0, 0.0, sqrt(0.0), sqrt(0.0), 1.0), (mat4x2(_GLF_IDENTITY(1.0, float(mat2(1.0, 1.0, 1.0, 1.0))), 1.0, length(vec3(0.0, 0.0, 0.0)), 0.0, 0.0, sqrt(0.0), sqrt(0.0), 1.0)) * mat4(1.0))), float(_GLF_IDENTITY(mat4x2(_GLF_IDENTITY(1.0, float(mat2(1.0, 1.0, 1.0, 1.0))), 1.0, length(vec3(0.0, 0.0, 0.0)), 0.0, 0.0, sqrt(0.0), sqrt(0.0), 1.0), (mat4x2(_GLF_IDENTITY(1.0, float(mat2(1.0, 1.0, 1.0, 1.0))), 1.0, length(vec3(0.0, 0.0, 0.0)), 0.0, 0.0, sqrt(0.0), sqrt(0.0), 1.0)) * mat4(1.0))))))))))))))).x > injectionSwitch.y), bool(bool((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true)))))))), true)), (bool(bvec2(! (! (_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bool((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)).y))))), ! (! (_GLF_FALSE(false, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bool((injectionSwitch.x > injectionSwitch.y)))), false || (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bool((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y)))))))), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(_GLF_IDENTITY(bool((injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY((bool((injectionSwitch.x > injectionSwitch.y))) && true, ! (_GLF_IDENTITY(! ((bool((injectionSwitch.x > injectionSwitch.y))) && true), ! (! (! ((bool((injectionSwitch.x > injectionSwitch.y))) && true)))))))))) || false))))))), true))) || false))))))))), false, false))))))) && true)))
      {
       if(_GLF_DEAD(false))
        continue;
       do
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)).x, _GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-6.4)), bool(false))))) > injectionSwitch.y))))
          return;
        }
       while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))))))));
       return;
      }
     if(_GLF_DEAD(false))
      continue;
    }
   if(_GLF_DEAD(false))
    continue;
  }
 _GLF_struct_4 _GLF_struct_replacement_4 = _GLF_struct_4(_GLF_struct_2(_GLF_struct_0(ivec4(1), _GLF_IDENTITY(vec4(1.0), (vec4(1.0)) / vec4(1.0, 1.0, 1.0, 1.0))), 1, _GLF_struct_1(vec4(1.0))), gl_SubgroupID, _GLF_struct_3(uvec3(1u), 1.0), _GLF_IDENTITY(ivec3(1), ivec3(0, 0, _GLF_IDENTITY(0, (0) / 1)) ^ (ivec3(1))));
 if(_GLF_DEAD(false))
  return;
 do
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        break;
       if(_GLF_DEAD(false))
        return;
       break;
       if(_GLF_DEAD(false))
        break;
       if(_GLF_DEAD(false))
        continue;
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        continue;
      }
     return;
     if(_GLF_DEAD(false))
      return;
    }
  }
 while(_GLF_WRAPPED_LOOP(false));
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch.x : _GLF_FUZZED(3.0))) > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (_GLF_IDENTITY(! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bool(bvec3(! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true, true))))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       for(int _injected_loop_counter = 1; _GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter > 0), (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter > 0), ! (! (_GLF_WRAPPED_LOOP(_injected_loop_counter > 0))))) && true); _injected_loop_counter --)
        {
         return;
        }
      }
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
      }
     else
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         return;
        }
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_WRAPPED_IF_TRUE(true))
      {
       for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
        {
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(false))
          break;
        }
      }
     else
      {
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
      return;
    }
   else
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         return;
        }
       return;
      }
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   else
    {
    }
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 uint subgroup_size = gl_SubgroupSize;
 do
  {
   for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter != 1, false || (_injected_loop_counter != 1))); _injected_loop_counter ++)
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      continue;
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_WRAPPED_IF_TRUE(true))
            {
             return;
            }
           else
            {
            }
          }
         continue;
        }
      }
     else
      {
       if(_GLF_DEAD(false))
        continue;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         do
          {
           return;
          }
         while(_GLF_WRAPPED_LOOP(false));
         if(_GLF_DEAD(false))
          return;
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        continue;
       if(_GLF_DEAD(false))
        break;
      }
     if(_GLF_DEAD(false))
      continue;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        break;
       if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
        }
       else
        {
         if(_GLF_WRAPPED_IF_TRUE(true))
          {
           return;
          }
         else
          {
          }
        }
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x > _GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-855.206), _GLF_FUZZED(-6.2)), vec2((injectionSwitch)[0], (injectionSwitch)[_GLF_IDENTITY(1, min(1, _GLF_IDENTITY(1, clamp(1, _GLF_IDENTITY(1, (1) | (1)), 1))))]), bvec2(true, true))), injectionSwitch, injectionSwitch)).y))))
      break;
    }
  }
 while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
    }
   else
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false))))
        {
         if(_GLF_DEAD(false))
          {
           for(int _injected_loop_counter = int(_GLF_ONE(1.0, injectionSwitch.y)); _GLF_WRAPPED_LOOP(_injected_loop_counter != int(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_ZERO(0.0, injectionSwitch.x) : _GLF_FUZZED(-402.226))))); _injected_loop_counter --)
            {
             do
              {
               return;
              }
             while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) && true)));
             if(_GLF_DEAD(false))
              break;
            }
          }
         return;
         if(_GLF_DEAD(false))
          return;
        }
       return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
      }
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
      }
     else
      {
       if(_GLF_DEAD(false))
        return;
      }
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true), (injectionSwitch.x > injectionSwitch.y) || false)))))
    return;
   return;
  }
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(false))
  return;
 for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > (0 ^ 0)); _injected_loop_counter --)
  {
   do
    {
     if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        break;
      }
     else
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).y))))
        break;
      }
    }
   while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))));
  }
 uint num_workgroup = gl_NumWorkGroups.x;
 _GLF_struct_13 _GLF_struct_replacement_13 = _GLF_struct_13(mat3(1.0), _GLF_struct_8(_GLF_IDENTITY(1.0, _GLF_IDENTITY((1.0) / 1.0, (true ? (1.0) / 1.0 : _GLF_FUZZED(-3992.1473)))), mat4x3(1.0), _GLF_struct_5(vec2(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-1.9)), float(1.0), bool(true)))), mat2x4(1.0), ivec3(1), mat2x3(1.0)), _GLF_struct_6(mat2x4(1.0), uvec2(1u), 1u), vec4(1.0), _GLF_struct_7(vec2(1.0), uvec2(1u))), _GLF_struct_12(_GLF_struct_9(mat2x3(1.0), bvec4(_GLF_IDENTITY(_GLF_IDENTITY(true, (_GLF_IDENTITY(true, (true) || _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))) || _GLF_IDENTITY(false, false || (false))), true && _GLF_IDENTITY((_GLF_IDENTITY(true, _GLF_IDENTITY((true) || false, ! (! ((true) || false))))), bool(bvec4(_GLF_IDENTITY((_GLF_IDENTITY(true, _GLF_IDENTITY((true) || false, ! (! ((true) || false))))), true && ((_GLF_IDENTITY(true, _GLF_IDENTITY((true) || false, ! (! ((true) || false))))))), false, false, false))))), mat3x2(_GLF_IDENTITY(1.0, (true ? _GLF_IDENTITY(1.0, _GLF_IDENTITY(mix(float(1.0), float(_GLF_FUZZED(7698.6799)), bool(false)), float(_GLF_IDENTITY(mat4x3(mix(float(1.0), float(_GLF_FUZZED(7698.6799)), bool(false)), 1.0, 1.0, 0.0, determinant(mat3(1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, determinant(mat4(0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)), sqrt(1.0))), 0.0, abs(0.0), _GLF_IDENTITY(dot(vec4(determinant(mat2(0.0, 1.0, 0.0, 0.0)), 0.0, 1.0, 1.0), vec4(1.0, 1.0, 0.0, 0.0)), _GLF_IDENTITY(dot(vec4(determinant(mat2(0.0, 1.0, 0.0, 0.0)), 0.0, 1.0, 1.0), vec4(1.0, 1.0, 0.0, 0.0)), clamp(dot(vec4(determinant(mat2(0.0, 1.0, 0.0, 0.0)), 0.0, 1.0, 1.0), vec4(1.0, 1.0, 0.0, 0.0)), dot(vec4(determinant(mat2(0.0, 1.0, 0.0, 0.0)), 0.0, 1.0, 1.0), vec4(1.0, 1.0, 0.0, 0.0)), dot(vec4(determinant(mat2(0.0, 1.0, 0.0, 0.0)), 0.0, 1.0, 1.0), vec4(1.0, 1.0, 0.0, 0.0))))), 0.0, 0.0, 0.0, 1.0), mat4x3(mat4(mat4x3(mix(float(1.0), float(_GLF_FUZZED(7698.6799)), bool(false)), 1.0, 1.0, 0.0, determinant(mat3(1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, determinant(mat4(0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)), sqrt(1.0))), 0.0, abs(0.0), _GLF_IDENTITY(dot(vec4(determinant(mat2(0.0, 1.0, 0.0, 0.0)), 0.0, 1.0, 1.0), vec4(1.0, 1.0, 0.0, 0.0)), _GLF_IDENTITY(dot(vec4(determinant(mat2(0.0, 1.0, 0.0, 0.0)), 0.0, 1.0, 1.0), vec4(1.0, 1.0, 0.0, 0.0)), clamp(dot(vec4(determinant(mat2(0.0, 1.0, 0.0, 0.0)), 0.0, 1.0, 1.0), vec4(1.0, 1.0, 0.0, 0.0)), dot(vec4(determinant(mat2(0.0, 1.0, 0.0, 0.0)), 0.0, 1.0, 1.0), vec4(1.0, 1.0, 0.0, 0.0)), dot(vec4(determinant(mat2(0.0, 1.0, 0.0, 0.0)), 0.0, 1.0, 1.0), vec4(1.0, 1.0, 0.0, 0.0))))), 0.0, 0.0, 0.0, 1.0))))))) : _GLF_FUZZED(35.42)))), mat3(1.0), mat2(1.0)), _GLF_struct_10(_GLF_IDENTITY(uvec4(1u), (uvec4(1u)) | (uvec4(1u))), mat4x3(1.0), bvec4(true), bvec4(true), 1u, ivec4(1), mat2(1.0)), mat2x3(1.0), 1u, _GLF_struct_11(uvec4(1u), _GLF_IDENTITY(mat3(_GLF_IDENTITY(1.0, float(vec4(1.0, _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), 0.0, 1.0)))), mat3(mat4(mat3(1.0)))), bvec2(true), bvec2(true), bvec3(true), 1.0, 1u), _GLF_IDENTITY(gl_WorkGroupSize.x, (true ? gl_WorkGroupSize.x : _GLF_FUZZED(13693u))), _GLF_IDENTITY(vec2(1.0), mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (vec2(1.0))), uvec3(1u)), ivec2(1), mat3(1.0), mat2(1.0));
 do
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(mix(float(_GLF_FUZZED(4.1)), float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(vec2(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch))), (true ? vec2(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch))) : _GLF_FUZZED(vec2(-5612.7290, -1.4)))))).x, max(injectionSwitch.x, injectionSwitch.x))), bool(true)), mix(float(mix(float(_GLF_FUZZED(4.1)), float(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x))), bool(true))), float(_GLF_FUZZED(float(true))), bool(false)))) > injectionSwitch.y))))
      continue;
     if(_GLF_WRAPPED_IF_TRUE(true))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, false, false, true)))))
        {
         if(_GLF_DEAD(false))
          continue;
         return;
        }
       return;
      }
     else
      {
      }
    }
   if(_GLF_DEAD(false))
    break;
   if(_GLF_DEAD(false))
    continue;
  }
 while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
 uint workgroup_id = gl_WorkGroupID.x;
 uint workgroup_base = _GLF_struct_replacement_13._f2.workgroup_size * workgroup_id;
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, true, false, false)))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, true && (false)), (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + 0.0) > injectionSwitch.y))))
    return;
   return;
  }
 uint virtual_gid = workgroup_base + _GLF_IDENTITY(_GLF_struct_replacement_4.subgroup_id, (_GLF_IDENTITY(_GLF_struct_replacement_4.subgroup_id, ~ (~ (_GLF_struct_replacement_4.subgroup_id)))) | (_GLF_struct_replacement_4.subgroup_id)) * subgroup_size + _GLF_IDENTITY(subgroup_local_id, min(_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY(min(subgroup_local_id, subgroup_local_id), (min(subgroup_local_id, subgroup_local_id)) << 0u)), subgroup_local_id));
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   for(int _injected_loop_counter = (1 ^ 0); _GLF_WRAPPED_LOOP(_injected_loop_counter > int(_GLF_ZERO(0.0, injectionSwitch.x))); _injected_loop_counter --)
    {
     for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != _GLF_IDENTITY(int(_GLF_ZERO(0.0, injectionSwitch.x)), int(_GLF_IDENTITY(ivec4(int(_GLF_ZERO(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), injectionSwitch.x)), (0 << _GLF_IDENTITY(int(0), int(0))), 0, ((1 << _GLF_IDENTITY(int(1), int(1))) >> _GLF_IDENTITY(int(1), int(1)))), (ivec4(int(_GLF_ZERO(0.0, injectionSwitch.x)), (0 << _GLF_IDENTITY(int(0), int(0))), 0, (_GLF_IDENTITY((1 << _GLF_IDENTITY(int(1), int(1))) >> _GLF_IDENTITY(int(_GLF_IDENTITY(1, (1) | (_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) | (1))) | 0)))), int(1)), ~ (_GLF_IDENTITY(~ ((1 << _GLF_IDENTITY(int(1), int(1))) >> _GLF_IDENTITY(int(_GLF_IDENTITY(1, (1) | (_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) | (1))) | 0)))), int(1))), min(~ ((1 << _GLF_IDENTITY(int(1), int(1))) >> _GLF_IDENTITY(int(_GLF_IDENTITY(1, (1) | (_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) | (1))) | 0)))), int(1))), ~ ((1 << _GLF_IDENTITY(int(1), int(1))) >> _GLF_IDENTITY(int(_GLF_IDENTITY(1, (1) | (_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) | (1))) | 0)))), int(1)))))))))) ^ ivec4(0, _GLF_IDENTITY(0, (_GLF_IDENTITY(0, clamp(0, 0, 0))) | (0)), 0, 0))))); _injected_loop_counter --)
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))))))
          return;
         continue;
        }
       return;
      }
    }
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      return;
     return;
    }
   return;
  }
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && true), false), bvec2(bvec4(bvec2(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && true), false), true, false))))))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_DEAD(false), true)))) || false))
  return;
 if(_GLF_WRAPPED_IF_TRUE(true))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
      }
     else
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         if(_GLF_DEAD(false))
          return;
         return;
         if(_GLF_DEAD(false))
          return;
        }
       return;
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        return;
       return;
      }
    }
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bool((injectionSwitch.x > injectionSwitch.y)))))))
    return;
  }
 else
  {
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (_GLF_IDENTITY(false, true && (false)))), false || (! (! (_GLF_IDENTITY(false, true && (false)))))))), (_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (_GLF_IDENTITY(false, true && (false)))), false || (! (! (_GLF_IDENTITY(false, true && (false))))))))) || false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-9.4), _GLF_FUZZED(vec3(-9.6, -762.345, -47.55).g)), vec2(_GLF_IDENTITY((injectionSwitch)[0], float(mat4x2((injectionSwitch)[0], 0.0, 0.0, 0.0, determinant(mat3(1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0)), 1.0, 0.0, 1.0))), (injectionSwitch)[1]), bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))).x > injectionSwitch.y) && true)))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_WRAPPED_IF_TRUE(true))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     else
      {
      }
    }
   do
    {
     for(int _injected_loop_counter = (0 & -4483); _GLF_WRAPPED_LOOP(_injected_loop_counter < ((1 << _GLF_IDENTITY(int(1), int(1))) >> _GLF_IDENTITY(int(1), int(1)))); _injected_loop_counter ++)
      {
       return;
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       do
        {
         return;
        }
       while(_GLF_WRAPPED_LOOP(false));
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        continue;
       break;
      }
    }
   while(_GLF_WRAPPED_LOOP(_GLF_FALSE(_GLF_IDENTITY(false, (false) || false), _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)))) > injectionSwitch.y), _GLF_IDENTITY(((_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], (_GLF_IDENTITY(injectionSwitch[_GLF_IDENTITY(1, (1) | 0)], min(injectionSwitch[1], injectionSwitch[1]))) - 0.0))).x > injectionSwitch.y)), false || _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), bool(_GLF_IDENTITY(bvec3(((injectionSwitch.x > injectionSwitch.y)), false, true), bvec3(bvec4(bvec3(((injectionSwitch.x > injectionSwitch.y)), false, true), true))))), (((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(injectionSwitch.x > injectionSwitch.y, false, false, _GLF_IDENTITY(false, bool(bvec4(false, false, false, true))))))) || false)))) || false)), _GLF_IDENTITY(bool(bvec4((_GLF_IDENTITY(_GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), bool(bvec3(((injectionSwitch.x > injectionSwitch.y)), false, true))), _GLF_IDENTITY((((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)))).y, false, false, _GLF_IDENTITY(false, bool(bvec4(false, false, _GLF_IDENTITY(false, _GLF_IDENTITY((false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || ((false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), true))))))) || _GLF_IDENTITY(false, (false) && _GLF_IDENTITY(true, ! (! (true)))))))), true && ((((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).y, false, _GLF_IDENTITY(false, (false) && true), _GLF_IDENTITY(false, bool(bvec4(false, false, false, true))))))) || false)))))) || false)), false, false, true)), ! (! (bool(bvec4((_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true), false || ((injectionSwitch.x > injectionSwitch.y)))), ! (! (! (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-93.43)), float(injectionSwitch.x), bool(true))), injectionSwitch.x)) > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y)))))))))), bool(bvec3(((injectionSwitch.x > injectionSwitch.y)), false, true))), (((_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(vec2(injectionSwitch.y, 0.0))), (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + 0.0), bool(bvec4(injectionSwitch.x > injectionSwitch.y, false, false, _GLF_IDENTITY(false, bool(bvec4(false, false, false, true))))))) || false)))) || false)), false, _GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, bool(bvec3(false, true, false))))), true))))))) || false))));
  }
 uint next_virtual_gid = _GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(_GLF_IDENTITY(_GLF_struct_replacement_4.subgroup_id * subgroup_size, min(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_struct_replacement_4.subgroup_id * subgroup_size, (false ? _GLF_FUZZED(num_workgroup) : _GLF_struct_replacement_4.subgroup_id * subgroup_size)), clamp(_GLF_IDENTITY(_GLF_struct_replacement_4.subgroup_id * subgroup_size, (false ? _GLF_FUZZED(num_workgroup) : _GLF_struct_replacement_4.subgroup_id * subgroup_size)), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_struct_replacement_4.subgroup_id * subgroup_size, (false ? _GLF_FUZZED(num_workgroup) : _GLF_struct_replacement_4.subgroup_id * subgroup_size)), (_GLF_IDENTITY(_GLF_struct_replacement_4.subgroup_id * subgroup_size, (false ? _GLF_FUZZED(num_workgroup) : _GLF_struct_replacement_4.subgroup_id * subgroup_size))) | (0u << _GLF_IDENTITY(uint(1u), uint(1u)))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_struct_replacement_4.subgroup_id * subgroup_size, (false ? _GLF_FUZZED(_GLF_IDENTITY(num_workgroup, _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(num_workgroup, (num_workgroup) << 0u), 1u, 0u), (uvec3(_GLF_IDENTITY(num_workgroup, (num_workgroup) << 0u), 1u, 0u)) ^ uvec3(0u, 0u, 0u))), (uint(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(num_workgroup, (num_workgroup) << 0u), 1u, 0u), (uvec3(_GLF_IDENTITY(num_workgroup, (num_workgroup) << 0u), 1u, 0u)) ^ uvec3(0u, 0u, 0u)))) | (_GLF_IDENTITY(uint(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(num_workgroup, (num_workgroup) << 0u), 1u, 0u), (uvec3(_GLF_IDENTITY(num_workgroup, (num_workgroup) << 0u), 1u, 0u)) ^ uvec3(0u, 0u, 0u))), (uint(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(num_workgroup, (num_workgroup) << 0u), 1u, 0u), (uvec3(_GLF_IDENTITY(num_workgroup, (num_workgroup) << 0u), 1u, 0u)) ^ uvec3(0u, 0u, 0u)))) - 0u))))) : _GLF_struct_replacement_4.subgroup_id * subgroup_size)), min(_GLF_IDENTITY(_GLF_struct_replacement_4.subgroup_id * subgroup_size, (false ? _GLF_FUZZED(_GLF_IDENTITY(num_workgroup, _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(num_workgroup, (num_workgroup) << 0u), 1u, 0u), (uvec3(_GLF_IDENTITY(num_workgroup, (num_workgroup) << 0u), 1u, 0u)) ^ uvec3(0u, 0u, 0u))), (uint(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(num_workgroup, (num_workgroup) << 0u), 1u, 0u), (uvec3(_GLF_IDENTITY(num_workgroup, (num_workgroup) << 0u), 1u, 0u)) ^ uvec3(0u, 0u, 0u)))) | (_GLF_IDENTITY(uint(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(num_workgroup, (num_workgroup) << 0u), 1u, 0u), (uvec3(_GLF_IDENTITY(num_workgroup, (num_workgroup) << 0u), 1u, 0u)) ^ uvec3(0u, 0u, 0u))), (uint(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(num_workgroup, (num_workgroup) << 0u), 1u, 0u), (uvec3(_GLF_IDENTITY(num_workgroup, (num_workgroup) << 0u), 1u, 0u)) ^ uvec3(0u, 0u, 0u)))) - 0u))))) : _GLF_struct_replacement_4.subgroup_id * subgroup_size)), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_struct_replacement_4.subgroup_id * subgroup_size, (false ? _GLF_FUZZED(_GLF_IDENTITY(num_workgroup, _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(num_workgroup, (num_workgroup) << 0u), 1u, 0u), (uvec3(_GLF_IDENTITY(num_workgroup, (num_workgroup) << 0u), 1u, 0u)) ^ uvec3(0u, 0u, 0u))), (uint(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(num_workgroup, (num_workgroup) << 0u), 1u, 0u), (uvec3(_GLF_IDENTITY(num_workgroup, (num_workgroup) << 0u), 1u, 0u)) ^ uvec3(0u, 0u, 0u)))) | (_GLF_IDENTITY(uint(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(num_workgroup, (num_workgroup) << 0u), 1u, 0u), (uvec3(_GLF_IDENTITY(num_workgroup, (num_workgroup) << 0u), 1u, 0u)) ^ uvec3(0u, 0u, 0u))), (uint(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(num_workgroup, (num_workgroup) << 0u), 1u, 0u), (uvec3(_GLF_IDENTITY(num_workgroup, (num_workgroup) << 0u), 1u, 0u)) ^ uvec3(0u, 0u, 0u)))) - 0u))))) : _GLF_struct_replacement_4.subgroup_id * subgroup_size)), uint(uvec2(_GLF_IDENTITY(_GLF_struct_replacement_4.subgroup_id * subgroup_size, (false ? _GLF_FUZZED(_GLF_IDENTITY(num_workgroup, _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(num_workgroup, (num_workgroup) << 0u), 1u, 0u), (uvec3(_GLF_IDENTITY(num_workgroup, (num_workgroup) << 0u), 1u, 0u)) ^ uvec3(0u, 0u, 0u))), (uint(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(num_workgroup, (num_workgroup) << 0u), 1u, 0u), (uvec3(_GLF_IDENTITY(num_workgroup, (num_workgroup) << 0u), 1u, 0u)) ^ uvec3(0u, 0u, 0u)))) | (_GLF_IDENTITY(uint(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(num_workgroup, (num_workgroup) << 0u), 1u, 0u), (uvec3(_GLF_IDENTITY(num_workgroup, (num_workgroup) << 0u), 1u, 0u)) ^ uvec3(0u, 0u, 0u))), (uint(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(num_workgroup, (num_workgroup) << 0u), 1u, 0u), (uvec3(_GLF_IDENTITY(num_workgroup, (num_workgroup) << 0u), 1u, 0u)) ^ uvec3(0u, 0u, 0u)))) - 0u))))) : _GLF_struct_replacement_4.subgroup_id * subgroup_size)), 0u))))))), _GLF_IDENTITY(_GLF_struct_replacement_4.subgroup_id * subgroup_size, (_GLF_struct_replacement_4.subgroup_id * subgroup_size) | 0u))), ~ (~ (_GLF_IDENTITY(_GLF_struct_replacement_4.subgroup_id * subgroup_size, min(_GLF_IDENTITY(_GLF_struct_replacement_4.subgroup_id * subgroup_size, (false ? _GLF_FUZZED(num_workgroup) : _GLF_struct_replacement_4.subgroup_id * subgroup_size)), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_struct_replacement_4.subgroup_id * subgroup_size, (_GLF_struct_replacement_4.subgroup_id * subgroup_size) ^ 0u), (_GLF_struct_replacement_4.subgroup_id * _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, 0u ^ (_GLF_IDENTITY(subgroup_size, ~ (_GLF_IDENTITY(~ (subgroup_size), ~ (~ (~ (subgroup_size)))))))), _GLF_IDENTITY(uint(uvec3(_GLF_IDENTITY(subgroup_size, 0u ^ (_GLF_IDENTITY(subgroup_size, ~ (_GLF_IDENTITY(~ (subgroup_size), ~ (~ (~ (subgroup_size)))))))), (1u | 1u), 0u)), min(uint(uvec3(_GLF_IDENTITY(subgroup_size, 0u ^ (_GLF_IDENTITY(subgroup_size, ~ (_GLF_IDENTITY(~ (subgroup_size), ~ (~ (~ (subgroup_size)))))))), (1u | 1u), 0u)), uint(uvec3(_GLF_IDENTITY(subgroup_size, 0u ^ (_GLF_IDENTITY(subgroup_size, ~ (_GLF_IDENTITY(~ (subgroup_size), ~ (~ (~ (subgroup_size)))))))), (1u | 1u), 0u)))))) | 0u)))))), clamp(_GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(_GLF_IDENTITY(_GLF_struct_replacement_4.subgroup_id * subgroup_size, min(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_struct_replacement_4.subgroup_id * subgroup_size, (false ? _GLF_FUZZED(num_workgroup) : _GLF_struct_replacement_4.subgroup_id * subgroup_size)), clamp(_GLF_IDENTITY(_GLF_struct_replacement_4.subgroup_id * subgroup_size, (false ? _GLF_FUZZED(num_workgroup) : _GLF_struct_replacement_4.subgroup_id * subgroup_size)), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_struct_replacement_4.subgroup_id * subgroup_size, (false ? _GLF_FUZZED(num_workgroup) : _GLF_struct_replacement_4.subgroup_id * subgroup_size)), (_GLF_IDENTITY(_GLF_struct_replacement_4.subgroup_id * subgroup_size, (false ? _GLF_FUZZED(num_workgroup) : _GLF_struct_replacement_4.subgroup_id * subgroup_size))) | (0u << _GLF_IDENTITY(uint(1u), uint(1u)))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_struct_replacement_4.subgroup_id * subgroup_size, (false ? _GLF_FUZZED(_GLF_IDENTITY(num_workgroup, _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(num_workgroup, (num_workgroup) << 0u), 1u, 0u), (uvec3(_GLF_IDENTITY(num_workgroup, (num_workgroup) << 0u), 1u, 0u)) ^ uvec3(0u, 0u, 0u))), (uint(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(num_workgroup, (num_workgroup) << 0u), 1u, 0u), (uvec3(_GLF_IDENTITY(num_workgroup, (num_workgroup) << 0u), 1u, 0u)) ^ uvec3(0u, 0u, 0u)))) | (_GLF_IDENTITY(uint(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(num_workgroup, (num_workgroup) << 0u), 1u, 0u), (uvec3(_GLF_IDENTITY(num_workgroup, (num_workgroup) << 0u), 1u, 0u)) ^ uvec3(0u, 0u, 0u))), (uint(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(num_workgroup, (num_workgroup) << 0u), 1u, 0u), (uvec3(_GLF_IDENTITY(num_workgroup, (num_workgroup) << 0u), 1u, 0u)) ^ uvec3(0u, 0u, 0u)))) - 0u))))) : _GLF_struct_replacement_4.subgroup_id * subgroup_size)), min(_GLF_IDENTITY(_GLF_struct_replacement_4.subgroup_id * subgroup_size, (false ? _GLF_FUZZED(_GLF_IDENTITY(num_workgroup, _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(num_workgroup, (num_workgroup) << 0u), 1u, 0u), (uvec3(_GLF_IDENTITY(num_workgroup, (num_workgroup) << 0u), 1u, 0u)) ^ uvec3(0u, 0u, 0u))), (uint(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(num_workgroup, (num_workgroup) << 0u), 1u, 0u), (uvec3(_GLF_IDENTITY(num_workgroup, (num_workgroup) << 0u), 1u, 0u)) ^ uvec3(0u, 0u, 0u)))) | (_GLF_IDENTITY(uint(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(num_workgroup, (num_workgroup) << 0u), 1u, 0u), (uvec3(_GLF_IDENTITY(num_workgroup, (num_workgroup) << 0u), 1u, 0u)) ^ uvec3(0u, 0u, 0u))), (uint(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(num_workgroup, (num_workgroup) << 0u), 1u, 0u), (uvec3(_GLF_IDENTITY(num_workgroup, (num_workgroup) << 0u), 1u, 0u)) ^ uvec3(0u, 0u, 0u)))) - 0u))))) : _GLF_struct_replacement_4.subgroup_id * subgroup_size)), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_struct_replacement_4.subgroup_id * subgroup_size, (false ? _GLF_FUZZED(_GLF_IDENTITY(num_workgroup, _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(num_workgroup, (num_workgroup) << 0u), 1u, 0u), (uvec3(_GLF_IDENTITY(num_workgroup, (num_workgroup) << 0u), 1u, 0u)) ^ uvec3(0u, 0u, 0u))), (uint(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(num_workgroup, (num_workgroup) << 0u), 1u, 0u), (uvec3(_GLF_IDENTITY(num_workgroup, (num_workgroup) << 0u), 1u, 0u)) ^ uvec3(0u, 0u, 0u)))) | (_GLF_IDENTITY(uint(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(num_workgroup, (num_workgroup) << 0u), 1u, 0u), (uvec3(_GLF_IDENTITY(num_workgroup, (num_workgroup) << 0u), 1u, 0u)) ^ uvec3(0u, 0u, 0u))), (uint(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(num_workgroup, (num_workgroup) << 0u), 1u, 0u), (uvec3(_GLF_IDENTITY(num_workgroup, (num_workgroup) << 0u), 1u, 0u)) ^ uvec3(0u, 0u, 0u)))) - 0u))))) : _GLF_struct_replacement_4.subgroup_id * subgroup_size)), uint(uvec2(_GLF_IDENTITY(_GLF_struct_replacement_4.subgroup_id * subgroup_size, (false ? _GLF_FUZZED(_GLF_IDENTITY(num_workgroup, _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(num_workgroup, (num_workgroup) << 0u), 1u, 0u), (uvec3(_GLF_IDENTITY(num_workgroup, (num_workgroup) << 0u), 1u, 0u)) ^ uvec3(0u, 0u, 0u))), (uint(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(num_workgroup, (num_workgroup) << 0u), 1u, 0u), (uvec3(_GLF_IDENTITY(num_workgroup, (num_workgroup) << 0u), 1u, 0u)) ^ uvec3(0u, 0u, 0u)))) | (_GLF_IDENTITY(uint(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(num_workgroup, (num_workgroup) << 0u), 1u, 0u), (uvec3(_GLF_IDENTITY(num_workgroup, (num_workgroup) << 0u), 1u, 0u)) ^ uvec3(0u, 0u, 0u))), (uint(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(num_workgroup, (num_workgroup) << 0u), 1u, 0u), (uvec3(_GLF_IDENTITY(num_workgroup, (num_workgroup) << 0u), 1u, 0u)) ^ uvec3(0u, 0u, 0u)))) - 0u))))) : _GLF_struct_replacement_4.subgroup_id * subgroup_size)), 0u))))))), _GLF_IDENTITY(_GLF_struct_replacement_4.subgroup_id * subgroup_size, (_GLF_struct_replacement_4.subgroup_id * subgroup_size) | 0u))), ~ (~ (_GLF_IDENTITY(_GLF_struct_replacement_4.subgroup_id * subgroup_size, min(_GLF_IDENTITY(_GLF_struct_replacement_4.subgroup_id * subgroup_size, (false ? _GLF_FUZZED(num_workgroup) : _GLF_struct_replacement_4.subgroup_id * subgroup_size)), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_struct_replacement_4.subgroup_id * subgroup_size, (_GLF_struct_replacement_4.subgroup_id * subgroup_size) ^ 0u), (_GLF_struct_replacement_4.subgroup_id * _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, 0u ^ (_GLF_IDENTITY(subgroup_size, ~ (_GLF_IDENTITY(~ (subgroup_size), ~ (~ (~ (subgroup_size)))))))), _GLF_IDENTITY(uint(uvec3(_GLF_IDENTITY(subgroup_size, 0u ^ (_GLF_IDENTITY(subgroup_size, ~ (_GLF_IDENTITY(~ (subgroup_size), ~ (~ (~ (subgroup_size)))))))), (1u | 1u), 0u)), min(uint(uvec3(_GLF_IDENTITY(subgroup_size, 0u ^ (_GLF_IDENTITY(subgroup_size, ~ (_GLF_IDENTITY(~ (subgroup_size), ~ (~ (~ (subgroup_size)))))))), (1u | 1u), 0u)), uint(uvec3(_GLF_IDENTITY(subgroup_size, 0u ^ (_GLF_IDENTITY(subgroup_size, ~ (_GLF_IDENTITY(~ (subgroup_size), ~ (~ (~ (subgroup_size)))))))), (1u | 1u), 0u)))))) | 0u)))))), max(workgroup_base + _GLF_IDENTITY(_GLF_IDENTITY(_GLF_struct_replacement_4.subgroup_id * subgroup_size, min(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_struct_replacement_4.subgroup_id * subgroup_size, (false ? _GLF_FUZZED(num_workgroup) : _GLF_struct_replacement_4.subgroup_id * subgroup_size)), clamp(_GLF_IDENTITY(_GLF_struct_replacement_4.subgroup_id * subgroup_size, (false ? _GLF_FUZZED(num_workgroup) : _GLF_struct_replacement_4.subgroup_id * subgroup_size)), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_struct_replacement_4.subgroup_id * subgroup_size, (false ? _GLF_FUZZED(num_workgroup) : _GLF_struct_replacement_4.subgroup_id * subgroup_size)), (_GLF_IDENTITY(_GLF_struct_replacement_4.subgroup_id * subgroup_size, (false ? _GLF_FUZZED(num_workgroup) : _GLF_struct_replacement_4.subgroup_id * subgroup_size))) | (0u << _GLF_IDENTITY(uint(1u), uint(1u)))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_struct_replacement_4.subgroup_id * subgroup_size, (false ? _GLF_FUZZED(_GLF_IDENTITY(num_workgroup, _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(num_workgroup, (num_workgroup) << 0u), 1u, 0u), (uvec3(_GLF_IDENTITY(num_workgroup, (num_workgroup) << 0u), 1u, 0u)) ^ uvec3(0u, 0u, 0u))), (uint(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(num_workgroup, (num_workgroup) << 0u), 1u, 0u), (uvec3(_GLF_IDENTITY(num_workgroup, (num_workgroup) << 0u), 1u, 0u)) ^ uvec3(0u, 0u, 0u)))) | (_GLF_IDENTITY(uint(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(num_workgroup, (num_workgroup) << 0u), 1u, 0u), (uvec3(_GLF_IDENTITY(num_workgroup, (num_workgroup) << 0u), 1u, 0u)) ^ uvec3(0u, 0u, 0u))), (uint(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(num_workgroup, (num_workgroup) << 0u), 1u, 0u), (uvec3(_GLF_IDENTITY(num_workgroup, (num_workgroup) << 0u), 1u, 0u)) ^ uvec3(0u, 0u, 0u)))) - 0u))))) : _GLF_struct_replacement_4.subgroup_id * subgroup_size)), min(_GLF_IDENTITY(_GLF_struct_replacement_4.subgroup_id * subgroup_size, (false ? _GLF_FUZZED(_GLF_IDENTITY(num_workgroup, _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(num_workgroup, (num_workgroup) << 0u), 1u, 0u), (uvec3(_GLF_IDENTITY(num_workgroup, (num_workgroup) << 0u), 1u, 0u)) ^ uvec3(0u, 0u, 0u))), (uint(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(num_workgroup, (num_workgroup) << 0u), 1u, 0u), (uvec3(_GLF_IDENTITY(num_workgroup, (num_workgroup) << 0u), 1u, 0u)) ^ uvec3(0u, 0u, 0u)))) | (_GLF_IDENTITY(uint(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(num_workgroup, (num_workgroup) << 0u), 1u, 0u), (uvec3(_GLF_IDENTITY(num_workgroup, (num_workgroup) << 0u), 1u, 0u)) ^ uvec3(0u, 0u, 0u))), (uint(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(num_workgroup, (num_workgroup) << 0u), 1u, 0u), (uvec3(_GLF_IDENTITY(num_workgroup, (num_workgroup) << 0u), 1u, 0u)) ^ uvec3(0u, 0u, 0u)))) - 0u))))) : _GLF_struct_replacement_4.subgroup_id * subgroup_size)), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_struct_replacement_4.subgroup_id * subgroup_size, (false ? _GLF_FUZZED(_GLF_IDENTITY(num_workgroup, _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(num_workgroup, (num_workgroup) << 0u), 1u, 0u), (uvec3(_GLF_IDENTITY(num_workgroup, (num_workgroup) << 0u), 1u, 0u)) ^ uvec3(0u, 0u, 0u))), (uint(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(num_workgroup, (num_workgroup) << 0u), 1u, 0u), (uvec3(_GLF_IDENTITY(num_workgroup, (num_workgroup) << 0u), 1u, 0u)) ^ uvec3(0u, 0u, 0u)))) | (_GLF_IDENTITY(uint(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(num_workgroup, (num_workgroup) << 0u), 1u, 0u), (uvec3(_GLF_IDENTITY(num_workgroup, (num_workgroup) << 0u), 1u, 0u)) ^ uvec3(0u, 0u, 0u))), (uint(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(num_workgroup, (num_workgroup) << 0u), 1u, 0u), (uvec3(_GLF_IDENTITY(num_workgroup, (num_workgroup) << 0u), 1u, 0u)) ^ uvec3(0u, 0u, 0u)))) - 0u))))) : _GLF_struct_replacement_4.subgroup_id * subgroup_size)), uint(uvec2(_GLF_IDENTITY(_GLF_struct_replacement_4.subgroup_id * subgroup_size, (false ? _GLF_FUZZED(_GLF_IDENTITY(num_workgroup, _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(num_workgroup, (num_workgroup) << 0u), 1u, 0u), (uvec3(_GLF_IDENTITY(num_workgroup, (num_workgroup) << 0u), 1u, 0u)) ^ uvec3(0u, 0u, 0u))), (uint(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(num_workgroup, (num_workgroup) << 0u), 1u, 0u), (uvec3(_GLF_IDENTITY(num_workgroup, (num_workgroup) << 0u), 1u, 0u)) ^ uvec3(0u, 0u, 0u)))) | (_GLF_IDENTITY(uint(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(num_workgroup, (num_workgroup) << 0u), 1u, 0u), (uvec3(_GLF_IDENTITY(num_workgroup, (num_workgroup) << 0u), 1u, 0u)) ^ uvec3(0u, 0u, 0u))), (uint(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(num_workgroup, (num_workgroup) << 0u), 1u, 0u), (uvec3(_GLF_IDENTITY(num_workgroup, (num_workgroup) << 0u), 1u, 0u)) ^ uvec3(0u, 0u, 0u)))) - 0u))))) : _GLF_struct_replacement_4.subgroup_id * subgroup_size)), 0u))))))), _GLF_IDENTITY(_GLF_struct_replacement_4.subgroup_id * subgroup_size, (_GLF_struct_replacement_4.subgroup_id * subgroup_size) | 0u))), ~ (~ (_GLF_IDENTITY(_GLF_struct_replacement_4.subgroup_id * subgroup_size, min(_GLF_IDENTITY(_GLF_struct_replacement_4.subgroup_id * subgroup_size, (false ? _GLF_FUZZED(num_workgroup) : _GLF_struct_replacement_4.subgroup_id * subgroup_size)), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_struct_replacement_4.subgroup_id * subgroup_size, (_GLF_struct_replacement_4.subgroup_id * subgroup_size) ^ 0u), (_GLF_struct_replacement_4.subgroup_id * _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, 0u ^ (_GLF_IDENTITY(subgroup_size, ~ (_GLF_IDENTITY(~ (subgroup_size), ~ (~ (~ (subgroup_size)))))))), _GLF_IDENTITY(uint(uvec3(_GLF_IDENTITY(subgroup_size, 0u ^ (_GLF_IDENTITY(subgroup_size, ~ (_GLF_IDENTITY(~ (subgroup_size), ~ (~ (~ (subgroup_size)))))))), (1u | 1u), 0u)), min(uint(uvec3(_GLF_IDENTITY(subgroup_size, 0u ^ (_GLF_IDENTITY(subgroup_size, ~ (_GLF_IDENTITY(~ (subgroup_size), ~ (~ (~ (subgroup_size)))))))), (1u | 1u), 0u)), uint(uvec3(_GLF_IDENTITY(subgroup_size, 0u ^ (_GLF_IDENTITY(subgroup_size, ~ (_GLF_IDENTITY(~ (subgroup_size), ~ (~ (~ (subgroup_size)))))))), (1u | 1u), 0u)))))) | 0u)))))), workgroup_base + _GLF_IDENTITY(_GLF_IDENTITY(_GLF_struct_replacement_4.subgroup_id * subgroup_size, min(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_struct_replacement_4.subgroup_id * subgroup_size, (false ? _GLF_FUZZED(num_workgroup) : _GLF_struct_replacement_4.subgroup_id * subgroup_size)), clamp(_GLF_IDENTITY(_GLF_struct_replacement_4.subgroup_id * subgroup_size, (false ? _GLF_FUZZED(num_workgroup) : _GLF_struct_replacement_4.subgroup_id * subgroup_size)), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_struct_replacement_4.subgroup_id * subgroup_size, (false ? _GLF_FUZZED(num_workgroup) : _GLF_struct_replacement_4.subgroup_id * subgroup_size)), (_GLF_IDENTITY(_GLF_struct_replacement_4.subgroup_id * subgroup_size, (false ? _GLF_FUZZED(num_workgroup) : _GLF_struct_replacement_4.subgroup_id * subgroup_size))) | (0u << _GLF_IDENTITY(uint(1u), uint(1u)))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_struct_replacement_4.subgroup_id * subgroup_size, (false ? _GLF_FUZZED(_GLF_IDENTITY(num_workgroup, _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(num_workgroup, (num_workgroup) << 0u), 1u, 0u), (uvec3(_GLF_IDENTITY(num_workgroup, (num_workgroup) << 0u), 1u, 0u)) ^ uvec3(0u, 0u, 0u))), (uint(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(num_workgroup, (num_workgroup) << 0u), 1u, 0u), (uvec3(_GLF_IDENTITY(num_workgroup, (num_workgroup) << 0u), 1u, 0u)) ^ uvec3(0u, 0u, 0u)))) | (_GLF_IDENTITY(uint(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(num_workgroup, (num_workgroup) << 0u), 1u, 0u), (uvec3(_GLF_IDENTITY(num_workgroup, (num_workgroup) << 0u), 1u, 0u)) ^ uvec3(0u, 0u, 0u))), (uint(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(num_workgroup, (num_workgroup) << 0u), 1u, 0u), (uvec3(_GLF_IDENTITY(num_workgroup, (num_workgroup) << 0u), 1u, 0u)) ^ uvec3(0u, 0u, 0u)))) - 0u))))) : _GLF_struct_replacement_4.subgroup_id * subgroup_size)), min(_GLF_IDENTITY(_GLF_struct_replacement_4.subgroup_id * subgroup_size, (false ? _GLF_FUZZED(_GLF_IDENTITY(num_workgroup, _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(num_workgroup, (num_workgroup) << 0u), 1u, 0u), (uvec3(_GLF_IDENTITY(num_workgroup, (num_workgroup) << 0u), 1u, 0u)) ^ uvec3(0u, 0u, 0u))), (uint(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(num_workgroup, (num_workgroup) << 0u), 1u, 0u), (uvec3(_GLF_IDENTITY(num_workgroup, (num_workgroup) << 0u), 1u, 0u)) ^ uvec3(0u, 0u, 0u)))) | (_GLF_IDENTITY(uint(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(num_workgroup, (num_workgroup) << 0u), 1u, 0u), (uvec3(_GLF_IDENTITY(num_workgroup, (num_workgroup) << 0u), 1u, 0u)) ^ uvec3(0u, 0u, 0u))), (uint(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(num_workgroup, (num_workgroup) << 0u), 1u, 0u), (uvec3(_GLF_IDENTITY(num_workgroup, (num_workgroup) << 0u), 1u, 0u)) ^ uvec3(0u, 0u, 0u)))) - 0u))))) : _GLF_struct_replacement_4.subgroup_id * subgroup_size)), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_struct_replacement_4.subgroup_id * subgroup_size, (false ? _GLF_FUZZED(_GLF_IDENTITY(num_workgroup, _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(num_workgroup, (num_workgroup) << 0u), 1u, 0u), (uvec3(_GLF_IDENTITY(num_workgroup, (num_workgroup) << 0u), 1u, 0u)) ^ uvec3(0u, 0u, 0u))), (uint(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(num_workgroup, (num_workgroup) << 0u), 1u, 0u), (uvec3(_GLF_IDENTITY(num_workgroup, (num_workgroup) << 0u), 1u, 0u)) ^ uvec3(0u, 0u, 0u)))) | (_GLF_IDENTITY(uint(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(num_workgroup, (num_workgroup) << 0u), 1u, 0u), (uvec3(_GLF_IDENTITY(num_workgroup, (num_workgroup) << 0u), 1u, 0u)) ^ uvec3(0u, 0u, 0u))), (uint(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(num_workgroup, (num_workgroup) << 0u), 1u, 0u), (uvec3(_GLF_IDENTITY(num_workgroup, (num_workgroup) << 0u), 1u, 0u)) ^ uvec3(0u, 0u, 0u)))) - 0u))))) : _GLF_struct_replacement_4.subgroup_id * subgroup_size)), uint(uvec2(_GLF_IDENTITY(_GLF_struct_replacement_4.subgroup_id * subgroup_size, (false ? _GLF_FUZZED(_GLF_IDENTITY(num_workgroup, _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(num_workgroup, (num_workgroup) << 0u), 1u, 0u), (uvec3(_GLF_IDENTITY(num_workgroup, (num_workgroup) << 0u), 1u, 0u)) ^ uvec3(0u, 0u, 0u))), (uint(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(num_workgroup, (num_workgroup) << 0u), 1u, 0u), (uvec3(_GLF_IDENTITY(num_workgroup, (num_workgroup) << 0u), 1u, 0u)) ^ uvec3(0u, 0u, 0u)))) | (_GLF_IDENTITY(uint(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(num_workgroup, (num_workgroup) << 0u), 1u, 0u), (uvec3(_GLF_IDENTITY(num_workgroup, (num_workgroup) << 0u), 1u, 0u)) ^ uvec3(0u, 0u, 0u))), (uint(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(num_workgroup, (num_workgroup) << 0u), 1u, 0u), (uvec3(_GLF_IDENTITY(num_workgroup, (num_workgroup) << 0u), 1u, 0u)) ^ uvec3(0u, 0u, 0u)))) - 0u))))) : _GLF_struct_replacement_4.subgroup_id * subgroup_size)), 0u))))))), _GLF_IDENTITY(_GLF_struct_replacement_4.subgroup_id * subgroup_size, (_GLF_struct_replacement_4.subgroup_id * subgroup_size) | 0u))), ~ (~ (_GLF_IDENTITY(_GLF_struct_replacement_4.subgroup_id * subgroup_size, min(_GLF_IDENTITY(_GLF_struct_replacement_4.subgroup_id * subgroup_size, (false ? _GLF_FUZZED(num_workgroup) : _GLF_struct_replacement_4.subgroup_id * subgroup_size)), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_struct_replacement_4.subgroup_id * subgroup_size, (_GLF_struct_replacement_4.subgroup_id * subgroup_size) ^ 0u), (_GLF_struct_replacement_4.subgroup_id * _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, 0u ^ (_GLF_IDENTITY(subgroup_size, ~ (_GLF_IDENTITY(~ (subgroup_size), ~ (~ (~ (subgroup_size)))))))), _GLF_IDENTITY(uint(uvec3(_GLF_IDENTITY(subgroup_size, 0u ^ (_GLF_IDENTITY(subgroup_size, ~ (_GLF_IDENTITY(~ (subgroup_size), ~ (~ (~ (subgroup_size)))))))), (1u | 1u), 0u)), min(uint(uvec3(_GLF_IDENTITY(subgroup_size, 0u ^ (_GLF_IDENTITY(subgroup_size, ~ (_GLF_IDENTITY(~ (subgroup_size), ~ (~ (~ (subgroup_size)))))))), (1u | 1u), 0u)), uint(uvec3(_GLF_IDENTITY(subgroup_size, 0u ^ (_GLF_IDENTITY(subgroup_size, ~ (_GLF_IDENTITY(~ (subgroup_size), ~ (~ (~ (subgroup_size)))))))), (1u | 1u), 0u)))))) | 0u)))))))), _GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(_GLF_IDENTITY(_GLF_struct_replacement_4.subgroup_id * subgroup_size, min(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_struct_replacement_4.subgroup_id * subgroup_size, (false ? _GLF_FUZZED(num_workgroup) : _GLF_struct_replacement_4.subgroup_id * subgroup_size)), clamp(_GLF_IDENTITY(_GLF_struct_replacement_4.subgroup_id * subgroup_size, (false ? _GLF_FUZZED(num_workgroup) : _GLF_struct_replacement_4.subgroup_id * subgroup_size)), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_struct_replacement_4.subgroup_id * subgroup_size, (false ? _GLF_FUZZED(num_workgroup) : _GLF_struct_replacement_4.subgroup_id * subgroup_size)), (_GLF_IDENTITY(_GLF_struct_replacement_4.subgroup_id * subgroup_size, (false ? _GLF_FUZZED(num_workgroup) : _GLF_struct_replacement_4.subgroup_id * subgroup_size))) | (0u << _GLF_IDENTITY(uint(1u), uint(1u)))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_struct_replacement_4.subgroup_id * subgroup_size, (false ? _GLF_FUZZED(_GLF_IDENTITY(num_workgroup, _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(num_workgroup, (num_workgroup) << 0u), 1u, 0u), (uvec3(_GLF_IDENTITY(num_workgroup, (num_workgroup) << 0u), 1u, 0u)) ^ uvec3(0u, 0u, 0u))), (uint(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(num_workgroup, (num_workgroup) << 0u), 1u, 0u), (uvec3(_GLF_IDENTITY(num_workgroup, (num_workgroup) << 0u), 1u, 0u)) ^ uvec3(0u, 0u, 0u)))) | (_GLF_IDENTITY(uint(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(num_workgroup, (num_workgroup) << 0u), 1u, 0u), (uvec3(_GLF_IDENTITY(num_workgroup, (num_workgroup) << 0u), 1u, 0u)) ^ uvec3(0u, 0u, 0u))), (uint(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(num_workgroup, (num_workgroup) << 0u), 1u, 0u), (uvec3(_GLF_IDENTITY(num_workgroup, (num_workgroup) << 0u), 1u, 0u)) ^ uvec3(0u, 0u, 0u)))) - 0u))))) : _GLF_struct_replacement_4.subgroup_id * subgroup_size)), min(_GLF_IDENTITY(_GLF_struct_replacement_4.subgroup_id * subgroup_size, (false ? _GLF_FUZZED(_GLF_IDENTITY(num_workgroup, _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(num_workgroup, (num_workgroup) << 0u), 1u, 0u), (uvec3(_GLF_IDENTITY(num_workgroup, (num_workgroup) << 0u), 1u, 0u)) ^ uvec3(0u, 0u, 0u))), (uint(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(num_workgroup, (num_workgroup) << 0u), 1u, 0u), (uvec3(_GLF_IDENTITY(num_workgroup, (num_workgroup) << 0u), 1u, 0u)) ^ uvec3(0u, 0u, 0u)))) | (_GLF_IDENTITY(uint(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(num_workgroup, (num_workgroup) << 0u), 1u, 0u), (uvec3(_GLF_IDENTITY(num_workgroup, (num_workgroup) << 0u), 1u, 0u)) ^ uvec3(0u, 0u, 0u))), (uint(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(num_workgroup, (num_workgroup) << 0u), 1u, 0u), (uvec3(_GLF_IDENTITY(num_workgroup, (num_workgroup) << 0u), 1u, 0u)) ^ uvec3(0u, 0u, 0u)))) - 0u))))) : _GLF_struct_replacement_4.subgroup_id * subgroup_size)), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_struct_replacement_4.subgroup_id * subgroup_size, (false ? _GLF_FUZZED(_GLF_IDENTITY(num_workgroup, _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(num_workgroup, (num_workgroup) << 0u), 1u, 0u), (uvec3(_GLF_IDENTITY(num_workgroup, (num_workgroup) << 0u), 1u, 0u)) ^ uvec3(0u, 0u, 0u))), (uint(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(num_workgroup, (num_workgroup) << 0u), 1u, 0u), (uvec3(_GLF_IDENTITY(num_workgroup, (num_workgroup) << 0u), 1u, 0u)) ^ uvec3(0u, 0u, 0u)))) | (_GLF_IDENTITY(uint(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(num_workgroup, (num_workgroup) << 0u), 1u, 0u), (uvec3(_GLF_IDENTITY(num_workgroup, (num_workgroup) << 0u), 1u, 0u)) ^ uvec3(0u, 0u, 0u))), (uint(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(num_workgroup, (num_workgroup) << 0u), 1u, 0u), (uvec3(_GLF_IDENTITY(num_workgroup, (num_workgroup) << 0u), 1u, 0u)) ^ uvec3(0u, 0u, 0u)))) - 0u))))) : _GLF_struct_replacement_4.subgroup_id * subgroup_size)), uint(uvec2(_GLF_IDENTITY(_GLF_struct_replacement_4.subgroup_id * subgroup_size, (false ? _GLF_FUZZED(_GLF_IDENTITY(num_workgroup, _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(num_workgroup, (num_workgroup) << 0u), 1u, 0u), (uvec3(_GLF_IDENTITY(num_workgroup, (num_workgroup) << 0u), 1u, 0u)) ^ uvec3(0u, 0u, 0u))), (uint(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(num_workgroup, (num_workgroup) << 0u), 1u, 0u), (uvec3(_GLF_IDENTITY(num_workgroup, (num_workgroup) << 0u), 1u, 0u)) ^ uvec3(0u, 0u, 0u)))) | (_GLF_IDENTITY(uint(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(num_workgroup, (num_workgroup) << 0u), 1u, 0u), (uvec3(_GLF_IDENTITY(num_workgroup, (num_workgroup) << 0u), 1u, 0u)) ^ uvec3(0u, 0u, 0u))), (uint(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(num_workgroup, (num_workgroup) << 0u), 1u, 0u), (uvec3(_GLF_IDENTITY(num_workgroup, (num_workgroup) << 0u), 1u, 0u)) ^ uvec3(0u, 0u, 0u)))) - 0u))))) : _GLF_struct_replacement_4.subgroup_id * subgroup_size)), 0u))))))), _GLF_IDENTITY(_GLF_struct_replacement_4.subgroup_id * subgroup_size, (_GLF_struct_replacement_4.subgroup_id * subgroup_size) | 0u))), ~ (~ (_GLF_IDENTITY(_GLF_struct_replacement_4.subgroup_id * subgroup_size, min(_GLF_IDENTITY(_GLF_struct_replacement_4.subgroup_id * subgroup_size, (false ? _GLF_FUZZED(num_workgroup) : _GLF_struct_replacement_4.subgroup_id * subgroup_size)), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_struct_replacement_4.subgroup_id * subgroup_size, (_GLF_struct_replacement_4.subgroup_id * subgroup_size) ^ 0u), (_GLF_struct_replacement_4.subgroup_id * _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, 0u ^ (_GLF_IDENTITY(subgroup_size, ~ (_GLF_IDENTITY(~ (subgroup_size), ~ (~ (~ (subgroup_size)))))))), _GLF_IDENTITY(uint(uvec3(_GLF_IDENTITY(subgroup_size, 0u ^ (_GLF_IDENTITY(subgroup_size, ~ (_GLF_IDENTITY(~ (subgroup_size), ~ (~ (~ (subgroup_size)))))))), (1u | 1u), 0u)), min(uint(uvec3(_GLF_IDENTITY(subgroup_size, 0u ^ (_GLF_IDENTITY(subgroup_size, ~ (_GLF_IDENTITY(~ (subgroup_size), ~ (~ (~ (subgroup_size)))))))), (1u | 1u), 0u)), uint(uvec3(_GLF_IDENTITY(subgroup_size, 0u ^ (_GLF_IDENTITY(subgroup_size, ~ (_GLF_IDENTITY(~ (subgroup_size), ~ (~ (~ (subgroup_size)))))))), (1u | 1u), 0u)))))) | 0u)))))), max(workgroup_base + _GLF_IDENTITY(_GLF_IDENTITY(_GLF_struct_replacement_4.subgroup_id * subgroup_size, min(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_struct_replacement_4.subgroup_id * subgroup_size, (false ? _GLF_FUZZED(num_workgroup) : _GLF_struct_replacement_4.subgroup_id * subgroup_size)), clamp(_GLF_IDENTITY(_GLF_struct_replacement_4.subgroup_id * subgroup_size, (false ? _GLF_FUZZED(num_workgroup) : _GLF_struct_replacement_4.subgroup_id * subgroup_size)), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_struct_replacement_4.subgroup_id * subgroup_size, (false ? _GLF_FUZZED(num_workgroup) : _GLF_struct_replacement_4.subgroup_id * subgroup_size)), (_GLF_IDENTITY(_GLF_struct_replacement_4.subgroup_id * subgroup_size, (false ? _GLF_FUZZED(num_workgroup) : _GLF_struct_replacement_4.subgroup_id * subgroup_size))) | (0u << _GLF_IDENTITY(uint(1u), uint(1u)))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_struct_replacement_4.subgroup_id * subgroup_size, (false ? _GLF_FUZZED(_GLF_IDENTITY(num_workgroup, _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(num_workgroup, (num_workgroup) << 0u), 1u, 0u), (uvec3(_GLF_IDENTITY(num_workgroup, (num_workgroup) << 0u), 1u, 0u)) ^ uvec3(0u, 0u, 0u))), (uint(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(num_workgroup, (num_workgroup) << 0u), 1u, 0u), (uvec3(_GLF_IDENTITY(num_workgroup, (num_workgroup) << 0u), 1u, 0u)) ^ uvec3(0u, 0u, 0u)))) | (_GLF_IDENTITY(uint(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(num_workgroup, (num_workgroup) << 0u), 1u, 0u), (uvec3(_GLF_IDENTITY(num_workgroup, (num_workgroup) << 0u), 1u, 0u)) ^ uvec3(0u, 0u, 0u))), (uint(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(num_workgroup, (num_workgroup) << 0u), 1u, 0u), (uvec3(_GLF_IDENTITY(num_workgroup, (num_workgroup) << 0u), 1u, 0u)) ^ uvec3(0u, 0u, 0u)))) - 0u))))) : _GLF_struct_replacement_4.subgroup_id * subgroup_size)), min(_GLF_IDENTITY(_GLF_struct_replacement_4.subgroup_id * subgroup_size, (false ? _GLF_FUZZED(_GLF_IDENTITY(num_workgroup, _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(num_workgroup, (num_workgroup) << 0u), 1u, 0u), (uvec3(_GLF_IDENTITY(num_workgroup, (num_workgroup) << 0u), 1u, 0u)) ^ uvec3(0u, 0u, 0u))), (uint(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(num_workgroup, (num_workgroup) << 0u), 1u, 0u), (uvec3(_GLF_IDENTITY(num_workgroup, (num_workgroup) << 0u), 1u, 0u)) ^ uvec3(0u, 0u, 0u)))) | (_GLF_IDENTITY(uint(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(num_workgroup, (num_workgroup) << 0u), 1u, 0u), (uvec3(_GLF_IDENTITY(num_workgroup, (num_workgroup) << 0u), 1u, 0u)) ^ uvec3(0u, 0u, 0u))), (uint(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(num_workgroup, (num_workgroup) << 0u), 1u, 0u), (uvec3(_GLF_IDENTITY(num_workgroup, (num_workgroup) << 0u), 1u, 0u)) ^ uvec3(0u, 0u, 0u)))) - 0u))))) : _GLF_struct_replacement_4.subgroup_id * subgroup_size)), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_struct_replacement_4.subgroup_id * subgroup_size, (false ? _GLF_FUZZED(_GLF_IDENTITY(num_workgroup, _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(num_workgroup, (num_workgroup) << 0u), 1u, 0u), (uvec3(_GLF_IDENTITY(num_workgroup, (num_workgroup) << 0u), 1u, 0u)) ^ uvec3(0u, 0u, 0u))), (uint(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(num_workgroup, (num_workgroup) << 0u), 1u, 0u), (uvec3(_GLF_IDENTITY(num_workgroup, (num_workgroup) << 0u), 1u, 0u)) ^ uvec3(0u, 0u, 0u)))) | (_GLF_IDENTITY(uint(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(num_workgroup, (num_workgroup) << 0u), 1u, 0u), (uvec3(_GLF_IDENTITY(num_workgroup, (num_workgroup) << 0u), 1u, 0u)) ^ uvec3(0u, 0u, 0u))), (uint(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(num_workgroup, (num_workgroup) << 0u), 1u, 0u), (uvec3(_GLF_IDENTITY(num_workgroup, (num_workgroup) << 0u), 1u, 0u)) ^ uvec3(0u, 0u, 0u)))) - 0u))))) : _GLF_struct_replacement_4.subgroup_id * subgroup_size)), uint(uvec2(_GLF_IDENTITY(_GLF_struct_replacement_4.subgroup_id * subgroup_size, (false ? _GLF_FUZZED(_GLF_IDENTITY(num_workgroup, _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(num_workgroup, (num_workgroup) << 0u), 1u, 0u), (uvec3(_GLF_IDENTITY(num_workgroup, (num_workgroup) << 0u), 1u, 0u)) ^ uvec3(0u, 0u, 0u))), (uint(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(num_workgroup, (num_workgroup) << 0u), 1u, 0u), (uvec3(_GLF_IDENTITY(num_workgroup, (num_workgroup) << 0u), 1u, 0u)) ^ uvec3(0u, 0u, 0u)))) | (_GLF_IDENTITY(uint(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(num_workgroup, (num_workgroup) << 0u), 1u, 0u), (uvec3(_GLF_IDENTITY(num_workgroup, (num_workgroup) << 0u), 1u, 0u)) ^ uvec3(0u, 0u, 0u))), (uint(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(num_workgroup, (num_workgroup) << 0u), 1u, 0u), (uvec3(_GLF_IDENTITY(num_workgroup, (num_workgroup) << 0u), 1u, 0u)) ^ uvec3(0u, 0u, 0u)))) - 0u))))) : _GLF_struct_replacement_4.subgroup_id * subgroup_size)), 0u))))))), _GLF_IDENTITY(_GLF_struct_replacement_4.subgroup_id * subgroup_size, (_GLF_struct_replacement_4.subgroup_id * subgroup_size) | 0u))), ~ (~ (_GLF_IDENTITY(_GLF_struct_replacement_4.subgroup_id * subgroup_size, min(_GLF_IDENTITY(_GLF_struct_replacement_4.subgroup_id * subgroup_size, (false ? _GLF_FUZZED(num_workgroup) : _GLF_struct_replacement_4.subgroup_id * subgroup_size)), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_struct_replacement_4.subgroup_id * subgroup_size, (_GLF_struct_replacement_4.subgroup_id * subgroup_size) ^ 0u), (_GLF_struct_replacement_4.subgroup_id * _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, 0u ^ (_GLF_IDENTITY(subgroup_size, ~ (_GLF_IDENTITY(~ (subgroup_size), ~ (~ (~ (subgroup_size)))))))), _GLF_IDENTITY(uint(uvec3(_GLF_IDENTITY(subgroup_size, 0u ^ (_GLF_IDENTITY(subgroup_size, ~ (_GLF_IDENTITY(~ (subgroup_size), ~ (~ (~ (subgroup_size)))))))), (1u | 1u), 0u)), min(uint(uvec3(_GLF_IDENTITY(subgroup_size, 0u ^ (_GLF_IDENTITY(subgroup_size, ~ (_GLF_IDENTITY(~ (subgroup_size), ~ (~ (~ (subgroup_size)))))))), (1u | 1u), 0u)), uint(uvec3(_GLF_IDENTITY(subgroup_size, 0u ^ (_GLF_IDENTITY(subgroup_size, ~ (_GLF_IDENTITY(~ (subgroup_size), ~ (~ (~ (subgroup_size)))))))), (1u | 1u), 0u)))))) | 0u)))))), workgroup_base + _GLF_IDENTITY(_GLF_IDENTITY(_GLF_struct_replacement_4.subgroup_id * subgroup_size, min(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_struct_replacement_4.subgroup_id * subgroup_size, (false ? _GLF_FUZZED(num_workgroup) : _GLF_struct_replacement_4.subgroup_id * subgroup_size)), clamp(_GLF_IDENTITY(_GLF_struct_replacement_4.subgroup_id * subgroup_size, (false ? _GLF_FUZZED(num_workgroup) : _GLF_struct_replacement_4.subgroup_id * subgroup_size)), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_struct_replacement_4.subgroup_id * subgroup_size, (false ? _GLF_FUZZED(num_workgroup) : _GLF_struct_replacement_4.subgroup_id * subgroup_size)), (_GLF_IDENTITY(_GLF_struct_replacement_4.subgroup_id * subgroup_size, (false ? _GLF_FUZZED(num_workgroup) : _GLF_struct_replacement_4.subgroup_id * subgroup_size))) | (0u << _GLF_IDENTITY(uint(1u), uint(1u)))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_struct_replacement_4.subgroup_id * subgroup_size, (false ? _GLF_FUZZED(_GLF_IDENTITY(num_workgroup, _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(num_workgroup, (num_workgroup) << 0u), 1u, 0u), (uvec3(_GLF_IDENTITY(num_workgroup, (num_workgroup) << 0u), 1u, 0u)) ^ uvec3(0u, 0u, 0u))), (uint(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(num_workgroup, (num_workgroup) << 0u), 1u, 0u), (uvec3(_GLF_IDENTITY(num_workgroup, (num_workgroup) << 0u), 1u, 0u)) ^ uvec3(0u, 0u, 0u)))) | (_GLF_IDENTITY(uint(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(num_workgroup, (num_workgroup) << 0u), 1u, 0u), (uvec3(_GLF_IDENTITY(num_workgroup, (num_workgroup) << 0u), 1u, 0u)) ^ uvec3(0u, 0u, 0u))), (uint(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(num_workgroup, (num_workgroup) << 0u), 1u, 0u), (uvec3(_GLF_IDENTITY(num_workgroup, (num_workgroup) << 0u), 1u, 0u)) ^ uvec3(0u, 0u, 0u)))) - 0u))))) : _GLF_struct_replacement_4.subgroup_id * subgroup_size)), min(_GLF_IDENTITY(_GLF_struct_replacement_4.subgroup_id * subgroup_size, (false ? _GLF_FUZZED(_GLF_IDENTITY(num_workgroup, _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(num_workgroup, (num_workgroup) << 0u), 1u, 0u), (uvec3(_GLF_IDENTITY(num_workgroup, (num_workgroup) << 0u), 1u, 0u)) ^ uvec3(0u, 0u, 0u))), (uint(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(num_workgroup, (num_workgroup) << 0u), 1u, 0u), (uvec3(_GLF_IDENTITY(num_workgroup, (num_workgroup) << 0u), 1u, 0u)) ^ uvec3(0u, 0u, 0u)))) | (_GLF_IDENTITY(uint(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(num_workgroup, (num_workgroup) << 0u), 1u, 0u), (uvec3(_GLF_IDENTITY(num_workgroup, (num_workgroup) << 0u), 1u, 0u)) ^ uvec3(0u, 0u, 0u))), (uint(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(num_workgroup, (num_workgroup) << 0u), 1u, 0u), (uvec3(_GLF_IDENTITY(num_workgroup, (num_workgroup) << 0u), 1u, 0u)) ^ uvec3(0u, 0u, 0u)))) - 0u))))) : _GLF_struct_replacement_4.subgroup_id * subgroup_size)), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_struct_replacement_4.subgroup_id * subgroup_size, (false ? _GLF_FUZZED(_GLF_IDENTITY(num_workgroup, _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(num_workgroup, (num_workgroup) << 0u), 1u, 0u), (uvec3(_GLF_IDENTITY(num_workgroup, (num_workgroup) << 0u), 1u, 0u)) ^ uvec3(0u, 0u, 0u))), (uint(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(num_workgroup, (num_workgroup) << 0u), 1u, 0u), (uvec3(_GLF_IDENTITY(num_workgroup, (num_workgroup) << 0u), 1u, 0u)) ^ uvec3(0u, 0u, 0u)))) | (_GLF_IDENTITY(uint(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(num_workgroup, (num_workgroup) << 0u), 1u, 0u), (uvec3(_GLF_IDENTITY(num_workgroup, (num_workgroup) << 0u), 1u, 0u)) ^ uvec3(0u, 0u, 0u))), (uint(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(num_workgroup, (num_workgroup) << 0u), 1u, 0u), (uvec3(_GLF_IDENTITY(num_workgroup, (num_workgroup) << 0u), 1u, 0u)) ^ uvec3(0u, 0u, 0u)))) - 0u))))) : _GLF_struct_replacement_4.subgroup_id * subgroup_size)), uint(uvec2(_GLF_IDENTITY(_GLF_struct_replacement_4.subgroup_id * subgroup_size, (false ? _GLF_FUZZED(_GLF_IDENTITY(num_workgroup, _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(num_workgroup, (num_workgroup) << 0u), 1u, 0u), (uvec3(_GLF_IDENTITY(num_workgroup, (num_workgroup) << 0u), 1u, 0u)) ^ uvec3(0u, 0u, 0u))), (uint(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(num_workgroup, (num_workgroup) << 0u), 1u, 0u), (uvec3(_GLF_IDENTITY(num_workgroup, (num_workgroup) << 0u), 1u, 0u)) ^ uvec3(0u, 0u, 0u)))) | (_GLF_IDENTITY(uint(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(num_workgroup, (num_workgroup) << 0u), 1u, 0u), (uvec3(_GLF_IDENTITY(num_workgroup, (num_workgroup) << 0u), 1u, 0u)) ^ uvec3(0u, 0u, 0u))), (uint(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(num_workgroup, (num_workgroup) << 0u), 1u, 0u), (uvec3(_GLF_IDENTITY(num_workgroup, (num_workgroup) << 0u), 1u, 0u)) ^ uvec3(0u, 0u, 0u)))) - 0u))))) : _GLF_struct_replacement_4.subgroup_id * subgroup_size)), 0u))))))), _GLF_IDENTITY(_GLF_struct_replacement_4.subgroup_id * subgroup_size, (_GLF_struct_replacement_4.subgroup_id * subgroup_size) | 0u))), ~ (~ (_GLF_IDENTITY(_GLF_struct_replacement_4.subgroup_id * subgroup_size, min(_GLF_IDENTITY(_GLF_struct_replacement_4.subgroup_id * subgroup_size, (false ? _GLF_FUZZED(num_workgroup) : _GLF_struct_replacement_4.subgroup_id * subgroup_size)), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_struct_replacement_4.subgroup_id * subgroup_size, (_GLF_struct_replacement_4.subgroup_id * subgroup_size) ^ 0u), (_GLF_struct_replacement_4.subgroup_id * _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, 0u ^ (_GLF_IDENTITY(subgroup_size, ~ (_GLF_IDENTITY(~ (subgroup_size), ~ (~ (~ (subgroup_size)))))))), _GLF_IDENTITY(uint(uvec3(_GLF_IDENTITY(subgroup_size, 0u ^ (_GLF_IDENTITY(subgroup_size, ~ (_GLF_IDENTITY(~ (subgroup_size), ~ (~ (~ (subgroup_size)))))))), (1u | 1u), 0u)), min(uint(uvec3(_GLF_IDENTITY(subgroup_size, 0u ^ (_GLF_IDENTITY(subgroup_size, ~ (_GLF_IDENTITY(~ (subgroup_size), ~ (~ (~ (subgroup_size)))))))), (1u | 1u), 0u)), uint(uvec3(_GLF_IDENTITY(subgroup_size, 0u ^ (_GLF_IDENTITY(subgroup_size, ~ (_GLF_IDENTITY(~ (subgroup_size), ~ (~ (~ (subgroup_size)))))))), (1u | 1u), 0u)))))) | 0u)))))))), _GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(_GLF_IDENTITY(_GLF_struct_replacement_4.subgroup_id * subgroup_size, min(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_struct_replacement_4.subgroup_id * subgroup_size, (false ? _GLF_FUZZED(num_workgroup) : _GLF_struct_replacement_4.subgroup_id * subgroup_size)), clamp(_GLF_IDENTITY(_GLF_struct_replacement_4.subgroup_id * subgroup_size, (false ? _GLF_FUZZED(num_workgroup) : _GLF_struct_replacement_4.subgroup_id * subgroup_size)), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_struct_replacement_4.subgroup_id * subgroup_size, (false ? _GLF_FUZZED(num_workgroup) : _GLF_struct_replacement_4.subgroup_id * subgroup_size)), (_GLF_IDENTITY(_GLF_struct_replacement_4.subgroup_id * subgroup_size, (false ? _GLF_FUZZED(num_workgroup) : _GLF_struct_replacement_4.subgroup_id * subgroup_size))) | (0u << _GLF_IDENTITY(uint(1u), uint(1u)))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_struct_replacement_4.subgroup_id * subgroup_size, (false ? _GLF_FUZZED(_GLF_IDENTITY(num_workgroup, _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(num_workgroup, (num_workgroup) << 0u), 1u, 0u), (uvec3(_GLF_IDENTITY(num_workgroup, (num_workgroup) << 0u), 1u, 0u)) ^ uvec3(0u, 0u, 0u))), (uint(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(num_workgroup, (num_workgroup) << 0u), 1u, 0u), (uvec3(_GLF_IDENTITY(num_workgroup, (num_workgroup) << 0u), 1u, 0u)) ^ uvec3(0u, 0u, 0u)))) | (_GLF_IDENTITY(uint(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(num_workgroup, (num_workgroup) << 0u), 1u, 0u), (uvec3(_GLF_IDENTITY(num_workgroup, (num_workgroup) << 0u), 1u, 0u)) ^ uvec3(0u, 0u, 0u))), (uint(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(num_workgroup, (num_workgroup) << 0u), 1u, 0u), (uvec3(_GLF_IDENTITY(num_workgroup, (num_workgroup) << 0u), 1u, 0u)) ^ uvec3(0u, 0u, 0u)))) - 0u))))) : _GLF_struct_replacement_4.subgroup_id * subgroup_size)), min(_GLF_IDENTITY(_GLF_struct_replacement_4.subgroup_id * subgroup_size, (false ? _GLF_FUZZED(_GLF_IDENTITY(num_workgroup, _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(num_workgroup, (num_workgroup) << 0u), 1u, 0u), (uvec3(_GLF_IDENTITY(num_workgroup, (num_workgroup) << 0u), 1u, 0u)) ^ uvec3(0u, 0u, 0u))), (uint(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(num_workgroup, (num_workgroup) << 0u), 1u, 0u), (uvec3(_GLF_IDENTITY(num_workgroup, (num_workgroup) << 0u), 1u, 0u)) ^ uvec3(0u, 0u, 0u)))) | (_GLF_IDENTITY(uint(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(num_workgroup, (num_workgroup) << 0u), 1u, 0u), (uvec3(_GLF_IDENTITY(num_workgroup, (num_workgroup) << 0u), 1u, 0u)) ^ uvec3(0u, 0u, 0u))), (uint(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(num_workgroup, (num_workgroup) << 0u), 1u, 0u), (uvec3(_GLF_IDENTITY(num_workgroup, (num_workgroup) << 0u), 1u, 0u)) ^ uvec3(0u, 0u, 0u)))) - 0u))))) : _GLF_struct_replacement_4.subgroup_id * subgroup_size)), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_struct_replacement_4.subgroup_id * subgroup_size, (false ? _GLF_FUZZED(_GLF_IDENTITY(num_workgroup, _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(num_workgroup, (num_workgroup) << 0u), 1u, 0u), (uvec3(_GLF_IDENTITY(num_workgroup, (num_workgroup) << 0u), 1u, 0u)) ^ uvec3(0u, 0u, 0u))), (uint(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(num_workgroup, (num_workgroup) << 0u), 1u, 0u), (uvec3(_GLF_IDENTITY(num_workgroup, (num_workgroup) << 0u), 1u, 0u)) ^ uvec3(0u, 0u, 0u)))) | (_GLF_IDENTITY(uint(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(num_workgroup, (num_workgroup) << 0u), 1u, 0u), (uvec3(_GLF_IDENTITY(num_workgroup, (num_workgroup) << 0u), 1u, 0u)) ^ uvec3(0u, 0u, 0u))), (uint(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(num_workgroup, (num_workgroup) << 0u), 1u, 0u), (uvec3(_GLF_IDENTITY(num_workgroup, (num_workgroup) << 0u), 1u, 0u)) ^ uvec3(0u, 0u, 0u)))) - 0u))))) : _GLF_struct_replacement_4.subgroup_id * subgroup_size)), uint(uvec2(_GLF_IDENTITY(_GLF_struct_replacement_4.subgroup_id * subgroup_size, (false ? _GLF_FUZZED(_GLF_IDENTITY(num_workgroup, _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(num_workgroup, (num_workgroup) << 0u), 1u, 0u), (uvec3(_GLF_IDENTITY(num_workgroup, (num_workgroup) << 0u), 1u, 0u)) ^ uvec3(0u, 0u, 0u))), (uint(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(num_workgroup, (num_workgroup) << 0u), 1u, 0u), (uvec3(_GLF_IDENTITY(num_workgroup, (num_workgroup) << 0u), 1u, 0u)) ^ uvec3(0u, 0u, 0u)))) | (_GLF_IDENTITY(uint(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(num_workgroup, (num_workgroup) << 0u), 1u, 0u), (uvec3(_GLF_IDENTITY(num_workgroup, (num_workgroup) << 0u), 1u, 0u)) ^ uvec3(0u, 0u, 0u))), (uint(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(num_workgroup, (num_workgroup) << 0u), 1u, 0u), (uvec3(_GLF_IDENTITY(num_workgroup, (num_workgroup) << 0u), 1u, 0u)) ^ uvec3(0u, 0u, 0u)))) - 0u))))) : _GLF_struct_replacement_4.subgroup_id * subgroup_size)), 0u))))))), _GLF_IDENTITY(_GLF_struct_replacement_4.subgroup_id * subgroup_size, (_GLF_struct_replacement_4.subgroup_id * subgroup_size) | 0u))), ~ (~ (_GLF_IDENTITY(_GLF_struct_replacement_4.subgroup_id * subgroup_size, min(_GLF_IDENTITY(_GLF_struct_replacement_4.subgroup_id * subgroup_size, (false ? _GLF_FUZZED(num_workgroup) : _GLF_struct_replacement_4.subgroup_id * subgroup_size)), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_struct_replacement_4.subgroup_id * subgroup_size, (_GLF_struct_replacement_4.subgroup_id * subgroup_size) ^ 0u), (_GLF_struct_replacement_4.subgroup_id * _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, 0u ^ (_GLF_IDENTITY(subgroup_size, ~ (_GLF_IDENTITY(~ (subgroup_size), ~ (~ (~ (subgroup_size)))))))), _GLF_IDENTITY(uint(uvec3(_GLF_IDENTITY(subgroup_size, 0u ^ (_GLF_IDENTITY(subgroup_size, ~ (_GLF_IDENTITY(~ (subgroup_size), ~ (~ (~ (subgroup_size)))))))), (1u | 1u), 0u)), min(uint(uvec3(_GLF_IDENTITY(subgroup_size, 0u ^ (_GLF_IDENTITY(subgroup_size, ~ (_GLF_IDENTITY(~ (subgroup_size), ~ (~ (~ (subgroup_size)))))))), (1u | 1u), 0u)), uint(uvec3(_GLF_IDENTITY(subgroup_size, 0u ^ (_GLF_IDENTITY(subgroup_size, ~ (_GLF_IDENTITY(~ (subgroup_size), ~ (~ (~ (subgroup_size)))))))), (1u | 1u), 0u)))))) | 0u)))))), (_GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(_GLF_IDENTITY(_GLF_struct_replacement_4.subgroup_id * subgroup_size, min(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_struct_replacement_4.subgroup_id * subgroup_size, (false ? _GLF_FUZZED(num_workgroup) : _GLF_struct_replacement_4.subgroup_id * subgroup_size)), clamp(_GLF_IDENTITY(_GLF_struct_replacement_4.subgroup_id * subgroup_size, (false ? _GLF_FUZZED(num_workgroup) : _GLF_struct_replacement_4.subgroup_id * subgroup_size)), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_struct_replacement_4.subgroup_id * subgroup_size, (false ? _GLF_FUZZED(num_workgroup) : _GLF_struct_replacement_4.subgroup_id * subgroup_size)), (_GLF_IDENTITY(_GLF_struct_replacement_4.subgroup_id * subgroup_size, (false ? _GLF_FUZZED(num_workgroup) : _GLF_struct_replacement_4.subgroup_id * subgroup_size))) | (0u << _GLF_IDENTITY(uint(1u), uint(1u)))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_struct_replacement_4.subgroup_id * subgroup_size, (false ? _GLF_FUZZED(_GLF_IDENTITY(num_workgroup, _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(num_workgroup, (num_workgroup) << 0u), 1u, 0u), (uvec3(_GLF_IDENTITY(num_workgroup, (num_workgroup) << 0u), 1u, 0u)) ^ uvec3(0u, 0u, 0u))), (uint(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(num_workgroup, (num_workgroup) << 0u), 1u, 0u), (uvec3(_GLF_IDENTITY(num_workgroup, (num_workgroup) << 0u), 1u, 0u)) ^ uvec3(0u, 0u, 0u)))) | (_GLF_IDENTITY(uint(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(num_workgroup, (num_workgroup) << 0u), 1u, 0u), (uvec3(_GLF_IDENTITY(num_workgroup, (num_workgroup) << 0u), 1u, 0u)) ^ uvec3(0u, 0u, 0u))), (uint(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(num_workgroup, (num_workgroup) << 0u), 1u, 0u), (uvec3(_GLF_IDENTITY(num_workgroup, (num_workgroup) << 0u), 1u, 0u)) ^ uvec3(0u, 0u, 0u)))) - 0u))))) : _GLF_struct_replacement_4.subgroup_id * subgroup_size)), min(_GLF_IDENTITY(_GLF_struct_replacement_4.subgroup_id * subgroup_size, (false ? _GLF_FUZZED(_GLF_IDENTITY(num_workgroup, _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(num_workgroup, (num_workgroup) << 0u), 1u, 0u), (uvec3(_GLF_IDENTITY(num_workgroup, (num_workgroup) << 0u), 1u, 0u)) ^ uvec3(0u, 0u, 0u))), (uint(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(num_workgroup, (num_workgroup) << 0u), 1u, 0u), (uvec3(_GLF_IDENTITY(num_workgroup, (num_workgroup) << 0u), 1u, 0u)) ^ uvec3(0u, 0u, 0u)))) | (_GLF_IDENTITY(uint(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(num_workgroup, (num_workgroup) << 0u), 1u, 0u), (uvec3(_GLF_IDENTITY(num_workgroup, (num_workgroup) << 0u), 1u, 0u)) ^ uvec3(0u, 0u, 0u))), (uint(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(num_workgroup, (num_workgroup) << 0u), 1u, 0u), (uvec3(_GLF_IDENTITY(num_workgroup, (num_workgroup) << 0u), 1u, 0u)) ^ uvec3(0u, 0u, 0u)))) - 0u))))) : _GLF_struct_replacement_4.subgroup_id * subgroup_size)), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_struct_replacement_4.subgroup_id * subgroup_size, (false ? _GLF_FUZZED(_GLF_IDENTITY(num_workgroup, _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(num_workgroup, (num_workgroup) << 0u), 1u, 0u), (uvec3(_GLF_IDENTITY(num_workgroup, (num_workgroup) << 0u), 1u, 0u)) ^ uvec3(0u, 0u, 0u))), (uint(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(num_workgroup, (num_workgroup) << 0u), 1u, 0u), (uvec3(_GLF_IDENTITY(num_workgroup, (num_workgroup) << 0u), 1u, 0u)) ^ uvec3(0u, 0u, 0u)))) | (_GLF_IDENTITY(uint(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(num_workgroup, (num_workgroup) << 0u), 1u, 0u), (uvec3(_GLF_IDENTITY(num_workgroup, (num_workgroup) << 0u), 1u, 0u)) ^ uvec3(0u, 0u, 0u))), (uint(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(num_workgroup, (num_workgroup) << 0u), 1u, 0u), (uvec3(_GLF_IDENTITY(num_workgroup, (num_workgroup) << 0u), 1u, 0u)) ^ uvec3(0u, 0u, 0u)))) - 0u))))) : _GLF_struct_replacement_4.subgroup_id * subgroup_size)), uint(uvec2(_GLF_IDENTITY(_GLF_struct_replacement_4.subgroup_id * subgroup_size, (false ? _GLF_FUZZED(_GLF_IDENTITY(num_workgroup, _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(num_workgroup, (num_workgroup) << 0u), 1u, 0u), (uvec3(_GLF_IDENTITY(num_workgroup, (num_workgroup) << 0u), 1u, 0u)) ^ uvec3(0u, 0u, 0u))), (uint(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(num_workgroup, (num_workgroup) << 0u), 1u, 0u), (uvec3(_GLF_IDENTITY(num_workgroup, (num_workgroup) << 0u), 1u, 0u)) ^ uvec3(0u, 0u, 0u)))) | (_GLF_IDENTITY(uint(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(num_workgroup, (num_workgroup) << 0u), 1u, 0u), (uvec3(_GLF_IDENTITY(num_workgroup, (num_workgroup) << 0u), 1u, 0u)) ^ uvec3(0u, 0u, 0u))), (uint(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(num_workgroup, (num_workgroup) << 0u), 1u, 0u), (uvec3(_GLF_IDENTITY(num_workgroup, (num_workgroup) << 0u), 1u, 0u)) ^ uvec3(0u, 0u, 0u)))) - 0u))))) : _GLF_struct_replacement_4.subgroup_id * subgroup_size)), 0u))))))), _GLF_IDENTITY(_GLF_struct_replacement_4.subgroup_id * subgroup_size, (_GLF_struct_replacement_4.subgroup_id * subgroup_size) | 0u))), ~ (~ (_GLF_IDENTITY(_GLF_struct_replacement_4.subgroup_id * subgroup_size, min(_GLF_IDENTITY(_GLF_struct_replacement_4.subgroup_id * subgroup_size, (false ? _GLF_FUZZED(num_workgroup) : _GLF_struct_replacement_4.subgroup_id * subgroup_size)), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_struct_replacement_4.subgroup_id * subgroup_size, (_GLF_struct_replacement_4.subgroup_id * subgroup_size) ^ 0u), (_GLF_struct_replacement_4.subgroup_id * _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, 0u ^ (_GLF_IDENTITY(subgroup_size, ~ (_GLF_IDENTITY(~ (subgroup_size), ~ (~ (~ (subgroup_size)))))))), _GLF_IDENTITY(uint(uvec3(_GLF_IDENTITY(subgroup_size, 0u ^ (_GLF_IDENTITY(subgroup_size, ~ (_GLF_IDENTITY(~ (subgroup_size), ~ (~ (~ (subgroup_size)))))))), (1u | 1u), 0u)), min(uint(uvec3(_GLF_IDENTITY(subgroup_size, 0u ^ (_GLF_IDENTITY(subgroup_size, ~ (_GLF_IDENTITY(~ (subgroup_size), ~ (~ (~ (subgroup_size)))))))), (1u | 1u), 0u)), uint(uvec3(_GLF_IDENTITY(subgroup_size, 0u ^ (_GLF_IDENTITY(subgroup_size, ~ (_GLF_IDENTITY(~ (subgroup_size), ~ (~ (~ (subgroup_size)))))))), (1u | 1u), 0u)))))) | 0u)))))), (false ? _GLF_FUZZED(workgroup_base) : workgroup_base + _GLF_IDENTITY(_GLF_IDENTITY(_GLF_struct_replacement_4.subgroup_id * subgroup_size, min(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_struct_replacement_4.subgroup_id * subgroup_size, (false ? _GLF_FUZZED(num_workgroup) : _GLF_struct_replacement_4.subgroup_id * subgroup_size)), clamp(_GLF_IDENTITY(_GLF_struct_replacement_4.subgroup_id * subgroup_size, (false ? _GLF_FUZZED(num_workgroup) : _GLF_struct_replacement_4.subgroup_id * subgroup_size)), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_struct_replacement_4.subgroup_id * subgroup_size, (false ? _GLF_FUZZED(num_workgroup) : _GLF_struct_replacement_4.subgroup_id * subgroup_size)), (_GLF_IDENTITY(_GLF_struct_replacement_4.subgroup_id * subgroup_size, (false ? _GLF_FUZZED(num_workgroup) : _GLF_struct_replacement_4.subgroup_id * subgroup_size))) | (0u << _GLF_IDENTITY(uint(1u), uint(1u)))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_struct_replacement_4.subgroup_id * subgroup_size, (false ? _GLF_FUZZED(_GLF_IDENTITY(num_workgroup, _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(num_workgroup, (num_workgroup) << 0u), 1u, 0u), (uvec3(_GLF_IDENTITY(num_workgroup, (num_workgroup) << 0u), 1u, 0u)) ^ uvec3(0u, 0u, 0u))), (uint(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(num_workgroup, (num_workgroup) << 0u), 1u, 0u), (uvec3(_GLF_IDENTITY(num_workgroup, (num_workgroup) << 0u), 1u, 0u)) ^ uvec3(0u, 0u, 0u)))) | (_GLF_IDENTITY(uint(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(num_workgroup, (num_workgroup) << 0u), 1u, 0u), (uvec3(_GLF_IDENTITY(num_workgroup, (num_workgroup) << 0u), 1u, 0u)) ^ uvec3(0u, 0u, 0u))), (uint(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(num_workgroup, (num_workgroup) << 0u), 1u, 0u), (uvec3(_GLF_IDENTITY(num_workgroup, (num_workgroup) << 0u), 1u, 0u)) ^ uvec3(0u, 0u, 0u)))) - 0u))))) : _GLF_struct_replacement_4.subgroup_id * subgroup_size)), min(_GLF_IDENTITY(_GLF_struct_replacement_4.subgroup_id * subgroup_size, (false ? _GLF_FUZZED(_GLF_IDENTITY(num_workgroup, _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(num_workgroup, (num_workgroup) << 0u), 1u, 0u), (uvec3(_GLF_IDENTITY(num_workgroup, (num_workgroup) << 0u), 1u, 0u)) ^ uvec3(0u, 0u, 0u))), (uint(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(num_workgroup, (num_workgroup) << 0u), 1u, 0u), (uvec3(_GLF_IDENTITY(num_workgroup, (num_workgroup) << 0u), 1u, 0u)) ^ uvec3(0u, 0u, 0u)))) | (_GLF_IDENTITY(uint(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(num_workgroup, (num_workgroup) << 0u), 1u, 0u), (uvec3(_GLF_IDENTITY(num_workgroup, (num_workgroup) << 0u), 1u, 0u)) ^ uvec3(0u, 0u, 0u))), (uint(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(num_workgroup, (num_workgroup) << 0u), 1u, 0u), (uvec3(_GLF_IDENTITY(num_workgroup, (num_workgroup) << 0u), 1u, 0u)) ^ uvec3(0u, 0u, 0u)))) - 0u))))) : _GLF_struct_replacement_4.subgroup_id * subgroup_size)), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_struct_replacement_4.subgroup_id * subgroup_size, (false ? _GLF_FUZZED(_GLF_IDENTITY(num_workgroup, _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(num_workgroup, (num_workgroup) << 0u), 1u, 0u), (uvec3(_GLF_IDENTITY(num_workgroup, (num_workgroup) << 0u), 1u, 0u)) ^ uvec3(0u, 0u, 0u))), (uint(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(num_workgroup, (num_workgroup) << 0u), 1u, 0u), (uvec3(_GLF_IDENTITY(num_workgroup, (num_workgroup) << 0u), 1u, 0u)) ^ uvec3(0u, 0u, 0u)))) | (_GLF_IDENTITY(uint(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(num_workgroup, (num_workgroup) << 0u), 1u, 0u), (uvec3(_GLF_IDENTITY(num_workgroup, (num_workgroup) << 0u), 1u, 0u)) ^ uvec3(0u, 0u, 0u))), (uint(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(num_workgroup, (num_workgroup) << 0u), 1u, 0u), (uvec3(_GLF_IDENTITY(num_workgroup, (num_workgroup) << 0u), 1u, 0u)) ^ uvec3(0u, 0u, 0u)))) - 0u))))) : _GLF_struct_replacement_4.subgroup_id * subgroup_size)), uint(uvec2(_GLF_IDENTITY(_GLF_struct_replacement_4.subgroup_id * subgroup_size, (false ? _GLF_FUZZED(_GLF_IDENTITY(num_workgroup, _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(num_workgroup, (num_workgroup) << 0u), 1u, 0u), (uvec3(_GLF_IDENTITY(num_workgroup, (num_workgroup) << 0u), 1u, 0u)) ^ uvec3(0u, 0u, 0u))), (uint(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(num_workgroup, (num_workgroup) << 0u), 1u, 0u), (uvec3(_GLF_IDENTITY(num_workgroup, (num_workgroup) << 0u), 1u, 0u)) ^ uvec3(0u, 0u, 0u)))) | (_GLF_IDENTITY(uint(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(num_workgroup, (num_workgroup) << 0u), 1u, 0u), (uvec3(_GLF_IDENTITY(num_workgroup, (num_workgroup) << 0u), 1u, 0u)) ^ uvec3(0u, 0u, 0u))), (uint(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(num_workgroup, (num_workgroup) << 0u), 1u, 0u), (uvec3(_GLF_IDENTITY(num_workgroup, (num_workgroup) << 0u), 1u, 0u)) ^ uvec3(0u, 0u, 0u)))) - 0u))))) : _GLF_struct_replacement_4.subgroup_id * subgroup_size)), 0u))))))), _GLF_IDENTITY(_GLF_struct_replacement_4.subgroup_id * subgroup_size, (_GLF_struct_replacement_4.subgroup_id * subgroup_size) | 0u))), ~ (~ (_GLF_IDENTITY(_GLF_struct_replacement_4.subgroup_id * subgroup_size, min(_GLF_IDENTITY(_GLF_struct_replacement_4.subgroup_id * subgroup_size, (false ? _GLF_FUZZED(num_workgroup) : _GLF_struct_replacement_4.subgroup_id * subgroup_size)), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_struct_replacement_4.subgroup_id * subgroup_size, (_GLF_struct_replacement_4.subgroup_id * subgroup_size) ^ 0u), (_GLF_struct_replacement_4.subgroup_id * _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, 0u ^ (_GLF_IDENTITY(subgroup_size, ~ (_GLF_IDENTITY(~ (subgroup_size), ~ (~ (~ (subgroup_size)))))))), _GLF_IDENTITY(uint(uvec3(_GLF_IDENTITY(subgroup_size, 0u ^ (_GLF_IDENTITY(subgroup_size, ~ (_GLF_IDENTITY(~ (subgroup_size), ~ (~ (~ (subgroup_size)))))))), (1u | 1u), 0u)), min(uint(uvec3(_GLF_IDENTITY(subgroup_size, 0u ^ (_GLF_IDENTITY(subgroup_size, ~ (_GLF_IDENTITY(~ (subgroup_size), ~ (~ (~ (subgroup_size)))))))), (1u | 1u), 0u)), uint(uvec3(_GLF_IDENTITY(subgroup_size, 0u ^ (_GLF_IDENTITY(subgroup_size, ~ (_GLF_IDENTITY(~ (subgroup_size), ~ (~ (~ (subgroup_size)))))))), (1u | 1u), 0u)))))) | 0u))))))))) << 0u))) + ((subgroup_local_id + _GLF_IDENTITY(1, (1) | 0)) % subgroup_size);
 if(_GLF_DEAD(false))
  {
   if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec3(false, true, false))), bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec3(false, true, false))), bool(bvec4(_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, _GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec4(true, _GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bool(bvec4(bool(bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false, false, false)))), true, false)), (bool(bvec4(true, false, true, false))) || false)) && (_GLF_IDENTITY(false, true && (_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, true && (false))), bool(bool(! (_GLF_IDENTITY(false, true && (false)))))))))))), true, false))), true, false, false))))))))
    {
    }
   else
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
      }
     else
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         if(_GLF_WRAPPED_IF_TRUE(true))
          {
           return;
          }
         else
          {
          }
         if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_DEAD(false), true, true))))
          {
           if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
            {
             return;
            }
           else
            {
            }
          }
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, float(_GLF_IDENTITY(mat4(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), 0.0, 0.0, cos(0.0), 1.0, determinant(mat2(1.0, 0.0, 0.0, 1.0)), 1.0, 1.0, 1.0, 0.0, 1.0, sqrt(0.0), 1.0, 1.0, 0.0, 0.0), mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0) + (mat4(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), 0.0, 0.0, cos(0.0), 1.0, _GLF_IDENTITY(determinant(mat2(1.0, 0.0, 0.0, 1.0)), max(determinant(mat2(1.0, 0.0, 0.0, 1.0)), _GLF_IDENTITY(determinant(mat2(1.0, 0.0, 0.0, 1.0)), mix(float(_GLF_FUZZED(74.16)), float(determinant(mat2(1.0, 0.0, 0.0, 1.0))), bool(true))))), 1.0, 1.0, 1.0, 0.0, 1.0, sqrt(0.0), 1.0, 1.0, 0.0, 0.0))))) > injectionSwitch.y, _GLF_IDENTITY(false || (injectionSwitch.x > injectionSwitch.y), false || (false || (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))))))))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         return;
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
          return;
         if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))
          return;
         if(_GLF_WRAPPED_IF_TRUE(true))
          {
           if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false))))
            return;
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            return;
          }
         else
          {
          }
         if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
          {
           if(_GLF_DEAD(false))
            return;
           if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            {
            }
           else
            {
             return;
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              return;
            }
          }
        }
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        return;
       return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          return;
         if(_GLF_WRAPPED_IF_TRUE(true))
          {
           return;
          }
         else
          {
          }
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         for(int _injected_loop_counter = 1; _GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter > (0 >> _GLF_IDENTITY(int(1), int(1)))), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter > (0 >> _GLF_IDENTITY(int(1), int(1)))), false || (_GLF_WRAPPED_LOOP(_injected_loop_counter > (0 >> _GLF_IDENTITY(int(1), int(1)))))), false), bvec2(bvec3(bvec2(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter > (0 >> _GLF_IDENTITY(int(1), int(1)))), false || (_GLF_WRAPPED_LOOP(_injected_loop_counter > (0 >> _GLF_IDENTITY(int(1), int(1)))))), false), true))))); _injected_loop_counter --)
          {
           do
            {
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              return;
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              continue;
             do
              {
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                return;
               return;
               if(_GLF_DEAD(false))
                break;
               if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bool(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))
                continue;
              }
             while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (false ? _GLF_IDENTITY(_GLF_FUZZED(injectionSwitch), clamp(_GLF_FUZZED(injectionSwitch), _GLF_FUZZED(injectionSwitch), _GLF_FUZZED(injectionSwitch))) : injectionSwitch)).y), true && _GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), ! (! (((injectionSwitch.x > injectionSwitch.y))))))), ! (! (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).y)))))));
            }
           while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), ((! (false))) && true)), (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), (_GLF_IDENTITY(false, ! (! (false)))) && true)) && true)));
          }
        }
       if(_GLF_WRAPPED_IF_TRUE(true))
        {
         for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
          {
           if(_GLF_DEAD(false))
            return;
           if(_GLF_WRAPPED_IF_FALSE(false))
            {
            }
           else
            {
             if(_GLF_DEAD(false))
              break;
             if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && _GLF_IDENTITY(true, ! (! (true)))))
              {
               if(_GLF_DEAD(false))
                return;
               do
                {
                 if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_DEAD(false), _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).y)), true))))
                  break;
                 return;
                 if(_GLF_DEAD(false))
                  break;
                 if(_GLF_DEAD(false))
                  break;
                }
               while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > injectionSwitch.y))));
              }
             if(_GLF_DEAD(false))
              continue;
            }
           if(_GLF_DEAD(false))
            continue;
          }
        }
       else
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
        }
      }
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(false, false, false, false))), (_GLF_IDENTITY(false, bool(bvec4(false, false, false, false)))) && true)))
      return;
     if(_GLF_WRAPPED_IF_TRUE(true))
      {
       if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_WRAPPED_IF_TRUE(true))
            {
             return;
            }
           else
            {
            }
          }
        }
       else
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
        }
       if(_GLF_DEAD(false))
        return;
      }
     else
      {
      }
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 atomicStore(buf[virtual_gid], uint(1), 4, 64, 4);
 if(_GLF_DEAD(false))
  return;
 atomicStore(buf[next_virtual_gid], uint(_GLF_IDENTITY(2, 0 | (_GLF_IDENTITY(2, int(int(_GLF_IDENTITY(2, min(_GLF_IDENTITY(2, clamp(2, 2, 2)), 2)))))))), 4, 64, 4);
}
