#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(false))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), true && (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(_GLF_IDENTITY(mat2x4(injectionSwitch.y, 1.0, 1.0, 1.0, 1.0, exp(0.0), 1.0, 1.0), mat2x4(mat3x4(mat2x4(injectionSwitch.y, 1.0, 1.0, 1.0, 1.0, exp(0.0), 1.0, 1.0)))))))))))))))))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, false)), false || (bool(bvec2(false, false))))))))))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch, vec2(mat3(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), 1.0, 1.0, 1.0, 1.0, _GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(0.0, length(vec3(0.0, 0.0, 0.0)), 1.0)), dot(vec3(0.0, 0.0, 1.0), vec3(0.0, length(vec3(0.0, 0.0, 0.0)), 1.0))), 0.0, 0.0))).y))))))))))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      return;
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(false))
        barrier();
       return;
       if(_GLF_DEAD(false))
        barrier();
      }
     return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false)))))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       barrier();
      }
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && true))))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   return;
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     return;
    }
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, mix(_GLF_IDENTITY(float(injectionSwitch.y), 0.0 + (_GLF_IDENTITY(float(injectionSwitch.y), (float(injectionSwitch.y)) / 1.0))), float(_GLF_FUZZED(float(9359u))), bool(false)))) + 0.0), _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(_GLF_IDENTITY(mat2x3(injectionSwitch.y, 1.0, 0.0, 0.0, tan(0.0), 0.0), transpose(transpose(mat2x3(injectionSwitch.y, 1.0, 0.0, 0.0, tan(0.0), 0.0))))), mix(float(float(_GLF_IDENTITY(mat2x3(injectionSwitch.y, 1.0, 0.0, 0.0, tan(0.0), 0.0), transpose(transpose(mat2x3(injectionSwitch.y, 1.0, 0.0, 0.0, tan(0.0), 0.0)))))), float(_GLF_FUZZED(vec2(4.3, -39.73).r)), bool(false)))), injectionSwitch.y))))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, true && (false))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
   return;
  }
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, false || (false)), (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(60.43) : injectionSwitch.x)), injectionSwitch.x)) > injectionSwitch.y))))
          return;
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       return;
      }
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))), false, true)), ! (! (bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))), ! (! (_GLF_DEAD(false)))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))), ! (! (_GLF_DEAD(false))))), bool(bool(! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))), ! (! (_GLF_DEAD(false)))))))))), false, true))))), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))), false, true)), ! (! (bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))), ! (! (_GLF_DEAD(false)))), false, true)))))), true && (bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) && true)) && true))))))), false, true), bvec3(_GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) && true)) && true))))))), false, true)), _GLF_IDENTITY(bvec3(bvec4(bvec3(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) && true)) && true))))))), false, true)), false)), bvec3(bvec4(bvec3(bvec4(bvec3(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) && true)) && true))))))), false, true)), false)), true))))))), ! (! (bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))), ! (! (_GLF_DEAD(false)))), false, true))))))))))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    barrier();
   return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) && true)))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec3(injectionSwitch.x > injectionSwitch.y, false, true))))))))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))).x > injectionSwitch.y), ! (! ((_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))).x > injectionSwitch.y)))))))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true))))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
       if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(false, ! (! (false))) || (false)), (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), bool(_GLF_IDENTITY(bvec2(_GLF_DEAD(false), false), bvec2(bvec3(bvec2(_GLF_DEAD(false), false), true)))))))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        return;
       return;
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        barrier();
      }
    }
   barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-5952.5733)), vec2(_GLF_FUZZED(-529.864), (injectionSwitch)[1]), bvec2(false, true))).y, float(vec2(injectionSwitch.y, cos(0.0))))))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    barrier();
   return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(! (false), true && (! (false))), true, false, true)), ! (! (bool(bvec4(_GLF_IDENTITY(! (false), true && (! (false))), true, false, true)))))))), (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) && true))))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      return;
    }
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), true && (! (false)))))))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > injectionSwitch.y))), _GLF_IDENTITY(bool(bvec3(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > injectionSwitch.y, ! (! (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)))).x > injectionSwitch.y) && true))))))), false, true)), (bool(bvec3(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > injectionSwitch.y))), false, true))) && true)))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, float(mat3x2(injectionSwitch.x, sqrt(0.0), _GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), clamp(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_IDENTITY(_GLF_ZERO(_GLF_IDENTITY(0.0, min(0.0, 0.0)), injectionSwitch.x), (_GLF_ZERO(0.0, injectionSwitch.x)) / 1.0), _GLF_ZERO(0.0, injectionSwitch.x)))) - 0.0, _GLF_IDENTITY(((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), clamp(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), (_GLF_ZERO(0.0, injectionSwitch.x)) / 1.0), _GLF_ZERO(0.0, injectionSwitch.x))), (_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), clamp(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), (_GLF_ZERO(0.0, injectionSwitch.x)) / 1.0), _GLF_ZERO(0.0, injectionSwitch.x)))) / 1.0)) - 0.0) / round(length(normalize(vec2(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y))))), clamp(((_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), clamp(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), (_GLF_ZERO(0.0, injectionSwitch.x)) / 1.0), _GLF_ZERO(0.0, injectionSwitch.x)))) - 0.0) / _GLF_IDENTITY(round(length(normalize(vec2(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y))))), 0.0 + (_GLF_IDENTITY(round(length(normalize(vec2(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y))))), max(round(length(normalize(vec2(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y))))), round(length(normalize(vec2(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y))))))))), ((_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), clamp(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), (_GLF_ZERO(0.0, injectionSwitch.x)) / 1.0), _GLF_ZERO(0.0, injectionSwitch.x)))) - 0.0) / round(length(normalize(vec2(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y))))), ((_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), clamp(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), (_GLF_ZERO(0.0, injectionSwitch.x)) / 1.0), _GLF_ZERO(0.0, injectionSwitch.x)))) - 0.0) / round(length(normalize(vec2(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y))))))))), _GLF_IDENTITY(0.0, (0.0) - _GLF_ZERO(0.0, injectionSwitch.x)), 1.0, 1.0))) > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec3(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))), false, false))))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && _GLF_IDENTITY(true, ! (! (true))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        return;
       return;
       if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))))), (_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))))), bool(bvec4((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))))), true, true, false)))) || false))))
        return;
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, bool(bvec4(true, true, true, _GLF_IDENTITY(true, (true) || false))))))) && (_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true), bvec3(bvec3(bvec3(false, _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), bool(bvec4(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, true, false))), true))))))))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))))))
        barrier();
       return;
      }
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0)))))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       return;
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY((false) || false, false || ((false) || false)))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
       if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
        barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false))))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         return;
        }
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false)))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! (false))))))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), (true ? _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)) : _GLF_FUZZED(-215.900)))))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     return;
    }
  }
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(mat4x2(injectionSwitch.y, 1.0, 0.0, 0.0, cos(0.0), 0.0, 0.0, 1.0)))), bool(bool((injectionSwitch.x > injectionSwitch.y)))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, sqrt(vec2(1.0, 1.0)) * (injectionSwitch)).x > injectionSwitch.y), bool(bool(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[_GLF_IDENTITY(1, min(_GLF_IDENTITY(1, 0 | (1)), 1))])).x > injectionSwitch.y), bool(bvec2((_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[_GLF_IDENTITY(1, min(_GLF_IDENTITY(1, 0 | (1)), 1))])).x > injectionSwitch.y), false)))))))), true && (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(_GLF_IDENTITY(bool((injectionSwitch.x > injectionSwitch.y)), bool(bool(bool((injectionSwitch.x > injectionSwitch.y)))))))), true && (_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true)) || false), true), bvec2(bvec2(bvec2(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true)) || false), true))))))), bool(bool((injectionSwitch.x > injectionSwitch.y))))))))))), false || (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bool((injectionSwitch.x > injectionSwitch.y)))))), true && (_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bool((injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).y, min(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).y, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).y))))))))))))))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint num_workgroup = gl_NumWorkGroups.x;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), ! (! (false)))))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), true && (! (false)))))))
    barrier();
   return;
  }
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || false))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   return;
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(_GLF_DEAD(false), false, true), bvec3(bvec4(bvec3(_GLF_DEAD(false), false, true), true)))), true && (bool(_GLF_IDENTITY(bvec3(_GLF_DEAD(false), false, true), bvec3(bvec4(bvec3(_GLF_DEAD(false), false, true), true))))))), false), bvec2(bvec3(bvec2(_GLF_DEAD(false), false), false))))))
  {
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))), bool(bvec4(_GLF_DEAD(false), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)))), ! _GLF_IDENTITY((! (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)))), _GLF_IDENTITY(false || ((_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))))), true && (false || ((_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)))))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY((! (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_DEAD(false)))), true, _GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(39.18)), bool(false))) > injectionSwitch.y), (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_IDENTITY(_GLF_FUZZED(39.18), max(_GLF_FUZZED(39.18), _GLF_FUZZED(39.18)))), bool(false))) > injectionSwitch.y), ((_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(39.18)), bool(false))) > injectionSwitch.y)) || false)) || false)), true))), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_DEAD(false)))), true, _GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(39.18)), bool(false))) > injectionSwitch.y), (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_IDENTITY(_GLF_FUZZED(39.18), max(_GLF_FUZZED(39.18), _GLF_FUZZED(39.18)))), bool(false))) > injectionSwitch.y), bool(_GLF_IDENTITY(bvec2((_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_IDENTITY(_GLF_FUZZED(39.18), max(_GLF_FUZZED(39.18), _GLF_FUZZED(39.18)))), bool(false))) > injectionSwitch.y), false), bvec2(bvec4(bvec2((_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_IDENTITY(_GLF_FUZZED(39.18), max(_GLF_FUZZED(39.18), _GLF_FUZZED(39.18)))), bool(false))) > injectionSwitch.y), false), false, true))))), ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(39.18)), bool(false))), min(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(39.18)), bool(false))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(39.18)), bool(false))), clamp(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(39.18)), bool(false))), _GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(39.18)), bool(false))), _GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(39.18)), bool(false))))))) > injectionSwitch.y)) || false)) || false)), true))))))), false || ((_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)))))))), false || ((! (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)))), false || ((_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), true, _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, float(mat3(injectionSwitch.x, 0.0, sqrt(sqrt(0.0)), 1.0, 1.0, 0.0, 1.0, 0.0, 0.0))) > injectionSwitch.y))) || false))), true))))))))))))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)).x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y))), false || (bool(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y)))))))))), false || (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(injectionSwitch.x > injectionSwitch.y, true)))))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), (_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))) - 0.0)), (_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), (_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))) - 0.0)), true && ((injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), (_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))) - 0.0))))) || false))))
          barrier();
         barrier();
        }
       return;
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch)).y))))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, float(mat3x4(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(-2.5, 54.36)) : injectionSwitch)).y, (injectionSwitch.y) / 1.0), 0.0, _GLF_IDENTITY(exp(0.0), _GLF_IDENTITY(min(exp(0.0), _GLF_IDENTITY(exp(0.0), min(exp(0.0), exp(0.0)))), (min(exp(0.0), _GLF_IDENTITY(exp(0.0), min(exp(0.0), exp(0.0))))) * 1.0)), 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0))), injectionSwitch.y))))))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
        return;
       return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     if(_GLF_DEAD(false))
      barrier();
     return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false)) || false))
    barrier();
   barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)))))) || false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, true, false, false)))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, (false) && true))), (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false))))) || false))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec2(bvec2(false, true)))))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0))))), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false))) || false))
        {
         if(_GLF_DEAD(false))
          barrier();
         return;
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          return;
         barrier();
        }
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bool(_GLF_DEAD(false))), ! (! (bool(bool(_GLF_DEAD(false))))))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))))))))))
      return;
    }
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
    barrier();
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   barrier();
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 uint workgroup_size = _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, _GLF_IDENTITY(uvec3(_GLF_IDENTITY(gl_WorkGroupSize[0], (false ? _GLF_FUZZED(atomicOr(num_workgroup, num_workgroup)) : _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize[0], _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec2(_GLF_IDENTITY(gl_WorkGroupSize[0], clamp(gl_WorkGroupSize[0], gl_WorkGroupSize[0], gl_WorkGroupSize[0])), 1u), (_GLF_IDENTITY(uvec2(_GLF_IDENTITY(gl_WorkGroupSize[0], clamp(gl_WorkGroupSize[0], gl_WorkGroupSize[0], gl_WorkGroupSize[0])), 1u), (uvec2(_GLF_IDENTITY(gl_WorkGroupSize[0], clamp(gl_WorkGroupSize[0], gl_WorkGroupSize[0], gl_WorkGroupSize[0])), 1u)) | (uvec2(_GLF_IDENTITY(gl_WorkGroupSize[0], clamp(gl_WorkGroupSize[0], gl_WorkGroupSize[0], gl_WorkGroupSize[0])), 1u)))) << uvec2(0u, 0u))), (uint(uvec2(_GLF_IDENTITY(gl_WorkGroupSize[0], clamp(gl_WorkGroupSize[0], gl_WorkGroupSize[0], gl_WorkGroupSize[0])), 1u))) >> 0u)), (gl_WorkGroupSize[0]) + 0u))), _GLF_IDENTITY(gl_WorkGroupSize, (_GLF_IDENTITY(gl_WorkGroupSize, clamp(gl_WorkGroupSize, gl_WorkGroupSize, gl_WorkGroupSize))) ^ uvec3(0u, 0u, 0u))[1], gl_WorkGroupSize[2]), (uvec3(_GLF_IDENTITY(gl_WorkGroupSize[0], (false ? _GLF_FUZZED(atomicOr(num_workgroup, num_workgroup)) : _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize[0], _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec2(_GLF_IDENTITY(gl_WorkGroupSize[0], clamp(gl_WorkGroupSize[0], gl_WorkGroupSize[0], gl_WorkGroupSize[0])), 1u), (_GLF_IDENTITY(uvec2(_GLF_IDENTITY(gl_WorkGroupSize[0], clamp(gl_WorkGroupSize[0], gl_WorkGroupSize[0], gl_WorkGroupSize[0])), 1u), (uvec2(_GLF_IDENTITY(gl_WorkGroupSize[0], clamp(gl_WorkGroupSize[0], gl_WorkGroupSize[0], gl_WorkGroupSize[0])), 1u)) | (uvec2(_GLF_IDENTITY(gl_WorkGroupSize[0], clamp(gl_WorkGroupSize[0], gl_WorkGroupSize[0], gl_WorkGroupSize[0])), 1u)))) << uvec2(0u, 0u))), (uint(uvec2(_GLF_IDENTITY(gl_WorkGroupSize[0], clamp(gl_WorkGroupSize[0], gl_WorkGroupSize[0], gl_WorkGroupSize[0])), 1u))) >> 0u)), (gl_WorkGroupSize[0]) + 0u))), _GLF_IDENTITY(gl_WorkGroupSize, (_GLF_IDENTITY(gl_WorkGroupSize, clamp(gl_WorkGroupSize, gl_WorkGroupSize, gl_WorkGroupSize))) ^ uvec3(0u, 0u, 0u))[1], gl_WorkGroupSize[2])) ^ uvec3(0u, 0u, 0u))).x, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, _GLF_IDENTITY(uvec3(_GLF_IDENTITY(gl_WorkGroupSize, (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, max(gl_WorkGroupSize, gl_WorkGroupSize)), uvec3(gl_WorkGroupSize[0], gl_WorkGroupSize[1], gl_WorkGroupSize[2]))) | (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, min(gl_WorkGroupSize, gl_WorkGroupSize)), uvec3(0u, 0u, 0u) ^ (gl_WorkGroupSize))))[0], _GLF_IDENTITY(gl_WorkGroupSize, (_GLF_IDENTITY(gl_WorkGroupSize, uvec3(0u, 0u, 0u) + (gl_WorkGroupSize))) | (_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) | (gl_WorkGroupSize))))[1], gl_WorkGroupSize[2]), uvec3(0u, 0u, 0u) + (uvec3(gl_WorkGroupSize[0], gl_WorkGroupSize[1], gl_WorkGroupSize[2])))).x, (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, uvec3(gl_WorkGroupSize[0], gl_WorkGroupSize[_GLF_IDENTITY(1, max(1, 1))], gl_WorkGroupSize[2])).x, uint(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (_GLF_IDENTITY(gl_WorkGroupSize, uvec3(gl_WorkGroupSize[0], gl_WorkGroupSize[_GLF_IDENTITY(1, max(1, 1))], gl_WorkGroupSize[2])).x))) << 0u), 0u | (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, _GLF_IDENTITY(uvec3(gl_WorkGroupSize[0], gl_WorkGroupSize[1], gl_WorkGroupSize[2]), uvec3(0u, 0u, 0u) + (uvec3(gl_WorkGroupSize[0], _GLF_IDENTITY(gl_WorkGroupSize, ~ (~ (gl_WorkGroupSize)))[1], gl_WorkGroupSize[2])))), (_GLF_IDENTITY(gl_WorkGroupSize, _GLF_IDENTITY(uvec3(gl_WorkGroupSize[0], gl_WorkGroupSize[1], gl_WorkGroupSize[2]), uvec3(0u, 0u, 0u) + (uvec3(gl_WorkGroupSize[0], gl_WorkGroupSize[1], gl_WorkGroupSize[2]))))) | (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, _GLF_IDENTITY(uvec3(gl_WorkGroupSize[0], gl_WorkGroupSize[1], gl_WorkGroupSize[2]), _GLF_IDENTITY(uvec3(0u, 0u, 0u), ~ (~ (_GLF_IDENTITY(uvec3(0u, 0u, 0u), clamp(uvec3(0u, 0u, 0u), uvec3(0u, 0u, 0u), uvec3(0u, 0u, 0u)))))) + (uvec3(gl_WorkGroupSize[0], gl_WorkGroupSize[1], gl_WorkGroupSize[2])))), (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, _GLF_IDENTITY(uvec3(gl_WorkGroupSize[0], gl_WorkGroupSize[1], gl_WorkGroupSize[2]), uvec3(0u, 0u, 0u) + (uvec3(gl_WorkGroupSize[0], gl_WorkGroupSize[1], gl_WorkGroupSize[2])))), (_GLF_IDENTITY(gl_WorkGroupSize, _GLF_IDENTITY(uvec3(gl_WorkGroupSize[0], gl_WorkGroupSize[1], gl_WorkGroupSize[2]), uvec3(0u, 0u, 0u) + (uvec3(gl_WorkGroupSize[0], gl_WorkGroupSize[1], gl_WorkGroupSize[2]))))) | (uvec3(0u, 0u, 0u) >> _GLF_IDENTITY(uvec3(8u), _GLF_IDENTITY(uvec3(8u), min(uvec3(8u), uvec3(8u))))))) - uvec3(0u, 0u, 0u)))).x, _GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupSize, uvec3(_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) / uvec3(1u, 1u, 1u))[0], gl_WorkGroupSize[1], gl_WorkGroupSize[2])).x), ((_GLF_IDENTITY(gl_WorkGroupSize, uvec3(_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) / uvec3(1u, 1u, 1u))[0], gl_WorkGroupSize[1], gl_WorkGroupSize[2])).x)) ^ (0u ^ 0u)) << 0u)))) * 1u);
 uint workgroup_id = _GLF_IDENTITY(gl_WorkGroupID.x, 0u ^ (gl_WorkGroupID.x));
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bool(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false)))))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(_GLF_IDENTITY(-2.7, (-2.7) / _GLF_IDENTITY(dot(vec3(sqrt(0.0), 1.0, 0.0), vec3(0.0, 1.0, 0.0)), dot(vec3(sqrt(0.0), 1.0, 0.0), vec3(0.0, 1.0, 0.0))))) : injectionSwitch.x)) > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
  barrier();
 uint workgroup_base = _GLF_IDENTITY(workgroup_size * workgroup_id, 0u ^ (workgroup_size * workgroup_id));
 uint virtual_gid = _GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size + subgroup_local_id, max(workgroup_base + _GLF_IDENTITY(subgroup_id * subgroup_size, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(130315u) : _GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) | (subgroup_id * subgroup_size)))) + _GLF_IDENTITY(subgroup_local_id, 0u | (subgroup_local_id)), workgroup_base + subgroup_id * subgroup_size + subgroup_local_id));
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, sin(vec2(0.0, 0.0)) + (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + abs(vec2(0.0, 0.0))))).x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          barrier();
         return;
        }
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).y))))
          barrier();
         return;
        }
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(false), ! (! (bool(false)))), _GLF_IDENTITY(_GLF_IDENTITY((bool(_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY((false), bool(bvec2((false), false))))))))), ((bool(false))) || false) || false, bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((bool(_GLF_IDENTITY(false, ! (! (false))))), ((bool(false))) || false), ! (! (_GLF_IDENTITY((_GLF_IDENTITY(bool(_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), ! (! (_GLF_IDENTITY(! (! (false)), ! (! (! (! (false)))))))))), (bool(_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), ! (! (_GLF_IDENTITY(! (! (false)), ! (! (! (! (false))))))))))) || false)), ((bool(false))) || _GLF_IDENTITY(false, (false) && true))))) || false, bool(bvec2(_GLF_IDENTITY((bool(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), false || (! (false))))), ! (! (false))))), ((bool(false))) || false) || false, true))), true, false), bvec3(bvec4(bvec3(_GLF_IDENTITY(_GLF_IDENTITY((bool(_GLF_IDENTITY(false, ! (! (false))))), ((bool(false))) || false) || false, bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY((bool(_GLF_IDENTITY(false, ! (! (false))))), ((bool(false))) || false) || false, true), _GLF_IDENTITY(bvec2(bvec4(bvec2(_GLF_IDENTITY((bool(_GLF_IDENTITY(false, ! (! (false))))), ((bool(false))) || false) || false, true), false, false)), bvec2(bvec3(bvec2(bvec4(bvec2(_GLF_IDENTITY((bool(_GLF_IDENTITY(false, ! (! (false))))), ((bool(false))) || false) || false, true), false, false)), true)))))), true, false), _GLF_IDENTITY(true, ! (! (true)))))))))), true && (_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(false), (bool(false)) || false)), true && (bool(_GLF_IDENTITY(bool(false), (bool(false)) || false)))))))), bool(bvec3(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, ! (! (false)))), (bool(false)) || false)), true && (bool(_GLF_IDENTITY(bool(false), (bool(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, ! (! (false))))))) || false)))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(false), (bool(false)) || false)), bool(bvec4(_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(false), _GLF_IDENTITY((bool(false)) || false, false || ((bool(false)) || false)))), ! (! (bool(_GLF_IDENTITY(bool(false), (bool(false)) || false))))), false, _GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) || false)))), true))), (_GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(false), (bool(false)) || false)), bool(bvec4(_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(false), (bool(false)) || false)), ! (! (_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(false), (bool(false)) || false)), _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || (bool(_GLF_IDENTITY(bool(false), (bool(false)) || false))))))), false, _GLF_IDENTITY(false, ! (! (false))), true))), bool(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(false), (bool(false)) || false)), bool(bvec4(_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(false), (bool(false)) || false)), ! (! (bool(_GLF_IDENTITY(bool(false), (bool(false)) || _GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, ! (! (false)))))))))), false, _GLF_IDENTITY(false, ! (! (false))), true))))))) && true), _GLF_IDENTITY(_GLF_IDENTITY(bool(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(false), (bool(false)) || false)), bool(bvec4(_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(false), (bool(false)) || false)), ! (! (bool(_GLF_IDENTITY(bool(false), (bool(false)) || false))))), false, _GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, true && (false))))), true))))), true && (_GLF_IDENTITY(bool(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(false), (_GLF_IDENTITY(bool(false), bool(bvec4(bool(false), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)))) || false)), bool(bvec4(_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(false), (bool(false)) || false)), ! (_GLF_IDENTITY(! (bool(_GLF_IDENTITY(bool(false), (bool(false)) || false))), ! (! (! (bool(_GLF_IDENTITY(bool(false), (bool(false)) || false)))))))), false, _GLF_IDENTITY(false, ! (! (false))), true))))), (bool(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(false), (bool(false)) || false)), bool(bvec4(_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(false), (bool(false)) || false)), ! (! _GLF_IDENTITY((bool(_GLF_IDENTITY(bool(false), (bool(false)) || false))), (_GLF_IDENTITY((bool(_GLF_IDENTITY(bool(false), (bool(false)) || false))), ! (! ((bool(_GLF_IDENTITY(bool(false), (bool(false)) || false))))))) || false))), false, _GLF_IDENTITY(false, ! (! (false))), true)))))) && true))), (_GLF_IDENTITY(bool(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(false), (bool(false)) || false)), bool(bvec4(_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(false), (bool(false)) || false)), ! (! (bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(false), ! (! (bool(false)))), (bool(false)) || _GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(bvec4(! (false), true, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), (false) || false), false, true)))))))), false, _GLF_IDENTITY(false, ! (! (false))), true))))), true && (_GLF_IDENTITY(bool(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(false), (bool(false)) || false)), bool(bvec4(_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(false), (bool(false)) || false)), ! (! (bool(_GLF_IDENTITY(bool(false), (bool(false)) || false))))), false, _GLF_IDENTITY(false, ! (! _GLF_IDENTITY((false), bool(_GLF_IDENTITY(bvec3((false), false, true), bvec3(bvec3(_GLF_IDENTITY(bvec3((false), false, true), bvec3(bvec3(bvec3((false), false, true))))))))))), true))))), (bool(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(false), (bool(false)) || false)), bool(bvec4(_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(false), _GLF_IDENTITY((bool(false)) || false, bool(bool((bool(false)) || false))))), ! (! (bool(_GLF_IDENTITY(bool(false), (_GLF_IDENTITY(bool(false), ! (_GLF_IDENTITY(! (bool(_GLF_IDENTITY(false, (false) && true))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (! (bool(false))))))) || false))))), false, _GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), bool(bool(_GLF_IDENTITY(false, ! (! (false)))))), true)))))) && true)))) && true)), _GLF_IDENTITY(true, true && (true)) && (bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(false), (bool(false)) || false), (_GLF_IDENTITY(bool(false), (bool(false)) || false)) || false))))))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true)))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false)))
        barrier();
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, float(mat4x2(_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x)), log(1.0), 1.0, 0.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, 1.0), vec4(1.0, exp(0.0), 0.0, 0.0)), dot(vec4(0.0, 0.0, 1.0, 1.0), vec4(1.0, exp(0.0), 0.0, 0.0))), 0.0, determinant(mat2(1.0, 0.0, 0.0, 1.0)), 1.0))) > injectionSwitch.y))))
          return;
         if(_GLF_DEAD(false))
          return;
         barrier();
        }
       barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))))
        return;
      }
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
      return;
     barrier();
    }
   return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(mat4x2(injectionSwitch, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0))).x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(-4.3) : injectionSwitch.x)) > injectionSwitch.y) || false)) && true)))))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))), bool(bvec3(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))), true, false)))) && true))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y))), true && _GLF_IDENTITY((bool(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0), injectionSwitch.x)) > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y)))), (_GLF_IDENTITY((bool(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0), injectionSwitch.x)) > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y)))), true && ((bool(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0), injectionSwitch.x)) > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y))))))) && true))), ! (_GLF_IDENTITY(! (bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y))), true && (bool(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y))))))), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(! (bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y))), true && (bool(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y))))))), (! (bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y))), true && (bool(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y)))))))) || false), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), ! (! (_GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(! (bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y))), true && (bool(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y))))))), (! (bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y))), true && (bool(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y)))))))) || false), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), false || (bool(bvec3(_GLF_IDENTITY(! (bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y))), true && (bool(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y))))))), (! (bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y))), true && (bool(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y)))))))) || false), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))))))))))))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, bool(bool(false)))))))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))
      {
       if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(360.339)))))), bool(bvec3(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(360.339)))))), _GLF_IDENTITY(false, true && (false)), false))))
        return;
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       barrier();
      }
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0), (false ? _GLF_FUZZED(-4.7) : _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(_GLF_ONE(1.0, injectionSwitch.y))).y) - 0.0)))))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((false), ! (_GLF_IDENTITY(! ((false)), ! (! (! ((false)))))))))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), mat2(1.0) * ((injectionSwitch) * mat2(1.0)))).y))))
        return;
       if(_GLF_DEAD(false))
        return;
       return;
       if(_GLF_DEAD(false))
        return;
      }
     barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
    }
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, false || (false)))), false || (false))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     barrier();
    }
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(-606.910) : _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(mat2x3(injectionSwitch, 0.0, 1.0, 1.0, 1.0))).x, _GLF_IDENTITY(max(_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(3393.9523))), _GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x))), (true ? _GLF_IDENTITY(max(_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(_GLF_IDENTITY(3393.9523, max(3393.9523, 3393.9523))))), injectionSwitch.x), _GLF_IDENTITY(mix(float(_GLF_FUZZED(-961.138)), float(max(_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(3393.9523))), injectionSwitch.x)), bool(true)), min(mix(float(_GLF_FUZZED(-961.138)), float(max(_GLF_IDENTITY(injectionSwitch.x, (true ? _GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-2.2)), bool(false))), injectionSwitch.x)), injectionSwitch.x)) : _GLF_FUZZED(3393.9523))), injectionSwitch.x)), bool(true)), mix(_GLF_IDENTITY(float(_GLF_FUZZED(-961.138)), clamp(float(_GLF_FUZZED(-961.138)), float(_GLF_FUZZED(-961.138)), _GLF_IDENTITY(_GLF_IDENTITY(float(_GLF_FUZZED(-961.138)), min(float(_GLF_FUZZED(-961.138)), _GLF_IDENTITY(float(_GLF_FUZZED(-961.138)), (false ? _GLF_FUZZED(-299.452) : float(_GLF_FUZZED(-961.138)))))), float(mat4(float(_GLF_FUZZED(-961.138)), 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, sin(0.0), 0.0, 1.0, 1.0))))), _GLF_IDENTITY(_GLF_IDENTITY(float(max(_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(3393.9523))), injectionSwitch.x)), min(float(max(_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(3393.9523))), injectionSwitch.x)), float(max(_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(3393.9523))), injectionSwitch.x)))), clamp(float(max(_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(3393.9523))), injectionSwitch.x)), float(max(_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(3393.9523))), injectionSwitch.x)), float(max(_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(3393.9523))), injectionSwitch.x)))), bool(true))))) : _GLF_FUZZED(_GLF_IDENTITY(asinh(float(_GLF_IDENTITY(60416, int(_GLF_IDENTITY(ivec2(60416, int(_GLF_ZERO(0.0, injectionSwitch.x))), (ivec2(60416, int(_GLF_ZERO(0.0, injectionSwitch.x)))) * ivec2(1, 1)))))), max(asinh(float(_GLF_IDENTITY(60416, int(ivec2(60416, int(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), 0.0 + (_GLF_ZERO(0.0, injectionSwitch.x))))))))), _GLF_IDENTITY(asinh(float(_GLF_IDENTITY(60416, int(ivec2(60416, int(_GLF_ZERO(0.0, injectionSwitch.x))))))), (true ? _GLF_IDENTITY(asinh(float(_GLF_IDENTITY(60416, int(ivec2(60416, int(_GLF_ZERO(0.0, injectionSwitch.x))))))), (_GLF_IDENTITY(asinh(float(_GLF_IDENTITY(60416, int(ivec2(60416, int(_GLF_ZERO(0.0, injectionSwitch.x))))))), (asinh(float(_GLF_IDENTITY(60416, int(ivec2(60416, int(_GLF_ZERO(0.0, injectionSwitch.x)))))))) * 1.0)) / 1.0) : _GLF_FUZZED(7.2))))))))))) > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0)))))
        {
         if(_GLF_DEAD(false))
          barrier();
         return;
        }
       if(_GLF_DEAD(false))
        return;
       barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        return;
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       return;
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), (! (injectionSwitch.x > injectionSwitch.y)) || false), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), (! (injectionSwitch.x > injectionSwitch.y)) || false), false), _GLF_IDENTITY(bvec2(bvec3(bvec2(_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), (! (injectionSwitch.x > injectionSwitch.y)) || false), false), true)), bvec2(bvec3(bvec2(bvec3(bvec2(_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), (! (injectionSwitch.x > injectionSwitch.y)) || false), false), true)), true))))))))))))
        return;
       if(_GLF_DEAD(false))
        {
         if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
          barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         return;
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(-4891.5045, 724.381)))).y))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, true && (false))) || false)))
          return;
         if(_GLF_DEAD(false))
          return;
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       return;
      }
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (_GLF_IDENTITY(! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || _GLF_IDENTITY((! (_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y))))))), ! (! ((! (_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y))))))))))))))
      return;
     return;
    }
   if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))
    {
     if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, false))), (_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, false)))) || false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), bool(bvec3(_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(false), (bool(false)) || false)), ! (! (_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(false), (bool(false)) || false)), ! _GLF_IDENTITY((! _GLF_IDENTITY((_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(false), (bool(false)) || false), bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(bool(false), (bool(false)) || false), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, (false) || false)), false || (bool(_GLF_IDENTITY(false, (false) || false)))), (bool(false)) || false)))), _GLF_IDENTITY(false, bool(bool(false))), true, _GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), ! (! (_GLF_IDENTITY(false, ! (! (false)))))))), (bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), ! (! (_GLF_IDENTITY(false, ! (! (false))))))))) || false)))))), _GLF_IDENTITY(! (! _GLF_IDENTITY((bool(_GLF_IDENTITY(bool(false), (bool(false)) || false))), true && (_GLF_IDENTITY((bool(_GLF_IDENTITY(bool(false), (bool(false)) || false))), ((bool(_GLF_IDENTITY(bool(false), (bool(false)) || false)))) || false)))), ! (! (_GLF_IDENTITY(! (! _GLF_IDENTITY((bool(_GLF_IDENTITY(bool(false), (bool(false)) || false))), true && (_GLF_IDENTITY((bool(_GLF_IDENTITY(bool(false), (bool(false)) || false))), ((bool(_GLF_IDENTITY(bool(false), (bool(false)) || false)))) || false)))), (! (! _GLF_IDENTITY((bool(_GLF_IDENTITY(bool(false), (bool(false)) || false))), _GLF_IDENTITY(true, bool(bvec4(true, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))) && (_GLF_IDENTITY((bool(_GLF_IDENTITY(bool(false), (bool(false)) || false))), ((bool(_GLF_IDENTITY(bool(false), (bool(false)) || false)))) || false))))) || _GLF_FALSE(_GLF_IDENTITY(false, (false) || false), (injectionSwitch.x > injectionSwitch.y)))))))), _GLF_IDENTITY((_GLF_IDENTITY((_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(false), _GLF_IDENTITY((bool(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(_GLF_IDENTITY(! (false), ! (! (! (false)))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(! (false), ! (! (! (false)))), ! (! (_GLF_IDENTITY(! (false), ! (! (! (false)))))))))))))) || false, true && ((bool(_GLF_IDENTITY(false, _GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(! (false), ! (! (! (false)))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(! (false), ! (! (! (false)))), ! (! (_GLF_IDENTITY(! (false), ! (! (! (false))))))))))), bool(bool(_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(! (false), ! (! (! (false)))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(! (false), ! (! (! (false)))), ! (! (_GLF_IDENTITY(! (false), ! (! (! (false))))))))))), bool(bvec2(! (_GLF_IDENTITY(_GLF_IDENTITY(! (false), ! (! (! (false)))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(! (false), ! (! (! (false)))), ! (! (_GLF_IDENTITY(! (false), ! (! (! (false))))))))))), false))))))))) || false)))), ! (! (bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(false), (bool(false)) || false), bool(bool(_GLF_IDENTITY(bool(false), (bool(_GLF_IDENTITY(false, (false) || false))) || _GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(bvec4(_GLF_IDENTITY(! (false), ! (! (! (false)))), true, false, true))))), ! (! (false)))))))))))), true && (_GLF_IDENTITY((_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(false), (bool(false)) || false)), ! _GLF_IDENTITY((! _GLF_IDENTITY((bool(_GLF_IDENTITY(bool(false), (bool(false)) || false))), ! (! ((bool(_GLF_IDENTITY(bool(false), (bool(false)) || false))))))), ! (! ((! _GLF_IDENTITY((bool(_GLF_IDENTITY(bool(false), (bool(false)) || false))), ! (! ((bool(_GLF_IDENTITY(bool(false), (bool(false)) || false)))))))))))), _GLF_IDENTITY(! (_GLF_IDENTITY(! (_GLF_IDENTITY((_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(false), (bool(false)) || false)), ! (! (bool(_GLF_IDENTITY(bool(false), (bool(false)) || false)))))), ! (_GLF_IDENTITY(! ((_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(false), (bool(false)) || false)), ! (! (bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, true, true)), (bool(bvec3(false, true, true))) && true)), ! (! (false))))))), (bool(false)) || false))))))), ! (! (! _GLF_IDENTITY(((_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(false), (bool(false)) || false), ! (! (_GLF_IDENTITY(bool(false), (bool(false)) || false))))), ! (! (bool(_GLF_IDENTITY(bool(false), (bool(false)) || false))))))), ! (! (((_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(false), (bool(false)) || false), ! (! (_GLF_IDENTITY(bool(false), (bool(false)) || false))))), ! (! (bool(_GLF_IDENTITY(bool(false), (bool(false)) || false)))))))))))))))), ! (! _GLF_IDENTITY((! (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(false), (bool(false)) || false)), _GLF_IDENTITY(true, ! (! (true))) && (bool(_GLF_IDENTITY(bool(false), (bool(false)) || false)))), ! (! (bool(_GLF_IDENTITY(bool(false), (bool(false)) || false)))))), ! (_GLF_IDENTITY(! ((_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(false), (bool(false)) || false)), ! (! (bool(_GLF_IDENTITY(bool(false), (bool(false)) || false))))))), ! (! (! ((_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(false), (bool(false)) || false)), ! (! (bool(_GLF_IDENTITY(bool(false), (bool(false)) || false)))))))))))))), ((! (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(false), (bool(false)) || false)), true && (bool(_GLF_IDENTITY(bool(false), (bool(false)) || false)))), ! (! (bool(_GLF_IDENTITY(bool(false), (bool(false)) || false)))))), ! (_GLF_IDENTITY(! ((_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(false), (bool(false)) || false)), ! (! (bool(_GLF_IDENTITY(bool(false), (bool(false)) || false))))))), ! (! (! ((_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(false), (bool(false)) || false)), ! (! (bool(_GLF_IDENTITY(bool(false), (bool(false)) || false))))))))))))))) && true)))), ! (! (! (_GLF_IDENTITY(! (_GLF_IDENTITY((_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(false), (bool(false)) || false)), ! (! (bool(_GLF_IDENTITY(bool(false), (bool(false)) || false)))))), ! (_GLF_IDENTITY(! ((_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(false), (bool(false)) || false)), ! (! (bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec3(false, true, true)), (bool(bvec3(false, true, true))) && true), ! (! (_GLF_IDENTITY(bool(bvec3(false, true, true)), (bool(bvec3(false, true, true))) && true))))), ! (! (false))))))), (bool(false)) || false))))))), ! (! (! _GLF_IDENTITY(((_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(false), (bool(false)) || false), ! (! (_GLF_IDENTITY(bool(false), (bool(false)) || false))))), ! (! (bool(_GLF_IDENTITY(bool(false), (bool(false)) || false))))))), ! (! (((_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(bool(false), (bool(false)) || false), ! (! (_GLF_IDENTITY(bool(false), (bool(false)) || false)))), true && (_GLF_IDENTITY(_GLF_IDENTITY(bool(false), (bool(false)) || false), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(bool(false), (bool(false)) || false), ! (! (_GLF_IDENTITY(bool(false), (bool(false)) || false)))))))))), ! (! (bool(_GLF_IDENTITY(bool(false), (bool(false)) || false)))))))))))))))), ! (! _GLF_IDENTITY((! (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(false), (bool(false)) || false)), _GLF_IDENTITY(true, ! (! (true))) && (bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(false, ! (! (false)))))), (bool(false)) || false)))), ! (! (bool(_GLF_IDENTITY(bool(false), (bool(false)) || false)))))), ! (_GLF_IDENTITY(! ((_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(false), (bool(false)) || false)), ! (! (bool(_GLF_IDENTITY(bool(false), (bool(false)) || false))))))), ! (! (! ((_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(false), (bool(false)) || false)), ! (! (bool(_GLF_IDENTITY(bool(false), (bool(false)) || false)))))))))))))), ((! (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(false), true && (bool(false))), (bool(false)) || _GLF_IDENTITY(false, false || (false)))), true && (bool(_GLF_IDENTITY(bool(false), (bool(false)) || false)))), ! (! (bool(_GLF_IDENTITY(bool(false), (bool(false)) || false)))))), ! (_GLF_IDENTITY(! ((_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(false), (bool(false)) || false)), ! (! (bool(_GLF_IDENTITY(bool(false), (bool(false)) || false))))))), ! (! (! ((_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(false), (bool(false)) || false)), ! (! (_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(false), (bool(false)) || false)), (bool(_GLF_IDENTITY(bool(false), (bool(false)) || false))) || false)))))))))))))) && true))))))))))), ! (! ((_GLF_IDENTITY((_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(false), _GLF_IDENTITY((bool(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(_GLF_IDENTITY(! (false), ! (! (! (false)))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(! (false), ! (! (! (false)))), ! (! (_GLF_IDENTITY(! (false), ! (! (! (false)))))))))))))) || false, true && ((bool(_GLF_IDENTITY(false, _GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(! (false), ! (! (! (false)))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(! (false), ! (! (! (false)))), ! (! (_GLF_IDENTITY(! (false), ! (! (! (false))))))))))), bool(bool(_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(! (false), ! (! (! (false)))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(! (false), ! (! (! (false)))), ! (! (_GLF_IDENTITY(! (false), ! (! (! (false))))))))))), bool(bvec2(! (_GLF_IDENTITY(_GLF_IDENTITY(! (false), ! (! (! (false)))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(! (false), ! (! (! (false)))), ! (! (_GLF_IDENTITY(! (false), ! (! (! (false))))))))))), false))))))))) || false)))), ! (! (bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(false), (bool(false)) || false), bool(bool(_GLF_IDENTITY(bool(false), (bool(_GLF_IDENTITY(false, (false) || false))) || _GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(bvec4(_GLF_IDENTITY(! (false), ! (! (! (false)))), true, false, true))))), ! (! (false)))))))))))), true && (_GLF_IDENTITY((_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(false), (bool(false)) || false)), ! _GLF_IDENTITY((! _GLF_IDENTITY((bool(_GLF_IDENTITY(bool(false), (bool(false)) || false))), ! (! ((bool(_GLF_IDENTITY(bool(false), (bool(false)) || false))))))), ! (! ((! _GLF_IDENTITY((bool(_GLF_IDENTITY(bool(false), (bool(false)) || false))), ! (! ((bool(_GLF_IDENTITY(bool(false), (bool(false)) || false)))))))))))), _GLF_IDENTITY(! (_GLF_IDENTITY(! (_GLF_IDENTITY((_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(false), (bool(false)) || false)), ! (! (bool(_GLF_IDENTITY(bool(false), (bool(false)) || false)))))), ! (_GLF_IDENTITY(! ((_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(false), (bool(false)) || false)), ! (! (bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, true, true)), (bool(bvec3(false, true, true))) && true)), ! (! (false))))))), (bool(false)) || false))))))), ! (! (! _GLF_IDENTITY(((_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(false), (bool(false)) || false), ! (! (_GLF_IDENTITY(bool(false), (bool(false)) || false))))), ! (! (bool(_GLF_IDENTITY(bool(false), (bool(false)) || false))))))), ! (! (((_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(false), (bool(false)) || false), ! (! (_GLF_IDENTITY(bool(false), (bool(false)) || false))))), ! (! (bool(_GLF_IDENTITY(bool(false), (bool(false)) || false)))))))))))))))), ! (! _GLF_IDENTITY((! (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(false), (bool(false)) || false)), _GLF_IDENTITY(true, ! (! (true))) && (bool(_GLF_IDENTITY(bool(false), (bool(false)) || false)))), ! (! (bool(_GLF_IDENTITY(bool(false), (bool(false)) || false)))))), ! (_GLF_IDENTITY(! ((_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(false), (bool(false)) || false)), ! (! (bool(_GLF_IDENTITY(bool(false), (bool(false)) || false))))))), ! (! (! ((_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(false), (bool(false)) || false)), ! (! (bool(_GLF_IDENTITY(bool(false), (bool(false)) || false)))))))))))))), ((! (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(false), (bool(false)) || false)), true && (bool(_GLF_IDENTITY(bool(false), (bool(false)) || false)))), ! (! (bool(_GLF_IDENTITY(bool(false), (bool(false)) || false)))))), ! (_GLF_IDENTITY(! ((_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(false), (bool(false)) || false)), ! (! (bool(_GLF_IDENTITY(bool(false), (bool(false)) || false))))))), ! (! (! ((_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(false), (bool(false)) || false)), ! (! (bool(_GLF_IDENTITY(bool(false), (bool(false)) || false))))))))))))))) && true)))), ! (! (! (_GLF_IDENTITY(! (_GLF_IDENTITY((_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(false), (bool(false)) || false)), ! (! (bool(_GLF_IDENTITY(bool(false), (bool(false)) || false)))))), ! (_GLF_IDENTITY(! ((_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(false), (bool(false)) || false)), ! (! (bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec3(false, true, true)), (bool(bvec3(false, true, true))) && true), ! (! (_GLF_IDENTITY(bool(bvec3(false, true, true)), (bool(bvec3(false, true, true))) && true))))), ! (! (false))))))), (bool(false)) || false))))))), ! (! (! _GLF_IDENTITY(((_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(false), (bool(false)) || false), ! (! (_GLF_IDENTITY(bool(false), (bool(false)) || false))))), ! (! (bool(_GLF_IDENTITY(bool(false), (bool(false)) || false))))))), ! (! (((_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(bool(false), (bool(false)) || false), ! (! (_GLF_IDENTITY(bool(false), (bool(false)) || false)))), true && (_GLF_IDENTITY(_GLF_IDENTITY(bool(false), (bool(false)) || false), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(bool(false), (bool(false)) || false), ! (! (_GLF_IDENTITY(bool(false), (bool(false)) || false)))))))))), ! (! (bool(_GLF_IDENTITY(bool(false), (bool(false)) || false)))))))))))))))), ! (! _GLF_IDENTITY((! (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(false), (bool(false)) || false)), _GLF_IDENTITY(true, ! (! (true))) && (bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(false, ! (! (false)))))), (bool(false)) || false)))), ! (! (bool(_GLF_IDENTITY(bool(false), (bool(false)) || false)))))), ! (_GLF_IDENTITY(! ((_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(false), (bool(false)) || false)), ! (! (bool(_GLF_IDENTITY(bool(false), (bool(false)) || false))))))), ! (! (! ((_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(false), (bool(false)) || false)), ! (! (bool(_GLF_IDENTITY(bool(false), (bool(false)) || false)))))))))))))), ((! (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(false), true && (bool(false))), (bool(false)) || _GLF_IDENTITY(false, false || (false)))), true && (bool(_GLF_IDENTITY(bool(false), (bool(false)) || false)))), ! (! (bool(_GLF_IDENTITY(bool(false), (bool(false)) || false)))))), ! (_GLF_IDENTITY(! ((_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(false), (bool(false)) || false)), ! (! (bool(_GLF_IDENTITY(bool(false), (bool(false)) || false))))))), ! (! (! ((_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(false), (bool(false)) || false)), ! (! (_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(false), (bool(false)) || false)), (bool(_GLF_IDENTITY(bool(false), (bool(false)) || false))) || false)))))))))))))) && true)))))))))))))) && true)), false || ((! _GLF_IDENTITY((_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(false), (bool(false)) || false), bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(bool(false), _GLF_IDENTITY((bool(false)), ! (! ((bool(false))))) || false), ! (! (_GLF_IDENTITY(bool(false), _GLF_IDENTITY((bool(false)) || false, ! (_GLF_IDENTITY(! ((bool(false)) || false), ! (! (! ((bool(false)) || false)))))))))), _GLF_IDENTITY(false, bool(bool(false))), true, false)))), ! (! _GLF_IDENTITY((bool(_GLF_IDENTITY(bool(false), (bool(false)) || false))), true && (_GLF_IDENTITY((bool(_GLF_IDENTITY(bool(false), (bool(false)) || false))), ((bool(_GLF_IDENTITY(bool(false), (_GLF_IDENTITY(bool(false), bool(bvec3(bool(false), false, true)))) || false)))) || false)))))), (_GLF_IDENTITY((_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(false), (bool(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! (_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false)))))))))) || false)), ! (! (bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(false), (bool(false)) || false), bool(bool(_GLF_IDENTITY(bool(false), (bool(false)) || false))))))))), _GLF_IDENTITY(true, false || (true)) && (_GLF_IDENTITY((_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, (false) || false)), (bool(false)) || false)), _GLF_IDENTITY(! (! _GLF_IDENTITY(_GLF_IDENTITY((bool(_GLF_IDENTITY(bool(false), (bool(false)) || false))), bool(bool((bool(_GLF_IDENTITY(bool(false), (bool(false)) || false)))))), ! (! ((bool(_GLF_IDENTITY(bool(false), (bool(false)) || false))))))), false || (! (! _GLF_IDENTITY(_GLF_IDENTITY((bool(_GLF_IDENTITY(bool(false), (bool(false)) || false))), bool(bool((bool(_GLF_IDENTITY(bool(false), (bool(false)) || false)))))), ! (! ((bool(_GLF_IDENTITY(bool(false), (bool(false)) || false))))))))))), ! (_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(false), (bool(false)) || false)), (_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(false), (bool(false)) || false)), true && (bool(_GLF_IDENTITY(bool(false), (bool(false)) || false))))) && true), ! (! (bool(_GLF_IDENTITY(bool(false), (bool(false)) || false)))))), ! (_GLF_IDENTITY(! ((_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(false), (bool(false)) || false)), ! (! _GLF_IDENTITY((bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (false))))))), _GLF_IDENTITY((bool(false)), true && ((bool(false)))) || false))), ! (! (_GLF_IDENTITY((bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (false))))))), _GLF_IDENTITY((bool(false)), true && ((bool(false)))) || false))), bool(bvec2((bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (false))))))), _GLF_IDENTITY((bool(false)), true && ((bool(false)))) || false))), true)))))))))), ! (! (! ((_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(false), (bool(false)) || _GLF_IDENTITY(false, false || (false))), ! (! (_GLF_IDENTITY(bool(_GLF_IDENTITY(false, (false) || false)), (bool(false)) || false))))), ! (_GLF_IDENTITY(! (bool(_GLF_IDENTITY(bool(false), (bool(false)) || false))), ! (! (! (bool(_GLF_IDENTITY(bool(false), (bool(false)) || false)))))))))))))))), bool(bvec4((_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(false), (bool(false)) || false)), (_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(false), (bool(false)) || false)), true && (bool(_GLF_IDENTITY(bool(false), (bool(false)) || false))))) && true), ! (! (bool(_GLF_IDENTITY(bool(false), (bool(false)) || false)))))), ! (_GLF_IDENTITY(! ((_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(false), (bool(false)) || false)), ! (! _GLF_IDENTITY((bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (false))))))), _GLF_IDENTITY((bool(false)), true && ((bool(false)))) || false))), ! (! (_GLF_IDENTITY((bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (false))))))), _GLF_IDENTITY((bool(false)), true && ((bool(false)))) || false))), bool(bvec2((bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (false))))))), _GLF_IDENTITY((bool(false)), true && ((bool(false)))) || false))), true)))))))))), ! (! (! ((_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(false), (bool(false)) || _GLF_IDENTITY(false, false || (false))), ! (! (_GLF_IDENTITY(bool(_GLF_IDENTITY(false, (false) || false)), (bool(false)) || false))))), ! (_GLF_IDENTITY(! (bool(_GLF_IDENTITY(bool(false), (bool(false)) || false))), ! (! (! (bool(_GLF_IDENTITY(bool(false), (bool(false)) || false)))))))))))))))), false, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), ! (! _GLF_IDENTITY((! (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(false), (bool(false)) || false)), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(false), (bool(false)) || false)), (bool(_GLF_IDENTITY(bool(false), (bool(false)) || false))) || false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true), _GLF_IDENTITY(bvec3(bvec3(bvec3(_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(false), (bool(false)) || false)), (bool(_GLF_IDENTITY(bool(false), (bool(false)) || false))) || false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))), bvec3(bvec4(bvec3(bvec3(bvec3(_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(false), (bool(false)) || false)), (bool(_GLF_IDENTITY(bool(false), (bool(false)) || false))) || false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))), false))))), true && (bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(false), (bool(false)) || false)), (bool(_GLF_IDENTITY(bool(false), (bool(false)) || false))) || false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true), _GLF_IDENTITY(bvec3(bvec3(bvec3(_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(false), (bool(false)) || false)), (bool(_GLF_IDENTITY(bool(false), (bool(false)) || false))) || false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))), bvec3(bvec4(bvec3(bvec3(bvec3(_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(false), (bool(false)) || false)), (bool(_GLF_IDENTITY(bool(false), (bool(false)) || false))) || false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))), false)))))))), true && (bool(_GLF_IDENTITY(bool(false), (bool(false)) || false)))), ! (! (bool(_GLF_IDENTITY(bool(false), (bool(false)) || false)))))), ! (_GLF_IDENTITY(! ((_GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(false), (bool(false)) || false)), (_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(false), (bool(false)) || false)), bool(bvec4(bool(_GLF_IDENTITY(bool(false), (bool(false)) || false)), true, true, false)))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), ! (! (bool(_GLF_IDENTITY(bool(false), _GLF_IDENTITY((bool(false)), true && ((bool(false)))) || false))))))), ! (! (! ((_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(false), _GLF_IDENTITY((bool(false)), ! (! (_GLF_IDENTITY((bool(false)), bool(bvec4((bool(false)), false, false, true)))))) || false)), ! (! (bool(_GLF_IDENTITY(bool(false), (bool(false)) || false)))))))))))))), ((! (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(false), (bool(false)) || false)), true && (bool(_GLF_IDENTITY(bool(false), (bool(false)) || false)))), ! (! (bool(_GLF_IDENTITY(bool(false), (bool(false)) || false))))), bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(false), (bool(false)) || false)), true && (bool(_GLF_IDENTITY(bool(false), (bool(false)) || false)))), ! (! (bool(_GLF_IDENTITY(bool(false), (bool(false)) || false))))), bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(false), (bool(false)) || false)), true && (bool(_GLF_IDENTITY(bool(false), (bool(false)) || false)))), ! (! (bool(_GLF_IDENTITY(bool(false), (bool(false)) || false)))))))), true, false, false)))), ! (_GLF_IDENTITY(! ((_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(false), (bool(false)) || false)), ! (! (bool(_GLF_IDENTITY(bool(false), _GLF_IDENTITY((bool(false)) || false, false || (_GLF_IDENTITY((bool(false)) || false, true && ((bool(false)) || false))))))))))), ! _GLF_IDENTITY((! (! ((_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(false), _GLF_IDENTITY((bool(false)), (_GLF_IDENTITY((bool(false)), ((bool(false))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || false) || false)), ! (_GLF_IDENTITY(! (bool(_GLF_IDENTITY(bool(false), (bool(false)) || false))), ! (_GLF_IDENTITY(! (! (bool(_GLF_IDENTITY(bool(false), (bool(false)) || false)))), ! (! (! (! (_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(false), (bool(false)) || false)), ! (_GLF_IDENTITY(! (bool(_GLF_IDENTITY(bool(false), (bool(false)) || false))), bool(bool(! (bool(_GLF_IDENTITY(bool(false), (bool(false)) || false))))))))))))))))))))), bool(bvec3((! (! ((_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(false), _GLF_IDENTITY(_GLF_IDENTITY((bool(false)), bool(bvec3((bool(false)), false, true))), ((bool(false))) || false) || false)), ! (! (bool(_GLF_IDENTITY(bool(false), (bool(false)) || false))))))))), true, false))))))))) && true)))))))) && true)))))))), false, true)))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))) / 1.0)))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))) && true)))), ! _GLF_IDENTITY((! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + 0.0))), false || (injectionSwitch.x > injectionSwitch.y))))))))), bool(bvec3((! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + 0.0))), false || (injectionSwitch.x > injectionSwitch.y))))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(7324.8248), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED((-48.83 - -811.806))), bvec2(true, false))).x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0), min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0), min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(mat3x2(injectionSwitch, round(length(normalize(1.0))), 1.0, 1.0, 1.0))).y, (injectionSwitch.y) / 1.0), _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0))), _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))).y) / 1.0)))))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))))), ((injectionSwitch.x > injectionSwitch.y)) && true)))))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)) : _GLF_FUZZED(vec2(8.9, -5.3)))).x < injectionSwitch.y)))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))
        barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! _GLF_IDENTITY((_GLF_IDENTITY(! (false), bool(bvec2(! (false), false)))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((_GLF_IDENTITY(! (false), bool(bvec2(! (false), false)))), ! (! ((_GLF_IDENTITY(! (false), bool(bvec2(! (false), false)))))))), (! (_GLF_IDENTITY((_GLF_IDENTITY(! (false), bool(bvec2(! (false), false)))), ! (! ((_GLF_IDENTITY(! (false), bool(bvec2(! (false), false))))))))) || false))))))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         barrier();
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         return;
        }
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y))))
        return;
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            return;
           return;
          }
         return;
        }
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         return;
        }
       return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec3((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, 0.0 + (_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0)))), false, true)))), ! (! (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec3((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, 0.0 + (_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0)))), false, true)))))))))
      return;
     if(_GLF_DEAD(false))
      barrier();
     return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
      return;
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, true && _GLF_IDENTITY((false), true && ((false)))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), (_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, true && (false)), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) && true), false, true), _GLF_IDENTITY(bvec3(bvec4(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, true && _GLF_IDENTITY((false), true && ((false)))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), (_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, true && (false)), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) && true), false, true), _GLF_IDENTITY(true, false || (true)))), bvec3(bvec3(bvec3(bvec4(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, true && _GLF_IDENTITY((false), true && ((false)))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), (_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, true && (false)), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) && true), false, true), _GLF_IDENTITY(true, false || (true))))))))), false || (bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, true && (false)), false, _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y))))), _GLF_IDENTITY((_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, true && (false)), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) && true, bool(bool(_GLF_IDENTITY((_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, true && (false)), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) && true, bool(bool(_GLF_IDENTITY((_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, true && (false)), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) && true, false || ((_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, true && (false)), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) && true))))))))), false, true)))))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))))))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   return;
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && _GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, false || (true))))))))
    return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(-8.2) : injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED((_GLF_IDENTITY(+ -54.44, clamp(_GLF_IDENTITY(+ -54.44, mix(float(+ -54.44), _GLF_IDENTITY(float(_GLF_FUZZED(-5.4)), round(length(normalize(vec2(1.0, 1.0)))) * (float(_GLF_FUZZED(-5.4)))), bool(false))), _GLF_IDENTITY(+ -54.44, (+ -54.44) - 0.0), _GLF_IDENTITY(+ -54.44, (+ -54.44) + 0.0)))))), float(_GLF_IDENTITY(injectionSwitch.y, float(vec4(injectionSwitch.y, 1.0, 1.0, 0.0)))), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      return;
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! _GLF_IDENTITY(_GLF_IDENTITY((false), false || ((false))), _GLF_IDENTITY(bool(bvec4((false), false, false, false)), false || (_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec4((false), false, false, false)), (bool(bvec4((false), false, false, false))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bool(bvec4(bool(bvec4((false), false, false, false)), true, false, true))))))))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) && true))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_DEAD(false))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), injectionSwitch)), injectionSwitch)).x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, true, false, true)))), bool(bvec2(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, true, false, true)))), true))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! _GLF_IDENTITY((_GLF_IDENTITY(! (false), ! (! (! (false))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && ((_GLF_IDENTITY(! (false), ! (! (! (false)))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! (false)))))), bool(bvec4(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! (false)))))), true, true, false)))))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         return;
        }
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, ! (! (false))))), true, false)))) && true), (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat3x2(injectionSwitch, 0.0, 0.0, 0.0, 1.0)), min(vec2(mat3x2(injectionSwitch, 0.0, 0.0, 0.0, 1.0)), vec2(mat3x2(injectionSwitch, 0.0, 0.0, 0.0, 1.0))))).x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, ! (! (false)))))))
          barrier();
         return;
        }
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
      {
       if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || false)) || false))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         return;
         if(_GLF_DEAD(false))
          barrier();
        }
       barrier();
      }
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(bool(bvec2(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false)), _GLF_IDENTITY(bool(bvec3(bool(bvec2(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false)), false, false)), (bool(bvec3(bool(bvec2(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false)), false, false))) || false))))
        barrier();
       return;
      }
     return;
    }
   return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))
      barrier();
     return;
    }
  }
 uint next_virtual_gid = workgroup_base + _GLF_IDENTITY(subgroup_id, (false ? _GLF_FUZZED(workgroup_base) : subgroup_id)) * subgroup_size + _GLF_IDENTITY((_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, max(subgroup_local_id, subgroup_local_id)) + 1) % subgroup_size, _GLF_IDENTITY(_GLF_IDENTITY(((subgroup_local_id + 1) % subgroup_size), 0u + (_GLF_IDENTITY(((subgroup_local_id + 1) % subgroup_size), 0u ^ (((subgroup_local_id + 1) % subgroup_size))))) >> 0u, uint(_GLF_IDENTITY(_GLF_IDENTITY(uint(((_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) | (subgroup_local_id + 1))) % subgroup_size) >> 0u), 0u + (uint(((subgroup_local_id + 1) % subgroup_size) >> 0u))), (_GLF_IDENTITY(uint(((subgroup_local_id + 1) % subgroup_size) >> 0u), 0u + (uint(((subgroup_local_id + 1) % subgroup_size) >> 0u)))) | (_GLF_IDENTITY(uint(((subgroup_local_id + 1) % subgroup_size) >> 0u), 0u + (uint(((subgroup_local_id + 1) % subgroup_size) >> 0u))))))))) | ((subgroup_local_id + 1) % subgroup_size), 0u | ((_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(((subgroup_local_id + 1) % subgroup_size) >> 0u, uint(_GLF_IDENTITY(uint(((subgroup_local_id + 1) % subgroup_size) >> 0u), 0u + (uint(((subgroup_local_id + 1) % subgroup_size) >> 0u))))), (_GLF_IDENTITY(((subgroup_local_id + 1) % subgroup_size) >> 0u, uint(_GLF_IDENTITY(uint(((subgroup_local_id + 1) % subgroup_size) >> 0u), 0u + (uint(((subgroup_local_id + 1) % subgroup_size) >> 0u)))))) << 0u), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(((subgroup_local_id + 1) % subgroup_size) >> 0u, uint(_GLF_IDENTITY(uint(((subgroup_local_id + 1) % subgroup_size) >> 0u), 0u + (uint(((subgroup_local_id + 1) % subgroup_size) >> 0u))))), (_GLF_IDENTITY(((subgroup_local_id + 1) % subgroup_size) >> 0u, uint(_GLF_IDENTITY(uint(((subgroup_local_id + 1) % subgroup_size) >> 0u), 0u + (uint(((subgroup_local_id + 1) % subgroup_size) >> 0u)))))) << 0u), max(_GLF_IDENTITY(_GLF_IDENTITY(((subgroup_local_id + 1) % subgroup_size) >> 0u, uint(_GLF_IDENTITY(uint(((subgroup_local_id + 1) % subgroup_size) >> 0u), 0u + (uint(((subgroup_local_id + 1) % subgroup_size) >> 0u))))), (_GLF_IDENTITY(((subgroup_local_id + 1) % subgroup_size) >> 0u, uint(_GLF_IDENTITY(uint(((subgroup_local_id + 1) % subgroup_size) >> 0u), 0u + (uint(((subgroup_local_id + 1) % subgroup_size) >> 0u)))))) << 0u), _GLF_IDENTITY(_GLF_IDENTITY(((subgroup_local_id + 1) % subgroup_size) >> 0u, uint(_GLF_IDENTITY(uint(((subgroup_local_id + 1) % subgroup_size) >> 0u), 0u + (uint(((subgroup_local_id + 1) % subgroup_size) >> 0u))))), (_GLF_IDENTITY(((subgroup_local_id + 1) % subgroup_size) >> 0u, uint(_GLF_IDENTITY(uint(((subgroup_local_id + 1) % subgroup_size) >> 0u), 0u + (uint(((subgroup_local_id + 1) % subgroup_size) >> 0u)))))) << 0u)))) * 1u))) | ((subgroup_local_id + 1) % subgroup_size))), (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, ~ (~ ((subgroup_local_id + 1) % subgroup_size))), _GLF_IDENTITY(((subgroup_local_id + 1) % subgroup_size) >> 0u, uint(_GLF_IDENTITY(_GLF_IDENTITY(uint(((subgroup_local_id + 1) % subgroup_size) >> 0u), 0u + (uint(_GLF_IDENTITY(((subgroup_local_id + 1) % subgroup_size), 0u | (((subgroup_local_id + 1) % subgroup_size))) >> 0u))), (_GLF_IDENTITY(uint(((subgroup_local_id + 1) % subgroup_size) >> 0u), 0u + (_GLF_IDENTITY(uint(((subgroup_local_id + 1) % subgroup_size) >> 0u), (true ? uint(((subgroup_local_id + 1) % subgroup_size) >> 0u) : _GLF_FUZZED(num_workgroup)))))) | (_GLF_IDENTITY(uint(((subgroup_local_id + 1) % subgroup_size) >> 0u), 0u + (uint(((subgroup_local_id + 1) % subgroup_size) >> _GLF_IDENTITY(0u, uint(uvec4(_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) - 0u)) | (0u)), 1u, uint(_GLF_ONE(1.0, injectionSwitch.y)), 1u)))))))))))) | ((subgroup_local_id + 1) % subgroup_size), 0u | ((_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, _GLF_IDENTITY(_GLF_IDENTITY(((subgroup_local_id + 1) % subgroup_size) >> 0u, uint(_GLF_IDENTITY(uint(((subgroup_local_id + 1) % subgroup_size) >> 0u), 0u + (uint(((subgroup_local_id + 1) % subgroup_size) >> 0u))))), (_GLF_IDENTITY(((subgroup_local_id + 1) % subgroup_size) >> 0u, uint(_GLF_IDENTITY(_GLF_IDENTITY(uint((_GLF_IDENTITY((subgroup_local_id + 1), (false ? _GLF_FUZZED(workgroup_base) : _GLF_IDENTITY((subgroup_local_id + 1), ((subgroup_local_id + 1)) | 0u))) % subgroup_size) >> 0u), (uint((_GLF_IDENTITY((subgroup_local_id + 1), (false ? _GLF_FUZZED(workgroup_base) : _GLF_IDENTITY((subgroup_local_id + 1), ((subgroup_local_id + 1)) | 0u))) % subgroup_size) >> 0u)) | (_GLF_IDENTITY(uint((_GLF_IDENTITY((subgroup_local_id + 1), (false ? _GLF_FUZZED(workgroup_base) : _GLF_IDENTITY((subgroup_local_id + 1), ((subgroup_local_id + 1)) | 0u))) % subgroup_size) >> 0u), max(uint((_GLF_IDENTITY((subgroup_local_id + 1), (false ? _GLF_FUZZED(workgroup_base) : _GLF_IDENTITY((subgroup_local_id + 1), ((subgroup_local_id + 1)) | 0u))) % subgroup_size) >> 0u), uint((_GLF_IDENTITY((subgroup_local_id + 1), (false ? _GLF_FUZZED(workgroup_base) : _GLF_IDENTITY((subgroup_local_id + 1), ((subgroup_local_id + 1)) | 0u))) % subgroup_size) >> 0u))))), 0u + (uint(((subgroup_local_id + 1) % subgroup_size) >> 0u)))))) << 0u))) | ((subgroup_local_id + 1) % subgroup_size)))) >> 0u))), _GLF_IDENTITY((((subgroup_local_id + _GLF_IDENTITY(1, (1) | (1))) % _GLF_IDENTITY(subgroup_size, uint(_GLF_IDENTITY(uvec4(subgroup_size, (0u >> _GLF_IDENTITY(_GLF_IDENTITY(uint(5u), (false ? _GLF_IDENTITY(_GLF_FUZZED(_GLF_IDENTITY(bitfieldInsert((86678u % workgroup_size), workgroup_base, -62072, 96639), clamp(bitfieldInsert((86678u % workgroup_size), workgroup_base, -62072, 96639), bitfieldInsert((86678u % workgroup_size), workgroup_base, -62072, 96639), bitfieldInsert((86678u % workgroup_size), workgroup_base, -62072, 96639)))), (false ? _GLF_FUZZED(subgroup_size) : _GLF_FUZZED(bitfieldInsert((86678u % workgroup_size), workgroup_base, -62072, 96639)))) : uint(5u))), _GLF_IDENTITY(uint(5u), (uint(5u)) + _GLF_IDENTITY(0u, 0u ^ (_GLF_IDENTITY(0u, clamp(0u, 0u, 0u))))))), 1u, 1u), ~ _GLF_IDENTITY((_GLF_IDENTITY(~ (uvec4(subgroup_size, (0u >> _GLF_IDENTITY(_GLF_IDENTITY(uint(5u), (false ? _GLF_FUZZED(bitfieldInsert((86678u % workgroup_size), workgroup_base, -62072, 96639)) : uint(5u))), _GLF_IDENTITY(uint(5u), (uint(5u)) + 0u))), _GLF_IDENTITY(1u, (1u) * 1u), 1u)), (_GLF_IDENTITY(~ (uvec4(subgroup_size, (0u >> _GLF_IDENTITY(_GLF_IDENTITY(uint(5u), (false ? _GLF_FUZZED(bitfieldInsert((86678u % workgroup_size), workgroup_base, -62072, 96639)) : uint(5u))), _GLF_IDENTITY(uint(5u), (uint(5u)) + 0u))), _GLF_IDENTITY(1u, (1u) * 1u), 1u)), clamp(~ (uvec4(subgroup_size, (0u >> _GLF_IDENTITY(_GLF_IDENTITY(uint(5u), (false ? _GLF_FUZZED(bitfieldInsert((86678u % workgroup_size), workgroup_base, -62072, 96639)) : uint(5u))), _GLF_IDENTITY(uint(5u), (uint(5u)) + 0u))), _GLF_IDENTITY(1u, (1u) * 1u), 1u)), ~ (uvec4(subgroup_size, (0u >> _GLF_IDENTITY(_GLF_IDENTITY(uint(5u), (false ? _GLF_FUZZED(bitfieldInsert((86678u % workgroup_size), workgroup_base, -62072, 96639)) : uint(5u))), _GLF_IDENTITY(uint(5u), (uint(5u)) + 0u))), _GLF_IDENTITY(1u, (1u) * 1u), 1u)), ~ (uvec4(subgroup_size, (0u >> _GLF_IDENTITY(_GLF_IDENTITY(uint(5u), (false ? _GLF_FUZZED(bitfieldInsert((86678u % workgroup_size), workgroup_base, -62072, 96639)) : uint(5u))), _GLF_IDENTITY(uint(5u), (uint(5u)) + 0u))), _GLF_IDENTITY(1u, (1u) * 1u), 1u))))) >> uvec4(0u, 0u, 0u, 0u))), (_GLF_IDENTITY(_GLF_IDENTITY((~ (uvec4(subgroup_size, (0u >> _GLF_IDENTITY(_GLF_IDENTITY(uint(5u), (false ? _GLF_FUZZED(bitfieldInsert((86678u % workgroup_size), workgroup_base, -62072, 96639)) : uint(5u))), _GLF_IDENTITY(uint(5u), (uint(5u)) + 0u))), _GLF_IDENTITY(1u, (1u) * 1u), 1u))), uvec4(0u, 0u, 0u, 0u) | ((~ (uvec4(subgroup_size, (0u >> _GLF_IDENTITY(_GLF_IDENTITY(uint(5u), (false ? _GLF_FUZZED(bitfieldInsert((86678u % workgroup_size), workgroup_base, -62072, 96639)) : uint(5u))), _GLF_IDENTITY(uint(5u), (uint(5u)) + 0u))), _GLF_IDENTITY(1u, (1u) * 1u), 1u))))), max(_GLF_IDENTITY((~ (uvec4(subgroup_size, (0u >> _GLF_IDENTITY(_GLF_IDENTITY(uint(5u), (false ? _GLF_FUZZED(bitfieldInsert((86678u % workgroup_size), workgroup_base, -62072, 96639)) : uint(5u))), _GLF_IDENTITY(uint(5u), (uint(5u)) + 0u))), _GLF_IDENTITY(1u, (1u) * 1u), 1u))), uvec4(0u, 0u, 0u, 0u) | ((~ (uvec4(subgroup_size, (0u >> _GLF_IDENTITY(_GLF_IDENTITY(uint(5u), (false ? _GLF_FUZZED(bitfieldInsert((86678u % workgroup_size), workgroup_base, -62072, 96639)) : uint(5u))), _GLF_IDENTITY(uint(5u), (uint(5u)) + 0u))), _GLF_IDENTITY(1u, (1u) * 1u), 1u))))), _GLF_IDENTITY((~ (uvec4(subgroup_size, (0u >> _GLF_IDENTITY(_GLF_IDENTITY(uint(5u), (false ? _GLF_FUZZED(bitfieldInsert((86678u % workgroup_size), workgroup_base, -62072, 96639)) : uint(5u))), _GLF_IDENTITY(uint(5u), (uint(5u)) + 0u))), _GLF_IDENTITY(1u, (1u) * 1u), 1u))), uvec4(0u, 0u, 0u, 0u) | ((~ (uvec4(subgroup_size, (0u >> _GLF_IDENTITY(_GLF_IDENTITY(uint(5u), (false ? _GLF_FUZZED(bitfieldInsert((86678u % workgroup_size), workgroup_base, -62072, 96639)) : uint(5u))), _GLF_IDENTITY(uint(5u), (uint(5u)) + 0u))), _GLF_IDENTITY(1u, (1u) * 1u), 1u)))))))) + uvec4(0u, 0u, 0u, 0u))))))) >> (0u << _GLF_IDENTITY(_GLF_IDENTITY(uint(6u), uint(6u)), 0u + (_GLF_IDENTITY(_GLF_IDENTITY(uint(6u), _GLF_IDENTITY(uint(6u), (uint(6u)) | (_GLF_IDENTITY(uint(6u), uint(uvec2(_GLF_IDENTITY(uint(6u), uint(uvec2(uint(6u), 1u))), 1u)))))), (true ? _GLF_IDENTITY(uint(_GLF_IDENTITY(6u, uint(uvec2(_GLF_IDENTITY(6u, (6u) ^ 0u), 0u)))), uint(6u)) : _GLF_FUZZED(subgroup_local_id)))))), (true ? (((subgroup_local_id + 1) % _GLF_IDENTITY(subgroup_size, uint(_GLF_IDENTITY(_GLF_IDENTITY(uvec4(subgroup_size, (0u >> _GLF_IDENTITY(_GLF_IDENTITY(uint(5u), (false ? _GLF_IDENTITY(_GLF_FUZZED(_GLF_IDENTITY(bitfieldInsert((86678u % workgroup_size), workgroup_base, -62072, 96639), clamp(bitfieldInsert((86678u % workgroup_size), workgroup_base, -62072, 96639), bitfieldInsert((86678u % workgroup_size), workgroup_base, -62072, 96639), bitfieldInsert((86678u % workgroup_size), workgroup_base, -62072, _GLF_IDENTITY(96639, (96639) | (_GLF_IDENTITY(96639, clamp(96639, 96639, 96639)))))))), (false ? _GLF_FUZZED(subgroup_size) : _GLF_IDENTITY(_GLF_FUZZED(bitfieldInsert((86678u % workgroup_size), workgroup_base, -62072, 96639)), max(_GLF_FUZZED(bitfieldInsert((86678u % workgroup_size), workgroup_base, -62072, 96639)), _GLF_FUZZED(bitfieldInsert((86678u % workgroup_size), workgroup_base, -62072, 96639)))))) : uint(5u))), _GLF_IDENTITY(uint(5u), (uint(5u)) + 0u))), 1u, 1u), ~ _GLF_IDENTITY((~ (uvec4(subgroup_size, (0u >> _GLF_IDENTITY(_GLF_IDENTITY(uint(5u), (false ? _GLF_FUZZED(bitfieldInsert((86678u % workgroup_size), workgroup_base, -62072, 96639)) : uint(5u))), _GLF_IDENTITY(uint(5u), (uint(5u)) + 0u))), _GLF_IDENTITY(1u, (1u) * 1u), 1u))), (_GLF_IDENTITY((~ _GLF_IDENTITY((uvec4(subgroup_size, (0u >> _GLF_IDENTITY(_GLF_IDENTITY(uint(5u), (false ? _GLF_FUZZED(bitfieldInsert((86678u % workgroup_size), workgroup_base, -62072, 96639)) : uint(5u))), _GLF_IDENTITY(uint(5u), (uint(5u)) + 0u))), _GLF_IDENTITY(1u, (1u) * 1u), 1u)), max(_GLF_IDENTITY((uvec4(subgroup_size, (0u >> _GLF_IDENTITY(_GLF_IDENTITY(uint(5u), (false ? _GLF_FUZZED(bitfieldInsert((86678u % workgroup_size), workgroup_base, -62072, 96639)) : uint(5u))), _GLF_IDENTITY(uint(5u), (uint(5u)) + 0u))), _GLF_IDENTITY(1u, (1u) * 1u), 1u)), (true ? (uvec4(subgroup_size, (0u >> _GLF_IDENTITY(_GLF_IDENTITY(uint(5u), (false ? _GLF_FUZZED(bitfieldInsert((86678u % workgroup_size), workgroup_base, -62072, 96639)) : uint(5u))), _GLF_IDENTITY(uint(5u), (uint(5u)) + 0u))), _GLF_IDENTITY(1u, (1u) * 1u), 1u)) : _GLF_FUZZED(uvec4(16282u, 178425u, 176031u, 23089u)))), _GLF_IDENTITY((uvec4(subgroup_size, (0u >> _GLF_IDENTITY(_GLF_IDENTITY(uint(5u), (false ? _GLF_FUZZED(bitfieldInsert((86678u % workgroup_size), workgroup_base, -62072, 96639)) : uint(5u))), _GLF_IDENTITY(uint(5u), (uint(5u)) + 0u))), _GLF_IDENTITY(1u, (1u) * 1u), 1u)), (false ? _GLF_FUZZED(uvec4(virtual_gid, uvec3(6822u, 126065u, 126461u))) : (uvec4(subgroup_size, (0u >> _GLF_IDENTITY(_GLF_IDENTITY(uint(5u), (false ? _GLF_FUZZED(bitfieldInsert((86678u % workgroup_size), workgroup_base, -62072, 96639)) : uint(5u))), _GLF_IDENTITY(uint(5u), (uint(5u)) + 0u))), _GLF_IDENTITY(1u, (1u) * 1u), 1u))))))), uvec4(0u, 0u, 0u, 0u) | ((~ (uvec4(subgroup_size, (0u >> _GLF_IDENTITY(_GLF_IDENTITY(uint(5u), (false ? _GLF_IDENTITY(_GLF_FUZZED(bitfieldInsert((86678u % workgroup_size), workgroup_base, -62072, 96639)), 0u | (_GLF_FUZZED(bitfieldInsert((86678u % workgroup_size), workgroup_base, -62072, 96639)))) : uint(5u))), _GLF_IDENTITY(uint(5u), (uint(5u)) + 0u))), _GLF_IDENTITY(1u, (1u) * 1u), 1u)))))) + uvec4(0u, 0u, 0u, 0u))), (_GLF_IDENTITY(uvec4(subgroup_size, (0u >> _GLF_IDENTITY(_GLF_IDENTITY(uint(5u), (false ? _GLF_IDENTITY(_GLF_FUZZED(_GLF_IDENTITY(bitfieldInsert((86678u % workgroup_size), workgroup_base, -62072, 96639), clamp(bitfieldInsert((86678u % workgroup_size), workgroup_base, -62072, 96639), bitfieldInsert((86678u % workgroup_size), workgroup_base, -62072, 96639), bitfieldInsert((86678u % workgroup_size), workgroup_base, -62072, _GLF_IDENTITY(96639, (96639) | (_GLF_IDENTITY(96639, clamp(96639, 96639, 96639)))))))), (false ? _GLF_FUZZED(subgroup_size) : _GLF_IDENTITY(_GLF_FUZZED(bitfieldInsert((86678u % workgroup_size), workgroup_base, -62072, 96639)), max(_GLF_FUZZED(bitfieldInsert((86678u % workgroup_size), workgroup_base, -62072, 96639)), _GLF_FUZZED(bitfieldInsert((86678u % workgroup_size), workgroup_base, -62072, 96639)))))) : uint(5u))), _GLF_IDENTITY(uint(5u), (uint(5u)) + 0u))), 1u, 1u), ~ _GLF_IDENTITY((~ (uvec4(subgroup_size, (0u >> _GLF_IDENTITY(_GLF_IDENTITY(uint(5u), (false ? _GLF_FUZZED(bitfieldInsert((86678u % workgroup_size), workgroup_base, -62072, 96639)) : uint(5u))), _GLF_IDENTITY(uint(5u), (uint(5u)) + 0u))), _GLF_IDENTITY(1u, (1u) * 1u), 1u))), (_GLF_IDENTITY((~ _GLF_IDENTITY((uvec4(subgroup_size, (0u >> _GLF_IDENTITY(_GLF_IDENTITY(uint(5u), (false ? _GLF_FUZZED(bitfieldInsert((86678u % workgroup_size), workgroup_base, -62072, 96639)) : uint(5u))), _GLF_IDENTITY(uint(5u), (uint(5u)) + 0u))), _GLF_IDENTITY(1u, (1u) * 1u), 1u)), max(_GLF_IDENTITY((uvec4(subgroup_size, (0u >> _GLF_IDENTITY(_GLF_IDENTITY(uint(5u), (false ? _GLF_FUZZED(bitfieldInsert((86678u % workgroup_size), workgroup_base, -62072, 96639)) : uint(5u))), _GLF_IDENTITY(uint(5u), (uint(5u)) + 0u))), _GLF_IDENTITY(1u, (1u) * 1u), 1u)), (true ? (uvec4(subgroup_size, (0u >> _GLF_IDENTITY(_GLF_IDENTITY(uint(5u), (false ? _GLF_FUZZED(bitfieldInsert((86678u % workgroup_size), workgroup_base, -62072, 96639)) : uint(5u))), _GLF_IDENTITY(uint(5u), (uint(5u)) + 0u))), _GLF_IDENTITY(1u, (1u) * 1u), 1u)) : _GLF_FUZZED(uvec4(16282u, 178425u, 176031u, 23089u)))), _GLF_IDENTITY((uvec4(subgroup_size, (0u >> _GLF_IDENTITY(_GLF_IDENTITY(uint(5u), (false ? _GLF_FUZZED(bitfieldInsert((86678u % workgroup_size), workgroup_base, -62072, 96639)) : uint(5u))), _GLF_IDENTITY(uint(5u), (uint(5u)) + 0u))), _GLF_IDENTITY(1u, (1u) * 1u), 1u)), (false ? _GLF_FUZZED(uvec4(virtual_gid, uvec3(6822u, 126065u, 126461u))) : (uvec4(subgroup_size, (0u >> _GLF_IDENTITY(_GLF_IDENTITY(uint(5u), (false ? _GLF_FUZZED(bitfieldInsert((86678u % workgroup_size), workgroup_base, -62072, 96639)) : uint(5u))), _GLF_IDENTITY(uint(5u), (uint(5u)) + 0u))), _GLF_IDENTITY(1u, (1u) * 1u), 1u))))))), uvec4(0u, 0u, 0u, 0u) | ((~ (uvec4(subgroup_size, (0u >> _GLF_IDENTITY(_GLF_IDENTITY(uint(5u), (false ? _GLF_IDENTITY(_GLF_FUZZED(bitfieldInsert((86678u % workgroup_size), workgroup_base, -62072, 96639)), 0u | (_GLF_FUZZED(bitfieldInsert((86678u % workgroup_size), workgroup_base, -62072, 96639)))) : uint(5u))), _GLF_IDENTITY(uint(5u), (uint(5u)) + 0u))), _GLF_IDENTITY(1u, (1u) * 1u), 1u)))))) + uvec4(0u, 0u, 0u, 0u)))) ^ uvec4(0u, 0u, 0u, 0u)))))) >> (0u << _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(uint(6u), uint(6u)), 0u + (_GLF_IDENTITY(_GLF_IDENTITY(uint(6u), _GLF_IDENTITY(uint(6u), (uint(6u)) | (_GLF_IDENTITY(uint(6u), uint(uvec2(uint(6u), 1u)))))), (true ? _GLF_IDENTITY(uint(6u), uint(6u)) : _GLF_FUZZED(subgroup_local_id))))), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(uint(6u), uint(6u)), 0u + (_GLF_IDENTITY(_GLF_IDENTITY(uint(6u), _GLF_IDENTITY(uint(6u), (uint(6u)) | (_GLF_IDENTITY(uint(6u), uint(uvec2(uint(6u), 1u)))))), (true ? _GLF_IDENTITY(uint(6u), uint(6u)) : _GLF_FUZZED(subgroup_local_id))))), (_GLF_IDENTITY(_GLF_IDENTITY(uint(6u), uint(6u)), 0u + (_GLF_IDENTITY(_GLF_IDENTITY(uint(6u), _GLF_IDENTITY(uint(6u), (uint(6u)) | (_GLF_IDENTITY(uint(6u), uint(uvec2(uint(6u), 1u)))))), (true ? _GLF_IDENTITY(uint(6u), uint(6u)) : _GLF_FUZZED(subgroup_local_id)))))) * 1u) : _GLF_FUZZED(43722u)))) : _GLF_FUZZED(workgroup_id))));
 if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) || false), (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(mat4x2(injectionSwitch.x, 0.0, 0.0, 1.0, sin(0.0), 1.0, 1.0, 1.0)), (false ? _GLF_FUZZED(-2.9) : float(mat4x2(injectionSwitch.x, 0.0, 0.0, 1.0, sin(_GLF_IDENTITY(0.0, 0.0 + (_GLF_IDENTITY(0.0, min(0.0, 0.0))))), 1.0, 1.0, 1.0))))) > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-535.736), _GLF_IDENTITY((injectionSwitch)[1], (true ? (injectionSwitch)[1] : _GLF_FUZZED(-65.63)))), vec2((injectionSwitch)[_GLF_IDENTITY(0, 1 * (_GLF_IDENTITY(0, (0) | 0)))], _GLF_FUZZED((-7250.3391 - -2.3))), bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))).y, _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(mat4x2(injectionSwitch.x, 0.0, 0.0, 1.0, _GLF_IDENTITY(sin(0.0), (true ? _GLF_IDENTITY(sin(0.0), max(sin(0.0), sin(0.0))) : _GLF_FUZZED(inversesqrt(-3503.3885)))), 1.0, 1.0, 1.0)), (false ? _GLF_FUZZED(-2.9) : float(mat4x2(injectionSwitch.x, 0.0, 0.0, 1.0, sin(0.0), 1.0, 1.0, 1.0))))) > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mix(vec2(_GLF_FUZZED(-535.736), _GLF_IDENTITY((injectionSwitch)[1], (true ? (injectionSwitch)[1] : _GLF_FUZZED(-65.63)))), vec2((injectionSwitch)[0], _GLF_FUZZED((-7250.3391 - -2.3))), bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)), (mix(vec2(_GLF_FUZZED(-535.736), _GLF_IDENTITY((injectionSwitch)[1], _GLF_IDENTITY((true ? (injectionSwitch)[1] : _GLF_FUZZED(-65.63)), min((true ? (injectionSwitch)[1] : _GLF_FUZZED(-65.63)), _GLF_IDENTITY((true ? (injectionSwitch)[1] : _GLF_FUZZED(-65.63)), min((true ? (injectionSwitch)[1] : _GLF_FUZZED(-65.63)), (true ? (injectionSwitch)[1] : _GLF_FUZZED(-65.63)))))))), vec2((injectionSwitch)[0], _GLF_FUZZED((_GLF_IDENTITY(-7250.3391, mix(float(_GLF_FUZZED(730.695)), float(-7250.3391), bool(true))) - -2.3))), bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))) - log(vec2(1.0, 1.0)))).y, abs(1.0) * (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mix(vec2(_GLF_FUZZED(-535.736), _GLF_IDENTITY((injectionSwitch)[1], (true ? (injectionSwitch)[1] : _GLF_FUZZED(-65.63)))), vec2((injectionSwitch)[0], _GLF_FUZZED((-7250.3391 - -2.3))), bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)), (mix(vec2(_GLF_FUZZED(-535.736), _GLF_IDENTITY((injectionSwitch)[1], _GLF_IDENTITY((true ? (injectionSwitch)[1] : _GLF_FUZZED(-65.63)), min((true ? (injectionSwitch)[1] : _GLF_FUZZED(-65.63)), _GLF_IDENTITY((true ? (injectionSwitch)[1] : _GLF_FUZZED(-65.63)), min((true ? (injectionSwitch)[1] : _GLF_FUZZED(-65.63)), (true ? (injectionSwitch)[1] : _GLF_FUZZED(-65.63)))))))), vec2((injectionSwitch)[0], _GLF_FUZZED((_GLF_IDENTITY(-7250.3391, mix(float(_GLF_FUZZED(730.695)), float(-7250.3391), bool(true))) - -2.3))), bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))) - log(vec2(1.0, 1.0)))).y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)), bool(bvec2(bool(bvec4(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(mat4x2(injectionSwitch.x, 0.0, 0.0, 1.0, sin(0.0), 1.0, 1.0, 1.0)), (false ? _GLF_FUZZED(-2.9) : float(mat4x2(injectionSwitch.x, 0.0, 0.0, 1.0, sin(0.0), 1.0, 1.0, 1.0))))) > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-535.736), _GLF_IDENTITY((injectionSwitch)[1], (true ? (injectionSwitch)[1] : _GLF_FUZZED(-65.63)))), _GLF_IDENTITY(vec2((_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))), injectionSwitch)))[0], _GLF_FUZZED((-7250.3391 - -2.3))), (vec2((_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))), injectionSwitch)))[0], _GLF_FUZZED((-7250.3391 - -2.3)))) * exp(vec2(0.0, 0.0))), bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))).y, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, true && (injectionSwitch.x < injectionSwitch.y)))), false)), false))))))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(true, (true) || false) && (false))))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     barrier();
    }
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(bvec4(false, false, true, false))))))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, true, true)), ! _GLF_IDENTITY((_GLF_IDENTITY(! (bool(_GLF_IDENTITY(bvec3(false, true, _GLF_IDENTITY(true, (true) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bvec3(bvec4(_GLF_IDENTITY(bvec3(false, true, true), bvec3(bvec3(bvec3(false, true, true)))), false))))), (! (bool(bvec3(false, true, true)))) || false)), true && ((_GLF_IDENTITY(! (bool(_GLF_IDENTITY(bvec3(false, true, _GLF_IDENTITY(true, (true) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bvec3(bvec4(_GLF_IDENTITY(bvec3(false, true, true), bvec3(bvec3(bvec3(false, true, true)))), false))))), (! (bool(bvec3(false, true, true)))) || false))))))), false || (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, true, true)), ! _GLF_IDENTITY((_GLF_IDENTITY(! (bool(_GLF_IDENTITY(bvec3(false, true, _GLF_IDENTITY(true, (true) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bvec3(bvec4(_GLF_IDENTITY(bvec3(false, true, true), bvec3(bvec3(bvec3(false, true, true)))), false))))), (! (bool(bvec3(false, true, true)))) || false)), true && ((_GLF_IDENTITY(! (bool(_GLF_IDENTITY(bvec3(false, true, _GLF_IDENTITY(true, (true) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bvec3(bvec4(_GLF_IDENTITY(bvec3(false, true, true), bvec3(bvec3(bvec3(false, true, true)))), false))))), (! (bool(bvec3(false, true, true)))) || false))))))), ! (! (_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, true, true)), ! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(! (bool(_GLF_IDENTITY(bvec3(false, true, _GLF_IDENTITY(true, (true) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bvec3(bvec4(_GLF_IDENTITY(bvec3(false, true, true), bvec3(bvec3(bvec3(false, true, true)))), false))))), (! (bool(bvec3(false, true, true)))) || false), (_GLF_IDENTITY(_GLF_IDENTITY(! (bool(_GLF_IDENTITY(bvec3(false, true, _GLF_IDENTITY(true, (true) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bvec3(bvec4(_GLF_IDENTITY(bvec3(false, true, true), bvec3(bvec3(bvec3(false, true, true)))), false))))), (! (bool(bvec3(false, true, true)))) || false), bool(bool(_GLF_IDENTITY(! (bool(_GLF_IDENTITY(bvec3(false, true, _GLF_IDENTITY(true, (true) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bvec3(bvec4(_GLF_IDENTITY(bvec3(false, true, true), bvec3(bvec3(bvec3(false, true, true)))), false))))), (! (bool(bvec3(false, true, true)))) || false))))) || false)), true && ((_GLF_IDENTITY(! (bool(_GLF_IDENTITY(bvec3(false, true, _GLF_IDENTITY(true, _GLF_IDENTITY((true) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ((true) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true))), bvec3(bvec4(_GLF_IDENTITY(bvec3(false, true, true), bvec3(bvec3(bvec3(false, true, true)))), false))))), (! (bool(bvec3(false, true, true)))) || false)))))))))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y)))) || false))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   return;
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)))))) && _GLF_IDENTITY(true, (true) || false))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 atomicStore(buf[virtual_gid], uint(1), _GLF_IDENTITY(4, 0 | (4)), 64, 4);
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec2(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true)))) || false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))), false))))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y))))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED((- -861.110)) : _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))))))))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false)), _GLF_IDENTITY(bool(bvec2(! (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false)), false)), (bool(bvec2(! (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false)), false))) && true)))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / exp(vec2(0.0, 0.0))).x > injectionSwitch.y))))
      barrier();
     return;
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false))))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), bool(_GLF_IDENTITY(bool(_GLF_DEAD(false)), (bool(_GLF_DEAD(false))) && true))))
    barrier();
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(bvec4(! (false), false, false, false)))))))
      barrier();
     barrier();
    }
   return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     return;
    }
   if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true), true, false, true))))
    barrier();
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! (false))))))))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) || false), (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY((_GLF_DEAD(false)) || false, ! (! ((_GLF_DEAD(false)) || false)))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_DEAD(false))), ! (! (_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec4(_GLF_IDENTITY(bvec2(false, false), _GLF_IDENTITY(bvec2(bvec2(bvec2(false, false))), bvec2(bvec3(bvec2(bvec2(bvec2(false, false))), true)))), true, true)))))))))) || false)) && true))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))), true && (_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false)))))) || false)) && true))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   return;
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false))))))))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) || false)))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (false))))))))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 atomicStore(buf[_GLF_IDENTITY(next_virtual_gid, (next_virtual_gid) << 0u)], uint(2), _GLF_IDENTITY(4, _GLF_IDENTITY((4), clamp((4), (4), (4))) - 0), 64, 4);
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_DEAD(false))
  return;
}
