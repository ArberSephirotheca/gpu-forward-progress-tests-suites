#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > injectionSwitch.y, ! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), (! (injectionSwitch.x > injectionSwitch.y)) || false)))), ! (! ((_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(mat4(injectionSwitch, 1.0, _GLF_IDENTITY(dot(vec4(0.0, 1.0, 0.0, 1.0), vec4(1.0, 0.0, 1.0, 0.0)), dot(vec4(_GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(determinant(mat3(-0.7, -2135.6936, 41.41, -1.6, 381.818, -815.405, 8.8, 9.4, 1462.7475))) : 0.0)), 1.0, 0.0, 1.0), vec4(1.0, 0.0, 1.0, 0.0))), 1.0, 0.0, 1.0, length(vec4(0.0, 0.0, 0.0, 0.0)), 1.0, 0.0, 1.0, 1.0, determinant(mat4(0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0)), 0.0, 0.0, 0.0))), _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat4x2(injectionSwitch, 0.0, 0.0, abs(0.0), 0.0, 0.0, 1.0)), (vec2(mat4x2(injectionSwitch, 0.0, 0.0, abs(0.0), 0.0, 0.0, 1.0))) * vec2(1.0, 1.0))))).x > injectionSwitch.y)))))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), _GLF_IDENTITY((! (_GLF_DEAD(false))), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_IDENTITY((! (_GLF_DEAD(false))), ((! (_GLF_DEAD(false)))) || false), false || (_GLF_IDENTITY((! (_GLF_DEAD(false))), ((! (_GLF_DEAD(false)))) || false))), false), _GLF_IDENTITY(bvec2(_GLF_IDENTITY(bvec3(bvec2(_GLF_IDENTITY((! (_GLF_DEAD(false))), ((! (_GLF_DEAD(false)))) || false), false), _GLF_IDENTITY(false, false || (false))), bvec3(bvec3(bvec3(bvec2(_GLF_IDENTITY((! (_GLF_DEAD(false))), ((_GLF_IDENTITY(! (_GLF_DEAD(false)), (! (_GLF_DEAD(false))) || false))) || false), false), false))))), bvec2(bvec2(bvec2(_GLF_IDENTITY(bvec3(bvec2(_GLF_IDENTITY((! (_GLF_DEAD(false))), ((! (_GLF_DEAD(false)))) || false), false), false), bvec3(bvec3(bvec3(bvec2(_GLF_IDENTITY((! (_GLF_DEAD(false))), ((! (_GLF_DEAD(false)))) || false), false), false))))))))))) && true)))) && true))
  barrier();
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(535.909), _GLF_FUZZED(-545.069)), bvec2(false, false))).x > injectionSwitch.y), ! (! ((_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(535.909), _GLF_FUZZED(-545.069)), bvec2(false, false))).x > injectionSwitch.y)))))))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true), _GLF_IDENTITY(true && _GLF_IDENTITY((_GLF_DEAD(false)), ! (! ((_GLF_DEAD(false))))), (_GLF_IDENTITY(true && _GLF_IDENTITY((_GLF_DEAD(false)), ! (! ((_GLF_DEAD(false))))), ! (! (true && _GLF_IDENTITY((_GLF_DEAD(false)), ! (! ((_GLF_DEAD(false))))))))) && true))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec4(bvec2(false, true), true, true))))), _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(float(false)))), injectionSwitch.y, injectionSwitch.y)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), (bool(bvec3(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec4(bvec2(false, true), true, true))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) || false))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), false || _GLF_IDENTITY((_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false)))), ((_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))) || false)))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch))) + abs(vec2(0.0, 0.0))).y)) && (_GLF_DEAD(false))))
  barrier();
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, bool(bvec2(false, true)))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 uint num_workgroup = gl_NumWorkGroups.x;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint workgroup_size = _GLF_IDENTITY(gl_WorkGroupSize.x, (false ? _GLF_FUZZED(subgroup_size) : _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, (_GLF_IDENTITY(gl_WorkGroupSize, (true ? _GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) | uvec3(0u, 0u, 0u)) : _GLF_FUZZED(uvec3(193201u, 96125u, 33369u))))) | (gl_WorkGroupSize)).x, max(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, (_GLF_IDENTITY(gl_WorkGroupSize, (true ? _GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) | uvec3(0u, 0u, 0u)) : _GLF_FUZZED(uvec3(193201u, 96125u, 33369u))))) | (gl_WorkGroupSize)).x, ~ (~ (_GLF_IDENTITY(gl_WorkGroupSize, (_GLF_IDENTITY(gl_WorkGroupSize, (true ? _GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) | uvec3(0u, 0u, 0u)) : _GLF_FUZZED(uvec3(193201u, 96125u, 33369u))))) | (gl_WorkGroupSize)).x))), _GLF_IDENTITY(gl_WorkGroupSize, (_GLF_IDENTITY(gl_WorkGroupSize, (true ? _GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) | uvec3(0u, 0u, 0u)) : _GLF_FUZZED(uvec3(193201u, 96125u, 33369u))))) | (gl_WorkGroupSize)).x)), (false ? _GLF_FUZZED(num_workgroup) : gl_WorkGroupSize.x))));
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec4(bvec2(false, _GLF_IDENTITY(true, (true) || _GLF_IDENTITY(false, (false) && true))), false, false)))), bool(bool(bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec4(bvec2(false, true), false, false))))))))) || _GLF_IDENTITY(false, ! (! (false))))), bool(bool(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))))), ((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec4(bvec2(false, true), false, false)))), bool(bool(bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec4(bvec2(false, true), false, false))))))))) || false)), bool(bool(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false))))), _GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec4(bvec2(false, true), false, false)))), bool(bool(bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec4(bvec2(false, _GLF_IDENTITY(true, ! (! (true)))), false, false))))))))) || false), (_GLF_IDENTITY(false, (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec4(bvec2(false, true), false, false)))), bool(bool(bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec4(bvec2(false, _GLF_IDENTITY(true, ! (! (true)))), false, false))))))))) || false)) && true)), bool(bool(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false))))), true, true), bvec3(bvec4(bvec3(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec4(bvec2(false, true), false, false)))), bool(bool(bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec4(bvec2(false, _GLF_IDENTITY(true, ! (! (true)))), false, false))))))))) || false), (_GLF_IDENTITY(false, (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec4(bvec2(false, true), false, false)))), bool(bool(bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec4(bvec2(false, _GLF_IDENTITY(true, ! (! (true)))), false, false))))))))) || false)) && true)), bool(bool(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false))))), true, true), false))), _GLF_IDENTITY(bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec4(bvec2(false, true), false, false)))), bool(bool(bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec4(bvec2(false, _GLF_IDENTITY(true, ! _GLF_IDENTITY((! (_GLF_IDENTITY(true, false || (true)))), bool(bvec2(_GLF_IDENTITY((! (_GLF_IDENTITY(true, false || (true)))), ! (_GLF_IDENTITY(! ((! (_GLF_IDENTITY(true, false || (true))))), bool(bool(! ((! (_GLF_IDENTITY(true, false || (true)))))))))), false))))), false, false))))))))) || false)), bool(bool(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false))))), true, true), bvec3(bvec3(bvec3(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec4(bvec2(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, false, false, false)), ! (_GLF_IDENTITY(! (bool(bvec4(false, false, false, false))), (! (bool(bvec4(false, false, false, false)))) || false)))), true), false, false)))), bool(bool(bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec4(bvec2(false, _GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, false || (true)))))), false, false))))))))) || false)), bool(bool(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false))))), true, true)))), true)), bvec3(bvec3(bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec3(bvec2(false, true), true))), bvec2(bvec4(bvec2(false, true), false, false)))), bool(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec4(bvec2(false, _GLF_IDENTITY(true, ! (! (true)))), false, false)))), _GLF_IDENTITY(bool(bvec4(bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec4(bvec2(false, _GLF_IDENTITY(true, ! (! (true)))), false, false)))), false, true, true)), ! (! (bool(bvec4(bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec4(bvec2(false, _GLF_IDENTITY(true, ! (! (true)))), false, false)))), false, true, true))))))))))) || false)), bool(bool(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)), false || (_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec3(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))), (false) || false))))))), true, true), bvec3(bvec3(bvec3(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec4(bvec2(false, true), false, false)))), bool(bool(bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec4(bvec2(false, _GLF_IDENTITY(true, ! (! (true)))), false, false))))))))) || false)), bool(bool(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false))))), true, true)))), true))))))), bool(_GLF_IDENTITY(bvec2(bool(bvec3(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec4(bvec2(false, true), _GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, bool(bvec4(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, true))))), false)))), bool(bool(bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec4(bvec2(false, true), false, false))))))))) || false)), bool(bool(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false))))), true, true)), false), bvec2(bvec4(bvec2(bool(bvec3(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec4(bvec2(false, true), false, false)))), bool(bool(bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, ! (! (false))), true), bvec2(bvec4(bvec2(false, true), _GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) && true)))), false))))))))) || false)), bool(_GLF_IDENTITY(bool(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false))), bool(bvec4(bool(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false))), true, false, false))))), _GLF_IDENTITY(true, (true) || false), true)), false), true, true)))))))) || _GLF_IDENTITY(false, (_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), (! (! (false))) && true))) && true)) || false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y)))))))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], float(mat2(injectionSwitch[0], 1.0, 0.0, 1.0))), injectionSwitch[1])).y))))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)).x > injectionSwitch.y))) && true)))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), clamp(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(-4.7, 9958.5083)))), injectionSwitch, injectionSwitch)).y))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), _GLF_IDENTITY(bool(bool(! (false))), bool(bvec4(bool(bool(! (false))), false, true, true))))))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
  }
 uint workgroup_id = gl_WorkGroupID.x;
 if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(-57.42))), _GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-1.6)), bool(false))))) > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), bool(_GLF_IDENTITY(bvec2(_GLF_DEAD(false), false), bvec2(bvec3(bvec2(_GLF_DEAD(false), false), false)))))))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(_GLF_IDENTITY(mat4x3(injectionSwitch.y, 0.0, 1.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), abs(0.0), 0.0, 1.0, 1.0, 0.0, 1.0, 0.0), mat4x3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0) + (mat4x3(injectionSwitch.y, 0.0, 1.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), abs(0.0), 0.0, 1.0, 1.0, 0.0, 1.0, 0.0)))))))))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > injectionSwitch.y))))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(_GLF_IDENTITY(mat4x3(_GLF_IDENTITY(injectionSwitch.y, tan(0.0) + (injectionSwitch.y)), _GLF_ONE(1.0, injectionSwitch.y), 1.0, 1.0, 0.0, determinant(mat2(1.0, 1.0, 0.0, 1.0)), 0.0, round(length(normalize(1.0))), 0.0, 1.0, 1.0, length(vec2(0.0, 0.0))), (true ? mat4x3(_GLF_IDENTITY(injectionSwitch.y, tan(0.0) + (injectionSwitch.y)), _GLF_ONE(1.0, injectionSwitch.y), 1.0, 1.0, 0.0, determinant(mat2(1.0, 1.0, 0.0, 1.0)), 0.0, round(length(normalize(1.0))), 0.0, 1.0, 1.0, length(vec2(0.0, 0.0))) : _GLF_FUZZED(mat4x3(84.73, -5.5, 84.56, -3597.4873, -91.20, -5054.3542, -0.2, 439.023, 62.01, 83.67, -1.8, 686.793))))), clamp(_GLF_IDENTITY(float(_GLF_IDENTITY(mat4x3(_GLF_IDENTITY(injectionSwitch.y, tan(0.0) + (injectionSwitch.y)), _GLF_ONE(1.0, injectionSwitch.y), 1.0, 1.0, 0.0, determinant(mat2(1.0, 1.0, 0.0, 1.0)), 0.0, round(length(normalize(1.0))), 0.0, 1.0, 1.0, length(vec2(0.0, 0.0))), (true ? mat4x3(_GLF_IDENTITY(injectionSwitch.y, tan(0.0) + (injectionSwitch.y)), _GLF_ONE(1.0, injectionSwitch.y), 1.0, 1.0, 0.0, determinant(mat2(1.0, 1.0, 0.0, 1.0)), 0.0, round(length(normalize(1.0))), 0.0, 1.0, 1.0, length(vec2(0.0, 0.0))) : _GLF_FUZZED(mat4x3(84.73, -5.5, 84.56, -3597.4873, -91.20, -5054.3542, -0.2, 439.023, 62.01, 83.67, -1.8, 686.793))))), float(mat3(float(_GLF_IDENTITY(mat4x3(_GLF_IDENTITY(injectionSwitch.y, tan(0.0) + (injectionSwitch.y)), _GLF_ONE(1.0, injectionSwitch.y), 1.0, 1.0, 0.0, determinant(mat2(1.0, 1.0, 0.0, 1.0)), 0.0, round(length(normalize(1.0))), 0.0, 1.0, 1.0, length(vec2(0.0, 0.0))), (true ? mat4x3(_GLF_IDENTITY(injectionSwitch.y, tan(0.0) + (injectionSwitch.y)), _GLF_ONE(1.0, injectionSwitch.y), 1.0, 1.0, 0.0, determinant(mat2(1.0, 1.0, 0.0, 1.0)), 0.0, round(length(normalize(1.0))), 0.0, 1.0, 1.0, length(vec2(0.0, 0.0))) : _GLF_FUZZED(mat4x3(84.73, -5.5, 84.56, -3597.4873, -91.20, -5054.3542, -0.2, 439.023, 62.01, 83.67, -1.8, 686.793))))), 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0))), float(_GLF_IDENTITY(mat4x3(_GLF_IDENTITY(injectionSwitch.y, tan(0.0) + (injectionSwitch.y)), _GLF_ONE(1.0, injectionSwitch.y), 1.0, 1.0, 0.0, determinant(mat2(1.0, 1.0, 0.0, 1.0)), 0.0, round(length(normalize(1.0))), 0.0, 1.0, 1.0, length(vec2(0.0, 0.0))), (true ? mat4x3(_GLF_IDENTITY(injectionSwitch.y, tan(0.0) + (injectionSwitch.y)), _GLF_ONE(1.0, injectionSwitch.y), 1.0, 1.0, 0.0, determinant(mat2(1.0, 1.0, 0.0, 1.0)), 0.0, round(length(normalize(1.0))), 0.0, 1.0, 1.0, length(vec2(0.0, 0.0))) : _GLF_FUZZED(mat4x3(84.73, -5.5, 84.56, -3597.4873, -91.20, -5054.3542, -0.2, 439.023, 62.01, 83.67, -1.8, 686.793))))), float(_GLF_IDENTITY(mat4x3(_GLF_IDENTITY(injectionSwitch.y, tan(0.0) + (injectionSwitch.y)), _GLF_ONE(1.0, injectionSwitch.y), 1.0, 1.0, 0.0, determinant(mat2(1.0, 1.0, 0.0, 1.0)), 0.0, round(length(normalize(1.0))), 0.0, 1.0, 1.0, length(vec2(0.0, 0.0))), (true ? mat4x3(_GLF_IDENTITY(injectionSwitch.y, tan(0.0) + (injectionSwitch.y)), _GLF_ONE(1.0, injectionSwitch.y), 1.0, 1.0, 0.0, determinant(mat2(1.0, 1.0, 0.0, 1.0)), 0.0, round(length(normalize(1.0))), 0.0, 1.0, 1.0, length(vec2(0.0, 0.0))) : _GLF_FUZZED(mat4x3(84.73, -5.5, 84.56, -3597.4873, -91.20, -5054.3542, -0.2, 439.023, 62.01, 83.67, -1.8, 686.793)))))))))), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(-470.364) : injectionSwitch.x)) < injectionSwitch.y)) && (_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), _GLF_IDENTITY(float(_GLF_IDENTITY(_GLF_FUZZED(3.3), mix(float(_GLF_FUZZED(-9.8)), float(_GLF_FUZZED(3.3)), bool(true)))), float(mat2x3(_GLF_IDENTITY(float(_GLF_IDENTITY(_GLF_FUZZED(3.3), mix(float(_GLF_FUZZED(-9.8)), float(_GLF_FUZZED(3.3)), bool(true)))), (float(_GLF_IDENTITY(_GLF_FUZZED(3.3), mix(float(_GLF_FUZZED(-9.8)), float(_GLF_FUZZED(3.3)), bool(true))))) / 1.0), cos(sin(0.0)), 1.0, 0.0, 0.0, 1.0))), bool(false))), injectionSwitch.x)) > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && _GLF_IDENTITY(true, (true) && true))))))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 uint workgroup_base = workgroup_size * _GLF_IDENTITY(workgroup_id, (_GLF_IDENTITY(workgroup_id, (false ? _GLF_FUZZED(workgroup_size) : workgroup_id))) << 0u);
 uint virtual_gid = _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + subgroup_id * _GLF_IDENTITY(subgroup_size, ((1u << _GLF_IDENTITY(uint(3u), uint(3u))) >> _GLF_IDENTITY(uint(3u), uint(3u))) * (subgroup_size)), clamp(workgroup_base + subgroup_id * subgroup_size, workgroup_base + subgroup_id * subgroup_size, workgroup_base + subgroup_id * subgroup_size)), _GLF_IDENTITY((1u & 1u) * (_GLF_IDENTITY(workgroup_base, (true ? workgroup_base : _GLF_FUZZED(clamp(_GLF_IDENTITY(workgroup_base, (true ? _GLF_IDENTITY(workgroup_base, (_GLF_IDENTITY(false, true && (false)) ? _GLF_FUZZED(workgroup_size) : workgroup_base)) : _GLF_FUZZED(subgroup_local_id))), subgroup_size, 150669u)))) + _GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) / uint(_GLF_ONE(1.0, injectionSwitch.y)))), (true ? (1u & 1u) * (_GLF_IDENTITY(workgroup_base, (_GLF_IDENTITY(true ? workgroup_base : _GLF_IDENTITY(_GLF_FUZZED(clamp(workgroup_base, subgroup_size, _GLF_IDENTITY(150669u, (150669u) / 1u))), (_GLF_FUZZED(clamp(workgroup_base, subgroup_size, _GLF_IDENTITY(150669u, (150669u) / 1u)))) >> 0u), (true ? workgroup_base : _GLF_IDENTITY(_GLF_FUZZED(clamp(workgroup_base, subgroup_size, _GLF_IDENTITY(150669u, (150669u) / 1u))), (_GLF_FUZZED(clamp(workgroup_base, subgroup_size, _GLF_IDENTITY(150669u, (150669u) / 1u)))) >> 0u)) / 1u))) + subgroup_id * subgroup_size) : _GLF_FUZZED(subgroup_id)))) + subgroup_local_id, uint(uvec3(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, clamp(_GLF_IDENTITY(workgroup_base, clamp(workgroup_base, _GLF_IDENTITY(workgroup_base, ~ (_GLF_IDENTITY(~ (workgroup_base), ~ (~ (~ (workgroup_base)))))), _GLF_IDENTITY(workgroup_base, ~ (~ (_GLF_IDENTITY(workgroup_base, ~ (~ (workgroup_base)))))))) + subgroup_id * subgroup_size, workgroup_base + subgroup_id * subgroup_size, workgroup_base + subgroup_id * subgroup_size)), _GLF_IDENTITY((1u & 1u) * (_GLF_IDENTITY(workgroup_base, (true ? workgroup_base : _GLF_FUZZED(clamp(_GLF_IDENTITY(workgroup_base, (true ? _GLF_IDENTITY(workgroup_base, (false ? _GLF_FUZZED(workgroup_size) : workgroup_base)) : _GLF_FUZZED(subgroup_local_id))), subgroup_size, 150669u)))) + subgroup_id * subgroup_size), (true ? (1u & 1u) * (_GLF_IDENTITY(workgroup_base, (true ? workgroup_base : _GLF_FUZZED(clamp(_GLF_IDENTITY(workgroup_base, (_GLF_IDENTITY(workgroup_base, (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) && true)) || false) ? _GLF_FUZZED(num_workgroup) : workgroup_base))) | 0u), subgroup_size, _GLF_IDENTITY(150669u, (150669u) / _GLF_IDENTITY(1u, (1u) ^ 0u)))))) + subgroup_id * subgroup_size) : _GLF_FUZZED(subgroup_id)))) + subgroup_local_id, (1u & 1u), 0u)));
 uint next_virtual_gid = workgroup_base + subgroup_id * _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, ~ (_GLF_IDENTITY(_GLF_IDENTITY(~ (subgroup_size), (_GLF_IDENTITY(~ _GLF_IDENTITY((subgroup_size), uint(_GLF_ZERO(0.0, injectionSwitch.x)) ^ ((subgroup_size))), clamp(~ (subgroup_size), _GLF_IDENTITY(~ (subgroup_size), max(~ (subgroup_size), ~ (subgroup_size))), ~ (_GLF_IDENTITY(subgroup_size, (true ? subgroup_size : _GLF_FUZZED(subgroup_id))))))) / 1u), (~ _GLF_IDENTITY(_GLF_IDENTITY((subgroup_size), ((subgroup_size)) ^ 0u), ((subgroup_size)) - 0u)) << 0u))), _GLF_IDENTITY(min(_GLF_IDENTITY(subgroup_size, ~ (_GLF_IDENTITY(_GLF_IDENTITY(~ _GLF_IDENTITY(_GLF_IDENTITY((subgroup_size), 0u + ((subgroup_size))), clamp(_GLF_IDENTITY((subgroup_size), 0u + ((subgroup_size))), _GLF_IDENTITY(_GLF_IDENTITY((subgroup_size), 0u + ((subgroup_size))), (_GLF_IDENTITY((subgroup_size), 0u + ((subgroup_size)))) << 0u), _GLF_IDENTITY(_GLF_IDENTITY((subgroup_size), 0u + ((subgroup_size))), (_GLF_IDENTITY((subgroup_size), 0u + ((subgroup_size)))) - 0u))), (~ _GLF_IDENTITY(_GLF_IDENTITY((subgroup_size), ~ _GLF_IDENTITY((~ ((subgroup_size))), ~ (~ ((~ ((subgroup_size))))))), (_GLF_IDENTITY((subgroup_size), ~ (~ ((subgroup_size))))) | _GLF_IDENTITY((_GLF_IDENTITY((subgroup_size), ~ (~ ((subgroup_size))))), (_GLF_IDENTITY((_GLF_IDENTITY((subgroup_size), ~ (~ ((subgroup_size))))), max((_GLF_IDENTITY((subgroup_size), ~ (~ ((subgroup_size))))), (_GLF_IDENTITY((subgroup_size), ~ (~ ((subgroup_size)))))))) + 0u))) << 0u), max(_GLF_IDENTITY(~ _GLF_IDENTITY(_GLF_IDENTITY((subgroup_size), 0u + ((subgroup_size))), clamp(_GLF_IDENTITY((subgroup_size), 0u + ((subgroup_size))), _GLF_IDENTITY(_GLF_IDENTITY((subgroup_size), 0u + ((subgroup_size))), (_GLF_IDENTITY((subgroup_size), 0u + ((subgroup_size)))) << 0u), _GLF_IDENTITY(_GLF_IDENTITY((subgroup_size), 0u + ((subgroup_size))), (_GLF_IDENTITY((subgroup_size), 0u + ((subgroup_size)))) - 0u))), (~ _GLF_IDENTITY(_GLF_IDENTITY((subgroup_size), ~ _GLF_IDENTITY((~ ((subgroup_size))), ~ (~ ((~ ((subgroup_size))))))), (_GLF_IDENTITY((subgroup_size), ~ (~ ((subgroup_size))))) | _GLF_IDENTITY((_GLF_IDENTITY((subgroup_size), ~ (~ ((subgroup_size))))), (_GLF_IDENTITY((_GLF_IDENTITY((subgroup_size), ~ (~ ((subgroup_size))))), max((_GLF_IDENTITY((subgroup_size), ~ (~ ((subgroup_size))))), (_GLF_IDENTITY((subgroup_size), ~ (~ ((subgroup_size)))))))) + 0u))) << 0u), _GLF_IDENTITY(_GLF_IDENTITY(~ _GLF_IDENTITY(_GLF_IDENTITY((subgroup_size), 0u + ((subgroup_size))), clamp(_GLF_IDENTITY((subgroup_size), 0u + ((subgroup_size))), _GLF_IDENTITY(_GLF_IDENTITY((subgroup_size), 0u + ((subgroup_size))), (_GLF_IDENTITY((subgroup_size), 0u + ((subgroup_size)))) << 0u), _GLF_IDENTITY(_GLF_IDENTITY((subgroup_size), 0u + ((subgroup_size))), (_GLF_IDENTITY((subgroup_size), 0u + ((subgroup_size)))) - 0u))), (~ _GLF_IDENTITY(_GLF_IDENTITY((subgroup_size), ~ _GLF_IDENTITY((~ ((subgroup_size))), ~ (~ ((~ ((subgroup_size))))))), (_GLF_IDENTITY((subgroup_size), ~ (~ ((subgroup_size))))) | _GLF_IDENTITY((_GLF_IDENTITY((subgroup_size), ~ (~ ((subgroup_size))))), (_GLF_IDENTITY((_GLF_IDENTITY((subgroup_size), ~ (~ ((subgroup_size))))), max((_GLF_IDENTITY((subgroup_size), ~ (~ ((subgroup_size))))), (_GLF_IDENTITY((subgroup_size), ~ (~ ((subgroup_size)))))))) + 0u))) << 0u), (_GLF_IDENTITY(_GLF_IDENTITY(~ _GLF_IDENTITY(_GLF_IDENTITY((subgroup_size), 0u + ((subgroup_size))), clamp(_GLF_IDENTITY((subgroup_size), 0u + ((subgroup_size))), _GLF_IDENTITY(_GLF_IDENTITY((subgroup_size), 0u + ((subgroup_size))), (_GLF_IDENTITY((subgroup_size), 0u + ((subgroup_size)))) << 0u), _GLF_IDENTITY(_GLF_IDENTITY((subgroup_size), 0u + ((subgroup_size))), (_GLF_IDENTITY((subgroup_size), 0u + ((subgroup_size)))) - 0u))), (~ _GLF_IDENTITY(_GLF_IDENTITY((subgroup_size), ~ _GLF_IDENTITY((~ ((subgroup_size))), ~ (~ ((~ ((subgroup_size))))))), (_GLF_IDENTITY((subgroup_size), ~ (~ ((subgroup_size))))) | _GLF_IDENTITY((_GLF_IDENTITY((subgroup_size), ~ (~ ((subgroup_size))))), (_GLF_IDENTITY((_GLF_IDENTITY((subgroup_size), ~ (~ ((subgroup_size))))), max((_GLF_IDENTITY((subgroup_size), ~ (~ ((subgroup_size))))), (_GLF_IDENTITY((subgroup_size), ~ (~ ((subgroup_size)))))))) + 0u))) << 0u), clamp(_GLF_IDENTITY(~ _GLF_IDENTITY(_GLF_IDENTITY((subgroup_size), 0u + ((subgroup_size))), clamp(_GLF_IDENTITY((subgroup_size), 0u + ((subgroup_size))), _GLF_IDENTITY(_GLF_IDENTITY((subgroup_size), 0u + ((subgroup_size))), (_GLF_IDENTITY((subgroup_size), 0u + ((subgroup_size)))) << 0u), _GLF_IDENTITY(_GLF_IDENTITY((subgroup_size), 0u + ((subgroup_size))), (_GLF_IDENTITY((subgroup_size), 0u + ((subgroup_size)))) - 0u))), (~ _GLF_IDENTITY(_GLF_IDENTITY((subgroup_size), ~ _GLF_IDENTITY((~ ((subgroup_size))), ~ (~ ((~ ((subgroup_size))))))), (_GLF_IDENTITY((subgroup_size), ~ (~ ((subgroup_size))))) | _GLF_IDENTITY((_GLF_IDENTITY((subgroup_size), ~ (~ ((subgroup_size))))), (_GLF_IDENTITY((_GLF_IDENTITY((subgroup_size), ~ (~ ((subgroup_size))))), max((_GLF_IDENTITY((subgroup_size), ~ (~ ((subgroup_size))))), (_GLF_IDENTITY((subgroup_size), ~ (~ ((subgroup_size)))))))) + 0u))) << 0u), _GLF_IDENTITY(~ _GLF_IDENTITY(_GLF_IDENTITY((subgroup_size), 0u + ((subgroup_size))), clamp(_GLF_IDENTITY((subgroup_size), 0u + ((subgroup_size))), _GLF_IDENTITY(_GLF_IDENTITY((subgroup_size), 0u + ((subgroup_size))), (_GLF_IDENTITY((subgroup_size), 0u + ((subgroup_size)))) << 0u), _GLF_IDENTITY(_GLF_IDENTITY((subgroup_size), 0u + ((subgroup_size))), (_GLF_IDENTITY((subgroup_size), 0u + ((subgroup_size)))) - 0u))), (~ _GLF_IDENTITY(_GLF_IDENTITY((subgroup_size), ~ _GLF_IDENTITY((~ ((subgroup_size))), ~ (~ ((~ ((subgroup_size))))))), (_GLF_IDENTITY((subgroup_size), ~ (~ ((subgroup_size))))) | _GLF_IDENTITY((_GLF_IDENTITY((subgroup_size), ~ (~ ((subgroup_size))))), (_GLF_IDENTITY((_GLF_IDENTITY((subgroup_size), ~ (~ ((subgroup_size))))), max((_GLF_IDENTITY((subgroup_size), ~ (~ ((subgroup_size))))), (_GLF_IDENTITY((subgroup_size), ~ (~ ((subgroup_size)))))))) + 0u))) << 0u), _GLF_IDENTITY(~ _GLF_IDENTITY(_GLF_IDENTITY((subgroup_size), 0u + ((subgroup_size))), clamp(_GLF_IDENTITY((subgroup_size), 0u + ((subgroup_size))), _GLF_IDENTITY(_GLF_IDENTITY((subgroup_size), 0u + ((subgroup_size))), (_GLF_IDENTITY((subgroup_size), 0u + ((subgroup_size)))) << 0u), _GLF_IDENTITY(_GLF_IDENTITY((subgroup_size), 0u + ((subgroup_size))), (_GLF_IDENTITY((subgroup_size), 0u + ((subgroup_size)))) - 0u))), (~ _GLF_IDENTITY(_GLF_IDENTITY((subgroup_size), ~ _GLF_IDENTITY((~ ((subgroup_size))), ~ (~ ((~ ((subgroup_size))))))), (_GLF_IDENTITY((subgroup_size), ~ (~ ((subgroup_size))))) | _GLF_IDENTITY((_GLF_IDENTITY((subgroup_size), ~ (~ ((subgroup_size))))), (_GLF_IDENTITY((_GLF_IDENTITY((subgroup_size), ~ (~ ((subgroup_size))))), max((_GLF_IDENTITY((subgroup_size), ~ (~ ((subgroup_size))))), (_GLF_IDENTITY((subgroup_size), ~ (~ ((subgroup_size)))))))) + 0u))) << 0u)))) * 1u))))), _GLF_IDENTITY(subgroup_size, ~ (_GLF_IDENTITY(~ _GLF_IDENTITY((subgroup_size), (0u | 0u) ^ ((subgroup_size))), (~ (subgroup_size)) << 0u)))), (min(_GLF_IDENTITY(subgroup_size, ~ (_GLF_IDENTITY(_GLF_IDENTITY(~ _GLF_IDENTITY((subgroup_size), 0u + ((subgroup_size))), 0u ^ (~ _GLF_IDENTITY((subgroup_size), 0u + ((subgroup_size))))), (~ _GLF_IDENTITY(_GLF_IDENTITY((subgroup_size), ~ (~ ((subgroup_size)))), (_GLF_IDENTITY((subgroup_size), ~ (~ ((subgroup_size))))) | (_GLF_IDENTITY((subgroup_size), ~ (~ ((subgroup_size))))))) << 0u))), _GLF_IDENTITY(subgroup_size, ~ (_GLF_IDENTITY(~ _GLF_IDENTITY((subgroup_size), _GLF_IDENTITY((0u | 0u) ^ ((subgroup_size)), (true ? _GLF_IDENTITY((0u | 0u) ^ ((subgroup_size)), (false ? _GLF_FUZZED(workgroup_id) : (0u | 0u) ^ ((_GLF_IDENTITY(subgroup_size, 0u | (subgroup_size)))))) : _GLF_FUZZED(subgroup_local_id)))), (~ (_GLF_IDENTITY(subgroup_size, (subgroup_size) | 0u))) << 0u))))) | (min(_GLF_IDENTITY(subgroup_size, ~ (_GLF_IDENTITY(_GLF_IDENTITY(~ _GLF_IDENTITY((subgroup_size), 0u + ((subgroup_size))), clamp(_GLF_IDENTITY(~ _GLF_IDENTITY((subgroup_size), 0u + ((subgroup_size))), (~ _GLF_IDENTITY((subgroup_size), 0u + ((subgroup_size)))) | (146354u & 0u)), _GLF_IDENTITY(~ _GLF_IDENTITY((subgroup_size), 0u + ((subgroup_size))), (~ _GLF_IDENTITY((subgroup_size), 0u + ((subgroup_size)))) ^ 0u), ~ _GLF_IDENTITY((subgroup_size), 0u + ((subgroup_size))))), (~ _GLF_IDENTITY(_GLF_IDENTITY((subgroup_size), ~ (~ ((subgroup_size)))), (_GLF_IDENTITY((subgroup_size), ~ (~ ((subgroup_size))))) | (_GLF_IDENTITY((subgroup_size), ~ (~ ((_GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size))))))))) << 0u))), _GLF_IDENTITY(subgroup_size, ~ (_GLF_IDENTITY(~ _GLF_IDENTITY((subgroup_size), (0u | 0u) ^ ((subgroup_size))), (_GLF_IDENTITY(~ (subgroup_size), (~ (subgroup_size)) - 0u)) << 0u))))))) + (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) | _GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) | (subgroup_local_id + 1))), _GLF_IDENTITY(((_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) | (subgroup_local_id + 1)))), max(((_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) | (subgroup_local_id + 1)))), _GLF_IDENTITY(((_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) | (subgroup_local_id + 1)))), ~ (~ (((_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) | (subgroup_local_id + 1))))))))) | 0u))), (_GLF_IDENTITY((subgroup_local_id + _GLF_IDENTITY(1, int(_GLF_IDENTITY(int(1), ~ (~ (int(1))))))), _GLF_IDENTITY(((_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, int(ivec3(1, (0 | 0), 0))), uint(uvec2(_GLF_IDENTITY(subgroup_local_id + 1, ~ (~ (subgroup_local_id + 1))), _GLF_IDENTITY(0u, ~ (_GLF_IDENTITY(~ (0u), (~ (0u)) / 1u)))))))) << 0u, (((_GLF_IDENTITY(subgroup_local_id + 1, uint(uvec2(_GLF_IDENTITY(subgroup_local_id + 1, ~ (~ (subgroup_local_id + 1))), 0u))))) << 0u) + 0u))) | (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, max(subgroup_local_id, subgroup_local_id)) + 1), uint(uvec3(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, max(subgroup_local_id, subgroup_local_id)) + 1), 0u | ((_GLF_IDENTITY(subgroup_local_id, max(subgroup_local_id, subgroup_local_id)) + 1))), (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY(max(subgroup_local_id, _GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) ^ 0u)), (max(subgroup_local_id, subgroup_local_id)) | 0u)) + 1), 0u | ((_GLF_IDENTITY(subgroup_local_id, max(subgroup_local_id, subgroup_local_id)) + 1)))) / 1u), 0u, 1u))))) % subgroup_size);
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bool(_GLF_DEAD(false))), (bool(bool(_GLF_DEAD(false)))) && true)), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bool(_GLF_DEAD(false))), (bool(bool(_GLF_DEAD(false)))) && true)), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bool(_GLF_DEAD(false))), (_GLF_IDENTITY(bool(bool(_GLF_DEAD(false))), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(bool(_GLF_DEAD(false))), (bool(bool(_GLF_DEAD(false)))) && true)), bool(bvec3(_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(bool(_GLF_DEAD(false))), (bool(bool(_GLF_DEAD(false)))) && true)), (bool(_GLF_IDENTITY(bool(bool(_GLF_DEAD(false))), (bool(bool(_GLF_DEAD(false)))) && true))) || false), true, false)))))) && true)))))) || false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), ! (! (bool(bool(false))))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)).x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(0.0, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-554.902)), float(_GLF_IDENTITY(0.0, (0.0) * 1.0)), bool(true)))) + (injectionSwitch)).y, clamp(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0), injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY((false ? _GLF_FUZZED(8.6) : injectionSwitch.y), max((false ? _GLF_FUZZED(8.6) : injectionSwitch.y), (false ? _GLF_FUZZED(8.6) : injectionSwitch.y))))))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, bool(bvec2(false, true)))))) || false), _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec2((injectionSwitch.x > injectionSwitch.y), true))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 atomicStore(buf[virtual_gid], uint(1), 4, 64, 4);
 atomicStore(buf[_GLF_IDENTITY(next_virtual_gid, min(next_virtual_gid, next_virtual_gid))], uint(2), _GLF_IDENTITY(4, clamp(_GLF_IDENTITY(4, min(4, _GLF_IDENTITY(4, max(4, 4)))), _GLF_IDENTITY(4, (false ? _GLF_FUZZED(10200) : 4)), 4)), 64, 4);
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! _GLF_IDENTITY((_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (! ((_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, false || (false)), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y))))
  barrier();
}
