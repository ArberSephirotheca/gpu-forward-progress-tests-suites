#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


struct _GLF_struct_9 {
 mat4x3 _f0;
 bvec2 _f1;
 vec4 _f2;
} ;

struct _GLF_struct_8 {
 vec4 _f0;
} ;

struct _GLF_struct_10 {
 _GLF_struct_8 _f0;
 ivec2 _f1;
 _GLF_struct_9 _f2;
} ;

struct _GLF_struct_6 {
 uvec2 _f0;
 mat2x4 _f1;
 mat3x2 _f2;
} ;

struct _GLF_struct_5 {
 vec2 _f0;
 mat2x3 _f1;
} ;

struct _GLF_struct_7 {
 _GLF_struct_5 _f0;
 _GLF_struct_6 _f1;
} ;

struct _GLF_struct_3 {
 mat4x3 _f0;
 uvec3 _f1;
 mat2x3 _f2;
 vec3 _f3;
 mat2x3 _f4;
 int _f5;
} ;

struct _GLF_struct_2 {
 mat4x3 _f0;
 vec4 _f1;
 uint _f2;
 bvec3 _f3;
 ivec4 _f4;
 mat4 _f5;
 mat2 _f6;
} ;

struct _GLF_struct_4 {
 vec4 _f0;
 _GLF_struct_2 _f1;
 _GLF_struct_3 _f2;
 uint _f3;
 mat2x4 _f4;
} ;

struct _GLF_struct_11 {
 _GLF_struct_4 _f0;
 mat2x3 _f1;
 uint subgroup_id;
 mat4 _f2;
 vec2 _f3;
 ivec2 _f4;
 _GLF_struct_7 _f5;
 _GLF_struct_10 _f6;
} ;

struct _GLF_struct_0 {
 uint subgroup_size;
 uvec4 _f0;
 bvec2 _f1;
} ;

struct _GLF_struct_1 {
 _GLF_struct_0 _f0;
} ;

layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 uvec2 GLF_merged2_0_1_11_1_1_12virtual_gidworkgroup_id;
 _GLF_struct_11 _GLF_struct_replacement_11 = _GLF_struct_11(_GLF_struct_4(vec4(1.0), _GLF_struct_2(mat4x3(1.0), vec4(1.0), 1u, bvec3(true), ivec4(1), mat4(1.0), mat2(1.0)), _GLF_struct_3(mat4x3(1.0), uvec3(1u), mat2x3(1.0), vec3(1.0), mat2x3(1.0), 1), 1u, mat2x4(1.0)), mat2x3(1.0), gl_SubgroupID, mat4(1.0), vec2(1.0), ivec2(1), _GLF_struct_7(_GLF_struct_5(vec2(1.0), mat2x3(1.0)), _GLF_struct_6(uvec2(1u), mat2x4(1.0), mat3x2(1.0))), _GLF_struct_10(_GLF_struct_8(vec4(1.0)), ivec2(1), _GLF_struct_9(mat4x3(1.0), bvec2(true), vec4(1.0))));
 _GLF_struct_1 _GLF_struct_replacement_1 = _GLF_struct_1(_GLF_struct_0(gl_SubgroupSize, uvec4(1u), bvec2(true)));
 uint subgroup_local_id = gl_SubgroupInvocationID;
 uint num_workgroup = gl_NumWorkGroups.x;
 uint workgroup_size = gl_WorkGroupSize.x;
 uint workgroup_id = gl_WorkGroupID.x;
 GLF_merged2_0_1_11_1_1_12virtual_gidworkgroup_id.y = workgroup_id;
 uint workgroup_base = workgroup_size * GLF_merged2_0_1_11_1_1_12virtual_gidworkgroup_id.y;
 uint virtual_gid = workgroup_base + _GLF_struct_replacement_11.subgroup_id * _GLF_struct_replacement_1._f0.subgroup_size + subgroup_local_id;
 GLF_merged2_0_1_11_1_1_12virtual_gidworkgroup_id.x = virtual_gid;
 uint next_virtual_gid = workgroup_base + _GLF_struct_replacement_11.subgroup_id * _GLF_struct_replacement_1._f0.subgroup_size + ((subgroup_local_id + 1) % _GLF_struct_replacement_1._f0.subgroup_size);
 atomicStore(buf[GLF_merged2_0_1_11_1_1_12virtual_gidworkgroup_id.x], uint(1), 4, 64, 4);
 do
  {
   if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
    {
     do
      {
       atomicStore(buf[next_virtual_gid], uint(2), 4, 64, 4);
      }
     while(_GLF_WRAPPED_LOOP(false));
    }
   else
    {
    }
  }
 while(_GLF_WRAPPED_LOOP(false));
}
