#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


struct _GLF_struct_40 {
 ivec4 _f0;
 ivec4 _f1;
 uvec3 _f2;
 uvec3 _f3;
 mat4x2 _f4;
 ivec2 _f5;
 ivec2 _f6;
} ;

struct _GLF_struct_39 {
 mat4x3 _f0;
 bvec3 _f1;
 uvec3 _f2;
 uint _f3;
 mat3x2 _f4;
 mat3x2 _f5;
 mat2 _f6;
} ;

struct _GLF_struct_38 {
 uint _f0;
 vec2 _f1;
 mat2 _f2;
} ;

struct _GLF_struct_37 {
 vec3 _f0;
 mat4x3 _f1;
 uvec4 _f2;
 uint _f3;
 ivec4 _f4;
} ;

struct _GLF_struct_36 {
 mat4x2 _f0;
 uvec4 _f1;
 vec2 _f2;
 bvec3 _f3;
} ;

struct _GLF_struct_35 {
 bool _f0;
 ivec2 _f1;
 mat4x2 _f2;
 mat3x4 _f3;
} ;

struct _GLF_struct_41 {
 _GLF_struct_35 _f0;
 _GLF_struct_36 _f1;
 _GLF_struct_37 _f2;
 _GLF_struct_38 _f3;
 _GLF_struct_39 _f4;
 _GLF_struct_40 _f5;
 mat4 _f6;
} ;

struct _GLF_struct_33 {
 vec4 _f0;
 vec3 _f1;
 bvec4 _f2;
 mat4x2 _f3;
 uvec2 _f4;
 mat2x4 _f5;
 uint _f6;
} ;

struct _GLF_struct_32 {
 bvec2 _f0;
 uvec2 _f1;
 int _f2;
 uvec4 _f3;
 mat3x4 _f4;
 vec3 _f5;
} ;

struct _GLF_struct_31 {
 mat2 _f0;
 ivec4 _f1;
 vec2 _f2;
 mat3x2 _f3;
} ;

struct _GLF_struct_34 {
 _GLF_struct_31 _f0;
 _GLF_struct_32 _f1;
 _GLF_struct_33 _f2;
} ;

struct _GLF_struct_29 {
 ivec4 _f0;
 vec2 _f1;
 mat2x4 _f2;
 vec3 _f3;
} ;

struct _GLF_struct_28 {
 bvec2 _f0;
} ;

struct _GLF_struct_27 {
 vec3 _f0;
} ;

struct _GLF_struct_26 {
 mat2x4 _f0;
 mat3 _f1;
} ;

struct _GLF_struct_30 {
 _GLF_struct_26 _f0;
 _GLF_struct_27 _f1;
 _GLF_struct_28 _f2;
 _GLF_struct_29 _f3;
} ;

struct _GLF_struct_24 {
 vec3 _f0;
} ;

struct _GLF_struct_23 {
 mat4x3 _f0;
 bvec3 _f1;
 uint _f2;
 mat2x4 _f3;
 vec4 _f4;
 uvec3 _f5;
 vec3 _f6;
} ;

struct _GLF_struct_25 {
 _GLF_struct_23 _f0;
 _GLF_struct_24 _f1;
} ;

struct _GLF_struct_42 {
 _GLF_struct_25 _f0;
 uvec3 _f1;
 bvec4 _f2;
 uint workgroup_size;
 _GLF_struct_30 _f3;
 _GLF_struct_34 _f4;
 mat3 _f5;
 _GLF_struct_41 _f6;
} ;

struct _GLF_struct_20 {
 mat4x3 _f0;
 mat2 _f1;
 uint _f2;
} ;

struct _GLF_struct_19 {
 uint _f0;
 mat2x4 _f1;
 uint _f2;
 mat4x3 _f3;
 bool _f4;
} ;

struct _GLF_struct_18 {
 uvec4 _f0;
 mat4 _f1;
 int _f2;
} ;

struct _GLF_struct_17 {
 bvec4 _f0;
 vec2 _f1;
 mat4x3 _f2;
 vec4 _f3;
 mat2 _f4;
 mat4x3 _f5;
 mat3x2 _f6;
} ;

struct _GLF_struct_16 {
 int _f0;
 mat3 _f1;
 int _f2;
 ivec2 _f3;
} ;

struct _GLF_struct_21 {
 _GLF_struct_16 _f0;
 _GLF_struct_17 _f1;
 mat4 _f2;
 mat3x2 _f3;
 _GLF_struct_18 _f4;
 _GLF_struct_19 _f5;
 _GLF_struct_20 _f6;
} ;

struct _GLF_struct_22 {
 _GLF_struct_21 _f0;
 vec2 _f1;
 mat2x3 _f2;
 mat4x3 _f3;
 mat3 _f4;
 uint subgroup_id;
} ;

struct _GLF_struct_13 {
 vec3 _f0;
 int _f1;
 bvec3 _f2;
 mat3x2 _f3;
 mat4 _f4;
 ivec4 _f5;
} ;

struct _GLF_struct_12 {
 mat2 _f0;
 mat4x3 _f1;
} ;

struct _GLF_struct_14 {
 _GLF_struct_12 _f0;
 ivec2 _f1;
 _GLF_struct_13 _f2;
 mat4x3 _f3;
} ;

struct _GLF_struct_10 {
 uvec2 _f0;
 mat3 _f1;
 vec4 _f2;
 uint _f3;
 mat3x2 _f4;
 uvec2 _f5;
 mat3x4 _f6;
} ;

struct _GLF_struct_9 {
 bool _f0;
 bvec3 _f1;
 mat4x3 _f2;
 mat4x2 _f3;
 vec2 _f4;
 mat4 _f5;
 mat4 _f6;
} ;

struct _GLF_struct_8 {
 ivec2 _f0;
 mat4x2 _f1;
 mat2x4 _f2;
 int _f3;
 bvec4 _f4;
 ivec3 _f5;
 mat4 _f6;
} ;

struct _GLF_struct_11 {
 vec3 _f0;
 _GLF_struct_8 _f1;
 mat2 _f2;
 _GLF_struct_9 _f3;
 _GLF_struct_10 _f4;
 uint subgroup_size;
 uvec2 _f5;
 ivec4 _f6;
} ;

struct _GLF_struct_6 {
 float _f0;
 ivec3 _f1;
 bvec2 _f2;
 uvec2 _f3;
 vec2 _f4;
 bool _f5;
} ;

struct _GLF_struct_5 {
 mat3x2 _f0;
 float _f1;
 mat3x2 _f2;
 uint _f3;
 uvec4 _f4;
 uvec4 _f5;
} ;

struct _GLF_struct_7 {
 _GLF_struct_5 _f0;
 _GLF_struct_6 _f1;
} ;

struct _GLF_struct_3 {
 uvec3 _f0;
 mat3 _f1;
 ivec3 _f2;
 ivec4 _f3;
 uvec3 _f4;
} ;

struct _GLF_struct_2 {
 vec4 _f0;
} ;

struct _GLF_struct_4 {
 _GLF_struct_2 _f0;
 _GLF_struct_3 _f1;
 vec3 _f2;
} ;

struct _GLF_struct_0 {
 vec3 _f0;
 bool _f1;
 mat3x2 _f2;
 float _f3;
 ivec3 _f4;
 mat4x3 _f5;
 bvec4 _f6;
} ;

struct _GLF_struct_1 {
 mat3x2 _f0;
 _GLF_struct_0 _f1;
 int _f2;
} ;

struct _GLF_struct_15 {
 _GLF_struct_1 _f0;
 vec3 _f1;
 _GLF_struct_4 _f2;
 _GLF_struct_7 _f3;
 bvec3 _f4;
 _GLF_struct_11 _f5;
 _GLF_struct_14 _f6;
} ;

layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) && true), (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 _GLF_struct_22 _GLF_struct_replacement_22 = _GLF_struct_22(_GLF_struct_21(_GLF_struct_16(1, mat3(_GLF_IDENTITY(_GLF_IDENTITY(1.0, float(_GLF_IDENTITY(vec2(1.0, 1.0), max(vec2(1.0, 1.0), _GLF_IDENTITY(vec2(1.0, 1.0), vec2(1.0, 1.0) * (vec2(1.0, 1.0))))))), _GLF_IDENTITY((1.0) - sin(0.0), clamp((1.0) - sin(0.0), _GLF_IDENTITY((1.0) - sin(0.0), ((1.0) - sin(0.0)) + determinant(mat3(0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))), (1.0) - sin(0.0))))), _GLF_IDENTITY(1, (1) << int(_GLF_ZERO(0.0, injectionSwitch.x))), ivec2(1)), _GLF_struct_17(bvec4(true), vec2(1.0), mat4x3(1.0), vec4(_GLF_IDENTITY(1.0, (1.0) / round(length(normalize(cos(vec3(0.0, 0.0, 0.0))))))), mat2(1.0), mat4x3(_GLF_IDENTITY(1.0, mix(float(_GLF_IDENTITY(1.0, (true ? _GLF_IDENTITY(1.0, (1.0) / 1.0) : _GLF_FUZZED(635.015)))), float(_GLF_FUZZED(0.0)), bool(false)))), mat3x2(1.0)), mat4(1.0), mat3x2(1.0), _GLF_struct_18(uvec4(1u), mat4(1.0), 1), _GLF_struct_19(1u, mat2x4(_GLF_IDENTITY(1.0, max(1.0, _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(43.58)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), 1u, mat4x3(1.0), true), _GLF_struct_20(mat4x3(1.0), mat2(1.0), _GLF_IDENTITY(1u, clamp(1u, 1u, 1u)))), vec2(1.0), mat2x3(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(7.9)), float(1.0), bool(_GLF_IDENTITY(true, (true) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), mat4x3(1.0), mat3(_GLF_IDENTITY(1.0, (1.0) - 0.0)), gl_SubgroupID);
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).y))))
      barrier();
     return;
    }
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(8.6)), bool(false))), injectionSwitch.y))))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), false, true, false)))) && true))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true))))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)), (_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false)))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch))) / exp(vec2(0.0, 0.0))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), _GLF_IDENTITY(vec2(mat2x4(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), 0.0, 1.0, 0.0, 0.0, determinant(mat2(1.0, 1.0, 0.0, 1.0)), 1.0)), mix(vec2((vec2(mat2x4(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), 0.0, 1.0, 0.0, 0.0, determinant(mat2(1.0, 1.0, 0.0, 1.0)), 1.0)))[0], _GLF_FUZZED(0.4)), vec2(_GLF_FUZZED(-4.6), (vec2(mat2x4(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), 0.0, 1.0, 0.0, 0.0, determinant(mat2(1.0, 1.0, 0.0, 1.0)), 1.0)))[1]), bvec2(false, true)))))), _GLF_IDENTITY(injectionSwitch, vec2(mat3x2(injectionSwitch, _GLF_IDENTITY(1.0, mix(float(_GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(-5.0)))), float(_GLF_FUZZED(-71.55)), bool(false))), 0.0, 0.0, 1.0))))).y))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / _GLF_IDENTITY(abs(exp(vec2(0.0, 0.0))), (false ? _GLF_FUZZED(min(_GLF_IDENTITY(log(injectionSwitch), min(log(injectionSwitch), log(injectionSwitch))), injectionSwitch)) : abs(exp(vec2(0.0, 0.0)))))).y))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / _GLF_IDENTITY(abs(exp(vec2(0.0, 0.0))), (false ? _GLF_FUZZED(min(_GLF_IDENTITY(log(injectionSwitch), min(log(injectionSwitch), log(injectionSwitch))), injectionSwitch)) : abs(exp(vec2(0.0, 0.0)))))).y))), bool(bvec2(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / _GLF_IDENTITY(abs(exp(vec2(0.0, 0.0))), (false ? _GLF_FUZZED(min(_GLF_IDENTITY(log(injectionSwitch), min(log(injectionSwitch), log(injectionSwitch))), injectionSwitch)) : abs(exp(vec2(0.0, 0.0)))))).y))), true)))) && true), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / _GLF_IDENTITY(abs(exp(vec2(0.0, _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(_GLF_IDENTITY(8710.1635, max(_GLF_IDENTITY(8710.1635, clamp(8710.1635, 8710.1635, 8710.1635)), _GLF_IDENTITY(8710.1635, mix(float(_GLF_FUZZED(-92.01)), float(8710.1635), bool(true)))))) : 0.0))))), _GLF_IDENTITY((false ? _GLF_FUZZED(min(log(injectionSwitch), injectionSwitch)) : _GLF_IDENTITY(abs(exp(vec2(0.0, 0.0))), (abs(exp(vec2(0.0, 0.0)))) - vec2(0.0, 0.0))), max((false ? _GLF_FUZZED(min(log(injectionSwitch), injectionSwitch)) : _GLF_IDENTITY(abs(exp(vec2(0.0, 0.0))), (abs(exp(vec2(0.0, 0.0)))) - vec2(0.0, 0.0))), (false ? _GLF_FUZZED(min(log(injectionSwitch), injectionSwitch)) : _GLF_IDENTITY(abs(exp(vec2(0.0, 0.0))), (abs(exp(vec2(0.0, 0.0)))) - vec2(0.0, 0.0))))))).y)))) && true))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, true, true, false)))))
            barrier();
           if(_GLF_DEAD(false))
            return;
           if(_GLF_DEAD(false))
            return;
           return;
          }
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         return;
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(injectionSwitch.x > injectionSwitch.y, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), false, false, false)), false || (_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(injectionSwitch.x > injectionSwitch.y, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), false, false, false)), true && (bool(bvec4(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(injectionSwitch.x > injectionSwitch.y, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), false, false, false)))))))))))
          barrier();
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            return;
           if(_GLF_DEAD(false))
            barrier();
           return;
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            return;
           if(_GLF_DEAD(false))
            return;
          }
         return;
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            return;
           return;
          }
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         return;
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         barrier();
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
          {
           if(_GLF_DEAD(false))
            return;
           return;
          }
         barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
        }
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bool(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4(_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y))), false || ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[_GLF_IDENTITY(1, (1) | (1))])))).y))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, true)))))))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, false, true)))))
        return;
       return;
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         barrier();
        }
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          return;
         barrier();
        }
       return;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         barrier();
        }
      }
     if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * 1.0) > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       return;
      }
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(-8900.3048)))) + 0.0)))))))), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(false), bool(_GLF_IDENTITY(bool(_GLF_DEAD(false)), false || (bool(_GLF_DEAD(false)))))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      return;
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         return;
        }
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            return;
           return;
          }
         return;
        }
       if(_GLF_DEAD(false))
        return;
       return;
      }
     return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         return;
        }
       barrier();
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (_GLF_IDENTITY(! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) || false))))
      return;
     if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
    }
   if(_GLF_DEAD(false))
    barrier();
   return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_DEAD(false)))))
  return;
 if(_GLF_DEAD(false))
  barrier();
 _GLF_struct_15 _GLF_struct_replacement_15 = _GLF_struct_15(_GLF_struct_1(mat3x2(_GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, (1.0) - 0.0), 1.0))), _GLF_struct_0(vec3(1.0), true, mat3x2(1.0), 1.0, ivec3(1), mat4x3(1.0), bvec4(true)), 1), vec3(1.0), _GLF_struct_4(_GLF_struct_2(vec4(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)))), _GLF_struct_3(uvec3(1u), mat3(1.0), ivec3(1), ivec4(1), uvec3(1u)), vec3(1.0)), _GLF_struct_7(_GLF_struct_5(mat3x2(_GLF_IDENTITY(_GLF_IDENTITY(1.0, 0.0 + (1.0)), max(_GLF_IDENTITY(1.0, 0.0 + (1.0)), _GLF_IDENTITY(1.0, 0.0 + (1.0))))), 1.0, mat3x2(1.0), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1u, max(1u, 1u)), (1u) << 0u), clamp(_GLF_IDENTITY(1u, (1u) << 0u), _GLF_IDENTITY(1u, (1u) << 0u), _GLF_IDENTITY(1u, (1u) << 0u))), uvec4(1u), uvec4(1u)), _GLF_struct_6(1.0, ivec3(1), bvec2(true), uvec2(1u), vec2(1.0), true)), bvec3(true), _GLF_struct_11(_GLF_IDENTITY(vec3(1.0), (true ? vec3(1.0) : _GLF_FUZZED(vec3(-850.998, -7605.5059, -78.87)))), _GLF_struct_8(ivec2(1), mat4x2(1.0), mat2x4(1.0), 1, bvec4(true), ivec3(_GLF_IDENTITY(1, _GLF_IDENTITY(int(ivec3(1, (0 >> _GLF_IDENTITY(int(8), _GLF_IDENTITY(int(8), (int(8)) << 0))), ((1 << _GLF_IDENTITY(int(4), int(4))) >> _GLF_IDENTITY(int(4), int(4))))), clamp(int(ivec3(1, (0 >> _GLF_IDENTITY(int(8), _GLF_IDENTITY(int(8), (int(8)) << 0))), ((_GLF_IDENTITY(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) >> 0)) + (0 ^ 0)), min(_GLF_IDENTITY(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) >> 0)) + (0 ^ 0)), (_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) >> 0)) + (0 ^ 0))) >> 0), _GLF_IDENTITY(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) >> 0)) + (0 ^ 0)), max(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) >> 0)) + (0 ^ 0)), _GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) >> 0)) + (0 ^ 0)))))) << _GLF_IDENTITY(_GLF_IDENTITY(int(4), 0 | (int(4))), int(4))) >> _GLF_IDENTITY(int(4), int(4))))), int(ivec3(1, (0 >> _GLF_IDENTITY(int(8), _GLF_IDENTITY(_GLF_IDENTITY(int(8), (int(8)) << 0), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(int(8), (int(8)) << 0)), 0 | (_GLF_IDENTITY(~ (_GLF_IDENTITY(int(8), (int(8)) << 0)), min(~ (_GLF_IDENTITY(int(8), (int(8)) << 0)), ~ (_GLF_IDENTITY(int(8), (int(8)) << 0)))))))))), (_GLF_IDENTITY((1 << _GLF_IDENTITY(int(4), int(_GLF_IDENTITY(4, (4) - 0)))), max((1 << _GLF_IDENTITY(int(4), int(4))), (1 << _GLF_IDENTITY(int(4), int(4))))) >> _GLF_IDENTITY(int(4), int(4))))), int(ivec3(1, (_GLF_IDENTITY(0, (_GLF_IDENTITY(0, clamp(0, 0, _GLF_IDENTITY(0, min(0, 0))))) * 1) >> _GLF_IDENTITY(int(8), _GLF_IDENTITY(int(8), (int(8)) << 0))), ((1 << _GLF_IDENTITY(int(4), int(4))) >> _GLF_IDENTITY(int(4), int(4))))))))), _GLF_IDENTITY(mat4(1.0), (true ? mat4(1.0) : _GLF_FUZZED(mat4(-70.45, 6.7, -79.57, -2.2, -843.570, 2818.8550, 4594.9432, 9524.0931, -4.1, 1037.8851, 93.75, -7.4, -61.98, 1953.4711, _GLF_IDENTITY(-79.34, mix(float(_GLF_FUZZED(float(-93020))), float(-79.34), bool(true))), -3.9))))), mat2(1.0), _GLF_struct_9(_GLF_IDENTITY(_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, bool(_GLF_IDENTITY(bvec2(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec2(bvec4(bvec2(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false, true)))))))), bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(_GLF_IDENTITY(true, false || (true)), bool(_GLF_IDENTITY(bvec2(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec2(bvec4(bvec2(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false, true)))))))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(_GLF_IDENTITY(true, bool(bvec4(_GLF_IDENTITY(true, ! (! (true))), true, true, true))), bool(_GLF_IDENTITY(bvec2(true, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0) > injectionSwitch.y))), bvec2(bvec4(bvec2(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(false, false || (false)), true))))))))), ! (! (bool(_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, bool(_GLF_IDENTITY(bvec2(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec2(bvec4(bvec2(true, _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(mat4x2(injectionSwitch.y, abs(_GLF_ZERO(0.0, injectionSwitch.x)), 0.0, 0.0, 1.0, 1.0, 1.0, 1.0)))))), false, true))))))))))))), _GLF_IDENTITY(true && (bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, bool(_GLF_IDENTITY(bvec2(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec2(bvec4(bvec2(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false, true))))))))), ! (! (bool(_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, bool(_GLF_IDENTITY(bvec2(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec2(bvec4(bvec2(true, _GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4((injectionSwitch.x > injectionSwitch.y), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))))), false, true)))))))))))))), bool(bvec3(_GLF_IDENTITY(true && (bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, bool(_GLF_IDENTITY(bvec2(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec2(bvec4(bvec2(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false, true))))))))), ! (! (bool(_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, bool(_GLF_IDENTITY(bvec2(true, _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(vec3(injectionSwitch, 1.0))).y))), bvec2(bvec4(bvec2(true, _GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false))), false, true)))))))))))))), true && (true && (bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, bool(_GLF_IDENTITY(bvec2(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec2(bvec4(bvec2(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false, true))))))))), ! (! (bool(_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec2(bvec4(bvec2(true, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))), false, true)))), ! (_GLF_IDENTITY(! (bool(_GLF_IDENTITY(bvec2(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec2(bvec4(bvec2(true, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))), false, true))))), bool(bvec3(! (bool(_GLF_IDENTITY(bvec2(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec2(bvec4(bvec2(true, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))), false, true))))), false, true))))))))))))))))), false, true))))), true, false, true))), bvec3(true), mat4x3(1.0), mat4x2(1.0), vec2(1.0), _GLF_IDENTITY(mat4(1.0), (_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true))) ? _GLF_IDENTITY(_GLF_FUZZED(mat4(-3.5, 8.3, 3.3, -98.22, 3407.5581, 591.522, _GLF_IDENTITY(8383.3466, clamp(8383.3466, _GLF_IDENTITY(8383.3466, max(8383.3466, 8383.3466)), _GLF_IDENTITY(8383.3466, clamp(8383.3466, _GLF_IDENTITY(8383.3466, 0.0 + (8383.3466)), _GLF_IDENTITY(8383.3466, (8383.3466) + 0.0))))), _GLF_IDENTITY(8.8, float(float(8.8))), -790.915, -9.8, 3.6, 42.69, -3.8, -8.6, 1.1, 248.257)), mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0) + (_GLF_FUZZED(_GLF_IDENTITY(mat4(-3.5, 8.3, 3.3, -98.22, 3407.5581, 591.522, 8383.3466, 8.8, -790.915, -9.8, 3.6, 42.69, -3.8, -8.6, 1.1, _GLF_IDENTITY(_GLF_IDENTITY(248.257, (true ? 248.257 : _GLF_FUZZED(166.714))), (_GLF_IDENTITY(_GLF_IDENTITY(248.257, (true ? 248.257 : _GLF_FUZZED(166.714))), (_GLF_IDENTITY(248.257, (true ? 248.257 : _GLF_FUZZED(166.714)))) - 0.0)) / 1.0)), mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0) + (mat4(-3.5, 8.3, 3.3, -98.22, 3407.5581, 591.522, 8383.3466, 8.8, -790.915, -9.8, 3.6, 42.69, -3.8, -8.6, 1.1, _GLF_IDENTITY(248.257, (true ? 248.257 : _GLF_FUZZED(166.714))))))))) : _GLF_IDENTITY(mat4(1.0), transpose(_GLF_IDENTITY(_GLF_IDENTITY(transpose(mat4(1.0)), transpose(_GLF_IDENTITY(transpose(transpose(mat4(_GLF_IDENTITY(1.0, max(1.0, 1.0))))), transpose(_GLF_IDENTITY(transpose(transpose(transpose(mat4(1.0)))), transpose(transpose(transpose(transpose(transpose(mat4(1.0))))))))))), _GLF_IDENTITY(mat4(1.0) * (_GLF_IDENTITY(transpose(mat4(1.0)), transpose(_GLF_IDENTITY(transpose(transpose(mat4(1.0))), transpose(_GLF_IDENTITY(transpose(transpose(transpose(mat4(1.0)))), transpose(transpose(transpose(transpose(transpose(_GLF_IDENTITY(mat4(1.0), transpose(transpose(_GLF_IDENTITY(mat4(1.0), _GLF_IDENTITY(mat4(1.0) * (mat4(1.0)), transpose(_GLF_IDENTITY(transpose(mat4(1.0) * (mat4(1.0))), (transpose(mat4(1.0) * (mat4(1.0)))) / mat4(1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0))))))))))))))))))), transpose(transpose(mat4(1.0) * (_GLF_IDENTITY(transpose(mat4(1.0)), transpose(_GLF_IDENTITY(transpose(transpose(mat4(1.0))), transpose(_GLF_IDENTITY(_GLF_IDENTITY(transpose(transpose(transpose(mat4(1.0)))), transpose(transpose(_GLF_IDENTITY(transpose(transpose(transpose(mat4(1.0)))), (transpose(transpose(transpose(mat4(1.0))))) / mat4(1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0))))), transpose(transpose(transpose(transpose(transpose(_GLF_IDENTITY(mat4(1.0), transpose(transpose(_GLF_IDENTITY(_GLF_IDENTITY(mat4(1.0), mat4(1.0) * (mat4(1.0))), (_GLF_IDENTITY(mat4(1.0), mat4(1.0) * (mat4(1.0)))) - mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)))))))))))))))))))))))), _GLF_IDENTITY(mat4(1.0), (false ? _GLF_FUZZED(mat4(-4.0, _GLF_IDENTITY(20.59, min(20.59, 20.59)), -8.0, -1837.5240, 4.3, 7.0, -8418.5717, -7.2, -7.4, -1.6, 438.954, 0.9, -245.594, 5.8, -4.5, -5.1)) : mat4(1.0)))), _GLF_struct_10(uvec2(1u), mat3(_GLF_IDENTITY(1.0, _GLF_IDENTITY(clamp(_GLF_IDENTITY(1.0, 0.0 + (1.0)), 1.0, _GLF_IDENTITY(1.0, max(1.0, 1.0))), mix(float(clamp(_GLF_IDENTITY(1.0, 0.0 + (1.0)), 1.0, _GLF_IDENTITY(_GLF_IDENTITY(1.0, max(1.0, 1.0)), (true ? _GLF_IDENTITY(1.0, max(1.0, 1.0)) : _GLF_FUZZED(39.88))))), float(_GLF_FUZZED(-8506.3643)), bool(false))))), vec4(1.0), 1u, mat3x2(1.0), uvec2(1u), mat3x4(1.0)), gl_SubgroupSize, _GLF_IDENTITY(uvec2(1u), clamp(_GLF_IDENTITY(uvec2(1u), (uvec2(1u)) | (uvec2(1u))), uvec2(1u), uvec2(1u))), _GLF_IDENTITY(ivec4(1), min(ivec4(1), ivec4(1)))), _GLF_struct_14(_GLF_struct_12(mat2(1.0), mat4x3(1.0)), ivec2(1), _GLF_struct_13(vec3(1.0), _GLF_IDENTITY(_GLF_IDENTITY(1, (1) / _GLF_IDENTITY(1, (1) | (1))), max(1, _GLF_IDENTITY(1, _GLF_IDENTITY(min(1, 1), _GLF_IDENTITY((_GLF_IDENTITY(min(1, 1), 0 ^ (min(1, 1)))), max(_GLF_IDENTITY((_GLF_IDENTITY(min(1, 1), 0 ^ (min(1, 1)))), int(ivec4((_GLF_IDENTITY(min(1, 1), 0 ^ (min(1, 1)))), 1, (1 ^ 0), 1))), _GLF_IDENTITY((_GLF_IDENTITY(min(1, 1), 0 ^ (min(1, 1)))), ~ (~ ((_GLF_IDENTITY(min(1, 1), 0 ^ (min(1, 1))))))))) / 1)))), _GLF_IDENTITY(bvec3(true), bvec3(bvec4(bvec3(true), false))), mat3x2(_GLF_IDENTITY(1.0, (1.0) / _GLF_IDENTITY(1.0, (1.0) + 0.0))), mat4(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0))) - 0.0)), ivec4(1)), mat4x3(1.0)));
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y)))), bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y)))), false, true)))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     barrier();
    }
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  barrier();
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    barrier();
  }
 uint num_workgroup = gl_NumWorkGroups.x;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec2(false, true))), (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
  }
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, false, true)), ! (_GLF_IDENTITY(! (bool(bvec3(false, false, true))), bool(bvec3(! (bool(bvec3(false, false, true))), true, false)))))), (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), true && (! (_GLF_DEAD(false)))))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), false, true, false)))))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) || false), (injectionSwitch.x > injectionSwitch.y))))
      return;
     barrier();
    }
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     barrier();
    }
   return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)))).y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
  {
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 _GLF_struct_42 _GLF_struct_replacement_42 = _GLF_struct_42(_GLF_struct_25(_GLF_struct_23(mat4x3(1.0), _GLF_IDENTITY(bvec3(true), bvec3(_GLF_IDENTITY(bvec3(bvec3(true)), bvec3(bvec3(bvec3(bvec3(_GLF_IDENTITY(true, (true) || false)))))))), 1u, mat2x4(1.0), vec4(1.0), uvec3(1u), vec3(1.0)), _GLF_struct_24(vec3(1.0))), uvec3(1u), bvec4(true), gl_WorkGroupSize.x, _GLF_struct_30(_GLF_struct_26(mat2x4(1.0), mat3(1.0)), _GLF_struct_27(_GLF_IDENTITY(vec3(1.0), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), _GLF_IDENTITY(bool(bvec3(! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true, false)), false || (_GLF_IDENTITY(bool(bvec3(! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true, false)), ! (! (bool(bvec3(! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true, false))))))))) ? _GLF_FUZZED(vec3(_GLF_IDENTITY(-2655.9916, float(vec3(-2655.9916, 0.0, 1.0))), -664.745, -4.3)) : _GLF_IDENTITY(vec3(_GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-247.499) : _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-9038.1468)), float(_GLF_IDENTITY(1.0, min(1.0, 1.0))), bool(true))))), 1.0))), clamp(_GLF_IDENTITY(vec3(1.0), (false ? _GLF_FUZZED(vec3(944.209, 9067.0380, -61.20)) : vec3(1.0))), vec3(1.0), vec3(1.0)))))), _GLF_struct_28(bvec2(true)), _GLF_struct_29(_GLF_IDENTITY(ivec4(1), min(ivec4(1), _GLF_IDENTITY(ivec4(1), (ivec4(_GLF_IDENTITY(1, ~ (~ (1))))) | (ivec4(1))))), _GLF_IDENTITY(vec2(1.0), _GLF_IDENTITY(min(vec2(1.0), _GLF_IDENTITY(vec2(1.0), _GLF_IDENTITY((_GLF_IDENTITY(vec2(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0))), (false ? _GLF_FUZZED(injectionSwitch) : vec2(1.0)))) / vec2(1.0, _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0))), ((_GLF_IDENTITY(vec2(1.0), (false ? _GLF_FUZZED(injectionSwitch) : vec2(1.0)))) / vec2(1.0, 1.0)) - vec2(0.0, 0.0)))), clamp(_GLF_IDENTITY(min(_GLF_IDENTITY(vec2(1.0), mix(vec2(_GLF_FUZZED(-672.684), _GLF_FUZZED(1554.7820)), vec2((vec2(1.0))[0], (vec2(1.0))[1]), bvec2(true, true))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(vec2(1.0), (_GLF_IDENTITY(vec2(1.0), (false ? _GLF_FUZZED(injectionSwitch) : vec2(1.0)))) / vec2(1.0, _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(-5.0)), bool(false))))), _GLF_IDENTITY(vec2(mat3x4(_GLF_IDENTITY(vec2(1.0), (_GLF_IDENTITY(vec2(1.0), (false ? _GLF_FUZZED(injectionSwitch) : vec2(1.0)))) / vec2(1.0, _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(-5.0)), bool(false))))), 1.0, sin(length(vec2(0.0, 0.0))), 1.0, 1.0, log(1.0), 0.0, 1.0, 1.0, 1.0, determinant(mat4(0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0)))), vec2(vec4(_GLF_IDENTITY(vec2(mat3x4(_GLF_IDENTITY(vec2(1.0), (_GLF_IDENTITY(vec2(1.0), (false ? _GLF_FUZZED(injectionSwitch) : vec2(1.0)))) / vec2(1.0, _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(-5.0)), bool(false))))), 1.0, sin(length(vec2(0.0, 0.0))), 1.0, 1.0, log(1.0), 0.0, 1.0, 1.0, 1.0, determinant(mat4(0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0)))), (true ? vec2(mat3x4(_GLF_IDENTITY(vec2(1.0), (_GLF_IDENTITY(vec2(1.0), (false ? _GLF_FUZZED(injectionSwitch) : vec2(1.0)))) / vec2(1.0, _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(-5.0)), bool(false))))), 1.0, sin(length(vec2(0.0, 0.0))), 1.0, 1.0, log(1.0), 0.0, 1.0, 1.0, 1.0, determinant(mat4(0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0)))) : _GLF_FUZZED(injectionSwitch))), 0.0, 0.0)))), min(_GLF_IDENTITY(vec2(1.0), (_GLF_IDENTITY(vec2(1.0), (false ? _GLF_FUZZED(injectionSwitch) : vec2(1.0)))) / vec2(1.0, 1.0)), _GLF_IDENTITY(vec2(1.0), _GLF_IDENTITY((_GLF_IDENTITY(vec2(1.0), (false ? _GLF_FUZZED(injectionSwitch) : vec2(1.0)))) / vec2(1.0, 1.0), max((_GLF_IDENTITY(vec2(1.0), (false ? _GLF_FUZZED(injectionSwitch) : vec2(1.0)))) / vec2(1.0, 1.0), _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(vec2(1.0), (false ? _GLF_FUZZED(injectionSwitch) : vec2(1.0)))) / vec2(1.0, 1.0), clamp((_GLF_IDENTITY(vec2(1.0), (false ? _GLF_FUZZED(injectionSwitch) : vec2(1.0)))) / vec2(1.0, 1.0), (_GLF_IDENTITY(vec2(1.0), (false ? _GLF_FUZZED(injectionSwitch) : vec2(1.0)))) / vec2(1.0, 1.0), (_GLF_IDENTITY(vec2(1.0), (false ? _GLF_FUZZED(injectionSwitch) : vec2(1.0)))) / vec2(1.0, 1.0))), min(_GLF_IDENTITY((_GLF_IDENTITY(vec2(1.0), (false ? _GLF_FUZZED(injectionSwitch) : vec2(1.0)))) / vec2(1.0, 1.0), clamp((_GLF_IDENTITY(vec2(1.0), (false ? _GLF_FUZZED(injectionSwitch) : vec2(1.0)))) / vec2(1.0, 1.0), (_GLF_IDENTITY(vec2(1.0), (false ? _GLF_FUZZED(injectionSwitch) : vec2(1.0)))) / vec2(1.0, 1.0), (_GLF_IDENTITY(vec2(1.0), (false ? _GLF_FUZZED(injectionSwitch) : vec2(1.0)))) / vec2(1.0, 1.0))), _GLF_IDENTITY((_GLF_IDENTITY(vec2(1.0), (false ? _GLF_FUZZED(injectionSwitch) : vec2(1.0)))) / vec2(1.0, 1.0), clamp((_GLF_IDENTITY(vec2(1.0), (false ? _GLF_FUZZED(injectionSwitch) : vec2(1.0)))) / vec2(1.0, 1.0), (_GLF_IDENTITY(vec2(1.0), (false ? _GLF_FUZZED(injectionSwitch) : vec2(1.0)))) / vec2(1.0, 1.0), (_GLF_IDENTITY(vec2(1.0), (false ? _GLF_FUZZED(injectionSwitch) : vec2(1.0)))) / vec2(1.0, 1.0))))))))))), vec2(_GLF_IDENTITY(mat4(min(vec2(1.0), _GLF_IDENTITY(vec2(1.0), (_GLF_IDENTITY(vec2(1.0), _GLF_IDENTITY((_GLF_IDENTITY(false ? _GLF_FUZZED(injectionSwitch) : vec2(1.0), clamp(false ? _GLF_FUZZED(injectionSwitch) : vec2(1.0), false ? _GLF_FUZZED(injectionSwitch) : vec2(1.0), _GLF_IDENTITY(false ? _GLF_FUZZED(injectionSwitch) : vec2(1.0), mix(vec2(_GLF_FUZZED(-9.0), (false ? _GLF_FUZZED(injectionSwitch) : vec2(1.0))[1]), vec2((false ? _GLF_FUZZED(injectionSwitch) : vec2(1.0))[0], _GLF_FUZZED(239.522)), bvec2(true, false)))))), min(_GLF_IDENTITY((_GLF_IDENTITY(false ? _GLF_FUZZED(injectionSwitch) : vec2(1.0), clamp(false ? _GLF_FUZZED(injectionSwitch) : vec2(1.0), false ? _GLF_FUZZED(injectionSwitch) : vec2(1.0), _GLF_IDENTITY(false ? _GLF_FUZZED(injectionSwitch) : vec2(1.0), mix(vec2(_GLF_FUZZED(_GLF_IDENTITY(-9.0, (-9.0) + 0.0)), (false ? _GLF_FUZZED(injectionSwitch) : vec2(1.0))[1]), vec2((false ? _GLF_FUZZED(injectionSwitch) : vec2(1.0))[0], _GLF_FUZZED(239.522)), bvec2(true, false)))))), min((_GLF_IDENTITY(false ? _GLF_FUZZED(injectionSwitch) : vec2(1.0), clamp(false ? _GLF_FUZZED(injectionSwitch) : vec2(1.0), false ? _GLF_FUZZED(injectionSwitch) : vec2(1.0), _GLF_IDENTITY(false ? _GLF_FUZZED(injectionSwitch) : vec2(1.0), mix(vec2(_GLF_FUZZED(_GLF_IDENTITY(-9.0, (-9.0) + 0.0)), (false ? _GLF_FUZZED(injectionSwitch) : vec2(1.0))[1]), vec2((false ? _GLF_FUZZED(injectionSwitch) : vec2(1.0))[0], _GLF_FUZZED(239.522)), bvec2(true, false)))))), _GLF_IDENTITY((_GLF_IDENTITY(false ? _GLF_FUZZED(injectionSwitch) : vec2(1.0), clamp(false ? _GLF_FUZZED(injectionSwitch) : vec2(1.0), false ? _GLF_FUZZED(injectionSwitch) : vec2(1.0), _GLF_IDENTITY(false ? _GLF_FUZZED(injectionSwitch) : vec2(1.0), mix(vec2(_GLF_FUZZED(_GLF_IDENTITY(-9.0, (-9.0) + 0.0)), (false ? _GLF_FUZZED(injectionSwitch) : vec2(1.0))[1]), vec2((false ? _GLF_FUZZED(injectionSwitch) : vec2(1.0))[0], _GLF_FUZZED(239.522)), bvec2(true, false)))))), (false ? _GLF_FUZZED(injectionSwitch) : (_GLF_IDENTITY(false ? _GLF_FUZZED(injectionSwitch) : vec2(1.0), clamp(false ? _GLF_FUZZED(injectionSwitch) : vec2(1.0), false ? _GLF_FUZZED(injectionSwitch) : vec2(1.0), _GLF_IDENTITY(false ? _GLF_FUZZED(injectionSwitch) : vec2(1.0), mix(vec2(_GLF_FUZZED(_GLF_IDENTITY(-9.0, (-9.0) + 0.0)), (false ? _GLF_FUZZED(injectionSwitch) : vec2(1.0))[1]), vec2((false ? _GLF_FUZZED(injectionSwitch) : vec2(1.0))[0], _GLF_FUZZED(239.522)), bvec2(true, false)))))))))), (_GLF_IDENTITY(false ? _GLF_FUZZED(injectionSwitch) : vec2(1.0), clamp(false ? _GLF_FUZZED(injectionSwitch) : vec2(1.0), false ? _GLF_FUZZED(injectionSwitch) : vec2(1.0), _GLF_IDENTITY(false ? _GLF_FUZZED(injectionSwitch) : vec2(1.0), mix(vec2(_GLF_FUZZED(-9.0), (false ? _GLF_FUZZED(injectionSwitch) : vec2(1.0))[1]), vec2((false ? _GLF_FUZZED(injectionSwitch) : vec2(1.0))[0], _GLF_FUZZED(239.522)), bvec2(true, false)))))))))) / vec2(1.0, 1.0))), _GLF_IDENTITY(1.0, (1.0) * 1.0), cos(_GLF_IDENTITY(0.0, max(0.0, 0.0))), 0.0, 1.0, 1.0, 1.0, 0.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)))), 1.0, 1.0, 1.0, length(0.0), _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0))), 1.0), (true ? _GLF_IDENTITY(mat4(min(vec2(_GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(-5813.6969)))), _GLF_IDENTITY(vec2(1.0), (_GLF_IDENTITY(_GLF_IDENTITY(vec2(1.0), (false ? _GLF_FUZZED(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)))), (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch))))) * mat2(1.0))) : vec2(1.0))), vec2(0.0, 0.0) + (_GLF_IDENTITY(_GLF_IDENTITY(vec2(1.0), (false ? _GLF_FUZZED(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch))))) : vec2(1.0))), (_GLF_IDENTITY(vec2(1.0), (false ? _GLF_FUZZED(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch))), vec2(mat3(max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch))), 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0))))) : vec2(1.0)))) + vec2(0.0, 0.0))))) / vec2(1.0, _GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(-4.8)))))), 1.0, cos(0.0), 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(1.0, min(1.0, _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)))), 1.0, 1.0, length(0.0), _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0))), 1.0), (mat4(min(vec2(1.0), _GLF_IDENTITY(vec2(1.0), (_GLF_IDENTITY(vec2(1.0), (false ? _GLF_FUZZED(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)))), vec2(vec3(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)))), determinant(mat2(0.0, 1.0, 0.0, 0.0)))))) : vec2(1.0)))) / vec2(1.0, _GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(-4.8)))))), 1.0, _GLF_IDENTITY(cos(0.0), clamp(cos(0.0), cos(0.0), cos(0.0))), 0.0, _GLF_IDENTITY(1.0, 1.0 * (1.0)), 1.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(1.0, min(1.0, _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)))), 1.0, 1.0, length(0.0), _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0))), 1.0)) / mat4(1.0, _GLF_IDENTITY(1.0, (1.0) - _GLF_IDENTITY(dot(vec2(0.0, 0.0), vec2(1.0, _GLF_ONE(1.0, injectionSwitch.y))), _GLF_IDENTITY(dot(vec2(0.0, 0.0), vec2(1.0, _GLF_ONE(1.0, injectionSwitch.y))), mix(float(_GLF_FUZZED(6829.3232)), float(dot(vec2(0.0, 0.0), vec2(1.0, _GLF_ONE(1.0, injectionSwitch.y)))), bool(true))))), 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(2692.6580)), float(_GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0, 1.0))), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), 1.0, 1.0, 1.0, _GLF_IDENTITY(1.0, (1.0) + 0.0))) : _GLF_FUZZED(mat4(486.108, 0.0, -13.39, -3076.8398, 1.0, 7.8, 6.7, _GLF_IDENTITY(2.2, float(vec3(_GLF_IDENTITY(2.2, (_GLF_IDENTITY(2.2, clamp(2.2, 2.2, 2.2))) - 0.0), _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(-0.2) : _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-5.7)), float(0.0), bool(true))))), 1.0))), -7.5, -3752.2935, -2.5, 9223.3131, -979.108, -2.2, -24.11, 6.0)))))), min(vec2(_GLF_IDENTITY(1.0, _GLF_IDENTITY(min(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-5.6) : 1.0)), _GLF_IDENTITY(1.0, log(1.0) + (_GLF_IDENTITY(1.0, float(mat2(1.0, 1.0, 0.0, 1.0)))))), _GLF_IDENTITY(float(mat4x3(min(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-5.6) : 1.0)), _GLF_IDENTITY(1.0, log(1.0) + (_GLF_IDENTITY(1.0, float(mat2(1.0, 1.0, 0.0, 1.0)))))), exp(0.0), 0.0, 1.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 1.0, _GLF_IDENTITY(sin(0.0), clamp(sin(0.0), sin(0.0), sin(0.0))), 1.0, 0.0, 1.0)), (false ? _GLF_FUZZED(floor(1.8)) : float(mat4x3(min(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-5.6) : 1.0)), _GLF_IDENTITY(1.0, log(1.0) + (_GLF_IDENTITY(_GLF_IDENTITY(1.0, (1.0) - tan(0.0)), float(mat2(1.0, 1.0, 0.0, 1.0)))))), exp(0.0), 0.0, 1.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 1.0, sin(0.0), 1.0, 0.0, 1.0))))))), _GLF_IDENTITY(vec2(1.0), (_GLF_IDENTITY(_GLF_IDENTITY(vec2(1.0), (vec2(1.0)) + vec2(0.0, 0.0)), (false ? _GLF_FUZZED(injectionSwitch) : vec2(1.0)))) / vec2(1.0, 1.0))), min(vec2(1.0), _GLF_IDENTITY(_GLF_IDENTITY(vec2(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(2.1)), float(1.0), bool(true)))), (_GLF_IDENTITY(vec2(1.0), (false ? _GLF_FUZZED(injectionSwitch) : vec2(1.0)))) / vec2(1.0, 1.0)), mat2(1.0) * (_GLF_IDENTITY(vec2(1.0), (_GLF_IDENTITY(vec2(1.0), (false ? _GLF_FUZZED(injectionSwitch) : vec2(1.0)))) / vec2(1.0, 1.0)))))))), mat2x4(1.0), vec3(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(2068.1671)), float(1.0), bool(true)))))))), _GLF_struct_34(_GLF_struct_31(mat2(1.0), ivec4(_GLF_IDENTITY(1, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(1, (1) / 1), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1, (1) / 1), min(_GLF_IDENTITY(1, _GLF_IDENTITY((1) / 1, (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), bool(bvec4(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, true, false))) ? (1) / 1 : _GLF_FUZZED(93124)))), _GLF_IDENTITY(1, (1) / 1))), int(int(_GLF_IDENTITY(1, (1) / 1))))) / 1)) - 0, ((_GLF_IDENTITY(_GLF_IDENTITY(1, _GLF_IDENTITY((1) / 1, ~ (_GLF_IDENTITY(~ ((1) / 1), (~ ((1) / 1)) - 0)))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1, (1) / 1), min(_GLF_IDENTITY(1, _GLF_IDENTITY((1) / 1, _GLF_IDENTITY((_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? (1) / 1 : _GLF_FUZZED(93124)), ((_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? (1) / 1 : _GLF_FUZZED(93124))) / 1))), _GLF_IDENTITY(1, (1) / 1))), int(int(_GLF_IDENTITY(1, (1) / 1))))) / 1)) - _GLF_IDENTITY(0, min(0, 0))) | 0))), vec2(1.0), mat3x2(1.0)), _GLF_struct_32(bvec2(true), uvec2(1u), _GLF_IDENTITY(1, min(1, 1)), _GLF_IDENTITY(uvec4(1u), uvec4(0u, 0u, 0u, 0u) ^ _GLF_IDENTITY((uvec4(1u)), ((uvec4(1u))) | (_GLF_IDENTITY((uvec4(1u)), ((uvec4(1u))) << uvec4(0u, 0u, 0u, 0u))))), mat3x4(1.0), vec3(1.0)), _GLF_struct_33(vec4(1.0), vec3(1.0), bvec4(_GLF_IDENTITY(true, ! (! (true)))), mat4x2(1.0), uvec2(1u), mat2x4(1.0), 1u)), mat3(1.0), _GLF_struct_41(_GLF_struct_35(_GLF_IDENTITY(true, (true) && true), ivec2(_GLF_IDENTITY(1, (1) + 0)), mat4x2(1.0), mat3x4(1.0)), _GLF_struct_36(mat4x2(1.0), _GLF_IDENTITY(uvec4(1u), (uvec4(1u)) | (uvec4(1u))), _GLF_IDENTITY(vec2(1.0), (vec2(1.0)) / vec2(1.0, 1.0)), bvec3(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), false || (! (true))))))), _GLF_struct_37(vec3(1.0), mat4x3(_GLF_IDENTITY(_GLF_IDENTITY(1.0, _GLF_IDENTITY(float(mat3(1.0, 0.0, 1.0, 1.0, cos(0.0), 1.0, log(1.0), _GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, float(mat3x4(1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0)))) + 0.0), 0.0)), min(_GLF_IDENTITY(float(mat3(1.0, 0.0, 1.0, 1.0, cos(_GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-1.9))), 0.0))), 1.0, log(1.0), _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(7.7) : 1.0)), 0.0)), (_GLF_IDENTITY(float(mat3(1.0, 0.0, 1.0, 1.0, cos(0.0), 1.0, log(1.0), 1.0, 0.0)), float(float(_GLF_IDENTITY(float(mat3(1.0, 0.0, 1.0, 1.0, cos(0.0), 1.0, log(1.0), 1.0, 0.0)), float(vec4(float(mat3(1.0, 0.0, 1.0, 1.0, cos(0.0), 1.0, log(1.0), _GLF_IDENTITY(1.0, (1.0) * 1.0), 0.0)), 0.0, 0.0, 1.0))))))) - 0.0), _GLF_IDENTITY(float(mat3(1.0, 0.0, 1.0, 1.0, cos(0.0), 1.0, log(1.0), 1.0, 0.0)), (float(mat3(1.0, 0.0, 1.0, 1.0, cos(0.0), 1.0, log(1.0), 1.0, 0.0))) / 1.0)))), (_GLF_IDENTITY(1.0, _GLF_IDENTITY(float(mat3(1.0, 0.0, 1.0, 1.0, cos(0.0), 1.0, log(_GLF_IDENTITY(1.0, _GLF_IDENTITY((_GLF_IDENTITY(1.0, 0.0 + (1.0))) + _GLF_IDENTITY(0.0, min(0.0, 0.0)), mix(_GLF_IDENTITY(float(_GLF_IDENTITY((_GLF_IDENTITY(1.0, 0.0 + (1.0))), (true ? (_GLF_IDENTITY(1.0, 0.0 + (1.0))) : _GLF_FUZZED(62.69))) + 0.0), min(float(_GLF_IDENTITY((_GLF_IDENTITY(1.0, 0.0 + (1.0))), (true ? (_GLF_IDENTITY(1.0, 0.0 + (1.0))) : _GLF_FUZZED(62.69))) + 0.0), float(_GLF_IDENTITY((_GLF_IDENTITY(1.0, 0.0 + (1.0))), (true ? (_GLF_IDENTITY(1.0, 0.0 + (1.0))) : _GLF_FUZZED(62.69))) + 0.0))), float(_GLF_FUZZED((76.26))), bool(false))))), 1.0, 0.0)), min(float(mat3(1.0, 0.0, 1.0, 1.0, _GLF_IDENTITY(cos(0.0), _GLF_IDENTITY(mix(float(_GLF_FUZZED(8.4)), float(cos(0.0)), bool(_GLF_IDENTITY(true, ! (! (true))))), mix(float(_GLF_FUZZED(-2.9)), float(_GLF_IDENTITY(mix(float(_GLF_FUZZED(8.4)), float(cos(0.0)), bool(_GLF_IDENTITY(true, ! (! (true))))), (_GLF_IDENTITY(mix(float(_GLF_FUZZED(8.4)), float(cos(0.0)), bool(_GLF_IDENTITY(true, ! (! (true))))), max(mix(float(_GLF_FUZZED(8.4)), float(cos(0.0)), bool(_GLF_IDENTITY(true, ! (! (true))))), mix(float(_GLF_FUZZED(8.4)), float(cos(0.0)), bool(_GLF_IDENTITY(true, ! (! (true)))))))) - 0.0)), bool(true)))), 1.0, log(1.0), _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(49.81)), float(_GLF_IDENTITY(1.0, _GLF_IDENTITY(float(float(1.0)), mix(float(_GLF_FUZZED(4.7)), float(float(float(1.0))), bool(_GLF_IDENTITY(true, false || (true))))))), bool(true))), 0.0)), _GLF_IDENTITY(float(mat3(1.0, 0.0, 1.0, 1.0, cos(0.0), 1.0, log(1.0), 1.0, 0.0)), (float(mat3(1.0, 0.0, 1.0, 1.0, cos(0.0), 1.0, log(1.0), 1.0, 0.0))) / 1.0))))) * 1.0)), uvec4(1u), 1u, ivec4(1)), _GLF_struct_38(1u, vec2(1.0), mat2(1.0)), _GLF_struct_39(mat4x3(1.0), bvec3(true), uvec3(1u), 1u, mat3x2(1.0), mat3x2(1.0), mat2(1.0)), _GLF_struct_40(_GLF_IDENTITY(ivec4(1), max(ivec4(1), ivec4(_GLF_IDENTITY(1, ~ (~ (1)))))), ivec4(1), uvec3(1u), uvec3(1u), mat4x2(1.0), ivec2(1), ivec2(1)), mat4(1.0)));
 uint workgroup_id = gl_WorkGroupID.x;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, bool(bvec3(false, true, true)))), ! (! (! (_GLF_IDENTITY(false, bool(bvec3(false, true, true)))))))))))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec3(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, false)))))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
    barrier();
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   barrier();
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       return;
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         return;
        }
       barrier();
      }
    }
   barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, false)), ! (_GLF_IDENTITY(! (bool(bvec2(false, false))), (! (bool(bvec2(false, false)))) || false))))))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
      }
     return;
    }
  }
 uint workgroup_base = _GLF_struct_replacement_42.workgroup_size * workgroup_id;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
      }
     barrier();
    }
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(560.132)), float(injectionSwitch.x), bool(_GLF_IDENTITY(true, ! (! (true)))))) > _GLF_IDENTITY(injectionSwitch, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch : _GLF_FUZZED(vec2(-99.70, 0.6)))).y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, true, true, false)), bool(bool(bool(bvec4(false, _GLF_IDENTITY(true, bool(bvec3(true, false, false))), true, false))))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
        return;
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))), true && (_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false))))))), ! (! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))), true && (_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))))))))))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)) + (injectionSwitch)).y))))
      {
       if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(728.926)))))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(728.926))))))) || false))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         barrier();
         if(_GLF_DEAD(false))
          return;
        }
       return;
      }
     barrier();
    }
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         barrier();
        }
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(false))
          return;
         barrier();
        }
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       barrier();
       if(_GLF_DEAD(false))
        return;
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) || _GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(bvec2(! (false), true)))))))), (_GLF_IDENTITY(injectionSwitch.x, exp(0.0) * (injectionSwitch.x)) > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   barrier();
  }
 uint virtual_gid = _GLF_IDENTITY(workgroup_base, (_GLF_IDENTITY(workgroup_base, (workgroup_base) >> 0u)) << _GLF_IDENTITY(0u, min(0u, _GLF_IDENTITY(0u, (true ? 0u : _GLF_FUZZED(workgroup_base)))))) + _GLF_IDENTITY(_GLF_struct_replacement_22.subgroup_id * _GLF_IDENTITY(_GLF_IDENTITY(_GLF_struct_replacement_15._f5.subgroup_size, _GLF_IDENTITY(uint(_GLF_ONE(1.0, injectionSwitch.y)) * (_GLF_struct_replacement_15._f5.subgroup_size), uint(uint(uint(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), max(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y)))) * (_GLF_struct_replacement_15._f5.subgroup_size))))), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_struct_replacement_15._f5.subgroup_size, uint(_GLF_ONE(1.0, injectionSwitch.y)) * (_GLF_struct_replacement_15._f5.subgroup_size))), ((_GLF_IDENTITY(_GLF_struct_replacement_15._f5.subgroup_size, uint(_GLF_ONE(1.0, injectionSwitch.y)) * (_GLF_struct_replacement_15._f5.subgroup_size)))) << 0u) | 0u), _GLF_IDENTITY(0u, 0u ^ (0u)) | (_GLF_IDENTITY(_GLF_struct_replacement_22.subgroup_id * _GLF_struct_replacement_15._f5.subgroup_size, min(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_struct_replacement_22.subgroup_id, uint(uvec4(_GLF_struct_replacement_22.subgroup_id, 1u, 1u, 0u))) * _GLF_struct_replacement_15._f5.subgroup_size, (_GLF_IDENTITY(_GLF_struct_replacement_22.subgroup_id, uint(uvec4(_GLF_struct_replacement_22.subgroup_id, 1u, 1u, 0u))) * _GLF_struct_replacement_15._f5.subgroup_size) >> 0u), _GLF_struct_replacement_22.subgroup_id * _GLF_struct_replacement_15._f5.subgroup_size)))) + subgroup_local_id;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   return;
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || _GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), false || (_GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), bool(bvec3(((injectionSwitch.x > injectionSwitch.y)), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))))))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)).y)))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)).x > injectionSwitch.y))))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))), true, false))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         return;
        }
       barrier();
      }
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, false, true)))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) || false)) || false)))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (_GLF_IDENTITY(! (false), ! (! (! (false))))) || false))), bool(bvec4(false, false, false, true)))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-25.53)), vec2(_GLF_FUZZED(-0.7), (injectionSwitch)[1]), bvec2(false, true))).x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), float(mat2x3(injectionSwitch.y, 0.0, 1.0, 0.0, 1.0, 1.0)))))))))))
    return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   barrier();
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  barrier();
 uint next_virtual_gid = workgroup_base + _GLF_struct_replacement_22.subgroup_id * _GLF_struct_replacement_15._f5.subgroup_size + (_GLF_IDENTITY((subgroup_local_id + 1), max((_GLF_IDENTITY(subgroup_local_id + 1, 0u | (subgroup_local_id + 1))), (subgroup_local_id + 1))) % _GLF_struct_replacement_15._f5.subgroup_size);
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, true, false)))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
      return;
     barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       barrier();
      }
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (true ? _GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), _GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)))) : _GLF_FUZZED(-78.87))), (_GLF_TRUE(_GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, bool(bvec2(true, true)))))))), (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - length(vec4(0.0, 0.0, 0.0, 0.0))))) ? injectionSwitch.x : _GLF_FUZZED(46.92))) > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(float(174934u))), float(injectionSwitch.y), bool(true)))))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, true, false, false)), _GLF_IDENTITY(bool(bvec4(bool(bvec4(false, true, false, false)), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)), false || (bool(bvec4(bool(bvec4(false, true, false, false)), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))))))))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       return;
       if(_GLF_DEAD(false))
        return;
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     if(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), (! (_GLF_DEAD(false))) || false))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, true)))))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
       if(_GLF_DEAD(false))
        return;
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
      return;
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false))))
        return;
       barrier();
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, bool(bvec2(false, true))), false, false, true)))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! (false))))))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(-57.99, -583.947))))) / vec2(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y))).y))))
      barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false)))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     return;
     if(_GLF_DEAD(false))
      return;
    }
   return;
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 atomicStore(buf[virtual_gid], uint(1), _GLF_IDENTITY(4, (_GLF_IDENTITY(4, _GLF_IDENTITY(0, 0 ^ (0)) | (4))) * 1), 64, _GLF_IDENTITY(4, max(4, 4)));
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bool(false))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))))), true && (_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, bool(bvec3(false, true, false)))))), (injectionSwitch.x > injectionSwitch.y))))))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_IDENTITY(_GLF_FUZZED(-7686.2975), float(mat2x3(_GLF_FUZZED(-7686.2975), 0.0, exp(0.0), 0.0, 0.0, 0.0)))), bool(false)))))))), _GLF_IDENTITY(bool(bvec3(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_IDENTITY(_GLF_FUZZED(-7686.2975), float(mat2x3(_GLF_FUZZED(-7686.2975), 0.0, exp(0.0), 0.0, 0.0, 0.0)))), bool(false)))))))), true, false)), true && (bool(bvec3(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_IDENTITY(_GLF_FUZZED(-7686.2975), float(mat2x3(_GLF_FUZZED(-7686.2975), 0.0, exp(0.0), 0.0, 0.0, 0.0)))), bool(false)))))))), true, false))))), bool(bvec4(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED((mat2(5662.2385, 2.2, 65.28, 8.5) + mat2(-517.717, 4.4, -9.5, 1.4))) : mat2(1.0))) * (injectionSwitch))), vec2(mat3(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED((mat2(5662.2385, 2.2, 65.28, 8.5) + mat2(-517.717, 4.4, -9.5, 1.4))) : mat2(1.0))) * (injectionSwitch))), min((_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED((mat2(5662.2385, 2.2, 65.28, 8.5) + mat2(-517.717, 4.4, -9.5, 1.4))) : mat2(1.0))) * (injectionSwitch))), _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED((mat2(5662.2385, 2.2, 65.28, 8.5) + mat2(-517.717, 4.4, -9.5, 1.4))) : mat2(1.0))) * (injectionSwitch))), max((_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED((mat2(5662.2385, 2.2, 65.28, 8.5) + mat2(-517.717, 4.4, -9.5, 1.4))) : mat2(1.0))) * (injectionSwitch))), (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED((mat2(5662.2385, 2.2, 65.28, 8.5) + mat2(-517.717, 4.4, -9.5, 1.4))) : mat2(1.0))) * (injectionSwitch))))))), 1.0, log(1.0), 0.0, 0.0, 0.0, 0.0, 1.0)))).x > injectionSwitch.y))), false, false, true))))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   barrier();
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))), bool(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))), false))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), (false) && true)))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   return;
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), bool(bvec4(! (_GLF_DEAD(false)), false, true, true))))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0)))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x)) > injectionSwitch.y), false || ((_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x)) > injectionSwitch.y))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     return;
    }
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bool(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(5740.2770)), float(injectionSwitch.y), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))
        return;
       return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   return;
   if(_GLF_DEAD(false))
    return;
  }
 atomicStore(buf[_GLF_IDENTITY(next_virtual_gid, (next_virtual_gid) ^ (0u >> _GLF_IDENTITY(uint(0u), uint(0u))))], uint(2), 4, _GLF_IDENTITY(64, (64) / 1), _GLF_IDENTITY(4, _GLF_IDENTITY((4) << 0, 0 ^ (_GLF_IDENTITY((4) << 0, 0 + ((4) << 0))))));
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) && true)))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     barrier();
    }
   return;
  }
}
