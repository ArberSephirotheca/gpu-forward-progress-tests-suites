#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_DEAD(false), true))), _GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, (true) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))), true)), ! (! (bool(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_DEAD(false), true))), _GLF_IDENTITY(_GLF_IDENTITY(true, false || (true)), ! (! (_GLF_IDENTITY(true, false || (true))))), true)))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), ! (! (! (! (false))))))), ! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(! (! _GLF_IDENTITY((false), (_GLF_IDENTITY((false), bool(bvec4((_GLF_IDENTITY(false, true && (false))), false, false, true)))) && true)), (_GLF_IDENTITY(! (! _GLF_IDENTITY((false), (_GLF_IDENTITY((false), bool(bvec4((_GLF_IDENTITY(false, true && (false))), false, false, true)))) && true)), ! (! (! (! _GLF_IDENTITY((false), (_GLF_IDENTITY((false), bool(bvec4((_GLF_IDENTITY(false, true && (false))), false, false, true)))) && true)))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), ! (! (_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! (! (false)))), _GLF_IDENTITY((! (_GLF_IDENTITY(false, ! (! (false))))) || false, bool(bvec4((! (_GLF_IDENTITY(false, ! (! (false))))) || false, true, true, true))))))))))))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(mat2x3(injectionSwitch, 1.0, 0.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(determinant(mat4(1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)))), 0.0, 1.0, 1.0)), 0.0)), dot(vec2(1.0, 0.0), vec2(determinant(mat4(1.0, 0.0, 0.0, _GLF_IDENTITY(0.0, float(mat2(0.0, 1.0, 0.0, 1.0))), _GLF_IDENTITY(0.0, float(mat4x2(_GLF_IDENTITY(0.0, (0.0) * 1.0), 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x)))), 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0)), 0.0))), exp(0.0)))).x, (_GLF_IDENTITY(injectionSwitch, vec2(mat2x3(injectionSwitch, 1.0, 0.0, _GLF_IDENTITY(_GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(determinant(mat4(1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0)), 0.0)), dot(vec2(1.0, 0.0), vec2(determinant(mat4(1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0)), 0.0))), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(7.4) : _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(determinant(mat4(1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0)), 0.0)), dot(vec2(1.0, _GLF_IDENTITY(0.0, _GLF_IDENTITY(float(mat4x3(_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(5.8))), 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0)), (false ? _GLF_FUZZED(8.5) : float(mat4x3(_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(5.8))), 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0)))))), vec2(determinant(mat4(1.0, 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, (1.0) + 0.0)) + _GLF_IDENTITY(dot(vec3(0.0, _GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0)), dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0))), 0.0), vec3(1.0, 0.0, 1.0)), dot(vec3(0.0, _GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0)), dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0))), 0.0), vec3(1.0, 0.0, 1.0)))), 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0)), 0.0))))), exp(0.0)))).x) / exp(0.0)) > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
    barrier();
   barrier();
  }
 uint subgroup_id = gl_SubgroupID;
 uint subgroup_size = gl_SubgroupSize;
 uint subgroup_local_id = gl_SubgroupInvocationID;
 uint num_workgroup = _GLF_IDENTITY(gl_NumWorkGroups, clamp(_GLF_IDENTITY(gl_NumWorkGroups, uvec3(0u, 0u, 0u) | (gl_NumWorkGroups)), gl_NumWorkGroups, gl_NumWorkGroups)).x;
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, false)))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(vec3(injectionSwitch, 1.0))))).y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(min(injectionSwitch.x, injectionSwitch.x), mix(float(_GLF_IDENTITY(min(injectionSwitch.x, injectionSwitch.x), clamp(min(injectionSwitch.x, injectionSwitch.x), min(injectionSwitch.x, injectionSwitch.x), min(injectionSwitch.x, injectionSwitch.x)))), float(_GLF_FUZZED(-7792.6224)), bool(false)))) > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, false || (false)), true, true)))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), _GLF_IDENTITY(false, (_GLF_IDENTITY(false, false || (false))) && true) || (_GLF_IDENTITY(false, _GLF_IDENTITY((false) && true, (_GLF_IDENTITY((false) && true, ! (! ((false) && true)))) || false))))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y))))), bool(bvec4(! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), bool(_GLF_IDENTITY(bool(! ((injectionSwitch.x > injectionSwitch.y))), (bool(! ((injectionSwitch.x > injectionSwitch.y)))) && true)))))), true, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false), bool(bvec3(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0) > _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(true ? injectionSwitch : _GLF_FUZZED(injectionSwitch), mix(vec2((true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))[0], _GLF_FUZZED(vec4(-9.2, -3066.0833, -5874.9570, -44.81).x)), vec2(_GLF_FUZZED(55.89), (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))[1]), bvec2(false, true))))).y), bool(bvec4((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)).x > injectionSwitch.y), _GLF_IDENTITY(true, _GLF_IDENTITY(bool(bool(true)), ! (! (bool(bool(true)))))), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), _GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) && true), true)))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y))))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, (false) && true)))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint workgroup_size = _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) - (uvec3(0u, 0u, 0u) >> _GLF_IDENTITY(_GLF_IDENTITY(uvec3(5u), (uvec3(5u)) | (uvec3(0u, 0u, 0u) & uvec3(180545u, 117817u, 161194u))), uvec3(5u)))), ~ _GLF_IDENTITY((~ (_GLF_IDENTITY(gl_WorkGroupSize, ~ _GLF_IDENTITY((~ (_GLF_IDENTITY(gl_WorkGroupSize, (false ? _GLF_FUZZED(uvec3(3092u, 48658u, 87897u)) : gl_WorkGroupSize)))), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(uvec3(194305u, 133322u, 125564u)) : _GLF_IDENTITY((~ (_GLF_IDENTITY(gl_WorkGroupSize, (false ? _GLF_FUZZED(uvec3(3092u, 48658u, 87897u)) : gl_WorkGroupSize)))), clamp((~ (_GLF_IDENTITY(gl_WorkGroupSize, (false ? _GLF_FUZZED(uvec3(3092u, 48658u, 87897u)) : gl_WorkGroupSize)))), _GLF_IDENTITY((~ (_GLF_IDENTITY(gl_WorkGroupSize, (false ? _GLF_FUZZED(uvec3(3092u, 48658u, 87897u)) : gl_WorkGroupSize)))), max((~ (_GLF_IDENTITY(gl_WorkGroupSize, (false ? _GLF_FUZZED(uvec3(3092u, 48658u, 87897u)) : gl_WorkGroupSize)))), (~ (_GLF_IDENTITY(gl_WorkGroupSize, (false ? _GLF_FUZZED(uvec3(3092u, 48658u, 87897u)) : gl_WorkGroupSize)))))), (~ (_GLF_IDENTITY(gl_WorkGroupSize, (false ? _GLF_FUZZED(uvec3(3092u, 48658u, 87897u)) : gl_WorkGroupSize))))))))))), (_GLF_IDENTITY((~ (_GLF_IDENTITY(gl_WorkGroupSize, ~ (_GLF_IDENTITY(~ (gl_WorkGroupSize), uvec3(uvec4(~ (gl_WorkGroupSize), 0u))))))), max((~ (_GLF_IDENTITY(gl_WorkGroupSize, ~ (_GLF_IDENTITY(~ (gl_WorkGroupSize), _GLF_IDENTITY((~ (gl_WorkGroupSize)) / uvec3(1u, 1u, 1u), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY((~ (gl_WorkGroupSize)) / uvec3(1u, 1u, 1u), ((~ (gl_WorkGroupSize)) / uvec3(1u, 1u, 1u)) ^ uvec3(0u, 0u, 0u)) : _GLF_FUZZED(uvec3(28692u, 106073u, 69503u))))))))), _GLF_IDENTITY((~ (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, ~ (~ (gl_WorkGroupSize))), min(_GLF_IDENTITY(gl_WorkGroupSize, ~ (~ (gl_WorkGroupSize))), _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, ~ (~ (gl_WorkGroupSize))), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(uvec3(109770u, 168851u, 81982u)) : _GLF_IDENTITY(gl_WorkGroupSize, ~ (~ (gl_WorkGroupSize))))))))), ((~ (_GLF_IDENTITY(gl_WorkGroupSize, ~ (~ (gl_WorkGroupSize)))))) >> uvec3(0u, 0u, 0u))))) - uvec3(0u, 0u, 0u))).x;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, _GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec2((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(true, true && (true)))))))), bool(bool(bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(_GLF_FALSE(_GLF_IDENTITY(false, false || (false)), (injectionSwitch.x > injectionSwitch.y)), true, true), bvec3(bvec3(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, true))))), ! (_GLF_IDENTITY(! (bool(_GLF_IDENTITY(bvec3(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y)))), true, _GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec2(true, false)), _GLF_IDENTITY(! (_GLF_IDENTITY(! (bool(bvec2(true, false))), true && _GLF_IDENTITY((! (bool(bvec2(true, false)))), ((! (bool(bvec2(true, false))))) || false))), false || (! (_GLF_IDENTITY(! (bool(bvec2(true, false))), true && _GLF_IDENTITY(_GLF_IDENTITY((! (bool(bvec2(true, false)))), false || (_GLF_IDENTITY((! (bool(bvec2(true, false)))), true && ((! (bool(bvec2(true, false)))))))), ((! (bool(bvec2(true, false))))) || false)))))))), bvec3(bvec3(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, _GLF_IDENTITY(true, false || (true)))))))), (! (bool(_GLF_IDENTITY(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, true), bvec3(bvec3(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, _GLF_IDENTITY(true, ! (! (true)))))))))) || false))))))
  barrier();
 uint workgroup_id = gl_WorkGroupID.x;
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY((false) || false, bool(bvec4((false) || false, true, _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ! (! ((injectionSwitch.x < injectionSwitch.y))))), false))))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y))), ((injectionSwitch.x > injectionSwitch.y)) || false), (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mix(vec2(_GLF_FUZZED(8588.3016), _GLF_FUZZED(-4.2)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true)), min(_GLF_IDENTITY(mix(vec2(_GLF_FUZZED(8588.3016), _GLF_FUZZED(-4.2)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true)), vec2(1.0, 1.0) * (mix(vec2(_GLF_FUZZED(8588.3016), _GLF_FUZZED(-4.2)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true)))), mix(vec2(_GLF_FUZZED(8588.3016), _GLF_FUZZED(-4.2)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))))).x > injectionSwitch.y), ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bvec3(injectionSwitch.x > injectionSwitch.y, true, true)), bool(bool(_GLF_IDENTITY(bool(bvec3(injectionSwitch.x > injectionSwitch.y, true, true)), ! (! (bool(bvec3(injectionSwitch.x > injectionSwitch.y, true, true))))))))), false, false, false))))) || _GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (false)))))))) || false))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * _GLF_IDENTITY(dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(0.0, 1.0, 0.0, 0.0)), dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(0.0, 1.0, 0.0, 0.0))))))))
  barrier();
 uint workgroup_base = _GLF_IDENTITY(workgroup_size, ~ (~ (workgroup_size))) * _GLF_IDENTITY(workgroup_id, (workgroup_id) + 0u);
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), true && (_GLF_IDENTITY(! (false), true && (! (false)))))))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   barrier();
  }
 uint virtual_gid = _GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size + subgroup_local_id, uint(_GLF_IDENTITY(uint(_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size + subgroup_local_id, ~ (~ _GLF_IDENTITY((workgroup_base + _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, min(subgroup_id, subgroup_id)), _GLF_IDENTITY((subgroup_id) * uint(_GLF_ONE(1.0, injectionSwitch.y)), _GLF_IDENTITY(0u ^ (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (subgroup_id) << (0u >> _GLF_IDENTITY(uint(6u), uint(6u)))), (false ? _GLF_FUZZED(subgroup_id) : subgroup_id))) * uint(_GLF_ONE(1.0, injectionSwitch.y)), ((subgroup_id) * uint(_GLF_ONE(1.0, injectionSwitch.y))) / 1u)), max(_GLF_IDENTITY(0u ^ _GLF_IDENTITY((_GLF_IDENTITY((subgroup_id) * _GLF_IDENTITY(uint(_GLF_ONE(1.0, injectionSwitch.y)), (uint(_GLF_ONE(1.0, injectionSwitch.y))) + 0u), (_GLF_IDENTITY((subgroup_id), uint(uvec2((subgroup_id), (0u | 0u)))) * uint(_GLF_ONE(1.0, injectionSwitch.y))) / 1u)), clamp(_GLF_IDENTITY((_GLF_IDENTITY((subgroup_id) * _GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_ONE(1.0, injectionSwitch.y)), (uint(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), mix(float(_GLF_FUZZED(765.168)), float(_GLF_ONE(1.0, injectionSwitch.y)), bool(true))))) + 0u), min(_GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_ONE(1.0, injectionSwitch.y)), (uint(_GLF_ONE(1.0, injectionSwitch.y))) + 0u), max(_GLF_IDENTITY(uint(_GLF_ONE(1.0, injectionSwitch.y)), (uint(_GLF_ONE(1.0, injectionSwitch.y))) + 0u), _GLF_IDENTITY(uint(_GLF_ONE(1.0, injectionSwitch.y)), (uint(_GLF_ONE(1.0, injectionSwitch.y))) + 0u))), _GLF_IDENTITY(uint(_GLF_ONE(1.0, injectionSwitch.y)), (uint(_GLF_ONE(1.0, injectionSwitch.y))) + 0u))), (_GLF_IDENTITY((subgroup_id), uint(uvec2((subgroup_id), (0u | 0u)))) * uint(_GLF_ONE(1.0, injectionSwitch.y))) / 1u)), ((_GLF_IDENTITY((subgroup_id) * _GLF_IDENTITY(uint(_GLF_ONE(1.0, injectionSwitch.y)), (uint(_GLF_ONE(1.0, injectionSwitch.y))) + 0u), (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_id, uint(uvec3(subgroup_id, 1u, ((0u >> _GLF_IDENTITY(uint(6u), uint(6u))) | 0u))))), uint(uvec2((subgroup_id), (0u | 0u)))) * uint(_GLF_ONE(1.0, injectionSwitch.y))) / 1u))) | 0u), (_GLF_IDENTITY((subgroup_id) * _GLF_IDENTITY(uint(_GLF_ONE(1.0, injectionSwitch.y)), (uint(_GLF_ONE(1.0, injectionSwitch.y))) + 0u), (_GLF_IDENTITY((subgroup_id), uint(uvec2((_GLF_IDENTITY(subgroup_id, max(subgroup_id, subgroup_id))), (0u | 0u)))) * uint(_GLF_ONE(1.0, injectionSwitch.y))) / 1u)), (_GLF_IDENTITY(_GLF_IDENTITY((subgroup_id) * _GLF_IDENTITY(uint(_GLF_ONE(1.0, injectionSwitch.y)), (uint(_GLF_ONE(1.0, injectionSwitch.y))) + 0u), (_GLF_IDENTITY((subgroup_id) * _GLF_IDENTITY(uint(_GLF_ONE(1.0, injectionSwitch.y)), (uint(_GLF_ONE(1.0, injectionSwitch.y))) + 0u), min(_GLF_IDENTITY((subgroup_id) * _GLF_IDENTITY(uint(_GLF_ONE(1.0, injectionSwitch.y)), (uint(_GLF_ONE(1.0, injectionSwitch.y))) + 0u), ((subgroup_id) * _GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_ONE(1.0, injectionSwitch.y)), 0u | (uint(_GLF_ONE(1.0, injectionSwitch.y)))), (uint(_GLF_ONE(1.0, injectionSwitch.y))) + 0u)) << 0u), (subgroup_id) * _GLF_IDENTITY(uint(_GLF_ONE(1.0, injectionSwitch.y)), (uint(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0)))))) + 0u)))) / 1u), (_GLF_IDENTITY((subgroup_id), uint(uvec2((subgroup_id), (0u | 0u)))) * uint(_GLF_ONE(1.0, injectionSwitch.y))) / 1u)))), ~ (~ (0u ^ (_GLF_IDENTITY(_GLF_IDENTITY((subgroup_id) * uint(_GLF_ONE(1.0, injectionSwitch.y)), ((subgroup_id) * uint(_GLF_ONE(1.0, injectionSwitch.y))) / 1u), 1u * (_GLF_IDENTITY(_GLF_IDENTITY((subgroup_id) * uint(_GLF_ONE(1.0, injectionSwitch.y)), ((subgroup_id) * uint(_GLF_ONE(1.0, injectionSwitch.y))) / 1u), 0u + (_GLF_IDENTITY((subgroup_id) * uint(_GLF_ONE(1.0, injectionSwitch.y)), ((subgroup_id) * uint(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), 0.0 + (_GLF_ONE(1.0, injectionSwitch.y))))) / 1u))))))))), 0u ^ (_GLF_IDENTITY((subgroup_id) * uint(_GLF_ONE(1.0, injectionSwitch.y)), _GLF_IDENTITY(((subgroup_id) * uint(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], float(float(injectionSwitch[0]))), injectionSwitch[1])).y))) / 1u, (((subgroup_id) * uint(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], float(float(injectionSwitch[0]))), injectionSwitch[1])).y))) / 1u) / 1u))))))) * subgroup_size + subgroup_local_id), ((workgroup_base + _GLF_IDENTITY(subgroup_id, (subgroup_id) * uint(_GLF_ONE(1.0, injectionSwitch.y))) * _GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size)) + subgroup_local_id)) >> 0u)))), min(_GLF_IDENTITY(uint(_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size + subgroup_local_id, ~ (~ _GLF_IDENTITY((workgroup_base + _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, min(subgroup_id, subgroup_id)), _GLF_IDENTITY((subgroup_id) * uint(_GLF_ONE(1.0, injectionSwitch.y)), _GLF_IDENTITY(0u ^ (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (subgroup_id) << (0u >> _GLF_IDENTITY(uint(6u), uint(6u)))), (false ? _GLF_FUZZED(subgroup_id) : subgroup_id))) * uint(_GLF_ONE(1.0, injectionSwitch.y)), ((subgroup_id) * uint(_GLF_ONE(1.0, injectionSwitch.y))) / 1u)), max(_GLF_IDENTITY(0u ^ _GLF_IDENTITY((_GLF_IDENTITY((subgroup_id) * _GLF_IDENTITY(uint(_GLF_ONE(1.0, injectionSwitch.y)), (uint(_GLF_ONE(1.0, injectionSwitch.y))) + 0u), (_GLF_IDENTITY((subgroup_id), uint(uvec2((subgroup_id), (0u | 0u)))) * uint(_GLF_ONE(1.0, injectionSwitch.y))) / 1u)), clamp(_GLF_IDENTITY((_GLF_IDENTITY((subgroup_id) * _GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_ONE(1.0, injectionSwitch.y)), (uint(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), mix(float(_GLF_FUZZED(765.168)), float(_GLF_ONE(1.0, injectionSwitch.y)), bool(true))))) + 0u), min(_GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_ONE(1.0, injectionSwitch.y)), (uint(_GLF_ONE(1.0, injectionSwitch.y))) + 0u), max(_GLF_IDENTITY(uint(_GLF_ONE(1.0, injectionSwitch.y)), (uint(_GLF_ONE(1.0, injectionSwitch.y))) + 0u), _GLF_IDENTITY(uint(_GLF_ONE(1.0, injectionSwitch.y)), (uint(_GLF_ONE(1.0, injectionSwitch.y))) + 0u))), _GLF_IDENTITY(uint(_GLF_ONE(1.0, injectionSwitch.y)), (uint(_GLF_ONE(1.0, injectionSwitch.y))) + 0u))), (_GLF_IDENTITY((subgroup_id), uint(uvec2((subgroup_id), (0u | 0u)))) * uint(_GLF_ONE(1.0, injectionSwitch.y))) / 1u)), ((_GLF_IDENTITY((subgroup_id) * _GLF_IDENTITY(uint(_GLF_ONE(1.0, injectionSwitch.y)), (uint(_GLF_ONE(1.0, injectionSwitch.y))) + 0u), (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_id, uint(uvec3(subgroup_id, 1u, ((0u >> _GLF_IDENTITY(uint(6u), uint(6u))) | 0u))))), uint(uvec2((subgroup_id), (0u | 0u)))) * uint(_GLF_ONE(1.0, injectionSwitch.y))) / 1u))) | 0u), (_GLF_IDENTITY((subgroup_id) * _GLF_IDENTITY(uint(_GLF_ONE(1.0, injectionSwitch.y)), (uint(_GLF_ONE(1.0, injectionSwitch.y))) + 0u), (_GLF_IDENTITY((subgroup_id), uint(uvec2((_GLF_IDENTITY(subgroup_id, max(subgroup_id, subgroup_id))), (0u | 0u)))) * uint(_GLF_ONE(1.0, injectionSwitch.y))) / 1u)), (_GLF_IDENTITY(_GLF_IDENTITY((subgroup_id) * _GLF_IDENTITY(uint(_GLF_ONE(1.0, injectionSwitch.y)), (uint(_GLF_ONE(1.0, injectionSwitch.y))) + 0u), (_GLF_IDENTITY((subgroup_id) * _GLF_IDENTITY(uint(_GLF_ONE(1.0, injectionSwitch.y)), (uint(_GLF_ONE(1.0, injectionSwitch.y))) + 0u), min(_GLF_IDENTITY((subgroup_id) * _GLF_IDENTITY(uint(_GLF_ONE(1.0, injectionSwitch.y)), (uint(_GLF_ONE(1.0, injectionSwitch.y))) + 0u), ((subgroup_id) * _GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_ONE(1.0, injectionSwitch.y)), 0u | (uint(_GLF_ONE(1.0, injectionSwitch.y)))), (uint(_GLF_ONE(1.0, injectionSwitch.y))) + 0u)) << 0u), (subgroup_id) * _GLF_IDENTITY(uint(_GLF_ONE(1.0, injectionSwitch.y)), (uint(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0)))))) + 0u)))) / 1u), (_GLF_IDENTITY((subgroup_id), uint(uvec2((subgroup_id), (0u | 0u)))) * uint(_GLF_ONE(1.0, injectionSwitch.y))) / 1u)))), ~ (~ (0u ^ (_GLF_IDENTITY(_GLF_IDENTITY((subgroup_id) * uint(_GLF_ONE(1.0, injectionSwitch.y)), ((subgroup_id) * uint(_GLF_ONE(1.0, injectionSwitch.y))) / 1u), 1u * (_GLF_IDENTITY(_GLF_IDENTITY((subgroup_id) * uint(_GLF_ONE(1.0, injectionSwitch.y)), ((subgroup_id) * uint(_GLF_ONE(1.0, injectionSwitch.y))) / 1u), 0u + (_GLF_IDENTITY((subgroup_id) * uint(_GLF_ONE(1.0, injectionSwitch.y)), ((subgroup_id) * uint(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), 0.0 + (_GLF_ONE(1.0, injectionSwitch.y))))) / 1u))))))))), 0u ^ (_GLF_IDENTITY((subgroup_id) * uint(_GLF_ONE(1.0, injectionSwitch.y)), _GLF_IDENTITY(((subgroup_id) * uint(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], float(float(injectionSwitch[0]))), injectionSwitch[1])).y))) / 1u, (((subgroup_id) * uint(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], float(float(injectionSwitch[0]))), injectionSwitch[1])).y))) / 1u) / 1u))))))) * subgroup_size + subgroup_local_id), ((workgroup_base + _GLF_IDENTITY(subgroup_id, (subgroup_id) * uint(_GLF_ONE(1.0, injectionSwitch.y))) * _GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size)) + subgroup_local_id)) >> 0u)))), max(uint(_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size + subgroup_local_id, ~ (~ _GLF_IDENTITY((workgroup_base + _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, min(subgroup_id, subgroup_id)), _GLF_IDENTITY((subgroup_id) * uint(_GLF_ONE(1.0, injectionSwitch.y)), _GLF_IDENTITY(0u ^ (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (subgroup_id) << (0u >> _GLF_IDENTITY(uint(6u), uint(6u)))), (false ? _GLF_FUZZED(subgroup_id) : subgroup_id))) * uint(_GLF_ONE(1.0, injectionSwitch.y)), ((subgroup_id) * uint(_GLF_ONE(1.0, injectionSwitch.y))) / 1u)), max(_GLF_IDENTITY(0u ^ _GLF_IDENTITY((_GLF_IDENTITY((subgroup_id) * _GLF_IDENTITY(uint(_GLF_ONE(1.0, injectionSwitch.y)), (uint(_GLF_ONE(1.0, injectionSwitch.y))) + 0u), (_GLF_IDENTITY((subgroup_id), uint(uvec2((subgroup_id), (0u | 0u)))) * uint(_GLF_ONE(1.0, injectionSwitch.y))) / 1u)), clamp(_GLF_IDENTITY((_GLF_IDENTITY((subgroup_id) * _GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_ONE(1.0, injectionSwitch.y)), (uint(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), mix(float(_GLF_FUZZED(765.168)), float(_GLF_ONE(1.0, injectionSwitch.y)), bool(true))))) + 0u), min(_GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_ONE(1.0, injectionSwitch.y)), (uint(_GLF_ONE(1.0, injectionSwitch.y))) + 0u), max(_GLF_IDENTITY(uint(_GLF_ONE(1.0, injectionSwitch.y)), (uint(_GLF_ONE(1.0, injectionSwitch.y))) + 0u), _GLF_IDENTITY(uint(_GLF_ONE(1.0, injectionSwitch.y)), (uint(_GLF_ONE(1.0, injectionSwitch.y))) + 0u))), _GLF_IDENTITY(uint(_GLF_ONE(1.0, injectionSwitch.y)), (uint(_GLF_ONE(1.0, injectionSwitch.y))) + 0u))), (_GLF_IDENTITY((subgroup_id), uint(uvec2((subgroup_id), (0u | 0u)))) * uint(_GLF_ONE(1.0, injectionSwitch.y))) / 1u)), ((_GLF_IDENTITY((subgroup_id) * _GLF_IDENTITY(uint(_GLF_ONE(1.0, injectionSwitch.y)), (uint(_GLF_ONE(1.0, injectionSwitch.y))) + 0u), (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_id, uint(uvec3(subgroup_id, 1u, ((0u >> _GLF_IDENTITY(uint(6u), uint(6u))) | 0u))))), uint(uvec2((subgroup_id), (0u | 0u)))) * uint(_GLF_ONE(1.0, injectionSwitch.y))) / 1u))) | 0u), (_GLF_IDENTITY((subgroup_id) * _GLF_IDENTITY(uint(_GLF_ONE(1.0, injectionSwitch.y)), (uint(_GLF_ONE(1.0, injectionSwitch.y))) + 0u), (_GLF_IDENTITY((subgroup_id), uint(uvec2((_GLF_IDENTITY(subgroup_id, max(subgroup_id, subgroup_id))), (0u | 0u)))) * uint(_GLF_ONE(1.0, injectionSwitch.y))) / 1u)), (_GLF_IDENTITY(_GLF_IDENTITY((subgroup_id) * _GLF_IDENTITY(uint(_GLF_ONE(1.0, injectionSwitch.y)), (uint(_GLF_ONE(1.0, injectionSwitch.y))) + 0u), (_GLF_IDENTITY((subgroup_id) * _GLF_IDENTITY(uint(_GLF_ONE(1.0, injectionSwitch.y)), (uint(_GLF_ONE(1.0, injectionSwitch.y))) + 0u), min(_GLF_IDENTITY((subgroup_id) * _GLF_IDENTITY(uint(_GLF_ONE(1.0, injectionSwitch.y)), (uint(_GLF_ONE(1.0, injectionSwitch.y))) + 0u), ((subgroup_id) * _GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_ONE(1.0, injectionSwitch.y)), 0u | (uint(_GLF_ONE(1.0, injectionSwitch.y)))), (uint(_GLF_ONE(1.0, injectionSwitch.y))) + 0u)) << 0u), (subgroup_id) * _GLF_IDENTITY(uint(_GLF_ONE(1.0, injectionSwitch.y)), (uint(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0)))))) + 0u)))) / 1u), (_GLF_IDENTITY((subgroup_id), uint(uvec2((subgroup_id), (0u | 0u)))) * uint(_GLF_ONE(1.0, injectionSwitch.y))) / 1u)))), ~ (~ (0u ^ (_GLF_IDENTITY(_GLF_IDENTITY((subgroup_id) * uint(_GLF_ONE(1.0, injectionSwitch.y)), ((subgroup_id) * uint(_GLF_ONE(1.0, injectionSwitch.y))) / 1u), 1u * (_GLF_IDENTITY(_GLF_IDENTITY((subgroup_id) * uint(_GLF_ONE(1.0, injectionSwitch.y)), ((subgroup_id) * uint(_GLF_ONE(1.0, injectionSwitch.y))) / 1u), 0u + (_GLF_IDENTITY((subgroup_id) * uint(_GLF_ONE(1.0, injectionSwitch.y)), ((subgroup_id) * uint(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), 0.0 + (_GLF_ONE(1.0, injectionSwitch.y))))) / 1u))))))))), 0u ^ (_GLF_IDENTITY((subgroup_id) * uint(_GLF_ONE(1.0, injectionSwitch.y)), _GLF_IDENTITY(((subgroup_id) * uint(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], float(float(injectionSwitch[0]))), injectionSwitch[1])).y))) / 1u, (((subgroup_id) * uint(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], float(float(injectionSwitch[0]))), injectionSwitch[1])).y))) / 1u) / 1u))))))) * subgroup_size + subgroup_local_id), ((workgroup_base + _GLF_IDENTITY(subgroup_id, (subgroup_id) * uint(_GLF_ONE(1.0, injectionSwitch.y))) * _GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size)) + subgroup_local_id)) >> 0u)))), uint(_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size + subgroup_local_id, ~ (~ _GLF_IDENTITY((workgroup_base + _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, min(subgroup_id, subgroup_id)), _GLF_IDENTITY((subgroup_id) * uint(_GLF_ONE(1.0, injectionSwitch.y)), _GLF_IDENTITY(0u ^ (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (subgroup_id) << (0u >> _GLF_IDENTITY(uint(6u), uint(6u)))), (false ? _GLF_FUZZED(subgroup_id) : subgroup_id))) * uint(_GLF_ONE(1.0, injectionSwitch.y)), ((subgroup_id) * uint(_GLF_ONE(1.0, injectionSwitch.y))) / 1u)), max(_GLF_IDENTITY(0u ^ _GLF_IDENTITY((_GLF_IDENTITY((subgroup_id) * _GLF_IDENTITY(uint(_GLF_ONE(1.0, injectionSwitch.y)), (uint(_GLF_ONE(1.0, injectionSwitch.y))) + 0u), (_GLF_IDENTITY((subgroup_id), uint(uvec2((subgroup_id), (0u | 0u)))) * uint(_GLF_ONE(1.0, injectionSwitch.y))) / 1u)), clamp(_GLF_IDENTITY((_GLF_IDENTITY((subgroup_id) * _GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_ONE(1.0, injectionSwitch.y)), (uint(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), mix(float(_GLF_FUZZED(765.168)), float(_GLF_ONE(1.0, injectionSwitch.y)), bool(true))))) + 0u), min(_GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_ONE(1.0, injectionSwitch.y)), (uint(_GLF_ONE(1.0, injectionSwitch.y))) + 0u), max(_GLF_IDENTITY(uint(_GLF_ONE(1.0, injectionSwitch.y)), (uint(_GLF_ONE(1.0, injectionSwitch.y))) + 0u), _GLF_IDENTITY(uint(_GLF_ONE(1.0, injectionSwitch.y)), (uint(_GLF_ONE(1.0, injectionSwitch.y))) + 0u))), _GLF_IDENTITY(uint(_GLF_ONE(1.0, injectionSwitch.y)), (uint(_GLF_ONE(1.0, injectionSwitch.y))) + 0u))), (_GLF_IDENTITY((subgroup_id), uint(uvec2((subgroup_id), (0u | 0u)))) * uint(_GLF_ONE(1.0, injectionSwitch.y))) / 1u)), ((_GLF_IDENTITY((subgroup_id) * _GLF_IDENTITY(uint(_GLF_ONE(1.0, injectionSwitch.y)), (uint(_GLF_ONE(1.0, injectionSwitch.y))) + 0u), (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_id, uint(uvec3(subgroup_id, 1u, ((0u >> _GLF_IDENTITY(uint(6u), uint(6u))) | 0u))))), uint(uvec2((subgroup_id), (0u | 0u)))) * uint(_GLF_ONE(1.0, injectionSwitch.y))) / 1u))) | 0u), (_GLF_IDENTITY((subgroup_id) * _GLF_IDENTITY(uint(_GLF_ONE(1.0, injectionSwitch.y)), (uint(_GLF_ONE(1.0, injectionSwitch.y))) + 0u), (_GLF_IDENTITY((subgroup_id), uint(uvec2((_GLF_IDENTITY(subgroup_id, max(subgroup_id, subgroup_id))), (0u | 0u)))) * uint(_GLF_ONE(1.0, injectionSwitch.y))) / 1u)), (_GLF_IDENTITY(_GLF_IDENTITY((subgroup_id) * _GLF_IDENTITY(uint(_GLF_ONE(1.0, injectionSwitch.y)), (uint(_GLF_ONE(1.0, injectionSwitch.y))) + 0u), (_GLF_IDENTITY((subgroup_id) * _GLF_IDENTITY(uint(_GLF_ONE(1.0, injectionSwitch.y)), (uint(_GLF_ONE(1.0, injectionSwitch.y))) + 0u), min(_GLF_IDENTITY((subgroup_id) * _GLF_IDENTITY(uint(_GLF_ONE(1.0, injectionSwitch.y)), (uint(_GLF_ONE(1.0, injectionSwitch.y))) + 0u), ((subgroup_id) * _GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_ONE(1.0, injectionSwitch.y)), 0u | (uint(_GLF_ONE(1.0, injectionSwitch.y)))), (uint(_GLF_ONE(1.0, injectionSwitch.y))) + 0u)) << 0u), (subgroup_id) * _GLF_IDENTITY(uint(_GLF_ONE(1.0, injectionSwitch.y)), (uint(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0)))))) + 0u)))) / 1u), (_GLF_IDENTITY((subgroup_id), uint(uvec2((subgroup_id), (0u | 0u)))) * uint(_GLF_ONE(1.0, injectionSwitch.y))) / 1u)))), ~ (~ (0u ^ (_GLF_IDENTITY(_GLF_IDENTITY((subgroup_id) * uint(_GLF_ONE(1.0, injectionSwitch.y)), ((subgroup_id) * uint(_GLF_ONE(1.0, injectionSwitch.y))) / 1u), 1u * (_GLF_IDENTITY(_GLF_IDENTITY((subgroup_id) * uint(_GLF_ONE(1.0, injectionSwitch.y)), ((subgroup_id) * uint(_GLF_ONE(1.0, injectionSwitch.y))) / 1u), 0u + (_GLF_IDENTITY((subgroup_id) * uint(_GLF_ONE(1.0, injectionSwitch.y)), ((subgroup_id) * uint(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), 0.0 + (_GLF_ONE(1.0, injectionSwitch.y))))) / 1u))))))))), 0u ^ (_GLF_IDENTITY((subgroup_id) * uint(_GLF_ONE(1.0, injectionSwitch.y)), _GLF_IDENTITY(((subgroup_id) * uint(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], float(float(injectionSwitch[0]))), injectionSwitch[1])).y))) / 1u, (((subgroup_id) * uint(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], float(float(injectionSwitch[0]))), injectionSwitch[1])).y))) / 1u) / 1u))))))) * subgroup_size + subgroup_local_id), ((workgroup_base + _GLF_IDENTITY(subgroup_id, (subgroup_id) * uint(_GLF_ONE(1.0, injectionSwitch.y))) * _GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size)) + subgroup_local_id)) >> 0u)))))), uint(_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size + subgroup_local_id, ~ (~ _GLF_IDENTITY((workgroup_base + _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, min(subgroup_id, subgroup_id)), _GLF_IDENTITY((subgroup_id) * uint(_GLF_ONE(1.0, injectionSwitch.y)), _GLF_IDENTITY(0u ^ (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (subgroup_id) << (0u >> _GLF_IDENTITY(uint(6u), uint(6u)))), (false ? _GLF_FUZZED(subgroup_id) : subgroup_id))) * uint(_GLF_ONE(1.0, injectionSwitch.y)), ((subgroup_id) * uint(_GLF_ONE(1.0, injectionSwitch.y))) / 1u)), max(_GLF_IDENTITY(0u ^ _GLF_IDENTITY((_GLF_IDENTITY((subgroup_id) * _GLF_IDENTITY(uint(_GLF_ONE(1.0, injectionSwitch.y)), (uint(_GLF_ONE(1.0, injectionSwitch.y))) + 0u), (_GLF_IDENTITY((subgroup_id), uint(uvec2((subgroup_id), (0u | 0u)))) * uint(_GLF_ONE(1.0, injectionSwitch.y))) / 1u)), clamp(_GLF_IDENTITY((_GLF_IDENTITY((subgroup_id) * _GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_ONE(1.0, injectionSwitch.y)), (uint(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), mix(float(_GLF_FUZZED(765.168)), float(_GLF_ONE(1.0, injectionSwitch.y)), bool(true))))) + 0u), min(_GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_ONE(1.0, injectionSwitch.y)), (uint(_GLF_ONE(1.0, injectionSwitch.y))) + 0u), max(_GLF_IDENTITY(uint(_GLF_ONE(1.0, injectionSwitch.y)), (uint(_GLF_ONE(1.0, injectionSwitch.y))) + 0u), _GLF_IDENTITY(uint(_GLF_ONE(1.0, injectionSwitch.y)), (uint(_GLF_ONE(1.0, injectionSwitch.y))) + 0u))), _GLF_IDENTITY(uint(_GLF_ONE(1.0, injectionSwitch.y)), (uint(_GLF_ONE(1.0, injectionSwitch.y))) + 0u))), (_GLF_IDENTITY((subgroup_id), uint(uvec2((subgroup_id), (0u | 0u)))) * uint(_GLF_ONE(1.0, injectionSwitch.y))) / 1u)), ((_GLF_IDENTITY((subgroup_id) * _GLF_IDENTITY(uint(_GLF_ONE(1.0, injectionSwitch.y)), (uint(_GLF_ONE(1.0, injectionSwitch.y))) + 0u), (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_id, uint(uvec3(subgroup_id, 1u, ((0u >> _GLF_IDENTITY(uint(6u), uint(6u))) | 0u))))), uint(uvec2((subgroup_id), (0u | 0u)))) * uint(_GLF_ONE(1.0, injectionSwitch.y))) / 1u))) | 0u), (_GLF_IDENTITY((subgroup_id) * _GLF_IDENTITY(uint(_GLF_ONE(1.0, injectionSwitch.y)), (uint(_GLF_ONE(1.0, injectionSwitch.y))) + 0u), (_GLF_IDENTITY((subgroup_id), uint(uvec2((_GLF_IDENTITY(subgroup_id, max(subgroup_id, subgroup_id))), (0u | 0u)))) * uint(_GLF_ONE(1.0, injectionSwitch.y))) / 1u)), (_GLF_IDENTITY(_GLF_IDENTITY((subgroup_id) * _GLF_IDENTITY(uint(_GLF_ONE(1.0, injectionSwitch.y)), (uint(_GLF_ONE(1.0, injectionSwitch.y))) + 0u), (_GLF_IDENTITY((subgroup_id) * _GLF_IDENTITY(uint(_GLF_ONE(1.0, injectionSwitch.y)), (uint(_GLF_ONE(1.0, injectionSwitch.y))) + 0u), min(_GLF_IDENTITY((subgroup_id) * _GLF_IDENTITY(uint(_GLF_ONE(1.0, injectionSwitch.y)), (uint(_GLF_ONE(1.0, injectionSwitch.y))) + 0u), ((subgroup_id) * _GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_ONE(1.0, injectionSwitch.y)), 0u | (uint(_GLF_ONE(1.0, injectionSwitch.y)))), (uint(_GLF_ONE(1.0, injectionSwitch.y))) + 0u)) << 0u), (subgroup_id) * _GLF_IDENTITY(uint(_GLF_ONE(1.0, injectionSwitch.y)), (uint(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0)))))) + 0u)))) / 1u), (_GLF_IDENTITY((subgroup_id), uint(uvec2((subgroup_id), (0u | 0u)))) * uint(_GLF_ONE(1.0, injectionSwitch.y))) / 1u)))), ~ (~ (0u ^ (_GLF_IDENTITY(_GLF_IDENTITY((subgroup_id) * uint(_GLF_ONE(1.0, injectionSwitch.y)), ((subgroup_id) * uint(_GLF_ONE(1.0, injectionSwitch.y))) / 1u), 1u * (_GLF_IDENTITY(_GLF_IDENTITY((subgroup_id) * uint(_GLF_ONE(1.0, injectionSwitch.y)), ((subgroup_id) * uint(_GLF_ONE(1.0, injectionSwitch.y))) / 1u), 0u + (_GLF_IDENTITY((subgroup_id) * uint(_GLF_ONE(1.0, injectionSwitch.y)), ((subgroup_id) * uint(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), 0.0 + (_GLF_ONE(1.0, injectionSwitch.y))))) / 1u))))))))), 0u ^ (_GLF_IDENTITY((subgroup_id) * uint(_GLF_ONE(1.0, injectionSwitch.y)), _GLF_IDENTITY(((subgroup_id) * uint(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], float(float(injectionSwitch[0]))), injectionSwitch[1])).y))) / 1u, (((subgroup_id) * uint(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], float(float(injectionSwitch[0]))), injectionSwitch[1])).y))) / 1u) / 1u))))))) * subgroup_size + subgroup_local_id), ((workgroup_base + _GLF_IDENTITY(subgroup_id, (subgroup_id) * uint(_GLF_ONE(1.0, injectionSwitch.y))) * _GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size)) + subgroup_local_id)) >> 0u))))))));
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 uint next_virtual_gid = _GLF_IDENTITY(workgroup_base, uint(uvec2(_GLF_IDENTITY(workgroup_base, ~ (~ (_GLF_IDENTITY(workgroup_base, (workgroup_base) + 0u)))), 1u))) + subgroup_id * subgroup_size + ((subgroup_local_id + 1) % subgroup_size);
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))) || false)))))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 atomicStore(buf[virtual_gid], uint(1), _GLF_IDENTITY(4, ~ (~ (4))), 64, _GLF_IDENTITY(4, (4) + _GLF_IDENTITY(0, (0) / (0 ^ 1))));
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * 1.0) > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * 1.0) > injectionSwitch.y)))))), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x))), float(_GLF_FUZZED((3.9 + 8.6))), bool(false))) > injectionSwitch.y)))) || false), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), _GLF_IDENTITY(bool(bvec3(bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || false), true && (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y)), true), bvec2(bvec2(bvec2(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y)), true))))), true && (bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y)), true), bvec2(bvec2(bvec2(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y)), true))))))))), (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y)), true), bvec2(bvec2(bvec2(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y)), true))))), true && (bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y)), true), bvec2(bvec2(bvec2(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y)), true))))))))), ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y)), true), bvec2(bvec2(bvec2(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y)), true))))), true && (bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y)), true), bvec2(bvec2(bvec2(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y)), true)))))))))) || false)) || false))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || false))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false, false)), bool(bvec2(_GLF_IDENTITY(bool(bvec3(bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || false), true && (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY((_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || false, true && ((_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || false))))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false, false)), ! (! (bool(bvec3(bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0))))) || false), true && (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)))).x > injectionSwitch.y)))) || false))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false, false))))), false))))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(_GLF_IDENTITY(! (false), false || (! (false))), ! (! (_GLF_IDENTITY(! (false), false || (! (false))))))))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 atomicStore(buf[next_virtual_gid], uint(2), _GLF_IDENTITY(4, _GLF_IDENTITY((4) << 0, ((4) << 0) >> 0)), _GLF_IDENTITY(64, 0 | (_GLF_IDENTITY(64, ~ (~ (64))))), 4);
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), ! (! (false)))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), ! (_GLF_IDENTITY(! (false), ! (! (_GLF_IDENTITY(! (false), bool(bvec3(! (_GLF_IDENTITY(false, ! (! (false)))), _GLF_IDENTITY(true, (_GLF_IDENTITY(true, (true) || false)) && true), true))))))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
}
