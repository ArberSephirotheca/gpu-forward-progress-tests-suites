#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), (_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(false), (bool(false)) && true)), (bool(_GLF_IDENTITY(bool(false), (bool(false)) && true))) || false))) || false)))) && true)))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, _GLF_IDENTITY((_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(false, true, true), bvec3(bvec3(bvec3(false, true, true))))), (bool(_GLF_IDENTITY(bvec3(false, true, true), bvec3(bvec3(bvec3(false, true, true)))))) && true), bool(bvec2(_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(false, true, true), bvec3(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(false, true, true), _GLF_IDENTITY(bvec3(bvec3(bvec3(false, true, true))), bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec3(bvec3(false, true, true))), bvec3(bvec4(bvec3(bvec3(bvec3(false, true, true))), true))))))), bvec3(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(false, true, true), _GLF_IDENTITY(bvec3(bvec3(bvec3(false, true, true))), bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec3(bvec3(false, true, true))), bvec3(bvec4(bvec3(bvec3(bvec3(false, true, true))), true))))))), bvec3(bvec3(_GLF_IDENTITY(bvec3(false, true, true), _GLF_IDENTITY(bvec3(bvec3(bvec3(false, true, true))), bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec3(bvec3(false, true, true))), bvec3(bvec4(bvec3(bvec3(bvec3(false, true, true))), true)))))))))), true))))))), (bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, _GLF_IDENTITY((false) || false, true && (_GLF_IDENTITY((false), false || ((false))) || false))), true, _GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), (! (_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec2(true, true)), _GLF_IDENTITY(bool(bvec3(bool(bvec2(true, true)), true, false)), ! (! (bool(_GLF_IDENTITY(bvec3(bool(bvec2(true, true)), true, false), bvec3(bvec3(bvec3(bool(bvec2(true, true)), true, false)))))))))))) || false)))), bvec3(bvec3(bvec3(false, true, true)))))) && true), true))))), ((_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(false, true, true), bvec3(bvec3(_GLF_IDENTITY(bvec3(false, true, true), bvec3(bvec4(bvec3(false, true, true), false))))))), (bool(_GLF_IDENTITY(bvec3(false, true, true), bvec3(bvec3(bvec3(false, true, true)))))) && true), bool(bvec2(_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(false, true, true), bvec3(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(false, true, true), _GLF_IDENTITY(bvec3(bvec3(bvec3(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, bool(bvec3(false, true, true))), false))), true, true))), bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec3(bvec3(false, true, true))), bvec3(bvec4(bvec3(bvec3(bvec3(false, true, true))), true))))))), bvec3(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(false, true, true), _GLF_IDENTITY(bvec3(bvec3(bvec3(false, true, true))), bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec3(bvec3(false, true, true))), bvec3(bvec4(bvec3(bvec3(bvec3(false, true, true))), true))))))), bvec3(bvec3(_GLF_IDENTITY(bvec3(false, true, true), _GLF_IDENTITY(bvec3(bvec3(bvec3(false, true, true))), bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec3(bvec3(false, true, true))), bvec3(bvec4(bvec3(bvec3(bvec3(false, true, true))), true)))))))))), true))))))), (bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, _GLF_IDENTITY((false) || false, true && (_GLF_IDENTITY((false), _GLF_IDENTITY(false || ((false)), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false || ((false)), bool(bvec3(false || ((false)), false, true))), false, false), bvec3(bvec3(bvec3(_GLF_IDENTITY(false || ((false)), bool(bvec3(false || ((false)), false, true))), false, false))))))) || false))), true, _GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), (! (_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec2(true, true)), _GLF_IDENTITY(bool(bvec3(bool(bvec2(true, true)), true, false)), ! (! (bool(bvec3(bool(bvec2(true, true)), _GLF_IDENTITY(true, bool(bvec3(true, true, false))), false))))))))) || false)))), bvec3(bvec3(bvec3(false, true, true)))))) && true), true)))))) || false) || false))), bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), (_GLF_IDENTITY(false, true && (false))) || false), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), false || (_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), true && (_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(true && (false), bool(_GLF_IDENTITY(bool(true && (false)), true && (bool(true && (false))))))), (_GLF_IDENTITY(false, true && (false))) || false)))))), ((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), (_GLF_IDENTITY(false, true && (false))) || false), true, false, true))), false || (_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), true && (_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), (_GLF_IDENTITY(false, true && (false))) || false))))))) || false) || false)))), true && _GLF_IDENTITY((_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, (false) && true)))), false || ((_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, (false) && true))))))), false, _GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(true, bool(_GLF_IDENTITY(bvec2(true, false), bvec2(bvec2(bvec2(true, false)))))), ! (! (true)))), bool(bool(_GLF_IDENTITY(! (true), (! (true)) && true)))))), false))), false, false, true)))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, false)), bool(bvec4(bool(bvec2(false, false)), true, true, false)))), ! (! (false)))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(-3.1) : injectionSwitch.y))))))
  barrier();
 uint num_workgroup = _GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) ^ uvec3(0u, 0u, 0u)).x;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(_GLF_IDENTITY(20.78, (20.78) / 1.0), -9.9)))).x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(20.78, _GLF_IDENTITY(-9.9, min(-9.9, _GLF_IDENTITY(_GLF_IDENTITY(-9.9, mix(float(_GLF_FUZZED(89.18)), float(-9.9), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), clamp(_GLF_IDENTITY(-9.9, clamp(_GLF_IDENTITY(-9.9, min(-9.9, -9.9)), -9.9, -9.9)), -9.9, _GLF_IDENTITY(_GLF_IDENTITY(-9.9, _GLF_IDENTITY(float(vec2(_GLF_IDENTITY(-9.9, (-9.9) / 1.0), 0.0)), min(float(vec2(_GLF_IDENTITY(-9.9, (-9.9) / 1.0), 0.0)), float(vec2(_GLF_IDENTITY(-9.9, (-9.9) / 1.0), 0.0))))), (true ? _GLF_IDENTITY(-9.9, min(_GLF_IDENTITY(-9.9, min(-9.9, -9.9)), -9.9)) : _GLF_FUZZED(13.68))))))))))).x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, float(mat2(injectionSwitch.y, 0.0, 1.0, 0.0)))) - 0.0)) || false), bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(20.78, -9.9)))).x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(20.78, _GLF_IDENTITY(-9.9, min(-9.9, _GLF_IDENTITY(_GLF_IDENTITY(-9.9, mix(float(_GLF_FUZZED(89.18)), float(-9.9), bool(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false || (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), bool(bvec4(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, false, false)))))))), clamp(_GLF_IDENTITY(-9.9, clamp(_GLF_IDENTITY(-9.9, min(-9.9, -9.9)), -9.9, -9.9)), -9.9, _GLF_IDENTITY(-9.9, (true ? _GLF_IDENTITY(-9.9, min(_GLF_IDENTITY(-9.9, min(-9.9, -9.9)), -9.9)) : _GLF_FUZZED(13.68))))))))))).x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, float(mat2(injectionSwitch.y, 0.0, 1.0, 0.0)))) - 0.0)) || false), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(_GLF_IDENTITY(20.78, clamp(20.78, 20.78, _GLF_IDENTITY(20.78, clamp(20.78, _GLF_IDENTITY(20.78, min(20.78, 20.78)), 20.78)))), -9.9)))).x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(20.78, _GLF_IDENTITY(-9.9, min(-9.9, _GLF_IDENTITY(_GLF_IDENTITY(-9.9, mix(float(_GLF_FUZZED(89.18)), float(-9.9), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), clamp(_GLF_IDENTITY(-9.9, _GLF_IDENTITY(clamp(_GLF_IDENTITY(-9.9, min(-9.9, -9.9)), -9.9, -9.9), (clamp(_GLF_IDENTITY(-9.9, min(-9.9, -9.9)), -9.9, -9.9)) + 0.0)), -9.9, _GLF_IDENTITY(-9.9, (true ? _GLF_IDENTITY(-9.9, min(_GLF_IDENTITY(-9.9, min(-9.9, -9.9)), -9.9)) : _GLF_FUZZED(13.68))))))))))).x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, float(mat2(injectionSwitch.y, 0.0, 1.0, 0.0)))) - 0.0)) || false)) && true), true, true))))), ! (! (_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_IDENTITY(_GLF_FUZZED(vec2(20.78, -9.9)), min(_GLF_FUZZED(vec2(20.78, -9.9)), _GLF_FUZZED(vec2(20.78, -9.9)))))).x, min(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_IDENTITY(_GLF_FUZZED(vec2(20.78, -9.9)), min(_GLF_FUZZED(vec2(20.78, -9.9)), _GLF_FUZZED(vec2(20.78, -9.9)))))).x, _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_IDENTITY(_GLF_FUZZED(vec2(20.78, -9.9)), min(_GLF_FUZZED(vec2(20.78, -9.9)), _GLF_FUZZED(vec2(20.78, -9.9)))))).x)) > _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))))).y)))))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY((_GLF_IDENTITY(false, (false) || false)) || false, ((_GLF_IDENTITY(false, _GLF_IDENTITY((false), ((false)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false)) || false) && true))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  barrier();
 uint workgroup_size = gl_WorkGroupSize.x;
 if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, (true ? _GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(8.1) : injectionSwitch.x)) : _GLF_FUZZED(-965.150))) > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y))))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec2(_GLF_DEAD(false), true)), true && (_GLF_IDENTITY(bool(bvec2(_GLF_DEAD(false), true)), (bool(bvec2(_GLF_DEAD(false), true))) && true)))), false || (_GLF_DEAD(false))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)), mat2(1.0) * (injectionSwitch))) / vec2(1.0, 1.0)).x > injectionSwitch.y))))
    barrier();
  }
 uint workgroup_id = gl_WorkGroupID.x;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec3(false, _GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, false, _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(513.783)), float(injectionSwitch.y), bool(true))))), true)), ! (_GLF_IDENTITY(! (bool(bvec4(false, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))), (! (bool(bvec4(false, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)))) && true)))), true)), bool(_GLF_IDENTITY(bvec2(bool(bvec3(false, _GLF_IDENTITY(false, (false) && true), true)), false), bvec2(_GLF_IDENTITY(bvec3(bvec2(bool(bvec3(false, _GLF_IDENTITY(false, (false) && true), true)), false), false), _GLF_IDENTITY(bvec3(bvec3(bvec3(bvec2(bool(bvec3(false, _GLF_IDENTITY(false, (false) && true), true)), false), false))), bvec3(bvec3(bvec3(bvec3(bvec3(bvec2(bool(bvec3(false, _GLF_IDENTITY(false, (false) && true), true)), false), false))))))))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec3(false, _GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)), ! (_GLF_IDENTITY(! (bool(bvec4(false, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))), (! (bool(bvec4(false, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)))) && true)))), true)), bool(_GLF_IDENTITY(bvec2(bool(bvec3(false, _GLF_IDENTITY(false, (false) && true), true)), false), bvec2(_GLF_IDENTITY(bvec3(bvec2(bool(bvec3(false, _GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), _GLF_IDENTITY((false) && true, ! (! ((false) && true)))), true)), false), false), _GLF_IDENTITY(bvec3(bvec3(bvec3(bvec2(bool(bvec3(false, _GLF_IDENTITY(false, (false) && true), true)), false), false))), bvec3(bvec3(bvec3(bvec3(bvec3(bvec2(bool(bvec3(false, _GLF_IDENTITY(false, (false) && true), true)), false), false))))))))))), (_GLF_IDENTITY(bool(bvec3(false, _GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)), ! (_GLF_IDENTITY(! (bool(bvec4(false, false, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)))))) > injectionSwitch.y)), true))), (! (bool(bvec4(false, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)))) && true)))), true)), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(bool(bvec3(false, _GLF_IDENTITY(false, (false) && true), true)), false), bvec2(_GLF_IDENTITY(bvec3(bvec2(bool(bvec3(false, _GLF_IDENTITY(false, (false) && true), true)), false), false), _GLF_IDENTITY(bvec3(bvec3(bvec3(bvec2(bool(bvec3(false, _GLF_IDENTITY(false, (false) && true), true)), false), false))), bvec3(bvec3(bvec3(bvec3(bvec3(bvec2(bool(bvec3(false, _GLF_IDENTITY(false, _GLF_IDENTITY((false) && true, ! (! ((false) && true)))), true)), _GLF_IDENTITY(false, true && (false))), false)))))))))), ! (_GLF_IDENTITY(! (bool(_GLF_IDENTITY(bvec2(bool(bvec3(false, _GLF_IDENTITY(false, (false) && true), true)), false), bvec2(_GLF_IDENTITY(bvec3(bvec2(bool(bvec3(false, _GLF_IDENTITY(false, (false) && true), true)), false), false), _GLF_IDENTITY(bvec3(bvec3(bvec3(bvec2(bool(bvec3(false, _GLF_IDENTITY(false, (false) && true), true)), false), false))), bvec3(bvec3(bvec3(bvec3(bvec3(bvec2(bool(bvec3(false, _GLF_IDENTITY(false, _GLF_IDENTITY((false) && true, ! (! ((false) && true)))), true)), _GLF_IDENTITY(false, true && (false))), false))))))))))), (_GLF_IDENTITY(! (bool(_GLF_IDENTITY(bvec2(bool(bvec3(false, _GLF_IDENTITY(false, (false) && true), true)), false), bvec2(_GLF_IDENTITY(bvec3(bvec2(bool(bvec3(false, _GLF_IDENTITY(false, (false) && true), true)), false), false), _GLF_IDENTITY(bvec3(bvec3(bvec3(bvec2(bool(bvec3(false, _GLF_IDENTITY(false, (false) && true), true)), false), false))), bvec3(bvec3(bvec3(bvec3(bvec3(bvec2(bool(bvec3(false, _GLF_IDENTITY(false, _GLF_IDENTITY((false) && true, ! (! ((false) && true)))), true)), _GLF_IDENTITY(false, true && (false))), false))))))))))), (! (bool(_GLF_IDENTITY(bvec2(bool(bvec3(false, _GLF_IDENTITY(false, (false) && true), true)), false), bvec2(_GLF_IDENTITY(bvec3(bvec2(bool(bvec3(false, _GLF_IDENTITY(false, (false) && true), true)), false), false), _GLF_IDENTITY(bvec3(bvec3(bvec3(bvec2(bool(bvec3(false, _GLF_IDENTITY(false, (false) && true), true)), false), false))), bvec3(bvec3(bvec3(bvec3(bvec3(bvec2(bool(bvec3(false, _GLF_IDENTITY(false, _GLF_IDENTITY((false) && true, ! (! ((false) && true)))), true)), _GLF_IDENTITY(false, true && (false))), false)))))))))))) || false)) && true))))) || false)), bool(bvec3(! (_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(false, false || (false)), _GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)), ! (_GLF_IDENTITY(! (bool(bvec4(false, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))), (! (bool(bvec4(false, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)))) && true)))), true)), bool(_GLF_IDENTITY(bvec2(bool(bvec3(false, _GLF_IDENTITY(false, (false) && true), true)), false), bvec2(_GLF_IDENTITY(bvec3(bvec2(_GLF_IDENTITY(bool(bvec3(false, _GLF_IDENTITY(false, (false) && true), true)), (_GLF_IDENTITY(bool(bvec3(false, _GLF_IDENTITY(false, (false) && true), true)), ! (! (bool(bvec3(false, _GLF_IDENTITY(false, (false) && true), true)))))) || false), false), false), _GLF_IDENTITY(bvec3(bvec3(bvec3(bvec2(bool(bvec3(false, _GLF_IDENTITY(false, (false) && true), true)), false), false))), bvec3(bvec3(bvec3(bvec3(bvec3(bvec2(bool(bvec3(false, _GLF_IDENTITY(false, (false) && true), true)), false), false))))))))))), (_GLF_IDENTITY(bool(bvec3(false, _GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, false, _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).y)), true)), ! (_GLF_IDENTITY(! (bool(bvec4(false, false, _GLF_FALSE(_GLF_IDENTITY(false, bool(bvec4(false, true, false, true))), (injectionSwitch.x > injectionSwitch.y)), true))), (! (bool(bvec4(false, false, _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true)))) && true)))), true)), bool(_GLF_IDENTITY(bvec2(bool(bvec3(false, _GLF_IDENTITY(false, (false) && true), true)), false), _GLF_IDENTITY(bvec2(_GLF_IDENTITY(bvec3(bvec2(bool(bvec3(false, _GLF_IDENTITY(false, (false) && true), true)), false), false), _GLF_IDENTITY(bvec3(bvec3(bvec3(bvec2(bool(bvec3(false, _GLF_IDENTITY(false, (false) && true), true)), false), false))), bvec3(bvec3(bvec3(bvec3(bvec3(bvec2(bool(bvec3(false, _GLF_IDENTITY(false, (false) && true), true)), false), false)))))))), bvec2(bvec3(bvec2(_GLF_IDENTITY(bvec3(bvec2(bool(bvec3(false, _GLF_IDENTITY(false, (false) && true), true)), false), false), _GLF_IDENTITY(bvec3(bvec3(bvec3(bvec2(bool(bvec3(false, _GLF_IDENTITY(false, (false) && true), true)), false), false))), bvec3(bvec3(bvec3(bvec3(bvec3(bvec2(bool(bvec3(false, _GLF_IDENTITY(false, (false) && true), true)), false), false)))))))), true))))))) || false)), false, false))))))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
  }
 uint workgroup_base = _GLF_IDENTITY(workgroup_size * workgroup_id, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(workgroup_size, (workgroup_size) >> 0u) * workgroup_id, (workgroup_size * workgroup_id) << 0u)) << 0u, ~ (~ ((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_size, (workgroup_size) >> 0u) * workgroup_id, (workgroup_size * workgroup_id) << 0u), clamp(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_size, (workgroup_size) >> 0u) * workgroup_id, (workgroup_size * workgroup_id) << 0u), _GLF_IDENTITY(_GLF_IDENTITY(workgroup_size, (workgroup_size) >> 0u) * workgroup_id, (workgroup_size * workgroup_id) << 0u), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_size, (workgroup_size) >> 0u) * workgroup_id, (workgroup_size * workgroup_id) << 0u), (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_size, (workgroup_size) >> 0u) * workgroup_id, (workgroup_size * workgroup_id) << 0u)) * 1u)))) << 0u))));
 if(_GLF_DEAD(false))
  barrier();
 uint virtual_gid = workgroup_base + _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, clamp(subgroup_id * subgroup_size, _GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)) || false) ? _GLF_FUZZED(workgroup_id) : subgroup_id)) * subgroup_size, subgroup_id * _GLF_IDENTITY(subgroup_size, (subgroup_size) ^ 0u))), _GLF_IDENTITY(uint(uint(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (true ? subgroup_id : _GLF_FUZZED(_GLF_IDENTITY(workgroup_base, (workgroup_base) | 0u)))) * subgroup_size, clamp(subgroup_id * subgroup_size, subgroup_id * _GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(0u ^ (subgroup_size), min(0u ^ (subgroup_size), 0u ^ (subgroup_size)))), _GLF_IDENTITY(subgroup_id * subgroup_size, (_GLF_IDENTITY(subgroup_id * _GLF_IDENTITY(subgroup_size, (true ? subgroup_size : _GLF_FUZZED(subgroup_id))), (subgroup_id * subgroup_size) | (0u << _GLF_IDENTITY(uint(4u), uint(4u))))) ^ 0u))))), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? uint(uint(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (true ? subgroup_id : _GLF_FUZZED(_GLF_IDENTITY(workgroup_base, (workgroup_base) | 0u)))) * subgroup_size, clamp(subgroup_id * subgroup_size, subgroup_id * _GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(0u ^ (subgroup_size), min(0u ^ (subgroup_size), 0u ^ (subgroup_size)))), _GLF_IDENTITY(subgroup_id * subgroup_size, (_GLF_IDENTITY(subgroup_id * _GLF_IDENTITY(subgroup_size, (true ? subgroup_size : _GLF_FUZZED(subgroup_id))), (subgroup_id * subgroup_size) | (0u << _GLF_IDENTITY(uint(4u), uint(4u))))) ^ 0u))))) : _GLF_FUZZED(subgroup_size)))) + subgroup_local_id;
 if(_GLF_DEAD(false))
  barrier();
 uint next_virtual_gid = _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (workgroup_base) - 0u) + subgroup_id * subgroup_size, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(uint(uvec4(workgroup_base + subgroup_id * subgroup_size, (_GLF_IDENTITY((1u << _GLF_IDENTITY(uint(6u), uint(6u))), ((1u << _GLF_IDENTITY(uint(6u), uint(6u)))) + 0u) >> _GLF_IDENTITY(uint(6u), _GLF_IDENTITY(uint(_GLF_IDENTITY(6u, (_GLF_IDENTITY(6u, (_GLF_IDENTITY(6u, (6u) + 0u)) - 0u)) ^ 0u)), (uint(_GLF_IDENTITY(6u, (6u) | (_GLF_IDENTITY(6u, ~ (~ (_GLF_IDENTITY(6u, (6u) << uint(_GLF_ZERO(0.0, injectionSwitch.x)))))))))) - 0u))), ((uint(_GLF_ONE(1.0, injectionSwitch.y)) << _GLF_IDENTITY(uint(3u), _GLF_IDENTITY(uint(3u), (_GLF_IDENTITY(uint(3u), clamp(uint(3u), uint(3u), uint(3u)))) - 0u))) >> _GLF_IDENTITY(uint(3u), uint(3u))), 0u)), (false ? _GLF_FUZZED(subgroup_size) : uint(uvec4(workgroup_base + subgroup_id * subgroup_size, (_GLF_IDENTITY((1u << _GLF_IDENTITY(uint(6u), uint(6u))), ((1u << _GLF_IDENTITY(uint(6u), uint(6u)))) + 0u) >> _GLF_IDENTITY(uint(6u), _GLF_IDENTITY(uint(6u), (uint(_GLF_IDENTITY(6u, (6u) | (6u)))) - 0u))), ((uint(_GLF_ONE(1.0, injectionSwitch.y)) << _GLF_IDENTITY(uint(3u), uint(3u))) >> _GLF_IDENTITY(uint(3u), uint(_GLF_IDENTITY(3u, clamp(_GLF_IDENTITY(3u, 0u | (3u)), 3u, 3u))))), 0u)))), clamp(_GLF_IDENTITY(uint(uvec4(workgroup_base + subgroup_id * subgroup_size, (_GLF_IDENTITY((1u << _GLF_IDENTITY(uint(6u), uint(6u))), ((1u << _GLF_IDENTITY(uint(6u), uint(6u)))) + 0u) >> _GLF_IDENTITY(uint(6u), _GLF_IDENTITY(uint(_GLF_IDENTITY(6u, (_GLF_IDENTITY(6u, (_GLF_IDENTITY(6u, (6u) + 0u)) - 0u)) ^ 0u)), (uint(_GLF_IDENTITY(6u, (6u) | (_GLF_IDENTITY(6u, ~ (~ (_GLF_IDENTITY(6u, (6u) << uint(_GLF_ZERO(0.0, injectionSwitch.x)))))))))) - 0u))), ((uint(_GLF_ONE(1.0, injectionSwitch.y)) << _GLF_IDENTITY(uint(3u), _GLF_IDENTITY(uint(3u), (_GLF_IDENTITY(uint(3u), clamp(uint(3u), uint(3u), uint(3u)))) - 0u))) >> _GLF_IDENTITY(uint(3u), uint(3u))), 0u)), (false ? _GLF_FUZZED(subgroup_size) : uint(uvec4(workgroup_base + subgroup_id * subgroup_size, (_GLF_IDENTITY((1u << _GLF_IDENTITY(uint(6u), uint(6u))), ((1u << _GLF_IDENTITY(uint(6u), uint(6u)))) + 0u) >> _GLF_IDENTITY(uint(6u), _GLF_IDENTITY(uint(6u), (uint(_GLF_IDENTITY(6u, (6u) | (6u)))) - 0u))), ((uint(_GLF_ONE(1.0, injectionSwitch.y)) << _GLF_IDENTITY(uint(3u), uint(3u))) >> _GLF_IDENTITY(uint(3u), uint(_GLF_IDENTITY(3u, clamp(_GLF_IDENTITY(3u, 0u | (3u)), 3u, 3u))))), 0u)))), _GLF_IDENTITY(_GLF_IDENTITY(uint(uvec4(workgroup_base + subgroup_id * subgroup_size, (_GLF_IDENTITY((1u << _GLF_IDENTITY(uint(6u), uint(6u))), ((1u << _GLF_IDENTITY(uint(6u), uint(6u)))) + 0u) >> _GLF_IDENTITY(uint(6u), _GLF_IDENTITY(uint(_GLF_IDENTITY(6u, (_GLF_IDENTITY(6u, (_GLF_IDENTITY(6u, (6u) + 0u)) - 0u)) ^ 0u)), (uint(_GLF_IDENTITY(6u, (6u) | (_GLF_IDENTITY(6u, ~ (~ (_GLF_IDENTITY(6u, (6u) << uint(_GLF_ZERO(0.0, injectionSwitch.x)))))))))) - 0u))), ((uint(_GLF_ONE(1.0, injectionSwitch.y)) << _GLF_IDENTITY(uint(3u), _GLF_IDENTITY(uint(3u), (_GLF_IDENTITY(uint(3u), clamp(uint(3u), uint(3u), uint(3u)))) - 0u))) >> _GLF_IDENTITY(uint(3u), uint(3u))), 0u)), (false ? _GLF_FUZZED(subgroup_size) : uint(uvec4(workgroup_base + subgroup_id * subgroup_size, (_GLF_IDENTITY((1u << _GLF_IDENTITY(uint(6u), uint(6u))), ((1u << _GLF_IDENTITY(uint(6u), uint(6u)))) + 0u) >> _GLF_IDENTITY(uint(6u), _GLF_IDENTITY(uint(6u), (uint(_GLF_IDENTITY(6u, (6u) | (6u)))) - 0u))), ((uint(_GLF_ONE(1.0, injectionSwitch.y)) << _GLF_IDENTITY(uint(3u), uint(3u))) >> _GLF_IDENTITY(uint(3u), uint(_GLF_IDENTITY(3u, clamp(_GLF_IDENTITY(3u, 0u | (3u)), 3u, 3u))))), 0u)))), 1u * (_GLF_IDENTITY(uint(uvec4(workgroup_base + subgroup_id * subgroup_size, (_GLF_IDENTITY((1u << _GLF_IDENTITY(uint(6u), uint(6u))), ((1u << _GLF_IDENTITY(uint(6u), uint(6u)))) + 0u) >> _GLF_IDENTITY(uint(6u), _GLF_IDENTITY(uint(_GLF_IDENTITY(6u, (_GLF_IDENTITY(6u, (_GLF_IDENTITY(6u, (6u) + 0u)) - 0u)) ^ 0u)), (uint(_GLF_IDENTITY(6u, (6u) | (_GLF_IDENTITY(6u, ~ (~ (_GLF_IDENTITY(6u, (6u) << uint(_GLF_ZERO(0.0, injectionSwitch.x)))))))))) - 0u))), ((uint(_GLF_ONE(1.0, injectionSwitch.y)) << _GLF_IDENTITY(uint(3u), _GLF_IDENTITY(uint(3u), (_GLF_IDENTITY(uint(3u), clamp(uint(3u), uint(3u), uint(3u)))) - 0u))) >> _GLF_IDENTITY(uint(3u), uint(3u))), 0u)), (false ? _GLF_FUZZED(subgroup_size) : uint(uvec4(workgroup_base + subgroup_id * subgroup_size, (_GLF_IDENTITY((1u << _GLF_IDENTITY(uint(6u), uint(6u))), ((1u << _GLF_IDENTITY(uint(6u), uint(6u)))) + 0u) >> _GLF_IDENTITY(uint(6u), _GLF_IDENTITY(uint(6u), (uint(_GLF_IDENTITY(6u, (6u) | (6u)))) - 0u))), ((uint(_GLF_ONE(1.0, injectionSwitch.y)) << _GLF_IDENTITY(uint(3u), uint(3u))) >> _GLF_IDENTITY(uint(3u), uint(_GLF_IDENTITY(3u, clamp(_GLF_IDENTITY(3u, 0u | (3u)), 3u, 3u))))), 0u)))))), _GLF_IDENTITY(uint(uvec4(workgroup_base + subgroup_id * subgroup_size, (_GLF_IDENTITY((1u << _GLF_IDENTITY(uint(6u), uint(6u))), ((1u << _GLF_IDENTITY(uint(6u), uint(6u)))) + 0u) >> _GLF_IDENTITY(uint(6u), _GLF_IDENTITY(uint(_GLF_IDENTITY(6u, (_GLF_IDENTITY(6u, (_GLF_IDENTITY(6u, (6u) + 0u)) - 0u)) ^ 0u)), (uint(_GLF_IDENTITY(6u, (6u) | (_GLF_IDENTITY(6u, ~ (~ (_GLF_IDENTITY(6u, (6u) << uint(_GLF_ZERO(0.0, injectionSwitch.x)))))))))) - 0u))), ((uint(_GLF_ONE(1.0, injectionSwitch.y)) << _GLF_IDENTITY(uint(3u), _GLF_IDENTITY(uint(3u), (_GLF_IDENTITY(uint(3u), clamp(uint(3u), uint(3u), uint(3u)))) - 0u))) >> _GLF_IDENTITY(uint(3u), uint(3u))), 0u)), (false ? _GLF_FUZZED(subgroup_size) : uint(uvec4(workgroup_base + subgroup_id * subgroup_size, (_GLF_IDENTITY((1u << _GLF_IDENTITY(uint(6u), uint(6u))), ((1u << _GLF_IDENTITY(uint(6u), uint(6u)))) + 0u) >> _GLF_IDENTITY(uint(6u), _GLF_IDENTITY(uint(6u), (uint(_GLF_IDENTITY(6u, (6u) | (6u)))) - 0u))), ((uint(_GLF_ONE(1.0, injectionSwitch.y)) << _GLF_IDENTITY(uint(3u), uint(3u))) >> _GLF_IDENTITY(uint(3u), uint(_GLF_IDENTITY(3u, clamp(_GLF_IDENTITY(3u, 0u | (3u)), 3u, 3u))))), 0u)))))), min(uint(uvec4(workgroup_base + _GLF_IDENTITY(subgroup_id * subgroup_size, uint(uint(_GLF_IDENTITY(subgroup_id * subgroup_size, (true ? subgroup_id * subgroup_size : _GLF_FUZZED(subgroup_local_id)))))), (_GLF_IDENTITY((1u << _GLF_IDENTITY(uint(6u), _GLF_IDENTITY(uint(6u), (uint(6u)) | (uint(6u))))) >> _GLF_IDENTITY(_GLF_IDENTITY(uint(6u), clamp(_GLF_IDENTITY(uint(6u), uint(uint(uint(6u)))), uint(6u), uint(6u))), _GLF_IDENTITY(uint(6u), _GLF_IDENTITY((uint(_GLF_IDENTITY(6u, _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec3(6u, (uint(_GLF_ZERO(0.0, injectionSwitch.x)) << _GLF_IDENTITY(uint(3u), uint(3u))), 0u), _GLF_IDENTITY(uvec3(uvec4(uvec3(6u, (uint(_GLF_ZERO(0.0, injectionSwitch.x)) << _GLF_IDENTITY(uint(3u), uint(3u))), 0u), (1u & 1u))), clamp(uvec3(uvec4(uvec3(6u, (uint(_GLF_ZERO(0.0, injectionSwitch.x)) << _GLF_IDENTITY(uint(3u), uint(3u))), 0u), (1u & 1u))), uvec3(uvec4(uvec3(6u, (uint(_GLF_ZERO(0.0, injectionSwitch.x)) << _GLF_IDENTITY(uint(3u), uint(3u))), 0u), (1u & 1u))), uvec3(uvec4(uvec3(6u, (uint(_GLF_ZERO(0.0, injectionSwitch.x)) << _GLF_IDENTITY(uint(3u), uint(3u))), 0u), (1u & 1u))))))), 0u ^ (uint(_GLF_IDENTITY(uvec3(6u, (uint(_GLF_ZERO(0.0, injectionSwitch.x)) << _GLF_IDENTITY(uint(3u), uint(3u))), 0u), _GLF_IDENTITY(uvec3(uvec4(uvec3(6u, (uint(_GLF_ZERO(0.0, injectionSwitch.x)) << _GLF_IDENTITY(uint(3u), uint(3u))), 0u), (1u & 1u))), clamp(uvec3(uvec4(uvec3(6u, (uint(_GLF_ZERO(0.0, injectionSwitch.x)) << _GLF_IDENTITY(uint(3u), uint(3u))), 0u), (1u & 1u))), uvec3(uvec4(uvec3(6u, (uint(_GLF_ZERO(0.0, injectionSwitch.x)) << _GLF_IDENTITY(uint(3u), uint(3u))), 0u), (1u & 1u))), uvec3(uvec4(uvec3(6u, (uint(_GLF_ZERO(0.0, injectionSwitch.x)) << _GLF_IDENTITY(uint(3u), uint(3u))), 0u), (1u & 1u)))))))))))) - 0u, (false ? _GLF_FUZZED(num_workgroup) : (uint(_GLF_IDENTITY(6u, _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec3(6u, (uint(_GLF_ZERO(0.0, injectionSwitch.x)) << _GLF_IDENTITY(uint(_GLF_IDENTITY(3u, ~ (~ (_GLF_IDENTITY(3u, max(3u, 3u)))))), uint(3u))), 0u), _GLF_IDENTITY(uvec3(uvec4(uvec3(6u, (uint(_GLF_ZERO(0.0, injectionSwitch.x)) << _GLF_IDENTITY(uint(3u), uint(3u))), 0u), (1u & 1u))), clamp(uvec3(uvec4(uvec3(6u, (uint(_GLF_ZERO(0.0, injectionSwitch.x)) << _GLF_IDENTITY(uint(3u), uint(3u))), 0u), (1u & 1u))), uvec3(uvec4(uvec3(6u, (uint(_GLF_ZERO(0.0, injectionSwitch.x)) << _GLF_IDENTITY(uint(3u), uint(3u))), 0u), (1u & 1u))), uvec3(uvec4(uvec3(6u, (uint(_GLF_ZERO(0.0, injectionSwitch.x)) << _GLF_IDENTITY(uint(3u), uint(3u))), 0u), (1u & 1u))))))), 0u ^ (uint(_GLF_IDENTITY(uvec3(6u, (uint(_GLF_ZERO(0.0, injectionSwitch.x)) << _GLF_IDENTITY(uint(3u), uint(3u))), 0u), _GLF_IDENTITY(uvec3(uvec4(uvec3(6u, (uint(_GLF_ZERO(0.0, injectionSwitch.x)) << _GLF_IDENTITY(uint(3u), uint(3u))), 0u), (1u & 1u))), clamp(uvec3(uvec4(uvec3(6u, (uint(_GLF_ZERO(0.0, injectionSwitch.x)) << _GLF_IDENTITY(uint(3u), uint(3u))), 0u), (1u & 1u))), uvec3(uvec4(uvec3(6u, (uint(_GLF_ZERO(_GLF_IDENTITY(0.0, (0.0) / 1.0), injectionSwitch.x)) << _GLF_IDENTITY(uint(3u), uint(3u))), 0u), (1u & 1u))), uvec3(_GLF_IDENTITY(uvec4(uvec3(6u, (uint(_GLF_ZERO(0.0, injectionSwitch.x)) << _GLF_IDENTITY(uint(3u), uint(3u))), 0u), (1u & 1u)), (uvec4(uvec3(6u, (uint(_GLF_ZERO(0.0, injectionSwitch.x)) << _GLF_IDENTITY(uint(3u), uint(3u))), 0u), (1u & 1u))) | (_GLF_IDENTITY(uvec4(uvec3(6u, (uint(_GLF_ZERO(0.0, injectionSwitch.x)) << _GLF_IDENTITY(uint(3u), uint(3u))), 0u), (1u & 1u)), (uvec4(uvec3(6u, (uint(_GLF_ZERO(0.0, injectionSwitch.x)) << _GLF_IDENTITY(uint(3u), uint(3u))), 0u), (1u & 1u))) << uvec4(0u, 0u, 0u, 0u)))))))))))))) - 0u)))), ((_GLF_IDENTITY(1u << _GLF_IDENTITY(uint(6u), uint(6u)), max(1u << _GLF_IDENTITY(uint(6u), uint(6u)), _GLF_IDENTITY(1u << _GLF_IDENTITY(uint(6u), uint(6u)), ~ (~ (1u << _GLF_IDENTITY(uint(6u), uint(6u)))))))) >> _GLF_IDENTITY(_GLF_IDENTITY(uint(6u), clamp(_GLF_IDENTITY(uint(6u), uint(uint(uint(6u)))), uint(6u), uint(6u))), _GLF_IDENTITY(uint(6u), (uint(_GLF_IDENTITY(6u, _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec3(6u, _GLF_IDENTITY((uint(_GLF_ZERO(0.0, injectionSwitch.x)) << _GLF_IDENTITY(uint(3u), uint(_GLF_IDENTITY(3u, max(3u, _GLF_IDENTITY(3u, min(_GLF_IDENTITY(3u, min(3u, 3u)), 3u))))))), 1u * ((uint(_GLF_ZERO(0.0, injectionSwitch.x)) << _GLF_IDENTITY(uint(3u), uint(3u))))), 0u), _GLF_IDENTITY(uvec3(uvec4(uvec3(6u, (uint(_GLF_ZERO(0.0, injectionSwitch.x)) << _GLF_IDENTITY(uint(3u), uint(3u))), _GLF_IDENTITY(0u, 0u ^ (0u))), (1u & 1u))), clamp(uvec3(uvec4(uvec3(6u, (_GLF_IDENTITY(uint(_GLF_ZERO(_GLF_IDENTITY(0.0, (0.0) + 0.0), injectionSwitch.x)) << _GLF_IDENTITY(uint(3u), uint(3u)), _GLF_IDENTITY(min(uint(_GLF_ZERO(0.0, injectionSwitch.x)) << _GLF_IDENTITY(uint(3u), uint(3u)), uint(_GLF_ZERO(0.0, injectionSwitch.x)) << _GLF_IDENTITY(uint(3u), uint(3u))), (min(uint(_GLF_ZERO(0.0, injectionSwitch.x)) << _GLF_IDENTITY(uint(3u), uint(3u)), uint(_GLF_ZERO(0.0, injectionSwitch.x)) << _GLF_IDENTITY(uint(3u), uint(3u)))) - 0u))), 0u), (1u & 1u))), uvec3(uvec4(uvec3(6u, (uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)))) << _GLF_IDENTITY(uint(3u), uint(3u))), 0u), (1u & 1u))), uvec3(uvec4(uvec3(6u, (uint(_GLF_ZERO(0.0, injectionSwitch.x)) << _GLF_IDENTITY(uint(3u), uint(3u))), 0u), (1u & 1u))))))), 0u ^ (uint(_GLF_IDENTITY(uvec3(6u, (uint(_GLF_ZERO(0.0, injectionSwitch.x)) << _GLF_IDENTITY(uint(3u), uint(3u))), 0u), _GLF_IDENTITY(uvec3(_GLF_IDENTITY(uvec4(uvec3(6u, (uint(_GLF_ZERO(0.0, injectionSwitch.x)) << _GLF_IDENTITY(uint(3u), _GLF_IDENTITY(uint(3u), (uint(3u)) | (uint(3u))))), 0u), (1u & 1u)), ~ (~ (uvec4(uvec3(6u, (uint(_GLF_ZERO(0.0, injectionSwitch.x)) << _GLF_IDENTITY(uint(3u), uint(3u))), 0u), (1u & 1u)))))), clamp(uvec3(uvec4(uvec3(6u, (uint(_GLF_ZERO(0.0, injectionSwitch.x)) << _GLF_IDENTITY(uint(3u), uint(3u))), 0u), (1u & 1u))), uvec3(uvec4(uvec3(6u, (uint(_GLF_ZERO(0.0, injectionSwitch.x)) << _GLF_IDENTITY(uint(3u), uint(3u))), 0u), (1u & 1u))), uvec3(uvec4(uvec3(6u, (uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).x)) << _GLF_IDENTITY(uint(3u), _GLF_IDENTITY(uint(3u), (uint(3u)) - 0u))), 0u), _GLF_IDENTITY((1u & 1u), uint(uvec3((1u & 1u), 0u, ((1u << _GLF_IDENTITY(uint(5u), uint(5u))) >> _GLF_IDENTITY(uint(5u), uint(5u))))))))))))))))) - 0u))) * 1u)), (_GLF_IDENTITY((uint(_GLF_ONE(1.0, injectionSwitch.y)) << _GLF_IDENTITY(uint(3u), uint(3u))), ((uint(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, float(float(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))))))) << _GLF_IDENTITY(uint(3u), uint(3u)))) | ((uint(_GLF_ONE(1.0, injectionSwitch.y)) << _GLF_IDENTITY(uint(3u), uint(3u))))) >> _GLF_IDENTITY(uint(3u), uint(3u))), 0u)), uint(uvec4(workgroup_base + subgroup_id * subgroup_size, _GLF_IDENTITY(((1u << _GLF_IDENTITY(uint(6u), uint(_GLF_IDENTITY(6u, uint(uvec2(6u, 1u)))))) >> _GLF_IDENTITY(_GLF_IDENTITY(uint(6u), (uint(6u)) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x))), _GLF_IDENTITY(uint(6u), (uint(6u)) - _GLF_IDENTITY(0u, ~ (~ (0u)))))), (_GLF_IDENTITY(((1u << _GLF_IDENTITY(uint(6u), uint(_GLF_IDENTITY(6u, uint(uvec2(6u, 1u)))))) >> _GLF_IDENTITY(_GLF_IDENTITY(uint(6u), (uint(6u)) ^ uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(69.58), _GLF_FUZZED((-3.2 + 4.9))), bvec2(false, false))).x))), _GLF_IDENTITY(uint(6u), (uint(6u)) - _GLF_IDENTITY(0u, ~ (~ (0u)))))), (((1u << _GLF_IDENTITY(uint(6u), uint(_GLF_IDENTITY(6u, uint(uvec2(6u, _GLF_IDENTITY(1u, uint(uvec4(1u, uint(_GLF_ZERO(0.0, injectionSwitch.x)), uint(_GLF_ONE(1.0, injectionSwitch.y)), 0u))))))))) >> _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(uint(6u), (uint(6u)) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x))), uint(uvec2(_GLF_IDENTITY(uint(6u), (uint(6u)) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x))), 1u))), _GLF_IDENTITY(uint(6u), (uint(6u)) - _GLF_IDENTITY(0u, ~ (~ (0u))))))) - 0u)) / ((1u << _GLF_IDENTITY(uint(2u), _GLF_IDENTITY(uint(2u), clamp(uint(2u), uint(2u), uint(2u))))) >> _GLF_IDENTITY(uint(2u), uint(2u)))), ((uint(_GLF_ONE(1.0, injectionSwitch.y)) << _GLF_IDENTITY(uint(3u), uint(3u))) >> _GLF_IDENTITY(uint(_GLF_IDENTITY(3u, (3u) << uint(_GLF_ZERO(0.0, injectionSwitch.x)))), uint(3u))), 0u))))) + ((subgroup_local_id + _GLF_IDENTITY(1, ~ (~ (1)))) % _GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(clamp(subgroup_size, subgroup_size, _GLF_IDENTITY(subgroup_size, clamp(subgroup_size, _GLF_IDENTITY(subgroup_size, 0u + (subgroup_size)), subgroup_size))), (clamp(subgroup_size, subgroup_size, _GLF_IDENTITY(subgroup_size, clamp(subgroup_size, _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, 0u + (subgroup_size)), (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, min(subgroup_size, subgroup_size)), 0u + (subgroup_size))) / 1u), subgroup_size)))) / 1u)));
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))), ! (! (_GLF_DEAD(_GLF_IDENTITY(false, (false) || false))))), bool(bvec3(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))), ! (! (_GLF_DEAD(_GLF_IDENTITY(false, (false) || false))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))
    barrier();
   barrier();
  }
 atomicStore(buf[virtual_gid], uint(1), _GLF_IDENTITY(4, _GLF_IDENTITY((4), max((4), _GLF_IDENTITY((4), ((4)) >> 0))) / (_GLF_IDENTITY((1 << _GLF_IDENTITY(int(6), int(6))), ((1 << _GLF_IDENTITY(int(6), int(6)))) << int(_GLF_ZERO(0.0, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), injectionSwitch)).x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x))))) >> _GLF_IDENTITY(int(6), int(6)))), 64, 4);
 atomicStore(buf[next_virtual_gid], uint(2), 4, 64, 4);
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(_GLF_IDENTITY(! (false), (! (false)) && true), bool(bvec3(_GLF_IDENTITY(! (false), _GLF_IDENTITY(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (true)) && (! (false))), _GLF_IDENTITY(false, ! (! (false))), _GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, bool(bvec4(false, true, false, _GLF_IDENTITY(true, ! (! (true))))))), ! (! (! (_GLF_IDENTITY(false, bool(bvec4(false, true, false, _GLF_IDENTITY(true, _GLF_IDENTITY(! (! (true)), false || (_GLF_IDENTITY(! (! (true)), bool(bool(! (! (true)))))))))))))))))) && true)))))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (_GLF_IDENTITY(! (false), ! (_GLF_IDENTITY(! (! (false)), (! (! (false))) && true))))))))))), ! (_GLF_IDENTITY(! (false), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(! (_GLF_IDENTITY(false, (false) && true)), _GLF_IDENTITY(true, false || (true)) && (! (false))), false, _GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(bvec4(false, true, false, true))))))) && true))), (bool(bvec3(_GLF_IDENTITY(! (false), true && (! (false))), false, _GLF_IDENTITY(false, _GLF_IDENTITY((_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(bvec4(false, true, false, true))))))), bool(bvec4((_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec2(_GLF_IDENTITY(bvec2(bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bvec2(bvec4(bvec2(bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true, false))))))), true, false, true))))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) && true)))) && true))))))), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x)) > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && _GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, (true) && true)))))))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((false), ! (_GLF_IDENTITY(! ((false)), true && (! ((false))))))))))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) || false)))))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! _GLF_IDENTITY((! (_GLF_DEAD(false))), bool(bvec2(_GLF_IDENTITY((! (_GLF_DEAD(false))), (_GLF_IDENTITY((! (_GLF_DEAD(false))), true && ((! (_GLF_DEAD(false)))))) && true), false)))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
}
