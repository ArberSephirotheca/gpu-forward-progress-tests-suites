#version 460
struct _GLF_struct_12 {
 mat3 _f0;
 bvec2 _f1;
} ;

struct _GLF_struct_11 {
 ivec3 _f0;
 ivec3 _f1;
 mat2x3 _f2;
 vec3 _f3;
} ;

struct _GLF_struct_10 {
 int _f0;
 float _f1;
 bvec4 _f2;
 vec4 _f3;
 uvec3 _f4;
} ;

struct _GLF_struct_13 {
 _GLF_struct_10 _f0;
 _GLF_struct_11 _f1;
 bvec2 _f2;
 _GLF_struct_12 _f3;
 uvec3 _f4;
 vec4 _f5;
} ;

struct _GLF_struct_8 {
 mat2x3 _f0;
 mat3x2 _f1;
 mat4 _f2;
} ;

struct _GLF_struct_7 {
 bool _f0;
 ivec2 _f1;
 bvec2 _f2;
 ivec2 _f3;
 mat4x2 _f4;
 mat3 _f5;
 uvec2 _f6;
} ;

struct _GLF_struct_6 {
 vec4 _f0;
 ivec3 _f1;
 bool _f2;
 vec3 _f3;
} ;

struct _GLF_struct_5 {
 vec4 _f0;
} ;

struct _GLF_struct_9 {
 _GLF_struct_5 _f0;
 vec2 _f1;
 _GLF_struct_6 _f2;
 mat4x3 _f3;
 mat4 _f4;
 _GLF_struct_7 _f5;
 _GLF_struct_8 _f6;
} ;

struct _GLF_struct_14 {
 _GLF_struct_9 _f0;
 uint subgroup_local_id;
 _GLF_struct_13 _f1;
} ;

struct _GLF_struct_2 {
 mat3x2 _f0;
 mat2x3 _f1;
 uvec3 _f2;
 bvec2 _f3;
 mat2 _f4;
 vec4 _f5;
} ;

struct _GLF_struct_3 {
 float _f0;
 _GLF_struct_2 _f1;
 bvec3 _f2;
 vec4 _f3;
} ;

struct _GLF_struct_0 {
 mat3x4 _f0;
 uvec4 _f1;
 float _f2;
 vec2 _f3;
 uvec3 _f4;
 bvec4 _f5;
 uint workgroup_id;
} ;

struct _GLF_struct_1 {
 mat2 _f0;
 _GLF_struct_0 _f1;
 bvec4 _f2;
} ;

struct _GLF_struct_4 {
 _GLF_struct_1 _f0;
 vec2 _f1;
 _GLF_struct_3 _f2;
} ;

layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 uint subgroup_id = gl_SubgroupID;
 uint subgroup_size = gl_SubgroupSize;
 _GLF_struct_14 _GLF_struct_replacement_14 = _GLF_struct_14(_GLF_struct_9(_GLF_struct_5(vec4(1.0)), vec2(1.0), _GLF_struct_6(vec4(1.0), ivec3(1), true, vec3(1.0)), mat4x3(1.0), mat4(1.0), _GLF_struct_7(true, ivec2(1), bvec2(true), ivec2(1), mat4x2(1.0), mat3(1.0), uvec2(1u)), _GLF_struct_8(mat2x3(1.0), mat3x2(1.0), mat4(1.0))), gl_SubgroupInvocationID, _GLF_struct_13(_GLF_struct_10(1, 1.0, bvec4(true), vec4(1.0), uvec3(1u)), _GLF_struct_11(ivec3(1), ivec3(1), mat2x3(1.0), vec3(1.0)), bvec2(true), _GLF_struct_12(mat3(1.0), bvec2(true)), uvec3(1u), vec4(1.0)));
 uint num_workgroup = gl_NumWorkGroups.x;
 uint workgroup_size = gl_WorkGroupSize.x;
 _GLF_struct_4 _GLF_struct_replacement_4 = _GLF_struct_4(_GLF_struct_1(mat2(1.0), _GLF_struct_0(mat3x4(1.0), uvec4(1u), 1.0, vec2(1.0), uvec3(1u), bvec4(true), gl_WorkGroupID.x), bvec4(true)), vec2(1.0), _GLF_struct_3(1.0, _GLF_struct_2(mat3x2(1.0), mat2x3(1.0), uvec3(1u), bvec2(true), mat2(1.0), vec4(1.0)), bvec3(true), vec4(1.0)));
 uint workgroup_base = workgroup_size * _GLF_struct_replacement_4._f0._f1.workgroup_id;
 uint virtual_gid = workgroup_base + subgroup_id * subgroup_size + _GLF_struct_replacement_14.subgroup_local_id;
 uint next_virtual_gid = workgroup_base + subgroup_id * subgroup_size + ((_GLF_struct_replacement_14.subgroup_local_id + 1) % subgroup_size);
 uint read_1 = atomicLoad(buf[virtual_gid], 4, 64, 0);
 atomicStore(buf[next_virtual_gid], uint(read_1 + 1), 4, 64, 4);
 uint read_2 = atomicLoad(buf[virtual_gid], 4, 64, 0);
 if(_GLF_struct_replacement_14.subgroup_local_id + 1 < subgroup_size)
  {
   int i = 0;
   atomicStore(buf[next_virtual_gid], uint(read_1 + 1 == read_2) + 1, 4, 64, 4);
  }
 else
  {
   atomicStore(buf[next_virtual_gid], uint(read_1 + 1 == read_2) + 1, 4, 64, 4);
  }
}
