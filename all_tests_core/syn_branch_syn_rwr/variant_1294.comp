#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


struct _GLF_struct_9 {
 vec2 _f0;
 mat4x2 _f1;
 mat2 _f2;
 int _f3;
} ;

struct _GLF_struct_8 {
 mat4x2 _f0;
} ;

struct _GLF_struct_7 {
 int _f0;
 mat3 _f1;
 ivec2 _f2;
 uint next_virtual_gid;
} ;

struct _GLF_struct_10 {
 _GLF_struct_7 _f0;
 vec3 _f1;
 _GLF_struct_8 _f2;
 bvec3 _f3;
 mat4x2 _f4;
 _GLF_struct_9 _f5;
} ;

struct _GLF_struct_5 {
 mat4x3 _f0;
} ;

struct _GLF_struct_4 {
 bvec2 _f0;
 ivec2 _f1;
 vec2 _f2;
 uint _f3;
 mat4x2 _f4;
 bool _f5;
} ;

struct _GLF_struct_3 {
 mat4x2 _f0;
 ivec2 _f1;
 bvec3 _f2;
 uint _f3;
 float _f4;
} ;

struct _GLF_struct_6 {
 _GLF_struct_3 _f0;
 vec4 _f1;
 _GLF_struct_4 _f2;
 bool _f3;
 _GLF_struct_5 _f4;
} ;

struct _GLF_struct_11 {
 _GLF_struct_6 _f0;
 mat2x3 _f1;
 vec4 _f2;
 _GLF_struct_10 _f3;
 bool _f4;
 bvec3 _f5;
} ;

struct _GLF_struct_0 {
 bool _f0;
 mat4 _f1;
 uint subgroup_local_id;
 mat2x4 _f2;
} ;

struct _GLF_struct_1 {
 bool _f0;
 _GLF_struct_0 _f1;
 bool _f2;
} ;

struct _GLF_struct_2 {
 uvec3 _f0;
 _GLF_struct_1 _f1;
 mat2x4 _f2;
 mat3x4 _f3;
} ;

layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, true, _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ! (_GLF_IDENTITY(! ((injectionSwitch.x < injectionSwitch.y)), false || (! ((injectionSwitch.x < injectionSwitch.y)))))))), _GLF_IDENTITY(bvec3(bvec3(bvec3(false, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), _GLF_IDENTITY(bvec3(bvec3(bvec3(bvec3(bvec3(false, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), _GLF_IDENTITY(bvec3(bvec4(bvec3(bvec3(bvec3(bvec3(bvec3(false, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), false)), bvec3(bvec4(bvec3(bvec4(bvec3(bvec3(bvec3(bvec3(bvec3(false, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), false)), false))))))))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, true)))))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))))))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY((false), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2((false), false), bvec2(bvec2(bvec2((false), false))))), bool(bvec4(_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2((false), false), bvec2(bvec2(bvec2((false), false))))), ! (! (bool(_GLF_IDENTITY(bvec2((false), false), bvec2(bvec2(bvec2((false), false)))))))), true, false, false)))) || false), ! (! (false))), false, false, false)))), false || (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY((false), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2((false), false), bvec2(bvec2(bvec2((false), false))))), bool(bvec4(_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2((false), false), bvec2(bvec2(bvec2((false), false))))), ! (! (bool(_GLF_IDENTITY(bvec2((false), false), bvec2(bvec2(bvec2((false), false)))))))), true, false, false)))) || false), ! (! (false))), false, false, false)))), ! (! (_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY((false), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2((false), false), bvec2(bvec2(bvec2((false), false))))), bool(bvec4(_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2((false), false), bvec2(bvec2(bvec2((false), false))))), ! (! (bool(_GLF_IDENTITY(bvec2((false), false), bvec2(bvec2(bvec2((false), false)))))))), true, false, false)))) || false), ! (! (false))), false || (_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY((false), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2((false), false), bvec2(bvec2(bvec2((false), false))))), bool(bvec4(_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2((false), false), bvec2(bvec2(bvec2((false), false))))), ! (! (bool(_GLF_IDENTITY(bvec2((false), false), bvec2(bvec2(bvec2((false), false)))))))), true, false, false)))) || false), ! (! (false))))), false, false, false))))))))))
  barrier();
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(false))
  barrier();
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) && true), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / cos(0.0))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(vec3(injectionSwitch, _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(75.52)), bool(false)))))).y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(mat2x4(injectionSwitch.y, 0.0, 1.0, 0.0, length(vec2(0.0, 0.0)), 0.0, 0.0, sqrt(0.0))))))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, true, true, false)))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(vec3(-1.2, -27.64, 3.3).x) : injectionSwitch.y)), _GLF_IDENTITY(bool(bvec2(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(vec3(-1.2, -27.64, 3.3).x) : injectionSwitch.y)), true)), _GLF_IDENTITY((bool(bvec2(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(vec3(-1.2, -27.64, 3.3).x) : injectionSwitch.y)), true))) && true, (_GLF_IDENTITY(_GLF_IDENTITY((bool(bvec2(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(_GLF_IDENTITY(vec3(-1.2, -27.64, 3.3), clamp(vec3(-1.2, -27.64, 3.3), vec3(-1.2, -27.64, 3.3), _GLF_IDENTITY(vec3(-1.2, -27.64, 3.3), (vec3(-1.2, -27.64, 3.3)) - vec3(0.0, 0.0, 0.0)))).x) : injectionSwitch.y)), true))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3((bool(bvec2(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(_GLF_IDENTITY(vec3(-1.2, -27.64, 3.3), clamp(vec3(-1.2, -27.64, 3.3), vec3(-1.2, -27.64, 3.3), _GLF_IDENTITY(vec3(-1.2, -27.64, 3.3), (vec3(-1.2, -27.64, 3.3)) - vec3(0.0, 0.0, 0.0)))).x) : injectionSwitch.y)), true))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec3(bvec3(bvec3((bool(bvec2(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(_GLF_IDENTITY(vec3(-1.2, -27.64, 3.3), clamp(vec3(-1.2, -27.64, 3.3), vec3(-1.2, -27.64, 3.3), _GLF_IDENTITY(vec3(-1.2, -27.64, 3.3), (vec3(-1.2, -27.64, 3.3)) - vec3(0.0, 0.0, 0.0)))).x) : injectionSwitch.y)), true))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), (bool(_GLF_IDENTITY(bvec3((bool(bvec2(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(_GLF_IDENTITY(vec3(-1.2, -27.64, 3.3), clamp(vec3(-1.2, -27.64, 3.3), vec3(-1.2, -27.64, 3.3), _GLF_IDENTITY(vec3(-1.2, -27.64, 3.3), (vec3(-1.2, -27.64, 3.3)) - vec3(0.0, 0.0, 0.0)))).x) : injectionSwitch.y)), true))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec3(bvec3(bvec3((bool(bvec2(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(_GLF_IDENTITY(vec3(-1.2, -27.64, 3.3), clamp(vec3(-1.2, -27.64, 3.3), vec3(-1.2, -27.64, 3.3), _GLF_IDENTITY(vec3(-1.2, -27.64, 3.3), (vec3(-1.2, -27.64, 3.3)) - vec3(0.0, 0.0, 0.0)))).x) : injectionSwitch.y)), true))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))) || false)) && true, ! (! ((bool(bvec2(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + 0.0) > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(vec3(-1.2, -27.64, 3.3).x) : injectionSwitch.y)), min(_GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(vec3(-1.2, -27.64, 3.3).x) : injectionSwitch.y)), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(vec3(-1.2, -27.64, 3.3).x) : injectionSwitch.y)), _GLF_IDENTITY(float(mat4(_GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(vec3(-1.2, -27.64, 3.3).x) : injectionSwitch.y)), 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, _GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(1.0, 1.0, 0.0)), dot(vec3(0.0, 0.0, 1.0), vec3(1.0, 1.0, 0.0))), 1.0, 0.0, 1.0, 1.0)), clamp(float(mat4(_GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(vec3(-1.2, -27.64, 3.3).x) : injectionSwitch.y)), 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, _GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(1.0, 1.0, 0.0)), dot(vec3(0.0, 0.0, 1.0), vec3(1.0, 1.0, 0.0))), 1.0, 0.0, 1.0, 1.0)), float(mat4(_GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(vec3(-1.2, -27.64, 3.3).x) : injectionSwitch.y)), 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, _GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(1.0, 1.0, 0.0)), dot(vec3(0.0, _GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, (0.0) - 0.0)) * determinant(mat4(1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0))), 1.0), vec3(1.0, 1.0, 0.0))), _GLF_IDENTITY(1.0, clamp(1.0, _GLF_IDENTITY(1.0, float(vec2(1.0, determinant(mat2(1.0, 0.0, 0.0, 1.0))))), 1.0)), 0.0, 1.0, 1.0)), float(mat4(_GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(vec3(-1.2, -27.64, 3.3).x) : _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)))), 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, _GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(1.0, 1.0, 0.0)), dot(vec3(0.0, 0.0, 1.0), vec3(1.0, 1.0, 0.0))), 1.0, 0.0, 1.0, 1.0))))))), true))) && true)))) || false)))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x, mix(float(_GLF_FUZZED(vec2(2226.6573, 472.150).r)), float(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x), bool(true))) > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 _GLF_struct_2 _GLF_struct_replacement_2 = _GLF_struct_2(uvec3(1u), _GLF_struct_1(_GLF_IDENTITY(true, (_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, ! (! (true))))))) && true), _GLF_struct_0(true, mat4(1.0), gl_SubgroupInvocationID, mat2x4(1.0)), _GLF_IDENTITY(true, ! (! _GLF_IDENTITY((true), bool(bvec4(_GLF_IDENTITY((true), _GLF_IDENTITY(! (! ((true))), ! (! (_GLF_IDENTITY(! (! ((true))), (_GLF_IDENTITY(! (! ((_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, ! (! (true))))))))), true && (! (! ((_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, ! (! (true)))))))))))) && true))))), false, _GLF_IDENTITY(true, ! (_GLF_IDENTITY(! _GLF_IDENTITY((true), ((true)) || false), bool(bvec2(! (true), false))))), true)))))), mat2x4(1.0), mat3x4(1.0));
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint num_workgroup = gl_NumWorkGroups.x;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)), (injectionSwitch) * mat2(_GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, min(1.0, 1.0))) + 0.0), _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(35.45) : 1.0)), _GLF_IDENTITY(1.0, (1.0) / 1.0))))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(float(18293u)), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(11.21)), bvec2(true, false))), (_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (! (! (false))))) ? _GLF_FUZZED(unpackHalf2x16(num_workgroup)) : injectionSwitch)))).y))), ! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)), _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), false || (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), (_GLF_IDENTITY(false, ! (! (false)))) || false))), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, false)), ! (! (bool(bvec2(false, false))))))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! (! (false)))), bool(bvec2(! (_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), (! (! (false))) || false))), false))))), false, true, false)), ! (! (_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! (! (false)))), bool(bvec2(_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! (! (false)))), bool(bvec2(_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! (! (false)))), bool(bvec4(! (_GLF_IDENTITY(false, ! (! (false)))), true, true, false))), false))), false))))), false, true, false)), bool(bvec3(bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! (! (false)))), bool(bvec2(! (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), ! (! (bool(false)))))))))) && true)), _GLF_IDENTITY(false, (false) || false)))))), false, true, false)), false, true))))))) ? _GLF_FUZZED(unpackHalf2x16(num_workgroup)) : injectionSwitch)))).y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)), _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(false, ! (! (false))) ? _GLF_FUZZED(unpackHalf2x16(num_workgroup)) : injectionSwitch)))).y))))))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), injectionSwitch)).y))), false || (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), injectionSwitch)).y))))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).x > injectionSwitch.y)), (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).x > injectionSwitch.y))) || false)))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    barrier();
   barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(bool(bool(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), ! (! (bool(bool(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))))))))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)) : _GLF_FUZZED(vec2(4.8, 6.8)))))).x, sqrt(1.0) * (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x)) > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED((2.0 - 6.6))), float(injectionSwitch.y), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y))))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec2((injectionSwitch.x > injectionSwitch.y), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))
        barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)), _GLF_IDENTITY((bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))) || false, bool(bvec3((bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))) || false, true, true)))))))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bvec4(injectionSwitch.x > injectionSwitch.y, false, false, false)), (bool(bvec4(injectionSwitch.x > injectionSwitch.y, false, false, false))) || false))))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec3(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, false)))))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, false || (false))))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(54.15)), float(injectionSwitch.x), bool(true))) > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 uint workgroup_size = gl_WorkGroupSize.x;
 if(_GLF_DEAD(false))
  barrier();
 uint workgroup_id = gl_WorkGroupID.x;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
    barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, false || (false))) && true)))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y)))) && true))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) && true)))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), bool(bvec4(! (_GLF_DEAD(false)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, false))))))
        barrier();
       barrier();
       if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
        barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y))))))
      barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, _GLF_IDENTITY(_GLF_IDENTITY(true, true && (true)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(true, true && (true))), true && (! (_GLF_IDENTITY(true, true && (true)))))))), bvec2(bvec3(bvec2(false, true), true)))))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, _GLF_IDENTITY(_GLF_IDENTITY(true, true && (true)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(true, true && (true))), true && (! (_GLF_IDENTITY(true, true && (true)))))))), bvec2(bvec3(bvec2(false, true), true)))))), ! (! (_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, _GLF_IDENTITY(_GLF_IDENTITY(true, _GLF_IDENTITY(true, true && (true)) && (true)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(true, true && (true)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(true, true && (true))), true && (! (_GLF_IDENTITY(true, true && (true)))))))), true && (! (_GLF_IDENTITY(true, true && (true)))))))), bvec2(bvec3(bvec2(false, true), true)))))))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
  barrier();
 uint workgroup_base = workgroup_size * workgroup_id;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, ! (! (false))))), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(6.9), _GLF_FUZZED(0.1)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true)))) - vec2(0.0, 0.0)).y, _GLF_IDENTITY(true && (injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY(true && _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec2((injectionSwitch.x > injectionSwitch.y), true)))) || false))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(true && _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec2((injectionSwitch.x > injectionSwitch.y), true)))) || false))), true && (true && _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY((_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec2(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec2(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4((injectionSwitch.x > injectionSwitch.y), true, true, false))), true))), true)))), bool(bvec2((_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec2(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec2(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4((injectionSwitch.x > injectionSwitch.y), true, true, false))), true))), true)))), false))) || false)))))))) || false)), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(6.9), _GLF_FUZZED(0.1)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true)))) - vec2(0.0, 0.0)).y, _GLF_IDENTITY(true && (injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY(true && _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec2((injectionSwitch.x > injectionSwitch.y), true)))) || false))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(true && _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec2((injectionSwitch.x > injectionSwitch.y), true)))) || false))), true && (true && _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY((_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec2(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec2(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4((injectionSwitch.x > injectionSwitch.y), true, true, false))), true))), true)))), bool(bvec2((_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec2(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec2(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4((injectionSwitch.x > injectionSwitch.y), true, true, false))), true))), true)))), false))) || false)))))))) || false)), true), _GLF_IDENTITY(bvec2(bvec4(bvec2(_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(6.9), _GLF_FUZZED(0.1)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true)))) - vec2(0.0, 0.0)).y, _GLF_IDENTITY(true && (injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY(true && _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec2((injectionSwitch.x > injectionSwitch.y), true)))) || false))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(true && _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec2((injectionSwitch.x > injectionSwitch.y), true)))) || false))), true && (true && _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY((_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec2(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec2(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4((injectionSwitch.x > injectionSwitch.y), true, true, false))), true))), true)))), bool(bvec2((_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec2(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec2(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4((injectionSwitch.x > injectionSwitch.y), true, true, false))), true))), true)))), false))) || false)))))))) || false)), true), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)), bvec2(bvec3(bvec2(bvec4(bvec2(_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(6.9), _GLF_FUZZED(0.1)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true)))) - vec2(0.0, 0.0)).y, _GLF_IDENTITY(true && (injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY(true && _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec2((injectionSwitch.x > injectionSwitch.y), true)))) || false))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(true && _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec2((injectionSwitch.x > injectionSwitch.y), true)))) || false))), true && (true && _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY((_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec2(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec2(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4((injectionSwitch.x > injectionSwitch.y), true, true, false))), true))), true)))), bool(bvec2((_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec2(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec2(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4((injectionSwitch.x > injectionSwitch.y), true, true, false))), true))), true)))), false))) || false)))))))) || false)), true), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)), true))))), bool(bvec3(bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(6.9), _GLF_FUZZED(0.1)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true)))) - vec2(0.0, 0.0)).y, _GLF_IDENTITY(true && (injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY(true && _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec2((injectionSwitch.x > injectionSwitch.y), true)))) || false))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(true && _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec2((injectionSwitch.x > injectionSwitch.y), true)))) || false))), true && (true && _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY((_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec2(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec2(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4((injectionSwitch.x > injectionSwitch.y), true, true, false))), true))), true)))), bool(bvec2((_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec2(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec2(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4((injectionSwitch.x > injectionSwitch.y), true, true, false))), true))), true)))), false))) || false)))))))) || false)), true), _GLF_IDENTITY(bvec2(bvec4(bvec2(_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(6.9), _GLF_FUZZED(0.1)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true)))) - vec2(0.0, 0.0)).y, _GLF_IDENTITY(true && (injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY(true && _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec2((injectionSwitch.x > injectionSwitch.y), true)))) || false))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(true && _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec2((injectionSwitch.x > injectionSwitch.y), true)))) || false))), true && (true && _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY((_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec2(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec2(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4((injectionSwitch.x > injectionSwitch.y), true, true, false))), true))), true)))), bool(bvec2((_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec2(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec2(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4((injectionSwitch.x > injectionSwitch.y), true, true, false))), true))), true)))), false))) || false)))))))) || false)), true), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)), bvec2(bvec3(bvec2(bvec4(bvec2(_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(6.9), _GLF_FUZZED(0.1)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true)))) - vec2(0.0, 0.0)).y, _GLF_IDENTITY(true && (injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY(true && _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec2((injectionSwitch.x > injectionSwitch.y), true)))) || false))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(true && _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec2((injectionSwitch.x > injectionSwitch.y), true)))) || false))), true && (true && _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY((_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec2(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec2(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4((injectionSwitch.x > injectionSwitch.y), true, true, false))), true))), true)))), bool(bvec2((_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec2(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec2(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4((injectionSwitch.x > injectionSwitch.y), true, true, false))), true))), true)))), false))) || false)))))))) || false)), true), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)), true))))), false, true)))), bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[_GLF_IDENTITY(0, (0) | 0)], max(injectionSwitch[0], injectionSwitch[0])), injectionSwitch[1])), (_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], max(injectionSwitch[0], injectionSwitch[0])), injectionSwitch[1]))) / cos(vec2(0.0, 0.0))))).y, _GLF_IDENTITY(true && (injectionSwitch.x > injectionSwitch.y), (true && _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y)))) || false)), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(true && (injectionSwitch.x > injectionSwitch.y), (true && _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y))), true && ((injectionSwitch.x > injectionSwitch.y)))) || false))) || false), false, false, true)))) || false)))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(_GLF_IDENTITY(mat3x4(injectionSwitch, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(1.0, _GLF_IDENTITY(float(vec2(_GLF_IDENTITY(1.0, float(_GLF_IDENTITY(mat4(1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, sin(0.0), 1.0, 1.0, 0.0, round(length(normalize(vec2(1.0, 1.0)))), 0.0), mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0) + (mat4(1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, sin(0.0), 1.0, 1.0, 0.0, round(length(normalize(vec2(1.0, 1.0)))), 0.0))))), 0.0)), (float(vec2(_GLF_IDENTITY(1.0, float(_GLF_IDENTITY(mat4(1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, sin(0.0), 1.0, 1.0, 0.0, round(length(normalize(vec2(1.0, 1.0)))), 0.0), mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0) + (mat4(1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, sin(0.0), 1.0, 1.0, 0.0, round(length(normalize(vec2(1.0, 1.0)))), 0.0))))), 0.0))) + 0.0)), 0.0), (mat3x4(injectionSwitch, 1.0, _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, _GLF_IDENTITY(0.0, (0.0) * 1.0))) + mat3x4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, (_GLF_IDENTITY(true, bool(bool(true))) ? 0.0 : _GLF_FUZZED(5.6))), 0.0, 0.0, 0.0, 0.0))), min(vec2(_GLF_IDENTITY(mat3x4(injectionSwitch, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(1.0, _GLF_IDENTITY(float(vec2(_GLF_IDENTITY(1.0, float(_GLF_IDENTITY(mat4(1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, sin(0.0), 1.0, 1.0, 0.0, round(length(normalize(vec2(1.0, 1.0)))), 0.0), mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0) + (mat4(1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, sin(0.0), 1.0, 1.0, 0.0, round(length(normalize(vec2(1.0, 1.0)))), 0.0))))), 0.0)), (float(vec2(_GLF_IDENTITY(1.0, float(_GLF_IDENTITY(mat4(1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, sin(0.0), 1.0, 1.0, 0.0, round(length(normalize(vec2(1.0, 1.0)))), 0.0), mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0) + (mat4(1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, sin(0.0), 1.0, 1.0, 0.0, round(length(normalize(vec2(1.0, 1.0)))), 0.0))))), 0.0))) + 0.0)), 0.0), (mat3x4(injectionSwitch, 1.0, _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, _GLF_IDENTITY(0.0, (0.0) * 1.0))) + mat3x4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, (_GLF_IDENTITY(true, bool(bool(true))) ? 0.0 : _GLF_FUZZED(5.6))), 0.0, 0.0, 0.0, 0.0))), vec2(_GLF_IDENTITY(mat3x4(injectionSwitch, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(1.0, _GLF_IDENTITY(float(vec2(_GLF_IDENTITY(1.0, float(_GLF_IDENTITY(mat4(1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, sin(0.0), 1.0, 1.0, 0.0, round(length(normalize(vec2(1.0, 1.0)))), 0.0), mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0) + (mat4(1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, sin(0.0), 1.0, 1.0, 0.0, round(length(normalize(vec2(1.0, 1.0)))), 0.0))))), 0.0)), (float(vec2(_GLF_IDENTITY(1.0, float(_GLF_IDENTITY(mat4(1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, sin(0.0), 1.0, 1.0, 0.0, round(length(normalize(vec2(1.0, 1.0)))), 0.0), mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0) + (mat4(1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, sin(0.0), 1.0, 1.0, 0.0, round(length(normalize(vec2(1.0, 1.0)))), 0.0))))), 0.0))) + 0.0)), 0.0), (mat3x4(injectionSwitch, 1.0, _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, _GLF_IDENTITY(0.0, (0.0) * 1.0))) + mat3x4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, (_GLF_IDENTITY(true, bool(bool(true))) ? 0.0 : _GLF_FUZZED(5.6))), 0.0, 0.0, 0.0, 0.0)))))).x > injectionSwitch.y))))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))))), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)))))) && true), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, true)), true && (bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)))))) && true), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, true))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) && true), (_GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)), mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-51.83)), vec2(_GLF_FUZZED(7.8), (injectionSwitch)[1]), bvec2(false, true))) : _GLF_FUZZED(asinh(reflect(injectionSwitch, injectionSwitch))))).x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, round(length(normalize(1.0))) * (injectionSwitch.x)) > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint virtual_gid = _GLF_IDENTITY(workgroup_base, max(workgroup_base, workgroup_base)) + _GLF_IDENTITY(subgroup_id, max(subgroup_id, subgroup_id)) * subgroup_size + _GLF_struct_replacement_2._f1._f1.subgroup_local_id;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), injectionSwitch)), max(_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), injectionSwitch)), mat2(1.0) * (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))), _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)))), _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), injectionSwitch)))).x > injectionSwitch.y), bool(_GLF_IDENTITY(bvec2((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(max(injectionSwitch, injectionSwitch), (_GLF_IDENTITY(max(injectionSwitch, injectionSwitch), vec2(mat2x3(max(injectionSwitch, injectionSwitch), 1.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0)))) * vec2(1.0, 1.0))), injectionSwitch)), max(_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], float(mat2x3(injectionSwitch[0], 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 0.0, abs(0.0)))), injectionSwitch[1])), injectionSwitch)), injectionSwitch)), _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(max(injectionSwitch, injectionSwitch), vec2(vec2(_GLF_IDENTITY(max(injectionSwitch, injectionSwitch), mix(vec2(_GLF_FUZZED(-89.51), (max(injectionSwitch, injectionSwitch))[1]), vec2((max(injectionSwitch, injectionSwitch))[0], _GLF_FUZZED(-1.4)), bvec2(true, false))))))), _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - _GLF_IDENTITY(vec2(0.0, 0.0), (vec2(0.0, 0.0)) * mat2(1.0)))) / vec2(1.0, 1.0)))))).x > injectionSwitch.y), _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch))) * vec2(1.0, 1.0)).y))), bvec2(bvec3(bvec2((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), injectionSwitch)), max(_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), injectionSwitch)), _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)), max(injectionSwitch, injectionSwitch)), injectionSwitch)))).x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(float(6732u))), float(injectionSwitch.y), bool(true)))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true))))))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), ((injectionSwitch) * mat2(1.0)) - vec2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)))).x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 _GLF_struct_11 _GLF_struct_replacement_11 = _GLF_struct_11(_GLF_struct_6(_GLF_struct_3(mat4x2(1.0), ivec2(1), _GLF_IDENTITY(_GLF_IDENTITY(bvec3(true), bvec3(bvec4(_GLF_IDENTITY(bvec3(true), bvec3(bvec4(bvec3(true), true))), true))), bvec3(bvec3(bvec3(true)))), _GLF_IDENTITY(1u, clamp(_GLF_IDENTITY(1u, 0u ^ _GLF_IDENTITY((_GLF_IDENTITY(1u, uint(uvec2(1u, 0u)))), max((_GLF_IDENTITY(1u, uint(uvec2(1u, 0u)))), (_GLF_IDENTITY(1u, uint(_GLF_IDENTITY(uvec2(1u, 0u), (uvec2(1u, 0u)) << (uvec2(0u, 0u) >> _GLF_IDENTITY(uvec2(8u), _GLF_IDENTITY(uvec2(8u), (false ? _GLF_FUZZED(uvec2(125388u, 90300u)) : uvec2(8u)))))))))))), 1u, 1u)), _GLF_IDENTITY(1.0, _GLF_IDENTITY((_GLF_IDENTITY(false ? _GLF_FUZZED(9.8) : _GLF_IDENTITY(1.0, max(1.0, 1.0)), (false ? _GLF_FUZZED(9.8) : _GLF_IDENTITY(1.0, max(1.0, 1.0))) - _GLF_ZERO(0.0, injectionSwitch.x))), max((false ? _GLF_FUZZED(9.8) : _GLF_IDENTITY(1.0, max(1.0, 1.0))), (false ? _GLF_FUZZED(_GLF_IDENTITY(9.8, 1.0 * (9.8))) : _GLF_IDENTITY(1.0, max(1.0, 1.0))))))), vec4(1.0), _GLF_struct_4(bvec2(true), ivec2(1), vec2(1.0), 1u, mat4x2(1.0), true), true, _GLF_struct_5(mat4x3(1.0))), mat2x3(1.0), _GLF_IDENTITY(vec4(1.0), _GLF_IDENTITY((vec4(1.0)), clamp(_GLF_IDENTITY((vec4(1.0)), (false ? _GLF_FUZZED(round(vec4(666.168, 8183.3021, 5.9, -5.8))) : (vec4(1.0)))), (vec4(1.0)), (vec4(1.0)))) - vec4(0.0, 0.0, 0.0, 0.0)), _GLF_struct_10(_GLF_struct_7(1, mat3(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, _GLF_IDENTITY(1.0, min(1.0, _GLF_IDENTITY(1.0, _GLF_IDENTITY(1.0, max(1.0, 1.0)) * (_GLF_IDENTITY(1.0, max(1.0, 1.0))))))))), _GLF_IDENTITY(ivec2(1), (ivec2(1)) * ivec2(1, 1)), workgroup_base + subgroup_id * subgroup_size + (_GLF_IDENTITY((_GLF_struct_replacement_2._f1._f1.subgroup_local_id + 1), (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_struct_replacement_2._f1._f1.subgroup_local_id + 1), _GLF_IDENTITY(((_GLF_IDENTITY(_GLF_struct_replacement_2._f1._f1.subgroup_local_id, 0u ^ (_GLF_struct_replacement_2._f1._f1.subgroup_local_id)) + 1)), (((_GLF_IDENTITY(_GLF_struct_replacement_2._f1._f1.subgroup_local_id, 0u ^ (_GLF_struct_replacement_2._f1._f1.subgroup_local_id)) + 1))) >> 0u) | ((_GLF_IDENTITY(_GLF_struct_replacement_2._f1._f1.subgroup_local_id, uint(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(_GLF_struct_replacement_2._f1._f1.subgroup_local_id, (_GLF_struct_replacement_2._f1._f1.subgroup_local_id) | (_GLF_struct_replacement_2._f1._f1.subgroup_local_id)), 0u, 1u), (uvec3(_GLF_IDENTITY(_GLF_struct_replacement_2._f1._f1.subgroup_local_id, (_GLF_struct_replacement_2._f1._f1.subgroup_local_id) | (_GLF_struct_replacement_2._f1._f1.subgroup_local_id)), 0u, 1u)) ^ uvec3(0u, 0u, 0u)))) + 1))), max((_GLF_struct_replacement_2._f1._f1.subgroup_local_id + 1), (_GLF_struct_replacement_2._f1._f1.subgroup_local_id + 1)))) | ((_GLF_struct_replacement_2._f1._f1.subgroup_local_id + 1))) % subgroup_size)), _GLF_IDENTITY(vec3(1.0), clamp(_GLF_IDENTITY(vec3(1.0), vec3(1.0, 1.0, 1.0) * (vec3(1.0))), vec3(1.0), vec3(_GLF_IDENTITY(_GLF_IDENTITY(1.0, _GLF_IDENTITY(sqrt(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY((injectionSwitch)[0], min(_GLF_IDENTITY((injectionSwitch), (false ? _GLF_FUZZED(vec2(11.49, 9601.5865)) : (injectionSwitch)))[0], (injectionSwitch)[0])), (injectionSwitch)[1]), vec2(_GLF_FUZZED(-9720.9066), _GLF_FUZZED(9198.3694)), bvec2(false, false))).y)) * (_GLF_IDENTITY(1.0, min(1.0, _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(1.7)), bool(false)))))), clamp(sqrt(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY((injectionSwitch)[0], min((injectionSwitch)[0], (injectionSwitch)[0])), (injectionSwitch)[1]), vec2(_GLF_FUZZED(-9720.9066), _GLF_FUZZED(9198.3694)), bvec2(false, false))).y)) * (_GLF_IDENTITY(1.0, min(1.0, _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(1.7)), bool(false)))))), sqrt(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY((injectionSwitch)[0], min((injectionSwitch)[0], (injectionSwitch)[0])), (injectionSwitch)[1]), vec2(_GLF_FUZZED(-9720.9066), _GLF_FUZZED(9198.3694)), bvec2(false, false))).y)) * (_GLF_IDENTITY(1.0, min(1.0, _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(1.7)), bool(false)))))), _GLF_IDENTITY(sqrt(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY((injectionSwitch)[_GLF_IDENTITY(0, (false ? _GLF_FUZZED(12251) : 0))], _GLF_IDENTITY(min((injectionSwitch)[_GLF_IDENTITY(0, max(0, 0))], (injectionSwitch)[0]), round(length(normalize(1.0))) * (min((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch), mix(vec2(_GLF_IDENTITY(((injectionSwitch))[0], mix(float(_GLF_FUZZED(-279.759)), float(((injectionSwitch))[0]), bool(true))), _GLF_FUZZED(2.5)), vec2(_GLF_FUZZED(4888.3527), ((injectionSwitch))[1]), bvec2(_GLF_IDENTITY(false, false || (false)), true)))[0])))), (injectionSwitch)[1]), vec2(_GLF_FUZZED(_GLF_IDENTITY(-9720.9066, (-9720.9066) + 0.0)), _GLF_FUZZED(9198.3694)), bvec2(false, false))).y)) * (_GLF_IDENTITY(1.0, min(1.0, _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(1.7)), bool(false)))))), mix(float(_GLF_IDENTITY(_GLF_FUZZED(1719.9936), max(_GLF_FUZZED(1719.9936), _GLF_IDENTITY(_GLF_FUZZED(1719.9936), (_GLF_FUZZED(1719.9936)) + 0.0)))), float(_GLF_IDENTITY(sqrt(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY((injectionSwitch)[0], min((_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)))[0], (injectionSwitch)[0])), (_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)))[1]), vec2(_GLF_FUZZED(_GLF_IDENTITY(-9720.9066, (-9720.9066) + 0.0)), _GLF_FUZZED(9198.3694)), bvec2(false, false))).y)) * (_GLF_IDENTITY(1.0, min(1.0, _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(1.7)), _GLF_IDENTITY(bool(false), (bool(false)) && true)))))), float(mat4x3(sqrt(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY((injectionSwitch)[0], min((injectionSwitch)[0], (injectionSwitch)[0])), (injectionSwitch)[1]), vec2(_GLF_FUZZED(-9720.9066), _GLF_FUZZED(9198.3694)), bvec2(false, false))).y)) * (_GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, max(1.0, _GLF_IDENTITY(1.0, float(vec2(_GLF_IDENTITY(1.0, float(mat4x3(_GLF_IDENTITY(1.0, float(vec4(1.0, 1.0, 1.0, 0.0))), 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0))), 1.0))))), _GLF_IDENTITY(1.0, _GLF_IDENTITY(mix(float(1.0), float(_GLF_FUZZED(1.7)), bool(false)), (true ? _GLF_IDENTITY(mix(float(1.0), float(_GLF_FUZZED(1.7)), bool(false)), clamp(mix(float(1.0), float(_GLF_FUZZED(1.7)), bool(false)), mix(float(1.0), float(_GLF_FUZZED(1.7)), bool(false)), mix(float(1.0), float(_GLF_FUZZED(1.7)), bool(false)))) : _GLF_FUZZED(74.14))))))), 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, _GLF_IDENTITY(_GLF_IDENTITY(0.0, (0.0) / abs(1.0)), min(_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(3.3)), float(0.0), bool(true))), _GLF_IDENTITY(0.0, min(0.0, 0.0)))), 0.0, 1.0, 0.0, 1.0)))), bool(true)))))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1.0, clamp(1.0, _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-86.25)), float(1.0), bool(true))), 1.0)), _GLF_IDENTITY(sqrt(_GLF_ONE(1.0, injectionSwitch.y)), min(sqrt(_GLF_ONE(1.0, injectionSwitch.y)), sqrt(_GLF_ONE(1.0, injectionSwitch.y)))) * (_GLF_IDENTITY(1.0, min(1.0, _GLF_IDENTITY(1.0, mix(_GLF_IDENTITY(float(1.0), (_GLF_IDENTITY(float(1.0), max(float(1.0), float(1.0)))) + 0.0), float(_GLF_FUZZED(1.7)), bool(false))))))), min(_GLF_IDENTITY(1.0, sqrt(_GLF_ONE(1.0, injectionSwitch.y)) * _GLF_IDENTITY((_GLF_IDENTITY(1.0, min(1.0, _GLF_IDENTITY(1.0, _GLF_IDENTITY(mix(float(1.0), float(_GLF_FUZZED(1.7)), _GLF_IDENTITY(bool(false), bool(bvec4(bool(false), false, _GLF_IDENTITY(false, bool(bvec4(false, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) + abs(vec2(0.0, 0.0))), injectionSwitch)).x, min(injectionSwitch.x, injectionSwitch.x)), _GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(3.0)), float(injectionSwitch.x), _GLF_IDENTITY(bool(true), bool(bvec4(bool(true), false, false, true))))))) > injectionSwitch.y)), true, _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)), injectionSwitch)).y))))), false)))), clamp(mix(float(1.0), float(_GLF_FUZZED(1.7)), _GLF_IDENTITY(bool(false), bool(bvec4(bool(false), false, _GLF_IDENTITY(false, bool(bvec4(false, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) + abs(vec2(0.0, 0.0))), injectionSwitch)).x, min(injectionSwitch.x, injectionSwitch.x)), _GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(3.0)), float(injectionSwitch.x), _GLF_IDENTITY(bool(true), bool(bvec4(bool(true), false, false, true))))))) > injectionSwitch.y)), true, _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)), injectionSwitch)).y))))), false)))), mix(float(1.0), float(_GLF_FUZZED(1.7)), _GLF_IDENTITY(bool(false), bool(bvec4(bool(false), false, _GLF_IDENTITY(false, bool(bvec4(false, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) + abs(vec2(0.0, 0.0))), injectionSwitch)).x, min(injectionSwitch.x, injectionSwitch.x)), _GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(3.0)), float(injectionSwitch.x), _GLF_IDENTITY(bool(true), bool(bvec4(bool(true), false, false, true))))))) > injectionSwitch.y)), true, _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)), injectionSwitch)).y))))), false)))), _GLF_IDENTITY(mix(float(1.0), float(_GLF_FUZZED(1.7)), _GLF_IDENTITY(bool(false), bool(bvec4(bool(false), false, _GLF_IDENTITY(false, bool(bvec4(false, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) + abs(vec2(0.0, 0.0))), injectionSwitch)).x, min(injectionSwitch.x, injectionSwitch.x)), _GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(3.0)), float(injectionSwitch.x), _GLF_IDENTITY(bool(true), bool(bvec4(bool(true), false, false, true))))))) > injectionSwitch.y)), true, _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)), injectionSwitch)).y))))), false)))), min(_GLF_IDENTITY(mix(float(1.0), float(_GLF_FUZZED(1.7)), _GLF_IDENTITY(bool(false), bool(bvec4(bool(false), false, _GLF_IDENTITY(false, bool(bvec4(false, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) + abs(vec2(0.0, 0.0))), injectionSwitch)).x, min(injectionSwitch.x, injectionSwitch.x)), _GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(3.0)), float(injectionSwitch.x), _GLF_IDENTITY(bool(true), bool(bvec4(bool(true), false, false, true))))))) > injectionSwitch.y)), true, _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)), injectionSwitch)).y))))), false)))), max(mix(float(1.0), float(_GLF_FUZZED(1.7)), _GLF_IDENTITY(bool(false), bool(bvec4(bool(false), false, _GLF_IDENTITY(false, bool(bvec4(false, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) + abs(vec2(0.0, 0.0))), injectionSwitch)).x, min(injectionSwitch.x, injectionSwitch.x)), _GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(3.0)), float(injectionSwitch.x), _GLF_IDENTITY(bool(true), bool(bvec4(bool(true), false, false, true))))))) > injectionSwitch.y)), true, _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)), injectionSwitch)).y))))), false)))), mix(float(1.0), float(_GLF_FUZZED(1.7)), _GLF_IDENTITY(bool(false), bool(bvec4(bool(false), false, _GLF_IDENTITY(false, bool(bvec4(false, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) + abs(vec2(0.0, 0.0))), injectionSwitch)).x, min(injectionSwitch.x, injectionSwitch.x)), _GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(3.0)), float(injectionSwitch.x), _GLF_IDENTITY(bool(true), bool(bvec4(bool(true), false, false, true))))))) > injectionSwitch.y)), true, _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)), injectionSwitch)).y))))), false)))))), mix(float(1.0), float(_GLF_FUZZED(1.7)), _GLF_IDENTITY(bool(false), bool(bvec4(bool(false), false, _GLF_IDENTITY(false, bool(bvec4(false, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) + abs(vec2(0.0, 0.0))), injectionSwitch)).x, min(injectionSwitch.x, injectionSwitch.x)), _GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(3.0)), float(injectionSwitch.x), _GLF_IDENTITY(bool(true), bool(bvec4(bool(true), false, false, true))))))) > injectionSwitch.y)), true, _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)), injectionSwitch)).y))))), false)))))))))))), float(mat3x2(_GLF_IDENTITY((_GLF_IDENTITY(1.0, min(1.0, _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(1.7)), _GLF_IDENTITY(bool(false), bool(bvec4(bool(false), false, _GLF_IDENTITY(false, bool(bvec4(false, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), _GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(3.0)), float(injectionSwitch.x), bool(true))))) > injectionSwitch.y)), true, _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)), injectionSwitch)).y), ! (_GLF_IDENTITY(! ((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)), injectionSwitch)).y)), (! ((injectionSwitch.x < _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))), clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)), injectionSwitch)).y))) || false))))))), false)))))))), ((_GLF_IDENTITY(1.0, min(1.0, _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(_GLF_IDENTITY(1.7, float(_GLF_IDENTITY(mat3x4(1.7, _GLF_ONE(1.0, injectionSwitch.y), 0.0, sqrt(0.0), _GLF_ONE(1.0, injectionSwitch.y), abs(0.0), 0.0, 1.0, 1.0, 1.0, 1.0, 1.0), mat3x4(mat4(mat3x4(1.7, _GLF_ONE(1.0, injectionSwitch.y), 0.0, sqrt(0.0), _GLF_ONE(1.0, injectionSwitch.y), abs(0.0), 0.0, 1.0, 1.0, 1.0, 1.0, 1.0)))))))), _GLF_IDENTITY(_GLF_IDENTITY(bool(false), bool(bvec3(_GLF_IDENTITY(bool(false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (bool(false))), true, true))), bool(bvec4(_GLF_IDENTITY(bool(false), (bool(false)) && true), false, _GLF_IDENTITY(false, bool(bvec4(false, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), _GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(3.0)), float(injectionSwitch.x), bool(true))))) > injectionSwitch.y)), true, _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)), injectionSwitch)).y))))), false))))))))) + 0.0), 0.0, log(1.0), 1.0, 1.0, 1.0)))), _GLF_IDENTITY(_GLF_IDENTITY(1.0, float(_GLF_IDENTITY(mat2(_GLF_IDENTITY(1.0, (1.0) + 0.0), 1.0, 0.0, determinant(mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), 0.0))), (mat2(_GLF_IDENTITY(1.0, (1.0) + 0.0), 1.0, 0.0, determinant(mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), 0.0)))) + mat2(0.0, 0.0, 0.0, 0.0)))), sqrt(_GLF_ONE(1.0, injectionSwitch.y)) * (_GLF_IDENTITY(1.0, min(1.0, _GLF_IDENTITY(1.0, mix(float(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED((+ 6568.7747))), bool(false)))), float(_GLF_FUZZED(_GLF_IDENTITY(1.7, (1.7) + 0.0))), bool(false)))))))))) * 1.0)))), _GLF_struct_8(mat4x2(1.0)), bvec3(true), mat4x2(1.0), _GLF_struct_9(vec2(1.0), mat4x2(_GLF_IDENTITY(_GLF_IDENTITY(1.0, (1.0) / 1.0), clamp(1.0, 1.0, _GLF_IDENTITY(1.0, (1.0) - _GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, cos(0.0) * (_GLF_IDENTITY(0.0, float(mat3x4(0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0))))), 0.0)), _GLF_IDENTITY(0.0, max(0.0, 0.0)))))))), mat2(1.0), 1)), true, bvec3(true));
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), (_GLF_IDENTITY(false, true && (false))) || false)))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(-5818.4894) : injectionSwitch.x)))), injectionSwitch.x)) > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true))))), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)))
    barrier();
   barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, (false) || false), false), bvec2(bvec2(bvec2(_GLF_IDENTITY(false, (false) || false), false))))))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 uint read_1 = atomicLoad(buf[virtual_gid], 4, 64, 0);
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y))))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 atomicStore(buf[_GLF_struct_replacement_11._f3._f0.next_virtual_gid], uint(read_1 + 1), 4, _GLF_IDENTITY(64, 1 * (64)), 4);
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, false)))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(false, false || (false)) || (injectionSwitch.x > injectionSwitch.y))))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), (_GLF_IDENTITY(false, _GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) && true)) || false) || (false))) || false))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), max((injectionSwitch) * mat2(1.0), (injectionSwitch) * mat2(1.0)))).y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED((true ? float(true) : 785.781))), bool(false))) > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(injectionSwitch.x, float(_GLF_IDENTITY(mat3(injectionSwitch.x, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0), mat3(mat3(_GLF_IDENTITY(mat3(injectionSwitch.x, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0), (mat3(injectionSwitch.x, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0)) + mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)))))))), float(_GLF_FUZZED((true ? float(true) : 785.781))), bool(false))) > injectionSwitch.y)))))))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(false, (false) || false) || (_GLF_DEAD(false))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), (_GLF_IDENTITY(false, (false) && true)) && true)))), (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).x, float(mat4x2(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).x, 0.0, 0.0, 1.0, tan(0.0), determinant(mat2(0.0, length(vec4(0.0, 0.0, 0.0, 0.0)), 1.0, 0.0)), 1.0, determinant(mat3(0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))))) > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).y))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint read_2 = atomicLoad(buf[virtual_gid], 4, 64, 0);
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_struct_replacement_2._f1._f1.subgroup_local_id + 1 < subgroup_size)
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   int i = _GLF_IDENTITY(0, 0 ^ (_GLF_IDENTITY(0, (false ? _GLF_FUZZED(59106) : _GLF_IDENTITY(0, 0 ^ (0))))));
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), bool(_GLF_IDENTITY(bvec2(_GLF_DEAD(false), true), _GLF_IDENTITY(bvec2(bvec2(bvec2(_GLF_DEAD(false), true))), bvec2(bvec3(bvec2(bvec2(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))), true))), true)))))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), mix(float(injectionSwitch.y), float(_GLF_FUZZED(_GLF_IDENTITY(3.6, min(3.6, 3.6)))), bool(false)))))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   atomicStore(buf[_GLF_struct_replacement_11._f3._f0.next_virtual_gid], _GLF_IDENTITY(uint(read_1 + 1 == read_2) + 1, _GLF_IDENTITY(_GLF_IDENTITY((uint(read_1 + 1 == _GLF_IDENTITY(read_2, (read_2) >> 0u)) + 1), (true ? (uint(read_1 + 1 == _GLF_IDENTITY(read_2, (read_2) >> 0u)) + 1) : _GLF_FUZZED(subgroup_size))) - 0u, min((_GLF_IDENTITY(uint(read_1 + 1 == read_2) + 1, (_GLF_IDENTITY(uint(read_1 + 1 == read_2) + 1, clamp(uint(read_1 + 1 == read_2) + 1, uint(read_1 + 1 == read_2) + 1, uint(read_1 + 1 == read_2) + 1))) | (_GLF_IDENTITY(_GLF_IDENTITY(uint(read_1 + 1 == read_2) + 1, 0u ^ (uint(read_1 + 1 == read_2) + 1)), (_GLF_IDENTITY(_GLF_IDENTITY(uint(read_1 + 1 == read_2) + 1, uint(_GLF_IDENTITY(uint(uint(read_1 + 1 == read_2) + 1), (uint(uint(read_1 + 1 == read_2) + 1)) / 1u))), 0u ^ _GLF_IDENTITY((_GLF_IDENTITY(uint(read_1 + 1 == read_2) + 1, max(_GLF_IDENTITY(uint(read_1 + 1 == read_2) + 1, (uint(read_1 + 1 == read_2) + 1) << _GLF_IDENTITY(0u, 0u ^ (0u))), _GLF_IDENTITY(uint(_GLF_IDENTITY(read_1 + 1 == read_2, ! (! _GLF_IDENTITY((read_1 + _GLF_IDENTITY(1, (1) * 1) == read_2), bool(bvec4((read_1 + _GLF_IDENTITY(1, (1) * 1) == read_2), true, false, true)))))) + 1, (_GLF_IDENTITY(uint(read_1 + 1 == read_2) + 1, (uint(read_1 + 1 == read_2) + 1) - 0u)) * 1u)))), 0u ^ ((_GLF_IDENTITY(uint(read_1 + 1 == read_2) + 1, max(_GLF_IDENTITY(_GLF_IDENTITY(uint(read_1 + 1 == read_2), (uint(read_1 + 1 == read_2)) | (uint(read_1 + 1 == read_2))) + 1, (uint(read_1 + 1 == read_2) + 1) << 0u), _GLF_IDENTITY(uint(_GLF_IDENTITY(read_1 + 1 == read_2, ! (! (read_1 + _GLF_IDENTITY(1, (1) * 1) == read_2)))) + 1, (_GLF_IDENTITY(uint(read_1 + 1 == read_2) + _GLF_IDENTITY(_GLF_IDENTITY(1, (1) ^ 0), (_GLF_IDENTITY(1, (1) ^ 0)) << 0), (uint(read_1 + 1 == read_2) + 1) - 0u)) * 1u)))))))) * 1u)))) - 0u, _GLF_IDENTITY((uint(_GLF_IDENTITY(read_1, min(read_1, read_1)) + 1 == read_2) + 1) - 0u, (true ? (uint(read_1 + 1 == read_2) + 1) - 0u : _GLF_FUZZED(virtual_gid)))))), 4, 64, 4);
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y))))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(false), ! (_GLF_IDENTITY(! _GLF_IDENTITY((bool(false)), bool(_GLF_IDENTITY(bool((bool(false))), (bool((bool(false)))) || false))), true && (! (bool(false)))))), ! (! (bool(false))))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)), ! (! (_GLF_IDENTITY(bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)), ! (! (_GLF_IDENTITY(bool(bvec4(_GLF_FALSE(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, (false) && true)))), true && (! (_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, (false) && true)))))))), (injectionSwitch.x > injectionSwitch.y)), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)), false || (_GLF_IDENTITY(bool(bvec4(_GLF_FALSE(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, (false) && true)))), true && (! (_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, (false) && true)))))))), (injectionSwitch.x > injectionSwitch.y)), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)), (bool(bvec4(_GLF_FALSE(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, (false) && true)))), true && (! (_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, (false) && true)))))))), (injectionSwitch.x > injectionSwitch.y)), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))) && true))))))))))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(-1.5, 2.6)) : injectionSwitch)).x > injectionSwitch.y))))
          barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           barrier();
          }
         if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) && true)))), (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, float(_GLF_IDENTITY(mat3x2(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), 0.0, 0.0, 1.0, 1.0, 1.0), mat3x2(mat3x2(mat3x2(_GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y)), 0.0, 0.0, 1.0, 1.0, 1.0)))))), injectionSwitch.y))))))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           barrier();
          }
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           if(_GLF_DEAD(false))
            barrier();
           barrier();
           if(_GLF_DEAD(false))
            barrier();
          }
         barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)))) > injectionSwitch.y, false)))))))
          {
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_DEAD(false))
            barrier();
           barrier();
           if(_GLF_DEAD(false))
            barrier();
          }
        }
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           barrier();
           if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
            barrier();
          }
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(_GLF_IDENTITY(bvec3((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, true), bvec3(bvec4(bvec3((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(true, bool(bvec2(true, true))), true), false))))) && true)))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), bool(bvec2(! (! (false)), false)))) || (_GLF_DEAD(false))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))))
          barrier();
         barrier();
        }
       barrier();
      }
     barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
  }
 else
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   atomicStore(buf[_GLF_struct_replacement_11._f3._f0.next_virtual_gid], uint(read_1 + _GLF_IDENTITY(1, int(_GLF_IDENTITY(_GLF_IDENTITY(ivec2(_GLF_IDENTITY(1, max(1, _GLF_IDENTITY(1, clamp(_GLF_IDENTITY(1, _GLF_IDENTITY(1, int(_GLF_IDENTITY(int(1), (_GLF_IDENTITY(int(1), (int(1)) | (int(1)))) >> 0))) * _GLF_IDENTITY((1), clamp((1), _GLF_IDENTITY((1), max((1), _GLF_IDENTITY((1), _GLF_IDENTITY(int(ivec3((1), 1, 0)), (int(ivec3((1), 1, 0))) - 0)))), (_GLF_IDENTITY(1, ~ (~ (_GLF_IDENTITY(1, (_GLF_IDENTITY(1, min(1, 1))) ^ 0)))))))), 1, _GLF_IDENTITY(1, _GLF_IDENTITY((1), (_GLF_IDENTITY((1), (true ? (1) : _GLF_FUZZED(-52515)))) ^ 0) * 1))))), (1 ^ 1)), ivec2(0, 0) | (ivec2(_GLF_IDENTITY(1, max(1, _GLF_IDENTITY(1, clamp(_GLF_IDENTITY(_GLF_IDENTITY(1, 1 * _GLF_IDENTITY((1), clamp((1), _GLF_IDENTITY((1), max((1), _GLF_IDENTITY((1), _GLF_IDENTITY(int(ivec3((1), 1, 0)), (int(ivec3((1), 1, 0))) - 0)))), (_GLF_IDENTITY(1, ~ (~ (_GLF_IDENTITY(1, (_GLF_IDENTITY(1, min(1, 1))) ^ 0)))))))), 0 + (_GLF_IDENTITY(1, 1 * _GLF_IDENTITY((1), clamp((1), _GLF_IDENTITY((1), max((1), _GLF_IDENTITY((1), _GLF_IDENTITY(int(ivec3((1), 1, 0)), (int(ivec3((_GLF_IDENTITY(1, max(1, 1))), 1, 0))) - 0)))), (_GLF_IDENTITY(1, ~ (~ (_GLF_IDENTITY(1, (_GLF_IDENTITY(1, min(1, _GLF_IDENTITY(1, (_GLF_IDENTITY(1, clamp(1, 1, 1))) | (1))))) ^ 0)))))))))), 1, _GLF_IDENTITY(1, _GLF_IDENTITY((1), (_GLF_IDENTITY((1), (true ? (1) : _GLF_FUZZED(-52515)))) ^ 0) * 1))))), (1 ^ 1)))), ~ (_GLF_IDENTITY(_GLF_IDENTITY(~ (ivec2(_GLF_IDENTITY(1, max(1, _GLF_IDENTITY(1, clamp(_GLF_IDENTITY(1, 1 * _GLF_IDENTITY((1), clamp((1), _GLF_IDENTITY((1), max((1), _GLF_IDENTITY((1), _GLF_IDENTITY(int(ivec3((1), 1, 0)), (int(ivec3((1), 1, 0))) - 0)))), (1)))), 1, _GLF_IDENTITY(1, _GLF_IDENTITY((1), (_GLF_IDENTITY((1), (true ? (1) : _GLF_FUZZED(-52515)))) ^ 0) * 1))))), (1 ^ 1))), ivec2(1, 1) * (~ (ivec2(_GLF_IDENTITY(1, max(1, _GLF_IDENTITY(1, clamp(_GLF_IDENTITY(_GLF_IDENTITY(1, 1 * _GLF_IDENTITY((1), clamp((1), _GLF_IDENTITY((1), max((1), _GLF_IDENTITY((1), _GLF_IDENTITY(int(ivec3((1), 1, 0)), (int(ivec3((1), _GLF_IDENTITY(1, clamp(1, 1, 1)), 0))) - 0)))), (1)))), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(1, 1 * _GLF_IDENTITY((1), clamp((1), _GLF_IDENTITY((1), max((1), _GLF_IDENTITY((1), _GLF_IDENTITY(int(ivec3((1), 1, 0)), (int(ivec3((1), 1, 0))) - 0)))), (1))))), 0 + (~ (_GLF_IDENTITY(1, 1 * _GLF_IDENTITY((1), clamp((1), _GLF_IDENTITY((1), max((1), _GLF_IDENTITY((1), _GLF_IDENTITY(int(ivec3((1), 1, 0)), (_GLF_IDENTITY(int(ivec3(_GLF_IDENTITY((1), 0 | (_GLF_IDENTITY(_GLF_IDENTITY((1), ((1)) * 1), (_GLF_IDENTITY((1), ((1)) * 1)) >> 0))), 1, 0)), clamp(int(ivec3(_GLF_IDENTITY((1), 0 | (_GLF_IDENTITY((1), ((1)) * 1))), 1, 0)), _GLF_IDENTITY(int(ivec3(_GLF_IDENTITY((1), 0 | (_GLF_IDENTITY((1), ((1)) * 1))), 1, 0)), clamp(int(ivec3(_GLF_IDENTITY((1), 0 | (_GLF_IDENTITY((1), ((1)) * 1))), 1, 0)), int(ivec3(_GLF_IDENTITY((1), 0 | (_GLF_IDENTITY((1), ((1)) * 1))), 1, 0)), int(ivec3(_GLF_IDENTITY((1), 0 | (_GLF_IDENTITY((1), ((1)) * 1))), 1, _GLF_IDENTITY(0, (0) | (0)))))), _GLF_IDENTITY(int(ivec3(_GLF_IDENTITY((1), 0 | (_GLF_IDENTITY((1), ((1)) * 1))), 1, 0)), 0 | (_GLF_IDENTITY(int(ivec3(_GLF_IDENTITY((1), 0 | (_GLF_IDENTITY((1), ((1)) * 1))), 1, 0)), ~ (~ (int(ivec3(_GLF_IDENTITY((1), 0 | (_GLF_IDENTITY((1), ((1)) * 1))), 1, 0)))))))))) - _GLF_IDENTITY(0, (0) + 0))))), (1))))))))), 1, _GLF_IDENTITY(1, _GLF_IDENTITY((1), (_GLF_IDENTITY((1), (true ? (1) : _GLF_FUZZED(-52515)))) ^ 0) * 1))))), (1 ^ 1))))), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(bitCount(uvec2(149867u, 144687u))) : _GLF_IDENTITY(~ (ivec2(_GLF_IDENTITY(1, max(1, _GLF_IDENTITY(1, clamp(_GLF_IDENTITY(1, _GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(-44916))) * _GLF_IDENTITY((1), clamp((1), _GLF_IDENTITY((1), max((1), _GLF_IDENTITY((1), _GLF_IDENTITY(_GLF_IDENTITY(int(ivec3((1), 1, 0)), (int(ivec3((1), 1, 0))) - 0), (_GLF_IDENTITY(int(ivec3((1), 1, 0)), (int(ivec3((1), 1, 0))) - 0)) - 0)))), (1)))), 1, _GLF_IDENTITY(1, _GLF_IDENTITY((1), (_GLF_IDENTITY((1), (true ? (1) : _GLF_FUZZED(-52515)))) ^ 0) * 1))))), (1 ^ 1))), ivec2(1, 1) * (~ (ivec2(_GLF_IDENTITY(1, max(1, _GLF_IDENTITY(1, clamp(_GLF_IDENTITY(_GLF_IDENTITY(1, 1 * _GLF_IDENTITY((1), clamp((1), _GLF_IDENTITY((1), max((1), _GLF_IDENTITY((1), _GLF_IDENTITY(int(ivec3(_GLF_IDENTITY((1), clamp((1), _GLF_IDENTITY((1), ~ (_GLF_IDENTITY(~ ((1)), ~ (~ (~ ((1))))))), _GLF_IDENTITY((1), ~ (~ ((1)))))), 1, 0)), _GLF_IDENTITY((int(ivec3((1), _GLF_IDENTITY(1, clamp(1, 1, 1)), 0))) - 0, (false ? _GLF_FUZZED((bitfieldExtract(55298, -86234, -80766) - 79496)) : (int(ivec3((1), _GLF_IDENTITY(1, clamp(1, 1, 1)), 0))) - 0)))))), (1)))), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(1, 1 * _GLF_IDENTITY((1), clamp((1), _GLF_IDENTITY((1), max((1), _GLF_IDENTITY((1), _GLF_IDENTITY(int(_GLF_IDENTITY(ivec3((1), 1, 0), (_GLF_IDENTITY(ivec3((1), 1, 0), (ivec3((1), 1, 0)) | ivec3(0, 0, 0))) >> ivec3(0, 0, 0))), (int(ivec3((1), 1, 0))) - 0)))), (1))))), 0 + (~ (_GLF_IDENTITY(1, 1 * _GLF_IDENTITY((1), clamp((1), _GLF_IDENTITY((1), max((1), _GLF_IDENTITY((1), _GLF_IDENTITY(int(ivec3((1), 1, 0)), (_GLF_IDENTITY(int(ivec3(_GLF_IDENTITY((1), 0 | (_GLF_IDENTITY(_GLF_IDENTITY((1), ((1)) * 1), (_GLF_IDENTITY((1), ((1)) * 1)) >> 0))), 1, 0)), clamp(int(ivec3(_GLF_IDENTITY((1), 0 | (_GLF_IDENTITY((1), ((1)) * 1))), 1, 0)), _GLF_IDENTITY(int(ivec3(_GLF_IDENTITY((1), 0 | (_GLF_IDENTITY((1), ((1)) * 1))), 1, 0)), clamp(int(ivec3(_GLF_IDENTITY((1), 0 | (_GLF_IDENTITY((1), ((1)) * 1))), 1, 0)), int(ivec3(_GLF_IDENTITY(_GLF_IDENTITY((1), ((1)) | ((1))), 0 | (_GLF_IDENTITY((1), ((1)) * 1))), 1, 0)), int(ivec3(_GLF_IDENTITY((1), 0 | (_GLF_IDENTITY((1), ((1)) * 1))), 1, _GLF_IDENTITY(0, (0) | (0)))))), _GLF_IDENTITY(int(ivec3(_GLF_IDENTITY((1), 0 | (_GLF_IDENTITY((1), ((1)) * 1))), 1, 0)), 0 | (_GLF_IDENTITY(int(ivec3(_GLF_IDENTITY((1), 0 | (_GLF_IDENTITY((1), ((1)) * 1))), 1, 0)), ~ (~ (int(ivec3(_GLF_IDENTITY((1), 0 | (_GLF_IDENTITY((1), ((1)) * 1))), 1, 0)))))))))) - _GLF_IDENTITY(0, (0) + 0))))), (1))))))))), 1, _GLF_IDENTITY(1, _GLF_IDENTITY((1), (_GLF_IDENTITY((1), (true ? (1) : _GLF_FUZZED(-52515)))) ^ 0) * _GLF_IDENTITY(1, ~ (~ (1)))))))), (1 ^ 1))))))))))) == read_2) + 1, 4, 64, _GLF_IDENTITY(4, 0 ^ _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(4, clamp(4, _GLF_IDENTITY(_GLF_IDENTITY(4, (4) >> 0), (_GLF_IDENTITY(4, (4) >> 0)) / 1), 4))), 0 ^ ((_GLF_IDENTITY(4, clamp(4, _GLF_IDENTITY(4, (4) >> 0), 4))))), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY((_GLF_IDENTITY(4, clamp(4, _GLF_IDENTITY(4, (4) >> 0), 4))), 0 ^ ((_GLF_IDENTITY(4, clamp(4, _GLF_IDENTITY(4, (4) >> 0), 4)))))), ~ (~ (_GLF_IDENTITY(~ (_GLF_IDENTITY((_GLF_IDENTITY(4, clamp(4, _GLF_IDENTITY(4, (4) >> 0), _GLF_IDENTITY(4, 0 | (4))))), 0 ^ ((_GLF_IDENTITY(4, clamp(4, _GLF_IDENTITY(4, (4) >> 0), 4)))))), 0 | (~ (_GLF_IDENTITY((_GLF_IDENTITY(4, clamp(4, _GLF_IDENTITY(4, (4) >> 0), _GLF_IDENTITY(4, 0 | (4))))), 0 ^ ((_GLF_IDENTITY(4, clamp(4, _GLF_IDENTITY(4, (4) >> 0), 4)))))))))))))));
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(_GLF_IDENTITY(mat2(injectionSwitch.x, 1.0, 0.0, exp(0.0)), _GLF_IDENTITY(mat2(mat2x3(mat2(injectionSwitch.x, 1.0, 0.0, exp(0.0)))), transpose(transpose(mat2(mat2x3(mat2(injectionSwitch.x, 1.0, 0.0, exp(0.0))))))))), float(mat3x2(float(_GLF_IDENTITY(mat2(injectionSwitch.x, 1.0, 0.0, exp(0.0)), _GLF_IDENTITY(mat2(mat2x3(mat2(injectionSwitch.x, 1.0, 0.0, exp(0.0)))), transpose(transpose(mat2(mat2x3(mat2(injectionSwitch.x, 1.0, 0.0, exp(0.0))))))))), 1.0, 0.0, 0.0, cos(0.0), 0.0)))) > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, true && (false))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, (false) && true)))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bool(bool(bool(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-4.8), _GLF_IDENTITY((injectionSwitch)[1], (_GLF_IDENTITY((injectionSwitch)[1], clamp((injectionSwitch)[1], (injectionSwitch)[1], (injectionSwitch)[1]))) / 1.0)), vec2((injectionSwitch)[0], _GLF_FUZZED(845.545)), bvec2(true, false))).x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(mat4x2(injectionSwitch, 0.0, 0.0, 0.0, 0.0, 1.0, determinant(mat4(1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, sqrt(1.0), 1.0, abs(0.0), 0.0, 0.0, 1.0))))), min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), clamp(_GLF_IDENTITY(mat2(1.0) * (injectionSwitch), (mat2(1.0) * (injectionSwitch)) / vec2(1.0, 1.0)), _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), (mat2(1.0) * (injectionSwitch)) / vec2(1.0, 1.0)), mat2(1.0) * (injectionSwitch)))))).y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)).x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
   barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(bvec2(! (false), false))))))))))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))
    barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (true ? _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(min(injectionSwitch.y, injectionSwitch.y), (true ? min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0)) : _GLF_FUZZED(determinant(mat2(8552.3247, 7021.4864, -2.0, -4156.7122)))))) : _GLF_FUZZED(-9.9)))))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
}
