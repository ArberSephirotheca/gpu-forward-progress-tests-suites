#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


struct _GLF_struct_4 {
 mat3x2 _f0;
 bvec4 _f1;
 mat4x3 _f2;
 uvec2 _f3;
 ivec2 _f4;
 float _f5;
 mat4x3 _f6;
} ;

struct _GLF_struct_5 {
 ivec2 _f0;
 _GLF_struct_4 _f1;
} ;

struct _GLF_struct_6 {
 uint workgroup_id;
 _GLF_struct_5 _f0;
 vec3 _f1;
 mat2x3 _f2;
 bvec2 _f3;
} ;

struct _GLF_struct_1 {
 bvec2 _f0;
 vec4 _f1;
 bvec2 _f2;
 bvec4 _f3;
 mat4 _f4;
} ;

struct _GLF_struct_0 {
 mat3x4 _f0;
 mat2x4 _f1;
 mat3 _f2;
 ivec3 _f3;
 mat2x3 _f4;
 int _f5;
 bvec2 _f6;
} ;

struct _GLF_struct_2 {
 uint _f0;
 _GLF_struct_0 _f1;
 _GLF_struct_1 _f2;
 mat4x2 _f3;
} ;

struct _GLF_struct_3 {
 uint _f0;
 uint _f1;
 mat2x4 _f2;
 _GLF_struct_2 _f3;
 uint virtual_gid;
} ;

layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 uint subgroup_id = gl_SubgroupID;
 uint subgroup_size = gl_SubgroupSize;
 uint subgroup_local_id = gl_SubgroupInvocationID;
 uint num_workgroup = gl_NumWorkGroups.x;
 uint workgroup_size = gl_WorkGroupSize.x;
 _GLF_struct_6 _GLF_struct_replacement_6 = _GLF_struct_6(gl_WorkGroupID.x, _GLF_struct_5(ivec2(1), _GLF_struct_4(mat3x2(1.0), bvec4(true), mat4x3(1.0), uvec2(1u), ivec2(1), 1.0, mat4x3(1.0))), vec3(1.0), mat2x3(1.0), bvec2(true));
 uint workgroup_base = workgroup_size * _GLF_struct_replacement_6.workgroup_id;
 _GLF_struct_3 _GLF_struct_replacement_3 = _GLF_struct_3(1u, 1u, mat2x4(1.0), _GLF_struct_2(1u, _GLF_struct_0(mat3x4(1.0), mat2x4(1.0), mat3(1.0), ivec3(1), mat2x3(1.0), 1, bvec2(true)), _GLF_struct_1(bvec2(true), vec4(1.0), bvec2(true), bvec4(true), mat4(1.0)), mat4x2(1.0)), workgroup_base + subgroup_id * subgroup_size + subgroup_local_id);
 uint next_virtual_gid = workgroup_base + subgroup_id * subgroup_size + ((subgroup_local_id + 1) % subgroup_size);
 uint read_1 = atomicLoad(buf[_GLF_struct_replacement_3.virtual_gid], 4, 64, 0);
 atomicStore(buf[next_virtual_gid], uint(read_1 + 1), 4, 64, 4);
 uint read_2 = atomicLoad(buf[_GLF_struct_replacement_3.virtual_gid], 4, 64, 0);
 if(subgroup_local_id + 1 < subgroup_size)
  {
   int i = 0;
   atomicStore(buf[next_virtual_gid], uint(read_1 + 1 == read_2) + 1, 4, 64, 4);
  }
 else
  {
   switch(_GLF_SWITCH(0))
    {
     case 46:
     (uvec4(167146u, 100509u, 36326u, 18513u) << uvec4(172596u, 85689u, 95557u, 176128u)).t;
     case 0:
     case 54:
     case 44:
     case 22:
     case 73:
     case 12:
     atomicStore(buf[next_virtual_gid], uint(read_1 + 1 == read_2) + 1, 4, 64, 4);
     break;
     default:
     1;
    }
  }
}
