#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_DEAD(false)), ! (! _GLF_IDENTITY((! (_GLF_DEAD(false))), ! (! (_GLF_IDENTITY((! (_GLF_DEAD(false))), _GLF_IDENTITY(bool(bool((! (_GLF_DEAD(false))))), ! (! (bool(bool((! _GLF_IDENTITY((_GLF_DEAD(false)), bool(bool(_GLF_IDENTITY((_GLF_DEAD(false)), ! (! ((_GLF_DEAD(false)))))))))))))))))))), bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_DEAD(false)), ! (! _GLF_IDENTITY((! (_GLF_DEAD(false))), (_GLF_IDENTITY((! (_GLF_DEAD(false))), bool(bvec4((! (_GLF_DEAD(false))), false, false, true)))) && true))), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(! (_GLF_DEAD(false)), ! (! _GLF_IDENTITY((! (_GLF_DEAD(false))), bool(bvec3((! (_GLF_DEAD(false))), true, true))))), true, false, false)), ! (! (bool(bvec4(_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false)))), ! (! (! (_GLF_DEAD(false))))), true, _GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, _GLF_IDENTITY((false), false || (_GLF_IDENTITY((false), ! (! ((false)))))) || false), true))), false)))))), _GLF_IDENTITY(true, bool(_GLF_IDENTITY(bool(true), false || (bool(_GLF_IDENTITY(true, (true) && true)))))), true, true))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat4x2(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)) + (injectionSwitch)), 0.0, 0.0, 0.0, 0.0, 1.0, 0.0), mat4x2(mat4(_GLF_IDENTITY(mat4x2(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)) + (injectionSwitch)), 0.0, 0.0, 0.0, 0.0, 1.0, 0.0), (mat4x2(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)) + (injectionSwitch)), 0.0, 0.0, 0.0, 0.0, 1.0, 0.0)) - mat4x2(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))))))).x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - _GLF_ZERO(0.0, injectionSwitch.x))))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint subgroup_size = gl_SubgroupSize;
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(false))
  barrier();
 uint num_workgroup = _GLF_IDENTITY(gl_NumWorkGroups.x, min(_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups.x, (gl_NumWorkGroups.x) << 0u), (_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups.x, (gl_NumWorkGroups.x) << 0u), min(_GLF_IDENTITY(gl_NumWorkGroups.x, (gl_NumWorkGroups.x) << 0u), _GLF_IDENTITY(gl_NumWorkGroups.x, (gl_NumWorkGroups.x) << 0u)))) ^ (0u << _GLF_IDENTITY(uint(4u), uint(4u)))), _GLF_IDENTITY(gl_NumWorkGroups, max(gl_NumWorkGroups, _GLF_IDENTITY(gl_NumWorkGroups, ~ (~ (gl_NumWorkGroups))))).x));
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED((_GLF_IDENTITY((false , injectionSwitch), vec2(mat2x3((false , injectionSwitch), 0.0, 1.0, 0.0, cos(log(1.0))))))) : injectionSwitch)).x > injectionSwitch.y, bool(bvec4(injectionSwitch.x > injectionSwitch.y, false, false, _GLF_IDENTITY(false, bool(bool(false))))))))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, false, true, true)), (bool(bvec4(false, false, true, true))) && true)) || (false))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec4(_GLF_DEAD(false), true, true, true)), bool(bool(bool(bvec4(_GLF_DEAD(false), true, true, true))))))) && true))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 uint workgroup_size = _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize.x, ~ _GLF_IDENTITY((_GLF_IDENTITY(~ (gl_WorkGroupSize.x), (~ (gl_WorkGroupSize.x)) | 0u)), ((_GLF_IDENTITY(~ (gl_WorkGroupSize.x), (~ (gl_WorkGroupSize.x)) | 0u))) + 0u)), min(gl_WorkGroupSize.x, gl_WorkGroupSize.x)), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize.x, ~ _GLF_IDENTITY((_GLF_IDENTITY(~ (gl_WorkGroupSize.x), (~ (gl_WorkGroupSize.x)) | 0u)), ((_GLF_IDENTITY(~ (gl_WorkGroupSize.x), (~ (gl_WorkGroupSize.x)) | 0u))) + 0u)), min(gl_WorkGroupSize.x, gl_WorkGroupSize.x)), (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize.x, ~ _GLF_IDENTITY((_GLF_IDENTITY(~ (gl_WorkGroupSize.x), (~ (gl_WorkGroupSize.x)) | 0u)), ((_GLF_IDENTITY(~ (gl_WorkGroupSize.x), (~ (gl_WorkGroupSize.x)) | 0u))) + 0u)), min(gl_WorkGroupSize.x, gl_WorkGroupSize.x))) << 0u)) | 0u);
 if(_GLF_DEAD(false))
  barrier();
 uint workgroup_id = _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, min(gl_WorkGroupID, gl_WorkGroupID)), max(gl_WorkGroupID, gl_WorkGroupID)).x;
 if(_GLF_DEAD(false))
  barrier();
 uint workgroup_base = _GLF_IDENTITY(workgroup_size * workgroup_id, clamp(_GLF_IDENTITY(workgroup_size, 1u * (_GLF_IDENTITY(workgroup_size, (_GLF_IDENTITY(workgroup_size, (workgroup_size) | (_GLF_IDENTITY(workgroup_size, clamp(workgroup_size, workgroup_size, workgroup_size))))) | (_GLF_IDENTITY(workgroup_size, (workgroup_size) << 0u))))) * _GLF_IDENTITY(workgroup_id, _GLF_IDENTITY(~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_id, _GLF_IDENTITY((workgroup_id) | (workgroup_id), max(_GLF_IDENTITY((workgroup_id) | (workgroup_id), (_GLF_IDENTITY((workgroup_id) | (workgroup_id), ((workgroup_id) | (workgroup_id)) | 0u)) >> 0u), (workgroup_id) | (workgroup_id)))), (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_id, 0u ^ (_GLF_IDENTITY(workgroup_id, (workgroup_id) | (workgroup_id)))), _GLF_IDENTITY((workgroup_id) | (workgroup_id), max(_GLF_IDENTITY((workgroup_id) | (workgroup_id), (_GLF_IDENTITY((workgroup_id) | (workgroup_id), ((workgroup_id) | (workgroup_id)) | 0u)) >> 0u), (workgroup_id) | (workgroup_id))))) << 0u))), (true ? ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_id, max(workgroup_id, workgroup_id)), (workgroup_id) | (workgroup_id)))) : _GLF_FUZZED(workgroup_id)))), _GLF_IDENTITY(workgroup_size * _GLF_IDENTITY(workgroup_id, min(workgroup_id, workgroup_id)), _GLF_IDENTITY((workgroup_size * workgroup_id) - 0u, 0u | (_GLF_IDENTITY(_GLF_IDENTITY((workgroup_size * workgroup_id) - _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, clamp(0u, _GLF_IDENTITY(0u, ~ (~ (0u))), 0u))) - 0u), clamp(_GLF_IDENTITY(0u, min(_GLF_IDENTITY(0u, max(0u, _GLF_IDENTITY(0u, ~ (~ (0u))))), 0u)), 0u, 0u)), (0u) ^ 0u), uint(uvec2(_GLF_IDENTITY((workgroup_size * workgroup_id) - _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) / 1u)) - 0u)) | (0u)), clamp(0u, 0u, 0u)), (0u) ^ 0u), ((_GLF_IDENTITY(workgroup_size, (workgroup_size) ^ 0u) * workgroup_id) - _GLF_IDENTITY(_GLF_IDENTITY(0u, clamp(0u, 0u, 0u)), (0u) ^ 0u)) << 0u), 1u))), ~ (~ ((workgroup_size * workgroup_id) - 0u)))))), workgroup_size * _GLF_IDENTITY(_GLF_IDENTITY(workgroup_id, min(workgroup_id, workgroup_id)), (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_id, min(workgroup_id, workgroup_id)), (_GLF_IDENTITY(workgroup_id, min(workgroup_id, workgroup_id))) << 0u)) | 0u)));
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec3(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(false, ! (! (false))), false)))))), (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), (false ? _GLF_FUZZED(0.9) : _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), min(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))))) / 1.0))), bool(bvec3(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(false, ! (! (false))), false))))))) || false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint virtual_gid = _GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size + subgroup_local_id, _GLF_IDENTITY((_GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_id * subgroup_size, _GLF_IDENTITY(max(_GLF_IDENTITY(subgroup_id * subgroup_size, (_GLF_IDENTITY(true ? subgroup_id * subgroup_size : _GLF_FUZZED(workgroup_size), ~ (~ (true ? subgroup_id * subgroup_size : _GLF_IDENTITY(_GLF_FUZZED(workgroup_size), min(_GLF_FUZZED(workgroup_size), _GLF_FUZZED(workgroup_size)))))))), _GLF_IDENTITY(subgroup_id * subgroup_size, min(_GLF_IDENTITY(subgroup_id * subgroup_size, min(subgroup_id * subgroup_size, subgroup_id * subgroup_size)), subgroup_id * subgroup_size))), (max(_GLF_IDENTITY(subgroup_id * subgroup_size, (_GLF_IDENTITY(true ? subgroup_id * subgroup_size : _GLF_FUZZED(workgroup_size), ~ (~ (true ? subgroup_id * subgroup_size : _GLF_FUZZED(workgroup_size)))))), _GLF_IDENTITY(subgroup_id * subgroup_size, min(_GLF_IDENTITY(subgroup_id * subgroup_size, min(subgroup_id * subgroup_size, subgroup_id * subgroup_size)), subgroup_id * subgroup_size)))) << 0u)) + subgroup_local_id, (false ? _GLF_FUZZED(197222u) : workgroup_base + subgroup_id * subgroup_size + subgroup_local_id))) << 0u, ((_GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (subgroup_id) | (subgroup_id)) * subgroup_size, _GLF_IDENTITY(max(_GLF_IDENTITY(subgroup_id * subgroup_size, (_GLF_IDENTITY(_GLF_IDENTITY(true ? subgroup_id * subgroup_size : _GLF_FUZZED(workgroup_size), clamp(true ? subgroup_id * subgroup_size : _GLF_FUZZED(workgroup_size), true ? subgroup_id * subgroup_size : _GLF_FUZZED(workgroup_size), true ? subgroup_id * subgroup_size : _GLF_FUZZED(workgroup_size))), ~ (~ (true ? subgroup_id * subgroup_size : _GLF_FUZZED(workgroup_size)))))), _GLF_IDENTITY(subgroup_id * subgroup_size, min(_GLF_IDENTITY(subgroup_id * subgroup_size, min(subgroup_id * subgroup_size, subgroup_id * subgroup_size)), subgroup_id * subgroup_size))), (max(_GLF_IDENTITY(subgroup_id * subgroup_size, (_GLF_IDENTITY(_GLF_IDENTITY(true ? subgroup_id * subgroup_size : _GLF_IDENTITY(_GLF_FUZZED(workgroup_size), 0u ^ (_GLF_FUZZED(workgroup_size))), ~ (~ (true ? subgroup_id * subgroup_size : _GLF_FUZZED(workgroup_size)))), 0u ^ (_GLF_IDENTITY(true ? subgroup_id * subgroup_size : _GLF_IDENTITY(_GLF_FUZZED(workgroup_size), 0u ^ (_GLF_FUZZED(workgroup_size))), ~ (~ (true ? subgroup_id * subgroup_size : _GLF_FUZZED(workgroup_size)))))))), _GLF_IDENTITY(subgroup_id * subgroup_size, min(_GLF_IDENTITY(subgroup_id * subgroup_size, min(subgroup_id * subgroup_size, subgroup_id * subgroup_size)), subgroup_id * subgroup_size)))) << 0u)) + subgroup_local_id, (false ? _GLF_FUZZED(197222u) : workgroup_base + _GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) + 0u) + subgroup_local_id))) << 0u) / 1u));
 uint next_virtual_gid = workgroup_base + subgroup_id * subgroup_size + _GLF_IDENTITY(((subgroup_local_id + 1) % subgroup_size), (((subgroup_local_id + 1) % subgroup_size)) | 0u);
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint read_1 = atomicLoad(buf[virtual_gid], 4, 64, 0);
 atomicStore(buf[next_virtual_gid], _GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(read_1, (read_1) | uint(_GLF_ZERO(0.0, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(tan(899.966)))), float(float(_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(-33.32) : injectionSwitch.x)))))))) + 1, (_GLF_IDENTITY(_GLF_IDENTITY(read_1, (read_1) | uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(asinh(vec4(-62.50, 72.83, 44.07, 3.6)).s) : injectionSwitch.x))))) + 1, _GLF_IDENTITY((_GLF_IDENTITY(read_1, (read_1) | uint(_GLF_ZERO(0.0, injectionSwitch.x))) + 1) | (_GLF_IDENTITY(read_1, (read_1) | uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), vec2(1.0, 1.0) * (mat2(1.0) * (injectionSwitch)))).x))) + 1), (_GLF_IDENTITY((_GLF_IDENTITY(read_1, (read_1) | uint(_GLF_ZERO(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-127.136)), bool(false))), injectionSwitch.x))) + 1) | (_GLF_IDENTITY(read_1, (read_1) | uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), vec2(1.0, 1.0) * (mat2(1.0) * (injectionSwitch)))).x))) + 1), 0u ^ ((_GLF_IDENTITY(read_1, (read_1) | uint(_GLF_ZERO(0.0, injectionSwitch.x))) + 1) | (_GLF_IDENTITY(read_1, (read_1) | uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), vec2(1.0, 1.0) * (mat2(1.0) * (injectionSwitch)))).x))) + 1)))) + 0u))) / 1u), max(_GLF_IDENTITY(_GLF_IDENTITY(read_1, (read_1) | uint(_GLF_ZERO(0.0, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, float(float(_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(-33.32) : injectionSwitch.x))))), mix(float(_GLF_IDENTITY(injectionSwitch.x, float(float(_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(-33.32) : injectionSwitch.x)))))), float(_GLF_FUZZED(-2.2)), bool(false)))))) + 1, (_GLF_IDENTITY(_GLF_IDENTITY(read_1, _GLF_IDENTITY((read_1), _GLF_IDENTITY(uint(uvec4((read_1), 0u, 1u, 0u)), ~ (~ (_GLF_IDENTITY(uint(uvec4((read_1), 0u, 1u, 0u)), min(uint(uvec4((read_1), 0u, 1u, 0u)), uint(uvec4((read_1), 0u, 1u, 0u)))))))) | uint(_GLF_ZERO(0.0, injectionSwitch.x))) + 1, (_GLF_IDENTITY(read_1, (read_1) | uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).x))) + 1) | (_GLF_IDENTITY(_GLF_IDENTITY(read_1, (read_1) | uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), vec2(1.0, 1.0) * (mat2(1.0) * (injectionSwitch)))).x))) + 1, 0u ^ (_GLF_IDENTITY(_GLF_IDENTITY(read_1, (read_1) | uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), vec2(1.0, 1.0) * (mat2(1.0) * (injectionSwitch)))).x))) + 1, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(read_1, clamp(_GLF_IDENTITY(read_1, max(_GLF_IDENTITY(read_1, uint(uvec4(read_1, 1u, 0u, 0u))), read_1)), read_1, read_1)), (read_1) | uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), vec2(1.0, 1.0) * (mat2(1.0) * (injectionSwitch)))).x))) + 1, (_GLF_IDENTITY(read_1, (read_1) | uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), vec2(1.0, 1.0) * (mat2(1.0) * (injectionSwitch)))).x))) + 1) - 0u)) - 0u)))))) / 1u), _GLF_IDENTITY(_GLF_IDENTITY(read_1, (read_1) | uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, float(float(_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(-33.32) : _GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_IDENTITY(_GLF_FUZZED(9.6), min(_GLF_IDENTITY(_GLF_FUZZED(9.6), clamp(_GLF_IDENTITY(_GLF_FUZZED(9.6), mix(float(_GLF_FUZZED(-9.9)), float(_GLF_FUZZED(9.6)), bool(true))), _GLF_FUZZED(9.6), _GLF_FUZZED(9.6))), _GLF_IDENTITY(_GLF_FUZZED(9.6), clamp(_GLF_FUZZED(9.6), _GLF_FUZZED(9.6), _GLF_FUZZED(9.6)))))), bool(false))))))))))) + 1, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(read_1, (read_1) | uint(_GLF_ZERO(0.0, injectionSwitch.x))) + 1, (_GLF_IDENTITY(read_1, (read_1) | uint(_GLF_ZERO(0.0, injectionSwitch.x))) + 1) | (_GLF_IDENTITY(read_1, (read_1) | uint(_GLF_ZERO(_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(173.890))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), vec2(1.0, 1.0) * (mat2(1.0) * (injectionSwitch)))), max(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), vec2(1.0, 1.0) * (mat2(1.0) * (injectionSwitch)))), _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), vec2(1.0, 1.0) * (mat2(1.0) * (injectionSwitch)))))).x))) + 1))) / 1u, (true ? (_GLF_IDENTITY(_GLF_IDENTITY(read_1, (read_1) | uint(_GLF_ZERO(0.0, injectionSwitch.x))) + 1, (_GLF_IDENTITY(_GLF_IDENTITY(read_1, (read_1) | uint(_GLF_ZERO(0.0, injectionSwitch.x))) + 1, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(read_1, (read_1) | uint(_GLF_ZERO(0.0, injectionSwitch.x))) + 1, uint(uint(_GLF_IDENTITY(read_1, (read_1) | uint(_GLF_ZERO(0.0, injectionSwitch.x))) + 1)))), ((_GLF_IDENTITY(_GLF_IDENTITY(read_1, (read_1) | uint(_GLF_ZERO(0.0, injectionSwitch.x))) + 1, uint(uint(_GLF_IDENTITY(read_1, (read_1) | uint(_GLF_ZERO(0.0, injectionSwitch.x))) + 1))))) | 0u) | (_GLF_IDENTITY(read_1, (read_1) | _GLF_IDENTITY(uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0))), (_GLF_IDENTITY(uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0))), (uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0)))) ^ 0u)) << (0u & 19962u))) + 1))) | (_GLF_IDENTITY(read_1, (read_1) | uint(_GLF_ZERO(_GLF_IDENTITY(0.0, clamp(0.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0)), _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), vec2(1.0, 1.0) * (mat2(1.0) * (injectionSwitch)))).x))) + 1))) / 1u : _GLF_FUZZED(workgroup_base))))))), (uint(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(read_1, (read_1) | uint(_GLF_ZERO(0.0, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(tan(899.966)))), float(float(_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(-33.32) : injectionSwitch.x)))))))) + 1, (_GLF_IDENTITY(_GLF_IDENTITY(read_1, (read_1) | uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(asinh(vec4(-62.50, 72.83, 44.07, 3.6)).s) : injectionSwitch.x))))) + 1, _GLF_IDENTITY((_GLF_IDENTITY(read_1, (read_1) | uint(_GLF_ZERO(0.0, injectionSwitch.x))) + 1) | (_GLF_IDENTITY(read_1, (read_1) | uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), vec2(1.0, 1.0) * (mat2(1.0) * (injectionSwitch)))).x))) + 1), (_GLF_IDENTITY((_GLF_IDENTITY(read_1, (read_1) | uint(_GLF_ZERO(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-127.136)), bool(false))), injectionSwitch.x))) + 1) | (_GLF_IDENTITY(read_1, (read_1) | uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), vec2(1.0, 1.0) * (mat2(1.0) * (injectionSwitch)))).x))) + 1), 0u ^ ((_GLF_IDENTITY(read_1, (read_1) | uint(_GLF_ZERO(0.0, injectionSwitch.x))) + 1) | (_GLF_IDENTITY(read_1, (read_1) | uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), vec2(1.0, 1.0) * (mat2(1.0) * (injectionSwitch)))).x))) + 1)))) + 0u))) / 1u), max(_GLF_IDENTITY(_GLF_IDENTITY(read_1, (read_1) | uint(_GLF_ZERO(0.0, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, float(float(_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(-33.32) : injectionSwitch.x))))), mix(float(_GLF_IDENTITY(injectionSwitch.x, float(float(_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(-33.32) : injectionSwitch.x)))))), float(_GLF_FUZZED(-2.2)), bool(false)))))) + 1, (_GLF_IDENTITY(_GLF_IDENTITY(read_1, _GLF_IDENTITY((read_1), _GLF_IDENTITY(uint(uvec4((read_1), 0u, 1u, 0u)), ~ (~ (_GLF_IDENTITY(uint(uvec4((read_1), 0u, 1u, 0u)), min(uint(uvec4((read_1), 0u, 1u, 0u)), uint(uvec4((read_1), 0u, 1u, 0u)))))))) | uint(_GLF_ZERO(0.0, injectionSwitch.x))) + 1, (_GLF_IDENTITY(read_1, (read_1) | uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).x))) + 1) | (_GLF_IDENTITY(_GLF_IDENTITY(read_1, (read_1) | uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), vec2(1.0, 1.0) * (mat2(1.0) * (injectionSwitch)))).x))) + 1, 0u ^ (_GLF_IDENTITY(_GLF_IDENTITY(read_1, (read_1) | uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), vec2(1.0, 1.0) * (mat2(1.0) * (injectionSwitch)))).x))) + 1, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(read_1, clamp(_GLF_IDENTITY(read_1, max(_GLF_IDENTITY(read_1, uint(uvec4(read_1, 1u, 0u, 0u))), read_1)), read_1, read_1)), (read_1) | uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), vec2(1.0, 1.0) * (mat2(1.0) * (injectionSwitch)))).x))) + 1, (_GLF_IDENTITY(read_1, (read_1) | uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), vec2(1.0, 1.0) * (mat2(1.0) * (injectionSwitch)))).x))) + 1) - 0u)) - 0u)))))) / 1u), _GLF_IDENTITY(_GLF_IDENTITY(read_1, (read_1) | uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, float(float(_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(-33.32) : _GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_IDENTITY(_GLF_FUZZED(9.6), min(_GLF_IDENTITY(_GLF_FUZZED(9.6), clamp(_GLF_IDENTITY(_GLF_FUZZED(9.6), mix(float(_GLF_FUZZED(-9.9)), float(_GLF_FUZZED(9.6)), bool(true))), _GLF_FUZZED(9.6), _GLF_FUZZED(9.6))), _GLF_IDENTITY(_GLF_FUZZED(9.6), clamp(_GLF_FUZZED(9.6), _GLF_FUZZED(9.6), _GLF_FUZZED(9.6)))))), bool(false))))))))))) + 1, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(read_1, (read_1) | uint(_GLF_ZERO(0.0, injectionSwitch.x))) + 1, (_GLF_IDENTITY(read_1, (read_1) | uint(_GLF_ZERO(0.0, injectionSwitch.x))) + 1) | (_GLF_IDENTITY(read_1, (read_1) | uint(_GLF_ZERO(_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(173.890))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), vec2(1.0, 1.0) * (mat2(1.0) * (injectionSwitch)))), max(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), vec2(1.0, 1.0) * (mat2(1.0) * (injectionSwitch)))), _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), vec2(1.0, 1.0) * (mat2(1.0) * (injectionSwitch)))))).x))) + 1))) / 1u, (true ? (_GLF_IDENTITY(_GLF_IDENTITY(read_1, (read_1) | uint(_GLF_ZERO(0.0, injectionSwitch.x))) + 1, (_GLF_IDENTITY(_GLF_IDENTITY(read_1, (read_1) | uint(_GLF_ZERO(0.0, injectionSwitch.x))) + 1, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(read_1, (read_1) | uint(_GLF_ZERO(0.0, injectionSwitch.x))) + 1, uint(uint(_GLF_IDENTITY(read_1, (read_1) | uint(_GLF_ZERO(0.0, injectionSwitch.x))) + 1)))), ((_GLF_IDENTITY(_GLF_IDENTITY(read_1, (read_1) | uint(_GLF_ZERO(0.0, injectionSwitch.x))) + 1, uint(uint(_GLF_IDENTITY(read_1, (read_1) | uint(_GLF_ZERO(0.0, injectionSwitch.x))) + 1))))) | 0u) | (_GLF_IDENTITY(read_1, (read_1) | _GLF_IDENTITY(uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0))), (_GLF_IDENTITY(uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0))), (uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0)))) ^ 0u)) << (0u & 19962u))) + 1))) | (_GLF_IDENTITY(read_1, (read_1) | uint(_GLF_ZERO(_GLF_IDENTITY(0.0, clamp(0.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0)), _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), vec2(1.0, 1.0) * (mat2(1.0) * (injectionSwitch)))).x))) + 1))) / 1u : _GLF_FUZZED(workgroup_base)))))))) | (uint(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(read_1, (read_1) | uint(_GLF_ZERO(0.0, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(tan(899.966)))), float(float(_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(-33.32) : injectionSwitch.x)))))))) + 1, (_GLF_IDENTITY(_GLF_IDENTITY(read_1, (read_1) | uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(asinh(vec4(-62.50, 72.83, 44.07, 3.6)).s) : injectionSwitch.x))))) + 1, _GLF_IDENTITY((_GLF_IDENTITY(read_1, (read_1) | uint(_GLF_ZERO(0.0, injectionSwitch.x))) + 1) | (_GLF_IDENTITY(read_1, (read_1) | uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), vec2(1.0, 1.0) * (mat2(1.0) * (injectionSwitch)))).x))) + 1), (_GLF_IDENTITY((_GLF_IDENTITY(read_1, (read_1) | uint(_GLF_ZERO(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-127.136)), bool(false))), injectionSwitch.x))) + 1) | (_GLF_IDENTITY(read_1, (read_1) | uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), vec2(1.0, 1.0) * (mat2(1.0) * (injectionSwitch)))).x))) + 1), 0u ^ ((_GLF_IDENTITY(read_1, (read_1) | uint(_GLF_ZERO(0.0, injectionSwitch.x))) + 1) | (_GLF_IDENTITY(read_1, (read_1) | uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), vec2(1.0, 1.0) * (mat2(1.0) * (injectionSwitch)))).x))) + 1)))) + 0u))) / 1u), max(_GLF_IDENTITY(_GLF_IDENTITY(read_1, (read_1) | uint(_GLF_ZERO(0.0, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, float(float(_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(-33.32) : injectionSwitch.x))))), mix(float(_GLF_IDENTITY(injectionSwitch.x, float(float(_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(-33.32) : injectionSwitch.x)))))), float(_GLF_FUZZED(-2.2)), bool(false)))))) + 1, (_GLF_IDENTITY(_GLF_IDENTITY(read_1, _GLF_IDENTITY((read_1), _GLF_IDENTITY(uint(uvec4((read_1), 0u, 1u, 0u)), ~ (~ (_GLF_IDENTITY(uint(uvec4((read_1), 0u, 1u, 0u)), min(uint(uvec4((read_1), 0u, 1u, 0u)), uint(uvec4((read_1), 0u, 1u, 0u)))))))) | uint(_GLF_ZERO(0.0, injectionSwitch.x))) + 1, (_GLF_IDENTITY(read_1, (read_1) | uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).x))) + 1) | (_GLF_IDENTITY(_GLF_IDENTITY(read_1, (read_1) | uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), vec2(1.0, 1.0) * (mat2(1.0) * (injectionSwitch)))).x))) + 1, 0u ^ (_GLF_IDENTITY(_GLF_IDENTITY(read_1, (read_1) | uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), vec2(1.0, 1.0) * (mat2(1.0) * (injectionSwitch)))).x))) + 1, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(read_1, clamp(_GLF_IDENTITY(read_1, max(_GLF_IDENTITY(read_1, uint(uvec4(read_1, 1u, 0u, 0u))), read_1)), read_1, read_1)), (read_1) | uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), vec2(1.0, 1.0) * (mat2(1.0) * (injectionSwitch)))).x))) + 1, (_GLF_IDENTITY(read_1, (read_1) | uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), vec2(1.0, 1.0) * (mat2(1.0) * (injectionSwitch)))).x))) + 1) - 0u)) - 0u)))))) / 1u), _GLF_IDENTITY(_GLF_IDENTITY(read_1, (read_1) | uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, float(float(_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(-33.32) : _GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_IDENTITY(_GLF_FUZZED(9.6), min(_GLF_IDENTITY(_GLF_FUZZED(9.6), clamp(_GLF_IDENTITY(_GLF_FUZZED(9.6), mix(float(_GLF_FUZZED(-9.9)), float(_GLF_FUZZED(9.6)), bool(true))), _GLF_FUZZED(9.6), _GLF_FUZZED(9.6))), _GLF_IDENTITY(_GLF_FUZZED(9.6), clamp(_GLF_FUZZED(9.6), _GLF_FUZZED(9.6), _GLF_FUZZED(9.6)))))), bool(false))))))))))) + 1, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(read_1, (read_1) | uint(_GLF_ZERO(0.0, injectionSwitch.x))) + 1, (_GLF_IDENTITY(read_1, (read_1) | uint(_GLF_ZERO(0.0, injectionSwitch.x))) + 1) | (_GLF_IDENTITY(read_1, (read_1) | uint(_GLF_ZERO(_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(173.890))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), vec2(1.0, 1.0) * (mat2(1.0) * (injectionSwitch)))), max(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), vec2(1.0, 1.0) * (mat2(1.0) * (injectionSwitch)))), _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), vec2(1.0, 1.0) * (mat2(1.0) * (injectionSwitch)))))).x))) + 1))) / 1u, (true ? (_GLF_IDENTITY(_GLF_IDENTITY(read_1, (read_1) | uint(_GLF_ZERO(0.0, injectionSwitch.x))) + 1, (_GLF_IDENTITY(_GLF_IDENTITY(read_1, (read_1) | uint(_GLF_ZERO(0.0, injectionSwitch.x))) + 1, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(read_1, (read_1) | uint(_GLF_ZERO(0.0, injectionSwitch.x))) + 1, uint(uint(_GLF_IDENTITY(read_1, (read_1) | uint(_GLF_ZERO(0.0, injectionSwitch.x))) + 1)))), ((_GLF_IDENTITY(_GLF_IDENTITY(read_1, (read_1) | uint(_GLF_ZERO(0.0, injectionSwitch.x))) + 1, uint(uint(_GLF_IDENTITY(read_1, (read_1) | uint(_GLF_ZERO(0.0, injectionSwitch.x))) + 1))))) | 0u) | (_GLF_IDENTITY(read_1, (read_1) | _GLF_IDENTITY(uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0))), (_GLF_IDENTITY(uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0))), (uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0)))) ^ 0u)) << (0u & 19962u))) + 1))) | (_GLF_IDENTITY(read_1, (read_1) | uint(_GLF_ZERO(_GLF_IDENTITY(0.0, clamp(0.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0)), _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), vec2(1.0, 1.0) * (mat2(1.0) * (injectionSwitch)))).x))) + 1))) / 1u : _GLF_FUZZED(workgroup_base))))))))), 4, 64, 4);
 uint read_2 = atomicLoad(buf[virtual_gid], 4, 64, 0);
 if(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, clamp(_GLF_IDENTITY(subgroup_local_id, min(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | (_GLF_IDENTITY(subgroup_local_id, min(subgroup_local_id, subgroup_local_id)))), _GLF_IDENTITY(subgroup_local_id, max(_GLF_IDENTITY(subgroup_local_id, (true ? subgroup_local_id : _GLF_FUZZED(workgroup_id))), subgroup_local_id)))), _GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | (subgroup_local_id))) / 1u), _GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | (subgroup_local_id)), (subgroup_local_id) / _GLF_IDENTITY(1u, _GLF_IDENTITY((1u), uint(_GLF_ZERO(0.0, injectionSwitch.x)) | ((1u))) << 0u)))))) + _GLF_IDENTITY(1, min(1, 1)) < subgroup_size, bool(bvec2(subgroup_local_id + 1 < subgroup_size, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-236.007)), float(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(float((uvec4(159820u, 140387u, 9795u, 51103u) == uvec4(53720u, 85633u, 135984u, 154496u))))), bool(false)))), _GLF_IDENTITY(bool(true), bool(bvec4(bool(true), true, true, true))))))) > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   int i = 0;
   if(_GLF_DEAD(false))
    barrier();
   atomicStore(buf[_GLF_IDENTITY(next_virtual_gid, (next_virtual_gid) - 0u)], _GLF_IDENTITY(uint(read_1 + 1 == read_2), (_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, ! (! (false)))))) ? _GLF_FUZZED(next_virtual_gid) : uint(read_1 + _GLF_IDENTITY(1, max(_GLF_IDENTITY(1, min(1, 1)), _GLF_IDENTITY(1, clamp(1, _GLF_IDENTITY(1, min(_GLF_IDENTITY(1, _GLF_IDENTITY(int(ivec4(1, 0, 0, 1)), (_GLF_IDENTITY(int(ivec4(1, 0, 0, 1)), ~ (~ (int(ivec4(1, 0, 0, 1)))))) - 0)), 1)), 1)))) == read_2))) + 1, 4, 64, 4);
   if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) || false)))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 else
  {
   atomicStore(buf[next_virtual_gid], uint(read_1 + 1 == _GLF_IDENTITY(read_2, clamp(read_2, _GLF_IDENTITY(read_2, max(read_2, read_2)), read_2))) + 1, 4, 64, 4);
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)), false || (_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), true && (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), ! (! (_GLF_IDENTITY(false, (false) || false))))))))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y)))), (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y))))) && true)))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(injectionSwitch.x, float(mat3x4(injectionSwitch.x, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0)))), float(_GLF_FUZZED(-6962.1821)), bool(false))), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(_GLF_IDENTITY(pow(0.0, -9.6), min(pow(0.0, -9.6), pow(0.0, -9.6)))) : _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x, _GLF_IDENTITY(1.0, clamp(1.0, _GLF_IDENTITY(1.0, min(1.0, 1.0)), 1.0)) * (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)))))) > injectionSwitch.y), _GLF_IDENTITY(true, (_GLF_IDENTITY(true, false || (true))) || false) && ((_GLF_IDENTITY(injectionSwitch.x, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(pow(0.0, -9.6)) : _GLF_IDENTITY(injectionSwitch.x, 1.0 * (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)))))) > injectionSwitch.y)))), true && (_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(pow(0.0, -9.6)) : _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x, _GLF_IDENTITY(1.0, mix(float(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-16.07)), float(1.0), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), _GLF_IDENTITY(float(_GLF_FUZZED(-275.236)), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? float(_GLF_FUZZED(-275.236)) : _GLF_FUZZED(step(7425.5762, -140.332)))), bool(false))) * (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)))))) > injectionSwitch.y), true && ((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)), min(injectionSwitch.x, injectionSwitch.x)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(pow(0.0, -9.6)) : _GLF_IDENTITY(injectionSwitch.x, 1.0 * (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(min(injectionSwitch.x, injectionSwitch.x), (min(injectionSwitch.x, injectionSwitch.x)) - 0.0)))))) > injectionSwitch.y)))))), false || _GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(_GLF_IDENTITY(bvec3((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false, true), _GLF_IDENTITY(bvec3(bvec4(bvec3((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false, true), true)), bvec3(bvec3(bvec3(bvec4(bvec3((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false, true), true))))))))), bool(bvec2(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(_GLF_IDENTITY(bvec3(injectionSwitch.x > injectionSwitch.y, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bvec3(bvec3(bvec3(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(injectionSwitch.x > injectionSwitch.y, true, false, true)))) || false), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))))), _GLF_IDENTITY(false || (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), (false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && true)), false)))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, ! (! (false))))), (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, (false) || false)))))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(7.9)))))))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
}
