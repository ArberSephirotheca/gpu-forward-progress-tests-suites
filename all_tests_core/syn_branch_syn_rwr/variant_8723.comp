#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 uint subgroup_size = gl_SubgroupSize;
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 uint num_workgroup = _GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups.x, clamp(gl_NumWorkGroups.x, gl_NumWorkGroups.x, _GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, min(gl_NumWorkGroups, _GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) >> uvec3(0u, 0u, 0u)))).x, (_GLF_IDENTITY(gl_NumWorkGroups, (_GLF_IDENTITY(gl_NumWorkGroups, clamp(gl_NumWorkGroups, gl_NumWorkGroups, gl_NumWorkGroups))) + uvec3(0u, 0u, 0u)).x) - 0u))), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups.x, clamp(gl_NumWorkGroups.x, gl_NumWorkGroups.x, _GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, min(gl_NumWorkGroups, _GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) >> uvec3(0u, 0u, 0u)))).x, (_GLF_IDENTITY(gl_NumWorkGroups, (_GLF_IDENTITY(gl_NumWorkGroups, clamp(gl_NumWorkGroups, gl_NumWorkGroups, gl_NumWorkGroups))) + uvec3(0u, 0u, 0u)).x) - 0u))), (_GLF_IDENTITY(gl_NumWorkGroups.x, clamp(gl_NumWorkGroups.x, gl_NumWorkGroups.x, _GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, min(gl_NumWorkGroups, _GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) >> uvec3(0u, 0u, 0u)))).x, (_GLF_IDENTITY(gl_NumWorkGroups, (_GLF_IDENTITY(gl_NumWorkGroups, clamp(gl_NumWorkGroups, gl_NumWorkGroups, gl_NumWorkGroups))) + uvec3(0u, 0u, 0u)).x) - 0u)))) >> 0u))));
 uint workgroup_size = gl_WorkGroupSize.x;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, false || (false))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch)), clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch)), min(_GLF_IDENTITY(injectionSwitch, mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch)), _GLF_IDENTITY(injectionSwitch, mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch)))), _GLF_IDENTITY(injectionSwitch, mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch)), _GLF_IDENTITY(injectionSwitch, mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch)))).x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))), bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))), bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, float(mat2x4(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * _GLF_ONE(1.0, injectionSwitch.y)), 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0)))) * cos(0.0)) > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) - vec2(0.0, 0.0), min(_GLF_IDENTITY((injectionSwitch) - vec2(0.0, 0.0), mat2(1.0) * ((injectionSwitch) - vec2(0.0, 0.0))), (injectionSwitch) - vec2(0.0, 0.0)))).y, ! (! _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * _GLF_IDENTITY(vec2(1.0, 1.0), mix(vec2((vec2(1.0, 1.0))[0], _GLF_FUZZED(-352.412)), vec2(_GLF_FUZZED(-2145.5907), (vec2(1.0, 1.0))[1]), bvec2(false, true)))).y), (_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * _GLF_IDENTITY(vec2(1.0, _GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, min(1.0, 1.0)), 1.0)), _GLF_IDENTITY(1.0, float(mat3(1.0, determinant(mat2(0.0, 1.0, 0.0, 0.0)), 0.0, 0.0, 1.0, sqrt(1.0), 0.0, 1.0, 1.0))), _GLF_IDENTITY(1.0, max(1.0, 1.0))))), mix(vec2((vec2(1.0, 1.0))[0], _GLF_FUZZED(-352.412)), vec2(_GLF_FUZZED(-2145.5907), (vec2(1.0, 1.0))[1]), bvec2(false, true)))).y), bool(bvec3((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * _GLF_IDENTITY(vec2(1.0, 1.0), mix(vec2((_GLF_IDENTITY(vec2(1.0, 1.0), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(vec2(-7113.6198, 92.48)) : vec2(1.0, 1.0))))[0], _GLF_FUZZED(-352.412)), vec2(_GLF_FUZZED(-2145.5907), (vec2(1.0, 1.0))[1]), bvec2(false, true)))).y), true, true)))) && true)))))), false, false)))))))
  return;
 if(_GLF_DEAD(false))
  return;
 uint workgroup_id = gl_WorkGroupID.x;
 uint workgroup_base = _GLF_IDENTITY(workgroup_size, (workgroup_size) - 0u) * _GLF_IDENTITY(workgroup_id, max(_GLF_IDENTITY(workgroup_id, (_GLF_IDENTITY(workgroup_id, (workgroup_id) + 0u)) - 0u), workgroup_id));
 uint virtual_gid = _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, (_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, (workgroup_base + subgroup_id * subgroup_size) / 1u)) | (workgroup_base + subgroup_id * subgroup_size)), (false ? _GLF_IDENTITY(_GLF_FUZZED(_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY((subgroup_size) ^ (0u ^ _GLF_IDENTITY(0u, (true ? 0u : _GLF_FUZZED(workgroup_size)))), ~ (~ ((subgroup_size) ^ (0u ^ _GLF_IDENTITY(0u, (true ? 0u : _GLF_FUZZED(workgroup_size))))))))), (_GLF_FUZZED(_GLF_IDENTITY(subgroup_size, (subgroup_size) | (subgroup_size)))) - (_GLF_IDENTITY(0u << _GLF_IDENTITY(uint(6u), uint(6u)), (0u << _GLF_IDENTITY(uint(6u), uint(6u))) ^ 0u))) : workgroup_base + subgroup_id * subgroup_size)) + subgroup_local_id;
 if(_GLF_DEAD(false))
  return;
 uint next_virtual_gid = _GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, max(_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, ~ (~ (workgroup_base + subgroup_id * subgroup_size))), workgroup_base + subgroup_id * subgroup_size)) + ((subgroup_local_id + 1) % _GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(uint(uvec2(subgroup_size, (0u >> _GLF_IDENTITY(_GLF_IDENTITY(uint(0u), (uint(0u)) | (uint(0u))), uint(0u))))), (false ? _GLF_FUZZED(virtual_gid) : uint(uvec2(subgroup_size, _GLF_IDENTITY((_GLF_IDENTITY(0u, uint(uvec4(0u, _GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), float(vec3(_GLF_ONE(1.0, injectionSwitch.y), determinant(mat4(tan(0.0), length(vec3(0.0, 0.0, 0.0)), 0.0, 0.0, sqrt(1.0), 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0)), log(1.0))))), (uint(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), float(vec3(_GLF_ONE(1.0, injectionSwitch.y), determinant(mat4(tan(0.0), length(vec3(0.0, 0.0, 0.0)), 0.0, 0.0, sqrt(1.0), 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0)), log(1.0)))))) - _GLF_IDENTITY(0u, uint(uint(0u)))), 0u, 0u))) >> _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(0u, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(bitfieldReverse(virtual_gid)) : 0u))), min(uint(_GLF_IDENTITY(0u, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(bitfieldReverse(virtual_gid)) : 0u))), uint(_GLF_IDENTITY(0u, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(bitfieldReverse(virtual_gid)) : 0u))))), min(uint(0u), _GLF_IDENTITY(_GLF_IDENTITY(uint(0u), 0u ^ (uint(0u))), 0u + _GLF_IDENTITY((uint(0u)), ((uint(0u))) << 0u)))), uint(0u))), uint(_GLF_ZERO(0.0, injectionSwitch.x)) | (_GLF_IDENTITY((0u >> _GLF_IDENTITY(_GLF_IDENTITY(uint(0u), min(uint(0u), _GLF_IDENTITY(_GLF_IDENTITY(uint(0u), 0u ^ (uint(0u))), _GLF_IDENTITY(0u, uint(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (0u)) + (uint(0u))))), uint(0u))), (false ? _GLF_FUZZED(106715u) : (_GLF_IDENTITY(0u, uint(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(0u, (0u) - 0u), uint(_GLF_ONE(1.0, injectionSwitch.y)), 1u), (uvec3(_GLF_IDENTITY(0u, (0u) - 0u), uint(_GLF_ONE(1.0, injectionSwitch.y)), 1u)) * uvec3(1u, 1u, 1u)))) >> _GLF_IDENTITY(_GLF_IDENTITY(uint(0u), min(uint(0u), _GLF_IDENTITY(_GLF_IDENTITY(uint(0u), _GLF_IDENTITY(0u ^ (uint(0u)), uint(_GLF_IDENTITY(uvec4(0u ^ (uint(0u)), 1u, 0u, 1u), min(uvec4(0u ^ (uint(0u)), 1u, 0u, 1u), uvec4(0u ^ (uint(0u)), 1u, 0u, 1u)))))), 0u + (uint(_GLF_IDENTITY(0u, uint(uvec2(0u, (0u ^ 0u))))))))), uint(0u)))))))))))));
 if(_GLF_DEAD(false))
  return;
 uint read_1 = atomicLoad(buf[virtual_gid], 4, 64, 0);
 atomicStore(buf[next_virtual_gid], uint(_GLF_IDENTITY(read_1 + 1, _GLF_IDENTITY((_GLF_IDENTITY(read_1 + _GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(82637))), (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, bool(bvec2(false, true))))) ? _GLF_FUZZED(321.685) : _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(mat3x4(injectionSwitch, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, length(vec4(0.0, 0.0, 0.0, 0.0))))).x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)))) > injectionSwitch.y) || false))) ? _GLF_FUZZED(_GLF_IDENTITY((workgroup_id / (workgroup_id ^ read_1)), max((workgroup_id / (workgroup_id ^ _GLF_IDENTITY(read_1, (_GLF_IDENTITY(read_1, max(read_1, read_1))) / 1u))), (workgroup_id / (workgroup_id ^ read_1))))) : read_1 + 1))), 0u + ((_GLF_IDENTITY(read_1 + _GLF_IDENTITY(1, (int(_GLF_ZERO(0.0, injectionSwitch.x)) >> _GLF_IDENTITY(int(1), int(1))) | (1)), (_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(321.685) : _GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)))) > injectionSwitch.y) || false))) ? _GLF_FUZZED(_GLF_IDENTITY((workgroup_id / (workgroup_id ^ read_1)), max((workgroup_id / (workgroup_id ^ read_1)), (workgroup_id / (workgroup_id ^ read_1))))) : read_1 + 1))))) >> 0u)), 4, 64, 4);
 uint read_2 = atomicLoad(buf[_GLF_IDENTITY(virtual_gid, (virtual_gid) | _GLF_IDENTITY(0u, max(0u, 0u)))], _GLF_IDENTITY(4, max(4, 4)), 64, _GLF_IDENTITY(_GLF_IDENTITY(0, (0) / 1), (0) / 1));
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), _GLF_TRUE(_GLF_IDENTITY(true, ! (! (true))), _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ((injectionSwitch.x < injectionSwitch.y)) || false)) && ((! (false)))))))
  return;
 if(subgroup_local_id + _GLF_IDENTITY(1, (1) / (_GLF_IDENTITY((_GLF_IDENTITY(1 << _GLF_IDENTITY(int(5), int(5)), (_GLF_IDENTITY(0 | 0, (0 | 0) >> 0)) + (1 << _GLF_IDENTITY(_GLF_IDENTITY(int(5), (false ? _GLF_FUZZED(15856) : int(5))), int(5))))), ((_GLF_IDENTITY(1 << _GLF_IDENTITY(int(5), int(5)), (_GLF_IDENTITY(0 | 0, (0 | 0) >> 0)) + (1 << _GLF_IDENTITY(_GLF_IDENTITY(int(5), (false ? _GLF_FUZZED(15856) : int(5))), int(5)))))) >> _GLF_IDENTITY(0, 0 | (0))) >> _GLF_IDENTITY(int(5), int(5)))) < subgroup_size)
  {
   int i = _GLF_IDENTITY(0, _GLF_IDENTITY(min(0, 0), (min(0, 0)) - (0 >> _GLF_IDENTITY(int(2), int(2)))));
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), vec2(1.0, 0.0)))))), _GLF_IDENTITY(! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), _GLF_IDENTITY(bool(bvec2(! (! (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true)))), true)), ! (_GLF_IDENTITY(! (bool(bvec2(! (! (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true)))), true))), ! (! (! (bool(bvec2(! (! (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true)))), true))))))))))), ((_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(! (! (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && ((injectionSwitch.x > injectionSwitch.y)))))), bool(bvec2(! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true)))))) || false))) || ((injectionSwitch.x > injectionSwitch.y))))))
    return;
   atomicStore(buf[next_virtual_gid], _GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_IDENTITY(read_1, _GLF_IDENTITY((read_1) | (read_1), min((read_1) | (read_1), (read_1) | (read_1)))) + 1 == read_2, (_GLF_IDENTITY(read_1, _GLF_IDENTITY((read_1) | (_GLF_IDENTITY(read_1, clamp(read_1, read_1, read_1))), min(_GLF_IDENTITY(_GLF_IDENTITY((read_1), ((read_1)) << _GLF_IDENTITY(0u, (0u) | (0u))), ((read_1)) << _GLF_IDENTITY((175100u & 0u), ((175100u & 0u)) | (_GLF_IDENTITY((175100u & 0u), clamp((175100u & 0u), (175100u & 0u), (175100u & 0u)))))) | (read_1), _GLF_IDENTITY((read_1), ~ (~ (_GLF_IDENTITY((read_1), ((_GLF_IDENTITY(read_1, (read_1) | (read_1)))) / 1u)))) | (read_1)))) + 1 == read_2) || _GLF_IDENTITY(false, true && (false)))) + 1, (_GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_IDENTITY(read_1, _GLF_IDENTITY((read_1) | (read_1), min((read_1) | (read_1), (read_1) | (read_1)))) + 1 == read_2, _GLF_IDENTITY((_GLF_IDENTITY(read_1, _GLF_IDENTITY((read_1) | (_GLF_IDENTITY(read_1, clamp(read_1, read_1, read_1))), min(_GLF_IDENTITY(_GLF_IDENTITY((read_1), ((read_1)) << 0u), ((read_1)) << (175100u & 0u)) | (read_1), _GLF_IDENTITY((read_1), ~ (~ (_GLF_IDENTITY((read_1), ((_GLF_IDENTITY(read_1, (read_1) | (read_1)))) / 1u)))) | (read_1)))) + 1 == read_2), (_GLF_IDENTITY((_GLF_IDENTITY(read_1, _GLF_IDENTITY((read_1) | (_GLF_IDENTITY(read_1, clamp(read_1, read_1, read_1))), min(_GLF_IDENTITY(_GLF_IDENTITY((read_1), ((read_1)) << 0u), ((read_1)) << (175100u & 0u)) | (read_1), _GLF_IDENTITY((read_1), ~ (~ (_GLF_IDENTITY((read_1), ((_GLF_IDENTITY(read_1, (read_1) | (read_1)))) / 1u)))) | (read_1)))) + 1 == read_2), true && ((_GLF_IDENTITY(read_1, _GLF_IDENTITY((read_1) | (_GLF_IDENTITY(read_1, clamp(read_1, read_1, read_1))), min(_GLF_IDENTITY(_GLF_IDENTITY((read_1), ((read_1)) << 0u), ((read_1)) << (175100u & 0u)) | (read_1), _GLF_IDENTITY((read_1), ~ (~ (_GLF_IDENTITY((read_1), ((_GLF_IDENTITY(read_1, (read_1) | (read_1)))) / 1u)))) | (read_1)))) + 1 == read_2)))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || _GLF_IDENTITY(false, true && (false)))) + 1, max(uint(_GLF_IDENTITY(_GLF_IDENTITY(read_1, _GLF_IDENTITY((read_1) | (read_1), min((read_1) | (read_1), (read_1) | (read_1)))) + 1 == read_2, (_GLF_IDENTITY(read_1, _GLF_IDENTITY((read_1) | (_GLF_IDENTITY(read_1, clamp(read_1, read_1, read_1))), min(_GLF_IDENTITY(_GLF_IDENTITY((read_1), ((read_1)) << 0u), ((read_1)) << (175100u & 0u)) | (read_1), _GLF_IDENTITY((read_1), ~ (~ (_GLF_IDENTITY((read_1), ((_GLF_IDENTITY(read_1, (read_1) | (read_1)))) / 1u)))) | (read_1)))) + 1 == read_2) || _GLF_IDENTITY(false, true && (false)))) + 1, uint(_GLF_IDENTITY(_GLF_IDENTITY(read_1, _GLF_IDENTITY((read_1) | (read_1), min(_GLF_IDENTITY((read_1) | (read_1), 1u * ((read_1) | (read_1))), (read_1) | (read_1)))) + 1 == read_2, (_GLF_IDENTITY(read_1, _GLF_IDENTITY((read_1) | (_GLF_IDENTITY(read_1, clamp(read_1, read_1, read_1))), min(_GLF_IDENTITY(_GLF_IDENTITY((read_1), ((read_1)) << 0u), ((read_1)) << (175100u & 0u)) | (read_1), _GLF_IDENTITY((_GLF_IDENTITY(read_1, (read_1) | 0u)), ~ (~ _GLF_IDENTITY((_GLF_IDENTITY((read_1), ((_GLF_IDENTITY(read_1, (read_1) | (read_1)))) / 1u)), (_GLF_IDENTITY(false, ! (! (false))) ? _GLF_FUZZED(subgroup_id) : (_GLF_IDENTITY((read_1), ((_GLF_IDENTITY(read_1, (read_1) | (read_1)))) / 1u)))))) | (read_1)))) + 1 == read_2) || _GLF_IDENTITY(false, true && (false)))) + 1))) ^ 0u), _GLF_IDENTITY(_GLF_IDENTITY(4, (4) << 0), (_GLF_IDENTITY(_GLF_IDENTITY(4, (4) << 0), (_GLF_IDENTITY(_GLF_IDENTITY(4, (_GLF_IDENTITY(4, (true ? 4 : _GLF_FUZZED(i)))) * int(_GLF_ONE(1.0, injectionSwitch.y))), (4) << 0)) ^ 0)) + 0), 64, 4);
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! _GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), ! (! ((_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true)) || false))))))))))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_DEAD(false), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0) > injectionSwitch.y)), _GLF_IDENTITY(true && (_GLF_FALSE(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, ! (! (false))))), (injectionSwitch.x > injectionSwitch.y))), (true && (_GLF_FALSE(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, ! (! (false))))), (injectionSwitch.x > injectionSwitch.y)))) && true))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(-502.400)), bool(_GLF_IDENTITY(false, (false) && true))))))))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec4(false, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)))) || false)))
        return;
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0), injectionSwitch.y))) && _GLF_IDENTITY(true, ! (! (true))))) || false))))), bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(6681.2397)), float(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0)), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), float(mat2(injectionSwitch.y, 1.0, 0.0, 1.0))))), false, true)))))
        return;
       return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false))))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec4(bvec2(false, true), _GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(bvec3(! (false), false, false))))), false)))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec4(bvec2(false, true), false, false)))), true && (_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec4(bvec2(false, true), false, false)))), false || (bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec4(bvec2(false, true), false, false)))))))), (bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec4(bvec2(false, true), false, false))))) || false)))), true && (bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec4(bvec2(false, true), false, false)))))))))
        return;
       return;
      }
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
  }
 else
  {
   atomicStore(buf[next_virtual_gid], _GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1, clamp(_GLF_IDENTITY(read_1 + 1, 0u | (_GLF_IDENTITY(read_1 + 1, (read_1 + 1) | (read_1 + 1)))), _GLF_IDENTITY(read_1 + 1, clamp(read_1 + 1, read_1 + 1, read_1 + 1)), read_1 + 1)), (read_1 + 1) * _GLF_IDENTITY(1u, uint(uvec2(1u, uint(_GLF_ZERO(0.0, injectionSwitch.x)))))), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(read_1, 0u | (_GLF_IDENTITY(read_1, 1u * (_GLF_IDENTITY(read_1, _GLF_IDENTITY((read_1) - 0u, (_GLF_IDENTITY((read_1) - 0u, (false ? _GLF_FUZZED(subgroup_size) : (read_1) - 0u))) | 0u)))))), (_GLF_IDENTITY(read_1, 0u | (_GLF_IDENTITY(read_1, 1u * (_GLF_IDENTITY(read_1, _GLF_IDENTITY((read_1) - 0u, (_GLF_IDENTITY((read_1) - 0u, (false ? _GLF_FUZZED(subgroup_size) : (read_1) - 0u))) | 0u))))))) << 0u) + 1), 0u + ((read_1 + 1))) | 0u) == read_2), min(uint(_GLF_IDENTITY(read_1 + 1, (read_1 + 1) | 0u) == _GLF_IDENTITY(read_2, (_GLF_IDENTITY(read_2, _GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (read_2), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(82425u) : _GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (read_2), (_GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (read_2), min(uint(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (read_2), _GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (_GLF_IDENTITY(read_2, (_GLF_IDENTITY(read_2, (read_2) ^ 0u)) << 0u)), (uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(3.7), _GLF_FUZZED((2.8 / 2.0))), bvec2(false, false))).x)) ^ (read_2)) | 0u)))) | (uint(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (read_2))))))) + 0u)), uint(_GLF_IDENTITY(read_1 + 1, (read_1 + 1) | 0u) == read_2))) + _GLF_IDENTITY(1, (_GLF_IDENTITY(0, (0) | 0) >> _GLF_IDENTITY(_GLF_IDENTITY(int(5), int(5)), (_GLF_IDENTITY(int(5), int(5))) / 1)) | (1)), (false ? _GLF_FUZZED(read_2) : _GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1, clamp(_GLF_IDENTITY(read_1 + 1, 0u | (_GLF_IDENTITY(read_1 + 1, (read_1 + 1) | (read_1 + 1)))), _GLF_IDENTITY(read_1 + 1, clamp(read_1 + 1, read_1 + 1, read_1 + 1)), read_1 + 1)), (read_1 + 1) * _GLF_IDENTITY(1u, uint(_GLF_IDENTITY(uvec2(1u, uint(_GLF_ZERO(0.0, injectionSwitch.x))), uvec2(0u, 0u) ^ (_GLF_IDENTITY(uvec2(1u, uint(_GLF_ZERO(0.0, injectionSwitch.x))), (uvec2(1u, uint(_GLF_ZERO(0.0, injectionSwitch.x)))) ^ uvec2(0u, 0u))))))), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(read_1, 0u | (_GLF_IDENTITY(read_1, 1u * (_GLF_IDENTITY(read_1, _GLF_IDENTITY((read_1) - 0u, (_GLF_IDENTITY((read_1) - 0u, (false ? _GLF_FUZZED(subgroup_size) : (read_1) - 0u))) | 0u)))))), (_GLF_IDENTITY(read_1, 0u | (_GLF_IDENTITY(_GLF_IDENTITY(read_1, 1u * (_GLF_IDENTITY(read_1, _GLF_IDENTITY((read_1) - 0u, (_GLF_IDENTITY((read_1) - 0u, (false ? _GLF_FUZZED(subgroup_size) : (read_1) - 0u))) | 0u)))), ~ (~ (_GLF_IDENTITY(read_1, 1u * (_GLF_IDENTITY(_GLF_IDENTITY(read_1, _GLF_IDENTITY((read_1) - 0u, (_GLF_IDENTITY((read_1) - 0u, (false ? _GLF_FUZZED(subgroup_size) : (read_1) - 0u))) | 0u)), (_GLF_IDENTITY(read_1, _GLF_IDENTITY(_GLF_IDENTITY((read_1) - 0u, (_GLF_IDENTITY((read_1) - 0u, (false ? _GLF_FUZZED(subgroup_size) : (read_1) - 0u))) | 0u), (_GLF_IDENTITY(_GLF_IDENTITY((read_1) - 0u, (_GLF_IDENTITY((read_1) - 0u, (false ? _GLF_FUZZED(subgroup_size) : (read_1) - 0u))) | 0u), uint(uvec4(_GLF_IDENTITY((read_1) - 0u, (_GLF_IDENTITY((read_1) - 0u, (false ? _GLF_FUZZED(subgroup_size) : (read_1) - 0u))) | 0u), 0u, 0u, 0u)))) << 0u))) - 0u))))))))) << 0u) + 1), 0u + ((read_1 + 1))) | 0u) == read_2), min(uint(_GLF_IDENTITY(read_1 + 1, (read_1 + 1) | 0u) == _GLF_IDENTITY(read_2, (_GLF_IDENTITY(read_2, _GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (read_2), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(82425u) : _GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (read_2), (_GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (read_2), (false ? _GLF_FUZZED(subgroup_size) : uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], max(injectionSwitch[0], injectionSwitch[0])), injectionSwitch[1])).x)) ^ (read_2))), min(uint(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (read_2), _GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (_GLF_IDENTITY(read_2, (_GLF_IDENTITY(read_2, (read_2) ^ 0u)) << 0u)), (uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(3.7), _GLF_FUZZED((2.8 / 2.0))), bvec2(false, false))).x)) ^ (read_2)) | 0u)))) | (uint(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (read_2))))))) + 0u)), uint(_GLF_IDENTITY(read_1 + 1, (read_1 + 1) | 0u) == read_2))) + _GLF_IDENTITY(1, (_GLF_IDENTITY(0, (0) | 0) >> _GLF_IDENTITY(_GLF_IDENTITY(int(5), int(5)), (_GLF_IDENTITY(int(5), int(5))) / 1)) | (1)))), 4, 64, 4);
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), injectionSwitch, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))) : _GLF_FUZZED(injectionSwitch))).y))))
      return;
     return;
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(false, ! (! (false))), false)), ! (_GLF_IDENTITY(! (bool(bvec2(_GLF_IDENTITY(false, ! (! (false))), false))), true && (! (bool(bvec2(_GLF_IDENTITY(false, ! (! (false))), false)))))))))))))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(-5318.8299)))) * sqrt(exp(0.0))) > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(46.36)), float(injectionSwitch.y), bool(true)))) - 0.0))))), false || ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y, ! (! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(46.36)), float(injectionSwitch.y), bool(true)))) - 0.0))))))), ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch)).y))))) && _GLF_IDENTITY(true, _GLF_IDENTITY(bool(bool(true)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (bool(bool(true)))))) && true), (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, 0.0 + (injectionSwitch.y)), _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(3692.8774) : injectionSwitch.y))))) && true)), _GLF_IDENTITY(! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), ! (! (! ((injectionSwitch.x > injectionSwitch.y))))), bool(bvec2(! _GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(bvec2(((injectionSwitch.x > injectionSwitch.y)), false)), true && (bool(bvec2(((injectionSwitch.x > injectionSwitch.y)), false)))))) && true), false)))), true && ((_GLF_IDENTITY(_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), ! (! (! ((injectionSwitch.x > injectionSwitch.y))))), bool(bvec2(! _GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(bvec2(((injectionSwitch.x > injectionSwitch.y)), false)), true && (bool(bvec2(((injectionSwitch.x > injectionSwitch.y)), false)))))) && true), false)))))), (! (! (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, 1.0 * (injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)))).y, ! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), ! (_GLF_IDENTITY(! ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(_GLF_IDENTITY(float(injectionSwitch.x), (float(injectionSwitch.x)) - 0.0)), max(_GLF_IDENTITY(float(_GLF_IDENTITY(float(injectionSwitch.x), _GLF_IDENTITY((float(injectionSwitch.x)) - 0.0, clamp(_GLF_IDENTITY((float(injectionSwitch.x)) - 0.0, ((float(injectionSwitch.x)) - 0.0) - 0.0), (float(injectionSwitch.x)) - 0.0, (float(injectionSwitch.x)) - 0.0)))), (false ? _GLF_FUZZED(-19.98) : float(_GLF_IDENTITY(float(injectionSwitch.x), (float(injectionSwitch.x)) - 0.0)))), float(_GLF_IDENTITY(float(injectionSwitch.x), (float(injectionSwitch.x)) - 0.0))))) > injectionSwitch.y, ! (! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(mat4x2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), mat2(1.0) * (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))), _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(-1.0) : 0.0)), length(vec3(0.0, _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))).s) : 0.0)), 0.0)), 1.0, 1.0, 0.0, 1.0))).y))))), true && (! (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(! (! (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(sqrt(vec2(0.0, 0.0)), (sqrt(vec2(0.0, 0.0))) + log(exp(vec2(0.0, 0.0)))) + (injectionSwitch)).y, true && (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, sqrt(vec2(0.0, 0.0)) + (injectionSwitch)).y)))), false || (! (! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, sqrt(vec2(0.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)))) + (injectionSwitch)).y)))))), _GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bool(false)))) && true) || ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(! _GLF_IDENTITY((_GLF_IDENTITY(! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, sqrt(vec2(0.0, 0.0)) + (injectionSwitch)).y), ! (! (! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, sqrt(vec2(0.0, 0.0)) + (injectionSwitch)).y))))), ! (_GLF_IDENTITY(! ((_GLF_IDENTITY(_GLF_IDENTITY(! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, sqrt(vec2(0.0, 0.0)) + (injectionSwitch)).y), (! _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, sqrt(vec2(0.0, 0.0)) + (injectionSwitch)).y), false || (_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, sqrt(vec2(0.0, 0.0)) + (injectionSwitch)).y), bool(bvec4((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, sqrt(vec2(0.0, 0.0)) + (injectionSwitch)).y), true, true, true)))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), ! (! (! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, sqrt(vec2(0.0, 0.0)) + (injectionSwitch)).y)))))), false || (! ((_GLF_IDENTITY(! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, sqrt(vec2(0.0, 0.0)) + (injectionSwitch)).y), ! (! (! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, sqrt(vec2(0.0, 0.0)) + (injectionSwitch)).y)))))))))), false || _GLF_IDENTITY((! (_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, sqrt(vec2(0.0, 0.0)) + (injectionSwitch)).y, _GLF_IDENTITY(bool(bvec3(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, sqrt(vec2(0.0, 0.0)) + (injectionSwitch)).y, false, true)), bool(bvec3(bool(bvec3(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, sqrt(vec2(0.0, 0.0)) + (injectionSwitch)).y, false, true)), false, true))))), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, sqrt(vec2(0.0, 0.0)) + (injectionSwitch)).y, _GLF_IDENTITY(bool(bvec3(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, sqrt(vec2(0.0, 0.0)) + (injectionSwitch)).y, false, true)), bool(bvec3(bool(bvec3(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, sqrt(vec2(0.0, 0.0)) + (injectionSwitch)).y, false, true)), false, true))))), ! (! (_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, sqrt(vec2(0.0, 0.0)) + (injectionSwitch)).y, _GLF_IDENTITY(bool(bvec3(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, sqrt(vec2(0.0, 0.0)) + (injectionSwitch)).y, false, true)), bool(bvec3(bool(bvec3(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, sqrt(vec2(0.0, 0.0)) + (injectionSwitch)).y, false, true)), false, true))))), bool(bool(! (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, sqrt(vec2(0.0, 0.0)) + (injectionSwitch)).y, _GLF_IDENTITY(bool(bvec3(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, sqrt(vec2(0.0, 0.0)) + (injectionSwitch)).y, false, true)), bool(bvec3(bool(bvec3(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, sqrt(vec2(0.0, 0.0)) + (injectionSwitch)).y, false, true)), false, true))))))))))), true), bvec2(bvec2(bvec2(_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, sqrt(vec2(0.0, 0.0)) + (injectionSwitch)).y, _GLF_IDENTITY(bool(bvec3(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, sqrt(vec2(0.0, 0.0)) + (injectionSwitch)).y, false, true)), bool(bvec3(bool(bvec3(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, sqrt(vec2(0.0, 0.0)) + (injectionSwitch)).y, false, true)), false, true))))), ! (! (_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, sqrt(vec2(0.0, 0.0)) + (injectionSwitch)).y, _GLF_IDENTITY(bool(bvec3(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, sqrt(vec2(0.0, 0.0)) + (injectionSwitch)).y, false, true)), bool(bvec3(bool(bvec3(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, sqrt(vec2(0.0, 0.0)) + (injectionSwitch)).y, false, true)), false, true))))), bool(bool(! (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, sqrt(vec2(0.0, 0.0)) + (injectionSwitch)).y, _GLF_IDENTITY(bool(bvec3(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, sqrt(vec2(0.0, 0.0)) + (injectionSwitch)).y, false, true)), bool(bvec3(bool(bvec3(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, sqrt(vec2(0.0, 0.0)) + (injectionSwitch)).y, false, true)), false, true))))))))))), true)))))))), true && ((! (! (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, sqrt(vec2(0.0, 0.0)) + (injectionSwitch)).y, _GLF_IDENTITY(bool(bvec3(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, sqrt(vec2(0.0, 0.0)) + (injectionSwitch)).y, false, true)), bool(bvec3(bool(bvec3(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, sqrt(vec2(0.0, 0.0)) + (injectionSwitch)).y, false, true)), false, true)))))))))))))))))))))) && _GLF_IDENTITY(_GLF_IDENTITY(true, true && (true)), true && (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(true, true && (true)), ! _GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_IDENTITY(true, true && (true))), (! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(true, true && (true)), bool(bvec2(_GLF_IDENTITY(true, true && (true)), _GLF_IDENTITY(true, false || (true)))))), bool(bvec2(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(true, true && (true)), bool(bvec2(_GLF_IDENTITY(true, true && (true)), _GLF_IDENTITY(true, false || (true)))))), (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(true, true && (true)), bool(bvec2(_GLF_IDENTITY(true, true && (true)), _GLF_IDENTITY(true, false || (true)))))), ! (! ((_GLF_IDENTITY(_GLF_IDENTITY(true, true && (true)), bool(bvec2(_GLF_IDENTITY(true, true && (true)), _GLF_IDENTITY(true, false || (true)))))))))) || false), true)))) && true)), (_GLF_IDENTITY((! (_GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, bool(bool(true))))))), false || ((! (_GLF_IDENTITY(true, true && (true))))))) && true)), _GLF_IDENTITY(! (! (_GLF_IDENTITY(true, _GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(true, (true) && true)), ! (! (! (_GLF_IDENTITY(true, (true) && true))))))) && (true)))), (! (! (_GLF_IDENTITY(true, _GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(true, (true) && true)), ! (! (! (_GLF_IDENTITY(true, (true) && true))))))) && (true))))) && true)))))), true && (_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true), _GLF_IDENTITY(! (_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), bool(bvec2(! ((injectionSwitch.x > injectionSwitch.y)), false)))), (! (! _GLF_IDENTITY(((_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)))) > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch), mix(vec2(_GLF_FUZZED(-1650.9115), ((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - abs(vec2(0.0, 0.0)))))[1]), vec2(((injectionSwitch))[0], _GLF_FUZZED(39.28)), bvec2(true, false)))[0], mix(float((injectionSwitch)[0]), float(_GLF_FUZZED(vec2(3.6, 6.0).x)), bool(false))), (injectionSwitch)[1]), vec2(_GLF_FUZZED(vec3(2.0, -96.37, -942.356).y), _GLF_FUZZED((_GLF_IDENTITY(true ? _GLF_IDENTITY(-5.0, max(_GLF_IDENTITY(-5.0, clamp(-5.0, -5.0, -5.0)), -5.0)) : (15.40), clamp(_GLF_IDENTITY(_GLF_IDENTITY(true ? -5.0 : (15.40), max(_GLF_IDENTITY(true ? -5.0 : (15.40), clamp(true ? -5.0 : (15.40), true ? -5.0 : (15.40), true ? -5.0 : (15.40))), true ? -5.0 : (15.40))), 1.0 * (_GLF_IDENTITY(_GLF_IDENTITY(true ? -5.0 : (15.40), clamp(_GLF_IDENTITY(true ? -5.0 : (15.40), clamp(true ? -5.0 : (15.40), _GLF_IDENTITY(true ? -5.0 : (15.40), max(true ? -5.0 : (15.40), true ? -5.0 : (15.40))), true ? -5.0 : (15.40))), true ? -5.0 : (15.40), true ? -5.0 : (15.40))), max(_GLF_IDENTITY(true ? -5.0 : (15.40), clamp(true ? -5.0 : _GLF_IDENTITY((15.40), (_GLF_IDENTITY((15.40), max(_GLF_IDENTITY((15.40), max((15.40), (15.40))), (15.40)))) / 1.0), true ? -5.0 : (15.40), true ? -5.0 : (15.40))), true ? _GLF_IDENTITY(-5.0, mix(float(_GLF_FUZZED(204.581)), float(_GLF_IDENTITY(-5.0, clamp(-5.0, -5.0, -5.0))), bool(true))) : (15.40))))), true ? -5.0 : (15.40), true ? -5.0 : (15.40)))))), bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))).y)), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY((_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y))) / _GLF_IDENTITY(round(length(normalize(1.0))), mix(float(round(length(normalize(1.0)))), float(_GLF_FUZZED(-8.2)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), ! (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y))))))), true && (((injectionSwitch.x > injectionSwitch.y))))), ! (! (bool(_GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(true, ! (! (true))) && (((injectionSwitch.x > injectionSwitch.y)))))))))))) && _GLF_IDENTITY(_GLF_IDENTITY(true, true && (true)), true && (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(true, _GLF_IDENTITY(true, (_GLF_IDENTITY(true, (true) && true)) && true) && (true)), (_GLF_IDENTITY(true, true && _GLF_IDENTITY((_GLF_IDENTITY(true, (true) && true)), ! _GLF_IDENTITY((! ((_GLF_IDENTITY(true, (true) || false)))), bool(bool((! ((_GLF_IDENTITY(true, (true) || false)))))))))) && true), ! (! (_GLF_IDENTITY(true, true && _GLF_IDENTITY(_GLF_IDENTITY((true), ((true)) && _GLF_TRUE(_GLF_IDENTITY(true, _GLF_IDENTITY(true, (true) || false) && (true)), (injectionSwitch.x < injectionSwitch.y))), (_GLF_IDENTITY((true), ((true)) && _GLF_TRUE(_GLF_IDENTITY(true, _GLF_IDENTITY(true, (true) || false) && (true)), (injectionSwitch.x < injectionSwitch.y)))) && true))))))))))))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
}
