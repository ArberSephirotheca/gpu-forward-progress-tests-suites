#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, float(mat4x3(injectionSwitch.y, 0.0, 1.0, _GLF_IDENTITY(tan(0.0), (_GLF_IDENTITY(tan(0.0), (tan(0.0)) / 1.0)) - 0.0), 0.0, 0.0, round(length(normalize(vec2(1.0, 1.0)))), 0.0, 1.0, 1.0, 1.0, 0.0))), _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * abs(1.0))))))))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((false), bool(bool(_GLF_IDENTITY((false), bool(bvec3((false), false, false))))))))))
      barrier();
     barrier();
    }
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 uvec3 GLF_merged3_0_1_16_1_1_6_2_1_6next_virtual_gidread_1read_2;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  return;
 uvec4 GLF_merged2_0_2_52_2_2_41GLF_merged2_0_1_13_1_1_14num_workgroupworkgroup_sizeGLF_merged2_0_1_6_1_1_11read_1virtual_gid;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 uvec2 GLF_merged2_0_1_6_1_1_11read_1virtual_gid;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true)))))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false))))
  {
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 GLF_merged2_0_2_52_2_2_41GLF_merged2_0_1_13_1_1_14num_workgroupworkgroup_sizeGLF_merged2_0_1_6_1_1_11read_1virtual_gid.zw = GLF_merged2_0_1_6_1_1_11read_1virtual_gid;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)), injectionSwitch)).y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(bool(! (false))))))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)))))))))))))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), ! (! (bool(false))))))))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec3(bvec2(false, true), true)))), bool(_GLF_IDENTITY(bvec2(bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec3(bvec2(false, true), true)))), true), bvec2(bvec3(bvec2(bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec3(bvec2(false, true), true)))), true), false)))))), bool(bvec3(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec3(bvec2(false, true), true)))), bool(_GLF_IDENTITY(bvec2(bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec3(bvec2(false, true), true)))), true), bvec2(bvec3(bvec2(bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec3(bvec2(false, true), true)))), true), false)))))), false, false))), (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec3(bvec2(false, true), true)))), bool(_GLF_IDENTITY(bvec2(bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec3(bvec2(false, true), true)))), _GLF_IDENTITY(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (true))), bvec2(bvec3(bvec2(bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec3(bvec2(false, true), true)))), true), false)))))), (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec3(bvec2(false, true), true)))), bool(_GLF_IDENTITY(bvec2(bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec3(bvec2(false, true), true)))), true), bvec2(bvec3(bvec2(bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec3(bvec2(false, true), true)))), true), false)))))), (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > injectionSwitch.y))))))))
          {
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(false))
              return;
             barrier();
            }
           barrier();
          }
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       return;
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, false || (false))), (! (_GLF_IDENTITY(false, false || (false)))) && true)))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], float(mat3x2(injectionSwitch[1], 0.0, 1.0, 1.0, 0.0, 1.0))))).x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      return;
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       return;
      }
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), bool(bvec4(_GLF_IDENTITY(false, (false) && true), false, false, false)))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         return;
        }
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0)))))
        {
         if(_GLF_DEAD(false))
          barrier();
         return;
        }
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)))), _GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)))) > injectionSwitch.y)))))))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, _GLF_IDENTITY(true, ! (! _GLF_IDENTITY((true), true && (_GLF_IDENTITY((true), true && ((true))))))), true)))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       return;
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, true && _GLF_IDENTITY((false), ! (! (_GLF_IDENTITY((false), ! (! ((false))))))))))
      barrier();
     return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((false), ! (_GLF_IDENTITY(! ((false)), (! ((false))) && true)))))))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
        barrier();
       barrier();
      }
    }
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, true && (false)))), (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(1.2, 3906.8459)))).x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    return;
   barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(injectionSwitch.x > injectionSwitch.y, true, false, false))))))) || (false)), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(false, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(_GLF_IDENTITY(injectionSwitch.x, abs(1.0) * (injectionSwitch.x)) > injectionSwitch.y, true, false, false))))))) || (false)), true, true, true)), (bool(bvec4(_GLF_IDENTITY(false, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(injectionSwitch.x > injectionSwitch.y, true, false, false))))))) || (false)), true, true, true))) || false))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch))) - vec2(0.0, 0.0)), (_GLF_IDENTITY(false, ! (! (false))) ? _GLF_FUZZED(vec2(4481.8534, 8.6)) : _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch))) - vec2(0.0, 0.0)))).y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uvec2 GLF_merged2_0_1_13_1_1_14num_workgroupworkgroup_size;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, true, false, true)))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
        barrier();
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! (! (false)))), (! (_GLF_IDENTITY(false, ! (! (false))))) && true)))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
       return;
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, true, false)))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, true, true)))))
    barrier();
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, ! (! (false))))), (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch, vec2(mat3(injectionSwitch, 0.0, sqrt(0.0), log(1.0), 0.0, 1.0, 0.0, 0.0))).y))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, true)))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (_GLF_IDENTITY(injectionSwitch, vec2(mat3(injectionSwitch, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0, 1.0, 1.0, 1.0, 1.0))))).x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false))))) && true))
    barrier();
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), (_GLF_IDENTITY(false, false || (false))) && true))))))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) || false)), (_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) || false))) || false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))
  return;
 GLF_merged2_0_2_52_2_2_41GLF_merged2_0_1_13_1_1_14num_workgroupworkgroup_sizeGLF_merged2_0_1_6_1_1_11read_1virtual_gid.xy = GLF_merged2_0_1_13_1_1_14num_workgroupworkgroup_size;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, true && (false)), false, true, true)))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(1.0) : injectionSwitch.x)), _GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(2.7)), float(injectionSwitch.x), bool(_GLF_IDENTITY(true, (true) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))) > injectionSwitch.y, bool(bvec2(_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(1.0) : injectionSwitch.x)), _GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(2.7)), float(injectionSwitch.x), bool(_GLF_IDENTITY(true, (true) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))) > injectionSwitch.y, true)))))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
        barrier();
       return;
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            return;
           barrier();
           if(_GLF_DEAD(false))
            barrier();
          }
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         barrier();
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec3(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))))
        return;
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y))))), ! (! _GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && ((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))
    barrier();
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, ! (! (false))), true, false, _GLF_IDENTITY(true, true && (true)))))))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), true && (_GLF_IDENTITY(false, true && (false))))))), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > injectionSwitch.y, _GLF_IDENTITY(bool(bvec3(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(mat2x3(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), 1.0, exp(0.0), 0.0, 1.0, 1.0))), _GLF_IDENTITY(true, true && (true)), true)), ! (! (bool(bvec3(injectionSwitch.x > injectionSwitch.y, true, _GLF_IDENTITY(true, true && (true))))))))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y))))
    return;
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   return;
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  barrier();
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY((_GLF_DEAD(false)) || false, _GLF_IDENTITY(((_GLF_DEAD(false)) || false), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY((_GLF_IDENTITY((_GLF_DEAD(false)), bool(bool((_GLF_DEAD(false))))) || false), true && (((_GLF_DEAD(false)) || false))), _GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, ! (! (false))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(true, bool(bvec3(true, true, true)))))), ! (! (false))), true)), ! (_GLF_IDENTITY(! (bool(bvec3(_GLF_IDENTITY(((_GLF_DEAD(false)) || false), _GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), (! (true)) && true))) && ((_GLF_IDENTITY((_GLF_DEAD(false)) || false, true && ((_GLF_DEAD(false)) || false))))), false, true))), ! (_GLF_IDENTITY(! (! (bool(bvec3(_GLF_IDENTITY(((_GLF_DEAD(false)) || false), true && (((_GLF_DEAD(false)) || false))), false, true)))), _GLF_IDENTITY((! (! (bool(bvec3(_GLF_IDENTITY(((_GLF_DEAD(false)) || false), true && (((_GLF_DEAD(false)) || false))), false, true))))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3((! (! (bool(bvec3(_GLF_IDENTITY(((_GLF_DEAD(false)) || false), true && ((_GLF_IDENTITY((_GLF_DEAD(false)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || ((_GLF_DEAD(false)))) || false))), false, true))))), false, false), bvec3(bvec3(_GLF_IDENTITY(bvec3((! (! (bool(bvec3(_GLF_IDENTITY(((_GLF_DEAD(false)) || false), true && (((_GLF_DEAD(false)) || false))), false, true))))), false, false), bvec3(bvec3(bvec3((! (! (bool(bvec3(_GLF_IDENTITY(((_GLF_DEAD(false)) || false), true && (((_GLF_DEAD(false)) || false))), false, true))))), false, false)))))))), true && (bool(_GLF_IDENTITY(bvec3((! (! (bool(bvec3(_GLF_IDENTITY(((_GLF_DEAD(false)) || false), true && (((_GLF_DEAD(false)) || false))), false, true))))), false, false), bvec3(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY((! (! (bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(((_GLF_DEAD(false)) || false), true && (((_GLF_DEAD(false)) || false))), false, true), bvec3(bvec4(bvec3(_GLF_IDENTITY(((_GLF_DEAD(false)) || false), true && (((_GLF_DEAD(false)) || false))), false, true), true))))))), ((! (! (bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(((_GLF_DEAD(false)) || false), true && (((_GLF_DEAD(false)) || false))), false, true), bvec3(bvec4(bvec3(_GLF_IDENTITY(((_GLF_DEAD(false)) || false), true && (((_GLF_DEAD(false)) || false))), false, true), true)))))))) || false), _GLF_IDENTITY(false, (false) || false), false), bvec3(bvec3(bvec3((! (! (bool(bvec3(_GLF_IDENTITY(((_GLF_DEAD(false)) || false), true && (((_GLF_DEAD(false)) || false))), false, true))))), false, false))))))))))) && true)))))) && true)))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, (true) || false)))) && (false)), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, true && (false)), true), _GLF_IDENTITY(bvec2(bvec4(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, true && (false)), true), bvec2(bvec3(bvec2(_GLF_IDENTITY(false, true && (false)), true), true))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)), bvec2(bvec2(bvec2(bvec4(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, true && (false)), true), bvec2(bvec3(bvec2(_GLF_IDENTITY(false, true && (false)), true), true))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)))))))), (_GLF_IDENTITY(false, true && (false))) && true)))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x)) > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))
          {
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(false))
              barrier();
             barrier();
            }
           return;
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            return;
          }
         barrier();
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       return;
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, false, true)))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     return;
    }
   barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    return;
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          return;
         barrier();
        }
       barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        return;
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(mat2(injectionSwitch, 1.0, 0.0))).y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(-88.25)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), bool(bvec2((_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(mat2(injectionSwitch, 1.0, 0.0))).y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(-88.25)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), ! (! (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(mat2(injectionSwitch, 1.0, 0.0))).y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(-88.25)), bool(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))))), true))))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), bool(_GLF_IDENTITY(bvec3(! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), false, true), bvec3(bvec4(bvec3(! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), false, true), true))))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, false))))
          {
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
              barrier();
             barrier();
            }
           if(_GLF_IDENTITY(_GLF_DEAD(false), bool(_GLF_IDENTITY(bool(_GLF_DEAD(false)), bool(bvec4(bool(_GLF_DEAD(false)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))))))
            barrier();
           barrier();
          }
         barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           barrier();
          }
        }
       barrier();
      }
     barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, false, true, true)), ! (! (bool(bvec4(false, false, true, true))))))))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         return;
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         return;
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
        }
       if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))), bool(bvec3(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))), false, false))))
        return;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
        }
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        {
         if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
          return;
         barrier();
        }
       barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), _GLF_IDENTITY(true && (! _GLF_IDENTITY((false), ! (! ((false))))), bool(bvec2(true && (! _GLF_IDENTITY((false), ! (! ((false))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))), false, false)))) && true), true, true), bvec3(bvec3(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), bool(bvec3(_GLF_DEAD(false), false, false)))) && true), true, true))))), (bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_DEAD(false), false, false)))) && true), true, true), bvec3(bvec3(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_DEAD(false), false, false))), bool(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_DEAD(false), false, false))), true)))) && true), true, true)))))) && true)))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(false, ! (! (false))), false, false, true)), bool(bvec2(bool(bvec4(false, false, false, true)), false))))))
        barrier();
       barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((false ? _GLF_FUZZED(vec2(15.66, 522.200)) : injectionSwitch), max((false ? _GLF_FUZZED(vec2(15.66, 522.200)) : injectionSwitch), (false ? _GLF_FUZZED(vec2(15.66, 522.200)) : injectionSwitch)))).y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! (! (false)))), ! (_GLF_IDENTITY(! (! (_GLF_IDENTITY(false, ! (! (false))))), _GLF_IDENTITY(true && (! (! (_GLF_IDENTITY(false, ! (! (false)))))), ! (! (_GLF_IDENTITY(true && (! (! (_GLF_IDENTITY(false, ! (! (false)))))), bool(bvec3(true && (! (! (_GLF_IDENTITY(false, ! (! (false)))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)))))))))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, false, true, true)))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false)), _GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(true, ! (! (true))), true)), (bool(bvec2(_GLF_IDENTITY(true, ! (! (true))), true))) && true)) && (false))))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         barrier();
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
         barrier();
        }
       barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(-6.9) : injectionSwitch.x)) > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            return;
           barrier();
          }
         if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true))))) || false)))
          barrier();
         return;
        }
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(injectionSwitch.x > injectionSwitch.y, true)))) || false)))))
          barrier();
         return;
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))))
        barrier();
       return;
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(7.8), _GLF_FUZZED(4.6)), bvec2(false, false))).x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        return;
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, false)))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y))))
          return;
         barrier();
        }
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         return;
        }
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y))))), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
          return;
         return;
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
      return;
     barrier();
    }
   return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], (injectionSwitch[0]) * 1.0), injectionSwitch[1])).x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true), bvec2(bvec2(bvec2(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true))))), true && (bool(_GLF_IDENTITY(bvec2(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true), bvec2(bvec2(bvec2(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true)))))))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(bvec4(! (false), false, true, false)))))))
      barrier();
     return;
    }
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, true && (false))))), (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x))) - 0.0) < injectionSwitch.y)) && (_GLF_DEAD(false))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), bool(bool(false)))))))
    return;
   barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false)))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(_GLF_IDENTITY(mat2x4(injectionSwitch, 0.0, 1.0, 1.0, abs(1.0), 1.0, 1.0), mat4(1.0) * (mat2x4(injectionSwitch, 0.0, 1.0, 1.0, abs(1.0), 1.0, 1.0)))), vec2(vec2(vec2(_GLF_IDENTITY(mat2x4(injectionSwitch, 0.0, 1.0, 1.0, abs(1.0), 1.0, 1.0), mat4(1.0) * (mat2x4(injectionSwitch, 0.0, 1.0, 1.0, abs(1.0), 1.0, 1.0))))))))) * vec2(1.0, 1.0)).y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 uint num_workgroup = gl_NumWorkGroups.x;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  barrier();
 GLF_merged2_0_2_52_2_2_41GLF_merged2_0_1_13_1_1_14num_workgroupworkgroup_sizeGLF_merged2_0_1_6_1_1_11read_1virtual_gid.xy.x = num_workgroup;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint workgroup_size = gl_WorkGroupSize.x;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, false)), bool(bool(bool(bvec2(false, false)))))), (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))))
      return;
     return;
    }
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, 0.0 + (injectionSwitch.y))))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  return;
 GLF_merged2_0_2_52_2_2_41GLF_merged2_0_1_13_1_1_14num_workgroupworkgroup_sizeGLF_merged2_0_1_6_1_1_11read_1virtual_gid.xy.y = workgroup_size;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), ! (! (! ((injectionSwitch.x > injectionSwitch.y))))))) || false)))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(! (! (_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_DEAD(false), _GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), ! (_GLF_IDENTITY(! (! (true)), bool(bool(! (! (true)))))))))))))))), (_GLF_IDENTITY(! (! (_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_DEAD(false), _GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(! (true), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (! (true)))), bool(bool(! (! (true)))))))))))))))), _GLF_IDENTITY(bool(bool(! (! (_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_DEAD(false), _GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), _GLF_IDENTITY(! (_GLF_IDENTITY(! (! (true)), bool(bool(! (! (true)))))), bool(bvec3(! (_GLF_IDENTITY(! (! (true)), bool(bool(! (! (true)))))), false, false))))))))))))))), (bool(bool(! (! (_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_DEAD(false), _GLF_IDENTITY(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), ! (_GLF_IDENTITY(! (! (true)), bool(bool(! (! (true))))))))), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), ! (_GLF_IDENTITY(! (! (true)), bool(bool(! (! (true))))))))))), true && (bool(bool(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), ! (_GLF_IDENTITY(! (! (true)), bool(bool(! (! (true)))))))))))))))))))))))) && true))) && true)))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), ! (_GLF_IDENTITY(! ((! (false))), ! (! (! ((! (false)))))))))))
    return;
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     return;
    }
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, bool(bvec4(false, true, true, false)))), (_GLF_IDENTITY(bool(_GLF_IDENTITY(false, bool(bvec4(false, true, true, _GLF_IDENTITY(false, true && (false)))))), bool(bvec3(bool(_GLF_IDENTITY(false, bool(bvec4(false, true, true, false)))), false, true)))) && true)))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)))).x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      return;
     return;
    }
   return;
  }
 uint workgroup_id = _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) | (gl_WorkGroupID)), uvec3(0u, 0u, 0u) + (_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) | (gl_WorkGroupID)))).x;
 uint workgroup_base = GLF_merged2_0_2_52_2_2_41GLF_merged2_0_1_13_1_1_14num_workgroupworkgroup_sizeGLF_merged2_0_1_6_1_1_11read_1virtual_gid.xy.y * _GLF_IDENTITY(workgroup_id, clamp(workgroup_id, _GLF_IDENTITY(_GLF_IDENTITY(workgroup_id, (true ? workgroup_id : _GLF_FUZZED(workgroup_id))), (_GLF_IDENTITY(workgroup_id, (true ? workgroup_id : _GLF_FUZZED(workgroup_id)))) | (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_id, (true ? workgroup_id : _GLF_FUZZED(workgroup_id))), (false ? _GLF_FUZZED(num_workgroup) : _GLF_IDENTITY(workgroup_id, (true ? workgroup_id : _GLF_FUZZED(workgroup_id))))))), workgroup_id));
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || _GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) && true)))))))
      barrier();
     return;
    }
   barrier();
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
      }
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), (! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y))) || false))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).y))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, false || (false)), (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec3(false, false, true)))) || false), (false) && true), (injectionSwitch.x > injectionSwitch.y))) || _GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), _GLF_IDENTITY(((! (false))) || false, true && (((! (false))) || false)))))))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(tan(-3.0)) : injectionSwitch.y))))))
  barrier();
 uint virtual_gid = workgroup_base + _GLF_IDENTITY(subgroup_id, _GLF_IDENTITY(1u * (subgroup_id), (true ? 1u * (subgroup_id) : _GLF_FUZZED(num_workgroup)))) * _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY((subgroup_size) | (subgroup_size), (_GLF_IDENTITY((subgroup_size) | (subgroup_size), ~ (~ ((subgroup_size) | (subgroup_size))))) / 1u)), clamp(_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY((subgroup_size) | (subgroup_size), (_GLF_IDENTITY((subgroup_size) | (subgroup_size), ~ (~ ((subgroup_size) | (subgroup_size))))) / 1u)), _GLF_IDENTITY(subgroup_size, _GLF_IDENTITY((subgroup_size) | (subgroup_size), (_GLF_IDENTITY((subgroup_size) | (subgroup_size), ~ (~ ((subgroup_size) | (subgroup_size))))) / 1u)), _GLF_IDENTITY(subgroup_size, _GLF_IDENTITY((subgroup_size) | (subgroup_size), (_GLF_IDENTITY((subgroup_size) | (subgroup_size), ~ (~ ((subgroup_size) | (subgroup_size))))) / 1u)))) + subgroup_local_id;
 if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) || false)) && true)))
  {
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 GLF_merged2_0_2_52_2_2_41GLF_merged2_0_1_13_1_1_14num_workgroupworkgroup_sizeGLF_merged2_0_1_6_1_1_11read_1virtual_gid.zw.y = _GLF_IDENTITY(virtual_gid, _GLF_IDENTITY((false ? _GLF_FUZZED(packSnorm4x8(vec4(-24.48, -66.53, -44.32, -5.1))) : virtual_gid), ((false ? _GLF_FUZZED(packSnorm4x8(vec4(-24.48, -66.53, -44.32, -5.1))) : virtual_gid)) | 0u));
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)))), injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)))))) && (false))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), bool(_GLF_IDENTITY(bool(_GLF_DEAD(false)), true && (bool(_GLF_DEAD(false)))))))
    barrier();
   return;
  }
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, (false) || false)))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, (false) || false)))), false, true), bvec3(_GLF_IDENTITY(bvec3(bvec3(_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, (false) || false)))), false, true)), bvec3(bvec4(bvec3(bvec3(_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, (false) || false)))), false, true)), false)))))), false || (bool(_GLF_IDENTITY(bvec3(_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, (false) || false)))), false, true), bvec3(_GLF_IDENTITY(bvec3(bvec3(_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, (false) || false)))), false, true)), bvec3(bvec4(bvec3(bvec3(_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, (false) || false)))), false, true)), false))))))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / sqrt(vec2(1.0, 1.0))).y))))
      barrier();
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(mat4x2(injectionSwitch, 0.0, 0.0, abs(0.0), sqrt(1.0), 1.0, 1.0))).x > injectionSwitch.y, false || _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(bool(bvec2((injectionSwitch.x > injectionSwitch.y), true)), ! (! (bool(bvec2((injectionSwitch.x > injectionSwitch.y), true))))))))), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false)))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bool(_GLF_IDENTITY(bvec2(bool(bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec2(bvec4(bvec2(bool(bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, false)))))) || (_GLF_IDENTITY(_GLF_DEAD(false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && _GLF_IDENTITY((_GLF_DEAD(false)), bool(_GLF_IDENTITY(bool((_GLF_DEAD(false))), false || (bool((_GLF_DEAD(false)))))))))))
      barrier();
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
        return;
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (false)))))))) && true))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, 0.0 + (injectionSwitch.y))))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     return;
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), (_GLF_IDENTITY(false, ! (! (false)))) && true)))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         return;
        }
      }
     if(_GLF_DEAD(false))
      barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, ! (! (false))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, true)))))
      return;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY((_GLF_DEAD(false)), bool(bvec4((_GLF_DEAD(false)), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))) || false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, bool(bvec3(false, _GLF_IDENTITY(false, ! (! (false))), false))), true, true, true)))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(-9.8, 6.0)))).x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        return;
      }
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   return;
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 uint next_virtual_gid = _GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_id * subgroup_size, _GLF_IDENTITY((false ? _GLF_FUZZED(_GLF_IDENTITY(bitfieldReverse(virtual_gid), ~ (~ (_GLF_IDENTITY(bitfieldReverse(virtual_gid), min(bitfieldReverse(virtual_gid), bitfieldReverse(virtual_gid))))))) : subgroup_id * subgroup_size), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY((false ? _GLF_FUZZED(bitfieldReverse(virtual_gid)) : subgroup_id * subgroup_size), 1u * (_GLF_IDENTITY((false ? _GLF_FUZZED(bitfieldReverse(virtual_gid)) : subgroup_id * subgroup_size), ~ (~ ((false ? _GLF_FUZZED(bitfieldReverse(virtual_gid)) : subgroup_id * subgroup_size)))))), min(_GLF_IDENTITY(_GLF_IDENTITY((false ? _GLF_FUZZED(bitfieldReverse(virtual_gid)) : subgroup_id * subgroup_size), 1u * (_GLF_IDENTITY((false ? _GLF_FUZZED(bitfieldReverse(virtual_gid)) : subgroup_id * subgroup_size), ~ (~ ((false ? _GLF_FUZZED(bitfieldReverse(virtual_gid)) : subgroup_id * subgroup_size)))))), (_GLF_IDENTITY((false ? _GLF_FUZZED(bitfieldReverse(virtual_gid)) : subgroup_id * subgroup_size), 1u * (_GLF_IDENTITY((false ? _GLF_FUZZED(bitfieldReverse(virtual_gid)) : subgroup_id * subgroup_size), ~ (~ ((false ? _GLF_FUZZED(bitfieldReverse(virtual_gid)) : subgroup_id * subgroup_size))))))) * 1u), _GLF_IDENTITY((false ? _GLF_FUZZED(bitfieldReverse(virtual_gid)) : subgroup_id * subgroup_size), 1u * (_GLF_IDENTITY((false ? _GLF_FUZZED(bitfieldReverse(virtual_gid)) : subgroup_id * subgroup_size), ~ (~ ((false ? _GLF_FUZZED(bitfieldReverse(virtual_gid)) : subgroup_id * subgroup_size)))))))))))) + (_GLF_IDENTITY((subgroup_local_id + 1), min((subgroup_local_id + 1), (_GLF_IDENTITY(subgroup_local_id, max(subgroup_local_id, subgroup_local_id)) + 1))) % subgroup_size), 0u ^ (_GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_id * subgroup_size, (_GLF_IDENTITY(false ? _GLF_FUZZED(bitfieldReverse(virtual_gid)) : subgroup_id * subgroup_size, ~ (~ (false ? _GLF_FUZZED(bitfieldReverse(virtual_gid)) : subgroup_id * subgroup_size))))), (workgroup_base + _GLF_IDENTITY(subgroup_id * subgroup_size, (false ? _GLF_IDENTITY(_GLF_FUZZED(bitfieldReverse(virtual_gid)), uint(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(_GLF_FUZZED(bitfieldReverse(virtual_gid)), uint(uvec2(_GLF_FUZZED(bitfieldReverse(virtual_gid)), 1u))), uint(_GLF_ONE(1.0, injectionSwitch.y)), uint(_GLF_ZERO(0.0, injectionSwitch.x))), ~ (~ (uvec3(_GLF_IDENTITY(_GLF_FUZZED(bitfieldReverse(virtual_gid)), uint(uvec2(_GLF_FUZZED(bitfieldReverse(virtual_gid)), 1u))), uint(_GLF_ONE(1.0, injectionSwitch.y)), uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0)) / 1.0))))))))) : subgroup_id * subgroup_size))) / ((1u << _GLF_IDENTITY(uint(1u), uint(1u))) >> _GLF_IDENTITY(uint(1u), uint(1u)))) + (_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, max((subgroup_local_id + 1) % subgroup_size, (subgroup_local_id + 1) % subgroup_size)))));
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 GLF_merged3_0_1_16_1_1_6_2_1_6next_virtual_gidread_1read_2.x = next_virtual_gid;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bool(false)))) && true), (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec2((injectionSwitch.x > injectionSwitch.y), true))))))))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), (! (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) && true))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, true)), ! (! (bool(bvec2(false, true))))))))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     return;
    }
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), true && (! (_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false)))))))))
  return;
 uint read_1 = atomicLoad(buf[GLF_merged2_0_2_52_2_2_41GLF_merged2_0_1_13_1_1_14num_workgroupworkgroup_sizeGLF_merged2_0_1_6_1_1_11read_1virtual_gid.zw.y], 4, _GLF_IDENTITY(_GLF_IDENTITY(64, (64) / 1), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(64, ~ (_GLF_IDENTITY(~ (64), int(ivec3(_GLF_IDENTITY(~ _GLF_IDENTITY((64), ~ (~ ((64)))), 0 | (~ (64))), 0, 1))))), (_GLF_IDENTITY(_GLF_IDENTITY(64, ~ (_GLF_IDENTITY(~ (64), int(ivec3(_GLF_IDENTITY(~ (64), 0 | (~ _GLF_IDENTITY((64), _GLF_IDENTITY(((64)), min(((64)), ((64)))) | (_GLF_IDENTITY((64), int(_GLF_IDENTITY(ivec2((64), 1), (ivec2((64), 1)) / (ivec2(0, 0) ^ ivec2(1, 1))))))))), 0, 1))))), 0 + (_GLF_IDENTITY(64, ~ (_GLF_IDENTITY(~ (64), int(ivec3(_GLF_IDENTITY(~ _GLF_IDENTITY((64), 0 | ((64))), _GLF_IDENTITY(0 | (~ (64)), max(0 | (~ (64)), 0 | (~ (64))))), 0, 1)))))))) << (1 ^ 1)), clamp(_GLF_IDENTITY(64, ~ (_GLF_IDENTITY(~ (64), int(ivec3(~ (64), 0, 1))))), _GLF_IDENTITY(_GLF_IDENTITY(64, ~ (_GLF_IDENTITY(~ (64), int(ivec3(~ (64), 0, 1))))), min(_GLF_IDENTITY(64, ~ (_GLF_IDENTITY(~ (64), int(ivec3(~ (64), 0, 1))))), _GLF_IDENTITY(_GLF_IDENTITY(64, _GLF_IDENTITY(~ (_GLF_IDENTITY(~ _GLF_IDENTITY((64), ~ (_GLF_IDENTITY(~ ((64)), (~ ((64))) * 1))), int(ivec3(~ (64), 0, 1)))), (~ (_GLF_IDENTITY(~ _GLF_IDENTITY((64), ~ (_GLF_IDENTITY(~ ((64)), (~ ((64))) * 1))), int(ivec3(~ (64), 0, 1))))) - 0)), min(_GLF_IDENTITY(64, _GLF_IDENTITY(~ (_GLF_IDENTITY(~ _GLF_IDENTITY((64), ~ (_GLF_IDENTITY(~ ((64)), (~ ((64))) * 1))), int(ivec3(~ (64), 0, 1)))), (~ (_GLF_IDENTITY(~ _GLF_IDENTITY((64), ~ (_GLF_IDENTITY(~ ((64)), (~ ((64))) * 1))), int(ivec3(~ (64), 0, 1))))) - 0)), _GLF_IDENTITY(64, _GLF_IDENTITY(~ (_GLF_IDENTITY(~ _GLF_IDENTITY((64), ~ (_GLF_IDENTITY(~ ((64)), (~ ((64))) * 1))), int(ivec3(~ (64), 0, 1)))), (~ (_GLF_IDENTITY(~ _GLF_IDENTITY((64), ~ (_GLF_IDENTITY(~ ((64)), (~ ((64))) * 1))), int(ivec3(~ (64), 0, 1))))) - 0)))))), _GLF_IDENTITY(64, ~ (_GLF_IDENTITY(~ (64), int(ivec3(~ _GLF_IDENTITY((64), ((64)) ^ (0 << _GLF_IDENTITY(int(1), _GLF_IDENTITY(int(1), (int(1)) | 0)))), 0, 1))))))), _GLF_IDENTITY((64) - 0, ((64) - 0) | (_GLF_IDENTITY((64) - 0, (_GLF_IDENTITY((64) - 0, 0 + ((64) - 0))) * _GLF_IDENTITY(1, ~ (~ (1)))))))), clamp((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(64, ~ (_GLF_IDENTITY(~ (64), int(ivec3(_GLF_IDENTITY(~ _GLF_IDENTITY((64), ~ (~ ((64)))), 0 | (~ (64))), 0, 1))))), (_GLF_IDENTITY(_GLF_IDENTITY(64, ~ (_GLF_IDENTITY(~ (64), int(ivec3(_GLF_IDENTITY(~ (64), 0 | (~ _GLF_IDENTITY((64), _GLF_IDENTITY(((64)) | (_GLF_IDENTITY((64), int(_GLF_IDENTITY(ivec2((64), 1), (ivec2((64), 1)) / (ivec2(0, 0) ^ ivec2(1, 1)))))), ~ (_GLF_IDENTITY(~ (((64)) | (_GLF_IDENTITY((64), int(_GLF_IDENTITY(ivec2((64), 1), (ivec2((64), 1)) / (ivec2(0, 0) ^ ivec2(1, 1))))))), ~ (~ (~ (((64)) | (_GLF_IDENTITY((64), int(_GLF_IDENTITY(ivec2((64), 1), (ivec2((64), 1)) / (ivec2(0, 0) ^ ivec2(1, 1))))))))))))))), 0, 1))))), 0 + (_GLF_IDENTITY(64, ~ (_GLF_IDENTITY(~ (64), int(ivec3(_GLF_IDENTITY(~ _GLF_IDENTITY((64), 0 | ((64))), 0 | (~ (64))), 0, 1)))))))) << (_GLF_IDENTITY(1 ^ 1, (_GLF_IDENTITY(1 ^ 1, min(1 ^ 1, 1 ^ 1))) | (1 ^ 1)))), clamp(_GLF_IDENTITY(64, ~ (_GLF_IDENTITY(~ (64), int(ivec3(~ (64), 0, 1))))), _GLF_IDENTITY(_GLF_IDENTITY(64, ~ (_GLF_IDENTITY(~ (64), int(ivec3(~ (64), 0, 1))))), min(_GLF_IDENTITY(64, ~ (_GLF_IDENTITY(~ (64), int(ivec3(~ (64), 0, 1))))), _GLF_IDENTITY(64, _GLF_IDENTITY(~ (_GLF_IDENTITY(~ _GLF_IDENTITY((64), ~ (_GLF_IDENTITY(~ ((64)), (~ ((64))) * 1))), int(ivec3(~ (64), 0, 1)))), (~ (_GLF_IDENTITY(~ _GLF_IDENTITY((64), ~ (_GLF_IDENTITY(~ ((64)), _GLF_IDENTITY((~ ((_GLF_IDENTITY(64, ~ (_GLF_IDENTITY(~ (64), (~ (64)) << 0)))))), (true ? (~ ((_GLF_IDENTITY(64, ~ (_GLF_IDENTITY(~ (64), (~ (64)) << 0)))))) : _GLF_FUZZED(18816))) * 1))), int(ivec3(~ (64), 0, 1))))) - 0)))), _GLF_IDENTITY(64, ~ (_GLF_IDENTITY(~ (64), int(ivec3(~ (64), 0, 1))))))), _GLF_IDENTITY((64) - 0, ((64) - 0) | (_GLF_IDENTITY((64) - 0, (_GLF_IDENTITY((64) - 0, 0 + ((64) - 0))) * 1))))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(64, ~ (_GLF_IDENTITY(~ (64), int(ivec3(_GLF_IDENTITY(~ _GLF_IDENTITY((64), ~ (~ ((64)))), 0 | (~ (64))), 0, 1))))), (_GLF_IDENTITY(_GLF_IDENTITY(64, ~ (_GLF_IDENTITY(~ (64), int(ivec3(_GLF_IDENTITY(~ (64), 0 | _GLF_IDENTITY((~ _GLF_IDENTITY((64), ((64)) | (_GLF_IDENTITY((64), int(_GLF_IDENTITY(ivec2((64), 1), (ivec2((64), 1)) / (ivec2(0, 0) ^ ivec2(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, 0 ^ (1))) / _GLF_IDENTITY(1, max(1, 1))), 1)))))))), ((~ _GLF_IDENTITY((64), ((64)) | (_GLF_IDENTITY((64), int(_GLF_IDENTITY(ivec2((64), 1), (ivec2((64), 1)) / (ivec2(0, 0) ^ ivec2(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, 0 ^ (1))) / _GLF_IDENTITY(1, max(1, 1))), 1))))))))) - (0 & 53869))), 0, 1))))), 0 + (_GLF_IDENTITY(64, ~ (_GLF_IDENTITY(~ (64), int(ivec3(_GLF_IDENTITY(~ _GLF_IDENTITY((64), 0 | ((_GLF_IDENTITY(64, max(64, 64))))), 0 | (~ (64))), 0, 1)))))))) << (1 ^ 1)), clamp(_GLF_IDENTITY(64, ~ (_GLF_IDENTITY(~ (64), int(ivec3(~ (64), 0, 1))))), _GLF_IDENTITY(_GLF_IDENTITY(64, ~ (_GLF_IDENTITY(~ (64), int(ivec3(~ (64), 0, 1))))), min(_GLF_IDENTITY(64, ~ (_GLF_IDENTITY(~ (64), int(ivec3(~ (64), _GLF_IDENTITY(0, clamp(0, 0, _GLF_IDENTITY(0, (0) + 0))), 1))))), _GLF_IDENTITY(64, _GLF_IDENTITY(~ (_GLF_IDENTITY(~ _GLF_IDENTITY((64), ~ (_GLF_IDENTITY(~ ((64)), (~ ((64))) * 1))), int(ivec3(~ (64), 0, 1)))), (~ (_GLF_IDENTITY(~ _GLF_IDENTITY((64), ~ (_GLF_IDENTITY(~ _GLF_IDENTITY(((64)), (_GLF_IDENTITY(((64)), (((64))) - int(_GLF_ZERO(0.0, injectionSwitch.x)))) | (((64)))), (~ ((64))) * 1))), int(ivec3(~ (64), 0, 1))))) - 0)))), _GLF_IDENTITY(64, ~ (_GLF_IDENTITY(~ (64), int(ivec3(~ (64), 0, 1))))))), _GLF_IDENTITY((64) - 0, ((64) - 0) | (_GLF_IDENTITY((64) - 0, (_GLF_IDENTITY((64) - 0, 0 + ((64) - 0))) * 1))))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(64, ~ (_GLF_IDENTITY(~ (64), int(ivec3(_GLF_IDENTITY(~ _GLF_IDENTITY((64), ~ (~ ((64)))), 0 | (~ (64))), 0, 1))))), 0 ^ (_GLF_IDENTITY(64, ~ (_GLF_IDENTITY(~ (64), int(ivec3(_GLF_IDENTITY(~ _GLF_IDENTITY((64), ~ (~ ((64)))), 0 | (~ (64))), 0, 1))))))), (_GLF_IDENTITY(_GLF_IDENTITY(64, ~ (_GLF_IDENTITY(~ (64), int(ivec3(_GLF_IDENTITY(~ (64), 0 | (~ _GLF_IDENTITY((64), ((64)) | (_GLF_IDENTITY((64), int(_GLF_IDENTITY(ivec2((64), 1), (ivec2((64), 1)) / (ivec2(0, 0) ^ ivec2(1, 1))))))))), 0, 1))))), 0 + (_GLF_IDENTITY(64, ~ (_GLF_IDENTITY(~ (64), int(ivec3(_GLF_IDENTITY(~ _GLF_IDENTITY((64), 0 | ((64))), 0 | (~ (64))), 0, 1)))))))) << (1 ^ 1)), clamp(_GLF_IDENTITY(64, ~ (_GLF_IDENTITY(~ (64), int(ivec3(~ (64), 0, 1))))), _GLF_IDENTITY(_GLF_IDENTITY(64, ~ (_GLF_IDENTITY(~ (64), int(ivec3(~ (64), 0, 1))))), min(_GLF_IDENTITY(64, ~ (_GLF_IDENTITY(~ (64), int(ivec3(~ (64), 0, 1))))), _GLF_IDENTITY(64, _GLF_IDENTITY(~ (_GLF_IDENTITY(~ _GLF_IDENTITY((64), ~ (_GLF_IDENTITY(~ ((64)), (~ ((64))) * 1))), int(ivec3(~ (64), 0, 1)))), (~ (_GLF_IDENTITY(~ _GLF_IDENTITY((64), ~ (_GLF_IDENTITY(~ _GLF_IDENTITY(((64)), (((64))) | (((64)))), (~ ((64))) * 1))), int(ivec3(~ (64), 0, 1))))) - 0)))), _GLF_IDENTITY(64, ~ (_GLF_IDENTITY(~ (64), int(ivec3(~ (64), 0, 1))))))), _GLF_IDENTITY((64) - 0, ((64) - 0) | (_GLF_IDENTITY((64) - 0, (_GLF_IDENTITY((64) - 0, 0 + ((64) - 0))) * 1))))))) << 0), _GLF_IDENTITY(0, (0) | (0)));
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 GLF_merged3_0_1_16_1_1_6_2_1_6next_virtual_gidread_1read_2.y = read_1;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_DEAD(false))), (_GLF_DEAD(false)) || false))
  barrier();
 GLF_merged2_0_2_52_2_2_41GLF_merged2_0_1_13_1_1_14num_workgroupworkgroup_sizeGLF_merged2_0_1_6_1_1_11read_1virtual_gid.zw.x = GLF_merged3_0_1_16_1_1_6_2_1_6next_virtual_gidread_1read_2.y;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), float(vec2(injectionSwitch.x, 0.0))) > injectionSwitch.y)), _GLF_IDENTITY(false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_IDENTITY(false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
      barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)))).y))))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y))))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, float(mat3x2(injectionSwitch.y, 0.0, 1.0, cos(0.0), 0.0, 1.0))), injectionSwitch.y))))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))) && true)))
  barrier();
 atomicStore(buf[GLF_merged3_0_1_16_1_1_6_2_1_6next_virtual_gidread_1read_2.x], uint(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged2_0_2_52_2_2_41GLF_merged2_0_1_13_1_1_14num_workgroupworkgroup_sizeGLF_merged2_0_1_6_1_1_11read_1virtual_gid, (GLF_merged2_0_2_52_2_2_41GLF_merged2_0_1_13_1_1_14num_workgroupworkgroup_sizeGLF_merged2_0_1_6_1_1_11read_1virtual_gid) | (GLF_merged2_0_2_52_2_2_41GLF_merged2_0_1_13_1_1_14num_workgroupworkgroup_sizeGLF_merged2_0_1_6_1_1_11read_1virtual_gid)), (_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged2_0_2_52_2_2_41GLF_merged2_0_1_13_1_1_14num_workgroupworkgroup_sizeGLF_merged2_0_1_6_1_1_11read_1virtual_gid, (GLF_merged2_0_2_52_2_2_41GLF_merged2_0_1_13_1_1_14num_workgroupworkgroup_sizeGLF_merged2_0_1_6_1_1_11read_1virtual_gid) | (GLF_merged2_0_2_52_2_2_41GLF_merged2_0_1_13_1_1_14num_workgroupworkgroup_sizeGLF_merged2_0_1_6_1_1_11read_1virtual_gid)), _GLF_IDENTITY((_GLF_IDENTITY(GLF_merged2_0_2_52_2_2_41GLF_merged2_0_1_13_1_1_14num_workgroupworkgroup_sizeGLF_merged2_0_1_6_1_1_11read_1virtual_gid, (GLF_merged2_0_2_52_2_2_41GLF_merged2_0_1_13_1_1_14num_workgroupworkgroup_sizeGLF_merged2_0_1_6_1_1_11read_1virtual_gid) | (GLF_merged2_0_2_52_2_2_41GLF_merged2_0_1_13_1_1_14num_workgroupworkgroup_sizeGLF_merged2_0_1_6_1_1_11read_1virtual_gid))) | (_GLF_IDENTITY(GLF_merged2_0_2_52_2_2_41GLF_merged2_0_1_13_1_1_14num_workgroupworkgroup_sizeGLF_merged2_0_1_6_1_1_11read_1virtual_gid, (GLF_merged2_0_2_52_2_2_41GLF_merged2_0_1_13_1_1_14num_workgroupworkgroup_sizeGLF_merged2_0_1_6_1_1_11read_1virtual_gid) | (GLF_merged2_0_2_52_2_2_41GLF_merged2_0_1_13_1_1_14num_workgroupworkgroup_sizeGLF_merged2_0_1_6_1_1_11read_1virtual_gid))), ((_GLF_IDENTITY(GLF_merged2_0_2_52_2_2_41GLF_merged2_0_1_13_1_1_14num_workgroupworkgroup_sizeGLF_merged2_0_1_6_1_1_11read_1virtual_gid, (GLF_merged2_0_2_52_2_2_41GLF_merged2_0_1_13_1_1_14num_workgroupworkgroup_sizeGLF_merged2_0_1_6_1_1_11read_1virtual_gid) | (GLF_merged2_0_2_52_2_2_41GLF_merged2_0_1_13_1_1_14num_workgroupworkgroup_sizeGLF_merged2_0_1_6_1_1_11read_1virtual_gid))) | (_GLF_IDENTITY(GLF_merged2_0_2_52_2_2_41GLF_merged2_0_1_13_1_1_14num_workgroupworkgroup_sizeGLF_merged2_0_1_6_1_1_11read_1virtual_gid, (GLF_merged2_0_2_52_2_2_41GLF_merged2_0_1_13_1_1_14num_workgroupworkgroup_sizeGLF_merged2_0_1_6_1_1_11read_1virtual_gid) | (GLF_merged2_0_2_52_2_2_41GLF_merged2_0_1_13_1_1_14num_workgroupworkgroup_sizeGLF_merged2_0_1_6_1_1_11read_1virtual_gid)))) | (_GLF_IDENTITY((_GLF_IDENTITY(GLF_merged2_0_2_52_2_2_41GLF_merged2_0_1_13_1_1_14num_workgroupworkgroup_sizeGLF_merged2_0_1_6_1_1_11read_1virtual_gid, (GLF_merged2_0_2_52_2_2_41GLF_merged2_0_1_13_1_1_14num_workgroupworkgroup_sizeGLF_merged2_0_1_6_1_1_11read_1virtual_gid) | (GLF_merged2_0_2_52_2_2_41GLF_merged2_0_1_13_1_1_14num_workgroupworkgroup_sizeGLF_merged2_0_1_6_1_1_11read_1virtual_gid))) | (_GLF_IDENTITY(GLF_merged2_0_2_52_2_2_41GLF_merged2_0_1_13_1_1_14num_workgroupworkgroup_sizeGLF_merged2_0_1_6_1_1_11read_1virtual_gid, (GLF_merged2_0_2_52_2_2_41GLF_merged2_0_1_13_1_1_14num_workgroupworkgroup_sizeGLF_merged2_0_1_6_1_1_11read_1virtual_gid) | (GLF_merged2_0_2_52_2_2_41GLF_merged2_0_1_13_1_1_14num_workgroupworkgroup_sizeGLF_merged2_0_1_6_1_1_11read_1virtual_gid))), ~ (~ ((_GLF_IDENTITY(GLF_merged2_0_2_52_2_2_41GLF_merged2_0_1_13_1_1_14num_workgroupworkgroup_sizeGLF_merged2_0_1_6_1_1_11read_1virtual_gid, (GLF_merged2_0_2_52_2_2_41GLF_merged2_0_1_13_1_1_14num_workgroupworkgroup_sizeGLF_merged2_0_1_6_1_1_11read_1virtual_gid) | (GLF_merged2_0_2_52_2_2_41GLF_merged2_0_1_13_1_1_14num_workgroupworkgroup_sizeGLF_merged2_0_1_6_1_1_11read_1virtual_gid))) | (_GLF_IDENTITY(GLF_merged2_0_2_52_2_2_41GLF_merged2_0_1_13_1_1_14num_workgroupworkgroup_sizeGLF_merged2_0_1_6_1_1_11read_1virtual_gid, (GLF_merged2_0_2_52_2_2_41GLF_merged2_0_1_13_1_1_14num_workgroupworkgroup_sizeGLF_merged2_0_1_6_1_1_11read_1virtual_gid) | (GLF_merged2_0_2_52_2_2_41GLF_merged2_0_1_13_1_1_14num_workgroupworkgroup_sizeGLF_merged2_0_1_6_1_1_11read_1virtual_gid)))))))))) - uvec4(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, float(mat3(injectionSwitch.x, 1.0, cos(0.0), 0.0, 1.0, 0.0, 1.0, 0.0, 1.0)))), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))).zw, (_GLF_IDENTITY(GLF_merged2_0_2_52_2_2_41GLF_merged2_0_1_13_1_1_14num_workgroupworkgroup_sizeGLF_merged2_0_1_6_1_1_11read_1virtual_gid.zw, (GLF_merged2_0_2_52_2_2_41GLF_merged2_0_1_13_1_1_14num_workgroupworkgroup_sizeGLF_merged2_0_1_6_1_1_11read_1virtual_gid.zw) >> uvec2(0u, 0u))) - uvec2(0u, _GLF_IDENTITY(0u, _GLF_IDENTITY(0u, clamp(0u, 0u, 0u)) | (0u)))).x + 1), 4, 64, _GLF_IDENTITY(4, (false ? _GLF_FUZZED((66720 % -15104)) : 4)));
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) || false), _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec3((injectionSwitch.x > injectionSwitch.y), false, false))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0)))) / 1.0)))))
    barrier();
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((false), ((false)) && true)))))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint read_2 = atomicLoad(buf[GLF_merged2_0_2_52_2_2_41GLF_merged2_0_1_13_1_1_14num_workgroupworkgroup_sizeGLF_merged2_0_1_6_1_1_11read_1virtual_gid.zw.y], 4, 64, 0);
 GLF_merged3_0_1_16_1_1_6_2_1_6next_virtual_gidread_1read_2.z = read_2;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(subgroup_local_id + 1 < subgroup_size)
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)), mix(vec2(_GLF_FUZZED(9974.8241), _GLF_IDENTITY(_GLF_FUZZED(-1.9), clamp(_GLF_IDENTITY(_GLF_FUZZED(-1.9), min(_GLF_FUZZED(-1.9), _GLF_FUZZED(-1.9))), _GLF_FUZZED(-1.9), _GLF_FUZZED(-1.9)))), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true)))) - vec2(0.0, 0.0), ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)), mix(vec2(_GLF_FUZZED(9974.8241), _GLF_IDENTITY(_GLF_FUZZED(-1.9), clamp(_GLF_IDENTITY(_GLF_FUZZED(-1.9), min(_GLF_FUZZED(-1.9), _GLF_FUZZED(-1.9))), _GLF_FUZZED(-1.9), _GLF_FUZZED(-1.9)))), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true)))) - vec2(0.0, 0.0)) / vec2(1.0, 1.0)), _GLF_IDENTITY(vec2(_GLF_IDENTITY(mat4x2((_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(9974.8241), _GLF_FUZZED(-1.9)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), _GLF_IDENTITY(bvec2(true, true), _GLF_IDENTITY(bvec2(bvec2(_GLF_IDENTITY(bvec2(true, true), bvec2(bvec4(_GLF_IDENTITY(bvec2(true, true), bvec2(bvec3(bvec2(true, true), false))), false, true))))), _GLF_IDENTITY(bvec2(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(bvec2(bvec2(_GLF_IDENTITY(bvec2(true, true), bvec2(bvec4(_GLF_IDENTITY(bvec2(true, true), bvec2(bvec3(bvec2(true, true), false))), false, true))))), bvec2(_GLF_IDENTITY(bvec2(bvec2(bvec2(_GLF_IDENTITY(bvec2(true, true), bvec2(bvec4(_GLF_IDENTITY(bvec2(true, true), bvec2(bvec3(bvec2(true, true), false))), false, true)))))), bvec2(bvec4(bvec2(bvec2(bvec2(_GLF_IDENTITY(bvec2(true, true), bvec2(bvec4(_GLF_IDENTITY(bvec2(true, true), bvec2(bvec3(bvec2(true, true), false))), _GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)), false || (bool(bvec3(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))))), true)))))), false, false)))))), bvec2(_GLF_IDENTITY(bvec3(bvec2(_GLF_IDENTITY(bvec2(bvec2(_GLF_IDENTITY(bvec2(true, true), bvec2(bvec4(_GLF_IDENTITY(bvec2(true, true), bvec2(bvec3(bvec2(true, true), false))), false, true))))), bvec2(_GLF_IDENTITY(bvec2(bvec2(bvec2(_GLF_IDENTITY(bvec2(true, true), bvec2(bvec4(_GLF_IDENTITY(bvec2(true, true), bvec2(bvec3(bvec2(true, true), false))), false, true)))))), bvec2(bvec4(bvec2(bvec2(bvec2(_GLF_IDENTITY(bvec2(true, true), bvec2(bvec4(_GLF_IDENTITY(bvec2(true, true), bvec2(bvec3(bvec2(true, true), false))), _GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)), false || (bool(bvec3(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))))), true)))))), false, false)))))), false), bvec3(bvec4(bvec3(bvec2(_GLF_IDENTITY(bvec2(bvec2(_GLF_IDENTITY(bvec2(true, true), bvec2(bvec4(_GLF_IDENTITY(bvec2(true, true), bvec2(bvec3(bvec2(true, true), false))), false, true))))), bvec2(_GLF_IDENTITY(bvec2(bvec2(bvec2(_GLF_IDENTITY(bvec2(true, true), bvec2(bvec4(_GLF_IDENTITY(bvec2(true, true), bvec2(bvec3(bvec2(true, true), false))), false, true)))))), bvec2(bvec4(bvec2(bvec2(bvec2(_GLF_IDENTITY(bvec2(true, true), bvec2(bvec4(_GLF_IDENTITY(bvec2(true, true), bvec2(bvec3(bvec2(true, true), false))), _GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)), false || (bool(bvec3(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))))), true)))))), false, false)))))), false), false)))))), bvec2(bvec3(bvec2(bvec2(_GLF_IDENTITY(bvec2(bvec2(_GLF_IDENTITY(bvec2(true, true), bvec2(bvec4(_GLF_IDENTITY(bvec2(true, true), bvec2(bvec3(bvec2(true, true), false))), false, true))))), bvec2(_GLF_IDENTITY(bvec2(bvec2(bvec2(_GLF_IDENTITY(bvec2(true, true), bvec2(bvec4(_GLF_IDENTITY(bvec2(true, true), bvec2(bvec3(bvec2(true, true), false))), false, true)))))), bvec2(bvec4(bvec2(bvec2(bvec2(_GLF_IDENTITY(bvec2(true, true), bvec2(bvec4(_GLF_IDENTITY(bvec2(true, true), bvec2(bvec3(bvec2(true, true), false))), false, true)))))), false, false))))))), false)))))))) - vec2(0.0, 0.0), abs(0.0), determinant(mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0)), 1.0, 1.0, 1.0, 1.0), mat4x2(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, float(mat2x4(0.0, _GLF_ONE(1.0, injectionSwitch.y), round(length(normalize(vec4(1.0, 1.0, 1.0, _GLF_IDENTITY(1.0, float(_GLF_IDENTITY(mat3(1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0), (mat3(1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0)) / mat3(1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0)))))))), 1.0, 0.0, 1.0, 1.0, 1.0))), 0.0) + (mat4x2((_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(9974.8241), _GLF_FUZZED(-1.9)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true)))) - vec2(0.0, 0.0), abs(0.0), determinant(mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 0.0, 1.0, 1.0, 0.0, 0.0)), 1.0, 1.0, 1.0, 1.0)))), min(vec2(_GLF_IDENTITY(mat4x2((_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(9974.8241), _GLF_FUZZED(-1.9)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true)))) - vec2(0.0, 0.0), abs(0.0), determinant(mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0)), 1.0, 1.0, 1.0, 1.0), mat4x2(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0) + (mat4x2((_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mix(vec2(_GLF_FUZZED(9974.8241), _GLF_FUZZED(-1.9)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true)), (false ? _GLF_FUZZED(mix(vec2(-3.7, -16.94), injectionSwitch, bvec2(true, false))) : _GLF_IDENTITY(mix(vec2(_GLF_FUZZED(9974.8241), _GLF_FUZZED(-1.9)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true)), mix(vec2((mix(vec2(_GLF_FUZZED(9974.8241), _GLF_FUZZED(-1.9)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true)))[0], (mix(vec2(_GLF_FUZZED(9974.8241), _GLF_FUZZED(-1.9)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true)))[1]), vec2(_GLF_FUZZED(508.065), _GLF_FUZZED(447.008)), bvec2(false, false))))))) - vec2(0.0, 0.0), abs(0.0), determinant(mat4(0.0, 0.0, _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-485.866)), _GLF_IDENTITY(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)))), 1.0, 1.0, _GLF_IDENTITY(1.0, float(mat4x2(1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0, 1.0, sqrt(0.0), sin(0.0), 1.0))), 1.0)))), _GLF_IDENTITY(_GLF_IDENTITY(vec2(_GLF_IDENTITY(mat4x2((_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(9974.8241), _GLF_FUZZED(-1.9)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true)))) - vec2(0.0, 0.0), abs(0.0), determinant(mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0)), 1.0, 1.0, 1.0, 1.0), mat4x2(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0) + (mat4x2(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(9974.8241), _GLF_FUZZED(-1.9)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true)))) - vec2(0.0, 0.0), max((_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(9974.8241), _GLF_FUZZED(-1.9)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true)))) - vec2(0.0, 0.0), (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(9974.8241), _GLF_FUZZED(-1.9)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true)))) - vec2(0.0, 0.0))), abs(0.0), determinant(mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0)), _GLF_IDENTITY(1.0, min(1.0, 1.0)), 1.0, 1.0, 1.0)))), min(vec2(_GLF_IDENTITY(mat4x2((_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(_GLF_IDENTITY(9974.8241, max(9974.8241, 9974.8241))), _GLF_FUZZED(-1.9)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true)))) - _GLF_IDENTITY(vec2(0.0, 0.0), (vec2(0.0, 0.0)) / abs(vec2(1.0, 1.0))), abs(0.0), determinant(mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0)), 1.0, 1.0, 1.0, _GLF_IDENTITY(1.0, min(1.0, 1.0))), mat4x2(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0) + (mat4x2((_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(9974.8241), _GLF_FUZZED(-1.9)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true)))) - vec2(0.0, 0.0), abs(0.0), determinant(mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, _GLF_IDENTITY(0.0, 0.0 + (0.0)), 0.0)), 1.0, 1.0, 1.0, 1.0)))), vec2(_GLF_IDENTITY(mat4x2((_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(9974.8241), _GLF_FUZZED(-1.9)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true)))) - vec2(0.0, 0.0), abs(0.0), determinant(mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0)), 1.0, 1.0, 1.0, 1.0), mat4x2(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0) + (mat4x2((_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(9974.8241), _GLF_FUZZED(-1.9)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true)))) - vec2(0.0, 0.0), abs(0.0), determinant(mat4(0.0, _GLF_IDENTITY(0.0, float(mat4x3(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 0.0, 1.0, 0.0, 0.0, length(vec4(0.0, 0.0, 0.0, 0.0)), 1.0, round(length(normalize(vec3(1.0, 1.0, 1.0)))), tan(0.0), 0.0, sin(0.0), 0.0))), 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0)), 1.0, 1.0, 1.0, 1.0)))))), mix(vec2(_GLF_FUZZED(-6.0), (_GLF_IDENTITY(vec2(_GLF_IDENTITY(mat4x2((_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(9974.8241), _GLF_FUZZED(-1.9)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true)))) - vec2(0.0, 0.0), abs(0.0), determinant(mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0)), 1.0, 1.0, 1.0, 1.0), mat4x2(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0) + (mat4x2((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)), mix(vec2(_GLF_FUZZED(9974.8241), _GLF_FUZZED(-1.9)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true)))) - vec2(0.0, 0.0), abs(0.0), determinant(mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, (1.0) - tan(0.0)), 1.0)), 0.0, 0.0, 1.0, 1.0, 0.0, 0.0)), 1.0, 1.0, 1.0, 1.0)))), min(vec2(_GLF_IDENTITY(mat4x2((_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(_GLF_IDENTITY(9974.8241, max(9974.8241, 9974.8241))), _GLF_FUZZED(-1.9)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true)))) - vec2(0.0, 0.0), abs(0.0), determinant(mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0)), 1.0, 1.0, 1.0, 1.0), mat4x2(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0) + (mat4x2((_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(9974.8241), _GLF_FUZZED(-1.9)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true)))) - vec2(0.0, 0.0), abs(0.0), determinant(mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0)), 1.0, 1.0, 1.0, 1.0)))), vec2(_GLF_IDENTITY(mat4x2((_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(9974.8241), _GLF_FUZZED(-1.9)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true)))) - vec2(0.0, 0.0), abs(0.0), determinant(mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0)), 1.0, 1.0, 1.0, 1.0), mat4x2(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0) + (mat4x2(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(9974.8241), _GLF_FUZZED(-1.9)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true)))) - vec2(0.0, 0.0), ((_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(9974.8241), _GLF_FUZZED(-1.9)), vec2((injectionSwitch)[0], (injectionSwitch)[_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(43592)))]), bvec2(true, true)))) - vec2(0.0, 0.0)) * vec2(1.0, 1.0)), abs(0.0), determinant(mat4(0.0, _GLF_IDENTITY(0.0, float(mat4x3(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 0.0, 1.0, 0.0, 0.0, length(vec4(0.0, 0.0, 0.0, 0.0)), 1.0, round(length(normalize(vec3(1.0, 1.0, 1.0)))), tan(0.0), 0.0, sin(0.0), 0.0))), 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(1.0, min(1.0, 1.0)), 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)))), 1.0, 1.0, 1.0, 1.0)))))))[1]), vec2((_GLF_IDENTITY(vec2(_GLF_IDENTITY(mat4x2((_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(9974.8241), _GLF_FUZZED(-1.9)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true)))) - vec2(0.0, 0.0), abs(0.0), determinant(mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0)), 1.0, 1.0, 1.0, 1.0), mat4x2(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0) + (mat4x2((_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(9974.8241), _GLF_FUZZED(-1.9)), _GLF_IDENTITY(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(mat4x2(vec2((injectionSwitch)[0], (injectionSwitch)[1]), 0.0, 0.0, 0.0, 0.0, 0.0, length(sqrt(vec3(0.0, 0.0, 0.0)))))), bvec2(true, true)))) - vec2(0.0, 0.0), abs(0.0), determinant(mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0)), 1.0, 1.0, 1.0, 1.0)))), min(vec2(_GLF_IDENTITY(mat4x2((_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY(_GLF_FUZZED(_GLF_IDENTITY(9974.8241, max(9974.8241, 9974.8241))), _GLF_IDENTITY(float(mat2x4(_GLF_IDENTITY(_GLF_FUZZED(_GLF_IDENTITY(9974.8241, max(9974.8241, 9974.8241))), 1.0 * (_GLF_FUZZED(_GLF_IDENTITY(9974.8241, max(9974.8241, 9974.8241))))), 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, tan(0.0))), clamp(_GLF_IDENTITY(float(mat2x4(_GLF_IDENTITY(_GLF_FUZZED(_GLF_IDENTITY(9974.8241, max(9974.8241, 9974.8241))), 1.0 * (_GLF_FUZZED(_GLF_IDENTITY(9974.8241, max(9974.8241, 9974.8241))))), 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, tan(0.0))), (float(mat2x4(_GLF_IDENTITY(_GLF_FUZZED(_GLF_IDENTITY(9974.8241, max(9974.8241, 9974.8241))), 1.0 * (_GLF_FUZZED(_GLF_IDENTITY(9974.8241, max(9974.8241, 9974.8241))))), 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, tan(0.0)))) - 0.0), float(mat2x4(_GLF_IDENTITY(_GLF_FUZZED(_GLF_IDENTITY(9974.8241, max(9974.8241, 9974.8241))), 1.0 * (_GLF_FUZZED(_GLF_IDENTITY(9974.8241, max(9974.8241, 9974.8241))))), 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, tan(0.0))), float(mat2x4(_GLF_IDENTITY(_GLF_FUZZED(_GLF_IDENTITY(9974.8241, max(9974.8241, 9974.8241))), 1.0 * (_GLF_FUZZED(_GLF_IDENTITY(9974.8241, max(9974.8241, 9974.8241))))), 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, tan(0.0)))))), _GLF_FUZZED(-1.9)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true)))) - vec2(0.0, 0.0), abs(0.0), determinant(mat4(0.0, 0.0, _GLF_IDENTITY(0.0, (0.0) / 1.0), 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0)), 1.0, 1.0, 1.0, 1.0), mat4x2(0.0, 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(585.001)))) / 1.0), 0.0, 0.0) + (mat4x2((_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(9974.8241), _GLF_FUZZED(-1.9)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true)))) - vec2(0.0, 0.0), abs(0.0), determinant(mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0)), 1.0, 1.0, 1.0, 1.0)))), vec2(_GLF_IDENTITY(mat4x2((_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(9974.8241), _GLF_FUZZED(-1.9)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true)))) - vec2(0.0, 0.0), abs(0.0), determinant(mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0)), 1.0, 1.0, 1.0, 1.0), mat4x2(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0) + (mat4x2((_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(9974.8241), _GLF_FUZZED(-1.9)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true)))) - vec2(0.0, 0.0), abs(0.0), determinant(mat4(0.0, _GLF_IDENTITY(0.0, float(mat4x3(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 0.0, 1.0, 0.0, 0.0, length(vec4(0.0, 0.0, 0.0, 0.0)), 1.0, round(length(normalize(vec3(1.0, 1.0, 1.0)))), tan(0.0), 0.0, sin(0.0), 0.0))), 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0)), 1.0, 1.0, 1.0, 1.0)))))))[0], _GLF_FUZZED(-9.8)), bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))))))).x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(9974.8241), _GLF_IDENTITY(_GLF_FUZZED(-1.9), clamp(_GLF_IDENTITY(_GLF_FUZZED(-1.9), min(_GLF_IDENTITY(_GLF_FUZZED(-1.9), max(_GLF_FUZZED(-1.9), _GLF_FUZZED(-1.9))), _GLF_FUZZED(-1.9))), _GLF_FUZZED(-1.9), _GLF_FUZZED(-1.9)))), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, _GLF_IDENTITY(true, ! (! (true))))))) - vec2(0.0, 0.0), _GLF_IDENTITY(vec2(_GLF_IDENTITY(mat4x2((_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(9974.8241), _GLF_IDENTITY(_GLF_FUZZED(-1.9), mix(float(_GLF_FUZZED(-1.9)), float(_GLF_FUZZED(-56.61)), bool(false)))), vec2(_GLF_IDENTITY((injectionSwitch)[0], min(_GLF_IDENTITY((injectionSwitch)[0], max((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch)[0], float(mat2((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - sin(log(vec2(1.0, 1.0)))))[0], 1.0, 0.0, 0.0))))), (injectionSwitch)[0])), (injectionSwitch)[1]), _GLF_IDENTITY(bvec2(true, true), _GLF_IDENTITY(bvec2(bvec2(_GLF_IDENTITY(bvec2(true, true), bvec2(bvec4(_GLF_IDENTITY(bvec2(true, true), bvec2(bvec3(bvec2(true, true), false))), false, true))))), bvec2(bvec2(_GLF_IDENTITY(bvec2(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(true, true), bvec2(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(true, true), bvec2(bvec3(bvec2(true, true), false))), _GLF_IDENTITY(bvec2(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec2(true, true), bvec2(bvec3(bvec2(true, true), false))), true), bvec3(bvec4(bvec3(_GLF_IDENTITY(bvec2(true, true), bvec2(bvec3(bvec2(true, true), false))), true), false)))), bvec2(bvec2(bvec2(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec2(true, true), bvec2(bvec3(bvec2(true, true), false))), true), bvec3(bvec4(bvec3(_GLF_IDENTITY(bvec2(true, true), bvec2(bvec3(bvec2(true, true), false))), true), false)))))))), _GLF_IDENTITY(false, true && (false)), _GLF_IDENTITY(true, (true) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), _GLF_IDENTITY(bvec2(bvec4(_GLF_IDENTITY(bvec2(true, true), bvec2(bvec4(_GLF_IDENTITY(bvec2(true, true), bvec2(bvec3(bvec2(true, true), false))), false, true))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)), bvec2(bvec4(bvec2(bvec4(_GLF_IDENTITY(bvec2(true, true), bvec2(bvec4(_GLF_IDENTITY(bvec2(true, true), bvec2(bvec3(bvec2(true, true), false))), false, true))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)), false, false)))))), bvec2(bvec2(_GLF_IDENTITY(bvec2(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(true, true), bvec2(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(true, true), bvec2(bvec3(bvec2(true, true), false))), _GLF_IDENTITY(bvec2(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec2(true, true), bvec2(bvec3(bvec2(true, true), false))), true), bvec3(bvec4(bvec3(_GLF_IDENTITY(bvec2(true, true), bvec2(bvec3(bvec2(true, true), false))), true), false)))), bvec2(bvec2(bvec2(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec2(true, true), bvec2(bvec3(bvec2(true, true), false))), true), bvec3(bvec4(bvec3(_GLF_IDENTITY(bvec2(true, true), bvec2(bvec3(bvec2(true, true), false))), true), false)))))))), _GLF_IDENTITY(false, true && (false)), _GLF_IDENTITY(true, (true) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), _GLF_IDENTITY(bvec2(bvec4(_GLF_IDENTITY(bvec2(true, true), bvec2(bvec4(_GLF_IDENTITY(bvec2(true, true), bvec2(bvec3(bvec2(true, true), false))), false, true))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)), bvec2(bvec4(bvec2(bvec4(_GLF_IDENTITY(bvec2(true, true), bvec2(bvec4(_GLF_IDENTITY(bvec2(true, true), bvec2(bvec3(bvec2(true, true), false))), false, true))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)), false, false)))))), _GLF_IDENTITY(bvec2(_GLF_IDENTITY(bvec3(bvec2(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(true, true), bvec2(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(true, true), bvec2(bvec3(bvec2(true, true), false))), _GLF_IDENTITY(bvec2(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec2(true, true), bvec2(bvec3(bvec2(true, true), false))), true), bvec3(bvec4(bvec3(_GLF_IDENTITY(bvec2(true, true), bvec2(bvec3(bvec2(true, true), false))), true), false)))), bvec2(bvec2(bvec2(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec2(true, true), bvec2(bvec3(bvec2(true, true), false))), true), bvec3(bvec4(bvec3(_GLF_IDENTITY(bvec2(true, true), bvec2(bvec3(bvec2(true, true), false))), true), false)))))))), _GLF_IDENTITY(false, true && (false)), _GLF_IDENTITY(true, (true) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), _GLF_IDENTITY(bvec2(bvec4(_GLF_IDENTITY(bvec2(true, true), bvec2(bvec4(_GLF_IDENTITY(bvec2(true, true), bvec2(bvec3(bvec2(true, true), false))), false, true))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)), bvec2(bvec4(bvec2(bvec4(_GLF_IDENTITY(bvec2(true, true), bvec2(bvec4(_GLF_IDENTITY(bvec2(true, true), bvec2(bvec3(bvec2(true, true), false))), false, true))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)), false, false)))))), false), bvec3(bvec4(bvec3(bvec2(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(true, true), bvec2(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(true, true), bvec2(bvec3(bvec2(true, true), false))), _GLF_IDENTITY(bvec2(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec2(true, true), bvec2(bvec3(bvec2(true, true), false))), true), bvec3(bvec4(bvec3(_GLF_IDENTITY(bvec2(true, true), bvec2(bvec3(bvec2(true, true), false))), true), false)))), bvec2(bvec2(bvec2(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec2(true, true), bvec2(bvec3(bvec2(true, true), false))), true), bvec3(bvec4(bvec3(_GLF_IDENTITY(bvec2(true, true), bvec2(bvec3(bvec2(true, true), false))), true), false)))))))), _GLF_IDENTITY(false, true && (false)), _GLF_IDENTITY(true, (true) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), _GLF_IDENTITY(bvec2(bvec4(_GLF_IDENTITY(bvec2(true, true), bvec2(bvec4(_GLF_IDENTITY(bvec2(true, true), bvec2(bvec3(bvec2(true, true), false))), false, true))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)), bvec2(bvec4(bvec2(bvec4(_GLF_IDENTITY(bvec2(true, true), bvec2(bvec4(_GLF_IDENTITY(bvec2(true, true), bvec2(bvec3(bvec2(true, true), false))), false, true))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)), false, false)))))), false), true)))), bvec2(bvec3(bvec2(_GLF_IDENTITY(bvec3(bvec2(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(true, true), bvec2(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(true, true), bvec2(bvec3(bvec2(true, true), false))), _GLF_IDENTITY(bvec2(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec2(true, true), bvec2(bvec3(bvec2(true, true), false))), true), bvec3(bvec4(bvec3(_GLF_IDENTITY(bvec2(true, true), bvec2(bvec3(bvec2(true, true), false))), true), false)))), bvec2(bvec2(bvec2(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec2(true, true), bvec2(bvec3(bvec2(true, true), false))), true), bvec3(bvec4(bvec3(_GLF_IDENTITY(bvec2(true, true), bvec2(bvec3(bvec2(true, true), false))), true), false)))))))), _GLF_IDENTITY(false, true && (false)), _GLF_IDENTITY(true, (true) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), _GLF_IDENTITY(bvec2(bvec4(_GLF_IDENTITY(bvec2(true, true), bvec2(bvec4(_GLF_IDENTITY(bvec2(true, true), bvec2(bvec3(bvec2(true, true), false))), false, true))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)), bvec2(bvec4(bvec2(bvec4(_GLF_IDENTITY(bvec2(true, true), bvec2(bvec4(_GLF_IDENTITY(bvec2(true, true), bvec2(bvec3(bvec2(true, true), false))), false, true))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)), false, false)))))), false), bvec3(bvec4(bvec3(bvec2(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(true, true), bvec2(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(true, true), bvec2(bvec3(bvec2(true, true), false))), _GLF_IDENTITY(bvec2(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec2(true, true), bvec2(bvec3(bvec2(true, true), false))), true), bvec3(bvec4(bvec3(_GLF_IDENTITY(bvec2(true, true), bvec2(bvec3(bvec2(true, true), false))), true), false)))), bvec2(bvec2(bvec2(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec2(true, true), bvec2(bvec3(bvec2(true, true), false))), true), bvec3(bvec4(bvec3(_GLF_IDENTITY(bvec2(true, true), bvec2(bvec3(bvec2(true, true), false))), true), false)))))))), _GLF_IDENTITY(false, true && (false)), _GLF_IDENTITY(true, (true) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), _GLF_IDENTITY(bvec2(bvec4(_GLF_IDENTITY(bvec2(true, true), bvec2(bvec4(_GLF_IDENTITY(bvec2(true, true), bvec2(bvec3(bvec2(true, true), false))), false, true))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)), bvec2(bvec4(bvec2(bvec4(_GLF_IDENTITY(bvec2(true, true), bvec2(bvec4(_GLF_IDENTITY(bvec2(true, true), bvec2(bvec3(bvec2(true, true), false))), false, true))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)), false, false)))))), false), true)))), false)))))))))))))) - vec2(0.0, 0.0), abs(0.0), determinant(mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(1.0, _GLF_IDENTITY(float(mat2x3(1.0, determinant(mat2(0.0, _GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(2128.7594, -1.3)) : _GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)) : _GLF_FUZZED(injectionSwitch))))).x), _GLF_ZERO(0.0, injectionSwitch.x), 0.0)), length(vec4(0.0, 0.0, 0.0, 0.0)), 1.0, 0.0, 0.0)), (true ? float(mat2x3(1.0, determinant(mat2(0.0, _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), 0.0)), length(vec4(0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, (0.0) / 1.0))), 1.0, 0.0, 0.0)) : _GLF_FUZZED(4967.8069)))), 0.0, 0.0, 1.0, 1.0, 0.0, 0.0)), 1.0, _GLF_IDENTITY(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(6.3)), float(1.0), bool(true))), clamp(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(6.3)), float(1.0), bool(true))), _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(6.3)), float(1.0), bool(true))), _GLF_IDENTITY(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(6.3)), float(1.0), bool(true))), (false ? _GLF_FUZZED(-949.077) : _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(6.3)), float(1.0), bool(true))))))), 1.0, 1.0), mat4x2(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0) + (mat4x2((_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(9974.8241), _GLF_FUZZED(-1.9)), vec2((injectionSwitch)[_GLF_IDENTITY(0, (0) ^ 0)], (injectionSwitch)[1]), bvec2(true, true)))) - vec2(0.0, 0.0), abs(0.0), determinant(mat4(0.0, _GLF_IDENTITY(0.0, float(mat4x2(0.0, 1.0, 1.0, 0.0, 1.0, sin(0.0), 1.0, determinant(mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))))), 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-409.128) : 1.0)), 1.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 0.0, 1.0, 1.0, 0.0, 0.0)), 1.0, 1.0, 1.0, 1.0)))), min(vec2(_GLF_IDENTITY(mat4x2((_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(9974.8241), _GLF_FUZZED(-1.9)), vec2((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[_GLF_IDENTITY(0, (_GLF_IDENTITY(0, clamp(_GLF_IDENTITY(0, (0) | (0)), 0, 0))) - 0)], injectionSwitch[1]))) / vec2(1.0, 1.0)))[0], (injectionSwitch)[_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) ^ 0)) ^ 0)]), bvec2(true, true)))) - vec2(0.0, 0.0), _GLF_IDENTITY(abs(0.0), 1.0 * (abs(0.0))), determinant(mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0)), 1.0, 1.0, 1.0, 1.0), mat4x2(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0) + (mat4x2((_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(9974.8241), _GLF_FUZZED(-1.9)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true)))) - vec2(0.0, 0.0), abs(0.0), determinant(mat4(0.0, 0.0, _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_IDENTITY(_GLF_FUZZED(-485.866), clamp(_GLF_IDENTITY(_GLF_FUZZED(-485.866), mix(float(_GLF_FUZZED(-485.866)), float(_GLF_FUZZED(-945.746)), bool(false))), _GLF_IDENTITY(_GLF_FUZZED(-485.866), _GLF_IDENTITY(float(mat3x4(_GLF_FUZZED(-485.866), 1.0, length(vec4(0.0, 0.0, 0.0, 0.0)), _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), vec2(1.0, 0.0))), 1.0, 1.0, 1.0, 0.0, sqrt(abs(1.0)), 0.0, 0.0, 0.0)), float(mat4(float(mat3x4(_GLF_FUZZED(-485.866), 1.0, length(vec4(0.0, 0.0, 0.0, 0.0)), _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), vec2(1.0, 0.0))), 1.0, 1.0, 1.0, 0.0, sqrt(abs(1.0)), 0.0, 0.0, 0.0)), 0.0, 0.0, exp(0.0), 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, determinant(mat4(1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0)))))), _GLF_IDENTITY(_GLF_FUZZED(-485.866), 0.0 + (_GLF_IDENTITY(_GLF_FUZZED(-485.866), (_GLF_FUZZED(-485.866)) / 1.0)))))), bool(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(7.8), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(86.63)), bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))).x > injectionSwitch.y))))), 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0)), 1.0, 1.0, 1.0, 1.0)))), _GLF_IDENTITY(vec2(_GLF_IDENTITY(mat4x2((_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(9974.8241), _GLF_FUZZED(-1.9)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true)))) - _GLF_IDENTITY(vec2(0.0, 0.0), (vec2(0.0, 0.0)) - vec2(0.0, 0.0)), abs(_GLF_IDENTITY(0.0, float(_GLF_IDENTITY(mat4x2(0.0, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), 0.0, 1.0, 1.0, 1.0, 1.0, 1.0), mat2(1.0) * (mat4x2(0.0, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), 0.0, 1.0, 1.0, 1.0, 1.0, 1.0)))))), determinant(_GLF_IDENTITY(mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(-66.46) : _GLF_IDENTITY(0.0, 0.0 + (0.0)))), 0.0, 1.0, 1.0, 0.0, _GLF_IDENTITY(0.0, float(_GLF_IDENTITY(mat2x4(_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-6.1)), float(0.0), bool(true))), 0.0, 1.0, log(1.0), log(1.0), _GLF_IDENTITY(dot(vec2(0.0, 0.0), vec2(1.0, 1.0)), _GLF_IDENTITY(dot(vec2(0.0, 0.0), vec2(1.0, 1.0)), min(dot(_GLF_IDENTITY(vec2(0.0, 0.0), (true ? _GLF_IDENTITY(vec2(0.0, 0.0), max(_GLF_IDENTITY(vec2(0.0, 0.0), (vec2(0.0, 0.0)) / vec2(1.0, 1.0)), vec2(0.0, 0.0))) : _GLF_FUZZED(vec2(-9761.5906, 6.9)))), vec2(1.0, 1.0)), dot(vec2(0.0, 0.0), vec2(1.0, 1.0))))), 1.0, 1.0), (false ? _GLF_FUZZED(mat2x4(-1.4, -58.60, 8.0, 9.5, -4185.2829, -87.00, -5371.1628, 5.2)) : mat2x4(_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-6.1)), float(0.0), bool(true))), 0.0, 1.0, log(1.0), log(1.0), _GLF_IDENTITY(dot(vec2(0.0, 0.0), vec2(1.0, 1.0)), _GLF_IDENTITY(dot(vec2(0.0, 0.0), vec2(1.0, 1.0)), min(dot(vec2(0.0, 0.0), vec2(1.0, 1.0)), dot(vec2(0.0, 0.0), vec2(1.0, 1.0))))), 1.0, 1.0))))), 1.0, 1.0, 0.0, 0.0), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0), (true ? mat4(0.0, _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(vec3(-4.6, 78.13, 641.100).b)), bool(false))), _GLF_IDENTITY(0.0, float(mat4(_GLF_IDENTITY(0.0, float(mat2x4(0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0))), length(vec3(0.0, 0.0, 0.0)), 0.0, determinant(mat3(1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(0.0, 1.0, 0.0, 0.0)), dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(0.0, 1.0, 0.0, 0.0))), 1.0)), abs(1.0), 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, abs(0.0), 1.0, 1.0, 1.0))), 0.0, 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(6159.3261))), 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0) : _GLF_FUZZED(mat4(563.177, -37.43, 12.53, 7493.0628, 3.3, -4.2, 3.9, 2.4, -5.4, -659.577, -1.0, -89.06, -5.7, -4.5, 46.03, 5.8)))) : _GLF_FUZZED(mat4(-9.2, _GLF_IDENTITY(5.0, max(5.0, _GLF_IDENTITY(5.0, (5.0) + 0.0))), -71.55, -462.554, 205.507, -3434.3082, -625.699, -2.2, -3.3, 522.603, 703.899, 21.13, -17.47, 1.6, -752.264, -362.405))))), 1.0, 1.0, 1.0, 1.0), mat4x2(0.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0, _GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), (true ? _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)) : _GLF_FUZZED(54.01))), 0.0, 0.0)), 0.0, 0.0, 0.0, 0.0) + (mat4x2((_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(9974.8241), _GLF_FUZZED(-1.9)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true)))) - _GLF_IDENTITY(vec2(0.0, 0.0), _GLF_IDENTITY(mat2(1.0) * (vec2(0.0, 0.0)), mix(vec2(_GLF_FUZZED(685.805), _GLF_FUZZED(-7970.6787)), vec2((mat2(1.0) * (vec2(0.0, 0.0)))[0], (mat2(1.0) * _GLF_IDENTITY((vec2(0.0, 0.0)), max((vec2(0.0, 0.0)), (vec2(0.0, 0.0)))))[1]), bvec2(true, true)))), abs(0.0), determinant(mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(1.0, mix(float(_GLF_IDENTITY(1.0, float(vec4(1.0, 0.0, 0.0, 0.0)))), float(_GLF_FUZZED(-8.7)), bool(false))), 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)))), 1.0, 1.0, 1.0, 1.0)))), min(vec2(_GLF_IDENTITY(mat4x2((_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mix(vec2(_GLF_FUZZED(_GLF_IDENTITY(9974.8241, max(9974.8241, 9974.8241))), _GLF_FUZZED(-1.9)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true)), max(mix(vec2(_GLF_FUZZED(_GLF_IDENTITY(9974.8241, max(9974.8241, 9974.8241))), _GLF_FUZZED(-1.9)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true)), mix(vec2(_GLF_FUZZED(_GLF_IDENTITY(9974.8241, max(9974.8241, 9974.8241))), _GLF_FUZZED(-1.9)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true)))))) - vec2(0.0, 0.0), abs(0.0), determinant(mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0)), 1.0, 1.0, 1.0, 1.0), mat4x2(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0) + (mat4x2((_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(9974.8241), _GLF_FUZZED(-1.9)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true)))) - vec2(0.0, _GLF_IDENTITY(0.0, float(vec4(_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_IDENTITY(_GLF_FUZZED(-18.85), min(_GLF_IDENTITY(_GLF_FUZZED(-18.85), mix(float(_GLF_FUZZED(-4.0)), float(_GLF_IDENTITY(_GLF_FUZZED(-18.85), float(vec3(_GLF_FUZZED(-18.85), 1.0, 0.0)))), bool(true))), _GLF_FUZZED(-18.85))))), 0.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0)))), abs(0.0), determinant(mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0)), 1.0, 1.0, 1.0, 1.0)))), vec2(_GLF_IDENTITY(mat4x2((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)), injectionSwitch)), mix(vec2(_GLF_FUZZED(9974.8241), _GLF_FUZZED(-1.9)), vec2((injectionSwitch)[0], _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, vec2(mat4x3(injectionSwitch, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, determinant(mat2(0.0, 0.0, 1.0, sin(0.0))), tan(0.0), 0.0, determinant(mat3(0.0, 0.0, abs(0.0), 0.0, 0.0, 0.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), length(0.0))))))), vec2(mat3x2((_GLF_IDENTITY(injectionSwitch, vec2(mat4x3(injectionSwitch, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, determinant(mat2(0.0, 0.0, 1.0, sin(0.0))), tan(0.0), 0.0, determinant(mat3(0.0, 0.0, abs(0.0), 0.0, 0.0, 0.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), length(0.0))))))), 1.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0)))[1]), bvec2(true, true)))) - vec2(0.0, 0.0), abs(0.0), determinant(mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0)), 1.0, 1.0, 1.0, 1.0), mat4x2(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, _GLF_IDENTITY(float(vec4(0.0, 0.0, 0.0, 0.0)), min(float(_GLF_IDENTITY(vec4(0.0, 0.0, 0.0, 0.0), (vec4(0.0, 0.0, 0.0, 0.0)) - vec4(0.0, 0.0, 0.0, 0.0))), _GLF_IDENTITY(float(vec4(_GLF_IDENTITY(0.0, (0.0) - 0.0), 0.0, 0.0, 0.0)), min(float(vec4(_GLF_IDENTITY(0.0, (0.0) - 0.0), 0.0, 0.0, 0.0)), float(vec4(_GLF_IDENTITY(0.0, (0.0) - 0.0), 0.0, 0.0, 0.0)))))))) - 0.0)) + (mat4x2((_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(9974.8241), _GLF_FUZZED(-1.9)), vec2((_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)))))[0], (injectionSwitch)[1]), bvec2(true, true)))) - vec2(0.0, 0.0), abs(0.0), determinant(mat4(0.0, _GLF_IDENTITY(0.0, _GLF_IDENTITY(float(mat4x3(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 0.0, 1.0, 0.0, _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(4.8) : 0.0)), length(vec4(0.0, 0.0, 0.0, 0.0)), 1.0, round(length(normalize(vec3(1.0, 1.0, 1.0)))), tan(0.0), 0.0, sin(0.0), 0.0)), mix(float(float(mat4x3(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 0.0, 1.0, 0.0, _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(4.8) : 0.0)), length(vec4(0.0, 0.0, 0.0, 0.0)), 1.0, round(length(normalize(vec3(1.0, 1.0, 1.0)))), tan(0.0), 0.0, sin(0.0), 0.0))), float(_GLF_FUZZED(8.5)), bool(false)))), 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0)), 1.0, 1.0, 1.0, 1.0)))))))))).x > injectionSwitch.y) || false)))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! _GLF_IDENTITY((false), ((false)) && true), (! _GLF_IDENTITY((false), ((false)) && true)) || false)))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, bool(bvec4(false, false, true, false)))))), true && (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, bool(bvec4(false, false, true, false)))))), bool(bvec4(_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, bool(bvec4(false, false, true, false)))))), true, true, true))))))
        return;
       barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         barrier();
        }
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   int i = 0;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
    barrier();
   atomicStore(buf[GLF_merged3_0_1_16_1_1_6_2_1_6next_virtual_gidread_1read_2.x], uint(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged2_0_2_52_2_2_41GLF_merged2_0_1_13_1_1_14num_workgroupworkgroup_sizeGLF_merged2_0_1_6_1_1_11read_1virtual_gid.zw, max(GLF_merged2_0_2_52_2_2_41GLF_merged2_0_1_13_1_1_14num_workgroupworkgroup_sizeGLF_merged2_0_1_6_1_1_11read_1virtual_gid.zw, GLF_merged2_0_2_52_2_2_41GLF_merged2_0_1_13_1_1_14num_workgroupworkgroup_sizeGLF_merged2_0_1_6_1_1_11read_1virtual_gid.zw)), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged2_0_2_52_2_2_41GLF_merged2_0_1_13_1_1_14num_workgroupworkgroup_sizeGLF_merged2_0_1_6_1_1_11read_1virtual_gid.zw, (_GLF_IDENTITY(GLF_merged2_0_2_52_2_2_41GLF_merged2_0_1_13_1_1_14num_workgroupworkgroup_sizeGLF_merged2_0_1_6_1_1_11read_1virtual_gid.zw, (GLF_merged2_0_2_52_2_2_41GLF_merged2_0_1_13_1_1_14num_workgroupworkgroup_sizeGLF_merged2_0_1_6_1_1_11read_1virtual_gid.zw) / (uvec2(0u, 0u) | uvec2(1u, 1u)))) * (uvec2(1u, 1u) & uvec2(1u, 1u))), max(GLF_merged2_0_2_52_2_2_41GLF_merged2_0_1_13_1_1_14num_workgroupworkgroup_sizeGLF_merged2_0_1_6_1_1_11read_1virtual_gid.zw, GLF_merged2_0_2_52_2_2_41GLF_merged2_0_1_13_1_1_14num_workgroupworkgroup_sizeGLF_merged2_0_1_6_1_1_11read_1virtual_gid.zw)), (_GLF_IDENTITY(GLF_merged2_0_2_52_2_2_41GLF_merged2_0_1_13_1_1_14num_workgroupworkgroup_sizeGLF_merged2_0_1_6_1_1_11read_1virtual_gid.zw, max(GLF_merged2_0_2_52_2_2_41GLF_merged2_0_1_13_1_1_14num_workgroupworkgroup_sizeGLF_merged2_0_1_6_1_1_11read_1virtual_gid.zw, GLF_merged2_0_2_52_2_2_41GLF_merged2_0_1_13_1_1_14num_workgroupworkgroup_sizeGLF_merged2_0_1_6_1_1_11read_1virtual_gid.zw))) * uvec2(1u, 1u))) << uvec2(0u, 0u)).x + 1, 1u * (_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged2_0_2_52_2_2_41GLF_merged2_0_1_13_1_1_14num_workgroupworkgroup_sizeGLF_merged2_0_1_6_1_1_11read_1virtual_gid.zw, max(GLF_merged2_0_2_52_2_2_41GLF_merged2_0_1_13_1_1_14num_workgroupworkgroup_sizeGLF_merged2_0_1_6_1_1_11read_1virtual_gid.zw, GLF_merged2_0_2_52_2_2_41GLF_merged2_0_1_13_1_1_14num_workgroupworkgroup_sizeGLF_merged2_0_1_6_1_1_11read_1virtual_gid.zw)).x, clamp(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged2_0_2_52_2_2_41GLF_merged2_0_1_13_1_1_14num_workgroupworkgroup_sizeGLF_merged2_0_1_6_1_1_11read_1virtual_gid, (true ? GLF_merged2_0_2_52_2_2_41GLF_merged2_0_1_13_1_1_14num_workgroupworkgroup_sizeGLF_merged2_0_1_6_1_1_11read_1virtual_gid : _GLF_FUZZED(uvec4(96616u, 56902u, 22050u, 42965u)))).zw, max(GLF_merged2_0_2_52_2_2_41GLF_merged2_0_1_13_1_1_14num_workgroupworkgroup_sizeGLF_merged2_0_1_6_1_1_11read_1virtual_gid.zw, GLF_merged2_0_2_52_2_2_41GLF_merged2_0_1_13_1_1_14num_workgroupworkgroup_sizeGLF_merged2_0_1_6_1_1_11read_1virtual_gid.zw)).x, (_GLF_IDENTITY(GLF_merged2_0_2_52_2_2_41GLF_merged2_0_1_13_1_1_14num_workgroupworkgroup_sizeGLF_merged2_0_1_6_1_1_11read_1virtual_gid.zw, max(GLF_merged2_0_2_52_2_2_41GLF_merged2_0_1_13_1_1_14num_workgroupworkgroup_sizeGLF_merged2_0_1_6_1_1_11read_1virtual_gid.zw, GLF_merged2_0_2_52_2_2_41GLF_merged2_0_1_13_1_1_14num_workgroupworkgroup_sizeGLF_merged2_0_1_6_1_1_11read_1virtual_gid.zw)).x) | 0u), _GLF_IDENTITY(GLF_merged2_0_2_52_2_2_41GLF_merged2_0_1_13_1_1_14num_workgroupworkgroup_sizeGLF_merged2_0_1_6_1_1_11read_1virtual_gid.zw, max(GLF_merged2_0_2_52_2_2_41GLF_merged2_0_1_13_1_1_14num_workgroupworkgroup_sizeGLF_merged2_0_1_6_1_1_11read_1virtual_gid.zw, GLF_merged2_0_2_52_2_2_41GLF_merged2_0_1_13_1_1_14num_workgroupworkgroup_sizeGLF_merged2_0_1_6_1_1_11read_1virtual_gid.zw)).x, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged2_0_2_52_2_2_41GLF_merged2_0_1_13_1_1_14num_workgroupworkgroup_sizeGLF_merged2_0_1_6_1_1_11read_1virtual_gid.zw, (GLF_merged2_0_2_52_2_2_41GLF_merged2_0_1_13_1_1_14num_workgroupworkgroup_sizeGLF_merged2_0_1_6_1_1_11read_1virtual_gid.zw) | (GLF_merged2_0_2_52_2_2_41GLF_merged2_0_1_13_1_1_14num_workgroupworkgroup_sizeGLF_merged2_0_1_6_1_1_11read_1virtual_gid.zw)), max(GLF_merged2_0_2_52_2_2_41GLF_merged2_0_1_13_1_1_14num_workgroupworkgroup_sizeGLF_merged2_0_1_6_1_1_11read_1virtual_gid.zw, GLF_merged2_0_2_52_2_2_41GLF_merged2_0_1_13_1_1_14num_workgroupworkgroup_sizeGLF_merged2_0_1_6_1_1_11read_1virtual_gid.zw)).x, _GLF_IDENTITY(min(_GLF_IDENTITY(GLF_merged2_0_2_52_2_2_41GLF_merged2_0_1_13_1_1_14num_workgroupworkgroup_sizeGLF_merged2_0_1_6_1_1_11read_1virtual_gid.zw, max(GLF_merged2_0_2_52_2_2_41GLF_merged2_0_1_13_1_1_14num_workgroupworkgroup_sizeGLF_merged2_0_1_6_1_1_11read_1virtual_gid.zw, _GLF_IDENTITY(GLF_merged2_0_2_52_2_2_41GLF_merged2_0_1_13_1_1_14num_workgroupworkgroup_sizeGLF_merged2_0_1_6_1_1_11read_1virtual_gid.zw, clamp(GLF_merged2_0_2_52_2_2_41GLF_merged2_0_1_13_1_1_14num_workgroupworkgroup_sizeGLF_merged2_0_1_6_1_1_11read_1virtual_gid.zw, GLF_merged2_0_2_52_2_2_41GLF_merged2_0_1_13_1_1_14num_workgroupworkgroup_sizeGLF_merged2_0_1_6_1_1_11read_1virtual_gid.zw, GLF_merged2_0_2_52_2_2_41GLF_merged2_0_1_13_1_1_14num_workgroupworkgroup_sizeGLF_merged2_0_1_6_1_1_11read_1virtual_gid.zw)))).x, _GLF_IDENTITY(_GLF_IDENTITY(GLF_merged2_0_2_52_2_2_41GLF_merged2_0_1_13_1_1_14num_workgroupworkgroup_sizeGLF_merged2_0_1_6_1_1_11read_1virtual_gid.zw, uvec2(0u, 0u) ^ (GLF_merged2_0_2_52_2_2_41GLF_merged2_0_1_13_1_1_14num_workgroupworkgroup_sizeGLF_merged2_0_1_6_1_1_11read_1virtual_gid.zw)), max(GLF_merged2_0_2_52_2_2_41GLF_merged2_0_1_13_1_1_14num_workgroupworkgroup_sizeGLF_merged2_0_1_6_1_1_11read_1virtual_gid.zw, GLF_merged2_0_2_52_2_2_41GLF_merged2_0_1_13_1_1_14num_workgroupworkgroup_sizeGLF_merged2_0_1_6_1_1_11read_1virtual_gid.zw)).x), ~ (~ (min(_GLF_IDENTITY(GLF_merged2_0_2_52_2_2_41GLF_merged2_0_1_13_1_1_14num_workgroupworkgroup_sizeGLF_merged2_0_1_6_1_1_11read_1virtual_gid.zw, max(GLF_merged2_0_2_52_2_2_41GLF_merged2_0_1_13_1_1_14num_workgroupworkgroup_sizeGLF_merged2_0_1_6_1_1_11read_1virtual_gid.zw, GLF_merged2_0_2_52_2_2_41GLF_merged2_0_1_13_1_1_14num_workgroupworkgroup_sizeGLF_merged2_0_1_6_1_1_11read_1virtual_gid.zw)).x, _GLF_IDENTITY(GLF_merged2_0_2_52_2_2_41GLF_merged2_0_1_13_1_1_14num_workgroupworkgroup_sizeGLF_merged2_0_1_6_1_1_11read_1virtual_gid.zw, max(GLF_merged2_0_2_52_2_2_41GLF_merged2_0_1_13_1_1_14num_workgroupworkgroup_sizeGLF_merged2_0_1_6_1_1_11read_1virtual_gid.zw, GLF_merged2_0_2_52_2_2_41GLF_merged2_0_1_13_1_1_14num_workgroupworkgroup_sizeGLF_merged2_0_1_6_1_1_11read_1virtual_gid.zw)).x))))))) + 1)) == _GLF_IDENTITY(GLF_merged3_0_1_16_1_1_6_2_1_6next_virtual_gidread_1read_2.z, (GLF_merged3_0_1_16_1_1_6_2_1_6next_virtual_gidread_1read_2.z) / 1u)) + 1, 4, 64, 4);
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(mat2x4(injectionSwitch, 1.0, 0.0, 1.0, 1.0, determinant(mat4(_GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(1.0, 1.0, 0.0)), dot(vec3(0.0, 0.0, 1.0), vec3(1.0, 1.0, 0.0))), 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, sin(0.0), 1.0, 0.0, 0.0, 0.0, 0.0)), 0.0))).y))))
    return;
   if(_GLF_DEAD(false))
    barrier();
  }
 else
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(mat2(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)), 1.0, 0.0))).x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) || false)))))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), (false) && true)))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec3(injectionSwitch.x > injectionSwitch.y, true, true)))))))))))))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
    }
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, bool(bvec2(false, true))))))) && true))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, false || (false))), (! (_GLF_IDENTITY(false, false || (false)))) && true)))))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_DEAD(false))
            barrier();
           barrier();
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(false))
              return;
             if(_GLF_DEAD(false))
              barrier();
             return;
            }
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            return;
          }
         barrier();
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
        }
       return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).y)))))))) && true))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         return;
        }
      }
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x > injectionSwitch.y), ((_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x > injectionSwitch.y)) || false), true && ((injectionSwitch.x > injectionSwitch.y))))))
    barrier();
   atomicStore(buf[GLF_merged3_0_1_16_1_1_6_2_1_6next_virtual_gidread_1read_2.x], _GLF_IDENTITY(uint(GLF_merged2_0_2_52_2_2_41GLF_merged2_0_1_13_1_1_14num_workgroupworkgroup_sizeGLF_merged2_0_1_6_1_1_11read_1virtual_gid.zw.x + _GLF_IDENTITY(1, _GLF_IDENTITY((1), (_GLF_IDENTITY((1), ((1)) - 0)) - 0) + 0) == GLF_merged3_0_1_16_1_1_6_2_1_6next_virtual_gidread_1read_2.z) + 1, _GLF_IDENTITY((uint(GLF_merged2_0_2_52_2_2_41GLF_merged2_0_1_13_1_1_14num_workgroupworkgroup_sizeGLF_merged2_0_1_6_1_1_11read_1virtual_gid.zw.x + _GLF_IDENTITY(1, (1) + 0) == GLF_merged3_0_1_16_1_1_6_2_1_6next_virtual_gidread_1read_2.z) + 1) + 0u, ((uint(GLF_merged2_0_2_52_2_2_41GLF_merged2_0_1_13_1_1_14num_workgroupworkgroup_sizeGLF_merged2_0_1_6_1_1_11read_1virtual_gid.zw.x + _GLF_IDENTITY(1, (1) + 0) == GLF_merged3_0_1_16_1_1_6_2_1_6next_virtual_gidread_1read_2.z) + _GLF_IDENTITY(1, ~ (~ (1)))) + _GLF_IDENTITY(0u, uint(uint(_GLF_IDENTITY(0u, min(_GLF_IDENTITY(0u, (0u) << 0u), 0u)))))) | ((uint(GLF_merged2_0_2_52_2_2_41GLF_merged2_0_1_13_1_1_14num_workgroupworkgroup_sizeGLF_merged2_0_1_6_1_1_11read_1virtual_gid.zw.x + _GLF_IDENTITY(1, (1) + 0) == GLF_merged3_0_1_16_1_1_6_2_1_6next_virtual_gidread_1read_2.z) + 1) + 0u))), _GLF_IDENTITY(4, (true ? 4 : _GLF_FUZZED(35265))), 64, 4);
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, bool(bvec3(false, true, false))), true)))))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, true)))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    return;
  }
}
