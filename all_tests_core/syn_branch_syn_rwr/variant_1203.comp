#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 uvec2 GLF_merged2_0_1_13_1_1_12num_workgroupworkgroup_id;
 uint subgroup_id = gl_SubgroupID;
 uint subgroup_size = gl_SubgroupSize;
 uint subgroup_local_id = gl_SubgroupInvocationID;
 uint num_workgroup = gl_NumWorkGroups.x;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 GLF_merged2_0_1_13_1_1_12num_workgroupworkgroup_id.x = num_workgroup;
 uint workgroup_size = gl_WorkGroupSize.x;
 uint workgroup_id = gl_WorkGroupID.x;
 GLF_merged2_0_1_13_1_1_12num_workgroupworkgroup_id.y = workgroup_id;
 uint workgroup_base = workgroup_size * GLF_merged2_0_1_13_1_1_12num_workgroupworkgroup_id.y;
 uint virtual_gid = workgroup_base + subgroup_id * subgroup_size + subgroup_local_id;
 uint next_virtual_gid = workgroup_base + subgroup_id * subgroup_size + ((subgroup_local_id + 1) % subgroup_size);
 uint read_1 = atomicLoad(buf[virtual_gid], 4, 64, 0);
 atomicStore(buf[next_virtual_gid], uint(read_1 + 1), 4, 64, 4);
 uint read_2 = atomicLoad(buf[virtual_gid], 4, 64, 0);
 if(subgroup_local_id + 1 < subgroup_size)
  {
   int i = 0;
   atomicStore(buf[next_virtual_gid], uint(read_1 + 1 == read_2) + 1, 4, 64, 4);
   if(_GLF_DEAD(false))
    barrier();
  }
 else
  {
   switch(_GLF_SWITCH(0))
    {
     case 0:
     case 66:
     case 72:
     case 77:
     case 64:
     case 85:
     atomicStore(buf[next_virtual_gid], uint(read_1 + 1 == read_2) + 1, 4, 64, 4);
     break;
     case 11:
     {
      vec3 _GLF_SWITCH_0_0v, _GLF_SWITCH_0_1v, _GLF_SWITCH_0_2v;
      {
       if((mat3x2(6.9, 968.198, -51.46, 537.263, 6.4, -8895.5327) == mat3x2(597.047, 0.9, -631.129, 6.6, 3658.0041, 14.84)))
        {
         (vec2(-432.147, -7.6) + 55.70);
         (_GLF_SWITCH_0_0v / 948.719);
         uvec3 _GLF_SWITCH_0_3v[19], _GLF_SWITCH_0_4v;
         int _GLF_SWITCH_0_5v, _GLF_SWITCH_0_6v, _GLF_SWITCH_0_7v;
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
        }
       ivec2 _GLF_SWITCH_0_8v, _GLF_SWITCH_0_9v[84];
       for(mat2x4 _GLF_SWITCH_0_10v, _GLF_SWITCH_0_11v; false; max(_GLF_SWITCH_0_8v, _GLF_SWITCH_0_8v))
        {
         switch(_GLF_SWITCH(0))
          {
           case 0:
           uvec3(47133u, 199080u, 108516u);
           case 53:
           case 48:
           uvec2 _GLF_SWITCH_0_12v;
           ivec3(-37082, 98371, 90710);
           uint _GLF_SWITCH_0_13v[70], _GLF_SWITCH_0_14v;
           vec3 _GLF_SWITCH_0_15v;
           uvec4 _GLF_SWITCH_0_16v, _GLF_SWITCH_0_17v[27], _GLF_SWITCH_0_18v;
           case 23:
           case 96:
           bvec4 _GLF_SWITCH_0_19v, _GLF_SWITCH_0_20v, _GLF_SWITCH_0_21v;
           mat3x2 _GLF_SWITCH_0_22v;
           break;
           case 93:
           (_GLF_SWITCH_0_2v * mat2x3(0.1, -57.72, -2772.1412, 7.9, 8231.0447, -4608.6283));
           default:
           1;
          }
        }
       for(ivec3 _GLF_SWITCH_0_23v; (30751 < -95548); vec4(8.5, 1.4, -7.6, -691.775))
        {
         injectionSwitch;
         mat3x2 _GLF_SWITCH_0_24v[64];
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         mat4x2(-7887.6141, -37.18, -9396.1145, -7.6, -5876.6350, 348.098, 4.7, 67.24);
        }
       ;
       mat3 _GLF_SWITCH_0_25v[41], _GLF_SWITCH_0_26v[62];
       ;
       vec3 _GLF_SWITCH_0_27v, _GLF_SWITCH_0_28v[64], _GLF_SWITCH_0_29v;
      }
     }
     default:
     1;
    }
  }
}
