#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


struct _GLF_struct_43 {
 bool _f0;
} ;

struct _GLF_struct_42 {
 bvec4 _f0;
 uint virtual_gid;
 float _f1;
 mat3x2 _f2;
} ;

struct _GLF_struct_41 {
 mat4x2 _f0;
 float _f1;
 vec3 _f2;
 mat3x2 _f3;
 vec4 _f4;
 mat3 _f5;
 mat3x4 _f6;
} ;

struct _GLF_struct_40 {
 uvec2 _f0;
} ;

struct _GLF_struct_39 {
 float _f0;
 ivec2 _f1;
 vec4 _f2;
 mat2x4 _f3;
 mat3x4 _f4;
 mat3 _f5;
} ;

struct _GLF_struct_44 {
 _GLF_struct_39 _f0;
 _GLF_struct_40 _f1;
 _GLF_struct_41 _f2;
 uvec4 _f3;
 _GLF_struct_42 _f4;
 mat2x3 _f5;
 _GLF_struct_43 _f6;
} ;

struct _GLF_struct_45 {
 _GLF_struct_44 _f0;
 mat2x4 _f1;
} ;

struct _GLF_struct_37 {
 bvec2 _f0;
 mat2x3 _f1;
} ;

struct _GLF_struct_35 {
 uvec4 _f0;
 mat3 _f1;
 ivec2 _f2;
 uvec3 _f3;
 int _f4;
} ;

struct _GLF_struct_34 {
 mat2x4 _f0;
 bvec2 _f1;
 uint _f2;
 bvec4 _f3;
} ;

struct _GLF_struct_33 {
 uvec3 _f0;
 bool _f1;
 mat3x4 _f2;
 ivec3 _f3;
 ivec3 _f4;
} ;

struct _GLF_struct_36 {
 uvec2 _f0;
 _GLF_struct_33 _f1;
 mat4x2 _f2;
 mat2 _f3;
 ivec3 _f4;
 _GLF_struct_34 _f5;
 _GLF_struct_35 _f6;
} ;

struct _GLF_struct_31 {
 ivec4 _f0;
 ivec3 _f1;
} ;

struct _GLF_struct_30 {
 ivec3 _f0;
 mat4x3 _f1;
 ivec4 _f2;
 bvec3 _f3;
} ;

struct _GLF_struct_32 {
 _GLF_struct_30 _f0;
 uvec4 _f1;
 uint subgroup_size;
 _GLF_struct_31 _f2;
 vec4 _f3;
 mat4x3 _f4;
} ;

struct _GLF_struct_38 {
 vec4 _f0;
 uvec4 _f1;
 _GLF_struct_32 _f2;
 mat2x3 _f3;
 _GLF_struct_36 _f4;
 _GLF_struct_37 _f5;
} ;

struct _GLF_struct_27 {
 mat3x2 _f0;
 mat2x3 _f1;
} ;

struct _GLF_struct_26 {
 mat2x4 _f0;
 mat4x3 _f1;
 mat3x2 _f2;
} ;

struct _GLF_struct_25 {
 vec3 _f0;
} ;

struct _GLF_struct_24 {
 ivec4 _f0;
} ;

struct _GLF_struct_23 {
 uvec3 _f0;
 float _f1;
 mat3x4 _f2;
 bvec4 _f3;
 mat3x4 _f4;
 mat4x3 _f5;
} ;

struct _GLF_struct_28 {
 mat2x4 _f0;
 _GLF_struct_23 _f1;
 _GLF_struct_24 _f2;
 _GLF_struct_25 _f3;
 _GLF_struct_26 _f4;
 _GLF_struct_27 _f5;
} ;

struct _GLF_struct_21 {
 mat4x2 _f0;
} ;

struct _GLF_struct_20 {
 mat4x3 _f0;
 uvec3 _f1;
 mat3 _f2;
 bvec4 _f3;
 mat2x4 _f4;
 mat3x2 _f5;
} ;

struct _GLF_struct_19 {
 uint _f0;
 mat4x3 _f1;
 mat2 _f2;
 mat3 _f3;
 bvec2 _f4;
} ;

struct _GLF_struct_18 {
 mat3x2 _f0;
} ;

struct _GLF_struct_22 {
 _GLF_struct_18 _f0;
 _GLF_struct_19 _f1;
 _GLF_struct_20 _f2;
 mat4 _f3;
 _GLF_struct_21 _f4;
} ;

struct _GLF_struct_16 {
 vec3 _f0;
} ;

struct _GLF_struct_15 {
 ivec2 _f0;
 vec2 _f1;
 vec2 _f2;
 uint _f3;
 bool _f4;
} ;

struct _GLF_struct_14 {
 mat4x2 _f0;
 vec2 _f1;
 uvec3 _f2;
 vec4 _f3;
 mat4 _f4;
} ;

struct _GLF_struct_17 {
 ivec3 _f0;
 _GLF_struct_14 _f1;
 _GLF_struct_15 _f2;
 _GLF_struct_16 _f3;
 mat4 _f4;
} ;

struct _GLF_struct_12 {
 vec2 _f0;
 int _f1;
 uint _f2;
 mat4 _f3;
 uint _f4;
 float _f5;
 mat2 _f6;
} ;

struct _GLF_struct_11 {
 float _f0;
 ivec2 _f1;
} ;

struct _GLF_struct_13 {
 _GLF_struct_11 _f0;
 bvec4 _f1;
 _GLF_struct_12 _f2;
} ;

struct _GLF_struct_29 {
 uint subgroup_id;
 _GLF_struct_13 _f0;
 _GLF_struct_17 _f1;
 _GLF_struct_22 _f2;
 _GLF_struct_28 _f3;
} ;

struct _GLF_struct_8 {
 uvec2 _f0;
 vec3 _f1;
} ;

struct _GLF_struct_7 {
 uint subgroup_local_id;
 uvec3 _f0;
 mat3 _f1;
 mat4x2 _f2;
 uint _f3;
 uint _f4;
} ;

struct _GLF_struct_9 {
 _GLF_struct_7 _f0;
 _GLF_struct_8 _f1;
} ;

struct _GLF_struct_10 {
 ivec4 _f0;
 mat4x3 _f1;
 _GLF_struct_9 _f2;
 uvec4 _f3;
} ;

struct _GLF_struct_4 {
 mat2x4 _f0;
 bvec2 _f1;
 uvec3 _f2;
 mat2x3 _f3;
 mat4x3 _f4;
 mat2 _f5;
 uvec4 _f6;
} ;

struct _GLF_struct_5 {
 _GLF_struct_4 _f0;
} ;

struct _GLF_struct_2 {
 mat4x3 _f0;
 vec3 _f1;
 uint _f2;
 uint _f3;
} ;

struct _GLF_struct_1 {
 mat2x4 _f0;
} ;

struct _GLF_struct_3 {
 _GLF_struct_1 _f0;
 bvec3 _f1;
 mat2x3 _f2;
 _GLF_struct_2 _f3;
 bvec3 _f4;
 mat2x3 _f5;
 mat2x3 _f6;
} ;

struct _GLF_struct_6 {
 uint read_1;
 vec2 _f0;
 _GLF_struct_3 _f1;
 mat3 _f2;
 mat3x2 _f3;
 _GLF_struct_5 _f4;
} ;

struct _GLF_struct_0 {
 uint num_workgroup;
 bool _f0;
} ;

layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), (! (injectionSwitch.x > injectionSwitch.y)) || false)))))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0))) * vec2(1.0, 1.0)).x > _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(vec2(injectionSwitch), min(_GLF_IDENTITY(vec2(injectionSwitch), max(vec2(injectionSwitch), vec2(injectionSwitch))), vec2(injectionSwitch))))).y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) || false)) || false)))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 _GLF_struct_29 _GLF_struct_replacement_29 = _GLF_struct_29(gl_SubgroupID, _GLF_struct_13(_GLF_struct_11(1.0, ivec2(1)), bvec4(true), _GLF_struct_12(vec2(1.0), 1, 1u, mat4(1.0), 1u, _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-374.739)), float(1.0), bool(true))), mat2(1.0))), _GLF_struct_17(ivec3(1), _GLF_struct_14(mat4x2(1.0), vec2(1.0), uvec3(1u), _GLF_IDENTITY(vec4(1.0), max(vec4(1.0), vec4(1.0))), mat4(1.0)), _GLF_struct_15(ivec2(1), vec2(1.0), vec2(1.0), _GLF_IDENTITY(1u, uint(_GLF_IDENTITY(uint(1u), ~ (~ (_GLF_IDENTITY(uint(1u), 0u | (uint(1u)))))))), true), _GLF_struct_16(vec3(1.0)), mat4(1.0)), _GLF_struct_22(_GLF_struct_18(mat3x2(1.0)), _GLF_struct_19(1u, mat4x3(1.0), _GLF_IDENTITY(mat2(1.0), (false ? _GLF_FUZZED(outerProduct(vec2(231.891, 0.4), injectionSwitch)) : mat2(1.0))), mat3(1.0), bvec2(true)), _GLF_struct_20(mat4x3(1.0), uvec3(1u), mat3(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(170.559)), bool(false)))), bvec4(true), mat2x4(1.0), mat3x2(_GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), _GLF_IDENTITY(1.0, 0.0 + (1.0)), 1.0)))), _GLF_IDENTITY(mat4(1.0), (mat4(1.0)) - mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, (0.0) * 1.0), 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, (0.0) - 0.0), 0.0, 0.0, 0.0)), _GLF_struct_21(mat4x2(1.0))), _GLF_struct_28(mat2x4(1.0), _GLF_struct_23(uvec3(1u), 1.0, mat3x4(_GLF_IDENTITY(1.0, min(1.0, 1.0))), bvec4(true), mat3x4(1.0), mat4x3(1.0)), _GLF_struct_24(ivec4(1)), _GLF_struct_25(vec3(_GLF_IDENTITY(1.0, (1.0) / 1.0))), _GLF_struct_26(mat2x4(_GLF_IDENTITY(1.0, _GLF_IDENTITY(float(mat2(1.0, 0.0, 1.0, 1.0)), clamp(float(mat2(1.0, 0.0, 1.0, 1.0)), float(mat2(1.0, 0.0, 1.0, 1.0)), float(mat2(1.0, 0.0, 1.0, 1.0)))))), mat4x3(1.0), mat3x2(1.0)), _GLF_struct_27(mat3x2(1.0), mat2x3(1.0))));
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), ! (! (bool(false)))))), (injectionSwitch.x > injectionSwitch.y)), bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) || false)))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), (false) || false)))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 _GLF_struct_38 _GLF_struct_replacement_38 = _GLF_struct_38(vec4(1.0), uvec4(1u), _GLF_struct_32(_GLF_struct_30(_GLF_IDENTITY(ivec3(1), _GLF_IDENTITY((ivec3(1)) << ivec3(0, 0, 0), max((ivec3(1)) << ivec3(0, 0, 0), _GLF_IDENTITY((ivec3(1)) << ivec3(0, 0, 0), ~ (~ ((ivec3(1)) << ivec3(0, 0, 0))))))), mat4x3(1.0), ivec4(1), bvec3(true)), uvec4(_GLF_IDENTITY(1u, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(_GLF_IDENTITY(9374u, (9374u) | (0u << _GLF_IDENTITY(uint(4u), uint(4u))))) : 1u))), gl_SubgroupSize, _GLF_struct_31(_GLF_IDENTITY(ivec4(1), (ivec4(1)) | (_GLF_IDENTITY(ivec4(1), (true ? ivec4(1) : _GLF_FUZZED(ivec4(-9538, -66081, 84768, 14010)))))), ivec3(1)), vec4(1.0), mat4x3(1.0)), mat2x3(1.0), _GLF_struct_36(uvec2(1u), _GLF_struct_33(uvec3(1u), true, mat3x4(_GLF_IDENTITY(1.0, (1.0) - 0.0)), ivec3(1), ivec3(1)), mat4x2(1.0), mat2(1.0), ivec3(1), _GLF_struct_34(mat2x4(1.0), bvec2(true), 1u, bvec4(true)), _GLF_struct_35(uvec4(1u), mat3(1.0), ivec2(1), uvec3(1u), 1)), _GLF_struct_37(bvec2(true), mat2x3(1.0)));
 _GLF_struct_10 _GLF_struct_replacement_10 = _GLF_struct_10(ivec4(1), mat4x3(_GLF_IDENTITY(1.0, 0.0 + (1.0))), _GLF_struct_9(_GLF_struct_7(gl_SubgroupInvocationID, _GLF_IDENTITY(uvec3(1u), _GLF_IDENTITY((_GLF_IDENTITY(uvec3(1u), clamp(uvec3(1u), uvec3(1u), uvec3(1u)))) ^ _GLF_IDENTITY(uvec3(0u, 0u, 0u), ~ (~ (_GLF_IDENTITY(uvec3(0u, 0u, 0u), (_GLF_IDENTITY(uvec3(0u, 0u, 0u), min(uvec3(0u, 0u, 0u), uvec3(0u, 0u, 0u)))) | (uvec3(0u, 0u, 0u)))))), clamp((_GLF_IDENTITY(uvec3(1u), clamp(uvec3(1u), uvec3(1u), uvec3(1u)))) ^ uvec3(0u, 0u, 0u), _GLF_IDENTITY((_GLF_IDENTITY(uvec3(1u), clamp(uvec3(1u), uvec3(1u), uvec3(1u)))) ^ uvec3(0u, 0u, 0u), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(uvec3(1u), clamp(uvec3(1u), uvec3(1u), uvec3(1u)))) ^ uvec3(0u, 0u, 0u), min((_GLF_IDENTITY(uvec3(1u), clamp(uvec3(1u), uvec3(1u), uvec3(1u)))) ^ uvec3(0u, 0u, 0u), (_GLF_IDENTITY(uvec3(1u), clamp(uvec3(1u), uvec3(1u), uvec3(1u)))) ^ uvec3(0u, 0u, 0u))), uvec3(0u, 0u, 0u) ^ (_GLF_IDENTITY((_GLF_IDENTITY(uvec3(1u), clamp(uvec3(1u), uvec3(1u), uvec3(1u)))) ^ uvec3(0u, 0u, 0u), min((_GLF_IDENTITY(uvec3(1u), clamp(uvec3(1u), uvec3(1u), uvec3(1u)))) ^ uvec3(0u, 0u, 0u), (_GLF_IDENTITY(uvec3(_GLF_IDENTITY(1u, (1u) - (0u << _GLF_IDENTITY(uint(5u), uint(5u))))), clamp(uvec3(1u), uvec3(1u), uvec3(1u)))) ^ uvec3(0u, 0u, 0u)))))), max((_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(uvec3(1u), _GLF_IDENTITY(clamp(uvec3(1u), uvec3(1u), uvec3(1u)), clamp(clamp(uvec3(1u), uvec3(1u), uvec3(1u)), clamp(uvec3(1u), uvec3(1u), uvec3(1u)), _GLF_IDENTITY(clamp(uvec3(1u), uvec3(1u), uvec3(1u)), (uvec3(0u, 0u, 0u) ^ uvec3(0u, 0u, 0u)) + (clamp(uvec3(1u), uvec3(1u), uvec3(1u)))))))) ^ uvec3(0u, 0u, 0u), min((_GLF_IDENTITY(uvec3(1u), clamp(uvec3(1u), uvec3(1u), uvec3(1u)))) ^ uvec3(0u, 0u, 0u), (_GLF_IDENTITY(uvec3(1u), clamp(uvec3(1u), uvec3(1u), uvec3(1u)))) ^ uvec3(0u, 0u, 0u))), uvec3(0u, 0u, 0u) ^ (_GLF_IDENTITY((_GLF_IDENTITY(uvec3(1u), clamp(uvec3(1u), uvec3(1u), uvec3(1u)))) ^ uvec3(0u, 0u, 0u), min((_GLF_IDENTITY(uvec3(1u), clamp(uvec3(1u), uvec3(1u), uvec3(1u)))) ^ uvec3(0u, 0u, 0u), (_GLF_IDENTITY(uvec3(1u), clamp(uvec3(1u), uvec3(1u), uvec3(1u)))) ^ uvec3(0u, 0u, 0u)))))), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(uvec3(_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, min(1u, 1u))) | (1u))), clamp(uvec3(1u), uvec3(1u), uvec3(1u)))) ^ uvec3(0u, 0u, 0u), min((_GLF_IDENTITY(uvec3(1u), clamp(uvec3(1u), uvec3(1u), uvec3(1u)))) ^ uvec3(0u, 0u, 0u), (_GLF_IDENTITY(uvec3(1u), clamp(uvec3(1u), uvec3(1u), uvec3(1u)))) ^ uvec3(_GLF_IDENTITY(0u, (false ? _GLF_FUZZED(84730u) : 0u)), 0u, 0u))), uvec3(0u, 0u, 0u) ^ (_GLF_IDENTITY((_GLF_IDENTITY(uvec3(1u), clamp(uvec3(1u), uvec3(1u), uvec3(1u)))) ^ uvec3(_GLF_IDENTITY(0u, clamp(0u, 0u, _GLF_IDENTITY(0u, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(0u, clamp(0u, 0u, 0u))), clamp(~ (_GLF_IDENTITY(0u, clamp(0u, 0u, 0u))), ~ (_GLF_IDENTITY(0u, clamp(0u, 0u, 0u))), ~ (_GLF_IDENTITY(0u, clamp(0u, 0u, 0u))))))))), 0u, 0u), min((_GLF_IDENTITY(uvec3(1u), clamp(uvec3(1u), uvec3(1u), uvec3(1u)))) ^ uvec3(0u, 0u, 0u), (_GLF_IDENTITY(uvec3(1u), clamp(uvec3(1u), uvec3(1u), uvec3(1u)))) ^ uvec3(0u, 0u, 0u)))))), ((_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(uvec3(1u), (uvec3(1u)) ^ uvec3(0u, 0u, 0u)), clamp(uvec3(1u), uvec3(1u), uvec3(1u)))) ^ uvec3(0u, 0u, 0u), min((_GLF_IDENTITY(uvec3(1u), clamp(uvec3(1u), uvec3(1u), uvec3(1u)))) ^ uvec3(0u, 0u, 0u), (_GLF_IDENTITY(uvec3(1u), clamp(uvec3(1u), uvec3(1u), uvec3(1u)))) ^ uvec3(0u, 0u, 0u))), uvec3(0u, 0u, 0u) ^ (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(uvec3(1u), clamp(uvec3(1u), uvec3(1u), uvec3(1u)))) ^ uvec3(0u, 0u, 0u), min((_GLF_IDENTITY(uvec3(1u), clamp(uvec3(1u), uvec3(1u), uvec3(1u)))) ^ uvec3(0u, 0u, 0u), (_GLF_IDENTITY(uvec3(1u), clamp(uvec3(1u), uvec3(1u), uvec3(1u)))) ^ uvec3(0u, 0u, 0u))), (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(uvec3(1u), clamp(uvec3(1u), uvec3(1u), uvec3(1u)))) ^ uvec3(0u, 0u, 0u), min((_GLF_IDENTITY(uvec3(1u), clamp(uvec3(1u), uvec3(1u), uvec3(1u)))) ^ uvec3(0u, 0u, 0u), (_GLF_IDENTITY(uvec3(1u), clamp(uvec3(1u), uvec3(1u), uvec3(1u)))) ^ uvec3(0u, 0u, 0u))), (_GLF_IDENTITY((_GLF_IDENTITY(uvec3(1u), clamp(uvec3(1u), uvec3(1u), uvec3(1u)))) ^ uvec3(0u, 0u, 0u), min((_GLF_IDENTITY(uvec3(1u), clamp(uvec3(1u), uvec3(1u), uvec3(1u)))) ^ uvec3(0u, 0u, 0u), (_GLF_IDENTITY(uvec3(1u), clamp(uvec3(1u), uvec3(1u), uvec3(1u)))) ^ uvec3(0u, 0u, 0u)))) | uvec3(0u, 0u, 0u))) >> uvec3(0u, 0u, 0u)))))) >> uvec3(0u, 0u, 0u)))) >> uvec3(0u, 0u, 0u)), _GLF_IDENTITY((_GLF_IDENTITY(uvec3(1u), clamp(uvec3(1u), uvec3(1u), uvec3(1u)))) ^ uvec3(0u, 0u, 0u), uvec3(0u, 0u, 0u) + ((_GLF_IDENTITY(uvec3(1u), clamp(uvec3(1u), uvec3(1u), uvec3(1u)))) ^ uvec3(0u, 0u, 0u)))))), mat3(1.0), mat4x2(1.0), 1u, 1u), _GLF_struct_8(uvec2(1u), vec3(1.0))), uvec4(1u));
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(98.45)), vec2(_GLF_FUZZED((-1.7 + 33.29)), (injectionSwitch)[1]), bvec2(false, true))).x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, false)))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY((injectionSwitch.x), clamp((injectionSwitch.x), (injectionSwitch.x), (injectionSwitch.x))) + 0.0) > injectionSwitch.y))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 _GLF_struct_0 _GLF_struct_replacement_0 = _GLF_struct_0(gl_NumWorkGroups.x, true);
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), ((! (false))) && true)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! (false)))))), _GLF_FALSE(_GLF_IDENTITY(false, (false) || false), (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)))), _GLF_IDENTITY(bool(bvec2(injectionSwitch.x > injectionSwitch.y, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (bool(bvec2(injectionSwitch.x > injectionSwitch.y, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) && true)))), true, false)))), true && (! (_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! (false)))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! (false)))))), ! (! (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! (false)))))))))), (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! (false)))))), ! (! (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! (false)))))))))), true && (! (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! (false)))))), ! (! (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! (false))))))))))))) || false))), _GLF_FALSE(_GLF_IDENTITY(false, (false) || false), (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)))), bool(bvec2(injectionSwitch.x > injectionSwitch.y, _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y))))))))), true, false))))))))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y)))) || false))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint workgroup_size = _GLF_IDENTITY(gl_WorkGroupSize.x, (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) - (uvec3(0u, 0u, 0u) << _GLF_IDENTITY(uvec3(7u), uvec3(7u)))).x, (gl_WorkGroupSize.x) << _GLF_IDENTITY(0u, clamp(_GLF_IDENTITY(0u, clamp(0u, _GLF_IDENTITY(0u, (true ? 0u : _GLF_FUZZED(134419u))), 0u)), 0u, 0u)))) | (gl_WorkGroupSize.x));
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, (false) && true), false)))), ! (! (! (_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, (false) && true), false)))))))))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint workgroup_id = gl_WorkGroupID.x;
 if(_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, bool(bvec3(false, true, false)))))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, abs(abs(0.0)) + (_GLF_IDENTITY(injectionSwitch.x, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(898.034) : injectionSwitch.x)))) > injectionSwitch.y))) || false)))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
    barrier();
   barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bool(_GLF_DEAD(false))), false || (bool(bool(_GLF_DEAD(false)))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_DEAD(false), true, true)))))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint workgroup_base = workgroup_size * _GLF_IDENTITY(workgroup_id, 0u | (workgroup_id));
 if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(! (! (_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY((_GLF_DEAD(false)), false || (_GLF_IDENTITY((_GLF_DEAD(false)), ((_GLF_DEAD(false))) || false))) || false))), ! (! (! (! (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))))))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, (false) && true), false, false, false)))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(mat4(injectionSwitch, sqrt(_GLF_IDENTITY(_GLF_IDENTITY(0.0, float(float(_GLF_IDENTITY(0.0, max(0.0, _GLF_IDENTITY(0.0, 0.0 + (0.0))))))), (0.0) - 0.0)), 0.0, 0.0, 0.0, 1.0, 1.0, cos(0.0), _GLF_IDENTITY(1.0, min(1.0, 1.0)), 1.0, 0.0, cos(0.0), 1.0, length(0.0), 1.0))).x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(_GLF_IDENTITY(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(bool(bvec2(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false)), bool(bvec4(bool(bvec2(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false)), false, true, false))))))), ! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (injectionSwitch.x > injectionSwitch.y))))), _GLF_IDENTITY(true && (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (_GLF_IDENTITY(! (true && (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), ! (! (! (true && (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))))))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec3((injectionSwitch.x > injectionSwitch.y), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false), bvec3(bvec3(_GLF_IDENTITY(bvec3((injectionSwitch.x > injectionSwitch.y), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false), bvec3(bvec4(_GLF_IDENTITY(bvec3((injectionSwitch.x > injectionSwitch.y), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false), bvec3(bvec3(bvec3((injectionSwitch.x > injectionSwitch.y), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, true && (false)), false, _GLF_IDENTITY(false, ! (! (false))), true))))))), true)))))), bvec3(bvec3(bvec3((injectionSwitch.x > injectionSwitch.y), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0) < injectionSwitch.y)), false))))), false || (bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec3((injectionSwitch.x > injectionSwitch.y), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false), bvec3(bvec3(_GLF_IDENTITY(bvec3((injectionSwitch.x > injectionSwitch.y), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false), bvec3(bvec4(_GLF_IDENTITY(bvec3((injectionSwitch.x > injectionSwitch.y), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false), bvec3(bvec3(bvec3((injectionSwitch.x > injectionSwitch.y), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, true && (false)), false, _GLF_IDENTITY(false, ! (! (false))), true))))))), true)))))), bvec3(bvec3(bvec3((injectionSwitch.x > injectionSwitch.y), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0) < injectionSwitch.y)), false)))))))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 _GLF_struct_45 _GLF_struct_replacement_45 = _GLF_struct_45(_GLF_struct_44(_GLF_struct_39(1.0, ivec2(1), vec4(1.0), mat2x4(1.0), mat3x4(1.0), mat3(1.0)), _GLF_struct_40(_GLF_IDENTITY(uvec2(1u), (uvec2(1u)) | _GLF_IDENTITY((_GLF_IDENTITY(uvec2(1u), (uvec2(1u)) | (_GLF_IDENTITY(uvec2(1u), (false ? _GLF_FUZZED(uvec2(18250u, 66975u)) : uvec2(1u)))))), ((_GLF_IDENTITY(uvec2(1u), (uvec2(1u)) | (_GLF_IDENTITY(uvec2(1u), (false ? _GLF_FUZZED(uvec2(18250u, 66975u)) : uvec2(1u))))))) ^ uvec2(0u, 0u)))), _GLF_struct_41(mat4x2(_GLF_IDENTITY(1.0, _GLF_IDENTITY(_GLF_IDENTITY(float(_GLF_IDENTITY(mat3x4(_GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_IDENTITY(_GLF_FUZZED((3585.5232 / -97.98)), (_GLF_FUZZED((3585.5232 / -97.98))) - 0.0))), round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), 1.0, 1.0, log(1.0), 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0), mat4(1.0) * (mat3x4(_GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED((3585.5232 / -97.98)))), round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), 1.0, 1.0, _GLF_IDENTITY(log(1.0), (log(1.0)) - 0.0), 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0)))), mix(float(float(_GLF_IDENTITY(mat3x4(_GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED((3585.5232 / -97.98)))), round(length(normalize(vec4(1.0, 1.0, _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), 1.0)))), 1.0, 1.0, log(1.0), 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0), mat4(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(8304.4775)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) * (mat3x4(_GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED((3585.5232 / -97.98)))), round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), 1.0, 1.0, log(1.0), 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0))))), float(_GLF_FUZZED(-2.4)), bool(false))), max(_GLF_IDENTITY(float(_GLF_IDENTITY(mat3x4(_GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_IDENTITY(_GLF_FUZZED((3585.5232 / -97.98)), (_GLF_FUZZED((3585.5232 / -97.98))) - 0.0))), round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), 1.0, 1.0, log(1.0), 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0), mat4(1.0) * (mat3x4(_GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED((3585.5232 / -97.98)))), round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), 1.0, 1.0, _GLF_IDENTITY(log(1.0), (log(1.0)) - 0.0), 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0)))), mix(float(float(_GLF_IDENTITY(mat3x4(_GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED((3585.5232 / -97.98)))), round(length(normalize(vec4(1.0, 1.0, _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), 1.0)))), 1.0, 1.0, log(1.0), 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0), mat4(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(8304.4775)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) * (mat3x4(_GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED((3585.5232 / -97.98)))), round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), 1.0, 1.0, log(1.0), 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0))))), float(_GLF_FUZZED(-2.4)), bool(false))), _GLF_IDENTITY(_GLF_IDENTITY(float(_GLF_IDENTITY(mat3x4(_GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_IDENTITY(_GLF_FUZZED((3585.5232 / -97.98)), (_GLF_FUZZED((3585.5232 / -97.98))) - 0.0))), round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), 1.0, 1.0, log(1.0), 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0), mat4(1.0) * (mat3x4(_GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED((3585.5232 / -97.98)))), round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), 1.0, 1.0, _GLF_IDENTITY(log(1.0), (log(1.0)) - 0.0), 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0)))), mix(float(float(_GLF_IDENTITY(mat3x4(_GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED((3585.5232 / -97.98)))), round(length(normalize(vec4(1.0, 1.0, _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), 1.0)))), 1.0, 1.0, log(1.0), 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0), mat4(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(8304.4775)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) * (mat3x4(_GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED((3585.5232 / -97.98)))), round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), 1.0, 1.0, log(1.0), 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0))))), float(_GLF_FUZZED(-2.4)), bool(false))), float(vec2(_GLF_IDENTITY(float(_GLF_IDENTITY(mat3x4(_GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_IDENTITY(_GLF_FUZZED((3585.5232 / -97.98)), (_GLF_FUZZED((3585.5232 / -97.98))) - 0.0))), round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), 1.0, 1.0, log(1.0), 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0), mat4(1.0) * (mat3x4(_GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED((3585.5232 / -97.98)))), round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), 1.0, 1.0, _GLF_IDENTITY(log(1.0), (log(1.0)) - 0.0), 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0)))), mix(float(float(_GLF_IDENTITY(mat3x4(_GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED((3585.5232 / -97.98)))), round(length(normalize(vec4(1.0, 1.0, _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), 1.0)))), 1.0, 1.0, log(1.0), 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0), mat4(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(8304.4775)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) * (mat3x4(_GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED((3585.5232 / -97.98)))), round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), 1.0, 1.0, log(1.0), 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0))))), float(_GLF_FUZZED(-2.4)), bool(false))), 0.0))))))), 1.0, vec3(1.0), mat3x2(_GLF_IDENTITY(1.0, float(_GLF_IDENTITY(vec2(1.0, 0.0), min(vec2(1.0, 0.0), vec2(1.0, 0.0)))))), vec4(_GLF_IDENTITY(1.0, clamp(1.0, _GLF_IDENTITY(1.0, (1.0) / 1.0), 1.0))), mat3(1.0), mat3x4(_GLF_IDENTITY(1.0, min(1.0, 1.0)))), uvec4(1u), _GLF_struct_42(bvec4(true), _GLF_IDENTITY(workgroup_base + _GLF_struct_replacement_29.subgroup_id * _GLF_struct_replacement_38._f2.subgroup_size, clamp(workgroup_base + _GLF_IDENTITY(_GLF_IDENTITY(_GLF_struct_replacement_29.subgroup_id, min(_GLF_struct_replacement_29.subgroup_id, _GLF_struct_replacement_29.subgroup_id)), (_GLF_IDENTITY(_GLF_struct_replacement_29.subgroup_id, min(_GLF_struct_replacement_29.subgroup_id, _GLF_struct_replacement_29.subgroup_id))) | (_GLF_IDENTITY(_GLF_struct_replacement_29.subgroup_id, min(_GLF_struct_replacement_29.subgroup_id, _GLF_struct_replacement_29.subgroup_id)))) * _GLF_struct_replacement_38._f2.subgroup_size, workgroup_base + _GLF_struct_replacement_29.subgroup_id * _GLF_struct_replacement_38._f2.subgroup_size, workgroup_base + _GLF_struct_replacement_29.subgroup_id * _GLF_struct_replacement_38._f2.subgroup_size)) + _GLF_struct_replacement_10._f2._f0.subgroup_local_id, 1.0, mat3x2(1.0)), mat2x3(1.0), _GLF_struct_43(_GLF_IDENTITY(true, (_GLF_IDENTITY(true, ! (! (true)))) && true))), mat2x4(1.0));
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 uint next_virtual_gid = workgroup_base + _GLF_struct_replacement_29.subgroup_id * _GLF_IDENTITY(_GLF_struct_replacement_38._f2.subgroup_size, min(_GLF_struct_replacement_38._f2.subgroup_size, _GLF_struct_replacement_38._f2.subgroup_size)) + (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_struct_replacement_10._f2._f0.subgroup_local_id + 1, (_GLF_struct_replacement_10._f2._f0.subgroup_local_id + 1) - (0u ^ 0u)), _GLF_IDENTITY(clamp(_GLF_IDENTITY(_GLF_struct_replacement_10._f2._f0.subgroup_local_id, (_GLF_struct_replacement_10._f2._f0.subgroup_local_id) | (_GLF_struct_replacement_10._f2._f0.subgroup_local_id)) + 1, _GLF_IDENTITY(_GLF_struct_replacement_10._f2._f0.subgroup_local_id + 1, (_GLF_struct_replacement_10._f2._f0.subgroup_local_id + 1) | 0u), _GLF_struct_replacement_10._f2._f0.subgroup_local_id + 1), (clamp(_GLF_IDENTITY(_GLF_struct_replacement_10._f2._f0.subgroup_local_id, (_GLF_struct_replacement_10._f2._f0.subgroup_local_id) | (_GLF_struct_replacement_10._f2._f0.subgroup_local_id)) + 1, _GLF_IDENTITY(_GLF_struct_replacement_10._f2._f0.subgroup_local_id + 1, (_GLF_struct_replacement_10._f2._f0.subgroup_local_id + 1) | 0u), _GLF_struct_replacement_10._f2._f0.subgroup_local_id + 1)) / 1u))), _GLF_IDENTITY((_GLF_IDENTITY((_GLF_struct_replacement_10._f2._f0.subgroup_local_id + 1), ((_GLF_struct_replacement_10._f2._f0.subgroup_local_id + 1)) * 1u)) | _GLF_IDENTITY(0u, _GLF_IDENTITY((_GLF_IDENTITY(0u | 0u, (0u | 0u) >> (0u | 0u))), (_GLF_IDENTITY((_GLF_IDENTITY(0u | 0u, (0u | 0u) >> (0u | 0u))), uint(uvec2((_GLF_IDENTITY(0u | 0u, (0u | 0u) >> (0u | 0u))), 0u)))) / 1u) | (0u)), (_GLF_IDENTITY((_GLF_IDENTITY((_GLF_struct_replacement_10._f2._f0.subgroup_local_id + 1), ((_GLF_struct_replacement_10._f2._f0.subgroup_local_id + 1)) * 1u)) | _GLF_IDENTITY(0u, (0u | 0u) | (0u)), ((_GLF_IDENTITY((_GLF_struct_replacement_10._f2._f0.subgroup_local_id + 1), ((_GLF_struct_replacement_10._f2._f0.subgroup_local_id + 1)) * 1u)) | _GLF_IDENTITY(0u, (0u | 0u) | (0u))) | 0u)) | ((_GLF_IDENTITY((_GLF_IDENTITY(_GLF_struct_replacement_10._f2._f0.subgroup_local_id, (_GLF_struct_replacement_10._f2._f0.subgroup_local_id) >> (0u | 0u)) + 1), ((_GLF_struct_replacement_10._f2._f0.subgroup_local_id + 1)) * 1u)) | _GLF_IDENTITY(0u, (0u | 0u) | _GLF_IDENTITY((0u), (_GLF_IDENTITY((0u), min((0u), (0u)))) - 0u))))) % _GLF_struct_replacement_38._f2.subgroup_size);
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
  barrier();
 _GLF_struct_6 _GLF_struct_replacement_6 = _GLF_struct_6(atomicLoad(buf[_GLF_struct_replacement_45._f0._f4.virtual_gid], 4, 64, 0), vec2(1.0), _GLF_struct_3(_GLF_struct_1(mat2x4(1.0)), bvec3(true), mat2x3(1.0), _GLF_struct_2(mat4x3(_GLF_IDENTITY(1.0, clamp(1.0, _GLF_IDENTITY(1.0, clamp(1.0, 1.0, _GLF_IDENTITY(1.0, max(1.0, 1.0)))), 1.0))), vec3(1.0), _GLF_IDENTITY(_GLF_IDENTITY(1u, clamp(_GLF_IDENTITY(1u, (1u) | 0u), 1u, 1u)), (1u) ^ 0u), _GLF_IDENTITY(1u, ~ (~ (1u)))), _GLF_IDENTITY(bvec3(true), bvec3(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(true), bvec3(bvec3(bvec3(true)))), _GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY(bvec3(true), bvec3(bvec3(bvec3(true)))))), bvec3(bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec3(true), bvec3(bvec3(bvec3(true))))))))))))), mat2x3(_GLF_IDENTITY(_GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(-4312.6216)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), _GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, float(mat4x3(1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, (1.0) - 0.0), 1.0))) / 1.0), _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)))), 1.0)), 1.0, 0.0))), 1.0, 1.0)), 1.0)), max(1.0, 1.0))), mat2x3(1.0)), mat3(1.0), mat3x2(1.0), _GLF_struct_5(_GLF_struct_4(mat2x4(1.0), bvec2(true), uvec3(_GLF_IDENTITY(1u, clamp(_GLF_IDENTITY(1u, _GLF_IDENTITY((1u) ^ 0u, clamp((1u) ^ 0u, (1u) ^ 0u, _GLF_IDENTITY((1u) ^ 0u, min(_GLF_IDENTITY((1u) ^ 0u, max((1u) ^ 0u, (1u) ^ 0u)), (1u) ^ 0u))))), 1u, _GLF_IDENTITY(1u, max(1u, 1u))))), mat2x3(1.0), mat4x3(_GLF_IDENTITY(1.0, _GLF_IDENTITY(min(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_IDENTITY(_GLF_FUZZED(-85.43), float(mat4(_GLF_FUZZED(-85.43), 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, sqrt(1.0), 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, length(vec4(0.0, 0.0, 0.0, 0.0)))))), bool(false))), 1.0), clamp(min(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(-85.43)), bool(false))), 1.0), _GLF_IDENTITY(min(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_IDENTITY(_GLF_FUZZED(-85.43), (_GLF_FUZZED(-85.43)) / 1.0)), bool(false))), 1.0), max(min(_GLF_IDENTITY(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(-85.43)), bool(false))), max(_GLF_IDENTITY(_GLF_IDENTITY(1.0, mix(float(_GLF_IDENTITY(1.0, (1.0) - 0.0)), float(_GLF_FUZZED(288.941)), bool(false))), mix(float(1.0), float(_GLF_FUZZED(-85.43)), bool(false))), _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(-85.43)), bool(false))))), 1.0), min(_GLF_IDENTITY(1.0, mix(_GLF_IDENTITY(float(1.0), clamp(float(1.0), _GLF_IDENTITY(float(1.0), max(float(1.0), float(1.0))), float(1.0))), float(_GLF_FUZZED(-85.43)), bool(false))), 1.0))), _GLF_IDENTITY(min(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(_GLF_IDENTITY(-85.43, 0.0 + (_GLF_IDENTITY(_GLF_IDENTITY(-85.43, min(-85.43, -85.43)), (_GLF_IDENTITY(_GLF_IDENTITY(-85.43, min(-85.43, -85.43)), (_GLF_IDENTITY(_GLF_IDENTITY(-85.43, min(-85.43, -85.43)), (_GLF_IDENTITY(-85.43, min(-85.43, -85.43))) * 1.0)) + tan(0.0))) + 0.0))))), bool(false))), 1.0), mix(float(min(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(-85.43)), bool(false))), 1.0)), float(_GLF_FUZZED(2141.5303)), bool(false))))))), mat2(1.0), uvec4(1u))));
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), bool(_GLF_IDENTITY(bvec3(false, false, false), bvec3(bvec3(bvec3(false, false, false))))))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)))).x, min(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)))).x, _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)))).x)) > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
      barrier();
    }
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, false, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec3(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(-501.672, 8.2)) : injectionSwitch))) / vec2(1.0, 1.0)))).y, true, true)))))), bvec3(bvec4(bvec3(false, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false)))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 atomicStore(buf[next_virtual_gid], uint(_GLF_struct_replacement_6.read_1 + _GLF_IDENTITY(1, 0 ^ (1))), 4, _GLF_IDENTITY(64, _GLF_IDENTITY(_GLF_IDENTITY((64), ((64)) | 0), _GLF_IDENTITY(int(ivec2(_GLF_IDENTITY((64), ((64)) | 0), 1)), max(_GLF_IDENTITY(int(ivec2(_GLF_IDENTITY((64), ((64)) | 0), 1)), (true ? int(ivec2(_GLF_IDENTITY((64), ((64)) | 0), 1)) : _GLF_FUZZED(_GLF_IDENTITY(-823, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(-823, clamp(-823, -823, -823))), min(~ (_GLF_IDENTITY(-823, clamp(-823, -823, -823))), ~ (_GLF_IDENTITY(-823, clamp(-823, -823, -823)))))))))), int(ivec2(_GLF_IDENTITY((64), ((64)) | 0), 1))))) - 0), 4);
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, 1.0 * (injectionSwitch.x)), injectionSwitch.x)) > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, true, true), bvec3(bvec3(bvec3(false, true, true))))))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), ((injectionSwitch) * mat2(1.0)) * vec2(1.0, 1.0))))).x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(_GLF_IDENTITY(float(_GLF_IDENTITY(mat3(_GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(-16.17) : injectionSwitch.y)), 0.0, 1.0, 1.0, determinant(mat2(sin(0.0), 0.0, 0.0, 0.0)), 1.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), _GLF_IDENTITY(vec2(1.0, 0.0), (_GLF_IDENTITY(vec2(1.0, 0.0), min(vec2(1.0, 0.0), vec2(1.0, 0.0)))) / vec2(1.0, 1.0))), dot(vec2(0.0, 1.0), vec2(1.0, 0.0))), 1.0, 0.0), transpose(transpose(_GLF_IDENTITY(mat3(_GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(-16.17) : injectionSwitch.y)), _GLF_IDENTITY(0.0, mix(float(_GLF_IDENTITY(0.0, (0.0) - 0.0)), float(_GLF_FUZZED((- vec3(-85.30, 249.221, -9549.8624).z))), bool(_GLF_IDENTITY(false, ! (! (false)))))), 1.0, 1.0, determinant(mat2(sin(_GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, float(mat2x4(0.0, abs(1.0), 0.0, cos(0.0), 1.0, 1.0, 0.0, 1.0))), 0.0))), 0.0, 0.0, 0.0)), 1.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(1.0, 0.0)), dot(vec2(0.0, 1.0), vec2(1.0, 0.0))), 1.0, _GLF_IDENTITY(0.0, clamp(0.0, _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(length(injectionSwitch)))), 0.0))), transpose(_GLF_IDENTITY(transpose(mat3(_GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(-16.17) : injectionSwitch.y)), _GLF_IDENTITY(0.0, mix(float(_GLF_IDENTITY(0.0, (0.0) - 0.0)), float(_GLF_FUZZED((- vec3(-85.30, 249.221, -9549.8624).z))), bool(_GLF_IDENTITY(false, ! (! (false)))))), 1.0, 1.0, determinant(mat2(sin(_GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, float(mat2x4(0.0, abs(1.0), 0.0, cos(0.0), 1.0, 1.0, 0.0, 1.0))), 0.0))), 0.0, 0.0, 0.0)), 1.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(1.0, 0.0)), dot(vec2(0.0, 1.0), vec2(1.0, 0.0))), 1.0, _GLF_IDENTITY(0.0, clamp(0.0, _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(length(injectionSwitch)))), 0.0)))), (transpose(mat3(_GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(-16.17) : injectionSwitch.y)), _GLF_IDENTITY(0.0, mix(float(_GLF_IDENTITY(0.0, (0.0) - 0.0)), float(_GLF_FUZZED((- vec3(-85.30, 249.221, -9549.8624).z))), bool(_GLF_IDENTITY(false, ! (! (false)))))), 1.0, 1.0, determinant(mat2(sin(_GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, float(mat2x4(0.0, abs(1.0), 0.0, cos(0.0), 1.0, 1.0, 0.0, 1.0))), 0.0))), 0.0, 0.0, 0.0)), 1.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(1.0, 0.0)), dot(vec2(0.0, 1.0), vec2(1.0, 0.0))), 1.0, _GLF_IDENTITY(0.0, clamp(0.0, _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(length(injectionSwitch)))), 0.0))))) / mat3(1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0)))))))), min(float(_GLF_IDENTITY(mat3(_GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(-16.17) : injectionSwitch.y)), 0.0, 1.0, 1.0, determinant(mat2(sin(0.0), 0.0, 0.0, 0.0)), 1.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), _GLF_IDENTITY(vec2(1.0, 0.0), (_GLF_IDENTITY(vec2(1.0, 0.0), min(vec2(1.0, 0.0), vec2(1.0, 0.0)))) / vec2(1.0, 1.0))), dot(vec2(0.0, 1.0), vec2(1.0, 0.0))), 1.0, 0.0), transpose(transpose(_GLF_IDENTITY(mat3(_GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(-16.17) : injectionSwitch.y)), _GLF_IDENTITY(0.0, mix(float(_GLF_IDENTITY(0.0, (0.0) - 0.0)), float(_GLF_FUZZED((- vec3(-85.30, 249.221, -9549.8624).z))), bool(_GLF_IDENTITY(false, ! (! (false)))))), 1.0, 1.0, determinant(mat2(sin(_GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, float(mat2x4(0.0, abs(1.0), 0.0, cos(0.0), 1.0, 1.0, 0.0, 1.0))), 0.0))), 0.0, 0.0, 0.0)), 1.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(1.0, 0.0)), dot(vec2(0.0, 1.0), vec2(1.0, 0.0))), 1.0, _GLF_IDENTITY(0.0, clamp(0.0, _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(length(injectionSwitch)))), 0.0))), transpose(_GLF_IDENTITY(transpose(mat3(_GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(-16.17) : injectionSwitch.y)), _GLF_IDENTITY(0.0, mix(float(_GLF_IDENTITY(0.0, (0.0) - 0.0)), float(_GLF_FUZZED((- vec3(-85.30, 249.221, -9549.8624).z))), bool(_GLF_IDENTITY(false, ! (! (false)))))), 1.0, 1.0, determinant(mat2(sin(_GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, float(mat2x4(0.0, abs(1.0), 0.0, cos(0.0), 1.0, 1.0, 0.0, 1.0))), 0.0))), 0.0, 0.0, 0.0)), 1.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(1.0, 0.0)), dot(vec2(0.0, 1.0), vec2(1.0, 0.0))), 1.0, _GLF_IDENTITY(0.0, clamp(0.0, _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(length(injectionSwitch)))), 0.0)))), (transpose(mat3(_GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(-16.17) : injectionSwitch.y)), _GLF_IDENTITY(0.0, mix(float(_GLF_IDENTITY(0.0, (0.0) - 0.0)), float(_GLF_FUZZED((- vec3(-85.30, 249.221, -9549.8624).z))), bool(_GLF_IDENTITY(false, ! (! (false)))))), 1.0, 1.0, determinant(mat2(sin(_GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, float(mat2x4(0.0, abs(1.0), 0.0, cos(0.0), 1.0, 1.0, 0.0, 1.0))), 0.0))), 0.0, 0.0, 0.0)), 1.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(1.0, 0.0)), dot(vec2(0.0, 1.0), vec2(1.0, 0.0))), 1.0, _GLF_IDENTITY(0.0, clamp(0.0, _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(length(injectionSwitch)))), 0.0))))) / mat3(1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0)))))))), float(_GLF_IDENTITY(mat3(_GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(-16.17) : injectionSwitch.y)), 0.0, 1.0, 1.0, determinant(mat2(sin(0.0), 0.0, 0.0, 0.0)), 1.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), _GLF_IDENTITY(vec2(1.0, 0.0), (_GLF_IDENTITY(vec2(1.0, 0.0), min(vec2(1.0, 0.0), vec2(1.0, 0.0)))) / vec2(1.0, 1.0))), dot(vec2(0.0, 1.0), vec2(1.0, 0.0))), 1.0, 0.0), transpose(transpose(_GLF_IDENTITY(mat3(_GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(-16.17) : injectionSwitch.y)), _GLF_IDENTITY(0.0, mix(float(_GLF_IDENTITY(0.0, (0.0) - 0.0)), float(_GLF_FUZZED((- vec3(-85.30, 249.221, -9549.8624).z))), bool(_GLF_IDENTITY(false, ! (! (false)))))), 1.0, 1.0, determinant(mat2(sin(_GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, float(mat2x4(0.0, abs(1.0), 0.0, cos(0.0), 1.0, 1.0, 0.0, 1.0))), 0.0))), 0.0, 0.0, 0.0)), 1.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(1.0, 0.0)), dot(vec2(0.0, 1.0), vec2(1.0, 0.0))), 1.0, _GLF_IDENTITY(0.0, clamp(0.0, _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(length(injectionSwitch)))), 0.0))), transpose(_GLF_IDENTITY(transpose(mat3(_GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(-16.17) : injectionSwitch.y)), _GLF_IDENTITY(0.0, mix(float(_GLF_IDENTITY(0.0, (0.0) - 0.0)), float(_GLF_FUZZED((- vec3(-85.30, 249.221, -9549.8624).z))), bool(_GLF_IDENTITY(false, ! (! (false)))))), 1.0, 1.0, determinant(mat2(sin(_GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, float(mat2x4(0.0, abs(1.0), 0.0, cos(0.0), 1.0, 1.0, 0.0, 1.0))), 0.0))), 0.0, 0.0, 0.0)), 1.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(1.0, 0.0)), dot(vec2(0.0, 1.0), vec2(1.0, 0.0))), 1.0, _GLF_IDENTITY(0.0, clamp(0.0, _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(length(injectionSwitch)))), 0.0)))), (transpose(mat3(_GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(-16.17) : injectionSwitch.y)), _GLF_IDENTITY(0.0, mix(float(_GLF_IDENTITY(0.0, (0.0) - 0.0)), float(_GLF_FUZZED((- vec3(-85.30, 249.221, -9549.8624).z))), bool(_GLF_IDENTITY(false, ! (! (false)))))), 1.0, 1.0, determinant(mat2(sin(_GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, float(mat2x4(0.0, abs(1.0), 0.0, cos(0.0), 1.0, 1.0, 0.0, 1.0))), 0.0))), 0.0, 0.0, 0.0)), 1.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(1.0, 0.0)), dot(vec2(0.0, 1.0), vec2(1.0, 0.0))), 1.0, _GLF_IDENTITY(0.0, clamp(0.0, _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(length(injectionSwitch)))), 0.0))))) / mat3(1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0)))))))))), min(float(_GLF_IDENTITY(mat3(_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY((false ? _GLF_FUZZED(-16.17) : injectionSwitch.y), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? (false ? _GLF_FUZZED(-16.17) : injectionSwitch.y) : _GLF_FUZZED(-45.39)))), 0.0, 1.0, _GLF_IDENTITY(1.0, mix(float(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(3477.3389)), bool(false)))), float(_GLF_FUZZED(-61.96)), bool(false))), determinant(mat2(sin(0.0), 0.0, 0.0, 0.0)), 1.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(1.0, 0.0)), dot(vec2(0.0, 1.0), vec2(1.0, 0.0))), 1.0, 0.0), transpose(transpose(mat3(_GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(-16.17) : injectionSwitch.y)), 0.0, 1.0, 1.0, determinant(mat2(sin(0.0), 0.0, 0.0, 0.0)), 1.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(1.0, 0.0)), dot(vec2(0.0, 1.0), vec2(1.0, 0.0))), 1.0, 0.0))))), _GLF_IDENTITY(float(_GLF_IDENTITY(mat3(_GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(-16.17) : _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)))).y)), 0.0, 1.0, 1.0, determinant(mat2(sin(0.0), 0.0, 0.0, _GLF_IDENTITY(0.0, min(0.0, _GLF_IDENTITY(0.0, float(vec2(0.0, 1.0))))))), 1.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(1.0, 0.0)), dot(vec2(0.0, 1.0), vec2(1.0, 0.0))), 1.0, 0.0), transpose(transpose(mat3(_GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(-16.17) : injectionSwitch.y)), 0.0, _GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0))) + 0.0), 1.0, determinant(mat2(sin(0.0), 0.0, 0.0, 0.0)), 1.0, _GLF_IDENTITY(dot(vec2(_GLF_IDENTITY(0.0, float(_GLF_IDENTITY(mat4x2(_GLF_IDENTITY(0.0, (0.0) * exp(0.0)), 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0), (mat4x2(_GLF_IDENTITY(0.0, (0.0) * exp(0.0)), 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0)) - mat4x2(0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, _GLF_IDENTITY(float(float(_GLF_IDENTITY(0.0, (0.0) / 1.0))), max(_GLF_IDENTITY(float(float(_GLF_IDENTITY(0.0, (0.0) / 1.0))), clamp(float(float(_GLF_IDENTITY(0.0, (0.0) / 1.0))), float(float(_GLF_IDENTITY(0.0, (0.0) / 1.0))), float(float(_GLF_IDENTITY(0.0, (0.0) / 1.0))))), float(float(_GLF_IDENTITY(0.0, (0.0) / 1.0)))))), 0.0, 0.0, 0.0, 0.0)))), 1.0), vec2(1.0, 0.0)), dot(vec2(0.0, 1.0), vec2(1.0, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-64.17)), float(0.0), bool(true)))))), 1.0, 0.0))))), mix(float(float(_GLF_IDENTITY(mat3(_GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(-16.17) : injectionSwitch.y)), 0.0, 1.0, 1.0, determinant(mat2(sin(0.0), 0.0, 0.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)))), 1.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(1.0, 0.0)), dot(vec2(0.0, 1.0), vec2(1.0, 0.0))), 1.0, 0.0), transpose(transpose(mat3(_GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_IDENTITY(_GLF_FUZZED(-16.17), min(_GLF_FUZZED(-16.17), _GLF_FUZZED(-16.17))) : _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(65.00), _GLF_FUZZED((true ? -7.6 : -1386.9354))), bvec2(false, false))).y)), 0.0, 1.0, 1.0, determinant(mat2(sin(0.0), 0.0, 0.0, 0.0)), 1.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(1.0, 0.0)), dot(vec2(0.0, 1.0), vec2(1.0, 0.0))), 1.0, 0.0)))))), float(_GLF_FUZZED(-14.27)), bool(_GLF_IDENTITY(false, (false) || false)))))))))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).y))))
    barrier();
   barrier();
  }
 uint read_2 = atomicLoad(buf[_GLF_struct_replacement_45._f0._f4.virtual_gid], 4, 64, 0);
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! (false))))))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, false || (false)), (injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(mat4x2(injectionSwitch.x, 1.0, _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), _GLF_IDENTITY(dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(0.0, 1.0, 0.0, 0.0)), _GLF_IDENTITY(dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(0.0, 1.0, 0.0, 0.0)), (dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(0.0, 1.0, 0.0, 0.0))) * 1.0)), 1.0, 0.0, 0.0, 1.0)), (true ? float(mat4x2(injectionSwitch.x, 1.0, _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), _GLF_IDENTITY(dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(0.0, 1.0, 0.0, 0.0)), _GLF_IDENTITY(dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(0.0, 1.0, 0.0, 0.0)), (dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(0.0, 1.0, 0.0, 0.0))) * 1.0)), 1.0, 0.0, 0.0, 1.0)) : _GLF_FUZZED(-3.8)))) > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y)))), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) || false)), _GLF_IDENTITY(false, false || (false)) || (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, false || (false)), (injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y)))), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) || false)), bool(bvec4(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, false || (false)), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))) + 0.0))), (_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y)))), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) || false)), false, false, false))), (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, false || (false)), (injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y)))), ! _GLF_IDENTITY((! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y)))))), true && ((! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))) || false)), bool(bvec4(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(false || _GLF_IDENTITY((false), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY((false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || ((false))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)), false || (bool(bvec4(_GLF_IDENTITY((false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || ((false))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))))), bool(bvec4(_GLF_IDENTITY(false || (false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(false || (false), true && (false || (false))))), _GLF_IDENTITY(false, ! (! (false))), false, true)))), (injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y)))), ! _GLF_IDENTITY((! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (! ((! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))) || false)), false, false, false)))) || false)))), false || (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))) || false))) && (_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, false || (false)), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x)) > injectionSwitch.y)))), (_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)), _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)))).y, false || (injectionSwitch.x > injectionSwitch.y)))), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) || false)), _GLF_IDENTITY(false, false || (false)) || (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), ! (! (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), bool(bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))) && (_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(false || (false), (_GLF_IDENTITY(false, (false) || false) || (false)) && _GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, bool(bvec3(true, false, true))))))), (injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y)))), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) || false)), bool(bvec4(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, false || (false)), (injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y)))), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) || false)), false, false, false))), (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, false || _GLF_IDENTITY((false), ! (! (_GLF_IDENTITY((false), true && ((false))))))), (injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)))).y, false || (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y)))), ! _GLF_IDENTITY((! _GLF_IDENTITY((_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)), injectionSwitch)).x > injectionSwitch.y))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || ((_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)), injectionSwitch)).x > injectionSwitch.y)))))), _GLF_IDENTITY(true && ((! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), ! (! (true && ((! (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))))))))))))) || false)), bool(bvec4(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(false || (false), bool(bvec4(_GLF_IDENTITY(false || (false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false || (false))), _GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, true && (false)), true, false), _GLF_IDENTITY(bvec3(bvec3(bvec3(_GLF_IDENTITY(false, true && (false)), true, false))), bvec3(bvec4(bvec3(bvec3(bvec3(_GLF_IDENTITY(false, true && (false)), true, false))), true)))))), false, true)))), (injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)))))), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) || false)), false, false, false)))) || false))))))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! _GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, (false) || false)))), ! (! (_GLF_DEAD(false))))), bool(bool(! (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false))))))))), bool(bool(_GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, (false) || false)))), ! (! (_GLF_DEAD(false))))), bool(bool(! (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false))))))))), bool(bool((_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, (false) || false)))), ! (! (_GLF_DEAD(false))))), bool(bool(! (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))))))))))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
      barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false)))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec3((injectionSwitch.x > injectionSwitch.y), false, true))))))))
  barrier();
 if(_GLF_IDENTITY(_GLF_struct_replacement_10._f2._f0.subgroup_local_id + 1, min(_GLF_struct_replacement_10._f2._f0.subgroup_local_id + _GLF_IDENTITY(1, (true ? _GLF_IDENTITY(1, max(1, _GLF_IDENTITY(1, (1) * 1))) : _GLF_FUZZED(-75262))), _GLF_IDENTITY(_GLF_struct_replacement_10._f2._f0.subgroup_local_id + _GLF_IDENTITY(1, clamp(_GLF_IDENTITY(1, int(ivec2(1, 1))), 1, _GLF_IDENTITY(1, (1) * 1))), 0u + (_GLF_IDENTITY(_GLF_struct_replacement_10._f2._f0.subgroup_local_id + _GLF_IDENTITY(1, clamp(_GLF_IDENTITY(1, int(ivec2(1, 1))), 1, _GLF_IDENTITY(1, (1) * 1))), (_GLF_struct_replacement_10._f2._f0.subgroup_local_id + _GLF_IDENTITY(1, clamp(_GLF_IDENTITY(1, int(ivec2(1, 1))), 1, _GLF_IDENTITY(1, (1) * 1)))) | (_GLF_struct_replacement_10._f2._f0.subgroup_local_id + _GLF_IDENTITY(1, clamp(_GLF_IDENTITY(1, int(ivec2(1, 1))), 1, _GLF_IDENTITY(1, (1) * 1))))))))) < _GLF_struct_replacement_38._f2.subgroup_size)
  {
   int i = _GLF_IDENTITY(0, (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), ! (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), (_GLF_IDENTITY(false, ! (! (false)))) && _GLF_TRUE(_GLF_IDENTITY(true, true && (true)), (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, (injectionSwitch.x < injectionSwitch.y) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(false, ! _GLF_IDENTITY((_GLF_IDENTITY(! (false), bool(bvec4(! _GLF_IDENTITY((_GLF_IDENTITY(false, (false) && true)), ((_GLF_IDENTITY(false, (false) && true))) || false), true, false, true)))), false || (_GLF_IDENTITY((_GLF_IDENTITY(! (false), bool(bvec4(_GLF_IDENTITY(! (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) || false)))) && true)), bool(bvec3(! (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false))) && true)), false, true))), true, false, true)))), ! (! ((_GLF_IDENTITY(! (false), bool(bvec4(! (_GLF_IDENTITY(false, (false) && true)), _GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(true, bool(_GLF_IDENTITY(bool(true), true && (bool(true))))), (true) || false)), (! (_GLF_IDENTITY(_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, bool(bvec2(true, true)))))), (true) || false))) || false))), false, true)))))))))), (_GLF_IDENTITY(false, ! (! (false)))) || false)), false || ((_GLF_IDENTITY(_GLF_IDENTITY(false, ! _GLF_IDENTITY((_GLF_IDENTITY(! (false), bool(bvec4(! _GLF_IDENTITY((_GLF_IDENTITY(false, (false) && true)), ((_GLF_IDENTITY(false, (false) && true))) || false), true, false, true)))), false || (_GLF_IDENTITY((_GLF_IDENTITY(! (false), bool(bvec4(_GLF_IDENTITY(! (_GLF_IDENTITY(false, (false) && true)), bool(bvec3(! (_GLF_IDENTITY(false, (false) && true)), false, true))), true, false, true)))), ! (! ((_GLF_IDENTITY(! (false), bool(bvec4(! (_GLF_IDENTITY(false, (false) && true)), _GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(true, (true) || false)), _GLF_IDENTITY((! (_GLF_IDENTITY(true, (true) || false))) || false, ! (_GLF_IDENTITY(! ((! (_GLF_IDENTITY(true, (true) || false))) || false), bool(bvec4(! ((! (_GLF_IDENTITY(true, (true) || false))) || false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, false)))))))), false, true)))))))))), (_GLF_IDENTITY(false, ! (! (false)))) || false)))) || false)), _GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, true && (true)))))) && (! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), false || (_GLF_IDENTITY(false, ! (! (false))))), (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), (_GLF_IDENTITY(false, ! (! (false)))) || false)) || false)), false || ((_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), (_GLF_IDENTITY(_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), bool(bvec2((! (false)), true)))), (_GLF_IDENTITY(false, ! (! (false)))) || false)) || false)))))), (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), (_GLF_IDENTITY(false, ! (! (false)))) || false)) || false)), true && (! (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), (_GLF_IDENTITY(false, ! (! (false)))) || false)) || false))))) || false))) ? _GLF_FUZZED(_GLF_IDENTITY((6.4 , -23279), 1 * ((6.4 , -23279)))) : 0));
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y))))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false)), _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(vec2(1382.3250, 2.1)) : injectionSwitch)).y, (true ? injectionSwitch.y : _GLF_FUZZED(70.15)))), (_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(vec2(1382.3250, 2.1)) : injectionSwitch)).y, (true ? injectionSwitch.y : _GLF_FUZZED(70.15)))), ((injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(vec2(1382.3250, 2.1)) : injectionSwitch)).y, (true ? injectionSwitch.y : _GLF_FUZZED(70.15))))) || false)) || false)))))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) && true), (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   atomicStore(buf[next_virtual_gid], uint(_GLF_struct_replacement_6.read_1 + 1 == _GLF_IDENTITY(read_2, min(_GLF_IDENTITY(read_2, (read_2) ^ 0u), read_2))) + 1, 4, 64, 4);
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(cosh(-0.1)) : _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, float(vec2(injectionSwitch.y, 1.0)))) + 0.0)))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false))))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) || false), (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-7495.5328)), float(injectionSwitch.x), bool(true))) > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           barrier();
          }
        }
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, false, false)))))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, (false) && true), true, _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false))))) || false)), (! (_GLF_IDENTITY(false, (false) || false))) || false)))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, (false) && true), true, _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false))))) || false)), (! (_GLF_IDENTITY(false, (false) || false))) || false))))), ! (! (bool(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, (false) && true), true, _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false))))) || false)), (! (_GLF_IDENTITY(false, (false) || false))) || false))))))))), _GLF_IDENTITY(bool(bvec4(bool(_GLF_IDENTITY(bool(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, (false) && true), true, _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false))))) || false)), (! (_GLF_IDENTITY(false, (false) || false))) || false))))), ! (! (bool(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, (false) && true), true, _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false))))) || false)), (! (_GLF_IDENTITY(false, (false) || false))) || false))))))))), true, true, false)), false || (bool(bvec4(bool(_GLF_IDENTITY(bool(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, (false) && true), true, _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false))))) || false)), (! (_GLF_IDENTITY(false, (false) || false))) || false))))), ! (! (bool(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, (false) && true), true, _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false))))) || false)), (! (_GLF_IDENTITY(false, (false) || false))) || false))))))))), true, true, false)))))))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, false)), false || (bool(bvec2(false, false))))))), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, false)), false || (bool(bvec2(false, false))))))), true), bvec2(bvec2(bvec2(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, false)), false || (bool(bvec2(false, false))))))), true))))))))
        barrier();
       if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, true, true, _GLF_IDENTITY(false, ! (! (false))))), false || (bool(bvec4(false, true, true, _GLF_IDENTITY(false, ! (! (false))))))))))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y))))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y))).y))))
          barrier();
         barrier();
        }
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
    }
   if(_GLF_DEAD(false))
    barrier();
  }
 else
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))).y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
        barrier();
       barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true)))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec3(_GLF_DEAD(false), true, true)), bool(bvec4(bool(bvec3(_GLF_DEAD(false), true, true)), true, false, true)))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(true ? injectionSwitch : _GLF_FUZZED(unpackUnorm2x16(81560u)), (_GLF_IDENTITY(true ? injectionSwitch : _GLF_FUZZED(unpackUnorm2x16(81560u)), mix(vec2(_GLF_FUZZED(63.80), (true ? injectionSwitch : _GLF_FUZZED(unpackUnorm2x16(81560u)))[1]), vec2((true ? injectionSwitch : _GLF_FUZZED(unpackUnorm2x16(81560u)))[0], _GLF_FUZZED(6.2)), bvec2(true, false)))) + vec2(0.0, 0.0)))).x > injectionSwitch.y), (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(true ? injectionSwitch : _GLF_FUZZED(unpackUnorm2x16(81560u)), (true ? injectionSwitch : _GLF_FUZZED(unpackUnorm2x16(_GLF_IDENTITY(81560u, (_GLF_IDENTITY(81560u, min(_GLF_IDENTITY(81560u, clamp(81560u, 81560u, 81560u)), 81560u))) - (0u | 0u))))) + vec2(0.0, 0.0)))).x > injectionSwitch.y), bool(bvec4((_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(true ? injectionSwitch : _GLF_FUZZED(unpackUnorm2x16(81560u)), (true ? injectionSwitch : _GLF_FUZZED(unpackUnorm2x16(81560u))) + vec2(0.0, 0.0)))).x > injectionSwitch.y), true, true, true)))) && true))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   atomicStore(buf[next_virtual_gid], _GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_struct_replacement_6.read_1 + 1, clamp(_GLF_struct_replacement_6.read_1 + 1, _GLF_struct_replacement_6.read_1 + 1, _GLF_struct_replacement_6.read_1 + 1)) == read_2) + 1, (uint(_GLF_struct_replacement_6.read_1 + 1 == read_2) + _GLF_IDENTITY(1, ~ (~ (1)))) / _GLF_IDENTITY(1u, ~ (~ (_GLF_IDENTITY(1u, ~ (~ (1u))))))), (uint(_GLF_IDENTITY(_GLF_struct_replacement_6.read_1 + 1, (_GLF_struct_replacement_6.read_1 + 1) | 0u) == read_2) + 1) / 1u), _GLF_IDENTITY(4, (4) / 1), 64, 4);
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_DEAD(false))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(_GLF_IDENTITY(mat2x4(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)), sqrt(0.0), 0.0, 0.0, 0.0, 0.0, abs(0.0)), _GLF_IDENTITY(mat2x4(mat2x4(mat2x4(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)), sqrt(0.0), 0.0, 0.0, 0.0, 0.0, abs(0.0)))), mat4(1.0) * (mat2x4(mat2x4(mat2x4(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)), sqrt(0.0), 0.0, 0.0, 0.0, 0.0, abs(0.0)))))))), (vec2(_GLF_IDENTITY(mat2x4(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)), sqrt(0.0), 0.0, 0.0, 0.0, 0.0, abs(0.0)), _GLF_IDENTITY(mat2x4(mat2x4(mat2x4(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)), sqrt(0.0), 0.0, 0.0, 0.0, 0.0, abs(0.0)))), mat4(1.0) * (mat2x4(mat2x4(mat2x4(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)), sqrt(0.0), 0.0, 0.0, 0.0, 0.0, abs(0.0))))))))) * vec2(1.0, 1.0))).x > injectionSwitch.y), ! (! (bool(injectionSwitch.x > injectionSwitch.y))))), ! (! (bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(_GLF_IDENTITY(mat2x4(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)), sqrt(0.0), 0.0, 0.0, 0.0, 0.0, abs(0.0)), _GLF_IDENTITY(mat2x4(mat2x4(mat2x4(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)), sqrt(0.0), 0.0, 0.0, 0.0, 0.0, abs(0.0)))), mat4(1.0) * (mat2x4(mat2x4(mat2x4(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)), sqrt(0.0), 0.0, 0.0, 0.0, 0.0, abs(0.0)))))))), (vec2(_GLF_IDENTITY(mat2x4(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)), sqrt(0.0), 0.0, 0.0, 0.0, 0.0, abs(0.0)), _GLF_IDENTITY(mat2x4(mat2x4(mat2x4(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)), sqrt(0.0), 0.0, 0.0, 0.0, 0.0, abs(0.0)))), mat4(1.0) * (mat2x4(mat2x4(mat2x4(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)), sqrt(0.0), 0.0, 0.0, 0.0, 0.0, abs(0.0))))))))) * vec2(1.0, 1.0))).x > injectionSwitch.y), ! (! (bool(injectionSwitch.x > injectionSwitch.y)))))))))))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
}
