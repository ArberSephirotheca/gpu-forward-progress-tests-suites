#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


struct _GLF_struct_8 {
 mat3 _f0;
 uint read_2;
} ;

struct _GLF_struct_6 {
 uvec4 _f0;
} ;

struct _GLF_struct_5 {
 mat4x3 _f0;
 mat4 _f1;
 bvec2 _f2;
 mat4x3 _f3;
} ;

struct _GLF_struct_7 {
 mat4 _f0;
 _GLF_struct_5 _f1;
 vec2 _f2;
 mat3 _f3;
 _GLF_struct_6 _f4;
 ivec4 _f5;
} ;

struct _GLF_struct_9 {
 uvec3 _f0;
 _GLF_struct_7 _f1;
 mat4x2 _f2;
 vec4 _f3;
 mat4 _f4;
 _GLF_struct_8 _f5;
} ;

struct _GLF_struct_2 {
 bvec3 _f0;
 mat3x2 _f1;
 vec3 _f2;
} ;

struct _GLF_struct_1 {
 uvec4 _f0;
 ivec3 _f1;
 mat3 _f2;
 uvec2 _f3;
 vec4 _f4;
} ;

struct _GLF_struct_0 {
 uvec4 _f0;
 bvec4 _f1;
 vec4 _f2;
 vec4 _f3;
} ;

struct _GLF_struct_3 {
 vec3 _f0;
 _GLF_struct_0 _f1;
 _GLF_struct_1 _f2;
 _GLF_struct_2 _f3;
} ;

struct _GLF_struct_4 {
 mat2x3 _f0;
 mat2x4 _f1;
 _GLF_struct_3 _f2;
 uint workgroup_id;
} ;

layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false))))))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, 1.0 * (injectionSwitch.y))))))
  barrier();
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))), false || (_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (false)))))))))), true && (bool(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))), false || (_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false))))))))))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch : _GLF_FUZZED(vec2(-1.9, 0.8)))).y))))
        barrier();
       barrier();
      }
    }
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > injectionSwitch.y), ((_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > injectionSwitch.y)) || false))), (_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch))[0], injectionSwitch[1])).x > injectionSwitch.y), ((_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > injectionSwitch.y)) || false)))) || false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), injectionSwitch, injectionSwitch)).x < injectionSwitch.y)) && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(false))
    barrier();
  }
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_DEAD(false))
  barrier();
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   return;
  }
 uint num_workgroup = gl_NumWorkGroups.x;
 if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false))))))), (_GLF_DEAD(false)) && true))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], (true ? injectionSwitch[1] : _GLF_FUZZED(-6.4))))).x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))) + 0.0)))), (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y)))) && true))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) : _GLF_FUZZED(-36.77))) > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y)), _GLF_IDENTITY(! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false || (! _GLF_IDENTITY((! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec3(injectionSwitch.x > injectionSwitch.y, false, false))))))), false || ((! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 uint workgroup_size = gl_WorkGroupSize.x;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), false || (! (false))))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), false || (! (false))))), ! (! (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), false || (! (false)))))))))))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(bvec3(! (false), true, false)))))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   do
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_WRAPPED_IF_FALSE(false))
        {
        }
       else
        {
         barrier();
        }
      }
     if(_GLF_DEAD(false))
      break;
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   while(_GLF_WRAPPED_LOOP(false));
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)))), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))
    return;
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / determinant(mat4(1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0))))))), (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / determinant(mat4(1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0)))))))) || false)))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))
  return;
 if(_GLF_WRAPPED_IF_FALSE(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 else
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_IDENTITY(false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (false || (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(vec4(_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)), 1.0, 0.0))).x > injectionSwitch.y)))))) || false))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, true, true), bvec3(bvec3(bvec3(false, true, true))))))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, true && _GLF_IDENTITY(_GLF_IDENTITY((false), ! (! ((false)))), bool(bool(_GLF_IDENTITY(_GLF_IDENTITY((false), ! (! ((false)))), false || (_GLF_IDENTITY((false), ! (! ((false)))))))))), true)))), ! (_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, true && (false)), true)))), (_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, _GLF_IDENTITY(true, false || (true)) && (false)), true))))) && true)), ! (_GLF_IDENTITY(! ((_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, true && (false)), true)))), (_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, _GLF_IDENTITY(true, false || (true)) && (false)), true))))) && true))), (! ((_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, (false) && true)), ! (! (! (_GLF_IDENTITY(false, (false) && true))))))))), true)))), (_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, _GLF_IDENTITY(true, false || _GLF_IDENTITY((true), ((true)) && true)) && (false)), true))))) && true)))) && true))), (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, true && (false)), true)))), (_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, true && (false)), true))))) && true)), bool(bvec3(! (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, true && (false)), true)))), (_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, true && (false)), true))))) && true)), true, false))), (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, true && (false)), true)))), (_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, true && (false)), true))))) && true), (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(false, true && (false)), _GLF_IDENTITY(true, false || (true)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (bool(bvec2(_GLF_IDENTITY(false, true && (false)), _GLF_IDENTITY(true, false || (true)))))))), (_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, true && (false)), true))))) && true)) && true)), bool(bvec3(! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, _GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(true, (true) || false), false, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED((8.0 - -4166.4863))), float(injectionSwitch.x), bool(true))) > injectionSwitch.y)), true)), true && (bool(bvec4(_GLF_IDENTITY(true, (true) || false), false, _GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true)), bool(bvec4(bool(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true)), true, true, true)))))), true))))) && (false)), true)))), (_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(true, true && (true)), true, true)), true && (bool(bvec3(_GLF_IDENTITY(true, true && (true)), true, true))))), true && (_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, bool(bvec2(true, false))))), true && (true)), true, true)), true && (bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(true, true && (true)), true && (true)), true, true))))))) && (false)), true))))) && true)), ((_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, _GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(true, (true) || _GLF_IDENTITY(false, true && (false))), _GLF_IDENTITY(false, true && (false)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)), true && (bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(true, false || (true)), (true) || _GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, ! (! (false)))))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))))) && (false)), true)))), (_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, _GLF_IDENTITY(true, _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, (true) || false))), true, true)), true && (bool(bvec3(_GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, (true) || false))), true, true)))), true && (bool(bvec3(_GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, (true) || false)))))), true, true))))) && (false)), true))))) && true))) || false), true, false)))) || false)) || false))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     do
      {
       if(_GLF_DEAD(false))
        barrier();
      }
     while(_GLF_WRAPPED_LOOP(false));
     do
      {
       return;
      }
     while(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))));
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(_GLF_IDENTITY(bvec3(_GLF_FALSE(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (_GLF_IDENTITY(! (_GLF_IDENTITY(false, (false) || false)), false || (! (false)))) || false))), (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true), bvec3(bvec3(bvec3(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x))) - abs(0.0)) > injectionSwitch.y, bool(bvec2(_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x))) - abs(0.0)) > injectionSwitch.y, true))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))))))))
    barrier();
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
  barrier();
 if(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(_GLF_IDENTITY(false, false || (false)), (injectionSwitch.x > injectionSwitch.y))), (_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && true))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 else
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
          {
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_DEAD(false))
            barrier();
           return;
           if(_GLF_DEAD(false))
            barrier();
           for(int _injected_loop_counter = int(_GLF_ZERO(0.0, injectionSwitch.x)); _GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter != 1), (_GLF_WRAPPED_LOOP(_injected_loop_counter != 1)) || false); _injected_loop_counter ++)
            {
             if(_GLF_DEAD(false))
              {
               if(_GLF_DEAD(false))
                barrier();
               barrier();
              }
            }
          }
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, vec2(mat3x2(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)))), _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 0.0, 1.0))).y))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if(_GLF_WRAPPED_IF_FALSE(false))
          {
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_DEAD(false))
            barrier();
          }
         else
          {
           return;
          }
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_WRAPPED_IF_FALSE(false))
          {
          }
         else
          {
           if(_GLF_DEAD(false))
            return;
          }
         if(_GLF_DEAD(false))
          barrier();
        }
      }
     else
      {
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(-3.4)), bool(false)))))))
      barrier();
     barrier();
    }
  }
 if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), ! (_GLF_IDENTITY(! (_GLF_WRAPPED_IF_TRUE(true)), true && (! (_GLF_WRAPPED_IF_TRUE(true)))))), bool(bvec2(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), false || (_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), ! (_GLF_IDENTITY(! (_GLF_WRAPPED_IF_TRUE(true)), ! (! (! (_GLF_WRAPPED_IF_TRUE(true))))))))), true))))
  {
   for(int _injected_loop_counter = int(_GLF_IDENTITY(_GLF_ONE(1.0, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat4x2(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)), injectionSwitch)), 0.0, determinant(mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0)), exp(0.0), 1.0, 1.0, determinant(mat2(0.0, abs(0.0), 1.0, 0.0))), (_GLF_IDENTITY(true, (true) || false) ? mat4x2(injectionSwitch, 0.0, determinant(mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0)), exp(0.0), 1.0, 1.0, determinant(mat2(0.0, abs(0.0), _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), 0.0))) : _GLF_FUZZED(mat4x2(7.0, 95.50, 0.5, 2.9, 952.225, -72.13, 131.827, -2.0)))))), mat2(1.0) * (injectionSwitch)).y), float(mat3x2(_GLF_ONE(1.0, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat4x2(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)), injectionSwitch)), 0.0, determinant(mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0)), exp(0.0), 1.0, 1.0, determinant(mat2(0.0, abs(0.0), 1.0, 0.0))), (_GLF_IDENTITY(true, (true) || false) ? mat4x2(injectionSwitch, 0.0, determinant(mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0)), exp(0.0), 1.0, 1.0, determinant(mat2(0.0, abs(0.0), _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), 0.0))) : _GLF_FUZZED(mat4x2(7.0, 95.50, 0.5, 2.9, 952.225, -72.13, 131.827, -2.0)))))), mat2(1.0) * (injectionSwitch)).y), 1.0, 0.0, 0.0, abs(0.0), 1.0)))); _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_injected_loop_counter, _GLF_IDENTITY(0, (0) ^ 0) | (_injected_loop_counter)), 0 ^ (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_injected_loop_counter, 0 | (_injected_loop_counter)), max(_GLF_IDENTITY(_injected_loop_counter, 0 | (_injected_loop_counter)), _GLF_IDENTITY(_injected_loop_counter, 0 | (_injected_loop_counter)))), int(_GLF_IDENTITY(ivec2(_GLF_IDENTITY(_GLF_IDENTITY(_injected_loop_counter, 0 | (_injected_loop_counter)), max(_GLF_IDENTITY(_injected_loop_counter, 0 | (_injected_loop_counter)), _GLF_IDENTITY(_injected_loop_counter, 0 | (_injected_loop_counter)))), 0), (ivec2(_GLF_IDENTITY(_GLF_IDENTITY(_injected_loop_counter, 0 | (_injected_loop_counter)), max(_GLF_IDENTITY(_injected_loop_counter, 0 | (_injected_loop_counter)), _GLF_IDENTITY(_injected_loop_counter, _GLF_IDENTITY(0, max(0, _GLF_IDENTITY(0, _GLF_IDENTITY(int(_GLF_IDENTITY(ivec4(0, 0, 0, 1), (ivec4(0, 0, 0, 1)) / ivec4(1, 1, 1, 1))), 1 * (int(_GLF_IDENTITY(ivec4(0, 0, 0, 1), (ivec4(0, 0, 0, 1)) / ivec4(1, 1, 1, 1)))))))) | (_injected_loop_counter)))), 0)) >> ivec2(0, 0))))))), ((_GLF_IDENTITY(_GLF_IDENTITY(_injected_loop_counter, _GLF_IDENTITY(0, (0) ^ 0) | (_injected_loop_counter)), 0 ^ (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_injected_loop_counter, 0 | (_injected_loop_counter)), max(_GLF_IDENTITY(_injected_loop_counter, 0 | (_injected_loop_counter)), _GLF_IDENTITY(_injected_loop_counter, 0 | (_injected_loop_counter)))), int(_GLF_IDENTITY(ivec2(_GLF_IDENTITY(_GLF_IDENTITY(_injected_loop_counter, 0 | (_injected_loop_counter)), max(_GLF_IDENTITY(_injected_loop_counter, 0 | (_injected_loop_counter)), _GLF_IDENTITY(_injected_loop_counter, 0 | (_injected_loop_counter)))), 0), (ivec2(_GLF_IDENTITY(_GLF_IDENTITY(_injected_loop_counter, 0 | (_injected_loop_counter)), max(_GLF_IDENTITY(_injected_loop_counter, 0 | (_injected_loop_counter)), _GLF_IDENTITY(_injected_loop_counter, _GLF_IDENTITY(0, max(0, _GLF_IDENTITY(0, _GLF_IDENTITY(int(_GLF_IDENTITY(ivec4(0, 0, 0, 1), (ivec4(0, 0, 0, 1)) / ivec4(1, 1, 1, 1))), 1 * (int(_GLF_IDENTITY(ivec4(0, 0, 0, 1), (ivec4(0, 0, 0, 1)) / ivec4(1, 1, 1, 1)))))))) | (_injected_loop_counter)))), 0)) >> ivec2(0, 0)))))))) + (0 >> _GLF_IDENTITY(int(8), int(8)))) + 0) != _GLF_IDENTITY(0, (_GLF_IDENTITY(0, (0) | (0))) | (_GLF_IDENTITY(0, max(0, 0))))); _injected_loop_counter --)
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
        }
       else
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0))) - vec2(_GLF_IDENTITY(_GLF_IDENTITY(0.0, (0.0) - 0.0), float(vec2(0.0, 0.0))), 0.0)).y))))
          return;
         if(_GLF_DEAD(false))
          barrier();
        }
       barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bool(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false)))))), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)))
        break;
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(_GLF_IDENTITY(false, ! _GLF_IDENTITY((_GLF_IDENTITY(! (false), bool(bvec4(! (false), false, true, false)))), bool(bvec2(_GLF_IDENTITY((_GLF_IDENTITY(! (false), bool(bvec4(! (false), false, true, false)))), false || ((_GLF_IDENTITY(! _GLF_IDENTITY((false), bool(bool((false)))), bool(bvec4(! (false), false, true, false)))))), true))))))
          barrier();
         barrier();
        }
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false)), ! (! ((injectionSwitch.x > injectionSwitch.y)))))))
      {
       if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)), (bool(bvec3(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))) && true)), (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, false)))))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, false, true, false)))))
          barrier();
         return;
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), false || (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))
          barrier();
         barrier();
        }
       return;
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x, float(vec2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x, 0.0 + (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x)), 0.0))) > _GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)), injectionSwitch)).y))))
      {
       if(_GLF_DEAD(false))
        continue;
       if(_GLF_DEAD(false))
        break;
       return;
       if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), (bool(bool(_GLF_IDENTITY(false, (false) || false)))) || false))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
           if(_GLF_DEAD(false))
            barrier();
           return;
          }
         if(_GLF_WRAPPED_IF_FALSE(false))
          {
           if(_GLF_DEAD(false))
            barrier();
          }
         else
          {
           barrier();
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
          }
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
        }
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))
      return;
     if(_GLF_DEAD(false))
      break;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(4.7) : injectionSwitch.x)) > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))), ! (! (false)))))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_WRAPPED_IF_FALSE(false))
          {
          }
         else
          {
           barrier();
          }
        }
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)), injectionSwitch)).y)))))))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, true, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), (bool(bvec4(false, true, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) || false))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
      continue;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, bool(bvec2(false, true)))))) && true)))
    return;
  }
 else
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
  }
 _GLF_struct_4 _GLF_struct_replacement_4 = _GLF_struct_4(mat2x3(1.0), mat2x4(1.0), _GLF_struct_3(_GLF_IDENTITY(vec3(1.0), mix(vec3(_GLF_FUZZED((-640.635)), _GLF_FUZZED(7137.7453), (vec3(1.0))[2]), vec3((vec3(1.0))[0], (vec3(1.0))[1], _GLF_FUZZED(-48.20)), bvec3(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))), _GLF_struct_0(uvec4(_GLF_IDENTITY(1u, ~ (~ (1u)))), bvec4(true), _GLF_IDENTITY(vec4(1.0), vec4(_GLF_IDENTITY(mat4x2(vec4(1.0), log(1.0), log(_GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0)), dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0)))), 0.0, 1.0), transpose(transpose(mat4x2(vec4(1.0), log(1.0), log(_GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0)), dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0)))), 0.0, 1.0)))))), vec4(1.0)), _GLF_struct_1(uvec4(1u), ivec3(1), mat3(1.0), uvec2(1u), vec4(1.0)), _GLF_struct_2(bvec3(true), mat3x2(1.0), vec3(1.0))), _GLF_IDENTITY(gl_WorkGroupID.x, max(_GLF_IDENTITY(gl_WorkGroupID, clamp(gl_WorkGroupID, gl_WorkGroupID, _GLF_IDENTITY(gl_WorkGroupID, min(gl_WorkGroupID, gl_WorkGroupID)))).x, _GLF_IDENTITY(gl_WorkGroupID, min(gl_WorkGroupID, _GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) | uvec3(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))))).x)));
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + 0.0) > injectionSwitch.y), false || ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).y) || false))))))))), _GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, (true) && true)))) && ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(0.6)), float(injectionSwitch.x), bool(true))), (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(_GLF_FUZZED(0.6), (_GLF_FUZZED(0.6)) / 1.0)), float(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-5968.7238), _GLF_FUZZED(570.682)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))).x), bool(true)))) / sqrt(1.0)) > injectionSwitch.y))))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint workgroup_base = _GLF_IDENTITY(_GLF_IDENTITY(workgroup_size * _GLF_struct_replacement_4.workgroup_id, ~ (_GLF_IDENTITY(~ (workgroup_size * _GLF_struct_replacement_4.workgroup_id), (~ _GLF_IDENTITY((workgroup_size * _GLF_struct_replacement_4.workgroup_id), clamp((workgroup_size * _GLF_struct_replacement_4.workgroup_id), _GLF_IDENTITY((workgroup_size * _GLF_struct_replacement_4.workgroup_id), 0u ^ ((workgroup_size * _GLF_struct_replacement_4.workgroup_id))), (workgroup_size * _GLF_struct_replacement_4.workgroup_id)))) << 0u))), (workgroup_size * _GLF_struct_replacement_4.workgroup_id) >> 0u);
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(_GLF_IDENTITY(mat2x3(injectionSwitch.x, log(1.0), _GLF_ONE(1.0, injectionSwitch.y), 1.0, 1.0, 1.0), mat3(1.0) * (mat2x3(injectionSwitch.x, log(1.0), _GLF_ONE(1.0, injectionSwitch.y), 1.0, 1.0, 1.0)))), clamp(float(_GLF_IDENTITY(mat2x3(injectionSwitch.x, log(1.0), _GLF_ONE(1.0, injectionSwitch.y), 1.0, 1.0, 1.0), _GLF_IDENTITY(mat3(1.0), (mat3(1.0)) / mat3(1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0)) * (mat2x3(injectionSwitch.x, _GLF_IDENTITY(log(1.0), (log(1.0)) + 0.0), _GLF_ONE(1.0, injectionSwitch.y), 1.0, 1.0, 1.0)))), float(_GLF_IDENTITY(mat2x3(injectionSwitch.x, _GLF_IDENTITY(log(1.0), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(-8.3) : log(1.0))), _GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), (_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), min(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), min(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y))), _GLF_ONE(1.0, injectionSwitch.y)))) + 0.0), 1.0, 1.0, 1.0), mat3(1.0) * (mat2x3(injectionSwitch.x, log(1.0), _GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(reflect(injectionSwitch, injectionSwitch)) : injectionSwitch)).y), 1.0, 1.0, 1.0)))), _GLF_IDENTITY(float(_GLF_IDENTITY(mat2x3(injectionSwitch.x, log(1.0), _GLF_ONE(1.0, injectionSwitch.y), 1.0, 1.0, 1.0), mat3(1.0) * (mat2x3(injectionSwitch.x, log(1.0), _GLF_ONE(1.0, injectionSwitch.y), 1.0, 1.0, 1.0)))), clamp(float(_GLF_IDENTITY(mat2x3(injectionSwitch.x, log(1.0), _GLF_ONE(1.0, injectionSwitch.y), 1.0, 1.0, 1.0), mat3(1.0) * (mat2x3(injectionSwitch.x, _GLF_IDENTITY(log(1.0), (true ? log(1.0) : _GLF_FUZZED(mix(-885.588, -9.0, 483.589)))), _GLF_ONE(1.0, injectionSwitch.y), 1.0, 1.0, 1.0)))), float(_GLF_IDENTITY(mat2x3(injectionSwitch.x, log(1.0), _GLF_ONE(1.0, injectionSwitch.y), 1.0, 1.0, 1.0), mat3(1.0) * (mat2x3(injectionSwitch.x, log(1.0), _GLF_ONE(1.0, injectionSwitch.y), 1.0, 1.0, 1.0)))), float(_GLF_IDENTITY(mat2x3(injectionSwitch.x, log(1.0), _GLF_ONE(1.0, injectionSwitch.y), 1.0, _GLF_IDENTITY(1.0, min(1.0, 1.0)), 1.0), mat3(1.0) * (mat2x3(injectionSwitch.x, log(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(1.0) : 1.0))), _GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), min(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y))), 1.0, 1.0, 1.0))))))))) > injectionSwitch.y))))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, false || (false))))), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))))), bool(bvec3(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))))), ! (! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))))), false, false)))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(_GLF_IDENTITY(true, (true) || false), bool(bvec4(_GLF_IDENTITY(true, (true) || false), true, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, (_GLF_IDENTITY(true, (true) || false)) && true))) && (_GLF_IDENTITY(false, false || (false))))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       return;
      }
     return;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    barrier();
  }
 else
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y))).y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_WRAPPED_IF_TRUE(true))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     else
      {
      }
    }
  }
 uint virtual_gid = _GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size + _GLF_IDENTITY(subgroup_local_id, ~ (~ (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) * 1u)))), min(workgroup_base + subgroup_id * subgroup_size + _GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY(~ (~ (_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, min(subgroup_local_id, subgroup_local_id))) * 1u))), (~ (~ (_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, min(subgroup_local_id, subgroup_local_id))) * 1u)))) << 0u)), workgroup_base + subgroup_id * subgroup_size + _GLF_IDENTITY(subgroup_local_id, ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) * 1u), (_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY((subgroup_local_id), (_GLF_IDENTITY((subgroup_local_id), (true ? (subgroup_local_id) : _GLF_FUZZED(subgroup_id)))) / 1u) * 1u)) / 1u), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) * 1u), (subgroup_local_id) * 1u), (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) * 1u)) << _GLF_IDENTITY(0u, ~ (~ (_GLF_IDENTITY(0u, min(0u, 0u))))))) | (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) * 1u), min(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) * 1u), _GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) * 1u))))))))));
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 uint next_virtual_gid = _GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, _GLF_IDENTITY(uint(uint(workgroup_base + subgroup_id * subgroup_size)), _GLF_IDENTITY(0u ^ (uint(uint(workgroup_base + subgroup_id * subgroup_size))), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(0u ^ (uint(uint(workgroup_base + subgroup_id * subgroup_size))), max(_GLF_IDENTITY(0u ^ (uint(uint(workgroup_base + subgroup_id * subgroup_size))), uint(uvec2(0u ^ (uint(uint(workgroup_base + subgroup_id * subgroup_size))), 1u))), 0u ^ (uint(_GLF_IDENTITY(_GLF_IDENTITY(uint(workgroup_base + subgroup_id * subgroup_size), (false ? _GLF_FUZZED(workgroup_base) : uint(workgroup_base + subgroup_id * subgroup_size))), _GLF_IDENTITY(clamp(uint(workgroup_base + subgroup_id * subgroup_size), uint(workgroup_base + subgroup_id * subgroup_size), uint(workgroup_base + subgroup_id * subgroup_size)), ~ (~ (clamp(uint(_GLF_IDENTITY(workgroup_base, (workgroup_base) | (workgroup_base)) + subgroup_id * subgroup_size), uint(workgroup_base + subgroup_id * subgroup_size), _GLF_IDENTITY(uint(_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, (workgroup_base + subgroup_id * subgroup_size) >> 0u)), (uint(_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, (workgroup_base + subgroup_id * subgroup_size) >> 0u))) * 1u))))))))))), 0u + (~ (_GLF_IDENTITY(0u ^ (uint(uint(workgroup_base + subgroup_id * subgroup_size))), max(_GLF_IDENTITY(0u ^ (uint(uint(workgroup_base + subgroup_id * subgroup_size))), uint(uvec2(0u ^ (uint(uint(workgroup_base + _GLF_IDENTITY(subgroup_id, (subgroup_id) | 0u) * subgroup_size))), _GLF_IDENTITY(1u, min(1u, 1u))))), 0u ^ (uint(uint(workgroup_base + subgroup_id * subgroup_size)))))))))))) + ((subgroup_local_id + 1) % subgroup_size);
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > injectionSwitch.y), ! _GLF_IDENTITY((_GLF_IDENTITY(! ((_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > injectionSwitch.y)), ! (! (! ((_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > injectionSwitch.y)))))), true && ((_GLF_IDENTITY(! ((_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > injectionSwitch.y)), ! (! (! ((_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > injectionSwitch.y))))))))))))
  {
  }
 else
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x))) * 1.0) > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     for(int _injected_loop_counter = (0 >> _GLF_IDENTITY(int(3), int(3))); _GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter < _GLF_IDENTITY((_GLF_IDENTITY((_GLF_IDENTITY(1, clamp(1, 1, _GLF_IDENTITY(1, max(1, 1)))) << _GLF_IDENTITY(int(0), _GLF_IDENTITY(_GLF_IDENTITY(int(0), (false ? _GLF_FUZZED(60951) : _GLF_IDENTITY(int(_GLF_IDENTITY(0, ~ (~ (_GLF_IDENTITY(0, int(_GLF_ZERO(0.0, injectionSwitch.x)) + (0)))))), ~ (~ (int(_GLF_IDENTITY(0, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(0, int(_GLF_ZERO(0.0, injectionSwitch.x)) + (0))), clamp(~ (_GLF_IDENTITY(0, int(_GLF_ZERO(0.0, injectionSwitch.x)) + (0))), ~ (_GLF_IDENTITY(0, int(_GLF_ZERO(0.0, injectionSwitch.x)) + (0))), ~ (_GLF_IDENTITY(0, int(_GLF_ZERO(0.0, injectionSwitch.x)) + (0))))))))))))), (_GLF_IDENTITY(_GLF_IDENTITY(int(0), (false ? _GLF_FUZZED(60951) : _GLF_IDENTITY(int(_GLF_IDENTITY(0, ~ (~ (_GLF_IDENTITY(0, int(_GLF_ZERO(0.0, injectionSwitch.x)) + (0)))))), ~ (~ (int(_GLF_IDENTITY(0, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(0, int(_GLF_ZERO(0.0, injectionSwitch.x)) + (0))), clamp(~ (_GLF_IDENTITY(0, int(_GLF_ZERO(0.0, injectionSwitch.x)) + (0))), ~ (_GLF_IDENTITY(0, int(_GLF_ZERO(0.0, injectionSwitch.x)) + (0))), ~ (_GLF_IDENTITY(0, int(_GLF_ZERO(0.0, injectionSwitch.x)) + (0))))))))))))), (_GLF_IDENTITY(int(0), (false ? _GLF_FUZZED(60951) : _GLF_IDENTITY(int(_GLF_IDENTITY(0, ~ (~ (_GLF_IDENTITY(0, int(_GLF_ZERO(0.0, injectionSwitch.x)) + (0)))))), ~ (~ (int(_GLF_IDENTITY(0, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(0, int(_GLF_ZERO(0.0, injectionSwitch.x)) + (0))), clamp(~ (_GLF_IDENTITY(0, int(_GLF_ZERO(0.0, injectionSwitch.x)) + (0))), ~ (_GLF_IDENTITY(0, int(_GLF_ZERO(0.0, injectionSwitch.x)) + (0))), ~ (_GLF_IDENTITY(0, int(_GLF_ZERO(0.0, injectionSwitch.x)) + (0)))))))))))))) / 1)) | (_GLF_IDENTITY(int(0), (false ? _GLF_FUZZED(60951) : _GLF_IDENTITY(int(_GLF_IDENTITY(0, ~ (~ (_GLF_IDENTITY(0, int(_GLF_ZERO(0.0, injectionSwitch.x)) + (0)))))), ~ (~ (int(_GLF_IDENTITY(0, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(0, int(_GLF_ZERO(0.0, injectionSwitch.x)) + (0))), clamp(~ (_GLF_IDENTITY(0, int(_GLF_ZERO(0.0, injectionSwitch.x)) + (0))), ~ (_GLF_IDENTITY(0, int(_GLF_ZERO(0.0, injectionSwitch.x)) + (0))), ~ (_GLF_IDENTITY(0, int(_GLF_ZERO(0.0, injectionSwitch.x)) + (0))))))))))))))))), ((_GLF_IDENTITY(1, clamp(1, 1, _GLF_IDENTITY(1, max(1, 1)))) << _GLF_IDENTITY(int(0), _GLF_IDENTITY(_GLF_IDENTITY(int(0), (false ? _GLF_FUZZED(60951) : _GLF_IDENTITY(int(_GLF_IDENTITY(0, ~ (~ (_GLF_IDENTITY(0, int(_GLF_ZERO(0.0, injectionSwitch.x)) + (0)))))), ~ (~ (int(_GLF_IDENTITY(0, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(0, int(_GLF_ZERO(0.0, injectionSwitch.x)) + (0))), clamp(~ (_GLF_IDENTITY(0, int(_GLF_ZERO(0.0, injectionSwitch.x)) + (0))), ~ (_GLF_IDENTITY(0, int(_GLF_ZERO(0.0, injectionSwitch.x)) + (0))), ~ (_GLF_IDENTITY(0, int(_GLF_ZERO(0.0, injectionSwitch.x)) + (0))))))))))))), (_GLF_IDENTITY(_GLF_IDENTITY(int(0), (false ? _GLF_FUZZED(60951) : _GLF_IDENTITY(int(_GLF_IDENTITY(0, ~ (~ (_GLF_IDENTITY(0, int(_GLF_ZERO(0.0, injectionSwitch.x)) + (0)))))), ~ (~ (int(_GLF_IDENTITY(0, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(0, int(_GLF_ZERO(0.0, injectionSwitch.x)) + (0))), clamp(~ (_GLF_IDENTITY(0, int(_GLF_ZERO(0.0, injectionSwitch.x)) + (0))), ~ (_GLF_IDENTITY(0, int(_GLF_ZERO(0.0, injectionSwitch.x)) + (0))), ~ (_GLF_IDENTITY(0, int(_GLF_ZERO(0.0, injectionSwitch.x)) + (0))))))))))))), (_GLF_IDENTITY(int(0), (false ? _GLF_FUZZED(60951) : _GLF_IDENTITY(int(_GLF_IDENTITY(0, ~ (~ (_GLF_IDENTITY(0, int(_GLF_ZERO(0.0, injectionSwitch.x)) + (0)))))), ~ (~ (int(_GLF_IDENTITY(0, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(0, int(_GLF_ZERO(0.0, injectionSwitch.x)) + (0))), clamp(~ (_GLF_IDENTITY(0, int(_GLF_ZERO(0.0, injectionSwitch.x)) + (0))), ~ (_GLF_IDENTITY(0, int(_GLF_ZERO(0.0, injectionSwitch.x)) + (0))), ~ (_GLF_IDENTITY(0, int(_GLF_ZERO(0.0, injectionSwitch.x)) + (0)))))))))))))) / 1)) | (_GLF_IDENTITY(int(0), (false ? _GLF_FUZZED(60951) : _GLF_IDENTITY(int(_GLF_IDENTITY(0, ~ (~ (_GLF_IDENTITY(0, int(_GLF_ZERO(0.0, injectionSwitch.x)) + (0)))))), ~ (~ (int(_GLF_IDENTITY(0, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(0, int(_GLF_ZERO(0.0, injectionSwitch.x)) + (0))), clamp(~ (_GLF_IDENTITY(0, int(_GLF_ZERO(0.0, injectionSwitch.x)) + (0))), ~ (_GLF_IDENTITY(0, int(_GLF_ZERO(0.0, injectionSwitch.x)) + (0))), ~ (_GLF_IDENTITY(0, int(_GLF_ZERO(0.0, injectionSwitch.x)) + (0)))))))))))))))))) | ((_GLF_IDENTITY(1, clamp(1, 1, _GLF_IDENTITY(1, max(1, 1)))) << _GLF_IDENTITY(int(0), _GLF_IDENTITY(_GLF_IDENTITY(int(0), (false ? _GLF_FUZZED(60951) : _GLF_IDENTITY(int(_GLF_IDENTITY(0, ~ (~ (_GLF_IDENTITY(0, int(_GLF_ZERO(0.0, injectionSwitch.x)) + (0)))))), ~ (~ (int(_GLF_IDENTITY(0, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(0, int(_GLF_ZERO(0.0, injectionSwitch.x)) + (0))), clamp(~ (_GLF_IDENTITY(0, int(_GLF_ZERO(0.0, injectionSwitch.x)) + (0))), ~ (_GLF_IDENTITY(0, int(_GLF_ZERO(0.0, injectionSwitch.x)) + (0))), ~ (_GLF_IDENTITY(0, int(_GLF_ZERO(0.0, injectionSwitch.x)) + (0))))))))))))), (_GLF_IDENTITY(_GLF_IDENTITY(int(0), (false ? _GLF_FUZZED(60951) : _GLF_IDENTITY(int(_GLF_IDENTITY(0, ~ (~ (_GLF_IDENTITY(0, int(_GLF_ZERO(0.0, injectionSwitch.x)) + (0)))))), ~ (~ (int(_GLF_IDENTITY(0, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(0, int(_GLF_ZERO(0.0, injectionSwitch.x)) + (0))), clamp(~ (_GLF_IDENTITY(0, int(_GLF_ZERO(0.0, injectionSwitch.x)) + (0))), ~ (_GLF_IDENTITY(0, int(_GLF_ZERO(0.0, injectionSwitch.x)) + (0))), ~ (_GLF_IDENTITY(0, int(_GLF_ZERO(0.0, injectionSwitch.x)) + (0))))))))))))), (_GLF_IDENTITY(int(0), (false ? _GLF_FUZZED(60951) : _GLF_IDENTITY(int(_GLF_IDENTITY(0, ~ (~ (_GLF_IDENTITY(0, int(_GLF_ZERO(0.0, injectionSwitch.x)) + (0)))))), ~ (~ (int(_GLF_IDENTITY(0, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(0, int(_GLF_ZERO(0.0, injectionSwitch.x)) + (0))), clamp(~ (_GLF_IDENTITY(0, int(_GLF_ZERO(0.0, injectionSwitch.x)) + (0))), ~ (_GLF_IDENTITY(0, int(_GLF_ZERO(0.0, injectionSwitch.x)) + (0))), ~ (_GLF_IDENTITY(0, int(_GLF_ZERO(0.0, injectionSwitch.x)) + (0)))))))))))))) / 1)) | (_GLF_IDENTITY(int(0), (false ? _GLF_FUZZED(60951) : _GLF_IDENTITY(int(_GLF_IDENTITY(0, ~ (~ (_GLF_IDENTITY(0, int(_GLF_ZERO(0.0, injectionSwitch.x)) + (0)))))), ~ (~ (int(_GLF_IDENTITY(0, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(0, int(_GLF_ZERO(0.0, injectionSwitch.x)) + (0))), clamp(~ (_GLF_IDENTITY(0, int(_GLF_ZERO(0.0, injectionSwitch.x)) + (0))), ~ (_GLF_IDENTITY(0, int(_GLF_ZERO(0.0, injectionSwitch.x)) + (0))), ~ (_GLF_IDENTITY(0, int(_GLF_ZERO(0.0, injectionSwitch.x)) + (0))))))))))))))))))) >> _GLF_IDENTITY(int(0), int(0))), min(_GLF_IDENTITY((_GLF_IDENTITY((1 << _GLF_IDENTITY(int(0), _GLF_IDENTITY(int(0), (false ? _GLF_FUZZED(60951) : _GLF_IDENTITY(int(_GLF_IDENTITY(0, ~ (~ (_GLF_IDENTITY(0, int(_GLF_ZERO(0.0, injectionSwitch.x)) + (0)))))), ~ (~ (int(_GLF_IDENTITY(0, ~ (~ (_GLF_IDENTITY(0, int(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x)) + (0))))))))))))) >> _GLF_IDENTITY(int(0), int(0)), _GLF_IDENTITY(int(ivec3((1 << _GLF_IDENTITY(int(0), _GLF_IDENTITY(int(0), (false ? _GLF_FUZZED(60951) : _GLF_IDENTITY(int(_GLF_IDENTITY(0, ~ (~ (_GLF_IDENTITY(0, int(_GLF_ZERO(0.0, injectionSwitch.x)) + (0)))))), ~ (~ (int(_GLF_IDENTITY(0, ~ (~ (_GLF_IDENTITY(0, int(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x)) + (0))))))))))))) >> _GLF_IDENTITY(int(0), int(0)), 1, 1)), (1 ^ 0) * (int(ivec3((1 << _GLF_IDENTITY(int(0), _GLF_IDENTITY(int(0), (false ? _GLF_FUZZED(60951) : _GLF_IDENTITY(int(_GLF_IDENTITY(0, ~ (~ (_GLF_IDENTITY(0, int(_GLF_ZERO(0.0, injectionSwitch.x)) + (0)))))), ~ (~ (int(_GLF_IDENTITY(0, ~ (~ (_GLF_IDENTITY(0, int(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x)) + (0))))))))))))) >> _GLF_IDENTITY(int(0), int(0)), 1, 1)))))), clamp((_GLF_IDENTITY((1 << _GLF_IDENTITY(int(0), _GLF_IDENTITY(_GLF_IDENTITY(int(0), (int(0)) << 0), (false ? _GLF_FUZZED(60951) : _GLF_IDENTITY(int(_GLF_IDENTITY(0, ~ (~ (_GLF_IDENTITY(0, int(_GLF_ZERO(0.0, injectionSwitch.x)) + (0)))))), ~ (~ (int(_GLF_IDENTITY(0, ~ (~ (_GLF_IDENTITY(0, int(_GLF_ZERO(0.0, injectionSwitch.x)) + (0))))))))))))) >> _GLF_IDENTITY(int(0), int(0)), (_GLF_IDENTITY((_GLF_IDENTITY(1, max(_GLF_IDENTITY(1, (1) << 0), _GLF_IDENTITY(1, (1) >> 0))) << _GLF_IDENTITY(int(0), _GLF_IDENTITY(int(_GLF_IDENTITY(0, 1 * (0))), (false ? _GLF_FUZZED(60951) : _GLF_IDENTITY(int(_GLF_IDENTITY(0, ~ (~ (_GLF_IDENTITY(0, int(_GLF_ZERO(0.0, injectionSwitch.x)) + (0)))))), ~ (~ (int(_GLF_IDENTITY(0, ~ (~ (_GLF_IDENTITY(0, int(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), float(float(_GLF_ZERO(0.0, injectionSwitch.x))))) + (0))))))))))))) >> _GLF_IDENTITY(int(0), int(0)), int(_GLF_IDENTITY(ivec4((1 << _GLF_IDENTITY(int(0), _GLF_IDENTITY(int(0), (false ? _GLF_FUZZED(60951) : _GLF_IDENTITY(int(_GLF_IDENTITY(0, ~ (~ (_GLF_IDENTITY(0, int(_GLF_ZERO(0.0, injectionSwitch.x)) + (0)))))), ~ (~ (int(_GLF_IDENTITY(0, ~ (~ (_GLF_IDENTITY(0, int(_GLF_ZERO(0.0, injectionSwitch.x)) + (0))))))))))))) >> _GLF_IDENTITY(int(0), int(0)), (0 | 0), 0, _GLF_IDENTITY(1, (1) / int(_GLF_ONE(1.0, injectionSwitch.y)))), ivec4(0, 0, 0, 0) ^ (ivec4((1 << _GLF_IDENTITY(int(0), _GLF_IDENTITY(int(0), (false ? _GLF_FUZZED(60951) : _GLF_IDENTITY(int(_GLF_IDENTITY(0, ~ (~ (_GLF_IDENTITY(0, int(_GLF_ZERO(0.0, injectionSwitch.x)) + (0)))))), ~ (~ (int(_GLF_IDENTITY(0, ~ (~ (_GLF_IDENTITY(0, int(_GLF_ZERO(0.0, injectionSwitch.x)) + (0))))))))))))) >> _GLF_IDENTITY(int(0), int(0)), (0 | 0), 0, _GLF_IDENTITY(1, (1) / int(_GLF_ONE(1.0, injectionSwitch.y))))))))) << 0)), _GLF_IDENTITY(((1 << _GLF_IDENTITY(int(0), _GLF_IDENTITY(int(0), (false ? _GLF_FUZZED(_GLF_IDENTITY(60951, max(60951, 60951))) : _GLF_IDENTITY(int(_GLF_IDENTITY(0, ~ (~ (_GLF_IDENTITY(0, int(_GLF_ZERO(0.0, injectionSwitch.x)) + _GLF_IDENTITY((0), clamp(_GLF_IDENTITY((0), ~ (~ ((0)))), (0), (0)))))))), ~ (~ (int(_GLF_IDENTITY(0, ~ (~ (_GLF_IDENTITY(0, int(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), (_GLF_ZERO(0.0, injectionSwitch.x)) - 0.0)) + (0))))))))))))) >> _GLF_IDENTITY(int(0), int(0))), int(ivec2(((1 << _GLF_IDENTITY(int(0), _GLF_IDENTITY(int(0), (false ? _GLF_FUZZED(60951) : _GLF_IDENTITY(int(_GLF_IDENTITY(0, ~ (~ (_GLF_IDENTITY(0, int(_GLF_ZERO(0.0, injectionSwitch.x)) + (0)))))), ~ (~ (int(_GLF_IDENTITY(0, _GLF_IDENTITY(~ (~ (_GLF_IDENTITY(0, int(_GLF_ZERO(0.0, injectionSwitch.x)) + (0)))), _GLF_IDENTITY(int(ivec2(~ (~ (_GLF_IDENTITY(0, _GLF_IDENTITY(int(_GLF_ZERO(0.0, injectionSwitch.x)), (false ? _GLF_FUZZED(21052) : _GLF_IDENTITY(int(_GLF_ZERO(0.0, injectionSwitch.x)), (int(_GLF_ZERO(0.0, injectionSwitch.x))) | 0))) + (0)))), 1)), 0 | (int(ivec2(~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(0, int(_GLF_ZERO(0.0, injectionSwitch.x)) + (0)), ~ (~ (_GLF_IDENTITY(0, int(_GLF_ZERO(0.0, injectionSwitch.x)) + (0))))))), 1)))))))))))))) >> _GLF_IDENTITY(int(0), int(0))), 1))), ((1 << _GLF_IDENTITY(int(0), _GLF_IDENTITY(int(0), (false ? _GLF_FUZZED(60951) : _GLF_IDENTITY(int(_GLF_IDENTITY(0, ~ (~ (_GLF_IDENTITY(0, int(_GLF_ZERO(0.0, injectionSwitch.x)) + (0)))))), ~ (~ (int(_GLF_IDENTITY(0, ~ (~ (_GLF_IDENTITY(0, int(_GLF_ZERO(_GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, (0.0) + 0.0), _GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, min(0.0, 0.0)), _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)))))), injectionSwitch.x)) + (0))))))))))))) >> _GLF_IDENTITY(int(0), int(0))))), _GLF_IDENTITY((_GLF_IDENTITY((1 << _GLF_IDENTITY(int(0), _GLF_IDENTITY(int(0), (_GLF_IDENTITY(false, (false) || false) ? _GLF_FUZZED(60951) : _GLF_IDENTITY(int(_GLF_IDENTITY(_GLF_IDENTITY(0, ~ (~ (_GLF_IDENTITY(0, int(_GLF_ZERO(0.0, injectionSwitch.x)) + (0))))), ~ (~ (_GLF_IDENTITY(0, ~ (~ (_GLF_IDENTITY(0, int(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch))) * vec2(1.0, 1.0)).x)) + (0))))))))), ~ (~ (int(_GLF_IDENTITY(0, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(0, int(_GLF_ZERO(0.0, injectionSwitch.x)) + (0))), 0 | (~ (_GLF_IDENTITY(0, int(_GLF_ZERO(0.0, injectionSwitch.x)) + (0))))))))))))))) >> _GLF_IDENTITY(int(0), int(0)), int(int((1 << _GLF_IDENTITY(int(0), _GLF_IDENTITY(int(0), (_GLF_IDENTITY(false, (false) || false) ? _GLF_FUZZED(60951) : _GLF_IDENTITY(int(_GLF_IDENTITY(_GLF_IDENTITY(0, ~ (~ (_GLF_IDENTITY(0, int(_GLF_ZERO(0.0, injectionSwitch.x)) + (0))))), ~ (~ (_GLF_IDENTITY(0, ~ (~ (_GLF_IDENTITY(0, int(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch))) * vec2(1.0, 1.0)).x)) + (0))))))))), ~ (~ (int(_GLF_IDENTITY(0, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(0, int(_GLF_ZERO(0.0, injectionSwitch.x)) + (0))), 0 | (~ (_GLF_IDENTITY(0, int(_GLF_ZERO(0.0, injectionSwitch.x)) + (0))))))))))))))) >> _GLF_IDENTITY(int(0), int(0)))))), ~ (_GLF_IDENTITY(~ ((_GLF_IDENTITY((1 << _GLF_IDENTITY(int(0), _GLF_IDENTITY(int(0), (_GLF_IDENTITY(false, (false) || false) ? _GLF_FUZZED(60951) : _GLF_IDENTITY(int(_GLF_IDENTITY(_GLF_IDENTITY(0, ~ (~ (_GLF_IDENTITY(0, int(_GLF_ZERO(0.0, injectionSwitch.x)) + (0))))), ~ (~ (_GLF_IDENTITY(0, ~ (~ (_GLF_IDENTITY(0, int(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch))) * vec2(1.0, 1.0)).x)) + (0))))))))), ~ (~ (int(_GLF_IDENTITY(0, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(0, int(_GLF_ZERO(0.0, injectionSwitch.x)) + (0))), 0 | (~ (_GLF_IDENTITY(0, int(_GLF_ZERO(0.0, injectionSwitch.x)) + (0))))))))))))))) >> _GLF_IDENTITY(int(0), int(0)), int(int((1 << _GLF_IDENTITY(int(0), _GLF_IDENTITY(int(0), (_GLF_IDENTITY(false, (false) || false) ? _GLF_FUZZED(60951) : _GLF_IDENTITY(int(_GLF_IDENTITY(_GLF_IDENTITY(0, ~ (~ (_GLF_IDENTITY(0, int(_GLF_ZERO(0.0, injectionSwitch.x)) + (0))))), ~ (~ (_GLF_IDENTITY(0, ~ (~ (_GLF_IDENTITY(0, int(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch))) * vec2(1.0, 1.0)).x)) + (0))))))))), ~ (~ (int(_GLF_IDENTITY(0, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(0, int(_GLF_ZERO(0.0, injectionSwitch.x)) + (0))), 0 | (~ (_GLF_IDENTITY(0, int(_GLF_ZERO(0.0, injectionSwitch.x)) + (0))))))))))))))) >> _GLF_IDENTITY(int(0), int(0))))))), (~ ((_GLF_IDENTITY((1 << _GLF_IDENTITY(int(0), _GLF_IDENTITY(int(0), (_GLF_IDENTITY(false, (false) || false) ? _GLF_FUZZED(60951) : _GLF_IDENTITY(int(_GLF_IDENTITY(_GLF_IDENTITY(0, ~ (~ (_GLF_IDENTITY(0, int(_GLF_ZERO(0.0, injectionSwitch.x)) + (0))))), ~ (~ (_GLF_IDENTITY(0, ~ (~ (_GLF_IDENTITY(0, int(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch))) * vec2(1.0, 1.0)).x)) + (0))))))))), ~ (~ (int(_GLF_IDENTITY(0, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(0, int(_GLF_ZERO(0.0, injectionSwitch.x)) + (0))), 0 | (~ (_GLF_IDENTITY(0, int(_GLF_ZERO(0.0, injectionSwitch.x)) + (0))))))))))))))) >> _GLF_IDENTITY(int(0), int(0)), int(int((1 << _GLF_IDENTITY(int(0), _GLF_IDENTITY(int(0), (_GLF_IDENTITY(false, (false) || false) ? _GLF_FUZZED(60951) : _GLF_IDENTITY(int(_GLF_IDENTITY(_GLF_IDENTITY(0, ~ (~ (_GLF_IDENTITY(0, int(_GLF_ZERO(0.0, injectionSwitch.x)) + (0))))), ~ (~ (_GLF_IDENTITY(0, ~ (~ (_GLF_IDENTITY(0, int(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch))) * vec2(1.0, 1.0)).x)) + (0))))))))), ~ (~ (int(_GLF_IDENTITY(0, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(0, int(_GLF_ZERO(0.0, injectionSwitch.x)) + (0))), 0 | (~ (_GLF_IDENTITY(0, int(_GLF_ZERO(0.0, injectionSwitch.x)) + (0))))))))))))))) >> _GLF_IDENTITY(int(0), int(0)))))))) * 1)))))), false || (_GLF_WRAPPED_LOOP(_injected_loop_counter < _GLF_IDENTITY(((_GLF_IDENTITY(1, clamp(1, 1, _GLF_IDENTITY(_GLF_IDENTITY(1, max(1, 1)), (_GLF_IDENTITY(1, max(1, 1))) / int(_GLF_ONE(1.0, injectionSwitch.y))))) << _GLF_IDENTITY(int(0), _GLF_IDENTITY(int(0), (_GLF_IDENTITY(false ? _GLF_FUZZED(60951) : _GLF_IDENTITY(_GLF_IDENTITY(int(_GLF_IDENTITY(0, ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(0, int(ivec2(0, 1))), _GLF_IDENTITY(int(_GLF_ZERO(0.0, injectionSwitch.x)) + _GLF_IDENTITY((0), (0 << _GLF_IDENTITY(int(4), int(4))) | ((0))), (int(_GLF_ZERO(0.0, injectionSwitch.x)) + _GLF_IDENTITY((0), (0 << _GLF_IDENTITY(int(4), int(4))) | ((0)))) | (_GLF_IDENTITY(int(_GLF_ZERO(0.0, injectionSwitch.x)) + _GLF_IDENTITY((0), (0 << _GLF_IDENTITY(int(4), int(4))) | ((0))), (int(_GLF_ZERO(0.0, injectionSwitch.x)) + _GLF_IDENTITY((0), (0 << _GLF_IDENTITY(int(4), int(4))) | ((0)))) ^ 0)))))))), max(int(_GLF_IDENTITY(0, ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(0, int(ivec2(0, 1))), _GLF_IDENTITY(int(_GLF_ZERO(0.0, injectionSwitch.x)) + _GLF_IDENTITY((0), (0 << _GLF_IDENTITY(int(4), int(4))) | ((0))), (int(_GLF_ZERO(0.0, injectionSwitch.x)) + _GLF_IDENTITY((0), (0 << _GLF_IDENTITY(int(4), int(4))) | ((0)))) | (_GLF_IDENTITY(int(_GLF_ZERO(0.0, injectionSwitch.x)) + _GLF_IDENTITY((0), (0 << _GLF_IDENTITY(int(4), int(4))) | ((0))), (int(_GLF_ZERO(0.0, injectionSwitch.x)) + _GLF_IDENTITY((0), (0 << _GLF_IDENTITY(int(4), int(4))) | ((0)))) ^ 0)))))))), _GLF_IDENTITY(int(_GLF_IDENTITY(0, ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(0, int(ivec2(0, 1))), _GLF_IDENTITY(int(_GLF_ZERO(0.0, injectionSwitch.x)) + _GLF_IDENTITY((0), (0 << _GLF_IDENTITY(int(4), int(4))) | ((0))), (int(_GLF_ZERO(0.0, injectionSwitch.x)) + _GLF_IDENTITY((0), (0 << _GLF_IDENTITY(int(4), int(4))) | ((0)))) | (_GLF_IDENTITY(int(_GLF_ZERO(0.0, injectionSwitch.x)) + _GLF_IDENTITY((0), (0 << _GLF_IDENTITY(int(4), int(4))) | ((0))), (int(_GLF_ZERO(0.0, injectionSwitch.x)) + _GLF_IDENTITY((0), (0 << _GLF_IDENTITY(int(4), int(4))) | ((0)))) ^ 0)))))))), int(ivec4(int(_GLF_IDENTITY(0, ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(0, int(ivec2(0, 1))), _GLF_IDENTITY(int(_GLF_ZERO(0.0, injectionSwitch.x)) + _GLF_IDENTITY((0), (0 << _GLF_IDENTITY(int(4), int(4))) | ((0))), (int(_GLF_ZERO(0.0, injectionSwitch.x)) + _GLF_IDENTITY((0), (0 << _GLF_IDENTITY(int(4), int(4))) | ((0)))) | (_GLF_IDENTITY(int(_GLF_ZERO(0.0, injectionSwitch.x)) + _GLF_IDENTITY((0), (0 << _GLF_IDENTITY(int(4), int(4))) | ((0))), (int(_GLF_ZERO(0.0, injectionSwitch.x)) + _GLF_IDENTITY((0), (0 << _GLF_IDENTITY(int(4), int(4))) | ((0)))) ^ 0)))))))), ((1 << _GLF_IDENTITY(int(1), int(1))) >> _GLF_IDENTITY(int(1), int(1))), (0 | 0), ((1 << _GLF_IDENTITY(int(0), int(0))) >> _GLF_IDENTITY(int(0), int(0)))))))), ~ (~ _GLF_IDENTITY((int(_GLF_IDENTITY(0, ~ (_GLF_IDENTITY(_GLF_IDENTITY(~ (_GLF_IDENTITY(0, int(_GLF_ZERO(0.0, injectionSwitch.x)) + (0))), (~ (_GLF_IDENTITY(0, int(_GLF_ZERO(0.0, injectionSwitch.x)) + (0)))) >> 0), clamp(~ (_GLF_IDENTITY(0, int(_GLF_ZERO(0.0, injectionSwitch.x)) + (0))), ~ _GLF_IDENTITY((_GLF_IDENTITY(0, int(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(-2.0))))) + (0))), (_GLF_IDENTITY((_GLF_IDENTITY(0, int(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(-2.0))))) + (0))), 0 ^ ((_GLF_IDENTITY(0, int(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(-2.0))))) + (_GLF_IDENTITY(0, _GLF_IDENTITY(int(ivec3(0, 1, 0)), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(int(ivec3(0, 1, 0)), max(int(ivec3(0, 1, 0)), int(ivec3(0, 1, 0))))), (~ (_GLF_IDENTITY(int(ivec3(0, 1, 0)), max(int(ivec3(0, 1, 0)), int(ivec3(0, 1, 0)))))) / 1)))))))))) ^ 0), ~ (_GLF_IDENTITY(0, int(_GLF_ZERO(_GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED((41498 , -41.84)))), _GLF_IDENTITY(0.0, _GLF_ZERO(0.0, injectionSwitch.x) + (0.0)), 0.0)), injectionSwitch.x)) + (0))))))))), (_GLF_IDENTITY((int(_GLF_IDENTITY(0, ~ (_GLF_IDENTITY(_GLF_IDENTITY(~ (_GLF_IDENTITY(0, int(_GLF_ZERO(0.0, injectionSwitch.x)) + (0))), (~ (_GLF_IDENTITY(0, int(_GLF_ZERO(0.0, injectionSwitch.x)) + (0)))) >> 0), clamp(~ (_GLF_IDENTITY(0, int(_GLF_ZERO(0.0, injectionSwitch.x)) + (0))), ~ _GLF_IDENTITY((_GLF_IDENTITY(0, int(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(-2.0))))) + (0))), (_GLF_IDENTITY((_GLF_IDENTITY(0, int(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(-2.0))))) + (0))), 0 ^ ((_GLF_IDENTITY(0, int(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(-2.0))))) + (_GLF_IDENTITY(0, _GLF_IDENTITY(int(ivec3(0, 1, 0)), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(int(ivec3(0, 1, 0)), max(int(ivec3(0, 1, 0)), int(ivec3(0, 1, 0))))), (~ (_GLF_IDENTITY(int(ivec3(0, 1, 0)), max(int(ivec3(0, 1, 0)), int(ivec3(0, 1, 0)))))) / 1)))))))))) ^ 0), ~ (_GLF_IDENTITY(0, int(_GLF_ZERO(_GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED((41498 , -41.84)))), _GLF_IDENTITY(0.0, _GLF_ZERO(0.0, injectionSwitch.x) + (0.0)), 0.0)), injectionSwitch.x)) + (0))))))))), int(ivec3((int(_GLF_IDENTITY(0, ~ (_GLF_IDENTITY(_GLF_IDENTITY(~ (_GLF_IDENTITY(0, int(_GLF_ZERO(0.0, injectionSwitch.x)) + (0))), (~ (_GLF_IDENTITY(0, int(_GLF_ZERO(0.0, injectionSwitch.x)) + (0)))) >> 0), clamp(~ (_GLF_IDENTITY(0, int(_GLF_ZERO(0.0, injectionSwitch.x)) + (0))), ~ _GLF_IDENTITY((_GLF_IDENTITY(0, int(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(-2.0))))) + (0))), (_GLF_IDENTITY((_GLF_IDENTITY(0, int(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(-2.0))))) + (0))), 0 ^ ((_GLF_IDENTITY(0, int(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(-2.0))))) + (_GLF_IDENTITY(0, _GLF_IDENTITY(int(ivec3(0, 1, 0)), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(int(ivec3(0, 1, 0)), max(int(ivec3(0, 1, 0)), int(ivec3(0, 1, 0))))), (~ (_GLF_IDENTITY(int(ivec3(0, 1, 0)), max(int(ivec3(0, 1, 0)), int(ivec3(0, 1, 0)))))) / 1)))))))))) ^ 0), ~ (_GLF_IDENTITY(0, int(_GLF_ZERO(_GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED((41498 , -41.84)))), _GLF_IDENTITY(0.0, _GLF_ZERO(0.0, injectionSwitch.x) + (0.0)), 0.0)), injectionSwitch.x)) + (0))))))))), 0, 1)))) | ((int(_GLF_IDENTITY(0, ~ (_GLF_IDENTITY(_GLF_IDENTITY(~ (_GLF_IDENTITY(0, int(_GLF_ZERO(0.0, injectionSwitch.x)) + (0))), (~ (_GLF_IDENTITY(0, int(_GLF_ZERO(0.0, injectionSwitch.x)) + (0)))) >> 0), clamp(~ (_GLF_IDENTITY(0, int(_GLF_ZERO(0.0, injectionSwitch.x)) + (0))), ~ _GLF_IDENTITY((_GLF_IDENTITY(0, int(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(-2.0))))) + (0))), (_GLF_IDENTITY((_GLF_IDENTITY(0, int(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(-2.0))))) + (0))), 0 ^ ((_GLF_IDENTITY(0, int(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(-2.0))))) + (_GLF_IDENTITY(0, _GLF_IDENTITY(int(ivec3(0, 1, 0)), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(int(ivec3(0, 1, 0)), max(int(ivec3(0, 1, 0)), int(ivec3(0, 1, 0))))), (~ (_GLF_IDENTITY(int(ivec3(0, 1, 0)), max(int(ivec3(0, 1, 0)), int(ivec3(0, 1, 0)))))) / 1)))))))))) ^ 0), ~ (_GLF_IDENTITY(0, int(_GLF_ZERO(_GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED((41498 , -41.84)))), _GLF_IDENTITY(0.0, _GLF_ZERO(0.0, injectionSwitch.x) + (0.0)), 0.0)), injectionSwitch.x)) + (0))))))))))))), 0 ^ (_GLF_IDENTITY(false ? _GLF_FUZZED(60951) : _GLF_IDENTITY(_GLF_IDENTITY(int(_GLF_IDENTITY(0, ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(0, int(ivec2(0, 1))), _GLF_IDENTITY(int(_GLF_ZERO(0.0, injectionSwitch.x)) + _GLF_IDENTITY((0), (0 << _GLF_IDENTITY(int(4), int(4))) | ((0))), (int(_GLF_ZERO(0.0, injectionSwitch.x)) + _GLF_IDENTITY((0), (0 << _GLF_IDENTITY(int(4), int(4))) | ((0)))) | (_GLF_IDENTITY(int(_GLF_ZERO(0.0, injectionSwitch.x)) + _GLF_IDENTITY((0), (0 << _GLF_IDENTITY(int(4), int(4))) | ((0))), (int(_GLF_ZERO(0.0, injectionSwitch.x)) + _GLF_IDENTITY((0), (0 << _GLF_IDENTITY(int(4), int(4))) | ((0)))) ^ 0)))))))), max(int(_GLF_IDENTITY(0, ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(0, int(ivec2(0, 1))), _GLF_IDENTITY(int(_GLF_ZERO(0.0, injectionSwitch.x)) + _GLF_IDENTITY((0), (0 << _GLF_IDENTITY(int(4), int(4))) | ((0))), (int(_GLF_ZERO(0.0, injectionSwitch.x)) + _GLF_IDENTITY((0), (0 << _GLF_IDENTITY(int(4), int(4))) | ((0)))) | (_GLF_IDENTITY(int(_GLF_ZERO(0.0, injectionSwitch.x)) + _GLF_IDENTITY((0), (0 << _GLF_IDENTITY(int(4), int(4))) | ((0))), (int(_GLF_ZERO(0.0, injectionSwitch.x)) + _GLF_IDENTITY((0), (0 << _GLF_IDENTITY(int(4), int(4))) | ((0)))) ^ 0)))))))), _GLF_IDENTITY(int(_GLF_IDENTITY(0, ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(0, int(ivec2(0, 1))), _GLF_IDENTITY(int(_GLF_ZERO(0.0, injectionSwitch.x)) + _GLF_IDENTITY((0), (0 << _GLF_IDENTITY(int(4), int(4))) | ((0))), (int(_GLF_ZERO(0.0, injectionSwitch.x)) + _GLF_IDENTITY((0), (0 << _GLF_IDENTITY(int(4), int(4))) | ((0)))) | (_GLF_IDENTITY(int(_GLF_ZERO(0.0, injectionSwitch.x)) + _GLF_IDENTITY((0), (0 << _GLF_IDENTITY(int(4), int(4))) | ((0))), (int(_GLF_ZERO(0.0, injectionSwitch.x)) + _GLF_IDENTITY((0), (0 << _GLF_IDENTITY(int(4), int(4))) | ((0)))) ^ 0)))))))), int(ivec4(int(_GLF_IDENTITY(0, ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(0, int(ivec2(0, 1))), _GLF_IDENTITY(int(_GLF_ZERO(0.0, injectionSwitch.x)) + _GLF_IDENTITY((0), (0 << _GLF_IDENTITY(int(4), int(4))) | ((0))), (int(_GLF_ZERO(0.0, injectionSwitch.x)) + _GLF_IDENTITY((0), (0 << _GLF_IDENTITY(int(4), int(4))) | ((0)))) | (_GLF_IDENTITY(int(_GLF_ZERO(0.0, injectionSwitch.x)) + _GLF_IDENTITY((0), (0 << _GLF_IDENTITY(int(4), int(4))) | ((0))), (int(_GLF_ZERO(0.0, injectionSwitch.x)) + _GLF_IDENTITY((0), (0 << _GLF_IDENTITY(int(4), int(4))) | ((0)))) ^ 0)))))))), ((1 << _GLF_IDENTITY(int(1), int(1))) >> _GLF_IDENTITY(int(1), int(1))), (0 | 0), ((1 << _GLF_IDENTITY(int(0), int(0))) >> _GLF_IDENTITY(int(0), int(0)))))))), ~ (~ _GLF_IDENTITY((int(_GLF_IDENTITY(0, ~ (_GLF_IDENTITY(_GLF_IDENTITY(~ (_GLF_IDENTITY(0, int(_GLF_ZERO(0.0, injectionSwitch.x)) + (0))), (~ (_GLF_IDENTITY(0, int(_GLF_ZERO(0.0, injectionSwitch.x)) + (0)))) >> 0), clamp(~ (_GLF_IDENTITY(0, int(_GLF_ZERO(0.0, injectionSwitch.x)) + (0))), ~ _GLF_IDENTITY((_GLF_IDENTITY(0, int(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(-2.0))))) + (0))), (_GLF_IDENTITY((_GLF_IDENTITY(0, int(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(-2.0))))) + (0))), 0 ^ ((_GLF_IDENTITY(0, int(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(-2.0))))) + (_GLF_IDENTITY(0, _GLF_IDENTITY(int(ivec3(0, 1, 0)), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(int(ivec3(0, 1, 0)), max(int(ivec3(0, 1, 0)), int(ivec3(0, 1, 0))))), (~ (_GLF_IDENTITY(int(ivec3(0, 1, 0)), max(int(ivec3(0, 1, 0)), int(ivec3(0, 1, 0)))))) / 1)))))))))) ^ 0), ~ (_GLF_IDENTITY(0, int(_GLF_ZERO(_GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED((41498 , -41.84)))), _GLF_IDENTITY(0.0, _GLF_ZERO(0.0, injectionSwitch.x) + (0.0)), 0.0)), injectionSwitch.x)) + (0))))))))), (_GLF_IDENTITY((int(_GLF_IDENTITY(0, ~ (_GLF_IDENTITY(_GLF_IDENTITY(~ (_GLF_IDENTITY(0, int(_GLF_ZERO(0.0, injectionSwitch.x)) + (0))), (~ (_GLF_IDENTITY(0, int(_GLF_ZERO(0.0, injectionSwitch.x)) + (0)))) >> 0), clamp(~ (_GLF_IDENTITY(0, int(_GLF_ZERO(0.0, injectionSwitch.x)) + (0))), ~ _GLF_IDENTITY((_GLF_IDENTITY(0, int(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(-2.0))))) + (0))), (_GLF_IDENTITY((_GLF_IDENTITY(0, int(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(-2.0))))) + (0))), 0 ^ ((_GLF_IDENTITY(0, int(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(-2.0))))) + (_GLF_IDENTITY(0, _GLF_IDENTITY(int(ivec3(0, 1, 0)), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(int(ivec3(0, 1, 0)), max(int(ivec3(0, 1, 0)), int(ivec3(0, 1, 0))))), (~ (_GLF_IDENTITY(int(ivec3(0, 1, 0)), max(int(ivec3(0, 1, 0)), int(ivec3(0, 1, 0)))))) / 1)))))))))) ^ 0), ~ (_GLF_IDENTITY(0, int(_GLF_ZERO(_GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED((41498 , -41.84)))), _GLF_IDENTITY(0.0, _GLF_ZERO(0.0, injectionSwitch.x) + (0.0)), 0.0)), injectionSwitch.x)) + (0))))))))), int(ivec3((int(_GLF_IDENTITY(0, ~ (_GLF_IDENTITY(_GLF_IDENTITY(~ (_GLF_IDENTITY(0, int(_GLF_ZERO(0.0, injectionSwitch.x)) + (0))), (~ (_GLF_IDENTITY(0, int(_GLF_ZERO(0.0, injectionSwitch.x)) + (0)))) >> 0), clamp(~ (_GLF_IDENTITY(0, int(_GLF_ZERO(0.0, injectionSwitch.x)) + (0))), ~ _GLF_IDENTITY((_GLF_IDENTITY(0, int(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(-2.0))))) + (0))), (_GLF_IDENTITY((_GLF_IDENTITY(0, int(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(-2.0))))) + (0))), 0 ^ ((_GLF_IDENTITY(0, int(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(-2.0))))) + (_GLF_IDENTITY(0, _GLF_IDENTITY(int(ivec3(0, 1, 0)), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(int(ivec3(0, 1, 0)), max(int(ivec3(0, 1, 0)), int(ivec3(0, 1, 0))))), (~ (_GLF_IDENTITY(int(ivec3(0, 1, 0)), max(int(ivec3(0, 1, 0)), int(ivec3(0, 1, 0)))))) / 1)))))))))) ^ 0), ~ (_GLF_IDENTITY(0, int(_GLF_ZERO(_GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED((41498 , -41.84)))), _GLF_IDENTITY(0.0, _GLF_ZERO(0.0, injectionSwitch.x) + (0.0)), 0.0)), injectionSwitch.x)) + (0))))))))), 0, 1)))) | ((int(_GLF_IDENTITY(0, ~ (_GLF_IDENTITY(_GLF_IDENTITY(~ (_GLF_IDENTITY(0, int(_GLF_ZERO(0.0, injectionSwitch.x)) + (0))), (~ (_GLF_IDENTITY(0, int(_GLF_ZERO(0.0, injectionSwitch.x)) + (0)))) >> 0), clamp(~ (_GLF_IDENTITY(0, int(_GLF_ZERO(0.0, injectionSwitch.x)) + (0))), ~ _GLF_IDENTITY((_GLF_IDENTITY(0, int(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(-2.0))))) + (0))), (_GLF_IDENTITY((_GLF_IDENTITY(0, int(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(-2.0))))) + (0))), 0 ^ ((_GLF_IDENTITY(0, int(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(-2.0))))) + (_GLF_IDENTITY(0, _GLF_IDENTITY(int(ivec3(0, 1, 0)), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(int(ivec3(0, 1, 0)), max(int(ivec3(0, 1, 0)), int(ivec3(0, 1, 0))))), (~ (_GLF_IDENTITY(int(ivec3(0, 1, 0)), max(int(ivec3(0, 1, 0)), int(ivec3(0, 1, 0)))))) / 1)))))))))) ^ 0), ~ (_GLF_IDENTITY(0, int(_GLF_ZERO(_GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED((41498 , -41.84)))), _GLF_IDENTITY(0.0, _GLF_ZERO(0.0, injectionSwitch.x) + (0.0)), 0.0)), injectionSwitch.x)) + (0))))))))))))), (false ? _GLF_FUZZED(60951) : _GLF_IDENTITY(_GLF_IDENTITY(int(_GLF_IDENTITY(0, ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(0, int(ivec2(0, 1))), _GLF_IDENTITY(int(_GLF_ZERO(0.0, injectionSwitch.x)) + _GLF_IDENTITY((0), (0 << _GLF_IDENTITY(int(4), int(4))) | ((0))), (int(_GLF_ZERO(0.0, injectionSwitch.x)) + _GLF_IDENTITY((0), (0 << _GLF_IDENTITY(int(4), int(4))) | ((0)))) | (_GLF_IDENTITY(int(_GLF_ZERO(0.0, injectionSwitch.x)) + _GLF_IDENTITY((0), (0 << _GLF_IDENTITY(int(4), int(4))) | ((0))), (int(_GLF_ZERO(0.0, injectionSwitch.x)) + _GLF_IDENTITY((0), (0 << _GLF_IDENTITY(int(4), int(4))) | ((0)))) ^ 0)))))))), max(int(_GLF_IDENTITY(0, ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(0, int(ivec2(0, 1))), _GLF_IDENTITY(int(_GLF_ZERO(0.0, injectionSwitch.x)) + _GLF_IDENTITY((0), (0 << _GLF_IDENTITY(int(4), int(4))) | ((0))), (int(_GLF_ZERO(0.0, injectionSwitch.x)) + _GLF_IDENTITY((0), (0 << _GLF_IDENTITY(int(4), int(4))) | ((0)))) | (_GLF_IDENTITY(int(_GLF_ZERO(0.0, injectionSwitch.x)) + _GLF_IDENTITY((0), (0 << _GLF_IDENTITY(int(4), int(4))) | ((0))), (int(_GLF_ZERO(0.0, injectionSwitch.x)) + _GLF_IDENTITY((0), (0 << _GLF_IDENTITY(int(4), int(4))) | ((0)))) ^ 0)))))))), _GLF_IDENTITY(int(_GLF_IDENTITY(0, ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(0, int(ivec2(0, 1))), _GLF_IDENTITY(int(_GLF_ZERO(0.0, injectionSwitch.x)) + _GLF_IDENTITY((0), (0 << _GLF_IDENTITY(int(4), int(4))) | ((0))), (int(_GLF_ZERO(0.0, injectionSwitch.x)) + _GLF_IDENTITY((0), (0 << _GLF_IDENTITY(int(4), int(4))) | ((0)))) | (_GLF_IDENTITY(int(_GLF_ZERO(0.0, injectionSwitch.x)) + _GLF_IDENTITY((0), (0 << _GLF_IDENTITY(int(4), int(4))) | ((0))), (int(_GLF_ZERO(0.0, injectionSwitch.x)) + _GLF_IDENTITY((0), (0 << _GLF_IDENTITY(int(4), int(4))) | ((0)))) ^ 0)))))))), int(ivec4(int(_GLF_IDENTITY(0, ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(0, int(ivec2(0, 1))), _GLF_IDENTITY(int(_GLF_ZERO(0.0, injectionSwitch.x)) + _GLF_IDENTITY((0), (0 << _GLF_IDENTITY(int(4), int(4))) | ((0))), (int(_GLF_ZERO(0.0, injectionSwitch.x)) + _GLF_IDENTITY((0), (0 << _GLF_IDENTITY(int(4), int(4))) | ((0)))) | (_GLF_IDENTITY(int(_GLF_ZERO(0.0, injectionSwitch.x)) + _GLF_IDENTITY((0), (0 << _GLF_IDENTITY(int(4), int(4))) | ((0))), (int(_GLF_ZERO(0.0, injectionSwitch.x)) + _GLF_IDENTITY((0), (0 << _GLF_IDENTITY(int(4), int(4))) | ((0)))) ^ 0)))))))), ((1 << _GLF_IDENTITY(int(1), int(1))) >> _GLF_IDENTITY(int(1), int(1))), (0 | 0), ((1 << _GLF_IDENTITY(int(0), int(0))) >> _GLF_IDENTITY(int(0), int(0)))))))), ~ (~ _GLF_IDENTITY((int(_GLF_IDENTITY(0, ~ (_GLF_IDENTITY(_GLF_IDENTITY(~ (_GLF_IDENTITY(0, int(_GLF_ZERO(0.0, injectionSwitch.x)) + (0))), (~ (_GLF_IDENTITY(0, int(_GLF_ZERO(0.0, injectionSwitch.x)) + (0)))) >> 0), clamp(~ (_GLF_IDENTITY(0, int(_GLF_ZERO(0.0, injectionSwitch.x)) + (0))), ~ _GLF_IDENTITY((_GLF_IDENTITY(0, int(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(-2.0))))) + (0))), (_GLF_IDENTITY((_GLF_IDENTITY(0, int(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(-2.0))))) + (0))), 0 ^ ((_GLF_IDENTITY(0, int(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(-2.0))))) + (_GLF_IDENTITY(0, _GLF_IDENTITY(int(ivec3(0, 1, 0)), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(int(ivec3(0, 1, 0)), max(int(ivec3(0, 1, 0)), int(ivec3(0, 1, 0))))), (~ (_GLF_IDENTITY(int(ivec3(0, 1, 0)), max(int(ivec3(0, 1, 0)), int(ivec3(0, 1, 0)))))) / 1)))))))))) ^ 0), ~ (_GLF_IDENTITY(0, int(_GLF_ZERO(_GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED((41498 , -41.84)))), _GLF_IDENTITY(0.0, _GLF_ZERO(0.0, injectionSwitch.x) + (0.0)), 0.0)), injectionSwitch.x)) + (0))))))))), (_GLF_IDENTITY((int(_GLF_IDENTITY(0, ~ (_GLF_IDENTITY(_GLF_IDENTITY(~ (_GLF_IDENTITY(0, int(_GLF_ZERO(0.0, injectionSwitch.x)) + (0))), (~ (_GLF_IDENTITY(0, int(_GLF_ZERO(0.0, injectionSwitch.x)) + (0)))) >> 0), clamp(~ (_GLF_IDENTITY(0, int(_GLF_ZERO(0.0, injectionSwitch.x)) + (0))), ~ _GLF_IDENTITY((_GLF_IDENTITY(0, int(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(-2.0))))) + (0))), (_GLF_IDENTITY((_GLF_IDENTITY(0, int(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(-2.0))))) + (0))), 0 ^ ((_GLF_IDENTITY(0, int(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(-2.0))))) + (_GLF_IDENTITY(0, _GLF_IDENTITY(int(ivec3(0, 1, 0)), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(int(ivec3(0, 1, 0)), max(int(ivec3(0, 1, 0)), int(ivec3(0, 1, 0))))), (~ (_GLF_IDENTITY(int(ivec3(0, 1, 0)), max(int(ivec3(0, 1, 0)), int(ivec3(0, 1, 0)))))) / 1)))))))))) ^ 0), ~ (_GLF_IDENTITY(0, int(_GLF_ZERO(_GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED((41498 , -41.84)))), _GLF_IDENTITY(0.0, _GLF_ZERO(0.0, injectionSwitch.x) + (0.0)), 0.0)), injectionSwitch.x)) + (0))))))))), int(ivec3((int(_GLF_IDENTITY(0, ~ (_GLF_IDENTITY(_GLF_IDENTITY(~ (_GLF_IDENTITY(0, int(_GLF_ZERO(0.0, injectionSwitch.x)) + (0))), (~ (_GLF_IDENTITY(0, int(_GLF_ZERO(0.0, injectionSwitch.x)) + (0)))) >> 0), clamp(~ (_GLF_IDENTITY(0, int(_GLF_ZERO(0.0, injectionSwitch.x)) + (0))), ~ _GLF_IDENTITY((_GLF_IDENTITY(0, int(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(-2.0))))) + (0))), (_GLF_IDENTITY((_GLF_IDENTITY(0, int(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(-2.0))))) + (0))), 0 ^ ((_GLF_IDENTITY(0, int(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(-2.0))))) + (_GLF_IDENTITY(0, _GLF_IDENTITY(int(ivec3(0, 1, 0)), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(int(ivec3(0, 1, 0)), max(int(ivec3(0, 1, 0)), int(ivec3(0, 1, 0))))), (~ (_GLF_IDENTITY(int(ivec3(0, 1, 0)), max(int(ivec3(0, 1, 0)), int(ivec3(0, 1, 0)))))) / 1)))))))))) ^ 0), ~ (_GLF_IDENTITY(0, int(_GLF_ZERO(_GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED((41498 , -41.84)))), _GLF_IDENTITY(0.0, _GLF_ZERO(0.0, injectionSwitch.x) + (0.0)), 0.0)), injectionSwitch.x)) + (0))))))))), 0, 1)))) | ((int(_GLF_IDENTITY(0, ~ (_GLF_IDENTITY(_GLF_IDENTITY(~ (_GLF_IDENTITY(0, int(_GLF_ZERO(0.0, injectionSwitch.x)) + (0))), (~ (_GLF_IDENTITY(0, int(_GLF_ZERO(0.0, injectionSwitch.x)) + (0)))) >> 0), clamp(~ (_GLF_IDENTITY(0, int(_GLF_ZERO(0.0, injectionSwitch.x)) + (0))), ~ _GLF_IDENTITY((_GLF_IDENTITY(0, int(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(-2.0))))) + (0))), (_GLF_IDENTITY((_GLF_IDENTITY(0, int(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(-2.0))))) + (0))), 0 ^ ((_GLF_IDENTITY(0, int(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(-2.0))))) + (_GLF_IDENTITY(0, _GLF_IDENTITY(int(ivec3(0, 1, 0)), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(int(ivec3(0, 1, 0)), max(int(ivec3(0, 1, 0)), int(ivec3(0, 1, 0))))), (~ (_GLF_IDENTITY(int(ivec3(0, 1, 0)), max(int(ivec3(0, 1, 0)), int(ivec3(0, 1, 0)))))) / 1)))))))))) ^ 0), ~ (_GLF_IDENTITY(0, int(_GLF_ZERO(_GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED((41498 , -41.84)))), _GLF_IDENTITY(0.0, _GLF_ZERO(0.0, injectionSwitch.x) + (0.0)), 0.0)), injectionSwitch.x)) + (0)))))))))))))) ^ 0))))))) >> _GLF_IDENTITY(int(0), int(0))), min(_GLF_IDENTITY(((1 << _GLF_IDENTITY(int(0), _GLF_IDENTITY(int(0), (false ? _GLF_FUZZED(60951) : _GLF_IDENTITY(int(_GLF_IDENTITY(0, ~ (~ (_GLF_IDENTITY(0, int(_GLF_ZERO(0.0, injectionSwitch.x)) + (0)))))), ~ (~ (int(_GLF_IDENTITY(_GLF_IDENTITY(0, (0) | 0), ~ (~ (_GLF_IDENTITY(0, int(_GLF_IDENTITY(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x), max(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x), _GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x)))) + _GLF_IDENTITY((0), _GLF_IDENTITY(min((0), _GLF_IDENTITY((0), max((0), (0)))), (min((0), _GLF_IDENTITY((0), max((0), (0))))) | (_GLF_IDENTITY(min((0), _GLF_IDENTITY((0), max((0), (0)))), (min((0), _GLF_IDENTITY((0), max((0), (0))))) << 0)))))))))))))))) >> _GLF_IDENTITY(int(0), int(0))), clamp((_GLF_IDENTITY(_GLF_IDENTITY((1 << _GLF_IDENTITY(int(0), _GLF_IDENTITY(_GLF_IDENTITY(int(0), _GLF_IDENTITY((int(0)) ^ 0, max((int(0)) ^ 0, (int(0)) ^ 0))), (false ? _GLF_FUZZED(60951) : _GLF_IDENTITY(int(_GLF_IDENTITY(0, ~ (~ (_GLF_IDENTITY(0, int(_GLF_ZERO(0.0, injectionSwitch.x)) + _GLF_IDENTITY((0), ~ (_GLF_IDENTITY(~ ((0)), (~ _GLF_IDENTITY(((0)), _GLF_IDENTITY(int(_GLF_IDENTITY(ivec2(((0)), 1), max(ivec2(((0)), 1), ivec2(((0)), 1)))), ~ (~ (int(_GLF_IDENTITY(ivec2(((0)), 1), max(ivec2(((0)), 1), ivec2(((0)), 1))))))))) * 1)))))))), ~ (~ (int(_GLF_IDENTITY(0, ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(0, int(_GLF_ZERO(0.0, injectionSwitch.x)) + (0)), (_GLF_IDENTITY(0, int(_GLF_ZERO(0.0, injectionSwitch.x)) + (0))) << 0)))))))))))), ((1 << _GLF_IDENTITY(int(0), _GLF_IDENTITY(_GLF_IDENTITY(int(0), _GLF_IDENTITY((int(0)) ^ 0, max((int(0)) ^ 0, (int(0)) ^ 0))), (false ? _GLF_FUZZED(60951) : _GLF_IDENTITY(int(_GLF_IDENTITY(0, ~ (~ (_GLF_IDENTITY(0, int(_GLF_ZERO(0.0, injectionSwitch.x)) + _GLF_IDENTITY((0), ~ (_GLF_IDENTITY(~ ((0)), (~ _GLF_IDENTITY(((0)), _GLF_IDENTITY(int(_GLF_IDENTITY(ivec2(((0)), 1), max(ivec2(((0)), 1), ivec2(((0)), 1)))), ~ (~ (int(_GLF_IDENTITY(ivec2(((0)), 1), max(ivec2(((0)), 1), ivec2(((0)), 1))))))))) * 1)))))))), ~ (~ (int(_GLF_IDENTITY(0, ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(0, int(_GLF_ZERO(0.0, injectionSwitch.x)) + (0)), (_GLF_IDENTITY(0, int(_GLF_ZERO(0.0, injectionSwitch.x)) + (0))) << 0))))))))))))) | 0) >> _GLF_IDENTITY(_GLF_IDENTITY(int(0), min(int(0), int(0))), int(0)), (_GLF_IDENTITY((1 << _GLF_IDENTITY(int(0), _GLF_IDENTITY(int(0), (false ? _GLF_FUZZED(60951) : _GLF_IDENTITY(int(_GLF_IDENTITY(0, ~ (~ (_GLF_IDENTITY(0, int(_GLF_ZERO(0.0, injectionSwitch.x)) + (0)))))), ~ (~ (int(_GLF_IDENTITY(0, ~ _GLF_IDENTITY((~ (_GLF_IDENTITY(0, int(_GLF_ZERO(0.0, injectionSwitch.x)) + _GLF_IDENTITY((_GLF_IDENTITY(0, max(0, _GLF_IDENTITY(0, (0) / 1)))), ~ (~ ((_GLF_IDENTITY(0, max(0, _GLF_IDENTITY(0, (0) / _GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(bitfieldExtract(_injected_loop_counter, _injected_loop_counter, _injected_loop_counter)))))))))))))), clamp(_GLF_IDENTITY((~ (_GLF_IDENTITY(0, int(_GLF_ZERO(0.0, injectionSwitch.x)) + _GLF_IDENTITY((_GLF_IDENTITY(0, max(0, _GLF_IDENTITY(0, (0) / 1)))), ~ (~ ((_GLF_IDENTITY(0, max(0, _GLF_IDENTITY(0, (0) / _GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(bitfieldExtract(_injected_loop_counter, _injected_loop_counter, _injected_loop_counter)))))))))))))), max((~ (_GLF_IDENTITY(0, int(_GLF_ZERO(0.0, injectionSwitch.x)) + _GLF_IDENTITY((_GLF_IDENTITY(0, max(0, _GLF_IDENTITY(0, (0) / 1)))), ~ (~ ((_GLF_IDENTITY(0, max(0, _GLF_IDENTITY(0, (0) / _GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(bitfieldExtract(_injected_loop_counter, _injected_loop_counter, _injected_loop_counter)))))))))))))), (~ (_GLF_IDENTITY(0, int(_GLF_ZERO(0.0, injectionSwitch.x)) + _GLF_IDENTITY((_GLF_IDENTITY(0, max(0, _GLF_IDENTITY(0, (0) / 1)))), ~ (~ ((_GLF_IDENTITY(0, max(0, _GLF_IDENTITY(0, (0) / _GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(bitfieldExtract(_injected_loop_counter, _injected_loop_counter, _injected_loop_counter)))))))))))))))), _GLF_IDENTITY((~ (_GLF_IDENTITY(0, int(_GLF_ZERO(0.0, injectionSwitch.x)) + _GLF_IDENTITY((_GLF_IDENTITY(0, max(0, _GLF_IDENTITY(0, (0) / 1)))), ~ (~ ((_GLF_IDENTITY(0, max(0, _GLF_IDENTITY(0, (0) / _GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(bitfieldExtract(_injected_loop_counter, _injected_loop_counter, _injected_loop_counter)))))))))))))), max((~ (_GLF_IDENTITY(0, int(_GLF_ZERO(0.0, injectionSwitch.x)) + _GLF_IDENTITY((_GLF_IDENTITY(0, max(0, _GLF_IDENTITY(0, (0) / 1)))), ~ (~ ((_GLF_IDENTITY(0, max(0, _GLF_IDENTITY(0, (0) / _GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(bitfieldExtract(_injected_loop_counter, _injected_loop_counter, _injected_loop_counter)))))))))))))), (~ (_GLF_IDENTITY(0, int(_GLF_ZERO(0.0, injectionSwitch.x)) + _GLF_IDENTITY((_GLF_IDENTITY(0, max(0, _GLF_IDENTITY(0, (0) / 1)))), ~ (~ ((_GLF_IDENTITY(0, max(0, _GLF_IDENTITY(0, (0) / _GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(bitfieldExtract(_injected_loop_counter, _injected_loop_counter, _injected_loop_counter)))))))))))))))), (~ (_GLF_IDENTITY(0, int(_GLF_ZERO(0.0, injectionSwitch.x)) + _GLF_IDENTITY((_GLF_IDENTITY(0, max(0, _GLF_IDENTITY(0, (0) / 1)))), ~ (~ ((_GLF_IDENTITY(0, max(0, _GLF_IDENTITY(0, (0) / _GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(bitfieldExtract(_injected_loop_counter, _injected_loop_counter, _injected_loop_counter))))))))))))))))))))))))) >> _GLF_IDENTITY(int(0), int(0)), int(ivec4((1 << _GLF_IDENTITY(int(0), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(int(0), max(int(0), _GLF_IDENTITY(int(0), int(ivec4(int(0), 0, 1, 0))))), (false ? _GLF_FUZZED(60951) : _GLF_IDENTITY(int(_GLF_IDENTITY(0, ~ (~ (_GLF_IDENTITY(0, int(_GLF_ZERO(0.0, injectionSwitch.x)) + (0)))))), ~ (~ (int(_GLF_IDENTITY(0, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(0, int(_GLF_ZERO(0.0, injectionSwitch.x)) + (0))), 1 * (~ (_GLF_IDENTITY(0, int(_GLF_ZERO(0.0, injectionSwitch.x)) + (0))))))))))))), 0 | (_GLF_IDENTITY(_GLF_IDENTITY(int(0), max(int(0), _GLF_IDENTITY(int(0), int(ivec4(int(0), 0, 1, 0))))), (false ? _GLF_FUZZED(60951) : _GLF_IDENTITY(int(_GLF_IDENTITY(0, ~ (~ (_GLF_IDENTITY(0, int(_GLF_ZERO(0.0, injectionSwitch.x)) + (0)))))), ~ (~ (int(_GLF_IDENTITY(0, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(0, int(_GLF_ZERO(0.0, injectionSwitch.x)) + (0))), 1 * (~ (_GLF_IDENTITY(0, int(_GLF_ZERO(0.0, injectionSwitch.x)) + (0))))))))))))))))) >> _GLF_IDENTITY(int(0), int(0)), (0 | 0), _GLF_IDENTITY(0, (0) | (0)), 1)))) << 0)), _GLF_IDENTITY(((1 << _GLF_IDENTITY(int(0), _GLF_IDENTITY(int(0), (false ? _GLF_FUZZED(60951) : _GLF_IDENTITY(_GLF_IDENTITY(int(_GLF_IDENTITY(0, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(0, int(_GLF_ZERO(0.0, injectionSwitch.x)) + _GLF_IDENTITY((0), clamp(_GLF_IDENTITY((0), ~ (~ ((0)))), (0), (0))))), min(~ (_GLF_IDENTITY(0, int(_GLF_ZERO(0.0, injectionSwitch.x)) + _GLF_IDENTITY((0), clamp(_GLF_IDENTITY((0), ~ (~ ((0)))), (0), (0))))), ~ (_GLF_IDENTITY(0, int(_GLF_ZERO(0.0, injectionSwitch.x)) + _GLF_IDENTITY((0), clamp(_GLF_IDENTITY((0), ~ (~ ((0)))), (0), (0)))))))))), ~ (~ (_GLF_IDENTITY(int(_GLF_IDENTITY(_GLF_IDENTITY(0, ~ (~ (_GLF_IDENTITY(0, int(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), (_GLF_ZERO(0.0, injectionSwitch.x)) - 0.0)) + (0))))), 0 ^ (_GLF_IDENTITY(_GLF_IDENTITY(0, ~ (~ (_GLF_IDENTITY(0, int(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), (_GLF_ZERO(0.0, injectionSwitch.x)) - 0.0)) + (0))))), (_GLF_IDENTITY(0, ~ (~ (_GLF_IDENTITY(0, int(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), (_GLF_ZERO(0.0, injectionSwitch.x)) - 0.0)) + (0)))))) >> 0)))), clamp(_GLF_IDENTITY(int(_GLF_IDENTITY(_GLF_IDENTITY(0, ~ (~ (_GLF_IDENTITY(0, int(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), (_GLF_ZERO(0.0, injectionSwitch.x)) - 0.0)) + (0))))), 0 ^ (_GLF_IDENTITY(_GLF_IDENTITY(0, ~ (~ (_GLF_IDENTITY(0, int(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), (_GLF_ZERO(0.0, injectionSwitch.x)) - 0.0)) + (0))))), (_GLF_IDENTITY(0, ~ (~ (_GLF_IDENTITY(0, int(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), (_GLF_ZERO(0.0, injectionSwitch.x)) - 0.0)) + (0)))))) >> 0)))), (int(_GLF_IDENTITY(_GLF_IDENTITY(0, ~ (~ (_GLF_IDENTITY(0, int(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), (_GLF_ZERO(0.0, injectionSwitch.x)) - 0.0)) + (0))))), 0 ^ (_GLF_IDENTITY(_GLF_IDENTITY(0, ~ (~ (_GLF_IDENTITY(0, int(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), (_GLF_ZERO(0.0, injectionSwitch.x)) - 0.0)) + (0))))), (_GLF_IDENTITY(0, ~ (~ (_GLF_IDENTITY(0, int(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), (_GLF_ZERO(0.0, injectionSwitch.x)) - 0.0)) + (0)))))) >> 0))))) << int(_GLF_ZERO(0.0, injectionSwitch.x))), int(_GLF_IDENTITY(_GLF_IDENTITY(0, ~ (~ (_GLF_IDENTITY(0, int(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), (_GLF_ZERO(0.0, injectionSwitch.x)) - 0.0)) + (0))))), 0 ^ (_GLF_IDENTITY(_GLF_IDENTITY(0, ~ (~ (_GLF_IDENTITY(0, int(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), (_GLF_ZERO(0.0, injectionSwitch.x)) - 0.0)) + (0))))), (_GLF_IDENTITY(0, ~ (~ (_GLF_IDENTITY(0, int(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), (_GLF_ZERO(0.0, injectionSwitch.x)) - 0.0)) + (0)))))) >> 0)))), int(_GLF_IDENTITY(_GLF_IDENTITY(0, ~ (~ (_GLF_IDENTITY(0, int(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), (_GLF_ZERO(0.0, injectionSwitch.x)) - 0.0)) + (0))))), 0 ^ (_GLF_IDENTITY(_GLF_IDENTITY(0, ~ (~ (_GLF_IDENTITY(0, int(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), (_GLF_ZERO(0.0, injectionSwitch.x)) - 0.0)) + (0))))), (_GLF_IDENTITY(0, ~ (~ (_GLF_IDENTITY(0, int(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), (_GLF_ZERO(0.0, injectionSwitch.x)) - 0.0)) + (0)))))) >> 0))))))))), (true ? _GLF_IDENTITY(_GLF_IDENTITY(int(_GLF_IDENTITY(0, ~ (~ (_GLF_IDENTITY(0, _GLF_IDENTITY(int(_GLF_ZERO(0.0, injectionSwitch.x)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(_injected_loop_counter) : _GLF_IDENTITY(int(_GLF_ZERO(0.0, injectionSwitch.x)), (int(_GLF_ZERO(0.0, injectionSwitch.x))) / 1))) + _GLF_IDENTITY((0), clamp(_GLF_IDENTITY((0), ~ (~ ((0)))), (0), (0)))))))), ~ (~ (int(_GLF_IDENTITY(0, ~ (~ (_GLF_IDENTITY(0, int(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), (_GLF_ZERO(0.0, injectionSwitch.x)) - 0.0)) + (0))))))))), max(_GLF_IDENTITY(int(_GLF_IDENTITY(0, ~ (~ (_GLF_IDENTITY(0, int(_GLF_ZERO(0.0, injectionSwitch.x)) + _GLF_IDENTITY((_GLF_IDENTITY(0, (true ? 0 : _GLF_FUZZED(-71896)))), clamp(_GLF_IDENTITY((0), ~ (~ ((0)))), (0), (0)))))))), ~ (~ (int(_GLF_IDENTITY(0, ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(0, (0) | (0)), int(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), (_GLF_ZERO(0.0, injectionSwitch.x)) - 0.0)) + (0))))))))), _GLF_IDENTITY(int(_GLF_IDENTITY(0, ~ (~ (_GLF_IDENTITY(0, int(_GLF_ZERO(0.0, injectionSwitch.x)) + _GLF_IDENTITY((0), clamp(_GLF_IDENTITY((0), ~ (~ ((0)))), (0), (0)))))))), ~ (~ (int(_GLF_IDENTITY(0, ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(0, (0) + 0), _GLF_IDENTITY(int(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), (_GLF_ZERO(0.0, injectionSwitch.x)) - 0.0)) + (0), (int(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), (_GLF_ZERO(0.0, injectionSwitch.x)) - 0.0)) + (0)) >> (0 | 0)))))))))))) : _GLF_FUZZED(_injected_loop_counter))))))) >> _GLF_IDENTITY(int(0), int(0))), int(ivec2(((_GLF_IDENTITY(1, (_GLF_IDENTITY(1, clamp(1, 1, 1))) | (1)) << _GLF_IDENTITY(int(0), _GLF_IDENTITY(_GLF_IDENTITY(int(0), int(_GLF_IDENTITY(ivec2(_GLF_IDENTITY(int(0), max(_GLF_IDENTITY(int(0), (int(0)) ^ 0), int(0))), (1 & 1)), (true ? ivec2(int(0), (1 & 1)) : _GLF_FUZZED(ivec2(21262, 24393)))))), (false ? _GLF_FUZZED(60951) : _GLF_IDENTITY(int(_GLF_IDENTITY(0, _GLF_IDENTITY(~ (~ (_GLF_IDENTITY(0, int(_GLF_ZERO(0.0, injectionSwitch.x)) + (0)))), (_GLF_IDENTITY(~ (~ (_GLF_IDENTITY(0, int(_GLF_ZERO(0.0, injectionSwitch.x)) + (0)))), (~ (~ (_GLF_IDENTITY(0, int(_GLF_ZERO(0.0, injectionSwitch.x)) + (0))))) >> 0)) ^ 0))), ~ (~ (int(_GLF_IDENTITY(0, _GLF_IDENTITY(~ (~ (_GLF_IDENTITY(0, int(_GLF_ZERO(0.0, injectionSwitch.x)) + (0)))), _GLF_IDENTITY(int(ivec2(_GLF_IDENTITY(~ (~ (_GLF_IDENTITY(0, _GLF_IDENTITY(int(_GLF_ZERO(0.0, injectionSwitch.x)) + (0), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(int(_GLF_ZERO(0.0, injectionSwitch.x)) + (0), clamp(int(_GLF_ZERO(0.0, injectionSwitch.x)) + (0), int(_GLF_ZERO(0.0, injectionSwitch.x)) + (0), _GLF_IDENTITY(int(_GLF_ZERO(0.0, injectionSwitch.x)) + (0), (int(_GLF_ZERO(0.0, injectionSwitch.x)) + (0)) ^ 0)))), (~ (_GLF_IDENTITY(int(_GLF_ZERO(0.0, injectionSwitch.x)) + (0), clamp(int(_GLF_ZERO(0.0, injectionSwitch.x)) + (0), int(_GLF_ZERO(0.0, injectionSwitch.x)) + (0), _GLF_IDENTITY(int(_GLF_ZERO(0.0, injectionSwitch.x)) + (0), (int(_GLF_ZERO(0.0, injectionSwitch.x)) + (0)) ^ 0))))) | (_GLF_IDENTITY(~ (_GLF_IDENTITY(int(_GLF_ZERO(0.0, injectionSwitch.x)) + (0), clamp(int(_GLF_ZERO(0.0, injectionSwitch.x)) + (0), int(_GLF_ZERO(0.0, injectionSwitch.x)) + (0), _GLF_IDENTITY(int(_GLF_ZERO(0.0, injectionSwitch.x)) + (0), (int(_GLF_ZERO(0.0, injectionSwitch.x)) + (0)) ^ 0)))), ~ (~ (~ (_GLF_IDENTITY(int(_GLF_ZERO(0.0, injectionSwitch.x)) + (0), clamp(int(_GLF_ZERO(0.0, injectionSwitch.x)) + (0), int(_GLF_ZERO(0.0, injectionSwitch.x)) + (0), _GLF_IDENTITY(int(_GLF_ZERO(0.0, injectionSwitch.x)) + (0), (int(_GLF_ZERO(0.0, injectionSwitch.x)) + (0)) ^ 0)))))))))))))), clamp(~ (~ (_GLF_IDENTITY(0, int(_GLF_ZERO(0.0, injectionSwitch.x)) + (0)))), _GLF_IDENTITY(~ (~ (_GLF_IDENTITY(0, int(_GLF_ZERO(0.0, injectionSwitch.x)) + (0)))), (~ _GLF_IDENTITY((~ (_GLF_IDENTITY(0, int(_GLF_ZERO(0.0, injectionSwitch.x)) + (0)))), (false ? _GLF_FUZZED(_injected_loop_counter) : _GLF_IDENTITY((~ (_GLF_IDENTITY(0, int(_GLF_ZERO(0.0, injectionSwitch.x)) + (0)))), ((~ (_GLF_IDENTITY(0, int(_GLF_ZERO(0.0, injectionSwitch.x)) + (0))))) + 0)))) / ((1 << _GLF_IDENTITY(int(3), int(3))) >> _GLF_IDENTITY(int(3), int(3)))), _GLF_IDENTITY(~ (~ (_GLF_IDENTITY(0, int(_GLF_ZERO(0.0, injectionSwitch.x)) + (0)))), (~ (~ (_GLF_IDENTITY(0, int(_GLF_ZERO(0.0, injectionSwitch.x)) + (0))))) | (~ (~ (_GLF_IDENTITY(0, int(_GLF_ZERO(0.0, injectionSwitch.x)) + (0)))))))), 1)), 0 | (int(ivec2(_GLF_IDENTITY(~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(0, int(_GLF_ZERO(0.0, injectionSwitch.x)) + (0)), (_GLF_IDENTITY(0, int(_GLF_ZERO(0.0, injectionSwitch.x)) + (0))) * (0 ^ 1)))), (false ? _GLF_FUZZED(_injected_loop_counter) : ~ (~ (_GLF_IDENTITY(0, int(_GLF_ZERO(0.0, injectionSwitch.x)) + (0)))))), 1)))))))))))))) >> _GLF_IDENTITY(int(0), int(0))), 1))), (_GLF_IDENTITY((_GLF_IDENTITY(1, min(1, 1)) << _GLF_IDENTITY(int(_GLF_IDENTITY(0, (0) | (_GLF_IDENTITY(0, ~ (~ (0)))))), _GLF_IDENTITY(int(0), (false ? _GLF_FUZZED(60951) : _GLF_IDENTITY(int(_GLF_IDENTITY(0, ~ (~ (_GLF_IDENTITY(0, int(_GLF_ZERO(0.0, injectionSwitch.x)) + _GLF_IDENTITY((0), ((0)) ^ 0)))))), ~ (~ (int(_GLF_IDENTITY(0, ~ (~ (_GLF_IDENTITY(0, int(_GLF_ZERO(0.0, injectionSwitch.x)) + (0))))))))))))) >> _GLF_IDENTITY(int(0), int(0)), ((_GLF_IDENTITY(1, min(1, 1)) << _GLF_IDENTITY(int(_GLF_IDENTITY(0, (0) | (_GLF_IDENTITY(0, ~ (~ (0)))))), _GLF_IDENTITY(int(0), (false ? _GLF_FUZZED(60951) : _GLF_IDENTITY(int(_GLF_IDENTITY(0, ~ (~ (_GLF_IDENTITY(0, int(_GLF_ZERO(0.0, injectionSwitch.x)) + _GLF_IDENTITY((0), ((0)) ^ 0)))))), ~ (~ (int(_GLF_IDENTITY(0, ~ (~ (_GLF_IDENTITY(0, int(_GLF_ZERO(0.0, injectionSwitch.x)) + (0))))))))))))) >> _GLF_IDENTITY(int(0), int(0))) | ((_GLF_IDENTITY(1, min(1, 1)) << _GLF_IDENTITY(int(_GLF_IDENTITY(0, (0) | (_GLF_IDENTITY(0, ~ (~ (0)))))), _GLF_IDENTITY(int(0), (false ? _GLF_FUZZED(60951) : _GLF_IDENTITY(int(_GLF_IDENTITY(0, ~ (~ (_GLF_IDENTITY(0, int(_GLF_ZERO(0.0, injectionSwitch.x)) + _GLF_IDENTITY((0), ((0)) ^ 0)))))), ~ (~ (int(_GLF_IDENTITY(0, ~ (~ (_GLF_IDENTITY(0, int(_GLF_ZERO(0.0, injectionSwitch.x)) + (0))))))))))))) >> _GLF_IDENTITY(int(0), int(0))))))), (_GLF_IDENTITY((1 << _GLF_IDENTITY(int(_GLF_IDENTITY(0, (0) | (0))), _GLF_IDENTITY(int(_GLF_IDENTITY(0, (0) | (0))), (_GLF_IDENTITY(false, (false) || false) ? _GLF_FUZZED(60951) : _GLF_IDENTITY(_GLF_IDENTITY(int(_GLF_IDENTITY(_GLF_IDENTITY(0, ~ (~ (_GLF_IDENTITY(0, int(_GLF_ZERO(0.0, injectionSwitch.x)) + (_GLF_IDENTITY(0, (false ? _GLF_FUZZED(-54202) : _GLF_IDENTITY(0, min(_GLF_IDENTITY(0, min(0, 0)), _GLF_IDENTITY(0, 0 + (0))))))))))), ~ (~ (_GLF_IDENTITY(0, ~ (~ (_GLF_IDENTITY(0, int(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch))) * vec2(1.0, 1.0)).x)) + (0))))))))), ~ (~ (int(_GLF_IDENTITY(0, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY(0, min(0, 0)), int(_GLF_ZERO(0.0, injectionSwitch.x)) + (0))), 0 | (~ (_GLF_IDENTITY(0, int(_GLF_ZERO(0.0, injectionSwitch.x)) + (0))))))))))), (_GLF_IDENTITY(int(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(0, ~ (~ _GLF_IDENTITY((_GLF_IDENTITY(0, _GLF_IDENTITY(int(_GLF_ZERO(0.0, injectionSwitch.x)), (_GLF_IDENTITY(int(_GLF_ZERO(0.0, injectionSwitch.x)), (int(_GLF_ZERO(0.0, injectionSwitch.x))) / 1)) * ((int(_GLF_ONE(1.0, injectionSwitch.y)) << _GLF_IDENTITY(int(3), int(3))) >> _GLF_IDENTITY(int(3), int(3)))) + (0))), (_GLF_IDENTITY((_GLF_IDENTITY(0, _GLF_IDENTITY(int(_GLF_ZERO(0.0, injectionSwitch.x)), (_GLF_IDENTITY(int(_GLF_ZERO(0.0, injectionSwitch.x)), (int(_GLF_ZERO(0.0, injectionSwitch.x))) / 1)) * ((int(_GLF_ONE(1.0, injectionSwitch.y)) << _GLF_IDENTITY(int(3), int(3))) >> _GLF_IDENTITY(int(3), int(3)))) + (0))), ((_GLF_IDENTITY(0, _GLF_IDENTITY(int(_GLF_ZERO(0.0, injectionSwitch.x)), (_GLF_IDENTITY(int(_GLF_ZERO(0.0, injectionSwitch.x)), (int(_GLF_ZERO(0.0, injectionSwitch.x))) / 1)) * ((int(_GLF_ONE(1.0, injectionSwitch.y)) << _GLF_IDENTITY(int(3), int(3))) >> _GLF_IDENTITY(int(3), int(3)))) + (0)))) >> 0)) - 0))), (_GLF_IDENTITY(_GLF_IDENTITY(0, ~ (~ (_GLF_IDENTITY(0, int(_GLF_ZERO(0.0, injectionSwitch.x)) + (0))))), max(_GLF_IDENTITY(0, ~ (~ (_GLF_IDENTITY(0, int(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(63.93)), float(injectionSwitch.x), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))) + (0))))), _GLF_IDENTITY(0, ~ (~ (_GLF_IDENTITY(0, int(_GLF_ZERO(0.0, injectionSwitch.x)) + (0)))))))) / (0 ^ ((1 << _GLF_IDENTITY(int(1), int(1))) >> _GLF_IDENTITY(_GLF_IDENTITY(int(1), ~ (~ (int(1)))), int(1))))), _GLF_IDENTITY(~ (~ (_GLF_IDENTITY(0, ~ (~ (_GLF_IDENTITY(0, _GLF_IDENTITY(int(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch))) * vec2(1.0, 1.0)).x)), max(int(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch))) * vec2(1.0, 1.0)).x)), int(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch))) * vec2(1.0, 1.0)).x)))) + (0))))))), clamp(~ (~ (_GLF_IDENTITY(0, ~ (~ (_GLF_IDENTITY(0, _GLF_IDENTITY(int(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch))) * vec2(1.0, 1.0)).x)), max(int(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch))) * vec2(1.0, 1.0)).x)), int(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch))) * vec2(1.0, 1.0)).x)))) + (0))))))), ~ (~ (_GLF_IDENTITY(0, ~ (~ (_GLF_IDENTITY(0, _GLF_IDENTITY(int(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch))) * vec2(1.0, 1.0)).x)), max(int(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch))) * vec2(1.0, 1.0)).x)), int(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch))) * vec2(1.0, 1.0)).x)))) + (0))))))), ~ (~ (_GLF_IDENTITY(0, ~ (~ (_GLF_IDENTITY(0, _GLF_IDENTITY(int(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch))) * vec2(1.0, 1.0)).x)), max(int(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch))) * vec2(1.0, 1.0)).x)), int(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch))) * vec2(1.0, 1.0)).x)))) + (0))))))))))), ~ (~ (int(_GLF_IDENTITY(0, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(0, int(_GLF_ZERO(0.0, injectionSwitch.x)) + (0))), 0 | (~ (_GLF_IDENTITY(0, int(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - log(vec2(1.0, 1.0))).x)) + (0)))))))))))) - 0))))), ((1 << _GLF_IDENTITY(int(_GLF_IDENTITY(0, (0) | (0))), _GLF_IDENTITY(int(_GLF_IDENTITY(0, (0) | (0))), (_GLF_IDENTITY(false, (false) || false) ? _GLF_FUZZED(60951) : _GLF_IDENTITY(_GLF_IDENTITY(int(_GLF_IDENTITY(_GLF_IDENTITY(0, ~ (~ (_GLF_IDENTITY(0, int(_GLF_ZERO(0.0, injectionSwitch.x)) + (_GLF_IDENTITY(0, (false ? _GLF_FUZZED(-54202) : _GLF_IDENTITY(0, min(_GLF_IDENTITY(0, min(0, 0)), _GLF_IDENTITY(0, 0 + (0))))))))))), ~ (~ (_GLF_IDENTITY(0, ~ (~ (_GLF_IDENTITY(0, int(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch))) * vec2(1.0, 1.0)).x)) + (0))))))))), ~ (~ (int(_GLF_IDENTITY(0, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY(0, min(0, 0)), int(_GLF_ZERO(0.0, injectionSwitch.x)) + (0))), 0 | (~ (_GLF_IDENTITY(0, int(_GLF_ZERO(0.0, injectionSwitch.x)) + (0))))))))))), (_GLF_IDENTITY(int(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(0, ~ (~ _GLF_IDENTITY((_GLF_IDENTITY(0, _GLF_IDENTITY(int(_GLF_ZERO(0.0, injectionSwitch.x)), (_GLF_IDENTITY(int(_GLF_ZERO(0.0, injectionSwitch.x)), (int(_GLF_ZERO(0.0, injectionSwitch.x))) / 1)) * ((int(_GLF_ONE(1.0, injectionSwitch.y)) << _GLF_IDENTITY(int(3), int(3))) >> _GLF_IDENTITY(int(3), int(3)))) + (0))), (_GLF_IDENTITY((_GLF_IDENTITY(0, _GLF_IDENTITY(int(_GLF_ZERO(0.0, injectionSwitch.x)), (_GLF_IDENTITY(int(_GLF_ZERO(0.0, injectionSwitch.x)), (int(_GLF_ZERO(0.0, injectionSwitch.x))) / 1)) * ((int(_GLF_ONE(1.0, injectionSwitch.y)) << _GLF_IDENTITY(int(3), int(3))) >> _GLF_IDENTITY(int(3), int(3)))) + (0))), ((_GLF_IDENTITY(0, _GLF_IDENTITY(int(_GLF_ZERO(0.0, injectionSwitch.x)), (_GLF_IDENTITY(int(_GLF_ZERO(0.0, injectionSwitch.x)), (int(_GLF_ZERO(0.0, injectionSwitch.x))) / 1)) * ((int(_GLF_ONE(1.0, injectionSwitch.y)) << _GLF_IDENTITY(int(3), int(3))) >> _GLF_IDENTITY(int(3), int(3)))) + (0)))) >> 0)) - 0))), (_GLF_IDENTITY(_GLF_IDENTITY(0, ~ (~ (_GLF_IDENTITY(0, int(_GLF_ZERO(0.0, injectionSwitch.x)) + (0))))), max(_GLF_IDENTITY(0, ~ (~ (_GLF_IDENTITY(0, int(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(63.93)), float(injectionSwitch.x), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))) + (0))))), _GLF_IDENTITY(0, ~ (~ (_GLF_IDENTITY(0, int(_GLF_ZERO(0.0, injectionSwitch.x)) + (0)))))))) / (0 ^ ((1 << _GLF_IDENTITY(int(1), int(1))) >> _GLF_IDENTITY(_GLF_IDENTITY(int(1), ~ (~ (int(1)))), int(1))))), _GLF_IDENTITY(~ (~ (_GLF_IDENTITY(0, ~ (~ (_GLF_IDENTITY(0, _GLF_IDENTITY(int(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch))) * vec2(1.0, 1.0)).x)), max(int(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch))) * vec2(1.0, 1.0)).x)), int(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch))) * vec2(1.0, 1.0)).x)))) + (0))))))), clamp(~ (~ (_GLF_IDENTITY(0, ~ (~ (_GLF_IDENTITY(0, _GLF_IDENTITY(int(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch))) * vec2(1.0, 1.0)).x)), max(int(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch))) * vec2(1.0, 1.0)).x)), int(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch))) * vec2(1.0, 1.0)).x)))) + (0))))))), ~ (~ (_GLF_IDENTITY(0, ~ (~ (_GLF_IDENTITY(0, _GLF_IDENTITY(int(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch))) * vec2(1.0, 1.0)).x)), max(int(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch))) * vec2(1.0, 1.0)).x)), int(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch))) * vec2(1.0, 1.0)).x)))) + (0))))))), ~ (~ (_GLF_IDENTITY(0, ~ (~ (_GLF_IDENTITY(0, _GLF_IDENTITY(int(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch))) * vec2(1.0, 1.0)).x)), max(int(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch))) * vec2(1.0, 1.0)).x)), int(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch))) * vec2(1.0, 1.0)).x)))) + (0))))))))))), ~ (~ (int(_GLF_IDENTITY(0, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(0, int(_GLF_ZERO(0.0, injectionSwitch.x)) + (0))), 0 | (~ (_GLF_IDENTITY(0, int(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - log(vec2(1.0, 1.0))).x)) + (0)))))))))))) - 0)))))) ^ 0) >> _GLF_IDENTITY(int(0), int(0)))))))); _GLF_IDENTITY(_GLF_IDENTITY(_injected_loop_counter ++, (_injected_loop_counter ++) + (_GLF_IDENTITY(76435 & 0, (76435 & 0) | 0))), (_injected_loop_counter ++) | _GLF_IDENTITY(0, ~ (~ (0)))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       return;
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(false, true, false), bvec3(bvec3(bvec3(false, true, false))))), ! (! (bool(_GLF_IDENTITY(bvec3(false, true, false), bvec3(bvec3(bvec3(false, true, false))))))))), (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))))))
          {
           if(_GLF_DEAD(false))
            barrier();
           break;
          }
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_DEAD(false))
            break;
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
         barrier();
        }
       if(_GLF_DEAD(false))
        {
         do
          {
           if(_GLF_DEAD(false))
            return;
          }
         while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
         barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(false))
        barrier();
      }
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y))))
    barrier();
  }
 uint read_1 = atomicLoad(buf[virtual_gid], _GLF_IDENTITY(4, (_GLF_IDENTITY(_GLF_IDENTITY(4, (4) | 0), (false ? _GLF_FUZZED(-98674) : 4))) << 0), 64, 0);
 if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0))) - vec2(0.0, 0.0)).y)), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0))) - vec2(0.0, 0.0)).y)), true && (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0))) - vec2(0.0, 0.0)).y))))) || false) || (_GLF_DEAD(false))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, ! (! (false)))), bool(bvec3(bool(_GLF_IDENTITY(false, ! (! (false)))), false, false)))))))) && true)))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 atomicStore(buf[next_virtual_gid], uint(read_1 + _GLF_IDENTITY(1, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(-58341) : 1))), 4, _GLF_IDENTITY(64, _GLF_IDENTITY((64) >> 0, (_GLF_IDENTITY((64) >> 0, clamp((64) >> 0, (64) >> 0, (64) >> 0))) * 1)), 4);
 _GLF_struct_9 _GLF_struct_replacement_9 = _GLF_struct_9(uvec3(1u), _GLF_struct_7(mat4(1.0), _GLF_struct_5(mat4x3(_GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, min(1.0, 1.0)), _GLF_IDENTITY(1.0, 1.0 * (1.0))))), mat4(_GLF_IDENTITY(1.0, _GLF_IDENTITY(float(_GLF_IDENTITY(mat3(1.0, 0.0, 1.0, 0.0, _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(_GLF_IDENTITY(_GLF_IDENTITY(62.61, min(62.61, 62.61)), max(_GLF_IDENTITY(62.61, min(62.61, 62.61)), _GLF_IDENTITY(62.61, min(62.61, 62.61)))))), float(1.0), bool(true))), 1.0, 1.0, 1.0, sin(determinant(mat3(0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)))), transpose(transpose(mat3(1.0, 0.0, 1.0, _GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0, 0.0)), 0.0)), 1.0, 1.0, 1.0, 1.0, sin(determinant(mat3(0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)))))))), mix(float(_GLF_FUZZED(8.4)), float(float(_GLF_IDENTITY(mat3(1.0, 0.0, 1.0, 0.0, _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(_GLF_IDENTITY(_GLF_IDENTITY(62.61, min(62.61, 62.61)), min(_GLF_IDENTITY(62.61, min(62.61, 62.61)), _GLF_IDENTITY(62.61, min(62.61, 62.61)))))), float(1.0), bool(true))), 1.0, 1.0, 1.0, sin(determinant(mat3(0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)))), transpose(transpose(mat3(1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, sin(determinant(mat3(0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))))))))), bool(true))))), bvec2(true), mat4x3(1.0)), vec2(1.0), mat3(1.0), _GLF_struct_6(uvec4(_GLF_IDENTITY(1u, clamp(1u, 1u, 1u)))), ivec4(1)), mat4x2(1.0), vec4(1.0), mat4(1.0), _GLF_struct_8(mat3(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, (1.0) - length(vec4(0.0, 0.0, 0.0, 0.0)))) / 1.0)), atomicLoad(buf[virtual_gid], 4, 64, _GLF_IDENTITY(0, (0) ^ 0))));
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + _GLF_IDENTITY(1, (_GLF_IDENTITY(1, min(_GLF_IDENTITY(1, max(1, 1)), 1))) - 0)) * 1u) < subgroup_size)
  {
   if(_GLF_DEAD(false))
    barrier();
   int i = 0;
   if(_GLF_DEAD(false))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), ! _GLF_IDENTITY((! (_GLF_DEAD(false))), false || ((! (_GLF_DEAD(false)))))))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(false || (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)) : _GLF_FUZZED(fract(vec2(-6.8, 255.956))))).x > injectionSwitch.y))) || false)), (false || (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)) : _GLF_FUZZED(fract(vec2(-6.8, 255.956))))).x > injectionSwitch.y))) || false))) || false))))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     return;
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) && true)))), (! (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) && true))))) && true)))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_DEAD(false), true))))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, false, false), _GLF_IDENTITY(bvec3(bvec3(bvec3(false, false, false))), bvec3(bvec4(bvec3(bvec3(bvec3(false, false, false))), false))))))))
        barrier();
       barrier();
      }
     if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! _GLF_IDENTITY((_GLF_DEAD(false)), bool(bvec4((_GLF_DEAD(false)), false, true, false))))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
      }
     else
      {
       return;
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       return;
      }
    }
   else
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   atomicStore(buf[next_virtual_gid], uint(_GLF_IDENTITY(read_1 + 1, min(read_1 + _GLF_IDENTITY(1, (1) | (1)), _GLF_IDENTITY(read_1, max(_GLF_IDENTITY(read_1, (_GLF_IDENTITY(read_1, uint(uvec2(read_1, 1u)))) | (read_1)), _GLF_IDENTITY(read_1, 0u ^ (read_1)))) + 1)) == _GLF_struct_replacement_9._f5.read_2) + 1, 4, 64, 4);
   if(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).x > injectionSwitch.y))), ! (! (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).x > injectionSwitch.y))), false || (_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).x > injectionSwitch.y)))))))))
    {
    }
   else
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && true))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       for(int _injected_loop_counter = ((1 << _GLF_IDENTITY(int(4), int(4))) >> _GLF_IDENTITY(int(4), _GLF_IDENTITY(int(4), ~ (~ (int(4)))))); _GLF_WRAPPED_LOOP(_injected_loop_counter > (0 << _GLF_IDENTITY(int(1), int(1)))); _injected_loop_counter --)
        {
         barrier();
        }
      }
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) && true)) && true), (_GLF_IDENTITY(false, _GLF_IDENTITY((_GLF_IDENTITY(false, (false) && true)), bool(_GLF_IDENTITY(bvec2((_GLF_IDENTITY(false, (false) && true)), true), bvec2(bvec3(bvec2((_GLF_IDENTITY(false, (false) && true)), true), true))))) && true)) && true)))
    return;
  }
 else
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   for(int _injected_loop_counter = 1; _GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter != 0), (_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(_injected_loop_counter, max(_GLF_IDENTITY(_injected_loop_counter, ~ (~ (_injected_loop_counter))), _injected_loop_counter))), (_GLF_IDENTITY(~ (_GLF_IDENTITY(_injected_loop_counter, max(_GLF_IDENTITY(_injected_loop_counter, ~ (~ (_injected_loop_counter))), _injected_loop_counter))), ~ (~ (~ (_GLF_IDENTITY(_injected_loop_counter, max(_GLF_IDENTITY(_injected_loop_counter, ~ (~ (_injected_loop_counter))), _injected_loop_counter))))))) ^ 0))) != 0)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))); _injected_loop_counter --)
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(false), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(bool(false), true, true), bvec3(bvec3(bvec3(_GLF_IDENTITY(bool(false), (bool(false)) || false), true, true))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (bool(_GLF_IDENTITY(bvec3(bool(false), true, true), bvec3(_GLF_IDENTITY(bvec3(bvec3(bool(false), true, true)), bvec3(bvec4(bvec3(bvec3(bool(false), true, true)), false)))))))))), bool(bvec4(bool(bool(false)), false, true, false))))))
      {
       if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
          barrier();
         return;
        }
       return;
      }
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)), _GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)))).x)) > injectionSwitch.y))) || false), _GLF_IDENTITY(bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true, true)), _GLF_IDENTITY(bool(bvec4(bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true, true)), true, false, false)), ! (! (bool(bvec4(bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true, true)), true, false, false)))))))))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       break;
      }
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     if(_GLF_DEAD(false))
      {
       for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
        {
         return;
         if(_GLF_DEAD(false))
          barrier();
        }
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_WRAPPED_IF_TRUE(true))
        {
         return;
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           barrier();
          }
        }
       else
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false)))))))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           barrier();
          }
        }
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), true && (! (false)))))))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
       if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY((_GLF_DEAD(_GLF_IDENTITY(false, false || (false)))), ! (! ((_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))))) && true)) && true), false, false))))
        barrier();
      }
     for(int _injected_loop_counter = ((-48983 - -1055) & 0); _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
      {
       barrier();
      }
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bool(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec4(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, false, true)))))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat4x3(_GLF_IDENTITY(injectionSwitch, vec2(vec3(injectionSwitch, 1.0))), _GLF_IDENTITY(dot(vec4(0.0, round(length(normalize(1.0))), 0.0, 1.0), vec4(1.0, 0.0, 1.0, 0.0)), dot(vec4(0.0, round(length(normalize(1.0))), 0.0, 1.0), vec4(1.0, 0.0, 1.0, 0.0))), 0.0, 1.0, abs(1.0), 1.0, 1.0, 0.0, 0.0, 0.0, 0.0)), vec2(vec2(vec2(mat4x3(_GLF_IDENTITY(injectionSwitch, vec2(vec3(injectionSwitch, 1.0))), _GLF_IDENTITY(dot(vec4(0.0, round(length(normalize(1.0))), 0.0, 1.0), vec4(1.0, 0.0, 1.0, 0.0)), dot(vec4(0.0, round(length(normalize(1.0))), 0.0, 1.0), vec4(1.0, 0.0, 1.0, 0.0))), 0.0, 1.0, abs(1.0), 1.0, 1.0, 0.0, 0.0, 0.0, 0.0)))))).y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), (! (_GLF_DEAD(false))) && true))))
    barrier();
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec4(false, true, true, true))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / _GLF_ONE(1.0, injectionSwitch.y))))))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true)))))
        return;
       return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
        return;
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec3(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x > injectionSwitch.y, true, true))), true, false, false)))), ! (_GLF_IDENTITY(! (! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + 0.0), injectionSwitch.x)) > injectionSwitch.y, bool(bvec4(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec3(injectionSwitch.x > injectionSwitch.y, true, true))), true, false, false)))), _GLF_IDENTITY(bool(bvec2((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + 0.0), injectionSwitch.x)) > injectionSwitch.y, bool(bvec4(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec3(injectionSwitch.x > injectionSwitch.y, true, true))), true, false, false)))), false)), (bool(bvec2((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + 0.0), injectionSwitch.x)) > injectionSwitch.y, bool(bvec4(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec3(injectionSwitch.x > injectionSwitch.y, true, true))), true, false, false)))), false))) && true))), ! (! (! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec3(injectionSwitch.x > injectionSwitch.y, true, true))), true, false, false))))))))))))))))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
    }
   else
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(9.3)))), float(_GLF_FUZZED(3211.9540)), bool(false)))))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
     if(_GLF_DEAD(false))
      barrier();
    }
   else
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
    }
   atomicStore(buf[next_virtual_gid], _GLF_IDENTITY(uint(read_1 + 1 == _GLF_IDENTITY(_GLF_struct_replacement_9._f5.read_2, uint(uvec4(_GLF_struct_replacement_9._f5.read_2, 1u, 0u, 0u)))), (0u >> _GLF_IDENTITY(_GLF_IDENTITY(uint(5u), (true ? uint(5u) : _GLF_FUZZED(workgroup_base))), _GLF_IDENTITY(uint(5u), ~ (~ (uint(5u)))))) + (uint(read_1 + 1 == _GLF_IDENTITY(_GLF_struct_replacement_9._f5.read_2, uint(uvec4(_GLF_struct_replacement_9._f5.read_2, 1u, 0u, 0u)))))) + _GLF_IDENTITY(_GLF_IDENTITY(1, min(_GLF_IDENTITY(1, int(ivec2(1, (_GLF_IDENTITY((1 << _GLF_IDENTITY(int(5), int(5))), ((1 << _GLF_IDENTITY(int(5), int(5)))) | ((1 << _GLF_IDENTITY(int(5), int(5))))) >> _GLF_IDENTITY(_GLF_IDENTITY(int(5), ~ (~ (int(5)))), int(5)))))), 1)), (true ? _GLF_IDENTITY(1, min(_GLF_IDENTITY(1, int(ivec2(1, ((1 << _GLF_IDENTITY(int(5), int(5))) >> _GLF_IDENTITY(int(5), int(5)))))), 1)) : _GLF_FUZZED(50264))), 4, 64, 4);
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), false || (! (false)))))))
    barrier();
   for(int _injected_loop_counter = _GLF_IDENTITY(_GLF_IDENTITY(1, 0 ^ (1)), _GLF_IDENTITY(int(ivec3(_GLF_IDENTITY(1, 0 ^ (1)), (0 << _GLF_IDENTITY(int(6), int(6))), 1)), _GLF_IDENTITY(int(int(_GLF_IDENTITY(int(ivec3(_GLF_IDENTITY(1, 0 ^ (1)), (0 << _GLF_IDENTITY(int(6), int(6))), 1)), 0 | (int(ivec3(_GLF_IDENTITY(1, 0 ^ (1)), (0 << _GLF_IDENTITY(int(6), int(6))), 1)))))), ~ (~ (int(int(_GLF_IDENTITY(int(ivec3(_GLF_IDENTITY(1, 0 ^ (1)), (0 << _GLF_IDENTITY(int(6), int(6))), 1)), 0 | (int(ivec3(_GLF_IDENTITY(1, 0 ^ (1)), (0 << _GLF_IDENTITY(int(6), int(6))), 1))))))))))); _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
    {
     for(int _injected_loop_counter = int(_GLF_ONE(1.0, injectionSwitch.y)); _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter, max(_GLF_IDENTITY(_GLF_IDENTITY(_injected_loop_counter, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _injected_loop_counter : _GLF_FUZZED((++ _injected_loop_counter)))), 0 | (_GLF_IDENTITY(_GLF_IDENTITY(_injected_loop_counter, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _injected_loop_counter : _GLF_FUZZED((++ _injected_loop_counter)))), (_GLF_IDENTITY(_injected_loop_counter, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _injected_loop_counter : _GLF_FUZZED((++ _injected_loop_counter))))) >> 0))), _injected_loop_counter)) > 0); _injected_loop_counter --)
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          continue;
         if(_GLF_DEAD(false))
          barrier();
         barrier();
         if(_GLF_DEAD(false))
          barrier();
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > injectionSwitch.y))))
        continue;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              barrier();
             barrier();
            }
           return;
          }
         if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)), (_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), true && (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), (_GLF_IDENTITY(false, (false) || false)) || false))))) || false))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, (true) && true)))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           barrier();
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
          }
         else
          {
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
          }
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
        }
      }
     if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))
      barrier();
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  return;
}
