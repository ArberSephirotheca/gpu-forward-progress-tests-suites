#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(bvec4(false, true, false, true))))))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec3(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec4(_GLF_IDENTITY(bvec2(false, true), _GLF_IDENTITY(bvec2(bvec3(bvec2(false, true), false)), bvec2(bvec4(bvec2(bvec3(bvec2(false, true), false)), false, false)))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), true))), bvec2(bvec4(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec3(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec4(_GLF_IDENTITY(bvec2(false, true), _GLF_IDENTITY(bvec2(bvec3(bvec2(false, true), false)), bvec2(bvec4(bvec2(bvec3(bvec2(false, true), false)), false, false)))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), true))), true, true)))))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uvec2 GLF_merged2_0_1_11_1_1_14subgroup_idworkgroup_size;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 _GLF_IDENTITY(GLF_merged2_0_1_11_1_1_14subgroup_idworkgroup_size.x = subgroup_id, 0u + (_GLF_IDENTITY(GLF_merged2_0_1_11_1_1_14subgroup_idworkgroup_size.x = subgroup_id, (false ? _GLF_FUZZED(24474u) : GLF_merged2_0_1_11_1_1_14subgroup_idworkgroup_size.x = subgroup_id))));
 uint subgroup_size = gl_SubgroupSize;
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), ! _GLF_IDENTITY((! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), true && _GLF_IDENTITY((_GLF_IDENTITY(false, ! (! (false)))), ! (! ((_GLF_IDENTITY(false, ! (! (false)))))))), bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), true && _GLF_IDENTITY((_GLF_IDENTITY(false, ! (! (false)))), ! (! ((_GLF_IDENTITY(false, ! (! (false)))))))), false, true, false))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && ((! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), ! (! (false))), true && _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(false, bool(bool(false))), false, true)), bool(bvec4(bool(bvec3(_GLF_IDENTITY(false, bool(bool(false))), false, true)), false, false, true)))), ! (! (false)))), ! (! ((_GLF_IDENTITY(false, ! (! (false)))))))))))))))
  barrier();
 uint num_workgroup = gl_NumWorkGroups.x;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), bool(bool(_GLF_IDENTITY((! (false)), false || ((! (false))))))))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint workgroup_size = gl_WorkGroupSize.x;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(bvec2(! (false), false)))))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, ! (! (false))))), (false) && _GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec4(true, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, float(mat3x4(injectionSwitch.x, 0.0, 0.0, 0.0, exp(0.0), 0.0, 1.0, 0.0, round(length(normalize(vec3(1.0, 1.0, 1.0)))), 0.0, 1.0, 0.0))) > injectionSwitch.y)), false, true)), false || (bool(bvec4(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true))))))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 GLF_merged2_0_1_11_1_1_14subgroup_idworkgroup_size.y = workgroup_size;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))
  barrier();
 uint workgroup_id = _GLF_IDENTITY(gl_WorkGroupID.x, _GLF_IDENTITY(uint(_GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID.x, (_GLF_IDENTITY(gl_WorkGroupID.x, (gl_WorkGroupID.x) << _GLF_IDENTITY(0u, (0u) / 1u))) | _GLF_IDENTITY((gl_WorkGroupID.x), ~ (_GLF_IDENTITY(~ ((gl_WorkGroupID.x)), ~ (~ (~ ((gl_WorkGroupID.x)))))))), min(gl_WorkGroupID.x, gl_WorkGroupID.x)), clamp(gl_WorkGroupID.x, gl_WorkGroupID.x, gl_WorkGroupID.x))), (uint(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID.x, (gl_WorkGroupID.x) | _GLF_IDENTITY((gl_WorkGroupID.x), ~ (_GLF_IDENTITY(~ ((gl_WorkGroupID.x)), ~ (~ (~ ((gl_WorkGroupID.x)))))))), min(gl_WorkGroupID.x, gl_WorkGroupID.x)), clamp(gl_WorkGroupID.x, _GLF_IDENTITY(gl_WorkGroupID.x, (_GLF_IDENTITY(gl_WorkGroupID.x, (gl_WorkGroupID.x) ^ 0u)) << 0u), gl_WorkGroupID.x)))) | 0u)), (_GLF_IDENTITY(uint(_GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID.x, _GLF_IDENTITY((gl_WorkGroupID.x), ((gl_WorkGroupID.x)) | (_GLF_IDENTITY((gl_WorkGroupID.x), ((gl_WorkGroupID.x)) | (_GLF_IDENTITY((gl_WorkGroupID.x), ((gl_WorkGroupID.x)) ^ 0u))))) | _GLF_IDENTITY((gl_WorkGroupID.x), ~ (_GLF_IDENTITY(~ ((gl_WorkGroupID.x)), ~ (~ (~ ((gl_WorkGroupID.x)))))))), min(gl_WorkGroupID.x, gl_WorkGroupID.x)), clamp(gl_WorkGroupID.x, gl_WorkGroupID.x, gl_WorkGroupID.x))), (uint(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, ~ (~ (gl_WorkGroupID))).x, (gl_WorkGroupID.x) | _GLF_IDENTITY((gl_WorkGroupID.x), ~ (_GLF_IDENTITY(~ ((gl_WorkGroupID.x)), ~ (~ (~ ((gl_WorkGroupID.x)))))))), min(gl_WorkGroupID.x, gl_WorkGroupID.x)), clamp(gl_WorkGroupID.x, gl_WorkGroupID.x, gl_WorkGroupID.x)))) | 0u)), max(_GLF_IDENTITY(uint(_GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID.x, (gl_WorkGroupID.x) | _GLF_IDENTITY((gl_WorkGroupID.x), ~ (_GLF_IDENTITY(~ ((gl_WorkGroupID.x)), ~ (~ (~ ((gl_WorkGroupID.x)))))))), min(gl_WorkGroupID.x, gl_WorkGroupID.x)), clamp(gl_WorkGroupID.x, _GLF_IDENTITY(gl_WorkGroupID.x, ~ (_GLF_IDENTITY(~ (gl_WorkGroupID.x), min(~ (gl_WorkGroupID.x), ~ (gl_WorkGroupID.x))))), gl_WorkGroupID.x))), (uint(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID.x, (gl_WorkGroupID.x) | _GLF_IDENTITY((gl_WorkGroupID.x), ~ (_GLF_IDENTITY(~ ((gl_WorkGroupID.x)), ~ (~ (~ ((gl_WorkGroupID.x)))))))), min(gl_WorkGroupID.x, gl_WorkGroupID.x)), clamp(gl_WorkGroupID.x, gl_WorkGroupID.x, gl_WorkGroupID.x)))) | 0u)), clamp(uint(_GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID.x, (gl_WorkGroupID.x) | _GLF_IDENTITY((gl_WorkGroupID.x), ~ (_GLF_IDENTITY(~ ((gl_WorkGroupID.x)), ~ (~ (~ ((gl_WorkGroupID.x)))))))), min(gl_WorkGroupID.x, gl_WorkGroupID.x)), clamp(gl_WorkGroupID.x, gl_WorkGroupID.x, gl_WorkGroupID.x))), (uint(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID.x, (gl_WorkGroupID.x) | _GLF_IDENTITY((gl_WorkGroupID.x), ~ (_GLF_IDENTITY(~ ((gl_WorkGroupID.x)), ~ (~ (~ ((gl_WorkGroupID.x)))))))), min(gl_WorkGroupID.x, gl_WorkGroupID.x)), clamp(gl_WorkGroupID.x, gl_WorkGroupID.x, gl_WorkGroupID.x)))) | 0u), min(_GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID.x, (gl_WorkGroupID.x) | _GLF_IDENTITY((gl_WorkGroupID.x), ~ (_GLF_IDENTITY(~ ((gl_WorkGroupID.x)), ~ (~ (~ ((gl_WorkGroupID.x)))))))), min(gl_WorkGroupID.x, gl_WorkGroupID.x)), clamp(gl_WorkGroupID.x, gl_WorkGroupID.x, gl_WorkGroupID.x))), (uint(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID.x, (gl_WorkGroupID.x) | _GLF_IDENTITY((gl_WorkGroupID.x), ~ (_GLF_IDENTITY(~ ((gl_WorkGroupID.x)), ~ (~ (~ ((gl_WorkGroupID.x)))))))), min(gl_WorkGroupID.x, gl_WorkGroupID.x)), clamp(gl_WorkGroupID.x, gl_WorkGroupID.x, gl_WorkGroupID.x)))) | 0u), _GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID.x, (gl_WorkGroupID.x) | _GLF_IDENTITY((gl_WorkGroupID.x), ~ (_GLF_IDENTITY(~ ((gl_WorkGroupID.x)), ~ (~ (~ ((gl_WorkGroupID.x)))))))), min(gl_WorkGroupID.x, gl_WorkGroupID.x)), clamp(gl_WorkGroupID.x, gl_WorkGroupID.x, gl_WorkGroupID.x))), (uint(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID.x, (gl_WorkGroupID.x) | _GLF_IDENTITY((gl_WorkGroupID.x), ~ (_GLF_IDENTITY(~ ((gl_WorkGroupID.x)), ~ (~ (~ ((gl_WorkGroupID.x)))))))), min(gl_WorkGroupID.x, gl_WorkGroupID.x)), clamp(gl_WorkGroupID.x, gl_WorkGroupID.x, gl_WorkGroupID.x)))) | 0u)))), uint(_GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID.x, (gl_WorkGroupID.x) | _GLF_IDENTITY((gl_WorkGroupID.x), ~ (_GLF_IDENTITY(~ ((_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) ^ uvec3(0u, 0u, 0u)).x)), ~ (~ (~ ((gl_WorkGroupID.x)))))))), min(gl_WorkGroupID.x, gl_WorkGroupID.x)), clamp(gl_WorkGroupID.x, gl_WorkGroupID.x, gl_WorkGroupID.x))), (uint(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID.x, (gl_WorkGroupID.x) | _GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupID.x, clamp(gl_WorkGroupID.x, gl_WorkGroupID.x, _GLF_IDENTITY(gl_WorkGroupID.x, 1u * (_GLF_IDENTITY(gl_WorkGroupID.x, 1u * (gl_WorkGroupID.x))))))), ~ (_GLF_IDENTITY(~ ((gl_WorkGroupID.x)), ~ (~ (~ ((gl_WorkGroupID.x)))))))), min(gl_WorkGroupID.x, gl_WorkGroupID.x)), clamp(gl_WorkGroupID.x, gl_WorkGroupID.x, gl_WorkGroupID.x)))) | 0u)), uint(_GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID.x, (gl_WorkGroupID.x) | _GLF_IDENTITY((gl_WorkGroupID.x), ~ (_GLF_IDENTITY(~ ((gl_WorkGroupID.x)), ~ (~ (~ ((gl_WorkGroupID.x)))))))), min(gl_WorkGroupID.x, gl_WorkGroupID.x)), clamp(gl_WorkGroupID.x, _GLF_IDENTITY(gl_WorkGroupID.x, uint(uvec3(gl_WorkGroupID.x, 0u, 0u))), gl_WorkGroupID.x))), (uint(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID.x, (gl_WorkGroupID.x) | _GLF_IDENTITY((gl_WorkGroupID.x), ~ (_GLF_IDENTITY(~ ((gl_WorkGroupID.x)), ~ (~ (~ _GLF_IDENTITY(((gl_WorkGroupID.x)), (((gl_WorkGroupID.x))) | (((gl_WorkGroupID.x)))))))))), min(_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) | (gl_WorkGroupID)).x, gl_WorkGroupID.x)), clamp(gl_WorkGroupID.x, gl_WorkGroupID.x, gl_WorkGroupID.x)))) | 0u)))), uint(_GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID.x, (gl_WorkGroupID.x) | _GLF_IDENTITY((gl_WorkGroupID.x), ~ (_GLF_IDENTITY(~ ((gl_WorkGroupID.x)), ~ (~ (~ ((gl_WorkGroupID.x)))))))), min(gl_WorkGroupID.x, gl_WorkGroupID.x)), clamp(gl_WorkGroupID.x, gl_WorkGroupID.x, gl_WorkGroupID.x))), (uint(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID.x, (gl_WorkGroupID.x) | _GLF_IDENTITY((gl_WorkGroupID.x), ~ (_GLF_IDENTITY(~ ((gl_WorkGroupID.x)), ~ (~ (~ ((gl_WorkGroupID.x)))))))), _GLF_IDENTITY(min(gl_WorkGroupID.x, gl_WorkGroupID.x), ~ (~ (_GLF_IDENTITY(min(gl_WorkGroupID.x, gl_WorkGroupID.x), 0u | (min(gl_WorkGroupID.x, gl_WorkGroupID.x))))))), clamp(gl_WorkGroupID.x, gl_WorkGroupID.x, gl_WorkGroupID.x)))) | 0u))))) >> 0u));
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, true && _GLF_IDENTITY((_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) && true))))), bool(bvec3((false), true, false))))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, false, false)), false || (bool(_GLF_IDENTITY(bvec3(false, false, false), _GLF_IDENTITY(bvec3(bvec3(bvec3(false, false, false))), bvec3(bvec3(bvec3(bvec3(bvec3(false, false, false))))))))))), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), mix(vec2((injectionSwitch)[0], _GLF_FUZZED(0.0)), vec2(_GLF_FUZZED(412.102), (injectionSwitch)[1]), bvec2(false, true))).x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))))) && true)))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)), ! _GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), ! (! (_GLF_IDENTITY(false, (false) && true))))), (_GLF_DEAD(_GLF_IDENTITY(false, (false) && true))) && true)), _GLF_IDENTITY(true && (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)), _GLF_IDENTITY((_GLF_DEAD(_GLF_IDENTITY(false, (false) && true))) && true, true && (_GLF_IDENTITY((_GLF_DEAD(_GLF_IDENTITY(false, (false) && true))) && true, ! (! ((_GLF_DEAD(_GLF_IDENTITY(false, (false) && true))) && true)))))))), ! (! (true && (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) && true)), (_GLF_DEAD(_GLF_IDENTITY(false, (false) && true))) && _GLF_IDENTITY(true, true && (true)))))))))), bool(bool((_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), ! (! (_GLF_IDENTITY(false, (false) && true))))), (_GLF_DEAD(_GLF_IDENTITY(false, (false) && true))) && true)), _GLF_IDENTITY(true && (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)), _GLF_IDENTITY((_GLF_DEAD(_GLF_IDENTITY(false, (false) && true))) && true, true && (_GLF_IDENTITY((_GLF_DEAD(_GLF_IDENTITY(false, (false) && true))) && true, ! (! ((_GLF_DEAD(_GLF_IDENTITY(false, (false) && true))) && true)))))))), ! (! (true && (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) && true)), (_GLF_DEAD(_GLF_IDENTITY(false, (false) && true))) && _GLF_IDENTITY(true, true && (true)))))))))))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 uint workgroup_base = _GLF_IDENTITY(_GLF_IDENTITY(GLF_merged2_0_1_11_1_1_14subgroup_idworkgroup_size, (_GLF_IDENTITY(GLF_merged2_0_1_11_1_1_14subgroup_idworkgroup_size, (GLF_merged2_0_1_11_1_1_14subgroup_idworkgroup_size) << uvec2(0u, 0u))) >> uvec2(0u, 0u)).y, (_GLF_IDENTITY(GLF_merged2_0_1_11_1_1_14subgroup_idworkgroup_size.y, 0u ^ (GLF_merged2_0_1_11_1_1_14subgroup_idworkgroup_size.y))) << _GLF_IDENTITY(0u, (true ? 0u : _GLF_FUZZED(subgroup_size)))) * workgroup_id;
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) && true)))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y)), true && (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y)))), _GLF_IDENTITY(true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (true && (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y)))))) || false))))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))), ! (! (_GLF_DEAD(_GLF_IDENTITY(false, true && (false)))))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(vec2(-1242.9040, _GLF_IDENTITY(-189.528, (true ? -189.528 : _GLF_FUZZED(-8756.6332)))).s)), bool(false))) > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0)))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, false, false, false)))))
      barrier();
     barrier();
    }
   if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
  }
 uint virtual_gid = workgroup_base + GLF_merged2_0_1_11_1_1_14subgroup_idworkgroup_size.x * _GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, subgroup_size)) + subgroup_local_id;
 uint next_virtual_gid = _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (_GLF_IDENTITY(workgroup_base, 0u | (workgroup_base))) / 1u), 0u | (workgroup_base)) + GLF_merged2_0_1_11_1_1_14subgroup_idworkgroup_size.x * subgroup_size + _GLF_IDENTITY((_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(_GLF_IDENTITY(1, ~ (~ (_GLF_IDENTITY(1, 0 | (1))))), min(_GLF_IDENTITY(1, ~ (~ (_GLF_IDENTITY(1, 0 | (1))))), _GLF_IDENTITY(1, ~ (~ (_GLF_IDENTITY(1, 0 | (1))))))), (subgroup_local_id + _GLF_IDENTITY(1, _GLF_IDENTITY(clamp(_GLF_IDENTITY(1, ~ (~ (1))), 1, 1), (_GLF_IDENTITY(clamp(_GLF_IDENTITY(1, ~ (~ (1))), 1, 1), 0 ^ (clamp(_GLF_IDENTITY(1, ~ (~ (1))), 1, 1)))) ^ 0))) >> 0u), (_GLF_IDENTITY(subgroup_local_id + 1, 0u | (subgroup_local_id + 1))) | 0u)), max((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(_GLF_IDENTITY(1, ~ (~ (_GLF_IDENTITY(1, 0 | (1))))), min(_GLF_IDENTITY(1, ~ (~ (_GLF_IDENTITY(1, 0 | (1))))), _GLF_IDENTITY(1, ~ (~ (_GLF_IDENTITY(1, 0 | (1))))))), (subgroup_local_id + _GLF_IDENTITY(1, _GLF_IDENTITY(clamp(_GLF_IDENTITY(1, ~ (~ (1))), 1, 1), (_GLF_IDENTITY(clamp(_GLF_IDENTITY(1, ~ (~ (1))), 1, 1), 0 ^ (clamp(_GLF_IDENTITY(1, ~ (~ (1))), 1, 1)))) ^ 0))) >> 0u), (_GLF_IDENTITY(subgroup_local_id + 1, 0u | (subgroup_local_id + 1))) | 0u)), (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(_GLF_IDENTITY(1, ~ (~ (_GLF_IDENTITY(1, 0 | (1))))), min(_GLF_IDENTITY(1, ~ (~ (_GLF_IDENTITY(1, 0 | (1))))), _GLF_IDENTITY(1, ~ (~ (_GLF_IDENTITY(1, 0 | (1))))))), (subgroup_local_id + _GLF_IDENTITY(1, _GLF_IDENTITY(clamp(_GLF_IDENTITY(1, ~ (~ (1))), 1, 1), (_GLF_IDENTITY(clamp(_GLF_IDENTITY(1, ~ (~ (1))), 1, 1), 0 ^ (clamp(_GLF_IDENTITY(1, ~ (~ (1))), 1, 1)))) ^ 0))) >> 0u), (_GLF_IDENTITY(subgroup_local_id + 1, 0u | (subgroup_local_id + 1))) | 0u)))) % subgroup_size), (true ? _GLF_IDENTITY(((_GLF_IDENTITY(subgroup_local_id + 1, _GLF_IDENTITY((subgroup_local_id + 1) | _GLF_IDENTITY(_GLF_IDENTITY(0u, clamp(0u, 0u, 0u)), _GLF_IDENTITY(clamp(0u, 0u, 0u), uint(uvec3(clamp(0u, 0u, 0u), 1u, (_GLF_IDENTITY(0u & 4544u, (0u & 4544u) / _GLF_IDENTITY(((0u >> _GLF_IDENTITY(uint(1u), uint(1u))) ^ 1u), (((0u >> _GLF_IDENTITY(uint(1u), uint(1u))) ^ 1u)) << 0u))))))), max(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | (subgroup_local_id)) + 1, (_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) ^ 0u)) >> 0u), _GLF_IDENTITY((false ? _GLF_FUZZED(100975u) : subgroup_local_id + 1), uint(uvec3((false ? _GLF_FUZZED(100975u) : subgroup_local_id + 1), 1u, _GLF_IDENTITY(1u, min(_GLF_IDENTITY(1u, (1u) ^ 0u), 1u))))))) | 0u, ((subgroup_local_id + 1) | 0u) | 0u), (subgroup_local_id + 1) | 0u)))) % subgroup_size), clamp(((_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, (_GLF_IDENTITY(1, max(1, 1))) / 1), (subgroup_local_id + 1) | 0u)) % subgroup_size), ((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1, (_GLF_IDENTITY(subgroup_local_id, clamp(_GLF_IDENTITY(subgroup_local_id, clamp(subgroup_local_id, subgroup_local_id, subgroup_local_id)), subgroup_local_id, subgroup_local_id)) + 1) | _GLF_IDENTITY(0u, max(0u, 0u))), 0u + (_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) | _GLF_IDENTITY(0u, max(0u, 0u))))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1, (_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) - uint(_GLF_ZERO(0.0, injectionSwitch.x)))) | _GLF_IDENTITY(0u, max(0u, 0u))), 0u + (_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) | _GLF_IDENTITY(0u, max(0u, 0u))))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, ~ (~ (_GLF_IDENTITY(1, (1) >> 0)))), (subgroup_local_id + 1) | _GLF_IDENTITY(0u, max(0u, 0u))), 0u + (_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) | _GLF_IDENTITY(0u, max(0u, 0u))))), _GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) | _GLF_IDENTITY(0u, max(0u, 0u))), 0u + (_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) | _GLF_IDENTITY(0u, max(0u, 0u))))), _GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) | _GLF_IDENTITY(0u, max(0u, 0u))), 0u + (_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) | _GLF_IDENTITY(0u, max(0u, 0u)))))))) - (0u & 52663u))) % _GLF_IDENTITY(subgroup_size, (subgroup_size) - 0u)), ((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) | _GLF_IDENTITY(0u, (0u) - 0u)), uint(uvec3(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1, (_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) >> 0u)) | _GLF_IDENTITY(0u, _GLF_IDENTITY((0u), clamp((0u), (0u), _GLF_IDENTITY((0u), ((0u)) | ((0u))))) - 0u)), _GLF_IDENTITY(~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1, ~ (~ (_GLF_IDENTITY(subgroup_local_id + 1, ~ (~ (_GLF_IDENTITY(subgroup_local_id + 1, (false ? _GLF_FUZZED(subgroup_local_id) : subgroup_local_id + 1)))))))), (subgroup_local_id + 1) | _GLF_IDENTITY(0u, (0u) - 0u)))), (~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | uint(_GLF_ZERO(0.0, injectionSwitch.x))) + 1, (subgroup_local_id + 1) | _GLF_IDENTITY(0u, (0u) - 0u))))) + 0u)), 1u, 1u)))) % subgroup_size))) : _GLF_FUZZED(63092u)));
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint read_1 = atomicLoad(buf[_GLF_IDENTITY(virtual_gid, max(virtual_gid, _GLF_IDENTITY(virtual_gid, ~ (_GLF_IDENTITY(~ (virtual_gid), ~ (~ (~ (virtual_gid))))))))], 4, 64, 0);
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-9.5), _GLF_FUZZED((-4.5 + -6.6))), vec2((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)))[0], (injectionSwitch)[1]), bvec2(true, true))).y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
  }
 atomicStore(buf[_GLF_IDENTITY(next_virtual_gid, max(_GLF_IDENTITY(next_virtual_gid, max(next_virtual_gid, next_virtual_gid)), next_virtual_gid))], uint(_GLF_IDENTITY(read_1 + 1, _GLF_IDENTITY(_GLF_IDENTITY((read_1 + 1) - 0u, (_GLF_IDENTITY((read_1 + 1), clamp((read_1 + 1), _GLF_IDENTITY((read_1 + 1), 0u ^ (_GLF_IDENTITY((read_1 + 1), uint(uvec4((read_1 + 1), 0u, 1u, 1u))))), (read_1 + 1))) - 0u) >> _GLF_IDENTITY(0u, uint(_GLF_IDENTITY(uvec2(0u, 0u), _GLF_IDENTITY(uvec2(uvec3(uvec2(0u, 0u), 0u)), clamp(uvec2(uvec3(uvec2(0u, 0u), _GLF_IDENTITY(0u, (0u) << (0u << _GLF_IDENTITY(uint(2u), uint(2u)))))), uvec2(uvec3(uvec2(0u, 0u), 0u)), uvec2(uvec3(uvec2(0u, 0u), 0u)))))))), (_GLF_IDENTITY(_GLF_IDENTITY((read_1 + 1) - 0u, ((read_1 + 1) - 0u) >> _GLF_IDENTITY(0u, uint(_GLF_IDENTITY(uvec2(0u, 0u), _GLF_IDENTITY(uvec2(_GLF_IDENTITY(uvec3(uvec2(0u, 0u), 0u), (uvec3(uvec2(0u, 0u), 0u)) | (_GLF_IDENTITY(uvec3(uvec2(0u, 0u), 0u), min(uvec3(uvec2(0u, 0u), 0u), uvec3(uvec2(0u, 0u), 0u)))))), clamp(uvec2(uvec3(uvec2(0u, 0u), 0u)), uvec2(uvec3(uvec2(0u, 0u), 0u)), uvec2(uvec3(uvec2(0u, 0u), 0u)))))))), (_GLF_IDENTITY((read_1 + 1) - 0u, ((read_1 + 1) - 0u) >> _GLF_IDENTITY(0u, uint(_GLF_IDENTITY(uvec2(_GLF_IDENTITY(0u, (0u | 0u) ^ (0u)), 0u), _GLF_IDENTITY(uvec2(uvec3(uvec2(0u, 0u), 0u)), clamp(uvec2(uvec3(uvec2(0u, 0u), 0u)), uvec2(uvec3(uvec2(0u, 0u), 0u)), uvec2(uvec3(uvec2(0u, 0u), 0u))))))))) >> 0u)) / _GLF_IDENTITY(1u, (1u) | (1u))))), _GLF_IDENTITY(4, (-56859 & 0) | (4)), _GLF_IDENTITY(64, (false ? _GLF_FUZZED(72515) : _GLF_IDENTITY(64, (_GLF_IDENTITY(64, min(_GLF_IDENTITY(64, (64) + 0), 64))) | 0))), 4);
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), bool(bvec4(! (injectionSwitch.x > injectionSwitch.y), true, true, false))))))))))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(1.0, 1.0), max(vec2(1.0, 1.0), vec2(1.0, 1.0))) * _GLF_IDENTITY((injectionSwitch), mix(vec2(_GLF_FUZZED(2.9), _GLF_FUZZED(-6822.5036)), vec2(((injectionSwitch))[0], ((injectionSwitch))[1]), bvec2(true, true)))), max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch), _GLF_IDENTITY(mat2(1.0) * ((injectionSwitch)), min(mat2(1.0) * ((injectionSwitch)), mat2(1.0) * ((injectionSwitch))))) * vec2(1.0, 1.0)))), _GLF_IDENTITY(_GLF_IDENTITY((true ? injectionSwitch : _GLF_FUZZED(vec2(-6.4, 5533.9001))), _GLF_IDENTITY(vec2(_GLF_IDENTITY(mat4((true ? injectionSwitch : _GLF_FUZZED(vec2(-6.4, 5533.9001))), 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0))), _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 0.0), (true ? mat4((true ? injectionSwitch : _GLF_FUZZED(vec2(-6.4, 5533.9001))), 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0))), _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 0.0) : _GLF_FUZZED(mat4(-153.466, -5.9, -3.5, 7.6, -276.526, 9.5, 8730.9483, -6.8, -13.73, -57.95, -54.47, -5608.3007, -1.8, -6806.7946, 3896.7437, -662.956))))), vec2(mat2x3(_GLF_IDENTITY(vec2(_GLF_IDENTITY(mat4((true ? injectionSwitch : _GLF_FUZZED(vec2(-6.4, 5533.9001))), 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0))), _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 0.0), (true ? mat4((true ? injectionSwitch : _GLF_FUZZED(vec2(-6.4, 5533.9001))), 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0))), _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 0.0) : _GLF_FUZZED(mat4(-153.466, -5.9, -3.5, 7.6, -276.526, 9.5, 8730.9483, -6.8, -13.73, -57.95, -54.47, -5608.3007, -1.8, -6806.7946, 3896.7437, -662.956))))), (vec2(_GLF_IDENTITY(mat4((true ? injectionSwitch : _GLF_FUZZED(vec2(-6.4, 5533.9001))), 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0))), _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 0.0), (true ? mat4((true ? injectionSwitch : _GLF_FUZZED(vec2(-6.4, 5533.9001))), 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0))), _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 0.0) : _GLF_FUZZED(mat4(-153.466, -5.9, -3.5, 7.6, -276.526, 9.5, 8730.9483, -6.8, -13.73, -57.95, -54.47, -5608.3007, -1.8, -6806.7946, 3896.7437, -662.956)))))) - vec2(0.0, 0.0)), 1.0, sqrt(0.0), 1.0, 0.0)))), min((_GLF_IDENTITY(_GLF_IDENTITY(true, (_GLF_IDENTITY(true, ! (! (true)))) || false) ? injectionSwitch : _GLF_FUZZED(vec2(-6.4, 5533.9001)), max(true ? injectionSwitch : _GLF_FUZZED(vec2(-6.4, 5533.9001)), true ? injectionSwitch : _GLF_FUZZED(vec2(-6.4, _GLF_IDENTITY(5533.9001, (_GLF_IDENTITY(true, bool(bool(true))) ? 5533.9001 : _GLF_FUZZED(15.32)))))))), _GLF_IDENTITY((_GLF_IDENTITY(true ? injectionSwitch : _GLF_FUZZED(vec2(-6.4, 5533.9001)), exp(vec2(0.0, 0.0)) * (true ? injectionSwitch : _GLF_FUZZED(vec2(-6.4, 5533.9001))))), min(_GLF_IDENTITY((true ? injectionSwitch : _GLF_FUZZED(vec2(-6.4, 5533.9001))), max((true ? injectionSwitch : _GLF_FUZZED(vec2(-6.4, 5533.9001))), (true ? injectionSwitch : _GLF_FUZZED(vec2(-6.4, 5533.9001))))), (true ? _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)) : _GLF_FUZZED(vec2(-6.4, 5533.9001)))))))).x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY((false), false || ((false))) && true)))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) && true), (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), false || (! (_GLF_DEAD(false)))))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (! (bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(true && (false), true && (true && (false))))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (injectionSwitch.x < injectionSwitch.y)))))))))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), _GLF_IDENTITY(bool(bvec2(bool(bool(false)), true)), _GLF_IDENTITY(true && (bool(bvec2(bool(bool(false)), true))), ! (! (_GLF_IDENTITY(true && (bool(bvec2(bool(bool(false)), true))), (true && (bool(_GLF_IDENTITY(bvec2(bool(bool(false)), true), _GLF_IDENTITY(bvec2(bvec3(bvec2(bool(bool(false)), true), true)), bvec2(bvec2(bvec2(bvec3(bvec2(bool(bool(false)), true), true))))))))) || false))))))), _GLF_IDENTITY(true, true && (true)) && (false))))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY((false) && true, bool(bvec4(_GLF_IDENTITY((false) && true, (_GLF_IDENTITY((false) && true, ! (! ((false) && true)))) && true), false, true, true))))))
      barrier();
    }
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true), true, true, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || false)) && true))
      barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
  }
 uint read_2 = atomicLoad(buf[virtual_gid], 4, 64, 0);
 if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (_GLF_IDENTITY(false, (false) && true))), ! (_GLF_IDENTITY(! (! (! (_GLF_IDENTITY(false, (false) && true)))), ! (! (_GLF_IDENTITY(! (! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), _GLF_IDENTITY((false) && true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && ((false) && true)))))), _GLF_IDENTITY(bool(bvec2(! (! (! (_GLF_IDENTITY(false, (false) && true)))), true)), bool(_GLF_IDENTITY(bvec3(bool(bvec2(! (! (! (_GLF_IDENTITY(false, (false) && true)))), true)), false, false), _GLF_IDENTITY(bvec3(bvec4(_GLF_IDENTITY(bvec3(bool(bvec2(! (! (! (_GLF_IDENTITY(false, (false) && _GLF_IDENTITY(true, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false), bvec3(bvec4(bvec3(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false), true)))), (bool(_GLF_IDENTITY(bvec3(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false), bvec3(bvec4(bvec3(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false), true))))) || false)))))), true)), false, false), bvec3(bvec3(_GLF_IDENTITY(bvec3(bool(bvec2(! (! (! (_GLF_IDENTITY(false, (false) && _GLF_IDENTITY(true, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false), bvec3(bvec4(bvec3(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false), true)))), (bool(_GLF_IDENTITY(bvec3(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false), bvec3(bvec4(bvec3(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false), true))))) || false)))))), true)), false, false), _GLF_IDENTITY(bvec3(bvec4(bvec3(bool(bvec2(! (! (! (_GLF_IDENTITY(false, (false) && _GLF_IDENTITY(true, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false), bvec3(bvec4(bvec3(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false), true)))), (bool(_GLF_IDENTITY(bvec3(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false), bvec3(bvec4(bvec3(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false), true))))) || false)))))), true)), false, false), false)), bvec3(bvec4(bvec3(bvec4(bvec3(bool(bvec2(! (! (! (_GLF_IDENTITY(false, (false) && _GLF_IDENTITY(true, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false), bvec3(bvec4(bvec3(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false), true)))), (bool(_GLF_IDENTITY(bvec3(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false), bvec3(bvec4(bvec3(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false), true))))) || false)))))), true)), false, false), false)), true))))))), false)), bvec3(bvec3(bvec3(bvec4(bvec3(bool(bvec2(! (! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), bool(bool(_GLF_IDENTITY(false, (false) && true))))))), true)), false, false), false)))))))))))))))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           barrier();
          }
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
       barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, ~ (_GLF_IDENTITY(~ (subgroup_local_id), 1u * (~ (subgroup_local_id))))), max(_GLF_IDENTITY(subgroup_local_id, ~ (_GLF_IDENTITY(~ (subgroup_local_id), 1u * (~ (subgroup_local_id))))), _GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, ~ (_GLF_IDENTITY(~ (subgroup_local_id), 1u * (~ (subgroup_local_id))))), (_GLF_IDENTITY(subgroup_local_id, ~ (_GLF_IDENTITY(~ (subgroup_local_id), 1u * (~ (subgroup_local_id)))))) << 0u))), 0u ^ (_GLF_IDENTITY(subgroup_local_id, clamp(_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY(uint(uvec2(subgroup_local_id, 1u)), (uint(uvec2(subgroup_local_id, 1u))) - 0u)), _GLF_IDENTITY(subgroup_local_id, ~ (~ (subgroup_local_id))), subgroup_local_id)))) + 1 < subgroup_size, true && (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, ~ (_GLF_IDENTITY(~ (subgroup_local_id), _GLF_IDENTITY(1u * (~ (subgroup_local_id)), (1u * (~ (subgroup_local_id))) | (_GLF_IDENTITY(1u * (~ (subgroup_local_id)), ~ (~ (_GLF_IDENTITY(1u * (~ (subgroup_local_id)), 0u + (1u * (~ (subgroup_local_id)))))))))))), 0u ^ (_GLF_IDENTITY(subgroup_local_id, clamp(_GLF_IDENTITY(subgroup_local_id, uint(_GLF_IDENTITY(uvec2(subgroup_local_id, 1u), (uvec2(subgroup_local_id, 1u)) * uvec2(1u, 1u)))), _GLF_IDENTITY(subgroup_local_id, ~ (~ (subgroup_local_id))), subgroup_local_id)))), (false ? _GLF_FUZZED(read_1) : _GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY(~ (_GLF_IDENTITY(~ (subgroup_local_id), 1u * (~ (subgroup_local_id)))), (~ (_GLF_IDENTITY(~ (subgroup_local_id), 1u * (~ (subgroup_local_id))))) << 0u)), 0u ^ (_GLF_IDENTITY(subgroup_local_id, clamp(_GLF_IDENTITY(subgroup_local_id, uint(uvec2(_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY((subgroup_local_id), max(_GLF_IDENTITY((subgroup_local_id), min((subgroup_local_id), (subgroup_local_id))), (subgroup_local_id))) | (subgroup_local_id)), 1u))), _GLF_IDENTITY(subgroup_local_id, ~ (~ (_GLF_IDENTITY(subgroup_local_id, max(subgroup_local_id, subgroup_local_id))))), subgroup_local_id)))))) + 1 < subgroup_size)), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY(~ (_GLF_IDENTITY(~ (subgroup_local_id), 1u * (~ (subgroup_local_id)))), clamp(~ (_GLF_IDENTITY(~ (subgroup_local_id), 1u * (_GLF_IDENTITY(~ (subgroup_local_id), (~ (subgroup_local_id)) >> 0u)))), _GLF_IDENTITY(~ _GLF_IDENTITY((_GLF_IDENTITY(~ (subgroup_local_id), 1u * (~ (subgroup_local_id)))), ((_GLF_IDENTITY(~ (subgroup_local_id), 1u * (~ (subgroup_local_id))))) | ((_GLF_IDENTITY(~ (subgroup_local_id), 1u * (~ _GLF_IDENTITY((subgroup_local_id), 0u + ((subgroup_local_id)))))))), (~ (_GLF_IDENTITY(~ _GLF_IDENTITY((subgroup_local_id), ((subgroup_local_id)) / 1u), 1u * (_GLF_IDENTITY(~ (subgroup_local_id), clamp(~ (subgroup_local_id), ~ (subgroup_local_id), ~ (subgroup_local_id))))))) | 0u), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(subgroup_local_id, uint(_GLF_ZERO(0.0, injectionSwitch.x)) | (subgroup_local_id))), 1u * (~ (subgroup_local_id))))))), 0u ^ (subgroup_local_id)) + 1, max(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY(~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(subgroup_local_id, clamp(_GLF_IDENTITY(subgroup_local_id, ~ (~ (subgroup_local_id))), subgroup_local_id, subgroup_local_id))), 1u * (~ (subgroup_local_id)))), clamp(~ (_GLF_IDENTITY(~ (subgroup_local_id), 1u * (_GLF_IDENTITY(~ (subgroup_local_id), _GLF_IDENTITY((~ (subgroup_local_id)) >> 0u, ~ (_GLF_IDENTITY(~ ((~ (subgroup_local_id)) >> 0u), (false ? _GLF_FUZZED(next_virtual_gid) : ~ ((~ (subgroup_local_id)) >> 0u))))))))), _GLF_IDENTITY(~ (_GLF_IDENTITY(~ _GLF_IDENTITY((subgroup_local_id), min((subgroup_local_id), (subgroup_local_id))), 1u * (~ (subgroup_local_id)))), (~ (_GLF_IDENTITY(~ (subgroup_local_id), 1u * (~ (subgroup_local_id))))) | 0u), ~ (_GLF_IDENTITY(_GLF_IDENTITY(~ (subgroup_local_id), ~ (~ (~ (subgroup_local_id)))), 1u * _GLF_IDENTITY((~ (subgroup_local_id)), clamp((~ (subgroup_local_id)), _GLF_IDENTITY((~ (subgroup_local_id)), (_GLF_IDENTITY((~ (subgroup_local_id)), max((~ (subgroup_local_id)), (~ (subgroup_local_id))))) * 1u), (~ (subgroup_local_id))))))))), 0u ^ (_GLF_IDENTITY(subgroup_local_id, (false ? _GLF_FUZZED(virtual_gid) : subgroup_local_id)))), (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY(~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, clamp(_GLF_IDENTITY(subgroup_local_id, ~ (~ (subgroup_local_id))), subgroup_local_id, subgroup_local_id)), max(_GLF_IDENTITY(subgroup_local_id, clamp(_GLF_IDENTITY(subgroup_local_id, ~ (~ (subgroup_local_id))), subgroup_local_id, subgroup_local_id)), _GLF_IDENTITY(subgroup_local_id, clamp(_GLF_IDENTITY(subgroup_local_id, ~ (~ (subgroup_local_id))), subgroup_local_id, subgroup_local_id))))), 1u * (~ (subgroup_local_id)))), clamp(~ (_GLF_IDENTITY(~ (subgroup_local_id), 1u * (_GLF_IDENTITY(~ (subgroup_local_id), _GLF_IDENTITY((~ (subgroup_local_id)) >> 0u, ~ (_GLF_IDENTITY(~ ((~ (subgroup_local_id)) >> 0u), (_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bvec3(bvec3(bvec3(false, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))) ? _GLF_FUZZED(next_virtual_gid) : ~ ((~ (subgroup_local_id)) >> 0u))))))))), _GLF_IDENTITY(~ (_GLF_IDENTITY(~ _GLF_IDENTITY((subgroup_local_id), min((subgroup_local_id), (subgroup_local_id))), 1u * _GLF_IDENTITY((~ (subgroup_local_id)), ((~ (subgroup_local_id))) | ((~ (subgroup_local_id)))))), (~ (_GLF_IDENTITY(~ (subgroup_local_id), 1u * (~ (subgroup_local_id))))) | 0u), ~ (_GLF_IDENTITY(_GLF_IDENTITY(~ (subgroup_local_id), ~ (~ (~ (subgroup_local_id)))), 1u * _GLF_IDENTITY((~ _GLF_IDENTITY((subgroup_local_id), min(_GLF_IDENTITY((subgroup_local_id), ((subgroup_local_id)) | ((subgroup_local_id))), (subgroup_local_id)))), clamp((~ (subgroup_local_id)), _GLF_IDENTITY((~ (subgroup_local_id)), (_GLF_IDENTITY((_GLF_IDENTITY(~ (subgroup_local_id), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(~ (subgroup_local_id), ~ (~ (~ (subgroup_local_id))))), (~ (_GLF_IDENTITY(~ (subgroup_local_id), ~ (~ (~ (subgroup_local_id)))))) ^ 0u)))), max((~ (subgroup_local_id)), (~ (subgroup_local_id))))) * 1u), (_GLF_IDENTITY(~ (subgroup_local_id), uint(uvec2(~ (subgroup_local_id), (0u << _GLF_IDENTITY(uint(7u), uint(7u)))))))))))))), 0u ^ (_GLF_IDENTITY(subgroup_local_id, (false ? _GLF_FUZZED(virtual_gid) : subgroup_local_id))))) + 0u) + 1, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY(_GLF_IDENTITY(~ (_GLF_IDENTITY(~ (subgroup_local_id), 1u * (~ (subgroup_local_id)))), (~ (_GLF_IDENTITY(~ (subgroup_local_id), 1u * (~ (subgroup_local_id))))) | 0u), clamp(~ (_GLF_IDENTITY(~ (subgroup_local_id), _GLF_IDENTITY(1u * (_GLF_IDENTITY(~ (subgroup_local_id), (~ (subgroup_local_id)) >> 0u)), uint(uvec2(1u * (_GLF_IDENTITY(~ (subgroup_local_id), (~ (subgroup_local_id)) >> 0u)), 1u))))), _GLF_IDENTITY(~ (_GLF_IDENTITY(~ (subgroup_local_id), 1u * _GLF_IDENTITY((~ (subgroup_local_id)), 0u | ((~ (subgroup_local_id)))))), (~ (_GLF_IDENTITY(~ (subgroup_local_id), 1u * (~ (subgroup_local_id))))) | 0u), ~ (_GLF_IDENTITY(_GLF_IDENTITY(~ (subgroup_local_id), 1u * (~ (subgroup_local_id))), (_GLF_IDENTITY(_GLF_IDENTITY(~ (subgroup_local_id), (_GLF_IDENTITY(~ (subgroup_local_id), 0u ^ (~ (subgroup_local_id)))) | uint(_GLF_ZERO(0.0, injectionSwitch.x))), 1u * (~ (subgroup_local_id)))) / 1u))))), 0u ^ (subgroup_local_id)), 1u * (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY(_GLF_IDENTITY(~ (_GLF_IDENTITY(~ (subgroup_local_id), 1u * (~ (subgroup_local_id)))), _GLF_IDENTITY(_GLF_IDENTITY(uint(uvec4(_GLF_IDENTITY(~ (_GLF_IDENTITY(~ (subgroup_local_id), 1u * (~ (subgroup_local_id)))), (~ (_GLF_IDENTITY(~ (subgroup_local_id), 1u * (~ (subgroup_local_id))))) ^ 0u), 1u, uint(_GLF_ZERO(0.0, injectionSwitch.x)), (104796u & 0u))), (uint(uvec4(_GLF_IDENTITY(~ (_GLF_IDENTITY(~ (subgroup_local_id), 1u * (~ (subgroup_local_id)))), (~ (_GLF_IDENTITY(~ (subgroup_local_id), 1u * (~ (subgroup_local_id))))) ^ 0u), 1u, uint(_GLF_ZERO(0.0, injectionSwitch.x)), (104796u & 0u)))) / 1u), (_GLF_IDENTITY(uint(uvec4(_GLF_IDENTITY(~ _GLF_IDENTITY((_GLF_IDENTITY(~ (subgroup_local_id), _GLF_IDENTITY(1u, uint(uvec3(1u, 0u, 0u))) * (~ (subgroup_local_id)))), max((_GLF_IDENTITY(~ (subgroup_local_id), _GLF_IDENTITY(1u, uint(uvec3(1u, 0u, 0u))) * (~ (subgroup_local_id)))), _GLF_IDENTITY((_GLF_IDENTITY(~ (subgroup_local_id), _GLF_IDENTITY(1u, uint(uvec3(1u, 0u, 0u))) * (~ (subgroup_local_id)))), max(_GLF_IDENTITY((_GLF_IDENTITY(~ (subgroup_local_id), _GLF_IDENTITY(1u, uint(uvec3(1u, 0u, 0u))) * (~ (subgroup_local_id)))), ~ (~ ((_GLF_IDENTITY(~ (subgroup_local_id), _GLF_IDENTITY(1u, uint(uvec3(1u, 0u, 0u))) * (~ (subgroup_local_id))))))), (_GLF_IDENTITY(~ (subgroup_local_id), _GLF_IDENTITY(1u, uint(uvec3(1u, 0u, 0u))) * (~ (subgroup_local_id)))))))), (~ (_GLF_IDENTITY(~ (subgroup_local_id), 1u * (~ (subgroup_local_id))))) ^ 0u), 1u, uint(_GLF_ZERO(_GLF_IDENTITY(0.0, float(float(_GLF_IDENTITY(0.0, min(0.0, 0.0))))), injectionSwitch.x)), (104796u & 0u))), (uint(uvec4(_GLF_IDENTITY(~ (_GLF_IDENTITY(~ (subgroup_local_id), 1u * (~ (subgroup_local_id)))), (~ (_GLF_IDENTITY(~ (subgroup_local_id), 1u * _GLF_IDENTITY((~ (subgroup_local_id)), clamp((~ (subgroup_local_id)), (~ (subgroup_local_id)), (~ (subgroup_local_id))))))) ^ 0u), 1u, uint(_GLF_ZERO(0.0, injectionSwitch.x)), (104796u & 0u)))) / 1u)) - 0u)), clamp(~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, 0u | _GLF_IDENTITY((subgroup_local_id), max((subgroup_local_id), _GLF_IDENTITY((subgroup_local_id), 0u ^ ((subgroup_local_id))))))) ^ 0u)) | 0u)), 1u * (_GLF_IDENTITY(~ (subgroup_local_id), (~ (subgroup_local_id)) >> 0u)))), _GLF_IDENTITY(~ (_GLF_IDENTITY(~ _GLF_IDENTITY((subgroup_local_id), min((subgroup_local_id), _GLF_IDENTITY((subgroup_local_id), min((subgroup_local_id), (subgroup_local_id))))), 1u * (~ (subgroup_local_id)))), (~ (_GLF_IDENTITY(~ (subgroup_local_id), 1u * (~ _GLF_IDENTITY((subgroup_local_id), 0u | ((subgroup_local_id))))))) | 0u), ~ (_GLF_IDENTITY(~ (subgroup_local_id), 1u * (~ (subgroup_local_id))))))), 0u ^ (subgroup_local_id)), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY(~ (_GLF_IDENTITY(~ (subgroup_local_id), 1u * (~ (subgroup_local_id)))), clamp(~ (_GLF_IDENTITY(~ (subgroup_local_id), 1u * (_GLF_IDENTITY(~ (_GLF_IDENTITY(subgroup_local_id, clamp(_GLF_IDENTITY(subgroup_local_id, ~ (~ (subgroup_local_id))), _GLF_IDENTITY(subgroup_local_id, uint(uint(subgroup_local_id))), _GLF_IDENTITY(subgroup_local_id, ~ (~ (subgroup_local_id)))))), (~ (subgroup_local_id)) >> 0u)))), _GLF_IDENTITY(_GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY(~ (subgroup_local_id), max(_GLF_IDENTITY(~ (subgroup_local_id), _GLF_IDENTITY(min(~ (subgroup_local_id), ~ (subgroup_local_id)), (min(~ (subgroup_local_id), ~ (subgroup_local_id))) ^ 0u)), ~ _GLF_IDENTITY((subgroup_local_id), min(_GLF_IDENTITY((subgroup_local_id), 0u + ((subgroup_local_id))), _GLF_IDENTITY((subgroup_local_id), (false ? _GLF_FUZZED(workgroup_size) : (subgroup_local_id))))))), _GLF_IDENTITY(1u * (~ (subgroup_local_id)), min(1u * (~ (subgroup_local_id)), 1u * (~ (subgroup_local_id)))))), (~ (_GLF_IDENTITY(~ (subgroup_local_id), _GLF_IDENTITY(1u * (~ (subgroup_local_id)), (_GLF_IDENTITY(1u * (~ (_GLF_IDENTITY(subgroup_local_id, min(subgroup_local_id, _GLF_IDENTITY(subgroup_local_id, uint(uint(subgroup_local_id))))))), clamp(1u * (~ (subgroup_local_id)), 1u * (~ (subgroup_local_id)), _GLF_IDENTITY(1u * (_GLF_IDENTITY(~ (subgroup_local_id), (~ (subgroup_local_id)) | (~ (subgroup_local_id)))), ~ (~ (1u * (~ (subgroup_local_id)))))))) | (1u * (~ (subgroup_local_id))))))) | 0u), clamp(_GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY(~ (subgroup_local_id), max(_GLF_IDENTITY(~ (subgroup_local_id), _GLF_IDENTITY(min(~ (subgroup_local_id), ~ (subgroup_local_id)), (min(~ (subgroup_local_id), ~ (subgroup_local_id))) ^ 0u)), ~ _GLF_IDENTITY((subgroup_local_id), min(_GLF_IDENTITY((subgroup_local_id), 0u + ((subgroup_local_id))), _GLF_IDENTITY((subgroup_local_id), (false ? _GLF_FUZZED(workgroup_size) : (subgroup_local_id))))))), _GLF_IDENTITY(1u * (~ (subgroup_local_id)), min(1u * (~ (subgroup_local_id)), 1u * (~ (subgroup_local_id)))))), (~ (_GLF_IDENTITY(~ (subgroup_local_id), _GLF_IDENTITY(1u * (~ (subgroup_local_id)), (_GLF_IDENTITY(1u * (~ (_GLF_IDENTITY(subgroup_local_id, min(subgroup_local_id, _GLF_IDENTITY(subgroup_local_id, uint(uint(subgroup_local_id))))))), clamp(1u * (~ (subgroup_local_id)), 1u * (~ (subgroup_local_id)), _GLF_IDENTITY(1u * (_GLF_IDENTITY(~ (subgroup_local_id), (~ (subgroup_local_id)) | (~ (subgroup_local_id)))), ~ (~ (1u * (~ (subgroup_local_id)))))))) | (1u * (~ (subgroup_local_id))))))) | 0u), _GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY(~ (subgroup_local_id), max(_GLF_IDENTITY(~ (subgroup_local_id), _GLF_IDENTITY(min(~ (subgroup_local_id), ~ (subgroup_local_id)), (min(~ (subgroup_local_id), ~ (subgroup_local_id))) ^ 0u)), ~ _GLF_IDENTITY((subgroup_local_id), min(_GLF_IDENTITY((subgroup_local_id), 0u + ((subgroup_local_id))), _GLF_IDENTITY((subgroup_local_id), (false ? _GLF_FUZZED(workgroup_size) : (subgroup_local_id))))))), _GLF_IDENTITY(1u * (~ (subgroup_local_id)), min(1u * (~ (subgroup_local_id)), 1u * (~ (subgroup_local_id)))))), (~ (_GLF_IDENTITY(~ (subgroup_local_id), _GLF_IDENTITY(1u * (~ (subgroup_local_id)), (_GLF_IDENTITY(1u * (~ (_GLF_IDENTITY(subgroup_local_id, min(subgroup_local_id, _GLF_IDENTITY(subgroup_local_id, uint(uint(subgroup_local_id))))))), clamp(1u * (~ (subgroup_local_id)), 1u * (~ (subgroup_local_id)), _GLF_IDENTITY(1u * (_GLF_IDENTITY(~ (subgroup_local_id), (~ (subgroup_local_id)) | (~ (subgroup_local_id)))), ~ (~ (1u * (~ (subgroup_local_id)))))))) | (1u * (~ (subgroup_local_id))))))) | 0u), _GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY(~ (subgroup_local_id), max(_GLF_IDENTITY(~ (subgroup_local_id), _GLF_IDENTITY(min(~ (subgroup_local_id), ~ (subgroup_local_id)), (min(~ (subgroup_local_id), ~ (subgroup_local_id))) ^ 0u)), ~ _GLF_IDENTITY((subgroup_local_id), min(_GLF_IDENTITY((subgroup_local_id), 0u + ((subgroup_local_id))), _GLF_IDENTITY((subgroup_local_id), (false ? _GLF_FUZZED(workgroup_size) : (subgroup_local_id))))))), _GLF_IDENTITY(1u * (~ (subgroup_local_id)), min(1u * (~ (subgroup_local_id)), 1u * (~ (subgroup_local_id)))))), (~ (_GLF_IDENTITY(~ (subgroup_local_id), _GLF_IDENTITY(1u * (~ (subgroup_local_id)), (_GLF_IDENTITY(1u * (~ (_GLF_IDENTITY(subgroup_local_id, min(subgroup_local_id, _GLF_IDENTITY(subgroup_local_id, uint(uint(subgroup_local_id))))))), clamp(1u * (~ (subgroup_local_id)), 1u * (~ (subgroup_local_id)), _GLF_IDENTITY(1u * (_GLF_IDENTITY(~ (subgroup_local_id), (~ (subgroup_local_id)) | (~ (subgroup_local_id)))), ~ (~ (1u * (~ (subgroup_local_id)))))))) | (1u * (~ (subgroup_local_id))))))) | 0u))), ~ _GLF_IDENTITY((_GLF_IDENTITY(~ (subgroup_local_id), 1u * (~ (subgroup_local_id)))), clamp((_GLF_IDENTITY(~ (subgroup_local_id), 1u * (~ (subgroup_local_id)))), _GLF_IDENTITY((_GLF_IDENTITY(~ (subgroup_local_id), 1u * (~ (subgroup_local_id)))), max(_GLF_IDENTITY((_GLF_IDENTITY(~ (subgroup_local_id), 1u * (~ (subgroup_local_id)))), max((_GLF_IDENTITY(~ (subgroup_local_id), 1u * (~ (subgroup_local_id)))), (_GLF_IDENTITY(~ (subgroup_local_id), 1u * (~ (subgroup_local_id)))))), _GLF_IDENTITY((_GLF_IDENTITY(~ (subgroup_local_id), 1u * (~ (subgroup_local_id)))), uint(uvec2((_GLF_IDENTITY(~ (subgroup_local_id), 1u * (~ (subgroup_local_id)))), 1u))))), _GLF_IDENTITY((_GLF_IDENTITY(~ (subgroup_local_id), 1u * (~ (subgroup_local_id)))), (_GLF_IDENTITY((_GLF_IDENTITY(~ (subgroup_local_id), 1u * (~ (subgroup_local_id)))), ((_GLF_IDENTITY(~ (subgroup_local_id), 1u * (~ (subgroup_local_id))))) << 0u)) >> 0u)))))), 0u ^ (subgroup_local_id))))))) + 1)) < subgroup_size))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(vec4(injectionSwitch.y, 0.0, 0.0, 1.0)))))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, float(vec3(injectionSwitch.x, 1.0, 1.0))))) < injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) && true)))))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
          barrier();
         barrier();
        }
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(_GLF_IDENTITY(mat4x3(injectionSwitch.y, 0.0, 0.0, 1.0, 0.0, determinant(mat4(1.0, 0.0, abs(0.0), 0.0, 0.0, 1.0, 0.0, _GLF_IDENTITY(0.0, (0.0) - abs(0.0)), 1.0, 1.0, 1.0, determinant(mat3(0.0, 0.0, 0.0, _GLF_IDENTITY(1.0, clamp(1.0, 1.0, _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(float(2835))), float(1.0), bool(true))))), 0.0, 0.0, 0.0, 1.0, 0.0)), 1.0, 0.0, 1.0, sqrt(1.0))), determinant(mat2(0.0, 0.0, 0.0, 0.0)), 0.0, 1.0, 1.0, 1.0, 1.0), _GLF_IDENTITY(mat3(1.0) * (mat4x3(injectionSwitch.y, 0.0, 0.0, 1.0, 0.0, _GLF_IDENTITY(determinant(mat4(1.0, 0.0, abs(0.0), 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, determinant(mat3(0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0)), 1.0, 0.0, 1.0, sqrt(1.0))), clamp(_GLF_IDENTITY(determinant(mat4(1.0, 0.0, abs(0.0), 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, determinant(mat3(0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0)), 1.0, 0.0, 1.0, sqrt(1.0))), mix(float(determinant(mat4(1.0, 0.0, abs(0.0), 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, determinant(mat3(0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0)), 1.0, 0.0, 1.0, sqrt(1.0)))), float(_GLF_FUZZED(-82.84)), bool(false))), determinant(mat4(1.0, 0.0, abs(0.0), 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, determinant(mat3(0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0)), 1.0, 0.0, 1.0, sqrt(1.0))), determinant(mat4(1.0, 0.0, abs(0.0), 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, determinant(mat3(0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0)), 1.0, 0.0, 1.0, sqrt(1.0))))), determinant(mat2(_GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(234.431) : _GLF_IDENTITY(0.0, (0.0) - 0.0))), 0.0, 0.0, 0.0)), 0.0, 1.0, 1.0, 1.0, 1.0)), (mat3(1.0) * (mat4x3(injectionSwitch.y, 0.0, 0.0, 1.0, 0.0, determinant(mat4(_GLF_IDENTITY(1.0, (1.0) * cos(0.0)), 0.0, abs(0.0), 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, determinant(mat3(0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0)), 1.0, 0.0, 1.0, sqrt(1.0))), determinant(mat2(0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, (0.0) / abs(1.0)), 0.0, 0.0)))), 0.0, 1.0, 1.0, 1.0, 1.0))) - mat4x3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)))))))) || false)))
      barrier();
     barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec4(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false, true, false))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, _GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, false)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (bool(bvec2(false, false)))))))))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY((false), bool(bvec2((false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) || _GLF_IDENTITY(false, (false) && true)), _GLF_IDENTITY(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(clamp(_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)), _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), injectionSwitch), mix(vec2((clamp(_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)), _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), injectionSwitch))[0], _GLF_FUZZED((-8.4 * 9.3))), _GLF_IDENTITY(vec2(_GLF_FUZZED(7.4), (clamp(_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)), _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), injectionSwitch))[1]), mix(vec2(_GLF_FUZZED(-3808.2366), _GLF_FUZZED(-13.88)), vec2((vec2(_GLF_FUZZED(7.4), (clamp(_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)), _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), injectionSwitch))[1]))[0], (vec2(_GLF_FUZZED(7.4), (clamp(_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)), _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), injectionSwitch))[1]))[1]), bvec2(true, true))), bvec2(false, true)))).x < injectionSwitch.y)), false || (_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(clamp(_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)), _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), injectionSwitch), vec2(mat3x2(_GLF_IDENTITY(clamp(_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)), _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), injectionSwitch), vec2(0.0, 0.0) + (clamp(_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)), _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), injectionSwitch))), 1.0, length(vec2(0.0, 0.0)), 0.0, 0.0))), mix(vec2(_GLF_IDENTITY((clamp(_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)), _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), injectionSwitch))[0], clamp((clamp(_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)), _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), injectionSwitch))[0], (clamp(_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)), _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), injectionSwitch))[0], (clamp(_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), min(injectionSwitch, injectionSwitch)), injectionSwitch))[0])), _GLF_FUZZED((-8.4 * 9.3))), vec2(_GLF_FUZZED(7.4), (clamp(_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)), _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(min(injectionSwitch, injectionSwitch), (min(injectionSwitch, injectionSwitch)) - abs(vec2(0.0, 0.0)))), injectionSwitch))[1]), bvec2(false, true)))).x < injectionSwitch.y)))) && (_GLF_IDENTITY(false, _GLF_IDENTITY((false), bool(_GLF_IDENTITY(bvec2((false), true), bvec2(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(bvec2((false), true), _GLF_IDENTITY(bvec2(bvec4(bvec2((false), true), true, false)), bvec2(bvec2(bvec2(bvec4(bvec2((false), true), true, false)))))), _GLF_IDENTITY(bvec2(bvec2(_GLF_IDENTITY(bvec2((false), true), bvec2(bvec4(bvec2((false), true), true, false))))), bvec2(bvec2(bvec2(bvec2(_GLF_IDENTITY(bvec2((false), true), bvec2(bvec4(bvec2((false), true), true, false))))))))), false, true))))) || false)))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
      barrier();
     barrier();
    }
   int i = 0;
   atomicStore(buf[next_virtual_gid], uint(_GLF_IDENTITY(read_1 + 1 == read_2, (read_1 + 1 == read_2) && true)) + 1, 4, 64, 4);
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), ! (! (! (_GLF_DEAD(false))))))))
      barrier();
     barrier();
    }
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (_GLF_IDENTITY(! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, true)), bool(bvec4(bool(bvec2(false, true)), true, true, false))))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
  }
 else
  {
   atomicStore(buf[next_virtual_gid], uint(read_1 + 1 == read_2) + 1, _GLF_IDENTITY(4, (4) / 1), 64, 4);
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
}
