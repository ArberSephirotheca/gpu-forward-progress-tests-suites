#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_DEAD(false), false, true))), true, true))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(false, ! (! (false))) || (_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (! (injectionSwitch.x < injectionSwitch.y))))))))))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) || false)))
      barrier();
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), ! (! (bool(bool(false))))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) || false))), (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(17.41) : injectionSwitch.x)) > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, true, true)))))
    return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec3(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false, true))))))
    return;
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)), ! (_GLF_IDENTITY(! (bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))), ! (! _GLF_IDENTITY((! (bool(bvec2(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false)), (injectionSwitch.x > injectionSwitch.y)), true)))), (_GLF_IDENTITY((! (bool(bvec2(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false)), (injectionSwitch.x > injectionSwitch.y)), true)))), bool(bool((! (bool(bvec2(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false)), (injectionSwitch.x > injectionSwitch.y)), true)))))))) || false))))))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch)[1], (false ? _GLF_FUZZED(-65.17) : (injectionSwitch)[1]))), vec2(_GLF_FUZZED((50.57 / 6.7)), _GLF_FUZZED((367.899))), bvec2(false, false))).y))))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   return;
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0))), injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0), injectionSwitch.y)))), clamp(_GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0))), injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0), injectionSwitch.y)))), _GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0))), injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0), injectionSwitch.y)))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0))), injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0), injectionSwitch.y)))), float(vec2(_GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0))), injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0), injectionSwitch.y)))), 0.0)))))) - 0.0)) / 1.0)))), false || (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), (_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))) - 0.0), injectionSwitch.y, injectionSwitch.y))) - 0.0)) / 1.0)))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y, injectionSwitch.y))) - 0.0)) / 1.0), min(_GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y, injectionSwitch.y))) - 0.0)) / 1.0), _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y, injectionSwitch.y))) - 0.0)) / 1.0)))))), true && (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(mat3x4(injectionSwitch.x, 0.0, 1.0, abs(0.0), _GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0)), dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0))), 1.0, 1.0, 1.0, determinant(mat3(0.0, 0.0, 0.0, 1.0, 0.0, abs(0.0), 0.0, 0.0, determinant(mat2(0.0, 0.0, 0.0, 0.0)))), determinant(mat2(1.0, 1.0, 0.0, 1.0)), 1.0, 0.0)), clamp(float(mat3x4(injectionSwitch.x, 0.0, 1.0, abs(0.0), _GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0)), dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0))), 1.0, 1.0, 1.0, determinant(mat3(0.0, 0.0, 0.0, 1.0, 0.0, abs(0.0), 0.0, 0.0, determinant(mat2(0.0, 0.0, 0.0, 0.0)))), determinant(mat2(1.0, 1.0, 0.0, 1.0)), 1.0, 0.0)), float(mat3x4(injectionSwitch.x, 0.0, 1.0, abs(0.0), _GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0)), dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0))), 1.0, 1.0, 1.0, determinant(mat3(0.0, 0.0, 0.0, 1.0, 0.0, abs(0.0), 0.0, 0.0, determinant(mat2(0.0, 0.0, 0.0, 0.0)))), determinant(mat2(1.0, 1.0, 0.0, 1.0)), 1.0, 0.0)), float(mat3x4(injectionSwitch.x, 0.0, 1.0, abs(0.0), _GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0)), dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0))), 1.0, 1.0, 1.0, determinant(mat3(0.0, 0.0, 0.0, 1.0, 0.0, abs(0.0), 0.0, 0.0, determinant(mat2(0.0, 0.0, 0.0, 0.0)))), determinant(mat2(1.0, 1.0, 0.0, 1.0)), 1.0, 0.0))))) > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0), injectionSwitch.y)), injectionSwitch.y, injectionSwitch.y))) - _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(3.6)), _GLF_IDENTITY(float(0.0), (float(0.0)) + _GLF_IDENTITY(0.0, min(0.0, 0.0))), bool(true))))) / 1.0)))))), false || (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y, (_GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(mat4x3(injectionSwitch, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0))).y, clamp(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / cos(0.0)), injectionSwitch.y))) - 0.0)) / 1.0))))))) || false))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
  {
   if(_GLF_DEAD(false))
    return;
   barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false))))), ! (! (! (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     barrier();
    }
  }
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * 1.0) > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), ! _GLF_IDENTITY((! (_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))), ((! (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))))))) || _GLF_IDENTITY(false, (false) || false))), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_DEAD(false), ! _GLF_IDENTITY((! (_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, (false) && true))))), true && (_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(true, ! (! (true))) && (false)), _GLF_IDENTITY((_GLF_IDENTITY(false, true && (false))), bool(bvec4((_GLF_IDENTITY(false, true && (false))), false, true, false))) && true)))))), ((! (_GLF_DEAD(false)))) || false))), ! (_GLF_IDENTITY(_GLF_IDENTITY(! (bool(_GLF_IDENTITY(_GLF_DEAD(false), ! _GLF_IDENTITY((! (_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))), ((! (_GLF_DEAD(false)))) || false)))), (! (bool(_GLF_IDENTITY(_GLF_DEAD(false), ! _GLF_IDENTITY((! _GLF_IDENTITY((_GLF_DEAD(_GLF_IDENTITY(false, true && (false)))), bool(bvec4(_GLF_IDENTITY((_GLF_DEAD(_GLF_IDENTITY(false, true && (false)))), true && ((_GLF_DEAD(_GLF_IDENTITY(false, true && (false)))))), false, true, true)))), ((! (_GLF_DEAD(false)))) || false))))) && true), ! (! (! (bool(_GLF_IDENTITY(_GLF_DEAD(false), ! _GLF_IDENTITY((! (_GLF_DEAD(_GLF_IDENTITY(false, true && _GLF_IDENTITY((false), ! (! ((false)))))))), (_GLF_IDENTITY((! (_GLF_DEAD(false))), bool(bvec4((! (_GLF_DEAD(false))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, true)))) || _GLF_IDENTITY(false, bool(bool(false)))))))))))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
    barrier();
   return;
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY((_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), false || ((! (false)))))), ! _GLF_IDENTITY((! ((_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), false || ((! (false)))))))), ((! ((_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), false || ((! (false))))))))) || false)) || false), (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(-4.6)))))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_DEAD(false), true))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bool(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(injectionSwitch.x > injectionSwitch.y, true, true, true)))))))))))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, true, false)), ! (! (bool(bvec3(false, true, false))))))))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, (false) && true), false, false), bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, (false) && true), false, false), bvec3(bvec4(bvec3(_GLF_IDENTITY(false, (false) && true), false, false), false)))), bvec3(bvec4(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, (false) && true), false, false), bvec3(bvec4(bvec3(_GLF_IDENTITY(false, (false) && true), false, false), false)))), false)))))), bool(bvec4(bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, (false) && true), false, false), bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, (false) && true), false, false), bvec3(bvec4(bvec3(_GLF_IDENTITY(false, (false) && true), false, false), false)))), bvec3(bvec4(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, (false) && true), false, false), bvec3(bvec4(bvec3(_GLF_IDENTITY(false, (false) && true), false, false), false)))), false)))))), true, true, true))))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), (true ? mat2(1.0) * (injectionSwitch) : _GLF_FUZZED(injectionSwitch)))).x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || false))
        return;
       return;
       if(_GLF_DEAD(false))
        barrier();
      }
     barrier();
    }
   return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, true && _GLF_IDENTITY((false), ((false)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), (! (injectionSwitch.x > injectionSwitch.y)) || false)))) || false)))))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && true))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec3(false, true, true))), (false) || false)))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
           if(_GLF_DEAD(false))
            barrier();
           return;
          }
         if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_DEAD(false), true, false))))))
          barrier();
         return;
         if(_GLF_DEAD(false))
          return;
        }
       if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(_GLF_DEAD(false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_DEAD(false))))))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, false || (false))), ! (_GLF_IDENTITY(! (! (_GLF_IDENTITY(false, false || (false)))), (! (! (_GLF_IDENTITY(false, false || (false))))) || false)))))))
        return;
       if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(false, false || (false)))), true)))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false)))))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (_GLF_IDENTITY(! (false), bool(bvec2(! (false), false)))))))), (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(4.8)), vec2(_GLF_FUZZED(-588.410), (injectionSwitch)[1]), bvec2(false, true))).x, max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(4.8)), vec2(_GLF_FUZZED(-588.410), (injectionSwitch)[1]), bvec2(false, true))).x, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(4.8)), vec2(_GLF_FUZZED(-588.410), (injectionSwitch)[1]), bvec2(false, true))).x, clamp(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(4.8)), vec2(_GLF_FUZZED(-588.410), (injectionSwitch)[1]), bvec2(false, true))).x, _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(4.8)), vec2(_GLF_FUZZED(-588.410), (injectionSwitch)[1]), bvec2(false, true))).x, _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(4.8)), vec2(_GLF_FUZZED(-588.410), (injectionSwitch)[1]), bvec2(false, true))).x))) * 1.0), _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(4.8)), vec2(_GLF_FUZZED(-588.410), (injectionSwitch)[1]), bvec2(false, true))).x)), min(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(4.8)), vec2(_GLF_FUZZED(-588.410), (injectionSwitch)[1]), bvec2(false, _GLF_IDENTITY(true, (true) || false)))).x, _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(4.8)), vec2(_GLF_FUZZED(-588.410), (injectionSwitch)[1]), bvec2(false, true))).x)))) > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(true, (true) && true) && (false))))
      barrier();
     return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > injectionSwitch.y, true && (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > injectionSwitch.y)), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[_GLF_IDENTITY(0, (0) | (0))], (injectionSwitch[_GLF_IDENTITY(0, (0) | (0))]) * 1.0), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-9255.7427), (injectionSwitch)[1]), vec2((_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), injectionSwitch)))[0], _GLF_FUZZED(6.0)), bvec2(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))[1], float(_GLF_IDENTITY(vec3(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-9255.7427), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(6.0)), bvec2(true, _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(float(140956u)), _GLF_FUZZED(-904.714)), vec2((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch)[1], ((injectionSwitch)[1]) + 0.0)), bvec2(true, true))))).y)))))[1], 1.0, 1.0), (true ? vec3(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), mix(vec2(_GLF_FUZZED(-9255.7427), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(6.0)), bvec2(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))[1], 1.0, 1.0) : _GLF_FUZZED(vec3(-234.359, -64.78, 7287.2044)))))))).x > injectionSwitch.y, true && (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / abs(_GLF_IDENTITY(vec2(1.0, 1.0), (vec2(1.0, 1.0)) * mat2(1.0)))), vec2(injectionSwitch[0], injectionSwitch[1])).x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat3x2(injectionSwitch, 0.0, 0.0, _GLF_ZERO(_GLF_IDENTITY(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), (_GLF_IDENTITY(0.0, 0.0 + (_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-161.881)), bool(false)))))) * 1.0), _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x), 1.0)), mix(vec2((vec2(mat3x2(injectionSwitch, 0.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0)))[_GLF_IDENTITY(0, _GLF_IDENTITY(max(0, _GLF_IDENTITY(0, (0) * 1)), max(max(0, _GLF_IDENTITY(0, (0) * 1)), max(0, _GLF_IDENTITY(0, (0) * 1)))))], (vec2(mat3x2(injectionSwitch, 0.0, 0.0, _GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED((+ 5.0))), float(injectionSwitch.x), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), 1.0)))[1]), vec2(_GLF_FUZZED(6.2), _GLF_FUZZED(8015.3621)), bvec2(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec2(false, false))), (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bool(injectionSwitch.x > injectionSwitch.y)), true && (bool(bool(injectionSwitch.x > injectionSwitch.y))))))))))))))[1])).x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * _GLF_IDENTITY(mat2(1.0), (_GLF_IDENTITY(mat2(1.0), transpose(transpose(mat2(1.0))))) - mat2(0.0, 0.0, 0.0, 0.0))), injectionSwitch)).y, clamp(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).y, _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y))))))))))))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     return;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), true && ((! (false))))), true), _GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(bvec2(_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), true && ((! (false))))), true)), bvec2(bvec4(bvec2(bvec2(_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), true && ((! (false))))), true)), false, false))), bvec2(bvec2(_GLF_IDENTITY(bvec2(bvec2(_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), true && ((! (false))))), true)), bvec2(bvec4(bvec2(bvec2(_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), true && ((! (false))))), true)), false, false))))))), bvec2(bvec2(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(bvec2(bvec2(_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), true && ((! (false))))), true)), bvec2(bvec4(bvec2(bvec2(_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), true && ((! (false))))), true)), false, false)))), bvec2(bvec3(bvec2(_GLF_IDENTITY(bvec2(bvec2(_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), true && ((! (false))))), true)), bvec2(bvec4(bvec2(bvec2(_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), true && ((! (false))))), true)), false, false)))), true)))))))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], float(vec4(injectionSwitch[1], 1.0, 0.0, 0.0))))), injectionSwitch)).y))))
        barrier();
       return;
      }
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true)))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(vec2(8583.9684, 6650.2536).x), _GLF_FUZZED(float(90255u))), vec2((injectionSwitch)[0], (injectionSwitch)[_GLF_IDENTITY(1, 0 ^ (1))]), bvec2(true, true))).x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   barrier();
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  barrier();
 uint num_workgroup = _GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups.x, (gl_NumWorkGroups.x) << uint(_GLF_ZERO(0.0, injectionSwitch.x))), _GLF_IDENTITY(uint(uvec4(_GLF_IDENTITY(gl_NumWorkGroups, max(gl_NumWorkGroups, gl_NumWorkGroups)).x, 1u, _GLF_IDENTITY(0u, ~ (~ (0u))), 0u)), (uint(uvec4(gl_NumWorkGroups.x, 1u, 0u, _GLF_IDENTITY(0u, clamp(0u, 0u, 0u))))) - 0u));
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec2(bvec2(_GLF_IDENTITY(false, false || (false)), _GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, (false) || false)))))))))) && true), false || (_GLF_IDENTITY(false, _GLF_IDENTITY((_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(false, (false) || false), false)), bool(bvec4(bool(bvec2(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, false, false), bvec3(bvec3(bvec3(false, false, false)))))), false), bvec2(bvec2(bvec2(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, false, false), bvec3(bvec3(bvec3(false, false, false)))))), false)))))), false)), true, false, true))))), false || _GLF_IDENTITY(_GLF_IDENTITY(((_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec2(false, false)), bool(bvec4(bool(bvec2(false, false)), true, false, true))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(bool(bvec2(false, false)), bool(bvec4(bool(bvec2(false, false)), _GLF_IDENTITY(true, (_GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, bool(bvec4(true, false, false, false)))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), false, true)))))))), (((_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec2(false, false)), bool(bvec4(bool(bvec2(false, false)), true, false, true))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(bool(bvec2(false, false)), bool(bvec4(bool(bvec2(false, false)), _GLF_IDENTITY(true, (_GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, bool(bvec4(true, false, false, false)))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), false, true))))))))) && true), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(((_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec2(false, false)), bool(bvec4(bool(bvec2(false, false)), true, false, true))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(bool(bvec2(false, false)), bool(bvec4(bool(bvec2(false, false)), _GLF_IDENTITY(true, (_GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, bool(bvec4(true, false, false, false)))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), false, true)))))))), (((_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec2(false, false)), bool(bvec4(bool(bvec2(false, false)), true, false, true))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(bool(bvec2(false, false)), bool(bvec4(bool(bvec2(false, false)), _GLF_IDENTITY(true, (_GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, bool(bvec4(true, false, false, false)))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), false, true))))))))) && true), false), bvec2(bvec2(bvec2(_GLF_IDENTITY(((_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec2(false, false)), bool(bvec4(bool(bvec2(false, false)), true, false, true))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(bool(bvec2(false, false)), bool(bvec4(bool(bvec2(false, false)), _GLF_IDENTITY(true, (_GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, bool(bvec4(true, false, false, false)))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), false, true)))))))), (((_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec2(false, false)), bool(bvec4(bool(bvec2(false, false)), true, false, true))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(bool(bvec2(false, false)), bool(bvec4(bool(bvec2(false, false)), _GLF_IDENTITY(true, (_GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, bool(bvec4(true, false, false, false)))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), false, true))))))))) && true), false))))))) && true)))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)), (_GLF_DEAD(false)) || _GLF_IDENTITY(false, false || (false))))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, float(mat3x2(injectionSwitch.x, 1.0, determinant(mat2(0.0, 0.0, 1.0, 0.0)), 1.0, 1.0, 0.0))) > injectionSwitch.y))))
  barrier();
 if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch[1], (_GLF_IDENTITY(injectionSwitch[1], clamp(injectionSwitch[1], injectionSwitch[1], injectionSwitch[1]))) / abs(1.0)), (false ? _GLF_FUZZED(9.4) : _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), ((injectionSwitch) * mat2(1.0)) + vec2(0.0, 0.0)))[1], (_GLF_IDENTITY(injectionSwitch[1], clamp(injectionSwitch[1], injectionSwitch[1], injectionSwitch[1]))) / abs(1.0)))))).x > injectionSwitch.y), ! (! ((_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch[1], (_GLF_IDENTITY(injectionSwitch[1], clamp(injectionSwitch[1], injectionSwitch[1], injectionSwitch[1]))) / abs(1.0)), (false ? _GLF_FUZZED(9.4) : _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), ((injectionSwitch) * mat2(1.0)) + vec2(0.0, 0.0)))[1], (_GLF_IDENTITY(injectionSwitch[1], clamp(injectionSwitch[1], injectionSwitch[1], injectionSwitch[1]))) / abs(1.0)))))).x > injectionSwitch.y)))))), (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch[1], max(injectionSwitch[1], injectionSwitch[1])), clamp(injectionSwitch[1], injectionSwitch[1], injectionSwitch[1]))))[0], _GLF_IDENTITY(injectionSwitch[1], (_GLF_IDENTITY(injectionSwitch[1], clamp(injectionSwitch[1], injectionSwitch[1], injectionSwitch[1]))) / abs(1.0)))).x > injectionSwitch.y)))) && true), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch[1], (_GLF_IDENTITY(injectionSwitch[1], clamp(injectionSwitch[1], injectionSwitch[1], injectionSwitch[1]))) / abs(1.0)), (false ? _GLF_FUZZED(9.4) : _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), ((injectionSwitch) * mat2(1.0)) + vec2(0.0, 0.0)))[1], (_GLF_IDENTITY(injectionSwitch[1], clamp(injectionSwitch[1], injectionSwitch[1], injectionSwitch[1]))) / abs(1.0)))))).x > injectionSwitch.y), ! (! ((_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch[1], (_GLF_IDENTITY(injectionSwitch[1], clamp(injectionSwitch[1], injectionSwitch[1], injectionSwitch[1]))) / abs(1.0)), (false ? _GLF_FUZZED(9.4) : _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), ((injectionSwitch) * mat2(1.0)) + vec2(0.0, 0.0)))[1], (_GLF_IDENTITY(injectionSwitch[1], clamp(injectionSwitch[1], injectionSwitch[1], injectionSwitch[1]))) / abs(1.0)))))).x > injectionSwitch.y)))))), (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch[1], max(injectionSwitch[1], injectionSwitch[1])), clamp(injectionSwitch[1], injectionSwitch[1], injectionSwitch[1]))))[0], _GLF_IDENTITY(injectionSwitch[1], (_GLF_IDENTITY(injectionSwitch[1], clamp(injectionSwitch[1], injectionSwitch[1], injectionSwitch[1]))) / abs(1.0)))).x > injectionSwitch.y)))) && true), true)), (bool(bvec2(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch[1], (_GLF_IDENTITY(injectionSwitch[1], clamp(injectionSwitch[1], injectionSwitch[1], injectionSwitch[1]))) / abs(1.0)), (false ? _GLF_FUZZED(9.4) : _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), ((injectionSwitch) * mat2(1.0)) + vec2(0.0, 0.0)))[1], (_GLF_IDENTITY(injectionSwitch[1], clamp(injectionSwitch[1], injectionSwitch[1], injectionSwitch[1]))) / abs(1.0)))))).x > injectionSwitch.y), ! (! ((_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch[1], (_GLF_IDENTITY(injectionSwitch[1], clamp(injectionSwitch[1], injectionSwitch[1], injectionSwitch[1]))) / abs(1.0)), (false ? _GLF_FUZZED(9.4) : _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), ((injectionSwitch) * mat2(1.0)) + vec2(0.0, 0.0)))[1], (_GLF_IDENTITY(injectionSwitch[1], clamp(injectionSwitch[1], injectionSwitch[1], injectionSwitch[1]))) / abs(1.0)))))).x > injectionSwitch.y)))))), (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch[1], max(injectionSwitch[1], injectionSwitch[1])), clamp(injectionSwitch[1], injectionSwitch[1], injectionSwitch[1]))))[0], _GLF_IDENTITY(injectionSwitch[1], (_GLF_IDENTITY(injectionSwitch[1], clamp(injectionSwitch[1], injectionSwitch[1], injectionSwitch[1]))) / abs(1.0)))).x > injectionSwitch.y)))) && true), true))) && true)))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       barrier();
      }
     return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(857.569)), bool(false)))) / 1.0))))))))
        return;
       barrier();
      }
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
  {
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch))) + vec2(0.0, 0.0)) : _GLF_FUZZED(vec2(-1.7, -8001.9880)))).y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, true && (false))))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(-6054.0124) : injectionSwitch.x)) > injectionSwitch.y))))
    return;
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, false, false, false)))))
      return;
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y))))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, bool(bvec3(false, false, true)))))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || _GLF_IDENTITY((false), ((false)) || false))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(false, _GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), (_GLF_IDENTITY(_GLF_IDENTITY(! (true), bool(bvec3(! (true), false, false))), (_GLF_IDENTITY(_GLF_IDENTITY(! (true), bool(bvec3(! (true), false, false))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(! (true), bool(bvec3(! (true), false, false))), bool(bvec4(_GLF_IDENTITY(! (true), bool(bvec3(! (true), false, false))), false, true, false))))))) && true)) && true)))))), _GLF_IDENTITY(! (! (_GLF_IDENTITY(false, ! (! _GLF_IDENTITY(_GLF_IDENTITY((false), ! (! (_GLF_IDENTITY((false), true && (_GLF_IDENTITY((false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && ((false)))))))), ! (! (_GLF_IDENTITY((false), ! (! (_GLF_IDENTITY((false), true && ((false))))))))))))), _GLF_IDENTITY(bool(bvec3(! (! (_GLF_IDENTITY(false, ! (! _GLF_IDENTITY(_GLF_IDENTITY((false), ! (! (_GLF_IDENTITY((false), true && (_GLF_IDENTITY((false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && ((false)))))))), ! (! (_GLF_IDENTITY((false), ! (! (_GLF_IDENTITY((false), true && ((false))))))))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)), bool(bvec2(bool(bvec3(! (! (_GLF_IDENTITY(false, ! (! _GLF_IDENTITY(_GLF_IDENTITY((false), ! (! (_GLF_IDENTITY((false), true && (_GLF_IDENTITY((false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && ((false)))))))), ! (! (_GLF_IDENTITY((false), ! (! (_GLF_IDENTITY((false), true && ((false))))))))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)), false)))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, float(mat4x2(injectionSwitch.y, 1.0, 1.0, 0.0, 0.0, sqrt(0.0), _GLF_ONE(1.0, injectionSwitch.y), 1.0))), _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y))))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), false || (_GLF_IDENTITY((! (false)), false || ((! (false)))))))), ! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))), ! (! (_GLF_DEAD(_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), (_GLF_IDENTITY((! (false)), false || ((! (false))))) && true))))))))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(injectionSwitch.x > injectionSwitch.y, false)))))))
      barrier();
     return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         return;
        }
       barrier();
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        return;
       barrier();
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec3(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true), true, true)))))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y))))))))), _GLF_IDENTITY(true && (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))))))), true && (true && (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))), true, true), bvec3(_GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))), true, true)), bvec3(bvec4(bvec3(bvec3(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))), true, true)), false))))))))))))))))))
        barrier();
       return;
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, false || (false)), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(mat2(injectionSwitch, _GLF_IDENTITY(1.0, float(mat2(_GLF_IDENTITY(1.0, 1.0 * (1.0)), 0.0, 1.0, 1.0))), sin(0.0)))).x, clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(mat2(injectionSwitch, _GLF_IDENTITY(1.0, float(mat2(_GLF_IDENTITY(1.0, 1.0 * (1.0)), 0.0, 1.0, 1.0))), sin(0.0)))).x, max(_GLF_IDENTITY(injectionSwitch, vec2(mat2(injectionSwitch, _GLF_IDENTITY(1.0, float(mat2(_GLF_IDENTITY(1.0, 1.0 * (1.0)), 0.0, 1.0, 1.0))), sin(0.0)))).x, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(mat2(injectionSwitch, _GLF_IDENTITY(1.0, float(mat2(_GLF_IDENTITY(1.0, 1.0 * (1.0)), 0.0, 1.0, 1.0))), sin(0.0)))).x, clamp(_GLF_IDENTITY(injectionSwitch, vec2(mat2(injectionSwitch, _GLF_IDENTITY(1.0, float(mat2(_GLF_IDENTITY(1.0, 1.0 * (1.0)), 0.0, 1.0, 1.0))), sin(0.0)))).x, _GLF_IDENTITY(injectionSwitch, vec2(mat2(injectionSwitch, _GLF_IDENTITY(1.0, float(mat2(_GLF_IDENTITY(1.0, 1.0 * (1.0)), 0.0, 1.0, 1.0))), sin(0.0)))).x, _GLF_IDENTITY(injectionSwitch, vec2(mat2(injectionSwitch, _GLF_IDENTITY(1.0, float(mat2(_GLF_IDENTITY(1.0, 1.0 * (1.0)), 0.0, 1.0, 1.0))), sin(0.0)))).x)))), _GLF_IDENTITY(injectionSwitch, vec2(mat2(injectionSwitch, _GLF_IDENTITY(1.0, float(mat2(_GLF_IDENTITY(1.0, 1.0 * (1.0)), 0.0, 1.0, 1.0))), sin(0.0)))).x, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(mat2(injectionSwitch, _GLF_IDENTITY(1.0, float(mat2(_GLF_IDENTITY(1.0, 1.0 * (1.0)), 0.0, 1.0, 1.0))), sin(0.0)))).x, max(_GLF_IDENTITY(injectionSwitch, vec2(mat2(injectionSwitch, _GLF_IDENTITY(1.0, float(mat2(_GLF_IDENTITY(1.0, 1.0 * (1.0)), 0.0, 1.0, 1.0))), sin(0.0)))).x, _GLF_IDENTITY(injectionSwitch, vec2(mat2(injectionSwitch, _GLF_IDENTITY(1.0, float(mat2(_GLF_IDENTITY(1.0, 1.0 * (1.0)), 0.0, 1.0, 1.0))), sin(0.0)))).x)))) > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY((_GLF_IDENTITY(false, bool(bvec2(false, false)))) && true, bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY((_GLF_IDENTITY(false, bool(bvec2(false, false)))) && true, false || ((_GLF_IDENTITY(false, bool(bvec2(false, false)))) && true)), false), bvec2(bvec2(_GLF_IDENTITY(bvec2(_GLF_IDENTITY((_GLF_IDENTITY(false, bool(bvec2(false, false)))) && true, false || ((_GLF_IDENTITY(false, bool(bvec2(false, false)))) && true)), false), bvec2(bvec2(bvec2(_GLF_IDENTITY((_GLF_IDENTITY(false, bool(bvec2(false, false)))) && true, false || ((_GLF_IDENTITY(false, bool(bvec2(false, false)))) && true)), false))))))))))))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint workgroup_size = gl_WorkGroupSize.x;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY((! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bool(bvec4((! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true, true, false))) || false)))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
    barrier();
   barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))) / cos(vec2(0.0, 0.0))).x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), (injectionSwitch) * _GLF_IDENTITY(mat2(1.0), (mat2(1.0)) - mat2(0.0, 0.0, 0.0, 0.0))).y))), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))), true && (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(vec2(77.21, 4.3).g), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED((+ 4.2))), bvec2(true, false))).x, (true ? _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(vec2(77.21, 4.3).g), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED((+ 4.2))), bvec2(true, false))).x : _GLF_FUZZED(112.495))), (false ? _GLF_FUZZED(5.7) : _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(vec2(77.21, 4.3).g), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED((+ 4.2))), bvec2(true, false))).x)) > injectionSwitch.y))))), true, false), bvec3(bvec4(bvec3(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(-4015.8861))), _GLF_IDENTITY(injectionSwitch.y, float(vec3(injectionSwitch.y, 0.0, _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0))))))), max(_GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(-4015.8861))), _GLF_IDENTITY(injectionSwitch.y, float(vec3(injectionSwitch.y, 0.0, _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0))))))), _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(-4015.8861))), _GLF_IDENTITY(injectionSwitch.y, float(vec3(injectionSwitch.y, 0.0, _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)))))))))))), _GLF_IDENTITY(true && (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))), true && (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), (_GLF_IDENTITY(true && (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(vec4(injectionSwitch.y, 1.0, 1.0, 1.0))), (injectionSwitch.x > injectionSwitch.y) || false))))), ! (_GLF_IDENTITY(! (true && (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), bool(bvec2(! (true && _GLF_IDENTITY((_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true && ((_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), true)))))) || false)), true, false), false))))))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false))))))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))
        barrier();
       return;
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0) > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, false, true)))))
        return;
       barrier();
      }
     return;
    }
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! (false)))))), (injectionSwitch.x > injectionSwitch.y))))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        return;
      }
     if(_GLF_DEAD(false))
      barrier();
     return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) || false)))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(true && (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec3(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec3(injectionSwitch.x > injectionSwitch.y, false, false))), false, false)))), true && (true && (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec3(injectionSwitch.x > injectionSwitch.y, false, false))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec3(injectionSwitch.x > injectionSwitch.y, false, false))), bool(bvec2(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec3(injectionSwitch.x > injectionSwitch.y, false, false))), false)))))), false, false)))))))))))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    barrier();
   return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
  return;
 uint workgroup_id = gl_WorkGroupID.x;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)), injectionSwitch)).x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))))), ! (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! (! (false)))), ! (! (! (_GLF_IDENTITY(false, ! (! (false)))))))))))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
  {
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(false))
    barrier();
  }
 uint workgroup_base = _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_size, _GLF_IDENTITY((false ? _GLF_FUZZED((uvec4(93703u, 101698u, 76488u, 96793u)[1] << workgroup_id)) : workgroup_size), ~ (_GLF_IDENTITY(~ ((false ? _GLF_FUZZED((uvec4(93703u, _GLF_IDENTITY(_GLF_IDENTITY(101698u, min(_GLF_IDENTITY(101698u, uint(uvec3(101698u, 0u, 1u))), 101698u)), (_GLF_IDENTITY(101698u, min(_GLF_IDENTITY(101698u, uint(uvec3(101698u, 0u, 1u))), 101698u))) * 1u), 76488u, 96793u)[1] << workgroup_id)) : _GLF_IDENTITY(workgroup_size, (workgroup_size) ^ 0u))), 0u + (~ ((false ? _GLF_FUZZED((_GLF_IDENTITY(uvec4(_GLF_IDENTITY(93703u, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY(93703u, 0u + (93703u)), uint(uvec3(_GLF_IDENTITY(93703u, _GLF_IDENTITY((93703u) | 0u, _GLF_IDENTITY(uint(uvec4(_GLF_IDENTITY((93703u) | 0u, min(_GLF_IDENTITY((93703u) | 0u, ((93703u) | 0u) ^ 0u), (93703u) | 0u)), 0u, 1u, 0u)), (uint(uvec4(_GLF_IDENTITY((93703u) | 0u, min(_GLF_IDENTITY((93703u) | 0u, ((93703u) | 0u) ^ 0u), (93703u) | 0u)), 0u, 1u, 0u))) | uint(_GLF_ZERO(0.0, injectionSwitch.x))))), 0u, 1u)))), (~ (_GLF_IDENTITY(93703u, uint(uvec3(_GLF_IDENTITY(93703u, (93703u) | 0u), _GLF_IDENTITY(0u, (true ? 0u : _GLF_FUZZED(atomicMax(workgroup_id, subgroup_id)))), 1u))))) ^ 0u))), 101698u, 76488u, 96793u)[1], (uvec4(_GLF_IDENTITY(93703u, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY(93703u, 0u + (93703u)), uint(uvec3(_GLF_IDENTITY(93703u, _GLF_IDENTITY((93703u) | 0u, _GLF_IDENTITY(uint(uvec4(_GLF_IDENTITY((93703u) | 0u, min(_GLF_IDENTITY((93703u) | 0u, ((93703u) | 0u) ^ 0u), (93703u) | 0u)), 0u, 1u, 0u)), (uint(uvec4(_GLF_IDENTITY((93703u) | 0u, min(_GLF_IDENTITY((93703u) | 0u, ((93703u) | 0u) ^ 0u), (93703u) | 0u)), 0u, 1u, 0u))) | uint(_GLF_ZERO(0.0, injectionSwitch.x))))), 0u, 1u)))), (~ (_GLF_IDENTITY(93703u, uint(uvec3(_GLF_IDENTITY(93703u, (93703u) | 0u), _GLF_IDENTITY(0u, (true ? 0u : _GLF_FUZZED(atomicMax(workgroup_id, subgroup_id)))), 1u))))) ^ 0u))), 101698u, 76488u, 96793u)[1]) | 0u) << workgroup_id)) : workgroup_size))))))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_size, _GLF_IDENTITY((false ? _GLF_FUZZED((uvec4(93703u, 101698u, 76488u, 96793u)[1] << workgroup_id)) : workgroup_size), ~ (_GLF_IDENTITY(~ ((false ? _GLF_FUZZED((uvec4(93703u, _GLF_IDENTITY(101698u, min(_GLF_IDENTITY(101698u, uint(uvec3(101698u, 0u, 1u))), 101698u)), 76488u, 96793u)[1] << workgroup_id)) : _GLF_IDENTITY(workgroup_size, (workgroup_size) ^ 0u))), 0u + (~ ((false ? _GLF_FUZZED((uvec4(_GLF_IDENTITY(93703u, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(93703u, uint(uvec3(_GLF_IDENTITY(93703u, (93703u) | 0u), 0u, 1u)))), (~ (_GLF_IDENTITY(93703u, uint(uvec3(_GLF_IDENTITY(93703u, (93703u) | 0u), 0u, 1u))))) ^ 0u))), 101698u, 76488u, 96793u)[1] << workgroup_id)) : workgroup_size))))))), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(workgroup_size, _GLF_IDENTITY((false ? _GLF_FUZZED((uvec4(93703u, 101698u, 76488u, 96793u)[1] << workgroup_id)) : workgroup_size), ~ (_GLF_IDENTITY(~ ((false ? _GLF_FUZZED((uvec4(93703u, _GLF_IDENTITY(101698u, min(_GLF_IDENTITY(101698u, uint(uvec3(101698u, 0u, 1u))), 101698u)), 76488u, 96793u)[1] << workgroup_id)) : _GLF_IDENTITY(workgroup_size, (workgroup_size) ^ 0u))), 0u + (~ ((false ? _GLF_FUZZED((uvec4(_GLF_IDENTITY(93703u, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(93703u, uint(uvec3(_GLF_IDENTITY(93703u, (93703u) | 0u), 0u, 1u)))), (~ (_GLF_IDENTITY(93703u, uint(uvec3(_GLF_IDENTITY(93703u, (93703u) | 0u), 0u, 1u))))) ^ 0u))), 101698u, 76488u, 96793u)[1] << workgroup_id)) : workgroup_size)))))))), (true ? ~ (_GLF_IDENTITY(workgroup_size, _GLF_IDENTITY((false ? _GLF_FUZZED((uvec4(93703u, 101698u, 76488u, 96793u)[1] << workgroup_id)) : workgroup_size), ~ (_GLF_IDENTITY(~ ((false ? _GLF_FUZZED((uvec4(93703u, _GLF_IDENTITY(101698u, min(_GLF_IDENTITY(101698u, uint(uvec3(101698u, 0u, 1u))), 101698u)), 76488u, 96793u)[1] << workgroup_id)) : _GLF_IDENTITY(workgroup_size, (workgroup_size) ^ 0u))), 0u + (~ ((false ? _GLF_FUZZED((uvec4(_GLF_IDENTITY(93703u, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(93703u, uint(uvec3(_GLF_IDENTITY(93703u, (93703u) | 0u), 0u, 1u)))), (~ (_GLF_IDENTITY(93703u, uint(uvec3(_GLF_IDENTITY(93703u, (93703u) | 0u), 0u, 1u))))) ^ 0u))), 101698u, 76488u, 96793u)[1] << workgroup_id)) : workgroup_size)))))))) : _GLF_FUZZED(subgroup_size))))), (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_size, _GLF_IDENTITY((false ? _GLF_FUZZED((uvec4(93703u, 101698u, 76488u, 96793u)[1] << workgroup_id)) : workgroup_size), ~ (_GLF_IDENTITY(~ ((false ? _GLF_FUZZED((uvec4(93703u, _GLF_IDENTITY(101698u, min(_GLF_IDENTITY(101698u, uint(uvec3(101698u, 0u, 1u))), 101698u)), 76488u, 96793u)[1] << workgroup_id)) : _GLF_IDENTITY(workgroup_size, (workgroup_size) ^ 0u))), 0u + (~ ((false ? _GLF_FUZZED((uvec4(_GLF_IDENTITY(93703u, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(93703u, uint(uvec3(_GLF_IDENTITY(93703u, (93703u) | 0u), 0u, 1u)))), (~ (_GLF_IDENTITY(93703u, uint(uvec3(_GLF_IDENTITY(93703u, (93703u) | 0u), 0u, 1u))))) ^ 0u))), 101698u, 76488u, 96793u)[1] << workgroup_id)) : workgroup_size))))))), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(workgroup_size, _GLF_IDENTITY((false ? _GLF_FUZZED((uvec4(93703u, 101698u, 76488u, 96793u)[1] << workgroup_id)) : workgroup_size), ~ (_GLF_IDENTITY(~ ((false ? _GLF_FUZZED((uvec4(93703u, _GLF_IDENTITY(101698u, min(_GLF_IDENTITY(101698u, uint(uvec3(101698u, 0u, 1u))), 101698u)), 76488u, 96793u)[1] << workgroup_id)) : _GLF_IDENTITY(workgroup_size, (workgroup_size) ^ 0u))), 0u + (~ ((false ? _GLF_FUZZED((uvec4(_GLF_IDENTITY(93703u, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(93703u, uint(uvec3(_GLF_IDENTITY(93703u, (93703u) | 0u), 0u, 1u)))), (~ (_GLF_IDENTITY(93703u, uint(uvec3(_GLF_IDENTITY(93703u, (93703u) | 0u), 0u, 1u))))) ^ 0u))), 101698u, 76488u, 96793u)[1] << workgroup_id)) : workgroup_size)))))))), (true ? ~ (_GLF_IDENTITY(workgroup_size, _GLF_IDENTITY((false ? _GLF_FUZZED((uvec4(93703u, 101698u, 76488u, 96793u)[1] << workgroup_id)) : workgroup_size), ~ (_GLF_IDENTITY(~ ((false ? _GLF_FUZZED((uvec4(93703u, _GLF_IDENTITY(101698u, min(_GLF_IDENTITY(101698u, uint(uvec3(101698u, 0u, 1u))), 101698u)), 76488u, 96793u)[1] << workgroup_id)) : _GLF_IDENTITY(workgroup_size, (workgroup_size) ^ 0u))), 0u + (~ ((false ? _GLF_FUZZED((uvec4(_GLF_IDENTITY(93703u, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(93703u, uint(uvec3(_GLF_IDENTITY(93703u, (93703u) | 0u), 0u, 1u)))), (~ (_GLF_IDENTITY(93703u, uint(uvec3(_GLF_IDENTITY(93703u, (93703u) | 0u), 0u, 1u))))) ^ 0u))), 101698u, 76488u, 96793u)[1] << workgroup_id)) : workgroup_size)))))))) : _GLF_FUZZED(subgroup_size)))))) | (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_size, _GLF_IDENTITY((false ? _GLF_FUZZED((uvec4(93703u, 101698u, 76488u, 96793u)[1] << workgroup_id)) : workgroup_size), ~ (_GLF_IDENTITY(~ ((false ? _GLF_FUZZED((uvec4(93703u, _GLF_IDENTITY(101698u, min(_GLF_IDENTITY(101698u, uint(uvec3(101698u, 0u, 1u))), 101698u)), 76488u, 96793u)[1] << workgroup_id)) : _GLF_IDENTITY(workgroup_size, (workgroup_size) ^ 0u))), 0u + (~ ((false ? _GLF_FUZZED((uvec4(_GLF_IDENTITY(93703u, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(93703u, uint(uvec3(_GLF_IDENTITY(93703u, (93703u) | 0u), 0u, 1u)))), (~ (_GLF_IDENTITY(93703u, uint(uvec3(_GLF_IDENTITY(93703u, (93703u) | 0u), 0u, 1u))))) ^ 0u))), 101698u, 76488u, 96793u)[1] << workgroup_id)) : workgroup_size))))))), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(workgroup_size, _GLF_IDENTITY((false ? _GLF_FUZZED((uvec4(93703u, 101698u, 76488u, 96793u)[1] << workgroup_id)) : workgroup_size), ~ (_GLF_IDENTITY(~ ((false ? _GLF_FUZZED((uvec4(93703u, _GLF_IDENTITY(101698u, min(_GLF_IDENTITY(101698u, uint(uvec3(101698u, 0u, 1u))), 101698u)), 76488u, 96793u)[1] << workgroup_id)) : _GLF_IDENTITY(workgroup_size, (workgroup_size) ^ 0u))), 0u + (~ ((false ? _GLF_FUZZED((uvec4(_GLF_IDENTITY(93703u, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(93703u, uint(uvec3(_GLF_IDENTITY(93703u, (93703u) | 0u), 0u, 1u)))), (~ (_GLF_IDENTITY(93703u, uint(uvec3(_GLF_IDENTITY(93703u, (93703u) | 0u), 0u, 1u))))) ^ 0u))), 101698u, 76488u, 96793u)[1] << workgroup_id)) : workgroup_size)))))))), (true ? ~ (_GLF_IDENTITY(workgroup_size, _GLF_IDENTITY((false ? _GLF_FUZZED((uvec4(93703u, 101698u, 76488u, 96793u)[1] << workgroup_id)) : workgroup_size), ~ (_GLF_IDENTITY(~ ((false ? _GLF_FUZZED((uvec4(93703u, _GLF_IDENTITY(101698u, min(_GLF_IDENTITY(101698u, uint(uvec3(101698u, 0u, 1u))), 101698u)), 76488u, 96793u)[1] << workgroup_id)) : _GLF_IDENTITY(workgroup_size, (workgroup_size) ^ 0u))), 0u + (~ ((false ? _GLF_FUZZED((uvec4(_GLF_IDENTITY(93703u, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(93703u, uint(uvec3(_GLF_IDENTITY(93703u, (93703u) | 0u), 0u, 1u)))), (~ (_GLF_IDENTITY(93703u, uint(uvec3(_GLF_IDENTITY(93703u, (93703u) | 0u), 0u, 1u))))) ^ 0u))), 101698u, 76488u, 96793u)[1] << workgroup_id)) : workgroup_size)))))))) : _GLF_FUZZED(subgroup_size)))))))) | (_GLF_IDENTITY(workgroup_size, _GLF_IDENTITY((false ? _GLF_IDENTITY(_GLF_FUZZED((uvec4(93703u, 101698u, 76488u, 96793u)[1] << workgroup_id)), (uint(_GLF_ZERO(0.0, injectionSwitch.x)) >> _GLF_IDENTITY(uint(2u), uint(2u))) | (_GLF_FUZZED((uvec4(93703u, 101698u, 76488u, 96793u)[1] << workgroup_id)))) : workgroup_size), ~ (_GLF_IDENTITY(~ ((_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))) ? _GLF_FUZZED(_GLF_IDENTITY((uvec4(93703u, _GLF_IDENTITY(101698u, min(_GLF_IDENTITY(101698u, uint(uvec3(101698u, 0u, 1u))), 101698u)), 76488u, 96793u)[1] << workgroup_id), uint(uvec4((uvec4(93703u, _GLF_IDENTITY(101698u, min(_GLF_IDENTITY(101698u, uint(uvec3(101698u, 0u, 1u))), 101698u)), 76488u, 96793u)[1] << workgroup_id), uint(_GLF_ONE(1.0, injectionSwitch.y)), 0u, 0u)))) : _GLF_IDENTITY(workgroup_size, (workgroup_size) ^ 0u))), 0u + (~ ((false ? _GLF_FUZZED((uvec4(_GLF_IDENTITY(93703u, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(93703u, uint(uvec3(_GLF_IDENTITY(93703u, (93703u) | 0u), 0u, 1u)))), (~ (_GLF_IDENTITY(93703u, uint(uvec3(_GLF_IDENTITY(93703u, (93703u) | 0u), 0u, 1u))))) ^ 0u))), 101698u, 76488u, 96793u)[1] << workgroup_id)) : workgroup_size))))))))), min(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_size, _GLF_IDENTITY((false ? _GLF_IDENTITY(_GLF_FUZZED((uvec4(93703u, 101698u, 76488u, 96793u)[1] << workgroup_id)), (_GLF_FUZZED((uvec4(93703u, 101698u, 76488u, 96793u)[1] << workgroup_id))) | (_GLF_FUZZED((uvec4(93703u, 101698u, 76488u, 96793u)[1] << workgroup_id)))) : workgroup_size), ~ (_GLF_IDENTITY(~ ((false ? _GLF_FUZZED((uvec4(93703u, _GLF_IDENTITY(101698u, min(_GLF_IDENTITY(101698u, uint(uvec3(_GLF_IDENTITY(101698u, 0u ^ (101698u)), 0u, 1u))), _GLF_IDENTITY(101698u, max(101698u, 101698u)))), 76488u, 96793u)[1] << workgroup_id)) : _GLF_IDENTITY(_GLF_IDENTITY(workgroup_size, (_GLF_IDENTITY(workgroup_size, max(workgroup_size, workgroup_size))) | 0u), (workgroup_size) ^ 0u))), 0u + (~ ((false ? _GLF_FUZZED((uvec4(_GLF_IDENTITY(_GLF_IDENTITY(93703u, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(93703u, uint(uvec3(_GLF_IDENTITY(93703u, (93703u) | 0u), 0u, 1u)))), (~ (_GLF_IDENTITY(93703u, uint(uvec3(_GLF_IDENTITY(93703u, (93703u) | 0u), 0u, 1u))))) ^ 0u))), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(93703u, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY(93703u, uint(uvec3(_GLF_IDENTITY(93703u, (93703u) | 0u), 0u, 1u))), ~ (~ (_GLF_IDENTITY(93703u, uint(uvec3(_GLF_IDENTITY(93703u, (93703u) | _GLF_IDENTITY(0u, (0u) | 0u)), 0u, _GLF_IDENTITY(1u, max(1u, 1u))))))))), (~ (_GLF_IDENTITY(93703u, uint(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(93703u, (93703u) | 0u), 0u, 1u), uvec3(0u, 0u, 0u) ^ (uvec3(_GLF_IDENTITY(93703u, (93703u) | 0u), 0u, 1u))))))) ^ _GLF_IDENTITY(0u, clamp(0u, 0u, _GLF_IDENTITY(0u, (0u) * 1u)))))) : _GLF_FUZZED(workgroup_id))), 101698u, 76488u, 96793u)[_GLF_IDENTITY(1, ~ (~ (1)))] << workgroup_id)) : workgroup_size))))))), (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_size, _GLF_IDENTITY((false ? _GLF_FUZZED((uvec4(93703u, 101698u, 76488u, 96793u)[1] << workgroup_id)) : workgroup_size), ~ (_GLF_IDENTITY(~ ((false ? _GLF_FUZZED((uvec4(93703u, _GLF_IDENTITY(101698u, min(_GLF_IDENTITY(101698u, uint(uvec3(101698u, 0u, 1u))), 101698u)), 76488u, 96793u)[1] << workgroup_id)) : _GLF_IDENTITY(workgroup_size, (workgroup_size) ^ 0u))), 0u + (~ ((false ? _GLF_FUZZED((uvec4(_GLF_IDENTITY(93703u, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(93703u, uint(uvec3(_GLF_IDENTITY(93703u, (93703u) | 0u), 0u, 1u)))), (~ (_GLF_IDENTITY(93703u, uint(uvec3(_GLF_IDENTITY(93703u, (93703u) | 0u), 0u, 1u))))) ^ 0u))), 101698u, 76488u, 96793u)[1] << workgroup_id)) : workgroup_size))))))), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(workgroup_size, _GLF_IDENTITY((false ? _GLF_FUZZED((uvec4(93703u, 101698u, 76488u, 96793u)[1] << workgroup_id)) : workgroup_size), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY((false ? _GLF_FUZZED((_GLF_IDENTITY(uvec4(93703u, _GLF_IDENTITY(_GLF_IDENTITY(101698u, min(_GLF_IDENTITY(101698u, uint(uvec3(101698u, 0u, 1u))), 101698u)), (_GLF_IDENTITY(101698u, min(_GLF_IDENTITY(101698u, uint(uvec3(101698u, 0u, 1u))), 101698u))) ^ 0u), 76488u, 96793u)[1], (true ? uvec4(93703u, _GLF_IDENTITY(_GLF_IDENTITY(101698u, min(_GLF_IDENTITY(101698u, uint(uvec3(101698u, 0u, 1u))), 101698u)), (_GLF_IDENTITY(101698u, min(_GLF_IDENTITY(101698u, uint(uvec3(101698u, 0u, 1u))), 101698u))) ^ 0u), 76488u, 96793u)[1] : _GLF_FUZZED(195373u))) << workgroup_id)) : _GLF_IDENTITY(workgroup_size, _GLF_IDENTITY((workgroup_size), ~ (~ (_GLF_IDENTITY((workgroup_size), max((workgroup_size), (workgroup_size)))))) ^ 0u)), max((false ? _GLF_FUZZED((_GLF_IDENTITY(uvec4(93703u, _GLF_IDENTITY(_GLF_IDENTITY(101698u, min(_GLF_IDENTITY(101698u, uint(uvec3(101698u, 0u, 1u))), 101698u)), (_GLF_IDENTITY(101698u, min(_GLF_IDENTITY(101698u, uint(uvec3(101698u, 0u, 1u))), 101698u))) ^ 0u), 76488u, 96793u)[1], (true ? uvec4(93703u, _GLF_IDENTITY(_GLF_IDENTITY(101698u, min(_GLF_IDENTITY(101698u, uint(uvec3(101698u, 0u, 1u))), 101698u)), (_GLF_IDENTITY(101698u, min(_GLF_IDENTITY(101698u, uint(uvec3(101698u, 0u, 1u))), 101698u))) ^ 0u), 76488u, 96793u)[1] : _GLF_FUZZED(195373u))) << workgroup_id)) : _GLF_IDENTITY(workgroup_size, _GLF_IDENTITY((workgroup_size), ~ (~ (_GLF_IDENTITY((workgroup_size), max((workgroup_size), (workgroup_size)))))) ^ 0u)), _GLF_IDENTITY((false ? _GLF_FUZZED((_GLF_IDENTITY(uvec4(93703u, _GLF_IDENTITY(_GLF_IDENTITY(101698u, min(_GLF_IDENTITY(101698u, uint(uvec3(101698u, 0u, 1u))), 101698u)), (_GLF_IDENTITY(101698u, min(_GLF_IDENTITY(101698u, uint(uvec3(101698u, 0u, 1u))), 101698u))) ^ 0u), 76488u, 96793u)[1], (true ? uvec4(93703u, _GLF_IDENTITY(_GLF_IDENTITY(101698u, min(_GLF_IDENTITY(101698u, uint(uvec3(101698u, 0u, 1u))), 101698u)), (_GLF_IDENTITY(101698u, min(_GLF_IDENTITY(101698u, uint(uvec3(101698u, 0u, 1u))), 101698u))) ^ 0u), 76488u, 96793u)[1] : _GLF_FUZZED(195373u))) << workgroup_id)) : _GLF_IDENTITY(workgroup_size, _GLF_IDENTITY((workgroup_size), ~ (~ (_GLF_IDENTITY((workgroup_size), max((workgroup_size), (workgroup_size)))))) ^ 0u)), 0u ^ ((false ? _GLF_FUZZED((_GLF_IDENTITY(uvec4(93703u, _GLF_IDENTITY(_GLF_IDENTITY(101698u, min(_GLF_IDENTITY(101698u, uint(uvec3(101698u, 0u, 1u))), 101698u)), (_GLF_IDENTITY(101698u, min(_GLF_IDENTITY(101698u, uint(uvec3(101698u, 0u, 1u))), 101698u))) ^ 0u), 76488u, 96793u)[1], (true ? uvec4(93703u, _GLF_IDENTITY(_GLF_IDENTITY(101698u, min(_GLF_IDENTITY(101698u, uint(uvec3(101698u, 0u, 1u))), 101698u)), (_GLF_IDENTITY(101698u, min(_GLF_IDENTITY(101698u, uint(uvec3(101698u, 0u, 1u))), 101698u))) ^ 0u), 76488u, 96793u)[1] : _GLF_FUZZED(195373u))) << workgroup_id)) : _GLF_IDENTITY(workgroup_size, _GLF_IDENTITY((workgroup_size), ~ (~ (_GLF_IDENTITY((workgroup_size), max((workgroup_size), (workgroup_size)))))) ^ 0u))))))), 0u + (~ ((false ? _GLF_FUZZED((uvec4(_GLF_IDENTITY(93703u, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(93703u, uint(uvec3(_GLF_IDENTITY(93703u, (93703u) | 0u), 0u, 1u)))), (~ (_GLF_IDENTITY(93703u, uint(uvec3(_GLF_IDENTITY(93703u, (93703u) | 0u), 0u, 1u))))) ^ 0u))), 101698u, 76488u, 96793u)[1] << workgroup_id)) : workgroup_size)))))))), (true ? ~ (_GLF_IDENTITY(workgroup_size, _GLF_IDENTITY((false ? _GLF_FUZZED((uvec4(93703u, 101698u, 76488u, 96793u)[1] << workgroup_id)) : workgroup_size), ~ (_GLF_IDENTITY(_GLF_IDENTITY(~ ((false ? _GLF_FUZZED((uvec4(93703u, _GLF_IDENTITY(101698u, min(_GLF_IDENTITY(101698u, uint(uvec3(101698u, 0u, 1u))), 101698u)), 76488u, 96793u)[1] << workgroup_id)) : _GLF_IDENTITY(workgroup_size, (workgroup_size) ^ 0u))), (~ ((false ? _GLF_FUZZED((uvec4(93703u, _GLF_IDENTITY(101698u, min(_GLF_IDENTITY(101698u, uint(uvec3(101698u, 0u, 1u))), 101698u)), 76488u, 96793u)[1] << workgroup_id)) : _GLF_IDENTITY(workgroup_size, (workgroup_size) ^ 0u)))) - 0u), 0u + (~ ((false ? _GLF_FUZZED((uvec4(_GLF_IDENTITY(93703u, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(93703u, uint(uvec3(_GLF_IDENTITY(_GLF_IDENTITY(93703u, (93703u) >> 0u), (93703u) | 0u), 0u, 1u)))), (~ (_GLF_IDENTITY(93703u, uint(uvec3(_GLF_IDENTITY(93703u, (93703u) | 0u), 0u, 1u))))) ^ 0u))), 101698u, 76488u, 96793u)[_GLF_IDENTITY(1, (true ? _GLF_IDENTITY(1, int(ivec2(1, 0))) : _GLF_FUZZED(-60013)))] << workgroup_id)) : workgroup_size)))))))) : _GLF_FUZZED(subgroup_size)))))) | (_GLF_IDENTITY(workgroup_size, _GLF_IDENTITY((false ? _GLF_FUZZED((uvec4(93703u, 101698u, 76488u, 96793u)[1] << workgroup_id)) : workgroup_size), ~ (_GLF_IDENTITY(~ ((false ? _GLF_FUZZED((uvec4(93703u, _GLF_IDENTITY(101698u, min(_GLF_IDENTITY(101698u, uint(uvec3(101698u, 0u, 1u))), 101698u)), 76488u, 96793u)[1] << workgroup_id)) : _GLF_IDENTITY(workgroup_size, (workgroup_size) ^ 0u))), 0u + (~ ((_GLF_IDENTITY(false ? _GLF_FUZZED((uvec4(_GLF_IDENTITY(93703u, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(93703u, uint(uvec3(_GLF_IDENTITY(93703u, (93703u) | 0u), 0u, 1u)))), (~ (_GLF_IDENTITY(93703u, uint(uvec3(_GLF_IDENTITY(93703u, (93703u) | 0u), 0u, 1u))))) ^ 0u))), 101698u, 76488u, 96793u)[1] << _GLF_IDENTITY(workgroup_id, 0u | (workgroup_id)))) : workgroup_size, clamp(false ? _GLF_FUZZED((uvec4(_GLF_IDENTITY(93703u, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(93703u, uint(uvec3(_GLF_IDENTITY(93703u, (93703u) | 0u), 0u, 1u)))), (~ (_GLF_IDENTITY(93703u, uint(uvec3(_GLF_IDENTITY(93703u, (93703u) | 0u), 0u, 1u))))) ^ 0u))), 101698u, 76488u, 96793u)[1] << _GLF_IDENTITY(workgroup_id, 0u | (workgroup_id)))) : workgroup_size, false ? _GLF_FUZZED((uvec4(_GLF_IDENTITY(93703u, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(93703u, uint(uvec3(_GLF_IDENTITY(93703u, (93703u) | 0u), 0u, 1u)))), (~ (_GLF_IDENTITY(93703u, uint(uvec3(_GLF_IDENTITY(93703u, (93703u) | 0u), 0u, 1u))))) ^ 0u))), 101698u, 76488u, 96793u)[1] << _GLF_IDENTITY(workgroup_id, 0u | (workgroup_id)))) : workgroup_size, false ? _GLF_FUZZED((uvec4(_GLF_IDENTITY(93703u, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(93703u, uint(uvec3(_GLF_IDENTITY(93703u, (93703u) | 0u), 0u, 1u)))), (~ (_GLF_IDENTITY(93703u, uint(uvec3(_GLF_IDENTITY(93703u, (93703u) | 0u), 0u, 1u))))) ^ 0u))), 101698u, 76488u, 96793u)[1] << _GLF_IDENTITY(workgroup_id, 0u | (workgroup_id)))) : workgroup_size))))))))))), _GLF_IDENTITY(_GLF_IDENTITY(workgroup_size, _GLF_IDENTITY((false ? _GLF_FUZZED((uvec4(93703u, 101698u, 76488u, 96793u)[1] << workgroup_id)) : workgroup_size), ~ (_GLF_IDENTITY(~ ((false ? _GLF_FUZZED((uvec4(93703u, _GLF_IDENTITY(_GLF_IDENTITY(101698u, max(101698u, 101698u)), min(_GLF_IDENTITY(101698u, uint(uvec3(101698u, 0u, 1u))), 101698u)), 76488u, 96793u)[1] << workgroup_id)) : _GLF_IDENTITY(workgroup_size, (workgroup_size) ^ 0u))), 0u + (~ ((false ? _GLF_FUZZED((uvec4(_GLF_IDENTITY(93703u, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(93703u, uint(uvec3(_GLF_IDENTITY(93703u, (93703u) | 0u), 0u, 1u)))), (~ (_GLF_IDENTITY(93703u, uint(uvec3(_GLF_IDENTITY(93703u, (93703u) | 0u), 0u, 1u))))) ^ 0u))), 101698u, 76488u, 96793u)[1] << workgroup_id)) : workgroup_size))))))), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(workgroup_size, _GLF_IDENTITY((false ? _GLF_FUZZED((uvec4(93703u, 101698u, 76488u, 96793u)[1] << workgroup_id)) : workgroup_size), ~ (_GLF_IDENTITY(~ ((false ? _GLF_FUZZED((uvec4(93703u, _GLF_IDENTITY(101698u, min(_GLF_IDENTITY(101698u, uint(uvec3(101698u, 0u, 1u))), 101698u)), 76488u, 96793u)[1] << workgroup_id)) : _GLF_IDENTITY(workgroup_size, (workgroup_size) ^ 0u))), 0u + (~ ((false ? _GLF_FUZZED((uvec4(_GLF_IDENTITY(93703u, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(93703u, uint(uvec3(_GLF_IDENTITY(93703u, (93703u) | 0u), 0u, 1u)))), (~ (_GLF_IDENTITY(93703u, uint(uvec3(_GLF_IDENTITY(93703u, (93703u) | 0u), 0u, 1u))))) ^ 0u))), 101698u, 76488u, 96793u)[1] << workgroup_id)) : workgroup_size))))))), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(workgroup_size, _GLF_IDENTITY((false ? _GLF_FUZZED((uvec4(93703u, 101698u, 76488u, 96793u)[1] << workgroup_id)) : workgroup_size), ~ (_GLF_IDENTITY(~ ((false ? _GLF_FUZZED((uvec4(93703u, _GLF_IDENTITY(101698u, min(_GLF_IDENTITY(101698u, uint(uvec3(101698u, 0u, 1u))), 101698u)), 76488u, 96793u)[1] << workgroup_id)) : _GLF_IDENTITY(workgroup_size, (workgroup_size) ^ 0u))), 0u + (~ ((false ? _GLF_FUZZED((uvec4(_GLF_IDENTITY(93703u, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(93703u, uint(uvec3(_GLF_IDENTITY(93703u, (93703u) | 0u), 0u, 1u)))), (~ (_GLF_IDENTITY(93703u, uint(uvec3(_GLF_IDENTITY(93703u, (93703u) | 0u), 0u, 1u))))) ^ 0u))), 101698u, 76488u, 96793u)[1] << workgroup_id)) : workgroup_size)))))))), (true ? ~ (_GLF_IDENTITY(workgroup_size, _GLF_IDENTITY((false ? _GLF_FUZZED((uvec4(93703u, 101698u, 76488u, 96793u)[1] << workgroup_id)) : workgroup_size), ~ (_GLF_IDENTITY(~ ((false ? _GLF_FUZZED((uvec4(93703u, _GLF_IDENTITY(101698u, min(_GLF_IDENTITY(101698u, uint(uvec3(101698u, 0u, 1u))), 101698u)), 76488u, 96793u)[1] << workgroup_id)) : _GLF_IDENTITY(workgroup_size, (workgroup_size) ^ 0u))), 0u + (~ ((false ? _GLF_FUZZED((uvec4(_GLF_IDENTITY(93703u, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(93703u, uint(uvec3(_GLF_IDENTITY(93703u, (93703u) | 0u), 0u, 1u)))), (~ (_GLF_IDENTITY(93703u, uint(uvec3(_GLF_IDENTITY(93703u, (93703u) | 0u), 0u, 1u))))) ^ 0u))), 101698u, 76488u, 96793u)[1] << workgroup_id)) : workgroup_size)))))))) : _GLF_FUZZED(subgroup_size)))))) | (_GLF_IDENTITY(workgroup_size, _GLF_IDENTITY((false ? _GLF_FUZZED((uvec4(93703u, 101698u, 76488u, 96793u)[1] << workgroup_id)) : workgroup_size), ~ (_GLF_IDENTITY(~ ((false ? _GLF_FUZZED((uvec4(93703u, _GLF_IDENTITY(101698u, min(_GLF_IDENTITY(101698u, uint(uvec3(101698u, 0u, 1u))), 101698u)), 76488u, 96793u)[1] << workgroup_id)) : _GLF_IDENTITY(workgroup_size, (workgroup_size) ^ 0u))), 0u + (~ ((false ? _GLF_FUZZED((uvec4(_GLF_IDENTITY(93703u, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(93703u, uint(uvec3(_GLF_IDENTITY(93703u, (93703u) | 0u), 0u, 1u)))), (~ (_GLF_IDENTITY(93703u, uint(uvec3(_GLF_IDENTITY(93703u, (93703u) | 0u), 0u, 1u))))) ^ 0u))), 101698u, 76488u, 96793u)[1] << workgroup_id)) : workgroup_size)))))))), uint(uvec4((_GLF_IDENTITY(_GLF_IDENTITY(workgroup_size, _GLF_IDENTITY((false ? _GLF_FUZZED((uvec4(93703u, 101698u, 76488u, 96793u)[1] << workgroup_id)) : workgroup_size), ~ (_GLF_IDENTITY(~ ((false ? _GLF_FUZZED((uvec4(93703u, _GLF_IDENTITY(101698u, min(_GLF_IDENTITY(101698u, uint(uvec3(101698u, 0u, 1u))), 101698u)), 76488u, 96793u)[1] << workgroup_id)) : _GLF_IDENTITY(workgroup_size, (workgroup_size) ^ 0u))), 0u + (~ ((false ? _GLF_FUZZED((uvec4(_GLF_IDENTITY(93703u, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(93703u, uint(uvec3(_GLF_IDENTITY(93703u, (93703u) | 0u), 0u, 1u)))), (~ (_GLF_IDENTITY(93703u, uint(uvec3(_GLF_IDENTITY(93703u, (93703u) | 0u), 0u, 1u))))) ^ 0u))), 101698u, 76488u, 96793u)[1] << workgroup_id)) : workgroup_size))))))), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(workgroup_size, _GLF_IDENTITY((false ? _GLF_FUZZED((uvec4(93703u, 101698u, 76488u, 96793u)[1] << workgroup_id)) : workgroup_size), ~ (_GLF_IDENTITY(~ ((false ? _GLF_FUZZED((uvec4(93703u, _GLF_IDENTITY(101698u, min(_GLF_IDENTITY(101698u, uint(uvec3(101698u, 0u, 1u))), 101698u)), 76488u, 96793u)[1] << workgroup_id)) : _GLF_IDENTITY(workgroup_size, (workgroup_size) ^ 0u))), 0u + (~ ((false ? _GLF_FUZZED((uvec4(_GLF_IDENTITY(93703u, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(93703u, uint(uvec3(_GLF_IDENTITY(93703u, (93703u) | 0u), 0u, 1u)))), (~ (_GLF_IDENTITY(93703u, uint(uvec3(_GLF_IDENTITY(93703u, (93703u) | 0u), 0u, 1u))))) ^ 0u))), 101698u, 76488u, 96793u)[1] << workgroup_id)) : workgroup_size)))))))), (true ? ~ (_GLF_IDENTITY(workgroup_size, _GLF_IDENTITY((false ? _GLF_FUZZED((uvec4(93703u, 101698u, 76488u, 96793u)[1] << workgroup_id)) : workgroup_size), ~ (_GLF_IDENTITY(~ ((false ? _GLF_FUZZED((uvec4(93703u, _GLF_IDENTITY(101698u, min(_GLF_IDENTITY(101698u, uint(uvec3(101698u, 0u, 1u))), 101698u)), 76488u, 96793u)[1] << workgroup_id)) : _GLF_IDENTITY(workgroup_size, (workgroup_size) ^ 0u))), 0u + (~ ((false ? _GLF_FUZZED((uvec4(_GLF_IDENTITY(93703u, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(93703u, uint(uvec3(_GLF_IDENTITY(93703u, (93703u) | 0u), 0u, 1u)))), (~ (_GLF_IDENTITY(93703u, uint(uvec3(_GLF_IDENTITY(93703u, (93703u) | 0u), 0u, 1u))))) ^ 0u))), 101698u, 76488u, 96793u)[1] << workgroup_id)) : workgroup_size)))))))) : _GLF_FUZZED(subgroup_size)))))) | (_GLF_IDENTITY(workgroup_size, _GLF_IDENTITY((false ? _GLF_FUZZED((uvec4(93703u, 101698u, 76488u, 96793u)[1] << workgroup_id)) : workgroup_size), ~ (_GLF_IDENTITY(~ ((false ? _GLF_FUZZED((uvec4(93703u, _GLF_IDENTITY(101698u, min(_GLF_IDENTITY(101698u, uint(uvec3(101698u, 0u, 1u))), 101698u)), 76488u, 96793u)[1] << workgroup_id)) : _GLF_IDENTITY(workgroup_size, (workgroup_size) ^ 0u))), 0u + (~ ((false ? _GLF_FUZZED((uvec4(_GLF_IDENTITY(93703u, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(93703u, uint(uvec3(_GLF_IDENTITY(93703u, (93703u) | 0u), 0u, 1u)))), (~ (_GLF_IDENTITY(93703u, uint(uvec3(_GLF_IDENTITY(93703u, (93703u) | 0u), 0u, 1u))))) ^ 0u))), 101698u, 76488u, 96793u)[1] << workgroup_id)) : workgroup_size)))))))), 1u, 1u, 1u)))))), (false ? _GLF_IDENTITY(_GLF_FUZZED(44860u), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(_GLF_IDENTITY(44860u, (false ? _GLF_FUZZED(workgroup_id) : _GLF_IDENTITY(44860u, max(44860u, _GLF_IDENTITY(44860u, (44860u) - 0u)))))), (true ? _GLF_IDENTITY(_GLF_FUZZED(_GLF_IDENTITY(44860u, (false ? _GLF_FUZZED(workgroup_id) : _GLF_IDENTITY(44860u, max(_GLF_IDENTITY(44860u, (_GLF_IDENTITY(44860u, 0u | (_GLF_IDENTITY(44860u, min(44860u, 44860u))))) | (44860u)), _GLF_IDENTITY(44860u, _GLF_IDENTITY((_GLF_IDENTITY(44860u, max(44860u, 44860u))), ((_GLF_IDENTITY(44860u, max(44860u, 44860u)))) / uint(_GLF_ONE(1.0, injectionSwitch.y))) - 0u)))))), (_GLF_FUZZED(_GLF_IDENTITY(44860u, (false ? _GLF_FUZZED(workgroup_id) : _GLF_IDENTITY(44860u, max(44860u, _GLF_IDENTITY(_GLF_IDENTITY(44860u, _GLF_IDENTITY((44860u) - 0u, uint(uvec4(_GLF_IDENTITY((44860u) - 0u, ((44860u) - 0u) >> 0u), 1u, 0u, 0u)))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(44860u, (44860u) * 1u), (44860u) - 0u), (_GLF_IDENTITY(44860u, (44860u) - 0u)) | (_GLF_IDENTITY(44860u, (44860u) - 0u))), _GLF_IDENTITY(44860u, (44860u) - 0u), _GLF_IDENTITY(_GLF_IDENTITY(44860u, (44860u) - 0u), (_GLF_IDENTITY(44860u, (44860u) - 0u)) ^ 0u))))))))) * 1u) : _GLF_FUZZED((subgroup_local_id | workgroup_size)))), _GLF_IDENTITY((true ? _GLF_FUZZED(44860u) : _GLF_FUZZED(55037u)), (_GLF_IDENTITY((true ? _GLF_FUZZED(44860u) : _GLF_FUZZED(55037u)), (_GLF_IDENTITY((true ? _GLF_FUZZED(44860u) : _GLF_FUZZED(55037u)), ((true ? _GLF_FUZZED(44860u) : _GLF_FUZZED(55037u))) | ((true ? _GLF_FUZZED(44860u) : _GLF_FUZZED(55037u))))) | ((true ? _GLF_FUZZED(44860u) : _GLF_FUZZED(55037u))))) - 0u))) << 0u) : _GLF_IDENTITY(workgroup_size, (_GLF_IDENTITY(false, bool(bool(false))) ? _GLF_FUZZED((_GLF_IDENTITY(_GLF_IDENTITY(uvec4(93703u, 101698u, 76488u, _GLF_IDENTITY(_GLF_IDENTITY(96793u, (96793u) | (_GLF_IDENTITY(96793u, (true ? _GLF_IDENTITY(96793u, 1u * (96793u)) : _GLF_FUZZED(workgroup_id))))), max(_GLF_IDENTITY(96793u, (96793u) | (_GLF_IDENTITY(96793u, (_GLF_IDENTITY(true ? 96793u : _GLF_FUZZED(workgroup_id), ~ (~ (true ? 96793u : _GLF_FUZZED(workgroup_id)))))))), _GLF_IDENTITY(96793u, (96793u) | (_GLF_IDENTITY(96793u, (true ? _GLF_IDENTITY(96793u, (_GLF_IDENTITY(96793u, _GLF_IDENTITY(max(96793u, _GLF_IDENTITY(96793u, 0u | (96793u))), (_GLF_IDENTITY(max(96793u, _GLF_IDENTITY(96793u, 0u | (96793u))), 0u | (max(96793u, _GLF_IDENTITY(96793u, 0u | (96793u)))))) | (_GLF_IDENTITY(max(96793u, _GLF_IDENTITY(96793u, 0u | (96793u))), ~ (~ (_GLF_IDENTITY(max(96793u, _GLF_IDENTITY(96793u, 0u | (96793u))), (max(96793u, _GLF_IDENTITY(96793u, 0u | (96793u)))) | (max(96793u, _GLF_IDENTITY(96793u, 0u | (96793u)))))))))))) | 0u) : _GLF_IDENTITY(_GLF_FUZZED(workgroup_id), clamp(_GLF_FUZZED(workgroup_id), _GLF_FUZZED(workgroup_id), _GLF_FUZZED(workgroup_id)))))))))), _GLF_IDENTITY((uvec4(93703u, 101698u, _GLF_IDENTITY(_GLF_IDENTITY(76488u, ~ (_GLF_IDENTITY(~ (76488u), (~ (76488u)) / 1u))), (76488u) | (_GLF_IDENTITY(_GLF_IDENTITY(76488u, (76488u) >> 0u), (_GLF_IDENTITY(_GLF_IDENTITY(76488u, _GLF_IDENTITY((76488u) >> 0u, min(_GLF_IDENTITY((76488u) >> 0u, 1u * ((76488u) >> 0u)), (76488u) >> 0u))), _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(76488u, (76488u) >> 0u)) << 0u, ((_GLF_IDENTITY(76488u, (76488u) >> 0u)) << 0u) << (176850u & 0u)), 0u ^ (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(76488u, (76488u) >> 0u)) << 0u, ((_GLF_IDENTITY(76488u, (76488u) >> 0u)) << 0u) << (176850u & 0u)), (false ? _GLF_FUZZED(workgroup_id) : _GLF_IDENTITY((_GLF_IDENTITY(76488u, (76488u) >> 0u)) << 0u, ((_GLF_IDENTITY(76488u, (76488u) >> 0u)) << 0u) << (176850u & 0u)))))))) | (_GLF_IDENTITY(76488u, (76488u) >> 0u))))), 96793u)), clamp((uvec4(_GLF_IDENTITY(93703u, (1u ^ 1u) | (93703u)), _GLF_IDENTITY(101698u, min(101698u, 101698u)), _GLF_IDENTITY(_GLF_IDENTITY(76488u, (76488u) | (_GLF_IDENTITY(76488u, (76488u) >> 0u))), (true ? _GLF_IDENTITY(76488u, _GLF_IDENTITY((76488u) | (_GLF_IDENTITY(76488u, (76488u) >> 0u)), min((76488u) | (_GLF_IDENTITY(76488u, (76488u) >> 0u)), (76488u) | (_GLF_IDENTITY(76488u, (76488u) >> 0u))))) : _GLF_FUZZED(mix(workgroup_id, subgroup_local_id, false)))), _GLF_IDENTITY(96793u, clamp(96793u, 96793u, 96793u)))), _GLF_IDENTITY((uvec4(93703u, _GLF_IDENTITY(101698u, (101698u) + _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) + 0u)) | 0u)), _GLF_IDENTITY(76488u, (76488u) | (_GLF_IDENTITY(76488u, _GLF_IDENTITY((76488u), min(_GLF_IDENTITY((76488u), ((76488u)) + 0u), (76488u))) >> _GLF_IDENTITY(0u, (true ? 0u : _GLF_FUZZED(num_workgroup)))))), 96793u)), ((uvec4(93703u, 101698u, _GLF_IDENTITY(76488u, _GLF_IDENTITY((76488u), ~ (~ _GLF_IDENTITY(((76488u)), (((76488u))) | (((76488u)))))) | (_GLF_IDENTITY(76488u, (76488u) >> 0u))), 96793u))) / uvec4(1u, 1u, 1u, 1u)), (uvec4(93703u, 101698u, _GLF_IDENTITY(76488u, (_GLF_IDENTITY(76488u, min(_GLF_IDENTITY(76488u, uint(_GLF_ZERO(0.0, injectionSwitch.x)) + (76488u)), 76488u))) | (_GLF_IDENTITY(76488u, _GLF_IDENTITY((_GLF_IDENTITY(76488u, min(_GLF_IDENTITY(76488u, max(76488u, 76488u)), 76488u))) >> 0u, ((76488u) >> _GLF_IDENTITY(0u, clamp(0u, 0u, 0u))) << 0u)))), 96793u)))) - uvec4(0u, 0u, _GLF_IDENTITY(_GLF_IDENTITY(0u, (0u >> _GLF_IDENTITY(uint(6u), uint(6u))) ^ (0u)), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(0u, max(0u, 0u)), (0u >> _GLF_IDENTITY(uint(6u), uint(6u))) ^ (0u))))), 0u))[1] << workgroup_id, (_GLF_IDENTITY(_GLF_IDENTITY(uvec4(93703u, 101698u, 76488u, _GLF_IDENTITY(96793u, (96793u) | (_GLF_IDENTITY(96793u, (true ? 96793u : _GLF_IDENTITY(_GLF_FUZZED(workgroup_id), min(_GLF_FUZZED(workgroup_id), _GLF_FUZZED(workgroup_id)))))))), uvec4(_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, ~ (~ (_GLF_IDENTITY(0u, max(0u, 0u)))))) | (0u)), 0u, 0u, 0u) | (uvec4(93703u, _GLF_IDENTITY(101698u, (false ? _GLF_FUZZED(subgroup_size) : 101698u)), 76488u, _GLF_IDENTITY(96793u, (96793u) | (_GLF_IDENTITY(_GLF_IDENTITY(96793u, (true ? 96793u : _GLF_FUZZED(workgroup_id))), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(_GLF_IDENTITY(96793u, (true ? 96793u : _GLF_FUZZED(workgroup_id))), (_GLF_IDENTITY(96793u, (true ? 96793u : _GLF_FUZZED(workgroup_id)))) + 0u) : _GLF_FUZZED(subgroup_local_id)))))))), (uvec4(93703u, _GLF_IDENTITY(101698u, 0u | (101698u)), _GLF_IDENTITY(_GLF_IDENTITY(76488u, (76488u) << 0u), _GLF_IDENTITY((76488u) | (76488u), ((_GLF_IDENTITY(76488u, min(_GLF_IDENTITY(76488u, min(76488u, _GLF_IDENTITY(76488u, min(76488u, 76488u)))), 76488u))) | (76488u)) | _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(((76488u) | (76488u)), (0u >> _GLF_IDENTITY(uint(4u), uint(4u))) | (((76488u) | (76488u)))), ~ (~ (_GLF_IDENTITY(((76488u) | (76488u)), (0u >> _GLF_IDENTITY(uint(4u), uint(4u))) | (((76488u) | (76488u))))))), (_GLF_IDENTITY(_GLF_IDENTITY(((76488u) | (76488u)), (0u >> _GLF_IDENTITY(uint(4u), uint(4u))) | (((76488u) | (76488u)))), ~ (~ (_GLF_IDENTITY(((76488u) | (76488u)), (0u >> _GLF_IDENTITY(uint(4u), uint(4u))) | (((76488u) | (76488u)))))))) | 0u))), 96793u)) - uvec4(0u, 0u, 0u, 0u))[1] << workgroup_id) >> 0u))) : workgroup_size)))) * workgroup_id;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY((false ? _GLF_FUZZED(-9.1) : injectionSwitch.x), ((false ? _GLF_FUZZED(-9.1) : injectionSwitch.x)) / _GLF_IDENTITY(1.0, (1.0) * 1.0))), injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)).y)), bool(bool(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, 0.0 + (_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(-5493.5694) : injectionSwitch.x)))), (_GLF_IDENTITY(injectionSwitch.x, 0.0 + (_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(_GLF_IDENTITY(-5493.5694, (true ? _GLF_IDENTITY(-5493.5694, clamp(_GLF_IDENTITY(-5493.5694, (-5493.5694) + 0.0), -5493.5694, -5493.5694)) : _GLF_FUZZED(determinant(mat3(-0.1, -1655.1699, 6.1, -6.2, 47.93, 283.736, -6.8, -76.41, -67.70)))))) : injectionSwitch.x))))) - 0.0) > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(injectionSwitch[0], injectionSwitch[1]), (true ? _GLF_IDENTITY(vec2(injectionSwitch[0], injectionSwitch[1]), (vec2(injectionSwitch[0], injectionSwitch[1])) / vec2(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y))) : _GLF_FUZZED(vec2(645.462, 93.45))))).y)))))))
      return;
     return;
    }
   if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_DEAD(false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_DEAD(false)), (_GLF_IDENTITY((_GLF_DEAD(false)), _GLF_IDENTITY(bool(bvec3((_GLF_DEAD(false)), true, true)), true && (bool(bvec3((_GLF_DEAD(false)), true, true)))))) && true), ! (! (! _GLF_IDENTITY((_GLF_DEAD(false)), (_GLF_IDENTITY((_GLF_DEAD(false)), _GLF_IDENTITY(bool(bvec3((_GLF_DEAD(false)), true, true)), true && (bool(bvec3((_GLF_DEAD(false)), true, true)))))) && true))))))))))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     return;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(vec3(injectionSwitch, 1.0))).x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))).x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))).x > injectionSwitch.y)))))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
       return;
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(_GLF_IDENTITY(bool((injectionSwitch.x > injectionSwitch.y)), false || (bool((injectionSwitch.x > injectionSwitch.y)))))))))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), injectionSwitch)).y))))
          return;
        }
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false), bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false), (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false)) && true), true))))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(bool(false))))))))
          barrier();
         return;
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec3(injectionSwitch.x > injectionSwitch.y, true, false)))), bool(bvec2(bool(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec3(injectionSwitch.x > injectionSwitch.y, true, false)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))), ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec3(injectionSwitch.x > injectionSwitch.y, true, false)))), bool(bvec2(bool(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec3(injectionSwitch.x > injectionSwitch.y, true, false)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))) || false))))
        return;
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         barrier();
        }
       return;
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec2(_GLF_DEAD(false), true)), (bool(bvec2(_GLF_DEAD(false), true))) || false)))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).y))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         return;
        }
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
    }
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint virtual_gid = _GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size + _GLF_IDENTITY(subgroup_local_id, 0u | (_GLF_IDENTITY(subgroup_local_id, (false ? _GLF_FUZZED(subgroup_size) : subgroup_local_id)))), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size + _GLF_IDENTITY(subgroup_local_id, 0u | (subgroup_local_id)), min(workgroup_base + subgroup_id * subgroup_size + _GLF_IDENTITY(subgroup_local_id, 0u | (subgroup_local_id)), workgroup_base + subgroup_id * subgroup_size + _GLF_IDENTITY(subgroup_local_id, 0u | (subgroup_local_id))))), (true ? ~ (_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size + _GLF_IDENTITY(subgroup_local_id, 0u | (subgroup_local_id)), min(workgroup_base + subgroup_id * subgroup_size + _GLF_IDENTITY(subgroup_local_id, 0u | (subgroup_local_id)), workgroup_base + subgroup_id * subgroup_size + _GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (false ? _GLF_FUZZED(workgroup_base) : subgroup_local_id)), 0u | (subgroup_local_id))))) : _GLF_FUZZED(num_workgroup)))));
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
    return;
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY((false) || false, ! (! (_GLF_IDENTITY((false) || false, ! (! ((_GLF_IDENTITY(false, ! (! (false)))) || false)))))))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (true ? _GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(748.873)), float(injectionSwitch.x), bool(true))) : _GLF_FUZZED(-8.1))), injectionSwitch.x)) > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, (false) && true)), (! (_GLF_IDENTITY(false, (false) && true))) || false)))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], mix(float(_GLF_IDENTITY(injectionSwitch[1], (injectionSwitch[1]) - 0.0)), float(_GLF_FUZZED(0.7)), _GLF_IDENTITY(bool(false), ! (! (bool(false)))))))).y))), bool(bool(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch))[1], _GLF_IDENTITY(mix(float(_GLF_IDENTITY(injectionSwitch[1], (injectionSwitch[1]) - 0.0)), float(_GLF_FUZZED(0.7)), bool(false)), clamp(mix(float(_GLF_IDENTITY(injectionSwitch[1], (injectionSwitch[1]) - 0.0)), float(_GLF_FUZZED(0.7)), bool(false)), _GLF_IDENTITY(mix(float(_GLF_IDENTITY(injectionSwitch[1], (injectionSwitch[1]) - 0.0)), float(_GLF_FUZZED(0.7)), bool(false)), min(mix(float(_GLF_IDENTITY(injectionSwitch[1], (injectionSwitch[1]) - 0.0)), float(_GLF_FUZZED(0.7)), bool(false)), mix(float(_GLF_IDENTITY(injectionSwitch[1], (injectionSwitch[1]) - 0.0)), float(_GLF_FUZZED(0.7)), bool(false)))), mix(float(_GLF_IDENTITY(injectionSwitch[1], (injectionSwitch[1]) - 0.0)), float(_GLF_FUZZED(0.7)), bool(false))))))).y)))))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))
          return;
         barrier();
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         return;
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         return;
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y))))))
          barrier();
         return;
        }
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     return;
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-2520.1732)), float(injectionSwitch.y), bool(true)))))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), bool(_GLF_IDENTITY(bvec2(_GLF_DEAD(false), false), bvec2(bvec2(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))), false), bvec2(bvec4(bvec2(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))), false), true, true))))))))) || false))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY((injectionSwitch)[0], max((injectionSwitch)[0], (injectionSwitch)[0])), (injectionSwitch)[1]), vec2(_GLF_FUZZED(1136.5436), _GLF_FUZZED(6892.9026)), bvec2(false, false))), injectionSwitch)).x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
  }
 if(_GLF_DEAD(false))
  barrier();
 uint next_virtual_gid = workgroup_base + _GLF_IDENTITY(subgroup_id * subgroup_size, max(subgroup_id * subgroup_size, subgroup_id * subgroup_size)) + ((subgroup_local_id + 1) % _GLF_IDENTITY(subgroup_size, min(subgroup_size, subgroup_size)));
 uint read_1 = atomicLoad(buf[virtual_gid], 4, 64, 0);
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && _GLF_IDENTITY((false), true && (_GLF_IDENTITY((false), ! (! (_GLF_IDENTITY((false), bool(bvec3((false), false, true)))))))))), true && (! (_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false))))), bool(bvec4(_GLF_IDENTITY(! (false), bool(bool(! (false)))), false, _GLF_IDENTITY(false, false || _GLF_IDENTITY((false), true && (_GLF_IDENTITY((false), ((false)) || false)))), true)))))))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(false, true, false, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, (injectionSwitch.x < injectionSwitch.y) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))), ! (_GLF_IDENTITY(! (false), (! (false)) || false))), ! _GLF_IDENTITY((! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(false, true, false, _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, float(vec2(injectionSwitch.y, 1.0)))))))), ! (_GLF_IDENTITY(! (false), (! (false)) || false))), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(false, _GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, bool(bvec3(true, true, true))))), false, _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), ! (! (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), (bool(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), ! (! (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))) || false)))))), ! (_GLF_IDENTITY(! (false), (! (false)) || false))), false), bvec2(bvec2(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(false, _GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, bool(bvec3(true, true, true))))), false, _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), ! (! (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), (bool(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), ! (! (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))) || false)))))), ! (_GLF_IDENTITY(! (false), (! (false)) || false))), false)))))))), false || ((! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(false, true, false, _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, float(vec2(injectionSwitch.y, 1.0)))))))), ! (_GLF_IDENTITY(! (false), (! (false)) || false))), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(false, _GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, bool(bvec3(true, true, true))))), false, _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), ! (! (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), (bool(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), ! (! (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))) || false)))))), ! (_GLF_IDENTITY(! (false), (! (false)) || false))), false), bvec2(bvec2(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(false, _GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, bool(bvec3(true, true, true))))), false, _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), ! (! (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), (bool(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), ! (! (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))) || false)))))), ! (_GLF_IDENTITY(! (false), (! (false)) || false))), false)))))))))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0)) - 0.0), (injectionSwitch.y) + 0.0), min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0)) - 0.0), (injectionSwitch.y) + 0.0), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0)) - 0.0, max((_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0)) - 0.0, (_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0)) - 0.0))), (injectionSwitch.y) + 0.0)))))), _GLF_IDENTITY((_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)).x > _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-4820.9302)), float(_GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(cos(24.45)) : 0.0))), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), clamp((_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-4820.9302)), float(_GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(cos(24.45)) : 0.0))), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), (_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-4820.9302)), float(_GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(cos(24.45)) : 0.0))), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), (_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-4820.9302)), float(_GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(cos(24.45)) : 0.0))), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))) - 0.0), (injectionSwitch.y) + 0.0), min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0)), (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0)), min((_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0)), (_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0))))) - 0.0) - 0.0), (injectionSwitch.y) + 0.0), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0)) - 0.0, (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0)) - 0.0, (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0)) - 0.0, clamp((_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0)) - 0.0, (_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0)) - 0.0, (_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0)) - 0.0))) / 1.0)) * 1.0)), (injectionSwitch.y) + 0.0))))))), bool(_GLF_IDENTITY(bool((_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)).x > _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-4820.9302)), float(_GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(cos(24.45)) : 0.0))), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), clamp((_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-4820.9302)), float(_GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(cos(24.45)) : 0.0))), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), (_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-4820.9302)), float(_GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(cos(24.45)) : 0.0))), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), (_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-4820.9302)), float(_GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(cos(24.45)) : 0.0))), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))) - 0.0), (injectionSwitch.y) + 0.0), min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0)), (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0)), min((_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0)), (_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0))))) - 0.0) - 0.0), (injectionSwitch.y) + 0.0), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0)) - 0.0, (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0)) - 0.0, (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0)) - 0.0, clamp((_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0)) - 0.0, (_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0)) - 0.0, (_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0)) - 0.0))) / 1.0)) * 1.0)), (injectionSwitch.y) + 0.0)))))))), _GLF_IDENTITY(bool(bvec4(bool((_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)).x > _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-4820.9302)), float(_GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(cos(24.45)) : 0.0))), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), clamp((_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-4820.9302)), float(_GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(cos(24.45)) : 0.0))), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), (_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-4820.9302)), float(_GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(cos(24.45)) : 0.0))), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), (_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-4820.9302)), float(_GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(cos(24.45)) : 0.0))), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))) - 0.0), (injectionSwitch.y) + 0.0), min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0)), (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0)), min((_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0)), (_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0))))) - 0.0) - 0.0), (injectionSwitch.y) + 0.0), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0)) - 0.0, (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0)) - 0.0, (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0)) - 0.0, clamp((_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0)) - 0.0, (_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0)) - 0.0, (_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0)) - 0.0))) / 1.0)) * 1.0)), (injectionSwitch.y) + 0.0)))))))), false, true, false)), ! (! (bool(bvec4(bool((_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)).x > _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-4820.9302)), float(_GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(cos(24.45)) : 0.0))), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), clamp((_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-4820.9302)), float(_GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(cos(24.45)) : 0.0))), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), (_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-4820.9302)), float(_GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(cos(24.45)) : 0.0))), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), (_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-4820.9302)), float(_GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(cos(24.45)) : 0.0))), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))) - 0.0), (injectionSwitch.y) + 0.0), min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0)), (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0)), min((_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0)), (_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0))))) - 0.0) - 0.0), (injectionSwitch.y) + 0.0), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0)) - 0.0, (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0)) - 0.0, (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0)) - 0.0, clamp((_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0)) - 0.0, (_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0)) - 0.0, (_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0)) - 0.0))) / 1.0)) * 1.0)), (injectionSwitch.y) + 0.0)))))))), false, true, false)))))))) && true))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     barrier();
    }
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 atomicStore(buf[_GLF_IDENTITY(next_virtual_gid, (next_virtual_gid) ^ 0u)], uint(_GLF_IDENTITY(_GLF_IDENTITY(read_1, _GLF_IDENTITY(~ (~ _GLF_IDENTITY((read_1), 0u ^ ((read_1)))), _GLF_IDENTITY(max(~ (~ _GLF_IDENTITY((read_1), 0u | (_GLF_IDENTITY((read_1), (true ? (read_1) : _GLF_FUZZED(subgroup_id)))))), ~ (~ (read_1))), (max(~ (~ (read_1)), ~ (~ (read_1)))) << 0u))), (false ? _GLF_FUZZED(subgroup_id) : _GLF_IDENTITY(read_1, ~ (_GLF_IDENTITY(~ _GLF_IDENTITY(_GLF_IDENTITY((read_1), ((read_1)) / _GLF_IDENTITY((1u ^ 0u), (_GLF_IDENTITY((1u ^ 0u), (true ? (1u ^ 0u) : _GLF_FUZZED(read_1)))) ^ 0u)), min(_GLF_IDENTITY(_GLF_IDENTITY((read_1), ((read_1)) / (1u ^ 0u)), (_GLF_IDENTITY((read_1), ((read_1)) / (1u ^ 0u))) >> 0u), _GLF_IDENTITY((read_1), ((read_1)) / (_GLF_IDENTITY(1u ^ 0u, _GLF_IDENTITY((1u ^ 0u) << (0u | 0u), max((1u ^ 0u) << (0u | 0u), _GLF_IDENTITY((1u ^ 0u) << (_GLF_IDENTITY(0u | 0u, uint(uvec4(0u | 0u, 0u, 0u, (1u & 1u))))), ((1u ^ 0u) << (0u | 0u)) / _GLF_IDENTITY(1u, (1u) << 0u))))))))), uint(_GLF_ZERO(0.0, injectionSwitch.x)) + (~ _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(read_1, max(read_1, _GLF_IDENTITY(read_1, (true ? read_1 : _GLF_FUZZED(num_workgroup)))))), ((read_1)) >> 0u), _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY((read_1), _GLF_IDENTITY(uint(uvec4(_GLF_IDENTITY((read_1), max((read_1), (read_1))), 1u, uint(_GLF_ZERO(0.0, injectionSwitch.x)), 1u)), ~ (~ (uint(uvec4(_GLF_IDENTITY((read_1), max((read_1), (read_1))), 1u, uint(_GLF_ZERO(0.0, injectionSwitch.x)), 1u))))))), ((_GLF_IDENTITY((read_1), _GLF_IDENTITY(uint(uvec4(_GLF_IDENTITY((read_1), _GLF_IDENTITY(max((read_1), (read_1)), ~ (~ (max((read_1), (read_1)))))), 1u, uint(_GLF_ZERO(0.0, injectionSwitch.x)), 1u)), ~ (~ (uint(uvec4(_GLF_IDENTITY((read_1), max((read_1), (read_1))), 1u, uint(_GLF_ZERO(0.0, injectionSwitch.x)), 1u)))))))) | ((_GLF_IDENTITY((read_1), _GLF_IDENTITY(uint(uvec4(_GLF_IDENTITY((read_1), max((_GLF_IDENTITY(read_1, (read_1) / 1u)), (read_1))), 1u, uint(_GLF_ZERO(0.0, injectionSwitch.x)), 1u)), ~ (~ (uint(uvec4(_GLF_IDENTITY((read_1), max((_GLF_IDENTITY(read_1, clamp(_GLF_IDENTITY(read_1, (read_1) / 1u), read_1, read_1))), (read_1))), 1u, uint(_GLF_ZERO(0.0, injectionSwitch.x)), 1u))))))))), (_GLF_IDENTITY((_GLF_IDENTITY((read_1), _GLF_IDENTITY(uint(uvec4(_GLF_IDENTITY((read_1), max((read_1), _GLF_IDENTITY((read_1), ((read_1)) - uint(_GLF_ZERO(0.0, injectionSwitch.x))))), 1u, uint(_GLF_ZERO(0.0, injectionSwitch.x)), 1u)), ~ (~ (uint(uvec4(_GLF_IDENTITY((read_1), max((read_1), (read_1))), 1u, uint(_GLF_ZERO(0.0, injectionSwitch.x)), 1u))))))), ((_GLF_IDENTITY((read_1), _GLF_IDENTITY(uint(uvec4(_GLF_IDENTITY((read_1), max((read_1), (read_1))), 1u, uint(_GLF_ZERO(0.0, injectionSwitch.x)), _GLF_IDENTITY(1u, min(1u, 1u)))), ~ (~ (uint(uvec4(_GLF_IDENTITY((read_1), max((read_1), (read_1))), 1u, uint(_GLF_ZERO(0.0, injectionSwitch.x)), _GLF_IDENTITY(1u, _GLF_IDENTITY(uint(_GLF_IDENTITY(uint(1u), (uint(1u)) / 1u)), (uint(_GLF_IDENTITY(uint(1u), (uint(1u)) / 1u))) >> 0u)))))))))) | ((_GLF_IDENTITY((read_1), _GLF_IDENTITY(uint(uvec4(_GLF_IDENTITY((read_1), max((read_1), (read_1))), 1u, uint(_GLF_ZERO(0.0, injectionSwitch.x)), 1u)), _GLF_IDENTITY(~ (~ (uint(uvec4(_GLF_IDENTITY((read_1), max((read_1), (read_1))), 1u, uint(_GLF_ZERO(0.0, injectionSwitch.x)), 1u)))), 0u + (~ (~ (uint(uvec4(_GLF_IDENTITY((read_1), max((read_1), (read_1))), 1u, uint(_GLF_ZERO(0.0, injectionSwitch.x)), 1u)))))))))))) >> (uint(_GLF_ONE(1.0, injectionSwitch.y)) ^ 1u)) / (1u ^ _GLF_IDENTITY(0u, min(_GLF_IDENTITY(0u, 0u ^ (0u)), _GLF_IDENTITY(0u, max(0u, 0u)))))))))))) + 1), 4, 64, 4);
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(8.8) : _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)), (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x))) - tan(0.0)))) > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   return;
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), bool(_GLF_IDENTITY(bvec3(_GLF_DEAD(false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bvec3(bvec4(bvec3(_GLF_DEAD(false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), false))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))))))
    barrier();
   return;
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint read_2 = atomicLoad(buf[_GLF_IDENTITY(virtual_gid, (_GLF_IDENTITY(virtual_gid, (virtual_gid) - 0u)) + (0u << _GLF_IDENTITY(uint(6u), uint(6u))))], 4, 64, 0);
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), (_GLF_IDENTITY(false, (false) && true)) && true), (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          barrier();
         return;
        }
      }
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   return;
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! (! (false)))), false || (! (_GLF_IDENTITY(false, ! (! (false))))))))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, false, true)))))
          return;
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       return;
      }
     barrier();
    }
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], clamp(injectionSwitch[0], injectionSwitch[0], injectionSwitch[0])), injectionSwitch[1])).x > injectionSwitch.y))), bool(bvec3(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && true), false, true))))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(clamp(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))), _GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)), injectionSwitch), vec2(mat3x4(_GLF_IDENTITY(clamp(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))), _GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)), injectionSwitch), (clamp(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))), _GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)), injectionSwitch)) * mat2(1.0)), abs(1.0), 0.0, 0.0, 0.0, tan(determinant(mat4(0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))), sqrt(1.0), 0.0, 0.0, 1.0, 1.0)))).y))))
      return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).y))))
    return;
  }
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y)))))))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   return;
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-6383.8287), _GLF_FUZZED(-540.157)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))).x > injectionSwitch.y), ((_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-6383.8287), _GLF_FUZZED(-540.157)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))).x > injectionSwitch.y)) || false))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((false), bool(bvec3((false), _GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, ! (! (true)))))), true)))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
    return;
   return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) && true), (injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) ^ 0u) + _GLF_IDENTITY(1, _GLF_IDENTITY((1) * 1, min(_GLF_IDENTITY((1), ((1)) | ((1))) * 1, _GLF_IDENTITY((1), (_GLF_IDENTITY((1), clamp((1), (1), (1)))) - 0) * 1))) < subgroup_size)
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   int i = 0;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) && true))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false))))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], max(injectionSwitch[1], injectionSwitch[1])))).x, (false ? _GLF_FUZZED(-8.7) : _GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)))) > injectionSwitch.y)), (_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[_GLF_IDENTITY(0, max(0, 0))], _GLF_IDENTITY(injectionSwitch[1], max(injectionSwitch[1], injectionSwitch[1])))).x, (false ? _GLF_FUZZED(-8.7) : _GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(3311.7154), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(-5.2)), bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))).x)))) > injectionSwitch.y))) || false)))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       return;
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)), _GLF_IDENTITY(min(vec2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)), vec2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))), vec2(0.0, 0.0) + (min(vec2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)))).x)), vec2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)))))) + (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch), _GLF_IDENTITY(vec2(_GLF_IDENTITY(mat2x3((injectionSwitch), 1.0, 1.0, 1.0, round(length(normalize(1.0)))), mat3(1.0) * (mat2x3((injectionSwitch), 1.0, 1.0, 1.0, round(length(normalize(1.0))))))), min(_GLF_IDENTITY(vec2(_GLF_IDENTITY(mat2x3((injectionSwitch), 1.0, 1.0, 1.0, round(length(normalize(1.0)))), mat3(1.0) * (mat2x3((injectionSwitch), 1.0, 1.0, 1.0, round(length(normalize(1.0))))))), mix(vec2(_GLF_FUZZED(12.35), (vec2(_GLF_IDENTITY(mat2x3((injectionSwitch), 1.0, 1.0, 1.0, round(length(normalize(1.0)))), mat3(1.0) * (mat2x3((injectionSwitch), 1.0, 1.0, 1.0, round(length(normalize(1.0))))))))[1]), vec2((vec2(_GLF_IDENTITY(mat2x3((injectionSwitch), 1.0, 1.0, 1.0, round(length(normalize(1.0)))), mat3(1.0) * (mat2x3((injectionSwitch), 1.0, 1.0, 1.0, round(length(normalize(1.0))))))))[0], _GLF_FUZZED(-5015.5847)), bvec2(true, false))), vec2(_GLF_IDENTITY(mat2x3((injectionSwitch), 1.0, 1.0, 1.0, round(length(normalize(1.0)))), mat3(1.0) * (mat2x3((injectionSwitch), 1.0, 1.0, 1.0, round(length(normalize(1.0)))))))))) / vec2(1.0, 1.0)), min(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch), (false ? _GLF_FUZZED(vec2(-8.1, 65.87)) : _GLF_IDENTITY((injectionSwitch), max((injectionSwitch), _GLF_IDENTITY((injectionSwitch), clamp((injectionSwitch), (injectionSwitch), (injectionSwitch))))))) / vec2(1.0, 1.0)), clamp(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch), _GLF_IDENTITY(((injectionSwitch)) * mat2(1.0), (((injectionSwitch)) * mat2(1.0)) - vec2(0.0, 0.0))) / vec2(1.0, 1.0)), _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)), _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)), _GLF_IDENTITY(clamp(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)), _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)), _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0))), clamp(_GLF_IDENTITY(clamp(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)), _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)), _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0))), (false ? _GLF_FUZZED(vec2(-1.2, -5378.6821)) : clamp(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)), _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)), _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0))))), _GLF_IDENTITY(clamp(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)), _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)), _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0))), mix(vec2((clamp(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)), _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)), _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0))))[0], (clamp(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)), _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)), _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0))))[1]), vec2(_GLF_FUZZED(-1325.8452), _GLF_FUZZED(-1.8)), bvec2(false, false))), clamp(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)), _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)), _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)))))), mat2(1.0) * (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, _GLF_IDENTITY(1.0, min(1.0, _GLF_IDENTITY(1.0, (1.0) * sqrt(1.0)))))), clamp(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)), _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)), _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)))))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)), clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)), max(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)), _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)))), _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)), _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / _GLF_IDENTITY(vec2(1.0, _GLF_IDENTITY(1.0, max(1.0, 1.0))), mix(vec2(_GLF_FUZZED(492.483), _GLF_FUZZED(30.91)), vec2((vec2(1.0, _GLF_IDENTITY(1.0, max(1.0, 1.0))))[0], (vec2(1.0, _GLF_IDENTITY(1.0, max(1.0, 1.0))))[1]), bvec2(true, true)))), clamp(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)), _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-33.33), _GLF_FUZZED(-74.03)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true)))) / vec2(1.0, 1.0)), _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) / vec2(1.0, 1.0), ((injectionSwitch) / vec2(1.0, 1.0)) * mat2(1.0))))))))))).x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, bool(bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y)))))), ! (_GLF_IDENTITY(! (! (_GLF_IDENTITY(false, bool(bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y))))))), ! (! (! (! (_GLF_IDENTITY(false, bool(bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), min(mat2(1.0) * (injectionSwitch), mat2(1.0) * (injectionSwitch)))), injectionSwitch, injectionSwitch)).y))))))))))))))))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         return;
         if(_GLF_DEAD(false))
          barrier();
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         return;
        }
       barrier();
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         return;
        }
       if(_GLF_DEAD(false))
        return;
      }
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))), false || _GLF_IDENTITY((bool(injectionSwitch.x > injectionSwitch.y)), ((bool(injectionSwitch.x > injectionSwitch.y))) && true))))))), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bool(injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / abs(vec2(1.0, 1.0))).y, mix(float(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / abs(vec2(1.0, 1.0))).y), float(_GLF_FUZZED((mat2x4(8.6, 87.11, -1.8, -6.9, 9.4, -6.6, -92.04, -2.1) * vec2(-909.770, 23.91)).w)), _GLF_IDENTITY(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))))))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bool(injectionSwitch.x > injectionSwitch.y))))))))), true, true), bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)))).y, bool(bool(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x > injectionSwitch.y)))), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)))).y, bool(bool(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x > injectionSwitch.y)))), ((_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)))).y, bool(bool(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x > injectionSwitch.y))))) || false))), (_GLF_IDENTITY(bool(bool(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)))).y, bool(bool(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x > injectionSwitch.y)))), ((_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)))).y, bool(bool(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x > injectionSwitch.y))))) || false))), bool(bool(bool(bool(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)))).y, bool(bool(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x > injectionSwitch.y)))), ((_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)))).y, bool(bool(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x > injectionSwitch.y))))) || false))))))) || false)))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(-35.27) : _GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x))) - 0.0))) > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(-35.27) : _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x, injectionSwitch.x))) / 1.0), (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x))) - 0.0))) > injectionSwitch.y))), bool(bool(injectionSwitch.x > injectionSwitch.y))))))))), true, true), bvec3(bvec4(bvec3(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)))).y, bool(bool(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x > injectionSwitch.y)))), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)))).y, bool(bool(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x > injectionSwitch.y)))), ((_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)))).y, bool(bool(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x > injectionSwitch.y))))) || false))), (_GLF_IDENTITY(bool(bool(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)))).y, bool(bool(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x > injectionSwitch.y)))), ((_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)))).y, bool(bool(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x > injectionSwitch.y))))) || false))), bool(bool(bool(bool(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)))).y, bool(bool(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x > injectionSwitch.y)))), ((_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)))).y, bool(bool(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x > injectionSwitch.y))))) || false))))))) || false)))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(-35.27) : _GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x))) - 0.0))) > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(-35.27) : _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x, injectionSwitch.x))) / 1.0), (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x))) - 0.0))) > injectionSwitch.y))), bool(bool(injectionSwitch.x > injectionSwitch.y))))))))), true, true), true)))), bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)))).y, bool(bool(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x > injectionSwitch.y)))), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)))).y, bool(bool(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x > injectionSwitch.y)))), ((_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)))).y, bool(bool(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x > injectionSwitch.y))))) || false))), (_GLF_IDENTITY(bool(bool(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)))).y, bool(bool(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x > injectionSwitch.y)))), ((_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)))).y, bool(bool(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x > injectionSwitch.y))))) || false))), bool(bool(bool(bool(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)))).y, bool(bool(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x > injectionSwitch.y)))), ((_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)))).y, bool(bool(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x > injectionSwitch.y))))) || false))))))) || false)))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(-35.27) : _GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x))) - 0.0))) > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(-35.27) : _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x, injectionSwitch.x))) / 1.0), (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x))) - 0.0))) > injectionSwitch.y))), bool(bool(injectionSwitch.x > injectionSwitch.y))))))))), true, true), bvec3(bvec4(bvec3(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)))).y, bool(bool(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x > injectionSwitch.y)))), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)))).y, bool(bool(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x > injectionSwitch.y)))), ((_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)))).y, bool(bool(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x > injectionSwitch.y))))) || false))), (_GLF_IDENTITY(bool(bool(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)))).y, bool(bool(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x > injectionSwitch.y)))), ((_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)))).y, bool(bool(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x > injectionSwitch.y))))) || false))), bool(bool(bool(bool(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)))).y, bool(bool(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x > injectionSwitch.y)))), ((_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)))).y, bool(bool(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x > injectionSwitch.y))))) || false))))))) || false)))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(-35.27) : _GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x))) - 0.0))) > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(-35.27) : _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x, injectionSwitch.x))) / 1.0), (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x))) - 0.0))) > injectionSwitch.y))), bool(bool(injectionSwitch.x > injectionSwitch.y))))))))), true, true), true))))))))))))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), ! _GLF_IDENTITY((! (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bool(bvec3(_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), false, false))))), true && (_GLF_IDENTITY((! (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bool(bvec3(_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), false, false))))), _GLF_IDENTITY(bool(bvec4((! (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bool(bvec3(_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), false, false))))), false, false, false)), (bool(bvec4((! (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bool(bvec3(_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), false, false))))), false, false, false))) || false)))))), true && (bool(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), ! (! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bool(bvec3(_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), false, false)))), _GLF_IDENTITY(bool(bool((_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bool(bvec3(_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), false, false)))))), bool(bvec4(_GLF_IDENTITY(bool(bool((_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bool(bvec3(_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), false, false)))))), true && (bool(bool((_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bool(bvec3(_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), false, false)))))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, false)))))))))))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(false, (false) && true), true, true))))))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), bool(bvec3(bool(_GLF_IDENTITY(false, (false) && true)), false, _GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec2(_GLF_IDENTITY(bvec2(false, true), bvec2(_GLF_IDENTITY(bvec2(bvec2(false, true)), bvec2(bvec3(bvec2(bvec2(false, true)), false)))))))))))))))))
          {
           if(_GLF_DEAD(false))
            barrier();
           return;
           if(_GLF_DEAD(false))
            barrier();
          }
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], min(injectionSwitch[1], injectionSwitch[1])))).y, mix(float(_GLF_FUZZED((- -15.69))), float(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], min(injectionSwitch[1], injectionSwitch[1])))).y), bool(true)))))))
          barrier();
         barrier();
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          return;
        }
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(! (false), bool(_GLF_IDENTITY(bool(! (false)), _GLF_IDENTITY(bool(bvec2(bool(! (false)), _GLF_IDENTITY(false, bool(bool(false))))), _GLF_IDENTITY(bool(bvec3(bool(bvec2(bool(! (false)), false)), false, false)), true && (_GLF_IDENTITY(bool(bvec3(bool(bvec2(bool(! (false)), false)), false, false)), false || (bool(bvec3(bool(bvec2(bool(! (false)), false)), false, false)))))))))), (! (false)) || false)), ((_GLF_IDENTITY(_GLF_IDENTITY(! (false), bool(_GLF_IDENTITY(bool(! (false)), _GLF_IDENTITY(bool(bvec2(bool(! (false)), _GLF_IDENTITY(false, bool(bool(false))))), _GLF_IDENTITY(bool(bvec3(bool(bvec2(bool(! (false)), false)), false, false)), true && (_GLF_IDENTITY(bool(bvec3(bool(bvec2(bool(! (false)), false)), false, false)), false || (bool(bvec3(bool(bvec2(bool(! (false)), false)), false, false)))))))))), (! (false)) || false))) || false))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            barrier();
           return;
          }
         barrier();
         if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)), bool(bool(! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)))))))) || _GLF_IDENTITY(false, (false) && true))))
          return;
        }
       if(_GLF_IDENTITY(_GLF_DEAD(false), bool(_GLF_IDENTITY(bvec2(_GLF_DEAD(false), true), bvec2(bvec3(bvec2(_GLF_DEAD(false), true), false))))))
        return;
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         return;
        }
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && _GLF_IDENTITY((_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bool((injectionSwitch.x > injectionSwitch.y))))), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY((_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bool((injectionSwitch.x > injectionSwitch.y))))), ! (_GLF_IDENTITY(! ((_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bool((injectionSwitch.x > injectionSwitch.y)))))), bool(bvec2(! ((_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bool((injectionSwitch.x > injectionSwitch.y)))))), true))))), true, true)), true && (bool(bvec3(_GLF_IDENTITY((_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bool((injectionSwitch.x > injectionSwitch.y))))), ! (! ((_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).y, bool(bvec3(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).y, false, true)))), bool(bool((_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y)))))))), true, true)))))))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       return;
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        return;
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
       return;
      }
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(mat2x4(injectionSwitch, determinant(mat2(1.0, 0.0, 0.0, 1.0)), sin(0.0), 0.0, 1.0, 1.0, tan(0.0)))).x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
      barrier();
     if(_GLF_DEAD(false))
      return;
     barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0)))))
        return;
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true)))))
        barrier();
       barrier();
       if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))
        barrier();
       if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_DEAD(false)))))
        return;
      }
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, bool(bvec4(false, true, true, true)))))))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    return;
   atomicStore(buf[next_virtual_gid], uint(_GLF_IDENTITY(read_1 + 1, 0u ^ (_GLF_IDENTITY(read_1 + 1, clamp(read_1 + _GLF_IDENTITY(1, max(1, 1)), read_1 + 1, _GLF_IDENTITY(read_1, (read_1) | (read_1)) + 1)))) == _GLF_IDENTITY(read_2, clamp(_GLF_IDENTITY(_GLF_IDENTITY(read_2, (read_2) - (1u ^ _GLF_IDENTITY(uint(_GLF_ONE(1.0, injectionSwitch.y)), 0u ^ (_GLF_IDENTITY(uint(_GLF_ONE(1.0, injectionSwitch.y)), max(_GLF_IDENTITY(uint(_GLF_ONE(1.0, injectionSwitch.y)), min(uint(_GLF_ONE(1.0, injectionSwitch.y)), uint(_GLF_ONE(1.0, injectionSwitch.y)))), _GLF_IDENTITY(uint(_GLF_ONE(1.0, injectionSwitch.y)), (uint(_GLF_ONE(1.0, injectionSwitch.y))) / 1u))))))), _GLF_IDENTITY((read_2), max((read_2), (read_2))) >> (1732u & 0u)), read_2, read_2))) + 1, 4, _GLF_IDENTITY(64, (64) - _GLF_IDENTITY((0 >> _GLF_IDENTITY(int(0), int(0))), ((0 >> _GLF_IDENTITY(int(0), int(0)))) + 0)), 4);
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false))))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
    {
     if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true), true && (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true), bool(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true), true, false))))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, (false) && true)))))
        return;
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      return;
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_DEAD(false))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), false || (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, 1.0 * (injectionSwitch.y)))), bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(bool(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y)))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), (_GLF_IDENTITY(bool(bool(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y)))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), bool(bvec4(bool(bool(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y)))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), false, false, true)))) || false))) || false, bool(bvec2(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(bool(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y)))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), (_GLF_IDENTITY(bool(bool(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y)))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), bool(bvec4(bool(bool(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y)))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), false, false, true)))) || false))) || false, ! (! ((_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(bool(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y)))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), (_GLF_IDENTITY(bool(bool(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y)))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), bool(bvec4(bool(bool(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y)))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), false, false, true)))) || false))) || false))), true))))), ! (_GLF_IDENTITY(! _GLF_IDENTITY(_GLF_IDENTITY((_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), ((_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bool(_GLF_FALSE(_GLF_IDENTITY(false, (false) || false), (injectionSwitch.x > injectionSwitch.y)))))))) && true), _GLF_IDENTITY(! (! (_GLF_IDENTITY((_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], min(injectionSwitch[1], injectionSwitch[1])))).y)), bool(bool(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-3114.7438)), vec2(_GLF_FUZZED(222.440), (injectionSwitch)[1]), bvec2(false, true))), injectionSwitch, injectionSwitch)), min(_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-3114.7438)), vec2(_GLF_FUZZED(222.440), (injectionSwitch)[1]), bvec2(false, true))), injectionSwitch, injectionSwitch)), _GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-3114.7438)), vec2(_GLF_FUZZED(222.440), (injectionSwitch)[1]), bvec2(false, true))), injectionSwitch, injectionSwitch)))).x > injectionSwitch.y))))))), ((_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec2(bvec4(bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false, false))))), (injectionSwitch.x > injectionSwitch.y)), bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))) && true))), ! (_GLF_IDENTITY(! (! (! (_GLF_IDENTITY((_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], min(injectionSwitch[1], injectionSwitch[1])))).y)), bool(bool(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-3114.7438)), vec2(_GLF_FUZZED(222.440), (injectionSwitch)[1]), bvec2(false, true))), injectionSwitch, injectionSwitch)), min(_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-3114.7438)), vec2(_GLF_FUZZED(222.440), (injectionSwitch)[1]), bvec2(false, true))), injectionSwitch, injectionSwitch)), _GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-3114.7438)), vec2(_GLF_FUZZED(222.440), (injectionSwitch)[1]), bvec2(false, true))), injectionSwitch, injectionSwitch)))).x > injectionSwitch.y))))))), ((_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec2(bvec4(bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false, false))))), (injectionSwitch.x > injectionSwitch.y)), bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))) && true)))), (_GLF_IDENTITY(! (! (! (_GLF_IDENTITY((_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], min(injectionSwitch[1], injectionSwitch[1])))).y)), bool(bool(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-3114.7438)), vec2(_GLF_FUZZED(222.440), (injectionSwitch)[1]), bvec2(false, true))), injectionSwitch, injectionSwitch)), min(_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-3114.7438)), vec2(_GLF_FUZZED(222.440), (injectionSwitch)[1]), bvec2(false, true))), injectionSwitch, injectionSwitch)), _GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-3114.7438)), vec2(_GLF_FUZZED(222.440), (injectionSwitch)[1]), bvec2(false, true))), injectionSwitch, injectionSwitch)))).x > injectionSwitch.y))))))), ((_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec2(bvec4(bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false, false))))), (injectionSwitch.x > injectionSwitch.y)), bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))) && true)))), ! (! (! (! (! (_GLF_IDENTITY((_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], min(injectionSwitch[1], injectionSwitch[1])))).y)), bool(bool(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-3114.7438)), vec2(_GLF_FUZZED(222.440), (injectionSwitch)[1]), bvec2(false, true))), injectionSwitch, injectionSwitch)), min(_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-3114.7438)), vec2(_GLF_FUZZED(222.440), (injectionSwitch)[1]), bvec2(false, true))), mix(vec2(_GLF_FUZZED(-1666.2206), _GLF_FUZZED(535.221)), vec2((_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-3114.7438)), vec2(_GLF_FUZZED(222.440), (injectionSwitch)[1]), bvec2(false, true))))[0], (_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-3114.7438)), vec2(_GLF_FUZZED(222.440), (injectionSwitch)[1]), bvec2(false, true))))[1]), bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))), injectionSwitch, injectionSwitch)), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-3114.7438)), vec2(_GLF_FUZZED(222.440), (injectionSwitch)[1]), bvec2(false, true))), injectionSwitch, injectionSwitch)), vec2(0.0, 0.0) + (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-3114.7438)), vec2(_GLF_FUZZED(222.440), (injectionSwitch)[1]), bvec2(false, true))), injectionSwitch, injectionSwitch)), max(_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-3114.7438)), vec2(_GLF_FUZZED(222.440), (injectionSwitch)[1]), bvec2(false, true))), injectionSwitch, injectionSwitch)), _GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-3114.7438)), vec2(_GLF_FUZZED(222.440), (injectionSwitch)[1]), bvec2(false, true))), injectionSwitch, injectionSwitch)))))))).x > injectionSwitch.y))))))), ((_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec2(bvec4(bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false))))), (injectionSwitch.x > injectionSwitch.y)), bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))) && true)))))))) && true)))), (_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) && true))), false), bvec2(bvec2(bvec2(false, false)))))) ? _GLF_FUZZED(_GLF_IDENTITY(-1.2, (-1.2) + sqrt(0.0))) : _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(min(injectionSwitch, injectionSwitch), (_GLF_IDENTITY(min(injectionSwitch, injectionSwitch), (min(injectionSwitch, injectionSwitch)) * mat2(_GLF_ONE(1.0, injectionSwitch.y)))) / vec2(1.0, 1.0))).y)), mix(float(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) && true))), false), bvec2(bvec2(bvec2(false, false)))))) ? _GLF_FUZZED(_GLF_IDENTITY(-1.2, (-1.2) + sqrt(0.0))) : _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(min(injectionSwitch, injectionSwitch), (_GLF_IDENTITY(min(injectionSwitch, injectionSwitch), (min(injectionSwitch, injectionSwitch)) * mat2(_GLF_ONE(1.0, injectionSwitch.y)))) / vec2(1.0, 1.0))).y))), float(_GLF_FUZZED(8699.2270)), bool(false))), float(mat4(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec2(bvec2(false, false)))))) ? _GLF_FUZZED(_GLF_IDENTITY(-1.2, (-1.2) + sqrt(0.0))) : _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y)), 1.0, 1.0, 0.0, log(1.0), 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, sin(0.0), abs(0.0), 0.0))))), ! (! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) && true))), false), bvec2(bvec2(bvec2(false, false)))))) ? _GLF_FUZZED(_GLF_IDENTITY(-1.2, _GLF_IDENTITY((-1.2) + sqrt(0.0), mix(float(_GLF_FUZZED(-371.365)), float(_GLF_IDENTITY((-1.2) + sqrt(0.0), mix(float(_GLF_FUZZED((2.4 + -2.6))), float(_GLF_IDENTITY((-1.2) + sqrt(0.0), clamp((-1.2) + sqrt(0.0), (-1.2) + sqrt(0.0), (-1.2) + sqrt(0.0)))), bool(true)))), bool(true))))) : _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), injectionSwitch)), _GLF_IDENTITY(min(injectionSwitch, injectionSwitch), (_GLF_IDENTITY(min(injectionSwitch, injectionSwitch), _GLF_IDENTITY((min(injectionSwitch, injectionSwitch)) * mat2(_GLF_ONE(1.0, injectionSwitch.y)), ((min(injectionSwitch, injectionSwitch)) * mat2(_GLF_ONE(1.0, injectionSwitch.y))) - vec2(0.0, 0.0)))) / vec2(1.0, 1.0))).y)), mix(float(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) && true))), false), bvec2(bvec2(bvec2(false, false)))))) ? _GLF_FUZZED(_GLF_IDENTITY(-1.2, (-1.2) + sqrt(0.0))) : _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(min(injectionSwitch, injectionSwitch), _GLF_IDENTITY((_GLF_IDENTITY(min(injectionSwitch, injectionSwitch), (min(injectionSwitch, injectionSwitch)) * mat2(_GLF_ONE(1.0, injectionSwitch.y)))) / vec2(1.0, 1.0), vec2(1.0, 1.0) * (_GLF_IDENTITY((_GLF_IDENTITY(min(injectionSwitch, injectionSwitch), (min(injectionSwitch, injectionSwitch)) * mat2(_GLF_ONE(1.0, injectionSwitch.y)))) / vec2(1.0, 1.0), clamp((_GLF_IDENTITY(min(injectionSwitch, injectionSwitch), (min(injectionSwitch, injectionSwitch)) * mat2(_GLF_ONE(1.0, injectionSwitch.y)))) / vec2(1.0, 1.0), (_GLF_IDENTITY(min(injectionSwitch, injectionSwitch), (min(injectionSwitch, injectionSwitch)) * mat2(_GLF_ONE(1.0, injectionSwitch.y)))) / vec2(1.0, 1.0), (_GLF_IDENTITY(min(injectionSwitch, injectionSwitch), (min(injectionSwitch, injectionSwitch)) * mat2(_GLF_ONE(1.0, injectionSwitch.y)))) / vec2(1.0, 1.0))))))).y))), float(_GLF_FUZZED(8699.2270)), bool(false))), float(mat4(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec3(bvec2(false, false), true))), bvec2(bvec2(bvec2(false, false)))))) ? _GLF_FUZZED(_GLF_IDENTITY(-1.2, (-1.2) + sqrt(_GLF_IDENTITY(0.0, max(0.0, 0.0))))) : _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), clamp(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)))).y)), 1.0, 1.0, 0.0, log(1.0), 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, sin(0.0), abs(0.0), 0.0)))))))))), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (bool(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0))) - vec2(0.0, 0.0)).y)))))))), false, true), bvec3(bvec4(bvec3(_GLF_IDENTITY(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), false, true), false)))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bool(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > injectionSwitch.y))), ! (! (bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), false, true), bvec3(bvec4(bvec3(_GLF_IDENTITY(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (bool(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat3(injectionSwitch, 1.0, 1.0, 0.0, 0.0, 1.0, round(length(normalize(1.0))), 0.0), (mat3(injectionSwitch, 1.0, 1.0, 0.0, 0.0, 1.0, round(length(normalize(1.0))), 0.0)) + mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)))).y)))))), false, true), false)))), (bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bool(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > injectionSwitch.y))), ! (! (bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), false, true), bvec3(bvec4(bvec3(_GLF_IDENTITY(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (bool(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat3(injectionSwitch, 1.0, 1.0, 0.0, 0.0, 1.0, round(length(normalize(1.0))), 0.0), (mat3(injectionSwitch, 1.0, 1.0, 0.0, 0.0, 1.0, round(length(normalize(1.0))), 0.0)) + mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)))).y)))))), false, true), false))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bool(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > injectionSwitch.y))), ! (! (bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), false, true), bvec3(bvec4(bvec3(_GLF_IDENTITY(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (bool(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat3(injectionSwitch, 1.0, 1.0, 0.0, 0.0, 1.0, round(length(normalize(1.0))), 0.0), (mat3(injectionSwitch, 1.0, 1.0, 0.0, 0.0, 1.0, round(length(normalize(1.0))), 0.0)) + mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, _GLF_IDENTITY(float(float(0.0)), (float(float(0.0))) + 0.0)))))).y)))))), false, true), false)))), (bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bool(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[_GLF_IDENTITY(0, max(0, 0))], injectionSwitch[1])).x > injectionSwitch.y))), ! (! (bool(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y)))))))))), false, true), bvec3(bvec4(bvec3(_GLF_IDENTITY(bool(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(vec2(injectionSwitch))).y))), ! (! (bool(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat3(injectionSwitch, 1.0, 1.0, 0.0, 0.0, 1.0, round(length(normalize(1.0))), 0.0), (_GLF_IDENTITY(mat3(injectionSwitch, 1.0, 1.0, 0.0, 0.0, 1.0, round(length(normalize(1.0))), 0.0), mat3(mat3x4(mat3(injectionSwitch, 1.0, 1.0, 0.0, 0.0, 1.0, round(length(normalize(1.0))), 0.0))))) + mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)))).y)))))), false, true), false))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && true), _GLF_IDENTITY(true && (bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y))))), false || (bool(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y))))))), ! (! (bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), false, true), bvec3(bvec4(bvec3(_GLF_IDENTITY(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), false, true), false))))), (_GLF_IDENTITY(true && (bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bool(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), true && (! (injectionSwitch.x > injectionSwitch.y)))))))), ! (! (bool(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, false))))))), false, true), bvec3(bvec4(bvec3(_GLF_IDENTITY(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! _GLF_IDENTITY((! (bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), false || ((! (bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), false, true), false))))), (true && (bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), false, true), bvec3(bvec4(bvec3(_GLF_IDENTITY(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), false, true), false)))))) || false)) || false))) && _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, true && (injectionSwitch.x < injectionSwitch.y))))))))))))), ! (! ((_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)) ? _GLF_FUZZED(_GLF_IDENTITY(-1.2, (-1.2) + sqrt(0.0))) : _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)))), (_GLF_IDENTITY(false, true && (false)) ? _GLF_FUZZED(_GLF_IDENTITY(-1.2, (-1.2) + sqrt(0.0))) : _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))))) / 1.0)))), ((_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)) ? _GLF_FUZZED(_GLF_IDENTITY(-1.2, (-1.2) + sqrt(0.0))) : _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)))), (_GLF_IDENTITY(false, true && (false)) ? _GLF_FUZZED(_GLF_IDENTITY(-1.2, (-1.2) + sqrt(0.0))) : _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))))) / 1.0))))) || false)), bool(bool(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y))))), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true))))))))), _GLF_IDENTITY(_GLF_IDENTITY(true && (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), ! (! (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y)))), bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))), true && (_GLF_IDENTITY(true && (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), ! (! (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bool(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0)) + 0.0), (injectionSwitch.y) / 1.0)))))))))))), (true && (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bool(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + 0.0), _GLF_IDENTITY(injectionSwitch.x, float(mat4x3(injectionSwitch.x, 1.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, 0.0, 0.0, 1.0)), dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, 0.0, 0.0, 1.0))), 1.0, 1.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, 0.0, 0.0, 1.0)), dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, 0.0, 0.0, 1.0))), 1.0, 1.0, 0.0, 0.0, 0.0, 1.0))))) > injectionSwitch.y)))))), _GLF_IDENTITY(! (! (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, true && (false))) || false), (injectionSwitch.x > injectionSwitch.y)), bool(bool(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0))))))))), (_GLF_IDENTITY(! (! _GLF_IDENTITY((_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bool(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0)))))))), true && ((_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bool(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0))))))))))), true && (! (! (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0) > injectionSwitch.y)), bool(bool(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0)))))))))))) && true))))) || false))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(true && (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), ! (! (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y)))), bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))), true && (_GLF_IDENTITY(true && (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), ! (! (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bool(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0)) + 0.0), (injectionSwitch.y) / 1.0)))))))))))), (true && (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bool(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + 0.0), _GLF_IDENTITY(injectionSwitch.x, float(mat4x3(injectionSwitch.x, 1.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, 0.0, 0.0, 1.0)), dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, 0.0, 0.0, 1.0))), 1.0, 1.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, 0.0, 0.0, 1.0)), dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, 0.0, 0.0, 1.0))), 1.0, 1.0, 0.0, 0.0, 0.0, 1.0))))) > injectionSwitch.y)))))), _GLF_IDENTITY(! (! (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, true && (false))) || false), (injectionSwitch.x > injectionSwitch.y)), bool(bool(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0))))))))), (_GLF_IDENTITY(! (! _GLF_IDENTITY((_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bool(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0)))))))), true && ((_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bool(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0))))))))))), true && (! (! (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0) > injectionSwitch.y)), bool(bool(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0)))))))))))) && true))))) || false))), false || (_GLF_IDENTITY(_GLF_IDENTITY(true && (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), ! (! (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y)))), bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))), true && (_GLF_IDENTITY(true && (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), ! (! (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bool(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0)) + 0.0), (injectionSwitch.y) / 1.0)))))))))))), (true && (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bool(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + 0.0), _GLF_IDENTITY(injectionSwitch.x, float(mat4x3(injectionSwitch.x, 1.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, 0.0, 0.0, 1.0)), dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, 0.0, 0.0, 1.0))), 1.0, 1.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, 0.0, 0.0, 1.0)), dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, 0.0, 0.0, 1.0))), 1.0, 1.0, 0.0, 0.0, 0.0, 1.0))))) > injectionSwitch.y)))))), _GLF_IDENTITY(! (! (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, true && (false))) || false), (injectionSwitch.x > injectionSwitch.y)), bool(bool(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0))))))))), (_GLF_IDENTITY(! (! _GLF_IDENTITY((_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bool(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0)))))))), true && ((_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bool(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0))))))))))), true && (! (! (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0) > injectionSwitch.y)), bool(bool(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0)))))))))))) && true))))) || false))), (_GLF_IDENTITY(_GLF_IDENTITY(true && (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), ! (! (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y)))), bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))), ! (! (true && (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), ! (! (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y)))), bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))), (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), ! (! (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y)))), bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))), bool(bvec3(! (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), ! (! (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y)))), bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))), false, true)))) || false))))), true && (_GLF_IDENTITY(true && (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), ! (! (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y)), bool(bool(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0)) + 0.0), (injectionSwitch.y) / 1.0)))))))))))), _GLF_IDENTITY((true && (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)).x > injectionSwitch.y)), bool(bool(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + 0.0), _GLF_IDENTITY(injectionSwitch.x, float(mat4x3(injectionSwitch.x, 1.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, 0.0, 0.0, 1.0)), dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, 0.0, 0.0, 1.0))), 1.0, 1.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, 0.0, 0.0, 1.0)), dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, 0.0, 0.0, 1.0))), 1.0, 1.0, 0.0, 0.0, 0.0, 1.0))))) > injectionSwitch.y, false || (_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + 0.0), _GLF_IDENTITY(injectionSwitch.x, float(mat4x3(injectionSwitch.x, 1.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, 0.0, 0.0, 1.0)), dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, 0.0, 0.0, 1.0))), 1.0, 1.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(_GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, float(mat2x3(0.0, 0.0, 0.0, 1.0, 1.0, 1.0))), _GLF_IDENTITY(0.0, min(0.0, 0.0)))), 0.0, 0.0, 1.0)), dot(vec4(0.0, _GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, 0.0 + (0.0)), 0.0)), 0.0)), 0.0, 1.0), vec4(0.0, 0.0, 0.0, 1.0))), 1.0, 1.0, 0.0, 0.0, 0.0, 1.0))))) > injectionSwitch.y)))))))), _GLF_IDENTITY(! (! (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, true && (false))) || false), (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(bool(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0))))), bool(bool(bool(bool(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0)))))))))))), (_GLF_IDENTITY(! (! _GLF_IDENTITY((_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bool(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0)))))))), true && ((_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bool(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)))).y, (injectionSwitch.y) / 1.0))))))))))), true && (! (! (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0) > injectionSwitch.y)), bool(bool(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0))), ! (! (_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), bool(bvec2(_GLF_IDENTITY(false, ! (! (false))), false))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0))))))))))))))) && true))))), false || ((true && (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)).x > injectionSwitch.y)), bool(bool(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + 0.0), _GLF_IDENTITY(injectionSwitch.x, float(mat4x3(injectionSwitch.x, 1.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, 0.0, 0.0, 1.0)), dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, 0.0, 0.0, 1.0))), 1.0, 1.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, 0.0, 0.0, 1.0)), dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, 0.0, 0.0, 1.0))), 1.0, 1.0, 0.0, 0.0, 0.0, 1.0))))) > injectionSwitch.y, false || (_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + 0.0), _GLF_IDENTITY(injectionSwitch.x, float(mat4x3(injectionSwitch.x, 1.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, 0.0, 0.0, 1.0)), dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, 0.0, 0.0, 1.0))), 1.0, 1.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(_GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, float(mat2x3(0.0, 0.0, 0.0, 1.0, 1.0, 1.0))), _GLF_IDENTITY(0.0, min(0.0, 0.0)))), 0.0, 0.0, 1.0)), dot(vec4(0.0, _GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, 0.0 + (0.0)), 0.0)), 0.0)), 0.0, 1.0), vec4(0.0, 0.0, 0.0, 1.0))), 1.0, 1.0, 0.0, 0.0, 0.0, 1.0))))) > injectionSwitch.y)))))))), _GLF_IDENTITY(! (! (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, true && (false))) || false), (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(bool(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0))))), bool(bool(bool(bool(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0)))))))))))), (_GLF_IDENTITY(! (! _GLF_IDENTITY((_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bool(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0)))))))), true && ((_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bool(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)))).y, (injectionSwitch.y) / 1.0))))))))))), true && (! (! (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0) > injectionSwitch.y)), bool(bool(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0))), ! (! (_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), bool(bvec2(_GLF_IDENTITY(false, ! (! (false))), false))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0))))))))))))))) && true))))))) || false)))) && true)))))))) && true))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      return;
     barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) || false)))))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec3(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, true)))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), ((injectionSwitch) * mat2(1.0)) / sqrt(vec2(1.0, 1.0)))).x) * round(length(normalize(_GLF_IDENTITY(1.0, float(_GLF_IDENTITY(mat2x3(1.0, _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(3.8)), bool(false))), 0.0, 1.0, 0.0, 1.0), (true ? mat2x3(1.0, 0.0, 0.0, 1.0, 0.0, 1.0) : _GLF_FUZZED(mat2x3(-365.732, -9.9, 90.45, -43.63, -2.4, -7824.7980)))))))))) > injectionSwitch.y), false || ((_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), ((injectionSwitch) * mat2(1.0)) / sqrt(vec2(1.0, 1.0)))).x) * round(length(normalize(_GLF_IDENTITY(1.0, float(_GLF_IDENTITY(mat2x3(1.0, _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(3.8)), bool(false))), 0.0, 1.0, 0.0, 1.0), (true ? mat2x3(1.0, 0.0, 0.0, 1.0, 0.0, 1.0) : _GLF_FUZZED(mat2x3(-365.732, -9.9, 90.45, -43.63, -2.4, -7824.7980)))))))))) > injectionSwitch.y))))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     return;
     if(_GLF_DEAD(false))
      barrier();
    }
  }
 else
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   atomicStore(buf[next_virtual_gid], uint(_GLF_IDENTITY(read_1 + 1 == read_2, ! (! (read_1 + _GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(-73645))) == read_2)))) + 1, _GLF_IDENTITY(_GLF_IDENTITY(4, ~ (_GLF_IDENTITY(_GLF_IDENTITY(~ (4), (~ (4)) >> 0), (~ (4)) | int(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x))))), _GLF_IDENTITY(_GLF_IDENTITY(max(_GLF_IDENTITY(4, ~ (_GLF_IDENTITY(~ (4), (~ (4)) | int(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x))))), _GLF_IDENTITY(_GLF_IDENTITY(4, ~ (_GLF_IDENTITY(~ (4), (~ (4)) | int(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x))))), (_GLF_IDENTITY(4, ~ (_GLF_IDENTITY(~ (4), (~ (4)) | int(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x)))))) >> 0)), (_GLF_IDENTITY(max(_GLF_IDENTITY(4, ~ (_GLF_IDENTITY(~ (4), (~ (4)) | int(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x))))), _GLF_IDENTITY(_GLF_IDENTITY(4, ~ (_GLF_IDENTITY(~ (4), (~ (4)) | int(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x))))), (_GLF_IDENTITY(4, ~ (_GLF_IDENTITY(~ (4), (~ (4)) | int(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x)))))) >> 0)), min(max(_GLF_IDENTITY(4, ~ (_GLF_IDENTITY(~ (4), (~ (4)) | int(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x))))), _GLF_IDENTITY(_GLF_IDENTITY(4, ~ (_GLF_IDENTITY(~ (4), (~ (4)) | int(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x))))), (_GLF_IDENTITY(4, ~ (_GLF_IDENTITY(~ (4), (~ (4)) | int(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x)))))) >> 0)), max(_GLF_IDENTITY(4, ~ (_GLF_IDENTITY(~ (4), (~ (4)) | int(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x))))), _GLF_IDENTITY(_GLF_IDENTITY(4, ~ (_GLF_IDENTITY(~ (4), (~ (4)) | int(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x))))), (_GLF_IDENTITY(4, ~ (_GLF_IDENTITY(~ (4), (~ (4)) | int(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x)))))) >> 0))))) | (_GLF_IDENTITY(max(_GLF_IDENTITY(4, ~ (_GLF_IDENTITY(~ (4), (~ (4)) | int(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x))))), _GLF_IDENTITY(_GLF_IDENTITY(4, ~ (_GLF_IDENTITY(~ (4), (~ (4)) | int(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x))))), (_GLF_IDENTITY(4, ~ (_GLF_IDENTITY(~ (4), (~ (4)) | int(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x)))))) >> 0)), clamp(max(_GLF_IDENTITY(4, ~ (_GLF_IDENTITY(~ (4), (~ (4)) | int(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x))))), _GLF_IDENTITY(_GLF_IDENTITY(4, ~ (_GLF_IDENTITY(~ (4), (~ (4)) | int(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x))))), (_GLF_IDENTITY(4, ~ (_GLF_IDENTITY(~ (4), (~ (4)) | int(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x)))))) >> 0)), _GLF_IDENTITY(max(_GLF_IDENTITY(4, ~ (_GLF_IDENTITY(~ (4), (~ (4)) | int(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x))))), _GLF_IDENTITY(_GLF_IDENTITY(4, ~ (_GLF_IDENTITY(~ (4), (~ (4)) | int(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x))))), (_GLF_IDENTITY(4, ~ (_GLF_IDENTITY(~ (4), (~ (4)) | int(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x)))))) >> 0)), ~ (~ (max(_GLF_IDENTITY(4, ~ (_GLF_IDENTITY(~ (4), (~ (4)) | int(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x))))), _GLF_IDENTITY(_GLF_IDENTITY(4, ~ (_GLF_IDENTITY(~ (4), (~ (4)) | int(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x))))), (_GLF_IDENTITY(4, ~ (_GLF_IDENTITY(~ (4), (~ (4)) | int(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x)))))) >> 0))))), max(_GLF_IDENTITY(4, ~ (_GLF_IDENTITY(~ (4), (~ (4)) | int(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x))))), _GLF_IDENTITY(_GLF_IDENTITY(4, ~ (_GLF_IDENTITY(~ (4), (~ (4)) | int(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x))))), (_GLF_IDENTITY(4, ~ (_GLF_IDENTITY(~ (4), (~ (4)) | int(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x)))))) >> 0)))))), (_GLF_IDENTITY(_GLF_IDENTITY(max(_GLF_IDENTITY(4, ~ (_GLF_IDENTITY(~ (4), (~ (4)) | int(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x))))), _GLF_IDENTITY(_GLF_IDENTITY(4, ~ (_GLF_IDENTITY(~ (4), (~ (4)) | int(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x))))), (_GLF_IDENTITY(4, ~ (_GLF_IDENTITY(~ (4), (~ (4)) | int(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x)))))) >> 0)), (_GLF_IDENTITY(max(_GLF_IDENTITY(4, ~ (_GLF_IDENTITY(~ (4), (~ (4)) | int(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x))))), _GLF_IDENTITY(_GLF_IDENTITY(4, ~ (_GLF_IDENTITY(~ (4), (~ (4)) | int(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x))))), (_GLF_IDENTITY(4, ~ (_GLF_IDENTITY(~ (4), (~ (4)) | int(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x)))))) >> 0)), min(max(_GLF_IDENTITY(4, ~ (_GLF_IDENTITY(~ (4), (~ (4)) | int(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x))))), _GLF_IDENTITY(_GLF_IDENTITY(4, ~ (_GLF_IDENTITY(~ (4), (~ (4)) | int(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x))))), (_GLF_IDENTITY(4, ~ (_GLF_IDENTITY(~ (4), (~ (4)) | int(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x)))))) >> 0)), max(_GLF_IDENTITY(4, ~ (_GLF_IDENTITY(~ (4), (~ (4)) | int(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x))))), _GLF_IDENTITY(_GLF_IDENTITY(4, ~ (_GLF_IDENTITY(~ (4), (~ (4)) | int(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x))))), (_GLF_IDENTITY(4, ~ (_GLF_IDENTITY(~ (4), (~ (4)) | int(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x)))))) >> 0))))) | (_GLF_IDENTITY(max(_GLF_IDENTITY(4, ~ (_GLF_IDENTITY(~ (4), (~ (4)) | int(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x))))), _GLF_IDENTITY(_GLF_IDENTITY(4, ~ (_GLF_IDENTITY(~ (4), (~ (4)) | int(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x))))), (_GLF_IDENTITY(4, ~ (_GLF_IDENTITY(~ (4), (~ (4)) | int(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x)))))) >> 0)), clamp(max(_GLF_IDENTITY(4, ~ (_GLF_IDENTITY(~ (4), (~ (4)) | int(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x))))), _GLF_IDENTITY(_GLF_IDENTITY(4, ~ (_GLF_IDENTITY(~ (4), (~ (4)) | int(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x))))), (_GLF_IDENTITY(4, ~ (_GLF_IDENTITY(~ (4), (~ (4)) | int(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x)))))) >> 0)), _GLF_IDENTITY(max(_GLF_IDENTITY(4, ~ (_GLF_IDENTITY(~ (4), (~ (4)) | int(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x))))), _GLF_IDENTITY(_GLF_IDENTITY(4, ~ (_GLF_IDENTITY(~ (4), (~ (4)) | int(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x))))), (_GLF_IDENTITY(4, ~ (_GLF_IDENTITY(~ (4), (~ (4)) | int(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x)))))) >> 0)), ~ (~ (max(_GLF_IDENTITY(4, ~ (_GLF_IDENTITY(~ (4), (~ (4)) | int(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x))))), _GLF_IDENTITY(_GLF_IDENTITY(4, ~ (_GLF_IDENTITY(~ (4), (~ (4)) | int(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x))))), (_GLF_IDENTITY(4, ~ (_GLF_IDENTITY(~ (4), (~ (4)) | int(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x)))))) >> 0))))), max(_GLF_IDENTITY(4, ~ (_GLF_IDENTITY(~ (4), (~ (4)) | int(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x))))), _GLF_IDENTITY(_GLF_IDENTITY(4, ~ (_GLF_IDENTITY(~ (4), (~ (4)) | int(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x))))), (_GLF_IDENTITY(4, ~ (_GLF_IDENTITY(~ (4), (~ (4)) | int(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x)))))) >> 0)))))), ~ (~ (_GLF_IDENTITY(max(_GLF_IDENTITY(4, ~ (_GLF_IDENTITY(~ (4), (~ (4)) | int(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x))))), _GLF_IDENTITY(_GLF_IDENTITY(4, ~ (_GLF_IDENTITY(~ (4), (~ (4)) | int(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x))))), (_GLF_IDENTITY(4, ~ (_GLF_IDENTITY(~ (4), (~ (4)) | int(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x)))))) >> 0)), (_GLF_IDENTITY(max(_GLF_IDENTITY(4, ~ (_GLF_IDENTITY(~ (4), (~ (4)) | int(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x))))), _GLF_IDENTITY(_GLF_IDENTITY(4, ~ (_GLF_IDENTITY(~ (4), (~ (4)) | int(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x))))), (_GLF_IDENTITY(4, ~ (_GLF_IDENTITY(~ (4), (~ (4)) | int(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x)))))) >> 0)), min(max(_GLF_IDENTITY(4, ~ (_GLF_IDENTITY(~ (4), (~ (4)) | int(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x))))), _GLF_IDENTITY(_GLF_IDENTITY(4, ~ (_GLF_IDENTITY(~ (4), (~ (4)) | int(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x))))), (_GLF_IDENTITY(4, ~ (_GLF_IDENTITY(~ (4), (~ (4)) | int(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x)))))) >> 0)), max(_GLF_IDENTITY(4, ~ (_GLF_IDENTITY(~ (4), (~ (4)) | int(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x))))), _GLF_IDENTITY(_GLF_IDENTITY(4, ~ (_GLF_IDENTITY(~ (4), (~ (4)) | int(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x))))), (_GLF_IDENTITY(4, ~ (_GLF_IDENTITY(~ (4), (~ (4)) | int(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x)))))) >> 0))))) | (_GLF_IDENTITY(max(_GLF_IDENTITY(4, ~ (_GLF_IDENTITY(~ (4), (~ (4)) | int(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x))))), _GLF_IDENTITY(_GLF_IDENTITY(4, ~ (_GLF_IDENTITY(~ (4), (~ (4)) | int(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x))))), (_GLF_IDENTITY(4, ~ (_GLF_IDENTITY(~ (4), (~ (4)) | int(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x)))))) >> 0)), clamp(max(_GLF_IDENTITY(4, ~ (_GLF_IDENTITY(~ (4), (~ (4)) | int(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x))))), _GLF_IDENTITY(_GLF_IDENTITY(4, ~ (_GLF_IDENTITY(~ (4), (~ (4)) | int(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x))))), (_GLF_IDENTITY(4, ~ (_GLF_IDENTITY(~ (4), (~ (4)) | int(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x)))))) >> 0)), _GLF_IDENTITY(max(_GLF_IDENTITY(4, ~ (_GLF_IDENTITY(~ (4), (~ (4)) | int(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x))))), _GLF_IDENTITY(_GLF_IDENTITY(4, ~ (_GLF_IDENTITY(~ (4), (~ (4)) | int(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x))))), (_GLF_IDENTITY(4, ~ (_GLF_IDENTITY(~ (4), (~ (4)) | int(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x)))))) >> 0)), ~ (~ (max(_GLF_IDENTITY(4, ~ (_GLF_IDENTITY(~ (4), (~ (4)) | int(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x))))), _GLF_IDENTITY(_GLF_IDENTITY(4, ~ (_GLF_IDENTITY(~ (4), (~ (4)) | int(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x))))), (_GLF_IDENTITY(4, ~ (_GLF_IDENTITY(~ (4), (~ (4)) | int(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x)))))) >> 0))))), max(_GLF_IDENTITY(4, ~ (_GLF_IDENTITY(~ (4), (~ (4)) | int(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x))))), _GLF_IDENTITY(_GLF_IDENTITY(4, ~ (_GLF_IDENTITY(~ (4), (~ (4)) | int(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x))))), (_GLF_IDENTITY(4, ~ (_GLF_IDENTITY(~ (4), (~ (4)) | int(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x)))))) >> 0)))))))))) ^ int(_GLF_ZERO(0.0, injectionSwitch.x)))), 64, 4);
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      return;
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec4(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), false, false, true)))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     barrier();
    }
  }
}
