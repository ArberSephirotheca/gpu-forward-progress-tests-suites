#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 uvec3 GLF_merged3_0_1_14_1_1_12_2_1_14workgroup_baseworkgroup_idworkgroup_size;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 uvec3 GLF_merged3_0_1_13_1_1_11_2_1_11num_workgroupsubgroup_idvirtual_gid;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 uvec2 GLF_merged2_0_1_6_1_1_14read_1workgroup_size;
 uvec4 GLF_merged4_0_1_6_1_1_6_2_1_17_3_1_11read_1read_2subgroup_local_idvirtual_gid;
 uint subgroup_id = gl_SubgroupID;
 GLF_merged3_0_1_13_1_1_11_2_1_11num_workgroupsubgroup_idvirtual_gid.y = subgroup_id;
 do
  {
   do
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      continue;
    }
   while(_GLF_WRAPPED_LOOP(false));
  }
 while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)))) > injectionSwitch.y))));
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_DEAD(false))
  return;
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))
  {
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     return;
    }
   else
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, true, true)))))
      return;
    }
  }
 for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != _GLF_IDENTITY(int(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), min(_GLF_IDENTITY(_GLF_ONE(_GLF_IDENTITY(1.0, _GLF_IDENTITY(float(_GLF_IDENTITY(_GLF_IDENTITY(vec3(1.0, 0.0, 1.0), mat3(1.0) * (vec3(1.0, 0.0, 1.0))), _GLF_IDENTITY(mat3(_GLF_ONE(1.0, injectionSwitch.y)) * (_GLF_IDENTITY(vec3(1.0, 0.0, 1.0), mat3(1.0) * (vec3(1.0, 0.0, _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)))))), (mat3(_GLF_ONE(1.0, injectionSwitch.y)) * (_GLF_IDENTITY(_GLF_IDENTITY(vec3(1.0, 0.0, 1.0), mat3(1.0) * (vec3(1.0, 0.0, 1.0))), max(_GLF_IDENTITY(vec3(1.0, 0.0, 1.0), mat3(1.0) * (vec3(1.0, 0.0, 1.0))), _GLF_IDENTITY(vec3(1.0, 0.0, 1.0), mat3(1.0) * (vec3(1.0, 0.0, 1.0))))))) / sqrt(vec3(1.0, 1.0, 1.0))))), max(float(_GLF_IDENTITY(_GLF_IDENTITY(vec3(1.0, 0.0, 1.0), mat3(1.0) * (vec3(1.0, 0.0, 1.0))), _GLF_IDENTITY(mat3(_GLF_ONE(1.0, injectionSwitch.y)) * (_GLF_IDENTITY(vec3(1.0, 0.0, 1.0), mat3(1.0) * (vec3(1.0, 0.0, _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)))))), (mat3(_GLF_ONE(1.0, injectionSwitch.y)) * (_GLF_IDENTITY(_GLF_IDENTITY(vec3(1.0, 0.0, 1.0), mat3(1.0) * (vec3(1.0, 0.0, 1.0))), max(_GLF_IDENTITY(vec3(1.0, 0.0, 1.0), mat3(1.0) * (vec3(1.0, 0.0, 1.0))), _GLF_IDENTITY(vec3(1.0, 0.0, 1.0), mat3(1.0) * (vec3(1.0, 0.0, 1.0))))))) / sqrt(vec3(1.0, 1.0, 1.0))))), float(_GLF_IDENTITY(_GLF_IDENTITY(vec3(1.0, 0.0, 1.0), mat3(1.0) * (vec3(1.0, 0.0, 1.0))), _GLF_IDENTITY(mat3(_GLF_ONE(1.0, injectionSwitch.y)) * (_GLF_IDENTITY(vec3(1.0, 0.0, 1.0), mat3(1.0) * (vec3(1.0, 0.0, _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)))))), (mat3(_GLF_ONE(1.0, injectionSwitch.y)) * (_GLF_IDENTITY(_GLF_IDENTITY(vec3(1.0, 0.0, 1.0), mat3(1.0) * (vec3(1.0, 0.0, 1.0))), max(_GLF_IDENTITY(vec3(1.0, 0.0, 1.0), mat3(1.0) * (vec3(1.0, 0.0, 1.0))), _GLF_IDENTITY(vec3(1.0, 0.0, 1.0), mat3(1.0) * (vec3(1.0, 0.0, 1.0))))))) / sqrt(vec3(1.0, 1.0, 1.0)))))))), _GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)), _GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)), _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))).y), (false ? _GLF_FUZZED(_GLF_IDENTITY(97.84, min(97.84, 97.84))) : _GLF_ONE(1.0, injectionSwitch.y))), _GLF_ONE(1.0, injectionSwitch.y)))), (true ? int(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), min(_GLF_IDENTITY(_GLF_ONE(_GLF_IDENTITY(_GLF_IDENTITY(1.0, float(_GLF_IDENTITY(_GLF_IDENTITY(vec3(1.0, 0.0, 1.0), min(_GLF_IDENTITY(vec3(1.0, 0.0, 1.0), vec3(mat3x2(vec3(1.0, 0.0, 1.0), 1.0, 0.0, 0.0))), vec3(1.0, 0.0, 1.0))), mat3(1.0) * (vec3(1.0, 0.0, 1.0))))), clamp(_GLF_IDENTITY(1.0, float(_GLF_IDENTITY(vec3(1.0, 0.0, 1.0), mat3(1.0) * (vec3(1.0, 0.0, 1.0))))), _GLF_IDENTITY(1.0, float(_GLF_IDENTITY(vec3(1.0, 0.0, _GLF_IDENTITY(1.0, (1.0) - 0.0)), mat3(1.0) * (vec3(1.0, 0.0, 1.0))))), _GLF_IDENTITY(1.0, float(_GLF_IDENTITY(vec3(1.0, 0.0, 1.0), mat3(1.0) * (vec3(1.0, 0.0, 1.0))))))), injectionSwitch.y), (false ? _GLF_FUZZED(_GLF_IDENTITY(_GLF_IDENTITY(97.84, mix(float(97.84), float(_GLF_FUZZED(6.2)), bool(false))), min(97.84, 97.84))) : _GLF_ONE(1.0, injectionSwitch.y))), _GLF_ONE(1.0, injectionSwitch.y)))) : _GLF_FUZZED(sign(_injected_loop_counter))))); _injected_loop_counter ++)
  {
   do
    {
     GLF_merged4_0_1_6_1_1_6_2_1_17_3_1_11read_1read_2subgroup_local_idvirtual_gid.z = subgroup_local_id;
    }
   while(_GLF_WRAPPED_LOOP(false));
  }
 if(_GLF_WRAPPED_IF_TRUE(true))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), _GLF_IDENTITY((! (false)), ((! (false))) && true) && true)))))
      return;
     for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
      {
       do
        {
         return;
        }
       while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, true && (false))));
      }
    }
   if(_GLF_DEAD(false))
    return;
  }
 else
  {
  }
 if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(-1.4)), bool(false)))))))))
    return;
  }
 else
  {
   do
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bool(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec2((injectionSwitch.x > injectionSwitch.y), false))))))), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false)))
      {
      }
     else
      {
       if(_GLF_DEAD(false))
        break;
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         continue;
        }
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
    }
   while(_GLF_WRAPPED_LOOP(false));
  }
 if(_GLF_DEAD(false))
  return;
 uint num_workgroup = gl_NumWorkGroups.x;
 if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_WRAPPED_IF_TRUE(true))
        {
         return;
        }
       else
        {
        }
      }
     for(int _injected_loop_counter = int(_GLF_ONE(1.0, injectionSwitch.y)); _GLF_WRAPPED_LOOP(_injected_loop_counter != _GLF_IDENTITY(0, ~ (~ (0)))); _injected_loop_counter --)
      {
       return;
      }
    }
  }
 else
  {
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), ! (! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), bool(bvec2(! (injectionSwitch.x > injectionSwitch.y), false))))))))))))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
  {
   GLF_merged3_0_1_13_1_1_11_2_1_11num_workgroupsubgroup_idvirtual_gid.x = num_workgroup;
  }
 else
  {
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  return;
 uint workgroup_size = _GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) ^ uvec3(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))).x;
 for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < int(_GLF_ONE(1.0, injectionSwitch.y))); _injected_loop_counter ++)
  {
   GLF_merged3_0_1_14_1_1_12_2_1_14workgroup_baseworkgroup_idworkgroup_size.z = workgroup_size;
  }
 if(_GLF_DEAD(false))
  return;
 for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    continue;
   if(_GLF_DEAD(false))
    continue;
   GLF_merged2_0_1_6_1_1_14read_1workgroup_size.y = GLF_merged3_0_1_14_1_1_12_2_1_14workgroup_baseworkgroup_idworkgroup_size.z;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      continue;
     continue;
    }
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   return;
   for(int _injected_loop_counter = ((1 << _GLF_IDENTITY(int(5), int(5))) >> _GLF_IDENTITY(int(5), int(5))); _GLF_WRAPPED_LOOP(_injected_loop_counter > (1 ^ 1)); _injected_loop_counter --)
    {
     do
      {
       do
        {
         if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-6654.5743)), float(injectionSwitch.y), bool(true))))))))))))
          {
           if(_GLF_WRAPPED_IF_TRUE(true))
            {
             if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))) || false)))
              {
               return;
              }
             else
              {
              }
            }
           else
            {
            }
          }
        }
       while(_GLF_WRAPPED_LOOP(false));
      }
     while(_GLF_WRAPPED_LOOP(false));
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      continue;
    }
  }
 uint workgroup_id = gl_WorkGroupID.x;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(_GLF_IDENTITY(mat4x3(injectionSwitch.y, 1.0, sin(sin(0.0)), 1.0, 0.0, 0.0, 0.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 1.0, 0.0), mat4x3(mat4x3(mat4x3(injectionSwitch.y, 1.0, sin(sin(0.0)), 1.0, 0.0, 0.0, 0.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 1.0, 0.0))))))))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 do
  {
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
    }
   else
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! _GLF_IDENTITY((false), (_GLF_IDENTITY((false), bool(bvec3(_GLF_IDENTITY((false), bool(bvec4((false), true, _GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(false, ! (! (false))))), bool(bool(bool(bool(_GLF_IDENTITY(false, ! (! (false))))))))))), false))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)))) && true), (! (false)) && true))), bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! _GLF_IDENTITY((false), (_GLF_IDENTITY((false), bool(bvec3(_GLF_IDENTITY((false), bool(bvec4((false), true, _GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(false, ! (! (false))))), bool(bool(bool(bool(_GLF_IDENTITY(false, ! (! (false))))))))))), false))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)))) && true), (! (false)) && true))), ! (! (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! _GLF_IDENTITY((false), (_GLF_IDENTITY((false), bool(bvec3(_GLF_IDENTITY((false), bool(bvec4((false), true, _GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(false, ! (! (false))))), bool(bool(bool(bool(_GLF_IDENTITY(false, ! (! (false))))))))))), false))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)))) && true), (! (false)) && true)))))), false)))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(_GLF_IDENTITY(vec2(490.160, -1223.7217), mix(vec2(_GLF_FUZZED(6684.2045), (vec2(490.160, -1223.7217))[1]), vec2((vec2(490.160, -1223.7217))[0], _GLF_FUZZED(3344.1917)), bvec2(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) : _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))).y))))
        break;
       break;
      }
     GLF_merged3_0_1_14_1_1_12_2_1_14workgroup_baseworkgroup_idworkgroup_size.y = workgroup_id;
    }
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
    }
   else
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false))))), ! (_GLF_IDENTITY(! (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false)))))), (! (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y) || false, ! (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y) || false, ! (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y) || false, ! (! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(-6801.1641))), _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))))) || false)))))))))))))))) || false)))))
      return;
    }
  }
 while(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(false), (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(false), (_GLF_WRAPPED_LOOP(false)) || false)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))));
 uint workgroup_base = GLF_merged2_0_1_6_1_1_14read_1workgroup_size.y * GLF_merged3_0_1_14_1_1_12_2_1_14workgroup_baseworkgroup_idworkgroup_size.y;
 if(_GLF_DEAD(false))
  {
   if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
    {
    }
   else
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_WRAPPED_IF_FALSE(false))
        {
        }
       else
        {
         return;
        }
      }
    }
   return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(_GLF_IDENTITY(bool(! (false)), bool(bvec2(bool(! (false)), false)))))))))
  return;
 if(_GLF_WRAPPED_IF_TRUE(true))
  {
   if(_GLF_DEAD(false))
    return;
  }
 else
  {
  }
 for(int _injected_loop_counter = int(_GLF_ONE(1.0, injectionSwitch.y)); _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter > 0, (_injected_loop_counter > 0) || false)); _injected_loop_counter --)
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   _GLF_IDENTITY(GLF_merged3_0_1_14_1_1_12_2_1_14workgroup_baseworkgroup_idworkgroup_size.x = workgroup_base, (GLF_merged3_0_1_14_1_1_12_2_1_14workgroup_baseworkgroup_idworkgroup_size.x = workgroup_base) >> 0u);
  }
 if(_GLF_DEAD(false))
  {
   for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
    {
     return;
    }
  }
 uint virtual_gid = _GLF_IDENTITY(_GLF_IDENTITY(GLF_merged3_0_1_14_1_1_12_2_1_14workgroup_baseworkgroup_idworkgroup_size.x + GLF_merged3_0_1_13_1_1_11_2_1_11num_workgroupsubgroup_idvirtual_gid.y * subgroup_size + _GLF_IDENTITY(GLF_merged4_0_1_6_1_1_6_2_1_17_3_1_11read_1read_2subgroup_local_idvirtual_gid, (GLF_merged4_0_1_6_1_1_6_2_1_17_3_1_11read_1read_2subgroup_local_idvirtual_gid) | (GLF_merged4_0_1_6_1_1_6_2_1_17_3_1_11read_1read_2subgroup_local_idvirtual_gid)).z, (false ? _GLF_FUZZED(uaddCarry(workgroup_id, subgroup_id, subgroup_size)) : GLF_merged3_0_1_14_1_1_12_2_1_14workgroup_baseworkgroup_idworkgroup_size.x + GLF_merged3_0_1_13_1_1_11_2_1_11num_workgroupsubgroup_idvirtual_gid.y * subgroup_size + _GLF_IDENTITY(GLF_merged4_0_1_6_1_1_6_2_1_17_3_1_11read_1read_2subgroup_local_idvirtual_gid, (GLF_merged4_0_1_6_1_1_6_2_1_17_3_1_11read_1read_2subgroup_local_idvirtual_gid) | (GLF_merged4_0_1_6_1_1_6_2_1_17_3_1_11read_1read_2subgroup_local_idvirtual_gid)).z)), 0u | (_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged3_0_1_14_1_1_12_2_1_14workgroup_baseworkgroup_idworkgroup_size, (GLF_merged3_0_1_14_1_1_12_2_1_14workgroup_baseworkgroup_idworkgroup_size) | (uvec3(0u, 0u, 0u) | uvec3(0u, 0u, 0u))).x, clamp(_GLF_IDENTITY(GLF_merged3_0_1_14_1_1_12_2_1_14workgroup_baseworkgroup_idworkgroup_size, (GLF_merged3_0_1_14_1_1_12_2_1_14workgroup_baseworkgroup_idworkgroup_size) | (uvec3(0u, 0u, 0u) | uvec3(0u, 0u, 0u))).x, _GLF_IDENTITY(_GLF_IDENTITY(GLF_merged3_0_1_14_1_1_12_2_1_14workgroup_baseworkgroup_idworkgroup_size, (GLF_merged3_0_1_14_1_1_12_2_1_14workgroup_baseworkgroup_idworkgroup_size) | (uvec3(0u, 0u, 0u) | uvec3(0u, 0u, 0u))).x, uint(_GLF_ONE(1.0, injectionSwitch.y)) * (_GLF_IDENTITY(GLF_merged3_0_1_14_1_1_12_2_1_14workgroup_baseworkgroup_idworkgroup_size, (GLF_merged3_0_1_14_1_1_12_2_1_14workgroup_baseworkgroup_idworkgroup_size) | (uvec3(0u, 0u, 0u) | uvec3(0u, 0u, 0u))).x)), _GLF_IDENTITY(GLF_merged3_0_1_14_1_1_12_2_1_14workgroup_baseworkgroup_idworkgroup_size, (GLF_merged3_0_1_14_1_1_12_2_1_14workgroup_baseworkgroup_idworkgroup_size) | (uvec3(0u, 0u, 0u) | uvec3(0u, 0u, 0u))).x)) + GLF_merged3_0_1_13_1_1_11_2_1_11num_workgroupsubgroup_idvirtual_gid.y * subgroup_size + _GLF_IDENTITY(GLF_merged4_0_1_6_1_1_6_2_1_17_3_1_11read_1read_2subgroup_local_idvirtual_gid, (GLF_merged4_0_1_6_1_1_6_2_1_17_3_1_11read_1read_2subgroup_local_idvirtual_gid) | (GLF_merged4_0_1_6_1_1_6_2_1_17_3_1_11read_1read_2subgroup_local_idvirtual_gid)).z));
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
    {
     return;
     if(_GLF_DEAD(false))
      break;
    }
  }
 GLF_merged3_0_1_13_1_1_11_2_1_11num_workgroupsubgroup_idvirtual_gid.z = virtual_gid;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 GLF_merged4_0_1_6_1_1_6_2_1_17_3_1_11read_1read_2subgroup_local_idvirtual_gid.w = _GLF_IDENTITY(_GLF_IDENTITY(GLF_merged3_0_1_13_1_1_11_2_1_11num_workgroupsubgroup_idvirtual_gid.z, (_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), false || (! (true))))) ? GLF_merged3_0_1_13_1_1_11_2_1_11num_workgroupsubgroup_idvirtual_gid.z : _GLF_FUZZED(workgroup_base))), ~ (~ _GLF_IDENTITY((GLF_merged3_0_1_13_1_1_11_2_1_11num_workgroupsubgroup_idvirtual_gid.z), (true ? _GLF_IDENTITY((GLF_merged3_0_1_13_1_1_11_2_1_11num_workgroupsubgroup_idvirtual_gid.z), max((GLF_merged3_0_1_13_1_1_11_2_1_11num_workgroupsubgroup_idvirtual_gid.z), _GLF_IDENTITY((GLF_merged3_0_1_13_1_1_11_2_1_11num_workgroupsubgroup_idvirtual_gid.z), ~ (~ ((_GLF_IDENTITY(GLF_merged3_0_1_13_1_1_11_2_1_11num_workgroupsubgroup_idvirtual_gid.z, max(_GLF_IDENTITY(GLF_merged3_0_1_13_1_1_11_2_1_11num_workgroupsubgroup_idvirtual_gid.z, (GLF_merged3_0_1_13_1_1_11_2_1_11num_workgroupsubgroup_idvirtual_gid.z) | 0u), GLF_merged3_0_1_13_1_1_11_2_1_11num_workgroupsubgroup_idvirtual_gid.z)))))))) : _GLF_FUZZED(145722u)))));
 if(_GLF_WRAPPED_IF_FALSE(false))
  {
  }
 else
  {
   do
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))))
      return;
    }
   while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y))));
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 uint next_virtual_gid = GLF_merged3_0_1_14_1_1_12_2_1_14workgroup_baseworkgroup_idworkgroup_size.x + _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged3_0_1_13_1_1_11_2_1_11num_workgroupsubgroup_idvirtual_gid.y, (GLF_merged3_0_1_13_1_1_11_2_1_11num_workgroupsubgroup_idvirtual_gid.y) | (GLF_merged3_0_1_13_1_1_11_2_1_11num_workgroupsubgroup_idvirtual_gid.y)), min(_GLF_IDENTITY(GLF_merged3_0_1_13_1_1_11_2_1_11num_workgroupsubgroup_idvirtual_gid.y, (GLF_merged3_0_1_13_1_1_11_2_1_11num_workgroupsubgroup_idvirtual_gid.y) | (GLF_merged3_0_1_13_1_1_11_2_1_11num_workgroupsubgroup_idvirtual_gid.y)), _GLF_IDENTITY(GLF_merged3_0_1_13_1_1_11_2_1_11num_workgroupsubgroup_idvirtual_gid.y, (GLF_merged3_0_1_13_1_1_11_2_1_11num_workgroupsubgroup_idvirtual_gid.y) | (_GLF_IDENTITY(GLF_merged3_0_1_13_1_1_11_2_1_11num_workgroupsubgroup_idvirtual_gid.y, (GLF_merged3_0_1_13_1_1_11_2_1_11num_workgroupsubgroup_idvirtual_gid.y) * 1u))))), (_GLF_IDENTITY(GLF_merged3_0_1_13_1_1_11_2_1_11num_workgroupsubgroup_idvirtual_gid.y, (GLF_merged3_0_1_13_1_1_11_2_1_11num_workgroupsubgroup_idvirtual_gid.y) | (GLF_merged3_0_1_13_1_1_11_2_1_11num_workgroupsubgroup_idvirtual_gid.y))) | _GLF_IDENTITY((_GLF_IDENTITY(GLF_merged3_0_1_13_1_1_11_2_1_11num_workgroupsubgroup_idvirtual_gid.y, (_GLF_IDENTITY(GLF_merged3_0_1_13_1_1_11_2_1_11num_workgroupsubgroup_idvirtual_gid, uvec3(GLF_merged3_0_1_13_1_1_11_2_1_11num_workgroupsubgroup_idvirtual_gid[0], GLF_merged3_0_1_13_1_1_11_2_1_11num_workgroupsubgroup_idvirtual_gid[1], GLF_merged3_0_1_13_1_1_11_2_1_11num_workgroupsubgroup_idvirtual_gid[2])).y) | (GLF_merged3_0_1_13_1_1_11_2_1_11num_workgroupsubgroup_idvirtual_gid.y))), (_GLF_IDENTITY((_GLF_IDENTITY(GLF_merged3_0_1_13_1_1_11_2_1_11num_workgroupsubgroup_idvirtual_gid.y, (_GLF_IDENTITY(GLF_merged3_0_1_13_1_1_11_2_1_11num_workgroupsubgroup_idvirtual_gid, uvec3(GLF_merged3_0_1_13_1_1_11_2_1_11num_workgroupsubgroup_idvirtual_gid[0], GLF_merged3_0_1_13_1_1_11_2_1_11num_workgroupsubgroup_idvirtual_gid[1], GLF_merged3_0_1_13_1_1_11_2_1_11num_workgroupsubgroup_idvirtual_gid[2])).y) | (GLF_merged3_0_1_13_1_1_11_2_1_11num_workgroupsubgroup_idvirtual_gid.y))), max((_GLF_IDENTITY(GLF_merged3_0_1_13_1_1_11_2_1_11num_workgroupsubgroup_idvirtual_gid.y, (_GLF_IDENTITY(GLF_merged3_0_1_13_1_1_11_2_1_11num_workgroupsubgroup_idvirtual_gid, uvec3(GLF_merged3_0_1_13_1_1_11_2_1_11num_workgroupsubgroup_idvirtual_gid[0], GLF_merged3_0_1_13_1_1_11_2_1_11num_workgroupsubgroup_idvirtual_gid[1], GLF_merged3_0_1_13_1_1_11_2_1_11num_workgroupsubgroup_idvirtual_gid[2])).y) | (GLF_merged3_0_1_13_1_1_11_2_1_11num_workgroupsubgroup_idvirtual_gid.y))), (_GLF_IDENTITY(GLF_merged3_0_1_13_1_1_11_2_1_11num_workgroupsubgroup_idvirtual_gid.y, (_GLF_IDENTITY(GLF_merged3_0_1_13_1_1_11_2_1_11num_workgroupsubgroup_idvirtual_gid, uvec3(GLF_merged3_0_1_13_1_1_11_2_1_11num_workgroupsubgroup_idvirtual_gid[0], GLF_merged3_0_1_13_1_1_11_2_1_11num_workgroupsubgroup_idvirtual_gid[1], GLF_merged3_0_1_13_1_1_11_2_1_11num_workgroupsubgroup_idvirtual_gid[2])).y) | (GLF_merged3_0_1_13_1_1_11_2_1_11num_workgroupsubgroup_idvirtual_gid.y)))))) >> 0u)) * subgroup_size + ((GLF_merged4_0_1_6_1_1_6_2_1_17_3_1_11read_1read_2subgroup_local_idvirtual_gid.z + 1) % subgroup_size);
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, true && (false)), (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (_GLF_IDENTITY(! ((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (! ((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) || false))) && true)))
  return;
 do
  {
   do
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          break;
         if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, (false) || false)), true && _GLF_IDENTITY((! (_GLF_IDENTITY(false, (false) || false))), _GLF_IDENTITY(bool(bvec3((! (_GLF_IDENTITY(false, (false) || false))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true && (_GLF_IDENTITY(bool(bvec3((! (_GLF_IDENTITY(false, (false) || false))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bool(bool(bool(bvec3((! (_GLF_IDENTITY(false, (false) || false))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))))))))
          return;
         do
          {
           if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, false, _GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, false, false)), ! (! (bool(bvec3(false, false, false)))))))))))
            break;
           if(_GLF_WRAPPED_IF_FALSE(false))
            {
            }
           else
            {
             if(_GLF_WRAPPED_IF_TRUE(true))
              {
               return;
              }
             else
              {
              }
            }
          }
         while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, false || (false))));
         if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), (false) && true)) && true)))
          return;
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        break;
       return;
      }
    }
   while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
  }
 while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0) > injectionSwitch.y))));
 uint read_1 = atomicLoad(buf[GLF_merged4_0_1_6_1_1_6_2_1_17_3_1_11read_1read_2subgroup_local_idvirtual_gid.w], 4, _GLF_IDENTITY(64, ~ (~ (_GLF_IDENTITY(64, (64) | (_GLF_IDENTITY(64, min(64, 64))))))), 0);
 if(_GLF_DEAD(false))
  return;
 for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
  {
   for(int _injected_loop_counter = (1 | _GLF_IDENTITY(1, (false ? _GLF_FUZZED(-49703) : 1))); _GLF_WRAPPED_LOOP(_injected_loop_counter != (0 | 0)); _injected_loop_counter --)
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
    }
  }
 if(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), (_GLF_WRAPPED_IF_FALSE(false)) && true))
  {
  }
 else
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec3(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)))))
    {
     do
      {
       do
        {
         for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
          {
           return;
          }
        }
       while(_GLF_WRAPPED_LOOP(false));
      }
     while(_GLF_WRAPPED_LOOP(false));
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-8492.3699)), vec2(_GLF_FUZZED(755.489), (injectionSwitch)[1]), bvec2(false, true))).y))))
      return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   GLF_merged2_0_1_6_1_1_14read_1workgroup_size.x = read_1;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), (_GLF_IDENTITY(false, ! (! (false)))) && true)))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 else
  {
   do
    {
     GLF_merged4_0_1_6_1_1_6_2_1_17_3_1_11read_1read_2subgroup_local_idvirtual_gid.x = _GLF_IDENTITY(GLF_merged2_0_1_6_1_1_14read_1workgroup_size, (_GLF_IDENTITY(GLF_merged2_0_1_6_1_1_14read_1workgroup_size, min(GLF_merged2_0_1_6_1_1_14read_1workgroup_size, GLF_merged2_0_1_6_1_1_14read_1workgroup_size))) | (GLF_merged2_0_1_6_1_1_14read_1workgroup_size)).x;
    }
   while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
   do
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec4(false, false, false, true)))) || false)))
      return;
    }
   while(_GLF_WRAPPED_LOOP(false));
  }
 if(_GLF_DEAD(false))
  {
   for(int _injected_loop_counter = int(_GLF_ZERO(0.0, injectionSwitch.x)); _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
    {
     return;
    }
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_WRAPPED_IF_TRUE(true))
        {
         return;
        }
       else
        {
        }
      }
    }
   else
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, ! (! (false)))))) && true))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != (0 << _GLF_IDENTITY(int(2), int(2)))); _injected_loop_counter --)
      {
       if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
        {
         if(_GLF_WRAPPED_IF_TRUE(true))
          {
           if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, true && (false)), (injectionSwitch.x > injectionSwitch.y))))
            return;
          }
         else
          {
          }
        }
       else
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)))))
          return;
         if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
          {
           if(_GLF_DEAD(false))
            return;
           return;
          }
        }
      }
     do
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            continue;
           break;
          }
         if(_GLF_DEAD(false))
          break;
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
           if(_GLF_DEAD(false))
            continue;
           break;
          }
         continue;
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec2(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(_GLF_IDENTITY(bool((injectionSwitch.x > injectionSwitch.y)), (bool((injectionSwitch.x > injectionSwitch.y))) && true)))))), true))), bool(bvec2(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec2(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(_GLF_IDENTITY(bool((injectionSwitch.x > injectionSwitch.y)), (bool((injectionSwitch.x > injectionSwitch.y))) && true)))))), true))), false)))))
          break;
         if(_GLF_DEAD(false))
          break;
         continue;
         if(_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! (false))))))))))
          break;
        }
       if(_GLF_DEAD(false))
        break;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).y, clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))))))))
          break;
         continue;
        }
       if(_GLF_DEAD(false))
        continue;
       if(_GLF_DEAD(false))
        continue;
       do
        {
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(false))
          continue;
         return;
        }
       while(_GLF_WRAPPED_LOOP(false));
      }
     while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         do
          {
           return;
          }
         while(_GLF_WRAPPED_LOOP(false));
        }
      }
     else
      {
       if(_GLF_DEAD(false))
        return;
      }
     if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))))))
      {
      }
     else
      {
       return;
      }
     if(_GLF_DEAD(false))
      return;
    }
  }
 if(_GLF_WRAPPED_IF_FALSE(false))
  {
  }
 else
  {
   atomicStore(buf[next_virtual_gid], uint(GLF_merged4_0_1_6_1_1_6_2_1_17_3_1_11read_1read_2subgroup_local_idvirtual_gid.x + 1), 4, 64, 4);
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 uint read_2 = atomicLoad(_GLF_IDENTITY(buf[_GLF_IDENTITY(GLF_merged4_0_1_6_1_1_6_2_1_17_3_1_11read_1read_2subgroup_local_idvirtual_gid, (GLF_merged4_0_1_6_1_1_6_2_1_17_3_1_11read_1read_2subgroup_local_idvirtual_gid) >> uvec4(0u, 0u, 0u, 0u)).w], ~ (~ (buf[_GLF_IDENTITY(GLF_merged4_0_1_6_1_1_6_2_1_17_3_1_11read_1read_2subgroup_local_idvirtual_gid, (GLF_merged4_0_1_6_1_1_6_2_1_17_3_1_11read_1read_2subgroup_local_idvirtual_gid) >> uvec4(0u, 0u, 0u, 0u)).w]))), 4, _GLF_IDENTITY(64, clamp(_GLF_IDENTITY(64, 0 | (_GLF_IDENTITY(64, (64) << 0))), _GLF_IDENTITY(64, (64) - 0), 64)), 0);
 GLF_merged4_0_1_6_1_1_6_2_1_17_3_1_11read_1read_2subgroup_local_idvirtual_gid.y = read_2;
 if(_GLF_DEAD(false))
  return;
 if(GLF_merged4_0_1_6_1_1_6_2_1_17_3_1_11read_1read_2subgroup_local_idvirtual_gid.z + 1 < _GLF_IDENTITY(subgroup_size, (false ? _GLF_FUZZED(GLF_merged3_0_1_14_1_1_12_2_1_14workgroup_baseworkgroup_idworkgroup_size.x) : subgroup_size)))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
      }
     else
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(mat2x4(injectionSwitch.y, 1.0, 0.0, 0.0, 1.0, length(vec3(0.0, 0.0, 0.0)), 1.0, 0.0)), mix(float(float(mat2x4(injectionSwitch.y, 1.0, 0.0, 0.0, 1.0, length(vec3(0.0, 0.0, 0.0)), 1.0, 0.0))), float(_GLF_FUZZED(2923.3088)), bool(false))))))))
        return;
      }
     return;
    }
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
    }
   else
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y))))
      return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   do
    {
     if(_GLF_DEAD(false))
      return;
    }
   while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, _GLF_IDENTITY((false), bool(bool((false)))) && true)));
   int i = 0;
   if(_GLF_DEAD(false))
    return;
   for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
    {
     do
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
        break;
       if(_GLF_DEAD(false))
        break;
       for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter, ~ (~ (_injected_loop_counter))) != 1); _injected_loop_counter ++)
        {
         if(_GLF_DEAD(false))
          continue;
         if(_GLF_DEAD(false))
          return;
        }
      }
     while(_GLF_WRAPPED_LOOP(false));
    }
   if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
    }
   else
    {
     do
      {
       if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y))), ! (! ((injectionSwitch.x > injectionSwitch.y)))))))
        {
        }
       else
        {
         for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
          {
           if(_GLF_DEAD(false))
            return;
          }
         for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
          {
           do
            {
             do
              {
               if(_GLF_DEAD(false))
                break;
               if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(bool(bvec3((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - abs(sin(0.0)))), true, true)), bool(bvec4(bool(bvec3((injectionSwitch.x > injectionSwitch.y), true, true)), true, false, false))))), ! (! (_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, true && (false)), (injectionSwitch.x > injectionSwitch.y)), bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))), true && (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(bool(bvec3((injectionSwitch.x > injectionSwitch.y), true, true)), bool(bvec4(bool(bvec3((_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x)) > injectionSwitch.y), true, true)), true, false, false))))), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))), ! (! (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y), _GLF_IDENTITY(bool(bvec3((injectionSwitch.x > injectionSwitch.y), true, true)), bool(bvec4(bool(bvec3((injectionSwitch.x > injectionSwitch.y), true, true)), true, false, false))))), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), mat2(1.0) * ((injectionSwitch) * mat2(1.0)))).x, min(injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x)) > injectionSwitch.y)), bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))))))
                break;
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                return;
               atomicStore(buf[next_virtual_gid], uint(GLF_merged4_0_1_6_1_1_6_2_1_17_3_1_11read_1read_2subgroup_local_idvirtual_gid.x + _GLF_IDENTITY(1, (_GLF_IDENTITY(1, min(1, 1))) << int(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), min(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))))) == _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged4_0_1_6_1_1_6_2_1_17_3_1_11read_1read_2subgroup_local_idvirtual_gid.y, uint(uvec3(GLF_merged4_0_1_6_1_1_6_2_1_17_3_1_11read_1read_2subgroup_local_idvirtual_gid.y, 0u, 1u))), _GLF_IDENTITY((GLF_merged4_0_1_6_1_1_6_2_1_17_3_1_11read_1read_2subgroup_local_idvirtual_gid.y) | (GLF_merged4_0_1_6_1_1_6_2_1_17_3_1_11read_1read_2subgroup_local_idvirtual_gid.y), max((GLF_merged4_0_1_6_1_1_6_2_1_17_3_1_11read_1read_2subgroup_local_idvirtual_gid.y) | (GLF_merged4_0_1_6_1_1_6_2_1_17_3_1_11read_1read_2subgroup_local_idvirtual_gid.y), (GLF_merged4_0_1_6_1_1_6_2_1_17_3_1_11read_1read_2subgroup_local_idvirtual_gid.y) | _GLF_IDENTITY((GLF_merged4_0_1_6_1_1_6_2_1_17_3_1_11read_1read_2subgroup_local_idvirtual_gid.y), ((GLF_merged4_0_1_6_1_1_6_2_1_17_3_1_11read_1read_2subgroup_local_idvirtual_gid.y)) | 0u)))), _GLF_IDENTITY(max(_GLF_IDENTITY(GLF_merged4_0_1_6_1_1_6_2_1_17_3_1_11read_1read_2subgroup_local_idvirtual_gid.y, (GLF_merged4_0_1_6_1_1_6_2_1_17_3_1_11read_1read_2subgroup_local_idvirtual_gid.y) ^ _GLF_IDENTITY(0u, ~ (~ (0u)))), _GLF_IDENTITY(GLF_merged4_0_1_6_1_1_6_2_1_17_3_1_11read_1read_2subgroup_local_idvirtual_gid.y, max(GLF_merged4_0_1_6_1_1_6_2_1_17_3_1_11read_1read_2subgroup_local_idvirtual_gid.y, _GLF_IDENTITY(_GLF_IDENTITY(GLF_merged4_0_1_6_1_1_6_2_1_17_3_1_11read_1read_2subgroup_local_idvirtual_gid, min(GLF_merged4_0_1_6_1_1_6_2_1_17_3_1_11read_1read_2subgroup_local_idvirtual_gid, GLF_merged4_0_1_6_1_1_6_2_1_17_3_1_11read_1read_2subgroup_local_idvirtual_gid)).y, max(GLF_merged4_0_1_6_1_1_6_2_1_17_3_1_11read_1read_2subgroup_local_idvirtual_gid.y, GLF_merged4_0_1_6_1_1_6_2_1_17_3_1_11read_1read_2subgroup_local_idvirtual_gid.y))))), (max(_GLF_IDENTITY(GLF_merged4_0_1_6_1_1_6_2_1_17_3_1_11read_1read_2subgroup_local_idvirtual_gid.y, (GLF_merged4_0_1_6_1_1_6_2_1_17_3_1_11read_1read_2subgroup_local_idvirtual_gid.y) ^ _GLF_IDENTITY(0u, ~ (~ (_GLF_IDENTITY(0u, (0u) >> 0u))))), _GLF_IDENTITY(GLF_merged4_0_1_6_1_1_6_2_1_17_3_1_11read_1read_2subgroup_local_idvirtual_gid.y, max(GLF_merged4_0_1_6_1_1_6_2_1_17_3_1_11read_1read_2subgroup_local_idvirtual_gid.y, _GLF_IDENTITY(GLF_merged4_0_1_6_1_1_6_2_1_17_3_1_11read_1read_2subgroup_local_idvirtual_gid.y, max(GLF_merged4_0_1_6_1_1_6_2_1_17_3_1_11read_1read_2subgroup_local_idvirtual_gid.y, GLF_merged4_0_1_6_1_1_6_2_1_17_3_1_11read_1read_2subgroup_local_idvirtual_gid.y)))))) ^ 0u)), clamp(_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged4_0_1_6_1_1_6_2_1_17_3_1_11read_1read_2subgroup_local_idvirtual_gid.y, (GLF_merged4_0_1_6_1_1_6_2_1_17_3_1_11read_1read_2subgroup_local_idvirtual_gid.y) | (GLF_merged4_0_1_6_1_1_6_2_1_17_3_1_11read_1read_2subgroup_local_idvirtual_gid.y)), _GLF_IDENTITY(max(_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged4_0_1_6_1_1_6_2_1_17_3_1_11read_1read_2subgroup_local_idvirtual_gid.y, min(GLF_merged4_0_1_6_1_1_6_2_1_17_3_1_11read_1read_2subgroup_local_idvirtual_gid.y, GLF_merged4_0_1_6_1_1_6_2_1_17_3_1_11read_1read_2subgroup_local_idvirtual_gid.y)), (_GLF_IDENTITY(GLF_merged4_0_1_6_1_1_6_2_1_17_3_1_11read_1read_2subgroup_local_idvirtual_gid.y, uint(_GLF_IDENTITY(uvec3(GLF_merged4_0_1_6_1_1_6_2_1_17_3_1_11read_1read_2subgroup_local_idvirtual_gid.y, 0u, _GLF_IDENTITY(1u, _GLF_IDENTITY(uint(uvec3(_GLF_IDENTITY(1u, 0u | (1u)), 1u, 0u)), (uint(uvec3(_GLF_IDENTITY(1u, 0u | (1u)), 1u, 0u))) - uint(_GLF_ZERO(0.0, injectionSwitch.x))))), (_GLF_IDENTITY(uvec3(GLF_merged4_0_1_6_1_1_6_2_1_17_3_1_11read_1read_2subgroup_local_idvirtual_gid.y, 0u, 1u), ~ (~ (uvec3(GLF_merged4_0_1_6_1_1_6_2_1_17_3_1_11read_1read_2subgroup_local_idvirtual_gid.y, 0u, _GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, (1u) ^ (0u << _GLF_IDENTITY(uint(5u), uint(5u))))) | (1u))))))) | (uvec3(_GLF_IDENTITY(GLF_merged4_0_1_6_1_1_6_2_1_17_3_1_11read_1read_2subgroup_local_idvirtual_gid, (GLF_merged4_0_1_6_1_1_6_2_1_17_3_1_11read_1read_2subgroup_local_idvirtual_gid) << uvec4(0u, 0u, 0u, 0u)).y, 0u, 1u)))))) ^ _GLF_IDENTITY(0u, ~ (~ (0u)))), _GLF_IDENTITY(GLF_merged4_0_1_6_1_1_6_2_1_17_3_1_11read_1read_2subgroup_local_idvirtual_gid.y, max(GLF_merged4_0_1_6_1_1_6_2_1_17_3_1_11read_1read_2subgroup_local_idvirtual_gid.y, _GLF_IDENTITY(GLF_merged4_0_1_6_1_1_6_2_1_17_3_1_11read_1read_2subgroup_local_idvirtual_gid.y, max(GLF_merged4_0_1_6_1_1_6_2_1_17_3_1_11read_1read_2subgroup_local_idvirtual_gid.y, GLF_merged4_0_1_6_1_1_6_2_1_17_3_1_11read_1read_2subgroup_local_idvirtual_gid.y))))), (max(_GLF_IDENTITY(GLF_merged4_0_1_6_1_1_6_2_1_17_3_1_11read_1read_2subgroup_local_idvirtual_gid.y, (GLF_merged4_0_1_6_1_1_6_2_1_17_3_1_11read_1read_2subgroup_local_idvirtual_gid.y) ^ _GLF_IDENTITY(_GLF_IDENTITY(0u, ~ (~ (0u))), (_GLF_IDENTITY(_GLF_IDENTITY(0u, ~ (~ (0u))), (_GLF_IDENTITY(0u, ~ (~ (0u)))) | (_GLF_IDENTITY(0u, ~ (~ (0u)))))) - (32637u & 0u))), _GLF_IDENTITY(GLF_merged4_0_1_6_1_1_6_2_1_17_3_1_11read_1read_2subgroup_local_idvirtual_gid.y, max(_GLF_IDENTITY(GLF_merged4_0_1_6_1_1_6_2_1_17_3_1_11read_1read_2subgroup_local_idvirtual_gid.y, (_GLF_IDENTITY(GLF_merged4_0_1_6_1_1_6_2_1_17_3_1_11read_1read_2subgroup_local_idvirtual_gid.y, ~ (~ (GLF_merged4_0_1_6_1_1_6_2_1_17_3_1_11read_1read_2subgroup_local_idvirtual_gid.y)))) - uint(_GLF_ZERO(0.0, injectionSwitch.x))), _GLF_IDENTITY(GLF_merged4_0_1_6_1_1_6_2_1_17_3_1_11read_1read_2subgroup_local_idvirtual_gid.y, _GLF_IDENTITY(max(GLF_merged4_0_1_6_1_1_6_2_1_17_3_1_11read_1read_2subgroup_local_idvirtual_gid.y, GLF_merged4_0_1_6_1_1_6_2_1_17_3_1_11read_1read_2subgroup_local_idvirtual_gid.y), 0u + (max(GLF_merged4_0_1_6_1_1_6_2_1_17_3_1_11read_1read_2subgroup_local_idvirtual_gid.y, GLF_merged4_0_1_6_1_1_6_2_1_17_3_1_11read_1read_2subgroup_local_idvirtual_gid.y)))))))) ^ 0u)), _GLF_IDENTITY(_GLF_IDENTITY(GLF_merged4_0_1_6_1_1_6_2_1_17_3_1_11read_1read_2subgroup_local_idvirtual_gid.y, (GLF_merged4_0_1_6_1_1_6_2_1_17_3_1_11read_1read_2subgroup_local_idvirtual_gid.y) | (GLF_merged4_0_1_6_1_1_6_2_1_17_3_1_11read_1read_2subgroup_local_idvirtual_gid.y)), _GLF_IDENTITY(max(_GLF_IDENTITY(GLF_merged4_0_1_6_1_1_6_2_1_17_3_1_11read_1read_2subgroup_local_idvirtual_gid.y, (_GLF_IDENTITY(GLF_merged4_0_1_6_1_1_6_2_1_17_3_1_11read_1read_2subgroup_local_idvirtual_gid, min(_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged4_0_1_6_1_1_6_2_1_17_3_1_11read_1read_2subgroup_local_idvirtual_gid, max(GLF_merged4_0_1_6_1_1_6_2_1_17_3_1_11read_1read_2subgroup_local_idvirtual_gid, GLF_merged4_0_1_6_1_1_6_2_1_17_3_1_11read_1read_2subgroup_local_idvirtual_gid)), max(_GLF_IDENTITY(GLF_merged4_0_1_6_1_1_6_2_1_17_3_1_11read_1read_2subgroup_local_idvirtual_gid, max(GLF_merged4_0_1_6_1_1_6_2_1_17_3_1_11read_1read_2subgroup_local_idvirtual_gid, GLF_merged4_0_1_6_1_1_6_2_1_17_3_1_11read_1read_2subgroup_local_idvirtual_gid)), _GLF_IDENTITY(_GLF_IDENTITY(GLF_merged4_0_1_6_1_1_6_2_1_17_3_1_11read_1read_2subgroup_local_idvirtual_gid, max(GLF_merged4_0_1_6_1_1_6_2_1_17_3_1_11read_1read_2subgroup_local_idvirtual_gid, GLF_merged4_0_1_6_1_1_6_2_1_17_3_1_11read_1read_2subgroup_local_idvirtual_gid)), (false ? _GLF_FUZZED((GLF_merged4_0_1_6_1_1_6_2_1_17_3_1_11read_1read_2subgroup_local_idvirtual_gid * subgroup_size)) : _GLF_IDENTITY(GLF_merged4_0_1_6_1_1_6_2_1_17_3_1_11read_1read_2subgroup_local_idvirtual_gid, max(GLF_merged4_0_1_6_1_1_6_2_1_17_3_1_11read_1read_2subgroup_local_idvirtual_gid, GLF_merged4_0_1_6_1_1_6_2_1_17_3_1_11read_1read_2subgroup_local_idvirtual_gid)))))), GLF_merged4_0_1_6_1_1_6_2_1_17_3_1_11read_1read_2subgroup_local_idvirtual_gid)).y) ^ _GLF_IDENTITY(0u, ~ (~ (0u)))), _GLF_IDENTITY(GLF_merged4_0_1_6_1_1_6_2_1_17_3_1_11read_1read_2subgroup_local_idvirtual_gid.y, max(GLF_merged4_0_1_6_1_1_6_2_1_17_3_1_11read_1read_2subgroup_local_idvirtual_gid.y, _GLF_IDENTITY(GLF_merged4_0_1_6_1_1_6_2_1_17_3_1_11read_1read_2subgroup_local_idvirtual_gid.y, max(_GLF_IDENTITY(GLF_merged4_0_1_6_1_1_6_2_1_17_3_1_11read_1read_2subgroup_local_idvirtual_gid, max(_GLF_IDENTITY(GLF_merged4_0_1_6_1_1_6_2_1_17_3_1_11read_1read_2subgroup_local_idvirtual_gid, (GLF_merged4_0_1_6_1_1_6_2_1_17_3_1_11read_1read_2subgroup_local_idvirtual_gid) / (uvec4(1u, 1u, 1u, 1u) & uvec4(1u, 1u, 1u, 1u))), GLF_merged4_0_1_6_1_1_6_2_1_17_3_1_11read_1read_2subgroup_local_idvirtual_gid)).y, GLF_merged4_0_1_6_1_1_6_2_1_17_3_1_11read_1read_2subgroup_local_idvirtual_gid.y))))), _GLF_IDENTITY(_GLF_IDENTITY((max(_GLF_IDENTITY(GLF_merged4_0_1_6_1_1_6_2_1_17_3_1_11read_1read_2subgroup_local_idvirtual_gid.y, (GLF_merged4_0_1_6_1_1_6_2_1_17_3_1_11read_1read_2subgroup_local_idvirtual_gid.y) ^ _GLF_IDENTITY(0u, ~ (~ (0u)))), _GLF_IDENTITY(GLF_merged4_0_1_6_1_1_6_2_1_17_3_1_11read_1read_2subgroup_local_idvirtual_gid.y, max(_GLF_IDENTITY(GLF_merged4_0_1_6_1_1_6_2_1_17_3_1_11read_1read_2subgroup_local_idvirtual_gid, (GLF_merged4_0_1_6_1_1_6_2_1_17_3_1_11read_1read_2subgroup_local_idvirtual_gid) | (_GLF_IDENTITY(GLF_merged4_0_1_6_1_1_6_2_1_17_3_1_11read_1read_2subgroup_local_idvirtual_gid, (GLF_merged4_0_1_6_1_1_6_2_1_17_3_1_11read_1read_2subgroup_local_idvirtual_gid) - uvec4(0u, 0u, 0u, 0u)))).y, _GLF_IDENTITY(GLF_merged4_0_1_6_1_1_6_2_1_17_3_1_11read_1read_2subgroup_local_idvirtual_gid.y, max(GLF_merged4_0_1_6_1_1_6_2_1_17_3_1_11read_1read_2subgroup_local_idvirtual_gid.y, GLF_merged4_0_1_6_1_1_6_2_1_17_3_1_11read_1read_2subgroup_local_idvirtual_gid.y)))))), min((max(_GLF_IDENTITY(GLF_merged4_0_1_6_1_1_6_2_1_17_3_1_11read_1read_2subgroup_local_idvirtual_gid.y, (GLF_merged4_0_1_6_1_1_6_2_1_17_3_1_11read_1read_2subgroup_local_idvirtual_gid.y) ^ _GLF_IDENTITY(0u, ~ (~ (0u)))), _GLF_IDENTITY(GLF_merged4_0_1_6_1_1_6_2_1_17_3_1_11read_1read_2subgroup_local_idvirtual_gid.y, max(_GLF_IDENTITY(GLF_merged4_0_1_6_1_1_6_2_1_17_3_1_11read_1read_2subgroup_local_idvirtual_gid, (GLF_merged4_0_1_6_1_1_6_2_1_17_3_1_11read_1read_2subgroup_local_idvirtual_gid) | (_GLF_IDENTITY(GLF_merged4_0_1_6_1_1_6_2_1_17_3_1_11read_1read_2subgroup_local_idvirtual_gid, (GLF_merged4_0_1_6_1_1_6_2_1_17_3_1_11read_1read_2subgroup_local_idvirtual_gid) - uvec4(0u, 0u, 0u, 0u)))).y, _GLF_IDENTITY(GLF_merged4_0_1_6_1_1_6_2_1_17_3_1_11read_1read_2subgroup_local_idvirtual_gid.y, max(GLF_merged4_0_1_6_1_1_6_2_1_17_3_1_11read_1read_2subgroup_local_idvirtual_gid.y, GLF_merged4_0_1_6_1_1_6_2_1_17_3_1_11read_1read_2subgroup_local_idvirtual_gid.y)))))), (max(_GLF_IDENTITY(GLF_merged4_0_1_6_1_1_6_2_1_17_3_1_11read_1read_2subgroup_local_idvirtual_gid.y, (GLF_merged4_0_1_6_1_1_6_2_1_17_3_1_11read_1read_2subgroup_local_idvirtual_gid.y) ^ _GLF_IDENTITY(0u, ~ (~ (0u)))), _GLF_IDENTITY(GLF_merged4_0_1_6_1_1_6_2_1_17_3_1_11read_1read_2subgroup_local_idvirtual_gid.y, max(_GLF_IDENTITY(GLF_merged4_0_1_6_1_1_6_2_1_17_3_1_11read_1read_2subgroup_local_idvirtual_gid, (GLF_merged4_0_1_6_1_1_6_2_1_17_3_1_11read_1read_2subgroup_local_idvirtual_gid) | (_GLF_IDENTITY(GLF_merged4_0_1_6_1_1_6_2_1_17_3_1_11read_1read_2subgroup_local_idvirtual_gid, (GLF_merged4_0_1_6_1_1_6_2_1_17_3_1_11read_1read_2subgroup_local_idvirtual_gid) - uvec4(0u, 0u, 0u, 0u)))).y, _GLF_IDENTITY(GLF_merged4_0_1_6_1_1_6_2_1_17_3_1_11read_1read_2subgroup_local_idvirtual_gid.y, max(GLF_merged4_0_1_6_1_1_6_2_1_17_3_1_11read_1read_2subgroup_local_idvirtual_gid.y, GLF_merged4_0_1_6_1_1_6_2_1_17_3_1_11read_1read_2subgroup_local_idvirtual_gid.y)))))))) ^ 0u, (_GLF_IDENTITY((max(_GLF_IDENTITY(GLF_merged4_0_1_6_1_1_6_2_1_17_3_1_11read_1read_2subgroup_local_idvirtual_gid.y, (GLF_merged4_0_1_6_1_1_6_2_1_17_3_1_11read_1read_2subgroup_local_idvirtual_gid.y) ^ _GLF_IDENTITY(0u, ~ (~ (0u)))), _GLF_IDENTITY(GLF_merged4_0_1_6_1_1_6_2_1_17_3_1_11read_1read_2subgroup_local_idvirtual_gid.y, max(_GLF_IDENTITY(GLF_merged4_0_1_6_1_1_6_2_1_17_3_1_11read_1read_2subgroup_local_idvirtual_gid, (GLF_merged4_0_1_6_1_1_6_2_1_17_3_1_11read_1read_2subgroup_local_idvirtual_gid) | (_GLF_IDENTITY(GLF_merged4_0_1_6_1_1_6_2_1_17_3_1_11read_1read_2subgroup_local_idvirtual_gid, (GLF_merged4_0_1_6_1_1_6_2_1_17_3_1_11read_1read_2subgroup_local_idvirtual_gid) - uvec4(0u, 0u, 0u, 0u)))).y, _GLF_IDENTITY(GLF_merged4_0_1_6_1_1_6_2_1_17_3_1_11read_1read_2subgroup_local_idvirtual_gid.y, max(GLF_merged4_0_1_6_1_1_6_2_1_17_3_1_11read_1read_2subgroup_local_idvirtual_gid.y, GLF_merged4_0_1_6_1_1_6_2_1_17_3_1_11read_1read_2subgroup_local_idvirtual_gid.y)))))), min((max(_GLF_IDENTITY(GLF_merged4_0_1_6_1_1_6_2_1_17_3_1_11read_1read_2subgroup_local_idvirtual_gid.y, (GLF_merged4_0_1_6_1_1_6_2_1_17_3_1_11read_1read_2subgroup_local_idvirtual_gid.y) ^ _GLF_IDENTITY(0u, ~ (~ (0u)))), _GLF_IDENTITY(GLF_merged4_0_1_6_1_1_6_2_1_17_3_1_11read_1read_2subgroup_local_idvirtual_gid.y, max(_GLF_IDENTITY(GLF_merged4_0_1_6_1_1_6_2_1_17_3_1_11read_1read_2subgroup_local_idvirtual_gid, (GLF_merged4_0_1_6_1_1_6_2_1_17_3_1_11read_1read_2subgroup_local_idvirtual_gid) | (_GLF_IDENTITY(GLF_merged4_0_1_6_1_1_6_2_1_17_3_1_11read_1read_2subgroup_local_idvirtual_gid, (GLF_merged4_0_1_6_1_1_6_2_1_17_3_1_11read_1read_2subgroup_local_idvirtual_gid) - uvec4(0u, 0u, 0u, 0u)))).y, _GLF_IDENTITY(GLF_merged4_0_1_6_1_1_6_2_1_17_3_1_11read_1read_2subgroup_local_idvirtual_gid.y, max(GLF_merged4_0_1_6_1_1_6_2_1_17_3_1_11read_1read_2subgroup_local_idvirtual_gid.y, GLF_merged4_0_1_6_1_1_6_2_1_17_3_1_11read_1read_2subgroup_local_idvirtual_gid.y)))))), (max(_GLF_IDENTITY(GLF_merged4_0_1_6_1_1_6_2_1_17_3_1_11read_1read_2subgroup_local_idvirtual_gid.y, (GLF_merged4_0_1_6_1_1_6_2_1_17_3_1_11read_1read_2subgroup_local_idvirtual_gid.y) ^ _GLF_IDENTITY(0u, ~ (~ (0u)))), _GLF_IDENTITY(GLF_merged4_0_1_6_1_1_6_2_1_17_3_1_11read_1read_2subgroup_local_idvirtual_gid.y, max(_GLF_IDENTITY(GLF_merged4_0_1_6_1_1_6_2_1_17_3_1_11read_1read_2subgroup_local_idvirtual_gid, (GLF_merged4_0_1_6_1_1_6_2_1_17_3_1_11read_1read_2subgroup_local_idvirtual_gid) | (_GLF_IDENTITY(GLF_merged4_0_1_6_1_1_6_2_1_17_3_1_11read_1read_2subgroup_local_idvirtual_gid, (GLF_merged4_0_1_6_1_1_6_2_1_17_3_1_11read_1read_2subgroup_local_idvirtual_gid) - uvec4(0u, 0u, 0u, 0u)))).y, _GLF_IDENTITY(GLF_merged4_0_1_6_1_1_6_2_1_17_3_1_11read_1read_2subgroup_local_idvirtual_gid.y, max(GLF_merged4_0_1_6_1_1_6_2_1_17_3_1_11read_1read_2subgroup_local_idvirtual_gid.y, GLF_merged4_0_1_6_1_1_6_2_1_17_3_1_11read_1read_2subgroup_local_idvirtual_gid.y)))))))) ^ 0u) << 0u))), _GLF_IDENTITY(_GLF_IDENTITY(GLF_merged4_0_1_6_1_1_6_2_1_17_3_1_11read_1read_2subgroup_local_idvirtual_gid.y, (GLF_merged4_0_1_6_1_1_6_2_1_17_3_1_11read_1read_2subgroup_local_idvirtual_gid.y) | (GLF_merged4_0_1_6_1_1_6_2_1_17_3_1_11read_1read_2subgroup_local_idvirtual_gid.y)), _GLF_IDENTITY(max(_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged4_0_1_6_1_1_6_2_1_17_3_1_11read_1read_2subgroup_local_idvirtual_gid.y, (GLF_merged4_0_1_6_1_1_6_2_1_17_3_1_11read_1read_2subgroup_local_idvirtual_gid.y) ^ _GLF_IDENTITY(0u, ~ (~ (0u)))), (_GLF_IDENTITY(GLF_merged4_0_1_6_1_1_6_2_1_17_3_1_11read_1read_2subgroup_local_idvirtual_gid.y, (GLF_merged4_0_1_6_1_1_6_2_1_17_3_1_11read_1read_2subgroup_local_idvirtual_gid.y) ^ _GLF_IDENTITY(0u, ~ (~ (0u))))) - 0u), _GLF_IDENTITY(GLF_merged4_0_1_6_1_1_6_2_1_17_3_1_11read_1read_2subgroup_local_idvirtual_gid.y, max(GLF_merged4_0_1_6_1_1_6_2_1_17_3_1_11read_1read_2subgroup_local_idvirtual_gid.y, _GLF_IDENTITY(GLF_merged4_0_1_6_1_1_6_2_1_17_3_1_11read_1read_2subgroup_local_idvirtual_gid.y, max(GLF_merged4_0_1_6_1_1_6_2_1_17_3_1_11read_1read_2subgroup_local_idvirtual_gid.y, GLF_merged4_0_1_6_1_1_6_2_1_17_3_1_11read_1read_2subgroup_local_idvirtual_gid.y))))), (max(_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged4_0_1_6_1_1_6_2_1_17_3_1_11read_1read_2subgroup_local_idvirtual_gid, (GLF_merged4_0_1_6_1_1_6_2_1_17_3_1_11read_1read_2subgroup_local_idvirtual_gid) * uvec4(1u, 1u, 1u, 1u)).y, (GLF_merged4_0_1_6_1_1_6_2_1_17_3_1_11read_1read_2subgroup_local_idvirtual_gid.y) ^ _GLF_IDENTITY(_GLF_IDENTITY(0u, ~ (~ (0u))), uint(_GLF_IDENTITY(uvec4(_GLF_IDENTITY(_GLF_IDENTITY(0u, ~ (~ (0u))), (_GLF_IDENTITY(0u, ~ (~ (0u)))) / 1u), 0u, ((1u << _GLF_IDENTITY(uint(1u), uint(1u))) >> _GLF_IDENTITY(uint(1u), uint(1u))), 0u), ~ (~ (uvec4(_GLF_IDENTITY(_GLF_IDENTITY(0u, ~ (~ (0u))), (_GLF_IDENTITY(0u, ~ (~ (0u)))) / 1u), 0u, ((1u << _GLF_IDENTITY(uint(1u), uint(1u))) >> _GLF_IDENTITY(uint(1u), uint(1u))), 0u))))))), _GLF_IDENTITY(GLF_merged4_0_1_6_1_1_6_2_1_17_3_1_11read_1read_2subgroup_local_idvirtual_gid.y, max(GLF_merged4_0_1_6_1_1_6_2_1_17_3_1_11read_1read_2subgroup_local_idvirtual_gid.y, _GLF_IDENTITY(_GLF_IDENTITY(GLF_merged4_0_1_6_1_1_6_2_1_17_3_1_11read_1read_2subgroup_local_idvirtual_gid, uvec4(GLF_merged4_0_1_6_1_1_6_2_1_17_3_1_11read_1read_2subgroup_local_idvirtual_gid[0], GLF_merged4_0_1_6_1_1_6_2_1_17_3_1_11read_1read_2subgroup_local_idvirtual_gid[1], _GLF_IDENTITY(GLF_merged4_0_1_6_1_1_6_2_1_17_3_1_11read_1read_2subgroup_local_idvirtual_gid[2], min(GLF_merged4_0_1_6_1_1_6_2_1_17_3_1_11read_1read_2subgroup_local_idvirtual_gid[2], GLF_merged4_0_1_6_1_1_6_2_1_17_3_1_11read_1read_2subgroup_local_idvirtual_gid[2])), GLF_merged4_0_1_6_1_1_6_2_1_17_3_1_11read_1read_2subgroup_local_idvirtual_gid[3])).y, max(GLF_merged4_0_1_6_1_1_6_2_1_17_3_1_11read_1read_2subgroup_local_idvirtual_gid.y, GLF_merged4_0_1_6_1_1_6_2_1_17_3_1_11read_1read_2subgroup_local_idvirtual_gid.y)))))) ^ 0u))))) + 1, 4, _GLF_IDENTITY(64, (_GLF_IDENTITY(64, ~ (~ (64)))) - (0 << _GLF_IDENTITY(int(7), int(7)))), 4);
              }
             while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (_GLF_IDENTITY(false, (false) && true))), (! (! (_GLF_IDENTITY(false, (false) && true)))) || false)), bool(bool(_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (_GLF_IDENTITY(false, (false) && true))), (! (! (_GLF_IDENTITY(false, (false) && true)))) || false)))))));
            }
           while(_GLF_WRAPPED_LOOP(false));
          }
        }
      }
     while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > injectionSwitch.y))));
    }
  }
 else
  {
   for(int _injected_loop_counter = (((1 << _GLF_IDENTITY(int(2), int(2))) >> _GLF_IDENTITY(int(2), int(_GLF_IDENTITY(2, clamp(2, 2, 2))))) | int(_GLF_ONE(1.0, injectionSwitch.y))); _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
    {
     atomicStore(buf[_GLF_IDENTITY(next_virtual_gid, clamp(next_virtual_gid, next_virtual_gid, _GLF_IDENTITY(next_virtual_gid, (next_virtual_gid) | 0u)))], uint(_GLF_IDENTITY(GLF_merged4_0_1_6_1_1_6_2_1_17_3_1_11read_1read_2subgroup_local_idvirtual_gid.x, (GLF_merged4_0_1_6_1_1_6_2_1_17_3_1_11read_1read_2subgroup_local_idvirtual_gid.x) ^ 0u) + 1 == GLF_merged4_0_1_6_1_1_6_2_1_17_3_1_11read_1read_2subgroup_local_idvirtual_gid.y) + 1, 4, _GLF_IDENTITY(64, 0 ^ (_GLF_IDENTITY(64, int(ivec2(64, 1))))), 4);
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)), clamp(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)), _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)), vec2(0.0, 0.0) + (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)), (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0))) / vec2(1.0, 1.0)))))).x > injectionSwitch.y))))
    return;
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     if(_GLF_DEAD(false))
      return;
    }
   else
    {
    }
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
    }
   else
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_WRAPPED_IF_TRUE(true))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          return;
         return;
        }
       do
        {
         for(int _injected_loop_counter = int(_GLF_ZERO(0.0, injectionSwitch.x)); _GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter != int(_GLF_ONE(1.0, injectionSwitch.y))), ! (! (_GLF_WRAPPED_LOOP(_injected_loop_counter != int(_GLF_ONE(1.0, injectionSwitch.y)))))); _GLF_IDENTITY(_injected_loop_counter ++, ~ (~ (_injected_loop_counter ++))))
          {
           if(_GLF_DEAD(false))
            {
             for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
              {
               do
                {
                 return;
                }
               while(_GLF_WRAPPED_LOOP(false));
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                {
                 if(_GLF_DEAD(false))
                  continue;
                 continue;
                }
               if(_GLF_DEAD(false))
                return;
              }
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              {
               if(_GLF_WRAPPED_IF_FALSE(false))
                {
                }
               else
                {
                 return;
                }
              }
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              continue;
            }
          }
        }
       while(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(false), ! (! (_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, (false) || false))))))));
      }
     else
      {
       if(_GLF_WRAPPED_IF_TRUE(true))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            return;
           return;
          }
        }
       else
        {
        }
      }
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
    }
   else
    {
     return;
    }
  }
}
