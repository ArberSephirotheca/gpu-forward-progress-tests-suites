#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, true && (false))) && true), bool(bvec3(false, false, true)))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(mat2x4(injectionSwitch, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0))).x > injectionSwitch.y)), false || (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false)))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         barrier();
        }
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED((-5.5 * -3.3)) : injectionSwitch.y)))))), true)))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     return;
    }
  }
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(false))
  return;
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   return;
   if(_GLF_DEAD(false))
    return;
  }
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), false || (_GLF_IDENTITY((! (false)), true && ((! (false)))))))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
      }
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(floor(-10.84)) : injectionSwitch.x)), injectionSwitch.x)) > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, false, true)))), true && (_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, false, true)))))))
      barrier();
     return;
    }
   barrier();
  }
 uint num_workgroup = gl_NumWorkGroups.x;
 uint workgroup_size = gl_WorkGroupSize.x;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, ! (! (false))), false, true, false))), (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      barrier();
     return;
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   barrier();
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(injectionSwitch.x > injectionSwitch.y, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
    }
   return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + 0.0), _GLF_IDENTITY(injectionSwitch.x, float(mat4x2(injectionSwitch.x, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0)))))) - 0.0) > injectionSwitch.y))))
        barrier();
      }
     if(_GLF_DEAD(false))
      return;
     barrier();
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) && true), (_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), injectionSwitch)).x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)), (bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))) && true))))
        return;
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec3(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)))))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(_GLF_IDENTITY(vec3(injectionSwitch.y, 0.0, 0.0), _GLF_IDENTITY(vec3(mat3x4(vec3(_GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, 1.0 * (injectionSwitch.y)), injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, float(mat4x3(injectionSwitch.y, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0))))))), injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y)), 0.0, 0.0), _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 1.0, 1.0, 1.0, round(length(normalize(vec3(1.0, 1.0, 1.0)))), 0.0, 0.0, 0.0)), (vec3(mat3x4(vec3(_GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, 1.0 * (injectionSwitch.y)), injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, float(mat4x3(injectionSwitch.y, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0))))))), injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y)), 0.0, 0.0), _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 1.0, 1.0, 1.0, round(length(normalize(vec3(1.0, 1.0, 1.0)))), 0.0, 0.0, 0.0))) + tan(vec3(0.0, 0.0, 0.0))))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(_GLF_IDENTITY(vec3(injectionSwitch.y, 0.0, 0.0), _GLF_IDENTITY(vec3(mat3x4(vec3(_GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, 1.0 * (injectionSwitch.y)), injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, float(mat4x3(injectionSwitch.y, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0))))))), injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y)), 0.0, 0.0), _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 1.0, 1.0, 1.0, round(length(normalize(vec3(1.0, 1.0, 1.0)))), 0.0, 0.0, 0.0)), (vec3(mat3x4(vec3(_GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, 1.0 * (injectionSwitch.y)), injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, float(mat4x3(injectionSwitch.y, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0))))))), injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y)), 0.0, 0.0), _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 1.0, 1.0, 1.0, round(length(normalize(vec3(1.0, 1.0, 1.0)))), 0.0, 0.0, 0.0))) + tan(vec3(0.0, 0.0, 0.0))))))), ! (! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(_GLF_IDENTITY(vec3(injectionSwitch.y, 0.0, 0.0), _GLF_IDENTITY(vec3(mat3x4(vec3(_GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, 1.0 * (injectionSwitch.y)), injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, float(mat4x3(injectionSwitch.y, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0))))))), injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y)), 0.0, 0.0), _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 1.0, 1.0, 1.0, round(length(normalize(vec3(1.0, 1.0, 1.0)))), 0.0, 0.0, 0.0)), (vec3(mat3x4(vec3(_GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, 1.0 * (injectionSwitch.y)), injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, float(mat4x3(injectionSwitch.y, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0))))))), injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y)), 0.0, 0.0), _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 1.0, 1.0, 1.0, round(length(normalize(vec3(1.0, 1.0, 1.0)))), 0.0, 0.0, 0.0))) + tan(vec3(0.0, 0.0, 0.0))))))))))), (! (_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(_GLF_IDENTITY(vec3(injectionSwitch.y, 0.0, 0.0), _GLF_IDENTITY(vec3(mat3x4(vec3(_GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, 1.0 * (injectionSwitch.y)), injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, float(mat4x3(injectionSwitch.y, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0))))))), injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y)), 0.0, 0.0), _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 1.0, 1.0, 1.0, round(length(normalize(vec3(1.0, 1.0, 1.0)))), 0.0, 0.0, 0.0)), (vec3(mat3x4(vec3(_GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, 1.0 * (injectionSwitch.y)), injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, float(mat4x3(injectionSwitch.y, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0))))))), injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y)), 0.0, 0.0), _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 1.0, 1.0, 1.0, round(length(normalize(vec3(1.0, 1.0, 1.0)))), 0.0, 0.0, 0.0))) + tan(vec3(0.0, 0.0, 0.0))))))), ! (! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(_GLF_IDENTITY(vec3(injectionSwitch.y, 0.0, 0.0), _GLF_IDENTITY(vec3(mat3x4(vec3(_GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, 1.0 * (injectionSwitch.y)), injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, float(mat4x3(injectionSwitch.y, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0))))))), injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y)), 0.0, 0.0), _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 1.0, 1.0, 1.0, round(length(normalize(vec3(1.0, 1.0, 1.0)))), 0.0, 0.0, 0.0)), (vec3(mat3x4(vec3(_GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, 1.0 * (injectionSwitch.y)), injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, float(mat4x3(injectionSwitch.y, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0))))))), injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y)), 0.0, 0.0), _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 1.0, 1.0, 1.0, round(length(normalize(vec3(1.0, 1.0, 1.0)))), 0.0, 0.0, 0.0))) + tan(vec3(0.0, 0.0, 0.0)))))))))))) || false)))))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(_GLF_ONE(1.0, injectionSwitch.y))).y), _GLF_IDENTITY(bool(bool((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(_GLF_ONE(1.0, injectionSwitch.y))).y))), bool(bvec2(bool(bool((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(_GLF_ONE(1.0, injectionSwitch.y))).y))), true)))))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, true && (false))))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          return;
         barrier();
         if(_GLF_DEAD(false))
          barrier();
        }
       barrier();
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, (false) || false)))))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, false, false, true)))))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) && true), (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec3(_GLF_DEAD(false), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (bool(bvec3(_GLF_DEAD(false), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  barrier();
 uint workgroup_id = gl_WorkGroupID.x;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    barrier();
   return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), bool(_GLF_IDENTITY(bvec2(_GLF_DEAD(false), false), bvec2(bvec2(bvec2(_GLF_DEAD(false), false)))))))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 uint workgroup_base = workgroup_size * workgroup_id;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(false || _GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, vec2(mat2x3(injectionSwitch, 0.0, 0.0, 0.0, 1.0))), injectionSwitch)).y))), _GLF_TRUE(_GLF_IDENTITY(true, (_GLF_IDENTITY(true, ! (! (true)))) && true), (injectionSwitch.x < injectionSwitch.y)) && ((_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(max(_GLF_IDENTITY(injectionSwitch, vec2(mat2x3(injectionSwitch, 0.0, 0.0, 0.0, 1.0))), injectionSwitch), clamp(_GLF_IDENTITY(max(_GLF_IDENTITY(injectionSwitch, vec2(mat2x3(injectionSwitch, 0.0, 0.0, 0.0, 1.0))), injectionSwitch), (max(_GLF_IDENTITY(injectionSwitch, vec2(mat2x3(injectionSwitch, 0.0, 0.0, 0.0, 1.0))), injectionSwitch)) * mat2(1.0)), max(_GLF_IDENTITY(injectionSwitch, vec2(mat2x3(injectionSwitch, 0.0, 0.0, 0.0, 1.0))), injectionSwitch), _GLF_IDENTITY(max(_GLF_IDENTITY(injectionSwitch, vec2(mat2x3(injectionSwitch, 0.0, 0.0, 0.0, 1.0))), injectionSwitch), mix(vec2((max(_GLF_IDENTITY(injectionSwitch, vec2(mat2x3(injectionSwitch, 0.0, 0.0, 0.0, 1.0))), injectionSwitch))[0], _GLF_FUZZED(-0.7)), vec2(_GLF_FUZZED((-17.84 / 1218.3862)), (max(_GLF_IDENTITY(injectionSwitch, vec2(mat2x3(injectionSwitch, 0.0, 0.0, 0.0, 1.0))), injectionSwitch))[1]), bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)))))).y))))), false || (false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, true, false)))))
        return;
       return;
      }
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) || false)))))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            return;
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(false))
              return;
             barrier();
            }
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
         return;
         if(_GLF_IDENTITY(_GLF_DEAD(false), bool(_GLF_IDENTITY(bool(_GLF_DEAD(false)), ! (! (bool(_GLF_DEAD(false))))))))
          return;
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) && true)))
          {
           if(_GLF_DEAD(false))
            return;
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            return;
           return;
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              return;
             return;
            }
          }
        }
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         return;
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, ! (! (false))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec2(bvec3(bvec2(_GLF_IDENTITY(false, ! (! (false))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false)))), ! (! (bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, ! (! (false))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec2(bvec3(bvec2(_GLF_IDENTITY(false, ! (! (false))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false))))))))))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) && true)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     return;
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true))))
        return;
       return;
      }
     return;
    }
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  barrier();
 uint virtual_gid = workgroup_base + _GLF_IDENTITY(subgroup_id * subgroup_size, ~ (~ (subgroup_id * subgroup_size))) + subgroup_local_id;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec4(_GLF_DEAD(false), true, false, true)), ! (! (bool(bvec4(_GLF_DEAD(false), true, false, true)))))))
    return;
   return;
  }
 uint next_virtual_gid = workgroup_base + subgroup_id * subgroup_size + ((_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, (1) | (_GLF_IDENTITY(1, 0 ^ (_GLF_IDENTITY(1, 0 ^ (_GLF_IDENTITY(1, (1) << 0))))))), min(_GLF_IDENTITY(subgroup_local_id + 1, max(subgroup_local_id + 1, subgroup_local_id + 1)), _GLF_IDENTITY(subgroup_local_id + 1, _GLF_IDENTITY((subgroup_local_id + 1), 0u ^ (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id + 1, 0u ^ (subgroup_local_id + 1))), ~ (_GLF_IDENTITY(~ ((_GLF_IDENTITY(subgroup_local_id + 1, 0u ^ (subgroup_local_id + 1)))), (~ ((_GLF_IDENTITY(subgroup_local_id + 1, 0u ^ (subgroup_local_id + 1))))) << 0u))))) * 1u)))) % subgroup_size);
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  barrier();
 uint read_1 = atomicLoad(buf[virtual_gid], 4, 64, _GLF_IDENTITY(0, ~ (~ (_GLF_IDENTITY(0, 0 ^ (0))))));
 atomicStore(buf[_GLF_IDENTITY(next_virtual_gid, max(next_virtual_gid, _GLF_IDENTITY(next_virtual_gid, _GLF_IDENTITY(clamp(next_virtual_gid, _GLF_IDENTITY(next_virtual_gid, (0u >> _GLF_IDENTITY(uint(1u), _GLF_IDENTITY(uint(1u), min(_GLF_IDENTITY(uint(1u), (true ? uint(1u) : _GLF_FUZZED(subgroup_local_id))), uint(1u))))) ^ (next_virtual_gid)), next_virtual_gid), min(clamp(_GLF_IDENTITY(next_virtual_gid, uint(_GLF_IDENTITY(uvec4(next_virtual_gid, 1u, 1u, 0u), (uvec4(next_virtual_gid, 1u, _GLF_IDENTITY(1u, (1u) | (1u)), 0u)) | uvec4(0u, 0u, _GLF_IDENTITY(0u, clamp(0u, 0u, 0u)), _GLF_IDENTITY(0u, (0u) * 1u))))), next_virtual_gid, next_virtual_gid), _GLF_IDENTITY(clamp(next_virtual_gid, next_virtual_gid, next_virtual_gid), (clamp(next_virtual_gid, next_virtual_gid, next_virtual_gid)) - 0u))))))], _GLF_IDENTITY(uint(read_1 + 1), (0u >> _GLF_IDENTITY(uint(2u), uint(2u))) | (_GLF_IDENTITY(uint(read_1 + 1), (false ? _GLF_FUZZED(next_virtual_gid) : uint(read_1 + 1))))), 4, _GLF_IDENTITY(64, (64) * 1), _GLF_IDENTITY(4, (true ? _GLF_IDENTITY(4, min(4, 4)) : _GLF_FUZZED(-22195))));
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, (false) || false)))))
  {
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     return;
    }
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, true && (false)), (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), ! (! (_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((false), ((false)) && true))))))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec3(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bool(injectionSwitch.x > injectionSwitch.y))), false, false)))))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         return;
        }
       return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   barrier();
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false), bvec2(bvec3(bvec2(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), (bool(_GLF_IDENTITY(bvec2(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false), bvec2(bvec3(bvec2(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))) && true)))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(7494.1201)), vec2(_GLF_FUZZED(-87.99), (injectionSwitch)[1]), bvec2(false, true))).y))))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
    }
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          return;
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
       if(_GLF_DEAD(false))
        return;
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         return;
        }
       if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
        return;
       if(_GLF_DEAD(false))
        return;
       barrier();
       if(_GLF_DEAD(false))
        return;
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         return;
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         return;
        }
       barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY((injectionSwitch)[0], min((injectionSwitch)[0], (injectionSwitch)[0])), _GLF_FUZZED(3.9)), vec2(_GLF_FUZZED(613.925), (injectionSwitch)[1]), bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))).y))))
          barrier();
         barrier();
        }
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false)), (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
        barrier();
       return;
      }
     return;
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))), bool(bvec3(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))), false, true))))
    barrier();
   if(_GLF_DEAD(false))
    return;
  }
 uint read_2 = atomicLoad(buf[_GLF_IDENTITY(virtual_gid, max(_GLF_IDENTITY(_GLF_IDENTITY(virtual_gid, _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec4(virtual_gid, 0u, _GLF_IDENTITY((0u >> _GLF_IDENTITY(uint(3u), uint(3u))), ((0u >> _GLF_IDENTITY(uint(3u), uint(3u)))) << 0u), (_GLF_IDENTITY(0u << _GLF_IDENTITY(uint(6u), _GLF_IDENTITY(uint(6u), (uint(6u)) << _GLF_IDENTITY(0u, uint(uvec4(0u, ((1u << _GLF_IDENTITY(uint(7u), uint(7u))) >> _GLF_IDENTITY(uint(7u), uint(7u))), uint(_GLF_ONE(1.0, injectionSwitch.y)), 1u))))), (false ? _GLF_FUZZED((-- workgroup_size)) : 0u << _GLF_IDENTITY(uint(6u), _GLF_IDENTITY(uint(6u), (uint(6u)) << _GLF_IDENTITY(0u, uint(uvec4(0u, ((1u << _GLF_IDENTITY(uint(_GLF_IDENTITY(7u, (false ? _GLF_FUZZED(next_virtual_gid) : 7u))), uint(7u))) >> _GLF_IDENTITY(uint(7u), uint(7u))), uint(_GLF_ONE(1.0, injectionSwitch.y)), 1u))))))))), ~ (~ (uvec4(virtual_gid, 0u, _GLF_IDENTITY((0u >> _GLF_IDENTITY(uint(3u), uint(3u))), ((0u >> _GLF_IDENTITY(uint(3u), uint(3u)))) << 0u), (_GLF_IDENTITY(0u << _GLF_IDENTITY(uint(6u), _GLF_IDENTITY(uint(6u), (uint(6u)) << _GLF_IDENTITY(0u, uint(uvec4(0u, ((1u << _GLF_IDENTITY(uint(7u), uint(7u))) >> _GLF_IDENTITY(uint(7u), uint(7u))), uint(_GLF_ONE(1.0, injectionSwitch.y)), 1u))))), (false ? _GLF_FUZZED((-- workgroup_size)) : 0u << _GLF_IDENTITY(uint(6u), _GLF_IDENTITY(uint(6u), (uint(6u)) << _GLF_IDENTITY(0u, uint(uvec4(0u, ((1u << _GLF_IDENTITY(uint(_GLF_IDENTITY(7u, (false ? _GLF_FUZZED(next_virtual_gid) : 7u))), uint(7u))) >> _GLF_IDENTITY(uint(7u), uint(7u))), uint(_GLF_ONE(1.0, injectionSwitch.y)), 1u))))))))))))), min(uint(_GLF_IDENTITY(uvec4(virtual_gid, 0u, (0u >> _GLF_IDENTITY(uint(3u), uint(3u))), (_GLF_IDENTITY(0u << _GLF_IDENTITY(uint(6u), _GLF_IDENTITY(_GLF_IDENTITY(uint(6u), ~ (~ (uint(6u)))), (_GLF_IDENTITY(_GLF_IDENTITY(uint(6u), max(uint(6u), uint(_GLF_IDENTITY(6u, clamp(_GLF_IDENTITY(6u, 1u * (6u)), 6u, 6u))))), max(_GLF_IDENTITY(uint(6u), _GLF_IDENTITY(_GLF_IDENTITY(max(uint(6u), uint(6u)), (false ? _GLF_FUZZED(69915u) : max(uint(6u), _GLF_IDENTITY(uint(6u), (uint(6u)) ^ 0u)))), clamp(_GLF_IDENTITY(max(uint(6u), uint(6u)), (false ? _GLF_FUZZED(69915u) : max(uint(6u), _GLF_IDENTITY(uint(6u), (uint(6u)) ^ 0u)))), _GLF_IDENTITY(max(uint(6u), uint(6u)), (false ? _GLF_FUZZED(69915u) : max(uint(6u), _GLF_IDENTITY(uint(6u), (uint(6u)) ^ 0u)))), _GLF_IDENTITY(_GLF_IDENTITY(max(uint(6u), uint(6u)), (false ? _GLF_FUZZED(69915u) : max(uint(6u), _GLF_IDENTITY(uint(6u), (uint(6u)) ^ 0u)))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(max(uint(6u), uint(6u)), (false ? _GLF_FUZZED(69915u) : max(uint(6u), _GLF_IDENTITY(uint(6u), (uint(6u)) ^ 0u)))), (true ? _GLF_IDENTITY(max(uint(6u), uint(6u)), (false ? _GLF_FUZZED(69915u) : max(uint(6u), _GLF_IDENTITY(uint(6u), (uint(6u)) ^ 0u)))) : _GLF_FUZZED(subgroup_id))), _GLF_IDENTITY(max(uint(6u), uint(6u)), (false ? _GLF_FUZZED(69915u) : max(uint(6u), _GLF_IDENTITY(uint(6u), (uint(6u)) ^ 0u)))), _GLF_IDENTITY(max(uint(6u), uint(6u)), (false ? _GLF_FUZZED(69915u) : max(uint(6u), _GLF_IDENTITY(uint(6u), (uint(6u)) ^ 0u))))))))), _GLF_IDENTITY(uint(6u), (uint(_GLF_IDENTITY(6u, _GLF_IDENTITY(uint(uvec2(_GLF_IDENTITY(6u, (6u) / 1u), 0u)), uint(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (uint(uvec2(_GLF_IDENTITY(6u, (6u) / 1u), 0u))))))) + 0u)))) << 0u)), (_GLF_IDENTITY(0u << _GLF_IDENTITY(uint(6u), _GLF_IDENTITY(_GLF_IDENTITY(uint(6u), ~ (~ (uint(6u)))), (_GLF_IDENTITY(_GLF_IDENTITY(uint(6u), max(uint(6u), uint(_GLF_IDENTITY(6u, clamp(_GLF_IDENTITY(6u, 1u * (6u)), 6u, 6u))))), max(_GLF_IDENTITY(uint(6u), _GLF_IDENTITY(_GLF_IDENTITY(max(uint(6u), uint(6u)), (false ? _GLF_FUZZED(69915u) : max(uint(6u), _GLF_IDENTITY(uint(6u), (uint(6u)) ^ 0u)))), clamp(_GLF_IDENTITY(max(uint(6u), uint(6u)), (false ? _GLF_FUZZED(69915u) : max(uint(6u), _GLF_IDENTITY(uint(6u), (uint(6u)) ^ 0u)))), _GLF_IDENTITY(max(uint(6u), uint(6u)), (false ? _GLF_FUZZED(69915u) : max(uint(6u), _GLF_IDENTITY(uint(6u), (uint(6u)) ^ 0u)))), _GLF_IDENTITY(_GLF_IDENTITY(max(uint(6u), uint(6u)), (false ? _GLF_FUZZED(69915u) : max(uint(6u), _GLF_IDENTITY(uint(6u), (uint(6u)) ^ 0u)))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(max(uint(6u), uint(6u)), (false ? _GLF_FUZZED(69915u) : max(uint(6u), _GLF_IDENTITY(uint(6u), (uint(6u)) ^ 0u)))), (true ? _GLF_IDENTITY(max(uint(6u), uint(6u)), (false ? _GLF_FUZZED(69915u) : max(uint(6u), _GLF_IDENTITY(uint(6u), (uint(6u)) ^ 0u)))) : _GLF_FUZZED(subgroup_id))), _GLF_IDENTITY(max(uint(6u), uint(6u)), (false ? _GLF_FUZZED(69915u) : max(uint(6u), _GLF_IDENTITY(uint(6u), (uint(6u)) ^ 0u)))), _GLF_IDENTITY(max(uint(6u), uint(6u)), (false ? _GLF_FUZZED(69915u) : max(uint(6u), _GLF_IDENTITY(uint(6u), (uint(6u)) ^ 0u))))))))), _GLF_IDENTITY(uint(6u), (uint(_GLF_IDENTITY(6u, _GLF_IDENTITY(uint(uvec2(_GLF_IDENTITY(6u, (6u) / 1u), 0u)), uint(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (uint(uvec2(_GLF_IDENTITY(6u, (6u) / 1u), 0u))))))) + 0u)))) << 0u)), max(0u << _GLF_IDENTITY(uint(6u), _GLF_IDENTITY(_GLF_IDENTITY(uint(6u), ~ (~ (uint(6u)))), (_GLF_IDENTITY(_GLF_IDENTITY(uint(6u), max(uint(6u), uint(_GLF_IDENTITY(6u, clamp(_GLF_IDENTITY(6u, 1u * (6u)), 6u, 6u))))), max(_GLF_IDENTITY(uint(6u), _GLF_IDENTITY(_GLF_IDENTITY(max(uint(6u), uint(6u)), (false ? _GLF_FUZZED(69915u) : max(uint(6u), _GLF_IDENTITY(uint(6u), (uint(6u)) ^ 0u)))), clamp(_GLF_IDENTITY(max(uint(6u), uint(6u)), (false ? _GLF_FUZZED(69915u) : max(uint(6u), _GLF_IDENTITY(uint(6u), (uint(6u)) ^ 0u)))), _GLF_IDENTITY(max(uint(6u), uint(6u)), (false ? _GLF_FUZZED(69915u) : max(uint(6u), _GLF_IDENTITY(uint(6u), (uint(6u)) ^ 0u)))), _GLF_IDENTITY(_GLF_IDENTITY(max(uint(6u), uint(6u)), (false ? _GLF_FUZZED(69915u) : max(uint(6u), _GLF_IDENTITY(uint(6u), (uint(6u)) ^ 0u)))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(max(uint(6u), uint(6u)), (false ? _GLF_FUZZED(69915u) : max(uint(6u), _GLF_IDENTITY(uint(6u), (uint(6u)) ^ 0u)))), (true ? _GLF_IDENTITY(max(uint(6u), uint(6u)), (false ? _GLF_FUZZED(69915u) : max(uint(6u), _GLF_IDENTITY(uint(6u), (uint(6u)) ^ 0u)))) : _GLF_FUZZED(subgroup_id))), _GLF_IDENTITY(max(uint(6u), uint(6u)), (false ? _GLF_FUZZED(69915u) : max(uint(6u), _GLF_IDENTITY(uint(6u), (uint(6u)) ^ 0u)))), _GLF_IDENTITY(max(uint(6u), uint(6u)), (false ? _GLF_FUZZED(69915u) : max(uint(6u), _GLF_IDENTITY(uint(6u), (uint(6u)) ^ 0u))))))))), _GLF_IDENTITY(uint(6u), (uint(_GLF_IDENTITY(6u, _GLF_IDENTITY(uint(uvec2(_GLF_IDENTITY(6u, (6u) / 1u), 0u)), uint(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (uint(uvec2(_GLF_IDENTITY(6u, (6u) / 1u), 0u))))))) + 0u)))) << 0u)), 0u << _GLF_IDENTITY(uint(6u), _GLF_IDENTITY(_GLF_IDENTITY(uint(6u), ~ (~ (uint(6u)))), (_GLF_IDENTITY(_GLF_IDENTITY(uint(6u), max(uint(6u), uint(_GLF_IDENTITY(6u, clamp(_GLF_IDENTITY(6u, 1u * (6u)), 6u, 6u))))), max(_GLF_IDENTITY(uint(6u), _GLF_IDENTITY(_GLF_IDENTITY(max(uint(6u), uint(6u)), (false ? _GLF_FUZZED(69915u) : max(uint(6u), _GLF_IDENTITY(uint(6u), (uint(6u)) ^ 0u)))), clamp(_GLF_IDENTITY(max(uint(6u), uint(6u)), (false ? _GLF_FUZZED(69915u) : max(uint(6u), _GLF_IDENTITY(uint(6u), (uint(6u)) ^ 0u)))), _GLF_IDENTITY(max(uint(6u), uint(6u)), (false ? _GLF_FUZZED(69915u) : max(uint(6u), _GLF_IDENTITY(uint(6u), (uint(6u)) ^ 0u)))), _GLF_IDENTITY(_GLF_IDENTITY(max(uint(6u), uint(6u)), (false ? _GLF_FUZZED(69915u) : max(uint(6u), _GLF_IDENTITY(uint(6u), (uint(6u)) ^ 0u)))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(max(uint(6u), uint(6u)), (false ? _GLF_FUZZED(69915u) : max(uint(6u), _GLF_IDENTITY(uint(6u), (uint(6u)) ^ 0u)))), (true ? _GLF_IDENTITY(max(uint(6u), uint(6u)), (false ? _GLF_FUZZED(69915u) : max(uint(6u), _GLF_IDENTITY(uint(6u), (uint(6u)) ^ 0u)))) : _GLF_FUZZED(subgroup_id))), _GLF_IDENTITY(max(uint(6u), uint(6u)), (false ? _GLF_FUZZED(69915u) : max(uint(6u), _GLF_IDENTITY(uint(6u), (uint(6u)) ^ 0u)))), _GLF_IDENTITY(max(uint(6u), uint(6u)), (false ? _GLF_FUZZED(69915u) : max(uint(6u), _GLF_IDENTITY(uint(6u), (uint(6u)) ^ 0u))))))))), _GLF_IDENTITY(uint(6u), (uint(_GLF_IDENTITY(6u, _GLF_IDENTITY(uint(uvec2(_GLF_IDENTITY(6u, (6u) / 1u), 0u)), uint(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (uint(uvec2(_GLF_IDENTITY(6u, (6u) / 1u), 0u))))))) + 0u)))) << 0u))))) ^ 0u))), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? uvec4(virtual_gid, 0u, _GLF_IDENTITY((0u >> _GLF_IDENTITY(uint(3u), uint(3u))), ((0u >> _GLF_IDENTITY(uint(3u), uint(3u)))) ^ 0u), (0u << _GLF_IDENTITY(_GLF_IDENTITY(uint(6u), _GLF_IDENTITY(_GLF_IDENTITY(uint(6u), ~ (_GLF_IDENTITY(~ (uint(6u)), min(~ (uint(6u)), ~ (uint(6u)))))), (_GLF_IDENTITY(_GLF_IDENTITY(uint(6u), max(uint(6u), uint(6u))), _GLF_IDENTITY(max(_GLF_IDENTITY(uint(6u), _GLF_IDENTITY(max(uint(6u), uint(6u)), (false ? _GLF_FUZZED(69915u) : max(uint(6u), _GLF_IDENTITY(uint(6u), (uint(6u)) ^ 0u))))), _GLF_IDENTITY(uint(6u), (uint(_GLF_IDENTITY(6u, uint(uvec2(6u, 0u))))) + 0u)), uint(uvec2(max(_GLF_IDENTITY(uint(6u), _GLF_IDENTITY(max(uint(6u), uint(6u)), (false ? _GLF_FUZZED(69915u) : max(uint(6u), _GLF_IDENTITY(uint(6u), (uint(6u)) ^ 0u))))), _GLF_IDENTITY(uint(6u), (uint(_GLF_IDENTITY(6u, uint(uvec2(6u, 0u))))) + 0u)), _GLF_IDENTITY(1u, (1u) - 0u)))))) << 0u)), ~ (~ (_GLF_IDENTITY(uint(6u), _GLF_IDENTITY(_GLF_IDENTITY(uint(6u), ~ (_GLF_IDENTITY(_GLF_IDENTITY(~ (uint(6u)), min(~ (uint(6u)), ~ (uint(6u)))), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(~ (uint(6u)), min(~ (uint(6u)), ~ (uint(6u)))), (_GLF_IDENTITY(~ (uint(6u)), min(~ (uint(6u)), ~ (uint(6u))))) | 0u)))))), (_GLF_IDENTITY(_GLF_IDENTITY(uint(6u), max(uint(6u), uint(6u))), _GLF_IDENTITY(max(_GLF_IDENTITY(uint(6u), _GLF_IDENTITY(max(uint(6u), uint(_GLF_IDENTITY(6u, 0u ^ (_GLF_IDENTITY(6u, (6u) ^ 0u))))), (false ? _GLF_FUZZED(69915u) : max(uint(6u), _GLF_IDENTITY(uint(6u), (uint(6u)) ^ 0u))))), _GLF_IDENTITY(uint(6u), (uint(_GLF_IDENTITY(6u, uint(_GLF_IDENTITY(uvec2(6u, 0u), max(_GLF_IDENTITY(uvec2(6u, 0u), (uvec2(0u, 0u) | uvec2(0u, 0u)) ^ (uvec2(6u, 0u))), uvec2(6u, 0u))))))) + 0u)), uint(uvec2(max(_GLF_IDENTITY(uint(6u), _GLF_IDENTITY(max(uint(6u), uint(6u)), (false ? _GLF_FUZZED(69915u) : max(uint(6u), _GLF_IDENTITY(uint(6u), _GLF_IDENTITY((uint(6u)) ^ 0u, (_GLF_IDENTITY((uint(6u)) ^ 0u, 0u ^ ((uint(6u)) ^ 0u))) | ((uint(6u)) ^ 0u))))))), _GLF_IDENTITY(uint(6u), _GLF_IDENTITY((uint(_GLF_IDENTITY(6u, uint(uvec2(_GLF_IDENTITY(6u, min(6u, 6u)), 0u))))), (true ? (uint(_GLF_IDENTITY(_GLF_IDENTITY(6u, uint(uvec2(6u, 0u))), max(_GLF_IDENTITY(6u, uint(uvec2(6u, 0u))), _GLF_IDENTITY(6u, uint(uvec2(6u, 0u))))))) : _GLF_FUZZED(workgroup_base))) + 0u)), _GLF_IDENTITY(1u, (1u) - _GLF_IDENTITY(0u, uint(uvec2(0u, 1u))))))))) << 0u))))))) : _GLF_FUZZED(uvec4(180295u, 14676u, 189580u, 53077u))))), uint(uvec4(virtual_gid, 0u, (0u >> _GLF_IDENTITY(uint(3u), uint(3u))), (0u << _GLF_IDENTITY(_GLF_IDENTITY(uint(6u), (uint(6u)) | 0u), _GLF_IDENTITY(uint(6u), (_GLF_IDENTITY(uint(6u), (_GLF_IDENTITY(false, true && (false)) ? _GLF_FUZZED(_GLF_IDENTITY(subgroup_size, min(_GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size)), subgroup_size))) : uint(6u)))) << 0u)))))))), (virtual_gid) | (virtual_gid)), _GLF_IDENTITY(virtual_gid, (_GLF_IDENTITY(true ? virtual_gid : _GLF_FUZZED(next_virtual_gid), (true ? virtual_gid : _GLF_FUZZED(next_virtual_gid)) * 1u)))))], 4, 64, 0);
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(unpackHalf2x16(virtual_gid)) : injectionSwitch)).y))))
  return;
 if(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, clamp(subgroup_local_id, subgroup_local_id, subgroup_local_id)), uint(uint(_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY(clamp(subgroup_local_id, subgroup_local_id, _GLF_IDENTITY(subgroup_local_id, min(subgroup_local_id, subgroup_local_id))), (true ? clamp(subgroup_local_id, subgroup_local_id, _GLF_IDENTITY(subgroup_local_id, min(subgroup_local_id, _GLF_IDENTITY(subgroup_local_id, (false ? _GLF_FUZZED(subgroup_local_id) : subgroup_local_id))))) : _GLF_FUZZED(uint(-439.834)))))))) + 1 < subgroup_size)
  {
   if(_GLF_DEAD(false))
    return;
   int i = 0;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    return;
   atomicStore(buf[next_virtual_gid], _GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(read_1 + 1 == read_2, ! (! (_GLF_IDENTITY(read_1 + 1 == read_2, ! (! (read_1 + 1 == read_2))))))) + 1, _GLF_IDENTITY(uint(_GLF_IDENTITY(uint(uint(_GLF_IDENTITY(read_1, min(read_1, _GLF_IDENTITY(read_1, (read_1) | (read_1)))) + _GLF_IDENTITY(1, (1) << _GLF_IDENTITY(0, max(_GLF_IDENTITY(0, ~ (~ (0))), _GLF_IDENTITY(0, int(int(0)))))) == read_2) + 1), uint(uint(uint(uint(read_1 + 1 == read_2) + 1))))), uint(uint(uint(_GLF_IDENTITY(uint(_GLF_IDENTITY(uint(read_1 + 1 == read_2) + 1, (_GLF_IDENTITY(uint(read_1 + 1 == read_2) + _GLF_IDENTITY(1, int(ivec4(_GLF_IDENTITY(1, ~ (~ (1))), int(_GLF_ZERO(0.0, injectionSwitch.x)), 0, 1))), 0u + (uint(_GLF_IDENTITY(read_1 + 1, (read_1 + 1) << 0u) == read_2) + 1))) + 0u)), uint(uint(uint(uint(read_1 + 1 == read_2) + 1))))))))), _GLF_IDENTITY(uint(uvec2(_GLF_IDENTITY(uint(read_1 + _GLF_IDENTITY(1, max(1, 1)) == read_2) + 1, _GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_IDENTITY(uint(uint(read_1 + 1 == read_2) + 1), uint(uint(uint(uint(read_1 + 1 == read_2) + 1)))), uint(_GLF_IDENTITY(uint(_GLF_IDENTITY(uint(uint(read_1 + 1 == read_2) + 1), uint(uint(uint(uint(read_1 + 1 == read_2) + 1))))), (uint(_GLF_IDENTITY(uint(uint(read_1 + 1 == read_2) + 1), uint(uint(uint(uint(read_1 + 1 == read_2) + 1)))))) | (_GLF_IDENTITY(uint(_GLF_IDENTITY(uint(uint(read_1 + 1 == read_2) + 1), uint(uint(uint(uint(read_1 + 1 == read_2) + 1))))), 0u ^ (uint(_GLF_IDENTITY(uint(uint(read_1 + 1 == read_2) + 1), uint(uint(uint(uint(read_1 + 1 == read_2) + 1)))))))))))), uint(uint(uint(_GLF_IDENTITY(uint(uint(read_1 + 1 == read_2) + 1), uint(uint(uint(uint(read_1 + 1 == read_2) + 1))))))))), 0u)), (uint(uvec2(_GLF_IDENTITY(uint(read_1 + 1 == read_2) + _GLF_IDENTITY(1, 1 * (1)), _GLF_IDENTITY(uint(_GLF_IDENTITY(uint(uint(read_1 + 1 == read_2) + 1), uint(uint(uint(uint(read_1 + 1 == read_2) + 1))))), uint(_GLF_IDENTITY(uint(_GLF_IDENTITY(uint(_GLF_IDENTITY(uint(uint(read_1 + 1 == read_2) + 1), uint(uint(uint(uint(_GLF_IDENTITY(read_1 + _GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) / 1)) + 0), (_GLF_IDENTITY(read_1 + _GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) / 1)) + 0), ~ (~ (read_1 + _GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) / 1)) + 0))))) << 0u) == read_2) + 1))))), clamp(uint(_GLF_IDENTITY(uint(uint(read_1 + 1 == read_2) + 1), uint(uint(uint(uint(_GLF_IDENTITY(read_1 + _GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) / 1)) + 0), (_GLF_IDENTITY(read_1 + _GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) / 1)) + 0), ~ (~ (read_1 + _GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) / 1)) + 0))))) << 0u) == read_2) + 1))))), _GLF_IDENTITY(uint(_GLF_IDENTITY(uint(uint(read_1 + 1 == read_2) + 1), uint(uint(uint(_GLF_IDENTITY(uint(_GLF_IDENTITY(read_1 + _GLF_IDENTITY(1, (_GLF_IDENTITY(1, _GLF_IDENTITY((1) / 1, (0 | 1) * ((1) / 1)))) + 0), _GLF_IDENTITY((_GLF_IDENTITY(read_1 + _GLF_IDENTITY(1, (_GLF_IDENTITY(1, _GLF_IDENTITY((1) / 1, max((1) / 1, (1) / 1)))) + 0), ~ (_GLF_IDENTITY(~ (read_1 + _GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) / 1)) + 0)), min(~ (read_1 + _GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) / 1)) + 0)), _GLF_IDENTITY(~ (read_1 + _GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) / 1)) + 0)), (~ (read_1 + _GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) / 1)) + 0))) | (~ (read_1 + _GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) / 1)) + 0))))))))), (0u | 0u) + ((_GLF_IDENTITY(read_1 + _GLF_IDENTITY(1, (_GLF_IDENTITY(1, _GLF_IDENTITY((1) / 1, max((1) / 1, (1) / 1)))) + 0), ~ (_GLF_IDENTITY(~ (read_1 + _GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) / 1)) + 0)), min(~ (read_1 + _GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) / 1)) + 0)), _GLF_IDENTITY(~ (read_1 + _GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) / 1)) + 0)), (~ (read_1 + _GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) / 1)) + 0))) | (~ (read_1 + _GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) / 1)) + 0))))))))))) << 0u) == read_2), (uint(_GLF_IDENTITY(read_1 + _GLF_IDENTITY(1, (_GLF_IDENTITY(1, _GLF_IDENTITY((1) / 1, (0 | 1) * ((1) / 1)))) + 0), _GLF_IDENTITY((_GLF_IDENTITY(read_1 + _GLF_IDENTITY(1, (_GLF_IDENTITY(1, _GLF_IDENTITY((1) / 1, max((1) / 1, (1) / 1)))) + 0), ~ (_GLF_IDENTITY(~ (read_1 + _GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) / 1)) + 0)), min(~ (read_1 + _GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) / 1)) + 0)), _GLF_IDENTITY(~ (read_1 + _GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) / 1)) + 0)), (~ (read_1 + _GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) / 1)) + 0))) | (~ (read_1 + _GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) / 1)) + 0))))))))), (0u | 0u) + ((_GLF_IDENTITY(read_1 + _GLF_IDENTITY(1, (_GLF_IDENTITY(1, _GLF_IDENTITY((1) / 1, max((1) / 1, (1) / 1)))) + 0), ~ (_GLF_IDENTITY(~ (read_1 + _GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) / 1)) + 0)), min(~ (read_1 + _GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) / 1)) + 0)), _GLF_IDENTITY(~ (read_1 + _GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) / 1)) + 0)), (~ (read_1 + _GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) / 1)) + 0))) | (~ (read_1 + _GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) / 1)) + 0))))))))))) << 0u) == read_2)) | (uint(_GLF_IDENTITY(read_1 + _GLF_IDENTITY(1, (_GLF_IDENTITY(1, _GLF_IDENTITY((1) / 1, (0 | 1) * ((1) / 1)))) + 0), _GLF_IDENTITY((_GLF_IDENTITY(read_1 + _GLF_IDENTITY(1, (_GLF_IDENTITY(1, _GLF_IDENTITY((1) / 1, max((1) / 1, (1) / 1)))) + 0), ~ (_GLF_IDENTITY(~ (read_1 + _GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) / 1)) + 0)), min(~ (read_1 + _GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) / 1)) + 0)), _GLF_IDENTITY(~ (read_1 + _GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) / 1)) + 0)), (~ (read_1 + _GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) / 1)) + 0))) | (~ (read_1 + _GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) / 1)) + 0))))))))), (0u | 0u) + ((_GLF_IDENTITY(read_1 + _GLF_IDENTITY(1, (_GLF_IDENTITY(1, _GLF_IDENTITY((1) / 1, max((1) / 1, (1) / 1)))) + 0), ~ (_GLF_IDENTITY(~ (read_1 + _GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) / 1)) + 0)), min(~ (read_1 + _GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) / 1)) + 0)), _GLF_IDENTITY(~ (read_1 + _GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) / 1)) + 0)), (~ (read_1 + _GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) / 1)) + 0))) | (~ (read_1 + _GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) / 1)) + 0))))))))))) << 0u) == read_2))) + 1))))), (true ? uint(_GLF_IDENTITY(uint(uint(read_1 + 1 == read_2) + 1), uint(uint(uint(uint(_GLF_IDENTITY(read_1 + _GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) / 1)) + 0), (_GLF_IDENTITY(read_1 + _GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) / 1)) + 0), ~ (~ (read_1 + _GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) / 1)) + 0))))) << 0u) == read_2) + 1))))) : _GLF_IDENTITY(_GLF_FUZZED(num_workgroup), uint(uvec2(_GLF_FUZZED(num_workgroup), 1u))))), uint(_GLF_IDENTITY(uint(uint(read_1 + 1 == read_2) + 1), uint(uint(uint(uint(_GLF_IDENTITY(read_1 + _GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) / 1)) + 0), (_GLF_IDENTITY(read_1 + _GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) / 1)) + 0), ~ (~ (read_1 + _GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) / 1)) + 0))))) << 0u) == read_2) + 1)))))))), (uint(_GLF_IDENTITY(uint(_GLF_IDENTITY(uint(uint(read_1 + 1 == read_2) + 1), uint(uint(uint(uint(_GLF_IDENTITY(read_1 + _GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) / 1)) + 0), (_GLF_IDENTITY(read_1 + _GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) / 1)) + 0), ~ (~ (read_1 + _GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) / 1)) + 0))))) << 0u) == read_2) + 1))))), clamp(uint(_GLF_IDENTITY(uint(uint(read_1 + 1 == read_2) + 1), uint(uint(uint(uint(_GLF_IDENTITY(read_1 + _GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) / 1)) + 0), (_GLF_IDENTITY(read_1 + _GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) / 1)) + 0), ~ (~ (read_1 + _GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) / 1)) + 0))))) << 0u) == read_2) + 1))))), _GLF_IDENTITY(uint(_GLF_IDENTITY(uint(uint(read_1 + 1 == read_2) + 1), uint(uint(uint(_GLF_IDENTITY(uint(_GLF_IDENTITY(read_1 + _GLF_IDENTITY(1, (_GLF_IDENTITY(1, _GLF_IDENTITY((1) / 1, (0 | 1) * ((1) / 1)))) + 0), _GLF_IDENTITY((_GLF_IDENTITY(read_1 + _GLF_IDENTITY(1, (_GLF_IDENTITY(1, _GLF_IDENTITY((1) / 1, max((1) / 1, (1) / 1)))) + 0), ~ (_GLF_IDENTITY(~ (read_1 + _GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) / 1)) + 0)), min(~ (read_1 + _GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) / 1)) + 0)), _GLF_IDENTITY(~ (read_1 + _GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) / 1)) + 0)), (~ (read_1 + _GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) / 1)) + 0))) | (~ (read_1 + _GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) / 1)) + 0))))))))), (0u | 0u) + ((_GLF_IDENTITY(read_1 + _GLF_IDENTITY(1, (_GLF_IDENTITY(1, _GLF_IDENTITY((1) / 1, max((1) / 1, (1) / 1)))) + 0), ~ (_GLF_IDENTITY(~ (read_1 + _GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) / 1)) + 0)), min(~ (read_1 + _GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) / 1)) + 0)), _GLF_IDENTITY(~ (read_1 + _GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) / 1)) + 0)), (~ (read_1 + _GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) / 1)) + 0))) | (~ (read_1 + _GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) / 1)) + 0))))))))))) << 0u) == read_2), (uint(_GLF_IDENTITY(read_1 + _GLF_IDENTITY(1, (_GLF_IDENTITY(1, _GLF_IDENTITY((1) / 1, (0 | 1) * ((1) / 1)))) + 0), _GLF_IDENTITY((_GLF_IDENTITY(read_1 + _GLF_IDENTITY(1, (_GLF_IDENTITY(1, _GLF_IDENTITY((1) / 1, max((1) / 1, (1) / 1)))) + 0), ~ (_GLF_IDENTITY(~ (read_1 + _GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) / 1)) + 0)), min(~ (read_1 + _GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) / 1)) + 0)), _GLF_IDENTITY(~ (read_1 + _GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) / 1)) + 0)), (~ (read_1 + _GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) / 1)) + 0))) | (~ (read_1 + _GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) / 1)) + 0))))))))), (0u | 0u) + ((_GLF_IDENTITY(read_1 + _GLF_IDENTITY(1, (_GLF_IDENTITY(1, _GLF_IDENTITY((1) / 1, max((1) / 1, (1) / 1)))) + 0), ~ (_GLF_IDENTITY(~ (read_1 + _GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) / 1)) + 0)), min(~ (read_1 + _GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) / 1)) + 0)), _GLF_IDENTITY(~ (read_1 + _GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) / 1)) + 0)), (~ (read_1 + _GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) / 1)) + 0))) | (~ (read_1 + _GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) / 1)) + 0))))))))))) << 0u) == read_2)) | (uint(_GLF_IDENTITY(read_1 + _GLF_IDENTITY(1, (_GLF_IDENTITY(1, _GLF_IDENTITY((1) / 1, (0 | 1) * ((1) / 1)))) + 0), _GLF_IDENTITY((_GLF_IDENTITY(read_1 + _GLF_IDENTITY(1, (_GLF_IDENTITY(1, _GLF_IDENTITY((1) / 1, max((1) / 1, (1) / 1)))) + 0), ~ (_GLF_IDENTITY(~ (read_1 + _GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) / 1)) + 0)), min(~ (read_1 + _GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) / 1)) + 0)), _GLF_IDENTITY(~ (read_1 + _GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) / 1)) + 0)), (~ (read_1 + _GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) / 1)) + 0))) | (~ (read_1 + _GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) / 1)) + 0))))))))), (0u | 0u) + ((_GLF_IDENTITY(read_1 + _GLF_IDENTITY(1, (_GLF_IDENTITY(1, _GLF_IDENTITY((1) / 1, max((1) / 1, (1) / 1)))) + 0), ~ (_GLF_IDENTITY(~ (read_1 + _GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) / 1)) + 0)), min(~ (read_1 + _GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) / 1)) + 0)), _GLF_IDENTITY(~ (read_1 + _GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) / 1)) + 0)), (~ (read_1 + _GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) / 1)) + 0))) | (~ (read_1 + _GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) / 1)) + 0))))))))))) << 0u) == read_2))) + 1))))), (true ? uint(_GLF_IDENTITY(uint(uint(read_1 + 1 == read_2) + 1), uint(uint(uint(uint(_GLF_IDENTITY(read_1 + _GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) / 1)) + 0), (_GLF_IDENTITY(read_1 + _GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) / 1)) + 0), ~ (~ (read_1 + _GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) / 1)) + 0))))) << 0u) == read_2) + 1))))) : _GLF_IDENTITY(_GLF_FUZZED(num_workgroup), uint(uvec2(_GLF_FUZZED(num_workgroup), 1u))))), uint(_GLF_IDENTITY(uint(uint(read_1 + 1 == read_2) + 1), uint(uint(uint(uint(_GLF_IDENTITY(read_1 + _GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) / 1)) + 0), (_GLF_IDENTITY(read_1 + _GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) / 1)) + 0), ~ (~ (read_1 + _GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) / 1)) + 0))))) << 0u) == read_2) + 1))))))))) | 0u)))), 0u))) ^ 0u)), 4, 64, 4);
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        return;
       return;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          return;
         barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            return;
           return;
          }
        }
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         barrier();
        }
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED((4.1 - -2.0))), float(injectionSwitch.x), bool(true))) > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         return;
        }
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), (injectionSwitch) + vec2(0.0, 0.0)).y))), bool(bvec2(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)).y, _GLF_IDENTITY(max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)).y, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)).y : _GLF_FUZZED(pow(1.8, 9.3)))), _GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)).y), max(max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)).y, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)).y : _GLF_FUZZED(pow(1.8, 9.3)))), _GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)).y), _GLF_IDENTITY(max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)).y, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)).y : _GLF_FUZZED(pow(1.8, 9.3)))), _GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)).y), mix(float(_GLF_FUZZED(18.72)), float(_GLF_IDENTITY(max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)).y, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)).y : _GLF_FUZZED(pow(1.8, 9.3)))), _GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)).y), mix(float(_GLF_FUZZED(-753.790)), float(max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)).y, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)).y : _GLF_FUZZED(pow(1.8, 9.3)))), _GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)).y)), bool(true)))), bool(true))))))))), true))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bool(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y)), false || (bool(bool(injectionSwitch.x > injectionSwitch.y))))))), _GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bool(injectionSwitch.x > injectionSwitch.y)), false || (bool(bool(injectionSwitch.x > injectionSwitch.y)))))))), (! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bool(injectionSwitch.x > injectionSwitch.y)), false || (bool(bool(injectionSwitch.x > injectionSwitch.y))))))))) && true), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bool(injectionSwitch.x > injectionSwitch.y)), false || (bool(bool(injectionSwitch.x > injectionSwitch.y)))))))), (! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bool(injectionSwitch.x > injectionSwitch.y)), false || (bool(bool(injectionSwitch.x > injectionSwitch.y))))))))) && true)), true && (_GLF_IDENTITY(! (_GLF_IDENTITY(! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bool(injectionSwitch.x > injectionSwitch.y)), false || (bool(bool(injectionSwitch.x > injectionSwitch.y)))))))), (! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bool(injectionSwitch.x > injectionSwitch.y)), false || (bool(bool(injectionSwitch.x > injectionSwitch.y))))))))) && true)), bool(bvec2(! (_GLF_IDENTITY(! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bool(injectionSwitch.x > injectionSwitch.y)), false || (bool(bool(injectionSwitch.x > injectionSwitch.y)))))))), (! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bool(injectionSwitch.x > injectionSwitch.y)), false || (bool(bool(injectionSwitch.x > injectionSwitch.y))))))))) && true)), true)))))))), (! (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bool(injectionSwitch.x > injectionSwitch.y)), false || (bool(bool(injectionSwitch.x > injectionSwitch.y)))))))), (! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bool(injectionSwitch.x > injectionSwitch.y)), false || (bool(bool(injectionSwitch.x > injectionSwitch.y))))))))) && true), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bool(injectionSwitch.x > injectionSwitch.y)), false || (bool(bool(injectionSwitch.x > injectionSwitch.y)))))))), (_GLF_IDENTITY(! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bool(injectionSwitch.x > injectionSwitch.y)), false || (bool(bool(injectionSwitch.x > injectionSwitch.y)))))))), ! (! (! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bool(injectionSwitch.x > injectionSwitch.y)), false || (bool(bool(injectionSwitch.x > injectionSwitch.y)))))))))))) && true)), true && (_GLF_IDENTITY(! (_GLF_IDENTITY(! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bool(injectionSwitch.x > injectionSwitch.y)), false || (bool(bool(injectionSwitch.x > injectionSwitch.y)))))))), (! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bool(injectionSwitch.x > injectionSwitch.y)), false || (bool(bool(injectionSwitch.x > injectionSwitch.y))))))))) && true)), bool(bvec2(! (_GLF_IDENTITY(! (_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch))) - vec2(0.0, 0.0)).x, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch))) - vec2(0.0, 0.0)).x, clamp(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch))) - vec2(0.0, 0.0)).x, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch))) - vec2(0.0, 0.0)).x, (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch))) - vec2(0.0, 0.0)).x) * 1.0), _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch))) - vec2(0.0, 0.0)).x))) / 1.0) > injectionSwitch.y, _GLF_IDENTITY(bool(bool(injectionSwitch.x > injectionSwitch.y)), false || (bool(bool(injectionSwitch.x > injectionSwitch.y)))))))), (! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bool(injectionSwitch.x > injectionSwitch.y)), false || (bool(bool(injectionSwitch.x > injectionSwitch.y))))))))) && true)), true))))))))) || false))))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         return;
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         barrier();
        }
       return;
       if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / cos(vec2(0.0, 0.0))).x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(false))
        return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
  }
 else
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(-2.7), _GLF_FUZZED(float(true))), bvec2(false, false))))).x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(true && (false), ! (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(true && (false), ! (! (true && (false))))), _GLF_IDENTITY(bool(bvec4(! (true && (false)), true, true, true)), bool(bvec4(bool(bvec4(! (true && (false)), _GLF_IDENTITY(true, false || (true)), true, true)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, false)))), true && (! (true && (false)))))))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        return;
       barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
        barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        return;
      }
     return;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   atomicStore(buf[next_virtual_gid], uint(_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1, clamp(read_1 + 1, read_1 + 1, read_1 + 1)), (read_1 + 1) | 0u) == read_2) + 1, 4, 64, 4);
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), mix(vec2((mat2(1.0) * (injectionSwitch))[0], _GLF_FUZZED(3239.6303)), vec2(_GLF_FUZZED(-325.684), (mat2(1.0) * (injectionSwitch))[1]), bvec2(false, true)))).x > _GLF_IDENTITY(injectionSwitch.y, 1.0 * (injectionSwitch.y))), ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, 1.0 * (injectionSwitch.y)))) || false))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         return;
        }
       return;
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))) / _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-6.3) : 1.0)))))))
    return;
  }
}
