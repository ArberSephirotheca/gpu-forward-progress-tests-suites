#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false)))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec2((injectionSwitch.x > injectionSwitch.y), true))), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint subgroup_id = gl_SubgroupID;
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false)))))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
  }
 uint num_workgroup = gl_NumWorkGroups.x;
 uint workgroup_size = _GLF_IDENTITY(gl_WorkGroupSize.x, ~ (~ (gl_WorkGroupSize.x)));
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false), false, true), bvec3(bvec4(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false), false, true), false))))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, false, _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, true, true)), bool(bvec3(bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, true, true)), true, false)))), false)))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch), min((injectionSwitch), (injectionSwitch))) - vec2(0.0, 0.0)).y, min(injectionSwitch.y, injectionSwitch.y))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 uint workgroup_id = gl_WorkGroupID.x;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 uint workgroup_base = workgroup_size * workgroup_id;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).y, max(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).y, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).y)), _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(_GLF_IDENTITY(vec4(injectionSwitch.y, 1.0, _GLF_IDENTITY(dot(vec2(0.0, 0.0), vec2(1.0, 1.0)), dot(vec2(0.0, 0.0), vec2(_GLF_IDENTITY(_GLF_IDENTITY(1.0, _GLF_IDENTITY(max(1.0, 1.0), min(max(1.0, 1.0), max(1.0, 1.0)))), (_GLF_IDENTITY(1.0, _GLF_IDENTITY(max(1.0, 1.0), min(max(1.0, 1.0), max(1.0, 1.0))))) * 1.0), 1.0))), _GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, (0.0) * 1.0), 0.0))), mix(vec4(_GLF_FUZZED(1931.1557), (vec4(injectionSwitch.y, 1.0, _GLF_IDENTITY(_GLF_IDENTITY(dot(_GLF_IDENTITY(vec2(0.0, 0.0), (_GLF_IDENTITY(vec2(0.0, 0.0), min(vec2(0.0, 0.0), vec2(0.0, 0.0)))) + vec2(0.0, 0.0)), vec2(1.0, 1.0)), dot(vec2(0.0, 0.0), vec2(1.0, _GLF_IDENTITY(1.0, max(1.0, 1.0))))), (false ? _GLF_FUZZED(-4.2) : _GLF_IDENTITY(dot(vec2(0.0, 0.0), vec2(1.0, 1.0)), _GLF_IDENTITY(dot(vec2(0.0, 0.0), vec2(1.0, _GLF_IDENTITY(1.0, max(1.0, 1.0)))), clamp(dot(vec2(0.0, 0.0), vec2(1.0, _GLF_IDENTITY(1.0, max(1.0, 1.0)))), dot(vec2(0.0, 0.0), vec2(1.0, _GLF_IDENTITY(1.0, max(1.0, 1.0)))), dot(vec2(0.0, 0.0), vec2(1.0, _GLF_IDENTITY(1.0, max(1.0, 1.0))))))))), 0.0))[1], (vec4(injectionSwitch.y, 1.0, _GLF_IDENTITY(dot(vec2(0.0, _GLF_IDENTITY(0.0, float(_GLF_IDENTITY(mat3x2(0.0, 0.0, 1.0, 1.0, length(vec3(0.0, 0.0, 0.0)), 0.0), (mat3x2(0.0, 0.0, 1.0, 1.0, length(vec3(0.0, 0.0, 0.0)), 0.0)) + mat3x2(0.0, 0.0, 0.0, 0.0, 0.0, 0.0))))), vec2(1.0, 1.0)), dot(vec2(_GLF_IDENTITY(0.0, _GLF_IDENTITY(_GLF_IDENTITY(float(float(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED((7.0 - 601.342))), bool(false))))), clamp(float(float(0.0)), _GLF_IDENTITY(float(float(0.0)), 1.0 * (float(float(0.0)))), _GLF_IDENTITY(float(float(0.0)), (float(float(0.0))) - 0.0))), (false ? _GLF_FUZZED(-68.32) : float(float(_GLF_IDENTITY(0.0, min(0.0, 0.0))))))), 0.0), vec2(1.0, 1.0))), _GLF_IDENTITY(0.0, float(mat3x4(_GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(vec2(82.24, 102.495)[0]) : _GLF_IDENTITY(0.0, (0.0) - 0.0))), 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, round(length(normalize(vec3(1.0, 1.0, 1.0)))), _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 1.0)))))[2], _GLF_FUZZED(4.6)), vec4((vec4(injectionSwitch.y, 1.0, _GLF_IDENTITY(dot(vec2(0.0, 0.0), vec2(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED((609.829 / 3.5))), bool(false))), 1.0)), dot(vec2(0.0, _GLF_IDENTITY(0.0, max(0.0, _GLF_IDENTITY(0.0, float(vec2(0.0, 0.0)))))), vec2(1.0, 1.0))), 0.0))[0], _GLF_FUZZED(20.85), _GLF_FUZZED(-5.9), (vec4(injectionSwitch.y, 1.0, _GLF_IDENTITY(dot(_GLF_IDENTITY(vec2(0.0, _GLF_IDENTITY(0.0, (0.0) * 1.0)), (false ? _GLF_FUZZED(vec2(7.0, 811.557)) : vec2(0.0, _GLF_IDENTITY(0.0, (0.0) * 1.0)))), vec2(1.0, _GLF_IDENTITY(1.0, min(1.0, _GLF_IDENTITY(1.0, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? 1.0 : _GLF_FUZZED(907.023))))))), _GLF_IDENTITY(dot(vec2(0.0, 0.0), vec2(1.0, 1.0)), _GLF_IDENTITY(float(mat3x4(dot(vec2(0.0, 0.0), vec2(1.0, 1.0)), 1.0, 0.0, 0.0, determinant(mat3(1.0, 1.0, 0.0, 0.0, 1.0, 0.0, tan(0.0), sqrt(0.0), 1.0)), 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0)), max(float(mat3x4(dot(vec2(0.0, 0.0), vec2(1.0, 1.0)), 1.0, 0.0, 0.0, determinant(mat3(1.0, 1.0, 0.0, 0.0, 1.0, 0.0, tan(0.0), sqrt(0.0), 1.0)), 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0)), float(mat3x4(dot(vec2(0.0, 0.0), vec2(1.0, 1.0)), 1.0, 0.0, 0.0, determinant(mat3(1.0, 1.0, 0.0, 0.0, 1.0, 0.0, tan(0.0), sqrt(0.0), 1.0)), 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0)))))), _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(mix(-1.6, 3.6, -2157.3722)) : _GLF_IDENTITY(0.0, mix(float(_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(85.50)), float(0.0), bool(true)))), float(_GLF_FUZZED(1.5)), bool(false)))))))[3]), bvec4(true, false, false, true)))), (false ? _GLF_FUZZED(-0.5) : float(_GLF_IDENTITY(vec4(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, vec2(vec3(injectionSwitch, 1.0)))) * abs(vec2(1.0, 1.0))).y, 1.0, _GLF_IDENTITY(dot(vec2(0.0, 0.0), vec2(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(0.1)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), 1.0)), dot(vec2(0.0, 0.0), vec2(_GLF_IDENTITY(1.0, _GLF_IDENTITY(max(1.0, 1.0), min(max(1.0, 1.0), max(1.0, 1.0)))), 1.0))), _GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, (0.0) * 1.0), 0.0))), _GLF_IDENTITY(mix(vec4(_GLF_FUZZED(1931.1557), (vec4(injectionSwitch.y, 1.0, _GLF_IDENTITY(_GLF_IDENTITY(dot(_GLF_IDENTITY(vec2(0.0, 0.0), mat2(1.0) * (vec2(0.0, 0.0))), vec2(1.0, 1.0)), dot(vec2(0.0, 0.0), vec2(1.0, _GLF_IDENTITY(1.0, max(1.0, 1.0))))), (false ? _GLF_FUZZED(-4.2) : _GLF_IDENTITY(dot(vec2(0.0, 0.0), vec2(1.0, 1.0)), dot(vec2(0.0, 0.0), vec2(1.0, _GLF_IDENTITY(1.0, max(1.0, 1.0))))))), 0.0))[1], (vec4(injectionSwitch.y, 1.0, _GLF_IDENTITY(dot(vec2(0.0, _GLF_IDENTITY(0.0, float(_GLF_IDENTITY(mat3x2(0.0, 0.0, 1.0, 1.0, length(vec3(0.0, 0.0, 0.0)), 0.0), (mat3x2(0.0, 0.0, 1.0, 1.0, length(vec3(0.0, 0.0, 0.0)), 0.0)) + mat3x2(0.0, 0.0, 0.0, 0.0, 0.0, 0.0))))), vec2(1.0, 1.0)), dot(vec2(_GLF_IDENTITY(0.0, _GLF_IDENTITY(float(float(0.0)), (false ? _GLF_FUZZED(-68.32) : float(float(0.0))))), 0.0), vec2(1.0, 1.0))), 0.0))[2], _GLF_FUZZED(4.6)), vec4((vec4(injectionSwitch.y, 1.0, _GLF_IDENTITY(dot(vec2(0.0, 0.0), vec2(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED((609.829 / 3.5))), bool(false))), 1.0)), dot(vec2(0.0, _GLF_IDENTITY(0.0, max(0.0, _GLF_IDENTITY(0.0, float(vec2(0.0, 0.0)))))), vec2(1.0, 1.0))), 0.0))[0], _GLF_FUZZED(20.85), _GLF_FUZZED(-5.9), (vec4(injectionSwitch.y, 1.0, _GLF_IDENTITY(dot(vec2(0.0, _GLF_IDENTITY(0.0, (0.0) * 1.0)), vec2(1.0, _GLF_IDENTITY(1.0, min(1.0, 1.0)))), dot(vec2(0.0, 0.0), vec2(1.0, 1.0))), _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(mix(-1.6, 3.6, -2157.3722)) : _GLF_IDENTITY(0.0, mix(float(_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(85.50)), float(0.0), bool(true)))), float(_GLF_FUZZED(1.5)), bool(false)))))))[3]), bvec4(true, false, false, true)), vec4(mat2x4(_GLF_IDENTITY(mix(vec4(_GLF_FUZZED(1931.1557), (vec4(injectionSwitch.y, 1.0, _GLF_IDENTITY(_GLF_IDENTITY(dot(vec2(0.0, 0.0), vec2(1.0, 1.0)), dot(vec2(0.0, 0.0), vec2(1.0, _GLF_IDENTITY(1.0, max(1.0, 1.0))))), (false ? _GLF_FUZZED(-4.2) : _GLF_IDENTITY(dot(vec2(0.0, 0.0), vec2(1.0, 1.0)), dot(vec2(0.0, 0.0), vec2(1.0, _GLF_IDENTITY(1.0, max(1.0, 1.0))))))), 0.0))[1], (vec4(injectionSwitch.y, 1.0, _GLF_IDENTITY(dot(vec2(_GLF_IDENTITY(0.0, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? 0.0 : _GLF_FUZZED(-5005.3003))), _GLF_IDENTITY(0.0, float(_GLF_IDENTITY(mat3x2(0.0, 0.0, 1.0, 1.0, length(vec3(0.0, 0.0, 0.0)), 0.0), (mat3x2(0.0, 0.0, 1.0, 1.0, length(vec3(0.0, 0.0, 0.0)), 0.0)) + mat3x2(0.0, 0.0, 0.0, 0.0, 0.0, 0.0))))), vec2(1.0, 1.0)), dot(vec2(_GLF_IDENTITY(0.0, _GLF_IDENTITY(float(float(0.0)), (false ? _GLF_FUZZED(-68.32) : _GLF_IDENTITY(float(float(0.0)), (float(float(0.0))) - 0.0)))), 0.0), vec2(1.0, 1.0))), 0.0))[_GLF_IDENTITY(2, (2) | 0)], _GLF_FUZZED(4.6)), vec4((vec4(injectionSwitch.y, 1.0, _GLF_IDENTITY(dot(vec2(0.0, 0.0), vec2(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED((609.829 / 3.5))), bool(false))), 1.0)), dot(vec2(0.0, _GLF_IDENTITY(0.0, max(0.0, _GLF_IDENTITY(0.0, float(vec2(0.0, 0.0)))))), vec2(1.0, 1.0))), 0.0))[0], _GLF_FUZZED(20.85), _GLF_FUZZED(-5.9), (_GLF_IDENTITY(vec4(injectionSwitch.y, 1.0, _GLF_IDENTITY(dot(vec2(0.0, _GLF_IDENTITY(_GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(9.0) : 0.0)), (0.0) * 1.0)), vec2(1.0, _GLF_IDENTITY(1.0, min(1.0, 1.0)))), dot(vec2(0.0, 0.0), vec2(1.0, 1.0))), _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(mix(-1.6, 3.6, -2157.3722)) : _GLF_IDENTITY(0.0, mix(float(_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(85.50)), float(0.0), bool(true)))), float(_GLF_FUZZED(1.5)), bool(false)))))), min(vec4(injectionSwitch.y, 1.0, _GLF_IDENTITY(dot(vec2(0.0, _GLF_IDENTITY(_GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(9.0) : 0.0)), (0.0) * 1.0)), vec2(1.0, _GLF_IDENTITY(1.0, min(1.0, 1.0)))), dot(vec2(0.0, 0.0), vec2(1.0, 1.0))), _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(mix(-1.6, 3.6, -2157.3722)) : _GLF_IDENTITY(0.0, mix(float(_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(85.50)), float(0.0), bool(true)))), float(_GLF_FUZZED(1.5)), bool(false)))))), vec4(injectionSwitch.y, 1.0, _GLF_IDENTITY(dot(vec2(0.0, _GLF_IDENTITY(_GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(9.0) : 0.0)), (0.0) * 1.0)), vec2(1.0, _GLF_IDENTITY(1.0, min(1.0, 1.0)))), dot(vec2(0.0, 0.0), vec2(1.0, 1.0))), _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(mix(-1.6, 3.6, -2157.3722)) : _GLF_IDENTITY(0.0, mix(float(_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(85.50)), float(0.0), bool(true)))), float(_GLF_FUZZED(1.5)), bool(false)))))))))[3]), bvec4(true, false, false, true)), mix(vec4((mix(vec4(_GLF_FUZZED(1931.1557), (vec4(injectionSwitch.y, 1.0, _GLF_IDENTITY(_GLF_IDENTITY(dot(vec2(0.0, 0.0), vec2(1.0, 1.0)), dot(vec2(0.0, 0.0), vec2(1.0, _GLF_IDENTITY(1.0, max(1.0, 1.0))))), (false ? _GLF_FUZZED(-4.2) : _GLF_IDENTITY(dot(vec2(0.0, 0.0), vec2(1.0, 1.0)), dot(vec2(0.0, 0.0), vec2(1.0, _GLF_IDENTITY(1.0, max(1.0, 1.0))))))), 0.0))[1], (vec4(injectionSwitch.y, 1.0, _GLF_IDENTITY(dot(vec2(0.0, _GLF_IDENTITY(0.0, float(_GLF_IDENTITY(mat3x2(0.0, 0.0, 1.0, 1.0, length(vec3(0.0, 0.0, 0.0)), 0.0), (mat3x2(0.0, 0.0, 1.0, _GLF_IDENTITY(1.0, 0.0 + (1.0)), length(vec3(0.0, 0.0, 0.0)), 0.0)) + mat3x2(0.0, 0.0, 0.0, 0.0, 0.0, 0.0))))), vec2(1.0, 1.0)), dot(vec2(_GLF_IDENTITY(0.0, _GLF_IDENTITY(float(float(0.0)), (false ? _GLF_FUZZED(-68.32) : float(float(0.0))))), 0.0), vec2(1.0, 1.0))), 0.0))[2], _GLF_FUZZED(4.6)), vec4((vec4(injectionSwitch.y, 1.0, _GLF_IDENTITY(dot(vec2(0.0, 0.0), vec2(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED((609.829 / 3.5))), bool(false))), _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-411.210) : _GLF_IDENTITY(1.0, min(1.0, 1.0)))))), dot(vec2(0.0, _GLF_IDENTITY(0.0, max(0.0, _GLF_IDENTITY(0.0, float(vec2(0.0, 0.0)))))), vec2(1.0, 1.0))), 0.0))[0], _GLF_FUZZED(_GLF_IDENTITY(20.85, mix(float(20.85), float(_GLF_FUZZED(-524.214)), bool(false)))), _GLF_FUZZED(-5.9), (vec4(injectionSwitch.y, 1.0, _GLF_IDENTITY(dot(vec2(0.0, _GLF_IDENTITY(0.0, (0.0) * 1.0)), vec2(1.0, _GLF_IDENTITY(1.0, min(1.0, 1.0)))), dot(vec2(0.0, 0.0), vec2(1.0, 1.0))), _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(mix(-1.6, 3.6, -2157.3722)) : _GLF_IDENTITY(0.0, mix(float(_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(85.50)), float(0.0), bool(true)))), float(_GLF_FUZZED(1.5)), bool(false)))))))[3]), bvec4(true, false, _GLF_IDENTITY(false, ! (! (false))), true)))[0], _GLF_FUZZED((-3.6 * -1.4)), (mix(vec4(_GLF_FUZZED(1931.1557), (vec4(injectionSwitch.y, 1.0, _GLF_IDENTITY(_GLF_IDENTITY(dot(vec2(0.0, 0.0), vec2(1.0, 1.0)), dot(vec2(0.0, 0.0), vec2(1.0, _GLF_IDENTITY(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-64.66)), float(_GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(-9.3)))), bool(true))), max(1.0, 1.0))))), (false ? _GLF_FUZZED(-4.2) : _GLF_IDENTITY(dot(vec2(0.0, 0.0), vec2(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(-7.5)), bool(false))), _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(955.605)), float(1.0), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), dot(vec2(0.0, 0.0), vec2(1.0, _GLF_IDENTITY(1.0, max(1.0, 1.0))))))), 0.0))[1], (vec4(injectionSwitch.y, 1.0, _GLF_IDENTITY(dot(vec2(0.0, _GLF_IDENTITY(0.0, float(_GLF_IDENTITY(mat3x2(0.0, 0.0, 1.0, 1.0, length(vec3(0.0, 0.0, 0.0)), 0.0), (mat3x2(0.0, 0.0, 1.0, 1.0, length(vec3(0.0, 0.0, 0.0)), 0.0)) + mat3x2(0.0, 0.0, 0.0, 0.0, 0.0, 0.0))))), vec2(1.0, 1.0)), dot(vec2(_GLF_IDENTITY(0.0, _GLF_IDENTITY(float(float(0.0)), (false ? _GLF_FUZZED(-68.32) : float(float(0.0))))), 0.0), vec2(1.0, 1.0))), 0.0))[2], _GLF_FUZZED(4.6)), vec4((vec4(injectionSwitch.y, 1.0, _GLF_IDENTITY(dot(vec2(0.0, 0.0), vec2(_GLF_IDENTITY(_GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, (1.0) - 0.0), _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(592.467) : 1.0)))), mix(float(1.0), float(_GLF_FUZZED((609.829 / 3.5))), bool(false))), 1.0)), dot(vec2(0.0, _GLF_IDENTITY(0.0, max(0.0, _GLF_IDENTITY(0.0, float(vec2(0.0, 0.0)))))), vec2(1.0, 1.0))), 0.0))[0], _GLF_FUZZED(20.85), _GLF_FUZZED(-5.9), (vec4(injectionSwitch.y, 1.0, _GLF_IDENTITY(dot(vec2(0.0, _GLF_IDENTITY(0.0, (0.0) * 1.0)), vec2(1.0, _GLF_IDENTITY(1.0, min(1.0, 1.0)))), dot(vec2(0.0, 0.0), vec2(1.0, 1.0))), _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(mix(-1.6, 3.6, -2157.3722)) : _GLF_IDENTITY(0.0, mix(float(_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(85.50)), float(0.0), bool(true)))), float(_GLF_FUZZED(1.5)), bool(false)))))))[3]), bvec4(true, false, false, true)))[2], _GLF_FUZZED(-3.4)), vec4(_GLF_FUZZED(11.25), (mix(vec4(_GLF_FUZZED(1931.1557), (vec4(injectionSwitch.y, 1.0, _GLF_IDENTITY(_GLF_IDENTITY(dot(vec2(0.0, 0.0), vec2(1.0, 1.0)), dot(vec2(0.0, 0.0), vec2(1.0, _GLF_IDENTITY(1.0, max(1.0, 1.0))))), (false ? _GLF_FUZZED(-4.2) : _GLF_IDENTITY(dot(vec2(0.0, 0.0), vec2(1.0, 1.0)), dot(vec2(0.0, 0.0), vec2(1.0, _GLF_IDENTITY(1.0, max(1.0, 1.0))))))), 0.0))[1], (vec4(injectionSwitch.y, 1.0, _GLF_IDENTITY(dot(vec2(0.0, _GLF_IDENTITY(0.0, float(_GLF_IDENTITY(mat3x2(0.0, 0.0, 1.0, 1.0, length(vec3(0.0, 0.0, 0.0)), 0.0), (mat3x2(0.0, 0.0, 1.0, 1.0, length(vec3(0.0, 0.0, 0.0)), 0.0)) + mat3x2(0.0, 0.0, 0.0, 0.0, 0.0, 0.0))))), vec2(1.0, 1.0)), dot(vec2(_GLF_IDENTITY(0.0, _GLF_IDENTITY(float(float(0.0)), (false ? _GLF_FUZZED(-68.32) : float(float(0.0))))), 0.0), vec2(1.0, 1.0))), 0.0))[2], _GLF_FUZZED(4.6)), vec4((vec4(injectionSwitch.y, 1.0, _GLF_IDENTITY(dot(vec2(0.0, 0.0), vec2(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED((609.829 / 3.5))), bool(false))), 1.0)), dot(_GLF_IDENTITY(vec2(0.0, _GLF_IDENTITY(_GLF_IDENTITY(0.0, max(0.0, _GLF_IDENTITY(0.0, float(vec2(0.0, 0.0))))), (_GLF_IDENTITY(0.0, max(0.0, _GLF_IDENTITY(0.0, float(_GLF_IDENTITY(vec2(0.0, 0.0), (false ? _GLF_FUZZED(vec2(-4369.7615, 7.0)) : vec2(0.0, 0.0)))))))) - 0.0)), vec2(0.0, 0.0) + (vec2(0.0, _GLF_IDENTITY(_GLF_IDENTITY(0.0, max(0.0, _GLF_IDENTITY(0.0, float(vec2(0.0, 0.0))))), (_GLF_IDENTITY(0.0, max(0.0, _GLF_IDENTITY(0.0, float(_GLF_IDENTITY(vec2(0.0, 0.0), (false ? _GLF_FUZZED(vec2(-4369.7615, 7.0)) : vec2(0.0, 0.0)))))))) - 0.0)))), vec2(1.0, 1.0))), 0.0))[0], _GLF_FUZZED(20.85), _GLF_FUZZED(-5.9), (vec4(injectionSwitch.y, 1.0, _GLF_IDENTITY(dot(vec2(0.0, _GLF_IDENTITY(_GLF_IDENTITY(0.0, 1.0 * (0.0)), (0.0) * 1.0)), vec2(1.0, _GLF_IDENTITY(1.0, min(1.0, 1.0)))), dot(vec2(0.0, 0.0), vec2(1.0, 1.0))), _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(mix(-1.6, 3.6, -2157.3722)) : _GLF_IDENTITY(0.0, mix(float(_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(85.50)), float(0.0), bool(true)))), float(_GLF_FUZZED(1.5)), bool(false)))))))[3]), bvec4(true, false, false, true)))[1], _GLF_FUZZED(-5.0), (mix(vec4(_GLF_FUZZED(1931.1557), (vec4(injectionSwitch.y, 1.0, _GLF_IDENTITY(_GLF_IDENTITY(dot(vec2(0.0, 0.0), vec2(1.0, 1.0)), dot(vec2(0.0, 0.0), vec2(1.0, _GLF_IDENTITY(1.0, max(1.0, 1.0))))), (false ? _GLF_FUZZED(-4.2) : _GLF_IDENTITY(dot(vec2(0.0, 0.0), vec2(1.0, 1.0)), dot(vec2(0.0, 0.0), vec2(1.0, _GLF_IDENTITY(1.0, max(1.0, 1.0))))))), 0.0))[1], (vec4(injectionSwitch.y, 1.0, _GLF_IDENTITY(dot(vec2(0.0, _GLF_IDENTITY(0.0, float(_GLF_IDENTITY(mat3x2(0.0, 0.0, 1.0, 1.0, length(vec3(0.0, 0.0, 0.0)), 0.0), (mat3x2(0.0, 0.0, 1.0, 1.0, length(vec3(0.0, 0.0, 0.0)), 0.0)) + mat3x2(0.0, 0.0, 0.0, 0.0, 0.0, 0.0))))), vec2(1.0, 1.0)), dot(vec2(_GLF_IDENTITY(0.0, _GLF_IDENTITY(float(float(0.0)), (false ? _GLF_FUZZED(-68.32) : float(float(0.0))))), 0.0), vec2(1.0, 1.0))), 0.0))[2], _GLF_FUZZED(4.6)), vec4((vec4(injectionSwitch.y, 1.0, _GLF_IDENTITY(dot(vec2(0.0, 0.0), vec2(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED((609.829 / 3.5))), bool(false))), 1.0)), dot(vec2(0.0, _GLF_IDENTITY(0.0, max(0.0, _GLF_IDENTITY(0.0, float(vec2(0.0, 0.0)))))), vec2(1.0, 1.0))), 0.0))[0], _GLF_FUZZED(20.85), _GLF_FUZZED(-5.9), (vec4(injectionSwitch.y, 1.0, _GLF_IDENTITY(dot(vec2(0.0, _GLF_IDENTITY(0.0, (0.0) * 1.0)), vec2(1.0, _GLF_IDENTITY(1.0, min(1.0, 1.0)))), dot(vec2(0.0, 0.0), vec2(1.0, 1.0))), _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(mix(-1.6, 3.6, -2157.3722)) : _GLF_IDENTITY(0.0, mix(float(_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(85.50)), float(0.0), bool(true)))), float(_GLF_FUZZED(1.5)), bool(false)))))))[3]), bvec4(true, false, false, true)))[3]), bvec4(false, true, false, true))), 0.0, 1.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y))))))))), injectionSwitch.y))))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint virtual_gid = workgroup_base + _GLF_IDENTITY(subgroup_id * subgroup_size, (_GLF_IDENTITY(subgroup_id * _GLF_IDENTITY(subgroup_size, (subgroup_size) | (subgroup_size)), ~ (~ (_GLF_IDENTITY(subgroup_id * _GLF_IDENTITY(subgroup_size, (subgroup_size) | (subgroup_size)), uint(uvec4(subgroup_id * _GLF_IDENTITY(subgroup_size, (subgroup_size) | (subgroup_size)), 0u, 1u, 1u))))))) + 0u) + subgroup_local_id;
 uint next_virtual_gid = workgroup_base + subgroup_id * subgroup_size + ((subgroup_local_id + 1) % subgroup_size);
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(585.160), (injectionSwitch)[1]), vec2(_GLF_IDENTITY((injectionSwitch)[0], mix(float((injectionSwitch)[0]), float(_GLF_FUZZED(-7.7)), bool(false))), _GLF_FUZZED(-5.8)), bvec2(true, false))).x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), injectionSwitch)), min(_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), injectionSwitch)), _GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), injectionSwitch)))).y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), false || (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), ! (! (_GLF_IDENTITY(false, false || (false))))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), ! (! (_GLF_IDENTITY(false, false || (false))))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), ! (! (_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, ! (! (false))))))))))))))))))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))))) / vec2(1.0, 1.0)).y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))))) / vec2(1.0, 1.0)).y)))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(true, false || (true)) && (false))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint read_1 = atomicLoad(buf[virtual_gid], _GLF_IDENTITY(4, (_GLF_IDENTITY(4, (4) / 1)) - (0 >> _GLF_IDENTITY(int(4), int(4)))), 64, 0);
 atomicStore(buf[next_virtual_gid], uint(_GLF_IDENTITY(read_1 + 1, (read_1 + 1) * 1u)), 4, 64, _GLF_IDENTITY(4, (_GLF_IDENTITY(4, clamp(_GLF_IDENTITY(4, (true ? 4 : _GLF_FUZZED(-91755))), 4, 4))) / 1));
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 uint read_2 = atomicLoad(buf[virtual_gid], 4, 64, 0);
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, 0u | (subgroup_local_id)) + 1, (subgroup_local_id + 1) | (subgroup_local_id + 1)) < subgroup_size)
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)), injectionSwitch)), injectionSwitch)).y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(false), bool(_GLF_IDENTITY(bvec3(_GLF_DEAD(false), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), _GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY(bvec3(_GLF_DEAD(false), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bvec3(bvec4(bvec3(_GLF_DEAD(false), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), false))))), bvec3(bvec4(bvec3(bvec3(_GLF_IDENTITY(bvec3(_GLF_DEAD(false), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bvec3(bvec4(bvec3(_GLF_DEAD(false), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), false))))), true)))))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
    }
   int i = 0;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   atomicStore(buf[next_virtual_gid], uint(read_1 + 1 == read_2) + _GLF_IDENTITY(1, (1) >> 0), _GLF_IDENTITY(_GLF_IDENTITY(4, int(ivec4(4, 1, 0, _GLF_IDENTITY(((_GLF_IDENTITY(1, (1) << 0) << _GLF_IDENTITY(int(2), int(2))) >> _GLF_IDENTITY(int(2), int(2))), clamp(((1 << _GLF_IDENTITY(int(2), int(2))) >> _GLF_IDENTITY(int(2), int(2))), ((_GLF_IDENTITY(1 << _GLF_IDENTITY(int(2), int(2)), max(1 << _GLF_IDENTITY(int(2), int(2)), 1 << _GLF_IDENTITY(int(2), int(2))))) >> _GLF_IDENTITY(int(2), int(2))), ((1 << _GLF_IDENTITY(int(2), int(2))) >> _GLF_IDENTITY(int(2), int(2)))))))), int(int(_GLF_IDENTITY(4, int(ivec4(4, _GLF_IDENTITY(1, ~ (~ (1))), 0, _GLF_IDENTITY(((1 << _GLF_IDENTITY(int(2), int(2))) >> _GLF_IDENTITY(int(2), int(_GLF_IDENTITY(2, (false ? _GLF_FUZZED(i) : _GLF_IDENTITY(2, max(2, 2))))))), clamp(((1 << _GLF_IDENTITY(int(2), int(2))) >> _GLF_IDENTITY(int(2), int(2))), ((1 << _GLF_IDENTITY(_GLF_IDENTITY(int(2), (_GLF_IDENTITY(int(2), (int(2)) << 0)) / 1), int(2))) >> _GLF_IDENTITY(int(2), int(2))), ((_GLF_IDENTITY(1 << _GLF_IDENTITY(int(2), int(2)), min(1 << _GLF_IDENTITY(int(2), int(2)), 1 << _GLF_IDENTITY(int(2), int(2))))) >> _GLF_IDENTITY(int(2), int(2))))))))))), _GLF_IDENTITY(64, max(_GLF_IDENTITY(64, (64) ^ 0), 64)), 4);
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
  }
 else
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(438.404) : 0.0))), max(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(438.404) : 0.0))), _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(438.404) : 0.0))))), _GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)))), injectionSwitch, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)))).x, injectionSwitch.x)) > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(bvec3(! (false), true, false)))))))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), bool(bvec4(_GLF_IDENTITY(false, ! (! (false))), false, true, true)))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   atomicStore(buf[next_virtual_gid], uint(_GLF_IDENTITY(_GLF_IDENTITY(read_1, (read_1) | (read_1)), (_GLF_IDENTITY(read_1, 0u + (read_1))) << 0u) + 1 == read_2) + 1, 4, 64, 4);
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bool(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, false || (false)), (injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(bvec4(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(mat2x3(injectionSwitch.x, 1.0, 0.0, 1.0, 0.0, 0.0)), clamp(float(mat2x3(injectionSwitch.x, 1.0, 0.0, 1.0, 0.0, 0.0)), float(mat2x3(injectionSwitch.x, 1.0, 0.0, 1.0, 0.0, 0.0)), float(mat2x3(injectionSwitch.x, 1.0, 0.0, 1.0, 0.0, 0.0))))) > injectionSwitch.y)), false, true, false)), _GLF_IDENTITY(bool(bvec2(bool(bvec4(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(mat2x3(injectionSwitch.x, 1.0, 0.0, 1.0, 0.0, 0.0)), clamp(float(mat2x3(injectionSwitch.x, 1.0, 0.0, 1.0, 0.0, 0.0)), float(mat2x3(injectionSwitch.x, 1.0, 0.0, 1.0, 0.0, 0.0)), float(mat2x3(injectionSwitch.x, 1.0, 0.0, 1.0, 0.0, 0.0))))) > injectionSwitch.y)), false, true, false)), false)), (bool(bvec2(bool(bvec4(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(mat2x3(injectionSwitch.x, 1.0, 0.0, 1.0, 0.0, 0.0)), clamp(float(mat2x3(injectionSwitch.x, 1.0, 0.0, 1.0, 0.0, 0.0)), float(mat2x3(injectionSwitch.x, 1.0, 0.0, 1.0, 0.0, 0.0)), float(mat2x3(injectionSwitch.x, 1.0, 0.0, 1.0, 0.0, 0.0))))) > injectionSwitch.y)), false, true, false)), false))) || false)))) || false))))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(3.4, 1449.7236)) : injectionSwitch)).x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), bool(bool(! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))), (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), false || (! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))) || false))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(injectionSwitch.x > injectionSwitch.y, true))))), ! (_GLF_IDENTITY(! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))), true && (! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))).x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y)))))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
}
