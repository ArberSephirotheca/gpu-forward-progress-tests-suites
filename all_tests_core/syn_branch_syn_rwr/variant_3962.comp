#version 460
struct _GLF_struct_1 {
 float _f0;
} ;

struct _GLF_struct_2 {
 mat2x3 _f0;
 uvec3 _f1;
 _GLF_struct_1 _f2;
} ;

struct _GLF_struct_0 {
 vec2 _f0;
 bvec2 _f1;
} ;

struct _GLF_struct_3 {
 uint num_workgroup;
 _GLF_struct_0 _f0;
 _GLF_struct_2 _f1;
 uint _f2;
} ;

layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 uvec2 GLF_merged2_0_1_6_1_1_11read_2virtual_gid;
 uvec3 GLF_merged3_0_1_6_1_1_17_2_1_14read_1subgroup_local_idworkgroup_base;
 uint subgroup_id = gl_SubgroupID;
 uint subgroup_size = gl_SubgroupSize;
 uint subgroup_local_id = gl_SubgroupInvocationID;
 GLF_merged3_0_1_6_1_1_17_2_1_14read_1subgroup_local_idworkgroup_base.y = subgroup_local_id;
 _GLF_struct_3 _GLF_struct_replacement_3 = _GLF_struct_3(gl_NumWorkGroups.x, _GLF_struct_0(vec2(1.0), bvec2(true)), _GLF_struct_2(mat2x3(1.0), uvec3(1u), _GLF_struct_1(1.0)), 1u);
 uint workgroup_size = gl_WorkGroupSize.x;
 uint workgroup_id = gl_WorkGroupID.x;
 uint workgroup_base = workgroup_size * workgroup_id;
 GLF_merged3_0_1_6_1_1_17_2_1_14read_1subgroup_local_idworkgroup_base.z = workgroup_base;
 uint virtual_gid = GLF_merged3_0_1_6_1_1_17_2_1_14read_1subgroup_local_idworkgroup_base.z + subgroup_id * subgroup_size + GLF_merged3_0_1_6_1_1_17_2_1_14read_1subgroup_local_idworkgroup_base.y;
 GLF_merged2_0_1_6_1_1_11read_2virtual_gid.y = virtual_gid;
 uint next_virtual_gid = GLF_merged3_0_1_6_1_1_17_2_1_14read_1subgroup_local_idworkgroup_base.z + subgroup_id * subgroup_size + ((GLF_merged3_0_1_6_1_1_17_2_1_14read_1subgroup_local_idworkgroup_base.y + 1) % subgroup_size);
 uint read_1 = atomicLoad(buf[GLF_merged2_0_1_6_1_1_11read_2virtual_gid.y], 4, 64, 0);
 GLF_merged3_0_1_6_1_1_17_2_1_14read_1subgroup_local_idworkgroup_base.x = read_1;
 atomicStore(buf[next_virtual_gid], uint(GLF_merged3_0_1_6_1_1_17_2_1_14read_1subgroup_local_idworkgroup_base.x + 1), 4, 64, 4);
 uint read_2 = atomicLoad(buf[GLF_merged2_0_1_6_1_1_11read_2virtual_gid.y], 4, 64, 0);
 GLF_merged2_0_1_6_1_1_11read_2virtual_gid.x = read_2;
 if(GLF_merged3_0_1_6_1_1_17_2_1_14read_1subgroup_local_idworkgroup_base.y + 1 < subgroup_size)
  {
   int i = 0;
   atomicStore(buf[next_virtual_gid], uint(GLF_merged3_0_1_6_1_1_17_2_1_14read_1subgroup_local_idworkgroup_base.x + 1 == GLF_merged2_0_1_6_1_1_11read_2virtual_gid.x) + 1, 4, 64, 4);
  }
 else
  {
   atomicStore(buf[next_virtual_gid], uint(GLF_merged3_0_1_6_1_1_17_2_1_14read_1subgroup_local_idworkgroup_base.x + 1 == GLF_merged2_0_1_6_1_1_11read_2virtual_gid.x) + 1, 4, 64, 4);
  }
}
