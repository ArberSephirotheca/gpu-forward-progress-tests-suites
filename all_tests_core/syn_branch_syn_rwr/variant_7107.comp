#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 uvec4 GLF_merged4_0_1_13_1_1_17_2_1_13_3_1_12num_workgroupsubgroup_local_idsubgroup_sizeworkgroup_id;
 uint subgroup_id = gl_SubgroupID;
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_DEAD(false))
  {
   switch(_GLF_SWITCH(0))
    {
     case 40:
     if(_GLF_DEAD(false))
      barrier();
     ;
     case 0:
     case 49:
     if(_GLF_DEAD(false))
      barrier();
     case 21:
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
      }
     else
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         for(int _injected_loop_counter = ((_GLF_IDENTITY(0, int(int(0))) << _GLF_IDENTITY(_GLF_IDENTITY(int(0), int(0)), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(int(0), 0 ^ (int(0))), int(0)), ~ (~ (_GLF_IDENTITY(int(0), int(0)))))) + _GLF_IDENTITY(int(_GLF_ZERO(0.0, injectionSwitch.x)), int(ivec4(int(_GLF_ZERO(0.0, injectionSwitch.x)), 1, 1, 1))))) | 0); _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _GLF_IDENTITY(_injected_loop_counter ++, (_injected_loop_counter ++) ^ (_GLF_IDENTITY(0, max(_GLF_IDENTITY(0, ~ (~ (0))), 0)) | 0)))
          {
           switch(_GLF_SWITCH(0))
            {
             case 9:
             mat2x4 _GLF_SWITCH_3_0v, _GLF_SWITCH_3_1v[56];
             case 98:
             vec4 _GLF_SWITCH_3_2v;
             case 0:
             case 47:
             barrier();
             case 89:
             if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
              barrier();
             break;
             case 95:
             ;
             case 51:
             mat4x2(66.51, 16.81, -7.5, -962.364, -299.858, -32.03, 0.1, 8.8);
             default:
             1;
            }
          }
        }
      }
     case 53:
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), _GLF_IDENTITY(true, (_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bool(true)), false || (bool(bool(true)))))) && true) && (_GLF_IDENTITY(bool(false), (bool(false)) && true)))))))
      barrier();
     case 37:
     case 24:
     case 29:
     case 35:
     case 79:
     case 8:
     barrier();
     break;
     case 96:
     ;
     case 86:
     if(_GLF_DEAD(false))
      barrier();
     bvec2 _GLF_SWITCH_2_0v[22], _GLF_SWITCH_2_1v, _GLF_SWITCH_2_2v[48];
     default:
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, false, false)))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     1;
     if(_GLF_DEAD(false))
      barrier();
    }
  }
 GLF_merged4_0_1_13_1_1_17_2_1_13_3_1_12num_workgroupsubgroup_local_idsubgroup_sizeworkgroup_id.z = subgroup_size;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   for(int _injected_loop_counter = (0 >> _GLF_IDENTITY(_GLF_IDENTITY(int(5), int(5)), (_GLF_IDENTITY(int(5), int(5))) << 0)); _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
    {
     barrier();
    }
  }
 do
  {
   do
    {
     for(int _injected_loop_counter = int(_GLF_ZERO(0.0, injectionSwitch.x)); _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
      {
       switch(_GLF_SWITCH((0 & int(true))))
        {
         case 60:
         (uvec3(4440u, 5405u, 21880u) & uvec3(42984u, 111902u, 7439u));
         case 0:
         case 40:
         case 93:
         case 75:
         case 30:
         case 57:
         case 54:
         case 89:
         case 19:
         if(_GLF_DEAD(false))
          barrier();
         break;
         default:
         1;
        }
      }
     if(_GLF_DEAD(false))
      barrier();
    }
   while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
  }
 while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), bool(bool(! (injectionSwitch.x > injectionSwitch.y))))))))));
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_WRAPPED_IF_TRUE(true))
  {
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     GLF_merged4_0_1_13_1_1_17_2_1_13_3_1_12num_workgroupsubgroup_local_idsubgroup_sizeworkgroup_id.y = subgroup_local_id;
    }
   else
    {
    }
  }
 else
  {
  }
 if(_GLF_WRAPPED_IF_FALSE(false))
  {
  }
 else
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, float(_GLF_IDENTITY(vec4(injectionSwitch.x, 0.0, 1.0, 1.0), vec4(mat2(_GLF_IDENTITY(vec4(injectionSwitch.x, 0.0, 1.0, 1.0), max(vec4(injectionSwitch.x, 0.0, 1.0, 1.0), vec4(injectionSwitch.x, 0.0, 1.0, 1.0)))))))) > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     else
      {
       barrier();
      }
    }
  }
 uint num_workgroup = gl_NumWorkGroups.x;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(max(injectionSwitch, injectionSwitch), _GLF_IDENTITY(vec2(vec4(max(injectionSwitch, injectionSwitch), 1.0, 1.0)), min(vec2(vec4(max(injectionSwitch, injectionSwitch), 1.0, 1.0)), vec2(vec4(max(injectionSwitch, injectionSwitch), 1.0, 1.0)))))).x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)), _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0))))) - vec2(0.0, 0.0)), _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), min(_GLF_IDENTITY(mat2(1.0) * (injectionSwitch), mix(vec2((mat2(1.0) * _GLF_IDENTITY((injectionSwitch), ((injectionSwitch)) * mat2(1.0)))[0], _GLF_FUZZED(7.2)), _GLF_IDENTITY(vec2(_GLF_FUZZED(-0.4), (mat2(1.0) * (injectionSwitch))[1]), max(_GLF_IDENTITY(vec2(_GLF_FUZZED(-0.4), (mat2(1.0) * (injectionSwitch))[1]), (vec2(_GLF_FUZZED(-0.4), (mat2(1.0) * (injectionSwitch))[1])) * vec2(1.0, 1.0)), vec2(_GLF_FUZZED(-0.4), (mat2(1.0) * (injectionSwitch))[1]))), bvec2(false, true))), _GLF_IDENTITY(mat2(_GLF_IDENTITY(1.0, mix(float(_GLF_IDENTITY(1.0, 1.0 * (1.0))), float(_GLF_FUZZED(-27.28)), bool(false)))) * (injectionSwitch), mix(vec2(_GLF_FUZZED(-2.6), _GLF_FUZZED(-861.801)), vec2((mat2(1.0) * (injectionSwitch))[0], (mat2(1.0) * (injectionSwitch))[1]), bvec2(true, true)))))).y))))
    {
    }
   else
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_WRAPPED_IF_TRUE(true))
      {
       barrier();
      }
     else
      {
      }
    }
   do
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       for(int _injected_loop_counter = int(_GLF_ONE(1.0, injectionSwitch.y)); _GLF_WRAPPED_LOOP(_injected_loop_counter != int(_GLF_ZERO(0.0, injectionSwitch.x))); _injected_loop_counter --)
        {
         barrier();
        }
      }
    }
   while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)))) > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) + tan(vec2(0.0, 0.0))).y))));
  }
 GLF_merged4_0_1_13_1_1_17_2_1_13_3_1_12num_workgroupsubgroup_local_idsubgroup_sizeworkgroup_id.x = _GLF_IDENTITY(num_workgroup, (num_workgroup) | (num_workgroup));
 uint workgroup_size = gl_WorkGroupSize.x;
 uint workgroup_id = _GLF_IDENTITY(gl_WorkGroupID.x, (_GLF_IDENTITY(gl_WorkGroupID.x, (false ? _GLF_FUZZED(subgroup_local_id) : gl_WorkGroupID.x))) | (0u ^ 0u));
 if(_GLF_WRAPPED_IF_TRUE(true))
  {
   if(_GLF_DEAD(false))
    barrier();
  }
 else
  {
  }
 if(_GLF_WRAPPED_IF_TRUE(true))
  {
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
    }
   else
    {
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
    }
   else
    {
     GLF_merged4_0_1_13_1_1_17_2_1_13_3_1_12num_workgroupsubgroup_local_idsubgroup_sizeworkgroup_id.w = workgroup_id;
    }
  }
 else
  {
  }
 uint workgroup_base = workgroup_size * GLF_merged4_0_1_13_1_1_17_2_1_13_3_1_12num_workgroupsubgroup_local_idsubgroup_sizeworkgroup_id.w;
 uint virtual_gid = _GLF_IDENTITY(workgroup_base, uint(_GLF_ZERO(0.0, injectionSwitch.x)) | (workgroup_base)) + subgroup_id * GLF_merged4_0_1_13_1_1_17_2_1_13_3_1_12num_workgroupsubgroup_local_idsubgroup_sizeworkgroup_id.z + _GLF_IDENTITY(GLF_merged4_0_1_13_1_1_17_2_1_13_3_1_12num_workgroupsubgroup_local_idsubgroup_sizeworkgroup_id, uvec4(1u, 1u, 1u, 1u) * (GLF_merged4_0_1_13_1_1_17_2_1_13_3_1_12num_workgroupsubgroup_local_idsubgroup_sizeworkgroup_id)).y;
 uint next_virtual_gid = _GLF_IDENTITY(workgroup_base + subgroup_id * GLF_merged4_0_1_13_1_1_17_2_1_13_3_1_12num_workgroupsubgroup_local_idsubgroup_sizeworkgroup_id.z, 0u | (_GLF_IDENTITY(workgroup_base + subgroup_id * GLF_merged4_0_1_13_1_1_17_2_1_13_3_1_12num_workgroupsubgroup_local_idsubgroup_sizeworkgroup_id.z, (workgroup_base + subgroup_id * GLF_merged4_0_1_13_1_1_17_2_1_13_3_1_12num_workgroupsubgroup_local_idsubgroup_sizeworkgroup_id.z) | 0u))) + ((GLF_merged4_0_1_13_1_1_17_2_1_13_3_1_12num_workgroupsubgroup_local_idsubgroup_sizeworkgroup_id.y + 1) % GLF_merged4_0_1_13_1_1_17_2_1_13_3_1_12num_workgroupsubgroup_local_idsubgroup_sizeworkgroup_id.z);
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0), injectionSwitch.x)) > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true), true && (_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0), injectionSwitch.x)) > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)))))
  barrier();
 for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > (0 >> _GLF_IDENTITY(int(7), _GLF_IDENTITY(int(7), _GLF_IDENTITY(1, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(1, ~ (_GLF_IDENTITY(~ (1), (true ? ~ (1) : _GLF_FUZZED(80677))))), (1) >> 0)), (false ? _GLF_FUZZED(-94190) : (_GLF_IDENTITY(_GLF_IDENTITY(1, ~ (_GLF_IDENTITY(~ (1), (true ? ~ (1) : _GLF_FUZZED(80677))))), (1) >> 0)))) >> 0) * (int(7)))))); _injected_loop_counter --)
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true)) || false))
    {
     do
      {
       barrier();
      }
     while(_GLF_WRAPPED_LOOP(false));
    }
  }
 if(_GLF_DEAD(false))
  barrier();
 uint read_1 = atomicLoad(buf[virtual_gid], 4, 64, 0);
 if(_GLF_WRAPPED_IF_FALSE(false))
  {
   if(_GLF_DEAD(false))
    barrier();
  }
 else
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
  }
 if(_GLF_DEAD(false))
  barrier();
 do
  {
   atomicStore(buf[next_virtual_gid], _GLF_IDENTITY(uint(read_1 + 1), (uint(read_1 + 1)) / 1u), 4, 64, 4);
  }
 while(_GLF_WRAPPED_LOOP(false));
 if(_GLF_DEAD(false))
  barrier();
 uint read_2 = atomicLoad(buf[virtual_gid], 4, 64, _GLF_IDENTITY(0, (_GLF_IDENTITY(0, (true ? 0 : _GLF_IDENTITY(_GLF_FUZZED(1591), (0 >> _GLF_IDENTITY(int(8), int(8))) ^ (_GLF_FUZZED(1591)))))) << 0));
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
  barrier();
 if(_GLF_IDENTITY(GLF_merged4_0_1_13_1_1_17_2_1_13_3_1_12num_workgroupsubgroup_local_idsubgroup_sizeworkgroup_id, (true ? _GLF_IDENTITY(_GLF_IDENTITY(GLF_merged4_0_1_13_1_1_17_2_1_13_3_1_12num_workgroupsubgroup_local_idsubgroup_sizeworkgroup_id, max(_GLF_IDENTITY(GLF_merged4_0_1_13_1_1_17_2_1_13_3_1_12num_workgroupsubgroup_local_idsubgroup_sizeworkgroup_id, (GLF_merged4_0_1_13_1_1_17_2_1_13_3_1_12num_workgroupsubgroup_local_idsubgroup_sizeworkgroup_id) | (GLF_merged4_0_1_13_1_1_17_2_1_13_3_1_12num_workgroupsubgroup_local_idsubgroup_sizeworkgroup_id)), GLF_merged4_0_1_13_1_1_17_2_1_13_3_1_12num_workgroupsubgroup_local_idsubgroup_sizeworkgroup_id)), uvec4(0u, 0u, 0u, 0u) ^ (_GLF_IDENTITY(GLF_merged4_0_1_13_1_1_17_2_1_13_3_1_12num_workgroupsubgroup_local_idsubgroup_sizeworkgroup_id, max(_GLF_IDENTITY(GLF_merged4_0_1_13_1_1_17_2_1_13_3_1_12num_workgroupsubgroup_local_idsubgroup_sizeworkgroup_id, (GLF_merged4_0_1_13_1_1_17_2_1_13_3_1_12num_workgroupsubgroup_local_idsubgroup_sizeworkgroup_id) | (GLF_merged4_0_1_13_1_1_17_2_1_13_3_1_12num_workgroupsubgroup_local_idsubgroup_sizeworkgroup_id)), GLF_merged4_0_1_13_1_1_17_2_1_13_3_1_12num_workgroupsubgroup_local_idsubgroup_sizeworkgroup_id)))) : _GLF_IDENTITY(_GLF_FUZZED((++ GLF_merged4_0_1_13_1_1_17_2_1_13_3_1_12num_workgroupsubgroup_local_idsubgroup_sizeworkgroup_id)), uvec4(0u, 0u, 0u, 0u) ^ (_GLF_FUZZED((++ GLF_merged4_0_1_13_1_1_17_2_1_13_3_1_12num_workgroupsubgroup_local_idsubgroup_sizeworkgroup_id)))))).y + _GLF_IDENTITY(1, (_GLF_IDENTITY(true, ! (! (true))) ? 1 : _GLF_FUZZED(77892))) < GLF_merged4_0_1_13_1_1_17_2_1_13_3_1_12num_workgroupsubgroup_local_idsubgroup_sizeworkgroup_id.z)
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   for(int _injected_loop_counter = int(_GLF_ZERO(0.0, injectionSwitch.x)); _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
    {
     if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
      }
     else
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_WRAPPED_IF_FALSE(false))
          {
          }
         else
          {
           barrier();
          }
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         do
          {
           switch(_GLF_SWITCH(((0 << _GLF_IDENTITY(int(8), int(8))) & -63461)))
            {
             case 0:
             case 71:
             case 15:
             case 65:
             case 7:
             case 74:
             barrier();
             break;
             case 36:
             (+ uvec3(_GLF_IDENTITY(66836u, (false ? _GLF_FUZZED(workgroup_id) : 66836u)), 166194u, _GLF_IDENTITY(103128u, (103128u) | (103128u))));
             default:
             1;
            }
          }
         while(_GLF_WRAPPED_LOOP(false));
        }
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(26.69), _GLF_FUZZED(-88.59)), bvec2(false, false))), injectionSwitch)).x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
    }
   else
    {
     if(_GLF_DEAD(false))
      barrier();
     do
      {
       switch(_GLF_SWITCH((0 ^ 0)))
        {
         case 0:
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_DEAD(false))
            {
             switch(_GLF_IDENTITY(_GLF_SWITCH(_GLF_IDENTITY(0, 0 ^ (0))), (_GLF_IDENTITY(_GLF_SWITCH(_GLF_IDENTITY(0, 0 ^ (0))), (_GLF_IDENTITY(_GLF_SWITCH(_GLF_IDENTITY(0, 0 ^ (0))), ~ (~ (_GLF_SWITCH(_GLF_IDENTITY(0, _GLF_IDENTITY(0 ^ (0), ~ (~ (0 ^ (0)))))))))) | 0)) / ((1 << _GLF_IDENTITY(int(4), _GLF_IDENTITY(int(4), (int(4)) - 0))) >> _GLF_IDENTITY(int(_GLF_IDENTITY(4, 0 + (4))), int(4)))))
              {
               case 30:
               for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != ((55882 / -61094) & 0)); _injected_loop_counter --)
                {
                 ;
                }
               case 27:
               bvec4 _GLF_SWITCH_2_0v;
               case 0:
               case 88:
               if(_GLF_DEAD(false))
                barrier();
               case 26:
               case 82:
               if(_GLF_DEAD(false))
                barrier();
               case 38:
               if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                {
                }
               else
                {
                 for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < (1 & 1)); _injected_loop_counter ++)
                  {
                   barrier();
                  }
                }
               break;
               if(_GLF_DEAD(false))
                barrier();
               default:
               1;
              }
            }
           barrier();
          }
         int i = 0;
         for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
          {
           if(_GLF_DEAD(false))
            {
             switch(_GLF_SWITCH((int(_GLF_ZERO(0.0, injectionSwitch.x)) >> _GLF_IDENTITY(int(3), int(3)))))
              {
               case 0:
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                barrier();
               case 86:
               case 50:
               case 28:
               if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
                barrier();
               case 83:
               case 70:
               case 2:
               case 95:
               case 61:
               if(_GLF_WRAPPED_IF_FALSE(false))
                {
                }
               else
                {
                 do
                  {
                   barrier();
                  }
                 while(_GLF_WRAPPED_LOOP(false));
                 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                  barrier();
                }
               break;
               if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).x > injectionSwitch.y))))
                {
                 if(_GLF_WRAPPED_IF_TRUE(true))
                  {
                   barrier();
                  }
                 else
                  {
                  }
                }
               case 31:
               if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(_GLF_IDENTITY(! (false), (! (false)) || false), (! (false)) && true)))))
                barrier();
               bvec4(false, true, false, true);
               for(int _injected_loop_counter = int(_GLF_ONE(1.0, injectionSwitch.y)); _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
                {
                 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                  barrier();
                }
               default:
               1;
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                barrier();
              }
            }
          }
         atomicStore(buf[next_virtual_gid], uint(_GLF_IDENTITY(read_1, (read_1) | 0u) + 1 == read_2) + 1, 4, 64, 4);
         break;
         if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y), true && ((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y))))))
          {
           if(_GLF_DEAD(false))
            barrier();
          }
         else
          {
          }
         case 61:
         if(_GLF_WRAPPED_IF_TRUE(true))
          {
           if(_GLF_DEAD(false))
            {
             if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
              {
               barrier();
              }
             else
              {
              }
            }
          }
         else
          {
          }
         if(false)
          {
           notEqual(bvec4(false, true, true, false), bvec4(true, true, true, false));
           do
            {
             switch(_GLF_SWITCH(((-14750 & 0) << _GLF_IDENTITY(int(0), int(0)))))
              {
               case 50:
               bvec4 _GLF_SWITCH_3_0v, _GLF_SWITCH_3_1v, _GLF_SWITCH_3_2v;
               case 96:
               _GLF_SWITCH_3_0v;
               case 0:
               case 94:
               case 28:
               if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), _GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(! (! (false)), true), bvec2(bvec2(_GLF_IDENTITY(bvec2(! (! (false)), true), bvec2(bvec4(bvec2(! (! (false)), true), true, false)))))), bvec2(bvec2(_GLF_IDENTITY(bvec2(! (! (false)), true), bvec2(bvec2(_GLF_IDENTITY(bvec2(! (! (false)), true), bvec2(bvec4(bvec2(! (! (false)), true), true, false)))))))))), _GLF_IDENTITY(bool(bvec2(bool(_GLF_IDENTITY(bvec2(! (! (false)), true), bvec2(bvec2(_GLF_IDENTITY(bvec2(! (! (false)), true), bvec2(bvec4(bvec2(! (! (false)), true), true, false))))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bool(bvec2(bool(bvec2(bool(_GLF_IDENTITY(bvec2(! (! (false)), true), bvec2(bvec2(_GLF_IDENTITY(bvec2(! (! (false)), true), bvec2(bvec4(bvec2(! (! (false)), true), true, false))))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true))))))))
                barrier();
               break;
               default:
               1;
              }
            }
           while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, ! (! (false)))));
           findLSB(uvec4(3135u, 128758u, 58394u, 130934u));
           if(_GLF_DEAD(false))
            {
             do
              {
               switch(_GLF_SWITCH(0))
                {
                 case 78:
                 vec2(57.85, 338.467);
                 case 24:
                 mat2x4(mat3x4(-2262.0248, 7.6, -9.0, -3.6, -158.861, 93.06, 108.154, -52.11, 76.62, -7983.8019, -5389.5723, -0.3));
                 case 0:
                 case 46:
                 case 62:
                 case 4:
                 case 50:
                 case 68:
                 case 17:
                 case 48:
                 if(_GLF_DEAD(false))
                  barrier();
                 break;
                 case 88:
                 mat2(3.5, -1.7, 0.6, -6.7);
                 case 38:
                 mat2 _GLF_SWITCH_3_0v;
                 default:
                 1;
                }
              }
             while(_GLF_WRAPPED_LOOP(false));
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              barrier();
             barrier();
            }
           bvec2 _GLF_SWITCH_0_0v, _GLF_SWITCH_0_1v[66];
           vec2 _GLF_SWITCH_0_2v[5], _GLF_SWITCH_0_3v;
           any(greaterThanEqual(ivec4(-75373, _GLF_IDENTITY(29290, ~ (~ (_GLF_IDENTITY(29290, int(_GLF_IDENTITY(_GLF_IDENTITY(int(29290), clamp(int(29290), int(29290), _GLF_IDENTITY(int(29290), (_GLF_IDENTITY(int(29290), max(int(29290), int(29290)))) | (int(29290))))), (int(29290)) | (int(29290)))))))), -52001, -74401), ivec4(35297, -88412, 84371, -44102)));
           if(_GLF_WRAPPED_IF_FALSE(false))
            {
            }
           else
            {
             if(_GLF_DEAD(false))
              barrier();
             if(_GLF_DEAD(false))
              barrier();
             for(ivec4 _GLF_SWITCH_0_4v, _GLF_SWITCH_0_5v[20], _GLF_SWITCH_0_6v; _GLF_IDENTITY(false, (false) || false); mat4(-9626.5375, 590.479, -7.2, 418.077, _GLF_IDENTITY(4327.7760, (4327.7760) + 0.0), -8.0, 0.0, 9818.5029, -6.4, -68.02, 34.52, -2.0, -611.782, 2550.6068, -5.5, 8.5))
              {
               if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), _GLF_IDENTITY((! (true)) && true, ((! (true)) && true) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), true), bvec2(bvec3(bvec2(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), (! (true)) && true))), true), false)))))))
                {
                 if(_GLF_DEAD(false))
                  barrier();
                 do
                  {
                   if(_GLF_IDENTITY(false, ! (! (false))))
                    {
                     vec2 _GLF_SWITCH_0_7v, _GLF_SWITCH_0_8v, _GLF_SWITCH_0_9v;
                     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch.y : _GLF_FUZZED(-3010.9778)))))))
                      barrier();
                    }
                   else
                    {
                     if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                      {
                      }
                     else
                      {
                       i;
                      }
                     mat4(-45.18, 4.4, 1.1, _GLF_IDENTITY(4172.7899, (4172.7899) / 1.0), 1960.3865, 45.02, 9821.3755, -1078.8325, -5.4, _GLF_IDENTITY(5.1, float(float(5.1))), 34.90, -441.888, -2.8, 2.1, -8.4, _GLF_IDENTITY(87.62, (87.62) - 0.0));
                     if(_GLF_DEAD(false))
                      barrier();
                     if(_GLF_DEAD(false))
                      barrier();
                     do
                      {
                       asin(vec4(-743.004, 5.4, 939.794, -7568.9260));
                      }
                     while(_GLF_WRAPPED_LOOP(false));
                     if(_GLF_DEAD(false))
                      barrier();
                     matrixCompMult(mat3(-404.487, -263.943, 0.2, 5447.1506, 185.497, 12.47, -34.80, -0.0, _GLF_IDENTITY(-9.5, _GLF_IDENTITY(float(mat4x3(-9.5, 1.0, 0.0, 0.0, 1.0, 1.0, _GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-9910.1210)), float(0.0), bool(true))), _GLF_IDENTITY(0.0, float(mat4x3(0.0, 0.0, 1.0, 1.0, abs(0.0), 0.0, 0.0, sqrt(0.0), 0.0, 1.0, 1.0, 0.0))))), 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 1.0)), _GLF_IDENTITY(1.0 * (float(mat4x3(-9.5, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 1.0))), float(float(1.0 * (float(mat4x3(-9.5, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 1.0))))))))), mat3(-85.31, 568.021, 3707.2993, 6.8, 60.72, -7503.7759, -0.4, -932.130, -635.076));
                     true;
                     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
                      {
                       for(int _injected_loop_counter = (0 >> _GLF_IDENTITY(int(8), int(8))); _GLF_WRAPPED_LOOP(_injected_loop_counter < ((1 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), (int(2)) - (0 >> _GLF_IDENTITY(int(3), int(3)))))) >> _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), (int(2)) - 0)))); _injected_loop_counter ++)
                        {
                         barrier();
                        }
                      }
                     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                      barrier();
                     do
                      {
                       mat3x2(7.2, -7284.9049, -955.745, _GLF_IDENTITY(-364.711, 0.0 + (-364.711)), -6.6, -94.52);
                      }
                     while(_GLF_WRAPPED_LOOP(false));
                     if(_GLF_DEAD(false))
                      barrier();
                     if(_GLF_WRAPPED_IF_TRUE(true))
                      {
                       if(_GLF_WRAPPED_IF_TRUE(true))
                        {
                         if(_GLF_WRAPPED_IF_FALSE(false))
                          {
                           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                            barrier();
                          }
                         else
                          {
                           for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > (1 ^ 1)); _injected_loop_counter --)
                            {
                             if(_GLF_WRAPPED_IF_FALSE(false))
                              {
                              }
                             else
                              {
                               mat3(3019.4487, -39.70, -2.2, -965.081, 5.0, 321.775, -79.16, -4520.6619, _GLF_IDENTITY(-9859.9760, min(-9859.9760, -9859.9760)));
                              }
                            }
                          }
                        }
                       else
                        {
                        }
                       if(_GLF_DEAD(false))
                        barrier();
                       if(_GLF_DEAD(false))
                        barrier();
                      }
                     else
                      {
                      }
                     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                      {
                       switch(_GLF_SWITCH(0))
                        {
                         case 0:
                         if(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, bool(bvec2(_GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, bool(bvec4(true, false, true, false))))), true)))), (_GLF_WRAPPED_IF_TRUE(true)) && true))
                          {
                           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                            {
                             do
                              {
                               barrier();
                              }
                             while(_GLF_WRAPPED_LOOP(false));
                            }
                           barrier();
                          }
                         else
                          {
                          }
                         if(_GLF_DEAD(false))
                          barrier();
                         break;
                         case 45:
                         mat4(mat4x2(-540.015, -7405.0251, 3556.2872, -2.3, 209.461, 5.5, 676.477, -2476.4548));
                         default:
                         1;
                        }
                      }
                     (+ mat3x2(-34.07, 75.27, -454.553, _GLF_IDENTITY(30.51, min(30.51, _GLF_IDENTITY(30.51, (30.51) - 0.0))), 2578.7682, 7.1));
                    }
                  }
                 while(_GLF_WRAPPED_LOOP(false));
                }
               else
                {
                }
               if(_GLF_WRAPPED_IF_TRUE(true))
                {
                 for(ivec3 _GLF_SWITCH_0_10v[46], _GLF_SWITCH_0_11v, _GLF_SWITCH_0_12v; false; vec4(-9.5, -6818.4893, -93.46, -850.810))
                  {
                   if(_GLF_DEAD(false))
                    {
                     if(_GLF_DEAD(false))
                      barrier();
                     barrier();
                    }
                   outerProduct(max(_GLF_SWITCH_0_3v, -3.7), vec2(_GLF_IDENTITY(-663.493, clamp(-663.493, -663.493, -663.493)), 9.6));
                   uvec4 _GLF_SWITCH_0_13v;
                   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(asin(-284.701)) : injectionSwitch.y))))))
                    {
                     if(_GLF_WRAPPED_IF_FALSE(false))
                      {
                      }
                     else
                      {
                       barrier();
                      }
                    }
                   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
                    {
                     if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
                      {
                       barrier();
                      }
                     else
                      {
                      }
                    }
                   for(int _injected_loop_counter = ((1 << _GLF_IDENTITY(int(0), int(0))) >> _GLF_IDENTITY(int(0), int(0))); _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
                    {
                     if(_GLF_DEAD(false))
                      {
                       if(_GLF_WRAPPED_IF_TRUE(true))
                        {
                         do
                          {
                           if(_GLF_DEAD(false))
                            {
                             do
                              {
                               if(_GLF_DEAD(false))
                                barrier();
                              }
                             while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, ! (! (false)))));
                             barrier();
                            }
                          }
                         while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(trunc(vec2(353.654, -5.5))) : _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)))).y))));
                         do
                          {
                           if(_GLF_DEAD(false))
                            {
                             do
                              {
                               barrier();
                              }
                             while(_GLF_WRAPPED_LOOP(_GLF_FALSE(_GLF_IDENTITY(false, (false) && true), (injectionSwitch.x > injectionSwitch.y))));
                            }
                           if(_GLF_DEAD(false))
                            {
                             if(_GLF_WRAPPED_IF_TRUE(true))
                              {
                               barrier();
                              }
                             else
                              {
                              }
                            }
                          }
                         while(_GLF_WRAPPED_LOOP(false));
                        }
                       else
                        {
                        }
                       barrier();
                       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), bool(bvec4(_GLF_IDENTITY(false, false || (false)), true, false, true)))))
                        barrier();
                      }
                    }
                   for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
                    {
                     do
                      {
                       if(_GLF_DEAD(false))
                        barrier();
                       ((mat3x2(7590.6283, -25.20, -7.2, -66.11, -839.790, -8.9) == mat3x2(mat4x2(-0.8, 5.4, 674.014, -7819.1219, _GLF_IDENTITY(-3.0, 1.0 * (-3.0)), -5.4, -237.327, 73.92))) ? (mat2(16.94, -3.3, -1.5, 4.9) / mat2(335.047, -72.18, 4.7, 915.572)) : mat2(-753.976, -66.13, 422.010, -7830.8723));
                      }
                     while(_GLF_WRAPPED_LOOP(false));
                     if(_GLF_DEAD(false))
                      barrier();
                    }
                   if(_GLF_DEAD(false))
                    barrier();
                   if(_GLF_WRAPPED_IF_TRUE(true))
                    {
                     exp2(vec4(-7.7, _GLF_IDENTITY(69.63, _GLF_IDENTITY(float(mat2x4(69.63, log(1.0), 0.0, 1.0, tan(0.0), abs(0.0), _GLF_IDENTITY(dot(vec4(1.0, 0.0, 0.0, 1.0), vec4(0.0, 1.0, 1.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)))), dot(vec4(1.0, 0.0, 0.0, 1.0), vec4(0.0, 1.0, _GLF_IDENTITY(1.0, (1.0) - 0.0), 0.0))), 0.0)), float(mat3(float(mat2x4(69.63, log(1.0), 0.0, 1.0, tan(0.0), abs(0.0), _GLF_IDENTITY(dot(vec4(1.0, 0.0, 0.0, 1.0), vec4(0.0, 1.0, 1.0, 0.0)), dot(vec4(1.0, 0.0, 0.0, 1.0), vec4(0.0, 1.0, 1.0, 0.0))), 0.0)), 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0)))), 692.349, 1.8));
                    }
                   else
                    {
                    }
                  }
                }
               else
                {
                 if(_GLF_DEAD(false))
                  barrier();
                }
               if(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(false, false, false), bvec3(bvec3(bvec3(false, false, false))))), (_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(false, false, false), _GLF_IDENTITY(bvec3(bvec3(bvec3(false, _GLF_IDENTITY(false, (false) || false), false))), bvec3(bvec4(bvec3(bvec3(bvec3(false, _GLF_IDENTITY(false, (false) || false), false))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), (bool(_GLF_IDENTITY(bvec3(false, false, false), bvec3(bvec3(bvec3(false, false, false)))))) && true)) && true)), false, false), bvec3(bvec4(bvec3(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, false, false), bvec3(bvec3(bvec3(false, false, false)))))), false, false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), _GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(false, false, false), bvec3(bvec3(bvec3(false, false, false))))), (_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(false, false, false), bvec3(bvec3(bvec3(false, false, false))))), (bool(_GLF_IDENTITY(bvec3(false, false, false), bvec3(bvec3(bvec3(false, false, false)))))) && true)) && true)), false, false), bvec3(bvec4(bvec3(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, _GLF_IDENTITY(false, bool(bvec2(false, false))), false), bvec3(bvec3(bvec3(false, false, false)))))), false, false), _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)))))), bvec3(bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(false, false, false), bvec3(bvec3(bvec3(false, false, false))))), (_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(false, false, false), bvec3(bvec3(bvec3(false, false, false))))), (bool(_GLF_IDENTITY(bvec3(false, false, false), bvec3(bvec3(bvec3(false, false, false)))))) && true)) && true)), false, false), bvec3(bvec4(bvec3(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, _GLF_IDENTITY(false, false || (false)), false), bvec3(_GLF_IDENTITY(bvec3(bvec3(false, false, false)), _GLF_IDENTITY(bvec3(bvec3(bvec3(bvec3(false, false, false)))), _GLF_IDENTITY(bvec3(bvec3(bvec3(bvec3(bvec3(bvec3(false, false, false)))))), bvec3(bvec4(bvec3(bvec3(bvec3(bvec3(bvec3(bvec3(false, false, false)))))), true))))))))), false, false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))).r)
                {
                 ;
                }
               if(_GLF_WRAPPED_IF_TRUE(true))
                {
                 do
                  {
                   if(_GLF_DEAD(false))
                    barrier();
                   uvec2 _GLF_SWITCH_0_14v, _GLF_SWITCH_0_15v;
                   matrixCompMult(mat2x4(_GLF_IDENTITY(236.933, (false ? _GLF_FUZZED(846.668) : _GLF_IDENTITY(236.933, 1.0 * (236.933)))), 303.819, 0.5, 390.820, 8.9, -470.941, 620.140, -2.8), mat2x4(2653.7142, 874.419, -4.3, 1.4, 0.0, -70.66, 58.06, -38.83));
                   ;
                   isnan(refract(vec4(77.61, -12.95, -9.5, -441.480), vec4(5.9, 7.9, 8477.7617, -5.6), 5517.0758));
                   int _GLF_SWITCH_0_16v, _GLF_SWITCH_0_17v[40], _GLF_SWITCH_0_18v;
                   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                    {
                     do
                      {
                       switch(_GLF_SWITCH(0))
                        {
                         case 74:
                         vec3 _GLF_SWITCH_1_0v[66], _GLF_SWITCH_1_1v;
                         case 0:
                         if(_GLF_DEAD(false))
                          barrier();
                         case 55:
                         for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
                          {
                           if(_GLF_DEAD(false))
                            barrier();
                          }
                         if(_GLF_WRAPPED_IF_TRUE(true))
                          {
                           if(_GLF_DEAD(false))
                            barrier();
                           switch(_GLF_SWITCH(0))
                            {
                             case 43:
                             workgroup_id;
                             case 0:
                             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                              barrier();
                             case 7:
                             case 42:
                             if(_GLF_DEAD(false))
                              barrier();
                             case 39:
                             case 4:
                             if(_GLF_DEAD(false))
                              {
                               if(_GLF_DEAD(false))
                                {
                                 do
                                  {
                                   barrier();
                                  }
                                 while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))));
                                }
                               barrier();
                              }
                             case 85:
                             case 13:
                             case 62:
                             if(_GLF_DEAD(false))
                              barrier();
                             barrier();
                             break;
                             case 46:
                             bvec3 _GLF_SWITCH_2_0v[86];
                             default:
                             1;
                            }
                          }
                         else
                          {
                          }
                         if(_GLF_DEAD(false))
                          barrier();
                         break;
                         if(_GLF_DEAD(false))
                          barrier();
                         default:
                         1;
                        }
                      }
                     while(_GLF_WRAPPED_LOOP(false));
                    }
                   pow(-3946.9945, (-104.946 / 8.6));
                   if(_GLF_DEAD(false))
                    barrier();
                   bool _GLF_SWITCH_0_19v[67], _GLF_SWITCH_0_20v;
                  }
                 while((_GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(subgroup_id, uint(uint(subgroup_id)))) >> 0u) == workgroup_size));
                }
               else
                {
                }
              }
            }
           while((-4183.3790 != 1.0))
            {
             if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) || false)) && true)))
              barrier();
             mat3x4(3.0, -2.5, -582.596, 4.3, -757.100, 9449.4415, -46.26, 0.2, 35.59, 16.53, 17.43, -93.16);
             if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * vec2(1.0, 1.0), _GLF_IDENTITY(mix(vec2(((injectionSwitch) * vec2(1.0, 1.0))[0], ((injectionSwitch) * vec2(1.0, 1.0))[1]), vec2(_GLF_FUZZED(-8.9), _GLF_FUZZED(-6.3)), bvec2(false, false)), mat2(1.0) * (mix(vec2(((injectionSwitch) * vec2(1.0, 1.0))[0], ((injectionSwitch) * vec2(1.0, 1.0))[1]), vec2(_GLF_FUZZED(-8.9), _GLF_FUZZED(-6.3)), bvec2(false, false)))))).y))))
              {
              }
             else
              {
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(vec4(-263.070, 6.3, 4.2, -7767.6480).p), _GLF_FUZZED(8.4)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))) : _GLF_FUZZED(injectionSwitch))).y))))
                barrier();
               do
                {
                 if(true)
                  {
                   GLF_merged4_0_1_13_1_1_17_2_1_13_3_1_12num_workgroupsubgroup_local_idsubgroup_sizeworkgroup_id.z;
                   if(_GLF_DEAD(false))
                    {
                     if(_GLF_DEAD(false))
                      barrier();
                     if(_GLF_WRAPPED_IF_FALSE(false))
                      {
                      }
                     else
                      {
                       if(_GLF_DEAD(false))
                        {
                         switch(_GLF_SWITCH(0))
                          {
                           case 0:
                           case 34:
                           case 16:
                           case 47:
                           case 1:
                           case 53:
                           case 12:
                           case 27:
                           if(_GLF_WRAPPED_IF_TRUE(true))
                            {
                             barrier();
                            }
                           else
                            {
                            }
                           break;
                           case 36:
                           uvec2 _GLF_SWITCH_3_0v, _GLF_SWITCH_3_1v;
                           default:
                           1;
                          }
                        }
                       if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))))))
                        {
                        }
                       else
                        {
                         if(_GLF_DEAD(false))
                          barrier();
                         barrier();
                        }
                       if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true))))
                        {
                         do
                          {
                           barrier();
                          }
                         while(_GLF_WRAPPED_LOOP(false));
                        }
                      }
                     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + length(0.0)) > injectionSwitch.y))))
                      {
                       switch(_GLF_SWITCH(0))
                        {
                         case 65:
                         mat2(7.7, 8.7, _GLF_IDENTITY(0.6, (0.6) - 0.0), -66.98);
                         case 0:
                         case 16:
                         case 89:
                         do
                          {
                           barrier();
                          }
                         while(_GLF_WRAPPED_LOOP(false));
                         break;
                         case 49:
                         ;
                         case 12:
                         clamp(uvec3(78424u, 113798u, 181239u), subgroup_size, 11996u);
                         default:
                         1;
                        }
                      }
                    }
                   if(_GLF_DEAD(false))
                    {
                     if(_GLF_WRAPPED_IF_FALSE(false))
                      {
                      }
                     else
                      {
                       barrier();
                      }
                    }
                   if(_GLF_WRAPPED_IF_TRUE(true))
                    {
                     uvec3(90411u, 147498u, 78099u);
                    }
                   else
                    {
                    }
                  }
                }
               while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, ! (! (false)))));
              }
             if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY((false), false || ((false))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), bool(bvec4(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, true, true))) && (false)))))))
              {
               do
                {
                 if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(vec2(_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(min(injectionSwitch, injectionSwitch), clamp(_GLF_IDENTITY(min(injectionSwitch, injectionSwitch), vec2(_GLF_IDENTITY(mat2(min(injectionSwitch, injectionSwitch), 1.0, 0.0), (mat2(min(injectionSwitch, injectionSwitch), 1.0, 0.0)) * mat2(1.0)))), _GLF_IDENTITY(min(injectionSwitch, injectionSwitch), (min(injectionSwitch, injectionSwitch)) * mat2(1.0)), min(injectionSwitch, injectionSwitch)))), injectionSwitch, injectionSwitch))), vec2(_GLF_IDENTITY(mat2(vec2(_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(min(injectionSwitch, injectionSwitch), clamp(_GLF_IDENTITY(min(injectionSwitch, injectionSwitch), vec2(_GLF_IDENTITY(mat2(min(injectionSwitch, injectionSwitch), 1.0, 0.0), (mat2(min(injectionSwitch, injectionSwitch), 1.0, 0.0)) * mat2(1.0)))), _GLF_IDENTITY(min(injectionSwitch, injectionSwitch), (min(injectionSwitch, injectionSwitch)) * mat2(1.0)), min(injectionSwitch, injectionSwitch)))), injectionSwitch, injectionSwitch))), 1.0, 1.0), _GLF_IDENTITY(mat2(_GLF_IDENTITY(mat2x4(mat2(vec2(_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(min(injectionSwitch, injectionSwitch), clamp(_GLF_IDENTITY(min(injectionSwitch, injectionSwitch), vec2(_GLF_IDENTITY(mat2(min(injectionSwitch, injectionSwitch), 1.0, 0.0), (mat2(min(injectionSwitch, injectionSwitch), 1.0, 0.0)) * mat2(1.0)))), _GLF_IDENTITY(min(injectionSwitch, injectionSwitch), (min(injectionSwitch, injectionSwitch)) * mat2(1.0)), min(injectionSwitch, injectionSwitch)))), injectionSwitch, injectionSwitch))), 1.0, 1.0)), (mat2x4(mat2(vec2(_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(min(injectionSwitch, injectionSwitch), clamp(_GLF_IDENTITY(min(injectionSwitch, injectionSwitch), vec2(_GLF_IDENTITY(mat2(min(injectionSwitch, injectionSwitch), 1.0, 0.0), (mat2(min(injectionSwitch, injectionSwitch), 1.0, 0.0)) * mat2(1.0)))), _GLF_IDENTITY(min(injectionSwitch, injectionSwitch), (min(injectionSwitch, injectionSwitch)) * mat2(1.0)), min(injectionSwitch, injectionSwitch)))), injectionSwitch, injectionSwitch))), 1.0, 1.0))) - mat2x4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))), (mat2(_GLF_IDENTITY(mat2x4(mat2(vec2(_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(min(injectionSwitch, injectionSwitch), clamp(_GLF_IDENTITY(min(injectionSwitch, injectionSwitch), vec2(_GLF_IDENTITY(mat2(min(injectionSwitch, injectionSwitch), 1.0, 0.0), (mat2(min(injectionSwitch, injectionSwitch), 1.0, 0.0)) * mat2(1.0)))), _GLF_IDENTITY(min(injectionSwitch, injectionSwitch), (min(injectionSwitch, injectionSwitch)) * mat2(1.0)), min(injectionSwitch, injectionSwitch)))), injectionSwitch, injectionSwitch))), 1.0, 1.0)), (mat2x4(mat2(vec2(_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(min(injectionSwitch, injectionSwitch), clamp(_GLF_IDENTITY(min(injectionSwitch, injectionSwitch), vec2(_GLF_IDENTITY(mat2(min(injectionSwitch, injectionSwitch), 1.0, 0.0), (mat2(min(injectionSwitch, injectionSwitch), 1.0, 0.0)) * mat2(1.0)))), _GLF_IDENTITY(min(injectionSwitch, injectionSwitch), (min(injectionSwitch, injectionSwitch)) * mat2(1.0)), min(injectionSwitch, injectionSwitch)))), injectionSwitch, injectionSwitch))), 1.0, 1.0))) - mat2x4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)))) + mat2(0.0, 0.0, 0.0, 0.0))))))).y))))
                  {
                  }
                 else
                  {
                   barrier();
                  }
                }
               while(_GLF_WRAPPED_LOOP(false));
              }
             do
              {
               if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))), false, true, false))), false || ((injectionSwitch.x > injectionSwitch.y))))))
                {
                 if(_GLF_WRAPPED_IF_FALSE(false))
                  {
                  }
                 else
                  {
                   if(_GLF_WRAPPED_IF_TRUE(true))
                    {
                     if(_GLF_WRAPPED_IF_TRUE(true))
                      {
                       barrier();
                      }
                     else
                      {
                      }
                    }
                   else
                    {
                    }
                  }
                }
              }
             while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
             mat4x3(-8094.8706, -5312.0469, -0.4, _GLF_IDENTITY(4.9, (4.9) / 1.0), 8.4, -420.724, 644.003, -8.3, -7.9, 4305.2493, -8707.2676, _GLF_IDENTITY(-7.9, (true ? _GLF_IDENTITY(_GLF_IDENTITY(-7.9, max(-7.9, _GLF_IDENTITY(_GLF_IDENTITY(-7.9, float(mat3(-7.9, 0.0, 0.0, 0.0, 1.0, 1.0, _GLF_IDENTITY(0.0, 1.0 * (0.0)), 0.0, 0.0))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(-7.9, _GLF_IDENTITY(float(mat3x4(-7.9, 1.0, 0.0, sin(0.0), _GLF_IDENTITY(dot(vec4(1.0, 0.0, 0.0, 0.0), vec4(1.0, 0.0, 0.0, 0.0)), dot(vec4(1.0, 0.0, 0.0, 0.0), vec4(1.0, 0.0, 0.0, 0.0))), cos(0.0), round(length(normalize(1.0))), 1.0, 0.0, 0.0, tan(0.0), _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), vec2(1.0, 0.0))))), clamp(float(mat3x4(-7.9, 1.0, 0.0, sin(0.0), _GLF_IDENTITY(dot(vec4(1.0, 0.0, 0.0, 0.0), vec4(1.0, 0.0, 0.0, 0.0)), dot(vec4(1.0, 0.0, 0.0, 0.0), vec4(1.0, 0.0, 0.0, 0.0))), cos(0.0), round(length(normalize(1.0))), 1.0, 0.0, 0.0, tan(0.0), _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), vec2(1.0, 0.0))))), float(mat3x4(-7.9, 1.0, 0.0, sin(0.0), _GLF_IDENTITY(dot(vec4(1.0, 0.0, 0.0, 0.0), vec4(1.0, 0.0, 0.0, 0.0)), dot(vec4(1.0, 0.0, 0.0, 0.0), vec4(1.0, 0.0, 0.0, 0.0))), cos(0.0), round(length(normalize(1.0))), 1.0, 0.0, 0.0, tan(0.0), _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), vec2(1.0, 0.0))))), float(mat3x4(-7.9, 1.0, 0.0, sin(0.0), _GLF_IDENTITY(dot(vec4(1.0, 0.0, 0.0, 0.0), vec4(1.0, 0.0, 0.0, 0.0)), dot(vec4(1.0, 0.0, 0.0, 0.0), vec4(1.0, 0.0, 0.0, 0.0))), cos(0.0), round(length(normalize(1.0))), 1.0, 0.0, 0.0, tan(0.0), _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), vec2(1.0, 0.0)))))))), float(mat3(-7.9, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0))), _GLF_IDENTITY(clamp(_GLF_IDENTITY(-7.9, float(_GLF_IDENTITY(mat3(-7.9, 0.0, _GLF_IDENTITY(0.0, float(vec3(_GLF_IDENTITY(0.0, (0.0) / 1.0), 0.0, 0.0))), 0.0, 1.0, 1.0, 0.0, 0.0, 0.0), mat3(mat4x3(mat3(-7.9, 0.0, _GLF_IDENTITY(0.0, float(vec3(_GLF_IDENTITY(0.0, (0.0) / 1.0), 0.0, 0.0))), 0.0, 1.0, 1.0, 0.0, 0.0, 0.0)))))), _GLF_IDENTITY(-7.9, float(mat3(-7.9, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0))), _GLF_IDENTITY(-7.9, float(mat3(-7.9, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0)))), 1.0 * (_GLF_IDENTITY(clamp(_GLF_IDENTITY(-7.9, float(_GLF_IDENTITY(mat3(-7.9, 0.0, _GLF_IDENTITY(0.0, float(vec3(_GLF_IDENTITY(0.0, (0.0) / 1.0), 0.0, 0.0))), 0.0, 1.0, 1.0, 0.0, 0.0, 0.0), mat3(mat4x3(mat3(-7.9, 0.0, _GLF_IDENTITY(0.0, float(vec3(_GLF_IDENTITY(0.0, (0.0) / 1.0), 0.0, 0.0))), 0.0, 1.0, 1.0, 0.0, 0.0, 0.0)))))), _GLF_IDENTITY(-7.9, float(mat3(-7.9, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0))), _GLF_IDENTITY(-7.9, float(mat3(-7.9, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0)))), (false ? _GLF_FUZZED(7.8) : clamp(_GLF_IDENTITY(-7.9, float(_GLF_IDENTITY(mat3(-7.9, 0.0, _GLF_IDENTITY(0.0, float(vec3(_GLF_IDENTITY(0.0, (0.0) / 1.0), 0.0, 0.0))), 0.0, 1.0, 1.0, 0.0, 0.0, 0.0), mat3(mat4x3(mat3(-7.9, 0.0, _GLF_IDENTITY(0.0, float(vec3(_GLF_IDENTITY(0.0, (0.0) / 1.0), 0.0, 0.0))), 0.0, 1.0, 1.0, 0.0, 0.0, 0.0)))))), _GLF_IDENTITY(-7.9, float(mat3(-7.9, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0))), _GLF_IDENTITY(-7.9, float(mat3(-7.9, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0)))))))))) / 1.0))), (true ? _GLF_IDENTITY(-7.9, max(-7.9, _GLF_IDENTITY(_GLF_IDENTITY(-7.9, float(mat3(-7.9, 0.0, 0.0, 0.0, 1.0, 1.0, _GLF_IDENTITY(0.0, 1.0 * (0.0)), 0.0, 0.0))), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(-7.9, _GLF_IDENTITY(float(mat3x4(-7.9, 1.0, 0.0, sin(0.0), _GLF_IDENTITY(dot(vec4(1.0, 0.0, 0.0, 0.0), vec4(1.0, 0.0, 0.0, 0.0)), dot(vec4(1.0, 0.0, 0.0, 0.0), vec4(1.0, 0.0, 0.0, 0.0))), cos(0.0), round(length(normalize(1.0))), 1.0, 0.0, 0.0, tan(0.0), _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), vec2(1.0, 0.0))))), clamp(float(mat3x4(-7.9, 1.0, 0.0, sin(0.0), _GLF_IDENTITY(dot(vec4(1.0, 0.0, 0.0, 0.0), vec4(1.0, 0.0, 0.0, 0.0)), dot(vec4(1.0, 0.0, 0.0, 0.0), vec4(1.0, 0.0, 0.0, 0.0))), cos(0.0), round(length(normalize(1.0))), 1.0, 0.0, 0.0, tan(0.0), _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), vec2(1.0, 0.0))))), float(mat3x4(-7.9, 1.0, 0.0, sin(0.0), _GLF_IDENTITY(dot(vec4(1.0, 0.0, 0.0, 0.0), vec4(1.0, 0.0, 0.0, 0.0)), dot(vec4(1.0, 0.0, 0.0, 0.0), vec4(1.0, 0.0, 0.0, 0.0))), cos(0.0), round(length(normalize(1.0))), 1.0, 0.0, 0.0, tan(0.0), _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), vec2(1.0, 0.0))))), float(mat3x4(-7.9, 1.0, 0.0, sin(0.0), _GLF_IDENTITY(dot(vec4(1.0, 0.0, 0.0, 0.0), vec4(1.0, 0.0, 0.0, 0.0)), dot(vec4(1.0, 0.0, 0.0, 0.0), vec4(1.0, 0.0, 0.0, 0.0))), cos(0.0), round(length(normalize(1.0))), 1.0, 0.0, 0.0, tan(0.0), _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), vec2(1.0, 0.0)))))))), float(mat3(-7.9, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0))), _GLF_IDENTITY(clamp(_GLF_IDENTITY(-7.9, float(_GLF_IDENTITY(mat3(-7.9, 0.0, _GLF_IDENTITY(0.0, float(vec3(_GLF_IDENTITY(0.0, (0.0) / 1.0), 0.0, 0.0))), 0.0, 1.0, 1.0, 0.0, 0.0, 0.0), mat3(mat4x3(mat3(-7.9, 0.0, _GLF_IDENTITY(0.0, float(vec3(_GLF_IDENTITY(0.0, (0.0) / 1.0), 0.0, 0.0))), 0.0, 1.0, 1.0, 0.0, 0.0, 0.0)))))), _GLF_IDENTITY(-7.9, float(mat3(-7.9, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0))), _GLF_IDENTITY(-7.9, float(mat3(-7.9, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0)))), 1.0 * (_GLF_IDENTITY(clamp(_GLF_IDENTITY(-7.9, float(_GLF_IDENTITY(mat3(-7.9, 0.0, _GLF_IDENTITY(0.0, float(vec3(_GLF_IDENTITY(0.0, (0.0) / 1.0), 0.0, 0.0))), 0.0, 1.0, 1.0, 0.0, 0.0, 0.0), mat3(mat4x3(mat3(-7.9, 0.0, _GLF_IDENTITY(0.0, float(vec3(_GLF_IDENTITY(0.0, (0.0) / 1.0), 0.0, 0.0))), 0.0, 1.0, 1.0, 0.0, 0.0, 0.0)))))), _GLF_IDENTITY(-7.9, float(mat3(-7.9, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0))), _GLF_IDENTITY(-7.9, float(mat3(-7.9, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0)))), (false ? _GLF_FUZZED(7.8) : clamp(_GLF_IDENTITY(-7.9, float(_GLF_IDENTITY(mat3(-7.9, 0.0, _GLF_IDENTITY(0.0, float(vec3(_GLF_IDENTITY(0.0, (0.0) / 1.0), 0.0, 0.0))), 0.0, 1.0, 1.0, 0.0, 0.0, 0.0), mat3(mat4x3(mat3(-7.9, 0.0, _GLF_IDENTITY(0.0, float(vec3(_GLF_IDENTITY(0.0, (0.0) / 1.0), 0.0, 0.0))), 0.0, 1.0, 1.0, 0.0, 0.0, 0.0)))))), _GLF_IDENTITY(-7.9, float(mat3(-7.9, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0))), _GLF_IDENTITY(-7.9, float(mat3(-7.9, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0)))))))))) / 1.0, _GLF_IDENTITY(float(float((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(-7.9, _GLF_IDENTITY(float(mat3x4(-7.9, 1.0, 0.0, sin(0.0), _GLF_IDENTITY(dot(vec4(1.0, 0.0, 0.0, 0.0), vec4(1.0, 0.0, 0.0, 0.0)), dot(vec4(1.0, 0.0, 0.0, 0.0), vec4(1.0, 0.0, 0.0, 0.0))), cos(0.0), round(length(normalize(1.0))), 1.0, 0.0, 0.0, tan(0.0), _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), vec2(1.0, 0.0))))), clamp(float(mat3x4(-7.9, 1.0, 0.0, sin(0.0), _GLF_IDENTITY(dot(vec4(1.0, 0.0, 0.0, 0.0), vec4(1.0, 0.0, 0.0, 0.0)), dot(vec4(1.0, 0.0, 0.0, 0.0), vec4(1.0, 0.0, 0.0, 0.0))), cos(0.0), round(length(normalize(1.0))), 1.0, 0.0, 0.0, tan(0.0), _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), vec2(1.0, 0.0))))), float(mat3x4(-7.9, 1.0, 0.0, sin(0.0), _GLF_IDENTITY(dot(vec4(1.0, 0.0, 0.0, 0.0), vec4(1.0, 0.0, 0.0, 0.0)), dot(vec4(1.0, 0.0, 0.0, 0.0), vec4(1.0, 0.0, 0.0, 0.0))), cos(0.0), round(length(normalize(1.0))), 1.0, 0.0, 0.0, tan(0.0), _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), vec2(1.0, 0.0))))), float(mat3x4(-7.9, 1.0, 0.0, sin(0.0), _GLF_IDENTITY(dot(vec4(1.0, 0.0, 0.0, 0.0), vec4(1.0, 0.0, 0.0, 0.0)), dot(vec4(1.0, 0.0, 0.0, 0.0), vec4(1.0, 0.0, 0.0, 0.0))), cos(0.0), round(length(normalize(1.0))), 1.0, 0.0, 0.0, tan(0.0), _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), vec2(1.0, 0.0)))))))), float(mat3(-7.9, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0))), _GLF_IDENTITY(clamp(_GLF_IDENTITY(-7.9, float(_GLF_IDENTITY(mat3(-7.9, 0.0, _GLF_IDENTITY(0.0, float(vec3(_GLF_IDENTITY(0.0, (0.0) / 1.0), 0.0, 0.0))), 0.0, 1.0, 1.0, 0.0, 0.0, 0.0), mat3(mat4x3(mat3(-7.9, 0.0, _GLF_IDENTITY(0.0, float(vec3(_GLF_IDENTITY(0.0, (0.0) / 1.0), 0.0, 0.0))), 0.0, 1.0, 1.0, 0.0, 0.0, 0.0)))))), _GLF_IDENTITY(-7.9, float(mat3(-7.9, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0))), _GLF_IDENTITY(-7.9, float(mat3(-7.9, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0)))), 1.0 * (_GLF_IDENTITY(clamp(_GLF_IDENTITY(-7.9, float(_GLF_IDENTITY(mat3(-7.9, 0.0, _GLF_IDENTITY(0.0, float(vec3(_GLF_IDENTITY(0.0, (0.0) / 1.0), 0.0, 0.0))), 0.0, 1.0, 1.0, 0.0, 0.0, 0.0), mat3(mat4x3(mat3(-7.9, 0.0, _GLF_IDENTITY(0.0, float(vec3(_GLF_IDENTITY(0.0, (0.0) / 1.0), 0.0, 0.0))), 0.0, 1.0, 1.0, 0.0, 0.0, 0.0)))))), _GLF_IDENTITY(-7.9, float(mat3(-7.9, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0))), _GLF_IDENTITY(-7.9, float(mat3(-7.9, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0)))), (false ? _GLF_FUZZED(7.8) : clamp(_GLF_IDENTITY(-7.9, float(_GLF_IDENTITY(mat3(-7.9, 0.0, _GLF_IDENTITY(0.0, float(vec3(_GLF_IDENTITY(0.0, (0.0) / 1.0), 0.0, 0.0))), 0.0, 1.0, 1.0, 0.0, 0.0, 0.0), mat3(mat4x3(mat3(-7.9, 0.0, _GLF_IDENTITY(0.0, float(vec3(_GLF_IDENTITY(0.0, (0.0) / 1.0), 0.0, 0.0))), 0.0, 1.0, 1.0, 0.0, 0.0, 0.0)))))), _GLF_IDENTITY(-7.9, float(mat3(-7.9, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0))), _GLF_IDENTITY(-7.9, float(mat3(-7.9, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0)))))))))) / 1.0)), min(float(float((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(-7.9, _GLF_IDENTITY(float(mat3x4(-7.9, 1.0, 0.0, sin(0.0), _GLF_IDENTITY(dot(vec4(1.0, 0.0, 0.0, 0.0), vec4(1.0, 0.0, 0.0, 0.0)), dot(vec4(1.0, 0.0, 0.0, 0.0), vec4(1.0, 0.0, 0.0, 0.0))), cos(0.0), round(length(normalize(1.0))), 1.0, 0.0, 0.0, tan(0.0), _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), vec2(1.0, 0.0))))), clamp(float(mat3x4(-7.9, 1.0, 0.0, sin(0.0), _GLF_IDENTITY(dot(vec4(1.0, 0.0, 0.0, 0.0), vec4(1.0, 0.0, 0.0, 0.0)), dot(vec4(1.0, 0.0, 0.0, 0.0), vec4(1.0, 0.0, 0.0, 0.0))), cos(0.0), round(length(normalize(1.0))), 1.0, 0.0, 0.0, tan(0.0), _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), vec2(1.0, 0.0))))), float(mat3x4(-7.9, 1.0, 0.0, sin(0.0), _GLF_IDENTITY(dot(vec4(1.0, 0.0, 0.0, 0.0), vec4(1.0, 0.0, 0.0, 0.0)), dot(vec4(1.0, 0.0, 0.0, 0.0), vec4(1.0, 0.0, 0.0, 0.0))), cos(0.0), round(length(normalize(1.0))), 1.0, 0.0, 0.0, tan(0.0), _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), vec2(1.0, 0.0))))), float(mat3x4(-7.9, 1.0, 0.0, sin(0.0), _GLF_IDENTITY(dot(vec4(1.0, 0.0, 0.0, 0.0), vec4(1.0, 0.0, 0.0, 0.0)), dot(vec4(1.0, 0.0, 0.0, 0.0), vec4(1.0, 0.0, 0.0, 0.0))), cos(0.0), round(length(normalize(1.0))), 1.0, 0.0, 0.0, tan(0.0), _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), vec2(1.0, 0.0)))))))), float(mat3(-7.9, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0))), _GLF_IDENTITY(clamp(_GLF_IDENTITY(-7.9, float(_GLF_IDENTITY(mat3(-7.9, 0.0, _GLF_IDENTITY(0.0, float(vec3(_GLF_IDENTITY(0.0, (0.0) / 1.0), 0.0, 0.0))), 0.0, 1.0, 1.0, 0.0, 0.0, 0.0), mat3(mat4x3(mat3(-7.9, 0.0, _GLF_IDENTITY(0.0, float(vec3(_GLF_IDENTITY(0.0, (0.0) / 1.0), 0.0, 0.0))), 0.0, 1.0, 1.0, 0.0, 0.0, 0.0)))))), _GLF_IDENTITY(-7.9, float(mat3(-7.9, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0))), _GLF_IDENTITY(-7.9, float(mat3(-7.9, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0)))), 1.0 * (_GLF_IDENTITY(clamp(_GLF_IDENTITY(-7.9, float(_GLF_IDENTITY(mat3(-7.9, 0.0, _GLF_IDENTITY(0.0, float(vec3(_GLF_IDENTITY(0.0, (0.0) / 1.0), 0.0, 0.0))), 0.0, 1.0, 1.0, 0.0, 0.0, 0.0), mat3(mat4x3(mat3(-7.9, 0.0, _GLF_IDENTITY(0.0, float(vec3(_GLF_IDENTITY(0.0, (0.0) / 1.0), 0.0, 0.0))), 0.0, 1.0, 1.0, 0.0, 0.0, 0.0)))))), _GLF_IDENTITY(-7.9, float(mat3(-7.9, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0))), _GLF_IDENTITY(-7.9, float(mat3(-7.9, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0)))), (false ? _GLF_FUZZED(7.8) : clamp(_GLF_IDENTITY(-7.9, float(_GLF_IDENTITY(mat3(-7.9, 0.0, _GLF_IDENTITY(0.0, float(vec3(_GLF_IDENTITY(0.0, (0.0) / 1.0), 0.0, 0.0))), 0.0, 1.0, 1.0, 0.0, 0.0, 0.0), mat3(mat4x3(mat3(-7.9, 0.0, _GLF_IDENTITY(0.0, float(vec3(_GLF_IDENTITY(0.0, (0.0) / 1.0), 0.0, 0.0))), 0.0, 1.0, 1.0, 0.0, 0.0, 0.0)))))), _GLF_IDENTITY(-7.9, float(mat3(-7.9, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0))), _GLF_IDENTITY(-7.9, float(mat3(-7.9, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0)))))))))) / 1.0)), float(float((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(-7.9, _GLF_IDENTITY(float(mat3x4(-7.9, 1.0, 0.0, sin(0.0), _GLF_IDENTITY(dot(vec4(1.0, 0.0, 0.0, 0.0), vec4(1.0, 0.0, 0.0, 0.0)), dot(vec4(1.0, 0.0, 0.0, 0.0), vec4(1.0, 0.0, 0.0, 0.0))), cos(0.0), round(length(normalize(1.0))), 1.0, 0.0, 0.0, tan(0.0), _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), vec2(1.0, 0.0))))), clamp(float(mat3x4(-7.9, 1.0, 0.0, sin(0.0), _GLF_IDENTITY(dot(vec4(1.0, 0.0, 0.0, 0.0), vec4(1.0, 0.0, 0.0, 0.0)), dot(vec4(1.0, 0.0, 0.0, 0.0), vec4(1.0, 0.0, 0.0, 0.0))), cos(0.0), round(length(normalize(1.0))), 1.0, 0.0, 0.0, tan(0.0), _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), vec2(1.0, 0.0))))), float(mat3x4(-7.9, 1.0, 0.0, sin(0.0), _GLF_IDENTITY(dot(vec4(1.0, 0.0, 0.0, 0.0), vec4(1.0, 0.0, 0.0, 0.0)), dot(vec4(1.0, 0.0, 0.0, 0.0), vec4(1.0, 0.0, 0.0, 0.0))), cos(0.0), round(length(normalize(1.0))), 1.0, 0.0, 0.0, tan(0.0), _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), vec2(1.0, 0.0))))), float(mat3x4(-7.9, 1.0, 0.0, sin(0.0), _GLF_IDENTITY(dot(vec4(1.0, 0.0, 0.0, 0.0), vec4(1.0, 0.0, 0.0, 0.0)), dot(vec4(1.0, 0.0, 0.0, 0.0), vec4(1.0, 0.0, 0.0, 0.0))), cos(0.0), round(length(normalize(1.0))), 1.0, 0.0, 0.0, tan(0.0), _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), vec2(1.0, 0.0)))))))), float(mat3(-7.9, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0))), _GLF_IDENTITY(clamp(_GLF_IDENTITY(-7.9, float(_GLF_IDENTITY(mat3(-7.9, 0.0, _GLF_IDENTITY(0.0, float(vec3(_GLF_IDENTITY(0.0, (0.0) / 1.0), 0.0, 0.0))), 0.0, 1.0, 1.0, 0.0, 0.0, 0.0), mat3(mat4x3(mat3(-7.9, 0.0, _GLF_IDENTITY(0.0, float(vec3(_GLF_IDENTITY(0.0, (0.0) / 1.0), 0.0, 0.0))), 0.0, 1.0, 1.0, 0.0, 0.0, 0.0)))))), _GLF_IDENTITY(-7.9, float(mat3(-7.9, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0))), _GLF_IDENTITY(-7.9, float(mat3(-7.9, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0)))), 1.0 * (_GLF_IDENTITY(clamp(_GLF_IDENTITY(-7.9, float(_GLF_IDENTITY(mat3(-7.9, 0.0, _GLF_IDENTITY(0.0, float(vec3(_GLF_IDENTITY(0.0, (0.0) / 1.0), 0.0, 0.0))), 0.0, 1.0, 1.0, 0.0, 0.0, 0.0), mat3(mat4x3(mat3(-7.9, 0.0, _GLF_IDENTITY(0.0, float(vec3(_GLF_IDENTITY(0.0, (0.0) / 1.0), 0.0, 0.0))), 0.0, 1.0, 1.0, 0.0, 0.0, 0.0)))))), _GLF_IDENTITY(-7.9, float(mat3(-7.9, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0))), _GLF_IDENTITY(-7.9, float(mat3(-7.9, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0)))), (false ? _GLF_FUZZED(7.8) : clamp(_GLF_IDENTITY(-7.9, float(_GLF_IDENTITY(mat3(-7.9, 0.0, _GLF_IDENTITY(0.0, float(vec3(_GLF_IDENTITY(0.0, (0.0) / 1.0), 0.0, 0.0))), 0.0, 1.0, 1.0, 0.0, 0.0, 0.0), mat3(mat4x3(mat3(-7.9, 0.0, _GLF_IDENTITY(0.0, float(vec3(_GLF_IDENTITY(0.0, (0.0) / 1.0), 0.0, 0.0))), 0.0, 1.0, 1.0, 0.0, 0.0, 0.0)))))), _GLF_IDENTITY(-7.9, float(mat3(-7.9, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0))), _GLF_IDENTITY(-7.9, float(mat3(-7.9, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0)))))))))) / 1.0)))))))) : _GLF_FUZZED(-2.6))) : _GLF_FUZZED(7567.7787))));
             if(_GLF_DEAD(false))
              barrier();
             if(_GLF_WRAPPED_IF_TRUE(true))
              {
               _GLF_SWITCH_0_3v.g;
              }
             else
              {
              }
            }
           if(_GLF_DEAD(false))
            barrier();
           float _GLF_SWITCH_0_21v;
          }
         default:
         if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec2(true, true)), true && (bool(bvec2(true, true)))))))
          {
           if(_GLF_DEAD(false))
            barrier();
          }
         else
          {
          }
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            {
             if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              {
              }
             else
              {
               barrier();
              }
            }
           barrier();
          }
         for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
          {
           1;
          }
        }
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
        barrier();
      }
     while(_GLF_WRAPPED_LOOP(false));
    }
  }
 else
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     do
      {
       barrier();
      }
     while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
    }
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
    }
   else
    {
     switch(_GLF_SWITCH((0 >> _GLF_IDENTITY(int(4), _GLF_IDENTITY(int(4), _GLF_IDENTITY(_GLF_IDENTITY(~ (~ (int(4))), max(~ (~ (_GLF_IDENTITY(int(4), (int(4)) + 0))), ~ (~ (int(4))))), ~ (~ (_GLF_IDENTITY(~ (~ (int(4))), max(~ (~ (_GLF_IDENTITY(int(4), (int(4)) + 0))), ~ (~ (_GLF_IDENTITY(int(4), max(int(4), int(4)))))))))))))))
      {
       case 23:
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_WRAPPED_IF_TRUE(true))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
          {
           if(_GLF_WRAPPED_IF_FALSE(false))
            {
            }
           else
            {
             barrier();
            }
          }
        }
       else
        {
        }
       uvec4(uvec2(95350u, 190831u), (_GLF_IDENTITY(uvec2(30487u, 64490u) + uvec2(199960u, 197861u), (uvec2(30487u, 64490u) + uvec2(199960u, 197861u)) | uvec2(0u, 0u))));
       if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))) / vec2(1.0, 1.0)).x, mix(float(_GLF_FUZZED(1378.4929)), float(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))) / vec2(1.0, 1.0)).x), bool(true))) > injectionSwitch.y)), true && (_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))) / vec2(1.0, _GLF_IDENTITY(1.0, determinant(mat3(1.0, 0.0, 1.0, 0.0, 1.0, exp(0.0), 0.0, 0.0, 1.0)) * (1.0)))).x, mix(float(_GLF_FUZZED(1378.4929)), float(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))) / vec2(1.0, 1.0)).x), bool(true))) > injectionSwitch.y))))))
        {
        }
       else
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch, vec2(mat3(injectionSwitch, 0.0, 0.0, 1.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 0.0))).y))))
          {
           if(_GLF_WRAPPED_IF_FALSE(false))
            {
            }
           else
            {
             barrier();
            }
          }
         do
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            {
             if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
              {
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                barrier();
               do
                {
                 switch(_GLF_SWITCH(0))
                  {
                   case 19:
                   bvec2 _GLF_SWITCH_3_0v;
                   case 36:
                   mat2x3 _GLF_SWITCH_3_1v, _GLF_SWITCH_3_2v, _GLF_SWITCH_3_3v[22];
                   case 0:
                   case 28:
                   do
                    {
                     if(_GLF_WRAPPED_IF_FALSE(false))
                      {
                      }
                     else
                      {
                       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                        barrier();
                      }
                     do
                      {
                       barrier();
                      }
                     while(_GLF_WRAPPED_LOOP(false));
                    }
                   while(_GLF_WRAPPED_LOOP(false));
                   break;
                   case 32:
                   mat4x3 _GLF_SWITCH_3_4v;
                   default:
                   1;
                  }
                }
               while(_GLF_WRAPPED_LOOP(false));
              }
             else
              {
              }
             if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), bool(bvec4(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), false, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
              barrier();
             do
              {
               switch(_GLF_SWITCH((0 << _GLF_IDENTITY(int(4), int(4)))))
                {
                 case 0:
                 case 93:
                 case 35:
                 case 92:
                 case 96:
                 case 63:
                 case 55:
                 case 65:
                 case 34:
                 if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), true, true, true))))
                  barrier();
                 break;
                 default:
                 1;
                }
              }
             while(_GLF_WRAPPED_LOOP(false));
            }
          }
         while(_GLF_WRAPPED_LOOP(false));
        }
       if(_GLF_DEAD(false))
        barrier();
       case 0:
       case 42:
       case 26:
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
          {
           barrier();
          }
        }
       case 90:
       if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(203.558, -483.880))))) + vec2(0.0, 0.0)).x > injectionSwitch.y)))) && true))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), false || (_GLF_IDENTITY(false, ! (! (false)))))))
          {
           if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
            {
             if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
              {
               do
                {
                 barrier();
                }
               while(_GLF_WRAPPED_LOOP(false));
              }
            }
           else
            {
            }
           barrier();
          }
         barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
        }
       case 74:
       do
        {
         if(_GLF_DEAD(false))
          {
           for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
            {
             barrier();
            }
          }
        }
       while(_GLF_WRAPPED_LOOP(false));
       for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != (1 & 1)); _injected_loop_counter ++)
        {
         if(_GLF_WRAPPED_IF_FALSE(false))
          {
          }
         else
          {
           for(int _injected_loop_counter = ((1 << _GLF_IDENTITY(int(5), int(5))) >> _GLF_IDENTITY(int(5), int(5))); _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
            {
             atomicStore(buf[next_virtual_gid], uint(read_1 + 1 == _GLF_IDENTITY(read_2, (read_2) - 0u)) + 1, 4, 64, 4);
            }
          }
        }
       break;
       if(_GLF_DEAD(false))
        barrier();
       default:
       if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), bool(bvec4(bool(false), true, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))) || false)))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       1;
       if(_GLF_DEAD(false))
        {
         if(_GLF_WRAPPED_IF_TRUE(true))
          {
           barrier();
          }
         else
          {
          }
        }
      }
    }
  }
}
