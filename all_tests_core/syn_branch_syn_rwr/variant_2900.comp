#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 uvec3 GLF_merged3_0_1_13_1_1_11_2_1_14subgroup_sizevirtual_gidworkgroup_base;
 uint subgroup_id = gl_SubgroupID;
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_DEAD(false))
  return;
 GLF_merged3_0_1_13_1_1_11_2_1_14subgroup_sizevirtual_gidworkgroup_base.x = subgroup_size;
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(6.9)), float(_GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED((+ -6.4))), bool(false)))))), bool(true)))), ! (! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(6.9)), float(_GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED((+ -6.4))), bool(false)))))), bool(true)))))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(6.9)), float(injectionSwitch.y), bool(true))))), ! (! (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(_GLF_IDENTITY(float(_GLF_FUZZED(6.9)), _GLF_IDENTITY(_GLF_IDENTITY(float(_GLF_IDENTITY(float(float(_GLF_FUZZED(6.9))), mix(float(_GLF_IDENTITY(float(float(_GLF_FUZZED(6.9))), (float(float(_GLF_FUZZED(6.9)))) / 1.0)), float(_GLF_FUZZED(73.70)), bool(false)))), min(float(_GLF_IDENTITY(float(float(_GLF_FUZZED(6.9))), mix(float(_GLF_IDENTITY(float(float(_GLF_FUZZED(6.9))), (float(float(_GLF_FUZZED(6.9)))) / 1.0)), float(_GLF_FUZZED(73.70)), bool(false)))), float(_GLF_IDENTITY(float(float(_GLF_FUZZED(6.9))), mix(float(_GLF_IDENTITY(float(float(_GLF_FUZZED(6.9))), (float(float(_GLF_FUZZED(6.9)))) / 1.0)), float(_GLF_FUZZED(73.70)), bool(false)))))), min(_GLF_IDENTITY(float(_GLF_IDENTITY(float(float(_GLF_FUZZED(6.9))), mix(float(_GLF_IDENTITY(float(float(_GLF_FUZZED(6.9))), (float(float(_GLF_FUZZED(6.9)))) / 1.0)), float(_GLF_FUZZED(73.70)), bool(false)))), min(float(_GLF_IDENTITY(float(float(_GLF_FUZZED(6.9))), mix(float(_GLF_IDENTITY(float(float(_GLF_FUZZED(6.9))), (float(float(_GLF_FUZZED(6.9)))) / 1.0)), float(_GLF_FUZZED(73.70)), bool(false)))), float(_GLF_IDENTITY(float(float(_GLF_FUZZED(6.9))), mix(float(_GLF_IDENTITY(float(float(_GLF_FUZZED(6.9))), (float(float(_GLF_FUZZED(6.9)))) / 1.0)), float(_GLF_FUZZED(73.70)), bool(false)))))), _GLF_IDENTITY(float(_GLF_IDENTITY(float(float(_GLF_FUZZED(6.9))), mix(float(_GLF_IDENTITY(float(float(_GLF_FUZZED(6.9))), (float(float(_GLF_FUZZED(6.9)))) / 1.0)), float(_GLF_FUZZED(73.70)), bool(false)))), min(float(_GLF_IDENTITY(float(float(_GLF_FUZZED(6.9))), mix(float(_GLF_IDENTITY(float(float(_GLF_FUZZED(6.9))), (float(float(_GLF_FUZZED(6.9)))) / 1.0)), float(_GLF_FUZZED(73.70)), bool(false)))), float(_GLF_IDENTITY(float(float(_GLF_FUZZED(6.9))), mix(float(_GLF_IDENTITY(float(float(_GLF_FUZZED(6.9))), (float(float(_GLF_FUZZED(6.9)))) / 1.0)), float(_GLF_FUZZED(73.70)), bool(false))))))))), float(injectionSwitch.y), bool(true))))))))), ! (! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(6.9)), float(injectionSwitch.y), bool(true))), clamp(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(6.9)), float(injectionSwitch.y), bool(true))), _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(6.9)), float(injectionSwitch.y), bool(true))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, 0.0 + (injectionSwitch.y)), mix(float(_GLF_FUZZED(6.9)), float(injectionSwitch.y), bool(true))))))), ! (! (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), mix(float(_GLF_FUZZED(6.9)), float(injectionSwitch.y), bool(true))))))))))))))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, float(_GLF_IDENTITY(mat2(injectionSwitch.y, 1.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), vec2(1.0, 0.0))), 1.0), transpose(transpose(mat2(injectionSwitch.y, 1.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), vec2(1.0, 0.0))), 1.0)))))), injectionSwitch.y)), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, float(_GLF_IDENTITY(mat2(injectionSwitch.y, 1.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, _GLF_IDENTITY(0.0, _GLF_IDENTITY(float(mat2(_GLF_IDENTITY(0.0, min(0.0, 0.0)), 1.0, 0.0, 1.0)), _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), vec2(1.0, 0.0))) * (float(mat2(_GLF_IDENTITY(0.0, min(0.0, 0.0)), 1.0, 0.0, 1.0))))))), dot(vec2(1.0, 0.0), vec2(1.0, 0.0))), 1.0), transpose(transpose(mat2(injectionSwitch.y, 1.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), vec2(1.0, 0.0))), 1.0)))))), injectionSwitch.y)), clamp(_GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch, mix(_GLF_IDENTITY(vec2((injectionSwitch)[0], _GLF_FUZZED(3794.8160)), max(_GLF_IDENTITY(vec2((injectionSwitch)[0], _GLF_FUZZED(3794.8160)), max(vec2((injectionSwitch)[0], _GLF_FUZZED(3794.8160)), vec2((injectionSwitch)[0], _GLF_FUZZED(3794.8160)))), vec2((injectionSwitch)[0], _GLF_FUZZED(3794.8160)))), vec2(_GLF_FUZZED((497.837)), (injectionSwitch)[1]), bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))).y, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, float(_GLF_IDENTITY(_GLF_IDENTITY(mat2(injectionSwitch.y, 1.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), vec2(1.0, 0.0))), 1.0), transpose(transpose(mat2(injectionSwitch.y, 1.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), vec2(1.0, 0.0))), 1.0)))), transpose(transpose(_GLF_IDENTITY(_GLF_IDENTITY(mat2(injectionSwitch.y, 1.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), vec2(1.0, 0.0))), 1.0), transpose(transpose(mat2(injectionSwitch.y, 1.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), vec2(1.0, 0.0))), 1.0)))), transpose(transpose(_GLF_IDENTITY(mat2(injectionSwitch.y, 1.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), vec2(1.0, 0.0))), 1.0), transpose(transpose(mat2(injectionSwitch.y, 1.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), vec2(1.0, 0.0))), 1.0)))))))))))), min(_GLF_IDENTITY(injectionSwitch.y, float(_GLF_IDENTITY(_GLF_IDENTITY(mat2(injectionSwitch.y, 1.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), vec2(1.0, 0.0))), 1.0), transpose(transpose(mat2(injectionSwitch.y, 1.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), vec2(1.0, 0.0))), 1.0)))), transpose(transpose(_GLF_IDENTITY(_GLF_IDENTITY(mat2(injectionSwitch.y, 1.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), vec2(1.0, 0.0))), 1.0), transpose(transpose(mat2(injectionSwitch.y, 1.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), vec2(1.0, 0.0))), 1.0)))), transpose(transpose(_GLF_IDENTITY(mat2(injectionSwitch.y, 1.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), vec2(1.0, 0.0))), 1.0), transpose(transpose(mat2(injectionSwitch.y, 1.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), vec2(1.0, 0.0))), 1.0)))))))))))), _GLF_IDENTITY(injectionSwitch.y, float(_GLF_IDENTITY(_GLF_IDENTITY(mat2(injectionSwitch.y, 1.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), vec2(1.0, 0.0))), 1.0), transpose(transpose(mat2(injectionSwitch.y, 1.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), vec2(1.0, 0.0))), 1.0)))), transpose(transpose(_GLF_IDENTITY(_GLF_IDENTITY(mat2(injectionSwitch.y, 1.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), vec2(1.0, 0.0))), 1.0), transpose(transpose(mat2(injectionSwitch.y, 1.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), vec2(1.0, 0.0))), 1.0)))), transpose(transpose(_GLF_IDENTITY(mat2(injectionSwitch.y, 1.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), vec2(1.0, 0.0))), 1.0), transpose(transpose(mat2(injectionSwitch.y, 1.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), vec2(1.0, 0.0))), 1.0)))))))))))))), injectionSwitch.y)), _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, float(_GLF_IDENTITY(mat2(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0), 1.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), dot(vec2(_GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, min(1.0, 1.0)), 1.0)), 0.0), vec2(1.0, 0.0))), 1.0), transpose(transpose(mat2(injectionSwitch.y, 1.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, _GLF_IDENTITY(0.0, (0.0) - _GLF_IDENTITY(dot(vec2(1.0, 1.0), vec2(0.0, 0.0)), dot(vec2(1.0, 1.0), vec2(0.0, 0.0)))))), dot(vec2(1.0, 0.0), vec2(1.0, 0.0))), 1.0)))))), injectionSwitch.y)), _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, float(_GLF_IDENTITY(mat2(injectionSwitch.y, 1.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), vec2(1.0, 0.0))), 1.0), transpose(transpose(mat2(injectionSwitch.y, 1.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), vec2(1.0, 0.0))), 1.0)))))), injectionSwitch.y))))) / 1.0)))))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 uint num_workgroup = _GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, max(gl_NumWorkGroups, gl_NumWorkGroups)), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, max(gl_NumWorkGroups, gl_NumWorkGroups)), (true ? _GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, max(gl_NumWorkGroups, gl_NumWorkGroups)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(uvec4(47477u, 69964u, 42354u, 36774u).ttt) : _GLF_IDENTITY(gl_NumWorkGroups, max(gl_NumWorkGroups, gl_NumWorkGroups)))) : _GLF_FUZZED(GLF_merged3_0_1_13_1_1_11_2_1_14subgroup_sizevirtual_gidworkgroup_base)))))).x;
 uint workgroup_size = gl_WorkGroupSize.x;
 uint workgroup_id = _GLF_IDENTITY(gl_WorkGroupID.x, 1u * (gl_WorkGroupID.x));
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 uint workgroup_base = workgroup_size * workgroup_id;
 GLF_merged3_0_1_13_1_1_11_2_1_14subgroup_sizevirtual_gidworkgroup_base.z = workgroup_base;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true), true && (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))))
    return;
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED((-271.708 + 1.2)), _GLF_FUZZED(-3128.0948)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))).y))))
    return;
  }
 uint virtual_gid = _GLF_IDENTITY(_GLF_IDENTITY(GLF_merged3_0_1_13_1_1_11_2_1_14subgroup_sizevirtual_gidworkgroup_base.z, _GLF_IDENTITY(max(GLF_merged3_0_1_13_1_1_11_2_1_14subgroup_sizevirtual_gidworkgroup_base.z, GLF_merged3_0_1_13_1_1_11_2_1_14subgroup_sizevirtual_gidworkgroup_base.z), (max(GLF_merged3_0_1_13_1_1_11_2_1_14subgroup_sizevirtual_gidworkgroup_base.z, GLF_merged3_0_1_13_1_1_11_2_1_14subgroup_sizevirtual_gidworkgroup_base.z)) / 1u)) + _GLF_IDENTITY(subgroup_id, uint(uvec2(_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY((subgroup_id) << 0u, 0u ^ ((subgroup_id) << 0u))), 0u))) * GLF_merged3_0_1_13_1_1_11_2_1_14subgroup_sizevirtual_gidworkgroup_base.x, _GLF_IDENTITY((GLF_merged3_0_1_13_1_1_11_2_1_14subgroup_sizevirtual_gidworkgroup_base.z + subgroup_id * GLF_merged3_0_1_13_1_1_11_2_1_14subgroup_sizevirtual_gidworkgroup_base.x), ((GLF_merged3_0_1_13_1_1_11_2_1_14subgroup_sizevirtual_gidworkgroup_base.z + subgroup_id * GLF_merged3_0_1_13_1_1_11_2_1_14subgroup_sizevirtual_gidworkgroup_base.x)) | ((GLF_merged3_0_1_13_1_1_11_2_1_14subgroup_sizevirtual_gidworkgroup_base.z + subgroup_id * GLF_merged3_0_1_13_1_1_11_2_1_14subgroup_sizevirtual_gidworkgroup_base.x))) >> 0u) + subgroup_local_id;
 if(_GLF_DEAD(false))
  return;
 GLF_merged3_0_1_13_1_1_11_2_1_14subgroup_sizevirtual_gidworkgroup_base.y = virtual_gid;
 uint next_virtual_gid = _GLF_IDENTITY(GLF_merged3_0_1_13_1_1_11_2_1_14subgroup_sizevirtual_gidworkgroup_base.z + _GLF_IDENTITY(subgroup_id, (subgroup_id) / 1u) * GLF_merged3_0_1_13_1_1_11_2_1_14subgroup_sizevirtual_gidworkgroup_base.x + ((subgroup_local_id + 1) % GLF_merged3_0_1_13_1_1_11_2_1_14subgroup_sizevirtual_gidworkgroup_base.x), clamp(GLF_merged3_0_1_13_1_1_11_2_1_14subgroup_sizevirtual_gidworkgroup_base.z + _GLF_IDENTITY(subgroup_id, (subgroup_id) / 1u) * GLF_merged3_0_1_13_1_1_11_2_1_14subgroup_sizevirtual_gidworkgroup_base.x + ((subgroup_local_id + 1) % _GLF_IDENTITY(GLF_merged3_0_1_13_1_1_11_2_1_14subgroup_sizevirtual_gidworkgroup_base.x, 0u ^ (GLF_merged3_0_1_13_1_1_11_2_1_14subgroup_sizevirtual_gidworkgroup_base.x))), _GLF_IDENTITY(GLF_merged3_0_1_13_1_1_11_2_1_14subgroup_sizevirtual_gidworkgroup_base.z + _GLF_IDENTITY(subgroup_id, (subgroup_id) / 1u) * GLF_merged3_0_1_13_1_1_11_2_1_14subgroup_sizevirtual_gidworkgroup_base.x + ((subgroup_local_id + 1) % GLF_merged3_0_1_13_1_1_11_2_1_14subgroup_sizevirtual_gidworkgroup_base.x), (false ? _GLF_FUZZED(subgroup_id) : GLF_merged3_0_1_13_1_1_11_2_1_14subgroup_sizevirtual_gidworkgroup_base.z + _GLF_IDENTITY(subgroup_id, (subgroup_id) / 1u) * GLF_merged3_0_1_13_1_1_11_2_1_14subgroup_sizevirtual_gidworkgroup_base.x + ((subgroup_local_id + 1) % GLF_merged3_0_1_13_1_1_11_2_1_14subgroup_sizevirtual_gidworkgroup_base.x))), GLF_merged3_0_1_13_1_1_11_2_1_14subgroup_sizevirtual_gidworkgroup_base.z + _GLF_IDENTITY(subgroup_id, (subgroup_id) / 1u) * GLF_merged3_0_1_13_1_1_11_2_1_14subgroup_sizevirtual_gidworkgroup_base.x + ((_GLF_IDENTITY(subgroup_local_id + 1, 0u | (subgroup_local_id + 1))) % GLF_merged3_0_1_13_1_1_11_2_1_14subgroup_sizevirtual_gidworkgroup_base.x)));
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && true))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))
  return;
 uint read_1 = atomicLoad(buf[GLF_merged3_0_1_13_1_1_11_2_1_14subgroup_sizevirtual_gidworkgroup_base.y], _GLF_IDENTITY(4, _GLF_IDENTITY((_GLF_IDENTITY(4, _GLF_IDENTITY(int(ivec4(4, 1, 1, 1)), _GLF_IDENTITY(0, _GLF_IDENTITY(~ (_GLF_IDENTITY(~ _GLF_IDENTITY((0), int(int((0)))), (~ (0)) * 1)), max(_GLF_IDENTITY(~ (_GLF_IDENTITY(~ _GLF_IDENTITY((0), int(int((0)))), (~ (0)) * 1)), int(ivec4(~ (_GLF_IDENTITY(~ _GLF_IDENTITY((0), int(int((0)))), (~ (0)) * 1)), 0, 1, 0))), ~ (_GLF_IDENTITY(~ _GLF_IDENTITY((0), int(int((0)))), (~ (0)) * 1))))) | _GLF_IDENTITY((_GLF_IDENTITY(int(ivec4(4, 1, 1, 1)), (true ? int(ivec4(4, 1, 1, 1)) : _GLF_FUZZED(findMSB(subgroup_size))))), ((int(ivec4(4, 1, _GLF_IDENTITY(1, 0 | (_GLF_IDENTITY(1, min(1, 1)))), 1)))) - 0)))), ((_GLF_IDENTITY(_GLF_IDENTITY(4, (4) >> 0), _GLF_IDENTITY(int(_GLF_IDENTITY(_GLF_IDENTITY(ivec4(4, 1, 1, 1), _GLF_IDENTITY(clamp(ivec4(4, 1, 1, 1), ivec4(4, 1, 1, 1), _GLF_IDENTITY(ivec4(4, 1, 1, 1), ~ (~ _GLF_IDENTITY((ivec4(4, 1, 1, 1)), ((ivec4(4, 1, 1, 1))) | ((ivec4(4, 1, 1, 1))))))), min(clamp(ivec4(4, 1, 1, 1), ivec4(4, 1, 1, 1), _GLF_IDENTITY(ivec4(4, 1, 1, _GLF_IDENTITY(1, min(1, 1))), ~ (~ (ivec4(4, 1, 1, 1))))), clamp(ivec4(4, _GLF_IDENTITY(1, 0 + (1)), 1, 1), ivec4(4, 1, 1, 1), _GLF_IDENTITY(ivec4(4, 1, 1, 1), ~ (~ (ivec4(4, _GLF_IDENTITY(1, min(_GLF_IDENTITY(1, (1) >> 0), 1)), 1, 1)))))))), max(_GLF_IDENTITY(ivec4(4, _GLF_IDENTITY(1, ~ (_GLF_IDENTITY(~ (1), max(~ (1), ~ (1))))), 1, 1), clamp(ivec4(4, 1, 1, _GLF_IDENTITY(1, (1) >> int(_GLF_ZERO(0.0, injectionSwitch.x)))), _GLF_IDENTITY(ivec4(4, 1, 1, 1), (ivec4(4, 1, 1, 1)) >> ivec4(0, 0, 0, 0)), _GLF_IDENTITY(ivec4(4, 1, 1, 1), ~ (~ _GLF_IDENTITY((ivec4(4, 1, 1, 1)), ((ivec4(4, 1, 1, 1))) | (_GLF_IDENTITY((ivec4(4, 1, 1, 1)), max((ivec4(4, 1, 1, 1)), (ivec4(4, 1, 1, 1)))))))))), _GLF_IDENTITY(ivec4(4, 1, 1, 1), clamp(_GLF_IDENTITY(ivec4(4, 1, 1, 1), min(_GLF_IDENTITY(ivec4(4, 1, 1, 1), (false ? _GLF_FUZZED(ivec4(49005, -38457, -68059, 62388)) : ivec4(4, 1, 1, 1))), ivec4(4, 1, 1, 1))), ivec4(4, 1, 1, _GLF_IDENTITY(1, ~ (_GLF_IDENTITY(~ (1), (_GLF_IDENTITY(~ (1), (~ (1)) | (~ (1)))) >> 0)))), _GLF_IDENTITY(ivec4(4, 1, 1, 1), ~ (~ (ivec4(4, 1, 1, 1))))))))), 0 | _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(int(ivec4(4, 1, 1, _GLF_IDENTITY(1, ~ (~ (1))))), min(int(ivec4(4, 1, 1, _GLF_IDENTITY(1, ~ (~ (1))))), int(ivec4(4, 1, 1, _GLF_IDENTITY(1, ~ (~ (1))))))), (true ? int(ivec4(4, 1, 1, 1)) : _GLF_FUZZED(findMSB(subgroup_size))))), ((int(ivec4(4, 1, 1, 1)))) - 0))))) >> 0) - 0), 64, 0);
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), (true ? _GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) : _GLF_FUZZED(pow(-829.354, 8.3)))) > injectionSwitch.y, true && (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), (true ? _GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) : _GLF_FUZZED(pow(-829.354, 8.3)))) > injectionSwitch.y, ! (! (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), (true ? _GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(max(injectionSwitch.x, injectionSwitch.x), (max(injectionSwitch.x, injectionSwitch.x)) / 1.0)) : _GLF_FUZZED(pow(-829.354, 8.3)))) > injectionSwitch.y)))))))))
  return;
 atomicStore(buf[next_virtual_gid], uint(read_1 + 1), 4, _GLF_IDENTITY(64, int(int(_GLF_IDENTITY(64, ~ (~ _GLF_IDENTITY(_GLF_IDENTITY((64), (false ? _GLF_FUZZED(10279) : (64))), (_GLF_IDENTITY(_GLF_IDENTITY((64), (_GLF_IDENTITY((64), ((64)) | 0)) | ((64))), (false ? _GLF_FUZZED(10279) : (64)))) | (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(64, (64) / 1), (64) | 0)), (_GLF_IDENTITY(false, _GLF_IDENTITY(! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, true && (false))), _GLF_IDENTITY(bool(bvec4(! (_GLF_IDENTITY(false, true && (false))), false, true, false)), ! (! (bool(bvec4(! (_GLF_IDENTITY(false, true && (false))), false, true, false))))))), ! (! (! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, true && (false))), _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec4(! (_GLF_IDENTITY(false, true && (false))), false, true, false)), true && (_GLF_IDENTITY(bool(bvec4(! (_GLF_IDENTITY(false, true && (false))), false, true, false)), false || (bool(bvec4(! (_GLF_IDENTITY(false, true && (false))), false, true, false)))))), ! (! (bool(bvec4(! (_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, false || (false))))), false, true, false))))))))))) ? _GLF_IDENTITY(_GLF_FUZZED(10279), ~ (~ (_GLF_FUZZED(10279)))) : (64)))))))))), 4);
 uint read_2 = atomicLoad(buf[GLF_merged3_0_1_13_1_1_11_2_1_14subgroup_sizevirtual_gidworkgroup_base.y], 4, _GLF_IDENTITY(64, _GLF_IDENTITY(int(ivec4(64, 1, (0 | (0 >> _GLF_IDENTITY(int(4), int(4)))), _GLF_IDENTITY(0, (0) - 0))), min(int(ivec4(64, 1, (0 | (0 >> _GLF_IDENTITY(int(4), int(4)))), 0)), int(ivec4(64, 1, (0 | (0 >> _GLF_IDENTITY(_GLF_IDENTITY(int(4), int(4)), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(int(4), int(4)), (_GLF_IDENTITY(int(4), int(4))) | (_GLF_IDENTITY(int(4), int(4))))))))), 0))))), _GLF_IDENTITY(0, (0) | 0));
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(! (! (false)), bool(bvec4(! (! (false)), true, true, false))), bool(bool(! (! (false)))))), true, true)), (bool(bvec3(_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), bool(_GLF_IDENTITY(bool(! (! (false))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (bool(! (! (false)))))))), true, true))) && true), _GLF_IDENTITY(false, ! (! (false))) || (_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), bool(bool(! (! (false)))))), true, true)), (bool(bvec3(_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), bool(bool(! (! (false)))))), true, true))) && true), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), _GLF_IDENTITY(bool(bool(! (! (false)))), bool(bvec3(bool(bool(! (! (false)))), false, _GLF_IDENTITY(true, (true) || false)))))), true, true)), (bool(bvec3(_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), bool(bool(! (! (false)))))), true, true))) && true)), bool(bool(! (_GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), bool(bool(! (! (false)))))), true, true), bvec3(bvec4(bvec3(_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), bool(bool(! (! (false)))))), true, true), true)))), _GLF_IDENTITY(bool(bvec4(bool(bvec3(_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), bool(bool(! (! (false)))))), true, true)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, true)), ! (! (_GLF_IDENTITY(bool(bvec4(bool(bvec3(_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), bool(bool(! (_GLF_IDENTITY(! (false), true && (! (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) && true)))))))))))), true, true)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, true)), (bool(bvec4(bool(bvec3(_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), bool(bool(! (! (false)))))), true, true)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, true))) || false))))), (bool(bvec3(_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), bool(bool(! (! (false)))))), true, true))) && true))))))))))), _GLF_IDENTITY(bool(bool(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(! (! (false)), bool(bvec4(! (! (false)), true, true, false))), bool(bool(! (! (false)))))), true, true)), (bool(bvec3(_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), bool(_GLF_IDENTITY(bool(! (! (false))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (bool(! (! (false)))))))), true, true))) && true), _GLF_IDENTITY(false, ! (! (false))) || (_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), bool(bool(! (! (false)))))), true, true)), (bool(bvec3(_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), bool(bool(! (! (false)))))), true, true))) && true), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), _GLF_IDENTITY(bool(bool(! (! (false)))), bool(bvec3(bool(bool(! (! (false)))), false, _GLF_IDENTITY(true, (true) || false)))))), true, true)), _GLF_IDENTITY((bool(bvec3(_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), bool(bool(! (! (false)))))), true, true))), ((bool(bvec3(_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), bool(bool(! (! (false)))))), true, true)))) || false) && true)), bool(bool(! (_GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, _GLF_IDENTITY(! (! _GLF_IDENTITY((false), bool(bvec2((false), true)))), bool(bool(! (! (false)))))), true, true), bvec3(bvec4(bvec3(_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), bool(bool(! (! (false)))))), true, true), true)))), _GLF_IDENTITY(bool(bvec4(bool(bvec3(_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), bool(_GLF_IDENTITY(bool(! (! (false))), ! (! (bool(! (! (false))))))))), true, true)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, true)), ! (! _GLF_IDENTITY((_GLF_IDENTITY(bool(bvec4(bool(bvec3(_GLF_IDENTITY(false, _GLF_IDENTITY(! (! _GLF_IDENTITY((false), _GLF_IDENTITY(bool(bvec4((false), false, false, true)), ! (! (bool(bvec4((false), false, false, true))))))), bool(bool(! (_GLF_IDENTITY(! (false), true && (! (false)))))))), true, true)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, true)), (bool(bvec4(bool(bvec3(_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), bool(bool(! (! (false)))))), true, _GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec4(true, false, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), ! (_GLF_IDENTITY(! (bool(bvec4(true, false, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), ! (! (! (bool(bvec4(true, false, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, true))) || false)), ! (! ((_GLF_IDENTITY(bool(bvec4(bool(bvec3(_GLF_IDENTITY(false, _GLF_IDENTITY(! (! _GLF_IDENTITY((false), _GLF_IDENTITY(bool(bvec4((false), false, false, true)), ! (! (bool(bvec4((false), false, false, true))))))), bool(bool(! (_GLF_IDENTITY(! (false), true && (! (false)))))))), true, true)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, true)), (bool(bvec4(bool(bvec3(_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), bool(bool(! (! (false)))))), true, _GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec4(true, false, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), ! (_GLF_IDENTITY(! (bool(bvec4(true, false, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), ! (! (! (bool(bvec4(true, false, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, true))) || false)))))))), (bool(bvec3(_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), bool(bool(_GLF_IDENTITY(! (! (false)), (! (! (false))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), true, true))) && true))))))))))))), ! (! (_GLF_IDENTITY(bool(bool(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(! (! (false)), bool(bvec4(! (! (false)), true, true, false))), bool(bool(! (! (false)))))), true, true)), (bool(bvec3(_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), bool(_GLF_IDENTITY(bool(! (! (false))), _GLF_FALSE(_GLF_IDENTITY(false, false || (false)), (injectionSwitch.x > injectionSwitch.y)) || _GLF_IDENTITY((bool(! (! (false)))), true && (_GLF_IDENTITY((bool(! (! (false)))), ! (! (_GLF_IDENTITY((bool(! (! (false)))), ((bool(! (! (false))))) && true)))))))))), true, true))) && true), _GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))) || (_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), bool(bool(! (! (false)))))), true, true)), (bool(bvec3(_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), bool(bool(! (! (false)))))), true, true))) && true), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), _GLF_IDENTITY(bool(bool(! (! (false)))), bool(bvec3(bool(bool(! (! (false)))), false, _GLF_IDENTITY(true, (true) || false)))))), true, true)), (bool(bvec3(_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), bool(bool(! (! (false)))))), true, true))) && true)), bool(bool(! (_GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), bool(bool(! (! (false)))))), true, true), bvec3(bvec4(bvec3(_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), bool(bool(! (! (false)))))), true, true), true)))), _GLF_IDENTITY(bool(bvec4(bool(bvec3(_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), bool(bool(! (! (false)))))), true, true)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, true)), ! (! (_GLF_IDENTITY(bool(bvec4(bool(bvec3(_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), bool(bool(! (_GLF_IDENTITY(! (false), true && (! (false)))))))), true, true)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, true)), (bool(bvec4(bool(bvec3(_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), bool(bool(! (! (false)))))), true, true)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, true))) || false))))), (bool(bvec3(_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), bool(bool(! (! (false)))))), true, true))) && true)))))))), (_GLF_IDENTITY(false, ! (! (false))) || (_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), bool(bool(! (! (false)))))), true, true)), (bool(bvec3(_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), bool(bool(! (! (false)))))), true, true))) && true), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), _GLF_IDENTITY(bool(bool(! _GLF_IDENTITY((! (false)), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY((! (false)), bool(bool((! (false)))))), true && (bool(_GLF_IDENTITY((! (false)), bool(bool((! (false))))))))), false || (bool(_GLF_IDENTITY(bool(_GLF_IDENTITY((! (false)), bool(bool((! (false)))))), true && (bool(_GLF_IDENTITY((! (false)), bool(bool((! (false)))))))))))))), bool(bvec3(bool(bool(! (! (false)))), false, _GLF_IDENTITY(true, (true) || false)))))), true, true)), (bool(bvec3(_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), bool(bool(! (! (false)))))), true, true))) && true)), bool(bool(! (_GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), bool(bool(! (! (false)))))), true, true), bvec3(bvec4(bvec3(_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), bool(bool(! (! (false)))))), true, true), true)))), _GLF_IDENTITY(bool(bvec4(bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), bool(bool(! (! (false)))))), true, true), bvec3(bvec3(bvec3(_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), bool(bool(! (! (false)))))), true, true))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, true)), ! (! (_GLF_IDENTITY(bool(bvec4(bool(bvec3(_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), bool(bool(! (_GLF_IDENTITY(! (false), true && (! (false)))))))), true, true)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, true)), (bool(bvec4(bool(bvec3(_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), bool(bool(! (! (false)))))), true, true)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, true))) || false))))), _GLF_IDENTITY((bool(bvec3(_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), bool(bool(! (! (false)))))), true, true))), bool(_GLF_IDENTITY(bvec3((bool(bvec3(_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), bool(bool(! (! (false)))))), true, true))), false, false), bvec3(bvec3(bvec3((bool(bvec3(_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), bool(bool(! (! (false)))))), true, true))), false, false)))))) && true))))))))) || false)))))), ! (! (bool(bool(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(! (! (false)), bool(bvec4(! (! (false)), true, true, false))), bool(bool(! (! (false)))))), true, true)), (bool(bvec3(_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), bool(_GLF_IDENTITY(bool(! (! (false))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (bool(! (! (false)))))))), true, true))) && _GLF_IDENTITY(true, (true) || false)), _GLF_IDENTITY(false, ! (! (false))) || (_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), bool(bool(! (! (false)))))), true, true)), (bool(bvec3(_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), bool(bool(! (! (false)))))), true, true))) && true), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), _GLF_IDENTITY(bool(bool(! _GLF_IDENTITY((! (false)), ((! (false))) && true))), bool(bvec3(bool(bool(! (! (false)))), false, _GLF_IDENTITY(true, (true) || false)))))), true, true)), (bool(bvec3(_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), bool(bool(! (! (false)))))), true, true))) && true)), bool(bool(! (_GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), bool(bool(! (! (false)))))), true, true), bvec3(bvec4(bvec3(_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), bool(bool(! (! (false)))))), true, true), true)))), _GLF_IDENTITY(bool(bvec4(bool(bvec3(_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), bool(bool(! (! (false)))))), true, true)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, true)), ! (! (_GLF_IDENTITY(bool(bvec4(bool(bvec3(_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), bool(bool(! (_GLF_IDENTITY(! (false), true && (! (false)))))))), true, true)), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(vec3(injectionSwitch.x, 1.0, 1.0)), min(float(vec3(injectionSwitch.x, 1.0, 1.0)), float(vec3(injectionSwitch.x, 1.0, 1.0))))) > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).y)), true, true)), (bool(bvec4(bool(bvec3(_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), bool(bool(! (! (false)))))), true, true)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, true))) || false))))), (bool(bvec3(_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), bool(bool(! (! (false)))))), true, true))) && true)))))))))))))))))))))
  return;
 if(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1 < GLF_merged3_0_1_13_1_1_11_2_1_14subgroup_sizevirtual_gidworkgroup_base.x, true && (subgroup_local_id + 1 < GLF_merged3_0_1_13_1_1_11_2_1_14subgroup_sizevirtual_gidworkgroup_base.x)), ! (! (subgroup_local_id + 1 < GLF_merged3_0_1_13_1_1_11_2_1_14subgroup_sizevirtual_gidworkgroup_base.x))))
  {
   int i = 0;
   atomicStore(buf[next_virtual_gid], _GLF_IDENTITY(uint(_GLF_IDENTITY(read_1 + _GLF_IDENTITY(_GLF_IDENTITY(1, min(_GLF_IDENTITY(1, ~ (~ (1))), 1)), (false ? _GLF_FUZZED(i) : _GLF_IDENTITY(1, (1) >> 0))) == read_2, bool(bvec3(_GLF_IDENTITY(read_1, 0u | (read_1)) + _GLF_IDENTITY(_GLF_IDENTITY(1, clamp(_GLF_IDENTITY(1, max(1, 1)), 1, _GLF_IDENTITY(1, (_GLF_IDENTITY(_GLF_IDENTITY(true ? 1 : _GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(i), ~ (_GLF_IDENTITY(~ (_GLF_FUZZED(i)), ~ (~ (~ (_GLF_FUZZED(i))))))), min(_GLF_IDENTITY(_GLF_FUZZED(i), ~ (_GLF_IDENTITY(~ (_GLF_FUZZED(i)), ~ (~ (~ (_GLF_FUZZED(i))))))), _GLF_IDENTITY(_GLF_FUZZED(i), ~ (_GLF_IDENTITY(~ (_GLF_FUZZED(i)), ~ (~ (~ (_GLF_FUZZED(i))))))))), clamp(true ? 1 : _GLF_IDENTITY(_GLF_FUZZED(i), ~ (_GLF_IDENTITY(~ (_GLF_FUZZED(i)), ~ (~ (~ (_GLF_FUZZED(i))))))), _GLF_IDENTITY(true ? _GLF_IDENTITY(1, 0 | (1)) : _GLF_IDENTITY(_GLF_FUZZED(i), ~ (_GLF_IDENTITY(~ (_GLF_FUZZED(i)), ~ (~ (~ (_GLF_FUZZED(i))))))), (true ? 1 : _GLF_IDENTITY(_GLF_FUZZED(i), ~ (_GLF_IDENTITY(~ (_GLF_FUZZED(i)), ~ (~ (~ (_GLF_FUZZED(i)))))))) | 0), true ? 1 : _GLF_IDENTITY(_GLF_FUZZED(i), ~ (_GLF_IDENTITY(~ (_GLF_FUZZED(i)), ~ (~ (~ (_GLF_FUZZED(i))))))))), ~ (~ (_GLF_IDENTITY(true ? 1 : _GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(i), ~ (_GLF_IDENTITY(~ (_GLF_FUZZED(i)), ~ (~ (~ (_GLF_FUZZED(i))))))), min(_GLF_IDENTITY(_GLF_FUZZED(i), ~ (_GLF_IDENTITY(~ (_GLF_FUZZED(i)), ~ (~ (~ (_GLF_FUZZED(i))))))), _GLF_IDENTITY(_GLF_FUZZED(i), ~ (_GLF_IDENTITY(_GLF_IDENTITY(~ (_GLF_FUZZED(i)), ~ (~ (~ (_GLF_FUZZED(i))))), min(_GLF_IDENTITY(~ (_GLF_FUZZED(i)), ~ (~ (~ (_GLF_FUZZED(i))))), _GLF_IDENTITY(~ (_GLF_FUZZED(i)), ~ (~ (~ (_GLF_FUZZED(i))))))))))), clamp(true ? 1 : _GLF_IDENTITY(_GLF_FUZZED(i), ~ (_GLF_IDENTITY(~ (_GLF_FUZZED(i)), ~ (~ (~ (_GLF_FUZZED(i))))))), _GLF_IDENTITY(true ? _GLF_IDENTITY(1, 0 | (1)) : _GLF_IDENTITY(_GLF_FUZZED(i), ~ (_GLF_IDENTITY(~ (_GLF_FUZZED(i)), ~ (~ (~ (_GLF_FUZZED(_GLF_IDENTITY(i, (_GLF_IDENTITY(i, (i) / 1)) | (i))))))))), (true ? 1 : _GLF_IDENTITY(_GLF_FUZZED(i), _GLF_IDENTITY(~ (_GLF_IDENTITY(~ (_GLF_FUZZED(i)), ~ (~ (~ (_GLF_FUZZED(i)))))), max(~ (_GLF_IDENTITY(~ (_GLF_FUZZED(i)), ~ (~ (~ (_GLF_FUZZED(i)))))), ~ (_GLF_IDENTITY(~ (_GLF_FUZZED(i)), ~ (~ (~ (_GLF_FUZZED(i)))))))))) | 0), true ? 1 : _GLF_IDENTITY(_GLF_FUZZED(i), ~ (_GLF_IDENTITY(~ (_GLF_FUZZED(i)), ~ (~ (~ (_GLF_FUZZED(i)))))))))))))))), (false ? _GLF_FUZZED(i) : _GLF_IDENTITY(1, (1) >> 0))) == _GLF_IDENTITY(read_2, _GLF_IDENTITY(uint(uvec2(read_2, 1u)), (true ? uint(uvec2(read_2, 1u)) : _GLF_FUZZED(subgroup_id)))), _GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), max(injectionSwitch, injectionSwitch)).x > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(926.415) : injectionSwitch.y)), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), max(injectionSwitch, injectionSwitch)).x > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(926.415) : injectionSwitch.y)), bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), max(injectionSwitch, injectionSwitch)).x > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(926.415) : injectionSwitch.y))))))), ! (! (bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), max(injectionSwitch, injectionSwitch)).x > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(926.415) : injectionSwitch.y)), bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), max(injectionSwitch, injectionSwitch)).x > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(926.415) : injectionSwitch.y))))))))))))), true)))) + 1, ~ (~ _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(uint(read_1 + _GLF_IDENTITY(1, _GLF_IDENTITY(int(ivec3(1, 1, 0)), int(ivec3(int(ivec3(1, 1, 0)), 1, (_GLF_IDENTITY(0 | 0, (0 | 0) | (0 | 0))))))) == read_2) + 1, uint(uvec2(uint(read_1 + 1 == _GLF_IDENTITY(read_2, (read_2) - ((0u ^ 0u) >> _GLF_IDENTITY(uint(7u), uint(7u))))) + 1, 1u))), 0u | (uint(read_1 + 1 == read_2) + 1))), ((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(uint(read_1 + _GLF_IDENTITY(1, _GLF_IDENTITY(_GLF_IDENTITY(int(ivec3(1, 1, 0)), max(int(ivec3(1, 1, 0)), int(ivec3(1, 1, 0)))), _GLF_IDENTITY(int(ivec3(_GLF_IDENTITY(int(ivec3(1, 1, 0)), (_GLF_IDENTITY(int(ivec3(1, 1, 0)), min(int(ivec3(1, 1, 0)), int(ivec3(1, 1, 0))))) | 0), 1, (0 | 0))), (int(ivec3(_GLF_IDENTITY(int(ivec3(1, 1, 0)), (_GLF_IDENTITY(int(ivec3(1, 1, 0)), min(int(ivec3(1, 1, 0)), int(ivec3(1, 1, 0))))) | 0), 1, (0 | 0)))) | 0))) == read_2), min(uint(read_1 + _GLF_IDENTITY(1, _GLF_IDENTITY(int(ivec3(1, 1, 0)), int(ivec3(int(ivec3(1, 1, 0)), 1, (0 | 0))))) == read_2), uint(read_1 + _GLF_IDENTITY(1, _GLF_IDENTITY(int(ivec3(1, 1, 0)), int(ivec3(int(ivec3(1, 1, 0)), 1, (_GLF_IDENTITY(0 | 0, int(ivec3(0 | 0, 1, 0)))))))) == read_2))) + 1, uint(uvec2(uint(read_1 + 1 == _GLF_IDENTITY(read_2, (read_2) - ((0u ^ 0u) >> _GLF_IDENTITY(uint(7u), uint(7u))))) + 1, 1u))), 0u | (uint(read_1 + 1 == read_2) + 1)))) | 0u))), 4, 64, 4);
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
  }
 else
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false)))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, false, _GLF_IDENTITY(true, false || (true))))))))
    return;
   atomicStore(buf[next_virtual_gid], _GLF_IDENTITY(uint(read_1 + 1 == read_2), max(uint(read_1 + 1 == read_2), _GLF_IDENTITY(uint(read_1 + 1 == read_2), (uint(read_1 + 1 == read_2)) ^ 0u))) + 1, 4, 64, 4);
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) || false), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - _GLF_IDENTITY(dot(vec4(1.0, 1.0, 1.0, 0.0), vec4(0.0, 0.0, 0.0, round(length(_GLF_IDENTITY(normalize(_GLF_IDENTITY(vec4(1.0, 1.0, 1.0, 1.0), max(vec4(1.0, 1.0, 1.0, 1.0), vec4(1.0, 1.0, 1.0, 1.0)))), clamp(normalize(_GLF_IDENTITY(_GLF_IDENTITY(vec4(1.0, 1.0, 1.0, 1.0), (vec4(1.0, 1.0, 1.0, 1.0)) * sqrt(vec4(1.0, 1.0, 1.0, 1.0))), max(vec4(1.0, 1.0, 1.0, 1.0), vec4(1.0, 1.0, 1.0, 1.0)))), normalize(_GLF_IDENTITY(vec4(1.0, 1.0, 1.0, 1.0), max(vec4(1.0, 1.0, 1.0, 1.0), vec4(1.0, 1.0, 1.0, 1.0)))), _GLF_IDENTITY(normalize(_GLF_IDENTITY(vec4(1.0, 1.0, 1.0, 1.0), _GLF_IDENTITY(max(vec4(1.0, 1.0, 1.0, 1.0), vec4(1.0, 1.0, 1.0, 1.0)), (true ? _GLF_IDENTITY(max(vec4(1.0, 1.0, 1.0, 1.0), vec4(1.0, 1.0, 1.0, 1.0)), clamp(max(vec4(1.0, 1.0, 1.0, 1.0), vec4(1.0, 1.0, 1.0, 1.0)), max(vec4(1.0, 1.0, 1.0, 1.0), vec4(1.0, 1.0, 1.0, 1.0)), max(vec4(1.0, 1.0, 1.0, 1.0), vec4(1.0, 1.0, 1.0, 1.0)))) : _GLF_FUZZED(vec4(-2.3, -34.11, 8.6, -7701.3655)))))), min(normalize(_GLF_IDENTITY(vec4(_GLF_IDENTITY(1.0, float(mat3(1.0, 0.0, 1.0, 1.0, 0.0, _GLF_IDENTITY(dot(vec2(determinant(mat4(1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0)), 0.0), vec2(1.0, 0.0)), dot(vec2(determinant(mat4(1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0)), 0.0), vec2(1.0, 0.0))), 0.0, determinant(mat3(0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)), 1.0))), 1.0, 1.0, 1.0), max(vec4(1.0, 1.0, 1.0, 1.0), vec4(1.0, 1.0, 1.0, 1.0)))), normalize(_GLF_IDENTITY(vec4(1.0, 1.0, 1.0, 1.0), max(vec4(1.0, 1.0, 1.0, 1.0), vec4(1.0, 1.0, 1.0, 1.0)))))))))))), dot(_GLF_IDENTITY(vec4(1.0, 1.0, 1.0, 0.0), mix(vec4((vec4(1.0, 1.0, 1.0, 0.0))[0], _GLF_FUZZED(-4.4), (vec4(1.0, 1.0, 1.0, 0.0))[2], (vec4(1.0, 1.0, 1.0, 0.0))[3]), vec4(_GLF_FUZZED(-5.3), (vec4(1.0, 1.0, 1.0, 0.0))[1], _GLF_FUZZED(float(-56047)), _GLF_FUZZED(1581.7924)), bvec4(false, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))), vec4(0.0, 0.0, 0.0, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0))))))))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))) && true))))) || false, (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))) && true))))) || false, ! (_GLF_IDENTITY(! ((_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))) && true))))) || false), ! (! (! ((_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))) && true))))) || false))))))) || false)))
  return;
}
