#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_WRAPPED_IF_FALSE(false))
  {
  }
 else
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    {
     for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
      {
       return;
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(bvec2(false, false))))))))
      barrier();
    }
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))))))))))
    barrier();
   return;
  }
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(false))
  {
   switch(_GLF_SWITCH(0))
    {
     case 0:
     case 93:
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec4(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true)), (bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true))) && true)), false, false, true)))))
      {
       do
        {
         barrier();
        }
       while(_GLF_WRAPPED_LOOP(false));
      }
     case 11:
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      barrier();
     case 85:
     case 99:
     barrier();
     break;
     default:
     1;
    }
  }
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_DEAD(false))
  {
   do
    {
     switch(_GLF_SWITCH(0))
      {
       case 44:
       transpose(mat3x2(73.15, -96.35, 79.33, 52.80, 1287.6711, 6.4));
       case 0:
       case 1:
       case 15:
       case 26:
       case 31:
       case 2:
       case 7:
       case 6:
       case 19:
       if(_GLF_DEAD(false))
        {
         switch(_GLF_SWITCH(0))
          {
           case 34:
           mat3x2 _GLF_SWITCH_4_0v[71], _GLF_SWITCH_4_1v;
           case 66:
           mat2 _GLF_SWITCH_4_2v, _GLF_SWITCH_4_3v[89];
           case 0:
           case 69:
           case 83:
           case 30:
           case 24:
           if(_GLF_DEAD(false))
            barrier();
           case 7:
           case 4:
           case 85:
           return;
           break;
           default:
           1;
          }
        }
       break;
       case 64:
       bvec4(true, false, false, true);
       default:
       1;
      }
    }
   while(_GLF_WRAPPED_LOOP(false));
   return;
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec4(bvec2(false, false), false, false)))))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
      }
     else
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
        {
         switch(_GLF_SWITCH(((0 | 0) << _GLF_IDENTITY(int(5), int(5)))))
          {
           case 18:
           {
            mat2x4(205.577, 4.2, -3.6, 1764.2877, -8.1, 2036.2000, -3.0, -6.1);
            mat3x2 _GLF_SWITCH_4_0v, _GLF_SWITCH_4_1v[20], _GLF_SWITCH_4_2v;
            (- mat3x4(vec4(-42.58, 7513.6462, 8285.0337, -91.63), vec4(42.01, -3.0, -66.10, 745.797), ceil(vec4(-24.57, -0.7, -37.89, -1.1))));
            vec4(3453.7746, -62.65, 52.84, -583.787);
           }
           case 0:
           case 85:
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            return;
           case 11:
           case 47:
           case 71:
           barrier();
           break;
           case 5:
           float _GLF_SWITCH_4_3v, _GLF_SWITCH_4_4v, _GLF_SWITCH_4_5v;
           case 46:
           {
            bvec3 _GLF_SWITCH_4_6v, _GLF_SWITCH_4_7v[33], _GLF_SWITCH_4_8v;
            ;
            mat2x3(-806.458, -6.0, -313.787, 6310.6338, -6387.6864, -2336.6321);
            uvec4(26522u, 2996u, 161589u, 78961u);
            uint(_GLF_SWITCH_4_5v);
            uvec4 _GLF_SWITCH_4_9v, _GLF_SWITCH_4_10v, _GLF_SWITCH_4_11v;
            uvec3 _GLF_SWITCH_4_12v;
            ivec2(-47737, 52674);
           }
           default:
           1;
          }
        }
      }
    }
   else
    {
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      {
       switch(_GLF_SWITCH((0 << _GLF_IDENTITY(int(7), _GLF_IDENTITY(int(7), int(ivec2(int(7), 1)))))))
        {
         case 0:
         case 60:
         case 95:
         case 1:
         switch(_GLF_SWITCH(0))
          {
           case 94:
           {
            mat3x4 _GLF_SWITCH_3_0v, _GLF_SWITCH_3_1v;
            mat2x3(vec3(6083.6664, 8.7, 22.51), refract(vec3(-8274.2810, 911.597, 4.0), vec3(8.8, -2265.0292, -41.88), 70.86));
            while(any(bvec4(false, true, true, false)))
             {
              ;
              (_GLF_SWITCH_3_1v);
              mat3x4(0.7, 1775.8616, -34.14, -5.1, 345.705, 4807.5730, 1891.5315, 59.68, -3.8, -3731.5182, -9779.0443, -75.81);
             }
            for(            clamp(ivec4(-19391, -31054, 76338, -96703), (93252 % ivec4(77079, 79125, 55873, -26845)), clamp(ivec4(1060, 33076, -12449, -54452), ivec4(-18529, 41766, -94180, -21614), ivec4(-67259, -73148, _GLF_IDENTITY(4917, (4917) + 0), 56081)));
 (-83074 < -12704); all(bvec2(bvec4(true, false, true, false))))
             {
              mat2 _GLF_SWITCH_3_2v[50], _GLF_SWITCH_3_3v;
              bvec3(false, false, true);
              vec4(-488.683, -7.6, 28.81, 7434.0322);
             }
            ivec3(91192, 40319, 12805);
            68809u;
            if(false)
             {
              uvec4(102283u, 190555u, 28092u, 3651u);
              mat4 _GLF_SWITCH_3_4v;
              uvec2 _GLF_SWITCH_3_5v;
              8603.8344;
             }
            mat2(mat4(-6006.4754, 6.8, -6.8, -682.181, 3425.3282, 42.95, -5.3, -7.6, -2.4, -586.734, -12.75, -3.0, 4.2, 5923.6311, -6.6, _GLF_IDENTITY(197.765, sqrt(0.0) + (_GLF_IDENTITY(197.765, (true ? _GLF_IDENTITY(197.765, float(mat4(197.765, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0))) : _GLF_FUZZED(-1686.5495)))))));
           }
           case 0:
           case 39:
           if(_GLF_DEAD(false))
            return;
           case 20:
           case 23:
           barrier();
           case 76:
           case 42:
           case 98:
           if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, true && (false)), true)))))
            barrier();
           break;
           case 73:
           -0.1;
           default:
           1;
          }
         break;
         case 83:
         false;
         case 52:
         mat3x2(mat2x4(-2.4));
         default:
         1;
        }
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
    }
   else
    {
     switch(_GLF_SWITCH(0))
      {
       case 86:
       mat2x4(-2.8, -2.2, 33.34, _GLF_IDENTITY(-68.94, min(-68.94, _GLF_IDENTITY(-68.94, clamp(_GLF_IDENTITY(-68.94, 1.0 * (-68.94)), -68.94, _GLF_IDENTITY(-68.94, float(mat2(-68.94, 0.0, 1.0, 1.0))))))), 6.1, 0.6, 283.061, -836.638);
       case 0:
       case 73:
       case 27:
       case 48:
       case 17:
       case 98:
       case 45:
       if(_GLF_DEAD(false))
        return;
       break;
       default:
       1;
      }
    }
  }
 uint subgroup_local_id = gl_SubgroupInvocationID;
 uint num_workgroup = gl_NumWorkGroups.x;
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))), _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec3((injectionSwitch.x > injectionSwitch.y), true, true)))) && true, ! (_GLF_IDENTITY(! ((_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec3(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true), true, true)))) && true), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(! ((_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec3((injectionSwitch.x > injectionSwitch.y), true, true)))) && true), ! (! (! ((_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bool((injectionSwitch.x > injectionSwitch.y))))) && true), bool(bvec3((injectionSwitch.x > injectionSwitch.y), true, true)))) && true))))), ! (! (! (! _GLF_IDENTITY(((_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec3((_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y), true, true)))) && true), ! (! (_GLF_IDENTITY(((_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec3((_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y), true, true)))) && true), ! (! (((_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec3((_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y), true, true)))) && true))))))))))))))), ! (! ((_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec3((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), injectionSwitch)), _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)))).y), true, true)))) && true)))))))
  {
   if(_GLF_DEAD(false))
    {
     do
      {
       switch(_GLF_SWITCH((1 ^ 1)))
        {
         case 66:
         {
          uvec3(32229u, 98249u, 4470u);
          ;
          while((mat3(868.409, -734.316, 41.91, -6.4, -22.16, -8.2, 7.9, 1.7, -10.77) == mat3(-171.893, 2.6, 3877.4563, -7265.6390, 5.3, 0.7, 475.166, 3.8, 8.7)))
           {
            for(            uvec4(10960u, 38750u, 66471u, 1045u);
 _GLF_IDENTITY(true, bool(bvec4(true, false, false, true))); mat2x4(vec4(-9.7, -8.7, 3977.1754, 1364.0012), vec4(89.89, -1.0, 89.40, 48.94)))
             {
             }
            float _GLF_SWITCH_3_0v, _GLF_SWITCH_3_1v, _GLF_SWITCH_3_2v;
           }
          ((_GLF_IDENTITY((mat3(2.2, -71.41, _GLF_IDENTITY(9327.3160, mix(float(_GLF_FUZZED(-12.49)), float(9327.3160), bool(true))), 2.1, -936.122, 86.24, -2.1, -3.9, -505.490) , mat2(-3.4, _GLF_IDENTITY(-7.7, abs(0.0) + (_GLF_IDENTITY(-7.7, (true ? -7.7 : _GLF_FUZZED(-5491.8286))))), -2.6, 381.442)), ((mat3(2.2, -71.41, _GLF_IDENTITY(9327.3160, mix(float(_GLF_FUZZED(-12.49)), float(9327.3160), bool(true))), 2.1, -936.122, 86.24, -2.1, -3.9, -505.490) , mat2(-3.4, _GLF_IDENTITY(-7.7, abs(0.0) + (_GLF_IDENTITY(-7.7, (true ? -7.7 : _GLF_FUZZED(-5491.8286))))), -2.6, 381.442))) + mat2(0.0, 0.0, 0.0, 0.0)) * mat2(780.172, -4.4, 0.6, 81.66)) - -9.0);
          if(true)
           {
            mat3(-9.1, -50.62, 91.57, -18.27, 64.93, -77.81, -6218.1566, -7.8, 7.8);
            ;
            for(uvec4 _GLF_SWITCH_3_3v, _GLF_SWITCH_3_4v[98], _GLF_SWITCH_3_5v[19]; false; _GLF_IDENTITY(ivec4(92767, -47387, -95091, 17417)[3], max(_GLF_IDENTITY(ivec4(92767, -47387, -95091, 17417)[3], min(ivec4(92767, -47387, -95091, 17417)[3], ivec4(92767, -47387, -95091, 17417)[3])), ivec4(92767, -47387, -95091, 17417)[3])))
             {
              int _GLF_SWITCH_3_6v[6];
              ivec2 _GLF_SWITCH_3_7v[62], _GLF_SWITCH_3_8v;
              (mat2x4(4.1, -97.16, 82.47, 5725.9002, 1.2, -9.4, 9504.3954, 5908.0186) - matrixCompMult(mat2x4(-99.06, 45.69, -6.6, 6434.7734, 8759.3148, -375.186, 228.239, 302.429), mat2x4(-415.335, -307.726, -7.8, 26.49, 4.0, 5.6, -942.289, -6.4)));
              mat3x2(2465.6601, 456.370, -159.266, 599.535, 59.18, 4.0);
              ;
              (-27973);
              isinf(vec3(2861.6671, 3818.4722, 1.3));
              greaterThan((ivec3(-67583, -45603, -3160) % ivec3(-37686, 43852, -56116)), ivec3(-42886, 21122, 7461));
              bvec4(_GLF_IDENTITY(false, bool(bvec3(false, true, true))), true, false, false);
             }
           }
          vec3 _GLF_SWITCH_3_9v[78], _GLF_SWITCH_3_10v;
          ;
          ivec3 _GLF_SWITCH_3_11v;
          if((subgroup_id != 119290u))
           {
            bool _GLF_SWITCH_3_12v, _GLF_SWITCH_3_13v;
            smoothstep(vec2(497.395, -3.5), vec2(33.35, 2.6), injectionSwitch);
            if((mat2x3(-54.32, -4614.1792, -96.86, 190.668, 1.6, 6.9) != mat2x3(-5.0, 3.9, -3.9, -98.21, 7.2, -2226.2949)))
             {
              vec4 _GLF_SWITCH_3_14v;
              ;
             }
            else
             {
              bvec3(true, false, true).ttt;
              mat2 _GLF_SWITCH_3_15v;
             }
            {
             mat3x4 _GLF_SWITCH_3_16v[76], _GLF_SWITCH_3_17v[21];
            }
            {
            }
            if(_GLF_SWITCH_3_13v)
             {
              uint _GLF_SWITCH_3_18v, _GLF_SWITCH_3_19v;
              ivec2(-46439, -7375).ssss;
             }
            else
             {
             }
            mat4x2 _GLF_SWITCH_3_20v, _GLF_SWITCH_3_21v;
            max(-70895, _GLF_IDENTITY(-35450, 0 | (-35450)));
            uvec4(161399u, 24554u, 112238u, _GLF_IDENTITY(48480u, max(_GLF_IDENTITY(48480u, (48480u) | (48480u)), 48480u)));
           }
          else
           {
            for(ivec2 _GLF_SWITCH_3_22v; (_GLF_IDENTITY(sqrt(-79.09), min(_GLF_IDENTITY(sqrt(-79.09), (_GLF_IDENTITY(sqrt(-79.09), min(sqrt(-79.09), sqrt(-79.09)))) - 0.0), _GLF_IDENTITY(sqrt(-79.09), (true ? sqrt(-79.09) : _GLF_FUZZED(vec4(-380.077, 3193.7691, 7.3, 7533.9061).t))))) < -1146.8132); mat3x2(mat4(6746.9264, 90.23, 785.366, -4181.1755, 3.5, _GLF_IDENTITY(383.143, mix(float(383.143), float(_GLF_FUZZED(-6.2)), bool(false))), 8.0, -0.3, 9.9, -841.373, -54.48, 5.8, -766.137, -261.740, 8064.8863, -1.4)))
             {
              vec3 _GLF_SWITCH_3_23v, _GLF_SWITCH_3_24v[78], _GLF_SWITCH_3_25v;
              bool _GLF_SWITCH_3_26v;
              mat4(60.84, 1.1, -6.1, 980.517, 5.9, -39.85, 5144.7196, 1.3, -9984.1999, _GLF_IDENTITY(-0.0, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? -0.0 : _GLF_FUZZED(1164.1712))), -865.744, 77.26, 131.417, 86.05, 9594.7207, 4.5);
              uvec2(156233u, 63642u);
              transpose(mat3x2(-5.0, 5800.1708, -9.5, -57.32, 4396.0827, -6.1));
              greaterThan(ivec3(_GLF_IDENTITY(57692, (57692) / int(_GLF_ONE(1.0, injectionSwitch.y))), 90687, 22071), _GLF_SWITCH_3_11v);
              ivec3 _GLF_SWITCH_3_27v[57];
              ;
             }
           }
         }
         case 68:
         vec2 _GLF_SWITCH_3_28v, _GLF_SWITCH_3_29v;
         case 0:
         case 95:
         return;
         break;
         case 60:
         mat4x2 _GLF_SWITCH_3_30v[58], _GLF_SWITCH_3_31v[16];
         case 35:
         while(true)
          {
           while((mat4x2(406.485, 83.73, 9.9, 5.4, -454.936, 8491.8261, 982.667, 8957.9436) == mat4x2(332.975, 1243.1062, 5662.4944, -9.8, 1.1, -908.963, -0.8, -21.45)))
            {
            }
           ;
           if(true)
            {
             ;
             refract(-8.1, 192.594, acosh(-2.0));
             for(             max(uint(true), 121232u);
 (mat4(-408.230, 566.314, -2985.9669, 519.659, 64.31, -887.233, -444.889, -1.9, 58.28, -7.4, -901.921, -7.0, -88.65, 1388.6829, -317.722, -3.2) == mat4(-7195.4571, -0.6, -476.212, 21.01, 7.6, 2249.0611, -360.506, -36.81, 86.79, 2.3, -4.2, 0.0, -966.075, 1.6, -898.372, -96.39)); ivec4(-22989, 88813, -98111, 60316))
              {
              }
            }
           ivec2 _GLF_SWITCH_3_32v, _GLF_SWITCH_3_33v, _GLF_SWITCH_3_34v;
          }
         default:
         1;
        }
      }
     while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))));
    }
   return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_DEAD(false), false))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) || false), (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 uint workgroup_size = gl_WorkGroupSize.x;
 if(_GLF_DEAD(false))
  {
   switch(_GLF_SWITCH(0))
    {
     case 98:
     if((uintBitsToFloat(subgroup_id) == determinant(mat2(24.06, -949.218, 6230.7505, -740.612))))
      {
       bvec2 _GLF_SWITCH_4_0v, _GLF_SWITCH_4_1v;
       while(false)
        {
         for(mat4x3 _GLF_SWITCH_4_2v[56], _GLF_SWITCH_4_3v; false; -0.2)
          {
           mat3x2 _GLF_SWITCH_4_4v[97], _GLF_SWITCH_4_5v[15], _GLF_SWITCH_4_6v;
           _GLF_SWITCH_4_3v;
           vec2 _GLF_SWITCH_4_7v, _GLF_SWITCH_4_8v, _GLF_SWITCH_4_9v[39];
           bvec2(false, true);
           bvec3(true, false, false);
           (mat2(8.9, -1.0, 4.4, -7.2) - -59.91);
           mix(true, (19261u > workgroup_size), true);
           vec3 _GLF_SWITCH_4_10v;
          }
         ivec4(74948, 35772, 74749, 39047);
         if((mat2(mat4(-108.676, 1.8, 719.419, 0.6, 8.0, 247.148, -578.177, 7.8, -0.9, 11.77, 6.0, 3990.9477, 774.662, -5.7, 235.318, 7.6)) != mat2(-56.14, 863.522, 5347.2223, 4.6)))
          {
           mat3 _GLF_SWITCH_4_11v;
           vec2 _GLF_SWITCH_4_12v[87], _GLF_SWITCH_4_13v;
          }
         else
          {
           uint _GLF_SWITCH_4_14v[8], _GLF_SWITCH_4_15v;
          }
         mat2 _GLF_SWITCH_4_16v;
         mat3x2(56.43, -2.9, -5243.5060, -948.011, 1.0, -1.7);
         {
          uvec4(42886u, 79548u, 144104u, 125152u);
          false;
          min((subgroup_size / uvec4(119203u, 23468u, 70861u, 185944u)), subgroup_local_id);
          ;
          (uvec4(67977u, 22741u, 35765u, 16834u) % bitfieldExtract(num_workgroup, -11703, -11607));
          ivec2 _GLF_SWITCH_4_17v[36], _GLF_SWITCH_4_18v, _GLF_SWITCH_4_19v;
          bvec3(_GLF_SWITCH_4_1v, (mat4x2(867.854, -8.5, 7105.1536, 0.0, 691.940, -482.247, -4.4, 0.4) != mat4x2(-1.6, -1.3, -829.168, -3.5, -8.5, 7.9, 0.4, -5.3)));
         }
         while(bvec4(true, true, false, true).r)
          {
           mat4x2(-6.1, 1288.4570, -9026.8234, -4.2, -25.95, -7.8, -92.39, 9.4);
           mat4 _GLF_SWITCH_4_20v, _GLF_SWITCH_4_21v;
          }
         ((mat4x3(3.6, -8.0, 6.1, 391.829, 7.2, -7.2, 8.8, 331.292, 7824.6217, -8.6, 330.564, -15.73) * mat2x4(-774.400, -4.5, -1926.5615, 17.26, 6065.2191, -1.2, 8.7, 873.243)) == mat2x3(61.72, -2729.4766, 57.20, -574.823, 6.2, 2.1));
         do
          {
           mat4(mat4x2(1897.9114, 356.818, 2389.1817, -5.8, -406.143, -31.76, 564.852, -1.1));
           mat4(-949.647, -7.5, 9798.3803, 3.0, 9.6, -3.3, -8.6, 79.79, 299.510, 6736.3207, 4.1, -8.6, 734.469, -6.7, 530.964, 375.586);
           bvec3(true, false, true);
           ;
           _GLF_SWITCH_4_1v;
           ;
           ;
           mat3x2(2069.7841, -146.126, -8.6, 5522.8345, 60.91, 4.3);
          }
         while((-74321 < 8373));
        }
       for(       acosh(vec4(96.42, -3.3, 40.88, -5393.9637));
 (uvec2(188577u, 52243u) == uvec2(38632u, 106937u)); mat2x3(7.7, -460.058, -360.395, -9955.0884, 3438.0480, 9.8))
        {
        }
       intBitsToFloat(ivec4(21161, -1075, 48395, 34975));
       bvec4 _GLF_SWITCH_4_22v, _GLF_SWITCH_4_23v, _GLF_SWITCH_4_24v;
      }
     else
      {
       bvec4(true, true, false, true);
       isinf(-437.492);
       mat2 _GLF_SWITCH_4_25v, _GLF_SWITCH_4_26v[79], _GLF_SWITCH_4_27v;
       for(       -8069.4981;
 true; uvec2(189714u, 82006u).g)
        {
         if((mat3x4(9.7, -7.8, 631.420, 68.55, 16.90, -899.001, 35.10, 60.87, -7.4, -8.5, -890.094, -75.06) != mat3x4(-3427.5378, -5.4, 4.8, -7.7, 7.9, -3.8, 10.43, -2.2, 7741.5471, -2555.3601, 6509.4658, 78.06)))
          {
           (subgroup_local_id / uvec3(144546u, 82908u, 93769u));
           injectionSwitch;
           ivec2 _GLF_SWITCH_4_28v[20], _GLF_SWITCH_4_29v[66], _GLF_SWITCH_4_30v;
           max(ivec3(-23925, -27482, 33488), 12358);
           ;
           subgroup_id;
           ((ivec4(-12358, ivec3(42077, -27285, 87236)) * ivec4(45286, 90553, -73539, -99121)) / ivec4(-79870, 34414, 43881, -57183));
           bvec4 _GLF_SWITCH_4_31v, _GLF_SWITCH_4_32v[55], _GLF_SWITCH_4_33v;
           mat2x4 _GLF_SWITCH_4_34v[68];
          }
         else
          {
          }
         int _GLF_SWITCH_4_35v[97], _GLF_SWITCH_4_36v;
         for(         vec3(-6.2, -0.6, 2.6);
 false; uintBitsToFloat((uvec3(38072u, 137371u, 182345u) * atomicAnd(num_workgroup, 185565u))))
          {
           uvec4(54446u, 187854u, 63414u, 116201u);
           true;
           mat4 _GLF_SWITCH_4_37v, _GLF_SWITCH_4_38v;
           ;
           mat2x4 _GLF_SWITCH_4_39v;
           int _GLF_SWITCH_4_40v[71], _GLF_SWITCH_4_41v;
           mat3x4 _GLF_SWITCH_4_42v, _GLF_SWITCH_4_43v[9], _GLF_SWITCH_4_44v;
          }
         ;
         ;
        }
       while(true)
        {
         {
          uvec2(120287u, 90607u);
          ;
          mat3(-78.62, -736.376, -496.691, -6762.8464, -1474.9987, -7.8, 9.2, 0.8, 7.9);
          mat2x4 _GLF_SWITCH_4_45v;
          uvec3(73274u, 63098u, 176656u);
         }
         if(any(isnan(injectionSwitch)))
          {
           subgroup_size;
           mat2x3 _GLF_SWITCH_4_46v, _GLF_SWITCH_4_47v;
           mat4(-4.9, -93.71, 94.74, 99.88, -6.3, 1.2, 9.5, -6.9, 3.8, 0.9, 4037.4851, 8.0, -2841.7458, 8.0, 5725.8857, 9.4);
           (mat3x2(46.23, -5619.2685, -7041.4324, 9553.4430, -95.81, 76.98) / -9.7);
           -7343.6231;
           asin(injectionSwitch);
           (uvec4(126808u, 171486u, 146342u, 143019u) & uvec4(129762u, 193339u, 110435u, 155579u));
           bvec3 _GLF_SWITCH_4_48v, _GLF_SWITCH_4_49v;
          }
        }
      }
     case 58:
     bvec2(true, true);
     case 0:
     case 91:
     case 1:
     case 69:
     case 70:
     case 76:
     case 10:
     switch(_GLF_SWITCH(int(_GLF_ZERO(0.0, injectionSwitch.x))))
      {
       case 60:
       (usubBorrow(workgroup_size, subgroup_id, num_workgroup) + uvec4(3137u, 20122u, 149977u, 195969u));
       case 50:
       mat3x4(-7638.3209, 8.1, -9208.1152, 5.4, -1963.6895, -4391.2730, 573.243, -1.8, 732.361, -9.9, 782.879, 708.865);
       case 0:
       if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
        }
       else
        {
         switch(_GLF_SWITCH((0 | 0)))
          {
           case 28:
           while((7596 != _GLF_IDENTITY(-12896, (-12896) >> 0)))
            {
             (ivec2(-55120, 68991) >> 28904);
             mat4x2 _GLF_SWITCH_3_0v;
            }
           case 74:
           if((false))
            {
             {
              if((ivec2(-10393, 53831) != ivec2(-12570, -16980)))
               {
               }
              else
               {
                vec3 _GLF_SWITCH_3_1v, _GLF_SWITCH_3_2v, _GLF_SWITCH_3_3v;
                ;
                (_GLF_IDENTITY(-23.22, (false ? _GLF_FUZZED(-1685.9337) : _GLF_IDENTITY(-23.22, float(mat2x4(_GLF_IDENTITY(-23.22, clamp(-23.22, -23.22, -23.22)), 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0))))) - vec3(-2.6, -0.6, -773.489));
                mat3(-73.12, -5.0, -2.2, 4.7, 816.900, -29.62, -554.446, -0.6, 2209.1609);
                mat3x2(98.00, -617.699, 84.59, 1.4, -61.15, -749.901);
                lessThan(uvec3(64588u, 54392u, 46243u), uvec3(16635u, 99998u, 99040u));
               }
              mat3x4(790.155, 431.756, -7.6, 598.331, 0.0, 6110.1844, -46.53, -29.73, -9.0, 8.1, 26.44, -8.7);
              mat4(-19.37, 2669.1946, -427.411, -8.7, 828.248, -4.3, 0.7, -724.152, 446.308, 6.0, -997.448, 9047.9964, -814.145, -0.9, -11.44, 1.8);
              if(false)
               {
                int _GLF_SWITCH_3_4v, _GLF_SWITCH_3_5v, _GLF_SWITCH_3_6v[98];
                ivec4(-83847, 77656, 26381, -48721);
                lessThanEqual(floatBitsToInt(vec3(3.3, -6331.9873, 40.35)), ivec3(7100, 93639, 37212));
               }
              mat4x2(_GLF_IDENTITY(914.981, clamp(_GLF_IDENTITY(914.981, mix(float(_GLF_FUZZED(-44.46)), float(914.981), bool(true))), 914.981, 914.981)));
              if(lessThan(uvec2(181279u, 87081u), uvec2(105484u, 191944u)).r)
               {
                _GLF_IDENTITY((ivec3(-18438, 37496, -10811) * ivec3(-69678, -48192, -45360)), clamp(_GLF_IDENTITY((ivec3(-18438, 37496, -10811) * ivec3(-69678, -48192, -45360)), ((ivec3(-18438, 37496, -10811) * ivec3(-69678, -48192, -45360))) | ((ivec3(-18438, 37496, -10811) * ivec3(-69678, -48192, -45360)))), (ivec3(-18438, 37496, -10811) * ivec3(-69678, -48192, -45360)), (ivec3(-18438, 37496, -10811) * ivec3(-69678, -48192, -45360))));
                mix(vec3(-9802.2796, -6027.3819, -656.614), vec3(-2.8, -226.621, 5.7), greaterThan(_GLF_IDENTITY(uvec3(106447u, 418u, 172648u), ~ (~ (_GLF_IDENTITY(uvec3(106447u, 418u, 172648u), uvec3(uvec4(uvec3(106447u, 418u, 172648u), 1u)))))), uvec3(165618u, 84421u, 78220u)));
                sin(vec3(4970.3488, injectionSwitch));
                bvec4 _GLF_SWITCH_3_7v[19];
                vec4 _GLF_SWITCH_3_8v;
                ivec4 _GLF_SWITCH_3_9v, _GLF_SWITCH_3_10v;
               }
              mat3(27.46, 22.07, 2142.5368, 7043.6382, 9131.4860, 876.313, -16.97, 9159.7955, -1.9);
              while(true)
               {
                ivec2(71203, 23490)[0];
               }
              bvec3(false, true, true);
             }
             for(ivec3 _GLF_SWITCH_3_11v[76], _GLF_SWITCH_3_12v[38], _GLF_SWITCH_3_13v[58]; (mat4x3(993.844, 1.5, -295.094, 0.3, 2.9, -64.20, 8.3, 45.11, -3755.4041, 8289.0549, -2.7, 62.92) == mat4x3(1490.5216, _GLF_IDENTITY(5392.7441, min(_GLF_IDENTITY(5392.7441, 1.0 * (5392.7441)), 5392.7441)), 4714.8652, 70.00, 3236.3148, -74.00, 9.7, -1216.3564, 3.7, -9834.9731, 18.16, 9.6)); mix(uvec3(1154u, 189404u, 110874u), uvec3(195538u, 153487u, 199062u), lessThanEqual(_GLF_IDENTITY(uvec3(73894u, 178948u, 71943u), uvec3(0u, 0u, 0u) | (_GLF_IDENTITY(uvec3(73894u, 178948u, 71943u), (uvec3(73894u, 178948u, 71943u)) / uvec3(1u, 1u, 1u)))), uvec3(_GLF_IDENTITY(87827u, (true ? 87827u : _GLF_FUZZED(atomicOr(subgroup_local_id, subgroup_local_id)))), 96540u, 14799u))))
              {
               do
                {
                 bool _GLF_SWITCH_3_14v, _GLF_SWITCH_3_15v, _GLF_SWITCH_3_16v;
                 ivec4 _GLF_SWITCH_3_17v;
                 mat3x4(mat4(1740.7601, -9.3, -2.6, 526.806, 7.7, 8656.8185, 41.76, 231.004, -5.5, -589.342, -6170.3616, -598.325, -850.471, -8.5, 9641.7818, -6.4));
                 mat2x3(8.7, -942.661, -185.962, -7.4, -7.0, -5.3);
                 ;
                 vec2(-0.5, -2.1);
                 ivec3 _GLF_SWITCH_3_18v[78];
                }
               while(_GLF_IDENTITY((max(uvec4(86833u, 150645u, 162263u, 189521u), atomicOr(subgroup_size, workgroup_size)) == uvec4(105259u, 23087u, 48281u, 6443u)), ((max(uvec4(86833u, 150645u, 162263u, 189521u), atomicOr(subgroup_size, workgroup_size)) == uvec4(105259u, 23087u, 48281u, 6443u))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
               mat2x4(mat3x2(5188.3805, 6.7, 39.02, -2327.1511, 8.9, -856.957));
               bool _GLF_SWITCH_3_19v, _GLF_SWITCH_3_20v;
               ;
               ;
               ;
               for(               ivec3(-94828, -38179, -56473);
 false; (injectionSwitch != vec2(-88.84, 0.8)))
                {
                 mat3(mat4x3(-83.75, -865.452, -2.2, 2.1, -78.33, -22.08, -77.79, -1.9, -891.444, -9.1, 65.45, -1.0));
                }
               mat3x4(46.46, -9456.1082, 3.4, -736.420, 42.10, -9128.5620, 3.1, 3.5, -2.5, 0.1, 3.8, 559.214);
               transpose(mat4(-4.5, -2.4, 14.45, 15.42, 6.9, 904.107, -7.0, -226.289, 66.90, 1412.6333, -9318.9308, 86.12, 5.4, -9.1, 22.45, 227.543));
              }
             for(             bvec4(false, true, false, true);
 ((41596 % ivec4(-1798, 21968, -65397, -97901)) != ivec4(99947, 23218, -99357, -3007)); ivec4(90623, 76122, 97508, -97047))
              {
               if(true)
                {
                 (80265u - subgroup_local_id);
                 bvec4 _GLF_SWITCH_3_21v, _GLF_SWITCH_3_22v[13];
                 ;
                 ;
                 _GLF_SWITCH_3_21v;
                 bitCount(atomicMin(subgroup_size, subgroup_id));
                 ;
                 ivec3 _GLF_SWITCH_3_23v[1], _GLF_SWITCH_3_24v[13];
                 ivec2 _GLF_SWITCH_3_25v[62];
                }
               else
                {
                 int _GLF_SWITCH_3_26v, _GLF_SWITCH_3_27v;
                 mat3x2 _GLF_SWITCH_3_28v[49], _GLF_SWITCH_3_29v[93];
                 uvec3(139591u, 64824u, 24630u);
                }
               -47607;
               if((uvec2(30499u, 311u) != uvec2(107344u, 111851u)))
                {
                 subgroup_local_id;
                 mat2x4 _GLF_SWITCH_3_30v, _GLF_SWITCH_3_31v[18], _GLF_SWITCH_3_32v;
                 outerProduct(injectionSwitch, vec3(2120.5083, 38.46, 6977.0705));
                 ;
                 (mat2(572.051, 8194.7829, -10.74, 1275.6205) == mat2(-757.957, 6.3, -72.60, 226.001));
                }
              }
             int _GLF_SWITCH_3_33v, _GLF_SWITCH_3_34v, _GLF_SWITCH_3_35v[52];
            }
           case 0:
           case 11:
           case 69:
           case 36:
           case 22:
           case 77:
           case 50:
           case 58:
           case 80:
           if(_GLF_DEAD(false))
            return;
           break;
           default:
           1;
          }
        }
       case 62:
       return;
       break;
       default:
       1;
      }
     break;
     default:
     1;
    }
  }
 if(_GLF_DEAD(false))
  return;
 uint workgroup_id = _GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) * uvec3(1u, 1u, 1u)).x;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  barrier();
 uint workgroup_base = workgroup_size * _GLF_IDENTITY(workgroup_id, _GLF_IDENTITY(uint(uint(workgroup_id)), (uint(uint(workgroup_id))) | 0u));
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y))))
  barrier();
 uint virtual_gid = workgroup_base + subgroup_id * subgroup_size + subgroup_local_id;
 uint next_virtual_gid = _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, _GLF_IDENTITY((workgroup_base) ^ _GLF_IDENTITY(0u, (0u) - 0u), (true ? _GLF_IDENTITY(_GLF_IDENTITY((workgroup_base) ^ _GLF_IDENTITY(0u, (0u) - 0u), ~ (~ (_GLF_IDENTITY((workgroup_base) ^ _GLF_IDENTITY(0u, (0u) - 0u), ((workgroup_base) ^ _GLF_IDENTITY(0u, (0u) - 0u)) >> 0u)))), max(_GLF_IDENTITY(_GLF_IDENTITY((workgroup_base) ^ _GLF_IDENTITY(0u, (0u) - 0u), ~ (~ (_GLF_IDENTITY((workgroup_base) ^ _GLF_IDENTITY(0u, (0u) - 0u), ((workgroup_base) ^ _GLF_IDENTITY(0u, (0u) - 0u)) >> 0u)))), (_GLF_IDENTITY((workgroup_base) ^ _GLF_IDENTITY(0u, (0u) - 0u), ~ (~ (_GLF_IDENTITY((workgroup_base) ^ _GLF_IDENTITY(0u, (0u) - 0u), ((workgroup_base) ^ _GLF_IDENTITY(0u, (0u) - 0u)) >> 0u))))) << 0u), _GLF_IDENTITY(_GLF_IDENTITY((workgroup_base) ^ _GLF_IDENTITY(0u, (0u) - 0u), ~ (~ (_GLF_IDENTITY((workgroup_base) ^ _GLF_IDENTITY(0u, (0u) - 0u), ((workgroup_base) ^ _GLF_IDENTITY(0u, (0u) - 0u)) >> 0u)))), (_GLF_IDENTITY((workgroup_base) ^ _GLF_IDENTITY(0u, (0u) - 0u), ~ (~ (_GLF_IDENTITY((workgroup_base) ^ _GLF_IDENTITY(0u, (0u) - 0u), ((workgroup_base) ^ _GLF_IDENTITY(0u, (0u) - 0u)) >> 0u))))) >> 0u))) : _GLF_FUZZED(subgroup_id)))) + subgroup_id * _GLF_IDENTITY(subgroup_size, ~ (~ (_GLF_IDENTITY(subgroup_size, (subgroup_size) / uint(_GLF_ONE(1.0, injectionSwitch.y)))))), (workgroup_base + subgroup_id * subgroup_size) / uint(_GLF_ONE(1.0, injectionSwitch.y))) + (_GLF_IDENTITY((subgroup_local_id + 1), uint(uvec4((_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | 0u) + 1), 1u, 1u, 0u))) % subgroup_size);
 uint read_1 = atomicLoad(buf[virtual_gid], 4, 64, 0);
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 atomicStore(buf[next_virtual_gid], uint(read_1 + 1), 4, 64, 4);
 uint read_2 = atomicLoad(buf[_GLF_IDENTITY(virtual_gid, _GLF_IDENTITY((0u << _GLF_IDENTITY(uint(5u), uint(5u))), max((0u << _GLF_IDENTITY(uint(5u), uint(5u))), (0u << _GLF_IDENTITY(uint(5u), uint(5u))))) ^ (_GLF_IDENTITY(virtual_gid, ~ (_GLF_IDENTITY(~ (virtual_gid), (true ? ~ (virtual_gid) : _GLF_FUZZED(subgroup_id)))))))], 4, 64, 0);
 if(subgroup_local_id + 1 < subgroup_size)
  {
   switch(_GLF_SWITCH(0))
    {
     case 71:
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), ! (! (_GLF_WRAPPED_IF_TRUE(true)))), true, _GLF_IDENTITY(true, ! (! (true))), true)), true && (bool(bvec4(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), ! (! (_GLF_WRAPPED_IF_TRUE(true)))), true, _GLF_IDENTITY(true, ! (! (true))), true))))))
      {
       do
        {
         switch(_GLF_SWITCH(0))
          {
           case 68:
           mat3x2 _GLF_SWITCH_4_0v;
           case 87:
           mat4x3(mat3(3337.8911, -9.8, -20.77, 836.204, -5.3, -5.5, 77.60, 9549.0856, -19.23));
           case 0:
           case 75:
           case 50:
           case 60:
           case 95:
           case 70:
           case 83:
           case 11:
           if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
            return;
           break;
           case 98:
           ;
           default:
           1;
          }
        }
       while(_GLF_WRAPPED_LOOP(false));
       if(_GLF_DEAD(false))
        barrier();
       for(       (vec3(_GLF_IDENTITY(-1.1, (-1.1) + 0.0), 6.3, 2.4) + tan(_GLF_IDENTITY(-7999.4750, mix(float(_GLF_FUZZED(2.0)), float(-7999.4750), bool(true)))));
 true; mat4(760.463, _GLF_IDENTITY(-7712.3959, mix(float(_GLF_FUZZED(float(18953))), float(-7712.3959), bool(true))), _GLF_IDENTITY(240.886, (false ? _GLF_IDENTITY(_GLF_FUZZED(-344.428), max(_GLF_FUZZED(-344.428), _GLF_FUZZED(-344.428))) : 240.886)), -92.38, -7455.8983, -34.73, 7.2, -1.5, 657.838, 765.218, 69.68, -8.6, -801.293, -11.17, -8015.2112, 5568.5573))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          break;
         for(int _injected_loop_counter = ((1 << _GLF_IDENTITY(int(_GLF_IDENTITY(0, (0 << _GLF_IDENTITY(int(7), int(_GLF_IDENTITY(7, (_GLF_IDENTITY(7, max(7, 7))) >> 0)))) | (0))), int(0))) >> _GLF_IDENTITY(int(0), int(_GLF_IDENTITY(0, clamp(0, 0, 0))))); _GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter > 0), true && (_GLF_WRAPPED_LOOP(_injected_loop_counter > 0))); _injected_loop_counter --)
          {
           if(_GLF_DEAD(false))
            break;
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           -6.0;
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              barrier();
             break;
            }
          }
         if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec2(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false)))))
          barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          continue;
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         float _GLF_SWITCH_0_0v;
         bool _GLF_SWITCH_0_1v[34];
         if(_GLF_DEAD(false))
          break;
         if((_GLF_IDENTITY(ivec3(-99798, -97927, 69687).tss, ivec3(0, 0, 0) ^ (ivec3(-99798, -97927, 69687).tss)) == ivec3(23940, 7875, 24282)))
          {
           if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(6764.9362)), float(injectionSwitch.x), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) > injectionSwitch.y)))))))
            {
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              continue;
             if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
              {
               barrier();
              }
             else
              {
              }
            }
           (bvec2(true, false));
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)).x > injectionSwitch.y))))
            continue;
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(false))
              barrier();
             break;
            }
           if(_GLF_DEAD(false))
            barrier();
           20318;
          }
         else
          {
           if(_GLF_DEAD(false))
            continue;
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           if(_GLF_DEAD(false))
            continue;
           ivec4 _GLF_SWITCH_0_2v, _GLF_SWITCH_0_3v, _GLF_SWITCH_0_4v;
           for(int _injected_loop_counter = (0 | 0); _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
            {
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              barrier();
            }
           _GLF_IDENTITY((80992 | _GLF_SWITCH_0_4v), ((80992 | _GLF_SWITCH_0_4v)) - (_GLF_IDENTITY(ivec4(0, 0, 0, 0) | ivec4(0, 0, 0, _GLF_IDENTITY(0, int(ivec4(0, 1, int(_GLF_ZERO(0.0, injectionSwitch.x)), 0)))), (_GLF_IDENTITY(ivec4(0, 0, 0, 0) | ivec4(0, 0, 0, 0), ivec4(0, 0, 0, 0) | _GLF_IDENTITY((ivec4(0, 0, 0, 0) | ivec4(0, 0, 0, 0)), ~ (~ ((ivec4(0, 0, 0, 0) | ivec4(0, 0, 0, 0))))))) | (_GLF_IDENTITY(ivec4(0, 0, 0, 0) | ivec4(0, 0, 0, 0), (true ? ivec4(0, 0, 0, 0) | ivec4(0, 0, 0, 0) : _GLF_FUZZED(ivec4(60241, _GLF_IDENTITY(47239, (47239) >> 0), -33370, 47849))))))));
           if(_GLF_DEAD(false))
            continue;
          }
         if(_GLF_DEAD(false))
          {
           switch(_GLF_SWITCH(0))
            {
             case 77:
             (true ? ivec3(-66386, 75781, 34710) : ivec3(-63361, -25438, -31734));
             case 0:
             if(_GLF_DEAD(false))
              return;
             barrier();
             break;
             default:
             1;
            }
          }
         if(_GLF_DEAD(false))
          continue;
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_WRAPPED_IF_FALSE(false))
            {
            }
           else
            {
             if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * 1.0) > injectionSwitch.y, bool(bvec3(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))
              {
               do
                {
                 return;
                }
               while(_GLF_WRAPPED_LOOP(false));
              }
            }
           return;
          }
         mat3x2(_GLF_IDENTITY(805.029, min(805.029, 805.029)), -50.13, -12.59, _GLF_IDENTITY(3.0, clamp(3.0, 3.0, _GLF_IDENTITY(3.0, (false ? _GLF_FUZZED(964.465) : 3.0)))), -65.29, -4.9);
         for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _GLF_IDENTITY(_injected_loop_counter ++, (false ? _GLF_FUZZED((_injected_loop_counter << _injected_loop_counter)) : _GLF_IDENTITY(_injected_loop_counter ++, ~ (~ (_injected_loop_counter ++))))))
          {
           switch(_GLF_SWITCH((0 & -81723)))
            {
             case 0:
             if(_GLF_DEAD(false))
              {
               if(_GLF_DEAD(false))
                barrier();
               barrier();
              }
             case 13:
             mat2x4 _GLF_SWITCH_0_5v;
             case 37:
             case 40:
             case 38:
             case 82:
             for(bool _GLF_SWITCH_0_6v, _GLF_SWITCH_0_7v; _GLF_SWITCH_0_6v; mat2x4(8863.9827, 4.1, _GLF_IDENTITY(0.6, mix(float(_GLF_FUZZED(-7792.7020)), float(_GLF_IDENTITY(0.6, max(0.6, 0.6))), bool(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), bool(bvec3(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false || (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), false, true)))))), 96.07, -163.393, -5.9, 7843.4232, 5675.8484))
              {
               switch(_GLF_SWITCH(0))
                {
                 case 1:
                 if(_GLF_DEAD(false))
                  barrier();
                 ;
                 case 0:
                 case 67:
                 if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec4(_GLF_DEAD(false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, false)), bool(bvec4(bool(bvec4(_GLF_DEAD(false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, false)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, false)))))
                  continue;
                 case 81:
                 case 34:
                 if(_GLF_DEAD(false))
                  barrier();
                 case 98:
                 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                  break;
                 case 31:
                 case 97:
                 case 8:
                 case 33:
                 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)), _GLF_IDENTITY(injectionSwitch.y, 1.0 * (injectionSwitch.y))))))))
                  barrier();
                 case 37:
                 if(_GLF_DEAD(false))
                  barrier();
                 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                  continue;
                 bvec2 _GLF_SWITCH_0_8v[42], _GLF_SWITCH_0_9v;
                 break;
                 case 19:
                 float _GLF_SWITCH_2_0v[14];
                 case 4:
                 if(_GLF_DEAD(false))
                  barrier();
                 mat3x4(-5.0, 46.02, -408.235, 46.13, 682.175, 0.8, 6.3, 853.442, 733.551, 4.0, 13.88, 55.11);
                 default:
                 1;
                 if(_GLF_DEAD(false))
                  continue;
                 if(_GLF_DEAD(false))
                  continue;
                }
               if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_DEAD(false), true, true))), true, true)))) && true))
                continue;
              }
             case 66:
             do
              {
               switch(_GLF_SWITCH((0 & -79425)))
                {
                 case 0:
                 case 83:
                 case 34:
                 case 24:
                 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y))))))
                  return;
                 case 56:
                 case 77:
                 case 68:
                 if(_GLF_DEAD(false))
                  barrier();
                 break;
                 default:
                 1;
                }
              }
             while(_GLF_WRAPPED_LOOP(false));
             do
              {
               switch(_GLF_SWITCH(0))
                {
                 case 0:
                 case 14:
                 case 4:
                 case 61:
                 switch(_GLF_SWITCH(0))
                  {
                   case 0:
                   case 4:
                   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                    {
                     do
                      {
                       switch(_GLF_SWITCH((0 >> _GLF_IDENTITY(_GLF_IDENTITY(int(3), int(3)), _GLF_IDENTITY(int(ivec4(_GLF_IDENTITY(_GLF_IDENTITY(int(3), int(3)), (true ? _GLF_IDENTITY(int(3), int(3)) : _GLF_FUZZED(-25079))), 0, 0, (1 ^ 1))), (true ? _GLF_IDENTITY(int(ivec4(_GLF_IDENTITY(_GLF_IDENTITY(int(3), int(3)), (true ? _GLF_IDENTITY(int(3), int(3)) : _GLF_FUZZED(-25079))), 0, 0, (1 ^ 1))), (int(ivec4(_GLF_IDENTITY(_GLF_IDENTITY(int(3), int(3)), (true ? _GLF_IDENTITY(int(3), int(3)) : _GLF_FUZZED(-25079))), 0, 0, (1 ^ 1)))) / 1) : _GLF_FUZZED(90978)))))))
                        {
                         case 0:
                         case 5:
                         case 76:
                         case 66:
                         case 50:
                         case 53:
                         return;
                         break;
                         case 80:
                         float _GLF_SWITCH_3_0v, _GLF_SWITCH_3_1v, _GLF_SWITCH_3_2v;
                         case 71:
                         ;
                         default:
                         1;
                        }
                      }
                     while(_GLF_WRAPPED_LOOP(false));
                    }
                   break;
                   case 43:
                   _GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, (false) || false))), false, true), _GLF_IDENTITY(bvec3(bvec4(bvec3(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, (false) || false))), false, true), false)), bvec3(bvec3(bvec3(bvec4(bvec3(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, (false) || false))), false, true), false))))));
                   default:
                   1;
                  }
                 break;
                 case 29:
                 ivec4(-24228, 85853, 93088, 78031);
                 default:
                 1;
                }
              }
             while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))) - _GLF_IDENTITY(dot(vec2(determinant(mat4(1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0)), 0.0), vec2(0.0, 1.0)), dot(vec2(determinant(mat4(1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0)), 0.0), vec2(0.0, 1.0))))))));
             case 81:
             case 68:
             do
              {
               if(_GLF_DEAD(false))
                {
                 if(_GLF_DEAD(false))
                  barrier();
                 return;
                }
               do
                {
                 atomicMax(subgroup_local_id, atomicAnd(read_2, num_workgroup));
                }
               while(_GLF_WRAPPED_LOOP(false));
               if(_GLF_WRAPPED_IF_FALSE(false))
                {
                }
               else
                {
                 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, false || (false)))))))
                  {
                   if(_GLF_DEAD(false))
                    break;
                   for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
                    {
                     if(_GLF_WRAPPED_IF_FALSE(false))
                      {
                      }
                     else
                      {
                       return;
                      }
                    }
                   if(_GLF_DEAD(false))
                    continue;
                  }
                 if(_GLF_DEAD(false))
                  {
                   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec2(_GLF_DEAD(false), true)), (bool(bvec2(_GLF_DEAD(false), true))) && true))) || false))
                    return;
                   barrier();
                  }
                }
               mat3 _GLF_SWITCH_0_10v, _GLF_SWITCH_0_11v, _GLF_SWITCH_0_12v;
               fma(vec4(5.1, 2.0, -7.6, -482.788), vec4(-7.4, 5294.9426, -0.1, 4.6), vec4(9890.0510, 7.3, -223.214, 0.5));
               do
                {
                 switch(_GLF_SWITCH((0 | 0)))
                  {
                   case 0:
                   case 9:
                   case 40:
                   case 5:
                   case 35:
                   isinf(injectionSwitch);
                   case 6:
                   case 34:
                   if(_GLF_DEAD(false))
                    barrier();
                   if(_GLF_DEAD(false))
                    continue;
                   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, true, true), bvec3(bvec4(bvec3(false, true, true), true)))))))
                    barrier();
                   break;
                   case 58:
                   mat3x2 _GLF_SWITCH_2_0v, _GLF_SWITCH_2_1v;
                   if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_DEAD(false), true))))
                    break;
                   case 18:
                   mat2x3 _GLF_SWITCH_2_2v[26], _GLF_SWITCH_2_3v, _GLF_SWITCH_2_4v;
                   if(_GLF_DEAD(false))
                    barrier();
                   if(_GLF_DEAD(false))
                    continue;
                   default:
                   1;
                   if(_GLF_DEAD(false))
                    barrier();
                   if(_GLF_DEAD(false))
                    break;
                  }
                 if(_GLF_DEAD(false))
                  barrier();
                 if(_GLF_DEAD(false))
                  continue;
                 if(_GLF_DEAD(false))
                  barrier();
                }
               while(_GLF_WRAPPED_LOOP(false));
               mat2x3(-7.7, -6.2, 52.89, 59.05, 4.3, 330.247);
               (next_virtual_gid --);
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                return;
               for(int _injected_loop_counter = _GLF_IDENTITY(1, clamp(1, 1, _GLF_IDENTITY(1, min(_GLF_IDENTITY(1, 0 | (1)), 1)))); _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter > (_GLF_IDENTITY(1, 0 | (1)) ^ 1), false || (_injected_loop_counter > (1 ^ 1)))); _injected_loop_counter --)
                {
                 581;
                }
               if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
                barrier();
               if(_GLF_DEAD(false))
                barrier();
               (- mat3x2(-4714.2486, _GLF_IDENTITY(-8.3, min(-8.3, _GLF_IDENTITY(-8.3, clamp(_GLF_IDENTITY(-8.3, 0.0 + (-8.3)), -8.3, -8.3)))), 3422.8947, -41.36, 0.7, 7.7));
              }
             while(_GLF_WRAPPED_LOOP(false));
             break;
             case 97:
             (uvec3(99744u, 117839u, 4774u) ^ subgroup_id);
             default:
             1;
            }
          }
         do
          {
           while((_GLF_IDENTITY((workgroup_id / uvec2(470u, 187825u)) == uvec2(175534u, 54215u), bool(bvec4((workgroup_id / uvec2(470u, 187825u)) == uvec2(175534u, 54215u), false, false, false)))))
            {
             switch(_GLF_IDENTITY(_GLF_SWITCH((_GLF_IDENTITY((((1 << _GLF_IDENTITY(int(7), int(7))) >> _GLF_IDENTITY(int(7), int(7))) ^ 1), ((((1 << _GLF_IDENTITY(int(7), int(7))) >> _GLF_IDENTITY(int(7), int(7))) ^ 1)) >> 0) | 0)), ~ (~ (_GLF_IDENTITY(_GLF_SWITCH(((((1 << _GLF_IDENTITY(int(7), int(7))) >> _GLF_IDENTITY(int(7), int(7))) ^ 1) | 0)), max(_GLF_SWITCH(((((1 << _GLF_IDENTITY(int(7), int(7))) >> _GLF_IDENTITY(int(7), int(7))) ^ 1) | 0)), _GLF_SWITCH(((((1 << _GLF_IDENTITY(int(7), int(7))) >> _GLF_IDENTITY(int(7), int(7))) ^ 1) | 0))))))))
              {
               case 0:
               if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, true && (false)), (injectionSwitch.x > injectionSwitch.y))))
                barrier();
               if(_GLF_DEAD(false))
                return;
               if(_GLF_DEAD(false))
                {
                 if(_GLF_DEAD(false))
                  barrier();
                 return;
                }
               if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), ! (! (_GLF_IDENTITY(false, (false) && true))))))
                {
                 switch(_GLF_SWITCH(0))
                  {
                   case 59:
                   bvec4(false, false, (mat3x2(6.5, 24.26, -500.222, -99.37, -8.2, -7.7) != mat3x2(55.58, -973.425, 4.7, -5.6, -928.200, -70.18)), (vec3(95.39, -22.32, -62.50) == vec3(1.4, -2.3, 57.97)));
                   case 8:
                   vec3 _GLF_SWITCH_4_0v;
                   case 0:
                   if(_GLF_DEAD(false))
                    barrier();
                   case 30:
                   do
                    {
                     barrier();
                    }
                   while(_GLF_WRAPPED_LOOP(false));
                   break;
                   default:
                   1;
                  }
                }
               if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
                {
                 switch(_GLF_SWITCH(0))
                  {
                   case 45:
                   ;
                   case 72:
                   subgroup_local_id;
                   case 0:
                   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
                    continue;
                   continue;
                   break;
                   case 80:
                   mat4 _GLF_SWITCH_4_0v, _GLF_SWITCH_4_1v, _GLF_SWITCH_4_2v;
                   case 64:
                   ;
                   default:
                   1;
                  }
                }
               float _GLF_SWITCH_0_13v, _GLF_SWITCH_0_14v, _GLF_SWITCH_0_15v;
               case 73:
               case 97:
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                barrier();
               if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > injectionSwitch.y))))
                {
                 do
                  {
                   switch(_GLF_SWITCH(0))
                    {
                     case 0:
                     return;
                     break;
                     case 94:
                     smoothstep((false ? _GLF_IDENTITY(vec2(611.400, 6.5), mix(vec2((vec2(611.400, 6.5))[0], _GLF_FUZZED(-858.112)), vec2(_GLF_FUZZED(-6.0), (vec2(611.400, 6.5))[1]), bvec2(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) : vec2(-63.05, 92.49)), injectionSwitch, (_GLF_IDENTITY(vec2(-7.1, -200.799), min(_GLF_IDENTITY(vec2(-7.1, -200.799), clamp(vec2(-7.1, -200.799), vec2(-7.1, -200.799), vec2(-7.1, -200.799))), vec2(-7.1, -200.799))) - _GLF_SWITCH_0_15v));
                     default:
                     1;
                    }
                  }
                 while(_GLF_WRAPPED_LOOP(false));
                }
               do
                {
                 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], (true ? _GLF_IDENTITY(injectionSwitch[0], mix(float(injectionSwitch[0]), float(_GLF_FUZZED(713.994)), bool(false))) : _GLF_FUZZED(1.6))), injectionSwitch[1])).y))))
                  return;
                }
               while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, (false) && true), (injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).y))), true && (! (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y, injectionSwitch.y)))))))))));
               matrixCompMult(mat3x2(-85.79, 8.0, 1.0, -225.603, -3.5, -55.29), (_GLF_SWITCH_0_0v / mat3x2(48.13, -9899.4864, -16.80, -98.90, 39.28, -6425.9287)));
               case 19:
               case 43:
               for(int _injected_loop_counter = int(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, float(_GLF_IDENTITY(vec2(_GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-61.18)), float(injectionSwitch.y), bool(true)))) - 0.0), determinant(mat4(0.0, 0.0, 0.0, 0.0, 1.0, 0.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(1.0, 0.0)), dot(vec2(0.0, 1.0), vec2(1.0, 0.0))), 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, determinant(mat4(1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0)), 0.0, 0.0))), mix(vec2(_GLF_FUZZED(-212.164), (vec2(_GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-61.18)), float(injectionSwitch.y), bool(true)))) - 0.0), determinant(mat4(0.0, 0.0, 0.0, 0.0, 1.0, 0.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(1.0, 0.0)), dot(vec2(0.0, 1.0), vec2(1.0, 0.0))), 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, determinant(mat4(1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0)), 0.0, 0.0))))[1]), vec2(_GLF_IDENTITY((vec2(_GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-61.18)), float(injectionSwitch.y), bool(true)))) - 0.0), determinant(mat4(0.0, 0.0, 0.0, 0.0, 1.0, 0.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(1.0, 0.0)), dot(vec2(0.0, 1.0), vec2(1.0, 0.0))), 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, determinant(mat4(1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0)), 0.0, 0.0))))[0], float(vec4((vec2(_GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-61.18)), float(injectionSwitch.y), bool(true)))) - 0.0), determinant(mat4(0.0, 0.0, 0.0, 0.0, 1.0, 0.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(1.0, 0.0)), dot(vec2(0.0, 1.0), vec2(1.0, 0.0))), 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, determinant(mat4(1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0)), 0.0, 0.0))))[0], 1.0, 0.0, 1.0))), _GLF_FUZZED(vec4(-5.0, -47.53, -8.4, 10.68).w)), bvec2(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))); _GLF_WRAPPED_LOOP(_injected_loop_counter != _GLF_IDENTITY(0, int(ivec4(0, 1, 0, 1)))); _injected_loop_counter --)
                {
                 if(_GLF_DEAD(false))
                  return;
                }
               case 42:
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                continue;
               if(_GLF_DEAD(false))
                continue;
               case 57:
               for(mat4 _GLF_SWITCH_0_16v[93], _GLF_SWITCH_0_17v, _GLF_SWITCH_0_18v; _GLF_IDENTITY((ivec3(-60400, 60395, 98074) == _GLF_IDENTITY(ivec3(46608, _GLF_IDENTITY(-9521, (-9521) / 1), -64363), (_GLF_IDENTITY(ivec3(46608, _GLF_IDENTITY(-9521, (-9521) / _GLF_IDENTITY(1, (_GLF_IDENTITY(1, ~ (~ (_GLF_IDENTITY(1, max(1, 1)))))) ^ 0)), -64363), (ivec3(_GLF_IDENTITY(46608, min(46608, 46608)), _GLF_IDENTITY(-9521, _GLF_IDENTITY((-9521) / 1, clamp((-9521) / 1, (-9521) / 1, (-9521) / 1))), -64363)) - ivec3(0, 0, 0))) + ivec3(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), max(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), 0.0 + (_GLF_ZERO(0.0, injectionSwitch.x))), _GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), clamp(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), clamp(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))))), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)))), false || ((ivec3(-60400, 60395, 98074) == _GLF_IDENTITY(ivec3(46608, _GLF_IDENTITY(-9521, (-9521) / 1), -64363), (_GLF_IDENTITY(ivec3(46608, _GLF_IDENTITY(-9521, (-9521) / _GLF_IDENTITY(1, (_GLF_IDENTITY(1, ~ (~ (_GLF_IDENTITY(1, max(1, 1)))))) ^ 0)), -64363), (ivec3(_GLF_IDENTITY(46608, min(46608, 46608)), _GLF_IDENTITY(-9521, _GLF_IDENTITY((-9521) / 1, clamp((-9521) / 1, (-9521) / 1, (-9521) / 1))), -64363)) - ivec3(0, 0, 0))) + ivec3(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), max(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), 0.0 + (_GLF_ZERO(0.0, injectionSwitch.x))), _GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), clamp(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), clamp(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))))), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)))))); subgroup_local_id)
                {
                 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
                  break;
                 switch(_GLF_SWITCH(((0 << _GLF_IDENTITY(int(4), int(4))) ^ 0)))
                  {
                   case 0:
                   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                    continue;
                   if(_GLF_WRAPPED_IF_TRUE(true))
                    {
                     if(_GLF_DEAD(false))
                      barrier();
                    }
                   else
                    {
                    }
                   case 24:
                   if(_GLF_DEAD(false))
                    {
                     if(_GLF_DEAD(false))
                      return;
                     continue;
                    }
                   case 99:
                   case 98:
                   case 84:
                   for(int _injected_loop_counter = 0; _GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter != 1), (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter != 1), bool(bvec3(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter != 1), (_GLF_WRAPPED_LOOP(_injected_loop_counter != 1)) && true), true, false)))) || false); _injected_loop_counter ++)
                    {
                     switch(_GLF_SWITCH(0))
                      {
                       case 0:
                       case 4:
                       case 30:
                       case 67:
                       case 99:
                       if(_GLF_WRAPPED_IF_FALSE(false))
                        {
                        }
                       else
                        {
                         if(_GLF_DEAD(false))
                          return;
                         mod(vec4(-9.4, -1041.0417, -8.7, _GLF_IDENTITY(-70.15, min(-70.15, -70.15))), cosh(_GLF_IDENTITY(_GLF_SWITCH_0_0v, mix(float(_GLF_FUZZED(-4041.9148)), float(_GLF_SWITCH_0_0v), bool(true)))));
                        }
                       break;
                       default:
                       1;
                      }
                    }
                   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                    break;
                   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                    barrier();
                   case 56:
                   if(_GLF_WRAPPED_IF_FALSE(false))
                    {
                    }
                   else
                    {
                     if(_GLF_DEAD(false))
                      {
                       do
                        {
                         barrier();
                        }
                       while(_GLF_WRAPPED_LOOP(false));
                      }
                    }
                   break;
                   case 21:
                   ;
                   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                    {
                     if(_GLF_DEAD(false))
                      barrier();
                     if(_GLF_WRAPPED_IF_FALSE(false))
                      {
                      }
                     else
                      {
                       return;
                      }
                    }
                   default:
                   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(_GLF_SWITCH_0_14v) : _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0), _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))))))))))
                    barrier();
                   if(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), false || (_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ((injectionSwitch.x < injectionSwitch.y)) || false))))))
                    {
                     1;
                     for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < _GLF_IDENTITY(1, (1) * 1)); _injected_loop_counter ++)
                      {
                       if(_GLF_DEAD(false))
                        return;
                      }
                    }
                   else
                    {
                    }
                  }
                }
               break;
               case 55:
               mat2(-8.1, _GLF_IDENTITY(89.90, clamp(89.90, 89.90, 89.90)), 52.20, -8.4);
               if(_GLF_DEAD(false))
                barrier();
               default:
               do
                {
                 1;
                 if(_GLF_DEAD(false))
                  break;
                }
               while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (_GLF_IDENTITY(false, (false) || false))), (_GLF_IDENTITY((! (_GLF_IDENTITY(false, (false) || false))), ! (! (_GLF_IDENTITY((! (_GLF_IDENTITY(false, (false) || false))), true && ((! (_GLF_IDENTITY(false, (false) || false))))))))) && true))));
              }
             do
              {
               if(_GLF_DEAD(false))
                {
                 if(_GLF_DEAD(false))
                  barrier();
                 return;
                }
               if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, true && (false)), (injectionSwitch.x > injectionSwitch.y))))
                barrier();
              }
             while(_GLF_WRAPPED_LOOP(false));
            }
          }
         while(_GLF_WRAPPED_LOOP(false));
         if(_GLF_DEAD(false))
          barrier();
         for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != ((1 & 1) ^ 1)); _injected_loop_counter --)
          {
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(false))
              barrier();
             if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), bool(bvec3(_GLF_IDENTITY(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).x < injectionSwitch.y)), ! (! (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), _GLF_IDENTITY(true, (true) || false), true)))))
              {
               switch(_GLF_SWITCH(int(_GLF_ZERO(0.0, injectionSwitch.x))))
                {
                 case 61:
                 mat2x4(-7.7, -11.85, 5.9, 9.5, 2177.3765, 7.2, -2576.1606, 66.59);
                 case 0:
                 case 5:
                 if(_GLF_DEAD(false))
                  return;
                 case 69:
                 case 90:
                 case 36:
                 barrier();
                 break;
                 default:
                 1;
                }
              }
             else
              {
              }
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              return;
            }
          }
        }
      }
     else
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        return;
      }
     case 35:
     mat2x4 _GLF_SWITCH_0_19v, _GLF_SWITCH_0_20v[37];
     if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))
      return;
     do
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        continue;
      }
     while(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(false), (_GLF_WRAPPED_LOOP(false)) && true));
     if(_GLF_DEAD(false))
      return;
     case 0:
     for(int _injected_loop_counter = _GLF_IDENTITY(int(_GLF_ONE(1.0, injectionSwitch.y)), 0 | _GLF_IDENTITY((int(_GLF_ONE(1.0, injectionSwitch.y))), 0 ^ ((int(_GLF_ONE(1.0, injectionSwitch.y)))))); _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter > (0 ^ _GLF_IDENTITY(0, int(ivec4(0, 1, 1, 0)))), _GLF_IDENTITY((_GLF_IDENTITY(_injected_loop_counter > _GLF_IDENTITY((0 ^ 0), ((0 ^ 0)) | ((0 ^ 0))), (_injected_loop_counter > (0 ^ 0)) && true)), ! (! (_GLF_IDENTITY((_GLF_IDENTITY(_injected_loop_counter > _GLF_IDENTITY((0 ^ 0), ((0 ^ 0)) | ((0 ^ 0))), (_injected_loop_counter > (0 ^ 0)) && true)), bool(bvec3((_GLF_IDENTITY(_injected_loop_counter > _GLF_IDENTITY((0 ^ 0), ((0 ^ 0)) | ((0 ^ 0))), (_injected_loop_counter > (0 ^ 0)) && true)), false, false)))))) && true)); _injected_loop_counter --)
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
        return;
      }
     case 65:
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
      }
     else
      {
       if(_GLF_DEAD(false))
        {
         do
          {
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            {
             if(_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, ! (! (false)))))))
              return;
             if(_GLF_DEAD(false))
              barrier();
             if(_GLF_WRAPPED_IF_TRUE(true))
              {
               if(_GLF_DEAD(false))
                barrier();
               if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec3(injectionSwitch.x > injectionSwitch.y, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)))))))))
                {
                }
               else
                {
                 if(_GLF_DEAD(false))
                  return;
                 barrier();
                }
              }
             else
              {
              }
             if(_GLF_DEAD(false))
              return;
            }
          }
         while(_GLF_WRAPPED_LOOP(false));
         barrier();
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
      }
     case 34:
     if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec3(bvec2(false, true), false)))), false || (bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec3(bvec2(false, true), false)))))))))
      {
       switch(_GLF_SWITCH((0 << _GLF_IDENTITY(int(8), int(8)))))
        {
         case 12:
         for(int _GLF_SWITCH_2_0v, _GLF_SWITCH_2_1v[72], _GLF_SWITCH_2_2v; false; ivec4(-6910, 44328, -72226, -16499))
          {
           if(_GLF_DEAD(false))
            continue;
           ;
           if(_GLF_DEAD(false))
            barrier();
          }
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) && true), (injectionSwitch.x > injectionSwitch.y))))
            {
             if(_GLF_DEAD(false))
              barrier();
             return;
            }
           return;
          }
         case 92:
         if(false)
          {
           if(_GLF_DEAD(false))
            barrier();
          }
         case 0:
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            return;
           if(_GLF_DEAD(false))
            return;
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
         if(_GLF_DEAD(false))
          barrier();
         case 81:
         case 7:
         if(_GLF_DEAD(false))
          return;
         barrier();
         break;
         case 38:
         mat4x2 _GLF_SWITCH_2_3v, _GLF_SWITCH_2_4v, _GLF_SWITCH_2_5v;
         if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, true, false)), true && (bool(bvec3(false, true, false)))))))
          {
           switch(_GLF_SWITCH(0))
            {
             case 0:
             case 12:
             case 90:
             if(_GLF_DEAD(false))
              return;
             case 20:
             return;
             break;
             case 35:
             _GLF_SWITCH_2_4v;
             case 68:
             ;
             default:
             1;
            }
          }
         case 87:
         mat4x3 _GLF_SWITCH_2_6v[47], _GLF_SWITCH_2_7v;
         default:
         1;
         if(_GLF_DEAD(false))
          barrier();
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          barrier();
         return;
        }
      }
     case 43:
     if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), true, _GLF_IDENTITY(true, (true) && true), false))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, (false) || false)))))
      {
       for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
        {
         barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
        }
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_WRAPPED_IF_TRUE(true))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_DEAD(false), false))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
          barrier();
        }
       else
        {
        }
       for(int _injected_loop_counter = 0; _GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter < 1), true && (_GLF_WRAPPED_LOOP(_injected_loop_counter < 1))); _injected_loop_counter ++)
        {
         if(_GLF_DEAD(false))
          barrier();
         return;
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            continue;
           break;
          }
        }
      }
     case 28:
     int i = 0;
     if(_GLF_DEAD(false))
      {
       if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY((_GLF_IDENTITY(false, ! (! (false)))) && true, ! (_GLF_IDENTITY(! ((_GLF_IDENTITY(false, ! (! (false)))) && true), bool(bvec3(! ((_GLF_IDENTITY(false, ! (! (false)))) && true), true, false))))))))
        {
        }
       else
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(mat2x3(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), 1.0, 0.0, 1.0, 1.0))).y))))
          {
           if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec3(_GLF_DEAD(false), false, false)), bool(bool(bool(bvec3(_GLF_DEAD(false), false, false)))))))))
            barrier();
          }
         else
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            {
             for(int _injected_loop_counter = (0 << _GLF_IDENTITY(int(0), int(0))); _GLF_WRAPPED_LOOP(_injected_loop_counter != int(_GLF_ONE(1.0, injectionSwitch.y))); _injected_loop_counter ++)
              {
               switch(_GLF_SWITCH((0 | 0)))
                {
                 case 61:
                 vec2(-6469.7535, 4.2);
                 case 0:
                 case 33:
                 case 51:
                 case 66:
                 barrier();
                 break;
                 default:
                 1;
                }
              }
             if(_GLF_DEAD(false))
              barrier();
            }
          }
         if(_GLF_DEAD(false))
          return;
        }
      }
     case 62:
     case 18:
     case 96:
     if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, ! (! (true)))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
      }
     else
      {
      }
     for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > (0 | 0)); _injected_loop_counter --)
      {
       for(int _injected_loop_counter = ((1 << _GLF_IDENTITY(_GLF_IDENTITY(int(_GLF_IDENTITY(7, clamp(7, 7, 7))), _GLF_IDENTITY(int(7), ~ (~ (int(7))))), (_GLF_IDENTITY(_GLF_IDENTITY(int(_GLF_IDENTITY(7, clamp(7, 7, 7))), _GLF_IDENTITY(int(7), ~ (~ (int(7))))), (_GLF_IDENTITY(int(_GLF_IDENTITY(7, clamp(7, 7, 7))), _GLF_IDENTITY(int(7), ~ (~ (int(7)))))) ^ 0)) << 0)) >> _GLF_IDENTITY(_GLF_IDENTITY(int(_GLF_IDENTITY(7, max(7, 7))), _GLF_IDENTITY(_GLF_IDENTITY(int(7), max(int(7), int(7))), ~ _GLF_IDENTITY((~ (int(7))), clamp((_GLF_IDENTITY(~ (int(7)), ~ (~ (~ (int(7)))))), (~ (int(7))), (~ (int(7))))))), (_GLF_IDENTITY(_GLF_IDENTITY(int(_GLF_IDENTITY(7, ~ (_GLF_IDENTITY(~ (7), (~ (7)) >> 0)))), _GLF_IDENTITY(_GLF_IDENTITY(int(7), max(int(7), int(7))), ~ _GLF_IDENTITY((~ (int(7))), _GLF_IDENTITY(clamp((_GLF_IDENTITY(~ (int(7)), ~ (~ (~ (int(7)))))), (~ (int(7))), (~ (int(7)))), (clamp((_GLF_IDENTITY(~ (int(7)), ~ (~ (~ (int(7)))))), (~ (int(7))), (~ (int(7))))) >> 0)))), clamp(_GLF_IDENTITY(int(7), _GLF_IDENTITY(_GLF_IDENTITY(int(7), max(int(7), int(7))), ~ _GLF_IDENTITY((~ (int(7))), clamp((_GLF_IDENTITY(~ (int(7)), ~ (~ (~ (_GLF_IDENTITY(int(7), ~ (~ (int(7))))))))), (~ (int(7))), (~ (int(7))))))), _GLF_IDENTITY(int(7), _GLF_IDENTITY(_GLF_IDENTITY(int(7), max(int(_GLF_IDENTITY(7, (7) | (_GLF_IDENTITY(7, (7) | int(_GLF_ZERO(0.0, injectionSwitch.x)))))), int(7))), ~ _GLF_IDENTITY((~ (int(7))), clamp((_GLF_IDENTITY(~ (int(7)), ~ (~ (~ (int(7)))))), (~ (int(7))), (~ (int(7))))))), _GLF_IDENTITY(int(_GLF_IDENTITY(7, 0 | (7))), _GLF_IDENTITY(_GLF_IDENTITY(int(7), max(int(7), int(7))), ~ _GLF_IDENTITY((~ (int(7))), clamp((_GLF_IDENTITY(~ _GLF_IDENTITY((int(7)), (true ? _GLF_IDENTITY((int(7)), min((int(7)), (int(7)))) : _GLF_FUZZED(atomicAnd(i, _injected_loop_counter)))), ~ (~ (~ (int(7)))))), _GLF_IDENTITY((~ (int(7))), ((~ (int(7)))) - 0), (~ (int(7)))))))))) >> 0)); _GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter != (0 | 0)), (_GLF_WRAPPED_LOOP(_injected_loop_counter != (0 | _GLF_IDENTITY(0, clamp(_GLF_IDENTITY(0, (0) | 0), _GLF_IDENTITY(0, (0) * 1), _GLF_IDENTITY(0, max(0, _GLF_IDENTITY(0, int(ivec3(0, 0, 0)))))))))) && true); _injected_loop_counter --)
        {
         switch(_GLF_SWITCH(0))
          {
           case 44:
           greaterThan(uvec3(_GLF_IDENTITY(20200u, (20200u) / 1u), 33215u, 165626u), uvec3(106225u, 191387u, 194959u));
           case 0:
           case 37:
           case 24:
           case 41:
           if(_GLF_DEAD(false))
            barrier();
           case 51:
           case 82:
           case 57:
           case 14:
           do
            {
             switch(_GLF_SWITCH((1 ^ 1)))
              {
               case 17:
               ;
               case 54:
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                barrier();
               mat4x3(9.7, -974.907, -614.053, -9755.7529, -4.2, -9.7, -883.716, -2145.1042, -66.46, 67.93, -83.39, -8.9);
               do
                {
                 if(_GLF_DEAD(false))
                  {
                   if(_GLF_DEAD(false))
                    barrier();
                   for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
                    {
                     barrier();
                    }
                  }
                }
               while(_GLF_WRAPPED_LOOP(false));
               if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))))
                return;
               case 0:
               case 79:
               case 69:
               if(_GLF_WRAPPED_IF_FALSE(false))
                {
                }
               else
                {
                 switch(_GLF_SWITCH(0))
                  {
                   case 79:
                   mat2x4 _GLF_SWITCH_4_0v, _GLF_SWITCH_4_1v;
                   case 0:
                   case 13:
                   case 76:
                   case 52:
                   atomicStore(buf[_GLF_IDENTITY(next_virtual_gid, (false ? _GLF_FUZZED(next_virtual_gid) : next_virtual_gid))], uint(_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1, _GLF_IDENTITY(uint(uvec3(read_1 + 1, 1u, 0u)), (true ? uint(uvec3(read_1 + 1, 1u, 0u)) : _GLF_FUZZED(workgroup_size)))), min(_GLF_IDENTITY(read_1 + 1, _GLF_IDENTITY(uint(uvec3(read_1 + 1, 1u, 0u)), (true ? uint(uvec3(read_1 + 1, 1u, 0u)) : _GLF_FUZZED(workgroup_size)))), _GLF_IDENTITY(read_1 + 1, _GLF_IDENTITY(uint(uvec3(read_1 + 1, 1u, 0u)), (true ? uint(uvec3(read_1 + 1, 1u, 0u)) : _GLF_FUZZED(workgroup_size)))))) == read_2) + 1, 4, 64, _GLF_IDENTITY(4, _GLF_IDENTITY((47958 & 0), (_GLF_IDENTITY((47958 & 0), 0 ^ ((47958 & 0)))) ^ 0) | (4)));
                   break;
                   case 94:
                   mat2x3 _GLF_SWITCH_4_2v, _GLF_SWITCH_4_3v[43], _GLF_SWITCH_4_4v;
                   default:
                   1;
                  }
                }
               break;
               if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))
                barrier();
               case 64:
               bool _GLF_SWITCH_1_0v, _GLF_SWITCH_1_1v[60], _GLF_SWITCH_1_2v;
               default:
               for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
                {
                 1;
                }
              }
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              barrier();
            }
           while(_GLF_WRAPPED_LOOP(false));
           break;
           case 5:
           mat3 _GLF_SWITCH_3_0v;
           default:
           1;
          }
        }
      }
     if(_GLF_DEAD(false))
      barrier();
     break;
     if(_GLF_WRAPPED_IF_TRUE(true))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y))))
        barrier();
      }
     else
      {
      }
     default:
     if(_GLF_WRAPPED_IF_TRUE(true))
      {
       1;
       if(_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), false || ((! (false)))))))))
        barrier();
      }
     else
      {
      }
    }
  }
 else
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   switch(_GLF_SWITCH(0))
    {
     case 0:
     case 2:
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))))
      return;
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
       if(_GLF_DEAD(false))
        barrier();
      }
     else
      {
       if(_GLF_DEAD(false))
        {
         for(int _injected_loop_counter = int(_GLF_ZERO(0.0, injectionSwitch.x)); _GLF_WRAPPED_LOOP(_injected_loop_counter != int(_GLF_ONE(1.0, injectionSwitch.y))); _injected_loop_counter ++)
          {
           return;
          }
        }
       atomicStore(buf[next_virtual_gid], uint(read_1 + 1 == read_2) + 1, 4, 64, _GLF_IDENTITY(_GLF_IDENTITY(4, min(4, _GLF_IDENTITY(4, min(4, _GLF_IDENTITY(4, (4) - 0))))), min(4, 4)));
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     break;
     case 71:
     ;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     case 47:
     if(_GLF_DEAD(false))
      return;
     vec3(-280.479, -36.91, -27.83);
     if(_GLF_DEAD(false))
      {
       switch(_GLF_SWITCH(int(_GLF_ZERO(0.0, injectionSwitch.x))))
        {
         case 15:
         for(         uvec3(15128u, 7945u, 101355u);
 (true && true); injectionSwitch)
          {
           bvec2(true, false);
           mat4x3 _GLF_SWITCH_3_0v, _GLF_SWITCH_3_1v;
           uvec2 _GLF_SWITCH_3_2v[58], _GLF_SWITCH_3_3v[68], _GLF_SWITCH_3_4v[80];
           mat3x4 _GLF_SWITCH_3_5v, _GLF_SWITCH_3_6v, _GLF_SWITCH_3_7v;
           mat3x4 _GLF_SWITCH_3_8v[26];
           uvec3 _GLF_SWITCH_3_9v, _GLF_SWITCH_3_10v, _GLF_SWITCH_3_11v;
          }
         case 0:
         case 94:
         if(_GLF_DEAD(false))
          return;
         if(_GLF_WRAPPED_IF_TRUE(true))
          {
           if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))
            return;
          }
         else
          {
          }
         if(_GLF_DEAD(false))
          barrier();
         case 55:
         barrier();
         case 20:
         if(_GLF_DEAD(false))
          barrier();
         break;
         default:
         1;
        }
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         return;
        }
       return;
      }
     default:
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         do
          {
           switch(_GLF_SWITCH(int(_GLF_ZERO(0.0, injectionSwitch.x))))
            {
             case 0:
             case 56:
             case 63:
             barrier();
             case 32:
             if(_GLF_DEAD(false))
              barrier();
             break;
             case 43:
             ivec3 _GLF_SWITCH_4_0v[7];
             case 36:
             ;
             default:
             1;
            }
          }
         while(_GLF_WRAPPED_LOOP(false));
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))))
        {
         switch(_GLF_SWITCH(0))
          {
           case 0:
           case 71:
           case 98:
           case 65:
           if(_GLF_WRAPPED_IF_FALSE(false))
            {
            }
           else
            {
             return;
            }
           case 35:
           if(_GLF_WRAPPED_IF_FALSE(false))
            {
            }
           else
            {
             if(_GLF_DEAD(false))
              return;
            }
           case 59:
           if(_GLF_DEAD(false))
            return;
           break;
           default:
           1;
          }
        }
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))).x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)).y, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)).y) - 0.0)))))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, float(mat2(injectionSwitch.y, 1.0, 0.0, 0.0))), _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))))))))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_WRAPPED_IF_FALSE(false))
          {
          }
         else
          {
           return;
          }
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         barrier();
        }
       if(_GLF_DEAD(false))
        return;
       return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
       if(_GLF_DEAD(false))
        return;
      }
     else
      {
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     for(int _injected_loop_counter = (0 & int(88850u)); _GLF_WRAPPED_LOOP(_injected_loop_counter < int(_GLF_ONE(1.0, injectionSwitch.y))); _injected_loop_counter ++)
      {
       1;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        continue;
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, false)), bool(bvec3(bool(bvec2(false, false)), false, true))))))
      return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     for(int _injected_loop_counter = (0 & 33438); _GLF_WRAPPED_LOOP(_injected_loop_counter < _GLF_IDENTITY(((1 ^ 0) & 1), 0 ^ (((1 ^ 0) & 1)))); _injected_loop_counter ++)
      {
       switch(_GLF_SWITCH(_GLF_IDENTITY(int(_GLF_ZERO(0.0, injectionSwitch.x)), ~ (~ (_GLF_IDENTITY(int(_GLF_ZERO(_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(3.5))), injectionSwitch.x)), max(int(_GLF_ZERO(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(893.919)), bool(_GLF_IDENTITY(false, false || (false))))), injectionSwitch.x)), _GLF_IDENTITY(int(_GLF_ZERO(0.0, injectionSwitch.x)), (false ? _GLF_FUZZED(31764) : int(_GLF_ZERO(0.0, injectionSwitch.x)))))))))))
        {
         case 33:
         if(_GLF_DEAD(false))
          continue;
         if(_GLF_DEAD(false))
          barrier();
         {
          (tanh(vec4(-309.048, -2.2, -35.15, -5.0)) / (vec4(126.025, -97.00, -2779.8547, 4301.7874) + -1910.9179));
          (mat3x2(-8.7, 480.813, -4.1, -775.943, -10.77, -3.6) - -823.359);
          if(_GLF_DEAD(false))
           break;
          bool _GLF_SWITCH_1_0v[82], _GLF_SWITCH_1_1v;
          if(_GLF_DEAD(false))
           barrier();
          if(_GLF_DEAD(false))
           {
            if(_GLF_DEAD(false))
             barrier();
            barrier();
           }
          (-48704 + ivec4(21587, -95465, 54827, 6997));
          uvec3(165554u, 181686u, 164741u);
          vec2 _GLF_SWITCH_1_2v;
          mat3x4 _GLF_SWITCH_1_3v, _GLF_SWITCH_1_4v;
          float _GLF_SWITCH_1_5v, _GLF_SWITCH_1_6v;
          bvec3 _GLF_SWITCH_1_7v;
          if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y))))))
           {
            if(_GLF_WRAPPED_IF_FALSE(false))
             {
             }
            else
             {
              barrier();
             }
           }
         }
         case 38:
         if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + 0.0) > injectionSwitch.y))))
            {
             if(_GLF_DEAD(false))
              barrier();
             break;
            }
           continue;
          }
         uvec3(116585u, 91446u, 117351u).zzz;
         if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(mat2(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), 1.0, 1.0, round(length(normalize(vec3(1.0, 1.0, 1.0)))))), (true ? _GLF_IDENTITY(float(mat2(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), 1.0, 1.0, round(length(normalize(vec3(1.0, 1.0, 1.0)))))), min(float(mat2(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), 1.0, 1.0, round(length(normalize(vec3(1.0, 1.0, 1.0)))))), float(mat2(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), 1.0, 1.0, round(length(normalize(vec3(1.0, 1.0, 1.0)))))))) : _GLF_FUZZED(-35.48)))) > injectionSwitch.y))))
          {
           if(_GLF_DEAD(false))
            barrier();
           break;
          }
         case 0:
         return;
         if(_GLF_DEAD(false))
          barrier();
         break;
         if(_GLF_DEAD(false))
          barrier();
         case 70:
         if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
          barrier();
         mat2x3 _GLF_SWITCH_1_8v, _GLF_SWITCH_1_9v, _GLF_SWITCH_1_10v[33];
         for(int _injected_loop_counter = (int(_GLF_ZERO(0.0, injectionSwitch.x)) ^ 0); _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
          {
           switch(_GLF_SWITCH(0))
            {
             case 0:
             if(_GLF_DEAD(false))
              barrier();
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              {
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(vec2(-0.7, 3.4)) : _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)))), injectionSwitch)).y))))
                continue;
               return;
              }
             if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, float(_GLF_IDENTITY(mat4(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(511.173)), bool(false))), 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0)), dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0))), abs(1.0), 0.0, 0.0, 0.0), transpose(_GLF_IDENTITY(transpose(mat4(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(511.173)), bool(false))), 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0)), dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0))), abs(1.0), 0.0, 0.0, 0.0)), (transpose(mat4(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(511.173)), bool(false))), 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0)), dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0))), abs(1.0), 0.0, 0.0, 0.0))) + mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)))))), min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, float(_GLF_IDENTITY(mat4(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(511.173)), bool(false))), 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0)), dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0))), abs(1.0), 0.0, 0.0, 0.0), transpose(_GLF_IDENTITY(transpose(mat4(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(511.173)), bool(false))), 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0)), dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0))), abs(1.0), 0.0, 0.0, 0.0)), (transpose(mat4(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(511.173)), bool(false))), 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0)), dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0))), abs(1.0), 0.0, 0.0, 0.0))) + mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)))))), mix(float(_GLF_IDENTITY(injectionSwitch.x, float(_GLF_IDENTITY(mat4(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(511.173)), bool(false))), 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0)), dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0))), abs(1.0), 0.0, 0.0, 0.0), transpose(_GLF_IDENTITY(transpose(mat4(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(511.173)), bool(false))), 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0)), dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0))), abs(1.0), 0.0, 0.0, 0.0)), (transpose(mat4(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(511.173)), bool(false))), 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0)), dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0))), abs(1.0), 0.0, 0.0, 0.0))) + mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))))))), float(_GLF_FUZZED(7.5)), bool(false))), _GLF_IDENTITY(injectionSwitch.x, float(_GLF_IDENTITY(mat4(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(511.173)), bool(false))), 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0)), dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0))), abs(1.0), 0.0, 0.0, 0.0), transpose(_GLF_IDENTITY(transpose(mat4(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(511.173)), bool(false))), 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0)), dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0))), abs(1.0), 0.0, 0.0, 0.0)), (transpose(mat4(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(511.173)), bool(false))), 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0)), dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0))), abs(1.0), 0.0, 0.0, 0.0))) + mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)))))))) > injectionSwitch.y))))
              barrier();
             case 9:
             case 31:
             if(_GLF_DEAD(false))
              barrier();
             break;
             case 1:
             ivec4(54266, 33645, 93567, -43286);
             case 8:
             (true ? mat4(349.173, -1020.6937, -3283.1980, -94.41, -651.135, 28.94, 2.3, -3656.8479, 5907.5968, 44.11, 2.7, 4.9, -9.6, -206.583, 78.92, -63.97) : mat4(588.853, 4.2, -60.27, 36.30, -29.12, 5488.2874, 1502.1006, -7704.5337, -6.9, -1.3, _GLF_IDENTITY(9492.0746, clamp(9492.0746, 9492.0746, 9492.0746)), -3.2, -4662.3969, 8558.8702, -3345.0951, 8.5));
             default:
             1;
            }
          }
         if(_GLF_DEAD(false))
          barrier();
         case 61:
         do
          {
           if(_GLF_DEAD(false))
            continue;
           if(_GLF_DEAD(false))
            break;
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            return;
          }
         while(_GLF_WRAPPED_LOOP(false));
         mat4x2 _GLF_SWITCH_1_11v[28];
         if(_GLF_DEAD(false))
          {
           switch(_GLF_SWITCH(_GLF_IDENTITY(0, (_GLF_IDENTITY(0, 0 | (0))) / 1)))
            {
             case 48:
             mat3(431.867, -4.4, 5126.5529, -464.031, -3.1, 773.448, -64.16, -12.10, 31.19);
             case 77:
             ivec3 _GLF_SWITCH_3_0v, _GLF_SWITCH_3_1v, _GLF_SWITCH_3_2v[45];
             case 0:
             if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-113.561), _GLF_FUZZED((+ -75.92))), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))).x > injectionSwitch.y))))
              barrier();
             case 9:
             case 79:
             case 46:
             do
              {
               return;
              }
             while(_GLF_WRAPPED_LOOP(false));
             break;
             default:
             1;
            }
          }
         default:
         _GLF_IDENTITY(1, (_GLF_IDENTITY(1, 0 ^ (1))) | 0);
        }
      }
    }
  }
 if(_GLF_WRAPPED_IF_FALSE(false))
  {
  }
 else
  {
   if(_GLF_DEAD(false))
    return;
  }
}
