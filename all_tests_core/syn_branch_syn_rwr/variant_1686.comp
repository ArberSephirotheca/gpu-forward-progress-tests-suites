#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(false))
    barrier();
  }
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, abs(vec2(1.0, 1.0)) * (injectionSwitch)).x, float(mat2x4(_GLF_IDENTITY(injectionSwitch, abs(vec2(1.0, 1.0)) * (injectionSwitch)).x, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0))) > _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], (_GLF_IDENTITY(injectionSwitch[0], clamp(injectionSwitch[0], injectionSwitch[0], injectionSwitch[0]))) + 0.0), _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0))))[1])).y))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  barrier();
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x)) > injectionSwitch.y))))
      return;
     return;
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true)))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
    return;
   if(_GLF_DEAD(false))
    return;
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     return;
    }
  }
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY((_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || false, ! (! (_GLF_IDENTITY((_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || false, ! (! ((_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || false))))))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (_GLF_IDENTITY(! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true && (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
  }
 uint num_workgroup = _GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, uvec3(uvec3(gl_NumWorkGroups))), (false ? _GLF_FUZZED(uvec3(117567u, 132216u, 160883u)) : _GLF_IDENTITY(gl_NumWorkGroups, uvec3(uvec3(gl_NumWorkGroups))))).x;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
      return;
     if(_GLF_DEAD(false))
      return;
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         return;
        }
       barrier();
      }
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
    }
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     barrier();
    }
   if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec4(false, true, true, true)))) && true)))
  return;
 uint workgroup_size = gl_WorkGroupSize.x;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, false || (false))))))
      return;
     return;
    }
   if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), true, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         return;
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     return;
    }
   return;
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(8.4), _GLF_FUZZED((9909.4820 * 819.281))), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))).y))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint workgroup_id = gl_WorkGroupID.x;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), true, true, false))))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     return;
    }
   return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, ! (! (false)))))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   return;
  }
 uint workgroup_base = _GLF_IDENTITY(workgroup_size * workgroup_id, uint(uvec3(_GLF_IDENTITY(workgroup_size * workgroup_id, (_GLF_IDENTITY(workgroup_size * workgroup_id, (workgroup_size * workgroup_id) | 0u)) | (workgroup_size * workgroup_id)), 0u, ((1u << _GLF_IDENTITY(uint(2u), uint(2u))) >> _GLF_IDENTITY(uint(2u), uint(2u))))));
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
  {
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        return;
       return;
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 uint virtual_gid = workgroup_base + _GLF_IDENTITY(subgroup_id, (subgroup_id) * 1u) * subgroup_size + subgroup_local_id;
 uint next_virtual_gid = _GLF_IDENTITY(workgroup_base, min(_GLF_IDENTITY(workgroup_base, _GLF_IDENTITY((workgroup_base), 0u + (_GLF_IDENTITY((workgroup_base), ((workgroup_base)) ^ 0u))) / 1u), workgroup_base)) + _GLF_IDENTITY(subgroup_id * subgroup_size, min(subgroup_id * subgroup_size, subgroup_id * subgroup_size)) + _GLF_IDENTITY(((_GLF_IDENTITY(subgroup_local_id + 1, _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(_GLF_IDENTITY(1, 0 ^ (_GLF_IDENTITY(1, _GLF_IDENTITY(0, (0) / int(_GLF_ONE(1.0, injectionSwitch.y))) | (_GLF_IDENTITY(1, (1) << 0))))), 0 | (_GLF_IDENTITY(1, 0 ^ (_GLF_IDENTITY(1, _GLF_IDENTITY(0, (0) / int(_GLF_ONE(1.0, injectionSwitch.y))) | (_GLF_IDENTITY(1, (1) << 0))))))), uint(uvec2(subgroup_local_id + 1, 0u)))), (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, 0 ^ (_GLF_IDENTITY(1, _GLF_IDENTITY(0, (0) / int(_GLF_ONE(1.0, injectionSwitch.y))) | (1)))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(uint(uvec2(subgroup_local_id + 1, 0u)), 1u * (uint(uvec2(subgroup_local_id + 1, 0u)))), (_GLF_IDENTITY(uint(uvec2(subgroup_local_id + 1, 0u)), 1u * (uint(uvec2(subgroup_local_id + 1, 0u))))) | (_GLF_IDENTITY(uint(uvec2(subgroup_local_id + 1, 0u)), 1u * (uint(uvec2(subgroup_local_id + 1, 0u)))))), min(_GLF_IDENTITY(uint(uvec2(subgroup_local_id + 1, 0u)), 1u * (uint(uvec2(subgroup_local_id + 1, 0u)))), _GLF_IDENTITY(uint(uvec2(subgroup_local_id + 1, 0u)), 1u * (uint(uvec2(_GLF_IDENTITY(subgroup_local_id, min(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | (subgroup_local_id)), _GLF_IDENTITY(subgroup_local_id, 0u | (subgroup_local_id)))) + 1, 0u)))))))), min((_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, 0 ^ (_GLF_IDENTITY(1, _GLF_IDENTITY(_GLF_IDENTITY(0, (0) / int(_GLF_ONE(1.0, injectionSwitch.y))), (_GLF_IDENTITY(_GLF_IDENTITY(0, (0) / _GLF_IDENTITY(int(_GLF_ONE(1.0, injectionSwitch.y)), clamp(_GLF_IDENTITY(int(_GLF_ONE(1.0, injectionSwitch.y)), (true ? _GLF_IDENTITY(int(_GLF_ONE(1.0, injectionSwitch.y)), int(ivec2(int(_GLF_ONE(1.0, injectionSwitch.y)), 1))) : _GLF_FUZZED(-87939))), int(_GLF_ONE(1.0, injectionSwitch.y)), int(_GLF_ONE(1.0, injectionSwitch.y))))), int(ivec3(_GLF_IDENTITY(_GLF_IDENTITY(0, (0) / int(_GLF_ONE(1.0, injectionSwitch.y))), (_GLF_IDENTITY(0, _GLF_IDENTITY((0) / int(_GLF_ONE(1.0, injectionSwitch.y)), ((0) / int(_GLF_ONE(1.0, injectionSwitch.y))) >> 0))) / 1), 0, 1)))) | (_GLF_IDENTITY(0, (0) / int(_GLF_ONE(1.0, injectionSwitch.y))))) | (1)))), _GLF_IDENTITY(uint(uvec2(subgroup_local_id + 1, 0u)), 1u * (uint(uvec2(subgroup_local_id + 1, 0u)))))), (_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, 0 ^ (_GLF_IDENTITY(1, _GLF_IDENTITY(0, (0) / int(_GLF_ONE(1.0, injectionSwitch.y))) | (1)))), _GLF_IDENTITY(uint(uvec2(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | 0u) + 1, 0u)), 1u * (uint(uvec2(subgroup_local_id + 1, 0u)))))))), (true ? _GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, 0 ^ (_GLF_IDENTITY(1, _GLF_IDENTITY(0, (0) / int(_GLF_ONE(1.0, injectionSwitch.y))) | (1)))), _GLF_IDENTITY(uint(uvec2(subgroup_local_id + 1, 0u)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(workgroup_id) : uint(uvec2(subgroup_local_id + 1, 0u)))))), min((_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, 0 ^ (_GLF_IDENTITY(1, _GLF_IDENTITY(0, (0) / int(_GLF_ONE(1.0, injectionSwitch.y))) | (1)))), uint(uvec2(subgroup_local_id + 1, 0u)))), (_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, 0 ^ (_GLF_IDENTITY(1, _GLF_IDENTITY(0, (0) / int(_GLF_IDENTITY(_GLF_ONE(_GLF_IDENTITY(1.0, max(1.0, 1.0)), injectionSwitch.y), mix(float(_GLF_FUZZED(-2.7)), float(_GLF_ONE(_GLF_IDENTITY(1.0, max(1.0, 1.0)), injectionSwitch.y)), bool(true))))) | (_GLF_IDENTITY(1, (1) + 0))))), uint(_GLF_IDENTITY(uvec2(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) + 0u) + 1, 0u), ~ (~ (_GLF_IDENTITY(uvec2(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) + 0u) + 1, 0u), clamp(uvec2(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) + 0u) + 1, 0u), uvec2(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) + 0u) + 1, 0u), uvec2(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) + 0u) + 1, 0u))))))))))) : _GLF_FUZZED(subgroup_id)))) * 1u) | 0u, clamp(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, 0 ^ (_GLF_IDENTITY(1, _GLF_IDENTITY(0, (0) / int(_GLF_ONE(1.0, injectionSwitch.y))) | (_GLF_IDENTITY(1, (1) << 0))))), uint(uvec2(subgroup_local_id + 1, 0u)))), (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, 0 ^ (_GLF_IDENTITY(1, _GLF_IDENTITY(0, (0) / int(_GLF_ONE(1.0, injectionSwitch.y))) | (1)))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(uint(uvec2(subgroup_local_id + 1, 0u)), 1u * (uint(uvec2(subgroup_local_id + 1, 0u)))), (_GLF_IDENTITY(uint(uvec2(subgroup_local_id + 1, 0u)), 1u * (uint(uvec2(subgroup_local_id + 1, 0u))))) | (_GLF_IDENTITY(uint(uvec2(subgroup_local_id + 1, _GLF_IDENTITY(0u, (0u) | (0u)))), 1u * (uint(uvec2(subgroup_local_id + 1, 0u)))))), min(_GLF_IDENTITY(uint(uvec2(subgroup_local_id + 1, _GLF_IDENTITY(0u, (0u) ^ 0u))), 1u * (uint(uvec2(subgroup_local_id + 1, 0u)))), _GLF_IDENTITY(uint(uvec2(subgroup_local_id + 1, _GLF_IDENTITY(0u, 0u ^ (0u)))), 1u * (uint(uvec2(subgroup_local_id + 1, 0u)))))))), min((_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, 0 ^ (_GLF_IDENTITY(1, _GLF_IDENTITY(_GLF_IDENTITY(0, (0) / int(_GLF_ONE(1.0, injectionSwitch.y))), (_GLF_IDENTITY(_GLF_IDENTITY(0, (0) / int(_GLF_ONE(1.0, injectionSwitch.y))), int(ivec3(_GLF_IDENTITY(_GLF_IDENTITY(0, (0) / int(_GLF_ONE(1.0, injectionSwitch.y))), (_GLF_IDENTITY(0, (0) / int(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-519.223)), float(injectionSwitch.y), bool(true))))))) / 1), 0, 1)))) | (_GLF_IDENTITY(0, (0) / int(_GLF_ONE(1.0, injectionSwitch.y))))) | (1)))), _GLF_IDENTITY(uint(uvec2(subgroup_local_id + 1, 0u)), 1u * (uint(uvec2(subgroup_local_id + 1, 0u)))))), (_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, 0 ^ (_GLF_IDENTITY(1, _GLF_IDENTITY(0, (0) / int(_GLF_ONE(1.0, injectionSwitch.y))) | (1)))), _GLF_IDENTITY(uint(uvec2(subgroup_local_id + 1, 0u)), _GLF_IDENTITY(1u * (uint(uvec2(subgroup_local_id + 1, 0u))), uint(uint(1u * (uint(uvec2(subgroup_local_id + 1, 0u))))))))))), (true ? _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, 0 ^ (_GLF_IDENTITY(1, _GLF_IDENTITY(0, (0) / int(_GLF_ONE(1.0, injectionSwitch.y))) | (1)))), uint(uvec2(subgroup_local_id + 1, 0u)))), ((_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, 0 ^ (_GLF_IDENTITY(1, _GLF_IDENTITY(0, (0) / int(_GLF_ONE(1.0, injectionSwitch.y))) | (1)))), uint(uvec2(subgroup_local_id + 1, 0u))))) + 0u), min((_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, 0 ^ (_GLF_IDENTITY(1, _GLF_IDENTITY(0, (0) / int(_GLF_ONE(1.0, injectionSwitch.y))) | (1)))), uint(uvec2(subgroup_local_id + 1, 0u)))), (_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(_GLF_IDENTITY(1, 0 ^ (_GLF_IDENTITY(1, _GLF_IDENTITY(0, (0) / int(_GLF_ONE(_GLF_IDENTITY(1.0, max(1.0, 1.0)), injectionSwitch.y))) | (_GLF_IDENTITY(1, (1) + 0))))), max(_GLF_IDENTITY(1, 0 ^ (_GLF_IDENTITY(1, _GLF_IDENTITY(0, (0) / int(_GLF_ONE(_GLF_IDENTITY(1.0, max(1.0, 1.0)), injectionSwitch.y))) | (_GLF_IDENTITY(1, (1) + 0))))), _GLF_IDENTITY(1, 0 ^ (_GLF_IDENTITY(1, _GLF_IDENTITY(0, (0) / int(_GLF_ONE(_GLF_IDENTITY(1.0, max(1.0, 1.0)), injectionSwitch.y))) | (_GLF_IDENTITY(1, (1) + 0))))))), uint(uvec2(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) + 0u) + 1, 0u)))))) : _GLF_FUZZED(subgroup_id)))) * 1u) | 0u, (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, 0 ^ (_GLF_IDENTITY(1, _GLF_IDENTITY(0, _GLF_IDENTITY((0) / int(_GLF_ONE(1.0, injectionSwitch.y)), max((0) / int(_GLF_ONE(1.0, injectionSwitch.y)), (0) / int(_GLF_ONE(1.0, injectionSwitch.y))))) | (_GLF_IDENTITY(1, (1) << 0))))), uint(uvec2(subgroup_local_id + 1, 0u)))), (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, 0 ^ (_GLF_IDENTITY(1, _GLF_IDENTITY(0, (0) / int(_GLF_ONE(1.0, injectionSwitch.y))) | (1)))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(uint(uvec2(subgroup_local_id + 1, 0u)), 1u * (uint(uvec2(subgroup_local_id + 1, 0u)))), (_GLF_IDENTITY(uint(uvec2(subgroup_local_id + 1, 0u)), 1u * (uint(uvec2(subgroup_local_id + 1, 0u))))) | (_GLF_IDENTITY(uint(uvec2(subgroup_local_id + 1, 0u)), 1u * (uint(uvec2(_GLF_IDENTITY(subgroup_local_id, uint(uvec2(subgroup_local_id, 1u))) + 1, 0u)))))), min(_GLF_IDENTITY(uint(uvec2(subgroup_local_id + 1, 0u)), 1u * (uint(uvec2(subgroup_local_id + 1, 0u)))), _GLF_IDENTITY(uint(uvec2(subgroup_local_id + 1, 0u)), 1u * (uint(uvec2(subgroup_local_id + 1, 0u)))))))), min((_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, 0 ^ (_GLF_IDENTITY(1, _GLF_IDENTITY(_GLF_IDENTITY(0, (0) / int(_GLF_ONE(1.0, injectionSwitch.y))), (_GLF_IDENTITY(_GLF_IDENTITY(0, (0) / int(_GLF_ONE(1.0, injectionSwitch.y))), int(ivec3(_GLF_IDENTITY(_GLF_IDENTITY(0, (0) / int(_GLF_ONE(1.0, injectionSwitch.y))), (_GLF_IDENTITY(0, (0) / int(_GLF_ONE(1.0, injectionSwitch.y)))) / 1), 0, 1)))) | (_GLF_IDENTITY(0, (0) / int(_GLF_ONE(1.0, injectionSwitch.y))))) | (1)))), _GLF_IDENTITY(uint(uvec2(subgroup_local_id + 1, 0u)), 1u * (uint(uvec2(subgroup_local_id + 1, 0u)))))), (_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, 0 ^ (_GLF_IDENTITY(1, _GLF_IDENTITY(0, (0) / _GLF_IDENTITY(int(_GLF_ONE(1.0, injectionSwitch.y)), clamp(int(_GLF_ONE(1.0, injectionSwitch.y)), int(_GLF_ONE(1.0, injectionSwitch.y)), int(_GLF_ONE(1.0, injectionSwitch.y))))) | (1)))), _GLF_IDENTITY(uint(uvec2(subgroup_local_id + 1, 0u)), 1u * (uint(uvec2(subgroup_local_id + 1, 0u)))))))), (true ? _GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, 0 ^ (_GLF_IDENTITY(1, _GLF_IDENTITY(0, (0) / int(_GLF_ONE(1.0, injectionSwitch.y))) | (1)))), uint(uvec2(subgroup_local_id + 1, 0u)))), min((_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, 0 ^ (_GLF_IDENTITY(1, _GLF_IDENTITY(0, (0) / int(_GLF_ONE(1.0, injectionSwitch.y))) | (1)))), uint(uvec2(subgroup_local_id + 1, 0u)))), (_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, _GLF_IDENTITY(0, (0) >> 0) ^ (_GLF_IDENTITY(1, _GLF_IDENTITY(0, (0) / int(_GLF_ONE(_GLF_IDENTITY(1.0, max(1.0, 1.0)), injectionSwitch.y))) | (_GLF_IDENTITY(1, (1) + 0))))), uint(uvec2(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) + 0u) + 1, 0u)))))) : _GLF_FUZZED(subgroup_id)))) * 1u) | 0u) | 0u), _GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, 0 ^ (_GLF_IDENTITY(1, _GLF_IDENTITY(0, (0) / int(_GLF_ONE(1.0, injectionSwitch.y))) | (_GLF_IDENTITY(1, (1) << 0))))), uint(uvec2(subgroup_local_id + 1, 0u)))), (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, 0 ^ (_GLF_IDENTITY(1, _GLF_IDENTITY(0, (0) / int(_GLF_ONE(1.0, injectionSwitch.y))) | (1)))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(uint(uvec2(subgroup_local_id + 1, _GLF_IDENTITY(0u, (true ? _GLF_IDENTITY(0u, (0u) / 1u) : _GLF_FUZZED(workgroup_size))))), 1u * (uint(uvec2(subgroup_local_id + 1, 0u)))), (_GLF_IDENTITY(uint(uvec2(subgroup_local_id + 1, 0u)), 1u * (uint(uvec2(subgroup_local_id + 1, 0u))))) | (_GLF_IDENTITY(uint(uvec2(subgroup_local_id + 1, 0u)), 1u * (uint(uvec2(subgroup_local_id + _GLF_IDENTITY(1, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? 1 : _GLF_FUZZED(95))), 0u)))))), min(_GLF_IDENTITY(uint(uvec2(subgroup_local_id + 1, 0u)), 1u * _GLF_IDENTITY((uint(uvec2(subgroup_local_id + 1, 0u))), ~ (~ ((uint(uvec2(subgroup_local_id + 1, 0u))))))), _GLF_IDENTITY(uint(uvec2(_GLF_IDENTITY(subgroup_local_id + 1, clamp(subgroup_local_id + 1, _GLF_IDENTITY(subgroup_local_id + 1, (false ? _GLF_FUZZED(workgroup_size) : subgroup_local_id + 1)), subgroup_local_id + 1)), 0u)), 1u * (uint(uvec2(subgroup_local_id + 1, 0u)))))))), min((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, 0 ^ (_GLF_IDENTITY(1, _GLF_IDENTITY(_GLF_IDENTITY(0, (0) / int(_GLF_ONE(1.0, injectionSwitch.y))), (_GLF_IDENTITY(_GLF_IDENTITY(0, (0) / int(_GLF_ONE(1.0, injectionSwitch.y))), int(ivec3(_GLF_IDENTITY(_GLF_IDENTITY(0, (0) / int(_GLF_ONE(1.0, injectionSwitch.y))), (_GLF_IDENTITY(0, (0) / int(_GLF_ONE(1.0, injectionSwitch.y)))) / 1), 0, 1)))) | (_GLF_IDENTITY(0, (0) / int(_GLF_ONE(1.0, injectionSwitch.y))))) | (1)))), _GLF_IDENTITY(uint(uvec2(subgroup_local_id + 1, 0u)), 1u * (uint(uvec2(subgroup_local_id + 1, 0u))))), (_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, 0 ^ (_GLF_IDENTITY(1, _GLF_IDENTITY(_GLF_IDENTITY(0, (0) / int(_GLF_ONE(1.0, injectionSwitch.y))), (_GLF_IDENTITY(_GLF_IDENTITY(0, (0) / int(_GLF_ONE(1.0, injectionSwitch.y))), int(ivec3(_GLF_IDENTITY(_GLF_IDENTITY(0, (0) / int(_GLF_ONE(1.0, injectionSwitch.y))), (_GLF_IDENTITY(0, (0) / int(_GLF_ONE(1.0, injectionSwitch.y)))) / 1), 0, 1)))) | (_GLF_IDENTITY(0, (0) / int(_GLF_ONE(1.0, injectionSwitch.y))))) | (1)))), _GLF_IDENTITY(uint(uvec2(subgroup_local_id + 1, 0u)), 1u * (uint(uvec2(subgroup_local_id + 1, 0u)))))) | (_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, 0 ^ (_GLF_IDENTITY(1, _GLF_IDENTITY(_GLF_IDENTITY(0, (0) / int(_GLF_ONE(1.0, injectionSwitch.y))), (_GLF_IDENTITY(_GLF_IDENTITY(0, (0) / int(_GLF_ONE(1.0, injectionSwitch.y))), int(ivec3(_GLF_IDENTITY(_GLF_IDENTITY(0, (0) / int(_GLF_ONE(1.0, injectionSwitch.y))), (_GLF_IDENTITY(0, (0) / int(_GLF_ONE(1.0, injectionSwitch.y)))) / 1), 0, 1)))) | (_GLF_IDENTITY(0, (0) / int(_GLF_ONE(1.0, injectionSwitch.y))))) | (1)))), _GLF_IDENTITY(uint(uvec2(subgroup_local_id + 1, 0u)), 1u * (uint(uvec2(subgroup_local_id + 1, 0u)))))))), (_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, 0 ^ (_GLF_IDENTITY(1, _GLF_IDENTITY(0, (0) / int(_GLF_ONE(1.0, injectionSwitch.y))) | (1)))), _GLF_IDENTITY(uint(uvec2(subgroup_local_id + 1, 0u)), 1u * (uint(uvec2(subgroup_local_id + 1, 0u)))))))), (true ? _GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, 0 ^ (_GLF_IDENTITY(1, _GLF_IDENTITY(0, (0) / int(_GLF_ONE(1.0, injectionSwitch.y))) | (1)))), uint(uvec2(subgroup_local_id + 1, 0u)))), min((_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, 0 ^ (_GLF_IDENTITY(1, _GLF_IDENTITY(0, _GLF_IDENTITY((0), (_GLF_IDENTITY((0), max((0), (0)))) >> 0) / int(_GLF_ONE(1.0, injectionSwitch.y))) | (1)))), uint(uvec2(subgroup_local_id + 1, 0u)))), (_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, 0 ^ (_GLF_IDENTITY(1, _GLF_IDENTITY(0, (0) / int(_GLF_ONE(_GLF_IDENTITY(1.0, max(1.0, 1.0)), injectionSwitch.y))) | (_GLF_IDENTITY(1, (1) + 0))))), uint(uvec2(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) + 0u) + 1, 0u)))))) : _GLF_FUZZED(subgroup_id)))) * 1u) | 0u, _GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, 0 ^ (_GLF_IDENTITY(_GLF_IDENTITY(1, _GLF_IDENTITY(0, (0) / int(_GLF_ONE(1.0, injectionSwitch.y))) | (_GLF_IDENTITY(1, (1) << 0))), clamp(_GLF_IDENTITY(1, _GLF_IDENTITY(0, (0) / int(_GLF_ONE(1.0, injectionSwitch.y))) | (_GLF_IDENTITY(1, (1) << 0))), _GLF_IDENTITY(1, _GLF_IDENTITY(0, (0) / int(_GLF_ONE(1.0, injectionSwitch.y))) | (_GLF_IDENTITY(1, (1) << 0))), _GLF_IDENTITY(1, _GLF_IDENTITY(0, (0) / int(_GLF_ONE(1.0, injectionSwitch.y))) | (_GLF_IDENTITY(1, (1) << 0))))))), uint(uvec2(subgroup_local_id + 1, 0u)))), (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, 0 ^ (_GLF_IDENTITY(1, _GLF_IDENTITY(0, (0) / int(_GLF_ONE(1.0, injectionSwitch.y))) | (1)))), ~ (~ (_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, 0 ^ (_GLF_IDENTITY(1, _GLF_IDENTITY(0, (0) / int(_GLF_ONE(1.0, injectionSwitch.y))) | (1)))), (subgroup_local_id + _GLF_IDENTITY(1, 0 ^ (_GLF_IDENTITY(1, _GLF_IDENTITY(0, (0) / int(_GLF_ONE(1.0, injectionSwitch.y))) | (1))))) / 1u)))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(uint(uvec2(subgroup_local_id + 1, 0u)), 1u * (uint(uvec2(subgroup_local_id + 1, 0u)))), (_GLF_IDENTITY(uint(uvec2(subgroup_local_id + 1, 0u)), 1u * (uint(uvec2(subgroup_local_id + 1, 0u))))) | (_GLF_IDENTITY(uint(uvec2(subgroup_local_id + 1, 0u)), 1u * (uint(uvec2(subgroup_local_id + 1, 0u)))))), min(_GLF_IDENTITY(uint(uvec2(subgroup_local_id + 1, 0u)), 1u * (uint(uvec2(subgroup_local_id + 1, 0u)))), _GLF_IDENTITY(uint(uvec2(_GLF_IDENTITY(subgroup_local_id, min(subgroup_local_id, subgroup_local_id)) + 1, 0u)), 1u * (uint(uvec2(subgroup_local_id + 1, 0u)))))))), min((_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, 0 ^ (_GLF_IDENTITY(1, _GLF_IDENTITY(_GLF_IDENTITY(0, (0) / int(_GLF_ONE(1.0, injectionSwitch.y))), (_GLF_IDENTITY(_GLF_IDENTITY(0, (0) / int(_GLF_ONE(1.0, injectionSwitch.y))), _GLF_IDENTITY(int(ivec3(_GLF_IDENTITY(_GLF_IDENTITY(0, (0) / int(_GLF_ONE(1.0, injectionSwitch.y))), (_GLF_IDENTITY(0, (0) / int(_GLF_ONE(1.0, injectionSwitch.y)))) / 1), _GLF_IDENTITY(0, (_GLF_IDENTITY(0, clamp(0, 0, 0))) ^ 0), 1)), clamp(int(ivec3(_GLF_IDENTITY(_GLF_IDENTITY(0, (0) / int(_GLF_ONE(1.0, injectionSwitch.y))), (_GLF_IDENTITY(0, (0) / int(_GLF_ONE(1.0, injectionSwitch.y)))) / 1), _GLF_IDENTITY(0, (_GLF_IDENTITY(0, clamp(0, 0, 0))) ^ 0), 1)), int(ivec3(_GLF_IDENTITY(_GLF_IDENTITY(0, (0) / int(_GLF_ONE(1.0, injectionSwitch.y))), (_GLF_IDENTITY(0, (0) / int(_GLF_ONE(1.0, injectionSwitch.y)))) / 1), _GLF_IDENTITY(0, (_GLF_IDENTITY(0, clamp(0, 0, 0))) ^ 0), 1)), _GLF_IDENTITY(int(ivec3(_GLF_IDENTITY(_GLF_IDENTITY(0, (0) / int(_GLF_ONE(1.0, injectionSwitch.y))), (_GLF_IDENTITY(0, (0) / int(_GLF_ONE(1.0, injectionSwitch.y)))) / 1), _GLF_IDENTITY(0, (_GLF_IDENTITY(0, clamp(0, 0, 0))) ^ 0), 1)), (int(ivec3(_GLF_IDENTITY(_GLF_IDENTITY(0, (0) / int(_GLF_ONE(1.0, injectionSwitch.y))), (_GLF_IDENTITY(0, (0) / int(_GLF_ONE(1.0, injectionSwitch.y)))) / 1), _GLF_IDENTITY(0, (_GLF_IDENTITY(0, clamp(0, 0, 0))) ^ 0), 1))) ^ 0))))) | (_GLF_IDENTITY(0, (0) / int(_GLF_ONE(1.0, injectionSwitch.y))))) | (1)))), _GLF_IDENTITY(uint(uvec2(subgroup_local_id + 1, 0u)), 1u * (uint(uvec2(subgroup_local_id + 1, 0u)))))), (_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, 0 ^ (_GLF_IDENTITY(1, _GLF_IDENTITY(0, (0) / int(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0)))) | (1)))), _GLF_IDENTITY(uint(uvec2(subgroup_local_id + 1, 0u)), 1u * (uint(uvec2(subgroup_local_id + 1, 0u)))))))), (true ? _GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, 0 ^ (_GLF_IDENTITY(1, _GLF_IDENTITY(0, (0) / int(_GLF_ONE(1.0, injectionSwitch.y))) | (1)))), uint(uvec2(subgroup_local_id + 1, 0u)))), min((_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, 0 ^ (_GLF_IDENTITY(1, _GLF_IDENTITY(0, (0) / int(_GLF_ONE(1.0, injectionSwitch.y))) | (1)))), uint(uvec2(subgroup_local_id + 1, 0u)))), (_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, 0 ^ (_GLF_IDENTITY(1, _GLF_IDENTITY(0, (0) / int(_GLF_ONE(_GLF_IDENTITY(1.0, max(1.0, 1.0)), injectionSwitch.y))) | (_GLF_IDENTITY(1, (1) + 0))))), uint(uvec2(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) + 0u) + 1, 0u)))))) : _GLF_FUZZED(subgroup_id)))) * 1u) | 0u)))) % subgroup_size), (((_GLF_IDENTITY(subgroup_local_id + 1, _GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, 0 ^ (_GLF_IDENTITY(_GLF_IDENTITY(1, (0 >> _GLF_IDENTITY(int(7), int(7))) + (1)), _GLF_IDENTITY(0, (0) / int(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y))) | (_GLF_IDENTITY(1, (1) << 0))))), uint(uvec2(subgroup_local_id + 1, 0u)))), (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(_GLF_IDENTITY(1, 0 | (1)), 0 ^ (_GLF_IDENTITY(1, _GLF_IDENTITY(0, (0) / int(_GLF_ONE(1.0, injectionSwitch.y))) | (1)))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(uint(uvec2(subgroup_local_id + 1, 0u)), 1u * (uint(uvec2(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | (subgroup_local_id)) + 1, 0u)))), (_GLF_IDENTITY(uint(uvec2(subgroup_local_id + _GLF_IDENTITY(1, (_GLF_IDENTITY(1, min(1, 1))) - 0), 0u)), 1u * _GLF_IDENTITY((_GLF_IDENTITY(uint(uvec2(subgroup_local_id + 1, 0u)), clamp(uint(uvec2(subgroup_local_id + 1, 0u)), uint(uvec2(subgroup_local_id + 1, 0u)), _GLF_IDENTITY(uint(uvec2(subgroup_local_id + 1, 0u)), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? uint(uvec2(subgroup_local_id + 1, 0u)) : _GLF_FUZZED(num_workgroup)))))), ~ (~ ((_GLF_IDENTITY(uint(uvec2(subgroup_local_id + 1, 0u)), clamp(uint(uvec2(subgroup_local_id + 1, 0u)), uint(uvec2(subgroup_local_id + 1, 0u)), uint(_GLF_IDENTITY(uvec2(subgroup_local_id + 1, 0u), uvec2(0u, 0u) + (uvec2(subgroup_local_id + 1, 0u)))))))))))) | (_GLF_IDENTITY(uint(uvec2(subgroup_local_id + 1, 0u)), 1u * (uint(uvec2(subgroup_local_id + 1, 0u)))))), min(_GLF_IDENTITY(uint(uvec2(subgroup_local_id + 1, 0u)), 1u * (uint(uvec2(_GLF_IDENTITY(subgroup_local_id + 1, (_GLF_IDENTITY(subgroup_local_id + 1, min(subgroup_local_id + 1, subgroup_local_id + 1))) ^ 0u), 0u)))), _GLF_IDENTITY(uint(uvec2(subgroup_local_id + 1, 0u)), 1u * (uint(uvec2(_GLF_IDENTITY(subgroup_local_id, uint(uvec3(subgroup_local_id, 0u, 1u))) + 1, 0u)))))))), min((_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, 0 ^ (_GLF_IDENTITY(1, _GLF_IDENTITY(_GLF_IDENTITY(0, (0) / int(_GLF_ONE(1.0, injectionSwitch.y))), (_GLF_IDENTITY(_GLF_IDENTITY(0, (0) / int(_GLF_ONE(1.0, injectionSwitch.y))), int(ivec3(_GLF_IDENTITY(_GLF_IDENTITY(0, (0) / int(_GLF_ONE(1.0, injectionSwitch.y))), (_GLF_IDENTITY(0, (0) / int(_GLF_ONE(1.0, injectionSwitch.y)))) / 1), 0, 1)))) | (_GLF_IDENTITY(0, (0) / int(_GLF_ONE(1.0, injectionSwitch.y))))) | (1)))), _GLF_IDENTITY(uint(uvec2(_GLF_IDENTITY(subgroup_local_id, 0u + (subgroup_local_id)) + 1, 0u)), 1u * _GLF_IDENTITY((uint(uvec2(subgroup_local_id + 1, 0u))), (_GLF_IDENTITY((uint(uvec2(subgroup_local_id + 1, 0u))), ((uint(uvec2(subgroup_local_id + 1, 0u)))) * 1u)) ^ 0u)))), (_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, 0 ^ (_GLF_IDENTITY(1, _GLF_IDENTITY(0, (0) / int(_GLF_ONE(1.0, injectionSwitch.y))) | (1)))), _GLF_IDENTITY(uint(uvec2(subgroup_local_id + 1, 0u)), 1u * (uint(uvec2(subgroup_local_id + 1, 0u)))))))), _GLF_IDENTITY((true ? _GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, 0 ^ (_GLF_IDENTITY(1, _GLF_IDENTITY(0, (0) / int(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y))))) | (1)))), uint(uvec2(subgroup_local_id + 1, 0u)))), min((_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, 0 ^ (_GLF_IDENTITY(1, _GLF_IDENTITY(0, (0) / int(_GLF_ONE(1.0, injectionSwitch.y))) | (1)))), uint(uvec2(subgroup_local_id + 1, 0u)))), (_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, 0 ^ _GLF_IDENTITY((_GLF_IDENTITY(1, _GLF_IDENTITY(0, (0) / int(_GLF_ONE(_GLF_IDENTITY(1.0, max(1.0, 1.0)), injectionSwitch.y))) | (_GLF_IDENTITY(1, (1) + 0)))), _GLF_IDENTITY(int(ivec4(_GLF_IDENTITY((_GLF_IDENTITY(1, _GLF_IDENTITY(0, (0) / int(_GLF_ONE(_GLF_IDENTITY(1.0, max(1.0, 1.0)), injectionSwitch.y))) | (_GLF_IDENTITY(1, (1) + 0)))), ((_GLF_IDENTITY(1, _GLF_IDENTITY(0, (0) / int(_GLF_ONE(_GLF_IDENTITY(1.0, max(1.0, 1.0)), injectionSwitch.y))) | (_GLF_IDENTITY(1, (1) + 0))))) - 0), 0, 0, 0)), clamp(int(ivec4(_GLF_IDENTITY((_GLF_IDENTITY(1, _GLF_IDENTITY(0, (0) / int(_GLF_ONE(_GLF_IDENTITY(1.0, max(1.0, 1.0)), injectionSwitch.y))) | (_GLF_IDENTITY(1, (1) + 0)))), ((_GLF_IDENTITY(1, _GLF_IDENTITY(0, (0) / int(_GLF_ONE(_GLF_IDENTITY(1.0, max(1.0, 1.0)), injectionSwitch.y))) | (_GLF_IDENTITY(1, (1) + 0))))) - 0), 0, 0, 0)), int(ivec4(_GLF_IDENTITY((_GLF_IDENTITY(1, _GLF_IDENTITY(0, (0) / int(_GLF_ONE(_GLF_IDENTITY(1.0, max(1.0, 1.0)), injectionSwitch.y))) | (_GLF_IDENTITY(1, (1) + 0)))), ((_GLF_IDENTITY(1, _GLF_IDENTITY(0, (0) / int(_GLF_ONE(_GLF_IDENTITY(1.0, max(1.0, 1.0)), injectionSwitch.y))) | (_GLF_IDENTITY(1, (1) + 0))))) - 0), 0, 0, 0)), int(ivec4(_GLF_IDENTITY((_GLF_IDENTITY(1, _GLF_IDENTITY(0, (0) / int(_GLF_ONE(_GLF_IDENTITY(1.0, max(1.0, 1.0)), injectionSwitch.y))) | (_GLF_IDENTITY(1, (1) + 0)))), ((_GLF_IDENTITY(1, _GLF_IDENTITY(0, (0) / int(_GLF_ONE(_GLF_IDENTITY(1.0, max(1.0, 1.0)), injectionSwitch.y))) | (_GLF_IDENTITY(1, (1) + 0))))) - 0), 0, 0, 0)))))), uint(uvec2(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) + 0u) + 1, 0u)))))) : _GLF_FUZZED(subgroup_id)), (false ? _GLF_FUZZED(197181u) : (true ? _GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, 0 ^ (_GLF_IDENTITY(1, _GLF_IDENTITY(_GLF_IDENTITY(0, (0) / int(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))))) | (1), max(_GLF_IDENTITY(0, (0) / int(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))))) | (1), _GLF_IDENTITY(0, (0) / int(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))))) | (1)))))), uint(_GLF_IDENTITY(uvec2(subgroup_local_id + 1, 0u), (uvec2(subgroup_local_id + 1, 0u)) ^ uvec2(0u, 0u))))), min((_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, 0 ^ (_GLF_IDENTITY(1, _GLF_IDENTITY(0, (0) / int(_GLF_ONE(1.0, injectionSwitch.y))) | (_GLF_IDENTITY(1, 0 ^ (1)))))), uint(uvec2(subgroup_local_id + 1, 0u)))), (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, 0 ^ (_GLF_IDENTITY(1, _GLF_IDENTITY(0, (0) / int(_GLF_ONE(_GLF_IDENTITY(1.0, max(1.0, 1.0)), injectionSwitch.y))) | (_GLF_IDENTITY(1, (1) + 0))))), uint(uvec2(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) + 0u) + 1, 0u))), (_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, 0 ^ (_GLF_IDENTITY(1, _GLF_IDENTITY(0, (0) / int(_GLF_ONE(_GLF_IDENTITY(1.0, max(1.0, 1.0)), injectionSwitch.y))) | (_GLF_IDENTITY(1, (1) + 0))))), uint(uvec2(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) + 0u) + 1, 0u)))) | (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, 0 ^ (_GLF_IDENTITY(1, _GLF_IDENTITY(0, (0) / int(_GLF_ONE(_GLF_IDENTITY(1.0, max(1.0, 1.0)), injectionSwitch.y))) | (_GLF_IDENTITY(1, (1) + 0))))), uint(uvec2(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) + 0u) + 1, 0u))), uint(uvec4(_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, 0 ^ (_GLF_IDENTITY(1, _GLF_IDENTITY(0, (0) / int(_GLF_ONE(_GLF_IDENTITY(1.0, max(1.0, 1.0)), injectionSwitch.y))) | (_GLF_IDENTITY(1, (1) + 0))))), uint(uvec2(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) + 0u) + 1, 0u))), 1u, 0u, 0u)))))))) : _GLF_FUZZED(subgroup_id)))))) * 1u) | 0u)) % subgroup_size)) - 0u);
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
        return;
       barrier();
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          return;
         barrier();
        }
       return;
       if(_GLF_DEAD(false))
        barrier();
      }
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, 0.0 + (injectionSwitch.y))) * 1.0)), float(_GLF_FUZZED(-6.0)), bool(false)))))))
    barrier();
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   barrier();
  }
 uint read_1 = atomicLoad(buf[virtual_gid], 4, 64, 0);
 if(_GLF_DEAD(false))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), (injectionSwitch) / vec2(1.0, 1.0)).y), _GLF_IDENTITY(! (! ((injectionSwitch.x > injectionSwitch.y))), (! (! ((injectionSwitch.x > injectionSwitch.y)))) && true)))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))))
      return;
     barrier();
    }
   return;
  }
 if(_GLF_DEAD(false))
  return;
 atomicStore(buf[next_virtual_gid], uint(read_1 + _GLF_IDENTITY(1, (_GLF_IDENTITY(1, clamp(1, 1, 1))) + 0)), 4, 64, 4);
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec4(false, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))), (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
        return;
       if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bool(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       return;
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, false || (false)), (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) && true)) || false), (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)))) && (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, true, false), bvec3(bvec3(bvec3(false, true, false))))))))
      barrier();
     return;
    }
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
  }
 uint read_2 = atomicLoad(buf[virtual_gid], 4, 64, 0);
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && _GLF_IDENTITY((false), ((false)) || false))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY((false), bool(bvec2((false), true))) && true)))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, true, true, false)))))
  {
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * sqrt(1.0))), ! (_GLF_IDENTITY(! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * sqrt(1.0)))), ! (! (! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * sqrt(1.0))))))))))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, ! (! (false)))))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))))))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   barrier();
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  return;
 if(subgroup_local_id + 1 < subgroup_size)
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, true, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(_GLF_ONE(1.0, injectionSwitch.y)), (true ? (injectionSwitch) * mat2(_GLF_ONE(1.0, injectionSwitch.y)) : _GLF_FUZZED(vec2(-822.909, 5944.3221))))).x > injectionSwitch.y)))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     return;
    }
   if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))), false, true, false))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) && true), (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY((_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y))))) || false, ((_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y))))) || false) && _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y)))))))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    return;
   int i = 0;
   atomicStore(buf[next_virtual_gid], uint(_GLF_IDENTITY(read_1 + 1 == read_2, (read_1 + 1 == read_2) && true)) + 1, _GLF_IDENTITY(4, (4) | 0), 64, 4);
   if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))
    return;
  }
 else
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        return;
       return;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         return;
        }
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), true, false, true))))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY((false), true && ((false))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec2(false, false)))))
      {
       if(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), ! (! (! (_GLF_DEAD(false))))))))
        {
         if(_GLF_DEAD(false))
          return;
         barrier();
         if(_GLF_DEAD(false))
          barrier();
        }
       if(_GLF_DEAD(false))
        return;
       return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          barrier();
         return;
        }
       if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, false, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (! (bool(bvec4(false, false, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))
        {
         if(_GLF_DEAD(false))
          return;
         return;
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
          return;
         return;
        }
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false)))))))
    return;
   atomicStore(buf[next_virtual_gid], uint(read_1 + 1 == read_2) + 1, 4, _GLF_IDENTITY(64, (_GLF_IDENTITY(64, max(64, 64))) + 0), _GLF_IDENTITY(4, int(ivec2(_GLF_IDENTITY(4, int(_GLF_IDENTITY(ivec2(4, 0), (ivec2(4, 0)) >> ivec2(0, 0)))), _GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(47370)))))));
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! (false))))))), ! (! (_GLF_DEAD(false)))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, false || (false)), (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(_GLF_IDENTITY(false, false || (false)), (injectionSwitch.x > injectionSwitch.y))))))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false)), false || (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), mix(vec2((mat2(1.0) * (injectionSwitch))[0], _GLF_FUZZED(-3.3)), vec2(_GLF_FUZZED(-1124.6959), _GLF_IDENTITY((mat2(1.0) * (injectionSwitch))[1], ((mat2(1.0) * (injectionSwitch))[1]) * 1.0)), bvec2(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))).y))))))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         barrier();
        }
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       barrier();
      }
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(vec4(injectionSwitch.x, 0.0, 0.0, 0.0)), (_GLF_IDENTITY(float(vec4(injectionSwitch.x, 0.0, 0.0, 0.0)), max(_GLF_IDENTITY(float(vec4(injectionSwitch.x, 0.0, 0.0, 0.0)), _GLF_IDENTITY(min(_GLF_IDENTITY(float(_GLF_IDENTITY(vec4(injectionSwitch.x, 0.0, 0.0, 0.0), mat4(1.0) * (vec4(injectionSwitch.x, 0.0, 0.0, 0.0)))), min(float(vec4(injectionSwitch.x, 0.0, 0.0, 0.0)), float(vec4(injectionSwitch.x, 0.0, 0.0, 0.0)))), float(vec4(injectionSwitch.x, 0.0, 0.0, 0.0))), 1.0 * (_GLF_IDENTITY(min(_GLF_IDENTITY(float(_GLF_IDENTITY(vec4(injectionSwitch.x, 0.0, 0.0, 0.0), mat4(1.0) * (vec4(injectionSwitch.x, 0.0, 0.0, 0.0)))), min(float(vec4(injectionSwitch.x, 0.0, 0.0, 0.0)), float(vec4(injectionSwitch.x, 0.0, 0.0, 0.0)))), float(vec4(injectionSwitch.x, 0.0, 0.0, 0.0))), (true ? min(_GLF_IDENTITY(float(_GLF_IDENTITY(vec4(injectionSwitch.x, 0.0, 0.0, 0.0), mat4(1.0) * (_GLF_IDENTITY(vec4(injectionSwitch.x, 0.0, 0.0, 0.0), vec4(vec4(vec4(injectionSwitch.x, 0.0, 0.0, 0.0))))))), min(float(vec4(injectionSwitch.x, 0.0, 0.0, 0.0)), float(vec4(injectionSwitch.x, 0.0, 0.0, 0.0)))), float(vec4(injectionSwitch.x, 0.0, 0.0, 0.0))) : _GLF_FUZZED(-83.54)))))), _GLF_IDENTITY(float(vec4(injectionSwitch.x, 0.0, 0.0, 0.0)), (float(vec4(injectionSwitch.x, 0.0, 0.0, 0.0))) - 0.0)))) + 0.0)) > injectionSwitch.y, _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(vec4(injectionSwitch.x, 0.0, 0.0, 0.0)), (_GLF_IDENTITY(float(vec4(injectionSwitch.x, 0.0, 0.0, 0.0)), max(_GLF_IDENTITY(float(vec4(injectionSwitch.x, 0.0, 0.0, 0.0)), min(_GLF_IDENTITY(float(vec4(injectionSwitch.x, 0.0, 0.0, 0.0)), min(float(vec4(injectionSwitch.x, 0.0, 0.0, 0.0)), float(vec4(_GLF_IDENTITY(injectionSwitch, mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch)).x, 0.0, 0.0, 0.0)))), float(vec4(injectionSwitch.x, 0.0, 0.0, 0.0)))), _GLF_IDENTITY(float(vec4(injectionSwitch.x, 0.0, 0.0, _GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, mix(float(_GLF_IDENTITY(0.0, min(0.0, 0.0))), float(_GLF_FUZZED(-6978.2236)), bool(false)))) * 1.0))), (float(vec4(injectionSwitch.x, 0.0, 0.0, 0.0))) - 0.0)))) + 0.0)), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(vec4(injectionSwitch.x, 0.0, 0.0, 0.0)), (_GLF_IDENTITY(float(vec4(injectionSwitch.x, 0.0, 0.0, 0.0)), max(_GLF_IDENTITY(float(vec4(injectionSwitch.x, 0.0, 0.0, 0.0)), min(_GLF_IDENTITY(float(vec4(injectionSwitch.x, 0.0, 0.0, 0.0)), min(float(vec4(injectionSwitch.x, 0.0, 0.0, 0.0)), float(vec4(injectionSwitch.x, 0.0, 0.0, 0.0)))), float(vec4(injectionSwitch.x, 0.0, 0.0, 0.0)))), _GLF_IDENTITY(float(_GLF_IDENTITY(vec4(injectionSwitch.x, 0.0, 0.0, 0.0), vec4(mat2(vec4(injectionSwitch.x, 0.0, 0.0, 0.0))))), (float(vec4(injectionSwitch.x, 0.0, 0.0, 0.0))) - 0.0)))) + 0.0)), float(vec4(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(_GLF_IDENTITY(float(vec4(injectionSwitch.x, 0.0, 0.0, 0.0)), _GLF_IDENTITY(float(_GLF_IDENTITY(float(float(vec4(injectionSwitch.x, 0.0, 0.0, 0.0))), clamp(float(float(vec4(injectionSwitch.x, 0.0, 0.0, 0.0))), float(float(vec4(injectionSwitch.x, 0.0, 0.0, 0.0))), float(float(vec4(injectionSwitch.x, 0.0, 0.0, 0.0)))))), _GLF_IDENTITY(min(float(_GLF_IDENTITY(float(float(vec4(injectionSwitch.x, 0.0, 0.0, 0.0))), clamp(float(float(vec4(injectionSwitch.x, 0.0, 0.0, 0.0))), float(float(vec4(injectionSwitch.x, 0.0, 0.0, 0.0))), float(float(vec4(injectionSwitch.x, 0.0, 0.0, 0.0)))))), float(_GLF_IDENTITY(float(float(vec4(injectionSwitch.x, 0.0, 0.0, 0.0))), clamp(float(float(vec4(injectionSwitch.x, 0.0, 0.0, 0.0))), float(float(vec4(injectionSwitch.x, 0.0, 0.0, 0.0))), float(float(vec4(injectionSwitch.x, 0.0, 0.0, 0.0))))))), abs(0.0) + (min(float(_GLF_IDENTITY(float(float(vec4(injectionSwitch.x, 0.0, 0.0, 0.0))), clamp(float(_GLF_IDENTITY(float(vec4(injectionSwitch.x, 0.0, 0.0, 0.0)), max(_GLF_IDENTITY(float(vec4(injectionSwitch.x, 0.0, 0.0, 0.0)), (_GLF_IDENTITY(float(vec4(injectionSwitch.x, 0.0, 0.0, 0.0)), (float(vec4(injectionSwitch.x, 0.0, 0.0, 0.0))) / 1.0)) / 1.0), float(vec4(injectionSwitch.x, 0.0, 0.0, 0.0))))), float(float(vec4(injectionSwitch.x, 0.0, 0.0, 0.0))), float(float(vec4(injectionSwitch.x, 0.0, 0.0, 0.0)))))), float(_GLF_IDENTITY(float(float(vec4(injectionSwitch.x, 0.0, 0.0, 0.0))), clamp(float(float(vec4(injectionSwitch.x, 0.0, 0.0, 0.0))), float(float(vec4(injectionSwitch.x, 0.0, 0.0, 0.0))), float(float(vec4(injectionSwitch.x, 0.0, 0.0, 0.0))))))))))), (_GLF_IDENTITY(float(vec4(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(mat4x2(injectionSwitch, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0))))).x, 0.0, 0.0, 0.0)), max(_GLF_IDENTITY(float(vec4(injectionSwitch.x, 0.0, _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(5615.6582) : 0.0)), 0.0)), min(_GLF_IDENTITY(float(vec4(injectionSwitch.x, 0.0, 0.0, 0.0)), min(float(vec4(injectionSwitch.x, 0.0, 0.0, 0.0)), float(vec4(injectionSwitch.x, 0.0, 0.0, 0.0)))), float(vec4(injectionSwitch.x, 0.0, 0.0, 0.0)))), _GLF_IDENTITY(float(vec4(injectionSwitch.x, 0.0, 0.0, 0.0)), (float(vec4(injectionSwitch.x, 0.0, 0.0, 0.0))) - 0.0)))) + 0.0)), 1.0, 0.0, _GLF_IDENTITY(1.0, 0.0 + (1.0)))))) + log(1.0)) > injectionSwitch.y, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, float(mat2x4(injectionSwitch.x, 0.0, 0.0, 1.0, exp(0.0), 0.0, 1.0, 1.0))), injectionSwitch.x)) > injectionSwitch.y)))), ! (! (bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(vec4(injectionSwitch.x, 0.0, 0.0, 0.0)), (_GLF_IDENTITY(float(vec4(injectionSwitch.x, 0.0, 0.0, 0.0)), max(_GLF_IDENTITY(float(vec4(injectionSwitch.x, 0.0, 0.0, 0.0)), min(_GLF_IDENTITY(float(vec4(injectionSwitch.x, 0.0, 0.0, 0.0)), min(float(vec4(injectionSwitch.x, 0.0, 0.0, 0.0)), float(vec4(_GLF_IDENTITY(injectionSwitch, mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch)).x, 0.0, 0.0, 0.0)))), float(vec4(injectionSwitch.x, 0.0, 0.0, 0.0)))), _GLF_IDENTITY(float(vec4(injectionSwitch.x, 0.0, 0.0, _GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, mix(float(_GLF_IDENTITY(0.0, min(0.0, 0.0))), float(_GLF_FUZZED(-6978.2236)), bool(false)))) * 1.0))), (float(vec4(injectionSwitch.x, 0.0, 0.0, 0.0))) - 0.0)))) + 0.0)), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(vec4(injectionSwitch.x, 0.0, 0.0, 0.0)), (_GLF_IDENTITY(float(vec4(injectionSwitch.x, 0.0, 0.0, 0.0)), max(_GLF_IDENTITY(float(vec4(injectionSwitch.x, 0.0, 0.0, 0.0)), min(_GLF_IDENTITY(float(vec4(injectionSwitch.x, 0.0, 0.0, 0.0)), min(float(vec4(injectionSwitch.x, 0.0, 0.0, 0.0)), float(vec4(injectionSwitch.x, 0.0, 0.0, 0.0)))), float(vec4(injectionSwitch.x, 0.0, 0.0, 0.0)))), _GLF_IDENTITY(float(_GLF_IDENTITY(vec4(injectionSwitch.x, 0.0, 0.0, 0.0), vec4(mat2(vec4(injectionSwitch.x, 0.0, 0.0, 0.0))))), (float(vec4(injectionSwitch.x, 0.0, 0.0, 0.0))) - 0.0)))) + 0.0)), float(vec4(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(_GLF_IDENTITY(float(vec4(injectionSwitch.x, 0.0, 0.0, 0.0)), _GLF_IDENTITY(float(_GLF_IDENTITY(float(float(vec4(injectionSwitch.x, 0.0, 0.0, 0.0))), clamp(float(float(vec4(injectionSwitch.x, 0.0, 0.0, 0.0))), float(float(vec4(injectionSwitch.x, 0.0, 0.0, 0.0))), float(float(vec4(injectionSwitch.x, 0.0, 0.0, 0.0)))))), _GLF_IDENTITY(min(float(_GLF_IDENTITY(float(float(vec4(injectionSwitch.x, 0.0, 0.0, 0.0))), clamp(float(float(vec4(injectionSwitch.x, 0.0, 0.0, 0.0))), float(float(vec4(injectionSwitch.x, 0.0, 0.0, 0.0))), float(float(vec4(injectionSwitch.x, 0.0, 0.0, 0.0)))))), float(_GLF_IDENTITY(float(float(vec4(injectionSwitch.x, 0.0, 0.0, 0.0))), clamp(float(float(vec4(injectionSwitch.x, 0.0, 0.0, 0.0))), float(float(vec4(injectionSwitch.x, 0.0, 0.0, 0.0))), float(float(vec4(injectionSwitch.x, 0.0, 0.0, 0.0))))))), abs(0.0) + (min(float(_GLF_IDENTITY(float(float(vec4(injectionSwitch.x, 0.0, 0.0, 0.0))), clamp(float(_GLF_IDENTITY(float(vec4(injectionSwitch.x, 0.0, 0.0, 0.0)), max(_GLF_IDENTITY(float(vec4(injectionSwitch.x, 0.0, 0.0, 0.0)), (_GLF_IDENTITY(float(vec4(injectionSwitch.x, 0.0, 0.0, 0.0)), (float(vec4(injectionSwitch.x, 0.0, 0.0, 0.0))) / 1.0)) / 1.0), float(vec4(injectionSwitch.x, 0.0, 0.0, 0.0))))), float(float(vec4(injectionSwitch.x, 0.0, 0.0, 0.0))), float(float(vec4(injectionSwitch.x, 0.0, 0.0, 0.0)))))), float(_GLF_IDENTITY(float(float(vec4(injectionSwitch.x, 0.0, 0.0, 0.0))), clamp(float(float(vec4(injectionSwitch.x, 0.0, 0.0, 0.0))), float(float(vec4(injectionSwitch.x, 0.0, 0.0, 0.0))), float(float(vec4(injectionSwitch.x, 0.0, 0.0, 0.0))))))))))), (_GLF_IDENTITY(float(vec4(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(mat4x2(injectionSwitch, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0))))).x, 0.0, 0.0, 0.0)), max(_GLF_IDENTITY(float(vec4(injectionSwitch.x, 0.0, _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(5615.6582) : 0.0)), 0.0)), min(_GLF_IDENTITY(float(vec4(injectionSwitch.x, 0.0, 0.0, 0.0)), min(float(vec4(injectionSwitch.x, 0.0, 0.0, 0.0)), float(vec4(injectionSwitch.x, 0.0, 0.0, 0.0)))), float(vec4(injectionSwitch.x, 0.0, 0.0, 0.0)))), _GLF_IDENTITY(float(vec4(injectionSwitch.x, 0.0, 0.0, 0.0)), (float(vec4(injectionSwitch.x, 0.0, 0.0, 0.0))) - 0.0)))) + 0.0)), 1.0, 0.0, _GLF_IDENTITY(1.0, 0.0 + (1.0)))))) + log(1.0)) > injectionSwitch.y, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, float(mat2x4(injectionSwitch.x, 0.0, 0.0, 1.0, exp(0.0), 0.0, 1.0, 1.0))), injectionSwitch.x)) > injectionSwitch.y))))))))))))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (_GLF_IDENTITY(_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), bool(bvec3(! ((injectionSwitch.x > injectionSwitch.y)), true, _GLF_IDENTITY(false, (false) || _GLF_IDENTITY(false, (false) && true))))), true && (_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), bool(_GLF_IDENTITY(bvec3(! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && ((injectionSwitch.x > injectionSwitch.y)))), true, _GLF_IDENTITY(false, (false) || _GLF_IDENTITY(false, (false) && true))), _GLF_IDENTITY(bvec3(bvec4(bvec3(! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && ((injectionSwitch.x > injectionSwitch.y)))), true, _GLF_IDENTITY(false, (false) || _GLF_IDENTITY(false, (false) && true))), false)), _GLF_IDENTITY(bvec3(bvec3(bvec3(bvec4(bvec3(! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && ((injectionSwitch.x > injectionSwitch.y)))), true, _GLF_IDENTITY(false, (false) || _GLF_IDENTITY(false, (false) && true))), false)))), bvec3(bvec3(bvec3(bvec3(bvec3(bvec4(bvec3(! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && ((injectionSwitch.x > injectionSwitch.y)))), true, _GLF_IDENTITY(false, (false) || _GLF_IDENTITY(false, (false) && true))), false))))))))))))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false || (bool(bvec2(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), bool(bvec3(! ((injectionSwitch.x > injectionSwitch.y)), true, false))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))
        {
         if(_GLF_DEAD(false))
          return;
         barrier();
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
        barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         return;
         if(_GLF_DEAD(false))
          return;
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(false))
        return;
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
        return;
       if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
        return;
       if(_GLF_DEAD(false))
        return;
       barrier();
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        return;
       return;
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
      }
     barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY((! ((injectionSwitch.x > injectionSwitch.y))) && true, bool(bvec3((! ((injectionSwitch.x > injectionSwitch.y))) && true, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))) || false))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        return;
       return;
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          return;
         barrier();
        }
       return;
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         return;
        }
       return;
      }
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
  }
}
