#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(false))
  return;
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 uint subgroup_size = gl_SubgroupSize;
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, false, false)))))
    return;
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)))).x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
  }
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4((injectionSwitch.x > injectionSwitch.y), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     return;
    }
   return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    return;
  }
 uint num_workgroup = gl_NumWorkGroups.x;
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
    return;
  }
 if(_GLF_DEAD(false))
  return;
 uint workgroup_size = _GLF_IDENTITY(gl_WorkGroupSize, _GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) | uvec3(0u, 0u, 0u))) | (_GLF_IDENTITY(gl_WorkGroupSize, uvec3(0u, 0u, 0u) | (_GLF_IDENTITY(gl_WorkGroupSize, min(gl_WorkGroupSize, gl_WorkGroupSize))))), min((_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) | uvec3(0u, 0u, 0u))) | (_GLF_IDENTITY(gl_WorkGroupSize, uvec3(0u, 0u, 0u) | (_GLF_IDENTITY(gl_WorkGroupSize, min(gl_WorkGroupSize, gl_WorkGroupSize))))), (_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) | uvec3(0u, 0u, 0u))) | (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, min(gl_WorkGroupSize, gl_WorkGroupSize)), uvec3(0u, 0u, 0u) | (_GLF_IDENTITY(gl_WorkGroupSize, min(gl_WorkGroupSize, gl_WorkGroupSize)))))))).x;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y))))
  return;
 if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))), false), _GLF_IDENTITY(bvec2(bvec4(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))), false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)), _GLF_IDENTITY(bvec2(bvec4(bvec2(bvec4(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))), false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)), false, true)), bvec2(bvec4(bvec2(bvec4(bvec2(bvec4(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))), false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)), false, true)), true, true))))))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))), false), _GLF_IDENTITY(bvec2(bvec4(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))), false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)), _GLF_IDENTITY(bvec2(bvec4(bvec2(bvec4(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))), false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)), false, true)), bvec2(bvec4(bvec2(bvec4(bvec2(bvec4(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))), false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)), false, true)), true, true))))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(false), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))), false), _GLF_IDENTITY(bvec2(bvec4(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))), false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)), _GLF_IDENTITY(bvec2(bvec4(bvec2(bvec4(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))), false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)), false, true)), bvec2(bvec4(bvec2(bvec4(bvec2(bvec4(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))), false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)), false, true)), true, true)))))))), bool(bool(! (_GLF_IDENTITY(_GLF_DEAD(false), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))), false), _GLF_IDENTITY(bvec2(bvec4(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))), false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)), _GLF_IDENTITY(bvec2(bvec4(bvec2(bvec4(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))), false), _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false || (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), true)), false, true)), bvec2(bvec4(bvec2(bvec4(bvec2(bvec4(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))), false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_IDENTITY(true, (true) && true))), false, true)), true, true)))))))))))))) || false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
      }
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
      return;
     return;
     if(_GLF_DEAD(false))
      return;
    }
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, false, false, true)))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))), (_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-261.091)), bool(false))) > injectionSwitch.y) || false)))))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec3(false, true, true)))) || false)))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, true)))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y)), true && (_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), max(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), _GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)))))) > injectionSwitch.y))))), true && (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), mix(float(_GLF_IDENTITY(_GLF_FUZZED(4.4), max(_GLF_FUZZED(4.4), _GLF_IDENTITY(_GLF_FUZZED(4.4), mix(float(_GLF_FUZZED(10.95)), float(_GLF_FUZZED(4.4)), bool(true)))))), float(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x))), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) > injectionSwitch.y)), true && (_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x)), max(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), _GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)))) > injectionSwitch.y))))))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
      }
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  return;
 uint workgroup_id = _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, (true ? gl_WorkGroupID : _GLF_FUZZED((uvec3(16807u, 60070u, 73372u) | uvec3(71220u, 35201u, 185541u))))).x, min(_GLF_IDENTITY(gl_WorkGroupID.x, (gl_WorkGroupID.x) ^ (0u >> _GLF_IDENTITY(uint(5u), uint(5u)))), gl_WorkGroupID.x));
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 uint workgroup_base = workgroup_size * workgroup_id;
 if(_GLF_DEAD(false))
  return;
 uint virtual_gid = _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, clamp(workgroup_base + subgroup_id * subgroup_size, workgroup_base + subgroup_id * subgroup_size, workgroup_base + subgroup_id * subgroup_size)), min(_GLF_IDENTITY(workgroup_base + subgroup_id * _GLF_IDENTITY(subgroup_size, 0u ^ (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, min(_GLF_IDENTITY(subgroup_size, (subgroup_size) - 0u), subgroup_size)), min(_GLF_IDENTITY(subgroup_size, min(_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY((subgroup_size) - 0u, max((subgroup_size) - 0u, _GLF_IDENTITY((subgroup_size) - 0u, (_GLF_IDENTITY((subgroup_size) - 0u, clamp((subgroup_size) - _GLF_IDENTITY(0u, (0u) / 1u), (subgroup_size) - 0u, (subgroup_size) - 0u))) * 1u)))), subgroup_size)), _GLF_IDENTITY(subgroup_size, min(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY((subgroup_size), _GLF_IDENTITY(((subgroup_size)), clamp(_GLF_IDENTITY(((subgroup_size)), max(((subgroup_size)), ((subgroup_size)))), ((subgroup_size)), ((subgroup_size)))) >> 0u) - 0u), (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY((subgroup_size), ((subgroup_size)) >> 0u) - 0u), _GLF_IDENTITY((_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY((subgroup_size), ((subgroup_size)) >> 0u) - 0u)) + 0u, ~ (~ ((_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY((subgroup_size), ((subgroup_size)) >> 0u) - 0u)) + 0u))))) | (_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY((subgroup_size), ((subgroup_size)) >> 0u) - 0u))), subgroup_size)))))), max(workgroup_base + subgroup_id * subgroup_size, workgroup_base + subgroup_id * subgroup_size)), _GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, _GLF_IDENTITY(max(_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, max(workgroup_base + subgroup_id * subgroup_size, _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (workgroup_base) | uint(_GLF_ZERO(0.0, injectionSwitch.x))) + subgroup_id * subgroup_size, 0u ^ (workgroup_base + subgroup_id * subgroup_size)))), _GLF_IDENTITY(workgroup_base, _GLF_IDENTITY(clamp(_GLF_IDENTITY(workgroup_base, (_GLF_IDENTITY(workgroup_base, max(workgroup_base, workgroup_base))) | (1u ^ 1u)), workgroup_base, workgroup_base), (clamp(_GLF_IDENTITY(workgroup_base, (_GLF_IDENTITY(workgroup_base, max(workgroup_base, workgroup_base))) | (1u ^ 1u)), workgroup_base, workgroup_base)) >> 0u)) + _GLF_IDENTITY(subgroup_id, uint(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), float(mat2x3(_GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0, abs(1.0), 0.0, determinant(mat2(1.0, 0.0, 0.0, 1.0)))))) * (_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY((subgroup_id), uint(uvec4((subgroup_id), 0u, (0u >> _GLF_IDENTITY(uint(1u), _GLF_IDENTITY(uint(1u), min(uint(1u), uint(1u))))), uint(_GLF_ZERO(0.0, injectionSwitch.x))))) >> _GLF_IDENTITY(0u, (0u) + (1u ^ uint(_GLF_ONE(1.0, injectionSwitch.y))))))) * subgroup_size), (_GLF_IDENTITY(max(_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, max(workgroup_base + subgroup_id * subgroup_size, _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, max(_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, max(workgroup_base + subgroup_id * subgroup_size, _GLF_IDENTITY(workgroup_base, uint(uvec2(workgroup_base, 0u))) + subgroup_id * subgroup_size)), workgroup_base + subgroup_id * subgroup_size)), 0u ^ (workgroup_base + subgroup_id * subgroup_size)))), _GLF_IDENTITY(workgroup_base, clamp(_GLF_IDENTITY(workgroup_base, _GLF_IDENTITY((_GLF_IDENTITY(workgroup_base, max(workgroup_base, workgroup_base))) | (1u ^ 1u), ((_GLF_IDENTITY(workgroup_base, _GLF_IDENTITY(max(workgroup_base, workgroup_base), min(max(workgroup_base, workgroup_base), max(workgroup_base, workgroup_base))))) | (1u ^ 1u)) / 1u)), workgroup_base, workgroup_base)) + _GLF_IDENTITY(subgroup_id, _GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), (_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(-8.9)), bool(false))))) + 0.0)), min(uint(_GLF_ONE(1.0, injectionSwitch.y)), uint(_GLF_ONE(1.0, injectionSwitch.y)))) * (_GLF_IDENTITY(subgroup_id, (subgroup_id) >> 0u)), (_GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), max(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), float(_GLF_IDENTITY(mat4(_GLF_ONE(1.0, injectionSwitch.y), tan(0.0), 1.0, 1.0, 0.0, 0.0, round(length(normalize(1.0))), 0.0, 1.0, 0.0, 1.0, log(_GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0)), dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0)))), _GLF_ONE(1.0, injectionSwitch.y), 0.0, 1.0, cos(0.0)), (mat4(_GLF_ONE(1.0, injectionSwitch.y), tan(0.0), 1.0, 1.0, 0.0, 0.0, round(length(normalize(1.0))), 0.0, 1.0, 0.0, 1.0, log(_GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0)), dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0)))), _GLF_ONE(1.0, injectionSwitch.y), 0.0, 1.0, cos(0.0))) / mat4(1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0)))), max(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y)))) / 1.0)) * (_GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(subgroup_id, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(subgroup_id, min(_GLF_IDENTITY(subgroup_id, (subgroup_id) | (subgroup_id)), subgroup_id))), (~ (_GLF_IDENTITY(subgroup_id, min(_GLF_IDENTITY(subgroup_id, (subgroup_id) | (subgroup_id)), subgroup_id)))) | (~ (_GLF_IDENTITY(subgroup_id, min(_GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(subgroup_id, 0u | (subgroup_id))) | (subgroup_id)), subgroup_id)))))))) >> 0u)), (uint(_GLF_ONE(1.0, injectionSwitch.y)) * (_GLF_IDENTITY(subgroup_id, (subgroup_id) >> 0u))) - 0u)) | (_GLF_IDENTITY(uint(_GLF_ONE(1.0, injectionSwitch.y)) * (_GLF_IDENTITY(subgroup_id, (subgroup_id) >> 0u)), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(uint(_GLF_ONE(1.0, injectionSwitch.y)) * (_GLF_IDENTITY(subgroup_id, (subgroup_id) >> 0u)), clamp(uint(_GLF_ONE(1.0, injectionSwitch.y)) * (_GLF_IDENTITY(subgroup_id, (subgroup_id) >> 0u)), uint(_GLF_ONE(1.0, injectionSwitch.y)) * (_GLF_IDENTITY(subgroup_id, (subgroup_id) >> 0u)), uint(_GLF_ONE(1.0, injectionSwitch.y)) * (_GLF_IDENTITY(subgroup_id, (subgroup_id) >> 0u))))), uint(uvec4(~ (_GLF_IDENTITY(uint(_GLF_ONE(1.0, injectionSwitch.y)) * (_GLF_IDENTITY(subgroup_id, (subgroup_id) >> 0u)), clamp(uint(_GLF_ONE(1.0, injectionSwitch.y)) * (_GLF_IDENTITY(subgroup_id, (subgroup_id) >> 0u)), uint(_GLF_ONE(1.0, injectionSwitch.y)) * (_GLF_IDENTITY(subgroup_id, (subgroup_id) >> 0u)), uint(_GLF_ONE(1.0, injectionSwitch.y)) * (_GLF_IDENTITY(subgroup_id, (subgroup_id) >> 0u))))), 0u, uint(_GLF_ZERO(0.0, injectionSwitch.x)), _GLF_IDENTITY(1u, min(1u, 1u)))))))))) * subgroup_size), _GLF_IDENTITY(0u + (max(_GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_id, (subgroup_id) | (subgroup_id)) * subgroup_size, max(workgroup_base + subgroup_id * subgroup_size, _GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, 0u ^ (_GLF_IDENTITY(workgroup_base, uint(uvec3(workgroup_base, 0u, 1u))) + subgroup_id * subgroup_size)))), _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, clamp(_GLF_IDENTITY(workgroup_base, _GLF_IDENTITY((_GLF_IDENTITY(workgroup_base, max(workgroup_base, workgroup_base))), 0u ^ ((_GLF_IDENTITY(workgroup_base, max(workgroup_base, workgroup_base))))) | (1u ^ 1u)), workgroup_base, workgroup_base)) + _GLF_IDENTITY(subgroup_id, uint(_GLF_ONE(1.0, injectionSwitch.y)) * (_GLF_IDENTITY(subgroup_id, (subgroup_id) >> 0u))) * subgroup_size, min(_GLF_IDENTITY(workgroup_base, clamp(_GLF_IDENTITY(workgroup_base, _GLF_IDENTITY((_GLF_IDENTITY(workgroup_base, max(workgroup_base, workgroup_base))), 0u ^ ((_GLF_IDENTITY(workgroup_base, max(workgroup_base, workgroup_base))))) | (1u ^ 1u)), workgroup_base, workgroup_base)) + _GLF_IDENTITY(subgroup_id, uint(_GLF_ONE(1.0, injectionSwitch.y)) * (_GLF_IDENTITY(subgroup_id, (subgroup_id) >> 0u))) * subgroup_size, _GLF_IDENTITY(workgroup_base, clamp(_GLF_IDENTITY(workgroup_base, _GLF_IDENTITY((_GLF_IDENTITY(workgroup_base, max(workgroup_base, workgroup_base))), 0u ^ ((_GLF_IDENTITY(workgroup_base, max(workgroup_base, workgroup_base))))) | (1u ^ 1u)), workgroup_base, workgroup_base)) + _GLF_IDENTITY(subgroup_id, uint(_GLF_ONE(1.0, injectionSwitch.y)) * (_GLF_IDENTITY(subgroup_id, (subgroup_id) >> 0u))) * subgroup_size)))), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(0u, clamp(0u, 0u, _GLF_IDENTITY(0u, (0u) | (0u)))) + (max(_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, max(workgroup_base + subgroup_id * subgroup_size, _GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, 0u ^ (workgroup_base + subgroup_id * subgroup_size)))), _GLF_IDENTITY(workgroup_base, clamp(_GLF_IDENTITY(workgroup_base, _GLF_IDENTITY((_GLF_IDENTITY(workgroup_base, max(workgroup_base, workgroup_base))), 0u ^ ((_GLF_IDENTITY(workgroup_base, max(workgroup_base, workgroup_base))))) | (1u ^ 1u)), workgroup_base, workgroup_base)) + _GLF_IDENTITY(subgroup_id, uint(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(-207.423)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))) * (_GLF_IDENTITY(subgroup_id, (subgroup_id) >> 0u))) * subgroup_size)), (0u + (max(_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, max(workgroup_base + subgroup_id * subgroup_size, _GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, 0u ^ (workgroup_base + subgroup_id * subgroup_size)))), _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (_GLF_IDENTITY(workgroup_base, ~ (~ (workgroup_base)))) | (workgroup_base)), clamp(_GLF_IDENTITY(workgroup_base, _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(workgroup_base, max(workgroup_base, workgroup_base))), ((_GLF_IDENTITY(workgroup_base, max(workgroup_base, workgroup_base)))) | ((_GLF_IDENTITY(workgroup_base, max(workgroup_base, workgroup_base))))), 0u ^ ((_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, max(workgroup_base, workgroup_base)), (_GLF_IDENTITY(workgroup_base, max(workgroup_base, workgroup_base))) << 0u)))) | (1u ^ 1u)), workgroup_base, workgroup_base)) + _GLF_IDENTITY(subgroup_id, uint(_GLF_ONE(1.0, injectionSwitch.y)) * (_GLF_IDENTITY(subgroup_id, (subgroup_id) >> 0u))) * subgroup_size))) | (0u + (_GLF_IDENTITY(max(_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, max(workgroup_base + subgroup_id * subgroup_size, _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, 0u ^ (workgroup_base)) + subgroup_id * subgroup_size, 0u ^ (workgroup_base + subgroup_id * subgroup_size)))), _GLF_IDENTITY(workgroup_base, clamp(_GLF_IDENTITY(workgroup_base, _GLF_IDENTITY((_GLF_IDENTITY(workgroup_base, max(workgroup_base, workgroup_base))), 0u ^ ((_GLF_IDENTITY(workgroup_base, max(workgroup_base, workgroup_base))))) | (1u ^ 1u)), workgroup_base, workgroup_base)) + _GLF_IDENTITY(subgroup_id, uint(_GLF_ONE(1.0, injectionSwitch.y)) * (_GLF_IDENTITY(subgroup_id, (subgroup_id) >> 0u))) * subgroup_size), max(max(_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, max(workgroup_base + subgroup_id * subgroup_size, _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, 0u ^ (workgroup_base)) + subgroup_id * subgroup_size, 0u ^ (workgroup_base + subgroup_id * subgroup_size)))), _GLF_IDENTITY(workgroup_base, clamp(_GLF_IDENTITY(workgroup_base, _GLF_IDENTITY((_GLF_IDENTITY(workgroup_base, max(workgroup_base, workgroup_base))), 0u ^ ((_GLF_IDENTITY(workgroup_base, max(workgroup_base, workgroup_base))))) | (1u ^ 1u)), workgroup_base, workgroup_base)) + _GLF_IDENTITY(subgroup_id, uint(_GLF_ONE(1.0, injectionSwitch.y)) * (_GLF_IDENTITY(subgroup_id, (subgroup_id) >> 0u))) * subgroup_size), max(_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, max(workgroup_base + subgroup_id * subgroup_size, _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, 0u ^ (workgroup_base)) + subgroup_id * subgroup_size, 0u ^ (workgroup_base + subgroup_id * subgroup_size)))), _GLF_IDENTITY(workgroup_base, clamp(_GLF_IDENTITY(workgroup_base, _GLF_IDENTITY((_GLF_IDENTITY(workgroup_base, max(workgroup_base, workgroup_base))), 0u ^ ((_GLF_IDENTITY(workgroup_base, max(workgroup_base, workgroup_base))))) | (1u ^ 1u)), workgroup_base, workgroup_base)) + _GLF_IDENTITY(subgroup_id, uint(_GLF_ONE(1.0, injectionSwitch.y)) * (_GLF_IDENTITY(subgroup_id, (subgroup_id) >> 0u))) * subgroup_size))))))), ((_GLF_IDENTITY(_GLF_IDENTITY(0u, clamp(0u, 0u, _GLF_IDENTITY(0u, (0u) | (0u)))) + (max(_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, max(workgroup_base + subgroup_id * subgroup_size, _GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, 0u ^ (workgroup_base + subgroup_id * subgroup_size)))), _GLF_IDENTITY(workgroup_base, clamp(_GLF_IDENTITY(workgroup_base, _GLF_IDENTITY((_GLF_IDENTITY(workgroup_base, max(workgroup_base, workgroup_base))), 0u ^ ((_GLF_IDENTITY(workgroup_base, max(workgroup_base, workgroup_base))))) | (1u ^ 1u)), workgroup_base, workgroup_base)) + _GLF_IDENTITY(subgroup_id, uint(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(-207.423)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))) * (_GLF_IDENTITY(subgroup_id, (subgroup_id) >> 0u))) * subgroup_size)), (0u + (max(_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, max(workgroup_base + subgroup_id * subgroup_size, _GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, 0u ^ (workgroup_base + subgroup_id * subgroup_size)))), _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (_GLF_IDENTITY(workgroup_base, ~ (~ (workgroup_base)))) | (workgroup_base)), clamp(_GLF_IDENTITY(workgroup_base, _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(workgroup_base, max(workgroup_base, workgroup_base))), ((_GLF_IDENTITY(workgroup_base, max(workgroup_base, workgroup_base)))) | ((_GLF_IDENTITY(workgroup_base, max(workgroup_base, workgroup_base))))), 0u ^ ((_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, max(workgroup_base, workgroup_base)), (_GLF_IDENTITY(workgroup_base, max(workgroup_base, workgroup_base))) << 0u)))) | (1u ^ 1u)), workgroup_base, workgroup_base)) + _GLF_IDENTITY(subgroup_id, uint(_GLF_ONE(1.0, injectionSwitch.y)) * (_GLF_IDENTITY(subgroup_id, (subgroup_id) >> 0u))) * subgroup_size))) | (0u + (_GLF_IDENTITY(max(_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, max(workgroup_base + subgroup_id * subgroup_size, _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, 0u ^ (workgroup_base)) + subgroup_id * subgroup_size, 0u ^ (workgroup_base + subgroup_id * subgroup_size)))), _GLF_IDENTITY(workgroup_base, clamp(_GLF_IDENTITY(workgroup_base, _GLF_IDENTITY((_GLF_IDENTITY(workgroup_base, max(workgroup_base, workgroup_base))), 0u ^ ((_GLF_IDENTITY(workgroup_base, max(workgroup_base, workgroup_base))))) | (1u ^ 1u)), workgroup_base, workgroup_base)) + _GLF_IDENTITY(subgroup_id, uint(_GLF_ONE(1.0, injectionSwitch.y)) * (_GLF_IDENTITY(subgroup_id, (subgroup_id) >> 0u))) * subgroup_size), max(max(_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, max(workgroup_base + subgroup_id * subgroup_size, _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, 0u ^ (workgroup_base)) + subgroup_id * subgroup_size, 0u ^ (workgroup_base + subgroup_id * subgroup_size)))), _GLF_IDENTITY(workgroup_base, clamp(_GLF_IDENTITY(workgroup_base, _GLF_IDENTITY((_GLF_IDENTITY(workgroup_base, max(workgroup_base, workgroup_base))), 0u ^ ((_GLF_IDENTITY(workgroup_base, max(workgroup_base, workgroup_base))))) | (1u ^ 1u)), workgroup_base, workgroup_base)) + _GLF_IDENTITY(subgroup_id, uint(_GLF_ONE(1.0, injectionSwitch.y)) * (_GLF_IDENTITY(subgroup_id, (subgroup_id) >> 0u))) * subgroup_size), max(_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, max(workgroup_base + subgroup_id * subgroup_size, _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, 0u ^ (workgroup_base)) + subgroup_id * subgroup_size, 0u ^ (workgroup_base + subgroup_id * subgroup_size)))), _GLF_IDENTITY(workgroup_base, clamp(_GLF_IDENTITY(workgroup_base, _GLF_IDENTITY((_GLF_IDENTITY(workgroup_base, max(workgroup_base, workgroup_base))), 0u ^ ((_GLF_IDENTITY(workgroup_base, max(workgroup_base, workgroup_base))))) | (1u ^ 1u)), workgroup_base, workgroup_base)) + _GLF_IDENTITY(subgroup_id, uint(_GLF_ONE(1.0, injectionSwitch.y)) * (_GLF_IDENTITY(subgroup_id, (subgroup_id) >> 0u))) * subgroup_size)))))))) | ((_GLF_IDENTITY(_GLF_IDENTITY(0u, clamp(0u, 0u, _GLF_IDENTITY(0u, (0u) | (0u)))) + (max(_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, max(workgroup_base + subgroup_id * subgroup_size, _GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, 0u ^ (workgroup_base + subgroup_id * subgroup_size)))), _GLF_IDENTITY(workgroup_base, clamp(_GLF_IDENTITY(workgroup_base, _GLF_IDENTITY((_GLF_IDENTITY(workgroup_base, max(workgroup_base, workgroup_base))), 0u ^ ((_GLF_IDENTITY(workgroup_base, max(workgroup_base, workgroup_base))))) | (1u ^ 1u)), workgroup_base, workgroup_base)) + _GLF_IDENTITY(subgroup_id, uint(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(-207.423)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))) * (_GLF_IDENTITY(subgroup_id, (subgroup_id) >> 0u))) * subgroup_size)), (0u + (max(_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, max(workgroup_base + subgroup_id * subgroup_size, _GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, 0u ^ (workgroup_base + subgroup_id * subgroup_size)))), _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (_GLF_IDENTITY(workgroup_base, ~ (~ (workgroup_base)))) | (workgroup_base)), clamp(_GLF_IDENTITY(workgroup_base, _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(workgroup_base, max(workgroup_base, workgroup_base))), ((_GLF_IDENTITY(workgroup_base, max(workgroup_base, workgroup_base)))) | ((_GLF_IDENTITY(workgroup_base, max(workgroup_base, workgroup_base))))), 0u ^ ((_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, max(workgroup_base, workgroup_base)), (_GLF_IDENTITY(workgroup_base, max(workgroup_base, workgroup_base))) << 0u)))) | (1u ^ 1u)), workgroup_base, workgroup_base)) + _GLF_IDENTITY(subgroup_id, uint(_GLF_ONE(1.0, injectionSwitch.y)) * (_GLF_IDENTITY(subgroup_id, (subgroup_id) >> 0u))) * subgroup_size))) | (0u + (_GLF_IDENTITY(max(_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, max(workgroup_base + subgroup_id * subgroup_size, _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, 0u ^ (workgroup_base)) + subgroup_id * subgroup_size, 0u ^ (workgroup_base + subgroup_id * subgroup_size)))), _GLF_IDENTITY(workgroup_base, clamp(_GLF_IDENTITY(workgroup_base, _GLF_IDENTITY((_GLF_IDENTITY(workgroup_base, max(workgroup_base, workgroup_base))), 0u ^ ((_GLF_IDENTITY(workgroup_base, max(workgroup_base, workgroup_base))))) | (1u ^ 1u)), workgroup_base, workgroup_base)) + _GLF_IDENTITY(subgroup_id, uint(_GLF_ONE(1.0, injectionSwitch.y)) * (_GLF_IDENTITY(subgroup_id, (subgroup_id) >> 0u))) * subgroup_size), max(max(_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, max(workgroup_base + subgroup_id * subgroup_size, _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, 0u ^ (workgroup_base)) + subgroup_id * subgroup_size, 0u ^ (workgroup_base + subgroup_id * subgroup_size)))), _GLF_IDENTITY(workgroup_base, clamp(_GLF_IDENTITY(workgroup_base, _GLF_IDENTITY((_GLF_IDENTITY(workgroup_base, max(workgroup_base, workgroup_base))), 0u ^ ((_GLF_IDENTITY(workgroup_base, max(workgroup_base, workgroup_base))))) | (1u ^ 1u)), workgroup_base, workgroup_base)) + _GLF_IDENTITY(subgroup_id, uint(_GLF_ONE(1.0, injectionSwitch.y)) * (_GLF_IDENTITY(subgroup_id, (subgroup_id) >> 0u))) * subgroup_size), max(_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, max(workgroup_base + subgroup_id * subgroup_size, _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, 0u ^ (workgroup_base)) + subgroup_id * subgroup_size, 0u ^ (workgroup_base + subgroup_id * subgroup_size)))), _GLF_IDENTITY(workgroup_base, clamp(_GLF_IDENTITY(workgroup_base, _GLF_IDENTITY((_GLF_IDENTITY(workgroup_base, max(workgroup_base, workgroup_base))), 0u ^ ((_GLF_IDENTITY(workgroup_base, max(workgroup_base, workgroup_base))))) | (1u ^ 1u)), workgroup_base, workgroup_base)) + _GLF_IDENTITY(subgroup_id, uint(_GLF_ONE(1.0, injectionSwitch.y)) * (_GLF_IDENTITY(subgroup_id, (subgroup_id) >> 0u))) * subgroup_size))))))))) << 0u))) | (max(_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, max(workgroup_base + subgroup_id * subgroup_size, _GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, 0u ^ (_GLF_IDENTITY(workgroup_base, 0u | (_GLF_IDENTITY(workgroup_base, _GLF_IDENTITY(0u, clamp(0u, 0u, 0u)) | (workgroup_base)))) + subgroup_id * subgroup_size)))), _GLF_IDENTITY(workgroup_base, clamp(_GLF_IDENTITY(workgroup_base, (_GLF_IDENTITY(workgroup_base, max(workgroup_base, workgroup_base))) | (1u ^ 1u)), workgroup_base, workgroup_base)) + _GLF_IDENTITY(subgroup_id, uint(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / _GLF_IDENTITY(1.0, mix(float(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-246.317) : 1.0))), float(_GLF_FUZZED(558.417)), bool(false)))))) * (_GLF_IDENTITY(subgroup_id, (subgroup_id) >> 0u))) * subgroup_size)))))) + subgroup_local_id;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 uint next_virtual_gid = workgroup_base + _GLF_IDENTITY(subgroup_id * subgroup_size, _GLF_IDENTITY((subgroup_id * _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size))), _GLF_IDENTITY(max(subgroup_size, subgroup_size), (false ? _GLF_FUZZED(subgroup_size) : max(subgroup_size, subgroup_size)))), (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(~ (~ (subgroup_size)), (~ (~ (subgroup_size))) >> uint(_GLF_ZERO(0.0, injectionSwitch.x)))), _GLF_IDENTITY(max(subgroup_size, subgroup_size), (false ? _GLF_FUZZED(subgroup_size) : max(subgroup_size, subgroup_size))))) | (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size))), _GLF_IDENTITY(max(subgroup_size, subgroup_size), (false ? _GLF_FUZZED(subgroup_size) : max(subgroup_size, subgroup_size))))))) ^ uint(_GLF_ZERO(_GLF_IDENTITY(0.0, float(mat3x4(0.0, _GLF_ONE(1.0, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(-9.2)), bool(false))), min(_GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y) - 0.0), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)))).y, injectionSwitch.y)), (_GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)))).y, injectionSwitch.y))) + 0.0)))), 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, _GLF_IDENTITY(dot(vec2(0.0, 0.0), vec2(1.0, 1.0)), dot(vec2(0.0, _GLF_IDENTITY(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), float(mat2(0.0, _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-67.44) : 1.0)), length(vec3(0.0, 0.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)))), 1.0)))), vec2(1.0, 1.0))), 1.0, _GLF_IDENTITY(0.0, clamp(0.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0)), 0.0))), injectionSwitch.x)), (true ? (subgroup_id * _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, ~ (_GLF_IDENTITY(~ (subgroup_size), min(~ (subgroup_size), ~ (subgroup_size))))), _GLF_IDENTITY(max(subgroup_size, subgroup_size), (false ? _GLF_FUZZED(_GLF_IDENTITY(subgroup_size, (false ? _GLF_FUZZED(subgroup_id) : subgroup_size))) : max(subgroup_size, subgroup_size)))), (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(~ (~ (subgroup_size)), (~ (~ (subgroup_size))) >> uint(_GLF_ZERO(0.0, injectionSwitch.x)))), _GLF_IDENTITY(max(subgroup_size, subgroup_size), (false ? _GLF_FUZZED(subgroup_size) : max(subgroup_size, subgroup_size))))) | (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size))), _GLF_IDENTITY(max(subgroup_size, subgroup_size), (false ? _GLF_FUZZED(subgroup_size) : max(subgroup_size, subgroup_size))))))) ^ uint(_GLF_ZERO(_GLF_IDENTITY(_GLF_IDENTITY(0.0, mix(float(_GLF_IDENTITY(0.0, max(0.0, 0.0))), float(_GLF_FUZZED(9955.7642)), bool(false))), float(mat3x4(0.0, _GLF_ONE(1.0, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(-9.2)), bool(false))), min(_GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y) - 0.0), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)))).y, injectionSwitch.y)), (_GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)))).y, injectionSwitch.y))) + 0.0)))), 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, _GLF_IDENTITY(dot(vec2(0.0, 0.0), vec2(1.0, 1.0)), dot(vec2(0.0, _GLF_IDENTITY(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), float(mat2(0.0, _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-67.44) : 1.0)), length(vec3(0.0, 0.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)))), 1.0)))), vec2(1.0, 1.0))), 1.0, _GLF_IDENTITY(0.0, clamp(0.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0)), 0.0))), injectionSwitch.x)) : _GLF_FUZZED(subgroup_local_id)))) + (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id + 1, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1, 0u | _GLF_IDENTITY((subgroup_local_id + 1), clamp((subgroup_local_id + 1), _GLF_IDENTITY((subgroup_local_id + 1), 0u | ((subgroup_local_id + 1))), (subgroup_local_id + 1)))), (_GLF_IDENTITY(subgroup_local_id + 1, 0u | (subgroup_local_id + 1))) * 1u)), (true ? _GLF_IDENTITY(~ (_GLF_IDENTITY(subgroup_local_id + 1, 0u | (subgroup_local_id + 1))), 0u ^ (~ (_GLF_IDENTITY(subgroup_local_id + 1, 0u | (subgroup_local_id + _GLF_IDENTITY(1, (1) - 0)))))) : _GLF_FUZZED(workgroup_id)))))) % subgroup_size, ((_GLF_IDENTITY(subgroup_local_id + 1, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1, 0u | (subgroup_local_id + 1)), (_GLF_IDENTITY(subgroup_local_id + 1, 0u | (subgroup_local_id + 1))) * 1u)), (true ? _GLF_IDENTITY(~ (_GLF_IDENTITY(subgroup_local_id + 1, 0u | (subgroup_local_id + 1))), 0u ^ (~ (_GLF_IDENTITY(subgroup_local_id + 1, 0u | (subgroup_local_id + 1))))) : _GLF_FUZZED(workgroup_id)))))) % subgroup_size) + 0u));
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 uint read_1 = atomicLoad(buf[virtual_gid], 4, 64, 0);
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) || false))
  return;
 atomicStore(buf[next_virtual_gid], uint(read_1 + 1), 4, _GLF_IDENTITY(_GLF_IDENTITY(64, int(ivec3(_GLF_IDENTITY(64, max(64, 64)), (0 ^ 1), 0))), max(64, 64)), _GLF_IDENTITY(4, (_GLF_IDENTITY(4, ~ (~ (4)))) << 0));
 if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
  return;
 uint read_2 = atomicLoad(buf[virtual_gid], _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(4, 0 ^ (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(4, 0 + (4)), _GLF_IDENTITY((_GLF_IDENTITY(4, _GLF_IDENTITY(0, int(ivec3(_GLF_IDENTITY(0, (false ? _GLF_FUZZED(67375) : 0)), 1, int(_GLF_ZERO(0.0, injectionSwitch.x))))) + (4))), ~ (~ ((_GLF_IDENTITY(4, _GLF_IDENTITY(0, int(ivec3(_GLF_IDENTITY(0, (false ? _GLF_FUZZED(67375) : 0)), 1, int(_GLF_ZERO(0.0, injectionSwitch.x))))) + (4)))))) / 1), (_GLF_IDENTITY(_GLF_IDENTITY(4, 0 + (4)), (_GLF_IDENTITY(4, 0 + (4))) | _GLF_IDENTITY((_GLF_IDENTITY(4, 0 + (_GLF_IDENTITY(4, (_GLF_IDENTITY(4, (4) | (4))) | (_GLF_IDENTITY(4, min(4, 4))))))), ~ (~ ((_GLF_IDENTITY(_GLF_IDENTITY(4, 0 + _GLF_IDENTITY((4), (1 ^ 1) ^ ((4)))), (_GLF_IDENTITY(4, 0 + _GLF_IDENTITY((4), (1 ^ 1) ^ ((4))))) - 0))))))) >> 0))), 0 ^ (4)), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(4, 0 ^ (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(4, (4) ^ 0), (4) | 0), 0 + (4)), (_GLF_IDENTITY(4, _GLF_IDENTITY(0, int(ivec3(_GLF_IDENTITY(_GLF_IDENTITY(0, ~ _GLF_IDENTITY((~ _GLF_IDENTITY((0), min((0), _GLF_IDENTITY((0), int(ivec3((0), 0, 0)))))), ((~ _GLF_IDENTITY((0), min((0), _GLF_IDENTITY((0), int(ivec3((0), 0, 0))))))) * 1)), (false ? _GLF_FUZZED(67375) : 0)), 1, int(_GLF_ZERO(0.0, injectionSwitch.x))))) + (4))) / 1), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(4, (4) - 0), 0 + (4)), (_GLF_IDENTITY(4, 0 + (4))) | _GLF_IDENTITY((_GLF_IDENTITY(4, 0 + (4))), ~ (~ ((_GLF_IDENTITY(4, 0 + (4)))))))) >> 0, ((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(4, (4) - 0), 0 + (4)), (_GLF_IDENTITY(4, 0 + (4))) | _GLF_IDENTITY((_GLF_IDENTITY(4, 0 + (4))), ~ (~ ((_GLF_IDENTITY(4, 0 + (4)))))))) >> 0) << 0)))), _GLF_IDENTITY(max(_GLF_IDENTITY(4, 0 ^ (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(4, 0 + (_GLF_IDENTITY(4, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(abs(ivec4(23559, -84154, -71265, 27939)).y) : 4)))), (_GLF_IDENTITY(4, _GLF_IDENTITY(0, int(ivec3(_GLF_IDENTITY(0, (false ? _GLF_FUZZED(67375) : 0)), 1, int(_GLF_ZERO(0.0, injectionSwitch.x))))) + (4))) / 1), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(4, 0 + (_GLF_IDENTITY(4, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(abs(ivec4(23559, -84154, -71265, 27939)).y) : 4)))), (_GLF_IDENTITY(4, _GLF_IDENTITY(0, int(ivec3(_GLF_IDENTITY(0, (false ? _GLF_FUZZED(67375) : 0)), 1, int(_GLF_ZERO(0.0, injectionSwitch.x))))) + (4))) / 1), (true ? _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(4, 0 + (_GLF_IDENTITY(4, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(abs(ivec4(23559, -84154, -71265, 27939)).y) : 4)))), (_GLF_IDENTITY(4, _GLF_IDENTITY(0, int(ivec3(_GLF_IDENTITY(0, (false ? _GLF_FUZZED(67375) : 0)), 1, int(_GLF_ZERO(0.0, injectionSwitch.x))))) + (4))) / 1), (_GLF_IDENTITY(_GLF_IDENTITY(4, 0 + (_GLF_IDENTITY(4, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(abs(ivec4(23559, -84154, -71265, 27939)).y) : 4)))), (_GLF_IDENTITY(4, _GLF_IDENTITY(0, int(ivec3(_GLF_IDENTITY(0, (false ? _GLF_FUZZED(67375) : 0)), 1, int(_GLF_ZERO(0.0, injectionSwitch.x))))) + (4))) / 1)) | (_GLF_IDENTITY(_GLF_IDENTITY(4, 0 + (_GLF_IDENTITY(4, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(abs(ivec4(23559, -84154, -71265, 27939)).y) : 4)))), (_GLF_IDENTITY(4, _GLF_IDENTITY(0, int(ivec3(_GLF_IDENTITY(0, (false ? _GLF_FUZZED(67375) : 0)), 1, int(_GLF_ZERO(0.0, injectionSwitch.x))))) + (4))) / 1))) : _GLF_FUZZED(-73621)))) >> 0), (_GLF_IDENTITY(_GLF_IDENTITY(4, _GLF_IDENTITY(0, 0 | (0)) + (4)), (_GLF_IDENTITY(_GLF_IDENTITY(4, _GLF_IDENTITY(0 + (4), min(0 + (4), 0 + (4)))), clamp(_GLF_IDENTITY(4, _GLF_IDENTITY(0 + (4), min(0 + (4), 0 + (4)))), _GLF_IDENTITY(4, _GLF_IDENTITY(_GLF_IDENTITY(0, min(_GLF_IDENTITY(0, min(0, 0)), 0)) + (4), min(0 + (4), 0 + (4)))), _GLF_IDENTITY(4, _GLF_IDENTITY(0 + (4), min(0 + (4), 0 + (4))))))) | _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(4, 0 + (4)), (_GLF_IDENTITY(4, 0 + (4))) - 0)), ~ (~ ((_GLF_IDENTITY(4, 0 + (4)))))))) >> 0))), _GLF_IDENTITY(4, 0 ^ (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(4, 0 + (4)), (_GLF_IDENTITY(4, _GLF_IDENTITY(0, int(ivec3(_GLF_IDENTITY(0, (false ? _GLF_FUZZED(67375) : 0)), 1, int(_GLF_ZERO(0.0, injectionSwitch.x))))) + (4))) / 1), (_GLF_IDENTITY(_GLF_IDENTITY(4, 0 + (4)), (_GLF_IDENTITY(4, 0 + (4))) | _GLF_IDENTITY((_GLF_IDENTITY(4, 0 + (4))), ~ (~ ((_GLF_IDENTITY(4, 0 + (4)))))))) >> 0)))), min(max(_GLF_IDENTITY(4, 0 ^ (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(4, 0 + (_GLF_IDENTITY(4, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(abs(ivec4(23559, -84154, -71265, 27939)).y) : 4)))), (_GLF_IDENTITY(4, _GLF_IDENTITY(0, int(ivec3(_GLF_IDENTITY(0, (false ? _GLF_FUZZED(67375) : 0)), 1, int(_GLF_ZERO(0.0, injectionSwitch.x))))) + (4))) / 1), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(4, 0 + (_GLF_IDENTITY(4, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(abs(ivec4(23559, -84154, -71265, 27939)).y) : 4)))), (_GLF_IDENTITY(4, _GLF_IDENTITY(0, int(ivec3(_GLF_IDENTITY(0, (false ? _GLF_FUZZED(67375) : 0)), 1, int(_GLF_ZERO(0.0, injectionSwitch.x))))) + (4))) / 1), (true ? _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(4, 0 + (_GLF_IDENTITY(4, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(abs(ivec4(23559, -84154, -71265, 27939)).y) : 4)))), (_GLF_IDENTITY(4, _GLF_IDENTITY(0, int(ivec3(_GLF_IDENTITY(0, (false ? _GLF_FUZZED(67375) : 0)), 1, int(_GLF_ZERO(0.0, injectionSwitch.x))))) + (4))) / 1), (_GLF_IDENTITY(_GLF_IDENTITY(4, 0 + (_GLF_IDENTITY(4, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(abs(ivec4(23559, -84154, -71265, 27939)).y) : 4)))), (_GLF_IDENTITY(4, _GLF_IDENTITY(0, int(ivec3(_GLF_IDENTITY(0, (false ? _GLF_FUZZED(67375) : 0)), 1, int(_GLF_ZERO(0.0, injectionSwitch.x))))) + (4))) / 1)) | (_GLF_IDENTITY(_GLF_IDENTITY(4, 0 + (_GLF_IDENTITY(4, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(abs(ivec4(23559, -84154, -71265, 27939)).y) : 4)))), (_GLF_IDENTITY(4, _GLF_IDENTITY(0, int(ivec3(_GLF_IDENTITY(0, (false ? _GLF_FUZZED(67375) : 0)), 1, int(_GLF_ZERO(0.0, injectionSwitch.x))))) + (4))) / 1))) : _GLF_FUZZED(-73621)))) >> 0), (_GLF_IDENTITY(_GLF_IDENTITY(4, _GLF_IDENTITY(0, 0 | (0)) + (4)), (_GLF_IDENTITY(_GLF_IDENTITY(4, _GLF_IDENTITY(0 + (4), min(0 + (4), 0 + (4)))), clamp(_GLF_IDENTITY(4, _GLF_IDENTITY(0 + (4), min(0 + (4), 0 + (4)))), _GLF_IDENTITY(4, _GLF_IDENTITY(_GLF_IDENTITY(0, min(_GLF_IDENTITY(0, min(0, 0)), 0)) + (4), min(0 + (4), 0 + (4)))), _GLF_IDENTITY(4, _GLF_IDENTITY(0 + (4), min(0 + (4), 0 + (4))))))) | _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(4, 0 + (4)), (_GLF_IDENTITY(4, 0 + (4))) - 0)), ~ (~ ((_GLF_IDENTITY(4, 0 + (4)))))))) >> 0))), _GLF_IDENTITY(4, 0 ^ (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(4, 0 + (4)), (_GLF_IDENTITY(4, _GLF_IDENTITY(0, int(ivec3(_GLF_IDENTITY(0, (false ? _GLF_FUZZED(67375) : 0)), 1, int(_GLF_ZERO(0.0, injectionSwitch.x))))) + (4))) / 1), (_GLF_IDENTITY(_GLF_IDENTITY(4, 0 + (4)), (_GLF_IDENTITY(4, 0 + (4))) | _GLF_IDENTITY((_GLF_IDENTITY(4, 0 + (4))), ~ (~ ((_GLF_IDENTITY(4, 0 + (4)))))))) >> 0)))), max(_GLF_IDENTITY(4, 0 ^ (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(4, 0 + (_GLF_IDENTITY(4, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(abs(ivec4(23559, -84154, -71265, 27939)).y) : 4)))), (_GLF_IDENTITY(4, _GLF_IDENTITY(0, int(ivec3(_GLF_IDENTITY(0, (false ? _GLF_FUZZED(67375) : 0)), 1, int(_GLF_ZERO(0.0, injectionSwitch.x))))) + (4))) / 1), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(4, 0 + (_GLF_IDENTITY(4, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(abs(ivec4(23559, -84154, -71265, 27939)).y) : 4)))), (_GLF_IDENTITY(4, _GLF_IDENTITY(0, int(ivec3(_GLF_IDENTITY(0, (false ? _GLF_FUZZED(67375) : 0)), 1, int(_GLF_ZERO(0.0, injectionSwitch.x))))) + (4))) / 1), (true ? _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(4, 0 + (_GLF_IDENTITY(4, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(abs(ivec4(23559, -84154, -71265, 27939)).y) : 4)))), (_GLF_IDENTITY(4, _GLF_IDENTITY(0, int(ivec3(_GLF_IDENTITY(0, (false ? _GLF_FUZZED(67375) : 0)), 1, int(_GLF_ZERO(0.0, injectionSwitch.x))))) + (4))) / 1), (_GLF_IDENTITY(_GLF_IDENTITY(4, 0 + (_GLF_IDENTITY(4, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(abs(ivec4(23559, -84154, -71265, 27939)).y) : 4)))), (_GLF_IDENTITY(4, _GLF_IDENTITY(0, int(ivec3(_GLF_IDENTITY(0, (false ? _GLF_FUZZED(67375) : 0)), 1, int(_GLF_ZERO(0.0, injectionSwitch.x))))) + (4))) / 1)) | (_GLF_IDENTITY(_GLF_IDENTITY(4, 0 + (_GLF_IDENTITY(4, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(abs(ivec4(23559, -84154, -71265, 27939)).y) : 4)))), (_GLF_IDENTITY(4, _GLF_IDENTITY(0, int(ivec3(_GLF_IDENTITY(0, (false ? _GLF_FUZZED(67375) : 0)), 1, int(_GLF_ZERO(0.0, injectionSwitch.x))))) + (4))) / 1))) : _GLF_FUZZED(-73621)))) >> 0), (_GLF_IDENTITY(_GLF_IDENTITY(4, _GLF_IDENTITY(0, 0 | (0)) + (4)), (_GLF_IDENTITY(_GLF_IDENTITY(4, _GLF_IDENTITY(0 + (4), min(0 + (4), 0 + (4)))), clamp(_GLF_IDENTITY(4, _GLF_IDENTITY(0 + (4), min(0 + (4), 0 + (4)))), _GLF_IDENTITY(4, _GLF_IDENTITY(_GLF_IDENTITY(0, min(_GLF_IDENTITY(0, min(0, 0)), 0)) + (4), min(0 + (4), 0 + (4)))), _GLF_IDENTITY(4, _GLF_IDENTITY(0 + (4), min(0 + (4), 0 + (4))))))) | _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(4, 0 + (4)), (_GLF_IDENTITY(4, 0 + (4))) - 0)), ~ (~ ((_GLF_IDENTITY(4, 0 + (4)))))))) >> 0))), _GLF_IDENTITY(4, 0 ^ (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(4, 0 + (4)), (_GLF_IDENTITY(4, _GLF_IDENTITY(0, int(ivec3(_GLF_IDENTITY(0, (false ? _GLF_FUZZED(67375) : 0)), 1, int(_GLF_ZERO(0.0, injectionSwitch.x))))) + (4))) / 1), (_GLF_IDENTITY(_GLF_IDENTITY(4, 0 + (4)), (_GLF_IDENTITY(4, 0 + (4))) | _GLF_IDENTITY((_GLF_IDENTITY(4, 0 + (4))), ~ (~ ((_GLF_IDENTITY(4, 0 + (4)))))))) >> 0))))))), 0 ^ (4))))), 64, 0);
 if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(-67.04)), bool(false)))))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, false || (false)), false), bvec2(bvec4(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, false || (false)), false), bvec2(bvec2(bvec2(_GLF_IDENTITY(false, false || (false)), false)))), true, false)))), true && (_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, false || (false)), false), bvec2(bvec4(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, false || (false)), false), bvec2(bvec2(bvec2(_GLF_IDENTITY(false, false || (false)), false)))), true, false)))), true && (bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, false || (false)), false), bvec2(bvec4(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, false || (false)), false), bvec2(bvec2(bvec2(_GLF_IDENTITY(false, false || (false)), false)))), true, false))))))))), (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
    }
   return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(subgroup_local_id + 1 < subgroup_size)
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         return;
        }
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   int i = 0;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))), ! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))), bool(_GLF_IDENTITY(bvec3(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))), false, true), bvec3(bvec4(bvec3(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(false, bool(bvec4(false, true, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) || (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, true, false)), ! (! (bool(bvec3(false, true, false))))))) || false)))), false, true), false)))))))))
          return;
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         return;
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
           if(_GLF_DEAD(false))
            return;
           return;
          }
        }
       if(_GLF_DEAD(false))
        return;
       return;
       if(_GLF_DEAD(false))
        return;
      }
     return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
        return;
       return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(false))
        return;
       return;
      }
    }
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), bool(bool(false)))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
    }
   atomicStore(buf[next_virtual_gid], _GLF_IDENTITY(uint(read_1 + 1 == read_2), (uint(read_1 + 1 == read_2)) | 0u) + _GLF_IDENTITY(1, clamp(1, _GLF_IDENTITY(_GLF_IDENTITY(1, min(1, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1, ~ (_GLF_IDENTITY(~ (1), (~ (1)) / 1))), 0 ^ _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(1, int(ivec2(1, 0))), (_GLF_IDENTITY(_GLF_IDENTITY(1, int(_GLF_IDENTITY(ivec2(1, 0), (ivec2(1, 0)) * ivec2(1, 1)))), (_GLF_IDENTITY(1, int(ivec2(1, 0)))) | (_GLF_IDENTITY(1, int(ivec2(1, 0)))))) - 0)), ((_GLF_IDENTITY(_GLF_IDENTITY(1, int(ivec2(1, 0))), (_GLF_IDENTITY(_GLF_IDENTITY(1, int(_GLF_IDENTITY(ivec2(1, 0), (ivec2(1, 0)) * ivec2(1, 1)))), (_GLF_IDENTITY(1, int(ivec2(1, 0)))) | (_GLF_IDENTITY(1, int(ivec2(1, 0)))))) - 0))) | (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(1, int(ivec2(1, 0))), (_GLF_IDENTITY(_GLF_IDENTITY(1, int(_GLF_IDENTITY(ivec2(1, 0), (ivec2(1, 0)) * ivec2(1, 1)))), (_GLF_IDENTITY(1, int(ivec2(1, 0)))) | (_GLF_IDENTITY(1, int(ivec2(1, 0)))))) - 0)), ~ (~ ((_GLF_IDENTITY(_GLF_IDENTITY(1, int(ivec2(1, 0))), (_GLF_IDENTITY(_GLF_IDENTITY(1, int(_GLF_IDENTITY(ivec2(1, 0), (ivec2(1, 0)) * ivec2(1, 1)))), (_GLF_IDENTITY(1, int(ivec2(1, 0)))) | (_GLF_IDENTITY(1, int(ivec2(1, 0)))))) - 0)))))))), clamp(_GLF_IDENTITY(1, 0 ^ (_GLF_IDENTITY(1, int(ivec2(1, 0))))), _GLF_IDENTITY(_GLF_IDENTITY(1, (1) | 0), 0 ^ (_GLF_IDENTITY(1, int(_GLF_IDENTITY(ivec2(1, 0), (_GLF_IDENTITY(ivec2(1, 0), _GLF_IDENTITY(max(ivec2(1, 0), _GLF_IDENTITY(ivec2(1, 0), _GLF_IDENTITY((ivec2(1, 0)), ((ivec2(1, 0))) >> ivec2(0, 0)) << ivec2(0, 0))), (max(ivec2(1, 0), _GLF_IDENTITY(ivec2(1, 0), _GLF_IDENTITY((ivec2(1, 0)), ((ivec2(1, _GLF_IDENTITY(0, (_GLF_IDENTITY(0, (0) | (0))) | (0))))) >> ivec2(0, 0)) << ivec2(0, 0)))) >> ivec2(0, 0)))) >> ivec2(0, 0)))))), _GLF_IDENTITY(1, 0 ^ (_GLF_IDENTITY(1, int(ivec2(1, 0))))))))), int(ivec3(1, 0, 1))), 1)), 4, 64, 4);
  }
 else
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), (bool(bool(false))) || false))), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), (bool(bool(false))) || false))), true && (_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), (bool(bool(false))) || false))))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true && (bool(bvec3(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), (bool(bool(false))) || false))), true && (_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), (bool(bool(false))) || false))))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))
    return;
   atomicStore(buf[next_virtual_gid], uint(read_1 + 1 == read_2) + 1, _GLF_IDENTITY(4, max(4, 4)), 64, 4);
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
      }
     return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
    }
   return;
  }
}
