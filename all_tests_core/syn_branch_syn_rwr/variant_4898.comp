#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 uint subgroup_id = gl_SubgroupID;
 uint subgroup_size = gl_SubgroupSize;
 uint subgroup_local_id = gl_SubgroupInvocationID;
 uint num_workgroup = gl_NumWorkGroups.x;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(-736.370, -2624.3439))))) / vec2(1.0, 1.0)).x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).y))))), ! (! (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y)))))))
  return;
 uint workgroup_size = _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, _GLF_IDENTITY((gl_WorkGroupSize) / uvec3(1u, 1u, 1u), uvec3(0u, 0u, 0u) ^ ((gl_WorkGroupSize) / uvec3(1u, 1u, 1u)))).x, (_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) / uvec3(1u, 1u, 1u)).x) | (_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) / uvec3(1u, 1u, 1u)).x));
 uint workgroup_id = gl_WorkGroupID.x;
 uint workgroup_base = _GLF_IDENTITY(_GLF_IDENTITY(workgroup_size, _GLF_IDENTITY((_GLF_IDENTITY(workgroup_size, max(workgroup_size, workgroup_size))) | 0u, 1u * ((_GLF_IDENTITY(_GLF_IDENTITY(workgroup_size, (workgroup_size) << 0u), _GLF_IDENTITY(max(workgroup_size, workgroup_size), (max(workgroup_size, workgroup_size)) | (max(workgroup_size, workgroup_size))))) | 0u))) * workgroup_id, clamp(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_size, (_GLF_IDENTITY(workgroup_size, max(workgroup_size, workgroup_size))) | 0u) * workgroup_id, (_GLF_IDENTITY(workgroup_size, _GLF_IDENTITY((_GLF_IDENTITY(workgroup_size, max(workgroup_size, workgroup_size))) | 0u, min(_GLF_IDENTITY((_GLF_IDENTITY(workgroup_size, max(workgroup_size, workgroup_size))) | 0u, ((_GLF_IDENTITY(workgroup_size, max(workgroup_size, workgroup_size))) | 0u) << 0u), _GLF_IDENTITY((_GLF_IDENTITY(workgroup_size, max(workgroup_size, workgroup_size))) | 0u, min(_GLF_IDENTITY((_GLF_IDENTITY(workgroup_size, max(workgroup_size, workgroup_size))) | 0u, 0u ^ ((_GLF_IDENTITY(_GLF_IDENTITY(workgroup_size, 0u ^ (workgroup_size)), max(workgroup_size, workgroup_size))) | 0u)), (_GLF_IDENTITY(workgroup_size, max(workgroup_size, workgroup_size))) | 0u))))) * workgroup_id) - 0u), _GLF_IDENTITY(_GLF_IDENTITY(workgroup_size, (_GLF_IDENTITY(workgroup_size, max(workgroup_size, workgroup_size))) | 0u) * workgroup_id, (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_size, _GLF_IDENTITY((_GLF_IDENTITY(workgroup_size, max(_GLF_IDENTITY(workgroup_size, clamp(workgroup_size, _GLF_IDENTITY(workgroup_size, (_GLF_IDENTITY(workgroup_size, ~ (~ (workgroup_size)))) | 0u), _GLF_IDENTITY(workgroup_size, _GLF_IDENTITY((0u ^ 0u) + (workgroup_size), ((0u ^ 0u) + (workgroup_size)) * 1u)))), workgroup_size))), ((_GLF_IDENTITY(workgroup_size, max(_GLF_IDENTITY(workgroup_size, clamp(workgroup_size, _GLF_IDENTITY(workgroup_size, (_GLF_IDENTITY(workgroup_size, ~ (~ (workgroup_size)))) | 0u), _GLF_IDENTITY(workgroup_size, _GLF_IDENTITY((0u ^ 0u) + (workgroup_size), ((0u ^ 0u) + (workgroup_size)) * 1u)))), workgroup_size)))) | ((_GLF_IDENTITY(workgroup_size, max(_GLF_IDENTITY(workgroup_size, clamp(workgroup_size, _GLF_IDENTITY(workgroup_size, (_GLF_IDENTITY(workgroup_size, ~ (~ (workgroup_size)))) | 0u), _GLF_IDENTITY(workgroup_size, _GLF_IDENTITY((0u ^ 0u) + (workgroup_size), ((0u ^ 0u) + (workgroup_size)) * 1u)))), workgroup_size))))) | 0u) * workgroup_id, uint(uvec4(_GLF_IDENTITY(workgroup_size, (_GLF_IDENTITY(workgroup_size, _GLF_IDENTITY(max(workgroup_size, workgroup_size), min(max(workgroup_size, workgroup_size), _GLF_IDENTITY(max(workgroup_size, workgroup_size), (max(workgroup_size, workgroup_size)) << 0u))))) | 0u) * workgroup_id, 1u, 1u, 1u)))) + _GLF_IDENTITY(0u, ~ (~ (0u)))), _GLF_IDENTITY(workgroup_size, (_GLF_IDENTITY(workgroup_size, max(_GLF_IDENTITY(workgroup_size, 0u + (_GLF_IDENTITY(workgroup_size, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? workgroup_size : _GLF_FUZZED(num_workgroup))))), workgroup_size))) | 0u) * workgroup_id));
 uint virtual_gid = _GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_id, _GLF_IDENTITY(0u | (_GLF_IDENTITY(subgroup_id, (subgroup_id) >> 0u)), (false ? _GLF_FUZZED(subgroup_size) : _GLF_IDENTITY(0u | (_GLF_IDENTITY(subgroup_id, (subgroup_id) >> 0u)), max(0u | (_GLF_IDENTITY(subgroup_id, (subgroup_id) >> 0u)), 0u | (_GLF_IDENTITY(subgroup_id, (subgroup_id) >> 0u))))))) * subgroup_size + subgroup_local_id, uint(uvec4(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + subgroup_id * _GLF_IDENTITY(subgroup_size, (subgroup_size) << 0u), (_GLF_IDENTITY(true ? _GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, (workgroup_base + subgroup_id * subgroup_size) << 0u) : _GLF_IDENTITY(_GLF_FUZZED(subgroup_local_id), clamp(_GLF_IDENTITY(_GLF_FUZZED(subgroup_local_id), ~ (~ (_GLF_FUZZED(subgroup_local_id)))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(subgroup_local_id), ~ (~ (_GLF_FUZZED(subgroup_local_id)))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(subgroup_local_id), ~ (~ (_GLF_FUZZED(subgroup_local_id)))), 0u ^ (_GLF_IDENTITY(_GLF_FUZZED(subgroup_local_id), ~ (~ (_GLF_FUZZED(subgroup_local_id))))))) | (_GLF_IDENTITY(_GLF_FUZZED(subgroup_local_id), ~ (~ (_GLF_FUZZED(subgroup_local_id)))))), _GLF_FUZZED(subgroup_local_id))), (true ? _GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, (workgroup_base + subgroup_id * subgroup_size) << _GLF_IDENTITY(0u, (0u) << 0u)) : _GLF_IDENTITY(_GLF_FUZZED(subgroup_local_id), clamp(_GLF_IDENTITY(_GLF_FUZZED(subgroup_local_id), ~ (~ (_GLF_FUZZED(subgroup_local_id)))), _GLF_IDENTITY(_GLF_FUZZED(subgroup_local_id), ~ (~ (_GLF_FUZZED(subgroup_local_id)))), _GLF_IDENTITY(_GLF_FUZZED(subgroup_local_id), (_GLF_FUZZED(subgroup_local_id)) + 0u)))) * 1u))) + subgroup_local_id, (_GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_id, 0u + (_GLF_IDENTITY(subgroup_id, clamp(_GLF_IDENTITY(subgroup_id, max(subgroup_id, subgroup_id)), subgroup_id, subgroup_id)))) * subgroup_size + subgroup_local_id, clamp(_GLF_IDENTITY(workgroup_base, ~ (~ (_GLF_IDENTITY(workgroup_base, 0u | (workgroup_base))))) + _GLF_IDENTITY(subgroup_id, max(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (subgroup_id) / 1u), 1u * (_GLF_IDENTITY(subgroup_id, (subgroup_id) / 1u))), subgroup_id)) * _GLF_IDENTITY(subgroup_size, max(subgroup_size, _GLF_IDENTITY(subgroup_size, min(subgroup_size, subgroup_size)))) + subgroup_local_id, workgroup_base + subgroup_id * subgroup_size + subgroup_local_id, workgroup_base + subgroup_id * _GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, (false ? _GLF_FUZZED(workgroup_base) : _GLF_IDENTITY(subgroup_size, (false ? _GLF_FUZZED(workgroup_size) : subgroup_size))))) << 0u) + subgroup_local_id))) * 1u), 0u, 1u, 0u)));
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! (! (false)))), false || (! (_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), bool(bool(! (! (false))))))))))), (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 uint next_virtual_gid = _GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_id, _GLF_IDENTITY(uint(uvec4(_GLF_IDENTITY(subgroup_id, uint(uvec4(subgroup_id, uint(_GLF_ONE(1.0, injectionSwitch.y)), 1u, 0u))), 0u, 1u, (1u | 1u))), uint(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (uint(uvec4(_GLF_IDENTITY(subgroup_id, uint(uvec4(subgroup_id, uint(_GLF_ONE(1.0, injectionSwitch.y)), 1u, 0u))), 0u, 1u, (1u | 1u)))))) * subgroup_size + ((subgroup_local_id + 1) % subgroup_size), (false ? _GLF_FUZZED(workgroup_base) : _GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_id, _GLF_IDENTITY(uint(uvec4(_GLF_IDENTITY(subgroup_id, uint(uvec4(subgroup_id, uint(_GLF_ONE(1.0, injectionSwitch.y)), 1u, 0u))), 0u, 1u, (1u | 1u))), uint(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (uint(uvec4(_GLF_IDENTITY(subgroup_id, uint(uvec4(subgroup_id, uint(_GLF_ONE(1.0, injectionSwitch.y)), 1u, 0u))), 0u, 1u, (1u | 1u)))))) * subgroup_size + ((subgroup_local_id + 1) % subgroup_size), (_GLF_IDENTITY(workgroup_base, (_GLF_IDENTITY(workgroup_base, (workgroup_base) << 0u)) << 0u) + _GLF_IDENTITY(subgroup_id, _GLF_IDENTITY(uint(uvec4(_GLF_IDENTITY(subgroup_id, uint(uvec4(subgroup_id, uint(_GLF_ONE(_GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, min(1.0, _GLF_IDENTITY(1.0, (1.0) / 1.0))), 1.0)), injectionSwitch.y)), 1u, 0u))), 0u, 1u, (1u | 1u))), uint(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (uint(uvec4(_GLF_IDENTITY(subgroup_id, uint(uvec4(subgroup_id, uint(_GLF_ONE(1.0, injectionSwitch.y)), 1u, 0u))), 0u, 1u, (1u | 1u)))))) * subgroup_size + ((subgroup_local_id + 1) % subgroup_size)) * 1u)));
 if(_GLF_DEAD(false))
  return;
 uint read_1 = atomicLoad(buf[virtual_gid], 4, 64, 0);
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), _GLF_IDENTITY(bool(bvec4((injectionSwitch.x < injectionSwitch.y), true, true, false)), bool(bvec2(bool(bvec4((injectionSwitch.x < injectionSwitch.y), true, true, false)), true)))))), (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(3.4), _GLF_IDENTITY((injectionSwitch)[1], max((injectionSwitch)[1], (injectionSwitch)[1]))), vec2((injectionSwitch)[0], _GLF_FUZZED(61.66)), bvec2(true, false))).x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! _GLF_IDENTITY((_GLF_IDENTITY(! (false), bool(bvec4(! (false), false, true, false)))), true && ((_GLF_IDENTITY(! (false), bool(bvec4(! (false), false, true, false)))))))))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 atomicStore(buf[next_virtual_gid], uint(read_1 + 1), 4, 64, 4);
 if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
  return;
 uint read_2 = atomicLoad(buf[virtual_gid], _GLF_IDENTITY(4, ~ (_GLF_IDENTITY(~ (4), clamp(~ (4), ~ (4), ~ _GLF_IDENTITY((4), ((4)) | ((4))))))), _GLF_IDENTITY(64, ~ (_GLF_IDENTITY(~ (64), (_GLF_IDENTITY(~ _GLF_IDENTITY((64), ((64)) | 0), (~ _GLF_IDENTITY((64), ((64)) | 0)) << (0 | 0))) | _GLF_IDENTITY(0, (0) | (0))))), 0);
 if(subgroup_local_id + 1 < subgroup_size)
  {
   int i = 0;
   if(_GLF_DEAD(false))
    return;
   atomicStore(buf[next_virtual_gid], _GLF_IDENTITY(uint(_GLF_IDENTITY(read_1, min(_GLF_IDENTITY(read_1, uint(uint(read_1))), _GLF_IDENTITY(read_1, (read_1) ^ 0u))) + 1 == read_2), min(_GLF_IDENTITY(uint(_GLF_IDENTITY(read_1, min(_GLF_IDENTITY(read_1, uint(uint(read_1))), _GLF_IDENTITY(_GLF_IDENTITY(read_1, _GLF_IDENTITY((_GLF_IDENTITY(read_1, min(read_1, read_1))) << 0u, 0u + (_GLF_IDENTITY((_GLF_IDENTITY(read_1, min(read_1, read_1))) << 0u, ((_GLF_IDENTITY(read_1, min(read_1, read_1))) << 0u) ^ 0u)))), (read_1) ^ 0u))) + 1 == read_2), max(uint(_GLF_IDENTITY(_GLF_IDENTITY(read_1, min(_GLF_IDENTITY(read_1, uint(uint(read_1))), _GLF_IDENTITY(read_1, _GLF_IDENTITY((read_1), (false ? _GLF_FUZZED(workgroup_base) : (read_1))) ^ 0u))), (true ? _GLF_IDENTITY(read_1, min(_GLF_IDENTITY(read_1, uint(uint(read_1))), _GLF_IDENTITY(read_1, (read_1) ^ 0u))) : _GLF_FUZZED(next_virtual_gid))) + 1 == read_2), uint(_GLF_IDENTITY(read_1, _GLF_IDENTITY(min(_GLF_IDENTITY(_GLF_IDENTITY(read_1, (read_1) | (_GLF_IDENTITY(read_1, ~ (~ (read_1))))), uint(uint(read_1))), _GLF_IDENTITY(_GLF_IDENTITY(read_1, (false ? _GLF_FUZZED(num_workgroup) : _GLF_IDENTITY(read_1, (false ? _GLF_FUZZED(subgroup_id) : read_1)))), (read_1) ^ 0u)), (_GLF_IDENTITY(min(_GLF_IDENTITY(read_1, uint(uint(read_1))), _GLF_IDENTITY(read_1, (read_1) ^ 0u)), max(min(_GLF_IDENTITY(read_1, uint(uint(read_1))), _GLF_IDENTITY(_GLF_IDENTITY(read_1, clamp(read_1, read_1, read_1)), (read_1) ^ 0u)), min(_GLF_IDENTITY(read_1, uint(uint(read_1))), _GLF_IDENTITY(read_1, (read_1) ^ 0u))))) | (min(_GLF_IDENTITY(read_1, uint(uint(read_1))), _GLF_IDENTITY(read_1, (read_1) ^ 0u))))) + 1 == read_2))), uint(_GLF_IDENTITY(read_1, min(_GLF_IDENTITY(read_1, uint(uint(_GLF_IDENTITY(read_1, (read_1) | (read_1))))), _GLF_IDENTITY(read_1, (read_1) ^ 0u))) + 1 == read_2))) + 1, 4, 64, _GLF_IDENTITY(4, (_GLF_IDENTITY(4, int(ivec2(_GLF_IDENTITY(4, (true ? _GLF_IDENTITY(4, (4) >> 0) : _GLF_FUZZED(-70798))), 0)))) | _GLF_IDENTITY((4), (_GLF_IDENTITY((4), ((4)) | ((4)))) | ((4)))));
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
    return;
  }
 else
  {
   atomicStore(buf[next_virtual_gid], _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1 == read_2, bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(read_1 + 1 == read_2, ! (! (read_1 + 1 == read_2)))), true && (bool(_GLF_IDENTITY(read_1 + 1 == read_2, ! (! (read_1 + 1 == read_2)))))))), ! (! (_GLF_IDENTITY(read_1 + 1 == read_2, bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1 == read_2, ! (! (_GLF_IDENTITY(read_1 + _GLF_IDENTITY(1, (1) | (1)), max(read_1 + _GLF_IDENTITY(1, (1) | (1)), read_1 + _GLF_IDENTITY(1, (1) | (1)))) == read_2))), false || (_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1 == read_2, ! (! (read_1 + 1 == read_2))), bool(bvec3(_GLF_IDENTITY(read_1 + 1 == read_2, ! (! (read_1 + 1 == _GLF_IDENTITY(read_2, max(read_2, _GLF_IDENTITY(read_2, uint(uint(read_2)))))))), true, _GLF_IDENTITY(true, bool(bvec3(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), (! (true)) || false))), false, true)))))))))))))), (_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1 == read_2, bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1 == read_2, _GLF_IDENTITY(! (! (read_1 + 1 == read_2)), ! (_GLF_IDENTITY(! (! (! (read_1 + 1 == read_2))), bool(bvec3(! (! (! (read_1 + 1 == read_2))), false, false)))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(read_1 + 1 == read_2, _GLF_IDENTITY(! (! (read_1 + 1 == read_2)), ! (_GLF_IDENTITY(! (! (! (read_1 + 1 == read_2))), bool(bvec3(! (! (! (read_1 + 1 == read_2))), false, false))))))), ! (! (! (_GLF_IDENTITY(read_1 + 1 == read_2, _GLF_IDENTITY(! (! (read_1 + 1 == read_2)), ! (_GLF_IDENTITY(_GLF_IDENTITY(! (! (! (read_1 + 1 == read_2))), bool(bvec3(_GLF_IDENTITY(! (! (! (read_1 + 1 == read_2))), true && (! (! (! (read_1 + 1 == read_2))))), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), bool(bvec3(! (! (! (_GLF_IDENTITY(read_1 + 1 == read_2, false || (read_1 + 1 == read_2))))), false, false))))))))))))))), ! (! (_GLF_IDENTITY(read_1 + _GLF_IDENTITY(1, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(1, (1) << 0), (1) + 0)), _GLF_IDENTITY(int(_GLF_IDENTITY(ivec3(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(1, (1) << 0), (1) + 0)), ((_GLF_IDENTITY(_GLF_IDENTITY(1, (1) << 0), (1) + 0))) / 1), 1, int(_GLF_ZERO(0.0, injectionSwitch.x))), clamp(_GLF_IDENTITY(ivec3(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(1, (1) << 0), (1) + 0)), ((_GLF_IDENTITY(_GLF_IDENTITY(1, (1) << 0), (1) + 0))) / 1), 1, int(_GLF_ZERO(0.0, injectionSwitch.x))), min(ivec3(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(1, (1) << 0), (1) + 0)), ((_GLF_IDENTITY(_GLF_IDENTITY(1, (1) << 0), (1) + 0))) / 1), 1, int(_GLF_ZERO(0.0, injectionSwitch.x))), ivec3(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(1, (1) << 0), (1) + 0)), ((_GLF_IDENTITY(_GLF_IDENTITY(1, (1) << 0), (1) + 0))) / 1), 1, int(_GLF_ZERO(0.0, injectionSwitch.x))))), ivec3(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(1, (1) << 0), (1) + 0)), ((_GLF_IDENTITY(_GLF_IDENTITY(1, (1) << 0), (1) + 0))) / 1), 1, int(_GLF_ZERO(0.0, injectionSwitch.x))), ivec3(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(1, (1) << 0), (1) + 0)), ((_GLF_IDENTITY(_GLF_IDENTITY(1, (1) << 0), (1) + 0))) / 1), 1, int(_GLF_ZERO(0.0, injectionSwitch.x)))))), (int(_GLF_IDENTITY(ivec3(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(1, (1) << 0), (1) + 0)), ((_GLF_IDENTITY(_GLF_IDENTITY(1, (1) << 0), (1) + 0))) / 1), 1, int(_GLF_ZERO(0.0, injectionSwitch.x))), clamp(_GLF_IDENTITY(ivec3(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(1, (1) << 0), (1) + 0)), ((_GLF_IDENTITY(_GLF_IDENTITY(1, (1) << 0), (1) + 0))) / 1), 1, int(_GLF_ZERO(0.0, injectionSwitch.x))), min(ivec3(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(1, (1) << 0), (1) + 0)), ((_GLF_IDENTITY(_GLF_IDENTITY(1, (1) << 0), (1) + 0))) / 1), 1, int(_GLF_ZERO(0.0, injectionSwitch.x))), ivec3(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(1, (1) << 0), (1) + 0)), ((_GLF_IDENTITY(_GLF_IDENTITY(1, (1) << 0), (1) + 0))) / 1), 1, int(_GLF_ZERO(0.0, injectionSwitch.x))))), ivec3(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(1, (1) << 0), (1) + 0)), ((_GLF_IDENTITY(_GLF_IDENTITY(1, (1) << 0), (1) + 0))) / 1), 1, int(_GLF_ZERO(0.0, injectionSwitch.x))), ivec3(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(1, (1) << 0), (1) + 0)), ((_GLF_IDENTITY(_GLF_IDENTITY(1, (1) << 0), (1) + 0))) / 1), 1, int(_GLF_ZERO(0.0, injectionSwitch.x))))))) | (int(_GLF_IDENTITY(ivec3(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(1, (1) << 0), (1) + 0)), ((_GLF_IDENTITY(_GLF_IDENTITY(1, (1) << 0), (1) + 0))) / 1), 1, int(_GLF_ZERO(0.0, injectionSwitch.x))), clamp(_GLF_IDENTITY(ivec3(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(1, (1) << 0), (1) + 0)), ((_GLF_IDENTITY(_GLF_IDENTITY(1, (1) << 0), (1) + 0))) / 1), 1, int(_GLF_ZERO(0.0, injectionSwitch.x))), min(ivec3(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(1, (1) << 0), (1) + 0)), ((_GLF_IDENTITY(_GLF_IDENTITY(1, (1) << 0), (1) + 0))) / 1), 1, int(_GLF_ZERO(0.0, injectionSwitch.x))), ivec3(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(1, (1) << 0), (1) + 0)), ((_GLF_IDENTITY(_GLF_IDENTITY(1, (1) << 0), (1) + 0))) / 1), 1, int(_GLF_ZERO(0.0, injectionSwitch.x))))), ivec3(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(1, (1) << 0), (1) + 0)), ((_GLF_IDENTITY(_GLF_IDENTITY(1, (1) << 0), (1) + 0))) / 1), 1, int(_GLF_ZERO(0.0, injectionSwitch.x))), ivec3(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(1, (1) << 0), (1) + 0)), ((_GLF_IDENTITY(_GLF_IDENTITY(1, (1) << 0), (1) + 0))) / 1), 1, int(_GLF_ZERO(0.0, injectionSwitch.x))))))))) ^ 0) == read_2, _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1 == read_2, false || (read_1 + _GLF_IDENTITY(1, (1) << 0) == read_2)), _GLF_IDENTITY(! (! (read_1 + _GLF_IDENTITY(1, (1) | (1)) == read_2)), ! (! (! (! (read_1 + _GLF_IDENTITY(1, (1) | (1)) == read_2)))))), false || (_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1 == read_2, ! _GLF_IDENTITY((! (read_1 + 1 == read_2)), ((! (read_1 + _GLF_IDENTITY(1, (_GLF_IDENTITY(1, max(_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(-17053))), 1))) | (_GLF_IDENTITY(1, ~ (~ (_GLF_IDENTITY(1, max(1, 1))))))) == read_2))) && _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat4x3(injectionSwitch, 0.0, cos(0.0), 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0)), (vec2(mat4x3(injectionSwitch, 0.0, cos(0.0), 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0))) / vec2(1.0, 1.0))).x < injectionSwitch.y)))), bool(bvec3(_GLF_IDENTITY(read_1 + 1 == read_2, ! (! _GLF_IDENTITY((_GLF_IDENTITY(read_1 + 1 == read_2, (_GLF_IDENTITY(read_1 + 1 == read_2, ! (_GLF_IDENTITY(! (read_1 + 1 == read_2), bool(bvec2(! (read_1 + 1 == read_2), false)))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), bool(bvec2(_GLF_IDENTITY((read_1 + 1 == _GLF_IDENTITY(read_2, min(read_2, read_2))), ! (! ((_GLF_IDENTITY(read_1 + 1, ~ (~ (read_1 + 1))) == read_2)))), _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false || (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))), true, true)))))), (bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1 == read_2, false || _GLF_IDENTITY((read_1 + _GLF_IDENTITY(1, (1) << 0) == read_2), _GLF_IDENTITY(bool(bvec4((read_1 + _GLF_IDENTITY(1, (1) << 0) == read_2), false, false, true)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (bool(bvec4((read_1 + _GLF_IDENTITY(1, (1) << 0) == read_2), false, false, true)))))), _GLF_IDENTITY(! (! (read_1 + _GLF_IDENTITY(1, (1) | (1)) == read_2)), ! (! (! (! (read_1 + _GLF_IDENTITY(1, (1) | (1)) == read_2)))))), false || (_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1 == read_2, ! _GLF_IDENTITY((! (read_1 + 1 == read_2)), ((! (read_1 + 1 == read_2))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), bool(bvec3(_GLF_IDENTITY(read_1 + 1 == read_2, ! (! _GLF_IDENTITY((read_1 + 1 == read_2), bool(bvec2(_GLF_IDENTITY((_GLF_IDENTITY(read_1 + 1 == read_2, true && (read_1 + 1 == read_2))), ! (! (_GLF_IDENTITY((read_1 + 1 == read_2), ! (! ((read_1 + 1 == read_2))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), true, true))))))) && true)), (bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1, 1u * (_GLF_IDENTITY(read_1 + 1, uint(_GLF_ZERO(0.0, injectionSwitch.x)) + (read_1 + 1)))) == read_2, false || (read_1 + _GLF_IDENTITY(1, _GLF_IDENTITY((1), clamp(_GLF_IDENTITY((1), ((1)) - 0), _GLF_IDENTITY((1), 0 | ((1))), (1))) << 0) == read_2)), _GLF_IDENTITY(! (! (read_1 + _GLF_IDENTITY(1, (1) | _GLF_IDENTITY((1), min((1), _GLF_IDENTITY((1), clamp((1), (1), (1)))))) == read_2)), ! (! (! (! (read_1 + _GLF_IDENTITY(1, (1) | (1)) == read_2)))))), false || (_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1 == read_2, ! _GLF_IDENTITY((! (read_1 + _GLF_IDENTITY(1, (_GLF_IDENTITY(true, bool(bool(true))) ? 1 : _GLF_FUZZED(-62841))) == read_2)), _GLF_IDENTITY(((! (read_1 + 1 == read_2))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), (_GLF_IDENTITY(((! (read_1 + 1 == read_2))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false || (((! (read_1 + 1 == read_2))) && _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))).y))))) || false))), bool(bvec3(_GLF_IDENTITY(read_1 + 1 == read_2, ! (! _GLF_IDENTITY((_GLF_IDENTITY(read_1 + 1 == read_2, true && (read_1 + 1 == read_2))), bool(bvec2(_GLF_IDENTITY((read_1 + 1 == read_2), ! (! ((read_1 + 1 == read_2)))), _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), bool(bvec3((injectionSwitch.x < injectionSwitch.y), false, false))))))))), true, true)))))), (bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1 == read_2, false || (read_1 + _GLF_IDENTITY(1, (1) << 0) == read_2)), _GLF_IDENTITY(! (! (read_1 + _GLF_IDENTITY(1, (1) | (1)) == read_2)), ! _GLF_IDENTITY((! (! (! (_GLF_IDENTITY(read_1 + _GLF_IDENTITY(1, (1) | (1)), (read_1 + _GLF_IDENTITY(1, (1) | (1))) | (_GLF_IDENTITY(read_1 + _GLF_IDENTITY(1, (1) | (1)), min(read_1 + _GLF_IDENTITY(1, (1) | (1)), _GLF_IDENTITY(read_1 + _GLF_IDENTITY(1, (1) | (1)), (read_1 + _GLF_IDENTITY(1, (1) | (1))) ^ 0u))))) == read_2)))), ((! (! (! (_GLF_IDENTITY(read_1 + _GLF_IDENTITY(1, (1) | (1)), (read_1 + _GLF_IDENTITY(1, (1) | (1))) | (_GLF_IDENTITY(read_1 + _GLF_IDENTITY(1, (1) | (1)), min(read_1 + _GLF_IDENTITY(1, (1) | (1)), _GLF_IDENTITY(read_1 + _GLF_IDENTITY(1, (1) | (1)), (read_1 + _GLF_IDENTITY(1, (1) | (1))) ^ 0u))))) == read_2))))) || false))), false || (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1 == read_2, ! _GLF_IDENTITY((! (read_1 + 1 == read_2)), ((! (read_1 + 1 == read_2))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), bool(bvec3(_GLF_IDENTITY(read_1 + 1 == read_2, ! (! _GLF_IDENTITY((read_1 + 1 == read_2), bool(bvec2(_GLF_IDENTITY((read_1 + 1 == read_2), ! (! ((read_1 + 1 == read_2)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), true, true))), true && (_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1 == read_2, ! _GLF_IDENTITY((! (read_1 + 1 == read_2)), ((! (read_1 + 1 == read_2))) && _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, (injectionSwitch.x < injectionSwitch.y) || false))))), bool(bvec3(_GLF_IDENTITY(read_1 + 1 == read_2, _GLF_IDENTITY(! (! _GLF_IDENTITY((read_1 + 1 == read_2), bool(bvec2(_GLF_IDENTITY((read_1 + 1 == read_2), ! (! ((read_1 + 1 == read_2)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), bool(_GLF_IDENTITY(bvec3(! (! _GLF_IDENTITY((read_1 + 1 == read_2), bool(bvec2(_GLF_IDENTITY((read_1 + 1 == read_2), ! (! ((read_1 + 1 == read_2)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), false, true), bvec3(bvec3(bvec3(! (! _GLF_IDENTITY((read_1 + 1 == read_2), bool(bvec2(_GLF_IDENTITY((read_1 + 1 == read_2), ! (! ((read_1 + 1 == read_2)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), false, true))))))), true, true))))))))) && true))) && true)))))) || false)), ~ (~ (uint(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1 == read_2, bool(bool(_GLF_IDENTITY(read_1 + 1 == read_2, ! (! (read_1 + 1 == read_2)))))), ! (! (_GLF_IDENTITY(read_1 + 1 == read_2, bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1 == read_2, ! (! (read_1 + _GLF_IDENTITY(1, (1) | (1)) == read_2))), false || (_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1 == read_2, ! (! (read_1 + 1 == read_2))), bool(bvec3(_GLF_IDENTITY(read_1 + 1 == read_2, ! (! (read_1 + 1 == read_2))), true, true))))))))))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1 == read_2, bool(bool(_GLF_IDENTITY(read_1 + 1 == read_2, ! (! (read_1 + 1 == read_2)))))), ! (! (_GLF_IDENTITY(read_1 + 1 == read_2, bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1 == read_2, ! (! (read_1 + _GLF_IDENTITY(1, (1) | (1)) == read_2))), false || (_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1 == read_2, ! (! (read_1 + 1 == read_2))), bool(bvec3(_GLF_IDENTITY(read_1 + 1 == read_2, ! (! (read_1 + 1 == read_2))), true, true))))))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1 == read_2, bool(bool(_GLF_IDENTITY(read_1 + 1 == read_2, ! (! (read_1 + 1 == read_2)))))), ! (! (_GLF_IDENTITY(read_1 + 1 == read_2, bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1 == read_2, ! (! (read_1 + _GLF_IDENTITY(1, (1) | (1)) == read_2))), false || (_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1 == read_2, ! (! (read_1 + 1 == read_2))), bool(bvec3(_GLF_IDENTITY(read_1 + 1 == read_2, ! (! (read_1 + 1 == read_2))), true, true))))))))))), (_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1 == _GLF_IDENTITY(read_2, (read_2) | (_GLF_IDENTITY(read_2, 0u ^ (read_2)))), bool(bool(_GLF_IDENTITY(read_1 + 1 == read_2, ! (! (_GLF_IDENTITY(read_1, ~ (~ (_GLF_IDENTITY(read_1, clamp(read_1, read_1, _GLF_IDENTITY(read_1, (true ? read_1 : _GLF_FUZZED(read_1)))))))) + 1 == read_2)))))), ! (! (_GLF_IDENTITY(read_1 + 1 == read_2, _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1 == read_2, ! _GLF_IDENTITY((! (read_1 + _GLF_IDENTITY(1, (1) | (1)) == read_2)), ((! (read_1 + _GLF_IDENTITY(1, (1) | (1)) == read_2))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false || (_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1 == read_2, ! (! (read_1 + 1 == read_2))), bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(read_1, clamp(read_1, read_1, _GLF_IDENTITY(read_1, (read_1) | (read_1)))) + 1 == read_2, ! (! (read_1 + 1 == read_2))), true, true))))))), (_GLF_IDENTITY(bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1 == read_2, ! _GLF_IDENTITY((! (read_1 + _GLF_IDENTITY(1, (1) | (1)) == read_2)), ((! (read_1 + _GLF_IDENTITY(1, (1) | (1)) == read_2))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false || (_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1 == read_2, ! (! (read_1 + 1 == read_2))), bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(read_1, clamp(read_1, read_1, _GLF_IDENTITY(read_1, (read_1) | (read_1)))) + 1 == read_2, ! (! (read_1 + 1 == read_2))), true, true))))))), true && (bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1 == read_2, ! _GLF_IDENTITY((! (read_1 + _GLF_IDENTITY(1, (1) | (1)) == read_2)), ((! (read_1 + _GLF_IDENTITY(1, (1) | (1)) == read_2))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false || (_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1 == read_2, ! (! (read_1 + 1 == read_2))), bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(read_1, clamp(read_1, read_1, _GLF_IDENTITY(read_1, (read_1) | (read_1)))) + 1 == read_2, ! (! (read_1 + 1 == read_2))), true, true)))))))))) || false)))))) && true)))))), (_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1 == read_2, bool(bool(_GLF_IDENTITY(read_1 + 1 == read_2, _GLF_IDENTITY(! (! (read_1 + 1 == read_2)), ! _GLF_IDENTITY((_GLF_IDENTITY(! (! (! (read_1 + 1 == read_2))), bool(bvec3(! (! (_GLF_IDENTITY(! (read_1 + 1 == read_2), ! (! (_GLF_IDENTITY(! (read_1 + 1 == read_2), bool(bvec2(! (read_1 + 1 == read_2), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))))), false, false)))), (_GLF_IDENTITY((_GLF_IDENTITY(! (! (! (read_1 + 1 == read_2))), bool(bvec3(! (! (_GLF_IDENTITY(! (read_1 + 1 == read_2), ! (! (_GLF_IDENTITY(! (read_1 + 1 == read_2), bool(bvec2(! (read_1 + 1 == read_2), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))))), false, false)))), bool(bvec4((_GLF_IDENTITY(! (! (! (read_1 + 1 == read_2))), bool(bvec3(! (! (_GLF_IDENTITY(! (read_1 + 1 == read_2), ! (! (_GLF_IDENTITY(! (read_1 + 1 == read_2), bool(bvec2(! (read_1 + 1 == read_2), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))))), false, false)))), false, false, false)))) || false)))))), ! (! (_GLF_IDENTITY(read_1 + _GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) + 0)) ^ 0) == read_2, _GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(read_1 + _GLF_IDENTITY(1, clamp(1, 1, 1)) == read_2, false || (read_1 + _GLF_IDENTITY(1, (1) << 0) == read_2)), _GLF_IDENTITY(! (! (read_1 + _GLF_IDENTITY(1, (1) | (1)) == read_2)), ! (! (! (! (read_1 + _GLF_IDENTITY(1, (1) | (1)) == read_2)))))), false || _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1 == read_2, ! _GLF_IDENTITY((! _GLF_IDENTITY((read_1 + 1 == read_2), bool(bvec4((read_1 + 1 == read_2), false, false, true)))), ((! (read_1 + 1 == read_2))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1, clamp(read_1 + 1, read_1 + 1, read_1 + 1)) == read_2, ! (! _GLF_IDENTITY((read_1 + 1 == read_2), bool(bvec2(_GLF_IDENTITY((read_1 + 1 == read_2), ! (! ((read_1 + 1 == read_2)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), true, true)))), bool(bool((_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1 == read_2, ! _GLF_IDENTITY((! _GLF_IDENTITY((read_1 + 1 == read_2), bool(bvec4((read_1 + 1 == read_2), false, false, true)))), ((! (read_1 + 1 == read_2))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1, clamp(read_1 + 1, read_1 + 1, read_1 + 1)) == read_2, ! (! _GLF_IDENTITY((read_1 + 1 == read_2), bool(bvec2(_GLF_IDENTITY((read_1 + 1 == read_2), ! (! ((read_1 + 1 == read_2)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), true, true))))))))), false || (bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(read_1 + _GLF_IDENTITY(1, clamp(1, 1, 1)) == read_2, false || (read_1 + _GLF_IDENTITY(1, (1) << 0) == read_2)), _GLF_IDENTITY(! (! (read_1 + _GLF_IDENTITY(1, (1) | (1)) == read_2)), ! (! (! (! (read_1 + _GLF_IDENTITY(1, (1) | (1)) == read_2)))))), false || _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1 == read_2, ! _GLF_IDENTITY((! _GLF_IDENTITY((read_1 + 1 == read_2), bool(bvec4((read_1 + 1 == read_2), false, false, true)))), ((! (read_1 + 1 == read_2))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1, clamp(read_1 + 1, read_1 + 1, read_1 + 1)) == read_2, ! (! _GLF_IDENTITY((read_1 + 1 == read_2), bool(bvec2(_GLF_IDENTITY((read_1 + 1 == read_2), ! (! ((read_1 + 1 == read_2)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), true, true)))), bool(bool((_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1 == read_2, ! _GLF_IDENTITY((! _GLF_IDENTITY((read_1 + 1 == read_2), bool(bvec4((read_1 + 1 == read_2), false, false, true)))), ((! (read_1 + 1 == read_2))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1, clamp(read_1 + 1, read_1 + 1, read_1 + 1)) == read_2, ! (! _GLF_IDENTITY((read_1 + 1 == read_2), bool(bvec2(_GLF_IDENTITY((read_1 + 1 == read_2), ! (! ((read_1 + 1 == read_2)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), true, true))))))))))), (bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1 == read_2, false || (read_1 + _GLF_IDENTITY(1, (1) << 0) == read_2)), _GLF_IDENTITY(_GLF_IDENTITY(! (! (read_1 + _GLF_IDENTITY(1, (1) | (1)) == read_2)), ! (! (! (! (read_1 + _GLF_IDENTITY(1, (1) | (1)) == read_2))))), false || (_GLF_IDENTITY(! (! (read_1 + _GLF_IDENTITY(1, (1) | (1)) == read_2)), ! (! (! (! (read_1 + _GLF_IDENTITY(1, (1) | (1)) == read_2)))))))), _GLF_IDENTITY(false, bool(bool(false))) || (_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1 == read_2, ! _GLF_IDENTITY((! (read_1 + 1 == read_2)), ((! (read_1 + 1 == read_2))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), bool(bvec3(_GLF_IDENTITY(read_1 + 1 == read_2, ! (! _GLF_IDENTITY((read_1 + 1 == read_2), bool(bvec2(_GLF_IDENTITY((read_1 + 1 == read_2), ! (! ((read_1 + 1 == read_2)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), true, true))))))) && true)), (bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1 == read_2, false || (read_1 + _GLF_IDENTITY(1, (1) << 0) == read_2)), (_GLF_IDENTITY(read_1 + 1 == read_2, false || (read_1 + _GLF_IDENTITY(1, (1) << 0) == read_2))) || false), _GLF_IDENTITY(! (! (read_1 + _GLF_IDENTITY(1, (1) | (1)) == read_2)), ! (! (! (! (read_1 + _GLF_IDENTITY(_GLF_IDENTITY(1, (1 ^ 1) ^ (1)), (1) | (1)) == read_2)))))), _GLF_IDENTITY(false, bool(bvec2(false, false))) || (_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1 == read_2, ! _GLF_IDENTITY((! (read_1 + 1 == read_2)), ((! (read_1 + 1 == read_2))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), bool(bvec3(_GLF_IDENTITY(read_1 + 1 == read_2, ! (! _GLF_IDENTITY((read_1 + 1 == read_2), bool(bvec2(_GLF_IDENTITY((read_1 + 1 == read_2), ! (! ((read_1 + 1 == read_2)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), true, true)))))), _GLF_IDENTITY((bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1, (read_1 + 1) / 1u) == read_2, false || (read_1 + _GLF_IDENTITY(1, (1) << 0) == read_2)), _GLF_IDENTITY(! (! (read_1 + _GLF_IDENTITY(1, (1) | (1)) == read_2)), ! (! (! (! (read_1 + _GLF_IDENTITY(1, (1) | (1)) == read_2)))))), false || (_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1 == read_2, ! _GLF_IDENTITY((! (_GLF_IDENTITY(read_1 + 1 == read_2, ! (! (read_1 + 1 == read_2))))), _GLF_IDENTITY(((! (read_1 + 1 == read_2))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), (_GLF_IDENTITY(((! (read_1 + 1 == read_2))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), bool(bvec2(((! (read_1 + 1 == read_2))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)))) && true))), bool(bvec3(_GLF_IDENTITY(read_1 + 1 == read_2, ! (! _GLF_IDENTITY((read_1 + 1 == read_2), bool(bvec2(_GLF_IDENTITY((read_1 + 1 == read_2), ! _GLF_IDENTITY((! ((read_1 + 1 == read_2))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((! ((read_1 + 1 == read_2))), true && ((! ((read_1 + 1 == read_2)))))), bool(bvec2(! (_GLF_IDENTITY((! ((read_1 + 1 == read_2))), true && ((! ((read_1 + 1 == read_2)))))), true)))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), true, true))))))), ! (! ((bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1, (read_1 + 1) / 1u) == read_2, false || (read_1 + _GLF_IDENTITY(1, (1) << 0) == read_2)), _GLF_IDENTITY(! (! (read_1 + _GLF_IDENTITY(1, (1) | (1)) == read_2)), ! (! (! (! (read_1 + _GLF_IDENTITY(1, (1) | (1)) == read_2)))))), false || (_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1 == read_2, ! _GLF_IDENTITY((! (_GLF_IDENTITY(read_1 + 1 == read_2, ! (! (read_1 + 1 == read_2))))), _GLF_IDENTITY(((! (read_1 + 1 == read_2))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), (_GLF_IDENTITY(((! (read_1 + 1 == read_2))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), bool(bvec2(((! (read_1 + 1 == read_2))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)))) && true))), bool(bvec3(_GLF_IDENTITY(read_1 + 1 == read_2, ! (! _GLF_IDENTITY((read_1 + 1 == read_2), bool(bvec2(_GLF_IDENTITY((read_1 + 1 == read_2), ! _GLF_IDENTITY((! ((read_1 + 1 == read_2))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((! ((read_1 + 1 == read_2))), true && ((! ((read_1 + 1 == read_2)))))), bool(bvec2(! (_GLF_IDENTITY((! ((read_1 + 1 == read_2))), true && ((! ((read_1 + 1 == read_2)))))), true)))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), true, true)))))))))) && true))) && true)))))) || false))))), min(uint(_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1 == read_2, bool(bool(_GLF_IDENTITY(read_1 + 1 == read_2, ! (! (read_1 + 1 == read_2)))))), ! (! (_GLF_IDENTITY(read_1 + 1 == read_2, bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1 == read_2, _GLF_IDENTITY(! (! (read_1 + _GLF_IDENTITY(1, _GLF_IDENTITY((1) | (1), ~ (~ ((1) | (1))))) == read_2)), _GLF_IDENTITY(bool(bool(! (! (read_1 + _GLF_IDENTITY(1, _GLF_IDENTITY((1) | (1), ~ (~ ((1) | (1))))) == read_2)))), bool(bvec2(bool(bool(! (! (read_1 + _GLF_IDENTITY(1, _GLF_IDENTITY((1) | (1), ~ (~ ((1) | (1))))) == read_2)))), true))))), false || (_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1 == read_2, ! (! (read_1 + 1 == read_2))), bool(bvec3(_GLF_IDENTITY(read_1 + 1 == read_2, ! (_GLF_IDENTITY(! (read_1 + 1 == read_2), _GLF_IDENTITY(bool(bvec2(! (read_1 + 1 == read_2), false)), bool(bvec4(bool(bvec2(! (read_1 + 1 == read_2), false)), false, false, false)))))), true, true)))))))))))), _GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1 == read_2, bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1, clamp(read_1 + 1, read_1 + 1, _GLF_IDENTITY(_GLF_IDENTITY(read_1, (read_1) << 0u) + 1, 0u ^ (_GLF_IDENTITY(read_1 + 1, uint(uvec3(read_1 + 1, 0u, 0u))))))) == read_2, ! (! (_GLF_IDENTITY(read_1, (read_1) >> 0u) + 1 == read_2)))))), ! (! (_GLF_IDENTITY(read_1 + 1 == read_2, bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1 == read_2, ! (! (read_1 + _GLF_IDENTITY(1, _GLF_IDENTITY((_GLF_IDENTITY(1, (1) - 0)), (_GLF_IDENTITY((_GLF_IDENTITY(1, (1) - 0)), (0 << _GLF_IDENTITY(int(4), int(4))) | ((_GLF_IDENTITY(1, (1) - 0))))) * 1) | (1)) == read_2))), false || (_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1 == read_2, ! (! (_GLF_IDENTITY(read_1 + 1 == read_2, _GLF_IDENTITY(bool(bool(read_1 + 1 == read_2)), (bool(bool(read_1 + 1 == read_2))) && true))))), bool(bvec3(_GLF_IDENTITY(read_1 + 1 == read_2, ! (! (read_1 + 1 == read_2))), true, true)))))))))))), _GLF_IDENTITY((uint(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(read_1, 0u | (read_1)) + 1 == read_2, _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(read_1 + 1 == read_2, ! (! (read_1 + _GLF_IDENTITY(1, (_GLF_IDENTITY(1, 0 | (_GLF_IDENTITY(1, ~ (~ (1)))))) >> (0 ^ 0)) == read_2))))), ! (! (bool(bool(_GLF_IDENTITY(read_1 + 1 == read_2, ! (! (read_1 + _GLF_IDENTITY(1, (_GLF_IDENTITY(1, 0 | (_GLF_IDENTITY(1, ~ (~ (1)))))) >> (0 ^ 0)) == read_2))))))))), ! (! (_GLF_IDENTITY(read_1 + 1 == read_2, bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(read_1, min(_GLF_IDENTITY(read_1, 1u * (read_1)), read_1)) + 1 == read_2, ! (! (read_1 + _GLF_IDENTITY(1, (1) | (1)) == read_2))), false || _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1 == read_2, ! (! (read_1 + 1 == read_2))), bool(bvec3(_GLF_IDENTITY(read_1 + 1 == read_2, ! (! (read_1 + 1 == read_2))), true, _GLF_IDENTITY(true, ! (! (true))))))), ! (! ((_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1 == read_2, ! (! (read_1 + 1 == read_2))), bool(bvec3(_GLF_IDENTITY(read_1 + 1 == read_2, ! (! (read_1 + 1 == read_2))), true, _GLF_IDENTITY(true, ! (! (true))))))))))))))))))) | 0u, 0u ^ (_GLF_IDENTITY((uint(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(read_1, 0u | (read_1)) + 1 == read_2, _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(read_1 + 1 == read_2, ! (! (read_1 + _GLF_IDENTITY(1, (_GLF_IDENTITY(1, 0 | (_GLF_IDENTITY(1, ~ (~ (1)))))) >> (0 ^ 0)) == read_2))))), ! (! (bool(bool(_GLF_IDENTITY(read_1 + 1 == read_2, ! (! (read_1 + _GLF_IDENTITY(1, (_GLF_IDENTITY(1, 0 | (_GLF_IDENTITY(1, ~ (~ (1)))))) >> (0 ^ 0)) == read_2))))))))), ! (! (_GLF_IDENTITY(read_1 + 1 == read_2, bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(read_1, min(_GLF_IDENTITY(read_1, 1u * (read_1)), read_1)) + 1 == read_2, ! (! (read_1 + _GLF_IDENTITY(1, (1) | (1)) == read_2))), false || _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1 == read_2, ! (! (read_1 + 1 == read_2))), bool(bvec3(_GLF_IDENTITY(read_1 + 1 == read_2, ! (! (read_1 + 1 == read_2))), true, _GLF_IDENTITY(true, ! (! (true))))))), ! (! ((_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1 == read_2, ! (! (read_1 + 1 == read_2))), bool(bvec3(_GLF_IDENTITY(read_1 + 1 == read_2, ! (! (read_1 + 1 == read_2))), true, _GLF_IDENTITY(true, ! (! (true))))))))))))))))))) | 0u, ~ (~ ((uint(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(read_1, 0u | (read_1)) + 1 == read_2, _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(read_1 + 1 == read_2, ! (! (read_1 + _GLF_IDENTITY(1, (_GLF_IDENTITY(1, 0 | (_GLF_IDENTITY(1, ~ (~ (1)))))) >> (0 ^ 0)) == read_2))))), ! (! (bool(bool(_GLF_IDENTITY(read_1 + 1 == read_2, ! (! (read_1 + _GLF_IDENTITY(1, (_GLF_IDENTITY(1, 0 | (_GLF_IDENTITY(1, ~ (~ (1)))))) >> (0 ^ 0)) == read_2))))))))), ! (! (_GLF_IDENTITY(read_1 + 1 == read_2, bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(read_1, min(_GLF_IDENTITY(read_1, 1u * (read_1)), read_1)) + 1 == read_2, ! (! (read_1 + _GLF_IDENTITY(1, (1) | (1)) == read_2))), false || _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1 == read_2, ! (! (read_1 + 1 == read_2))), bool(bvec3(_GLF_IDENTITY(read_1 + 1 == read_2, ! (! (read_1 + 1 == read_2))), true, _GLF_IDENTITY(true, ! (! (true))))))), ! (! ((_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1 == read_2, ! (! (read_1 + 1 == read_2))), bool(bvec3(_GLF_IDENTITY(read_1 + 1 == read_2, ! (! (read_1 + 1 == read_2))), true, _GLF_IDENTITY(true, ! (! (true))))))))))))))))))) | 0u)))))))), uint(_GLF_IDENTITY(uvec2(_GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(read_1 + _GLF_IDENTITY(1, (1) ^ 0) == read_2, bool(bool(_GLF_IDENTITY(read_1 + 1 == read_2, ! (_GLF_IDENTITY(! (read_1 + 1 == read_2), true && (! (read_1 + 1 == read_2)))))))), ! (! (_GLF_IDENTITY(read_1 + 1 == _GLF_IDENTITY(read_2, (read_2) - 0u), bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1 == read_2, ! (! (read_1 + _GLF_IDENTITY(1, (1) | (1)) == read_2))), false || (_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1 == read_2, ! (_GLF_IDENTITY(! (read_1 + 1 == read_2), bool(bool(! (read_1 + 1 == read_2)))))), bool(bvec3(_GLF_IDENTITY(read_1 + 1 == _GLF_IDENTITY(read_2, uint(uint(read_2))), _GLF_IDENTITY(! (! (read_1 + 1 == read_2)), (! (! (read_1 + 1 == read_2))) && true)), true, true))))))))))), (_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1 == read_2, bool(bool(_GLF_IDENTITY(read_1 + 1 == read_2, _GLF_IDENTITY(! (! _GLF_IDENTITY((read_1 + 1 == read_2), ! (! (_GLF_IDENTITY((read_1 + 1 == read_2), true && ((read_1 + 1 == read_2))))))), ! (_GLF_IDENTITY(! (! (! (read_1 + 1 == read_2))), bool(bvec3(_GLF_IDENTITY(! (! (! (read_1 + 1 == read_2))), bool(bvec3(_GLF_IDENTITY(! (! (! (read_1 + 1 == read_2))), bool(bvec2(! (! (! (read_1 + 1 == read_2))), true))), true, true))), false, false))))))))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(read_1 + _GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) + 0)) ^ 0) == read_2, _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1 == read_2, false || (read_1 + _GLF_IDENTITY(1, (1) << 0) == read_2)), _GLF_IDENTITY(! (! (read_1 + _GLF_IDENTITY(1, (1) | (1)) == read_2)), ! (! (! (! (read_1 + _GLF_IDENTITY(1, (1) | (1)) == read_2)))))), false || (_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1 == read_2, ! _GLF_IDENTITY((! (read_1 + 1 == read_2)), ((! (read_1 + 1 == read_2))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), bool(bvec3(_GLF_IDENTITY(read_1 + 1 == read_2, ! (! _GLF_IDENTITY((read_1 + 1 == read_2), bool(bvec2(_GLF_IDENTITY((read_1 + 1 == read_2), ! (! ((read_1 + 1 == read_2)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), true, true)))))), (bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1 == read_2, false || (read_1 + _GLF_IDENTITY(1, (1) << 0) == read_2)), _GLF_IDENTITY(! (! (read_1 + _GLF_IDENTITY(1, (1) | (1)) == read_2)), ! (! (! (! (read_1 + _GLF_IDENTITY(1, (1) | (1)) == read_2)))))), false || (_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1 == read_2, ! _GLF_IDENTITY((! (read_1 + 1 == read_2)), ((! (read_1 + 1 == read_2))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), bool(bvec3(_GLF_IDENTITY(read_1 + 1 == read_2, ! (! _GLF_IDENTITY((read_1 + 1 == read_2), bool(bvec2(_GLF_IDENTITY((read_1 + 1 == read_2), ! (! ((read_1 + 1 == read_2)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), true, true))))))) && true)), (bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1 == read_2, false || (read_1 + _GLF_IDENTITY(1, (1) << 0) == read_2)), _GLF_IDENTITY(! (! (read_1 + _GLF_IDENTITY(1, (1) | (1)) == read_2)), ! (! (! (! (read_1 + _GLF_IDENTITY(1, (1) | (1)) == read_2)))))), false || (_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1 == read_2, ! _GLF_IDENTITY((! (read_1 + 1 == read_2)), ((! (read_1 + 1 == read_2))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), bool(bvec3(_GLF_IDENTITY(read_1 + 1 == read_2, ! (! _GLF_IDENTITY((read_1 + 1 == read_2), bool(bvec2(_GLF_IDENTITY((read_1 + 1 == read_2), ! (! ((read_1 + 1 == read_2)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), true, true)))))), (bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1 == read_2, false || (read_1 + _GLF_IDENTITY(1, (1) << 0) == read_2)), _GLF_IDENTITY(! (! (read_1 + _GLF_IDENTITY(1, (1) | (1)) == read_2)), ! (! (! (! (read_1 + _GLF_IDENTITY(1, (1) | (1)) == read_2)))))), false || (_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1 == read_2, ! _GLF_IDENTITY((! (read_1 + 1 == read_2)), ((! (read_1 + 1 == read_2))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), bool(bvec3(_GLF_IDENTITY(read_1 + 1 == read_2, ! (! _GLF_IDENTITY((read_1 + 1 == read_2), bool(bvec2(_GLF_IDENTITY((read_1 + 1 == read_2), ! (! ((read_1 + 1 == read_2)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), true, true))))))) && true))) && true)), ! (! (_GLF_IDENTITY(read_1 + _GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) + 0)) ^ 0) == read_2, _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1 == read_2, false || (read_1 + _GLF_IDENTITY(1, (1) << _GLF_IDENTITY(0, ~ (~ (0)))) == _GLF_IDENTITY(read_2, (_GLF_IDENTITY(read_2, (read_2) >> 0u)) * 1u))), _GLF_IDENTITY(! (! (read_1 + _GLF_IDENTITY(_GLF_IDENTITY(1, (1) | (1)), min(_GLF_IDENTITY(1, (1) | (1)), _GLF_IDENTITY(_GLF_IDENTITY(1, (1) | (1)), clamp(_GLF_IDENTITY(1, (1) | (1)), _GLF_IDENTITY(1, (1) | (1)), _GLF_IDENTITY(1, (1) | (1)))))) == read_2)), ! (! (! (! (_GLF_IDENTITY(read_1 + _GLF_IDENTITY(1, (1) | (1)), ~ (~ (read_1 + _GLF_IDENTITY(1, (1) | (1))))) == read_2)))))), false || (_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1 == read_2, ! _GLF_IDENTITY((! (read_1 + 1 == read_2)), ((! (read_1 + 1 == read_2))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), bool(bvec3(_GLF_IDENTITY(read_1 + 1 == _GLF_IDENTITY(read_2, (read_2) | (_GLF_IDENTITY(read_2, (_GLF_IDENTITY(read_2, max(read_2, read_2))) << 0u))), ! (! _GLF_IDENTITY((read_1 + 1 == read_2), bool(bvec2(_GLF_IDENTITY((read_1 + 1 == read_2), ! (! ((read_1 + 1 == read_2)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), true, true)))))), (bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1 == read_2, false || (read_1 + _GLF_IDENTITY(1, (1) << 0) == read_2)), _GLF_IDENTITY(! (! (read_1 + _GLF_IDENTITY(1, (1) | (1)) == read_2)), ! (! (! (! (read_1 + _GLF_IDENTITY(1, (1) | (1)) == read_2)))))), false || (_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1 == read_2, ! _GLF_IDENTITY((! (read_1 + 1 == read_2)), ((! (read_1 + 1 == read_2))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), bool(bvec3(_GLF_IDENTITY(read_1 + 1 == read_2, ! (! _GLF_IDENTITY((read_1 + 1 == read_2), bool(bvec2(_GLF_IDENTITY((read_1 + 1 == read_2), ! (! ((read_1 + 1 == read_2)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), true, true))))), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1 == read_2, false || (read_1 + _GLF_IDENTITY(1, (1) << 0) == read_2)), _GLF_IDENTITY(! (! (read_1 + _GLF_IDENTITY(1, (1) | (1)) == read_2)), ! (! (! (! (read_1 + _GLF_IDENTITY(1, (1) | (1)) == read_2)))))), false || (_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1 == read_2, ! _GLF_IDENTITY((! (read_1 + 1 == read_2)), ((! (read_1 + 1 == read_2))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), bool(bvec3(_GLF_IDENTITY(read_1 + 1 == read_2, ! (! _GLF_IDENTITY((read_1 + 1 == read_2), bool(bvec2(_GLF_IDENTITY((read_1 + 1 == read_2), ! (! ((read_1 + 1 == read_2)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), true, true))))), false, false), bvec3(bvec3(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1 == read_2, false || (read_1 + _GLF_IDENTITY(1, (1) << 0) == read_2)), _GLF_IDENTITY(! (! (read_1 + _GLF_IDENTITY(1, (1) | (1)) == read_2)), ! (! (! (! (read_1 + _GLF_IDENTITY(1, (1) | (1)) == read_2)))))), false || (_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1 == read_2, ! _GLF_IDENTITY((! (read_1 + 1 == read_2)), ((! (read_1 + 1 == read_2))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), bool(bvec3(_GLF_IDENTITY(read_1 + 1 == read_2, ! (! _GLF_IDENTITY((read_1 + 1 == read_2), bool(bvec2(_GLF_IDENTITY((read_1 + 1 == read_2), ! (! ((read_1 + 1 == read_2)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), true, true))))), false, false)))))))) && true)), (bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1 == read_2, false || (read_1 + _GLF_IDENTITY(1, (1) << 0) == read_2)), (_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1 == read_2, (read_1 + 1 == read_2) && true), _GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))) || (read_1 + _GLF_IDENTITY(1, (1) << 0) == read_2))) && true), _GLF_IDENTITY(! (! (read_1 + _GLF_IDENTITY(1, (1) | (1)) == read_2)), ! (! (! (! (read_1 + _GLF_IDENTITY(1, (1) | (1)) == read_2)))))), false || (_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1 == read_2, ! _GLF_IDENTITY((! (read_1 + 1 == read_2)), ((! (read_1 + 1 == read_2))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), bool(bvec3(_GLF_IDENTITY(read_1 + 1 == read_2, ! (! _GLF_IDENTITY((read_1 + 1 == read_2), bool(bvec2(_GLF_IDENTITY((read_1 + 1 == read_2), ! (! ((read_1 + 1 == read_2)))), _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y, injectionSwitch.y))))))))), true, true)))))), (bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1 == read_2, false || (read_1 + _GLF_IDENTITY(1, (1) << 0) == read_2)), _GLF_IDENTITY(! (! (read_1 + _GLF_IDENTITY(1, (1) | (1)) == read_2)), ! (! (! (! (read_1 + _GLF_IDENTITY(1, (1) | (1)) == read_2)))))), false || (_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1 == read_2, ! _GLF_IDENTITY((! (read_1 + 1 == read_2)), ((! (read_1 + 1 == read_2))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), bool(bvec3(_GLF_IDENTITY(read_1 + 1 == read_2, ! (! _GLF_IDENTITY((read_1 + 1 == read_2), bool(bvec2(_GLF_IDENTITY((read_1 + 1 == read_2), ! (! ((read_1 + 1 == read_2)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), true, true))))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1 == read_2, false || (read_1 + _GLF_IDENTITY(1, (1) << 0) == read_2)), _GLF_IDENTITY(! (! (read_1 + _GLF_IDENTITY(1, (1) | (1)) == read_2)), ! (! (! (! (read_1 + _GLF_IDENTITY(1, (1) | (1)) == read_2)))))), false || (_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1 == read_2, ! _GLF_IDENTITY((! (read_1 + 1 == read_2)), ((! (read_1 + 1 == read_2))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), bool(bvec3(_GLF_IDENTITY(read_1 + 1 == read_2, ! (! _GLF_IDENTITY((read_1 + 1 == read_2), bool(bvec2(_GLF_IDENTITY((read_1 + 1 == read_2), ! (! ((read_1 + 1 == read_2)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), true, true))))), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1 == read_2, false || (read_1 + _GLF_IDENTITY(1, (1) << 0) == read_2)), _GLF_IDENTITY(! (! (read_1 + _GLF_IDENTITY(1, (1) | (1)) == read_2)), ! (! (! (! (read_1 + _GLF_IDENTITY(1, (1) | (1)) == read_2)))))), false || (_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1 == read_2, ! _GLF_IDENTITY((! (read_1 + 1 == read_2)), ((! (read_1 + 1 == read_2))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), bool(bvec3(_GLF_IDENTITY(read_1 + 1 == read_2, ! (! _GLF_IDENTITY((read_1 + 1 == read_2), bool(bvec2(_GLF_IDENTITY((read_1 + 1 == read_2), ! (! ((read_1 + 1 == read_2)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), true, true)))))), false || (bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1 == read_2, false || (read_1 + _GLF_IDENTITY(1, (1) << 0) == read_2)), _GLF_IDENTITY(! (! (read_1 + _GLF_IDENTITY(1, (1) | (1)) == read_2)), ! (! (! (! (read_1 + _GLF_IDENTITY(1, (1) | (1)) == read_2)))))), false || (_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1 == read_2, ! _GLF_IDENTITY((! (read_1 + 1 == read_2)), ((! (read_1 + 1 == read_2))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), bool(bvec3(_GLF_IDENTITY(read_1 + 1 == read_2, ! (! _GLF_IDENTITY((read_1 + 1 == read_2), bool(bvec2(_GLF_IDENTITY((read_1 + 1 == read_2), ! (! ((read_1 + 1 == read_2)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), true, true))))))))))))))) && true))) && true))))))))) || false)), ~ _GLF_IDENTITY((~ (uint(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1 == read_2, bool(bool(_GLF_IDENTITY(read_1 + 1 == read_2, ! (! (_GLF_IDENTITY(read_1 + 1, max(read_1 + 1, read_1 + 1)) == read_2)))))), ! (! (_GLF_IDENTITY(read_1 + 1 == read_2, bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1 == read_2, ! (! (read_1 + _GLF_IDENTITY(1, (1) | (1)) == read_2))), false || (_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1 == read_2, ! (_GLF_IDENTITY(! (read_1 + 1 == read_2), ! (! (! (read_1 + 1 == read_2)))))), bool(bvec3(_GLF_IDENTITY(read_1 + 1 == read_2, ! (! (read_1 + 1 == read_2))), true, true))))))))))), (_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1 == read_2, bool(bool(_GLF_IDENTITY(read_1 + 1 == read_2, _GLF_IDENTITY(! (! (read_1 + 1 == read_2)), ! (_GLF_IDENTITY(! (! (! (read_1 + 1 == _GLF_IDENTITY(read_2, min(read_2, read_2))))), bool(bvec3(! (! (! (read_1 + 1 == read_2))), false, false))))))))), ! (! (_GLF_IDENTITY(read_1 + _GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) + 0)) ^ 0) == read_2, _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1 == read_2, false || (read_1 + _GLF_IDENTITY(1, (1) << 0) == read_2)), _GLF_IDENTITY(! (! (read_1 + _GLF_IDENTITY(1, (1) | (1)) == read_2)), _GLF_IDENTITY(! (! (! (! (read_1 + _GLF_IDENTITY(1, (1) | (1)) == read_2)))), (! (! (! (! (read_1 + _GLF_IDENTITY(_GLF_IDENTITY(1, (1) | (1)), clamp(_GLF_IDENTITY(1, (1) | (1)), _GLF_IDENTITY(1, (1) | (1)), _GLF_IDENTITY(1, (1) | (1)))) == read_2))))) || false))), false || (_GLF_IDENTITY(_GLF_IDENTITY(read_1 + _GLF_IDENTITY(1, max(1, _GLF_IDENTITY(1, (1) / 1))) == read_2, ! _GLF_IDENTITY((! (read_1 + 1 == read_2)), ((! (read_1 + 1 == _GLF_IDENTITY(read_2, 0u | (_GLF_IDENTITY(read_2, (read_2) | 0u)))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), bool(bvec3(_GLF_IDENTITY(read_1 + 1 == read_2, ! (! _GLF_IDENTITY((read_1 + 1 == read_2), bool(bvec2(_GLF_IDENTITY((read_1 + 1 == read_2), ! (! ((read_1 + 1 == read_2)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), true, true)))))), (bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1 == read_2, false || (_GLF_IDENTITY(read_1 + _GLF_IDENTITY(1, (1) << 0) == read_2, bool(bvec4(read_1 + _GLF_IDENTITY(1, (1) << 0) == read_2, true, true, false))))), _GLF_IDENTITY(! (! (_GLF_IDENTITY(read_1 + _GLF_IDENTITY(1, (1) | (1)) == read_2, true && (read_1 + _GLF_IDENTITY(1, (1) | (1)) == read_2)))), ! (! (! (! (read_1 + _GLF_IDENTITY(1, (1) | (1)) == _GLF_IDENTITY(read_2, (false ? _GLF_FUZZED(104627u) : _GLF_IDENTITY(read_2, (false ? _GLF_FUZZED(subgroup_id) : read_2)))))))))), false || (_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1 == read_2, ! _GLF_IDENTITY((! (_GLF_IDENTITY(read_1, clamp(read_1, read_1, _GLF_IDENTITY(read_1, (read_1) << 0u))) + _GLF_IDENTITY(1, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(1, min(1, 1))), 0 + (_GLF_IDENTITY(~ (_GLF_IDENTITY(1, min(1, 1))), (~ (_GLF_IDENTITY(1, min(1, 1)))) - 0))))) == read_2)), ((! (read_1 + 1 == read_2))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1, max(read_1 + 1, read_1 + 1)) == _GLF_IDENTITY(read_2, (read_2) | (_GLF_IDENTITY(read_2, max(read_2, read_2)))), ! (! _GLF_IDENTITY((read_1 + 1 == read_2), bool(bvec2(_GLF_IDENTITY((read_1 + _GLF_IDENTITY(1, ~ (~ (1))) == read_2), ! (! ((read_1 + 1 == read_2)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), true, true))))))) && true)), (bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(read_1 + _GLF_IDENTITY(1, 1 * (_GLF_IDENTITY(1, min(1, 1)))) == read_2, false || (read_1 + _GLF_IDENTITY(1, (1) << 0) == read_2)), _GLF_IDENTITY(_GLF_IDENTITY(! (! (read_1 + _GLF_IDENTITY(1, (1) | (1)) == read_2)), true && (_GLF_IDENTITY(! (! (read_1 + _GLF_IDENTITY(1, (1) | (1)) == read_2)), false || (! (! _GLF_IDENTITY((read_1 + _GLF_IDENTITY(1, _GLF_IDENTITY((1), ~ (~ (_GLF_IDENTITY((1), int(ivec4((1), 1, 1, ((1 << _GLF_IDENTITY(int(7), int(7))) >> _GLF_IDENTITY(int(7), int(7))))))))) | (1)) == read_2), ! (! ((read_1 + _GLF_IDENTITY(1, _GLF_IDENTITY((1), ~ (~ (_GLF_IDENTITY((1), int(ivec4((1), 1, 1, ((1 << _GLF_IDENTITY(int(7), int(7))) >> _GLF_IDENTITY(int(7), int(7))))))))) | (1)) == read_2))))))))), ! (! (! (! (read_1 + _GLF_IDENTITY(1, (1) | (1)) == read_2)))))), false || (_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1 == read_2, ! _GLF_IDENTITY((! _GLF_IDENTITY((read_1 + 1 == read_2), false || ((read_1 + 1 == read_2)))), ((! (read_1 + 1 == read_2))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), bool(bvec3(_GLF_IDENTITY(read_1 + 1 == read_2, ! (! _GLF_IDENTITY((_GLF_IDENTITY(read_1, (false ? _GLF_FUZZED(num_workgroup) : _GLF_IDENTITY(read_1, clamp(read_1, read_1, read_1)))) + _GLF_IDENTITY(1, clamp(1, 1, 1)) == read_2), bool(bvec2(_GLF_IDENTITY((read_1 + 1 == read_2), ! (! ((read_1 + 1 == read_2)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), true, true)))))), (bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1 == read_2, false || (read_1 + _GLF_IDENTITY(1, (1) << 0) == read_2)), _GLF_IDENTITY(! (! (read_1 + _GLF_IDENTITY(1, (1) | (1)) == read_2)), ! (! (! (! (read_1 + _GLF_IDENTITY(1, (1) | (1)) == read_2)))))), (_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1 == read_2, _GLF_IDENTITY(false || (read_1 + _GLF_IDENTITY(1, (1) << 0) == read_2), false || (_GLF_IDENTITY(false || (read_1 + _GLF_IDENTITY(1, (1) << 0) == read_2), ! (! (false || (_GLF_IDENTITY(read_1, uint(_GLF_IDENTITY(uvec3(read_1, 1u, 0u), clamp(uvec3(read_1, 1u, 0u), uvec3(read_1, 1u, 0u), uvec3(read_1, 1u, 0u))))) + _GLF_IDENTITY(1, (_GLF_IDENTITY(1, (false ? _GLF_FUZZED(91674) : _GLF_IDENTITY(1, (1) << 0)))) << 0) == read_2))))))), _GLF_IDENTITY(! (! (read_1 + _GLF_IDENTITY(1, (1) | (1)) == read_2)), ! (_GLF_IDENTITY(! (! (! (read_1 + _GLF_IDENTITY(1, (1) | (1)) == read_2))), false || (! (! (! (_GLF_IDENTITY(read_1, max(read_1, _GLF_IDENTITY(read_1, ~ (~ (read_1))))) + _GLF_IDENTITY(1, _GLF_IDENTITY((1), min((1), _GLF_IDENTITY((1), int(ivec2((1), 0))))) | (1)) == read_2))))))))) && true), false || (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1, clamp(_GLF_IDENTITY(read_1 + 1, max(read_1 + 1, read_1 + 1)), read_1 + 1, _GLF_IDENTITY(read_1 + 1, (read_1 + 1) | (read_1 + 1)))) == read_2, ! _GLF_IDENTITY((! (read_1 + 1 == read_2)), ((! (read_1 + 1 == read_2))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(read_1 + 1 == read_2, ! (! _GLF_IDENTITY((_GLF_IDENTITY(read_1 + 1, (read_1 + 1) | (read_1 + 1)) == read_2), bool(bvec2(_GLF_IDENTITY((read_1 + 1 == read_2), ! (! ((read_1 + 1 == read_2)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), true, true)), ! (! (bool(bvec3(_GLF_IDENTITY(read_1 + 1 == read_2, ! (! _GLF_IDENTITY((_GLF_IDENTITY(read_1 + 1, (read_1 + 1) | (read_1 + 1)) == read_2), bool(bvec2(_GLF_IDENTITY((read_1 + 1 == read_2), ! (! ((read_1 + 1 == read_2)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), true, true)))))))))) && true))) && true)))))) || _GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, false)), ! (! (bool(bvec2(false, false))))))))))))), ((~ (uint(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1 == read_2, bool(bool(_GLF_IDENTITY(read_1 + 1 == read_2, ! (! (_GLF_IDENTITY(read_1 + 1, max(read_1 + 1, read_1 + 1)) == read_2)))))), ! (! (_GLF_IDENTITY(read_1 + 1 == read_2, bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1 == read_2, ! (! (read_1 + _GLF_IDENTITY(1, (1) | (1)) == read_2))), false || (_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1 == read_2, ! (_GLF_IDENTITY(! (read_1 + 1 == read_2), ! (! (! (read_1 + 1 == read_2)))))), bool(bvec3(_GLF_IDENTITY(read_1 + 1 == read_2, ! (! (read_1 + 1 == read_2))), true, true))))))))))), (_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1 == read_2, bool(bool(_GLF_IDENTITY(read_1 + 1 == read_2, _GLF_IDENTITY(! (! (read_1 + 1 == read_2)), ! (_GLF_IDENTITY(! (! (! (read_1 + 1 == _GLF_IDENTITY(read_2, min(read_2, read_2))))), bool(bvec3(! (! (! (read_1 + 1 == read_2))), false, false))))))))), ! (! (_GLF_IDENTITY(read_1 + _GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) + 0)) ^ 0) == read_2, _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1 == read_2, false || (read_1 + _GLF_IDENTITY(1, (1) << 0) == read_2)), _GLF_IDENTITY(! (! (read_1 + _GLF_IDENTITY(1, (1) | (1)) == read_2)), _GLF_IDENTITY(! (! (! (! (read_1 + _GLF_IDENTITY(1, (1) | (1)) == read_2)))), (! (! (! (! (read_1 + _GLF_IDENTITY(_GLF_IDENTITY(1, (1) | (1)), clamp(_GLF_IDENTITY(1, (1) | (1)), _GLF_IDENTITY(1, (1) | (1)), _GLF_IDENTITY(1, (1) | (1)))) == read_2))))) || false))), false || (_GLF_IDENTITY(_GLF_IDENTITY(read_1 + _GLF_IDENTITY(1, max(1, _GLF_IDENTITY(1, (1) / 1))) == read_2, ! _GLF_IDENTITY((! (read_1 + 1 == read_2)), ((! (read_1 + 1 == _GLF_IDENTITY(read_2, 0u | (_GLF_IDENTITY(read_2, (read_2) | 0u)))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), bool(bvec3(_GLF_IDENTITY(read_1 + 1 == read_2, ! (! _GLF_IDENTITY((read_1 + 1 == read_2), bool(bvec2(_GLF_IDENTITY((read_1 + 1 == read_2), ! (! ((read_1 + 1 == read_2)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), true, true)))))), (bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1 == read_2, false || (_GLF_IDENTITY(read_1 + _GLF_IDENTITY(1, (1) << 0) == read_2, bool(bvec4(read_1 + _GLF_IDENTITY(1, (1) << 0) == read_2, true, true, false))))), _GLF_IDENTITY(! (! (_GLF_IDENTITY(read_1 + _GLF_IDENTITY(1, (1) | (1)) == read_2, true && (read_1 + _GLF_IDENTITY(1, (1) | (1)) == read_2)))), ! (! (! (! (read_1 + _GLF_IDENTITY(1, (1) | (1)) == _GLF_IDENTITY(read_2, (false ? _GLF_FUZZED(104627u) : _GLF_IDENTITY(read_2, (false ? _GLF_FUZZED(subgroup_id) : read_2)))))))))), false || (_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1 == read_2, ! _GLF_IDENTITY((! (_GLF_IDENTITY(read_1, clamp(read_1, read_1, _GLF_IDENTITY(read_1, (read_1) << 0u))) + _GLF_IDENTITY(1, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(1, min(1, 1))), 0 + (_GLF_IDENTITY(~ (_GLF_IDENTITY(1, min(1, 1))), (~ (_GLF_IDENTITY(1, min(1, 1)))) - 0))))) == read_2)), ((! (read_1 + 1 == read_2))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1, max(read_1 + 1, read_1 + 1)) == _GLF_IDENTITY(read_2, (read_2) | (_GLF_IDENTITY(read_2, max(read_2, read_2)))), ! (! _GLF_IDENTITY((read_1 + 1 == read_2), bool(bvec2(_GLF_IDENTITY((read_1 + _GLF_IDENTITY(1, ~ (~ (1))) == read_2), ! (! ((read_1 + 1 == read_2)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), true, true))))))) && true)), (bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(read_1 + _GLF_IDENTITY(1, 1 * (_GLF_IDENTITY(1, min(1, 1)))) == read_2, false || (read_1 + _GLF_IDENTITY(1, (1) << 0) == read_2)), _GLF_IDENTITY(_GLF_IDENTITY(! (! (read_1 + _GLF_IDENTITY(1, (1) | (1)) == read_2)), true && (_GLF_IDENTITY(! (! (read_1 + _GLF_IDENTITY(1, (1) | (1)) == read_2)), false || (! (! _GLF_IDENTITY((read_1 + _GLF_IDENTITY(1, _GLF_IDENTITY((1), ~ (~ (_GLF_IDENTITY((1), int(ivec4((1), 1, 1, ((1 << _GLF_IDENTITY(int(7), int(7))) >> _GLF_IDENTITY(int(7), int(7))))))))) | (1)) == read_2), ! (! ((read_1 + _GLF_IDENTITY(1, _GLF_IDENTITY((1), ~ (~ (_GLF_IDENTITY((1), int(ivec4((1), 1, 1, ((1 << _GLF_IDENTITY(int(7), int(7))) >> _GLF_IDENTITY(int(7), int(7))))))))) | (1)) == read_2))))))))), ! (! (! (! (read_1 + _GLF_IDENTITY(1, (1) | (1)) == read_2)))))), false || (_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1 == read_2, ! _GLF_IDENTITY((! _GLF_IDENTITY((read_1 + 1 == read_2), false || ((read_1 + 1 == read_2)))), ((! (read_1 + 1 == read_2))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), bool(bvec3(_GLF_IDENTITY(read_1 + 1 == read_2, ! (! _GLF_IDENTITY((_GLF_IDENTITY(read_1, (false ? _GLF_FUZZED(num_workgroup) : _GLF_IDENTITY(read_1, clamp(read_1, read_1, read_1)))) + _GLF_IDENTITY(1, clamp(1, 1, 1)) == read_2), bool(bvec2(_GLF_IDENTITY((read_1 + 1 == read_2), ! (! ((read_1 + 1 == read_2)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), true, true)))))), (bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1 == read_2, false || (read_1 + _GLF_IDENTITY(1, (1) << 0) == read_2)), _GLF_IDENTITY(! (! (read_1 + _GLF_IDENTITY(1, (1) | (1)) == read_2)), ! (! (! (! (read_1 + _GLF_IDENTITY(1, (1) | (1)) == read_2)))))), (_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1 == read_2, _GLF_IDENTITY(false || (read_1 + _GLF_IDENTITY(1, (1) << 0) == read_2), false || (_GLF_IDENTITY(false || (read_1 + _GLF_IDENTITY(1, (1) << 0) == read_2), ! (! (false || (_GLF_IDENTITY(read_1, uint(_GLF_IDENTITY(uvec3(read_1, 1u, 0u), clamp(uvec3(read_1, 1u, 0u), uvec3(read_1, 1u, 0u), uvec3(read_1, 1u, 0u))))) + _GLF_IDENTITY(1, (_GLF_IDENTITY(1, (false ? _GLF_FUZZED(91674) : _GLF_IDENTITY(1, (1) << 0)))) << 0) == read_2))))))), _GLF_IDENTITY(! (! (read_1 + _GLF_IDENTITY(1, (1) | (1)) == read_2)), ! (_GLF_IDENTITY(! (! (! (read_1 + _GLF_IDENTITY(1, (1) | (1)) == read_2))), false || (! (! (! (_GLF_IDENTITY(read_1, max(read_1, _GLF_IDENTITY(read_1, ~ (~ (read_1))))) + _GLF_IDENTITY(1, _GLF_IDENTITY((1), min((1), _GLF_IDENTITY((1), int(ivec2((1), 0))))) | (1)) == read_2))))))))) && true), false || (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1, clamp(_GLF_IDENTITY(read_1 + 1, max(read_1 + 1, read_1 + 1)), read_1 + 1, _GLF_IDENTITY(read_1 + 1, (read_1 + 1) | (read_1 + 1)))) == read_2, ! _GLF_IDENTITY((! (read_1 + 1 == read_2)), ((! (read_1 + 1 == read_2))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(read_1 + 1 == read_2, ! (! _GLF_IDENTITY((_GLF_IDENTITY(read_1 + 1, (read_1 + 1) | (read_1 + 1)) == read_2), bool(bvec2(_GLF_IDENTITY((read_1 + 1 == read_2), ! (! ((read_1 + 1 == read_2)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), true, true)), ! (! (bool(bvec3(_GLF_IDENTITY(read_1 + 1 == read_2, ! (! _GLF_IDENTITY((_GLF_IDENTITY(read_1 + 1, (read_1 + 1) | (read_1 + 1)) == read_2), bool(bvec2(_GLF_IDENTITY((read_1 + 1 == read_2), ! (! ((read_1 + 1 == read_2)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), true, true)))))))))) && true))) && true)))))) || _GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, false)), ! (! (bool(bvec2(false, false)))))))))))))) / 1u)), min(uint(_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1 == read_2, bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(read_1, (read_1) << 0u) + 1 == read_2, ! (! (read_1 + 1 == read_2)))))), ! (! (_GLF_IDENTITY(read_1 + 1 == read_2, bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1 == read_2, ! (! (read_1 + _GLF_IDENTITY(1, _GLF_IDENTITY((1) | (1), ~ _GLF_IDENTITY((~ ((1) | (1))), max((~ ((1) | (1))), (~ ((1) | (1))))))) == _GLF_IDENTITY(read_2, (read_2) | 0u)))), false || _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1 == read_2, ! (! (read_1 + 1 == read_2))), bool(bvec3(_GLF_IDENTITY(read_1 + 1 == read_2, ! (! (read_1 + 1 == read_2))), true, true)))), ! (! ((_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1 == read_2, ! (! (read_1 + 1 == read_2))), bool(bvec3(_GLF_IDENTITY(read_1 + 1 == read_2, ! (! (read_1 + 1 == read_2))), true, true))))))))))))))), _GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1 == read_2, bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1, clamp(read_1 + 1, read_1 + 1, _GLF_IDENTITY(read_1 + 1, 0u ^ (_GLF_IDENTITY(read_1 + 1, uint(uvec3(read_1 + 1, 0u, 0u))))))) == read_2, ! (! (read_1 + 1 == read_2)))))), true && (_GLF_IDENTITY(read_1 + 1 == read_2, bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1, clamp(read_1 + 1, read_1 + 1, _GLF_IDENTITY(read_1 + 1, 0u ^ (_GLF_IDENTITY(read_1 + 1, uint(uvec3(read_1 + 1, 0u, 0u))))))) == read_2, ! (! (read_1 + 1 == read_2)))))))), ! (! (_GLF_IDENTITY(read_1 + 1 == read_2, bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1 == read_2, ! (! (read_1 + _GLF_IDENTITY(1, (1) | (1)) == read_2))), false || (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1 == read_2, ! (_GLF_IDENTITY(! (read_1 + 1 == read_2), true && (! (read_1 + 1 == read_2))))), ! (! (_GLF_IDENTITY(read_1 + 1 == read_2, _GLF_IDENTITY(bool(bool(read_1 + 1 == read_2)), (bool(bool(read_1 + 1 == read_2))) && true))))), bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1 == read_2, ! (! (read_1 + 1 == read_2))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(read_1 + 1 == read_2, ! (! (read_1 + 1 == read_2))))), true, true)))))))))))), (uint(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(read_1, 0u | (read_1)) + 1 == read_2, _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(read_1 + 1 == read_2, ! (! (read_1 + _GLF_IDENTITY(1, (_GLF_IDENTITY(1, 0 | (_GLF_IDENTITY(1, ~ (~ (1)))))) >> (0 ^ 0)) == read_2))))), ! (! (bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1 == read_2, ! (! (read_1 + _GLF_IDENTITY(1, (_GLF_IDENTITY(1, 0 | (_GLF_IDENTITY(1, ~ (~ (1)))))) >> (0 ^ 0)) == read_2))), false || (_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1 == read_2, ! (! (read_1 + _GLF_IDENTITY(1, (_GLF_IDENTITY(1, 0 | (_GLF_IDENTITY(1, ~ (~ (1)))))) >> (0 ^ 0)) == read_2))), (_GLF_IDENTITY(read_1 + 1 == read_2, ! (! (read_1 + _GLF_IDENTITY(1, (_GLF_IDENTITY(_GLF_IDENTITY(1, 0 | (_GLF_IDENTITY(1, ~ (~ (1))))), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(2672) : _GLF_IDENTITY(_GLF_IDENTITY(1, 0 | (_GLF_IDENTITY(1, ~ (~ (1))))), (false ? _GLF_FUZZED(53379) : _GLF_IDENTITY(1, 0 | (_GLF_IDENTITY(1, ~ (~ (1)))))))))) >> _GLF_IDENTITY((0 ^ 0), ((0 ^ 0)) | ((0 ^ 0)))) == read_2)))) || false))))))))), ! (! (_GLF_IDENTITY(read_1 + 1 == read_2, bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(read_1, min(_GLF_IDENTITY(read_1, 1u * (read_1)), read_1)) + 1 == read_2, ! (! (read_1 + _GLF_IDENTITY(1, (1) | (1)) == read_2))), false || _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1 == read_2, ! (! (read_1 + 1 == read_2))), bool(bvec3(_GLF_IDENTITY(read_1 + 1 == read_2, ! (! (read_1 + 1 == read_2))), true, _GLF_IDENTITY(true, ! (! (true))))))), ! (! ((_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1 == read_2, ! (! (read_1 + 1 == read_2))), bool(bvec3(_GLF_IDENTITY(read_1 + 1 == read_2, ! (! (read_1 + 1 == read_2))), true, _GLF_IDENTITY(true, ! (! (true))))))))))))))))))) | 0u))), 1u), (uvec2(_GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1 == read_2, bool(bool(_GLF_IDENTITY(read_1 + 1 == read_2, ! (! (read_1 + 1 == read_2)))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(read_1 + 1 == read_2, bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1 == read_2, ! (! (read_1 + _GLF_IDENTITY(1, (1) | (1)) == read_2))), false || (_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1 == read_2, ! (! (read_1 + 1 == read_2))), bool(bvec3(_GLF_IDENTITY(read_1 + 1 == read_2, ! (! (read_1 + 1 == read_2))), true, true))))))))), _GLF_IDENTITY(bool(bvec4(! (_GLF_IDENTITY(read_1 + 1 == read_2, bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1 == read_2, ! (! (read_1 + _GLF_IDENTITY(1, (1) | (1)) == read_2))), false || (_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1 == read_2, ! (! (read_1 + 1 == read_2))), bool(bvec3(_GLF_IDENTITY(read_1 + 1 == read_2, ! (! (read_1 + 1 == read_2))), true, true))))))))), true, false, true)), ! (! (bool(bvec4(! (_GLF_IDENTITY(read_1 + 1 == read_2, bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1 == read_2, ! (! (read_1 + _GLF_IDENTITY(1, (1) | (1)) == read_2))), false || (_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1 == read_2, ! (! (read_1 + 1 == read_2))), bool(bvec3(_GLF_IDENTITY(read_1 + 1 == read_2, ! (! (read_1 + 1 == read_2))), true, true))))))))), true, false, true)))))))), (_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1 == read_2, bool(bool(_GLF_IDENTITY(read_1 + 1 == _GLF_IDENTITY(read_2, uint(uvec4(read_2, 0u, 1u, 0u))), _GLF_IDENTITY(! (! (read_1 + 1 == read_2)), ! (_GLF_IDENTITY(! (! (! (read_1 + 1 == read_2))), bool(bvec3(! (! (! (read_1 + 1 == read_2))), false, false))))))))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(read_1 + _GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) + 0)) ^ 0) == read_2, _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1 == read_2, false || (read_1 + _GLF_IDENTITY(1, (1) << 0) == read_2)), _GLF_IDENTITY(! (! (read_1 + _GLF_IDENTITY(1, (1) | (1)) == read_2)), ! (! (! (! (read_1 + _GLF_IDENTITY(1, (1) | (1)) == read_2)))))), false || (_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1 == read_2, ! _GLF_IDENTITY((! (read_1 + 1 == read_2)), ((! (read_1 + 1 == read_2))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), bool(bvec3(_GLF_IDENTITY(read_1 + 1 == read_2, ! (! _GLF_IDENTITY((read_1 + 1 == read_2), bool(bvec2(_GLF_IDENTITY((read_1 + 1 == read_2), ! (! ((read_1 + 1 == read_2)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), true, true)))))), (bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1 == read_2, false || (read_1 + _GLF_IDENTITY(1, (1) << 0) == read_2)), _GLF_IDENTITY(! (! (read_1 + _GLF_IDENTITY(1, (1) | (1)) == read_2)), ! (! (! (! (read_1 + _GLF_IDENTITY(1, (1) | (1)) == read_2)))))), false || (_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1 == read_2, ! _GLF_IDENTITY((! (read_1 + 1 == read_2)), ((! (read_1 + 1 == read_2))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), bool(bvec3(_GLF_IDENTITY(read_1 + 1 == read_2, ! (! _GLF_IDENTITY((read_1 + 1 == read_2), bool(bvec2(_GLF_IDENTITY((read_1 + 1 == read_2), ! (! ((read_1 + 1 == read_2)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), true, true))))))) && true)), (bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1 == read_2, false || (read_1 + _GLF_IDENTITY(1, (1) << 0) == read_2)), _GLF_IDENTITY(! (! (read_1 + _GLF_IDENTITY(1, (1) | (1)) == read_2)), ! (! (! (! (read_1 + _GLF_IDENTITY(1, (1) | (1)) == read_2)))))), false || (_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1 == read_2, ! _GLF_IDENTITY((! (read_1 + 1 == read_2)), ((! (read_1 + 1 == read_2))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), bool(bvec3(_GLF_IDENTITY(read_1 + 1 == read_2, ! (! _GLF_IDENTITY((read_1 + 1 == read_2), bool(bvec2(_GLF_IDENTITY((read_1 + 1 == read_2), ! (! ((read_1 + 1 == read_2)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), true, true)))))), (bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1 == read_2, false || (read_1 + _GLF_IDENTITY(1, (1) << 0) == read_2)), _GLF_IDENTITY(! (! (read_1 + _GLF_IDENTITY(1, (1) | (1)) == read_2)), ! (! (! (! (read_1 + _GLF_IDENTITY(1, (1) | (1)) == read_2)))))), false || (_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1 == read_2, ! _GLF_IDENTITY((! (read_1 + 1 == read_2)), ((! (read_1 + 1 == read_2))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), bool(bvec3(_GLF_IDENTITY(read_1 + 1 == read_2, ! (! _GLF_IDENTITY((read_1 + 1 == read_2), bool(bvec2(_GLF_IDENTITY((read_1 + 1 == read_2), ! (! ((read_1 + 1 == read_2)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), true, true))))))) && true))) && true)), bool(bvec4(_GLF_IDENTITY(read_1 + _GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) + 0)) ^ 0) == read_2, _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1 == read_2, false || (read_1 + _GLF_IDENTITY(1, (1) << 0) == read_2)), _GLF_IDENTITY(! (! (read_1 + _GLF_IDENTITY(1, (1) | (1)) == read_2)), ! (! (! (! (read_1 + _GLF_IDENTITY(1, (1) | (1)) == read_2)))))), false || (_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1 == read_2, ! _GLF_IDENTITY((! (read_1 + 1 == read_2)), ((! (read_1 + 1 == read_2))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), bool(bvec3(_GLF_IDENTITY(read_1 + 1 == read_2, ! (! _GLF_IDENTITY((read_1 + 1 == read_2), bool(bvec2(_GLF_IDENTITY((read_1 + 1 == read_2), ! (! ((read_1 + 1 == read_2)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), true, true)))))), (bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1 == read_2, false || (read_1 + _GLF_IDENTITY(1, (1) << 0) == read_2)), _GLF_IDENTITY(! (! (read_1 + _GLF_IDENTITY(1, (1) | (1)) == read_2)), ! (! (! (! (read_1 + _GLF_IDENTITY(1, (1) | (1)) == read_2)))))), false || (_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1 == read_2, ! _GLF_IDENTITY((! (read_1 + 1 == read_2)), ((! (read_1 + 1 == read_2))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), bool(bvec3(_GLF_IDENTITY(read_1 + 1 == read_2, ! (! _GLF_IDENTITY((read_1 + 1 == read_2), bool(bvec2(_GLF_IDENTITY((read_1 + 1 == read_2), ! (! ((read_1 + 1 == read_2)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), true, true))))))) && true)), (bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1 == read_2, false || (read_1 + _GLF_IDENTITY(1, (1) << 0) == read_2)), _GLF_IDENTITY(! (! (read_1 + _GLF_IDENTITY(1, (1) | (1)) == read_2)), ! (! (! (! (read_1 + _GLF_IDENTITY(1, (1) | (1)) == read_2)))))), false || (_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1 == read_2, ! _GLF_IDENTITY((! (read_1 + 1 == read_2)), ((! (read_1 + 1 == read_2))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), bool(bvec3(_GLF_IDENTITY(read_1 + 1 == read_2, ! (! _GLF_IDENTITY((read_1 + 1 == read_2), bool(bvec2(_GLF_IDENTITY((read_1 + 1 == read_2), ! (! ((read_1 + 1 == read_2)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), true, true)))))), (bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1 == read_2, false || (read_1 + _GLF_IDENTITY(1, (1) << 0) == read_2)), _GLF_IDENTITY(! (! (read_1 + _GLF_IDENTITY(1, (1) | (1)) == read_2)), ! (! (! (! (read_1 + _GLF_IDENTITY(1, (1) | (1)) == read_2)))))), false || (_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1 == read_2, ! _GLF_IDENTITY((! (read_1 + 1 == read_2)), ((! (read_1 + 1 == read_2))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), bool(bvec3(_GLF_IDENTITY(read_1 + 1 == read_2, ! (! _GLF_IDENTITY((read_1 + 1 == read_2), bool(bvec2(_GLF_IDENTITY((read_1 + 1 == read_2), ! (! ((read_1 + 1 == read_2)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), true, true))))))) && true))) && true)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))) || false)), ~ (~ (uint(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1 == read_2, bool(bool(_GLF_IDENTITY(read_1 + 1 == read_2, ! (! (_GLF_IDENTITY(read_1 + 1, 0u ^ (read_1 + 1)) == read_2)))))), ! (! (_GLF_IDENTITY(read_1 + 1 == read_2, bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1, 0u | (read_1 + 1)) == read_2, ! (! (read_1 + _GLF_IDENTITY(1, (1) | (1)) == read_2))), false || (_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1 == read_2, ! (! (read_1 + 1 == read_2))), bool(bvec3(_GLF_IDENTITY(read_1 + 1 == read_2, ! (! (read_1 + 1 == read_2))), true, true))))))))))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1 == read_2, bool(bool(_GLF_IDENTITY(read_1 + 1 == read_2, _GLF_IDENTITY(! (! (read_1 + 1 == read_2)), ! (_GLF_IDENTITY(! (! (! (read_1 + 1 == read_2))), bool(bvec3(! (! (! (read_1 + 1 == read_2))), false, false))))))))), ! (! (_GLF_IDENTITY(read_1 + _GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) + 0)) ^ 0) == read_2, _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1 == read_2, false || (read_1 + _GLF_IDENTITY(1, (1) << 0) == read_2)), _GLF_IDENTITY(! (! (read_1 + _GLF_IDENTITY(1, (1) | (1)) == read_2)), ! (! (! (! (read_1 + _GLF_IDENTITY(1, (1) | (1)) == read_2)))))), false || (_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1 == read_2, ! _GLF_IDENTITY((! (read_1 + 1 == read_2)), ((! (read_1 + 1 == read_2))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), bool(bvec3(_GLF_IDENTITY(read_1 + 1 == read_2, ! (! _GLF_IDENTITY((read_1 + 1 == read_2), bool(bvec2(_GLF_IDENTITY((read_1 + 1 == read_2), ! (! ((read_1 + 1 == read_2)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), true, true)))))), (bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1 == read_2, false || (read_1 + _GLF_IDENTITY(1, (1) << 0) == read_2)), _GLF_IDENTITY(! (! (read_1 + _GLF_IDENTITY(1, (1) | (1)) == read_2)), ! (! (! (! (read_1 + _GLF_IDENTITY(1, (1) | (1)) == read_2)))))), false || (_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1 == read_2, ! _GLF_IDENTITY((! (read_1 + 1 == read_2)), ((! (read_1 + 1 == read_2))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), bool(bvec3(_GLF_IDENTITY(read_1 + 1 == read_2, ! (! _GLF_IDENTITY((read_1 + 1 == read_2), bool(bvec2(_GLF_IDENTITY((read_1 + 1 == read_2), ! (! ((read_1 + 1 == read_2)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), true, true))))))) && true)), (bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1 == read_2, false || (read_1 + _GLF_IDENTITY(1, (1) << 0) == read_2)), _GLF_IDENTITY(! (! (read_1 + _GLF_IDENTITY(1, (1) | (1)) == read_2)), ! (! (! (! (read_1 + _GLF_IDENTITY(1, (1) | (1)) == read_2)))))), false || (_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1 == read_2, ! _GLF_IDENTITY((! (read_1 + 1 == read_2)), ((! (read_1 + 1 == read_2))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), bool(bvec3(_GLF_IDENTITY(read_1 + 1 == read_2, ! (! _GLF_IDENTITY((read_1 + 1 == read_2), bool(bvec2(_GLF_IDENTITY((read_1 + 1 == read_2), ! (! ((read_1 + 1 == read_2)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), true, true)))))), (bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1 == read_2, false || (read_1 + _GLF_IDENTITY(1, (1) << 0) == read_2)), _GLF_IDENTITY(! (! (read_1 + _GLF_IDENTITY(1, (1) | (1)) == read_2)), ! (! (! (! (read_1 + _GLF_IDENTITY(1, (1) | (1)) == read_2)))))), false || (_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1 == read_2, ! _GLF_IDENTITY((! (read_1 + 1 == read_2)), ((! (read_1 + 1 == read_2))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), bool(bvec3(_GLF_IDENTITY(read_1 + 1 == read_2, ! (! _GLF_IDENTITY((read_1 + 1 == read_2), bool(bvec2(_GLF_IDENTITY((read_1 + 1 == read_2), ! (! ((read_1 + 1 == read_2)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), true, true))))))) && true))) && true))))), (_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1 == read_2, bool(bool(_GLF_IDENTITY(read_1 + 1 == read_2, _GLF_IDENTITY(! (! (read_1 + 1 == read_2)), ! (_GLF_IDENTITY(! (! (! (read_1 + 1 == read_2))), bool(bvec3(! _GLF_IDENTITY((! (! (read_1 + 1 == read_2))), ((! (! (read_1 + 1 == read_2)))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false, false))))))))), ! (! (_GLF_IDENTITY(read_1 + _GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) + 0)) ^ 0) == read_2, _GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1 == read_2, false || (read_1 + _GLF_IDENTITY(1, (1) << 0) == read_2)), _GLF_IDENTITY(! (! (read_1 + _GLF_IDENTITY(1, (1) | (1)) == read_2)), ! (! (! (! (read_1 + _GLF_IDENTITY(1, (1) | (1)) == read_2)))))), false || (_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1 == read_2, ! _GLF_IDENTITY((! (read_1 + 1 == read_2)), ((! (read_1 + 1 == read_2))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), bool(bvec3(_GLF_IDENTITY(read_1 + 1 == read_2, ! (! _GLF_IDENTITY((read_1 + 1 == read_2), bool(bvec2(_GLF_IDENTITY((read_1 + 1 == read_2), ! (! ((read_1 + 1 == read_2)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), true, true)))))), (bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1 == read_2, false || (read_1 + _GLF_IDENTITY(1, (1) << 0) == read_2)), _GLF_IDENTITY(! (! (read_1 + _GLF_IDENTITY(1, (1) | (1)) == read_2)), ! (! (! (! (read_1 + _GLF_IDENTITY(1, (1) | (1)) == read_2)))))), false || (_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1 == read_2, ! _GLF_IDENTITY((! (read_1 + 1 == read_2)), ((! (read_1 + 1 == read_2))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), bool(bvec3(_GLF_IDENTITY(read_1 + 1 == read_2, ! (! _GLF_IDENTITY((read_1 + 1 == read_2), bool(bvec2(_GLF_IDENTITY((read_1 + 1 == read_2), ! (! ((read_1 + 1 == read_2)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), true, true))))))) && true), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1 == read_2, false || (read_1 + _GLF_IDENTITY(1, (1) << 0) == read_2)), _GLF_IDENTITY(! (! (read_1 + _GLF_IDENTITY(1, (1) | (1)) == read_2)), ! (! (! (! (read_1 + _GLF_IDENTITY(1, (1) | (1)) == read_2)))))), false || (_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1 == read_2, ! _GLF_IDENTITY((! (read_1 + 1 == read_2)), ((! (read_1 + 1 == read_2))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), bool(bvec3(_GLF_IDENTITY(read_1 + 1 == read_2, ! (! _GLF_IDENTITY((read_1 + 1 == read_2), bool(bvec2(_GLF_IDENTITY((read_1 + 1 == read_2), ! (! ((read_1 + 1 == read_2)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), true, true)))))), (bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1 == read_2, false || (read_1 + _GLF_IDENTITY(1, (1) << 0) == read_2)), _GLF_IDENTITY(! (! (read_1 + _GLF_IDENTITY(1, (1) | (1)) == read_2)), ! (! (! (! (read_1 + _GLF_IDENTITY(1, (1) | (1)) == read_2)))))), false || (_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1 == read_2, ! _GLF_IDENTITY((! (read_1 + 1 == read_2)), ((! (read_1 + 1 == read_2))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), bool(bvec3(_GLF_IDENTITY(read_1 + 1 == read_2, ! (! _GLF_IDENTITY((read_1 + 1 == read_2), bool(bvec2(_GLF_IDENTITY((read_1 + 1 == read_2), ! (! ((read_1 + 1 == read_2)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), true, true))))))) && true), true), _GLF_IDENTITY(bvec2(_GLF_IDENTITY(bvec3(bvec2(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1 == read_2, false || (read_1 + _GLF_IDENTITY(1, (1) << 0) == read_2)), _GLF_IDENTITY(! (! (read_1 + _GLF_IDENTITY(1, (1) | (1)) == read_2)), ! (! (! (! (read_1 + _GLF_IDENTITY(1, (1) | (1)) == read_2)))))), false || (_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1 == read_2, ! _GLF_IDENTITY((! (read_1 + 1 == read_2)), ((! (read_1 + 1 == read_2))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), bool(bvec3(_GLF_IDENTITY(read_1 + 1 == read_2, ! (! _GLF_IDENTITY((read_1 + 1 == read_2), bool(bvec2(_GLF_IDENTITY((read_1 + 1 == read_2), ! (! ((read_1 + 1 == read_2)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), true, true)))))), (bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1 == read_2, false || (read_1 + _GLF_IDENTITY(1, (1) << 0) == read_2)), _GLF_IDENTITY(! (! (read_1 + _GLF_IDENTITY(1, (1) | (1)) == read_2)), ! (! (! (! (read_1 + _GLF_IDENTITY(1, (1) | (1)) == read_2)))))), false || (_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1 == read_2, ! _GLF_IDENTITY((! (read_1 + 1 == read_2)), ((! (read_1 + 1 == read_2))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), bool(bvec3(_GLF_IDENTITY(read_1 + 1 == read_2, ! (! _GLF_IDENTITY((read_1 + 1 == read_2), bool(bvec2(_GLF_IDENTITY((read_1 + 1 == read_2), ! (! ((read_1 + 1 == read_2)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), true, true))))))) && true), true), false), bvec3(bvec3(bvec3(bvec2(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1 == read_2, false || (read_1 + _GLF_IDENTITY(1, (1) << 0) == read_2)), _GLF_IDENTITY(! (! (read_1 + _GLF_IDENTITY(1, (1) | (1)) == read_2)), ! (! (! (! (read_1 + _GLF_IDENTITY(1, (1) | (1)) == read_2)))))), false || (_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1 == read_2, ! _GLF_IDENTITY((! (read_1 + 1 == read_2)), ((! (read_1 + 1 == read_2))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), bool(bvec3(_GLF_IDENTITY(read_1 + 1 == read_2, ! (! _GLF_IDENTITY((read_1 + 1 == read_2), bool(bvec2(_GLF_IDENTITY((read_1 + 1 == read_2), ! (! ((read_1 + 1 == read_2)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), true, true)))))), (bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1 == read_2, false || (read_1 + _GLF_IDENTITY(1, (1) << 0) == read_2)), _GLF_IDENTITY(! (! (read_1 + _GLF_IDENTITY(1, (1) | (1)) == read_2)), ! (! (! (! (read_1 + _GLF_IDENTITY(1, (1) | (1)) == read_2)))))), false || (_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1 == read_2, ! _GLF_IDENTITY((! (read_1 + 1 == read_2)), ((! (read_1 + 1 == read_2))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), bool(bvec3(_GLF_IDENTITY(read_1 + 1 == read_2, ! (! _GLF_IDENTITY((read_1 + 1 == read_2), bool(bvec2(_GLF_IDENTITY((read_1 + 1 == read_2), ! (! ((read_1 + 1 == read_2)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), true, true))))))) && true), true), false))))), bvec2(bvec2(bvec2(_GLF_IDENTITY(bvec3(bvec2(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1 == read_2, false || (read_1 + _GLF_IDENTITY(1, (1) << 0) == read_2)), _GLF_IDENTITY(! (! (read_1 + _GLF_IDENTITY(1, (1) | (1)) == read_2)), ! (! (! (! (read_1 + _GLF_IDENTITY(1, (1) | (1)) == read_2)))))), false || (_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1 == read_2, ! _GLF_IDENTITY((! (read_1 + 1 == read_2)), ((! (read_1 + 1 == read_2))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), bool(bvec3(_GLF_IDENTITY(read_1 + 1 == read_2, ! (! _GLF_IDENTITY((read_1 + 1 == read_2), bool(bvec2(_GLF_IDENTITY((read_1 + 1 == read_2), ! (! ((read_1 + 1 == read_2)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), true, true)))))), (bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1 == read_2, false || (read_1 + _GLF_IDENTITY(1, (1) << 0) == read_2)), _GLF_IDENTITY(! (! (read_1 + _GLF_IDENTITY(1, (1) | (1)) == read_2)), ! (! (! (! (read_1 + _GLF_IDENTITY(1, (1) | (1)) == read_2)))))), false || (_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1 == read_2, ! _GLF_IDENTITY((! (read_1 + 1 == read_2)), ((! (read_1 + 1 == read_2))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), bool(bvec3(_GLF_IDENTITY(read_1 + 1 == read_2, ! (! _GLF_IDENTITY((read_1 + 1 == read_2), bool(bvec2(_GLF_IDENTITY((read_1 + 1 == read_2), ! (! ((read_1 + 1 == read_2)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), true, true))))))) && true), true), false), bvec3(bvec3(bvec3(bvec2(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1 == read_2, false || (read_1 + _GLF_IDENTITY(1, (1) << 0) == read_2)), _GLF_IDENTITY(! (! (read_1 + _GLF_IDENTITY(1, (1) | (1)) == read_2)), ! (! (! (! (read_1 + _GLF_IDENTITY(1, (1) | (1)) == read_2)))))), false || (_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1 == read_2, ! _GLF_IDENTITY((! (read_1 + 1 == read_2)), ((! (read_1 + 1 == read_2))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), bool(bvec3(_GLF_IDENTITY(read_1 + 1 == read_2, ! (! _GLF_IDENTITY((read_1 + 1 == read_2), bool(bvec2(_GLF_IDENTITY((read_1 + 1 == read_2), ! (! ((read_1 + 1 == read_2)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), true, true)))))), (bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1 == read_2, false || (read_1 + _GLF_IDENTITY(1, (1) << 0) == read_2)), _GLF_IDENTITY(! (! (read_1 + _GLF_IDENTITY(1, (1) | (1)) == read_2)), ! (! (! (! (read_1 + _GLF_IDENTITY(1, (1) | (1)) == read_2)))))), false || (_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1 == read_2, ! _GLF_IDENTITY((! (read_1 + 1 == read_2)), ((! (read_1 + 1 == read_2))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), bool(bvec3(_GLF_IDENTITY(read_1 + 1 == read_2, ! (! _GLF_IDENTITY((read_1 + 1 == read_2), bool(bvec2(_GLF_IDENTITY((read_1 + 1 == read_2), ! (! ((read_1 + 1 == read_2)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), true, true))))))) && true), true), false)))))))))), ! (! (bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1 == read_2, false || (read_1 + _GLF_IDENTITY(1, (1) << 0) == read_2)), _GLF_IDENTITY(! (! (read_1 + _GLF_IDENTITY(1, (1) | (1)) == read_2)), ! (! (! (! (read_1 + _GLF_IDENTITY(1, (1) | (1)) == read_2)))))), false || (_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1 == read_2, ! _GLF_IDENTITY((! (read_1 + 1 == read_2)), ((! (read_1 + 1 == read_2))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), bool(bvec3(_GLF_IDENTITY(read_1 + 1 == read_2, ! (! _GLF_IDENTITY((read_1 + 1 == read_2), bool(bvec2(_GLF_IDENTITY((read_1 + 1 == read_2), ! (! ((read_1 + 1 == read_2)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), true, true)))))), (bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1 == read_2, false || (read_1 + _GLF_IDENTITY(1, (1) << 0) == read_2)), _GLF_IDENTITY(! (! (read_1 + _GLF_IDENTITY(1, (1) | (1)) == read_2)), ! (! (! (! (read_1 + _GLF_IDENTITY(1, (1) | (1)) == read_2)))))), false || (_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1 == read_2, ! _GLF_IDENTITY((! (read_1 + 1 == read_2)), ((! (read_1 + 1 == read_2))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), bool(bvec3(_GLF_IDENTITY(read_1 + 1 == read_2, ! (! _GLF_IDENTITY((read_1 + 1 == read_2), bool(bvec2(_GLF_IDENTITY((read_1 + 1 == read_2), ! (! ((read_1 + 1 == read_2)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), true, true))))))) && true), true), _GLF_IDENTITY(bvec2(_GLF_IDENTITY(bvec3(bvec2(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1 == read_2, false || (read_1 + _GLF_IDENTITY(1, (1) << 0) == read_2)), _GLF_IDENTITY(! (! (read_1 + _GLF_IDENTITY(1, (1) | (1)) == read_2)), ! (! (! (! (read_1 + _GLF_IDENTITY(1, (1) | (1)) == read_2)))))), false || (_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1 == read_2, ! _GLF_IDENTITY((! (read_1 + 1 == read_2)), ((! (read_1 + 1 == read_2))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), bool(bvec3(_GLF_IDENTITY(read_1 + 1 == read_2, ! (! _GLF_IDENTITY((read_1 + 1 == read_2), bool(bvec2(_GLF_IDENTITY((read_1 + 1 == read_2), ! (! ((read_1 + 1 == read_2)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), true, true)))))), (bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1 == read_2, false || (read_1 + _GLF_IDENTITY(1, (1) << 0) == read_2)), _GLF_IDENTITY(! (! (read_1 + _GLF_IDENTITY(1, (1) | (1)) == read_2)), ! (! (! (! (read_1 + _GLF_IDENTITY(1, (1) | (1)) == read_2)))))), false || (_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1 == read_2, ! _GLF_IDENTITY((! (read_1 + 1 == read_2)), ((! (read_1 + 1 == read_2))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), bool(bvec3(_GLF_IDENTITY(read_1 + 1 == read_2, ! (! _GLF_IDENTITY((read_1 + 1 == read_2), bool(bvec2(_GLF_IDENTITY((read_1 + 1 == read_2), ! (! ((read_1 + 1 == read_2)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), true, true))))))) && true), true), false), bvec3(bvec3(bvec3(bvec2(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1 == read_2, false || (read_1 + _GLF_IDENTITY(1, (1) << 0) == read_2)), _GLF_IDENTITY(! (! (read_1 + _GLF_IDENTITY(1, (1) | (1)) == read_2)), ! (! (! (! (read_1 + _GLF_IDENTITY(1, (1) | (1)) == read_2)))))), false || (_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1 == read_2, ! _GLF_IDENTITY((! (read_1 + 1 == read_2)), ((! (read_1 + 1 == read_2))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), bool(bvec3(_GLF_IDENTITY(read_1 + 1 == read_2, ! (! _GLF_IDENTITY((read_1 + 1 == read_2), bool(bvec2(_GLF_IDENTITY((read_1 + 1 == read_2), ! (! ((read_1 + 1 == read_2)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), true, true)))))), (bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1 == read_2, false || (read_1 + _GLF_IDENTITY(1, (1) << 0) == read_2)), _GLF_IDENTITY(! (! (read_1 + _GLF_IDENTITY(1, (1) | (1)) == read_2)), ! (! (! (! (read_1 + _GLF_IDENTITY(1, (1) | (1)) == read_2)))))), false || (_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1 == read_2, ! _GLF_IDENTITY((! (read_1 + 1 == read_2)), ((! (read_1 + 1 == read_2))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), bool(bvec3(_GLF_IDENTITY(read_1 + 1 == read_2, ! (! _GLF_IDENTITY((read_1 + 1 == read_2), bool(bvec2(_GLF_IDENTITY((read_1 + 1 == read_2), ! (! ((read_1 + 1 == read_2)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), true, true))))))) && true), true), false))))), bvec2(bvec2(bvec2(_GLF_IDENTITY(bvec3(bvec2(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1 == read_2, false || (read_1 + _GLF_IDENTITY(1, (1) << 0) == read_2)), _GLF_IDENTITY(! (! (read_1 + _GLF_IDENTITY(1, (1) | (1)) == read_2)), ! (! (! (! (read_1 + _GLF_IDENTITY(1, (1) | (1)) == read_2)))))), false || (_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1 == read_2, ! _GLF_IDENTITY((! (read_1 + 1 == read_2)), ((! (read_1 + 1 == read_2))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), bool(bvec3(_GLF_IDENTITY(read_1 + 1 == read_2, ! (! _GLF_IDENTITY((read_1 + 1 == read_2), bool(bvec2(_GLF_IDENTITY((read_1 + 1 == read_2), ! (! ((read_1 + 1 == read_2)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), true, true)))))), (bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1 == read_2, false || (read_1 + _GLF_IDENTITY(1, (1) << 0) == read_2)), _GLF_IDENTITY(! (! (read_1 + _GLF_IDENTITY(1, (1) | (1)) == read_2)), ! (! (! (! (read_1 + _GLF_IDENTITY(1, (1) | (1)) == read_2)))))), false || (_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1 == read_2, ! _GLF_IDENTITY((! (read_1 + 1 == read_2)), ((! (read_1 + 1 == read_2))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), bool(bvec3(_GLF_IDENTITY(read_1 + 1 == read_2, ! (! _GLF_IDENTITY((read_1 + 1 == read_2), bool(bvec2(_GLF_IDENTITY((read_1 + 1 == read_2), ! (! ((read_1 + 1 == read_2)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), true, true))))))) && true), true), false), bvec3(bvec3(bvec3(bvec2(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1 == read_2, false || (read_1 + _GLF_IDENTITY(1, (1) << 0) == read_2)), _GLF_IDENTITY(! (! (read_1 + _GLF_IDENTITY(1, (1) | (1)) == read_2)), ! (! (! (! (read_1 + _GLF_IDENTITY(1, (1) | (1)) == read_2)))))), false || (_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1 == read_2, ! _GLF_IDENTITY((! (read_1 + 1 == read_2)), ((! (read_1 + 1 == read_2))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), bool(bvec3(_GLF_IDENTITY(read_1 + 1 == read_2, ! (! _GLF_IDENTITY((read_1 + 1 == read_2), bool(bvec2(_GLF_IDENTITY((read_1 + 1 == read_2), ! (! ((read_1 + 1 == read_2)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), true, true)))))), (bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1 == read_2, false || (read_1 + _GLF_IDENTITY(1, (1) << 0) == read_2)), _GLF_IDENTITY(! (! (read_1 + _GLF_IDENTITY(1, (1) | (1)) == read_2)), ! (! (! (! (read_1 + _GLF_IDENTITY(1, (1) | (1)) == read_2)))))), false || (_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1 == read_2, ! _GLF_IDENTITY((! (read_1 + 1 == read_2)), ((! (read_1 + 1 == read_2))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), bool(bvec3(_GLF_IDENTITY(read_1 + 1 == read_2, ! (! _GLF_IDENTITY((read_1 + 1 == read_2), bool(bvec2(_GLF_IDENTITY((read_1 + 1 == read_2), ! (! ((read_1 + 1 == read_2)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), true, true))))))) && true), true), false))))))))))))))), (bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1 == read_2, false || (read_1 + _GLF_IDENTITY(1, (1) << 0) == read_2)), _GLF_IDENTITY(! (! (read_1 + _GLF_IDENTITY(1, (1) | (1)) == read_2)), ! (! (! (! (read_1 + _GLF_IDENTITY(1, (1) | (1)) == read_2)))))), false || (_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1 == read_2, ! _GLF_IDENTITY((! (read_1 + 1 == read_2)), ((! (read_1 + 1 == _GLF_IDENTITY(read_2, uint(_GLF_IDENTITY(uvec3(read_2, uint(_GLF_ONE(1.0, injectionSwitch.y)), uint(_GLF_ZERO(0.0, injectionSwitch.x))), clamp(uvec3(read_2, uint(_GLF_ONE(1.0, injectionSwitch.y)), uint(_GLF_ZERO(0.0, injectionSwitch.x))), uvec3(read_2, uint(_GLF_ONE(1.0, injectionSwitch.y)), uint(_GLF_ZERO(0.0, injectionSwitch.x))), uvec3(read_2, uint(_GLF_ONE(1.0, injectionSwitch.y)), uint(_GLF_ZERO(0.0, injectionSwitch.x)))))))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), bool(bvec3(_GLF_IDENTITY(read_1 + _GLF_IDENTITY(1, max(1, 1)) == read_2, ! (! _GLF_IDENTITY((read_1 + 1 == read_2), bool(bvec2(_GLF_IDENTITY((read_1 + 1 == read_2), ! (! ((read_1 + 1 == read_2)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), true, true)))))), (bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1 == read_2, false || (read_1 + _GLF_IDENTITY(1, (1) << 0) == read_2)), _GLF_IDENTITY(! (! (read_1 + _GLF_IDENTITY(1, (1) | (1)) == read_2)), ! (! (! (! (read_1 + _GLF_IDENTITY(1, (1) | (1)) == read_2)))))), false || (_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1 == read_2, ! _GLF_IDENTITY((! (read_1 + 1 == read_2)), ((! (read_1 + 1 == read_2))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), bool(bvec3(_GLF_IDENTITY(read_1 + 1 == read_2, ! (! _GLF_IDENTITY((read_1 + 1 == read_2), bool(bvec2(_GLF_IDENTITY((read_1 + 1 == read_2), ! (! ((read_1 + 1 == read_2)))), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * exp(0.0)) < injectionSwitch.y))))))), true, true))))))) && true))) && true)))))) || false)) || false))))), min(uint(_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1 == read_2, bool(bool(_GLF_IDENTITY(read_1 + 1 == read_2, ! (! (_GLF_IDENTITY(read_1 + 1, 0u + (_GLF_IDENTITY(read_1 + 1, (read_1 + 1) / 1u))) == read_2)))))), ! (! (_GLF_IDENTITY(read_1 + 1 == read_2, bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1 == _GLF_IDENTITY(read_2, min(_GLF_IDENTITY(read_2, 0u ^ (read_2)), read_2)), ! (! (read_1 + _GLF_IDENTITY(1, _GLF_IDENTITY((1) | (1), ~ (~ ((1) | (1))))) == _GLF_IDENTITY(read_2, (read_2) | (read_2))))), false || (_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1 == _GLF_IDENTITY(read_2, 0u | (read_2)), ! (! (read_1 + 1 == read_2))), bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1 == read_2, ! (! (read_1 + 1 == read_2))), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(read_1 + 1 == read_2, ! (! (read_1 + 1 == read_2))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec3(bvec4(bvec3(_GLF_IDENTITY(read_1 + 1 == read_2, ! (! (read_1 + 1 == read_2))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true))))), true, true)))))))))))), _GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1 == read_2, bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1, clamp(read_1 + 1, _GLF_IDENTITY(read_1 + 1, (read_1 + 1) >> 0u), _GLF_IDENTITY(read_1 + 1, 0u ^ (_GLF_IDENTITY(read_1 + 1, uint(uvec3(read_1 + 1, 0u, 0u))))))) == read_2, ! (! (read_1 + 1 == read_2)))))), ! (! (_GLF_IDENTITY(read_1 + 1 == read_2, bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1 == read_2, ! (! (read_1 + _GLF_IDENTITY(1, (1) | (1)) == read_2))), false || (_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1 == read_2, ! (! (_GLF_IDENTITY(read_1 + _GLF_IDENTITY(1, 0 | (1)) == read_2, _GLF_IDENTITY(bool(bool(read_1 + 1 == read_2)), _GLF_IDENTITY((bool(bool(_GLF_IDENTITY(read_1 + 1 == read_2, true && (read_1 + 1 == read_2))))), ! (! ((bool(bool(_GLF_IDENTITY(read_1 + 1 == read_2, true && (read_1 + 1 == read_2)))))))) && true))))), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1 == read_2, bool(bool(_GLF_IDENTITY(read_1 + 1 == read_2, ! (! (read_1 + 1 == read_2)))))), ! (! (_GLF_IDENTITY(read_1, (read_1) | 0u) + 1 == read_2))), true, true)), (_GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1 == read_2, bool(bool(_GLF_IDENTITY(read_1 + 1 == read_2, ! (! (read_1 + 1 == read_2)))))), ! (! (_GLF_IDENTITY(read_1, (read_1) | 0u) + 1 == read_2))), true, true)), bool(_GLF_IDENTITY(bvec3(bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1 == read_2, bool(bool(_GLF_IDENTITY(read_1 + 1 == read_2, ! (! (read_1 + 1 == read_2)))))), ! (! (_GLF_IDENTITY(read_1, (read_1) | 0u) + 1 == read_2))), true, true)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false), bvec3(bvec3(bvec3(bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1 == read_2, bool(bool(_GLF_IDENTITY(read_1 + 1 == read_2, ! (! (read_1 + 1 == read_2)))))), ! (! (_GLF_IDENTITY(read_1, (read_1) | 0u) + 1 == read_2))), true, true)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))))))) || false))))))))))), (uint(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(read_1, 0u | _GLF_IDENTITY((read_1), uint(_GLF_ZERO(0.0, injectionSwitch.x)) ^ ((read_1)))) + 1 == read_2, _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(read_1 + 1 == read_2, ! (! (read_1 + _GLF_IDENTITY(1, (_GLF_IDENTITY(1, 0 | (_GLF_IDENTITY(1, ~ (~ (1)))))) >> (0 ^ 0)) == _GLF_IDENTITY(read_2, min(read_2, _GLF_IDENTITY(read_2, (_GLF_IDENTITY(read_2, (read_2) | (read_2))) - 0u)))))))), ! (! (bool(bool(_GLF_IDENTITY(read_1 + 1 == read_2, _GLF_IDENTITY(! (! (read_1 + _GLF_IDENTITY(1, (_GLF_IDENTITY(1, 0 | (_GLF_IDENTITY(1, ~ (~ (1)))))) >> (0 ^ 0)) == read_2)), bool(bvec4(_GLF_IDENTITY(! (! (read_1 + _GLF_IDENTITY(1, (_GLF_IDENTITY(1, 0 | (_GLF_IDENTITY(1, ~ (~ (1)))))) >> (0 ^ 0)) == read_2)), bool(bvec2(! (! (read_1 + _GLF_IDENTITY(1, (_GLF_IDENTITY(1, 0 | (_GLF_IDENTITY(1, ~ (~ (1)))))) >> (0 ^ 0)) == read_2)), false))), true, true, false)))))))))), ! (! (_GLF_IDENTITY(read_1 + 1 == read_2, bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(read_1, min(_GLF_IDENTITY(_GLF_IDENTITY(read_1, uint(uint(read_1))), 1u * (_GLF_IDENTITY(read_1, (false ? _GLF_FUZZED(workgroup_size) : read_1)))), _GLF_IDENTITY(read_1, (read_1) | (read_1)))) + 1 == read_2, ! (! (read_1 + _GLF_IDENTITY(1, (1) | (1)) == read_2))), false || _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1 == read_2, ! (! (read_1 + _GLF_IDENTITY(1, (1) / 1) == read_2))), bool(bvec3(_GLF_IDENTITY(read_1 + 1 == read_2, ! _GLF_IDENTITY((! (read_1 + 1 == read_2)), ! (! (_GLF_IDENTITY((! (read_1 + 1 == read_2)), ((! (read_1 + 1 == read_2))) && true))))), true, _GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, (_GLF_IDENTITY(true, false || (true))) || false)))))))), ! (! _GLF_IDENTITY(((_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1 == read_2, ! (! (read_1 + 1 == read_2))), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(read_1 + 1 == read_2, ! (! (read_1 + 1 == read_2))), true, _GLF_IDENTITY(true, ! (! (true)))), bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(read_1 + 1 == read_2, ! (! (read_1 + 1 == read_2))), true, _GLF_IDENTITY(true, ! (! (true)))), bvec3(bvec4(bvec3(_GLF_IDENTITY(read_1 + 1 == read_2, ! (! (read_1 + 1 == read_2))), true, _GLF_IDENTITY(true, ! (! (true)))), false)))), bvec3(bvec4(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(read_1 + 1 == read_2, ! (! (read_1 + 1 == read_2))), true, _GLF_IDENTITY(true, ! (! (true)))), bvec3(bvec4(bvec3(_GLF_IDENTITY(read_1 + 1 == read_2, ! (! (read_1 + 1 == read_2))), true, _GLF_IDENTITY(true, ! (! (true)))), false)))), true))))))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(((_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1 == read_2, ! (! (read_1 + 1 == read_2))), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(read_1 + 1 == read_2, ! (! (read_1 + 1 == read_2))), true, _GLF_IDENTITY(true, ! (! (true)))), bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(read_1 + 1 == read_2, ! (! (read_1 + 1 == read_2))), true, _GLF_IDENTITY(true, ! (! (true)))), bvec3(bvec4(bvec3(_GLF_IDENTITY(read_1 + 1 == read_2, ! (! (read_1 + 1 == read_2))), true, _GLF_IDENTITY(true, ! (! (true)))), false)))), bvec3(bvec4(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(read_1 + 1 == read_2, ! (! (read_1 + 1 == read_2))), true, _GLF_IDENTITY(true, ! (! (true)))), bvec3(bvec4(bvec3(_GLF_IDENTITY(read_1 + 1 == read_2, ! (! (read_1 + 1 == read_2))), true, _GLF_IDENTITY(true, ! (! (true)))), false)))), true))))))))), (((_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1 == read_2, ! (! (read_1 + 1 == read_2))), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(read_1 + 1 == read_2, ! (! (read_1 + 1 == read_2))), true, _GLF_IDENTITY(true, ! (! (true)))), bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(read_1 + 1 == read_2, ! (! (read_1 + 1 == read_2))), true, _GLF_IDENTITY(true, ! (! (true)))), bvec3(bvec4(bvec3(_GLF_IDENTITY(read_1 + 1 == read_2, ! (! (read_1 + 1 == read_2))), true, _GLF_IDENTITY(true, ! (! (true)))), false)))), bvec3(bvec4(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(read_1 + 1 == read_2, ! (! (read_1 + 1 == read_2))), true, _GLF_IDENTITY(true, ! (! (true)))), bvec3(bvec4(bvec3(_GLF_IDENTITY(read_1 + 1 == read_2, ! (! (read_1 + 1 == read_2))), true, _GLF_IDENTITY(true, ! (! (true)))), false)))), true)))))))))) || false)), ! (! (! (_GLF_IDENTITY(((_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1 == read_2, ! (! (read_1 + 1 == read_2))), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(read_1 + 1 == read_2, ! (! (read_1 + 1 == read_2))), true, _GLF_IDENTITY(true, ! (! (true)))), bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(read_1 + 1 == read_2, ! (! (read_1 + 1 == read_2))), true, _GLF_IDENTITY(true, ! (! (true)))), bvec3(bvec4(bvec3(_GLF_IDENTITY(read_1 + 1 == read_2, ! (! (read_1 + 1 == read_2))), true, _GLF_IDENTITY(true, ! (! (true)))), false)))), bvec3(bvec4(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(read_1 + 1 == read_2, ! (! (read_1 + 1 == read_2))), true, _GLF_IDENTITY(true, ! (! (true)))), bvec3(bvec4(bvec3(_GLF_IDENTITY(read_1 + 1 == read_2, ! (! (read_1 + 1 == read_2))), true, _GLF_IDENTITY(true, ! (! (true)))), false)))), true))))))))), (((_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1 == read_2, ! (! (read_1 + 1 == read_2))), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(read_1 + 1 == read_2, ! (! (read_1 + 1 == read_2))), true, _GLF_IDENTITY(true, ! (! (true)))), bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(read_1 + 1 == read_2, ! (! (read_1 + 1 == read_2))), true, _GLF_IDENTITY(true, ! (! (true)))), bvec3(bvec4(bvec3(_GLF_IDENTITY(read_1 + 1 == read_2, ! (! (read_1 + 1 == read_2))), true, _GLF_IDENTITY(true, ! (! (true)))), false)))), bvec3(bvec4(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(read_1 + 1 == read_2, ! (! (read_1 + 1 == read_2))), true, _GLF_IDENTITY(true, ! (! (true)))), bvec3(bvec4(bvec3(_GLF_IDENTITY(read_1 + 1 == read_2, ! (! (read_1 + 1 == read_2))), true, _GLF_IDENTITY(true, ! (! (true)))), false)))), true)))))))))) || false)))))))))))))))))) | 0u))), 1u)) | (uvec2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1 == read_2, bool(bool(_GLF_IDENTITY(read_1 + 1 == read_2, ! (! (read_1 + 1 == read_2)))))), ! (! (_GLF_IDENTITY(read_1 + 1 == read_2, bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1 == read_2, ! (! (read_1 + _GLF_IDENTITY(1, (1) | (1)) == read_2))), false || (_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1 == read_2, ! (! (read_1 + 1 == read_2))), bool(bvec3(_GLF_IDENTITY(read_1 + 1 == read_2, ! (! (read_1 + 1 == read_2))), true, true))))))))))), (_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1 == read_2, bool(bool(_GLF_IDENTITY(read_1 + 1 == read_2, _GLF_IDENTITY(! (! (read_1 + 1 == read_2)), ! (_GLF_IDENTITY(! (! (! (read_1 + 1 == read_2))), bool(bvec3(! (! (! (read_1 + 1 == read_2))), false, false))))))))), ! (! (_GLF_IDENTITY(read_1 + _GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) + 0)) ^ 0) == read_2, _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1 == read_2, false || (read_1 + _GLF_IDENTITY(1, (1) << 0) == read_2)), _GLF_IDENTITY(! (! (read_1 + _GLF_IDENTITY(1, (1) | (1)) == read_2)), ! (! (! (! (read_1 + _GLF_IDENTITY(1, (1) | (1)) == read_2)))))), false || (_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1 == read_2, ! _GLF_IDENTITY((! (read_1 + 1 == read_2)), ((! (read_1 + 1 == read_2))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), bool(bvec3(_GLF_IDENTITY(read_1 + 1 == read_2, ! (! _GLF_IDENTITY((read_1 + 1 == read_2), bool(bvec2(_GLF_IDENTITY((read_1 + 1 == read_2), ! (! ((read_1 + 1 == read_2)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), true, true)))))), (bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1 == read_2, false || (read_1 + _GLF_IDENTITY(1, (1) << 0) == read_2)), _GLF_IDENTITY(! (! (read_1 + _GLF_IDENTITY(1, (1) | (1)) == read_2)), ! (! (! (! (read_1 + _GLF_IDENTITY(1, (1) | (1)) == read_2)))))), false || (_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1 == read_2, ! _GLF_IDENTITY((! (read_1 + 1 == read_2)), ((! (read_1 + 1 == read_2))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), bool(bvec3(_GLF_IDENTITY(read_1 + 1 == read_2, ! (! _GLF_IDENTITY((read_1 + 1 == read_2), bool(bvec2(_GLF_IDENTITY((read_1 + 1 == read_2), ! (! ((read_1 + 1 == read_2)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), true, true))))))) && true)), (bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1 == read_2, false || (read_1 + _GLF_IDENTITY(1, (1) << 0) == read_2)), _GLF_IDENTITY(! (! (read_1 + _GLF_IDENTITY(1, (1) | (1)) == read_2)), ! (! (! (! (read_1 + _GLF_IDENTITY(1, (1) | (1)) == read_2)))))), false || (_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1 == read_2, ! _GLF_IDENTITY((! (read_1 + 1 == read_2)), ((! (read_1 + 1 == read_2))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), bool(bvec3(_GLF_IDENTITY(read_1 + 1 == read_2, ! (! _GLF_IDENTITY((read_1 + 1 == read_2), bool(bvec2(_GLF_IDENTITY((read_1 + 1 == read_2), ! (! ((read_1 + 1 == read_2)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), true, true)))))), (bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1 == read_2, false || (read_1 + _GLF_IDENTITY(1, (1) << 0) == read_2)), _GLF_IDENTITY(! (! (read_1 + _GLF_IDENTITY(1, (1) | (1)) == read_2)), ! (! (! (! (read_1 + _GLF_IDENTITY(1, (1) | (1)) == read_2)))))), false || (_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1 == read_2, ! _GLF_IDENTITY((! (read_1 + 1 == read_2)), ((! (read_1 + 1 == read_2))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), bool(bvec3(_GLF_IDENTITY(read_1 + 1 == read_2, ! (! _GLF_IDENTITY((read_1 + 1 == read_2), bool(bvec2(_GLF_IDENTITY((read_1 + 1 == read_2), ! (! ((read_1 + 1 == read_2)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), true, true))))))) && true))) && true)))))) || false)), ~ (~ (uint(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1 == read_2, bool(bool(_GLF_IDENTITY(read_1 + 1 == read_2, ! (! (read_1 + 1 == read_2)))))), ! (! (_GLF_IDENTITY(read_1 + 1 == read_2, bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1 == read_2, ! (! (read_1 + _GLF_IDENTITY(1, (1) | (1)) == read_2))), false || (_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1 == read_2, ! (! (read_1 + 1 == read_2))), bool(bvec3(_GLF_IDENTITY(read_1 + 1 == read_2, ! (! (read_1 + 1 == read_2))), true, true))))))))))), (_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1 == read_2, bool(bool(_GLF_IDENTITY(read_1 + 1 == read_2, _GLF_IDENTITY(! (! (read_1 + 1 == read_2)), ! (_GLF_IDENTITY(! (! (! (read_1 + 1 == read_2))), bool(bvec3(! (! (! (read_1 + 1 == read_2))), false, false))))))))), ! (! (_GLF_IDENTITY(read_1 + _GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) + 0)) ^ 0) == read_2, _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1 == read_2, false || (read_1 + _GLF_IDENTITY(1, (1) << 0) == read_2)), _GLF_IDENTITY(! (! (read_1 + _GLF_IDENTITY(1, (1) | (1)) == read_2)), ! (! (! (! (read_1 + _GLF_IDENTITY(1, (1) | (1)) == read_2)))))), false || (_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1 == read_2, ! _GLF_IDENTITY((! (read_1 + 1 == read_2)), ((! (read_1 + 1 == read_2))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), bool(bvec3(_GLF_IDENTITY(read_1 + 1 == read_2, ! (! _GLF_IDENTITY((read_1 + 1 == read_2), bool(bvec2(_GLF_IDENTITY((read_1 + 1 == read_2), ! (! ((read_1 + 1 == read_2)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), true, true)))))), (bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1 == read_2, false || (read_1 + _GLF_IDENTITY(1, (1) << 0) == read_2)), _GLF_IDENTITY(! (! (read_1 + _GLF_IDENTITY(1, (1) | (1)) == read_2)), ! (! (! (! (read_1 + _GLF_IDENTITY(1, (1) | (1)) == read_2)))))), false || (_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1 == read_2, ! _GLF_IDENTITY((! (read_1 + 1 == read_2)), ((! (read_1 + 1 == read_2))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), bool(bvec3(_GLF_IDENTITY(read_1 + 1 == read_2, ! (! _GLF_IDENTITY((read_1 + 1 == read_2), bool(bvec2(_GLF_IDENTITY((read_1 + 1 == read_2), ! (! ((read_1 + 1 == read_2)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), true, true))))))) && true)), (bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1 == read_2, false || (read_1 + _GLF_IDENTITY(1, (1) << 0) == read_2)), _GLF_IDENTITY(! (! (read_1 + _GLF_IDENTITY(1, (1) | (1)) == read_2)), ! (! (! (! (read_1 + _GLF_IDENTITY(1, (1) | (1)) == read_2)))))), false || (_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1 == read_2, ! _GLF_IDENTITY((! (read_1 + 1 == read_2)), ((! (read_1 + 1 == read_2))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), bool(bvec3(_GLF_IDENTITY(read_1 + 1 == read_2, ! (! _GLF_IDENTITY((read_1 + 1 == read_2), bool(bvec2(_GLF_IDENTITY((read_1 + 1 == read_2), ! (! ((read_1 + 1 == read_2)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), true, true)))))), (bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1 == read_2, false || (read_1 + _GLF_IDENTITY(1, (1) << 0) == read_2)), _GLF_IDENTITY(! (! (read_1 + _GLF_IDENTITY(1, (1) | (1)) == read_2)), ! (! (! (! (read_1 + _GLF_IDENTITY(1, (1) | (1)) == read_2)))))), false || (_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1 == read_2, ! _GLF_IDENTITY((! (read_1 + 1 == read_2)), ((! (read_1 + 1 == read_2))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), bool(bvec3(_GLF_IDENTITY(read_1 + 1 == read_2, ! (! _GLF_IDENTITY((read_1 + 1 == read_2), bool(bvec2(_GLF_IDENTITY((read_1 + 1 == read_2), ! (! ((read_1 + 1 == read_2)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), true, true))))))) && true))) && true)))))) || false))))), min(uint(_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1 == read_2, bool(bool(_GLF_IDENTITY(read_1 + 1 == read_2, ! (! (read_1 + 1 == read_2)))))), ! (! (_GLF_IDENTITY(read_1 + 1 == read_2, bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1 == read_2, ! (! (read_1 + _GLF_IDENTITY(1, _GLF_IDENTITY((1) | (1), ~ (~ ((1) | (1))))) == read_2))), false || (_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1 == read_2, ! (! (read_1 + 1 == read_2))), bool(bvec3(_GLF_IDENTITY(read_1 + 1 == read_2, ! (! (read_1 + 1 == read_2))), true, true)))))))))))), _GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1 == read_2, bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1, clamp(read_1 + 1, read_1 + 1, _GLF_IDENTITY(read_1 + 1, 0u ^ (_GLF_IDENTITY(read_1 + 1, uint(uvec3(read_1 + 1, 0u, 0u))))))) == read_2, ! (! (read_1 + 1 == read_2)))))), ! (! (_GLF_IDENTITY(read_1 + 1 == read_2, bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1 == read_2, ! (! (read_1 + _GLF_IDENTITY(1, (1) | (1)) == read_2))), false || (_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1 == read_2, ! (! (_GLF_IDENTITY(read_1 + 1 == read_2, _GLF_IDENTITY(bool(bool(read_1 + 1 == read_2)), (bool(bool(read_1 + 1 == read_2))) && true))))), bool(bvec3(_GLF_IDENTITY(read_1 + 1 == read_2, ! (! (read_1 + 1 == read_2))), true, true)))))))))))), (uint(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(read_1, 0u | (read_1)) + 1 == read_2, _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(read_1 + 1 == read_2, ! (! (read_1 + _GLF_IDENTITY(1, (_GLF_IDENTITY(1, 0 | (_GLF_IDENTITY(1, ~ (~ (1)))))) >> (0 ^ 0)) == read_2))))), ! (! (bool(bool(_GLF_IDENTITY(read_1 + 1 == read_2, ! (! (read_1 + _GLF_IDENTITY(1, (_GLF_IDENTITY(1, 0 | (_GLF_IDENTITY(1, ~ (~ (1)))))) >> (0 ^ 0)) == read_2))))))))), ! (! (_GLF_IDENTITY(read_1 + 1 == read_2, bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(read_1, min(_GLF_IDENTITY(read_1, 1u * (read_1)), read_1)) + 1 == read_2, ! (! (read_1 + _GLF_IDENTITY(1, (1) | (1)) == read_2))), false || _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1 == read_2, ! (! (read_1 + 1 == read_2))), bool(bvec3(_GLF_IDENTITY(read_1 + 1 == read_2, ! (! (read_1 + 1 == read_2))), true, _GLF_IDENTITY(true, ! (! (true))))))), ! (! ((_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1 == read_2, ! (! (read_1 + 1 == read_2))), bool(bvec3(_GLF_IDENTITY(read_1 + 1 == read_2, ! (! (read_1 + 1 == read_2))), true, _GLF_IDENTITY(true, ! (! (true))))))))))))))))))) | 0u))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1 == read_2, bool(bool(_GLF_IDENTITY(read_1 + 1 == read_2, ! (! (read_1 + 1 == read_2)))))), ! (! (_GLF_IDENTITY(read_1 + 1 == read_2, bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1 == read_2, ! (! (read_1 + _GLF_IDENTITY(1, (1) | (1)) == read_2))), false || (_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1 == read_2, ! (! (read_1 + 1 == read_2))), bool(bvec3(_GLF_IDENTITY(read_1 + 1 == read_2, ! (! (read_1 + 1 == read_2))), true, true))))))))))), (_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1 == read_2, bool(bool(_GLF_IDENTITY(read_1 + 1 == read_2, _GLF_IDENTITY(! (! (read_1 + 1 == read_2)), ! (_GLF_IDENTITY(! (! (! (read_1 + 1 == read_2))), bool(bvec3(! (! (! (read_1 + 1 == read_2))), false, false))))))))), ! (! (_GLF_IDENTITY(read_1 + _GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) + 0)) ^ 0) == read_2, _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1 == read_2, false || (read_1 + _GLF_IDENTITY(1, (1) << 0) == read_2)), _GLF_IDENTITY(! (! (read_1 + _GLF_IDENTITY(1, (1) | (1)) == read_2)), ! (! (! (! (read_1 + _GLF_IDENTITY(1, (1) | (1)) == read_2)))))), false || (_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1 == read_2, ! _GLF_IDENTITY((! (read_1 + 1 == read_2)), ((! (read_1 + 1 == read_2))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), bool(bvec3(_GLF_IDENTITY(read_1 + 1 == read_2, ! (! _GLF_IDENTITY((read_1 + 1 == read_2), bool(bvec2(_GLF_IDENTITY((read_1 + 1 == read_2), ! (! ((read_1 + 1 == read_2)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), true, true)))))), (bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1 == read_2, false || (read_1 + _GLF_IDENTITY(1, (1) << 0) == read_2)), _GLF_IDENTITY(! (! (read_1 + _GLF_IDENTITY(1, (1) | (1)) == read_2)), ! (! (! (! (read_1 + _GLF_IDENTITY(1, (1) | (1)) == read_2)))))), false || (_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1 == read_2, ! _GLF_IDENTITY((! (read_1 + 1 == read_2)), ((! (read_1 + 1 == read_2))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), bool(bvec3(_GLF_IDENTITY(read_1 + 1 == read_2, ! (! _GLF_IDENTITY((read_1 + 1 == read_2), bool(bvec2(_GLF_IDENTITY((read_1 + 1 == read_2), ! (! ((read_1 + 1 == read_2)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), true, true))))))) && true)), (bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1 == read_2, false || (read_1 + _GLF_IDENTITY(1, (1) << 0) == read_2)), _GLF_IDENTITY(! (! (read_1 + _GLF_IDENTITY(1, (1) | (1)) == read_2)), ! (! (! (! (read_1 + _GLF_IDENTITY(1, (1) | (1)) == read_2)))))), false || (_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1 == read_2, ! _GLF_IDENTITY((! (read_1 + 1 == read_2)), ((! (read_1 + 1 == read_2))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), bool(bvec3(_GLF_IDENTITY(read_1 + 1 == read_2, ! (! _GLF_IDENTITY((read_1 + 1 == read_2), bool(bvec2(_GLF_IDENTITY((read_1 + 1 == read_2), ! (! ((read_1 + 1 == read_2)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), true, true)))))), (bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1 == read_2, false || (read_1 + _GLF_IDENTITY(1, (1) << 0) == read_2)), _GLF_IDENTITY(! (! (read_1 + _GLF_IDENTITY(1, (1) | (1)) == read_2)), ! (! (! (! (read_1 + _GLF_IDENTITY(1, (1) | (1)) == read_2)))))), false || (_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1 == read_2, ! _GLF_IDENTITY((! (read_1 + 1 == read_2)), ((! (read_1 + 1 == read_2))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), bool(bvec3(_GLF_IDENTITY(read_1 + 1 == read_2, ! (! _GLF_IDENTITY((read_1 + 1 == read_2), bool(bvec2(_GLF_IDENTITY((read_1 + 1 == read_2), ! (! ((read_1 + 1 == read_2)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), true, true))))))) && true))) && true)))))) || false)), ~ (~ (uint(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1 == read_2, bool(bool(_GLF_IDENTITY(read_1 + 1 == read_2, ! (! (read_1 + 1 == read_2)))))), ! (! (_GLF_IDENTITY(read_1 + 1 == read_2, bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1 == read_2, ! (! (read_1 + _GLF_IDENTITY(1, (1) | (1)) == read_2))), false || (_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1 == read_2, ! (! (read_1 + 1 == read_2))), bool(bvec3(_GLF_IDENTITY(read_1 + 1 == read_2, ! (! (read_1 + 1 == read_2))), true, true))))))))))), (_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1 == read_2, bool(bool(_GLF_IDENTITY(read_1 + 1 == read_2, _GLF_IDENTITY(! (! (read_1 + 1 == read_2)), ! (_GLF_IDENTITY(! (! (! (read_1 + 1 == read_2))), bool(bvec3(! (! (! (read_1 + 1 == read_2))), false, false))))))))), ! (! (_GLF_IDENTITY(read_1 + _GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) + 0)) ^ 0) == read_2, _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1 == read_2, false || (read_1 + _GLF_IDENTITY(1, (1) << 0) == read_2)), _GLF_IDENTITY(! (! (read_1 + _GLF_IDENTITY(1, (1) | (1)) == read_2)), ! (! (! (! (read_1 + _GLF_IDENTITY(1, (1) | (1)) == read_2)))))), false || (_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1 == read_2, ! _GLF_IDENTITY((! (read_1 + 1 == read_2)), ((! (read_1 + 1 == read_2))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), bool(bvec3(_GLF_IDENTITY(read_1 + 1 == read_2, ! (! _GLF_IDENTITY((read_1 + 1 == read_2), bool(bvec2(_GLF_IDENTITY((read_1 + 1 == read_2), ! (! ((read_1 + 1 == read_2)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), true, true)))))), (bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1 == read_2, false || (read_1 + _GLF_IDENTITY(1, (1) << 0) == read_2)), _GLF_IDENTITY(! (! (read_1 + _GLF_IDENTITY(1, (1) | (1)) == read_2)), ! (! (! (! (read_1 + _GLF_IDENTITY(1, (1) | (1)) == read_2)))))), false || (_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1 == read_2, ! _GLF_IDENTITY((! (read_1 + 1 == read_2)), ((! (read_1 + 1 == read_2))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), bool(bvec3(_GLF_IDENTITY(read_1 + 1 == read_2, ! (! _GLF_IDENTITY((read_1 + 1 == read_2), bool(bvec2(_GLF_IDENTITY((read_1 + 1 == read_2), ! (! ((read_1 + 1 == read_2)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), true, true))))))) && true)), (bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1 == read_2, false || (read_1 + _GLF_IDENTITY(1, (1) << 0) == read_2)), _GLF_IDENTITY(! (! (read_1 + _GLF_IDENTITY(1, (1) | (1)) == read_2)), ! (! (! (! (read_1 + _GLF_IDENTITY(1, (1) | (1)) == read_2)))))), false || (_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1 == read_2, ! _GLF_IDENTITY((! (read_1 + 1 == read_2)), ((! (read_1 + 1 == read_2))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), bool(bvec3(_GLF_IDENTITY(read_1 + 1 == read_2, ! (! _GLF_IDENTITY((read_1 + 1 == read_2), bool(bvec2(_GLF_IDENTITY((read_1 + 1 == read_2), ! (! ((read_1 + 1 == read_2)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), true, true)))))), (bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1 == read_2, false || (read_1 + _GLF_IDENTITY(1, (1) << 0) == read_2)), _GLF_IDENTITY(! (! (read_1 + _GLF_IDENTITY(1, (1) | (1)) == read_2)), ! (! (! (! (read_1 + _GLF_IDENTITY(1, (1) | (1)) == read_2)))))), false || (_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1 == read_2, ! _GLF_IDENTITY((! (read_1 + 1 == read_2)), ((! (read_1 + 1 == read_2))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), bool(bvec3(_GLF_IDENTITY(read_1 + 1 == read_2, ! (! _GLF_IDENTITY((read_1 + 1 == read_2), bool(bvec2(_GLF_IDENTITY((read_1 + 1 == read_2), ! (! ((read_1 + 1 == read_2)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), true, true))))))) && true))) && true)))))) || false))))), min(uint(_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1 == read_2, bool(bool(_GLF_IDENTITY(read_1 + 1 == read_2, ! (! (read_1 + 1 == read_2)))))), ! (! (_GLF_IDENTITY(read_1 + 1 == read_2, bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1 == read_2, ! (! (read_1 + _GLF_IDENTITY(1, _GLF_IDENTITY((1) | (1), ~ (~ ((1) | (1))))) == read_2))), false || (_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1 == read_2, ! (! (read_1 + 1 == read_2))), bool(bvec3(_GLF_IDENTITY(read_1 + 1 == read_2, ! (! (read_1 + 1 == read_2))), true, true)))))))))))), _GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1 == read_2, bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1, clamp(read_1 + 1, read_1 + 1, _GLF_IDENTITY(read_1 + 1, 0u ^ (_GLF_IDENTITY(read_1 + 1, uint(uvec3(read_1 + 1, 0u, 0u))))))) == read_2, ! (! (read_1 + 1 == read_2)))))), ! (! (_GLF_IDENTITY(read_1 + 1 == read_2, bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1 == read_2, ! (! (read_1 + _GLF_IDENTITY(1, (1) | (1)) == read_2))), false || (_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1 == read_2, ! (! (_GLF_IDENTITY(read_1 + 1 == read_2, _GLF_IDENTITY(bool(bool(read_1 + 1 == read_2)), (bool(bool(read_1 + 1 == read_2))) && true))))), bool(bvec3(_GLF_IDENTITY(read_1 + 1 == read_2, ! (! (read_1 + 1 == read_2))), true, true)))))))))))), (uint(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(read_1, 0u | (read_1)) + 1 == read_2, _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(read_1 + 1 == read_2, ! (! (read_1 + _GLF_IDENTITY(1, (_GLF_IDENTITY(1, 0 | (_GLF_IDENTITY(1, ~ (~ (1)))))) >> (0 ^ 0)) == read_2))))), ! (! (bool(bool(_GLF_IDENTITY(read_1 + 1 == read_2, ! (! (read_1 + _GLF_IDENTITY(1, (_GLF_IDENTITY(1, 0 | (_GLF_IDENTITY(1, ~ (~ (1)))))) >> (0 ^ 0)) == read_2))))))))), ! (! (_GLF_IDENTITY(read_1 + 1 == read_2, bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(read_1, min(_GLF_IDENTITY(read_1, 1u * (read_1)), read_1)) + 1 == read_2, ! (! (read_1 + _GLF_IDENTITY(1, (1) | (1)) == read_2))), false || _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1 == read_2, ! (! (read_1 + 1 == read_2))), bool(bvec3(_GLF_IDENTITY(read_1 + 1 == read_2, ! (! (read_1 + 1 == read_2))), true, _GLF_IDENTITY(true, ! (! (true))))))), ! (! ((_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1 == read_2, ! (! (read_1 + 1 == read_2))), bool(bvec3(_GLF_IDENTITY(read_1 + 1 == read_2, ! (! (read_1 + 1 == read_2))), true, _GLF_IDENTITY(true, ! (! (true))))))))))))))))))) | 0u))), _GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1 == read_2, bool(bool(_GLF_IDENTITY(read_1 + 1 == read_2, ! (! (read_1 + 1 == read_2)))))), ! (! (_GLF_IDENTITY(read_1 + 1 == read_2, bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1 == read_2, ! (! (read_1 + _GLF_IDENTITY(1, (1) | (1)) == read_2))), false || (_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1 == read_2, ! (! (read_1 + 1 == read_2))), bool(bvec3(_GLF_IDENTITY(read_1 + 1 == read_2, ! (! (read_1 + 1 == read_2))), true, true))))))))))), (_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1 == read_2, bool(bool(_GLF_IDENTITY(read_1 + 1 == read_2, _GLF_IDENTITY(! (! (read_1 + 1 == read_2)), ! (_GLF_IDENTITY(! (! (! (read_1 + 1 == read_2))), bool(bvec3(! (! (! (read_1 + 1 == read_2))), false, false))))))))), ! (! (_GLF_IDENTITY(read_1 + _GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) + 0)) ^ 0) == read_2, _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1 == read_2, false || (read_1 + _GLF_IDENTITY(1, (1) << 0) == read_2)), _GLF_IDENTITY(! (! (read_1 + _GLF_IDENTITY(1, (1) | (1)) == read_2)), ! (! (! (! (read_1 + _GLF_IDENTITY(1, (1) | (1)) == read_2)))))), false || (_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1 == read_2, ! _GLF_IDENTITY((! (read_1 + 1 == read_2)), ((! (read_1 + 1 == read_2))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), bool(bvec3(_GLF_IDENTITY(read_1 + 1 == read_2, ! (! _GLF_IDENTITY((read_1 + 1 == read_2), bool(bvec2(_GLF_IDENTITY((read_1 + 1 == read_2), ! (! ((read_1 + 1 == read_2)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), true, true)))))), (bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1 == read_2, false || (read_1 + _GLF_IDENTITY(1, (1) << 0) == read_2)), _GLF_IDENTITY(! (! (read_1 + _GLF_IDENTITY(1, (1) | (1)) == read_2)), ! (! (! (! (read_1 + _GLF_IDENTITY(1, (1) | (1)) == read_2)))))), false || (_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1 == read_2, ! _GLF_IDENTITY((! (read_1 + 1 == read_2)), ((! (read_1 + 1 == read_2))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), bool(bvec3(_GLF_IDENTITY(read_1 + 1 == read_2, ! (! _GLF_IDENTITY((read_1 + 1 == read_2), bool(bvec2(_GLF_IDENTITY((read_1 + 1 == read_2), ! (! ((read_1 + 1 == read_2)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), true, true))))))) && true)), (bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1 == read_2, false || (read_1 + _GLF_IDENTITY(1, (1) << 0) == read_2)), _GLF_IDENTITY(! (! (read_1 + _GLF_IDENTITY(1, (1) | (1)) == read_2)), ! (! (! (! (read_1 + _GLF_IDENTITY(1, (1) | (1)) == read_2)))))), false || (_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1 == read_2, ! _GLF_IDENTITY((! (read_1 + 1 == read_2)), ((! (read_1 + 1 == read_2))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), bool(bvec3(_GLF_IDENTITY(read_1 + 1 == read_2, ! (! _GLF_IDENTITY((read_1 + 1 == read_2), bool(bvec2(_GLF_IDENTITY((read_1 + 1 == read_2), ! (! ((read_1 + 1 == read_2)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), true, true)))))), (bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1 == read_2, false || (read_1 + _GLF_IDENTITY(1, (1) << 0) == read_2)), _GLF_IDENTITY(! (! (read_1 + _GLF_IDENTITY(1, (1) | (1)) == read_2)), ! (! (! (! (read_1 + _GLF_IDENTITY(1, (1) | (1)) == read_2)))))), false || (_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1 == read_2, ! _GLF_IDENTITY((! (read_1 + 1 == read_2)), ((! (read_1 + 1 == read_2))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), bool(bvec3(_GLF_IDENTITY(read_1 + 1 == read_2, ! (! _GLF_IDENTITY((read_1 + 1 == read_2), bool(bvec2(_GLF_IDENTITY((read_1 + 1 == read_2), ! (! ((read_1 + 1 == read_2)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), true, true))))))) && true))) && true)))))) || false)), ~ (~ (uint(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1 == read_2, bool(bool(_GLF_IDENTITY(read_1 + 1 == read_2, ! (! (read_1 + 1 == read_2)))))), ! (! (_GLF_IDENTITY(read_1 + 1 == read_2, bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1 == read_2, ! (! (read_1 + _GLF_IDENTITY(1, (1) | (1)) == read_2))), false || (_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1 == read_2, ! (! (read_1 + 1 == read_2))), bool(bvec3(_GLF_IDENTITY(read_1 + 1 == read_2, ! (! (read_1 + 1 == read_2))), true, true))))))))))), (_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1 == read_2, bool(bool(_GLF_IDENTITY(read_1 + 1 == read_2, _GLF_IDENTITY(! (! (read_1 + 1 == read_2)), ! (_GLF_IDENTITY(! (! (! (read_1 + 1 == read_2))), bool(bvec3(! (! (! (read_1 + 1 == read_2))), false, false))))))))), ! (! (_GLF_IDENTITY(read_1 + _GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) + 0)) ^ 0) == read_2, _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1 == read_2, false || (read_1 + _GLF_IDENTITY(1, (1) << 0) == read_2)), _GLF_IDENTITY(! (! (read_1 + _GLF_IDENTITY(1, (1) | (1)) == read_2)), ! (! (! (! (read_1 + _GLF_IDENTITY(1, (1) | (1)) == read_2)))))), false || (_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1 == read_2, ! _GLF_IDENTITY((! (read_1 + 1 == read_2)), ((! (read_1 + 1 == read_2))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), bool(bvec3(_GLF_IDENTITY(read_1 + 1 == read_2, ! (! _GLF_IDENTITY((read_1 + 1 == read_2), bool(bvec2(_GLF_IDENTITY((read_1 + 1 == read_2), ! (! ((read_1 + 1 == read_2)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), true, true)))))), (bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1 == read_2, false || (read_1 + _GLF_IDENTITY(1, (1) << 0) == read_2)), _GLF_IDENTITY(! (! (read_1 + _GLF_IDENTITY(1, (1) | (1)) == read_2)), ! (! (! (! (read_1 + _GLF_IDENTITY(1, (1) | (1)) == read_2)))))), false || (_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1 == read_2, ! _GLF_IDENTITY((! (read_1 + 1 == read_2)), ((! (read_1 + 1 == read_2))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), bool(bvec3(_GLF_IDENTITY(read_1 + 1 == read_2, ! (! _GLF_IDENTITY((read_1 + 1 == read_2), bool(bvec2(_GLF_IDENTITY((read_1 + 1 == read_2), ! (! ((read_1 + 1 == read_2)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), true, true))))))) && true)), (bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1 == read_2, false || (read_1 + _GLF_IDENTITY(1, (1) << 0) == read_2)), _GLF_IDENTITY(! (! (read_1 + _GLF_IDENTITY(1, (1) | (1)) == read_2)), ! (! (! (! (read_1 + _GLF_IDENTITY(1, (1) | (1)) == read_2)))))), false || (_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1 == read_2, ! _GLF_IDENTITY((! (read_1 + 1 == read_2)), ((! (read_1 + 1 == read_2))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), bool(bvec3(_GLF_IDENTITY(read_1 + 1 == read_2, ! (! _GLF_IDENTITY((read_1 + 1 == read_2), bool(bvec2(_GLF_IDENTITY((read_1 + 1 == read_2), ! (! ((read_1 + 1 == read_2)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), true, true)))))), (bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1 == read_2, false || (read_1 + _GLF_IDENTITY(1, (1) << 0) == read_2)), _GLF_IDENTITY(! (! (read_1 + _GLF_IDENTITY(1, (1) | (1)) == read_2)), ! (! (! (! (read_1 + _GLF_IDENTITY(1, (1) | (1)) == read_2)))))), false || (_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1 == read_2, ! _GLF_IDENTITY((! (read_1 + 1 == read_2)), ((! (read_1 + 1 == read_2))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), bool(bvec3(_GLF_IDENTITY(read_1 + 1 == read_2, ! (! _GLF_IDENTITY((read_1 + 1 == read_2), bool(bvec2(_GLF_IDENTITY((read_1 + 1 == read_2), ! (! ((read_1 + 1 == read_2)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), true, true))))))) && true))) && true)))))) || false))))), min(uint(_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1 == read_2, bool(bool(_GLF_IDENTITY(read_1 + 1 == read_2, ! (! (read_1 + 1 == read_2)))))), ! (! (_GLF_IDENTITY(read_1 + 1 == read_2, bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1 == read_2, ! (! (read_1 + _GLF_IDENTITY(1, _GLF_IDENTITY((1) | (1), ~ (~ ((1) | (1))))) == read_2))), false || (_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1 == read_2, ! (! (read_1 + 1 == read_2))), bool(bvec3(_GLF_IDENTITY(read_1 + 1 == read_2, ! (! (read_1 + 1 == read_2))), true, true)))))))))))), _GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1 == read_2, bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1, clamp(read_1 + 1, read_1 + 1, _GLF_IDENTITY(read_1 + 1, 0u ^ (_GLF_IDENTITY(read_1 + 1, uint(uvec3(read_1 + 1, 0u, 0u))))))) == read_2, ! (! (read_1 + 1 == read_2)))))), ! (! (_GLF_IDENTITY(read_1 + 1 == read_2, bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1 == read_2, ! (! (read_1 + _GLF_IDENTITY(1, (1) | (1)) == read_2))), false || (_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1 == read_2, ! (! (_GLF_IDENTITY(read_1 + 1 == read_2, _GLF_IDENTITY(bool(bool(read_1 + 1 == read_2)), (bool(bool(read_1 + 1 == read_2))) && true))))), bool(bvec3(_GLF_IDENTITY(read_1 + 1 == read_2, ! (! (read_1 + 1 == read_2))), true, true)))))))))))), (uint(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(read_1, 0u | (read_1)) + 1 == read_2, _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(read_1 + 1 == read_2, ! (! (read_1 + _GLF_IDENTITY(1, (_GLF_IDENTITY(1, 0 | (_GLF_IDENTITY(1, ~ (~ (1)))))) >> (0 ^ 0)) == read_2))))), ! (! (bool(bool(_GLF_IDENTITY(read_1 + 1 == read_2, ! (! (read_1 + _GLF_IDENTITY(1, (_GLF_IDENTITY(1, 0 | (_GLF_IDENTITY(1, ~ (~ (1)))))) >> (0 ^ 0)) == read_2))))))))), ! (! (_GLF_IDENTITY(read_1 + 1 == read_2, bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(read_1, min(_GLF_IDENTITY(read_1, 1u * (read_1)), read_1)) + 1 == read_2, ! (! (read_1 + _GLF_IDENTITY(1, (1) | (1)) == read_2))), false || _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1 == read_2, ! (! (read_1 + 1 == read_2))), bool(bvec3(_GLF_IDENTITY(read_1 + 1 == read_2, ! (! (read_1 + 1 == read_2))), true, _GLF_IDENTITY(true, ! (! (true))))))), ! (! ((_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1 == read_2, ! (! (read_1 + 1 == read_2))), bool(bvec3(_GLF_IDENTITY(read_1 + 1 == read_2, ! (! (read_1 + 1 == read_2))), true, _GLF_IDENTITY(true, ! (! (true))))))))))))))))))) | 0u))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1 == read_2, bool(bool(_GLF_IDENTITY(read_1 + 1 == read_2, ! (! (read_1 + 1 == read_2)))))), ! (! (_GLF_IDENTITY(read_1 + 1 == read_2, bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1 == read_2, ! (! (read_1 + _GLF_IDENTITY(1, (1) | (1)) == read_2))), false || (_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1 == read_2, ! (! (read_1 + 1 == read_2))), bool(bvec3(_GLF_IDENTITY(read_1 + 1 == read_2, ! (! (read_1 + 1 == read_2))), true, true))))))))))), (_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1 == read_2, bool(bool(_GLF_IDENTITY(read_1 + 1 == read_2, _GLF_IDENTITY(! (! (read_1 + 1 == read_2)), ! (_GLF_IDENTITY(! (! (! (read_1 + 1 == read_2))), bool(bvec3(! (! (! (read_1 + 1 == read_2))), false, false))))))))), ! (! (_GLF_IDENTITY(read_1 + _GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) + 0)) ^ 0) == read_2, _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1 == read_2, false || (read_1 + _GLF_IDENTITY(1, (1) << 0) == read_2)), _GLF_IDENTITY(! (! (read_1 + _GLF_IDENTITY(1, (1) | (1)) == read_2)), ! (! (! (! (read_1 + _GLF_IDENTITY(1, (1) | (1)) == read_2)))))), false || (_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1 == read_2, ! _GLF_IDENTITY((! (read_1 + 1 == read_2)), ((! (read_1 + 1 == read_2))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), bool(bvec3(_GLF_IDENTITY(read_1 + 1 == read_2, ! (! _GLF_IDENTITY((read_1 + 1 == read_2), bool(bvec2(_GLF_IDENTITY((read_1 + 1 == read_2), ! (! ((read_1 + 1 == read_2)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), true, true)))))), (bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1 == read_2, false || (read_1 + _GLF_IDENTITY(1, (1) << 0) == read_2)), _GLF_IDENTITY(! (! (read_1 + _GLF_IDENTITY(1, (1) | (1)) == read_2)), ! (! (! (! (read_1 + _GLF_IDENTITY(1, (1) | (1)) == read_2)))))), false || (_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1 == read_2, ! _GLF_IDENTITY((! (read_1 + 1 == read_2)), ((! (read_1 + 1 == read_2))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), bool(bvec3(_GLF_IDENTITY(read_1 + 1 == read_2, ! (! _GLF_IDENTITY((read_1 + 1 == read_2), bool(bvec2(_GLF_IDENTITY((read_1 + 1 == read_2), ! (! ((read_1 + 1 == read_2)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), true, true))))))) && true)), (bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1 == read_2, false || (read_1 + _GLF_IDENTITY(1, (1) << 0) == read_2)), _GLF_IDENTITY(! (! (read_1 + _GLF_IDENTITY(1, (1) | (1)) == read_2)), ! (! (! (! (read_1 + _GLF_IDENTITY(1, (1) | (1)) == read_2)))))), false || (_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1 == read_2, ! _GLF_IDENTITY((! (read_1 + 1 == read_2)), ((! (read_1 + 1 == read_2))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), bool(bvec3(_GLF_IDENTITY(read_1 + 1 == read_2, ! (! _GLF_IDENTITY((read_1 + 1 == read_2), bool(bvec2(_GLF_IDENTITY((read_1 + 1 == read_2), ! (! ((read_1 + 1 == read_2)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), true, true)))))), (bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1 == read_2, false || (read_1 + _GLF_IDENTITY(1, (1) << 0) == read_2)), _GLF_IDENTITY(! (! (read_1 + _GLF_IDENTITY(1, (1) | (1)) == read_2)), ! (! (! (! (read_1 + _GLF_IDENTITY(1, (1) | (1)) == read_2)))))), false || (_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1 == read_2, ! _GLF_IDENTITY((! (read_1 + 1 == read_2)), ((! (read_1 + 1 == read_2))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), bool(bvec3(_GLF_IDENTITY(read_1 + 1 == read_2, ! (! _GLF_IDENTITY((read_1 + 1 == read_2), bool(bvec2(_GLF_IDENTITY((read_1 + 1 == read_2), ! (! ((read_1 + 1 == read_2)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), true, true))))))) && true))) && true)))))) || false)), ~ (~ (uint(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1 == read_2, bool(bool(_GLF_IDENTITY(read_1 + 1 == read_2, ! (! (read_1 + 1 == read_2)))))), ! (! (_GLF_IDENTITY(read_1 + 1 == read_2, bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1 == read_2, ! (! (read_1 + _GLF_IDENTITY(1, (1) | (1)) == read_2))), false || (_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1 == read_2, ! (! (read_1 + 1 == read_2))), bool(bvec3(_GLF_IDENTITY(read_1 + 1 == read_2, ! (! (read_1 + 1 == read_2))), true, true))))))))))), (_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1 == read_2, bool(bool(_GLF_IDENTITY(read_1 + 1 == read_2, _GLF_IDENTITY(! (! (read_1 + 1 == read_2)), ! (_GLF_IDENTITY(! (! (! (read_1 + 1 == read_2))), bool(bvec3(! (! (! (read_1 + 1 == read_2))), false, false))))))))), ! (! (_GLF_IDENTITY(read_1 + _GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) + 0)) ^ 0) == read_2, _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1 == read_2, false || (read_1 + _GLF_IDENTITY(1, (1) << 0) == read_2)), _GLF_IDENTITY(! (! (read_1 + _GLF_IDENTITY(1, (1) | (1)) == read_2)), ! (! (! (! (read_1 + _GLF_IDENTITY(1, (1) | (1)) == read_2)))))), false || (_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1 == read_2, ! _GLF_IDENTITY((! (read_1 + 1 == read_2)), ((! (read_1 + 1 == read_2))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), bool(bvec3(_GLF_IDENTITY(read_1 + 1 == read_2, ! (! _GLF_IDENTITY((read_1 + 1 == read_2), bool(bvec2(_GLF_IDENTITY((read_1 + 1 == read_2), ! (! ((read_1 + 1 == read_2)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), true, true)))))), (bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1 == read_2, false || (read_1 + _GLF_IDENTITY(1, (1) << 0) == read_2)), _GLF_IDENTITY(! (! (read_1 + _GLF_IDENTITY(1, (1) | (1)) == read_2)), ! (! (! (! (read_1 + _GLF_IDENTITY(1, (1) | (1)) == read_2)))))), false || (_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1 == read_2, ! _GLF_IDENTITY((! (read_1 + 1 == read_2)), ((! (read_1 + 1 == read_2))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), bool(bvec3(_GLF_IDENTITY(read_1 + 1 == read_2, ! (! _GLF_IDENTITY((read_1 + 1 == read_2), bool(bvec2(_GLF_IDENTITY((read_1 + 1 == read_2), ! (! ((read_1 + 1 == read_2)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), true, true))))))) && true)), (bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1 == read_2, false || (read_1 + _GLF_IDENTITY(1, (1) << 0) == read_2)), _GLF_IDENTITY(! (! (read_1 + _GLF_IDENTITY(1, (1) | (1)) == read_2)), ! (! (! (! (read_1 + _GLF_IDENTITY(1, (1) | (1)) == read_2)))))), false || (_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1 == read_2, ! _GLF_IDENTITY((! (read_1 + 1 == read_2)), ((! (read_1 + 1 == read_2))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), bool(bvec3(_GLF_IDENTITY(read_1 + 1 == read_2, ! (! _GLF_IDENTITY((read_1 + 1 == read_2), bool(bvec2(_GLF_IDENTITY((read_1 + 1 == read_2), ! (! ((read_1 + 1 == read_2)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), true, true)))))), (bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1 == read_2, false || (read_1 + _GLF_IDENTITY(1, (1) << 0) == read_2)), _GLF_IDENTITY(! (! (read_1 + _GLF_IDENTITY(1, (1) | (1)) == read_2)), ! (! (! (! (read_1 + _GLF_IDENTITY(1, (1) | (1)) == read_2)))))), false || (_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1 == read_2, ! _GLF_IDENTITY((! (read_1 + 1 == read_2)), ((! (read_1 + 1 == read_2))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), bool(bvec3(_GLF_IDENTITY(read_1 + 1 == read_2, ! (! _GLF_IDENTITY((read_1 + 1 == read_2), bool(bvec2(_GLF_IDENTITY((read_1 + 1 == read_2), ! (! ((read_1 + 1 == read_2)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), true, true))))))) && true))) && true)))))) || false))))), min(uint(_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1 == read_2, bool(bool(_GLF_IDENTITY(read_1 + 1 == read_2, ! (! (read_1 + 1 == read_2)))))), ! (! (_GLF_IDENTITY(read_1 + 1 == read_2, bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1 == read_2, ! (! (read_1 + _GLF_IDENTITY(1, _GLF_IDENTITY((1) | (1), ~ (~ ((1) | (1))))) == read_2))), false || (_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1 == read_2, ! (! (read_1 + 1 == read_2))), bool(bvec3(_GLF_IDENTITY(read_1 + 1 == read_2, ! (! (read_1 + 1 == read_2))), true, true)))))))))))), _GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1 == read_2, bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1, clamp(read_1 + 1, read_1 + 1, _GLF_IDENTITY(read_1 + 1, 0u ^ (_GLF_IDENTITY(read_1 + 1, uint(uvec3(read_1 + 1, 0u, 0u))))))) == read_2, ! (! (read_1 + 1 == read_2)))))), ! (! (_GLF_IDENTITY(read_1 + 1 == read_2, bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1 == read_2, ! (! (read_1 + _GLF_IDENTITY(1, (1) | (1)) == read_2))), false || (_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1 == read_2, ! (! (_GLF_IDENTITY(read_1 + 1 == read_2, _GLF_IDENTITY(bool(bool(read_1 + 1 == read_2)), (bool(bool(read_1 + 1 == read_2))) && true))))), bool(bvec3(_GLF_IDENTITY(read_1 + 1 == read_2, ! (! (read_1 + 1 == read_2))), true, true)))))))))))), (uint(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(read_1, 0u | (read_1)) + 1 == read_2, _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(read_1 + 1 == read_2, ! (! (read_1 + _GLF_IDENTITY(1, (_GLF_IDENTITY(1, 0 | (_GLF_IDENTITY(1, ~ (~ (1)))))) >> (0 ^ 0)) == read_2))))), ! (! (bool(bool(_GLF_IDENTITY(read_1 + 1 == read_2, ! (! (read_1 + _GLF_IDENTITY(1, (_GLF_IDENTITY(1, 0 | (_GLF_IDENTITY(1, ~ (~ (1)))))) >> (0 ^ 0)) == read_2))))))))), ! (! (_GLF_IDENTITY(read_1 + 1 == read_2, bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(read_1, min(_GLF_IDENTITY(read_1, 1u * (read_1)), read_1)) + 1 == read_2, ! (! (read_1 + _GLF_IDENTITY(1, (1) | (1)) == read_2))), false || _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1 == read_2, ! (! (read_1 + 1 == read_2))), bool(bvec3(_GLF_IDENTITY(read_1 + 1 == read_2, ! (! (read_1 + 1 == read_2))), true, _GLF_IDENTITY(true, ! (! (true))))))), ! (! ((_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1 == read_2, ! (! (read_1 + 1 == read_2))), bool(bvec3(_GLF_IDENTITY(read_1 + 1 == read_2, ! (! (read_1 + 1 == read_2))), true, _GLF_IDENTITY(true, ! (! (true))))))))))))))))))) | 0u))), (_GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1 == read_2, bool(bool(_GLF_IDENTITY(read_1 + 1 == read_2, ! (! (read_1 + 1 == read_2)))))), ! (! (_GLF_IDENTITY(read_1 + 1 == read_2, bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1 == read_2, ! (! (read_1 + _GLF_IDENTITY(1, (1) | (1)) == read_2))), false || (_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1 == read_2, ! (! (read_1 + 1 == read_2))), bool(bvec3(_GLF_IDENTITY(read_1 + 1 == read_2, ! (! (read_1 + 1 == read_2))), true, true))))))))))), (_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1 == read_2, bool(bool(_GLF_IDENTITY(read_1 + 1 == read_2, _GLF_IDENTITY(! (! (read_1 + 1 == read_2)), ! (_GLF_IDENTITY(! (! (! (read_1 + 1 == read_2))), bool(bvec3(! (! (! (read_1 + 1 == read_2))), false, false))))))))), ! (! (_GLF_IDENTITY(read_1 + _GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) + 0)) ^ 0) == read_2, _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1 == read_2, false || (read_1 + _GLF_IDENTITY(1, (1) << 0) == read_2)), _GLF_IDENTITY(! (! (read_1 + _GLF_IDENTITY(1, (1) | (1)) == read_2)), ! (! (! (! (read_1 + _GLF_IDENTITY(1, (1) | (1)) == read_2)))))), false || (_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1 == read_2, ! _GLF_IDENTITY((! (read_1 + 1 == read_2)), ((! (read_1 + 1 == read_2))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), bool(bvec3(_GLF_IDENTITY(read_1 + 1 == read_2, ! (! _GLF_IDENTITY((read_1 + 1 == read_2), bool(bvec2(_GLF_IDENTITY((read_1 + 1 == read_2), ! (! ((read_1 + 1 == read_2)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), true, true)))))), (bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1 == read_2, false || (read_1 + _GLF_IDENTITY(1, (1) << 0) == read_2)), _GLF_IDENTITY(! (! (read_1 + _GLF_IDENTITY(1, (1) | (1)) == read_2)), ! (! (! (! (read_1 + _GLF_IDENTITY(1, (1) | (1)) == read_2)))))), false || (_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1 == read_2, ! _GLF_IDENTITY((! (read_1 + 1 == read_2)), ((! (read_1 + 1 == read_2))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), bool(bvec3(_GLF_IDENTITY(read_1 + 1 == read_2, ! (! _GLF_IDENTITY((read_1 + 1 == read_2), bool(bvec2(_GLF_IDENTITY((read_1 + 1 == read_2), ! (! ((read_1 + 1 == read_2)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), true, true))))))) && true)), (bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1 == read_2, false || (read_1 + _GLF_IDENTITY(1, (1) << 0) == read_2)), _GLF_IDENTITY(! (! (read_1 + _GLF_IDENTITY(1, (1) | (1)) == read_2)), ! (! (! (! (read_1 + _GLF_IDENTITY(1, (1) | (1)) == read_2)))))), false || (_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1 == read_2, ! _GLF_IDENTITY((! (read_1 + 1 == read_2)), ((! (read_1 + 1 == read_2))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), bool(bvec3(_GLF_IDENTITY(read_1 + 1 == read_2, ! (! _GLF_IDENTITY((read_1 + 1 == read_2), bool(bvec2(_GLF_IDENTITY((read_1 + 1 == read_2), ! (! ((read_1 + 1 == read_2)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), true, true)))))), (bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1 == read_2, false || (read_1 + _GLF_IDENTITY(1, (1) << 0) == read_2)), _GLF_IDENTITY(! (! (read_1 + _GLF_IDENTITY(1, (1) | (1)) == read_2)), ! (! (! (! (read_1 + _GLF_IDENTITY(1, (1) | (1)) == read_2)))))), false || (_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1 == read_2, ! _GLF_IDENTITY((! (read_1 + 1 == read_2)), ((! (read_1 + 1 == read_2))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), bool(bvec3(_GLF_IDENTITY(read_1 + 1 == read_2, ! (! _GLF_IDENTITY((read_1 + 1 == read_2), bool(bvec2(_GLF_IDENTITY((read_1 + 1 == read_2), ! (! ((read_1 + 1 == read_2)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), true, true))))))) && true))) && true)))))) || false)), ~ (~ (uint(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1 == read_2, bool(bool(_GLF_IDENTITY(read_1 + 1 == read_2, ! (! (read_1 + 1 == read_2)))))), ! (! (_GLF_IDENTITY(read_1 + 1 == read_2, bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1 == read_2, ! (! (read_1 + _GLF_IDENTITY(1, (1) | (1)) == read_2))), false || (_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1 == read_2, ! (! (read_1 + 1 == read_2))), bool(bvec3(_GLF_IDENTITY(read_1 + 1 == read_2, ! (! (read_1 + 1 == read_2))), true, true))))))))))), (_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1 == read_2, bool(bool(_GLF_IDENTITY(read_1 + 1 == read_2, _GLF_IDENTITY(! (! (read_1 + 1 == read_2)), ! (_GLF_IDENTITY(! (! (! (read_1 + 1 == read_2))), bool(bvec3(! (! (! (read_1 + 1 == read_2))), false, false))))))))), ! (! (_GLF_IDENTITY(read_1 + _GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) + 0)) ^ 0) == read_2, _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1 == read_2, false || (read_1 + _GLF_IDENTITY(1, (1) << 0) == read_2)), _GLF_IDENTITY(! (! (read_1 + _GLF_IDENTITY(1, (1) | (1)) == read_2)), ! (! (! (! (read_1 + _GLF_IDENTITY(1, (1) | (1)) == read_2)))))), false || (_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1 == read_2, ! _GLF_IDENTITY((! (read_1 + 1 == read_2)), ((! (read_1 + 1 == read_2))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), bool(bvec3(_GLF_IDENTITY(read_1 + 1 == read_2, ! (! _GLF_IDENTITY((read_1 + 1 == read_2), bool(bvec2(_GLF_IDENTITY((read_1 + 1 == read_2), ! (! ((read_1 + 1 == read_2)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), true, true)))))), (bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1 == read_2, false || (read_1 + _GLF_IDENTITY(1, (1) << 0) == read_2)), _GLF_IDENTITY(! (! (read_1 + _GLF_IDENTITY(1, (1) | (1)) == read_2)), ! (! (! (! (read_1 + _GLF_IDENTITY(1, (1) | (1)) == read_2)))))), false || (_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1 == read_2, ! _GLF_IDENTITY((! (read_1 + 1 == read_2)), ((! (read_1 + 1 == read_2))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), bool(bvec3(_GLF_IDENTITY(read_1 + 1 == read_2, ! (! _GLF_IDENTITY((read_1 + 1 == read_2), bool(bvec2(_GLF_IDENTITY((read_1 + 1 == read_2), ! (! ((read_1 + 1 == read_2)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), true, true))))))) && true)), (bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1 == read_2, false || (read_1 + _GLF_IDENTITY(1, (1) << 0) == read_2)), _GLF_IDENTITY(! (! (read_1 + _GLF_IDENTITY(1, (1) | (1)) == read_2)), ! (! (! (! (read_1 + _GLF_IDENTITY(1, (1) | (1)) == read_2)))))), false || (_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1 == read_2, ! _GLF_IDENTITY((! (read_1 + 1 == read_2)), ((! (read_1 + 1 == read_2))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), bool(bvec3(_GLF_IDENTITY(read_1 + 1 == read_2, ! (! _GLF_IDENTITY((read_1 + 1 == read_2), bool(bvec2(_GLF_IDENTITY((read_1 + 1 == read_2), ! (! ((read_1 + 1 == read_2)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), true, true)))))), (bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1 == read_2, false || (read_1 + _GLF_IDENTITY(1, (1) << 0) == read_2)), _GLF_IDENTITY(! (! (read_1 + _GLF_IDENTITY(1, (1) | (1)) == read_2)), ! (! (! (! (read_1 + _GLF_IDENTITY(1, (1) | (1)) == read_2)))))), false || (_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1 == read_2, ! _GLF_IDENTITY((! (read_1 + 1 == read_2)), ((! (read_1 + 1 == read_2))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), bool(bvec3(_GLF_IDENTITY(read_1 + 1 == read_2, ! (! _GLF_IDENTITY((read_1 + 1 == read_2), bool(bvec2(_GLF_IDENTITY((read_1 + 1 == read_2), ! (! ((read_1 + 1 == read_2)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), true, true))))))) && true))) && true)))))) || false))))), min(uint(_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1 == read_2, bool(bool(_GLF_IDENTITY(read_1 + 1 == read_2, ! (! (read_1 + 1 == read_2)))))), ! (! (_GLF_IDENTITY(read_1 + 1 == read_2, bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1 == read_2, ! (! (read_1 + _GLF_IDENTITY(1, _GLF_IDENTITY((1) | (1), ~ (~ ((1) | (1))))) == read_2))), false || (_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1 == read_2, ! (! (read_1 + 1 == read_2))), bool(bvec3(_GLF_IDENTITY(read_1 + 1 == read_2, ! (! (read_1 + 1 == read_2))), true, true)))))))))))), _GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1 == read_2, bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1, clamp(read_1 + 1, read_1 + 1, _GLF_IDENTITY(read_1 + 1, 0u ^ (_GLF_IDENTITY(read_1 + 1, uint(uvec3(read_1 + 1, 0u, 0u))))))) == read_2, ! (! (read_1 + 1 == read_2)))))), ! (! (_GLF_IDENTITY(read_1 + 1 == read_2, bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1 == read_2, ! (! (read_1 + _GLF_IDENTITY(1, (1) | (1)) == read_2))), false || (_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1 == read_2, ! (! (_GLF_IDENTITY(read_1 + 1 == read_2, _GLF_IDENTITY(bool(bool(read_1 + 1 == read_2)), (bool(bool(read_1 + 1 == read_2))) && true))))), bool(bvec3(_GLF_IDENTITY(read_1 + 1 == read_2, ! (! (read_1 + 1 == read_2))), true, true)))))))))))), (uint(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(read_1, 0u | (read_1)) + 1 == read_2, _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(read_1 + 1 == read_2, ! (! (read_1 + _GLF_IDENTITY(1, (_GLF_IDENTITY(1, 0 | (_GLF_IDENTITY(1, ~ (~ (1)))))) >> (0 ^ 0)) == read_2))))), ! (! (bool(bool(_GLF_IDENTITY(read_1 + 1 == read_2, ! (! (read_1 + _GLF_IDENTITY(1, (_GLF_IDENTITY(1, 0 | (_GLF_IDENTITY(1, ~ (~ (1)))))) >> (0 ^ 0)) == read_2))))))))), ! (! (_GLF_IDENTITY(read_1 + 1 == read_2, bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(read_1, min(_GLF_IDENTITY(read_1, 1u * (read_1)), read_1)) + 1 == read_2, ! (! (read_1 + _GLF_IDENTITY(1, (1) | (1)) == read_2))), false || _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1 == read_2, ! (! (read_1 + 1 == read_2))), bool(bvec3(_GLF_IDENTITY(read_1 + 1 == read_2, ! (! (read_1 + 1 == read_2))), true, _GLF_IDENTITY(true, ! (! (true))))))), ! (! ((_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1 == read_2, ! (! (read_1 + 1 == read_2))), bool(bvec3(_GLF_IDENTITY(read_1 + 1 == read_2, ! (! (read_1 + 1 == read_2))), true, _GLF_IDENTITY(true, ! (! (true))))))))))))))))))) | 0u)))) | (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1 == read_2, bool(bool(_GLF_IDENTITY(read_1 + 1 == read_2, ! (! (read_1 + 1 == read_2)))))), ! (! (_GLF_IDENTITY(read_1 + 1 == read_2, bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1 == read_2, ! (! (read_1 + _GLF_IDENTITY(1, (1) | (1)) == read_2))), false || (_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1 == read_2, ! (! (read_1 + 1 == read_2))), bool(bvec3(_GLF_IDENTITY(read_1 + 1 == read_2, ! (! (read_1 + 1 == read_2))), true, true))))))))))), (_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1 == read_2, bool(bool(_GLF_IDENTITY(read_1 + 1 == read_2, _GLF_IDENTITY(! (! (read_1 + 1 == read_2)), ! (_GLF_IDENTITY(! (! (! (read_1 + 1 == read_2))), bool(bvec3(! (! (! (read_1 + 1 == read_2))), false, false))))))))), ! (! (_GLF_IDENTITY(read_1 + _GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) + 0)) ^ 0) == read_2, _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1 == read_2, false || (read_1 + _GLF_IDENTITY(1, (1) << 0) == read_2)), _GLF_IDENTITY(! (! (read_1 + _GLF_IDENTITY(1, (1) | (1)) == read_2)), ! (! (! (! (read_1 + _GLF_IDENTITY(1, (1) | (1)) == read_2)))))), false || (_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1 == read_2, ! _GLF_IDENTITY((! (read_1 + 1 == read_2)), ((! (read_1 + 1 == read_2))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), bool(bvec3(_GLF_IDENTITY(read_1 + 1 == read_2, ! (! _GLF_IDENTITY((read_1 + 1 == read_2), bool(bvec2(_GLF_IDENTITY((read_1 + 1 == read_2), ! (! ((read_1 + 1 == read_2)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), true, true)))))), (bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1 == read_2, false || (read_1 + _GLF_IDENTITY(1, (1) << 0) == read_2)), _GLF_IDENTITY(! (! (read_1 + _GLF_IDENTITY(1, (1) | (1)) == read_2)), ! (! (! (! (read_1 + _GLF_IDENTITY(1, (1) | (1)) == read_2)))))), false || (_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1 == read_2, ! _GLF_IDENTITY((! (read_1 + 1 == read_2)), ((! (read_1 + 1 == read_2))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), bool(bvec3(_GLF_IDENTITY(read_1 + 1 == read_2, ! (! _GLF_IDENTITY((read_1 + 1 == read_2), bool(bvec2(_GLF_IDENTITY((read_1 + 1 == read_2), ! (! ((read_1 + 1 == read_2)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), true, true))))))) && true)), (bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1 == read_2, false || (read_1 + _GLF_IDENTITY(1, (1) << 0) == read_2)), _GLF_IDENTITY(! (! (read_1 + _GLF_IDENTITY(1, (1) | (1)) == read_2)), ! (! (! (! (read_1 + _GLF_IDENTITY(1, (1) | (1)) == read_2)))))), false || (_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1 == read_2, ! _GLF_IDENTITY((! (read_1 + 1 == read_2)), ((! (read_1 + 1 == read_2))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), bool(bvec3(_GLF_IDENTITY(read_1 + 1 == read_2, ! (! _GLF_IDENTITY((read_1 + 1 == read_2), bool(bvec2(_GLF_IDENTITY((read_1 + 1 == read_2), ! (! ((read_1 + 1 == read_2)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), true, true)))))), (bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1 == read_2, false || (read_1 + _GLF_IDENTITY(1, (1) << 0) == read_2)), _GLF_IDENTITY(! (! (read_1 + _GLF_IDENTITY(1, (1) | (1)) == read_2)), ! (! (! (! (read_1 + _GLF_IDENTITY(1, (1) | (1)) == read_2)))))), false || (_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1 == read_2, ! _GLF_IDENTITY((! (read_1 + 1 == read_2)), ((! (read_1 + 1 == read_2))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), bool(bvec3(_GLF_IDENTITY(read_1 + 1 == read_2, ! (! _GLF_IDENTITY((read_1 + 1 == read_2), bool(bvec2(_GLF_IDENTITY((read_1 + 1 == read_2), ! (! ((read_1 + 1 == read_2)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), true, true))))))) && true))) && true)))))) || false)), ~ (~ (uint(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1 == read_2, bool(bool(_GLF_IDENTITY(read_1 + 1 == read_2, ! (! (read_1 + 1 == read_2)))))), ! (! (_GLF_IDENTITY(read_1 + 1 == read_2, bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1 == read_2, ! (! (read_1 + _GLF_IDENTITY(1, (1) | (1)) == read_2))), false || (_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1 == read_2, ! (! (read_1 + 1 == read_2))), bool(bvec3(_GLF_IDENTITY(read_1 + 1 == read_2, ! (! (read_1 + 1 == read_2))), true, true))))))))))), (_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1 == read_2, bool(bool(_GLF_IDENTITY(read_1 + 1 == read_2, _GLF_IDENTITY(! (! (read_1 + 1 == read_2)), ! (_GLF_IDENTITY(! (! (! (read_1 + 1 == read_2))), bool(bvec3(! (! (! (read_1 + 1 == read_2))), false, false))))))))), ! (! (_GLF_IDENTITY(read_1 + _GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) + 0)) ^ 0) == read_2, _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1 == read_2, false || (read_1 + _GLF_IDENTITY(1, (1) << 0) == read_2)), _GLF_IDENTITY(! (! (read_1 + _GLF_IDENTITY(1, (1) | (1)) == read_2)), ! (! (! (! (read_1 + _GLF_IDENTITY(1, (1) | (1)) == read_2)))))), false || (_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1 == read_2, ! _GLF_IDENTITY((! (read_1 + 1 == read_2)), ((! (read_1 + 1 == read_2))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), bool(bvec3(_GLF_IDENTITY(read_1 + 1 == read_2, ! (! _GLF_IDENTITY((read_1 + 1 == read_2), bool(bvec2(_GLF_IDENTITY((read_1 + 1 == read_2), ! (! ((read_1 + 1 == read_2)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), true, true)))))), (bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1 == read_2, false || (read_1 + _GLF_IDENTITY(1, (1) << 0) == read_2)), _GLF_IDENTITY(! (! (read_1 + _GLF_IDENTITY(1, (1) | (1)) == read_2)), ! (! (! (! (read_1 + _GLF_IDENTITY(1, (1) | (1)) == read_2)))))), false || (_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1 == read_2, ! _GLF_IDENTITY((! (read_1 + 1 == read_2)), ((! (read_1 + 1 == read_2))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), bool(bvec3(_GLF_IDENTITY(read_1 + 1 == read_2, ! (! _GLF_IDENTITY((read_1 + 1 == read_2), bool(bvec2(_GLF_IDENTITY((read_1 + 1 == read_2), ! (! ((read_1 + 1 == read_2)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), true, true))))))) && true)), (bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1 == read_2, false || (read_1 + _GLF_IDENTITY(1, (1) << 0) == read_2)), _GLF_IDENTITY(! (! (read_1 + _GLF_IDENTITY(1, (1) | (1)) == read_2)), ! (! (! (! (read_1 + _GLF_IDENTITY(1, (1) | (1)) == read_2)))))), false || (_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1 == read_2, ! _GLF_IDENTITY((! (read_1 + 1 == read_2)), ((! (read_1 + 1 == read_2))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), bool(bvec3(_GLF_IDENTITY(read_1 + 1 == read_2, ! (! _GLF_IDENTITY((read_1 + 1 == read_2), bool(bvec2(_GLF_IDENTITY((read_1 + 1 == read_2), ! (! ((read_1 + 1 == read_2)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), true, true)))))), (bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1 == read_2, false || (read_1 + _GLF_IDENTITY(1, (1) << 0) == read_2)), _GLF_IDENTITY(! (! (read_1 + _GLF_IDENTITY(1, (1) | (1)) == read_2)), ! (! (! (! (read_1 + _GLF_IDENTITY(1, (1) | (1)) == read_2)))))), false || (_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1 == read_2, ! _GLF_IDENTITY((! (read_1 + 1 == read_2)), ((! (read_1 + 1 == read_2))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), bool(bvec3(_GLF_IDENTITY(read_1 + 1 == read_2, ! (! _GLF_IDENTITY((read_1 + 1 == read_2), bool(bvec2(_GLF_IDENTITY((read_1 + 1 == read_2), ! (! ((read_1 + 1 == read_2)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), true, true))))))) && true))) && true)))))) || false))))), min(uint(_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1 == read_2, bool(bool(_GLF_IDENTITY(read_1 + 1 == read_2, ! (! (read_1 + 1 == read_2)))))), ! (! (_GLF_IDENTITY(read_1 + 1 == read_2, bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1 == read_2, ! (! (read_1 + _GLF_IDENTITY(1, _GLF_IDENTITY((1) | (1), ~ (~ ((1) | (1))))) == read_2))), false || (_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1 == read_2, ! (! (read_1 + 1 == read_2))), bool(bvec3(_GLF_IDENTITY(read_1 + 1 == read_2, ! (! (read_1 + 1 == read_2))), true, true)))))))))))), _GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1 == read_2, bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1, clamp(read_1 + 1, read_1 + 1, _GLF_IDENTITY(read_1 + 1, 0u ^ (_GLF_IDENTITY(read_1 + 1, uint(uvec3(read_1 + 1, 0u, 0u))))))) == read_2, ! (! (read_1 + 1 == read_2)))))), ! (! (_GLF_IDENTITY(read_1 + 1 == read_2, bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1 == read_2, ! (! (read_1 + _GLF_IDENTITY(1, (1) | (1)) == read_2))), false || (_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1 == read_2, ! (! (_GLF_IDENTITY(read_1 + 1 == read_2, _GLF_IDENTITY(bool(bool(read_1 + 1 == read_2)), (bool(bool(read_1 + 1 == read_2))) && true))))), bool(bvec3(_GLF_IDENTITY(read_1 + 1 == read_2, ! (! (read_1 + 1 == read_2))), true, true)))))))))))), (uint(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(read_1, 0u | (read_1)) + 1 == read_2, _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(read_1 + 1 == read_2, ! (! (read_1 + _GLF_IDENTITY(1, (_GLF_IDENTITY(1, 0 | (_GLF_IDENTITY(1, ~ (~ (1)))))) >> (0 ^ 0)) == read_2))))), ! (! (bool(bool(_GLF_IDENTITY(read_1 + 1 == read_2, ! (! (read_1 + _GLF_IDENTITY(1, (_GLF_IDENTITY(1, 0 | (_GLF_IDENTITY(1, ~ (~ (1)))))) >> (0 ^ 0)) == read_2))))))))), ! (! (_GLF_IDENTITY(read_1 + 1 == read_2, bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(read_1, min(_GLF_IDENTITY(read_1, 1u * (read_1)), read_1)) + 1 == read_2, ! (! (read_1 + _GLF_IDENTITY(1, (1) | (1)) == read_2))), false || _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1 == read_2, ! (! (read_1 + 1 == read_2))), bool(bvec3(_GLF_IDENTITY(read_1 + 1 == read_2, ! (! (read_1 + 1 == read_2))), true, _GLF_IDENTITY(true, ! (! (true))))))), ! (! ((_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1 == read_2, ! (! (read_1 + 1 == read_2))), bool(bvec3(_GLF_IDENTITY(read_1 + 1 == read_2, ! (! (read_1 + 1 == read_2))), true, _GLF_IDENTITY(true, ! (! (true))))))))))))))))))) | 0u))), (_GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1 == read_2, bool(bool(_GLF_IDENTITY(read_1 + 1 == read_2, ! (! (read_1 + 1 == read_2)))))), ! (! (_GLF_IDENTITY(read_1 + 1 == read_2, bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1 == read_2, ! (! (read_1 + _GLF_IDENTITY(1, (1) | (1)) == read_2))), false || (_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1 == read_2, ! (! (read_1 + 1 == read_2))), bool(bvec3(_GLF_IDENTITY(read_1 + 1 == read_2, ! (! (read_1 + 1 == read_2))), true, true))))))))))), (_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1 == read_2, bool(bool(_GLF_IDENTITY(read_1 + 1 == read_2, _GLF_IDENTITY(! (! (read_1 + 1 == read_2)), ! (_GLF_IDENTITY(! (! (! (read_1 + 1 == read_2))), bool(bvec3(! (! (! (read_1 + 1 == read_2))), false, false))))))))), ! (! (_GLF_IDENTITY(read_1 + _GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) + 0)) ^ 0) == read_2, _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1 == read_2, false || (read_1 + _GLF_IDENTITY(1, (1) << 0) == read_2)), _GLF_IDENTITY(! (! (read_1 + _GLF_IDENTITY(1, (1) | (1)) == read_2)), ! (! (! (! (read_1 + _GLF_IDENTITY(1, (1) | (1)) == read_2)))))), false || (_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1 == read_2, ! _GLF_IDENTITY((! (read_1 + 1 == read_2)), ((! (read_1 + 1 == read_2))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), bool(bvec3(_GLF_IDENTITY(read_1 + 1 == read_2, ! (! _GLF_IDENTITY((read_1 + 1 == read_2), bool(bvec2(_GLF_IDENTITY((read_1 + 1 == read_2), ! (! ((read_1 + 1 == read_2)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), true, true)))))), (bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1 == read_2, false || (read_1 + _GLF_IDENTITY(1, (1) << 0) == read_2)), _GLF_IDENTITY(! (! (read_1 + _GLF_IDENTITY(1, (1) | (1)) == read_2)), ! (! (! (! (read_1 + _GLF_IDENTITY(1, (1) | (1)) == read_2)))))), false || (_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1 == read_2, ! _GLF_IDENTITY((! (read_1 + 1 == read_2)), ((! (read_1 + 1 == read_2))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), bool(bvec3(_GLF_IDENTITY(read_1 + 1 == read_2, ! (! _GLF_IDENTITY((read_1 + 1 == read_2), bool(bvec2(_GLF_IDENTITY((read_1 + 1 == read_2), ! (! ((read_1 + 1 == read_2)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), true, true))))))) && true)), (bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1 == read_2, false || (read_1 + _GLF_IDENTITY(1, (1) << 0) == read_2)), _GLF_IDENTITY(! (! (read_1 + _GLF_IDENTITY(1, (1) | (1)) == read_2)), ! (! (! (! (read_1 + _GLF_IDENTITY(1, (1) | (1)) == read_2)))))), false || (_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1 == read_2, ! _GLF_IDENTITY((! (read_1 + 1 == read_2)), ((! (read_1 + 1 == read_2))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), bool(bvec3(_GLF_IDENTITY(read_1 + 1 == read_2, ! (! _GLF_IDENTITY((read_1 + 1 == read_2), bool(bvec2(_GLF_IDENTITY((read_1 + 1 == read_2), ! (! ((read_1 + 1 == read_2)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), true, true)))))), (bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1 == read_2, false || (read_1 + _GLF_IDENTITY(1, (1) << 0) == read_2)), _GLF_IDENTITY(! (! (read_1 + _GLF_IDENTITY(1, (1) | (1)) == read_2)), ! (! (! (! (read_1 + _GLF_IDENTITY(1, (1) | (1)) == read_2)))))), false || (_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1 == read_2, ! _GLF_IDENTITY((! (read_1 + 1 == read_2)), ((! (read_1 + 1 == read_2))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), bool(bvec3(_GLF_IDENTITY(read_1 + 1 == read_2, ! (! _GLF_IDENTITY((read_1 + 1 == read_2), bool(bvec2(_GLF_IDENTITY((read_1 + 1 == read_2), ! (! ((read_1 + 1 == read_2)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), true, true))))))) && true))) && true)))))) || false)), ~ (~ (uint(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1 == read_2, bool(bool(_GLF_IDENTITY(read_1 + 1 == read_2, ! (! (read_1 + 1 == read_2)))))), ! (! (_GLF_IDENTITY(read_1 + 1 == read_2, bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1 == read_2, ! (! (read_1 + _GLF_IDENTITY(1, (1) | (1)) == read_2))), false || (_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1 == read_2, ! (! (read_1 + 1 == read_2))), bool(bvec3(_GLF_IDENTITY(read_1 + 1 == read_2, ! (! (read_1 + 1 == read_2))), true, true))))))))))), (_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1 == read_2, bool(bool(_GLF_IDENTITY(read_1 + 1 == read_2, _GLF_IDENTITY(! (! (read_1 + 1 == read_2)), ! (_GLF_IDENTITY(! (! (! (read_1 + 1 == read_2))), bool(bvec3(! (! (! (read_1 + 1 == read_2))), false, false))))))))), ! (! (_GLF_IDENTITY(read_1 + _GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) + 0)) ^ 0) == read_2, _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1 == read_2, false || (read_1 + _GLF_IDENTITY(1, (1) << 0) == read_2)), _GLF_IDENTITY(! (! (read_1 + _GLF_IDENTITY(1, (1) | (1)) == read_2)), ! (! (! (! (read_1 + _GLF_IDENTITY(1, (1) | (1)) == read_2)))))), false || (_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1 == read_2, ! _GLF_IDENTITY((! (read_1 + 1 == read_2)), ((! (read_1 + 1 == read_2))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), bool(bvec3(_GLF_IDENTITY(read_1 + 1 == read_2, ! (! _GLF_IDENTITY((read_1 + 1 == read_2), bool(bvec2(_GLF_IDENTITY((read_1 + 1 == read_2), ! (! ((read_1 + 1 == read_2)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), true, true)))))), (bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1 == read_2, false || (read_1 + _GLF_IDENTITY(1, (1) << 0) == read_2)), _GLF_IDENTITY(! (! (read_1 + _GLF_IDENTITY(1, (1) | (1)) == read_2)), ! (! (! (! (read_1 + _GLF_IDENTITY(1, (1) | (1)) == read_2)))))), false || (_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1 == read_2, ! _GLF_IDENTITY((! (read_1 + 1 == read_2)), ((! (read_1 + 1 == read_2))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), bool(bvec3(_GLF_IDENTITY(read_1 + 1 == read_2, ! (! _GLF_IDENTITY((read_1 + 1 == read_2), bool(bvec2(_GLF_IDENTITY((read_1 + 1 == read_2), ! (! ((read_1 + 1 == read_2)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), true, true))))))) && true)), (bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1 == read_2, false || (read_1 + _GLF_IDENTITY(1, (1) << 0) == read_2)), _GLF_IDENTITY(! (! (read_1 + _GLF_IDENTITY(1, (1) | (1)) == read_2)), ! (! (! (! (read_1 + _GLF_IDENTITY(1, (1) | (1)) == read_2)))))), false || (_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1 == read_2, ! _GLF_IDENTITY((! (read_1 + 1 == read_2)), ((! (read_1 + 1 == read_2))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), bool(bvec3(_GLF_IDENTITY(read_1 + 1 == read_2, ! (! _GLF_IDENTITY((read_1 + 1 == read_2), bool(bvec2(_GLF_IDENTITY((read_1 + 1 == read_2), ! (! ((read_1 + 1 == read_2)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), true, true)))))), (bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1 == read_2, false || (read_1 + _GLF_IDENTITY(1, (1) << 0) == read_2)), _GLF_IDENTITY(! (! (read_1 + _GLF_IDENTITY(1, (1) | (1)) == read_2)), ! (! (! (! (read_1 + _GLF_IDENTITY(1, (1) | (1)) == read_2)))))), false || (_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1 == read_2, ! _GLF_IDENTITY((! (read_1 + 1 == read_2)), ((! (read_1 + 1 == read_2))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), bool(bvec3(_GLF_IDENTITY(read_1 + 1 == read_2, ! (! _GLF_IDENTITY((read_1 + 1 == read_2), bool(bvec2(_GLF_IDENTITY((read_1 + 1 == read_2), ! (! ((read_1 + 1 == read_2)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), true, true))))))) && true))) && true)))))) || false))))), min(uint(_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1 == read_2, bool(bool(_GLF_IDENTITY(read_1 + 1 == read_2, ! (! (read_1 + 1 == read_2)))))), ! (! (_GLF_IDENTITY(read_1 + 1 == read_2, bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1 == read_2, ! (! (read_1 + _GLF_IDENTITY(1, _GLF_IDENTITY((1) | (1), ~ (~ ((1) | (1))))) == read_2))), false || (_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1 == read_2, ! (! (read_1 + 1 == read_2))), bool(bvec3(_GLF_IDENTITY(read_1 + 1 == read_2, ! (! (read_1 + 1 == read_2))), true, true)))))))))))), _GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1 == read_2, bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1, clamp(read_1 + 1, read_1 + 1, _GLF_IDENTITY(read_1 + 1, 0u ^ (_GLF_IDENTITY(read_1 + 1, uint(uvec3(read_1 + 1, 0u, 0u))))))) == read_2, ! (! (read_1 + 1 == read_2)))))), ! (! (_GLF_IDENTITY(read_1 + 1 == read_2, bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1 == read_2, ! (! (read_1 + _GLF_IDENTITY(1, (1) | (1)) == read_2))), false || (_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1 == read_2, ! (! (_GLF_IDENTITY(read_1 + 1 == read_2, _GLF_IDENTITY(bool(bool(read_1 + 1 == read_2)), (bool(bool(read_1 + 1 == read_2))) && true))))), bool(bvec3(_GLF_IDENTITY(read_1 + 1 == read_2, ! (! (read_1 + 1 == read_2))), true, true)))))))))))), (uint(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(read_1, 0u | (read_1)) + 1 == read_2, _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(read_1 + 1 == read_2, ! (! (read_1 + _GLF_IDENTITY(1, (_GLF_IDENTITY(1, 0 | (_GLF_IDENTITY(1, ~ (~ (1)))))) >> (0 ^ 0)) == read_2))))), ! (! (bool(bool(_GLF_IDENTITY(read_1 + 1 == read_2, ! (! (read_1 + _GLF_IDENTITY(1, (_GLF_IDENTITY(1, 0 | (_GLF_IDENTITY(1, ~ (~ (1)))))) >> (0 ^ 0)) == read_2))))))))), ! (! (_GLF_IDENTITY(read_1 + 1 == read_2, bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(read_1, min(_GLF_IDENTITY(read_1, 1u * (read_1)), read_1)) + 1 == read_2, ! (! (read_1 + _GLF_IDENTITY(1, (1) | (1)) == read_2))), false || _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1 == read_2, ! (! (read_1 + 1 == read_2))), bool(bvec3(_GLF_IDENTITY(read_1 + 1 == read_2, ! (! (read_1 + 1 == read_2))), true, _GLF_IDENTITY(true, ! (! (true))))))), ! (! ((_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1 == read_2, ! (! (read_1 + 1 == read_2))), bool(bvec3(_GLF_IDENTITY(read_1 + 1 == read_2, ! (! (read_1 + 1 == read_2))), true, _GLF_IDENTITY(true, ! (! (true))))))))))))))))))) | 0u)))) << 0u))))), 1u))))) + 1, 4, 64, _GLF_IDENTITY(4, int(_GLF_IDENTITY(int(4), (int(4)) | (_GLF_IDENTITY(int(4), min(int(4), int(4))))))));
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  return;
}
