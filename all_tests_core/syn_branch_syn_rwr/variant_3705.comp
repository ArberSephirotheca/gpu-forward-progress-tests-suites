#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch)).y)))))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(-33.66), _GLF_FUZZED(6.9)), bvec2(false, false))).y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
      barrier();
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     return;
     if(_GLF_DEAD(false))
      barrier();
    }
   return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, float(_GLF_IDENTITY(mat3x4(injectionSwitch.x, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, tan(0.0)), transpose(transpose(mat3x4(injectionSwitch.x, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, tan(0.0))))))) > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || _GLF_FALSE(_GLF_IDENTITY(false, false || (false)), (injectionSwitch.x > injectionSwitch.y))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) && true), (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
      return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       return;
      }
     return;
    }
  }
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, false)))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_DEAD(false))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(_GLF_IDENTITY(mat2x3(injectionSwitch.y, tan(0.0), _GLF_ONE(1.0, injectionSwitch.y), 0.0, round(length(normalize(1.0))), exp(0.0)), mat2x3(mat3(mat2x3(injectionSwitch.y, tan(0.0), _GLF_ONE(1.0, injectionSwitch.y), 0.0, round(length(normalize(1.0))), exp(0.0)))))))))))
        {
         if(_GLF_DEAD(false))
          barrier();
         return;
        }
       return;
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
        barrier();
       barrier();
      }
     if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          return;
         barrier();
        }
       return;
       if(_GLF_DEAD(false))
        return;
      }
     return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec2(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(mat2x3(_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(vec4(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0), 1.0, 0.0, 1.0)), max(float(vec4(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0), 1.0, 0.0, 1.0)), float(vec4(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0), 1.0, 0.0, 1.0))))), 0.0, 1.0, 1.0, 0.0, 1.0))))))) && true), false))))
      return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), bool(bvec4(_GLF_IDENTITY(bool(bool(false)), (bool(bool(_GLF_IDENTITY(false, bool(bvec2(false, false)))))) && true), true, true, false))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       return;
      }
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     return;
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
  }
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), ! (_GLF_IDENTITY(! (! (_GLF_DEAD(false))), ! (_GLF_IDENTITY(! (! (! (_GLF_DEAD(false)))), (! (! (! (_GLF_DEAD(false))))) || false)))))))) || false))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec2(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec4(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bool(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(mat2x4(injectionSwitch, _GLF_ZERO(0.0, injectionSwitch.x), _GLF_IDENTITY(dot(vec4(0.0, 1.0, 0.0, 1.0), vec4(1.0, 0.0, abs(1.0), sin(0.0))), _GLF_IDENTITY(dot(vec4(0.0, 1.0, 0.0, 1.0), vec4(1.0, 0.0, abs(1.0), sin(0.0))), (dot(vec4(0.0, 1.0, 0.0, 1.0), vec4(1.0, 0.0, abs(1.0), sin(0.0)))) / 1.0)), 0.0, cos(0.0), sqrt(0.0), 0.0))).x > injectionSwitch.y))))), true, false, false))), true)))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
    return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0), injectionSwitch.x)) > injectionSwitch.y), bool(bvec4((_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0), injectionSwitch.x)) > injectionSwitch.y), false, true, true))))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, bool(bool(false))), (injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false)))), (! (_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0), 0.0 + (injectionSwitch.x)), injectionSwitch.x)), clamp(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(79.82)), bool(false))))), _GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), _GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(min(injectionSwitch.x, injectionSwitch.x), max(min(injectionSwitch.x, injectionSwitch.x), _GLF_IDENTITY(min(injectionSwitch.x, injectionSwitch.x), max(_GLF_IDENTITY(min(injectionSwitch.x, injectionSwitch.x), clamp(min(injectionSwitch.x, injectionSwitch.x), min(injectionSwitch.x, injectionSwitch.x), min(injectionSwitch.x, injectionSwitch.x))), min(injectionSwitch.x, injectionSwitch.x)))))))) > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y)))) || _GLF_IDENTITY(false, ! (! (false))))))))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), false, true, true))))))
    return;
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     return;
    }
   barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   barrier();
  }
 uint num_workgroup = gl_NumWorkGroups.x;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   barrier();
  }
 uint workgroup_size = _GLF_IDENTITY(gl_WorkGroupSize, _GLF_IDENTITY(uvec3(_GLF_IDENTITY(uvec3(gl_WorkGroupSize), _GLF_IDENTITY(_GLF_IDENTITY(clamp(uvec3(gl_WorkGroupSize), uvec3(gl_WorkGroupSize), uvec3(gl_WorkGroupSize)), _GLF_IDENTITY(uvec3(0u, 0u, 0u) + (clamp(uvec3(gl_WorkGroupSize), uvec3(gl_WorkGroupSize), uvec3(gl_WorkGroupSize))), (uvec3(0u, 0u, 0u) + (clamp(uvec3(gl_WorkGroupSize), uvec3(gl_WorkGroupSize), uvec3(gl_WorkGroupSize)))) - uvec3(0u, 0u, 0u))), uvec3(uvec3(_GLF_IDENTITY(clamp(uvec3(gl_WorkGroupSize), uvec3(gl_WorkGroupSize), uvec3(gl_WorkGroupSize)), uvec3(0u, 0u, 0u) + (clamp(uvec3(gl_WorkGroupSize), uvec3(gl_WorkGroupSize), uvec3(gl_WorkGroupSize))))))))), min(uvec3(_GLF_IDENTITY(uvec3(gl_WorkGroupSize), _GLF_IDENTITY(clamp(uvec3(_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) | (_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) >> uvec3(0u, 0u, 0u))))), uvec3(gl_WorkGroupSize), uvec3(gl_WorkGroupSize)), max(clamp(uvec3(_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) | (_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) >> uvec3(0u, 0u, 0u))))), uvec3(gl_WorkGroupSize), uvec3(gl_WorkGroupSize)), _GLF_IDENTITY(clamp(uvec3(_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) | (_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) >> uvec3(0u, 0u, 0u))))), uvec3(gl_WorkGroupSize), uvec3(gl_WorkGroupSize)), (clamp(uvec3(_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) | (_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) >> uvec3(0u, 0u, 0u))))), uvec3(gl_WorkGroupSize), uvec3(gl_WorkGroupSize))) - uvec3(0u, 0u, 0u)))))), uvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(uvec3(gl_WorkGroupSize), clamp(uvec3(gl_WorkGroupSize), uvec3(gl_WorkGroupSize), uvec3(gl_WorkGroupSize))), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(uvec3(gl_WorkGroupSize), clamp(uvec3(gl_WorkGroupSize), uvec3(gl_WorkGroupSize), uvec3(gl_WorkGroupSize))), max(_GLF_IDENTITY(_GLF_IDENTITY(uvec3(gl_WorkGroupSize), clamp(uvec3(gl_WorkGroupSize), uvec3(gl_WorkGroupSize), uvec3(gl_WorkGroupSize))), (_GLF_IDENTITY(uvec3(gl_WorkGroupSize), clamp(uvec3(gl_WorkGroupSize), uvec3(gl_WorkGroupSize), uvec3(gl_WorkGroupSize)))) << uvec3(0u, 0u, 0u)), _GLF_IDENTITY(uvec3(gl_WorkGroupSize), clamp(uvec3(gl_WorkGroupSize), uvec3(gl_WorkGroupSize), uvec3(gl_WorkGroupSize)))))) | (_GLF_IDENTITY(_GLF_IDENTITY(uvec3(gl_WorkGroupSize), clamp(uvec3(gl_WorkGroupSize), uvec3(gl_WorkGroupSize), uvec3(gl_WorkGroupSize))), uvec3(uvec4(_GLF_IDENTITY(uvec3(gl_WorkGroupSize), clamp(uvec3(gl_WorkGroupSize), uvec3(gl_WorkGroupSize), uvec3(gl_WorkGroupSize))), 0u)))), clamp((_GLF_IDENTITY(_GLF_IDENTITY(uvec3(gl_WorkGroupSize), clamp(uvec3(gl_WorkGroupSize), uvec3(gl_WorkGroupSize), uvec3(gl_WorkGroupSize))), max(_GLF_IDENTITY(_GLF_IDENTITY(uvec3(gl_WorkGroupSize), clamp(uvec3(gl_WorkGroupSize), uvec3(gl_WorkGroupSize), uvec3(gl_WorkGroupSize))), (_GLF_IDENTITY(uvec3(gl_WorkGroupSize), clamp(uvec3(gl_WorkGroupSize), uvec3(gl_WorkGroupSize), uvec3(gl_WorkGroupSize)))) << uvec3(0u, 0u, 0u)), _GLF_IDENTITY(uvec3(gl_WorkGroupSize), clamp(uvec3(gl_WorkGroupSize), uvec3(gl_WorkGroupSize), uvec3(gl_WorkGroupSize)))))) | (_GLF_IDENTITY(_GLF_IDENTITY(uvec3(gl_WorkGroupSize), clamp(uvec3(gl_WorkGroupSize), uvec3(gl_WorkGroupSize), uvec3(gl_WorkGroupSize))), uvec3(uvec4(_GLF_IDENTITY(uvec3(gl_WorkGroupSize), clamp(uvec3(gl_WorkGroupSize), uvec3(gl_WorkGroupSize), uvec3(gl_WorkGroupSize))), 0u)))), (_GLF_IDENTITY(_GLF_IDENTITY(uvec3(gl_WorkGroupSize), clamp(uvec3(gl_WorkGroupSize), uvec3(gl_WorkGroupSize), uvec3(gl_WorkGroupSize))), max(_GLF_IDENTITY(_GLF_IDENTITY(uvec3(gl_WorkGroupSize), clamp(uvec3(gl_WorkGroupSize), uvec3(gl_WorkGroupSize), uvec3(gl_WorkGroupSize))), (_GLF_IDENTITY(uvec3(gl_WorkGroupSize), clamp(uvec3(gl_WorkGroupSize), uvec3(gl_WorkGroupSize), uvec3(gl_WorkGroupSize)))) << uvec3(0u, 0u, 0u)), _GLF_IDENTITY(uvec3(gl_WorkGroupSize), clamp(uvec3(gl_WorkGroupSize), uvec3(gl_WorkGroupSize), uvec3(gl_WorkGroupSize)))))) | (_GLF_IDENTITY(_GLF_IDENTITY(uvec3(gl_WorkGroupSize), clamp(uvec3(gl_WorkGroupSize), uvec3(gl_WorkGroupSize), uvec3(gl_WorkGroupSize))), uvec3(uvec4(_GLF_IDENTITY(uvec3(gl_WorkGroupSize), clamp(uvec3(gl_WorkGroupSize), uvec3(gl_WorkGroupSize), uvec3(gl_WorkGroupSize))), 0u)))), (_GLF_IDENTITY(_GLF_IDENTITY(uvec3(gl_WorkGroupSize), clamp(uvec3(gl_WorkGroupSize), uvec3(gl_WorkGroupSize), uvec3(gl_WorkGroupSize))), max(_GLF_IDENTITY(_GLF_IDENTITY(uvec3(gl_WorkGroupSize), clamp(uvec3(gl_WorkGroupSize), uvec3(gl_WorkGroupSize), uvec3(gl_WorkGroupSize))), (_GLF_IDENTITY(uvec3(gl_WorkGroupSize), clamp(uvec3(gl_WorkGroupSize), uvec3(gl_WorkGroupSize), uvec3(gl_WorkGroupSize)))) << uvec3(0u, 0u, 0u)), _GLF_IDENTITY(uvec3(gl_WorkGroupSize), clamp(uvec3(gl_WorkGroupSize), uvec3(gl_WorkGroupSize), uvec3(gl_WorkGroupSize)))))) | (_GLF_IDENTITY(_GLF_IDENTITY(uvec3(gl_WorkGroupSize), clamp(uvec3(gl_WorkGroupSize), uvec3(gl_WorkGroupSize), uvec3(gl_WorkGroupSize))), uvec3(uvec4(_GLF_IDENTITY(uvec3(gl_WorkGroupSize), clamp(uvec3(gl_WorkGroupSize), uvec3(gl_WorkGroupSize), uvec3(gl_WorkGroupSize))), 0u))))))), min(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(gl_WorkGroupSize, clamp(gl_WorkGroupSize, gl_WorkGroupSize, gl_WorkGroupSize))), clamp(uvec3(_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) | (gl_WorkGroupSize))), uvec3(gl_WorkGroupSize), uvec3(_GLF_IDENTITY(gl_WorkGroupSize, uvec3(uvec3(gl_WorkGroupSize)))))), _GLF_IDENTITY(uvec3(gl_WorkGroupSize), clamp(uvec3(gl_WorkGroupSize), _GLF_IDENTITY(uvec3(gl_WorkGroupSize), (uvec3(gl_WorkGroupSize)) | (_GLF_IDENTITY(uvec3(gl_WorkGroupSize), max(uvec3(gl_WorkGroupSize), uvec3(gl_WorkGroupSize))))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(uvec3(gl_WorkGroupSize), (uvec3(gl_WorkGroupSize)) * uvec3(1u, 1u, 1u)), (uvec3(gl_WorkGroupSize)) | (_GLF_IDENTITY(uvec3(gl_WorkGroupSize), (true ? uvec3(gl_WorkGroupSize) : _GLF_FUZZED(_GLF_IDENTITY((uvec3(15229u, 197729u, 38544u) - uvec3(92061u, 158701u, 135137u)), ((uvec3(15229u, 197729u, 38544u) - uvec3(92061u, 158701u, 135137u))) | uvec3(0u, 0u, 0u))))))), _GLF_IDENTITY(uvec3(0u, 0u, _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, 0u + (0u))) ^ 0u)), _GLF_IDENTITY(clamp(_GLF_IDENTITY(uvec3(0u, 0u, _GLF_IDENTITY(_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, 0u + (0u))) ^ 0u), clamp(_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, 0u + (0u))) ^ 0u), _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, 0u + (0u))) ^ 0u), _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, 0u + (0u))) ^ 0u)))), _GLF_IDENTITY(uvec3(_GLF_IDENTITY(uvec4(uvec3(0u, 0u, _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, 0u + (0u))) ^ 0u)), 1u), (uvec4(uvec3(0u, 0u, _GLF_IDENTITY(_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, 0u + (0u))) ^ 0u), uint(uvec4(_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, 0u + (0u))) ^ 0u), 1u, (0u ^ 0u), uint(_GLF_ONE(1.0, injectionSwitch.y)))))), 1u)) | (uvec4(_GLF_IDENTITY(uvec3(0u, 0u, _GLF_IDENTITY(0u, _GLF_IDENTITY((_GLF_IDENTITY(0u, 0u + (0u))), min((_GLF_IDENTITY(0u, 0u + (0u))), _GLF_IDENTITY((_GLF_IDENTITY(0u, 0u + (0u))), ~ (~ ((_GLF_IDENTITY(0u, 0u + (0u)))))))) ^ 0u)), (uvec3(0u, 0u, _GLF_IDENTITY(0u, _GLF_IDENTITY((_GLF_IDENTITY(0u, 0u + (0u))), min((_GLF_IDENTITY(0u, 0u + (0u))), _GLF_IDENTITY((_GLF_IDENTITY(0u, 0u + (0u))), ~ (~ ((_GLF_IDENTITY(0u, 0u + (0u)))))))) ^ 0u))) / uvec3(1u, 1u, 1u)), 1u)))), uvec3(0u, 0u, 0u) ^ (_GLF_IDENTITY(uvec3(_GLF_IDENTITY(uvec4(uvec3(0u, 0u, _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, 0u + (0u))) ^ 0u)), 1u), (uvec4(uvec3(0u, 0u, _GLF_IDENTITY(_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, 0u + (0u))) ^ 0u), uint(uvec4(_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, 0u + (0u))) ^ 0u), 1u, (0u ^ 0u), uint(_GLF_ONE(1.0, injectionSwitch.y)))))), 1u)) | (uvec4(_GLF_IDENTITY(uvec3(0u, 0u, _GLF_IDENTITY(0u, _GLF_IDENTITY((_GLF_IDENTITY(0u, 0u + (0u))), min((_GLF_IDENTITY(0u, 0u + (0u))), _GLF_IDENTITY((_GLF_IDENTITY(0u, 0u + (0u))), ~ (~ ((_GLF_IDENTITY(0u, 0u + (0u)))))))) ^ 0u)), (uvec3(0u, 0u, _GLF_IDENTITY(0u, _GLF_IDENTITY((_GLF_IDENTITY(0u, 0u + (0u))), min((_GLF_IDENTITY(0u, 0u + (0u))), _GLF_IDENTITY((_GLF_IDENTITY(0u, 0u + (0u))), ~ (~ ((_GLF_IDENTITY(0u, 0u + (0u)))))))) ^ 0u))) / uvec3(1u, 1u, 1u)), 1u)))), max(uvec3(_GLF_IDENTITY(uvec4(uvec3(0u, 0u, _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, 0u + (0u))) ^ 0u)), 1u), (uvec4(uvec3(0u, 0u, _GLF_IDENTITY(_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, 0u + (0u))) ^ 0u), uint(uvec4(_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, 0u + (0u))) ^ 0u), 1u, (0u ^ 0u), uint(_GLF_ONE(1.0, injectionSwitch.y)))))), 1u)) | (uvec4(_GLF_IDENTITY(uvec3(0u, 0u, _GLF_IDENTITY(0u, _GLF_IDENTITY((_GLF_IDENTITY(0u, 0u + (0u))), min((_GLF_IDENTITY(0u, 0u + (0u))), _GLF_IDENTITY((_GLF_IDENTITY(0u, 0u + (0u))), ~ (~ ((_GLF_IDENTITY(0u, 0u + (0u)))))))) ^ 0u)), (uvec3(0u, 0u, _GLF_IDENTITY(0u, _GLF_IDENTITY((_GLF_IDENTITY(0u, 0u + (0u))), min((_GLF_IDENTITY(0u, 0u + (0u))), _GLF_IDENTITY((_GLF_IDENTITY(0u, 0u + (0u))), ~ (~ ((_GLF_IDENTITY(0u, 0u + (0u)))))))) ^ 0u))) / uvec3(1u, 1u, 1u)), 1u)))), uvec3(_GLF_IDENTITY(uvec4(uvec3(0u, 0u, _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, 0u + (0u))) ^ 0u)), 1u), (uvec4(uvec3(0u, 0u, _GLF_IDENTITY(_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, 0u + (0u))) ^ 0u), uint(uvec4(_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, 0u + (0u))) ^ 0u), 1u, (0u ^ 0u), uint(_GLF_ONE(1.0, injectionSwitch.y)))))), 1u)) | (uvec4(_GLF_IDENTITY(uvec3(0u, 0u, _GLF_IDENTITY(0u, _GLF_IDENTITY((_GLF_IDENTITY(0u, 0u + (0u))), min((_GLF_IDENTITY(0u, 0u + (0u))), _GLF_IDENTITY((_GLF_IDENTITY(0u, 0u + (0u))), ~ (~ ((_GLF_IDENTITY(0u, 0u + (0u)))))))) ^ 0u)), (uvec3(0u, 0u, _GLF_IDENTITY(0u, _GLF_IDENTITY((_GLF_IDENTITY(0u, 0u + (0u))), min((_GLF_IDENTITY(0u, 0u + (0u))), _GLF_IDENTITY((_GLF_IDENTITY(0u, 0u + (0u))), ~ (~ ((_GLF_IDENTITY(0u, 0u + (0u)))))))) ^ 0u))) / uvec3(1u, 1u, 1u)), 1u))))))))), uvec3(0u, 0u, _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, 0u + _GLF_IDENTITY((0u), (false ? _GLF_FUZZED((subgroup_size --)) : (0u))))) ^ 0u)), uvec3(0u, 0u, _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, 0u + (0u))) ^ 0u))), (clamp(_GLF_IDENTITY(uvec3(0u, 0u, _GLF_IDENTITY(_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, 0u + (0u))) ^ 0u), clamp(_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, 0u + (0u))) ^ 0u), _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, 0u + (0u))) ^ 0u), _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, 0u + (0u))) ^ 0u)))), _GLF_IDENTITY(uvec3(_GLF_IDENTITY(uvec4(uvec3(0u, 0u, _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, 0u + (0u))) ^ 0u)), 1u), (uvec4(uvec3(0u, 0u, _GLF_IDENTITY(_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, 0u + (0u))) ^ 0u), uint(uvec4(_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, 0u + (0u))) ^ 0u), 1u, (0u ^ 0u), uint(_GLF_ONE(1.0, injectionSwitch.y)))))), 1u)) | (uvec4(_GLF_IDENTITY(uvec3(0u, 0u, _GLF_IDENTITY(0u, _GLF_IDENTITY((_GLF_IDENTITY(0u, 0u + (0u))), min((_GLF_IDENTITY(0u, 0u + (0u))), _GLF_IDENTITY((_GLF_IDENTITY(0u, 0u + (0u))), ~ (~ ((_GLF_IDENTITY(0u, 0u + (0u)))))))) ^ 0u)), (uvec3(0u, 0u, _GLF_IDENTITY(0u, _GLF_IDENTITY((_GLF_IDENTITY(0u, 0u + (0u))), min((_GLF_IDENTITY(0u, 0u + (0u))), _GLF_IDENTITY((_GLF_IDENTITY(0u, 0u + (0u))), ~ (~ ((_GLF_IDENTITY(0u, 0u + (0u)))))))) ^ 0u))) / uvec3(1u, 1u, 1u)), 1u)))), uvec3(0u, 0u, 0u) ^ (_GLF_IDENTITY(uvec3(_GLF_IDENTITY(uvec4(uvec3(0u, 0u, _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, 0u + (0u))) ^ 0u)), 1u), (uvec4(uvec3(0u, 0u, _GLF_IDENTITY(_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, 0u + (0u))) ^ 0u), uint(uvec4(_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, 0u + (0u))) ^ 0u), 1u, (0u ^ 0u), uint(_GLF_ONE(1.0, injectionSwitch.y)))))), 1u)) | (uvec4(_GLF_IDENTITY(uvec3(0u, 0u, _GLF_IDENTITY(0u, _GLF_IDENTITY((_GLF_IDENTITY(0u, 0u + (0u))), min((_GLF_IDENTITY(0u, 0u + (0u))), _GLF_IDENTITY((_GLF_IDENTITY(0u, 0u + (0u))), ~ (~ ((_GLF_IDENTITY(0u, 0u + (0u)))))))) ^ 0u)), (uvec3(0u, 0u, _GLF_IDENTITY(0u, _GLF_IDENTITY((_GLF_IDENTITY(0u, 0u + (0u))), min((_GLF_IDENTITY(0u, 0u + (0u))), _GLF_IDENTITY((_GLF_IDENTITY(0u, 0u + (0u))), ~ (~ ((_GLF_IDENTITY(0u, 0u + (0u)))))))) ^ 0u))) / uvec3(1u, 1u, 1u)), 1u)))), max(uvec3(_GLF_IDENTITY(uvec4(uvec3(0u, 0u, _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, 0u + (0u))) ^ 0u)), 1u), (uvec4(uvec3(0u, 0u, _GLF_IDENTITY(_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, 0u + (0u))) ^ 0u), uint(uvec4(_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, 0u + (0u))) ^ 0u), 1u, (0u ^ 0u), uint(_GLF_ONE(1.0, injectionSwitch.y)))))), 1u)) | (uvec4(_GLF_IDENTITY(uvec3(0u, 0u, _GLF_IDENTITY(0u, _GLF_IDENTITY((_GLF_IDENTITY(0u, 0u + (0u))), min((_GLF_IDENTITY(0u, 0u + (0u))), _GLF_IDENTITY((_GLF_IDENTITY(0u, 0u + (0u))), ~ (~ ((_GLF_IDENTITY(0u, 0u + (0u)))))))) ^ 0u)), (uvec3(0u, 0u, _GLF_IDENTITY(0u, _GLF_IDENTITY((_GLF_IDENTITY(0u, 0u + (0u))), min((_GLF_IDENTITY(0u, 0u + (0u))), _GLF_IDENTITY((_GLF_IDENTITY(0u, 0u + (0u))), ~ (~ ((_GLF_IDENTITY(0u, 0u + (0u)))))))) ^ 0u))) / uvec3(1u, 1u, 1u)), 1u)))), uvec3(_GLF_IDENTITY(uvec4(uvec3(0u, 0u, _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, 0u + (0u))) ^ 0u)), 1u), (uvec4(uvec3(0u, 0u, _GLF_IDENTITY(_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, 0u + (0u))) ^ 0u), uint(uvec4(_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, 0u + (0u))) ^ 0u), 1u, (0u ^ 0u), uint(_GLF_ONE(1.0, injectionSwitch.y)))))), 1u)) | (uvec4(_GLF_IDENTITY(uvec3(0u, 0u, _GLF_IDENTITY(0u, _GLF_IDENTITY((_GLF_IDENTITY(0u, 0u + (0u))), min((_GLF_IDENTITY(0u, 0u + (0u))), _GLF_IDENTITY((_GLF_IDENTITY(0u, 0u + (0u))), ~ (~ ((_GLF_IDENTITY(0u, 0u + (0u)))))))) ^ 0u)), (uvec3(0u, 0u, _GLF_IDENTITY(0u, _GLF_IDENTITY((_GLF_IDENTITY(0u, 0u + (0u))), min((_GLF_IDENTITY(0u, 0u + (0u))), _GLF_IDENTITY((_GLF_IDENTITY(0u, 0u + (0u))), ~ (~ ((_GLF_IDENTITY(0u, 0u + (0u)))))))) ^ 0u))) / uvec3(1u, 1u, 1u)), 1u))))))))), uvec3(0u, 0u, _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, 0u + _GLF_IDENTITY((0u), (false ? _GLF_FUZZED((subgroup_size --)) : (0u))))) ^ 0u)), uvec3(0u, 0u, _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, 0u + (0u))) ^ 0u)))) << uvec3(0u, 0u, 0u))) ^ (uvec3(gl_WorkGroupSize))))))))))).x;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  return;
 uint workgroup_id = gl_WorkGroupID.x;
 uint workgroup_base = workgroup_size * workgroup_id;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 uint virtual_gid = _GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, uint(uvec4(subgroup_id * subgroup_size, uint(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), clamp(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y)))), (uint(_GLF_ZERO(0.0, injectionSwitch.x)) >> _GLF_IDENTITY(uint(2u), uint(2u))), _GLF_IDENTITY((1u & 1u), min(_GLF_IDENTITY((1u & 1u), ~ (~ ((1u & 1u)))), _GLF_IDENTITY((1u & 1u), ((1u & 1u)) - 0u)))))), clamp(_GLF_IDENTITY(subgroup_id * subgroup_size, uint(uvec4(subgroup_id * subgroup_size, uint(_GLF_ONE(1.0, injectionSwitch.y)), (_GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)), max(_GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)), 0u | (uint(_GLF_ZERO(0.0, injectionSwitch.x)))), _GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)), uint(uvec3(uint(_GLF_ZERO(0.0, injectionSwitch.x)), 1u, 1u))))) >> _GLF_IDENTITY(uint(2u), uint(2u))), (1u & 1u)))), _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, uint(_GLF_IDENTITY(uvec4(subgroup_id * subgroup_size, uint(_GLF_ONE(1.0, injectionSwitch.y)), (uint(_GLF_ZERO(0.0, injectionSwitch.x)) >> _GLF_IDENTITY(uint(2u), uint(2u))), (1u & 1u)), min(_GLF_IDENTITY(uvec4(subgroup_id * subgroup_size, uint(_GLF_ONE(1.0, injectionSwitch.y)), (uint(_GLF_ZERO(0.0, injectionSwitch.x)) >> _GLF_IDENTITY(uint(2u), uint(2u))), (1u & 1u)), max(uvec4(_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) | 0u), _GLF_IDENTITY(uint(_GLF_ONE(1.0, injectionSwitch.y)), max(uint(_GLF_ONE(1.0, injectionSwitch.y)), uint(_GLF_ONE(1.0, injectionSwitch.y)))), (uint(_GLF_ZERO(0.0, injectionSwitch.x)) >> _GLF_IDENTITY(uint(2u), uint(2u))), (1u & 1u)), _GLF_IDENTITY(uvec4(subgroup_id * subgroup_size, uint(_GLF_ONE(1.0, injectionSwitch.y)), (_GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)) >> _GLF_IDENTITY(uint(2u), uint(2u)), max(_GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)) >> _GLF_IDENTITY(uint(2u), uint(2u)), (true ? uint(_GLF_ZERO(0.0, injectionSwitch.x)) >> _GLF_IDENTITY(uint(2u), uint(2u)) : _GLF_FUZZED(workgroup_size))), uint(_GLF_ZERO(0.0, injectionSwitch.x)) >> _GLF_IDENTITY(uint(2u), uint(2u))))), (1u & 1u)), (uvec4(subgroup_id * subgroup_size, uint(_GLF_ONE(1.0, injectionSwitch.y)), (uint(_GLF_ZERO(0.0, injectionSwitch.x)) >> _GLF_IDENTITY(uint(2u), uint(2u))), (1u & 1u))) - uvec4(0u, 0u, 0u, _GLF_IDENTITY(0u, (0u) << 0u))))), uvec4(subgroup_id * subgroup_size, uint(_GLF_ONE(1.0, injectionSwitch.y)), (uint(_GLF_ZERO(0.0, injectionSwitch.x)) >> _GLF_IDENTITY(uint(2u), uint(2u))), (1u & 1u)))))), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, uint(_GLF_IDENTITY(uvec4(subgroup_id * subgroup_size, uint(_GLF_ONE(1.0, injectionSwitch.y)), (uint(_GLF_ZERO(0.0, injectionSwitch.x)) >> _GLF_IDENTITY(uint(2u), uint(2u))), (1u & 1u)), min(_GLF_IDENTITY(uvec4(subgroup_id * subgroup_size, uint(_GLF_ONE(1.0, injectionSwitch.y)), (uint(_GLF_ZERO(0.0, injectionSwitch.x)) >> _GLF_IDENTITY(uint(2u), uint(2u))), (1u & 1u)), max(uvec4(_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) | 0u), _GLF_IDENTITY(uint(_GLF_ONE(1.0, injectionSwitch.y)), max(uint(_GLF_ONE(1.0, injectionSwitch.y)), uint(_GLF_ONE(1.0, injectionSwitch.y)))), (uint(_GLF_ZERO(0.0, injectionSwitch.x)) >> _GLF_IDENTITY(uint(2u), uint(2u))), (1u & 1u)), _GLF_IDENTITY(uvec4(subgroup_id * subgroup_size, uint(_GLF_ONE(1.0, injectionSwitch.y)), (_GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)) >> _GLF_IDENTITY(uint(2u), uint(2u)), max(_GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)) >> _GLF_IDENTITY(uint(2u), uint(2u)), (true ? uint(_GLF_ZERO(0.0, injectionSwitch.x)) >> _GLF_IDENTITY(uint(2u), uint(2u)) : _GLF_FUZZED(workgroup_size))), uint(_GLF_ZERO(0.0, injectionSwitch.x)) >> _GLF_IDENTITY(uint(2u), uint(2u))))), (1u & 1u)), (uvec4(subgroup_id * subgroup_size, uint(_GLF_ONE(1.0, injectionSwitch.y)), (uint(_GLF_ZERO(0.0, injectionSwitch.x)) >> _GLF_IDENTITY(uint(2u), uint(2u))), (1u & 1u))) - uvec4(0u, 0u, 0u, _GLF_IDENTITY(0u, (0u) << 0u))))), uvec4(subgroup_id * subgroup_size, uint(_GLF_ONE(1.0, injectionSwitch.y)), (uint(_GLF_ZERO(0.0, injectionSwitch.x)) >> _GLF_IDENTITY(uint(2u), uint(2u))), (1u & 1u)))))), (_GLF_IDENTITY(subgroup_id * subgroup_size, uint(_GLF_IDENTITY(uvec4(subgroup_id * subgroup_size, uint(_GLF_ONE(1.0, injectionSwitch.y)), (uint(_GLF_ZERO(0.0, injectionSwitch.x)) >> _GLF_IDENTITY(uint(2u), uint(2u))), (1u & 1u)), min(_GLF_IDENTITY(uvec4(subgroup_id * subgroup_size, uint(_GLF_ONE(1.0, injectionSwitch.y)), (uint(_GLF_ZERO(0.0, injectionSwitch.x)) >> _GLF_IDENTITY(uint(2u), uint(2u))), (1u & 1u)), max(uvec4(_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) | 0u), _GLF_IDENTITY(uint(_GLF_ONE(1.0, injectionSwitch.y)), max(uint(_GLF_ONE(1.0, injectionSwitch.y)), uint(_GLF_ONE(1.0, injectionSwitch.y)))), (uint(_GLF_ZERO(0.0, injectionSwitch.x)) >> _GLF_IDENTITY(uint(2u), uint(2u))), (1u & 1u)), _GLF_IDENTITY(uvec4(subgroup_id * subgroup_size, uint(_GLF_ONE(1.0, injectionSwitch.y)), (_GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)) >> _GLF_IDENTITY(uint(2u), uint(2u)), max(_GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)) >> _GLF_IDENTITY(uint(2u), uint(2u)), (true ? uint(_GLF_ZERO(0.0, injectionSwitch.x)) >> _GLF_IDENTITY(uint(2u), uint(2u)) : _GLF_FUZZED(workgroup_size))), uint(_GLF_ZERO(0.0, injectionSwitch.x)) >> _GLF_IDENTITY(uint(2u), uint(2u))))), (1u & 1u)), (uvec4(subgroup_id * subgroup_size, uint(_GLF_ONE(1.0, injectionSwitch.y)), (uint(_GLF_ZERO(0.0, injectionSwitch.x)) >> _GLF_IDENTITY(uint(2u), uint(2u))), (1u & 1u))) - uvec4(0u, 0u, 0u, _GLF_IDENTITY(0u, (0u) << 0u))))), uvec4(subgroup_id * subgroup_size, uint(_GLF_ONE(1.0, injectionSwitch.y)), (uint(_GLF_ZERO(0.0, injectionSwitch.x)) >> _GLF_IDENTITY(uint(2u), uint(2u))), (1u & 1u))))))) | (_GLF_IDENTITY(subgroup_id * subgroup_size, uint(_GLF_IDENTITY(uvec4(subgroup_id * subgroup_size, uint(_GLF_ONE(1.0, injectionSwitch.y)), (uint(_GLF_ZERO(0.0, injectionSwitch.x)) >> _GLF_IDENTITY(uint(2u), uint(2u))), (1u & 1u)), min(_GLF_IDENTITY(uvec4(subgroup_id * subgroup_size, uint(_GLF_ONE(1.0, injectionSwitch.y)), (uint(_GLF_ZERO(0.0, injectionSwitch.x)) >> _GLF_IDENTITY(uint(2u), uint(2u))), (1u & 1u)), max(uvec4(_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) | 0u), _GLF_IDENTITY(uint(_GLF_ONE(1.0, injectionSwitch.y)), max(uint(_GLF_ONE(1.0, injectionSwitch.y)), uint(_GLF_ONE(1.0, injectionSwitch.y)))), (uint(_GLF_ZERO(0.0, injectionSwitch.x)) >> _GLF_IDENTITY(uint(2u), uint(2u))), (1u & 1u)), _GLF_IDENTITY(uvec4(subgroup_id * subgroup_size, uint(_GLF_ONE(1.0, injectionSwitch.y)), (_GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)) >> _GLF_IDENTITY(uint(2u), uint(2u)), max(_GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)) >> _GLF_IDENTITY(uint(2u), uint(2u)), (true ? uint(_GLF_ZERO(0.0, injectionSwitch.x)) >> _GLF_IDENTITY(uint(2u), uint(2u)) : _GLF_FUZZED(workgroup_size))), uint(_GLF_ZERO(0.0, injectionSwitch.x)) >> _GLF_IDENTITY(uint(2u), uint(2u))))), (1u & 1u)), (uvec4(subgroup_id * subgroup_size, uint(_GLF_ONE(1.0, injectionSwitch.y)), (uint(_GLF_ZERO(0.0, injectionSwitch.x)) >> _GLF_IDENTITY(uint(2u), uint(2u))), (1u & 1u))) - uvec4(0u, 0u, 0u, _GLF_IDENTITY(0u, (0u) << 0u))))), uvec4(subgroup_id * subgroup_size, uint(_GLF_ONE(1.0, injectionSwitch.y)), (uint(_GLF_ZERO(0.0, injectionSwitch.x)) >> _GLF_IDENTITY(uint(2u), uint(2u))), (1u & 1u))))))))))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) ^ (0u >> _GLF_IDENTITY(uint(3u), uint(3u)))), _GLF_IDENTITY(uint(uvec4(subgroup_id * subgroup_size, uint(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), mix(float(_GLF_FUZZED(-129.649)), float(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), float(float(_GLF_ONE(1.0, injectionSwitch.y))))), bool(true)))), (uint(_GLF_ZERO(0.0, injectionSwitch.x)) >> _GLF_IDENTITY(uint(2u), uint(2u))), (1u & 1u))), (uint(uvec4(subgroup_id * subgroup_size, uint(_GLF_ONE(1.0, injectionSwitch.y)), (uint(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), (_GLF_ZERO(0.0, injectionSwitch.x)) + 0.0)) >> _GLF_IDENTITY(uint(2u), uint(2u))), (1u & 1u)))) ^ (82743u & 0u))), ~ (~ _GLF_IDENTITY((_GLF_IDENTITY(subgroup_id * subgroup_size, uint(uvec4(subgroup_id * subgroup_size, _GLF_IDENTITY(uint(_GLF_ONE(1.0, injectionSwitch.y)), max(uint(_GLF_ONE(1.0, injectionSwitch.y)), uint(_GLF_ONE(1.0, injectionSwitch.y)))), (_GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)) >> _GLF_IDENTITY(_GLF_IDENTITY(uint(2u), (uint(2u)) - 0u), _GLF_IDENTITY(uint(2u), max(uint(2u), uint(2u)))), uint(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (_GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)) >> _GLF_IDENTITY(uint(2u), uint(2u)), (_GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)) >> _GLF_IDENTITY(uint(2u), uint(2u)), _GLF_IDENTITY((uint(_GLF_ZERO(0.0, injectionSwitch.x)) >> _GLF_IDENTITY(uint(2u), uint(2u))) | 0u, ((uint(_GLF_ZERO(0.0, injectionSwitch.x)) >> _GLF_IDENTITY(uint(2u), uint(2u))) | 0u) | ((uint(_GLF_ZERO(0.0, injectionSwitch.x)) >> _GLF_IDENTITY(uint(2u), uint(2u))) | 0u)))) ^ 0u))), clamp(uint(_GLF_ZERO(0.0, injectionSwitch.x)) >> _GLF_IDENTITY(uint(2u), uint(2u)), uint(_GLF_ZERO(0.0, injectionSwitch.x)) >> _GLF_IDENTITY(uint(2u), uint(2u)), uint(_GLF_ZERO(0.0, injectionSwitch.x)) >> _GLF_IDENTITY(uint(2u), uint(2u))))), (1u & 1u))))), (true ? (_GLF_IDENTITY(subgroup_id * subgroup_size, uint(uvec4(subgroup_id * subgroup_size, _GLF_IDENTITY(uint(_GLF_ONE(1.0, injectionSwitch.y)), max(uint(_GLF_ONE(1.0, injectionSwitch.y)), uint(_GLF_ONE(1.0, injectionSwitch.y)))), (_GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)) >> _GLF_IDENTITY(_GLF_IDENTITY(uint(2u), (uint(2u)) - 0u), _GLF_IDENTITY(uint(2u), max(uint(2u), uint(2u)))), uint(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (_GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)) >> _GLF_IDENTITY(uint(2u), uint(2u)), (_GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)) >> _GLF_IDENTITY(uint(2u), uint(2u)), _GLF_IDENTITY((uint(_GLF_ZERO(0.0, injectionSwitch.x)) >> _GLF_IDENTITY(uint(2u), uint(2u))) | 0u, ((uint(_GLF_ZERO(0.0, injectionSwitch.x)) >> _GLF_IDENTITY(uint(2u), uint(2u))) | 0u) | ((uint(_GLF_ZERO(0.0, injectionSwitch.x)) >> _GLF_IDENTITY(uint(2u), uint(2u))) | 0u)))) ^ 0u))), clamp(uint(_GLF_ZERO(0.0, injectionSwitch.x)) >> _GLF_IDENTITY(uint(2u), uint(2u)), uint(_GLF_ZERO(0.0, injectionSwitch.x)) >> _GLF_IDENTITY(uint(2u), uint(2u)), uint(_GLF_ZERO(0.0, injectionSwitch.x)) >> _GLF_IDENTITY(uint(2u), uint(2u))))), (1u & 1u))))) : _GLF_FUZZED(workgroup_id))))))) + subgroup_local_id, (workgroup_base + _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, uint(uvec4(subgroup_id * subgroup_size, uint(_GLF_ONE(1.0, injectionSwitch.y)), (_GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)), min(uint(_GLF_ZERO(0.0, injectionSwitch.x)), _GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)), uint(uvec4(uint(_GLF_ZERO(0.0, injectionSwitch.x)), 1u, 1u, 0u))))) >> _GLF_IDENTITY(uint(2u), uint(2u))), (1u & 1u)))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, uint(uvec4(subgroup_id * subgroup_size, uint(_GLF_ONE(1.0, injectionSwitch.y)), (uint(_GLF_ZERO(0.0, injectionSwitch.x)) >> _GLF_IDENTITY(uint(2u), uint(2u))), (1u & 1u)))), (_GLF_IDENTITY(subgroup_id * subgroup_size, uint(uvec4(subgroup_id * subgroup_size, uint(_GLF_ONE(1.0, injectionSwitch.y)), (uint(_GLF_ZERO(0.0, injectionSwitch.x)) >> _GLF_IDENTITY(uint(2u), uint(2u))), (1u & 1u))))) << 0u), _GLF_IDENTITY(subgroup_id * subgroup_size, uint(_GLF_IDENTITY(uvec4(subgroup_id * subgroup_size, uint(_GLF_ONE(1.0, injectionSwitch.y)), (_GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)) >> _GLF_IDENTITY(uint(2u), uint(2u)), max(uint(_GLF_ZERO(0.0, injectionSwitch.x)) >> _GLF_IDENTITY(uint(2u), uint(2u)), _GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)) >> _GLF_IDENTITY(uint(2u), uint(2u)), (false ? _GLF_FUZZED(subgroup_local_id) : uint(_GLF_ZERO(0.0, injectionSwitch.x)) >> _GLF_IDENTITY(uint(2u), uint(2u))))))), (_GLF_IDENTITY(1u, (false ? _GLF_FUZZED(workgroup_id) : _GLF_IDENTITY(1u, max(1u, 1u)))) & 1u)), min(_GLF_IDENTITY(uvec4(subgroup_id * subgroup_size, uint(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + 0.0))), (uint(_GLF_ZERO(0.0, injectionSwitch.x)) >> _GLF_IDENTITY(uint(2u), uint(2u))), (1u & 1u)), _GLF_IDENTITY(max(uvec4(_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) | 0u), _GLF_IDENTITY(uint(_GLF_ONE(1.0, injectionSwitch.y)), max(uint(_GLF_ONE(1.0, injectionSwitch.y)), uint(_GLF_ONE(1.0, injectionSwitch.y)))), (uint(_GLF_ZERO(0.0, injectionSwitch.x)) >> _GLF_IDENTITY(uint(2u), uint(2u))), (1u & 1u)), _GLF_IDENTITY(uvec4(subgroup_id * subgroup_size, uint(_GLF_ONE(1.0, injectionSwitch.y)), (_GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)) >> _GLF_IDENTITY(uint(2u), uint(2u)), max(_GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)) >> _GLF_IDENTITY(uint(2u), uint(2u)), (true ? uint(_GLF_ZERO(0.0, injectionSwitch.x)) >> _GLF_IDENTITY(uint(2u), uint(2u)) : _GLF_FUZZED(workgroup_size))), uint(_GLF_ZERO(0.0, injectionSwitch.x)) >> _GLF_IDENTITY(uint(2u), uint(2u))))), (1u & 1u)), (uvec4(subgroup_id * subgroup_size, uint(_GLF_ONE(1.0, injectionSwitch.y)), (uint(_GLF_ZERO(0.0, injectionSwitch.x)) >> _GLF_IDENTITY(uint(2u), uint(2u))), (1u & 1u))) - uvec4(0u, 0u, 0u, _GLF_IDENTITY(0u, (0u) << 0u)))), ~ (_GLF_IDENTITY(~ (max(uvec4(_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) | 0u), _GLF_IDENTITY(uint(_GLF_ONE(1.0, injectionSwitch.y)), max(uint(_GLF_ONE(1.0, injectionSwitch.y)), uint(_GLF_ONE(1.0, injectionSwitch.y)))), (uint(_GLF_ZERO(0.0, injectionSwitch.x)) >> _GLF_IDENTITY(uint(2u), uint(2u))), (1u & 1u)), _GLF_IDENTITY(uvec4(subgroup_id * subgroup_size, uint(_GLF_ONE(1.0, injectionSwitch.y)), (_GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)) >> _GLF_IDENTITY(uint(2u), uint(2u)), max(_GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)) >> _GLF_IDENTITY(uint(2u), uint(2u)), (true ? uint(_GLF_ZERO(0.0, injectionSwitch.x)) >> _GLF_IDENTITY(uint(2u), uint(2u)) : _GLF_FUZZED(workgroup_size))), uint(_GLF_ZERO(0.0, injectionSwitch.x)) >> _GLF_IDENTITY(uint(2u), uint(2u))))), (1u & 1u)), (uvec4(subgroup_id * subgroup_size, uint(_GLF_ONE(1.0, injectionSwitch.y)), (uint(_GLF_ZERO(0.0, injectionSwitch.x)) >> _GLF_IDENTITY(uint(2u), uint(2u))), (1u & 1u))) - uvec4(0u, 0u, 0u, _GLF_IDENTITY(0u, (0u) << 0u))))), max(~ (max(uvec4(_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) | 0u), _GLF_IDENTITY(uint(_GLF_ONE(1.0, injectionSwitch.y)), max(uint(_GLF_ONE(1.0, injectionSwitch.y)), uint(_GLF_ONE(1.0, injectionSwitch.y)))), (uint(_GLF_ZERO(0.0, injectionSwitch.x)) >> _GLF_IDENTITY(uint(2u), uint(2u))), (1u & 1u)), _GLF_IDENTITY(uvec4(subgroup_id * subgroup_size, uint(_GLF_ONE(1.0, injectionSwitch.y)), (_GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)) >> _GLF_IDENTITY(uint(2u), uint(2u)), max(_GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)) >> _GLF_IDENTITY(uint(2u), uint(2u)), (true ? uint(_GLF_ZERO(0.0, injectionSwitch.x)) >> _GLF_IDENTITY(uint(2u), uint(2u)) : _GLF_FUZZED(workgroup_size))), uint(_GLF_ZERO(0.0, injectionSwitch.x)) >> _GLF_IDENTITY(uint(2u), uint(2u))))), (1u & 1u)), (uvec4(subgroup_id * subgroup_size, uint(_GLF_ONE(1.0, injectionSwitch.y)), (uint(_GLF_ZERO(0.0, injectionSwitch.x)) >> _GLF_IDENTITY(uint(2u), uint(2u))), (1u & 1u))) - uvec4(0u, 0u, 0u, _GLF_IDENTITY(0u, (0u) << 0u))))), ~ (max(uvec4(_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) | 0u), _GLF_IDENTITY(uint(_GLF_ONE(1.0, injectionSwitch.y)), max(uint(_GLF_ONE(1.0, injectionSwitch.y)), uint(_GLF_ONE(1.0, injectionSwitch.y)))), (uint(_GLF_ZERO(0.0, injectionSwitch.x)) >> _GLF_IDENTITY(uint(2u), uint(2u))), (1u & 1u)), _GLF_IDENTITY(uvec4(subgroup_id * subgroup_size, uint(_GLF_ONE(1.0, injectionSwitch.y)), (_GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)) >> _GLF_IDENTITY(uint(2u), uint(2u)), max(_GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)) >> _GLF_IDENTITY(uint(2u), uint(2u)), (true ? uint(_GLF_ZERO(0.0, injectionSwitch.x)) >> _GLF_IDENTITY(uint(2u), uint(2u)) : _GLF_FUZZED(workgroup_size))), uint(_GLF_ZERO(0.0, injectionSwitch.x)) >> _GLF_IDENTITY(uint(2u), uint(2u))))), (1u & 1u)), (uvec4(subgroup_id * subgroup_size, uint(_GLF_ONE(1.0, injectionSwitch.y)), (uint(_GLF_ZERO(0.0, injectionSwitch.x)) >> _GLF_IDENTITY(uint(2u), uint(2u))), (1u & 1u))) - uvec4(0u, 0u, 0u, _GLF_IDENTITY(0u, (0u) << 0u)))))))))), uvec4(subgroup_id * subgroup_size, uint(_GLF_ONE(1.0, injectionSwitch.y)), (uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x)) >> _GLF_IDENTITY(uint(2u), uint(2u))), (1u & 1u)))))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) ^ (0u >> _GLF_IDENTITY(uint(3u), uint(3u)))), _GLF_IDENTITY(uint(uvec4(subgroup_id * subgroup_size, uint(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), max(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), float(vec3(_GLF_ONE(1.0, injectionSwitch.y), 0.0, 1.0))), _GLF_ONE(1.0, injectionSwitch.y)))), (uint(_GLF_ZERO(0.0, injectionSwitch.x)) >> _GLF_IDENTITY(uint(2u), uint(2u))), (1u & 1u))), (uint(uvec4(subgroup_id * subgroup_size, uint(_GLF_ONE(1.0, injectionSwitch.y)), (uint(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), (_GLF_ZERO(0.0, injectionSwitch.x)) + 0.0)) >> _GLF_IDENTITY(_GLF_IDENTITY(uint(2u), (uint(2u)) | (uint(2u))), uint(2u))), (_GLF_IDENTITY(1u, max(1u, 1u)) & 1u)))) ^ (82743u & 0u))), ~ (~ (_GLF_IDENTITY(subgroup_id * subgroup_size, uint(uvec4(subgroup_id * subgroup_size, _GLF_IDENTITY(uint(_GLF_ONE(1.0, injectionSwitch.y)), max(uint(_GLF_ONE(1.0, injectionSwitch.y)), _GLF_IDENTITY(uint(_GLF_ONE(1.0, injectionSwitch.y)), min(uint(_GLF_ONE(1.0, injectionSwitch.y)), uint(_GLF_ONE(1.0, injectionSwitch.y)))))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)), 0u | (uint(_GLF_ZERO(0.0, injectionSwitch.x)))) >> _GLF_IDENTITY(uint(2u), uint(2u)), uint(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (_GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)) >> _GLF_IDENTITY(uint(2u), uint(2u)), (_GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)) >> _GLF_IDENTITY(uint(2u), uint(2u)), (uint(_GLF_ZERO(0.0, injectionSwitch.x)) >> _GLF_IDENTITY(uint(2u), uint(2u))) | 0u)) ^ 0u))), clamp(uint(_GLF_ZERO(0.0, injectionSwitch.x)) >> _GLF_IDENTITY(uint(2u), uint(2u)), uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).x)) >> _GLF_IDENTITY(uint(2u), uint(2u)), uint(_GLF_ZERO(0.0, injectionSwitch.x)) >> _GLF_IDENTITY(uint(2u), uint(2u))))), (1u & 1u))))))))) + subgroup_local_id) | (_GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, uint(uvec4(subgroup_id * subgroup_size, uint(_GLF_ONE(1.0, injectionSwitch.y)), (uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat3(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)), 1.0, 0.0, 1.0, cos(0.0), 1.0, sqrt(abs(1.0)), 1.0), mat3(mat3(mat3(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)), 1.0, 0.0, 1.0, cos(0.0), 1.0, sqrt(abs(1.0)), 1.0)))))).x)) >> _GLF_IDENTITY(uint(2u), uint(2u))), (1u & 1u)))), clamp(_GLF_IDENTITY(subgroup_id * subgroup_size, uint(uvec4(_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) | (subgroup_id * subgroup_size)), uint(_GLF_ONE(1.0, injectionSwitch.y)), (uint(_GLF_ZERO(0.0, injectionSwitch.x)) >> _GLF_IDENTITY(uint(2u), uint(2u))), _GLF_IDENTITY((1u & 1u), max(_GLF_IDENTITY((1u & 1u), 0u + ((1u & 1u))), _GLF_IDENTITY((1u & 1u), (false ? _GLF_FUZZED(uvec4(97352u, 118771u, 116275u, 76579u).y) : _GLF_IDENTITY((1u & 1u), uint(uint((1u & 1u))))))))))), _GLF_IDENTITY(subgroup_id * subgroup_size, uint(_GLF_IDENTITY(uvec4(subgroup_id * subgroup_size, uint(_GLF_ONE(1.0, injectionSwitch.y)), (uint(_GLF_ZERO(0.0, injectionSwitch.x)) >> _GLF_IDENTITY(uint(2u), uint(2u))), (1u & 1u)), min(_GLF_IDENTITY(uvec4(_GLF_IDENTITY(subgroup_id * subgroup_size, (_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) | 0u)) + 0u), uint(_GLF_ONE(1.0, injectionSwitch.y)), (uint(_GLF_ZERO(0.0, injectionSwitch.x)) >> _GLF_IDENTITY(uint(2u), uint(2u))), (1u & 1u)), max(uvec4(_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) | 0u), _GLF_IDENTITY(uint(_GLF_ONE(1.0, injectionSwitch.y)), max(uint(_GLF_ONE(1.0, injectionSwitch.y)), uint(_GLF_ONE(1.0, injectionSwitch.y)))), (uint(_GLF_ZERO(0.0, injectionSwitch.x)) >> _GLF_IDENTITY(uint(2u), uint(2u))), (1u & 1u)), _GLF_IDENTITY(uvec4(subgroup_id * subgroup_size, uint(_GLF_ONE(1.0, injectionSwitch.y)), (_GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)) >> _GLF_IDENTITY(uint(2u), _GLF_IDENTITY(uint(2u), clamp(uint(2u), _GLF_IDENTITY(uint(2u), (true ? uint(2u) : _GLF_FUZZED(num_workgroup))), uint(2u)))), max(_GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)) >> _GLF_IDENTITY(uint(2u), uint(2u)), (true ? uint(_GLF_ZERO(0.0, injectionSwitch.x)) >> _GLF_IDENTITY(uint(2u), uint(2u)) : _GLF_FUZZED(workgroup_size))), uint(_GLF_ZERO(0.0, injectionSwitch.x)) >> _GLF_IDENTITY(uint(2u), uint(2u))))), (1u & 1u)), (uvec4(subgroup_id * subgroup_size, uint(_GLF_ONE(1.0, injectionSwitch.y)), (uint(_GLF_ZERO(0.0, injectionSwitch.x)) >> _GLF_IDENTITY(uint(2u), uint(2u))), (1u & 1u))) - uvec4(0u, 0u, 0u, _GLF_IDENTITY(0u, (0u) << 0u))))), uvec4(subgroup_id * subgroup_size, uint(_GLF_ONE(1.0, injectionSwitch.y)), (uint(_GLF_ZERO(0.0, injectionSwitch.x)) >> _GLF_IDENTITY(_GLF_IDENTITY(uint(2u), _GLF_IDENTITY(uint(_GLF_IDENTITY(uint(uint(2u)), max(uint(uint(2u)), uint(uint(2u))))), 0u | (uint(_GLF_IDENTITY(uint(uint(2u)), max(uint(uint(2u)), uint(uint(2u)))))))), uint(2u))), (1u & 1u)))))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, (_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) / 1u)) ^ (0u >> _GLF_IDENTITY(uint(3u), uint(3u)))), _GLF_IDENTITY(uint(uvec4(subgroup_id * subgroup_size, uint(_GLF_ONE(1.0, injectionSwitch.y)), (uint(_GLF_ZERO(0.0, injectionSwitch.x)) >> _GLF_IDENTITY(uint(2u), uint(2u))), (1u & 1u))), (uint(_GLF_IDENTITY(uvec4(subgroup_id * subgroup_size, uint(_GLF_ONE(1.0, injectionSwitch.y)), (uint(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), (_GLF_ZERO(0.0, injectionSwitch.x)) + 0.0)) >> _GLF_IDENTITY(uint(2u), _GLF_IDENTITY(uint(2u), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? uint(2u) : _GLF_FUZZED(58743u))))), (1u & 1u)), max(uvec4(subgroup_id * subgroup_size, uint(_GLF_ONE(1.0, injectionSwitch.y)), (uint(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), (_GLF_ZERO(0.0, injectionSwitch.x)) + 0.0)) >> _GLF_IDENTITY(uint(2u), _GLF_IDENTITY(uint(2u), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? uint(2u) : _GLF_FUZZED(58743u))))), (1u & 1u)), uvec4(subgroup_id * subgroup_size, uint(_GLF_ONE(1.0, injectionSwitch.y)), (uint(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), (_GLF_ZERO(0.0, injectionSwitch.x)) + 0.0)) >> _GLF_IDENTITY(uint(2u), _GLF_IDENTITY(uint(2u), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? uint(2u) : _GLF_FUZZED(58743u))))), (1u & 1u)))))) ^ (82743u & 0u))), ~ _GLF_IDENTITY((~ (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) * uint(_GLF_ONE(1.0, injectionSwitch.y))), uint(uvec4(subgroup_id * subgroup_size, _GLF_IDENTITY(uint(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(9.1) : injectionSwitch.y)))), max(uint(_GLF_ONE(1.0, injectionSwitch.y)), uint(_GLF_ONE(1.0, injectionSwitch.y)))), (_GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)) >> _GLF_IDENTITY(uint(2u), uint(2u)), uint(_GLF_ZERO(_GLF_IDENTITY(0.0, (0.0) - sin(0.0)), injectionSwitch.x)) ^ (_GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)) >> _GLF_IDENTITY(_GLF_IDENTITY(uint(2u), uint(2u)), uint(uint(_GLF_IDENTITY(uint(2u), uint(2u))))), _GLF_IDENTITY((_GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)) >> _GLF_IDENTITY(uint(2u), uint(2u)), (uint(_GLF_ZERO(0.0, injectionSwitch.x)) >> _GLF_IDENTITY(uint(2u), uint(2u))) | 0u)), ((_GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)) >> _GLF_IDENTITY(uint(2u), uint(2u)), (uint(_GLF_ZERO(0.0, injectionSwitch.x)) >> _GLF_IDENTITY(uint(2u), uint(2u))) | 0u))) | ((_GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)) >> _GLF_IDENTITY(uint(2u), uint(2u)), (uint(_GLF_ZERO(0.0, injectionSwitch.x)) >> _GLF_IDENTITY(uint(2u), uint(2u))) | 0u)))) ^ 0u))), clamp(uint(_GLF_ZERO(0.0, injectionSwitch.x)) >> _GLF_IDENTITY(uint(2u), uint(2u)), _GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)) >> _GLF_IDENTITY(uint(2u), uint(2u)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(workgroup_size) : uint(_GLF_ZERO(0.0, injectionSwitch.x)) >> _GLF_IDENTITY(uint(2u), uint(2u)))), uint(_GLF_ZERO(0.0, injectionSwitch.x)) >> _GLF_IDENTITY(uint(2u), uint(2u))))), (1u & 1u)))))), clamp((~ (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) * uint(_GLF_ONE(1.0, injectionSwitch.y))), uint(uvec4(subgroup_id * subgroup_size, _GLF_IDENTITY(uint(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(9.1) : injectionSwitch.y)))), max(uint(_GLF_ONE(1.0, injectionSwitch.y)), uint(_GLF_ONE(1.0, injectionSwitch.y)))), (_GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)) >> _GLF_IDENTITY(uint(2u), uint(2u)), uint(_GLF_ZERO(_GLF_IDENTITY(0.0, (0.0) - sin(0.0)), injectionSwitch.x)) ^ (_GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)) >> _GLF_IDENTITY(_GLF_IDENTITY(uint(2u), uint(2u)), uint(uint(_GLF_IDENTITY(uint(2u), uint(2u))))), _GLF_IDENTITY((_GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)) >> _GLF_IDENTITY(uint(2u), uint(2u)), (uint(_GLF_ZERO(0.0, injectionSwitch.x)) >> _GLF_IDENTITY(uint(2u), uint(2u))) | 0u)), ((_GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)) >> _GLF_IDENTITY(uint(2u), uint(2u)), (uint(_GLF_ZERO(0.0, injectionSwitch.x)) >> _GLF_IDENTITY(uint(2u), uint(2u))) | 0u))) | ((_GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)) >> _GLF_IDENTITY(uint(2u), uint(2u)), (uint(_GLF_ZERO(0.0, injectionSwitch.x)) >> _GLF_IDENTITY(uint(2u), uint(2u))) | 0u)))) ^ 0u))), clamp(uint(_GLF_ZERO(0.0, injectionSwitch.x)) >> _GLF_IDENTITY(uint(2u), uint(2u)), _GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)) >> _GLF_IDENTITY(uint(2u), uint(2u)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(workgroup_size) : uint(_GLF_ZERO(0.0, injectionSwitch.x)) >> _GLF_IDENTITY(uint(2u), uint(2u)))), uint(_GLF_ZERO(0.0, injectionSwitch.x)) >> _GLF_IDENTITY(uint(2u), uint(2u))))), (1u & 1u)))))), (~ (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) * uint(_GLF_ONE(1.0, injectionSwitch.y))), uint(uvec4(subgroup_id * subgroup_size, _GLF_IDENTITY(uint(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(9.1) : injectionSwitch.y)))), max(uint(_GLF_ONE(1.0, injectionSwitch.y)), uint(_GLF_ONE(1.0, injectionSwitch.y)))), (_GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)) >> _GLF_IDENTITY(uint(2u), uint(2u)), uint(_GLF_ZERO(_GLF_IDENTITY(0.0, (0.0) - sin(0.0)), injectionSwitch.x)) ^ (_GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)) >> _GLF_IDENTITY(_GLF_IDENTITY(uint(2u), uint(2u)), uint(uint(_GLF_IDENTITY(uint(2u), uint(2u))))), _GLF_IDENTITY((_GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)) >> _GLF_IDENTITY(uint(2u), uint(2u)), (uint(_GLF_ZERO(0.0, injectionSwitch.x)) >> _GLF_IDENTITY(uint(2u), uint(2u))) | 0u)), ((_GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)) >> _GLF_IDENTITY(uint(2u), uint(2u)), (uint(_GLF_ZERO(0.0, injectionSwitch.x)) >> _GLF_IDENTITY(uint(2u), uint(2u))) | 0u))) | ((_GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)) >> _GLF_IDENTITY(uint(2u), uint(2u)), (uint(_GLF_ZERO(0.0, injectionSwitch.x)) >> _GLF_IDENTITY(uint(2u), uint(2u))) | 0u)))) ^ 0u))), clamp(uint(_GLF_ZERO(0.0, injectionSwitch.x)) >> _GLF_IDENTITY(uint(2u), uint(2u)), _GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)) >> _GLF_IDENTITY(uint(2u), uint(2u)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(workgroup_size) : uint(_GLF_ZERO(0.0, injectionSwitch.x)) >> _GLF_IDENTITY(uint(2u), uint(2u)))), uint(_GLF_ZERO(0.0, injectionSwitch.x)) >> _GLF_IDENTITY(uint(2u), uint(2u))))), (1u & 1u)))))), _GLF_IDENTITY((~ (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) * uint(_GLF_ONE(1.0, injectionSwitch.y))), uint(uvec4(subgroup_id * subgroup_size, _GLF_IDENTITY(uint(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(9.1) : injectionSwitch.y)))), max(uint(_GLF_ONE(1.0, injectionSwitch.y)), uint(_GLF_ONE(1.0, injectionSwitch.y)))), (_GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)) >> _GLF_IDENTITY(uint(2u), uint(2u)), uint(_GLF_ZERO(_GLF_IDENTITY(0.0, (0.0) - sin(0.0)), injectionSwitch.x)) ^ (_GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)) >> _GLF_IDENTITY(_GLF_IDENTITY(uint(2u), uint(2u)), uint(uint(_GLF_IDENTITY(uint(2u), uint(2u))))), _GLF_IDENTITY((_GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)) >> _GLF_IDENTITY(uint(2u), uint(2u)), (uint(_GLF_ZERO(0.0, injectionSwitch.x)) >> _GLF_IDENTITY(uint(2u), uint(2u))) | 0u)), ((_GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)) >> _GLF_IDENTITY(uint(2u), uint(2u)), (uint(_GLF_ZERO(0.0, injectionSwitch.x)) >> _GLF_IDENTITY(uint(2u), uint(2u))) | 0u))) | ((_GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)) >> _GLF_IDENTITY(uint(2u), uint(2u)), (uint(_GLF_ZERO(0.0, injectionSwitch.x)) >> _GLF_IDENTITY(uint(2u), uint(2u))) | 0u)))) ^ 0u))), clamp(uint(_GLF_ZERO(0.0, injectionSwitch.x)) >> _GLF_IDENTITY(uint(2u), uint(2u)), _GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)) >> _GLF_IDENTITY(uint(2u), uint(2u)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(workgroup_size) : uint(_GLF_ZERO(0.0, injectionSwitch.x)) >> _GLF_IDENTITY(uint(2u), uint(2u)))), uint(_GLF_ZERO(0.0, injectionSwitch.x)) >> _GLF_IDENTITY(uint(2u), uint(2u))))), (1u & 1u)))))), max((~ (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) * uint(_GLF_ONE(1.0, injectionSwitch.y))), uint(uvec4(subgroup_id * subgroup_size, _GLF_IDENTITY(uint(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(9.1) : injectionSwitch.y)))), max(uint(_GLF_ONE(1.0, injectionSwitch.y)), uint(_GLF_ONE(1.0, injectionSwitch.y)))), (_GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)) >> _GLF_IDENTITY(uint(2u), uint(2u)), uint(_GLF_ZERO(_GLF_IDENTITY(0.0, (0.0) - sin(0.0)), injectionSwitch.x)) ^ (_GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)) >> _GLF_IDENTITY(_GLF_IDENTITY(uint(2u), uint(2u)), uint(uint(_GLF_IDENTITY(uint(2u), uint(2u))))), _GLF_IDENTITY((_GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)) >> _GLF_IDENTITY(uint(2u), uint(2u)), (uint(_GLF_ZERO(0.0, injectionSwitch.x)) >> _GLF_IDENTITY(uint(2u), uint(2u))) | 0u)), ((_GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)) >> _GLF_IDENTITY(uint(2u), uint(2u)), (uint(_GLF_ZERO(0.0, injectionSwitch.x)) >> _GLF_IDENTITY(uint(2u), uint(2u))) | 0u))) | ((_GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)) >> _GLF_IDENTITY(uint(2u), uint(2u)), (uint(_GLF_ZERO(0.0, injectionSwitch.x)) >> _GLF_IDENTITY(uint(2u), uint(2u))) | 0u)))) ^ 0u))), clamp(uint(_GLF_ZERO(0.0, injectionSwitch.x)) >> _GLF_IDENTITY(uint(2u), uint(2u)), _GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)) >> _GLF_IDENTITY(uint(2u), uint(2u)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(workgroup_size) : uint(_GLF_ZERO(0.0, injectionSwitch.x)) >> _GLF_IDENTITY(uint(2u), uint(2u)))), uint(_GLF_ZERO(0.0, injectionSwitch.x)) >> _GLF_IDENTITY(uint(2u), uint(2u))))), (1u & 1u)))))), (~ (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) * uint(_GLF_ONE(1.0, injectionSwitch.y))), uint(uvec4(subgroup_id * subgroup_size, _GLF_IDENTITY(uint(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(9.1) : injectionSwitch.y)))), max(uint(_GLF_ONE(1.0, injectionSwitch.y)), uint(_GLF_ONE(1.0, injectionSwitch.y)))), (_GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)) >> _GLF_IDENTITY(uint(2u), uint(2u)), uint(_GLF_ZERO(_GLF_IDENTITY(0.0, (0.0) - sin(0.0)), injectionSwitch.x)) ^ (_GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)) >> _GLF_IDENTITY(_GLF_IDENTITY(uint(2u), uint(2u)), uint(uint(_GLF_IDENTITY(uint(2u), uint(2u))))), _GLF_IDENTITY((_GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)) >> _GLF_IDENTITY(uint(2u), uint(2u)), (uint(_GLF_ZERO(0.0, injectionSwitch.x)) >> _GLF_IDENTITY(uint(2u), uint(2u))) | 0u)), ((_GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)) >> _GLF_IDENTITY(uint(2u), uint(2u)), (uint(_GLF_ZERO(0.0, injectionSwitch.x)) >> _GLF_IDENTITY(uint(2u), uint(2u))) | 0u))) | ((_GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)) >> _GLF_IDENTITY(uint(2u), uint(2u)), (uint(_GLF_ZERO(0.0, injectionSwitch.x)) >> _GLF_IDENTITY(uint(2u), uint(2u))) | 0u)))) ^ 0u))), clamp(uint(_GLF_ZERO(0.0, injectionSwitch.x)) >> _GLF_IDENTITY(uint(2u), uint(2u)), _GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)) >> _GLF_IDENTITY(uint(2u), uint(2u)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(workgroup_size) : uint(_GLF_ZERO(0.0, injectionSwitch.x)) >> _GLF_IDENTITY(uint(2u), uint(2u)))), uint(_GLF_ZERO(0.0, injectionSwitch.x)) >> _GLF_IDENTITY(uint(2u), uint(2u))))), (1u & 1u))))))))))))) + subgroup_local_id, (true ? workgroup_base + _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, uint(uvec4(subgroup_id * subgroup_size, uint(_GLF_ONE(1.0, injectionSwitch.y)), (uint(_GLF_ZERO(0.0, injectionSwitch.x)) >> _GLF_IDENTITY(uint(2u), uint(2u))), (1u & 1u)))), clamp(_GLF_IDENTITY(subgroup_id * subgroup_size, _GLF_IDENTITY(uint(uvec4(subgroup_id * subgroup_size, uint(_GLF_ONE(1.0, injectionSwitch.y)), (uint(_GLF_ZERO(0.0, injectionSwitch.x)) >> _GLF_IDENTITY(uint(2u), uint(2u))), (1u & 1u))), (uint(uvec4(subgroup_id * subgroup_size, uint(_GLF_ONE(1.0, injectionSwitch.y)), (uint(_GLF_ZERO(0.0, injectionSwitch.x)) >> _GLF_IDENTITY(uint(2u), uint(2u))), (1u & 1u)))) << 0u)), _GLF_IDENTITY(subgroup_id * subgroup_size, uint(_GLF_IDENTITY(uvec4(subgroup_id * subgroup_size, uint(_GLF_ONE(1.0, injectionSwitch.y)), (uint(_GLF_ZERO(0.0, injectionSwitch.x)) >> _GLF_IDENTITY(uint(2u), _GLF_IDENTITY(uint(2u), 0u | (_GLF_IDENTITY(uint(2u), (uint(2u)) << 0u))))), (1u & 1u)), min(_GLF_IDENTITY(uvec4(subgroup_id * subgroup_size, uint(_GLF_ONE(1.0, injectionSwitch.y)), (uint(_GLF_ZERO(0.0, injectionSwitch.x)) >> _GLF_IDENTITY(uint(2u), uint(2u))), (1u & 1u)), max(uvec4(_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) | 0u), _GLF_IDENTITY(uint(_GLF_ONE(1.0, injectionSwitch.y)), max(uint(_GLF_ONE(1.0, injectionSwitch.y)), uint(_GLF_ONE(1.0, injectionSwitch.y)))), (uint(_GLF_ZERO(0.0, injectionSwitch.x)) >> _GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(2u, (false ? _GLF_FUZZED(workgroup_id) : _GLF_IDENTITY(2u, _GLF_IDENTITY(uint(uvec4(2u, 0u, 1u, 1u)), max(uint(uvec4(2u, 0u, 1u, 1u)), uint(uvec4(2u, 0u, 1u, 1u)))))))), uint(uvec4(uint(_GLF_IDENTITY(2u, (false ? _GLF_FUZZED(workgroup_id) : _GLF_IDENTITY(2u, _GLF_IDENTITY(uint(uvec4(2u, 0u, 1u, 1u)), max(uint(uvec4(2u, 0u, 1u, 1u)), uint(uvec4(2u, 0u, 1u, 1u)))))))), 1u, 1u, 0u))), uint(2u))), (1u & 1u)), _GLF_IDENTITY(uvec4(subgroup_id * subgroup_size, uint(_GLF_ONE(1.0, injectionSwitch.y)), (_GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)) >> _GLF_IDENTITY(uint(2u), uint(2u)), max(_GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), min(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)))) >> _GLF_IDENTITY(_GLF_IDENTITY(uint(2u), uint(2u)), (_GLF_IDENTITY(uint(2u), uint(2u))) ^ 0u), (true ? uint(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), clamp(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)))) >> _GLF_IDENTITY(uint(2u), uint(2u)) : _GLF_FUZZED(workgroup_size))), uint(_GLF_ZERO(0.0, injectionSwitch.x)) >> _GLF_IDENTITY(_GLF_IDENTITY(uint(2u), (uint(2u)) / 1u), uint(2u))))), (1u & 1u)), (uvec4(subgroup_id * subgroup_size, uint(_GLF_ONE(1.0, injectionSwitch.y)), (uint(_GLF_ZERO(0.0, injectionSwitch.x)) >> _GLF_IDENTITY(uint(2u), uint(2u))), (1u & 1u))) - uvec4(0u, 0u, 0u, _GLF_IDENTITY(0u, (0u) << 0u))))), uvec4(subgroup_id * subgroup_size, uint(_GLF_ONE(1.0, injectionSwitch.y)), (_GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)) >> _GLF_IDENTITY(uint(2u), uint(2u)), max(uint(_GLF_ZERO(0.0, injectionSwitch.x)) >> _GLF_IDENTITY(uint(2u), uint(2u)), uint(_GLF_ZERO(0.0, injectionSwitch.x)) >> _GLF_IDENTITY(uint(2u), uint(2u))))), (1u & 1u)))))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) ^ (0u >> _GLF_IDENTITY(uint(3u), uint(3u)))), _GLF_IDENTITY(uint(uvec4(subgroup_id * subgroup_size, uint(_GLF_ONE(1.0, injectionSwitch.y)), (uint(_GLF_ZERO(0.0, injectionSwitch.x)) >> _GLF_IDENTITY(uint(2u), uint(2u))), (1u & 1u))), (uint(uvec4(subgroup_id * subgroup_size, uint(_GLF_ONE(1.0, injectionSwitch.y)), (uint(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), (_GLF_ZERO(0.0, injectionSwitch.x)) + 0.0)) >> _GLF_IDENTITY(uint(2u), uint(2u))), (1u & 1u)))) ^ (82743u & 0u))), ~ (~ (_GLF_IDENTITY(subgroup_id * subgroup_size, uint(uvec4(subgroup_id * subgroup_size, _GLF_IDENTITY(uint(_GLF_ONE(1.0, injectionSwitch.y)), max(uint(_GLF_ONE(1.0, injectionSwitch.y)), uint(_GLF_ONE(1.0, injectionSwitch.y)))), (_GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)) >> _GLF_IDENTITY(uint(2u), uint(2u)), uint(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (_GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)) >> _GLF_IDENTITY(uint(2u), uint(2u)), (_GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)) >> _GLF_IDENTITY(uint(2u), uint(2u)), (uint(_GLF_ZERO(0.0, injectionSwitch.x)) >> _GLF_IDENTITY(_GLF_IDENTITY(uint(2u), uint(2u)), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(uint(2u), uint(2u))), (_GLF_IDENTITY(~ (_GLF_IDENTITY(uint(2u), uint(2u))), (false ? _GLF_FUZZED(num_workgroup) : ~ (_GLF_IDENTITY(uint(2u), uint(2u)))))) << 0u)))) | 0u)) ^ 0u))), clamp(uint(_GLF_ZERO(0.0, injectionSwitch.x)) >> _GLF_IDENTITY(uint(2u), uint(2u)), uint(_GLF_ZERO(0.0, injectionSwitch.x)) >> _GLF_IDENTITY(_GLF_IDENTITY(uint(2u), (uint(2u)) >> 0u), uint(2u)), uint(_GLF_ZERO(0.0, injectionSwitch.x)) >> _GLF_IDENTITY(uint(2u), uint(2u))))), (1u & 1u))))))))) + subgroup_local_id : _GLF_FUZZED(workgroup_id)))));
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], (injectionSwitch[1]) / 1.0))).x > injectionSwitch.y), false || ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, 0.0 + (injectionSwitch.y))))))))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     barrier();
    }
   return;
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) || false))), (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 uint next_virtual_gid = workgroup_base + _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, max(subgroup_id, subgroup_id)), (subgroup_id) | (_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (subgroup_id) | 0u), (true ? subgroup_id : _GLF_FUZZED(workgroup_base)))) >> 0u, (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (subgroup_id) | 0u), (true ? subgroup_id : _GLF_FUZZED(workgroup_base)))) >> 0u, clamp((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (subgroup_id) | 0u), (true ? subgroup_id : _GLF_FUZZED(workgroup_base)))) >> 0u, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (subgroup_id) | 0u), (true ? subgroup_id : _GLF_FUZZED(workgroup_base)))) >> 0u, min((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (subgroup_id) | 0u), (true ? subgroup_id : _GLF_FUZZED(workgroup_base)))) >> 0u, (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (subgroup_id) | 0u), (true ? subgroup_id : _GLF_FUZZED(workgroup_base)))) >> 0u)), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (subgroup_id) | 0u), (true ? subgroup_id : _GLF_FUZZED(workgroup_base)))) >> 0u, ((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (subgroup_id) | 0u), (true ? subgroup_id : _GLF_FUZZED(workgroup_base)))) >> 0u) - 0u)))) >> 0u)))) * subgroup_size + ((subgroup_local_id + 1) % _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, 0u | _GLF_IDENTITY((subgroup_size), ((subgroup_size)) >> 0u)), _GLF_IDENTITY(min(subgroup_size, subgroup_size), max(_GLF_IDENTITY(min(subgroup_size, subgroup_size), (min(_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, min(_GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size)), subgroup_size))) ^ 0u), subgroup_size)) >> 0u), min(subgroup_size, subgroup_size)))));
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint read_1 = atomicLoad(buf[virtual_gid], 4, 64, _GLF_IDENTITY(0, _GLF_IDENTITY((_GLF_IDENTITY(0, (0) >> 0)), ((0)) | ((0))) >> 0));
 if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false))))) || false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(bvec3(! _GLF_IDENTITY((false), ((false)) && true), false, true)))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-92.92)), bool(false)))) / _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), vec2(1.0, 0.0)))) > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)))))))))))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
       if(_GLF_DEAD(false))
        barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > injectionSwitch.y))))), bool(bvec3(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > injectionSwitch.y))), ! (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > injectionSwitch.y)))), true && (! (_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > injectionSwitch.y)))))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > injectionSwitch.y)))), true && (! (_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > injectionSwitch.y)))))), (_GLF_IDENTITY(! (_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y))))))), true && (! (_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (_GLF_IDENTITY(injectionSwitch.x, 1.0 * (injectionSwitch.x)) > injectionSwitch.y))))))) && true)))))), true, true))))
      return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false))))))
  return;
 if(_GLF_DEAD(false))
  return;
 atomicStore(buf[_GLF_IDENTITY(next_virtual_gid, _GLF_IDENTITY((next_virtual_gid) >> 0u, clamp((next_virtual_gid) >> 0u, (next_virtual_gid) >> 0u, _GLF_IDENTITY((next_virtual_gid) >> 0u, max(_GLF_IDENTITY((next_virtual_gid) >> 0u, ((next_virtual_gid) >> 0u) >> 0u), (next_virtual_gid) >> 0u)))))], uint(read_1 + 1), 4, 64, 4);
 if(_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, (false) || false)))))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))), ! (! (_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), bool(bool(false))))))))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
  barrier();
 uint read_2 = atomicLoad(buf[virtual_gid], 4, 64, 0);
 if(subgroup_local_id + 1 < subgroup_size)
  {
   if(_GLF_DEAD(false))
    return;
   int i = 0;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, bool(bvec2(false, false))))), (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         return;
        }
       return;
      }
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true), false || _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-9328.2085)), float(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), (injectionSwitch.x > injectionSwitch.y) || false))), (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(5.3)), float(injectionSwitch.x), bool(true))) > injectionSwitch.y))) && true)))), true && (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-9328.2085)), float(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), (injectionSwitch.x > injectionSwitch.y) || false))), (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(5.3)), float(injectionSwitch.x), bool(true))) > injectionSwitch.y))) && true)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, true)))) && true), _GLF_IDENTITY(! (! (_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-9328.2085)), float(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), (injectionSwitch.x > injectionSwitch.y) || false))), (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(5.3)), float(injectionSwitch.x), bool(true))) > injectionSwitch.y))) && true))), bool(bvec3(_GLF_IDENTITY(! (! (_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-9328.2085)), float(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), (injectionSwitch.x > injectionSwitch.y) || false))), (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(5.3)), float(injectionSwitch.x), bool(true))) > injectionSwitch.y))) && true))), (! (! (_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-9328.2085)), float(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), (injectionSwitch.x > injectionSwitch.y) || false))), (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(5.3)), float(injectionSwitch.x), bool(true))) > injectionSwitch.y))) && true)))) || false), false, false))))))))), false || ((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false), true)), true && (bool(bvec2(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false), true))))))), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-9328.2085)), float(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))), bool(_GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ((injectionSwitch.x < injectionSwitch.y)) || false))))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, 0.0 + (injectionSwitch.y))))) || false))), (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(5.3)), float(injectionSwitch.x), bool(true))) > injectionSwitch.y))) && true))))))))))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    return;
   atomicStore(buf[next_virtual_gid], uint(read_1 + 1 == read_2) + 1, _GLF_IDENTITY(4, (_GLF_IDENTITY(4, max(_GLF_IDENTITY(4, (4) | (4)), 4))) ^ (_GLF_IDENTITY(1 ^ int(_GLF_ONE(1.0, injectionSwitch.y)), clamp(1 ^ int(_GLF_ONE(1.0, injectionSwitch.y)), 1 ^ int(_GLF_ONE(1.0, injectionSwitch.y)), _GLF_IDENTITY(1 ^ int(_GLF_ONE(1.0, injectionSwitch.y)), ~ (~ (1 ^ int(_GLF_ONE(1.0, injectionSwitch.y))))))))), 64, 4);
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       return;
       if(_GLF_DEAD(false))
        return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     return;
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((false), bool(bvec2(_GLF_IDENTITY((false), false || ((false))), false)))))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
  }
 else
  {
   if(_GLF_DEAD(false))
    return;
   atomicStore(buf[next_virtual_gid], _GLF_IDENTITY(uint(read_1 + 1 == read_2) + 1, (uint(read_1 + 1 == read_2) + 1) | (uint(read_1 + _GLF_IDENTITY(1, 0 + (1)) == read_2) + _GLF_IDENTITY(1, (_GLF_IDENTITY(true, (true) && true) ? 1 : _GLF_FUZZED(64345))))), 4, 64, 4);
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || _GLF_IDENTITY(false, bool(bvec3(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), injectionSwitch, injectionSwitch)).x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec3(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false, true)))) && true))
      {
       if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       return;
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), false || (_GLF_IDENTITY(false, (false) || false)))))
        barrier();
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        return;
       barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) || false)) || false), false)))))
        return;
      }
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false)), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false)), false || (_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false)), false || (_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false)))))), _GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, bool(bvec2(false, true))), false, true))), true), bvec3(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false)), false || (_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false)), false || (_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false)))))), false, true), bvec3(bvec4(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false)), false || (_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false)), false || (_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false)))))), false, true), false))))))), false || (bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false)), false || (_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false)), false || (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false)))))), false, true), bvec3(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false)), false || (_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false)), false || (_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false)))))), false, true), bvec3(bvec4(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false)), false || (_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false)), false || (_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(false, (false) || false))))))), false, true), false)))))))))))), ! (_GLF_IDENTITY(! ((! (_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false)), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false)), false || (_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false)), false || (_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false)))))), _GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, bool(bvec2(false, true))), false, true))), true), bvec3(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false)), false || (_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false)), false || (_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false)))))), false, true), bvec3(bvec4(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false)), false || (_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false)), false || (_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false)))))), false, true), false))))))), false || (bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false)), false || (_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false)), false || (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false)))))), false, true), bvec3(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false)), false || (_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false)), false || (_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false)))))), false, true), bvec3(bvec4(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false)), false || (_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false)), false || (_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(false, (false) || false))))))), false, true), false))))))))))))), bool(bvec4(! ((! (_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false)), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false)), false || (_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false)), false || (_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false)))))), _GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, bool(bvec2(false, true))), false, true))), true), bvec3(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false)), false || (_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false)), false || (_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false)))))), false, true), bvec3(bvec4(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false)), false || (_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false)), false || (_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false)))))), false, true), false))))))), false || (bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false)), false || (_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false)), false || (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false)))))), false, true), bvec3(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false)), false || (_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false)), false || (_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false)))))), false, true), bvec3(bvec4(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false)), false || (_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false)), false || (_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(false, (false) || false))))))), false, true), false))))))))))))), true, false, false)))))), (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y))))))
        return;
       barrier();
      }
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(70.62)), vec2(_GLF_FUZZED((- -2975.4813)), (injectionSwitch)[1]), bvec2(false, true))).y))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && _GLF_IDENTITY(true, (_GLF_IDENTITY(true, bool(bool(true)))) || false))))
  {
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      return;
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         return;
        }
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true), (injectionSwitch.x > injectionSwitch.y) || false)))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     return;
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_DEAD(false), true)))))) && true))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-64.58)), float(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x))), float(_GLF_FUZZED(2.4)), bool(false)))), bool(true))), max(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-64.58)), float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(2.4)), bool(false))), mix(float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(2.4)), bool(false))), float(mat4x2(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(2.4)), bool(false))), 0.0, 0.0, 1.0, 1.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), vec2(1.0, 0.0))), 0.0, determinant(mat4(1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0)))))), float(_GLF_FUZZED(-9924.9303)), bool(false)))), bool(true))), _GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-64.58)), float(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(2.4)), bool(false)))), bool(true))))) > injectionSwitch.y))))
      return;
     if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false)))) || false))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
  }
}
