#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


struct _GLF_struct_27 {
 vec2 _f0;
 bool _f1;
 vec2 _f2;
 uvec2 _f3;
} ;

struct _GLF_struct_26 {
 uvec4 _f0;
 bool _f1;
 int _f2;
 bvec3 _f3;
} ;

struct _GLF_struct_25 {
 uvec4 _f0;
 bvec3 _f1;
 bvec4 _f2;
} ;

struct _GLF_struct_28 {
 int i;
 _GLF_struct_25 _f0;
 _GLF_struct_26 _f1;
 mat3 _f2;
 _GLF_struct_27 _f3;
} ;

struct _GLF_struct_29 {
 uvec2 _f0;
 vec2 _f1;
 _GLF_struct_28 _f2;
} ;

struct _GLF_struct_22 {
 uvec4 _f0;
 bvec4 _f1;
 uint _f2;
 mat4 _f3;
 bvec2 _f4;
 float _f5;
} ;

struct _GLF_struct_21 {
 int _f0;
 bvec3 _f1;
 mat4x2 _f2;
 mat4x2 _f3;
 mat4 _f4;
} ;

struct _GLF_struct_20 {
 uvec3 _f0;
 uvec2 _f1;
 mat3x4 _f2;
 mat2 _f3;
 mat3x4 _f4;
 mat2x3 _f5;
 ivec4 _f6;
} ;

struct _GLF_struct_19 {
 mat4x2 _f0;
 mat2x3 _f1;
 mat2 _f2;
 vec3 _f3;
 uint _f4;
} ;

struct _GLF_struct_23 {
 mat2 _f0;
 uint _f1;
 _GLF_struct_19 _f2;
 _GLF_struct_20 _f3;
 _GLF_struct_21 _f4;
 _GLF_struct_22 _f5;
 mat3x2 _f6;
} ;

struct _GLF_struct_17 {
 uvec4 _f0;
 vec2 _f1;
 uvec2 _f2;
 mat4x2 _f3;
} ;

struct _GLF_struct_16 {
 mat3 _f0;
 bvec4 _f1;
 uvec2 _f2;
} ;

struct _GLF_struct_15 {
 mat4x2 _f0;
} ;

struct _GLF_struct_14 {
 mat4 _f0;
} ;

struct _GLF_struct_18 {
 uvec4 _f0;
 _GLF_struct_14 _f1;
 _GLF_struct_15 _f2;
 _GLF_struct_16 _f3;
 _GLF_struct_17 _f4;
} ;

struct _GLF_struct_24 {
 _GLF_struct_18 _f0;
 uint subgroup_local_id;
 bvec2 _f1;
 vec2 _f2;
 _GLF_struct_23 _f3;
 mat4x2 _f4;
} ;

struct _GLF_struct_11 {
 mat2 _f0;
} ;

struct _GLF_struct_12 {
 mat4x3 _f0;
 _GLF_struct_11 _f1;
} ;

struct _GLF_struct_9 {
 mat2x4 _f0;
 mat4x2 _f1;
} ;

struct _GLF_struct_8 {
 bvec3 _f0;
 vec2 _f1;
 vec2 _f2;
 mat2x4 _f3;
 vec4 _f4;
} ;

struct _GLF_struct_7 {
 bvec2 _f0;
 float _f1;
 int _f2;
 mat3x4 _f3;
 uvec2 _f4;
 bvec2 _f5;
} ;

struct _GLF_struct_10 {
 bool _f0;
 _GLF_struct_7 _f1;
 _GLF_struct_8 _f2;
 _GLF_struct_9 _f3;
} ;

struct _GLF_struct_5 {
 mat3x2 _f0;
 uvec4 _f1;
 vec4 _f2;
 vec3 _f3;
 float _f4;
} ;

struct _GLF_struct_4 {
 uvec2 _f0;
 uvec3 _f1;
 ivec2 _f2;
 bvec3 _f3;
} ;

struct _GLF_struct_6 {
 uint _f0;
 mat2x3 _f1;
 bvec4 _f2;
 _GLF_struct_4 _f3;
 _GLF_struct_5 _f4;
} ;

struct _GLF_struct_2 {
 vec4 _f0;
 bool _f1;
 vec4 _f2;
} ;

struct _GLF_struct_3 {
 _GLF_struct_2 _f0;
 mat4 _f1;
 ivec4 _f2;
} ;

struct _GLF_struct_0 {
 vec3 _f0;
 ivec2 _f1;
 mat3x4 _f2;
 bvec4 _f3;
} ;

struct _GLF_struct_1 {
 bvec4 _f0;
 _GLF_struct_0 _f1;
 uint _f2;
 mat2x4 _f3;
} ;

struct _GLF_struct_13 {
 _GLF_struct_1 _f0;
 _GLF_struct_3 _f1;
 _GLF_struct_6 _f2;
 ivec4 _f3;
 _GLF_struct_10 _f4;
 uvec2 _f5;
 uint subgroup_id;
 _GLF_struct_12 _f6;
} ;

layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(max(injectionSwitch.y, injectionSwitch.y), _GLF_IDENTITY(float(mat3x4(max(injectionSwitch.y, injectionSwitch.y), _GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(0.0, 1.0, 1.0)), dot(vec3(1.0, 0.0, 0.0), vec3(0.0, _GLF_IDENTITY(1.0, max(1.0, _GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(5.6))))), 1.0))), 0.0, 1.0, determinant(mat2(0.0, 0.0, 0.0, 0.0)), 1.0, round(length(normalize(exp(vec3(0.0, 0.0, 0.0))))), 1.0, 0.0, 0.0, 0.0, 0.0)), float(mat4(float(mat3x4(max(injectionSwitch.y, injectionSwitch.y), _GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(0.0, 1.0, 1.0)), dot(vec3(1.0, 0.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0))), vec3(0.0, 1.0, 1.0))), 0.0, 1.0, determinant(mat2(0.0, 0.0, 0.0, 0.0)), 1.0, round(length(normalize(exp(vec3(0.0, 0.0, 0.0))))), 1.0, 0.0, 0.0, 0.0, 0.0)), 0.0, round(length(normalize(vec2(1.0, 1.0)))), 1.0, 1.0, 0.0, 0.0, abs(1.0), 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0)), dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0))))))))) / cos(0.0))))))
  {
  }
 else
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_WRAPPED_IF_TRUE(true))
      {
       do
        {
         if(_GLF_DEAD(false))
          return;
        }
       while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
       for(int _injected_loop_counter = int(_GLF_ONE(1.0, injectionSwitch.y)); _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
        {
         if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(false, false))), bool(bvec4(_GLF_IDENTITY(false, bool(bvec2(false, false))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true)))))
          {
           if(_GLF_DEAD(false))
            {
             if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
              {
               return;
              }
             else
              {
              }
            }
          }
         else
          {
           if(_GLF_WRAPPED_IF_FALSE(false))
            {
            }
           else
            {
             return;
            }
           if(_GLF_WRAPPED_IF_FALSE(false))
            {
            }
           else
            {
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              {
               if(_GLF_DEAD(false))
                return;
               return;
              }
            }
          }
        }
      }
     else
      {
       if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          {
           for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > int(_GLF_ZERO(0.0, injectionSwitch.x))); _injected_loop_counter --)
            {
             return;
            }
           for(int _injected_loop_counter = (0 | 0); _GLF_WRAPPED_LOOP(_injected_loop_counter != _GLF_IDENTITY(1, clamp(1, 1, 1))); _injected_loop_counter ++)
            {
             if(_GLF_DEAD(false))
              return;
            }
          }
        }
       else
        {
        }
       if(_GLF_DEAD(false))
        return;
      }
    }
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter > int(_GLF_ZERO(0.0, injectionSwitch.x)), (_injected_loop_counter > int(_GLF_ZERO(0.0, injectionSwitch.x))) || false)); _GLF_IDENTITY(_GLF_IDENTITY(_injected_loop_counter --, (_GLF_IDENTITY(_injected_loop_counter --, 0 + (_injected_loop_counter --))) | 0), (_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(-1368.9431))), mix(float(_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(true ? injectionSwitch.x : _GLF_FUZZED(-1368.9431), (false ? _GLF_FUZZED(9.6) : _GLF_IDENTITY(true ? injectionSwitch.x : _GLF_FUZZED(-1368.9431), clamp(true ? injectionSwitch.x : _GLF_FUZZED(-1368.9431), true ? injectionSwitch.x : _GLF_FUZZED(-1368.9431), true ? injectionSwitch.x : _GLF_FUZZED(-1368.9431)))))))), float(_GLF_FUZZED(9.5)), bool(false))) > injectionSwitch.y)), bool(bvec3(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(-1368.9431))), mix(float(_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(true ? injectionSwitch.x : _GLF_FUZZED(-1368.9431), (false ? _GLF_FUZZED(9.6) : _GLF_IDENTITY(true ? injectionSwitch.x : _GLF_FUZZED(-1368.9431), clamp(true ? injectionSwitch.x : _GLF_FUZZED(-1368.9431), true ? injectionSwitch.x : _GLF_FUZZED(-1368.9431), true ? injectionSwitch.x : _GLF_FUZZED(-1368.9431)))))))), float(_GLF_FUZZED(9.5)), bool(false))) > injectionSwitch.y)), bool(bool(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(-1368.9431))), mix(float(_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(true ? injectionSwitch.x : _GLF_FUZZED(-1368.9431), (false ? _GLF_FUZZED(9.6) : _GLF_IDENTITY(true ? injectionSwitch.x : _GLF_FUZZED(-1368.9431), clamp(true ? injectionSwitch.x : _GLF_FUZZED(-1368.9431), true ? injectionSwitch.x : _GLF_FUZZED(-1368.9431), true ? injectionSwitch.x : _GLF_FUZZED(-1368.9431)))))))), float(_GLF_FUZZED(9.5)), bool(false))) > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(-1368.9431))), mix(float(_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(true ? injectionSwitch.x : _GLF_FUZZED(-1368.9431), (false ? _GLF_FUZZED(9.6) : _GLF_IDENTITY(true ? injectionSwitch.x : _GLF_FUZZED(-1368.9431), clamp(true ? injectionSwitch.x : _GLF_FUZZED(-1368.9431), true ? injectionSwitch.x : _GLF_FUZZED(-1368.9431), true ? injectionSwitch.x : _GLF_FUZZED(-1368.9431)))))))), float(_GLF_FUZZED(9.5)), bool(false))) > injectionSwitch.y)))))))), true, true))) ? _GLF_FUZZED(-41709) : _injected_loop_counter --)))
    {
     for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
      {
       if(_GLF_DEAD(false))
        return;
      }
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, false || (false)))), _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))))))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        break;
       if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, true, false, true)))))
        break;
       break;
      }
     return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      return;
    }
   do
    {
     do
      {
       if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
        return;
      }
     while(_GLF_WRAPPED_LOOP(false));
    }
   while(_GLF_WRAPPED_LOOP(false));
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
      }
     else
      {
       if(_GLF_DEAD(false))
        {
         for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != _GLF_IDENTITY(0, (0) | (_GLF_IDENTITY(0, (0) | (0))))); _injected_loop_counter --)
          {
           return;
          }
        }
      }
     do
      {
       if(_GLF_WRAPPED_IF_FALSE(false))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((false), ! (! ((false))))))))
          break;
        }
       else
        {
         if(_GLF_DEAD(false))
          break;
         if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(true, bool(_GLF_IDENTITY(bvec2(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(bvec2(bvec4(bvec2(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false, false)), bvec2(bvec2(bvec2(bvec4(bvec2(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false, false)))))))) && (injectionSwitch.x > injectionSwitch.y))))))
          break;
         return;
         if(_GLF_DEAD(false))
          continue;
         if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
           if(_GLF_DEAD(false))
            break;
          }
         else
          {
           if(_GLF_DEAD(false))
            break;
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            {
             if(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! _GLF_IDENTITY((_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || ((_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))
              {
              }
             else
              {
               if(_GLF_WRAPPED_IF_TRUE(true))
                {
                 return;
                }
               else
                {
                }
              }
             if(_GLF_DEAD(false))
              continue;
            }
           if(_GLF_DEAD(false))
            break;
          }
         if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, true && (true))))
          {
           if(_GLF_IDENTITY(_GLF_DEAD(false), bool(_GLF_IDENTITY(bvec2(_GLF_DEAD(false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bvec2(bvec4(bvec2(_GLF_DEAD(false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), true, true))))))
            {
             if(_GLF_DEAD(false))
              break;
             return;
            }
           if(_GLF_DEAD(false))
            return;
          }
         else
          {
          }
        }
       if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
        continue;
      }
     while(_GLF_WRAPPED_LOOP(false));
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
    }
  }
 _GLF_struct_13 _GLF_struct_replacement_13 = _GLF_struct_13(_GLF_struct_1(bvec4(true), _GLF_struct_0(_GLF_IDENTITY(vec3(1.0), (_GLF_IDENTITY(vec3(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(false ? _GLF_FUZZED(_GLF_IDENTITY(sin(19.81), float(float(sin(19.81))))) : 1.0, (false ? _GLF_FUZZED(_GLF_IDENTITY(sin(19.81), float(float(sin(19.81))))) : 1.0) + 0.0)))), min(_GLF_IDENTITY(_GLF_IDENTITY(vec3(1.0), min(_GLF_IDENTITY(vec3(1.0), max(vec3(1.0), vec3(1.0))), vec3(1.0))), (true ? _GLF_IDENTITY(vec3(1.0), (_GLF_IDENTITY(vec3(1.0), vec3(mat2x3(vec3(1.0), 1.0, 0.0, 0.0)))) / vec3(1.0, 1.0, 1.0)) : _GLF_IDENTITY(_GLF_FUZZED(vec3(-8.8, 42.98, -97.01)), mix(vec3((_GLF_FUZZED(vec3(-8.8, 42.98, -97.01)))[0], (_GLF_FUZZED(vec3(-8.8, 42.98, -97.01)))[1], _GLF_IDENTITY(_GLF_IDENTITY((_GLF_FUZZED(vec3(-8.8, 42.98, -97.01))), clamp((_GLF_FUZZED(vec3(-8.8, 42.98, -97.01))), (_GLF_FUZZED(vec3(-8.8, 42.98, -97.01))), (_GLF_FUZZED(vec3(-8.8, 42.98, -97.01)))))[_GLF_IDENTITY(2, (_GLF_IDENTITY(2, int(int(2)))) | (2))], clamp(_GLF_IDENTITY((_GLF_FUZZED(vec3(-8.8, 42.98, -97.01))), clamp((_GLF_FUZZED(vec3(-8.8, 42.98, -97.01))), (_GLF_FUZZED(vec3(-8.8, 42.98, -97.01))), (_GLF_FUZZED(vec3(-8.8, 42.98, -97.01)))))[_GLF_IDENTITY(2, (_GLF_IDENTITY(2, int(int(2)))) | (2))], _GLF_IDENTITY((_GLF_FUZZED(vec3(-8.8, 42.98, -97.01))), clamp((_GLF_FUZZED(vec3(-8.8, 42.98, -97.01))), (_GLF_FUZZED(vec3(-8.8, 42.98, -97.01))), (_GLF_FUZZED(vec3(-8.8, 42.98, -97.01)))))[_GLF_IDENTITY(2, (_GLF_IDENTITY(2, int(int(2)))) | (2))], _GLF_IDENTITY(_GLF_IDENTITY((_GLF_FUZZED(vec3(-8.8, 42.98, -97.01))), clamp((_GLF_FUZZED(vec3(-8.8, 42.98, -97.01))), (_GLF_FUZZED(vec3(-8.8, 42.98, -97.01))), (_GLF_FUZZED(vec3(-8.8, 42.98, -97.01)))))[_GLF_IDENTITY(2, (_GLF_IDENTITY(2, int(int(2)))) | (2))], (_GLF_IDENTITY((_GLF_FUZZED(vec3(-8.8, 42.98, -97.01))), clamp((_GLF_FUZZED(vec3(-8.8, 42.98, -97.01))), (_GLF_FUZZED(vec3(-8.8, 42.98, -97.01))), (_GLF_FUZZED(vec3(-8.8, 42.98, -97.01)))))[_GLF_IDENTITY(2, (_GLF_IDENTITY(2, int(int(2)))) | (2))]) / 1.0)))), vec3(_GLF_FUZZED(338.896), _GLF_FUZZED((-5.8 / -504.618)), _GLF_FUZZED(-26.41)), bvec3(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))))), vec3(1.0)))) / vec3(1.0, 1.0, 1.0)), ivec2(1), mat3x4(1.0), bvec4(true)), _GLF_IDENTITY(1u, min(1u, _GLF_IDENTITY(1u, (1u) + 0u))), mat2x4(1.0)), _GLF_struct_3(_GLF_struct_2(vec4(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, float(mat4(1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, sqrt(0.0), 1.0)))) - log(1.0))), true, _GLF_IDENTITY(vec4(1.0), mix(_GLF_IDENTITY(vec4((vec4(1.0))[0], (_GLF_IDENTITY(vec4(1.0), min(_GLF_IDENTITY(vec4(1.0), _GLF_IDENTITY(vec4(mat4x3(vec4(1.0), _GLF_IDENTITY(1.0, min(1.0, 1.0)), 0.0, 0.0, _GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0)), dot(vec3(0.0, _GLF_IDENTITY(0.0, (0.0) + 0.0), 1.0), vec3(0.0, 0.0, 1.0))), 0.0, 1.0, 0.0, 0.0)), (vec4(mat4x3(vec4(1.0), 1.0, 0.0, 0.0, _GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0)), dot(vec3(0.0, _GLF_IDENTITY(0.0, (0.0) / abs(1.0)), 1.0), vec3(0.0, 0.0, 1.0))), 0.0, 1.0, 0.0, _GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, min(0.0, 0.0)), _GLF_IDENTITY(_GLF_IDENTITY(0.0, min(0.0, 0.0)), min(_GLF_IDENTITY(0.0, min(0.0, 0.0)), _GLF_IDENTITY(_GLF_IDENTITY(0.0, min(0.0, 0.0)), clamp(_GLF_IDENTITY(0.0, min(0.0, 0.0)), _GLF_IDENTITY(0.0, min(0.0, 0.0)), _GLF_IDENTITY(0.0, min(0.0, 0.0)))))), 0.0))))) - vec4(0.0, _GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-53.48)), float(0.0), bool(true))), 0.0, 0.0)), 0.0)), 0.0)), 0.0, 0.0))), vec4(1.0))))[1], _GLF_FUZZED((-323.990 / -2.8)), _GLF_FUZZED(-6316.9860)), (true ? vec4((vec4(1.0))[_GLF_IDENTITY(0, (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) && true)))), ! (! (_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, ! (! (false))), true, true)))))) ? _GLF_FUZZED(14581) : 0))], (_GLF_IDENTITY(vec4(1.0), min(_GLF_IDENTITY(_GLF_IDENTITY(vec4(1.0), clamp(_GLF_IDENTITY(_GLF_IDENTITY(vec4(1.0), (false ? _GLF_FUZZED(vec4(-4.4, 6.4, -5.7, 62.20)) : vec4(1.0))), min(_GLF_IDENTITY(vec4(1.0), (false ? _GLF_FUZZED(vec4(-4.4, 6.4, -5.7, 62.20)) : vec4(1.0))), _GLF_IDENTITY(vec4(1.0), (false ? _GLF_FUZZED(vec4(-4.4, 6.4, -5.7, 62.20)) : vec4(1.0))))), vec4(1.0), vec4(1.0))), _GLF_IDENTITY(vec4(mat4x3(vec4(1.0), _GLF_IDENTITY(1.0, min(1.0, 1.0)), 0.0, 0.0, _GLF_IDENTITY(dot(vec3(0.0, 0.0, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1.0, mix(float(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(-9.1)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), float(_GLF_FUZZED(vec3(4667.7412, -0.6, -8540.7157).y)), bool(false))), _GLF_IDENTITY(min(1.0, 1.0), (min(1.0, 1.0)) - 0.0)), (_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(7.9) : 1.0))) / 1.0)), vec3(0.0, 0.0, 1.0)), dot(_GLF_IDENTITY(vec3(0.0, 0.0, 1.0), min(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0))), vec3(0.0, _GLF_IDENTITY(0.0, (_GLF_IDENTITY(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(true, (true) && true)), bool(bvec4(! (_GLF_IDENTITY(true, (true) && true)), true, _GLF_IDENTITY(false, false || (false)), true))))) ? 0.0 : _GLF_FUZZED(0.4), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(-2.6) : _GLF_IDENTITY(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(true, (true) && true)), bool(bvec4(! (_GLF_IDENTITY(true, (true) && true)), true, _GLF_IDENTITY(false, false || (false)), true))))) ? 0.0 : _GLF_FUZZED(0.4), 1.0 * (_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(true, (true) && true)), bool(bvec4(! (_GLF_IDENTITY(true, (true) && true)), true, _GLF_IDENTITY(false, false || (false)), true))))) ? 0.0 : _GLF_FUZZED(0.4))))))), 1.0))), 0.0, 1.0, 0.0, 0.0)), _GLF_IDENTITY((vec4(mat4x3(vec4(1.0), 1.0, 0.0, 0.0, _GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(_GLF_IDENTITY(0.0, mix(float(_GLF_IDENTITY(0.0, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? 0.0 : _GLF_FUZZED(63.00)))), float(_GLF_FUZZED(-7.2)), bool(false))), 0.0, 1.0)), dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0))), 0.0, 1.0, 0.0, 0.0))) - vec4(0.0, 0.0, 0.0, 0.0), vec4(mat3((vec4(mat4x3(vec4(1.0), 1.0, 0.0, 0.0, _GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(_GLF_IDENTITY(0.0, mix(float(_GLF_IDENTITY(0.0, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? 0.0 : _GLF_FUZZED(63.00)))), float(_GLF_FUZZED(-7.2)), bool(false))), 0.0, 1.0)), dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0))), 0.0, 1.0, 0.0, 0.0))) - vec4(0.0, 0.0, 0.0, 0.0), 0.0, 0.0, 0.0, 1.0, 1.0))))), vec4(1.0))))[1], _GLF_FUZZED((_GLF_IDENTITY(-323.990 / -2.8, min(_GLF_IDENTITY(-323.990, _GLF_IDENTITY(float(_GLF_IDENTITY(mat4(-323.990, 1.0, 1.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0), transpose(_GLF_IDENTITY(transpose(mat4(-323.990, 1.0, 1.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0)), mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0) + (transpose(mat4(-323.990, 1.0, 1.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0))))))), _GLF_IDENTITY(float(vec4(float(_GLF_IDENTITY(mat4(-323.990, 1.0, 1.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0), transpose(_GLF_IDENTITY(transpose(mat4(-323.990, 1.0, 1.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0)), mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0) + (transpose(mat4(-323.990, 1.0, 1.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0))))))), 1.0, 1.0, 0.0)), (false ? _GLF_FUZZED(275.359) : float(vec4(float(_GLF_IDENTITY(mat4(-323.990, 1.0, 1.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0), transpose(_GLF_IDENTITY(transpose(mat4(-323.990, 1.0, 1.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0)), mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0) + (transpose(mat4(-323.990, 1.0, 1.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0))))))), 1.0, 1.0, 0.0)))))) / -2.8, _GLF_IDENTITY(-323.990 / -2.8, float(mat2(-323.990 / -2.8, 1.0, 1.0, 1.0))))))), _GLF_FUZZED(_GLF_IDENTITY(_GLF_IDENTITY(-6316.9860, mix(float(_GLF_FUZZED(-536.086)), float(_GLF_IDENTITY(-6316.9860, (-6316.9860) / 1.0)), bool(true))), _GLF_IDENTITY(float(mat4x3(_GLF_IDENTITY(-6316.9860, float(mat4x3(-6316.9860, 0.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 0.0, abs(1.0)), vec4(0.0, 0.0, 0.0, 1.0)), _GLF_IDENTITY(dot(vec4(0.0, 0.0, 0.0, abs(1.0)), vec4(0.0, 0.0, 0.0, 1.0)), float(mat4(dot(vec4(0.0, 0.0, 0.0, abs(1.0)), vec4(0.0, 0.0, 0.0, 1.0)), 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0)))), sin(0.0), 0.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 1.0, 1.0, tan(0.0), _GLF_ONE(1.0, injectionSwitch.y)))), 0.0, 1.0, 1.0, 1.0, determinant(mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0)), 1.0, _GLF_IDENTITY(1.0, min(1.0, 1.0)), abs(0.0), 1.0, 1.0, abs(1.0))), clamp(float(mat4x3(-6316.9860, 0.0, 1.0, 1.0, 1.0, determinant(mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0)), 1.0, 1.0, abs(0.0), 1.0, 1.0, abs(1.0))), float(mat4x3(-6316.9860, 0.0, 1.0, 1.0, 1.0, determinant(mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0)), 1.0, 1.0, abs(0.0), 1.0, 1.0, abs(1.0))), _GLF_IDENTITY(float(mat4x3(-6316.9860, 0.0, 1.0, 1.0, 1.0, determinant(mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0)), 1.0, 1.0, abs(0.0), 1.0, 1.0, abs(1.0))), (false ? _GLF_FUZZED(321.676) : float(mat4x3(-6316.9860, 0.0, 1.0, 1.0, 1.0, determinant(mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0)), 1.0, 1.0, abs(0.0), 1.0, 1.0, abs(1.0)))))))))) : _GLF_FUZZED(vec4(-307.572, -74.87, -52.80, -8673.6055)))), vec4(_GLF_FUZZED(181.204), _GLF_FUZZED(-9.1), (vec4(1.0))[2], _GLF_IDENTITY((vec4(1.0))[3], 1.0 * (_GLF_IDENTITY((vec4(1.0))[3], float(mat2x4((_GLF_IDENTITY(vec4(1.0), (vec4(1.0)) * mat4(1.0)))[3], 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0))), 1.0, 0.0)))))), bvec4(false, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_IDENTITY(_GLF_IDENTITY(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || _GLF_IDENTITY((true), ((true)) && true)), ! (! (_GLF_IDENTITY(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (true))))))))), mat4(1.0), ivec4(1)), _GLF_struct_6(1u, mat2x3(1.0), bvec4(true), _GLF_struct_4(_GLF_IDENTITY(uvec2(1u), ~ (_GLF_IDENTITY(~ (uvec2(1u)), (false ? _GLF_IDENTITY(_GLF_FUZZED(_GLF_IDENTITY(uvec2(26564u, 93424u), uvec2(0u, 0u) | (uvec2(26564u, 93424u)))), uvec2(0u, _GLF_IDENTITY(0u, ~ (~ _GLF_IDENTITY((_GLF_IDENTITY(0u, (0u) | 0u)), min((_GLF_IDENTITY(0u, (0u) | 0u)), _GLF_IDENTITY((_GLF_IDENTITY(0u, (0u) | 0u)), ~ (~ ((_GLF_IDENTITY(0u, (0u) | 0u)))))))))) ^ (_GLF_FUZZED(uvec2(26564u, 93424u)))) : _GLF_IDENTITY(~ (uvec2(1u)), (~ (uvec2(1u))) | (_GLF_IDENTITY(~ (uvec2(1u)), max(~ (uvec2(1u)), ~ (uvec2(1u)))))))))), _GLF_IDENTITY(_GLF_IDENTITY(uvec3(1u), (uvec3(1u)) >> _GLF_IDENTITY(uvec3(0u, 0u, 0u), (uvec3(0u, 0u, 0u)) ^ uvec3(0u, 0u, 0u))), ~ (~ (_GLF_IDENTITY(uvec3(1u), (uvec3(1u)) >> uvec3(0u, _GLF_IDENTITY(0u, uint(_GLF_IDENTITY(uvec2(0u, 0u), (uvec2(0u, 0u)) - uvec2(0u, 0u)))), 0u))))), ivec2(_GLF_IDENTITY(1, _GLF_IDENTITY(0 ^ (1), (0 ^ (1)) - 0))), bvec3(true)), _GLF_struct_5(mat3x2(1.0), _GLF_IDENTITY(uvec4(1u), clamp(_GLF_IDENTITY(_GLF_IDENTITY(uvec4(1u), (uvec4(1u)) | (uvec4(1u))), uvec4(1u, 1u, 1u, 1u) * (_GLF_IDENTITY(uvec4(_GLF_IDENTITY(1u, 0u + (1u))), (uvec4(1u)) | (uvec4(1u))))), uvec4(1u), uvec4(1u))), vec4(1.0), vec3(_GLF_IDENTITY(1.0, float(mat3x2(1.0, round(length(_GLF_IDENTITY(normalize(1.0), (false ? _GLF_FUZZED(float(51307)) : _GLF_IDENTITY(normalize(1.0), (false ? _GLF_FUZZED(-655.201) : normalize(1.0))))))), 1.0, 0.0, _GLF_IDENTITY(1.0, max(1.0, _GLF_IDENTITY(1.0, float(vec2(_GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0))))), _GLF_IDENTITY(0.0, float(mat3(_GLF_IDENTITY(0.0, (0.0) / 1.0), 1.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), vec2(1.0, 0.0))), sqrt(0.0), 1.0, 1.0))))))), 1.0)), _GLF_IDENTITY(ivec4(1), (ivec4(1)) | (ivec4(1))), _GLF_struct_10(true, _GLF_struct_7(bvec2(true), 1.0, 1, mat3x4(1.0), uvec2(1u), bvec2(true)), _GLF_struct_8(bvec3(true), vec2(1.0), vec2(1.0), mat2x4(1.0), vec4(1.0)), _GLF_struct_9(mat2x4(1.0), mat4x2(_GLF_IDENTITY(1.0, float(mat4x2(_GLF_IDENTITY(1.0, max(1.0, 1.0)), 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, _GLF_IDENTITY(0.0, (0.0) - 0.0))))))), uvec2(1u), gl_SubgroupID, _GLF_struct_12(mat4x3(1.0), _GLF_struct_11(_GLF_IDENTITY(mat2(1.0), (mat2(1.0)) + mat2(0.0, 0.0, 0.0, 0.0)))));
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
      {
       return;
      }
     else
      {
      }
    }
   else
    {
    }
  }
 do
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      continue;
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      return;
     continue;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    break;
  }
 while(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(false), (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(false), false || (_GLF_WRAPPED_LOOP(false)))) && _GLF_IDENTITY(true, true && (true))));
 if(_GLF_WRAPPED_IF_FALSE(false))
  {
  }
 else
  {
   if(_GLF_DEAD(false))
    {
     do
      {
       return;
      }
     while(_GLF_WRAPPED_LOOP(false));
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
    {
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
      }
     else
      {
       if(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec2(true, true)), bool(bvec2(bool(bvec2(true, true)), true))))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), (_GLF_WRAPPED_IF_TRUE(true)) || false), true && (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), bool(bvec4(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), (_GLF_WRAPPED_IF_TRUE(true)) && true), false, true, _GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec2(true, false)), bool(bvec4(bool(bvec2(true, false)), false, true, false))))))), (_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), (_GLF_WRAPPED_IF_TRUE(true)) || false)) || false)))) && true))
        {
         if(_GLF_DEAD(false))
          return;
         if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch.x : _GLF_FUZZED(asinh(-1093.5090)))) > injectionSwitch.y))), true && (_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y))))))))
          {
           if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true), true, true, true)), ! (! (bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true), true, true, true)))))))
            {
             for(int _injected_loop_counter = (0 ^ (0 & -11673)); _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _GLF_IDENTITY(_GLF_IDENTITY(_injected_loop_counter ++, (_injected_loop_counter ++) - 0), (0 >> _GLF_IDENTITY(int(1), _GLF_IDENTITY(int(1), (int(1)) | (int(1))))) | (_GLF_IDENTITY(_injected_loop_counter ++, _GLF_IDENTITY(~ (~ (_injected_loop_counter ++)), (~ (~ _GLF_IDENTITY((_injected_loop_counter ++), 0 ^ (_GLF_IDENTITY((_injected_loop_counter ++), (_GLF_IDENTITY((_injected_loop_counter ++), ((_injected_loop_counter ++)) << 0)) << 0))))) / 1)))))
              {
               return;
               if(_GLF_DEAD(false))
                continue;
              }
            }
           if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
            return;
           return;
           if(_GLF_DEAD(false))
            return;
           do
            {
             if(_GLF_WRAPPED_IF_TRUE(true))
              {
               if(_GLF_DEAD(false))
                {
                 for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
                  {
                   return;
                  }
                }
              }
             else
              {
              }
             if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, float(_GLF_IDENTITY(mat4(injectionSwitch.x, sqrt(0.0), 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, round(length(normalize(vec2(1.0, 1.0)))), 0.0, _GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0)), dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0))), 0.0, 0.0, cos(0.0), 1.0), (mat4(injectionSwitch.x, sqrt(0.0), 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, round(length(normalize(vec2(1.0, 1.0)))), 0.0, _GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0)), dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0))), 0.0, 0.0, cos(0.0), 1.0)) / mat4(1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0)))) > injectionSwitch.y))) && true)))
              return;
            }
           while(_GLF_WRAPPED_LOOP(false));
          }
         if(_GLF_DEAD(false))
          {
           if(_GLF_WRAPPED_IF_FALSE(false))
            {
            }
           else
            {
             if(_GLF_DEAD(false))
              return;
             return;
            }
          }
        }
       else
        {
        }
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      return;
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
      }
     else
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || false))
          {
           if(_GLF_WRAPPED_IF_FALSE(false))
            {
            }
           else
            {
             return;
            }
          }
         if(_GLF_DEAD(false))
          return;
         for(int _injected_loop_counter = (0 ^ 1); _GLF_WRAPPED_LOOP(_injected_loop_counter > (int(_GLF_ONE(1.0, injectionSwitch.y)) ^ (1 | 0))); _injected_loop_counter --)
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            {
             for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_GLF_IDENTITY(_injected_loop_counter, ~ (~ (_injected_loop_counter))) > 0, (_GLF_IDENTITY(_injected_loop_counter, ~ (_GLF_IDENTITY(~ (_injected_loop_counter), 0 ^ (~ (_injected_loop_counter))))) > 0) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))); _injected_loop_counter --)
              {
               return;
              }
            }
          }
         return;
        }
       if(_GLF_DEAD(false))
        return;
      }
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(false))
      return;
    }
  }
 if(_GLF_WRAPPED_IF_FALSE(false))
  {
  }
 else
  {
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, false || (true))))
  {
   do
    {
     if(_GLF_DEAD(false))
      return;
    }
   while(_GLF_WRAPPED_LOOP(false));
   if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))
    {
     if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, ! (! (false)))))
      {
      }
     else
      {
       return;
      }
    }
  }
 else
  {
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(mat4x3(injectionSwitch.y, 1.0, 1.0, 1.0, 1.0, length(vec3(0.0, 0.0, 0.0)), 1.0, 0.0, 0.0, 1.0, 1.0, 0.0)))))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       do
        {
         return;
        }
       while(_GLF_WRAPPED_LOOP(false));
      }
     return;
    }
   return;
  }
 _GLF_struct_24 _GLF_struct_replacement_24 = _GLF_struct_24(_GLF_struct_18(uvec4(_GLF_IDENTITY(1u, ~ (~ (1u)))), _GLF_struct_14(_GLF_IDENTITY(_GLF_IDENTITY(mat4(_GLF_IDENTITY(1.0, min(1.0, 1.0))), (_GLF_IDENTITY(mat4(1.0), (mat4(1.0)) + mat4(0.0, _GLF_IDENTITY(0.0, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? 0.0 : _GLF_FUZZED((+ -2.2)))), 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))) * mat4(_GLF_IDENTITY(1.0, _GLF_IDENTITY((true ? 1.0 : _GLF_FUZZED(-7.4)), _GLF_IDENTITY(float(vec2((true ? 1.0 : _GLF_FUZZED(-7.4)), 0.0)), clamp(float(vec2((true ? 1.0 : _GLF_FUZZED(-7.4)), 0.0)), float(vec2((true ? 1.0 : _GLF_FUZZED(-7.4)), 0.0)), float(vec2((true ? 1.0 : _GLF_FUZZED(-7.4)), 0.0)))))))), mat4(1.0) * (_GLF_IDENTITY(mat4(_GLF_IDENTITY(_GLF_IDENTITY(1.0, min(1.0, 1.0)), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(1.0, max(1.0, _GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(5.4))))), min(1.0, 1.0))) / 1.0, (false ? _GLF_FUZZED(-0.2) : (_GLF_IDENTITY(_GLF_IDENTITY(1.0, max(1.0, _GLF_IDENTITY(_GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(5.4))), max(_GLF_IDENTITY(_GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(5.4))), float(mat3(_GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(5.4))), 1.0, 1.0, 0.0, 0.0, cos(0.0), 0.0, 0.0, 1.0))), _GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(5.4))))))), min(1.0, 1.0))) / 1.0)))), (_GLF_IDENTITY(mat4(1.0), _GLF_IDENTITY((mat4(1.0)), mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0) + (_GLF_IDENTITY((mat4(1.0)), transpose(transpose((mat4(1.0))))))) + mat4(_GLF_IDENTITY(0.0, (0.0) / _GLF_IDENTITY(dot(vec3(0.0, 0.0, exp(0.0)), vec3(0.0, 0.0, 1.0)), dot(vec3(0.0, 0.0, exp(_GLF_IDENTITY(0.0, max(0.0, 0.0)))), _GLF_IDENTITY(vec3(0.0, 0.0, 1.0), clamp(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0)))))), _GLF_IDENTITY(0.0, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? 0.0 : _GLF_FUZZED((+ _GLF_IDENTITY(-2.2, min(-2.2, -2.2)))))), 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))) * mat4(_GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(_GLF_IDENTITY(-7.4, min(-7.4, -7.4)))))))))), _GLF_struct_15(mat4x2(_GLF_IDENTITY(1.0, min(1.0, _GLF_IDENTITY(_GLF_IDENTITY(1.0, max(1.0, 1.0)), (_GLF_IDENTITY(1.0, (1.0) - 0.0)) - 0.0))))), _GLF_struct_16(mat3(_GLF_IDENTITY(1.0, _GLF_IDENTITY(float(mat3x2(1.0, 1.0, tan(0.0), 0.0, 0.0, determinant(mat4(0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, length(vec2(0.0, 0.0)), 0.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0)), dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0))), 1.0, 0.0)))), (true ? _GLF_IDENTITY(float(mat3x2(1.0, 1.0, tan(0.0), 0.0, 0.0, determinant(mat4(0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, length(vec2(0.0, 0.0)), 0.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0)), dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0))), 1.0, 0.0)))), clamp(float(mat3x2(1.0, 1.0, tan(0.0), 0.0, 0.0, determinant(mat4(0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, length(vec2(0.0, 0.0)), 0.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0)), dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0))), 1.0, 0.0)))), float(mat3x2(1.0, 1.0, tan(0.0), 0.0, 0.0, determinant(mat4(0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, length(vec2(0.0, 0.0)), 0.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0)), dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0))), 1.0, 0.0)))), float(mat3x2(1.0, 1.0, tan(0.0), 0.0, 0.0, determinant(mat4(0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, length(vec2(0.0, 0.0)), 0.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0)), dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0))), 1.0, 0.0)))))) : _GLF_FUZZED(-88.18))))), bvec4(_GLF_IDENTITY(true, false || (true))), uvec2(1u)), _GLF_struct_17(_GLF_IDENTITY(uvec4(_GLF_IDENTITY(1u, ~ (_GLF_IDENTITY(~ (1u), 1u * (~ (1u)))))), ~ (~ (_GLF_IDENTITY(uvec4(_GLF_IDENTITY(1u, ~ (_GLF_IDENTITY(~ (1u), 1u * (~ (1u)))))), uvec4(0u, 0u, 0u, 0u) ^ (uvec4(_GLF_IDENTITY(1u, ~ (_GLF_IDENTITY(~ (1u), 1u * (~ (1u))))))))))), _GLF_IDENTITY(_GLF_IDENTITY(vec2(_GLF_IDENTITY(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(true, (true) || false) ? 1.0 : _GLF_FUZZED(_GLF_IDENTITY(-2.1, (_GLF_IDENTITY(-2.1, (-2.1) * 1.0)) / 1.0)))), (false ? _GLF_FUZZED(radians(-2054.5317)) : _GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(_GLF_IDENTITY(-2.1, min(-2.1, -2.1)))))))), clamp(_GLF_IDENTITY(vec2(_GLF_IDENTITY(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(true, (true) || false) ? 1.0 : _GLF_FUZZED(_GLF_IDENTITY(-2.1, (_GLF_IDENTITY(-2.1, (-2.1) * 1.0)) / 1.0)))), (false ? _GLF_FUZZED(radians(-2054.5317)) : _GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(_GLF_IDENTITY(-2.1, min(-2.1, -2.1)))))))), (vec2(_GLF_IDENTITY(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(true, (true) || false) ? 1.0 : _GLF_FUZZED(_GLF_IDENTITY(-2.1, (_GLF_IDENTITY(-2.1, (-2.1) * 1.0)) / 1.0)))), (false ? _GLF_FUZZED(radians(-2054.5317)) : _GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(_GLF_IDENTITY(-2.1, min(-2.1, -2.1))))))))) * vec2(1.0, 1.0)), vec2(_GLF_IDENTITY(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(true, (true) || false) ? 1.0 : _GLF_FUZZED(_GLF_IDENTITY(-2.1, (_GLF_IDENTITY(-2.1, (-2.1) * 1.0)) / 1.0)))), (false ? _GLF_FUZZED(radians(-2054.5317)) : _GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(_GLF_IDENTITY(-2.1, min(-2.1, -2.1)))))))), vec2(_GLF_IDENTITY(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(true, (true) || false) ? 1.0 : _GLF_FUZZED(_GLF_IDENTITY(-2.1, (_GLF_IDENTITY(-2.1, (-2.1) * 1.0)) / 1.0)))), (false ? _GLF_FUZZED(radians(-2054.5317)) : _GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(_GLF_IDENTITY(-2.1, min(-2.1, -2.1)))))))))), min(vec2(_GLF_IDENTITY(1.0, (true ? _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-5.6)), float(_GLF_IDENTITY(1.0, _GLF_IDENTITY((false ? _GLF_IDENTITY(_GLF_FUZZED(-1737.6797), (_GLF_FUZZED(-1737.6797)) / exp(0.0)) : 1.0), max((false ? _GLF_FUZZED(-1737.6797) : 1.0), (false ? _GLF_FUZZED(-1737.6797) : 1.0))))), bool(true))) : _GLF_FUZZED(-2.1)))), vec2(_GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(-2.1)))))), uvec2(1u), mat4x2(1.0))), gl_SubgroupInvocationID, bvec2(true), vec2(1.0), _GLF_struct_23(mat2(1.0), 1u, _GLF_struct_19(mat4x2(1.0), mat2x3(1.0), mat2(1.0), vec3(1.0), 1u), _GLF_struct_20(_GLF_IDENTITY(_GLF_IDENTITY(uvec3(1u), (_GLF_IDENTITY(uvec3(1u), (_GLF_IDENTITY(uvec3(_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, (false ? _GLF_FUZZED(subgroup_size) : 1u))) | (_GLF_IDENTITY(1u, min(_GLF_IDENTITY(1u, ~ (~ (1u))), 1u))))), max(uvec3(1u), uvec3(1u)))) >> uvec3(0u, 0u, 0u))) / uvec3(1u, 1u, 1u)), (_GLF_IDENTITY(uvec3(1u), (_GLF_IDENTITY(uvec3(1u), _GLF_IDENTITY((_GLF_IDENTITY(uvec3(1u), max(uvec3(1u), uvec3(1u)))) >> uvec3(0u, 0u, 0u), ((_GLF_IDENTITY(uvec3(1u), max(uvec3(1u), uvec3(1u)))) >> uvec3(0u, 0u, 0u)) * uvec3(1u, 1u, 1u)))) / uvec3(1u, 1u, 1u))) >> (uvec3(_GLF_IDENTITY(0u, uint(uvec4(0u, 1u, 0u, 0u))), 0u, 0u) ^ uvec3(0u, 0u, 0u))), _GLF_IDENTITY(uvec2(1u), (_GLF_IDENTITY(uvec2(1u), _GLF_IDENTITY(uvec2(uvec2(uvec2(1u))), uvec2(0u, 0u) ^ (uvec2(uvec2(uvec2(1u))))))) / (uvec2(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y)) & uvec2(1u, 1u))), mat3x4(1.0), mat2(1.0), mat3x4(1.0), mat2x3(1.0), ivec4(1)), _GLF_struct_21(1, bvec3(true), mat4x2(1.0), mat4x2(_GLF_IDENTITY(1.0, (1.0) / 1.0)), mat4(1.0)), _GLF_struct_22(uvec4(1u), bvec4(true), _GLF_IDENTITY(1u, clamp(_GLF_IDENTITY(1u, ~ (~ (1u))), 1u, _GLF_IDENTITY(1u, 0u + (1u)))), mat4(_GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(_GLF_IDENTITY(_GLF_IDENTITY(5.2, (5.2) - abs(0.0)), float(_GLF_IDENTITY(float(5.2), clamp(float(5.2), _GLF_IDENTITY(float(5.2), min(float(5.2), float(5.2))), _GLF_IDENTITY(float(5.2), (float(5.2)) * 1.0))))))))), bvec2(true), 1.0), mat3x2(1.0)), mat4x2(1.0));
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))))
  {
   do
    {
     return;
    }
   while(_GLF_WRAPPED_LOOP(false));
  }
 if(_GLF_DEAD(false))
  return;
 uint num_workgroup = gl_NumWorkGroups.x;
 if(_GLF_WRAPPED_IF_FALSE(false))
  {
  }
 else
  {
   if(_GLF_DEAD(false))
    return;
  }
 uint workgroup_size = gl_WorkGroupSize.x;
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(true, true && (true)) && ((injectionSwitch.x > injectionSwitch.y)))) && _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), vec2(injectionSwitch[0], injectionSwitch[1])).y, clamp(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y))))))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
    }
   else
    {
     if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
      {
       return;
      }
     else
      {
      }
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
    }
   else
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
          {
           if(_GLF_DEAD(false))
            return;
          }
         return;
        }
       return;
      }
    }
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)))))
    return;
  }
 if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, (_GLF_IDENTITY(true, ! (! (true)))) && true)))
  {
   if(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), bool(bvec4(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), _GLF_IDENTITY((_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(true, true, false), bvec3(bvec3(bvec3(true, true, false))))), ! (! (bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(true, true, false), bvec3(bvec4(bvec3(true, true, false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), bvec3(bvec3(bvec3(true, true, false))))))))))), _GLF_IDENTITY(_GLF_IDENTITY(true, true && (true)), false || (true)) && ((_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(true, true, false), bvec3(bvec3(bvec3(true, true, false))))), ! (! (bool(_GLF_IDENTITY(bvec3(true, true, false), bvec3(bvec3(bvec3(true, true, false))))))))))))) && true), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, true))))
    {
     if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) && true), (injectionSwitch.x > injectionSwitch.y))), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-15.95)), float(injectionSwitch.y), bool(true)))))), ! (! (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true))))), true, true), bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(false, (false) || false) || ((injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(false, false || (false)) || (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec3((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y), true, false)))))))))), true, true), bvec3(bvec3(bvec3(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bool(injectionSwitch.x > injectionSwitch.y))))), (_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bool(injectionSwitch.x > injectionSwitch.y))))), ! (! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bool(injectionSwitch.x > injectionSwitch.y))))))))) || false), false || (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bool(injectionSwitch.x > injectionSwitch.y)))))))), _GLF_IDENTITY(_GLF_IDENTITY(! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), (_GLF_IDENTITY(! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0)) - 0.0), clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(-6.3))), injectionSwitch.y))))))), ! (! (! (! (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), true && (_GLF_IDENTITY(! (false), (! (false)) && true))))), (injectionSwitch.x > injectionSwitch.y))) || _GLF_IDENTITY(false, (false) || false))))))))) && true), (_GLF_IDENTITY(! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), _GLF_IDENTITY((_GLF_IDENTITY(! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED((+ vec2(-34.51, 9.6).y)), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(7013.9359)), bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))).y, (injectionSwitch.y) * 1.0)) - 0.0), clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(-6.3))), injectionSwitch.y))))))), ! (! (! (! (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(false, false))), ! (! (false))), (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), true && (_GLF_IDENTITY(! (false), (! (false)) && true))))), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (injectionSwitch.x > injectionSwitch.y))) || false)))) || _GLF_IDENTITY(false, (false) || false))))))))), ((_GLF_IDENTITY(! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED((+ vec2(-34.51, 9.6).y)), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(7013.9359)), bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))).y, (injectionSwitch.y) * 1.0)) - 0.0), clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(-6.3))), injectionSwitch.y))))))), ! (! (! (! (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(false, false))), ! (! (false))), (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), true && (_GLF_IDENTITY(! (false), (! (false)) && true))))), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (injectionSwitch.x > injectionSwitch.y))) || false)))) || _GLF_IDENTITY(false, (false) || false)))))))))) && true) && true)) || false)), true, true)))), false))))), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(6.1)), float(injectionSwitch.x), bool(true))) > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch), max((injectionSwitch), (injectionSwitch))) * exp(vec2(0.0, 0.0))).y, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch), max((injectionSwitch), (injectionSwitch))) * exp(vec2(0.0, 0.0)), _GLF_IDENTITY(vec2(_GLF_IDENTITY(mat4x3(_GLF_IDENTITY((injectionSwitch), max((injectionSwitch), (injectionSwitch))) * exp(vec2(0.0, 0.0)), 0.0, determinant(mat2(1.0, 0.0, 1.0, 1.0)), 0.0, sin(0.0), 1.0, 0.0, 0.0, 0.0, 0.0, abs(0.0)), mat4x3(mat4(mat4x3(_GLF_IDENTITY((injectionSwitch), max((injectionSwitch), (injectionSwitch))) * exp(vec2(0.0, 0.0)), 0.0, determinant(mat2(1.0, 0.0, 1.0, 1.0)), 0.0, sin(0.0), 1.0, 0.0, 0.0, 0.0, 0.0, abs(0.0)))))), max(vec2(_GLF_IDENTITY(mat4x3(_GLF_IDENTITY((injectionSwitch), max((injectionSwitch), (injectionSwitch))) * exp(vec2(0.0, 0.0)), 0.0, determinant(mat2(1.0, 0.0, 1.0, 1.0)), 0.0, sin(0.0), 1.0, 0.0, 0.0, 0.0, 0.0, abs(0.0)), mat4x3(mat4(mat4x3(_GLF_IDENTITY((injectionSwitch), max((injectionSwitch), (injectionSwitch))) * exp(vec2(0.0, 0.0)), 0.0, determinant(mat2(1.0, 0.0, 1.0, 1.0)), 0.0, sin(0.0), 1.0, 0.0, 0.0, 0.0, 0.0, abs(0.0)))))), _GLF_IDENTITY(vec2(_GLF_IDENTITY(mat4x3(_GLF_IDENTITY((injectionSwitch), max((injectionSwitch), (injectionSwitch))) * exp(vec2(0.0, 0.0)), 0.0, determinant(mat2(1.0, 0.0, 1.0, 1.0)), 0.0, sin(0.0), 1.0, 0.0, 0.0, 0.0, 0.0, abs(0.0)), mat4x3(mat4(mat4x3(_GLF_IDENTITY((injectionSwitch), max((injectionSwitch), (injectionSwitch))) * exp(vec2(0.0, 0.0)), 0.0, determinant(mat2(1.0, 0.0, 1.0, 1.0)), 0.0, sin(0.0), 1.0, 0.0, 0.0, 0.0, 0.0, abs(0.0)))))), (vec2(_GLF_IDENTITY(mat4x3(_GLF_IDENTITY((injectionSwitch), max((injectionSwitch), (injectionSwitch))) * exp(vec2(0.0, 0.0)), 0.0, determinant(mat2(1.0, 0.0, 1.0, 1.0)), 0.0, sin(0.0), 1.0, 0.0, 0.0, 0.0, 0.0, abs(0.0)), mat4x3(mat4(mat4x3(_GLF_IDENTITY((injectionSwitch), max((injectionSwitch), (injectionSwitch))) * exp(vec2(0.0, 0.0)), 0.0, determinant(mat2(1.0, 0.0, 1.0, 1.0)), 0.0, sin(0.0), 1.0, 0.0, 0.0, 0.0, 0.0, abs(0.0))))))) + vec2(0.0, 0.0)))))).y) - log(1.0))))), (_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bvec3(bvec4(bvec3(false, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), true))))), (injectionSwitch.x > injectionSwitch.y)))) && true), false, true, false)), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(6.1)), float(injectionSwitch.x), bool(true))) > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch), max((injectionSwitch), (injectionSwitch))) * exp(vec2(0.0, 0.0))).y, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch), max((injectionSwitch), (injectionSwitch))) * exp(vec2(0.0, 0.0)), _GLF_IDENTITY(vec2(_GLF_IDENTITY(mat4x3(_GLF_IDENTITY((injectionSwitch), max((injectionSwitch), (injectionSwitch))) * exp(vec2(0.0, 0.0)), 0.0, determinant(mat2(1.0, 0.0, 1.0, 1.0)), 0.0, sin(0.0), 1.0, 0.0, 0.0, 0.0, 0.0, abs(0.0)), mat4x3(mat4(mat4x3(_GLF_IDENTITY((injectionSwitch), max((injectionSwitch), (injectionSwitch))) * exp(vec2(0.0, 0.0)), 0.0, determinant(mat2(1.0, 0.0, 1.0, 1.0)), 0.0, sin(0.0), 1.0, 0.0, 0.0, 0.0, 0.0, abs(0.0)))))), max(vec2(_GLF_IDENTITY(mat4x3(_GLF_IDENTITY((injectionSwitch), max((injectionSwitch), (injectionSwitch))) * exp(vec2(0.0, 0.0)), 0.0, determinant(mat2(1.0, 0.0, 1.0, 1.0)), 0.0, sin(0.0), 1.0, 0.0, 0.0, 0.0, 0.0, abs(0.0)), mat4x3(mat4(mat4x3(_GLF_IDENTITY((injectionSwitch), max((injectionSwitch), (injectionSwitch))) * exp(vec2(0.0, 0.0)), 0.0, determinant(mat2(1.0, 0.0, 1.0, 1.0)), 0.0, sin(0.0), 1.0, 0.0, 0.0, 0.0, 0.0, abs(0.0)))))), _GLF_IDENTITY(vec2(_GLF_IDENTITY(mat4x3(_GLF_IDENTITY((injectionSwitch), max((injectionSwitch), (injectionSwitch))) * exp(vec2(0.0, 0.0)), 0.0, determinant(mat2(1.0, 0.0, 1.0, 1.0)), 0.0, sin(0.0), 1.0, 0.0, 0.0, 0.0, 0.0, abs(0.0)), mat4x3(mat4(mat4x3(_GLF_IDENTITY((injectionSwitch), max((injectionSwitch), (injectionSwitch))) * exp(vec2(0.0, 0.0)), 0.0, determinant(mat2(1.0, 0.0, 1.0, 1.0)), 0.0, sin(0.0), 1.0, 0.0, 0.0, 0.0, 0.0, abs(0.0)))))), (vec2(_GLF_IDENTITY(mat4x3(_GLF_IDENTITY((injectionSwitch), max((injectionSwitch), (injectionSwitch))) * exp(vec2(0.0, 0.0)), 0.0, determinant(mat2(1.0, 0.0, 1.0, 1.0)), 0.0, sin(0.0), 1.0, 0.0, 0.0, 0.0, 0.0, abs(0.0)), mat4x3(mat4(mat4x3(_GLF_IDENTITY((injectionSwitch), max((injectionSwitch), (injectionSwitch))) * exp(vec2(0.0, 0.0)), 0.0, determinant(mat2(1.0, 0.0, 1.0, 1.0)), 0.0, sin(0.0), 1.0, 0.0, 0.0, 0.0, 0.0, abs(0.0))))))) + vec2(0.0, 0.0)))))).y) - log(1.0))))), (_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bvec3(bvec4(bvec3(false, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), true))))), (injectionSwitch.x > injectionSwitch.y)))) && true), false, true, false)), true, true), bvec3(bvec4(_GLF_IDENTITY(bvec3(bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(6.1)), float(injectionSwitch.x), bool(true))) > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch), max((injectionSwitch), (injectionSwitch))) * exp(vec2(0.0, 0.0))).y, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch), max((injectionSwitch), (injectionSwitch))) * exp(vec2(0.0, 0.0)), _GLF_IDENTITY(vec2(_GLF_IDENTITY(mat4x3(_GLF_IDENTITY((injectionSwitch), max((injectionSwitch), (injectionSwitch))) * exp(vec2(0.0, 0.0)), 0.0, determinant(mat2(1.0, 0.0, 1.0, 1.0)), 0.0, sin(0.0), 1.0, 0.0, 0.0, 0.0, 0.0, abs(0.0)), mat4x3(mat4(mat4x3(_GLF_IDENTITY((injectionSwitch), max((injectionSwitch), (injectionSwitch))) * exp(vec2(0.0, 0.0)), 0.0, determinant(mat2(1.0, 0.0, 1.0, 1.0)), 0.0, sin(0.0), 1.0, 0.0, 0.0, 0.0, 0.0, abs(0.0)))))), max(vec2(_GLF_IDENTITY(mat4x3(_GLF_IDENTITY((injectionSwitch), max((injectionSwitch), (injectionSwitch))) * exp(vec2(0.0, 0.0)), 0.0, determinant(mat2(1.0, 0.0, 1.0, 1.0)), 0.0, sin(0.0), 1.0, 0.0, 0.0, 0.0, 0.0, abs(0.0)), mat4x3(mat4(mat4x3(_GLF_IDENTITY((injectionSwitch), max((injectionSwitch), (injectionSwitch))) * exp(vec2(0.0, 0.0)), 0.0, determinant(mat2(1.0, 0.0, 1.0, 1.0)), 0.0, sin(0.0), 1.0, 0.0, 0.0, 0.0, 0.0, abs(0.0)))))), _GLF_IDENTITY(vec2(_GLF_IDENTITY(mat4x3(_GLF_IDENTITY((injectionSwitch), max((injectionSwitch), (injectionSwitch))) * exp(vec2(0.0, 0.0)), 0.0, determinant(mat2(1.0, 0.0, 1.0, 1.0)), 0.0, sin(0.0), 1.0, 0.0, 0.0, 0.0, 0.0, abs(0.0)), mat4x3(mat4(mat4x3(_GLF_IDENTITY((injectionSwitch), max((injectionSwitch), (injectionSwitch))) * exp(vec2(0.0, 0.0)), 0.0, determinant(mat2(1.0, 0.0, 1.0, 1.0)), 0.0, sin(0.0), 1.0, 0.0, 0.0, 0.0, 0.0, abs(0.0)))))), (vec2(_GLF_IDENTITY(mat4x3(_GLF_IDENTITY((injectionSwitch), max((injectionSwitch), (injectionSwitch))) * exp(vec2(0.0, 0.0)), 0.0, determinant(mat2(1.0, 0.0, 1.0, 1.0)), 0.0, sin(0.0), 1.0, 0.0, 0.0, 0.0, 0.0, abs(0.0)), mat4x3(mat4(mat4x3(_GLF_IDENTITY((injectionSwitch), max((injectionSwitch), (injectionSwitch))) * exp(vec2(0.0, 0.0)), 0.0, determinant(mat2(1.0, 0.0, 1.0, 1.0)), 0.0, sin(0.0), 1.0, 0.0, 0.0, 0.0, 0.0, abs(0.0))))))) + vec2(0.0, 0.0)))))).y) - log(1.0))))), (_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bvec3(bvec4(bvec3(false, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), true))))), (injectionSwitch.x > injectionSwitch.y)))) && true), false, true, false)), true, true), bvec3(bvec3(bvec3(bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(6.1)), float(injectionSwitch.x), bool(true))) > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch), max((injectionSwitch), (injectionSwitch))) * exp(vec2(0.0, 0.0))).y, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch), max((injectionSwitch), (injectionSwitch))) * exp(vec2(0.0, 0.0)), _GLF_IDENTITY(vec2(_GLF_IDENTITY(mat4x3(_GLF_IDENTITY((injectionSwitch), max((injectionSwitch), (injectionSwitch))) * exp(vec2(0.0, 0.0)), 0.0, determinant(mat2(1.0, 0.0, 1.0, 1.0)), 0.0, sin(0.0), 1.0, 0.0, 0.0, 0.0, 0.0, abs(0.0)), mat4x3(mat4(mat4x3(_GLF_IDENTITY((injectionSwitch), max((injectionSwitch), (injectionSwitch))) * exp(vec2(0.0, 0.0)), 0.0, determinant(mat2(1.0, 0.0, 1.0, 1.0)), 0.0, sin(0.0), 1.0, 0.0, 0.0, 0.0, 0.0, abs(0.0)))))), max(vec2(_GLF_IDENTITY(mat4x3(_GLF_IDENTITY((injectionSwitch), max((injectionSwitch), (injectionSwitch))) * exp(vec2(0.0, 0.0)), 0.0, determinant(mat2(1.0, 0.0, 1.0, 1.0)), 0.0, sin(0.0), 1.0, 0.0, 0.0, 0.0, 0.0, abs(0.0)), mat4x3(mat4(mat4x3(_GLF_IDENTITY((injectionSwitch), max((injectionSwitch), (injectionSwitch))) * exp(vec2(0.0, 0.0)), 0.0, determinant(mat2(1.0, 0.0, 1.0, 1.0)), 0.0, sin(0.0), 1.0, 0.0, 0.0, 0.0, 0.0, abs(0.0)))))), _GLF_IDENTITY(vec2(_GLF_IDENTITY(mat4x3(_GLF_IDENTITY((injectionSwitch), max((injectionSwitch), (injectionSwitch))) * exp(vec2(0.0, 0.0)), 0.0, determinant(mat2(1.0, 0.0, 1.0, 1.0)), 0.0, sin(0.0), 1.0, 0.0, 0.0, 0.0, 0.0, abs(0.0)), mat4x3(mat4(mat4x3(_GLF_IDENTITY((injectionSwitch), max((injectionSwitch), (injectionSwitch))) * exp(vec2(0.0, 0.0)), 0.0, determinant(mat2(1.0, 0.0, 1.0, 1.0)), 0.0, sin(0.0), 1.0, 0.0, 0.0, 0.0, 0.0, abs(0.0)))))), (vec2(_GLF_IDENTITY(mat4x3(_GLF_IDENTITY((injectionSwitch), max((injectionSwitch), (injectionSwitch))) * exp(vec2(0.0, 0.0)), 0.0, determinant(mat2(1.0, 0.0, 1.0, 1.0)), 0.0, sin(0.0), 1.0, 0.0, 0.0, 0.0, 0.0, abs(0.0)), mat4x3(mat4(mat4x3(_GLF_IDENTITY((injectionSwitch), max((injectionSwitch), (injectionSwitch))) * exp(vec2(0.0, 0.0)), 0.0, determinant(mat2(1.0, 0.0, 1.0, 1.0)), 0.0, sin(0.0), 1.0, 0.0, 0.0, 0.0, 0.0, abs(0.0))))))) + vec2(0.0, 0.0)))))).y) - log(1.0))))), (_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bvec3(bvec4(bvec3(false, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), true))))), (injectionSwitch.x > injectionSwitch.y)))) && true), false, true, false)), true, true)))), false)))), true && (bool(_GLF_IDENTITY(bvec3(bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(6.1)), float(injectionSwitch.x), bool(true))) > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch), max((injectionSwitch), (injectionSwitch))) * exp(vec2(0.0, 0.0))).y, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch), max((injectionSwitch), (injectionSwitch))) * exp(vec2(0.0, 0.0)), _GLF_IDENTITY(vec2(_GLF_IDENTITY(mat4x3(_GLF_IDENTITY((injectionSwitch), max((injectionSwitch), (injectionSwitch))) * exp(vec2(0.0, 0.0)), 0.0, determinant(mat2(1.0, 0.0, 1.0, 1.0)), 0.0, sin(0.0), 1.0, 0.0, 0.0, 0.0, 0.0, abs(0.0)), mat4x3(mat4(mat4x3(_GLF_IDENTITY((injectionSwitch), max((injectionSwitch), (injectionSwitch))) * exp(vec2(0.0, 0.0)), 0.0, determinant(mat2(1.0, 0.0, 1.0, 1.0)), 0.0, sin(0.0), 1.0, 0.0, 0.0, 0.0, 0.0, abs(0.0)))))), max(vec2(_GLF_IDENTITY(mat4x3(_GLF_IDENTITY((injectionSwitch), max((injectionSwitch), (injectionSwitch))) * exp(vec2(0.0, 0.0)), 0.0, determinant(mat2(1.0, 0.0, 1.0, 1.0)), 0.0, sin(0.0), 1.0, 0.0, 0.0, 0.0, 0.0, abs(0.0)), mat4x3(mat4(mat4x3(_GLF_IDENTITY((injectionSwitch), max((injectionSwitch), (injectionSwitch))) * exp(vec2(0.0, 0.0)), 0.0, determinant(mat2(1.0, 0.0, 1.0, 1.0)), 0.0, sin(0.0), 1.0, 0.0, 0.0, 0.0, 0.0, abs(0.0)))))), _GLF_IDENTITY(vec2(_GLF_IDENTITY(mat4x3(_GLF_IDENTITY((injectionSwitch), max((injectionSwitch), (injectionSwitch))) * exp(vec2(0.0, 0.0)), 0.0, determinant(mat2(1.0, 0.0, 1.0, 1.0)), 0.0, sin(0.0), 1.0, 0.0, 0.0, 0.0, 0.0, abs(0.0)), mat4x3(mat4(mat4x3(_GLF_IDENTITY((injectionSwitch), max((injectionSwitch), (injectionSwitch))) * exp(vec2(0.0, 0.0)), 0.0, determinant(mat2(1.0, 0.0, 1.0, 1.0)), 0.0, sin(0.0), 1.0, 0.0, 0.0, 0.0, 0.0, abs(0.0)))))), (vec2(_GLF_IDENTITY(mat4x3(_GLF_IDENTITY((injectionSwitch), max((injectionSwitch), (injectionSwitch))) * exp(vec2(0.0, 0.0)), 0.0, determinant(mat2(1.0, 0.0, 1.0, 1.0)), 0.0, sin(0.0), 1.0, 0.0, 0.0, 0.0, 0.0, abs(0.0)), mat4x3(mat4(mat4x3(_GLF_IDENTITY((injectionSwitch), max((injectionSwitch), (injectionSwitch))) * exp(vec2(0.0, 0.0)), 0.0, determinant(mat2(1.0, 0.0, 1.0, 1.0)), 0.0, sin(0.0), 1.0, 0.0, 0.0, 0.0, 0.0, abs(0.0))))))) + vec2(0.0, 0.0)))))).y) - log(1.0))))), (_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bvec3(bvec4(bvec3(false, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), true))))), (injectionSwitch.x > injectionSwitch.y)))) && true), false, true, false)), true, true), bvec3(bvec4(_GLF_IDENTITY(bvec3(bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(6.1)), float(injectionSwitch.x), bool(true))) > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch), max((injectionSwitch), (injectionSwitch))) * exp(vec2(0.0, 0.0))).y, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch), max((injectionSwitch), (injectionSwitch))) * exp(vec2(0.0, 0.0)), _GLF_IDENTITY(vec2(_GLF_IDENTITY(mat4x3(_GLF_IDENTITY((injectionSwitch), max((injectionSwitch), (injectionSwitch))) * exp(vec2(0.0, 0.0)), 0.0, determinant(mat2(1.0, 0.0, 1.0, 1.0)), 0.0, sin(0.0), 1.0, 0.0, 0.0, 0.0, 0.0, abs(0.0)), mat4x3(mat4(mat4x3(_GLF_IDENTITY((injectionSwitch), max((injectionSwitch), (injectionSwitch))) * exp(vec2(0.0, 0.0)), 0.0, determinant(mat2(1.0, 0.0, 1.0, 1.0)), 0.0, sin(0.0), 1.0, 0.0, 0.0, 0.0, 0.0, abs(0.0)))))), max(vec2(_GLF_IDENTITY(mat4x3(_GLF_IDENTITY((injectionSwitch), max((injectionSwitch), (injectionSwitch))) * exp(vec2(0.0, 0.0)), 0.0, determinant(mat2(1.0, 0.0, 1.0, 1.0)), 0.0, sin(0.0), 1.0, 0.0, 0.0, 0.0, 0.0, abs(0.0)), mat4x3(mat4(mat4x3(_GLF_IDENTITY((injectionSwitch), max((injectionSwitch), (injectionSwitch))) * exp(vec2(0.0, 0.0)), 0.0, determinant(mat2(1.0, 0.0, 1.0, 1.0)), 0.0, sin(0.0), 1.0, 0.0, 0.0, 0.0, 0.0, abs(0.0)))))), _GLF_IDENTITY(vec2(_GLF_IDENTITY(mat4x3(_GLF_IDENTITY((injectionSwitch), max((injectionSwitch), (injectionSwitch))) * exp(vec2(0.0, 0.0)), 0.0, determinant(mat2(1.0, 0.0, 1.0, 1.0)), 0.0, sin(0.0), 1.0, 0.0, 0.0, 0.0, 0.0, abs(0.0)), mat4x3(mat4(mat4x3(_GLF_IDENTITY((injectionSwitch), max((injectionSwitch), (injectionSwitch))) * exp(vec2(0.0, 0.0)), 0.0, determinant(mat2(1.0, 0.0, 1.0, 1.0)), 0.0, sin(0.0), 1.0, 0.0, 0.0, 0.0, 0.0, abs(0.0)))))), (vec2(_GLF_IDENTITY(mat4x3(_GLF_IDENTITY((injectionSwitch), max((injectionSwitch), (injectionSwitch))) * exp(vec2(0.0, 0.0)), 0.0, determinant(mat2(1.0, 0.0, 1.0, 1.0)), 0.0, sin(0.0), 1.0, 0.0, 0.0, 0.0, 0.0, abs(0.0)), mat4x3(mat4(mat4x3(_GLF_IDENTITY((injectionSwitch), max((injectionSwitch), (injectionSwitch))) * exp(vec2(0.0, 0.0)), 0.0, determinant(mat2(1.0, 0.0, 1.0, 1.0)), 0.0, sin(0.0), 1.0, 0.0, 0.0, 0.0, 0.0, abs(0.0))))))) + vec2(0.0, 0.0)))))).y) - log(1.0))))), (_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bvec3(bvec4(bvec3(false, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), true))))), (injectionSwitch.x > injectionSwitch.y)))) && true), false, true, false)), true, true), bvec3(bvec3(bvec3(bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(6.1)), float(injectionSwitch.x), bool(true))) > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch), max((injectionSwitch), (injectionSwitch))) * exp(vec2(0.0, 0.0))).y, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch), max((injectionSwitch), (injectionSwitch))) * exp(vec2(0.0, 0.0)), _GLF_IDENTITY(vec2(_GLF_IDENTITY(mat4x3(_GLF_IDENTITY((injectionSwitch), max((injectionSwitch), (injectionSwitch))) * exp(vec2(0.0, 0.0)), 0.0, determinant(mat2(1.0, 0.0, 1.0, 1.0)), 0.0, sin(0.0), 1.0, 0.0, 0.0, 0.0, 0.0, abs(0.0)), mat4x3(mat4(mat4x3(_GLF_IDENTITY((injectionSwitch), max((injectionSwitch), (injectionSwitch))) * exp(vec2(0.0, 0.0)), 0.0, determinant(mat2(1.0, 0.0, 1.0, 1.0)), 0.0, sin(0.0), 1.0, 0.0, 0.0, 0.0, 0.0, abs(0.0)))))), max(vec2(_GLF_IDENTITY(mat4x3(_GLF_IDENTITY((injectionSwitch), max((injectionSwitch), (injectionSwitch))) * exp(vec2(0.0, 0.0)), 0.0, determinant(mat2(1.0, 0.0, 1.0, 1.0)), 0.0, sin(0.0), 1.0, 0.0, 0.0, 0.0, 0.0, abs(0.0)), mat4x3(mat4(mat4x3(_GLF_IDENTITY((injectionSwitch), max((injectionSwitch), (injectionSwitch))) * exp(vec2(0.0, 0.0)), 0.0, determinant(mat2(1.0, 0.0, 1.0, 1.0)), 0.0, sin(0.0), 1.0, 0.0, 0.0, 0.0, 0.0, abs(0.0)))))), _GLF_IDENTITY(vec2(_GLF_IDENTITY(mat4x3(_GLF_IDENTITY((injectionSwitch), max((injectionSwitch), (injectionSwitch))) * exp(vec2(0.0, 0.0)), 0.0, determinant(mat2(1.0, 0.0, 1.0, 1.0)), 0.0, sin(0.0), 1.0, 0.0, 0.0, 0.0, 0.0, abs(0.0)), mat4x3(mat4(mat4x3(_GLF_IDENTITY((injectionSwitch), max((injectionSwitch), (injectionSwitch))) * exp(vec2(0.0, 0.0)), 0.0, determinant(mat2(1.0, 0.0, 1.0, 1.0)), 0.0, sin(0.0), 1.0, 0.0, 0.0, 0.0, 0.0, abs(0.0)))))), (vec2(_GLF_IDENTITY(mat4x3(_GLF_IDENTITY((injectionSwitch), max((injectionSwitch), (injectionSwitch))) * exp(vec2(0.0, 0.0)), 0.0, determinant(mat2(1.0, 0.0, 1.0, 1.0)), 0.0, sin(0.0), 1.0, 0.0, 0.0, 0.0, 0.0, abs(0.0)), mat4x3(mat4(mat4x3(_GLF_IDENTITY((injectionSwitch), max((injectionSwitch), (injectionSwitch))) * exp(vec2(0.0, 0.0)), 0.0, determinant(mat2(1.0, 0.0, 1.0, 1.0)), 0.0, sin(0.0), 1.0, 0.0, 0.0, 0.0, 0.0, abs(0.0))))))) + vec2(0.0, 0.0)))))).y) - log(1.0))))), (_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bvec3(bvec4(bvec3(false, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), true))))), (injectionSwitch.x > injectionSwitch.y)))) && true), false, true, false)), true, true)))), false)))))))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_WRAPPED_IF_TRUE(true))
          {
           return;
          }
         else
          {
          }
        }
       if(_GLF_DEAD(false))
        return;
       return;
      }
    }
   else
    {
    }
  }
 else
  {
  }
 for(int _injected_loop_counter = (0 ^ 0); _GLF_WRAPPED_LOOP(_injected_loop_counter < int(_GLF_ONE(1.0, injectionSwitch.y))); _injected_loop_counter ++)
  {
   do
    {
     if(_GLF_DEAD(false))
      break;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
        return;
       for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
        {
         for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
          {
           do
            {
             return;
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              continue;
            }
           while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0), _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)))), ! (! _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true)) && true))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))), (! (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * abs(1.0)), ! (! (injectionSwitch.x > injectionSwitch.y))))) || false)))), _GLF_IDENTITY(((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)).x > injectionSwitch.y), bool(bvec4(_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)), mix(vec2(_GLF_FUZZED(38.02), (_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)))[1]), vec2((_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)))[0], _GLF_FUZZED(-4.8)), bvec2(true, false))).x > injectionSwitch.y), _GLF_IDENTITY(false, bool(bool(false))) || (! (_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)).x > injectionSwitch.y))), false, false, true))))))), ! (! (((_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y, ! (! (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)).x, (_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)).x) * 1.0) > injectionSwitch.y)))))))) && true))));
          }
        }
      }
    }
   while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - tan(length(0.0))))) > _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(mat2(_GLF_ONE(1.0, injectionSwitch.y)), (mat2(_GLF_ONE(1.0, injectionSwitch.y))) - mat2(0.0, 0.0, 0.0, 0.0)) * (injectionSwitch), (mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch)) - _GLF_IDENTITY(vec2(_GLF_IDENTITY(0.0, float(mat4x2(_GLF_IDENTITY(0.0, min(0.0, 0.0)), _GLF_IDENTITY(dot(vec3(1.0, 0.0, 1.0), vec3(0.0, 1.0, 0.0)), _GLF_IDENTITY(dot(vec3(1.0, 0.0, 1.0), vec3(0.0, 1.0, 0.0)), max(dot(vec3(1.0, 0.0, 1.0), vec3(0.0, 1.0, 0.0)), dot(vec3(1.0, 0.0, 1.0), vec3(0.0, 1.0, 0.0))))), 0.0, 0.0, 1.0, 0.0, 1.0, 1.0))), 0.0), mix(vec2(_GLF_FUZZED(-7542.5950), (vec2(_GLF_IDENTITY(0.0, float(mat4x2(_GLF_IDENTITY(0.0, min(0.0, 0.0)), _GLF_IDENTITY(dot(vec3(1.0, 0.0, 1.0), vec3(0.0, 1.0, 0.0)), _GLF_IDENTITY(dot(vec3(1.0, 0.0, 1.0), vec3(0.0, 1.0, 0.0)), max(dot(vec3(1.0, 0.0, 1.0), vec3(0.0, 1.0, 0.0)), dot(vec3(1.0, 0.0, 1.0), vec3(0.0, 1.0, 0.0))))), 0.0, 0.0, 1.0, 0.0, 1.0, 1.0))), 0.0))[1]), vec2((vec2(_GLF_IDENTITY(0.0, float(mat4x2(_GLF_IDENTITY(0.0, min(0.0, 0.0)), _GLF_IDENTITY(dot(vec3(1.0, 0.0, 1.0), vec3(0.0, 1.0, 0.0)), _GLF_IDENTITY(dot(vec3(1.0, 0.0, 1.0), vec3(0.0, 1.0, 0.0)), max(dot(vec3(1.0, 0.0, 1.0), vec3(0.0, 1.0, 0.0)), dot(vec3(1.0, 0.0, 1.0), vec3(0.0, 1.0, 0.0))))), 0.0, 0.0, 1.0, 0.0, 1.0, 1.0))), 0.0))[0], _GLF_FUZZED(5.7)), bvec2(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))[0], injectionSwitch[1])).y))))
  {
   if(_GLF_DEAD(false))
    return;
   for(int _injected_loop_counter = (_GLF_IDENTITY(_GLF_IDENTITY(0, int(ivec2(0, 0))) >> _GLF_IDENTITY(int(0), int(0)), (_GLF_IDENTITY(_GLF_IDENTITY(0, int(ivec2(0, 0))) >> _GLF_IDENTITY(int(0), int(0)), (_GLF_IDENTITY(0, int(ivec2(0, 0))) >> _GLF_IDENTITY(int(0), int(0))) << 0)) | (_GLF_IDENTITY(0, int(ivec2(0, 0))) >> _GLF_IDENTITY(int(0), int(0))))); _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
    {
     if(_GLF_DEAD(false))
      break;
     if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
      {
       for(int _injected_loop_counter = (-76311 & 0); _GLF_WRAPPED_LOOP(_injected_loop_counter < ((1 << _GLF_IDENTITY(int(2), int(2))) >> _GLF_IDENTITY(int(2), int(2)))); _injected_loop_counter ++)
        {
         return;
        }
      }
     else
      {
      }
    }
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, bool(bool(false)))))), _GLF_IDENTITY(bool(bvec4(_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, bool(bool(false)))))), true, true, true)), ! (! (bool(bvec4(_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, bool(bool(false)))))), true, true, true)))))))
    return;
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
    }
   else
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, float(vec3(injectionSwitch.x, sqrt(1.0), 0.0))) > injectionSwitch.y))))
      return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
  return;
 uint workgroup_id = gl_WorkGroupID.x;
 if(_GLF_DEAD(false))
  {
   for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
    {
     return;
    }
  }
 if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
  }
 else
  {
   do
    {
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && (_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(bool(bvec2((injectionSwitch.x > injectionSwitch.y), true)), bool(bool(bool(bvec2((injectionSwitch.x > injectionSwitch.y), true)))))))), _GLF_IDENTITY(bool(bvec3((injectionSwitch.x > injectionSwitch.y), true, true)), ! _GLF_IDENTITY((! _GLF_IDENTITY((bool(bvec3((injectionSwitch.x > injectionSwitch.y), true, true))), ! (! ((bool(bvec3((injectionSwitch.x > injectionSwitch.y), true, true))))))), ! (! (_GLF_IDENTITY((! _GLF_IDENTITY((bool(bvec3((injectionSwitch.x > injectionSwitch.y), true, true))), ! (! ((bool(bvec3((injectionSwitch.x > injectionSwitch.y), true, true))))))), ! (! ((! _GLF_IDENTITY((bool(bvec3((injectionSwitch.x > injectionSwitch.y), true, true))), ! (! ((bool(bvec3((injectionSwitch.x > injectionSwitch.y), true, true))))))))))))))))))))
      {
       do
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (false))))))))
          {
           do
            {
             return;
            }
           while(_GLF_WRAPPED_LOOP(false));
          }
         return;
         if(_GLF_WRAPPED_IF_TRUE(true))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            return;
          }
         else
          {
          }
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY((injectionSwitch)[0], ((injectionSwitch)[0]) + length(vec2(0.0, 0.0))), _GLF_FUZZED(-9.2)), vec2(_GLF_FUZZED(-9.3), _GLF_IDENTITY((injectionSwitch), min((injectionSwitch), (injectionSwitch)))[1]), bvec2(false, true))).y))))
          {
           if(_GLF_DEAD(false))
            return;
           for(int _injected_loop_counter = int(_GLF_ZERO(0.0, injectionSwitch.x)); _GLF_WRAPPED_LOOP(_injected_loop_counter != int(_GLF_ONE(1.0, injectionSwitch.y))); _injected_loop_counter ++)
            {
             if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false)), (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false))) && true))))))
              return;
            }
           break;
          }
        }
       while(_GLF_WRAPPED_LOOP(false));
       if(_GLF_WRAPPED_IF_FALSE(false))
        {
        }
       else
        {
         if(_GLF_DEAD(false))
          return;
        }
      }
    }
   while(_GLF_WRAPPED_LOOP(false));
   if(_GLF_DEAD(false))
    {
     for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
      {
       return;
      }
    }
  }
 if(_GLF_WRAPPED_IF_TRUE(true))
  {
   do
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        break;
       break;
      }
     do
      {
       for(int _injected_loop_counter = (0 >> _GLF_IDENTITY(int(6), int(6))); _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
        {
         if(_GLF_DEAD(false))
          return;
         if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
          {
           if(_GLF_DEAD(false))
            return;
          }
         else
          {
          }
        }
      }
     while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, bool(bvec3(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)))));
     if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))
      continue;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      continue;
    }
   while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
  }
 else
  {
  }
 uint workgroup_base = _GLF_IDENTITY(_GLF_IDENTITY(workgroup_size, (true ? workgroup_size : _GLF_FUZZED(workgroup_id))) * workgroup_id, (workgroup_size * workgroup_id) * 1u);
 if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ! (! ((injectionSwitch.x < injectionSwitch.y)))))))
  {
   if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, bool(bool(false)))))
    {
    }
   else
    {
     if(_GLF_DEAD(false))
      {
       for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < (1 & 1)); _injected_loop_counter ++)
        {
         if(_GLF_DEAD(false))
          return;
         do
          {
           if(_GLF_DEAD(false))
            return;
          }
         while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
        }
       if(_GLF_DEAD(false))
        return;
       do
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          continue;
         return;
        }
       while(_GLF_WRAPPED_LOOP(false));
       do
        {
         for(int _injected_loop_counter = int(_GLF_ZERO(0.0, injectionSwitch.x)); _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
          {
           if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, ! (! (true)))))
            {
             if(_GLF_DEAD(false))
              return;
            }
           else
            {
            }
          }
        }
       while(_GLF_WRAPPED_LOOP(false));
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         return;
        }
      }
    }
  }
 else
  {
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
  {
   if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
    }
   else
    {
     return;
    }
  }
 uint virtual_gid = workgroup_base + _GLF_IDENTITY(_GLF_IDENTITY(_GLF_struct_replacement_13.subgroup_id, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(atomicCompSwap(num_workgroup, workgroup_size, workgroup_base)) : _GLF_struct_replacement_13.subgroup_id)) * subgroup_size, ~ (~ (_GLF_IDENTITY(_GLF_struct_replacement_13.subgroup_id * subgroup_size, 0u + (_GLF_IDENTITY(_GLF_struct_replacement_13.subgroup_id, _GLF_IDENTITY((_GLF_IDENTITY(false, ! (! (false))) ? _GLF_FUZZED(workgroup_id) : _GLF_struct_replacement_13.subgroup_id), ((_GLF_IDENTITY(false, ! (! (false))) ? _GLF_FUZZED(workgroup_id) : _GLF_struct_replacement_13.subgroup_id)) | ((_GLF_IDENTITY(false, ! (! (false))) ? _GLF_FUZZED(workgroup_id) : _GLF_struct_replacement_13.subgroup_id)))) * subgroup_size))))) + _GLF_struct_replacement_24.subgroup_local_id;
 if(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(_GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), bool(bool((injectionSwitch.x < injectionSwitch.y))))))), ! (! (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), (_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(_GLF_TRUE(true, _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), bool(bool((injectionSwitch.x < injectionSwitch.y)))))), false || (_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), bool(bool((injectionSwitch.x < injectionSwitch.y)))), (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, bool(_GLF_IDENTITY(bvec3(injectionSwitch.x < injectionSwitch.y, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(injectionSwitch.x < injectionSwitch.y, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bvec3(bvec4(bvec3(injectionSwitch.x < injectionSwitch.y, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), false)))), bvec3(bvec4(bvec3(_GLF_IDENTITY(bvec3(injectionSwitch.x < injectionSwitch.y, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bvec3(bvec4(bvec3(injectionSwitch.x < injectionSwitch.y, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), false)))), true)))))))), bool(_GLF_IDENTITY(bool((injectionSwitch.x < injectionSwitch.y)), true && (bool((injectionSwitch.x < injectionSwitch.y))))))) || false)))))), ! (! (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))) && true))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, (false) && true)))
      {
       if(_GLF_DEAD(false))
        return;
       for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != ((1 << _GLF_IDENTITY(int(5), _GLF_IDENTITY(_GLF_IDENTITY(int(5), clamp(int(5), int(5), int(5))), ~ (~ (int(5)))))) >> _GLF_IDENTITY(int(5), int(5)))); _injected_loop_counter ++)
        {
         if(_GLF_DEAD(false))
          continue;
         if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false)))))
          return;
        }
      }
     else
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) || false)) || false)) && true)))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat2(injectionSwitch, _GLF_ZERO(0.0, injectionSwitch.x), 0.0), (mat2(injectionSwitch, _GLF_ZERO(0.0, injectionSwitch.x), 0.0)) * mat2(_GLF_ONE(1.0, injectionSwitch.y))))), mix(vec2(_GLF_FUZZED(4.3), (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], 1.0 * (injectionSwitch[1])))))[1]), vec2((injectionSwitch)[_GLF_IDENTITY(0, (_GLF_IDENTITY(false, _GLF_IDENTITY(true, ! (! (true))) && (false)) ? _GLF_FUZZED(73701) : 0))], _GLF_FUZZED(-45.72)), bvec2(true, false))).x > _GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat2x4(injectionSwitch, 1.0, _GLF_IDENTITY(1.0, mix(float(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-2.2) : 1.0))), float(_GLF_FUZZED((70.72 * -60.74))), bool(false))), 0.0, 0.0, 1.0, 1.0), mat4(1.0) * (mat2x4(injectionSwitch, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0))))), injectionSwitch, _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)))).y))))
          {
           if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, bool(bvec2(false, true)))))))
            {
            }
           else
            {
             return;
            }
          }
        }
       else
        {
         if(_GLF_DEAD(false))
          return;
         for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
          {
           if(_GLF_WRAPPED_IF_FALSE(false))
            {
             if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x > injectionSwitch.y))))
              return;
             if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, bool(bvec2(false, true))))), (false) && true)))
              continue;
             for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
              {
               if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec4(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false, _GLF_IDENTITY(true, bool(_GLF_IDENTITY(bool(true), false || (bool(true))))), false))))
                {
                 if(_GLF_WRAPPED_IF_TRUE(true))
                  {
                   return;
                  }
                 else
                  {
                  }
                }
              }
             if(_GLF_DEAD(false))
              break;
            }
           else
            {
             if(_GLF_DEAD(false))
              return;
             do
              {
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                continue;
               if(_GLF_DEAD(false))
                return;
              }
             while(_GLF_WRAPPED_LOOP(false));
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              continue;
             return;
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              continue;
            }
          }
         if(_GLF_WRAPPED_IF_FALSE(false))
          {
          }
         else
          {
           if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, false || (true))))
            {
             if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(false, false))), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, bool(bvec2(false, false))), false), bvec2(_GLF_IDENTITY(bvec2(bvec2(_GLF_IDENTITY(false, bool(bvec2(false, false))), false)), bvec2(bvec4(bvec2(bvec2(_GLF_IDENTITY(false, bool(bvec2(false, false))), false)), false, true)))))))) && true)), ! (! (! (_GLF_IDENTITY(false, _GLF_IDENTITY((_GLF_IDENTITY(false, bool(bvec2(false, false)))) && true, bool(bvec4((_GLF_IDENTITY(false, bool(bvec2(false, false)))) && true, true, false, false))))))))))))
              return;
            }
           else
            {
            }
          }
        }
       if(_GLF_WRAPPED_IF_FALSE(false))
        {
        }
       else
        {
         if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || _GLF_IDENTITY(false, (false) || false))))
          {
           if(_GLF_WRAPPED_IF_FALSE(false))
            {
            }
           else
            {
             return;
            }
          }
         if(_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, ! (! (false)))))))
          {
           for(int _injected_loop_counter = int(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), (true ? _GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)).y) : _GLF_FUZZED(sqrt(-7.9))))); _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
            {
             return;
            }
          }
         if(_GLF_DEAD(false))
          return;
        }
       if(_GLF_WRAPPED_IF_FALSE(false))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
          {
           if(_GLF_WRAPPED_IF_FALSE(false))
            {
            }
           else
            {
             return;
            }
          }
         if(_GLF_DEAD(false))
          return;
        }
       else
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))))))
          return;
        }
       if(_GLF_WRAPPED_IF_FALSE(false))
        {
        }
       else
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
           if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            {
            }
           else
            {
             if(_GLF_WRAPPED_IF_FALSE(false))
              {
              }
             else
              {
               if(_GLF_DEAD(false))
                return;
              }
             return;
            }
          }
        }
       if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
        {
         do
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            break;
           if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
            {
             if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, false || (false)))))))
              break;
             if(_GLF_WRAPPED_IF_TRUE(true))
              {
               if(_GLF_DEAD(false))
                break;
               return;
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                return;
              }
             else
              {
              }
            }
          }
         while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, false || (false)))), ! (! (_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, false || (false)))))))));
         if(_GLF_WRAPPED_IF_FALSE(false))
          {
          }
         else
          {
           if(_GLF_WRAPPED_IF_FALSE(false))
            {
             if(_GLF_DEAD(false))
              return;
            }
           else
            {
             for(int _injected_loop_counter = (0 >> _GLF_IDENTITY(int(8), int(8))); _GLF_WRAPPED_LOOP(_injected_loop_counter < (0 ^ 1)); _injected_loop_counter ++)
              {
               if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
                return;
              }
             return;
            }
          }
        }
       if(_GLF_WRAPPED_IF_FALSE(false))
        {
        }
       else
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            return;
           return;
          }
        }
       if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
        {
         if(_GLF_DEAD(false))
          return;
         return;
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
      }
     if(_GLF_DEAD(false))
      {
       for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter != 0, ! (_GLF_IDENTITY(! (_injected_loop_counter != 0), bool(_GLF_IDENTITY(bvec2(! (_injected_loop_counter != 0), false), bvec2(bvec4(bvec2(! (_injected_loop_counter != 0), false), false, false)))))))); _injected_loop_counter --)
        {
         if(_GLF_DEAD(false))
          continue;
         return;
        }
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, (false) && true), false, _GLF_IDENTITY(false, (false) && true))))), ! (! _GLF_IDENTITY((_GLF_DEAD(false)), true && (_GLF_IDENTITY((_GLF_DEAD(false)), false || ((_GLF_DEAD(false)))))))))
    return;
  }
 else
  {
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)).x > injectionSwitch.y))))
  {
   do
    {
     return;
    }
   while(_GLF_WRAPPED_LOOP(false));
  }
 if(_GLF_DEAD(false))
  {
   for(int _injected_loop_counter = int(_GLF_ZERO(0.0, injectionSwitch.x)); _GLF_WRAPPED_LOOP(_injected_loop_counter < (0 ^ 1)); _injected_loop_counter ++)
    {
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
    {
     if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true && (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) && true)) || false)))
      {
       return;
      }
     else
      {
      }
    }
   else
    {
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(false))
    return;
  }
 uint next_virtual_gid = _GLF_IDENTITY(workgroup_base + _GLF_struct_replacement_13.subgroup_id * subgroup_size + (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_struct_replacement_24.subgroup_local_id + 1, _GLF_IDENTITY(min(_GLF_struct_replacement_24.subgroup_local_id + 1, _GLF_IDENTITY(_GLF_struct_replacement_24.subgroup_local_id + 1, _GLF_IDENTITY((_GLF_struct_replacement_24.subgroup_local_id + 1), min((_GLF_struct_replacement_24.subgroup_local_id + 1), (_GLF_struct_replacement_24.subgroup_local_id + 1))) << 0u)), (min(_GLF_struct_replacement_24.subgroup_local_id + 1, _GLF_IDENTITY(_GLF_struct_replacement_24.subgroup_local_id + 1, _GLF_IDENTITY((_GLF_struct_replacement_24.subgroup_local_id + 1), min((_GLF_struct_replacement_24.subgroup_local_id + 1), (_GLF_struct_replacement_24.subgroup_local_id + 1))) << 0u))) | (min(_GLF_struct_replacement_24.subgroup_local_id + 1, _GLF_IDENTITY(_GLF_struct_replacement_24.subgroup_local_id + 1, _GLF_IDENTITY((_GLF_struct_replacement_24.subgroup_local_id + 1), min((_GLF_struct_replacement_24.subgroup_local_id + 1), (_GLF_struct_replacement_24.subgroup_local_id + 1))) << 0u)))))), ~ (_GLF_IDENTITY(~ ((_GLF_IDENTITY(_GLF_struct_replacement_24.subgroup_local_id + 1, min(_GLF_struct_replacement_24.subgroup_local_id + 1, _GLF_IDENTITY(_GLF_struct_replacement_24.subgroup_local_id + 1, (_GLF_IDENTITY(_GLF_struct_replacement_24.subgroup_local_id + 1, uint(uint(_GLF_struct_replacement_24.subgroup_local_id + 1)))) << 0u))))), clamp(~ ((_GLF_IDENTITY(_GLF_struct_replacement_24.subgroup_local_id + 1, min(_GLF_struct_replacement_24.subgroup_local_id + 1, _GLF_IDENTITY(_GLF_struct_replacement_24.subgroup_local_id + 1, (_GLF_struct_replacement_24.subgroup_local_id + 1) << _GLF_IDENTITY(0u, (0u) | (0u))))))), ~ ((_GLF_IDENTITY(_GLF_struct_replacement_24.subgroup_local_id + 1, _GLF_IDENTITY(min(_GLF_struct_replacement_24.subgroup_local_id + 1, _GLF_IDENTITY(_GLF_struct_replacement_24.subgroup_local_id + 1, _GLF_IDENTITY((_GLF_struct_replacement_24.subgroup_local_id + 1) << 0u, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY((_GLF_struct_replacement_24.subgroup_local_id + 1) << 0u, ((_GLF_struct_replacement_24.subgroup_local_id + 1) << 0u) + 0u)), _GLF_IDENTITY((~ _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY((_GLF_struct_replacement_24.subgroup_local_id + 1) << 0u, ((_GLF_struct_replacement_24.subgroup_local_id + 1) << 0u) / 1u), ((_GLF_struct_replacement_24.subgroup_local_id + 1) << 0u) + 0u)), max((_GLF_IDENTITY(_GLF_IDENTITY((_GLF_struct_replacement_24.subgroup_local_id + 1) << 0u, ((_GLF_struct_replacement_24.subgroup_local_id + 1) << 0u) / 1u), ((_GLF_struct_replacement_24.subgroup_local_id + 1) << 0u) + 0u)), (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_struct_replacement_24.subgroup_local_id + 1) << 0u, ((_GLF_struct_replacement_24.subgroup_local_id + 1) << 0u) / 1u), ((_GLF_struct_replacement_24.subgroup_local_id + 1) << 0u) + 0u))))) | (~ (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_struct_replacement_24.subgroup_local_id + 1), ((_GLF_struct_replacement_24.subgroup_local_id + 1)) | ((_GLF_struct_replacement_24.subgroup_local_id + 1))) << 0u, ((_GLF_struct_replacement_24.subgroup_local_id + 1) << 0u) + 0u))), 1u * ((~ (_GLF_IDENTITY((_GLF_struct_replacement_24.subgroup_local_id + 1) << 0u, ((_GLF_struct_replacement_24.subgroup_local_id + 1) << 0u) + 0u))) | (~ (_GLF_IDENTITY((_GLF_struct_replacement_24.subgroup_local_id + 1) << 0u, ((_GLF_struct_replacement_24.subgroup_local_id + 1) << 0u) + 0u)))))))))), (min(_GLF_struct_replacement_24.subgroup_local_id + 1, _GLF_IDENTITY(_GLF_struct_replacement_24.subgroup_local_id + 1, _GLF_IDENTITY((_GLF_struct_replacement_24.subgroup_local_id + 1) << 0u, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY((_GLF_struct_replacement_24.subgroup_local_id + 1) << 0u, ((_GLF_struct_replacement_24.subgroup_local_id + 1) << 0u) + 0u)), _GLF_IDENTITY((~ _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY((_GLF_struct_replacement_24.subgroup_local_id + 1) << 0u, ((_GLF_struct_replacement_24.subgroup_local_id + 1) << 0u) / 1u), ((_GLF_struct_replacement_24.subgroup_local_id + 1) << 0u) + 0u)), max((_GLF_IDENTITY(_GLF_IDENTITY((_GLF_struct_replacement_24.subgroup_local_id + 1) << 0u, ((_GLF_struct_replacement_24.subgroup_local_id + 1) << 0u) / 1u), ((_GLF_struct_replacement_24.subgroup_local_id + 1) << 0u) + 0u)), (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_struct_replacement_24.subgroup_local_id + 1) << 0u, ((_GLF_struct_replacement_24.subgroup_local_id + 1) << 0u) / 1u), ((_GLF_struct_replacement_24.subgroup_local_id + 1) << 0u) + 0u))))) | (~ (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_struct_replacement_24.subgroup_local_id + 1), ((_GLF_struct_replacement_24.subgroup_local_id + 1)) | ((_GLF_struct_replacement_24.subgroup_local_id + 1))) << 0u, ((_GLF_struct_replacement_24.subgroup_local_id + 1) << 0u) + 0u))), 1u * ((~ (_GLF_IDENTITY((_GLF_struct_replacement_24.subgroup_local_id + 1) << 0u, ((_GLF_struct_replacement_24.subgroup_local_id + 1) << 0u) + 0u))) | (~ (_GLF_IDENTITY((_GLF_struct_replacement_24.subgroup_local_id + 1) << 0u, ((_GLF_struct_replacement_24.subgroup_local_id + 1) << 0u) + 0u))))))))))) << (0u | 0u))))), ~ ((_GLF_IDENTITY(_GLF_struct_replacement_24.subgroup_local_id + 1, _GLF_IDENTITY(min(_GLF_struct_replacement_24.subgroup_local_id + 1, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_struct_replacement_24.subgroup_local_id, (true ? _GLF_struct_replacement_24.subgroup_local_id : _GLF_FUZZED(workgroup_id))) + 1, _GLF_IDENTITY((_GLF_struct_replacement_24.subgroup_local_id + 1), ~ (_GLF_IDENTITY(~ ((_GLF_struct_replacement_24.subgroup_local_id + 1)), (~ ((_GLF_struct_replacement_24.subgroup_local_id + 1))) * 1u))) << _GLF_IDENTITY(0u, max(0u, _GLF_IDENTITY(0u, (0u) >> 0u))))), (_GLF_IDENTITY(min(_GLF_struct_replacement_24.subgroup_local_id + 1, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_struct_replacement_24.subgroup_local_id + 1, clamp(_GLF_struct_replacement_24.subgroup_local_id + 1, _GLF_IDENTITY(_GLF_struct_replacement_24.subgroup_local_id + 1, (_GLF_struct_replacement_24.subgroup_local_id + 1) / 1u), _GLF_IDENTITY(_GLF_struct_replacement_24.subgroup_local_id, (_GLF_IDENTITY(_GLF_struct_replacement_24.subgroup_local_id, clamp(_GLF_struct_replacement_24.subgroup_local_id, _GLF_struct_replacement_24.subgroup_local_id, _GLF_struct_replacement_24.subgroup_local_id))) ^ 0u) + 1)), _GLF_IDENTITY((_GLF_struct_replacement_24.subgroup_local_id + 1), ~ (_GLF_IDENTITY(_GLF_IDENTITY(~ _GLF_IDENTITY(((_GLF_struct_replacement_24.subgroup_local_id + 1)), (_GLF_IDENTITY(((_GLF_struct_replacement_24.subgroup_local_id + 1)), (((_GLF_struct_replacement_24.subgroup_local_id + 1))) << (0u | 0u))) | (((_GLF_struct_replacement_24.subgroup_local_id + 1)))), ~ (~ (_GLF_IDENTITY(~ ((_GLF_struct_replacement_24.subgroup_local_id + _GLF_IDENTITY(1, (1) ^ (1 ^ 1)))), ~ (_GLF_IDENTITY(~ (~ ((_GLF_struct_replacement_24.subgroup_local_id + 1))), max(~ (~ ((_GLF_struct_replacement_24.subgroup_local_id + 1))), ~ (~ _GLF_IDENTITY(((_GLF_struct_replacement_24.subgroup_local_id + 1)), ~ (_GLF_IDENTITY(~ (((_GLF_struct_replacement_24.subgroup_local_id + 1))), (~ (((_GLF_struct_replacement_24.subgroup_local_id + 1)))) | 0u))))))))))), (~ ((_GLF_struct_replacement_24.subgroup_local_id + 1))) * 1u))) << 0u)), (false ? _GLF_IDENTITY(_GLF_FUZZED(subgroup_size), (false ? _GLF_FUZZED(virtual_gid) : _GLF_FUZZED(subgroup_size))) : min(_GLF_struct_replacement_24.subgroup_local_id + 1, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_struct_replacement_24.subgroup_local_id + 1, _GLF_IDENTITY((_GLF_struct_replacement_24.subgroup_local_id + 1), ~ (_GLF_IDENTITY(~ ((_GLF_struct_replacement_24.subgroup_local_id + 1)), (~ ((_GLF_struct_replacement_24.subgroup_local_id + 1))) * 1u))) << 0u), (_GLF_IDENTITY(_GLF_struct_replacement_24.subgroup_local_id + 1, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_struct_replacement_24.subgroup_local_id + 1, (_GLF_struct_replacement_24.subgroup_local_id + 1) / (1u & 1u))), _GLF_IDENTITY(~ (_GLF_IDENTITY(~ ((_GLF_struct_replacement_24.subgroup_local_id + 1)), (~ ((_GLF_struct_replacement_24.subgroup_local_id + 1))) * 1u)), 0u | (~ (_GLF_IDENTITY(~ ((_GLF_struct_replacement_24.subgroup_local_id + 1)), (~ ((_GLF_struct_replacement_24.subgroup_local_id + 1))) * 1u))))) << 0u)) - 0u))))) >> 0u)))))))) % _GLF_IDENTITY(subgroup_size, 0u | (subgroup_size)), _GLF_IDENTITY(((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_struct_replacement_24.subgroup_local_id + _GLF_IDENTITY(1, int(ivec2(1, (0 >> _GLF_IDENTITY(int(1), int(1)))))), min(_GLF_IDENTITY(_GLF_struct_replacement_24.subgroup_local_id + _GLF_IDENTITY(1, int(_GLF_IDENTITY(ivec2(1, _GLF_IDENTITY((0 >> _GLF_IDENTITY(int(1), int(1))), (0 << _GLF_IDENTITY(int(3), int(3))) ^ (_GLF_IDENTITY((0 >> _GLF_IDENTITY(int(1), int(1))), (false ? _GLF_FUZZED(88624) : (0 >> _GLF_IDENTITY(int(1), int(1)))))))), (ivec2(1, _GLF_IDENTITY((0 >> _GLF_IDENTITY(int(1), int(1))), (0 << _GLF_IDENTITY(int(3), int(3))) ^ (_GLF_IDENTITY((0 >> _GLF_IDENTITY(int(1), int(1))), (false ? _GLF_FUZZED(88624) : (0 >> _GLF_IDENTITY(int(1), int(1))))))))) ^ ivec2(0, 0)))), (_GLF_struct_replacement_24.subgroup_local_id + _GLF_IDENTITY(1, int(ivec2(1, (0 >> _GLF_IDENTITY(int(1), int(1))))))) - 0u), _GLF_struct_replacement_24.subgroup_local_id + _GLF_IDENTITY(1, int(ivec2(1, (0 >> _GLF_IDENTITY(int(1), int(1)))))))), min(_GLF_struct_replacement_24.subgroup_local_id + 1, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_struct_replacement_24.subgroup_local_id, (_GLF_struct_replacement_24.subgroup_local_id) * 1u), min(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_struct_replacement_24.subgroup_local_id, (_GLF_struct_replacement_24.subgroup_local_id) * 1u), max(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_struct_replacement_24.subgroup_local_id, (_GLF_struct_replacement_24.subgroup_local_id) * 1u), min(_GLF_IDENTITY(_GLF_struct_replacement_24.subgroup_local_id, (_GLF_struct_replacement_24.subgroup_local_id) * 1u), _GLF_IDENTITY(_GLF_struct_replacement_24.subgroup_local_id, (_GLF_struct_replacement_24.subgroup_local_id) * 1u))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_struct_replacement_24.subgroup_local_id, (_GLF_struct_replacement_24.subgroup_local_id) * 1u), 0u ^ (_GLF_IDENTITY(_GLF_struct_replacement_24.subgroup_local_id, (_GLF_struct_replacement_24.subgroup_local_id) * 1u))))), _GLF_IDENTITY(_GLF_struct_replacement_24.subgroup_local_id, (_GLF_struct_replacement_24.subgroup_local_id) * 1u))) + _GLF_IDENTITY(1, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(1, 1 * (1))), int(int(~ (_GLF_IDENTITY(1, 1 * (1)))))))), (_GLF_struct_replacement_24.subgroup_local_id + 1) << 0u)))) % _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, (subgroup_size) / 1u)) << 0u), uint(uvec3(subgroup_size, 1u, 0u)))), uint(uvec4(((_GLF_IDENTITY(_GLF_struct_replacement_24.subgroup_local_id + 1, _GLF_IDENTITY(min(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_struct_replacement_24.subgroup_local_id + 1, 0u | (_GLF_struct_replacement_24.subgroup_local_id + 1)), (_GLF_struct_replacement_24.subgroup_local_id + 1) << 0u), _GLF_IDENTITY(_GLF_struct_replacement_24.subgroup_local_id + _GLF_IDENTITY(1, ~ (_GLF_IDENTITY(_GLF_IDENTITY(~ (_GLF_IDENTITY(1, _GLF_IDENTITY(1, (1) ^ 0) * (1))), int(_GLF_ZERO(0.0, injectionSwitch.x)) | (~ (_GLF_IDENTITY(1, _GLF_IDENTITY(1, (1) ^ 0) * (1))))), int(int(~ (_GLF_IDENTITY(_GLF_IDENTITY(1, int(ivec3(_GLF_IDENTITY(1, clamp(_GLF_IDENTITY(1, (1) ^ 0), 1, 1)), 1, 0))), 1 * (1)))))))), _GLF_IDENTITY((_GLF_struct_replacement_24.subgroup_local_id + 1) << 0u, ((_GLF_struct_replacement_24.subgroup_local_id + 1) << 0u) - 0u))), (_GLF_IDENTITY(min(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_struct_replacement_24.subgroup_local_id + 1, 0u | (_GLF_struct_replacement_24.subgroup_local_id + 1)), (_GLF_struct_replacement_24.subgroup_local_id + 1) << 0u), _GLF_IDENTITY(_GLF_struct_replacement_24.subgroup_local_id + _GLF_IDENTITY(1, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(1, _GLF_IDENTITY(1, (_GLF_IDENTITY(1, int(_GLF_IDENTITY(ivec2(1, 0), max(ivec2(1, 0), ivec2(1, 0)))))) ^ 0) * (1))), int(int(~ (_GLF_IDENTITY(_GLF_IDENTITY(1, int(ivec3(_GLF_IDENTITY(1, clamp(_GLF_IDENTITY(1, (1) ^ 0), 1, 1)), 1, 0))), 1 * (1)))))))), _GLF_IDENTITY((_GLF_struct_replacement_24.subgroup_local_id + 1) << 0u, ((_GLF_struct_replacement_24.subgroup_local_id + 1) << 0u) - 0u))), (min(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_struct_replacement_24.subgroup_local_id + 1, 0u | (_GLF_struct_replacement_24.subgroup_local_id + 1)), (_GLF_struct_replacement_24.subgroup_local_id + _GLF_IDENTITY(1, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(56814) : _GLF_IDENTITY(1, 0 ^ (1))))) << 0u), _GLF_IDENTITY(_GLF_struct_replacement_24.subgroup_local_id + _GLF_IDENTITY(1, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY(1, _GLF_IDENTITY(1, (1) ^ 0) * (1)), (_GLF_IDENTITY(1, _GLF_IDENTITY(1, (1) ^ 0) * (1))) << 0)), int(int(~ (_GLF_IDENTITY(_GLF_IDENTITY(1, int(ivec3(_GLF_IDENTITY(1, _GLF_IDENTITY(clamp(_GLF_IDENTITY(1, (1) ^ 0), 1, 1), (clamp(_GLF_IDENTITY(1, (1) ^ 0), 1, 1)) | (_GLF_IDENTITY(clamp(_GLF_IDENTITY(1, (1) ^ 0), 1, 1), (clamp(_GLF_IDENTITY(1, (1) ^ 0), 1, 1)) >> 0)))), 1, 0))), 1 * (1)))))))), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_struct_replacement_24.subgroup_local_id + 1, (_GLF_struct_replacement_24.subgroup_local_id + 1) | (_GLF_IDENTITY(_GLF_struct_replacement_24.subgroup_local_id + 1, uint(uvec4(_GLF_struct_replacement_24.subgroup_local_id + 1, 0u, 0u, 1u)))))) << 0u, ((_GLF_struct_replacement_24.subgroup_local_id + 1) << 0u) - 0u)))) / 1u)) >> 0u))) % subgroup_size), (1u ^ 0u), _GLF_IDENTITY(1u, 0u ^ (1u)), 1u))) + 0u)), (workgroup_base + _GLF_IDENTITY(_GLF_struct_replacement_13.subgroup_id * subgroup_size, (0u << _GLF_IDENTITY(uint(5u), uint(5u))) ^ (_GLF_struct_replacement_13.subgroup_id * subgroup_size)) + (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_struct_replacement_24.subgroup_local_id + 1, min(_GLF_struct_replacement_24.subgroup_local_id + 1, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_struct_replacement_24.subgroup_local_id + _GLF_IDENTITY(1, (1) ^ 0), _GLF_IDENTITY((_GLF_struct_replacement_24.subgroup_local_id + 1) << 0u, ((_GLF_struct_replacement_24.subgroup_local_id + 1) << 0u) >> (0u >> _GLF_IDENTITY(uint(1u), uint(1u))))), (_GLF_IDENTITY(_GLF_struct_replacement_24.subgroup_local_id + _GLF_IDENTITY(1, (1) ^ 0), _GLF_IDENTITY((_GLF_struct_replacement_24.subgroup_local_id + 1) << 0u, ((_GLF_struct_replacement_24.subgroup_local_id + 1) << 0u) >> (0u >> _GLF_IDENTITY(uint(1u), uint(1u)))))) >> 0u), (_GLF_IDENTITY(_GLF_struct_replacement_24.subgroup_local_id + 1, (_GLF_IDENTITY(_GLF_struct_replacement_24.subgroup_local_id + 1, _GLF_IDENTITY((_GLF_struct_replacement_24.subgroup_local_id + 1), max((_GLF_struct_replacement_24.subgroup_local_id + 1), (_GLF_struct_replacement_24.subgroup_local_id + 1))) - 0u)) << 0u)) | 0u)))), ~ (~ ((_GLF_IDENTITY(_GLF_struct_replacement_24.subgroup_local_id + 1, min(_GLF_struct_replacement_24.subgroup_local_id + 1, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_struct_replacement_24.subgroup_local_id + _GLF_IDENTITY(1, (1) ^ 0), _GLF_IDENTITY((_GLF_struct_replacement_24.subgroup_local_id + 1) << 0u, ((_GLF_struct_replacement_24.subgroup_local_id + 1) << 0u) >> (0u >> _GLF_IDENTITY(uint(1u), uint(1u))))), (_GLF_IDENTITY(_GLF_struct_replacement_24.subgroup_local_id + _GLF_IDENTITY(1, (1) ^ 0), _GLF_IDENTITY((_GLF_struct_replacement_24.subgroup_local_id + 1) << 0u, ((_GLF_struct_replacement_24.subgroup_local_id + 1) << 0u) >> (0u >> _GLF_IDENTITY(uint(1u), uint(1u)))))) >> 0u), (_GLF_IDENTITY(_GLF_struct_replacement_24.subgroup_local_id + 1, (_GLF_IDENTITY(_GLF_struct_replacement_24.subgroup_local_id + 1, _GLF_IDENTITY((_GLF_struct_replacement_24.subgroup_local_id + 1), max((_GLF_struct_replacement_24.subgroup_local_id + 1), (_GLF_struct_replacement_24.subgroup_local_id + 1))) - 0u)) << 0u)) | 0u))))))) % subgroup_size)) | _GLF_IDENTITY(0u, (true ? 0u : _GLF_FUZZED(workgroup_size))));
 uint read_1 = atomicLoad(buf[virtual_gid], 4, _GLF_IDENTITY(_GLF_IDENTITY(64, clamp(64, 64, 64)), clamp(_GLF_IDENTITY(64, clamp(64, 64, 64)), _GLF_IDENTITY(64, clamp(64, 64, 64)), _GLF_IDENTITY(64, clamp(64, 64, 64)))), 0);
 if(_GLF_DEAD(false))
  return;
 atomicStore(buf[next_virtual_gid], _GLF_IDENTITY(uint(read_1 + 1), (true ? _GLF_IDENTITY(uint(read_1 + 1), min(uint(read_1 + 1), uint(read_1 + 1))) : _GLF_FUZZED(workgroup_size))), 4, 64, 4);
 uint read_2 = atomicLoad(buf[virtual_gid], _GLF_IDENTITY(4, 0 ^ (4)), 64, 0);
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)), (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch), clamp((injectionSwitch), (injectionSwitch), (injectionSwitch))) * vec2(1.0, 1.0))) - log(vec2(1.0, 1.0))), mat2(1.0) * (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * _GLF_IDENTITY(vec2(1.0, 1.0), (false ? _GLF_FUZZED(injectionSwitch) : vec2(1.0, 1.0)))))).x > injectionSwitch.y))))
    {
     if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, true && (true))))
      {
       for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
        {
         return;
         if(_GLF_DEAD(false))
          return;
        }
      }
     else
      {
      }
    }
   for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
    {
     if(_GLF_DEAD(false))
      return;
    }
   for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < _GLF_IDENTITY(1, (_GLF_IDENTITY(1, min(1, 1))) * int(_GLF_ONE(1.0, injectionSwitch.y)))); _injected_loop_counter ++)
    {
     return;
    }
  }
 for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter < 1, ! (! (_injected_loop_counter < 1)))); _injected_loop_counter ++)
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)) && true)))
    break;
   if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))
    continue;
   if(_GLF_DEAD(false))
    continue;
   do
    {
     if(_GLF_IDENTITY(_GLF_struct_replacement_24.subgroup_local_id + 1, (_GLF_IDENTITY(_GLF_struct_replacement_24.subgroup_local_id + 1, ~ (~ (_GLF_struct_replacement_24.subgroup_local_id + 1)))) << 0u) < subgroup_size)
      {
       if(_GLF_DEAD(false))
        return;
       _GLF_struct_29 _GLF_struct_replacement_29 = _GLF_struct_29(uvec2(1u), _GLF_IDENTITY(vec2(1.0), clamp(vec2(1.0), vec2(1.0), _GLF_IDENTITY(_GLF_IDENTITY(vec2(1.0), mat2(1.0) * (vec2(1.0))), vec2(0.0, 0.0) + (_GLF_IDENTITY(_GLF_IDENTITY(vec2(1.0), mat2(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-0.1) : 1.0))) * (vec2(1.0))), (_GLF_IDENTITY(_GLF_IDENTITY(vec2(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(2.7)), float(_GLF_IDENTITY(1.0, max(1.0, 1.0))), bool(true)))), max(vec2(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(2.7)), float(_GLF_IDENTITY(1.0, max(1.0, 1.0))), bool(true)))), vec2(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(2.7)), float(_GLF_IDENTITY(1.0, max(1.0, 1.0))), bool(true)))))), mat2(1.0) * (vec2(1.0)))) * mat2(1.0)))))), _GLF_struct_28(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(0, (0) - 0), (_GLF_IDENTITY(0 ^ 0, (0 ^ 0) * 1)) | (_GLF_IDENTITY(_GLF_IDENTITY(0, _GLF_IDENTITY(_GLF_IDENTITY(min(0, _GLF_IDENTITY(0, max(0, _GLF_IDENTITY(0, clamp(0, 0, 0))))), (_GLF_IDENTITY(min(0, _GLF_IDENTITY(0, max(0, 0))), _GLF_IDENTITY((_GLF_IDENTITY(min(0, _GLF_IDENTITY(_GLF_IDENTITY(0, (0) * 1), max(0, 0))), (min(0, _GLF_IDENTITY(0, max(0, 0)))) >> 0)), 1 * ((_GLF_IDENTITY(min(0, _GLF_IDENTITY(_GLF_IDENTITY(0, (0) * 1), max(0, 0))), (min(0, _GLF_IDENTITY(0, max(0, 0)))) >> 0)))) >> 0)) / _GLF_IDENTITY(1, (_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(_injected_loop_counter)))) ^ (0 << _GLF_IDENTITY(int(7), int(7))))) - (0 ^ 0))), (min(0, _GLF_IDENTITY(0, max(0, 0)))) ^ 0)), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), bool(bvec4(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, true, _GLF_IDENTITY(true, false || (true))))), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false || (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true && (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))) && true, false || ((_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false || (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true && (_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0)))))))) && true))) ? 0 : _GLF_IDENTITY(_GLF_FUZZED(95855), min(_GLF_FUZZED(95855), _GLF_IDENTITY(_GLF_FUZZED(95855), 0 | (_GLF_FUZZED(95855))))))))), min(_GLF_IDENTITY(0, (_GLF_IDENTITY(0 ^ 0, ~ (~ (0 ^ 0)))) | _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(0, _GLF_IDENTITY(int(_GLF_IDENTITY(ivec3(0, (1 ^ 0), 1), (ivec3(0, (_GLF_IDENTITY(1 ^ 0, (_GLF_IDENTITY(1 ^ 0, int(ivec2(1 ^ 0, 0)))) | 0)), 1)) | ivec3(0, 0, 0))), (false ? _GLF_FUZZED(18983) : int(_GLF_IDENTITY(ivec3(0, (1 ^ 0), 1), (ivec3(0, (1 ^ 0), 1)) | ivec3(0, 0, 0)))))), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(0, 0 ^ (0)) : _GLF_FUZZED(95855)))), 0 | ((_GLF_IDENTITY(0, (_GLF_TRUE(_GLF_IDENTITY(true, (true) && true), (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-9193.7431)), float(injectionSwitch.y), bool(true))))) ? _GLF_IDENTITY(_GLF_IDENTITY(0, (0) >> 0), 0 ^ (0)) : _GLF_FUZZED(95855))))))), _GLF_IDENTITY(0, (0 ^ 0) | (_GLF_IDENTITY(0, (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? 0 : _GLF_FUZZED(95855), _GLF_IDENTITY(int(_GLF_IDENTITY(int(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? 0 : _GLF_FUZZED(95855)), 0 | (int(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? 0 : _GLF_FUZZED(95855))))), (_GLF_IDENTITY(int(_GLF_IDENTITY(int(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? 0 : _GLF_FUZZED(95855)), 0 | (int(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? 0 : _GLF_FUZZED(95855))))), 0 ^ (int(_GLF_IDENTITY(int(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? 0 : _GLF_FUZZED(95855)), 0 | (int(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? 0 : _GLF_FUZZED(95855)))))))) + 0)))))))), _GLF_struct_25(uvec4(1u), bvec3(true), bvec4(true)), _GLF_struct_26(uvec4(1u), true, 1, bvec3(true)), mat3(1.0), _GLF_struct_27(vec2(_GLF_IDENTITY(1.0, clamp(1.0, _GLF_IDENTITY(1.0, _GLF_IDENTITY(min(1.0, 1.0), (min(1.0, 1.0)) - 0.0)), 1.0))), true, vec2(1.0), uvec2(1u))));
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          continue;
         if(_GLF_WRAPPED_IF_TRUE(true))
          {
           return;
          }
         else
          {
          }
        }
       if(_GLF_WRAPPED_IF_TRUE(true))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          continue;
         for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
          {
           atomicStore(buf[next_virtual_gid], _GLF_IDENTITY(uint(_GLF_IDENTITY(read_1 + 1 == read_2, false || (read_1 + 1 == read_2))), max(uint(_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1, uint(_GLF_IDENTITY(uvec2(_GLF_IDENTITY(read_1 + 1, clamp(read_1 + 1, read_1 + 1, read_1 + 1)), 1u), min(uvec2(_GLF_IDENTITY(read_1 + 1, clamp(read_1 + 1, read_1 + 1, read_1 + 1)), 1u), uvec2(_GLF_IDENTITY(read_1 + 1, clamp(read_1 + 1, read_1 + 1, read_1 + 1)), 1u))))), min(_GLF_IDENTITY(read_1 + 1, (read_1 + 1) | (read_1 + 1)), read_1 + _GLF_IDENTITY(1, clamp(1, _GLF_IDENTITY(1, (1) | 0), _GLF_IDENTITY(1, (1) / 1))))) == read_2), _GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(read_1 + 1 == read_2, true && (_GLF_IDENTITY(read_1 + 1 == read_2, bool(bool(read_1 + 1 == read_2)))))), (uint(_GLF_IDENTITY(read_1 + _GLF_IDENTITY(1, max(1, 1)) == read_2, (read_1 + 1 == read_2) && true))) - 0u), (_GLF_IDENTITY(uint(_GLF_IDENTITY(read_1 + 1, ~ (~ (read_1 + 1))) == read_2), (uint(_GLF_IDENTITY(read_1 + 1 == read_2, (_GLF_IDENTITY(read_1 + 1, clamp(read_1 + 1, read_1 + 1, _GLF_IDENTITY(read_1 + 1, uint(uvec2(read_1 + 1, 0u))))) == read_2) && true))) - 0u)) - 0u))) + _GLF_IDENTITY(1, (_GLF_IDENTITY(1, ~ (~ (1)))) << 0), 4, 64, 4);
          }
         if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), ! (! (false)))))
          {
           if(_GLF_WRAPPED_IF_TRUE(true))
            {
             return;
            }
           else
            {
            }
          }
        }
       else
        {
        }
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        break;
       if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(bool(bool(false)), ! (! (bool(bool(false))))), false, false, true)), bool(bvec4(bool(bvec4(_GLF_IDENTITY(bool(bool(false)), ! (! (bool(bool(false))))), false, false, true)), false, true, true)))))) && true)))
        break;
       if(_GLF_DEAD(false))
        continue;
      }
     else
      {
       atomicStore(buf[next_virtual_gid], _GLF_IDENTITY(uint(read_1 + 1 == _GLF_IDENTITY(read_2, clamp(read_2, read_2, read_2))) + _GLF_IDENTITY(1, int(ivec2(1, 0))), _GLF_IDENTITY(clamp(uint(read_1 + 1 == read_2) + 1, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(uint(read_1 + 1 == read_2) + 1, uint(uvec2(uint(read_1 + 1 == read_2) + 1, 1u))), (true ? _GLF_IDENTITY(uint(read_1 + 1 == read_2) + _GLF_IDENTITY(1, (1) << 0), (false ? _GLF_FUZZED(69219u) : _GLF_IDENTITY(uint(read_1 + 1 == read_2) + 1, min(uint(_GLF_IDENTITY(read_1 + 1 == read_2, bool(bool(read_1 + 1 == read_2)))) + 1, uint(_GLF_IDENTITY(read_1, _GLF_IDENTITY((read_1) + (1u ^ 1u), max((read_1) + (1u ^ 1u), _GLF_IDENTITY((read_1) + (1u ^ 1u), 0u ^ ((read_1) + (1u ^ 1u)))))) + 1 == read_2) + _GLF_IDENTITY(1, (1) | (1)))))) : _GLF_FUZZED(next_virtual_gid))), uint(_GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(uint(read_1 + 1 == read_2) + 1, uint(uvec2(uint(read_1 + 1 == read_2) + 1, 1u))), (true ? _GLF_IDENTITY(uint(read_1 + 1 == read_2) + _GLF_IDENTITY(1, (1) << 0), (false ? _GLF_FUZZED(69219u) : _GLF_IDENTITY(uint(read_1 + 1 == read_2) + 1, min(uint(_GLF_IDENTITY(read_1 + 1 == read_2, bool(bool(read_1 + 1 == read_2)))) + 1, uint(_GLF_IDENTITY(read_1, _GLF_IDENTITY((read_1) + (1u ^ 1u), max((read_1) + (1u ^ 1u), _GLF_IDENTITY((read_1) + (1u ^ 1u), 0u ^ ((read_1) + (1u ^ 1u)))))) + 1 == read_2) + _GLF_IDENTITY(1, (1) | (1)))))) : _GLF_FUZZED(next_virtual_gid))), (_GLF_IDENTITY(_GLF_IDENTITY(uint(read_1 + 1 == read_2) + 1, uint(uvec2(uint(read_1 + 1 == read_2) + 1, 1u))), (true ? _GLF_IDENTITY(uint(read_1 + 1 == read_2) + _GLF_IDENTITY(1, (1) << 0), (false ? _GLF_FUZZED(69219u) : _GLF_IDENTITY(uint(read_1 + 1 == read_2) + 1, min(uint(_GLF_IDENTITY(read_1 + 1 == read_2, bool(bool(read_1 + 1 == read_2)))) + 1, uint(_GLF_IDENTITY(read_1, _GLF_IDENTITY((read_1) + (1u ^ 1u), max((read_1) + (1u ^ 1u), _GLF_IDENTITY((read_1) + (1u ^ 1u), 0u ^ ((read_1) + (1u ^ 1u)))))) + 1 == read_2) + _GLF_IDENTITY(1, (1) | (1)))))) : _GLF_FUZZED(next_virtual_gid)))) + 0u)), (_GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(uint(read_1 + 1 == read_2) + 1, uint(uvec2(uint(read_1 + 1 == read_2) + 1, 1u))), (true ? _GLF_IDENTITY(uint(read_1 + 1 == read_2) + _GLF_IDENTITY(1, (1) << 0), (false ? _GLF_FUZZED(69219u) : _GLF_IDENTITY(uint(read_1 + 1 == read_2) + 1, min(uint(_GLF_IDENTITY(read_1 + 1 == read_2, bool(bool(read_1 + 1 == read_2)))) + 1, uint(_GLF_IDENTITY(read_1, _GLF_IDENTITY((read_1) + (1u ^ 1u), max((read_1) + (1u ^ 1u), _GLF_IDENTITY((read_1) + (1u ^ 1u), 0u ^ ((read_1) + (1u ^ 1u)))))) + 1 == read_2) + _GLF_IDENTITY(1, (1) | (1)))))) : _GLF_FUZZED(next_virtual_gid))), (_GLF_IDENTITY(_GLF_IDENTITY(uint(read_1 + 1 == read_2) + 1, uint(uvec2(uint(read_1 + 1 == read_2) + 1, 1u))), (true ? _GLF_IDENTITY(uint(read_1 + 1 == read_2) + _GLF_IDENTITY(1, (1) << 0), (false ? _GLF_FUZZED(69219u) : _GLF_IDENTITY(uint(read_1 + 1 == read_2) + 1, min(uint(_GLF_IDENTITY(read_1 + 1 == read_2, bool(bool(read_1 + 1 == read_2)))) + 1, uint(_GLF_IDENTITY(read_1, _GLF_IDENTITY((read_1) + (1u ^ 1u), max((read_1) + (1u ^ 1u), _GLF_IDENTITY((read_1) + (1u ^ 1u), 0u ^ ((read_1) + (1u ^ 1u)))))) + 1 == read_2) + _GLF_IDENTITY(1, (1) | (1)))))) : _GLF_FUZZED(next_virtual_gid)))) + 0u)), 0u | (uint(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(uint(read_1 + 1 == read_2) + 1, uint(uvec2(uint(read_1 + 1 == read_2) + 1, 1u))), (true ? _GLF_IDENTITY(uint(read_1 + 1 == read_2) + _GLF_IDENTITY(1, (1) << 0), (false ? _GLF_FUZZED(69219u) : _GLF_IDENTITY(uint(read_1 + 1 == read_2) + 1, min(uint(_GLF_IDENTITY(read_1 + 1 == read_2, bool(bool(read_1 + 1 == read_2)))) + 1, uint(_GLF_IDENTITY(read_1, _GLF_IDENTITY((read_1) + (1u ^ 1u), max((read_1) + (1u ^ 1u), _GLF_IDENTITY((read_1) + (1u ^ 1u), 0u ^ ((read_1) + (1u ^ 1u)))))) + 1 == read_2) + _GLF_IDENTITY(1, (1) | (1)))))) : _GLF_FUZZED(next_virtual_gid))), (_GLF_IDENTITY(_GLF_IDENTITY(uint(read_1 + 1 == read_2) + 1, uint(uvec2(uint(read_1 + 1 == read_2) + 1, 1u))), (true ? _GLF_IDENTITY(uint(read_1 + 1 == read_2) + _GLF_IDENTITY(1, (1) << 0), (false ? _GLF_FUZZED(69219u) : _GLF_IDENTITY(uint(read_1 + 1 == read_2) + 1, min(uint(_GLF_IDENTITY(read_1 + 1 == read_2, bool(bool(read_1 + 1 == read_2)))) + 1, uint(_GLF_IDENTITY(read_1, _GLF_IDENTITY((read_1) + (1u ^ 1u), max((read_1) + (1u ^ 1u), _GLF_IDENTITY((read_1) + (1u ^ 1u), 0u ^ ((read_1) + (1u ^ 1u)))))) + 1 == read_2) + _GLF_IDENTITY(1, (1) | (1)))))) : _GLF_FUZZED(next_virtual_gid)))) + 0u))))) - 0u))), uint(_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1, (read_1 + 1) | (read_1 + 1)), uint(uvec4(read_1 + 1, _GLF_IDENTITY(1u, (1u) | (_GLF_IDENTITY(1u, min(1u, 1u)))), 0u, 1u))) == read_2) + 1), clamp(clamp(uint(read_1 + 1 == _GLF_IDENTITY(read_2, min(read_2, _GLF_IDENTITY(read_2, (read_2) | (read_2))))) + 1, _GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(read_1, _GLF_IDENTITY((read_1) >> (0u >> _GLF_IDENTITY(uint(4u), _GLF_IDENTITY(uint(4u), (uint(4u)) / 1u))), (false ? _GLF_FUZZED(workgroup_size) : (read_1) >> _GLF_IDENTITY((0u >> _GLF_IDENTITY(uint(4u), _GLF_IDENTITY(uint(4u), (uint(4u)) / 1u))), (true ? (0u >> _GLF_IDENTITY(uint(4u), _GLF_IDENTITY(uint(4u), (uint(4u)) / 1u))) : _GLF_FUZZED(num_workgroup)))))) + _GLF_IDENTITY(1, int(ivec2(1, 0))) == read_2) + 1, (uint(_GLF_IDENTITY(read_1, _GLF_IDENTITY((read_1) >> (0u >> _GLF_IDENTITY(uint(4u), _GLF_IDENTITY(uint(4u), (uint(4u)) / 1u))), (false ? _GLF_FUZZED(workgroup_size) : (read_1) >> _GLF_IDENTITY((0u >> _GLF_IDENTITY(uint(4u), _GLF_IDENTITY(uint(4u), (uint(4u)) / 1u))), (true ? (0u >> _GLF_IDENTITY(uint(4u), _GLF_IDENTITY(uint(4u), (uint(4u)) / 1u))) : _GLF_FUZZED(num_workgroup)))))) + _GLF_IDENTITY(1, int(ivec2(1, 0))) == read_2) + 1) | (uint(_GLF_IDENTITY(read_1, _GLF_IDENTITY((read_1) >> (0u >> _GLF_IDENTITY(uint(4u), _GLF_IDENTITY(uint(4u), (uint(4u)) / 1u))), (false ? _GLF_FUZZED(workgroup_size) : (read_1) >> _GLF_IDENTITY((0u >> _GLF_IDENTITY(uint(4u), _GLF_IDENTITY(uint(4u), (uint(4u)) / 1u))), (true ? (0u >> _GLF_IDENTITY(uint(4u), _GLF_IDENTITY(uint(4u), (uint(4u)) / 1u))) : _GLF_FUZZED(num_workgroup)))))) + _GLF_IDENTITY(1, int(ivec2(1, 0))) == read_2) + 1)), (_GLF_IDENTITY(true ? _GLF_IDENTITY(uint(_GLF_IDENTITY(read_1 + 1 == _GLF_IDENTITY(read_2, (read_2) / 1u), bool(bool(read_1 + 1 == _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(read_2, 1u * (read_2)), (read_2) / 1u), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(read_2, (read_2) / 1u), 1u * (_GLF_IDENTITY(_GLF_IDENTITY(read_2, (read_2) / 1u), max(_GLF_IDENTITY(read_2, (read_2) / 1u), _GLF_IDENTITY(read_2, (read_2) / 1u)))))))))))) + _GLF_IDENTITY(1, min(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) - int(_GLF_ZERO(0.0, injectionSwitch.x)))) >> 0), 1)), (false ? _GLF_FUZZED(69219u) : _GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_IDENTITY(read_1, max(_GLF_IDENTITY(_GLF_IDENTITY(read_1, (read_1) - 0u), max(_GLF_IDENTITY(read_1, _GLF_IDENTITY((read_1), min(_GLF_IDENTITY((read_1), (0u | 0u) ^ ((read_1))), (read_1))) - 0u), _GLF_IDENTITY(read_1, (read_1) - 0u))), _GLF_IDENTITY(read_1, (read_1) ^ 0u))) + 1, ~ (~ (_GLF_IDENTITY(read_1, max(_GLF_IDENTITY(_GLF_IDENTITY(read_1, (read_1) - 0u), max(_GLF_IDENTITY(read_1, _GLF_IDENTITY((read_1), min(_GLF_IDENTITY((read_1), (0u | 0u) ^ ((_GLF_IDENTITY(read_1, (read_1) >> 0u)))), _GLF_IDENTITY((read_1), (_GLF_IDENTITY((read_1), (false ? _GLF_FUZZED(next_virtual_gid) : (read_1)))) + 0u))) - 0u), _GLF_IDENTITY(read_1, (read_1) - 0u))), _GLF_IDENTITY(read_1, (read_1) ^ 0u))) + 1))) == _GLF_IDENTITY(read_2, ~ (_GLF_IDENTITY(_GLF_IDENTITY(~ (read_2), _GLF_IDENTITY((~ (read_2)), uint(uint((~ (read_2))))) - 0u), ~ (~ (_GLF_IDENTITY(~ (read_2), _GLF_IDENTITY((~ (read_2)), uint(uint((~ (read_2))))) - 0u))))))) + 1, min(uint(_GLF_IDENTITY(read_1 + 1 == read_2, (read_1 + 1 == read_2) || false)) + 1, uint(_GLF_IDENTITY(read_1, max(read_1, _GLF_IDENTITY(read_1, min(read_1, read_1)))) + _GLF_IDENTITY(1, (_GLF_IDENTITY(1, 0 | (1))) | (1)) == read_2) + 1)))) : _GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(_GLF_IDENTITY(next_virtual_gid, (_GLF_IDENTITY(next_virtual_gid, uint(_GLF_IDENTITY(uvec4(next_virtual_gid, 0u, 1u, 1u), (uvec4(next_virtual_gid, 0u, 1u, 1u)) / uvec4(1u, 1u, 1u, 1u))))) | (next_virtual_gid))), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_FUZZED(next_virtual_gid), clamp(_GLF_FUZZED(next_virtual_gid), _GLF_FUZZED(next_virtual_gid), _GLF_FUZZED(next_virtual_gid)))), clamp((_GLF_IDENTITY(_GLF_FUZZED(next_virtual_gid), clamp(_GLF_FUZZED(next_virtual_gid), _GLF_FUZZED(next_virtual_gid), _GLF_FUZZED(next_virtual_gid)))), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_FUZZED(next_virtual_gid), clamp(_GLF_FUZZED(next_virtual_gid), _GLF_FUZZED(next_virtual_gid), _GLF_FUZZED(next_virtual_gid)))), uint(uvec4((_GLF_IDENTITY(_GLF_FUZZED(next_virtual_gid), clamp(_GLF_FUZZED(next_virtual_gid), _GLF_FUZZED(next_virtual_gid), _GLF_FUZZED(next_virtual_gid)))), 1u, 1u, 0u))), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_FUZZED(next_virtual_gid), clamp(_GLF_FUZZED(next_virtual_gid), _GLF_FUZZED(next_virtual_gid), _GLF_FUZZED(next_virtual_gid)))), _GLF_IDENTITY(uint(uvec2((_GLF_IDENTITY(_GLF_FUZZED(next_virtual_gid), clamp(_GLF_FUZZED(next_virtual_gid), _GLF_FUZZED(next_virtual_gid), _GLF_FUZZED(next_virtual_gid)))), 0u)), (uint(uvec2((_GLF_IDENTITY(_GLF_FUZZED(next_virtual_gid), clamp(_GLF_FUZZED(next_virtual_gid), _GLF_FUZZED(next_virtual_gid), _GLF_FUZZED(next_virtual_gid)))), 0u))) + 0u)))) << 0u), clamp(_GLF_IDENTITY(_GLF_FUZZED(_GLF_IDENTITY(next_virtual_gid, clamp(next_virtual_gid, _GLF_IDENTITY(next_virtual_gid, 1u * (next_virtual_gid)), next_virtual_gid))), (_GLF_IDENTITY(_GLF_FUZZED(next_virtual_gid), clamp(_GLF_FUZZED(_GLF_IDENTITY(next_virtual_gid, (true ? next_virtual_gid : _GLF_FUZZED(read_1)))), _GLF_FUZZED(next_virtual_gid), _GLF_IDENTITY(_GLF_FUZZED(next_virtual_gid), 0u + (_GLF_FUZZED(next_virtual_gid)))))) << 0u), _GLF_IDENTITY(_GLF_FUZZED(next_virtual_gid), (_GLF_IDENTITY(_GLF_FUZZED(next_virtual_gid), clamp(_GLF_FUZZED(next_virtual_gid), _GLF_FUZZED(next_virtual_gid), _GLF_FUZZED(next_virtual_gid)))) << 0u), _GLF_IDENTITY(_GLF_FUZZED(next_virtual_gid), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_FUZZED(next_virtual_gid), _GLF_IDENTITY(clamp(_GLF_FUZZED(_GLF_IDENTITY(next_virtual_gid, (_GLF_IDENTITY(next_virtual_gid, ~ (~ (next_virtual_gid)))) | (next_virtual_gid))), _GLF_FUZZED(next_virtual_gid), _GLF_FUZZED(next_virtual_gid)), clamp(clamp(_GLF_FUZZED(_GLF_IDENTITY(next_virtual_gid, (true ? next_virtual_gid : _GLF_FUZZED(subgroup_size)))), _GLF_FUZZED(next_virtual_gid), _GLF_FUZZED(next_virtual_gid)), clamp(_GLF_FUZZED(next_virtual_gid), _GLF_FUZZED(next_virtual_gid), _GLF_FUZZED(next_virtual_gid)), clamp(_GLF_FUZZED(next_virtual_gid), _GLF_FUZZED(next_virtual_gid), _GLF_FUZZED(next_virtual_gid)))))), (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_FUZZED(next_virtual_gid), _GLF_IDENTITY(clamp(_GLF_FUZZED(_GLF_IDENTITY(next_virtual_gid, (_GLF_IDENTITY(next_virtual_gid, ~ (~ (next_virtual_gid)))) | (next_virtual_gid))), _GLF_FUZZED(next_virtual_gid), _GLF_FUZZED(next_virtual_gid)), clamp(clamp(_GLF_FUZZED(_GLF_IDENTITY(next_virtual_gid, (true ? next_virtual_gid : _GLF_FUZZED(subgroup_size)))), _GLF_FUZZED(next_virtual_gid), _GLF_FUZZED(next_virtual_gid)), clamp(_GLF_FUZZED(next_virtual_gid), _GLF_FUZZED(next_virtual_gid), _GLF_FUZZED(next_virtual_gid)), clamp(_GLF_FUZZED(next_virtual_gid), _GLF_FUZZED(next_virtual_gid), _GLF_FUZZED(next_virtual_gid)))))), clamp((_GLF_IDENTITY(_GLF_FUZZED(next_virtual_gid), _GLF_IDENTITY(clamp(_GLF_FUZZED(_GLF_IDENTITY(next_virtual_gid, (_GLF_IDENTITY(next_virtual_gid, ~ (~ (next_virtual_gid)))) | (next_virtual_gid))), _GLF_FUZZED(next_virtual_gid), _GLF_FUZZED(next_virtual_gid)), clamp(clamp(_GLF_FUZZED(_GLF_IDENTITY(next_virtual_gid, (true ? next_virtual_gid : _GLF_FUZZED(subgroup_size)))), _GLF_FUZZED(next_virtual_gid), _GLF_FUZZED(next_virtual_gid)), clamp(_GLF_FUZZED(next_virtual_gid), _GLF_FUZZED(next_virtual_gid), _GLF_FUZZED(next_virtual_gid)), clamp(_GLF_FUZZED(next_virtual_gid), _GLF_FUZZED(next_virtual_gid), _GLF_FUZZED(next_virtual_gid)))))), (_GLF_IDENTITY(_GLF_FUZZED(next_virtual_gid), _GLF_IDENTITY(clamp(_GLF_FUZZED(_GLF_IDENTITY(next_virtual_gid, (_GLF_IDENTITY(next_virtual_gid, ~ (~ (next_virtual_gid)))) | (next_virtual_gid))), _GLF_FUZZED(next_virtual_gid), _GLF_FUZZED(next_virtual_gid)), clamp(clamp(_GLF_FUZZED(_GLF_IDENTITY(next_virtual_gid, (true ? next_virtual_gid : _GLF_FUZZED(subgroup_size)))), _GLF_FUZZED(next_virtual_gid), _GLF_FUZZED(next_virtual_gid)), clamp(_GLF_FUZZED(next_virtual_gid), _GLF_FUZZED(next_virtual_gid), _GLF_FUZZED(next_virtual_gid)), clamp(_GLF_FUZZED(next_virtual_gid), _GLF_FUZZED(next_virtual_gid), _GLF_FUZZED(next_virtual_gid)))))), (_GLF_IDENTITY(_GLF_FUZZED(next_virtual_gid), _GLF_IDENTITY(clamp(_GLF_FUZZED(_GLF_IDENTITY(next_virtual_gid, (_GLF_IDENTITY(next_virtual_gid, ~ (~ (next_virtual_gid)))) | (next_virtual_gid))), _GLF_FUZZED(next_virtual_gid), _GLF_FUZZED(next_virtual_gid)), clamp(clamp(_GLF_FUZZED(_GLF_IDENTITY(next_virtual_gid, (true ? next_virtual_gid : _GLF_FUZZED(subgroup_size)))), _GLF_FUZZED(next_virtual_gid), _GLF_FUZZED(next_virtual_gid)), clamp(_GLF_FUZZED(next_virtual_gid), _GLF_FUZZED(next_virtual_gid), _GLF_FUZZED(next_virtual_gid)), clamp(_GLF_FUZZED(next_virtual_gid), _GLF_FUZZED(next_virtual_gid), _GLF_FUZZED(next_virtual_gid))))))))) << 0u) << 0u))), ~ (~ (true ? _GLF_IDENTITY(uint(_GLF_IDENTITY(read_1 + 1 == _GLF_IDENTITY(read_2, (read_2) / 1u), bool(bool(read_1 + 1 == _GLF_IDENTITY(_GLF_IDENTITY(read_2, (read_2) / 1u), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(read_2, (read_2) / 1u), 1u * (_GLF_IDENTITY(_GLF_IDENTITY(read_2, (read_2) / 1u), max(_GLF_IDENTITY(read_2, (read_2) / _GLF_IDENTITY(1u, 0u ^ (1u))), _GLF_IDENTITY(read_2, (read_2) / 1u)))))))))))) + _GLF_IDENTITY(1, min(1, 1)), (false ? _GLF_FUZZED(69219u) : _GLF_IDENTITY(uint(_GLF_IDENTITY(read_1, max(_GLF_IDENTITY(_GLF_IDENTITY(read_1, (read_1) - 0u), max(_GLF_IDENTITY(read_1, _GLF_IDENTITY((read_1), min(_GLF_IDENTITY((read_1), (0u | 0u) ^ ((read_1))), (read_1))) - 0u), _GLF_IDENTITY(read_1, _GLF_IDENTITY((read_1), (_GLF_IDENTITY((read_1), min((read_1), _GLF_IDENTITY((read_1), ((read_1)) / 1u)))) << 0u) - 0u))), _GLF_IDENTITY(read_1, (read_1) ^ 0u))) + 1 == _GLF_IDENTITY(read_2, ~ (_GLF_IDENTITY(~ (read_2), _GLF_IDENTITY((~ (read_2)), uint(_GLF_IDENTITY(uint((~ (read_2))), min(_GLF_IDENTITY(uint((~ (read_2))), (uint((~ (read_2)))) - 0u), uint((~ (read_2))))))) - 0u)))) + 1, min(uint(read_1 + 1 == read_2) + 1, _GLF_IDENTITY(uint(_GLF_IDENTITY(read_1, max(read_1, _GLF_IDENTITY(read_1, min(read_1, read_1)))) + _GLF_IDENTITY(1, (1) | (1)) == read_2) + 1, 0u | (uint(_GLF_IDENTITY(read_1, max(read_1, _GLF_IDENTITY(read_1, min(read_1, read_1)))) + _GLF_IDENTITY(1, (1) | (1)) == read_2) + 1)))))) : _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(next_virtual_gid), clamp(_GLF_FUZZED(next_virtual_gid), _GLF_FUZZED(next_virtual_gid), _GLF_FUZZED(next_virtual_gid))), (_GLF_IDENTITY(_GLF_FUZZED(next_virtual_gid), clamp(_GLF_FUZZED(next_virtual_gid), _GLF_FUZZED(next_virtual_gid), _GLF_FUZZED(next_virtual_gid)))) << 0u), clamp(_GLF_IDENTITY(_GLF_FUZZED(next_virtual_gid), (_GLF_IDENTITY(_GLF_FUZZED(next_virtual_gid), clamp(_GLF_FUZZED(_GLF_IDENTITY(next_virtual_gid, (true ? next_virtual_gid : _GLF_FUZZED(read_1)))), _GLF_FUZZED(next_virtual_gid), _GLF_FUZZED(next_virtual_gid)))) << 0u), _GLF_IDENTITY(_GLF_FUZZED(next_virtual_gid), (_GLF_IDENTITY(_GLF_FUZZED(next_virtual_gid), clamp(_GLF_FUZZED(next_virtual_gid), _GLF_FUZZED(next_virtual_gid), _GLF_FUZZED(next_virtual_gid)))) << 0u), _GLF_IDENTITY(_GLF_FUZZED(next_virtual_gid), (_GLF_IDENTITY(_GLF_FUZZED(next_virtual_gid), _GLF_IDENTITY(clamp(_GLF_FUZZED(next_virtual_gid), _GLF_FUZZED(next_virtual_gid), _GLF_FUZZED(next_virtual_gid)), clamp(clamp(_GLF_FUZZED(next_virtual_gid), _GLF_FUZZED(next_virtual_gid), _GLF_FUZZED(next_virtual_gid)), clamp(_GLF_FUZZED(next_virtual_gid), _GLF_FUZZED(next_virtual_gid), _GLF_FUZZED(next_virtual_gid)), clamp(_GLF_FUZZED(next_virtual_gid), _GLF_FUZZED(next_virtual_gid), _GLF_FUZZED(next_virtual_gid)))))) << 0u)))))))), uint(_GLF_IDENTITY(read_1 + 1, uint(_GLF_IDENTITY(uvec4(_GLF_IDENTITY(read_1, clamp(_GLF_IDENTITY(read_1, (read_1) - 0u), _GLF_IDENTITY(read_1, ~ (~ (read_1))), read_1)) + 1, 1u, _GLF_IDENTITY(_GLF_IDENTITY(0u, uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (true ? _GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) : _GLF_FUZZED(-671.247))))))) + (_GLF_IDENTITY(0u, ~ (~ (_GLF_IDENTITY(0u, clamp(0u, 0u, 0u))))))), 0u | _GLF_IDENTITY((0u), ((0u)) >> 0u)), 1u), _GLF_IDENTITY(uvec4(0u, 0u, 0u, 0u) + (uvec4(read_1 + 1, 1u, _GLF_IDENTITY(0u, 0u | (0u)), 1u)), (uvec4(0u, 0u, 0u, 0u) + (uvec4(read_1 + 1, 1u, _GLF_IDENTITY(0u, 0u | (0u)), 1u))) ^ uvec4(0u, 0u, 0u, 0u))))) == read_2) + 1), clamp(uint(read_1 + 1 == read_2) + 1, _GLF_IDENTITY(uint(read_1 + 1 == read_2) + 1, (true ? _GLF_IDENTITY(uint(_GLF_IDENTITY(read_1 + 1 == read_2, (_GLF_IDENTITY(read_1 + 1 == read_2, _GLF_IDENTITY(bool(bool(read_1 + 1 == read_2)), false || (bool(bool(read_1 + 1 == read_2)))))) && true)) + 1, (false ? _GLF_FUZZED(_GLF_IDENTITY(69219u, uint(_GLF_ONE(1.0, injectionSwitch.y)) * (69219u))) : _GLF_IDENTITY(uint(read_1 + 1 == read_2) + _GLF_IDENTITY(1, (1) ^ 0), min(uint(read_1 + 1 == read_2) + 1, uint(_GLF_IDENTITY(read_1, _GLF_IDENTITY(_GLF_IDENTITY((read_1), max((read_1), (read_1))), ((read_1)) | ((read_1))) << 0u) + 1 == read_2) + 1)))) : _GLF_FUZZED(next_virtual_gid))), uint(_GLF_IDENTITY(_GLF_IDENTITY(read_1 + _GLF_IDENTITY(1, _GLF_IDENTITY(0, (0) | (0)) | (1)), uint(uvec4(_GLF_IDENTITY(read_1 + 1, uint(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (read_1 + 1)), 1u, 0u, 1u))) == read_2, (_GLF_IDENTITY(read_1 + _GLF_IDENTITY(1, _GLF_IDENTITY(0, (0) | (0)) | (1)), uint(uvec4(_GLF_IDENTITY(read_1 + 1, uint(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (read_1 + 1)), 1u, 0u, 1u))) == read_2) || false)) + 1), clamp(uint(read_1 + 1 == read_2) + 1, _GLF_IDENTITY(uint(read_1 + 1 == read_2) + 1, (_GLF_IDENTITY(true ? _GLF_IDENTITY(uint(read_1 + 1 == read_2) + 1, (_GLF_IDENTITY(false, bool(bvec2(false, false))) ? _GLF_IDENTITY(_GLF_FUZZED(69219u), (_GLF_FUZZED(69219u)) | 0u) : _GLF_IDENTITY(uint(read_1 + 1 == _GLF_IDENTITY(read_2, uint(uint(read_2)))) + _GLF_IDENTITY(1, (false ? _GLF_FUZZED(_injected_loop_counter) : 1)), min(uint(_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1, clamp(read_1 + 1, read_1 + 1, read_1 + 1)), (read_1 + 1) / 1u) == read_2) + 1, uint(read_1 + 1 == read_2) + 1)))) : _GLF_FUZZED(next_virtual_gid), (true ? _GLF_IDENTITY(uint(read_1 + 1 == read_2) + 1, (false ? _GLF_IDENTITY(_GLF_FUZZED(69219u), min(_GLF_FUZZED(69219u), _GLF_FUZZED(69219u))) : _GLF_IDENTITY(uint(read_1 + 1 == read_2) + _GLF_IDENTITY(1, (1) | 0), min(uint(read_1 + 1 == read_2) + 1, uint(_GLF_IDENTITY(read_1 + 1 == read_2, ! (! (read_1 + 1 == read_2)))) + 1)))) : _GLF_FUZZED(next_virtual_gid)) >> (0u | 0u)))), uint(_GLF_IDENTITY(read_1 + 1, uint(uvec4(read_1 + 1, 1u, _GLF_IDENTITY(0u, ~ (~ (0u))), 1u))) == _GLF_IDENTITY(read_2, (_GLF_IDENTITY(read_2, 1u * (_GLF_IDENTITY(read_2, 1u * (read_2))))) ^ _GLF_IDENTITY(0u, (0u) ^ 0u))) + _GLF_IDENTITY(1, int(int(1))))))), 4, _GLF_IDENTITY(64, ~ (~ (64))), 4);
       if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, true && (false)))), (false) || _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(-0.1)), bool(false)))))), (injectionSwitch.x > injectionSwitch.y))))
        {
        }
       else
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            continue;
           return;
          }
         if(_GLF_DEAD(false))
          continue;
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          continue;
        }
       if(_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) || false)) || false)))))
        {
         for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            {
             for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
              {
               return;
               if(_GLF_DEAD(false))
                break;
              }
            }
          }
         break;
        }
       if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, _GLF_IDENTITY(true, false || (true))), bvec2(bvec3(bvec2(false, true), false))))), _GLF_IDENTITY((_GLF_IDENTITY(false, bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec2(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec2(bvec2(false, true))))))), bvec2(bvec3(bvec2(false, true), false)))))) || false, (_GLF_IDENTITY((_GLF_IDENTITY(false, bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec2(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec2(bvec2(false, true))))))), bvec2(bvec3(bvec2(false, true), false)))))) || false, ! (! ((_GLF_IDENTITY(false, bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec2(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec2(bvec2(false, true))))))), bvec2(bvec3(bvec2(false, true), false)))))) || _GLF_IDENTITY(false, (false) || false))))) && true))))), (_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, true), _GLF_IDENTITY(bvec2(bvec3(bvec2(false, true), false)), bvec2(bvec4(bvec2(bvec3(bvec2(false, true), false)), false, false)))))), true && (_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, true), _GLF_IDENTITY(bvec2(bvec3(bvec2(false, true), false)), bvec2(bvec4(bvec2(bvec3(bvec2(false, true), false)), false, false)))))))))))) && true))
        {
         if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(643.299), _GLF_FUZZED((74.75 / 0.2))), vec2((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch)[1], float(float((injectionSwitch)[1])))), bvec2(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))).x > injectionSwitch.y))))
          {
          }
         else
          {
           if(_GLF_WRAPPED_IF_TRUE(true))
            {
             return;
            }
           else
            {
            }
           if(_GLF_DEAD(false))
            return;
          }
        }
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
        continue;
       if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
        continue;
       if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y))))))
        continue;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(vec2(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), 1.0)), (float(vec2(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), 1.0))) - 0.0))))))
        return;
      }
    }
   while(_GLF_WRAPPED_LOOP(false));
  }
 if(_GLF_WRAPPED_IF_FALSE(false))
  {
  }
 else
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), injectionSwitch, injectionSwitch)).y))))
      return;
     if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false || (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), (_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, bool(bvec4(injectionSwitch.x < injectionSwitch.y, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)))))) || false)))), false || (_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false || (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), (_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, bool(bvec4(injectionSwitch.x < injectionSwitch.y, false, _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false || (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), _GLF_IDENTITY(false, ! (! (false))))))))) || false)))))), ! (! (_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), ! (! (_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(_GLF_IDENTITY(true, _GLF_IDENTITY(! (! (_GLF_IDENTITY(true, bool(bvec4(true, false, false, true))))), false || (! (_GLF_IDENTITY(! (_GLF_IDENTITY(true, bool(bvec4(true, false, false, true)))), bool(bool(! (_GLF_IDENTITY(true, bool(bvec4(true, false, false, true))))))))))), (injectionSwitch.x < injectionSwitch.y))))))))))
      {
       if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
        }
       else
        {
         return;
        }
      }
     else
      {
      }
    }
  }
}
