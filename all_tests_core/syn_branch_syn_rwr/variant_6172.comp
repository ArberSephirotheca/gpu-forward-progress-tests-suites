#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec3(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_IDENTITY(false || (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true))), false || (false || (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true))) || false), false, false, true))))))))))), _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), bool(bvec2((injectionSwitch.x < injectionSwitch.y), true)))), false))), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec3(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(823.968))))), _GLF_IDENTITY(false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (false || (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false), bool(bvec3(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false), true, true))), false, false, true))))))), bool(bvec4(_GLF_IDENTITY(false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (false || (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false), bool(bvec3(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false), true, true))), false, false, true))))))), true, true, false))))))), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y) && true))), false))))))))
  {
   if(_GLF_DEAD(false))
    return;
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, _GLF_IDENTITY((false), bool(bvec2((false), false))) && true)), bool(bvec4(bool(_GLF_IDENTITY(false, (false) && true)), true, false, false)))), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, (false) && true)), ! (! (bool(_GLF_IDENTITY(false, (false) && true))))), bool(bvec4(bool(_GLF_IDENTITY(false, (false) && _GLF_IDENTITY(true, bool(bvec2(true, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / abs(1.0)) < injectionSwitch.y))))))), true, false, false)))), ! (_GLF_IDENTITY(! _GLF_IDENTITY((bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, (false) || false), true, false, true)))) && true)), bool(bvec4(bool(_GLF_IDENTITY(false, (false) && true)), true, _GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, false), _GLF_IDENTITY(bvec2(bvec2(bvec2(false, false))), bvec2(bvec3(bvec2(bvec2(bvec2(false, false))), false)))))), false))))), false || (_GLF_IDENTITY((bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, (false) || false), true, false, true)))) && true)), bool(bvec4(bool(_GLF_IDENTITY(false, (false) && true)), true, _GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, false), _GLF_IDENTITY(bvec2(bvec2(bvec2(false, false))), bvec2(bvec3(bvec2(bvec2(bvec2(false, false))), false)))))), false))))), ! (_GLF_IDENTITY(! ((bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, (false) || false), true, false, true)))) && true)), bool(bvec4(bool(_GLF_IDENTITY(false, (false) && true)), true, _GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, false), _GLF_IDENTITY(bvec2(bvec2(bvec2(false, false))), bvec2(bvec3(bvec2(bvec2(bvec2(false, false))), false)))))), false)))))), bool(bool(! ((bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, (false) || false), true, false, true)))) && true)), bool(bvec4(bool(_GLF_IDENTITY(false, (false) && true)), true, _GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, false), _GLF_IDENTITY(bvec2(bvec2(bvec2(false, false))), bvec2(bvec3(bvec2(bvec2(bvec2(false, false))), false)))))), false))))))))))))), ! (! (! (bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, (false) && true)), _GLF_IDENTITY(bool(bvec4(bool(_GLF_IDENTITY(false, (false) && true)), true, _GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(false, false), _GLF_IDENTITY(bvec2(bvec2(bvec2(false, false))), bvec2(bvec3(bvec2(bvec2(bvec2(false, false))), false))))), _GLF_IDENTITY(false, bool(bvec3(false, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) || (bool(_GLF_IDENTITY(bvec2(false, false), _GLF_IDENTITY(bvec2(_GLF_IDENTITY(bvec2(bvec2(false, false)), bvec2(bvec2(bvec2(bvec2(false, false)))))), bvec2(bvec3(bvec2(bvec2(bvec2(false, false))), false)))))))), false)), (bool(bvec4(bool(_GLF_IDENTITY(false, (false) && true)), true, _GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(false, false), _GLF_IDENTITY(bvec2(bvec2(bvec2(false, false))), bvec2(bvec3(bvec2(bvec2(bvec2(false, false))), false))))), _GLF_IDENTITY(false, bool(bvec3(false, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) || (bool(_GLF_IDENTITY(bvec2(false, false), _GLF_IDENTITY(bvec2(_GLF_IDENTITY(bvec2(bvec2(false, false)), bvec2(bvec2(bvec2(bvec2(false, false)))))), bvec2(bvec3(bvec2(bvec2(bvec2(false, false))), false)))))))), false))) || false))))))))), false, true)), _GLF_IDENTITY(false, ! (! (false))) || (bool(bvec3(_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, (false) && true)), bool(bvec4(bool(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), true && (_GLF_IDENTITY(false, (false) && true)))), true, false, false)))), ! _GLF_IDENTITY((! (bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, (false) && true)), _GLF_IDENTITY(bool(bvec4(bool(_GLF_IDENTITY(false, (false) && true)), true, false, false)), (bool(bvec4(bool(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), (_GLF_IDENTITY(false, (false) && _GLF_IDENTITY(true, (_GLF_IDENTITY(true, (true) || false)) || false))) || false)), _GLF_IDENTITY(_GLF_IDENTITY(true, ! (! (true))), ! (! (_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), (! (true)) || false)))))), false, false))) || false))))), ! (! ((! _GLF_IDENTITY((bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, (false) && true)), _GLF_IDENTITY(bool(bvec4(bool(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, bool(bvec2(false, true)))))) && true)), true, false, false)), (bool(bvec4(bool(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), (_GLF_IDENTITY(false, (false) && _GLF_IDENTITY(true, (_GLF_IDENTITY(true, (true) || false)) || false))) || false)), _GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, false || (true))))), false, false))) || false)))), ! (_GLF_IDENTITY(! ((bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, (false) && true)), _GLF_IDENTITY(bool(bvec4(bool(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, bool(bvec2(false, true)))))) && true)), true, false, false)), (bool(bvec4(bool(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), (_GLF_IDENTITY(false, (false) && _GLF_IDENTITY(true, (_GLF_IDENTITY(true, (true) || false)) || false))) || false)), _GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, false || (true))))), false, false))) || false))))), bool(bool(! ((bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, (false) && true)), _GLF_IDENTITY(bool(bvec4(bool(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, bool(bvec2(false, true)))))) && true)), true, false, false)), (bool(bvec4(bool(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), (_GLF_IDENTITY(false, (false) && _GLF_IDENTITY(true, (_GLF_IDENTITY(true, (true) || false)) || false))) || false)), _GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, false || (true))))), false, false))) || false))))))))))))))), false, true)))))), (_GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)), _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0))) * mat2(1.0), (false ? _GLF_FUZZED(vec2(543.006, 2.9)) : (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0))) * mat2(1.0)))) : _GLF_FUZZED(injectionSwitch))).x > _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y))))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(false))
  return;
 uint subgroup_size = gl_SubgroupSize;
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   return;
  }
 if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(false || (_GLF_DEAD(false)), (false || _GLF_IDENTITY((_GLF_DEAD(false)), ((_GLF_DEAD(false))) && true)) || false)), bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))), false || (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)), false || (_GLF_DEAD(false)))))))), false, false, true))))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec3(_GLF_DEAD(false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)), true && (_GLF_IDENTITY(bool(bvec3(_GLF_DEAD(false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)), ! (! (bool(bvec3(_GLF_DEAD(false), _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, vec2(vec3(injectionSwitch, _GLF_ZERO(0.0, injectionSwitch.x)))).y)), false)))))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || ((injectionSwitch.x > injectionSwitch.y)))) || false))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / abs(vec2(1.0, 1.0))).x > injectionSwitch.y)), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(true && (false), (true && (_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) || false))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, (false) || false)))))) && true))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(mat3x2(injectionSwitch.y, 1.0, 0.0, 1.0, 1.0, 0.0)), mix(float(float(mat3x2(injectionSwitch.y, 1.0, 0.0, 1.0, 1.0, 0.0))), float(_GLF_FUZZED(381.473)), bool(false)))), _GLF_IDENTITY(float(_GLF_IDENTITY(vec4(injectionSwitch.y, 1.0, 1.0, 1.0), (_GLF_IDENTITY(vec4(injectionSwitch.y, 1.0, 1.0, 1.0), min(vec4(injectionSwitch.y, 1.0, 1.0, 1.0), vec4(injectionSwitch.y, 1.0, 1.0, 1.0)))) / vec4(1.0, 1.0, 1.0, 1.0))), min(_GLF_IDENTITY(float(_GLF_IDENTITY(vec4(injectionSwitch.y, _GLF_IDENTITY(1.0, min(1.0, 1.0)), 1.0, 1.0), (vec4(injectionSwitch.y, 1.0, 1.0, 1.0)) / vec4(1.0, 1.0, _GLF_IDENTITY(1.0, _GLF_IDENTITY(dot(_GLF_IDENTITY(vec4(0.0, 0.0, log(1.0), 1.0), (true ? _GLF_IDENTITY(vec4(0.0, 0.0, log(1.0), 1.0), _GLF_IDENTITY((vec4(0.0, 0.0, log(1.0), 1.0)) * mat4(1.0), max((vec4(0.0, 0.0, log(1.0), 1.0)) * mat4(1.0), (vec4(0.0, 0.0, log(1.0), 1.0)) * mat4(1.0)))) : _GLF_FUZZED(step(vec4(3.3, -108.268, -811.374, 599.271), vec4(95.79, 9053.1508, 5617.8569, -2.8))))), vec4(sqrt(0.0), _GLF_IDENTITY(0.0, float(mat2x3(0.0, 0.0, 0.0, tan(0.0), tan(0.0), abs(0.0)))), 0.0, 1.0)), dot(vec4(_GLF_IDENTITY(0.0, 1.0 * (_GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(1.3) : 0.0)))), 0.0, log(1.0), _GLF_IDENTITY(1.0, (_GLF_IDENTITY(false, ! (! (false))) ? _GLF_FUZZED(atan(-6.3, -277.026)) : 1.0))), vec4(sqrt(0.0), 0.0, _GLF_IDENTITY(0.0, float(mat2(_GLF_IDENTITY(0.0, (0.0) / 1.0), 0.0, log(1.0), sqrt(0.0)))), 1.0))) * (1.0)), _GLF_IDENTITY(1.0, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? 1.0 : _GLF_IDENTITY(_GLF_FUZZED(-3.3), float(_GLF_IDENTITY(mat3(_GLF_FUZZED(-3.3), 0.0, 1.0, exp(tan(0.0)), 1.0, 1.0, 0.0, 0.0, 1.0), mat3(1.0) * (mat3(_GLF_FUZZED(-3.3), 0.0, 1.0, exp(tan(0.0)), 1.0, 1.0, 0.0, 0.0, 1.0)))))))))), (_GLF_IDENTITY(float(_GLF_IDENTITY(vec4(injectionSwitch.y, _GLF_IDENTITY(1.0, min(1.0, 1.0)), 1.0, 1.0), (vec4(injectionSwitch.y, 1.0, 1.0, 1.0)) / vec4(1.0, 1.0, _GLF_IDENTITY(1.0, _GLF_IDENTITY(dot(_GLF_IDENTITY(vec4(0.0, 0.0, log(1.0), 1.0), (true ? _GLF_IDENTITY(vec4(0.0, 0.0, log(1.0), 1.0), _GLF_IDENTITY((vec4(0.0, 0.0, log(1.0), 1.0)) * mat4(1.0), max((vec4(0.0, 0.0, log(1.0), 1.0)) * mat4(1.0), (vec4(0.0, 0.0, log(1.0), 1.0)) * mat4(1.0)))) : _GLF_FUZZED(step(vec4(3.3, -108.268, -811.374, 599.271), vec4(95.79, 9053.1508, 5617.8569, -2.8))))), vec4(sqrt(0.0), _GLF_IDENTITY(0.0, float(mat2x3(0.0, 0.0, 0.0, tan(0.0), tan(0.0), abs(0.0)))), 0.0, 1.0)), dot(vec4(_GLF_IDENTITY(0.0, 1.0 * (_GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(1.3) : 0.0)))), 0.0, log(1.0), _GLF_IDENTITY(1.0, (_GLF_IDENTITY(false, ! (! (false))) ? _GLF_FUZZED(atan(-6.3, -277.026)) : 1.0))), vec4(sqrt(0.0), 0.0, _GLF_IDENTITY(0.0, float(mat2(_GLF_IDENTITY(0.0, (0.0) / 1.0), 0.0, log(1.0), sqrt(0.0)))), 1.0))) * (1.0)), _GLF_IDENTITY(1.0, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? 1.0 : _GLF_IDENTITY(_GLF_FUZZED(-3.3), float(_GLF_IDENTITY(mat3(_GLF_FUZZED(-3.3), 0.0, 1.0, exp(tan(0.0)), 1.0, 1.0, 0.0, 0.0, 1.0), mat3(1.0) * (mat3(_GLF_FUZZED(-3.3), 0.0, 1.0, exp(tan(0.0)), 1.0, 1.0, 0.0, 0.0, 1.0)))))))))), clamp(float(_GLF_IDENTITY(vec4(injectionSwitch.y, _GLF_IDENTITY(1.0, min(1.0, 1.0)), 1.0, 1.0), (vec4(injectionSwitch.y, 1.0, 1.0, 1.0)) / vec4(1.0, 1.0, _GLF_IDENTITY(1.0, _GLF_IDENTITY(dot(_GLF_IDENTITY(vec4(0.0, 0.0, log(1.0), 1.0), (true ? _GLF_IDENTITY(vec4(0.0, 0.0, log(1.0), 1.0), _GLF_IDENTITY((vec4(0.0, 0.0, log(1.0), 1.0)) * mat4(1.0), max((vec4(0.0, 0.0, log(1.0), 1.0)) * mat4(1.0), (vec4(0.0, 0.0, log(1.0), 1.0)) * mat4(1.0)))) : _GLF_FUZZED(step(vec4(3.3, -108.268, -811.374, 599.271), vec4(95.79, 9053.1508, 5617.8569, -2.8))))), vec4(sqrt(0.0), _GLF_IDENTITY(0.0, float(mat2x3(0.0, 0.0, 0.0, tan(0.0), tan(0.0), abs(0.0)))), 0.0, 1.0)), dot(vec4(_GLF_IDENTITY(0.0, 1.0 * (_GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(1.3) : 0.0)))), 0.0, log(1.0), _GLF_IDENTITY(1.0, (_GLF_IDENTITY(false, ! (! (false))) ? _GLF_FUZZED(atan(-6.3, -277.026)) : 1.0))), vec4(sqrt(0.0), 0.0, _GLF_IDENTITY(0.0, float(mat2(_GLF_IDENTITY(0.0, (0.0) / 1.0), 0.0, log(1.0), sqrt(0.0)))), 1.0))) * (1.0)), _GLF_IDENTITY(1.0, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? 1.0 : _GLF_IDENTITY(_GLF_FUZZED(-3.3), float(_GLF_IDENTITY(mat3(_GLF_FUZZED(-3.3), 0.0, 1.0, exp(tan(0.0)), 1.0, 1.0, 0.0, 0.0, 1.0), mat3(1.0) * (mat3(_GLF_FUZZED(-3.3), 0.0, 1.0, exp(tan(0.0)), 1.0, 1.0, 0.0, 0.0, 1.0)))))))))), float(_GLF_IDENTITY(vec4(injectionSwitch.y, _GLF_IDENTITY(1.0, min(1.0, 1.0)), 1.0, 1.0), (vec4(injectionSwitch.y, 1.0, 1.0, 1.0)) / vec4(1.0, 1.0, _GLF_IDENTITY(1.0, _GLF_IDENTITY(dot(_GLF_IDENTITY(vec4(0.0, 0.0, log(1.0), 1.0), (true ? _GLF_IDENTITY(vec4(0.0, 0.0, log(1.0), 1.0), _GLF_IDENTITY((vec4(0.0, 0.0, log(1.0), 1.0)) * mat4(1.0), max((vec4(0.0, 0.0, log(1.0), 1.0)) * mat4(1.0), (vec4(0.0, 0.0, log(1.0), 1.0)) * mat4(1.0)))) : _GLF_FUZZED(step(vec4(3.3, -108.268, -811.374, 599.271), vec4(95.79, 9053.1508, 5617.8569, -2.8))))), vec4(sqrt(0.0), _GLF_IDENTITY(0.0, float(mat2x3(0.0, 0.0, 0.0, tan(0.0), tan(0.0), abs(0.0)))), 0.0, 1.0)), dot(vec4(_GLF_IDENTITY(0.0, 1.0 * (_GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(1.3) : 0.0)))), 0.0, log(1.0), _GLF_IDENTITY(1.0, (_GLF_IDENTITY(false, ! (! (false))) ? _GLF_FUZZED(atan(-6.3, -277.026)) : 1.0))), vec4(sqrt(0.0), 0.0, _GLF_IDENTITY(0.0, float(mat2(_GLF_IDENTITY(0.0, (0.0) / 1.0), 0.0, log(1.0), sqrt(0.0)))), 1.0))) * (1.0)), _GLF_IDENTITY(1.0, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? 1.0 : _GLF_IDENTITY(_GLF_FUZZED(-3.3), float(_GLF_IDENTITY(mat3(_GLF_FUZZED(-3.3), 0.0, 1.0, exp(tan(0.0)), 1.0, 1.0, 0.0, 0.0, 1.0), mat3(1.0) * (mat3(_GLF_FUZZED(-3.3), 0.0, 1.0, exp(tan(0.0)), 1.0, 1.0, 0.0, 0.0, 1.0)))))))))), float(_GLF_IDENTITY(vec4(injectionSwitch.y, _GLF_IDENTITY(1.0, min(1.0, 1.0)), 1.0, 1.0), (vec4(injectionSwitch.y, 1.0, 1.0, 1.0)) / vec4(1.0, 1.0, _GLF_IDENTITY(1.0, _GLF_IDENTITY(dot(_GLF_IDENTITY(vec4(0.0, 0.0, log(1.0), 1.0), (true ? _GLF_IDENTITY(vec4(0.0, 0.0, log(1.0), 1.0), _GLF_IDENTITY((vec4(0.0, 0.0, log(1.0), 1.0)) * mat4(1.0), max((vec4(0.0, 0.0, log(1.0), 1.0)) * mat4(1.0), (vec4(0.0, 0.0, log(1.0), 1.0)) * mat4(1.0)))) : _GLF_FUZZED(step(vec4(3.3, -108.268, -811.374, 599.271), vec4(95.79, 9053.1508, 5617.8569, -2.8))))), vec4(sqrt(0.0), _GLF_IDENTITY(0.0, float(mat2x3(0.0, 0.0, 0.0, tan(0.0), tan(0.0), abs(0.0)))), 0.0, 1.0)), dot(vec4(_GLF_IDENTITY(0.0, 1.0 * (_GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(1.3) : 0.0)))), 0.0, log(1.0), _GLF_IDENTITY(1.0, (_GLF_IDENTITY(false, ! (! (false))) ? _GLF_FUZZED(atan(-6.3, -277.026)) : 1.0))), vec4(sqrt(0.0), 0.0, _GLF_IDENTITY(0.0, float(mat2(_GLF_IDENTITY(0.0, (0.0) / 1.0), 0.0, log(1.0), sqrt(0.0)))), 1.0))) * (1.0)), _GLF_IDENTITY(1.0, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? 1.0 : _GLF_IDENTITY(_GLF_FUZZED(-3.3), float(_GLF_IDENTITY(mat3(_GLF_FUZZED(-3.3), 0.0, 1.0, exp(tan(0.0)), 1.0, 1.0, 0.0, 0.0, 1.0), mat3(1.0) * (mat3(_GLF_FUZZED(-3.3), 0.0, 1.0, exp(tan(0.0)), 1.0, 1.0, 0.0, 0.0, 1.0))))))))))))) - 0.0), float(_GLF_IDENTITY(vec4(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y, 1.0, _GLF_IDENTITY(1.0, mix(float(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, clamp(1.0, _GLF_IDENTITY(1.0, float(mat2x4(1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0))), _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(83.24)), bool(false)))))) / 1.0)), float(_GLF_IDENTITY(_GLF_FUZZED(37.29), (_GLF_FUZZED(37.29)) - 0.0)), bool(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && _GLF_IDENTITY(true, false || (true))))), (_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).y, (injectionSwitch.x > injectionSwitch.y) && true)), ! (! ((_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).y, (injectionSwitch.x > injectionSwitch.y) && true))))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), 1.0), _GLF_IDENTITY((vec4(injectionSwitch.y, 1.0, 1.0, _GLF_IDENTITY(1.0, min(1.0, _GLF_IDENTITY(1.0, (1.0) / determinant(_GLF_IDENTITY(mat2(cos(0.0), 1.0, 0.0, 1.0), mat2(mat2x4(mat2(cos(0.0), 1.0, 0.0, 1.0)))))))))) / vec4(1.0, 1.0, 1.0, 1.0), clamp((_GLF_IDENTITY(vec4(injectionSwitch.y, 1.0, 1.0, _GLF_IDENTITY(1.0, min(1.0, _GLF_IDENTITY(1.0, (1.0) / determinant(mat2(cos(0.0), 1.0, 0.0, 1.0)))))), vec4(mat2x3(_GLF_IDENTITY(vec4(injectionSwitch.y, 1.0, 1.0, _GLF_IDENTITY(1.0, min(1.0, _GLF_IDENTITY(1.0, (1.0) / determinant(mat2(cos(0.0), 1.0, 0.0, 1.0)))))), vec4(mat4(vec4(injectionSwitch.y, 1.0, 1.0, _GLF_IDENTITY(1.0, min(1.0, _GLF_IDENTITY(1.0, (1.0) / determinant(mat2(cos(0.0), 1.0, 0.0, 1.0)))))), 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0))), 1.0, determinant(mat3(1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0)))))) / vec4(1.0, 1.0, 1.0, 1.0), (vec4(injectionSwitch.y, 1.0, 1.0, _GLF_IDENTITY(1.0, min(1.0, _GLF_IDENTITY(1.0, (1.0) / determinant(mat2(cos(0.0), 1.0, 0.0, 1.0))))))) / vec4(1.0, 1.0, 1.0, 1.0), _GLF_IDENTITY((vec4(injectionSwitch.y, 1.0, 1.0, _GLF_IDENTITY(1.0, _GLF_IDENTITY(min(1.0, _GLF_IDENTITY(1.0, (1.0) / determinant(mat2(cos(0.0), 1.0, 0.0, 1.0)))), clamp(_GLF_IDENTITY(min(1.0, _GLF_IDENTITY(1.0, (1.0) / determinant(mat2(cos(0.0), 1.0, 0.0, 1.0)))), (true ? min(1.0, _GLF_IDENTITY(1.0, (1.0) / determinant(mat2(cos(0.0), 1.0, 0.0, 1.0)))) : _GLF_FUZZED(distance(vec4(74.96, 2.8, 6350.0440, 66.44), vec4(-1369.0927, 8188.1918, -1143.4719, 1278.5247))))), min(1.0, _GLF_IDENTITY(1.0, (1.0) / determinant(mat2(cos(0.0), 1.0, 0.0, 1.0)))), min(1.0, _GLF_IDENTITY(1.0, (1.0) / determinant(mat2(cos(0.0), 1.0, 0.0, 1.0))))))))) / vec4(1.0, 1.0, 1.0, 1.0), _GLF_IDENTITY((_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? (vec4(injectionSwitch.y, 1.0, 1.0, _GLF_IDENTITY(1.0, min(1.0, _GLF_IDENTITY(1.0, (1.0) / determinant(mat2(cos(0.0), 1.0, 0.0, 1.0))))))) / vec4(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-7.4)), float(1.0), bool(true)))) - 0.0), 1.0, 1.0, 1.0) : _GLF_FUZZED(vec4(-203.825, -9.6, 4.7, -242.638))), vec4(mat3x2(_GLF_IDENTITY((_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? (vec4(injectionSwitch.y, 1.0, 1.0, _GLF_IDENTITY(1.0, min(1.0, _GLF_IDENTITY(1.0, (1.0) / determinant(mat2(cos(0.0), 1.0, 0.0, 1.0))))))) / vec4(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-7.4)), float(1.0), bool(true)))) - 0.0), 1.0, 1.0, 1.0) : _GLF_FUZZED(vec4(-203.825, -9.6, 4.7, -242.638))), (_GLF_IDENTITY((_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? (vec4(injectionSwitch.y, 1.0, 1.0, _GLF_IDENTITY(1.0, min(1.0, _GLF_IDENTITY(1.0, (1.0) / determinant(mat2(cos(0.0), 1.0, 0.0, 1.0))))))) / vec4(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-7.4)), float(1.0), bool(true)))) - 0.0), 1.0, 1.0, 1.0) : _GLF_FUZZED(vec4(-203.825, -9.6, 4.7, -242.638))), max((_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? (vec4(injectionSwitch.y, 1.0, 1.0, _GLF_IDENTITY(1.0, min(1.0, _GLF_IDENTITY(1.0, (1.0) / determinant(mat2(cos(0.0), 1.0, 0.0, 1.0))))))) / vec4(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-7.4)), float(1.0), bool(true)))) - 0.0), 1.0, 1.0, 1.0) : _GLF_FUZZED(vec4(-203.825, -9.6, 4.7, -242.638))), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? (vec4(injectionSwitch.y, 1.0, 1.0, _GLF_IDENTITY(1.0, min(1.0, _GLF_IDENTITY(1.0, (1.0) / determinant(mat2(cos(0.0), 1.0, 0.0, 1.0))))))) / vec4(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-7.4)), float(1.0), bool(true)))) - 0.0), 1.0, 1.0, 1.0) : _GLF_FUZZED(vec4(-203.825, -9.6, 4.7, -242.638)))))) - vec4(0.0, 0.0, 0.0, 0.0)), 1.0, 1.0)))))))))))))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false)))))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   return;
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 uint num_workgroup = gl_NumWorkGroups.x;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, false)))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && ((injectionSwitch.x > injectionSwitch.y)))), ! (! (_GLF_FALSE(_GLF_IDENTITY(false, (false) && true), (injectionSwitch.x > injectionSwitch.y)))))))
  return;
 if(_GLF_DEAD(false))
  barrier();
 uint workgroup_size = _GLF_IDENTITY(gl_WorkGroupSize, (true ? _GLF_IDENTITY(gl_WorkGroupSize, uvec3(0u, 0u, 0u) ^ (_GLF_IDENTITY(gl_WorkGroupSize, uvec3(uvec4(gl_WorkGroupSize, 0u))))) : _GLF_FUZZED(uvec3(122712u, 19721u, 60182u)))).x;
 if(_GLF_DEAD(false))
  barrier();
 uint workgroup_id = _GLF_IDENTITY(gl_WorkGroupID, (_GLF_IDENTITY(false ? _GLF_FUZZED(uvec3(128150u, 43495u, 190701u)) : gl_WorkGroupID, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! (! (false)))), (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! (! (false)))), (! (_GLF_IDENTITY(false, ! (! (false))))) || false), ! (! (! (_GLF_IDENTITY(false, ! (! (false)))))))) && true))) ? _GLF_FUZZED(_GLF_IDENTITY(uvec3(128150u, 43495u, 190701u), max(_GLF_IDENTITY(uvec3(128150u, 43495u, 190701u), uvec3(uvec4(_GLF_IDENTITY(uvec3(128150u, 43495u, 190701u), (uvec3(128150u, 43495u, 190701u)) | (uvec3(128150u, 43495u, 190701u))), 0u))), uvec3(128150u, 43495u, 190701u)))) : gl_WorkGroupID, (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! (! (false)))), (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! (! (false)))), (! (_GLF_IDENTITY(false, ! (! (false))))) || false), ! (! (! (_GLF_IDENTITY(false, ! (! (false)))))))) && true))) ? _GLF_FUZZED(_GLF_IDENTITY(uvec3(128150u, 43495u, 190701u), max(_GLF_IDENTITY(uvec3(128150u, 43495u, 190701u), uvec3(uvec4(_GLF_IDENTITY(uvec3(128150u, 43495u, 190701u), (uvec3(128150u, 43495u, 190701u)) | (uvec3(128150u, 43495u, 190701u))), 0u))), uvec3(128150u, 43495u, 190701u)))) : gl_WorkGroupID) | (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! (! (false)))), (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! (! (false)))), (! (_GLF_IDENTITY(false, ! (! (false))))) || false), ! (! (! (_GLF_IDENTITY(false, ! (! (false)))))))) && true))) ? _GLF_FUZZED(_GLF_IDENTITY(uvec3(128150u, 43495u, 190701u), max(_GLF_IDENTITY(uvec3(128150u, 43495u, 190701u), uvec3(uvec4(_GLF_IDENTITY(uvec3(128150u, 43495u, 190701u), (uvec3(128150u, 43495u, 190701u)) | (uvec3(128150u, 43495u, 190701u))), 0u))), uvec3(128150u, 43495u, 190701u)))) : gl_WorkGroupID, (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! (! (false)))), (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! (! (false)))), (! (_GLF_IDENTITY(false, ! (! (false))))) || false), ! (! (! (_GLF_IDENTITY(false, ! (! (false)))))))) && true))) ? _GLF_FUZZED(_GLF_IDENTITY(uvec3(128150u, 43495u, 190701u), max(_GLF_IDENTITY(uvec3(128150u, 43495u, 190701u), uvec3(uvec4(_GLF_IDENTITY(uvec3(128150u, 43495u, 190701u), (uvec3(128150u, 43495u, 190701u)) | (uvec3(128150u, 43495u, 190701u))), 0u))), uvec3(128150u, 43495u, 190701u)))) : gl_WorkGroupID) | (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! (! (false)))), (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! (! (false)))), (! (_GLF_IDENTITY(false, ! (! (false))))) || false), ! (! (! (_GLF_IDENTITY(false, ! (! (false)))))))) && true))) ? _GLF_FUZZED(_GLF_IDENTITY(uvec3(128150u, 43495u, 190701u), max(_GLF_IDENTITY(uvec3(128150u, 43495u, 190701u), uvec3(uvec4(_GLF_IDENTITY(uvec3(128150u, 43495u, 190701u), (uvec3(128150u, 43495u, 190701u)) | (uvec3(128150u, 43495u, 190701u))), 0u))), uvec3(128150u, 43495u, 190701u)))) : gl_WorkGroupID)))), (_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (_GLF_IDENTITY(false, ! (! (false))))), true && ((! (_GLF_IDENTITY(false, ! (! (false)))))))) ? _GLF_FUZZED(uvec3(128150u, 43495u, _GLF_IDENTITY(190701u, max(190701u, 190701u)))) : gl_WorkGroupID) >> uvec3(0u, 0u, 0u))) | (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(false, false))) ? _GLF_FUZZED(uvec3(128150u, 43495u, 190701u)) : gl_WorkGroupID, uvec3(uvec3(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, bool(bool(false))), false))) ? _GLF_FUZZED(uvec3(128150u, 43495u, 190701u)) : gl_WorkGroupID))), (false ? _GLF_FUZZED(uvec3(128150u, 43495u, 190701u)) : gl_WorkGroupID) ^ uvec3(0u, 0u, 0u)))))).x;
 uint workgroup_base = _GLF_IDENTITY(_GLF_IDENTITY(workgroup_size, (workgroup_size) | (workgroup_size)), (true ? _GLF_IDENTITY(workgroup_size, (workgroup_size) | (workgroup_size)) : _GLF_FUZZED(subgroup_size))) * workgroup_id;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 uint virtual_gid = _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, max(workgroup_base, workgroup_base)) + subgroup_id * subgroup_size + subgroup_local_id, _GLF_IDENTITY(uint(_GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + subgroup_id * _GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, subgroup_size)), (workgroup_base + subgroup_id * subgroup_size) | (workgroup_base + subgroup_id * subgroup_size)), ~ (~ (workgroup_base + subgroup_id * subgroup_size))) + subgroup_local_id), clamp(uint(workgroup_base + _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, uint(uvec4(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(subgroup_id, clamp(subgroup_id, subgroup_id, subgroup_id))) ^ (0u | 0u)), max(subgroup_id, _GLF_IDENTITY(subgroup_id, (subgroup_id) | (subgroup_id)))), 1u, uint(_GLF_ZERO(0.0, injectionSwitch.x)), 0u))) * subgroup_size, (subgroup_id * subgroup_size) << _GLF_IDENTITY(0u, clamp(0u, _GLF_IDENTITY(0u, (0u) / 1u), 0u))) + subgroup_local_id), uint(workgroup_base + _GLF_IDENTITY(subgroup_id, min(subgroup_id, subgroup_id)) * subgroup_size + subgroup_local_id), uint(workgroup_base + subgroup_id * _GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, (subgroup_size) | 0u)) | (subgroup_size)) + subgroup_local_id)))), (uint(_GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + subgroup_id * _GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, subgroup_size)), (workgroup_base + subgroup_id * subgroup_size) | (workgroup_base + subgroup_id * subgroup_size)), ~ (~ (workgroup_base + subgroup_id * subgroup_size))) + subgroup_local_id), clamp(uint(workgroup_base + _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, uint(uvec4(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(subgroup_id, clamp(subgroup_id, subgroup_id, subgroup_id))) ^ (0u | 0u)), max(subgroup_id, _GLF_IDENTITY(subgroup_id, (subgroup_id) | (subgroup_id)))), 1u, uint(_GLF_ZERO(0.0, injectionSwitch.x)), 0u))) * subgroup_size, (subgroup_id * subgroup_size) << _GLF_IDENTITY(0u, clamp(0u, _GLF_IDENTITY(0u, (0u) / 1u), 0u))) + subgroup_local_id), uint(workgroup_base + _GLF_IDENTITY(subgroup_id, min(subgroup_id, subgroup_id)) * subgroup_size + subgroup_local_id), uint(workgroup_base + subgroup_id * _GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, (subgroup_size) | 0u)) | (subgroup_size)) + subgroup_local_id))))) << (0u >> _GLF_IDENTITY(uint(2u), uint(2u)))));
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 uint next_virtual_gid = workgroup_base + _GLF_IDENTITY(subgroup_id, 1u * (subgroup_id)) * subgroup_size + (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) - uint(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), 0.0 + (_GLF_ZERO(0.0, injectionSwitch.x)))))), (true ? (_GLF_IDENTITY(subgroup_local_id + 1, _GLF_IDENTITY((subgroup_local_id + 1), ~ (~ (_GLF_IDENTITY((subgroup_local_id + 1), uint(uvec4(_GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id + 1), uint(uvec3((subgroup_local_id + 1), 0u, 1u))), (_GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id + 1), uint(uvec3((subgroup_local_id + 1), 0u, 1u))), ~ (~ (_GLF_IDENTITY((subgroup_local_id + 1), uint(uvec3((subgroup_local_id + 1), 0u, 1u))))))) >> (0u << _GLF_IDENTITY(uint(4u), _GLF_IDENTITY(uint(4u), (uint(4u)) - 0u)))), 1u, 0u, uint(_GLF_ONE(1.0, injectionSwitch.y)))))))) - uint(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), 0.0 + _GLF_IDENTITY((_GLF_ZERO(0.0, injectionSwitch.x)), float(vec3(_GLF_IDENTITY((_GLF_ZERO(0.0, injectionSwitch.x)), _GLF_IDENTITY(float(float(_GLF_IDENTITY((_GLF_ZERO(0.0, injectionSwitch.x)), mix(float((_GLF_ZERO(0.0, injectionSwitch.x))), float(_GLF_FUZZED(30.18)), bool(false))))), clamp(float(float(_GLF_IDENTITY((_GLF_ZERO(0.0, injectionSwitch.x)), mix(float((_GLF_ZERO(0.0, injectionSwitch.x))), float(_GLF_FUZZED(30.18)), bool(false))))), float(float(_GLF_IDENTITY((_GLF_ZERO(0.0, injectionSwitch.x)), mix(float((_GLF_ZERO(0.0, injectionSwitch.x))), float(_GLF_FUZZED(30.18)), bool(false))))), float(float(_GLF_IDENTITY((_GLF_ZERO(0.0, injectionSwitch.x)), mix(float((_GLF_ZERO(0.0, injectionSwitch.x))), float(_GLF_FUZZED(30.18)), bool(false)))))))), 1.0, 1.0))))))) : _GLF_FUZZED(subgroup_id))) % subgroup_size);
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((false), ((false)) || false))), (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (_GLF_IDENTITY(! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bool(bool(! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))), bool(bvec3(! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false, true))))))
    barrier();
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true))))
    return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint read_1 = atomicLoad(buf[virtual_gid], 4, _GLF_IDENTITY(64, (64) >> (_GLF_IDENTITY(1, (1) ^ 0) ^ 1)), 0);
 atomicStore(buf[next_virtual_gid], uint(read_1 + 1), _GLF_IDENTITY(4, clamp(_GLF_IDENTITY(4, (4) / 1), 4, 4)), 64, 4);
 uint read_2 = atomicLoad(buf[virtual_gid], _GLF_IDENTITY(4, (_GLF_FALSE(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) && true)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))) && true), (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(77689) : 4)), 64, _GLF_IDENTITY(0, _GLF_IDENTITY(~ (~ (0)), _GLF_IDENTITY((false ? _GLF_FUZZED(-95271) : ~ (~ (0))), (false ? _GLF_FUZZED(-32385) : _GLF_IDENTITY((false ? _GLF_FUZZED(-95271) : ~ (~ (0))), ((false ? _GLF_FUZZED(-95271) : ~ (~ (0)))) | 0))))));
 if(subgroup_local_id + 1 < subgroup_size)
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, false || (false)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bvec2(bvec4(bvec2(_GLF_IDENTITY(false, false || (false)), _GLF_TRUE(true, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0) < injectionSwitch.y), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0) < injectionSwitch.y), ! (! (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0) < injectionSwitch.y), ! (! ((_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0) < injectionSwitch.y))))))), _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ! (! ((injectionSwitch.x < injectionSwitch.y))))), false)), false || (bool(bvec3(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x) - 0.0) < injectionSwitch.y), ! (! (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)))).x) - 0.0) < injectionSwitch.y), _GLF_IDENTITY(! (! ((_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0) < injectionSwitch.y))), false || (! (! ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0) < injectionSwitch.y, bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0) < injectionSwitch.y), ! (! (bool(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0) < injectionSwitch.y))))))))))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))))))), _GLF_IDENTITY(false, false || (false)), _GLF_IDENTITY(true, ! (! (true))))))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         return;
        }
       return;
       if(_GLF_DEAD(false))
        barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         return;
        }
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
    }
   if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   int i = _GLF_IDENTITY(0, _GLF_IDENTITY(max(0, 0), _GLF_IDENTITY(int(_GLF_IDENTITY(ivec4(_GLF_IDENTITY(max(0, 0), min(_GLF_IDENTITY(max(0, 0), clamp(max(0, 0), max(0, 0), max(0, 0))), max(0, 0))), 1, 0, 1), (ivec4(_GLF_IDENTITY(max(0, 0), min(_GLF_IDENTITY(max(0, 0), clamp(max(0, 0), max(0, 0), max(0, 0))), max(0, 0))), 1, 0, 1)) - ivec4(0, 0, 0, 0))), 0 | (int(_GLF_IDENTITY(ivec4(_GLF_IDENTITY(max(0, 0), min(_GLF_IDENTITY(max(0, 0), clamp(max(0, 0), max(0, 0), max(0, 0))), max(0, 0))), 1, 0, 1), (ivec4(_GLF_IDENTITY(max(0, 0), min(_GLF_IDENTITY(max(0, 0), clamp(max(0, 0), max(0, 0), max(0, 0))), max(0, 0))), 1, 0, 1)) - ivec4(0, 0, 0, 0)))))));
   if(_GLF_DEAD(false))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), false, false, true))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x)) > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), ! (! (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) && (false)), bool(bvec2(false, false))), (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y, 0.0 + (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y)), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(max(injectionSwitch, injectionSwitch), max(_GLF_IDENTITY(max(injectionSwitch, injectionSwitch), mix(vec2(_GLF_FUZZED(8.4), (max(injectionSwitch, injectionSwitch))[1]), vec2((max(injectionSwitch, injectionSwitch))[0], _GLF_FUZZED((8.2))), bvec2(true, false))), max(injectionSwitch, injectionSwitch)))).y, 0.0 + _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y), _GLF_IDENTITY(mix(float(_GLF_FUZZED(4.6)), float((_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y)), bool(true)), float(mat4x3(mix(float(_GLF_FUZZED(4.6)), float((_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y)), bool(true)), 0.0, abs(0.0), 1.0, 1.0, length(sqrt(vec3(0.0, 0.0, 0.0))), abs(0.0), 1.0, log(1.0), 1.0, cos(0.0), 0.0)))))) - 0.0)) && true)))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-5.7)), float(injectionSwitch.y), bool(true)))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     return;
    }
   atomicStore(buf[_GLF_IDENTITY(next_virtual_gid, 0u + (next_virtual_gid))], _GLF_IDENTITY(_GLF_IDENTITY(uint(read_1 + 1 == read_2), ~ (~ (_GLF_IDENTITY(uint(read_1 + 1 == read_2), ~ (~ (uint(read_1 + 1 == read_2))))))), (_GLF_IDENTITY(_GLF_IDENTITY(uint(read_1 + 1 == read_2), clamp(uint(_GLF_IDENTITY(read_1 + 1 == read_2, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(read_1 + 1 == read_2, bool(bvec2(read_1 + 1 == read_2, true)))))), uint(read_1 + 1 == read_2), uint(_GLF_IDENTITY(read_1 + 1, (true ? read_1 + 1 : _GLF_FUZZED(workgroup_size))) == read_2))), (_GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(read_1 + _GLF_IDENTITY(1, 0 + (1)) == read_2, true && (read_1 + _GLF_IDENTITY(_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(i))), 0 + (1)) == read_2))), clamp(uint(_GLF_IDENTITY(read_1 + 1 == read_2, _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), false || ((injectionSwitch.x < injectionSwitch.y)))) && (_GLF_IDENTITY(read_1 + 1 == read_2, bool(bvec2(read_1 + _GLF_IDENTITY(1, clamp(1, _GLF_IDENTITY(1, (1) | 0), _GLF_IDENTITY(1, (_GLF_IDENTITY(1, max(1, 1))) ^ 0))) == read_2, true)))))), uint(read_1 + 1 == read_2), uint(read_1 + 1 == read_2))), uint(uvec2(_GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(read_1 + 1 == read_2, ! (! (_GLF_IDENTITY(read_1 + 1 == read_2, true && (read_1 + 1 == read_2)))))), _GLF_IDENTITY(clamp(uint(_GLF_IDENTITY(read_1 + 1 == read_2, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(read_1 + 1 == read_2, bool(bvec2(read_1 + 1 == read_2, true)))))), uint(read_1 + 1 == read_2), uint(read_1 + 1 == read_2)), max(clamp(uint(_GLF_IDENTITY(read_1 + 1 == read_2, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(read_1 + 1 == read_2, bool(bvec2(read_1 + 1 == read_2, true)))))), uint(read_1 + 1 == read_2), uint(read_1 + 1 == read_2)), clamp(uint(_GLF_IDENTITY(read_1 + 1 == read_2, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(read_1 + 1 == read_2, bool(bvec2(read_1 + 1 == read_2, true)))))), uint(read_1 + 1 == read_2), uint(read_1 + 1 == read_2))))), uint(uvec3(_GLF_IDENTITY(uint(_GLF_IDENTITY(read_1, (read_1) | (_GLF_IDENTITY(read_1, (_GLF_IDENTITY(read_1, (_GLF_IDENTITY(read_1, ~ (~ (_GLF_IDENTITY(read_1, (_GLF_IDENTITY(read_1, 0u ^ (read_1))) / 1u))))) - 0u)) - 0u))) + 1 == read_2), clamp(uint(_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1 == read_2, bool(bool(read_1 + 1 == read_2))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(read_1 + 1 == read_2, bool(bvec2(read_1 + _GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(i))) == read_2, _GLF_IDENTITY(true, (true) || false))))))), uint(read_1 + 1 == read_2), uint(read_1 + 1 == read_2))), 0u, 0u))), 0u)))) << 0u)) | _GLF_IDENTITY(0u, min(0u, 0u))) + 1, 4, 64, _GLF_IDENTITY(4, 0 + (_GLF_IDENTITY(4, int(ivec3(4, 0, 1))))));
   if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(_GLF_DEAD(false), false), bvec2(bvec3(bvec2(_GLF_DEAD(false), false), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), (! (injectionSwitch.x > injectionSwitch.y)) && true)))))))), bvec2(bvec4(bvec2(_GLF_DEAD(false), false), true, false)))), _GLF_IDENTITY(bool(bvec4(bool(_GLF_IDENTITY(bvec2(_GLF_DEAD(false), false), bvec2(bvec4(bvec2(_GLF_DEAD(false), false), true, false)))), false, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bool(bvec3(_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(_GLF_DEAD(false), false), bvec2(bvec4(bvec2(_GLF_DEAD(false), false), true, false)))), (bool(_GLF_IDENTITY(bvec2(_GLF_DEAD(false), false), bvec2(bvec4(bvec2(_GLF_DEAD(false), false), true, false))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false, true, _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)))))), true && (bool(bvec4(bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(_GLF_DEAD(false), false), bvec2(bvec4(bvec2(_GLF_DEAD(false), false), true, false))), bvec2(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(bvec2(_GLF_DEAD(false), false), bvec2(bvec4(bvec2(_GLF_DEAD(false), false), true, false)))), bvec2(bvec3(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(bvec2(_GLF_DEAD(false), false), bvec2(bvec4(bvec2(_GLF_DEAD(false), false), true, false)))), bvec2(bvec2(bvec2(_GLF_IDENTITY(bvec2(_GLF_DEAD(false), false), bvec2(bvec4(bvec2(_GLF_DEAD(false), false), true, false))))))), false)))))), false, true, _GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(_GLF_IDENTITY(mat4x2(injectionSwitch.y, sin(0.0), _GLF_ZERO(0.0, injectionSwitch.x), 0.0, _GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(73.36))), sqrt(_GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(1.0, 0.0, 1.0)), dot(vec3(0.0, 1.0, 0.0), vec3(1.0, 0.0, 1.0)))), 1.0, sqrt(0.0)), mat2(1.0) * (mat4x2(injectionSwitch.y, sin(0.0), _GLF_ZERO(0.0, injectionSwitch.x), 0.0, _GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(73.36))), sqrt(_GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(1.0, 0.0, 1.0)), dot(vec3(0.0, 1.0, 0.0), vec3(1.0, 0.0, 1.0)))), 1.0, sqrt(0.0))))))), bool(bool((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(_GLF_IDENTITY(mat4x2(injectionSwitch.y, sin(0.0), _GLF_ZERO(0.0, injectionSwitch.x), 0.0, _GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(73.36))), sqrt(_GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(1.0, 0.0, 1.0)), dot(vec3(0.0, 1.0, 0.0), vec3(1.0, 0.0, 1.0)))), 1.0, sqrt(0.0)), mat2(1.0) * (mat4x2(injectionSwitch.y, sin(0.0), _GLF_ZERO(0.0, injectionSwitch.x), 0.0, _GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(73.36))), sqrt(_GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(1.0, 0.0, 1.0)), dot(vec3(0.0, 1.0, 0.0), vec3(1.0, 0.0, 1.0)))), 1.0, sqrt(0.0))))))))))))))), _GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(false, false || (false)), true)), true && (bool(bvec2(_GLF_IDENTITY(false, false || (false)), true))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))
    return;
  }
 else
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
       if(_GLF_DEAD(false))
        barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), false || (! ((injectionSwitch.x > injectionSwitch.y)))))))))
      barrier();
     barrier();
    }
   atomicStore(buf[next_virtual_gid], uint(read_1 + 1 == read_2) + 1, 4, _GLF_IDENTITY(64, (64) >> (-231 & 0)), 4);
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec4(false, _GLF_IDENTITY(true, _GLF_IDENTITY(bool(bool(true)), _GLF_IDENTITY(bool(bool(bool(bool(true)))), false || (bool(bool(bool(bool(true)))))))), true, true))), _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(_GLF_IDENTITY(bool((_GLF_IDENTITY(injectionSwitch, vec2(mat4x3(injectionSwitch, sqrt(0.0), 1.0, 1.0, 1.0, 0.0, 1.0, round(length(normalize(1.0))), 0.0, 0.0, 0.0))).x > injectionSwitch.y)), ! (! _GLF_IDENTITY((bool((injectionSwitch.x > injectionSwitch.y))), bool(_GLF_IDENTITY(bvec2((bool((injectionSwitch.x > injectionSwitch.y))), true), bvec2(bvec4(bvec2((bool((injectionSwitch.x > injectionSwitch.y))), true), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))))))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            return;
           return;
          }
         return;
        }
       barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        return;
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
       if(_GLF_DEAD(false))
        barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
    return;
   if(_GLF_DEAD(false))
    barrier();
  }
}
