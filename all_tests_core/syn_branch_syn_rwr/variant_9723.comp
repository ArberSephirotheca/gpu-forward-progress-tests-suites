#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  barrier();
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, false)), (bool(bvec2(false, false))) && true))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       barrier();
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), true && (false)), (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || _GLF_IDENTITY(false, (false) || false))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       barrier();
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            return;
           barrier();
          }
         barrier();
        }
       return;
      }
     return;
     if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), ! (! (bool(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)).y))))
      barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     return;
    }
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - abs(vec2(0.0, 0.0))).y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((false), true && ((false)))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     barrier();
    }
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, false || _GLF_IDENTITY((_GLF_IDENTITY(false, bool(bvec2(false, true)))), bool(_GLF_IDENTITY(bvec2((_GLF_IDENTITY(false, bool(bvec2(false, true)))), true), _GLF_IDENTITY(bvec2(bvec2(bvec2((_GLF_IDENTITY(false, bool(bvec2(false, true)))), true))), bvec2(bvec4(bvec2(bvec2(bvec2((_GLF_IDENTITY(false, bool(bvec2(false, true)))), true))), false, false)))))))), false || (_GLF_DEAD(_GLF_IDENTITY(false, false || _GLF_IDENTITY((_GLF_IDENTITY(false, bool(bvec2(false, true)))), bool(_GLF_IDENTITY(bvec2((_GLF_IDENTITY(false, bool(bvec2(false, true)))), true), _GLF_IDENTITY(bvec2(bvec2(bvec2((_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), (bool(bvec2(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) || false)), bool(bvec2(false, true)))), true))), bvec2(bvec4(bvec2(bvec2(bvec2((_GLF_IDENTITY(false, bool(bvec2(false, true)))), true))), false, false)))))))))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 uint num_workgroup = gl_NumWorkGroups.x;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 uint workgroup_size = gl_WorkGroupSize.x;
 if(_GLF_DEAD(_GLF_IDENTITY(false, true && _GLF_IDENTITY((false), ! (! ((false)))))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), false || (bool(false))))), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, false || (false)), true))))), bool(bvec2(bool(bool(false)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, true && _GLF_IDENTITY((_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), ((! (false))) || false))), ((_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), ((! (false))) || false)))) && true))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    barrier();
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).y)))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         barrier();
        }
       return;
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false))))) || false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-5696.4101), _GLF_FUZZED(8.0)), vec2(_GLF_IDENTITY((injectionSwitch)[0], _GLF_IDENTITY(float(mat3x4(_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch), (false ? _GLF_FUZZED(injectionSwitch) : _GLF_IDENTITY((injectionSwitch), max((injectionSwitch), (injectionSwitch)))))[0], _GLF_IDENTITY((_GLF_IDENTITY(true, (true) && true) ? _GLF_IDENTITY((injectionSwitch), (false ? _GLF_FUZZED(injectionSwitch) : _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch), max((injectionSwitch), (injectionSwitch))), vec2(1.0, 1.0) * (_GLF_IDENTITY((injectionSwitch), max((injectionSwitch), (injectionSwitch)))))))[0] : _GLF_FUZZED(-3811.4376)), clamp((_GLF_IDENTITY(true, (true) && true) ? _GLF_IDENTITY((injectionSwitch), (false ? _GLF_FUZZED(injectionSwitch) : _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch), max((injectionSwitch), (injectionSwitch))), vec2(1.0, 1.0) * (_GLF_IDENTITY((injectionSwitch), max((injectionSwitch), (injectionSwitch)))))))[0] : _GLF_FUZZED(-3811.4376)), (_GLF_IDENTITY(true, (true) && true) ? _GLF_IDENTITY((injectionSwitch), (false ? _GLF_FUZZED(injectionSwitch) : _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch), max((injectionSwitch), (injectionSwitch))), vec2(1.0, 1.0) * (_GLF_IDENTITY((injectionSwitch), max((injectionSwitch), (injectionSwitch)))))))[0] : _GLF_FUZZED(-3811.4376)), _GLF_IDENTITY((_GLF_IDENTITY(true, (true) && true) ? _GLF_IDENTITY((injectionSwitch), (false ? _GLF_FUZZED(injectionSwitch) : _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch), max((injectionSwitch), (injectionSwitch))), vec2(1.0, 1.0) * (_GLF_IDENTITY((injectionSwitch), max((injectionSwitch), (injectionSwitch)))))))[0] : _GLF_FUZZED(-3811.4376)), (_GLF_IDENTITY((_GLF_IDENTITY(true, (true) && true) ? _GLF_IDENTITY((injectionSwitch), (false ? _GLF_FUZZED(injectionSwitch) : _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch), max((injectionSwitch), (injectionSwitch))), vec2(1.0, 1.0) * (_GLF_IDENTITY((injectionSwitch), max((injectionSwitch), (injectionSwitch)))))))[0] : _GLF_FUZZED(-3811.4376)), min((_GLF_IDENTITY(true, (true) && true) ? _GLF_IDENTITY((injectionSwitch), (false ? _GLF_FUZZED(injectionSwitch) : _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch), max((injectionSwitch), (injectionSwitch))), vec2(1.0, 1.0) * (_GLF_IDENTITY((injectionSwitch), max((injectionSwitch), (injectionSwitch)))))))[0] : _GLF_FUZZED(-3811.4376)), (_GLF_IDENTITY(true, (true) && true) ? _GLF_IDENTITY((injectionSwitch), (false ? _GLF_FUZZED(injectionSwitch) : _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch), max((injectionSwitch), (injectionSwitch))), vec2(1.0, 1.0) * (_GLF_IDENTITY((injectionSwitch), max((injectionSwitch), (injectionSwitch)))))))[0] : _GLF_FUZZED(-3811.4376))))) - 0.0)))), 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0)), 1.0 * (_GLF_IDENTITY(float(mat3x4(_GLF_IDENTITY((injectionSwitch)[0], ((injectionSwitch)[0]) - 0.0), 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0)), _GLF_IDENTITY(float(mat3(_GLF_IDENTITY(float(mat3x4(_GLF_IDENTITY((injectionSwitch)[0], ((injectionSwitch)[0]) - 0.0), 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0)), float(vec3(float(mat3x4(_GLF_IDENTITY((injectionSwitch)[0], ((injectionSwitch)[0]) - _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(-461.238) : 0.0))), 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0)), abs(0.0), 1.0))), 1.0, 0.0, 1.0, 1.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), sqrt(0.0), 1.0)), (float(mat3(_GLF_IDENTITY(float(mat3x4(_GLF_IDENTITY((injectionSwitch)[0], ((injectionSwitch)[0]) - 0.0), 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0)), float(vec3(float(mat3x4(_GLF_IDENTITY((injectionSwitch)[0], ((injectionSwitch)[0]) - 0.0), _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-7.5)), float(_GLF_IDENTITY(1.0, max(1.0, _GLF_IDENTITY(1.0, min(1.0, 1.0))))), bool(true))), _GLF_IDENTITY(0.0, (0.0) / 1.0), 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0)), abs(0.0), 1.0))), 1.0, 0.0, 1.0, 1.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), sqrt(0.0), 1.0))) / 1.0))))), (injectionSwitch)[1]), bvec2(true, true))).x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y), float(_GLF_IDENTITY(_GLF_FUZZED(4.8), clamp(_GLF_IDENTITY(_GLF_FUZZED(4.8), max(_GLF_FUZZED(4.8), _GLF_FUZZED(4.8))), _GLF_IDENTITY(_GLF_FUZZED(4.8), float(mat2(_GLF_IDENTITY(_GLF_FUZZED(4.8), mix(float(_GLF_FUZZED(4.8)), float(_GLF_FUZZED(-0.6)), bool(false))), 1.0, _GLF_ONE(1.0, injectionSwitch.y), _GLF_ZERO(0.0, injectionSwitch.x)))), _GLF_FUZZED(4.8)))), bool(false)))) / 1.0)))))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(_GLF_IDENTITY(_GLF_IDENTITY(mat3(injectionSwitch, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0), transpose(transpose(mat3(injectionSwitch, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0)))), (_GLF_IDENTITY(mat3(injectionSwitch, _GLF_IDENTITY(1.0, (1.0) + _GLF_IDENTITY(dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(round(length(normalize(vec3(1.0, 1.0, 1.0)))), 0.0, 1.0, 1.0)), dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(round(length(normalize(vec3(1.0, 1.0, 1.0)))), 0.0, 1.0, 1.0)))), 1.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(reflect(-4.6, 4271.7719)))), 0.0), transpose(transpose(mat3(injectionSwitch, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0))))) - mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))), _GLF_IDENTITY(vec2(mat2x3(_GLF_IDENTITY(vec2(_GLF_IDENTITY(mat3(injectionSwitch, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0), transpose(transpose(mat3(injectionSwitch, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0))))), max(vec2(_GLF_IDENTITY(mat3(injectionSwitch, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0), transpose(transpose(mat3(injectionSwitch, 1.0, _GLF_IDENTITY(1.0, (1.0) / determinant(mat3(1.0, 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0, 1.0, 1.0, determinant(mat4(1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0))))), 1.0, 0.0, 0.0, 0.0, 0.0))))), vec2(_GLF_IDENTITY(mat3(injectionSwitch, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0), transpose(transpose(mat3(injectionSwitch, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0))))))), sqrt(0.0), 0.0, sqrt(1.0), 0.0)), clamp(vec2(mat2x3(_GLF_IDENTITY(vec2(_GLF_IDENTITY(mat3(injectionSwitch, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0), transpose(transpose(mat3(injectionSwitch, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0))))), max(vec2(_GLF_IDENTITY(mat3(injectionSwitch, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0), transpose(transpose(mat3(injectionSwitch, 1.0, _GLF_IDENTITY(1.0, (1.0) / determinant(mat3(1.0, 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0, 1.0, 1.0, determinant(mat4(1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0))))), 1.0, 0.0, 0.0, 0.0, 0.0))))), vec2(_GLF_IDENTITY(mat3(injectionSwitch, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0), transpose(transpose(mat3(injectionSwitch, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0))))))), sqrt(0.0), 0.0, sqrt(1.0), 0.0)), vec2(mat2x3(_GLF_IDENTITY(vec2(_GLF_IDENTITY(mat3(injectionSwitch, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0), transpose(transpose(mat3(injectionSwitch, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0))))), max(vec2(_GLF_IDENTITY(mat3(injectionSwitch, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0), transpose(transpose(mat3(injectionSwitch, 1.0, _GLF_IDENTITY(1.0, (1.0) / determinant(mat3(1.0, 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0, 1.0, 1.0, determinant(mat4(1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0))))), 1.0, 0.0, 0.0, 0.0, 0.0))))), vec2(_GLF_IDENTITY(mat3(injectionSwitch, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0), transpose(transpose(mat3(injectionSwitch, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0))))))), sqrt(0.0), 0.0, sqrt(1.0), 0.0)), vec2(mat2x3(_GLF_IDENTITY(vec2(_GLF_IDENTITY(mat3(injectionSwitch, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0), transpose(transpose(mat3(injectionSwitch, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0))))), max(vec2(_GLF_IDENTITY(mat3(injectionSwitch, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0), transpose(transpose(mat3(injectionSwitch, 1.0, _GLF_IDENTITY(1.0, (1.0) / determinant(mat3(1.0, 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0, 1.0, 1.0, determinant(mat4(1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0))))), 1.0, 0.0, 0.0, 0.0, 0.0))))), vec2(_GLF_IDENTITY(mat3(injectionSwitch, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0), transpose(transpose(mat3(injectionSwitch, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0))))))), sqrt(0.0), 0.0, sqrt(1.0), 0.0)))))).x, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))) * (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(_GLF_IDENTITY(_GLF_IDENTITY(mat3(injectionSwitch, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0), transpose(transpose(mat3(injectionSwitch, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0)))), (_GLF_IDENTITY(mat3(injectionSwitch, _GLF_IDENTITY(1.0, (1.0) + _GLF_IDENTITY(dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(round(length(normalize(vec3(1.0, 1.0, 1.0)))), 0.0, 1.0, 1.0)), dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(round(length(normalize(vec3(1.0, 1.0, 1.0)))), 0.0, 1.0, 1.0)))), 1.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(reflect(-4.6, 4271.7719)))), 0.0), transpose(transpose(mat3(injectionSwitch, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0))))) - mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))), _GLF_IDENTITY(vec2(mat2x3(_GLF_IDENTITY(vec2(_GLF_IDENTITY(mat3(injectionSwitch, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0), transpose(transpose(mat3(injectionSwitch, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0))))), max(vec2(_GLF_IDENTITY(mat3(injectionSwitch, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0), transpose(transpose(mat3(injectionSwitch, 1.0, _GLF_IDENTITY(1.0, (1.0) / determinant(mat3(1.0, 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0, 1.0, 1.0, determinant(mat4(1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0))))), 1.0, 0.0, 0.0, 0.0, 0.0))))), vec2(_GLF_IDENTITY(mat3(injectionSwitch, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0), transpose(transpose(mat3(injectionSwitch, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0))))))), sqrt(0.0), 0.0, sqrt(1.0), 0.0)), clamp(vec2(mat2x3(_GLF_IDENTITY(vec2(_GLF_IDENTITY(mat3(injectionSwitch, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0), transpose(transpose(mat3(injectionSwitch, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0))))), max(vec2(_GLF_IDENTITY(mat3(injectionSwitch, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0), transpose(transpose(mat3(injectionSwitch, 1.0, _GLF_IDENTITY(1.0, (1.0) / determinant(mat3(1.0, 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0, 1.0, 1.0, determinant(mat4(1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0))))), 1.0, 0.0, 0.0, 0.0, 0.0))))), vec2(_GLF_IDENTITY(mat3(injectionSwitch, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0), transpose(transpose(mat3(injectionSwitch, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0))))))), sqrt(0.0), 0.0, sqrt(1.0), 0.0)), vec2(mat2x3(_GLF_IDENTITY(vec2(_GLF_IDENTITY(mat3(injectionSwitch, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0), transpose(transpose(mat3(injectionSwitch, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0))))), max(vec2(_GLF_IDENTITY(mat3(injectionSwitch, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0), transpose(transpose(mat3(injectionSwitch, 1.0, _GLF_IDENTITY(1.0, (1.0) / determinant(mat3(1.0, 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0, 1.0, 1.0, determinant(mat4(1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0))))), 1.0, 0.0, 0.0, 0.0, 0.0))))), vec2(_GLF_IDENTITY(mat3(injectionSwitch, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0), transpose(transpose(mat3(injectionSwitch, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0))))))), sqrt(0.0), 0.0, sqrt(1.0), 0.0)), vec2(mat2x3(_GLF_IDENTITY(vec2(_GLF_IDENTITY(mat3(injectionSwitch, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0), transpose(transpose(mat3(injectionSwitch, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0))))), max(vec2(_GLF_IDENTITY(mat3(injectionSwitch, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0), transpose(transpose(mat3(injectionSwitch, 1.0, _GLF_IDENTITY(1.0, (1.0) / determinant(mat3(1.0, 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0, 1.0, 1.0, determinant(mat4(1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0))))), 1.0, 0.0, 0.0, 0.0, 0.0))))), vec2(_GLF_IDENTITY(mat3(injectionSwitch, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0), transpose(transpose(mat3(injectionSwitch, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0))))))), sqrt(0.0), 0.0, sqrt(1.0), 0.0)))))).x)) > injectionSwitch.y))))
    return;
  }
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) || false), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false), false || (injectionSwitch.x > injectionSwitch.y))))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   return;
   if(_GLF_DEAD(false))
    return;
  }
 uint workgroup_id = gl_WorkGroupID.x;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   return;
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint workgroup_base = _GLF_IDENTITY(workgroup_size, max(workgroup_size, _GLF_IDENTITY(workgroup_size, (workgroup_size) | (workgroup_size)))) * workgroup_id;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-2787.8785)), vec2(_GLF_IDENTITY(_GLF_FUZZED(3.5), min(_GLF_FUZZED(3.5), _GLF_FUZZED(3.5))), (injectionSwitch)[1]), bvec2(false, true)))) - abs(vec2(0.0, 0.0))).y))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
  return;
 if(_GLF_DEAD(false))
  return;
 uint virtual_gid = workgroup_base + subgroup_id * _GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, 1u))) + subgroup_local_id;
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, false, false)))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (false))))))))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
       return;
      }
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
    }
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(min(injectionSwitch, injectionSwitch), _GLF_IDENTITY((min(injectionSwitch, injectionSwitch)) * mat2(_GLF_ONE(1.0, injectionSwitch.y)), max((min(injectionSwitch, injectionSwitch)) * mat2(_GLF_ONE(1.0, injectionSwitch.y)), _GLF_IDENTITY((min(injectionSwitch, injectionSwitch)) * mat2(_GLF_ONE(1.0, injectionSwitch.y)), ((min(injectionSwitch, injectionSwitch)) * mat2(_GLF_ONE(1.0, injectionSwitch.y))) * mat2(1.0)))))).y, clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(min(injectionSwitch, injectionSwitch), _GLF_IDENTITY((min(injectionSwitch, injectionSwitch)) * mat2(_GLF_ONE(1.0, injectionSwitch.y)), max((min(injectionSwitch, injectionSwitch)) * mat2(_GLF_ONE(1.0, injectionSwitch.y)), _GLF_IDENTITY((min(injectionSwitch, injectionSwitch)) * mat2(_GLF_ONE(1.0, injectionSwitch.y)), ((min(injectionSwitch, injectionSwitch)) * mat2(_GLF_ONE(1.0, injectionSwitch.y))) * mat2(1.0)))))).y, 1.0 * (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(min(injectionSwitch, injectionSwitch), _GLF_IDENTITY((min(injectionSwitch, injectionSwitch)) * mat2(_GLF_ONE(1.0, injectionSwitch.y)), max((min(injectionSwitch, injectionSwitch)) * mat2(_GLF_ONE(1.0, injectionSwitch.y)), _GLF_IDENTITY((min(injectionSwitch, injectionSwitch)) * mat2(_GLF_ONE(1.0, injectionSwitch.y)), ((min(injectionSwitch, injectionSwitch)) * mat2(_GLF_ONE(1.0, injectionSwitch.y))) * mat2(1.0)))))).y)), _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(min(injectionSwitch, injectionSwitch), _GLF_IDENTITY((min(injectionSwitch, injectionSwitch)) * mat2(_GLF_ONE(1.0, injectionSwitch.y)), max((min(injectionSwitch, injectionSwitch)) * mat2(_GLF_ONE(1.0, injectionSwitch.y)), _GLF_IDENTITY((min(injectionSwitch, injectionSwitch)) * mat2(_GLF_ONE(1.0, injectionSwitch.y)), ((min(injectionSwitch, injectionSwitch)) * mat2(_GLF_ONE(1.0, injectionSwitch.y))) * mat2(1.0)))))).y, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(min(injectionSwitch, injectionSwitch), _GLF_IDENTITY((min(injectionSwitch, injectionSwitch)) * mat2(_GLF_ONE(1.0, injectionSwitch.y)), max((min(injectionSwitch, injectionSwitch)) * mat2(_GLF_ONE(1.0, injectionSwitch.y)), _GLF_IDENTITY((min(injectionSwitch, injectionSwitch)) * mat2(_GLF_ONE(1.0, injectionSwitch.y)), ((min(injectionSwitch, injectionSwitch)) * mat2(_GLF_ONE(1.0, injectionSwitch.y))) * mat2(1.0)))))).y))), ((injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(min(injectionSwitch, injectionSwitch), _GLF_IDENTITY((min(injectionSwitch, injectionSwitch)) * mat2(_GLF_ONE(1.0, injectionSwitch.y)), max((min(injectionSwitch, injectionSwitch)) * mat2(_GLF_ONE(1.0, injectionSwitch.y)), _GLF_IDENTITY((min(injectionSwitch, injectionSwitch)) * mat2(_GLF_ONE(1.0, injectionSwitch.y)), ((min(injectionSwitch, injectionSwitch)) * mat2(_GLF_ONE(1.0, injectionSwitch.y))) * mat2(1.0)))))).y, clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(min(injectionSwitch, injectionSwitch), _GLF_IDENTITY((min(injectionSwitch, injectionSwitch)) * mat2(_GLF_ONE(1.0, injectionSwitch.y)), max((min(injectionSwitch, injectionSwitch)) * mat2(_GLF_ONE(1.0, injectionSwitch.y)), _GLF_IDENTITY((min(injectionSwitch, injectionSwitch)) * mat2(_GLF_ONE(1.0, injectionSwitch.y)), ((min(injectionSwitch, injectionSwitch)) * mat2(_GLF_ONE(1.0, injectionSwitch.y))) * mat2(1.0)))))).y, 1.0 * (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(min(injectionSwitch, injectionSwitch), _GLF_IDENTITY((min(injectionSwitch, injectionSwitch)) * mat2(_GLF_ONE(1.0, injectionSwitch.y)), max((min(injectionSwitch, injectionSwitch)) * mat2(_GLF_ONE(1.0, injectionSwitch.y)), _GLF_IDENTITY((min(injectionSwitch, injectionSwitch)) * mat2(_GLF_ONE(1.0, injectionSwitch.y)), ((min(injectionSwitch, injectionSwitch)) * mat2(_GLF_ONE(1.0, injectionSwitch.y))) * mat2(1.0)))))).y)), _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(min(injectionSwitch, injectionSwitch), _GLF_IDENTITY((min(injectionSwitch, injectionSwitch)) * mat2(_GLF_ONE(1.0, injectionSwitch.y)), max((min(injectionSwitch, injectionSwitch)) * mat2(_GLF_ONE(1.0, injectionSwitch.y)), _GLF_IDENTITY((min(injectionSwitch, injectionSwitch)) * mat2(_GLF_ONE(1.0, injectionSwitch.y)), ((min(injectionSwitch, injectionSwitch)) * mat2(_GLF_ONE(1.0, injectionSwitch.y))) * mat2(1.0)))))).y, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(min(injectionSwitch, injectionSwitch), _GLF_IDENTITY((min(injectionSwitch, injectionSwitch)) * mat2(_GLF_ONE(1.0, injectionSwitch.y)), max((min(injectionSwitch, injectionSwitch)) * mat2(_GLF_ONE(1.0, injectionSwitch.y)), _GLF_IDENTITY((min(injectionSwitch, injectionSwitch)) * mat2(_GLF_ONE(1.0, injectionSwitch.y)), ((min(injectionSwitch, injectionSwitch)) * mat2(_GLF_ONE(1.0, injectionSwitch.y))) * mat2(1.0)))))).y)))) && true))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(0.6)), bool(false)))))))
  return;
 if(_GLF_DEAD(false))
  barrier();
 uint next_virtual_gid = _GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_id * subgroup_size, uint(uvec4(subgroup_id * subgroup_size, 0u, 1u, 1u))), _GLF_IDENTITY(0u, uint(uint(0u))) + (workgroup_base + subgroup_id * subgroup_size)) + ((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) << 0u) + 1, 0u ^ (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) << 0u) + 1))) % _GLF_IDENTITY(subgroup_size, (true ? subgroup_size : _GLF_FUZZED(subgroup_size))));
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) || false), (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
    }
   return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), (false) || false)))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     return;
     if(_GLF_DEAD(false))
      return;
    }
   return;
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, false)), bool(bool(bool(bvec2(false, false))))))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 uint read_1 = atomicLoad(buf[virtual_gid], 4, 64, 0);
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, ! (! (false))), false, true, true))), bool(bvec4(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, ! (! (false))), false, true, true))), false, true, false)))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)).y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, false)), false || (bool(bvec2(false, false)))))))
      barrier();
    }
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 atomicStore(buf[next_virtual_gid], _GLF_IDENTITY(uint(read_1 + 1), uint(_GLF_ONE(1.0, injectionSwitch.y)) * (uint(read_1 + 1))), 4, 64, 4);
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(! (! _GLF_IDENTITY((false), _GLF_IDENTITY(bool(bvec4((false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, true)), true && (_GLF_IDENTITY(bool(bvec4((false), _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, float(vec2(injectionSwitch.y, 1.0))), injectionSwitch.y, injectionSwitch.y)))), false, true)), ! (! (bool(bvec4((_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, false || (false))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, true))))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (! (! (false)))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 uint read_2 = atomicLoad(buf[virtual_gid], 4, 64, 0);
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec2(bvec2(false, true))))))))
    return;
   barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
    barrier();
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  return;
 if(subgroup_local_id + 1 < _GLF_IDENTITY(subgroup_size, min(subgroup_size, _GLF_IDENTITY(subgroup_size, (false ? _GLF_FUZZED(workgroup_size) : subgroup_size)))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y))))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
          return;
         barrier();
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       return;
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
       if(_GLF_DEAD(false))
        return;
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, false, true, false)), false || (bool(bvec4(false, false, true, false)))))))
      barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
        {
         if(_GLF_DEAD(false))
          return;
         barrier();
        }
       barrier();
      }
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY((false) || _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0)) + length(log(vec4(1.0, 1.0, 1.0, 1.0)))))), ! (! ((false) || _GLF_FALSE(_GLF_IDENTITY(false, true && (false)), (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0) > _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)), vec2(0.0, 0.0) + (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)), vec2(mat2x4(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)), 0.0, 1.0, 0.0, 1.0, 1.0, determinant(mat2(1.0, 0.0, 0.0, 1.0))))))).y, max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).y, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).y) * 1.0), _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).y))))))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   int i = 0;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, bool(bool(false))), false)))), (_GLF_IDENTITY(_GLF_IDENTITY(! _GLF_IDENTITY((false), ! (! ((false)))), ! (! (_GLF_IDENTITY(! (false), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(! (false), (! (false)) || false), true)), ! (! (bool(bvec2(_GLF_IDENTITY(! (false), (! _GLF_IDENTITY((false), true && ((false)))) || false), true))))))))), (! (false)) || false)) && true)))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   atomicStore(buf[next_virtual_gid], _GLF_IDENTITY(uint(_GLF_IDENTITY(read_1 + 1 == read_2, bool(bvec3(read_1 + 1 == read_2, true, true)))), 0u + (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(read_1 + 1, (read_1 + 1) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x))) == _GLF_IDENTITY(read_2, clamp(read_2, _GLF_IDENTITY(_GLF_IDENTITY(read_2, (true ? _GLF_IDENTITY(read_2, (_GLF_IDENTITY(read_2, max(read_2, read_2))) + 0u) : _GLF_FUZZED(subgroup_local_id))), ~ (~ (_GLF_IDENTITY(read_2, (true ? _GLF_IDENTITY(read_2, (_GLF_IDENTITY(read_2, max(read_2, read_2))) + 0u) : _GLF_FUZZED(subgroup_local_id)))))), read_2))), (_GLF_IDENTITY(uint(read_1 + 1 == read_2), max(uint(_GLF_IDENTITY(read_1, 0u | (_GLF_IDENTITY(read_1, min(read_1, read_1)))) + _GLF_IDENTITY(1, 0 | (1)) == read_2), uint(read_1 + 1 == read_2)))) | (uint(read_1 + 1 == read_2))), (_GLF_IDENTITY(_GLF_IDENTITY(uint(read_1 + 1 == _GLF_IDENTITY(read_2, clamp(read_2, _GLF_IDENTITY(read_2, (true ? read_2 : _GLF_IDENTITY(_GLF_FUZZED(subgroup_local_id), (_GLF_IDENTITY(_GLF_FUZZED(subgroup_local_id), _GLF_IDENTITY(uint(_GLF_ONE(1.0, injectionSwitch.y)) * (_GLF_FUZZED(subgroup_local_id)), (0u << _GLF_IDENTITY(uint(8u), _GLF_IDENTITY(uint(8u), (uint(8u)) / 1u))) | (uint(_GLF_ONE(1.0, injectionSwitch.y)) * (_GLF_FUZZED(subgroup_local_id)))))) << 0u))), read_2))), (_GLF_IDENTITY(uint(read_1 + 1 == read_2), max(uint(read_1 + _GLF_IDENTITY(1, 0 | (1)) == read_2), uint(_GLF_IDENTITY(read_1 + 1 == read_2, (read_1 + 1 == read_2) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))) | (uint(read_1 + _GLF_IDENTITY(1, (1) | (_GLF_IDENTITY(1, (1) ^ 0))) == _GLF_IDENTITY(read_2, (read_2) - 0u)))), (_GLF_IDENTITY(uint(read_1 + 1 == _GLF_IDENTITY(read_2, clamp(read_2, _GLF_IDENTITY(read_2, (true ? read_2 : _GLF_IDENTITY(_GLF_FUZZED(subgroup_local_id), (_GLF_IDENTITY(_GLF_FUZZED(subgroup_local_id), uint(_GLF_ONE(1.0, injectionSwitch.y)) * (_GLF_FUZZED(subgroup_local_id)))) << 0u))), read_2))), (_GLF_IDENTITY(uint(read_1 + 1 == read_2), max(uint(read_1 + _GLF_IDENTITY(1, 0 | (_GLF_IDENTITY(1, min(1, 1)))) == read_2), uint(read_1 + _GLF_IDENTITY(1, clamp(1, 1, 1)) == read_2)))) | _GLF_IDENTITY((uint(read_1 + 1 == read_2)), (false ? _GLF_FUZZED(read_1) : _GLF_IDENTITY((uint(read_1 + 1 == read_2)), ((uint(read_1 + 1 == read_2))) | ((uint(read_1 + 1 == read_2)))))))) * _GLF_IDENTITY(_GLF_IDENTITY(1u, (true ? 1u : _GLF_FUZZED(workgroup_base))), (_GLF_IDENTITY(1u, (true ? 1u : _GLF_FUZZED(workgroup_base)))) / 1u))) - 0u), ~ _GLF_IDENTITY((~ _GLF_IDENTITY((_GLF_IDENTITY(uint(read_1 + 1 == read_2), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(uint(read_1 + 1 == read_2), (_GLF_IDENTITY(uint(read_1 + 1 == read_2), (_GLF_IDENTITY(uint(read_1 + 1 == read_2), _GLF_IDENTITY(0u ^ (uint(_GLF_IDENTITY(read_1, _GLF_IDENTITY(_GLF_IDENTITY(uint(uvec3(read_1, 0u, 0u)), (uint(uvec3(read_1, 0u, 0u))) >> 0u), (uint(uvec3(_GLF_IDENTITY(read_1, min(read_1, _GLF_IDENTITY(read_1, (true ? read_1 : _GLF_FUZZED(118693u))))), 0u, 0u))) | 0u)) + 1 == read_2)), (0u ^ (uint(_GLF_IDENTITY(read_1, _GLF_IDENTITY(_GLF_IDENTITY(uint(uvec3(read_1, 0u, 0u)), (uint(uvec3(read_1, 0u, 0u))) >> 0u), (uint(uvec3(_GLF_IDENTITY(read_1, min(read_1, _GLF_IDENTITY(read_1, (true ? read_1 : _GLF_FUZZED(118693u))))), 0u, 0u))) | 0u)) + 1 == read_2))) - 0u))) | (_GLF_IDENTITY(uint(read_1 + 1 == read_2), 1u * (uint(read_1 + 1 == read_2)))))) | (uint(_GLF_IDENTITY(read_1 + _GLF_IDENTITY(1, (1) ^ 0), ~ (~ (read_1 + 1))) == read_2))), min(_GLF_IDENTITY(uint(read_1 + 1 == read_2), (_GLF_IDENTITY(_GLF_IDENTITY(uint(read_1 + 1 == read_2), max(uint(read_1 + 1 == read_2), _GLF_IDENTITY(uint(read_1 + 1 == read_2), max(uint(read_1 + 1 == read_2), uint(read_1 + 1 == read_2))))), (_GLF_IDENTITY(uint(read_1 + _GLF_IDENTITY(1, int(ivec4(1, 0, _GLF_IDENTITY(((1 << _GLF_IDENTITY(int(7), int(_GLF_IDENTITY(7, (_GLF_IDENTITY(7, clamp(7, 7, 7))) | (7))))) >> _GLF_IDENTITY(int(7), int(7))), (((1 << _GLF_IDENTITY(int(7), int(_GLF_IDENTITY(7, (_GLF_IDENTITY(7, clamp(7, 7, 7))) | (7))))) >> _GLF_IDENTITY(int(7), int(7)))) | (((1 << _GLF_IDENTITY(int(7), int(_GLF_IDENTITY(7, (_GLF_IDENTITY(7, clamp(7, 7, 7))) | (7))))) >> _GLF_IDENTITY(int(7), int(7))))), _GLF_IDENTITY(0, (0) / 1)))) == read_2), 0u ^ (uint(read_1 + 1 == read_2)))) | (_GLF_IDENTITY(uint(read_1 + 1 == read_2), 1u * (uint(read_1 + 1 == read_2)))))) | (uint(read_1 + 1 == read_2))), _GLF_IDENTITY(uint(_GLF_IDENTITY(read_1 + 1 == read_2, (_GLF_IDENTITY(read_1 + 1, 0u ^ (_GLF_IDENTITY(read_1 + 1, (read_1 + 1) - 0u))) == read_2) || false)), (_GLF_IDENTITY(uint(read_1 + 1 == read_2), (_GLF_IDENTITY(uint(read_1 + 1 == read_2), 0u ^ (_GLF_IDENTITY(uint(read_1 + 1 == read_2), max(uint(read_1 + 1 == read_2), uint(read_1 + _GLF_IDENTITY(1, int(int(1))) == read_2)))))) | _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(uint(read_1 + 1 == read_2), 1u * _GLF_IDENTITY((uint(read_1 + 1 == read_2)), uint(uvec2(_GLF_IDENTITY((_GLF_IDENTITY(uint(read_1 + 1 == read_2), (uint(read_1 + 1 == read_2)) / 1u)), (true ? (uint(read_1 + 1 == read_2)) : _GLF_FUZZED(_GLF_IDENTITY(read_2, (read_2) ^ 0u)))), 0u))))), min(_GLF_IDENTITY((_GLF_IDENTITY(uint(read_1 + 1 == read_2), 1u * _GLF_IDENTITY((uint(read_1 + 1 == read_2)), uint(uvec2(_GLF_IDENTITY((_GLF_IDENTITY(uint(read_1 + 1 == read_2), (uint(read_1 + 1 == read_2)) / 1u)), (true ? (uint(read_1 + 1 == read_2)) : _GLF_FUZZED(_GLF_IDENTITY(read_2, (read_2) ^ 0u)))), 0u))))), max((_GLF_IDENTITY(uint(read_1 + 1 == read_2), 1u * _GLF_IDENTITY((uint(read_1 + 1 == read_2)), uint(uvec2(_GLF_IDENTITY((_GLF_IDENTITY(uint(read_1 + 1 == read_2), (uint(read_1 + 1 == read_2)) / 1u)), (true ? (uint(read_1 + 1 == read_2)) : _GLF_FUZZED(_GLF_IDENTITY(read_2, (read_2) ^ 0u)))), 0u))))), (_GLF_IDENTITY(uint(read_1 + 1 == read_2), 1u * _GLF_IDENTITY((uint(read_1 + 1 == read_2)), uint(uvec2(_GLF_IDENTITY((_GLF_IDENTITY(uint(read_1 + 1 == read_2), (uint(read_1 + 1 == read_2)) / 1u)), (true ? (uint(read_1 + 1 == read_2)) : _GLF_FUZZED(_GLF_IDENTITY(read_2, (read_2) ^ 0u)))), 0u))))))), (_GLF_IDENTITY(uint(read_1 + 1 == read_2), 1u * _GLF_IDENTITY((uint(read_1 + 1 == read_2)), uint(uvec2(_GLF_IDENTITY((_GLF_IDENTITY(uint(read_1 + 1 == read_2), (uint(read_1 + 1 == read_2)) / 1u)), (true ? (uint(read_1 + 1 == read_2)) : _GLF_FUZZED(_GLF_IDENTITY(read_2, (read_2) ^ 0u)))), 0u))))))), (_GLF_IDENTITY((_GLF_IDENTITY(uint(read_1 + 1 == read_2), 1u * (uint(read_1 + _GLF_IDENTITY(1, 0 | (1)) == read_2)))), min((_GLF_IDENTITY(uint(read_1 + 1 == read_2), 1u * (uint(read_1 + _GLF_IDENTITY(1, 0 | (1)) == read_2)))), (_GLF_IDENTITY(uint(read_1 + 1 == read_2), 1u * (uint(read_1 + _GLF_IDENTITY(1, 0 | (1)) == read_2))))))) ^ 0u))) | (uint(read_1 + 1 == read_2))))), max(uint(read_1 + 1 == _GLF_IDENTITY(read_2, (_GLF_IDENTITY(_GLF_IDENTITY(read_2, clamp(read_2, read_2, _GLF_IDENTITY(read_2, (_GLF_IDENTITY(read_2, (read_2) | 0u)) ^ 0u))), min(_GLF_IDENTITY(_GLF_IDENTITY(read_2, uint(uint(_GLF_IDENTITY(read_2, min(read_2, read_2))))), clamp(_GLF_IDENTITY(read_2, uint(uint(_GLF_IDENTITY(read_2, min(read_2, read_2))))), _GLF_IDENTITY(read_2, uint(uint(_GLF_IDENTITY(read_2, min(read_2, read_2))))), _GLF_IDENTITY(read_2, uint(uint(_GLF_IDENTITY(read_2, min(read_2, read_2))))))), read_2))) | (read_2))), uint(read_1 + 1 == read_2)))) | (_GLF_IDENTITY(uint(_GLF_IDENTITY(read_1 + 1 == read_2, _GLF_IDENTITY(bool(bool(read_1 + 1 == read_2)), bool(bool(bool(bool(read_1 + 1 == _GLF_IDENTITY(read_2, (read_2) | 0u)))))))), ~ (~ (uint(_GLF_IDENTITY(read_1 + 1 == read_2, _GLF_IDENTITY(bool(bool(read_1 + 1 == read_2)), bool(bool(bool(bool(read_1 + 1 == _GLF_IDENTITY(read_2, (read_2) | 0u)))))))))))))), ((_GLF_IDENTITY(uint(read_1 + 1 == read_2), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(uint(read_1 + 1 == read_2), (_GLF_IDENTITY(uint(read_1 + _GLF_IDENTITY(1, min(1, 1)) == read_2), (_GLF_IDENTITY(uint(read_1 + 1 == read_2), 0u ^ (uint(_GLF_IDENTITY(read_1, _GLF_IDENTITY(uint(uvec3(read_1, 0u, 0u)), _GLF_IDENTITY((uint(uvec3(read_1, 0u, _GLF_IDENTITY(0u, (0u) ^ 0u)))), ((uint(uvec3(read_1, 0u, _GLF_IDENTITY(0u, (0u) ^ 0u))))) | 0u) | 0u)) + 1 == read_2)))) | (_GLF_IDENTITY(uint(read_1 + 1 == read_2), 1u * (uint(_GLF_IDENTITY(read_1 + 1, (true ? _GLF_IDENTITY(read_1, (0u & 133631u) ^ (read_1)) + 1 : _GLF_FUZZED(next_virtual_gid))) == read_2)))))) | (uint(_GLF_IDENTITY(read_1 + _GLF_IDENTITY(1, (1) << (0 >> _GLF_IDENTITY(int(2), int(_GLF_IDENTITY(2, ~ (~ (2))))))), ~ (_GLF_IDENTITY(~ (read_1 + 1), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(num_workgroup) : _GLF_IDENTITY(~ (read_1 + 1), (true ? ~ (read_1 + 1) : _GLF_FUZZED(workgroup_size))))))) == read_2))), min(_GLF_IDENTITY(uint(read_1 + 1 == read_2), (_GLF_IDENTITY(uint(read_1 + 1 == read_2), _GLF_IDENTITY((_GLF_IDENTITY(uint(read_1 + 1 == read_2), 0u ^ (uint(read_1 + 1 == read_2)))), clamp((_GLF_IDENTITY(uint(read_1 + 1 == read_2), 0u ^ (uint(read_1 + 1 == read_2)))), _GLF_IDENTITY((_GLF_IDENTITY(uint(read_1 + 1 == read_2), 0u ^ (uint(read_1 + 1 == read_2)))), ((_GLF_IDENTITY(uint(read_1 + 1 == read_2), 0u ^ (uint(read_1 + 1 == read_2))))) | ((_GLF_IDENTITY(uint(read_1 + 1 == read_2), 0u ^ (uint(read_1 + 1 == read_2)))))), _GLF_IDENTITY((_GLF_IDENTITY(uint(read_1 + 1 == read_2), 0u ^ (_GLF_IDENTITY(uint(read_1 + 1 == read_2), min(uint(read_1 + 1 == read_2), _GLF_IDENTITY(uint(read_1 + 1 == read_2), (uint(read_1 + 1 == read_2)) << 0u)))))), ((_GLF_IDENTITY(uint(read_1 + 1 == read_2), 0u ^ (uint(read_1 + 1 == read_2))))) ^ (0u << _GLF_IDENTITY(uint(7u), uint(7u)))))) | (_GLF_IDENTITY(uint(read_1 + 1 == read_2), 1u * (uint(read_1 + 1 == read_2)))))) | (uint(read_1 + 1 == read_2))), _GLF_IDENTITY(uint(_GLF_IDENTITY(read_1 + _GLF_IDENTITY(1, (1) << (0 >> _GLF_IDENTITY(int(6), int(6)))) == read_2, (_GLF_IDENTITY(_GLF_IDENTITY(read_1, (read_1) / 1u) + 1, (_GLF_IDENTITY(false, ! (! (false))) ? _GLF_FUZZED(num_workgroup) : _GLF_IDENTITY(read_1, (read_1) / 1u) + 1)) == _GLF_IDENTITY(read_2, (_GLF_IDENTITY(read_2, (read_2) / 1u)) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x)))) || false)), (_GLF_IDENTITY(uint(_GLF_IDENTITY(read_1 + 1, 1u * (_GLF_IDENTITY(read_1 + 1, (read_1 + 1) - 0u))) == read_2), (_GLF_IDENTITY(_GLF_IDENTITY(uint(read_1 + 1 == read_2), 0u ^ (uint(read_1 + 1 == read_2))), uint(_GLF_IDENTITY(uvec4(_GLF_IDENTITY(uint(read_1 + 1 == read_2), 0u ^ (uint(read_1 + 1 == read_2))), 1u, (0u | 0u), uint(_GLF_ONE(1.0, injectionSwitch.y))), ~ (~ (uvec4(_GLF_IDENTITY(uint(read_1 + 1 == read_2), 0u ^ (uint(read_1 + 1 == read_2))), 1u, (0u | 0u), uint(_GLF_ONE(1.0, injectionSwitch.y))))))))) | _GLF_IDENTITY((_GLF_IDENTITY(uint(_GLF_IDENTITY(read_1 + 1 == read_2, false || (read_1 + 1 == read_2))), 1u * (uint(read_1 + 1 == read_2)))), ((_GLF_IDENTITY(uint(read_1 + 1 == read_2), 1u * (_GLF_IDENTITY(uint(read_1 + 1 == read_2), (uint(read_1 + 1 == read_2)) / uint(_GLF_ONE(1.0, injectionSwitch.y))))))) ^ 0u))) | (uint(read_1 + 1 == read_2))))), max(uint(read_1 + 1 == _GLF_IDENTITY(read_2, (_GLF_IDENTITY(read_2, min(_GLF_IDENTITY(read_2, uint(uint(read_2))), read_2))) | (read_2))), uint(read_1 + 1 == read_2)))) | (uint(_GLF_IDENTITY(read_1 + _GLF_IDENTITY(1, (1) | 0) == read_2, _GLF_IDENTITY(bool(bool(read_1 + 1 == read_2)), bool(bool(bool(bool(read_1 + 1 == read_2))))))))))) - 0u)), ((~ _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(uint(read_1 + 1 == read_2), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(uint(read_1 + 1 == read_2), (_GLF_IDENTITY(uint(read_1 + 1 == read_2), (_GLF_IDENTITY(uint(read_1 + 1 == read_2), 0u ^ (uint(_GLF_IDENTITY(read_1, _GLF_IDENTITY(uint(uvec3(read_1, 0u, 0u)), (uint(uvec3(read_1, 0u, 0u))) | 0u)) + 1 == read_2)))) | (_GLF_IDENTITY(uint(_GLF_IDENTITY(read_1 + 1, max(read_1 + 1, read_1 + 1)) == read_2), 1u * (uint(read_1 + 1 == read_2)))))) | (uint(_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1, ~ (~ (read_1 + 1))), (_GLF_IDENTITY(read_1 + 1, ~ (~ (read_1 + 1)))) >> (0u | 0u)) == read_2))), min(_GLF_IDENTITY(uint(read_1 + 1 == read_2), (_GLF_IDENTITY(uint(read_1 + 1 == read_2), (_GLF_IDENTITY(uint(read_1 + 1 == read_2), 0u ^ (uint(read_1 + 1 == read_2)))) | (_GLF_IDENTITY(uint(read_1 + 1 == read_2), 1u * (_GLF_IDENTITY(uint(read_1 + 1 == read_2), 0u | (uint(read_1 + 1 == read_2)))))))) | (uint(read_1 + 1 == read_2))), _GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1 == read_2, false || (read_1 + 1 == read_2)), (read_1 + 1 == read_2) || false)), (_GLF_IDENTITY(uint(read_1 + 1 == read_2), (_GLF_IDENTITY(uint(read_1 + 1 == read_2), 0u ^ (uint(_GLF_IDENTITY(read_1 + 1, ~ (~ (_GLF_IDENTITY(read_1, min(read_1, read_1)) + 1))) == read_2)))) | _GLF_IDENTITY((_GLF_IDENTITY(uint(read_1 + 1 == read_2), 1u * (uint(read_1 + _GLF_IDENTITY(1, clamp(1, 1, _GLF_IDENTITY(1, min(1, 1)))) == read_2)))), ((_GLF_IDENTITY(_GLF_IDENTITY(uint(read_1 + 1 == read_2), clamp(_GLF_IDENTITY(uint(read_1 + 1 == read_2), (uint(read_1 + 1 == read_2)) | 0u), uint(read_1 + 1 == read_2), uint(read_1 + 1 == read_2))), 1u * (uint(read_1 + 1 == read_2))))) ^ 0u))) | (uint(read_1 + 1 == read_2))))), max(uint(read_1 + 1 == _GLF_IDENTITY(read_2, (_GLF_IDENTITY(read_2, min(_GLF_IDENTITY(read_2, uint(uint(read_2))), read_2))) | (read_2))), uint(read_1 + 1 == read_2)))) | (uint(_GLF_IDENTITY(read_1 + 1 == read_2, _GLF_IDENTITY(bool(bool(read_1 + 1 == read_2)), bool(bool(bool(bool(read_1 + 1 == read_2))))))))), (_GLF_IDENTITY(uint(read_1 + 1 == read_2), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(uint(read_1 + 1 == read_2), (_GLF_IDENTITY(uint(read_1 + 1 == read_2), (_GLF_IDENTITY(uint(read_1 + 1 == read_2), 0u ^ (uint(_GLF_IDENTITY(read_1, _GLF_IDENTITY(uint(uvec3(read_1, 0u, 0u)), (uint(uvec3(read_1, 0u, 0u))) | 0u)) + 1 == read_2)))) | (_GLF_IDENTITY(uint(_GLF_IDENTITY(read_1 + 1, max(_GLF_IDENTITY(read_1 + 1, (read_1 + 1) - (0u | 0u)), read_1 + 1)) == read_2), 1u * (uint(_GLF_IDENTITY(read_1 + 1, (uint(_GLF_ZERO(0.0, injectionSwitch.x)) << _GLF_IDENTITY(uint(8u), uint(8u))) + (read_1 + 1)) == read_2)))))) | (uint(_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1, ~ (~ (read_1 + 1))), (_GLF_IDENTITY(read_1 + 1, ~ (~ (read_1 + 1)))) >> (0u | 0u)) == read_2))), min(_GLF_IDENTITY(uint(read_1 + 1 == read_2), (_GLF_IDENTITY(uint(read_1 + 1 == read_2), (_GLF_IDENTITY(uint(read_1 + _GLF_IDENTITY(1, min(1, 1)) == read_2), 0u ^ (uint(read_1 + 1 == read_2)))) | (_GLF_IDENTITY(uint(read_1 + 1 == read_2), 1u * (_GLF_IDENTITY(uint(read_1 + 1 == read_2), 0u | (uint(read_1 + 1 == read_2)))))))) | (uint(read_1 + 1 == read_2))), _GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1 == read_2, _GLF_IDENTITY(false || (read_1 + 1 == read_2), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(false || (read_1 + 1 == read_2), false || (false || (read_1 + 1 == read_2))), true)), ! (! (bool(bvec2(_GLF_IDENTITY(false || (read_1 + 1 == read_2), false || (false || (read_1 + 1 == read_2))), true))))))), (read_1 + 1 == read_2) || false)), (_GLF_IDENTITY(uint(read_1 + 1 == read_2), (_GLF_IDENTITY(uint(read_1 + 1 == read_2), 0u ^ (uint(_GLF_IDENTITY(read_1 + 1, ~ (~ (_GLF_IDENTITY(read_1, min(read_1, read_1)) + 1))) == read_2)))) | _GLF_IDENTITY((_GLF_IDENTITY(uint(read_1 + 1 == read_2), 1u * (uint(read_1 + _GLF_IDENTITY(1, clamp(1, 1, _GLF_IDENTITY(1, min(1, 1)))) == read_2)))), ((_GLF_IDENTITY(_GLF_IDENTITY(uint(read_1 + 1 == read_2), clamp(_GLF_IDENTITY(uint(read_1 + 1 == read_2), (uint(read_1 + 1 == read_2)) | 0u), uint(read_1 + 1 == read_2), uint(read_1 + 1 == read_2))), 1u * (uint(read_1 + 1 == read_2))))) ^ 0u))) | (uint(read_1 + 1 == read_2))))), max(uint(_GLF_IDENTITY(read_1 + 1 == _GLF_IDENTITY(read_2, (_GLF_IDENTITY(read_2, min(_GLF_IDENTITY(read_2, uint(uint(read_2))), read_2))) | (read_2)), true && (read_1 + 1 == _GLF_IDENTITY(read_2, (_GLF_IDENTITY(_GLF_IDENTITY(read_2, 0u ^ (read_2)), min(_GLF_IDENTITY(read_2, uint(uint(read_2))), read_2))) | (read_2))))), uint(read_1 + 1 == read_2)))) | (uint(_GLF_IDENTITY(read_1 + 1 == read_2, _GLF_IDENTITY(bool(bool(read_1 + 1 == read_2)), bool(bool(bool(bool(read_1 + 1 == read_2)))))))))) - 0u)), ((_GLF_IDENTITY(_GLF_IDENTITY(uint(read_1 + 1 == read_2), min(uint(read_1 + 1 == read_2), uint(read_1 + 1 == read_2))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(uint(read_1 + 1 == read_2), _GLF_IDENTITY((_GLF_IDENTITY(uint(read_1 + 1 == read_2), (_GLF_IDENTITY(uint(read_1 + 1 == read_2), 0u ^ (uint(_GLF_IDENTITY(_GLF_IDENTITY(read_1, uint(uvec4(read_1, (0u ^ 0u), 0u, 1u))), _GLF_IDENTITY(uint(uvec3(read_1, 0u, 0u)), (uint(uvec3(read_1, 0u, 0u))) | 0u)) + 1 == read_2)))) | (_GLF_IDENTITY(uint(read_1 + 1 == read_2), 1u * (uint(read_1 + 1 == read_2)))))), (_GLF_IDENTITY((_GLF_IDENTITY(uint(read_1 + 1 == read_2), (_GLF_IDENTITY(uint(read_1 + 1 == read_2), 0u ^ (uint(_GLF_IDENTITY(_GLF_IDENTITY(read_1, uint(uvec4(read_1, (0u ^ 0u), 0u, 1u))), _GLF_IDENTITY(uint(uvec3(read_1, 0u, 0u)), (uint(uvec3(read_1, 0u, 0u))) | 0u)) + 1 == read_2)))) | (_GLF_IDENTITY(uint(read_1 + 1 == read_2), 1u * (uint(read_1 + 1 == read_2)))))), ((_GLF_IDENTITY(uint(read_1 + 1 == read_2), (_GLF_IDENTITY(uint(read_1 + 1 == read_2), 0u ^ (uint(_GLF_IDENTITY(_GLF_IDENTITY(read_1, uint(uvec4(read_1, (0u ^ 0u), 0u, 1u))), _GLF_IDENTITY(uint(uvec3(read_1, 0u, 0u)), (uint(uvec3(read_1, 0u, 0u))) | 0u)) + 1 == read_2)))) | (_GLF_IDENTITY(uint(read_1 + 1 == read_2), 1u * (uint(read_1 + 1 == read_2))))))) >> 0u)) | (_GLF_IDENTITY((_GLF_IDENTITY(uint(read_1 + 1 == read_2), (_GLF_IDENTITY(uint(read_1 + 1 == read_2), 0u ^ (uint(_GLF_IDENTITY(_GLF_IDENTITY(read_1, uint(uvec4(read_1, (0u ^ 0u), 0u, 1u))), _GLF_IDENTITY(uint(uvec3(read_1, 0u, 0u)), (uint(uvec3(read_1, 0u, 0u))) | 0u)) + 1 == read_2)))) | (_GLF_IDENTITY(uint(read_1 + 1 == read_2), 1u * (uint(read_1 + 1 == read_2)))))), ~ (~ ((_GLF_IDENTITY(uint(read_1 + 1 == read_2), (_GLF_IDENTITY(uint(read_1 + 1 == read_2), 0u ^ (uint(_GLF_IDENTITY(_GLF_IDENTITY(read_1, uint(uvec4(read_1, (0u ^ 0u), 0u, 1u))), _GLF_IDENTITY(uint(uvec3(read_1, 0u, 0u)), (uint(uvec3(read_1, 0u, 0u))) | 0u)) + 1 == read_2)))) | (_GLF_IDENTITY(uint(read_1 + 1 == read_2), 1u * (uint(read_1 + 1 == read_2))))))))))) | (uint(_GLF_IDENTITY(read_1 + 1, ~ _GLF_IDENTITY((~ (read_1 + 1)), uint(uvec4((~ (read_1 + 1)), uint(_GLF_ZERO(0.0, injectionSwitch.x)), 0u, 0u)))) == read_2))), 0u | (_GLF_IDENTITY(uint(read_1 + 1 == read_2), _GLF_IDENTITY((_GLF_IDENTITY(uint(read_1 + 1 == read_2), (_GLF_IDENTITY(uint(read_1 + 1 == read_2), 0u ^ (uint(_GLF_IDENTITY(_GLF_IDENTITY(read_1, uint(uvec4(read_1, (0u ^ 0u), 0u, 1u))), _GLF_IDENTITY(uint(uvec3(read_1, 0u, 0u)), (uint(uvec3(read_1, 0u, 0u))) | 0u)) + 1 == read_2)))) | (_GLF_IDENTITY(uint(read_1 + 1 == read_2), 1u * (uint(read_1 + 1 == read_2)))))), (_GLF_IDENTITY((_GLF_IDENTITY(uint(read_1 + 1 == read_2), (_GLF_IDENTITY(uint(read_1 + 1 == read_2), 0u ^ (uint(_GLF_IDENTITY(_GLF_IDENTITY(read_1, uint(uvec4(read_1, (0u ^ 0u), 0u, 1u))), _GLF_IDENTITY(uint(uvec3(read_1, 0u, 0u)), (uint(uvec3(read_1, 0u, 0u))) | 0u)) + 1 == read_2)))) | (_GLF_IDENTITY(uint(read_1 + 1 == read_2), 1u * (uint(read_1 + 1 == read_2)))))), ((_GLF_IDENTITY(uint(read_1 + 1 == read_2), (_GLF_IDENTITY(uint(read_1 + 1 == read_2), 0u ^ (uint(_GLF_IDENTITY(_GLF_IDENTITY(read_1, uint(uvec4(read_1, (0u ^ 0u), 0u, 1u))), _GLF_IDENTITY(uint(uvec3(read_1, 0u, 0u)), (uint(uvec3(read_1, 0u, 0u))) | 0u)) + 1 == read_2)))) | (_GLF_IDENTITY(uint(read_1 + 1 == read_2), 1u * (uint(read_1 + 1 == read_2))))))) >> 0u)) | (_GLF_IDENTITY((_GLF_IDENTITY(uint(read_1 + 1 == read_2), (_GLF_IDENTITY(uint(read_1 + 1 == read_2), 0u ^ (uint(_GLF_IDENTITY(_GLF_IDENTITY(read_1, uint(uvec4(read_1, (0u ^ 0u), 0u, 1u))), _GLF_IDENTITY(uint(uvec3(read_1, 0u, 0u)), (uint(uvec3(read_1, 0u, 0u))) | 0u)) + 1 == read_2)))) | (_GLF_IDENTITY(uint(read_1 + 1 == read_2), 1u * (uint(read_1 + 1 == read_2)))))), ~ (~ ((_GLF_IDENTITY(uint(read_1 + 1 == read_2), (_GLF_IDENTITY(uint(read_1 + 1 == read_2), 0u ^ (uint(_GLF_IDENTITY(_GLF_IDENTITY(read_1, uint(uvec4(read_1, (0u ^ 0u), 0u, 1u))), _GLF_IDENTITY(uint(uvec3(read_1, 0u, 0u)), (uint(uvec3(read_1, 0u, 0u))) | 0u)) + 1 == read_2)))) | (_GLF_IDENTITY(uint(read_1 + 1 == read_2), 1u * (uint(read_1 + 1 == read_2))))))))))) | (uint(_GLF_IDENTITY(read_1 + 1, ~ _GLF_IDENTITY((~ (read_1 + 1)), uint(uvec4((~ (read_1 + 1)), uint(_GLF_ZERO(0.0, injectionSwitch.x)), 0u, 0u)))) == read_2))))), min(_GLF_IDENTITY(uint(read_1 + 1 == read_2), (_GLF_IDENTITY(uint(read_1 + 1 == read_2), (_GLF_IDENTITY(uint(read_1 + _GLF_IDENTITY(1, (1) | (1)) == read_2), 0u ^ (uint(read_1 + 1 == read_2)))) | (_GLF_IDENTITY(uint(_GLF_IDENTITY(read_1 + 1, max(read_1 + 1, read_1 + 1)) == read_2), 1u * (uint(read_1 + 1 == read_2)))))) | _GLF_IDENTITY((uint(read_1 + 1 == _GLF_IDENTITY(read_2, (read_2) | (read_2)))), (false ? _GLF_FUZZED(subgroup_local_id) : (uint(read_1 + 1 == _GLF_IDENTITY(read_2, (read_2) | (read_2))))))), _GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1 == _GLF_IDENTITY(read_2, (_GLF_IDENTITY(read_2, 0u ^ (read_2))) << 0u), (read_1 + 1 == read_2) || false), false || (_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1 == read_2, (read_1 + 1 == read_2) || false), bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1 == read_2, (_GLF_IDENTITY(read_1 + 1 == read_2, bool(bvec3(read_1 + 1 == read_2, true, true)))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), (read_1 + 1 == read_2) || false), false, false)))))), (_GLF_IDENTITY(uint(read_1 + 1 == read_2), (_GLF_IDENTITY(uint(read_1 + 1 == read_2), 0u ^ (uint(read_1 + 1 == read_2)))) | _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(uint(read_1 + 1 == read_2), 1u * (uint(read_1 + 1 == read_2)))), ((_GLF_IDENTITY(uint(read_1 + 1 == read_2), 1u * (uint(read_1 + 1 == read_2))))) ^ 0u), (true ? _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(uint(read_1 + 1 == read_2), 1u * (uint(read_1 + 1 == read_2)))), ((_GLF_IDENTITY(uint(read_1 + 1 == read_2), 1u * (uint(read_1 + 1 == read_2))))) ^ 0u), 1u * (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(uint(read_1 + 1 == read_2), 1u * (uint(read_1 + 1 == read_2)))), ((_GLF_IDENTITY(uint(read_1 + 1 == read_2), 1u * (uint(read_1 + 1 == read_2))))) ^ 0u), ~ (~ (_GLF_IDENTITY((_GLF_IDENTITY(uint(read_1 + 1 == read_2), 1u * (uint(read_1 + 1 == read_2)))), ((_GLF_IDENTITY(uint(read_1 + 1 == read_2), 1u * (uint(read_1 + 1 == read_2))))) ^ 0u)))))) : _GLF_FUZZED(workgroup_size))))) | (uint(read_1 + 1 == read_2))))), max(uint(read_1 + 1 == _GLF_IDENTITY(read_2, (_GLF_IDENTITY(read_2, min(_GLF_IDENTITY(read_2, uint(uint(read_2))), read_2))) | (read_2))), uint(read_1 + 1 == read_2)))) | (uint(_GLF_IDENTITY(read_1 + 1 == read_2, _GLF_IDENTITY(bool(bool(read_1 + 1 == read_2)), bool(bool(bool(bool(read_1 + 1 == read_2))))))))))) - 0u))) + 0u)), min(_GLF_IDENTITY(_GLF_IDENTITY(uint(read_1 + 1 == read_2), (_GLF_TRUE(_GLF_IDENTITY(true, (true) || false), _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))) * mat2(_GLF_ONE(1.0, injectionSwitch.y))))).x < injectionSwitch.y), ((_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))).x < injectionSwitch.y)) || false)) ? uint(read_1 + 1 == read_2) : _GLF_IDENTITY(_GLF_FUZZED(workgroup_base), (_GLF_FUZZED(workgroup_base)) >> _GLF_IDENTITY(0u, uint(uvec4(0u, 1u, 0u, 0u)))))), (_GLF_IDENTITY(_GLF_IDENTITY(uint(read_1 + 1 == read_2), _GLF_IDENTITY(max(uint(read_1 + 1 == read_2), uint(_GLF_IDENTITY(read_1 + 1 == read_2, (read_1 + 1 == read_2) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(max(uint(read_1 + 1 == read_2), uint(read_1 + 1 == read_2)), 0u + (_GLF_IDENTITY(max(uint(read_1 + 1 == read_2), uint(read_1 + 1 == read_2)), 0u ^ (max(uint(read_1 + 1 == read_2), uint(read_1 + 1 == read_2))))))), 0u ^ _GLF_IDENTITY((~ (_GLF_IDENTITY(max(uint(read_1 + 1 == read_2), uint(read_1 + 1 == read_2)), 0u + (max(uint(read_1 + 1 == read_2), uint(read_1 + 1 == read_2)))))), (false ? _GLF_FUZZED(read_2) : (~ (_GLF_IDENTITY(max(uint(read_1 + 1 == read_2), uint(read_1 + 1 == read_2)), 0u + (max(uint(read_1 + 1 == read_2), uint(read_1 + 1 == read_2)))))))))))), _GLF_IDENTITY(0u, uint(_GLF_IDENTITY(uvec3(0u, 0u, 1u), (uvec3(0u, 0u, 1u)) | uvec3(0u, 0u, 0u)))) ^ (_GLF_IDENTITY(uint(read_1 + 1 == read_2), _GLF_IDENTITY(max(uint(read_1 + 1 == read_2), uint(read_1 + 1 == _GLF_IDENTITY(read_2, min(read_2, read_2)))), _GLF_IDENTITY(~ (~ _GLF_IDENTITY((_GLF_IDENTITY(max(uint(read_1 + 1 == read_2), uint(read_1 + 1 == read_2)), 0u + (max(uint(read_1 + 1 == read_2), uint(read_1 + 1 == read_2))))), ((_GLF_IDENTITY(max(uint(read_1 + 1 == read_2), uint(read_1 + 1 == read_2)), 0u + (max(uint(read_1 + 1 == read_2), uint(read_1 + 1 == read_2)))))) | 0u)), max(~ (~ _GLF_IDENTITY((_GLF_IDENTITY(max(uint(read_1 + 1 == read_2), uint(read_1 + 1 == read_2)), 0u + (max(uint(read_1 + 1 == read_2), uint(read_1 + 1 == read_2))))), ((_GLF_IDENTITY(max(uint(read_1 + 1 == read_2), uint(read_1 + 1 == read_2)), 0u + (max(uint(read_1 + 1 == read_2), uint(read_1 + 1 == read_2)))))) | 0u)), ~ (~ _GLF_IDENTITY((_GLF_IDENTITY(max(uint(read_1 + 1 == read_2), uint(read_1 + 1 == read_2)), 0u + (max(uint(read_1 + 1 == read_2), uint(read_1 + 1 == read_2))))), ((_GLF_IDENTITY(max(uint(read_1 + 1 == read_2), uint(read_1 + 1 == read_2)), 0u + (max(uint(read_1 + 1 == read_2), uint(read_1 + 1 == read_2)))))) | 0u))))))))) | (uint(_GLF_IDENTITY(read_1 + 1, (true ? read_1 + 1 : _GLF_FUZZED(subgroup_local_id))) == read_2))), _GLF_IDENTITY(uint(_GLF_IDENTITY(read_1 + 1 == read_2, bool(bvec4(_GLF_IDENTITY(read_1 + 1 == read_2, ! (! (_GLF_IDENTITY(read_1 + 1, 1u * (read_1 + 1)) == read_2))), true, false, false)))), (_GLF_IDENTITY(uint(read_1 + 1 == _GLF_IDENTITY(read_2, min(_GLF_IDENTITY(read_2, ~ (_GLF_IDENTITY(~ (read_2), ~ (~ (~ (read_2)))))), read_2))), max(uint(read_1 + 1 == read_2), uint(read_1 + 1 == read_2)))) | (uint(read_1 + 1 == read_2))))))) + 1, 4, 64, 4);
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))))) || false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
    }
  }
 else
  {
   atomicStore(buf[_GLF_IDENTITY(_GLF_IDENTITY(next_virtual_gid, (true ? next_virtual_gid : _GLF_FUZZED(subgroup_size))), _GLF_IDENTITY(1u * (_GLF_IDENTITY(next_virtual_gid, (_GLF_IDENTITY(true, true && (true)) ? next_virtual_gid : _GLF_FUZZED(num_workgroup)))), (_GLF_IDENTITY(true ? 1u * (_GLF_IDENTITY(next_virtual_gid, (_GLF_IDENTITY(true, true && (true)) ? next_virtual_gid : _GLF_IDENTITY(_GLF_FUZZED(num_workgroup), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_FUZZED(num_workgroup), (_GLF_FUZZED(num_workgroup)) >> 0u)), 0u + (_GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_FUZZED(num_workgroup), (_GLF_FUZZED(num_workgroup)) >> 0u)), ~ (~ (~ (_GLF_IDENTITY(_GLF_FUZZED(num_workgroup), (_GLF_FUZZED(num_workgroup)) >> 0u)))))))))))) : _GLF_FUZZED(uvec4(69080u, 169863u, 194748u, 96695u).s), (true ? true ? 1u * (_GLF_IDENTITY(_GLF_IDENTITY(next_virtual_gid, (_GLF_IDENTITY(true, true && (true)) ? next_virtual_gid : _GLF_IDENTITY(_GLF_FUZZED(num_workgroup), ~ (~ (_GLF_IDENTITY(_GLF_FUZZED(num_workgroup), (_GLF_FUZZED(num_workgroup)) >> 0u)))))), 0u | (_GLF_IDENTITY(next_virtual_gid, (_GLF_IDENTITY(true, true && (true)) ? next_virtual_gid : _GLF_IDENTITY(_GLF_FUZZED(num_workgroup), ~ (~ (_GLF_IDENTITY(_GLF_FUZZED(num_workgroup), (_GLF_FUZZED(num_workgroup)) >> 0u))))))))) : _GLF_FUZZED(uvec4(69080u, 169863u, 194748u, 96695u).s) : _GLF_FUZZED(169313u))))))], uint(read_1 + 1 == read_2) + 1, 4, 64, 4);
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_DEAD(false), true))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
      }
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec3(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))), (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
        barrier();
       barrier();
      }
     barrier();
    }
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), ! (! (! (! (false))))))))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, false || (false)), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch)), vec2(injectionSwitch[0], injectionSwitch[1]))) / vec2(1.0, 1.0)).y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
    barrier();
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  barrier();
}
