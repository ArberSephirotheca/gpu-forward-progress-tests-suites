#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) && true)))))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, ! (! (false)))))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
        barrier();
       barrier();
      }
     barrier();
    }
   return;
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-7.0), _GLF_FUZZED(float(false))), vec2((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch)[1], (true ? (injectionSwitch)[1] : _GLF_FUZZED(429.427)))), bvec2(true, true))).y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) && true), (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec4(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, false, true))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       return;
      }
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(mat2(1.0) * (injectionSwitch), min(mat2(1.0) * (injectionSwitch), _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), clamp(mat2(1.0) * (injectionSwitch), mat2(1.0) * (injectionSwitch), mat2(1.0) * (injectionSwitch))))), (_GLF_IDENTITY(mat2(1.0) * (injectionSwitch), min(mat2(1.0) * (injectionSwitch), _GLF_IDENTITY(mat2(_GLF_IDENTITY(1.0, (1.0) / 1.0)) * (injectionSwitch), clamp(mat2(1.0) * (injectionSwitch), mat2(1.0) * (injectionSwitch), mat2(1.0) * (injectionSwitch)))))) - sqrt(vec2(0.0, 0.0)))).y), ! (! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), min(_GLF_IDENTITY(mat2(1.0) * (injectionSwitch), _GLF_IDENTITY(vec2(_GLF_IDENTITY(mat3x4(mat2(1.0) * (injectionSwitch), 0.0, 1.0, 0.0, determinant(mat3(0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)), 1.0, 1.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, 1.0, length(vec4(0.0, 0.0, 0.0, 0.0)))), _GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, 1.0, length(vec4(0.0, 0.0, 0.0, 0.0)))), mix(float(dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, 1.0, length(vec4(0.0, 0.0, 0.0, 0.0))))), float(_GLF_FUZZED(6.9)), bool(false)))), 1.0, determinant(mat3(1.0, 0.0, log(1.0), 1.0, 1.0, 0.0, 1.0, 1.0, sqrt(1.0))), 1.0), transpose(transpose(_GLF_IDENTITY(mat3x4(mat2(1.0) * (injectionSwitch), 0.0, 1.0, 0.0, determinant(mat3(0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)), 1.0, 1.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, 1.0, length(vec4(0.0, 0.0, 0.0, 0.0)))), _GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, 1.0, length(vec4(0.0, 0.0, 0.0, 0.0)))), mix(float(dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, 1.0, length(vec4(0.0, 0.0, 0.0, 0.0))))), float(_GLF_FUZZED(6.9)), bool(false)))), 1.0, determinant(mat3(1.0, 0.0, log(1.0), 1.0, 1.0, 0.0, 1.0, 1.0, sqrt(1.0))), 1.0), (true ? mat3x4(mat2(1.0) * (injectionSwitch), 0.0, 1.0, 0.0, determinant(mat3(0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)), 1.0, 1.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, 1.0, length(vec4(0.0, 0.0, 0.0, 0.0)))), _GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, 1.0, length(vec4(0.0, 0.0, 0.0, 0.0)))), mix(float(dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, 1.0, length(vec4(0.0, 0.0, 0.0, 0.0))))), float(_GLF_FUZZED(6.9)), bool(false)))), 1.0, determinant(mat3(1.0, 0.0, log(1.0), 1.0, 1.0, 0.0, 1.0, 1.0, sqrt(1.0))), 1.0) : _GLF_FUZZED(mat3x4(-4.0, 855.711, -38.20, -52.58, 3272.6389, -2.7, 828.714, -2309.5290, 70.92, -15.83, -22.98, -57.87)))))))), (vec2(_GLF_IDENTITY(mat3x4(mat2(1.0) * (injectionSwitch), 0.0, 1.0, 0.0, determinant(mat3(0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)), 1.0, 1.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, 1.0, length(vec4(0.0, 0.0, 0.0, 0.0)))), _GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, 1.0, length(vec4(0.0, 0.0, 0.0, 0.0)))), mix(float(dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, 1.0, length(vec4(0.0, 0.0, 0.0, 0.0))))), float(_GLF_FUZZED(6.9)), bool(false)))), 1.0, determinant(mat3(1.0, 0.0, log(1.0), 1.0, 1.0, 0.0, 1.0, 1.0, sqrt(1.0))), 1.0), transpose(transpose(_GLF_IDENTITY(mat3x4(mat2(1.0) * (injectionSwitch), 0.0, 1.0, 0.0, determinant(mat3(0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)), 1.0, 1.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, 1.0, length(vec4(0.0, 0.0, 0.0, 0.0)))), _GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, 1.0, length(vec4(0.0, 0.0, 0.0, 0.0)))), mix(float(dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, 1.0, length(vec4(0.0, 0.0, 0.0, 0.0))))), float(_GLF_FUZZED(6.9)), bool(false)))), 1.0, determinant(mat3(1.0, 0.0, log(1.0), 1.0, 1.0, 0.0, 1.0, 1.0, sqrt(1.0))), 1.0), (true ? mat3x4(mat2(1.0) * (injectionSwitch), 0.0, 1.0, 0.0, determinant(mat3(0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)), 1.0, 1.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, 1.0, length(vec4(0.0, 0.0, 0.0, 0.0)))), _GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, 1.0, length(vec4(0.0, 0.0, 0.0, 0.0)))), mix(float(dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, 1.0, length(vec4(0.0, 0.0, 0.0, 0.0))))), float(_GLF_FUZZED(6.9)), bool(false)))), 1.0, determinant(mat3(1.0, 0.0, log(1.0), 1.0, 1.0, 0.0, 1.0, 1.0, sqrt(1.0))), 1.0) : _GLF_FUZZED(mat3x4(-4.0, 855.711, -38.20, -52.58, 3272.6389, -2.7, 828.714, -2309.5290, 70.92, -15.83, -22.98, -57.87))))))))) * mat2(1.0))), _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), clamp(mat2(1.0) * (injectionSwitch), mat2(1.0) * (_GLF_IDENTITY(injectionSwitch, vec2(vec2(injectionSwitch)))), mat2(1.0) * (injectionSwitch)))))).y)))))))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x)) > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y) || false)))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false)))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), bool(bvec4(bool(false), true, true, false)))))))
  return;
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
   return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false)))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
  }
 if(_GLF_DEAD(false))
  barrier();
 uint num_workgroup = _GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups.x, min(gl_NumWorkGroups.x, gl_NumWorkGroups.x)), uint(uint(_GLF_IDENTITY(gl_NumWorkGroups.x, min(gl_NumWorkGroups.x, gl_NumWorkGroups.x)))));
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  return;
 uint workgroup_size = _GLF_IDENTITY(gl_WorkGroupSize.x, (_GLF_IDENTITY(true, (true) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) ? gl_WorkGroupSize.x : _GLF_IDENTITY(_GLF_FUZZED(subgroup_id), 0u ^ (_GLF_IDENTITY(_GLF_FUZZED(subgroup_id), uint(uvec4(_GLF_FUZZED(subgroup_id), 1u, 1u, (0u >> _GLF_IDENTITY(uint(5u), uint(5u))))))))));
 uint workgroup_id = _GLF_IDENTITY(gl_WorkGroupID.x, 0u + (gl_WorkGroupID.x));
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec2(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), (_GLF_IDENTITY(injectionSwitch.x, (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + 0.0)), float(_GLF_FUZZED(vec2(-3.6, -3.3).s)), bool(false))))) ? _GLF_FUZZED(613.507) : injectionSwitch.x)) > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY((false) && true, false || (_GLF_IDENTITY((false) && true, true && ((false) && true)))))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       return;
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, true)))))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, true, true)))))
      barrier();
     return;
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + 0.0)))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 uint workgroup_base = _GLF_IDENTITY(workgroup_size, (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_size, uint(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), clamp(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), clamp(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)))))) + (workgroup_size)), min(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_size, uint(_GLF_IDENTITY(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x))) / 1.0)), clamp(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), clamp(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-6420.7476)), bool(false))), injectionSwitch.x)))))))) + (workgroup_size)), max(_GLF_IDENTITY(workgroup_size, uint(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), clamp(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), clamp(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), float(mat2x3(_GLF_ZERO(0.0, injectionSwitch.x), 0.0, 0.0, 0.0, 1.0, sin(0.0)))), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)))))) + (workgroup_size)), _GLF_IDENTITY(workgroup_size, uint(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), clamp(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(_GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0))) - 0.0), injectionSwitch.x), _GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), clamp(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, float(mat4x3(injectionSwitch.x, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, abs(0.0), 0.0, 0.0))))))))) + _GLF_IDENTITY((_GLF_IDENTITY(workgroup_size, (workgroup_size) << 0u)), max((_GLF_IDENTITY(workgroup_size, (workgroup_size) << 0u)), _GLF_IDENTITY((_GLF_IDENTITY(workgroup_size, (workgroup_size) << 0u)), ((_GLF_IDENTITY(workgroup_size, (workgroup_size) << 0u))) - 0u)))))), _GLF_IDENTITY(workgroup_size, _GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), clamp(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x))), (_GLF_IDENTITY(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x))), (_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)))) + 0.0)) * 1.0), clamp(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * _GLF_IDENTITY(mat2(1.0), mat2(mat4x3(_GLF_IDENTITY(mat2(1.0), (mat2(1.0)) - mat2(0.0, 0.0, 0.0, 0.0)))))), _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)))).x)))))), min(_GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), clamp(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_IDENTITY(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x))), clamp(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch), clamp((injectionSwitch), (injectionSwitch), (injectionSwitch))) * mat2(1.0)), _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)))).x)))))), 0u | (_GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), clamp(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x))), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_IDENTITY(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat3x2(injectionSwitch, 1.0, 1.0, 1.0, sqrt(0.0))), (vec2(mat3x2(injectionSwitch, 1.0, 1.0, 1.0, sqrt(0.0)))) - vec2(0.0, 0.0))).x, injectionSwitch.x))), clamp(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)), _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)))).x)))))), max(uint(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), clamp(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_IDENTITY(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch, vec2(vec2(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat3x2(injectionSwitch, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 0.0, 1.0)), (false ? _GLF_FUZZED(vec2(-5258.7250, 64.14)) : vec2(mat3x2(injectionSwitch, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 0.0, 1.0)))))))).x))), clamp(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)), _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)))).x)))))), uint(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), clamp(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_IDENTITY(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x))), clamp(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch : _GLF_FUZZED(vec2(8.6, -42.54)))), (injectionSwitch) * mat2(1.0)), _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)))).x)))))))))), uint(_GLF_IDENTITY(_GLF_ZERO(_GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, (0.0) - 0.0), _GLF_IDENTITY(0.0, mix(float(_GLF_IDENTITY(0.0, max(0.0, 0.0))), float(_GLF_FUZZED((- -125.945))), bool(false))))), injectionSwitch.x), clamp(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_IDENTITY(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x))), clamp(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)), _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)))).x)))))))) + (_GLF_IDENTITY(workgroup_size, clamp(workgroup_size, workgroup_size, workgroup_size))))))) - 0u) * workgroup_id;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(_GLF_IDENTITY(! (false), _GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(! (false), ! (_GLF_IDENTITY(! (! (false)), (! (_GLF_IDENTITY(! (false), bool(bvec4(! (false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))) && true))), _GLF_IDENTITY(_GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), bool(bool((injectionSwitch.x < injectionSwitch.y))))), true && (_GLF_IDENTITY(_GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), bool(bool((injectionSwitch.x < injectionSwitch.y))))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(_GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), bool(bool((injectionSwitch.x < injectionSwitch.y))))), false, true), bvec3(bvec3(bvec3(_GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), bool(bool((injectionSwitch.x < injectionSwitch.y))))), false, true))))), bool(bvec4(bool(_GLF_IDENTITY(bvec3(_GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), bool(bool((injectionSwitch.x < injectionSwitch.y))))), false, true), bvec3(bvec3(bvec3(_GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), bool(bool((injectionSwitch.x < injectionSwitch.y))))), false, true))))), false, false, false)))))), false), _GLF_IDENTITY(bvec3(bvec4(bvec3(_GLF_IDENTITY(! (false), ! (_GLF_IDENTITY(! (! (false)), (! (_GLF_IDENTITY(! (false), bool(bvec4(! (false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))) && true))), _GLF_IDENTITY(_GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), bool(bool((injectionSwitch.x < injectionSwitch.y))))), true && (_GLF_IDENTITY(_GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), bool(bool((injectionSwitch.x < injectionSwitch.y))))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(_GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), bool(bool((injectionSwitch.x < injectionSwitch.y))))), false, true), bvec3(bvec3(bvec3(_GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), bool(bool((injectionSwitch.x < injectionSwitch.y))))), false, true))))), bool(bvec4(bool(_GLF_IDENTITY(bvec3(_GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), bool(bool((injectionSwitch.x < injectionSwitch.y))))), false, true), bvec3(bvec3(bvec3(_GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), bool(bool((injectionSwitch.x < injectionSwitch.y))))), false, true))))), false, false, false)))))), false), false)), _GLF_IDENTITY(bvec3(bvec4(bvec3(bvec4(bvec3(_GLF_IDENTITY(! (false), ! (_GLF_IDENTITY(! (! (false)), (! (_GLF_IDENTITY(! (false), bool(bvec4(! (false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))) && true))), _GLF_IDENTITY(_GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), bool(bool((injectionSwitch.x < injectionSwitch.y))))), true && (_GLF_IDENTITY(_GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), bool(bool((injectionSwitch.x < injectionSwitch.y))))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(_GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), bool(bool((injectionSwitch.x < injectionSwitch.y))))), false, true), bvec3(bvec3(bvec3(_GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), bool(bool((injectionSwitch.x < injectionSwitch.y))))), false, true))))), bool(bvec4(bool(_GLF_IDENTITY(bvec3(_GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), bool(bool((injectionSwitch.x < injectionSwitch.y))))), false, true), bvec3(bvec3(bvec3(_GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), bool(bool((injectionSwitch.x < injectionSwitch.y))))), false, true))))), false, false, false)))))), false), false)), false)), bvec3(bvec3(bvec3(bvec4(bvec3(bvec4(bvec3(_GLF_IDENTITY(! (false), ! (_GLF_IDENTITY(! (! (false)), (! (_GLF_IDENTITY(! (false), bool(bvec4(! (false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))) && true))), _GLF_IDENTITY(_GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), bool(bool((injectionSwitch.x < injectionSwitch.y))))), true && (_GLF_IDENTITY(_GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), bool(bool((injectionSwitch.x < injectionSwitch.y))))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(_GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), bool(bool((injectionSwitch.x < injectionSwitch.y))))), false, true), bvec3(bvec3(bvec3(_GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), bool(bool((injectionSwitch.x < injectionSwitch.y))))), false, true))))), bool(bvec4(bool(_GLF_IDENTITY(bvec3(_GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), bool(bool((injectionSwitch.x < injectionSwitch.y))))), false, true), bvec3(bvec3(bvec3(_GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), bool(bool((injectionSwitch.x < injectionSwitch.y))))), false, true))))), false, false, false)))))), false), false)), false))))))), bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(! (false), ! (_GLF_IDENTITY(! (! (false)), bool(bool(! (! (false))))))), ! (_GLF_IDENTITY(! (! (false)), (! (! (false))) && true))), true && (_GLF_IDENTITY(! (false), ! (_GLF_IDENTITY(! (! (false)), (! _GLF_IDENTITY((! (false)), ((! (false))) || false)) && true))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false), bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(! (false), ! _GLF_IDENTITY((_GLF_IDENTITY(! (! (false)), _GLF_IDENTITY((! (! (false))) && true, ! (! (_GLF_IDENTITY((! _GLF_IDENTITY((! (false)), ! (! ((! (false)))))) && true, ((! (! (_GLF_IDENTITY(false, true && (false))))) && true) && true)))))), false || ((_GLF_IDENTITY(! (! (false)), _GLF_IDENTITY((! (! (false))) && true, ! (! (_GLF_IDENTITY((! _GLF_IDENTITY((! (false)), ! (! ((! (false)))))) && true, ((! (! (_GLF_IDENTITY(false, true && (false))))) && true) && true))))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false), bvec3(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(! (false), ! (_GLF_IDENTITY(! (! (false)), (! (! (false))) && true))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false), bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(! (false), ! (_GLF_IDENTITY(! (! (false)), (! (! (false))) && true))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_IDENTITY(false, (false) || false)), bvec3(bvec3(bvec3(_GLF_IDENTITY(! (false), ! (_GLF_IDENTITY(! (! (_GLF_IDENTITY(false, false || (false)))), (! (! (false))) && true))), _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))) && true)) || false), false)))), false)))))), true))), true)))), true && (bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(! (false), ! (_GLF_IDENTITY(! (! (false)), (! (_GLF_IDENTITY(! (false), bool(bvec4(! (false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))) && true))), _GLF_IDENTITY(_GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), bool(bool((injectionSwitch.x < injectionSwitch.y))))), true && (_GLF_IDENTITY(_GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), bool(bool((injectionSwitch.x < injectionSwitch.y))))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(_GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), bool(bool((injectionSwitch.x < injectionSwitch.y))))), false, true), bvec3(bvec3(bvec3(_GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), bool(bool((injectionSwitch.x < injectionSwitch.y))))), false, true))))), bool(bvec4(bool(_GLF_IDENTITY(bvec3(_GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), bool(bool((injectionSwitch.x < injectionSwitch.y))))), false, true), bvec3(bvec3(bvec3(_GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), bool(bool((injectionSwitch.x < injectionSwitch.y))))), false, true))))), false, false, false)))))), false), _GLF_IDENTITY(bvec3(bvec4(bvec3(_GLF_IDENTITY(! (false), ! (_GLF_IDENTITY(! (! (false)), (! (_GLF_IDENTITY(! (false), bool(bvec4(! (false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))) && true))), _GLF_IDENTITY(_GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), bool(bool((injectionSwitch.x < injectionSwitch.y))))), true && (_GLF_IDENTITY(_GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), bool(bool((injectionSwitch.x < injectionSwitch.y))))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(_GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), bool(bool((injectionSwitch.x < injectionSwitch.y))))), false, true), bvec3(bvec3(bvec3(_GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), bool(bool((injectionSwitch.x < injectionSwitch.y))))), false, true))))), bool(bvec4(bool(_GLF_IDENTITY(bvec3(_GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), bool(bool((injectionSwitch.x < injectionSwitch.y))))), false, true), bvec3(bvec3(bvec3(_GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), bool(bool((injectionSwitch.x < injectionSwitch.y))))), false, true))))), false, false, false)))))), false), false)), _GLF_IDENTITY(bvec3(bvec4(bvec3(bvec4(bvec3(_GLF_IDENTITY(! (false), ! (_GLF_IDENTITY(! (! (false)), (! (_GLF_IDENTITY(! (false), bool(bvec4(! (false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))) && true))), _GLF_IDENTITY(_GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), bool(bool((injectionSwitch.x < injectionSwitch.y))))), true && (_GLF_IDENTITY(_GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), bool(bool((injectionSwitch.x < injectionSwitch.y))))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(_GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), bool(bool((injectionSwitch.x < injectionSwitch.y))))), false, true), bvec3(bvec3(bvec3(_GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), bool(bool((injectionSwitch.x < injectionSwitch.y))))), false, true))))), bool(bvec4(bool(_GLF_IDENTITY(bvec3(_GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), bool(bool((injectionSwitch.x < injectionSwitch.y))))), false, true), bvec3(bvec3(bvec3(_GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), bool(bool((injectionSwitch.x < injectionSwitch.y))))), false, true))))), false, false, false)))))), false), false)), false)), bvec3(bvec3(bvec3(bvec4(bvec3(bvec4(bvec3(_GLF_IDENTITY(! (false), ! (_GLF_IDENTITY(! (! (false)), (! (_GLF_IDENTITY(! (false), bool(bvec4(! (false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))) && true))), _GLF_IDENTITY(_GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), bool(bool((injectionSwitch.x < injectionSwitch.y))))), true && (_GLF_IDENTITY(_GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), bool(bool((injectionSwitch.x < injectionSwitch.y))))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(_GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), bool(bool((injectionSwitch.x < injectionSwitch.y))))), false, true), bvec3(bvec3(bvec3(_GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), bool(bool((injectionSwitch.x < injectionSwitch.y))))), false, true))))), bool(bvec4(bool(_GLF_IDENTITY(bvec3(_GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), bool(bool((injectionSwitch.x < injectionSwitch.y))))), false, true), bvec3(bvec3(bvec3(_GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), bool(bool((injectionSwitch.x < injectionSwitch.y))))), false, true))))), false, false, false)))))), false), false)), false))))))), bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(! (false), ! (_GLF_IDENTITY(! (! (false)), bool(bool(! (! (false))))))), ! (_GLF_IDENTITY(! (! (false)), (! (! (false))) && true))), true && (_GLF_IDENTITY(! (false), ! (_GLF_IDENTITY(! (! (false)), (! _GLF_IDENTITY((! (false)), ((! (false))) || false)) && true))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false), bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(! (false), ! _GLF_IDENTITY((_GLF_IDENTITY(! (! (false)), _GLF_IDENTITY((! (! (false))) && true, ! (! (_GLF_IDENTITY((! _GLF_IDENTITY((! (false)), ! (! ((! (false)))))) && true, ((! (! (_GLF_IDENTITY(false, true && (false))))) && true) && true)))))), false || ((_GLF_IDENTITY(! (! (false)), _GLF_IDENTITY((! (! (false))) && true, ! (! (_GLF_IDENTITY((! _GLF_IDENTITY((! (false)), ! (! ((! (false)))))) && true, ((! (! (_GLF_IDENTITY(false, true && (false))))) && true) && true))))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false), bvec3(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(! (false), ! (_GLF_IDENTITY(! (! (false)), (! (! (false))) && true))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false), bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(! (false), ! (_GLF_IDENTITY(! (! (false)), (! (! (false))) && true))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_IDENTITY(false, (false) || false)), bvec3(bvec3(bvec3(_GLF_IDENTITY(! (false), ! (_GLF_IDENTITY(! (! (_GLF_IDENTITY(false, false || (false)))), (! (! (false))) && true))), _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))) && true)) || false), false)))), false)))))), true))), true))))))), bool(bvec2(_GLF_IDENTITY(! (false), bool(bvec3(_GLF_IDENTITY(! (false), ! (_GLF_IDENTITY(! (! (false)), (! (! (false))) && true))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))), true)))))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) || false)))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) && true)))
    return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)), true, true, _GLF_IDENTITY(true, bool(bvec2(true, false)))))))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, (false) || false), false)))), false || (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, (false) || false), false)))), (_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, (false) || false), false), bvec2(bvec4(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, (false) || false), false), _GLF_IDENTITY(bvec2(bvec3(bvec2(_GLF_IDENTITY(false, (false) || false), false), true)), bvec2(bvec3(_GLF_IDENTITY(bvec2(bvec3(bvec2(_GLF_IDENTITY(false, (false) || false), false), true)), _GLF_IDENTITY(bvec2(bvec4(bvec2(bvec3(bvec2(_GLF_IDENTITY(false, (false) || false), false), true)), true, false)), bvec2(bvec2(bvec2(bvec4(bvec2(bvec3(bvec2(_GLF_IDENTITY(false, (false) || false), false), true)), true, false)))))), false)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))))))) || false))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
  barrier();
 uint virtual_gid = workgroup_base + _GLF_IDENTITY(subgroup_id, _GLF_IDENTITY(uint(uvec4(subgroup_id, 0u, 0u, _GLF_IDENTITY(1u, _GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(uint(1u), (uint(1u)) + 0u)), max(uint(_GLF_IDENTITY(uint(1u), _GLF_IDENTITY((uint(1u)), min(_GLF_IDENTITY((uint(1u)), ((uint(1u))) + 0u), (uint(1u)))) + 0u)), _GLF_IDENTITY(uint(_GLF_IDENTITY(uint(1u), (uint(1u)) + _GLF_IDENTITY(0u, min(0u, _GLF_IDENTITY(0u, ~ (~ (_GLF_IDENTITY(0u, clamp(0u, 0u, 0u))))))))), max(_GLF_IDENTITY(uint(_GLF_IDENTITY(uint(1u), (uint(1u)) + 0u)), uint(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (uint(_GLF_IDENTITY(uint(1u), (uint(1u)) + 0u)))), uint(_GLF_IDENTITY(uint(1u), (uint(1u)) + 0u)))))), (false ? _GLF_FUZZED(workgroup_base) : uint(_GLF_IDENTITY(uint(1u), (uint(1u)) + 0u))))))), (uint(uvec4(_GLF_IDENTITY(subgroup_id, (subgroup_id) - 0u), 0u, 0u, 1u))) + 0u)) * subgroup_size + subgroup_local_id;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint next_virtual_gid = workgroup_base + _GLF_IDENTITY(subgroup_id * subgroup_size, (false ? _GLF_FUZZED((subgroup_local_id << 113655u)) : subgroup_id * subgroup_size)) + (_GLF_IDENTITY((subgroup_local_id + 1), _GLF_IDENTITY(min((subgroup_local_id + 1), (subgroup_local_id + 1)), 1u * (min((subgroup_local_id + 1), (subgroup_local_id + 1))))) % _GLF_IDENTITY(subgroup_size, 1u * (subgroup_size)));
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, (false) || false))))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y))))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       return;
      }
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(true, (true) && true) && (false), (_GLF_IDENTITY(_GLF_IDENTITY(true, (true) && true) && (false), (_GLF_IDENTITY(true, (true) && true) && (false)) || false)) && true))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), bool(_GLF_IDENTITY(bool(_GLF_DEAD(false)), _GLF_IDENTITY(bool(bvec4(bool(_GLF_DEAD(false)), false, false, false)), ! (! (bool(bvec4(bool(_GLF_DEAD(false)), false, false, false)))))))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), max(mat2(1.0) * (injectionSwitch), mat2(1.0) * (injectionSwitch)))).x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, true, false)))))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))
  barrier();
 uint read_1 = atomicLoad(buf[virtual_gid], 4, _GLF_IDENTITY(64, max(64, _GLF_IDENTITY(64, _GLF_IDENTITY(0 | (64), (0 | (64)) * 1)))), _GLF_IDENTITY(0, min(_GLF_IDENTITY(0, clamp(0, 0, 0)), 0)));
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(mat2x4(injectionSwitch.x, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, determinant(mat2(1.0, 0.0, 0.0, 1.0)), 0.0, _GLF_ZERO(0.0, injectionSwitch.x), length(sin(vec2(0.0, 0.0))))), min(float(mat2x4(injectionSwitch.x, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, determinant(mat2(1.0, 0.0, 0.0, 1.0)), 0.0, _GLF_ZERO(0.0, injectionSwitch.x), length(sin(vec2(0.0, 0.0))))), float(mat2x4(injectionSwitch.x, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, determinant(mat2(1.0, 0.0, 0.0, 1.0)), 0.0, _GLF_ZERO(0.0, injectionSwitch.x), length(sin(vec2(0.0, 0.0)))))))) > injectionSwitch.y))))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec4(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, false))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 atomicStore(buf[next_virtual_gid], uint(_GLF_IDENTITY(read_1 + _GLF_IDENTITY(1, max(1, 1)), 0u ^ (read_1 + 1))), 4, _GLF_IDENTITY(64, (_GLF_IDENTITY(64, (true ? 64 : _GLF_IDENTITY(_GLF_FUZZED(-99162), _GLF_IDENTITY(_GLF_IDENTITY(int(_GLF_IDENTITY(ivec3(_GLF_FUZZED(-99162), 0, 1), clamp(ivec3(_GLF_FUZZED(-99162), 0, 1), ivec3(_GLF_FUZZED(-99162), 0, 1), ivec3(_GLF_FUZZED(-99162), 0, 1)))), min(int(_GLF_IDENTITY(ivec3(_GLF_FUZZED(_GLF_IDENTITY(-99162, int(ivec3(-99162, 1, 0)))), 0, 1), clamp(ivec3(_GLF_FUZZED(-99162), 0, 1), ivec3(_GLF_FUZZED(-99162), 0, 1), ivec3(_GLF_FUZZED(-99162), 0, 1)))), int(_GLF_IDENTITY(ivec3(_GLF_FUZZED(-99162), 0, 1), clamp(ivec3(_GLF_FUZZED(-99162), 0, 1), ivec3(_GLF_FUZZED(-99162), 0, 1), ivec3(_GLF_FUZZED(-99162), 0, 1)))))), (_GLF_IDENTITY(int(_GLF_IDENTITY(ivec3(_GLF_FUZZED(-99162), 0, 1), clamp(ivec3(_GLF_FUZZED(-99162), 0, 1), ivec3(_GLF_FUZZED(-99162), 0, 1), ivec3(_GLF_FUZZED(-99162), 0, 1)))), min(int(_GLF_IDENTITY(ivec3(_GLF_FUZZED(_GLF_IDENTITY(-99162, int(ivec3(-99162, 1, 0)))), 0, 1), clamp(ivec3(_GLF_FUZZED(-99162), 0, 1), ivec3(_GLF_FUZZED(-99162), 0, 1), ivec3(_GLF_FUZZED(-99162), 0, 1)))), int(_GLF_IDENTITY(ivec3(_GLF_FUZZED(-99162), 0, 1), clamp(ivec3(_GLF_FUZZED(-99162), 0, 1), ivec3(_GLF_FUZZED(-99162), 0, 1), ivec3(_GLF_FUZZED(-99162), 0, 1))))))) | (_GLF_IDENTITY(int(_GLF_IDENTITY(ivec3(_GLF_FUZZED(-99162), 0, 1), clamp(ivec3(_GLF_FUZZED(-99162), 0, 1), ivec3(_GLF_FUZZED(-99162), 0, 1), ivec3(_GLF_FUZZED(-99162), 0, 1)))), min(int(_GLF_IDENTITY(ivec3(_GLF_FUZZED(_GLF_IDENTITY(-99162, int(ivec3(-99162, 1, 0)))), 0, 1), clamp(ivec3(_GLF_FUZZED(-99162), 0, 1), ivec3(_GLF_FUZZED(-99162), 0, 1), ivec3(_GLF_FUZZED(-99162), 0, 1)))), int(_GLF_IDENTITY(ivec3(_GLF_FUZZED(-99162), 0, 1), clamp(ivec3(_GLF_FUZZED(-99162), 0, 1), ivec3(_GLF_FUZZED(-99162), 0, 1), ivec3(_GLF_FUZZED(-99162), 0, 1)))))))))))) >> (0 >> _GLF_IDENTITY(_GLF_IDENTITY(int(2), clamp(int(2), int(2), int(2))), int(2)))), 4);
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint read_2 = atomicLoad(buf[virtual_gid], 4, 64, 0);
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_DEAD(false))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_IDENTITY(subgroup_local_id, max(subgroup_local_id, subgroup_local_id)) + 1 < subgroup_size)
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(! (! (_GLF_DEAD(false))), ! (! (_GLF_IDENTITY(! (! (_GLF_DEAD(false))), _GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(true, (true) && true), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bool(bvec3(bool(bvec2(_GLF_IDENTITY(true, (true) && true), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true, true)))) && (! (! (_GLF_DEAD(false))))))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false), bvec3(bvec3(bvec3(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) && true)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false), bvec3(bvec3(bvec3(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)))))))), ! (_GLF_IDENTITY(! (false), (! (false)) && _GLF_IDENTITY(true, (true) || false))))) || false)))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
   int i = 0;
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(false || (false), true && (_GLF_IDENTITY(false || (false), (false || (false)) && true))))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(-6.6) : _GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)))) > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, true, true)))))
    barrier();
   atomicStore(buf[next_virtual_gid], _GLF_IDENTITY(uint(_GLF_IDENTITY(read_1 + 1, ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1, max(read_1 + 1, _GLF_IDENTITY(read_1, (read_1) / 1u) + 1)), max(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(read_1, (_GLF_IDENTITY(read_1, clamp(read_1, read_1, _GLF_IDENTITY(read_1, clamp(read_1, read_1, read_1))))) * 1u) + 1, max(read_1 + 1, _GLF_IDENTITY(read_1, (read_1) / 1u) + 1)), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(read_1, (_GLF_IDENTITY(read_1, clamp(read_1, read_1, _GLF_IDENTITY(read_1, clamp(read_1, read_1, read_1))))) * 1u) + 1, max(read_1 + 1, _GLF_IDENTITY(read_1, (read_1) / 1u) + 1)), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(read_1, (_GLF_IDENTITY(read_1, clamp(read_1, read_1, _GLF_IDENTITY(read_1, clamp(read_1, read_1, read_1))))) * 1u) + 1, max(read_1 + 1, _GLF_IDENTITY(read_1, (read_1) / 1u) + 1)), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(read_1, (_GLF_IDENTITY(read_1, clamp(read_1, read_1, _GLF_IDENTITY(read_1, clamp(read_1, read_1, read_1))))) * 1u) + 1, max(read_1 + 1, _GLF_IDENTITY(read_1, (read_1) / 1u) + 1)))))) >> 0u)) / 1u), _GLF_IDENTITY(read_1 + 1, max(read_1 + 1, _GLF_IDENTITY(_GLF_IDENTITY(read_1, (read_1) / 1u), (_GLF_IDENTITY(read_1, (read_1) / 1u)) ^ 0u) + 1))))))) == read_2), (false ? _GLF_FUZZED(read_2) : uint(_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1, max(read_1 + 1, read_1 + 1)), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1, ~ (_GLF_IDENTITY(~ (read_1 + 1), max(~ (read_1 + 1), ~ (read_1 + 1))))), _GLF_IDENTITY(max(read_1 + 1, read_1 + 1), (true ? max(_GLF_IDENTITY(read_1, (read_1) * 1u) + 1, read_1 + 1) : _GLF_FUZZED(next_virtual_gid))))))) == read_2))) + 1, 4, 64, 4);
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
      barrier();
     barrier();
    }
  }
 else
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, false)), true && (bool(bvec2(false, _GLF_IDENTITY(false, true && (false))))))), _GLF_IDENTITY(! (! (false)), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(! (! (false)), bool(bvec3(! (! (false)), true, false))), true), _GLF_IDENTITY(bvec2(bvec4(bvec2(! _GLF_IDENTITY((! (false)), ! (! ((! (false))))), true), false, _GLF_IDENTITY(false, (false) || false))), bvec2(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(bvec2(bvec4(bvec2(! (! (false)), true), false, false)), bvec2(bvec2(bvec2(bvec4(bvec2(! (! _GLF_IDENTITY((false), bool(bool(_GLF_IDENTITY((false), ((false)) && true))))), true), false, false)))))), bvec2(bvec3(bvec2(_GLF_IDENTITY(bvec2(bvec4(bvec2(! (! (false)), true), false, false)), bvec2(bvec2(bvec2(bvec4(bvec2(! (! (_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false)))), true), false, false)))))), false))))))), bool(bvec3(bool(_GLF_IDENTITY(bvec2(! (! (false)), true), bvec2(bvec4(bvec2(! (! (false)), true), false, false)))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   atomicStore(buf[next_virtual_gid], _GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1, clamp(_GLF_IDENTITY(read_1 + 1, (_GLF_IDENTITY(read_1, (read_1) << 0u) + 1) - 0u), read_1 + 1, _GLF_IDENTITY(read_1 + 1, clamp(read_1 + 1, read_1 + 1, _GLF_IDENTITY(read_1 + 1, min(read_1 + 1, _GLF_IDENTITY(read_1 + 1, clamp(read_1 + 1, read_1 + 1, _GLF_IDENTITY(read_1 + 1, (read_1 + 1) / 1u))))))))), min(read_1 + 1, _GLF_IDENTITY(read_1, ((1u & 1u) ^ 0u) * (_GLF_IDENTITY(read_1, uint(uint(_GLF_IDENTITY(read_1, (read_1) | (read_1))))))) + 1)) == _GLF_IDENTITY(read_2, uint(uint(_GLF_IDENTITY(read_2, (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))) || false) ? _GLF_FUZZED(next_virtual_gid) : read_2)))))), (false ? _GLF_FUZZED(num_workgroup) : uint(_GLF_IDENTITY(read_1, (read_1) | uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(vec2(4565.3721, 7033.2827).g)))))) + 1 == read_2))), (_GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1, clamp(_GLF_IDENTITY(read_1 + 1, (read_1 + 1) - 0u), read_1 + 1, _GLF_IDENTITY(read_1 + 1, clamp(read_1 + 1, read_1 + 1, _GLF_IDENTITY(read_1 + 1, min(read_1 + 1, read_1 + 1)))))), min(read_1 + 1, _GLF_IDENTITY(read_1, ((1u & 1u) ^ 0u) * (_GLF_IDENTITY(read_1, uint(uint(_GLF_IDENTITY(read_1, (read_1) | (read_1))))))) + 1)) == _GLF_IDENTITY(read_2, uint(uint(_GLF_IDENTITY(read_2, (false ? _GLF_FUZZED(next_virtual_gid) : read_2)))))), (false ? _GLF_FUZZED(num_workgroup) : uint(_GLF_IDENTITY(read_1, (read_1) | uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(_GLF_IDENTITY(vec2(4565.3721, 7033.2827).g, (vec2(4565.3721, 7033.2827).g) + 0.0))))))) + 1 == read_2))), clamp(_GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1, clamp(_GLF_IDENTITY(read_1 + _GLF_IDENTITY(1, (_GLF_IDENTITY(1, ~ (~ (1)))) | (1)), (read_1 + 1) - 0u), read_1 + 1, _GLF_IDENTITY(read_1 + 1, clamp(read_1 + 1, read_1 + 1, _GLF_IDENTITY(read_1 + 1, min(read_1 + 1, read_1 + 1)))))), min(read_1 + 1, _GLF_IDENTITY(read_1, ((1u & 1u) ^ 0u) * (_GLF_IDENTITY(read_1, uint(uint(_GLF_IDENTITY(read_1, (read_1) | (read_1))))))) + 1)) == _GLF_IDENTITY(_GLF_IDENTITY(read_2, clamp(read_2, _GLF_IDENTITY(read_2, (read_2) >> 0u), read_2)), uint(uint(_GLF_IDENTITY(read_2, (false ? _GLF_FUZZED(next_virtual_gid) : read_2)))))), (false ? _GLF_FUZZED(num_workgroup) : uint(_GLF_IDENTITY(read_1, (read_1) | uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(vec2(4565.3721, 7033.2827).g)))))) + 1 == read_2))), _GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1, clamp(_GLF_IDENTITY(read_1 + 1, (read_1 + 1) - 0u), read_1 + 1, _GLF_IDENTITY(read_1 + 1, clamp(read_1 + 1, read_1 + 1, _GLF_IDENTITY(read_1 + 1, min(read_1 + 1, read_1 + 1)))))), min(read_1 + 1, _GLF_IDENTITY(read_1, ((1u & 1u) ^ 0u) * (_GLF_IDENTITY(read_1, uint(uint(_GLF_IDENTITY(read_1, (read_1) | (read_1))))))) + 1)) == _GLF_IDENTITY(read_2, uint(uint(_GLF_IDENTITY(read_2, (false ? _GLF_FUZZED(next_virtual_gid) : read_2)))))), (false ? _GLF_FUZZED(num_workgroup) : uint(_GLF_IDENTITY(read_1, (read_1) | uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(vec2(4565.3721, 7033.2827).g)))))) + 1 == read_2))), (false ? _GLF_FUZZED(virtual_gid) : _GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1, clamp(_GLF_IDENTITY(read_1 + 1, (read_1 + 1) - 0u), read_1 + 1, _GLF_IDENTITY(read_1 + 1, clamp(read_1 + 1, read_1 + 1, _GLF_IDENTITY(read_1 + 1, min(read_1 + 1, read_1 + 1)))))), min(read_1 + 1, _GLF_IDENTITY(read_1, ((1u & 1u) ^ 0u) * (_GLF_IDENTITY(read_1, uint(uint(_GLF_IDENTITY(read_1, (read_1) | (read_1))))))) + 1)) == _GLF_IDENTITY(read_2, uint(uint(_GLF_IDENTITY(read_2, (false ? _GLF_FUZZED(next_virtual_gid) : read_2)))))), (false ? _GLF_FUZZED(num_workgroup) : uint(_GLF_IDENTITY(read_1, (read_1) | uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(vec2(4565.3721, 7033.2827).g)))))) + 1 == read_2))), 1u * (_GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1, clamp(_GLF_IDENTITY(read_1 + 1, _GLF_IDENTITY((read_1 + 1) - 0u, max((read_1 + 1) - 0u, (read_1 + 1) - 0u))), read_1 + 1, _GLF_IDENTITY(read_1 + _GLF_IDENTITY(1, (_GLF_IDENTITY(1, clamp(1, 1, 1))) << 0), clamp(read_1 + 1, read_1 + 1, _GLF_IDENTITY(read_1 + 1, min(read_1 + 1, _GLF_IDENTITY(read_1 + 1, (_GLF_IDENTITY(read_1 + 1, (true ? _GLF_IDENTITY(read_1 + 1, clamp(read_1 + 1, read_1 + 1, read_1 + 1)) : _GLF_FUZZED(workgroup_base)))) | (_GLF_IDENTITY(read_1 + 1, (false ? _GLF_FUZZED(workgroup_size) : read_1 + 1)))))))))), min(read_1 + 1, _GLF_IDENTITY(read_1, ((1u & 1u) ^ 0u) * (_GLF_IDENTITY(read_1, uint(uint(_GLF_IDENTITY(read_1, (read_1) | (read_1))))))) + 1)) == _GLF_IDENTITY(read_2, uint(uint(_GLF_IDENTITY(read_2, (false ? _GLF_FUZZED(next_virtual_gid) : read_2)))))), (false ? _GLF_FUZZED(num_workgroup) : uint(_GLF_IDENTITY(read_1, (read_1) | uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(vec2(4565.3721, _GLF_IDENTITY(7033.2827, min(7033.2827, _GLF_IDENTITY(7033.2827, clamp(7033.2827, 7033.2827, _GLF_IDENTITY(7033.2827, clamp(7033.2827, 7033.2827, 7033.2827))))))).g)))))) + 1 == read_2))))))), _GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1, clamp(_GLF_IDENTITY(read_1 + 1, (read_1 + 1) - 0u), read_1 + 1, _GLF_IDENTITY(read_1 + 1, clamp(read_1 + 1, read_1 + 1, _GLF_IDENTITY(read_1 + 1, min(read_1 + 1, read_1 + 1)))))), min(read_1 + 1, _GLF_IDENTITY(read_1, _GLF_IDENTITY(((1u & 1u) ^ 0u) * (_GLF_IDENTITY(read_1, uint(uint(_GLF_IDENTITY(read_1, (read_1) | (read_1)))))), min(((1u & 1u) ^ 0u) * (_GLF_IDENTITY(read_1, uint(uint(_GLF_IDENTITY(read_1, (read_1) | (read_1)))))), ((1u & 1u) ^ 0u) * (_GLF_IDENTITY(read_1, uint(uint(_GLF_IDENTITY(read_1, (read_1) | (read_1))))))))) + 1)) == _GLF_IDENTITY(read_2, uint(uint(_GLF_IDENTITY(read_2, (false ? _GLF_FUZZED(next_virtual_gid) : read_2)))))), (false ? _GLF_FUZZED(num_workgroup) : uint(_GLF_IDENTITY(read_1, (read_1) | uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(vec2(4565.3721, 7033.2827).g)))))) + 1 == read_2))), max(_GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1, clamp(_GLF_IDENTITY(read_1 + 1, (read_1 + 1) - 0u), read_1 + 1, _GLF_IDENTITY(read_1 + 1, clamp(read_1 + 1, read_1 + 1, _GLF_IDENTITY(read_1 + 1, min(read_1 + 1, read_1 + 1)))))), min(read_1 + 1, _GLF_IDENTITY(read_1, ((1u & 1u) ^ 0u) * (_GLF_IDENTITY(read_1, uint(uint(_GLF_IDENTITY(read_1, (read_1) | (read_1))))))) + 1)) == _GLF_IDENTITY(read_2, uint(uint(_GLF_IDENTITY(read_2, (false ? _GLF_FUZZED(next_virtual_gid) : read_2)))))), (false ? _GLF_FUZZED(num_workgroup) : uint(_GLF_IDENTITY(read_1, (read_1) | uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(vec2(4565.3721, 7033.2827).g)))))) + 1 == read_2))), (_GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1, clamp(_GLF_IDENTITY(read_1 + 1, (read_1 + 1) - 0u), read_1 + 1, _GLF_IDENTITY(read_1 + 1, clamp(read_1 + 1, read_1 + 1, _GLF_IDENTITY(read_1 + 1, min(read_1 + 1, read_1 + 1)))))), min(read_1 + 1, _GLF_IDENTITY(read_1, ((1u & 1u) ^ 0u) * (_GLF_IDENTITY(read_1, uint(uint(_GLF_IDENTITY(read_1, (read_1) | (read_1))))))) + 1)) == _GLF_IDENTITY(read_2, uint(uint(_GLF_IDENTITY(read_2, (false ? _GLF_FUZZED(next_virtual_gid) : read_2)))))), (false ? _GLF_FUZZED(num_workgroup) : uint(_GLF_IDENTITY(read_1, (read_1) | uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(vec2(4565.3721, 7033.2827).g)))))) + 1 == read_2)))) ^ 0u), _GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1, clamp(_GLF_IDENTITY(read_1 + 1, (read_1 + 1) - 0u), read_1 + 1, _GLF_IDENTITY(read_1 + 1, clamp(read_1 + 1, read_1 + 1, _GLF_IDENTITY(read_1 + 1, min(_GLF_IDENTITY(read_1 + 1, max(read_1 + 1, read_1 + 1)), read_1 + 1)))))), min(read_1 + 1, _GLF_IDENTITY(read_1, (_GLF_IDENTITY((1u & 1u) ^ 0u, 0u ^ ((1u & 1u) ^ 0u))) * (_GLF_IDENTITY(read_1, uint(uint(_GLF_IDENTITY(read_1, (read_1) | _GLF_IDENTITY((read_1), (_GLF_IDENTITY((read_1), ~ (_GLF_IDENTITY(~ ((read_1)), (~ ((read_1))) / 1u)))) / 1u))))))) + 1)) == _GLF_IDENTITY(read_2, uint(uint(_GLF_IDENTITY(read_2, (false ? _GLF_FUZZED(next_virtual_gid) : read_2)))))), (false ? _GLF_FUZZED(num_workgroup) : uint(_GLF_IDENTITY(read_1, _GLF_IDENTITY((read_1) | uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(vec2(4565.3721, 7033.2827).g))))), uint(uvec4((read_1) | uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(vec2(4565.3721, 7033.2827).g))))), 1u, 1u, 1u)))) + 1 == read_2)))))))) >> 0u) + 1, 4, 64, _GLF_IDENTITY(4, (false ? _GLF_FUZZED(2249) : _GLF_IDENTITY(4, int(_GLF_IDENTITY(ivec2(4, _GLF_IDENTITY(0, (_GLF_IDENTITY(0, int(ivec2(0, 0)))) / 1)), _GLF_IDENTITY(_GLF_IDENTITY(max(ivec2(4, 0), ivec2(4, 0)), min(_GLF_IDENTITY(max(ivec2(4, 0), _GLF_IDENTITY(ivec2(4, 0), ivec2(ivec4(ivec2(4, 0), 0, 0)))), clamp(_GLF_IDENTITY(max(ivec2(4, 0), ivec2(4, 0)), min(max(ivec2(4, 0), ivec2(4, 0)), max(ivec2(4, 0), ivec2(4, 0)))), max(ivec2(4, 0), ivec2(4, 0)), max(_GLF_IDENTITY(ivec2(4, 0), clamp(ivec2(4, 0), ivec2(4, 0), ivec2(4, 0))), ivec2(4, 0)))), _GLF_IDENTITY(max(ivec2(4, 0), ivec2(4, 0)), (true ? max(ivec2(4, 0), ivec2(4, 0)) : _GLF_FUZZED(ivec2(36141, -37573)))))), min(_GLF_IDENTITY(max(ivec2(4, 0), ivec2(4, 0)), min(_GLF_IDENTITY(max(ivec2(4, 0), _GLF_IDENTITY(ivec2(4, 0), ivec2(ivec4(ivec2(4, 0), 0, 0)))), clamp(_GLF_IDENTITY(max(ivec2(4, 0), ivec2(4, 0)), min(max(ivec2(4, 0), ivec2(4, 0)), max(ivec2(4, 0), ivec2(4, 0)))), max(ivec2(4, 0), ivec2(4, 0)), max(_GLF_IDENTITY(ivec2(4, 0), clamp(ivec2(4, 0), ivec2(4, 0), ivec2(4, 0))), ivec2(4, 0)))), _GLF_IDENTITY(max(ivec2(4, 0), ivec2(4, 0)), (true ? max(ivec2(4, 0), ivec2(4, 0)) : _GLF_FUZZED(ivec2(36141, -37573)))))), _GLF_IDENTITY(max(ivec2(4, 0), ivec2(4, 0)), min(_GLF_IDENTITY(max(ivec2(4, 0), _GLF_IDENTITY(ivec2(4, 0), ivec2(ivec4(ivec2(4, 0), 0, 0)))), clamp(_GLF_IDENTITY(max(ivec2(4, 0), ivec2(4, 0)), min(max(ivec2(4, 0), ivec2(4, 0)), max(ivec2(4, 0), ivec2(4, 0)))), max(ivec2(4, 0), ivec2(4, 0)), max(_GLF_IDENTITY(ivec2(4, 0), clamp(ivec2(4, 0), ivec2(4, 0), ivec2(4, 0))), ivec2(4, 0)))), _GLF_IDENTITY(max(ivec2(4, 0), ivec2(4, 0)), (true ? max(ivec2(4, 0), ivec2(4, 0)) : _GLF_FUZZED(ivec2(36141, -37573))))))))))))));
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (false))))))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, bool(bvec2(false, false))), false))), (false) || false)))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, true && (false)), (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) && true)))))
        barrier();
       barrier();
      }
     return;
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0) > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(-66.04) : injectionSwitch.y))) - sin(0.0))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     return;
     if(_GLF_DEAD(false))
      barrier();
    }
   return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
}
