#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


struct _GLF_struct_2 {
 uint _f0;
 int _f1;
 ivec4 _f2;
 mat4x2 _f3;
} ;

struct _GLF_struct_3 {
 _GLF_struct_2 _f0;
} ;

struct _GLF_struct_0 {
 bvec2 _f0;
 float _f1;
 uvec4 _f2;
} ;

struct _GLF_struct_1 {
 _GLF_struct_0 _f0;
 mat2x3 _f1;
} ;

struct _GLF_struct_4 {
 float _f0;
 _GLF_struct_1 _f1;
 ivec2 _f2;
 uint workgroup_base;
 uvec3 _f3;
 _GLF_struct_3 _f4;
} ;

layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 uvec3 GLF_merged3_0_1_16_1_1_11_2_1_12next_virtual_gidsubgroup_idworkgroup_id;
 uvec4 GLF_merged2_0_3_68_3_1_11GLF_merged3_0_1_6_1_1_17_2_1_14read_1subgroup_local_idworkgroup_sizevirtual_gid;
 uvec3 GLF_merged3_0_1_6_1_1_17_2_1_14read_1subgroup_local_idworkgroup_size;
 if(_GLF_DEAD(false))
  return;
 GLF_merged2_0_3_68_3_1_11GLF_merged3_0_1_6_1_1_17_2_1_14read_1subgroup_local_idworkgroup_sizevirtual_gid.xyz = GLF_merged3_0_1_6_1_1_17_2_1_14read_1subgroup_local_idworkgroup_size;
 uint subgroup_id = gl_SubgroupID;
 GLF_merged3_0_1_16_1_1_11_2_1_12next_virtual_gidsubgroup_idworkgroup_id.y = subgroup_id;
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 uint subgroup_local_id = gl_SubgroupInvocationID;
 GLF_merged2_0_3_68_3_1_11GLF_merged3_0_1_6_1_1_17_2_1_14read_1subgroup_local_idworkgroup_sizevirtual_gid.xyz.y = subgroup_local_id;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 uint num_workgroup = gl_NumWorkGroups.x;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 uint workgroup_size = gl_WorkGroupSize.x;
 GLF_merged2_0_3_68_3_1_11GLF_merged3_0_1_6_1_1_17_2_1_14read_1subgroup_local_idworkgroup_sizevirtual_gid.xyz.z = workgroup_size;
 uint workgroup_id = gl_WorkGroupID.x;
 GLF_merged3_0_1_16_1_1_11_2_1_12next_virtual_gidsubgroup_idworkgroup_id.z = workgroup_id;
 _GLF_struct_4 _GLF_struct_replacement_4 = _GLF_struct_4(1.0, _GLF_struct_1(_GLF_struct_0(bvec2(true), 1.0, uvec4(1u)), mat2x3(1.0)), ivec2(1), GLF_merged2_0_3_68_3_1_11GLF_merged3_0_1_6_1_1_17_2_1_14read_1subgroup_local_idworkgroup_sizevirtual_gid.xyz.z * GLF_merged3_0_1_16_1_1_11_2_1_12next_virtual_gidsubgroup_idworkgroup_id.z, uvec3(1u), _GLF_struct_3(_GLF_struct_2(1u, 1, ivec4(1), mat4x2(1.0))));
 uint virtual_gid = _GLF_struct_replacement_4.workgroup_base + GLF_merged3_0_1_16_1_1_11_2_1_12next_virtual_gidsubgroup_idworkgroup_id.y * subgroup_size + GLF_merged2_0_3_68_3_1_11GLF_merged3_0_1_6_1_1_17_2_1_14read_1subgroup_local_idworkgroup_sizevirtual_gid.xyz.y;
 if(_GLF_DEAD(false))
  return;
 GLF_merged2_0_3_68_3_1_11GLF_merged3_0_1_6_1_1_17_2_1_14read_1subgroup_local_idworkgroup_sizevirtual_gid.w = virtual_gid;
 uint next_virtual_gid = _GLF_struct_replacement_4.workgroup_base + GLF_merged3_0_1_16_1_1_11_2_1_12next_virtual_gidsubgroup_idworkgroup_id.y * subgroup_size + ((GLF_merged2_0_3_68_3_1_11GLF_merged3_0_1_6_1_1_17_2_1_14read_1subgroup_local_idworkgroup_sizevirtual_gid.xyz.y + 1) % subgroup_size);
 GLF_merged3_0_1_16_1_1_11_2_1_12next_virtual_gidsubgroup_idworkgroup_id.x = next_virtual_gid;
 uint read_1 = atomicLoad(buf[GLF_merged2_0_3_68_3_1_11GLF_merged3_0_1_6_1_1_17_2_1_14read_1subgroup_local_idworkgroup_sizevirtual_gid.w], 4, 64, 0);
 GLF_merged2_0_3_68_3_1_11GLF_merged3_0_1_6_1_1_17_2_1_14read_1subgroup_local_idworkgroup_sizevirtual_gid.xyz.x = read_1;
 atomicStore(buf[GLF_merged3_0_1_16_1_1_11_2_1_12next_virtual_gidsubgroup_idworkgroup_id.x], uint(GLF_merged2_0_3_68_3_1_11GLF_merged3_0_1_6_1_1_17_2_1_14read_1subgroup_local_idworkgroup_sizevirtual_gid.xyz.x + 1), 4, 64, 4);
 uint read_2 = atomicLoad(buf[GLF_merged2_0_3_68_3_1_11GLF_merged3_0_1_6_1_1_17_2_1_14read_1subgroup_local_idworkgroup_sizevirtual_gid.w], 4, 64, 0);
 if(GLF_merged2_0_3_68_3_1_11GLF_merged3_0_1_6_1_1_17_2_1_14read_1subgroup_local_idworkgroup_sizevirtual_gid.xyz.y + 1 < subgroup_size)
  {
   int i = 0;
   atomicStore(buf[GLF_merged3_0_1_16_1_1_11_2_1_12next_virtual_gidsubgroup_idworkgroup_id.x], uint(GLF_merged2_0_3_68_3_1_11GLF_merged3_0_1_6_1_1_17_2_1_14read_1subgroup_local_idworkgroup_sizevirtual_gid.xyz.x + 1 == read_2) + 1, 4, 64, 4);
  }
 else
  {
   atomicStore(buf[GLF_merged3_0_1_16_1_1_11_2_1_12next_virtual_gidsubgroup_idworkgroup_id.x], uint(GLF_merged2_0_3_68_3_1_11GLF_merged3_0_1_6_1_1_17_2_1_14read_1subgroup_local_idworkgroup_sizevirtual_gid.xyz.x + 1 == read_2) + 1, 4, 64, 4);
  }
}
