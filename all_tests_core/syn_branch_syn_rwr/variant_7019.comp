#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    return;
   return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
    barrier();
  }
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        return;
      }
     else
      {
       barrier();
      }
    }
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(vec2(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(vec4(injectionSwitch, 1.0, 0.0), min(vec4(injectionSwitch, 1.0, 0.0), vec4(injectionSwitch, 1.0, 0.0)))))), vec2(mat2x4(vec2(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(vec4(injectionSwitch, 1.0, 0.0), min(vec4(injectionSwitch, 1.0, 0.0), vec4(injectionSwitch, 1.0, 0.0)))))), 0.0, 1.0, 0.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), cos(0.0)))))).x > injectionSwitch.y))), _GLF_IDENTITY(bool(bvec2(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false)), ((injectionSwitch.x > injectionSwitch.y)) || false))), false)), (_GLF_IDENTITY(bool(bvec2(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec2((injectionSwitch.x > injectionSwitch.y), false)))) && true))), false)), _GLF_IDENTITY(true, bool(_GLF_IDENTITY(bvec3(true, false, true), bvec3(bvec3(bvec3(true, false, true)))))) && (bool(bvec2(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, float(mat2(injectionSwitch.x, 0.0, 1.0, 1.0)))) - _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0))) > injectionSwitch.y))))))))), false))))) && true)))
    {
     if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
      {
       barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)), _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), injectionSwitch)).x > injectionSwitch.y))))
            barrier();
           return;
          }
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))) || false)))))
        return;
      }
     else
      {
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
        return;
       return;
      }
     barrier();
    }
   if(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), ! (! (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), true && (_GLF_WRAPPED_IF_FALSE(false))))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
    }
   else
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_DEAD(false), false, true)))))))))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y))) && true)))))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, (false) || false)))), bool(bvec4(_GLF_DEAD(false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))) && true), true))))
    {
     for(int _injected_loop_counter = (((_GLF_IDENTITY(1, max(1, 1)) << _GLF_IDENTITY(int(4), int(4))) >> _GLF_IDENTITY(int(_GLF_IDENTITY(4, (true ? 4 : _GLF_FUZZED(findLSB(subgroup_id))))), int(4))) ^ 1); _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          break;
         break;
        }
      }
     do
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        break;
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     while(_GLF_WRAPPED_LOOP(false));
    }
   if(_GLF_DEAD(false))
    {
     do
      {
       barrier();
      }
     while(_GLF_WRAPPED_LOOP(false));
    }
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 uint num_workgroup = gl_NumWorkGroups.x;
 if(_GLF_WRAPPED_IF_TRUE(true))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(_GLF_IDENTITY(bool(injectionSwitch.x > injectionSwitch.y), ! (_GLF_IDENTITY(! (bool(injectionSwitch.x > injectionSwitch.y)), false || (! (bool(injectionSwitch.x > injectionSwitch.y)))))))))))))))))
    {
     do
      {
       barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, false || (false))));
    }
  }
 else
  {
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, false || (false)), (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 uint workgroup_size = _GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) - (0u & _GLF_IDENTITY(137410u, max(_GLF_IDENTITY(137410u, (_GLF_IDENTITY(137410u, clamp(137410u, 137410u, 137410u))) | (137410u)), 137410u))));
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   do
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        continue;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
          {
           barrier();
          }
         else
          {
          }
        }
       barrier();
      }
     if(_GLF_WRAPPED_IF_TRUE(true))
      {
       if(_GLF_DEAD(false))
        barrier();
      }
     else
      {
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      continue;
     if(_GLF_DEAD(false))
      return;
     do
      {
       do
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))))
          barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
        }
       while(_GLF_WRAPPED_LOOP(false));
       if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))
        break;
       if(_GLF_DEAD(false))
        continue;
       if(_GLF_DEAD(false))
        return;
       if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
        {
         if(_GLF_DEAD(false))
          barrier();
         break;
        }
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        return;
       barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), true && (! (false)))))), ! (_GLF_IDENTITY(! (! (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), true && (! (false))))))), true && (! (! (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), _GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), (! (true)) && true))) && (! (false)))))))))))))))
        {
         if(_GLF_DEAD(false))
          barrier();
         continue;
        }
       if(_GLF_WRAPPED_IF_TRUE(true))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && _GLF_TRUE(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(true, bool(bvec3(_GLF_IDENTITY(true, ! (! (true))), false, false)))), true && (! (_GLF_IDENTITY(true, bool(bvec3(_GLF_IDENTITY(true, ! (! (true))), false, false)))))))), (injectionSwitch.x < injectionSwitch.y)))))
            barrier();
           barrier();
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            break;
          }
        }
       else
        {
        }
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(false, ! (! (false)))))));
     if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))
      barrier();
     for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
      {
       if(_GLF_DEAD(false))
        barrier();
      }
    }
   while(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(mat3x4(injectionSwitch.y, 1.0, 1.0, 0.0, sin(0.0), 1.0, _GLF_IDENTITY(dot(vec3(exp(0.0), sqrt(1.0), 0.0), vec3(0.0, 0.0, 1.0)), dot(vec3(exp(0.0), sqrt(1.0), 0.0), vec3(0.0, 0.0, 1.0))), sqrt(0.0), tan(0.0), 0.0, 1.0, abs(0.0))), mix(float(float(mat3x4(injectionSwitch.y, 1.0, 1.0, 0.0, sin(0.0), 1.0, _GLF_IDENTITY(dot(vec3(exp(0.0), sqrt(1.0), 0.0), vec3(0.0, 0.0, 1.0)), dot(vec3(exp(0.0), sqrt(1.0), 0.0), vec3(0.0, 0.0, 1.0))), sqrt(0.0), tan(0.0), 0.0, 1.0, abs(0.0)))), float(_GLF_FUZZED(1.5)), bool(false))))))), _GLF_IDENTITY(true, bool(_GLF_IDENTITY(bvec2(true, _GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))), ! (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y)))))))), bvec2(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec2(true, _GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(5625.1552), _GLF_FUZZED(-1129.9117)), bvec2(false, false))), min(injectionSwitch, injectionSwitch)).x > injectionSwitch.y))), bvec2(bvec3(bvec2(true, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x > injectionSwitch.y))), true))), false), bvec3(bvec4(bvec3(bvec2(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false), false))))))) && (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0) > injectionSwitch.y))), (_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))));
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, true, false, true)))))
      return;
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    return;
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((false), _GLF_IDENTITY(bool(bvec4((false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true && (bool(bvec4((false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y)), false)), false || (bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y)), false), bvec2(bvec2(bvec2(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y)), false)))))))))) || _GLF_IDENTITY((false), ((false)) || false))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_WRAPPED_IF_TRUE(true))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec3((injectionSwitch.x > injectionSwitch.y), false, true))))))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     else
      {
      }
     do
      {
       for(int _injected_loop_counter = _GLF_IDENTITY(1, (1) ^ 0); _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
         if(_GLF_DEAD(false))
          continue;
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            return;
           barrier();
          }
         if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
          break;
        }
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
      }
     while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, bool(bvec4(false, false, true, true)))));
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), bool(bvec3(_GLF_IDENTITY(false, bool(bvec4(false, false, true, false))), false, false)))))
      return;
     do
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))))
          break;
         if(_GLF_DEAD(false))
          barrier();
         barrier();
         if(_GLF_DEAD(false))
          break;
        }
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec4(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), false, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
        return;
      }
     while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false))))
    return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), bool(bvec2(_GLF_IDENTITY(false, (false) || false), false))))), false || (bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), bool(bvec2(_GLF_IDENTITY(false, (false) || false), false)))))))), true), bvec2(bvec3(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), bool(bvec2(_GLF_IDENTITY(false, (false) || false), false))))), false || (bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), bool(bvec2(_GLF_IDENTITY(false, (false) || false), false)))))))), true), true)))), bool(bvec2(bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), bool(bvec2(_GLF_IDENTITY(false, (false) || false), false))))), false || (bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), bool(bvec2(_GLF_IDENTITY(false, (false) || false), false)))))))), true), bvec2(bvec3(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), bool(bvec2(_GLF_IDENTITY(false, (false) || false), false))))), false || (bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), bool(bvec2(_GLF_IDENTITY(false, (false) || false), false)))))))), true), true)))), true))))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   return;
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) && true)))))
  {
  }
 else
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      {
       for(int _injected_loop_counter = _GLF_IDENTITY(0, min(0, 0)); _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
        {
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_WRAPPED_IF_TRUE(true))
      {
       return;
      }
     else
      {
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(-2809.6134) : injectionSwitch.x)) > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_WRAPPED_IF_FALSE(false))
        {
        }
       else
        {
         return;
        }
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true)))))))
        barrier();
      }
    }
  }
 if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (false))))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x > injectionSwitch.y))))
    return;
  }
 else
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(true, bool(bool(true))) && (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, false, false, false))))) || false))))
  {
   if(_GLF_DEAD(false))
    return;
   for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != ((1 << _GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), int(ivec3(int(3), 0, 1))))) >> _GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), (int(3)) | 0)))); _injected_loop_counter ++)
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 uint workgroup_id = gl_WorkGroupID.x;
 if(_GLF_WRAPPED_IF_FALSE(false))
  {
   if(_GLF_DEAD(false))
    return;
  }
 else
  {
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED((-36.25)), _GLF_FUZZED(vec3(499.957, -5.5, 3.3).x)), vec2(_GLF_IDENTITY((injectionSwitch)[0], (true ? (injectionSwitch)[0] : _GLF_FUZZED(-984.996))), (injectionSwitch)[1]), bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))), injectionSwitch)).x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, false || (false))))))
    {
     do
      {
       barrier();
      }
     while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bool((injectionSwitch.x > injectionSwitch.y)))))));
    }
   barrier();
  }
 uint workgroup_base = workgroup_size * workgroup_id;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
    }
   else
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       barrier();
      }
    }
   do
    {
     barrier();
    }
   while(_GLF_WRAPPED_LOOP(false));
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), (bool(bool(_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))) && true))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
      }
     else
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          return;
         barrier();
        }
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     if(_GLF_DEAD(false))
      barrier();
    }
   else
    {
    }
   for(int _injected_loop_counter = _GLF_IDENTITY(0, 0 | (0)); _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
    {
     return;
    }
  }
 uint virtual_gid = _GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (0u >> _GLF_IDENTITY(uint(0u), uint(0u))) + _GLF_IDENTITY((subgroup_id), (_GLF_IDENTITY((subgroup_id), 1u * ((subgroup_id)))) | ((subgroup_id)))), (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY((0u >> _GLF_IDENTITY(uint(0u), uint(0u))) + (subgroup_id), ((0u >> _GLF_IDENTITY(uint(0u), uint(0u))) + _GLF_IDENTITY((subgroup_id), (_GLF_IDENTITY((subgroup_id), min((subgroup_id), (subgroup_id)))) >> 0u)) / 1u)), uint(uvec3(_GLF_IDENTITY(subgroup_id, (0u >> _GLF_IDENTITY(uint(0u), uint(0u))) + (subgroup_id)), 0u, 0u)))) >> 0u) * subgroup_size, max(workgroup_base + _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (0u >> _GLF_IDENTITY(uint(0u), uint(0u))) + _GLF_IDENTITY((subgroup_id), (_GLF_IDENTITY((subgroup_id), 1u * ((subgroup_id)))) | ((subgroup_id)))), (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY((0u >> _GLF_IDENTITY(uint(0u), uint(0u))) + (subgroup_id), ((0u >> _GLF_IDENTITY(uint(0u), uint(0u))) + _GLF_IDENTITY((subgroup_id), (_GLF_IDENTITY((subgroup_id), min((subgroup_id), (subgroup_id)))) >> 0u)) / 1u)), uint(uvec3(_GLF_IDENTITY(subgroup_id, (0u >> _GLF_IDENTITY(uint(0u), uint(0u))) + (subgroup_id)), 0u, 0u)))) >> 0u) * subgroup_size, workgroup_base + _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (0u >> _GLF_IDENTITY(uint(0u), uint(0u))) + _GLF_IDENTITY((subgroup_id), (_GLF_IDENTITY((subgroup_id), 1u * ((subgroup_id)))) | ((subgroup_id)))), (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY((0u >> _GLF_IDENTITY(uint(0u), uint(0u))) + (subgroup_id), ((0u >> _GLF_IDENTITY(uint(0u), uint(0u))) + _GLF_IDENTITY((subgroup_id), (_GLF_IDENTITY((subgroup_id), min((subgroup_id), (subgroup_id)))) >> 0u)) / 1u)), uint(uvec3(_GLF_IDENTITY(subgroup_id, (0u >> _GLF_IDENTITY(uint(0u), uint(0u))) + (subgroup_id)), 0u, 0u)))) >> 0u) * subgroup_size)) + _GLF_IDENTITY(subgroup_local_id, (false ? _GLF_FUZZED(_GLF_IDENTITY(workgroup_base, 0u ^ (workgroup_base))) : _GLF_IDENTITY(subgroup_local_id, ~ (~ _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | (_GLF_IDENTITY(subgroup_local_id, ~ (~ (subgroup_local_id))))), _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec4(subgroup_local_id, 0u, 0u, 0u), (false ? _GLF_FUZZED(uvec4(6604u, 39728u, 39597u, 151567u)) : uvec4(subgroup_local_id, 0u, 0u, 0u)))), _GLF_IDENTITY(uint(uvec3(uint(_GLF_IDENTITY(uvec4(subgroup_local_id, 0u, _GLF_IDENTITY(0u, 0u ^ (0u)), 0u), (false ? _GLF_FUZZED(uvec4(6604u, 39728u, 39597u, 151567u)) : uvec4(_GLF_IDENTITY(subgroup_local_id, min(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) ^ 0u), _GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY((subgroup_local_id), max((subgroup_local_id), _GLF_IDENTITY((subgroup_local_id), ((subgroup_local_id)) + 0u))) | (subgroup_local_id)))), 0u, 0u, 0u)))), 1u, 0u)), 0u | (uint(uvec3(uint(_GLF_IDENTITY(uvec4(subgroup_local_id, 0u, 0u, 0u), (_GLF_IDENTITY(false ? _GLF_FUZZED(uvec4(6604u, 39728u, 39597u, _GLF_IDENTITY(151567u, (_GLF_IDENTITY(151567u, (151567u) >> 0u)) | (151567u)))) : uvec4(subgroup_local_id, _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) << 0u)) | (_GLF_IDENTITY(0u, max(0u, 0u)))), 0u, 0u), (false ? _GLF_FUZZED(uvec4(6604u, 39728u, 39597u, _GLF_IDENTITY(151567u, (_GLF_IDENTITY(151567u, (151567u) >> 0u)) | (151567u)))) : uvec4(subgroup_local_id, _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) << 0u)) | (_GLF_IDENTITY(0u, max(0u, 0u)))), 0u, 0u)) ^ uvec4(0u, 0u, 0u, 0u))))), 1u, 0u))))))), clamp(_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec4(subgroup_local_id, 0u, 0u, 0u), (false ? _GLF_FUZZED(uvec4(6604u, 39728u, 39597u, 151567u)) : uvec4(subgroup_local_id, 0u, 0u, 0u)))), _GLF_IDENTITY(uint(uvec3(uint(_GLF_IDENTITY(uvec4(subgroup_local_id, 0u, 0u, 0u), (false ? _GLF_FUZZED(uvec4(6604u, 39728u, 39597u, 151567u)) : uvec4(_GLF_IDENTITY(subgroup_local_id, min(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) ^ 0u), _GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | (subgroup_local_id)))), 0u, 0u, 0u)))), 1u, 0u)), 0u | (uint(uvec3(uint(_GLF_IDENTITY(uvec4(subgroup_local_id, 0u, 0u, 0u), (false ? _GLF_FUZZED(uvec4(6604u, 39728u, 39597u, 151567u)) : uvec4(subgroup_local_id, 0u, 0u, 0u)))), 1u, 0u))))))), (true ? (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(uvec4(subgroup_local_id, 0u, 0u, 0u), (false ? _GLF_FUZZED(uvec4(6604u, 39728u, 39597u, 151567u)) : uvec4(subgroup_local_id, 0u, 0u, 0u)))), _GLF_IDENTITY(uint(uvec3(uint(_GLF_IDENTITY(uvec4(subgroup_local_id, 0u, 0u, 0u), (false ? _GLF_FUZZED(uvec4(6604u, 39728u, 39597u, 151567u)) : uvec4(_GLF_IDENTITY(subgroup_local_id, min(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) ^ 0u), _GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | (subgroup_local_id)))), 0u, 0u, 0u)))), 1u, 0u)), 0u | (uint(uvec3(uint(_GLF_IDENTITY(uvec4(subgroup_local_id, 0u, 0u, 0u), (false ? _GLF_FUZZED(uvec4(6604u, 39728u, 39597u, 151567u)) : uvec4(subgroup_local_id, 0u, 0u, 0u)))), 1u, 0u))))), (false ? _GLF_FUZZED(workgroup_id) : _GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(uvec4(subgroup_local_id, 0u, 0u, 0u), (false ? _GLF_FUZZED(uvec4(6604u, 39728u, 39597u, 151567u)) : uvec4(subgroup_local_id, 0u, 0u, 0u)))), _GLF_IDENTITY(uint(uvec3(uint(_GLF_IDENTITY(uvec4(subgroup_local_id, 0u, 0u, 0u), (false ? _GLF_FUZZED(uvec4(6604u, 39728u, 39597u, 151567u)) : uvec4(_GLF_IDENTITY(subgroup_local_id, min(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) ^ 0u), _GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | (subgroup_local_id)))), 0u, 0u, 0u)))), 1u, 0u)), 0u | (uint(uvec3(uint(_GLF_IDENTITY(uvec4(subgroup_local_id, 0u, 0u, 0u), (false ? _GLF_FUZZED(uvec4(6604u, 39728u, 39597u, 151567u)) : uvec4(subgroup_local_id, 0u, 0u, 0u)))), 1u, 0u))))), min(_GLF_IDENTITY(uint(_GLF_IDENTITY(uvec4(subgroup_local_id, 0u, 0u, 0u), (false ? _GLF_FUZZED(uvec4(6604u, 39728u, 39597u, 151567u)) : uvec4(subgroup_local_id, 0u, 0u, 0u)))), _GLF_IDENTITY(uint(uvec3(uint(_GLF_IDENTITY(uvec4(subgroup_local_id, 0u, 0u, 0u), (false ? _GLF_FUZZED(uvec4(6604u, 39728u, 39597u, 151567u)) : uvec4(_GLF_IDENTITY(subgroup_local_id, min(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) ^ 0u), _GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | (subgroup_local_id)))), 0u, 0u, 0u)))), 1u, 0u)), 0u | (uint(uvec3(uint(_GLF_IDENTITY(uvec4(subgroup_local_id, 0u, 0u, 0u), (false ? _GLF_FUZZED(uvec4(6604u, 39728u, 39597u, 151567u)) : uvec4(subgroup_local_id, 0u, 0u, 0u)))), 1u, 0u))))), _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec4(subgroup_local_id, 0u, 0u, 0u), (false ? _GLF_FUZZED(uvec4(6604u, 39728u, 39597u, 151567u)) : uvec4(subgroup_local_id, 0u, 0u, 0u)))), _GLF_IDENTITY(uint(uvec3(uint(_GLF_IDENTITY(uvec4(subgroup_local_id, 0u, 0u, 0u), (false ? _GLF_FUZZED(uvec4(6604u, 39728u, 39597u, 151567u)) : uvec4(_GLF_IDENTITY(subgroup_local_id, min(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) ^ 0u), _GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | (subgroup_local_id)))), 0u, 0u, 0u)))), 1u, 0u)), 0u | (uint(uvec3(uint(_GLF_IDENTITY(uvec4(subgroup_local_id, 0u, 0u, 0u), (false ? _GLF_FUZZED(uvec4(6604u, 39728u, 39597u, 151567u)) : uvec4(subgroup_local_id, 0u, 0u, 0u)))), 1u, 0u)))))))))), (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(uvec4(subgroup_local_id, 0u, 0u, 0u), (false ? _GLF_FUZZED(uvec4(6604u, 39728u, 39597u, 151567u)) : uvec4(subgroup_local_id, 0u, 0u, 0u)))), _GLF_IDENTITY(uint(uvec3(uint(_GLF_IDENTITY(uvec4(subgroup_local_id, 0u, 0u, 0u), (false ? _GLF_FUZZED(uvec4(6604u, 39728u, 39597u, 151567u)) : uvec4(_GLF_IDENTITY(subgroup_local_id, min(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) ^ 0u), _GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | (subgroup_local_id)))), 0u, 0u, 0u)))), 1u, 0u)), 0u | (uint(uvec3(uint(_GLF_IDENTITY(uvec4(subgroup_local_id, 0u, 0u, 0u), (false ? _GLF_FUZZED(uvec4(6604u, 39728u, 39597u, 151567u)) : uvec4(subgroup_local_id, 0u, 0u, 0u)))), 1u, 0u))))), (false ? _GLF_FUZZED(workgroup_id) : _GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(uvec4(subgroup_local_id, 0u, 0u, 0u), (false ? _GLF_FUZZED(uvec4(6604u, 39728u, 39597u, 151567u)) : uvec4(subgroup_local_id, 0u, 0u, 0u)))), _GLF_IDENTITY(uint(uvec3(uint(_GLF_IDENTITY(uvec4(subgroup_local_id, 0u, 0u, 0u), (false ? _GLF_FUZZED(uvec4(6604u, 39728u, 39597u, 151567u)) : uvec4(_GLF_IDENTITY(subgroup_local_id, min(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) ^ 0u), _GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | (subgroup_local_id)))), 0u, 0u, 0u)))), 1u, 0u)), 0u | (uint(uvec3(uint(_GLF_IDENTITY(uvec4(subgroup_local_id, 0u, 0u, 0u), (false ? _GLF_FUZZED(uvec4(6604u, 39728u, 39597u, 151567u)) : uvec4(subgroup_local_id, 0u, 0u, 0u)))), 1u, 0u))))), min(_GLF_IDENTITY(uint(_GLF_IDENTITY(uvec4(subgroup_local_id, 0u, 0u, 0u), (false ? _GLF_FUZZED(uvec4(6604u, 39728u, 39597u, 151567u)) : uvec4(subgroup_local_id, 0u, 0u, 0u)))), _GLF_IDENTITY(uint(uvec3(uint(_GLF_IDENTITY(uvec4(subgroup_local_id, 0u, 0u, 0u), (false ? _GLF_FUZZED(uvec4(6604u, 39728u, 39597u, 151567u)) : uvec4(_GLF_IDENTITY(subgroup_local_id, min(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) ^ 0u), _GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | (subgroup_local_id)))), 0u, 0u, 0u)))), 1u, 0u)), 0u | (uint(uvec3(uint(_GLF_IDENTITY(uvec4(subgroup_local_id, 0u, 0u, 0u), (false ? _GLF_FUZZED(uvec4(6604u, 39728u, 39597u, 151567u)) : uvec4(subgroup_local_id, 0u, 0u, 0u)))), 1u, 0u))))), _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec4(subgroup_local_id, 0u, 0u, 0u), (false ? _GLF_FUZZED(uvec4(6604u, 39728u, 39597u, 151567u)) : uvec4(subgroup_local_id, 0u, 0u, 0u)))), _GLF_IDENTITY(uint(uvec3(uint(_GLF_IDENTITY(uvec4(subgroup_local_id, 0u, 0u, 0u), (false ? _GLF_FUZZED(uvec4(6604u, 39728u, 39597u, 151567u)) : uvec4(_GLF_IDENTITY(subgroup_local_id, min(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) ^ 0u), _GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | (subgroup_local_id)))), 0u, 0u, 0u)))), 1u, 0u)), 0u | (uint(uvec3(uint(_GLF_IDENTITY(uvec4(subgroup_local_id, 0u, 0u, 0u), (false ? _GLF_FUZZED(uvec4(6604u, 39728u, 39597u, 151567u)) : uvec4(subgroup_local_id, 0u, 0u, 0u)))), 1u, 0u)))))))))), (_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(uvec4(subgroup_local_id, 0u, 0u, 0u), (false ? _GLF_FUZZED(uvec4(6604u, 39728u, 39597u, 151567u)) : uvec4(subgroup_local_id, 0u, 0u, 0u)))), _GLF_IDENTITY(uint(uvec3(uint(_GLF_IDENTITY(uvec4(subgroup_local_id, 0u, 0u, 0u), (false ? _GLF_FUZZED(uvec4(6604u, 39728u, 39597u, 151567u)) : uvec4(_GLF_IDENTITY(subgroup_local_id, min(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) ^ 0u), _GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | (subgroup_local_id)))), 0u, 0u, 0u)))), 1u, 0u)), 0u | (uint(uvec3(uint(_GLF_IDENTITY(uvec4(subgroup_local_id, 0u, 0u, 0u), (false ? _GLF_FUZZED(uvec4(6604u, 39728u, 39597u, 151567u)) : uvec4(subgroup_local_id, 0u, 0u, 0u)))), 1u, 0u))))), (false ? _GLF_FUZZED(workgroup_id) : _GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(uvec4(subgroup_local_id, 0u, 0u, 0u), (false ? _GLF_FUZZED(uvec4(6604u, 39728u, 39597u, 151567u)) : uvec4(subgroup_local_id, 0u, 0u, 0u)))), _GLF_IDENTITY(uint(uvec3(uint(_GLF_IDENTITY(uvec4(subgroup_local_id, 0u, 0u, 0u), (false ? _GLF_FUZZED(uvec4(6604u, 39728u, 39597u, 151567u)) : uvec4(_GLF_IDENTITY(subgroup_local_id, min(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) ^ 0u), _GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | (subgroup_local_id)))), 0u, 0u, 0u)))), 1u, 0u)), 0u | (uint(uvec3(uint(_GLF_IDENTITY(uvec4(subgroup_local_id, 0u, 0u, 0u), (false ? _GLF_FUZZED(uvec4(6604u, 39728u, 39597u, 151567u)) : uvec4(subgroup_local_id, 0u, 0u, 0u)))), 1u, 0u))))), min(_GLF_IDENTITY(uint(_GLF_IDENTITY(uvec4(subgroup_local_id, 0u, 0u, 0u), (false ? _GLF_FUZZED(uvec4(6604u, 39728u, 39597u, 151567u)) : uvec4(subgroup_local_id, 0u, 0u, 0u)))), _GLF_IDENTITY(uint(uvec3(uint(_GLF_IDENTITY(uvec4(subgroup_local_id, 0u, 0u, 0u), (false ? _GLF_FUZZED(uvec4(6604u, 39728u, 39597u, 151567u)) : uvec4(_GLF_IDENTITY(subgroup_local_id, min(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) ^ 0u), _GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | (subgroup_local_id)))), 0u, 0u, 0u)))), 1u, 0u)), 0u | (uint(uvec3(uint(_GLF_IDENTITY(uvec4(subgroup_local_id, 0u, 0u, 0u), (false ? _GLF_FUZZED(uvec4(6604u, 39728u, 39597u, 151567u)) : uvec4(subgroup_local_id, 0u, 0u, 0u)))), 1u, 0u))))), _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec4(subgroup_local_id, 0u, 0u, 0u), (false ? _GLF_FUZZED(uvec4(6604u, 39728u, 39597u, 151567u)) : uvec4(subgroup_local_id, 0u, 0u, 0u)))), _GLF_IDENTITY(uint(uvec3(uint(_GLF_IDENTITY(uvec4(subgroup_local_id, 0u, 0u, 0u), (false ? _GLF_FUZZED(uvec4(6604u, 39728u, 39597u, 151567u)) : uvec4(_GLF_IDENTITY(subgroup_local_id, min(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) ^ 0u), _GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | (subgroup_local_id)))), 0u, 0u, 0u)))), 1u, 0u)), 0u | (uint(uvec3(uint(_GLF_IDENTITY(uvec4(subgroup_local_id, 0u, 0u, 0u), (false ? _GLF_FUZZED(uvec4(6604u, 39728u, 39597u, 151567u)) : uvec4(subgroup_local_id, 0u, 0u, 0u)))), 1u, 0u))))))))))) >> uint(_GLF_ZERO(0.0, injectionSwitch.x)))) | (0u & 115676u))) : _GLF_FUZZED(subgroup_local_id))), (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) * 1u)) >> 0u), _GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_IDENTITY(uvec4(subgroup_local_id, 0u, 0u, 0u), (false ? _GLF_FUZZED(uvec4(6604u, 39728u, 39597u, 151567u)) : uvec4(subgroup_local_id, 0u, 0u, 0u))), ~ (~ (_GLF_IDENTITY(uvec4(subgroup_local_id, 0u, 0u, 0u), (false ? _GLF_FUZZED(uvec4(6604u, 39728u, 39597u, 151567u)) : uvec4(subgroup_local_id, 0u, 0u, 0u))))))), _GLF_IDENTITY(uint(uvec3(uint(_GLF_IDENTITY(_GLF_IDENTITY(uvec4(subgroup_local_id, 0u, 0u, 0u), (false ? _GLF_FUZZED(uvec4(6604u, 39728u, 39597u, 151567u)) : uvec4(_GLF_IDENTITY(subgroup_local_id, min(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) ^ 0u), _GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | (subgroup_local_id)))), 0u, 0u, 0u))), (true ? _GLF_IDENTITY(uvec4(subgroup_local_id, 0u, 0u, 0u), (false ? _GLF_FUZZED(uvec4(6604u, 39728u, 39597u, 151567u)) : uvec4(_GLF_IDENTITY(subgroup_local_id, min(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) ^ 0u), _GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | (subgroup_local_id)))), 0u, 0u, 0u))) : _GLF_FUZZED(uvec4(packUnorm4x8(vec4(-4.0, 698.570, -5.4, -8.0)), num_workgroup, uvec2(107197u, 70742u)))))), 1u, _GLF_IDENTITY(0u, clamp(0u, 0u, 0u)))), 0u | (_GLF_IDENTITY(uint(uvec3(uint(_GLF_IDENTITY(uvec4(subgroup_local_id, 0u, 0u, 0u), (false ? _GLF_FUZZED(uvec4(6604u, 39728u, 39597u, _GLF_IDENTITY(_GLF_IDENTITY(151567u, (_GLF_IDENTITY(151567u, min(_GLF_IDENTITY(151567u, (false ? _GLF_FUZZED(workgroup_size) : 151567u)), 151567u))) | (151567u)), min(151567u, 151567u)))) : uvec4(subgroup_local_id, 0u, 0u, 0u)))), 1u, 0u)), min(uint(uvec3(uint(_GLF_IDENTITY(uvec4(subgroup_local_id, 0u, 0u, 0u), (false ? _GLF_FUZZED(uvec4(6604u, 39728u, 39597u, _GLF_IDENTITY(151567u, min(151567u, 151567u)))) : uvec4(subgroup_local_id, _GLF_IDENTITY(0u, 0u | (0u)), 0u, 0u)))), 1u, 0u)), _GLF_IDENTITY(uint(uvec3(uint(_GLF_IDENTITY(uvec4(subgroup_local_id, 0u, 0u, 0u), (false ? _GLF_FUZZED(uvec4(6604u, _GLF_IDENTITY(39728u, ~ (~ (39728u))), 39597u, _GLF_IDENTITY(151567u, min(151567u, 151567u)))) : uvec4(subgroup_local_id, 0u, 0u, 0u)))), 1u, 0u)), min(uint(uvec3(uint(_GLF_IDENTITY(uvec4(subgroup_local_id, 0u, 0u, 0u), (false ? _GLF_FUZZED(uvec4(6604u, 39728u, 39597u, _GLF_IDENTITY(151567u, min(151567u, 151567u)))) : uvec4(subgroup_local_id, 0u, 0u, 0u)))), 1u, 0u)), uint(uvec3(uint(_GLF_IDENTITY(uvec4(subgroup_local_id, 0u, 0u, 0u), (false ? _GLF_FUZZED(uvec4(6604u, 39728u, 39597u, _GLF_IDENTITY(151567u, min(151567u, 151567u)))) : uvec4(subgroup_local_id, 0u, 0u, 0u)))), 1u, 0u))))))))))), _GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec4(subgroup_local_id, 0u, 0u, 0u), (false ? _GLF_FUZZED(uvec4(6604u, 39728u, 39597u, 151567u)) : uvec4(subgroup_local_id, 0u, 0u, 0u)))), _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec3(uint(_GLF_IDENTITY(uvec4(subgroup_local_id, 0u, 0u, 0u), (false ? _GLF_FUZZED(uvec4(6604u, 39728u, 39597u, 151567u)) : uvec4(_GLF_IDENTITY(subgroup_local_id, min(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) ^ 0u), _GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY((subgroup_local_id), uint(uint(_GLF_IDENTITY((subgroup_local_id), ~ (~ ((subgroup_local_id))))))) | (subgroup_local_id)))), _GLF_IDENTITY(0u, (0u) * 1u), 0u, 0u)))), _GLF_IDENTITY(1u, 0u | (1u)), 0u), (uvec3(uint(_GLF_IDENTITY(uvec4(subgroup_local_id, 0u, 0u, 0u), (false ? _GLF_FUZZED(uvec4(6604u, 39728u, 39597u, 151567u)) : uvec4(_GLF_IDENTITY(subgroup_local_id, min(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) ^ 0u), _GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY((subgroup_local_id), uint(uint(_GLF_IDENTITY((subgroup_local_id), ~ (~ ((subgroup_local_id))))))) | (subgroup_local_id)))), 0u, 0u, 0u)))), 1u, 0u)) | uvec3(0u, 0u, 0u))), _GLF_IDENTITY(0u, 1u * (_GLF_IDENTITY(_GLF_IDENTITY(0u, min(_GLF_IDENTITY(0u, (0u) >> 0u), _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) >> 0u)) ^ 0u))), 0u + (0u)))) | (uint(uvec3(uint(_GLF_IDENTITY(uvec4(subgroup_local_id, 0u, 0u, 0u), (false ? _GLF_IDENTITY(_GLF_FUZZED(uvec4(6604u, 39728u, 39597u, 151567u)), clamp(_GLF_FUZZED(uvec4(6604u, 39728u, 39597u, 151567u)), _GLF_FUZZED(uvec4(6604u, 39728u, 39597u, 151567u)), _GLF_FUZZED(uvec4(6604u, 39728u, 39597u, 151567u)))) : uvec4(subgroup_local_id, 0u, 0u, 0u)))), 1u, _GLF_IDENTITY(0u, (0u) / 1u)))))))), max((_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec4(subgroup_local_id, 0u, 0u, 0u), (false ? _GLF_FUZZED(uvec4(6604u, 39728u, 39597u, 151567u)) : uvec4(subgroup_local_id, _GLF_IDENTITY(0u, (0u) / ((_GLF_IDENTITY(1u, clamp(1u, 1u, _GLF_IDENTITY(1u, clamp(1u, 1u, 1u)))) << _GLF_IDENTITY(uint(3u), uint(3u))) >> _GLF_IDENTITY(uint(3u), uint(_GLF_IDENTITY(3u, (_GLF_IDENTITY(3u, ~ (_GLF_IDENTITY(~ (3u), clamp(~ (3u), ~ (3u), ~ (3u)))))) ^ 0u))))), 0u, 0u)))), _GLF_IDENTITY(uint(uvec3(uint(_GLF_IDENTITY(uvec4(subgroup_local_id, 0u, 0u, 0u), (false ? _GLF_FUZZED(uvec4(6604u, 39728u, 39597u, 151567u)) : uvec4(_GLF_IDENTITY(subgroup_local_id, min(_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY((subgroup_local_id), ((subgroup_local_id)) - _GLF_IDENTITY(0u, (0u) | 0u)) ^ 0u), _GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | (subgroup_local_id)))), 0u, 0u, 0u)))), 1u, 0u)), 0u | _GLF_IDENTITY((uint(uvec3(uint(_GLF_IDENTITY(uvec4(subgroup_local_id, 0u, 0u, 0u), (false ? _GLF_FUZZED(uvec4(6604u, 39728u, _GLF_IDENTITY(39597u, _GLF_IDENTITY(_GLF_IDENTITY(uint(uvec2(_GLF_IDENTITY(39597u, ~ (~ (39597u))), 1u)), (0u >> _GLF_IDENTITY(uint(8u), uint(8u))) | (uint(uvec2(_GLF_IDENTITY(39597u, ~ (~ (39597u))), 1u)))), (_GLF_IDENTITY(uint(uvec2(_GLF_IDENTITY(39597u, ~ (~ (39597u))), 1u)), _GLF_IDENTITY((0u >> _GLF_IDENTITY(uint(8u), uint(8u))), 0u ^ (_GLF_IDENTITY((0u >> _GLF_IDENTITY(uint(8u), uint(8u))), ((0u >> _GLF_IDENTITY(uint(8u), uint(8u)))) - 0u))) | (uint(uvec2(_GLF_IDENTITY(39597u, ~ (~ (39597u))), 1u))))) + 0u)), 151567u)) : uvec4(subgroup_local_id, 0u, 0u, 0u)))), 1u, 0u))), ~ (_GLF_IDENTITY(~ ((uint(uvec3(uint(_GLF_IDENTITY(uvec4(subgroup_local_id, 0u, 0u, 0u), (false ? _GLF_FUZZED(uvec4(6604u, 39728u, _GLF_IDENTITY(39597u, _GLF_IDENTITY(_GLF_IDENTITY(uint(uvec2(_GLF_IDENTITY(39597u, ~ (~ (39597u))), 1u)), (0u >> _GLF_IDENTITY(uint(8u), uint(8u))) | (uint(uvec2(_GLF_IDENTITY(39597u, ~ (~ (39597u))), 1u)))), (_GLF_IDENTITY(uint(uvec2(_GLF_IDENTITY(39597u, ~ (~ (39597u))), 1u)), _GLF_IDENTITY((0u >> _GLF_IDENTITY(uint(8u), uint(8u))), 0u ^ (_GLF_IDENTITY((0u >> _GLF_IDENTITY(uint(8u), uint(8u))), ((0u >> _GLF_IDENTITY(uint(8u), uint(8u)))) - 0u))) | (uint(uvec2(_GLF_IDENTITY(39597u, ~ (~ (39597u))), 1u))))) + 0u)), 151567u)) : uvec4(subgroup_local_id, 0u, 0u, 0u)))), 1u, 0u)))), 0u + (_GLF_IDENTITY(~ ((uint(uvec3(uint(_GLF_IDENTITY(uvec4(subgroup_local_id, 0u, 0u, 0u), (false ? _GLF_FUZZED(uvec4(6604u, 39728u, _GLF_IDENTITY(39597u, _GLF_IDENTITY(_GLF_IDENTITY(uint(uvec2(_GLF_IDENTITY(39597u, ~ (~ (39597u))), 1u)), (0u >> _GLF_IDENTITY(uint(8u), uint(8u))) | (uint(uvec2(_GLF_IDENTITY(39597u, ~ (~ (39597u))), 1u)))), (_GLF_IDENTITY(uint(uvec2(_GLF_IDENTITY(39597u, ~ (~ (39597u))), 1u)), _GLF_IDENTITY((0u >> _GLF_IDENTITY(uint(8u), uint(8u))), 0u ^ (_GLF_IDENTITY((0u >> _GLF_IDENTITY(uint(8u), uint(8u))), ((0u >> _GLF_IDENTITY(uint(8u), uint(8u)))) - 0u))) | (uint(uvec2(_GLF_IDENTITY(39597u, ~ (~ (39597u))), 1u))))) + 0u)), 151567u)) : uvec4(subgroup_local_id, 0u, 0u, 0u)))), 1u, 0u)))), (~ ((uint(uvec3(uint(_GLF_IDENTITY(uvec4(subgroup_local_id, 0u, 0u, 0u), (false ? _GLF_FUZZED(uvec4(6604u, 39728u, _GLF_IDENTITY(39597u, _GLF_IDENTITY(_GLF_IDENTITY(uint(uvec2(_GLF_IDENTITY(39597u, ~ (~ (39597u))), 1u)), (0u >> _GLF_IDENTITY(uint(8u), uint(8u))) | (uint(uvec2(_GLF_IDENTITY(39597u, ~ (~ (39597u))), 1u)))), (_GLF_IDENTITY(uint(uvec2(_GLF_IDENTITY(39597u, ~ (~ (39597u))), 1u)), _GLF_IDENTITY((0u >> _GLF_IDENTITY(uint(8u), uint(8u))), 0u ^ (_GLF_IDENTITY((0u >> _GLF_IDENTITY(uint(8u), uint(8u))), ((0u >> _GLF_IDENTITY(uint(8u), uint(8u)))) - 0u))) | (uint(uvec2(_GLF_IDENTITY(39597u, ~ (~ (39597u))), 1u))))) + 0u)), 151567u)) : uvec4(subgroup_local_id, 0u, 0u, 0u)))), 1u, 0u))))) * 1u))))))))), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec4(subgroup_local_id, 0u, 0u, 0u), (false ? _GLF_FUZZED(uvec4(6604u, 39728u, 39597u, 151567u)) : uvec4(subgroup_local_id, 0u, 0u, 0u)))), _GLF_IDENTITY(uint(uvec3(uint(_GLF_IDENTITY(uvec4(subgroup_local_id, 0u, 0u, 0u), (false ? _GLF_FUZZED(uvec4(6604u, 39728u, 39597u, 151567u)) : uvec4(_GLF_IDENTITY(subgroup_local_id, min(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) ^ 0u), (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) ^ 0u), (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) ^ 0u)) | (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) ^ 0u)))) | 0u), _GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | (subgroup_local_id)))), 0u, 0u, 0u)))), 1u, 0u)), 0u | (uint(uvec3(uint(_GLF_IDENTITY(uvec4(subgroup_local_id, 0u, 0u, 0u), (false ? _GLF_FUZZED(_GLF_IDENTITY(uvec4(6604u, 39728u, 39597u, 151567u), (uvec4(6604u, 39728u, 39597u, 151567u)) >> uvec4(0u, 0u, 0u, 0u))) : uvec4(subgroup_local_id, 0u, 0u, 0u)))), 1u, _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) - 0u)) << 0u)) | (_GLF_IDENTITY(0u, 0u | (0u)))))))))), (true ? _GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec4(subgroup_local_id, 0u, 0u, 0u), _GLF_IDENTITY((false ? _GLF_FUZZED(uvec4(6604u, 39728u, 39597u, 151567u)) : uvec4(subgroup_local_id, 0u, 0u, 0u)), min((false ? _GLF_FUZZED(uvec4(6604u, 39728u, 39597u, 151567u)) : uvec4(subgroup_local_id, 0u, 0u, 0u)), _GLF_IDENTITY((false ? _GLF_FUZZED(uvec4(6604u, 39728u, 39597u, 151567u)) : uvec4(subgroup_local_id, 0u, 0u, 0u)), clamp(_GLF_IDENTITY((false ? _GLF_FUZZED(uvec4(6604u, 39728u, 39597u, 151567u)) : uvec4(subgroup_local_id, 0u, 0u, 0u)), ((false ? _GLF_FUZZED(uvec4(6604u, 39728u, 39597u, 151567u)) : uvec4(subgroup_local_id, 0u, 0u, 0u))) | uvec4(0u, 0u, 0u, 0u)), (false ? _GLF_FUZZED(uvec4(6604u, 39728u, 39597u, 151567u)) : uvec4(subgroup_local_id, 0u, 0u, 0u)), (false ? _GLF_FUZZED(uvec4(6604u, 39728u, 39597u, 151567u)) : uvec4(subgroup_local_id, 0u, 0u, 0u)))))))), _GLF_IDENTITY(uint(uvec3(uint(_GLF_IDENTITY(uvec4(subgroup_local_id, 0u, 0u, 0u), (false ? _GLF_FUZZED(uvec4(6604u, 39728u, 39597u, 151567u)) : uvec4(_GLF_IDENTITY(subgroup_local_id, min(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) ^ 0u), _GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | (subgroup_local_id)))), 0u, 0u, 0u)))), 1u, 0u)), 0u | (uint(uvec3(uint(_GLF_IDENTITY(uvec4(subgroup_local_id, 0u, 0u, 0u), (false ? _GLF_FUZZED(uvec4(6604u, 39728u, 39597u, 151567u)) : uvec4(subgroup_local_id, 0u, 0u, 0u)))), 1u, 0u)))))) : _GLF_FUZZED(usubBorrow(subgroup_id, workgroup_id, subgroup_local_id))))), ~ (~ ((_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_IDENTITY(uvec4(subgroup_local_id, 0u, 0u, 0u), (false ? _GLF_FUZZED(uvec4(6604u, 39728u, 39597u, 151567u)) : uvec4(subgroup_local_id, 0u, 0u, 0u))), (_GLF_IDENTITY(uvec4(subgroup_local_id, 0u, 0u, 0u), (false ? _GLF_FUZZED(uvec4(6604u, 39728u, 39597u, 151567u)) : uvec4(subgroup_local_id, 0u, 0u, 0u)))) >> (uvec4(0u, 0u, 0u, 0u) | uvec4(0u, 0u, 0u, 0u)))), _GLF_IDENTITY(uint(uvec3(_GLF_IDENTITY(uint(_GLF_IDENTITY(uvec4(subgroup_local_id, 0u, 0u, 0u), (false ? _GLF_FUZZED(uvec4(6604u, 39728u, 39597u, 151567u)) : uvec4(_GLF_IDENTITY(subgroup_local_id, min(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) ^ 0u), _GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | (subgroup_local_id)))), 0u, 0u, 0u)))), 0u ^ (_GLF_IDENTITY(uint(_GLF_IDENTITY(uvec4(subgroup_local_id, 0u, 0u, 0u), (false ? _GLF_FUZZED(uvec4(6604u, 39728u, 39597u, 151567u)) : uvec4(_GLF_IDENTITY(subgroup_local_id, min(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) ^ 0u), _GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | (subgroup_local_id)))), 0u, 0u, 0u)))), (uint(_GLF_IDENTITY(uvec4(subgroup_local_id, 0u, 0u, 0u), (false ? _GLF_FUZZED(uvec4(6604u, 39728u, 39597u, 151567u)) : uvec4(_GLF_IDENTITY(subgroup_local_id, min(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) ^ 0u), _GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | (subgroup_local_id)))), 0u, 0u, 0u))))) | (uint(_GLF_IDENTITY(uvec4(subgroup_local_id, 0u, 0u, 0u), (false ? _GLF_FUZZED(uvec4(6604u, 39728u, 39597u, 151567u)) : uvec4(_GLF_IDENTITY(subgroup_local_id, min(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) ^ 0u), _GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | (subgroup_local_id)))), 0u, 0u, 0u)))))))), 1u, 0u)), _GLF_IDENTITY(0u | (uint(uvec3(uint(_GLF_IDENTITY(uvec4(subgroup_local_id, 0u, 0u, 0u), (false ? _GLF_FUZZED(uvec4(_GLF_IDENTITY(6604u, max(_GLF_IDENTITY(6604u, 0u + (_GLF_IDENTITY(6604u, (6604u) >> 0u))), _GLF_IDENTITY(6604u, (6604u) - uint(_GLF_ZERO(0.0, injectionSwitch.x))))), _GLF_IDENTITY(39728u, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(num_workgroup) : 39728u)), 39597u, 151567u)) : uvec4(subgroup_local_id, 0u, 0u, 0u)))), 1u, 0u))), (0u | (uint(uvec3(uint(_GLF_IDENTITY(uvec4(subgroup_local_id, 0u, 0u, 0u), (false ? _GLF_FUZZED(uvec4(_GLF_IDENTITY(6604u, (_GLF_IDENTITY(6604u, (6604u) | (_GLF_IDENTITY(6604u, min(6604u, 6604u))))) | (_GLF_IDENTITY(6604u, clamp(6604u, 6604u, 6604u)))), 39728u, 39597u, 151567u)) : uvec4(subgroup_local_id, 0u, _GLF_IDENTITY(0u, max(0u, 0u)), 0u)))), 1u, 0u)))) / 1u))))))))))))))));
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(bool(bool((injectionSwitch.x > injectionSwitch.y))), false || (bool(bool((injectionSwitch.x > injectionSwitch.y)))))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false), _GLF_IDENTITY((_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false)) || false, ((_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false)) || false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, true, true)), bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(bool(bvec3(false, true, true)), false), bvec2(bvec4(bvec2(bool(bvec3(false, true, true)), false), false, true))), bvec2(bvec2(_GLF_IDENTITY(bvec2(bool(bvec3(false, true, true)), false), bvec2(bvec4(bvec2(bool(bvec3(false, true, true)), false), false, true)))))))))))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     barrier();
    }
   barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || false))
  {
   if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
      barrier();
    }
   else
    {
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)))) > _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(_GLF_IDENTITY((injectionSwitch * -7.7), ((injectionSwitch * -7.7)) - _GLF_IDENTITY(vec2(0.0, 0.0), mix(vec2((vec2(0.0, 0.0))[0], (vec2(0.0, 0.0))[1]), vec2(_GLF_FUZZED(float(171128u)), _GLF_FUZZED((+ 2.0))), bvec2(false, false))))) : _GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)))).y))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       barrier();
      }
     barrier();
    }
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
     if(_GLF_DEAD(false))
      barrier();
    }
   else
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (injectionSwitch.x > injectionSwitch.y))))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_WRAPPED_IF_FALSE(false))
        {
        }
       else
        {
         return;
        }
      }
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), true, true, false))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))
    barrier();
   do
    {
     barrier();
    }
   while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
  }
 uint next_virtual_gid = workgroup_base + subgroup_id * _GLF_IDENTITY(subgroup_size, 0u | (subgroup_size)) + ((subgroup_local_id + 1) % subgroup_size);
 uint read_1 = atomicLoad(buf[virtual_gid], 4, 64, 0);
 atomicStore(buf[next_virtual_gid], uint(_GLF_IDENTITY(read_1, 0u ^ _GLF_IDENTITY((read_1), (true ? _GLF_IDENTITY((read_1), clamp((read_1), (read_1), (read_1))) : _GLF_FUZZED(workgroup_base)))) + 1), _GLF_IDENTITY(4, (4) << 0), 64, 4);
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   return;
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(refract(vec2(1.7, 7.3), vec2(-7.3, 7.1), -218.725)))).y))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true)), true && (bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true)))))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       barrier();
      }
     barrier();
    }
   do
    {
     barrier();
    }
   while(_GLF_WRAPPED_LOOP(false));
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
    return;
  }
 uint read_2 = atomicLoad(buf[virtual_gid], 4, 64, 0);
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
  {
   if(subgroup_local_id + _GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) << 0)) - 0) < subgroup_size)
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x, 1.0 * (injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat4x2(injectionSwitch, cos(0.0), 1.0, 1.0, 0.0, tan(0.0), 1.0), (false ? _GLF_FUZZED(mat4x2(-125.600, 3104.2872, 289.737, 6.5, -5677.0456, 30.67, 849.704, 94.92)) : mat4x2(injectionSwitch, cos(0.0), 1.0, 1.0, 0.0, tan(0.0), 1.0))))).y) || false)))))
      {
       if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
        {
         if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(mat3x2(injectionSwitch.y, 1.0, 0.0, sqrt(cos(0.0)), 0.0, 1.0))))), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)).y, float(mat3x2(injectionSwitch.y, 1.0, 0.0, sqrt(cos(_GLF_IDENTITY(0.0, float(_GLF_IDENTITY(mat3x2(_GLF_IDENTITY(0.0, min(0.0, 0.0)), _GLF_ONE(1.0, injectionSwitch.y), 0.0, 1.0, 1.0, 1.0), (false ? _GLF_FUZZED((mat3x2(0.6, 27.08, -520.462, 2.2, -156.668, -1.2) - mat3x2(-4.4, -9.0, -98.30, -441.666, -671.208, 9310.6264))) : mat3x2(_GLF_IDENTITY(0.0, min(0.0, 0.0)), _GLF_ONE(1.0, injectionSwitch.y), 0.0, 1.0, 1.0, 1.0))))))), 0.0, 1.0))))), (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)).y, float(mat3x2(injectionSwitch.y, 1.0, 0.0, sqrt(cos(_GLF_IDENTITY(0.0, float(_GLF_IDENTITY(mat3x2(_GLF_IDENTITY(0.0, min(0.0, 0.0)), _GLF_ONE(1.0, injectionSwitch.y), 0.0, 1.0, 1.0, 1.0), (false ? _GLF_FUZZED((mat3x2(0.6, 27.08, -520.462, 2.2, _GLF_IDENTITY(-156.668, 1.0 * (-156.668)), -1.2) - mat3x2(-4.4, -9.0, -98.30, -441.666, -671.208, 9310.6264))) : mat3x2(_GLF_IDENTITY(0.0, min(0.0, 0.0)), _GLF_ONE(1.0, injectionSwitch.y), 0.0, 1.0, 1.0, 1.0))))))), 0.0, 1.0)))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && true, ((_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)).y, float(mat3x2(injectionSwitch.y, 1.0, 0.0, sqrt(cos(_GLF_IDENTITY(0.0, float(_GLF_IDENTITY(mat3x2(_GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, max(0.0, _GLF_IDENTITY(0.0, float(mat2x3(0.0, 0.0, 1.0, 0.0, 1.0, 0.0))))), 0.0)), _GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y), 0.0, 1.0, 1.0, 1.0), (false ? _GLF_FUZZED((mat3x2(0.6, _GLF_IDENTITY(27.08, (27.08) * 1.0), -520.462, 2.2, -156.668, -1.2) - mat3x2(-4.4, -9.0, -98.30, _GLF_IDENTITY(-441.666, (_GLF_IDENTITY(-441.666, min(-441.666, _GLF_IDENTITY(-441.666, (false ? _GLF_FUZZED(4.1) : -441.666))))) + 0.0), -671.208, 9310.6264))) : mat3x2(_GLF_IDENTITY(0.0, min(0.0, 0.0)), _GLF_ONE(1.0, injectionSwitch.y), 0.0, 1.0, 1.0, 1.0))))))), 0.0, 1.0))))), (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)).y, float(mat3x2(injectionSwitch.y, 1.0, 0.0, sqrt(cos(_GLF_IDENTITY(0.0, float(_GLF_IDENTITY(mat3x2(_GLF_IDENTITY(0.0, min(0.0, 0.0)), _GLF_ONE(1.0, injectionSwitch.y), 0.0, 1.0, 1.0, 1.0), (false ? _GLF_FUZZED((mat3x2(0.6, 27.08, -520.462, 2.2, _GLF_IDENTITY(-156.668, 1.0 * (-156.668)), -1.2) - mat3x2(-4.4, -9.0, -98.30, -441.666, -671.208, 9310.6264))) : mat3x2(_GLF_IDENTITY(0.0, min(0.0, 0.0)), _GLF_ONE(1.0, injectionSwitch.y), 0.0, 1.0, 1.0, 1.0))))))), 0.0, 1.0)))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && true) || false))))
          {
          }
         else
          {
           for(int _injected_loop_counter = _GLF_IDENTITY(1, min(1, 1)); _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
            {
             if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))
              {
               if(_GLF_DEAD(false))
                {
                 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                  {
                   if(_GLF_DEAD(false))
                    return;
                   barrier();
                  }
                 break;
                }
               barrier();
              }
            }
           if(_GLF_DEAD(false))
            return;
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           if(_GLF_WRAPPED_IF_FALSE(false))
            {
             if(_GLF_DEAD(false))
              continue;
            }
           else
            {
             if(_GLF_DEAD(false))
              continue;
             if(_GLF_DEAD(false))
              barrier();
             if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
              {
               if(_GLF_DEAD(false))
                barrier();
               do
                {
                 if(_GLF_DEAD(false))
                  barrier();
                }
               while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
               if(_GLF_DEAD(false))
                {
                 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                  continue;
                 if(_GLF_DEAD(false))
                  {
                   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, bool(bvec3(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))))), (injectionSwitch.x > injectionSwitch.y))))
                    break;
                   continue;
                  }
                 break;
                 if(_GLF_DEAD(false))
                  break;
                }
               if(_GLF_DEAD(false))
                {
                 if(_GLF_WRAPPED_IF_TRUE(true))
                  {
                   barrier();
                   if(_GLF_DEAD(false))
                    break;
                  }
                 else
                  {
                  }
                 if(_GLF_DEAD(false))
                  return;
                 if(_GLF_DEAD(false))
                  barrier();
                }
               if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(4.4)), vec2(_GLF_FUZZED(66.41), (injectionSwitch)[1]), bvec2(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))).y)), bool(bool(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(4.4)), vec2(_GLF_FUZZED(66.41), (injectionSwitch)[1]), bvec2(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))).y)))))))
                barrier();
               if(_GLF_DEAD(false))
                barrier();
               if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(_GLF_IDENTITY(false, false || (false)))) && _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, (injectionSwitch.x < injectionSwitch.y) && true))))))), false || (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))), ! (_GLF_IDENTITY(! (_GLF_DEAD(_GLF_IDENTITY(false, false || (false)))), ! (! (! (_GLF_DEAD(_GLF_IDENTITY(false, false || (false)))))))))) && _GLF_TRUE(_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec4(true, false, true, true)), true && (bool(bvec4(true, false, true, true))))), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(vec4(808.300, 1.7, 5.4, 7789.8690).r), _GLF_FUZZED(241.499)), bvec2(false, false))).x < injectionSwitch.y, (injectionSwitch.x < injectionSwitch.y) && true))))))))))
                break;
               if(_GLF_WRAPPED_IF_TRUE(true))
                {
                 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                  break;
                 if(_GLF_DEAD(false))
                  barrier();
                 if(_GLF_DEAD(false))
                  {
                   if(_GLF_DEAD(false))
                    barrier();
                   if(_GLF_DEAD(false))
                    return;
                   barrier();
                   if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))))
                    continue;
                  }
                 if(_GLF_WRAPPED_IF_FALSE(false))
                  {
                  }
                 else
                  {
                   if(_GLF_DEAD(false))
                    barrier();
                   barrier();
                   if(_GLF_DEAD(false))
                    barrier();
                  }
                }
               else
                {
                }
               if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
                barrier();
               if(_GLF_DEAD(false))
                {
                 if(_GLF_DEAD(false))
                  break;
                 continue;
                }
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(mat2(injectionSwitch.y, 1.0, 1.0, 0.0)))))))
                barrier();
              }
             if(_GLF_WRAPPED_IF_TRUE(true))
              {
               if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(bvec3(! (false), false, false)))))))
                barrier();
              }
             else
              {
              }
             if(_GLF_DEAD(false))
              continue;
             if(_GLF_WRAPPED_IF_FALSE(false))
              {
              }
             else
              {
               if(_GLF_DEAD(false))
                {
                 if(_GLF_DEAD(false))
                  barrier();
                 for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
                  {
                   barrier();
                  }
                 if(_GLF_DEAD(false))
                  barrier();
                }
              }
            }
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_DEAD(false))
            continue;
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_DEAD(false))
            break;
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(false))
              continue;
             barrier();
            }
          }
         if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch))) / vec2(1.0, 1.0)).x > injectionSwitch.y)))) && true)))))
          barrier();
         if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(_GLF_DEAD(false), true), bvec2(bvec4(bvec2(_GLF_DEAD(false), true), false, false)))), false || (bool(_GLF_IDENTITY(bvec2(_GLF_DEAD(false), true), bvec2(bvec4(bvec2(_GLF_DEAD(false), true), false, false))))))))
          barrier();
         for(int _injected_loop_counter = ((1 & 1) | 0); _GLF_WRAPPED_LOOP(_injected_loop_counter != int(_GLF_ZERO(0.0, injectionSwitch.x))); _injected_loop_counter --)
          {
           if(_GLF_DEAD(false))
            {
             do
              {
               barrier();
              }
             while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
             if(_GLF_DEAD(false))
              break;
            }
          }
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            barrier();
           break;
          }
         barrier();
        }
       else
        {
         if(_GLF_DEAD(false))
          barrier();
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          continue;
         return;
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(true, true && (true)) && (false))))
          break;
         if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, 1.0 * (_GLF_IDENTITY(injectionSwitch.y, 1.0 * (_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))))))))))))))
          return;
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            continue;
           if(_GLF_DEAD(false))
            continue;
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
         if(_GLF_DEAD(false))
          return;
         barrier();
        }
       if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))) || false))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
         for(int _injected_loop_counter = _GLF_IDENTITY(0, (false ? _GLF_FUZZED(-86039) : _GLF_IDENTITY(0, 0 | (0)))); _GLF_WRAPPED_LOOP(_injected_loop_counter < int(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), (true ? _GLF_ONE(1.0, injectionSwitch.y) : _GLF_FUZZED(5.0))))); _injected_loop_counter ++)
          {
           return;
          }
        }
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         for(int _injected_loop_counter = _GLF_IDENTITY(1, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(-14439) : 1)); _GLF_WRAPPED_LOOP(_injected_loop_counter != int(_GLF_ZERO(0.0, injectionSwitch.x))); _injected_loop_counter --)
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            continue;
           barrier();
           if(_GLF_DEAD(false))
            continue;
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0))) / vec2(1.0, 1.0)).x > injectionSwitch.y))))
            continue;
           if(_GLF_DEAD(false))
            return;
          }
         if(_GLF_DEAD(false))
          barrier();
        }
       if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
        return;
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, false || (false)), true)))) || false)))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     int i = 0;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     if(_GLF_WRAPPED_IF_TRUE(true))
      {
       if(_GLF_DEAD(false))
        break;
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     else
      {
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(false))
      {
       do
        {
         barrier();
        }
       while(_GLF_WRAPPED_LOOP(false));
      }
     for(int _injected_loop_counter = int(_GLF_ONE(1.0, injectionSwitch.y)); _GLF_WRAPPED_LOOP(_injected_loop_counter != _GLF_IDENTITY(int(_GLF_ZERO(0.0, injectionSwitch.x)), clamp(_GLF_IDENTITY(int(_GLF_ZERO(0.0, injectionSwitch.x)), (true ? int(_GLF_ZERO(0.0, injectionSwitch.x)) : _GLF_FUZZED(_injected_loop_counter))), int(_GLF_ZERO(0.0, injectionSwitch.x)), int(_GLF_ZERO(0.0, injectionSwitch.x))))); _injected_loop_counter --)
      {
       if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(mat3x2(_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(8483.2392) : injectionSwitch.x)), _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(vec4(1197.5082, -0.5, 3036.6258, -8844.6628).y)), float(1.0), bool(true))), _GLF_IDENTITY(0.0, max(0.0, 0.0)), round(length(_GLF_IDENTITY(normalize(vec4(1.0, 1.0, _GLF_IDENTITY(1.0, min(1.0, 1.0)), 1.0)), (normalize(vec4(1.0, 1.0, 1.0, 1.0))) * mat4(1.0)))), 1.0, 0.0)), min(float(mat3x2(injectionSwitch.x, 1.0, 0.0, round(_GLF_IDENTITY(length(normalize(vec4(1.0, 1.0, 1.0, 1.0))), max(length(normalize(vec4(1.0, 1.0, 1.0, 1.0))), length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))))), 1.0, 0.0)), float(mat3x2(injectionSwitch.x, 1.0, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-66.87)), float(0.0), bool(true))), round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), 1.0, 0.0))))) > injectionSwitch.y), ((_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(mat3x2(_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(8483.2392) : injectionSwitch.x)), 1.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)), round(length(_GLF_IDENTITY(normalize(vec4(1.0, 1.0, 1.0, 1.0)), (normalize(vec4(1.0, 1.0, _GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(-240.758))), 1.0))) * mat4(1.0)))), 1.0, 0.0)), min(float(mat3x2(injectionSwitch.x, 1.0, 0.0, round(_GLF_IDENTITY(length(normalize(vec4(1.0, 1.0, 1.0, 1.0))), (false ? _GLF_FUZZED(float(4445)) : length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))))), 1.0, 0.0)), float(mat3x2(injectionSwitch.x, 1.0, _GLF_IDENTITY(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-466.389)), bool(false))), mix(float(_GLF_FUZZED(-66.87)), float(0.0), bool(true))), round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), 1.0, 0.0))))) > injectionSwitch.y)) && true))), _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, mat2(1.0) * _GLF_IDENTITY((injectionSwitch), max((injectionSwitch), (injectionSwitch)))).y)) && (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(mat3x2(injectionSwitch.x, 1.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)), round(length(_GLF_IDENTITY(_GLF_IDENTITY(normalize(vec4(1.0, 1.0, 1.0, 1.0)), min(normalize(vec4(1.0, 1.0, 1.0, 1.0)), normalize(vec4(1.0, 1.0, 1.0, 1.0)))), (normalize(vec4(1.0, 1.0, 1.0, 1.0))) * mat4(1.0)))), 1.0, 0.0)), min(float(mat3x2(injectionSwitch.x, 1.0, 0.0, round(_GLF_IDENTITY(length(normalize(vec4(1.0, 1.0, 1.0, 1.0))), (length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))) / sqrt(1.0))), 1.0, 0.0)), float(mat3x2(injectionSwitch.x, 1.0, _GLF_IDENTITY(0.0, mix(float(_GLF_IDENTITY(_GLF_FUZZED(-66.87), min(_GLF_FUZZED(-66.87), _GLF_FUZZED(-66.87)))), float(0.0), bool(true))), round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), 1.0, 0.0))))), float(_GLF_IDENTITY(float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * 1.0), _GLF_IDENTITY(float(mat3x2(injectionSwitch.x, 1.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)), round(length(_GLF_IDENTITY(normalize(vec4(1.0, 1.0, 1.0, 1.0)), (normalize(vec4(1.0, 1.0, 1.0, 1.0))) * mat4(1.0)))), 1.0, 0.0)), min(float(mat3x2(injectionSwitch.x, 1.0, _GLF_IDENTITY(0.0, max(0.0, _GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-85.34)), float(0.0), bool(true))), 0.0, 0.0)))), round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), 1.0, 0.0)), float(mat3x2(injectionSwitch.x, 1.0, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-66.87)), float(0.0), bool(true))), round(_GLF_IDENTITY(length(normalize(vec4(1.0, 1.0, 1.0, 1.0))), max(length(normalize(vec4(1.0, 1.0, 1.0, 1.0))), length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))))), 1.0, 0.0)))))), float(mat4x3(_GLF_IDENTITY(float(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(mat3x2(injectionSwitch.x, 1.0, _GLF_IDENTITY(_GLF_IDENTITY(0.0, max(0.0, 0.0)), max(_GLF_IDENTITY(0.0, max(0.0, 0.0)), _GLF_IDENTITY(0.0, max(0.0, 0.0)))), round(length(_GLF_IDENTITY(normalize(vec4(1.0, 1.0, 1.0, 1.0)), (normalize(vec4(1.0, 1.0, 1.0, 1.0))) * mat4(1.0)))), 1.0, 0.0)), min(float(mat3x2(injectionSwitch.x, _GLF_IDENTITY(1.0, min(1.0, 1.0)), 0.0, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), 1.0, 0.0)), float(mat3x2(injectionSwitch.x, 1.0, _GLF_IDENTITY(0.0, mix(_GLF_IDENTITY(float(_GLF_FUZZED(-66.87)), (true ? _GLF_IDENTITY(float(_GLF_FUZZED(-66.87)), 1.0 * (float(_GLF_FUZZED(-66.87)))) : _GLF_FUZZED(11.39))), float(0.0), _GLF_IDENTITY(bool(true), ! (_GLF_IDENTITY(! (bool(true)), (! (bool(true))) && true))))), round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), 1.0, 0.0)))))), max(float(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(mat3x2(injectionSwitch.x, 1.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)), round(length(_GLF_IDENTITY(_GLF_IDENTITY(normalize(vec4(1.0, 1.0, 1.0, 1.0)), _GLF_IDENTITY(vec4(vec4(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), mat4(1.0) * (vec4(vec4(normalize(vec4(1.0, 1.0, 1.0, 1.0))))))), (normalize(vec4(1.0, 1.0, 1.0, 1.0))) * mat4(1.0)))), 1.0, 0.0)), min(float(mat3x2(injectionSwitch.x, 1.0, 0.0, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), _GLF_IDENTITY(1.0, max(1.0, _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(faceforward(2.5, -31.08, -6.7)) : 1.0)))), _GLF_IDENTITY(0.0, (0.0) + sqrt(0.0)))), float(mat3x2(injectionSwitch.x, 1.0, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-66.87)), float(0.0), _GLF_IDENTITY(bool(true), bool(bvec2(bool(true), true))))), round(length(normalize(vec4(1.0, 1.0, 1.0, _GLF_IDENTITY(1.0, clamp(1.0, _GLF_IDENTITY(1.0, (1.0) / 1.0), 1.0)))))), 1.0, 0.0)))))), float(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(mat3x2(injectionSwitch.x, 1.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)), round(length(_GLF_IDENTITY(normalize(vec4(1.0, _GLF_IDENTITY(1.0, (true ? _GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, _GLF_IDENTITY(mix(float(_GLF_FUZZED(-63.88)), float(1.0), bool(true)), (false ? _GLF_FUZZED(uintBitsToFloat(virtual_gid)) : mix(float(_GLF_FUZZED(-63.88)), _GLF_IDENTITY(float(1.0), float(vec3(float(1.0), 0.0, 1.0))), bool(true)))))) - 0.0) : _GLF_FUZZED(0.1))), _GLF_IDENTITY(1.0, min(1.0, _GLF_IDENTITY(1.0, max(_GLF_IDENTITY(_GLF_IDENTITY(1.0, max(1.0, 1.0)), _GLF_IDENTITY(float(mat3x2(_GLF_IDENTITY(1.0, max(1.0, 1.0)), determinant(mat3(1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0)), sqrt(exp(0.0)), 1.0, cos(0.0), 1.0)), min(float(mat3x2(_GLF_IDENTITY(1.0, max(1.0, 1.0)), determinant(mat3(1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0)), sqrt(exp(0.0)), 1.0, cos(0.0), 1.0)), float(mat3x2(_GLF_IDENTITY(1.0, max(1.0, 1.0)), determinant(mat3(1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0)), sqrt(exp(0.0)), 1.0, cos(0.0), 1.0))))), 1.0)))), 1.0)), (normalize(vec4(1.0, 1.0, 1.0, 1.0))) * mat4(1.0)))), 1.0, _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(-678.232) : 0.0)))), min(float(mat3x2(injectionSwitch.x, 1.0, 0.0, round(length(normalize(_GLF_IDENTITY(vec4(1.0, 1.0, 1.0, 1.0), min(_GLF_IDENTITY(vec4(1.0, 1.0, 1.0, 1.0), vec4(mat3x4(vec4(1.0, 1.0, 1.0, 1.0), 0.0, sqrt(0.0), 0.0, 0.0, 1.0, 0.0, sqrt(1.0), determinant(mat2(0.0, 0.0, 0.0, 0.0))))), _GLF_IDENTITY(vec4(1.0, 1.0, 1.0, 1.0), (vec4(1.0, 1.0, 1.0, 1.0)) / vec4(1.0, 1.0, 1.0, 1.0))))))), 1.0, 0.0)), float(mat3x2(injectionSwitch.x, 1.0, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-66.87)), float(0.0), bool(true))), round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), 1.0, 0.0)))))))), log(1.0), 1.0, 1.0, 1.0, 1.0, 0.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), vec2(1.0, 0.0))), 0.0, 0.0, 1.0, 1.0))))) > injectionSwitch.y))))))
        {
         if(_GLF_DEAD(false))
          barrier();
         do
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            {
             if(_GLF_DEAD(false))
              break;
             continue;
            }
           return;
          }
         while(_GLF_WRAPPED_LOOP(false));
         if(_GLF_DEAD(false))
          break;
         if(_GLF_DEAD(false))
          barrier();
        }
       if(_GLF_DEAD(false))
        continue;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        continue;
      }
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec3((injectionSwitch.x > injectionSwitch.y), true, true)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, false)))), false || (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * sqrt(vec2(1.0, 1.0))).y)) || false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, ! (! (true)))))), false)))))), ! (! (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))).y)))))))))
      {
       if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (bool(bvec4(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) && true)), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, _GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, max(1.0, 1.0)), _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-10.15)), float(1.0), bool(true))))))), dot(vec2(0.0, 1.0), vec2(0.0, 1.0)))), max(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, _GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, max(1.0, 1.0)), _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-10.15)), float(1.0), bool(true))))))), dot(vec2(0.0, 1.0), vec2(0.0, 1.0)))), _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, _GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, max(1.0, 1.0)), _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-10.15)), float(1.0), bool(true))))))), dot(vec2(0.0, 1.0), vec2(0.0, 1.0)))))) > injectionSwitch.y))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          continue;
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            barrier();
           continue;
          }
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
        }
       else
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            break;
           barrier();
          }
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            continue;
           return;
           if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, true)))))
            break;
           if(_GLF_DEAD(false))
            barrier();
          }
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
        }
       if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, true && (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, false || (injectionSwitch.x < injectionSwitch.y)))), (injectionSwitch.x < injectionSwitch.y) && true), true, false, false)), ! (! (bool(bvec4(_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, (injectionSwitch.x < injectionSwitch.y) && true), true, false, false))))))), ! (! ((injectionSwitch.x < injectionSwitch.y)))))))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
          return;
         barrier();
         if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))
          break;
        }
       else
        {
        }
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_WRAPPED_IF_TRUE(true))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       else
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))))))
          barrier();
        }
      }
     if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        continue;
       if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          continue;
         barrier();
        }
       if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
          return;
         return;
        }
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        return;
       do
        {
         barrier();
        }
       while(_GLF_WRAPPED_LOOP(false));
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))))))))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-0.6)), vec2(_GLF_FUZZED(-5507.6264), (injectionSwitch)[1]), bvec2(false, true))).x, (false ? _GLF_FUZZED(log(4627.0628)) : injectionSwitch.x)) > injectionSwitch.y))))
      {
       if(_GLF_WRAPPED_IF_TRUE(true))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
        }
       else
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
            barrier();
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            continue;
           return;
           if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
            barrier();
           if(_GLF_DEAD(false))
            return;
          }
        }
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     atomicStore(buf[next_virtual_gid], uint(read_1 + _GLF_IDENTITY(1, clamp(1, 1, 1)) == read_2) + 1, _GLF_IDENTITY(_GLF_IDENTITY(4, max(4, 4)), (_GLF_IDENTITY(4, _GLF_IDENTITY(max(4, 4), (max(4, 4)) | 0))) / 1), 64, 4);
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, true, false, true)), bool(bvec2(_GLF_IDENTITY(bool(bvec4(false, true, false, true)), ! (! (bool(bvec4(false, true, false, true))))), false))))))
        break;
       barrier();
      }
    }
   else
    {
     atomicStore(buf[next_virtual_gid], uint(read_1 + _GLF_IDENTITY(1, max(1, 1)) == read_2) + 1, 4, _GLF_IDENTITY(64, _GLF_IDENTITY(int(int(64)), ~ (~ (int(int(64)))))), 4);
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y))))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        break;
       for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
        {
         if(_GLF_DEAD(false))
          continue;
         if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
          barrier();
         barrier();
         if(_GLF_DEAD(false))
          barrier();
        }
      }
     if(_GLF_DEAD(false))
      break;
     if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)))).y))), (_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y), ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))) && true))), true && (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(false, (_GLF_IDENTITY(false, true && (false))) || false)), bvec2(bvec4(bvec2((injectionSwitch.x > injectionSwitch.y), false), true, true)))), ! (_GLF_IDENTITY(! (bool(_GLF_IDENTITY(bvec2((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(false, (_GLF_IDENTITY(false, true && (false))) || false)), bvec2(bvec4(bvec2((injectionSwitch.x > injectionSwitch.y), false), true, true))))), true && (! (bool(_GLF_IDENTITY(bvec2((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(false, (_GLF_IDENTITY(false, true && (false))) || false)), bvec2(bvec4(bvec2((injectionSwitch.x > injectionSwitch.y), false), true, true))))))))), ! (! (_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2((injectionSwitch.x > injectionSwitch.y), false), bvec2(bvec4(bvec2((injectionSwitch.x > injectionSwitch.y), false), true, true)))), true && (bool(_GLF_IDENTITY(bvec2((injectionSwitch.x > injectionSwitch.y), false), bvec2(bvec4(bvec2((injectionSwitch.x > injectionSwitch.y), false), _GLF_IDENTITY(true, (true) || false), true)))))))))))), false || (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y, min(injectionSwitch.y, injectionSwitch.y))))), _GLF_IDENTITY(_GLF_IDENTITY((_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[_GLF_IDENTITY(0, clamp(0, 0, 0))], injectionSwitch[1])).y)))), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY((_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[_GLF_IDENTITY(0, clamp(0, 0, 0))], injectionSwitch[1])).y)))), ! (! ((_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[_GLF_IDENTITY(0, clamp(0, 0, 0))], injectionSwitch[1])).y)))))))), (_GLF_IDENTITY(bool(_GLF_IDENTITY((_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[_GLF_IDENTITY(0, clamp(0, 0, 0))], injectionSwitch[1])).y)))), ! (! ((_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[_GLF_IDENTITY(0, clamp(0, 0, 0))], injectionSwitch[1])).y)))))))), bool(bvec2(bool(_GLF_IDENTITY((_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[_GLF_IDENTITY(0, clamp(0, 0, 0))], injectionSwitch[1])).y)))), ! (! ((_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[_GLF_IDENTITY(0, clamp(0, 0, 0))], injectionSwitch[1])).y)))))))), true)))) && true))) && _GLF_IDENTITY(true, bool(bvec4(true, false, true, false))), bool(bool(_GLF_IDENTITY((_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[_GLF_IDENTITY(0, (true ? _GLF_IDENTITY(0, 1 * (0)) : _GLF_FUZZED(_injected_loop_counter)))], _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(6.5), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(-966.309)), bvec2(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))[1])).y)))) && true, (_GLF_IDENTITY((_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y)))) && true, ((_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[_GLF_IDENTITY(0, (0) | (0))], injectionSwitch[_GLF_IDENTITY(1, min(1, 1))])).y)))) && true) || false)) && true))))))))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         continue;
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, ! (! (false)))))))
          {
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            continue;
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec3(injectionSwitch.x > injectionSwitch.y, true, true)))))))
            break;
           barrier();
          }
         if(_GLF_DEAD(false))
          break;
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_WRAPPED_IF_TRUE(true))
        {
         if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))
          barrier();
         return;
        }
       else
        {
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))
          continue;
         barrier();
        }
       do
        {
         if(_GLF_DEAD(false))
          barrier();
        }
       while(_GLF_WRAPPED_LOOP(false));
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        break;
      }
     for(int _injected_loop_counter = int(_GLF_ZERO(0.0, injectionSwitch.x)); _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_GLF_IDENTITY(_injected_loop_counter, int(int(_GLF_IDENTITY(_injected_loop_counter, min(_injected_loop_counter, _injected_loop_counter))))) != (1 ^ 0), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_injected_loop_counter != (1 ^ 0), ! (! (_injected_loop_counter != (_GLF_IDENTITY(1, (1) ^ 0) ^ 0))))), (bool(_GLF_IDENTITY(_injected_loop_counter != (1 ^ 0), ! (! (_injected_loop_counter != (1 ^ 0)))))) && true)))); _injected_loop_counter ++)
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).y))))
        barrier();
       if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))
        return;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          break;
         break;
        }
       if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, false || (false)), (injectionSwitch.x > injectionSwitch.y))))
        continue;
      }
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     continue;
    }
  }
}
