#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


struct _GLF_struct_10 {
 vec4 _f0;
} ;

struct _GLF_struct_8 {
 uvec2 _f0;
 mat4x3 _f1;
 mat3x2 _f2;
} ;

struct _GLF_struct_9 {
 ivec3 _f0;
 bvec4 _f1;
 vec4 _f2;
 _GLF_struct_8 _f3;
} ;

struct _GLF_struct_11 {
 _GLF_struct_9 _f0;
 _GLF_struct_10 _f1;
 mat2 _f2;
 uint workgroup_size;
 mat4x2 _f3;
} ;

struct _GLF_struct_5 {
 bvec2 _f0;
} ;

struct _GLF_struct_4 {
 ivec2 _f0;
 mat4x2 _f1;
 ivec2 _f2;
 int _f3;
 mat3x4 _f4;
 uvec2 _f5;
 uint subgroup_id;
} ;

struct _GLF_struct_6 {
 _GLF_struct_4 _f0;
 int _f1;
 ivec2 _f2;
 _GLF_struct_5 _f3;
 mat3x4 _f4;
 mat2x3 _f5;
 mat3 _f6;
} ;

struct _GLF_struct_2 {
 ivec3 _f0;
 mat3 _f1;
 int _f2;
} ;

struct _GLF_struct_1 {
 uvec3 _f0;
 uvec4 _f1;
 float _f2;
 float _f3;
 bool _f4;
 mat4 _f5;
 mat4 _f6;
} ;

struct _GLF_struct_0 {
 mat3 _f0;
} ;

struct _GLF_struct_3 {
 mat2x4 _f0;
 bvec2 _f1;
 mat2 _f2;
 _GLF_struct_0 _f3;
 _GLF_struct_1 _f4;
 _GLF_struct_2 _f5;
 mat2x3 _f6;
} ;

struct _GLF_struct_7 {
 bool _f0;
 _GLF_struct_3 _f1;
 vec4 _f2;
 bvec2 _f3;
 mat2x4 _f4;
 _GLF_struct_6 _f5;
 mat2 _f6;
} ;

layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 _GLF_struct_7 _GLF_struct_replacement_7 = _GLF_struct_7(true, _GLF_struct_3(mat2x4(1.0), bvec2(true), mat2(1.0), _GLF_struct_0(mat3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1.0, (true ? _GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, _GLF_IDENTITY(float(mat3(1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0)), clamp(float(mat3(1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0)), float(mat3(1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0)), float(mat3(1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0)))))) / 1.0) : _GLF_FUZZED(cosh(553.809)))), (_GLF_IDENTITY(1.0, (true ? _GLF_IDENTITY(1.0, _GLF_IDENTITY((1.0) / 1.0, mix(float((1.0) / 1.0), float(_GLF_FUZZED(-90.59)), bool(false)))) : _GLF_FUZZED(cosh(553.809))))) - 0.0), max(_GLF_IDENTITY(1.0, (true ? _GLF_IDENTITY(1.0, (1.0) / _GLF_IDENTITY(1.0, (1.0) - 0.0)) : _GLF_FUZZED(cosh(553.809)))), _GLF_IDENTITY(1.0, (true ? _GLF_IDENTITY(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(7.7) : _GLF_IDENTITY(1.0, max(1.0, 1.0)))), (1.0) / 1.0) : _GLF_FUZZED(cosh(553.809)))))))), _GLF_struct_1(uvec3(1u), uvec4(1u), 1.0, 1.0, true, mat4(1.0), _GLF_IDENTITY(mat4(_GLF_IDENTITY(1.0, float(mat4x2(_GLF_IDENTITY(1.0, (1.0) - 0.0), 0.0, sqrt(0.0), 0.0, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), 1.0, 0.0, 0.0)))), (mat4(1.0)) - mat4(0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, float(_GLF_IDENTITY(mat4(0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, determinant(mat2(1.0, length(vec3(0.0, 0.0, 0.0)), 0.0, 1.0)), _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, abs(1.0))), dot(vec2(0.0, 1.0), vec2(0.0, abs(1.0)))), sin(0.0), _GLF_IDENTITY(dot(vec4(1.0, 0.0, 1.0, 0.0), vec4(0.0, 1.0, 0.0, 1.0)), dot(vec4(1.0, 0.0, 1.0, 0.0), vec4(0.0, 1.0, 0.0, 1.0)))), transpose(transpose(mat4(0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, determinant(mat2(1.0, length(vec3(0.0, 0.0, 0.0)), 0.0, 1.0)), _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, abs(1.0))), dot(vec2(0.0, 1.0), vec2(0.0, abs(1.0)))), sin(0.0), _GLF_IDENTITY(dot(vec4(1.0, 0.0, 1.0, 0.0), vec4(0.0, 1.0, 0.0, 1.0)), dot(vec4(1.0, 0.0, 1.0, 0.0), vec4(0.0, 1.0, 0.0, 1.0))))))))), 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(89.89)), float(0.0), bool(true))), 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))), _GLF_struct_2(ivec3(1), mat3(_GLF_IDENTITY(_GLF_IDENTITY(1.0, max(1.0, _GLF_IDENTITY(1.0, 0.0 + (1.0)))), mix(float(_GLF_FUZZED(-2.6)), float(_GLF_IDENTITY(_GLF_IDENTITY(1.0, max(1.0, _GLF_IDENTITY(1.0, 0.0 + (1.0)))), (_GLF_IDENTITY(1.0, _GLF_IDENTITY(max(1.0, _GLF_IDENTITY(1.0, 0.0 + (1.0))), mix(float(_GLF_FUZZED(4.7)), float(_GLF_IDENTITY(max(1.0, _GLF_IDENTITY(1.0, 0.0 + (1.0))), (_GLF_IDENTITY(max(1.0, _GLF_IDENTITY(1.0, 0.0 + (1.0))), (max(1.0, _GLF_IDENTITY(1.0, 0.0 + (1.0)))) / 1.0)) * cos(0.0))), bool(true))))) + 0.0)), bool(true)))), 1), mat2x3(1.0)), vec4(1.0), bvec2(true), mat2x4(1.0), _GLF_struct_6(_GLF_struct_4(ivec2(1), mat4x2(1.0), ivec2(1), 1, mat3x4(1.0), uvec2(1u), gl_SubgroupID), _GLF_IDENTITY(1, clamp(1, 1, _GLF_IDENTITY(1, _GLF_IDENTITY(0, clamp(_GLF_IDENTITY(0, (0) | (0)), _GLF_IDENTITY(0, 0 | (0)), _GLF_IDENTITY(0, 1 * (0)))) + (_GLF_IDENTITY(1, (_GLF_IDENTITY(1, int(ivec2(1, (1 & 1))))) ^ 0))))), ivec2(1), _GLF_struct_5(bvec2(true)), mat3x4(1.0), mat2x3(1.0), mat3(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-4.9)), float(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(9.1) : 1.0))), bool(true))))), mat2(1.0));
 do
  {
   if(_GLF_DEAD(false))
    barrier();
  }
 while(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, bool(bvec4(false, true, true, false)))), false || (_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, bool(bvec4(false, true, true, false)))))));
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
    }
   else
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
  }
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, false || (false)), (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
  return;
 uint subgroup_local_id = gl_SubgroupInvocationID;
 do
  {
   if(_GLF_DEAD(false))
    return;
  }
 while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, ! (! (false)))));
 uint num_workgroup = gl_NumWorkGroups.x;
 _GLF_struct_11 _GLF_struct_replacement_11 = _GLF_struct_11(_GLF_struct_9(ivec3(1), bvec4(true), vec4(1.0), _GLF_struct_8(uvec2(1u), mat4x3(1.0), mat3x2(1.0))), _GLF_struct_10(vec4(1.0)), _GLF_IDENTITY(mat2(1.0), (mat2(1.0)) * mat2(1.0)), gl_WorkGroupSize.x, mat4x2(1.0));
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
    barrier();
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_WRAPPED_IF_TRUE(true))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(false, true && (false)) || (false))))
    barrier();
  }
 else
  {
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
    }
   else
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     return;
    }
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_DEAD(false), true, true)))))))
  barrier();
 uint workgroup_id = gl_WorkGroupID.x;
 uint workgroup_base = _GLF_struct_replacement_11.workgroup_size * _GLF_IDENTITY(_GLF_IDENTITY(workgroup_id, _GLF_IDENTITY((0u | 0u), ~ (~ ((0u | 0u)))) + (workgroup_id)), (0u | 0u) | (workgroup_id));
 if(_GLF_DEAD(false))
  {
   if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)).y))))
    {
     return;
    }
   else
    {
    }
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(injectionSwitch.x > injectionSwitch.y, true, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))))
    barrier();
   barrier();
  }
 for(int _injected_loop_counter = int(_GLF_ONE(1.0, injectionSwitch.y)); _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
  {
   if(_GLF_DEAD(false))
    {
     do
      {
       barrier();
      }
     while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false))));
    }
   for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_WRAPPED_IF_FALSE(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          continue;
        }
       else
        {
         if(_GLF_DEAD(false))
          barrier();
         do
          {
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(false))
              {
               do
                {
                 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, false, true, false)))))
                  barrier();
                 if(_GLF_DEAD(false))
                  {
                   if(_GLF_DEAD(false))
                    barrier();
                   barrier();
                  }
                }
               while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y))))))));
               barrier();
              }
             for(int _injected_loop_counter = (1 ^ 1); _GLF_WRAPPED_LOOP(_injected_loop_counter != _GLF_IDENTITY(1, (1) | 0)); _injected_loop_counter ++)
              {
               barrier();
              }
            }
           if(_GLF_DEAD(false))
            barrier();
          }
         while(_GLF_WRAPPED_LOOP(false));
        }
       do
        {
         do
          {
           if(_GLF_DEAD(false))
            {
             if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)).x < injectionSwitch.y))))
              {
               return;
               if(_GLF_DEAD(false))
                {
                 if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
                  continue;
                 barrier();
                }
              }
             else
              {
               if(_GLF_DEAD(false))
                break;
              }
            }
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(-9.7)), bool(false)))))))
            barrier();
           for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
            {
             barrier();
            }
          }
         while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), clamp(mat2(1.0) * (_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(5.7)), vec2(_GLF_FUZZED(1.8), (injectionSwitch)[1]), bvec2(false, true)))), mat2(1.0) * (injectionSwitch), _GLF_IDENTITY(mat2(1.0) * (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0))), _GLF_IDENTITY(max(mat2(1.0) * (injectionSwitch), mat2(1.0) * (injectionSwitch)), (max(mat2(1.0) * (injectionSwitch), mat2(1.0) * (injectionSwitch))) + vec2(0.0, 0.0)))))).y))));
        }
       while(_GLF_WRAPPED_LOOP(false));
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      continue;
     do
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, true, false, true)), ! (! (bool(bvec4(false, true, false, true))))))))
        barrier();
       if(_GLF_DEAD(false))
        break;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_DEAD(false), false)))) || false)))))
    barrier();
   return;
  }
 uint virtual_gid = workgroup_base + _GLF_struct_replacement_7._f5._f0.subgroup_id * subgroup_size + subgroup_local_id;
 for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || _GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     barrier();
    }
  }
 uint next_virtual_gid = _GLF_IDENTITY(workgroup_base + _GLF_struct_replacement_7._f5._f0.subgroup_id * subgroup_size, (workgroup_base + _GLF_struct_replacement_7._f5._f0.subgroup_id * subgroup_size) | (_GLF_IDENTITY(workgroup_base, _GLF_IDENTITY(min(_GLF_IDENTITY(workgroup_base, ~ (~ (_GLF_IDENTITY(workgroup_base, (true ? workgroup_base : _GLF_FUZZED(workgroup_id)))))), _GLF_IDENTITY(workgroup_base, (workgroup_base) >> 0u)), uint(_GLF_IDENTITY(uint(min(_GLF_IDENTITY(workgroup_base, ~ (~ (_GLF_IDENTITY(workgroup_base, (true ? workgroup_base : _GLF_FUZZED(workgroup_id)))))), _GLF_IDENTITY(workgroup_base, (workgroup_base) >> 0u))), (true ? uint(min(_GLF_IDENTITY(workgroup_base, ~ (~ (_GLF_IDENTITY(workgroup_base, (true ? workgroup_base : _GLF_IDENTITY(_GLF_FUZZED(workgroup_id), (_GLF_FUZZED(workgroup_id)) ^ 0u)))))), _GLF_IDENTITY(workgroup_base, (workgroup_base) >> 0u))) : _GLF_FUZZED(_GLF_IDENTITY(virtual_gid, clamp(virtual_gid, virtual_gid, virtual_gid)))))))) + _GLF_struct_replacement_7._f5._f0.subgroup_id * subgroup_size)) + ((subgroup_local_id + _GLF_IDENTITY(1, _GLF_IDENTITY(int(_GLF_IDENTITY(ivec2(1, 1), max(_GLF_IDENTITY(ivec2(1, 1), clamp(ivec2(1, 1), ivec2(1, 1), ivec2(1, 1))), ivec2(1, 1)))), (int(_GLF_IDENTITY(_GLF_IDENTITY(ivec2(1, _GLF_IDENTITY(1, int(_GLF_IDENTITY(ivec4(1, 1, int(_GLF_ZERO(0.0, injectionSwitch.x)), 1), (false ? _GLF_FUZZED(ivec4(79194, 54438, -51847, 6693)) : ivec4(1, 1, int(_GLF_ZERO(0.0, injectionSwitch.x)), 1)))))), (ivec2(1, _GLF_IDENTITY(1, int(_GLF_IDENTITY(ivec4(1, 1, int(_GLF_ZERO(0.0, injectionSwitch.x)), 1), (false ? _GLF_FUZZED(ivec4(79194, 54438, -51847, 6693)) : ivec4(1, 1, int(_GLF_ZERO(0.0, injectionSwitch.x)), 1))))))) - ivec2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))), max(_GLF_IDENTITY(ivec2(1, 1), clamp(ivec2(1, 1), ivec2(1, 1), ivec2(1, 1))), ivec2(1, 1))))) | (int(_GLF_IDENTITY(ivec2(1, 1), max(_GLF_IDENTITY(ivec2(1, 1), _GLF_IDENTITY(clamp(ivec2(1, 1), ivec2(1, 1), ivec2(1, 1)), (clamp(ivec2(1, 1), ivec2(1, 1), ivec2(1, 1))) ^ ivec2(0, 0))), ivec2(1, 1)))))))) % subgroup_size);
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
    {
     return;
    }
   else
    {
    }
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
      }
     else
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
    }
   else
    {
    }
  }
 uint read_1 = atomicLoad(buf[virtual_gid], 4, 64, 0);
 atomicStore(buf[next_virtual_gid], _GLF_IDENTITY(_GLF_IDENTITY(uint(read_1 + 1), _GLF_IDENTITY((uint(read_1 + 1)) | 0u, uint(uvec3((uint(read_1 + 1)) | 0u, 1u, 0u)))), _GLF_IDENTITY(0u + (uint(read_1 + 1)), _GLF_IDENTITY(1u * _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(0u + (uint(read_1 + 1)), (0u + (uint(_GLF_IDENTITY(read_1, 1u * (read_1)) + 1))) / 1u)), (_GLF_IDENTITY((_GLF_IDENTITY(0u + (uint(read_1 + 1)), (0u + (uint(_GLF_IDENTITY(read_1, 1u * (read_1)) + 1))) / 1u)), uint(uvec3((_GLF_IDENTITY(0u + (uint(read_1 + 1)), (0u + (uint(_GLF_IDENTITY(read_1, 1u * (read_1)) + 1))) / 1u)), 1u, 0u)))) / 1u), clamp(_GLF_IDENTITY((_GLF_IDENTITY(0u + (uint(read_1 + 1)), (0u + (uint(_GLF_IDENTITY(read_1, 1u * (read_1)) + 1))) / 1u)), (_GLF_IDENTITY((_GLF_IDENTITY(0u + (uint(read_1 + 1)), (0u + (uint(_GLF_IDENTITY(read_1, 1u * (read_1)) + 1))) / 1u)), uint(uvec3((_GLF_IDENTITY(0u + (uint(read_1 + 1)), (0u + (uint(_GLF_IDENTITY(read_1, 1u * (read_1)) + 1))) / 1u)), 1u, 0u)))) / 1u), _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(0u + (uint(read_1 + 1)), (0u + (uint(_GLF_IDENTITY(read_1, 1u * (read_1)) + 1))) / 1u)), (_GLF_IDENTITY((_GLF_IDENTITY(0u + (uint(read_1 + 1)), (0u + (uint(_GLF_IDENTITY(read_1, 1u * (read_1)) + 1))) / 1u)), uint(uvec3((_GLF_IDENTITY(0u + (uint(read_1 + 1)), (0u + (uint(_GLF_IDENTITY(read_1, 1u * (read_1)) + 1))) / 1u)), 1u, 0u)))) / 1u), (_GLF_IDENTITY((_GLF_IDENTITY(0u + (uint(read_1 + 1)), (0u + (uint(_GLF_IDENTITY(read_1, 1u * (read_1)) + 1))) / 1u)), (_GLF_IDENTITY((_GLF_IDENTITY(0u + (uint(read_1 + 1)), (0u + (uint(_GLF_IDENTITY(read_1, 1u * (read_1)) + 1))) / 1u)), uint(uvec3((_GLF_IDENTITY(0u + (uint(read_1 + 1)), (0u + (uint(_GLF_IDENTITY(read_1, 1u * (read_1)) + 1))) / 1u)), 1u, 0u)))) / 1u)) - 0u), _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(0u + (uint(read_1 + 1)), (0u + (uint(_GLF_IDENTITY(read_1, 1u * (read_1)) + 1))) / 1u)), (_GLF_IDENTITY((_GLF_IDENTITY(0u + (uint(read_1 + 1)), (0u + (uint(_GLF_IDENTITY(read_1, 1u * (read_1)) + 1))) / 1u)), uint(uvec3((_GLF_IDENTITY(0u + (uint(read_1 + 1)), (0u + (uint(_GLF_IDENTITY(read_1, 1u * (read_1)) + 1))) / 1u)), 1u, 0u)))) / 1u), 0u + (_GLF_IDENTITY((_GLF_IDENTITY(0u + (uint(read_1 + 1)), (0u + (uint(_GLF_IDENTITY(read_1, 1u * (read_1)) + 1))) / 1u)), (_GLF_IDENTITY((_GLF_IDENTITY(0u + (uint(read_1 + 1)), (0u + (uint(_GLF_IDENTITY(read_1, 1u * (read_1)) + 1))) / 1u)), uint(uvec3((_GLF_IDENTITY(0u + (uint(read_1 + 1)), (0u + (uint(_GLF_IDENTITY(read_1, 1u * (read_1)) + 1))) / 1u)), 1u, 0u)))) / 1u))))), ~ (~ (1u * _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(0u + (uint(read_1 + 1)), (0u + (uint(_GLF_IDENTITY(read_1, 1u * (read_1)) + 1))) / 1u)), 1u * ((_GLF_IDENTITY(0u + (uint(read_1 + 1)), (0u + (uint(_GLF_IDENTITY(read_1, 1u * (read_1)) + 1))) / 1u)))), (_GLF_IDENTITY((_GLF_IDENTITY(0u + (uint(read_1 + _GLF_IDENTITY(1, (1) - 0))), (_GLF_IDENTITY(0u + (uint(_GLF_IDENTITY(_GLF_IDENTITY(read_1, 1u * (read_1)), ~ (~ (_GLF_IDENTITY(read_1, 1u * (read_1))))) + 1)), (0u + (uint(_GLF_IDENTITY(read_1, 1u * (read_1)) + 1))) | (0u + (uint(_GLF_IDENTITY(read_1, 1u * (read_1)) + 1))))) / 1u)), uint(uvec3((_GLF_IDENTITY(0u + (uint(read_1 + _GLF_IDENTITY(1, 0 | (1)))), (0u + (uint(_GLF_IDENTITY(read_1, 1u * (read_1)) + 1))) / 1u)), 1u, 0u)))) / 1u)))))), 4, 64, _GLF_IDENTITY(4, _GLF_IDENTITY((4), int(int((4)))) >> (0 >> _GLF_IDENTITY(int(7), int(7)))));
 uint read_2 = atomicLoad(buf[virtual_gid], 4, 64, _GLF_IDENTITY(0, max(0, 0)));
 if(_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, (false ? _GLF_FUZZED(65026) : 1)) < _GLF_IDENTITY(subgroup_size, uint(_GLF_IDENTITY(uvec2(_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY((_GLF_IDENTITY(subgroup_size, clamp(subgroup_size, _GLF_IDENTITY(subgroup_size, (subgroup_size) + 0u), subgroup_size))), ((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, max(_GLF_IDENTITY(subgroup_size, max(subgroup_size, _GLF_IDENTITY(subgroup_size, (subgroup_size) | (subgroup_size)))), subgroup_size)), clamp(subgroup_size, _GLF_IDENTITY(subgroup_size, (subgroup_size) + 0u), subgroup_size)))) << 0u) << 0u), 1u), (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(bvec4(false, false, false, true)))))) ? _GLF_FUZZED(_GLF_IDENTITY(uvec2(50378u, _GLF_IDENTITY(25204u, max(25204u, 25204u))), ~ (~ (uvec2(50378u, _GLF_IDENTITY(25204u, max(25204u, 25204u))))))) : uvec2(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, max(_GLF_IDENTITY(subgroup_size, (true ? subgroup_size : _GLF_FUZZED(virtual_gid))), subgroup_size)), (subgroup_size) << 0u), 1u), clamp(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(false, true))) ? _GLF_FUZZED(uvec2(50378u, 25204u)) : uvec2(_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size))) << 0u), 1u), uvec2(0u, 0u) ^ (false ? _GLF_FUZZED(uvec2(50378u, 25204u)) : uvec2(_GLF_IDENTITY(subgroup_size, (subgroup_size) << 0u), 1u))), false ? _GLF_FUZZED(uvec2(50378u, 25204u)) : uvec2(_GLF_IDENTITY(subgroup_size, (subgroup_size) << 0u), 1u), false ? _GLF_FUZZED(uvec2(50378u, 25204u)) : uvec2(_GLF_IDENTITY(subgroup_size, (subgroup_size) << 0u), 1u))))))), ! (! (_GLF_IDENTITY(subgroup_local_id + 1 < _GLF_IDENTITY(subgroup_size, uint(_GLF_IDENTITY(uvec2(_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(clamp(subgroup_size, _GLF_IDENTITY(subgroup_size, (subgroup_size) + 0u), subgroup_size), (0u & 179222u) ^ _GLF_IDENTITY((_GLF_IDENTITY(clamp(subgroup_size, _GLF_IDENTITY(subgroup_size, (subgroup_size) + 0u), _GLF_IDENTITY(subgroup_size, min(_GLF_IDENTITY(subgroup_size, (subgroup_size) | (subgroup_size)), _GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, min(subgroup_size, subgroup_size))) + 0u)))), 1u * (clamp(subgroup_size, _GLF_IDENTITY(subgroup_size, _GLF_IDENTITY((subgroup_size), clamp((subgroup_size), (subgroup_size), (subgroup_size))) + 0u), subgroup_size)))), ((_GLF_IDENTITY(clamp(subgroup_size, _GLF_IDENTITY(subgroup_size, (subgroup_size) + 0u), _GLF_IDENTITY(subgroup_size, min(_GLF_IDENTITY(subgroup_size, (subgroup_size) | (subgroup_size)), _GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, min(subgroup_size, subgroup_size))) + 0u)))), 1u * (clamp(subgroup_size, _GLF_IDENTITY(subgroup_size, _GLF_IDENTITY((subgroup_size), clamp((subgroup_size), (subgroup_size), (subgroup_size))) + 0u), subgroup_size))))) - 0u)))) << 0u), 1u), (_GLF_IDENTITY(false ? _GLF_FUZZED(uvec2(50378u, 25204u)) : uvec2(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size)), (subgroup_size) << 0u), 1u), clamp(_GLF_IDENTITY(_GLF_IDENTITY(false ? _GLF_FUZZED(uvec2(50378u, 25204u)) : uvec2(_GLF_IDENTITY(subgroup_size, (subgroup_size) << 0u), 1u), uvec2(0u, 0u) ^ (false ? _GLF_FUZZED(uvec2(50378u, 25204u)) : uvec2(_GLF_IDENTITY(subgroup_size, (subgroup_size) << 0u), 1u))), uvec2(0u, 0u) | (_GLF_IDENTITY(false ? _GLF_FUZZED(uvec2(50378u, 25204u)) : uvec2(_GLF_IDENTITY(subgroup_size, (subgroup_size) << 0u), 1u), uvec2(0u, 0u) ^ (false ? _GLF_FUZZED(uvec2(50378u, 25204u)) : uvec2(_GLF_IDENTITY(subgroup_size, (subgroup_size) << 0u), 1u))))), false ? _GLF_FUZZED(uvec2(50378u, 25204u)) : uvec2(_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY((subgroup_size) << 0u, ((subgroup_size) << 0u) >> 0u)), _GLF_IDENTITY(1u, 0u | (1u))), false ? _GLF_FUZZED(uvec2(50378u, 25204u)) : uvec2(_GLF_IDENTITY(subgroup_size, (subgroup_size) << 0u), 1u))))))), ! (! (subgroup_local_id + 1 < _GLF_IDENTITY(subgroup_size, uint(_GLF_IDENTITY(uvec2(_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, clamp(subgroup_size, _GLF_IDENTITY(subgroup_size, (subgroup_size) + 0u), subgroup_size))) << _GLF_IDENTITY(0u, max(0u, 0u))), 1u), (_GLF_IDENTITY(false ? _GLF_FUZZED(uvec2(50378u, 25204u)) : uvec2(_GLF_IDENTITY(subgroup_size, (subgroup_size) << 0u), 1u), clamp(_GLF_IDENTITY(false ? _GLF_FUZZED(uvec2(50378u, 25204u)) : uvec2(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY((subgroup_size), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY((subgroup_size), clamp((subgroup_size), (subgroup_size), (subgroup_size)))), min(~ (_GLF_IDENTITY((subgroup_size), clamp((subgroup_size), (subgroup_size), (_GLF_IDENTITY(subgroup_size, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? subgroup_size : _GLF_FUZZED(virtual_gid))))))), ~ (_GLF_IDENTITY((subgroup_size), clamp((subgroup_size), (subgroup_size), (subgroup_size)))))))) << 0u), 0u + (_GLF_IDENTITY(subgroup_size, (subgroup_size) << 0u))), _GLF_IDENTITY(1u, (1u) + 0u)), uvec2(0u, 0u) ^ (false ? _GLF_FUZZED(uvec2(50378u, _GLF_IDENTITY(25204u, (25204u) | 0u))) : uvec2(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (subgroup_size) << 0u), 0u ^ (_GLF_IDENTITY(subgroup_size, (subgroup_size) << 0u))), 1u))), false ? _GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(uvec2(50378u, 25204u)), (_GLF_FUZZED(uvec2(50378u, 25204u))) / uvec2(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y))), (_GLF_IDENTITY(_GLF_FUZZED(uvec2(50378u, 25204u)), (_GLF_FUZZED(uvec2(50378u, 25204u))) / uvec2(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y)))) | (_GLF_IDENTITY(_GLF_FUZZED(uvec2(50378u, 25204u)), (_GLF_FUZZED(uvec2(50378u, 25204u))) / uvec2(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y))))) : uvec2(_GLF_IDENTITY(subgroup_size, (subgroup_size) << 0u), 1u), false ? _GLF_FUZZED(uvec2(50378u, 25204u)) : uvec2(_GLF_IDENTITY(subgroup_size, (subgroup_size) << 0u), 1u))))))))))))))
  {
   int i = 0;
   if(_GLF_DEAD(false))
    barrier();
   do
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false)), ! (! (false))))), bool(bvec4(_GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! (! (false)))), (_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! (! (false)))), ! (_GLF_IDENTITY(! (! (_GLF_IDENTITY(false, ! (! (false))))), (! (! (_GLF_IDENTITY(false, ! (! (false)))))) || false)))) || false)), false || ((! (_GLF_IDENTITY(false, ! (! (false))))))), false, true, true))))))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, (false) || false)))))
        {
         if(_GLF_DEAD(false))
          continue;
         if(_GLF_DEAD(false))
          barrier();
         break;
         if(_GLF_DEAD(false))
          barrier();
        }
       if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
        {
         for(int _injected_loop_counter = int(_GLF_ONE(1.0, injectionSwitch.y)); _GLF_WRAPPED_LOOP(_injected_loop_counter > (0 | 0)); _injected_loop_counter --)
          {
           return;
          }
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       return;
       if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(bool(bvec2((injectionSwitch.x > injectionSwitch.y), true)), false || (bool(bvec2((injectionSwitch.x > injectionSwitch.y), true))))))))
        barrier();
      }
    }
   while(_GLF_WRAPPED_LOOP(false));
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
       if(_GLF_DEAD(false))
        barrier();
      }
     else
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         barrier();
        }
       atomicStore(buf[next_virtual_gid], _GLF_IDENTITY(uint(_GLF_IDENTITY(read_1 + _GLF_IDENTITY(_GLF_IDENTITY(1, (1) + 0), (false ? _GLF_FUZZED(atomicXor(i, i)) : 1)) == read_2, true && (_GLF_IDENTITY(read_1 + 1 == read_2, true && _GLF_IDENTITY((read_1 + 1 == read_2), ((read_1 + 1 == _GLF_IDENTITY(read_2, ~ (~ (read_2))))) && true))))), 0u ^ (uint(_GLF_IDENTITY(read_1 + _GLF_IDENTITY(_GLF_IDENTITY(1, (1) + 0), (false ? _GLF_FUZZED(atomicXor(i, i)) : 1)) == read_2, true && (_GLF_IDENTITY(read_1 + 1 == read_2, true && _GLF_IDENTITY((read_1 + 1 == read_2), ((read_1 + 1 == _GLF_IDENTITY(read_2, ~ (~ (read_2))))) && true))))))) + _GLF_IDENTITY(1, int(_GLF_IDENTITY(ivec2(1, 0), ivec2(ivec3(ivec2(1, _GLF_IDENTITY(_GLF_IDENTITY(0, clamp(0, 0, _GLF_IDENTITY(0, (0) * 1))), ~ (~ (0)))), 0))))), 4, 64, 4);
      }
    }
   else
    {
    }
   if(_GLF_DEAD(false))
    barrier();
  }
 else
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))
    return;
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0), _GLF_IDENTITY(bool(bvec4(injectionSwitch.x > injectionSwitch.y, false, false, true)), ! _GLF_IDENTITY((! (_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec4(injectionSwitch.x > injectionSwitch.y, false, false, true)), (bool(bvec4(injectionSwitch.x > injectionSwitch.y, false, false, true))) || false), bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec4(injectionSwitch.x > injectionSwitch.y, false, _GLF_IDENTITY(false, (false) && true), true)), (bool(bvec4(injectionSwitch.x > injectionSwitch.y, false, false, true))) || false), (_GLF_IDENTITY(bool(bvec4(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch)[1], (true ? (injectionSwitch)[1] : _GLF_FUZZED(9.9)))), vec2(_GLF_FUZZED(37.12), _GLF_FUZZED(2.7)), bvec2(false, false))).y, false, false, true)), (bool(bvec4(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(vec4(injectionSwitch.y, sqrt(0.0), 0.0, 0.0))), false, false, true))) || false)) || false), false), bvec2(bvec2(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x)) > injectionSwitch.y, false, _GLF_IDENTITY(false, (false) && true), true)), (bool(bvec4(injectionSwitch.x > injectionSwitch.y, false, false, true))) || false), (_GLF_IDENTITY(bool(bvec4(injectionSwitch.x > injectionSwitch.y, false, false, true)), (bool(bvec4(injectionSwitch.x > injectionSwitch.y, false, false, true))) || false)) || false), false), bvec2(bvec4(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec4(injectionSwitch.x > injectionSwitch.y, false, _GLF_IDENTITY(false, (false) && true), true)), (bool(bvec4(injectionSwitch.x > injectionSwitch.y, false, false, true))) || false), (_GLF_IDENTITY(bool(bvec4(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y, injectionSwitch.y)), false, false, true)), (bool(bvec4(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0), false, false, true))) || false)) || false), false), bvec2(bvec3(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec4(injectionSwitch.x > injectionSwitch.y, false, _GLF_IDENTITY(false, (false) && true), true)), (bool(bvec4(injectionSwitch.x > injectionSwitch.y, false, false, true))) || false), (_GLF_IDENTITY(bool(bvec4(injectionSwitch.x > injectionSwitch.y, false, false, true)), (bool(bvec4(injectionSwitch.x > injectionSwitch.y, false, false, true))) || false)) || false), false), false))), false, true)))))), bvec2(bvec4(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec4(injectionSwitch.x > injectionSwitch.y, false, _GLF_IDENTITY(false, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(67.22)), vec2(_GLF_FUZZED(5588.2560), (injectionSwitch)[1]), bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))).x > injectionSwitch.y)) || (false)), _GLF_IDENTITY(true, (true) && true))), (bool(bvec4(_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(0.4, 3.1)))))).x > injectionSwitch.y, false, false, true))) || false), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec4(injectionSwitch.x > injectionSwitch.y, false, false, true)), (bool(bvec4(injectionSwitch.x > injectionSwitch.y, false, false, true))) || false), _GLF_IDENTITY(false, bool(bvec3(false, false, true))) || (_GLF_IDENTITY(bool(bvec4(injectionSwitch.x > injectionSwitch.y, false, false, true)), (bool(bvec4(injectionSwitch.x > injectionSwitch.y, false, false, true))) || false)))) || false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec4(injectionSwitch.x > injectionSwitch.y, false, false, true)), (bool(bvec4(injectionSwitch.x > injectionSwitch.y, false, false, true))) || false), _GLF_IDENTITY(false, bool(bvec3(false, false, true))) || (_GLF_IDENTITY(bool(bvec4(injectionSwitch.x > injectionSwitch.y, false, false, true)), (bool(bvec4(injectionSwitch.x > injectionSwitch.y, false, false, true))) || false)))) || false, ! (! ((_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec4(injectionSwitch.x > injectionSwitch.y, false, false, true)), (bool(bvec4(injectionSwitch.x > injectionSwitch.y, false, false, true))) || false), _GLF_IDENTITY(false, bool(bvec3(false, false, true))) || (_GLF_IDENTITY(bool(bvec4(injectionSwitch.x > injectionSwitch.y, false, false, true)), (bool(bvec4(injectionSwitch.x > injectionSwitch.y, false, false, true))) || false)))) || false)))), true && (! (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec4(injectionSwitch.x > injectionSwitch.y, false, false, true)), (bool(bvec4(injectionSwitch.x > injectionSwitch.y, false, false, true))) || false), _GLF_IDENTITY(false, bool(bvec3(false, false, true))) || (_GLF_IDENTITY(bool(bvec4(injectionSwitch.x > injectionSwitch.y, false, false, true)), (bool(bvec4(injectionSwitch.x > injectionSwitch.y, false, false, true))) || false)))) || false, ! (! ((_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec4(injectionSwitch.x > injectionSwitch.y, false, false, true)), (bool(bvec4(injectionSwitch.x > injectionSwitch.y, false, false, true))) || false), _GLF_IDENTITY(false, bool(bvec3(false, false, true))) || _GLF_IDENTITY((_GLF_IDENTITY(bool(bvec4(injectionSwitch.x > injectionSwitch.y, false, false, true)), (bool(bvec4(injectionSwitch.x > injectionSwitch.y, false, false, true))) || false)), bool(_GLF_IDENTITY(bvec3((_GLF_IDENTITY(bool(bvec4(injectionSwitch.x > injectionSwitch.y, false, false, true)), (bool(bvec4(injectionSwitch.x > injectionSwitch.y, false, false, true))) || false)), _GLF_IDENTITY(true, false || (true)), false), bvec3(bvec4(bvec3((_GLF_IDENTITY(bool(bvec4(injectionSwitch.x > injectionSwitch.y, false, false, true)), (bool(bvec4(injectionSwitch.x > injectionSwitch.y, false, false, true))) || false)), _GLF_IDENTITY(true, false || (true)), false), false))))))) || false))))))))), false), false, false))))))), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY((! (_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec4(injectionSwitch.x > injectionSwitch.y, false, false, true)), (bool(bvec4(injectionSwitch.x > injectionSwitch.y, false, false, true))) || false), bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec4(injectionSwitch.x > injectionSwitch.y, false, _GLF_IDENTITY(false, (false) && true), true)), (bool(bvec4(injectionSwitch.x > injectionSwitch.y, false, false, true))) || false), (_GLF_IDENTITY(bool(bvec4(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch)[1], (true ? (injectionSwitch)[1] : _GLF_FUZZED(9.9)))), vec2(_GLF_FUZZED(37.12), _GLF_FUZZED(2.7)), bvec2(false, false))).y, false, false, true)), (bool(bvec4(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(vec4(injectionSwitch.y, sqrt(0.0), 0.0, 0.0))), false, false, true))) || false)) || false), false), bvec2(bvec2(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x)) > injectionSwitch.y, false, _GLF_IDENTITY(false, (false) && true), true)), (bool(bvec4(injectionSwitch.x > injectionSwitch.y, false, false, true))) || false), (_GLF_IDENTITY(bool(bvec4(injectionSwitch.x > injectionSwitch.y, false, false, true)), (bool(bvec4(injectionSwitch.x > injectionSwitch.y, false, false, true))) || false)) || false), false), bvec2(bvec4(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec4(injectionSwitch.x > injectionSwitch.y, false, _GLF_IDENTITY(false, (false) && true), true)), (bool(bvec4(injectionSwitch.x > injectionSwitch.y, false, false, true))) || false), (_GLF_IDENTITY(bool(bvec4(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y, injectionSwitch.y)), false, false, true)), (bool(bvec4(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0), false, false, true))) || false)) || false), false), bvec2(bvec3(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec4(injectionSwitch.x > injectionSwitch.y, false, _GLF_IDENTITY(false, (false) && true), true)), (bool(bvec4(injectionSwitch.x > injectionSwitch.y, false, false, true))) || false), (_GLF_IDENTITY(bool(bvec4(injectionSwitch.x > injectionSwitch.y, false, false, true)), (bool(bvec4(injectionSwitch.x > injectionSwitch.y, false, false, true))) || false)) || false), false), false))), false, true)))))), bvec2(bvec4(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec4(injectionSwitch.x > injectionSwitch.y, false, _GLF_IDENTITY(false, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(67.22)), vec2(_GLF_FUZZED(5588.2560), (injectionSwitch)[1]), bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))).x > injectionSwitch.y)) || (false)), _GLF_IDENTITY(true, (true) && true))), (bool(bvec4(_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(0.4, 3.1)))))).x > injectionSwitch.y, false, false, true))) || false), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec4(injectionSwitch.x > injectionSwitch.y, false, false, true)), (bool(bvec4(injectionSwitch.x > injectionSwitch.y, false, false, true))) || false), _GLF_IDENTITY(false, bool(bvec3(false, false, true))) || (_GLF_IDENTITY(bool(bvec4(injectionSwitch.x > injectionSwitch.y, false, false, true)), (bool(bvec4(injectionSwitch.x > injectionSwitch.y, false, false, true))) || false)))) || false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec4(injectionSwitch.x > injectionSwitch.y, false, false, true)), (bool(bvec4(injectionSwitch.x > injectionSwitch.y, false, false, true))) || false), _GLF_IDENTITY(false, bool(bvec3(false, false, true))) || (_GLF_IDENTITY(bool(bvec4(injectionSwitch.x > injectionSwitch.y, false, false, true)), (bool(bvec4(injectionSwitch.x > injectionSwitch.y, false, false, true))) || false)))) || false, ! (! ((_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec4(injectionSwitch.x > injectionSwitch.y, false, false, true)), (bool(bvec4(injectionSwitch.x > injectionSwitch.y, false, false, true))) || false), _GLF_IDENTITY(false, bool(bvec3(false, false, true))) || (_GLF_IDENTITY(bool(bvec4(injectionSwitch.x > injectionSwitch.y, false, false, true)), (bool(bvec4(injectionSwitch.x > injectionSwitch.y, false, false, true))) || false)))) || false)))), true && (! (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec4(injectionSwitch.x > injectionSwitch.y, false, false, true)), (bool(bvec4(injectionSwitch.x > injectionSwitch.y, false, false, true))) || false), _GLF_IDENTITY(false, bool(bvec3(false, false, true))) || (_GLF_IDENTITY(bool(bvec4(injectionSwitch.x > injectionSwitch.y, false, false, true)), (bool(bvec4(injectionSwitch.x > injectionSwitch.y, false, false, true))) || false)))) || false, ! (! ((_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec4(injectionSwitch.x > injectionSwitch.y, false, false, true)), (bool(bvec4(injectionSwitch.x > injectionSwitch.y, false, false, true))) || false), _GLF_IDENTITY(false, bool(bvec3(false, false, true))) || _GLF_IDENTITY((_GLF_IDENTITY(bool(bvec4(injectionSwitch.x > injectionSwitch.y, false, false, true)), (bool(bvec4(injectionSwitch.x > injectionSwitch.y, false, false, true))) || false)), bool(_GLF_IDENTITY(bvec3((_GLF_IDENTITY(bool(bvec4(injectionSwitch.x > injectionSwitch.y, false, false, true)), (bool(bvec4(injectionSwitch.x > injectionSwitch.y, false, false, true))) || false)), _GLF_IDENTITY(true, false || (true)), false), bvec3(bvec4(bvec3((_GLF_IDENTITY(bool(bvec4(injectionSwitch.x > injectionSwitch.y, false, false, true)), (bool(bvec4(injectionSwitch.x > injectionSwitch.y, false, false, true))) || false)), _GLF_IDENTITY(true, false || (true)), false), false))))))) || false))))))))), false), false, false))))))), ((! (_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec4(injectionSwitch.x > injectionSwitch.y, false, false, true)), (bool(bvec4(injectionSwitch.x > injectionSwitch.y, false, false, true))) || false), bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec4(injectionSwitch.x > injectionSwitch.y, false, _GLF_IDENTITY(false, (false) && true), true)), (bool(bvec4(injectionSwitch.x > injectionSwitch.y, false, false, true))) || false), (_GLF_IDENTITY(bool(bvec4(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch)[1], (true ? (injectionSwitch)[1] : _GLF_FUZZED(9.9)))), vec2(_GLF_FUZZED(37.12), _GLF_FUZZED(2.7)), bvec2(false, false))).y, false, false, true)), (bool(bvec4(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(vec4(injectionSwitch.y, sqrt(0.0), 0.0, 0.0))), false, false, true))) || false)) || false), false), bvec2(bvec2(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x)) > injectionSwitch.y, false, _GLF_IDENTITY(false, (false) && true), true)), (bool(bvec4(injectionSwitch.x > injectionSwitch.y, false, false, true))) || false), (_GLF_IDENTITY(bool(bvec4(injectionSwitch.x > injectionSwitch.y, false, false, true)), (bool(bvec4(injectionSwitch.x > injectionSwitch.y, false, false, true))) || false)) || false), false), bvec2(bvec4(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec4(injectionSwitch.x > injectionSwitch.y, false, _GLF_IDENTITY(false, (false) && true), true)), (bool(bvec4(injectionSwitch.x > injectionSwitch.y, false, false, true))) || false), (_GLF_IDENTITY(bool(bvec4(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y, injectionSwitch.y)), false, false, true)), (bool(bvec4(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0), false, false, true))) || false)) || false), false), bvec2(bvec3(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec4(injectionSwitch.x > injectionSwitch.y, false, _GLF_IDENTITY(false, (false) && true), true)), (bool(bvec4(injectionSwitch.x > injectionSwitch.y, false, false, true))) || false), (_GLF_IDENTITY(bool(bvec4(injectionSwitch.x > injectionSwitch.y, false, false, true)), (bool(bvec4(injectionSwitch.x > injectionSwitch.y, false, false, true))) || false)) || false), false), false))), false, true)))))), bvec2(bvec4(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec4(injectionSwitch.x > injectionSwitch.y, false, _GLF_IDENTITY(false, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(67.22)), vec2(_GLF_FUZZED(5588.2560), (injectionSwitch)[1]), bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))).x > injectionSwitch.y)) || (false)), _GLF_IDENTITY(true, (true) && true))), (bool(bvec4(_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(0.4, 3.1)))))).x > injectionSwitch.y, false, false, true))) || false), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec4(injectionSwitch.x > injectionSwitch.y, false, false, true)), (bool(bvec4(injectionSwitch.x > injectionSwitch.y, false, false, true))) || false), _GLF_IDENTITY(false, bool(bvec3(false, false, true))) || (_GLF_IDENTITY(bool(bvec4(injectionSwitch.x > injectionSwitch.y, false, false, true)), (bool(bvec4(injectionSwitch.x > injectionSwitch.y, false, false, true))) || false)))) || false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec4(injectionSwitch.x > injectionSwitch.y, false, false, true)), (bool(bvec4(injectionSwitch.x > injectionSwitch.y, false, false, true))) || false), _GLF_IDENTITY(false, bool(bvec3(false, false, true))) || (_GLF_IDENTITY(bool(bvec4(injectionSwitch.x > injectionSwitch.y, false, false, true)), (bool(bvec4(injectionSwitch.x > injectionSwitch.y, false, false, true))) || false)))) || false, ! (! ((_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec4(injectionSwitch.x > injectionSwitch.y, false, false, true)), (bool(bvec4(injectionSwitch.x > injectionSwitch.y, false, false, true))) || false), _GLF_IDENTITY(false, bool(bvec3(false, false, true))) || (_GLF_IDENTITY(bool(bvec4(injectionSwitch.x > injectionSwitch.y, false, false, true)), (bool(bvec4(injectionSwitch.x > injectionSwitch.y, false, false, true))) || false)))) || false)))), true && (! (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec4(injectionSwitch.x > injectionSwitch.y, false, false, true)), (bool(bvec4(injectionSwitch.x > injectionSwitch.y, false, false, true))) || false), _GLF_IDENTITY(false, bool(bvec3(false, false, true))) || (_GLF_IDENTITY(bool(bvec4(injectionSwitch.x > injectionSwitch.y, false, false, true)), (bool(bvec4(injectionSwitch.x > injectionSwitch.y, false, false, true))) || false)))) || false, ! (! ((_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec4(injectionSwitch.x > injectionSwitch.y, false, false, true)), (bool(bvec4(injectionSwitch.x > injectionSwitch.y, false, false, true))) || false), _GLF_IDENTITY(false, bool(bvec3(false, false, true))) || _GLF_IDENTITY((_GLF_IDENTITY(bool(bvec4(injectionSwitch.x > injectionSwitch.y, false, false, true)), (bool(bvec4(injectionSwitch.x > injectionSwitch.y, false, false, true))) || false)), bool(_GLF_IDENTITY(bvec3((_GLF_IDENTITY(bool(bvec4(injectionSwitch.x > injectionSwitch.y, false, false, true)), (bool(bvec4(injectionSwitch.x > injectionSwitch.y, false, false, true))) || false)), _GLF_IDENTITY(true, false || (true)), false), bvec3(bvec4(bvec3((_GLF_IDENTITY(bool(bvec4(injectionSwitch.x > injectionSwitch.y, false, false, true)), (bool(bvec4(injectionSwitch.x > injectionSwitch.y, false, false, true))) || false)), _GLF_IDENTITY(true, false || (true)), false), false))))))) || false))))))))), false), false, false)))))))) && true), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec3(bvec4(bvec3(_GLF_IDENTITY((! (_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec4(injectionSwitch.x > injectionSwitch.y, false, false, true)), (bool(bvec4(injectionSwitch.x > injectionSwitch.y, false, false, true))) || false), bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec4(injectionSwitch.x > injectionSwitch.y, false, _GLF_IDENTITY(false, (false) && true), true)), (bool(bvec4(injectionSwitch.x > injectionSwitch.y, false, false, true))) || false), (_GLF_IDENTITY(bool(bvec4(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch)[1], (true ? (injectionSwitch)[1] : _GLF_FUZZED(9.9)))), vec2(_GLF_FUZZED(37.12), _GLF_FUZZED(2.7)), bvec2(false, false))).y, false, false, true)), (bool(bvec4(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(vec4(injectionSwitch.y, sqrt(0.0), 0.0, 0.0))), false, false, true))) || false)) || false), false), bvec2(bvec2(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x)) > injectionSwitch.y, false, _GLF_IDENTITY(false, (false) && true), true)), (bool(bvec4(injectionSwitch.x > injectionSwitch.y, false, false, true))) || false), (_GLF_IDENTITY(bool(bvec4(injectionSwitch.x > injectionSwitch.y, false, false, true)), (bool(bvec4(injectionSwitch.x > injectionSwitch.y, false, false, true))) || false)) || false), false), bvec2(bvec4(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec4(injectionSwitch.x > injectionSwitch.y, false, _GLF_IDENTITY(false, (false) && true), true)), (bool(bvec4(injectionSwitch.x > injectionSwitch.y, false, false, true))) || false), (_GLF_IDENTITY(bool(bvec4(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y, injectionSwitch.y)), false, false, true)), (bool(bvec4(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0), false, false, true))) || false)) || false), false), bvec2(bvec3(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec4(injectionSwitch.x > injectionSwitch.y, false, _GLF_IDENTITY(false, (false) && true), true)), (bool(bvec4(injectionSwitch.x > injectionSwitch.y, false, false, true))) || false), (_GLF_IDENTITY(bool(bvec4(injectionSwitch.x > injectionSwitch.y, false, false, true)), (bool(bvec4(injectionSwitch.x > injectionSwitch.y, false, false, true))) || false)) || false), false), false))), false, true)))))), bvec2(bvec4(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec4(injectionSwitch.x > injectionSwitch.y, false, _GLF_IDENTITY(false, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(67.22)), vec2(_GLF_FUZZED(5588.2560), (injectionSwitch)[1]), bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))).x > injectionSwitch.y)) || (false)), _GLF_IDENTITY(true, (true) && true))), (bool(bvec4(_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(0.4, 3.1)))))).x > injectionSwitch.y, false, false, true))) || false), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec4(injectionSwitch.x > injectionSwitch.y, false, false, true)), (bool(bvec4(injectionSwitch.x > injectionSwitch.y, false, false, true))) || false), _GLF_IDENTITY(false, bool(bvec3(false, false, true))) || (_GLF_IDENTITY(bool(bvec4(injectionSwitch.x > injectionSwitch.y, false, false, true)), (bool(bvec4(injectionSwitch.x > injectionSwitch.y, false, false, true))) || false)))) || false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec4(injectionSwitch.x > injectionSwitch.y, false, false, true)), (bool(bvec4(injectionSwitch.x > injectionSwitch.y, false, false, true))) || false), _GLF_IDENTITY(false, bool(bvec3(false, false, true))) || (_GLF_IDENTITY(bool(bvec4(injectionSwitch.x > injectionSwitch.y, false, false, true)), (bool(bvec4(injectionSwitch.x > injectionSwitch.y, false, false, true))) || false)))) || false, ! (! ((_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec4(injectionSwitch.x > injectionSwitch.y, false, false, true)), (bool(bvec4(injectionSwitch.x > injectionSwitch.y, false, false, true))) || false), _GLF_IDENTITY(false, bool(bvec3(false, false, true))) || (_GLF_IDENTITY(bool(bvec4(injectionSwitch.x > injectionSwitch.y, false, false, true)), (bool(bvec4(injectionSwitch.x > injectionSwitch.y, false, false, true))) || false)))) || false)))), true && (! (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec4(injectionSwitch.x > injectionSwitch.y, false, false, true)), (bool(bvec4(injectionSwitch.x > injectionSwitch.y, false, false, true))) || false), _GLF_IDENTITY(false, bool(bvec3(false, false, true))) || (_GLF_IDENTITY(bool(bvec4(injectionSwitch.x > injectionSwitch.y, false, false, true)), (bool(bvec4(injectionSwitch.x > injectionSwitch.y, false, false, true))) || false)))) || false, ! (! ((_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec4(injectionSwitch.x > injectionSwitch.y, false, false, true)), (bool(bvec4(injectionSwitch.x > injectionSwitch.y, false, false, true))) || false), _GLF_IDENTITY(false, bool(bvec3(false, false, true))) || _GLF_IDENTITY((_GLF_IDENTITY(bool(bvec4(injectionSwitch.x > injectionSwitch.y, false, false, true)), (bool(bvec4(injectionSwitch.x > injectionSwitch.y, false, false, true))) || false)), bool(_GLF_IDENTITY(bvec3((_GLF_IDENTITY(bool(bvec4(injectionSwitch.x > injectionSwitch.y, false, false, true)), (bool(bvec4(injectionSwitch.x > injectionSwitch.y, false, false, true))) || false)), _GLF_IDENTITY(true, false || (true)), false), bvec3(bvec4(bvec3((_GLF_IDENTITY(bool(bvec4(injectionSwitch.x > injectionSwitch.y, false, false, true)), (bool(bvec4(injectionSwitch.x > injectionSwitch.y, false, false, true))) || false)), _GLF_IDENTITY(true, false || (true)), false), false))))))) || false))))))))), false), false, false))))))), ((! (_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec4(injectionSwitch.x > injectionSwitch.y, false, false, true)), (bool(bvec4(injectionSwitch.x > injectionSwitch.y, false, false, true))) || false), bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec4(injectionSwitch.x > injectionSwitch.y, false, _GLF_IDENTITY(false, (false) && true), true)), (bool(bvec4(injectionSwitch.x > injectionSwitch.y, false, false, true))) || false), (_GLF_IDENTITY(bool(bvec4(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch)[1], (true ? (injectionSwitch)[1] : _GLF_FUZZED(9.9)))), vec2(_GLF_FUZZED(37.12), _GLF_FUZZED(2.7)), bvec2(false, false))).y, false, false, true)), (bool(bvec4(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(vec4(injectionSwitch.y, sqrt(0.0), 0.0, 0.0))), false, false, true))) || false)) || false), false), bvec2(bvec2(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x)) > injectionSwitch.y, false, _GLF_IDENTITY(false, (false) && true), true)), (bool(bvec4(injectionSwitch.x > injectionSwitch.y, false, false, true))) || false), (_GLF_IDENTITY(bool(bvec4(injectionSwitch.x > injectionSwitch.y, false, false, true)), (bool(bvec4(injectionSwitch.x > injectionSwitch.y, false, false, true))) || false)) || false), false), bvec2(bvec4(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec4(injectionSwitch.x > injectionSwitch.y, false, _GLF_IDENTITY(false, (false) && true), true)), (bool(bvec4(injectionSwitch.x > injectionSwitch.y, false, false, true))) || false), (_GLF_IDENTITY(bool(bvec4(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y, injectionSwitch.y)), false, false, true)), (bool(bvec4(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0), false, false, true))) || false)) || false), false), bvec2(bvec3(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec4(injectionSwitch.x > injectionSwitch.y, false, _GLF_IDENTITY(false, (false) && true), true)), (bool(bvec4(injectionSwitch.x > injectionSwitch.y, false, false, true))) || false), (_GLF_IDENTITY(bool(bvec4(injectionSwitch.x > injectionSwitch.y, false, false, true)), (bool(bvec4(injectionSwitch.x > injectionSwitch.y, false, false, true))) || false)) || false), false), false))), false, true)))))), bvec2(bvec4(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec4(injectionSwitch.x > injectionSwitch.y, false, _GLF_IDENTITY(false, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(67.22)), vec2(_GLF_FUZZED(5588.2560), (injectionSwitch)[1]), bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))).x > injectionSwitch.y)) || (false)), _GLF_IDENTITY(true, (true) && true))), (bool(bvec4(_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(0.4, 3.1)))))).x > injectionSwitch.y, false, false, true))) || false), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec4(injectionSwitch.x > injectionSwitch.y, false, false, true)), (bool(bvec4(injectionSwitch.x > injectionSwitch.y, false, false, true))) || false), _GLF_IDENTITY(false, bool(bvec3(false, false, true))) || (_GLF_IDENTITY(bool(bvec4(injectionSwitch.x > injectionSwitch.y, false, false, true)), (bool(bvec4(injectionSwitch.x > injectionSwitch.y, false, false, true))) || false)))) || false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec4(injectionSwitch.x > injectionSwitch.y, false, false, true)), (bool(bvec4(injectionSwitch.x > injectionSwitch.y, false, false, true))) || false), _GLF_IDENTITY(false, bool(bvec3(false, false, true))) || (_GLF_IDENTITY(bool(bvec4(injectionSwitch.x > injectionSwitch.y, false, false, true)), (bool(bvec4(injectionSwitch.x > injectionSwitch.y, false, false, true))) || false)))) || false, ! (! ((_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec4(injectionSwitch.x > injectionSwitch.y, false, false, true)), (bool(bvec4(injectionSwitch.x > injectionSwitch.y, false, false, true))) || false), _GLF_IDENTITY(false, bool(bvec3(false, false, true))) || (_GLF_IDENTITY(bool(bvec4(injectionSwitch.x > injectionSwitch.y, false, false, true)), (bool(bvec4(injectionSwitch.x > injectionSwitch.y, false, false, true))) || false)))) || false)))), true && (! (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec4(injectionSwitch.x > injectionSwitch.y, false, false, true)), (bool(bvec4(injectionSwitch.x > injectionSwitch.y, false, false, true))) || false), _GLF_IDENTITY(false, bool(bvec3(false, false, true))) || (_GLF_IDENTITY(bool(bvec4(injectionSwitch.x > injectionSwitch.y, false, false, true)), (bool(bvec4(injectionSwitch.x > injectionSwitch.y, false, false, true))) || false)))) || false, ! (! ((_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec4(injectionSwitch.x > injectionSwitch.y, false, false, true)), (bool(bvec4(injectionSwitch.x > injectionSwitch.y, false, false, true))) || false), _GLF_IDENTITY(false, bool(bvec3(false, false, true))) || _GLF_IDENTITY((_GLF_IDENTITY(bool(bvec4(injectionSwitch.x > injectionSwitch.y, false, false, true)), (bool(bvec4(injectionSwitch.x > injectionSwitch.y, false, false, true))) || false)), bool(_GLF_IDENTITY(bvec3((_GLF_IDENTITY(bool(bvec4(injectionSwitch.x > injectionSwitch.y, false, false, true)), (bool(bvec4(injectionSwitch.x > injectionSwitch.y, false, false, true))) || false)), _GLF_IDENTITY(true, false || (true)), false), bvec3(bvec4(bvec3((_GLF_IDENTITY(bool(bvec4(injectionSwitch.x > injectionSwitch.y, false, false, true)), (bool(bvec4(injectionSwitch.x > injectionSwitch.y, false, false, true))) || false)), _GLF_IDENTITY(true, false || (true)), false), false))))))) || false))))))))), false), false, false)))))))) && true), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true)))))))))))
      {
       for(int _injected_loop_counter = ((0 >> _GLF_IDENTITY(_GLF_IDENTITY(int(4), min(int(4), _GLF_IDENTITY(int(4), min(int(4), int(_GLF_IDENTITY(4, 0 ^ (4))))))), int(4))) >> _GLF_IDENTITY(int(7), int(7))); _GLF_WRAPPED_LOOP(_injected_loop_counter < ((1 << _GLF_IDENTITY(_GLF_IDENTITY(int(2), int(2)), 0 ^ (_GLF_IDENTITY(int(2), int(2))))) >> _GLF_IDENTITY(int(2), int(2)))); _injected_loop_counter ++)
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) || false)) && true)))
            barrier();
           barrier();
          }
        }
       if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
        {
         return;
        }
       else
        {
        }
      }
    }
   else
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   do
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_WRAPPED_IF_TRUE(true))
      {
       do
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if(_GLF_WRAPPED_IF_TRUE(true))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            break;
           atomicStore(buf[_GLF_IDENTITY(next_virtual_gid, (next_virtual_gid) / (_GLF_IDENTITY(1u, min(1u, _GLF_IDENTITY(1u, uint(uvec2(1u, 1u))))) ^ 0u))], _GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(read_1, min(read_1, _GLF_IDENTITY(read_1, max(read_1, _GLF_IDENTITY(read_1, uint(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(read_1, 0u | (read_1)), (1u & 1u), 0u), (uvec3(read_1, (1u & 1u), 0u)) | (uvec3(read_1, (1u & 1u), 0u))))))))) + _GLF_IDENTITY(1, clamp(1, 1, 1)) == read_2), _GLF_IDENTITY((uint(_GLF_IDENTITY(read_1, min(read_1, _GLF_IDENTITY(read_1, max(read_1, read_1)))) + 1 == read_2)) | (uint(_GLF_IDENTITY(read_1, min(read_1, _GLF_IDENTITY(read_1, max(read_1, read_1)))) + 1 == read_2)), (_GLF_IDENTITY((uint(_GLF_IDENTITY(read_1, min(read_1, _GLF_IDENTITY(read_1, max(read_1, _GLF_IDENTITY(read_1, 0u ^ (read_1)))))) + 1 == read_2)) | (uint(_GLF_IDENTITY(read_1, min(read_1, _GLF_IDENTITY(read_1, max(read_1, read_1)))) + 1 == read_2)), (_GLF_IDENTITY(_GLF_IDENTITY((uint(_GLF_IDENTITY(read_1, min(read_1, _GLF_IDENTITY(read_1, max(read_1, read_1)))) + 1 == read_2)) | (uint(_GLF_IDENTITY(read_1, min(read_1, _GLF_IDENTITY(read_1, max(read_1, read_1)))) + 1 == read_2)), max((uint(_GLF_IDENTITY(read_1, min(read_1, _GLF_IDENTITY(read_1, max(read_1, read_1)))) + 1 == read_2)) | (uint(_GLF_IDENTITY(read_1, min(read_1, _GLF_IDENTITY(read_1, max(read_1, read_1)))) + 1 == read_2)), (uint(_GLF_IDENTITY(read_1, min(read_1, _GLF_IDENTITY(read_1, max(read_1, read_1)))) + 1 == read_2)) | (uint(_GLF_IDENTITY(read_1, min(read_1, _GLF_IDENTITY(read_1, max(read_1, read_1)))) + 1 == read_2)))), (1u | 1u) * (_GLF_IDENTITY((uint(_GLF_IDENTITY(read_1, min(read_1, _GLF_IDENTITY(read_1, max(read_1, read_1)))) + 1 == read_2)) | (uint(_GLF_IDENTITY(read_1, min(read_1, _GLF_IDENTITY(read_1, max(read_1, read_1)))) + 1 == read_2)), max((uint(_GLF_IDENTITY(read_1, min(read_1, _GLF_IDENTITY(read_1, max(read_1, read_1)))) + 1 == read_2)) | (uint(_GLF_IDENTITY(read_1, _GLF_IDENTITY(min(read_1, _GLF_IDENTITY(read_1, max(read_1, read_1))), (true ? _GLF_IDENTITY(min(read_1, _GLF_IDENTITY(read_1, max(read_1, read_1))), (min(read_1, _GLF_IDENTITY(read_1, max(read_1, read_1)))) >> 0u) : _GLF_FUZZED(subgroup_size)))) + 1 == read_2)), (uint(_GLF_IDENTITY(read_1, min(read_1, _GLF_IDENTITY(read_1, max(read_1, read_1)))) + 1 == read_2)) | (uint(_GLF_IDENTITY(read_1, min(read_1, _GLF_IDENTITY(read_1, max(read_1, read_1)))) + 1 == read_2))))))) - 0u)) | ((uint(_GLF_IDENTITY(read_1, min(read_1, _GLF_IDENTITY(read_1, max(read_1, read_1)))) + 1 == read_2)) | (uint(_GLF_IDENTITY(_GLF_IDENTITY(read_1, min(read_1, _GLF_IDENTITY(read_1, max(read_1, read_1)))), uint(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(read_1, min(read_1, _GLF_IDENTITY(read_1, max(read_1, read_1)))), 1u, 0u), (uvec3(_GLF_IDENTITY(read_1, min(read_1, _GLF_IDENTITY(read_1, max(read_1, read_1)))), 1u, 0u)) + uvec3(0u, 0u, 0u)))) + 1 == read_2))))) + 1, (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(false, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY(bvec3(false, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec3(bvec4(bvec3(false, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true))))), _GLF_IDENTITY(bvec3(bvec4(bvec3(bvec3(_GLF_IDENTITY(bvec3(false, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec3(bvec4(bvec3(false, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true))))), false)), bvec3(bvec3(bvec3(bvec4(bvec3(bvec3(_GLF_IDENTITY(bvec3(false, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec3(bvec4(bvec3(false, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true))))), false)))))))), bool(bvec3(bool(bvec3(false, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), _GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > injectionSwitch.y)), false)))) ? _GLF_FUZZED(workgroup_id) : _GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(read_1, _GLF_IDENTITY(min(read_1, _GLF_IDENTITY(read_1, _GLF_IDENTITY(max(read_1, read_1), (max(read_1, read_1)) >> uint(_GLF_ZERO(0.0, injectionSwitch.x))))), (_GLF_IDENTITY(min(read_1, _GLF_IDENTITY(read_1, max(read_1, read_1))), (min(read_1, _GLF_IDENTITY(read_1, max(read_1, read_1)))) << 0u)) ^ 0u)) + 1 == read_2), (uint(_GLF_IDENTITY(read_1, min(read_1, _GLF_IDENTITY(read_1, max(read_1, read_1)))) + _GLF_IDENTITY(1, (1) + 0) == read_2)) | (uint(_GLF_IDENTITY(read_1, min(read_1, _GLF_IDENTITY(read_1, max(read_1, read_1)))) + _GLF_IDENTITY(1, clamp(1, 1, 1)) == _GLF_IDENTITY(read_2, (_GLF_IDENTITY(read_2, (_GLF_IDENTITY(read_2, (read_2) ^ 0u)) | (read_2))) >> (0u >> _GLF_IDENTITY(uint(2u), _GLF_IDENTITY(uint(2u), (uint(2u)) | (_GLF_IDENTITY(uint(2u), ~ (~ (uint(2u)))))))))))) + 1, _GLF_IDENTITY(uint(uvec2(_GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_IDENTITY(read_1, (0u << _GLF_IDENTITY(uint(4u), uint(4u))) ^ (read_1)), min(read_1, _GLF_IDENTITY(_GLF_IDENTITY(read_1, _GLF_IDENTITY(max(read_1, read_1), clamp(max(read_1, read_1), max(read_1, read_1), max(read_1, read_1)))), min(_GLF_IDENTITY(_GLF_IDENTITY(read_1, _GLF_IDENTITY(max(read_1, read_1), clamp(max(read_1, read_1), max(read_1, read_1), max(read_1, read_1)))), uint(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (_GLF_IDENTITY(read_1, _GLF_IDENTITY(max(read_1, read_1), clamp(max(read_1, read_1), max(read_1, read_1), max(read_1, read_1)))))), _GLF_IDENTITY(_GLF_IDENTITY(read_1, _GLF_IDENTITY(max(read_1, read_1), clamp(max(read_1, read_1), max(read_1, read_1), max(read_1, read_1)))), max(_GLF_IDENTITY(read_1, _GLF_IDENTITY(max(read_1, read_1), clamp(max(read_1, read_1), max(read_1, read_1), max(read_1, read_1)))), _GLF_IDENTITY(_GLF_IDENTITY(read_1, _GLF_IDENTITY(max(read_1, read_1), clamp(max(read_1, read_1), max(read_1, read_1), max(read_1, read_1)))), min(_GLF_IDENTITY(read_1, _GLF_IDENTITY(max(read_1, read_1), clamp(max(read_1, read_1), max(read_1, read_1), max(read_1, read_1)))), _GLF_IDENTITY(read_1, _GLF_IDENTITY(max(read_1, read_1), clamp(max(read_1, read_1), max(read_1, read_1), max(read_1, read_1)))))))))))) + 1 == read_2), (uint(_GLF_IDENTITY(read_1, min(read_1, _GLF_IDENTITY(read_1, _GLF_IDENTITY(max(read_1, read_1), 0u ^ (max(read_1, read_1)))))) + _GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) - 0)) | (_GLF_IDENTITY(_GLF_IDENTITY(1, clamp(1, 1, 1)), ~ (~ (_GLF_IDENTITY(1, clamp(1, 1, 1))))))) == read_2)) | _GLF_IDENTITY((uint(_GLF_IDENTITY(read_1, min(read_1, _GLF_IDENTITY(read_1, max(read_1, read_1)))) + 1 == read_2)), min((uint(_GLF_IDENTITY(read_1, min(read_1, _GLF_IDENTITY(read_1, max(read_1, read_1)))) + 1 == read_2)), (uint(_GLF_IDENTITY(read_1, min(read_1, _GLF_IDENTITY(read_1, max(read_1, read_1)))) + 1 == read_2))))) + 1, 1u)), clamp(uint(uvec2(_GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(read_1, min(read_1, _GLF_IDENTITY(read_1, max(read_1, read_1)))) + 1 == _GLF_IDENTITY(read_2, (read_2) ^ 0u)), (uint(_GLF_IDENTITY(read_1, min(read_1, _GLF_IDENTITY(read_1, max(read_1, read_1)))) + 1 == read_2)) | (uint(_GLF_IDENTITY(read_1, min(read_1, _GLF_IDENTITY(read_1, max(read_1, read_1)))) + 1 == read_2))) + 1, (_GLF_IDENTITY(uint(_GLF_IDENTITY(read_1, min(read_1, _GLF_IDENTITY(read_1, max(read_1, read_1)))) + 1 == read_2), (uint(_GLF_IDENTITY(read_1, min(read_1, _GLF_IDENTITY(read_1, max(read_1, read_1)))) + _GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) ^ 0)) << 0) == read_2)) | (uint(_GLF_IDENTITY(read_1, min(read_1, _GLF_IDENTITY(read_1, max(read_1, read_1)))) + 1 == read_2))) + 1) / 1u), 1u)), uint(uvec2(_GLF_IDENTITY(uint(_GLF_IDENTITY(read_1, min(read_1, _GLF_IDENTITY(read_1, max(read_1, read_1)))) + _GLF_IDENTITY(1, int(ivec3(1, 1, int(_GLF_ONE(1.0, injectionSwitch.y))))) == read_2), (uint(_GLF_IDENTITY(read_1, min(read_1, _GLF_IDENTITY(read_1, max(read_1, read_1)))) + 1 == _GLF_IDENTITY(read_2, uint(uvec3(_GLF_IDENTITY(read_2, ~ (~ (read_2))), 1u, 0u))))) | (uint(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(read_1, min(read_1, _GLF_IDENTITY(read_1, max(read_1, read_1)))), ~ (~ (_GLF_IDENTITY(read_1, min(read_1, _GLF_IDENTITY(read_1, max(read_1, read_1))))))), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(read_1, min(read_1, _GLF_IDENTITY(read_1, max(read_1, read_1)))), ~ (~ (_GLF_IDENTITY(read_1, min(read_1, _GLF_IDENTITY(read_1, max(read_1, read_1))))))), (_GLF_IDENTITY(_GLF_IDENTITY(read_1, min(read_1, _GLF_IDENTITY(read_1, max(read_1, read_1)))), ~ (~ (_GLF_IDENTITY(read_1, min(read_1, _GLF_IDENTITY(read_1, max(read_1, read_1)))))))) | 0u)))) + 1 == read_2))) + 1, 1u)), uint(uvec2(_GLF_IDENTITY(uint(_GLF_IDENTITY(read_1, min(read_1, _GLF_IDENTITY(read_1, max(read_1, read_1)))) + 1 == _GLF_IDENTITY(read_2, (read_2) | (_GLF_IDENTITY(read_2, 0u | (read_2))))), (uint(_GLF_IDENTITY(read_1, min(read_1, _GLF_IDENTITY(read_1, max(read_1, read_1)))) + 1 == read_2)) | _GLF_IDENTITY((uint(_GLF_IDENTITY(read_1, min(read_1, _GLF_IDENTITY(read_1, max(read_1, read_1)))) + 1 == read_2)), ((uint(_GLF_IDENTITY(read_1, min(read_1, _GLF_IDENTITY(read_1, max(read_1, read_1)))) + 1 == read_2))) | 0u)) + 1, 1u))))))), 4, 64, 4);
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_DEAD(false))
            continue;
           for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < (_GLF_IDENTITY(0, (0) / 1) | int(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat2x3(injectionSwitch, 0.0, 0.0, 0.0, 0.0), (false ? _GLF_FUZZED(mat2x3(-1.3, 2.9, 7.3, 3160.5074, -73.27, 55.64)) : mat2x3(injectionSwitch, 0.0, 0.0, 0.0, 0.0))))).y)))); _injected_loop_counter ++)
            {
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              {
               if(_GLF_DEAD(false))
                continue;
               barrier();
              }
             if(_GLF_DEAD(false))
              barrier();
             if(_GLF_DEAD(false))
              barrier();
             if(_GLF_DEAD(false))
              {
               if(_GLF_DEAD(false))
                {
                 for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
                  {
                   return;
                  }
                 if(_GLF_DEAD(false))
                  return;
                }
               if(_GLF_WRAPPED_IF_FALSE(false))
                {
                }
               else
                {
                 if(_GLF_DEAD(false))
                  {
                   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))))))
                    barrier();
                   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y))))))
                    barrier();
                   continue;
                  }
                 if(_GLF_DEAD(false))
                  {
                   if(_GLF_DEAD(false))
                    break;
                   barrier();
                  }
                 barrier();
                 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, _GLF_IDENTITY(_GLF_IDENTITY(true, ! (! (true))), ! (! (true))), false)))))
                  break;
                }
              }
            }
           if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(bool(bvec4(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (! (bool(bvec4(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))
            {
             if(_GLF_DEAD(false))
              return;
             break;
             if(_GLF_DEAD(false))
              barrier();
            }
           if(_GLF_DEAD(false))
            continue;
          }
         else
          {
           if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! _GLF_IDENTITY((! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))))), (_GLF_IDENTITY((! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))))), ((! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y))))))) || false)) && true)))))), (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))), ! (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! _GLF_IDENTITY((! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(! (! ((injectionSwitch.x > injectionSwitch.y))), false || (! (! ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec3(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(injectionSwitch.x > injectionSwitch.y, true))), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))))))), (_GLF_IDENTITY((! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))))), ((! (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).x > injectionSwitch.y), ! (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(_GLF_IDENTITY(bool((injectionSwitch.x > injectionSwitch.y)), (bool((injectionSwitch.x > injectionSwitch.y))) && true))))))))) || false)) && true))))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))).y))), _GLF_IDENTITY((_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && true, ! (! ((_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && true)))))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))))))))), false || (bool(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))))), ! (! (bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (_GLF_IDENTITY(! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (_GLF_IDENTITY(! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bool(bvec2(! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false)))) && true))), bool(bvec3(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) || false)))), (_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(mix(vec2(-5.6, -4946.0485), injectionSwitch, bvec2(true, true))))).x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), false, true)))), false || (bool(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x)) > injectionSwitch.y))), ! (! (! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)).x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y))))))))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))), true && (_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (_GLF_IDENTITY(! (_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, true, true, false)), ! (! (bool(bvec4(false, true, true, false)))))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(tan(injectionSwitch)) : injectionSwitch)).y)))), (_GLF_IDENTITY(! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bool(bvec2(! (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false))), false)))) && true))), bool(bvec3(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) || false)))), (_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(_GLF_IDENTITY(mix(vec2(-5.6, -4946.0485), injectionSwitch, bvec2(true, true)), mat2(1.0) * (mix(vec2(-5.6, -4946.0485), injectionSwitch, bvec2(true, true))))))).x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), false, true)))), false || (bool(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, (false) || false), (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED((+ -154.926))), float(injectionSwitch.x), bool(true))) > injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(0.0 + (injectionSwitch.x), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(10.60) : 0.0 + (injectionSwitch.x)))) > injectionSwitch.y))), ! (! (! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)).x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y))))))))), _GLF_IDENTITY(! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), (_GLF_IDENTITY(! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), ! (! (! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))))) || false)))))))))))))
            {
             if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec4(false, true, true, false))), (injectionSwitch.x > injectionSwitch.y))))
              {
               if(_GLF_DEAD(false))
                {
                 do
                  {
                   barrier();
                  }
                 while(_GLF_WRAPPED_LOOP(false));
                }
               continue;
              }
             if(_GLF_DEAD(false))
              continue;
             if(_GLF_DEAD(false))
              barrier();
             if(_GLF_DEAD(false))
              break;
             if(_GLF_DEAD(false))
              barrier();
             barrier();
            }
           for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
            {
             if(_GLF_DEAD(false))
              barrier();
            }
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(false, _GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x, min(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x, _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x)) > injectionSwitch.y)), true, false))), (_GLF_IDENTITY(false, bool(bvec4(false, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(mat3x2(injectionSwitch, 1.0, 1.0, determinant(mat3(1.0, 0.0, 0.0, 0.0, determinant(mat2(1.0, 1.0, 0.0, 1.0)), 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 1.0)), 1.0))).x > injectionSwitch.y)), true, false)))) || false)))
              {
               if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false))))
                barrier();
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                {
                 if(_GLF_DEAD(false))
                  barrier();
                 continue;
                }
               if(_GLF_DEAD(false))
                barrier();
               barrier();
              }
             barrier();
            }
          }
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          {
           if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))
            break;
           barrier();
          }
        }
       while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-42.33), _GLF_FUZZED(-20.88)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))).y, (injectionSwitch.y) * 1.0)))));
      }
     else
      {
      }
    }
   while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(bool(bvec4((injectionSwitch.x > injectionSwitch.y), _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(_GLF_ONE(1.0, injectionSwitch.y))).y)), false, false)), ! (! (bool(bvec4((_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0) > injectionSwitch.y), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, false)))))))));
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y)))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), false || (_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))).y), true && ((injectionSwitch.x > injectionSwitch.y)))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))
  barrier();
}
