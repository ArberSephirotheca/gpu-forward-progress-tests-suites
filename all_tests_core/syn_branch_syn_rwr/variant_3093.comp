#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), ! (! (_GLF_WRAPPED_IF_FALSE(false)))))
    {
    }
   else
    {
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
      }
     else
      {
       for(int _injected_loop_counter = 1; _GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter != 0), true && (_GLF_WRAPPED_LOOP(_injected_loop_counter != 0))); _injected_loop_counter --)
        {
         if(_GLF_DEAD(false))
          continue;
         return;
        }
      }
    }
  }
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_WRAPPED_IF_FALSE(false))
  {
  }
 else
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     if(_GLF_DEAD(false))
      return;
    }
   else
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), _GLF_IDENTITY(bool(bvec2(_GLF_WRAPPED_IF_TRUE(true), true)), (_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec2(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, (_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), (! (true)) && true)))) && _GLF_IDENTITY(true, false || (true)))), true)), (bool(bvec2(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, (true) && _GLF_IDENTITY(true, _GLF_IDENTITY(false, bool(bvec2(false, false))) || (true)))), true))) && true), ! (! (bool(bvec2(_GLF_WRAPPED_IF_TRUE(true), _GLF_IDENTITY(true, (true) || false))))))) || false)))
    {
     if(_GLF_WRAPPED_IF_TRUE(true))
      {
       if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x)) < injectionSwitch.y))))
        {
         do
          {
           for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _GLF_IDENTITY(_injected_loop_counter ++, (_injected_loop_counter ++) / 1))
            {
             if(_GLF_DEAD(false))
              {
               for(int _injected_loop_counter = ((0 << _GLF_IDENTITY(int(0), int(0))) >> _GLF_IDENTITY(int(5), int(5))); _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter < (1 ^ int(_GLF_ZERO(0.0, injectionSwitch.x))), false || (_GLF_IDENTITY(_injected_loop_counter < (1 ^ int(_GLF_ZERO(0.0, injectionSwitch.x))), true && (_injected_loop_counter < (1 ^ int(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x)))))))); _injected_loop_counter ++)
                {
                 do
                  {
                   return;
                  }
                 while(_GLF_WRAPPED_LOOP(false));
                 if(_GLF_DEAD(false))
                  continue;
                }
              }
            }
          }
         while(_GLF_WRAPPED_LOOP(false));
        }
       else
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            return;
           return;
          }
         if(_GLF_DEAD(false))
          return;
        }
       if(_GLF_DEAD(false))
        return;
      }
     else
      {
      }
    }
   else
    {
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))), bool(bvec4(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))), true, false, true))))
  {
   if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, (true) && true)))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_WRAPPED_IF_FALSE(false))
        {
        }
       else
        {
         return;
        }
      }
    }
   else
    {
    }
   return;
   if(_GLF_DEAD(false))
    return;
  }
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / _GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)))) > injectionSwitch.y), bool(bvec3(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / _GLF_ONE(1.0, injectionSwitch.y)) > injectionSwitch.y), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY((injectionSwitch.x) / _GLF_IDENTITY(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y))), _GLF_IDENTITY(float(vec3(_GLF_ONE(1.0, injectionSwitch.y), 0.0, sqrt(abs(0.0)))), clamp(_GLF_IDENTITY(float(vec3(_GLF_ONE(1.0, injectionSwitch.y), 0.0, sqrt(abs(0.0)))), min(float(_GLF_IDENTITY(vec3(_GLF_ONE(1.0, injectionSwitch.y), 0.0, sqrt(abs(0.0))), min(vec3(_GLF_ONE(1.0, injectionSwitch.y), 0.0, sqrt(abs(0.0))), vec3(_GLF_ONE(1.0, injectionSwitch.y), 0.0, sqrt(abs(0.0)))))), float(vec3(_GLF_ONE(1.0, injectionSwitch.y), 0.0, sqrt(abs(0.0)))))), _GLF_IDENTITY(float(vec3(_GLF_ONE(1.0, injectionSwitch.y), 0.0, sqrt(abs(0.0)))), min(float(vec3(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), (_GLF_ONE(1.0, injectionSwitch.y)) - 0.0), 0.0, sqrt(abs(0.0)))), float(vec3(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), max(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y))), 0.0, sqrt(abs(0.0)))))), float(vec3(_GLF_ONE(1.0, injectionSwitch.y), 0.0, sqrt(abs(0.0))))))), max((injectionSwitch.x) / _GLF_ONE(1.0, injectionSwitch.y), (injectionSwitch.x) / _GLF_ONE(1.0, injectionSwitch.y)))) > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y), ((_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / _GLF_ONE(1.0, injectionSwitch.y)) > injectionSwitch.y)) && true)), bool(bvec2(_GLF_IDENTITY(bool(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY((injectionSwitch.x) / _GLF_IDENTITY(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y))), _GLF_IDENTITY(float(vec3(_GLF_ONE(1.0, injectionSwitch.y), 0.0, sqrt(abs(0.0)))), clamp(_GLF_IDENTITY(float(vec3(_GLF_ONE(1.0, injectionSwitch.y), 0.0, sqrt(abs(0.0)))), min(float(_GLF_IDENTITY(vec3(_GLF_ONE(1.0, injectionSwitch.y), 0.0, sqrt(abs(0.0))), min(vec3(_GLF_ONE(1.0, injectionSwitch.y), 0.0, sqrt(abs(0.0))), vec3(_GLF_ONE(1.0, injectionSwitch.y), 0.0, sqrt(abs(0.0)))))), float(vec3(_GLF_ONE(1.0, injectionSwitch.y), 0.0, sqrt(abs(0.0)))))), _GLF_IDENTITY(float(vec3(_GLF_ONE(1.0, injectionSwitch.y), 0.0, sqrt(abs(0.0)))), min(float(vec3(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), (_GLF_ONE(1.0, injectionSwitch.y)) - 0.0), 0.0, sqrt(abs(0.0)))), float(vec3(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), max(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y))), 0.0, sqrt(abs(0.0)))))), float(vec3(_GLF_ONE(1.0, injectionSwitch.y), 0.0, sqrt(abs(0.0))))))), max((injectionSwitch.x) / _GLF_ONE(1.0, injectionSwitch.y), (injectionSwitch.x) / _GLF_ONE(1.0, injectionSwitch.y)))) > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y), ((_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / _GLF_ONE(1.0, injectionSwitch.y)) > injectionSwitch.y)) && true)), ! (! (bool(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY((injectionSwitch.x) / _GLF_IDENTITY(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y))), _GLF_IDENTITY(float(vec3(_GLF_ONE(1.0, injectionSwitch.y), 0.0, sqrt(abs(0.0)))), clamp(_GLF_IDENTITY(float(vec3(_GLF_ONE(1.0, injectionSwitch.y), 0.0, sqrt(abs(0.0)))), min(float(_GLF_IDENTITY(vec3(_GLF_ONE(1.0, injectionSwitch.y), 0.0, sqrt(abs(0.0))), min(vec3(_GLF_ONE(1.0, injectionSwitch.y), 0.0, sqrt(abs(0.0))), vec3(_GLF_ONE(1.0, injectionSwitch.y), 0.0, sqrt(abs(0.0)))))), float(vec3(_GLF_ONE(1.0, injectionSwitch.y), 0.0, sqrt(abs(0.0)))))), _GLF_IDENTITY(float(vec3(_GLF_ONE(1.0, injectionSwitch.y), 0.0, sqrt(abs(0.0)))), min(float(vec3(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), (_GLF_ONE(1.0, injectionSwitch.y)) - 0.0), 0.0, sqrt(abs(0.0)))), float(vec3(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), max(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y))), 0.0, sqrt(abs(0.0)))))), float(vec3(_GLF_ONE(1.0, injectionSwitch.y), 0.0, sqrt(abs(0.0))))))), max((injectionSwitch.x) / _GLF_ONE(1.0, injectionSwitch.y), (injectionSwitch.x) / _GLF_ONE(1.0, injectionSwitch.y)))) > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y), ((_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / _GLF_ONE(1.0, injectionSwitch.y)) > injectionSwitch.y)) && true))))), false))))), _GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), true && (! (injectionSwitch.x > injectionSwitch.y))))), ! (! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)).y)))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || false))), _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - _GLF_IDENTITY(vec2(0.0, 0.0), clamp(vec2(0.0, 0.0), vec2(0.0, 0.0), vec2(0.0, 0.0)))).y))))))), bool(bvec4((injectionSwitch.x > injectionSwitch.y), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, false))))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   for(int _injected_loop_counter = int(_GLF_ONE(1.0, injectionSwitch.y)); _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter > (_GLF_IDENTITY(0 | (0 | 0), (false ? _GLF_FUZZED(floatBitsToInt(-3.7)) : 0 | (0 | 0)))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_injected_loop_counter > (_GLF_IDENTITY(0 | (0 | 0), (false ? _GLF_FUZZED(_GLF_IDENTITY(floatBitsToInt(-3.7), clamp(floatBitsToInt(-3.7), _GLF_IDENTITY(floatBitsToInt(-3.7), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(_injected_loop_counter) : floatBitsToInt(-3.7))), floatBitsToInt(-3.7)))) : 0 | (0 | 0))))))); _GLF_IDENTITY(_injected_loop_counter --, (_GLF_IDENTITY(false ? _GLF_FUZZED(-5914) : _injected_loop_counter --, (false ? _GLF_FUZZED(-5914) : _injected_loop_counter --) ^ 0))))
    {
     return;
     if(_GLF_DEAD(false))
      break;
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(fma(5.2, -7.7, -7364.3693)) : injectionSwitch.y)), true && (injectionSwitch.x > injectionSwitch.y))))))
      return;
    }
   for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != (_GLF_IDENTITY((1 << _GLF_IDENTITY(int(5), int(5))), _GLF_IDENTITY(((1 << _GLF_IDENTITY(int(5), int(5)))), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(((1 << _GLF_IDENTITY(int(5), int(5)))), _GLF_IDENTITY(int(_GLF_IDENTITY(ivec3(((1 << _GLF_IDENTITY(int(5), int(5)))), 1, 0), ~ (~ (ivec3(((1 << _GLF_IDENTITY(int(5), int(5)))), 1, 0))))), clamp(int(_GLF_IDENTITY(ivec3(((1 << _GLF_IDENTITY(int(5), int(5)))), 1, 0), ~ (~ (ivec3(((1 << _GLF_IDENTITY(int(5), int(5)))), 1, 0))))), int(_GLF_IDENTITY(ivec3(((1 << _GLF_IDENTITY(int(5), int(5)))), 1, 0), ~ (~ (ivec3(((1 << _GLF_IDENTITY(int(5), int(5)))), 1, 0))))), int(_GLF_IDENTITY(ivec3(((1 << _GLF_IDENTITY(int(5), int(5)))), 1, 0), ~ (~ (ivec3(((1 << _GLF_IDENTITY(int(5), int(5)))), 1, 0)))))))), max(_GLF_IDENTITY(((1 << _GLF_IDENTITY(int(5), int(5)))), _GLF_IDENTITY(int(_GLF_IDENTITY(ivec3(((1 << _GLF_IDENTITY(int(5), int(5)))), 1, 0), ~ (~ (ivec3(((1 << _GLF_IDENTITY(int(5), int(5)))), 1, 0))))), clamp(int(_GLF_IDENTITY(ivec3(((1 << _GLF_IDENTITY(int(5), int(5)))), 1, 0), ~ (~ (ivec3(((1 << _GLF_IDENTITY(int(5), int(5)))), 1, 0))))), int(_GLF_IDENTITY(ivec3(((1 << _GLF_IDENTITY(int(5), int(5)))), 1, 0), ~ (~ (ivec3(((1 << _GLF_IDENTITY(int(5), int(5)))), 1, 0))))), int(_GLF_IDENTITY(ivec3(((1 << _GLF_IDENTITY(int(5), int(5)))), 1, 0), ~ (~ (ivec3(((1 << _GLF_IDENTITY(int(5), int(5)))), 1, 0)))))))), _GLF_IDENTITY(((1 << _GLF_IDENTITY(int(5), int(5)))), _GLF_IDENTITY(int(_GLF_IDENTITY(ivec3(((1 << _GLF_IDENTITY(int(5), int(5)))), 1, 0), ~ (~ (ivec3(((1 << _GLF_IDENTITY(int(5), int(5)))), 1, 0))))), clamp(int(_GLF_IDENTITY(ivec3(((1 << _GLF_IDENTITY(int(5), int(5)))), 1, 0), ~ (~ (ivec3(((1 << _GLF_IDENTITY(int(5), int(5)))), 1, 0))))), int(_GLF_IDENTITY(ivec3(((1 << _GLF_IDENTITY(int(5), int(5)))), 1, 0), ~ (~ (ivec3(((1 << _GLF_IDENTITY(int(5), int(5)))), 1, 0))))), int(_GLF_IDENTITY(ivec3(((1 << _GLF_IDENTITY(int(5), int(5)))), 1, 0), ~ (~ (ivec3(((1 << _GLF_IDENTITY(int(5), int(5)))), 1, 0))))))))))), max((_GLF_IDENTITY(_GLF_IDENTITY(((1 << _GLF_IDENTITY(int(5), int(5)))), _GLF_IDENTITY(int(_GLF_IDENTITY(ivec3(((1 << _GLF_IDENTITY(int(5), int(5)))), 1, 0), ~ (~ (ivec3(((1 << _GLF_IDENTITY(int(5), int(5)))), 1, 0))))), clamp(int(_GLF_IDENTITY(ivec3(((1 << _GLF_IDENTITY(int(5), int(5)))), 1, 0), ~ (~ (ivec3(((1 << _GLF_IDENTITY(int(5), int(5)))), 1, 0))))), int(_GLF_IDENTITY(ivec3(((1 << _GLF_IDENTITY(int(5), int(5)))), 1, 0), ~ (~ (ivec3(((1 << _GLF_IDENTITY(int(5), int(5)))), 1, 0))))), int(_GLF_IDENTITY(ivec3(((1 << _GLF_IDENTITY(int(5), int(5)))), 1, 0), ~ (~ (ivec3(((1 << _GLF_IDENTITY(int(5), int(5)))), 1, 0)))))))), max(_GLF_IDENTITY(((1 << _GLF_IDENTITY(int(5), int(5)))), _GLF_IDENTITY(int(_GLF_IDENTITY(ivec3(((1 << _GLF_IDENTITY(int(5), int(5)))), 1, 0), ~ (~ (ivec3(((1 << _GLF_IDENTITY(int(5), int(5)))), 1, 0))))), clamp(int(_GLF_IDENTITY(ivec3(((1 << _GLF_IDENTITY(int(5), int(5)))), 1, 0), ~ (~ (ivec3(((1 << _GLF_IDENTITY(int(5), int(5)))), 1, 0))))), int(_GLF_IDENTITY(ivec3(((1 << _GLF_IDENTITY(int(5), int(5)))), 1, 0), ~ (~ (ivec3(((1 << _GLF_IDENTITY(int(5), int(5)))), 1, 0))))), int(_GLF_IDENTITY(ivec3(((1 << _GLF_IDENTITY(int(5), int(5)))), 1, 0), ~ (~ (ivec3(((1 << _GLF_IDENTITY(int(5), int(5)))), 1, 0)))))))), _GLF_IDENTITY(((1 << _GLF_IDENTITY(int(5), int(5)))), _GLF_IDENTITY(int(_GLF_IDENTITY(ivec3(((1 << _GLF_IDENTITY(int(5), int(5)))), 1, 0), ~ (~ (ivec3(((1 << _GLF_IDENTITY(int(5), int(5)))), 1, 0))))), clamp(int(_GLF_IDENTITY(ivec3(((1 << _GLF_IDENTITY(int(5), int(5)))), 1, 0), ~ (~ (ivec3(((1 << _GLF_IDENTITY(int(5), int(5)))), 1, 0))))), int(_GLF_IDENTITY(ivec3(((1 << _GLF_IDENTITY(int(5), int(5)))), 1, 0), ~ (~ (ivec3(((1 << _GLF_IDENTITY(int(5), int(5)))), 1, 0))))), int(_GLF_IDENTITY(ivec3(((1 << _GLF_IDENTITY(int(5), int(5)))), 1, 0), ~ (~ (ivec3(((1 << _GLF_IDENTITY(int(5), int(5)))), 1, 0))))))))))), (_GLF_IDENTITY(_GLF_IDENTITY(((1 << _GLF_IDENTITY(int(5), int(5)))), _GLF_IDENTITY(int(_GLF_IDENTITY(ivec3(((1 << _GLF_IDENTITY(int(5), int(5)))), 1, 0), ~ (~ (ivec3(((1 << _GLF_IDENTITY(int(5), int(5)))), 1, 0))))), clamp(int(_GLF_IDENTITY(ivec3(((1 << _GLF_IDENTITY(int(5), int(5)))), 1, 0), ~ (~ (ivec3(((1 << _GLF_IDENTITY(int(5), int(5)))), 1, 0))))), int(_GLF_IDENTITY(ivec3(((1 << _GLF_IDENTITY(int(5), int(5)))), 1, 0), ~ (~ (ivec3(((1 << _GLF_IDENTITY(int(5), int(5)))), 1, 0))))), int(_GLF_IDENTITY(ivec3(((1 << _GLF_IDENTITY(int(5), int(5)))), 1, 0), ~ (~ (ivec3(((1 << _GLF_IDENTITY(int(5), int(5)))), 1, 0)))))))), max(_GLF_IDENTITY(((1 << _GLF_IDENTITY(int(5), int(5)))), _GLF_IDENTITY(int(_GLF_IDENTITY(ivec3(((1 << _GLF_IDENTITY(int(5), int(5)))), 1, 0), ~ (~ (ivec3(((1 << _GLF_IDENTITY(int(5), int(5)))), 1, 0))))), clamp(int(_GLF_IDENTITY(ivec3(((1 << _GLF_IDENTITY(int(5), int(5)))), 1, 0), ~ (~ (ivec3(((1 << _GLF_IDENTITY(int(5), int(5)))), 1, 0))))), int(_GLF_IDENTITY(ivec3(((1 << _GLF_IDENTITY(int(5), int(5)))), 1, 0), ~ (~ (ivec3(((1 << _GLF_IDENTITY(int(5), int(5)))), 1, 0))))), int(_GLF_IDENTITY(ivec3(((1 << _GLF_IDENTITY(int(5), int(5)))), 1, 0), ~ (~ (ivec3(((1 << _GLF_IDENTITY(int(5), int(5)))), 1, 0)))))))), _GLF_IDENTITY(((1 << _GLF_IDENTITY(int(5), int(5)))), _GLF_IDENTITY(int(_GLF_IDENTITY(ivec3(((1 << _GLF_IDENTITY(int(5), int(5)))), 1, 0), ~ (~ (ivec3(((1 << _GLF_IDENTITY(int(5), int(5)))), 1, 0))))), clamp(int(_GLF_IDENTITY(ivec3(((1 << _GLF_IDENTITY(int(5), int(5)))), 1, 0), ~ (~ (ivec3(((1 << _GLF_IDENTITY(int(5), int(5)))), 1, 0))))), int(_GLF_IDENTITY(ivec3(((1 << _GLF_IDENTITY(int(5), int(5)))), 1, 0), ~ (~ (ivec3(((1 << _GLF_IDENTITY(int(5), int(5)))), 1, 0))))), int(_GLF_IDENTITY(ivec3(((1 << _GLF_IDENTITY(int(5), int(5)))), 1, 0), ~ (~ (ivec3(((1 << _GLF_IDENTITY(int(5), int(5)))), 1, 0))))))))))))) >> 0) << _GLF_IDENTITY(0, (0) | (_GLF_IDENTITY(0, (0) * 1)))) >> _GLF_IDENTITY(int(5), _GLF_IDENTITY(int(5), ~ (~ (int(_GLF_IDENTITY(5, (_GLF_IDENTITY(5, int(ivec4(_GLF_IDENTITY(_GLF_IDENTITY(5, (5) / 1), _GLF_IDENTITY((5), ((5)) / 1) ^ _GLF_IDENTITY(0, max(0, 0))), 1, 1, 0)))) | 0)))))))); _injected_loop_counter ++)
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
        {
         return;
        }
      }
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
      }
     else
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)))).y))))
        return;
      }
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
  }
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_WRAPPED_IF_TRUE(true))
  {
   do
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))), bool(bvec2(_GLF_DEAD(_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), ! (! ((! (false))))))), true))))
        return;
       break;
       if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
        return;
      }
     if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch)))) - _GLF_IDENTITY(vec2(_GLF_IDENTITY(0.0, mix(float(_GLF_IDENTITY(_GLF_IDENTITY(0.0, max(0.0, _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(-6736.3631) : 0.0)))), min(_GLF_IDENTITY(0.0, max(0.0, _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(-6736.3631) : 0.0)))), _GLF_IDENTITY(_GLF_IDENTITY(0.0, max(0.0, _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(-6736.3631) : 0.0)))), max(_GLF_IDENTITY(_GLF_IDENTITY(0.0, max(0.0, _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(-6736.3631) : 0.0)))), float(vec4(_GLF_IDENTITY(0.0, max(0.0, _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(-6736.3631) : 0.0)))), 0.0, 1.0, 1.0))), _GLF_IDENTITY(0.0, max(0.0, _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(-6736.3631) : 0.0))))))))), float(_GLF_FUZZED(-27.13)), bool(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(-6.0)))), true && ((injectionSwitch.x > injectionSwitch.y))))))), _GLF_IDENTITY(0.0, max(0.0, 0.0))), (vec2(_GLF_IDENTITY(0.0, mix(float(_GLF_IDENTITY(_GLF_IDENTITY(0.0, max(0.0, _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(-6736.3631) : 0.0)))), min(_GLF_IDENTITY(_GLF_IDENTITY(0.0, (0.0) - 0.0), max(0.0, _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(-6736.3631) : 0.0)))), _GLF_IDENTITY(_GLF_IDENTITY(0.0, max(0.0, _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(-6736.3631) : 0.0)))), max(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(0.0, max(0.0, _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(-6736.3631) : 0.0)))), max(_GLF_IDENTITY(0.0, max(0.0, _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(-6736.3631) : 0.0)))), _GLF_IDENTITY(0.0, max(0.0, _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(-6736.3631) : 0.0)))))), float(vec4(_GLF_IDENTITY(0.0, max(0.0, _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(-6736.3631) : 0.0)))), 0.0, 1.0, 1.0))), _GLF_IDENTITY(0.0, max(0.0, _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(-6736.3631) : 0.0))))))))), _GLF_IDENTITY(float(_GLF_FUZZED(-27.13)), float(mat3x4(float(_GLF_FUZZED(-27.13)), 0.0, round(length(normalize(1.0))), 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0))), bool(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(-6.0)))), true && ((injectionSwitch.x > injectionSwitch.y))))))), _GLF_IDENTITY(_GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0 + (_GLF_IDENTITY(0.0, max(0.0, 0.0)))))) / vec2(1.0, 1.0))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], min(injectionSwitch[0], injectionSwitch[0])), injectionSwitch[1])), mat2(1.0) * (injectionSwitch)))).x > injectionSwitch.y), true && ((_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch)))) - vec2(_GLF_IDENTITY(0.0, mix(float(_GLF_IDENTITY(0.0, max(0.0, _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(-6736.3631) : 0.0))))), float(_GLF_FUZZED(_GLF_IDENTITY(-27.13, max(_GLF_IDENTITY(-27.13, min(-27.13, -27.13)), -27.13)))), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), _GLF_IDENTITY(0.0, max(0.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)))))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-7.9), _GLF_FUZZED(-6.4)), vec2(_GLF_IDENTITY((injectionSwitch)[0], mix(float(_GLF_FUZZED(-8442.4752)), float((injectionSwitch)[0]), bool(true))), (injectionSwitch)[_GLF_IDENTITY(1, (1) | 0)]), bvec2(true, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + 0.0) < injectionSwitch.y)))))[0], min(injectionSwitch[0], injectionSwitch[0])), injectionSwitch[1])), mat2(1.0) * (injectionSwitch)))).x > injectionSwitch.y))))))
      {
      }
     else
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          continue;
         if(_GLF_DEAD(false))
          continue;
         if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / _GLF_ONE(1.0, injectionSwitch.y)) > injectionSwitch.y))))
          break;
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            return;
           return;
          }
         if(_GLF_DEAD(false))
          continue;
         return;
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            break;
           if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(mat2(injectionSwitch, 0.0, determinant(mat2(0.0, 1.0, 0.0, 0.0))))).x > injectionSwitch.y))))
            continue;
           if(_GLF_DEAD(false))
            break;
           continue;
          }
        }
      }
     if(_GLF_DEAD(false))
      break;
    }
   while(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(false), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(false), ! (_GLF_IDENTITY(! (_GLF_WRAPPED_LOOP(false)), (! (_GLF_WRAPPED_LOOP(false))) && true))), false), _GLF_IDENTITY(_GLF_IDENTITY(bvec2(bvec4(bvec2(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(false), ! (! (_GLF_WRAPPED_LOOP(false)))), false), true, false)), bvec2(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(bvec2(bvec4(bvec2(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(false), ! (! (_GLF_WRAPPED_LOOP(false)))), false), true, false)), bvec2(bvec4(bvec2(bvec4(bvec2(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(false), ! (! (_GLF_WRAPPED_LOOP(false)))), false), true, false)), false, true)))), bvec2(bvec2(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(bvec2(bvec4(bvec2(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(false), ! (! (_GLF_WRAPPED_LOOP(false)))), false), true, false)), bvec2(bvec4(bvec2(bvec4(bvec2(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(false), ! (! (_GLF_WRAPPED_LOOP(false)))), false), true, false)), false, true)))), bvec2(bvec4(bvec2(_GLF_IDENTITY(bvec2(bvec4(bvec2(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(false), ! (! (_GLF_WRAPPED_LOOP(false)))), false), true, false)), bvec2(bvec4(bvec2(bvec4(bvec2(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(false), ! (! (_GLF_WRAPPED_LOOP(false)))), false), true, false)), false, true)))), false, false)))))))), bvec2(bvec3(bvec2(bvec4(bvec2(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(false), _GLF_IDENTITY(! (! (_GLF_WRAPPED_LOOP(false))), false || (! (! (_GLF_WRAPPED_LOOP(false)))))), _GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, (false) && true)))), true, false)), true)))))), (_GLF_WRAPPED_LOOP(false)) || _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-9023.5948), (injectionSwitch)[1]), vec2((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(_GLF_ONE(1.0, injectionSwitch.y))))[0], _GLF_FUZZED(-6.1)), bvec2(true, _GLF_IDENTITY(false, ! (! (false)))))).y, injectionSwitch.y)), bool(bool(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-9023.5948), (injectionSwitch)[1]), vec2((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(_GLF_ONE(1.0, injectionSwitch.y))))[0], _GLF_FUZZED(-6.1)), bvec2(true, _GLF_IDENTITY(false, ! (! (false)))))).y, injectionSwitch.y)))))))));
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 else
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
  }
 do
  {
   if(_GLF_DEAD(false))
    break;
   do
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(_GLF_IDENTITY(mat4(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-7485.1101), _GLF_FUZZED(305.889)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(_GLF_IDENTITY(true, bool(bool(true))), true))), 0.0, 1.0, determinant(mat3(determinant(mat2(1.0, 1.0, 0.0, 1.0)), 0.0, 0.0, 1.0, round(length(normalize(1.0))), 0.0, 1.0, 0.0, 1.0)), 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 0.0, cos(0.0), cos(0.0), 0.0, 0.0, _GLF_IDENTITY(dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(0.0, 1.0, 0.0, 0.0)), dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(0.0, 1.0, 0.0, 0.0))), _GLF_ZERO(0.0, injectionSwitch.x), 0.0), (mat4(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-7485.1101), _GLF_FUZZED(305.889)), vec2((injectionSwitch)[0], (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(vec3(injectionSwitch, 1.0)), mix(vec2((vec2(vec3(injectionSwitch, 1.0)))[0], _GLF_FUZZED(-91.64)), vec2(_GLF_FUZZED((false ? 757.253 : -1149.8142)), (vec2(vec3(injectionSwitch, 1.0)))[1]), bvec2(false, true)))))[1]), bvec2(true, true))), 0.0, 1.0, determinant(mat3(determinant(mat2(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(703.647)), float(1.0), bool(true))), 1.0, 0.0, 1.0)), 0.0, 0.0, 1.0, _GLF_IDENTITY(round(length(normalize(1.0))), (round(length(normalize(1.0)))) / 1.0), 0.0, 1.0, 0.0, 1.0)), 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 0.0, cos(0.0), cos(0.0), 0.0, 0.0, _GLF_IDENTITY(dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(0.0, 1.0, 0.0, 0.0)), dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(0.0, 1.0, 0.0, 0.0))), _GLF_ZERO(0.0, injectionSwitch.x), 0.0)) * mat4(1.0)), transpose(_GLF_IDENTITY(transpose(_GLF_IDENTITY(_GLF_IDENTITY(mat4(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-7485.1101), _GLF_FUZZED(305.889)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))), 0.0, 1.0, determinant(mat3(determinant(mat2(1.0, 1.0, 0.0, 1.0)), 0.0, 0.0, 1.0, round(length(normalize(1.0))), 0.0, 1.0, 0.0, 1.0)), 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 0.0, cos(0.0), cos(0.0), 0.0, 0.0, _GLF_IDENTITY(dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(0.0, 1.0, 0.0, 0.0)), dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(0.0, 1.0, 0.0, 0.0))), _GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, 1.0 * (injectionSwitch.x))), 0.0), (mat4(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-7485.1101), _GLF_FUZZED(305.889)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))), 0.0, 1.0, determinant(mat3(determinant(mat2(1.0, 1.0, 0.0, 1.0)), 0.0, 0.0, 1.0, round(length(normalize(1.0))), 0.0, 1.0, 0.0, 1.0)), _GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, clamp(1.0, _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(436.350) : 1.0)), 1.0)), 1.0)), _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 0.0, cos(0.0), cos(0.0), 0.0, 0.0, _GLF_IDENTITY(dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(0.0, 1.0, 0.0, 0.0)), dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(0.0, 1.0, 0.0, 0.0))), _GLF_ZERO(0.0, injectionSwitch.x), 0.0)) * mat4(1.0)), transpose(transpose(_GLF_IDENTITY(_GLF_IDENTITY(mat4(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-7485.1101), _GLF_FUZZED(305.889)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))), max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-7485.1101), _GLF_FUZZED(305.889)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))), mat2(1.0) * (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-7485.1101), _GLF_FUZZED(305.889)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))))), _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-7485.1101), _GLF_FUZZED(305.889)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))))), 0.0, 1.0, determinant(mat3(determinant(mat2(1.0, 1.0, 0.0, 1.0)), 0.0, 0.0, 1.0, round(length(normalize(1.0))), 0.0, 1.0, 0.0, 1.0)), 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 0.0, cos(0.0), cos(0.0), 0.0, 0.0, _GLF_IDENTITY(dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(0.0, 1.0, 0.0, 0.0)), dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(0.0, 1.0, 0.0, 0.0))), _GLF_ZERO(0.0, injectionSwitch.x), 0.0), (_GLF_IDENTITY(mat4(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-7485.1101), _GLF_FUZZED(305.889)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))), max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-7485.1101), _GLF_FUZZED(305.889)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))), mat2(1.0) * (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-7485.1101), _GLF_FUZZED(305.889)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))))), _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-7485.1101), _GLF_FUZZED(305.889)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))))), 0.0, 1.0, determinant(mat3(determinant(mat2(1.0, 1.0, 0.0, 1.0)), 0.0, 0.0, 1.0, round(length(normalize(1.0))), 0.0, 1.0, 0.0, 1.0)), 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 0.0, cos(0.0), cos(0.0), 0.0, 0.0, _GLF_IDENTITY(dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(0.0, 1.0, 0.0, 0.0)), dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(0.0, 1.0, 0.0, 0.0))), _GLF_ZERO(0.0, injectionSwitch.x), 0.0), (mat4(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-7485.1101), _GLF_FUZZED(305.889)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))), max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-7485.1101), _GLF_FUZZED(305.889)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))), mat2(1.0) * (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-7485.1101), _GLF_FUZZED(305.889)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))))), _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-7485.1101), _GLF_FUZZED(305.889)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))))), 0.0, 1.0, determinant(mat3(determinant(mat2(1.0, 1.0, 0.0, 1.0)), 0.0, 0.0, 1.0, round(length(normalize(1.0))), 0.0, 1.0, 0.0, 1.0)), 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 0.0, cos(0.0), cos(0.0), 0.0, 0.0, _GLF_IDENTITY(dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(0.0, 1.0, 0.0, 0.0)), dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(0.0, 1.0, 0.0, 0.0))), _GLF_ZERO(0.0, injectionSwitch.x), 0.0)) / mat4(1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0))) + mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)), (mat4(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-7485.1101), _GLF_FUZZED(305.889)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))), 0.0, 1.0, determinant(mat3(determinant(mat2(1.0, 1.0, 0.0, 1.0)), 0.0, 0.0, 1.0, round(length(normalize(1.0))), 0.0, 1.0, 0.0, 1.0)), 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 0.0, cos(0.0), cos(0.0), 0.0, 0.0, _GLF_IDENTITY(dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(0.0, 1.0, 0.0, 0.0)), dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(0.0, 1.0, 0.0, 0.0))), _GLF_ZERO(0.0, injectionSwitch.x), 0.0)) * mat4(1.0)))))), mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0) + (transpose(_GLF_IDENTITY(_GLF_IDENTITY(mat4(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-7485.1101), _GLF_FUZZED(305.889)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))), 0.0, 1.0, determinant(mat3(determinant(mat2(1.0, 1.0, 0.0, 1.0)), 0.0, 0.0, 1.0, round(length(normalize(1.0))), 0.0, 1.0, 0.0, 1.0)), 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 0.0, cos(0.0), cos(0.0), 0.0, 0.0, _GLF_IDENTITY(dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(0.0, 1.0, 0.0, 0.0)), dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(0.0, 1.0, 0.0, 0.0))), _GLF_ZERO(0.0, injectionSwitch.x), 0.0), (mat4(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-7485.1101), _GLF_FUZZED(305.889)), vec2((_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))[0], (injectionSwitch)[1]), bvec2(true, true))), 0.0, 1.0, determinant(mat3(determinant(mat2(1.0, 1.0, 0.0, 1.0)), 0.0, 0.0, 1.0, round(length(_GLF_IDENTITY(normalize(1.0), (true ? normalize(1.0) : _GLF_FUZZED(9.8))))), 0.0, 1.0, 0.0, 1.0)), 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 0.0, cos(0.0), cos(0.0), 0.0, 0.0, _GLF_IDENTITY(dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(0.0, 1.0, 0.0, 0.0)), dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(0.0, 1.0, 0.0, 0.0))), _GLF_ZERO(0.0, injectionSwitch.x), 0.0)) * mat4(1.0)), transpose(transpose(_GLF_IDENTITY(mat4(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-7485.1101), _GLF_FUZZED(305.889)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))), 0.0, 1.0, determinant(mat3(determinant(mat2(1.0, 1.0, 0.0, 1.0)), 0.0, 0.0, 1.0, round(length(normalize(1.0))), 0.0, 1.0, 0.0, 1.0)), 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 0.0, cos(0.0), cos(0.0), 0.0, 0.0, _GLF_IDENTITY(dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(0.0, 1.0, 0.0, 0.0)), dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(0.0, 1.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0))), _GLF_ZERO(0.0, injectionSwitch.x), 0.0), (mat4(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-7485.1101), _GLF_FUZZED(305.889)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))), 0.0, 1.0, determinant(mat3(determinant(mat2(1.0, 1.0, 0.0, 1.0)), 0.0, 0.0, 1.0, round(length(normalize(1.0))), 0.0, 1.0, 0.0, 1.0)), 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 0.0, cos(0.0), cos(0.0), 0.0, 0.0, _GLF_IDENTITY(_GLF_IDENTITY(dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(0.0, 1.0, 0.0, 0.0)), 1.0 * (dot(vec4(0.0, _GLF_IDENTITY(1.0, (1.0) - _GLF_ZERO(0.0, injectionSwitch.x)), 0.0, 0.0), vec4(0.0, 1.0, 0.0, 0.0)))), dot(vec4(_GLF_IDENTITY(0.0, min(0.0, 0.0)), 1.0, 0.0, 0.0), vec4(0.0, 1.0, 0.0, 0.0))), _GLF_ZERO(0.0, injectionSwitch.x), 0.0)) * mat4(1.0)))))))))))).x > injectionSwitch.y))))
      break;
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! _GLF_IDENTITY(_GLF_IDENTITY((! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), bool(bvec2(false, true)))), ((_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), bool(bvec2(false, true))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), (_GLF_IDENTITY((! (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), _GLF_IDENTITY(bool(bvec2(false, true)), false || (bool(bvec2(false, true))))))), true && (_GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), bool(bvec2(false, true)))), ! (! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), bool(bvec2(false, true)))), ! (! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), _GLF_IDENTITY(bool(bvec2(false, true)), bool(_GLF_IDENTITY(bvec3(bool(bvec2(false, true)), false, false), bvec3(bvec3(_GLF_IDENTITY(bvec3(bool(bvec2(false, true)), false, false), bvec3(bvec4(bvec3(bool(bvec2(false, true)), false, false), false)))))))))), ! (! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), bool(bvec2(false, true)))))))))))))), (_GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), bool(bvec2(false, true)))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), bool(bvec2(false, true)))), ! (! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), bool(bvec2(false, true)))), ! (! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), bool(bvec2(false, true))))))))))), _GLF_IDENTITY(bool(bool(! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), bool(bvec2(false, true)))), ! (! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), bool(bvec2(false, true)))), ! (! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), bool(bvec2(false, true))))))))))))), (bool(bool(! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), bool(bvec2(false, true)))), ! (! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), bool(bvec2(false, true)))), ! (! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), bool(bvec2(false, true)))))))))))))) && true))))), ((_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), bool(bvec2(false, true)))), ! (! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), bool(bvec2(false, true)))), ! (! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), bool(bvec2(false, true)))), ! (! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), bool(bvec2(false, true))))))))))))))) && true)) && true)))) && true), bool(bvec2(_GLF_IDENTITY((! (_GLF_IDENTITY(_GLF_IDENTITY(false, ! _GLF_IDENTITY((_GLF_IDENTITY(! (false), (! (false)) && true)), ! (_GLF_IDENTITY(! ((! (false))), bool(bvec2(_GLF_IDENTITY(! _GLF_IDENTITY(((! (false))), bool(bvec4(_GLF_IDENTITY(((! (false))), bool(bvec2(_GLF_IDENTITY(((! (false))), ! (! (((! (false)))))), _GLF_IDENTITY(false, ! (! (false)))))), true, false, true))), ! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(! (! _GLF_IDENTITY((_GLF_IDENTITY((! (false)), ! (! (_GLF_IDENTITY((! (false)), _GLF_IDENTITY(bool(bool((! (false)))), false || (bool(bool((! (false))))))))))), true && ((_GLF_IDENTITY((! (false)), ! (! (_GLF_IDENTITY((! (false)), _GLF_IDENTITY(bool(bool((! (false)))), false || (bool(bool((_GLF_IDENTITY(! (false), true && (! (false)))))))))))))))), false || (! (! _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY((! (false)), ! (! (_GLF_IDENTITY(_GLF_IDENTITY((! (false)), _GLF_IDENTITY(bool(bool((! (false)))), false || (bool(bool((! (false))))))), (_GLF_IDENTITY((! (false)), _GLF_IDENTITY(bool(bool((! (false)))), false || (bool(bool((! (false)))))))) && true))))), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY((_GLF_IDENTITY((! (false)), ! (! (_GLF_IDENTITY(_GLF_IDENTITY((! (false)), _GLF_IDENTITY(bool(bool((! (false)))), false || (bool(bool((! (false))))))), (_GLF_IDENTITY((! (false)), _GLF_IDENTITY(bool(bool((! (false)))), false || (bool(bool((! (false)))))))) && true))))), bool(bool((_GLF_IDENTITY((! (false)), ! (! (_GLF_IDENTITY(_GLF_IDENTITY((! (false)), _GLF_IDENTITY(bool(bool((! (false)))), false || (bool(bool((! (false))))))), (_GLF_IDENTITY((! (false)), _GLF_IDENTITY(bool(bool((! (false)))), false || (bool(bool((! (false)))))))) && true)))))))))), true && (_GLF_IDENTITY(bool(bool(_GLF_IDENTITY((_GLF_IDENTITY((! (false)), ! (! (_GLF_IDENTITY(_GLF_IDENTITY((! (false)), _GLF_IDENTITY(bool(bool((! (false)))), false || (bool(bool((! (false))))))), (_GLF_IDENTITY((! (false)), _GLF_IDENTITY(bool(bool((! (false)))), false || (bool(bool((! (false)))))))) && true))))), bool(bool((_GLF_IDENTITY((! (false)), ! (! (_GLF_IDENTITY(_GLF_IDENTITY((! (false)), _GLF_IDENTITY(bool(bool((! (false)))), false || (bool(bool((! (false))))))), (_GLF_IDENTITY((! (false)), _GLF_IDENTITY(bool(bool((! (false)))), false || (bool(bool((! (false)))))))) && true)))))))))), bool(bvec2(bool(bool(_GLF_IDENTITY((_GLF_IDENTITY((! (false)), ! (! (_GLF_IDENTITY(_GLF_IDENTITY((! (false)), _GLF_IDENTITY(bool(bool((! (false)))), false || (bool(bool((! (false))))))), (_GLF_IDENTITY((! (false)), _GLF_IDENTITY(bool(bool((! (false)))), false || (bool(bool((! (false)))))))) && true))))), bool(bool((_GLF_IDENTITY((! (false)), ! (! (_GLF_IDENTITY(_GLF_IDENTITY((! (false)), _GLF_IDENTITY(bool(bool((! (false)))), false || (bool(bool((! (false))))))), (_GLF_IDENTITY((! (false)), _GLF_IDENTITY(bool(bool((! (false)))), false || (bool(bool((! (false)))))))) && true)))))))))), false)))))), true && ((_GLF_IDENTITY((! (false)), ! (! (_GLF_IDENTITY((! (false)), _GLF_IDENTITY(_GLF_IDENTITY(bool(bool((! (false)))), ! (! (bool(bool((! (false))))))), false || (bool(bool((_GLF_IDENTITY(! (false), true && (! (false)))))))))))))))))), bool(_GLF_IDENTITY(bool(! (! _GLF_IDENTITY((_GLF_IDENTITY((! (_GLF_IDENTITY(false, bool(bvec4(false, false, true, true))))), ! (! (_GLF_IDENTITY((! (false)), _GLF_IDENTITY(bool(bool((! (false)))), false || (bool(bool((! (false))))))))))), true && ((_GLF_IDENTITY((! (false)), ! (! _GLF_IDENTITY((_GLF_IDENTITY((! (false)), _GLF_IDENTITY(bool(bool((! (false)))), false || (bool(bool((_GLF_IDENTITY(! (false), true && (! (false)))))))))), ((_GLF_IDENTITY((! (false)), _GLF_IDENTITY(bool(bool((! (false)))), false || (bool(bool((_GLF_IDENTITY(! (false), true && (! (false))))))))))) && true)))))))), ! (! (bool(! (! _GLF_IDENTITY((_GLF_IDENTITY((! (false)), ! (! (_GLF_IDENTITY((! (false)), _GLF_IDENTITY(bool(bool((! (false)))), false || (bool(bool((! (false))))))))))), true && ((_GLF_IDENTITY((! (false)), ! (! (_GLF_IDENTITY((! (false)), _GLF_IDENTITY(bool(bool((! (_GLF_IDENTITY(false, (false) && true))))), false || (bool(bool(_GLF_IDENTITY((_GLF_IDENTITY(! (false), true && (! (false)))), ((_GLF_IDENTITY(! (false), true && (! (false))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))))))))))))))))), false || ((! (! _GLF_IDENTITY((_GLF_IDENTITY((! (false)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY((! (false)), _GLF_IDENTITY(bool(bool((! (false)))), false || (bool(bool(_GLF_IDENTITY((! (false)), ((! (false))) && true)))))), ! (! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(! (false), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(! (false), false, false), bvec3(_GLF_IDENTITY(bvec3(bvec3(! (false), false, false)), bvec3(bvec4(bvec3(bvec3(! (false), false, false)), false)))))), false || (_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(! (false), false, false), bvec3(_GLF_IDENTITY(bvec3(bvec3(! (false), false, false)), bvec3(bvec4(bvec3(bvec3(! (false), false, false)), false)))))), true && (bool(_GLF_IDENTITY(bvec3(! (false), false, false), bvec3(_GLF_IDENTITY(bvec3(bvec3(! (false), false, false)), bvec3(bvec4(bvec3(bvec3(! (false), false, false)), false)))))))))))), _GLF_IDENTITY(bool(bool((! (false)))), false || (bool(bool(_GLF_IDENTITY((! (false)), ! (! ((! (false)))))))))), false || (_GLF_IDENTITY((! (false)), _GLF_IDENTITY(bool(bool((! (false)))), false || (bool(bool((! (false)))))))))), ! (! (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY((! (false)), _GLF_IDENTITY(bool(bool((! (false)))), false || (bool(bool(_GLF_IDENTITY((! (false)), ! (! ((! (false)))))))))), false || (_GLF_IDENTITY((! (false)), _GLF_IDENTITY(bool(bool((! (false)))), false || (bool(bool((! (false)))))))))), ! (! ((_GLF_IDENTITY(_GLF_IDENTITY((! (false)), _GLF_IDENTITY(bool(bool((! (false)))), false || (bool(bool(_GLF_IDENTITY(_GLF_IDENTITY((! (false)), ! (! ((! (false))))), ! (! (_GLF_IDENTITY((! (false)), ! (! ((! (false))))))))))))), false || (_GLF_IDENTITY((! (false)), _GLF_IDENTITY(bool(bool((! (false)))), false || (bool(bool((! (false))))))))))))))))))), ! (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY((! (false)), _GLF_IDENTITY(bool(bool((! (false)))), false || (bool(bool((! (false))))))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY((! (false)), _GLF_IDENTITY(bool(bool((! (false)))), false || (bool(bool((! (false))))))), false || (_GLF_IDENTITY((! (false)), _GLF_IDENTITY(bool(bool((! _GLF_IDENTITY((false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && ((false)))))), false || (bool(bool((! (false))))))))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (! (_GLF_IDENTITY(_GLF_IDENTITY((! (false)), _GLF_IDENTITY(bool(bool((! (false)))), false || (bool(bool((! (false))))))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY((! (false)), _GLF_IDENTITY(bool(bool((! (false)))), false || _GLF_IDENTITY((bool(bool((! (false))))), _GLF_IDENTITY(true, bool(bool(true))) && ((bool(bool((! (false))))))))), false || (_GLF_IDENTITY((! (false)), _GLF_IDENTITY(bool(bool((! (false)))), false || (bool(bool((! (false)))))))))))))))), _GLF_IDENTITY(bool(bvec3(! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY((! (false)), _GLF_IDENTITY(bool(bool((! (false)))), false || (bool(bool((! (false))))))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY((! (false)), _GLF_IDENTITY(bool(bool((! (false)))), false || (bool(bool((! (false))))))), false || (_GLF_IDENTITY((! (false)), _GLF_IDENTITY(bool(bool((! _GLF_IDENTITY((false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && ((false)))))), false || (bool(bool((! (false))))))))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (! (_GLF_IDENTITY(_GLF_IDENTITY((! (false)), _GLF_IDENTITY(bool(bool((! (false)))), false || (bool(bool((! (false))))))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY((! (false)), _GLF_IDENTITY(bool(bool((! (false)))), false || _GLF_IDENTITY((bool(bool((! (false))))), _GLF_IDENTITY(true, bool(bool(true))) && ((bool(bool((! (false))))))))), false || (_GLF_IDENTITY((! (false)), _GLF_IDENTITY(bool(bool((! (false)))), false || (bool(bool((! (false)))))))))))))))), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), ! (! (bool(bvec3(! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY((! (false)), _GLF_IDENTITY(bool(bool((! (false)))), false || (bool(bool((! (false))))))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY((! (false)), _GLF_IDENTITY(bool(bool((! (false)))), false || (bool(bool((! (false))))))), false || (_GLF_IDENTITY((! (false)), _GLF_IDENTITY(bool(bool((! _GLF_IDENTITY((false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && ((false)))))), false || (bool(bool((! (false))))))))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (! (_GLF_IDENTITY(_GLF_IDENTITY((! (false)), _GLF_IDENTITY(bool(bool((! (false)))), false || (bool(bool((! (false))))))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY((! (false)), _GLF_IDENTITY(bool(bool((! (false)))), false || _GLF_IDENTITY((bool(bool((! (false))))), _GLF_IDENTITY(true, bool(bool(true))) && ((bool(bool((! (false))))))))), false || (_GLF_IDENTITY((! (false)), _GLF_IDENTITY(bool(bool((! (false)))), false || (bool(bool((! (false)))))))))))))))), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))), (_GLF_IDENTITY(! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY((! (false)), _GLF_IDENTITY(_GLF_IDENTITY(bool(bool((! (false)))), false || (bool(bool((! (false)))))), false || (_GLF_IDENTITY(_GLF_IDENTITY(bool(bool((! (false)))), false || (bool(bool((! (false)))))), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bool(bool((! (false)))), false || (bool(bool((! (false)))))), true, true), bvec3(bvec3(bvec3(_GLF_IDENTITY(bool(bool((! (false)))), false || (bool(bool((! (false)))))), true, true))))))))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((! (false)), _GLF_IDENTITY(bool(bool((! (false)))), false || (bool(bool((! (false))))))), false || (_GLF_IDENTITY((! (false)), _GLF_IDENTITY(bool(bool((! (false)))), false || (bool(bool((! (false))))))))), bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((! (false)), _GLF_IDENTITY(bool(bool((! (false)))), false || (bool(bool((! (false))))))), false || (_GLF_IDENTITY((! (false)), _GLF_IDENTITY(bool(bool((! (false)))), false || (bool(bool((! (false))))))))), false || (_GLF_IDENTITY(_GLF_IDENTITY((! (false)), _GLF_IDENTITY(bool(bool((! (false)))), false || (bool(bool((! (false))))))), false || (_GLF_IDENTITY((! (false)), _GLF_IDENTITY(bool(bool((! (false)))), false || (bool(bool((! (false)))))))))))))))))), _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], clamp(injectionSwitch[1], injectionSwitch[1], injectionSwitch[1])))).y)) && (! (_GLF_IDENTITY(_GLF_IDENTITY((! (false)), _GLF_IDENTITY(bool(bool((! (false)))), false || (bool(bool((! _GLF_IDENTITY((false), ! (! (_GLF_IDENTITY((false), ! (! ((false))))))))))))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY((! (false)), _GLF_IDENTITY(bool(bool((! (false)))), false || (bool(bool((! (false))))))), false || (_GLF_IDENTITY((_GLF_IDENTITY(! (false), _GLF_IDENTITY(bool(bvec4(! (false), true, true, true)), ! (! (bool(bvec4(! (false), true, true, true))))))), _GLF_IDENTITY(bool(bool((! (false)))), false || (bool(bool((! (false)))))))))))))))), ! (_GLF_IDENTITY(! (! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY((! (false)), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY((! (false)), ((! (false))) || false))), _GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, false, true, true)), true && (_GLF_IDENTITY(bool(bvec4(false, false, true, true)), ! (! (bool(bvec4(false, false, true, true)))))))) || (bool(bool((! (false))))))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY((! (false)), _GLF_IDENTITY(bool(bool((! (false)))), false || (bool(bool((! (false))))))), false || (_GLF_IDENTITY((! (false)), _GLF_IDENTITY(bool(bool((! (false)))), false || (bool(bool((! (false))))))))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (! (_GLF_IDENTITY(_GLF_IDENTITY((! (false)), _GLF_IDENTITY(bool(bool((! (false)))), false || (bool(bool((! (false))))))), _GLF_IDENTITY(! (! (_GLF_IDENTITY(_GLF_IDENTITY((! (false)), _GLF_IDENTITY(bool(bool((! (false)))), false || (bool(bool((! (false))))))), false || (_GLF_IDENTITY((! (false)), _GLF_IDENTITY(bool(bool((! (false)))), false || (bool(bool((! (false))))))))))), true && (! (! (_GLF_IDENTITY(_GLF_IDENTITY((! (false)), _GLF_IDENTITY(bool(bool((! (false)))), false || (bool(bool((! (false))))))), false || (_GLF_IDENTITY((! (false)), _GLF_IDENTITY(bool(bool((! (false)))), false || (bool(bool((! (false))))))))))))))))))), true && (! (! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((! (false)), _GLF_IDENTITY(bool(bool((! (false)))), false || (bool(bool((! (false))))))), (_GLF_IDENTITY((! (false)), _GLF_IDENTITY(bool(bool((! (false)))), false || (bool(bool((! (false)))))))) || false), ! (! (_GLF_IDENTITY(_GLF_IDENTITY((! (false)), _GLF_IDENTITY(bool(bool((! _GLF_IDENTITY(_GLF_IDENTITY((false), ! (! (_GLF_IDENTITY((false), bool(bool((false))))))), bool(_GLF_IDENTITY(bool((false)), ! (_GLF_IDENTITY(! _GLF_IDENTITY((bool((false))), ((bool((false)))) && true), true && (! (bool((false)))))))))))), false || (bool(bool((! (false))))))), false || (_GLF_IDENTITY((! (false)), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY((! (false)), bool(bvec4((! (false)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_IDENTITY(true, _GLF_IDENTITY((true) || false, true && (_GLF_IDENTITY((true) || false, ((true) || false) || false)))), _GLF_IDENTITY(false, true && (false)))))), ! (_GLF_IDENTITY(! (bool(_GLF_IDENTITY((! (false)), bool(bvec4((! (_GLF_IDENTITY(false, bool(bool(false))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_IDENTITY(true, (true) || false), _GLF_IDENTITY(false, true && (false))))))), (! (bool(_GLF_IDENTITY((! (false)), bool(bvec4((! (false)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_IDENTITY(true, (true) || _GLF_IDENTITY(false, true && (false))), _GLF_IDENTITY(false, true && (false)))))))) && true)))), false || _GLF_IDENTITY((bool(bool((! (false))))), ! (! ((bool(bool((! (false)))))))))))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (! (_GLF_IDENTITY(_GLF_IDENTITY((! (false)), _GLF_IDENTITY(bool(bool((! (false)))), false || (bool(bool((! (false))))))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY((! (false)), _GLF_IDENTITY(bool(bool((! (false)))), false || (bool(bool((! (false))))))), false || (_GLF_IDENTITY((_GLF_IDENTITY(! (false), (! (false)) && true)), _GLF_IDENTITY(bool(bool((! (false)))), false || (bool(bool((! (false)))))))))))))))))))))) && true)))))), true && ((_GLF_IDENTITY((! (false)), ! (! (_GLF_IDENTITY((! (false)), _GLF_IDENTITY(bool(bool((! (false)))), false || (bool(bool((! (false)))))))))))))))))), true)))))), bool(bvec2(false, true))))), ((! (_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), false || _GLF_IDENTITY((! (! (false))), ! (_GLF_IDENTITY(! ((! (! (false)))), ! (! (! ((! (! (false))))))))))), bool(bvec2(false, _GLF_IDENTITY(true, false || (true)))))))) && _GLF_IDENTITY(true, (true) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), _GLF_IDENTITY(false, bool(bvec2(false, false)))))))))
      {
       if(_GLF_DEAD(false))
        break;
       if(_GLF_DEAD(false))
        continue;
       return;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          continue;
         break;
        }
      }
    }
   while(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(false), _GLF_IDENTITY(bool(bvec4(_GLF_WRAPPED_LOOP(false), true, false, _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y))))))), (bool(bvec4(_GLF_WRAPPED_LOOP(false), _GLF_IDENTITY(_GLF_IDENTITY(true, ! (! (true))), bool(bvec3(_GLF_IDENTITY(true, ! (! (true))), _GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, ! (! (false))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, true))), true))), false, _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(_GLF_IDENTITY(false, (false) || false), (injectionSwitch.x > injectionSwitch.y))) || false)))) || false)));
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))), (_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), bool(bvec3(_GLF_IDENTITY(false, true && (false)), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))) && true))
    continue;
  }
 while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, false, false)), _GLF_IDENTITY(bool(bool(bool(bvec3(false, false, false)))), _GLF_IDENTITY(false, true && (false)) || (bool(bool(bool(bvec3(false, false, false))))))))));
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 uint num_workgroup = gl_NumWorkGroups.x;
 uint workgroup_size = gl_WorkGroupSize.x;
 if(_GLF_DEAD(false))
  {
   for(int _injected_loop_counter = _GLF_IDENTITY(1, int(_GLF_IDENTITY(_GLF_IDENTITY(ivec2(_GLF_IDENTITY(1, ~ (~ (1))), 1), (ivec2(_GLF_IDENTITY(1, ~ (~ (1))), 1)) >> (ivec2(0, 0) >> _GLF_IDENTITY(ivec2(6), ivec2(6)))), ivec2(0, 0) ^ (ivec2(_GLF_IDENTITY(1, ~ (~ (1))), 1))))); _GLF_WRAPPED_LOOP(_injected_loop_counter != (0 << _GLF_IDENTITY(int(2), int(2)))); _injected_loop_counter --)
    {
     return;
    }
  }
 uint workgroup_id = gl_WorkGroupID.x;
 uint workgroup_base = workgroup_size * _GLF_IDENTITY(workgroup_id, _GLF_IDENTITY((false ? _GLF_FUZZED(min(num_workgroup, subgroup_local_id)) : workgroup_id), ~ (_GLF_IDENTITY(~ ((false ? _GLF_FUZZED(min(num_workgroup, subgroup_local_id)) : workgroup_id)), uint(uvec2(~ ((false ? _GLF_FUZZED(min(num_workgroup, subgroup_local_id)) : workgroup_id)), 0u))))));
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_WRAPPED_IF_FALSE(false))
  {
   if(_GLF_DEAD(false))
    return;
  }
 else
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)).y))))
    {
     for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
      {
       return;
      }
    }
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_WRAPPED_IF_TRUE(true))
  {
   if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(_GLF_IDENTITY(true, (true) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / abs(vec2(1.0, 1.0))).y))))
    {
     for(int _injected_loop_counter = _GLF_IDENTITY(0, int(ivec2(_GLF_IDENTITY(0, (0) / 1), 0))); _GLF_WRAPPED_LOOP(_injected_loop_counter != (1 | 0)); _injected_loop_counter ++)
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        break;
      }
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (_GLF_IDENTITY(! (false), ! (! (! (false))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)))))))), bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, 1.0 * (injectionSwitch.y)), injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, float(vec3(injectionSwitch.y, 0.0, 0.0))))), bool(bvec2(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, 1.0 * (injectionSwitch.y)), injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, float(vec3(injectionSwitch.y, 0.0, 0.0))))), false))))), bool(_GLF_IDENTITY(bvec3(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, 0.0 + (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)))), injectionSwitch.x, injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(clamp(_GLF_IDENTITY(injectionSwitch.y, 1.0 * (injectionSwitch.y)), injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, float(vec3(injectionSwitch.y, 0.0, _GLF_IDENTITY(_GLF_IDENTITY(0.0, (0.0) * 1.0), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(determinant((-3.4 - mat3(-3.5, _GLF_IDENTITY(-0.0, max(_GLF_IDENTITY(-0.0, (false ? _GLF_FUZZED(-37.51) : _GLF_IDENTITY(-0.0, min(-0.0, -0.0)))), -0.0)), 297.922, -2119.2515, -72.69, -75.75, 1574.2379, -5531.3867, 5.5)))) : 0.0)))))), min(clamp(_GLF_IDENTITY(injectionSwitch.y, 1.0 * (injectionSwitch.y)), injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, float(vec3(injectionSwitch.y, 0.0, _GLF_IDENTITY(_GLF_IDENTITY(0.0, (0.0) * 1.0), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(determinant((-3.4 - mat3(-3.5, _GLF_IDENTITY(-0.0, max(_GLF_IDENTITY(-0.0, (false ? _GLF_FUZZED(-37.51) : _GLF_IDENTITY(-0.0, min(-0.0, -0.0)))), -0.0)), 297.922, -2119.2515, -72.69, -75.75, 1574.2379, -5531.3867, 5.5)))) : 0.0)))))), _GLF_IDENTITY(clamp(_GLF_IDENTITY(injectionSwitch.y, 1.0 * (injectionSwitch.y)), injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, float(vec3(injectionSwitch.y, 0.0, _GLF_IDENTITY(_GLF_IDENTITY(0.0, (0.0) * 1.0), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(determinant((-3.4 - mat3(-3.5, _GLF_IDENTITY(-0.0, max(_GLF_IDENTITY(-0.0, (false ? _GLF_FUZZED(-37.51) : _GLF_IDENTITY(-0.0, min(-0.0, -0.0)))), -0.0)), 297.922, -2119.2515, -72.69, -75.75, 1574.2379, -5531.3867, 5.5)))) : 0.0)))))), (true ? clamp(_GLF_IDENTITY(injectionSwitch.y, 1.0 * (injectionSwitch.y)), injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, float(vec3(injectionSwitch.y, 0.0, _GLF_IDENTITY(_GLF_IDENTITY(0.0, (0.0) * 1.0), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(determinant((-3.4 - mat3(-3.5, _GLF_IDENTITY(-0.0, max(_GLF_IDENTITY(-0.0, (false ? _GLF_FUZZED(-37.51) : _GLF_IDENTITY(-0.0, min(-0.0, -0.0)))), -0.0)), 297.922, -2119.2515, -72.69, -75.75, 1574.2379, -5531.3867, 5.5)))) : 0.0)))))) : _GLF_FUZZED(-4.0)))))))), false, true), bvec3(bvec3(bvec3(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat4(injectionSwitch, 1.0, 0.0, 0.0, _GLF_IDENTITY(1.0, float(mat4(1.0, 0.0, 1.0, 0.0, 0.0, cos(0.0), 1.0, 1.0, 1.0, 0.0, cos(0.0), log(1.0), 1.0, 0.0, 0.0, cos(0.0)))), 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, length(vec4(0.0, 0.0, 0.0, 0.0)), 1.0, 1.0, 0.0)), clamp(vec2(mat4(injectionSwitch, _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, length(vec4(0.0, 0.0, 0.0, 0.0)), 1.0, 1.0, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED((false ? 428.407 : (14.53 + -4.6)))), float(0.0), bool(true))))), vec2(mat4(injectionSwitch, 1.0, 0.0, 0.0, _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, length(vec4(0.0, 0.0, 0.0, 0.0)), 1.0, 1.0, 0.0)), vec2(mat4(injectionSwitch, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, length(vec4(0.0, 0.0, 0.0, 0.0)), 1.0, 1.0, 0.0))))))).y, 1.0 * _GLF_IDENTITY((injectionSwitch.y), mix(float(_GLF_FUZZED(0.7)), float((injectionSwitch.y)), bool(true)))), injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, float(vec3(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-3.9)), float(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(1.5)), float(injectionSwitch.y), bool(true)))), bool(true))), 0.0, 0.0))))))), false, true))))))), bool(_GLF_IDENTITY(bvec3(bool(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, 1.0 * (injectionSwitch.y)), injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, float(vec3(injectionSwitch.y, 0.0, 0.0))))), bool(bvec2(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, 1.0 * (injectionSwitch.y)), injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, float(vec3(injectionSwitch.y, 0.0, 0.0))))), false))))), bool(_GLF_IDENTITY(bvec3(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, 1.0 * (injectionSwitch.y)), injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, float(vec3(injectionSwitch.y, 0.0, _GLF_IDENTITY(_GLF_IDENTITY(0.0, (0.0) * 1.0), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(determinant((-3.4 - mat3(-3.5, _GLF_IDENTITY(_GLF_IDENTITY(-0.0, clamp(-0.0, -0.0, -0.0)), max(_GLF_IDENTITY(-0.0, (false ? _GLF_FUZZED(-37.51) : _GLF_IDENTITY(-0.0, min(-0.0, -0.0)))), -0.0)), 297.922, -2119.2515, -72.69, -75.75, 1574.2379, -5531.3867, 5.5)))) : 0.0, float(mat2x3(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(determinant((-3.4 - mat3(-3.5, _GLF_IDENTITY(_GLF_IDENTITY(-0.0, clamp(-0.0, -0.0, -0.0)), max(_GLF_IDENTITY(-0.0, (false ? _GLF_FUZZED(-37.51) : _GLF_IDENTITY(-0.0, min(-0.0, -0.0)))), -0.0)), 297.922, -2119.2515, -72.69, -75.75, 1574.2379, -5531.3867, 5.5)))) : 0.0, float(mat2x4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(determinant((-3.4 - mat3(-3.5, _GLF_IDENTITY(_GLF_IDENTITY(-0.0, clamp(-0.0, -0.0, -0.0)), max(_GLF_IDENTITY(-0.0, (false ? _GLF_FUZZED(-37.51) : _GLF_IDENTITY(-0.0, min(-0.0, -0.0)))), -0.0)), 297.922, -2119.2515, -72.69, -75.75, 1574.2379, -5531.3867, 5.5)))) : 0.0, _GLF_ZERO(0.0, injectionSwitch.x), abs(1.0), 1.0, 0.0, cos(0.0), 0.0, 1.0))), 1.0, 0.0, 0.0, 0.0, 0.0)))))))))))), false, true), bvec3(bvec3(bvec3(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat4(injectionSwitch, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, _GLF_IDENTITY(0.0, _GLF_ONE(1.0, injectionSwitch.y) * (_GLF_IDENTITY(0.0, float(vec2(0.0, _GLF_ZERO(0.0, injectionSwitch.x)))))), 0.0, 1.0, 0.0, length(vec4(0.0, 0.0, 0.0, 0.0)), 1.0, 1.0, 0.0)), clamp(vec2(mat4(injectionSwitch, _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, length(vec4(0.0, 0.0, 0.0, 0.0)), 1.0, 1.0, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED((false ? 428.407 : (14.53 + -4.6)))), float(0.0), bool(true))))), vec2(mat4(injectionSwitch, 1.0, 0.0, 0.0, _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, length(vec4(0.0, 0.0, 0.0, 0.0)), 1.0, 1.0, 0.0)), vec2(mat4(injectionSwitch, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, length(vec4(0.0, 0.0, 0.0, 0.0)), 1.0, 1.0, 0.0))))))).y, 1.0 * (injectionSwitch.y)), injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, float(vec3(injectionSwitch.y, 0.0, 0.0))))))), false, true))))))), true, true), bvec3(bvec4(_GLF_IDENTITY(bvec3(bool(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, 1.0 * (injectionSwitch.y)), injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, float(vec3(injectionSwitch.y, 0.0, 0.0))))), bool(bvec2(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, 1.0 * (injectionSwitch.y)), injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, float(vec3(injectionSwitch.y, 0.0, 0.0))))), false))))), bool(_GLF_IDENTITY(bvec3(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, 1.0 * (injectionSwitch.y)), injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, float(vec3(injectionSwitch.y, 0.0, _GLF_IDENTITY(_GLF_IDENTITY(0.0, _GLF_IDENTITY((0.0), min((0.0), (0.0))) * 1.0), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(determinant((-3.4 - mat3(-3.5, _GLF_IDENTITY(-0.0, max(_GLF_IDENTITY(-0.0, (false ? _GLF_FUZZED(-37.51) : _GLF_IDENTITY(_GLF_IDENTITY(-0.0, max(-0.0, _GLF_IDENTITY(-0.0, clamp(-0.0, -0.0, _GLF_IDENTITY(-0.0, mix(float(-0.0), float(_GLF_FUZZED(709.538)), bool(false))))))), min(-0.0, -0.0)))), -0.0)), 297.922, -2119.2515, -72.69, -75.75, 1574.2379, -5531.3867, 5.5)))) : 0.0))))))))), false, true), bvec3(bvec3(bvec3(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat4(injectionSwitch, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, length(vec4(0.0, 0.0, 0.0, 0.0)), 1.0, 1.0, 0.0)), clamp(vec2(mat4(injectionSwitch, _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, length(vec4(0.0, 0.0, 0.0, 0.0)), 1.0, 1.0, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED((false ? 428.407 : (14.53 + -4.6)))), float(0.0), bool(true))))), vec2(mat4(injectionSwitch, 1.0, 0.0, 0.0, _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, length(vec4(0.0, 0.0, 0.0, 0.0)), 1.0, 1.0, 0.0)), vec2(mat4(injectionSwitch, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, length(vec4(0.0, 0.0, 0.0, 0.0)), 1.0, 1.0, 0.0))))))).y, 1.0 * (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y)), injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, float(vec3(injectionSwitch.y, 0.0, 0.0))))))), false, true))))))), true, true), bvec3(bvec4(bvec3(bool(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, 1.0 * (injectionSwitch.y)), injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, float(vec3(injectionSwitch.y, 0.0, 0.0))))), bool(bvec2(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, 1.0 * (injectionSwitch.y)), injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, float(vec3(injectionSwitch.y, 0.0, 0.0))))), false))))), bool(_GLF_IDENTITY(bvec3(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, 1.0 * (injectionSwitch.y)), injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, float(vec3(injectionSwitch.y, 0.0, _GLF_IDENTITY(_GLF_IDENTITY(0.0, (0.0) * 1.0), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(determinant((-3.4 - mat3(-3.5, _GLF_IDENTITY(-0.0, max(_GLF_IDENTITY(-0.0, (false ? _GLF_FUZZED(-37.51) : _GLF_IDENTITY(-0.0, min(-0.0, -0.0)))), -0.0)), 297.922, -2119.2515, _GLF_IDENTITY(-72.69, max(_GLF_IDENTITY(-72.69, mix(float(-72.69), float(_GLF_FUZZED(-9569.5885)), bool(false))), -72.69)), -75.75, 1574.2379, -5531.3867, 5.5)))) : 0.0))))))))), false, true), bvec3(bvec3(bvec3(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat4(injectionSwitch, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, length(_GLF_IDENTITY(vec4(0.0, 0.0, 0.0, 0.0), vec4(mat2x4(_GLF_IDENTITY(vec4(0.0, 0.0, 0.0, 0.0), max(vec4(0.0, 0.0, 0.0, 0.0), vec4(0.0, 0.0, 0.0, 0.0))), abs(0.0), abs(1.0), abs(1.0), 0.0)))), 1.0, 1.0, 0.0)), clamp(vec2(mat4(injectionSwitch, _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, length(vec4(0.0, 0.0, 0.0, 0.0)), 1.0, 1.0, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED((false ? 428.407 : (14.53 + -4.6)))), float(0.0), bool(true))))), vec2(mat4(injectionSwitch, 1.0, 0.0, 0.0, _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, length(vec4(0.0, 0.0, 0.0, 0.0)), 1.0, 1.0, 0.0)), vec2(mat4(injectionSwitch, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, length(vec4(0.0, 0.0, 0.0, 0.0)), 1.0, 1.0, 0.0))))))).y, 1.0 * (injectionSwitch.y)), injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, float(vec3(injectionSwitch.y, 0.0, 0.0))))))), _GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, (false) || false))), true))))))), true, true), true))), true))))), ! (! (bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))))
      {
       for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != ((1 << _GLF_IDENTITY(int(2), int(2))) >> _GLF_IDENTITY(_GLF_IDENTITY(int(2), (int(2)) ^ 0), int(2)))); _injected_loop_counter ++)
        {
         return;
        }
      }
    }
   else
    {
    }
  }
 else
  {
   if(_GLF_DEAD(false))
    return;
  }
 uint virtual_gid = workgroup_base + _GLF_IDENTITY(subgroup_id * subgroup_size, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(packSnorm4x8(vec4(-362.971, -8.4, _GLF_IDENTITY(-1.4, sqrt(0.0) + (_GLF_IDENTITY(-1.4, float(mat4(-1.4, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0))))), -9.8))) : subgroup_id * subgroup_size)) + subgroup_local_id;
 uint next_virtual_gid = _GLF_IDENTITY(workgroup_base, (workgroup_base) - _GLF_IDENTITY(0u, clamp(0u, 0u, _GLF_IDENTITY(0u, (0u) | (0u))))) + _GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(subgroup_id, (subgroup_id) | (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (subgroup_id) << _GLF_IDENTITY(0u, (0u) | (0u))), min(subgroup_id, subgroup_id))))) + 0u) * subgroup_size + ((_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY((subgroup_local_id) | (subgroup_local_id), (_GLF_IDENTITY((subgroup_local_id) | (subgroup_local_id), uint(uvec2((subgroup_local_id) | (subgroup_local_id), 1u)))) >> 0u)) + 1) % subgroup_size);
 uint read_1 = atomicLoad(buf[_GLF_IDENTITY(virtual_gid, 0u ^ (_GLF_IDENTITY(virtual_gid, (virtual_gid) << 0u)))], 4, 64, 0);
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, 0.0 + (injectionSwitch.y))))))), ! _GLF_IDENTITY((! (_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY((false) || false, ((false) || false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY((injectionSwitch.x), min((injectionSwitch.x), (injectionSwitch.x))) / 1.0) > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y))))), false || (_GLF_IDENTITY((! (_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) || false), (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0) > injectionSwitch.y))))), _GLF_IDENTITY(false || ((! (_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) || false), (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0) > injectionSwitch.y)))))), bool(bvec3(false || ((! (_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) || false), (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0) > injectionSwitch.y)))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))))))))
  {
   for(int _injected_loop_counter = int(_GLF_ZERO(0.0, injectionSwitch.x)); _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
    {
     return;
     if(_GLF_DEAD(false))
      continue;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        return;
       continue;
      }
    }
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
    return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
  {
   for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bool(injectionSwitch.x > injectionSwitch.y)))))))
        {
        }
       else
        {
         return;
        }
      }
     if(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), _GLF_IDENTITY(bool(bool(_GLF_WRAPPED_IF_FALSE(false))), ! (! (bool(bool(_GLF_WRAPPED_IF_FALSE(false))))))))
      {
      }
     else
      {
       atomicStore(buf[next_virtual_gid], uint(_GLF_IDENTITY(read_1 + 1, max(read_1 + 1, read_1 + 1))), 4, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(64, (64) | int(_GLF_ZERO(0.0, injectionSwitch.x))), (64) << 0), _GLF_IDENTITY(_GLF_IDENTITY((64), ~ (_GLF_IDENTITY(~ ((64)), (~ ((64))) - 0))) * 1, int(ivec4(_GLF_IDENTITY((64), ~ (_GLF_IDENTITY(~ ((64)), (~ ((64))) - 0))) * 1, 1, 1, 1)))), 4);
      }
    }
  }
 else
  {
  }
 uint read_2 = atomicLoad(_GLF_IDENTITY(_GLF_IDENTITY(buf[virtual_gid], (buf[virtual_gid]) | 0u), min(_GLF_IDENTITY(buf[virtual_gid], (buf[virtual_gid]) | 0u), _GLF_IDENTITY(_GLF_IDENTITY(buf[virtual_gid], (buf[virtual_gid]) | 0u), _GLF_IDENTITY(uint(uvec3(_GLF_IDENTITY(_GLF_IDENTITY(buf[virtual_gid], min(buf[virtual_gid], _GLF_IDENTITY(buf[virtual_gid], ~ (~ (buf[virtual_gid]))))), (buf[virtual_gid]) | 0u), 0u, 1u)), (uint(uvec3(_GLF_IDENTITY(_GLF_IDENTITY(buf[virtual_gid], min(buf[virtual_gid], _GLF_IDENTITY(buf[virtual_gid], ~ (~ (buf[virtual_gid]))))), (buf[virtual_gid]) | 0u), 0u, 1u))) | 0u)))), 4, 64, 0);
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_WRAPPED_IF_TRUE(true))
  {
   if(subgroup_local_id + 1 < subgroup_size)
    {
     int i = 0;
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(-598.499)))), bool(bvec2((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(-598.499)))), true))))))
      return;
     if(_GLF_DEAD(false))
      return;
     for(int _injected_loop_counter = ((_GLF_IDENTITY(1 << _GLF_IDENTITY(int(4), int(4)), _GLF_IDENTITY((1 << _GLF_IDENTITY(int(4), int(4))) << 0, (_GLF_IDENTITY((1 << _GLF_IDENTITY(int(4), int(4))) << 0, (_GLF_IDENTITY((1 << _GLF_IDENTITY(int(4), int(4))) << 0, (true ? (1 << _GLF_IDENTITY(int(4), int(4))) << 0 : _GLF_FUZZED(-31003)))) >> 0)) << 0))) >> _GLF_IDENTITY(int(4), int(4))); _GLF_WRAPPED_LOOP(_injected_loop_counter > (0 >> _GLF_IDENTITY(_GLF_IDENTITY(int(6), _GLF_IDENTITY(int(int(_GLF_IDENTITY(int(6), ~ (~ (int(6)))))), (_GLF_IDENTITY(int(int(_GLF_IDENTITY(int(6), ~ (~ (int(6)))))), max(int(int(_GLF_IDENTITY(int(6), ~ (~ (int(6)))))), int(int(_GLF_IDENTITY(int(6), ~ (~ (int(_GLF_IDENTITY(6, (6) * int(_GLF_ONE(1.0, injectionSwitch.y)))))))))))) * 1)), int(_GLF_IDENTITY(6, int(ivec4(6, 0, 0, 1))))))); _injected_loop_counter --)
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        break;
       atomicStore(buf[_GLF_IDENTITY(_GLF_IDENTITY(next_virtual_gid, ~ (_GLF_IDENTITY(~ (next_virtual_gid), min(~ (next_virtual_gid), ~ (next_virtual_gid))))), (next_virtual_gid) | _GLF_IDENTITY(0u, min(_GLF_IDENTITY(0u, (false ? _GLF_FUZZED(next_virtual_gid) : 0u)), 0u)))], uint(read_1 + 1 == _GLF_IDENTITY(_GLF_IDENTITY(read_2, 0u ^ (read_2)), max(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(read_2, 0u | (read_2)), (_GLF_IDENTITY(read_2, 0u | (read_2))) << 0u), (_GLF_IDENTITY(read_2, (_GLF_IDENTITY(_GLF_IDENTITY(read_2, max(read_2, _GLF_IDENTITY(read_2, (read_2) - 0u))), (read_2) / (1u | 1u))) + (0u >> _GLF_IDENTITY(uint(3u), uint(3u))))) | (_GLF_IDENTITY(read_2, (true ? read_2 : _GLF_FUZZED(subgroup_id))))), read_2))) + 1, 4, 64, 4);
       if(_GLF_DEAD(false))
        continue;
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_WRAPPED_IF_FALSE(false))
        {
        }
       else
        {
         if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
          }
         else
          {
           return;
          }
        }
      }
    }
   else
    {
     if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(_GLF_IDENTITY(true, _GLF_IDENTITY(! (_GLF_IDENTITY(! (true), bool(bvec3(! (true), true, false)))), _GLF_IDENTITY(bool(bvec4(! (_GLF_IDENTITY(! (true), bool(bvec3(! (true), true, false)))), _GLF_IDENTITY(true, (_GLF_IDENTITY(true, bool(bvec4(true, false, true, true)))) && true), true, true)), ! (_GLF_IDENTITY(! (bool(bvec4(! (_GLF_IDENTITY(! (true), bool(bvec3(! (true), true, false)))), _GLF_IDENTITY(true, (_GLF_IDENTITY(true, bool(bvec4(true, false, true, true)))) && true), true, true))), (! (bool(bvec4(! (_GLF_IDENTITY(_GLF_IDENTITY(! (true), false || (! (true))), _GLF_IDENTITY(bool(bvec3(! (true), true, false)), ! (_GLF_IDENTITY(! (bool(bvec3(! (true), true, false))), bool(bvec3(! (bool(bvec3(! (true), true, false))), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))), _GLF_IDENTITY(true, (_GLF_IDENTITY(true, bool(bvec4(true, false, true, true)))) && true), true, true)))) || false))))), _GLF_IDENTITY(_GLF_IDENTITY((true), _GLF_IDENTITY(((true)) || false, bool(_GLF_IDENTITY(bvec2(((true)) || false, true), bvec2(bvec2(bvec2(((true)) || false, true))))))) || false, true && (_GLF_IDENTITY((_GLF_IDENTITY(true, _GLF_IDENTITY(! (! (true)), bool(bvec3(! (! (true)), true, true))))), _GLF_IDENTITY(((true)) || false, false || (((true)) || false))) || false)))))
      {
       if(_GLF_WRAPPED_IF_TRUE(true))
        {
         if(_GLF_WRAPPED_IF_TRUE(true))
          {
           for(int _injected_loop_counter = _GLF_IDENTITY(int(_GLF_ONE(1.0, injectionSwitch.y)), clamp(int(_GLF_ONE(1.0, injectionSwitch.y)), int(_GLF_ONE(1.0, injectionSwitch.y)), int(_GLF_ONE(1.0, injectionSwitch.y)))); _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
            {
             if(_GLF_DEAD(false))
              continue;
             if(_GLF_WRAPPED_IF_FALSE(false))
              {
               if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec4(_GLF_DEAD(false), false, true, false)), true && (bool(bvec4(_GLF_DEAD(false), false, true, false))))))
                return;
              }
             else
              {
               if(_GLF_DEAD(false))
                {
                 if(_GLF_DEAD(false))
                  break;
                 break;
                }
               for(int _injected_loop_counter = (0 ^ 1); _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter > 0, (_injected_loop_counter > 0) && true)); _injected_loop_counter --)
                {
                 if(_GLF_DEAD(false))
                  continue;
                 if(_GLF_DEAD(false))
                  continue;
                 if(_GLF_DEAD(false))
                  continue;
                 if(_GLF_WRAPPED_IF_FALSE(false))
                  {
                  }
                 else
                  {
                   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), ! (_GLF_IDENTITY(! (bool(false)), bool(bvec2(! (bool(false)), false)))))))))
                    return;
                   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                    break;
                  }
                }
               if(_GLF_DEAD(false))
                break;
              }
             if(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false)))), (! (_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))) && true))))
              break;
            }
           if(_GLF_DEAD(false))
            return;
           if(_GLF_DEAD(false))
            return;
           for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
            {
             if(_GLF_DEAD(false))
              return;
             atomicStore(buf[next_virtual_gid], uint(read_1 + _GLF_IDENTITY(1, _GLF_IDENTITY((1), int(ivec3((1), int(_GLF_ZERO(0.0, injectionSwitch.x)), (0 << _GLF_IDENTITY(int(0), int(0)))))) | (_GLF_IDENTITY(1, _GLF_IDENTITY(0 ^ (1), (0 ^ (1)) | (0 ^ (1)))))) == read_2) + 1, 4, _GLF_IDENTITY(64, clamp(64, 64, 64)), 4);
            }
          }
         else
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            {
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              return;
             if(_GLF_DEAD(false))
              return;
             return;
            }
          }
        }
       else
        {
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(false))
        return;
      }
     else
      {
      }
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
      }
     else
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))))
        return;
       if(_GLF_DEAD(false))
        return;
      }
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(false))
    return;
  }
 else
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
  }
}
