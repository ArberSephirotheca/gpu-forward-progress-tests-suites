#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_DEAD(false), false))), _GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! (false))))))))), _GLF_IDENTITY(true, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(true, true), bvec2(bvec3(_GLF_IDENTITY(bvec2(true, true), bvec2(bvec2(bvec2(true, true)))), false)))), (_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(true, _GLF_IDENTITY(true, ! (! (true)))), _GLF_IDENTITY(bvec2(bvec3(bvec2(true, true), _GLF_IDENTITY(true, false || (true)))), _GLF_IDENTITY(bvec2(bvec3(bvec2(bvec3(bvec2(true, true), true)), false)), bvec2(bvec3(bvec2(bvec3(_GLF_IDENTITY(bvec2(bvec3(bvec2(true, true), true)), _GLF_IDENTITY(bvec2(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec2(bvec3(bvec2(true, true), true)), bvec2(bvec2(bvec2(bvec3(bvec2(true, true), true))))), false), _GLF_IDENTITY(bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec2(bvec3(bvec2(true, true), true)), bvec2(bvec2(bvec2(bvec3(bvec2(true, true), true))))), false))), bvec3(bvec4(bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec2(bvec3(bvec2(true, true), true)), bvec2(bvec2(bvec2(bvec3(bvec2(true, true), true))))), false))), false))))), bvec2(bvec4(bvec2(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec2(bvec3(bvec2(true, true), true)), bvec2(bvec2(bvec2(bvec3(bvec2(true, true), _GLF_IDENTITY(true, _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(_GLF_IDENTITY(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))) || (_GLF_IDENTITY(true, true && (true))))))))), false), _GLF_IDENTITY(bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec2(bvec3(bvec2(true, true), true)), bvec2(bvec2(bvec2(bvec3(bvec2(true, true), true))))), false))), bvec3(bvec4(bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec2(bvec3(bvec2(true, true), true)), bvec2(bvec2(bvec2(bvec3(bvec2(true, true), true))))), false))), false))))), true, true)))), _GLF_IDENTITY(false, (_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false))) || _GLF_IDENTITY(false, (_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, true && (false))))) || false)))), true))))), bvec2(bvec3(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(true, false || (true)), true), bvec2(bvec2(bvec2(true, true)))), false)))), (bool(_GLF_IDENTITY(bvec2(true, true), bvec2(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(true, true), _GLF_IDENTITY(bvec2(bvec4(bvec2(true, true), true, false)), bvec2(bvec4(bvec2(bvec4(bvec2(true, true), true, false)), false, true)))), bvec2(bvec2(bvec2(true, true)))), false))))) && true)) && _GLF_IDENTITY(true, true && _GLF_IDENTITY((true), ((true)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), bool(bool(bool(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_DEAD(false), false))), _GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! (false))))))))), _GLF_IDENTITY(true, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(true, true), bvec2(bvec3(_GLF_IDENTITY(bvec2(true, true), bvec2(bvec2(bvec2(true, true)))), false)))), (_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(true, _GLF_IDENTITY(true, ! (! (true)))), _GLF_IDENTITY(bvec2(bvec3(bvec2(true, true), _GLF_IDENTITY(true, false || (true)))), _GLF_IDENTITY(bvec2(bvec3(bvec2(bvec3(bvec2(true, true), true)), false)), bvec2(bvec3(bvec2(bvec3(_GLF_IDENTITY(bvec2(bvec3(bvec2(true, true), true)), _GLF_IDENTITY(bvec2(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec2(bvec3(bvec2(true, true), true)), bvec2(bvec2(bvec2(bvec3(bvec2(true, true), true))))), false), _GLF_IDENTITY(bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec2(bvec3(bvec2(true, true), true)), bvec2(bvec2(bvec2(bvec3(bvec2(true, true), true))))), false))), bvec3(bvec4(bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec2(bvec3(bvec2(true, true), true)), bvec2(bvec2(bvec2(bvec3(bvec2(true, true), true))))), false))), false))))), bvec2(bvec4(bvec2(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec2(bvec3(bvec2(true, true), true)), bvec2(bvec2(bvec2(bvec3(bvec2(true, true), _GLF_IDENTITY(true, _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(_GLF_IDENTITY(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))) || (_GLF_IDENTITY(true, true && (true))))))))), false), _GLF_IDENTITY(bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec2(bvec3(bvec2(true, true), true)), bvec2(bvec2(bvec2(bvec3(bvec2(true, true), true))))), false))), bvec3(bvec4(bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec2(bvec3(bvec2(true, true), true)), bvec2(bvec2(bvec2(bvec3(bvec2(true, true), true))))), false))), false))))), true, true)))), _GLF_IDENTITY(false, (_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false))) || _GLF_IDENTITY(false, (_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, true && (false))))) || false)))), true))))), bvec2(bvec3(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(true, false || (true)), true), bvec2(bvec2(bvec2(true, true)))), false)))), (bool(_GLF_IDENTITY(bvec2(true, true), bvec2(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(true, true), _GLF_IDENTITY(bvec2(bvec4(bvec2(true, true), true, false)), bvec2(bvec4(bvec2(bvec4(bvec2(true, true), true, false)), false, true)))), bvec2(bvec2(bvec2(true, true)))), false))))) && true)) && _GLF_IDENTITY(true, true && _GLF_IDENTITY((true), ((true)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))), true && (bool(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_DEAD(false), false))), false, true))))), (_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_DEAD(false), false))), _GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! _GLF_IDENTITY((_GLF_IDENTITY(! (! (false)), true && (! (! (false))))), false || ((_GLF_IDENTITY(! (! (false)), true && (! (! (false))))))))))))), _GLF_IDENTITY(true, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(true, true), bvec2(bvec3(_GLF_IDENTITY(bvec2(true, true), bvec2(bvec2(bvec2(true, true)))), false)))), (_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(true, _GLF_IDENTITY(true, (true) && true)), _GLF_IDENTITY(bvec2(bvec3(_GLF_IDENTITY(bvec2(true, true), bvec2(bvec2(bvec2(true, true)))), true)), _GLF_IDENTITY(_GLF_IDENTITY(bvec2(bvec3(bvec2(_GLF_IDENTITY(bvec3(bvec2(true, true), true), bvec3(bvec3(bvec3(bvec2(true, true), true))))), false)), bvec2(bvec2(bvec2(bvec3(bvec2(bvec3(bvec2(true, true), true)), false))))), bvec2(bvec3(bvec2(bvec3(bvec2(bvec3(bvec2(_GLF_IDENTITY(true, bool(bvec2(true, false))), true), true)), _GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, (false) && true))))), true))))), bvec2(bvec3(_GLF_IDENTITY(bvec2(true, true), bvec2(bvec2(bvec2(_GLF_IDENTITY(true, false || (true)), true)))), false)))), (bool(_GLF_IDENTITY(bvec2(true, true), bvec2(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(true, true), bvec2(bvec2(bvec2(true, true)))), bvec2(bvec2(_GLF_IDENTITY(bvec2(true, true), bvec2(bvec2(bvec2(true, true))))))), false))))) && true)) && true)))), true && (bool(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_DEAD(false), false))), false, true)))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) || false)) && true)))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))).x > injectionSwitch.y))))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), ! (! (! (_GLF_DEAD(false))))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, float(mat4(injectionSwitch.y, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0)))))) - 0.0)))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint num_workgroup = gl_NumWorkGroups.x;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 uint workgroup_size = gl_WorkGroupSize.x;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint workgroup_id = gl_WorkGroupID.x;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(true, bool(_GLF_IDENTITY(bvec3(true, true, false), _GLF_IDENTITY(bvec3(bvec4(_GLF_IDENTITY(bvec3(true, true, false), bvec3(bvec4(bvec3(true, true, false), true))), false)), bvec3(bvec4(bvec3(bvec4(_GLF_IDENTITY(bvec3(true, true, false), bvec3(bvec4(bvec3(true, true, false), true))), false)), false)))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(true, bool(bvec3(true, true, false)))), _GLF_IDENTITY((! (_GLF_IDENTITY(true, bool(bvec3(true, true, false))))) || false, bool(bvec4((! (_GLF_IDENTITY(true, bool(bvec3(true, true, false))))) || false, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)))))) && (false))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! (false))))))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y))), ((injectionSwitch.x > injectionSwitch.y)) || false))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 uint workgroup_base = workgroup_size * workgroup_id;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(_GLF_IDENTITY(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec4(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false, true, true))))), ! (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && true)))))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint virtual_gid = workgroup_base + _GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) * 1u) + subgroup_local_id;
 if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec4(false, true, false, false)))) && true)))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))
    barrier();
   barrier();
  }
 uint next_virtual_gid = workgroup_base + subgroup_id * subgroup_size + (_GLF_IDENTITY((subgroup_local_id + 1), min(_GLF_IDENTITY((subgroup_local_id + 1), min((subgroup_local_id + 1), (subgroup_local_id + 1))), (subgroup_local_id + 1))) % _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(uint(uvec2(_GLF_IDENTITY(subgroup_size, (subgroup_size) / 1u), 1u)), (uint(uvec2(_GLF_IDENTITY(subgroup_size, (subgroup_size) / _GLF_IDENTITY(1u, (1u) - 0u)), 1u))) | (uint(uvec2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (subgroup_size) / 1u), _GLF_IDENTITY(clamp(_GLF_IDENTITY(subgroup_size, (subgroup_size) / 1u), _GLF_IDENTITY(subgroup_size, (subgroup_size) / 1u), _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (subgroup_size) / 1u), max(_GLF_IDENTITY(subgroup_size, (subgroup_size) / 1u), _GLF_IDENTITY(subgroup_size, (subgroup_size) / _GLF_IDENTITY(1u, (1u) | (1u)))))), (clamp(_GLF_IDENTITY(subgroup_size, (subgroup_size) / 1u), _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (subgroup_size) / 1u), 0u ^ (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (subgroup_size) / 1u), ~ (~ (_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, (subgroup_size) / 1u)) / 1u)))))), _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, clamp(subgroup_size, _GLF_IDENTITY(subgroup_size, (true ? subgroup_size : _GLF_FUZZED(subgroup_size))), subgroup_size))) / 1u), max(_GLF_IDENTITY(subgroup_size, (subgroup_size) / 1u), _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (subgroup_size) / 1u), min(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (subgroup_size) / 1u), (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (subgroup_size) / 1u), min(_GLF_IDENTITY(subgroup_size, (subgroup_size) / 1u), _GLF_IDENTITY(subgroup_size, (subgroup_size) / 1u)))) << 0u), _GLF_IDENTITY(subgroup_size, (subgroup_size) / 1u))))))) / uint(_GLF_ONE(1.0, injectionSwitch.y)))), (false ? _GLF_IDENTITY(_GLF_FUZZED(workgroup_size), (_GLF_FUZZED(workgroup_size)) ^ 0u) : _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (subgroup_size) / 1u), max(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (subgroup_size) / 1u), (_GLF_IDENTITY(subgroup_size, (subgroup_size) / 1u)) | (_GLF_IDENTITY(subgroup_size, (subgroup_size) / 1u))), _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, (subgroup_size) >> 0u)) / 1u), ((1u << _GLF_IDENTITY(uint(7u), uint(7u))) >> _GLF_IDENTITY(uint(7u), uint(7u))) * (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (subgroup_size) / 1u), 0u + (_GLF_IDENTITY(subgroup_size, (subgroup_size) / 1u))))))), _GLF_IDENTITY(clamp(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (subgroup_size) / 1u), uint(uint(_GLF_IDENTITY(subgroup_size, (subgroup_size) / 1u)))), _GLF_IDENTITY(subgroup_size, (subgroup_size) / 1u), _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (subgroup_size) / 1u), max(_GLF_IDENTITY(subgroup_size, (subgroup_size) / 1u), _GLF_IDENTITY(subgroup_size, (subgroup_size) / _GLF_IDENTITY(1u, (1u) | (1u)))))), (clamp(_GLF_IDENTITY(subgroup_size, (subgroup_size) / 1u), _GLF_IDENTITY(subgroup_size, (subgroup_size) / 1u), _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (subgroup_size) / 1u), max(_GLF_IDENTITY(subgroup_size, (subgroup_size) / 1u), _GLF_IDENTITY(subgroup_size, (subgroup_size) / 1u))))) / _GLF_IDENTITY(uint(_GLF_ONE(1.0, injectionSwitch.y)), (uint(_GLF_ONE(1.0, injectionSwitch.y))) - 0u))))), 1u))))), (_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(uint(uvec2(_GLF_IDENTITY(subgroup_size, (subgroup_size) / 1u), 1u)), (uint(uvec2(_GLF_IDENTITY(subgroup_size, (subgroup_size) / 1u), 1u))) | (uint(uvec2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (subgroup_size) / 1u), _GLF_IDENTITY(clamp(_GLF_IDENTITY(subgroup_size, (subgroup_size) / 1u), _GLF_IDENTITY(subgroup_size, (subgroup_size) / 1u), _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (subgroup_size) / 1u), max(_GLF_IDENTITY(subgroup_size, (subgroup_size) / 1u), _GLF_IDENTITY(subgroup_size, (subgroup_size) / _GLF_IDENTITY(1u, (1u) | _GLF_IDENTITY((1u), min((1u), (1u)))))))), (clamp(_GLF_IDENTITY(subgroup_size, (subgroup_size) / 1u), _GLF_IDENTITY(subgroup_size, (subgroup_size) / 1u), _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (subgroup_size) / 1u), max(_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size))) / 1u), _GLF_IDENTITY(subgroup_size, (subgroup_size) / 1u))))) / uint(_GLF_ONE(1.0, injectionSwitch.y)))), (false ? _GLF_FUZZED(workgroup_size) : _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (subgroup_size) / 1u), _GLF_IDENTITY(clamp(_GLF_IDENTITY(subgroup_size, (subgroup_size) / 1u), _GLF_IDENTITY(subgroup_size, (subgroup_size) / 1u), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (subgroup_size) / 1u), max(_GLF_IDENTITY(subgroup_size, (subgroup_size) / 1u), _GLF_IDENTITY(subgroup_size, (subgroup_size) / _GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, (1u) ^ 0u)) | (1u))))), uint(uint(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (subgroup_size) / 1u), max(_GLF_IDENTITY(subgroup_size, (subgroup_size) / 1u), _GLF_IDENTITY(subgroup_size, (subgroup_size) / _GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, (1u) ^ 0u)) | (1u))))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (subgroup_size) / 1u), max(_GLF_IDENTITY(subgroup_size, (subgroup_size) / 1u), _GLF_IDENTITY(subgroup_size, (subgroup_size) / _GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, (1u) ^ 0u)) | (1u))))), _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (subgroup_size) / 1u), max(_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY((subgroup_size), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(workgroup_base) : (subgroup_size))) / 1u), _GLF_IDENTITY(subgroup_size, (subgroup_size) / _GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, (1u) ^ 0u)) | (1u))))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (subgroup_size) / 1u), max(_GLF_IDENTITY(subgroup_size, (subgroup_size) / 1u), _GLF_IDENTITY(subgroup_size, (subgroup_size) / _GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, (1u) ^ 0u)) | (1u))))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (subgroup_size) / 1u), max(_GLF_IDENTITY(subgroup_size, (subgroup_size) / 1u), _GLF_IDENTITY(subgroup_size, (subgroup_size) / _GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, (1u) ^ 0u)) | (1u))))), _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (subgroup_size) / 1u), max(_GLF_IDENTITY(subgroup_size, (subgroup_size) / 1u), _GLF_IDENTITY(subgroup_size, (subgroup_size) / _GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, (1u) ^ 0u)) | (1u))))), _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (subgroup_size) / 1u), max(_GLF_IDENTITY(subgroup_size, (subgroup_size) / 1u), _GLF_IDENTITY(subgroup_size, (subgroup_size) / _GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, (1u) ^ _GLF_IDENTITY(0u, (0u) + 0u))) | (1u))))))))))))), (clamp(_GLF_IDENTITY(subgroup_size, (subgroup_size) / 1u), _GLF_IDENTITY(subgroup_size, (subgroup_size) / 1u), _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (subgroup_size) / 1u), max(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (subgroup_size) / 1u), uint(uint(_GLF_IDENTITY(subgroup_size, (subgroup_size) / 1u)))), _GLF_IDENTITY(subgroup_size, (subgroup_size) / 1u))))) / uint(_GLF_ONE(1.0, injectionSwitch.y)))))), 1u)))))) | (_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(uint(uvec2(_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY((subgroup_size), max((subgroup_size), (subgroup_size))) / 1u), 1u)), _GLF_IDENTITY((uint(uvec2(_GLF_IDENTITY(subgroup_size, (subgroup_size) / 1u), 1u))) | (uint(uvec2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, (subgroup_size) | (subgroup_size))) / 1u), _GLF_IDENTITY(clamp(_GLF_IDENTITY(subgroup_size, (subgroup_size) / 1u), _GLF_IDENTITY(subgroup_size, (subgroup_size) / 1u), _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (subgroup_size) / 1u), max(_GLF_IDENTITY(subgroup_size, (subgroup_size) / 1u), _GLF_IDENTITY(subgroup_size, (subgroup_size) / _GLF_IDENTITY(_GLF_IDENTITY(1u, (1u) | (1u)), (_GLF_IDENTITY(1u, (1u) | (1u))) - (0u | 0u)))))), (clamp(_GLF_IDENTITY(subgroup_size, (subgroup_size) / 1u), _GLF_IDENTITY(subgroup_size, (subgroup_size) / 1u), _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (subgroup_size) / 1u), max(_GLF_IDENTITY(subgroup_size, (subgroup_size) / 1u), _GLF_IDENTITY(subgroup_size, (subgroup_size) / 1u))))) / uint(_GLF_ONE(1.0, injectionSwitch.y)))), (false ? _GLF_FUZZED(workgroup_size) : _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (subgroup_size) / 1u), _GLF_IDENTITY(clamp(_GLF_IDENTITY(subgroup_size, (subgroup_size) / 1u), _GLF_IDENTITY(subgroup_size, (subgroup_size) / 1u), _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (subgroup_size) / 1u), max(_GLF_IDENTITY(subgroup_size, (subgroup_size) / 1u), _GLF_IDENTITY(subgroup_size, (subgroup_size) / _GLF_IDENTITY(1u, (1u) | (1u)))))), (clamp(_GLF_IDENTITY(subgroup_size, (subgroup_size) / 1u), _GLF_IDENTITY(subgroup_size, (subgroup_size) / 1u), _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (subgroup_size) / 1u), max(_GLF_IDENTITY(subgroup_size, (subgroup_size) / 1u), _GLF_IDENTITY(subgroup_size, (subgroup_size) / 1u))))) / uint(_GLF_ONE(1.0, injectionSwitch.y)))))), 1u))), max(_GLF_IDENTITY((uint(uvec2(_GLF_IDENTITY(subgroup_size, (subgroup_size) / 1u), 1u))) | (uint(uvec2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, (subgroup_size) | (subgroup_size))) / 1u), _GLF_IDENTITY(clamp(_GLF_IDENTITY(subgroup_size, (subgroup_size) / 1u), _GLF_IDENTITY(subgroup_size, (subgroup_size) / _GLF_IDENTITY(1u, ~ (~ (_GLF_IDENTITY(1u, (1u) ^ 0u))))), _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (subgroup_size) / 1u), max(_GLF_IDENTITY(subgroup_size, (subgroup_size) / 1u), _GLF_IDENTITY(subgroup_size, (subgroup_size) / _GLF_IDENTITY(1u, (1u) | (1u)))))), (clamp(_GLF_IDENTITY(subgroup_size, (subgroup_size) / 1u), _GLF_IDENTITY(subgroup_size, (subgroup_size) / 1u), _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY((subgroup_size), ((subgroup_size)) / 1u) / 1u), max(_GLF_IDENTITY(subgroup_size, (subgroup_size) / 1u), _GLF_IDENTITY(subgroup_size, (subgroup_size) / 1u))))) / uint(_GLF_ONE(1.0, injectionSwitch.y)))), (false ? _GLF_FUZZED(workgroup_size) : _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (subgroup_size) / 1u), _GLF_IDENTITY(clamp(_GLF_IDENTITY(subgroup_size, (subgroup_size) / 1u), _GLF_IDENTITY(subgroup_size, (subgroup_size) / 1u), _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (subgroup_size) / 1u), max(_GLF_IDENTITY(subgroup_size, (subgroup_size) / 1u), _GLF_IDENTITY(subgroup_size, (subgroup_size) / _GLF_IDENTITY(1u, (1u) | (1u)))))), (clamp(_GLF_IDENTITY(subgroup_size, (subgroup_size) / 1u), _GLF_IDENTITY(subgroup_size, (subgroup_size) / 1u), _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY((subgroup_size), ((subgroup_size)) | 0u) / 1u), max(_GLF_IDENTITY(subgroup_size, (subgroup_size) / 1u), _GLF_IDENTITY(subgroup_size, (subgroup_size) / 1u))))) / uint(_GLF_ONE(1.0, injectionSwitch.y)))))), 1u))), ((uint(uvec2(_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY((subgroup_size) / 1u, 0u ^ (_GLF_IDENTITY((subgroup_size) / 1u, (false ? _GLF_FUZZED(subgroup_id) : (subgroup_size) / 1u))))), 1u))) | (uint(uvec2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, (subgroup_size) | (subgroup_size))) / 1u), _GLF_IDENTITY(clamp(_GLF_IDENTITY(subgroup_size, (subgroup_size) / 1u), _GLF_IDENTITY(subgroup_size, (subgroup_size) / 1u), _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (subgroup_size) / 1u), max(_GLF_IDENTITY(subgroup_size, (subgroup_size) / 1u), _GLF_IDENTITY(subgroup_size, (subgroup_size) / _GLF_IDENTITY(1u, (1u) | (1u)))))), (clamp(_GLF_IDENTITY(subgroup_size, (subgroup_size) / 1u), _GLF_IDENTITY(subgroup_size, (subgroup_size) / 1u), _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (subgroup_size) / 1u), max(_GLF_IDENTITY(subgroup_size, (subgroup_size) / 1u), _GLF_IDENTITY(subgroup_size, (subgroup_size) / 1u))))) / uint(_GLF_ONE(1.0, injectionSwitch.y)))), (false ? _GLF_FUZZED(workgroup_size) : _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (subgroup_size) / 1u), _GLF_IDENTITY(clamp(_GLF_IDENTITY(subgroup_size, (subgroup_size) / 1u), _GLF_IDENTITY(subgroup_size, (subgroup_size) / 1u), _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (subgroup_size) / 1u), max(_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY((subgroup_size) / 1u, ((subgroup_size) / 1u) / 1u)), _GLF_IDENTITY(subgroup_size, (subgroup_size) / _GLF_IDENTITY(1u, (1u) | (1u)))))), (clamp(_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(uint(uvec4(_GLF_IDENTITY(subgroup_size, 0u | (subgroup_size)), uint(_GLF_ZERO(0.0, injectionSwitch.x)), 0u, (0u | 0u))), ~ (~ (_GLF_IDENTITY(uint(uvec4(_GLF_IDENTITY(subgroup_size, 0u | (subgroup_size)), uint(_GLF_ZERO(0.0, injectionSwitch.x)), 0u, (0u | 0u))), (uint(uvec4(_GLF_IDENTITY(subgroup_size, 0u | (subgroup_size)), uint(_GLF_ZERO(0.0, injectionSwitch.x)), 0u, (0u | 0u)))) | 0u)))))) / 1u), _GLF_IDENTITY(subgroup_size, (subgroup_size) / 1u), _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (subgroup_size) / 1u), max(_GLF_IDENTITY(subgroup_size, (subgroup_size) / 1u), _GLF_IDENTITY(subgroup_size, (subgroup_size) / 1u))))) / uint(_GLF_ONE(1.0, injectionSwitch.y)))))), 1u)))) | ((uint(uvec2(_GLF_IDENTITY(subgroup_size, (subgroup_size) / 1u), 1u))) | (uint(uvec2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, max(subgroup_size, _GLF_IDENTITY(subgroup_size, uint(uvec4(subgroup_size, 1u, 0u, 0u)))))) | (subgroup_size))) / 1u), _GLF_IDENTITY(clamp(_GLF_IDENTITY(subgroup_size, (subgroup_size) / 1u), _GLF_IDENTITY(subgroup_size, (subgroup_size) / 1u), _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (subgroup_size) / 1u), max(_GLF_IDENTITY(subgroup_size, (subgroup_size) / 1u), _GLF_IDENTITY(subgroup_size, (subgroup_size) / _GLF_IDENTITY(1u, (1u) | (1u)))))), (clamp(_GLF_IDENTITY(subgroup_size, (subgroup_size) / 1u), _GLF_IDENTITY(subgroup_size, (subgroup_size) / 1u), _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (subgroup_size) / 1u), max(_GLF_IDENTITY(subgroup_size, (subgroup_size) / _GLF_IDENTITY(1u, 0u | (1u))), _GLF_IDENTITY(subgroup_size, (subgroup_size) / 1u))))) / uint(_GLF_ONE(1.0, injectionSwitch.y)))), (false ? _GLF_FUZZED(workgroup_size) : _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (subgroup_size) / 1u), _GLF_IDENTITY(clamp(_GLF_IDENTITY(subgroup_size, (subgroup_size) / 1u), _GLF_IDENTITY(subgroup_size, (subgroup_size) / 1u), _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (subgroup_size) / 1u), max(_GLF_IDENTITY(subgroup_size, (subgroup_size) / 1u), _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (subgroup_size) / _GLF_IDENTITY(1u, (1u) | (1u))), (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (subgroup_size) / _GLF_IDENTITY(1u, (1u) | (1u))), max(_GLF_IDENTITY(subgroup_size, (subgroup_size) / _GLF_IDENTITY(1u, (1u) | (1u))), _GLF_IDENTITY(subgroup_size, (subgroup_size) / _GLF_IDENTITY(1u, (1u) | (1u)))))) + 0u)))), (clamp(_GLF_IDENTITY(subgroup_size, (subgroup_size) / 1u), _GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, (subgroup_size) - 0u)) + 0u)) + 0u)) / 1u), _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (subgroup_size) / 1u), max(_GLF_IDENTITY(subgroup_size, (subgroup_size) / 1u), _GLF_IDENTITY(subgroup_size, (subgroup_size) / 1u))))) / uint(_GLF_ONE(1.0, injectionSwitch.y)))))), 1u))))), (uint(uvec2(_GLF_IDENTITY(subgroup_size, (subgroup_size) / 1u), 1u))) | (uint(uvec2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (subgroup_size) >> 0u), (_GLF_IDENTITY(subgroup_size, (subgroup_size) | (subgroup_size))) / 1u), _GLF_IDENTITY(clamp(_GLF_IDENTITY(subgroup_size, (subgroup_size) / 1u), _GLF_IDENTITY(subgroup_size, (subgroup_size) / 1u), _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (subgroup_size) / 1u), max(_GLF_IDENTITY(subgroup_size, (subgroup_size) / 1u), _GLF_IDENTITY(subgroup_size, (subgroup_size) / _GLF_IDENTITY(1u, (1u) | (1u)))))), (clamp(_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY((subgroup_size) / 1u, clamp((subgroup_size) / 1u, _GLF_IDENTITY((subgroup_size) / 1u, ~ (_GLF_IDENTITY(~ ((subgroup_size) / 1u), (~ ((subgroup_size) / 1u)) << 0u))), (subgroup_size) / 1u))), _GLF_IDENTITY(subgroup_size, (subgroup_size) / 1u), _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (subgroup_size) / 1u), max(_GLF_IDENTITY(subgroup_size, (subgroup_size) / 1u), _GLF_IDENTITY(subgroup_size, (subgroup_size) / 1u))))) / uint(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, 1.0 * (injectionSwitch.y)))))), (false ? _GLF_FUZZED(workgroup_size) : _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (subgroup_size) / 1u), max(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (subgroup_size) / 1u), max(_GLF_IDENTITY(subgroup_size, (subgroup_size) / 1u), _GLF_IDENTITY(subgroup_size, (subgroup_size) / 1u))), _GLF_IDENTITY(subgroup_size, (subgroup_size) / 1u))), _GLF_IDENTITY(clamp(_GLF_IDENTITY(subgroup_size, (subgroup_size) / 1u), _GLF_IDENTITY(subgroup_size, _GLF_IDENTITY((subgroup_size), min((subgroup_size), (subgroup_size))) / 1u), _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (subgroup_size) / 1u), max(_GLF_IDENTITY(subgroup_size, (subgroup_size) / 1u), _GLF_IDENTITY(subgroup_size, (subgroup_size) / _GLF_IDENTITY(1u, (1u) | (1u)))))), (clamp(_GLF_IDENTITY(subgroup_size, (subgroup_size) / 1u), _GLF_IDENTITY(subgroup_size, (subgroup_size) / 1u), _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (subgroup_size) / 1u), max(_GLF_IDENTITY(subgroup_size, (subgroup_size) / 1u), _GLF_IDENTITY(subgroup_size, (subgroup_size) / 1u))))) / uint(_GLF_ONE(1.0, injectionSwitch.y)))))), 1u))))))))));
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), false || (_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), ! (! (! ((injectionSwitch.x > injectionSwitch.y))))))))))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY((_GLF_DEAD(false)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true && (_GLF_IDENTITY((_GLF_DEAD(false)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false || ((_GLF_DEAD(false)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       barrier();
      }
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(_GLF_IDENTITY(bvec2((injectionSwitch.x > injectionSwitch.y), true), _GLF_IDENTITY(bvec2(bvec2(bvec2((injectionSwitch.x > injectionSwitch.y), true))), bvec2(bvec4(bvec2(bvec2(bvec2((injectionSwitch.x > injectionSwitch.y), true))), false, false)))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(_GLF_IDENTITY(bvec2((injectionSwitch.x > injectionSwitch.y), true), bvec2(bvec2(bvec2((injectionSwitch.x > injectionSwitch.y), true)))))), bool(bvec4(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(_GLF_IDENTITY(bvec2((injectionSwitch.x > injectionSwitch.y), true), bvec2(bvec2(bvec2((injectionSwitch.x > injectionSwitch.y), true)))))), false, false, false))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(_GLF_IDENTITY(bvec2((injectionSwitch.x > injectionSwitch.y), true), bvec2(bvec2(bvec2((injectionSwitch.x > injectionSwitch.y), true)))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), bool(bvec3(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(_GLF_IDENTITY(bvec2((injectionSwitch.x > injectionSwitch.y), true), bvec2(bvec2(bvec2((injectionSwitch.x > injectionSwitch.y), true)))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), false, true))), true, true, false)))) && true)))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))))))) || false), bool(bvec3(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false), true, false))))))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(4952.0801)), float(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x))), bool(true))) > injectionSwitch.y, ! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), bool(bvec4(_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), (! (injectionSwitch.x > injectionSwitch.y)) && true), false, false, false)))))))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false), ! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false))))) && true)))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))), bool(bvec3(_GLF_DEAD(false), true, _GLF_IDENTITY(true, (true) && true)))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 uint read_1 = atomicLoad(buf[virtual_gid], _GLF_IDENTITY(4, max(4, 4)), _GLF_IDENTITY(64, clamp(_GLF_IDENTITY(_GLF_IDENTITY(64, 0 | (_GLF_IDENTITY(64, max(64, 64)))), ~ (~ (_GLF_IDENTITY(64, 0 | (_GLF_IDENTITY(64, max(64, 64))))))), 64, 64)), 0);
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))))))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 atomicStore(buf[next_virtual_gid], uint(_GLF_IDENTITY(read_1, (true ? read_1 : _GLF_FUZZED(read_1))) + _GLF_IDENTITY(1, min(_GLF_IDENTITY(1, _GLF_IDENTITY((1), _GLF_IDENTITY(((1)) | (_GLF_IDENTITY((1), ((1)) << 0)), (((1)) | (_GLF_IDENTITY(_GLF_IDENTITY((1), ((1)) / 1), ((1)) << 0))) - (-40793 & 0))) * 1), 1))), 4, 64, 4);
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint read_2 = atomicLoad(_GLF_IDENTITY(_GLF_IDENTITY(buf[virtual_gid], _GLF_IDENTITY(max(buf[virtual_gid], _GLF_IDENTITY(_GLF_IDENTITY(buf[virtual_gid], (_GLF_IDENTITY(buf[virtual_gid], (buf[virtual_gid]) - 0u)) - 0u), (0u | _GLF_IDENTITY(0u, uint(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (0u))) + (_GLF_IDENTITY(buf[virtual_gid], (_GLF_IDENTITY(buf[virtual_gid], (buf[_GLF_IDENTITY(virtual_gid, _GLF_IDENTITY(0u, (0u) >> 0u) ^ (virtual_gid))]) - 0u)) - 0u)))), 0u + (_GLF_IDENTITY(_GLF_IDENTITY(max(buf[virtual_gid], _GLF_IDENTITY(buf[virtual_gid], _GLF_IDENTITY((_GLF_IDENTITY(buf[virtual_gid], (buf[virtual_gid]) - 0u)) - 0u, max((_GLF_IDENTITY(buf[virtual_gid], (buf[virtual_gid]) - _GLF_IDENTITY(0u, min(_GLF_IDENTITY(0u, uint(uvec4(0u, 0u, 1u, 1u))), 0u)))) - 0u, (_GLF_IDENTITY(buf[virtual_gid], (_GLF_IDENTITY(buf[_GLF_IDENTITY(virtual_gid, (virtual_gid) + 0u)], (_GLF_IDENTITY(buf[virtual_gid], max(buf[virtual_gid], _GLF_IDENTITY(buf[virtual_gid], (buf[virtual_gid]) | 0u)))) | 0u)) - 0u)) - 0u)))), _GLF_IDENTITY((max(buf[virtual_gid], _GLF_IDENTITY(buf[virtual_gid], (_GLF_IDENTITY(buf[virtual_gid], (buf[virtual_gid]) - 0u)) - 0u))), ~ (~ ((max(buf[virtual_gid], _GLF_IDENTITY(buf[virtual_gid], (_GLF_IDENTITY(buf[virtual_gid], (buf[virtual_gid]) - 0u)) - 0u)))))) - 0u), _GLF_IDENTITY((_GLF_IDENTITY(max(buf[virtual_gid], _GLF_IDENTITY(buf[virtual_gid], _GLF_IDENTITY((_GLF_IDENTITY(buf[virtual_gid], (buf[virtual_gid]) - 0u)), min((_GLF_IDENTITY(buf[virtual_gid], (buf[virtual_gid]) - 0u)), _GLF_IDENTITY((_GLF_IDENTITY(buf[virtual_gid], (buf[virtual_gid]) - 0u)), ~ (~ ((_GLF_IDENTITY(buf[virtual_gid], (buf[virtual_gid]) - 0u))))))) - 0u)), (max(buf[virtual_gid], _GLF_IDENTITY(_GLF_IDENTITY(buf[virtual_gid], _GLF_IDENTITY((_GLF_IDENTITY(buf[virtual_gid], _GLF_IDENTITY((_GLF_IDENTITY(buf[virtual_gid], (buf[virtual_gid]) ^ 0u)), max((_GLF_IDENTITY(buf[_GLF_IDENTITY(virtual_gid, (false ? _GLF_FUZZED(subgroup_size) : virtual_gid))], ~ (~ (buf[virtual_gid])))), (buf[virtual_gid]))) - 0u)), (false ? _GLF_FUZZED(num_workgroup) : (_GLF_IDENTITY(buf[virtual_gid], _GLF_IDENTITY((_GLF_IDENTITY(buf[virtual_gid], (buf[virtual_gid]) ^ 0u)), max((buf[virtual_gid]), (buf[virtual_gid]))) - 0u)))) - 0u), (_GLF_IDENTITY(buf[virtual_gid], _GLF_IDENTITY((_GLF_IDENTITY(buf[virtual_gid], _GLF_IDENTITY((_GLF_IDENTITY(buf[virtual_gid], (buf[virtual_gid]) ^ 0u)), max((_GLF_IDENTITY(buf[_GLF_IDENTITY(virtual_gid, (false ? _GLF_FUZZED(subgroup_size) : virtual_gid))], ~ (~ (buf[virtual_gid])))), (buf[virtual_gid]))) - 0u)), (false ? _GLF_FUZZED(num_workgroup) : (_GLF_IDENTITY(buf[virtual_gid], _GLF_IDENTITY((_GLF_IDENTITY(buf[virtual_gid], (buf[virtual_gid]) ^ 0u)), max((buf[virtual_gid]), (buf[virtual_gid]))) - 0u)))) - 0u)) | (0u ^ 0u)))) / 1u)) >> 0u, uint(_GLF_IDENTITY(uvec4((_GLF_IDENTITY(max(buf[virtual_gid], _GLF_IDENTITY(buf[virtual_gid], (_GLF_IDENTITY(buf[virtual_gid], (buf[virtual_gid]) - 0u)) - 0u)), _GLF_IDENTITY((max(_GLF_IDENTITY(buf[virtual_gid], 0u ^ (buf[virtual_gid])), _GLF_IDENTITY(buf[virtual_gid], _GLF_IDENTITY((_GLF_IDENTITY(buf[virtual_gid], _GLF_IDENTITY((_GLF_IDENTITY(buf[virtual_gid], (buf[virtual_gid]) ^ 0u)), max((buf[virtual_gid]), (buf[virtual_gid]))) - 0u)), (false ? _GLF_FUZZED(num_workgroup) : (_GLF_IDENTITY(buf[virtual_gid], _GLF_IDENTITY((_GLF_IDENTITY(buf[virtual_gid], (buf[virtual_gid]) ^ 0u)), max((buf[virtual_gid]), (buf[virtual_gid]))) - 0u)))) - 0u))) / 1u, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? (max(_GLF_IDENTITY(buf[virtual_gid], 0u ^ (buf[virtual_gid])), _GLF_IDENTITY(buf[virtual_gid], _GLF_IDENTITY((_GLF_IDENTITY(buf[virtual_gid], _GLF_IDENTITY((_GLF_IDENTITY(buf[virtual_gid], (buf[virtual_gid]) ^ 0u)), max((buf[virtual_gid]), (buf[virtual_gid]))) - 0u)), (false ? _GLF_FUZZED(num_workgroup) : (_GLF_IDENTITY(buf[virtual_gid], _GLF_IDENTITY((_GLF_IDENTITY(buf[virtual_gid], (buf[virtual_gid]) ^ 0u)), max((buf[virtual_gid]), (buf[virtual_gid]))) - 0u)))) - 0u))) / 1u : _GLF_FUZZED(subgroup_size))))) >> 0u, (0u | 0u), (0u | 0u), 1u), (uvec4((_GLF_IDENTITY(max(buf[virtual_gid], _GLF_IDENTITY(buf[virtual_gid], (_GLF_IDENTITY(buf[virtual_gid], (buf[virtual_gid]) - 0u)) - 0u)), (max(buf[virtual_gid], _GLF_IDENTITY(buf[virtual_gid], _GLF_IDENTITY((_GLF_IDENTITY(buf[virtual_gid], _GLF_IDENTITY((_GLF_IDENTITY(buf[_GLF_IDENTITY(virtual_gid, min(_GLF_IDENTITY(virtual_gid, ~ (~ (virtual_gid))), virtual_gid))], (buf[virtual_gid]) ^ 0u)), max((buf[virtual_gid]), (buf[_GLF_IDENTITY(virtual_gid, (virtual_gid) | 0u)]))) - 0u)), (false ? _GLF_FUZZED(num_workgroup) : _GLF_IDENTITY((_GLF_IDENTITY(buf[virtual_gid], _GLF_IDENTITY((_GLF_IDENTITY(buf[virtual_gid], (buf[virtual_gid]) ^ 0u)), max((buf[virtual_gid]), (buf[virtual_gid]))) - 0u)), _GLF_IDENTITY(((_GLF_IDENTITY(buf[virtual_gid], _GLF_IDENTITY((_GLF_IDENTITY(buf[virtual_gid], (buf[virtual_gid]) ^ 0u)), max((buf[virtual_gid]), (buf[virtual_gid]))) - _GLF_IDENTITY(0u, (0u) >> 0u)))), 0u | (((_GLF_IDENTITY(buf[virtual_gid], _GLF_IDENTITY((_GLF_IDENTITY(buf[virtual_gid], (buf[virtual_gid]) ^ 0u)), max((buf[virtual_gid]), (buf[virtual_gid]))) - _GLF_IDENTITY(0u, (0u) >> 0u)))))) / 1u))) - 0u))) / 1u)) >> 0u, (0u | 0u), (_GLF_IDENTITY(0u | 0u, (_GLF_IDENTITY(0u | 0u, (0u | 0u) + 0u)) << 0u)), 1u)) << uvec4(0u, 0u, 0u, 0u)))))))), clamp(_GLF_IDENTITY(buf[virtual_gid], _GLF_IDENTITY(max(buf[virtual_gid], _GLF_IDENTITY(_GLF_IDENTITY(buf[virtual_gid], (_GLF_IDENTITY(buf[virtual_gid], (buf[virtual_gid]) - 0u)) - 0u), (0u | 0u) + (_GLF_IDENTITY(buf[virtual_gid], (_GLF_IDENTITY(buf[virtual_gid], (buf[_GLF_IDENTITY(virtual_gid, _GLF_IDENTITY(0u, (0u) >> 0u) ^ (virtual_gid))]) - 0u)) - 0u)))), 0u + (_GLF_IDENTITY(_GLF_IDENTITY(max(buf[virtual_gid], _GLF_IDENTITY(buf[virtual_gid], _GLF_IDENTITY((_GLF_IDENTITY(buf[virtual_gid], (buf[virtual_gid]) - 0u)) - 0u, max((_GLF_IDENTITY(buf[virtual_gid], (buf[virtual_gid]) - 0u)) - 0u, (_GLF_IDENTITY(buf[virtual_gid], (_GLF_IDENTITY(buf[virtual_gid], (_GLF_IDENTITY(buf[virtual_gid], max(buf[virtual_gid], _GLF_IDENTITY(buf[virtual_gid], (buf[virtual_gid]) | 0u)))) | 0u)) - 0u)) - 0u)))), (max(buf[virtual_gid], _GLF_IDENTITY(buf[virtual_gid], (_GLF_IDENTITY(buf[virtual_gid], (buf[virtual_gid]) - 0u)) - _GLF_IDENTITY(0u, 0u + (0u))))) - 0u), _GLF_IDENTITY((_GLF_IDENTITY(max(buf[virtual_gid], _GLF_IDENTITY(buf[virtual_gid], (_GLF_IDENTITY(buf[virtual_gid], (buf[virtual_gid]) - 0u)) - 0u)), (max(buf[virtual_gid], _GLF_IDENTITY(buf[virtual_gid], _GLF_IDENTITY((_GLF_IDENTITY(buf[virtual_gid], _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(buf[virtual_gid], (buf[virtual_gid]) / 1u), (buf[virtual_gid]) ^ 0u)), max((_GLF_IDENTITY(buf[_GLF_IDENTITY(virtual_gid, (_GLF_IDENTITY(false, (false) || _GLF_IDENTITY(false, (false) && true)) ? _GLF_FUZZED(subgroup_size) : virtual_gid))], ~ (~ (buf[virtual_gid])))), (buf[virtual_gid]))) - 0u)), (false ? _GLF_FUZZED(num_workgroup) : (_GLF_IDENTITY(buf[virtual_gid], _GLF_IDENTITY((_GLF_IDENTITY(buf[virtual_gid], (buf[virtual_gid]) ^ 0u)), max((buf[virtual_gid]), (buf[virtual_gid]))) - 0u)))) - 0u))) / 1u)) >> 0u, uint(_GLF_IDENTITY(uvec4((_GLF_IDENTITY(max(buf[virtual_gid], _GLF_IDENTITY(buf[virtual_gid], (_GLF_IDENTITY(buf[virtual_gid], (buf[virtual_gid]) - 0u)) - 0u)), _GLF_IDENTITY((max(buf[virtual_gid], _GLF_IDENTITY(buf[virtual_gid], _GLF_IDENTITY((_GLF_IDENTITY(buf[virtual_gid], _GLF_IDENTITY((_GLF_IDENTITY(buf[virtual_gid], (buf[virtual_gid]) ^ 0u)), max((buf[virtual_gid]), (buf[virtual_gid]))) - 0u)), (false ? _GLF_FUZZED(num_workgroup) : (_GLF_IDENTITY(buf[virtual_gid], _GLF_IDENTITY((_GLF_IDENTITY(buf[virtual_gid], (buf[virtual_gid]) ^ 0u)), max((buf[virtual_gid]), (buf[virtual_gid]))) - 0u)))) - 0u))), _GLF_IDENTITY((_GLF_IDENTITY((max(buf[virtual_gid], _GLF_IDENTITY(buf[virtual_gid], _GLF_IDENTITY((_GLF_IDENTITY(buf[virtual_gid], _GLF_IDENTITY((_GLF_IDENTITY(buf[virtual_gid], (buf[virtual_gid]) ^ 0u)), max((buf[virtual_gid]), (buf[virtual_gid]))) - 0u)), (false ? _GLF_FUZZED(num_workgroup) : (_GLF_IDENTITY(buf[virtual_gid], _GLF_IDENTITY((_GLF_IDENTITY(buf[virtual_gid], (buf[virtual_gid]) ^ 0u)), max((buf[virtual_gid]), (buf[virtual_gid]))) - 0u)))) - 0u))), ((max(buf[virtual_gid], _GLF_IDENTITY(buf[virtual_gid], _GLF_IDENTITY((_GLF_IDENTITY(buf[virtual_gid], _GLF_IDENTITY((_GLF_IDENTITY(buf[virtual_gid], (buf[virtual_gid]) ^ 0u)), max((buf[virtual_gid]), (buf[virtual_gid]))) - 0u)), (false ? _GLF_FUZZED(num_workgroup) : (_GLF_IDENTITY(buf[virtual_gid], _GLF_IDENTITY((_GLF_IDENTITY(buf[virtual_gid], (buf[virtual_gid]) ^ 0u)), max((buf[virtual_gid]), (buf[virtual_gid]))) - 0u)))) - 0u)))) | 0u)), ((_GLF_IDENTITY((max(buf[virtual_gid], _GLF_IDENTITY(buf[virtual_gid], _GLF_IDENTITY((_GLF_IDENTITY(buf[virtual_gid], _GLF_IDENTITY((_GLF_IDENTITY(buf[virtual_gid], (buf[virtual_gid]) ^ 0u)), max((buf[virtual_gid]), (buf[virtual_gid]))) - 0u)), (false ? _GLF_FUZZED(num_workgroup) : (_GLF_IDENTITY(buf[virtual_gid], _GLF_IDENTITY((_GLF_IDENTITY(buf[virtual_gid], (buf[virtual_gid]) ^ 0u)), max((buf[virtual_gid]), (buf[virtual_gid]))) - 0u)))) - 0u))), ((max(buf[virtual_gid], _GLF_IDENTITY(buf[virtual_gid], _GLF_IDENTITY((_GLF_IDENTITY(buf[virtual_gid], _GLF_IDENTITY((_GLF_IDENTITY(buf[virtual_gid], (buf[virtual_gid]) ^ 0u)), max((buf[virtual_gid]), (buf[virtual_gid]))) - 0u)), (false ? _GLF_FUZZED(num_workgroup) : (_GLF_IDENTITY(buf[virtual_gid], _GLF_IDENTITY((_GLF_IDENTITY(buf[virtual_gid], (buf[virtual_gid]) ^ 0u)), max((buf[virtual_gid]), (buf[virtual_gid]))) - 0u)))) - 0u)))) | 0u))) | (0u >> _GLF_IDENTITY(uint(8u), _GLF_IDENTITY(uint(8u), uint(uvec3(uint(8u), 0u, 1u)))))) * 1u) / 1u)) >> 0u, (0u | 0u), (0u | 0u), 1u), _GLF_IDENTITY((uvec4((_GLF_IDENTITY(max(buf[virtual_gid], _GLF_IDENTITY(buf[virtual_gid], (_GLF_IDENTITY(buf[virtual_gid], (buf[virtual_gid]) - 0u)) - 0u)), (max(buf[virtual_gid], _GLF_IDENTITY(buf[virtual_gid], _GLF_IDENTITY((_GLF_IDENTITY(buf[virtual_gid], _GLF_IDENTITY((_GLF_IDENTITY(buf[virtual_gid], (buf[virtual_gid]) ^ 0u)), max((buf[virtual_gid]), (buf[_GLF_IDENTITY(virtual_gid, (virtual_gid) | 0u)]))) - 0u)), (false ? _GLF_FUZZED(num_workgroup) : _GLF_IDENTITY((_GLF_IDENTITY(buf[virtual_gid], _GLF_IDENTITY((_GLF_IDENTITY(buf[virtual_gid], (buf[virtual_gid]) ^ 0u)), max((buf[virtual_gid]), (buf[virtual_gid]))) - 0u)), ((_GLF_IDENTITY(_GLF_IDENTITY(buf[virtual_gid], _GLF_IDENTITY((_GLF_IDENTITY(buf[virtual_gid], (buf[virtual_gid]) ^ 0u)), max((buf[virtual_gid]), (buf[virtual_gid]))) - 0u), ~ (~ (_GLF_IDENTITY(buf[virtual_gid], _GLF_IDENTITY((_GLF_IDENTITY(buf[virtual_gid], (buf[virtual_gid]) ^ 0u)), max((buf[virtual_gid]), (buf[virtual_gid]))) - 0u)))))) / 1u))) - 0u))) / 1u)) >> 0u, (0u | 0u), (_GLF_IDENTITY(0u | 0u, (_GLF_IDENTITY(0u | 0u, (0u | 0u) + 0u)) << 0u)), 1u)) << uvec4(0u, 0u, 0u, 0u), (_GLF_IDENTITY((uvec4((_GLF_IDENTITY(max(buf[virtual_gid], _GLF_IDENTITY(buf[virtual_gid], (_GLF_IDENTITY(buf[virtual_gid], (buf[virtual_gid]) - 0u)) - 0u)), (max(buf[virtual_gid], _GLF_IDENTITY(buf[virtual_gid], _GLF_IDENTITY((_GLF_IDENTITY(buf[virtual_gid], _GLF_IDENTITY((_GLF_IDENTITY(buf[virtual_gid], (buf[virtual_gid]) ^ 0u)), max((buf[virtual_gid]), (buf[_GLF_IDENTITY(virtual_gid, (virtual_gid) | 0u)]))) - 0u)), (false ? _GLF_FUZZED(num_workgroup) : _GLF_IDENTITY((_GLF_IDENTITY(buf[virtual_gid], _GLF_IDENTITY((_GLF_IDENTITY(buf[virtual_gid], (buf[virtual_gid]) ^ 0u)), max((buf[virtual_gid]), (buf[virtual_gid]))) - 0u)), ((_GLF_IDENTITY(buf[virtual_gid], _GLF_IDENTITY((_GLF_IDENTITY(buf[virtual_gid], (buf[virtual_gid]) ^ 0u)), max((buf[virtual_gid]), (buf[virtual_gid]))) - 0u))) / 1u))) - 0u))) / 1u)) >> 0u, (0u | 0u), (_GLF_IDENTITY(0u | 0u, (_GLF_IDENTITY(0u | 0u, (0u | 0u) + 0u)) << 0u)), 1u)) << uvec4(0u, 0u, 0u, 0u), ((uvec4((_GLF_IDENTITY(max(buf[virtual_gid], _GLF_IDENTITY(buf[virtual_gid], (_GLF_IDENTITY(buf[virtual_gid], (buf[virtual_gid]) - 0u)) - 0u)), (max(buf[virtual_gid], _GLF_IDENTITY(buf[virtual_gid], _GLF_IDENTITY((_GLF_IDENTITY(buf[virtual_gid], _GLF_IDENTITY((_GLF_IDENTITY(buf[virtual_gid], (buf[virtual_gid]) ^ 0u)), max((buf[virtual_gid]), (buf[_GLF_IDENTITY(virtual_gid, (virtual_gid) | 0u)]))) - 0u)), (false ? _GLF_FUZZED(num_workgroup) : _GLF_IDENTITY((_GLF_IDENTITY(buf[virtual_gid], _GLF_IDENTITY((_GLF_IDENTITY(buf[virtual_gid], (buf[virtual_gid]) ^ 0u)), max((buf[virtual_gid]), (buf[virtual_gid]))) - 0u)), ((_GLF_IDENTITY(buf[virtual_gid], _GLF_IDENTITY((_GLF_IDENTITY(buf[virtual_gid], (buf[virtual_gid]) ^ 0u)), max((buf[virtual_gid]), (buf[virtual_gid]))) - 0u))) / 1u))) - 0u))) / 1u)) >> 0u, (0u | 0u), (_GLF_IDENTITY(0u | 0u, (_GLF_IDENTITY(0u | 0u, (0u | 0u) + 0u)) << 0u)), 1u)) << uvec4(0u, 0u, 0u, 0u)) << uvec4(0u, 0u, 0u, 0u))) >> uvec4(0u, 0u, 0u, 0u))))))))), _GLF_IDENTITY(buf[virtual_gid], _GLF_IDENTITY(max(buf[virtual_gid], _GLF_IDENTITY(_GLF_IDENTITY(buf[virtual_gid], (_GLF_IDENTITY(buf[virtual_gid], (buf[virtual_gid]) - 0u)) - 0u), (0u | 0u) + _GLF_IDENTITY((_GLF_IDENTITY(buf[virtual_gid], (_GLF_IDENTITY(buf[virtual_gid], (buf[_GLF_IDENTITY(virtual_gid, _GLF_IDENTITY(0u, (0u) >> 0u) ^ (virtual_gid))]) - 0u)) - 0u)), ~ (~ ((_GLF_IDENTITY(buf[virtual_gid], (_GLF_IDENTITY(buf[virtual_gid], (buf[_GLF_IDENTITY(virtual_gid, _GLF_IDENTITY(0u, (0u) >> 0u) ^ (virtual_gid))]) - 0u)) - 0u))))))), 0u + (_GLF_IDENTITY(_GLF_IDENTITY(max(buf[virtual_gid], _GLF_IDENTITY(buf[virtual_gid], _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(buf[virtual_gid], (buf[virtual_gid]) - 0u)), (_GLF_IDENTITY((_GLF_IDENTITY(buf[virtual_gid], (buf[virtual_gid]) - 0u)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(143409u) : (_GLF_IDENTITY(buf[virtual_gid], (buf[virtual_gid]) - 0u))))) + 0u) - 0u, max((_GLF_IDENTITY(buf[virtual_gid], (buf[virtual_gid]) - 0u)) - 0u, (_GLF_IDENTITY(buf[virtual_gid], _GLF_IDENTITY((_GLF_IDENTITY(buf[virtual_gid], (_GLF_IDENTITY(buf[virtual_gid], max(buf[virtual_gid], _GLF_IDENTITY(buf[virtual_gid], (buf[virtual_gid]) | 0u)))) | 0u)), min((_GLF_IDENTITY(buf[virtual_gid], (_GLF_IDENTITY(buf[virtual_gid], max(buf[virtual_gid], _GLF_IDENTITY(buf[virtual_gid], (buf[virtual_gid]) | 0u)))) | 0u)), (_GLF_IDENTITY(buf[virtual_gid], (_GLF_IDENTITY(buf[virtual_gid], max(buf[virtual_gid], _GLF_IDENTITY(buf[virtual_gid], (buf[virtual_gid]) | 0u)))) | 0u)))) - 0u)) - 0u)))), (max(buf[virtual_gid], _GLF_IDENTITY(buf[virtual_gid], (_GLF_IDENTITY(buf[virtual_gid], (buf[virtual_gid]) - 0u)) - 0u))) - 0u), _GLF_IDENTITY((_GLF_IDENTITY(max(buf[virtual_gid], _GLF_IDENTITY(buf[virtual_gid], (_GLF_IDENTITY(buf[virtual_gid], (buf[virtual_gid]) - 0u)) - 0u)), (max(buf[virtual_gid], _GLF_IDENTITY(buf[virtual_gid], _GLF_IDENTITY((_GLF_IDENTITY(buf[virtual_gid], _GLF_IDENTITY((_GLF_IDENTITY(buf[virtual_gid], (buf[virtual_gid]) ^ 0u)), max((_GLF_IDENTITY(buf[_GLF_IDENTITY(virtual_gid, (false ? _GLF_FUZZED(subgroup_size) : virtual_gid))], ~ (~ (buf[virtual_gid])))), (buf[virtual_gid]))) - 0u)), (false ? _GLF_FUZZED(_GLF_IDENTITY(num_workgroup, ~ (~ (num_workgroup)))) : (_GLF_IDENTITY(buf[virtual_gid], _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(buf[virtual_gid], (buf[virtual_gid]) ^ 0u), (_GLF_IDENTITY(buf[virtual_gid], (buf[virtual_gid]) ^ 0u)) | (_GLF_IDENTITY(buf[virtual_gid], (buf[virtual_gid]) ^ 0u)))), max((buf[virtual_gid]), (buf[virtual_gid]))) - 0u)))) - 0u))) / 1u)) >> 0u, uint(_GLF_IDENTITY(uvec4((_GLF_IDENTITY(max(buf[virtual_gid], _GLF_IDENTITY(buf[virtual_gid], (_GLF_IDENTITY(_GLF_IDENTITY(buf[virtual_gid], (buf[virtual_gid]) / 1u), (_GLF_IDENTITY(buf[virtual_gid], (0u >> _GLF_IDENTITY(uint(8u), uint(8u))) | (buf[virtual_gid]))) - _GLF_IDENTITY(0u, (0u >> _GLF_IDENTITY(uint(8u), uint(8u))) ^ (0u)))) - 0u)), (max(buf[virtual_gid], _GLF_IDENTITY(buf[virtual_gid], _GLF_IDENTITY((_GLF_IDENTITY(buf[virtual_gid], _GLF_IDENTITY((_GLF_IDENTITY(buf[virtual_gid], (buf[virtual_gid]) ^ 0u)), max((buf[virtual_gid]), (buf[virtual_gid]))) - 0u)), (false ? _GLF_FUZZED(num_workgroup) : (_GLF_IDENTITY(buf[virtual_gid], _GLF_IDENTITY((_GLF_IDENTITY(buf[virtual_gid], (buf[virtual_gid]) ^ 0u)), max((buf[virtual_gid]), (buf[virtual_gid]))) - 0u)))) - 0u))) / 1u)) >> 0u, (0u | 0u), (0u | 0u), 1u), _GLF_IDENTITY((uvec4((_GLF_IDENTITY(max(buf[virtual_gid], _GLF_IDENTITY(buf[virtual_gid], (_GLF_IDENTITY(buf[virtual_gid], (buf[virtual_gid]) - 0u)) - 0u)), (max(buf[virtual_gid], _GLF_IDENTITY(buf[virtual_gid], _GLF_IDENTITY((_GLF_IDENTITY(buf[virtual_gid], _GLF_IDENTITY((_GLF_IDENTITY(buf[virtual_gid], (buf[virtual_gid]) ^ 0u)), max((buf[virtual_gid]), (buf[_GLF_IDENTITY(virtual_gid, (virtual_gid) | 0u)]))) - _GLF_IDENTITY(0u, uint(_GLF_IDENTITY(uvec2(0u, 0u), uvec2(0u, 0u) | (uvec2(0u, 0u))))))), (false ? _GLF_FUZZED(num_workgroup) : _GLF_IDENTITY((_GLF_IDENTITY(buf[virtual_gid], _GLF_IDENTITY((_GLF_IDENTITY(buf[virtual_gid], (buf[_GLF_IDENTITY(virtual_gid, max(virtual_gid, _GLF_IDENTITY(virtual_gid, uint(uvec4(virtual_gid, 0u, 0u, 0u)))))]) ^ 0u)), max((buf[virtual_gid]), (buf[virtual_gid]))) - 0u)), ((_GLF_IDENTITY(buf[virtual_gid], _GLF_IDENTITY((_GLF_IDENTITY(buf[virtual_gid], (buf[virtual_gid]) ^ 0u)), max((buf[virtual_gid]), (buf[virtual_gid]))) - 0u))) / 1u))) - 0u))) / 1u)) >> 0u, (0u | 0u), (_GLF_IDENTITY(0u | 0u, (_GLF_IDENTITY(0u | 0u, (0u | 0u) + 0u)) << 0u)), 1u)), max((uvec4((_GLF_IDENTITY(max(buf[virtual_gid], _GLF_IDENTITY(buf[virtual_gid], (_GLF_IDENTITY(buf[virtual_gid], (buf[virtual_gid]) - 0u)) - 0u)), (max(buf[virtual_gid], _GLF_IDENTITY(buf[virtual_gid], _GLF_IDENTITY((_GLF_IDENTITY(buf[virtual_gid], _GLF_IDENTITY((_GLF_IDENTITY(buf[virtual_gid], (buf[virtual_gid]) ^ 0u)), max((buf[virtual_gid]), (buf[_GLF_IDENTITY(virtual_gid, (virtual_gid) | 0u)]))) - _GLF_IDENTITY(0u, uint(_GLF_IDENTITY(uvec2(0u, 0u), uvec2(0u, 0u) | (uvec2(0u, 0u))))))), (false ? _GLF_FUZZED(num_workgroup) : _GLF_IDENTITY((_GLF_IDENTITY(buf[virtual_gid], _GLF_IDENTITY((_GLF_IDENTITY(buf[virtual_gid], (buf[_GLF_IDENTITY(virtual_gid, max(virtual_gid, _GLF_IDENTITY(virtual_gid, uint(uvec4(virtual_gid, 0u, 0u, 0u)))))]) ^ 0u)), max((buf[virtual_gid]), (buf[virtual_gid]))) - 0u)), ((_GLF_IDENTITY(buf[virtual_gid], _GLF_IDENTITY((_GLF_IDENTITY(buf[virtual_gid], (buf[virtual_gid]) ^ 0u)), max((buf[virtual_gid]), (buf[virtual_gid]))) - 0u))) / 1u))) - 0u))) / 1u)) >> 0u, (0u | 0u), (_GLF_IDENTITY(0u | 0u, (_GLF_IDENTITY(0u | 0u, (0u | 0u) + 0u)) << 0u)), 1u)), (uvec4((_GLF_IDENTITY(max(buf[virtual_gid], _GLF_IDENTITY(buf[virtual_gid], (_GLF_IDENTITY(buf[virtual_gid], (buf[virtual_gid]) - 0u)) - 0u)), (max(buf[virtual_gid], _GLF_IDENTITY(buf[virtual_gid], _GLF_IDENTITY((_GLF_IDENTITY(buf[virtual_gid], _GLF_IDENTITY((_GLF_IDENTITY(buf[virtual_gid], (buf[virtual_gid]) ^ 0u)), max((buf[virtual_gid]), (buf[_GLF_IDENTITY(virtual_gid, (virtual_gid) | 0u)]))) - _GLF_IDENTITY(0u, uint(_GLF_IDENTITY(uvec2(0u, 0u), uvec2(0u, 0u) | (uvec2(0u, 0u))))))), (false ? _GLF_FUZZED(num_workgroup) : _GLF_IDENTITY((_GLF_IDENTITY(buf[virtual_gid], _GLF_IDENTITY((_GLF_IDENTITY(buf[virtual_gid], (buf[_GLF_IDENTITY(virtual_gid, max(virtual_gid, _GLF_IDENTITY(virtual_gid, uint(uvec4(virtual_gid, 0u, 0u, 0u)))))]) ^ 0u)), max((buf[virtual_gid]), (buf[virtual_gid]))) - 0u)), ((_GLF_IDENTITY(buf[virtual_gid], _GLF_IDENTITY((_GLF_IDENTITY(buf[virtual_gid], (buf[virtual_gid]) ^ 0u)), max((buf[virtual_gid]), (buf[virtual_gid]))) - 0u))) / 1u))) - 0u))) / 1u)) >> 0u, (0u | 0u), (_GLF_IDENTITY(0u | 0u, (_GLF_IDENTITY(0u | 0u, (0u | 0u) + 0u)) << 0u)), 1u)))) << uvec4(0u, 0u, 0u, 0u)))))))), _GLF_IDENTITY(buf[virtual_gid], _GLF_IDENTITY(_GLF_IDENTITY(max(buf[virtual_gid], _GLF_IDENTITY(_GLF_IDENTITY(buf[virtual_gid], (_GLF_IDENTITY(buf[virtual_gid], (buf[virtual_gid]) - 0u)) - 0u), (0u | 0u) + (_GLF_IDENTITY(buf[virtual_gid], (_GLF_IDENTITY(buf[virtual_gid], (buf[_GLF_IDENTITY(virtual_gid, _GLF_IDENTITY(0u, (0u) >> 0u) ^ (virtual_gid))]) - 0u)) - 0u)))), clamp(_GLF_IDENTITY(max(buf[virtual_gid], _GLF_IDENTITY(_GLF_IDENTITY(buf[virtual_gid], (_GLF_IDENTITY(buf[virtual_gid], (buf[virtual_gid]) - 0u)) - 0u), (0u | 0u) + (_GLF_IDENTITY(buf[virtual_gid], (_GLF_IDENTITY(buf[virtual_gid], (buf[_GLF_IDENTITY(virtual_gid, _GLF_IDENTITY(0u, (0u) >> 0u) ^ (virtual_gid))]) - 0u)) - 0u)))), uint(uvec2(max(buf[virtual_gid], _GLF_IDENTITY(_GLF_IDENTITY(buf[virtual_gid], (_GLF_IDENTITY(buf[virtual_gid], (buf[virtual_gid]) - 0u)) - 0u), (0u | 0u) + (_GLF_IDENTITY(buf[virtual_gid], (_GLF_IDENTITY(buf[virtual_gid], (buf[_GLF_IDENTITY(virtual_gid, _GLF_IDENTITY(0u, (0u) >> 0u) ^ (virtual_gid))]) - 0u)) - 0u)))), 1u))), max(buf[virtual_gid], _GLF_IDENTITY(_GLF_IDENTITY(buf[virtual_gid], (_GLF_IDENTITY(buf[virtual_gid], (buf[virtual_gid]) - 0u)) - 0u), (0u | 0u) + (_GLF_IDENTITY(buf[virtual_gid], (_GLF_IDENTITY(buf[virtual_gid], (buf[_GLF_IDENTITY(virtual_gid, _GLF_IDENTITY(0u, (0u) >> 0u) ^ (virtual_gid))]) - 0u)) - 0u)))), max(buf[virtual_gid], _GLF_IDENTITY(_GLF_IDENTITY(buf[virtual_gid], (_GLF_IDENTITY(buf[virtual_gid], (buf[virtual_gid]) - 0u)) - 0u), (0u | 0u) + (_GLF_IDENTITY(buf[virtual_gid], (_GLF_IDENTITY(buf[virtual_gid], (buf[_GLF_IDENTITY(virtual_gid, _GLF_IDENTITY(0u, (0u) >> 0u) ^ (virtual_gid))]) - 0u)) - 0u)))))), 0u + (_GLF_IDENTITY(_GLF_IDENTITY(max(buf[virtual_gid], _GLF_IDENTITY(buf[virtual_gid], _GLF_IDENTITY((_GLF_IDENTITY(buf[virtual_gid], (buf[virtual_gid]) - 0u)) - 0u, max((_GLF_IDENTITY(buf[virtual_gid], (buf[virtual_gid]) - 0u)) - 0u, (_GLF_IDENTITY(buf[virtual_gid], (_GLF_IDENTITY(buf[virtual_gid], (_GLF_IDENTITY(buf[virtual_gid], max(buf[virtual_gid], _GLF_IDENTITY(buf[virtual_gid], (buf[virtual_gid]) | 0u)))) | 0u)) - 0u)) - 0u)))), (max(_GLF_IDENTITY(buf[virtual_gid], min(buf[virtual_gid], buf[virtual_gid])), _GLF_IDENTITY(buf[_GLF_IDENTITY(virtual_gid, min(virtual_gid, virtual_gid))], (_GLF_IDENTITY(buf[virtual_gid], (buf[virtual_gid]) - 0u)) - 0u))) - 0u), _GLF_IDENTITY((_GLF_IDENTITY(max(buf[virtual_gid], _GLF_IDENTITY(buf[virtual_gid], (_GLF_IDENTITY(_GLF_IDENTITY(buf[virtual_gid], (buf[virtual_gid]) - 0u), (_GLF_IDENTITY(buf[virtual_gid], (buf[virtual_gid]) - 0u)) ^ 0u)) - 0u)), (max(buf[virtual_gid], _GLF_IDENTITY(buf[virtual_gid], _GLF_IDENTITY((_GLF_IDENTITY(buf[virtual_gid], _GLF_IDENTITY((_GLF_IDENTITY(buf[virtual_gid], (buf[virtual_gid]) ^ 0u)), max((_GLF_IDENTITY(buf[_GLF_IDENTITY(virtual_gid, (false ? _GLF_FUZZED(subgroup_size) : virtual_gid))], ~ (~ (buf[virtual_gid])))), (buf[virtual_gid]))) - 0u)), (false ? _GLF_FUZZED(num_workgroup) : (_GLF_IDENTITY(buf[virtual_gid], _GLF_IDENTITY((_GLF_IDENTITY(buf[virtual_gid], (buf[virtual_gid]) ^ 0u)), max((buf[virtual_gid]), (buf[virtual_gid]))) - 0u)))) - 0u))) / _GLF_IDENTITY(1u, clamp(1u, 1u, _GLF_IDENTITY(1u, uint(uvec4(1u, 1u, (0u << _GLF_IDENTITY(uint(2u), uint(2u))), 0u))))))) >> 0u, uint(_GLF_IDENTITY(uvec4((_GLF_IDENTITY(max(buf[virtual_gid], _GLF_IDENTITY(buf[virtual_gid], (_GLF_IDENTITY(buf[virtual_gid], (buf[virtual_gid]) - 0u)) - 0u)), (max(buf[virtual_gid], _GLF_IDENTITY(buf[virtual_gid], _GLF_IDENTITY((_GLF_IDENTITY(buf[virtual_gid], _GLF_IDENTITY((_GLF_IDENTITY(buf[virtual_gid], (buf[virtual_gid]) ^ 0u)), max((buf[virtual_gid]), (buf[virtual_gid]))) - 0u)), (false ? _GLF_FUZZED(num_workgroup) : (_GLF_IDENTITY(buf[virtual_gid], _GLF_IDENTITY((_GLF_IDENTITY(buf[virtual_gid], (buf[virtual_gid]) ^ 0u)), max((buf[virtual_gid]), (buf[virtual_gid]))) - 0u)))) - 0u))) / _GLF_IDENTITY(1u, uint(uint(1u))))) >> 0u, (0u | 0u), (0u | 0u), 1u), (uvec4((_GLF_IDENTITY(max(buf[virtual_gid], _GLF_IDENTITY(buf[virtual_gid], (_GLF_IDENTITY(buf[virtual_gid], (buf[virtual_gid]) - 0u)) - 0u)), (max(buf[virtual_gid], _GLF_IDENTITY(buf[virtual_gid], _GLF_IDENTITY((_GLF_IDENTITY(buf[virtual_gid], _GLF_IDENTITY((_GLF_IDENTITY(buf[virtual_gid], (buf[virtual_gid]) ^ 0u)), max((buf[virtual_gid]), (buf[_GLF_IDENTITY(virtual_gid, (virtual_gid) | 0u)]))) - 0u)), (false ? _GLF_FUZZED(num_workgroup) : _GLF_IDENTITY((_GLF_IDENTITY(buf[virtual_gid], _GLF_IDENTITY((_GLF_IDENTITY(buf[virtual_gid], (buf[virtual_gid]) ^ _GLF_IDENTITY(0u, uint(_GLF_IDENTITY(uint(0u), min(uint(0u), uint(0u))))))), max((buf[virtual_gid]), (buf[virtual_gid]))) - 0u)), ((_GLF_IDENTITY(buf[virtual_gid], _GLF_IDENTITY((_GLF_IDENTITY(buf[virtual_gid], (buf[virtual_gid]) ^ 0u)), max((buf[virtual_gid]), (buf[virtual_gid]))) - 0u))) / 1u))) - 0u))) / 1u)) >> 0u, (0u | 0u), (_GLF_IDENTITY(0u | 0u, (_GLF_IDENTITY(0u | 0u, (0u | 0u) + 0u)) << 0u)), 1u)) << uvec4(0u, 0u, 0u, 0u)))))))))), 4, 64, 0);
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, false, false, false)))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | (_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY((subgroup_local_id) | 0u, clamp(_GLF_IDENTITY((subgroup_local_id) | 0u, min((subgroup_local_id) | 0u, (subgroup_local_id) | 0u)), (subgroup_local_id) | 0u, (subgroup_local_id) | 0u))))) + 1 < subgroup_size)
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   int i = 0;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY((injectionSwitch.y), (true ? (injectionSwitch.y) : _GLF_FUZZED(5.2))) - 0.0), injectionSwitch.y))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, _GLF_IDENTITY(false, ! (! (false))) || (false)), true))), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), (false) && true)))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false), false || (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false)))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
        barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false))))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bool(false)))) && true)))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(false, bool(bvec4(false, false, false, true))) || (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! _GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), bool(bool(((injectionSwitch.x > injectionSwitch.y))))))))))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
       barrier();
      }
    }
   else
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     atomicStore(buf[next_virtual_gid], uint(_GLF_IDENTITY(read_1 + 1 == _GLF_IDENTITY(read_2, (true ? read_2 : _GLF_FUZZED(next_virtual_gid))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(read_1, (read_1) ^ (21198u & 0u)) + 1 == read_2), ! (! (! (_GLF_IDENTITY(read_1 + 1 == read_2, false || (_GLF_IDENTITY(read_1 + 1 == read_2, (_GLF_IDENTITY(read_1, uint(uvec2(read_1, 1u))) + 1 == read_2) && true)))))))))) + 1, 4, 64, 4);
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))))))
      barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, true && (false)))))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec2(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-87.69), _GLF_FUZZED((-57.95 * -4.1))), vec2((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch)[1], mix(float(_GLF_FUZZED(-8800.2992)), float((injectionSwitch)[1]), bool(true)))), bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))).x, float(vec3(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)), 0.0, 1.0))) > _GLF_IDENTITY(injectionSwitch, vec2(mat3(injectionSwitch, 0.0, log(1.0), 1.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0))).y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false))))))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec3(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))), false, true)))))))))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_DEAD(false), false, true))))
      barrier();
     barrier();
    }
  }
 else
  {
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! _GLF_IDENTITY((_GLF_IDENTITY(! (false), (! (false)) && true)), (_GLF_IDENTITY((_GLF_IDENTITY(! _GLF_IDENTITY((false), ! (! (_GLF_IDENTITY((false), ! (! ((false))))))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((! (false)), bool(bvec2((! (false)), false))) && true, bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(! (false), true && (_GLF_IDENTITY(! (false), ! (! (! (false))))))), bool(bvec2((! (false)), false))) && true, ! (! (_GLF_IDENTITY(_GLF_IDENTITY((! (false)), bool(bvec2((! (false)), false))) && true, _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY((! (false)), bool(bvec2((! (false)), false))) && true), ! (! (bool(_GLF_IDENTITY((! (false)), bool(bvec2((! (false)), false))) && true))))), true && (bool(_GLF_IDENTITY(bool(_GLF_IDENTITY((! (false)), bool(bvec2((! (false)), false))) && true), ! (! (bool(_GLF_IDENTITY((! (false)), bool(bvec2((! (false)), false))) && true))))))))))), false, true, false))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((! (false)), bool(bvec2(_GLF_IDENTITY((! (false)), false || ((! (false)))), false))) && true, bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY((! (false)), bool(bvec2((! (false)), false))) && true, ! (! (_GLF_IDENTITY((! (false)), bool(bvec2((! (false)), false))) && true))), false, true, false))), true && (_GLF_IDENTITY(_GLF_IDENTITY((! (false)), bool(bvec2((! (false)), false))) && true, bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY((! (false)), bool(bvec2((! (false)), false))) && true, ! (! (_GLF_IDENTITY((! (false)), bool(bvec2((! (false)), false))) && true))), false, true, false)))))))))), _GLF_IDENTITY(bool(bvec4((_GLF_IDENTITY(! _GLF_IDENTITY((false), ! (! (_GLF_IDENTITY((false), ! (! _GLF_IDENTITY(((false)), (_GLF_IDENTITY(((false)), (((false))) || false)) || false)))))), _GLF_IDENTITY(_GLF_IDENTITY((! (_GLF_IDENTITY(false, true && (false)))), bool(bvec2((! (false)), false))) && true, bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY((! (false)), bool(bvec2((! (false)), false))) && true, ! (! (_GLF_IDENTITY((! (_GLF_IDENTITY(false, false || (false)))), bool(bvec2((! (false)), false))) && true))), false, true, false))))), false, false, true)), true && (_GLF_IDENTITY(bool(bvec4((_GLF_IDENTITY(! _GLF_IDENTITY((false), ! (! (_GLF_IDENTITY((false), ! (! ((false))))))), _GLF_IDENTITY(_GLF_IDENTITY((! (false)), bool(bvec2((! (false)), false))) && true, bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY((! (false)), bool(bvec2((! _GLF_IDENTITY((false), ! (! (_GLF_IDENTITY((false), bool(bool(_GLF_IDENTITY((false), ! (! ((false))))))))))), false))) && true, ! (! (_GLF_IDENTITY((! (false)), bool(bvec2((! (false)), false))) && true))), false, true, false))))), false, false, true)), bool(bvec2(bool(bvec4((_GLF_IDENTITY(! _GLF_IDENTITY((false), ! (! (_GLF_IDENTITY((false), ! (! ((false))))))), _GLF_IDENTITY(_GLF_IDENTITY((! (false)), bool(bvec2((! (false)), false))) && true, bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY((! (false)), bool(bvec2((! (false)), false))) && true, ! (! (_GLF_IDENTITY((! (false)), bool(bvec2((! (false)), false))) && true))), false, true, false))))), false, false, true)), false))))))) && true))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              barrier();
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              barrier();
             barrier();
            }
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
            barrier();
           barrier();
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              barrier();
             barrier();
            }
          }
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false)))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           barrier();
          }
         barrier();
        }
       if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, true && (false))) || false)))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(false), bool(_GLF_IDENTITY(bool(_GLF_DEAD(false)), (bool(_GLF_DEAD(false))) || false)))), bool(bvec2(! (_GLF_IDENTITY(_GLF_DEAD(false), bool(_GLF_IDENTITY(bool(_GLF_DEAD(false)), (bool(_GLF_DEAD(false))) || false)))), false))))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
         if(_GLF_DEAD(false))
          barrier();
        }
       barrier();
       if(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), bool(bvec4(! (_GLF_DEAD(false)), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))))))
        barrier();
      }
    }
   else
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, float(_GLF_IDENTITY(float(injectionSwitch.x), max(_GLF_IDENTITY(float(injectionSwitch.x), 0.0 + (float(injectionSwitch.x))), float(injectionSwitch.x))))) > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec4(_GLF_DEAD(false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true)), bool(bool(bool(bvec4(_GLF_DEAD(false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true)))))))
          {
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).y))))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
        }
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
         barrier();
         if(_GLF_DEAD(false))
          barrier();
        }
       barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            barrier();
           barrier();
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0)))))
            barrier();
          }
         barrier();
        }
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), true && (_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((false), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((false), (_GLF_IDENTITY((false), bool(bvec4((false), false, true, true)))) || false)), (! (_GLF_IDENTITY((false), (_GLF_IDENTITY((false), bool(bvec4((false), _GLF_IDENTITY(false, ! (! (false))), true, true)))) || false))) || false)))))))))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
         barrier();
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != (int(_GLF_ZERO(0.0, injectionSwitch.x)) << _GLF_IDENTITY(_GLF_IDENTITY(int(4), int(4)), (_GLF_IDENTITY(_GLF_IDENTITY(int(4), int(4)), clamp(_GLF_IDENTITY(int(4), int(4)), _GLF_IDENTITY(int(4), int(4)), _GLF_IDENTITY(int(4), int(4))))) / 1))); _injected_loop_counter --)
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x > injectionSwitch.y))), false || (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x > injectionSwitch.y))), bool(bvec3(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x > injectionSwitch.y))), true, true))))))
        barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   atomicStore(buf[next_virtual_gid], uint(read_1 + 1 == _GLF_IDENTITY(read_2, max(read_2, read_2))) + 1, 4, 64, 4);
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, true, true, true)))))
        barrier();
       barrier();
      }
     barrier();
    }
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
}
