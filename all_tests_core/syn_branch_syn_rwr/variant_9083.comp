#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


struct _GLF_struct_2 {
 ivec2 _f0;
 mat3x4 _f1;
 mat2x3 _f2;
 mat2x3 _f3;
 mat2 _f4;
 mat2 _f5;
 vec2 _f6;
} ;

struct _GLF_struct_1 {
 bvec2 _f0;
 uvec2 _f1;
 ivec3 _f2;
 mat2x4 _f3;
 bvec3 _f4;
 mat2x4 _f5;
} ;

struct _GLF_struct_0 {
 mat3 _f0;
 mat3x2 _f1;
 mat4 _f2;
 uint _f3;
 bvec4 _f4;
 mat4x2 _f5;
} ;

struct _GLF_struct_3 {
 int i;
 _GLF_struct_0 _f0;
 _GLF_struct_1 _f1;
 _GLF_struct_2 _f2;
} ;

struct _GLF_struct_4 {
 _GLF_struct_3 _f0;
} ;

layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, false, true)))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(false, true, false), _GLF_IDENTITY(bvec3(bvec3(bvec3(false, true, _GLF_IDENTITY(false, ! (! (false)))))), bvec3(bvec4(bvec3(bvec3(bvec3(false, true, false))), false))))), ! (! (bool(_GLF_IDENTITY(bvec3(false, true, false), _GLF_IDENTITY(bvec3(bvec3(bvec3(false, true, false))), bvec3(bvec4(bvec3(bvec3(bvec3(false, true, false))), false)))))))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y))))), false || (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))))))))
  barrier();
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false))), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y))))))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, bool(bvec2(false, true)))))))
      barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x)) > injectionSwitch.y, _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x)) > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x)) > injectionSwitch.y))), true, true)), _GLF_IDENTITY(bool(bvec4(bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x)) > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x)) > injectionSwitch.y))), true, true)), false, true, false)), ! (! (bool(bvec4(bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x)) > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x)) > injectionSwitch.y))), true, true)), false, true, false)))))))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, (false) || _GLF_IDENTITY(false, ! (! (false)))), true)))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec4(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec4(false, false, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), _GLF_IDENTITY(bool(bool(bool(bvec4(false, false, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), _GLF_IDENTITY(bool(bvec2(bool(bool(bool(bvec4(false, false, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), true)), true && (bool(bvec2(bool(bool(bool(bvec4(false, false, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), true)))))), bool(bool(_GLF_IDENTITY(bool(bvec4(false, false, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), _GLF_IDENTITY(bool(bool(bool(bvec4(false, false, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), _GLF_IDENTITY(bool(bvec2(bool(bool(bool(bvec4(false, false, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), true)), true && (bool(bvec2(bool(bool(bool(bvec4(false, false, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), true))))))))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 uint subgroup_local_id = gl_SubgroupInvocationID;
 uint num_workgroup = gl_NumWorkGroups.x;
 uint workgroup_size = gl_WorkGroupSize.x;
 if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true)) && _GLF_IDENTITY(true, (true) && true)))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)), (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)), false || (_GLF_DEAD(_GLF_IDENTITY(false, (false) && true))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), (_GLF_DEAD(_GLF_IDENTITY(false, (false) && true))) && true)) || false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))) - 0.0), injectionSwitch.y))), ! (! ((_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(-5699.5505) : _GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-17.09)), bool(false))))) > injectionSwitch.y)))), true && _GLF_IDENTITY((_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[_GLF_IDENTITY(0, max(0, 0))], injectionSwitch[1])).y, (_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))) - 0.0), injectionSwitch.y))), ! (! ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(-5699.5505) : _GLF_IDENTITY(injectionSwitch.x, mix(_GLF_IDENTITY(float(injectionSwitch.x), _GLF_IDENTITY((false ? _GLF_FUZZED(_GLF_IDENTITY(8.7, min(8.7, 8.7))) : float(injectionSwitch.x)), min((false ? _GLF_FUZZED(_GLF_IDENTITY(8.7, min(8.7, 8.7))) : float(injectionSwitch.x)), (false ? _GLF_FUZZED(_GLF_IDENTITY(8.7, min(8.7, 8.7))) : float(injectionSwitch.x))))), float(_GLF_FUZZED(-17.09)), bool(false))))), mix(float(_GLF_FUZZED(-823.383)), float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(-5699.5505) : _GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(_GLF_IDENTITY(-17.09, float(mat2x4(-17.09, sin(0.0), 0.0, abs(0.0), 0.0, 1.0, determinant(mat3(0.0, 1.0, 1.0, 0.0, 0.0, 0.0, tan(0.0), 0.0, 0.0)), 1.0))))), bool(false))))), max(_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(-5699.5505) : _GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-17.09)), bool(false))))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(-5699.5505) : _GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-17.09)), bool(false))))), (_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_IDENTITY(_GLF_FUZZED(-5699.5505), float(mat3x4(_GLF_IDENTITY(_GLF_FUZZED(-5699.5505), (true ? _GLF_FUZZED(-5699.5505) : _GLF_FUZZED(6.9))), 1.0, 0.0, 1.0, 0.0, abs(1.0), 1.0, 0.0, _GLF_IDENTITY(dot(vec2(1.0, 1.0), vec2(0.0, 0.0)), dot(vec2(1.0, 1.0), vec2(0.0, 0.0))), sqrt(0.0), _GLF_ZERO(0.0, injectionSwitch.x), cos(0.0)))) : _GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-17.09)), bool(false)))))) - 0.0)))), bool(true))) > injectionSwitch.y))))), _GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED((true ? -7.8 : -3.9))), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) > injectionSwitch.y)) || ((_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y, (_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))) - 0.0), injectionSwitch.y))), ! (! ((_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(-5699.5505) : _GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-17.09)), bool(false))))) > injectionSwitch.y)))))), (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED((_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), false || (! (true))))) ? -7.8 : -3.9))), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)))) || ((_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], clamp(_GLF_IDENTITY(injectionSwitch[0], (true ? injectionSwitch[0] : _GLF_FUZZED(vec4(-191.835, 633.006, 10.45, -116.161).b))), injectionSwitch[0], injectionSwitch[0])), injectionSwitch[1])).y, (_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(vec4(injectionSwitch.y, 0.0, 0.0, 1.0)), mix(float(float(vec4(injectionSwitch.y, 0.0, 0.0, 1.0))), float(_GLF_FUZZED(-47.92)), _GLF_IDENTITY(bool(false), false || (bool(false))))))) * 1.0), injectionSwitch.y))) - 0.0), injectionSwitch.y))), ! (! ((_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(false, (false) || false) ? _GLF_FUZZED(-5699.5505) : _GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-17.09)), bool(false))))) > injectionSwitch.y))))))) && true))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-8869.0161)), vec2(_GLF_FUZZED(-4.9), (injectionSwitch)[1]), bvec2(false, true))).x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)).y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > injectionSwitch.y))) && true)), true && (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(mat3x2(injectionSwitch, abs(0.0), 1.0, 0.0, 0.0))))).x > injectionSwitch.y))) && true)))))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
  }
 uint workgroup_id = gl_WorkGroupID.x;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec2(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), true)))))
    barrier();
   return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-694.021)), float(injectionSwitch.y), bool(true)))), _GLF_IDENTITY(true && ((injectionSwitch.x > injectionSwitch.y)), (true && ((injectionSwitch.x > injectionSwitch.y))) && true)))))
  barrier();
 uint workgroup_base = workgroup_size * workgroup_id;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint virtual_gid = _GLF_IDENTITY(workgroup_base + subgroup_id * _GLF_IDENTITY(subgroup_size, (subgroup_size) | (_GLF_IDENTITY(subgroup_size, (subgroup_size) | (subgroup_size)))) + subgroup_local_id, (workgroup_base + subgroup_id * _GLF_IDENTITY(subgroup_size, (subgroup_size) | (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY((subgroup_size) << 0u, _GLF_IDENTITY(min((subgroup_size) << 0u, _GLF_IDENTITY((subgroup_size) << 0u, ((subgroup_size) << 0u) + 0u)), max(min((subgroup_size) << 0u, _GLF_IDENTITY((subgroup_size) << 0u, ((subgroup_size) << 0u) + 0u)), _GLF_IDENTITY(min((subgroup_size) << 0u, _GLF_IDENTITY((subgroup_size) << 0u, ((subgroup_size) << 0u) + 0u)), clamp(_GLF_IDENTITY(min((subgroup_size) << 0u, _GLF_IDENTITY((subgroup_size) << 0u, ((subgroup_size) << 0u) + 0u)), 0u ^ (min((subgroup_size) << 0u, _GLF_IDENTITY((subgroup_size) << 0u, ((subgroup_size) << 0u) + 0u)))), _GLF_IDENTITY(min((subgroup_size) << 0u, _GLF_IDENTITY((subgroup_size) << 0u, ((subgroup_size) << 0u) + 0u)), 1u * (min((subgroup_size) << 0u, _GLF_IDENTITY((subgroup_size) << 0u, ((subgroup_size) << 0u) + 0u)))), _GLF_IDENTITY(min((subgroup_size) << 0u, _GLF_IDENTITY((subgroup_size) << 0u, ((subgroup_size) << 0u) + 0u)), (min((subgroup_size) << 0u, _GLF_IDENTITY((subgroup_size) << 0u, ((subgroup_size) << 0u) + 0u))) - 0u))))))), (subgroup_size) | (subgroup_size)))) + subgroup_local_id) | (workgroup_base + subgroup_id * _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, (subgroup_size) / 1u)) | (_GLF_IDENTITY(subgroup_size, (subgroup_size) | (subgroup_size)))), (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, clamp(_GLF_IDENTITY(subgroup_size, (subgroup_size) << 0u), subgroup_size, subgroup_size)), (_GLF_IDENTITY(subgroup_size, (subgroup_size) / 1u)) | (_GLF_IDENTITY(subgroup_size, (subgroup_size) | (subgroup_size))))) + 0u) + subgroup_local_id));
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec4(false, false, false, false))), (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, false || (false))))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, vec2(mat3x2(injectionSwitch, 1.0, 0.0, 0.0, 0.0)))) * vec2(1.0, 1.0)))))))).x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch[1], float(mat3(injectionSwitch[1], _GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, abs(0.0)), vec4(1.0, 1.0, 0.0, 1.0)), dot(vec4(0.0, 0.0, 1.0, abs(0.0)), vec4(1.0, 1.0, 0.0, 1.0))), 1.0, _GLF_ONE(1.0, injectionSwitch.y), _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 0.0, 0.0, 1.0))), float(mat3(injectionSwitch[1], 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0))))) : _GLF_FUZZED(cosh(vec2(-5977.8556, 7859.2792))))).y, 0.0 + (_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0)))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 uint next_virtual_gid = workgroup_base + subgroup_id * _GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(uint(uvec2(subgroup_size, 0u)), (false ? _GLF_FUZZED(workgroup_id) : uint(uvec2(subgroup_size, 0u))))) + (_GLF_IDENTITY((subgroup_local_id + 1), ((subgroup_local_id + 1)) ^ 0u) % subgroup_size);
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, false), _GLF_IDENTITY(bvec2(bvec4(bvec2(false, false), false, true)), _GLF_IDENTITY(bvec2(bvec4(bvec2(bvec4(bvec2(false, false), false, true)), true, true)), bvec2(bvec2(_GLF_IDENTITY(bvec2(bvec4(bvec2(bvec4(bvec2(false, false), false, true)), true, true)), bvec2(bvec3(bvec2(bvec4(bvec2(bvec4(bvec2(false, false), false, true)), true, true)), true))))))))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, float(mat2(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)), _GLF_IDENTITY(dot(vec4(1.0, 0.0, sin(0.0), 1.0), vec4(0.0, 1.0, 1.0, sin(0.0))), _GLF_IDENTITY(dot(vec4(_GLF_IDENTITY(_GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, float(vec4(1.0, 1.0, 1.0, 1.0))), 1.0, 1.0)), (false ? _GLF_FUZZED(-4.4) : _GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, float(vec4(1.0, 1.0, 1.0, 1.0))), 1.0, 1.0)))), 0.0, sin(0.0), 1.0), vec4(0.0, 1.0, 1.0, sin(0.0))), mix(_GLF_IDENTITY(float(_GLF_FUZZED(-442.801)), min(float(_GLF_FUZZED(-442.801)), float(_GLF_FUZZED(-442.801)))), float(_GLF_IDENTITY(dot(vec4(1.0, 0.0, _GLF_IDENTITY(sin(0.0), _GLF_IDENTITY((sin(_GLF_IDENTITY(_GLF_IDENTITY(0.0, min(0.0, 0.0)), min(_GLF_IDENTITY(0.0, min(0.0, 0.0)), _GLF_IDENTITY(_GLF_IDENTITY(0.0, min(0.0, 0.0)), clamp(_GLF_IDENTITY(0.0, min(0.0, 0.0)), _GLF_IDENTITY(0.0, _GLF_IDENTITY(min(0.0, 0.0), clamp(min(0.0, 0.0), min(0.0, 0.0), min(0.0, 0.0)))), _GLF_IDENTITY(0.0, min(0.0, 0.0)))))))), clamp((sin(_GLF_IDENTITY(_GLF_IDENTITY(0.0, min(0.0, 0.0)), min(_GLF_IDENTITY(0.0, min(0.0, 0.0)), _GLF_IDENTITY(_GLF_IDENTITY(0.0, min(0.0, 0.0)), clamp(_GLF_IDENTITY(0.0, min(0.0, 0.0)), _GLF_IDENTITY(0.0, _GLF_IDENTITY(min(0.0, 0.0), clamp(min(0.0, 0.0), min(0.0, 0.0), min(0.0, 0.0)))), _GLF_IDENTITY(0.0, min(0.0, 0.0)))))))), _GLF_IDENTITY((sin(_GLF_IDENTITY(_GLF_IDENTITY(0.0, min(0.0, 0.0)), min(_GLF_IDENTITY(0.0, min(0.0, 0.0)), _GLF_IDENTITY(_GLF_IDENTITY(0.0, min(0.0, 0.0)), clamp(_GLF_IDENTITY(0.0, min(0.0, 0.0)), _GLF_IDENTITY(0.0, _GLF_IDENTITY(min(0.0, 0.0), clamp(min(0.0, 0.0), min(0.0, 0.0), min(0.0, 0.0)))), _GLF_IDENTITY(0.0, min(0.0, 0.0)))))))), min(_GLF_IDENTITY((sin(_GLF_IDENTITY(_GLF_IDENTITY(0.0, min(0.0, 0.0)), min(_GLF_IDENTITY(0.0, min(0.0, 0.0)), _GLF_IDENTITY(_GLF_IDENTITY(0.0, min(0.0, 0.0)), clamp(_GLF_IDENTITY(0.0, min(0.0, 0.0)), _GLF_IDENTITY(0.0, _GLF_IDENTITY(min(0.0, 0.0), clamp(min(0.0, 0.0), min(0.0, 0.0), min(0.0, 0.0)))), _GLF_IDENTITY(0.0, min(0.0, 0.0)))))))), (false ? _GLF_FUZZED(-795.138) : (sin(_GLF_IDENTITY(_GLF_IDENTITY(0.0, min(0.0, 0.0)), min(_GLF_IDENTITY(0.0, min(0.0, 0.0)), _GLF_IDENTITY(_GLF_IDENTITY(0.0, min(0.0, 0.0)), clamp(_GLF_IDENTITY(0.0, min(0.0, 0.0)), _GLF_IDENTITY(0.0, _GLF_IDENTITY(min(0.0, 0.0), clamp(min(0.0, 0.0), min(0.0, 0.0), min(0.0, 0.0)))), _GLF_IDENTITY(0.0, min(0.0, 0.0)))))))))), (sin(_GLF_IDENTITY(_GLF_IDENTITY(0.0, min(0.0, 0.0)), min(_GLF_IDENTITY(0.0, min(0.0, 0.0)), _GLF_IDENTITY(_GLF_IDENTITY(0.0, min(0.0, 0.0)), clamp(_GLF_IDENTITY(0.0, min(0.0, 0.0)), _GLF_IDENTITY(0.0, _GLF_IDENTITY(min(0.0, 0.0), clamp(min(0.0, 0.0), min(0.0, 0.0), min(0.0, 0.0)))), _GLF_IDENTITY(0.0, min(0.0, 0.0)))))))))), (sin(_GLF_IDENTITY(_GLF_IDENTITY(0.0, min(0.0, 0.0)), min(_GLF_IDENTITY(0.0, min(0.0, 0.0)), _GLF_IDENTITY(_GLF_IDENTITY(0.0, min(0.0, 0.0)), clamp(_GLF_IDENTITY(0.0, min(0.0, 0.0)), _GLF_IDENTITY(0.0, _GLF_IDENTITY(min(0.0, 0.0), clamp(min(0.0, 0.0), min(0.0, 0.0), min(0.0, 0.0)))), _GLF_IDENTITY(0.0, min(0.0, 0.0)))))))))) / 1.0), 1.0), vec4(0.0, _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), 1.0, sin(0.0))), (_GLF_IDENTITY(dot(vec4(1.0, 0.0, sin(_GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, float(mat3(0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0))), 0.0))), 1.0), vec4(0.0, 1.0, 1.0, sin(0.0))), clamp(dot(vec4(1.0, 0.0, sin(0.0), 1.0), vec4(0.0, 1.0, _GLF_IDENTITY(1.0, max(1.0, 1.0)), sin(0.0))), _GLF_IDENTITY(dot(_GLF_IDENTITY(vec4(1.0, 0.0, sin(0.0), 1.0), min(vec4(1.0, 0.0, sin(0.0), 1.0), vec4(1.0, 0.0, sin(0.0), 1.0))), vec4(0.0, 1.0, 1.0, sin(0.0))), (dot(vec4(1.0, 0.0, sin(0.0), 1.0), vec4(0.0, _GLF_IDENTITY(1.0, float(mat3x2(_GLF_IDENTITY(1.0, max(1.0, 1.0)), round(length(normalize(_GLF_IDENTITY(1.0, min(1.0, 1.0))))), exp(0.0), tan(0.0), 0.0, 0.0))), 1.0, sin(0.0)))) / 1.0), dot(vec4(1.0, _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(7.2)), bool(false))), sin(_GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(-49.75) : 0.0))) / determinant(mat4(1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(1.0, min(1.0, 1.0)), 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0)))), 1.0), vec4(0.0, _GLF_IDENTITY(1.0, (1.0) + sin(0.0)), 1.0, sin(0.0)))))) * 1.0)), bool(true)))), 1.0, exp(0.0)))) > injectionSwitch.y))))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(bool(bvec3(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, false)), (_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec3(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, false)), true && (bool(bvec3(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, false)))), bool(bvec2(bool(bvec3(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true))))), true, false)), false)))) || false)))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 uint read_1 = atomicLoad(buf[_GLF_IDENTITY(virtual_gid, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(virtual_gid, _GLF_IDENTITY((virtual_gid), ((virtual_gid)) | (0u ^ 0u)) / 1u), uint(uint(_GLF_IDENTITY(virtual_gid, _GLF_IDENTITY((virtual_gid), ((virtual_gid)) | (0u ^ 0u)) / 1u))))) << 0u, uint(_GLF_ZERO(0.0, injectionSwitch.x)) | ((_GLF_IDENTITY(_GLF_IDENTITY(virtual_gid, (virtual_gid) / 1u), _GLF_IDENTITY(uint(uvec3(_GLF_IDENTITY(virtual_gid, (virtual_gid) / 1u), ((1u << _GLF_IDENTITY(uint(6u), uint(6u))) >> _GLF_IDENTITY(uint(6u), uint(6u))), 1u)), ~ (~ (uint(uvec3(_GLF_IDENTITY(virtual_gid, (virtual_gid) / 1u), ((1u << _GLF_IDENTITY(uint(6u), uint(6u))) >> _GLF_IDENTITY(uint(6u), uint(6u))), 1u))))))) << 0u)))], 4, _GLF_IDENTITY(64, int(int(_GLF_IDENTITY(_GLF_IDENTITY(64, _GLF_IDENTITY(int(ivec2(_GLF_IDENTITY(_GLF_IDENTITY(64, max(_GLF_IDENTITY(64, clamp(64, 64, 64)), 64)), (64) - 0), 1)), max(int(ivec2(_GLF_IDENTITY(64, (64) - 0), 1)), int(ivec2(_GLF_IDENTITY(64, (64) - 0), 1))))), int(ivec3(64, 1, 0)))))), 0);
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY((false), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool((false)), (bool((false))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), _GLF_IDENTITY(_GLF_IDENTITY(bool(bool(bool(_GLF_IDENTITY(bool((false)), (bool((false))) || _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(vec3(-17.10, 959.870, 49.02).r)), bool(false))) > injectionSwitch.y)))))), ! (! (bool(bool(bool(_GLF_IDENTITY(bool((false)), (bool((false))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(bool(bool(bool(_GLF_IDENTITY(bool((false)), (bool((false))) || _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(vec3(-17.10, 959.870, 49.02).r)), bool(false))) > injectionSwitch.y)))))), ! (! (bool(bool(bool(_GLF_IDENTITY(bool((_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false)))), (bool((false))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))), (_GLF_IDENTITY(bool(bool(bool(_GLF_IDENTITY(bool((false)), (bool((false))) || _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(vec3(-17.10, 959.870, 49.02).r)), bool(false))) > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).y)))))), ! (! (bool(bool(bool(_GLF_IDENTITY(bool((false)), (bool((false))) || _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(mat2x3(injectionSwitch, 1.0, 0.0, 0.0, _GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0)), dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0)))))).y, bool(_GLF_IDENTITY(bvec2(injectionSwitch.x > injectionSwitch.y, true), bvec2(bvec4(bvec2(injectionSwitch.x > injectionSwitch.y, true), false, true))))))))))))))) && true)))))) || _GLF_IDENTITY(false, (false) || false), false || ((false) || _GLF_IDENTITY(false, (false) || _GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(bvec2(! (false), true)))))))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 atomicStore(buf[next_virtual_gid], uint(read_1 + 1), 4, 64, _GLF_IDENTITY(4, ~ (~ (4))));
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(mat2x3(injectionSwitch, 1.0, abs(0.0), 0.0, 0.0))))).x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, false || (false))))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, false)))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! _GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! (! (false)))), ! (! (! (false))))), ((_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(false, true, true, false))), bool(bvec4(_GLF_IDENTITY(false, bool(bvec4(false, true, true, false))), false, true, true))))))), ! (! (! (false)))), bool(bvec4(_GLF_IDENTITY(! (false), ! (! (! (false)))), true, false, true))))) || false))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) && true), (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, _GLF_IDENTITY((false), _GLF_IDENTITY(false, (false) && _GLF_IDENTITY(true, ! (! (true)))) || ((false))) && true))))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y)))) && true)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))), (_GLF_DEAD(_GLF_IDENTITY(false, false || (false)))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 uint read_2 = atomicLoad(buf[virtual_gid], 4, 64, 0);
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((false), _GLF_IDENTITY(bool(bool((false))), ! (! (bool(bool((false)))))))))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y))))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), ! (! (bool(false)))))))))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(447.625)), bool(false))) > injectionSwitch.y)), bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(7584.7131) : injectionSwitch.y)))), false, false)))), true && (_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y))))))), bool(bool(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(-90.38)), bool(false))))), _GLF_IDENTITY(bool(bvec4(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(-90.38)), bool(false)))), ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(-90.38)), bool(false))))) && true)), false, true, true)), ! (! (_GLF_IDENTITY(bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(-90.38)), bool(false))))), false, true, true)), bool(bvec4(bool(bvec4(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), mix(float(injectionSwitch.y), float(_GLF_FUZZED(-90.38)), bool(false))))), false, true, true)), false, true, true))))))))))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y))))))
      {
       if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, bool(bvec4(false, true, false, false))), false, false))), (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(mat4x3(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), 0.0, abs(0.0), 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(-3455.6476)))))).x > injectionSwitch.y))))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
         if(_GLF_IDENTITY(_GLF_DEAD(false), bool(_GLF_IDENTITY(bvec2(_GLF_DEAD(false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bvec2(bvec4(bvec2(_GLF_DEAD(false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), false, true))))))
          barrier();
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false))))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && ((injectionSwitch.x > injectionSwitch.y))))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(-1.4), _GLF_FUZZED(1611.6688)), bvec2(false, false))), injectionSwitch, injectionSwitch)).y))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(mat2x3(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)), _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), _GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0)), _GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0)), max(dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0)), dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0))))), _GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, determinant(mat3(_GLF_IDENTITY(0.0, (0.0) - 0.0), 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0))), vec4(0.0, 0.0, 1.0, 0.0)), dot(_GLF_IDENTITY(vec4(0.0, 0.0, 1.0, determinant(mat3(0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0))), clamp(vec4(0.0, 0.0, 1.0, determinant(mat3(0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0))), _GLF_IDENTITY(vec4(0.0, 0.0, 1.0, determinant(mat3(0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0))), (vec4(0.0, 0.0, 1.0, determinant(mat3(0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0)))) * mat4(1.0)), vec4(0.0, 0.0, 1.0, determinant(mat3(0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0))))), vec4(0.0, 0.0, 1.0, 0.0))), 1.0))).x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, true)))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y, injectionSwitch.y))))))))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - abs(vec2(0.0, 0.0))).y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
  }
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, false || (false)))))), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x, (_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(exp2(942.669))))) - 0.0) > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_IDENTITY(subgroup_local_id + 1, _GLF_IDENTITY(clamp(subgroup_local_id + 1, _GLF_IDENTITY(subgroup_local_id + 1, _GLF_IDENTITY(uint(uint(subgroup_local_id + 1)), ~ (~ (uint(uint(subgroup_local_id + 1)))))), subgroup_local_id + 1), _GLF_IDENTITY(clamp(clamp(subgroup_local_id + 1, _GLF_IDENTITY(subgroup_local_id + 1, _GLF_IDENTITY(uint(uint(subgroup_local_id + 1)), ~ (~ (uint(uint(subgroup_local_id + 1)))))), subgroup_local_id + 1), _GLF_IDENTITY(clamp(subgroup_local_id + 1, _GLF_IDENTITY(subgroup_local_id + 1, _GLF_IDENTITY(uint(uint(subgroup_local_id + _GLF_IDENTITY(1, (1) ^ 0))), ~ (~ (uint(uint(subgroup_local_id + 1)))))), subgroup_local_id + 1), (clamp(subgroup_local_id + 1, _GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, min(1, _GLF_IDENTITY(1, (1) - 0))), _GLF_IDENTITY(uint(uint(subgroup_local_id + _GLF_IDENTITY(1, 0 | (1)))), ~ (~ (uint(uint(subgroup_local_id + 1)))))), 0u ^ (_GLF_IDENTITY(subgroup_local_id + 1, _GLF_IDENTITY(uint(_GLF_IDENTITY(uint(subgroup_local_id + 1), (_GLF_IDENTITY(uint(subgroup_local_id + 1), max(_GLF_IDENTITY(uint(subgroup_local_id + 1), (uint(subgroup_local_id + 1)) / 1u), uint(subgroup_local_id + 1)))) | (_GLF_IDENTITY(uint(subgroup_local_id + 1), (uint(subgroup_local_id + 1)) | 0u)))), ~ (~ (uint(uint(_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, (_GLF_IDENTITY(1, 0 | (1))) / 1), (subgroup_local_id + 1) / 1u))))))))), subgroup_local_id + 1)) | (clamp(subgroup_local_id + 1, _GLF_IDENTITY(subgroup_local_id + 1, _GLF_IDENTITY(uint(uint(subgroup_local_id + 1)), ~ (~ (uint(uint(subgroup_local_id + 1)))))), subgroup_local_id + 1))), clamp(_GLF_IDENTITY(subgroup_local_id, ~ (~ (_GLF_IDENTITY(subgroup_local_id, min(subgroup_local_id, subgroup_local_id))))) + 1, _GLF_IDENTITY(subgroup_local_id + 1, _GLF_IDENTITY(uint(uint(subgroup_local_id + 1)), ~ _GLF_IDENTITY((~ (uint(uint(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) * 1u), clamp(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) * 1u), (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) * 1u), (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) * 1u)) | (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) * 1u)))) | (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) * 1u))), _GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) * 1u), _GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) * 1u))) + 1)))), uint(uint((~ (uint(uint(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) * 1u), clamp(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) * 1u), (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) * 1u), (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) * 1u)) | (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) * 1u)))) | (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) * 1u))), _GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) * 1u), _GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) * 1u))) + 1))))))))), subgroup_local_id + _GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) + 0)) + 0))), (_GLF_IDENTITY(clamp(clamp(subgroup_local_id + 1, _GLF_IDENTITY(subgroup_local_id + 1, _GLF_IDENTITY(uint(uint(subgroup_local_id + 1)), ~ (~ _GLF_IDENTITY((uint(uint(subgroup_local_id + 1))), (_GLF_IDENTITY((uint(uint(subgroup_local_id + 1))), ((uint(uint(subgroup_local_id + 1)))) | ((uint(uint(subgroup_local_id + 1)))))) * 1u)))), subgroup_local_id + 1), _GLF_IDENTITY(clamp(subgroup_local_id + 1, _GLF_IDENTITY(subgroup_local_id + 1, _GLF_IDENTITY(uint(uint(subgroup_local_id + 1)), ~ (~ (uint(uint(subgroup_local_id + _GLF_IDENTITY(1, int(ivec4(1, 0, 1, 0))))))))), subgroup_local_id + 1), (clamp(subgroup_local_id + 1, _GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1, _GLF_IDENTITY(uint(uint(subgroup_local_id + 1)), ~ (~ (uint(uint(subgroup_local_id + 1)))))), 0u ^ _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1, ~ (~ (subgroup_local_id + 1))), _GLF_IDENTITY(uint(uint(subgroup_local_id + 1)), _GLF_IDENTITY(~ (~ (uint(uint(_GLF_IDENTITY(subgroup_local_id + 1, min(subgroup_local_id + 1, subgroup_local_id + 1)))))), 0u ^ (~ (~ (uint(uint(_GLF_IDENTITY(subgroup_local_id + 1, min(subgroup_local_id + 1, subgroup_local_id + 1))))))))))), 0u + ((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1, ~ (~ (subgroup_local_id + 1))), _GLF_IDENTITY(uint(uint(subgroup_local_id + 1)), _GLF_IDENTITY(~ (~ (uint(uint(_GLF_IDENTITY(subgroup_local_id + 1, min(subgroup_local_id + 1, subgroup_local_id + 1)))))), 0u ^ (~ (~ (uint(uint(_GLF_IDENTITY(subgroup_local_id + 1, min(subgroup_local_id + 1, subgroup_local_id + 1)))))))))))))), subgroup_local_id + 1)) | (clamp(subgroup_local_id + 1, _GLF_IDENTITY(subgroup_local_id + 1, _GLF_IDENTITY(uint(uint(subgroup_local_id + 1)), ~ (~ (uint(uint(subgroup_local_id + 1)))))), subgroup_local_id + 1))), clamp(_GLF_IDENTITY(subgroup_local_id, ~ (~ (_GLF_IDENTITY(subgroup_local_id, min(subgroup_local_id, subgroup_local_id))))) + 1, _GLF_IDENTITY(subgroup_local_id + 1, _GLF_IDENTITY(uint(uint(subgroup_local_id + 1)), ~ (~ (uint(uint(subgroup_local_id + 1)))))), subgroup_local_id + 1)), clamp(clamp(clamp(subgroup_local_id + 1, _GLF_IDENTITY(subgroup_local_id + 1, _GLF_IDENTITY(uint(uint(subgroup_local_id + 1)), ~ _GLF_IDENTITY((~ (uint(uint(subgroup_local_id + 1)))), ~ (_GLF_IDENTITY(~ _GLF_IDENTITY((_GLF_IDENTITY((~ (uint(uint(subgroup_local_id + 1)))), (true ? (~ (uint(uint(subgroup_local_id + _GLF_IDENTITY(1, (_GLF_IDENTITY(1, 0 + (1))) | (1)))))) : _GLF_FUZZED(virtual_gid)))), (_GLF_IDENTITY((_GLF_IDENTITY((~ (uint(uint(subgroup_local_id + 1)))), (true ? (~ (uint(uint(subgroup_local_id + _GLF_IDENTITY(1, (_GLF_IDENTITY(1, 0 + (1))) | (1)))))) : _GLF_FUZZED(virtual_gid)))), (false ? _GLF_FUZZED(93664u) : (_GLF_IDENTITY((~ (uint(uint(subgroup_local_id + 1)))), (true ? (~ (uint(uint(subgroup_local_id + _GLF_IDENTITY(1, (_GLF_IDENTITY(1, 0 + (1))) | (1)))))) : _GLF_FUZZED(virtual_gid))))))) << 0u), max(~ (_GLF_IDENTITY((~ (uint(uint(subgroup_local_id + 1)))), (true ? (~ (uint(uint(subgroup_local_id + 1)))) : _GLF_FUZZED(virtual_gid)))), ~ (_GLF_IDENTITY((~ (uint(uint(subgroup_local_id + 1)))), (true ? (~ (uint(uint(subgroup_local_id + 1)))) : _GLF_FUZZED(virtual_gid)))))))))), subgroup_local_id + 1), _GLF_IDENTITY(clamp(subgroup_local_id + 1, _GLF_IDENTITY(subgroup_local_id + 1, _GLF_IDENTITY(uint(uint(subgroup_local_id + 1)), ~ (_GLF_IDENTITY(~ (uint(uint(subgroup_local_id + 1))), ~ (~ (~ (_GLF_IDENTITY(uint(uint(subgroup_local_id + 1)), clamp(uint(uint(subgroup_local_id + 1)), uint(uint(subgroup_local_id + 1)), uint(uint(subgroup_local_id + 1))))))))))), subgroup_local_id + 1), (clamp(subgroup_local_id + 1, _GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1, _GLF_IDENTITY(uint(uint(subgroup_local_id + 1)), ~ (~ (uint(uint(subgroup_local_id + 1)))))), _GLF_IDENTITY(0u, ~ (~ (0u))) ^ (_GLF_IDENTITY(subgroup_local_id + 1, _GLF_IDENTITY(uint(uint(subgroup_local_id + 1)), ~ (~ (uint(uint(subgroup_local_id + 1)))))))), subgroup_local_id + 1)) | (clamp(subgroup_local_id + 1, _GLF_IDENTITY(subgroup_local_id + 1, _GLF_IDENTITY(uint(uint(subgroup_local_id + 1)), ~ _GLF_IDENTITY((~ (uint(uint(subgroup_local_id + 1)))), min((~ (uint(uint(subgroup_local_id + 1)))), _GLF_IDENTITY((~ (uint(uint(subgroup_local_id + 1)))), clamp((~ (uint(uint(subgroup_local_id + 1)))), (~ (_GLF_IDENTITY(uint(uint(subgroup_local_id + 1)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(uaddCarry(next_virtual_gid, read_1, workgroup_id)) : uint(uint(subgroup_local_id + 1)))))), (~ (uint(uint(subgroup_local_id + 1)))))))))), subgroup_local_id + 1))), clamp(_GLF_IDENTITY(subgroup_local_id, ~ (~ _GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, min(subgroup_local_id, _GLF_IDENTITY(subgroup_local_id, uint(uvec2(subgroup_local_id, 1u)))))), min((_GLF_IDENTITY(subgroup_local_id, min(subgroup_local_id, _GLF_IDENTITY(subgroup_local_id, uint(uvec2(subgroup_local_id, 1u)))))), (_GLF_IDENTITY(subgroup_local_id, min(subgroup_local_id, _GLF_IDENTITY(subgroup_local_id, uint(uvec2(subgroup_local_id, 1u)))))))))) + 1, _GLF_IDENTITY(subgroup_local_id + 1, _GLF_IDENTITY(uint(uint(subgroup_local_id + 1)), ~ (~ (uint(uint(subgroup_local_id + 1)))))), subgroup_local_id + 1)), clamp(clamp(subgroup_local_id + 1, _GLF_IDENTITY(subgroup_local_id + 1, _GLF_IDENTITY(_GLF_IDENTITY(uint(uint(subgroup_local_id + 1)), 0u | (uint(uint(subgroup_local_id + 1)))), ~ (~ (uint(uint(subgroup_local_id + 1)))))), subgroup_local_id + 1), _GLF_IDENTITY(_GLF_IDENTITY(clamp(subgroup_local_id + 1, _GLF_IDENTITY(subgroup_local_id + 1, _GLF_IDENTITY(uint(uint(subgroup_local_id + 1)), ~ (~ (uint(uint(subgroup_local_id + 1)))))), subgroup_local_id + 1), uint(uvec3(_GLF_IDENTITY(clamp(subgroup_local_id + 1, _GLF_IDENTITY(subgroup_local_id + 1, _GLF_IDENTITY(uint(uint(subgroup_local_id + 1)), ~ (~ (uint(uint(subgroup_local_id + 1)))))), subgroup_local_id + 1), (clamp(subgroup_local_id + 1, _GLF_IDENTITY(subgroup_local_id + 1, _GLF_IDENTITY(_GLF_IDENTITY(uint(uint(subgroup_local_id + 1)), ~ (~ (_GLF_IDENTITY(uint(uint(subgroup_local_id + 1)), uint(uvec4(uint(uint(subgroup_local_id + 1)), 0u, 0u, 1u)))))), ~ (~ (_GLF_IDENTITY(uint(uint(subgroup_local_id + 1)), (uint(uint(subgroup_local_id + 1))) | 0u))))), subgroup_local_id + 1)) >> 0u), 1u, 0u))), _GLF_IDENTITY((clamp(subgroup_local_id + _GLF_IDENTITY(1, min(1, 1)), _GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1, _GLF_IDENTITY(uint(uint(subgroup_local_id + 1)), ~ (~ _GLF_IDENTITY((uint(uint(subgroup_local_id + 1))), min(_GLF_IDENTITY((uint(uint(subgroup_local_id + 1))), min((uint(uint(subgroup_local_id + 1))), (uint(uint(subgroup_local_id + 1))))), (uint(uint(subgroup_local_id + 1)))))))), _GLF_IDENTITY(0u, ~ (_GLF_IDENTITY(~ (0u), uint(uvec3(_GLF_IDENTITY(~ (0u), ~ (~ (~ (0u)))), 0u, 1u))))) ^ (_GLF_IDENTITY(subgroup_local_id + 1, _GLF_IDENTITY(uint(uint(subgroup_local_id + 1)), ~ (~ (uint(uint(subgroup_local_id + 1)))))))), subgroup_local_id + 1)), (false ? _GLF_FUZZED(workgroup_base) : (clamp(subgroup_local_id + 1, _GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1, _GLF_IDENTITY(uint(uint(subgroup_local_id + 1)), ~ (~ _GLF_IDENTITY((uint(uint(subgroup_local_id + 1))), min(_GLF_IDENTITY((uint(uint(subgroup_local_id + 1))), min((uint(uint(subgroup_local_id + 1))), (uint(_GLF_IDENTITY(uint(subgroup_local_id + 1), uint(uvec3(uint(subgroup_local_id + 1), 0u, 1u))))))), (uint(uint(subgroup_local_id + 1)))))))), 0u ^ (_GLF_IDENTITY(subgroup_local_id + 1, _GLF_IDENTITY(uint(uint(subgroup_local_id + 1)), ~ (~ (uint(uint(subgroup_local_id + 1)))))))), subgroup_local_id + 1)))) | (clamp(subgroup_local_id + 1, _GLF_IDENTITY(subgroup_local_id + 1, _GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(uint(subgroup_local_id + 1), (uint(subgroup_local_id + 1)) << 0u)), 0u ^ (uint(uint(subgroup_local_id + 1)))), ~ (~ (uint(uint(subgroup_local_id + 1)))))), subgroup_local_id + 1))), clamp(_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY(~ (~ (_GLF_IDENTITY(subgroup_local_id, min(subgroup_local_id, subgroup_local_id)))), (false ? _GLF_FUZZED(num_workgroup) : ~ (~ (_GLF_IDENTITY(subgroup_local_id, min(subgroup_local_id, subgroup_local_id))))))) + 1, _GLF_IDENTITY(subgroup_local_id + 1, _GLF_IDENTITY(uint(uint(subgroup_local_id + 1)), ~ (~ (uint(uint(subgroup_local_id + _GLF_IDENTITY(1, 0 | (_GLF_IDENTITY(1, ~ (~ (_GLF_IDENTITY(1, int(int(1)))))))))))))), subgroup_local_id + 1)), clamp(clamp(subgroup_local_id + 1, _GLF_IDENTITY(subgroup_local_id + 1, _GLF_IDENTITY(uint(uint(subgroup_local_id + 1)), ~ (~ (uint(uint(subgroup_local_id + 1)))))), subgroup_local_id + 1), _GLF_IDENTITY(clamp(subgroup_local_id + 1, _GLF_IDENTITY(subgroup_local_id + 1, _GLF_IDENTITY(uint(uint(_GLF_IDENTITY(subgroup_local_id + 1, max(_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) >> 0u), subgroup_local_id + 1)))), ~ (~ (uint(uint(subgroup_local_id + 1)))))), subgroup_local_id + 1), (clamp(subgroup_local_id + 1, _GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1, _GLF_IDENTITY(_GLF_IDENTITY(uint(uint(subgroup_local_id + 1)), (_GLF_IDENTITY(uint(uint(subgroup_local_id + 1)), uint(uint(uint(uint(subgroup_local_id + 1)))))) << 0u), ~ (_GLF_IDENTITY(~ (uint(uint(subgroup_local_id + 1))), min(~ (uint(uint(subgroup_local_id + 1))), ~ (uint(uint(subgroup_local_id + 1)))))))), 0u ^ (_GLF_IDENTITY(subgroup_local_id + 1, _GLF_IDENTITY(uint(uint(subgroup_local_id + 1)), ~ (~ (uint(uint(subgroup_local_id + 1)))))))), subgroup_local_id + 1)) | (clamp(subgroup_local_id + 1, _GLF_IDENTITY(subgroup_local_id + 1, _GLF_IDENTITY(uint(uint(subgroup_local_id + 1)), ~ _GLF_IDENTITY((~ (uint(uint(subgroup_local_id + 1)))), min((~ (uint(uint(_GLF_IDENTITY(subgroup_local_id + 1, ~ (~ (subgroup_local_id + 1))))))), (~ (uint(uint(subgroup_local_id + 1)))))))), subgroup_local_id + 1))), clamp(_GLF_IDENTITY(subgroup_local_id, ~ _GLF_IDENTITY((~ (_GLF_IDENTITY(subgroup_local_id, min(subgroup_local_id, subgroup_local_id)))), min((~ (_GLF_IDENTITY(subgroup_local_id, min(subgroup_local_id, subgroup_local_id)))), (~ (_GLF_IDENTITY(subgroup_local_id, min(subgroup_local_id, subgroup_local_id))))))) + 1, _GLF_IDENTITY(subgroup_local_id + 1, _GLF_IDENTITY(uint(uint(subgroup_local_id + 1)), ~ (~ (_GLF_IDENTITY(uint(uint(subgroup_local_id + 1)), (uint(uint(_GLF_IDENTITY(subgroup_local_id + 1, min(subgroup_local_id + 1, subgroup_local_id + 1))))) | (uint(uint(subgroup_local_id + 1)))))))), subgroup_local_id + 1))))) ^ _GLF_IDENTITY(0u, (true ? _GLF_IDENTITY(0u, (0u >> _GLF_IDENTITY(uint(0u), uint(0u))) | (0u)) : _GLF_FUZZED(read_2)))))) < subgroup_size)
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   _GLF_struct_4 _GLF_struct_replacement_4 = _GLF_struct_4(_GLF_struct_3(0, _GLF_struct_0(mat3(1.0), mat3x2(1.0), mat4(1.0), 1u, bvec4(_GLF_IDENTITY(true, (true) || _GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), bool(bvec3(! (! (false)), false, true)))))), mat4x2(1.0)), _GLF_struct_1(bvec2(true), uvec2(1u), _GLF_IDENTITY(ivec3(1), (ivec3(1)) | (ivec3(1))), mat2x4(1.0), _GLF_IDENTITY(bvec3(true), bvec3(bvec3(bvec3(true)))), mat2x4(1.0)), _GLF_struct_2(ivec2(1), mat3x4(1.0), mat2x3(1.0), mat2x3(1.0), mat2(1.0), mat2(_GLF_IDENTITY(1.0, max(1.0, _GLF_IDENTITY(1.0, min(1.0, 1.0))))), _GLF_IDENTITY(vec2(1.0), max(vec2(1.0), vec2(1.0))))));
   if(_GLF_DEAD(false))
    barrier();
   atomicStore(buf[next_virtual_gid], _GLF_IDENTITY(uint(read_1 + 1 == _GLF_IDENTITY(_GLF_IDENTITY(read_2, (read_2) >> 0u), min(_GLF_IDENTITY(read_2, (read_2) >> 0u), _GLF_IDENTITY(read_2, (read_2) >> 0u)))) + 1, (uint(read_1 + _GLF_IDENTITY(1, (false ? _GLF_FUZZED(12510) : _GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) << 0)) | (1)))) == _GLF_IDENTITY(read_2, _GLF_IDENTITY((read_2), min((read_2), (read_2))) >> 0u)) + 1) | 0u), 4, 64, 4);
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 else
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, float(vec4(injectionSwitch.y, determinant(mat2(1.0, 0.0, 1.0, 1.0)), 0.0, 0.0))), min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, float(vec4(injectionSwitch.y, determinant(mat2(1.0, 0.0, 1.0, 1.0)), 0.0, 0.0))), float(mat4x3(_GLF_IDENTITY(injectionSwitch.y, float(vec4(injectionSwitch.y, determinant(mat2(1.0, 0.0, 1.0, _GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, min(1.0, 1.0)), 1.0)))), 0.0, _GLF_IDENTITY(0.0, (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)), (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x))) + log(1.0)))) > injectionSwitch.y)) ? _GLF_FUZZED(-790.543) : 0.0))))), 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(0.0, _GLF_IDENTITY(1.0, float(mat3x4(_GLF_IDENTITY(1.0, _GLF_IDENTITY((1.0), _GLF_IDENTITY(float(_GLF_IDENTITY(mat4x3((1.0), 1.0, determinant(mat4(0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(0.0, tan(0.0) + (0.0)), 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, sqrt(0.0), 0.0)), 1.0, 1.0, 1.0, _GLF_IDENTITY(1.0, sqrt(1.0) * (1.0)), 1.0, 0.0, 1.0, 0.0, 1.0), (true ? mat4x3((1.0), 1.0, determinant(mat4(0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0)), 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, sqrt(0.0), 0.0)), _GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(4.8))), 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0) : _GLF_FUZZED(mat4x3(1.6, -9.7, -21.58, 4.8, 38.00, 2.2, 6.9, 4467.0036, 28.98, 4.3, _GLF_IDENTITY(35.07, (35.07) + 0.0), -955.266))))), _GLF_IDENTITY(max(_GLF_IDENTITY(float(_GLF_IDENTITY(mat4x3((1.0), 1.0, determinant(mat4(0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, sqrt(0.0), 0.0)), 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0), (true ? mat4x3((1.0), 1.0, determinant(mat4(0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, sqrt(0.0), 0.0)), 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0) : _GLF_FUZZED(mat4x3(1.6, -9.7, -21.58, 4.8, 38.00, 2.2, 6.9, 4467.0036, 28.98, 4.3, 35.07, -955.266))))), (float(_GLF_IDENTITY(mat4x3((1.0), 1.0, determinant(mat4(0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, sqrt(0.0), 0.0)), 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0), (true ? mat4x3((1.0), 1.0, determinant(mat4(0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, sqrt(0.0), 0.0)), 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0) : _GLF_FUZZED(mat4x3(1.6, -9.7, -21.58, 4.8, 38.00, 2.2, 6.9, 4467.0036, 28.98, 4.3, 35.07, -955.266)))))) / 1.0), float(_GLF_IDENTITY(mat4x3((1.0), 1.0, determinant(mat4(0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, sqrt(0.0), 0.0)), 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0), (true ? mat4x3((1.0), 1.0, determinant(mat4(0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, sqrt(0.0), 0.0)), 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0) : _GLF_FUZZED(mat4x3(1.6, -9.7, -21.58, 4.8, 38.00, 2.2, 6.9, 4467.0036, 28.98, 4.3, 35.07, -955.266)))))), mix(float(max(_GLF_IDENTITY(float(_GLF_IDENTITY(mat4x3((1.0), 1.0, determinant(mat4(0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, sqrt(0.0), 0.0)), 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0), (true ? mat4x3((1.0), 1.0, determinant(mat4(0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, sqrt(0.0), 0.0)), 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0) : _GLF_FUZZED(mat4x3(1.6, -9.7, -21.58, 4.8, 38.00, 2.2, 6.9, 4467.0036, 28.98, 4.3, 35.07, -955.266))))), (float(_GLF_IDENTITY(mat4x3((1.0), 1.0, determinant(mat4(0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, sqrt(0.0), 0.0)), 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0), (true ? mat4x3((1.0), 1.0, determinant(mat4(0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, sqrt(0.0), 0.0)), 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0) : _GLF_FUZZED(mat4x3(1.6, -9.7, -21.58, 4.8, 38.00, 2.2, 6.9, 4467.0036, 28.98, 4.3, 35.07, -955.266)))))) / 1.0), float(_GLF_IDENTITY(mat4x3((1.0), 1.0, determinant(mat4(0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, sqrt(0.0), 0.0)), 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0), (true ? mat4x3((1.0), 1.0, determinant(mat4(0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, sqrt(0.0), 0.0)), 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0) : _GLF_FUZZED(mat4x3(1.6, -9.7, -21.58, 4.8, 38.00, 2.2, 6.9, 4467.0036, 28.98, 4.3, 35.07, -955.266))))))), float(_GLF_FUZZED(44.45)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))) - 0.0), 1.0, 1.0, 0.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)), _GLF_IDENTITY(dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(0.0, 1.0, 0.0, 0.0)), dot(vec4(0.0, 1.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 0.0), vec4(0.0, _GLF_IDENTITY(1.0, min(1.0, 1.0)), 0.0, 0.0))), 0.0, 1.0, 1.0, 0.0, 1.0, 1.0))), 0.0, _GLF_IDENTITY(0.0, _GLF_IDENTITY(min(0.0, 0.0), min(_GLF_IDENTITY(min(0.0, 0.0), float(mat4(min(0.0, 0.0), _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0))))))), min(0.0, 0.0)))))), dot(vec4(0.0, 1.0, _GLF_IDENTITY(_GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(5.3) : 0.0)), (false ? _GLF_FUZZED(_GLF_IDENTITY(vec2(0.1, 3.9)[0], (_GLF_IDENTITY(vec2(0.1, 3.9)[0], float(_GLF_IDENTITY(mat4(vec2(0.1, 3.9)[0], 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, 0.0, 0.0, 1.0)), dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, 0.0, 0.0, 1.0))), 1.0, 1.0, sqrt(0.0), 0.0), mat4(1.0) * (mat4(vec2(0.1, 3.9)[0], 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, 0.0, 0.0, 1.0)), dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, 0.0, 0.0, 1.0))), 1.0, 1.0, sqrt(0.0), 0.0)))))) - 0.0)) : 0.0)), 0.0), vec4(0.0, 1.0, 0.0, _GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, (0.0) - log(1.0)), 0.0))))), 1.0))), _GLF_IDENTITY(injectionSwitch.y, float(vec4(injectionSwitch.y, determinant(mat2(1.0, 0.0, _GLF_IDENTITY(1.0, float(mat2x4(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-708.816) : 1.0)), 0.0, 1.0, 1.0, _GLF_IDENTITY(dot(vec3(sqrt(0.0), 1.0, 0.0), vec3(1.0, 0.0, 1.0)), dot(vec3(sqrt(0.0), 1.0, 0.0), vec3(1.0, _GLF_IDENTITY(0.0, (0.0) / 1.0), 1.0))), 1.0, 1.0, 0.0))), _GLF_IDENTITY(1.0, max(1.0, 1.0)))), 0.0, 0.0))))), injectionSwitch.y, injectionSwitch.y), _GLF_IDENTITY((clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - sin(vec2(0.0, 0.0))))).y, float(vec4(injectionSwitch.y, determinant(mat2(1.0, 0.0, 1.0, _GLF_IDENTITY(1.0, (1.0) / 1.0))), 0.0, 0.0))), injectionSwitch.y, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), ((injectionSwitch) * mat2(1.0)) * mat2(1.0))).y)), _GLF_IDENTITY(_GLF_IDENTITY(dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, 0.0, 0.0, 1.0)), _GLF_IDENTITY(dot(vec4(0.0, 0.0, 0.0, 1.0), _GLF_IDENTITY(vec4(0.0, 0.0, 0.0, 1.0), (vec4(0.0, 0.0, 0.0, 1.0)) * mat4(1.0))), min(dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, 0.0, 0.0, 1.0)), dot(vec4(_GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, max(0.0, 0.0)), _GLF_IDENTITY(0.0, (0.0) - 0.0))), 0.0, 0.0, 1.0), vec4(0.0, 0.0, 0.0, 1.0))))) * ((clamp(_GLF_IDENTITY(injectionSwitch.y, float(_GLF_IDENTITY(vec4(injectionSwitch.y, determinant(mat2(1.0, 0.0, 1.0, _GLF_IDENTITY(1.0, min(1.0, 1.0)))), 0.0, 0.0), (vec4(injectionSwitch.y, determinant(mat2(1.0, 0.0, 1.0, 1.0)), 0.0, 0.0)) * mat4(1.0)))), injectionSwitch.y, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), ((injectionSwitch) * mat2(1.0)) * mat2(1.0))).y))), clamp(_GLF_IDENTITY(dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, 0.0, 0.0, 1.0)), _GLF_IDENTITY(dot(vec4(0.0, 0.0, 0.0, 1.0), _GLF_IDENTITY(vec4(0.0, 0.0, 0.0, 1.0), (_GLF_IDENTITY(vec4(0.0, 0.0, 0.0, 1.0), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(vec4(-717.321, 8.3, 919.761, 8685.8497)) : vec4(0.0, 0.0, 0.0, 1.0)))) * mat4(1.0))), min(dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, 0.0, 0.0, 1.0)), dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, 0.0, 0.0, 1.0))))) * ((clamp(_GLF_IDENTITY(injectionSwitch.y, float(_GLF_IDENTITY(vec4(injectionSwitch.y, determinant(mat2(1.0, 0.0, 1.0, _GLF_IDENTITY(1.0, _GLF_IDENTITY((1.0), ((1.0)) + _GLF_IDENTITY(dot(vec3(abs(0.0), 1.0, 0.0), vec3(1.0, 0.0, cos(0.0))), _GLF_IDENTITY(dot(vec3(abs(0.0), 1.0, 0.0), vec3(1.0, 0.0, cos(0.0))), min(dot(vec3(abs(0.0), 1.0, 0.0), vec3(1.0, 0.0, cos(0.0))), dot(vec3(abs(0.0), 1.0, 0.0), vec3(1.0, 0.0, cos(0.0))))))) - 0.0))), 0.0, 0.0), (vec4(injectionSwitch.y, determinant(mat2(1.0, 0.0, 1.0, 1.0)), 0.0, 0.0)) * mat4(1.0)))), injectionSwitch.y, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), ((injectionSwitch) * mat2(1.0)) * mat2(1.0))).y))), _GLF_IDENTITY(dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, 0.0, 0.0, 1.0)), _GLF_IDENTITY(dot(vec4(0.0, 0.0, 0.0, 1.0), _GLF_IDENTITY(vec4(0.0, 0.0, _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(943.133) : 0.0)), 1.0), (vec4(_GLF_IDENTITY(0.0, 0.0 + (0.0)), 0.0, 0.0, _GLF_IDENTITY(1.0, max(1.0, 1.0)))) * mat4(1.0))), min(dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, 0.0, 0.0, 1.0)), dot(vec4(0.0, 0.0, 0.0, _GLF_IDENTITY(1.0, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(6.6) : _GLF_IDENTITY(1.0, min(1.0, 1.0))))), vec4(0.0, 0.0, 0.0, 1.0))))) * ((clamp(_GLF_IDENTITY(injectionSwitch.y, float(_GLF_IDENTITY(vec4(injectionSwitch.y, determinant(mat2(1.0, 0.0, 1.0, 1.0)), 0.0, 0.0), (vec4(injectionSwitch.y, determinant(mat2(1.0, 0.0, 1.0, 1.0)), 0.0, 0.0)) * mat4(1.0)))), injectionSwitch.y, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), ((injectionSwitch) * mat2(1.0)) * mat2(1.0))).y))), _GLF_IDENTITY(_GLF_IDENTITY(dot(_GLF_IDENTITY(vec4(0.0, 0.0, 0.0, 1.0), max(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, 0.0, 0.0, 1.0))), vec4(0.0, 0.0, 0.0, _GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED((-44.46)))))), _GLF_IDENTITY(dot(vec4(0.0, 0.0, 0.0, 1.0), _GLF_IDENTITY(vec4(0.0, 0.0, 0.0, 1.0), (vec4(0.0, 0.0, 0.0, 1.0)) * mat4(1.0))), min(dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, 0.0, 0.0, 1.0)), dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, 0.0, 0.0, 1.0))))) * _GLF_IDENTITY(((clamp(_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(_GLF_IDENTITY(vec4(injectionSwitch.y, determinant(mat2(1.0, 0.0, 1.0, 1.0)), 0.0, 0.0), (vec4(injectionSwitch.y, determinant(mat2(1.0, 0.0, 1.0, 1.0)), 0.0, 0.0)) * mat4(1.0))), (_GLF_IDENTITY(float(_GLF_IDENTITY(vec4(injectionSwitch.y, determinant(mat2(1.0, 0.0, 1.0, 1.0)), 0.0, 0.0), (vec4(injectionSwitch.y, determinant(mat2(1.0, 0.0, 1.0, 1.0)), 0.0, 0.0)) * mat4(1.0))), min(float(_GLF_IDENTITY(vec4(injectionSwitch.y, determinant(mat2(1.0, 0.0, 1.0, 1.0)), 0.0, 0.0), (vec4(injectionSwitch.y, determinant(mat2(1.0, 0.0, 1.0, 1.0)), 0.0, 0.0)) * mat4(1.0))), float(_GLF_IDENTITY(vec4(injectionSwitch.y, determinant(mat2(1.0, 0.0, 1.0, 1.0)), 0.0, 0.0), (vec4(injectionSwitch.y, determinant(mat2(1.0, 0.0, 1.0, 1.0)), 0.0, 0.0)) * mat4(1.0)))))) + 0.0)), injectionSwitch.y, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), ((injectionSwitch) * mat2(1.0)) * mat2(1.0))).y))), float(vec4(((clamp(_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(_GLF_IDENTITY(vec4(injectionSwitch.y, determinant(mat2(1.0, 0.0, 1.0, 1.0)), 0.0, 0.0), (vec4(injectionSwitch.y, determinant(mat2(1.0, 0.0, 1.0, 1.0)), 0.0, 0.0)) * mat4(1.0))), (_GLF_IDENTITY(float(_GLF_IDENTITY(vec4(injectionSwitch.y, determinant(mat2(1.0, 0.0, 1.0, 1.0)), 0.0, 0.0), (vec4(injectionSwitch.y, determinant(mat2(1.0, 0.0, 1.0, 1.0)), 0.0, 0.0)) * mat4(1.0))), min(float(_GLF_IDENTITY(vec4(injectionSwitch.y, determinant(mat2(1.0, 0.0, 1.0, 1.0)), 0.0, 0.0), (vec4(injectionSwitch.y, determinant(mat2(1.0, 0.0, 1.0, 1.0)), 0.0, 0.0)) * mat4(1.0))), float(_GLF_IDENTITY(vec4(injectionSwitch.y, determinant(mat2(1.0, 0.0, 1.0, 1.0)), 0.0, 0.0), (_GLF_IDENTITY(vec4(injectionSwitch.y, determinant(mat2(1.0, 0.0, 1.0, 1.0)), 0.0, 0.0), (true ? _GLF_IDENTITY(vec4(injectionSwitch.y, determinant(mat2(1.0, 0.0, 1.0, 1.0)), 0.0, 0.0), clamp(vec4(injectionSwitch.y, determinant(mat2(1.0, 0.0, 1.0, 1.0)), 0.0, 0.0), vec4(injectionSwitch.y, determinant(mat2(1.0, 0.0, 1.0, 1.0)), 0.0, 0.0), vec4(injectionSwitch.y, determinant(mat2(1.0, 0.0, 1.0, 1.0)), 0.0, 0.0))) : _GLF_FUZZED(vec4(-0.5, 256.597, 5.5, 3.5))))) * mat4(1.0)))))) + 0.0)), injectionSwitch.y, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), ((injectionSwitch) * mat2(1.0)) * mat2(1.0))).y))), tan(_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(6491.2150)))), exp(0.0), 1.0))), (_GLF_IDENTITY(dot(vec4(0.0, 0.0, 0.0, 1.0), _GLF_IDENTITY(vec4(0.0, 0.0, 0.0, 1.0), _GLF_IDENTITY(vec4(_GLF_IDENTITY(mat2x3(vec4(0.0, 0.0, 0.0, 1.0), 1.0, 1.0), mat2x3(mat2x4(mat2x3(vec4(0.0, 0.0, 0.0, 1.0), 1.0, 1.0))))), (_GLF_IDENTITY(vec4(_GLF_IDENTITY(mat2x3(vec4(0.0, 0.0, 0.0, 1.0), 1.0, 1.0), mat2x3(mat2x4(mat2x3(vec4(0.0, 0.0, 0.0, 1.0), 1.0, 1.0))))), max(vec4(_GLF_IDENTITY(mat2x3(vec4(0.0, 0.0, 0.0, 1.0), 1.0, 1.0), mat2x3(mat2x4(mat2x3(vec4(0.0, 0.0, 0.0, 1.0), 1.0, 1.0))))), vec4(_GLF_IDENTITY(mat2x3(vec4(0.0, 0.0, 0.0, 1.0), 1.0, 1.0), mat2x3(mat2x4(mat2x3(vec4(0.0, 0.0, 0.0, 1.0), 1.0, 1.0)))))))) + vec4(0.0, 0.0, 0.0, 0.0)))), _GLF_IDENTITY(dot(vec4(0.0, 0.0, 0.0, 1.0), _GLF_IDENTITY(vec4(0.0, 0.0, 0.0, 1.0), (vec4(0.0, 0.0, 0.0, 1.0)) * mat4(1.0))), min(dot(vec4(0.0, 0.0, 0.0, _GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, 0.0 + (_GLF_IDENTITY(1.0, _GLF_IDENTITY(float(_GLF_IDENTITY(mat4(1.0, 1.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 1.0, 1.0, exp(0.0), determinant(mat3(0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0)), 0.0, 0.0, sin(0.0), 0.0, cos(0.0), exp(sqrt(0.0)), 1.0), transpose(transpose(mat4(1.0, 1.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 1.0, 1.0, exp(0.0), determinant(mat3(0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0)), 0.0, 0.0, sin(0.0), 0.0, cos(0.0), exp(sqrt(0.0)), 1.0))))), max(float(_GLF_IDENTITY(mat4(1.0, 1.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 1.0, 1.0, exp(0.0), determinant(mat3(0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0)), 0.0, 0.0, sin(0.0), 0.0, cos(0.0), exp(sqrt(0.0)), 1.0), transpose(transpose(mat4(1.0, 1.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 1.0, 1.0, exp(0.0), determinant(mat3(0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0)), 0.0, 0.0, sin(0.0), 0.0, cos(0.0), exp(sqrt(0.0)), 1.0))))), float(_GLF_IDENTITY(mat4(1.0, 1.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 1.0, 1.0, exp(0.0), determinant(mat3(0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0)), 0.0, 0.0, sin(0.0), 0.0, cos(0.0), exp(sqrt(0.0)), 1.0), transpose(transpose(mat4(1.0, 1.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 1.0, 1.0, exp(0.0), determinant(mat3(0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0)), 0.0, 0.0, sin(0.0), 0.0, cos(0.0), exp(sqrt(0.0)), 1.0)))))))))), _GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, (1.0) - 0.0), 1.0))))), vec4(0.0, 0.0, 0.0, 1.0)), dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, 0.0, 0.0, 1.0))))) * (_GLF_IDENTITY((clamp(_GLF_IDENTITY(injectionSwitch.y, float(_GLF_IDENTITY(vec4(injectionSwitch.y, determinant(mat2(1.0, 0.0, 1.0, 1.0)), _GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0), (vec4(injectionSwitch.y, determinant(mat2(1.0, 0.0, 1.0, 1.0)), 0.0, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-119.071)), float(_GLF_IDENTITY(0.0, float(mat3x4(0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, tan(0.0), 0.0, 0.0, 0.0)))), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))) * mat4(1.0)))), injectionSwitch.y, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), ((injectionSwitch) * mat2(1.0)) * mat2(1.0))), vec2(0.0, 0.0) + (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), ((injectionSwitch) * mat2(1.0)) * mat2(1.0))))).y)), (true ? (clamp(_GLF_IDENTITY(injectionSwitch.y, float(_GLF_IDENTITY(vec4(injectionSwitch.y, determinant(mat2(1.0, 0.0, 1.0, 1.0)), _GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0), (vec4(injectionSwitch.y, determinant(mat2(1.0, 0.0, 1.0, 1.0)), 0.0, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-119.071)), float(_GLF_IDENTITY(0.0, float(mat3x4(0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, tan(0.0), 0.0, 0.0, 0.0)))), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))) * mat4(1.0)))), injectionSwitch.y, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), ((injectionSwitch) * mat2(1.0)) * mat2(1.0))), vec2(0.0, 0.0) + (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), ((injectionSwitch) * mat2(1.0)) * mat2(1.0))))).y)) : _GLF_FUZZED(float(32864)))))) - _GLF_IDENTITY(0.0, 0.0 + (_GLF_IDENTITY(0.0, max(0.0, 0.0)))))))) - 0.0))))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(1173.4699)), float(injectionSwitch.x), bool(true))), (injectionSwitch.x) - 0.0) > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   atomicStore(buf[_GLF_IDENTITY(next_virtual_gid, uint(_GLF_IDENTITY(uint(next_virtual_gid), (uint(next_virtual_gid)) | (uint(next_virtual_gid)))))], uint(read_1 + 1 == read_2) + 1, _GLF_IDENTITY(4, _GLF_IDENTITY((_GLF_IDENTITY(4, (true ? 4 : _GLF_FUZZED(_GLF_IDENTITY(-40684, int(ivec4(_GLF_IDENTITY(-40684, max(-40684, -40684)), 1, ((1 << _GLF_IDENTITY(int(5), _GLF_IDENTITY(int(5), (int(5)) >> 0))) >> _GLF_IDENTITY(int(_GLF_IDENTITY(5, min(5, 5))), int(5))), _GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(max(int(174568u), 13312))))))))))), min(_GLF_IDENTITY((_GLF_IDENTITY(4, _GLF_IDENTITY((true ? 4 : _GLF_FUZZED(-40684)), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? (true ? 4 : _GLF_FUZZED(-40684)) : _GLF_FUZZED(40))))), ((_GLF_IDENTITY(4, (_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec4(true, false, true, false)), (bool(bvec4(true, false, true, false))) && true)) ? 4 : _GLF_FUZZED(-40684))))) ^ 0), (_GLF_IDENTITY(4, (true ? 4 : _GLF_FUZZED(-40684)))))) + 0), 64, 4);
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * exp(0.0))))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
  }
}
