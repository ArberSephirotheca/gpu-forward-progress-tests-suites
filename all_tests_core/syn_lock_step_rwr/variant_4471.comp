#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true), false || (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false)))) && true))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
      return;
     return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : _GLF_IDENTITY(injectionSwitch, vec2(vec4(injectionSwitch, _GLF_IDENTITY(1.0, float(vec3(1.0, 0.0, cos(0.0)))), 0.0))))).y))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_DEAD(false))))))))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) || false)))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, ! (! (false))), false, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), (injectionSwitch.x > injectionSwitch.y)), bool(bool(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, ! (! (false))), false, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), (injectionSwitch.x > injectionSwitch.y)))))))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true)) && true))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
      return;
     return;
    }
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))))) && true))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 uint subgroup_local_id = gl_SubgroupInvocationID;
 uint num_workgroup = gl_NumWorkGroups.x;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_DEAD(false))))) && true))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY((_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY((false), ! (_GLF_IDENTITY(! ((false)), ! (! (! ((false))))))) && true), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true))), true, _GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, (true) && _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, float(vec4(injectionSwitch.x, 0.0, 1.0, 0.0))))) < injectionSwitch.y))))))), ! (! (_GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0), true && (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true))), true, true)), (bool(bvec3(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true))), true, true))) && true))))), _GLF_IDENTITY(false || _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))), ! (! ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))))))), _GLF_IDENTITY(_GLF_IDENTITY(false || _GLF_IDENTITY((false || (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_IDENTITY((false || (injectionSwitch.x > injectionSwitch.y)), bool(bool((false || (injectionSwitch.x > injectionSwitch.y)))))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(false || _GLF_IDENTITY((false || (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_IDENTITY((false || (injectionSwitch.x > injectionSwitch.y)), bool(bool((false || (injectionSwitch.x > injectionSwitch.y)))))))), bool(_GLF_IDENTITY(bool(false || _GLF_IDENTITY((false || (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_IDENTITY((false || (injectionSwitch.x > injectionSwitch.y)), bool(bool((false || (injectionSwitch.x > injectionSwitch.y))))))))), ! (! (bool(false || _GLF_IDENTITY((false || (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_IDENTITY((false || (injectionSwitch.x > injectionSwitch.y)), bool(bool((false || (injectionSwitch.x > injectionSwitch.y)))))))))))))))), false || (_GLF_IDENTITY(false || _GLF_IDENTITY((false || (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_IDENTITY((false || (injectionSwitch.x > injectionSwitch.y)), bool(bool((false || (_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec3(3.3, 4047.8535, 48.77).rr) : injectionSwitch)).x > injectionSwitch.y)))))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(false || _GLF_IDENTITY((false || (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_IDENTITY((false || (injectionSwitch.x > injectionSwitch.y)), bool(bool((_GLF_IDENTITY(false || (injectionSwitch.x > injectionSwitch.y), ! (! (_GLF_IDENTITY(false || (injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(bool(bvec2(false || (injectionSwitch.x > injectionSwitch.y), true)), (bool(bvec2(false || (injectionSwitch.x > injectionSwitch.y), true))) && true)))))))))))), bool(_GLF_IDENTITY(bool(false || _GLF_IDENTITY((false || (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_IDENTITY((false || (injectionSwitch.x > injectionSwitch.y)), bool(bool((false || (injectionSwitch.x > injectionSwitch.y))))))))), ! (! (bool(false || _GLF_IDENTITY((false || (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_IDENTITY(_GLF_IDENTITY((false || (injectionSwitch.x > injectionSwitch.y)), bool(bool((false || (injectionSwitch.x > injectionSwitch.y))))), bool(bvec3(_GLF_IDENTITY((false || (injectionSwitch.x > injectionSwitch.y)), bool(bool((false || (injectionSwitch.x > injectionSwitch.y))))), true, false))))))))))))))))))))) || false, ((_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), (false) && true), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, float(vec2(injectionSwitch.x, _GLF_IDENTITY(dot(vec4(1.0, 0.0, 0.0, 1.0), vec4(0.0, 1.0, 1.0, 0.0)), _GLF_IDENTITY(dot(vec4(1.0, 0.0, 0.0, 1.0), vec4(0.0, 1.0, 1.0, 0.0)), clamp(dot(vec4(1.0, _GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, float(mat3(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(12.80)), bool(false))), 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0)))) * 1.0), 0.0, 1.0), vec4(0.0, 1.0, 1.0, 0.0)), dot(vec4(1.0, 0.0, 0.0, 1.0), vec4(0.0, 1.0, 1.0, 0.0)), dot(vec4(1.0, 0.0, 0.0, 1.0), vec4(0.0, 1.0, 1.0, 0.0)))))))) > _GLF_IDENTITY(injectionSwitch.y, (true ? _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)) : _GLF_FUZZED(8242.8110))), true && (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y) && true, ! (! ((injectionSwitch.x > injectionSwitch.y) && true)))))), true, true)), _GLF_IDENTITY(! (! (_GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true))), true, true)), (bool(bvec3(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true))), true, true))) && true))), (! (! (_GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(true && (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true)), ! (! (true && (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true)) || false)))))), true, true)), (bool(bvec3(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, 1.0 * (_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))))) && true))), true, true))) && true)))) || false))), _GLF_IDENTITY(_GLF_IDENTITY(false || (injectionSwitch.x > injectionSwitch.y), true && (_GLF_IDENTITY(false || (injectionSwitch.x > injectionSwitch.y), ! (! (false || (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y)))))), false || _GLF_IDENTITY((false || (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_IDENTITY((false || (injectionSwitch.x > injectionSwitch.y)), bool(bool((false || (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + sqrt(0.0)) > injectionSwitch.y)) || (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * sqrt(1.0)), ! (! (injectionSwitch.x > injectionSwitch.y)))))))))))))))))) || false) || false))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, false, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))
    return;
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY((injectionSwitch), ((injectionSwitch)) + log(vec2(1.0, 1.0)))[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(1.6), _GLF_FUZZED(60.27)), bvec2(false, false))), injectionSwitch, injectionSwitch)).y))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, false)))))
    return;
   return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  return;
 uint workgroup_size = gl_WorkGroupSize.x;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 uint workgroup_id = _GLF_IDENTITY(gl_WorkGroupID.x, ~ (~ (gl_WorkGroupID.x)));
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! _GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_DEAD(false)), bool(bvec2(! (_GLF_DEAD(false)), false)))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_DEAD(false)), bool(bvec2(! (_GLF_DEAD(false)), false)))), _GLF_IDENTITY(! (! ((_GLF_IDENTITY(! (_GLF_DEAD(false)), bool(bvec2(! (_GLF_DEAD(false)), false)))))), bool(bvec3(! (! ((_GLF_IDENTITY(! (_GLF_DEAD(false)), bool(bvec2(! (_GLF_DEAD(false)), false)))))), false, true))))))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  return;
 uint workgroup_base = workgroup_size * workgroup_id;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), bool(_GLF_IDENTITY(bvec2(bool(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, (false) && true)))), false), bvec2(bvec2(bvec2(bool(false), false))))))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), bool(_GLF_IDENTITY(bool(! (injectionSwitch.x > injectionSwitch.y)), bool(bvec3(bool(! (injectionSwitch.x > injectionSwitch.y)), true, false)))))))))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), ! (! (! (injectionSwitch.x > injectionSwitch.y))))))))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, true && (false)))))))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
    }
  }
 uint virtual_gid = _GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_id * subgroup_size, max(subgroup_id * subgroup_size, subgroup_id * subgroup_size)), clamp(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_id * subgroup_size, max(subgroup_id * subgroup_size, subgroup_id * subgroup_size)), _GLF_IDENTITY((workgroup_base + _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, max(subgroup_id * subgroup_size, subgroup_id * subgroup_size)), (_GLF_IDENTITY(subgroup_id * subgroup_size, max(subgroup_id * subgroup_size, subgroup_id * subgroup_size))) >> (0u | 0u)), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, max(subgroup_id * subgroup_size, subgroup_id * subgroup_size)), (_GLF_IDENTITY(subgroup_id * subgroup_size, _GLF_IDENTITY(max(subgroup_id * subgroup_size, subgroup_id * subgroup_size), min(_GLF_IDENTITY(max(subgroup_id * subgroup_size, subgroup_id * subgroup_size), (max(subgroup_id * subgroup_size, subgroup_id * subgroup_size)) >> (0u ^ 0u)), max(subgroup_id * subgroup_size, subgroup_id * subgroup_size))))) >> (0u | 0u)))))), clamp((workgroup_base + _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, max(subgroup_id * subgroup_size, subgroup_id * subgroup_size)), (_GLF_IDENTITY(subgroup_id * subgroup_size, max(subgroup_id * subgroup_size, subgroup_id * subgroup_size))) >> (0u | 0u)), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, max(subgroup_id * subgroup_size, subgroup_id * subgroup_size)), (_GLF_IDENTITY(subgroup_id * subgroup_size, _GLF_IDENTITY(max(subgroup_id * subgroup_size, subgroup_id * subgroup_size), min(_GLF_IDENTITY(max(subgroup_id * subgroup_size, subgroup_id * subgroup_size), (max(subgroup_id * subgroup_size, subgroup_id * subgroup_size)) >> (0u ^ 0u)), max(subgroup_id * subgroup_size, subgroup_id * subgroup_size))))) >> (0u | 0u)))))), (workgroup_base + _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, max(subgroup_id * subgroup_size, subgroup_id * subgroup_size)), (_GLF_IDENTITY(subgroup_id * subgroup_size, max(subgroup_id * subgroup_size, subgroup_id * subgroup_size))) >> (0u | 0u)), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, max(subgroup_id * subgroup_size, subgroup_id * subgroup_size)), (_GLF_IDENTITY(subgroup_id * subgroup_size, _GLF_IDENTITY(max(subgroup_id * subgroup_size, subgroup_id * subgroup_size), min(_GLF_IDENTITY(max(subgroup_id * subgroup_size, subgroup_id * subgroup_size), (max(subgroup_id * subgroup_size, subgroup_id * subgroup_size)) >> (0u ^ 0u)), max(subgroup_id * subgroup_size, subgroup_id * subgroup_size))))) >> (0u | 0u)))))), _GLF_IDENTITY((workgroup_base + _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, max(subgroup_id * subgroup_size, subgroup_id * subgroup_size)), (_GLF_IDENTITY(subgroup_id * subgroup_size, max(subgroup_id * subgroup_size, subgroup_id * subgroup_size))) >> (0u | 0u)), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, max(subgroup_id * subgroup_size, subgroup_id * subgroup_size)), (_GLF_IDENTITY(subgroup_id * subgroup_size, _GLF_IDENTITY(max(subgroup_id * subgroup_size, subgroup_id * subgroup_size), min(_GLF_IDENTITY(max(subgroup_id * subgroup_size, subgroup_id * subgroup_size), (max(subgroup_id * subgroup_size, subgroup_id * subgroup_size)) >> (0u ^ 0u)), max(subgroup_id * subgroup_size, subgroup_id * subgroup_size))))) >> (0u | 0u)))))), (_GLF_IDENTITY((workgroup_base + _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, max(subgroup_id * subgroup_size, subgroup_id * subgroup_size)), (_GLF_IDENTITY(subgroup_id * subgroup_size, max(subgroup_id * subgroup_size, subgroup_id * subgroup_size))) >> (0u | 0u)), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, max(subgroup_id * subgroup_size, subgroup_id * subgroup_size)), (_GLF_IDENTITY(subgroup_id * subgroup_size, _GLF_IDENTITY(max(subgroup_id * subgroup_size, subgroup_id * subgroup_size), min(_GLF_IDENTITY(max(subgroup_id * subgroup_size, subgroup_id * subgroup_size), (max(subgroup_id * subgroup_size, subgroup_id * subgroup_size)) >> (0u ^ 0u)), max(subgroup_id * subgroup_size, subgroup_id * subgroup_size))))) >> (0u | 0u)))))), ((workgroup_base + _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, max(subgroup_id * subgroup_size, subgroup_id * subgroup_size)), (_GLF_IDENTITY(subgroup_id * subgroup_size, max(subgroup_id * subgroup_size, subgroup_id * subgroup_size))) >> (0u | 0u)), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, max(subgroup_id * subgroup_size, subgroup_id * subgroup_size)), (_GLF_IDENTITY(subgroup_id * subgroup_size, _GLF_IDENTITY(max(subgroup_id * subgroup_size, subgroup_id * subgroup_size), min(_GLF_IDENTITY(max(subgroup_id * subgroup_size, subgroup_id * subgroup_size), (max(subgroup_id * subgroup_size, subgroup_id * subgroup_size)) >> (0u ^ 0u)), max(subgroup_id * subgroup_size, subgroup_id * subgroup_size))))) >> (0u | 0u))))))) ^ 0u)) | 0u))) | (workgroup_base + _GLF_IDENTITY(subgroup_id * subgroup_size, max(subgroup_id * subgroup_size, subgroup_id * _GLF_IDENTITY(subgroup_size, (subgroup_size) | 0u))))), _GLF_IDENTITY(uint(uint(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_id * subgroup_size, max(subgroup_id * subgroup_size, subgroup_id * subgroup_size)), _GLF_IDENTITY((workgroup_base + _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, max(subgroup_id * subgroup_size, subgroup_id * subgroup_size)), (_GLF_IDENTITY(subgroup_id * subgroup_size, max(subgroup_id * subgroup_size, subgroup_id * subgroup_size))) >> (0u | 0u)), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, max(subgroup_id * subgroup_size, subgroup_id * subgroup_size)), (_GLF_IDENTITY(subgroup_id * subgroup_size, _GLF_IDENTITY(max(subgroup_id * subgroup_size, subgroup_id * subgroup_size), min(_GLF_IDENTITY(max(subgroup_id * subgroup_size, subgroup_id * subgroup_size), (max(subgroup_id * subgroup_size, subgroup_id * subgroup_size)) >> (0u ^ 0u)), max(subgroup_id * subgroup_size, subgroup_id * subgroup_size))))) >> (0u | 0u)))))), clamp((workgroup_base + _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, max(subgroup_id * subgroup_size, subgroup_id * subgroup_size)), (_GLF_IDENTITY(subgroup_id * subgroup_size, max(subgroup_id * subgroup_size, subgroup_id * subgroup_size))) >> (0u | 0u)), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, max(subgroup_id * subgroup_size, subgroup_id * subgroup_size)), (_GLF_IDENTITY(subgroup_id * subgroup_size, _GLF_IDENTITY(max(subgroup_id * subgroup_size, subgroup_id * subgroup_size), min(_GLF_IDENTITY(max(subgroup_id * subgroup_size, subgroup_id * subgroup_size), (max(subgroup_id * subgroup_size, subgroup_id * subgroup_size)) >> (0u ^ 0u)), max(subgroup_id * subgroup_size, subgroup_id * subgroup_size))))) >> (0u | 0u)))))), (workgroup_base + _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, max(subgroup_id * subgroup_size, subgroup_id * subgroup_size)), (_GLF_IDENTITY(subgroup_id * subgroup_size, max(subgroup_id * subgroup_size, subgroup_id * subgroup_size))) >> (0u | 0u)), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, max(subgroup_id * subgroup_size, subgroup_id * subgroup_size)), (_GLF_IDENTITY(subgroup_id * subgroup_size, _GLF_IDENTITY(max(subgroup_id * subgroup_size, subgroup_id * subgroup_size), min(_GLF_IDENTITY(max(subgroup_id * subgroup_size, subgroup_id * subgroup_size), (max(subgroup_id * subgroup_size, subgroup_id * subgroup_size)) >> (0u ^ 0u)), max(subgroup_id * subgroup_size, subgroup_id * subgroup_size))))) >> (0u | 0u)))))), _GLF_IDENTITY((workgroup_base + _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, max(subgroup_id * subgroup_size, subgroup_id * subgroup_size)), (_GLF_IDENTITY(subgroup_id * subgroup_size, max(subgroup_id * subgroup_size, subgroup_id * subgroup_size))) >> (0u | 0u)), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, max(subgroup_id * subgroup_size, subgroup_id * subgroup_size)), (_GLF_IDENTITY(subgroup_id * subgroup_size, _GLF_IDENTITY(max(subgroup_id * subgroup_size, subgroup_id * subgroup_size), min(_GLF_IDENTITY(max(subgroup_id * subgroup_size, subgroup_id * subgroup_size), (max(subgroup_id * subgroup_size, subgroup_id * subgroup_size)) >> (0u ^ 0u)), max(subgroup_id * subgroup_size, subgroup_id * subgroup_size))))) >> (0u | 0u)))))), (_GLF_IDENTITY((workgroup_base + _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, max(subgroup_id * subgroup_size, subgroup_id * subgroup_size)), (_GLF_IDENTITY(subgroup_id * subgroup_size, max(subgroup_id * subgroup_size, subgroup_id * subgroup_size))) >> (0u | 0u)), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, max(subgroup_id * subgroup_size, subgroup_id * subgroup_size)), (_GLF_IDENTITY(subgroup_id * subgroup_size, _GLF_IDENTITY(max(subgroup_id * subgroup_size, subgroup_id * subgroup_size), min(_GLF_IDENTITY(max(subgroup_id * subgroup_size, subgroup_id * subgroup_size), (max(subgroup_id * subgroup_size, subgroup_id * subgroup_size)) >> (0u ^ 0u)), max(subgroup_id * subgroup_size, subgroup_id * subgroup_size))))) >> (0u | 0u)))))), ((workgroup_base + _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, max(subgroup_id * subgroup_size, subgroup_id * subgroup_size)), (_GLF_IDENTITY(subgroup_id * subgroup_size, max(subgroup_id * subgroup_size, subgroup_id * subgroup_size))) >> (0u | 0u)), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, max(subgroup_id * subgroup_size, subgroup_id * subgroup_size)), (_GLF_IDENTITY(subgroup_id * subgroup_size, _GLF_IDENTITY(max(subgroup_id * subgroup_size, subgroup_id * subgroup_size), min(_GLF_IDENTITY(max(subgroup_id * subgroup_size, subgroup_id * subgroup_size), (max(subgroup_id * subgroup_size, subgroup_id * subgroup_size)) >> (0u ^ 0u)), max(subgroup_id * subgroup_size, subgroup_id * subgroup_size))))) >> (0u | 0u))))))) ^ 0u)) | 0u))) | (workgroup_base + _GLF_IDENTITY(subgroup_id * subgroup_size, max(subgroup_id * subgroup_size, subgroup_id * _GLF_IDENTITY(subgroup_size, (subgroup_size) | 0u))))), (_GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_id * subgroup_size, max(subgroup_id * subgroup_size, subgroup_id * subgroup_size)), _GLF_IDENTITY((workgroup_base + _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, max(subgroup_id * subgroup_size, subgroup_id * subgroup_size)), (_GLF_IDENTITY(subgroup_id * subgroup_size, max(subgroup_id * subgroup_size, subgroup_id * subgroup_size))) >> (0u | 0u)), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, max(subgroup_id * subgroup_size, subgroup_id * subgroup_size)), (_GLF_IDENTITY(subgroup_id * subgroup_size, _GLF_IDENTITY(max(subgroup_id * subgroup_size, subgroup_id * subgroup_size), min(_GLF_IDENTITY(max(subgroup_id * subgroup_size, subgroup_id * subgroup_size), (max(subgroup_id * subgroup_size, subgroup_id * subgroup_size)) >> (0u ^ 0u)), max(subgroup_id * subgroup_size, subgroup_id * subgroup_size))))) >> (0u | 0u)))))), clamp((workgroup_base + _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, max(subgroup_id * subgroup_size, subgroup_id * subgroup_size)), (_GLF_IDENTITY(subgroup_id * subgroup_size, max(subgroup_id * subgroup_size, subgroup_id * subgroup_size))) >> (0u | 0u)), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, max(subgroup_id * subgroup_size, subgroup_id * subgroup_size)), (_GLF_IDENTITY(subgroup_id * subgroup_size, _GLF_IDENTITY(max(subgroup_id * subgroup_size, subgroup_id * subgroup_size), min(_GLF_IDENTITY(max(subgroup_id * subgroup_size, subgroup_id * subgroup_size), (max(subgroup_id * subgroup_size, subgroup_id * subgroup_size)) >> (0u ^ 0u)), max(subgroup_id * subgroup_size, subgroup_id * subgroup_size))))) >> (0u | 0u)))))), (workgroup_base + _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, max(subgroup_id * subgroup_size, subgroup_id * subgroup_size)), (_GLF_IDENTITY(subgroup_id * subgroup_size, max(subgroup_id * subgroup_size, subgroup_id * subgroup_size))) >> (0u | 0u)), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, max(subgroup_id * subgroup_size, subgroup_id * subgroup_size)), (_GLF_IDENTITY(subgroup_id * subgroup_size, _GLF_IDENTITY(max(subgroup_id * subgroup_size, subgroup_id * subgroup_size), min(_GLF_IDENTITY(max(subgroup_id * subgroup_size, subgroup_id * subgroup_size), (max(subgroup_id * subgroup_size, subgroup_id * subgroup_size)) >> (0u ^ 0u)), max(subgroup_id * subgroup_size, subgroup_id * subgroup_size))))) >> (0u | 0u)))))), _GLF_IDENTITY((workgroup_base + _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, max(subgroup_id * subgroup_size, subgroup_id * subgroup_size)), (_GLF_IDENTITY(subgroup_id * subgroup_size, max(subgroup_id * subgroup_size, subgroup_id * subgroup_size))) >> (0u | 0u)), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, max(subgroup_id * subgroup_size, subgroup_id * subgroup_size)), (_GLF_IDENTITY(subgroup_id * subgroup_size, _GLF_IDENTITY(max(subgroup_id * subgroup_size, subgroup_id * subgroup_size), min(_GLF_IDENTITY(max(subgroup_id * subgroup_size, subgroup_id * subgroup_size), (max(subgroup_id * subgroup_size, subgroup_id * subgroup_size)) >> (0u ^ 0u)), max(subgroup_id * subgroup_size, subgroup_id * subgroup_size))))) >> (0u | 0u)))))), (_GLF_IDENTITY((workgroup_base + _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, max(subgroup_id * subgroup_size, subgroup_id * subgroup_size)), (_GLF_IDENTITY(subgroup_id * subgroup_size, max(subgroup_id * subgroup_size, subgroup_id * subgroup_size))) >> (0u | 0u)), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, max(subgroup_id * subgroup_size, subgroup_id * subgroup_size)), (_GLF_IDENTITY(subgroup_id * subgroup_size, _GLF_IDENTITY(max(subgroup_id * subgroup_size, subgroup_id * subgroup_size), min(_GLF_IDENTITY(max(subgroup_id * subgroup_size, subgroup_id * subgroup_size), (max(subgroup_id * subgroup_size, subgroup_id * subgroup_size)) >> (0u ^ 0u)), max(subgroup_id * subgroup_size, subgroup_id * subgroup_size))))) >> (0u | 0u)))))), ((workgroup_base + _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, max(subgroup_id * subgroup_size, subgroup_id * subgroup_size)), (_GLF_IDENTITY(subgroup_id * subgroup_size, max(subgroup_id * subgroup_size, subgroup_id * subgroup_size))) >> (0u | 0u)), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, max(subgroup_id * subgroup_size, subgroup_id * subgroup_size)), (_GLF_IDENTITY(subgroup_id * subgroup_size, _GLF_IDENTITY(max(subgroup_id * subgroup_size, subgroup_id * subgroup_size), min(_GLF_IDENTITY(max(subgroup_id * subgroup_size, subgroup_id * subgroup_size), (max(subgroup_id * subgroup_size, subgroup_id * subgroup_size)) >> (0u ^ 0u)), max(subgroup_id * subgroup_size, subgroup_id * subgroup_size))))) >> (0u | 0u))))))) ^ 0u)) | 0u))) | (workgroup_base + _GLF_IDENTITY(subgroup_id * subgroup_size, max(subgroup_id * subgroup_size, subgroup_id * _GLF_IDENTITY(subgroup_size, (subgroup_size) | 0u)))))) - 0u))), uint(uint(uint(uint(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_id * subgroup_size, max(subgroup_id * subgroup_size, subgroup_id * subgroup_size)), _GLF_IDENTITY((workgroup_base + _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, max(subgroup_id * subgroup_size, subgroup_id * subgroup_size)), (_GLF_IDENTITY(subgroup_id * subgroup_size, max(subgroup_id * subgroup_size, subgroup_id * subgroup_size))) >> (0u | 0u)), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, max(subgroup_id * subgroup_size, subgroup_id * subgroup_size)), (_GLF_IDENTITY(subgroup_id * subgroup_size, _GLF_IDENTITY(max(subgroup_id * subgroup_size, subgroup_id * subgroup_size), min(_GLF_IDENTITY(max(subgroup_id * subgroup_size, subgroup_id * subgroup_size), (max(subgroup_id * subgroup_size, subgroup_id * subgroup_size)) >> (0u ^ 0u)), max(subgroup_id * subgroup_size, subgroup_id * subgroup_size))))) >> (0u | 0u)))))), clamp((workgroup_base + _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, max(subgroup_id * subgroup_size, subgroup_id * subgroup_size)), (_GLF_IDENTITY(subgroup_id * subgroup_size, max(subgroup_id * subgroup_size, subgroup_id * subgroup_size))) >> (0u | 0u)), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, max(subgroup_id * subgroup_size, subgroup_id * subgroup_size)), (_GLF_IDENTITY(subgroup_id * subgroup_size, _GLF_IDENTITY(max(subgroup_id * subgroup_size, subgroup_id * subgroup_size), min(_GLF_IDENTITY(max(subgroup_id * subgroup_size, subgroup_id * subgroup_size), (max(subgroup_id * subgroup_size, subgroup_id * subgroup_size)) >> (0u ^ 0u)), max(subgroup_id * subgroup_size, subgroup_id * subgroup_size))))) >> (0u | 0u)))))), (workgroup_base + _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, max(subgroup_id * subgroup_size, subgroup_id * subgroup_size)), (_GLF_IDENTITY(subgroup_id * subgroup_size, max(subgroup_id * subgroup_size, subgroup_id * subgroup_size))) >> (0u | 0u)), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, max(subgroup_id * subgroup_size, subgroup_id * subgroup_size)), (_GLF_IDENTITY(subgroup_id * subgroup_size, _GLF_IDENTITY(max(subgroup_id * subgroup_size, subgroup_id * subgroup_size), min(_GLF_IDENTITY(max(subgroup_id * subgroup_size, subgroup_id * subgroup_size), (max(subgroup_id * subgroup_size, subgroup_id * subgroup_size)) >> (0u ^ 0u)), max(subgroup_id * subgroup_size, subgroup_id * subgroup_size))))) >> (0u | 0u)))))), _GLF_IDENTITY((workgroup_base + _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, max(subgroup_id * subgroup_size, subgroup_id * subgroup_size)), (_GLF_IDENTITY(subgroup_id * subgroup_size, max(subgroup_id * subgroup_size, subgroup_id * subgroup_size))) >> (0u | 0u)), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, max(subgroup_id * subgroup_size, subgroup_id * subgroup_size)), (_GLF_IDENTITY(subgroup_id * subgroup_size, _GLF_IDENTITY(max(subgroup_id * subgroup_size, subgroup_id * subgroup_size), min(_GLF_IDENTITY(max(subgroup_id * subgroup_size, subgroup_id * subgroup_size), (max(subgroup_id * subgroup_size, subgroup_id * subgroup_size)) >> (0u ^ 0u)), max(subgroup_id * subgroup_size, subgroup_id * subgroup_size))))) >> (0u | 0u)))))), (_GLF_IDENTITY((workgroup_base + _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, max(subgroup_id * subgroup_size, subgroup_id * subgroup_size)), (_GLF_IDENTITY(subgroup_id * subgroup_size, max(subgroup_id * subgroup_size, subgroup_id * subgroup_size))) >> (0u | 0u)), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, max(subgroup_id * subgroup_size, subgroup_id * subgroup_size)), (_GLF_IDENTITY(subgroup_id * subgroup_size, _GLF_IDENTITY(max(subgroup_id * subgroup_size, subgroup_id * subgroup_size), min(_GLF_IDENTITY(max(subgroup_id * subgroup_size, subgroup_id * subgroup_size), (max(subgroup_id * subgroup_size, subgroup_id * subgroup_size)) >> (0u ^ 0u)), max(subgroup_id * subgroup_size, subgroup_id * subgroup_size))))) >> (0u | 0u)))))), ((workgroup_base + _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, max(subgroup_id * subgroup_size, subgroup_id * subgroup_size)), (_GLF_IDENTITY(subgroup_id * subgroup_size, max(subgroup_id * subgroup_size, subgroup_id * subgroup_size))) >> (0u | 0u)), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, max(subgroup_id * subgroup_size, subgroup_id * subgroup_size)), (_GLF_IDENTITY(subgroup_id * subgroup_size, _GLF_IDENTITY(max(subgroup_id * subgroup_size, subgroup_id * subgroup_size), min(_GLF_IDENTITY(max(subgroup_id * subgroup_size, subgroup_id * subgroup_size), (max(subgroup_id * subgroup_size, subgroup_id * subgroup_size)) >> (0u ^ 0u)), max(subgroup_id * subgroup_size, subgroup_id * subgroup_size))))) >> (0u | 0u))))))) ^ 0u)) | 0u))) | (workgroup_base + _GLF_IDENTITY(subgroup_id * subgroup_size, max(subgroup_id * subgroup_size, subgroup_id * _GLF_IDENTITY(subgroup_size, (subgroup_size) | 0u))))), (_GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_id * subgroup_size, max(subgroup_id * subgroup_size, subgroup_id * subgroup_size)), _GLF_IDENTITY((workgroup_base + _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, max(subgroup_id * subgroup_size, subgroup_id * subgroup_size)), (_GLF_IDENTITY(subgroup_id * subgroup_size, max(subgroup_id * subgroup_size, subgroup_id * subgroup_size))) >> (0u | 0u)), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, max(subgroup_id * subgroup_size, subgroup_id * subgroup_size)), (_GLF_IDENTITY(subgroup_id * subgroup_size, _GLF_IDENTITY(max(subgroup_id * subgroup_size, subgroup_id * subgroup_size), min(_GLF_IDENTITY(max(subgroup_id * subgroup_size, subgroup_id * subgroup_size), (max(subgroup_id * subgroup_size, subgroup_id * subgroup_size)) >> (0u ^ 0u)), max(subgroup_id * subgroup_size, subgroup_id * subgroup_size))))) >> (0u | 0u)))))), clamp((workgroup_base + _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, max(subgroup_id * subgroup_size, subgroup_id * subgroup_size)), (_GLF_IDENTITY(subgroup_id * subgroup_size, max(subgroup_id * subgroup_size, subgroup_id * subgroup_size))) >> (0u | 0u)), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, max(subgroup_id * subgroup_size, subgroup_id * subgroup_size)), (_GLF_IDENTITY(subgroup_id * subgroup_size, _GLF_IDENTITY(max(subgroup_id * subgroup_size, subgroup_id * subgroup_size), min(_GLF_IDENTITY(max(subgroup_id * subgroup_size, subgroup_id * subgroup_size), (max(subgroup_id * subgroup_size, subgroup_id * subgroup_size)) >> (0u ^ 0u)), max(subgroup_id * subgroup_size, subgroup_id * subgroup_size))))) >> (0u | 0u)))))), (workgroup_base + _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, max(subgroup_id * subgroup_size, subgroup_id * subgroup_size)), (_GLF_IDENTITY(subgroup_id * subgroup_size, max(subgroup_id * subgroup_size, subgroup_id * subgroup_size))) >> (0u | 0u)), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, max(subgroup_id * subgroup_size, subgroup_id * subgroup_size)), (_GLF_IDENTITY(subgroup_id * subgroup_size, _GLF_IDENTITY(max(subgroup_id * subgroup_size, subgroup_id * subgroup_size), min(_GLF_IDENTITY(max(subgroup_id * subgroup_size, subgroup_id * subgroup_size), (max(subgroup_id * subgroup_size, subgroup_id * subgroup_size)) >> (0u ^ 0u)), max(subgroup_id * subgroup_size, subgroup_id * subgroup_size))))) >> (0u | 0u)))))), _GLF_IDENTITY((workgroup_base + _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, max(subgroup_id * subgroup_size, subgroup_id * subgroup_size)), (_GLF_IDENTITY(subgroup_id * subgroup_size, max(subgroup_id * subgroup_size, subgroup_id * subgroup_size))) >> (0u | 0u)), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, max(subgroup_id * subgroup_size, subgroup_id * subgroup_size)), (_GLF_IDENTITY(subgroup_id * subgroup_size, _GLF_IDENTITY(max(subgroup_id * subgroup_size, subgroup_id * subgroup_size), min(_GLF_IDENTITY(max(subgroup_id * subgroup_size, subgroup_id * subgroup_size), (max(subgroup_id * subgroup_size, subgroup_id * subgroup_size)) >> (0u ^ 0u)), max(subgroup_id * subgroup_size, subgroup_id * subgroup_size))))) >> (0u | 0u)))))), (_GLF_IDENTITY((workgroup_base + _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, max(subgroup_id * subgroup_size, subgroup_id * subgroup_size)), (_GLF_IDENTITY(subgroup_id * subgroup_size, max(subgroup_id * subgroup_size, subgroup_id * subgroup_size))) >> (0u | 0u)), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, max(subgroup_id * subgroup_size, subgroup_id * subgroup_size)), (_GLF_IDENTITY(subgroup_id * subgroup_size, _GLF_IDENTITY(max(subgroup_id * subgroup_size, subgroup_id * subgroup_size), min(_GLF_IDENTITY(max(subgroup_id * subgroup_size, subgroup_id * subgroup_size), (max(subgroup_id * subgroup_size, subgroup_id * subgroup_size)) >> (0u ^ 0u)), max(subgroup_id * subgroup_size, subgroup_id * subgroup_size))))) >> (0u | 0u)))))), ((workgroup_base + _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, max(subgroup_id * subgroup_size, subgroup_id * subgroup_size)), (_GLF_IDENTITY(subgroup_id * subgroup_size, max(subgroup_id * subgroup_size, subgroup_id * subgroup_size))) >> (0u | 0u)), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, max(subgroup_id * subgroup_size, subgroup_id * subgroup_size)), (_GLF_IDENTITY(subgroup_id * subgroup_size, _GLF_IDENTITY(max(subgroup_id * subgroup_size, subgroup_id * subgroup_size), min(_GLF_IDENTITY(max(subgroup_id * subgroup_size, subgroup_id * subgroup_size), (max(subgroup_id * subgroup_size, subgroup_id * subgroup_size)) >> (0u ^ 0u)), max(subgroup_id * subgroup_size, subgroup_id * subgroup_size))))) >> (0u | 0u))))))) ^ 0u)) | 0u))) | (workgroup_base + _GLF_IDENTITY(subgroup_id * subgroup_size, max(subgroup_id * subgroup_size, subgroup_id * _GLF_IDENTITY(subgroup_size, (subgroup_size) | 0u)))))) - 0u))))))), workgroup_base + _GLF_IDENTITY(subgroup_id * subgroup_size, max(subgroup_id * subgroup_size, subgroup_id * subgroup_size)), workgroup_base + _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, max(_GLF_IDENTITY(subgroup_id * subgroup_size, clamp(_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) << 0u), subgroup_id * subgroup_size, subgroup_id * subgroup_size)), _GLF_IDENTITY(subgroup_id, 1u * (subgroup_id)) * subgroup_size)), min(_GLF_IDENTITY(subgroup_id * subgroup_size, max(subgroup_id * subgroup_size, subgroup_id * subgroup_size)), _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, max(subgroup_id * subgroup_size, subgroup_id * subgroup_size)), _GLF_IDENTITY(0u ^ (_GLF_IDENTITY(subgroup_id * subgroup_size, max(subgroup_id * subgroup_size, _GLF_IDENTITY(subgroup_id * subgroup_size, (_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) >> 0u)) + 0u)))), (0u ^ (_GLF_IDENTITY(subgroup_id * subgroup_size, max(subgroup_id * subgroup_size, _GLF_IDENTITY(subgroup_id * subgroup_size, (_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) >> 0u)) + 0u))))) << 0u)))))) + subgroup_local_id;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
  return;
 uint next_virtual_gid = workgroup_base + subgroup_id * subgroup_size + (_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, (_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, clamp((_GLF_IDENTITY(subgroup_local_id, ~ (_GLF_IDENTITY(~ _GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | (subgroup_local_id))), max((_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | (subgroup_local_id))), _GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | (subgroup_local_id))), ((_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | (subgroup_local_id)))) / 1u))), clamp(_GLF_IDENTITY(~ (subgroup_local_id), (true ? _GLF_IDENTITY(~ (subgroup_local_id), _GLF_IDENTITY((true ? ~ (subgroup_local_id) : _GLF_FUZZED(_GLF_IDENTITY(virtual_gid, min(virtual_gid, virtual_gid)))), 0u + ((true ? ~ (subgroup_local_id) : _GLF_FUZZED(virtual_gid))))) : _GLF_FUZZED(_GLF_IDENTITY(atomicAnd(workgroup_base, _GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, 1u * (subgroup_size))) * 1u)), (atomicAnd(workgroup_base, subgroup_size)) / ((1u << _GLF_IDENTITY(uint(6u), uint(6u))) >> _GLF_IDENTITY(uint(6u), uint(6u))))))), ~ (subgroup_local_id), ~ (subgroup_local_id))))) + 1) % subgroup_size, (subgroup_local_id + 1) % subgroup_size, (subgroup_local_id + 1) % subgroup_size))) ^ ((_GLF_IDENTITY(0u, (0u) ^ 0u) & 53684u) | uint(_GLF_ZERO(0.0, injectionSwitch.x)))));
 if(_GLF_DEAD(false))
  return;
 uint read_1 = atomicLoad(buf[virtual_gid], 4, 64, 0);
 if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), bool(_GLF_IDENTITY(bool(_GLF_DEAD(false)), bool(bool(bool(_GLF_DEAD(false))))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      return;
     return;
    }
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 atomicStore(buf[next_virtual_gid], uint(read_1 + 1), 4, 64, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(4, (false ? _GLF_FUZZED(-84757) : 4)), (true ? _GLF_IDENTITY(4, (false ? _GLF_FUZZED(-84757) : _GLF_IDENTITY(4, (_GLF_IDENTITY(4, (_GLF_IDENTITY(4, (4) | (4))) >> 0)) | (_GLF_IDENTITY(4, clamp(4, 4, 4)))))) : _GLF_FUZZED(-87855))), (false ? _GLF_FUZZED(_GLF_IDENTITY(54912, min(54912, _GLF_IDENTITY(54912, (true ? 54912 : _GLF_FUZZED(-16839)))))) : _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(4, (false ? _GLF_FUZZED(-84757) : 4)), (_GLF_IDENTITY(_GLF_IDENTITY(4, (false ? _GLF_FUZZED(-84757) : 4)), (_GLF_IDENTITY(4, _GLF_IDENTITY((false ? _GLF_IDENTITY(_GLF_FUZZED(-84757), (_GLF_IDENTITY(_GLF_FUZZED(-84757), 0 ^ (_GLF_FUZZED(-84757)))) ^ 0) : 4), int(_GLF_IDENTITY(ivec3((false ? _GLF_FUZZED(-84757) : 4), 1, 1), (ivec3((false ? _GLF_FUZZED(-84757) : 4), 1, 1)) >> ivec3(0, _GLF_IDENTITY(0, (0) / 1), 0)))))) | (_GLF_IDENTITY(_GLF_IDENTITY(4, _GLF_IDENTITY((false ? _GLF_FUZZED(_GLF_IDENTITY(-84757, (-84757) - ((-42380 % 98086) & 0))) : 4), max((false ? _GLF_FUZZED(_GLF_IDENTITY(-84757, (-84757) - ((-42380 % 98086) & 0))) : 4), _GLF_IDENTITY((false ? _GLF_FUZZED(_GLF_IDENTITY(-84757, (-84757) - ((-42380 % 98086) & 0))) : 4), (true ? (false ? _GLF_FUZZED(_GLF_IDENTITY(-84757, (-84757) - ((-42380 % 98086) & 0))) : 4) : _GLF_FUZZED(65154)))))), 1 * (_GLF_IDENTITY(4, (false ? _GLF_FUZZED(-84757) : 4))))))) - 0), (_GLF_IDENTITY(4, (false ? _GLF_FUZZED(-84757) : 4))) - 0))));
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      return;
     return;
    }
   return;
  }
 uint read_2 = atomicLoad(buf[virtual_gid], 4, 64, _GLF_IDENTITY(0, (0 << _GLF_IDENTITY(int(0), int(0))) | (0)));
 atomicStore(buf[next_virtual_gid], uint(_GLF_IDENTITY(read_1 + 1, (read_1 + 1) - ((191174u | 196146u) & 0u)) == read_2) + 1, 4, 64, 4);
 if(_GLF_DEAD(false))
  return;
}
