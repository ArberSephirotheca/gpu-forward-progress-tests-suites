#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 uint subgroup_id = gl_SubgroupID;
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true), bool(bvec4(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true), true, true, true)))), _GLF_IDENTITY(! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y, float(mat4x2(injectionSwitch.y, 1.0, length(vec2(0.0, 0.0)), _GLF_IDENTITY(abs(length(vec4(0.0, 0.0, 0.0, 0.0))), min(abs(length(vec4(0.0, 0.0, 0.0, 0.0))), abs(length(vec4(0.0, 0.0, _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(float(84670u))), bool(false))), 0.0))))), _GLF_IDENTITY(0.0, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(acosh(0.4)) : 0.0)), 1.0, 1.0, round(length(_GLF_IDENTITY(normalize(vec3(1.0, 1.0, 1.0)), _GLF_IDENTITY(vec3(mat3x2(_GLF_IDENTITY(normalize(vec3(1.0, 1.0, 1.0)), _GLF_IDENTITY(vec3(mat2x4(normalize(vec3(1.0, 1.0, 1.0)), 0.0, 0.0, 1.0, 1.0, 0.0)), mix(vec3((vec3(mat2x4(normalize(vec3(1.0, 1.0, 1.0)), 0.0, 0.0, 1.0, 1.0, 0.0)))[0], _GLF_FUZZED(-140.462), (vec3(mat2x4(normalize(vec3(1.0, 1.0, 1.0)), 0.0, 0.0, 1.0, 1.0, 0.0)))[2]), vec3(_GLF_FUZZED(3.2), (vec3(mat2x4(normalize(vec3(1.0, 1.0, 1.0)), 0.0, 0.0, 1.0, 1.0, 0.0)))[1], _GLF_FUZZED(9.2)), bvec3(false, true, false)))), _GLF_IDENTITY(dot(vec3(0.0, cos(0.0), 0.0), vec3(0.0, 1.0, 0.0)), _GLF_IDENTITY(dot(vec3(0.0, cos(0.0), 0.0), vec3(0.0, 1.0, 0.0)), mix(float(dot(vec3(0.0, cos(0.0), 0.0), vec3(0.0, 1.0, 0.0))), float(_GLF_FUZZED(15.82)), bool(false)))), 1.0, 0.0)), mix(vec3((vec3(mat3x2(normalize(_GLF_IDENTITY(vec3(1.0, 1.0, 1.0), min(_GLF_IDENTITY(vec3(1.0, 1.0, 1.0), min(vec3(1.0, 1.0, 1.0), vec3(1.0, 1.0, 1.0))), vec3(1.0, 1.0, 1.0)))), _GLF_IDENTITY(dot(vec3(0.0, cos(0.0), 0.0), vec3(0.0, 1.0, 0.0)), _GLF_IDENTITY(dot(vec3(0.0, cos(0.0), 0.0), vec3(0.0, 1.0, 0.0)), mix(float(_GLF_IDENTITY(dot(vec3(0.0, cos(0.0), 0.0), vec3(0.0, 1.0, 0.0)), max(dot(vec3(0.0, cos(0.0), 0.0), vec3(0.0, 1.0, 0.0)), _GLF_IDENTITY(dot(vec3(0.0, cos(0.0), 0.0), vec3(0.0, 1.0, 0.0)), float(mat3(dot(vec3(0.0, cos(0.0), 0.0), vec3(0.0, 1.0, 0.0)), 0.0, determinant(mat2(0.0, 0.0, 1.0, 0.0)), 1.0, sqrt(1.0), 1.0, 1.0, 1.0, 1.0)))))), float(_GLF_FUZZED(15.82)), bool(false)))), 1.0, 0.0)))[0], _GLF_FUZZED((true ? 313.073 : -2436.9042)), (vec3(mat3x2(normalize(vec3(1.0, 1.0, 1.0)), _GLF_IDENTITY(dot(vec3(0.0, cos(0.0), 0.0), vec3(0.0, 1.0, 0.0)), _GLF_IDENTITY(dot(vec3(0.0, cos(0.0), 0.0), vec3(0.0, 1.0, 0.0)), mix(float(dot(vec3(0.0, cos(0.0), _GLF_IDENTITY(0.0, (0.0) - 0.0)), vec3(0.0, 1.0, 0.0))), float(_GLF_IDENTITY(_GLF_FUZZED(15.82), mix(float(_GLF_FUZZED(-67.17)), float(_GLF_FUZZED(15.82)), bool(true)))), bool(false)))), 1.0, 0.0)))[2]), vec3(_GLF_FUZZED(-89.41), (vec3(mat3x2(normalize(vec3(1.0, 1.0, 1.0)), _GLF_IDENTITY(dot(vec3(0.0, cos(0.0), 0.0), vec3(0.0, 1.0, 0.0)), _GLF_IDENTITY(dot(vec3(0.0, cos(0.0), 0.0), vec3(0.0, 1.0, 0.0)), mix(float(dot(vec3(0.0, cos(0.0), 0.0), vec3(0.0, 1.0, 0.0))), float(_GLF_FUZZED(15.82)), bool(false)))), 1.0, 0.0)))[1], _GLF_FUZZED(8.2)), bvec3(false, true, false)))))))))))))), ! (! (! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y, float(mat4x2(injectionSwitch.y, 1.0, length(vec2(0.0, 0.0)), _GLF_IDENTITY(abs(length(vec4(0.0, 0.0, 0.0, 0.0))), min(abs(length(vec4(0.0, 0.0, 0.0, 0.0))), abs(length(vec4(0.0, 0.0, _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(float(84670u))), bool(false))), _GLF_IDENTITY(0.0, float(_GLF_IDENTITY(mat3x4(0.0, determinant(mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0)), _GLF_ZERO(0.0, injectionSwitch.x), 0.0, sqrt(1.0), 0.0, 1.0, 1.0, 1.0, 0.0, _GLF_IDENTITY(1.0, 1.0 * (1.0)), 0.0), _GLF_IDENTITY((mat3x4(0.0, determinant(mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0)), _GLF_ZERO(0.0, injectionSwitch.x), 0.0, sqrt(1.0), 0.0, 1.0, 1.0, 1.0, 0.0, _GLF_IDENTITY(1.0, 1.0 * (1.0)), 0.0)) * mat3(1.0), ((mat3x4(0.0, determinant(mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0)), _GLF_ZERO(0.0, injectionSwitch.x), 0.0, sqrt(1.0), 0.0, 1.0, 1.0, 1.0, 0.0, _GLF_IDENTITY(1.0, 1.0 * (1.0)), 0.0)) * mat3(1.0)) * mat3(1.0)))))))))), _GLF_IDENTITY(0.0, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(acosh(0.4)) : 0.0)), 1.0, 1.0, round(length(_GLF_IDENTITY(normalize(vec3(1.0, 1.0, 1.0)), _GLF_IDENTITY(vec3(mat3x2(_GLF_IDENTITY(normalize(vec3(1.0, 1.0, 1.0)), _GLF_IDENTITY(vec3(mat2x4(normalize(vec3(1.0, 1.0, 1.0)), 0.0, 0.0, 1.0, 1.0, 0.0)), mix(vec3((vec3(mat2x4(normalize(vec3(1.0, 1.0, 1.0)), 0.0, 0.0, _GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0, 0.0)))[0], _GLF_FUZZED(-140.462), (vec3(mat2x4(normalize(vec3(1.0, 1.0, 1.0)), 0.0, 0.0, 1.0, 1.0, 0.0)))[2]), vec3(_GLF_FUZZED(3.2), (vec3(mat2x4(normalize(vec3(1.0, 1.0, 1.0)), 0.0, 0.0, 1.0, 1.0, 0.0)))[1], _GLF_FUZZED(9.2)), bvec3(false, true, false)))), _GLF_IDENTITY(dot(vec3(0.0, cos(0.0), 0.0), vec3(0.0, 1.0, 0.0)), _GLF_IDENTITY(dot(vec3(0.0, cos(0.0), 0.0), vec3(0.0, 1.0, 0.0)), mix(float(dot(vec3(0.0, cos(0.0), 0.0), vec3(0.0, 1.0, 0.0))), float(_GLF_FUZZED(15.82)), bool(false)))), 1.0, 0.0)), mix(vec3((vec3(mat3x2(normalize(_GLF_IDENTITY(vec3(1.0, 1.0, 1.0), min(_GLF_IDENTITY(vec3(1.0, 1.0, 1.0), min(vec3(1.0, 1.0, 1.0), vec3(1.0, 1.0, 1.0))), vec3(1.0, 1.0, 1.0)))), _GLF_IDENTITY(dot(vec3(0.0, cos(0.0), 0.0), vec3(_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED((453.031 + -5.3))), float(_GLF_IDENTITY(0.0, 1.0 * (_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(24.08)))))), bool(true))), _GLF_IDENTITY(1.0, float(float(_GLF_IDENTITY(1.0, (1.0) - 0.0)))), 0.0)), _GLF_IDENTITY(dot(vec3(0.0, cos(0.0), 0.0), vec3(0.0, 1.0, 0.0)), mix(float(_GLF_IDENTITY(dot(vec3(0.0, cos(0.0), 0.0), vec3(0.0, 1.0, 0.0)), max(dot(vec3(0.0, cos(0.0), 0.0), vec3(0.0, 1.0, 0.0)), _GLF_IDENTITY(dot(vec3(0.0, cos(0.0), 0.0), vec3(0.0, 1.0, _GLF_IDENTITY(0.0, 1.0 * (0.0)))), _GLF_IDENTITY(float(mat3(dot(vec3(0.0, cos(0.0), 0.0), vec3(0.0, 1.0, 0.0)), _GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0)), determinant(mat2(0.0, 0.0, 1.0, 0.0)), 1.0, sqrt(1.0), 1.0, 1.0, 1.0, 1.0)), float(_GLF_IDENTITY(mat2x4(float(mat3(dot(vec3(0.0, cos(0.0), 0.0), vec3(0.0, 1.0, 0.0)), _GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0)), determinant(mat2(0.0, 0.0, 1.0, 0.0)), 1.0, sqrt(1.0), 1.0, 1.0, 1.0, 1.0)), abs(1.0), 1.0, determinant(mat2(0.0, 0.0, 1.0, 0.0)), 0.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), _GLF_IDENTITY(dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(0.0, 1.0, 0.0, 0.0)), dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(0.0, 1.0, 0.0, 0.0)))), (mat2x4(float(mat3(dot(vec3(0.0, cos(0.0), 0.0), vec3(0.0, 1.0, 0.0)), _GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0)), determinant(mat2(0.0, 0.0, 1.0, 0.0)), 1.0, sqrt(1.0), 1.0, 1.0, 1.0, 1.0)), abs(1.0), 1.0, determinant(mat2(0.0, 0.0, 1.0, 0.0)), 0.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), _GLF_IDENTITY(dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(0.0, 1.0, 0.0, 0.0)), dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(0.0, 1.0, 0.0, 0.0))))) + mat2x4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)))))))), float(_GLF_FUZZED(15.82)), bool(false)))), 1.0, 0.0)))[0], _GLF_FUZZED((true ? 313.073 : -2436.9042)), (vec3(mat3x2(normalize(vec3(1.0, 1.0, 1.0)), _GLF_IDENTITY(dot(vec3(0.0, cos(0.0), 0.0), vec3(0.0, 1.0, 0.0)), _GLF_IDENTITY(dot(vec3(0.0, cos(0.0), 0.0), vec3(0.0, 1.0, 0.0)), mix(float(dot(vec3(0.0, cos(0.0), _GLF_IDENTITY(0.0, (0.0) - 0.0)), vec3(0.0, 1.0, 0.0))), float(_GLF_IDENTITY(_GLF_FUZZED(15.82), mix(float(_GLF_FUZZED(-67.17)), float(_GLF_FUZZED(15.82)), bool(true)))), bool(false)))), 1.0, 0.0)))[2]), vec3(_GLF_FUZZED(-89.41), _GLF_IDENTITY((vec3(mat3x2(normalize(vec3(1.0, 1.0, 1.0)), _GLF_IDENTITY(dot(vec3(0.0, cos(0.0), 0.0), vec3(0.0, 1.0, 0.0)), _GLF_IDENTITY(dot(vec3(0.0, cos(0.0), 0.0), vec3(0.0, 1.0, 0.0)), mix(float(dot(vec3(0.0, _GLF_IDENTITY(cos(0.0), (cos(0.0)) - abs(0.0)), 0.0), vec3(0.0, 1.0, 0.0))), float(_GLF_FUZZED(15.82)), bool(false)))), 1.0, 0.0)))[1], mix(float(_GLF_IDENTITY((vec3(mat3x2(normalize(vec3(1.0, 1.0, 1.0)), _GLF_IDENTITY(dot(vec3(0.0, cos(0.0), 0.0), vec3(0.0, 1.0, 0.0)), _GLF_IDENTITY(dot(vec3(0.0, cos(0.0), 0.0), vec3(0.0, 1.0, 0.0)), mix(float(dot(vec3(0.0, _GLF_IDENTITY(cos(0.0), (cos(0.0)) - abs(0.0)), 0.0), vec3(0.0, 1.0, 0.0))), float(_GLF_FUZZED(15.82)), bool(false)))), 1.0, 0.0)))[1], clamp((vec3(mat3x2(normalize(vec3(1.0, 1.0, 1.0)), _GLF_IDENTITY(dot(vec3(0.0, cos(0.0), 0.0), vec3(0.0, 1.0, 0.0)), _GLF_IDENTITY(dot(vec3(0.0, cos(0.0), 0.0), vec3(0.0, 1.0, 0.0)), mix(float(dot(vec3(0.0, _GLF_IDENTITY(cos(0.0), (cos(0.0)) - abs(0.0)), 0.0), vec3(0.0, 1.0, 0.0))), float(_GLF_FUZZED(15.82)), bool(false)))), 1.0, 0.0)))[1], (vec3(mat3x2(normalize(vec3(1.0, 1.0, 1.0)), _GLF_IDENTITY(dot(vec3(0.0, cos(0.0), 0.0), vec3(0.0, 1.0, 0.0)), _GLF_IDENTITY(dot(vec3(0.0, cos(0.0), 0.0), vec3(0.0, 1.0, 0.0)), mix(float(dot(vec3(0.0, _GLF_IDENTITY(cos(0.0), (cos(0.0)) - abs(0.0)), 0.0), vec3(0.0, 1.0, 0.0))), float(_GLF_FUZZED(15.82)), bool(false)))), 1.0, 0.0)))[1], (vec3(mat3x2(normalize(vec3(1.0, 1.0, 1.0)), _GLF_IDENTITY(dot(vec3(0.0, cos(0.0), 0.0), vec3(0.0, 1.0, 0.0)), _GLF_IDENTITY(dot(vec3(0.0, cos(0.0), 0.0), vec3(0.0, 1.0, 0.0)), mix(float(dot(vec3(0.0, _GLF_IDENTITY(cos(0.0), (cos(0.0)) - abs(0.0)), 0.0), vec3(0.0, 1.0, 0.0))), float(_GLF_FUZZED(15.82)), bool(false)))), 1.0, 0.0)))[1]))), float(_GLF_FUZZED(-9.7)), bool(false))), _GLF_FUZZED(8.2)), bvec3(false, true, false)))))))))))))))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 uint subgroup_local_id = gl_SubgroupInvocationID;
 uint num_workgroup = gl_NumWorkGroups.x;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
  }
 uint workgroup_size = gl_WorkGroupSize.x;
 if(_GLF_DEAD(false))
  barrier();
 uint workgroup_id = gl_WorkGroupID.x;
 if(_GLF_DEAD(false))
  barrier();
 uint workgroup_base = workgroup_size * workgroup_id;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) && true)))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(12.96)), bool(false)))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint virtual_gid = _GLF_IDENTITY(workgroup_base, (workgroup_base) << (0u | 0u)) + subgroup_id * _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size)), uint(uvec3(subgroup_size, _GLF_IDENTITY(_GLF_IDENTITY(0u, (true ? _GLF_IDENTITY(0u, _GLF_IDENTITY((0u) + 0u, 0u | ((0u) + 0u))) : _GLF_FUZZED(158492u))), (_GLF_IDENTITY(_GLF_IDENTITY(0u, (true ? _GLF_IDENTITY(0u, _GLF_IDENTITY((0u) + 0u, 0u | ((0u) + 0u))) : _GLF_FUZZED(158492u))), (_GLF_IDENTITY(0u, (true ? _GLF_IDENTITY(0u, _GLF_IDENTITY((0u) + 0u, 0u | ((0u) + 0u))) : _GLF_FUZZED(158492u)))) | 0u)) / 1u), 0u))) + _GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY(uint(uvec4(subgroup_local_id, 1u, (0u << _GLF_IDENTITY(uint(0u), uint(0u))), (0u | 1u))), (_GLF_IDENTITY(uint(uvec4(subgroup_local_id, 1u, (0u << _GLF_IDENTITY(uint(0u), uint(0u))), (0u | 1u))), (uint(uvec4(subgroup_local_id, 1u, (0u << _GLF_IDENTITY(uint(0u), uint(0u))), (0u | 1u)))) | (uint(uvec4(subgroup_local_id, _GLF_IDENTITY(1u, (1u) | 0u), (0u << _GLF_IDENTITY(uint(0u), uint(0u))), (0u | 1u)))))) - 0u));
 uint next_virtual_gid = _GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_id * subgroup_size, 0u | (subgroup_id * subgroup_size)), min(workgroup_base + subgroup_id * subgroup_size, _GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_id, (subgroup_id) ^ 0u) * _GLF_IDENTITY(subgroup_size, (subgroup_size) - (0u >> _GLF_IDENTITY(uint(1u), uint(1u)))), _GLF_IDENTITY((_GLF_IDENTITY(workgroup_base, (0u & 182886u) ^ (workgroup_base)) + subgroup_id * subgroup_size) | (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, min(workgroup_base + subgroup_id * subgroup_size, _GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, (workgroup_base + subgroup_id * subgroup_size) * 1u))), (workgroup_base + subgroup_id * subgroup_size) / 1u)), max((workgroup_base + subgroup_id * subgroup_size) | (_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, (workgroup_base + subgroup_id * subgroup_size) / 1u)), (workgroup_base + subgroup_id * subgroup_size) | (_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, (workgroup_base + subgroup_id * subgroup_size) / _GLF_IDENTITY(1u, _GLF_IDENTITY(uint(uvec2(_GLF_IDENTITY(1u, (1u) | (1u)), 0u)), max(uint(uvec2(_GLF_IDENTITY(1u, (1u) | (1u)), 0u)), uint(uvec2(_GLF_IDENTITY(1u, (1u) | (1u)), 0u)))))))))))) + ((subgroup_local_id + 1) % subgroup_size);
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
  barrier();
 uint read_1 = atomicLoad(buf[virtual_gid], 4, 64, 0);
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat4x2(injectionSwitch, 1.0, 0.0, 0.0, 0.0, determinant(mat3(0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, sqrt(0.0), 0.0)), determinant(mat2(1.0, 0.0, 0.0, 1.0)))), (vec2(mat4x2(injectionSwitch, 1.0, 0.0, 0.0, 0.0, determinant(mat3(0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, sqrt(0.0), 0.0)), determinant(mat2(1.0, 0.0, 0.0, 1.0))))) * mat2(1.0))), (true ? _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat4x2(injectionSwitch, _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-4824.3610) : 1.0)), 0.0, 0.0, 0.0, determinant(mat3(0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, sqrt(0.0), 0.0)), determinant(mat2(1.0, 0.0, 0.0, 1.0)))), (vec2(mat4x2(injectionSwitch, _GLF_IDENTITY(1.0, float(vec2(1.0, 1.0))), _GLF_IDENTITY(0.0, _GLF_IDENTITY(float(mat3x2(0.0, tan(0.0), 1.0, 0.0, 0.0, 0.0)), clamp(float(mat3x2(0.0, tan(0.0), 1.0, 0.0, 0.0, 0.0)), float(mat3x2(0.0, tan(_GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, (0.0) / _GLF_ONE(1.0, injectionSwitch.y)), 0.0))), 1.0, 0.0, 0.0, 0.0)), float(mat3x2(0.0, tan(0.0), 1.0, 0.0, 0.0, 0.0))))), 0.0, 0.0, determinant(mat3(0.0, _GLF_IDENTITY(0.0, (0.0) / exp(0.0)), 0.0, 0.0, 0.0, 1.0, 0.0, sqrt(0.0), 0.0)), determinant(mat2(1.0, 0.0, 0.0, 1.0))))) * mat2(1.0))) : _GLF_FUZZED(radians(injectionSwitch)))).x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(5.5), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(-3.8), min(_GLF_FUZZED(-3.8), _GLF_IDENTITY(_GLF_FUZZED(-3.8), (_GLF_FUZZED(-3.8)) - 0.0))), (true ? _GLF_IDENTITY(_GLF_FUZZED(-3.8), min(_GLF_FUZZED(-3.8), _GLF_IDENTITY(_GLF_FUZZED(-3.8), (_GLF_FUZZED(-3.8)) - 0.0))) : _GLF_FUZZED(4.7)))), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, _GLF_IDENTITY(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (true))))).y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 atomicStore(buf[next_virtual_gid], uint(read_1 + _GLF_IDENTITY(1, _GLF_IDENTITY(int(_GLF_IDENTITY(ivec3(1, 1, ((1 << _GLF_IDENTITY(int(4), int(4))) >> _GLF_IDENTITY(int(4), int(4)))), _GLF_IDENTITY(max(_GLF_IDENTITY(ivec3(1, 1, ((1 << _GLF_IDENTITY(int(_GLF_IDENTITY(4, (4) | _GLF_IDENTITY(0, (0) / 1))), int(4))) >> _GLF_IDENTITY(_GLF_IDENTITY(int(4), (int(4)) << 0), int(4)))), ivec3(0, 0, 0) | (ivec3(1, 1, ((1 << _GLF_IDENTITY(int(_GLF_IDENTITY(4, (4) | 0)), int(4))) >> _GLF_IDENTITY(int(4), int(4)))))), ivec3(_GLF_IDENTITY(1, min(1, 1)), 1, ((1 << _GLF_IDENTITY(int(4), int(4))) >> _GLF_IDENTITY(int(4), int(4))))), ivec3(0, 0, 0) | (_GLF_IDENTITY(max(ivec3(1, 1, ((1 << _GLF_IDENTITY(int(4), int(4))) >> _GLF_IDENTITY(int(4), int(4)))), ivec3(1, 1, _GLF_IDENTITY(((1 << _GLF_IDENTITY(int(4), int(_GLF_IDENTITY(4, (4) - 0)))) >> _GLF_IDENTITY(int(4), int(4))), (false ? _GLF_FUZZED(17414) : _GLF_IDENTITY(((1 << _GLF_IDENTITY(int(4), int(_GLF_IDENTITY(4, (4) - 0)))) >> _GLF_IDENTITY(int(4), int(4))), min(((1 << _GLF_IDENTITY(int(4), int(_GLF_IDENTITY(4, (4) - 0)))) >> _GLF_IDENTITY(int(4), int(4))), ((1 << _GLF_IDENTITY(int(4), int(_GLF_IDENTITY(4, (4) - 0)))) >> _GLF_IDENTITY(int(4), int(4))))))))), (max(ivec3(1, 1, ((_GLF_IDENTITY(1, (false ? _GLF_FUZZED(-73939) : _GLF_IDENTITY(1, (1) / _GLF_IDENTITY(1, min(1, 1))))) << _GLF_IDENTITY(int(4), int(4))) >> _GLF_IDENTITY(_GLF_IDENTITY(int(4), int(4)), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(int(4), int(4)), (_GLF_IDENTITY(int(4), int(4))) * 1), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(int(4), int(4)), (_GLF_IDENTITY(int(4), int(4))) * 1), max(_GLF_IDENTITY(_GLF_IDENTITY(int(4), int(4)), (_GLF_IDENTITY(int(4), int(4))) * _GLF_IDENTITY(1, clamp(1, _GLF_IDENTITY(1, clamp(1, 1, 1)), 1))), _GLF_IDENTITY(_GLF_IDENTITY(int(4), int(4)), (_GLF_IDENTITY(int(4), int(4))) * 1)))) << int(_GLF_ZERO(0.0, injectionSwitch.x)))) | (_GLF_IDENTITY(_GLF_IDENTITY(int(4), int(4)), clamp(_GLF_IDENTITY(int(4), int(4)), _GLF_IDENTITY(int(4), int(4)), _GLF_IDENTITY(_GLF_IDENTITY(int(4), int(4)), (_GLF_IDENTITY(_GLF_IDENTITY(int(4), int(4)), min(_GLF_IDENTITY(int(4), int(4)), _GLF_IDENTITY(int(4), int(4))))) | (_GLF_IDENTITY(int(4), int(4)))))))))), _GLF_IDENTITY(ivec3(1, 1, ((1 << _GLF_IDENTITY(int(4), _GLF_IDENTITY(int(4), int(ivec2(int(4), 1))))) >> _GLF_IDENTITY(_GLF_IDENTITY(int(4), _GLF_IDENTITY(int(4), (int(4)) ^ 0)), int(ivec2(_GLF_IDENTITY(int(4), _GLF_IDENTITY(int(4), (int(4)) ^ 0)), 0))))), min(_GLF_IDENTITY(ivec3(1, 1, ((1 << _GLF_IDENTITY(int(4), _GLF_IDENTITY(int(4), int(ivec2(int(4), 1))))) >> _GLF_IDENTITY(int(4), _GLF_IDENTITY(int(4), _GLF_IDENTITY((int(4)), ((int(4))) << 0) ^ 0)))), (ivec3(_GLF_IDENTITY(1, (1) - 0), 1, ((1 << _GLF_IDENTITY(int(4), _GLF_IDENTITY(int(4), int(ivec2(int(4), 1))))) >> _GLF_IDENTITY(int(4), _GLF_IDENTITY(int(4), (int(4)) ^ 0))))) + ivec3(0, 0, 0)), _GLF_IDENTITY(ivec3(1, 1, ((1 << _GLF_IDENTITY(int(4), _GLF_IDENTITY(int(4), int(ivec2(int(4), 1))))) >> _GLF_IDENTITY(int(4), _GLF_IDENTITY(int(4), (int(4)) ^ 0)))), (true ? ivec3(1, 1, ((1 << _GLF_IDENTITY(int(4), _GLF_IDENTITY(int(4), int(ivec2(int(4), 1))))) >> _GLF_IDENTITY(int(4), _GLF_IDENTITY(int(4), (int(4)) ^ 0)))) : _GLF_FUZZED(ivec3(-76599, -11841, -33611)))))))) >> ivec3(0, 0, 0)))))), _GLF_IDENTITY((int(_GLF_IDENTITY(ivec3(_GLF_IDENTITY(1, _GLF_IDENTITY((_GLF_IDENTITY(1, min(_GLF_IDENTITY(1, 1 * (1)), _GLF_IDENTITY(_GLF_IDENTITY(1, int(ivec2(1, 0))), (_GLF_IDENTITY(1, int(ivec2(1, 0)))) - 0)))) + 0, ((_GLF_IDENTITY(1, min(_GLF_IDENTITY(1, 1 * (1)), _GLF_IDENTITY(1, int(ivec2(1, 0)))))) + 0) / 1)), 1, ((1 << _GLF_IDENTITY(int(4), _GLF_IDENTITY(int(4), max(int(4), int(4))))) >> _GLF_IDENTITY(int(4), int(4)))), _GLF_IDENTITY(max(ivec3(1, 1, ((1 << _GLF_IDENTITY(int(4), int(4))) >> _GLF_IDENTITY(int(4), int(4)))), ivec3(1, 1, ((1 << _GLF_IDENTITY(_GLF_IDENTITY(int(4), int(4)), (_GLF_IDENTITY(int(4), int(4))) | (_GLF_IDENTITY(int(4), int(4))))) >> _GLF_IDENTITY(int(4), int(4))))), ivec3(0, _GLF_IDENTITY(0, min(_GLF_IDENTITY(0, clamp(0, 0, 0)), 0)), 0) | (_GLF_IDENTITY(max(ivec3(1, 1, ((1 << _GLF_IDENTITY(int(4), int(4))) >> _GLF_IDENTITY(int(4), int(4)))), ivec3(1, 1, (_GLF_IDENTITY((1 << _GLF_IDENTITY(int(4), int(4))), (true ? (1 << _GLF_IDENTITY(int(4), int(4))) : _GLF_FUZZED(33879))) >> _GLF_IDENTITY(int(4), int(4))))), (max(ivec3(1, 1, ((1 << _GLF_IDENTITY(int(4), int(4))) >> _GLF_IDENTITY(int(4), int(4)))), _GLF_IDENTITY(ivec3(1, 1, ((1 << _GLF_IDENTITY(_GLF_IDENTITY(int(4), (_GLF_IDENTITY(int(4), (int(_GLF_IDENTITY(4, 0 ^ (4)))) | 0)) / _GLF_IDENTITY(1, clamp(1, 1, 1))), int(4))) >> _GLF_IDENTITY(int(_GLF_IDENTITY(4, (_GLF_IDENTITY(4, (4) | 0)) ^ 0)), int(4)))), (ivec3(1, 1, ((1 << _GLF_IDENTITY(_GLF_IDENTITY(int(4), (_GLF_IDENTITY(int(4), _GLF_IDENTITY((int(4)), 0 + ((int(4)))) | 0)) / 1), int(4))) >> _GLF_IDENTITY(int(4), int(4))))) >> ivec3(0, 0, 0)))) >> ivec3(0, 0, 0))))))), min((int(_GLF_IDENTITY(ivec3(_GLF_IDENTITY(1, _GLF_IDENTITY((_GLF_IDENTITY(1, min(_GLF_IDENTITY(1, 1 * (1)), _GLF_IDENTITY(_GLF_IDENTITY(1, int(ivec2(1, 0))), (_GLF_IDENTITY(1, int(ivec2(1, 0)))) - 0)))) + 0, ((_GLF_IDENTITY(1, min(_GLF_IDENTITY(1, 1 * (1)), _GLF_IDENTITY(1, int(ivec2(1, 0)))))) + 0) / 1)), 1, ((1 << _GLF_IDENTITY(int(4), _GLF_IDENTITY(int(4), max(int(4), int(4))))) >> _GLF_IDENTITY(int(4), int(4)))), _GLF_IDENTITY(max(ivec3(1, 1, ((1 << _GLF_IDENTITY(int(4), int(4))) >> _GLF_IDENTITY(int(4), int(4)))), ivec3(1, 1, ((1 << _GLF_IDENTITY(_GLF_IDENTITY(int(4), int(4)), (_GLF_IDENTITY(int(4), int(4))) | (_GLF_IDENTITY(int(4), int(4))))) >> _GLF_IDENTITY(int(4), int(4))))), ivec3(0, _GLF_IDENTITY(0, min(_GLF_IDENTITY(0, clamp(0, 0, 0)), 0)), 0) | (_GLF_IDENTITY(max(ivec3(1, 1, ((1 << _GLF_IDENTITY(int(4), int(4))) >> _GLF_IDENTITY(int(4), int(4)))), ivec3(1, 1, (_GLF_IDENTITY((1 << _GLF_IDENTITY(int(4), int(4))), (true ? (1 << _GLF_IDENTITY(int(4), int(4))) : _GLF_FUZZED(33879))) >> _GLF_IDENTITY(int(4), int(4))))), (max(ivec3(1, 1, ((1 << _GLF_IDENTITY(int(4), int(4))) >> _GLF_IDENTITY(int(4), int(4)))), _GLF_IDENTITY(ivec3(1, 1, ((1 << _GLF_IDENTITY(_GLF_IDENTITY(int(4), (_GLF_IDENTITY(int(4), (int(_GLF_IDENTITY(4, 0 ^ (4)))) | 0)) / _GLF_IDENTITY(1, clamp(1, 1, 1))), int(4))) >> _GLF_IDENTITY(int(_GLF_IDENTITY(4, (_GLF_IDENTITY(4, (4) | 0)) ^ 0)), int(4)))), (ivec3(1, 1, ((1 << _GLF_IDENTITY(_GLF_IDENTITY(int(4), (_GLF_IDENTITY(int(4), _GLF_IDENTITY((int(4)), 0 + ((int(4)))) | 0)) / 1), int(4))) >> _GLF_IDENTITY(int(4), int(4))))) >> ivec3(0, 0, 0)))) >> ivec3(0, 0, 0))))))), (int(_GLF_IDENTITY(ivec3(_GLF_IDENTITY(1, _GLF_IDENTITY((_GLF_IDENTITY(1, min(_GLF_IDENTITY(1, 1 * (1)), _GLF_IDENTITY(_GLF_IDENTITY(1, int(ivec2(1, 0))), (_GLF_IDENTITY(1, int(ivec2(1, 0)))) - 0)))) + 0, ((_GLF_IDENTITY(1, min(_GLF_IDENTITY(1, 1 * (1)), _GLF_IDENTITY(1, int(ivec2(1, 0)))))) + 0) / 1)), 1, ((1 << _GLF_IDENTITY(int(4), _GLF_IDENTITY(int(4), max(int(4), int(4))))) >> _GLF_IDENTITY(int(4), int(4)))), _GLF_IDENTITY(max(ivec3(1, 1, ((1 << _GLF_IDENTITY(int(4), int(4))) >> _GLF_IDENTITY(int(4), int(4)))), ivec3(1, 1, ((1 << _GLF_IDENTITY(_GLF_IDENTITY(int(4), int(4)), (_GLF_IDENTITY(int(4), int(4))) | (_GLF_IDENTITY(int(4), int(4))))) >> _GLF_IDENTITY(int(4), int(4))))), ivec3(0, _GLF_IDENTITY(0, min(_GLF_IDENTITY(0, clamp(0, 0, 0)), 0)), 0) | (_GLF_IDENTITY(max(ivec3(1, 1, ((1 << _GLF_IDENTITY(int(4), int(4))) >> _GLF_IDENTITY(int(4), int(4)))), ivec3(1, 1, (_GLF_IDENTITY((1 << _GLF_IDENTITY(int(4), int(4))), (true ? (1 << _GLF_IDENTITY(int(4), int(4))) : _GLF_FUZZED(33879))) >> _GLF_IDENTITY(int(4), int(4))))), (max(ivec3(1, 1, ((1 << _GLF_IDENTITY(int(4), int(4))) >> _GLF_IDENTITY(int(4), int(4)))), _GLF_IDENTITY(ivec3(1, 1, ((1 << _GLF_IDENTITY(_GLF_IDENTITY(int(4), (_GLF_IDENTITY(int(4), (int(_GLF_IDENTITY(4, 0 ^ (4)))) | 0)) / _GLF_IDENTITY(1, clamp(1, 1, 1))), int(4))) >> _GLF_IDENTITY(int(_GLF_IDENTITY(4, (_GLF_IDENTITY(4, (4) | 0)) ^ 0)), int(4)))), (ivec3(1, 1, ((1 << _GLF_IDENTITY(_GLF_IDENTITY(int(4), (_GLF_IDENTITY(int(4), _GLF_IDENTITY((int(4)), 0 + ((int(4)))) | 0)) / 1), int(4))) >> _GLF_IDENTITY(int(4), int(4))))) >> ivec3(0, 0, 0)))) >> ivec3(0, 0, 0))))))))) | 0))), 4, 64, 4);
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    barrier();
   barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (false))))))), bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (false))))))), false || (_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (false))))))))), true, true, false))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint read_2 = atomicLoad(buf[_GLF_IDENTITY(virtual_gid, clamp(virtual_gid, virtual_gid, _GLF_IDENTITY(virtual_gid, clamp(virtual_gid, virtual_gid, virtual_gid))))], 4, 64, 0);
 if(_GLF_DEAD(false))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_DEAD(false)))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
    barrier();
   barrier();
  }
 atomicStore(buf[next_virtual_gid], _GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1, max(_GLF_IDENTITY(read_1 + 1, (read_1 + 1) - 0u), read_1 + 1)) == read_2, ! (_GLF_IDENTITY(_GLF_IDENTITY(! (read_1 + 1 == read_2), bool(bvec3(! (read_1 + 1 == read_2), true, false))), bool(bool(_GLF_IDENTITY(! (read_1 + 1 == read_2), bool(bvec3(! (read_1 + 1 == read_2), true, false))))))))), (false ? _GLF_IDENTITY(_GLF_FUZZED(read_1), ~ (_GLF_IDENTITY(~ (_GLF_FUZZED(read_1)), (~ (_GLF_FUZZED(read_1))) | (~ (_GLF_FUZZED(read_1)))))) : uint(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1, (0u >> _GLF_IDENTITY(uint(3u), uint(3u))) + (_GLF_IDENTITY(read_1 + 1, (_GLF_IDENTITY(read_1 + 1, clamp(read_1 + 1, read_1 + 1, read_1 + 1))) | 0u))), (true ? _GLF_IDENTITY(read_1 + 1, (_GLF_IDENTITY(0u >> _GLF_IDENTITY(uint(3u), uint(3u)), (0u >> _GLF_IDENTITY(uint(3u), uint(3u))) >> 0u)) + (_GLF_IDENTITY(read_1 + 1, (_GLF_IDENTITY(read_1 + 1, clamp(read_1 + 1, read_1 + _GLF_IDENTITY(1, ~ (~ (_GLF_IDENTITY(1, min(1, 1))))), read_1 + 1))) | 0u))) : _GLF_FUZZED(subgroup_size))) == read_2, ! (_GLF_IDENTITY(! (read_1 + 1 == read_2), _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec3(! _GLF_IDENTITY((read_1 + 1 == read_2), (_GLF_IDENTITY((read_1 + 1 == read_2), ! (! ((read_1 + 1 == read_2))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), true, _GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, false)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (bool(_GLF_IDENTITY(bvec2(false, false), bvec2(_GLF_IDENTITY(bvec2(bvec2(false, false)), bvec2(bvec4(bvec2(bvec2(false, false)), true, true))))))))))), _GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(bool(bvec3(! (read_1 + 1 == read_2), true, false)), true), bvec2(bvec4(bvec2(bool(bvec3(! (read_1 + 1 == read_2), true, false)), true), false, false))), bvec2(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(bool(bvec3(! (read_1 + 1 == read_2), true, false)), true), bvec2(bvec4(bvec2(bool(bvec3(! (read_1 + 1 == read_2), true, false)), true), false, false))), bvec2(bvec4(_GLF_IDENTITY(bvec2(bool(bvec3(! (read_1 + 1 == read_2), true, false)), true), bvec2(bvec4(bvec2(bool(bvec3(! (read_1 + 1 == read_2), true, false)), true), false, false))), false, false))))))), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(bool(bvec3(! (read_1 + 1 == read_2), true, false)), true), bvec2(bvec4(bvec2(bool(bvec3(! (read_1 + 1 == read_2), true, false)), true), false, false)))), (bool(_GLF_IDENTITY(bvec2(bool(bvec3(! (read_1 + 1 == read_2), true, false)), true), bvec2(bvec4(_GLF_IDENTITY(bvec2(bool(bvec3(! (read_1 + 1 == read_2), true, false)), true), bvec2(bvec4(bvec2(bool(bvec3(! (read_1 + 1 == read_2), true, false)), true), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, (true) && true))))))))), false, false))))) || false))), bool(bvec2(bool(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(bool(bvec3(! (read_1 + 1 == read_2), true, false)), true), bvec2(bvec4(_GLF_IDENTITY(bvec2(bool(bvec3(! (read_1 + 1 == read_2), true, false)), true), bvec2(bvec3(_GLF_IDENTITY(bvec2(bool(bvec3(! (read_1 + 1 == read_2), true, false)), true), bvec2(bvec4(_GLF_IDENTITY(bvec2(bool(bvec3(! (read_1 + 1 == read_2), true, false)), true), bvec2(bvec3(bvec2(bool(bvec3(! (read_1 + 1 == read_2), true, false)), true), false))), false, false))), _GLF_IDENTITY(false, true && (false))))), false, false)))), (bool(_GLF_IDENTITY(bvec2(bool(bvec3(! (read_1 + 1 == read_2), _GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, (true) || false))), false)), true), bvec2(bvec4(bvec2(bool(bvec3(_GLF_IDENTITY(! (read_1 + 1 == read_2), ! (! (_GLF_IDENTITY(! (read_1 + 1 == read_2), bool(bvec3(_GLF_IDENTITY(! (read_1 + 1 == read_2), bool(bvec3(! (read_1 + 1 == read_2), true, false))), false, true)))))), true, false)), true), false, false))))) || false))), false))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(bool(bvec3(! _GLF_IDENTITY((read_1 + 1 == read_2), (_GLF_IDENTITY((read_1 + 1 == read_2), ! (! ((read_1 + 1 == read_2))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), true, _GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, false)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (bool(_GLF_IDENTITY(bvec2(false, false), bvec2(_GLF_IDENTITY(bvec2(bvec2(false, false)), bvec2(bvec4(bvec2(bvec2(false, false)), true, true))))))))))), _GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(bool(bvec3(! (read_1 + 1 == read_2), true, false)), true), bvec2(bvec4(bvec2(bool(bvec3(! (read_1 + 1 == read_2), true, false)), true), false, false))), bvec2(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(bool(bvec3(! (read_1 + 1 == read_2), true, false)), true), bvec2(bvec4(bvec2(bool(bvec3(! (read_1 + 1 == read_2), true, false)), true), false, false))), bvec2(bvec4(_GLF_IDENTITY(bvec2(bool(bvec3(! (read_1 + 1 == read_2), true, false)), true), bvec2(bvec4(bvec2(bool(bvec3(! (read_1 + 1 == read_2), true, false)), true), false, false))), false, false))))))), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(bool(bvec3(! (read_1 + 1 == read_2), true, false)), true), bvec2(bvec4(bvec2(bool(bvec3(! (read_1 + 1 == read_2), true, false)), true), false, false)))), (bool(_GLF_IDENTITY(bvec2(bool(bvec3(! (read_1 + 1 == read_2), true, false)), true), bvec2(bvec4(_GLF_IDENTITY(bvec2(bool(bvec3(! (read_1 + 1 == read_2), true, false)), true), bvec2(bvec4(bvec2(bool(bvec3(! (read_1 + 1 == read_2), true, false)), true), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, (true) && true))))))))), false, false))))) || false))), bool(bvec2(bool(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(bool(bvec3(! (read_1 + 1 == read_2), true, false)), true), bvec2(bvec4(_GLF_IDENTITY(bvec2(bool(bvec3(! (read_1 + 1 == read_2), true, false)), true), bvec2(bvec3(_GLF_IDENTITY(bvec2(bool(bvec3(! (read_1 + 1 == read_2), true, false)), true), bvec2(bvec4(_GLF_IDENTITY(bvec2(bool(bvec3(! (read_1 + 1 == read_2), true, false)), true), bvec2(bvec3(bvec2(bool(bvec3(! (read_1 + 1 == read_2), true, false)), true), false))), false, false))), _GLF_IDENTITY(false, true && (false))))), false, false)))), (bool(_GLF_IDENTITY(bvec2(bool(bvec3(! (read_1 + 1 == read_2), _GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, (true) || false))), false)), true), bvec2(bvec4(bvec2(bool(bvec3(_GLF_IDENTITY(! (read_1 + 1 == read_2), ! (! (_GLF_IDENTITY(! (read_1 + 1 == read_2), bool(bvec3(_GLF_IDENTITY(! (read_1 + 1 == read_2), bool(bvec3(! (read_1 + 1 == read_2), true, false))), false, true)))))), true, false)), true), false, false))))) || false))), false)))))), (! (_GLF_IDENTITY(bool(bvec3(! _GLF_IDENTITY((_GLF_IDENTITY(read_1, ~ (~ (read_1))) + 1 == read_2), (_GLF_IDENTITY((read_1 + 1 == read_2), ! (! ((read_1 + 1 == read_2))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), true, _GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, false)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (bool(_GLF_IDENTITY(bvec2(false, false), bvec2(_GLF_IDENTITY(bvec2(bvec2(false, false)), bvec2(bvec4(bvec2(bvec2(false, false)), true, true))))))))))), _GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(bool(bvec3(! (read_1 + 1 == read_2), true, false)), true), bvec2(bvec4(bvec2(bool(bvec3(! (read_1 + 1 == read_2), true, false)), true), false, false))), bvec2(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(bool(bvec3(! (read_1 + 1 == read_2), true, false)), true), bvec2(bvec4(_GLF_IDENTITY(bvec2(bool(bvec3(! (read_1 + 1 == read_2), true, false)), true), bvec2(bvec2(bvec2(bool(bvec3(! (read_1 + 1 == read_2), true, false)), true)))), false, false))), bvec2(bvec4(_GLF_IDENTITY(bvec2(bool(bvec3(! (read_1 + 1 == read_2), true, false)), true), bvec2(bvec4(bvec2(bool(bvec3(! (read_1 + 1 == read_2), true, false)), true), false, false))), false, false))))))), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(bool(bvec3(! (read_1 + 1 == read_2), true, _GLF_IDENTITY(false, ! (! (false))))), true), bvec2(bvec4(bvec2(bool(bvec3(! (read_1 + 1 == read_2), true, false)), true), false, false)))), (bool(_GLF_IDENTITY(bvec2(bool(bvec3(! (read_1 + 1 == read_2), true, false)), true), bvec2(bvec4(_GLF_IDENTITY(bvec2(bool(bvec3(! (read_1 + 1 == read_2), true, false)), _GLF_IDENTITY(true, (true) && true)), bvec2(bvec4(bvec2(bool(bvec3(! (read_1 + 1 == _GLF_IDENTITY(read_2, (_GLF_IDENTITY(read_2, (read_2) | (read_2))) - 0u)), true, false)), true), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, (true) && true))))))))), false, false))))) || false))), bool(bvec2(_GLF_IDENTITY(bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(bool(bvec3(! (read_1 + 1 == read_2), true, false)), true), bvec2(bvec4(_GLF_IDENTITY(bvec2(bool(bvec3(! (read_1 + 1 == read_2), true, false)), true), bvec2(bvec3(_GLF_IDENTITY(bvec2(bool(bvec3(! (read_1 + 1 == read_2), true, false)), true), bvec2(bvec4(_GLF_IDENTITY(bvec2(bool(bvec3(! (read_1 + 1 == read_2), true, false)), true), bvec2(bvec3(bvec2(bool(bvec3(! (read_1 + 1 == read_2), true, _GLF_IDENTITY(false, (false) || false))), true), false))), false, false))), _GLF_IDENTITY(false, _GLF_IDENTITY(true, ! (! (true))) && (false))))), false, false)))), bool(bvec3(bool(_GLF_IDENTITY(bvec2(bool(bvec3(! (read_1 + 1 == read_2), true, false)), true), bvec2(bvec4(_GLF_IDENTITY(bvec2(bool(bvec3(! (read_1 + 1 == read_2), true, false)), true), bvec2(bvec3(_GLF_IDENTITY(bvec2(bool(bvec3(! (read_1 + 1 == read_2), true, false)), true), bvec2(bvec4(_GLF_IDENTITY(bvec2(bool(bvec3(! (read_1 + 1 == read_2), true, false)), true), bvec2(bvec3(bvec2(bool(bvec3(! (read_1 + 1 == read_2), true, _GLF_IDENTITY(false, (false) || false))), true), false))), false, false))), _GLF_IDENTITY(false, _GLF_IDENTITY(true, ! (! (true))) && (false))))), false, false)))), true, false))), (bool(_GLF_IDENTITY(bvec2(bool(bvec3(! (_GLF_IDENTITY(read_1, min(read_1, read_1)) + 1 == read_2), _GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, (true) || false))), false)), true), bvec2(bvec4(bvec2(bool(bvec3(_GLF_IDENTITY(! (read_1 + 1 == read_2), ! (! (_GLF_IDENTITY(! (read_1 + 1 == read_2), bool(bvec3(_GLF_IDENTITY(! (read_1 + 1 == read_2), bool(bvec3(! (read_1 + 1 == read_2), true, false))), false, true)))))), true, false)), true), false, false))))) || false))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(bool(bvec3(! (read_1 + 1 == read_2), true, false)), true), bvec2(bvec4(_GLF_IDENTITY(bvec2(bool(bvec3(! (read_1 + 1 == read_2), true, false)), true), bvec2(bvec3(_GLF_IDENTITY(bvec2(bool(bvec3(! (read_1 + 1 == read_2), true, false)), true), bvec2(bvec4(_GLF_IDENTITY(bvec2(bool(bvec3(! (read_1 + 1 == read_2), true, false)), true), bvec2(bvec3(bvec2(bool(bvec3(! (read_1 + 1 == read_2), true, _GLF_IDENTITY(false, (false) || false))), true), false))), false, false))), _GLF_IDENTITY(false, _GLF_IDENTITY(true, ! (! (true))) && (false))))), false, false)))), bool(bvec3(bool(_GLF_IDENTITY(bvec2(bool(bvec3(! (read_1 + 1 == read_2), true, false)), true), bvec2(bvec4(_GLF_IDENTITY(bvec2(bool(bvec3(! (read_1 + 1 == read_2), true, false)), true), bvec2(bvec3(_GLF_IDENTITY(bvec2(bool(bvec3(! (read_1 + 1 == read_2), true, false)), true), bvec2(bvec4(_GLF_IDENTITY(bvec2(bool(bvec3(! (read_1 + 1 == read_2), true, false)), true), bvec2(bvec3(bvec2(bool(bvec3(! (read_1 + 1 == read_2), true, _GLF_IDENTITY(false, (false) || false))), true), false))), false, false))), _GLF_IDENTITY(false, _GLF_IDENTITY(true, ! (! (true))) && (false))))), false, false)))), true, false))), (bool(_GLF_IDENTITY(bvec2(bool(bvec3(! (_GLF_IDENTITY(read_1, min(read_1, read_1)) + 1 == read_2), _GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, (true) || false))), false)), true), bvec2(bvec4(bvec2(bool(bvec3(_GLF_IDENTITY(! (read_1 + 1 == read_2), ! (! (_GLF_IDENTITY(! (read_1 + 1 == read_2), bool(bvec3(_GLF_IDENTITY(! (read_1 + 1 == read_2), bool(bvec3(! (read_1 + 1 == read_2), true, false))), false, true)))))), true, false)), true), false, false))))) || false))))), false))))))) && true))))))))) + 1, (_GLF_IDENTITY(uint(_GLF_IDENTITY(read_1 + 1 == read_2, ! (_GLF_IDENTITY(! (read_1 + _GLF_IDENTITY(1, min(1, 1)) == read_2), bool(bvec3(! (read_1 + 1 == read_2), true, false)))))), _GLF_IDENTITY((_GLF_IDENTITY(false ? _GLF_FUZZED(read_1) : uint(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1 == read_2, ! (_GLF_IDENTITY(! (read_1 + 1 == read_2), bool(bvec3(! (read_1 + 1 == read_2), true, false))))), bool(bvec4(_GLF_IDENTITY(read_1 + 1 == read_2, ! (_GLF_IDENTITY(! (read_1 + 1 == read_2), bool(bvec3(! (read_1 + 1 == read_2), true, false))))), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), true && (_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1 == read_2, ! (_GLF_IDENTITY(! (read_1 + 1 == read_2), bool(bvec3(! (read_1 + 1 == read_2), true, false))))), bool(bvec4(_GLF_IDENTITY(read_1 + 1 == read_2, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(read_1 + 1, uint(_GLF_IDENTITY(uvec2(_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1, (read_1 + 1) >> 0u), _GLF_IDENTITY(min(read_1 + 1, read_1 + 1), (min(read_1 + 1, read_1 + 1)) | (min(read_1 + 1, read_1 + 1)))), 1u), (uvec2(_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1, (read_1 + 1) >> 0u), _GLF_IDENTITY(min(read_1 + 1, read_1 + 1), (min(read_1 + 1, read_1 + 1)) | (min(read_1 + 1, read_1 + 1)))), 1u)) << uvec2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))))) == read_2), bool(bvec3(! (read_1 + 1 == read_2), true, false))))), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))), (_GLF_IDENTITY(false ? _GLF_FUZZED(read_1) : uint(_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1 == read_2, ! (_GLF_IDENTITY(! (read_1 + 1 == read_2), bool(bvec4(! (read_1 + 1 == read_2), true, false, true))))), ! (_GLF_IDENTITY(! (read_1 + 1 == read_2), bool(bvec3(! (read_1 + 1 == read_2), true, false)))))), _GLF_IDENTITY(clamp(false ? _GLF_FUZZED(_GLF_IDENTITY(read_1, (read_1) | 0u)) : uint(_GLF_IDENTITY(read_1 + 1 == read_2, _GLF_IDENTITY(! (_GLF_IDENTITY(! (read_1 + 1 == read_2), bool(bvec3(! (read_1 + 1 == read_2), true, false)))), ! (! (! (_GLF_IDENTITY(! (read_1 + 1 == read_2), bool(bvec3(! (read_1 + 1 == read_2), true, false))))))))), _GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, ! (! (false))), false))) ? _GLF_FUZZED(read_1) : uint(_GLF_IDENTITY(read_1 + 1 == read_2, ! (_GLF_IDENTITY(! _GLF_IDENTITY((read_1 + 1 == read_2), ((read_1 + 1 == read_2)) && true), bool(bvec3(! (read_1 + 1 == read_2), true, false)))))), false ? _GLF_FUZZED(read_1) : uint(_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1, (_GLF_IDENTITY(read_1 + 1, max(read_1 + 1, read_1 + 1))) ^ 0u) == read_2, ! (_GLF_IDENTITY(! (read_1 + 1 == read_2), bool(bvec3(_GLF_IDENTITY(! (read_1 + 1 == read_2), bool(bvec4(! (read_1 + 1 == read_2), true, true, false))), true, false))))))), clamp(_GLF_IDENTITY(clamp(false ? _GLF_FUZZED(read_1) : uint(_GLF_IDENTITY(read_1 + 1 == read_2, _GLF_IDENTITY(! (_GLF_IDENTITY(! (read_1 + 1 == _GLF_IDENTITY(read_2, (read_2) ^ 0u)), bool(bvec3(! (read_1 + 1 == read_2), true, false)))), ! (! (! (_GLF_IDENTITY(! (read_1 + 1 == read_2), bool(bvec3(! (read_1 + 1 == read_2), true, false))))))))), _GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, ! (! (false))), _GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) && true)) || false)))) ? _GLF_FUZZED(read_1) : uint(_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1 == read_2, ! (_GLF_IDENTITY(! _GLF_IDENTITY((read_1 + 1 == read_2), ((read_1 + 1 == read_2)) && true), bool(bvec3(! (read_1 + 1 == read_2), true, false))))), bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1 == read_2, ! (_GLF_IDENTITY(! _GLF_IDENTITY((read_1 + 1 == read_2), ((read_1 + 1 == read_2)) && true), bool(bvec3(! (read_1 + 1 == read_2), true, false))))), ! (! (_GLF_IDENTITY(read_1 + 1 == read_2, ! (_GLF_IDENTITY(! _GLF_IDENTITY((read_1 + 1 == read_2), ((read_1 + 1 == read_2)) && true), bool(bvec3(! (read_1 + 1 == read_2), true, false)))))))), true, false, true)))), min(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, ! (! (false))), _GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) && true)) || false)))) ? _GLF_FUZZED(read_1) : uint(_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1 == read_2, ! (_GLF_IDENTITY(! _GLF_IDENTITY((read_1 + 1 == read_2), ((read_1 + 1 == read_2)) && true), bool(bvec3(! (read_1 + 1 == read_2), true, false))))), bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1 == read_2, ! (_GLF_IDENTITY(! _GLF_IDENTITY((read_1 + 1 == read_2), ((read_1 + 1 == read_2)) && true), bool(bvec3(! (read_1 + 1 == read_2), true, false))))), ! (! (_GLF_IDENTITY(read_1 + 1 == read_2, ! (_GLF_IDENTITY(! _GLF_IDENTITY((read_1 + 1 == read_2), ((read_1 + 1 == read_2)) && true), bool(bvec3(! (read_1 + 1 == read_2), true, false)))))))), true, false, true)))), (_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, ! (! (false))), _GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) && true)) || false)))) ? _GLF_FUZZED(read_1) : uint(_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1 == read_2, ! (_GLF_IDENTITY(! _GLF_IDENTITY((read_1 + 1 == read_2), ((read_1 + 1 == read_2)) && true), bool(bvec3(! (read_1 + 1 == read_2), true, false))))), bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1 == read_2, ! (_GLF_IDENTITY(! _GLF_IDENTITY((read_1 + 1 == read_2), ((read_1 + 1 == read_2)) && true), bool(bvec3(! (read_1 + 1 == read_2), true, false))))), ! (! (_GLF_IDENTITY(read_1 + 1 == read_2, ! (_GLF_IDENTITY(! _GLF_IDENTITY((read_1 + 1 == read_2), ((read_1 + 1 == read_2)) && true), bool(bvec3(! (read_1 + 1 == read_2), true, false)))))))), true, false, true))))) ^ 0u), _GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, ! (! (false))), _GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) && true)) || false)))) ? _GLF_FUZZED(read_1) : uint(_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1 == read_2, ! (_GLF_IDENTITY(! _GLF_IDENTITY((read_1 + 1 == read_2), ((read_1 + 1 == read_2)) && true), bool(bvec3(! (read_1 + 1 == read_2), true, false))))), bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1 == read_2, ! (_GLF_IDENTITY(! _GLF_IDENTITY((read_1 + 1 == read_2), ((read_1 + 1 == read_2)) && true), bool(bvec3(! (read_1 + 1 == read_2), true, false))))), ! (! (_GLF_IDENTITY(read_1 + 1 == read_2, ! (_GLF_IDENTITY(! _GLF_IDENTITY((read_1 + 1 == read_2), ((read_1 + 1 == read_2)) && true), bool(bvec3(! (read_1 + 1 == read_2), true, false)))))))), true, false, true)))), max(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, ! (! (false))), _GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) && true)) || false)))) ? _GLF_FUZZED(read_1) : uint(_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1 == read_2, ! (_GLF_IDENTITY(! _GLF_IDENTITY((read_1 + 1 == read_2), ((read_1 + 1 == read_2)) && true), bool(bvec3(! (read_1 + 1 == read_2), true, false))))), bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1 == read_2, ! (_GLF_IDENTITY(! _GLF_IDENTITY((read_1 + 1 == read_2), ((read_1 + 1 == read_2)) && true), bool(bvec3(! (read_1 + 1 == read_2), true, false))))), ! (! (_GLF_IDENTITY(read_1 + 1 == read_2, ! (_GLF_IDENTITY(! _GLF_IDENTITY((read_1 + 1 == read_2), ((read_1 + 1 == read_2)) && true), bool(bvec3(! (read_1 + 1 == read_2), true, false)))))))), true, false, true)))), _GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, ! (! (false))), _GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) && true)) || false)))) ? _GLF_FUZZED(read_1) : uint(_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1 == read_2, ! (_GLF_IDENTITY(! _GLF_IDENTITY((read_1 + 1 == read_2), ((read_1 + 1 == read_2)) && true), bool(bvec3(! (read_1 + 1 == read_2), true, false))))), bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1 == read_2, ! (_GLF_IDENTITY(! _GLF_IDENTITY((read_1 + 1 == read_2), ((read_1 + 1 == read_2)) && true), bool(bvec3(! (read_1 + 1 == read_2), true, false))))), ! (! (_GLF_IDENTITY(read_1 + 1 == read_2, ! (_GLF_IDENTITY(! _GLF_IDENTITY((read_1 + 1 == read_2), ((read_1 + 1 == read_2)) && true), bool(bvec3(! (read_1 + 1 == read_2), true, false)))))))), true, false, true)))))))), false ? _GLF_FUZZED(read_1) : uint(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1, (_GLF_IDENTITY(read_1 + 1, max(read_1 + 1, read_1 + 1))) ^ 0u) == read_2, false || (_GLF_IDENTITY(read_1 + 1, (_GLF_IDENTITY(read_1 + 1, max(read_1 + 1, read_1 + 1))) ^ 0u) == read_2)), ! (_GLF_IDENTITY(! (read_1 + 1 == _GLF_IDENTITY(read_2, 1u * (read_2))), bool(bvec3(! (read_1 + 1 == read_2), true, false))))))), clamp(clamp(false ? _GLF_FUZZED(read_1) : uint(_GLF_IDENTITY(read_1 + 1 == read_2, _GLF_IDENTITY(! (_GLF_IDENTITY(! (_GLF_IDENTITY(read_1 + 1, uint(uint(read_1 + 1))) == read_2), bool(bvec3(! (read_1 + 1 == read_2), true, false)))), ! (! (! (_GLF_IDENTITY(! (read_1 + 1 == read_2), bool(bvec3(! (read_1 + 1 == read_2), true, false))))))))), _GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), false || (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), (_GLF_IDENTITY(false, ! (! (false)))) && true))), false))) ? _GLF_FUZZED(read_1) : uint(_GLF_IDENTITY(read_1 + 1 == read_2, ! (_GLF_IDENTITY(! _GLF_IDENTITY((read_1 + 1 == read_2), ((read_1 + 1 == read_2)) && true), _GLF_IDENTITY(bool(bvec3(! (read_1 + 1 == read_2), true, false)), ! (! (bool(bvec3(! (read_1 + 1 == read_2), true, false))))))))), false ? _GLF_FUZZED(read_1) : uint(_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1, (_GLF_IDENTITY(read_1 + 1, max(_GLF_IDENTITY(read_1 + 1, (_GLF_IDENTITY(read_1 + 1, (read_1 + 1) | (read_1 + 1))) | (read_1 + 1)), read_1 + 1))) ^ 0u) == read_2, ! (_GLF_IDENTITY(! (read_1 + 1 == read_2), bool(bvec3(! (read_1 + 1 == read_2), true, false))))))), clamp(false ? _GLF_FUZZED(read_1) : uint(_GLF_IDENTITY(read_1 + 1 == read_2, _GLF_IDENTITY(! (_GLF_IDENTITY(! (read_1 + 1 == read_2), bool(bvec3(_GLF_IDENTITY(! (read_1 + 1 == read_2), true && (! (read_1 + 1 == read_2))), true, false)))), ! (! (! (_GLF_IDENTITY(! (read_1 + 1 == read_2), bool(bvec3(! (read_1 + 1 == read_2), true, _GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false))))))))))), _GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, ! (! (false))), false))) ? _GLF_FUZZED(read_1) : uint(_GLF_IDENTITY(read_1 + 1 == read_2, ! (_GLF_IDENTITY(! _GLF_IDENTITY((read_1 + 1 == read_2), ((read_1 + 1 == read_2)) && true), bool(bvec3(! (read_1 + 1 == read_2), true, false)))))), false ? _GLF_FUZZED(read_1) : uint(_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1, (_GLF_IDENTITY(read_1 + 1, max(read_1 + 1, read_1 + 1))) ^ 0u) == read_2, ! (_GLF_IDENTITY(! (read_1 + 1 == read_2), bool(bvec3(! (read_1 + 1 == read_2), true, _GLF_IDENTITY(false, bool(bvec4(false, true, false, true)))))))))), clamp(false ? _GLF_FUZZED(read_1) : uint(_GLF_IDENTITY(read_1 + 1 == read_2, _GLF_IDENTITY(! _GLF_IDENTITY((_GLF_IDENTITY(! (read_1 + 1 == read_2), bool(bvec3(! (read_1 + 1 == read_2), true, false)))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool((_GLF_IDENTITY(! (read_1 + 1 == read_2), bool(bvec3(! (read_1 + 1 == read_2), true, false))))), (bool((_GLF_IDENTITY(! (read_1 + 1 == read_2), bool(bvec3(! (read_1 + 1 == read_2), true, false)))))) || false)), bool(bool(bool(_GLF_IDENTITY(bool((_GLF_IDENTITY(! (read_1 + 1 == read_2), bool(bvec3(! (read_1 + 1 == read_2), true, false))))), (bool((_GLF_IDENTITY(! (read_1 + 1 == read_2), bool(bvec3(! (read_1 + 1 == read_2), true, false)))))) || false)))))), ! (! (! (_GLF_IDENTITY(! (read_1 + 1 == read_2), bool(bvec3(! (read_1 + 1 == read_2), true, false))))))))), _GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), (_GLF_IDENTITY(false, ! (! (false)))) && true), false))) ? _GLF_FUZZED(read_1) : uint(_GLF_IDENTITY(read_1 + 1 == read_2, ! (_GLF_IDENTITY(_GLF_IDENTITY(! _GLF_IDENTITY((read_1 + 1 == read_2), ((read_1 + 1 == read_2)) && true), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(! _GLF_IDENTITY((read_1 + 1 == read_2), ((read_1 + 1 == read_2)) && true), ! (_GLF_IDENTITY(! (! _GLF_IDENTITY((read_1 + 1 == read_2), ((read_1 + 1 == read_2)) && true)), false || (! (! _GLF_IDENTITY((read_1 + 1 == read_2), ((read_1 + 1 == read_2)) && true))))))), (! (_GLF_IDENTITY(! _GLF_IDENTITY((read_1 + 1 == read_2), ((read_1 + 1 == read_2)) && true), ! (_GLF_IDENTITY(! (! _GLF_IDENTITY((read_1 + 1 == read_2), ((read_1 + 1 == read_2)) && true)), false || (! (! _GLF_IDENTITY((read_1 + 1 == read_2), ((read_1 + 1 == read_2)) && true)))))))) && true))), bool(bvec3(! (read_1 + 1 == read_2), true, false)))))), false ? _GLF_FUZZED(read_1) : uint(_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1, (_GLF_IDENTITY(read_1 + 1, max(read_1 + 1, read_1 + 1))) ^ 0u) == read_2, ! (_GLF_IDENTITY(! (read_1 + 1 == read_2), bool(bvec3(! (read_1 + 1 == read_2), true, false))))))))), clamp(false ? _GLF_FUZZED(read_1) : uint(_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1 == read_2, _GLF_IDENTITY(! (_GLF_IDENTITY(! (read_1 + 1 == read_2), bool(bvec3(! (read_1 + 1 == read_2), true, false)))), ! (! (! (_GLF_IDENTITY(! (read_1 + 1 == read_2), bool(bvec3(! (read_1 + 1 == read_2), true, false)))))))), (_GLF_IDENTITY(read_1 + 1 == read_2, _GLF_IDENTITY(! _GLF_IDENTITY((_GLF_IDENTITY(! (read_1 + 1 == _GLF_IDENTITY(read_2, min(read_2, read_2))), bool(bvec3(! (read_1 + 1 == read_2), true, false)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && ((_GLF_IDENTITY(! (read_1 + 1 == _GLF_IDENTITY(read_2, min(read_2, read_2))), bool(bvec3(! (read_1 + 1 == read_2), true, false)))))), ! (! _GLF_IDENTITY((! (_GLF_IDENTITY(! (read_1 + 1 == read_2), bool(bvec3(! (read_1 + 1 == read_2), true, false))))), ((! (_GLF_IDENTITY(! (read_1 + 1 == read_2), bool(bvec3(! (read_1 + 1 == read_2), true, false)))))) || false))))) && true)), _GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, ! (! (false))), false))) ? _GLF_FUZZED(read_1) : uint(_GLF_IDENTITY(read_1 + 1 == read_2, ! (_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_IDENTITY(read_1 + 1 == read_2, _GLF_IDENTITY(bool(bvec3(read_1 + 1 == read_2, true, false)), ! (! (bool(bvec3(read_1 + 1 == read_2, true, false))))))), ((read_1 + 1 == read_2)) && true), bool(bvec3(! (read_1 + 1 == read_2), true, false)))))), false ? _GLF_FUZZED(read_1) : uint(_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1, (_GLF_IDENTITY(read_1 + 1, max(read_1 + 1, read_1 + 1))) ^ 0u) == read_2, ! (_GLF_IDENTITY(! (read_1 + 1 == read_2), _GLF_IDENTITY(bool(bvec3(! (read_1 + 1 == read_2), true, false)), _GLF_IDENTITY(bool(bvec3(bool(bvec3(! (read_1 + 1 == read_2), true, false)), true, true)), true && (bool(bvec3(bool(bvec3(! (read_1 + 1 == read_2), true, false)), true, true)))))))))), clamp(false ? _GLF_FUZZED(read_1) : uint(_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1 == read_2, (read_1 + 1 == read_2) || false), _GLF_IDENTITY(! (_GLF_IDENTITY(! (read_1 + 1 == read_2), bool(bvec3(! (read_1 + 1 == read_2), true, false)))), ! (! (! (_GLF_IDENTITY(! (read_1 + 1 == read_2), bool(bvec3(! (read_1 + 1 == read_2), true, _GLF_IDENTITY(false, false || (false))))))))))), _GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, ! (! (false))), false))) ? _GLF_IDENTITY(_GLF_FUZZED(read_1), ~ (~ (_GLF_FUZZED(read_1)))) : uint(_GLF_IDENTITY(read_1 + 1 == read_2, ! (_GLF_IDENTITY(! _GLF_IDENTITY((read_1 + 1 == read_2), ((read_1 + 1 == read_2)) && true), bool(bvec3(! (_GLF_IDENTITY(read_1 + 1 == read_2, (read_1 + 1 == read_2) && true)), true, false)))))), false ? _GLF_FUZZED(read_1) : uint(_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1, (_GLF_IDENTITY(read_1 + 1, max(read_1 + 1, read_1 + 1))) ^ 0u) == read_2, ! (_GLF_IDENTITY(! (read_1 + 1 == read_2), bool(_GLF_IDENTITY(bvec3(! (read_1 + 1 == read_2), true, false), _GLF_IDENTITY(bvec3(bvec3(bvec3(! (read_1 + 1 == read_2), true, false))), bvec3(bvec4(bvec3(bvec3(bvec3(! (read_1 + 1 == read_2), true, false))), true)))))))))))))) + 0u)), max((_GLF_IDENTITY(false ? _GLF_FUZZED(read_1) : uint(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1 == read_2, ! (_GLF_IDENTITY(! (read_1 + 1 == read_2), bool(bvec3(! (read_1 + 1 == read_2), true, false))))), bool(bvec4(_GLF_IDENTITY(read_1 + 1 == read_2, ! (_GLF_IDENTITY(! (read_1 + 1 == read_2), bool(bvec3(! (read_1 + 1 == read_2), true, false))))), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), true && (_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1 == read_2, ! (_GLF_IDENTITY(! (read_1 + 1 == read_2), bool(bvec3(! (read_1 + 1 == read_2), true, false))))), bool(bvec4(_GLF_IDENTITY(read_1 + 1 == read_2, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(read_1 + 1, uint(_GLF_IDENTITY(uvec2(_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1, (read_1 + 1) >> 0u), _GLF_IDENTITY(min(read_1 + 1, read_1 + 1), (min(read_1 + 1, read_1 + 1)) | (min(read_1 + 1, read_1 + 1)))), 1u), (uvec2(_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1, (read_1 + 1) >> 0u), _GLF_IDENTITY(min(read_1 + 1, read_1 + 1), (min(read_1 + 1, read_1 + 1)) | (min(read_1 + 1, read_1 + 1)))), 1u)) << uvec2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))))) == read_2), bool(bvec3(! (read_1 + 1 == read_2), true, false))))), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))), (_GLF_IDENTITY(false ? _GLF_FUZZED(read_1) : uint(_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1 == read_2, ! (_GLF_IDENTITY(! (read_1 + 1 == read_2), bool(bvec4(! (read_1 + 1 == read_2), true, false, true))))), ! (_GLF_IDENTITY(! (read_1 + 1 == read_2), bool(bvec3(! (read_1 + 1 == read_2), true, false)))))), _GLF_IDENTITY(clamp(false ? _GLF_FUZZED(_GLF_IDENTITY(read_1, (read_1) | 0u)) : uint(_GLF_IDENTITY(read_1 + 1 == read_2, _GLF_IDENTITY(! (_GLF_IDENTITY(! (read_1 + 1 == read_2), bool(bvec3(! (read_1 + 1 == read_2), true, false)))), ! (! (! (_GLF_IDENTITY(! (read_1 + 1 == read_2), bool(bvec3(! (read_1 + 1 == read_2), true, false))))))))), _GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, ! (! (false))), false))) ? _GLF_FUZZED(read_1) : uint(_GLF_IDENTITY(read_1 + 1 == read_2, ! (_GLF_IDENTITY(! _GLF_IDENTITY((read_1 + 1 == read_2), ((read_1 + 1 == read_2)) && true), bool(bvec3(! (read_1 + 1 == read_2), true, false)))))), false ? _GLF_FUZZED(read_1) : uint(_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1, (_GLF_IDENTITY(read_1 + 1, max(read_1 + 1, read_1 + 1))) ^ 0u) == read_2, ! (_GLF_IDENTITY(! (read_1 + 1 == read_2), bool(bvec3(_GLF_IDENTITY(! (read_1 + 1 == read_2), bool(bvec4(! (read_1 + 1 == read_2), true, true, false))), true, false))))))), clamp(_GLF_IDENTITY(clamp(false ? _GLF_FUZZED(read_1) : uint(_GLF_IDENTITY(read_1 + 1 == read_2, _GLF_IDENTITY(! (_GLF_IDENTITY(! (read_1 + 1 == _GLF_IDENTITY(read_2, (read_2) ^ 0u)), bool(bvec3(! (read_1 + 1 == read_2), true, false)))), ! (! (! (_GLF_IDENTITY(! (read_1 + 1 == read_2), bool(bvec3(! (read_1 + 1 == read_2), true, false))))))))), _GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, ! (! (false))), _GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) && true)) || false)))) ? _GLF_FUZZED(read_1) : uint(_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1 == read_2, ! (_GLF_IDENTITY(! _GLF_IDENTITY((read_1 + 1 == read_2), ((read_1 + 1 == read_2)) && true), bool(bvec3(! (read_1 + 1 == read_2), true, false))))), bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1 == read_2, ! (_GLF_IDENTITY(! _GLF_IDENTITY((read_1 + 1 == read_2), ((read_1 + 1 == read_2)) && true), bool(bvec3(! (read_1 + 1 == read_2), true, false))))), ! (! (_GLF_IDENTITY(read_1 + 1 == read_2, ! (_GLF_IDENTITY(! _GLF_IDENTITY((read_1 + 1 == read_2), ((read_1 + 1 == read_2)) && true), bool(bvec3(! (read_1 + 1 == read_2), true, false)))))))), true, false, true)))), min(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, ! (! (false))), _GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) && true)) || false)))) ? _GLF_FUZZED(read_1) : uint(_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1 == read_2, ! (_GLF_IDENTITY(! _GLF_IDENTITY((read_1 + 1 == read_2), ((read_1 + 1 == read_2)) && true), bool(bvec3(! (read_1 + 1 == read_2), true, false))))), bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1 == read_2, ! (_GLF_IDENTITY(! _GLF_IDENTITY((read_1 + 1 == read_2), ((read_1 + 1 == read_2)) && true), bool(bvec3(! (read_1 + 1 == read_2), true, false))))), ! (! (_GLF_IDENTITY(read_1 + 1 == read_2, ! (_GLF_IDENTITY(! _GLF_IDENTITY((read_1 + 1 == read_2), ((read_1 + 1 == read_2)) && true), bool(bvec3(! (read_1 + 1 == read_2), true, false)))))))), true, false, true)))), (_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, ! (! (false))), _GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) && true)) || false)))) ? _GLF_FUZZED(read_1) : uint(_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1 == read_2, ! (_GLF_IDENTITY(! _GLF_IDENTITY((read_1 + 1 == read_2), ((read_1 + 1 == read_2)) && true), bool(bvec3(! (read_1 + 1 == read_2), true, false))))), bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1 == read_2, ! (_GLF_IDENTITY(! _GLF_IDENTITY((read_1 + 1 == read_2), ((read_1 + 1 == read_2)) && true), bool(bvec3(! (read_1 + 1 == read_2), true, false))))), ! (! (_GLF_IDENTITY(read_1 + 1 == read_2, ! (_GLF_IDENTITY(! _GLF_IDENTITY((read_1 + 1 == read_2), ((read_1 + 1 == read_2)) && true), bool(bvec3(! (read_1 + 1 == read_2), true, false)))))))), true, false, true))))) ^ 0u), _GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, ! (! (false))), _GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) && true)) || false)))) ? _GLF_FUZZED(read_1) : uint(_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1 == read_2, ! (_GLF_IDENTITY(! _GLF_IDENTITY((read_1 + 1 == read_2), ((read_1 + 1 == read_2)) && true), bool(bvec3(! (read_1 + 1 == read_2), true, false))))), bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1 == read_2, ! (_GLF_IDENTITY(! _GLF_IDENTITY((read_1 + 1 == read_2), ((read_1 + 1 == read_2)) && true), bool(bvec3(! (read_1 + 1 == read_2), true, false))))), ! (! (_GLF_IDENTITY(read_1 + 1 == read_2, ! (_GLF_IDENTITY(! _GLF_IDENTITY((read_1 + 1 == read_2), ((read_1 + 1 == read_2)) && true), bool(bvec3(! (read_1 + 1 == read_2), true, false)))))))), true, false, true)))), max(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, ! (! (false))), _GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) && true)) || false)))) ? _GLF_FUZZED(read_1) : uint(_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1 == read_2, ! (_GLF_IDENTITY(! _GLF_IDENTITY((read_1 + 1 == read_2), ((read_1 + 1 == read_2)) && true), bool(bvec3(! (read_1 + 1 == read_2), true, false))))), bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1 == read_2, ! (_GLF_IDENTITY(! _GLF_IDENTITY((read_1 + 1 == read_2), ((read_1 + 1 == read_2)) && true), bool(bvec3(! (read_1 + 1 == read_2), true, false))))), ! (! (_GLF_IDENTITY(read_1 + 1 == read_2, ! (_GLF_IDENTITY(! _GLF_IDENTITY((read_1 + 1 == read_2), ((read_1 + 1 == read_2)) && true), bool(bvec3(! (read_1 + 1 == read_2), true, false)))))))), true, false, true)))), _GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, ! (! (false))), _GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) && true)) || false)))) ? _GLF_FUZZED(read_1) : uint(_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1 == read_2, ! (_GLF_IDENTITY(! _GLF_IDENTITY((read_1 + 1 == read_2), ((read_1 + 1 == read_2)) && true), bool(bvec3(! (read_1 + 1 == read_2), true, false))))), bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1 == read_2, ! (_GLF_IDENTITY(! _GLF_IDENTITY((read_1 + 1 == read_2), ((read_1 + 1 == read_2)) && true), bool(bvec3(! (read_1 + 1 == read_2), true, false))))), ! (! (_GLF_IDENTITY(read_1 + 1 == read_2, ! (_GLF_IDENTITY(! _GLF_IDENTITY((read_1 + 1 == read_2), ((read_1 + 1 == read_2)) && true), bool(bvec3(! (read_1 + 1 == read_2), true, false)))))))), true, false, true)))))))), false ? _GLF_FUZZED(read_1) : uint(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1, (_GLF_IDENTITY(read_1 + 1, max(read_1 + 1, read_1 + 1))) ^ 0u) == read_2, false || (_GLF_IDENTITY(read_1 + 1, (_GLF_IDENTITY(read_1 + 1, max(read_1 + 1, read_1 + 1))) ^ 0u) == read_2)), ! (_GLF_IDENTITY(! (read_1 + 1 == _GLF_IDENTITY(read_2, 1u * (read_2))), bool(bvec3(! (read_1 + 1 == read_2), true, false))))))), clamp(clamp(false ? _GLF_FUZZED(read_1) : uint(_GLF_IDENTITY(read_1 + 1 == read_2, _GLF_IDENTITY(! (_GLF_IDENTITY(! (_GLF_IDENTITY(read_1 + 1, uint(uint(read_1 + 1))) == read_2), bool(bvec3(! (read_1 + 1 == read_2), true, false)))), ! (! (! (_GLF_IDENTITY(! (read_1 + 1 == read_2), bool(bvec3(! (read_1 + 1 == read_2), true, false))))))))), _GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), false || (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), (_GLF_IDENTITY(false, ! (! (false)))) && true))), false))) ? _GLF_FUZZED(read_1) : uint(_GLF_IDENTITY(read_1 + 1 == read_2, ! (_GLF_IDENTITY(! _GLF_IDENTITY((read_1 + 1 == read_2), ((read_1 + 1 == read_2)) && true), _GLF_IDENTITY(bool(bvec3(! (read_1 + 1 == read_2), true, false)), ! (! (bool(bvec3(! (read_1 + 1 == read_2), true, false))))))))), false ? _GLF_FUZZED(read_1) : uint(_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1, (_GLF_IDENTITY(read_1 + 1, max(_GLF_IDENTITY(read_1 + 1, (_GLF_IDENTITY(read_1 + 1, (read_1 + 1) | (read_1 + 1))) | (read_1 + 1)), read_1 + 1))) ^ 0u) == read_2, ! (_GLF_IDENTITY(! (read_1 + 1 == read_2), bool(bvec3(! (read_1 + 1 == read_2), true, false))))))), clamp(false ? _GLF_FUZZED(read_1) : uint(_GLF_IDENTITY(read_1 + 1 == read_2, _GLF_IDENTITY(! (_GLF_IDENTITY(! (read_1 + 1 == read_2), bool(bvec3(_GLF_IDENTITY(! (read_1 + 1 == read_2), true && (! (read_1 + 1 == read_2))), true, false)))), ! (! (! (_GLF_IDENTITY(! (read_1 + 1 == read_2), bool(bvec3(! (read_1 + 1 == read_2), true, _GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false))))))))))), _GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, ! (! (false))), false))) ? _GLF_FUZZED(read_1) : uint(_GLF_IDENTITY(read_1 + 1 == read_2, ! (_GLF_IDENTITY(! _GLF_IDENTITY((read_1 + 1 == read_2), ((read_1 + 1 == read_2)) && true), bool(bvec3(! (read_1 + 1 == read_2), true, false)))))), false ? _GLF_FUZZED(read_1) : uint(_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1, (_GLF_IDENTITY(read_1 + 1, max(read_1 + 1, read_1 + 1))) ^ 0u) == read_2, ! (_GLF_IDENTITY(! (read_1 + 1 == read_2), bool(bvec3(! (read_1 + 1 == read_2), true, _GLF_IDENTITY(false, bool(bvec4(false, true, false, true)))))))))), clamp(false ? _GLF_FUZZED(read_1) : uint(_GLF_IDENTITY(read_1 + 1 == read_2, _GLF_IDENTITY(! _GLF_IDENTITY((_GLF_IDENTITY(! (read_1 + 1 == read_2), bool(bvec3(! (read_1 + 1 == read_2), true, false)))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool((_GLF_IDENTITY(! (read_1 + 1 == read_2), bool(bvec3(! (read_1 + 1 == read_2), true, false))))), (bool((_GLF_IDENTITY(! (read_1 + 1 == read_2), bool(bvec3(! (read_1 + 1 == read_2), true, false)))))) || false)), bool(bool(bool(_GLF_IDENTITY(bool((_GLF_IDENTITY(! (read_1 + 1 == read_2), bool(bvec3(! (read_1 + 1 == read_2), true, false))))), (bool((_GLF_IDENTITY(! (read_1 + 1 == read_2), bool(bvec3(! (read_1 + 1 == read_2), true, false)))))) || false)))))), ! (! (! (_GLF_IDENTITY(! (read_1 + 1 == read_2), bool(bvec3(! (read_1 + 1 == read_2), true, false))))))))), _GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), (_GLF_IDENTITY(false, ! (! (false)))) && true), false))) ? _GLF_FUZZED(read_1) : uint(_GLF_IDENTITY(read_1 + 1 == read_2, ! (_GLF_IDENTITY(_GLF_IDENTITY(! _GLF_IDENTITY((read_1 + 1 == read_2), ((read_1 + 1 == read_2)) && true), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(! _GLF_IDENTITY((read_1 + 1 == read_2), ((read_1 + 1 == read_2)) && true), ! (_GLF_IDENTITY(! (! _GLF_IDENTITY((read_1 + 1 == read_2), ((read_1 + 1 == read_2)) && true)), false || (! (! _GLF_IDENTITY((read_1 + 1 == read_2), ((read_1 + 1 == read_2)) && true))))))), (! (_GLF_IDENTITY(! _GLF_IDENTITY((read_1 + 1 == read_2), ((read_1 + 1 == read_2)) && true), ! (_GLF_IDENTITY(! (! _GLF_IDENTITY((read_1 + 1 == read_2), ((read_1 + 1 == read_2)) && true)), false || (! (! _GLF_IDENTITY((read_1 + 1 == read_2), ((read_1 + 1 == read_2)) && true)))))))) && true))), bool(bvec3(! (read_1 + 1 == read_2), true, false)))))), false ? _GLF_FUZZED(read_1) : uint(_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1, (_GLF_IDENTITY(read_1 + 1, max(read_1 + 1, read_1 + 1))) ^ 0u) == read_2, ! (_GLF_IDENTITY(! (read_1 + 1 == read_2), bool(bvec3(! (read_1 + 1 == read_2), true, false))))))))), clamp(false ? _GLF_FUZZED(read_1) : uint(_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1 == read_2, _GLF_IDENTITY(! (_GLF_IDENTITY(! (read_1 + 1 == read_2), bool(bvec3(! (read_1 + 1 == read_2), true, false)))), ! (! (! (_GLF_IDENTITY(! (read_1 + 1 == read_2), bool(bvec3(! (read_1 + 1 == read_2), true, false)))))))), (_GLF_IDENTITY(read_1 + 1 == read_2, _GLF_IDENTITY(! _GLF_IDENTITY((_GLF_IDENTITY(! (read_1 + 1 == _GLF_IDENTITY(read_2, min(read_2, read_2))), bool(bvec3(! (read_1 + 1 == read_2), true, false)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && ((_GLF_IDENTITY(! (read_1 + 1 == _GLF_IDENTITY(read_2, min(read_2, read_2))), bool(bvec3(! (read_1 + 1 == read_2), true, false)))))), ! (! _GLF_IDENTITY((! (_GLF_IDENTITY(! (read_1 + 1 == read_2), bool(bvec3(! (read_1 + 1 == read_2), true, false))))), ((! (_GLF_IDENTITY(! (read_1 + 1 == read_2), bool(bvec3(! (read_1 + 1 == read_2), true, false)))))) || false))))) && true)), _GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, ! (! (false))), false))) ? _GLF_FUZZED(read_1) : uint(_GLF_IDENTITY(read_1 + 1 == read_2, ! (_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_IDENTITY(read_1 + 1 == read_2, _GLF_IDENTITY(bool(bvec3(read_1 + 1 == read_2, true, false)), ! (! (bool(bvec3(read_1 + 1 == read_2, true, false))))))), ((read_1 + 1 == read_2)) && true), bool(bvec3(! (read_1 + 1 == read_2), true, false)))))), false ? _GLF_FUZZED(read_1) : uint(_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1, (_GLF_IDENTITY(read_1 + 1, max(read_1 + 1, read_1 + 1))) ^ 0u) == read_2, ! (_GLF_IDENTITY(! (read_1 + 1 == read_2), _GLF_IDENTITY(bool(bvec3(! (read_1 + 1 == read_2), true, false)), _GLF_IDENTITY(bool(bvec3(bool(bvec3(! (read_1 + 1 == read_2), true, false)), true, true)), true && (bool(bvec3(bool(bvec3(! (read_1 + 1 == read_2), true, false)), true, true)))))))))), clamp(false ? _GLF_FUZZED(read_1) : uint(_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1 == read_2, (read_1 + 1 == read_2) || false), _GLF_IDENTITY(! (_GLF_IDENTITY(! (read_1 + 1 == read_2), bool(bvec3(! (read_1 + 1 == read_2), true, false)))), ! (! (! (_GLF_IDENTITY(! (read_1 + 1 == read_2), bool(bvec3(! (read_1 + 1 == read_2), true, _GLF_IDENTITY(false, false || (false))))))))))), _GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, ! (! (false))), false))) ? _GLF_IDENTITY(_GLF_FUZZED(read_1), ~ (~ (_GLF_FUZZED(read_1)))) : uint(_GLF_IDENTITY(read_1 + 1 == read_2, ! (_GLF_IDENTITY(! _GLF_IDENTITY((read_1 + 1 == read_2), ((read_1 + 1 == read_2)) && true), bool(bvec3(! (_GLF_IDENTITY(read_1 + 1 == read_2, (read_1 + 1 == read_2) && true)), true, false)))))), false ? _GLF_FUZZED(read_1) : uint(_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1, (_GLF_IDENTITY(read_1 + 1, max(read_1 + 1, read_1 + 1))) ^ 0u) == read_2, ! (_GLF_IDENTITY(! (read_1 + 1 == read_2), bool(_GLF_IDENTITY(bvec3(! (read_1 + 1 == read_2), true, false), _GLF_IDENTITY(bvec3(bvec3(bvec3(! (read_1 + 1 == read_2), true, false))), bvec3(bvec4(bvec3(bvec3(bvec3(! (read_1 + 1 == read_2), true, false))), true)))))))))))))) + 0u)), (_GLF_IDENTITY(false ? _GLF_FUZZED(read_1) : uint(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1 == read_2, ! (_GLF_IDENTITY(! (read_1 + 1 == read_2), bool(bvec3(! (read_1 + 1 == read_2), true, false))))), bool(bvec4(_GLF_IDENTITY(read_1 + 1 == read_2, ! (_GLF_IDENTITY(! (read_1 + 1 == read_2), bool(bvec3(! (read_1 + 1 == read_2), true, false))))), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), true && (_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1 == read_2, ! (_GLF_IDENTITY(! (read_1 + 1 == read_2), bool(bvec3(! (read_1 + 1 == read_2), true, false))))), bool(bvec4(_GLF_IDENTITY(read_1 + 1 == read_2, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(read_1 + 1, uint(_GLF_IDENTITY(uvec2(_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1, (read_1 + 1) >> 0u), _GLF_IDENTITY(min(read_1 + 1, read_1 + 1), (min(read_1 + 1, read_1 + 1)) | (min(read_1 + 1, read_1 + 1)))), 1u), (uvec2(_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1, (read_1 + 1) >> 0u), _GLF_IDENTITY(min(read_1 + 1, read_1 + 1), (min(read_1 + 1, read_1 + 1)) | (min(read_1 + 1, read_1 + 1)))), 1u)) << uvec2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))))) == read_2), bool(bvec3(! (read_1 + 1 == read_2), true, false))))), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))), (_GLF_IDENTITY(false ? _GLF_FUZZED(read_1) : uint(_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1 == read_2, ! (_GLF_IDENTITY(! (read_1 + 1 == read_2), bool(bvec4(! (read_1 + 1 == read_2), true, false, true))))), ! (_GLF_IDENTITY(! (read_1 + 1 == read_2), bool(bvec3(! (read_1 + 1 == read_2), true, false)))))), _GLF_IDENTITY(clamp(false ? _GLF_FUZZED(_GLF_IDENTITY(read_1, (read_1) | 0u)) : uint(_GLF_IDENTITY(read_1 + 1 == read_2, _GLF_IDENTITY(! (_GLF_IDENTITY(! (read_1 + 1 == read_2), bool(bvec3(! (read_1 + 1 == read_2), true, false)))), ! (! (! (_GLF_IDENTITY(! (read_1 + 1 == read_2), bool(bvec3(! (read_1 + 1 == read_2), true, false))))))))), _GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, ! (! (false))), false))) ? _GLF_FUZZED(read_1) : uint(_GLF_IDENTITY(read_1 + 1 == read_2, ! (_GLF_IDENTITY(! _GLF_IDENTITY((read_1 + 1 == read_2), ((read_1 + 1 == read_2)) && true), bool(bvec3(! (read_1 + 1 == read_2), true, false)))))), false ? _GLF_FUZZED(read_1) : uint(_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1, (_GLF_IDENTITY(read_1 + 1, max(read_1 + 1, read_1 + 1))) ^ 0u) == read_2, ! (_GLF_IDENTITY(! (read_1 + 1 == read_2), bool(bvec3(_GLF_IDENTITY(! (read_1 + 1 == read_2), bool(bvec4(! (read_1 + 1 == read_2), true, true, false))), true, false))))))), clamp(_GLF_IDENTITY(clamp(false ? _GLF_FUZZED(read_1) : uint(_GLF_IDENTITY(read_1 + 1 == read_2, _GLF_IDENTITY(! (_GLF_IDENTITY(! (read_1 + 1 == _GLF_IDENTITY(read_2, (read_2) ^ 0u)), bool(bvec3(! (read_1 + 1 == read_2), true, false)))), ! (! (! (_GLF_IDENTITY(! (read_1 + 1 == read_2), bool(bvec3(! (read_1 + 1 == read_2), true, false))))))))), _GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, ! (! (false))), _GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) && true)) || false)))) ? _GLF_FUZZED(read_1) : uint(_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1 == read_2, ! (_GLF_IDENTITY(! _GLF_IDENTITY((read_1 + 1 == read_2), ((read_1 + 1 == read_2)) && true), bool(bvec3(! (read_1 + 1 == read_2), true, false))))), bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1 == read_2, ! (_GLF_IDENTITY(! _GLF_IDENTITY((read_1 + 1 == read_2), ((read_1 + 1 == read_2)) && true), bool(bvec3(! (read_1 + 1 == read_2), true, false))))), ! (! (_GLF_IDENTITY(read_1 + 1 == read_2, ! (_GLF_IDENTITY(! _GLF_IDENTITY((read_1 + 1 == read_2), ((read_1 + 1 == read_2)) && true), bool(bvec3(! (read_1 + 1 == read_2), true, false)))))))), true, false, true)))), min(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, ! (! (false))), _GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) && true)) || false)))) ? _GLF_FUZZED(read_1) : uint(_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1 == read_2, ! (_GLF_IDENTITY(! _GLF_IDENTITY((read_1 + 1 == read_2), ((read_1 + 1 == read_2)) && true), bool(bvec3(! (read_1 + 1 == read_2), true, false))))), bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1 == read_2, ! (_GLF_IDENTITY(! _GLF_IDENTITY((read_1 + 1 == read_2), ((read_1 + 1 == read_2)) && true), bool(bvec3(! (read_1 + 1 == read_2), true, false))))), ! (! (_GLF_IDENTITY(read_1 + 1 == read_2, ! (_GLF_IDENTITY(! _GLF_IDENTITY((read_1 + 1 == read_2), ((read_1 + 1 == read_2)) && true), bool(bvec3(! (read_1 + 1 == read_2), true, false)))))))), true, false, true)))), (_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, ! (! (false))), _GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) && true)) || false)))) ? _GLF_FUZZED(read_1) : uint(_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1 == read_2, ! (_GLF_IDENTITY(! _GLF_IDENTITY((read_1 + 1 == read_2), ((read_1 + 1 == read_2)) && true), bool(bvec3(! (read_1 + 1 == read_2), true, false))))), bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1 == read_2, ! (_GLF_IDENTITY(! _GLF_IDENTITY((read_1 + 1 == read_2), ((read_1 + 1 == read_2)) && true), bool(bvec3(! (read_1 + 1 == read_2), true, false))))), ! (! (_GLF_IDENTITY(read_1 + 1 == read_2, ! (_GLF_IDENTITY(! _GLF_IDENTITY((read_1 + 1 == read_2), ((read_1 + 1 == read_2)) && true), bool(bvec3(! (read_1 + 1 == read_2), true, false)))))))), true, false, true))))) ^ 0u), _GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, ! (! (false))), _GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) && true)) || false)))) ? _GLF_FUZZED(read_1) : uint(_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1 == read_2, ! (_GLF_IDENTITY(! _GLF_IDENTITY((read_1 + 1 == read_2), ((read_1 + 1 == read_2)) && true), bool(bvec3(! (read_1 + 1 == read_2), true, false))))), bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1 == read_2, ! (_GLF_IDENTITY(! _GLF_IDENTITY((read_1 + 1 == read_2), ((read_1 + 1 == read_2)) && true), bool(bvec3(! (read_1 + 1 == read_2), true, false))))), ! (! (_GLF_IDENTITY(read_1 + 1 == read_2, ! (_GLF_IDENTITY(! _GLF_IDENTITY((read_1 + 1 == read_2), ((read_1 + 1 == read_2)) && true), bool(bvec3(! (read_1 + 1 == read_2), true, false)))))))), true, false, true)))), max(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, ! (! (false))), _GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) && true)) || false)))) ? _GLF_FUZZED(read_1) : uint(_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1 == read_2, ! (_GLF_IDENTITY(! _GLF_IDENTITY((read_1 + 1 == read_2), ((read_1 + 1 == read_2)) && true), bool(bvec3(! (read_1 + 1 == read_2), true, false))))), bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1 == read_2, ! (_GLF_IDENTITY(! _GLF_IDENTITY((read_1 + 1 == read_2), ((read_1 + 1 == read_2)) && true), bool(bvec3(! (read_1 + 1 == read_2), true, false))))), ! (! (_GLF_IDENTITY(read_1 + 1 == read_2, ! (_GLF_IDENTITY(! _GLF_IDENTITY((read_1 + 1 == read_2), ((read_1 + 1 == read_2)) && true), bool(bvec3(! (read_1 + 1 == read_2), true, false)))))))), true, false, true)))), _GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, ! (! (false))), _GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) && true)) || false)))) ? _GLF_FUZZED(read_1) : uint(_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1 == read_2, ! (_GLF_IDENTITY(! _GLF_IDENTITY((read_1 + 1 == read_2), ((read_1 + 1 == read_2)) && true), bool(bvec3(! (read_1 + 1 == read_2), true, false))))), bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1 == read_2, ! (_GLF_IDENTITY(! _GLF_IDENTITY((read_1 + 1 == read_2), ((read_1 + 1 == read_2)) && true), bool(bvec3(! (read_1 + 1 == read_2), true, false))))), ! (! (_GLF_IDENTITY(read_1 + 1 == read_2, ! (_GLF_IDENTITY(! _GLF_IDENTITY((read_1 + 1 == read_2), ((read_1 + 1 == read_2)) && true), bool(bvec3(! (read_1 + 1 == read_2), true, false)))))))), true, false, true)))))))), false ? _GLF_FUZZED(read_1) : uint(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1, (_GLF_IDENTITY(read_1 + 1, max(read_1 + 1, read_1 + 1))) ^ 0u) == read_2, false || (_GLF_IDENTITY(read_1 + 1, (_GLF_IDENTITY(read_1 + 1, max(read_1 + 1, read_1 + 1))) ^ 0u) == read_2)), ! (_GLF_IDENTITY(! (read_1 + 1 == _GLF_IDENTITY(read_2, 1u * (read_2))), bool(bvec3(! (read_1 + 1 == read_2), true, false))))))), clamp(clamp(false ? _GLF_FUZZED(read_1) : uint(_GLF_IDENTITY(read_1 + 1 == read_2, _GLF_IDENTITY(! (_GLF_IDENTITY(! (_GLF_IDENTITY(read_1 + 1, uint(uint(read_1 + 1))) == read_2), bool(bvec3(! (read_1 + 1 == read_2), true, false)))), ! (! (! (_GLF_IDENTITY(! (read_1 + 1 == read_2), bool(bvec3(! (read_1 + 1 == read_2), true, false))))))))), _GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), false || (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), (_GLF_IDENTITY(false, ! (! (false)))) && true))), false))) ? _GLF_FUZZED(read_1) : uint(_GLF_IDENTITY(read_1 + 1 == read_2, ! (_GLF_IDENTITY(! _GLF_IDENTITY((read_1 + 1 == read_2), ((read_1 + 1 == read_2)) && true), _GLF_IDENTITY(bool(bvec3(! (read_1 + 1 == read_2), true, false)), ! (! (bool(bvec3(! (read_1 + 1 == read_2), true, false))))))))), false ? _GLF_FUZZED(read_1) : uint(_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1, (_GLF_IDENTITY(read_1 + 1, max(_GLF_IDENTITY(read_1 + 1, (_GLF_IDENTITY(read_1 + 1, (read_1 + 1) | (read_1 + 1))) | (read_1 + 1)), read_1 + 1))) ^ 0u) == read_2, ! (_GLF_IDENTITY(! (read_1 + 1 == read_2), bool(bvec3(! (read_1 + 1 == read_2), true, false))))))), clamp(false ? _GLF_FUZZED(read_1) : uint(_GLF_IDENTITY(read_1 + 1 == read_2, _GLF_IDENTITY(! (_GLF_IDENTITY(! (read_1 + 1 == read_2), bool(bvec3(_GLF_IDENTITY(! (read_1 + 1 == read_2), true && (! (read_1 + 1 == read_2))), true, false)))), ! (! (! (_GLF_IDENTITY(! (read_1 + 1 == read_2), bool(bvec3(! (read_1 + 1 == read_2), true, _GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false))))))))))), _GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, ! (! (false))), false))) ? _GLF_FUZZED(read_1) : uint(_GLF_IDENTITY(read_1 + 1 == read_2, ! (_GLF_IDENTITY(! _GLF_IDENTITY((read_1 + 1 == read_2), ((read_1 + 1 == read_2)) && true), bool(bvec3(! (read_1 + 1 == read_2), true, false)))))), false ? _GLF_FUZZED(read_1) : uint(_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1, (_GLF_IDENTITY(read_1 + 1, max(read_1 + 1, read_1 + 1))) ^ 0u) == read_2, ! (_GLF_IDENTITY(! (read_1 + 1 == read_2), bool(bvec3(! (read_1 + 1 == read_2), true, _GLF_IDENTITY(false, bool(bvec4(false, true, false, true)))))))))), clamp(false ? _GLF_FUZZED(read_1) : uint(_GLF_IDENTITY(read_1 + 1 == read_2, _GLF_IDENTITY(! _GLF_IDENTITY((_GLF_IDENTITY(! (read_1 + 1 == read_2), bool(bvec3(! (read_1 + 1 == read_2), true, false)))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool((_GLF_IDENTITY(! (read_1 + 1 == read_2), bool(bvec3(! (read_1 + 1 == read_2), true, false))))), (bool((_GLF_IDENTITY(! (read_1 + 1 == read_2), bool(bvec3(! (read_1 + 1 == read_2), true, false)))))) || false)), bool(bool(bool(_GLF_IDENTITY(bool((_GLF_IDENTITY(! (read_1 + 1 == read_2), bool(bvec3(! (read_1 + 1 == read_2), true, false))))), (bool((_GLF_IDENTITY(! (read_1 + 1 == read_2), bool(bvec3(! (read_1 + 1 == read_2), true, false)))))) || false)))))), ! (! (! (_GLF_IDENTITY(! (read_1 + 1 == read_2), bool(bvec3(! (read_1 + 1 == read_2), true, false))))))))), _GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), (_GLF_IDENTITY(false, ! (! (false)))) && true), false))) ? _GLF_FUZZED(read_1) : uint(_GLF_IDENTITY(read_1 + 1 == read_2, ! (_GLF_IDENTITY(_GLF_IDENTITY(! _GLF_IDENTITY((read_1 + 1 == read_2), ((read_1 + 1 == read_2)) && true), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(! _GLF_IDENTITY((read_1 + 1 == read_2), ((read_1 + 1 == read_2)) && true), ! (_GLF_IDENTITY(! (! _GLF_IDENTITY((read_1 + 1 == read_2), ((read_1 + 1 == read_2)) && true)), false || (! (! _GLF_IDENTITY((read_1 + 1 == read_2), ((read_1 + 1 == read_2)) && true))))))), (! (_GLF_IDENTITY(! _GLF_IDENTITY((read_1 + 1 == read_2), ((read_1 + 1 == read_2)) && true), ! (_GLF_IDENTITY(! (! _GLF_IDENTITY((read_1 + 1 == read_2), ((read_1 + 1 == read_2)) && true)), false || (! (! _GLF_IDENTITY((read_1 + 1 == read_2), ((read_1 + 1 == read_2)) && true)))))))) && true))), bool(bvec3(! (read_1 + 1 == read_2), true, false)))))), false ? _GLF_FUZZED(read_1) : uint(_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1, (_GLF_IDENTITY(read_1 + 1, max(read_1 + 1, read_1 + 1))) ^ 0u) == read_2, ! (_GLF_IDENTITY(! (read_1 + 1 == read_2), bool(bvec3(! (read_1 + 1 == read_2), true, false))))))))), clamp(false ? _GLF_FUZZED(read_1) : uint(_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1 == read_2, _GLF_IDENTITY(! (_GLF_IDENTITY(! (read_1 + 1 == read_2), bool(bvec3(! (read_1 + 1 == read_2), true, false)))), ! (! (! (_GLF_IDENTITY(! (read_1 + 1 == read_2), bool(bvec3(! (read_1 + 1 == read_2), true, false)))))))), (_GLF_IDENTITY(read_1 + 1 == read_2, _GLF_IDENTITY(! _GLF_IDENTITY((_GLF_IDENTITY(! (read_1 + 1 == _GLF_IDENTITY(read_2, min(read_2, read_2))), bool(bvec3(! (read_1 + 1 == read_2), true, false)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && ((_GLF_IDENTITY(! (read_1 + 1 == _GLF_IDENTITY(read_2, min(read_2, read_2))), bool(bvec3(! (read_1 + 1 == read_2), true, false)))))), ! (! _GLF_IDENTITY((! (_GLF_IDENTITY(! (read_1 + 1 == read_2), bool(bvec3(! (read_1 + 1 == read_2), true, false))))), ((! (_GLF_IDENTITY(! (read_1 + 1 == read_2), bool(bvec3(! (read_1 + 1 == read_2), true, false)))))) || false))))) && true)), _GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, ! (! (false))), false))) ? _GLF_FUZZED(read_1) : uint(_GLF_IDENTITY(read_1 + 1 == read_2, ! (_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_IDENTITY(read_1 + 1 == read_2, _GLF_IDENTITY(bool(bvec3(read_1 + 1 == read_2, true, false)), ! (! (bool(bvec3(read_1 + 1 == read_2, true, false))))))), ((read_1 + 1 == read_2)) && true), bool(bvec3(! (read_1 + 1 == read_2), true, false)))))), false ? _GLF_FUZZED(read_1) : uint(_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1, (_GLF_IDENTITY(read_1 + 1, max(read_1 + 1, read_1 + 1))) ^ 0u) == read_2, ! (_GLF_IDENTITY(! (read_1 + 1 == read_2), _GLF_IDENTITY(bool(bvec3(! (read_1 + 1 == read_2), true, false)), _GLF_IDENTITY(bool(bvec3(bool(bvec3(! (read_1 + 1 == read_2), true, false)), true, true)), true && (bool(bvec3(bool(bvec3(! (read_1 + 1 == read_2), true, false)), true, true)))))))))), clamp(false ? _GLF_FUZZED(read_1) : uint(_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1 == read_2, (read_1 + 1 == read_2) || false), _GLF_IDENTITY(! (_GLF_IDENTITY(! (read_1 + 1 == read_2), bool(bvec3(! (read_1 + 1 == read_2), true, false)))), ! (! (! (_GLF_IDENTITY(! (read_1 + 1 == read_2), bool(bvec3(! (read_1 + 1 == read_2), true, _GLF_IDENTITY(false, false || (false))))))))))), _GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, ! (! (false))), false))) ? _GLF_IDENTITY(_GLF_FUZZED(read_1), ~ (~ (_GLF_FUZZED(read_1)))) : uint(_GLF_IDENTITY(read_1 + 1 == read_2, ! (_GLF_IDENTITY(! _GLF_IDENTITY((read_1 + 1 == read_2), ((read_1 + 1 == read_2)) && true), bool(bvec3(! (_GLF_IDENTITY(read_1 + 1 == read_2, (read_1 + 1 == read_2) && true)), true, false)))))), false ? _GLF_FUZZED(read_1) : uint(_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1, (_GLF_IDENTITY(read_1 + 1, max(read_1 + 1, read_1 + 1))) ^ 0u) == read_2, ! (_GLF_IDENTITY(! (read_1 + 1 == read_2), bool(_GLF_IDENTITY(bvec3(! (read_1 + 1 == read_2), true, false), _GLF_IDENTITY(bvec3(bvec3(bvec3(! (read_1 + 1 == read_2), true, false))), bvec3(bvec4(bvec3(bvec3(bvec3(! (read_1 + 1 == read_2), true, false))), true)))))))))))))) + 0u))))) + 1) ^ uint(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), float(mat4x3(_GLF_ZERO(0.0, injectionSwitch.x), tan(log(1.0)), 1.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)), 1.0, length(vec4(0.0, 0.0, 0.0, 0.0)), 0.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, cos(0.0), 1.0))))), 4, 64, 4);
}
