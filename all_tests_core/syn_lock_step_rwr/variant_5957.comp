#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 do
  {
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(_GLF_IDENTITY(mat2x3(injectionSwitch.y, 1.0, 1.0, 0.0, 0.0, length(vec2(0.0, 0.0))), transpose(_GLF_IDENTITY(transpose(mat2x3(injectionSwitch.y, 1.0, 1.0, 0.0, 0.0, length(vec2(0.0, 0.0)))), (transpose(mat2x3(injectionSwitch.y, 1.0, 1.0, 0.0, 0.0, length(vec2(0.0, 0.0))))) * mat3(1.0))))))), ! (_GLF_IDENTITY(! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(_GLF_IDENTITY(mat2x3(injectionSwitch.y, 1.0, 1.0, 0.0, 0.0, length(vec2(0.0, 0.0))), transpose(_GLF_IDENTITY(transpose(mat2x3(injectionSwitch.y, 1.0, 1.0, 0.0, 0.0, length(vec2(0.0, 0.0)))), (transpose(mat2x3(injectionSwitch.y, 1.0, 1.0, 0.0, 0.0, length(vec2(0.0, 0.0))))) * mat3(1.0)))))))), (! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(_GLF_IDENTITY(mat2x3(injectionSwitch.y, 1.0, 1.0, 0.0, 0.0, length(vec2(0.0, 0.0))), transpose(_GLF_IDENTITY(transpose(mat2x3(injectionSwitch.y, 1.0, 1.0, 0.0, 0.0, length(vec2(0.0, 0.0)))), (transpose(mat2x3(injectionSwitch.y, 1.0, 1.0, 0.0, 0.0, length(vec2(0.0, 0.0))))) * mat3(1.0))))))))) || false))))))
    {
     for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != ((1 << _GLF_IDENTITY(int(_GLF_IDENTITY(0, (0) | 0)), int(0))) >> _GLF_IDENTITY(int(0), int(0)))); _injected_loop_counter ++)
      {
       barrier();
      }
    }
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
    }
   else
    {
     if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).x > injectionSwitch.y))))
      {
      }
     else
      {
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
    }
  }
 while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0)))))));
 if(_GLF_WRAPPED_IF_TRUE(true))
  {
   if(_GLF_DEAD(false))
    {
     for(int _injected_loop_counter = _GLF_IDENTITY((0 | int(_GLF_ONE(_GLF_IDENTITY(1.0, max(1.0, 1.0)), injectionSwitch.y))), max((0 | int(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), (true ? _GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(72.83), _GLF_FUZZED(_GLF_IDENTITY(-92.11, min(_GLF_IDENTITY(-92.11, clamp(-92.11, -92.11, -92.11)), -92.11)))), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true)))) / sqrt(vec2(1.0, 1.0))).y) : _GLF_FUZZED(-3.9))))), (0 | int(_GLF_ONE(1.0, injectionSwitch.y))))); _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
      {
       if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
        }
       else
        {
         if(_GLF_WRAPPED_IF_TRUE(true))
          {
           barrier();
          }
         else
          {
          }
        }
      }
    }
  }
 else
  {
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   do
    {
     for(int _injected_loop_counter = (-51405 & 0); _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
      {
       barrier();
      }
    }
   while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)), injectionSwitch)).y))));
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, _GLF_IDENTITY((_GLF_IDENTITY(false, ! (! (false)))) || false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY((_GLF_IDENTITY(false, ! (! (false)))) || false, ((_GLF_IDENTITY(false, ! (! (false)))) || false) && true)))))))))
  {
   do
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       do
        {
         barrier();
        }
       while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false)));
      }
     barrier();
     if(_GLF_DEAD(false))
      continue;
     for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != (0 >> _GLF_IDENTITY(int(5), int(5)))); _injected_loop_counter --)
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_WRAPPED_IF_FALSE(false))
          {
          }
         else
          {
           barrier();
          }
        }
      }
    }
   while(_GLF_WRAPPED_LOOP(false));
  }
 uvec4 GLF_merged4_0_1_13_1_1_17_2_1_11_3_1_14num_workgroupsubgroup_local_idvirtual_gidworkgroup_base;
 do
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    continue;
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, true, true, false)))))
      continue;
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))), bool(bvec3((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), (bool(_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))), bool(bvec3((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))) && true))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(_GLF_IDENTITY(mat2(injectionSwitch.y, 1.0, 0.0, 0.0), (_GLF_IDENTITY(mat2(injectionSwitch.y, 1.0, 0.0, 0.0), (true ? mat2(injectionSwitch.y, 1.0, 0.0, 0.0) : _GLF_FUZZED(mat2(190.153, 60.09, 80.29, -3855.2640))))) / mat2(1.0, 1.0, 1.0, 1.0))), 1.0 * _GLF_IDENTITY((_GLF_IDENTITY(float(_GLF_IDENTITY(mat2(injectionSwitch.y, 1.0, 0.0, 0.0), (_GLF_IDENTITY(mat2(injectionSwitch.y, 1.0, 0.0, 0.0), (true ? mat2(injectionSwitch.y, 1.0, 0.0, 0.0) : _GLF_FUZZED(mat2(190.153, 60.09, 80.29, -3855.2640))))) / mat2(1.0, 1.0, 1.0, 1.0))), clamp(float(_GLF_IDENTITY(mat2(injectionSwitch.y, 1.0, 0.0, 0.0), (_GLF_IDENTITY(mat2(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y, 1.0, 0.0, 0.0), (true ? mat2(injectionSwitch.y, 1.0, 0.0, 0.0) : _GLF_FUZZED(mat2(190.153, 60.09, 80.29, -3855.2640))))) / mat2(1.0, 1.0, 1.0, 1.0))), float(_GLF_IDENTITY(mat2(injectionSwitch.y, 1.0, 0.0, 0.0), (_GLF_IDENTITY(mat2(injectionSwitch.y, 1.0, 0.0, 0.0), (true ? mat2(injectionSwitch.y, 1.0, 0.0, 0.0) : _GLF_FUZZED(mat2(_GLF_IDENTITY(190.153, mix(float(190.153), float(_GLF_FUZZED(-19.91)), bool(false))), 60.09, 80.29, -3855.2640))))) / mat2(1.0, 1.0, 1.0, 1.0))), float(_GLF_IDENTITY(mat2(injectionSwitch.y, 1.0, 0.0, 0.0), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(mat2(injectionSwitch.y, 1.0, 0.0, 0.0), (true ? mat2(injectionSwitch.y, 1.0, 0.0, 0.0) : _GLF_FUZZED(mat2(190.153, 60.09, 80.29, -3855.2640)))), mat2(_GLF_IDENTITY(mat2x3(_GLF_IDENTITY(mat2(injectionSwitch.y, 1.0, 0.0, 0.0), (true ? mat2(injectionSwitch.y, 1.0, 0.0, 0.0) : _GLF_FUZZED(mat2(190.153, 60.09, 80.29, -3855.2640))))), (true ? _GLF_IDENTITY(mat2x3(_GLF_IDENTITY(mat2(injectionSwitch.y, 1.0, 0.0, 0.0), (true ? mat2(injectionSwitch.y, 1.0, 0.0, 0.0) : _GLF_FUZZED(mat2(190.153, 60.09, 80.29, -3855.2640))))), transpose(transpose(mat2x3(_GLF_IDENTITY(mat2(injectionSwitch.y, 1.0, 0.0, 0.0), (true ? mat2(injectionSwitch.y, 1.0, 0.0, 0.0) : _GLF_FUZZED(mat2(190.153, 60.09, 80.29, -3855.2640)))))))) : _GLF_FUZZED(mat2x3(7.7, -651.755, -5839.5193, -152.315, -250.274, -8.6))))))), mat2(0.0, 0.0, 0.0, 0.0) + ((_GLF_IDENTITY(_GLF_IDENTITY(mat2(injectionSwitch.y, 1.0, 0.0, 0.0), (true ? mat2(injectionSwitch.y, 1.0, 0.0, 0.0) : _GLF_FUZZED(mat2(190.153, 60.09, 80.29, -3855.2640)))), mat2(_GLF_IDENTITY(mat2x3(_GLF_IDENTITY(mat2(injectionSwitch.y, 1.0, 0.0, 0.0), (true ? mat2(injectionSwitch.y, 1.0, 0.0, 0.0) : _GLF_FUZZED(mat2(190.153, 60.09, 80.29, -3855.2640))))), (true ? _GLF_IDENTITY(mat2x3(_GLF_IDENTITY(mat2(injectionSwitch.y, 1.0, 0.0, 0.0), (true ? mat2(injectionSwitch.y, 1.0, 0.0, 0.0) : _GLF_FUZZED(mat2(190.153, 60.09, 80.29, -3855.2640))))), transpose(transpose(mat2x3(_GLF_IDENTITY(mat2(injectionSwitch.y, 1.0, 0.0, 0.0), (true ? mat2(injectionSwitch.y, 1.0, 0.0, 0.0) : _GLF_FUZZED(mat2(190.153, 60.09, 80.29, -3855.2640)))))))) : _GLF_FUZZED(mat2x3(7.7, -651.755, -5839.5193, -152.315, -250.274, -8.6))))))))) / mat2(1.0, 1.0, 1.0, 1.0)))))), max(_GLF_IDENTITY((_GLF_IDENTITY(float(_GLF_IDENTITY(mat2(injectionSwitch.y, 1.0, 0.0, 0.0), (_GLF_IDENTITY(mat2(injectionSwitch.y, 1.0, 0.0, 0.0), (true ? mat2(injectionSwitch.y, 1.0, 0.0, 0.0) : _GLF_FUZZED(mat2(190.153, 60.09, 80.29, -3855.2640))))) / mat2(1.0, 1.0, 1.0, 1.0))), clamp(float(_GLF_IDENTITY(mat2(injectionSwitch.y, 1.0, 0.0, 0.0), (_GLF_IDENTITY(mat2(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y, 1.0, 0.0, 0.0), (true ? mat2(injectionSwitch.y, 1.0, 0.0, 0.0) : _GLF_FUZZED(mat2(190.153, 60.09, 80.29, -3855.2640))))) / mat2(1.0, 1.0, 1.0, 1.0))), float(_GLF_IDENTITY(mat2(injectionSwitch.y, 1.0, 0.0, 0.0), (_GLF_IDENTITY(mat2(injectionSwitch.y, 1.0, 0.0, 0.0), (true ? mat2(injectionSwitch.y, 1.0, 0.0, 0.0) : _GLF_FUZZED(mat2(_GLF_IDENTITY(190.153, mix(float(190.153), float(_GLF_FUZZED(-19.91)), bool(false))), 60.09, 80.29, -3855.2640))))) / mat2(1.0, 1.0, 1.0, 1.0))), float(_GLF_IDENTITY(mat2(injectionSwitch.y, 1.0, 0.0, 0.0), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(mat2(injectionSwitch.y, 1.0, 0.0, 0.0), (true ? mat2(injectionSwitch.y, 1.0, 0.0, 0.0) : _GLF_FUZZED(mat2(190.153, 60.09, 80.29, -3855.2640)))), mat2(_GLF_IDENTITY(mat2x3(_GLF_IDENTITY(mat2(injectionSwitch.y, 1.0, 0.0, 0.0), (true ? mat2(injectionSwitch.y, 1.0, 0.0, 0.0) : _GLF_FUZZED(mat2(190.153, 60.09, 80.29, -3855.2640))))), (true ? _GLF_IDENTITY(mat2x3(_GLF_IDENTITY(mat2(injectionSwitch.y, 1.0, 0.0, 0.0), (true ? mat2(injectionSwitch.y, 1.0, 0.0, 0.0) : _GLF_FUZZED(mat2(190.153, 60.09, 80.29, -3855.2640))))), transpose(transpose(mat2x3(_GLF_IDENTITY(mat2(injectionSwitch.y, 1.0, 0.0, 0.0), (true ? mat2(injectionSwitch.y, 1.0, 0.0, 0.0) : _GLF_FUZZED(mat2(190.153, 60.09, 80.29, -3855.2640)))))))) : _GLF_FUZZED(mat2x3(7.7, -651.755, -5839.5193, -152.315, -250.274, -8.6))))))), mat2(0.0, 0.0, 0.0, 0.0) + ((_GLF_IDENTITY(_GLF_IDENTITY(mat2(injectionSwitch.y, 1.0, 0.0, 0.0), (true ? mat2(injectionSwitch.y, 1.0, 0.0, 0.0) : _GLF_FUZZED(mat2(190.153, 60.09, 80.29, -3855.2640)))), mat2(_GLF_IDENTITY(mat2x3(_GLF_IDENTITY(mat2(injectionSwitch.y, 1.0, 0.0, 0.0), (true ? mat2(injectionSwitch.y, 1.0, 0.0, 0.0) : _GLF_FUZZED(mat2(190.153, 60.09, 80.29, -3855.2640))))), (true ? _GLF_IDENTITY(mat2x3(_GLF_IDENTITY(mat2(injectionSwitch.y, 1.0, 0.0, 0.0), (true ? mat2(injectionSwitch.y, 1.0, 0.0, 0.0) : _GLF_FUZZED(mat2(190.153, 60.09, 80.29, -3855.2640))))), transpose(transpose(mat2x3(_GLF_IDENTITY(mat2(injectionSwitch.y, 1.0, 0.0, 0.0), (true ? mat2(injectionSwitch.y, 1.0, 0.0, 0.0) : _GLF_FUZZED(mat2(190.153, 60.09, 80.29, -3855.2640)))))))) : _GLF_FUZZED(mat2x3(7.7, -651.755, -5839.5193, -152.315, -250.274, -8.6))))))))) / mat2(1.0, 1.0, 1.0, 1.0)))))), max((_GLF_IDENTITY(float(_GLF_IDENTITY(mat2(injectionSwitch.y, 1.0, 0.0, 0.0), (_GLF_IDENTITY(mat2(injectionSwitch.y, 1.0, 0.0, 0.0), (true ? mat2(injectionSwitch.y, 1.0, 0.0, 0.0) : _GLF_FUZZED(mat2(190.153, 60.09, 80.29, -3855.2640))))) / mat2(1.0, 1.0, 1.0, 1.0))), clamp(float(_GLF_IDENTITY(mat2(injectionSwitch.y, 1.0, 0.0, 0.0), (_GLF_IDENTITY(mat2(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y, 1.0, 0.0, 0.0), (true ? mat2(injectionSwitch.y, 1.0, 0.0, 0.0) : _GLF_FUZZED(mat2(190.153, 60.09, 80.29, -3855.2640))))) / mat2(1.0, 1.0, 1.0, 1.0))), float(_GLF_IDENTITY(mat2(injectionSwitch.y, 1.0, 0.0, 0.0), (_GLF_IDENTITY(mat2(injectionSwitch.y, 1.0, 0.0, 0.0), (true ? mat2(injectionSwitch.y, 1.0, 0.0, 0.0) : _GLF_FUZZED(mat2(_GLF_IDENTITY(190.153, mix(float(190.153), float(_GLF_FUZZED(-19.91)), bool(false))), 60.09, 80.29, -3855.2640))))) / mat2(1.0, 1.0, 1.0, 1.0))), float(_GLF_IDENTITY(mat2(injectionSwitch.y, 1.0, 0.0, 0.0), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(mat2(injectionSwitch.y, 1.0, 0.0, 0.0), (true ? mat2(injectionSwitch.y, 1.0, 0.0, 0.0) : _GLF_FUZZED(mat2(190.153, 60.09, 80.29, -3855.2640)))), mat2(_GLF_IDENTITY(mat2x3(_GLF_IDENTITY(mat2(injectionSwitch.y, 1.0, 0.0, 0.0), (true ? mat2(injectionSwitch.y, 1.0, 0.0, 0.0) : _GLF_FUZZED(mat2(190.153, 60.09, 80.29, -3855.2640))))), (true ? _GLF_IDENTITY(mat2x3(_GLF_IDENTITY(mat2(injectionSwitch.y, 1.0, 0.0, 0.0), (true ? mat2(injectionSwitch.y, 1.0, 0.0, 0.0) : _GLF_FUZZED(mat2(190.153, 60.09, 80.29, -3855.2640))))), transpose(transpose(mat2x3(_GLF_IDENTITY(mat2(injectionSwitch.y, 1.0, 0.0, 0.0), (true ? mat2(injectionSwitch.y, 1.0, 0.0, 0.0) : _GLF_FUZZED(mat2(190.153, 60.09, 80.29, -3855.2640)))))))) : _GLF_FUZZED(mat2x3(7.7, -651.755, -5839.5193, -152.315, -250.274, -8.6))))))), mat2(0.0, 0.0, 0.0, 0.0) + ((_GLF_IDENTITY(_GLF_IDENTITY(mat2(injectionSwitch.y, 1.0, 0.0, 0.0), (true ? mat2(injectionSwitch.y, 1.0, 0.0, 0.0) : _GLF_FUZZED(mat2(190.153, 60.09, 80.29, -3855.2640)))), mat2(_GLF_IDENTITY(mat2x3(_GLF_IDENTITY(mat2(injectionSwitch.y, 1.0, 0.0, 0.0), (true ? mat2(injectionSwitch.y, 1.0, 0.0, 0.0) : _GLF_FUZZED(mat2(190.153, 60.09, 80.29, -3855.2640))))), (true ? _GLF_IDENTITY(mat2x3(_GLF_IDENTITY(mat2(injectionSwitch.y, 1.0, 0.0, 0.0), (true ? mat2(injectionSwitch.y, 1.0, 0.0, 0.0) : _GLF_FUZZED(mat2(190.153, 60.09, 80.29, -3855.2640))))), transpose(transpose(mat2x3(_GLF_IDENTITY(mat2(injectionSwitch.y, 1.0, 0.0, 0.0), (true ? mat2(injectionSwitch.y, 1.0, 0.0, 0.0) : _GLF_FUZZED(mat2(190.153, 60.09, 80.29, -3855.2640)))))))) : _GLF_FUZZED(mat2x3(7.7, -651.755, -5839.5193, -152.315, -250.274, -8.6))))))))) / mat2(1.0, 1.0, 1.0, 1.0)))))), (_GLF_IDENTITY(float(_GLF_IDENTITY(mat2(injectionSwitch.y, 1.0, 0.0, 0.0), (_GLF_IDENTITY(mat2(injectionSwitch.y, 1.0, 0.0, 0.0), (true ? mat2(injectionSwitch.y, 1.0, 0.0, 0.0) : _GLF_FUZZED(mat2(190.153, 60.09, 80.29, -3855.2640))))) / mat2(1.0, 1.0, 1.0, 1.0))), clamp(float(_GLF_IDENTITY(mat2(injectionSwitch.y, 1.0, 0.0, 0.0), (_GLF_IDENTITY(mat2(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y, 1.0, 0.0, 0.0), (true ? mat2(injectionSwitch.y, 1.0, 0.0, 0.0) : _GLF_FUZZED(mat2(190.153, 60.09, 80.29, -3855.2640))))) / mat2(1.0, 1.0, 1.0, 1.0))), float(_GLF_IDENTITY(mat2(injectionSwitch.y, 1.0, 0.0, 0.0), (_GLF_IDENTITY(mat2(injectionSwitch.y, 1.0, 0.0, 0.0), (true ? mat2(injectionSwitch.y, 1.0, 0.0, 0.0) : _GLF_FUZZED(mat2(_GLF_IDENTITY(190.153, mix(float(190.153), float(_GLF_FUZZED(-19.91)), bool(false))), 60.09, 80.29, -3855.2640))))) / mat2(1.0, 1.0, 1.0, 1.0))), float(_GLF_IDENTITY(mat2(injectionSwitch.y, 1.0, 0.0, 0.0), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(mat2(injectionSwitch.y, 1.0, 0.0, 0.0), (true ? mat2(injectionSwitch.y, 1.0, 0.0, 0.0) : _GLF_FUZZED(mat2(190.153, 60.09, 80.29, -3855.2640)))), mat2(_GLF_IDENTITY(mat2x3(_GLF_IDENTITY(mat2(injectionSwitch.y, 1.0, 0.0, 0.0), (true ? mat2(injectionSwitch.y, 1.0, 0.0, 0.0) : _GLF_FUZZED(mat2(190.153, 60.09, 80.29, -3855.2640))))), (true ? _GLF_IDENTITY(mat2x3(_GLF_IDENTITY(mat2(injectionSwitch.y, 1.0, 0.0, 0.0), (true ? mat2(injectionSwitch.y, 1.0, 0.0, 0.0) : _GLF_FUZZED(mat2(190.153, 60.09, 80.29, -3855.2640))))), transpose(transpose(mat2x3(_GLF_IDENTITY(mat2(injectionSwitch.y, 1.0, 0.0, 0.0), (true ? mat2(injectionSwitch.y, 1.0, 0.0, 0.0) : _GLF_FUZZED(mat2(190.153, 60.09, 80.29, -3855.2640)))))))) : _GLF_FUZZED(mat2x3(7.7, -651.755, -5839.5193, -152.315, -250.274, -8.6))))))), mat2(0.0, 0.0, 0.0, 0.0) + ((_GLF_IDENTITY(_GLF_IDENTITY(mat2(injectionSwitch.y, 1.0, 0.0, 0.0), (true ? mat2(injectionSwitch.y, 1.0, 0.0, 0.0) : _GLF_FUZZED(mat2(190.153, 60.09, 80.29, -3855.2640)))), mat2(_GLF_IDENTITY(mat2x3(_GLF_IDENTITY(mat2(injectionSwitch.y, 1.0, 0.0, 0.0), (true ? mat2(injectionSwitch.y, 1.0, 0.0, 0.0) : _GLF_FUZZED(mat2(190.153, 60.09, 80.29, -3855.2640))))), (true ? _GLF_IDENTITY(mat2x3(_GLF_IDENTITY(mat2(injectionSwitch.y, 1.0, 0.0, 0.0), (true ? mat2(injectionSwitch.y, 1.0, 0.0, 0.0) : _GLF_FUZZED(mat2(190.153, 60.09, 80.29, -3855.2640))))), transpose(transpose(mat2x3(_GLF_IDENTITY(mat2(injectionSwitch.y, 1.0, 0.0, 0.0), (true ? mat2(injectionSwitch.y, 1.0, 0.0, 0.0) : _GLF_FUZZED(mat2(190.153, 60.09, 80.29, -3855.2640)))))))) : _GLF_FUZZED(mat2x3(7.7, -651.755, -5839.5193, -152.315, -250.274, -8.6))))))))) / mat2(1.0, 1.0, 1.0, 1.0)))))))), (_GLF_IDENTITY(float(_GLF_IDENTITY(mat2(injectionSwitch.y, 1.0, 0.0, 0.0), (_GLF_IDENTITY(mat2(injectionSwitch.y, 1.0, 0.0, 0.0), (true ? mat2(injectionSwitch.y, 1.0, 0.0, 0.0) : _GLF_FUZZED(mat2(190.153, 60.09, 80.29, -3855.2640))))) / mat2(1.0, 1.0, 1.0, 1.0))), clamp(float(_GLF_IDENTITY(mat2(injectionSwitch.y, 1.0, 0.0, 0.0), (_GLF_IDENTITY(mat2(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y, 1.0, 0.0, 0.0), (true ? mat2(injectionSwitch.y, 1.0, 0.0, 0.0) : _GLF_FUZZED(mat2(190.153, 60.09, 80.29, -3855.2640))))) / mat2(1.0, 1.0, 1.0, 1.0))), float(_GLF_IDENTITY(mat2(injectionSwitch.y, 1.0, 0.0, 0.0), (_GLF_IDENTITY(mat2(injectionSwitch.y, 1.0, 0.0, 0.0), (true ? mat2(injectionSwitch.y, 1.0, 0.0, 0.0) : _GLF_FUZZED(mat2(_GLF_IDENTITY(190.153, mix(float(190.153), float(_GLF_FUZZED(-19.91)), bool(false))), 60.09, 80.29, -3855.2640))))) / mat2(1.0, 1.0, 1.0, 1.0))), float(_GLF_IDENTITY(mat2(injectionSwitch.y, 1.0, 0.0, 0.0), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(mat2(injectionSwitch.y, 1.0, 0.0, 0.0), (true ? mat2(injectionSwitch.y, 1.0, 0.0, 0.0) : _GLF_FUZZED(mat2(190.153, 60.09, 80.29, -3855.2640)))), mat2(_GLF_IDENTITY(mat2x3(_GLF_IDENTITY(mat2(injectionSwitch.y, 1.0, 0.0, 0.0), (true ? mat2(injectionSwitch.y, 1.0, 0.0, 0.0) : _GLF_FUZZED(mat2(190.153, 60.09, 80.29, -3855.2640))))), (true ? _GLF_IDENTITY(mat2x3(_GLF_IDENTITY(mat2(injectionSwitch.y, 1.0, 0.0, 0.0), (true ? mat2(injectionSwitch.y, 1.0, 0.0, 0.0) : _GLF_FUZZED(mat2(190.153, 60.09, 80.29, -3855.2640))))), transpose(transpose(mat2x3(_GLF_IDENTITY(mat2(injectionSwitch.y, 1.0, 0.0, 0.0), (true ? mat2(injectionSwitch.y, 1.0, 0.0, 0.0) : _GLF_FUZZED(mat2(190.153, 60.09, 80.29, -3855.2640)))))))) : _GLF_FUZZED(mat2x3(7.7, -651.755, -5839.5193, -152.315, -250.274, -8.6))))))), mat2(0.0, 0.0, 0.0, 0.0) + ((_GLF_IDENTITY(_GLF_IDENTITY(mat2(injectionSwitch.y, 1.0, 0.0, 0.0), (true ? mat2(injectionSwitch.y, 1.0, 0.0, 0.0) : _GLF_FUZZED(mat2(190.153, 60.09, 80.29, -3855.2640)))), mat2(_GLF_IDENTITY(mat2x3(_GLF_IDENTITY(mat2(injectionSwitch.y, 1.0, 0.0, 0.0), (true ? mat2(injectionSwitch.y, 1.0, 0.0, 0.0) : _GLF_FUZZED(mat2(190.153, 60.09, 80.29, -3855.2640))))), (true ? _GLF_IDENTITY(mat2x3(_GLF_IDENTITY(mat2(injectionSwitch.y, 1.0, 0.0, 0.0), (true ? mat2(injectionSwitch.y, 1.0, 0.0, 0.0) : _GLF_FUZZED(mat2(190.153, 60.09, 80.29, -3855.2640))))), transpose(transpose(mat2x3(_GLF_IDENTITY(mat2(injectionSwitch.y, 1.0, 0.0, 0.0), (true ? mat2(injectionSwitch.y, 1.0, 0.0, 0.0) : _GLF_FUZZED(mat2(190.153, 60.09, 80.29, -3855.2640)))))))) : _GLF_FUZZED(mat2x3(7.7, -651.755, -5839.5193, -152.315, -250.274, -8.6))))))))) / mat2(1.0, 1.0, 1.0, 1.0))))))))))))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), ! (_GLF_IDENTITY(! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), bool(_GLF_IDENTITY(bool(! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))), (bool(! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))) || false))))))))
      {
       if(_GLF_WRAPPED_IF_FALSE(false))
        {
        }
       else
        {
         if(_GLF_DEAD(false))
          return;
        }
       if(_GLF_DEAD(false))
        {
         for(int _injected_loop_counter = (0 >> _GLF_IDENTITY(int(8), _GLF_IDENTITY(int(8), max(int(8), int(8))))); _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
          {
           barrier();
          }
        }
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     do
      {
       if(_GLF_DEAD(false))
        break;
       if(_GLF_DEAD(false))
        {
         if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec4(false, _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)))) && true), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec4(false, _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec2(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), false)))) && true), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(bool(bvec2(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec4(false, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)))) && true), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)))), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec2(_GLF_FALSE(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, false || (false))) && true), (injectionSwitch.x > injectionSwitch.y)), false)))) && true)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), (injectionSwitch.x > injectionSwitch.y))), false)), ! (_GLF_IDENTITY(! (bool(bvec2(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec4(false, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)))) && true), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)))), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec2(_GLF_FALSE(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, false || (false))) && true), (injectionSwitch.x > injectionSwitch.y)), false)))) && true)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), (injectionSwitch.x > injectionSwitch.y))), false))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(! (bool(bvec2(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec4(false, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)))) && true), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)))), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec2(_GLF_FALSE(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, false || (false))) && true), (injectionSwitch.x > injectionSwitch.y)), false)))) && true)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), (injectionSwitch.x > injectionSwitch.y))), false))), true, true), bvec3(bvec4(bvec3(! (bool(bvec2(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec4(false, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)))) && true), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)))), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec2(_GLF_FALSE(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, false || (false))) && true), (injectionSwitch.x > injectionSwitch.y)), false)))) && true)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), (injectionSwitch.x > injectionSwitch.y))), false))), true, true), false)))), (bool(_GLF_IDENTITY(bvec3(! (bool(bvec2(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec4(false, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)))) && true), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)))), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec2(_GLF_FALSE(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, false || (false))) && true), (injectionSwitch.x > injectionSwitch.y)), false)))) && true)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), (injectionSwitch.x > injectionSwitch.y))), false))), true, true), bvec3(bvec4(bvec3(! (bool(bvec2(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec4(false, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)))) && true), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)))), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec2(_GLF_FALSE(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, false || (false))) && true), (injectionSwitch.x > injectionSwitch.y)), false)))) && true)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), (injectionSwitch.x > injectionSwitch.y))), false))), true, true), false))))) || false))))))))
          return;
         barrier();
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            {
             if(_GLF_WRAPPED_IF_TRUE(true))
              {
               barrier();
              }
             else
              {
              }
            }
           barrier();
           if(_GLF_WRAPPED_IF_TRUE(true))
            {
             if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)).x > injectionSwitch.y))))
              {
               for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != int(_GLF_ONE(1.0, injectionSwitch.y))); _injected_loop_counter ++)
                {
                 return;
                }
              }
            }
           else
            {
            }
          }
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          break;
        }
       if(_GLF_DEAD(false))
        break;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(947.613, -1115.8747)))).y))))
        barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, _GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(_GLF_IDENTITY(vec2((injectionSwitch)[0], _GLF_FUZZED(1238.8239)), max(vec2((injectionSwitch)[0], _GLF_FUZZED(1238.8239)), vec2((injectionSwitch)[0], _GLF_FUZZED(1238.8239)))), vec2(_GLF_FUZZED(365.541), (injectionSwitch)[1]), _GLF_IDENTITY(bvec2(false, true), bvec2(bvec3(bvec2(false, true), false))))).x, min(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x)))) > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).y)), true, true)))))
        {
         do
          {
           if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)), _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)))).y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)), _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(5.1)), vec2(_GLF_FUZZED(-9120.7867), (injectionSwitch)[1]), bvec2(false, true))).y))))), bool(bvec3(! (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, 0.0 + (injectionSwitch.y)), injectionSwitch.y)), injectionSwitch.y))))), true, false)))))))
            barrier();
          }
         while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
         if(_GLF_DEAD(false))
          {
           do
            {
             return;
            }
           while(_GLF_WRAPPED_LOOP(false));
          }
         return;
         if(_GLF_DEAD(false))
          barrier();
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_WRAPPED_IF_TRUE(true))
          {
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, _GLF_IDENTITY(true && (false), ! (! (_GLF_IDENTITY(true, true && (true)) && (false))))), false))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(6.7)), vec2(_GLF_FUZZED(-0.5), (injectionSwitch)[1]), bvec2(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))).y))))
              barrier();
             do
              {
               barrier();
              }
             while(_GLF_WRAPPED_LOOP(false));
            }
          }
         else
          {
          }
         break;
        }
      }
     while(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, 1.0 * (_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(5331.7034)), float(injectionSwitch.y), bool(true)))))))), ! (! (_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, 1.0 * (_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(5331.7034)), float(injectionSwitch.y), bool(true)))))))))))) && _GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, ! (! (true)))))))))));
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      continue;
    }
   else
    {
    }
  }
 while(_GLF_WRAPPED_LOOP(false));
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec4(false, true, true, true)), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(bvec4(false, true, true, true)), (bool(bvec4(false, true, true, true))) && true)), bool(bool(bool(_GLF_IDENTITY(bool(bvec4(false, true, true, true)), (bool(bvec4(false, true, true, true))) && true))))))), (bool(bvec4(false, true, true, true))) || false)), ! (! (false)))))
  return;
 uint subgroup_size = gl_SubgroupSize;
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), (_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, (true) || false))) || false))
  {
   GLF_merged4_0_1_13_1_1_17_2_1_11_3_1_14num_workgroupsubgroup_local_idvirtual_gidworkgroup_base.y = subgroup_local_id;
  }
 else
  {
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
    }
   else
    {
     barrier();
    }
  }
 if(_GLF_DEAD(false))
  barrier();
 uint num_workgroup = gl_NumWorkGroups.x;
 GLF_merged4_0_1_13_1_1_17_2_1_11_3_1_14num_workgroupsubgroup_local_idvirtual_gidworkgroup_base.x = num_workgroup;
 if(_GLF_DEAD(false))
  {
   do
    {
     do
      {
       return;
      }
     while(_GLF_WRAPPED_LOOP(_GLF_FALSE(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, bool(bool(false)))), ! (! (! (_GLF_IDENTITY(false, bool(bool(false))))))))), (injectionSwitch.x > injectionSwitch.y))));
    }
   while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(2.1)), vec2(_GLF_FUZZED((-4.6 * 428.490)), _GLF_IDENTITY((injectionSwitch)[1], ((injectionSwitch)[1]) / 1.0)), bvec2(false, true))).x > injectionSwitch.y))))))
    barrier();
  }
 uint workgroup_size = gl_WorkGroupSize.x;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
      }
     else
      {
       return;
      }
    }
   barrier();
  }
 if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, (false) || false))), (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-2.7)), vec2(_GLF_FUZZED(4.6), _GLF_IDENTITY((injectionSwitch), mix(vec2(((injectionSwitch))[0], _GLF_FUZZED(float(9922u))), vec2(_GLF_FUZZED((- 7846.3606)), ((injectionSwitch))[1]), bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)))[1]), bvec2(false, true))), injectionSwitch)).y))) && true)))
  {
  }
 else
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 uint workgroup_id = gl_WorkGroupID.x;
 do
  {
   for(int _injected_loop_counter = _GLF_IDENTITY((_GLF_IDENTITY(-56065, clamp(-56065, -56065, -56065)) & (0 << _GLF_IDENTITY(int(0), int(_GLF_IDENTITY(0, (_GLF_IDENTITY(0, (0) | (_GLF_IDENTITY(0, (0) / 1)))) - _GLF_IDENTITY(0, min(0, 0))))))), int(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (_GLF_IDENTITY((_GLF_IDENTITY(-56065, clamp(-56065, -56065, -56065)) & (0 << _GLF_IDENTITY(int(0), int(_GLF_IDENTITY(0, _GLF_IDENTITY((_GLF_IDENTITY(0, (0) | (_GLF_IDENTITY(0, (0) / 1)))), ~ (~ ((_GLF_IDENTITY(0, (0) | (_GLF_IDENTITY(0, (0) / 1))))))) - 0))))), max(_GLF_IDENTITY((_GLF_IDENTITY(-56065, clamp(-56065, -56065, -56065)) & (0 << _GLF_IDENTITY(int(0), int(_GLF_IDENTITY(0, _GLF_IDENTITY((_GLF_IDENTITY(0, (0) | (_GLF_IDENTITY(0, (0) / 1)))), ~ (~ ((_GLF_IDENTITY(0, (0) | (_GLF_IDENTITY(0, (0) / 1))))))) - 0))))), 1 * ((_GLF_IDENTITY(-56065, clamp(-56065, -56065, -56065)) & (0 << _GLF_IDENTITY(int(0), int(_GLF_IDENTITY(0, _GLF_IDENTITY((_GLF_IDENTITY(0, (0) | (_GLF_IDENTITY(0, (0) / 1)))), ~ (~ ((_GLF_IDENTITY(0, (0) | (_GLF_IDENTITY(0, (0) / 1))))))) - 0))))))), _GLF_IDENTITY((_GLF_IDENTITY(-56065, clamp(-56065, -56065, -56065)) & (0 << _GLF_IDENTITY(int(0), int(_GLF_IDENTITY(0, _GLF_IDENTITY((_GLF_IDENTITY(0, (0) | (_GLF_IDENTITY(0, (0) / 1)))), ~ (~ ((_GLF_IDENTITY(0, (0) | (_GLF_IDENTITY(0, (0) / 1))))))) - 0))))), int(int((_GLF_IDENTITY(-56065, clamp(-56065, -56065, -56065)) & (0 << _GLF_IDENTITY(int(0), int(_GLF_IDENTITY(0, _GLF_IDENTITY((_GLF_IDENTITY(0, (0) | (_GLF_IDENTITY(0, (0) / 1)))), ~ (~ ((_GLF_IDENTITY(0, (0) | (_GLF_IDENTITY(0, (0) / 1))))))) - 0)))))))))))); _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         do
          {
           barrier();
          }
         while(_GLF_WRAPPED_LOOP(false));
        }
       if(_GLF_WRAPPED_IF_TRUE(true))
        {
         barrier();
        }
       else
        {
        }
      }
    }
  }
 while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
 uint workgroup_base = workgroup_size * workgroup_id;
 if(_GLF_WRAPPED_IF_FALSE(false))
  {
  }
 else
  {
   for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > (_GLF_IDENTITY(-38956 & 0, clamp(_GLF_IDENTITY(-38956 & 0, 0 ^ (-38956 & 0)), _GLF_IDENTITY(-38956 & 0, clamp(-38956 & 0, -38956 & 0, -38956 & 0)), -38956 & 0)))); _injected_loop_counter --)
    {
     do
      {
       do
        {
         GLF_merged4_0_1_13_1_1_17_2_1_11_3_1_14num_workgroupsubgroup_local_idvirtual_gidworkgroup_base.w = workgroup_base;
        }
       while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, (false) || false)));
      }
     while(_GLF_WRAPPED_LOOP(false));
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
      {
       if(_GLF_WRAPPED_IF_FALSE(false))
        {
        }
       else
        {
         barrier();
        }
      }
    }
   else
    {
    }
  }
 do
  {
   for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > int(_GLF_ZERO(0.0, injectionSwitch.x))); _injected_loop_counter --)
    {
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED((-8726.7371 * -9.2))), bool(_GLF_FALSE(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(bvec2(! (false), false))))), (injectionSwitch.x > injectionSwitch.y))))), injectionSwitch.y))), ! _GLF_IDENTITY((_GLF_IDENTITY(! ((injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)), max(_GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED((-8726.7371 * -9.2))), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), injectionSwitch.y)))), false || (! (_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED((-8726.7371 * -9.2))), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), injectionSwitch.y))), _GLF_IDENTITY(bool(bvec2((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED((-8726.7371 * -9.2))), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), injectionSwitch.y))), false)), bool(bvec3(_GLF_IDENTITY(bool(bvec2((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED((-8726.7371 * -9.2))), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), injectionSwitch.y))), false)), (bool(bvec2((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED((-8726.7371 * -9.2))), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), injectionSwitch.y))), false))) && true), false, false)))))))), ((_GLF_IDENTITY(! ((injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)), max(_GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED((-8726.7371 * -9.2))), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), injectionSwitch.y)))), false || (! (_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED((-8726.7371 * -9.2))), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), injectionSwitch.y))), _GLF_IDENTITY(bool(bvec2((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED((-8726.7371 * -9.2))), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), injectionSwitch.y))), false)), bool(bvec3(_GLF_IDENTITY(bool(bvec2((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED((-8726.7371 * -9.2))), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), injectionSwitch.y))), false)), (bool(bvec2((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED((-8726.7371 * -9.2))), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), injectionSwitch.y))), false))) && true), false, false))))))))) && true))), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
    break;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    continue;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
 if(_GLF_DEAD(false))
  {
   for(int _injected_loop_counter = ((1 << _GLF_IDENTITY(int(1), int(1))) >> _GLF_IDENTITY(int(1), _GLF_IDENTITY(int(1), 0 | (int(1))))); _GLF_WRAPPED_LOOP(_injected_loop_counter != (1 ^ 1)); _injected_loop_counter --)
    {
     if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
      {
       return;
      }
     else
      {
      }
    }
  }
 uint virtual_gid = GLF_merged4_0_1_13_1_1_17_2_1_11_3_1_14num_workgroupsubgroup_local_idvirtual_gidworkgroup_base.w + _GLF_IDENTITY(subgroup_id, (subgroup_id) + 0u) * _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, (subgroup_size) | (subgroup_size))) ^ 0u), max(subgroup_size, subgroup_size)), _GLF_IDENTITY((_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(0u ^ (_GLF_IDENTITY(subgroup_size, (subgroup_size) / 1u)), uint(uint(0u ^ (_GLF_IDENTITY(subgroup_size, (subgroup_size) / 1u))))))) << _GLF_IDENTITY(0u, ~ _GLF_IDENTITY((~ _GLF_IDENTITY((0u), 0u | ((0u)))), ((~ _GLF_IDENTITY((0u), 0u | ((0u))))) | 0u)), ((_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(0u ^ (_GLF_IDENTITY(subgroup_size, (subgroup_size) / 1u)), uint(uint(0u ^ (_GLF_IDENTITY(subgroup_size, (subgroup_size) / 1u))))))) << _GLF_IDENTITY(0u, ~ _GLF_IDENTITY((~ _GLF_IDENTITY((0u), 0u | ((0u)))), ((~ _GLF_IDENTITY((0u), 0u | ((0u))))) | 0u))) >> 0u)) + GLF_merged4_0_1_13_1_1_17_2_1_11_3_1_14num_workgroupsubgroup_local_idvirtual_gidworkgroup_base.y;
 if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
  {
   do
    {
     for(int _injected_loop_counter = ((1 << _GLF_IDENTITY(int(2), int(2))) >> _GLF_IDENTITY(int(2), int(2))); _GLF_WRAPPED_LOOP(_injected_loop_counter > int(_GLF_ZERO(0.0, injectionSwitch.x))); _injected_loop_counter --)
      {
       GLF_merged4_0_1_13_1_1_17_2_1_11_3_1_14num_workgroupsubgroup_local_idvirtual_gidworkgroup_base.z = virtual_gid;
      }
    }
   while(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(false), bool(_GLF_IDENTITY(bvec3(_GLF_WRAPPED_LOOP(false), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec3(bvec3(bvec3(_GLF_WRAPPED_LOOP(false), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))));
  }
 else
  {
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   do
    {
     do
      {
       return;
      }
     while(_GLF_WRAPPED_LOOP(false));
    }
   while(_GLF_WRAPPED_LOOP(false));
  }
 uint next_virtual_gid = GLF_merged4_0_1_13_1_1_17_2_1_11_3_1_14num_workgroupsubgroup_local_idvirtual_gidworkgroup_base.w + _GLF_IDENTITY(subgroup_id, (subgroup_id) - 0u) * subgroup_size + ((_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged4_0_1_13_1_1_17_2_1_11_3_1_14num_workgroupsubgroup_local_idvirtual_gidworkgroup_base, _GLF_IDENTITY(uvec4(0u, _GLF_IDENTITY(0u, (0u) << 0u), 0u, 0u) ^ (GLF_merged4_0_1_13_1_1_17_2_1_11_3_1_14num_workgroupsubgroup_local_idvirtual_gidworkgroup_base), (true ? uvec4(_GLF_IDENTITY(_GLF_IDENTITY(0u, (0u) + 0u), (0u) | 0u), 0u, 0u, 0u) ^ (GLF_merged4_0_1_13_1_1_17_2_1_11_3_1_14num_workgroupsubgroup_local_idvirtual_gidworkgroup_base) : _GLF_FUZZED(GLF_merged4_0_1_13_1_1_17_2_1_11_3_1_14num_workgroupsubgroup_local_idvirtual_gidworkgroup_base)))).y + 1, min(_GLF_IDENTITY(GLF_merged4_0_1_13_1_1_17_2_1_11_3_1_14num_workgroupsubgroup_local_idvirtual_gidworkgroup_base.y + _GLF_IDENTITY(1, max(_GLF_IDENTITY(1, (1) / 1), 1)), min(_GLF_IDENTITY(GLF_merged4_0_1_13_1_1_17_2_1_11_3_1_14num_workgroupsubgroup_local_idvirtual_gidworkgroup_base, uvec4(GLF_merged4_0_1_13_1_1_17_2_1_11_3_1_14num_workgroupsubgroup_local_idvirtual_gidworkgroup_base[0], GLF_merged4_0_1_13_1_1_17_2_1_11_3_1_14num_workgroupsubgroup_local_idvirtual_gidworkgroup_base[1], GLF_merged4_0_1_13_1_1_17_2_1_11_3_1_14num_workgroupsubgroup_local_idvirtual_gidworkgroup_base[2], GLF_merged4_0_1_13_1_1_17_2_1_11_3_1_14num_workgroupsubgroup_local_idvirtual_gidworkgroup_base[3])).y + _GLF_IDENTITY(1, int(ivec4(1, 0, _GLF_IDENTITY(1, (1) >> 0), ((1 << _GLF_IDENTITY(int(3), int(3))) >> _GLF_IDENTITY(int(3), int(3)))))), _GLF_IDENTITY(_GLF_IDENTITY(GLF_merged4_0_1_13_1_1_17_2_1_11_3_1_14num_workgroupsubgroup_local_idvirtual_gidworkgroup_base.y + 1, min(GLF_merged4_0_1_13_1_1_17_2_1_11_3_1_14num_workgroupsubgroup_local_idvirtual_gidworkgroup_base.y + 1, GLF_merged4_0_1_13_1_1_17_2_1_11_3_1_14num_workgroupsubgroup_local_idvirtual_gidworkgroup_base.y + 1)), (_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged4_0_1_13_1_1_17_2_1_11_3_1_14num_workgroupsubgroup_local_idvirtual_gidworkgroup_base.y, 0u | (_GLF_IDENTITY(GLF_merged4_0_1_13_1_1_17_2_1_11_3_1_14num_workgroupsubgroup_local_idvirtual_gidworkgroup_base, _GLF_IDENTITY(~ (~ (GLF_merged4_0_1_13_1_1_17_2_1_11_3_1_14num_workgroupsubgroup_local_idvirtual_gidworkgroup_base)), (~ (~ (GLF_merged4_0_1_13_1_1_17_2_1_11_3_1_14num_workgroupsubgroup_local_idvirtual_gidworkgroup_base))) / uvec4(1u, 1u, 1u, 1u))).y)) + _GLF_IDENTITY(1, 0 | (1)), (true ? _GLF_IDENTITY(_GLF_IDENTITY(GLF_merged4_0_1_13_1_1_17_2_1_11_3_1_14num_workgroupsubgroup_local_idvirtual_gidworkgroup_base.y, 0u | (_GLF_IDENTITY(GLF_merged4_0_1_13_1_1_17_2_1_11_3_1_14num_workgroupsubgroup_local_idvirtual_gidworkgroup_base, ~ (~ (GLF_merged4_0_1_13_1_1_17_2_1_11_3_1_14num_workgroupsubgroup_local_idvirtual_gidworkgroup_base))).y)) + 1, (_GLF_IDENTITY(GLF_merged4_0_1_13_1_1_17_2_1_11_3_1_14num_workgroupsubgroup_local_idvirtual_gidworkgroup_base.y, 0u | (_GLF_IDENTITY(GLF_merged4_0_1_13_1_1_17_2_1_11_3_1_14num_workgroupsubgroup_local_idvirtual_gidworkgroup_base, ~ (~ (GLF_merged4_0_1_13_1_1_17_2_1_11_3_1_14num_workgroupsubgroup_local_idvirtual_gidworkgroup_base))).y)) + 1) / 1u) : _GLF_FUZZED(subgroup_size)))) + 0u))), GLF_merged4_0_1_13_1_1_17_2_1_11_3_1_14num_workgroupsubgroup_local_idvirtual_gidworkgroup_base.y + 1))) % subgroup_size);
 if(_GLF_WRAPPED_IF_TRUE(true))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, true && (false)), (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_WRAPPED_IF_TRUE(true))
      {
       barrier();
      }
     else
      {
      }
    }
  }
 else
  {
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   do
    {
     barrier();
    }
   while(_GLF_WRAPPED_LOOP(false));
  }
 uint read_1 = atomicLoad(buf[_GLF_IDENTITY(GLF_merged4_0_1_13_1_1_17_2_1_11_3_1_14num_workgroupsubgroup_local_idvirtual_gidworkgroup_base, (false ? _GLF_FUZZED(GLF_merged4_0_1_13_1_1_17_2_1_11_3_1_14num_workgroupsubgroup_local_idvirtual_gidworkgroup_base) : _GLF_IDENTITY(GLF_merged4_0_1_13_1_1_17_2_1_11_3_1_14num_workgroupsubgroup_local_idvirtual_gidworkgroup_base, (GLF_merged4_0_1_13_1_1_17_2_1_11_3_1_14num_workgroupsubgroup_local_idvirtual_gidworkgroup_base) - uvec4(0u, 0u, 0u, 0u)))).z], _GLF_IDENTITY(4, (_GLF_IDENTITY(4, _GLF_IDENTITY((_GLF_IDENTITY(4, int(int(4)))) | (4), _GLF_IDENTITY(int(ivec3((4) | (4), ((1 << _GLF_IDENTITY(int(0), int(0))) >> _GLF_IDENTITY(int(0), int(0))), 1)), ~ (_GLF_IDENTITY(~ (int(ivec3((4) | (4), ((1 << _GLF_IDENTITY(int(0), int(0))) >> _GLF_IDENTITY(int(0), int(0))), 1))), int(int(~ (int(ivec3((4) | (4), ((1 << _GLF_IDENTITY(int(0), int(0))) >> _GLF_IDENTITY(int(0), int(0))), 1))))))))))) + _GLF_IDENTITY(0, (0) | (0))), 64, 0);
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(_GLF_IDENTITY(mat2x3(injectionSwitch.x, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 1.0, abs(1.0), _GLF_ONE(1.0, injectionSwitch.y)), (mat2x3(injectionSwitch.x, _GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)))).y), 0.0, 1.0, abs(1.0), _GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, vec2(mat3(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), length(vec3(0.0, 0.0, 0.0)), 1.0, 0.0, 0.0, 1.0, 1.0, 1.0))).y))) + mat2x3(0.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0, 0.0, 0.0, 0.0))), min(float(_GLF_IDENTITY(mat2x3(injectionSwitch.x, _GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), clamp(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), min(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y))), _GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), (true ? _GLF_ONE(1.0, injectionSwitch.y) : _GLF_FUZZED(-960.081))), _GLF_ONE(1.0, injectionSwitch.y))), 0.0, 1.0, abs(1.0), _GLF_ONE(1.0, injectionSwitch.y)), (mat2x3(injectionSwitch.x, _GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))), _GLF_IDENTITY(0.0, min(0.0, 0.0)), 1.0, abs(1.0), _GLF_ONE(1.0, injectionSwitch.y))) + mat2x3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0))), float(_GLF_IDENTITY(mat2x3(injectionSwitch.x, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 1.0, abs(1.0), _GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat3(injectionSwitch, 0.0, 0.0, 0.0, log(1.0), 0.0, _GLF_ZERO(0.0, injectionSwitch.x), _GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0)), dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0)))), (mat3(injectionSwitch, 0.0, 0.0, 0.0, log(1.0), 0.0, _GLF_ZERO(0.0, injectionSwitch.x), _GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0)), dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0))))) - mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)))).y)), (mat2x3(injectionSwitch.x, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 1.0, abs(1.0), _GLF_ONE(1.0, injectionSwitch.y))) + mat2x3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0)))))) > injectionSwitch.y)), true && (_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(mat3x2(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-604.083)), vec2(_GLF_FUZZED(-9.3), (injectionSwitch)[1]), bvec2(_GLF_IDENTITY(false, false || (false)), true))), _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-2.5))), 0.0, 0.0, sqrt(1.0)))).x, length(vec4(0.0, 0.0, 0.0, 0.0)) + (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(mat3x2(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-604.083)), vec2(_GLF_FUZZED(-9.3), (injectionSwitch)[1]), bvec2(_GLF_IDENTITY(false, false || (false)), true))), _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-2.5))), 0.0, 0.0, sqrt(1.0)))).x, clamp(_GLF_IDENTITY(injectionSwitch, vec2(mat3x2(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-604.083)), vec2(_GLF_FUZZED(-9.3), (injectionSwitch)[1]), bvec2(_GLF_IDENTITY(false, false || (false)), true))), _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-2.5))), 0.0, 0.0, sqrt(1.0)))).x, _GLF_IDENTITY(injectionSwitch, vec2(mat3x2(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-604.083)), vec2(_GLF_FUZZED(-9.3), (injectionSwitch)[1]), bvec2(_GLF_IDENTITY(false, false || (false)), true))), _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-2.5))), 0.0, 0.0, sqrt(1.0)))).x, _GLF_IDENTITY(injectionSwitch, vec2(mat3x2(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-604.083)), vec2(_GLF_FUZZED(-9.3), (injectionSwitch)[1]), bvec2(_GLF_IDENTITY(false, false || (false)), true))), _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-2.5))), 0.0, 0.0, sqrt(1.0)))).x)))) > injectionSwitch.y))))))
  barrier();
 if(_GLF_WRAPPED_IF_TRUE(true))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     return;
    }
  }
 else
  {
  }
 atomicStore(buf[next_virtual_gid], uint(_GLF_IDENTITY(_GLF_IDENTITY(read_1, (_GLF_IDENTITY(read_1, _GLF_IDENTITY(~ (_GLF_IDENTITY(~ (read_1), (~ (read_1)) | 0u)), max(~ (_GLF_IDENTITY(~ (read_1), (~ (read_1)) | 0u)), _GLF_IDENTITY(~ (_GLF_IDENTITY(~ (read_1), (~ (read_1)) | 0u)), ~ (~ (~ (_GLF_IDENTITY(~ (read_1), (~ (read_1)) | 0u))))))))) | _GLF_IDENTITY(0u, clamp(0u, _GLF_IDENTITY(0u, clamp(0u, 0u, 0u)), 0u))), (_GLF_IDENTITY(false ? _GLF_FUZZED(num_workgroup) : _GLF_IDENTITY(read_1, (_GLF_IDENTITY(read_1, min(read_1, read_1))) + (_GLF_IDENTITY(0u, (false ? _GLF_FUZZED(read_1) : 0u)) ^ 0u)), clamp(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))) ? _GLF_FUZZED(num_workgroup) : _GLF_IDENTITY(read_1, _GLF_IDENTITY((read_1) + (0u ^ 0u), ((read_1) + (_GLF_IDENTITY(0u ^ 0u, max(0u ^ 0u, 0u ^ 0u)))) / 1u)), (_GLF_IDENTITY(false ? _GLF_IDENTITY(_GLF_FUZZED(num_workgroup), uint(uint(_GLF_FUZZED(num_workgroup)))) : _GLF_IDENTITY(read_1, (_GLF_IDENTITY(_GLF_IDENTITY(read_1, (read_1) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x))), uint(uint(_GLF_IDENTITY(read_1, (read_1) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x))))))) + (_GLF_IDENTITY(_GLF_IDENTITY(0u ^ 0u, max(0u ^ 0u, 0u ^ 0u)), (_GLF_IDENTITY(0u ^ 0u, _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(0u ^ 0u, clamp(_GLF_IDENTITY(0u ^ 0u, min(0u ^ 0u, 0u ^ 0u)), 0u ^ 0u, 0u ^ 0u))) << 0u, max(_GLF_IDENTITY((_GLF_IDENTITY(0u ^ 0u, clamp(_GLF_IDENTITY(0u ^ 0u, min(0u ^ 0u, 0u ^ 0u)), 0u ^ 0u, 0u ^ 0u))) << 0u, ((_GLF_IDENTITY(0u ^ 0u, clamp(_GLF_IDENTITY(0u ^ 0u, min(0u ^ 0u, 0u ^ 0u)), 0u ^ 0u, 0u ^ 0u))) << 0u) * 1u), (_GLF_IDENTITY(0u ^ 0u, clamp(_GLF_IDENTITY(0u ^ 0u, min(0u ^ 0u, 0u ^ 0u)), 0u ^ 0u, 0u ^ 0u))) << 0u)), (_GLF_IDENTITY((_GLF_IDENTITY(0u ^ 0u, clamp(_GLF_IDENTITY(0u ^ 0u, min(0u ^ 0u, 0u ^ 0u)), 0u ^ 0u, 0u ^ 0u))) << 0u, max(_GLF_IDENTITY((_GLF_IDENTITY(0u ^ 0u, clamp(_GLF_IDENTITY(0u ^ 0u, min(0u ^ 0u, 0u ^ 0u)), 0u ^ 0u, 0u ^ 0u))) << 0u, ((_GLF_IDENTITY(0u ^ 0u, clamp(_GLF_IDENTITY(0u ^ 0u, min(0u ^ 0u, 0u ^ 0u)), 0u ^ 0u, 0u ^ 0u))) << 0u) * 1u), (_GLF_IDENTITY(0u ^ 0u, clamp(_GLF_IDENTITY(0u ^ 0u, min(0u ^ 0u, 0u ^ 0u)), 0u ^ 0u, 0u ^ 0u))) << 0u))) ^ 0u))) + 0u))), (true ? false ? _GLF_IDENTITY(_GLF_FUZZED(num_workgroup), uint(uint(_GLF_FUZZED(num_workgroup)))) : _GLF_IDENTITY(read_1, (_GLF_IDENTITY(_GLF_IDENTITY(read_1, (read_1) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x))), uint(uint(_GLF_IDENTITY(read_1, (read_1) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x))))))) + (_GLF_IDENTITY(_GLF_IDENTITY(0u ^ 0u, max(0u ^ 0u, 0u ^ 0u)), (_GLF_IDENTITY(0u ^ 0u, _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(0u ^ 0u, clamp(_GLF_IDENTITY(0u ^ 0u, min(0u ^ 0u, 0u ^ 0u)), 0u ^ 0u, 0u ^ 0u))) << 0u, max(_GLF_IDENTITY((_GLF_IDENTITY(0u ^ 0u, clamp(_GLF_IDENTITY(0u ^ 0u, min(0u ^ 0u, 0u ^ 0u)), 0u ^ 0u, 0u ^ 0u))) << 0u, ((_GLF_IDENTITY(0u ^ 0u, clamp(_GLF_IDENTITY(0u ^ 0u, min(0u ^ 0u, 0u ^ 0u)), 0u ^ 0u, 0u ^ 0u))) << 0u) * 1u), (_GLF_IDENTITY(0u ^ 0u, clamp(_GLF_IDENTITY(0u ^ 0u, min(0u ^ 0u, 0u ^ 0u)), 0u ^ 0u, 0u ^ 0u))) << 0u)), (_GLF_IDENTITY((_GLF_IDENTITY(0u ^ 0u, clamp(_GLF_IDENTITY(0u ^ 0u, min(0u ^ 0u, 0u ^ 0u)), 0u ^ 0u, 0u ^ 0u))) << 0u, max(_GLF_IDENTITY((_GLF_IDENTITY(0u ^ 0u, clamp(_GLF_IDENTITY(0u ^ 0u, min(0u ^ 0u, 0u ^ 0u)), 0u ^ 0u, 0u ^ 0u))) << 0u, ((_GLF_IDENTITY(0u ^ 0u, clamp(_GLF_IDENTITY(0u ^ 0u, min(0u ^ 0u, 0u ^ 0u)), 0u ^ 0u, 0u ^ 0u))) << 0u) * 1u), (_GLF_IDENTITY(0u ^ 0u, clamp(_GLF_IDENTITY(0u ^ 0u, min(0u ^ 0u, 0u ^ 0u)), 0u ^ 0u, 0u ^ 0u))) << 0u))) ^ 0u))) + 0u))) : _GLF_FUZZED(subgroup_id)))) + 0u), false ? _GLF_FUZZED(num_workgroup) : _GLF_IDENTITY(read_1, (read_1) + (0u ^ 0u)), false ? _GLF_FUZZED(num_workgroup) : _GLF_IDENTITY(read_1, _GLF_IDENTITY((read_1), ((read_1)) / 1u) + (_GLF_IDENTITY(0u ^ 0u, (0u ^ 0u) | (0u ^ 0u)))))))) + 1), 4, 64, _GLF_IDENTITY(4, (4) ^ 0));
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  return;
 do
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      break;
     return;
    }
  }
 while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(_GLF_IDENTITY(mat4x3(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)), 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y)), mat3(1.0) * (mat4x3(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)), 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y))))), clamp(vec2(_GLF_IDENTITY(mat4x3(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)), 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y)), mat3(1.0) * (mat4x3(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)), 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y))))), vec2(_GLF_IDENTITY(mat4x3(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)), 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y)), mat3(1.0) * (mat4x3(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)), 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y))))), vec2(_GLF_IDENTITY(mat4x3(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)), 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y)), mat3(1.0) * (mat4x3(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)), 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y)))))))).x > injectionSwitch.y))) || false)));
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true)))), false || (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(_GLF_IDENTITY(bvec3(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false, true), bvec3(bvec4(bvec3(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false, true), false))))))))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(3.0)), float(injectionSwitch.x), bool(true))) > injectionSwitch.y))))
    barrier();
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch)[1], float(mat2x3((injectionSwitch)[1], 0.0, 1.0, 0.0, 0.0, 0.0))), float(mat4((injectionSwitch)[1], _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0)))), vec2(_GLF_FUZZED(float(false)), _GLF_FUZZED(1.0)), bvec2(false, false))).x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   do
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
      barrier();
     return;
    }
   while(_GLF_WRAPPED_LOOP(false));
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
    }
   else
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       do
        {
         barrier();
        }
       while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
      }
    }
  }
 uint read_2 = atomicLoad(_GLF_IDENTITY(buf[_GLF_IDENTITY(GLF_merged4_0_1_13_1_1_17_2_1_11_3_1_14num_workgroupsubgroup_local_idvirtual_gidworkgroup_base.z, 0u ^ (_GLF_IDENTITY(GLF_merged4_0_1_13_1_1_17_2_1_11_3_1_14num_workgroupsubgroup_local_idvirtual_gidworkgroup_base.z, (false ? _GLF_FUZZED(workgroup_size) : _GLF_IDENTITY(GLF_merged4_0_1_13_1_1_17_2_1_11_3_1_14num_workgroupsubgroup_local_idvirtual_gidworkgroup_base.z, _GLF_IDENTITY(0u ^ (GLF_merged4_0_1_13_1_1_17_2_1_11_3_1_14num_workgroupsubgroup_local_idvirtual_gidworkgroup_base.z), (0u ^ (_GLF_IDENTITY(GLF_merged4_0_1_13_1_1_17_2_1_11_3_1_14num_workgroupsubgroup_local_idvirtual_gidworkgroup_base, (GLF_merged4_0_1_13_1_1_17_2_1_11_3_1_14num_workgroupsubgroup_local_idvirtual_gidworkgroup_base) | (GLF_merged4_0_1_13_1_1_17_2_1_11_3_1_14num_workgroupsubgroup_local_idvirtual_gidworkgroup_base)).z)) | (0u ^ (_GLF_IDENTITY(GLF_merged4_0_1_13_1_1_17_2_1_11_3_1_14num_workgroupsubgroup_local_idvirtual_gidworkgroup_base.z, ~ (_GLF_IDENTITY(~ (GLF_merged4_0_1_13_1_1_17_2_1_11_3_1_14num_workgroupsubgroup_local_idvirtual_gidworkgroup_base.z), (~ (GLF_merged4_0_1_13_1_1_17_2_1_11_3_1_14num_workgroupsubgroup_local_idvirtual_gidworkgroup_base.z)) | (~ (GLF_merged4_0_1_13_1_1_17_2_1_11_3_1_14num_workgroupsubgroup_local_idvirtual_gidworkgroup_base.z)))))))))))))], max(buf[_GLF_IDENTITY(GLF_merged4_0_1_13_1_1_17_2_1_11_3_1_14num_workgroupsubgroup_local_idvirtual_gidworkgroup_base.z, 0u ^ (_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged4_0_1_13_1_1_17_2_1_11_3_1_14num_workgroupsubgroup_local_idvirtual_gidworkgroup_base.z, (GLF_merged4_0_1_13_1_1_17_2_1_11_3_1_14num_workgroupsubgroup_local_idvirtual_gidworkgroup_base.z) | 0u), (false ? _GLF_FUZZED(workgroup_size) : _GLF_IDENTITY(GLF_merged4_0_1_13_1_1_17_2_1_11_3_1_14num_workgroupsubgroup_local_idvirtual_gidworkgroup_base.z, _GLF_IDENTITY(0u ^ (_GLF_IDENTITY(GLF_merged4_0_1_13_1_1_17_2_1_11_3_1_14num_workgroupsubgroup_local_idvirtual_gidworkgroup_base.z, (GLF_merged4_0_1_13_1_1_17_2_1_11_3_1_14num_workgroupsubgroup_local_idvirtual_gidworkgroup_base.z) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x)))), (0u ^ (GLF_merged4_0_1_13_1_1_17_2_1_11_3_1_14num_workgroupsubgroup_local_idvirtual_gidworkgroup_base.z)) | (0u ^ (_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged4_0_1_13_1_1_17_2_1_11_3_1_14num_workgroupsubgroup_local_idvirtual_gidworkgroup_base.z, uint(uvec4(GLF_merged4_0_1_13_1_1_17_2_1_11_3_1_14num_workgroupsubgroup_local_idvirtual_gidworkgroup_base.z, 0u, 0u, 1u))), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(GLF_merged4_0_1_13_1_1_17_2_1_11_3_1_14num_workgroupsubgroup_local_idvirtual_gidworkgroup_base.z, (GLF_merged4_0_1_13_1_1_17_2_1_11_3_1_14num_workgroupsubgroup_local_idvirtual_gidworkgroup_base.z) - 0u)), (~ (GLF_merged4_0_1_13_1_1_17_2_1_11_3_1_14num_workgroupsubgroup_local_idvirtual_gidworkgroup_base.z)) | (~ (GLF_merged4_0_1_13_1_1_17_2_1_11_3_1_14num_workgroupsubgroup_local_idvirtual_gidworkgroup_base.z)))))))))))))], buf[_GLF_IDENTITY(GLF_merged4_0_1_13_1_1_17_2_1_11_3_1_14num_workgroupsubgroup_local_idvirtual_gidworkgroup_base.z, 0u ^ (_GLF_IDENTITY(GLF_merged4_0_1_13_1_1_17_2_1_11_3_1_14num_workgroupsubgroup_local_idvirtual_gidworkgroup_base.z, (false ? _GLF_FUZZED(workgroup_size) : _GLF_IDENTITY(GLF_merged4_0_1_13_1_1_17_2_1_11_3_1_14num_workgroupsubgroup_local_idvirtual_gidworkgroup_base.z, _GLF_IDENTITY(0u ^ (GLF_merged4_0_1_13_1_1_17_2_1_11_3_1_14num_workgroupsubgroup_local_idvirtual_gidworkgroup_base.z), (0u ^ (GLF_merged4_0_1_13_1_1_17_2_1_11_3_1_14num_workgroupsubgroup_local_idvirtual_gidworkgroup_base.z)) | (0u ^ (_GLF_IDENTITY(GLF_merged4_0_1_13_1_1_17_2_1_11_3_1_14num_workgroupsubgroup_local_idvirtual_gidworkgroup_base.z, _GLF_IDENTITY(~ (_GLF_IDENTITY(~ (GLF_merged4_0_1_13_1_1_17_2_1_11_3_1_14num_workgroupsubgroup_local_idvirtual_gidworkgroup_base.z), (~ (GLF_merged4_0_1_13_1_1_17_2_1_11_3_1_14num_workgroupsubgroup_local_idvirtual_gidworkgroup_base.z)) | (~ (GLF_merged4_0_1_13_1_1_17_2_1_11_3_1_14num_workgroupsubgroup_local_idvirtual_gidworkgroup_base.z)))), (~ (_GLF_IDENTITY(_GLF_IDENTITY(~ (GLF_merged4_0_1_13_1_1_17_2_1_11_3_1_14num_workgroupsubgroup_local_idvirtual_gidworkgroup_base.z), (_GLF_IDENTITY(~ (GLF_merged4_0_1_13_1_1_17_2_1_11_3_1_14num_workgroupsubgroup_local_idvirtual_gidworkgroup_base.z), (~ (GLF_merged4_0_1_13_1_1_17_2_1_11_3_1_14num_workgroupsubgroup_local_idvirtual_gidworkgroup_base.z)) | (~ (GLF_merged4_0_1_13_1_1_17_2_1_11_3_1_14num_workgroupsubgroup_local_idvirtual_gidworkgroup_base.z)))) | 0u), (~ (GLF_merged4_0_1_13_1_1_17_2_1_11_3_1_14num_workgroupsubgroup_local_idvirtual_gidworkgroup_base.z)) | (~ (GLF_merged4_0_1_13_1_1_17_2_1_11_3_1_14num_workgroupsubgroup_local_idvirtual_gidworkgroup_base.z))))) * ((1u << _GLF_IDENTITY(uint(4u), uint(4u))) >> _GLF_IDENTITY(uint(4u), uint(4u)))))))))))))])), 4, 64, 0);
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_WRAPPED_IF_TRUE(true))
        {
         if(_GLF_DEAD(false))
          return;
        }
       else
        {
        }
       if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
        }
       else
        {
         barrier();
        }
      }
     return;
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - _GLF_IDENTITY(vec2(0.0, 0.0), clamp(vec2(0.0, 0.0), vec2(0.0, 0.0), vec2(0.0, 0.0)))).y))))
      {
       do
        {
         barrier();
        }
       while(_GLF_WRAPPED_LOOP(false));
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
    }
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     if(_GLF_DEAD(false))
      {
       for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > (_GLF_IDENTITY(1, clamp(1, _GLF_IDENTITY(1, (1) >> 0), 1)) ^ 1)); _injected_loop_counter --)
        {
         barrier();
        }
      }
     barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, true && (false))))), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, (false) || false), false, true), bvec3(_GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY(false, (false) || false), false, true)), bvec3(bvec3(bvec3(bvec3(_GLF_IDENTITY(false, (false) || false), false, true)))))))))))
      barrier();
     do
      {
       if(_GLF_DEAD(false))
        barrier();
      }
     while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(bool(false))))))))
      return;
    }
   else
    {
    }
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
    }
   else
    {
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
    }
   else
    {
     barrier();
    }
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 atomicStore(buf[next_virtual_gid], _GLF_IDENTITY(uint(read_1 + 1 == read_2) + 1, (_GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(read_1 + 1 == read_2, (read_1 + 1 == read_2) && true)), clamp(uint(_GLF_IDENTITY(_GLF_IDENTITY(read_1, (_GLF_IDENTITY(read_1, (read_1) - 0u)) << 0u) + 1 == read_2, true && (_GLF_IDENTITY(read_1, (_GLF_IDENTITY(read_1, (read_1) - 0u)) << 0u) + 1 == read_2))), _GLF_IDENTITY(uint(read_1 + 1 == read_2), (false ? _GLF_FUZZED(workgroup_base) : uint(read_1 + 1 == read_2))), _GLF_IDENTITY(uint(_GLF_IDENTITY(read_1 + 1, (true ? read_1 + 1 : _GLF_FUZZED(55409u))) == read_2), (_GLF_IDENTITY(uint(_GLF_IDENTITY(read_1, (read_1) ^ 0u) + _GLF_IDENTITY(1, (1) << 0) == _GLF_IDENTITY(read_2, 0u | (read_2))), (uint(_GLF_IDENTITY(read_1, (read_1) ^ 0u) + 1 == read_2)) | (_GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(read_1, (read_1) * ((uint(_GLF_ONE(1.0, injectionSwitch.y)) << _GLF_IDENTITY(uint(2u), uint(2u))) >> _GLF_IDENTITY(uint(2u), _GLF_IDENTITY(_GLF_IDENTITY(uint(2u), (uint(2u)) / 1u), ~ (~ (_GLF_IDENTITY(uint(2u), (uint(2u)) / 1u))))))), (read_1) ^ 0u), uint(_GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_IDENTITY(read_1, (read_1) * ((uint(_GLF_ONE(1.0, injectionSwitch.y)) << _GLF_IDENTITY(uint(2u), uint(2u))) >> _GLF_IDENTITY(uint(2u), _GLF_IDENTITY(_GLF_IDENTITY(uint(2u), (uint(2u)) / 1u), ~ (~ (_GLF_IDENTITY(uint(2u), (uint(2u)) / 1u))))))), (read_1) ^ 0u)), max(_GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_IDENTITY(read_1, (read_1) * ((uint(_GLF_ONE(1.0, injectionSwitch.y)) << _GLF_IDENTITY(uint(2u), uint(2u))) >> _GLF_IDENTITY(uint(2u), _GLF_IDENTITY(_GLF_IDENTITY(uint(2u), (uint(2u)) / 1u), ~ (~ (_GLF_IDENTITY(uint(2u), (uint(2u)) / 1u))))))), (read_1) ^ 0u)), clamp(uint(_GLF_IDENTITY(_GLF_IDENTITY(read_1, (read_1) * ((uint(_GLF_ONE(1.0, injectionSwitch.y)) << _GLF_IDENTITY(uint(2u), uint(2u))) >> _GLF_IDENTITY(uint(2u), _GLF_IDENTITY(_GLF_IDENTITY(uint(2u), (uint(2u)) / 1u), ~ (~ (_GLF_IDENTITY(uint(2u), (uint(2u)) / 1u))))))), (read_1) ^ 0u)), uint(_GLF_IDENTITY(_GLF_IDENTITY(read_1, (read_1) * ((uint(_GLF_ONE(1.0, injectionSwitch.y)) << _GLF_IDENTITY(uint(2u), uint(2u))) >> _GLF_IDENTITY(uint(2u), _GLF_IDENTITY(_GLF_IDENTITY(uint(2u), (uint(2u)) / 1u), ~ (~ (_GLF_IDENTITY(uint(2u), (uint(2u)) / 1u))))))), (read_1) ^ 0u)), uint(_GLF_IDENTITY(_GLF_IDENTITY(read_1, (read_1) * ((uint(_GLF_ONE(1.0, injectionSwitch.y)) << _GLF_IDENTITY(uint(2u), uint(2u))) >> _GLF_IDENTITY(uint(2u), _GLF_IDENTITY(_GLF_IDENTITY(uint(2u), (uint(2u)) / 1u), ~ (~ (_GLF_IDENTITY(uint(2u), (uint(2u)) / 1u))))))), (read_1) ^ 0u)))), uint(_GLF_IDENTITY(_GLF_IDENTITY(read_1, (read_1) * ((uint(_GLF_ONE(1.0, injectionSwitch.y)) << _GLF_IDENTITY(uint(2u), uint(2u))) >> _GLF_IDENTITY(uint(2u), _GLF_IDENTITY(_GLF_IDENTITY(uint(2u), (uint(2u)) / 1u), ~ (~ (_GLF_IDENTITY(uint(2u), (uint(2u)) / 1u))))))), (read_1) ^ 0u)))))) + 1 == read_2), min(uint(_GLF_IDENTITY(_GLF_IDENTITY(read_1, (read_1) ^ 0u), (_GLF_IDENTITY(read_1, (read_1) ^ 0u)) | (_GLF_IDENTITY(_GLF_IDENTITY(read_1, min(read_1, read_1)), (read_1) ^ 0u))) + _GLF_IDENTITY(1, (_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) | 0)) - 0)) | int(_GLF_ZERO(0.0, injectionSwitch.x))) == read_2), uint(_GLF_IDENTITY(read_1, (_GLF_IDENTITY(read_1, (read_1) / 1u)) ^ 0u) + 1 == read_2)))))) | (uint(_GLF_IDENTITY(read_1, min(read_1, read_1)) + 1 == read_2))))) + 1, (_GLF_IDENTITY(uint(read_1 + 1 == read_2), (uint(read_1 + 1 == read_2)) - 0u) + 1) << 0u)) / uint(_GLF_ONE(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, _GLF_IDENTITY(_GLF_IDENTITY((1.0) - 0.0, ((1.0) - _GLF_IDENTITY(0.0, max(0.0, 0.0))) / 1.0), min((1.0) - 0.0, (1.0) - 0.0)))) + _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(_GLF_IDENTITY(44.74, clamp(_GLF_IDENTITY(44.74, (true ? 44.74 : _GLF_FUZZED(-9769.2205))), 44.74, 44.74))) : 0.0))), _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(-3.7, 7.1)))).y))), 4, 64, _GLF_IDENTITY(4, int(ivec3(4, 0, 0))));
 for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
  {
   do
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, false)))))
      {
       if(_GLF_WRAPPED_IF_TRUE(true))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], (injectionSwitch[1]) / 1.0))).y))))
              return;
             if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > injectionSwitch.y))))
              barrier();
             if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, true && (true))))
              {
               return;
              }
             else
              {
              }
             if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)))))
              barrier();
            }
           barrier();
          }
        }
       else
        {
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          break;
         if(_GLF_WRAPPED_IF_FALSE(false))
          {
          }
         else
          {
           return;
          }
        }
       do
        {
         return;
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            return;
           barrier();
          }
        }
       while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, float(vec2(injectionSwitch.x, 1.0))) > _GLF_IDENTITY(injectionSwitch.y, float(mat3x2(injectionSwitch.y, 1.0, 1.0, 0.0, abs(0.0), 0.0)))))));
      }
    }
   while(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(false), ! (_GLF_IDENTITY(! (_GLF_WRAPPED_LOOP(false)), true && (_GLF_IDENTITY(! (_GLF_WRAPPED_LOOP(false)), ! (! (! (_GLF_WRAPPED_LOOP(false))))))))));
  }
}
