#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
  barrier();
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), false || (! ((injectionSwitch.x > injectionSwitch.y))))))), true && (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))
  barrier();
 uint subgroup_size = gl_SubgroupSize;
 uint subgroup_local_id = gl_SubgroupInvocationID;
 uint num_workgroup = _GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, ~ (~ (_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) ^ uvec3(0u, 0u, 0u))))), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) ^ uvec3(0u, 0u, 0u))), (_GLF_IDENTITY(~ (_GLF_IDENTITY(gl_NumWorkGroups, _GLF_IDENTITY(_GLF_IDENTITY((gl_NumWorkGroups), (_GLF_IDENTITY((gl_NumWorkGroups), (false ? _GLF_FUZZED(uvec3(68970u, 13300u, 97761u)) : (gl_NumWorkGroups)))) >> uvec3(0u, 0u, 0u)) ^ uvec3(_GLF_IDENTITY(0u, clamp(0u, 0u, 0u)), 0u, 0u), min((gl_NumWorkGroups) ^ _GLF_IDENTITY(uvec3(_GLF_IDENTITY(0u, clamp(0u, 0u, 0u)), 0u, _GLF_IDENTITY(0u, (false ? _GLF_FUZZED(subgroup_local_id) : 0u))), uvec3(0u, 0u, 0u) ^ (uvec3(_GLF_IDENTITY(0u, clamp(0u, 0u, 0u)), 0u, _GLF_IDENTITY(0u, (0u) >> 0u)))), (gl_NumWorkGroups) ^ uvec3(_GLF_IDENTITY(0u, clamp(0u, 0u, _GLF_IDENTITY(0u, min(0u, 0u)))), 0u, 0u))))), _GLF_IDENTITY((~ (_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) ^ uvec3(0u, 0u, 0u)))) ^ uvec3(0u, 0u, 0u), max(_GLF_IDENTITY((~ (_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) ^ uvec3(0u, 0u, 0u)))), (_GLF_IDENTITY((~ (_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) ^ uvec3(0u, 0u, 0u)))), uvec3(0u, 0u, 0u) ^ ((~ (_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) ^ uvec3(0u, 0u, 0u))))))) * (uvec3(1u, 1u, 1u) & uvec3(1u, 1u, 1u))) ^ uvec3(0u, 0u, 0u), (~ (_GLF_IDENTITY(gl_NumWorkGroups, _GLF_IDENTITY((gl_NumWorkGroups) ^ uvec3(0u, 0u, 0u), ((gl_NumWorkGroups) ^ uvec3(0u, 0u, 0u)) | (_GLF_IDENTITY((gl_NumWorkGroups) ^ uvec3(0u, 0u, 0u), ((gl_NumWorkGroups) ^ uvec3(0u, 0u, 0u)) / uvec3(1u, 1u, 1u))))))) ^ uvec3(0u, 0u, 0u))))) | (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(~ (_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) ^ uvec3(0u, 0u, 0u))), uvec3(0u, 0u, 0u) + (_GLF_IDENTITY(_GLF_IDENTITY(~ (_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) ^ uvec3(0u, 0u, 0u))), (false ? _GLF_FUZZED(uvec3(21646u, 27071u, 4800u)) : _GLF_IDENTITY(~ (_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) ^ uvec3(0u, 0u, 0u))), (false ? _GLF_FUZZED(uvec3(11760u, 59825u, 100792u)) : ~ (_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) ^ uvec3(0u, 0u, 0u))))))), min(~ (_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, ~ (~ (_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) ^ uvec3(0u, 0u, 0u))))), (gl_NumWorkGroups) ^ uvec3(0u, 0u, 0u))), ~ (_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) ^ uvec3(0u, 0u, 0u))))))), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY(~ (_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) ^ uvec3(0u, 0u, 0u))), uvec3(0u, 0u, 0u) + (_GLF_IDENTITY(_GLF_IDENTITY(~ (_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) ^ uvec3(0u, 0u, 0u))), (false ? _GLF_FUZZED(uvec3(21646u, 27071u, 4800u)) : _GLF_IDENTITY(~ (_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) ^ uvec3(0u, 0u, 0u))), (false ? _GLF_FUZZED(uvec3(11760u, 59825u, 100792u)) : ~ (_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) ^ uvec3(0u, 0u, 0u))))))), min(~ (_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, ~ (~ (_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) ^ uvec3(0u, 0u, 0u))))), (gl_NumWorkGroups) ^ uvec3(0u, 0u, 0u))), ~ (_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) ^ uvec3(0u, 0u, 0u))))))), clamp(_GLF_IDENTITY(~ (_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) ^ uvec3(0u, 0u, 0u))), uvec3(0u, 0u, 0u) + (_GLF_IDENTITY(_GLF_IDENTITY(~ (_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) ^ uvec3(0u, 0u, 0u))), (false ? _GLF_FUZZED(uvec3(21646u, 27071u, 4800u)) : _GLF_IDENTITY(~ (_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) ^ uvec3(0u, 0u, 0u))), (false ? _GLF_FUZZED(uvec3(11760u, 59825u, 100792u)) : ~ (_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) ^ uvec3(0u, 0u, 0u))))))), min(~ (_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, ~ (~ (_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) ^ uvec3(0u, 0u, 0u))))), (gl_NumWorkGroups) ^ uvec3(0u, 0u, 0u))), ~ (_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) ^ uvec3(0u, 0u, 0u))))))), _GLF_IDENTITY(~ (_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) ^ uvec3(0u, 0u, 0u))), uvec3(0u, 0u, 0u) + (_GLF_IDENTITY(_GLF_IDENTITY(~ (_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) ^ uvec3(0u, 0u, 0u))), (false ? _GLF_FUZZED(uvec3(21646u, 27071u, 4800u)) : _GLF_IDENTITY(~ (_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) ^ uvec3(0u, 0u, 0u))), (false ? _GLF_FUZZED(uvec3(11760u, 59825u, 100792u)) : ~ (_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) ^ uvec3(0u, 0u, 0u))))))), min(~ (_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, ~ (~ (_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) ^ uvec3(0u, 0u, 0u))))), (gl_NumWorkGroups) ^ uvec3(0u, 0u, 0u))), ~ (_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) ^ uvec3(0u, 0u, 0u))))))), _GLF_IDENTITY(~ (_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) ^ uvec3(0u, 0u, 0u))), uvec3(0u, 0u, 0u) + (_GLF_IDENTITY(_GLF_IDENTITY(~ (_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) ^ uvec3(0u, 0u, 0u))), (false ? _GLF_FUZZED(uvec3(21646u, 27071u, 4800u)) : _GLF_IDENTITY(~ (_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) ^ uvec3(0u, 0u, 0u))), (false ? _GLF_FUZZED(uvec3(11760u, 59825u, 100792u)) : ~ (_GLF_IDENTITY(gl_NumWorkGroups, _GLF_IDENTITY((gl_NumWorkGroups) ^ uvec3(0u, 0u, 0u), uvec3(uvec3((gl_NumWorkGroups) ^ uvec3(0u, 0u, 0u)))))))))), min(~ (_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, ~ (~ (_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) ^ uvec3(0u, 0u, 0u))))), (gl_NumWorkGroups) ^ uvec3(0u, 0u, 0u))), ~ (_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) ^ uvec3(0u, 0u, 0u)))))))))), max(~ (_GLF_IDENTITY(_GLF_IDENTITY(~ (_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) ^ uvec3(0u, 0u, 0u))), uvec3(0u, 0u, 0u) + (_GLF_IDENTITY(_GLF_IDENTITY(~ (_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) ^ uvec3(0u, 0u, 0u))), (false ? _GLF_FUZZED(uvec3(21646u, 27071u, 4800u)) : _GLF_IDENTITY(~ _GLF_IDENTITY((_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) ^ uvec3(0u, 0u, 0u))), ((_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) ^ uvec3(0u, 0u, 0u)))) / uvec3(1u, 1u, 1u)), (false ? _GLF_FUZZED(uvec3(11760u, 59825u, 100792u)) : ~ (_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) ^ uvec3(0u, 0u, 0u))))))), min(~ (_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, ~ (~ (_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) ^ uvec3(0u, 0u, 0u))))), (gl_NumWorkGroups) ^ uvec3(0u, _GLF_IDENTITY(0u, (0u) << 0u), 0u))), ~ (_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) ^ uvec3(0u, 0u, 0u))))))), clamp(_GLF_IDENTITY(~ _GLF_IDENTITY((_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) ^ uvec3(0u, 0u, 0u))), ((_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) ^ uvec3(0u, 0u, 0u)))) ^ uvec3(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))), uvec3(0u, 0u, 0u) + (_GLF_IDENTITY(_GLF_IDENTITY(~ (_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) ^ uvec3(0u, 0u, 0u))), (_GLF_IDENTITY(false ? _GLF_FUZZED(uvec3(21646u, 27071u, 4800u)) : _GLF_IDENTITY(~ (_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) ^ uvec3(0u, 0u, 0u))), (false ? _GLF_FUZZED(uvec3(11760u, 59825u, 100792u)) : ~ (_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) ^ uvec3(0u, 0u, 0u))))), uvec3(1u, 1u, 1u) * (false ? _GLF_FUZZED(uvec3(21646u, 27071u, 4800u)) : _GLF_IDENTITY(~ (_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) ^ uvec3(0u, 0u, 0u))), (false ? _GLF_FUZZED(uvec3(11760u, 59825u, 100792u)) : ~ (_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) ^ uvec3(0u, 0u, 0u))))))))), min(~ (_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, ~ (~ (_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) ^ uvec3(0u, 0u, 0u))))), (gl_NumWorkGroups) ^ uvec3(0u, 0u, 0u))), ~ (_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) ^ uvec3(0u, 0u, 0u))))))), _GLF_IDENTITY(~ (_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) ^ uvec3(0u, 0u, 0u))), uvec3(0u, 0u, 0u) + (_GLF_IDENTITY(_GLF_IDENTITY(~ (_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) ^ uvec3(0u, 0u, 0u))), (false ? _GLF_FUZZED(uvec3(21646u, 27071u, 4800u)) : _GLF_IDENTITY(~ (_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) ^ uvec3(0u, 0u, 0u))), (false ? _GLF_FUZZED(uvec3(11760u, 59825u, 100792u)) : ~ (_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) ^ uvec3(0u, 0u, 0u))))))), min(~ (_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, ~ (~ (_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) ^ uvec3(0u, 0u, 0u))))), (gl_NumWorkGroups) ^ uvec3(0u, 0u, 0u))), ~ (_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) ^ uvec3(0u, 0u, 0u))))))), _GLF_IDENTITY(~ (_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) ^ uvec3(0u, 0u, 0u))), uvec3(0u, 0u, 0u) + (_GLF_IDENTITY(_GLF_IDENTITY(~ (_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) ^ uvec3(0u, 0u, 0u))), (false ? _GLF_FUZZED(uvec3(21646u, 27071u, 4800u)) : _GLF_IDENTITY(~ (_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) ^ uvec3(0u, 0u, 0u))), (false ? _GLF_FUZZED(uvec3(11760u, 59825u, 100792u)) : ~ (_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) ^ uvec3(0u, 0u, 0u))))))), min(~ (_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, ~ (~ (_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) ^ uvec3(0u, 0u, 0u))))), (gl_NumWorkGroups) ^ uvec3(0u, 0u, 0u))), ~ (_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) ^ uvec3(0u, 0u, 0u)))))))))), _GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY(~ (_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) ^ uvec3(0u, 0u, 0u))), uvec3(0u, 0u, 0u) + (_GLF_IDENTITY(_GLF_IDENTITY(~ (_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) ^ uvec3(0u, 0u, 0u))), (false ? _GLF_FUZZED(uvec3(21646u, 27071u, 4800u)) : _GLF_IDENTITY(~ (_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) ^ uvec3(0u, 0u, 0u))), (false ? _GLF_FUZZED(uvec3(11760u, 59825u, 100792u)) : ~ (_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) ^ uvec3(0u, 0u, 0u))))))), min(~ (_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, ~ (~ (_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) ^ uvec3(0u, 0u, 0u))))), (gl_NumWorkGroups) ^ uvec3(0u, 0u, 0u))), ~ (_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) ^ uvec3(0u, 0u, 0u))))))), clamp(_GLF_IDENTITY(~ (_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) ^ uvec3(0u, 0u, 0u))), uvec3(0u, 0u, 0u) + (_GLF_IDENTITY(_GLF_IDENTITY(~ (_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) ^ uvec3(0u, 0u, 0u))), (false ? _GLF_FUZZED(uvec3(21646u, 27071u, 4800u)) : _GLF_IDENTITY(~ (_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) ^ uvec3(0u, 0u, 0u))), (false ? _GLF_FUZZED(uvec3(11760u, 59825u, 100792u)) : ~ (_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) ^ uvec3(0u, 0u, 0u))))))), min(~ (_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, ~ (~ (_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) ^ uvec3(0u, 0u, 0u))))), (gl_NumWorkGroups) ^ uvec3(0u, 0u, 0u))), ~ (_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) ^ uvec3(0u, 0u, 0u))))))), _GLF_IDENTITY(~ (_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) ^ uvec3(0u, 0u, 0u))), uvec3(0u, 0u, 0u) + (_GLF_IDENTITY(_GLF_IDENTITY(~ (_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) ^ uvec3(0u, 0u, 0u))), (false ? _GLF_FUZZED(uvec3(21646u, 27071u, 4800u)) : _GLF_IDENTITY(~ (_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) ^ uvec3(0u, 0u, 0u))), (false ? _GLF_FUZZED(uvec3(11760u, 59825u, 100792u)) : ~ (_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) ^ uvec3(0u, 0u, 0u))))))), min(~ (_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, ~ (~ (_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) ^ uvec3(0u, 0u, 0u))))), (gl_NumWorkGroups) ^ uvec3(0u, 0u, 0u))), ~ (_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) ^ uvec3(0u, 0u, 0u))))))), _GLF_IDENTITY(~ (_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) ^ uvec3(0u, 0u, 0u))), uvec3(0u, 0u, 0u) + (_GLF_IDENTITY(_GLF_IDENTITY(~ (_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) ^ uvec3(0u, 0u, 0u))), (false ? _GLF_FUZZED(uvec3(21646u, 27071u, 4800u)) : _GLF_IDENTITY(~ (_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) ^ uvec3(0u, 0u, 0u))), (false ? _GLF_FUZZED(uvec3(11760u, 59825u, 100792u)) : ~ (_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) ^ uvec3(0u, 0u, 0u))))))), min(~ (_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, ~ (~ (_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) ^ uvec3(0u, 0u, 0u))))), (gl_NumWorkGroups) ^ uvec3(0u, 0u, 0u))), ~ (_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) ^ uvec3(0u, 0u, 0u)))))))))), (~ (_GLF_IDENTITY(_GLF_IDENTITY(~ (_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) ^ uvec3(0u, 0u, 0u))), uvec3(0u, 0u, 0u) + (_GLF_IDENTITY(_GLF_IDENTITY(~ (_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) ^ uvec3(0u, 0u, 0u))), (false ? _GLF_FUZZED(uvec3(21646u, 27071u, 4800u)) : _GLF_IDENTITY(~ (_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) ^ uvec3(0u, 0u, 0u))), (false ? _GLF_FUZZED(uvec3(11760u, 59825u, 100792u)) : ~ (_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) ^ uvec3(0u, 0u, 0u))))))), min(~ (_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, ~ (~ (_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) ^ uvec3(0u, 0u, 0u))))), (gl_NumWorkGroups) ^ uvec3(0u, 0u, 0u))), ~ (_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) ^ uvec3(0u, 0u, 0u))))))), clamp(_GLF_IDENTITY(~ (_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) ^ uvec3(0u, 0u, 0u))), uvec3(0u, 0u, 0u) + (_GLF_IDENTITY(_GLF_IDENTITY(~ (_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) ^ uvec3(0u, 0u, 0u))), (false ? _GLF_FUZZED(uvec3(21646u, 27071u, 4800u)) : _GLF_IDENTITY(~ (_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) ^ uvec3(0u, 0u, 0u))), (false ? _GLF_FUZZED(uvec3(11760u, 59825u, 100792u)) : ~ (_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) ^ uvec3(0u, 0u, 0u))))))), min(~ (_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, ~ (~ (_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) ^ uvec3(0u, 0u, 0u))))), (gl_NumWorkGroups) ^ uvec3(0u, 0u, 0u))), ~ (_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) ^ uvec3(0u, 0u, 0u))))))), _GLF_IDENTITY(~ (_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) ^ uvec3(0u, 0u, 0u))), uvec3(0u, 0u, 0u) + (_GLF_IDENTITY(_GLF_IDENTITY(~ (_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) ^ uvec3(0u, 0u, 0u))), (false ? _GLF_FUZZED(uvec3(21646u, 27071u, 4800u)) : _GLF_IDENTITY(~ (_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) ^ uvec3(0u, 0u, 0u))), (false ? _GLF_FUZZED(uvec3(11760u, 59825u, 100792u)) : ~ (_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) ^ uvec3(0u, 0u, 0u))))))), min(~ (_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, ~ (~ (_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) ^ uvec3(0u, 0u, 0u))))), (gl_NumWorkGroups) ^ uvec3(0u, 0u, 0u))), ~ (_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) ^ uvec3(0u, 0u, 0u))))))), _GLF_IDENTITY(~ (_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) ^ uvec3(0u, 0u, 0u))), uvec3(0u, 0u, 0u) + (_GLF_IDENTITY(_GLF_IDENTITY(~ (_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) ^ uvec3(0u, 0u, 0u))), (false ? _GLF_FUZZED(uvec3(21646u, 27071u, 4800u)) : _GLF_IDENTITY(~ (_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) ^ uvec3(0u, 0u, 0u))), (false ? _GLF_FUZZED(uvec3(11760u, 59825u, 100792u)) : ~ (_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) ^ uvec3(0u, 0u, 0u))))))), min(~ (_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, ~ (~ (_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) ^ uvec3(0u, 0u, 0u))))), (gl_NumWorkGroups) ^ uvec3(0u, 0u, 0u))), ~ (_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) ^ uvec3(0u, 0u, 0u))))))))))) >> uvec3(0u, 0u, 0u)))))), (~ (_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) ^ uvec3(_GLF_IDENTITY(0u, (0u) | (_GLF_IDENTITY(0u, (0u) | 0u))), _GLF_IDENTITY(0u, max(_GLF_IDENTITY(0u, (0u) - 0u), 0u)), 0u)))) + uvec3(0u, 0u, 0u)))))).x;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
      barrier();
     barrier();
    }
   barrier();
  }
 uint workgroup_size = gl_WorkGroupSize.x;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(true && (false), false || (true && _GLF_IDENTITY((false), ! (! ((false))))))), _GLF_IDENTITY(true && (false), ! (! (true && (false)))))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 uint workgroup_id = gl_WorkGroupID.x;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, false || (false)), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), (_GLF_FALSE(_GLF_IDENTITY(false, false || (false)), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch), (false ? _GLF_FUZZED(injectionSwitch) : (injectionSwitch))) - vec2(0.0, 0.0)).x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))) && true)), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, false || (false)), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch))))) - vec2(0.0, 0.0)).y, min(injectionSwitch.y, injectionSwitch.y))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), _GLF_IDENTITY(! (! (_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, false || (false)), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y))) && _GLF_TRUE(_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, (_GLF_IDENTITY(true, _GLF_IDENTITY((true) && true, _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY((true) && _GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, bool(bool(_GLF_IDENTITY(true, (true) && true))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && ((true) && true))), false || _GLF_IDENTITY((bool(_GLF_IDENTITY((_GLF_IDENTITY(true, _GLF_IDENTITY(true, ! (! (true))) && (true))) && true, _GLF_TRUE(true, _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), bool(_GLF_IDENTITY(bool((injectionSwitch.x < injectionSwitch.y)), ! _GLF_IDENTITY((! (bool((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch.y : _GLF_FUZZED(((true ? -7.1 : 0.7))))))))), ! (! (_GLF_IDENTITY((! (bool((injectionSwitch.x < injectionSwitch.y)))), ! (! ((! (bool((injectionSwitch.x < injectionSwitch.y))))))))))))), false || (_GLF_IDENTITY((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / determinant(mat2(1.0, 0.0, 0.0, 1.0)))) - 0.0)), bool(_GLF_IDENTITY(bool((injectionSwitch.x < injectionSwitch.y)), ! _GLF_IDENTITY((! (bool((injectionSwitch.x < _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).y, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch.y : _GLF_FUZZED(((true ? -7.1 : 0.7))))))))), ! (! (_GLF_IDENTITY((! (bool((injectionSwitch.x < injectionSwitch.y)))), ! (! ((! (bool((injectionSwitch.x < injectionSwitch.y)))))))))))))))) && ((_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(true, bool(bvec3(_GLF_IDENTITY(true, ! (! (true))), true, false))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, true)), false || (bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(true, ! (! (true))), bool(bvec3(_GLF_IDENTITY(true, ! (! (true))), true, false))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, true)))))) && true)))), ((bool(_GLF_IDENTITY((_GLF_IDENTITY(true, _GLF_IDENTITY(true, ! (! (true))) && (true))) && true, _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), bool(_GLF_IDENTITY(bool((injectionSwitch.x < injectionSwitch.y)), ! _GLF_IDENTITY((! (bool((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch.y : _GLF_FUZZED(((_GLF_IDENTITY(true ? -7.1 : 0.7, clamp(true ? -7.1 : 0.7, _GLF_IDENTITY(true ? -7.1 : 0.7, mix(float(_GLF_FUZZED(-480.881)), float(_GLF_IDENTITY(true, _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(true), (bool(true)) && true)), false || (bool(_GLF_IDENTITY(bool(true), (bool(true)) && true))))) ? -7.1 : 0.7), bool(true))), true ? -7.1 : 0.7))))))))))), ! (! (_GLF_IDENTITY((! (bool((injectionSwitch.x < injectionSwitch.y)))), ! (! ((! (bool((injectionSwitch.x < injectionSwitch.y)))))))))))))) && ((_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(true, bool(bvec3(_GLF_IDENTITY(true, ! (! (true))), true, false))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, true)), false || (bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(true, ! (! (true))), bool(bvec3(_GLF_IDENTITY(true, ! (! (true))), true, false))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, true)))))) && true))))) || false))), false || (bool(_GLF_IDENTITY(bool(_GLF_IDENTITY((true) && _GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, bool(bool(_GLF_IDENTITY(true, (true) && true))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && ((true) && true))), false || _GLF_IDENTITY((bool(_GLF_IDENTITY((_GLF_IDENTITY(true, _GLF_IDENTITY(true, ! (! (true))) && (true))) && true, _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), bool(_GLF_IDENTITY(bool((injectionSwitch.x < injectionSwitch.y)), ! _GLF_IDENTITY((! (bool((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, (_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[_GLF_IDENTITY(1, 0 + (_GLF_IDENTITY(1, int(int(1)))))])).y)) ? injectionSwitch.y : _GLF_FUZZED(((true ? -7.1 : 0.7))))))))), ! (! (_GLF_IDENTITY((! (bool((injectionSwitch.x < injectionSwitch.y)))), ! (! ((! (bool((injectionSwitch.x < injectionSwitch.y)))))))))))))) && ((_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(true, bool(bvec3(_GLF_IDENTITY(true, ! (! (true))), true, false))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, true)), false || (bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(true, ! (! (true))), bool(bvec3(_GLF_IDENTITY(true, ! (! (true))), true, false))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, true)))))) && true)))), ((bool(_GLF_IDENTITY((_GLF_IDENTITY(true, _GLF_IDENTITY(true, ! (! (true))) && (true))) && true, _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), bool(_GLF_IDENTITY(bool((injectionSwitch.x < injectionSwitch.y)), ! _GLF_IDENTITY((! (bool((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch.y : _GLF_FUZZED(((_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(true, bool(bool(true)))), bool(bvec4(! (_GLF_IDENTITY(true, bool(bool(true)))), true, true, true))))) ? -7.1 : 0.7))))))))), ! (! (_GLF_IDENTITY((! (bool((injectionSwitch.x < injectionSwitch.y)))), ! (! ((! (bool((injectionSwitch.x < injectionSwitch.y)))))))))))))) && ((_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(true, bool(bvec3(_GLF_IDENTITY(true, ! (! (true))), true, false))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, true)), false || (bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(true, ! (! (true))), bool(bvec3(_GLF_IDENTITY(true, ! (! (true))), true, false))), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)).x > injectionSwitch.y)), true, true)))))) && true))))) || _GLF_IDENTITY(false, (false) && true))))))))) && _GLF_IDENTITY(true, (_GLF_IDENTITY(true, bool(bool(true)))) || false))))), (injectionSwitch.x < injectionSwitch.y)))))))), ! (! (! (! _GLF_IDENTITY((_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), ! (! (_GLF_IDENTITY(false, true && (false))))) || (false)), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y))) && _GLF_TRUE(_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, (_GLF_IDENTITY(true, (true) && true)) && true)))), (injectionSwitch.x < injectionSwitch.y)), bool(bvec4(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y))) && _GLF_TRUE(_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(_GLF_IDENTITY(true, ! (! (true))), (_GLF_IDENTITY(true, (true) && true)) && true)))), (injectionSwitch.x < injectionSwitch.y)), ! (! ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y))) && _GLF_TRUE(_GLF_IDENTITY(true, ! (! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(true, (true) && true), (_GLF_IDENTITY(true, (true) && true)) && true)), (_GLF_IDENTITY((_GLF_IDENTITY(true, (_GLF_IDENTITY(true, (true) && true)) && true)), false || ((_GLF_IDENTITY(true, (_GLF_IDENTITY(true, (true) && true)) && true))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), (injectionSwitch.x < injectionSwitch.y))))), false, true, true)))))))), ((_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(false, true && (false)) || (false)), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y))) && _GLF_TRUE(_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, (_GLF_IDENTITY(true, (true) && true)) && true)))), (injectionSwitch.x < injectionSwitch.y)), bool(bvec4(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y))) && _GLF_TRUE(_GLF_IDENTITY(true, ! _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_IDENTITY(true, (_GLF_IDENTITY(true, (true) && true)) && true)), (_GLF_IDENTITY(! (_GLF_IDENTITY(true, (_GLF_IDENTITY(true, (true) && true)) && true)), (! (_GLF_IDENTITY(true, (_GLF_IDENTITY(true, (true) && true)) && true))) || false)) || false)), ! (_GLF_IDENTITY(! ((! (_GLF_IDENTITY(true, (_GLF_IDENTITY(true, (true) && true)) && true)))), ! (_GLF_IDENTITY(! (! ((! (_GLF_IDENTITY(true, (_GLF_IDENTITY(true, (true) && true)) && true))))), false || (! (! ((! (_GLF_IDENTITY(true, (_GLF_IDENTITY(true, (true) && true)) && true))))))))))), ! (! (_GLF_IDENTITY((! (_GLF_IDENTITY(true, (_GLF_IDENTITY(true, (true) && _GLF_IDENTITY(true, bool(bool(true))))) && true))), ! (! ((! (_GLF_IDENTITY(true, (_GLF_IDENTITY(true, (true) && true)) && _GLF_IDENTITY(true, (_GLF_IDENTITY(true, ! (! (true)))) && true))))))))))), (injectionSwitch.x < injectionSwitch.y)), ! (! ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y))))) && _GLF_TRUE(_GLF_IDENTITY(true, ! (! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(true, (_GLF_IDENTITY(true, (true) && true)) && true), (_GLF_IDENTITY(true, (_GLF_IDENTITY(true, (true) && true)) && true)) || false)), (_GLF_IDENTITY((_GLF_IDENTITY(true, (_GLF_IDENTITY(true, (true) && true)) && true)), false || ((_GLF_IDENTITY(true, (_GLF_IDENTITY(true, (true) && true)) && true))))) || _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(injectionSwitch.x > injectionSwitch.y, true, false, true)))))))), (injectionSwitch.x < injectionSwitch.y))))), false, true, true))))))))) && true)))))), _GLF_TRUE(true, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch))) * cos(vec2(0.0, _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(6.3)))))).x < injectionSwitch.y), ! (_GLF_IDENTITY(! ((_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch))) * cos(vec2(0.0, _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(6.3)))))).x < injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (! ((_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), min(injectionSwitch, injectionSwitch))) * cos(vec2(0.0, _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(6.3)))))).x < injectionSwitch.y))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)), (bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, false || (false)), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), ! (_GLF_IDENTITY(! (_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, bool(bvec3(false, false, true))))), (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(77.46, -265.316)))).y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y))) && _GLF_TRUE(true, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), _GLF_IDENTITY(injectionSwitch, vec2(mat4x2(injectionSwitch, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0))), _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))))).x < injectionSwitch.y, ! (! (injectionSwitch.x < injectionSwitch.y)))))))))), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(! (_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, false || (false)), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))) && true)))))), bool(bvec2(! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, false || (false)), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(4893.1356), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(-91.96)), bvec2(true, false))).x > injectionSwitch.y))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), ! (! (_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), false || (_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(false, false || (false)))))), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))))), true)))), true && (bool(_GLF_IDENTITY(! (_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, false || (false)), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), true && (! (injectionSwitch.x > injectionSwitch.y))), true)), bool(bvec2(bool(bvec2(_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), true && (! (injectionSwitch.x > injectionSwitch.y))), true)), true)))))), _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y))), bool(bvec2((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y))), true))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), bool(bvec2(_GLF_IDENTITY(! (_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, false || (false)), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), true && (! (_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, false || (false)), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))), true)))))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch[0], _GLF_IDENTITY(clamp(_GLF_IDENTITY(injectionSwitch[0], (injectionSwitch[0]) + 0.0), injectionSwitch[0], injectionSwitch[0]), (clamp(_GLF_IDENTITY(injectionSwitch[0], (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch))[0]) + 0.0), injectionSwitch[0], injectionSwitch[0])) / 1.0)), clamp(injectionSwitch[0], injectionSwitch[0], injectionSwitch[0])), injectionSwitch[_GLF_IDENTITY(1, clamp(1, 1, _GLF_IDENTITY(1, (false ? _GLF_FUZZED(-95330) : 1))))])), vec2(_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(vec4(2.4, 0.3, -7.8, -821.068).s)), float(_GLF_IDENTITY(0.0, max(0.0, 0.0))), bool(true))), 0.0) + (_GLF_IDENTITY(injectionSwitch, vec2(vec2(injectionSwitch))))), injectionSwitch), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(vec2(12.63, -502.713)) : min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch[0], _GLF_IDENTITY(clamp(_GLF_IDENTITY(injectionSwitch[0], (injectionSwitch[0]) + 0.0), injectionSwitch[0], injectionSwitch[0]), (clamp(_GLF_IDENTITY(injectionSwitch[0], (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch))[0]) + 0.0), injectionSwitch[0], injectionSwitch[0])) / 1.0)), clamp(injectionSwitch[0], injectionSwitch[0], injectionSwitch[0])), injectionSwitch[_GLF_IDENTITY(1, clamp(1, 1, _GLF_IDENTITY(1, (false ? _GLF_FUZZED(-95330) : 1))))])), vec2(_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(vec4(2.4, 0.3, -7.8, -821.068).s)), float(_GLF_IDENTITY(0.0, max(0.0, 0.0))), bool(true))), 0.0) + (_GLF_IDENTITY(injectionSwitch, vec2(vec2(injectionSwitch))))), injectionSwitch)))).y)), false))) || _GLF_IDENTITY(false, _GLF_IDENTITY(true && (false), ! (! (_GLF_IDENTITY(true && (false), (_GLF_IDENTITY(true, true && (true)) && (false)) || false))))))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))) && true)))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, (false) && true), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, float(mat4x2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)), mix(float(_GLF_FUZZED((8548.9388 + 53.79))), float(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), mix(float(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))), float(_GLF_FUZZED((+ -917.921))), _GLF_IDENTITY(bool(false), _GLF_IDENTITY(bool(bool(bool(false))), false || (bool(bool(bool(false)))))))))), (_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)), mix(float(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))), _GLF_IDENTITY(float(_GLF_FUZZED((+ -917.921))), (false ? _GLF_FUZZED(1.3) : _GLF_IDENTITY(float(_GLF_FUZZED((+ -917.921))), (float(_GLF_FUZZED((+ -917.921)))) * 1.0))), bool(false)))))) - 0.0), 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, float(mat4x3(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0)))) / cos(log(1.0)))))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / abs(_GLF_ONE(1.0, injectionSwitch.y))), _GLF_IDENTITY(float(vec4(injectionSwitch.y, _GLF_IDENTITY(0.0, (true ? _GLF_IDENTITY(0.0, float(mat3x4(0.0, 0.0, 1.0, sqrt(0.0), 1.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0, round(length(normalize(vec3(1.0, 1.0, 1.0)))), 0.0, 1.0))) : _GLF_FUZZED(-8.3))), _GLF_IDENTITY(1.0, min(1.0, 1.0)), 1.0)), _GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), _GLF_IDENTITY(vec2(_GLF_IDENTITY(_GLF_FUZZED(530.044), _GLF_IDENTITY(0.0 + (_GLF_FUZZED(530.044)), mix(float(0.0 + (_GLF_FUZZED(530.044))), float(_GLF_FUZZED(6.3)), bool(false)))), _GLF_FUZZED(38.90)), (false ? _GLF_FUZZED(vec2(9401.7137, 0.4)) : vec2(_GLF_IDENTITY(_GLF_FUZZED(530.044), 0.0 + (_GLF_FUZZED(530.044))), _GLF_FUZZED(38.90)))), bvec2(false, false))), injectionSwitch, injectionSwitch)).x) + (_GLF_IDENTITY(float(vec4(injectionSwitch.y, 0.0, _GLF_IDENTITY(1.0, min(1.0, 1.0)), 1.0)), _GLF_IDENTITY(clamp(float(vec4(injectionSwitch.y, 0.0, _GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED((true ? 76.11 : (+ -2410.1796)))), float(1.0), bool(true))), 1.0)), 1.0)), float(vec4(_GLF_IDENTITY(injectionSwitch.y, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(injectionSwitch.y, float(mat2x3(injectionSwitch.y, 1.0, 0.0, 1.0, determinant(mat2(1.0, _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(4.5) : _GLF_IDENTITY(1.0, clamp(1.0, _GLF_IDENTITY(1.0, float(float(1.0))), 1.0)))), 0.0, 1.0)), determinant(mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))))) : _GLF_FUZZED(uintBitsToFloat((subgroup_id - subgroup_size))))), 0.0, _GLF_IDENTITY(1.0, min(1.0, 1.0)), 1.0)), float(vec4(injectionSwitch.y, 0.0, _GLF_IDENTITY(1.0, min(1.0, 1.0)), 1.0))), 0.0 + (clamp(float(vec4(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0))), 0.0, _GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED((true ? 76.11 : (+ -2410.1796)))), float(1.0), bool(true))), 1.0)), 1.0)), float(vec4(_GLF_IDENTITY(injectionSwitch.y, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(injectionSwitch.y, float(mat2x3(injectionSwitch.y, 1.0, 0.0, 1.0, determinant(mat2(1.0, _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(4.5) : _GLF_IDENTITY(1.0, clamp(1.0, _GLF_IDENTITY(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), float(float(1.0))), 1.0)))), 0.0, 1.0)), determinant(mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))))) : _GLF_FUZZED(uintBitsToFloat((subgroup_id - subgroup_size))))), 0.0, _GLF_IDENTITY(1.0, min(1.0, 1.0)), 1.0)), float(vec4(injectionSwitch.y, 0.0, _GLF_IDENTITY(1.0, min(1.0, 1.0)), 1.0))))))))))))), true && (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, float(mat4x2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(-15.53), _GLF_FUZZED(5.1)), bvec2(false, false))).y, _GLF_IDENTITY(max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))), (_GLF_IDENTITY(max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)), injectionSwitch)).y, _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))))), (max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)))) / 1.0)) * 1.0)), 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(2.4), _GLF_FUZZED(-560.144)), bvec2(false, false))).y, float(vec4(injectionSwitch.y, 0.0, _GLF_IDENTITY(1.0, min(1.0, _GLF_IDENTITY(1.0, (1.0) * _GLF_IDENTITY(dot(vec3(1.0, 0.0, sqrt(0.0)), vec3(1.0, 0.0, 0.0)), dot(vec3(1.0, 0.0, sqrt(0.0)), vec3(1.0, 0.0, 0.0)))))), 1.0))), mix(float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(2.4), _GLF_FUZZED(-560.144)), bvec2(false, false))).y, float(vec4(injectionSwitch.y, 0.0, _GLF_IDENTITY(1.0, min(1.0, 1.0)), 1.0)))), float(_GLF_FUZZED((-145.634 - 447.998))), bool(false))))))), bool(bvec2(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(false, bool(bvec2(false, false))), true, true, false)), ! (! (bool(bvec4(_GLF_IDENTITY(false, bool(bvec2(false, false))), true, true, false)))))), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(injectionSwitch.x, (true ? _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0) : _GLF_FUZZED(74.94)))), float(_GLF_FUZZED(9.7)), bool(false))) > _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, float(mat4x2(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)))), 0.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, float(mat4x2(_GLF_IDENTITY(0.0, (0.0) + 0.0), 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0))), 0.0)), 1.0, 0.0))), _GLF_IDENTITY(injectionSwitch.y, float(vec4(injectionSwitch.y, 0.0, _GLF_IDENTITY(1.0, _GLF_IDENTITY(min(1.0, 1.0), (min(1.0, 1.0)) * sqrt(1.0))), 1.0))))), ! (! (_GLF_IDENTITY(injectionSwitch.x, mix(_GLF_IDENTITY(float(_GLF_IDENTITY(injectionSwitch.x, (true ? _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / _GLF_IDENTITY(1.0, min(1.0, 1.0))) : _GLF_FUZZED(_GLF_IDENTITY(74.94, clamp(74.94, 74.94, 74.94)))))), max(float(_GLF_IDENTITY(injectionSwitch.x, (true ? _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / _GLF_IDENTITY(1.0, min(1.0, 1.0))) : _GLF_FUZZED(_GLF_IDENTITY(74.94, clamp(74.94, 74.94, 74.94)))))), float(_GLF_IDENTITY(injectionSwitch.x, (true ? _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / _GLF_IDENTITY(1.0, min(1.0, 1.0))) : _GLF_FUZZED(_GLF_IDENTITY(74.94, clamp(74.94, 74.94, 74.94)))))))), float(_GLF_FUZZED(9.7)), bool(false))) > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(min(_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(mat4x2(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)))), 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0)), max(float(mat4x2(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)))), 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0)), float(mat4x2(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)))), 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0))))), _GLF_IDENTITY(injectionSwitch.y, float(vec4(injectionSwitch.y, 0.0, _GLF_IDENTITY(1.0, _GLF_IDENTITY(min(1.0, 1.0), (_GLF_IDENTITY(min(1.0, 1.0), mix(float(min(1.0, 1.0)), float(_GLF_FUZZED((-213.608 / 696.771))), bool(false)))) * sqrt(1.0))), 1.0)))), (true ? min(_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(mat4x2(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)))), 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0)), max(float(mat4x2(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)))), 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0)), float(mat4x2(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)))), 0.0, _GLF_IDENTITY(1.0, (1.0) / sqrt(1.0)), 0.0, 0.0, 0.0, 1.0, 0.0))))), _GLF_IDENTITY(injectionSwitch.y, float(vec4(injectionSwitch.y, 0.0, _GLF_IDENTITY(1.0, _GLF_IDENTITY(min(1.0, 1.0), (_GLF_IDENTITY(min(1.0, 1.0), mix(float(min(1.0, 1.0)), float(_GLF_FUZZED((-213.608 / 696.771))), bool(false)))) * sqrt(1.0))), 1.0)))) : _GLF_FUZZED(260.735))))))))), true)))))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
          {
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
         barrier();
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY((false ? _GLF_FUZZED(-0.2) : injectionSwitch.x), ((false ? _GLF_FUZZED(-0.2) : injectionSwitch.x)) + 0.0))) * 1.0) > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(false))
              barrier();
             barrier();
            }
           barrier();
          }
         if(_GLF_DEAD(false))
          barrier();
         barrier();
         if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, false || (false)), (injectionSwitch.x > injectionSwitch.y))))
          barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false)))
            barrier();
           barrier();
          }
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], max(injectionSwitch[0], injectionSwitch[0])), injectionSwitch[1])).y))))
            barrier();
           barrier();
          }
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(injectionSwitch.x > injectionSwitch.y, false)))))))
        barrier();
       barrier();
      }
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 uint workgroup_base = workgroup_size * workgroup_id;
 uint virtual_gid = workgroup_base + subgroup_id * subgroup_size + subgroup_local_id;
 uint next_virtual_gid = workgroup_base + subgroup_id * subgroup_size + ((subgroup_local_id + 1) % _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, 0u | (subgroup_size)), _GLF_IDENTITY((subgroup_size) | (subgroup_size), clamp(_GLF_IDENTITY((subgroup_size), ((subgroup_size)) | (0u ^ 0u)) | (subgroup_size), (subgroup_size) | (subgroup_size), (subgroup_size) | (subgroup_size)))));
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true)))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false)))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), ! (! (bool(false))))))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, true && (false))) && true)))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(true && (false), ! (_GLF_IDENTITY(! (true && (false)), _GLF_IDENTITY(bool(bvec2(! (true && (false)), true)), false || (bool(bvec2(! (true && (false)), true))))))))))
      barrier();
    }
  }
 if(_GLF_DEAD(false))
  barrier();
 uint read_1 = atomicLoad(buf[virtual_gid], 4, 64, 0);
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(false || (false), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec3(false, false, false))), (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch))) / vec2(1.0, 1.0)), injectionSwitch)).y, true && (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch))) / vec2(1.0, 1.0)), injectionSwitch)).y, true && (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch))) / vec2(1.0, 1.0)), injectionSwitch)).y))))))) && true), false, true), bvec3(bvec3(bvec3(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true), false, true)))))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true), false, true), bvec3(bvec3(bvec3(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true), false, true)))))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), bool(bvec3(((injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))) || false)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true), _GLF_IDENTITY(false, bool(bool(false))), true), bvec3(bvec3(bvec3(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(vec3(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(75.26)), vec2(_GLF_FUZZED(38.50), (injectionSwitch)[1]), bvec2(false, true))), 1.0))).x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true), false, true))))))) && true)) && true) || (_GLF_IDENTITY(false || (false), _GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-2.3), _GLF_IDENTITY((injectionSwitch)[1], mix(float(_GLF_FUZZED(-0.0)), float((injectionSwitch)[1]), bool(true)))), vec2((injectionSwitch)[0], _GLF_FUZZED(-933.556)), bvec2(true, false))).y), true && ((injectionSwitch.x > injectionSwitch.y)))) || (_GLF_IDENTITY(false || (false), ! (_GLF_IDENTITY(! (false || (false)), ! (! (! (false || (false))))))))))))))
  barrier();
 atomicStore(buf[next_virtual_gid], uint(read_1 + 1), 4, 64, 4);
 if(_GLF_DEAD(false))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false))), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true), false, _GLF_IDENTITY(true, (true) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), false))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bool(injectionSwitch.x > injectionSwitch.y)))), false, true, false))), ! (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4((injectionSwitch.x > injectionSwitch.y), false, _GLF_IDENTITY(true, (true) && true), false)))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true && (bool(bvec2(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4((injectionSwitch.x > injectionSwitch.y), false, true, false))), _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(51.45))))))))), (_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4((injectionSwitch.x > injectionSwitch.y), false, true, false))), _GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y))))), bvec2(bvec3(bvec2(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4((injectionSwitch.x > injectionSwitch.y), false, true, false))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true))), bvec2(bvec4(_GLF_IDENTITY(bvec2(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4((injectionSwitch.x > injectionSwitch.y), false, true, false))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec2(bvec3(bvec2(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y), false, true, false))), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-405.068)), bool(false))) > injectionSwitch.y))), true))), true, true))), bvec2(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4((injectionSwitch.x > injectionSwitch.y), false, true, false))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec2(bvec3(bvec2(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-3.4)), bool(false))) > injectionSwitch.y), bool(bvec4((injectionSwitch.x > injectionSwitch.y), false, true, false))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true))), bvec2(bvec4(_GLF_IDENTITY(bvec2(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4((injectionSwitch.x > injectionSwitch.y), false, true, false))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec2(bvec3(bvec2(_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(-2370.5978)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), bool(bvec4((injectionSwitch.x > injectionSwitch.y), false, true, false))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true))), true, true))), bvec2(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4((injectionSwitch.x > injectionSwitch.y), false, true, false))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec2(bvec3(bvec2(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4((injectionSwitch.x > injectionSwitch.y), false, true, false))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true))), bvec2(bvec4(_GLF_IDENTITY(bvec2(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4((injectionSwitch.x > injectionSwitch.y), false, true, false))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec2(bvec3(bvec2(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - length(vec4(0.0, 0.0, 0.0, 0.0)))), false, true, false))), _GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))))), true))), true, true)))))), false)))), true && (bool(bvec2(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4((injectionSwitch.x > injectionSwitch.y), false, true, false))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), true)))))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)))), injectionSwitch)).y))))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint read_2 = atomicLoad(buf[virtual_gid], 4, 64, 0);
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), vec2(injectionSwitch[0], injectionSwitch[1])).y)), bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), vec2(injectionSwitch[0], injectionSwitch[1])).y)), bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) || false)))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, true, true), bvec3(bvec3(bvec3(false, true, true))))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * cos(0.0)), 0.0 + (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * cos(0.0)))) > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y) || false)))))
        barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, true && (false))) || false)))))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, (false) || false))))))))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(_GLF_IDENTITY((-5.0 - 2.3), mix(float(_GLF_FUZZED(-7926.5374)), float(_GLF_IDENTITY((-5.0 - 2.3), _GLF_IDENTITY(1.0 * ((-5.0 - 2.3)), (_GLF_IDENTITY(1.0 * ((-5.0 - 2.3)), (1.0 * ((-5.0 - 2.3))) / 1.0)) + 0.0))), bool(true)))) : injectionSwitch.x)) > injectionSwitch.y), bool(bvec4(bool(_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(_GLF_IDENTITY((-5.0 - 2.3), mix(float(_GLF_FUZZED(-7926.5374)), float(_GLF_IDENTITY((-5.0 - 2.3), _GLF_IDENTITY(1.0 * ((-5.0 - 2.3)), (_GLF_IDENTITY(1.0 * ((-5.0 - 2.3)), (1.0 * ((-5.0 - 2.3))) / 1.0)) + 0.0))), bool(true)))) : injectionSwitch.x)) > injectionSwitch.y), true, false, true))), (bool(injectionSwitch.x > injectionSwitch.y)) && true)))))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 atomicStore(buf[next_virtual_gid], uint(read_1 + 1 == read_2) + 1, 4, 64, 4);
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, (false) || false), false))), false || (_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, (false) || false), false)))))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
      barrier();
    }
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
}
