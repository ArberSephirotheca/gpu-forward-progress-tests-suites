#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / abs(vec2(1.0, 1.0)))[1])), clamp(injectionSwitch, injectionSwitch, injectionSwitch)), injectionSwitch)).x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(1.0 * (injectionSwitch.y), max(1.0 * (injectionSwitch.y), 1.0 * (injectionSwitch.y))))))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY((_GLF_DEAD(false)) && true, ! (_GLF_IDENTITY(! ((_GLF_DEAD(_GLF_IDENTITY(false, true && (false)))) && true), (! ((_GLF_DEAD(false)) && true)) && true)))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-38.63)), float(injectionSwitch.x), bool(true))) > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true), ! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y) && true)))))), _GLF_IDENTITY((_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true), bool(bvec2(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true), true))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(5817.3324) : _GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(5.3) : injectionSwitch.x)))) > injectionSwitch.y))), false || (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_IDENTITY(_GLF_FUZZED(5817.3324), min(_GLF_FUZZED(5817.3324), _GLF_FUZZED(5817.3324))) : _GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(5.3) : injectionSwitch.x)))) > injectionSwitch.y))))))))))), ! (! (_GLF_IDENTITY((_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(injectionSwitch.x > injectionSwitch.y, false))), (injectionSwitch.x > injectionSwitch.y) && true), ! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(5817.3324) : _GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(5.3) : injectionSwitch.x)))) > _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(-9463.9225)), bool(false)))))))))))), ! (! ((_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(5817.3324) : _GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(5.3) : injectionSwitch.x)))) > injectionSwitch.y)))), (_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(5817.3324) : _GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(5.3) : injectionSwitch.x)))) > injectionSwitch.y)))), (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(5817.3324) : _GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(5.3) : injectionSwitch.x)))) > injectionSwitch.y))))) || false)) && true)))))))))))) || false)))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, float(mat4x3(injectionSwitch.x, cos(0.0), 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0, sin(0.0), 1.0, 1.0, 1.0, sqrt(1.0)))), _GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0), injectionSwitch.x)), injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0)))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)))), true && (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), (injectionSwitch.y) - 0.0)))))))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) || false)) && true))), bool(bvec4(_GLF_IDENTITY(bool(bool(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, _GLF_IDENTITY((false), bool(bvec4((false), false, false, true))) || false)) && true))), true && (bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) || false)) && true), bool(bvec4(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) || false)) && true), true, false, false))))))), true, true, true))))))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, (false) || false)))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_DEAD(false))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), true && (_GLF_IDENTITY(! (false), ! (! (! (false))))))))), true && _GLF_IDENTITY((! (false)), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2((! (false)), true), bvec2(bvec3(bvec2((! (false)), true), true)))), ! (! _GLF_IDENTITY((_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2((! (false)), true), bvec2(bvec3(bvec2((! (false)), true), true)))), ! (_GLF_IDENTITY(! (bool(_GLF_IDENTITY(bvec2((! (false)), true), bvec2(bvec3(bvec2((! (false)), true), true))))), bool(bvec2(! (bool(_GLF_IDENTITY(bvec2((! (false)), true), bvec2(bvec3(bvec2((! (false)), true), true))))), false)))))), ((_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2((! (false)), true), bvec2(bvec3(bvec2((! (false)), true), true)))), ! (_GLF_IDENTITY(! (bool(_GLF_IDENTITY(bvec2((! (false)), true), bvec2(bvec3(bvec2((! (false)), true), true))))), bool(bvec2(! (bool(_GLF_IDENTITY(bvec2((! (false)), true), bvec2(bvec3(bvec2((! (false)), true), true))))), false))))))) || false))))), (_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), true && (_GLF_IDENTITY(! (false), ! (! (! (false))))))))), true && _GLF_IDENTITY((! _GLF_IDENTITY(_GLF_IDENTITY((false), (_GLF_IDENTITY((false), ! (! ((false))))) || false), ! (_GLF_IDENTITY(! ((false)), ! (! (! ((false)))))))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2((! (false)), true), bvec2(bvec3(bvec2((! (false)), true), true)))), ! (! (bool(_GLF_IDENTITY(bvec2((! (false)), true), _GLF_IDENTITY(bvec2(bvec3(bvec2((_GLF_IDENTITY(! (false), true && (_GLF_IDENTITY(! (false), bool(bvec4(! (false), true, false, true)))))), true), true)), bvec2(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec2(bvec3(bvec2((_GLF_IDENTITY(! (false), true && (_GLF_IDENTITY(! (false), bool(bvec4(! (false), true, false, true)))))), true), true)), bvec2(bvec4(bvec2(bvec3(bvec2((_GLF_IDENTITY(! (false), true && (_GLF_IDENTITY(! (false), bool(bvec4(! (false), true, false, true)))))), true), true)), false, false))), false), bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec2(bvec3(bvec2((_GLF_IDENTITY(! (false), true && (_GLF_IDENTITY(! (false), bool(bvec4(! (false), true, false, true)))))), true), true)), bvec2(bvec4(bvec2(bvec3(bvec2((_GLF_IDENTITY(! (false), true && (_GLF_IDENTITY(! (false), bool(bvec4(! (false), true, false, true)))))), true), true)), false, false))), false), bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec2(bvec3(bvec2((_GLF_IDENTITY(! (false), true && (_GLF_IDENTITY(! (false), bool(bvec4(! (false), true, false, true)))))), true), true)), bvec2(bvec4(bvec2(bvec3(bvec2((_GLF_IDENTITY(! (false), true && (_GLF_IDENTITY(! (false), bool(bvec4(! (false), true, false, true)))))), true), true)), false, false))), false))))), bvec3(bvec4(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec2(bvec3(bvec2((_GLF_IDENTITY(! (false), true && (_GLF_IDENTITY(! (false), bool(bvec4(! (false), true, false, true)))))), true), true)), bvec2(bvec4(bvec2(bvec3(bvec2((_GLF_IDENTITY(! (false), true && (_GLF_IDENTITY(! (false), bool(bvec4(! (false), true, false, true)))))), true), true)), false, false))), false), bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec2(bvec3(bvec2((_GLF_IDENTITY(! (false), true && (_GLF_IDENTITY(! (false), bool(bvec4(! (false), true, false, true)))))), true), true)), bvec2(bvec4(bvec2(bvec3(bvec2((_GLF_IDENTITY(! (false), true && (_GLF_IDENTITY(! (false), bool(bvec4(! (false), true, false, true)))))), true), true)), false, false))), false))))), false))))))))))))))) || false))), bool(bvec4(false, true, false, false)))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(_GLF_IDENTITY(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false), bvec2(bvec2(bvec2(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), false))))))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, true && (false)), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(mat2(injectionSwitch, 0.0, 1.0))).y))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), ! (! (_GLF_IDENTITY(false, bool(bvec4(false, true, false, true)))))), true && (false))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint num_workgroup = gl_NumWorkGroups.x;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, bool(bvec2(false, _GLF_IDENTITY(true, bool(bool(true)))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, bool(bvec2(false, true))), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, (injectionSwitch.x < injectionSwitch.y) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), true))), bool(bool(_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, bool(bvec2(false, true))), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0), injectionSwitch.x, injectionSwitch.x)) < _GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)), injectionSwitch, injectionSwitch)).y)), true)))))), true, false)), ! (! _GLF_IDENTITY((_GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(false, bool(bvec2(false, true))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)), false || (bool(bvec3(_GLF_IDENTITY(false, bool(bvec2(false, true))), _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || ((injectionSwitch.x < injectionSwitch.y)))), true))))), (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, true)), _GLF_IDENTITY(bool(bvec2(bool(bvec2(false, true)), false)), ! (! (bool(bvec2(bool(bvec2(false, true)), false))))))), _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), ! (! (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), true)), false || (bool(bvec3(_GLF_IDENTITY(false, bool(bvec2(false, true))), _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false))) || ((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, float(mat4x2(injectionSwitch.y, sin(0.0), 0.0, 0.0, 0.0, 1.0, 0.0, 1.0))))))), true)))))) || false), bool(bool(_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, bool(bvec2(false, true))), _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0), _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0))))), true)))))), true, false)), ! (! (bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec2(bvec2(false, true)))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))), bool(bool(_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, bool(bvec2(false, true))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)))))), true, false)))))), _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || ((_GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(false, bool(bvec2(false, true))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)), false || (bool(bvec3(_GLF_IDENTITY(false, bool(bvec2(false, true))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)))), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(false, bool(bvec2(false, true))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)), false || (bool(bvec3(_GLF_IDENTITY(false, bool(bvec2(false, true))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)))), (_GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(false, bool(bvec2(false, true))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)), false || (bool(bvec3(_GLF_IDENTITY(false, bool(bvec2(false, true))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))))) && true), true)), true && (bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(false, bool(bvec2(false, true))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)), false || (bool(bvec3(_GLF_IDENTITY(false, bool(bvec2(false, true))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)))), (_GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(false, bool(bvec2(false, true))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)), false || (bool(bvec3(_GLF_IDENTITY(false, bool(bvec2(false, true))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))))) && true), true)))))), bool(bool(_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, bool(bvec2(false, true))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)))))), true, false)), ! (! (bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec2(bvec2(false, true)))))), _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), ! (! (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), true))), bool(bool(_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, bool(bvec2(false, true))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)))))), true, false))))))), ! (! (_GLF_FALSE(_GLF_IDENTITY(false, true && (false)), (injectionSwitch.x > injectionSwitch.y)) || ((_GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), bool(bvec2(false, true))), _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ! (_GLF_IDENTITY(! ((injectionSwitch.x < injectionSwitch.y)), true && (! ((injectionSwitch.x < injectionSwitch.y))))))), true)), false || (bool(bvec3(_GLF_IDENTITY(false, bool(bvec2(false, true))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))))), bool(bool(_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), bool(bvec2(false, true))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)))))), true, false)), ! (! (bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec2(bvec2(false, true)))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(false, bool(bvec2(false, true))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)), (bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, bool(bvec2(false, true))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true), bvec3(bvec3(bvec3(_GLF_IDENTITY(false, bool(bvec2(false, true))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)))))) || false)))), (bool(bool(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(false, bool(bvec2(false, true))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)), (bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, bool(bvec2(false, true))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true), bvec3(bvec3(bvec3(_GLF_IDENTITY(false, bool(bvec2(false, true))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)))))) || false))))) && true)), true, false))))))))))))))), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec2(bvec2(false, true)))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)))), ! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec4(bvec2(_GLF_IDENTITY(false, ! (! (false))), true), false, true))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)))), ! (! (_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), bool(bvec3(bool(false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))))), bool(bvec2(_GLF_IDENTITY(false, (false) && true), true))), _GLF_TRUE(true, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(-878.088) : injectionSwitch.x)), float(mat4x2(_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(-878.088) : injectionSwitch.x)), sqrt(0.0), length(vec4(0.0, 0.0, 0.0, 0.0)), 0.0, 1.0, 1.0, 1.0, 1.0))) < injectionSwitch.y)), true)))))))))), false)), bool(bvec2(bool(bvec2(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec2(bvec2(false, true)))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)))), ! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec4(bvec2(_GLF_IDENTITY(false, ! (! (false))), true), false, true))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)))), ! (! (_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), bool(bvec3(bool(false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))))), bool(bvec2(_GLF_IDENTITY(false, (false) && true), true))), _GLF_TRUE(true, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(-878.088) : injectionSwitch.x)), float(mat4x2(_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(-878.088) : injectionSwitch.x)), sqrt(0.0), length(vec4(0.0, 0.0, 0.0, 0.0)), 0.0, 1.0, 1.0, 1.0, 1.0))) < injectionSwitch.y)), true)))))))))), false)), false)))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, true, true, true)))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, vec2(mat4x2(injectionSwitch, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0))).x > injectionSwitch.y), _GLF_IDENTITY(bool(bvec3((injectionSwitch.x > injectionSwitch.y), true, false)), _GLF_IDENTITY(! (! (bool(bvec3((injectionSwitch.x > injectionSwitch.y), true, false)))), (! (! (bool(bvec3((injectionSwitch.x > injectionSwitch.y), true, false))))) && true))))))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec3(false, true, true))), (_GLF_IDENTITY(false, false || (false))) && true))), _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > injectionSwitch.y), false || ((_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), mix(vec2((mat2(1.0) * (injectionSwitch))[0], _GLF_FUZZED(-43.99)), vec2(_GLF_FUZZED(77.73), (mat2(1.0) * (injectionSwitch))[1]), bvec2(false, true)))).x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), bool(bvec3(! (injectionSwitch.x > injectionSwitch.y), false, true)))))))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 uint workgroup_size = _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, uvec3(uvec4(gl_WorkGroupSize, 1u))), uvec3(uvec4(gl_WorkGroupSize, 0u))).x, _GLF_IDENTITY(uint(_GLF_IDENTITY(uint(_GLF_IDENTITY(gl_WorkGroupSize, uvec3(uvec4(gl_WorkGroupSize, 0u))).x), ~ (~ (_GLF_IDENTITY(uint(_GLF_IDENTITY(gl_WorkGroupSize, uvec3(_GLF_IDENTITY(uvec4(gl_WorkGroupSize, 0u), (uvec4(gl_WorkGroupSize, 0u)) | uvec4(0u, 0u, 0u, 0u)))).x), (false ? _GLF_FUZZED(_GLF_IDENTITY(num_workgroup, uint(uint(num_workgroup)))) : uint(_GLF_IDENTITY(gl_WorkGroupSize, uvec3(uvec4(gl_WorkGroupSize, 0u))).x))))))), (uint(_GLF_IDENTITY(uint(_GLF_IDENTITY(gl_WorkGroupSize, uvec3(uvec4(gl_WorkGroupSize, 0u))).x), ~ (~ (uint(_GLF_IDENTITY(gl_WorkGroupSize, uvec3(uvec4(gl_WorkGroupSize, 0u))).x)))))) >> 0u));
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(7.8)), bool(false))) > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, true && (false)), (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))))) && true), false, _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), (_GLF_IDENTITY(_GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), bool(bool((injectionSwitch.x < injectionSwitch.y))))), ! (_GLF_IDENTITY(! (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), (! (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))) && true)))) && true), false)), true && (bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))) && true), false, _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED((vec2(-851.838, -65.42) + -33.74).r)), float(injectionSwitch.y), bool(true)))))), (! (_GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], (true ? _GLF_IDENTITY(injectionSwitch[0], min(injectionSwitch[0], injectionSwitch[0])) : _GLF_FUZZED(8848.9218))), injectionSwitch[1])).y), ! (_GLF_IDENTITY(! ((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], (true ? _GLF_IDENTITY(injectionSwitch[0], min(injectionSwitch[0], injectionSwitch[0])) : _GLF_FUZZED(8848.9218))), injectionSwitch[1])).y)), ! (! (! ((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], (true ? _GLF_IDENTITY(injectionSwitch[0], min(injectionSwitch[0], injectionSwitch[0])) : _GLF_FUZZED(8848.9218))), injectionSwitch[1])).y)))))))))) && true)))) && true), false)))))))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 uint workgroup_id = _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, clamp(gl_WorkGroupID, _GLF_IDENTITY(gl_WorkGroupID, (true ? gl_WorkGroupID : _GLF_FUZZED(uvec3(149250u, 184143u, 199710u)))), gl_WorkGroupID)), (true ? _GLF_IDENTITY(gl_WorkGroupID, clamp(gl_WorkGroupID, _GLF_IDENTITY(gl_WorkGroupID, (true ? gl_WorkGroupID : _GLF_FUZZED(uvec3(149250u, 184143u, 199710u)))), gl_WorkGroupID)) : _GLF_FUZZED((ivec4(-4046, _GLF_IDENTITY(-70890, clamp(-70890, _GLF_IDENTITY(-70890, _GLF_IDENTITY(int(ivec4(_GLF_IDENTITY(-70890, (-70890) + 0), 0, 0, 0)), max(int(ivec4(_GLF_IDENTITY(-70890, (-70890) + 0), 0, 0, 0)), int(ivec4(_GLF_IDENTITY(-70890, (-70890) + 0), 0, 0, 0))))), -70890)), -75839, 32951) , uvec3(132204u, 6917u, 133135u))))).x;
 uint workgroup_base = workgroup_size * workgroup_id;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(_GLF_IDENTITY(-244.443, mix(float(-244.443), float(_GLF_FUZZED(-9756.9896)), bool(false))))))) - 0.0), (false ? _GLF_FUZZED(determinant(mat2(-69.30, 3.9, 92.68, _GLF_IDENTITY(-5.2, clamp(_GLF_IDENTITY(-5.2, mix(float(_GLF_IDENTITY(-5.2, clamp(-5.2, -5.2, -5.2))), float(_GLF_FUZZED(-7.3)), bool(false))), -5.2, _GLF_IDENTITY(-5.2, clamp(_GLF_IDENTITY(-5.2, max(-5.2, -5.2)), -5.2, -5.2))))))) : _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY((true ? injectionSwitch.y : _GLF_FUZZED(-244.443)), mix(float(_GLF_FUZZED(80.11)), float(_GLF_IDENTITY((true ? injectionSwitch.y : _GLF_FUZZED(-244.443)), _GLF_IDENTITY(dot(vec4(1.0, 0.0, 0.0, 1.0), vec4(0.0, 1.0, 1.0, 0.0)), dot(vec4(1.0, 0.0, 0.0, 1.0), vec4(0.0, 1.0, 1.0, 0.0))) + ((true ? injectionSwitch.y : _GLF_FUZZED(-244.443))))), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))) - 0.0)))), false || ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bool(injectionSwitch.x > injectionSwitch.y)), bool(bool(bool(bool(_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(mat2x3(injectionSwitch, 0.0, 0.0, 0.0, 0.0))).y, bool(bool(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(mat2x3(injectionSwitch, 0.0, 0.0, 0.0, 0.0))).y)))))))))))))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)), false || (_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 uint virtual_gid = _GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size + subgroup_local_id, 1u * (workgroup_base + subgroup_id * subgroup_size + subgroup_local_id));
 uint next_virtual_gid = _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + subgroup_id * _GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, 1u)))) + (_GLF_IDENTITY(_GLF_IDENTITY(0u, (0u) << 0u), _GLF_IDENTITY(uint(uint(_GLF_IDENTITY(0u, (0u) << 0u))), max(uint(_GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_IDENTITY(0u, 0u + (0u)), (0u) << 0u)), max(uint(_GLF_IDENTITY(_GLF_IDENTITY(0u, 0u + (0u)), (0u) << 0u)), uint(_GLF_IDENTITY(_GLF_IDENTITY(0u, 0u + (0u)), (0u) << 0u))))), uint(uint(_GLF_IDENTITY(0u, (0u) << 0u)))))) << _GLF_IDENTITY(uint(2u), _GLF_IDENTITY(uint(_GLF_IDENTITY(2u, min(2u, _GLF_IDENTITY(2u, (_GLF_IDENTITY(2u, 1u * (2u))) | (2u))))), clamp(uint(2u), uint(2u), uint(_GLF_IDENTITY(_GLF_IDENTITY(2u, max(2u, 2u)), (2u) - 0u))))))), (_GLF_IDENTITY(workgroup_base + subgroup_id * _GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, 1u)))) + (_GLF_IDENTITY(_GLF_IDENTITY(0u, (0u) << 0u), _GLF_IDENTITY(uint(uint(_GLF_IDENTITY(0u, (0u) << 0u))), max(uint(_GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_IDENTITY(0u, 0u + (0u)), (0u) << 0u)), max(uint(_GLF_IDENTITY(_GLF_IDENTITY(0u, 0u + (0u)), (0u) << 0u)), uint(_GLF_IDENTITY(_GLF_IDENTITY(0u, 0u + (0u)), (0u) << 0u))))), uint(uint(_GLF_IDENTITY(0u, (0u) << 0u)))))) << _GLF_IDENTITY(uint(2u), _GLF_IDENTITY(uint(_GLF_IDENTITY(2u, min(2u, _GLF_IDENTITY(2u, (_GLF_IDENTITY(2u, 1u * (2u))) | (2u))))), clamp(uint(2u), uint(2u), uint(_GLF_IDENTITY(_GLF_IDENTITY(2u, max(2u, 2u)), (2u) - 0u))))))), (workgroup_base + subgroup_id * _GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, 1u)))) + (_GLF_IDENTITY(_GLF_IDENTITY(0u, (0u) << 0u), _GLF_IDENTITY(uint(uint(_GLF_IDENTITY(0u, (0u) << 0u))), max(uint(_GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_IDENTITY(0u, 0u + (0u)), (0u) << 0u)), max(uint(_GLF_IDENTITY(_GLF_IDENTITY(0u, 0u + (0u)), (0u) << 0u)), uint(_GLF_IDENTITY(_GLF_IDENTITY(0u, 0u + (0u)), (0u) << 0u))))), uint(uint(_GLF_IDENTITY(0u, (0u) << 0u)))))) << _GLF_IDENTITY(uint(2u), _GLF_IDENTITY(uint(_GLF_IDENTITY(2u, min(2u, _GLF_IDENTITY(2u, (_GLF_IDENTITY(2u, 1u * (2u))) | (2u))))), clamp(uint(2u), uint(2u), uint(_GLF_IDENTITY(_GLF_IDENTITY(2u, max(2u, 2u)), (2u) - 0u)))))))) / 1u)) | (_GLF_IDENTITY(workgroup_base + subgroup_id * _GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, 1u)))) + (_GLF_IDENTITY(_GLF_IDENTITY(0u, (0u) << 0u), _GLF_IDENTITY(uint(uint(_GLF_IDENTITY(0u, (0u) << 0u))), max(uint(_GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_IDENTITY(0u, 0u + (0u)), (0u) << 0u)), max(uint(_GLF_IDENTITY(_GLF_IDENTITY(0u, 0u + (0u)), (0u) << 0u)), uint(_GLF_IDENTITY(_GLF_IDENTITY(0u, 0u + (0u)), (0u) << 0u))))), uint(uint(_GLF_IDENTITY(0u, (0u) << 0u)))))) << _GLF_IDENTITY(uint(2u), _GLF_IDENTITY(uint(_GLF_IDENTITY(2u, min(2u, _GLF_IDENTITY(2u, (_GLF_IDENTITY(2u, 1u * (2u))) | (2u))))), clamp(uint(2u), uint(2u), uint(_GLF_IDENTITY(_GLF_IDENTITY(2u, max(2u, 2u)), (2u) - 0u))))))), (workgroup_base + subgroup_id * _GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, 1u)))) + (_GLF_IDENTITY(_GLF_IDENTITY(0u, (0u) << 0u), _GLF_IDENTITY(uint(uint(_GLF_IDENTITY(0u, (0u) << 0u))), max(uint(_GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_IDENTITY(0u, 0u + (0u)), (0u) << 0u)), max(uint(_GLF_IDENTITY(_GLF_IDENTITY(0u, 0u + (0u)), (0u) << 0u)), uint(_GLF_IDENTITY(_GLF_IDENTITY(0u, 0u + (0u)), (0u) << 0u))))), uint(uint(_GLF_IDENTITY(0u, (0u) << 0u)))))) << _GLF_IDENTITY(uint(2u), _GLF_IDENTITY(uint(_GLF_IDENTITY(2u, min(2u, _GLF_IDENTITY(2u, (_GLF_IDENTITY(2u, 1u * (2u))) | (2u))))), clamp(uint(2u), uint(2u), uint(_GLF_IDENTITY(_GLF_IDENTITY(2u, max(2u, 2u)), (2u) - 0u)))))))) | (0u | 0u)))), uint(_GLF_ZERO(0.0, injectionSwitch.x)) | (_GLF_IDENTITY(workgroup_base + subgroup_id * _GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, 1u)))) + (_GLF_IDENTITY(_GLF_IDENTITY(0u, (0u) << 0u), _GLF_IDENTITY(uint(_GLF_IDENTITY(uint(_GLF_IDENTITY(0u, (0u) << 0u)), (uint(_GLF_IDENTITY(0u, (0u) << 0u))) - 0u)), max(uint(_GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_IDENTITY(0u, 0u + (0u)), (0u) << 0u)), max(uint(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, 0u | (0u))) | 0u), 0u + (0u)), _GLF_IDENTITY((0u), ((0u)) / uint(_GLF_ONE(1.0, injectionSwitch.y))) << 0u)), uint(_GLF_IDENTITY(_GLF_IDENTITY(0u, 0u + (0u)), (0u) << 0u))))), uint(uint(_GLF_IDENTITY(0u, (0u) << 0u)))))) << _GLF_IDENTITY(uint(2u), _GLF_IDENTITY(uint(_GLF_IDENTITY(2u, min(2u, _GLF_IDENTITY(2u, (_GLF_IDENTITY(2u, 1u * (2u))) | (2u))))), clamp(uint(2u), uint(2u), uint(_GLF_IDENTITY(_GLF_IDENTITY(2u, max(2u, 2u)), (2u) - 0u))))))), max(workgroup_base + subgroup_id * _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (subgroup_size) ^ 0u), _GLF_IDENTITY((_GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, 1u)))) + (_GLF_IDENTITY(_GLF_IDENTITY(0u, (0u) << 0u), _GLF_IDENTITY(uint(uint(_GLF_IDENTITY(0u, (0u) << 0u))), max(uint(_GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_IDENTITY(0u, 0u + (0u)), (0u) << 0u)), max(uint(_GLF_IDENTITY(_GLF_IDENTITY(0u, 0u + (0u)), (0u) << 0u)), uint(_GLF_IDENTITY(_GLF_IDENTITY(0u, 0u + (0u)), (0u) << 0u))))), uint(uint(_GLF_IDENTITY(0u, (0u) << 0u)))))) << _GLF_IDENTITY(uint(2u), _GLF_IDENTITY(uint(_GLF_IDENTITY(2u, min(2u, _GLF_IDENTITY(2u, (_GLF_IDENTITY(2u, 1u * (2u))) | (2u))))), clamp(uint(2u), uint(2u), uint(_GLF_IDENTITY(_GLF_IDENTITY(2u, max(2u, 2u)), (2u) - 0u)))))), ((_GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, 1u)))) + _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(0u, (0u) << 0u), _GLF_IDENTITY(_GLF_IDENTITY(uint(uint(_GLF_IDENTITY(0u, (0u) << 0u))), max(uint(_GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_IDENTITY(0u, 0u + (0u)), (0u) << 0u)), max(uint(_GLF_IDENTITY(_GLF_IDENTITY(0u, 0u + (0u)), (0u) << 0u)), uint(_GLF_IDENTITY(_GLF_IDENTITY(0u, 0u + (0u)), (0u) << 0u))))), uint(uint(_GLF_IDENTITY(0u, (0u) << 0u))))), (_GLF_IDENTITY(uint(uint(_GLF_IDENTITY(0u, (0u) << 0u))), max(uint(_GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_IDENTITY(0u, 0u + (0u)), (0u) << 0u)), max(uint(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(0u, 0u + (0u)), (0u) << 0u), min(_GLF_IDENTITY(_GLF_IDENTITY(0u, 0u + (0u)), (0u) << 0u), _GLF_IDENTITY(_GLF_IDENTITY(0u, 0u + (0u)), (0u) << 0u)))), uint(_GLF_IDENTITY(_GLF_IDENTITY(0u, 0u + (0u)), (0u) << 0u))))), uint(_GLF_IDENTITY(uint(_GLF_IDENTITY(0u, (0u) << 0u)), 0u ^ (uint(_GLF_IDENTITY(0u, (0u) << 0u)))))))) - 0u)) << _GLF_IDENTITY(uint(2u), _GLF_IDENTITY(uint(_GLF_IDENTITY(2u, min(2u, _GLF_IDENTITY(2u, (_GLF_IDENTITY(2u, 1u * (2u))) | (2u))))), clamp(uint(2u), uint(2u), uint(_GLF_IDENTITY(_GLF_IDENTITY(2u, max(2u, 2u)), (2u) - 0u)))))), min((_GLF_IDENTITY(_GLF_IDENTITY(0u, (0u) << 0u), _GLF_IDENTITY(_GLF_IDENTITY(uint(uint(_GLF_IDENTITY(0u, (0u) << 0u))), max(uint(_GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_IDENTITY(0u, 0u + (0u)), (0u) << 0u)), max(uint(_GLF_IDENTITY(_GLF_IDENTITY(0u, 0u + (0u)), (0u) << 0u)), uint(_GLF_IDENTITY(_GLF_IDENTITY(0u, 0u + (0u)), (0u) << 0u))))), uint(uint(_GLF_IDENTITY(0u, (0u) << 0u))))), (_GLF_IDENTITY(uint(uint(_GLF_IDENTITY(0u, (0u) << 0u))), max(uint(_GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_IDENTITY(0u, 0u + (0u)), (0u) << 0u)), max(uint(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(0u, 0u + (0u)), (0u) << 0u), min(_GLF_IDENTITY(_GLF_IDENTITY(0u, 0u + (0u)), (0u) << 0u), _GLF_IDENTITY(_GLF_IDENTITY(0u, 0u + (0u)), (0u) << 0u)))), uint(_GLF_IDENTITY(_GLF_IDENTITY(0u, 0u + (0u)), (0u) << 0u))))), uint(_GLF_IDENTITY(uint(_GLF_IDENTITY(0u, (0u) << 0u)), 0u ^ (uint(_GLF_IDENTITY(0u, (0u) << 0u)))))))) - 0u)) << _GLF_IDENTITY(uint(2u), _GLF_IDENTITY(uint(_GLF_IDENTITY(2u, min(2u, _GLF_IDENTITY(2u, (_GLF_IDENTITY(2u, 1u * (2u))) | (2u))))), clamp(uint(2u), uint(2u), uint(_GLF_IDENTITY(_GLF_IDENTITY(2u, max(2u, 2u)), (2u) - 0u)))))), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(0u, (0u) << 0u), _GLF_IDENTITY(_GLF_IDENTITY(uint(uint(_GLF_IDENTITY(0u, (0u) << 0u))), max(uint(_GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_IDENTITY(0u, 0u + (0u)), (0u) << 0u)), max(uint(_GLF_IDENTITY(_GLF_IDENTITY(0u, 0u + (0u)), (0u) << 0u)), uint(_GLF_IDENTITY(_GLF_IDENTITY(0u, 0u + (0u)), (0u) << 0u))))), uint(uint(_GLF_IDENTITY(0u, (0u) << 0u))))), (_GLF_IDENTITY(uint(uint(_GLF_IDENTITY(0u, (0u) << 0u))), max(uint(_GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_IDENTITY(0u, 0u + (0u)), (0u) << 0u)), max(uint(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(0u, 0u + (0u)), (0u) << 0u), min(_GLF_IDENTITY(_GLF_IDENTITY(0u, 0u + (0u)), (0u) << 0u), _GLF_IDENTITY(_GLF_IDENTITY(0u, 0u + (0u)), (0u) << 0u)))), uint(_GLF_IDENTITY(_GLF_IDENTITY(0u, 0u + (0u)), (0u) << 0u))))), uint(_GLF_IDENTITY(uint(_GLF_IDENTITY(0u, (0u) << 0u)), 0u ^ (uint(_GLF_IDENTITY(0u, (0u) << 0u)))))))) - 0u)) << _GLF_IDENTITY(uint(2u), _GLF_IDENTITY(uint(_GLF_IDENTITY(2u, min(2u, _GLF_IDENTITY(2u, (_GLF_IDENTITY(2u, 1u * (2u))) | (2u))))), clamp(uint(2u), uint(2u), uint(_GLF_IDENTITY(_GLF_IDENTITY(2u, max(2u, 2u)), (2u) - 0u)))))), 1u * ((_GLF_IDENTITY(_GLF_IDENTITY(0u, (0u) << 0u), _GLF_IDENTITY(_GLF_IDENTITY(uint(uint(_GLF_IDENTITY(0u, (0u) << 0u))), max(uint(_GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_IDENTITY(0u, 0u + (0u)), (0u) << 0u)), max(uint(_GLF_IDENTITY(_GLF_IDENTITY(0u, 0u + (0u)), (0u) << 0u)), uint(_GLF_IDENTITY(_GLF_IDENTITY(0u, 0u + (0u)), (0u) << 0u))))), uint(uint(_GLF_IDENTITY(0u, (0u) << 0u))))), (_GLF_IDENTITY(uint(uint(_GLF_IDENTITY(0u, (0u) << 0u))), max(uint(_GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_IDENTITY(0u, 0u + (0u)), (0u) << 0u)), max(uint(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(0u, 0u + (0u)), (0u) << 0u), min(_GLF_IDENTITY(_GLF_IDENTITY(0u, 0u + (0u)), (0u) << 0u), _GLF_IDENTITY(_GLF_IDENTITY(0u, 0u + (0u)), (0u) << 0u)))), uint(_GLF_IDENTITY(_GLF_IDENTITY(0u, 0u + (0u)), (0u) << 0u))))), uint(_GLF_IDENTITY(uint(_GLF_IDENTITY(0u, (0u) << 0u)), 0u ^ (uint(_GLF_IDENTITY(0u, (0u) << 0u)))))))) - 0u)) << _GLF_IDENTITY(uint(2u), _GLF_IDENTITY(uint(_GLF_IDENTITY(2u, min(2u, _GLF_IDENTITY(2u, (_GLF_IDENTITY(2u, 1u * (2u))) | (2u))))), clamp(uint(2u), uint(2u), uint(_GLF_IDENTITY(_GLF_IDENTITY(2u, max(2u, 2u)), (2u) - 0u))))))))))) - 0u)), workgroup_base + subgroup_id * _GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, 1u)))) + (_GLF_IDENTITY(_GLF_IDENTITY(0u, (0u) << 0u), _GLF_IDENTITY(uint(uint(_GLF_IDENTITY(0u, (0u) << 0u))), max(uint(_GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_IDENTITY(0u, 0u + (0u)), (0u) << 0u)), max(uint(_GLF_IDENTITY(_GLF_IDENTITY(0u, 0u + (0u)), (0u) << 0u)), uint(_GLF_IDENTITY(_GLF_IDENTITY(0u, 0u + (0u)), (0u) << 0u))))), _GLF_IDENTITY(uint(uint(_GLF_IDENTITY(0u, (0u) << _GLF_IDENTITY(0u, 1u * (0u))))), min(_GLF_IDENTITY(uint(uint(_GLF_IDENTITY(0u, (0u) << _GLF_IDENTITY(0u, 1u * (0u))))), uint(uint(uint(uint(_GLF_IDENTITY(0u, (0u) << _GLF_IDENTITY(0u, 1u * (0u)))))))), uint(uint(_GLF_IDENTITY(0u, (0u) << _GLF_IDENTITY(0u, 1u * (0u)))))))))) << _GLF_IDENTITY(uint(2u), _GLF_IDENTITY(uint(_GLF_IDENTITY(2u, min(2u, _GLF_IDENTITY(2u, (_GLF_IDENTITY(2u, _GLF_IDENTITY(1u * (2u), ~ (~ (_GLF_IDENTITY(1u * (2u), (_GLF_IDENTITY(1u * (2u), (1u * (2u)) | 0u)) ^ 0u)))))) | (2u))))), clamp(uint(2u), uint(2u), uint(_GLF_IDENTITY(_GLF_IDENTITY(2u, max(2u, 2u)), (2u) - 0u))))))))))) + (_GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id + 1), ((subgroup_local_id + 1)) << 0u), (true ? (subgroup_local_id + 1) : _GLF_FUZZED(workgroup_base))) % subgroup_size);
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), _GLF_IDENTITY(true, _GLF_IDENTITY((true) || false, (_GLF_IDENTITY((true) || false, ! (! (_GLF_IDENTITY((true) || false, _GLF_IDENTITY(bool(bvec4((true) || false, false, true, false)), true && (_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec4((true) || false, false, true, false)), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(bool(bvec4((true) || false, false, true, false)), bool(bvec2(bool(bvec4((true) || false, false, true, false)), true))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bvec2(bvec3(bvec2(_GLF_IDENTITY(bool(bvec4((true) || false, false, true, false)), bool(bvec2(bool(bvec4((true) || false, false, true, false)), true))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), true))))), ! (! (_GLF_IDENTITY(bool(bvec4((true) || false, false, true, false)), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(bool(bvec4((true) || false, false, true, false)), bool(bvec2(bool(bvec4(_GLF_IDENTITY((true), true && (_GLF_IDENTITY((true), ((true)) && true))) || false, false, true, false)), true))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bvec2(bvec3(bvec2(_GLF_IDENTITY(bool(bvec4((true) || false, false, true, false)), bool(_GLF_IDENTITY(bvec2(bool(bvec4((true) || false, false, true, false)), true), bvec2(bvec2(bvec2(bool(bvec4((true) || false, false, true, false)), true)))))), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, 1.0 * (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0))))) < _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0)))), true))))))))))))))) && true)) && _GLF_IDENTITY((false), false || (_GLF_IDENTITY((false), ((false)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), false || (false)), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), _GLF_IDENTITY(true, _GLF_IDENTITY((true) || false, (_GLF_IDENTITY((true) || false, ! (! (_GLF_IDENTITY((true) || false, _GLF_IDENTITY(bool(bvec4((true) || false, false, true, false)), true && (_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec4((true) || false, false, true, false)), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(bool(bvec4((true) || false, false, true, false)), bool(bvec2(bool(bvec4((true) || false, false, true, false)), true))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bvec2(bvec3(bvec2(_GLF_IDENTITY(bool(bvec4((true) || false, false, true, false)), bool(bvec2(bool(bvec4((true) || false, false, true, false)), true))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), true))))), ! (! (_GLF_IDENTITY(bool(bvec4((true) || false, false, true, false)), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(bool(bvec4((true) || false, false, true, false)), bool(bvec2(bool(bvec4(_GLF_IDENTITY((true), true && (_GLF_IDENTITY((true), ((true)) && true))) || false, false, true, false)), true))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bvec2(bvec3(bvec2(_GLF_IDENTITY(bool(bvec4((true) || false, false, true, false)), bool(_GLF_IDENTITY(bvec2(bool(bvec4((true) || false, false, true, false)), true), bvec2(bvec2(bvec2(bool(bvec4((true) || false, false, true, false)), true)))))), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, 1.0 * (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0))))) < _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0)))), true))))))))))))))) && true)) && _GLF_IDENTITY((false), false || (_GLF_IDENTITY((false), ((false)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), false || (false)), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bool(bvec3(bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), _GLF_IDENTITY(true, _GLF_IDENTITY((true) || false, (_GLF_IDENTITY((true) || false, ! (! (_GLF_IDENTITY((true) || false, _GLF_IDENTITY(bool(bvec4((true) || false, false, true, false)), true && (_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec4((true) || false, false, true, false)), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(bool(bvec4((true) || false, false, true, false)), bool(bvec2(bool(bvec4((true) || false, false, true, false)), true))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bvec2(bvec3(bvec2(_GLF_IDENTITY(bool(bvec4((true) || false, false, true, false)), bool(bvec2(bool(bvec4((true) || false, false, true, false)), true))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), true))))), ! (! (_GLF_IDENTITY(bool(bvec4((true) || false, false, true, false)), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(bool(bvec4((true) || false, false, true, false)), bool(bvec2(bool(bvec4(_GLF_IDENTITY((true), true && (_GLF_IDENTITY((true), ((true)) && true))) || false, false, true, false)), true))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bvec2(bvec3(bvec2(_GLF_IDENTITY(bool(bvec4((true) || false, false, true, false)), bool(_GLF_IDENTITY(bvec2(bool(bvec4((true) || false, false, true, false)), true), bvec2(bvec2(bvec2(bool(bvec4((true) || false, false, true, false)), true)))))), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, 1.0 * (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0))))) < _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0)))), true))))))))))))))) && true)) && _GLF_IDENTITY((false), false || (_GLF_IDENTITY((false), ((false)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), false || (false)), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false, false))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, true)))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
  }
 uint read_1 = atomicLoad(buf[_GLF_IDENTITY(virtual_gid, clamp(virtual_gid, _GLF_IDENTITY(virtual_gid, (_GLF_IDENTITY(virtual_gid, (virtual_gid) | 0u)) - 0u), virtual_gid))], 4, 64, 0);
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) && true)) || false), (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 atomicStore(buf[next_virtual_gid], _GLF_IDENTITY(uint(read_1 + 1), (_GLF_IDENTITY(_GLF_IDENTITY(uint(read_1 + 1), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(uint(read_1 + 1), (false ? _GLF_FUZZED(num_workgroup) : uint(read_1 + 1)))), (true ? ~ (_GLF_IDENTITY(uint(read_1 + 1), (false ? _GLF_FUZZED(num_workgroup) : uint(read_1 + 1)))) : _GLF_FUZZED(workgroup_size))))), (uint(read_1 + 1)) | (_GLF_IDENTITY(uint(read_1 + 1), 0u + (uint(read_1 + 1)))))) | (uint(read_1 + _GLF_IDENTITY(1, ~ (_GLF_IDENTITY(~ (1), int(ivec2(~ (1), 0)))))))), 4, 64, 4);
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), (_GLF_IDENTITY(injectionSwitch.y, (true ? _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).y, mix(float(_GLF_FUZZED(96.54)), float(injectionSwitch.y), bool(true))) : _GLF_IDENTITY(_GLF_FUZZED(-2202.4152), clamp(_GLF_FUZZED(-2202.4152), _GLF_FUZZED(-2202.4152), _GLF_FUZZED(-2202.4152)))))) / 1.0)))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(false, bool(bvec2(false, false))), true, _GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat3x2(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)), 1.0, determinant(mat2(0.0, 1.0, 0.0, 0.0)), determinant(mat2(1.0, abs(0.0), 0.0, 1.0)), round(length(normalize(round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))))))), mat3x2(mat3(_GLF_IDENTITY(mat3x2(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)), 1.0, determinant(mat2(0.0, 1.0, 0.0, 0.0)), determinant(mat2(1.0, abs(0.0), 0.0, 1.0)), round(length(normalize(round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))))))), (true ? mat3x2(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)), 1.0, determinant(mat2(0.0, 1.0, 0.0, 0.0)), determinant(mat2(1.0, abs(0.0), 0.0, 1.0)), round(length(normalize(round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))))))) : _GLF_FUZZED(mat3x2(6935.8564, -4635.6840, -1.0, 304.886, 137.230, 868.977))))))))).y), ! (_GLF_IDENTITY(! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat3x2(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)), 1.0, determinant(mat2(0.0, 1.0, 0.0, 0.0)), determinant(mat2(1.0, abs(0.0), 0.0, 1.0)), round(length(normalize(round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))))))), mat3x2(mat3(_GLF_IDENTITY(mat3x2(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)), 1.0, determinant(mat2(0.0, 1.0, 0.0, 0.0)), determinant(mat2(1.0, abs(0.0), 0.0, 1.0)), round(length(normalize(round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))))))), (true ? mat3x2(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)), 1.0, determinant(mat2(0.0, 1.0, 0.0, 0.0)), determinant(mat2(1.0, abs(0.0), 0.0, 1.0)), round(length(normalize(round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))))))) : _GLF_FUZZED(mat3x2(6935.8564, -4635.6840, -1.0, 304.886, 137.230, 868.977))))))))).y)), true && (! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat3x2(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)), _GLF_IDENTITY(1.0, float(vec3(1.0, log(1.0), 0.0))), determinant(mat2(0.0, 1.0, 0.0, 0.0)), determinant(mat2(1.0, abs(0.0), 0.0, 1.0)), round(length(normalize(round(length(normalize(vec4(1.0, 1.0, 1.0, _GLF_IDENTITY(1.0, min(1.0, 1.0)))))))))), mat3x2(mat3(_GLF_IDENTITY(mat3x2(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)), 1.0, determinant(mat2(0.0, 1.0, 0.0, 0.0)), determinant(mat2(1.0, abs(_GLF_IDENTITY(0.0, float(mat3(_GLF_IDENTITY(0.0, float(_GLF_IDENTITY(mat2x3(_GLF_IDENTITY(0.0, (0.0) - 0.0), sqrt(0.0), 0.0, 0.0, 1.0, 0.0), mat2x3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0) + (mat2x3(_GLF_IDENTITY(0.0, (0.0) - 0.0), sqrt(0.0), 0.0, 0.0, 1.0, 0.0))))), determinant(mat4(0.0, log(1.0), 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, sqrt(0.0), 0.0, 0.0)), 1.0, _GLF_IDENTITY(dot(vec4(1.0, 1.0, 0.0, 1.0), vec4(0.0, 0.0, 1.0, 0.0)), dot(vec4(1.0, 1.0, 0.0, 1.0), vec4(0.0, 0.0, 1.0, 0.0))), 0.0, 0.0, 1.0, 1.0, determinant(mat4(tan(0.0), 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0)))))), 0.0, 1.0)), round(length(normalize(round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))))))), (true ? mat3x2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)))), injectionSwitch)), (injectionSwitch) * mat2(1.0)), 1.0, determinant(mat2(0.0, 1.0, 0.0, 0.0)), determinant(mat2(1.0, abs(0.0), 0.0, 1.0)), round(length(normalize(round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))))))) : _GLF_FUZZED(mat3x2(6935.8564, -4635.6840, -1.0, 304.886, 137.230, _GLF_IDENTITY(868.977, (false ? _GLF_FUZZED(40.33) : _GLF_IDENTITY(868.977, mix(float(868.977), float(_GLF_FUZZED(-9593.5178)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))))))))).y))))))))), false || (bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, bool(bvec2(false, false))), true, _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * abs(vec2(1.0, 1.0))).y, min(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * abs(vec2(1.0, 1.0))).y, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * abs(vec2(1.0, 1.0))).y, float(mat2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * abs(vec2(1.0, 1.0))).y, _GLF_IDENTITY((true ? _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * abs(vec2(1.0, 1.0))).y : _GLF_IDENTITY(_GLF_FUZZED(-1589.0040), (_GLF_FUZZED(-1589.0040)) + 0.0)), min(_GLF_IDENTITY((true ? _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * abs(vec2(1.0, 1.0))).y : _GLF_IDENTITY(_GLF_FUZZED(-1589.0040), (_GLF_FUZZED(-1589.0040)) + 0.0)), mix(float((true ? _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * abs(vec2(1.0, 1.0))).y : _GLF_IDENTITY(_GLF_FUZZED(-1589.0040), (_GLF_FUZZED(-1589.0040)) + 0.0))), float(_GLF_FUZZED(0.9)), bool(false))), (true ? _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * abs(vec2(1.0, 1.0))).y : _GLF_IDENTITY(_GLF_FUZZED(-1589.0040), (_GLF_FUZZED(-1589.0040)) + 0.0))))), 0.0, 0.0, 0.0)))))))), bvec3(bvec4(bvec3(_GLF_IDENTITY(false, bool(bvec2(false, false))), true, _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * abs(vec2(1.0, 1.0))).y, min(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * abs(vec2(1.0, 1.0))).y, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * abs(vec2(1.0, 1.0))).y, float(mat2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * abs(vec2(1.0, 1.0))).y, _GLF_IDENTITY((true ? _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * abs(vec2(1.0, 1.0))).y : _GLF_IDENTITY(_GLF_FUZZED(-1589.0040), (_GLF_FUZZED(-1589.0040)) + 0.0)), min(_GLF_IDENTITY((true ? _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * abs(vec2(1.0, 1.0))).y : _GLF_IDENTITY(_GLF_FUZZED(-1589.0040), (_GLF_FUZZED(-1589.0040)) + 0.0)), mix(float((true ? _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * abs(vec2(1.0, 1.0))).y : _GLF_IDENTITY(_GLF_FUZZED(-1589.0040), (_GLF_FUZZED(-1589.0040)) + 0.0))), float(_GLF_FUZZED(0.9)), bool(false))), (true ? _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * abs(vec2(1.0, 1.0))).y : _GLF_IDENTITY(_GLF_FUZZED(-1589.0040), (_GLF_FUZZED(-1589.0040)) + 0.0))))), 0.0, 0.0, 0.0)))))))), false)))))))))
  barrier();
 uint read_2 = atomicLoad(buf[virtual_gid], _GLF_IDENTITY(4, (_GLF_IDENTITY(4, clamp(4, 4, _GLF_IDENTITY(4, (4) << 0)))) >> 0), 64, 0);
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 atomicStore(buf[next_virtual_gid], uint(read_1 + 1 == read_2) + 1, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(4, (true ? _GLF_IDENTITY(4, max(_GLF_IDENTITY(4, 1 * (4)), 4)) : _GLF_FUZZED(-48510))), (_GLF_IDENTITY(_GLF_IDENTITY(4, (true ? _GLF_IDENTITY(4, max(4, 4)) : _GLF_FUZZED(-48510))), int(ivec4(_GLF_IDENTITY(4, (_GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, bool(_GLF_IDENTITY(bvec3(true, false, false), bvec3(bvec4(bvec3(true, false, false), _GLF_IDENTITY(true, (true) && true)))))))) ? _GLF_IDENTITY(4, max(4, 4)) : _GLF_FUZZED(-48510))), 1, 1, 0)))) | (_GLF_IDENTITY(4, (true ? _GLF_IDENTITY(4, max(4, 4)) : _GLF_FUZZED(-48510))))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(4, 0 ^ (4)), (true ? _GLF_IDENTITY(4, max(4, _GLF_IDENTITY(4, min(4, _GLF_IDENTITY(4, (_GLF_IDENTITY(4, (4) | 0)) ^ 0))))) : _GLF_FUZZED(-48510))), (_GLF_IDENTITY(_GLF_IDENTITY(4, (true ? _GLF_IDENTITY(4, max(4, 4)) : _GLF_FUZZED(-48510))), int(ivec4(_GLF_IDENTITY(4, (true ? _GLF_IDENTITY(4, max(4, 4)) : _GLF_FUZZED(-48510))), 1, 1, 0)))) | (_GLF_IDENTITY(4, (true ? _GLF_IDENTITY(4, max(4, 4)) : _GLF_FUZZED(-48510)))))) | (_GLF_IDENTITY(_GLF_IDENTITY(4, (true ? _GLF_IDENTITY(4, max(4, _GLF_IDENTITY(4, max(4, 4)))) : _GLF_FUZZED(-48510))), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(4, (_GLF_IDENTITY(true, (true) || false) ? _GLF_IDENTITY(4, max(4, 4)) : _GLF_FUZZED(-48510))), int(ivec4(_GLF_IDENTITY(4, _GLF_IDENTITY((true ? _GLF_IDENTITY(4, _GLF_IDENTITY(max(4, 4), clamp(max(4, 4), max(4, 4), max(4, 4)))) : _GLF_FUZZED(-48510)), (_GLF_IDENTITY((true ? _GLF_IDENTITY(4, _GLF_IDENTITY(max(4, 4), clamp(max(4, 4), max(4, 4), max(4, 4)))) : _GLF_FUZZED(-48510)), (_GLF_IDENTITY((true ? _GLF_IDENTITY(4, _GLF_IDENTITY(max(4, 4), clamp(max(4, 4), max(4, 4), max(4, 4)))) : _GLF_FUZZED(-48510)), (false ? _GLF_FUZZED(-62593) : (true ? _GLF_IDENTITY(4, _GLF_IDENTITY(max(4, _GLF_IDENTITY(4, ~ (~ (4)))), clamp(max(4, 4), max(4, 4), max(4, 4)))) : _GLF_FUZZED(-48510))))) | ((true ? _GLF_IDENTITY(4, _GLF_IDENTITY(max(4, 4), clamp(max(4, 4), max(4, 4), max(4, 4)))) : _GLF_FUZZED(-48510))))) << 0)), 1, 1, 0)))), (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(4, (_GLF_IDENTITY(true, (true) || false) ? _GLF_IDENTITY(4, max(4, 4)) : _GLF_FUZZED(-48510))), int(ivec4(_GLF_IDENTITY(4, _GLF_IDENTITY((true ? _GLF_IDENTITY(4, _GLF_IDENTITY(max(4, 4), clamp(max(4, 4), max(4, 4), max(4, 4)))) : _GLF_FUZZED(-48510)), (_GLF_IDENTITY((true ? _GLF_IDENTITY(4, _GLF_IDENTITY(max(4, 4), clamp(max(4, 4), max(4, 4), max(4, 4)))) : _GLF_FUZZED(-48510)), (_GLF_IDENTITY((true ? _GLF_IDENTITY(4, _GLF_IDENTITY(max(4, 4), clamp(max(4, 4), max(4, 4), max(4, 4)))) : _GLF_FUZZED(-48510)), (false ? _GLF_FUZZED(-62593) : (true ? _GLF_IDENTITY(4, _GLF_IDENTITY(max(4, _GLF_IDENTITY(4, ~ (~ (4)))), clamp(max(4, 4), max(4, 4), max(4, 4)))) : _GLF_FUZZED(-48510))))) | ((true ? _GLF_IDENTITY(4, _GLF_IDENTITY(max(4, 4), clamp(max(4, 4), max(4, 4), max(4, 4)))) : _GLF_FUZZED(-48510))))) << 0)), 1, 1, 0)))), ((_GLF_IDENTITY(_GLF_IDENTITY(4, (_GLF_IDENTITY(true, (true) || false) ? _GLF_IDENTITY(4, max(4, 4)) : _GLF_FUZZED(-48510))), int(ivec4(_GLF_IDENTITY(4, _GLF_IDENTITY((true ? _GLF_IDENTITY(4, _GLF_IDENTITY(max(4, 4), clamp(max(4, 4), max(4, 4), max(4, 4)))) : _GLF_FUZZED(-48510)), (_GLF_IDENTITY((true ? _GLF_IDENTITY(4, _GLF_IDENTITY(max(4, 4), clamp(max(4, 4), max(4, 4), max(4, 4)))) : _GLF_FUZZED(-48510)), (_GLF_IDENTITY((true ? _GLF_IDENTITY(4, _GLF_IDENTITY(max(4, 4), clamp(max(4, 4), max(4, 4), max(4, 4)))) : _GLF_FUZZED(-48510)), (false ? _GLF_FUZZED(-62593) : (true ? _GLF_IDENTITY(4, _GLF_IDENTITY(max(4, _GLF_IDENTITY(4, ~ (~ (4)))), clamp(max(4, 4), max(4, 4), max(4, 4)))) : _GLF_FUZZED(-48510))))) | ((true ? _GLF_IDENTITY(4, _GLF_IDENTITY(max(4, 4), clamp(max(4, 4), max(4, 4), max(4, 4)))) : _GLF_FUZZED(-48510))))) << 0)), 1, 1, 0))))) << 0)) | 0) | (_GLF_IDENTITY(4, (true ? _GLF_IDENTITY(4, max(4, 4)) : _GLF_FUZZED(-48510))))))), _GLF_IDENTITY(64, (64) << _GLF_IDENTITY((_GLF_IDENTITY(1, (_GLF_IDENTITY(false ? _GLF_FUZZED(-33861) : 1, max(false ? _GLF_FUZZED(-33861) : 1, _GLF_IDENTITY(false ? _GLF_FUZZED(-33861) : 1, (_GLF_IDENTITY(0 << _GLF_IDENTITY(int(4), int(4)), (true ? 0 << _GLF_IDENTITY(int(_GLF_IDENTITY(4, (int(_GLF_ZERO(0.0, injectionSwitch.x)) >> _GLF_IDENTITY(int(2), int(2))) + (4))), int(4)) : _GLF_FUZZED(-19767)))) | (false ? _GLF_FUZZED(-33861) : 1)))))) ^ 1), ~ _GLF_IDENTITY((_GLF_IDENTITY(~ (_GLF_IDENTITY((_GLF_IDENTITY(1, (1) >> _GLF_IDENTITY(0, int(ivec3(0, 1, int(_GLF_ONE(_GLF_IDENTITY(1.0, float(mat3x2(1.0, 0.0, 1.0, 1.0, 0.0, 1.0))), injectionSwitch.y)))))) ^ _GLF_IDENTITY(1, (1) >> (0 >> _GLF_IDENTITY(int(1), int(1))))), ((1 ^ _GLF_IDENTITY(_GLF_IDENTITY(1, _GLF_IDENTITY((_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) | 0)) - 0)), 1 * ((_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) | 0)) - 0)))) | (1)), (1) + (_GLF_IDENTITY(0, max(0, 0)) << _GLF_IDENTITY(int(5), int(_GLF_IDENTITY(5, max(5, 5)))))))) * 1)), _GLF_IDENTITY(_GLF_IDENTITY((~ (_GLF_IDENTITY((1 ^ 1), (_GLF_IDENTITY(_GLF_IDENTITY((1 ^ 1), int(int(_GLF_IDENTITY((1 ^ 1), ~ (~ ((1 ^ 1))))))), (false ? _GLF_FUZZED(91175) : _GLF_IDENTITY((1 ^ 1), int(int(_GLF_IDENTITY((1 ^ 1), ~ (~ ((1 ^ 1)))))))))) * 1))) | (~ (_GLF_IDENTITY((1 ^ 1), ((1 ^ 1)) * 1))), min(_GLF_IDENTITY((~ (_GLF_IDENTITY((1 ^ 1), (_GLF_IDENTITY(_GLF_IDENTITY((1 ^ 1), int(int(_GLF_IDENTITY((1 ^ 1), ~ (~ ((1 ^ 1))))))), (false ? _GLF_FUZZED(91175) : _GLF_IDENTITY((1 ^ 1), int(int(_GLF_IDENTITY((1 ^ 1), ~ (~ ((1 ^ 1)))))))))) * 1))) | (~ (_GLF_IDENTITY((1 ^ 1), ((1 ^ 1)) * 1))), (false ? _GLF_FUZZED(-87616) : (~ (_GLF_IDENTITY((1 ^ 1), (_GLF_IDENTITY(_GLF_IDENTITY((1 ^ 1), int(int(_GLF_IDENTITY((1 ^ 1), ~ (~ ((1 ^ 1))))))), (false ? _GLF_FUZZED(91175) : _GLF_IDENTITY((1 ^ 1), int(int(_GLF_IDENTITY((1 ^ 1), ~ (~ ((1 ^ 1)))))))))) * 1))) | (~ (_GLF_IDENTITY((1 ^ 1), ((1 ^ 1)) * 1))))), (~ (_GLF_IDENTITY((1 ^ 1), (_GLF_IDENTITY(_GLF_IDENTITY((1 ^ 1), int(int(_GLF_IDENTITY((1 ^ 1), ~ (~ ((1 ^ 1))))))), (false ? _GLF_FUZZED(91175) : _GLF_IDENTITY((1 ^ 1), int(int(_GLF_IDENTITY((1 ^ 1), ~ (~ ((1 ^ 1)))))))))) * 1))) | (~ (_GLF_IDENTITY((1 ^ 1), ((1 ^ 1)) * 1))))), ((~ (_GLF_IDENTITY((1 ^ 1), (_GLF_IDENTITY(_GLF_IDENTITY((1 ^ 1), int(int(_GLF_IDENTITY((1 ^ 1), ~ (~ ((1 ^ _GLF_IDENTITY(1, (1) / 1)))))))), (false ? _GLF_FUZZED(91175) : _GLF_IDENTITY((1 ^ 1), int(int(_GLF_IDENTITY((1 ^ 1), ~ (~ ((1 ^ 1)))))))))) * 1))) | (~ (_GLF_IDENTITY((1 ^ 1), ((1 ^ 1)) * 1)))) << 0))), (_GLF_IDENTITY((_GLF_IDENTITY(~ (_GLF_IDENTITY((_GLF_IDENTITY(1, (1) >> _GLF_IDENTITY(0, int(ivec3(0, 1, int(_GLF_ONE(_GLF_IDENTITY(1.0, float(mat3x2(1.0, 0.0, 1.0, 1.0, 0.0, 1.0))), injectionSwitch.y)))))) ^ _GLF_IDENTITY(1, (1) >> (0 >> _GLF_IDENTITY(int(1), int(1))))), ((1 ^ _GLF_IDENTITY(_GLF_IDENTITY(1, (1) | (1)), (1) + (_GLF_IDENTITY(0, max(0, 0)) << _GLF_IDENTITY(int(5), int(5)))))) * 1)), _GLF_IDENTITY((~ (_GLF_IDENTITY((1 ^ 1), (_GLF_IDENTITY(_GLF_IDENTITY((1 ^ 1), int(int(_GLF_IDENTITY((1 ^ 1), ~ (_GLF_IDENTITY(~ ((1 ^ 1)), (~ ((1 ^ 1))) / (1 | 1))))))), (false ? _GLF_FUZZED(91175) : _GLF_IDENTITY((1 ^ 1), int(int(_GLF_IDENTITY((1 ^ 1), ~ (~ ((1 ^ 1)))))))))) * 1))) | (~ (_GLF_IDENTITY((1 ^ 1), ((1 ^ 1)) * 1))), ((~ _GLF_IDENTITY((_GLF_IDENTITY((1 ^ _GLF_IDENTITY(1, ~ (~ (1)))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((1 ^ _GLF_IDENTITY(1, min(1, 1))), ((1 ^ _GLF_IDENTITY(1, min(1, 1)))) ^ 0), int(int(_GLF_IDENTITY((1 ^ 1), ~ (~ _GLF_IDENTITY(((1 ^ 1)), max(((1 ^ 1)), _GLF_IDENTITY(((1 ^ 1)), (((1 ^ 1))) >> 0)))))))), (_GLF_IDENTITY(false, true && (false)) ? _GLF_FUZZED(91175) : _GLF_IDENTITY((1 ^ 1), int(int(_GLF_IDENTITY((1 ^ 1), ~ (~ ((1 ^ 1)))))))))) * 1)), max((_GLF_IDENTITY((1 ^ _GLF_IDENTITY(1, ~ (~ (1)))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((1 ^ _GLF_IDENTITY(1, min(1, 1))), ((1 ^ _GLF_IDENTITY(1, min(1, 1)))) ^ 0), int(int(_GLF_IDENTITY((1 ^ 1), ~ (~ _GLF_IDENTITY(((1 ^ 1)), max(((1 ^ 1)), _GLF_IDENTITY(((1 ^ 1)), (((1 ^ 1))) >> 0)))))))), (_GLF_IDENTITY(false, true && (false)) ? _GLF_FUZZED(91175) : _GLF_IDENTITY((1 ^ 1), int(int(_GLF_IDENTITY((1 ^ 1), ~ (~ ((1 ^ 1)))))))))) * 1)), _GLF_IDENTITY((_GLF_IDENTITY((1 ^ _GLF_IDENTITY(1, ~ (~ (1)))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((1 ^ _GLF_IDENTITY(1, min(1, 1))), ((1 ^ _GLF_IDENTITY(1, min(1, 1)))) ^ 0), int(int(_GLF_IDENTITY((1 ^ 1), ~ (~ _GLF_IDENTITY(((1 ^ 1)), max(((1 ^ 1)), _GLF_IDENTITY(((1 ^ 1)), (((1 ^ 1))) >> 0)))))))), (_GLF_IDENTITY(false, true && (false)) ? _GLF_FUZZED(91175) : _GLF_IDENTITY((1 ^ 1), int(int(_GLF_IDENTITY((1 ^ 1), ~ (~ ((1 ^ 1)))))))))) * 1)), int(ivec2((_GLF_IDENTITY((1 ^ _GLF_IDENTITY(1, ~ (~ (1)))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((1 ^ _GLF_IDENTITY(1, min(1, 1))), ((1 ^ _GLF_IDENTITY(1, min(1, 1)))) ^ 0), int(int(_GLF_IDENTITY((1 ^ 1), ~ (~ _GLF_IDENTITY(((1 ^ 1)), max(((1 ^ 1)), _GLF_IDENTITY(((1 ^ 1)), (((1 ^ 1))) >> 0)))))))), (_GLF_IDENTITY(false, true && (false)) ? _GLF_FUZZED(91175) : _GLF_IDENTITY((1 ^ 1), int(int(_GLF_IDENTITY((1 ^ 1), ~ (~ ((1 ^ 1)))))))))) * 1)), 1)))))) | (~ (_GLF_IDENTITY((1 ^ 1), ((1 ^ 1)) * 1)))) << 0))), ((_GLF_IDENTITY(~ (_GLF_IDENTITY((_GLF_IDENTITY(1, (1) >> _GLF_IDENTITY(0, int(ivec3(_GLF_IDENTITY(0, 0 + (0)), 1, _GLF_IDENTITY(int(_GLF_ONE(_GLF_IDENTITY(1.0, float(mat3x2(1.0, _GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, 1.0 * (0.0)), _GLF_IDENTITY(0.0, (0.0) + 0.0))), 1.0, 1.0, 0.0, 1.0))), injectionSwitch.y)), int(int(int(_GLF_ONE(_GLF_IDENTITY(1.0, float(mat3x2(1.0, _GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, 1.0 * (0.0)), _GLF_IDENTITY(0.0, (0.0) + 0.0))), 1.0, 1.0, 0.0, 1.0))), injectionSwitch.y))))))))) ^ _GLF_IDENTITY(1, (1) >> (0 >> _GLF_IDENTITY(_GLF_IDENTITY(int(1), int(1)), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(_GLF_IDENTITY(int(1), int(1)), (_GLF_IDENTITY(int(_GLF_IDENTITY(1, int(_GLF_IDENTITY(ivec3(1, (0 & 28359), 0), (ivec3(1, (0 & 28359), 0)) - ivec3(0, 0, 0))))), int(1))) - 0) : _GLF_FUZZED(-22504)))))), ((1 ^ _GLF_IDENTITY(_GLF_IDENTITY(1, (1) | (1)), (1) + (_GLF_IDENTITY(0, max(0, 0)) << _GLF_IDENTITY(int(5), int(5)))))) * 1)), _GLF_IDENTITY((~ (_GLF_IDENTITY((1 ^ 1), (_GLF_IDENTITY(_GLF_IDENTITY((1 ^ 1), int(int(_GLF_IDENTITY((1 ^ _GLF_IDENTITY(1, int(ivec3(_GLF_IDENTITY(1, (1) | 0), (0 << _GLF_IDENTITY(int(6), int(6))), 1)))), _GLF_IDENTITY(~ (~ ((1 ^ 1))), clamp(_GLF_IDENTITY(~ (~ ((1 ^ 1))), (~ (~ ((1 ^ 1)))) << 0), ~ (~ ((1 ^ 1))), ~ (~ ((1 ^ 1))))))))), (_GLF_IDENTITY(false ? _GLF_FUZZED(91175) : _GLF_IDENTITY((1 ^ 1), int(int(_GLF_IDENTITY((1 ^ 1), ~ (~ ((_GLF_IDENTITY(1, min(1, 1)) ^ 1))))))), (_GLF_IDENTITY(false ? _GLF_FUZZED(91175) : _GLF_IDENTITY((1 ^ 1), int(int(_GLF_IDENTITY((1 ^ 1), ~ (~ ((_GLF_IDENTITY(1, min(1, 1)) ^ 1))))))), ~ (~ (false ? _GLF_FUZZED(91175) : _GLF_IDENTITY((1 ^ 1), int(int(_GLF_IDENTITY((1 ^ 1), ~ (~ ((_GLF_IDENTITY(1, min(1, 1)) ^ 1))))))))))) | 0)))) * 1))) | (~ (_GLF_IDENTITY((1 ^ 1), ((1 ^ 1)) * 1))), ((~ (_GLF_IDENTITY((_GLF_IDENTITY(1 ^ 1, min(_GLF_IDENTITY(1 ^ 1, 0 | (1 ^ 1)), 1 ^ 1))), (_GLF_IDENTITY(_GLF_IDENTITY((1 ^ 1), int(int(_GLF_IDENTITY((1 ^ _GLF_IDENTITY(1, 0 ^ (1))), ~ (~ ((1 ^ 1))))))), (false ? _GLF_FUZZED(91175) : _GLF_IDENTITY((1 ^ 1), int(int(_GLF_IDENTITY((1 ^ 1), ~ (~ ((1 ^ 1)))))))))) * 1))) | (~ (_GLF_IDENTITY((1 ^ 1), ((1 ^ 1)) * 1)))) << 0)))) / _GLF_IDENTITY(1, (1) | (1)))) | ((_GLF_IDENTITY(~ (_GLF_IDENTITY((_GLF_IDENTITY(1, (1) >> _GLF_IDENTITY(0, int(ivec3(0, 1, int(_GLF_ONE(_GLF_IDENTITY(1.0, float(mat3x2(1.0, 0.0, 1.0, 1.0, 0.0, 1.0))), injectionSwitch.y)))))) ^ _GLF_IDENTITY(1, (1) >> (0 >> _GLF_IDENTITY(int(1), int(1))))), ((1 ^ _GLF_IDENTITY(_GLF_IDENTITY(1, (1) | (1)), (1) + (_GLF_IDENTITY(0, max(0, 0)) << _GLF_IDENTITY(int(5), int(5)))))) * 1)), _GLF_IDENTITY((~ (_GLF_IDENTITY((1 ^ 1), (_GLF_IDENTITY(_GLF_IDENTITY((1 ^ 1), int(_GLF_IDENTITY(int(_GLF_IDENTITY((1 ^ 1), ~ (~ ((1 ^ 1))))), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? int(_GLF_IDENTITY((1 ^ 1), ~ (~ ((1 ^ 1))))) : _GLF_FUZZED(-26393))))), (false ? _GLF_FUZZED(91175) : _GLF_IDENTITY((1 ^ 1), int(int(_GLF_IDENTITY((1 ^ 1), ~ (~ _GLF_IDENTITY(((1 ^ 1)), (((1 ^ 1))) * ((int(_GLF_ONE(1.0, injectionSwitch.y)) << _GLF_IDENTITY(int(3), int(3))) >> _GLF_IDENTITY(int(3), int(3)))))))))))) * 1))) | (~ (_GLF_IDENTITY((1 ^ 1), ((1 ^ 1)) * 1))), ((~ (_GLF_IDENTITY((1 ^ 1), (_GLF_IDENTITY(_GLF_IDENTITY((1 ^ 1), int(int(_GLF_IDENTITY((1 ^ 1), ~ (~ ((1 ^ 1))))))), (false ? _GLF_FUZZED(91175) : _GLF_IDENTITY((1 ^ 1), int(int(_GLF_IDENTITY((1 ^ 1), ~ (_GLF_IDENTITY(~ ((1 ^ 1)), 1 * (_GLF_IDENTITY(~ ((1 ^ 1)), 0 ^ (~ ((1 ^ 1)))))))))))))) * 1))) | (~ (_GLF_IDENTITY((1 ^ 1), ((1 ^ 1)) * 1)))) << 0))))))), _GLF_IDENTITY(4, clamp(4, 4, _GLF_IDENTITY(4, ~ (_GLF_IDENTITY(_GLF_IDENTITY(~ (4), (true ? ~ (4) : _GLF_FUZZED(_GLF_IDENTITY(-58493, int(_GLF_IDENTITY(ivec4(-58493, int(_GLF_ZERO(0.0, injectionSwitch.x)), int(_GLF_ONE(1.0, injectionSwitch.y)), 1), min(ivec4(-58493, int(_GLF_ZERO(0.0, injectionSwitch.x)), int(_GLF_ONE(1.0, injectionSwitch.y)), 1), ivec4(-58493, int(_GLF_ZERO(0.0, injectionSwitch.x)), int(_GLF_ONE(1.0, injectionSwitch.y)), 1)))))))), clamp(_GLF_IDENTITY(~ (4), (true ? ~ (4) : _GLF_FUZZED(-58493))), _GLF_IDENTITY(~ _GLF_IDENTITY((4), ((4)) | 0), (true ? ~ (4) : _GLF_FUZZED(-58493))), _GLF_IDENTITY(~ (4), (true ? ~ (4) : _GLF_FUZZED(-58493))))))))));
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, _GLF_IDENTITY(false, ! (! (false))), true), bvec3(bvec3(bvec3(false, false, true))))))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(vec2(injectionSwitch)), vec2(1.0, 1.0) * (_GLF_IDENTITY(vec2(vec2(injectionSwitch)), clamp(vec2(vec2(injectionSwitch)), vec2(vec2(injectionSwitch)), vec2(vec2(injectionSwitch))))))).x > injectionSwitch.y))) || false)))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, true && (false)))))))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
}
