#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_WRAPPED_IF_TRUE(true))
  {
   for(int _injected_loop_counter = int(_GLF_ZERO(0.0, injectionSwitch.x)); _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
    {
     if(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), bool(bool(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), ! (! (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), true && (_GLF_WRAPPED_IF_FALSE(false))))))))))
      {
      }
     else
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
       if(_GLF_WRAPPED_IF_TRUE(true))
        {
         if(_GLF_DEAD(false))
          {
           do
            {
             barrier();
            }
           while(_GLF_WRAPPED_LOOP(false));
          }
        }
       else
        {
        }
       if(_GLF_DEAD(false))
        barrier();
      }
    }
  }
 else
  {
  }
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_WRAPPED_IF_TRUE(true))
  {
   do
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
        {
         barrier();
        }
      }
     do
      {
       for(int _injected_loop_counter = (0 >> _GLF_IDENTITY(int(6), int(6))); _GLF_IDENTITY(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter, 0 ^ (_injected_loop_counter)) != _GLF_IDENTITY(1, int(ivec4(1, 0, 1, (1 | 1))))), ! (! (_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_GLF_IDENTITY(_injected_loop_counter, 0 ^ (_injected_loop_counter)) != _GLF_IDENTITY(1, int(ivec4(1, 0, 1, (1 | 1)))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(_injected_loop_counter, 0 ^ (_injected_loop_counter)) != _GLF_IDENTITY(1, int(ivec4(1, 0, 1, (1 | 1)))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_injected_loop_counter, 0 ^ (_injected_loop_counter)) != _GLF_IDENTITY(1, int(ivec4(1, 0, 1, (1 | 1))))), bool(bvec4(! (_GLF_IDENTITY(_injected_loop_counter, 0 ^ (_injected_loop_counter)) != _GLF_IDENTITY(1, int(ivec4(1, 0, 1, (1 | 1))))), true, true, false)))))))))))); _injected_loop_counter ++)
        {
         for(int _injected_loop_counter = ((1 << _GLF_IDENTITY(int(_GLF_IDENTITY(6, (6) | (6))), int(6))) >> _GLF_IDENTITY(int(6), int(6))); _GLF_WRAPPED_LOOP(_injected_loop_counter > _GLF_IDENTITY(0, clamp(0, _GLF_IDENTITY(0, ~ (~ (0))), 0))); _injected_loop_counter --)
          {
           if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(2.4), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(-3.5)), bvec2(true, false))), _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)))), injectionSwitch)).y))), (injectionSwitch.x > injectionSwitch.y))))
            {
            }
           else
            {
             if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true), true), bvec2(bvec4(bvec2(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true), true), false, true)))), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true), true), bvec2(bvec4(bvec2(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true), true), false, true)))), ! (! (bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true), true), bvec2(bvec4(bvec2(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true), true), false, true))))))))), (bool(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true), true), bvec2(bvec4(bvec2(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true), true), false, true)))), ! (! (bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true), true), bvec2(bvec4(bvec2(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true), true), false, true)))))))))) && true)))))))
              barrier();
            }
           if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(168.861)))), float(_GLF_FUZZED(4.5)), bool(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(reflect(injectionSwitch, vec2(489.239, -2764.1886))) : _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))).y))))), (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_IDENTITY(_GLF_FUZZED(168.861), float(_GLF_IDENTITY(mat2(_GLF_FUZZED(168.861), 0.0, abs(0.0), 0.0), mat2(mat3(mat2(_GLF_FUZZED(168.861), 0.0, abs(0.0), 0.0))))))))), float(_GLF_FUZZED(4.5)), bool(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)).x > injectionSwitch.y)))))) || false)) && true)))), (false) || _GLF_IDENTITY(false, true && (_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY((false) || false, ! (! (_GLF_IDENTITY((false) || false, ! (! ((false) || false))))))), (_GLF_IDENTITY(false, true && (false))) || false)))))), _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat4(injectionSwitch, cos(0.0), 0.0, sqrt(0.0), determinant(mat2(1.0, 0.0, 1.0, 1.0)), _GLF_IDENTITY(round(length(normalize(1.0))), 1.0 * (_GLF_IDENTITY(round(length(normalize(1.0))), clamp(round(_GLF_IDENTITY(length(normalize(1.0)), max(length(normalize(1.0)), length(normalize(1.0))))), round(length(normalize(1.0))), round(length(normalize(1.0))))))), _GLF_IDENTITY(1.0, 1.0 * (1.0)), determinant(mat4(1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, _GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0))) - length(0.0)), 1.0, 1.0, 1.0)), 0.0, 0.0, 0.0, abs(abs(0.0)), abs(1.0), 0.0, 0.0), (_GLF_IDENTITY(mat4(injectionSwitch, cos(0.0), 0.0, _GLF_IDENTITY(sqrt(0.0), float(mat3x4(sqrt(0.0), 0.0, 0.0, 1.0, 0.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 1.0, 1.0, 1.0, 1.0))), determinant(mat2(1.0, _GLF_IDENTITY(0.0, mix(float(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-3564.1055)), bool(false)))), float(_GLF_FUZZED(8679.4693)), bool(false))), 1.0, 1.0)), round(length(normalize(1.0))), _GLF_IDENTITY(1.0, max(1.0, 1.0)), determinant(mat4(1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, _GLF_IDENTITY(0.0, _GLF_IDENTITY(float(mat3(_GLF_IDENTITY(0.0, float(float(0.0))), 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, _GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(round(length(normalize(vec2(1.0, 1.0)))), 0.0, log(1.0))), dot(vec3(1.0, 0.0, 0.0), vec3(round(length(normalize(vec2(1.0, 1.0)))), 0.0, log(1.0)))))), (_GLF_IDENTITY(false, (false) && true) ? _GLF_FUZZED(-1.7) : float(mat3(_GLF_IDENTITY(0.0, float(float(0.0))), 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, _GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(round(length(normalize(vec2(1.0, 1.0)))), 0.0, log(1.0))), dot(vec3(1.0, 0.0, 0.0), vec3(round(length(normalize(vec2(1.0, 1.0)))), 0.0, log(1.0))))))))), 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0)), 0.0, 0.0, 0.0, abs(_GLF_IDENTITY(abs(_GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(length(71.39)) : 0.0))), (abs(_GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(length(71.39)) : 0.0)))) * 1.0)), abs(1.0), _GLF_IDENTITY(0.0, max(0.0, _GLF_IDENTITY(0.0, (0.0) + 0.0))), 0.0), (true ? mat4(injectionSwitch, cos(0.0), 0.0, sqrt(0.0), determinant(mat2(1.0, 0.0, 1.0, 1.0)), round(length(normalize(1.0))), 1.0, _GLF_IDENTITY(determinant(mat4(1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-45.61)), float(0.0), bool(true))), 1.0, 0.0, 1.0, _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(4309.1283))), 1.0, 1.0, 1.0, 1.0)), mix(float(_GLF_FUZZED(-767.468)), float(_GLF_IDENTITY(determinant(mat4(1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-45.61)), float(0.0), bool(true))), 1.0, 0.0, 1.0, _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(4309.1283))), 1.0, 1.0, 1.0, 1.0)), float(mat3(determinant(mat4(1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-45.61)), float(0.0), bool(true))), 1.0, 0.0, 1.0, _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(4309.1283))), 1.0, 1.0, 1.0, 1.0)), 0.0, _GLF_IDENTITY(dot(vec2(1.0, 1.0), vec2(0.0, 0.0)), dot(vec2(1.0, 1.0), vec2(0.0, 0.0))), 0.0, 1.0, 1.0, 0.0, 1.0, 0.0)))), bool(true))), 0.0, 0.0, 0.0, abs(abs(0.0)), abs(1.0), 0.0, 0.0) : _GLF_FUZZED(mat4(5.2, -521.829, -134.985, 910.259, 9996.0047, 1062.7513, _GLF_IDENTITY(1.8, clamp(1.8, 1.8, 1.8)), -2.8, -22.05, -4.1, -72.94, 120.723, -1856.5159, -94.60, -62.13, 2.1))))) - mat4(0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, (0.0) - 0.0), 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)))).y), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(22.38)), bool(false))))))), true)), bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) + vec2(0.0, 0.0), (_GLF_IDENTITY((injectionSwitch), max((injectionSwitch), (injectionSwitch))) + vec2(0.0, 0.0)) * mat2(1.0))).y), ! (! ((injectionSwitch.x > injectionSwitch.y)))), _GLF_IDENTITY(true, _GLF_IDENTITY((true), ! (_GLF_IDENTITY(! ((true)), (! ((true))) && true))) && true)), bvec2(bvec3(_GLF_IDENTITY(bvec2(_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) + vec2(0.0, 0.0), (_GLF_IDENTITY((injectionSwitch), max((injectionSwitch), (injectionSwitch))) + vec2(0.0, 0.0)) * mat2(1.0))).y), ! (! ((injectionSwitch.x > injectionSwitch.y)))), _GLF_IDENTITY(true, _GLF_IDENTITY((true), ! (_GLF_IDENTITY(! ((true)), (! ((true))) && true))) && true)), _GLF_IDENTITY(bvec2(bvec3(bvec2(_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) + vec2(0.0, 0.0), (_GLF_IDENTITY((injectionSwitch), max((injectionSwitch), (injectionSwitch))) + vec2(0.0, 0.0)) * mat2(1.0))).y), ! (! ((injectionSwitch.x > injectionSwitch.y)))), _GLF_IDENTITY(true, _GLF_IDENTITY((true), ! (_GLF_IDENTITY(! ((true)), (! ((true))) && true))) && true)), false)), bvec2(bvec2(bvec2(bvec3(bvec2(_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) + vec2(0.0, 0.0), (_GLF_IDENTITY((injectionSwitch), max((injectionSwitch), (injectionSwitch))) + vec2(0.0, 0.0)) * mat2(1.0))).y), ! (! ((injectionSwitch.x > injectionSwitch.y)))), _GLF_IDENTITY(true, _GLF_IDENTITY((true), ! (_GLF_IDENTITY(! ((true)), (! ((true))) && true))) && true)), false)))))), true)))), _GLF_IDENTITY(bool(bvec4(bool(bvec2(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-64.33)), float(injectionSwitch.x), bool(true))) > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)).y), ! (! ((injectionSwitch.x > injectionSwitch.y)))), _GLF_IDENTITY(true, _GLF_IDENTITY((true) && true, bool(bvec4(_GLF_IDENTITY((_GLF_IDENTITY(true, false || (true))) && true, bool(bvec2((true) && true, _GLF_IDENTITY(true, false || (true))))), false, false, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y)))))))), false, true, false)), true && _GLF_IDENTITY((_GLF_IDENTITY(bool(bvec4(bool(bvec2(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-64.33)), float(injectionSwitch.x), bool(true))) > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)).y), ! (! ((injectionSwitch.x > injectionSwitch.y)))), _GLF_IDENTITY(true, _GLF_IDENTITY((true) && true, bool(bvec4(_GLF_IDENTITY((true) && true, bool(bvec2((true) && true, true))), false, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), false, true, false)), bool(_GLF_IDENTITY(bool(bool(bvec4(bool(bvec2(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-64.33)), float(injectionSwitch.x), bool(true))), clamp(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-64.33)), float(injectionSwitch.x), bool(true))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-64.33)), float(injectionSwitch.x), bool(true))), clamp(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-64.33)), float(injectionSwitch.x), bool(true))), _GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-64.33)), float(injectionSwitch.x), bool(true))), _GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-64.33)), float(injectionSwitch.x), bool(true))))), _GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-64.33)), float(injectionSwitch.x), bool(true))))) > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)).y), ! (! ((injectionSwitch.x > injectionSwitch.y)))), _GLF_IDENTITY(_GLF_IDENTITY(true, _GLF_IDENTITY((true) && true, bool(bvec4(_GLF_IDENTITY((true) && true, bool(bvec2((true) && true, true))), false, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), bool(bvec4(_GLF_IDENTITY(true, _GLF_IDENTITY((true) && true, bool(bvec4(_GLF_IDENTITY((true) && true, bool(bvec2((true) && true, true))), false, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), true, false, false))))), false, true, false))), ! (! (bool(bool(bvec4(_GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-64.33)), float(injectionSwitch.x), bool(_GLF_IDENTITY(true, false || (true))))) > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch), (true ? _GLF_IDENTITY((injectionSwitch), vec2(1.0, 1.0) * ((injectionSwitch))) : _GLF_FUZZED(vec2(804.083, 6.5)))) + vec2(_GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0)).y), ! (! ((injectionSwitch.x > injectionSwitch.y)))), _GLF_IDENTITY(true, _GLF_IDENTITY((true) && true, bool(bvec4(_GLF_IDENTITY((true) && true, bool(bvec2((true) && true, true))), false, false, _GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec3((injectionSwitch.x > injectionSwitch.y), true, true)))))))))), (bool(bvec2(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-64.33)), float(injectionSwitch.x), bool(_GLF_IDENTITY(true, false || (true))))) > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch), (true ? _GLF_IDENTITY((injectionSwitch), vec2(1.0, 1.0) * ((injectionSwitch))) : _GLF_FUZZED(vec2(804.083, 6.5)))) + vec2(_GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0)).y), ! (! ((injectionSwitch.x > injectionSwitch.y)))), _GLF_IDENTITY(true, _GLF_IDENTITY((true) && true, bool(bvec4(_GLF_IDENTITY((true) && true, bool(bvec2((true) && true, true))), false, false, _GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec3((injectionSwitch.x > injectionSwitch.y), true, true))))))))))) || false), false, true, false))))))))), false || ((_GLF_IDENTITY(bool(bvec4(bool(bvec2(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-64.33)), float(injectionSwitch.x), bool(true))) > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)).y), ! (! ((injectionSwitch.x > injectionSwitch.y)))), _GLF_IDENTITY(true, _GLF_IDENTITY((true) && true, bool(bvec4(_GLF_IDENTITY((true) && true, bool(bvec2((true) && true, true))), false, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), false, true, false)), bool(_GLF_IDENTITY(bool(bool(bvec4(bool(bvec2(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-64.33)), float(injectionSwitch.x), bool(true))), clamp(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-64.33)), float(injectionSwitch.x), bool(true))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-64.33)), float(injectionSwitch.x), bool(true))), clamp(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-64.33)), float(injectionSwitch.x), bool(true))), _GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-64.33)), float(injectionSwitch.x), bool(true))), _GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-64.33)), float(injectionSwitch.x), bool(true))))), _GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-64.33)), float(injectionSwitch.x), bool(true))))) > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)).y), ! (! ((injectionSwitch.x > injectionSwitch.y)))), _GLF_IDENTITY(_GLF_IDENTITY(true, _GLF_IDENTITY((true) && true, bool(bvec4(_GLF_IDENTITY((true) && true, bool(bvec2((true) && true, true))), false, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), bool(bvec4(_GLF_IDENTITY(true, _GLF_IDENTITY((true) && true, bool(bvec4(_GLF_IDENTITY((true) && true, bool(bvec2((true) && true, true))), false, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), true, false, false))))), false, true, false))), ! (! (bool(bool(bvec4(_GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-64.33)), float(injectionSwitch.x), bool(_GLF_IDENTITY(true, false || (true))))) > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch), (true ? _GLF_IDENTITY((injectionSwitch), vec2(1.0, 1.0) * ((injectionSwitch))) : _GLF_FUZZED(vec2(804.083, 6.5)))) + vec2(_GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0)).y), ! (! ((injectionSwitch.x > injectionSwitch.y)))), _GLF_IDENTITY(true, _GLF_IDENTITY((true) && true, bool(bvec4(_GLF_IDENTITY((true) && true, bool(bvec2((true) && true, true))), false, false, _GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec3((injectionSwitch.x > injectionSwitch.y), true, true)))))))))), (bool(bvec2(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-64.33)), float(injectionSwitch.x), bool(_GLF_IDENTITY(true, false || (true))))) > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch), (true ? _GLF_IDENTITY((injectionSwitch), vec2(1.0, 1.0) * ((injectionSwitch))) : _GLF_FUZZED(vec2(804.083, 6.5)))) + vec2(_GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0)).y), ! (! ((injectionSwitch.x > injectionSwitch.y)))), _GLF_IDENTITY(true, _GLF_IDENTITY((true) && true, bool(bvec4(_GLF_IDENTITY((true) && true, bool(bvec2((true) && true, true))), false, false, _GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec3((injectionSwitch.x > injectionSwitch.y), true, true))))))))))) || false), false, true, false))))))))))))), (bool(bvec2(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y), _GLF_IDENTITY(! _GLF_IDENTITY((_GLF_IDENTITY(! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0)) + 0.0))), true && (! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, 1.0 * (injectionSwitch.y)), (injectionSwitch.y) / 1.0)) + 0.0)))))), true && (_GLF_IDENTITY((! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0)) + 0.0)))), ((! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0)) + 0.0))))) || false))), ! (_GLF_IDENTITY(! _GLF_IDENTITY((! (! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(mat4(injectionSwitch.y, 0.0, 0.0, 1.0, log(1.0), 0.0, 1.0, 0.0, cos(0.0), 1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0, 0.0, 0.0, 1.0))))))), bool(_GLF_IDENTITY(bvec2((! (! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(mat4(injectionSwitch.y, 0.0, 0.0, 1.0, log(1.0), 0.0, 1.0, 0.0, cos(0.0), 1.0, _GLF_ONE(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), injectionSwitch.y), 0.0, 0.0, 0.0, 0.0, 1.0))))))), true), bvec2(_GLF_IDENTITY(bvec2(bvec2((! (! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(mat4(injectionSwitch.y, 0.0, 0.0, 1.0, log(1.0), 0.0, 1.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)), cos(0.0), 1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0, 0.0, 0.0, 1.0))))))), true)), bvec2(bvec4(bvec2(bvec2((! (! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(mat4(injectionSwitch.y, 0.0, 0.0, 1.0, log(1.0), 0.0, 1.0, _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-4.7)), bool(false))), cos(0.0), 1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0, 0.0, 0.0, 1.0))))))), true)), false, true))))))), false || (! (! (! ((_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch))) / sqrt(vec2(1.0, 1.0))), _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)))).x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y))))))))), true))) && true), _GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) && true)) && true), false, false)))))))
            {
             do
              {
               do
                {
                 if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                  {
                  }
                 else
                  {
                   if(_GLF_DEAD(false))
                    barrier();
                  }
                 if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, false || (false)))), (_GLF_IDENTITY(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, false || (false)))), (_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, false || (false))))) || false)) && true)))
                  {
                   do
                    {
                     if(_GLF_WRAPPED_IF_TRUE(true))
                      {
                       if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
                        {
                         if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))), false || (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y)))))), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)))
                          {
                           if(_GLF_WRAPPED_IF_TRUE(true))
                            {
                             if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y))))))))
                              {
                               if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
                                {
                                 barrier();
                                }
                               else
                                {
                                 if(_GLF_DEAD(false))
                                  {
                                   for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != int(_GLF_ZERO(0.0, injectionSwitch.x))); _injected_loop_counter --)
                                    {
                                     barrier();
                                    }
                                  }
                                }
                              }
                            }
                           else
                            {
                            }
                           if(_GLF_WRAPPED_IF_TRUE(true))
                            {
                             barrier();
                            }
                           else
                            {
                            }
                          }
                        }
                       else
                        {
                        }
                      }
                     else
                      {
                      }
                    }
                   while(_GLF_WRAPPED_LOOP(false));
                  }
                 else
                  {
                   if(_GLF_WRAPPED_IF_FALSE(false))
                    {
                     for(int _injected_loop_counter = (0 << _GLF_IDENTITY(int(0), int(0))); _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
                      {
                       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), ! (! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))))))
                        barrier();
                      }
                    }
                   else
                    {
                     barrier();
                    }
                   if(_GLF_DEAD(false))
                    barrier();
                   do
                    {
                     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.y, float(mat3x2(injectionSwitch.y, 0.0, 0.0, exp(0.0), 1.0, 1.0)))), clamp((_GLF_IDENTITY(injectionSwitch.y, float(mat3x2(injectionSwitch.y, 0.0, 0.0, exp(0.0), 1.0, 1.0)))), (_GLF_IDENTITY(injectionSwitch.y, float(mat3x2(injectionSwitch.y, 0.0, 0.0, exp(0.0), 1.0, 1.0)))), (_GLF_IDENTITY(injectionSwitch.y, float(mat3x2(injectionSwitch.y, 0.0, 0.0, exp(0.0), 1.0, 1.0)))))) + 0.0)), ((injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y, (_GLF_IDENTITY(injectionSwitch.y, float(mat3x2(injectionSwitch.y, 0.0, 0.0, exp(0.0), 1.0, 1.0)))) + 0.0))) && true))))
                      {
                       if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
                        {
                         if(_GLF_DEAD(false))
                          barrier();
                        }
                       else
                        {
                        }
                       if(_GLF_WRAPPED_IF_FALSE(false))
                        {
                        }
                       else
                        {
                         if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                          {
                           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                            barrier();
                          }
                         else
                          {
                           if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))), true && (_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, bool(bool(false))))))))))
                            barrier();
                           barrier();
                          }
                        }
                      }
                    }
                   while(_GLF_WRAPPED_LOOP(false));
                  }
                }
               while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
              }
             while(_GLF_WRAPPED_LOOP(false));
            }
          }
         if(_GLF_DEAD(false))
          barrier();
        }
      }
     while(_GLF_WRAPPED_LOOP(false));
     for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < (1 | 1)); _injected_loop_counter ++)
      {
       if(_GLF_WRAPPED_IF_FALSE(false))
        {
        }
       else
        {
         if(_GLF_DEAD(false))
          barrier();
        }
      }
    }
   while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * 1.0), tan(_GLF_IDENTITY(0.0, _GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(5.0) : 0.0), max((_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(6734.2771)), float(injectionSwitch.y), bool(true))))) ? _GLF_FUZZED(5.0) : 0.0), _GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(5.0) : 0.0), mix(float((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(5.0) : 0.0)), float(_GLF_IDENTITY(_GLF_FUZZED(818.382), (_GLF_FUZZED(818.382)) + 0.0)), bool(false))))))) + _GLF_IDENTITY((injectionSwitch.x), clamp((injectionSwitch.x), (injectionSwitch.x), (injectionSwitch.x)))) > _GLF_IDENTITY(injectionSwitch.y, float(_GLF_IDENTITY(float(injectionSwitch.y), max(float(injectionSwitch.y), float(injectionSwitch.y)))))))));
  }
 else
  {
  }
 uint subgroup_size = gl_SubgroupSize;
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bool(bool(bool(bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))), bool(bvec3(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bool(bool(bool(bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))), false, false))))
  barrier();
 uint num_workgroup = _GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups.x, 0u | (gl_NumWorkGroups.x)), ~ (_GLF_IDENTITY(_GLF_IDENTITY(~ (_GLF_IDENTITY(gl_NumWorkGroups.x, 0u | (gl_NumWorkGroups.x))), _GLF_IDENTITY(uint(uvec2(~ (_GLF_IDENTITY(gl_NumWorkGroups.x, 0u | (gl_NumWorkGroups.x))), 1u)), 0u ^ (_GLF_IDENTITY(uint(uvec2(~ _GLF_IDENTITY((_GLF_IDENTITY(gl_NumWorkGroups.x, 0u | (gl_NumWorkGroups.x))), ((_GLF_IDENTITY(gl_NumWorkGroups.x, 0u | (gl_NumWorkGroups.x)))) ^ (0u << _GLF_IDENTITY(uint(0u), uint(0u)))), 1u)), 0u ^ (uint(uvec2(~ (_GLF_IDENTITY(gl_NumWorkGroups.x, 0u | (gl_NumWorkGroups.x))), 1u))))))), max(~ (_GLF_IDENTITY(gl_NumWorkGroups.x, 0u | (gl_NumWorkGroups.x))), ~ (_GLF_IDENTITY(gl_NumWorkGroups.x, 0u | (_GLF_IDENTITY(gl_NumWorkGroups, uvec3(gl_NumWorkGroups[0], gl_NumWorkGroups[1], gl_NumWorkGroups[2])).x)))))));
 uint workgroup_size = gl_WorkGroupSize.x;
 uint workgroup_id = gl_WorkGroupID.x;
 if(_GLF_DEAD(false))
  {
   if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, float(mat2x4(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0), 1.0, 0.0, 0.0, determinant(mat4(0.0, 0.0, 0.0, 0.0, 1.0, log(1.0), 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0)), 0.0, 0.0, 1.0))) < _GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, float(mat3x4(injectionSwitch.y, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0))), injectionSwitch.y))))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(-7381.9686) : injectionSwitch.y))))))))
      {
       if(_GLF_WRAPPED_IF_TRUE(true))
        {
         barrier();
        }
       else
        {
        }
      }
     barrier();
    }
   else
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
  }
 if(_GLF_WRAPPED_IF_FALSE(false))
  {
  }
 else
  {
   for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter < 1, ! (! (_injected_loop_counter < 1)))); _injected_loop_counter ++)
    {
     if(_GLF_DEAD(false))
      {
       for(int _injected_loop_counter = _GLF_IDENTITY(_GLF_IDENTITY((1 ^ (0 << _GLF_IDENTITY(int(3), int(3)))), (true ? (1 ^ (0 << _GLF_IDENTITY(int(3), int(3)))) : _GLF_FUZZED(-56152))), ((_GLF_IDENTITY(1 ^ (0 << _GLF_IDENTITY(int(3), int(3))), (_GLF_IDENTITY(1 ^ (0 << _GLF_IDENTITY(int(3), int(3))), (false ? _GLF_FUZZED(77568) : 1 ^ (0 << _GLF_IDENTITY(_GLF_IDENTITY(int(3), (true ? _GLF_IDENTITY(int(3), (int(3)) + 0) : _GLF_FUZZED(findMSB(workgroup_size)))), int(3)))))) - 0))) - 0); _GLF_WRAPPED_LOOP(_injected_loop_counter > _GLF_IDENTITY(0, (0) * 1)); _injected_loop_counter --)
        {
         if(_GLF_WRAPPED_IF_FALSE(false))
          {
          }
         else
          {
           do
            {
             barrier();
            }
           while(_GLF_WRAPPED_LOOP(false));
          }
        }
      }
    }
  }
 uint workgroup_base = workgroup_size * workgroup_id;
 uint virtual_gid = workgroup_base + subgroup_id * _GLF_IDENTITY(subgroup_size, ~ _GLF_IDENTITY((~ (_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(0u, (0u) | 0u) + (_GLF_IDENTITY(subgroup_size, uint(_GLF_IDENTITY(uint(subgroup_size), ~ (~ (_GLF_IDENTITY(uint(subgroup_size), min(uint(subgroup_size), uint(subgroup_size)))))))))))), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? (~ (_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(0u, (0u) | 0u) + (_GLF_IDENTITY(subgroup_size, uint(_GLF_IDENTITY(uint(subgroup_size), ~ (~ (_GLF_IDENTITY(uint(subgroup_size), min(uint(subgroup_size), uint(subgroup_size)))))))))))) : _GLF_FUZZED(workgroup_size)))) + _GLF_IDENTITY(subgroup_local_id, (false ? _GLF_FUZZED(atomicMax(workgroup_id, subgroup_size)) : subgroup_local_id));
 if(_GLF_DEAD(false))
  barrier();
 do
  {
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
    }
   else
    {
     if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)) : _GLF_FUZZED(log(vec2(6.0, 1703.8556))))), vec2(vec2(_GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)) : _GLF_FUZZED(log(vec2(6.0, 1703.8556)))))))).x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(vec3(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(612.599), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(_GLF_IDENTITY(99.30, (true ? 99.30 : _GLF_FUZZED(798.916))))), bvec2(true, false))), 1.0))), log(vec2(1.0, 1.0)) + (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(vec3(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(612.599), _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-7.5)), vec2(_GLF_FUZZED(74.68), (injectionSwitch)[1]), bvec2(false, true))), injectionSwitch))) - _GLF_IDENTITY(vec2(0.0, 0.0), min(vec2(0.0, 0.0), _GLF_IDENTITY(vec2(0.0, 0.0), min(vec2(0.0, 0.0), vec2(0.0, 0.0))))))), vec2(mat3x2((injectionSwitch), 0.0, sqrt(log(1.0)), 1.0, round(length(normalize(vec3(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y))))))))[1], (false ? _GLF_FUZZED(-74.54) : _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-7.5)), vec2(_GLF_FUZZED(74.68), (injectionSwitch)[1]), bvec2(false, true))), injectionSwitch))) - _GLF_IDENTITY(vec2(0.0, 0.0), min(vec2(0.0, 0.0), _GLF_IDENTITY(vec2(0.0, 0.0), min(vec2(0.0, 0.0), vec2(0.0, 0.0))))))), vec2(mat3x2((injectionSwitch), 0.0, sqrt(log(1.0)), 1.0, round(length(normalize(vec3(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y))))))))[1]))), _GLF_IDENTITY(_GLF_IDENTITY(vec2((injectionSwitch)[0], _GLF_FUZZED(99.30)), vec2(1.0, 1.0) * (vec2((injectionSwitch)[0], _GLF_FUZZED(99.30)))), _GLF_IDENTITY((_GLF_IDENTITY(true, (_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), ! (! (! (true))))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) ? _GLF_IDENTITY(vec2((injectionSwitch)[0], _GLF_FUZZED(99.30)), (vec2((injectionSwitch)[0], _GLF_FUZZED(99.30))) * mat2(1.0)) : _GLF_FUZZED(injectionSwitch)), max((true ? _GLF_IDENTITY(vec2((injectionSwitch)[_GLF_IDENTITY(0, (0) - 0)], _GLF_FUZZED(99.30)), _GLF_IDENTITY((vec2((injectionSwitch)[0], _GLF_FUZZED(99.30))), ((vec2((injectionSwitch)[0], _GLF_FUZZED(99.30)))) * vec2(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y))) * mat2(1.0)) : _GLF_FUZZED(injectionSwitch)), (true ? _GLF_IDENTITY(vec2((injectionSwitch)[0], _GLF_FUZZED(99.30)), (vec2((injectionSwitch)[0], _GLF_FUZZED(99.30))) * mat2(1.0)) : _GLF_FUZZED(injectionSwitch))))), bvec2(true, false))), 1.0))), mix(vec2((_GLF_IDENTITY(injectionSwitch, vec2(vec3(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(612.599), _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-7.5)), vec2(_GLF_FUZZED(74.68), (injectionSwitch)[1]), bvec2(false, true))), injectionSwitch))) - _GLF_IDENTITY(vec2(0.0, 0.0), min(vec2(0.0, 0.0), _GLF_IDENTITY(vec2(0.0, 0.0), min(vec2(0.0, 0.0), vec2(0.0, 0.0))))))), vec2(mat3x2((injectionSwitch), 0.0, sqrt(log(1.0)), 1.0, round(length(normalize(vec3(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y))))))))[1], (false ? _GLF_FUZZED(-74.54) : _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-7.5)), vec2(_GLF_FUZZED(74.68), (injectionSwitch)[1]), bvec2(false, true))), injectionSwitch))) - _GLF_IDENTITY(vec2(0.0, 0.0), min(vec2(0.0, 0.0), _GLF_IDENTITY(vec2(0.0, 0.0), min(vec2(0.0, 0.0), vec2(0.0, 0.0))))))), vec2(mat3x2((injectionSwitch), 0.0, sqrt(log(1.0)), 1.0, round(length(normalize(vec3(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y))))))))[1]))), _GLF_IDENTITY(_GLF_IDENTITY(vec2((injectionSwitch)[0], _GLF_FUZZED(99.30)), vec2(1.0, 1.0) * (vec2((injectionSwitch)[0], _GLF_FUZZED(99.30)))), _GLF_IDENTITY((_GLF_IDENTITY(true, (_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), ! (! (! (true))))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) ? _GLF_IDENTITY(vec2((injectionSwitch)[0], _GLF_FUZZED(99.30)), (vec2((injectionSwitch)[0], _GLF_FUZZED(99.30))) * mat2(1.0)) : _GLF_FUZZED(injectionSwitch)), max((true ? _GLF_IDENTITY(vec2((injectionSwitch)[_GLF_IDENTITY(0, (0) - 0)], _GLF_FUZZED(99.30)), _GLF_IDENTITY((vec2((injectionSwitch)[0], _GLF_FUZZED(99.30))), ((vec2((injectionSwitch)[0], _GLF_FUZZED(99.30)))) * vec2(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y))) * mat2(1.0)) : _GLF_FUZZED(injectionSwitch)), (true ? _GLF_IDENTITY(vec2((injectionSwitch)[0], _GLF_FUZZED(99.30)), (vec2((injectionSwitch)[0], _GLF_FUZZED(99.30))) * mat2(1.0)) : _GLF_FUZZED(injectionSwitch))))), bvec2(true, false))), 1.0))))[0], (_GLF_IDENTITY(injectionSwitch, vec2(vec3(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(612.599), _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-7.5)), vec2(_GLF_FUZZED(74.68), (injectionSwitch)[1]), bvec2(false, true))), injectionSwitch))) - _GLF_IDENTITY(vec2(0.0, 0.0), min(vec2(0.0, 0.0), _GLF_IDENTITY(vec2(0.0, 0.0), min(vec2(0.0, 0.0), vec2(0.0, 0.0))))))), vec2(mat3x2((injectionSwitch), 0.0, sqrt(log(1.0)), 1.0, round(length(normalize(vec3(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y))))))))[1], (false ? _GLF_FUZZED(-74.54) : _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-7.5)), vec2(_GLF_FUZZED(74.68), (injectionSwitch)[1]), bvec2(false, true))), injectionSwitch))) - _GLF_IDENTITY(vec2(0.0, 0.0), min(vec2(0.0, 0.0), _GLF_IDENTITY(vec2(0.0, 0.0), min(vec2(0.0, 0.0), vec2(0.0, 0.0))))))), vec2(mat3x2((injectionSwitch), 0.0, sqrt(log(1.0)), 1.0, round(length(normalize(vec3(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y))))))))[1]))), _GLF_IDENTITY(_GLF_IDENTITY(vec2((injectionSwitch)[0], _GLF_FUZZED(99.30)), vec2(1.0, 1.0) * (vec2((injectionSwitch)[0], _GLF_FUZZED(99.30)))), _GLF_IDENTITY((_GLF_IDENTITY(true, (_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), ! (! (! (true))))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) ? _GLF_IDENTITY(vec2((injectionSwitch)[0], _GLF_FUZZED(99.30)), (vec2((injectionSwitch)[0], _GLF_FUZZED(99.30))) * mat2(1.0)) : _GLF_FUZZED(injectionSwitch)), max((true ? _GLF_IDENTITY(vec2((injectionSwitch)[_GLF_IDENTITY(0, (0) - 0)], _GLF_FUZZED(99.30)), _GLF_IDENTITY((vec2((injectionSwitch)[0], _GLF_FUZZED(99.30))), ((vec2((injectionSwitch)[0], _GLF_FUZZED(99.30)))) * vec2(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y))) * mat2(1.0)) : _GLF_FUZZED(injectionSwitch)), (true ? _GLF_IDENTITY(vec2((injectionSwitch)[0], _GLF_FUZZED(99.30)), (vec2((injectionSwitch)[0], _GLF_FUZZED(99.30))) * mat2(1.0)) : _GLF_FUZZED(injectionSwitch))))), bvec2(true, false))), 1.0))))[1]), vec2(_GLF_FUZZED(-6919.7620), _GLF_FUZZED(-0.4)), bvec2(false, false))))).x > injectionSwitch.y)))) && _GLF_IDENTITY(true, ! (! (true)))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(-49.63)))))), (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(vec3(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(612.599), _GLF_IDENTITY(float(_GLF_IDENTITY(float(_GLF_IDENTITY(_GLF_FUZZED(612.599), min(_GLF_FUZZED(612.599), _GLF_IDENTITY(_GLF_FUZZED(612.599), (false ? _GLF_FUZZED(-1075.7448) : _GLF_FUZZED(612.599)))))), (false ? _GLF_FUZZED(1.2) : _GLF_IDENTITY(float(_GLF_IDENTITY(_GLF_FUZZED(612.599), min(_GLF_FUZZED(612.599), _GLF_IDENTITY(_GLF_FUZZED(612.599), (false ? _GLF_FUZZED(-1075.7448) : _GLF_FUZZED(612.599)))))), (true ? float(_GLF_IDENTITY(_GLF_FUZZED(612.599), min(_GLF_FUZZED(612.599), _GLF_IDENTITY(_GLF_FUZZED(612.599), (false ? _GLF_FUZZED(-1075.7448) : _GLF_FUZZED(612.599)))))) : _GLF_FUZZED(-2163.0607)))))), (float(_GLF_IDENTITY(float(_GLF_IDENTITY(_GLF_FUZZED(612.599), min(_GLF_FUZZED(612.599), _GLF_IDENTITY(_GLF_FUZZED(612.599), (false ? _GLF_FUZZED(-1075.7448) : _GLF_FUZZED(612.599)))))), (false ? _GLF_FUZZED(1.2) : _GLF_IDENTITY(float(_GLF_IDENTITY(_GLF_FUZZED(612.599), min(_GLF_FUZZED(612.599), _GLF_IDENTITY(_GLF_FUZZED(612.599), (false ? _GLF_FUZZED(-1075.7448) : _GLF_FUZZED(612.599)))))), (true ? float(_GLF_IDENTITY(_GLF_FUZZED(612.599), min(_GLF_FUZZED(612.599), _GLF_IDENTITY(_GLF_FUZZED(612.599), (false ? _GLF_FUZZED(-1075.7448) : _GLF_FUZZED(612.599)))))) : _GLF_FUZZED(-2163.0607))))))) - 0.0)), (_GLF_FUZZED(612.599)) + sin(sin(0.0))), (injectionSwitch)[_GLF_IDENTITY(1, int(ivec2(1, 0)))]), _GLF_IDENTITY(vec2(_GLF_IDENTITY((injectionSwitch), _GLF_IDENTITY(((injectionSwitch)), (((injectionSwitch))) * vec2(1.0, 1.0)) / vec2(1.0, 1.0))[0], _GLF_FUZZED(_GLF_IDENTITY(99.30, (true ? 99.30 : _GLF_FUZZED(4.3))))), (vec2(_GLF_IDENTITY((injectionSwitch), ((injectionSwitch)) / vec2(1.0, 1.0))[0], _GLF_FUZZED(_GLF_IDENTITY(99.30, (true ? 99.30 : _GLF_FUZZED(4.3)))))) * mat2(1.0)), bvec2(true, _GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), (bool(false)) || false))), _GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec4(true, false, false, false)), bool(bool(bool(bvec4(true, false, false, false))))))), ! (! (! (_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec4(true, false, false, false)), bool(bool(bool(bvec4(true, false, false, false)))))))))))))))))), (_GLF_IDENTITY(injectionSwitch, mix(_GLF_IDENTITY(vec2(_GLF_IDENTITY(_GLF_FUZZED(612.599), (_GLF_FUZZED(612.599)) + sin(sin(0.0))), (injectionSwitch)[1]), mix(vec2((vec2(_GLF_IDENTITY(_GLF_FUZZED(612.599), (_GLF_FUZZED(612.599)) + sin(sin(0.0))), (injectionSwitch)[1]))[0], (vec2(_GLF_IDENTITY(_GLF_FUZZED(612.599), (_GLF_FUZZED(612.599)) + sin(sin(0.0))), (injectionSwitch)[1]))[1]), vec2(_GLF_FUZZED(6.7), _GLF_FUZZED(657.635)), bvec2(false, false))), vec2((injectionSwitch)[0], _GLF_FUZZED(99.30)), bvec2(true, _GLF_IDENTITY(false, (false) || false))))) * vec2(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y))), 1.0))).x > injectionSwitch.y)))) && true), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(-49.63)))))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(vec3(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY(_GLF_FUZZED(612.599), (_GLF_FUZZED(612.599)) + sin(sin(0.0))), (injectionSwitch)[1]), _GLF_IDENTITY(vec2(_GLF_IDENTITY((injectionSwitch), ((injectionSwitch)) / vec2(1.0, 1.0))[0], _GLF_FUZZED(_GLF_IDENTITY(99.30, (true ? 99.30 : _GLF_FUZZED(4.3))))), (vec2(_GLF_IDENTITY((injectionSwitch), ((injectionSwitch)) / vec2(1.0, 1.0))[0], _GLF_FUZZED(_GLF_IDENTITY(99.30, (true ? 99.30 : _GLF_FUZZED(4.3)))))) * mat2(1.0)), bvec2(true, _GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), (bool(false)) || false))), true)))))), (_GLF_IDENTITY(injectionSwitch, mix(_GLF_IDENTITY(vec2(_GLF_IDENTITY(_GLF_FUZZED(612.599), (_GLF_FUZZED(612.599)) + sin(sin(0.0))), (injectionSwitch)[1]), mix(vec2((vec2(_GLF_IDENTITY(_GLF_FUZZED(612.599), (_GLF_FUZZED(612.599)) + sin(sin(0.0))), (injectionSwitch)[1]))[0], (vec2(_GLF_IDENTITY(_GLF_FUZZED(612.599), (_GLF_FUZZED(612.599)) + sin(sin(0.0))), (injectionSwitch)[1]))[1]), vec2(_GLF_FUZZED(6.7), _GLF_FUZZED(657.635)), bvec2(false, false))), vec2((injectionSwitch)[0], _GLF_FUZZED(99.30)), bvec2(true, false)))) * vec2(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y))), 1.0))).x > injectionSwitch.y))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(vec3(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY(_GLF_FUZZED(_GLF_IDENTITY(612.599, max(612.599, _GLF_IDENTITY(612.599, min(612.599, 612.599))))), _GLF_IDENTITY((_GLF_FUZZED(612.599)), (false ? _GLF_FUZZED(-396.321) : (_GLF_FUZZED(612.599)))) + sin(sin(0.0))), (injectionSwitch)[1]), _GLF_IDENTITY(vec2(_GLF_IDENTITY((injectionSwitch), ((injectionSwitch)) / vec2(1.0, 1.0))[0], _GLF_FUZZED(_GLF_IDENTITY(99.30, (true ? 99.30 : _GLF_FUZZED(4.3))))), (vec2(_GLF_IDENTITY((injectionSwitch), ((injectionSwitch)) / vec2(1.0, 1.0))[0], _GLF_FUZZED(_GLF_IDENTITY(99.30, (true ? 99.30 : _GLF_FUZZED(4.3)))))) * mat2(1.0)), _GLF_IDENTITY(bvec2(true, _GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), (bool(false)) || _GLF_IDENTITY(false, false || (false))))), true)))), bvec2(_GLF_IDENTITY(bvec2(bvec2(true, _GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), (bool(false)) || _GLF_IDENTITY(false, false || (false))))), true))))), bvec2(bvec2(_GLF_IDENTITY(bvec2(bvec2(true, _GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), (bool(false)) || _GLF_IDENTITY(false, false || (false))))), true))))), bvec2(bvec2(bvec2(bvec2(true, _GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), (bool(false)) || _GLF_IDENTITY(false, false || (false))))), true))))))))))))))), (_GLF_IDENTITY(injectionSwitch, mix(_GLF_IDENTITY(vec2(_GLF_IDENTITY(_GLF_FUZZED(612.599), (_GLF_FUZZED(612.599)) + sin(sin(0.0))), (injectionSwitch)[1]), mix(vec2((vec2(_GLF_IDENTITY(_GLF_FUZZED(612.599), (_GLF_FUZZED(612.599)) + sin(sin(0.0))), (injectionSwitch)[1]))[0], (vec2(_GLF_IDENTITY(_GLF_FUZZED(612.599), (_GLF_FUZZED(612.599)) + sin(sin(0.0))), (injectionSwitch)[1]))[1]), vec2(_GLF_FUZZED(6.7), _GLF_FUZZED(657.635)), bvec2(false, false))), vec2((injectionSwitch)[0], _GLF_FUZZED(99.30)), bvec2(true, false)))) * vec2(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), (_GLF_ONE(1.0, injectionSwitch.y)) - 0.0), _GLF_ONE(1.0, injectionSwitch.y))), 1.0))).x > injectionSwitch.y)))))) && true)), _GLF_IDENTITY(bool(bool(! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0) > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), injectionSwitch)).y, (true ? injectionSwitch.y : _GLF_FUZZED(-49.63)))), ! (! ((_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0) > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), injectionSwitch)).y, (true ? injectionSwitch.y : _GLF_FUZZED(-49.63))))))))), (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(vec3(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY(_GLF_FUZZED(612.599), (_GLF_FUZZED(612.599)) + sin(sin(0.0))), (injectionSwitch)[1]), _GLF_IDENTITY(vec2(_GLF_IDENTITY((injectionSwitch), ((injectionSwitch)) / vec2(1.0, 1.0))[0], _GLF_FUZZED(_GLF_IDENTITY(99.30, (true ? 99.30 : _GLF_FUZZED(4.3))))), (vec2(_GLF_IDENTITY((injectionSwitch), _GLF_IDENTITY(((injectionSwitch)) / vec2(1.0, 1.0), vec2(_GLF_IDENTITY(mat2x3(((injectionSwitch)) / vec2(1.0, 1.0), round(length(normalize(vec2(1.0, 1.0)))), 1.0, 0.0, determinant(mat3(1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, abs(1.0)))), transpose(transpose(mat2x3(((injectionSwitch)) / vec2(1.0, 1.0), round(length(normalize(vec2(1.0, 1.0)))), 1.0, 0.0, determinant(mat3(1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, abs(1.0))))))))))[0], _GLF_FUZZED(_GLF_IDENTITY(99.30, (true ? 99.30 : _GLF_FUZZED(4.3)))))) * mat2(1.0)), bvec2(true, _GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), (bool(false)) || false))), true), bvec2(_GLF_IDENTITY(bvec2(bvec2(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), (bool(false)) || false))), true)), bvec2(bvec4(bvec2(bvec2(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), (bool(false)) || false))), true)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)))))))))), (_GLF_IDENTITY(injectionSwitch, mix(_GLF_IDENTITY(vec2(_GLF_IDENTITY(_GLF_FUZZED(612.599), (_GLF_FUZZED(612.599)) + sin(sin(0.0))), (injectionSwitch)[1]), mix(_GLF_IDENTITY(vec2((vec2(_GLF_IDENTITY(_GLF_FUZZED(612.599), (_GLF_FUZZED(612.599)) + sin(sin(0.0))), (injectionSwitch)[1]))[0], (vec2(_GLF_IDENTITY(_GLF_FUZZED(612.599), (_GLF_FUZZED(612.599)) + sin(sin(0.0))), (injectionSwitch)[1]))[_GLF_IDENTITY(1, (1) >> 0)]), min(vec2((vec2(_GLF_IDENTITY(_GLF_FUZZED(612.599), (_GLF_FUZZED(612.599)) + sin(sin(0.0))), (injectionSwitch)[1]))[0], (vec2(_GLF_IDENTITY(_GLF_FUZZED(612.599), (_GLF_FUZZED(612.599)) + sin(sin(0.0))), (injectionSwitch)[1]))[_GLF_IDENTITY(1, (1) >> 0)]), vec2((vec2(_GLF_IDENTITY(_GLF_FUZZED(612.599), (_GLF_FUZZED(612.599)) + sin(sin(0.0))), (injectionSwitch)[1]))[0], (vec2(_GLF_IDENTITY(_GLF_FUZZED(612.599), (_GLF_FUZZED(612.599)) + sin(sin(0.0))), (injectionSwitch)[1]))[_GLF_IDENTITY(1, (1) >> 0)]))), vec2(_GLF_FUZZED(6.7), _GLF_FUZZED(657.635)), bvec2(false, false))), vec2(_GLF_IDENTITY((injectionSwitch), vec2(0.0, 0.0) + ((injectionSwitch)))[0], _GLF_FUZZED(99.30)), bvec2(true, false)))) * vec2(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y))), 1.0))).x > injectionSwitch.y)))) && _GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(true, (true) || false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)), (bool(bvec3(_GLF_IDENTITY(true, (true) || false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))) && true)))))), bool(bvec4(bool(bool(! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0) > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), injectionSwitch)).y, (true ? injectionSwitch.y : _GLF_FUZZED(-49.63)))), ! (! ((_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0) > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), injectionSwitch)).y, (true ? injectionSwitch.y : _GLF_FUZZED(-49.63))))))))), (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(vec3(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY(_GLF_FUZZED(612.599), (_GLF_FUZZED(612.599)) + sin(sin(0.0))), (injectionSwitch)[1]), _GLF_IDENTITY(vec2(_GLF_IDENTITY((injectionSwitch), ((injectionSwitch)) / vec2(1.0, 1.0))[0], _GLF_FUZZED(_GLF_IDENTITY(99.30, (true ? 99.30 : _GLF_FUZZED(4.3))))), (vec2(_GLF_IDENTITY((injectionSwitch), _GLF_IDENTITY(((injectionSwitch)) / vec2(1.0, 1.0), vec2(_GLF_IDENTITY(mat2x3(((injectionSwitch)) / vec2(1.0, 1.0), round(length(normalize(vec2(1.0, 1.0)))), 1.0, 0.0, determinant(mat3(1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, abs(1.0)))), transpose(transpose(mat2x3(((injectionSwitch)) / vec2(1.0, 1.0), round(length(normalize(vec2(1.0, 1.0)))), 1.0, 0.0, determinant(mat3(1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, abs(1.0))))))))))[0], _GLF_FUZZED(_GLF_IDENTITY(99.30, (true ? 99.30 : _GLF_FUZZED(4.3)))))) * mat2(1.0)), bvec2(true, _GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), (bool(false)) || false))), true), bvec2(_GLF_IDENTITY(bvec2(bvec2(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), (bool(false)) || false))), true)), bvec2(bvec4(bvec2(bvec2(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), (bool(false)) || false))), true)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)))))))))), (_GLF_IDENTITY(injectionSwitch, mix(_GLF_IDENTITY(vec2(_GLF_IDENTITY(_GLF_FUZZED(612.599), (_GLF_FUZZED(612.599)) + sin(sin(0.0))), (injectionSwitch)[1]), mix(_GLF_IDENTITY(vec2((vec2(_GLF_IDENTITY(_GLF_FUZZED(612.599), (_GLF_FUZZED(612.599)) + sin(sin(0.0))), (injectionSwitch)[1]))[0], (vec2(_GLF_IDENTITY(_GLF_FUZZED(612.599), (_GLF_FUZZED(612.599)) + sin(sin(0.0))), (injectionSwitch)[1]))[_GLF_IDENTITY(1, (1) >> 0)]), min(vec2((vec2(_GLF_IDENTITY(_GLF_FUZZED(612.599), (_GLF_FUZZED(612.599)) + sin(sin(0.0))), (injectionSwitch)[1]))[0], (vec2(_GLF_IDENTITY(_GLF_FUZZED(612.599), (_GLF_FUZZED(612.599)) + sin(sin(0.0))), (injectionSwitch)[1]))[_GLF_IDENTITY(1, (1) >> 0)]), vec2((vec2(_GLF_IDENTITY(_GLF_FUZZED(612.599), (_GLF_FUZZED(612.599)) + sin(sin(0.0))), (injectionSwitch)[1]))[0], (vec2(_GLF_IDENTITY(_GLF_FUZZED(612.599), (_GLF_FUZZED(612.599)) + sin(sin(0.0))), (injectionSwitch)[1]))[_GLF_IDENTITY(1, (1) >> 0)]))), vec2(_GLF_FUZZED(6.7), _GLF_FUZZED(657.635)), bvec2(false, false))), vec2(_GLF_IDENTITY((injectionSwitch), vec2(0.0, 0.0) + ((injectionSwitch)))[0], _GLF_FUZZED(99.30)), bvec2(true, false)))) * vec2(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y))), 1.0))).x > injectionSwitch.y)))) && _GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(true, (true) || false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)), (bool(bvec3(_GLF_IDENTITY(true, (true) || false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))) && true)))))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))))))))))
      {
       do
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
        }
       while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(831.744)), float(injectionSwitch.y), bool(true)))) && true))), ! (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))));
       if(_GLF_DEAD(false))
        barrier();
       for(int _injected_loop_counter = (int(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).x)) >> _GLF_IDENTITY(int(3), int(3))); _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_WRAPPED_IF_FALSE(false))
          {
          }
         else
          {
           barrier();
          }
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        {
         for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
          {
           barrier();
          }
        }
      }
    }
  }
 while(_GLF_WRAPPED_LOOP(false));
 if(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), ! (! (_GLF_WRAPPED_IF_FALSE(false))))) && true))
  {
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(false, bool(bvec2(false, true))))), true && (bool(bool(_GLF_IDENTITY(false, bool(bvec2(false, true)))))))), (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   else
    {
    }
  }
 else
  {
   if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
    }
   else
    {
     if(_GLF_DEAD(false))
      barrier();
    }
  }
 uint next_virtual_gid = workgroup_base + _GLF_IDENTITY(subgroup_id * subgroup_size, max(_GLF_IDENTITY(subgroup_id * _GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, (subgroup_size) ^ 0u)) | 0u), uint(uvec4(subgroup_id * subgroup_size, (0u << _GLF_IDENTITY(uint(2u), uint(_GLF_IDENTITY(2u, uint(uvec3(2u, ((1u << _GLF_IDENTITY(uint(0u), uint(0u))) >> _GLF_IDENTITY(uint(0u), uint(0u))), 1u)))))), (47109u & uint(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), clamp(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))))), 0u))), subgroup_id * subgroup_size)) + _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id + 1), ~ (_GLF_IDENTITY(~ _GLF_IDENTITY(((subgroup_local_id + _GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) - 0)) >> 0))), (((subgroup_local_id + _GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) - 0)) >> 0)))) | 0u), uint(uvec4(~ ((subgroup_local_id + 1)), 1u, 1u, 0u))))) % subgroup_size, (_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, _GLF_IDENTITY(uint(_GLF_IDENTITY(uint((subgroup_local_id + 1) % subgroup_size), ~ (~ (uint((subgroup_local_id + 1) % subgroup_size))))), clamp(uint(_GLF_IDENTITY(uint((subgroup_local_id + 1) % subgroup_size), ~ (~ (uint((subgroup_local_id + 1) % subgroup_size))))), uint(_GLF_IDENTITY(uint((subgroup_local_id + 1) % subgroup_size), ~ (~ (uint((subgroup_local_id + 1) % subgroup_size))))), _GLF_IDENTITY(uint(_GLF_IDENTITY(uint((subgroup_local_id + 1) % subgroup_size), ~ (~ (uint((subgroup_local_id + 1) % subgroup_size))))), (uint(_GLF_IDENTITY(uint((subgroup_local_id + 1) % subgroup_size), ~ (~ (uint((subgroup_local_id + 1) % subgroup_size)))))) << 0u))))) | (_GLF_IDENTITY((subgroup_local_id + 1), uint(_GLF_IDENTITY(_GLF_IDENTITY(uvec2(_GLF_IDENTITY((subgroup_local_id + 1), min((subgroup_local_id + _GLF_IDENTITY(_GLF_IDENTITY(1, (1) << 0), (_GLF_IDENTITY(1, (1) << 0)) >> 0)), _GLF_IDENTITY((subgroup_local_id + 1), max((subgroup_local_id + _GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) / 1)) << 0)), (subgroup_local_id + _GLF_IDENTITY(1, int(ivec4(1, 0, 0, _GLF_IDENTITY(int(_GLF_ONE(1.0, injectionSwitch.y)), ~ (~ (int(_GLF_ONE(1.0, injectionSwitch.y))))))))))))), ((_GLF_IDENTITY(1u, ~ (~ (1u))) << _GLF_IDENTITY(uint(3u), _GLF_IDENTITY(uint(3u), (_GLF_IDENTITY(uint(3u), (uint(3u)) << (0u ^ 0u))) - (0u | 0u)))) >> _GLF_IDENTITY(uint(3u), uint(3u)))), _GLF_IDENTITY((uvec2(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) / 1u)) - 0u) + 1), min((_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) / 1u)) - 0u) + 1), (_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) / 1u)) - 0u) + 1))), min((subgroup_local_id + 1), _GLF_IDENTITY((subgroup_local_id + 1), max((subgroup_local_id + _GLF_IDENTITY(_GLF_IDENTITY(1, clamp(1, 1, 1)), _GLF_IDENTITY((_GLF_IDENTITY(1, (1) / 1)), ((_GLF_IDENTITY(1, (1) / 1))) ^ 0) << 0)), (subgroup_local_id + 1))))), _GLF_IDENTITY((_GLF_IDENTITY((1u << _GLF_IDENTITY(uint(3u), uint(3u))) >> _GLF_IDENTITY(uint(3u), uint(3u)), clamp((1u << _GLF_IDENTITY(uint(3u), uint(3u))) >> _GLF_IDENTITY(uint(3u), uint(3u)), (1u << _GLF_IDENTITY(uint(3u), uint(3u))) >> _GLF_IDENTITY(uint(3u), uint(3u)), (1u << _GLF_IDENTITY(uint(3u), uint(3u))) >> _GLF_IDENTITY(uint(3u), uint(3u))))), ~ (_GLF_IDENTITY(~ (((1u << _GLF_IDENTITY(uint(3u), uint(3u))) >> _GLF_IDENTITY(uint(3u), uint(3u)))), (~ (((1u << _GLF_IDENTITY(uint(3u), uint(3u))) >> _GLF_IDENTITY(uint(3u), uint(3u))))) | (~ (((1u << _GLF_IDENTITY(uint(3u), uint(3u))) >> _GLF_IDENTITY(uint(3u), uint(3u)))))))))), ((uvec2(1u, 1u) << _GLF_IDENTITY(uvec2(5u), uvec2(5u))) >> _GLF_IDENTITY(uvec2(5u), uvec2(5u))) * ((uvec2(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) / 1u)) - 0u) + 1), min((_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) / 1u)) - 0u) + 1), (_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) / 1u)) - 0u) + 1))), min((subgroup_local_id + 1), _GLF_IDENTITY((subgroup_local_id + 1), max((subgroup_local_id + _GLF_IDENTITY(_GLF_IDENTITY(1, clamp(1, 1, 1)), _GLF_IDENTITY((_GLF_IDENTITY(1, (1) / 1)), ((_GLF_IDENTITY(1, (1) / 1))) ^ 0) << 0)), (subgroup_local_id + 1))))), _GLF_IDENTITY((_GLF_IDENTITY((1u << _GLF_IDENTITY(uint(3u), uint(3u))) >> _GLF_IDENTITY(uint(3u), uint(3u)), clamp((1u << _GLF_IDENTITY(uint(3u), uint(3u))) >> _GLF_IDENTITY(uint(3u), uint(3u)), (1u << _GLF_IDENTITY(uint(3u), uint(3u))) >> _GLF_IDENTITY(uint(3u), uint(3u)), (1u << _GLF_IDENTITY(uint(3u), uint(3u))) >> _GLF_IDENTITY(uint(3u), uint(3u))))), ~ (_GLF_IDENTITY(~ (((1u << _GLF_IDENTITY(uint(3u), uint(3u))) >> _GLF_IDENTITY(uint(3u), uint(3u)))), (~ (((1u << _GLF_IDENTITY(uint(3u), uint(3u))) >> _GLF_IDENTITY(uint(3u), uint(3u))))) | (~ (((1u << _GLF_IDENTITY(uint(3u), uint(3u))) >> _GLF_IDENTITY(uint(3u), uint(3u)))))))))))) + uvec2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))), (_GLF_IDENTITY(uvec2(_GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id + 1), min((subgroup_local_id + 1), _GLF_IDENTITY((subgroup_local_id + 1), _GLF_IDENTITY(max(_GLF_IDENTITY((subgroup_local_id + 1), max(_GLF_IDENTITY((subgroup_local_id + 1), max((subgroup_local_id + 1), _GLF_IDENTITY((subgroup_local_id + 1), min((subgroup_local_id + 1), (subgroup_local_id + 1))))), _GLF_IDENTITY((subgroup_local_id + 1), ((subgroup_local_id + 1)) ^ 0u))), (subgroup_local_id + 1)), (max((subgroup_local_id + 1), (subgroup_local_id + 1))) / 1u)))), max(_GLF_IDENTITY((subgroup_local_id + 1), min((subgroup_local_id + 1), _GLF_IDENTITY((subgroup_local_id + 1), _GLF_IDENTITY(max((subgroup_local_id + 1), (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) / _GLF_IDENTITY(((1u << _GLF_IDENTITY(uint(7u), uint(7u))) >> _GLF_IDENTITY(uint(7u), uint(7u))), clamp(((1u << _GLF_IDENTITY(uint(7u), uint(7u))) >> _GLF_IDENTITY(uint(7u), uint(7u))), ((1u << _GLF_IDENTITY(uint(7u), uint(7u))) >> _GLF_IDENTITY(uint(7u), uint(7u))), ((1u << _GLF_IDENTITY(uint(7u), uint(7u))) >> _GLF_IDENTITY(uint(7u), uint(7u)))))) + 1)), (max((subgroup_local_id + 1), (subgroup_local_id + 1))) / 1u)))), _GLF_IDENTITY((subgroup_local_id + 1), min((subgroup_local_id + 1), _GLF_IDENTITY((subgroup_local_id + 1), _GLF_IDENTITY(max((subgroup_local_id + 1), (subgroup_local_id + 1)), (max((subgroup_local_id + 1), (subgroup_local_id + 1))) / 1u)))))), ((1u << _GLF_IDENTITY(uint(3u), uint(3u))) >> _GLF_IDENTITY(_GLF_IDENTITY(uint(3u), uint(3u)), clamp(_GLF_IDENTITY(uint(3u), uint(3u)), _GLF_IDENTITY(uint(3u), uint(3u)), _GLF_IDENTITY(uint(3u), uint(3u)))))), (uvec2(_GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id + 1), ~ (~ _GLF_IDENTITY(((subgroup_local_id + 1)), _GLF_IDENTITY(~ (~ (((subgroup_local_id + 1)))), (false ? _GLF_FUZZED((false ? workgroup_id : virtual_gid)) : _GLF_IDENTITY(~ (~ (((subgroup_local_id + 1)))), (~ (~ (((subgroup_local_id + 1))))) * 1u)))))), min(_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY(min(subgroup_local_id, _GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) - (0u >> _GLF_IDENTITY(uint(8u), uint(8u))))), (min(subgroup_local_id, _GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) - (0u >> _GLF_IDENTITY(uint(8u), uint(8u)))))) | (_GLF_IDENTITY(min(subgroup_local_id, _GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) - (0u >> _GLF_IDENTITY(uint(8u), uint(8u))))), 0u | (min(subgroup_local_id, _GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) - (0u >> _GLF_IDENTITY(uint(8u), uint(8u)))))))))) + 1), clamp((_GLF_IDENTITY(subgroup_local_id, min(subgroup_local_id, _GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) - (0u >> _GLF_IDENTITY(uint(8u), uint(8u)))), (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) - (0u >> _GLF_IDENTITY(uint(8u), uint(8u))))) | (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) - (0u >> _GLF_IDENTITY(uint(8u), uint(8u)))))))) + 1), (_GLF_IDENTITY(subgroup_local_id, min(subgroup_local_id, _GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) - (_GLF_IDENTITY(0u >> _GLF_IDENTITY(uint(8u), uint(8u)), (_GLF_IDENTITY(0u >> _GLF_IDENTITY(uint(8u), uint(8u)), (0u >> _GLF_IDENTITY(uint(8u), uint(8u))) / 1u)) ^ (0u | 0u)))))) + 1), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, max(subgroup_local_id, subgroup_local_id)), min(subgroup_local_id, _GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) - (0u >> _GLF_IDENTITY(uint(8u), uint(8u)))))) + 1), clamp(_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, min(subgroup_local_id, _GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) - (0u >> _GLF_IDENTITY(uint(8u), uint(8u)))))) + 1), _GLF_IDENTITY(((_GLF_IDENTITY(subgroup_local_id, min(subgroup_local_id, _GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) - (0u >> _GLF_IDENTITY(uint(8u), uint(8u)))))) + 1)) | ((_GLF_IDENTITY(subgroup_local_id, min(subgroup_local_id, _GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) - (0u >> _GLF_IDENTITY(uint(8u), uint(8u)))))) + 1)), (((_GLF_IDENTITY(subgroup_local_id, min(subgroup_local_id, _GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) - (0u >> _GLF_IDENTITY(uint(8u), uint(8u)))))) + 1)) | ((_GLF_IDENTITY(subgroup_local_id, min(subgroup_local_id, _GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) - (0u >> _GLF_IDENTITY(uint(8u), uint(8u)))))) + 1))) | 0u)), (_GLF_IDENTITY(subgroup_local_id, min(subgroup_local_id, _GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) - (0u >> _GLF_IDENTITY(uint(8u), uint(_GLF_IDENTITY(8u, (8u) ^ 0u))))))) + 1), (_GLF_IDENTITY(subgroup_local_id, min(subgroup_local_id, _GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) - (0u >> _GLF_IDENTITY(uint(8u), uint(8u)))))) + 1))))), _GLF_IDENTITY((subgroup_local_id + 1), max((subgroup_local_id + 1), (_GLF_IDENTITY(subgroup_local_id, uint(uint(subgroup_local_id))) + 1))))), (_GLF_IDENTITY((_GLF_IDENTITY(1u, uint(uvec2(1u, 0u))) << _GLF_IDENTITY(uint(3u), uint(3u))) >> _GLF_IDENTITY(_GLF_IDENTITY(uint(3u), uint(3u)), clamp(_GLF_IDENTITY(uint(3u), uint(3u)), _GLF_IDENTITY(uint(3u), uint(3u)), _GLF_IDENTITY(uint(3u), uint(3u)))), _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec3((_GLF_IDENTITY(1u, uint(uvec2(1u, 0u))) << _GLF_IDENTITY(uint(3u), uint(3u))) >> _GLF_IDENTITY(_GLF_IDENTITY(uint(3u), uint(3u)), clamp(_GLF_IDENTITY(uint(3u), uint(3u)), _GLF_IDENTITY(uint(3u), uint(3u)), _GLF_IDENTITY(uint(3u), uint(3u)))), 0u, 1u), (true ? uvec3((_GLF_IDENTITY(1u, uint(uvec2(1u, 0u))) << _GLF_IDENTITY(uint(3u), uint(3u))) >> _GLF_IDENTITY(_GLF_IDENTITY(uint(3u), uint(3u)), clamp(_GLF_IDENTITY(uint(3u), uint(3u)), _GLF_IDENTITY(uint(3u), uint(3u)), _GLF_IDENTITY(uint(3u), uint(3u)))), 0u, 1u) : _GLF_FUZZED((uvec3(141763u, 114030u, 37266u) ^ uvec3(8558u, 154948u, 129002u)))))), max(uint(_GLF_IDENTITY(uvec3((_GLF_IDENTITY(1u, uint(uvec2(1u, 0u))) << _GLF_IDENTITY(uint(3u), uint(3u))) >> _GLF_IDENTITY(_GLF_IDENTITY(uint(3u), uint(3u)), clamp(_GLF_IDENTITY(uint(3u), uint(3u)), _GLF_IDENTITY(uint(3u), uint(3u)), _GLF_IDENTITY(uint(3u), uint(3u)))), 0u, 1u), (true ? uvec3((_GLF_IDENTITY(1u, uint(uvec2(1u, 0u))) << _GLF_IDENTITY(uint(3u), uint(3u))) >> _GLF_IDENTITY(_GLF_IDENTITY(uint(3u), uint(3u)), clamp(_GLF_IDENTITY(uint(3u), uint(3u)), _GLF_IDENTITY(uint(3u), uint(3u)), _GLF_IDENTITY(uint(3u), uint(3u)))), 0u, 1u) : _GLF_FUZZED((uvec3(141763u, 114030u, 37266u) ^ uvec3(8558u, 154948u, 129002u)))))), uint(_GLF_IDENTITY(uvec3((_GLF_IDENTITY(1u, uint(uvec2(1u, 0u))) << _GLF_IDENTITY(uint(3u), uint(3u))) >> _GLF_IDENTITY(_GLF_IDENTITY(uint(3u), uint(3u)), clamp(_GLF_IDENTITY(uint(3u), uint(3u)), _GLF_IDENTITY(uint(3u), uint(3u)), _GLF_IDENTITY(uint(3u), uint(3u)))), 0u, 1u), (true ? uvec3((_GLF_IDENTITY(1u, uint(uvec2(1u, 0u))) << _GLF_IDENTITY(uint(3u), uint(3u))) >> _GLF_IDENTITY(_GLF_IDENTITY(uint(3u), uint(3u)), clamp(_GLF_IDENTITY(uint(3u), uint(3u)), _GLF_IDENTITY(uint(3u), uint(3u)), _GLF_IDENTITY(uint(3u), uint(3u)))), 0u, 1u) : _GLF_FUZZED((uvec3(141763u, 114030u, 37266u) ^ uvec3(8558u, 154948u, 129002u)))))))))))) + uvec2(0u, 0u))) >> uvec2(0u, 0u)))) % subgroup_size))), clamp((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, (_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, 0u + ((subgroup_local_id + 1) % subgroup_size))) << 0u), 1u * (_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, (_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, 0u + ((subgroup_local_id + 1) % subgroup_size))) << 0u))), ((_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(true ? subgroup_local_id : _GLF_FUZZED(uint(true)), (true ? subgroup_local_id : _GLF_FUZZED(uint(true))) | (true ? subgroup_local_id : _GLF_FUZZED(uint(true)))))) + 1) % subgroup_size) | (_GLF_IDENTITY((subgroup_local_id + 1), uint(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(uvec2(_GLF_IDENTITY((subgroup_local_id + 1), min((subgroup_local_id + 1), _GLF_IDENTITY((subgroup_local_id + 1), max((subgroup_local_id + _GLF_IDENTITY(1, _GLF_IDENTITY((_GLF_IDENTITY(1, (1) / 1)), min((_GLF_IDENTITY(1, (1) / 1)), (_GLF_IDENTITY(1, (1) / 1)))) << 0)), (subgroup_local_id + _GLF_IDENTITY(1, int(ivec4(1, 0, 0, _GLF_IDENTITY(int(_GLF_ONE(1.0, injectionSwitch.y)), ~ (~ (int(_GLF_ONE(1.0, injectionSwitch.y))))))))))))), (_GLF_IDENTITY((1u << _GLF_IDENTITY(_GLF_IDENTITY(uint(3u), (0u >> _GLF_IDENTITY(uint(2u), uint(2u))) + (uint(3u))), uint(3u))), min((1u << _GLF_IDENTITY(_GLF_IDENTITY(uint(3u), (0u >> _GLF_IDENTITY(uint(2u), uint(2u))) + (uint(3u))), uint(3u))), (1u << _GLF_IDENTITY(_GLF_IDENTITY(uint(3u), (0u >> _GLF_IDENTITY(uint(2u), uint(2u))) + (uint(3u))), uint(3u))))) >> _GLF_IDENTITY(uint(3u), uint(3u)))), (uvec2(_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) / 1u)) - 0u) + 1), min((subgroup_local_id + 1), _GLF_IDENTITY((subgroup_local_id + 1), max((subgroup_local_id + _GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) / 1)) << 0)), (subgroup_local_id + 1))))), ((1u << _GLF_IDENTITY(uint(3u), uint(3u))) >> _GLF_IDENTITY(uint(3u), uint(3u))))) + uvec2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), max(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))))), (_GLF_IDENTITY(uvec2(_GLF_IDENTITY((subgroup_local_id + 1), min((subgroup_local_id + 1), _GLF_IDENTITY((subgroup_local_id + 1), max((subgroup_local_id + _GLF_IDENTITY(1, _GLF_IDENTITY((_GLF_IDENTITY(1, (1) / 1)), min((_GLF_IDENTITY(1, (1) / 1)), (_GLF_IDENTITY(1, (1) / 1)))) << 0)), (subgroup_local_id + _GLF_IDENTITY(1, int(ivec4(1, 0, 0, _GLF_IDENTITY(int(_GLF_ONE(1.0, injectionSwitch.y)), ~ (~ (int(_GLF_ONE(1.0, injectionSwitch.y))))))))))))), (_GLF_IDENTITY((1u << _GLF_IDENTITY(_GLF_IDENTITY(uint(3u), (0u >> _GLF_IDENTITY(uint(2u), uint(2u))) + (uint(3u))), uint(3u))), min((1u << _GLF_IDENTITY(_GLF_IDENTITY(uint(3u), (0u >> _GLF_IDENTITY(uint(2u), uint(2u))) + (uint(3u))), uint(3u))), (1u << _GLF_IDENTITY(_GLF_IDENTITY(uint(3u), (0u >> _GLF_IDENTITY(uint(2u), uint(2u))) + (uint(3u))), uint(3u))))) >> _GLF_IDENTITY(uint(3u), uint(3u)))), (uvec2(_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) / 1u)) - 0u) + 1), min((subgroup_local_id + 1), _GLF_IDENTITY((subgroup_local_id + 1), max((subgroup_local_id + _GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) / 1)) << 0)), (subgroup_local_id + 1))))), ((1u << _GLF_IDENTITY(uint(3u), uint(3u))) >> _GLF_IDENTITY(uint(3u), uint(3u))))) + uvec2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), max(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)))))) ^ (uvec2(0u, 0u) | uvec2(0u, 0u))), (_GLF_IDENTITY(uvec2(_GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id + 1), 1u * ((subgroup_local_id + 1))), min((subgroup_local_id + 1), _GLF_IDENTITY((subgroup_local_id + 1), _GLF_IDENTITY(max((subgroup_local_id + _GLF_IDENTITY(1, int(ivec4(1, (0 >> _GLF_IDENTITY(int(1), int(1))), ((1 << _GLF_IDENTITY(int(3), int(3))) >> _GLF_IDENTITY(int(3), int(3))), 1)))), (subgroup_local_id + _GLF_IDENTITY(1, _GLF_IDENTITY((_GLF_IDENTITY(1, 0 | (1))), max(_GLF_IDENTITY((_GLF_IDENTITY(1, 0 | (1))), ((_GLF_IDENTITY(1, 0 | (1)))) >> 0), _GLF_IDENTITY((_GLF_IDENTITY(1, 0 | (1))), 0 | ((_GLF_IDENTITY(1, 0 | (1))))))) | 0))), (max((subgroup_local_id + 1), (_GLF_IDENTITY(subgroup_local_id, max(subgroup_local_id, _GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, 0u ^ (subgroup_local_id))) >> 0u))) + _GLF_IDENTITY(1, (1) | (1))))) / 1u)))), (_GLF_IDENTITY((1u << _GLF_IDENTITY(uint(3u), uint(3u))) >> _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(uint(3u), uint(3u)), clamp(_GLF_IDENTITY(uint(3u), uint(3u)), _GLF_IDENTITY(uint(3u), uint(3u)), _GLF_IDENTITY(uint(3u), uint(3u)))), (_GLF_IDENTITY(_GLF_IDENTITY(uint(3u), uint(3u)), clamp(_GLF_IDENTITY(uint(3u), uint(3u)), _GLF_IDENTITY(uint(3u), uint(3u)), _GLF_IDENTITY(uint(3u), uint(3u))))) ^ 0u), ((1u << _GLF_IDENTITY(uint(3u), uint(_GLF_IDENTITY(3u, min(3u, 3u))))) >> _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(uint(3u), uint(3u)), clamp(_GLF_IDENTITY(uint(3u), uint(3u)), _GLF_IDENTITY(uint(3u), uint(3u)), _GLF_IDENTITY(uint(3u), uint(3u)))), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(uint(3u), uint(3u)), _GLF_IDENTITY(clamp(_GLF_IDENTITY(uint(3u), uint(3u)), _GLF_IDENTITY(uint(3u), uint(3u)), _GLF_IDENTITY(uint(3u), uint(3u))), min(clamp(_GLF_IDENTITY(uint(3u), uint(3u)), _GLF_IDENTITY(uint(3u), uint(3u)), _GLF_IDENTITY(uint(3u), uint(3u))), clamp(_GLF_IDENTITY(uint(3u), uint(3u)), _GLF_IDENTITY(uint(3u), uint(3u)), _GLF_IDENTITY(uint(3u), uint(3u))))))), 0u ^ ((_GLF_IDENTITY(_GLF_IDENTITY(uint(3u), uint(3u)), _GLF_IDENTITY(clamp(_GLF_IDENTITY(uint(3u), uint(3u)), _GLF_IDENTITY(uint(3u), uint(3u)), _GLF_IDENTITY(uint(3u), uint(3u))), min(clamp(_GLF_IDENTITY(uint(3u), uint(3u)), _GLF_IDENTITY(uint(3u), uint(3u)), _GLF_IDENTITY(uint(3u), uint(3u))), clamp(_GLF_IDENTITY(uint(3u), uint(3u)), _GLF_IDENTITY(uint(3u), uint(3u)), _GLF_IDENTITY(uint(3u), uint(3u))))))))) ^ 0u)) * 1u))), (uvec2(_GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id + 1), ~ (~ ((subgroup_local_id + 1)))), _GLF_IDENTITY(min((subgroup_local_id + 1), _GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id + 1, min(subgroup_local_id + 1, subgroup_local_id + 1))), max((subgroup_local_id + 1), (subgroup_local_id + 1)))), (_GLF_IDENTITY(min((subgroup_local_id + 1), _GLF_IDENTITY((subgroup_local_id + 1), max((subgroup_local_id + 1), (subgroup_local_id + 1)))), (min((subgroup_local_id + 1), _GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id + 1, clamp(_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) * 1u), subgroup_local_id + 1, subgroup_local_id + 1))), max(_GLF_IDENTITY((subgroup_local_id + 1), ((subgroup_local_id + 1)) * 1u), (subgroup_local_id + 1))))) ^ 0u)) | (min((subgroup_local_id + 1), _GLF_IDENTITY((subgroup_local_id + 1), max((subgroup_local_id + 1), (subgroup_local_id + 1))))))), ((1u << _GLF_IDENTITY(uint(3u), uint(3u))) >> _GLF_IDENTITY(_GLF_IDENTITY(uint(3u), uint(3u)), clamp(_GLF_IDENTITY(uint(_GLF_IDENTITY(3u, (_GLF_IDENTITY(3u, (3u) - 0u)) | (_GLF_IDENTITY(3u, (true ? 3u : _GLF_FUZZED(subgroup_size)))))), uint(3u)), _GLF_IDENTITY(uint(_GLF_IDENTITY(3u, (_GLF_IDENTITY(3u, ~ (~ (3u)))) >> 0u)), uint(3u)), _GLF_IDENTITY(_GLF_IDENTITY(uint(3u), uint(3u)), (_GLF_IDENTITY(uint(3u), uint(3u))) - 0u)))))) + uvec2(0u, 0u))) >> uvec2(0u, 0u)))) % subgroup_size))), (_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, (_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, clamp((subgroup_local_id + 1) % subgroup_size, (subgroup_local_id + 1) % subgroup_size, (subgroup_local_id + 1) % subgroup_size))) | (_GLF_IDENTITY((subgroup_local_id + 1), uint(_GLF_IDENTITY(_GLF_IDENTITY(uvec2(_GLF_IDENTITY((subgroup_local_id + 1), min((_GLF_IDENTITY(subgroup_local_id, (true ? subgroup_local_id : _GLF_FUZZED(subgroup_local_id))) + 1), _GLF_IDENTITY((subgroup_local_id + 1), max((subgroup_local_id + _GLF_IDENTITY(1, (_GLF_IDENTITY(_GLF_IDENTITY(1, min(1, _GLF_IDENTITY(1, 0 + (1)))), _GLF_IDENTITY((1) / 1, clamp(_GLF_IDENTITY((1) / 1, ((1) / 1) | ((1) / 1)), (1) / 1, _GLF_IDENTITY((1) / 1, (false ? _GLF_FUZZED(-10470) : (1) / 1)))))) << 0)), (subgroup_local_id + _GLF_IDENTITY(1, int(ivec4(1, 0, 0, _GLF_IDENTITY(int(_GLF_ONE(1.0, injectionSwitch.y)), ~ (~ (int(_GLF_ONE(1.0, injectionSwitch.y))))))))))))), ((1u << _GLF_IDENTITY(_GLF_IDENTITY(uint(3u), uint(3u)), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(uint(3u), uint(3u)), 0u ^ (_GLF_IDENTITY(uint(3u), uint(3u)))))))) >> _GLF_IDENTITY(uint(3u), uint(3u)))), (uvec2(_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) / 1u)) - 0u) + 1), min((subgroup_local_id + 1), _GLF_IDENTITY((subgroup_local_id + 1), max((subgroup_local_id + _GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) / 1)) << 0)), _GLF_IDENTITY((subgroup_local_id + 1), ((_GLF_IDENTITY(subgroup_local_id + 1, uint(uvec2(subgroup_local_id + 1, ((1u << _GLF_IDENTITY(uint(5u), uint(5u))) >> _GLF_IDENTITY(uint(5u), uint(5u)))))))) << 0u))))), ((_GLF_IDENTITY(1u << _GLF_IDENTITY(uint(3u), _GLF_IDENTITY(uint(3u), clamp(uint(3u), uint(3u), _GLF_IDENTITY(uint(3u), 0u | (uint(3u)))))), (true ? 1u << _GLF_IDENTITY(uint(3u), uint(3u)) : _GLF_FUZZED(95506u)))) >> _GLF_IDENTITY(uint(3u), uint(3u))))) + uvec2(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), max(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), max(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))))), _GLF_ZERO(0.0, injectionSwitch.x))), (_GLF_IDENTITY(uvec2(_GLF_IDENTITY((subgroup_local_id + 1), min((_GLF_IDENTITY(subgroup_local_id, (true ? subgroup_local_id : _GLF_FUZZED(112204u))) + 1), _GLF_IDENTITY((subgroup_local_id + 1), _GLF_IDENTITY(max((_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | (0u ^ 0u)) + 1), (subgroup_local_id + 1)), _GLF_IDENTITY(_GLF_IDENTITY((max((subgroup_local_id + 1), (subgroup_local_id + 1))), (true ? (max((subgroup_local_id + 1), (subgroup_local_id + 1))) : _GLF_FUZZED(48946u))), (false ? _GLF_FUZZED(183810u) : _GLF_IDENTITY(_GLF_IDENTITY((max((subgroup_local_id + 1), (subgroup_local_id + 1))), (true ? (max((subgroup_local_id + 1), (subgroup_local_id + 1))) : _GLF_FUZZED(48946u))), min(_GLF_IDENTITY((max((subgroup_local_id + 1), (subgroup_local_id + 1))), (true ? (max((subgroup_local_id + 1), (subgroup_local_id + 1))) : _GLF_FUZZED(48946u))), _GLF_IDENTITY((max((subgroup_local_id + 1), (subgroup_local_id + 1))), (true ? (max((subgroup_local_id + 1), (subgroup_local_id + 1))) : _GLF_FUZZED(48946u))))))) / 1u)))), ((1u << _GLF_IDENTITY(uint(3u), uint(3u))) >> _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(uint(3u), uint(3u)), min(_GLF_IDENTITY(_GLF_IDENTITY(uint(3u), uint(3u)), 0u ^ (_GLF_IDENTITY(uint(3u), uint(3u)))), _GLF_IDENTITY(uint(3u), uint(3u)))), clamp(_GLF_IDENTITY(uint(3u), uint(3u)), _GLF_IDENTITY(uint(3u), _GLF_IDENTITY(uint(3u), ~ (_GLF_IDENTITY(~ (uint(3u)), (~ (uint(3u))) ^ 0u)))), _GLF_IDENTITY(uint(3u), uint(3u)))))), (uvec2(_GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id + 1), ~ (~ ((_GLF_IDENTITY(subgroup_local_id + 1, 0u + (subgroup_local_id + 1)))))), min((_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) ^ 0u) + 1), _GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id + 1), ((subgroup_local_id + 1)) << 0u), max((subgroup_local_id + 1), (subgroup_local_id + 1))))), ((1u << _GLF_IDENTITY(uint(3u), uint(3u))) >> _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(uint(3u), uint(3u)), clamp(_GLF_IDENTITY(_GLF_IDENTITY(uint(3u), uint(3u)), (_GLF_IDENTITY(uint(3u), uint(3u))) ^ 0u), _GLF_IDENTITY(uint(3u), uint(3u)), _GLF_IDENTITY(uint(3u), uint(3u)))), (_GLF_IDENTITY(_GLF_IDENTITY(uint(3u), uint(3u)), clamp(_GLF_IDENTITY(uint(3u), uint(3u)), _GLF_IDENTITY(uint(3u), uint(3u)), _GLF_IDENTITY(uint(3u), uint(3u))))) | (_GLF_IDENTITY(_GLF_IDENTITY(uint(3u), uint(3u)), clamp(_GLF_IDENTITY(_GLF_IDENTITY(uint(3u), uint(3u)), 1u * (_GLF_IDENTITY(_GLF_IDENTITY(uint(3u), uint(3u)), min(_GLF_IDENTITY(uint(3u), uint(3u)), _GLF_IDENTITY(uint(3u), uint(3u)))))), _GLF_IDENTITY(uint(3u), uint(3u)), _GLF_IDENTITY(uint(3u), uint(3u))))))))) + uvec2(0u, 0u))) >> _GLF_IDENTITY(uvec2(0u, 0u), min(_GLF_IDENTITY(uvec2(0u, 0u), uvec2(uvec3(uvec2(0u, 0u), 0u))), uvec2(0u, 0u)))))) % subgroup_size))), (_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, _GLF_IDENTITY(((subgroup_local_id + 1) % subgroup_size), clamp(((subgroup_local_id + 1) % subgroup_size), ((subgroup_local_id + 1) % subgroup_size), _GLF_IDENTITY(((subgroup_local_id + 1) % subgroup_size), clamp(_GLF_IDENTITY(((subgroup_local_id + 1) % subgroup_size), (((subgroup_local_id + 1) % subgroup_size)) | (((subgroup_local_id + 1) % subgroup_size))), ((subgroup_local_id + 1) % subgroup_size), ((subgroup_local_id + 1) % subgroup_size))))) | (_GLF_IDENTITY((subgroup_local_id + 1), uint(_GLF_IDENTITY(_GLF_IDENTITY(uvec2(_GLF_IDENTITY((subgroup_local_id + 1), min((subgroup_local_id + 1), _GLF_IDENTITY((subgroup_local_id + 1), max((subgroup_local_id + _GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) / 1)) << 0)), (subgroup_local_id + _GLF_IDENTITY(_GLF_IDENTITY(1, int(ivec4(1, 0, 0, _GLF_IDENTITY(int(_GLF_ONE(1.0, injectionSwitch.y)), ~ (~ (int(_GLF_ONE(1.0, injectionSwitch.y)))))))), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(1, int(ivec4(1, 0, 0, _GLF_IDENTITY(int(_GLF_ONE(1.0, injectionSwitch.y)), ~ (~ (int(_GLF_ONE(1.0, injectionSwitch.y)))))))), min(_GLF_IDENTITY(1, int(ivec4(1, 0, 0, _GLF_IDENTITY(int(_GLF_ONE(1.0, injectionSwitch.y)), ~ (~ (int(_GLF_ONE(1.0, injectionSwitch.y)))))))), _GLF_IDENTITY(1, int(ivec4(1, 0, 0, _GLF_IDENTITY(int(_GLF_ONE(1.0, injectionSwitch.y)), ~ (~ (int(_GLF_ONE(1.0, injectionSwitch.y)))))))))))))))))), ((1u << _GLF_IDENTITY(uint(3u), uint(_GLF_IDENTITY(_GLF_IDENTITY(3u, ~ (~ (_GLF_IDENTITY(3u, (3u) * 1u)))), (_GLF_IDENTITY(_GLF_IDENTITY(3u, ~ (~ (_GLF_IDENTITY(3u, (3u) * 1u)))), max(_GLF_IDENTITY(3u, ~ (~ (_GLF_IDENTITY(3u, (3u) * 1u)))), _GLF_IDENTITY(3u, ~ (~ (_GLF_IDENTITY(3u, (3u) * 1u))))))) | (_GLF_IDENTITY(3u, ~ (~ (_GLF_IDENTITY(3u, (3u) * 1u))))))))) >> _GLF_IDENTITY(uint(3u), uint(3u)))), (uvec2(_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) / 1u)) - 0u) + 1), min((subgroup_local_id + 1), _GLF_IDENTITY((subgroup_local_id + _GLF_IDENTITY(1, min(1, 1))), max((subgroup_local_id + _GLF_IDENTITY(1, _GLF_IDENTITY((_GLF_IDENTITY(1, (1) / 1)) << 0, (true ? (_GLF_IDENTITY(1, (1) / 1)) << 0 : _GLF_FUZZED(-38603))))), (subgroup_local_id + 1))))), ((1u << _GLF_IDENTITY(uint(3u), uint(3u))) >> _GLF_IDENTITY(uint(3u), uint(_GLF_IDENTITY(3u, _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec4(3u, 1u, uint(_GLF_ONE(1.0, injectionSwitch.y)), 1u), max(uvec4(3u, 1u, uint(_GLF_ONE(1.0, injectionSwitch.y)), 1u), uvec4(3u, 1u, uint(_GLF_ONE(1.0, injectionSwitch.y)), 1u)))), clamp(uint(_GLF_IDENTITY(uvec4(3u, 1u, uint(_GLF_ONE(1.0, injectionSwitch.y)), 1u), max(uvec4(3u, 1u, uint(_GLF_ONE(1.0, injectionSwitch.y)), 1u), uvec4(3u, 1u, uint(_GLF_ONE(1.0, injectionSwitch.y)), 1u)))), _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec4(3u, 1u, uint(_GLF_ONE(1.0, injectionSwitch.y)), 1u), max(uvec4(3u, 1u, uint(_GLF_ONE(1.0, injectionSwitch.y)), 1u), uvec4(3u, 1u, uint(_GLF_ONE(1.0, injectionSwitch.y)), 1u)))), clamp(uint(_GLF_IDENTITY(uvec4(3u, 1u, uint(_GLF_ONE(1.0, injectionSwitch.y)), 1u), max(uvec4(3u, 1u, uint(_GLF_ONE(1.0, injectionSwitch.y)), 1u), uvec4(3u, 1u, uint(_GLF_ONE(1.0, injectionSwitch.y)), 1u)))), uint(_GLF_IDENTITY(uvec4(3u, 1u, uint(_GLF_ONE(1.0, injectionSwitch.y)), 1u), max(uvec4(3u, 1u, uint(_GLF_ONE(1.0, injectionSwitch.y)), 1u), uvec4(3u, 1u, uint(_GLF_ONE(1.0, injectionSwitch.y)), 1u)))), uint(_GLF_IDENTITY(uvec4(3u, 1u, uint(_GLF_ONE(1.0, injectionSwitch.y)), 1u), max(uvec4(3u, 1u, uint(_GLF_ONE(1.0, injectionSwitch.y)), 1u), uvec4(3u, 1u, uint(_GLF_ONE(1.0, injectionSwitch.y)), 1u)))))), uint(_GLF_IDENTITY(uvec4(3u, 1u, uint(_GLF_ONE(1.0, injectionSwitch.y)), 1u), max(uvec4(3u, 1u, uint(_GLF_ONE(1.0, injectionSwitch.y)), 1u), uvec4(3u, 1u, uint(_GLF_ONE(1.0, injectionSwitch.y)), 1u)))))))))))) + _GLF_IDENTITY(uvec2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)), uvec2(0u, 0u) | (uvec2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))))), _GLF_IDENTITY((_GLF_IDENTITY(uvec2(_GLF_IDENTITY((subgroup_local_id + 1), min((subgroup_local_id + 1), _GLF_IDENTITY((subgroup_local_id + 1), _GLF_IDENTITY(_GLF_IDENTITY(max((subgroup_local_id + 1), (subgroup_local_id + 1)), (max((subgroup_local_id + _GLF_IDENTITY(1, (1) - 0)), (subgroup_local_id + 1))) / 1u), (_GLF_IDENTITY(max((subgroup_local_id + 1), (subgroup_local_id + 1)), (max((subgroup_local_id + 1), (subgroup_local_id + 1))) / 1u)) << _GLF_IDENTITY(0u, uint(uint(0u))))))), ((1u << _GLF_IDENTITY(uint(3u), uint(3u))) >> _GLF_IDENTITY(_GLF_IDENTITY(uint(3u), uint(3u)), clamp(_GLF_IDENTITY(uint(3u), uint(3u)), _GLF_IDENTITY(uint(_GLF_IDENTITY(3u, (3u) | (_GLF_IDENTITY(3u, (3u) | (3u))))), uint(3u)), _GLF_IDENTITY(uint(3u), uint(3u)))))), (uvec2(_GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id + 1), ~ (~ ((subgroup_local_id + 1)))), min((subgroup_local_id + 1), _GLF_IDENTITY((subgroup_local_id + 1), max((subgroup_local_id + 1), (subgroup_local_id + 1))))), (_GLF_IDENTITY((1u << _GLF_IDENTITY(uint(3u), uint(3u))), clamp((1u << _GLF_IDENTITY(uint(3u), uint(3u))), _GLF_IDENTITY((1u << _GLF_IDENTITY(uint(3u), uint(3u))), (true ? (1u << _GLF_IDENTITY(uint(3u), uint(3u))) : _GLF_FUZZED(workgroup_base))), (1u << _GLF_IDENTITY(uint(3u), uint(3u))))) >> _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(uint(3u), uint(3u)), max(_GLF_IDENTITY(uint(3u), uint(3u)), _GLF_IDENTITY(uint(3u), uint(3u)))), clamp(_GLF_IDENTITY(uint(3u), uint(_GLF_IDENTITY(3u, (3u) + 0u))), _GLF_IDENTITY(uint(3u), _GLF_IDENTITY(uint(3u), (uint(3u)) | (_GLF_IDENTITY(uint(3u), min(uint(3u), uint(3u)))))), _GLF_IDENTITY(uint(3u), uint(3u))))))) + uvec2(0u, 0u))), ((_GLF_IDENTITY(uvec2(_GLF_IDENTITY((subgroup_local_id + 1), min((subgroup_local_id + 1), _GLF_IDENTITY((subgroup_local_id + 1), _GLF_IDENTITY(_GLF_IDENTITY(max((subgroup_local_id + 1), (subgroup_local_id + 1)), (max((subgroup_local_id + _GLF_IDENTITY(1, (1) - 0)), (subgroup_local_id + 1))) / 1u), (_GLF_IDENTITY(max((subgroup_local_id + 1), (subgroup_local_id + 1)), (max((subgroup_local_id + 1), (subgroup_local_id + 1))) / 1u)) << _GLF_IDENTITY(0u, uint(uint(0u))))))), ((1u << _GLF_IDENTITY(uint(3u), uint(3u))) >> _GLF_IDENTITY(_GLF_IDENTITY(uint(3u), uint(3u)), clamp(_GLF_IDENTITY(uint(3u), uint(3u)), _GLF_IDENTITY(uint(_GLF_IDENTITY(3u, (3u) | (_GLF_IDENTITY(3u, (3u) | (3u))))), uint(3u)), _GLF_IDENTITY(uint(3u), uint(3u)))))), (uvec2(_GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id + 1), ~ (~ ((subgroup_local_id + 1)))), min((subgroup_local_id + 1), _GLF_IDENTITY((subgroup_local_id + 1), max((subgroup_local_id + 1), (subgroup_local_id + 1))))), (_GLF_IDENTITY((1u << _GLF_IDENTITY(uint(3u), uint(3u))), clamp((1u << _GLF_IDENTITY(uint(3u), uint(3u))), _GLF_IDENTITY((1u << _GLF_IDENTITY(uint(3u), uint(3u))), (true ? (1u << _GLF_IDENTITY(uint(3u), uint(3u))) : _GLF_FUZZED(workgroup_base))), (1u << _GLF_IDENTITY(uint(3u), uint(3u))))) >> _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(uint(3u), uint(3u)), max(_GLF_IDENTITY(uint(3u), uint(3u)), _GLF_IDENTITY(uint(3u), uint(3u)))), clamp(_GLF_IDENTITY(uint(3u), uint(_GLF_IDENTITY(3u, (3u) + 0u))), _GLF_IDENTITY(uint(3u), _GLF_IDENTITY(uint(3u), (uint(3u)) | (_GLF_IDENTITY(uint(3u), min(uint(3u), uint(3u)))))), _GLF_IDENTITY(uint(3u), uint(3u))))))) + uvec2(0u, 0u)))) << uvec2(0u, 0u)) >> uvec2(0u, 0u)))) % subgroup_size)))));
 uint read_1 = atomicLoad(buf[virtual_gid], 4, 64, 0);
 if(_GLF_WRAPPED_IF_TRUE(true))
  {
   for(int _injected_loop_counter = (_GLF_IDENTITY(0, 0 + (_GLF_IDENTITY(0, clamp(0, 0, 0)))) | int(_GLF_ZERO(_GLF_IDENTITY(0.0, (0.0) + _GLF_IDENTITY(0.0, float(_GLF_IDENTITY(float(0.0), 0.0 + (float(0.0)))))), injectionSwitch.x))); _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter < _GLF_IDENTITY(1, max(1, _GLF_IDENTITY(1, _GLF_IDENTITY(0, max(0, _GLF_IDENTITY(0, clamp(0, _GLF_IDENTITY(0, (true ? 0 : _GLF_FUZZED(-27412))), 0)))) ^ (_GLF_IDENTITY(1, (1) << 0))))), ! (! (_GLF_IDENTITY(_injected_loop_counter < _GLF_IDENTITY(1, max(1, _GLF_IDENTITY(1, _GLF_IDENTITY(0, max(0, _GLF_IDENTITY(0, clamp(0, _GLF_IDENTITY(0, (true ? 0 : _GLF_FUZZED(-27412))), 0)))) ^ (_GLF_IDENTITY(1, (1) << 0))))), ! (! (_injected_loop_counter < _GLF_IDENTITY(1, max(1, _GLF_IDENTITY(1, _GLF_IDENTITY(_GLF_IDENTITY(0, max(0, _GLF_IDENTITY(0, clamp(0, _GLF_IDENTITY(0, (true ? 0 : _GLF_FUZZED(-27412))), 0)))), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(0, max(0, _GLF_IDENTITY(_GLF_IDENTITY(0, clamp(0, _GLF_IDENTITY(0, (true ? 0 : _GLF_FUZZED(-27412))), 0)), (_GLF_IDENTITY(0, clamp(0, _GLF_IDENTITY(0, (true ? 0 : _GLF_IDENTITY(_GLF_FUZZED(-27412), max(_GLF_FUZZED(-27412), _GLF_IDENTITY(_GLF_FUZZED(-27412), (true ? _GLF_FUZZED(-27412) : _GLF_FUZZED(82932))))))), 0))) / 1))) : _GLF_FUZZED(sign(atomicCompSwap(_injected_loop_counter, _injected_loop_counter, _injected_loop_counter))))) ^ (_GLF_IDENTITY(1, (1) << 0)))))))))))); _injected_loop_counter ++)
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_WRAPPED_IF_FALSE(false))
        {
         if(_GLF_DEAD(false))
          barrier();
        }
       else
        {
         if(_GLF_DEAD(false))
          {
           do
            {
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              barrier();
            }
           while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, ! (! (false)))));
           barrier();
          }
        }
       if(_GLF_WRAPPED_IF_FALSE(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_WRAPPED_IF_FALSE(false))
          {
          }
         else
          {
           for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != (0 & -48352)); _injected_loop_counter --)
            {
             if(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), false || (_GLF_WRAPPED_IF_FALSE(false))))
              {
              }
             else
              {
               for(int _injected_loop_counter = int(_GLF_ZERO(0.0, injectionSwitch.x)); _GLF_WRAPPED_LOOP(_injected_loop_counter < ((int(_GLF_ONE(1.0, injectionSwitch.y)) << _GLF_IDENTITY(int(0), int(0))) >> _GLF_IDENTITY(int(0), _GLF_IDENTITY(int(0), clamp(int(0), int(0), int(0)))))); _injected_loop_counter ++)
                {
                 if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (_GLF_IDENTITY(! (! (false)), ! (! (! (! (false)))))))))), (_GLF_DEAD(_GLF_IDENTITY(false, ! _GLF_IDENTITY((_GLF_IDENTITY(! (false), ! (_GLF_IDENTITY(! (! (false)), _GLF_IDENTITY(! (! (! (! (false)))), true && (! (! (! (! (false)))))))))), true && ((_GLF_IDENTITY(! (false), ! (_GLF_IDENTITY(! (! (false)), _GLF_IDENTITY(! (! (! (! (false)))), true && (! (! (! (! (false))))))))))))))) || false), _GLF_IDENTITY(! (! (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false)))))))), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(! (! (_GLF_DEAD(false))), (! (! (_GLF_DEAD(false)))) || _GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, bool(bvec3(false, false, false)))), true && (! (_GLF_IDENTITY(false, bool(bvec3(false, false, false))))))))))), ! (! (bool(bool(_GLF_IDENTITY(! (! (_GLF_DEAD(false))), _GLF_IDENTITY((! (! (_GLF_DEAD(false)))), bool(bvec3(_GLF_IDENTITY((! (! (_GLF_DEAD(false)))), ! (! ((! (! (_GLF_DEAD(false))))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) || false)))))))))
                  barrier();
                }
              }
            }
          }
        }
       else
        {
         if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(-9.5))), _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0), (false ? _GLF_FUZZED(-58.02) : _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0)))))))))
          {
           if(_GLF_DEAD(false))
            barrier();
          }
         else
          {
           barrier();
          }
        }
      }
     if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
      }
     else
      {
       for(int _injected_loop_counter = (0 >> _GLF_IDENTITY(int(5), _GLF_IDENTITY(int(5), clamp(_GLF_IDENTITY(int(5), (int(_GLF_IDENTITY(5, max(5, 5)))) - 0), int(5), int(5))))); _GLF_WRAPPED_LOOP(_injected_loop_counter < (1 & 1)); _injected_loop_counter ++)
        {
         if(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), false || (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), false || (_GLF_WRAPPED_IF_FALSE(false))))))
          {
          }
         else
          {
           for(int _injected_loop_counter = (0 << _GLF_IDENTITY(int(7), int(7))); _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter != 1, bool(bvec3(_injected_loop_counter != 1, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)))); _GLF_IDENTITY(_injected_loop_counter ++, (0 & 60855) | (_GLF_IDENTITY(_injected_loop_counter ++, (_injected_loop_counter ++) - 0))))
            {
             do
              {
               if(_GLF_DEAD(false))
                barrier();
              }
             while(_GLF_WRAPPED_LOOP(false));
             for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != (1 ^ 0)); _injected_loop_counter ++)
              {
               if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
                {
                 if(_GLF_WRAPPED_IF_FALSE(false))
                  {
                   if(_GLF_DEAD(false))
                    barrier();
                  }
                 else
                  {
                   for(int _injected_loop_counter = _GLF_IDENTITY(0, (0) / 1); _GLF_WRAPPED_LOOP(_injected_loop_counter < ((((1 << _GLF_IDENTITY(_GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), min(int(2), int(2)))), (_GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), min(int(2), int(2))))) | _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), min(int(2), int(2)))), (_GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), min(int(2), int(2))))) | (_GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), min(int(2), int(_GLF_IDENTITY(2, (2) >> 0)))))))), ((_GLF_IDENTITY(_GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), min(int(2), int(2)))), (_GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), min(int(2), int(2))))) | (_GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), min(int(2), int(_GLF_IDENTITY(2, (2) >> 0))))))))) ^ 0))) >> _GLF_IDENTITY(int(2), int(2))) << _GLF_IDENTITY(int(1), int(1))) >> _GLF_IDENTITY(int(1), int(_GLF_IDENTITY(1, max(_GLF_IDENTITY(1, clamp(1, 1, 1)), _GLF_IDENTITY(1, 0 | (1)))))))); _injected_loop_counter ++)
                    {
                     do
                      {
                       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false)), _GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(bvec2(bvec2(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), bvec2(bvec3(bvec2(bvec2(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), false)))), bvec2(_GLF_IDENTITY(bvec2(bvec2(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, 0.0 + (injectionSwitch.y)))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), _GLF_IDENTITY(bvec2(bvec3(bvec2(bvec2(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! _GLF_IDENTITY((_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false)), true && ((_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false))))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false)), bvec2(bvec3(bvec2(bvec3(bvec2(bvec2(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))), (bool(_GLF_IDENTITY(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_IDENTITY(_GLF_FUZZED(-7.2), min(_GLF_FUZZED(-7.2), _GLF_FUZZED(-7.2)))), bool(false)))))), bvec2(_GLF_IDENTITY(bvec2(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true), true))))))), bvec2(bvec3(bvec2(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, true && _GLF_IDENTITY((false), ! (! ((false)))))))), (injectionSwitch.x > injectionSwitch.y)))), _GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))))) && true))))
                        {
                         for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < (1 | 0)); _injected_loop_counter ++)
                          {
                           if(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), true && (_GLF_WRAPPED_IF_FALSE(false)))) || _GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, (false) || false)), ! (! (! (_GLF_IDENTITY(false, (false) || false)))))), ! (! (_GLF_IDENTITY(! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, (false) || false)), ! (! (! (_GLF_IDENTITY(false, (false) || false)))))), ! (! (! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, (false) || false)), ! _GLF_IDENTITY((! (! (_GLF_IDENTITY(false, (false) || false)))), bool(bool(_GLF_IDENTITY((! (! (_GLF_IDENTITY(false, (false) || false)))), ((! (! (_GLF_IDENTITY(false, (false) || false))))) && true))))))))))))), _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, float(mat3x2(injectionSwitch.x, 1.0, 1.0, 1.0, 0.0, 0.0))), injectionSwitch.x)) > injectionSwitch.y), bool(bvec2((injectionSwitch.x > injectionSwitch.y), false))))))
                            {
                            }
                           else
                            {
                             barrier();
                            }
                          }
                        }
                      }
                     while(_GLF_WRAPPED_LOOP(false));
                    }
                  }
                }
               else
                {
                }
              }
             if(_GLF_DEAD(false))
              barrier();
             if(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), true && (_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))
              {
               if(_GLF_WRAPPED_IF_TRUE(true))
                {
                 do
                  {
                   do
                    {
                     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), (false) && true))), ((! (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), (false) && true)))) && true)), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)), _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))).x > injectionSwitch.y)) || (false))))
                      barrier();
                    }
                   while(_GLF_WRAPPED_LOOP(false));
                   if(_GLF_DEAD(false))
                    barrier();
                   if(_GLF_WRAPPED_IF_FALSE(false))
                    {
                    }
                   else
                    {
                     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).y))))
                      barrier();
                    }
                  }
                 while(_GLF_WRAPPED_LOOP(false));
                 atomicStore(buf[next_virtual_gid], uint(_GLF_IDENTITY(read_1, ~ (~ (read_1))) + 1), 4, _GLF_IDENTITY(_GLF_IDENTITY(64, int(ivec3(64, _GLF_IDENTITY(1, 0 ^ (1)), 1))), (64) ^ 0), 4);
                }
               else
                {
                 if(_GLF_DEAD(false))
                  {
                   if(_GLF_WRAPPED_IF_TRUE(true))
                    {
                     if(_GLF_DEAD(false))
                      barrier();
                    }
                   else
                    {
                    }
                   barrier();
                  }
                }
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                barrier();
               do
                {
                 if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))
                  {
                   for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
                    {
                     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                      barrier();
                     barrier();
                    }
                  }
                }
               while(_GLF_WRAPPED_LOOP(false));
              }
             else
              {
               if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > injectionSwitch.y)))))))
                {
                 if(_GLF_WRAPPED_IF_TRUE(true))
                  {
                   barrier();
                  }
                 else
                  {
                  }
                }
               if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
                {
                 if(_GLF_WRAPPED_IF_FALSE(false))
                  {
                  }
                 else
                  {
                   for(int _injected_loop_counter = int(_GLF_ZERO(0.0, injectionSwitch.x)); _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
                    {
                     barrier();
                     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                      barrier();
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
 else
  {
  }
 do
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, true, false), bvec3(bvec3(bvec3(false, _GLF_IDENTITY(_GLF_IDENTITY(true, bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, bool(bvec2(true, false)))))), true), bvec2(bvec4(bvec2(_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, bool(bvec2(true, false)))))), true), true, false))))), bool(bvec4(_GLF_IDENTITY(true, bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, bool(bvec2(true, false)))))), true), bvec2(bvec4(bvec2(_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, bool(bvec2(true, false)))))), true), true, false))))), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))), false))))))))
    barrier();
  }
 while(_GLF_WRAPPED_LOOP(false));
 uint read_2 = atomicLoad(buf[virtual_gid], 4, 64, 0);
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) || false)))), (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     barrier();
    }
   else
    {
    }
  }
 atomicStore(buf[next_virtual_gid], _GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(read_1, (read_1) | (_GLF_IDENTITY(read_1, 0u + (read_1)))), (read_1) / 1u) + 1 == read_2, _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(read_1 + 1, _GLF_IDENTITY((read_1 + 1) / 1u, uint(uint((_GLF_IDENTITY(read_1, uint(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(read_1, clamp(read_1, read_1, read_1)), 1u, (0u ^ 1u)), uvec3(0u, 0u, 0u) ^ (uvec3(_GLF_IDENTITY(read_1, clamp(read_1, read_1, read_1)), 1u, (0u ^ 1u)))))) + 1) / 1u)))) == read_2, _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(5.3))), float(_GLF_IDENTITY(vec4(_GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(5.3))), _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 1.0), (false ? _GLF_FUZZED(vec4(-4.4, 61.13, -6.1, 665.086)) : vec4(_GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(5.3))), _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 1.0))))))), bool(bvec4(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, bool(bvec2(injectionSwitch.x < injectionSwitch.y, false))))), _GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), ! (! (! (true)))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))), false, false)), (_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(read_1 + 1, _GLF_IDENTITY((read_1 + 1) / 1u, uint(uint((_GLF_IDENTITY(read_1, uint(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(read_1, clamp(read_1, read_1, read_1)), 1u, (0u ^ 1u)), uvec3(0u, 0u, 0u) ^ (uvec3(_GLF_IDENTITY(read_1, clamp(read_1, read_1, read_1)), 1u, (0u ^ 1u)))))) + 1) / 1u)))) == read_2, _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(5.3))), float(_GLF_IDENTITY(vec4(_GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(5.3))), _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 1.0), (false ? _GLF_FUZZED(vec4(-4.4, 61.13, -6.1, 665.086)) : vec4(_GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(5.3))), _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 1.0))))))), bool(bvec4(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, bool(bvec2(injectionSwitch.x < injectionSwitch.y, false))))), _GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), ! (! (! (true)))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))), false, false)), (bool(bvec4(_GLF_IDENTITY(read_1 + 1, _GLF_IDENTITY((read_1 + 1) / 1u, uint(uint((_GLF_IDENTITY(read_1, uint(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(read_1, clamp(read_1, read_1, read_1)), 1u, (0u ^ 1u)), uvec3(0u, 0u, 0u) ^ (uvec3(_GLF_IDENTITY(read_1, clamp(read_1, read_1, read_1)), 1u, (0u ^ 1u)))))) + 1) / 1u)))) == read_2, _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(5.3))), float(_GLF_IDENTITY(vec4(_GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(5.3))), _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 1.0), (false ? _GLF_FUZZED(vec4(-4.4, 61.13, -6.1, 665.086)) : vec4(_GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(5.3))), _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 1.0))))))), bool(bvec4(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, bool(bvec2(injectionSwitch.x < injectionSwitch.y, false))))), _GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), ! (! (! (true)))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))), false, false))) && true)) && true))), _GLF_IDENTITY(_GLF_IDENTITY((uint(_GLF_IDENTITY(read_1 + 1 == read_2, bool(bvec4(read_1 + 1 == read_2, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, false))))), ((uint(_GLF_IDENTITY(read_1 + 1 == read_2, bool(bvec4(read_1 + 1 == read_2, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, false)))))) + 0u) >> 0u, ~ (~ (_GLF_IDENTITY((uint(_GLF_IDENTITY(read_1 + 1 == read_2, bool(bvec4(read_1 + 1 == read_2, _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))) || false), false, false))))) >> 0u, ((uint(_GLF_IDENTITY(read_1 + 1 == read_2, bool(bvec4(read_1 + 1 == read_2, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, false))))) >> 0u) ^ 0u))))) + 1, 4, 64, _GLF_IDENTITY(4, _GLF_IDENTITY(min(_GLF_IDENTITY(4, (_GLF_IDENTITY(4, int(ivec2(4, 0)))) ^ 0), 4), (min(_GLF_IDENTITY(4, (_GLF_IDENTITY(4, int(ivec2(4, 0)))) ^ 0), 4)) | (min(_GLF_IDENTITY(4, (_GLF_IDENTITY(4, int(ivec2(4, 0)))) ^ 0), 4)))));
}
