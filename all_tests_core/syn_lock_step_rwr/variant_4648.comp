#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


struct _GLF_struct_60 {
 bvec2 _f0;
 float _f1;
 uvec2 _f2;
 mat4x3 _f3;
} ;

struct _GLF_struct_59 {
 uint _f0;
 bvec3 _f1;
 mat2x4 _f2;
 vec3 _f3;
 bvec4 _f4;
 uvec4 _f5;
 bvec2 _f6;
} ;

struct _GLF_struct_58 {
 mat4x3 _f0;
 mat2x4 _f1;
 mat3 _f2;
 uvec3 _f3;
} ;

struct _GLF_struct_57 {
 vec2 _f0;
 uvec3 _f1;
 ivec3 _f2;
 ivec3 _f3;
 mat3 _f4;
 vec4 _f5;
 mat4x2 _f6;
} ;

struct _GLF_struct_61 {
 _GLF_struct_57 _f0;
 bool _f1;
 ivec2 _f2;
 _GLF_struct_58 _f3;
 _GLF_struct_59 _f4;
 _GLF_struct_60 _f5;
} ;

struct _GLF_struct_55 {
 bool _f0;
 mat2 _f1;
 ivec4 _f2;
 bvec4 _f3;
} ;

struct _GLF_struct_54 {
 bvec4 _f0;
} ;

struct _GLF_struct_53 {
 bool _f0;
 mat4 _f1;
 bvec4 _f2;
 mat2x3 _f3;
} ;

struct _GLF_struct_56 {
 uint next_virtual_gid;
 _GLF_struct_53 _f0;
 mat4 _f1;
 _GLF_struct_54 _f2;
 vec2 _f3;
 _GLF_struct_55 _f4;
} ;

struct _GLF_struct_51 {
 mat3x4 _f0;
 uvec4 _f1;
} ;

struct _GLF_struct_50 {
 mat4x3 _f0;
 mat2 _f1;
 uint _f2;
 mat3x2 _f3;
} ;

struct _GLF_struct_52 {
 bool _f0;
 mat2x4 _f1;
 uvec4 _f2;
 mat4 _f3;
 _GLF_struct_50 _f4;
 _GLF_struct_51 _f5;
} ;

struct _GLF_struct_62 {
 _GLF_struct_52 _f0;
 ivec4 _f1;
 _GLF_struct_56 _f2;
 _GLF_struct_61 _f3;
} ;

struct _GLF_struct_47 {
 mat4 _f0;
 bvec2 _f1;
 ivec3 _f2;
 mat2x3 _f3;
} ;

struct _GLF_struct_46 {
 bvec3 _f0;
 mat4x2 _f1;
 uint _f2;
 uvec2 _f3;
 bvec4 _f4;
} ;

struct _GLF_struct_45 {
 uvec4 _f0;
 uint _f1;
 uvec2 _f2;
} ;

struct _GLF_struct_48 {
 _GLF_struct_45 _f0;
 ivec2 _f1;
 mat2x3 _f2;
 uvec4 _f3;
 _GLF_struct_46 _f4;
 _GLF_struct_47 _f5;
} ;

struct _GLF_struct_44 {
 vec2 _f0;
 mat3 _f1;
 uvec2 _f2;
 mat2x4 _f3;
} ;

struct _GLF_struct_42 {
 mat3 _f0;
 int _f1;
 ivec4 _f2;
} ;

struct _GLF_struct_41 {
 vec2 _f0;
 mat2x3 _f1;
 mat2 _f2;
 uint _f3;
 mat3 _f4;
 vec3 _f5;
} ;

struct _GLF_struct_40 {
 mat2x4 _f0;
 vec4 _f1;
 ivec2 _f2;
} ;

struct _GLF_struct_39 {
 mat2 _f0;
 uvec4 _f1;
 mat3 _f2;
 bvec3 _f3;
 uvec4 _f4;
 mat2 _f5;
 uvec4 _f6;
} ;

struct _GLF_struct_43 {
 mat2x3 _f0;
 _GLF_struct_39 _f1;
 _GLF_struct_40 _f2;
 uvec2 _f3;
 uint _f4;
 _GLF_struct_41 _f5;
 _GLF_struct_42 _f6;
} ;

struct _GLF_struct_37 {
 ivec3 _f0;
 vec2 _f1;
 ivec2 _f2;
 float _f3;
 bvec4 _f4;
} ;

struct _GLF_struct_38 {
 bvec2 _f0;
 _GLF_struct_37 _f1;
 bvec4 _f2;
 uvec3 _f3;
 mat2x3 _f4;
} ;

struct _GLF_struct_49 {
 _GLF_struct_38 _f0;
 _GLF_struct_43 _f1;
 uint _f2;
 _GLF_struct_44 _f3;
 uint _f4;
 mat4 _f5;
 uint subgroup_id;
 _GLF_struct_48 _f6;
} ;

struct _GLF_struct_34 {
 bvec4 _f0;
 mat4 _f1;
 bvec2 _f2;
 uvec3 GLF_merged3_0_1_16_1_1_6_2_1_14next_virtual_gidread_1workgroup_base;
 mat4x2 _f3;
 int _f4;
 bvec2 _f5;
} ;

struct _GLF_struct_35 {
 vec2 _f0;
 float _f1;
 bvec2 _f2;
 _GLF_struct_34 _f3;
} ;

struct _GLF_struct_32 {
 mat2x4 _f0;
 int _f1;
 mat2 _f2;
 ivec4 _f3;
 mat2x4 _f4;
 ivec2 _f5;
} ;

struct _GLF_struct_31 {
 int _f0;
 mat2x3 _f1;
 mat3x2 _f2;
} ;

struct _GLF_struct_30 {
 mat2 _f0;
 mat2x4 _f1;
 mat3x4 _f2;
 vec2 _f3;
} ;

struct _GLF_struct_33 {
 _GLF_struct_30 _f0;
 _GLF_struct_31 _f1;
 _GLF_struct_32 _f2;
 ivec2 _f3;
 mat4x3 _f4;
} ;

struct _GLF_struct_28 {
 bvec4 _f0;
 bvec4 _f1;
 mat4x3 _f2;
 mat4x3 _f3;
 mat4x2 _f4;
} ;

struct _GLF_struct_29 {
 mat3 _f0;
 _GLF_struct_28 _f1;
 vec3 _f2;
 mat3 _f3;
 bvec3 _f4;
} ;

struct _GLF_struct_36 {
 vec2 _f0;
 mat3 _f1;
 _GLF_struct_29 _f2;
 mat2 _f3;
 _GLF_struct_33 _f4;
 _GLF_struct_35 _f5;
} ;

struct _GLF_struct_25 {
 uint _f0;
 ivec3 _f1;
 uvec2 _f2;
 mat4x3 _f3;
 vec2 _f4;
 mat3 _f5;
} ;

struct _GLF_struct_24 {
 bvec2 _f0;
 bvec3 _f1;
} ;

struct _GLF_struct_26 {
 vec2 _f0;
 mat4x3 _f1;
 uvec2 _f2;
 uint workgroup_size;
 _GLF_struct_24 _f3;
 _GLF_struct_25 _f4;
 bvec3 _f5;
} ;

struct _GLF_struct_27 {
 uvec4 _f0;
 _GLF_struct_26 _f1;
} ;

struct _GLF_struct_22 {
 uint num_workgroup;
 bool _f0;
} ;

struct _GLF_struct_21 {
 mat4 _f0;
} ;

struct _GLF_struct_19 {
 mat2x4 _f0;
 mat3x4 _f1;
 uvec3 _f2;
 mat3x2 _f3;
} ;

struct _GLF_struct_20 {
 _GLF_struct_19 _f0;
} ;

struct _GLF_struct_17 {
 vec4 _f0;
 uvec4 _f1;
 bool _f2;
 uvec4 _f3;
 uvec3 _f4;
 mat2x4 _f5;
} ;

struct _GLF_struct_16 {
 int _f0;
 mat3x4 _f1;
 ivec2 _f2;
} ;

struct _GLF_struct_15 {
 ivec4 _f0;
 bvec3 _f1;
 uint _f2;
} ;

struct _GLF_struct_18 {
 _GLF_struct_15 _f0;
 _GLF_struct_16 _f1;
 _GLF_struct_17 _f2;
 uvec4 _f3;
} ;

struct _GLF_struct_13 {
 vec2 _f0;
} ;

struct _GLF_struct_14 {
 mat4x2 _f0;
 _GLF_struct_13 _f1;
 mat4x2 _f2;
 mat3 _f3;
} ;

struct _GLF_struct_23 {
 _GLF_struct_14 _f0;
 _GLF_struct_18 _f1;
 _GLF_struct_20 _f2;
 bvec4 _f3;
 _GLF_struct_21 _f4;
 _GLF_struct_22 _f5;
 mat2 _f6;
} ;

struct _GLF_struct_10 {
 mat2x4 _f0;
 bvec3 _f1;
 vec3 _f2;
 bvec4 _f3;
 uvec2 _f4;
} ;

struct _GLF_struct_9 {
 mat4 _f0;
 int _f1;
 bool _f2;
} ;

struct _GLF_struct_8 {
 mat2x4 _f0;
 mat4 _f1;
 mat3 _f2;
 bvec4 _f3;
 mat4 _f4;
 vec4 _f5;
} ;

struct _GLF_struct_11 {
 uint subgroup_local_id;
 mat3x2 _f0;
 _GLF_struct_8 _f1;
 _GLF_struct_9 _f2;
 _GLF_struct_10 _f3;
} ;

struct _GLF_struct_12 {
 mat4x2 _f0;
 mat4x3 _f1;
 _GLF_struct_11 _f2;
} ;

struct _GLF_struct_5 {
 mat2x4 _f0;
 mat2x4 _f1;
 int _f2;
 mat3 _f3;
 bvec4 _f4;
} ;

struct _GLF_struct_6 {
 _GLF_struct_5 _f0;
 vec3 _f1;
} ;

struct _GLF_struct_4 {
 ivec4 _f0;
 mat2 _f1;
} ;

struct _GLF_struct_2 {
 float _f0;
 ivec2 _f1;
 bool _f2;
 mat3 _f3;
} ;

struct _GLF_struct_3 {
 uvec2 _f0;
 _GLF_struct_2 _f1;
 bvec3 _f2;
 bool _f3;
 mat3 _f4;
} ;

struct _GLF_struct_0 {
 mat3 _f0;
 ivec3 _f1;
 vec2 _f2;
} ;

struct _GLF_struct_1 {
 _GLF_struct_0 _f0;
} ;

struct _GLF_struct_7 {
 _GLF_struct_1 _f0;
 _GLF_struct_3 _f1;
 uvec2 _f2;
 _GLF_struct_4 _f3;
 _GLF_struct_6 _f4;
 uvec3 GLF_merged3_0_1_13_1_1_11_2_1_14num_workgroupvirtual_gidworkgroup_base;
} ;

layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 _GLF_struct_36 _GLF_struct_replacement_36;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(injectionSwitch.x > injectionSwitch.y, false))))), bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true, false))))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, false)))))
      return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, float(mat4x2(injectionSwitch.x, 0.0, 0.0, 1.0, exp(0.0), 1.0, 1.0, 0.0))), injectionSwitch.x)) > injectionSwitch.y))), bool(bvec3(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, float(mat4x2(injectionSwitch.x, 0.0, 0.0, 1.0, exp(0.0), 1.0, 1.0, 0.0))), injectionSwitch.x)) > injectionSwitch.y))), false, false))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      return;
    }
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)), injectionSwitch)) : _GLF_FUZZED((acosh(0.1) - injectionSwitch)))).x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))), bool(bvec4(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))), false, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))
    return;
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 _GLF_struct_7 _GLF_struct_replacement_7;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bool(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))))))))), _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec4(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y)))))))))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)), bool(bvec4(bool(bvec4(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y)))))))))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)), true, false, true))), _GLF_IDENTITY((bool(bvec4(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bool(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y))))))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))) && true, ((bool(bvec4(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bool(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y))))))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))) && true) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > injectionSwitch.y))))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 _GLF_struct_49 _GLF_struct_replacement_49 = _GLF_struct_49(_GLF_struct_38(bvec2(true), _GLF_struct_37(ivec3(1), vec2(1.0), ivec2(1), 1.0, bvec4(true)), bvec4(_GLF_IDENTITY(true, (true) && true)), uvec3(1u), mat2x3(1.0)), _GLF_struct_43(mat2x3(1.0), _GLF_struct_39(mat2(1.0), uvec4(1u), mat3(1.0), bvec3(true), uvec4(_GLF_IDENTITY(1u, uint(_GLF_IDENTITY(uvec2(_GLF_IDENTITY(1u, clamp(_GLF_IDENTITY(1u, (1u) | 0u), 1u, 1u)), _GLF_IDENTITY(1u, min(1u, 1u))), (uvec2(_GLF_IDENTITY(1u, clamp(_GLF_IDENTITY(1u, (1u) | 0u), 1u, 1u)), _GLF_IDENTITY(1u, min(1u, 1u)))) | (uvec2(_GLF_IDENTITY(1u, clamp(_GLF_IDENTITY(1u, (1u) | 0u), 1u, 1u)), _GLF_IDENTITY(1u, min(1u, 1u)))))))), mat2(1.0), uvec4(1u)), _GLF_struct_40(mat2x4(1.0), vec4(1.0), ivec2(1)), uvec2(1u), 1u, _GLF_struct_41(vec2(1.0), mat2x3(1.0), mat2(1.0), 1u, mat3(1.0), vec3(1.0)), _GLF_struct_42(mat3(1.0), 1, ivec4(1))), 1u, _GLF_struct_44(vec2(1.0), mat3(_GLF_IDENTITY(1.0, 1.0 * (_GLF_IDENTITY(1.0, max(1.0, 1.0))))), uvec2(1u), mat2x4(1.0)), 1u, mat4(1.0), gl_SubgroupID, _GLF_struct_48(_GLF_struct_45(uvec4(1u), _GLF_IDENTITY(1u, (1u) - 0u), uvec2(1u)), ivec2(1), mat2x3(1.0), uvec4(1u), _GLF_struct_46(bvec3(true), mat4x2(1.0), 1u, uvec2(1u), bvec4(true)), _GLF_struct_47(mat4(1.0), _GLF_IDENTITY(bvec2(true), bvec2(bvec3(bvec2(true), true))), ivec3(1), mat2x3(1.0))));
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, true, false, true)), ! (! (bool(bvec4(false, true, false, true))))))))
    barrier();
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(bvec4(false, false, false, false))))))), ! (! (_GLF_DEAD(_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((_GLF_IDENTITY(false, bool(bvec4(false, false, false, false)))), ((_GLF_IDENTITY(false, bool(bvec4(false, false, false, false))))) && true))))))), ! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(bvec4(false, false, false, false))))))), _GLF_IDENTITY(! (! (_GLF_DEAD(_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((_GLF_IDENTITY(false, bool(bvec4(false, false, false, false)))), ((_GLF_IDENTITY(false, bool(bvec4(false, false, false, false))))) && true)))))), bool(bvec4(! (! (_GLF_DEAD(_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((_GLF_IDENTITY(false, bool(bvec4(false, false, false, false)))), ((_GLF_IDENTITY(false, bool(bvec4(false, false, false, false))))) && true)))))), false, true, true))))))))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))))))
        barrier();
       return;
      }
     if(_GLF_DEAD(false))
      barrier();
     return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(_GLF_IDENTITY(bvec2(injectionSwitch.x > injectionSwitch.y, true), bvec2(bvec2(bvec2(injectionSwitch.x > injectionSwitch.y, true)))))))))))))
        return;
       barrier();
      }
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  return;
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(_GLF_DEAD(false), true, false), bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_DEAD(false), true, false), bvec3(bvec4(bvec3(_GLF_DEAD(false), true, false), false))), false)))), bool(bvec2(bool(_GLF_IDENTITY(bvec3(_GLF_DEAD(false), true, false), bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_DEAD(false), true, false), bvec3(bvec4(bvec3(_GLF_DEAD(false), true, false), false))), false)))), true)))))
          {
           if(_GLF_DEAD(false))
            return;
           barrier();
          }
         return;
        }
       if(_GLF_DEAD(false))
        return;
       return;
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           barrier();
          }
         barrier();
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(false))
              barrier();
             return;
            }
           if(_GLF_DEAD(false))
            barrier();
           return;
           if(_GLF_DEAD(false))
            barrier();
          }
         if(_GLF_DEAD(false))
          barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
      }
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), bool(bvec2(_GLF_IDENTITY(bool(false), true && (bool(false))), false)))))))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(3646.9687)), bool(false)))))))
    barrier();
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))), ! (! (_GLF_DEAD(_GLF_IDENTITY(false, true && (false)))))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || _GLF_IDENTITY((false), false || (_GLF_IDENTITY((false), _GLF_IDENTITY(bool(bool((false))), true && (bool(bool((false)))))))))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y))))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec3(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), false, false)))) || false), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y)), false, false))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        return;
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > injectionSwitch.y))), true && (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, true && (false))), (! (_GLF_IDENTITY(false, true && (false)))) || false)))))
    return;
   return;
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
    return;
  }
 _GLF_struct_12 _GLF_struct_replacement_12 = _GLF_struct_12(mat4x2(1.0), mat4x3(1.0), _GLF_struct_11(gl_SubgroupInvocationID, mat3x2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(float(67146)) : 1.0)), max(_GLF_IDENTITY(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(float(67146)) : 1.0)), min(_GLF_IDENTITY(1.0, _GLF_IDENTITY((false ? _GLF_FUZZED(float(67146)) : 1.0), max((false ? _GLF_FUZZED(float(67146)) : 1.0), (false ? _GLF_FUZZED(float(67146)) : 1.0)))), _GLF_IDENTITY(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(float(67146)) : 1.0)), min(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(float(67146)) : 1.0)), _GLF_IDENTITY(1.0, (_GLF_IDENTITY(false ? _GLF_FUZZED(float(67146)) : 1.0, mix(float(false ? _GLF_FUZZED(float(67146)) : 1.0), float(_GLF_FUZZED(float(115589u))), bool(false))))))))), _GLF_IDENTITY(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(float(67146)) : 1.0)), (_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(float(67146)) : 1.0))) / 1.0))), float(mat3x4(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(float(_GLF_IDENTITY(67146, (67146) | (_GLF_IDENTITY(67146, 0 | (67146)))))) : 1.0)), 0.0, 0.0, 1.0, 1.0, 0.0, sqrt(1.0), 0.0, 1.0, 1.0, _GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0)), dot(vec3(_GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, (0.0) / 1.0), 0.0, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-366.295)), float(0.0), bool(true))))), 0.0, 1.0), vec3(0.0, 0.0, 1.0))), round(length(normalize(abs(vec3(1.0, _GLF_IDENTITY(1.0, min(1.0, _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)))), 1.0))))))))), _GLF_struct_8(mat2x4(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-19.38)), float(1.0), bool(true)))), mat4(1.0), mat3(1.0), bvec4(true), mat4(1.0), vec4(_GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(-2563.0689)), bool(false)))) + 0.0), 1.0)))), _GLF_struct_9(mat4(1.0), 1, _GLF_IDENTITY(true, bool(bvec3(true, true, false)))), _GLF_struct_10(mat2x4(1.0), bvec3(_GLF_IDENTITY(true, _GLF_IDENTITY(! (! (_GLF_IDENTITY(_GLF_IDENTITY(true, (true) || false), _GLF_IDENTITY((_GLF_IDENTITY(true, (true) || false)), _GLF_IDENTITY(bool(bool((_GLF_IDENTITY(true, (true) || false)))), bool(bvec4(bool(bool((_GLF_IDENTITY(true, (true) || false)))), true, true, false)))) || false))), ! (! (! (! (_GLF_IDENTITY(_GLF_IDENTITY(true, (true) || false), _GLF_IDENTITY((_GLF_IDENTITY(true, (true) || false)), _GLF_IDENTITY(bool(bool((_GLF_IDENTITY(true, _GLF_IDENTITY((true) || false, ((true) || false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), bool(bvec4(bool(bool(_GLF_IDENTITY((_GLF_IDENTITY(true, (true) || false)), bool(bvec3((_GLF_IDENTITY(true, (true) || false)), false, true))))), true, true, false)))) || false)))))))), vec3(1.0), bvec4(true), uvec2(1u))));
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true)))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false)))))
      return;
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_DEAD(false))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y))) || false)))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(false || (false), bool(bvec4(false || (false), true, false, true)))), (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-48.30), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(4906.0152)), bvec2(true, false))), injectionSwitch)).y))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         return;
        }
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        return;
       return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         return;
        }
       return;
      }
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec2(false, true)))) || false)) && true)))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)).x > injectionSwitch.y), ! (! ((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)).x > injectionSwitch.y)))))), bvec3(bvec4(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false)))), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)).x > injectionSwitch.y), ! (! ((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)).x > injectionSwitch.y)))))), bvec3(bvec4(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false)))), ! (! (bool(_GLF_IDENTITY(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)).x > injectionSwitch.y), ! (! ((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)).x > injectionSwitch.y)))))), bvec3(bvec4(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false))))))), false)), false || (bool(bvec2(_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)).x > injectionSwitch.y), ! (! ((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)).x > injectionSwitch.y)))))), bvec3(bvec4(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false)))), ! (! (bool(_GLF_IDENTITY(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)).x > injectionSwitch.y), ! (! ((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)).x > injectionSwitch.y)))))), bvec3(bvec4(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false))))))), false)))))), bool(bvec4(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)).x > injectionSwitch.y), ! (! ((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)).x > injectionSwitch.y)))))), bvec3(bvec4(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false)))), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)).x > injectionSwitch.y), ! (! ((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)).x > injectionSwitch.y)))))), bvec3(bvec4(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false)))), ! (! (bool(_GLF_IDENTITY(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)).x > injectionSwitch.y), ! (! ((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)).x > injectionSwitch.y)))))), bvec3(bvec4(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false))))))), false)), false || (bool(bvec2(_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)).x > injectionSwitch.y), ! (! ((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)).x > injectionSwitch.y)))))), bvec3(bvec4(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false)))), ! (! (bool(_GLF_IDENTITY(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)).x > injectionSwitch.y), ! (! ((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)).x > injectionSwitch.y)))))), bvec3(bvec4(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false))))))), false)))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true)))))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(81.85)), float(injectionSwitch.y), bool(true)))))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     return;
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || _GLF_IDENTITY(false, bool(bvec2(false, true))))) && true)))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)))))
      return;
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      return;
    }
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
  return;
 _GLF_struct_23 _GLF_struct_replacement_23 = _GLF_struct_23(_GLF_struct_14(mat4x2(1.0), _GLF_struct_13(vec2(1.0)), mat4x2(1.0), _GLF_IDENTITY(_GLF_IDENTITY(mat3(_GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, 0.0 + (_GLF_IDENTITY(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(7.5)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), min(1.0, 1.0)))), 1.0))), (false ? _GLF_FUZZED(mat3(-33.47, 849.685, -11.09, -2840.7281, -6.2, -8.4, -7.3, _GLF_IDENTITY(7.4, max(7.4, 7.4)), 8.4)) : mat3(1.0))), (_GLF_IDENTITY(_GLF_IDENTITY(mat3(_GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, 0.0 + (_GLF_IDENTITY(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(7.5)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), min(1.0, 1.0)))), 1.0))), (false ? _GLF_FUZZED(mat3(-33.47, 849.685, -11.09, -2840.7281, -6.2, -8.4, -7.3, _GLF_IDENTITY(7.4, max(7.4, 7.4)), 8.4)) : mat3(1.0))), (true ? _GLF_IDENTITY(_GLF_IDENTITY(mat3(_GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, 0.0 + (_GLF_IDENTITY(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(7.5)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), min(1.0, 1.0)))), 1.0))), (false ? _GLF_FUZZED(mat3(-33.47, 849.685, -11.09, -2840.7281, -6.2, -8.4, -7.3, _GLF_IDENTITY(7.4, max(7.4, 7.4)), 8.4)) : mat3(1.0))), mat3(mat4x3(_GLF_IDENTITY(mat3(_GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, 0.0 + (_GLF_IDENTITY(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(7.5)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), min(1.0, 1.0)))), 1.0))), (false ? _GLF_FUZZED(mat3(-33.47, 849.685, -11.09, -2840.7281, -6.2, -8.4, -7.3, _GLF_IDENTITY(7.4, max(7.4, 7.4)), 8.4)) : mat3(1.0)))))) : _GLF_FUZZED(mat3(56.19, 7.0, -893.155, 9.3, -477.688, 5.6, 0.6, 45.28, 8.3))))) * mat3(1.0))), _GLF_struct_18(_GLF_struct_15(ivec4(1), bvec3(true), 1u), _GLF_struct_16(1, mat3x4(1.0), ivec2(1)), _GLF_struct_17(vec4(1.0), uvec4(1u), true, _GLF_IDENTITY(uvec4(1u), (true ? uvec4(_GLF_IDENTITY(1u, ~ (~ (1u)))) : _GLF_FUZZED(uvec4(150343u, 99279u, 1223u, 38149u)))), uvec3(1u), mat2x4(1.0)), uvec4(1u)), _GLF_struct_20(_GLF_struct_19(mat2x4(1.0), mat3x4(1.0), uvec3(1u), mat3x2(1.0))), bvec4(_GLF_IDENTITY(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (true))), _GLF_struct_21(mat4(1.0)), _GLF_struct_22(gl_NumWorkGroups.x, true), mat2(1.0));
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 _GLF_struct_replacement_7.GLF_merged3_0_1_13_1_1_11_2_1_14num_workgroupvirtual_gidworkgroup_base.x = _GLF_struct_replacement_23._f5.num_workgroup;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  barrier();
 _GLF_struct_27 _GLF_struct_replacement_27 = _GLF_struct_27(uvec4(1u), _GLF_struct_26(vec2(1.0), mat4x3(1.0), uvec2(1u), gl_WorkGroupSize.x, _GLF_struct_24(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(true), _GLF_IDENTITY(bvec2(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(true), bvec2(bvec2(bvec2(true)))), _GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(bvec2(true), false), bvec3(bvec3(bvec3(bvec2(true), false)))), _GLF_IDENTITY(_GLF_IDENTITY(bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec2(true), false), bvec3(bvec3(bvec3(bvec2(true), false)))), false)), bvec3(_GLF_IDENTITY(bvec3(bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec2(true), false), bvec3(bvec3(bvec3(bvec2(true), false)))), false))), bvec3(bvec4(bvec3(bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec2(true), false), bvec3(bvec3(bvec3(bvec2(true), false)))), false))), true))))), _GLF_IDENTITY(bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec2(true), false), bvec3(bvec3(bvec3(bvec2(true), false)))), false)), bvec3(_GLF_IDENTITY(bvec3(bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec2(true), false), bvec3(bvec3(bvec3(bvec2(true), false)))), false))), bvec3(bvec4(bvec3(bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec2(true), false), bvec3(bvec3(bvec3(bvec2(true), false)))), false))), true))))), false)), bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec2(true), false), bvec3(bvec3(bvec3(bvec2(true), false)))), false)), bvec3(_GLF_IDENTITY(bvec3(bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec2(true), false), bvec3(bvec3(bvec3(bvec2(true), false)))), false))), bvec3(bvec4(bvec3(bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec2(true), false), bvec3(bvec3(bvec3(bvec2(true), false)))), false))), true))))), false)), bvec3(bvec4(bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec2(true), false), bvec3(bvec3(bvec3(bvec2(true), false)))), false)), bvec3(_GLF_IDENTITY(bvec3(bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec2(true), false), bvec3(bvec3(bvec3(bvec2(true), false)))), false))), bvec3(bvec4(bvec3(bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec2(true), false), bvec3(bvec3(bvec3(bvec2(true), false)))), false))), true))))), false)), true))), false)))))), bvec2(bvec2(bvec2(_GLF_IDENTITY(bvec3(bvec2(true), false), bvec3(bvec3(bvec3(bvec2(true), false))))))))))), bvec2(bvec3(bvec2(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(true), bvec2(bvec3(bvec2(true), false))), _GLF_IDENTITY(bvec2(_GLF_IDENTITY(bvec3(bvec2(true), false), bvec3(bvec3(bvec3(bvec2(true), false))))), bvec2(bvec2(bvec2(_GLF_IDENTITY(bvec3(bvec2(true), _GLF_IDENTITY(false, (false) && true)), bvec3(bvec3(bvec3(bvec2(true), false))))))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), _GLF_IDENTITY(bvec2(bvec2(_GLF_IDENTITY(bvec2(true), bvec2(bvec4(bvec2(true), _GLF_IDENTITY(false, true && (false)), _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(-51.97, -676.117)))).y))))))), bvec2(bvec2(bvec2(bvec2(bvec2(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), bool(bool(_GLF_IDENTITY(! _GLF_IDENTITY((true), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || ((true))), bool(bvec2(! (true), true))))))))))))))), bvec3(true)), _GLF_struct_25(_GLF_IDENTITY(1u, uint(_GLF_ZERO(0.0, injectionSwitch.x)) | _GLF_IDENTITY((1u), ((1u)) >> 0u)), ivec3(1), uvec2(1u), mat4x3(1.0), vec2(_GLF_IDENTITY(1.0, max(1.0, 1.0))), mat3(1.0)), bvec3(true)));
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  return;
 uint workgroup_id = gl_WorkGroupID.x;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint workgroup_base = _GLF_struct_replacement_27._f1.workgroup_size * workgroup_id;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
  }
 _GLF_struct_replacement_36._f5._f3.GLF_merged3_0_1_16_1_1_6_2_1_14next_virtual_gidread_1workgroup_base.z = _GLF_IDENTITY(workgroup_base, (workgroup_base) | 0u);
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(_GLF_ONE(1.0, injectionSwitch.y))), clamp(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)), injectionSwitch, _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)))).x > injectionSwitch.y))))))), false || (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(max(injectionSwitch, injectionSwitch), (true ? max(injectionSwitch, injectionSwitch) : _GLF_FUZZED(injectionSwitch)))).x > injectionSwitch.y))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   barrier();
  }
 _GLF_struct_replacement_7.GLF_merged3_0_1_13_1_1_11_2_1_14num_workgroupvirtual_gidworkgroup_base.z = _GLF_IDENTITY(_GLF_struct_replacement_36._f5._f3.GLF_merged3_0_1_16_1_1_6_2_1_14next_virtual_gidread_1workgroup_base, _GLF_IDENTITY(uvec3(_GLF_IDENTITY(uvec4(_GLF_struct_replacement_36._f5._f3.GLF_merged3_0_1_16_1_1_6_2_1_14next_virtual_gidread_1workgroup_base, 0u), (_GLF_IDENTITY(uvec4(_GLF_struct_replacement_36._f5._f3.GLF_merged3_0_1_16_1_1_6_2_1_14next_virtual_gidread_1workgroup_base, 0u), (uvec4(_GLF_struct_replacement_36._f5._f3.GLF_merged3_0_1_16_1_1_6_2_1_14next_virtual_gidread_1workgroup_base, 0u)) / uvec4(1u, 1u, 1u, 1u))) ^ uvec4(0u, 0u, 0u, 0u))), clamp(uvec3(_GLF_IDENTITY(uvec4(_GLF_struct_replacement_36._f5._f3.GLF_merged3_0_1_16_1_1_6_2_1_14next_virtual_gidread_1workgroup_base, 0u), (_GLF_IDENTITY(uvec4(_GLF_struct_replacement_36._f5._f3.GLF_merged3_0_1_16_1_1_6_2_1_14next_virtual_gidread_1workgroup_base, 0u), (uvec4(_GLF_struct_replacement_36._f5._f3.GLF_merged3_0_1_16_1_1_6_2_1_14next_virtual_gidread_1workgroup_base, 0u)) / uvec4(1u, 1u, 1u, 1u))) ^ uvec4(0u, 0u, 0u, 0u))), uvec3(_GLF_IDENTITY(uvec4(_GLF_struct_replacement_36._f5._f3.GLF_merged3_0_1_16_1_1_6_2_1_14next_virtual_gidread_1workgroup_base, 0u), (_GLF_IDENTITY(uvec4(_GLF_struct_replacement_36._f5._f3.GLF_merged3_0_1_16_1_1_6_2_1_14next_virtual_gidread_1workgroup_base, 0u), (uvec4(_GLF_struct_replacement_36._f5._f3.GLF_merged3_0_1_16_1_1_6_2_1_14next_virtual_gidread_1workgroup_base, 0u)) / uvec4(1u, 1u, 1u, 1u))) ^ uvec4(0u, 0u, 0u, 0u))), uvec3(_GLF_IDENTITY(uvec4(_GLF_struct_replacement_36._f5._f3.GLF_merged3_0_1_16_1_1_6_2_1_14next_virtual_gidread_1workgroup_base, 0u), (_GLF_IDENTITY(uvec4(_GLF_struct_replacement_36._f5._f3.GLF_merged3_0_1_16_1_1_6_2_1_14next_virtual_gidread_1workgroup_base, 0u), (uvec4(_GLF_struct_replacement_36._f5._f3.GLF_merged3_0_1_16_1_1_6_2_1_14next_virtual_gidread_1workgroup_base, 0u)) / uvec4(1u, 1u, 1u, 1u))) ^ uvec4(0u, 0u, 0u, 0u)))))).z;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  return;
 uint virtual_gid = _GLF_IDENTITY(_GLF_struct_replacement_7.GLF_merged3_0_1_13_1_1_11_2_1_14num_workgroupvirtual_gidworkgroup_base.z + _GLF_struct_replacement_49.subgroup_id * subgroup_size + _GLF_struct_replacement_12._f2.subgroup_local_id, (_GLF_IDENTITY(_GLF_struct_replacement_7.GLF_merged3_0_1_13_1_1_11_2_1_14num_workgroupvirtual_gidworkgroup_base, (_GLF_struct_replacement_7.GLF_merged3_0_1_13_1_1_11_2_1_14num_workgroupvirtual_gidworkgroup_base) | (_GLF_struct_replacement_7.GLF_merged3_0_1_13_1_1_11_2_1_14num_workgroupvirtual_gidworkgroup_base)).z + _GLF_struct_replacement_49.subgroup_id * subgroup_size + _GLF_IDENTITY(_GLF_struct_replacement_12._f2.subgroup_local_id, (_GLF_struct_replacement_12._f2.subgroup_local_id) + 0u)) * 1u);
 _GLF_struct_replacement_7.GLF_merged3_0_1_13_1_1_11_2_1_14num_workgroupvirtual_gidworkgroup_base.y = _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(virtual_gid, ((0u << _GLF_IDENTITY(uint(8u), uint(8u))) >> _GLF_IDENTITY(uint(0u), uint(0u))) ^ (virtual_gid)), uint(uvec2(_GLF_IDENTITY(_GLF_IDENTITY(virtual_gid, ((0u << _GLF_IDENTITY(uint(8u), uint(8u))) >> _GLF_IDENTITY(uint(0u), uint(0u))) ^ (_GLF_IDENTITY(virtual_gid, (0u << _GLF_IDENTITY(uint(3u), uint(3u))) | (virtual_gid)))), max(_GLF_IDENTITY(virtual_gid, (_GLF_IDENTITY((0u << _GLF_IDENTITY(uint(8u), uint(8u))) >> _GLF_IDENTITY(uint(0u), uint(0u)), (false ? _GLF_FUZZED((21650u - 77682u)) : (0u << _GLF_IDENTITY(uint(8u), uint(8u))) >> _GLF_IDENTITY(uint(0u), uint(0u))))) ^ (virtual_gid)), _GLF_IDENTITY(virtual_gid, ((0u << _GLF_IDENTITY(uint(8u), uint(8u))) >> _GLF_IDENTITY(uint(0u), uint(0u))) ^ (virtual_gid)))), ((1u << _GLF_IDENTITY(uint(2u), _GLF_IDENTITY(uint(2u), uint(uvec3(uint(2u), 0u, 1u))))) >> _GLF_IDENTITY(uint(2u), uint(2u)))))), (_GLF_IDENTITY(_GLF_IDENTITY(virtual_gid, ((0u << _GLF_IDENTITY(uint(8u), uint(8u))) >> _GLF_IDENTITY(uint(0u), uint(0u))) ^ (virtual_gid)), uint(uvec2(_GLF_IDENTITY(_GLF_IDENTITY(virtual_gid, ((0u << _GLF_IDENTITY(uint(8u), uint(8u))) >> _GLF_IDENTITY(uint(0u), uint(0u))) ^ (virtual_gid)), max(_GLF_IDENTITY(virtual_gid, ((0u << _GLF_IDENTITY(uint(8u), uint(8u))) >> _GLF_IDENTITY(uint(0u), uint(0u))) ^ (virtual_gid)), _GLF_IDENTITY(virtual_gid, ((0u << _GLF_IDENTITY(uint(8u), uint(_GLF_IDENTITY(8u, max(8u, 8u))))) >> _GLF_IDENTITY(uint(0u), uint(0u))) ^ (virtual_gid)))), ((1u << _GLF_IDENTITY(_GLF_IDENTITY(uint(2u), (uint(2u)) * 1u), _GLF_IDENTITY(uint(_GLF_IDENTITY(2u, _GLF_IDENTITY(uint(uvec4(2u, 1u, (0u >> _GLF_IDENTITY(uint(0u), uint(0u))), 0u)), min(_GLF_IDENTITY(uint(uvec4(2u, 1u, (0u >> _GLF_IDENTITY(uint(0u), uint(0u))), 0u)), 0u + (uint(uvec4(2u, 1u, (0u >> _GLF_IDENTITY(uint(0u), uint(0u))), 0u)))), uint(uvec4(2u, 1u, (0u >> _GLF_IDENTITY(uint(0u), uint(0u))), 0u)))))), uint(uvec3(uint(2u), 0u, 1u))))) >> _GLF_IDENTITY(uint(2u), uint(2u))))))) << 0u);
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  barrier();
 _GLF_struct_62 _GLF_struct_replacement_62 = _GLF_struct_62(_GLF_struct_52(true, mat2x4(1.0), uvec4(1u), mat4(_GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(-404.361)))), _GLF_struct_50(mat4x3(1.0), mat2(1.0), 1u, mat3x2(_GLF_IDENTITY(1.0, _GLF_IDENTITY(clamp(1.0, 1.0, 1.0), (false ? _GLF_FUZZED(-5.9) : clamp(1.0, 1.0, 1.0)))))), _GLF_struct_51(mat3x4(1.0), _GLF_IDENTITY(uvec4(1u), ~ (~ (_GLF_IDENTITY(uvec4(1u), (uvec4(1u)) << uvec4(0u, 0u, 0u, 0u))))))), ivec4(1), _GLF_struct_56(_GLF_struct_replacement_7.GLF_merged3_0_1_13_1_1_11_2_1_14num_workgroupvirtual_gidworkgroup_base.z + _GLF_IDENTITY(_GLF_struct_replacement_49.subgroup_id, ~ (_GLF_IDENTITY(~ (_GLF_struct_replacement_49.subgroup_id), (true ? _GLF_IDENTITY(~ (_GLF_struct_replacement_49.subgroup_id), max(_GLF_IDENTITY(~ (_GLF_struct_replacement_49.subgroup_id), 1u * (~ (_GLF_struct_replacement_49.subgroup_id))), ~ (_GLF_struct_replacement_49.subgroup_id))) : _GLF_FUZZED(workgroup_base))))) * subgroup_size + ((_GLF_IDENTITY(_GLF_struct_replacement_12._f2.subgroup_local_id + 1, (false ? _GLF_FUZZED(virtual_gid) : _GLF_IDENTITY(_GLF_struct_replacement_12._f2.subgroup_local_id + 1, (false ? _GLF_FUZZED(workgroup_base) : _GLF_struct_replacement_12._f2.subgroup_local_id + 1))))) % subgroup_size), _GLF_struct_53(true, mat4(1.0), bvec4(true), mat2x3(_GLF_IDENTITY(1.0, mix(_GLF_IDENTITY(float(_GLF_IDENTITY(_GLF_FUZZED((+ -0.6)), (_GLF_IDENTITY(_GLF_FUZZED((+ -0.6)), clamp(_GLF_FUZZED((+ -0.6)), _GLF_FUZZED((+ -0.6)), _GLF_FUZZED((+ -0.6))))) / _GLF_ONE(1.0, injectionSwitch.y))), clamp(float(_GLF_IDENTITY(_GLF_FUZZED((+ -0.6)), (_GLF_IDENTITY(_GLF_FUZZED((+ -0.6)), clamp(_GLF_FUZZED((+ -0.6)), _GLF_FUZZED((+ -0.6)), _GLF_FUZZED((+ -0.6))))) / _GLF_ONE(1.0, injectionSwitch.y))), float(_GLF_IDENTITY(_GLF_FUZZED((+ -0.6)), (_GLF_IDENTITY(_GLF_FUZZED((+ -0.6)), clamp(_GLF_FUZZED((+ -0.6)), _GLF_FUZZED((+ -0.6)), _GLF_FUZZED((+ -0.6))))) / _GLF_ONE(1.0, injectionSwitch.y))), float(_GLF_IDENTITY(_GLF_FUZZED((+ -0.6)), (_GLF_IDENTITY(_GLF_FUZZED((+ -0.6)), clamp(_GLF_FUZZED((+ -0.6)), _GLF_FUZZED((+ -0.6)), _GLF_FUZZED((+ -0.6))))) / _GLF_ONE(1.0, injectionSwitch.y))))), float(1.0), bool(true))))), mat4(1.0), _GLF_struct_54(bvec4(_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, false || (true))))))), vec2(_GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(-651.287)))), _GLF_struct_55(true, mat2(1.0), ivec4(1), bvec4(true))), _GLF_struct_61(_GLF_struct_57(vec2(1.0), uvec3(1u), ivec3(1), _GLF_IDENTITY(ivec3(1), (false ? _GLF_IDENTITY(_GLF_FUZZED((20740 % (ivec3(-87306, -19160, 23475) ^ 92722))), clamp(_GLF_FUZZED((20740 % (ivec3(-87306, -19160, 23475) ^ 92722))), _GLF_IDENTITY(_GLF_FUZZED((20740 % (ivec3(-87306, -19160, 23475) ^ 92722))), min(_GLF_FUZZED((20740 % (ivec3(-87306, -19160, 23475) ^ 92722))), _GLF_FUZZED((20740 % (ivec3(-87306, -19160, 23475) ^ 92722))))), _GLF_FUZZED((20740 % (ivec3(-87306, -19160, 23475) ^ 92722))))) : ivec3(1))), mat3(1.0), vec4(1.0), mat4x2(1.0)), true, _GLF_IDENTITY(ivec2(1), ivec2(_GLF_IDENTITY(ivec4(_GLF_IDENTITY(ivec2(1), clamp(ivec2(1), ivec2(_GLF_IDENTITY(1, (1) | 0)), ivec2(1))), 1, 1), ~ (_GLF_IDENTITY(~ (ivec4(_GLF_IDENTITY(ivec2(1), clamp(ivec2(1), ivec2(1), ivec2(1))), 1, 1)), max(~ (ivec4(_GLF_IDENTITY(ivec2(1), clamp(ivec2(1), ivec2(1), ivec2(1))), 1, 1)), ~ (ivec4(_GLF_IDENTITY(ivec2(1), clamp(ivec2(1), ivec2(1), ivec2(1))), 1, 1)))))))), _GLF_struct_58(mat4x3(1.0), mat2x4(1.0), mat3(1.0), uvec3(_GLF_IDENTITY(1u, 0u | (1u)))), _GLF_struct_59(1u, bvec3(true), mat2x4(1.0), _GLF_IDENTITY(_GLF_IDENTITY(vec3(1.0), mat3(1.0) * (vec3(1.0))), mix(vec3((_GLF_IDENTITY(vec3(1.0), mat3(1.0) * (vec3(1.0))))[0], (_GLF_IDENTITY(vec3(1.0), mat3(1.0) * (vec3(1.0))))[1], _GLF_FUZZED(-3.3)), vec3(_GLF_FUZZED(-12.83), _GLF_FUZZED(97.54), (_GLF_IDENTITY(vec3(1.0), mat3(1.0) * (vec3(1.0))))[2]), bvec3(false, false, true))), bvec4(true), uvec4(1u), bvec2(_GLF_IDENTITY(_GLF_IDENTITY(true, bool(_GLF_IDENTITY(bvec3(true, true, true), bvec3(bvec4(bvec3(true, true, true), false))))), ! (! (_GLF_IDENTITY(true, bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(true, (true) || false), true, true), bvec3(bvec4(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (true)), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (true)), true, false)), ! (! (bool(bvec3(_GLF_IDENTITY(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (true)), true, false)))))), _GLF_IDENTITY(true, (true) || false), true), false)))))))))), _GLF_struct_60(bvec2(true), 1.0, uvec2(_GLF_IDENTITY(_GLF_IDENTITY(1u, 0u + (1u)), (false ? _GLF_FUZZED(94410u) : 1u))), mat4x3(1.0))));
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   return;
   if(_GLF_DEAD(false))
    return;
  }
 _GLF_struct_replacement_36._f5._f3.GLF_merged3_0_1_16_1_1_6_2_1_14next_virtual_gidread_1workgroup_base.x = _GLF_struct_replacement_62._f2.next_virtual_gid;
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec3(injectionSwitch.x > injectionSwitch.y, _GLF_FALSE(_GLF_IDENTITY(false, false || (false)), (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     barrier();
    }
   return;
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0)) / round(length(normalize(1.0))))))))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, false, false, _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, 1.0 * (injectionSwitch.y)))))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(injectionSwitch.x > injectionSwitch.y, true))))))) || false)), (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(injectionSwitch.x > injectionSwitch.y, true))))))) || false)), bool(bvec4((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(injectionSwitch.x > injectionSwitch.y, true))))))) || false)), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).y))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       barrier();
      }
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
  }
 uint read_1 = atomicLoad(buf[_GLF_struct_replacement_7.GLF_merged3_0_1_13_1_1_11_2_1_14num_workgroupvirtual_gidworkgroup_base.y], 4, 64, 0);
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) && true)))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       return;
      }
     return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, false, false)))))
      return;
     if(_GLF_DEAD(false))
      barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), bool(bool(false)))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  barrier();
 _GLF_struct_replacement_36._f5._f3.GLF_merged3_0_1_16_1_1_6_2_1_14next_virtual_gidread_1workgroup_base.y = read_1;
 atomicStore(buf[_GLF_struct_replacement_36._f5._f3.GLF_merged3_0_1_16_1_1_6_2_1_14next_virtual_gidread_1workgroup_base.x], uint(_GLF_struct_replacement_36._f5._f3.GLF_merged3_0_1_16_1_1_6_2_1_14next_virtual_gidread_1workgroup_base.y + 1), 4, 64, 4);
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(true && _GLF_IDENTITY(_GLF_IDENTITY((false), ((false)) && true), ! (! (_GLF_IDENTITY(_GLF_IDENTITY((false), bool(bool((false)))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_IDENTITY((false), bool(bool((_GLF_IDENTITY(false, ! (! (false))))))), bool(bvec4(_GLF_IDENTITY((false), bool(bool((false)))), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))), false), _GLF_IDENTITY(bvec2(bvec3(bvec2(_GLF_IDENTITY(_GLF_IDENTITY((false), bool(bool((false)))), bool(bvec4(_GLF_IDENTITY((false), bool(bool((false)))), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))), false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), bvec2(bvec4(bvec2(bvec3(bvec2(_GLF_IDENTITY(_GLF_IDENTITY((false), bool(bool((false)))), bool(bvec4(_GLF_IDENTITY((false), bool(_GLF_IDENTITY(bool((false)), bool(bool(bool((false))))))), _GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) && true)))), _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0))), false))), false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), false, _GLF_IDENTITY(true, true && (true))))))), ! (! (bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY((false), bool(bool((false)))), bool(bvec4(_GLF_IDENTITY((false), bool(_GLF_IDENTITY(bool((false)), false || (bool((false)))))), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))), false))))))))), (true && _GLF_IDENTITY((false), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(false, (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), false || (_GLF_IDENTITY(false, (false) || false)))) || false)), bool(bool((false)))), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY((false), bool(bool((false)))), bool(bvec4(_GLF_IDENTITY((false), bool(bool((false)))), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))), false)), ! (_GLF_IDENTITY(_GLF_IDENTITY(! (bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY((false), bool(bool((false)))), bool(bvec4(_GLF_IDENTITY((false), bool(bool((false)))), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))), false))), (! _GLF_IDENTITY((bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY((false), bool(bool((false)))), bool(bvec4(_GLF_IDENTITY((false), bool(bool((false)))), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))), false))), ((bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY((false), bool(bool((false)))), bool(bvec4(_GLF_IDENTITY((false), bool(bool((false)))), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))), false)))) && true)) || false), (_GLF_IDENTITY(_GLF_IDENTITY(! (bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY((false), bool(bool((false)))), bool(bvec4(_GLF_IDENTITY((false), bool(bool((false)))), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))), false))), (! _GLF_IDENTITY((bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY((false), bool(bool((false)))), bool(bvec4(_GLF_IDENTITY((false), bool(bool((false)))), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))), false))), ((bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY((false), bool(bool((false)))), bool(bvec4(_GLF_IDENTITY((false), bool(bool((false)))), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))), false)))) && true)) || false), bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(! (bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY((false), bool(bool((false)))), bool(bvec4(_GLF_IDENTITY((false), bool(bool((false)))), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))), false))), (! _GLF_IDENTITY((bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY((false), bool(bool((false)))), bool(bvec4(_GLF_IDENTITY((false), bool(bool((false)))), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))), false))), ((bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY((false), bool(bool((false)))), bool(bvec4(_GLF_IDENTITY((false), bool(bool((false)))), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))), false)))) && true)) || false), (_GLF_IDENTITY(! (bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY((false), bool(bool((false)))), bool(bvec4(_GLF_IDENTITY((false), bool(bool((false)))), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))), false))), (! _GLF_IDENTITY((bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY((false), bool(bool((false)))), bool(bvec4(_GLF_IDENTITY((false), bool(bool((false)))), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))), false))), ((bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY((false), bool(bool((false)))), bool(bvec4(_GLF_IDENTITY((false), bool(bool((false)))), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))), false)))) && true)) || false)) && true), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)))) && true))))), (! (_GLF_IDENTITY(_GLF_IDENTITY((false), bool(bool((false)))), _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY((false), bool(bool((false)))), bool(bvec4(_GLF_IDENTITY((false), bool(bool((false)))), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))), false)), ! (! (bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((false), bool(bool((false)))), (_GLF_IDENTITY((false), _GLF_IDENTITY(bool(bool((false))), ! (! (bool(bool((false)))))))) && true), bool(bvec4(_GLF_IDENTITY((false), bool(bool((false)))), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))), false))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY((false), bool(bool((false)))), bool(bvec4(_GLF_IDENTITY((false), bool(bool((false)))), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))), false)), ! (! (bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY((false), bool(bool((false)))), bool(bvec4(_GLF_IDENTITY((false), bool(bool((false)))), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))), false))))), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_IDENTITY((false), bool(bool((false)))), bool(bvec4(_GLF_IDENTITY((false), _GLF_IDENTITY(bool(bool((false))), bool(bvec3(bool(bool((false))), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))), false), bvec2(bvec3(bvec2(_GLF_IDENTITY(_GLF_IDENTITY((false), bool(bool((false)))), bool(bvec4(_GLF_IDENTITY((false), _GLF_IDENTITY(bool(bool((false))), bool(bvec3(bool(bool((false))), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))), false), true)))), ! (! (bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY((false), bool(bool((false)))), bool(bvec4(_GLF_IDENTITY((false), bool(bool((false)))), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))), false))))), bool(bool(_GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY((false), bool(bool((false)))), bool(bvec4(_GLF_IDENTITY((false), bool(bool((false)))), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))), false)), _GLF_IDENTITY(! (! (bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY((false), bool(bool((false)))), bool(bvec4(_GLF_IDENTITY((false), bool(bool((false)))), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))), false)))), ! (! (! (! (bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY((false), bool(bool((false)))), bool(bvec4(_GLF_IDENTITY((false), bool(bool((false)))), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))), false))))))))))), true, false, true)), bool(bvec2(bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY((false), bool(bool((false)))), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY((false), bool(bool((false)))), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)), bool(_GLF_IDENTITY(bvec2(bool(bvec4(_GLF_IDENTITY((false), bool(bool((false)))), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)), false), bvec2(bvec3(bvec2(bool(bvec4(_GLF_IDENTITY((false), bool(bool((false)))), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)), false), true)))))), false)), ! (! (bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY((false), bool(_GLF_IDENTITY(bool((false)), (_GLF_IDENTITY(bool((false)), (bool((false))) || false)) && true))), bool(bvec4(_GLF_IDENTITY((false), bool(bool((false)))), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))), false))))), bool(bool(_GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY((false), bool(bool((false)))), bool(bvec4(_GLF_IDENTITY((false), bool(bool((false)))), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))), false)), ! (! _GLF_IDENTITY((bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY((false), bool(bool((false)))), bool(bvec4(_GLF_IDENTITY((false), bool(bool((false)))), false, _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)))).y)), false))), false))), false || ((bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY((false), bool(bool((false)))), bool(bvec4(_GLF_IDENTITY((false), bool(bool((false)))), false, _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)))).y)), false))), false)))))))))), true, false, true)), true))))))))) && true)))) && true))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, false || (false))))))))) || false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bool(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (injectionSwitch.x > injectionSwitch.y)))))))))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(bool(bool((injectionSwitch.x > injectionSwitch.y))), (bool(bool((injectionSwitch.x > injectionSwitch.y)))) || false)))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, true, true, false)))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec3(false, false, false))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec3(false, false, false))), _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec3(false, false, false))), (_GLF_IDENTITY(false, bool(bvec3(false, false, false)))) || false), false)), bool(bvec2(bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec3(false, false, false))), (_GLF_IDENTITY(false, bool(bvec3(false, false, false)))) || false), false)), false))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec3(false, false, false))), (_GLF_IDENTITY(false, bool(bvec3(false, false, false)))) || false), false)), bool(bvec2(bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec3(false, false, false))), (_GLF_IDENTITY(false, bool(bvec3(false, false, false)))) || false), false)), false))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec3(false, false, false))), (_GLF_IDENTITY(false, bool(bvec3(false, false, false)))) || false), false)), bool(bvec2(bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec3(false, false, false))), (_GLF_IDENTITY(false, bool(bvec3(false, false, false)))) || false), false)), false))), bool(bvec2(_GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec3(false, false, false))), (_GLF_IDENTITY(false, bool(bvec3(false, false, false)))) || false), false)), bool(bvec2(bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec3(false, false, false))), (_GLF_IDENTITY(false, bool(bvec3(false, false, false)))) || false), false)), false))), true))))))), true && (! (_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec3(false, false, false))), (_GLF_IDENTITY(false, bool(bvec3(false, false, false)))) || false), false)), bool(bvec2(bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec3(false, false, false))), (_GLF_IDENTITY(false, bool(bvec3(false, false, false)))) || false), false)), false))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec3(false, false, false))), (_GLF_IDENTITY(false, bool(bvec3(false, false, false)))) || false), false)), bool(bvec2(bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec3(false, false, false))), (_GLF_IDENTITY(false, bool(bvec3(false, false, false)))) || false), false)), false))), bool(bvec2(_GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec3(false, false, false))), (_GLF_IDENTITY(false, bool(bvec3(false, false, false)))) || false), false)), bool(bvec2(bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec3(false, false, false))), (_GLF_IDENTITY(false, bool(bvec3(false, false, false)))) || false), false)), false))), true))))))))))))))), true), bvec2(bvec3(bvec2(false, true), false))), bvec2(bvec2(_GLF_IDENTITY(bvec2(false, _GLF_IDENTITY(true, (true) || false)), bvec2(bvec3(bvec2(false, true), false))))))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(false), bool(_GLF_IDENTITY(bvec2(_GLF_DEAD(false), true), _GLF_IDENTITY(bvec2(bvec3(bvec2(_GLF_DEAD(false), true), true)), bvec2(bvec3(bvec2(bvec3(bvec2(_GLF_DEAD(false), true), true)), false)))))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
      }
     return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), (! ((injectionSwitch.x > injectionSwitch.y))) && true))))))
      return;
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(mat4(injectionSwitch.y, determinant(mat3(0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x))), 1.0, 1.0, 1.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 0.0, 0.0, _GLF_IDENTITY(dot(vec4(1.0, _GLF_IDENTITY(1.0, (1.0) - sqrt(0.0)), 1.0, 1.0), vec4(sqrt(0.0), 0.0, 0.0, 0.0)), dot(vec4(1.0, 1.0, 1.0, 1.0), vec4(sqrt(0.0), 0.0, 0.0, 0.0))), 0.0, determinant(mat3(0.0, 0.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 0.0, 1.0, 0.0, 0.0)), 0.0, 1.0, tan(0.0))), (float(mat4(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), determinant(mat3(0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x))), 1.0, 1.0, 1.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 0.0, 0.0, _GLF_IDENTITY(dot(vec4(1.0, 1.0, 1.0, 1.0), vec4(_GLF_IDENTITY(sqrt(0.0), float(_GLF_IDENTITY(mat4x3(sqrt(0.0), 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, abs(1.0), 0.0), (mat4x3(sqrt(0.0), _GLF_IDENTITY(0.0, (0.0) - 0.0), 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(1.0, (1.0) / 1.0), 1.0, abs(1.0), 0.0)) + mat4x3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)))), 0.0, 0.0, 0.0)), dot(vec4(1.0, 1.0, 1.0, _GLF_IDENTITY(_GLF_IDENTITY(1.0, max(1.0, 1.0)), float(_GLF_IDENTITY(mat4(1.0, 1.0, 1.0, round(length(normalize(1.0))), 1.0, exp(tan(0.0)), sin(0.0), 0.0, 1.0, sin(0.0), 1.0, 1.0, 0.0, 1.0, 1.0, 1.0), (true ? mat4(1.0, 1.0, 1.0, round(length(normalize(1.0))), 1.0, exp(tan(0.0)), sin(0.0), 0.0, 1.0, sin(0.0), 1.0, 1.0, 0.0, 1.0, 1.0, 1.0) : _GLF_FUZZED(mat4(9939.2932, 645.861, -4.3, -997.143, 2174.0883, 5566.1324, 21.05, 4154.4365, -7.1, -8.0, -3.5, 5578.4462, -7613.5090, 3.8, -8706.5215, -7126.4803))))))), vec4(sqrt(0.0), 0.0, 0.0, 0.0))), 0.0, determinant(mat3(0.0, 0.0, 0.0, _GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x))), 0.0, 0.0, 1.0, 0.0, 0.0)), 0.0, 1.0, _GLF_IDENTITY(tan(0.0), float(mat4x2(tan(0.0), 1.0, 0.0, 0.0, _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-933.178)), bool(false))), 0.0, 0.0, 0.0)))))) - 0.0))))))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     return;
    }
   barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x)) > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          barrier();
         return;
        }
       barrier();
       if(_GLF_DEAD(false))
        return;
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, true)))))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(_GLF_IDENTITY(bvec2(injectionSwitch.x > injectionSwitch.y, true), bvec2(bvec4(bvec2(injectionSwitch.x > injectionSwitch.y, true), false, true)))))))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y))))
        return;
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      return;
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     barrier();
    }
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))))))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) && true), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(_GLF_IDENTITY(mat2(injectionSwitch.y, 0.0, 1.0, 1.0), (mat2(injectionSwitch.y, 0.0, 1.0, 1.0)) / mat2(1.0, 1.0, 1.0, 1.0))))))))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 uint read_2 = atomicLoad(_GLF_IDENTITY(_GLF_IDENTITY(buf[_GLF_IDENTITY(_GLF_IDENTITY(_GLF_struct_replacement_7.GLF_merged3_0_1_13_1_1_11_2_1_14num_workgroupvirtual_gidworkgroup_base, ~ (~ (_GLF_struct_replacement_7.GLF_merged3_0_1_13_1_1_11_2_1_14num_workgroupvirtual_gidworkgroup_base))), clamp(_GLF_struct_replacement_7.GLF_merged3_0_1_13_1_1_11_2_1_14num_workgroupvirtual_gidworkgroup_base, _GLF_struct_replacement_7.GLF_merged3_0_1_13_1_1_11_2_1_14num_workgroupvirtual_gidworkgroup_base, _GLF_struct_replacement_7.GLF_merged3_0_1_13_1_1_11_2_1_14num_workgroupvirtual_gidworkgroup_base)).y], ~ (_GLF_IDENTITY(~ (buf[_GLF_IDENTITY(_GLF_struct_replacement_7.GLF_merged3_0_1_13_1_1_11_2_1_14num_workgroupvirtual_gidworkgroup_base, clamp(_GLF_struct_replacement_7.GLF_merged3_0_1_13_1_1_11_2_1_14num_workgroupvirtual_gidworkgroup_base, _GLF_struct_replacement_7.GLF_merged3_0_1_13_1_1_11_2_1_14num_workgroupvirtual_gidworkgroup_base, _GLF_struct_replacement_7.GLF_merged3_0_1_13_1_1_11_2_1_14num_workgroupvirtual_gidworkgroup_base)).y]), max(~ (buf[_GLF_IDENTITY(_GLF_struct_replacement_7.GLF_merged3_0_1_13_1_1_11_2_1_14num_workgroupvirtual_gidworkgroup_base, clamp(_GLF_struct_replacement_7.GLF_merged3_0_1_13_1_1_11_2_1_14num_workgroupvirtual_gidworkgroup_base, _GLF_struct_replacement_7.GLF_merged3_0_1_13_1_1_11_2_1_14num_workgroupvirtual_gidworkgroup_base, _GLF_struct_replacement_7.GLF_merged3_0_1_13_1_1_11_2_1_14num_workgroupvirtual_gidworkgroup_base)).y]), ~ (buf[_GLF_IDENTITY(_GLF_struct_replacement_7.GLF_merged3_0_1_13_1_1_11_2_1_14num_workgroupvirtual_gidworkgroup_base, clamp(_GLF_struct_replacement_7.GLF_merged3_0_1_13_1_1_11_2_1_14num_workgroupvirtual_gidworkgroup_base, _GLF_struct_replacement_7.GLF_merged3_0_1_13_1_1_11_2_1_14num_workgroupvirtual_gidworkgroup_base, _GLF_struct_replacement_7.GLF_merged3_0_1_13_1_1_11_2_1_14num_workgroupvirtual_gidworkgroup_base)).y]))))), _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(buf[_GLF_struct_replacement_7.GLF_merged3_0_1_13_1_1_11_2_1_14num_workgroupvirtual_gidworkgroup_base.y], 0u ^ (buf[_GLF_struct_replacement_7.GLF_merged3_0_1_13_1_1_11_2_1_14num_workgroupvirtual_gidworkgroup_base.y])), (_GLF_IDENTITY(_GLF_IDENTITY(buf[_GLF_struct_replacement_7.GLF_merged3_0_1_13_1_1_11_2_1_14num_workgroupvirtual_gidworkgroup_base.y], 0u ^ _GLF_IDENTITY((buf[_GLF_struct_replacement_7.GLF_merged3_0_1_13_1_1_11_2_1_14num_workgroupvirtual_gidworkgroup_base.y]), max(_GLF_IDENTITY((buf[_GLF_struct_replacement_7.GLF_merged3_0_1_13_1_1_11_2_1_14num_workgroupvirtual_gidworkgroup_base.y]), clamp((buf[_GLF_struct_replacement_7.GLF_merged3_0_1_13_1_1_11_2_1_14num_workgroupvirtual_gidworkgroup_base.y]), (buf[_GLF_struct_replacement_7.GLF_merged3_0_1_13_1_1_11_2_1_14num_workgroupvirtual_gidworkgroup_base.y]), (buf[_GLF_struct_replacement_7.GLF_merged3_0_1_13_1_1_11_2_1_14num_workgroupvirtual_gidworkgroup_base.y]))), (buf[_GLF_struct_replacement_7.GLF_merged3_0_1_13_1_1_11_2_1_14num_workgroupvirtual_gidworkgroup_base.y])))), min(_GLF_IDENTITY(buf[_GLF_struct_replacement_7.GLF_merged3_0_1_13_1_1_11_2_1_14num_workgroupvirtual_gidworkgroup_base.y], 0u ^ (buf[_GLF_struct_replacement_7.GLF_merged3_0_1_13_1_1_11_2_1_14num_workgroupvirtual_gidworkgroup_base.y])), _GLF_IDENTITY(buf[_GLF_struct_replacement_7.GLF_merged3_0_1_13_1_1_11_2_1_14num_workgroupvirtual_gidworkgroup_base.y], 0u ^ (buf[_GLF_struct_replacement_7.GLF_merged3_0_1_13_1_1_11_2_1_14num_workgroupvirtual_gidworkgroup_base.y]))))) | (_GLF_IDENTITY(_GLF_IDENTITY(buf[_GLF_struct_replacement_7.GLF_merged3_0_1_13_1_1_11_2_1_14num_workgroupvirtual_gidworkgroup_base.y], 0u ^ (buf[_GLF_IDENTITY(_GLF_struct_replacement_7.GLF_merged3_0_1_13_1_1_11_2_1_14num_workgroupvirtual_gidworkgroup_base.y, min(_GLF_struct_replacement_7.GLF_merged3_0_1_13_1_1_11_2_1_14num_workgroupvirtual_gidworkgroup_base.y, _GLF_IDENTITY(_GLF_struct_replacement_7.GLF_merged3_0_1_13_1_1_11_2_1_14num_workgroupvirtual_gidworkgroup_base.y, 0u | (_GLF_struct_replacement_7.GLF_merged3_0_1_13_1_1_11_2_1_14num_workgroupvirtual_gidworkgroup_base.y))))])), min(_GLF_IDENTITY(buf[_GLF_struct_replacement_7.GLF_merged3_0_1_13_1_1_11_2_1_14num_workgroupvirtual_gidworkgroup_base.y], 0u ^ _GLF_IDENTITY((buf[_GLF_struct_replacement_7.GLF_merged3_0_1_13_1_1_11_2_1_14num_workgroupvirtual_gidworkgroup_base.y]), max((buf[_GLF_struct_replacement_7.GLF_merged3_0_1_13_1_1_11_2_1_14num_workgroupvirtual_gidworkgroup_base.y]), (buf[_GLF_struct_replacement_7.GLF_merged3_0_1_13_1_1_11_2_1_14num_workgroupvirtual_gidworkgroup_base.y])))), _GLF_IDENTITY(buf[_GLF_struct_replacement_7.GLF_merged3_0_1_13_1_1_11_2_1_14num_workgroupvirtual_gidworkgroup_base.y], 0u ^ (buf[_GLF_struct_replacement_7.GLF_merged3_0_1_13_1_1_11_2_1_14num_workgroupvirtual_gidworkgroup_base.y]))))))), (true ? (_GLF_IDENTITY(buf[_GLF_struct_replacement_7.GLF_merged3_0_1_13_1_1_11_2_1_14num_workgroupvirtual_gidworkgroup_base.y], 0u ^ (buf[_GLF_struct_replacement_7.GLF_merged3_0_1_13_1_1_11_2_1_14num_workgroupvirtual_gidworkgroup_base.y]))) : _GLF_FUZZED((_GLF_IDENTITY(workgroup_id, clamp(workgroup_id, workgroup_id, _GLF_IDENTITY(workgroup_id, clamp(workgroup_id, workgroup_id, workgroup_id)))) / subgroup_size)))) / _GLF_IDENTITY(1u, _GLF_IDENTITY((_GLF_IDENTITY(1u, 0u + (1u))), (false ? _GLF_FUZZED(workgroup_base) : (_GLF_IDENTITY(1u, 0u + (1u))))) | (1u)), 0u ^ (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(buf[_GLF_struct_replacement_7.GLF_merged3_0_1_13_1_1_11_2_1_14num_workgroupvirtual_gidworkgroup_base.y], 0u ^ (buf[_GLF_IDENTITY(_GLF_struct_replacement_7.GLF_merged3_0_1_13_1_1_11_2_1_14num_workgroupvirtual_gidworkgroup_base, (true ? _GLF_IDENTITY(_GLF_struct_replacement_7.GLF_merged3_0_1_13_1_1_11_2_1_14num_workgroupvirtual_gidworkgroup_base, min(_GLF_struct_replacement_7.GLF_merged3_0_1_13_1_1_11_2_1_14num_workgroupvirtual_gidworkgroup_base, _GLF_struct_replacement_7.GLF_merged3_0_1_13_1_1_11_2_1_14num_workgroupvirtual_gidworkgroup_base)) : _GLF_FUZZED((uvec4(183032u, 43702u, 71839u, 88513u)[3] % uvec3(152237u, 144057u, 74306u))))).y])), (_GLF_IDENTITY(_GLF_IDENTITY(buf[_GLF_struct_replacement_7.GLF_merged3_0_1_13_1_1_11_2_1_14num_workgroupvirtual_gidworkgroup_base.y], 0u ^ (buf[_GLF_IDENTITY(_GLF_struct_replacement_7.GLF_merged3_0_1_13_1_1_11_2_1_14num_workgroupvirtual_gidworkgroup_base.y, (true ? _GLF_struct_replacement_7.GLF_merged3_0_1_13_1_1_11_2_1_14num_workgroupvirtual_gidworkgroup_base.y : _GLF_FUZZED((-9.9 , workgroup_id))))])), min(_GLF_IDENTITY(buf[_GLF_struct_replacement_7.GLF_merged3_0_1_13_1_1_11_2_1_14num_workgroupvirtual_gidworkgroup_base.y], 0u ^ (buf[_GLF_struct_replacement_7.GLF_merged3_0_1_13_1_1_11_2_1_14num_workgroupvirtual_gidworkgroup_base.y])), _GLF_IDENTITY(buf[_GLF_struct_replacement_7.GLF_merged3_0_1_13_1_1_11_2_1_14num_workgroupvirtual_gidworkgroup_base.y], 0u ^ (buf[_GLF_struct_replacement_7.GLF_merged3_0_1_13_1_1_11_2_1_14num_workgroupvirtual_gidworkgroup_base.y]))))) | (_GLF_IDENTITY(_GLF_IDENTITY(buf[_GLF_struct_replacement_7.GLF_merged3_0_1_13_1_1_11_2_1_14num_workgroupvirtual_gidworkgroup_base.y], 0u ^ (buf[_GLF_struct_replacement_7.GLF_merged3_0_1_13_1_1_11_2_1_14num_workgroupvirtual_gidworkgroup_base.y])), min(_GLF_IDENTITY(buf[_GLF_struct_replacement_7.GLF_merged3_0_1_13_1_1_11_2_1_14num_workgroupvirtual_gidworkgroup_base.y], 0u ^ (buf[_GLF_struct_replacement_7.GLF_merged3_0_1_13_1_1_11_2_1_14num_workgroupvirtual_gidworkgroup_base.y])), _GLF_IDENTITY(buf[_GLF_struct_replacement_7.GLF_merged3_0_1_13_1_1_11_2_1_14num_workgroupvirtual_gidworkgroup_base.y], 0u ^ (buf[_GLF_struct_replacement_7.GLF_merged3_0_1_13_1_1_11_2_1_14num_workgroupvirtual_gidworkgroup_base.y]))))))), (true ? (_GLF_IDENTITY(buf[_GLF_struct_replacement_7.GLF_merged3_0_1_13_1_1_11_2_1_14num_workgroupvirtual_gidworkgroup_base.y], 0u ^ (buf[_GLF_struct_replacement_7.GLF_merged3_0_1_13_1_1_11_2_1_14num_workgroupvirtual_gidworkgroup_base.y]))) : _GLF_FUZZED((_GLF_IDENTITY(workgroup_id, clamp(workgroup_id, workgroup_id, _GLF_IDENTITY(workgroup_id, _GLF_IDENTITY(clamp(workgroup_id, workgroup_id, workgroup_id), (_GLF_IDENTITY(clamp(workgroup_id, workgroup_id, workgroup_id), ~ (_GLF_IDENTITY(~ (clamp(workgroup_id, workgroup_id, workgroup_id)), (~ (clamp(workgroup_id, workgroup_id, workgroup_id))) + 0u)))) >> (0u ^ 0u))))) / subgroup_size)))) / _GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, 0u + (1u))) | (1u))))), _GLF_IDENTITY(4, min(4, 4)), 64, 0);
 atomicStore(buf[_GLF_struct_replacement_36._f5._f3.GLF_merged3_0_1_16_1_1_6_2_1_14next_virtual_gidread_1workgroup_base.x], uint(_GLF_IDENTITY(_GLF_struct_replacement_36._f5._f3.GLF_merged3_0_1_16_1_1_6_2_1_14next_virtual_gidread_1workgroup_base.y + 1 == read_2, _GLF_IDENTITY(true && (_GLF_struct_replacement_36._f5._f3.GLF_merged3_0_1_16_1_1_6_2_1_14next_virtual_gidread_1workgroup_base.y + 1 == read_2), (true && (_GLF_struct_replacement_36._f5._f3.GLF_merged3_0_1_16_1_1_6_2_1_14next_virtual_gidread_1workgroup_base.y + 1 == read_2)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) + 1, 4, 64, 4);
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)))) > injectionSwitch.y)) || (false))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  return;
}
