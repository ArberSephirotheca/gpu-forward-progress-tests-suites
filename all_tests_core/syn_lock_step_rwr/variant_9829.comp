#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 uint subgroup_id = gl_SubgroupID;
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && _GLF_TRUE(_GLF_IDENTITY(true, true && (true)), (injectionSwitch.x < injectionSwitch.y))), false || (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec3(false, false, true)))) || false)), (_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false)))) || _GLF_IDENTITY(false, _GLF_IDENTITY((_GLF_IDENTITY(false, bool(bvec3(false, false, true)))), (_GLF_IDENTITY((_GLF_IDENTITY(false, bool(bvec3(false, false, true)))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || ((_GLF_IDENTITY(false, bool(bvec3(false, false, true))))))) && true) && true)))), true && (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && _GLF_TRUE(_GLF_IDENTITY(true, true && (true)), (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))))), false || (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec3(false, false, true)))) || false)), (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))), false || (_GLF_DEAD(false)))) || _GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(false, bool(bvec3(false, false, true)))), (_GLF_IDENTITY((_GLF_IDENTITY(false, bool(bvec3(false, false, true)))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || ((_GLF_IDENTITY(false, bool(bvec3(false, false, true))))))) && true), bool(bvec3(_GLF_IDENTITY((_GLF_IDENTITY(false, bool(bvec3(false, false, true)))), (_GLF_IDENTITY((_GLF_IDENTITY(false, bool(bvec3(false, false, true)))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || ((_GLF_IDENTITY(false, bool(bvec3(false, false, true))))))) && true), false, true))) && true)))))), bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && _GLF_TRUE(_GLF_IDENTITY(true, true && (true)), (injectionSwitch.x < injectionSwitch.y))), false || (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec3(false, false, true)))) || false)), (_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false)))) || _GLF_IDENTITY(false, _GLF_IDENTITY((_GLF_IDENTITY(false, bool(bvec3(false, false, true)))), (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec3(false, false, true))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(false, bool(bvec3(false, _GLF_IDENTITY(false, (false) || false), true)))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || ((_GLF_IDENTITY(false, bool(bvec3(false, false, true))))))) && true) && true)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(_GLF_IDENTITY(! (false), bool(bvec4(! (false), _GLF_IDENTITY(false, ! (! (false))), true, false))), (_GLF_IDENTITY(_GLF_IDENTITY(! (false), ! (! (! (false)))), bool(bvec4(! (false), _GLF_IDENTITY(false, ! (! (false))), true, false)))) || false))))))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), ((! (false))) || false))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, (false) && true)))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y))))))
    barrier();
   barrier();
  }
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 uint num_workgroup = _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups.x, (gl_NumWorkGroups.x) / 1u), _GLF_IDENTITY((_GLF_IDENTITY(gl_NumWorkGroups, max(gl_NumWorkGroups, _GLF_IDENTITY(gl_NumWorkGroups, ~ (_GLF_IDENTITY(~ (gl_NumWorkGroups), uvec3(0u, 0u, 0u) ^ (~ (gl_NumWorkGroups))))))).x) | _GLF_IDENTITY((gl_NumWorkGroups.x), 0u | ((gl_NumWorkGroups.x))), _GLF_IDENTITY(((gl_NumWorkGroups.x) | (_GLF_IDENTITY(gl_NumWorkGroups, min(gl_NumWorkGroups, _GLF_IDENTITY(gl_NumWorkGroups, ~ (~ (gl_NumWorkGroups))))).x)) << _GLF_IDENTITY(0u, (0u) >> 0u), min(_GLF_IDENTITY(((gl_NumWorkGroups.x) | (_GLF_IDENTITY(gl_NumWorkGroups, min(gl_NumWorkGroups, _GLF_IDENTITY(gl_NumWorkGroups, ~ (~ (gl_NumWorkGroups))))).x)) << 0u, min(_GLF_IDENTITY(((gl_NumWorkGroups.x) | (_GLF_IDENTITY(gl_NumWorkGroups, min(gl_NumWorkGroups, _GLF_IDENTITY(gl_NumWorkGroups, ~ (~ (gl_NumWorkGroups))))).x)) << 0u, min(_GLF_IDENTITY(((gl_NumWorkGroups.x) | (_GLF_IDENTITY(gl_NumWorkGroups, min(gl_NumWorkGroups, _GLF_IDENTITY(gl_NumWorkGroups, ~ (~ (gl_NumWorkGroups))))).x)) << 0u, min(((gl_NumWorkGroups.x) | (_GLF_IDENTITY(gl_NumWorkGroups, min(gl_NumWorkGroups, _GLF_IDENTITY(gl_NumWorkGroups, ~ (~ (gl_NumWorkGroups))))).x)) << 0u, ((gl_NumWorkGroups.x) | (_GLF_IDENTITY(gl_NumWorkGroups, min(gl_NumWorkGroups, _GLF_IDENTITY(gl_NumWorkGroups, ~ (~ (gl_NumWorkGroups))))).x)) << 0u)), ((gl_NumWorkGroups.x) | (_GLF_IDENTITY(gl_NumWorkGroups, min(gl_NumWorkGroups, _GLF_IDENTITY(gl_NumWorkGroups, ~ (~ (gl_NumWorkGroups))))).x)) << 0u)), ((gl_NumWorkGroups.x) | (_GLF_IDENTITY(gl_NumWorkGroups, min(gl_NumWorkGroups, _GLF_IDENTITY(gl_NumWorkGroups, ~ (~ (_GLF_IDENTITY(gl_NumWorkGroups, _GLF_IDENTITY(uvec3(uvec3(_GLF_IDENTITY(gl_NumWorkGroups, clamp(gl_NumWorkGroups, gl_NumWorkGroups, gl_NumWorkGroups)))), (true ? uvec3(uvec3(_GLF_IDENTITY(gl_NumWorkGroups, clamp(gl_NumWorkGroups, gl_NumWorkGroups, gl_NumWorkGroups)))) : _GLF_FUZZED(uvec3(3212u, 149604u, 85140u)))))))))).x)) << 0u)), _GLF_IDENTITY(((gl_NumWorkGroups.x) | (_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, max(gl_NumWorkGroups, gl_NumWorkGroups)), min(gl_NumWorkGroups, _GLF_IDENTITY(gl_NumWorkGroups, ~ (~ (gl_NumWorkGroups))))).x)) << 0u, uint(_GLF_ZERO(0.0, injectionSwitch.x)) | (_GLF_IDENTITY(((gl_NumWorkGroups.x) | (_GLF_IDENTITY(gl_NumWorkGroups, min(gl_NumWorkGroups, _GLF_IDENTITY(gl_NumWorkGroups, ~ (~ (gl_NumWorkGroups))))).x)) << 0u, clamp(((gl_NumWorkGroups.x) | (_GLF_IDENTITY(gl_NumWorkGroups, min(gl_NumWorkGroups, _GLF_IDENTITY(gl_NumWorkGroups, ~ (~ (gl_NumWorkGroups))))).x)) << 0u, ((gl_NumWorkGroups.x) | (_GLF_IDENTITY(gl_NumWorkGroups, min(gl_NumWorkGroups, _GLF_IDENTITY(gl_NumWorkGroups, ~ (~ (gl_NumWorkGroups))))).x)) << 0u, ((gl_NumWorkGroups.x) | (_GLF_IDENTITY(gl_NumWorkGroups, min(gl_NumWorkGroups, _GLF_IDENTITY(gl_NumWorkGroups, ~ (~ (gl_NumWorkGroups))))).x)) << 0u)))))))), (_GLF_IDENTITY(true ? gl_NumWorkGroups.x : _GLF_IDENTITY(_GLF_FUZZED(subgroup_size), max(_GLF_FUZZED(_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(uint(uvec3(subgroup_size, 1u, 1u)), (false ? _GLF_FUZZED(_GLF_IDENTITY(subgroup_local_id, min(subgroup_local_id, subgroup_local_id))) : uint(uvec3(subgroup_size, 1u, 1u)))))), _GLF_FUZZED(subgroup_size))), (true ? gl_NumWorkGroups.x : _GLF_IDENTITY(_GLF_FUZZED(subgroup_size), _GLF_IDENTITY(max(_GLF_FUZZED(subgroup_size), _GLF_FUZZED(subgroup_size)), uint(uint(_GLF_IDENTITY(max(_GLF_IDENTITY(_GLF_FUZZED(subgroup_size), (_GLF_IDENTITY(_GLF_FUZZED(subgroup_size), max(_GLF_IDENTITY(_GLF_FUZZED(subgroup_size), 1u * (_GLF_FUZZED(subgroup_size))), _GLF_FUZZED(subgroup_size)))) | (_GLF_FUZZED(subgroup_size))), _GLF_FUZZED(subgroup_size)), max(max(_GLF_FUZZED(subgroup_size), _GLF_FUZZED(subgroup_size)), max(_GLF_FUZZED(subgroup_size), _GLF_FUZZED(subgroup_size))))))))) | 0u))), (true ? _GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups.x, _GLF_IDENTITY(_GLF_IDENTITY((gl_NumWorkGroups.x) | (_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) >> uvec3(0u, _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, max(0u, 0u))) | 0u), 0u)).x), _GLF_IDENTITY((_GLF_IDENTITY((gl_NumWorkGroups.x) | (gl_NumWorkGroups.x), clamp(_GLF_IDENTITY((gl_NumWorkGroups.x) | (_GLF_IDENTITY(gl_NumWorkGroups, _GLF_IDENTITY(uvec3(uvec3(gl_NumWorkGroups)), (true ? _GLF_IDENTITY(uvec3(uvec3(gl_NumWorkGroups)), ~ (~ (uvec3(uvec3(gl_NumWorkGroups))))) : _GLF_FUZZED((uvec3(68952u, 190755u, 158783u) ^ subgroup_local_id))))).x), clamp((gl_NumWorkGroups.x) | (gl_NumWorkGroups.x), (gl_NumWorkGroups.x) | (gl_NumWorkGroups.x), (gl_NumWorkGroups.x) | (gl_NumWorkGroups.x))), _GLF_IDENTITY(_GLF_IDENTITY((gl_NumWorkGroups.x) | (gl_NumWorkGroups.x), clamp((gl_NumWorkGroups.x) | (gl_NumWorkGroups.x), (gl_NumWorkGroups.x) | (gl_NumWorkGroups.x), _GLF_IDENTITY((gl_NumWorkGroups.x) | (gl_NumWorkGroups.x), min((gl_NumWorkGroups.x) | (gl_NumWorkGroups.x), (gl_NumWorkGroups.x) | (gl_NumWorkGroups.x))))), 0u | (_GLF_IDENTITY((gl_NumWorkGroups.x) | (gl_NumWorkGroups.x), clamp((gl_NumWorkGroups.x) | (gl_NumWorkGroups.x), (gl_NumWorkGroups.x) | (gl_NumWorkGroups.x), _GLF_IDENTITY((gl_NumWorkGroups.x) | (gl_NumWorkGroups.x), min((gl_NumWorkGroups.x) | (gl_NumWorkGroups.x), (gl_NumWorkGroups.x) | (gl_NumWorkGroups.x))))))), _GLF_IDENTITY((gl_NumWorkGroups.x) | (gl_NumWorkGroups.x), ((gl_NumWorkGroups.x) | (gl_NumWorkGroups.x)) | 0u)))), (((gl_NumWorkGroups.x) | (gl_NumWorkGroups.x))) * (_GLF_IDENTITY((1u << _GLF_IDENTITY(uint(5u), _GLF_IDENTITY(uint(5u), uint(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (_GLF_IDENTITY(uint(5u), min(uint(5u), uint(5u))))))), uint(uint((1u << _GLF_IDENTITY(uint(5u), uint(5u)))))) >> _GLF_IDENTITY(uint(5u), uint(_GLF_IDENTITY(5u, clamp(5u, _GLF_IDENTITY(5u, (5u) - 0u), _GLF_IDENTITY(5u, _GLF_IDENTITY((5u) | (5u), ((5u) | (5u)) | ((5u) | (5u)))))))))) << 0u), (_GLF_IDENTITY(_GLF_IDENTITY((gl_NumWorkGroups.x) | (_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) >> uvec3(0u, _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, max(0u, 0u))) | 0u), 0u)).x), _GLF_IDENTITY(((gl_NumWorkGroups.x) | (gl_NumWorkGroups.x)), (((gl_NumWorkGroups.x) | (gl_NumWorkGroups.x))) * (_GLF_IDENTITY((1u << _GLF_IDENTITY(uint(5u), uint(_GLF_IDENTITY(5u, (5u) | (5u))))), uint(uint(_GLF_IDENTITY((1u << _GLF_IDENTITY(uint(5u), uint(5u))), (true ? (1u << _GLF_IDENTITY(uint(5u), uint(5u))) : _GLF_FUZZED(subgroup_local_id)))))) >> _GLF_IDENTITY(uint(5u), uint(_GLF_IDENTITY(5u, clamp(5u, _GLF_IDENTITY(5u, (5u) - 0u), _GLF_IDENTITY(5u, (_GLF_IDENTITY(5u, min(_GLF_IDENTITY(5u, 1u * (_GLF_IDENTITY(5u, (true ? 5u : _GLF_FUZZED(subgroup_local_id))))), 5u))) | (5u)))))))) << 0u), (_GLF_IDENTITY(_GLF_IDENTITY((gl_NumWorkGroups.x) | (_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) >> uvec3(0u, _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, max(0u, 0u))) | 0u), 0u)).x), min(_GLF_IDENTITY((gl_NumWorkGroups.x) | (_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) >> uvec3(0u, _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, max(0u, 0u))) | 0u), 0u)).x), ((gl_NumWorkGroups.x) | (_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) >> uvec3(0u, _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, max(0u, 0u))) | 0u), 0u)).x)) << 0u), _GLF_IDENTITY((gl_NumWorkGroups.x) | (_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) >> uvec3(0u, _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, max(0u, 0u))) | 0u), 0u)).x), clamp((gl_NumWorkGroups.x) | (_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) >> uvec3(0u, _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, max(0u, 0u))) | 0u), 0u)), (_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) >> uvec3(0u, _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, max(0u, 0u))) | 0u), 0u))) << uvec3(0u, 0u, 0u)).x), (gl_NumWorkGroups.x) | (_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) >> uvec3(0u, _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, max(0u, 0u))) | 0u), 0u)).x), (gl_NumWorkGroups.x) | (_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) >> _GLF_IDENTITY(uvec3(0u, _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, max(0u, 0u))) | 0u), 0u), min(_GLF_IDENTITY(uvec3(0u, _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, max(0u, 0u))) | 0u), 0u), ~ (~ (uvec3(0u, _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, max(0u, 0u))) | 0u), 0u)))), _GLF_IDENTITY(uvec3(0u, _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, max(0u, 0u))) | 0u), 0u), min(uvec3(0u, _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, max(0u, 0u))) | 0u), 0u), uvec3(0u, _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, max(0u, 0u))) | 0u), 0u)))))).x))))), _GLF_IDENTITY(((gl_NumWorkGroups.x) | (gl_NumWorkGroups.x)), (((gl_NumWorkGroups.x) | (gl_NumWorkGroups.x))) * (_GLF_IDENTITY(_GLF_IDENTITY((1u << _GLF_IDENTITY(uint(5u), uint(5u))), ((1u << _GLF_IDENTITY(uint(5u), uint(5u)))) | 0u), uint(uint((1u << _GLF_IDENTITY(uint(5u), uint(5u)))))) >> _GLF_IDENTITY(uint(5u), uint(_GLF_IDENTITY(5u, clamp(5u, _GLF_IDENTITY(5u, (5u) - 0u), _GLF_IDENTITY(5u, (5u) | (5u)))))))) << 0u)) >> 0u)) ^ 0u)), (true ? _GLF_IDENTITY(gl_NumWorkGroups.x, (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch.x : _GLF_FUZZED(dot(vec4(-0.1, 484.062, -6.9, -9186.3760), vec4(1.1, -4295.8030, -43.01, 0.5))))) > injectionSwitch.y)) ? _GLF_FUZZED(subgroup_id) : gl_NumWorkGroups.x)) : _GLF_FUZZED(subgroup_size))) : _GLF_FUZZED(subgroup_local_id)));
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))), bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))), (_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y))))) && true)) || false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), true && (_GLF_IDENTITY(! (false), bool(bvec2(_GLF_IDENTITY(! (false), bool(_GLF_IDENTITY(bool(! (false)), ! (! (bool(! (false))))))), false)))))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-47.02), _GLF_FUZZED(4616.3537)), vec2((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch)[1], (false ? _GLF_FUZZED(2.0) : (injectionSwitch)[1]))), bvec2(true, true))).x > injectionSwitch.y)))))))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))))), _GLF_IDENTITY(true && (_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y))))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(true && (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (_GLF_IDENTITY(true && (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (true && (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) || false)) || false)), ! _GLF_IDENTITY((! (! (_GLF_IDENTITY(true && (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (_GLF_IDENTITY(true && (_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bool(false))), (injectionSwitch.x > injectionSwitch.y)))), (true && (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) || false)) || false)))), ((! (! (_GLF_IDENTITY(true && (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (_GLF_IDENTITY(_GLF_IDENTITY(true && (_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bool(false))), (injectionSwitch.x > injectionSwitch.y)))), (true && (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) || false), false || (_GLF_IDENTITY(true && (_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bool(false))), (injectionSwitch.x > injectionSwitch.y)))), (true && (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) || false)))) || false))))) || false))))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, false || _GLF_IDENTITY((_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) || false)))), bool(bvec4(_GLF_IDENTITY((_GLF_IDENTITY(false, ! (_GLF_IDENTITY(_GLF_IDENTITY(! (false), (! (false)) || false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(! (false), (! (false)) || false)))))), false || (_GLF_IDENTITY((_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) || false)))), ! (! ((_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) || false))))))))), true, false, false)))), (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(false, false))), false || _GLF_IDENTITY((false), (_GLF_IDENTITY((false), bool(bool((false))))) || false))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 uint workgroup_size = gl_WorkGroupSize.x;
 uint workgroup_id = _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID.x, uint(uvec4(gl_WorkGroupID.x, 0u, _GLF_IDENTITY((0u & 87260u), ((0u & 87260u)) / uint(_GLF_ONE(1.0, injectionSwitch.y))), 1u))), clamp(_GLF_IDENTITY(gl_WorkGroupID.x, uint(uvec4(gl_WorkGroupID.x, 0u, (0u & 87260u), 1u))), _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID.x, uint(uvec4(gl_WorkGroupID.x, 0u, _GLF_IDENTITY((0u & 87260u), (false ? _GLF_FUZZED(subgroup_id) : (0u & 87260u))), 1u))), clamp(_GLF_IDENTITY(gl_WorkGroupID.x, uint(uvec4(gl_WorkGroupID.x, 0u, (0u & 87260u), 1u))), _GLF_IDENTITY(gl_WorkGroupID.x, uint(_GLF_IDENTITY(uvec4(gl_WorkGroupID.x, 0u, (0u & 87260u), 1u), ~ (~ (uvec4(gl_WorkGroupID.x, 0u, (0u & 87260u), 1u)))))), _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID.x, uint(uvec4(gl_WorkGroupID.x, 0u, (_GLF_IDENTITY(_GLF_IDENTITY(0u, (0u >> _GLF_IDENTITY(uint(8u), uint(8u))) | (0u)), (_GLF_IDENTITY(_GLF_IDENTITY(0u, (0u >> _GLF_IDENTITY(uint(8u), uint(8u))) | (0u)), ~ (~ (_GLF_IDENTITY(0u, (0u >> _GLF_IDENTITY(uint(8u), uint(8u))) | (0u)))))) ^ 0u) & 87260u), 1u))), ~ (~ (_GLF_IDENTITY(gl_WorkGroupID.x, uint(uvec4(gl_WorkGroupID.x, 0u, (0u & 87260u), 1u)))))))), _GLF_IDENTITY(gl_WorkGroupID.x, uint(_GLF_IDENTITY(uvec4(_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) | (gl_WorkGroupID)).x, 0u, (0u & 87260u), 1u), (uvec4(gl_WorkGroupID.x, 0u, (_GLF_IDENTITY(0u, (0u) | 0u) & 87260u), 1u)) | uvec4(0u, 0u, 0u, 0u)))))), min(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID.x, uint(uvec4(gl_WorkGroupID.x, 0u, _GLF_IDENTITY((0u & 87260u), ((0u & 87260u)) / uint(_GLF_ONE(1.0, injectionSwitch.y))), 1u))), clamp(_GLF_IDENTITY(gl_WorkGroupID.x, uint(uvec4(gl_WorkGroupID.x, 0u, (0u & 87260u), 1u))), _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID.x, uint(uvec4(gl_WorkGroupID.x, 0u, _GLF_IDENTITY((0u & 87260u), (false ? _GLF_FUZZED(subgroup_id) : (0u & 87260u))), 1u))), clamp(_GLF_IDENTITY(gl_WorkGroupID.x, uint(uvec4(gl_WorkGroupID.x, 0u, (0u & 87260u), 1u))), _GLF_IDENTITY(gl_WorkGroupID.x, uint(_GLF_IDENTITY(uvec4(gl_WorkGroupID.x, 0u, (0u & 87260u), 1u), ~ (~ (uvec4(gl_WorkGroupID.x, 0u, (0u & 87260u), 1u)))))), _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID.x, uint(uvec4(gl_WorkGroupID.x, 0u, (_GLF_IDENTITY(_GLF_IDENTITY(0u, (0u >> _GLF_IDENTITY(uint(8u), uint(8u))) | (0u)), (_GLF_IDENTITY(_GLF_IDENTITY(0u, (0u >> _GLF_IDENTITY(uint(8u), uint(8u))) | (0u)), ~ (~ (_GLF_IDENTITY(0u, (0u >> _GLF_IDENTITY(uint(8u), uint(8u))) | (0u)))))) ^ 0u) & 87260u), 1u))), ~ (~ (_GLF_IDENTITY(gl_WorkGroupID.x, uint(uvec4(gl_WorkGroupID.x, 0u, (0u & 87260u), 1u)))))))), _GLF_IDENTITY(gl_WorkGroupID.x, uint(_GLF_IDENTITY(uvec4(_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) | (gl_WorkGroupID)).x, 0u, (0u & 87260u), 1u), (uvec4(gl_WorkGroupID.x, 0u, (_GLF_IDENTITY(0u, (0u) | 0u) & 87260u), 1u)) | uvec4(0u, 0u, 0u, 0u)))))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID.x, uint(uvec4(gl_WorkGroupID.x, 0u, _GLF_IDENTITY((0u & 87260u), ((0u & 87260u)) / uint(_GLF_ONE(1.0, injectionSwitch.y))), 1u))), clamp(_GLF_IDENTITY(gl_WorkGroupID.x, uint(uvec4(gl_WorkGroupID.x, 0u, (0u & 87260u), 1u))), _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID.x, uint(uvec4(gl_WorkGroupID.x, 0u, _GLF_IDENTITY((0u & 87260u), (false ? _GLF_FUZZED(subgroup_id) : (0u & 87260u))), 1u))), clamp(_GLF_IDENTITY(gl_WorkGroupID.x, uint(uvec4(gl_WorkGroupID.x, 0u, (0u & 87260u), 1u))), _GLF_IDENTITY(gl_WorkGroupID.x, uint(_GLF_IDENTITY(uvec4(gl_WorkGroupID.x, 0u, (0u & 87260u), 1u), ~ (~ (uvec4(gl_WorkGroupID.x, 0u, (0u & 87260u), 1u)))))), _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID.x, uint(uvec4(gl_WorkGroupID.x, 0u, (_GLF_IDENTITY(_GLF_IDENTITY(0u, (0u >> _GLF_IDENTITY(uint(8u), uint(8u))) | (0u)), (_GLF_IDENTITY(_GLF_IDENTITY(0u, (0u >> _GLF_IDENTITY(uint(8u), uint(8u))) | (0u)), ~ (~ (_GLF_IDENTITY(0u, (0u >> _GLF_IDENTITY(uint(8u), uint(8u))) | (0u)))))) ^ 0u) & 87260u), 1u))), ~ (~ (_GLF_IDENTITY(gl_WorkGroupID.x, uint(uvec4(gl_WorkGroupID.x, 0u, (0u & 87260u), 1u)))))))), _GLF_IDENTITY(gl_WorkGroupID.x, uint(_GLF_IDENTITY(uvec4(_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) | (gl_WorkGroupID)).x, 0u, (0u & 87260u), 1u), (uvec4(gl_WorkGroupID.x, 0u, (_GLF_IDENTITY(0u, (0u) | 0u) & 87260u), 1u)) | uvec4(0u, 0u, 0u, 0u)))))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID.x, uint(uvec4(gl_WorkGroupID.x, 0u, _GLF_IDENTITY((0u & 87260u), ((0u & 87260u)) / uint(_GLF_ONE(1.0, injectionSwitch.y))), 1u))), clamp(_GLF_IDENTITY(gl_WorkGroupID.x, uint(uvec4(gl_WorkGroupID.x, 0u, (0u & 87260u), 1u))), _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID.x, uint(uvec4(gl_WorkGroupID.x, 0u, _GLF_IDENTITY((0u & 87260u), (false ? _GLF_FUZZED(subgroup_id) : (0u & 87260u))), 1u))), clamp(_GLF_IDENTITY(gl_WorkGroupID.x, uint(uvec4(gl_WorkGroupID.x, 0u, (0u & 87260u), 1u))), _GLF_IDENTITY(gl_WorkGroupID.x, uint(_GLF_IDENTITY(uvec4(gl_WorkGroupID.x, 0u, (0u & 87260u), 1u), ~ (~ (uvec4(gl_WorkGroupID.x, 0u, (0u & 87260u), 1u)))))), _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID.x, uint(uvec4(gl_WorkGroupID.x, 0u, (_GLF_IDENTITY(_GLF_IDENTITY(0u, (0u >> _GLF_IDENTITY(uint(8u), uint(8u))) | (0u)), (_GLF_IDENTITY(_GLF_IDENTITY(0u, (0u >> _GLF_IDENTITY(uint(8u), uint(8u))) | (0u)), ~ (~ (_GLF_IDENTITY(0u, (0u >> _GLF_IDENTITY(uint(8u), uint(8u))) | (0u)))))) ^ 0u) & 87260u), 1u))), ~ (~ (_GLF_IDENTITY(gl_WorkGroupID.x, uint(uvec4(gl_WorkGroupID.x, 0u, (0u & 87260u), 1u)))))))), _GLF_IDENTITY(gl_WorkGroupID.x, uint(_GLF_IDENTITY(uvec4(_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) | (gl_WorkGroupID)).x, 0u, (0u & 87260u), 1u), (uvec4(gl_WorkGroupID.x, 0u, (_GLF_IDENTITY(0u, (0u) | 0u) & 87260u), 1u)) | uvec4(0u, 0u, 0u, 0u)))))), _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID.x, uint(uvec4(gl_WorkGroupID.x, 0u, _GLF_IDENTITY((0u & 87260u), ((0u & 87260u)) / uint(_GLF_ONE(1.0, injectionSwitch.y))), 1u))), clamp(_GLF_IDENTITY(gl_WorkGroupID.x, uint(uvec4(gl_WorkGroupID.x, 0u, (0u & 87260u), 1u))), _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID.x, uint(uvec4(gl_WorkGroupID.x, 0u, _GLF_IDENTITY((0u & 87260u), (false ? _GLF_FUZZED(subgroup_id) : (0u & 87260u))), 1u))), clamp(_GLF_IDENTITY(gl_WorkGroupID.x, uint(uvec4(gl_WorkGroupID.x, 0u, (0u & 87260u), 1u))), _GLF_IDENTITY(gl_WorkGroupID.x, uint(_GLF_IDENTITY(uvec4(gl_WorkGroupID.x, 0u, (0u & 87260u), 1u), ~ (~ (uvec4(gl_WorkGroupID.x, 0u, (0u & 87260u), 1u)))))), _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID.x, uint(uvec4(gl_WorkGroupID.x, 0u, (_GLF_IDENTITY(_GLF_IDENTITY(0u, (0u >> _GLF_IDENTITY(uint(8u), uint(8u))) | (0u)), (_GLF_IDENTITY(_GLF_IDENTITY(0u, (0u >> _GLF_IDENTITY(uint(8u), uint(8u))) | (0u)), ~ (~ (_GLF_IDENTITY(0u, (0u >> _GLF_IDENTITY(uint(8u), uint(8u))) | (0u)))))) ^ 0u) & 87260u), 1u))), ~ (~ (_GLF_IDENTITY(gl_WorkGroupID.x, uint(uvec4(gl_WorkGroupID.x, 0u, (0u & 87260u), 1u)))))))), _GLF_IDENTITY(gl_WorkGroupID.x, uint(_GLF_IDENTITY(uvec4(_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) | (gl_WorkGroupID)).x, 0u, (0u & 87260u), 1u), (uvec4(gl_WorkGroupID.x, 0u, (_GLF_IDENTITY(0u, (0u) | 0u) & 87260u), 1u)) | uvec4(0u, 0u, 0u, 0u)))))), _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID.x, uint(uvec4(gl_WorkGroupID.x, 0u, _GLF_IDENTITY((0u & 87260u), ((0u & 87260u)) / uint(_GLF_ONE(1.0, injectionSwitch.y))), 1u))), clamp(_GLF_IDENTITY(gl_WorkGroupID.x, uint(uvec4(gl_WorkGroupID.x, 0u, (0u & 87260u), 1u))), _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID.x, uint(uvec4(gl_WorkGroupID.x, 0u, _GLF_IDENTITY((0u & 87260u), (false ? _GLF_FUZZED(subgroup_id) : (0u & 87260u))), 1u))), clamp(_GLF_IDENTITY(gl_WorkGroupID.x, uint(uvec4(gl_WorkGroupID.x, 0u, (0u & 87260u), 1u))), _GLF_IDENTITY(gl_WorkGroupID.x, uint(_GLF_IDENTITY(uvec4(gl_WorkGroupID.x, 0u, (0u & 87260u), 1u), ~ (~ (uvec4(gl_WorkGroupID.x, 0u, (0u & 87260u), 1u)))))), _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID.x, uint(uvec4(gl_WorkGroupID.x, 0u, (_GLF_IDENTITY(_GLF_IDENTITY(0u, (0u >> _GLF_IDENTITY(uint(8u), uint(8u))) | (0u)), (_GLF_IDENTITY(_GLF_IDENTITY(0u, (0u >> _GLF_IDENTITY(uint(8u), uint(8u))) | (0u)), ~ (~ (_GLF_IDENTITY(0u, (0u >> _GLF_IDENTITY(uint(8u), uint(8u))) | (0u)))))) ^ 0u) & 87260u), 1u))), ~ (~ (_GLF_IDENTITY(gl_WorkGroupID.x, uint(uvec4(gl_WorkGroupID.x, 0u, (0u & 87260u), 1u)))))))), _GLF_IDENTITY(gl_WorkGroupID.x, uint(_GLF_IDENTITY(uvec4(_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) | (gl_WorkGroupID)).x, 0u, (0u & 87260u), 1u), (uvec4(gl_WorkGroupID.x, 0u, (_GLF_IDENTITY(0u, (0u) | 0u) & 87260u), 1u)) | uvec4(0u, 0u, 0u, 0u))))))))));
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(trunc((-73.54 + -0.2)))))), false || ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(trunc((-73.54 + -0.2)))))))))))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) && true)) && true), (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(false, ! (! (false))), true)), (bool(bvec2(_GLF_IDENTITY(false, ! (! (false))), true))) && true))) && true), (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(! (! (_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) && true), (injectionSwitch.x > injectionSwitch.y))))), (! (! (_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), (false) && true), (injectionSwitch.x > injectionSwitch.y)))))) && true)))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 uint workgroup_base = workgroup_size * _GLF_IDENTITY(workgroup_id, clamp(workgroup_id, workgroup_id, _GLF_IDENTITY(workgroup_id, (workgroup_id) ^ _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(0u, (0u) + 0u), clamp(_GLF_IDENTITY(0u, _GLF_IDENTITY((0u) + 0u, 0u | ((0u) + 0u))), _GLF_IDENTITY(0u, (0u) + 0u), _GLF_IDENTITY(0u, (0u) + 0u))), (true ? _GLF_IDENTITY(0u, (0u) - 0u) : _GLF_FUZZED(workgroup_size))))));
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint virtual_gid = workgroup_base + subgroup_id * _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, 0u ^ (subgroup_size)), uint(uint(subgroup_size))), _GLF_IDENTITY((subgroup_size) + 0u, _GLF_IDENTITY(0u, _GLF_IDENTITY(_GLF_IDENTITY((0u), 0u | ((0u))), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY((0u), 0u | ((0u))) : _GLF_FUZZED(95361u))) | (0u)) | (_GLF_IDENTITY((subgroup_size), _GLF_IDENTITY(~ (~ ((subgroup_size))), (_GLF_IDENTITY(_GLF_IDENTITY(~ (~ ((subgroup_size))), (true ? ~ (~ ((subgroup_size))) : _GLF_FUZZED(workgroup_id))), (~ (~ ((subgroup_size)))) | (~ (~ ((subgroup_size)))))) - uint(_GLF_ZERO(_GLF_IDENTITY(0.0, (0.0) + log(1.0)), injectionSwitch.x)))) + 0u))) + subgroup_local_id;
 uint next_virtual_gid = workgroup_base + _GLF_IDENTITY(subgroup_id * subgroup_size, clamp(_GLF_IDENTITY(subgroup_id * _GLF_IDENTITY(subgroup_size, min(subgroup_size, subgroup_size)), ~ (~ (subgroup_id * subgroup_size))), subgroup_id * subgroup_size, subgroup_id * subgroup_size)) + ((_GLF_IDENTITY(subgroup_local_id, 0u | (subgroup_local_id)) + 1) % _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, clamp(_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(min(_GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, min(subgroup_size, subgroup_size)), min(subgroup_size, subgroup_size)), ~ (~ (_GLF_IDENTITY(subgroup_size, min(subgroup_size, subgroup_size))))))), subgroup_size), min(_GLF_IDENTITY(min(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, uint(uvec4(subgroup_size, 0u, 0u, uint(_GLF_ONE(1.0, injectionSwitch.y))))), clamp(subgroup_size, subgroup_size, _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, min(subgroup_size, subgroup_size)), ~ (~ (_GLF_IDENTITY(subgroup_size, min(subgroup_size, subgroup_size))))))), subgroup_size), uint(_GLF_ZERO(0.0, injectionSwitch.x)) + (min(_GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, min(subgroup_size, subgroup_size)), ~ _GLF_IDENTITY((~ _GLF_IDENTITY((_GLF_IDENTITY(subgroup_size, min(subgroup_size, subgroup_size))), 0u | ((_GLF_IDENTITY(subgroup_size, min(subgroup_size, subgroup_size)))))), ((~ (_GLF_IDENTITY(subgroup_size, min(subgroup_size, subgroup_size))))) | ((~ (_GLF_IDENTITY(subgroup_size, min(subgroup_size, subgroup_size))))))))), subgroup_size))), _GLF_IDENTITY(min(_GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (true ? subgroup_size : _GLF_FUZZED(2031u))), min(subgroup_size, subgroup_size)), ~ (~ _GLF_IDENTITY((_GLF_IDENTITY(subgroup_size, min(_GLF_IDENTITY(subgroup_size, max(_GLF_IDENTITY(subgroup_size, (subgroup_size) + 0u), subgroup_size)), subgroup_size))), clamp(_GLF_IDENTITY((_GLF_IDENTITY(subgroup_size, min(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, max(_GLF_IDENTITY(subgroup_size, (subgroup_size) + 0u), subgroup_size)), (true ? _GLF_IDENTITY(subgroup_size, max(_GLF_IDENTITY(subgroup_size, (subgroup_size) + 0u), subgroup_size)) : _GLF_FUZZED(188076u))), subgroup_size))), clamp(_GLF_IDENTITY((_GLF_IDENTITY(subgroup_size, min(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, max(_GLF_IDENTITY(subgroup_size, (subgroup_size) + 0u), subgroup_size)), (true ? _GLF_IDENTITY(subgroup_size, max(_GLF_IDENTITY(subgroup_size, (subgroup_size) + 0u), subgroup_size)) : _GLF_FUZZED(188076u))), subgroup_size))), max((_GLF_IDENTITY(subgroup_size, min(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, max(_GLF_IDENTITY(subgroup_size, (subgroup_size) + 0u), subgroup_size)), (true ? _GLF_IDENTITY(subgroup_size, max(_GLF_IDENTITY(subgroup_size, (subgroup_size) + 0u), subgroup_size)) : _GLF_FUZZED(188076u))), subgroup_size))), (_GLF_IDENTITY(subgroup_size, min(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, max(_GLF_IDENTITY(subgroup_size, (subgroup_size) + 0u), subgroup_size)), (true ? _GLF_IDENTITY(subgroup_size, max(_GLF_IDENTITY(subgroup_size, (subgroup_size) + 0u), subgroup_size)) : _GLF_FUZZED(188076u))), subgroup_size))))), (_GLF_IDENTITY(subgroup_size, min(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, max(_GLF_IDENTITY(subgroup_size, (subgroup_size) + 0u), subgroup_size)), (true ? _GLF_IDENTITY(subgroup_size, max(_GLF_IDENTITY(subgroup_size, (subgroup_size) + 0u), subgroup_size)) : _GLF_FUZZED(188076u))), subgroup_size))), _GLF_IDENTITY((_GLF_IDENTITY(subgroup_size, min(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, max(_GLF_IDENTITY(subgroup_size, (subgroup_size) + 0u), subgroup_size)), (true ? _GLF_IDENTITY(subgroup_size, max(_GLF_IDENTITY(subgroup_size, (subgroup_size) + 0u), subgroup_size)) : _GLF_FUZZED(188076u))), subgroup_size))), ((_GLF_IDENTITY(subgroup_size, min(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, max(_GLF_IDENTITY(subgroup_size, (subgroup_size) + 0u), subgroup_size)), (true ? _GLF_IDENTITY(subgroup_size, max(_GLF_IDENTITY(subgroup_size, (subgroup_size) + 0u), subgroup_size)) : _GLF_FUZZED(188076u))), subgroup_size)))) >> 0u))), (_GLF_IDENTITY(subgroup_size, min(_GLF_IDENTITY(subgroup_size, max(_GLF_IDENTITY(subgroup_size, (subgroup_size) + 0u), subgroup_size)), subgroup_size))), (_GLF_IDENTITY(subgroup_size, min(_GLF_IDENTITY(subgroup_size, max(_GLF_IDENTITY(subgroup_size, (subgroup_size) + 0u), subgroup_size)), _GLF_IDENTITY(subgroup_size, clamp(_GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, subgroup_size)), subgroup_size, subgroup_size))))))))))), subgroup_size), ~ _GLF_IDENTITY((~ (min(_GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, min(subgroup_size, subgroup_size)), ~ (~ (_GLF_IDENTITY(subgroup_size, min(subgroup_size, subgroup_size))))))), subgroup_size))), ((~ (min(_GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, min(subgroup_size, subgroup_size)), ~ (~ (_GLF_IDENTITY(subgroup_size, min(subgroup_size, subgroup_size))))))), subgroup_size)))) - 0u))))), subgroup_size, _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, 1u * (subgroup_size)), (true ? subgroup_size : _GLF_FUZZED(subgroup_id))))), max(_GLF_IDENTITY(subgroup_size, clamp(_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(min(_GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, min(subgroup_size, subgroup_size)), ~ (~ (_GLF_IDENTITY(subgroup_size, min(subgroup_size, subgroup_size))))))), subgroup_size), min(min(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (subgroup_size) * 1u), clamp(subgroup_size, subgroup_size, _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, min(subgroup_size, subgroup_size)), ~ (~ (_GLF_IDENTITY(subgroup_size, min(subgroup_size, _GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, 1u)))) | 0u)))))))), subgroup_size), _GLF_IDENTITY(min(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (subgroup_size) / 1u), _GLF_IDENTITY(clamp(subgroup_size, subgroup_size, _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, min(subgroup_size, subgroup_size)), ~ (~ (_GLF_IDENTITY(subgroup_size, min(subgroup_size, subgroup_size)))))), 0u | (_GLF_IDENTITY(clamp(subgroup_size, subgroup_size, _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, min(subgroup_size, subgroup_size)), ~ (~ (_GLF_IDENTITY(subgroup_size, min(subgroup_size, subgroup_size)))))), 0u + (clamp(subgroup_size, subgroup_size, _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, min(subgroup_size, subgroup_size)), ~ (~ (_GLF_IDENTITY(subgroup_size, min(subgroup_size, subgroup_size))))))))))), subgroup_size), ~ (~ (min(_GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, min(subgroup_size, subgroup_size)), ~ (~ (_GLF_IDENTITY(subgroup_size, min(_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(uint(uvec4(_GLF_IDENTITY(subgroup_size, (subgroup_size) / (1u & 1u)), uint(_GLF_ONE(1.0, injectionSwitch.y)), 0u, uint(_GLF_ONE(1.0, injectionSwitch.y)))), (uint(uvec4(_GLF_IDENTITY(subgroup_size, (subgroup_size) / (1u & 1u)), uint(_GLF_ONE(1.0, injectionSwitch.y)), 0u, uint(_GLF_ONE(1.0, injectionSwitch.y))))) | (uint(uvec4(_GLF_IDENTITY(subgroup_size, (subgroup_size) / (1u & 1u)), uint(_GLF_ONE(1.0, injectionSwitch.y)), 0u, uint(_GLF_ONE(1.0, injectionSwitch.y))))))), _GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size))) - 0u)))))))), subgroup_size))))))), subgroup_size, _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, 1u * (_GLF_IDENTITY(subgroup_size, (subgroup_size) | 0u))), (true ? subgroup_size : _GLF_FUZZED(subgroup_id))))), _GLF_IDENTITY(subgroup_size, clamp(_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(min(_GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, min(subgroup_size, subgroup_size)), ~ (~ (_GLF_IDENTITY(subgroup_size, min(subgroup_size, subgroup_size))))))), subgroup_size), min(min(_GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, min(subgroup_size, subgroup_size)), ~ (~ (_GLF_IDENTITY(subgroup_size, min(subgroup_size, subgroup_size))))))), subgroup_size), _GLF_IDENTITY(min(_GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, min(subgroup_size, subgroup_size)), ~ (~ (_GLF_IDENTITY(subgroup_size, min(subgroup_size, subgroup_size))))))), subgroup_size), (false ? _GLF_FUZZED(workgroup_id) : min(_GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, min(subgroup_size, subgroup_size)), ~ (~ (_GLF_IDENTITY(subgroup_size, min(subgroup_size, subgroup_size))))))), subgroup_size))))), (false ? _GLF_FUZZED(workgroup_base) : min(_GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, min(subgroup_size, subgroup_size)), ~ (~ (_GLF_IDENTITY(subgroup_size, min(subgroup_size, subgroup_size))))))), subgroup_size))), min(min(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (0u >> _GLF_IDENTITY(uint(6u), _GLF_IDENTITY(uint(6u), ~ (~ (uint(6u)))))) | (subgroup_size)), clamp(subgroup_size, subgroup_size, _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, min(subgroup_size, subgroup_size)), ~ (~ (_GLF_IDENTITY(subgroup_size, min(subgroup_size, subgroup_size))))))), subgroup_size), _GLF_IDENTITY(min(_GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, min(subgroup_size, subgroup_size)), ~ (~ _GLF_IDENTITY((_GLF_IDENTITY(subgroup_size, min(subgroup_size, subgroup_size))), clamp((_GLF_IDENTITY(subgroup_size, min(subgroup_size, subgroup_size))), (_GLF_IDENTITY(subgroup_size, min(_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, (subgroup_size) - 0u)) | (subgroup_size)), subgroup_size))), (_GLF_IDENTITY(subgroup_size, min(subgroup_size, subgroup_size))))))))), subgroup_size), ~ (_GLF_IDENTITY(~ (min(_GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, min(subgroup_size, subgroup_size)), ~ (~ (_GLF_IDENTITY(subgroup_size, min(subgroup_size, subgroup_size))))))), subgroup_size)), clamp(_GLF_IDENTITY(~ (min(_GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, min(subgroup_size, subgroup_size)), ~ (~ (_GLF_IDENTITY(subgroup_size, min(subgroup_size, subgroup_size))))))), subgroup_size)), uint(uvec2(_GLF_IDENTITY(~ (min(_GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, min(subgroup_size, subgroup_size)), ~ (~ (_GLF_IDENTITY(subgroup_size, min(subgroup_size, subgroup_size))))))), subgroup_size)), ~ (~ (~ (min(_GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, min(subgroup_size, subgroup_size)), ~ (~ (_GLF_IDENTITY(subgroup_size, min(subgroup_size, subgroup_size))))))), subgroup_size))))), 0u))), ~ (min(_GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, min(subgroup_size, subgroup_size)), ~ (~ (_GLF_IDENTITY(subgroup_size, min(subgroup_size, subgroup_size))))))), subgroup_size)), _GLF_IDENTITY(~ (min(_GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, min(subgroup_size, subgroup_size)), ~ (~ (_GLF_IDENTITY(subgroup_size, min(subgroup_size, subgroup_size))))))), subgroup_size)), max(_GLF_IDENTITY(~ (min(_GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, min(subgroup_size, subgroup_size)), ~ (~ (_GLF_IDENTITY(subgroup_size, min(subgroup_size, subgroup_size))))))), subgroup_size)), min(~ (min(_GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, min(subgroup_size, subgroup_size)), ~ (~ (_GLF_IDENTITY(subgroup_size, min(subgroup_size, subgroup_size))))))), subgroup_size)), ~ (min(_GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, min(subgroup_size, subgroup_size)), ~ (~ (_GLF_IDENTITY(subgroup_size, min(subgroup_size, subgroup_size))))))), subgroup_size)))), ~ (min(_GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, min(subgroup_size, subgroup_size)), ~ (~ (_GLF_IDENTITY(subgroup_size, min(subgroup_size, subgroup_size))))))), subgroup_size))))))))))), subgroup_size, _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, 1u * (subgroup_size)), (true ? subgroup_size : _GLF_FUZZED(subgroup_id))))))));
 if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat3x2(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), injectionSwitch)), 0.0, 0.0, 0.0, 0.0), mat3x2(mat4(_GLF_IDENTITY(mat3x2(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), injectionSwitch)), 0.0, 0.0, 0.0, 0.0), (false ? _GLF_FUZZED(mat3x2(-317.565, 5591.2581, 8.2, 77.64, 19.44, -0.3)) : mat3x2(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), injectionSwitch)), 0.0, 0.0, 0.0, 0.0)))))))).y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 uint read_1 = atomicLoad(buf[virtual_gid], _GLF_IDENTITY(_GLF_IDENTITY(4, min(4, _GLF_IDENTITY(4, clamp(4, 4, _GLF_IDENTITY(4, _GLF_IDENTITY(max(_GLF_IDENTITY(4, 0 ^ (4)), 4), (false ? _GLF_FUZZED(-38120) : max(_GLF_IDENTITY(4, 0 ^ (4)), 4)))))))), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY(4, min(4, 4)), clamp(_GLF_IDENTITY(_GLF_IDENTITY(4, (4) * 1), min(4, 4)), _GLF_IDENTITY(4, min(4, 4)), _GLF_IDENTITY(_GLF_IDENTITY(4, min(4, 4)), (_GLF_IDENTITY(4, min(4, 4))) / 1)))), (0 ^ 0) | (~ (_GLF_IDENTITY(_GLF_IDENTITY(4, min(4, _GLF_IDENTITY(4, (4) ^ 0))), _GLF_IDENTITY(clamp(_GLF_IDENTITY(4, min(4, 4)), _GLF_IDENTITY(4, min(4, 4)), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(4, min(4, 4)), (_GLF_IDENTITY(4, min(4, 4))) / 1), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(4, min(4, 4)), (_GLF_IDENTITY(4, min(4, 4))) / 1), _GLF_IDENTITY(0, (0) >> 0) ^ (_GLF_IDENTITY(_GLF_IDENTITY(4, min(4, 4)), (_GLF_IDENTITY(4, min(4, 4))) / _GLF_IDENTITY(1, (1) >> 0)))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(4, min(4, 4)), (_GLF_IDENTITY(4, min(4, 4))) / 1), _GLF_IDENTITY(0, (0) >> 0) ^ (_GLF_IDENTITY(_GLF_IDENTITY(4, min(4, 4)), (_GLF_IDENTITY(4, min(4, 4))) / _GLF_IDENTITY(1, (1) >> 0))))) | (0 | 0))) + 0)), int(int(clamp(_GLF_IDENTITY(4, min(4, 4)), _GLF_IDENTITY(4, min(_GLF_IDENTITY(4, max(_GLF_IDENTITY(4, int(ivec4(4, 0, 1, 1))), 4)), 4)), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(4, min(4, 4)), (_GLF_IDENTITY(4, min(4, 4))) / 1), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(4, min(4, 4)), (_GLF_IDENTITY(4, min(4, 4))) / 1), 0 ^ (_GLF_IDENTITY(_GLF_IDENTITY(4, min(4, 4)), (_GLF_IDENTITY(4, min(4, 4))) / 1)))) + 0))))))))))), _GLF_IDENTITY(64, ~ (~ (64))), _GLF_IDENTITY(0, (_GLF_IDENTITY(0, int(_GLF_IDENTITY(ivec3(0, 0, 0), ~ (_GLF_IDENTITY(~ (ivec3(0, 0, 0)), min(~ (ivec3(0, 0, 0)), ~ (ivec3(0, 0, 0))))))))) / 1));
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 atomicStore(buf[next_virtual_gid], _GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(read_1 + _GLF_IDENTITY(1, int(ivec2(1, 0))), (read_1 + _GLF_IDENTITY(1, int(ivec2(1, _GLF_IDENTITY(0, ~ (~ (0))))))) | (1u ^ 1u))), 0u + (uint(read_1 + _GLF_IDENTITY(1, int(ivec2(1, 0)))))), max(_GLF_IDENTITY(uint(_GLF_IDENTITY(read_1 + _GLF_IDENTITY(1, int(ivec2(1, 0))), (read_1 + _GLF_IDENTITY(1, int(ivec2(1, _GLF_IDENTITY(_GLF_IDENTITY(0, (0) >> 0), ~ (~ (0))))))) | (_GLF_IDENTITY(1u ^ 1u, (1u ^ 1u) - 0u)))), 0u + (uint(_GLF_IDENTITY(read_1 + _GLF_IDENTITY(1, int(ivec2(1, 0))), (read_1 + _GLF_IDENTITY(1, int(ivec2(1, 0)))) | 0u)))), _GLF_IDENTITY(uint(_GLF_IDENTITY(read_1 + _GLF_IDENTITY(1, int(ivec2(1, 0))), (read_1 + _GLF_IDENTITY(1, int(ivec2(1, _GLF_IDENTITY(0, ~ (~ (0))))))) | (1u ^ 1u))), 0u + (uint(read_1 + _GLF_IDENTITY(1, int(ivec2(1, 0)))))))), _GLF_IDENTITY(4, 0 | (4)), 64, 4);
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false)))))), _GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch, vec2(vec2(injectionSwitch))).x)) > injectionSwitch.y), _GLF_IDENTITY(bool(bool((_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch, vec2(vec2(injectionSwitch))).x)) > injectionSwitch.y))), ! (! (bool(bool((_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch, vec2(vec2(injectionSwitch))).x)) > injectionSwitch.y)))))))) || (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))))
  {
   if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), true, false, _GLF_IDENTITY(true, bool(bvec3(true, false, false)))))), (_GLF_DEAD(false)) && _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (! (injectionSwitch.x < injectionSwitch.y)))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y, ! (! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y))), bool(bvec2(_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y, ! (! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint read_2 = atomicLoad(_GLF_IDENTITY(buf[virtual_gid], 1u * _GLF_IDENTITY(_GLF_IDENTITY((buf[virtual_gid]), 0u ^ ((buf[virtual_gid]))), max((buf[virtual_gid]), _GLF_IDENTITY((_GLF_IDENTITY(buf[virtual_gid], (buf[virtual_gid]) - (0u & 86843u))), _GLF_IDENTITY(min((buf[virtual_gid]), (buf[virtual_gid])), max(_GLF_IDENTITY(min((buf[virtual_gid]), (buf[virtual_gid])), (min((buf[virtual_gid]), (buf[virtual_gid]))) / 1u), min((buf[virtual_gid]), (buf[virtual_gid])))))))), _GLF_IDENTITY(4, 0 | (4)), 64, 0);
 atomicStore(buf[next_virtual_gid], _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(uint(read_1 + 1 == read_2), (_GLF_IDENTITY(uint(read_1 + 1 == read_2), uint(uvec2(_GLF_IDENTITY(uint(read_1 + 1 == read_2), min(uint(read_1 + 1 == read_2), uint(_GLF_IDENTITY(read_1 + 1 == read_2, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(read_1 + 1 == read_2, false || (read_1 + 1 == read_2))), ! (! (! (_GLF_IDENTITY(read_1 + 1 == read_2, false || (read_1 + 1 == _GLF_IDENTITY(read_2, ~ (~ (read_2)))))))))))))), 1u)))) | (_GLF_IDENTITY(uint(_GLF_IDENTITY(read_1 + 1, (read_1 + 1) ^ 0u) == read_2), (_GLF_IDENTITY(_GLF_IDENTITY(uint(read_1 + 1 == read_2), (uint(read_1 + 1 == read_2)) >> 0u), clamp(uint(read_1 + 1 == read_2), uint(_GLF_IDENTITY(read_1, min(read_1, read_1)) + 1 == _GLF_IDENTITY(read_2, min(read_2, _GLF_IDENTITY(read_2, uint(uint(read_2)))))), _GLF_IDENTITY(uint(read_1 + 1 == read_2), (_GLF_IDENTITY(uint(read_1 + 1 == read_2), min(uint(read_1 + 1 == read_2), uint(read_1 + 1 == read_2)))) - 0u)))) / 1u))), (_GLF_IDENTITY(uint(read_1 + 1 == read_2), (_GLF_IDENTITY(_GLF_IDENTITY(uint(read_1 + 1 == read_2), max(uint(read_1 + 1 == read_2), uint(read_1 + 1 == read_2))), _GLF_IDENTITY(uint(uvec2(_GLF_IDENTITY(uint(read_1 + 1 == read_2), min(uint(_GLF_IDENTITY(read_1 + 1 == read_2, ! (! (read_1 + 1 == read_2)))), uint(read_1 + 1 == read_2))), 1u)), 1u * (uint(uvec2(_GLF_IDENTITY(uint(read_1 + 1 == read_2), min(uint(_GLF_IDENTITY(read_1 + 1 == read_2, ! (! (read_1 + 1 == read_2)))), uint(read_1 + 1 == read_2))), _GLF_IDENTITY(1u, (1u) | (0u >> _GLF_IDENTITY(uint(7u), uint(7u)))))))))) | (_GLF_IDENTITY(uint(read_1 + 1 == read_2), (_GLF_IDENTITY(uint(read_1 + 1 == read_2), clamp(uint(read_1 + 1 == read_2), uint(read_1 + 1 == read_2), uint(read_1 + 1 == read_2)))) / 1u)))) / uint(_GLF_ONE(1.0, injectionSwitch.y))) + 1, ~ (~ (_GLF_IDENTITY(uint(read_1 + 1 == read_2) + 1, (_GLF_IDENTITY(_GLF_IDENTITY(uint(read_1 + 1 == read_2) + 1, 0u ^ (uint(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(read_1, (_GLF_IDENTITY(read_1, max(read_1, read_1))) ^ 0u), (_GLF_IDENTITY(read_1, (_GLF_IDENTITY(_GLF_IDENTITY(read_1, (read_1) ^ 0u), max(read_1, read_1))) ^ 0u)) | 0u), (read_1) ^ (_GLF_IDENTITY(0u, (0u) + 0u) & 48267u)) + 1 == read_2) + 1)), (_GLF_IDENTITY(_GLF_IDENTITY(uint(read_1 + 1 == read_2) + 1, 0u ^ (uint(_GLF_IDENTITY(_GLF_IDENTITY(read_1, (_GLF_IDENTITY(read_1, max(read_1, read_1))) ^ 0u), (read_1) ^ (0u & 48267u)) + 1 == read_2) + 1)), uint(uvec3(_GLF_IDENTITY(_GLF_IDENTITY(uint(read_1 + 1 == read_2) + 1, 0u ^ (uint(_GLF_IDENTITY(_GLF_IDENTITY(read_1, (_GLF_IDENTITY(read_1, max(read_1, read_1))) ^ 0u), (read_1) ^ (0u & 48267u)) + 1 == read_2) + 1)), (_GLF_IDENTITY(_GLF_IDENTITY(uint(read_1 + 1 == read_2) + 1, 0u ^ (uint(_GLF_IDENTITY(_GLF_IDENTITY(read_1, (_GLF_IDENTITY(read_1, max(read_1, read_1))) ^ 0u), (read_1) ^ (0u & 48267u)) + 1 == read_2) + 1)), min(_GLF_IDENTITY(uint(read_1 + 1 == read_2) + 1, 0u ^ (uint(_GLF_IDENTITY(_GLF_IDENTITY(read_1, (_GLF_IDENTITY(read_1, max(read_1, read_1))) ^ 0u), (read_1) ^ (0u & 48267u)) + 1 == read_2) + 1)), _GLF_IDENTITY(uint(read_1 + 1 == read_2) + 1, 0u ^ (uint(_GLF_IDENTITY(_GLF_IDENTITY(read_1, (_GLF_IDENTITY(read_1, max(read_1, read_1))) ^ 0u), (read_1) ^ (0u & 48267u)) + 1 == read_2) + 1))))) | 0u), 1u, (0u << _GLF_IDENTITY(uint(5u), uint(5u))))))) ^ 0u)) | (uint(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(read_1, clamp(_GLF_IDENTITY(read_1, (read_1) | (read_1)), read_1, read_1)), 1u * (read_1)) + 1, clamp(_GLF_IDENTITY(read_1 + 1, min(read_1 + _GLF_IDENTITY(1, 0 | (1)), read_1 + 1)), _GLF_IDENTITY(_GLF_IDENTITY(read_1, 1u * (read_1)) + 1, max(read_1 + 1, _GLF_IDENTITY(read_1, max(read_1, read_1)) + 1)), _GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1, (read_1 + 1) + (0u & 82647u)), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(read_1 + 1, (read_1 + 1) + (0u & 82647u))), (~ (_GLF_IDENTITY(read_1 + 1, (read_1 + 1) + (0u & 82647u)))) - 0u))))) == read_2, _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1, clamp(_GLF_IDENTITY(read_1 + 1, min(read_1 + 1, read_1 + 1)), _GLF_IDENTITY(read_1 + 1, max(read_1 + 1, read_1 + 1)), _GLF_IDENTITY(read_1 + 1, (read_1 + _GLF_IDENTITY(1, (1) / 1)) + _GLF_IDENTITY((0u & 82647u), ((_GLF_IDENTITY(0u & 82647u, (_GLF_IDENTITY(0u & 82647u, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(virtual_gid) : 0u & 82647u))) / uint(_GLF_ONE(1.0, injectionSwitch.y))))) * _GLF_IDENTITY(1u, (1u) - 0u))))) == read_2, (_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1, clamp(_GLF_IDENTITY(read_1 + 1, min(read_1 + 1, read_1 + 1)), _GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1, max(read_1 + 1, read_1 + 1)), clamp(_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1, max(read_1 + 1, read_1 + 1)), clamp(_GLF_IDENTITY(read_1 + 1, max(read_1 + 1, read_1 + 1)), _GLF_IDENTITY(read_1 + 1, max(read_1 + 1, read_1 + 1)), _GLF_IDENTITY(read_1 + 1, max(read_1 + 1, read_1 + 1)))), _GLF_IDENTITY(read_1 + 1, max(read_1 + 1, read_1 + 1)), _GLF_IDENTITY(read_1 + 1, max(read_1 + 1, read_1 + 1)))), _GLF_IDENTITY(read_1 + 1, (read_1 + 1) + (_GLF_IDENTITY(0u, _GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(uint(0u), (uint(0u)) << 0u)), 0u ^ (uint(_GLF_IDENTITY(uint(0u), (uint(0u)) << 0u)))), (uint(_GLF_IDENTITY(uint(0u), (uint(0u)) << 0u))) | (uint(_GLF_IDENTITY(uint(0u), _GLF_IDENTITY((uint(0u)) << 0u, ((uint(0u)) << 0u) - 0u)))))) & 82647u)))), uint(uint(_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1, clamp(_GLF_IDENTITY(read_1 + 1, min(read_1 + 1, read_1 + 1)), _GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1, max(read_1 + 1, read_1 + 1)), clamp(_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1, max(read_1 + 1, read_1 + 1)), clamp(_GLF_IDENTITY(read_1 + 1, max(read_1 + 1, read_1 + 1)), _GLF_IDENTITY(read_1 + 1, max(read_1 + 1, read_1 + 1)), _GLF_IDENTITY(read_1 + 1, max(read_1 + 1, read_1 + 1)))), _GLF_IDENTITY(read_1 + 1, max(read_1 + 1, read_1 + 1)), _GLF_IDENTITY(read_1 + 1, max(read_1 + 1, read_1 + 1)))), _GLF_IDENTITY(read_1 + 1, (read_1 + 1) + (_GLF_IDENTITY(0u, _GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(uint(0u), (uint(0u)) << 0u)), 0u ^ (uint(_GLF_IDENTITY(uint(0u), (uint(0u)) << 0u)))), (uint(_GLF_IDENTITY(uint(0u), (uint(0u)) << 0u))) | (uint(_GLF_IDENTITY(uint(0u), _GLF_IDENTITY((uint(0u)) << 0u, ((uint(0u)) << 0u) - 0u)))))) & 82647u)))), (0u | 0u) | (_GLF_IDENTITY(read_1 + 1, clamp(_GLF_IDENTITY(read_1 + 1, min(read_1 + 1, read_1 + 1)), _GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1, max(read_1 + 1, read_1 + 1)), clamp(_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1, max(read_1 + 1, read_1 + 1)), clamp(_GLF_IDENTITY(read_1 + 1, max(read_1 + 1, read_1 + 1)), _GLF_IDENTITY(read_1 + 1, max(read_1 + 1, read_1 + 1)), _GLF_IDENTITY(read_1 + 1, max(read_1 + 1, read_1 + 1)))), _GLF_IDENTITY(read_1 + 1, max(read_1 + 1, read_1 + 1)), _GLF_IDENTITY(read_1 + 1, max(read_1 + 1, read_1 + 1)))), _GLF_IDENTITY(read_1 + 1, (read_1 + 1) + (_GLF_IDENTITY(0u, _GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(uint(0u), (uint(0u)) << 0u)), 0u ^ (uint(_GLF_IDENTITY(uint(0u), (uint(0u)) << 0u)))), (uint(_GLF_IDENTITY(uint(0u), (uint(0u)) << 0u))) | (uint(_GLF_IDENTITY(uint(0u), _GLF_IDENTITY((uint(0u)) << 0u, ((uint(0u)) << 0u) - 0u)))))) & 82647u))))))))) == read_2) && true), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(mat4(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), 0.0, length(vec3(0.0, 0.0, 0.0)), 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, _GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0)), dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0)))))))).x < injectionSwitch.y)), false)), _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(read_1, (read_1) | (_GLF_IDENTITY(read_1, (read_1) >> 0u))) + 1, clamp(_GLF_IDENTITY(read_1 + 1, min(read_1 + 1, read_1 + 1)), _GLF_IDENTITY(read_1 + 1, max(read_1 + 1, read_1 + 1)), _GLF_IDENTITY(read_1 + 1, (read_1 + 1) + (0u & _GLF_IDENTITY(82647u, clamp(_GLF_IDENTITY(82647u, clamp(_GLF_IDENTITY(82647u, (82647u) + 0u), 82647u, 82647u)), 82647u, _GLF_IDENTITY(82647u, ~ (~ (82647u))))))))) == read_2, (_GLF_IDENTITY(read_1 + 1, clamp(_GLF_IDENTITY(read_1 + 1, min(read_1 + 1, read_1 + 1)), _GLF_IDENTITY(read_1 + 1, max(read_1 + 1, read_1 + 1)), _GLF_IDENTITY(read_1 + 1, (read_1 + 1) + (_GLF_IDENTITY(0u & 82647u, (0u & 82647u) | (0u << _GLF_IDENTITY(uint(6u), uint(6u)))))))) == read_2) && true), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))), true && (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1, clamp(_GLF_IDENTITY(read_1 + _GLF_IDENTITY(1, ~ (~ (1))), min(read_1 + 1, read_1 + 1)), _GLF_IDENTITY(read_1 + 1, max(read_1 + 1, read_1 + 1)), _GLF_IDENTITY(read_1 + 1, (read_1 + 1) + (0u & 82647u)))) == read_2, (_GLF_IDENTITY(read_1 + 1, clamp(_GLF_IDENTITY(read_1 + _GLF_IDENTITY(1, ~ (~ (_GLF_IDENTITY(1, max(1, 1))))), min(read_1 + 1, read_1 + 1)), _GLF_IDENTITY(read_1 + 1, max(read_1 + 1, read_1 + 1)), _GLF_IDENTITY(read_1 + 1, (read_1 + 1) + (0u & _GLF_IDENTITY(82647u, max(_GLF_IDENTITY(82647u, min(_GLF_IDENTITY(82647u, uint(uvec4(82647u, 1u, 1u, 0u))), 82647u)), 82647u)))))) == read_2) && true), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)))))))) + 1))))), _GLF_IDENTITY(4, (4) - _GLF_IDENTITY(0, (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(97735) : _GLF_IDENTITY(0, (0) + 0), ~ (~ (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(97735) : _GLF_IDENTITY(0, (0) + 0))))))), 64, 4);
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_DEAD(false))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
}
