#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(mat2x3(injectionSwitch.x, 0.0, 0.0, 0.0, 0.0, 0.0)), max(float(mat2x3(injectionSwitch.x, 0.0, 0.0, 0.0, 0.0, 0.0)), float(mat2x3(injectionSwitch.x, 0.0, 0.0, 0.0, 0.0, 0.0))))), injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)))), injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), clamp(mat2(1.0) * (injectionSwitch), mat2(_GLF_IDENTITY(1.0, float(mat4(1.0, 1.0, 1.0, sqrt(1.0), 0.0, 0.0, 1.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0)))) * (injectionSwitch), _GLF_IDENTITY(mat2(1.0), mat2(1.0) * (mat2(1.0))) * (injectionSwitch)))).y, ! (! _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x), min(_GLF_IDENTITY(clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x), (true ? clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x) : _GLF_FUZZED(dot(-2527.2107, -5.6)))), clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)))) > injectionSwitch.y), bool(bool((_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x), min(_GLF_IDENTITY(clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x), (true ? clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x) : _GLF_FUZZED(dot(-2527.2107, -5.6)))), clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)))) > injectionSwitch.y))))))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
    return;
   return;
  }
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(vec2(-15.03, -416.759).x)), float(injectionSwitch.x), bool(true))) > injectionSwitch.y))), bool(bvec3(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 uint num_workgroup = _GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, (true ? gl_NumWorkGroups : _GLF_FUZZED(uvec3(88014u, 131901u, 98831u)))).x, (gl_NumWorkGroups.x) / ((1u << _GLF_IDENTITY(_GLF_IDENTITY(uint(6u), clamp(uint(6u), _GLF_IDENTITY(uint(6u), (uint(6u)) / 1u), _GLF_IDENTITY(uint(6u), (uint(6u)) >> 0u))), uint(_GLF_IDENTITY(6u, max(_GLF_IDENTITY(6u, (true ? _GLF_IDENTITY(6u, min(6u, 6u)) : _GLF_FUZZED(subgroup_size))), 6u))))) >> _GLF_IDENTITY(uint(_GLF_IDENTITY(6u, uint(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(6u, (_GLF_IDENTITY(6u, (6u) | (_GLF_IDENTITY(6u, (6u) | (6u))))) / 1u), 1u, 0u), min(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(6u, (6u) / 1u), 1u, 0u), (uvec3(_GLF_IDENTITY(6u, (6u) / 1u), 1u, 0u)) / uvec3(1u, 1u, 1u)), uvec3(_GLF_IDENTITY(6u, (6u) / 1u), 1u, 0u)))))), uint(6u))));
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 uint workgroup_size = _GLF_IDENTITY(gl_WorkGroupSize, (uvec3(0u, 0u, 0u) | _GLF_IDENTITY(uvec3(0u, 0u, 0u), (uvec3(0u, 0u, 0u)) * uvec3(1u, 1u, 1u))) ^ (gl_WorkGroupSize)).x;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, false || (false)), _GLF_IDENTITY(true, bool(bool(true))), _GLF_IDENTITY(false, bool(bvec3(false, _GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, bool(bool(false))), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(injectionSwitch.x > injectionSwitch.y, false, _GLF_TRUE(_GLF_IDENTITY(true, (true) || false), (injectionSwitch.x < injectionSwitch.y))), bvec3(bvec3(bvec3(_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)).x > injectionSwitch.y, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), bvec3(bvec4(_GLF_IDENTITY(bvec3(injectionSwitch.x > injectionSwitch.y, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bvec3(bvec3(bvec3(_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, vec2(mat2x4(injectionSwitch, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0))), injectionSwitch, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)))))).x > injectionSwitch.y, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), true))))))), bool(bvec2(_GLF_FALSE(_GLF_IDENTITY(false, bool(bool(false))), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(_GLF_IDENTITY(bvec2(injectionSwitch.x > injectionSwitch.y, true), bvec2(bvec3(bvec2(injectionSwitch.x > injectionSwitch.y, true), false))))), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bvec3(bvec3(bvec3(_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + _GLF_IDENTITY((injectionSwitch), ((injectionSwitch)) - vec2(0.0, 0.0))).x > injectionSwitch.y, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), _GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(_GLF_IDENTITY(bvec2(injectionSwitch.x > injectionSwitch.y, true), bvec2(bvec3(bvec2(injectionSwitch.x > injectionSwitch.y, true), false))))), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bvec3(bvec3(bvec3(_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + _GLF_IDENTITY((injectionSwitch), ((injectionSwitch)) - vec2(0.0, 0.0))).x > injectionSwitch.y, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))), bvec3(bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(_GLF_IDENTITY(bvec2(injectionSwitch.x > injectionSwitch.y, true), bvec2(bvec3(bvec2(injectionSwitch.x > injectionSwitch.y, true), false))))), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bvec3(bvec3(bvec3(_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + _GLF_IDENTITY((injectionSwitch), ((injectionSwitch)) - vec2(0.0, 0.0))).x > injectionSwitch.y, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))))))))))), true))), false)))), _GLF_IDENTITY(_GLF_IDENTITY(bvec3(bvec4(bvec3(_GLF_IDENTITY(false, bool(bvec2(false, true))), true, _GLF_IDENTITY(false, _GLF_IDENTITY((false), bool(bvec4((false), false, true, false))) || false)), true)), bvec3(bvec3(bvec3(bvec4(bvec3(false, true, false), true))))), _GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(bvec4(bvec3(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), false || (! (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false)), false)), (bool(bvec2(false, false))) || false))))))), true, _GLF_IDENTITY(false, _GLF_IDENTITY((false) || _GLF_IDENTITY(false, ! (! (false))), bool(bvec3(_GLF_IDENTITY((false) || _GLF_IDENTITY(false, ! (! (false))), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY((false) || _GLF_IDENTITY(false, ! (! (false))), false || ((false) || _GLF_IDENTITY(false, ! (! (false)))))), bool(bvec4(bool(_GLF_IDENTITY((false) || _GLF_IDENTITY(false, ! (! (false))), false || ((false) || _GLF_IDENTITY(false, ! (! (false)))))), true, false, false))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bool(false)))) && true), (injectionSwitch.x > injectionSwitch.y))))))), true)), _GLF_IDENTITY(bvec3(bvec4(bvec3(bvec4(bvec3(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), false || (! (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false)), false)), (bool(bvec2(false, false))) || false))))))), true, _GLF_IDENTITY(false, _GLF_IDENTITY((false) || _GLF_IDENTITY(false, ! (! (false))), bool(bvec3(_GLF_IDENTITY((false) || _GLF_IDENTITY(false, ! (! (false))), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY((false) || _GLF_IDENTITY(false, ! (! (false))), false || ((false) || _GLF_IDENTITY(false, ! (! (false)))))), bool(bvec4(bool(_GLF_IDENTITY((false) || _GLF_IDENTITY(false, ! (! (false))), false || ((false) || _GLF_IDENTITY(false, ! (! (false)))))), true, false, false))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bool(false)))) && true), (injectionSwitch.x > injectionSwitch.y))))))), true)), true)), bvec3(bvec4(bvec3(bvec4(bvec3(bvec4(bvec3(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), false || (! (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false)), false)), (bool(bvec2(false, false))) || false))))))), true, _GLF_IDENTITY(false, _GLF_IDENTITY((false) || _GLF_IDENTITY(false, ! (! (false))), bool(bvec3(_GLF_IDENTITY((false) || _GLF_IDENTITY(false, ! (! (false))), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY((false) || _GLF_IDENTITY(false, ! (! (false))), false || ((false) || _GLF_IDENTITY(false, ! (! (false)))))), bool(bvec4(bool(_GLF_IDENTITY((false) || _GLF_IDENTITY(false, ! (! (false))), false || ((false) || _GLF_IDENTITY(false, ! (! (false)))))), true, false, false))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bool(false)))) && true), (injectionSwitch.x > injectionSwitch.y))))))), true)), true)), true)))), bvec3(bvec3(bvec3(bvec4(bvec3(false, true, _GLF_IDENTITY(false, (false) && _GLF_IDENTITY(true, false || (true)))), true))))))), _GLF_IDENTITY(bvec3(bvec4(bvec3(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(bvec4(bvec3(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), false || (! (false))))), true, _GLF_IDENTITY(false, (false) || _GLF_IDENTITY(false, ! (! _GLF_IDENTITY((false), _GLF_IDENTITY(bool(bvec4((false), true, true, false)), (bool(bvec4((false), true, true, false))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))), true)), bvec3(bvec3(bvec3(bvec4(bvec3(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), false || (! (false))))), true, _GLF_IDENTITY(false, (false) || _GLF_IDENTITY(false, ! (! _GLF_IDENTITY((false), _GLF_IDENTITY(bool(bvec4((false), true, true, false)), (bool(bvec4((false), true, true, false))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))), true))))), bvec3(bvec3(bvec3(bvec4(bvec3(false, true, false), true))))))), false)), bvec3(bvec4(bvec3(bvec4(bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec4(bvec3(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), false || (! (false))))), true, _GLF_IDENTITY(false, (false) || _GLF_IDENTITY(false, ! (! (false))))), true)), bvec3(_GLF_IDENTITY(bvec3(bvec3(bvec4(bvec3(false, true, false), true))), bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec3(bvec4(bvec3(false, true, false), true))), bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec3(bvec4(bvec3(false, true, false), true))), bvec3(bvec4(bvec3(bvec3(bvec4(_GLF_IDENTITY(bvec3(false, true, false), bvec3(_GLF_IDENTITY(bvec3(bvec3(false, true, false)), bvec3(bvec4(bvec3(bvec3(false, true, false)), true))))), _GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, false || (true))))))), false))))))))))))), false)), true))))))))), ((_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, true, _GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(bool(bvec3(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))), bool(bvec3(bool(bool(bvec3(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))), false, false)))), _GLF_IDENTITY(bool(bvec2(bool(_GLF_IDENTITY(bool(bool(bvec3(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))), bool(bvec3(bool(bool(bvec3(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))), false, false)))), true)), (bool(bvec2(bool(_GLF_IDENTITY(bool(bool(bvec3(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))), bool(bvec3(bool(bool(bvec3(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))), false, false)))), true))) || false)))), ! (! (_GLF_IDENTITY(false, bool(bvec3(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))))))), _GLF_IDENTITY(bvec3(bvec4(bvec3(false, true, _GLF_IDENTITY(false, (false) || false)), true)), bvec3(_GLF_IDENTITY(bvec3(bvec3(bvec4(bvec3(false, true, false), true))), bvec3(bvec3(bvec3(bvec3(bvec4(bvec3(false, true, false), true))))))))))))) && true)))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)), _GLF_IDENTITY(false || (_GLF_IDENTITY(_GLF_DEAD(false), bool(_GLF_IDENTITY(bvec2(_GLF_DEAD(false), _GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, (false) || false), (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, (false) || false)), bool(_GLF_IDENTITY(bool(bool(false)), bool(bvec3(bool(bool(false)), true, false))))))), _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y))))))))))))), bvec2(bvec4(bvec2(_GLF_DEAD(false), _GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bool(injectionSwitch.x > injectionSwitch.y))))), false || (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), bool(_GLF_IDENTITY(bool(bool(false)), bool(bvec3(bool(bool(false)), true, false))))))), (injectionSwitch.x > injectionSwitch.y))))))), true, true)))))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false || (_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec2(_GLF_DEAD(false), _GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).x > injectionSwitch.y)), bool(bvec4(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, false))))), (_GLF_IDENTITY(bool(bvec2(_GLF_DEAD(false), _GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).x > injectionSwitch.y)), bool(bvec4(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, false))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (bool(bvec2(_GLF_DEAD(false), _GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).x > injectionSwitch.y)), bool(bvec4(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, false)))))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), false || (false || (_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec2(_GLF_DEAD(false), _GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).x > injectionSwitch.y)), bool(bvec4(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) - vec2(0.0, 0.0), mix(vec2(_GLF_FUZZED(3.4), _GLF_FUZZED(-57.11)), vec2(((injectionSwitch) - vec2(0.0, 0.0))[0], ((injectionSwitch) - vec2(0.0, 0.0))[1]), bvec2(true, true)))).x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)).y)), true, false))))), _GLF_IDENTITY((_GLF_IDENTITY(bool(bvec2(_GLF_DEAD(false), _GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).x > injectionSwitch.y)), bool(bvec4(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, false))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (bool(bvec2(_GLF_DEAD(false), _GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).x > injectionSwitch.y)), bool(bvec4(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, false)))))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), ! (! (_GLF_IDENTITY((_GLF_IDENTITY(bool(bvec2(_GLF_DEAD(false), _GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).x > injectionSwitch.y)), bool(bvec4(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, false))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (bool(bvec2(_GLF_DEAD(false), _GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).x > injectionSwitch.y)), bool(bvec4(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, false)))))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), ((_GLF_IDENTITY(bool(bvec2(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))), _GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).x > injectionSwitch.y)), bool(bvec4(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, false))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (bool(bvec2(_GLF_DEAD(false), _GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).x > injectionSwitch.y)), bool(bvec4(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).x > injectionSwitch.y)), _GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), ! (! (! ((injectionSwitch.x > injectionSwitch.y)))))))), true, false)))))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))) || false))))))))), true && (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true) || (_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_DEAD(false), _GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), bool(bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))) && (false)), (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, _GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, (0.0) / 1.0), 0.0, 0.0)))).x > injectionSwitch.y)))))), ! (! (_GLF_IDENTITY(false || (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))), bool(bvec2(_GLF_DEAD(false), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).x > injectionSwitch.y)))))), ! (! (false || (_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_DEAD(false), _GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) - vec2(0.0, 0.0), ((injectionSwitch) - vec2(0.0, 0.0)) * mat2(1.0))).x > injectionSwitch.y) && true), bool(bvec4(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).x > injectionSwitch.y, true, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))))))))))))))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(false, false || (false)))), ! (! (bool(bool(_GLF_IDENTITY(false, false || (false))))))))))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
          return;
         if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
          return;
         return;
        }
       return;
      }
     return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - abs(0.0))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, 0.0 + (_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-8.4)), bool(_GLF_IDENTITY(false, (false) || false)))))) > injectionSwitch.y))))
      return;
     return;
    }
   return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) / vec2(1.0, 1.0), vec2(mat3x2((injectionSwitch) / vec2(1.0, 1.0), 1.0, 1.0, determinant(mat3(1.0, 0.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), abs(1.0), 0.0, 1.0, 0.0, sqrt(1.0))), 0.0)))).x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  return;
 uint workgroup_id = gl_WorkGroupID.x;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), true && (bool(_GLF_IDENTITY(bool(false), bool(_GLF_IDENTITY(bvec2(bool(false), false), bvec2(bvec3(bvec2(bool(false), false), false)))))))))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 uint workgroup_base = _GLF_IDENTITY(workgroup_size, (workgroup_size) | (0u >> _GLF_IDENTITY(uint(0u), uint(0u)))) * workgroup_id;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   return;
  }
 uint virtual_gid = workgroup_base + subgroup_id * subgroup_size + subgroup_local_id;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(mat2x4(injectionSwitch, 0.0, 1.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, (0.0) / 1.0)))), _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))).y))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).x, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).x) - 0.0) > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            return;
           return;
          }
         return;
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0)) * 1.0)))))
        return;
       return;
       if(_GLF_DEAD(false))
        return;
      }
    }
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false))))
        return;
       return;
       if(_GLF_DEAD(false))
        return;
      }
     return;
    }
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))), (_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false))))) || false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
  }
 uint next_virtual_gid = _GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, max(workgroup_base + subgroup_id * subgroup_size, workgroup_base + subgroup_id * subgroup_size)) + ((subgroup_local_id + 1) % subgroup_size);
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  return;
 uint read_1 = atomicLoad(buf[virtual_gid], 4, 64, 0);
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[_GLF_IDENTITY(1, _GLF_IDENTITY(int(ivec2(_GLF_IDENTITY(1, (true ? _GLF_IDENTITY(1, (_GLF_IDENTITY(1, clamp(1, 1, 1))) / 1) : _GLF_FUZZED(ivec3(_GLF_IDENTITY(73194, clamp(73194, 73194, 73194)), 23132, -20723).g))), 0)), (_GLF_IDENTITY(int(ivec2(_GLF_IDENTITY(1, (true ? 1 : _GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(ivec3(73194, 23132, -20723).g), int(_GLF_ONE(1.0, injectionSwitch.y)) * (_GLF_IDENTITY(_GLF_FUZZED(ivec3(73194, 23132, -20723).g), (false ? _GLF_FUZZED(-98977) : _GLF_FUZZED(ivec3(73194, 23132, -20723).g))))), ~ (~ (_GLF_FUZZED(ivec3(73194, 23132, -20723).g)))))), 0)), (false ? _GLF_FUZZED(-74586) : int(ivec2(_GLF_IDENTITY(1, (_GLF_IDENTITY(true, (true) && true) ? 1 : _GLF_FUZZED(ivec3(73194, 23132, -20723).g))), 0))))) * 1))])).x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(false, (false) && _GLF_TRUE(_GLF_IDENTITY(true, (_GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, ! (! (true)))))) || false), (injectionSwitch.x < injectionSwitch.y))))), (bool(bool(_GLF_IDENTITY(false, (false) && _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))) || false))))) || false))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bvec2(injectionSwitch.x > injectionSwitch.y, false)), ! (! (bool(bvec2(injectionSwitch.x > injectionSwitch.y, false))))))))))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, true, false)))))
        return;
       return;
      }
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 atomicStore(buf[next_virtual_gid], _GLF_IDENTITY(uint(read_1 + 1), (_GLF_IDENTITY(uint(read_1 + 1), (uint(read_1 + 1)) / 1u)) ^ 0u), 4, 64, 4);
 uint read_2 = atomicLoad(buf[virtual_gid], 4, 64, 0);
 atomicStore(buf[_GLF_IDENTITY(_GLF_IDENTITY(next_virtual_gid, ~ (_GLF_IDENTITY(~ (next_virtual_gid), (~ (_GLF_IDENTITY(next_virtual_gid, (_GLF_IDENTITY(next_virtual_gid, uint(uint(next_virtual_gid)))) / (1u | uint(_GLF_ONE(1.0, injectionSwitch.y)))))) | 0u))), max(_GLF_IDENTITY(next_virtual_gid, ~ (_GLF_IDENTITY(~ (next_virtual_gid), (~ (_GLF_IDENTITY(next_virtual_gid, (false ? _GLF_FUZZED(workgroup_id) : _GLF_IDENTITY(next_virtual_gid, max(next_virtual_gid, next_virtual_gid)))))) | 0u))), _GLF_IDENTITY(next_virtual_gid, ~ (_GLF_IDENTITY(~ (next_virtual_gid), _GLF_IDENTITY((_GLF_IDENTITY(~ (next_virtual_gid), _GLF_IDENTITY((~ (next_virtual_gid)) << 0u, ~ (~ ((~ (next_virtual_gid)) << 0u))))), 1u * (_GLF_IDENTITY((_GLF_IDENTITY(~ (next_virtual_gid), (~ (next_virtual_gid)) << 0u)), ((_GLF_IDENTITY(~ (next_virtual_gid), (~ (next_virtual_gid)) << 0u))) - 0u))) | 0u)))))], _GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1, min(read_1 + 1, read_1 + _GLF_IDENTITY(1, (1) >> int(_GLF_ZERO(0.0, injectionSwitch.x))))), (read_1 + 1) | (_GLF_IDENTITY(_GLF_IDENTITY(read_1, (read_1) << 0u) + 1, (read_1 + 1) << 0u))) == _GLF_IDENTITY(read_2, (_GLF_IDENTITY(read_2, clamp(read_2, _GLF_IDENTITY(read_2, max(read_2, read_2)), read_2))) - (0u << _GLF_IDENTITY(_GLF_IDENTITY(uint(8u), uint(8u)), ~ (~ (_GLF_IDENTITY(uint(8u), uint(8u)))))))), (uint(_GLF_IDENTITY(read_1 + 1, (read_1 + 1) | (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1, (read_1 + 1) << _GLF_IDENTITY(0u, min(_GLF_IDENTITY(0u, (0u) | 0u), 0u))), min(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1, (_GLF_IDENTITY(read_1 + 1, (false ? _GLF_FUZZED(subgroup_size) : read_1 + 1))) + 0u), (read_1 + 1) << 0u), (_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1, (read_1 + _GLF_IDENTITY(1, int(ivec4(_GLF_IDENTITY(1, (1) << int(_GLF_ZERO(0.0, injectionSwitch.x))), 0, 1, (0 >> _GLF_IDENTITY(int(3), int(3))))))) << 0u), 0u + (_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1, (read_1 + _GLF_IDENTITY(1, int(ivec4(_GLF_IDENTITY(1, (1) << int(_GLF_ZERO(0.0, injectionSwitch.x))), 0, 1, (0 >> _GLF_IDENTITY(int(3), int(3))))))) << 0u), ~ (~ (_GLF_IDENTITY(read_1 + 1, (read_1 + _GLF_IDENTITY(1, int(ivec4(_GLF_IDENTITY(1, (1) << int(_GLF_ZERO(0.0, injectionSwitch.x))), 0, 1, (0 >> _GLF_IDENTITY(int(3), int(3))))))) << 0u))))))) ^ 0u), _GLF_IDENTITY(read_1 + _GLF_IDENTITY(1, (false ? _GLF_FUZZED(-98957) : _GLF_IDENTITY(1, min(1, 1)))), (read_1 + 1) << 0u))), (_GLF_IDENTITY(read_1 + 1, (read_1 + 1) << 0u)) / 1u))) == read_2)) << 0u) + _GLF_IDENTITY(1, (1) ^ 0), (true ? _GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(read_1 + 1, (read_1 + 1) | (_GLF_IDENTITY(read_1 + 1, _GLF_IDENTITY((read_1 + 1) << 0u, ((read_1 + 1) << 0u) - 0u)))) == _GLF_IDENTITY(read_2, (read_2) - (0u << _GLF_IDENTITY(uint(8u), uint(8u))))), (uint(_GLF_IDENTITY(read_1 + 1, (read_1 + 1) | (_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1, _GLF_IDENTITY((read_1 + _GLF_IDENTITY(1, (1) / _GLF_IDENTITY(1, (1) | 0))) << 0u, (true ? _GLF_IDENTITY((read_1 + 1) << 0u, ~ (~ (_GLF_IDENTITY((read_1 + 1) << 0u, uint(uvec2((read_1 + 1) << 0u, 0u)))))) : _GLF_FUZZED(read_2)))), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(read_1, uint(uvec2(_GLF_IDENTITY(read_1, (read_1) << 0u), _GLF_IDENTITY((0u >> _GLF_IDENTITY(uint(1u), uint(1u))), (false ? _GLF_FUZZED(read_1) : (0u >> _GLF_IDENTITY(uint(1u), uint(1u)))))))) + 1, (read_1 + 1) << 0u)), max((_GLF_IDENTITY(_GLF_IDENTITY(read_1, uint(uvec2(_GLF_IDENTITY(read_1, (read_1) << 0u), _GLF_IDENTITY((0u >> _GLF_IDENTITY(_GLF_IDENTITY(uint(1u), (_GLF_IDENTITY(uint(1u), (uint(1u)) >> 0u)) / 1u), uint(1u))), (false ? _GLF_FUZZED(read_1) : (0u >> _GLF_IDENTITY(uint(1u), uint(1u)))))))) + 1, (read_1 + 1) << 0u)), (_GLF_IDENTITY(_GLF_IDENTITY(read_1, uint(uvec2(_GLF_IDENTITY(read_1, (read_1) << 0u), _GLF_IDENTITY((0u >> _GLF_IDENTITY(uint(1u), uint(1u))), (false ? _GLF_FUZZED(read_1) : (0u >> _GLF_IDENTITY(uint(1u), uint(1u)))))))) + 1, (read_1 + 1) << 0u)))) / _GLF_IDENTITY(1u, (true ? 1u : _GLF_FUZZED(min(workgroup_id, subgroup_id))))))) == read_2)) << 0u) + 1, (_GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(read_1 + 1, _GLF_IDENTITY((read_1 + 1), ((read_1 + 1)) | (_GLF_IDENTITY((read_1 + 1), (true ? (read_1 + 1) : _GLF_FUZZED(subgroup_id))))) | (_GLF_IDENTITY(read_1 + 1, (read_1 + 1) << 0u))) == _GLF_IDENTITY(read_2, (read_2) - (0u << _GLF_IDENTITY(uint(8u), uint(8u))))), _GLF_IDENTITY((uint(_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1, (read_1 + 1) | (_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1, (read_1 + 1) << 0u), (_GLF_IDENTITY(read_1 + 1, _GLF_IDENTITY((read_1 + 1) << 0u, ~ (_GLF_IDENTITY(~ ((read_1 + 1) << 0u), ~ (~ (~ ((read_1 + 1) << 0u)))))))) / 1u))) == read_2, _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1, (read_1 + 1) | (_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1, (read_1 + 1) << 0u), (_GLF_IDENTITY(read_1 + 1, (read_1 + 1) << 0u)) / 1u))) == read_2, ! (! (_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1, (read_1 + 1) | (_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1, (read_1 + 1) << 0u), (_GLF_IDENTITY(read_1 + 1, (read_1 + 1) << 0u)) / 1u))) == read_2, false || (_GLF_IDENTITY(read_1 + 1, (read_1 + 1) | (_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1, (read_1 + 1) << 0u), (_GLF_IDENTITY(read_1 + 1, (read_1 + 1) << 0u)) / 1u))) == read_2))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(_GLF_IDENTITY(true, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(true, (true) && true), false, false), bvec3(bvec3(bvec3(_GLF_IDENTITY(true, (true) && true), false, false))))), (bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(true, (true) && true), false, false), bvec3(bvec3(bvec3(_GLF_IDENTITY(true, (true) && true), false, false)))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), (injectionSwitch.x < injectionSwitch.y)))), ! (! (bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1, (_GLF_IDENTITY(read_1, (_GLF_IDENTITY(read_1, (read_1) - 0u)) >> 0u) + 1) | _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1, (read_1 + 1) << 0u), (_GLF_IDENTITY(read_1 + _GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(30153))), (read_1 + 1) << 0u)) / 1u)), ((_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1, (read_1 + 1) << 0u), (_GLF_IDENTITY(read_1 + _GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(30153))), (read_1 + 1) << 0u)) / 1u))) | 0u)) == read_2, ! (! (_GLF_IDENTITY(read_1 + 1, (read_1 + 1) | (_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1, (read_1 + 1) << 0u), (_GLF_IDENTITY(read_1 + 1, (read_1 + 1) << 0u)) / 1u))) == read_2))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))))) << 0u, 0u | ((uint(_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1, (read_1 + 1) | (_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1, (read_1 + 1) << 0u), (_GLF_IDENTITY(_GLF_IDENTITY(read_1, (read_1) | (_GLF_IDENTITY(read_1, uint(uint(read_1))))) + 1, (read_1 + 1) << 0u)) / 1u))) == read_2, _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1, (read_1 + 1) | (_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1, (read_1 + 1) << 0u), _GLF_IDENTITY((_GLF_IDENTITY(read_1 + _GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) | 0)) | int(_GLF_ZERO(0.0, injectionSwitch.x))), _GLF_IDENTITY((read_1 + 1) << 0u, ((read_1 + 1) << 0u) | 0u))) / 1u, ~ (~ ((_GLF_IDENTITY(read_1 + 1, _GLF_IDENTITY((read_1 + 1) << 0u, ((read_1 + 1) << 0u) | 0u))) / 1u)))))) == read_2, ! (! (_GLF_IDENTITY(read_1 + 1, (read_1 + 1) | (_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1, (read_1 + 1) << 0u), (_GLF_IDENTITY(read_1 + 1, (read_1 + 1) << 0u)) / 1u))) == read_2))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), ! (! _GLF_IDENTITY((bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1, (read_1 + 1) | (_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1, (read_1 + 1) << 0u), (_GLF_IDENTITY(read_1 + 1, (read_1 + 1) << 0u)) / 1u))) == read_2, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(read_1 + 1, (_GLF_IDENTITY(read_1 + 1, 0u | (_GLF_IDENTITY(read_1 + 1, clamp(read_1 + 1, read_1 + 1, read_1 + 1))))) | (_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1, (read_1 + 1) << 0u), (_GLF_IDENTITY(read_1 + 1, (read_1 + 1) << 0u)) / 1u))) == read_2), bool(bvec4(! (_GLF_IDENTITY(read_1 + 1, (read_1 + 1) | (_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1, (read_1 + 1) << 0u), (_GLF_IDENTITY(_GLF_IDENTITY(read_1, 0u | (read_1)) + 1, (read_1 + 1) << 0u)) / 1u))) == read_2), true, true, false))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1, (read_1 + 1) | (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1, (read_1 + 1) ^ 0u), (read_1 + 1) << 0u), (_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1, 1u * (read_1 + 1)), (read_1 + 1) << 0u)) / 1u))) == read_2, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(read_1 + 1, (read_1 + 1) | (_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1, (read_1 + 1) << 0u), (_GLF_IDENTITY(read_1 + 1, (read_1 + 1) << 0u)) / 1u))) == read_2), bool(bvec4(! (_GLF_IDENTITY(read_1 + 1, (read_1 + 1) | (_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1, (read_1 + 1) << 0u), (_GLF_IDENTITY(read_1 + 1, (read_1 + 1) << 0u)) / 1u))) == read_2), true, true, false))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), ((bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1, (read_1 + 1) | (_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1, (_GLF_IDENTITY(read_1, clamp(read_1, _GLF_IDENTITY(read_1, clamp(read_1, _GLF_IDENTITY(read_1, min(read_1, read_1)), read_1)), read_1)) + 1) << 0u), (_GLF_IDENTITY(read_1 + 1, (read_1 + 1) << 0u)) / 1u))) == read_2, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(read_1 + 1, (read_1 + 1) | (_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1, (read_1 + 1) << 0u), (_GLF_IDENTITY(read_1 + 1, (read_1 + 1) << 0u)) / 1u))) == read_2), bool(bvec4(! (_GLF_IDENTITY(read_1 + _GLF_IDENTITY(1, (1) << 0), (read_1 + 1) | (_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1, _GLF_IDENTITY((read_1 + 1) << 0u, (_GLF_IDENTITY((read_1 + 1) << 0u, ((read_1 + 1) << 0u) >> 0u)) | ((read_1 + 1) << 0u))), (_GLF_IDENTITY(read_1 + 1, (read_1 + 1) << 0u)) / 1u))) == read_2), true, true, false))))), _GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))), true, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bool(bvec3(bool(bvec4(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))), true, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false, false))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))) || false)), true && (! (_GLF_IDENTITY((bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1, uint(uvec2(read_1 + 1, 0u))), (read_1 + 1) | (_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1, (read_1 + 1) << 0u), (_GLF_IDENTITY(read_1 + 1, (read_1 + 1) << 0u)) / 1u))) == read_2, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(read_1 + 1, (read_1 + 1) | (_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1, (read_1 + 1) << 0u), (_GLF_IDENTITY(read_1 + 1, (read_1 + 1) << 0u)) / _GLF_IDENTITY(1u, (1u) / ((1u << _GLF_IDENTITY(uint(3u), uint(3u))) >> _GLF_IDENTITY(uint(3u), uint(3u))))))) == read_2), bool(bvec4(! (_GLF_IDENTITY(read_1 + 1, (read_1 + 1) | (_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1, (_GLF_IDENTITY(read_1, min(read_1, read_1)) + 1) << 0u), (_GLF_IDENTITY(read_1 + 1, (read_1 + 1) << _GLF_IDENTITY(0u, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(workgroup_size) : 0u)))) / 1u))) == read_2), true, true, false))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), ((bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1, (read_1 + 1) | (_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1, (read_1 + 1) << 0u), (_GLF_IDENTITY(read_1 + 1, (read_1 + 1) << 0u)) / 1u))) == read_2, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(read_1 + 1, (read_1 + 1) | (_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1, (read_1 + 1) << 0u), (_GLF_IDENTITY(read_1 + 1, (read_1 + 1) << 0u)) / 1u))) == read_2), bool(bvec4(! (_GLF_IDENTITY(read_1 + 1, (read_1 + 1) | (_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1, (read_1 + 1) << 0u), (_GLF_IDENTITY(read_1 + 1, (_GLF_IDENTITY(read_1, min(_GLF_IDENTITY(read_1, max(read_1, read_1)), read_1)) + 1) << 0u)) / 1u))) == read_2), true, true, false))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))) || false))))))))))) << 0u))), (_GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(read_1 + 1, _GLF_IDENTITY((read_1 + 1), ((read_1 + 1)) | (_GLF_IDENTITY((read_1 + 1), (true ? (read_1 + 1) : _GLF_FUZZED(subgroup_id))))) | (_GLF_IDENTITY(read_1 + 1, (read_1 + 1) << 0u))) == _GLF_IDENTITY(read_2, (read_2) - (0u << _GLF_IDENTITY(uint(8u), uint(8u))))), _GLF_IDENTITY((uint(_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1, (read_1 + 1) | (_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1, (read_1 + 1) << 0u), (_GLF_IDENTITY(read_1 + 1, _GLF_IDENTITY((read_1 + 1) << 0u, ~ (_GLF_IDENTITY(~ ((read_1 + 1) << 0u), ~ (~ (~ ((read_1 + 1) << 0u)))))))) / 1u))) == read_2, _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1, (read_1 + 1) | (_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1, (read_1 + 1) << 0u), (_GLF_IDENTITY(read_1 + 1, (read_1 + 1) << 0u)) / 1u))) == read_2, ! (! (_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1, (read_1 + 1) | (_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1, (read_1 + 1) << 0u), (_GLF_IDENTITY(read_1 + 1, (read_1 + 1) << 0u)) / 1u))) == read_2, false || (_GLF_IDENTITY(read_1 + 1, (read_1 + 1) | (_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1, (read_1 + 1) << 0u), (_GLF_IDENTITY(read_1 + 1, (read_1 + 1) << 0u)) / 1u))) == read_2))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(_GLF_IDENTITY(true, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(true, (true) && true), false, false), bvec3(bvec3(bvec3(_GLF_IDENTITY(true, (true) && true), false, false))))), (bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(true, (true) && true), false, false), bvec3(bvec3(bvec3(_GLF_IDENTITY(true, (true) && true), false, false)))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), (injectionSwitch.x < injectionSwitch.y)))), ! (! (bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1, (_GLF_IDENTITY(read_1, (_GLF_IDENTITY(read_1, (read_1) - 0u)) >> 0u) + 1) | _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1, (read_1 + 1) << 0u), (_GLF_IDENTITY(read_1 + _GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(30153))), (read_1 + 1) << 0u)) / 1u)), ((_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1, (read_1 + 1) << 0u), (_GLF_IDENTITY(read_1 + _GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(30153))), (read_1 + 1) << 0u)) / 1u))) | 0u)) == read_2, ! (! (_GLF_IDENTITY(read_1 + 1, (read_1 + 1) | (_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1, (read_1 + 1) << 0u), (_GLF_IDENTITY(read_1 + 1, (read_1 + 1) << 0u)) / 1u))) == read_2))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))))) << 0u, 0u | ((uint(_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1, (read_1 + 1) | (_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1, (read_1 + 1) << 0u), (_GLF_IDENTITY(_GLF_IDENTITY(read_1, (read_1) | (_GLF_IDENTITY(read_1, uint(uint(read_1))))) + 1, (read_1 + 1) << 0u)) / 1u))) == read_2, _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1, (read_1 + 1) | (_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1, (read_1 + 1) << 0u), _GLF_IDENTITY((_GLF_IDENTITY(read_1 + _GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) | 0)) | int(_GLF_ZERO(0.0, injectionSwitch.x))), _GLF_IDENTITY((read_1 + 1) << 0u, ((read_1 + 1) << 0u) | 0u))) / 1u, ~ (~ ((_GLF_IDENTITY(read_1 + 1, _GLF_IDENTITY((read_1 + 1) << 0u, ((read_1 + 1) << 0u) | 0u))) / 1u)))))) == read_2, ! (! (_GLF_IDENTITY(read_1 + 1, (read_1 + 1) | (_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1, (read_1 + 1) << 0u), (_GLF_IDENTITY(read_1 + 1, (read_1 + 1) << 0u)) / 1u))) == read_2))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), ! (! _GLF_IDENTITY((bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1, (read_1 + 1) | (_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1, (read_1 + 1) << 0u), (_GLF_IDENTITY(read_1 + 1, (read_1 + 1) << 0u)) / 1u))) == read_2, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(read_1 + 1, (_GLF_IDENTITY(read_1 + 1, 0u | (_GLF_IDENTITY(read_1 + 1, clamp(read_1 + 1, read_1 + 1, read_1 + 1))))) | (_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1, (read_1 + 1) << 0u), (_GLF_IDENTITY(read_1 + 1, (read_1 + 1) << 0u)) / 1u))) == read_2), bool(bvec4(! (_GLF_IDENTITY(read_1 + 1, (read_1 + 1) | (_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1, (read_1 + 1) << 0u), (_GLF_IDENTITY(_GLF_IDENTITY(read_1, 0u | (read_1)) + 1, (read_1 + 1) << 0u)) / 1u))) == read_2), true, true, false))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1, (read_1 + 1) | (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1, (read_1 + 1) ^ 0u), (read_1 + 1) << 0u), (_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1, 1u * (read_1 + 1)), (read_1 + 1) << 0u)) / 1u))) == read_2, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(read_1 + 1, (read_1 + 1) | (_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1, (read_1 + 1) << 0u), (_GLF_IDENTITY(read_1 + 1, (read_1 + 1) << 0u)) / 1u))) == read_2), bool(bvec4(! (_GLF_IDENTITY(read_1 + 1, (read_1 + 1) | (_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1, (read_1 + 1) << 0u), (_GLF_IDENTITY(read_1 + 1, (read_1 + 1) << 0u)) / 1u))) == read_2), true, true, false))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), ((bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1, (read_1 + 1) | (_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1, (_GLF_IDENTITY(read_1, clamp(read_1, _GLF_IDENTITY(read_1, clamp(read_1, _GLF_IDENTITY(read_1, min(read_1, read_1)), read_1)), read_1)) + 1) << 0u), (_GLF_IDENTITY(read_1 + 1, (read_1 + 1) << 0u)) / 1u))) == read_2, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(read_1 + 1, (read_1 + 1) | (_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1, (read_1 + 1) << 0u), (_GLF_IDENTITY(read_1 + 1, (read_1 + 1) << 0u)) / 1u))) == read_2), bool(bvec4(! (_GLF_IDENTITY(read_1 + _GLF_IDENTITY(1, (1) << 0), (read_1 + 1) | (_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1, _GLF_IDENTITY((read_1 + 1) << 0u, (_GLF_IDENTITY((read_1 + 1) << 0u, ((read_1 + 1) << 0u) >> 0u)) | ((read_1 + 1) << 0u))), (_GLF_IDENTITY(read_1 + 1, (read_1 + 1) << 0u)) / 1u))) == read_2), true, true, false))))), _GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))), true, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bool(bvec3(bool(bvec4(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))), true, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false, false))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))) || false)), true && (! (_GLF_IDENTITY((bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1, uint(uvec2(read_1 + 1, 0u))), (read_1 + 1) | (_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1, (read_1 + 1) << 0u), (_GLF_IDENTITY(read_1 + 1, (read_1 + 1) << 0u)) / 1u))) == read_2, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(read_1 + 1, (read_1 + 1) | (_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1, (read_1 + 1) << 0u), (_GLF_IDENTITY(read_1 + 1, (read_1 + 1) << 0u)) / _GLF_IDENTITY(1u, (1u) / ((1u << _GLF_IDENTITY(uint(3u), uint(3u))) >> _GLF_IDENTITY(uint(3u), uint(3u))))))) == read_2), bool(bvec4(! (_GLF_IDENTITY(read_1 + 1, (read_1 + 1) | (_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1, (_GLF_IDENTITY(read_1, min(read_1, read_1)) + 1) << 0u), (_GLF_IDENTITY(read_1 + 1, (read_1 + 1) << _GLF_IDENTITY(0u, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(workgroup_size) : 0u)))) / 1u))) == read_2), true, true, false))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), ((bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1, (read_1 + 1) | (_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1, (read_1 + 1) << 0u), (_GLF_IDENTITY(read_1 + 1, (read_1 + 1) << 0u)) / 1u))) == read_2, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(read_1 + 1, (read_1 + 1) | (_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1, (read_1 + 1) << 0u), (_GLF_IDENTITY(read_1 + 1, (read_1 + 1) << 0u)) / 1u))) == read_2), bool(bvec4(! (_GLF_IDENTITY(read_1 + 1, (read_1 + 1) | (_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1, (read_1 + 1) << 0u), (_GLF_IDENTITY(read_1 + 1, (_GLF_IDENTITY(read_1, min(_GLF_IDENTITY(read_1, max(read_1, read_1)), read_1)) + 1) << 0u)) / 1u))) == read_2), true, true, false))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))) || false))))))))))) << 0u))), uint(uint(_GLF_IDENTITY(uint(_GLF_IDENTITY(read_1 + 1, _GLF_IDENTITY((read_1 + 1), ((read_1 + 1)) | (_GLF_IDENTITY((read_1 + 1), (true ? (read_1 + 1) : _GLF_FUZZED(subgroup_id))))) | (_GLF_IDENTITY(read_1 + 1, (read_1 + 1) << 0u))) == _GLF_IDENTITY(read_2, (read_2) - (0u << _GLF_IDENTITY(uint(8u), uint(8u))))), _GLF_IDENTITY((uint(_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1, (read_1 + 1) | (_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1, (read_1 + 1) << 0u), (_GLF_IDENTITY(read_1 + 1, _GLF_IDENTITY((read_1 + 1) << 0u, ~ (_GLF_IDENTITY(~ ((read_1 + 1) << 0u), ~ (~ (~ ((read_1 + 1) << 0u)))))))) / 1u))) == read_2, _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1, (read_1 + 1) | (_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1, (read_1 + 1) << 0u), (_GLF_IDENTITY(read_1 + 1, (read_1 + 1) << 0u)) / 1u))) == read_2, ! (! (_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1, (read_1 + 1) | (_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1, (read_1 + 1) << 0u), (_GLF_IDENTITY(read_1 + 1, (read_1 + 1) << 0u)) / 1u))) == read_2, false || (_GLF_IDENTITY(read_1 + 1, (read_1 + 1) | (_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1, (read_1 + 1) << 0u), (_GLF_IDENTITY(read_1 + 1, (read_1 + 1) << 0u)) / 1u))) == read_2))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(_GLF_IDENTITY(true, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(true, (true) && true), false, false), bvec3(bvec3(bvec3(_GLF_IDENTITY(true, (true) && true), false, false))))), (bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(true, (true) && true), false, false), bvec3(bvec3(bvec3(_GLF_IDENTITY(true, (true) && true), false, false)))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), (injectionSwitch.x < injectionSwitch.y)))), ! (! (bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1, (_GLF_IDENTITY(read_1, (_GLF_IDENTITY(read_1, (read_1) - 0u)) >> 0u) + 1) | _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1, (read_1 + 1) << 0u), (_GLF_IDENTITY(read_1 + _GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(30153))), (read_1 + 1) << 0u)) / 1u)), ((_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1, (read_1 + 1) << 0u), (_GLF_IDENTITY(read_1 + _GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(30153))), (read_1 + 1) << 0u)) / 1u))) | 0u)) == read_2, ! (! (_GLF_IDENTITY(read_1 + 1, (read_1 + 1) | (_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1, (read_1 + 1) << 0u), (_GLF_IDENTITY(read_1 + 1, (read_1 + 1) << 0u)) / 1u))) == read_2))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))))) << 0u, 0u | ((uint(_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1, (read_1 + 1) | (_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1, (read_1 + 1) << 0u), (_GLF_IDENTITY(_GLF_IDENTITY(read_1, (read_1) | (_GLF_IDENTITY(read_1, uint(uint(read_1))))) + 1, (read_1 + 1) << 0u)) / 1u))) == read_2, _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1, (read_1 + 1) | (_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1, (read_1 + 1) << 0u), _GLF_IDENTITY((_GLF_IDENTITY(read_1 + _GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) | 0)) | int(_GLF_ZERO(0.0, injectionSwitch.x))), _GLF_IDENTITY((read_1 + 1) << 0u, ((read_1 + 1) << 0u) | 0u))) / 1u, ~ (~ ((_GLF_IDENTITY(read_1 + 1, _GLF_IDENTITY((read_1 + 1) << 0u, ((read_1 + 1) << 0u) | 0u))) / 1u)))))) == read_2, ! (! (_GLF_IDENTITY(read_1 + 1, (read_1 + 1) | (_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1, (read_1 + 1) << 0u), (_GLF_IDENTITY(read_1 + 1, (read_1 + 1) << 0u)) / 1u))) == read_2))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), ! (! _GLF_IDENTITY((bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1, (read_1 + 1) | (_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1, (read_1 + 1) << 0u), (_GLF_IDENTITY(read_1 + 1, (read_1 + 1) << 0u)) / 1u))) == read_2, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(read_1 + 1, (_GLF_IDENTITY(read_1 + 1, 0u | (_GLF_IDENTITY(read_1 + 1, clamp(read_1 + 1, read_1 + 1, read_1 + 1))))) | (_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1, (read_1 + 1) << 0u), (_GLF_IDENTITY(read_1 + 1, (read_1 + 1) << 0u)) / 1u))) == read_2), bool(bvec4(! (_GLF_IDENTITY(read_1 + 1, (read_1 + 1) | (_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1, (read_1 + 1) << 0u), (_GLF_IDENTITY(_GLF_IDENTITY(read_1, 0u | (read_1)) + 1, (read_1 + 1) << 0u)) / 1u))) == read_2), true, true, false))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1, (read_1 + 1) | (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1, (read_1 + 1) ^ 0u), (read_1 + 1) << 0u), (_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1, 1u * (read_1 + 1)), (read_1 + 1) << 0u)) / 1u))) == read_2, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(read_1 + 1, (read_1 + 1) | (_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1, (read_1 + 1) << 0u), (_GLF_IDENTITY(read_1 + 1, (read_1 + 1) << 0u)) / 1u))) == read_2), bool(bvec4(! (_GLF_IDENTITY(read_1 + 1, (read_1 + 1) | (_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1, (read_1 + 1) << 0u), (_GLF_IDENTITY(read_1 + 1, (read_1 + 1) << 0u)) / 1u))) == read_2), true, true, false))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), ((bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1, (read_1 + 1) | (_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1, (_GLF_IDENTITY(read_1, clamp(read_1, _GLF_IDENTITY(read_1, clamp(read_1, _GLF_IDENTITY(read_1, min(read_1, read_1)), read_1)), read_1)) + 1) << 0u), (_GLF_IDENTITY(read_1 + 1, (read_1 + 1) << 0u)) / 1u))) == read_2, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(read_1 + 1, (read_1 + 1) | (_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1, (read_1 + 1) << 0u), (_GLF_IDENTITY(read_1 + 1, (read_1 + 1) << 0u)) / 1u))) == read_2), bool(bvec4(! (_GLF_IDENTITY(read_1 + _GLF_IDENTITY(1, (1) << 0), (read_1 + 1) | (_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1, _GLF_IDENTITY((read_1 + 1) << 0u, (_GLF_IDENTITY((read_1 + 1) << 0u, ((read_1 + 1) << 0u) >> 0u)) | ((read_1 + 1) << 0u))), (_GLF_IDENTITY(read_1 + 1, (read_1 + 1) << 0u)) / 1u))) == read_2), true, true, false))))), _GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))), true, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bool(bvec3(bool(bvec4(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))), true, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false, false))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))) || false)), true && (! (_GLF_IDENTITY((bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1, uint(uvec2(read_1 + 1, 0u))), (read_1 + 1) | (_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1, (read_1 + 1) << 0u), (_GLF_IDENTITY(read_1 + 1, (read_1 + 1) << 0u)) / 1u))) == read_2, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(read_1 + 1, (read_1 + 1) | (_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1, (read_1 + 1) << 0u), (_GLF_IDENTITY(read_1 + 1, (read_1 + 1) << 0u)) / _GLF_IDENTITY(1u, (1u) / ((1u << _GLF_IDENTITY(uint(3u), uint(3u))) >> _GLF_IDENTITY(uint(3u), uint(3u))))))) == read_2), bool(bvec4(! (_GLF_IDENTITY(read_1 + 1, (read_1 + 1) | (_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1, (_GLF_IDENTITY(read_1, min(read_1, read_1)) + 1) << 0u), (_GLF_IDENTITY(read_1 + 1, (read_1 + 1) << _GLF_IDENTITY(0u, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(workgroup_size) : 0u)))) / 1u))) == read_2), true, true, false))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), ((bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1, (read_1 + 1) | (_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1, (read_1 + 1) << 0u), (_GLF_IDENTITY(read_1 + 1, (read_1 + 1) << 0u)) / 1u))) == read_2, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(read_1 + 1, (read_1 + 1) | (_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1, (read_1 + 1) << 0u), (_GLF_IDENTITY(read_1 + 1, (read_1 + 1) << 0u)) / 1u))) == read_2), bool(bvec4(! (_GLF_IDENTITY(read_1 + 1, (read_1 + 1) | (_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1, (read_1 + 1) << 0u), (_GLF_IDENTITY(read_1 + 1, (_GLF_IDENTITY(read_1, min(_GLF_IDENTITY(read_1, max(read_1, read_1)), read_1)) + 1) << 0u)) / 1u))) == read_2), true, true, false))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))) || false))))))))))) << 0u))))))) + 0u) + 1) | (_GLF_IDENTITY(uint(_GLF_IDENTITY(read_1 + 1, (read_1 + 1) | (_GLF_IDENTITY(read_1 + 1, (read_1 + 1) << 0u))) == _GLF_IDENTITY(read_2, (_GLF_IDENTITY(read_2, clamp(_GLF_IDENTITY(read_2, _GLF_IDENTITY((read_2), 0u | ((read_2))) | _GLF_IDENTITY((read_2), uint(_GLF_IDENTITY(uvec3((read_2), 0u, 0u), min(_GLF_IDENTITY(uvec3(_GLF_IDENTITY((read_2), ((read_2)) << 0u), 0u, 0u), (false ? _GLF_FUZZED(uvec3(170924u, 121639u, 162684u)) : uvec3((read_2), 0u, 0u))), _GLF_IDENTITY(uvec3((read_2), 0u, 0u), (uvec3((read_2), 0u, 0u)) | uvec3(0u, 0u, 0u))))))), read_2, read_2))) - _GLF_IDENTITY((0u << _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(uint(8u), uint(uvec4(uint(8u), 1u, 0u, 0u))), (_GLF_IDENTITY(uint(8u), uint(uvec4(uint(8u), 1u, 0u, 0u)))) >> 0u), uint(_GLF_IDENTITY(8u, uint(uvec4(_GLF_IDENTITY(8u, (8u) << 0u), 0u, (0u | 0u), (0u ^ 1u))))))), ((0u << _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(uint(8u), uint(uvec4(uint(8u), 1u, 0u, 0u))), (_GLF_IDENTITY(uint(8u), uint(uvec4(uint(8u), 1u, 0u, 0u)))) >> 0u), uint(_GLF_IDENTITY(8u, uint(uvec4(_GLF_IDENTITY(8u, (8u) << 0u), 0u, (0u | 0u), (0u ^ 1u)))))))) | (_GLF_IDENTITY((0u << _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(uint(8u), uint(uvec4(uint(8u), 1u, 0u, 0u))), (_GLF_IDENTITY(uint(8u), uint(uvec4(uint(8u), 1u, 0u, 0u)))) >> 0u), uint(_GLF_IDENTITY(8u, uint(uvec4(_GLF_IDENTITY(8u, (8u) << 0u), 0u, (0u | 0u), (0u ^ 1u))))))), uint(uvec3((0u << _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(uint(8u), uint(uvec4(uint(8u), 1u, 0u, 0u))), (_GLF_IDENTITY(uint(8u), uint(uvec4(uint(8u), 1u, 0u, 0u)))) >> 0u), uint(_GLF_IDENTITY(8u, uint(uvec4(_GLF_IDENTITY(8u, (8u) << 0u), 0u, (0u | 0u), (0u ^ 1u))))))), 1u, 1u))))))), (uint(_GLF_IDENTITY(read_1 + 1, (read_1 + 1) | (_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1, (read_1 + 1) << 0u), (_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1, (read_1 + 1) << 0u), (_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1, (read_1 + 1) << 0u), 0u ^ (_GLF_IDENTITY(read_1 + 1, (read_1 + 1) << 0u)))) | _GLF_IDENTITY((_GLF_IDENTITY(read_1 + 1, (read_1 + 1) << 0u)), 0u ^ (_GLF_IDENTITY((_GLF_IDENTITY(read_1 + 1, (read_1 + 1) << 0u)), (_GLF_IDENTITY((_GLF_IDENTITY(read_1 + 1, (read_1 + 1) << 0u)), (false ? _GLF_FUZZED(subgroup_local_id) : (_GLF_IDENTITY(read_1 + 1, (read_1 + 1) << 0u))))) | ((_GLF_IDENTITY(read_1 + 1, (read_1 + 1) << 0u)))))))) / 1u))) == read_2)) << 0u) + 1)) : _GLF_FUZZED(99380u))), 4, 64, 4);
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, false)), (bool(bvec2(false, false))) || false))), false))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        return;
       return;
      }
     return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(false))
      return;
    }
   return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
    return;
  }
}
