#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 uint subgroup_id = gl_SubgroupID;
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)), (_GLF_DEAD(false)) || false))
    return;
   barrier();
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(true, true && (true)) && (_GLF_DEAD(false))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(vec3(injectionSwitch, 1.0))).x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, false, true)), bool(bvec4(bool(bvec3(false, false, true)), true, false, true))))))
          return;
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            return;
           return;
          }
         if(_GLF_DEAD(false))
          return;
         return;
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))
        return;
      }
     return;
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), injectionSwitch)).x > injectionSwitch.y), ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + 0.0))) && _GLF_IDENTITY(true, true && (true))))))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, (false) && true)))))
      return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(_GLF_IDENTITY(6.3, (true ? 6.3 : _GLF_FUZZED(determinant(mat4(23.52, -3.0, 7.7, -85.37, 8035.4301, 0.9, 1.8, -1428.8666, -3381.4233, 6.8, 4.4, -5.6, 4.9, 96.21, 5.5, 1.9))))))), bool(false))) > injectionSwitch.y))))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), (false ? _GLF_FUZZED(injectionSwitch) : _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))).y))), ! (_GLF_IDENTITY(! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bool(bvec3(! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, false, false, true)))))
      barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        return;
       return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
      }
     barrier();
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true)) && true))
          return;
         barrier();
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       barrier();
       if(_GLF_DEAD(false))
        return;
      }
     if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), ! (! (bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, (false) && _GLF_TRUE(_GLF_IDENTITY(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (true)), (injectionSwitch.x < injectionSwitch.y)))), (bool(_GLF_IDENTITY(false, (false) && _GLF_TRUE(_GLF_IDENTITY(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (true)), (injectionSwitch.x < injectionSwitch.y))))) && true))))))))
        return;
       return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bool(injectionSwitch.x > injectionSwitch.y)))))))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
    }
   barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    return;
  }
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(false))
  return;
 uint num_workgroup = _GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, clamp(_GLF_IDENTITY(gl_NumWorkGroups, uvec3(_GLF_IDENTITY(uvec4(gl_NumWorkGroups, 0u), (false ? _GLF_FUZZED(uvec4(97040u, 128520u, 139065u, 105452u)) : uvec4(gl_NumWorkGroups, 0u))))), gl_NumWorkGroups, _GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) >> (uvec3(0u, 0u, 0u) | uvec3(0u, 0u, 0u))))).x, max(gl_NumWorkGroups.x, gl_NumWorkGroups.x));
 if(_GLF_DEAD(false))
  return;
 uint workgroup_size = gl_WorkGroupSize.x;
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, bool(bvec2(false, true)))))), _GLF_IDENTITY(bool(bvec4(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)), (bool(bvec4(_GLF_IDENTITY(false, (false) && true), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))) || false)))))))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_DEAD(false), false))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, false, false, true)), (bool(bvec4(false, false, false, true))) || false)), (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 uint workgroup_id = gl_WorkGroupID.x;
 uint workgroup_base = _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_size, min(workgroup_size, _GLF_IDENTITY(workgroup_size, (workgroup_size) / 1u))), max(_GLF_IDENTITY(workgroup_size, min(workgroup_size, _GLF_IDENTITY(workgroup_size, (workgroup_size) / 1u))), _GLF_IDENTITY(_GLF_IDENTITY(workgroup_size, min(workgroup_size, _GLF_IDENTITY(workgroup_size, (workgroup_size) / 1u))), max(_GLF_IDENTITY(workgroup_size, min(_GLF_IDENTITY(workgroup_size, (workgroup_size) - 0u), _GLF_IDENTITY(workgroup_size, _GLF_IDENTITY((workgroup_size) / 1u, (_GLF_IDENTITY((workgroup_size) / 1u, clamp(_GLF_IDENTITY((workgroup_size) / 1u, ((workgroup_size) / 1u) << 0u), (workgroup_size) / 1u, (workgroup_size) / 1u))) | ((workgroup_size) / 1u))))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_size, (workgroup_size) / 1u), min(workgroup_size, _GLF_IDENTITY(workgroup_size, (workgroup_size) / 1u))), (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_size, ~ (~ (workgroup_size))), min(workgroup_size, _GLF_IDENTITY(workgroup_size, (workgroup_size) / 1u)))) | (_GLF_IDENTITY(workgroup_size, min(workgroup_size, _GLF_IDENTITY(workgroup_size, (workgroup_size) / 1u))))))))) * workgroup_id, _GLF_IDENTITY(0u + (_GLF_IDENTITY(workgroup_size, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(workgroup_size, (workgroup_size) | 0u) : _GLF_FUZZED(workgroup_size))) * workgroup_id), (true ? 0u + _GLF_IDENTITY(_GLF_IDENTITY((workgroup_size * workgroup_id), 0u | (_GLF_IDENTITY((workgroup_size * workgroup_id), uint(uvec3(_GLF_IDENTITY((workgroup_size * workgroup_id), ~ (~ ((workgroup_size * workgroup_id)))), _GLF_IDENTITY(1u, (1u) | (1u)), 0u))))), 1u * (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((workgroup_size * workgroup_id), 0u | (_GLF_IDENTITY((workgroup_size * workgroup_id), uint(uvec3(_GLF_IDENTITY((workgroup_size * workgroup_id), ~ (~ ((workgroup_size * workgroup_id)))), _GLF_IDENTITY(1u, (1u) | (1u)), 0u))))), (_GLF_IDENTITY(_GLF_IDENTITY((workgroup_size * workgroup_id), 0u | (_GLF_IDENTITY((workgroup_size * workgroup_id), uint(uvec3(_GLF_IDENTITY((workgroup_size * workgroup_id), ~ (~ ((workgroup_size * workgroup_id)))), _GLF_IDENTITY(1u, (1u) | (1u)), 0u))))), (_GLF_IDENTITY((workgroup_size * workgroup_id), 0u | (_GLF_IDENTITY((workgroup_size * workgroup_id), uint(uvec3(_GLF_IDENTITY((workgroup_size * workgroup_id), ~ (~ ((workgroup_size * workgroup_id)))), _GLF_IDENTITY(1u, (1u) | (1u)), 0u)))))) << 0u)) >> (0u << _GLF_IDENTITY(uint(5u), _GLF_IDENTITY(uint(5u), uint(uvec2(uint(5u), 1u)))))), (_GLF_IDENTITY(_GLF_IDENTITY((workgroup_size * workgroup_id), 0u | (_GLF_IDENTITY((workgroup_size * workgroup_id), _GLF_IDENTITY(uint(uvec3(_GLF_IDENTITY(_GLF_IDENTITY((workgroup_size * workgroup_id), ~ (~ ((workgroup_size * workgroup_id)))), ~ (~ (_GLF_IDENTITY((workgroup_size * workgroup_id), ~ (~ ((workgroup_size * workgroup_id))))))), _GLF_IDENTITY(1u, (1u) | (1u)), 0u)), (_GLF_IDENTITY(uint(uvec3(_GLF_IDENTITY(_GLF_IDENTITY((workgroup_size * workgroup_id), ~ (~ ((workgroup_size * workgroup_id)))), ~ (~ (_GLF_IDENTITY((workgroup_size * workgroup_id), ~ (~ ((workgroup_size * workgroup_id))))))), _GLF_IDENTITY(1u, (1u) | (1u)), 0u)), max(uint(uvec3(_GLF_IDENTITY(_GLF_IDENTITY((workgroup_size * workgroup_id), ~ (~ ((workgroup_size * workgroup_id)))), ~ (~ (_GLF_IDENTITY((workgroup_size * workgroup_id), ~ (~ ((workgroup_size * workgroup_id))))))), _GLF_IDENTITY(1u, (1u) | (1u)), 0u)), uint(uvec3(_GLF_IDENTITY(_GLF_IDENTITY((workgroup_size * workgroup_id), ~ (~ ((workgroup_size * workgroup_id)))), ~ (~ (_GLF_IDENTITY((workgroup_size * workgroup_id), ~ (~ ((workgroup_size * workgroup_id))))))), _GLF_IDENTITY(1u, (1u) | (1u)), 0u))))) | 0u)))), clamp(_GLF_IDENTITY((workgroup_size * workgroup_id), 0u | (_GLF_IDENTITY((workgroup_size * workgroup_id), uint(uvec3(_GLF_IDENTITY((workgroup_size * workgroup_id), ~ (~ ((workgroup_size * workgroup_id)))), _GLF_IDENTITY(1u, (1u) | (1u)), 0u))))), _GLF_IDENTITY(_GLF_IDENTITY((workgroup_size * workgroup_id), (_GLF_IDENTITY((workgroup_size * workgroup_id), clamp((workgroup_size * workgroup_id), (workgroup_size * workgroup_id), _GLF_IDENTITY((workgroup_size * workgroup_id), ~ (~ ((workgroup_size * workgroup_id))))))) ^ (0u << _GLF_IDENTITY(uint(5u), uint(5u)))), 0u | (_GLF_IDENTITY((workgroup_size * workgroup_id), uint(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(_GLF_IDENTITY((workgroup_size * workgroup_id), ((workgroup_size * workgroup_id)) | ((workgroup_size * workgroup_id))), ~ (~ _GLF_IDENTITY(((workgroup_size * workgroup_id)), uint(_GLF_ZERO(0.0, injectionSwitch.x)) + (((workgroup_size * workgroup_id)))))), _GLF_IDENTITY(_GLF_IDENTITY(1u, ~ (~ (_GLF_IDENTITY(1u, (false ? _GLF_FUZZED(subgroup_size) : 1u))))), (1u) | (1u)), _GLF_IDENTITY(0u, ~ (~ (0u)))), (uvec3(_GLF_IDENTITY(_GLF_IDENTITY((workgroup_size * workgroup_id), ((workgroup_size * workgroup_id)) | ((workgroup_size * workgroup_id))), ~ (~ _GLF_IDENTITY(((workgroup_size * workgroup_id)), uint(_GLF_ZERO(0.0, injectionSwitch.x)) + (((workgroup_size * workgroup_id)))))), _GLF_IDENTITY(_GLF_IDENTITY(1u, ~ (~ (_GLF_IDENTITY(1u, (false ? _GLF_FUZZED(subgroup_size) : 1u))))), (1u) | (1u)), _GLF_IDENTITY(0u, ~ (~ (0u))))) | (_GLF_IDENTITY(uvec3(_GLF_IDENTITY(_GLF_IDENTITY((workgroup_size * workgroup_id), ((workgroup_size * workgroup_id)) | ((workgroup_size * workgroup_id))), ~ (~ _GLF_IDENTITY(((workgroup_size * workgroup_id)), uint(_GLF_ZERO(0.0, injectionSwitch.x)) + (((workgroup_size * workgroup_id)))))), _GLF_IDENTITY(_GLF_IDENTITY(1u, ~ (~ (_GLF_IDENTITY(1u, (false ? _GLF_FUZZED(subgroup_size) : 1u))))), (1u) | (1u)), _GLF_IDENTITY(0u, ~ (~ (0u)))), (false ? _GLF_FUZZED((uvec3(59489u, 44916u, 34656u) - uvec3(147771u, 114866u, 60896u))) : uvec3(_GLF_IDENTITY(_GLF_IDENTITY((workgroup_size * workgroup_id), ((workgroup_size * workgroup_id)) | ((workgroup_size * workgroup_id))), ~ (~ _GLF_IDENTITY(((workgroup_size * workgroup_id)), uint(_GLF_ZERO(0.0, injectionSwitch.x)) + (((workgroup_size * workgroup_id)))))), _GLF_IDENTITY(_GLF_IDENTITY(1u, ~ (~ (_GLF_IDENTITY(1u, (false ? _GLF_FUZZED(subgroup_size) : 1u))))), (1u) | (1u)), _GLF_IDENTITY(0u, ~ (~ (0u)))))))))))), _GLF_IDENTITY((workgroup_size * workgroup_id), 0u | (_GLF_IDENTITY((workgroup_size * workgroup_id), uint(uvec3(_GLF_IDENTITY((workgroup_size * workgroup_id), ~ (~ ((workgroup_size * workgroup_id)))), _GLF_IDENTITY(1u, (1u) | (1u)), 0u)))))))) >> 0u))) : _GLF_FUZZED(subgroup_local_id)))), 0u ^ (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_size, min(workgroup_size, _GLF_IDENTITY(workgroup_size, (workgroup_size) / 1u))), max(_GLF_IDENTITY(workgroup_size, min(workgroup_size, _GLF_IDENTITY(workgroup_size, (workgroup_size) / 1u))), _GLF_IDENTITY(_GLF_IDENTITY(workgroup_size, min(workgroup_size, _GLF_IDENTITY(workgroup_size, _GLF_IDENTITY((workgroup_size), ~ (~ ((workgroup_size)))) / 1u))), max(_GLF_IDENTITY(workgroup_size, min(_GLF_IDENTITY(workgroup_size, (workgroup_size) - 0u), _GLF_IDENTITY(workgroup_size, (workgroup_size) / 1u))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_size, (workgroup_size) / 1u), min(workgroup_size, _GLF_IDENTITY(workgroup_size, (workgroup_size) / 1u))), (_GLF_IDENTITY(workgroup_size, min(workgroup_size, _GLF_IDENTITY(workgroup_size, (workgroup_size) / 1u)))) | (_GLF_IDENTITY(workgroup_size, min(workgroup_size, _GLF_IDENTITY(workgroup_size, (workgroup_size) / 1u))))))))) * workgroup_id, _GLF_IDENTITY(0u + (_GLF_IDENTITY(workgroup_size, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(workgroup_size, (workgroup_size) | 0u) : _GLF_FUZZED(workgroup_size))) * workgroup_id), (true ? 0u + _GLF_IDENTITY(_GLF_IDENTITY((workgroup_size * workgroup_id), _GLF_IDENTITY(0u | (_GLF_IDENTITY((workgroup_size * workgroup_id), uint(uvec3(_GLF_IDENTITY((workgroup_size * workgroup_id), ~ (~ ((workgroup_size * workgroup_id)))), _GLF_IDENTITY(1u, (1u) | (1u)), 0u)))), ~ (_GLF_IDENTITY(~ (0u | (_GLF_IDENTITY((workgroup_size * workgroup_id), uint(uvec3(_GLF_IDENTITY((workgroup_size * workgroup_id), ~ (~ ((workgroup_size * workgroup_id)))), _GLF_IDENTITY(1u, (1u) | (1u)), 0u))))), 0u ^ (~ (0u | (_GLF_IDENTITY((workgroup_size * workgroup_id), uint(uvec3(_GLF_IDENTITY((workgroup_size * workgroup_id), ~ (~ ((workgroup_size * workgroup_id)))), _GLF_IDENTITY(1u, (1u) | (1u)), 0u)))))))))), _GLF_IDENTITY(1u * (_GLF_IDENTITY(_GLF_IDENTITY((workgroup_size * workgroup_id), 0u | (_GLF_IDENTITY((workgroup_size * workgroup_id), uint(uvec3(_GLF_IDENTITY((workgroup_size * workgroup_id), ~ (~ ((workgroup_size * workgroup_id)))), _GLF_IDENTITY(1u, (1u) | (1u)), 0u))))), (_GLF_IDENTITY(_GLF_IDENTITY((workgroup_size * workgroup_id), 0u | (_GLF_IDENTITY((workgroup_size * workgroup_id), uint(uvec3(_GLF_IDENTITY((workgroup_size * workgroup_id), ~ (~ ((workgroup_size * workgroup_id)))), _GLF_IDENTITY(1u, (1u) | (1u)), 0u))))), clamp(_GLF_IDENTITY((workgroup_size * workgroup_id), 0u | (_GLF_IDENTITY((workgroup_size * workgroup_id), uint(uvec3(_GLF_IDENTITY((workgroup_size * workgroup_id), ~ (~ ((workgroup_size * workgroup_id)))), _GLF_IDENTITY(1u, (1u) | (1u)), 0u))))), _GLF_IDENTITY((workgroup_size * workgroup_id), 0u | (_GLF_IDENTITY((workgroup_size * workgroup_id), uint(uvec3(_GLF_IDENTITY((workgroup_size * workgroup_id), ~ (~ ((workgroup_size * workgroup_id)))), _GLF_IDENTITY(1u, (1u) | (1u)), 0u))))), _GLF_IDENTITY((workgroup_size * workgroup_id), 0u | (_GLF_IDENTITY((workgroup_size * workgroup_id), uint(uvec3(_GLF_IDENTITY((workgroup_size * workgroup_id), ~ (~ ((workgroup_size * workgroup_id)))), _GLF_IDENTITY(1u, (1u) | (1u)), 0u)))))))) >> 0u)), (_GLF_IDENTITY(1u * (_GLF_IDENTITY(_GLF_IDENTITY((workgroup_size * workgroup_id), 0u | (_GLF_IDENTITY((workgroup_size * workgroup_id), uint(uvec3(_GLF_IDENTITY((workgroup_size * workgroup_id), ~ (~ ((workgroup_size * workgroup_id)))), _GLF_IDENTITY(1u, (1u) | (1u)), 0u))))), (_GLF_IDENTITY(_GLF_IDENTITY((workgroup_size * workgroup_id), 0u | (_GLF_IDENTITY((workgroup_size * workgroup_id), uint(uvec3(_GLF_IDENTITY((workgroup_size * workgroup_id), ~ (~ ((workgroup_size * workgroup_id)))), _GLF_IDENTITY(1u, (1u) | (1u)), 0u))))), clamp(_GLF_IDENTITY((workgroup_size * workgroup_id), 0u | (_GLF_IDENTITY((workgroup_size * workgroup_id), uint(uvec3(_GLF_IDENTITY((workgroup_size * workgroup_id), ~ (~ ((workgroup_size * workgroup_id)))), _GLF_IDENTITY(1u, (1u) | (1u)), 0u))))), _GLF_IDENTITY((workgroup_size * workgroup_id), 0u | (_GLF_IDENTITY((workgroup_size * workgroup_id), uint(uvec3(_GLF_IDENTITY((workgroup_size * workgroup_id), ~ (~ ((workgroup_size * workgroup_id)))), _GLF_IDENTITY(1u, (1u) | (1u)), 0u))))), _GLF_IDENTITY((workgroup_size * workgroup_id), 0u | (_GLF_IDENTITY((workgroup_size * workgroup_id), uint(uvec3(_GLF_IDENTITY((workgroup_size * workgroup_id), ~ (~ ((workgroup_size * workgroup_id)))), _GLF_IDENTITY(1u, (1u) | (1u)), 0u)))))))) >> 0u)), ~ (_GLF_IDENTITY(~ (1u * (_GLF_IDENTITY(_GLF_IDENTITY((workgroup_size * workgroup_id), 0u | (_GLF_IDENTITY((workgroup_size * workgroup_id), uint(uvec3(_GLF_IDENTITY((workgroup_size * workgroup_id), ~ (~ ((workgroup_size * workgroup_id)))), _GLF_IDENTITY(1u, (1u) | (1u)), 0u))))), (_GLF_IDENTITY(_GLF_IDENTITY((workgroup_size * workgroup_id), 0u | (_GLF_IDENTITY((workgroup_size * workgroup_id), uint(uvec3(_GLF_IDENTITY((workgroup_size * workgroup_id), ~ (~ ((workgroup_size * workgroup_id)))), _GLF_IDENTITY(1u, (1u) | (1u)), 0u))))), clamp(_GLF_IDENTITY((workgroup_size * workgroup_id), 0u | (_GLF_IDENTITY((workgroup_size * workgroup_id), uint(uvec3(_GLF_IDENTITY((workgroup_size * workgroup_id), ~ (~ ((workgroup_size * workgroup_id)))), _GLF_IDENTITY(1u, (1u) | (1u)), 0u))))), _GLF_IDENTITY((workgroup_size * workgroup_id), 0u | (_GLF_IDENTITY((workgroup_size * workgroup_id), uint(uvec3(_GLF_IDENTITY((workgroup_size * workgroup_id), ~ (~ ((workgroup_size * workgroup_id)))), _GLF_IDENTITY(1u, (1u) | (1u)), 0u))))), _GLF_IDENTITY((workgroup_size * workgroup_id), 0u | (_GLF_IDENTITY((workgroup_size * workgroup_id), uint(uvec3(_GLF_IDENTITY((workgroup_size * workgroup_id), ~ (~ ((workgroup_size * workgroup_id)))), _GLF_IDENTITY(1u, (1u) | (1u)), 0u)))))))) >> 0u))), (~ (1u * (_GLF_IDENTITY(_GLF_IDENTITY((workgroup_size * workgroup_id), 0u | (_GLF_IDENTITY((workgroup_size * workgroup_id), uint(uvec3(_GLF_IDENTITY((workgroup_size * workgroup_id), ~ (~ ((workgroup_size * workgroup_id)))), _GLF_IDENTITY(1u, (1u) | (1u)), 0u))))), (_GLF_IDENTITY(_GLF_IDENTITY((workgroup_size * workgroup_id), 0u | (_GLF_IDENTITY((workgroup_size * workgroup_id), uint(uvec3(_GLF_IDENTITY((workgroup_size * workgroup_id), ~ (~ ((workgroup_size * workgroup_id)))), _GLF_IDENTITY(1u, (1u) | (1u)), 0u))))), clamp(_GLF_IDENTITY((workgroup_size * workgroup_id), 0u | (_GLF_IDENTITY((workgroup_size * workgroup_id), uint(uvec3(_GLF_IDENTITY((workgroup_size * workgroup_id), ~ (~ ((workgroup_size * workgroup_id)))), _GLF_IDENTITY(1u, (1u) | (1u)), 0u))))), _GLF_IDENTITY((workgroup_size * workgroup_id), 0u | (_GLF_IDENTITY((workgroup_size * workgroup_id), uint(uvec3(_GLF_IDENTITY((workgroup_size * workgroup_id), ~ (~ ((workgroup_size * workgroup_id)))), _GLF_IDENTITY(1u, (1u) | (1u)), 0u))))), _GLF_IDENTITY((workgroup_size * workgroup_id), 0u | (_GLF_IDENTITY((workgroup_size * workgroup_id), uint(uvec3(_GLF_IDENTITY((workgroup_size * workgroup_id), ~ (~ ((workgroup_size * workgroup_id)))), _GLF_IDENTITY(1u, (1u) | (1u)), 0u)))))))) >> 0u)))) | (~ (1u * (_GLF_IDENTITY(_GLF_IDENTITY((workgroup_size * workgroup_id), 0u | (_GLF_IDENTITY((workgroup_size * workgroup_id), uint(uvec3(_GLF_IDENTITY((workgroup_size * workgroup_id), ~ (~ ((workgroup_size * workgroup_id)))), _GLF_IDENTITY(1u, (1u) | (1u)), 0u))))), (_GLF_IDENTITY(_GLF_IDENTITY((workgroup_size * workgroup_id), 0u | (_GLF_IDENTITY((workgroup_size * workgroup_id), uint(uvec3(_GLF_IDENTITY((workgroup_size * workgroup_id), ~ (~ ((workgroup_size * workgroup_id)))), _GLF_IDENTITY(1u, (1u) | (1u)), 0u))))), clamp(_GLF_IDENTITY((workgroup_size * workgroup_id), 0u | (_GLF_IDENTITY((workgroup_size * workgroup_id), uint(uvec3(_GLF_IDENTITY((workgroup_size * workgroup_id), ~ (~ ((workgroup_size * workgroup_id)))), _GLF_IDENTITY(1u, (1u) | (1u)), 0u))))), _GLF_IDENTITY((workgroup_size * workgroup_id), 0u | (_GLF_IDENTITY((workgroup_size * workgroup_id), uint(uvec3(_GLF_IDENTITY((workgroup_size * workgroup_id), ~ (~ ((workgroup_size * workgroup_id)))), _GLF_IDENTITY(1u, (1u) | (1u)), 0u))))), _GLF_IDENTITY((workgroup_size * workgroup_id), 0u | (_GLF_IDENTITY((workgroup_size * workgroup_id), uint(uvec3(_GLF_IDENTITY((workgroup_size * workgroup_id), ~ (~ ((workgroup_size * workgroup_id)))), _GLF_IDENTITY(1u, (1u) | (1u)), 0u)))))))) >> 0u)))))))) * uint(_GLF_ONE(1.0, injectionSwitch.y)))) : _GLF_FUZZED(subgroup_local_id))))));
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), _GLF_IDENTITY(_GLF_IDENTITY(true, bool(bvec4(true, false, true, false))), bool(_GLF_IDENTITY(bvec2(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bvec2(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec2(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), _GLF_IDENTITY(bvec2(bvec2(bvec2(true, _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))))))), bvec2(bvec4(_GLF_IDENTITY(bvec2(bvec2(bvec2(true, _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))))))), _GLF_IDENTITY(bvec2(_GLF_IDENTITY(bvec2(bvec2(bvec2(bvec2(true, _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)))))))), bvec2(bvec3(bvec2(bvec2(bvec2(bvec2(true, _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)))))))), false)))), bvec2(bvec3(bvec2(_GLF_IDENTITY(bvec2(bvec2(bvec2(bvec2(true, _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)))))))), bvec2(bvec3(bvec2(bvec2(bvec2(bvec2(true, _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)))))))), false)))), true)))), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), false), bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec2(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bvec2(bvec2(bvec2(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), false)))))))), true, true))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint virtual_gid = _GLF_IDENTITY(workgroup_base, _GLF_IDENTITY(0u | (_GLF_IDENTITY(workgroup_base, _GLF_IDENTITY((true ? workgroup_base : _GLF_FUZZED(workgroup_base)), (false ? _GLF_FUZZED((subgroup_size ^ usubBorrow(workgroup_id, subgroup_local_id, subgroup_id))) : (true ? workgroup_base : _GLF_FUZZED(workgroup_base)))))), ~ (_GLF_IDENTITY(~ (0u | (_GLF_IDENTITY(workgroup_base, _GLF_IDENTITY((true ? workgroup_base : _GLF_FUZZED(workgroup_base)), (false ? _GLF_FUZZED((subgroup_size ^ usubBorrow(workgroup_id, subgroup_local_id, subgroup_id))) : (true ? workgroup_base : _GLF_FUZZED(workgroup_base))))))), (~ (0u | (_GLF_IDENTITY(workgroup_base, _GLF_IDENTITY((true ? workgroup_base : _GLF_FUZZED(workgroup_base)), (false ? _GLF_FUZZED((subgroup_size ^ usubBorrow(workgroup_id, subgroup_local_id, subgroup_id))) : (true ? workgroup_base : _GLF_FUZZED(workgroup_base)))))))) ^ 0u)))) + subgroup_id * subgroup_size + _GLF_IDENTITY(subgroup_local_id, max(subgroup_local_id, _GLF_IDENTITY(subgroup_local_id, min(subgroup_local_id, subgroup_local_id))));
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED((_GLF_IDENTITY(-566.519 - 4.5, (true ? _GLF_IDENTITY(-566.519 - 4.5, _GLF_IDENTITY(clamp(-566.519 - 4.5, -566.519 - 4.5, _GLF_IDENTITY(-566.519 - 4.5, (false ? _GLF_FUZZED(-50.02) : -566.519 - 4.5))), (clamp(-566.519 - 4.5, -566.519 - 4.5, _GLF_IDENTITY(-566.519 - 4.5, (false ? _GLF_FUZZED(-50.02) : -566.519 - 4.5)))) / 1.0)) : _GLF_FUZZED(-1185.8706)))))), float(injectionSwitch.x), bool(true))) > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
      return;
     return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
    }
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(false))
    return;
  }
 uint next_virtual_gid = workgroup_base + subgroup_id * subgroup_size + (_GLF_IDENTITY((subgroup_local_id + _GLF_IDENTITY(1, max(_GLF_IDENTITY(1, int(ivec2(1, (1 ^ 1)))), 1))) % _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, clamp(_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec4(_GLF_IDENTITY(subgroup_size, min(subgroup_size, subgroup_size)), 0u, 1u, (0u | 0u)), (uvec4(_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(min(subgroup_size, subgroup_size), uint(_GLF_IDENTITY(uvec3(min(subgroup_size, subgroup_size), 0u, (0u | 0u)), max(uvec3(min(subgroup_size, subgroup_size), 0u, (0u | 0u)), uvec3(min(subgroup_size, subgroup_size), 0u, (0u | 0u))))))), 0u, 1u, (_GLF_IDENTITY(0u, _GLF_IDENTITY(uint(uint(0u)), (true ? _GLF_IDENTITY(uint(_GLF_IDENTITY(uint(0u), _GLF_IDENTITY(min(uint(0u), uint(0u)), (false ? _GLF_FUZZED(workgroup_size) : min(uint(0u), uint(0u)))))), (uint(_GLF_IDENTITY(uint(0u), ~ (~ (uint(0u)))))) ^ _GLF_IDENTITY(0u, max(0u, 0u))) : _GLF_FUZZED(subgroup_id)))) | 0u))) | (uvec4(_GLF_IDENTITY(subgroup_size, min(subgroup_size, subgroup_size)), 0u, 1u, (0u | 0u))))), ~ (_GLF_IDENTITY(~ (uint(_GLF_IDENTITY(uvec4(_GLF_IDENTITY(subgroup_size, min(subgroup_size, subgroup_size)), 0u, 1u, (0u | 0u)), (uvec4(_GLF_IDENTITY(subgroup_size, min(subgroup_size, subgroup_size)), 0u, 1u, (_GLF_IDENTITY(0u, _GLF_IDENTITY(uint(uint(0u)), (true ? _GLF_IDENTITY(uint(_GLF_IDENTITY(uint(0u), min(uint(_GLF_IDENTITY(0u, (0u) << 0u)), uint(0u)))), (uint(_GLF_IDENTITY(_GLF_IDENTITY(uint(0u), ~ (~ (uint(0u)))), uint(uvec4(_GLF_IDENTITY(uint(0u), ~ (~ (uint(0u)))), 0u, 1u, 1u))))) ^ 0u) : _GLF_FUZZED(subgroup_id)))) | _GLF_IDENTITY(0u, (0u >> _GLF_IDENTITY(uint(5u), uint(5u))) ^ (_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, min(0u, 0u))) * ((1u << _GLF_IDENTITY(uint(4u), uint(4u))) >> _GLF_IDENTITY(uint(4u), uint(4u))))))))) | (uvec4(_GLF_IDENTITY(subgroup_size, min(subgroup_size, subgroup_size)), 0u, 1u, _GLF_IDENTITY((0u | 0u), ((0u | 0u)) | ((0u | 0u)))))))), max(_GLF_IDENTITY(~ (uint(_GLF_IDENTITY(uvec4(_GLF_IDENTITY(subgroup_size, min(subgroup_size, subgroup_size)), 0u, 1u, (0u | 0u)), (uvec4(_GLF_IDENTITY(subgroup_size, min(subgroup_size, subgroup_size)), 0u, 1u, (_GLF_IDENTITY(0u, _GLF_IDENTITY(uint(uint(0u)), (_GLF_IDENTITY(true, false || (true)) ? _GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_IDENTITY(uint(0u), clamp(uint(0u), uint(0u), _GLF_IDENTITY(uint(0u), min(uint(0u), uint(0u))))), min(uint(0u), uint(0u)))), _GLF_IDENTITY((uint(_GLF_IDENTITY(uint(0u), ~ (~ (uint(0u)))))), min((uint(_GLF_IDENTITY(uint(0u), ~ (~ (uint(0u)))))), (uint(_GLF_IDENTITY(uint(0u), ~ (~ (uint(0u)))))))) ^ 0u) : _GLF_FUZZED(subgroup_id)))) | 0u))) | (uvec4(_GLF_IDENTITY(subgroup_size, min(subgroup_size, subgroup_size)), 0u, 1u, (0u | 0u)))))), uint(uint(~ (uint(_GLF_IDENTITY(uvec4(_GLF_IDENTITY(subgroup_size, min(subgroup_size, subgroup_size)), 0u, 1u, (0u | 0u)), (uvec4(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, 0u | (subgroup_size)), min(subgroup_size, subgroup_size)), 0u, 1u, (_GLF_IDENTITY(0u, _GLF_IDENTITY(uint(uint(0u)), (true ? _GLF_IDENTITY(uint(_GLF_IDENTITY(uint(0u), min(uint(0u), uint(0u)))), (uint(_GLF_IDENTITY(uint(0u), ~ (~ (uint(0u)))))) ^ 0u) : _GLF_FUZZED(subgroup_id)))) | 0u))) | (uvec4(_GLF_IDENTITY(subgroup_size, min(subgroup_size, subgroup_size)), 0u, 1u, (0u | 0u))))))))), ~ (uint(_GLF_IDENTITY(uvec4(_GLF_IDENTITY(subgroup_size, min(subgroup_size, subgroup_size)), 0u, 1u, (0u | 0u)), (uvec4(_GLF_IDENTITY(subgroup_size, min(subgroup_size, subgroup_size)), 0u, 1u, (_GLF_IDENTITY(0u, _GLF_IDENTITY(uint(uint(0u)), (_GLF_IDENTITY(true, false || (true)) ? _GLF_IDENTITY(uint(_GLF_IDENTITY(uint(0u), _GLF_IDENTITY(min(uint(0u), uint(0u)), (min(uint(0u), uint(0u))) ^ (0u << _GLF_IDENTITY(uint(7u), uint(7u)))))), (uint(_GLF_IDENTITY(uint(0u), ~ (~ (uint(0u)))))) ^ 0u) : _GLF_FUZZED(subgroup_id)))) | 0u))) | (uvec4(_GLF_IDENTITY(subgroup_size, min(subgroup_size, subgroup_size)), 0u, 1u, _GLF_IDENTITY((0u | 0u), (_GLF_IDENTITY((0u | 0u), ~ (~ ((0u | 0u))))) >> 0u))))))))))), _GLF_IDENTITY(subgroup_size, (subgroup_size) | (_GLF_IDENTITY(subgroup_size, 0u | (_GLF_IDENTITY(subgroup_size, min(subgroup_size, _GLF_IDENTITY(subgroup_size, (subgroup_size) | 0u))))))), subgroup_size)), 0u ^ (_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY((subgroup_size), ((subgroup_size)) << 0u) / 1u))), (_GLF_IDENTITY(subgroup_size, 0u ^ (_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(_GLF_IDENTITY((subgroup_size), ((subgroup_size)) << 0u) / _GLF_IDENTITY(1u, min(1u, 1u)), (_GLF_IDENTITY(_GLF_IDENTITY((subgroup_size), _GLF_IDENTITY(((subgroup_size)) << 0u, uint(_GLF_ZERO(0.0, injectionSwitch.x)) + (((subgroup_size)) << 0u))) / 1u, 0u ^ (_GLF_IDENTITY((subgroup_size), ((subgroup_size)) << 0u) / 1u))) | (_GLF_IDENTITY((subgroup_size), ((subgroup_size)) << 0u) / 1u)))))) << 0u), (true ? (subgroup_local_id + _GLF_IDENTITY(1, max(_GLF_IDENTITY(1, int(_GLF_IDENTITY(_GLF_IDENTITY(ivec2(1, (1 ^ 1)), (ivec2(0, 0) >> _GLF_IDENTITY(ivec2(5), _GLF_IDENTITY(ivec2(5), clamp(ivec2(5), ivec2(5), ivec2(5))))) | (ivec2(1, (1 ^ 1)))), clamp(_GLF_IDENTITY(ivec2(1, (1 ^ 1)), (ivec2(0, 0) >> _GLF_IDENTITY(ivec2(5), _GLF_IDENTITY(ivec2(5), clamp(ivec2(5), ivec2(5), ivec2(5))))) | (ivec2(1, (1 ^ 1)))), _GLF_IDENTITY(ivec2(1, (1 ^ 1)), (ivec2(0, 0) >> _GLF_IDENTITY(ivec2(5), _GLF_IDENTITY(ivec2(5), clamp(ivec2(5), ivec2(5), ivec2(5))))) | (ivec2(1, (1 ^ 1)))), _GLF_IDENTITY(ivec2(1, (1 ^ 1)), (ivec2(0, 0) >> _GLF_IDENTITY(ivec2(5), _GLF_IDENTITY(ivec2(5), clamp(ivec2(5), ivec2(5), ivec2(5))))) | (ivec2(1, (1 ^ 1)))))))), 1))) % _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, clamp(_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_IDENTITY(uvec4(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, uint(uint(subgroup_size))), min(subgroup_size, subgroup_size)), 0u, 1u, (0u | 0u)), (_GLF_IDENTITY(uvec4(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, uint(uint(subgroup_size))), min(subgroup_size, subgroup_size)), 0u, 1u, (0u | 0u)), (_GLF_IDENTITY(uvec4(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, uint(uint(subgroup_size))), min(subgroup_size, subgroup_size)), 0u, 1u, (0u | 0u)), (uvec4(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, uint(uint(subgroup_size))), min(subgroup_size, subgroup_size)), 0u, 1u, (0u | 0u))) - uvec4(0u, 0u, 0u, 0u))) | (uvec4(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, uint(uint(subgroup_size))), min(subgroup_size, subgroup_size)), 0u, 1u, (0u | 0u))))) / uvec4(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y))), (uvec4(_GLF_IDENTITY(subgroup_size, min(subgroup_size, subgroup_size)), 0u, 1u, (_GLF_IDENTITY(0u, _GLF_IDENTITY(uint(uint(0u)), (true ? _GLF_IDENTITY(uint(_GLF_IDENTITY(uint(_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, max(0u, 0u))) ^ 0u)), min(uint(0u), uint(0u)))), (uint(_GLF_IDENTITY(uint(0u), ~ (~ (_GLF_IDENTITY(uint(0u), 0u ^ (_GLF_IDENTITY(uint(0u), (uint(0u)) | (uint(0u)))))))))) ^ 0u) : _GLF_FUZZED(subgroup_id)))) | 0u))) | (uvec4(_GLF_IDENTITY(subgroup_size, min(subgroup_size, subgroup_size)), 0u, 1u, (0u | 0u))))), ~ (_GLF_IDENTITY(~ (uint(_GLF_IDENTITY(uvec4(_GLF_IDENTITY(subgroup_size, min(subgroup_size, subgroup_size)), 0u, 1u, (0u | 0u)), (uvec4(_GLF_IDENTITY(subgroup_size, min(subgroup_size, subgroup_size)), _GLF_IDENTITY(0u, min(0u, 0u)), 1u, (_GLF_IDENTITY(0u, _GLF_IDENTITY(uint(uint(0u)), _GLF_IDENTITY((true ? _GLF_IDENTITY(uint(_GLF_IDENTITY(uint(0u), min(uint(0u), uint(_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, ~ (~ (0u)))) | 0u))))), (uint(_GLF_IDENTITY(uint(0u), ~ (~ (uint(0u)))))) ^ 0u) : _GLF_FUZZED(subgroup_id)), ((true ? _GLF_IDENTITY(uint(_GLF_IDENTITY(uint(0u), min(uint(0u), uint(0u)))), (uint(_GLF_IDENTITY(uint(0u), ~ (~ (uint(0u)))))) ^ 0u) : _GLF_FUZZED(subgroup_id))) | (_GLF_IDENTITY((true ? _GLF_IDENTITY(uint(_GLF_IDENTITY(uint(0u), min(uint(0u), uint(0u)))), (uint(_GLF_IDENTITY(uint(0u), ~ (~ (uint(0u)))))) ^ 0u) : _GLF_IDENTITY(_GLF_FUZZED(subgroup_id), (_GLF_FUZZED(subgroup_id)) / 1u)), ~ (~ ((true ? _GLF_IDENTITY(uint(_GLF_IDENTITY(uint(0u), min(uint(0u), uint(0u)))), (uint(_GLF_IDENTITY(uint(0u), ~ (~ (uint(0u)))))) ^ 0u) : _GLF_IDENTITY(_GLF_FUZZED(subgroup_id), (_GLF_FUZZED(subgroup_id)) / 1u))))))))) | _GLF_IDENTITY(0u, max(0u, _GLF_IDENTITY(0u, (0u) + 0u)))))) | (uvec4(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, min(subgroup_size, subgroup_size)), 0u ^ (_GLF_IDENTITY(subgroup_size, min(subgroup_size, subgroup_size)))), 0u, 1u, (0u | 0u)))))), max(_GLF_IDENTITY(~ (uint(_GLF_IDENTITY(uvec4(_GLF_IDENTITY(subgroup_size, min(subgroup_size, subgroup_size)), 0u, 1u, (0u | 0u)), (uvec4(_GLF_IDENTITY(subgroup_size, min(subgroup_size, subgroup_size)), 0u, 1u, (_GLF_IDENTITY(_GLF_IDENTITY(0u, (0u) >> uint(_GLF_ZERO(0.0, injectionSwitch.x))), _GLF_IDENTITY(uint(uint(0u)), (true ? _GLF_IDENTITY(uint(_GLF_IDENTITY(uint(0u), min(uint(0u), uint(0u)))), (uint(_GLF_IDENTITY(uint(0u), ~ (~ (uint(0u)))))) ^ 0u) : _GLF_FUZZED(subgroup_id)))) | 0u))) | (uvec4(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, min(subgroup_size, subgroup_size)), (true ? _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, min(subgroup_size, subgroup_size)), 0u | (_GLF_IDENTITY(subgroup_size, min(subgroup_size, subgroup_size)))) : _GLF_IDENTITY(_GLF_FUZZED(workgroup_size), ((1u << _GLF_IDENTITY(uint(4u), uint(4u))) >> _GLF_IDENTITY(uint(4u), uint(4u))) * (_GLF_FUZZED(workgroup_size))))), 0u, 1u, (0u | 0u)))))), uint(uint(~ (uint(_GLF_IDENTITY(uvec4(_GLF_IDENTITY(subgroup_size, min(subgroup_size, subgroup_size)), 0u, 1u, (_GLF_IDENTITY(0u | _GLF_IDENTITY(0u, max(0u, 0u)), uint(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (_GLF_IDENTITY(0u | _GLF_IDENTITY(0u, clamp(0u, 0u, 0u)), ~ (~ (_GLF_IDENTITY(0u, ~ (~ (0u))) | 0u))))))), (uvec4(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, min(subgroup_size, subgroup_size)), (_GLF_IDENTITY(subgroup_size, min(subgroup_size, subgroup_size))) - 0u), 0u, 1u, (_GLF_IDENTITY(0u, _GLF_IDENTITY(uint(uint(0u)), (true ? _GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_IDENTITY(uint(0u), clamp(uint(0u), _GLF_IDENTITY(uint(0u), (uint(0u)) | (uint(0u))), uint(0u))), min(uint(0u), uint(0u)))), _GLF_IDENTITY((uint(_GLF_IDENTITY(uint(0u), ~ (~ (uint(0u)))))), min((uint(_GLF_IDENTITY(uint(0u), ~ (~ (_GLF_IDENTITY(uint(0u), 1u * (uint(0u)))))))), (uint(_GLF_IDENTITY(uint(0u), ~ (~ (uint(0u)))))))) ^ 0u) : _GLF_FUZZED(subgroup_id)))) | 0u))) | _GLF_IDENTITY((uvec4(_GLF_IDENTITY(subgroup_size, min(subgroup_size, subgroup_size)), 0u, 1u, (0u | 0u))), ((uvec4(_GLF_IDENTITY(subgroup_size, min(subgroup_size, subgroup_size)), 0u, 1u, (0u | 0u)))) ^ (uvec4(1u, 1u, 1u, 1u) ^ uvec4(1u, 1u, 1u, 1u))))))))), ~ (uint(_GLF_IDENTITY(uvec4(_GLF_IDENTITY(subgroup_size, min(subgroup_size, subgroup_size)), 0u, 1u, (0u | 0u)), (uvec4(_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(min(subgroup_size, subgroup_size), (min(subgroup_size, subgroup_size)) | (min(subgroup_size, subgroup_size)))), 0u, 1u, (_GLF_IDENTITY(0u, _GLF_IDENTITY(uint(uint(0u)), (true ? _GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(uint(0u), min(uint(0u), uint(0u)))), (uint(_GLF_IDENTITY(_GLF_IDENTITY(uint(0u), min(uint(0u), uint(0u))), 0u | (_GLF_IDENTITY(uint(0u), min(uint(0u), uint(0u))))))) ^ 0u), (uint(_GLF_IDENTITY(uint(0u), ~ (~ (uint(0u)))))) ^ 0u) : _GLF_FUZZED(subgroup_id)))) | 0u))) | (uvec4(_GLF_IDENTITY(subgroup_size, min(subgroup_size, subgroup_size)), 0u, 1u, (0u | 0u))))))))))), _GLF_IDENTITY(subgroup_size, (subgroup_size) | (_GLF_IDENTITY(subgroup_size, 0u | (_GLF_IDENTITY(subgroup_size, min(_GLF_IDENTITY(subgroup_size, ((0u | 0u) ^ 1u) * (_GLF_IDENTITY(subgroup_size, (true ? _GLF_IDENTITY(subgroup_size, (subgroup_size) / 1u) : _GLF_FUZZED(subgroup_id))))), _GLF_IDENTITY(subgroup_size, (subgroup_size) | 0u))))))), subgroup_size)), 0u ^ (_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY((subgroup_size), ((subgroup_size)) << 0u) / _GLF_IDENTITY(1u, (0u >> _GLF_IDENTITY(uint(0u), uint(0u))) | (1u))))), (_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(0u ^ (_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((subgroup_size), ((subgroup_size)) ^ 0u), ((subgroup_size)) << 0u) / 1u, (_GLF_IDENTITY(_GLF_IDENTITY((subgroup_size), ((subgroup_size)) << 0u) / 1u, 0u ^ (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, subgroup_size))), ((subgroup_size)) << 0u) / 1u))) | (_GLF_IDENTITY((subgroup_size), ((subgroup_size)) << 0u) / 1u)))), clamp(0u ^ (_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((subgroup_size), ((subgroup_size)) ^ 0u), ((subgroup_size)) << 0u) / 1u, (_GLF_IDENTITY(_GLF_IDENTITY((subgroup_size), ((subgroup_size)) << 0u) / 1u, 0u ^ (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, subgroup_size))), ((subgroup_size)) << 0u) / 1u))) | (_GLF_IDENTITY((subgroup_size), ((subgroup_size)) << 0u) / 1u)))), _GLF_IDENTITY(0u ^ (_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((subgroup_size), ((subgroup_size)) ^ 0u), ((subgroup_size)) << 0u) / 1u, (_GLF_IDENTITY(_GLF_IDENTITY((subgroup_size), ((subgroup_size)) << 0u) / 1u, 0u ^ (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, subgroup_size))), ((subgroup_size)) << 0u) / 1u))) | (_GLF_IDENTITY((subgroup_size), ((subgroup_size)) << 0u) / 1u)))), uint(_GLF_ZERO(0.0, injectionSwitch.x)) | (0u ^ (_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((subgroup_size), ((subgroup_size)) ^ 0u), ((subgroup_size)) << 0u) / 1u, (_GLF_IDENTITY(_GLF_IDENTITY((subgroup_size), ((subgroup_size)) << 0u) / 1u, 0u ^ (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, subgroup_size))), ((subgroup_size)) << 0u) / 1u))) | (_GLF_IDENTITY((subgroup_size), ((subgroup_size)) << 0u) / 1u)))))), 0u ^ (_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((subgroup_size), ((subgroup_size)) ^ 0u), ((subgroup_size)) << 0u) / 1u, (_GLF_IDENTITY(_GLF_IDENTITY((subgroup_size), ((subgroup_size)) << 0u) / 1u, 0u ^ (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, subgroup_size))), ((subgroup_size)) << 0u) / 1u))) | (_GLF_IDENTITY((subgroup_size), ((subgroup_size)) << 0u) / 1u)))))))) << 0u) : _GLF_FUZZED(packHalf2x16(log2(injectionSwitch))))));
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), false || (false))), true && (! (false))))), (_GLF_IDENTITY(_GLF_IDENTITY(false, ! _GLF_IDENTITY((_GLF_IDENTITY(! (false), _GLF_IDENTITY(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (true)) && (! (false)))), ((_GLF_IDENTITY(! (false), _GLF_IDENTITY(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (true)) && (! (false))))) || false)), bool(bool(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), true && (! (false))))))))) && true)))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-0.7)), vec2(_GLF_FUZZED(505.410), (injectionSwitch)[1]), bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))).x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-932.610)), vec2(_GLF_FUZZED(-351.254), _GLF_IDENTITY((injectionSwitch)[1], ((injectionSwitch)[1]) + 0.0)), bvec2(false, true)), max(mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-932.610)), vec2(_GLF_FUZZED(-351.254), _GLF_IDENTITY((injectionSwitch)[1], ((injectionSwitch)[1]) + 0.0)), bvec2(false, true)), _GLF_IDENTITY(mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-932.610)), vec2(_GLF_FUZZED(-351.254), _GLF_IDENTITY((injectionSwitch)[1], ((injectionSwitch)[1]) + 0.0)), bvec2(false, true)), (mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-932.610)), vec2(_GLF_FUZZED(-351.254), _GLF_IDENTITY((injectionSwitch)[1], ((injectionSwitch)[1]) + 0.0)), bvec2(false, true))) - vec2(0.0, 0.0))))).y, (_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch, vec2(mat3x4(injectionSwitch, 1.0, 0.0, length(vec2(0.0, 0.0)), 0.0, cos(0.0), 0.0, 1.0, 1.0, 0.0, sqrt(1.0)))).y))) / 1.0)))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) && true), (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0), false || (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], (false ? _GLF_FUZZED(-1896.3290) : injectionSwitch[1])))).x > injectionSwitch.y, _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], (false ? _GLF_FUZZED(-1896.3290) : injectionSwitch[1])))).x > injectionSwitch.y, true, true, true)), (bool(bvec4(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], (false ? _GLF_FUZZED(-1896.3290) : injectionSwitch[1])))).x > injectionSwitch.y, true, true, true))) || false))))))))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))
  barrier();
 uint read_1 = atomicLoad(_GLF_IDENTITY(buf[virtual_gid], 0u | (buf[virtual_gid])), 4, 64, _GLF_IDENTITY(0, (0) ^ 0));
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)), injectionSwitch, injectionSwitch)).x > _GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)), injectionSwitch, injectionSwitch)), injectionSwitch)).y))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    return;
   barrier();
  }
 atomicStore(buf[next_virtual_gid], _GLF_IDENTITY(uint(read_1 + 1), 0u ^ (uint(read_1 + 1))), 4, 64, 4);
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, float(_GLF_IDENTITY(vec3(_GLF_IDENTITY(injectionSwitch.x, float(_GLF_IDENTITY(mat4x2(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * 1.0), injectionSwitch.x)), 1.0, 0.0, _GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0)), dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(-9754.0926)), bool(false)))))), 0.0, 1.0, 0.0, 0.0), mat2(1.0) * (mat4x2(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * 1.0), injectionSwitch.x)), 1.0, _GLF_IDENTITY(0.0, (0.0) + 0.0), _GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0)), dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0))), 0.0, _GLF_IDENTITY(1.0, _GLF_IDENTITY((1.0), ((1.0)) / 1.0) - 0.0), 0.0, 0.0))))), 0.0, 1.0), (vec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)), max(_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)), max(_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)), _GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)))))).x, float(_GLF_IDENTITY(mat4x2(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY((injectionSwitch.x) * 1.0, clamp((injectionSwitch.x) * 1.0, (injectionSwitch.x) * 1.0, (injectionSwitch.x) * 1.0))), injectionSwitch.x)), 1.0, 0.0, _GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0)), dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0))), 0.0, 1.0, 0.0, 0.0), mat2(1.0) * (mat4x2(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * 1.0), injectionSwitch.x), mix(float(_GLF_FUZZED(66.45)), float(clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * 1.0), injectionSwitch.x)), bool(true)))), 1.0, 0.0, _GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0)), dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0))), _GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(77.70)), bool(false))), _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-43.57)), bool(false))))), _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(3786.5865)), float(1.0), bool(true))), 0.0, 0.0))))), 0.0, 1.0)) * mat3(1.0)))))) > injectionSwitch.y))), ! (_GLF_IDENTITY(! (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0) > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(5.3)), bool(false)))) / 1.0), max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(5.3)), bool(false)))) / 1.0), (false ? _GLF_FUZZED(1.6) : _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(5.3)), bool(false)))) / 1.0))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(5.3)), bool(false)))) / 1.0), (_GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(5.3)), bool(false)))) / 1.0)) / 1.0))))))), bool(bvec4(! (_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, _GLF_IDENTITY(! (_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_IDENTITY(false, ! (! (false)))), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x < injectionSwitch.y)) && ((_GLF_IDENTITY(false, ! (! (false)))))), _GLF_IDENTITY(! (! (! (_GLF_IDENTITY(false, ! (! (false)))))), bool(_GLF_IDENTITY(bvec2(! (! (! (_GLF_IDENTITY(false, ! (! (false)))))), false), bvec2(bvec2(bvec2(! (! (! (_GLF_IDENTITY(false, ! (! (false)))))), false)))))))), false || (_GLF_IDENTITY(! (_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_IDENTITY(false, ! (! (false)))), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x < injectionSwitch.y)) && ((_GLF_IDENTITY(false, ! (! (false)))))), _GLF_IDENTITY(! (! (! (_GLF_IDENTITY(false, ! (! (false)))))), bool(_GLF_IDENTITY(bvec2(! (! (! (_GLF_IDENTITY(false, ! (! (false)))))), false), bvec2(bvec2(bvec2(! (! (! (_GLF_IDENTITY(false, ! (! (false)))))), false)))))))), true && (_GLF_IDENTITY(! (_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_IDENTITY(false, ! (! (false)))), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x < injectionSwitch.y)) && ((_GLF_IDENTITY(false, ! (! (false)))))), _GLF_IDENTITY(! (! (! (_GLF_IDENTITY(false, ! (! (false)))))), bool(_GLF_IDENTITY(bvec2(! (! (! (_GLF_IDENTITY(false, ! (! (false)))))), false), bvec2(bvec2(bvec2(! (! (! (_GLF_IDENTITY(false, ! (! (false)))))), false)))))))), true && (! (_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_IDENTITY(false, ! (! (false)))), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x < injectionSwitch.y)) && ((_GLF_IDENTITY(false, ! (! (false)))))), _GLF_IDENTITY(! (! (! (_GLF_IDENTITY(false, ! (! (false)))))), bool(_GLF_IDENTITY(bvec2(! (! (! (_GLF_IDENTITY(false, ! (! (false)))))), false), bvec2(bvec2(bvec2(! _GLF_IDENTITY((! (! (_GLF_IDENTITY(false, ! (! (false)))))), bool(bvec2((! (! (_GLF_IDENTITY(false, ! (! (false)))))), false))), false)))))))))))))))))), (injectionSwitch.x > injectionSwitch.y)))), _GLF_IDENTITY(false, false || (false)), false, false))))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   return;
  }
 uint read_2 = atomicLoad(_GLF_IDENTITY(buf[virtual_gid], (_GLF_IDENTITY(buf[virtual_gid], _GLF_IDENTITY(uint(uvec2(buf[virtual_gid], 1u)), clamp(uint(uvec2(buf[virtual_gid], 1u)), uint(uvec2(buf[virtual_gid], 1u)), uint(uvec2(buf[virtual_gid], 1u)))))) | uint(_GLF_ZERO(0.0, injectionSwitch.x))), _GLF_IDENTITY(_GLF_IDENTITY(4, (_GLF_IDENTITY(4, int(int(_GLF_IDENTITY(4, _GLF_IDENTITY(_GLF_IDENTITY(min(_GLF_IDENTITY(4, ~ (~ (4))), _GLF_IDENTITY(4, (true ? 4 : _GLF_FUZZED(-18322)))), 0 + (min(_GLF_IDENTITY(4, ~ (~ (4))), _GLF_IDENTITY(4, (true ? 4 : _GLF_FUZZED(-18322)))))), ~ (~ (_GLF_IDENTITY(min(_GLF_IDENTITY(4, ~ (_GLF_IDENTITY(~ (4), (_GLF_IDENTITY(~ (4), _GLF_IDENTITY(int(ivec4(~ (4), 1, 1, ((1 << _GLF_IDENTITY(int(2), int(2))) >> _GLF_IDENTITY(int(2), int(2))))), int(ivec4(int(ivec4(~ (4), 1, 1, ((1 << _GLF_IDENTITY(int(2), int(2))) >> _GLF_IDENTITY(int(2), int(2))))), 0, 0, 1))))) | (~ (4))))), _GLF_IDENTITY(_GLF_IDENTITY(4, ~ (_GLF_IDENTITY(~ (4), (false ? _GLF_FUZZED(1259) : _GLF_IDENTITY(~ (4), (~ (4)) | (~ (4))))))), (true ? 4 : _GLF_FUZZED(-18322)))), 0 + (min(_GLF_IDENTITY(4, ~ (~ (4))), _GLF_IDENTITY(4, (true ? 4 : _GLF_FUZZED(-18322)))))))))))))) | (4)), 0 | (_GLF_IDENTITY(4, (_GLF_IDENTITY(4, int(int(_GLF_IDENTITY(4, _GLF_IDENTITY(min(_GLF_IDENTITY(4, ~ (~ (4))), _GLF_IDENTITY(4, (true ? 4 : _GLF_FUZZED(-18322)))), 0 + (min(_GLF_IDENTITY(_GLF_IDENTITY(4, ~ (~ (4))), max(_GLF_IDENTITY(4, ~ (~ (4))), _GLF_IDENTITY(4, ~ (~ (4))))), _GLF_IDENTITY(4, (true ? 4 : _GLF_FUZZED(-18322))))))))))) | (4)))), 64, 0);
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(float(injectionSwitch.y)), (false ? _GLF_FUZZED(-6.3) : float(float(injectionSwitch.y)))))))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bool(injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(_GLF_IDENTITY(mat3x2(injectionSwitch.y, 0.0, 0.0, 0.0, 0.0, tan(0.0)), mat2(1.0) * (mat3x2(injectionSwitch.y, 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, float(mat4x2(0.0, 1.0, determinant(mat4(1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0)), 1.0, 0.0, sqrt(0.0), 0.0, 1.0))), tan(0.0))))), mix(float(float(_GLF_IDENTITY(mat3x2(injectionSwitch.y, 0.0, 0.0, 0.0, 0.0, tan(0.0)), _GLF_IDENTITY(mat2(1.0), transpose(transpose(_GLF_IDENTITY(mat2(1.0), mat2(0.0, 0.0, 0.0, 0.0) + (_GLF_IDENTITY(mat2(1.0), transpose(transpose(mat2(1.0))))))))) * (mat3x2(injectionSwitch.y, 0.0, 0.0, 0.0, 0.0, tan(0.0)))))), float(_GLF_FUZZED(3648.1211)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), float(_GLF_IDENTITY(mat3(injectionSwitch.y, 1.0, 1.0, _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-4500.0765)), float(1.0), bool(true))), 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, min(0.0, 0.0))), (false ? _GLF_FUZZED(mat3(4345.6593, -1.2, -86.85, 8589.9943, _GLF_IDENTITY(_GLF_IDENTITY(-0.3, determinant(mat4(1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, determinant(mat2(0.0, 0.0, 1.0, 0.0)), 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, abs(1.0))) * (-0.3)), (-0.3) / 1.0), 3000.9054, 9.0, 58.37, 821.683)) : mat3(injectionSwitch.y, 1.0, _GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0, 0.0, 0.0, 0.0, 0.0, 0.0))))))), ! (! (bool(bool(injectionSwitch.x > injectionSwitch.y)))))), true, _GLF_TRUE(_GLF_IDENTITY(true, ! (! (true))), (injectionSwitch.x < injectionSwitch.y))), _GLF_IDENTITY(bvec3(bvec4(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bool(injectionSwitch.x > injectionSwitch.y)))), ! (! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bool(injectionSwitch.x > injectionSwitch.y))))))))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(bool(bool(injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_IDENTITY(bool(bool(injectionSwitch.x > injectionSwitch.y)), bool(bvec3(bool(bool(injectionSwitch.x > injectionSwitch.y)), false, true)))))), true && (_GLF_IDENTITY(bool(bool(injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_IDENTITY(bool(bool(injectionSwitch.x > injectionSwitch.y)), bool(bvec3(bool(bool(_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-6.6)), float(injectionSwitch.x), bool(true)))) / 1.0) > injectionSwitch.y)), false, true)))))))), _GLF_IDENTITY(! (! _GLF_IDENTITY((bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[_GLF_IDENTITY(0, ~ (~ (0)))], injectionSwitch[1])).x, min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x, clamp(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x)), _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x)) > injectionSwitch.y))), false || ((bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x, min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x, clamp(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x)), _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x)) > injectionSwitch.y)))))), ! (! (! _GLF_IDENTITY((! (bool(bool(_GLF_IDENTITY(injectionSwitch.x, float(_GLF_IDENTITY(_GLF_IDENTITY(vec3(_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x)), 0.0, 1.0), _GLF_IDENTITY((vec3(_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x)), 0.0, 1.0)) * mat3(1.0), vec3(mat4x3((vec3(_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x)), 0.0, 1.0)) * mat3(1.0), 0.0, 1.0, 1.0, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), 1.0, 1.0, 1.0, 1.0, abs(0.0))))), vec3(mat3x4(vec3(_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x)), 0.0, 1.0), 1.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0))), 1.0, 0.0, 1.0, abs(1.0), exp(0.0), sin(0.0), 1.0))))) > injectionSwitch.y)))), bool(bvec3((_GLF_IDENTITY(! (bool(bool(injectionSwitch.x > injectionSwitch.y))), ! (! (! (bool(bool(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))))))), true, false)))))))), _GLF_IDENTITY(true, bool(bvec4(true, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)), injectionSwitch)).x > injectionSwitch.y)), _GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), _GLF_IDENTITY(bool(bvec4(false, true, true, true)), true && (bool(bvec4(false, true, true, true))))), false))), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(-9.2) : injectionSwitch.x)) < injectionSwitch.y))), true)), bvec3(bvec4(bvec3(bvec4(bvec3(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bool(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))))))) || (injectionSwitch.x > injectionSwitch.y)))), _GLF_IDENTITY(_GLF_IDENTITY(! _GLF_IDENTITY((! (bool(bool(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + 0.0), injectionSwitch.y)), injectionSwitch.y, injectionSwitch.y)))))), ((! (bool(bool(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + 0.0), injectionSwitch.y)), injectionSwitch.y, injectionSwitch.y))))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_IDENTITY(! _GLF_IDENTITY((! (bool(bool(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + 0.0), injectionSwitch.y)), injectionSwitch.y, injectionSwitch.y)))))), ((! (bool(bool(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + 0.0), injectionSwitch.y)), injectionSwitch.y, injectionSwitch.y))))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (! _GLF_IDENTITY((! (bool(bool(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + 0.0), injectionSwitch.y)), injectionSwitch.y, injectionSwitch.y)))))), ((! (bool(bool(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY((injectionSwitch.y) + 0.0, float(_GLF_IDENTITY(mat2x3((injectionSwitch.y) + 0.0, exp(0.0), abs(0.0), 0.0, 1.0, 1.0), (false ? _GLF_FUZZED(mat2x3(2545.4342, -89.19, -8.8, -7.7, 956.319, -20.95)) : mat2x3((injectionSwitch.y) + 0.0, exp(0.0), abs(0.0), 0.0, 1.0, 1.0)))))), injectionSwitch.y)), injectionSwitch.y, injectionSwitch.y))))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && true)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), _GLF_IDENTITY(false || (_GLF_IDENTITY(! (! (bool(_GLF_IDENTITY(bool(injectionSwitch.x > injectionSwitch.y), (bool(injectionSwitch.x > injectionSwitch.y)) && true)))), bool(bvec2(! (! (bool(bool(injectionSwitch.x > injectionSwitch.y)))), true)))), ! (! (false || (_GLF_IDENTITY(! (! (bool(_GLF_IDENTITY(bool(injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY((bool(injectionSwitch.x > injectionSwitch.y)), bool(bvec4((bool(injectionSwitch.x > injectionSwitch.y)), true, true, true))) && true)))), bool(bvec2(! (! (bool(bool(injectionSwitch.x > injectionSwitch.y)))), true)))))))))), true, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) < _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)), injectionSwitch)).y))), true)), _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true)))), ! (! (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true)))), bool(bvec3((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && _GLF_IDENTITY(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (true)))))), false, false))))))), false || (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(vec2(_GLF_IDENTITY(injectionSwitch, (_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / determinant(mat2(1.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(1.0, 0.0)), dot(vec2(0.0, 1.0), vec2(1.0, 0.0))), 0.0, 1.0))) < injectionSwitch.y)) ? injectionSwitch : _GLF_FUZZED(_GLF_IDENTITY(vec2(-8542.8392, -825.138), max(vec2(-8542.8392, -825.138), _GLF_IDENTITY(vec2(-8542.8392, -825.138), (vec2(-8542.8392, -825.138)) / vec2(1.0, 1.0)))))))))).x > _GLF_IDENTITY(injectionSwitch.y, float(mat2(injectionSwitch.y, 0.0, 0.0, 1.0)))))))))))))), ! (! (_GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(_GLF_IDENTITY(_GLF_IDENTITY(float(true), clamp(float(true), float(true), float(true))), max(float(_GLF_IDENTITY(true, (_GLF_IDENTITY(true, (true) && true)) && true)), float(true))))), bool(false))), _GLF_IDENTITY(bool(bool(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(-52.70) : _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0), injectionSwitch.y)))))), ! (! (bool(bool(injectionSwitch.x > injectionSwitch.y)))))), true, _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY((injectionSwitch.y), ((injectionSwitch.y)) * 1.0) / round(length(normalize(vec3(1.0, 1.0, 1.0))))), (_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.y), ((injectionSwitch.y)) * 1.0), max(_GLF_IDENTITY((injectionSwitch.y), ((injectionSwitch.y)) * 1.0), _GLF_IDENTITY((injectionSwitch.y), ((injectionSwitch.y)) * 1.0))) / round(length(normalize(vec3(1.0, 1.0, 1.0)))))) * 1.0), float(_GLF_IDENTITY(mat2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / round(length(normalize(vec3(1.0, 1.0, 1.0))))), (_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / round(length(normalize(vec3(1.0, 1.0, 1.0)))))) + 0.0), (_GLF_IDENTITY(false, bool(bvec2(false, true))) ? _GLF_IDENTITY(_GLF_FUZZED(-12.87), 1.0 * (_GLF_FUZZED(-12.87))) : _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / round(length(normalize(vec3(1.0, 1.0, 1.0))))))), abs(0.0), exp(0.0), 1.0), mat2(mat3x4(mat2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / round(length(normalize(vec3(1.0, 1.0, 1.0))))), (_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / round(length(normalize(vec3(1.0, 1.0, 1.0)))))) + 0.0), (_GLF_IDENTITY(false, bool(bvec2(false, true))) ? _GLF_IDENTITY(_GLF_FUZZED(-12.87), 1.0 * (_GLF_FUZZED(-12.87))) : _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / round(length(normalize(vec3(1.0, 1.0, 1.0))))))), abs(0.0), exp(0.0), 1.0)))))))))), (_GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(_GLF_ONE(1.0, injectionSwitch.y)), vec2(mat3x4((injectionSwitch) * mat2(_GLF_ONE(1.0, injectionSwitch.y)), 1.0, 0.0, 0.0, 1.0, exp(0.0), 1.0, 1.0, 1.0, 0.0, 1.0)))).y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(float(true), float(vec3(_GLF_IDENTITY(float(true), mix(float(float(true)), float(_GLF_FUZZED(vec3(-75.52, -3.8, 460.089).b)), bool(false))), 1.0, 0.0))), clamp(float(true), _GLF_IDENTITY(float(true), float(mat2x3(float(true), 0.0, 1.0, sin(0.0), 1.0, determinant(_GLF_IDENTITY(mat2(1.0, 0.0, 0.0, 1.0), (mat2(1.0, 0.0, 0.0, 1.0)) / mat2(1.0, 1.0, 1.0, 1.0)))))), float(true))), max(float(true), float(true))))), bool(false))), _GLF_IDENTITY(bool(bool(injectionSwitch.x > injectionSwitch.y)), ! _GLF_IDENTITY((! (bool(bool(injectionSwitch.x > injectionSwitch.y)))), true && ((! (bool(bool(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y)), true))))))))))), true, _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / round(length(normalize(vec3(1.0, 1.0, _GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, max(1.0, _GLF_IDENTITY(1.0, (1.0) - 0.0))), 1.0))))))), float(mat2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)), injectionSwitch)))).y, (injectionSwitch.y) / round(length(normalize(vec3(1.0, 1.0, 1.0))))), (false ? _GLF_FUZZED(-12.87) : _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / _GLF_IDENTITY(round(length(normalize(vec3(1.0, 1.0, 1.0)))), clamp(round(length(normalize(vec3(1.0, 1.0, 1.0)))), round(length(normalize(vec3(1.0, 1.0, 1.0)))), _GLF_IDENTITY(round(length(normalize(vec3(1.0, 1.0, 1.0)))), (round(length(normalize(vec3(1.0, 1.0, 1.0))))) + 0.0)))))), _GLF_IDENTITY(abs(0.0), max(abs(_GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(7904.2551) : 0.0)), 0.0))) - 0.0)), _GLF_IDENTITY(abs(0.0), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? abs(0.0) : _GLF_FUZZED(8156.5414))))), exp(0.0), 1.0))))))), false || (bool(bvec3(_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(_GLF_ONE(1.0, injectionSwitch.y)), vec2(mat3x4((injectionSwitch) * mat2(_GLF_ONE(1.0, injectionSwitch.y)), 1.0, 0.0, 0.0, 1.0, exp(0.0), 1.0, 1.0, 1.0, 0.0, 1.0)))).y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(float(true), float(vec3(_GLF_IDENTITY(float(true), mix(float(float(true)), float(_GLF_FUZZED(vec3(-75.52, -3.8, 460.089).b)), bool(false))), 1.0, 0.0))), clamp(float(true), _GLF_IDENTITY(float(true), float(mat2x3(float(true), 0.0, 1.0, sin(0.0), 1.0, determinant(_GLF_IDENTITY(mat2(1.0, 0.0, 0.0, 1.0), (mat2(1.0, 0.0, 0.0, 1.0)) / mat2(1.0, 1.0, 1.0, 1.0)))))), float(true))), max(float(true), float(true))))), bool(false))), _GLF_IDENTITY(bool(bool(injectionSwitch.x > injectionSwitch.y)), ! _GLF_IDENTITY((! (bool(bool(injectionSwitch.x > injectionSwitch.y)))), true && ((! (bool(bool(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y)), true))))))))))), true, _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / round(length(normalize(vec3(1.0, 1.0, _GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, max(1.0, _GLF_IDENTITY(1.0, (1.0) - 0.0))), 1.0))))))), float(mat2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)), injectionSwitch)))).y, (injectionSwitch.y) / round(length(normalize(vec3(1.0, 1.0, 1.0))))), (false ? _GLF_FUZZED(-12.87) : _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / _GLF_IDENTITY(round(length(normalize(vec3(1.0, 1.0, 1.0)))), clamp(round(length(normalize(vec3(1.0, 1.0, 1.0)))), round(length(normalize(vec3(1.0, 1.0, 1.0)))), _GLF_IDENTITY(round(length(normalize(vec3(1.0, 1.0, 1.0)))), (round(length(normalize(vec3(1.0, 1.0, 1.0))))) + 0.0)))))), _GLF_IDENTITY(abs(0.0), max(abs(_GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(7904.2551) : 0.0)), 0.0))) - 0.0)), _GLF_IDENTITY(abs(0.0), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? abs(0.0) : _GLF_FUZZED(8156.5414))))), exp(0.0), 1.0)))))))))) && true)))))))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! _GLF_IDENTITY(((_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), min(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))))).x > injectionSwitch.y)), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(((_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), min(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))))).x > injectionSwitch.y)), true), bvec2(bvec3(bvec2(((_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), min(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))))).x > injectionSwitch.y)), true), false)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (bool(_GLF_IDENTITY(bvec2(((_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), min(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))))).x > injectionSwitch.y)), true), bvec2(bvec3(bvec2(((_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), min(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))))).x > injectionSwitch.y)), true), false))))))))))))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 atomicStore(buf[next_virtual_gid], _GLF_IDENTITY(_GLF_IDENTITY(uint(read_1 + 1 == read_2) + 1, 0u ^ (uint(read_1 + 1 == read_2) + 1)), (false ? _GLF_FUZZED(read_1) : uint(read_1 + _GLF_IDENTITY(_GLF_IDENTITY(1, _GLF_IDENTITY(0, min(_GLF_IDENTITY(0, (0) << 0), _GLF_IDENTITY(0, min(0, 0)))) ^ (_GLF_IDENTITY(1, (1) >> 0))), clamp(_GLF_IDENTITY(1, _GLF_IDENTITY(0, min(_GLF_IDENTITY(0, (0) << 0), _GLF_IDENTITY(0, min(0, 0)))) ^ (_GLF_IDENTITY(1, (1) >> 0))), _GLF_IDENTITY(1, _GLF_IDENTITY(0, min(_GLF_IDENTITY(0, (0) << 0), _GLF_IDENTITY(0, min(0, 0)))) ^ (_GLF_IDENTITY(1, (1) >> 0))), _GLF_IDENTITY(1, _GLF_IDENTITY(0, min(_GLF_IDENTITY(0, (0) << 0), _GLF_IDENTITY(0, min(0, 0)))) ^ (_GLF_IDENTITY(1, (1) >> 0))))) == read_2) + 1)), 4, 64, 4);
}
