#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).y, clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)))).y)), injectionSwitch.y)), min(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (true ? _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)) : _GLF_FUZZED(-528.909))), clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y)), _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y))))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).x < injectionSwitch.y)))))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), _GLF_IDENTITY(0.0 + (_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))))), 0.0 + (0.0 + (_GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, 1.0 * (_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + 0.0))), injectionSwitch.y)), injectionSwitch.y))))))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))
      barrier();
    }
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(false))
  barrier();
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)).y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), bool(_GLF_IDENTITY(bool(_GLF_DEAD(false)), ! (! (bool(_GLF_DEAD(false)))))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], max(injectionSwitch[0], injectionSwitch[0])), injectionSwitch[1])).y, float(vec3(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch[0], max(injectionSwitch[0], injectionSwitch[0])), max(injectionSwitch[0], injectionSwitch[_GLF_IDENTITY(0, 1 * (0))])), injectionSwitch[1])).y, 0.0, 1.0)))))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), true, _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)))))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint num_workgroup = gl_NumWorkGroups.x;
 uint workgroup_size = _GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) / _GLF_IDENTITY(uvec3(1u, 1u, _GLF_IDENTITY(1u, (true ? 1u : _GLF_IDENTITY(_GLF_FUZZED((subgroup_local_id --)), (_GLF_IDENTITY(_GLF_FUZZED((subgroup_local_id --)), 0u | (_GLF_IDENTITY(_GLF_FUZZED((subgroup_local_id --)), (_GLF_FUZZED((subgroup_local_id --))) | 0u)))) / 1u)))), (uvec3(1u, 1u, _GLF_IDENTITY(1u, (true ? 1u : _GLF_FUZZED((subgroup_local_id --)))))) / uvec3(1u, 1u, 1u))).x;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(false || (_GLF_IDENTITY(false, _GLF_IDENTITY((_GLF_IDENTITY(false, (false) || false)) || false, true && ((_GLF_IDENTITY(false, (false) || false)) || false)))), false || (false || _GLF_IDENTITY((_GLF_IDENTITY(false, _GLF_IDENTITY((_GLF_IDENTITY(false, (false) || false)) || _GLF_IDENTITY(false, bool(bvec3(false, false, true))), true && ((_GLF_IDENTITY(false, (false) || false)) || false)))), ((_GLF_IDENTITY(false, _GLF_IDENTITY((_GLF_IDENTITY(false, (false) || false)) || _GLF_IDENTITY(false, bool(bvec3(false, false, true))), true && ((_GLF_IDENTITY(false, (false) || false)) || false))))) && true)))), (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(_GLF_IDENTITY(bool(bool(_GLF_FALSE(_GLF_IDENTITY(false, false || (false)), _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(false || _GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), bool(bool(((injectionSwitch.x > injectionSwitch.y)))))))))), ! (! (false || _GLF_IDENTITY(((_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + determinant(mat4(0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0))) > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)))) && (_GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), (((injectionSwitch.x > injectionSwitch.y))) && true), bool(_GLF_IDENTITY(bool(((injectionSwitch.x > injectionSwitch.y))), (bool(((injectionSwitch.x > injectionSwitch.y)))) || false)))))))))))), false || _GLF_IDENTITY((_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y)))))), ! (! ((_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || (_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y))), bool(bvec2(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y))), true))))))))))))), false || (bool(_GLF_IDENTITY(bool(_GLF_FALSE(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, ! (! (false))))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y)))) && true), _GLF_IDENTITY(false || ((injectionSwitch.x > injectionSwitch.y)), bool(bvec4(_GLF_IDENTITY(false, (false) || false) || _GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), ! (! (((injectionSwitch.x > injectionSwitch.y)))))))), true, false, false)))), false || (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4((injectionSwitch.x > injectionSwitch.y), true, true, true))))))))), (bool(_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), ! (! (_GLF_IDENTITY(false, _GLF_IDENTITY(false || (false), _GLF_IDENTITY(bool(bvec2(false || (false), false)), (bool(bvec2(false || (false), false))) && true)))))), _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(18.14) : _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))).x)) > injectionSwitch.y), _GLF_IDENTITY(false || ((injectionSwitch.x > injectionSwitch.y)), bool(bvec4(false || (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bool((injectionSwitch.x > injectionSwitch.y))))) || false)) || false)), true, false, false)))), false || (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(false || ((injectionSwitch.x > injectionSwitch.y)), false || (false || ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))))))))))))) && true)))), (bool(bool(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(false || (false), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(false || (false), (false || (false)) && true), false)), bool(bvec4(bool(bvec2(_GLF_IDENTITY(false || (false), (false || (false)) && true), false)), false, true, false))))), (injectionSwitch.x > injectionSwitch.y))))) && _GLF_IDENTITY(true, (_GLF_IDENTITY(true, bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(true, bool(bvec3(_GLF_IDENTITY(true, true && (true)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)))), false || (bool(true)))))) || _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))).y, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_IDENTITY(_GLF_FUZZED(injectionSwitch), min(_GLF_FUZZED(injectionSwitch), _GLF_FUZZED(injectionSwitch))))).y) || false))))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, bool(bvec4(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(true, (true) && true), false)))), false || (! (_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), true && (! (false))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, _GLF_IDENTITY(false, ! (! (false)))))))))))), (_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false)))) && true))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, false, false, true)))))
      barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)))
      barrier();
     barrier();
    }
   barrier();
  }
 uint workgroup_id = gl_WorkGroupID.x;
 uint workgroup_base = _GLF_IDENTITY(_GLF_IDENTITY(workgroup_size, max(workgroup_size, _GLF_IDENTITY(workgroup_size, 0u ^ (workgroup_size)))), _GLF_IDENTITY(_GLF_IDENTITY(1u * (_GLF_IDENTITY(workgroup_size, max(workgroup_size, _GLF_IDENTITY(_GLF_IDENTITY(workgroup_size, (false ? _GLF_FUZZED(workgroup_id) : workgroup_size)), 0u ^ (workgroup_size))))), (true ? 1u * (_GLF_IDENTITY(workgroup_size, max(workgroup_size, _GLF_IDENTITY(_GLF_IDENTITY(workgroup_size, (_GLF_IDENTITY(false ? _GLF_FUZZED(workgroup_id) : workgroup_size, (false ? _GLF_FUZZED(workgroup_id) : workgroup_size) - 0u))), 0u ^ (workgroup_size))))) : _GLF_FUZZED(48334u))), clamp(_GLF_IDENTITY(1u * (_GLF_IDENTITY(workgroup_size, max(workgroup_size, _GLF_IDENTITY(_GLF_IDENTITY(workgroup_size, min(workgroup_size, workgroup_size)), 0u ^ (workgroup_size))))), (1u * (_GLF_IDENTITY(workgroup_size, max(workgroup_size, _GLF_IDENTITY(workgroup_size, 0u ^ _GLF_IDENTITY((workgroup_size), ((workgroup_size)) | ((workgroup_size)))))))) / 1u), 1u * (_GLF_IDENTITY(workgroup_size, max(workgroup_size, _GLF_IDENTITY(workgroup_size, _GLF_IDENTITY(0u ^ (workgroup_size), ~ (~ (0u ^ (workgroup_size)))))))), 1u * (_GLF_IDENTITY(workgroup_size, max(workgroup_size, _GLF_IDENTITY(workgroup_size, 0u ^ (workgroup_size)))))))) * _GLF_IDENTITY(workgroup_id, max(workgroup_id, workgroup_id));
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(true && (false), (true && (false)) || _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x > injectionSwitch.y))))), ! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))), ! (! (_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) && true)) || false)))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false))))) || _GLF_IDENTITY(false, true && (false))))))))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 uint virtual_gid = _GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, max(workgroup_base + subgroup_id * subgroup_size, workgroup_base + _GLF_IDENTITY(subgroup_id * subgroup_size, 0u ^ (subgroup_id * subgroup_size)))) + subgroup_local_id;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), (_GLF_IDENTITY(false, (false) && true)) && true), false)), ! (! _GLF_IDENTITY((bool(bvec2(_GLF_IDENTITY(false, (false) && true), false))), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY((bool(bvec2(_GLF_IDENTITY(false, (false) && true), false))), bool(bvec2((bool(bvec2(_GLF_IDENTITY(false, (false) && true), false))), false))), false, true, false)), (bool(bvec4(_GLF_IDENTITY((bool(bvec2(_GLF_IDENTITY(false, (false) && true), false))), bool(bvec2((bool(bvec2(_GLF_IDENTITY(false, (false) && true), false))), false))), false, true, false))) || false)))))))
      barrier();
     barrier();
    }
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && true))
    barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(1.8) : _GLF_IDENTITY(injectionSwitch.x, float(mat3x2(injectionSwitch.x, 1.0, 0.0, 1.0, 0.0, 1.0))))) > injectionSwitch.y, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y) && true, ((injectionSwitch.x > injectionSwitch.y) && _GLF_IDENTITY(true, _GLF_IDENTITY(! (! (true)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(! (! (true)), (! (! (true))) && true)), false || (! (_GLF_IDENTITY(! (! (true)), (! (! (true))) && true)))))))) || false)))), bool(_GLF_IDENTITY(bvec2(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && _GLF_IDENTITY(true, ! (! (true))))), false || (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && _GLF_IDENTITY(true, ! (! (true))))), true && (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && _GLF_IDENTITY(true, ! (! (true))))), ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && _GLF_IDENTITY(true, ! (! (true)))))) || false)))))), false), bvec2(bvec2(bvec2(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true))), false))))))))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_DEAD(false)))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint next_virtual_gid = workgroup_base + subgroup_id * subgroup_size + ((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1, max(subgroup_local_id + 1, subgroup_local_id + 1)), _GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id + 1) ^ 0u, min(_GLF_IDENTITY((subgroup_local_id + 1), max((subgroup_local_id + 1), (subgroup_local_id + 1))) ^ 0u, (subgroup_local_id + 1) ^ 0u)), max(_GLF_IDENTITY((subgroup_local_id + 1) ^ 0u, min((subgroup_local_id + 1) ^ _GLF_IDENTITY(0u, (0u >> _GLF_IDENTITY(uint(4u), uint(4u))) + (_GLF_IDENTITY(_GLF_IDENTITY(0u, min(0u, _GLF_IDENTITY(0u, (0u & 147510u) | (0u)))), ~ (~ (0u))))), (subgroup_local_id + 1) ^ 0u)), _GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id + 1) ^ 0u, min((subgroup_local_id + 1) ^ 0u, (subgroup_local_id + 1) ^ 0u)), (_GLF_IDENTITY((subgroup_local_id + 1) ^ 0u, min((subgroup_local_id + 1) ^ 0u, (subgroup_local_id + 1) ^ 0u))) / 1u))))) % subgroup_size);
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 uint read_1 = atomicLoad(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(buf[virtual_gid], _GLF_IDENTITY(uint(uvec3(buf[virtual_gid], _GLF_IDENTITY((_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, ~ (~ (0u)))) - 0u) | 0u), _GLF_IDENTITY(uint(uint((0u | 0u))), (uint(uint((0u | 0u)))) / uint(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(-5.9)), bool(false))))))), 1u)), max(uint(uvec3(buf[virtual_gid], (0u | _GLF_IDENTITY(0u, ~ (~ (0u)))), 1u)), uint(uvec3(buf[virtual_gid], (0u | 0u), 1u))))), (_GLF_IDENTITY(buf[_GLF_IDENTITY(virtual_gid, (virtual_gid) >> _GLF_IDENTITY(0u, (0u) | 0u))], (_GLF_IDENTITY(true ? buf[virtual_gid] : _GLF_FUZZED((_GLF_IDENTITY(workgroup_base, (_GLF_IDENTITY(workgroup_base, (_GLF_IDENTITY((1u << _GLF_IDENTITY(_GLF_IDENTITY(uint(2u), (uint(2u)) | (0u & 72508u)), uint(2u))) >> _GLF_IDENTITY(uint(2u), uint(2u)), uint(_GLF_IDENTITY(uvec3((1u << _GLF_IDENTITY(_GLF_IDENTITY(uint(2u), uint(2u)), clamp(_GLF_IDENTITY(uint(2u), uint(2u)), _GLF_IDENTITY(uint(2u), uint(2u)), _GLF_IDENTITY(uint(2u), uint(2u))))) >> _GLF_IDENTITY(uint(2u), _GLF_IDENTITY(uint(2u), (_GLF_IDENTITY(uint(2u), (uint(2u)) | (uint(2u)))) >> 0u)), 0u, 1u), _GLF_IDENTITY(uvec3(uvec3(uvec3(_GLF_IDENTITY((1u << _GLF_IDENTITY(uint(2u), uint(2u))), max(_GLF_IDENTITY((1u << _GLF_IDENTITY(uint(2u), uint(2u))), _GLF_IDENTITY(((1u << _GLF_IDENTITY(uint(2u), uint(2u)))), uint(uvec2(((1u << _GLF_IDENTITY(uint(2u), uint(2u)))), 0u))) | ((1u << _GLF_IDENTITY(uint(2u), uint(2u))))), _GLF_IDENTITY((1u << _GLF_IDENTITY(uint(2u), uint(2u))), ~ (~ ((1u << _GLF_IDENTITY(uint(2u), uint(2u)))))))) >> _GLF_IDENTITY(uint(2u), uint(2u)), 0u, 1u))), (uvec3(uvec3(uvec3((1u << _GLF_IDENTITY(uint(2u), uint(2u))) >> _GLF_IDENTITY(uint(2u), uint(2u)), 0u, 1u)))) ^ uvec3(0u, 0u, 0u)))))) * (workgroup_base))) ^ 0u) & subgroup_id)), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(true, bool(bvec3(true, false, false))) ? buf[virtual_gid] : _GLF_FUZZED((_GLF_IDENTITY(workgroup_base, (_GLF_IDENTITY(workgroup_base, (_GLF_IDENTITY((1u << _GLF_IDENTITY(uint(2u), uint(2u))) >> _GLF_IDENTITY(uint(2u), uint(2u)), uint(_GLF_IDENTITY(uvec3((1u << _GLF_IDENTITY(uint(_GLF_IDENTITY(2u, min(2u, _GLF_IDENTITY(2u, max(2u, 2u))))), _GLF_IDENTITY(uint(2u), _GLF_IDENTITY(uint(uvec4(_GLF_IDENTITY(uint(2u), clamp(uint(2u), uint(2u), uint(2u))), 1u, 1u, 1u)), (uint(uvec4(_GLF_IDENTITY(uint(2u), clamp(uint(2u), uint(2u), uint(2u))), 1u, 1u, 1u))) * 1u)))) >> _GLF_IDENTITY(uint(2u), uint(2u)), 0u, 1u), _GLF_IDENTITY(uvec3(uvec3(uvec3((1u << _GLF_IDENTITY(uint(2u), uint(2u))) >> _GLF_IDENTITY(uint(2u), uint(2u)), 0u, 1u))), (uvec3(uvec3(uvec3((1u << _GLF_IDENTITY(uint(2u), uint(2u))) >> _GLF_IDENTITY(uint(2u), uint(2u)), 0u, 1u)))) ^ uvec3(0u, 0u, 0u)))))) * (workgroup_base))) ^ 0u) & subgroup_id)), (_GLF_IDENTITY(true, bool(bvec3(true, false, false))) ? buf[virtual_gid] : _GLF_FUZZED((_GLF_IDENTITY(workgroup_base, _GLF_IDENTITY((_GLF_IDENTITY(workgroup_base, (_GLF_IDENTITY((1u << _GLF_IDENTITY(uint(2u), uint(2u))) >> _GLF_IDENTITY(uint(2u), uint(2u)), uint(_GLF_IDENTITY(uvec3((1u << _GLF_IDENTITY(uint(2u), uint(2u))) >> _GLF_IDENTITY(uint(2u), uint(2u)), 0u, 1u), _GLF_IDENTITY(uvec3(uvec3(uvec3((1u << _GLF_IDENTITY(uint(2u), uint(2u))) >> _GLF_IDENTITY(uint(2u), uint(2u)), 0u, 1u))), (uvec3(_GLF_IDENTITY(uvec3(uvec3((1u << _GLF_IDENTITY(uint(2u), _GLF_IDENTITY(uint(2u), min(_GLF_IDENTITY(uint(2u), (uint(2u)) >> 0u), uint(2u))))) >> _GLF_IDENTITY(uint(2u), uint(2u)), 0u, 1u)), max(uvec3(uvec3((1u << _GLF_IDENTITY(uint(2u), _GLF_IDENTITY(uint(2u), min(_GLF_IDENTITY(uint(2u), (uint(2u)) >> 0u), uint(2u))))) >> _GLF_IDENTITY(uint(2u), uint(2u)), 0u, 1u)), uvec3(uvec3((1u << _GLF_IDENTITY(uint(2u), _GLF_IDENTITY(uint(2u), min(_GLF_IDENTITY(uint(2u), (uint(2u)) >> 0u), uint(2u))))) >> _GLF_IDENTITY(uint(2u), uint(2u)), 0u, 1u)))))) ^ uvec3(0u, 0u, 0u)))))) * (workgroup_base))) ^ 0u, min((_GLF_IDENTITY(workgroup_base, (_GLF_IDENTITY((1u << _GLF_IDENTITY(uint(2u), uint(2u))) >> _GLF_IDENTITY(uint(2u), uint(2u)), uint(_GLF_IDENTITY(uvec3((_GLF_IDENTITY(1u, uint(_GLF_IDENTITY(uvec4(1u, 0u, uint(_GLF_ZERO(0.0, injectionSwitch.x)), 0u), (uvec4(1u, 0u, uint(_GLF_ZERO(0.0, injectionSwitch.x)), 0u)) | (_GLF_IDENTITY(uvec4(1u, 0u, uint(_GLF_ZERO(0.0, injectionSwitch.x)), 0u), uvec4(1u, 1u, 1u, 1u) * (uvec4(1u, 0u, uint(_GLF_ZERO(0.0, injectionSwitch.x)), 0u))))))) << _GLF_IDENTITY(uint(2u), uint(2u))) >> _GLF_IDENTITY(uint(2u), uint(2u)), 0u, 1u), _GLF_IDENTITY(uvec3(uvec3(uvec3((1u << _GLF_IDENTITY(uint(2u), uint(2u))) >> _GLF_IDENTITY(uint(2u), uint(2u)), 0u, 1u))), _GLF_IDENTITY((uvec3(uvec3(_GLF_IDENTITY(uvec3((1u << _GLF_IDENTITY(uint(2u), uint(2u))) >> _GLF_IDENTITY(uint(2u), uint(2u)), _GLF_IDENTITY(0u, max(0u, _GLF_IDENTITY(0u, (0u) >> uint(_GLF_ZERO(0.0, injectionSwitch.x))))), 1u), min(_GLF_IDENTITY(uvec3((1u << _GLF_IDENTITY(uint(2u), uint(2u))) >> _GLF_IDENTITY(uint(2u), uint(2u)), _GLF_IDENTITY(0u, max(0u, _GLF_IDENTITY(0u, (0u) >> uint(_GLF_ZERO(0.0, injectionSwitch.x))))), 1u), uvec3(0u, 0u, 0u) | (uvec3((1u << _GLF_IDENTITY(uint(2u), uint(2u))) >> _GLF_IDENTITY(uint(2u), uint(2u)), _GLF_IDENTITY(0u, max(0u, _GLF_IDENTITY(0u, (0u) >> uint(_GLF_ZERO(0.0, injectionSwitch.x))))), 1u))), uvec3((1u << _GLF_IDENTITY(uint(2u), uint(2u))) >> _GLF_IDENTITY(uint(2u), uint(2u)), _GLF_IDENTITY(0u, max(0u, _GLF_IDENTITY(0u, (0u) >> uint(_GLF_ZERO(0.0, injectionSwitch.x))))), 1u)))))), uvec3(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)) | ((uvec3(uvec3(_GLF_IDENTITY(uvec3((1u << _GLF_IDENTITY(uint(2u), uint(2u))) >> _GLF_IDENTITY(uint(2u), uint(2u)), _GLF_IDENTITY(0u, max(0u, _GLF_IDENTITY(0u, (0u) >> uint(_GLF_ZERO(0.0, injectionSwitch.x))))), 1u), min(_GLF_IDENTITY(uvec3((1u << _GLF_IDENTITY(uint(2u), uint(2u))) >> _GLF_IDENTITY(uint(2u), uint(2u)), _GLF_IDENTITY(0u, max(0u, _GLF_IDENTITY(0u, (0u) >> uint(_GLF_ZERO(0.0, injectionSwitch.x))))), 1u), uvec3(0u, 0u, 0u) | (uvec3((1u << _GLF_IDENTITY(uint(2u), uint(2u))) >> _GLF_IDENTITY(uint(2u), uint(2u)), _GLF_IDENTITY(0u, max(0u, _GLF_IDENTITY(0u, (0u) >> uint(_GLF_ZERO(0.0, injectionSwitch.x))))), 1u))), uvec3((1u << _GLF_IDENTITY(uint(2u), uint(2u))) >> _GLF_IDENTITY(uint(2u), uint(2u)), _GLF_IDENTITY(0u, max(0u, _GLF_IDENTITY(0u, (0u) >> uint(_GLF_ZERO(0.0, injectionSwitch.x))))), 1u)))))))) ^ uvec3(0u, 0u, 0u)))))) * (workgroup_base))) ^ 0u, (_GLF_IDENTITY(workgroup_base, (_GLF_IDENTITY((1u << _GLF_IDENTITY(uint(2u), uint(2u))) >> _GLF_IDENTITY(uint(2u), uint(2u)), uint(_GLF_IDENTITY(uvec3((1u << _GLF_IDENTITY(uint(2u), uint(2u))) >> _GLF_IDENTITY(uint(2u), uint(_GLF_IDENTITY(2u, _GLF_IDENTITY(uint(uvec2(2u, 1u)), (uint(uvec2(2u, 1u))) * 1u)))), 0u, 1u), _GLF_IDENTITY(uvec3(uvec3(uvec3((1u << _GLF_IDENTITY(uint(2u), uint(2u))) >> _GLF_IDENTITY(uint(2u), uint(2u)), 0u, 1u))), (uvec3(uvec3(uvec3((1u << _GLF_IDENTITY(uint(2u), uint(2u))) >> _GLF_IDENTITY(uint(2u), uint(2u)), 0u, 1u)))) ^ uvec3(0u, 0u, 0u)))))) * (workgroup_base))) ^ 0u))) & subgroup_id))) | 0u))))))) | (0u & uint(-92.31))), (_GLF_IDENTITY(_GLF_IDENTITY(buf[virtual_gid], _GLF_IDENTITY(uint(uvec3(buf[virtual_gid], (0u | _GLF_IDENTITY(0u, 0u ^ (0u))), 1u)), max(uint(uvec3(buf[_GLF_IDENTITY(virtual_gid, (virtual_gid) / ((_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, (false ? _GLF_FUZZED(subgroup_size) : 1u))) ^ 0u) << _GLF_IDENTITY(uint(3u), uint(3u))) >> _GLF_IDENTITY(uint(_GLF_IDENTITY(3u, (3u) ^ 0u)), uint(3u))))], (0u | 0u), 1u)), uint(uvec3(buf[_GLF_IDENTITY(virtual_gid, 0u | (virtual_gid))], (_GLF_IDENTITY(0u, min(0u, 0u)) | 0u), _GLF_IDENTITY(1u, max(1u, 1u))))))), (_GLF_IDENTITY(buf[virtual_gid], (true ? buf[virtual_gid] : _GLF_FUZZED((_GLF_IDENTITY(workgroup_base, _GLF_IDENTITY((_GLF_IDENTITY(workgroup_base, ((1u << _GLF_IDENTITY(_GLF_IDENTITY(uint(2u), uint(2u)), (_GLF_IDENTITY(uint(2u), uint(2u))) / 1u)) >> _GLF_IDENTITY(uint(2u), uint(2u))) * (workgroup_base))) ^ 0u, ~ (~ ((_GLF_IDENTITY(workgroup_base, ((1u << _GLF_IDENTITY(_GLF_IDENTITY(uint(2u), uint(2u)), _GLF_IDENTITY((_GLF_IDENTITY(uint(2u), uint(2u))), ~ (~ ((_GLF_IDENTITY(uint(2u), uint(2u)))))) / 1u)) >> _GLF_IDENTITY(uint(2u), uint(2u))) * (workgroup_base))) ^ _GLF_IDENTITY(0u, _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec4(0u, (0u >> _GLF_IDENTITY(uint(8u), uint(8u))), 0u, 0u), (uvec4(0u, (0u >> _GLF_IDENTITY(uint(8u), uint(8u))), 0u, 0u)) | (uvec4(0u, (0u >> _GLF_IDENTITY(uint(8u), uint(8u))), 0u, 0u)))), max(uint(_GLF_IDENTITY(uvec4(0u, (0u >> _GLF_IDENTITY(uint(8u), uint(8u))), 0u, 0u), (uvec4(0u, (0u >> _GLF_IDENTITY(uint(8u), uint(8u))), 0u, 0u)) | (uvec4(0u, (0u >> _GLF_IDENTITY(uint(8u), uint(8u))), 0u, 0u)))), uint(_GLF_IDENTITY(uvec4(0u, (0u >> _GLF_IDENTITY(uint(8u), uint(8u))), 0u, 0u), (uvec4(0u, (0u >> _GLF_IDENTITY(uint(8u), uint(8u))), 0u, 0u)) | (uvec4(0u, (0u >> _GLF_IDENTITY(uint(8u), uint(8u))), 0u, 0u))))))))))) & subgroup_id))))) | (0u & uint(-92.31)))) - 0u), _GLF_IDENTITY(4, (_GLF_IDENTITY(4, min(_GLF_IDENTITY(4, clamp(4, 4, 4)), 4))) | (_GLF_IDENTITY(4, clamp(_GLF_IDENTITY(4, (4) / 1), 4, _GLF_IDENTITY(4, (4) << 0))))), _GLF_IDENTITY(_GLF_IDENTITY(64, (_GLF_IDENTITY(64, (64) / 1)) | (64)), 0 + (_GLF_IDENTITY(64, (64) / 1))), 0);
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || _GLF_IDENTITY((false), true && ((false)))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(_GLF_IDENTITY(float(-97766), (float(-97766)) + 0.0)), _GLF_FUZZED(-8174.4837)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))).y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 atomicStore(buf[_GLF_IDENTITY(next_virtual_gid, (next_virtual_gid) - 0u)], uint(read_1 + 1), 4, _GLF_IDENTITY(64, (_GLF_IDENTITY(64, ~ (_GLF_IDENTITY(_GLF_IDENTITY(~ _GLF_IDENTITY(_GLF_IDENTITY((64), 0 | ((_GLF_IDENTITY(64, (_GLF_IDENTITY(64, _GLF_IDENTITY(max(_GLF_IDENTITY(64, ~ (~ (64))), 64), min(max(_GLF_IDENTITY(64, ~ (~ (64))), 64), max(_GLF_IDENTITY(64, ~ (~ (64))), 64))))) ^ 0)))), (_GLF_IDENTITY((64), 0 | ((_GLF_IDENTITY(64, (_GLF_IDENTITY(64, max(64, 64))) ^ 0))))) | (_GLF_IDENTITY((64), 0 | ((_GLF_IDENTITY(64, (_GLF_IDENTITY(64, max(64, 64))) ^ 0)))))), 0 ^ (~ _GLF_IDENTITY(_GLF_IDENTITY((64), 0 | ((_GLF_IDENTITY(64, (_GLF_IDENTITY(64, max(64, 64))) ^ 0)))), (_GLF_IDENTITY((64), 0 | ((_GLF_IDENTITY(64, (_GLF_IDENTITY(64, max(64, 64))) ^ 0))))) | (_GLF_IDENTITY((64), 0 | ((_GLF_IDENTITY(64, (_GLF_IDENTITY(64, max(64, 64))) ^ 0)))))))), int(ivec3(~ _GLF_IDENTITY((64), 0 | ((_GLF_IDENTITY(64, (_GLF_IDENTITY(64, max(64, 64))) ^ 0)))), 0, 0)))))) | (_GLF_IDENTITY(0, int(int(0))) >> _GLF_IDENTITY(_GLF_IDENTITY(int(5), int(5)), (true ? _GLF_IDENTITY(int(_GLF_IDENTITY(_GLF_IDENTITY(5, (5) ^ 0), (_GLF_IDENTITY(5, (5) ^ 0)) ^ 0)), int(5)) : _GLF_FUZZED(-92470))))), 4);
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! _GLF_IDENTITY((_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, (false) && true)))), true && ((_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, (false) && true)))))), ! (! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, (false) && _GLF_IDENTITY(true, bool(_GLF_IDENTITY(bvec3(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true), bvec3(bvec4(_GLF_IDENTITY(bvec3(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true), bvec3(bvec4(bvec3(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true), true))), false))))))))), (! (_GLF_IDENTITY(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, (false) && true))), (_GLF_IDENTITY(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, (false) && true))), ! (! (_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, (false) && true))))))) || false))) || false))))), _GLF_IDENTITY(bool(bvec2((_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, (false) && true)))), true && ((_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, (false) && true)))))), ! (! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, (false) && _GLF_IDENTITY(true, bool(_GLF_IDENTITY(bvec3(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true), bvec3(bvec4(_GLF_IDENTITY(bvec3(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true), bvec3(bvec4(bvec3(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true), true))), false))))))))), (! (_GLF_IDENTITY(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, (false) && true))), (_GLF_IDENTITY(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, (false) && true))), ! (! (_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, (false) && true))))))) || false))) || false))))), false)), (bool(bvec2((_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, (false) && true)))), true && ((_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, (false) && true)))))), ! (! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, (false) && _GLF_IDENTITY(true, bool(_GLF_IDENTITY(bvec3(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true), bvec3(bvec4(_GLF_IDENTITY(bvec3(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true), bvec3(bvec4(bvec3(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true), true))), false))))))))), (! (_GLF_IDENTITY(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, (false) && true))), (_GLF_IDENTITY(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, (false) && true))), ! (! (_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, (false) && true))))))) || false))) || false))))), false))) && true)))) || false), (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (_GLF_IDENTITY(! (false), ! (! (! (false))))))))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(mat2x3(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), sqrt(1.0), 1.0, log(cos(0.0)), 1.0, 1.0)))))) || false)), bool(bvec2(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (_GLF_IDENTITY(! (false), ! (! (! (false))))))))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(mat2x3(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), sqrt(1.0), 1.0, log(cos(0.0)), 1.0, 1.0)))))) || false)), ! (! (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (_GLF_IDENTITY(! (false), ! (! (! (false))))))))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(mat2x3(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), sqrt(1.0), 1.0, log(cos(0.0)), 1.0, 1.0)))))) || false))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)), min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)), (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0))) - vec2(0.0, 0.0)), _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(-7365.8304, 0.1)) : injectionSwitch)) : _GLF_FUZZED(injectionSwitch)))), clamp((_GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(-7365.8304, 0.1)) : injectionSwitch)) : _GLF_FUZZED(injectionSwitch)))), _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(-7365.8304, 0.1)) : injectionSwitch)) : _GLF_FUZZED(injectionSwitch)))), (true ? _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(-7365.8304, 0.1)) : injectionSwitch)) : _GLF_FUZZED(injectionSwitch)))), min((_GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(-7365.8304, 0.1)) : injectionSwitch)) : _GLF_FUZZED(injectionSwitch)))), (_GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(-7365.8304, 0.1)) : injectionSwitch)) : _GLF_FUZZED(injectionSwitch)))))) : _GLF_FUZZED(injectionSwitch))), (_GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(-7365.8304, 0.1)) : injectionSwitch)) : _GLF_FUZZED(injectionSwitch)))))) * mat2(1.0)))).x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, float(_GLF_IDENTITY(mat3x4(injectionSwitch.y, _GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, (0.0) / sqrt(1.0)), 0.0)), _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 1.0, 1.0, _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), 1.0, _GLF_IDENTITY(0.0, float(_GLF_IDENTITY(float(0.0), max(float(0.0), float(0.0))))), determinant(mat2(0.0, 0.0, _GLF_IDENTITY(determinant(mat4(0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 1.0, 0.0, 0.0, 0.0, 0.0)), (determinant(mat4(0.0, 0.0, _GLF_IDENTITY(1.0, min(1.0, _GLF_IDENTITY(1.0, max(1.0, 1.0)))), 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0))) - 0.0), _GLF_IDENTITY(0.0, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(clamp(0.0, _GLF_IDENTITY(0.0, clamp(0.0, _GLF_IDENTITY(0.0, max(0.0, _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(float(188230u))), bool(false))))), 0.0)), 0.0), min(_GLF_IDENTITY(clamp(0.0, _GLF_IDENTITY(0.0, clamp(0.0, _GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, 1.0 * (_GLF_IDENTITY(0.0, max(0.0, 0.0)))), _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(float(188230u))), bool(false))))), 0.0)), 0.0), mix(float(_GLF_FUZZED(-2.3)), float(clamp(0.0, _GLF_IDENTITY(0.0, clamp(0.0, _GLF_IDENTITY(0.0, max(0.0, _GLF_IDENTITY(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(float(188230u))), bool(false))), (_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(float(188230u))), bool(false)))) - 0.0))), 0.0)), 0.0)), bool(true))), clamp(0.0, _GLF_IDENTITY(0.0, clamp(0.0, _GLF_IDENTITY(0.0, max(0.0, _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(float(188230u))), bool(false))))), _GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, 1.0 * (0.0)), _GLF_IDENTITY(0.0, max(0.0, 0.0)), _GLF_IDENTITY(0.0, max(0.0, 0.0)))))), 0.0))), float(vec4(clamp(0.0, _GLF_IDENTITY(0.0, clamp(0.0, _GLF_IDENTITY(0.0, max(0.0, _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(float(188230u))), bool(false))))), 0.0)), 0.0), 0.0, 0.0, 0.0))), float(mat3x2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(clamp(0.0, _GLF_IDENTITY(0.0, clamp(0.0, _GLF_IDENTITY(0.0, max(0.0, _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(float(188230u))), bool(false))))), 0.0)), 0.0), min(_GLF_IDENTITY(clamp(0.0, _GLF_IDENTITY(0.0, clamp(0.0, _GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, 1.0 * (_GLF_IDENTITY(0.0, max(0.0, 0.0)))), _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(float(188230u))), bool(false))))), 0.0)), 0.0), mix(float(_GLF_FUZZED(-2.3)), float(clamp(0.0, _GLF_IDENTITY(0.0, clamp(0.0, _GLF_IDENTITY(0.0, max(0.0, _GLF_IDENTITY(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(float(188230u))), bool(false))), (_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(float(188230u))), bool(false)))) - 0.0))), 0.0)), 0.0)), bool(true))), clamp(0.0, _GLF_IDENTITY(0.0, clamp(0.0, _GLF_IDENTITY(0.0, max(0.0, _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(float(188230u))), bool(false))))), _GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, 1.0 * (0.0)), _GLF_IDENTITY(0.0, max(0.0, 0.0)), _GLF_IDENTITY(0.0, max(0.0, 0.0)))))), 0.0))), float(vec4(clamp(0.0, _GLF_IDENTITY(0.0, clamp(0.0, _GLF_IDENTITY(0.0, max(0.0, _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(float(188230u))), bool(false))))), 0.0)), 0.0), 0.0, 0.0, 0.0))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(clamp(0.0, _GLF_IDENTITY(0.0, clamp(0.0, _GLF_IDENTITY(0.0, max(0.0, _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(float(188230u))), bool(false))))), 0.0)), 0.0), min(_GLF_IDENTITY(clamp(0.0, _GLF_IDENTITY(0.0, clamp(0.0, _GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, 1.0 * (_GLF_IDENTITY(0.0, max(0.0, 0.0)))), _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(float(188230u))), bool(false))))), 0.0)), 0.0), mix(float(_GLF_FUZZED(-2.3)), float(clamp(0.0, _GLF_IDENTITY(0.0, clamp(0.0, _GLF_IDENTITY(0.0, max(0.0, _GLF_IDENTITY(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(float(188230u))), bool(false))), (_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(float(188230u))), bool(false)))) - 0.0))), 0.0)), 0.0)), bool(true))), clamp(0.0, _GLF_IDENTITY(0.0, clamp(0.0, _GLF_IDENTITY(0.0, max(0.0, _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(float(188230u))), bool(false))))), _GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, 1.0 * (0.0)), _GLF_IDENTITY(0.0, max(0.0, 0.0)), _GLF_IDENTITY(0.0, max(0.0, 0.0)))))), 0.0))), float(vec4(clamp(0.0, _GLF_IDENTITY(0.0, clamp(0.0, _GLF_IDENTITY(0.0, max(0.0, _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(float(188230u))), bool(false))))), 0.0)), 0.0), 0.0, 0.0, 0.0))), _GLF_IDENTITY(_GLF_IDENTITY(clamp(0.0, _GLF_IDENTITY(0.0, clamp(0.0, _GLF_IDENTITY(0.0, max(0.0, _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(float(188230u))), bool(false))))), 0.0)), 0.0), min(_GLF_IDENTITY(clamp(0.0, _GLF_IDENTITY(0.0, clamp(0.0, _GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, 1.0 * (_GLF_IDENTITY(0.0, max(0.0, 0.0)))), _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(float(188230u))), bool(false))))), 0.0)), 0.0), mix(float(_GLF_FUZZED(-2.3)), float(clamp(0.0, _GLF_IDENTITY(0.0, clamp(0.0, _GLF_IDENTITY(0.0, max(0.0, _GLF_IDENTITY(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(float(188230u))), bool(false))), (_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(float(188230u))), bool(false)))) - 0.0))), 0.0)), 0.0)), bool(true))), clamp(0.0, _GLF_IDENTITY(0.0, clamp(0.0, _GLF_IDENTITY(0.0, max(0.0, _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(float(188230u))), bool(false))))), _GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, 1.0 * (0.0)), _GLF_IDENTITY(0.0, max(0.0, 0.0)), _GLF_IDENTITY(0.0, max(0.0, 0.0)))))), 0.0))), float(vec4(clamp(0.0, _GLF_IDENTITY(0.0, clamp(0.0, _GLF_IDENTITY(0.0, max(0.0, _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(float(188230u))), bool(false))))), 0.0)), 0.0), 0.0, 0.0, 0.0))), _GLF_IDENTITY(_GLF_IDENTITY(clamp(0.0, _GLF_IDENTITY(0.0, clamp(0.0, _GLF_IDENTITY(0.0, max(0.0, _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(float(188230u))), bool(false))))), 0.0)), 0.0), min(_GLF_IDENTITY(clamp(0.0, _GLF_IDENTITY(0.0, clamp(0.0, _GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, 1.0 * (_GLF_IDENTITY(0.0, max(0.0, 0.0)))), _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(float(188230u))), bool(false))))), 0.0)), 0.0), mix(float(_GLF_FUZZED(-2.3)), float(clamp(0.0, _GLF_IDENTITY(0.0, clamp(0.0, _GLF_IDENTITY(0.0, max(0.0, _GLF_IDENTITY(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(float(188230u))), bool(false))), (_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(float(188230u))), bool(false)))) - 0.0))), 0.0)), 0.0)), bool(true))), clamp(0.0, _GLF_IDENTITY(0.0, clamp(0.0, _GLF_IDENTITY(0.0, max(0.0, _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(float(188230u))), bool(false))))), _GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, 1.0 * (0.0)), _GLF_IDENTITY(0.0, max(0.0, 0.0)), _GLF_IDENTITY(0.0, max(0.0, 0.0)))))), 0.0))), float(vec4(clamp(0.0, _GLF_IDENTITY(0.0, clamp(0.0, _GLF_IDENTITY(0.0, max(0.0, _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(float(188230u))), bool(false))))), 0.0)), 0.0), 0.0, 0.0, 0.0))))), 1.0, 1.0, 1.0, abs(1.0), 0.0)))))), 0.0, determinant(mat2(1.0, _GLF_IDENTITY(0.0, (0.0) / _GLF_ONE(1.0, injectionSwitch.y)), 0.0, 1.0)), 1.0), (false ? _GLF_FUZZED(mat3x4(_GLF_IDENTITY(360.199, (360.199) / 1.0), _GLF_IDENTITY(-0.0, _GLF_IDENTITY(float(mat3x4(_GLF_IDENTITY(-0.0, max(-0.0, -0.0)), 0.0, 0.0, 1.0, _GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0))) / 1.0), exp(0.0), round(length(normalize(vec2(1.0, 1.0)))), 0.0, 0.0, 1.0, sqrt(1.0), 0.0)), clamp(float(mat3x4(_GLF_IDENTITY(-0.0, max(-0.0, -0.0)), 0.0, 0.0, 1.0, _GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0))) / 1.0), exp(0.0), round(length(normalize(vec2(1.0, 1.0)))), 0.0, 0.0, 1.0, sqrt(1.0), 0.0)), float(mat3x4(_GLF_IDENTITY(-0.0, max(-0.0, -0.0)), 0.0, 0.0, 1.0, _GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0))) / 1.0), exp(0.0), round(length(normalize(vec2(1.0, 1.0)))), 0.0, 0.0, 1.0, sqrt(1.0), 0.0)), _GLF_IDENTITY(float(mat3x4(_GLF_IDENTITY(-0.0, max(-0.0, -0.0)), 0.0, 0.0, 1.0, _GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0))) / 1.0), exp(0.0), round(length(normalize(vec2(1.0, 1.0)))), 0.0, 0.0, 1.0, sqrt(1.0), 0.0)), float(mat2x3(float(mat3x4(_GLF_IDENTITY(-0.0, max(-0.0, -0.0)), 0.0, 0.0, 1.0, _GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0))) / 1.0), exp(0.0), round(length(normalize(vec2(1.0, 1.0)))), 0.0, 0.0, 1.0, sqrt(1.0), 0.0)), 0.0, 0.0, 0.0, 1.0, 0.0)))))), -2.2, -1.7, -53.98, -7864.4268, 0.6, -6.7, 5.6, 3.1, 0.6, 433.154)) : mat3x4(injectionSwitch.y, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, determinant(mat2(0.0, 0.0, determinant(mat4(0.0, 0.0, 1.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-716.150)), bool(false))), _GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED((+ (0.5 / 7.8)))), float(_GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(-204.266) : _GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0, 0.0))))), bool(true)))) * 1.0))), _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(856.936) : 0.0)), 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0)), 0.0)), 0.0, determinant(mat2(1.0, 0.0, 0.0, 1.0)), 1.0))))), (false ? _GLF_FUZZED(-32.52) : _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY((_GLF_IDENTITY(true ? _GLF_IDENTITY(injectionSwitch.y, float(float(injectionSwitch.y))) : _GLF_FUZZED(_GLF_IDENTITY(-5.3, (-5.3) - 0.0)), min(true ? _GLF_IDENTITY(injectionSwitch.y, float(float(injectionSwitch.y))) : _GLF_FUZZED(-5.3), true ? _GLF_IDENTITY(injectionSwitch.y, float(float(injectionSwitch.y))) : _GLF_FUZZED(-5.3)))), _GLF_IDENTITY(mix(float((_GLF_IDENTITY(true ? _GLF_IDENTITY(injectionSwitch.y, float(float(injectionSwitch.y))) : _GLF_FUZZED(_GLF_IDENTITY(-5.3, clamp(-5.3, -5.3, -5.3))), min(true ? _GLF_IDENTITY(injectionSwitch.y, float(float(injectionSwitch.y))) : _GLF_FUZZED(-5.3), true ? _GLF_IDENTITY(injectionSwitch.y, float(float(injectionSwitch.y))) : _GLF_FUZZED(-5.3))))), float(_GLF_FUZZED(7670.9494)), bool(false)), _GLF_IDENTITY(float(_GLF_IDENTITY(vec4(mix(float((_GLF_IDENTITY(true ? _GLF_IDENTITY(injectionSwitch.y, float(float(injectionSwitch.y))) : _GLF_FUZZED(-5.3), min(true ? _GLF_IDENTITY(injectionSwitch.y, float(float(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0)))))) : _GLF_FUZZED(-5.3), true ? _GLF_IDENTITY(injectionSwitch.y, float(float(injectionSwitch.y))) : _GLF_IDENTITY(_GLF_FUZZED(-5.3), (_GLF_IDENTITY(_GLF_FUZZED(-5.3), min(_GLF_IDENTITY(_GLF_FUZZED(-5.3), (_GLF_FUZZED(-5.3)) * 1.0), _GLF_FUZZED(-5.3)))) * cos(0.0)))))), float(_GLF_FUZZED(7670.9494)), bool(false)), 1.0, 1.0, 0.0), mat4(1.0) * (vec4(mix(float((_GLF_IDENTITY(true ? _GLF_IDENTITY(injectionSwitch.y, float(float(injectionSwitch.y))) : _GLF_FUZZED(-5.3), min(true ? _GLF_IDENTITY(injectionSwitch.y, float(float(injectionSwitch.y))) : _GLF_FUZZED(-5.3), true ? _GLF_IDENTITY(injectionSwitch.y, float(float(injectionSwitch.y))) : _GLF_FUZZED(-5.3))))), float(_GLF_FUZZED(7670.9494)), bool(false)), 1.0, 1.0, 0.0)))), _GLF_IDENTITY(float(mat2x3(_GLF_IDENTITY(float(_GLF_IDENTITY(_GLF_IDENTITY(vec4(mix(float((_GLF_IDENTITY(true ? _GLF_IDENTITY(injectionSwitch.y, float(float(injectionSwitch.y))) : _GLF_FUZZED(-5.3), min(true ? _GLF_IDENTITY(injectionSwitch.y, float(float(injectionSwitch.y))) : _GLF_FUZZED(-5.3), true ? _GLF_IDENTITY(injectionSwitch.y, float(float(injectionSwitch.y))) : _GLF_FUZZED(-5.3))))), float(_GLF_FUZZED(7670.9494)), bool(false)), 1.0, 1.0, 0.0), mat4(1.0) * (vec4(mix(float((_GLF_IDENTITY(true ? _GLF_IDENTITY(injectionSwitch.y, float(float(injectionSwitch.y))) : _GLF_FUZZED(-5.3), min(true ? _GLF_IDENTITY(injectionSwitch.y, float(float(injectionSwitch.y))) : _GLF_FUZZED(-5.3), true ? _GLF_IDENTITY(injectionSwitch.y, float(float(injectionSwitch.y))) : _GLF_FUZZED(-5.3))))), float(_GLF_FUZZED(7670.9494)), bool(false)), 1.0, 1.0, 0.0))), (_GLF_IDENTITY(_GLF_IDENTITY(vec4(mix(float((_GLF_IDENTITY(true ? _GLF_IDENTITY(injectionSwitch.y, float(float(injectionSwitch.y))) : _GLF_FUZZED(-5.3), min(true ? _GLF_IDENTITY(injectionSwitch.y, float(float(injectionSwitch.y))) : _GLF_FUZZED(-5.3), true ? _GLF_IDENTITY(injectionSwitch.y, float(float(injectionSwitch.y))) : _GLF_FUZZED(-5.3))))), float(_GLF_FUZZED(7670.9494)), bool(false)), 1.0, 1.0, 0.0), mat4(1.0) * (vec4(mix(float((_GLF_IDENTITY(true ? _GLF_IDENTITY(injectionSwitch.y, float(float(injectionSwitch.y))) : _GLF_FUZZED(-5.3), min(true ? _GLF_IDENTITY(injectionSwitch.y, float(float(injectionSwitch.y))) : _GLF_FUZZED(-5.3), true ? _GLF_IDENTITY(injectionSwitch.y, float(float(injectionSwitch.y))) : _GLF_FUZZED(-5.3))))), float(_GLF_FUZZED(7670.9494)), bool(false)), 1.0, 1.0, 0.0))), min(_GLF_IDENTITY(_GLF_IDENTITY(vec4(mix(float((_GLF_IDENTITY(true ? _GLF_IDENTITY(injectionSwitch.y, float(float(injectionSwitch.y))) : _GLF_FUZZED(-5.3), min(true ? _GLF_IDENTITY(injectionSwitch.y, float(float(injectionSwitch.y))) : _GLF_FUZZED(-5.3), true ? _GLF_IDENTITY(injectionSwitch.y, float(float(injectionSwitch.y))) : _GLF_FUZZED(-5.3))))), float(_GLF_FUZZED(7670.9494)), bool(false)), 1.0, 1.0, 0.0), mat4(1.0) * (vec4(mix(float((_GLF_IDENTITY(true ? _GLF_IDENTITY(injectionSwitch.y, float(float(injectionSwitch.y))) : _GLF_FUZZED(-5.3), min(true ? _GLF_IDENTITY(injectionSwitch.y, float(float(injectionSwitch.y))) : _GLF_FUZZED(-5.3), true ? _GLF_IDENTITY(injectionSwitch.y, float(float(injectionSwitch.y))) : _GLF_FUZZED(-5.3))))), float(_GLF_FUZZED(7670.9494)), bool(false)), 1.0, 1.0, 0.0))), mix(vec4(_GLF_FUZZED(67.57), _GLF_FUZZED(-69.25), _GLF_FUZZED(810.802), _GLF_FUZZED(-3.6)), vec4((_GLF_IDENTITY(vec4(mix(float((_GLF_IDENTITY(true ? _GLF_IDENTITY(injectionSwitch.y, float(float(injectionSwitch.y))) : _GLF_FUZZED(-5.3), min(true ? _GLF_IDENTITY(injectionSwitch.y, float(float(injectionSwitch.y))) : _GLF_FUZZED(-5.3), true ? _GLF_IDENTITY(injectionSwitch.y, float(float(injectionSwitch.y))) : _GLF_FUZZED(-5.3))))), float(_GLF_FUZZED(7670.9494)), bool(false)), 1.0, 1.0, 0.0), mat4(1.0) * (vec4(mix(float((_GLF_IDENTITY(true ? _GLF_IDENTITY(injectionSwitch.y, float(float(injectionSwitch.y))) : _GLF_FUZZED(-5.3), min(true ? _GLF_IDENTITY(injectionSwitch.y, float(float(injectionSwitch.y))) : _GLF_FUZZED(-5.3), true ? _GLF_IDENTITY(injectionSwitch.y, float(float(injectionSwitch.y))) : _GLF_FUZZED(-5.3))))), float(_GLF_FUZZED(7670.9494)), bool(false)), 1.0, 1.0, 0.0))))[0], (_GLF_IDENTITY(vec4(mix(float((_GLF_IDENTITY(true ? _GLF_IDENTITY(injectionSwitch.y, float(float(injectionSwitch.y))) : _GLF_FUZZED(-5.3), min(true ? _GLF_IDENTITY(injectionSwitch.y, float(float(injectionSwitch.y))) : _GLF_FUZZED(-5.3), true ? _GLF_IDENTITY(injectionSwitch.y, float(float(injectionSwitch.y))) : _GLF_FUZZED(-5.3))))), float(_GLF_FUZZED(7670.9494)), bool(false)), 1.0, 1.0, 0.0), mat4(1.0) * (vec4(mix(float((_GLF_IDENTITY(true ? _GLF_IDENTITY(injectionSwitch.y, float(float(injectionSwitch.y))) : _GLF_FUZZED(-5.3), min(true ? _GLF_IDENTITY(injectionSwitch.y, float(float(injectionSwitch.y))) : _GLF_FUZZED(-5.3), true ? _GLF_IDENTITY(injectionSwitch.y, float(float(injectionSwitch.y))) : _GLF_FUZZED(-5.3))))), float(_GLF_FUZZED(7670.9494)), bool(false)), 1.0, 1.0, 0.0))))[1], (_GLF_IDENTITY(vec4(mix(float((_GLF_IDENTITY(true ? _GLF_IDENTITY(injectionSwitch.y, float(float(injectionSwitch.y))) : _GLF_FUZZED(-5.3), min(true ? _GLF_IDENTITY(injectionSwitch.y, float(float(injectionSwitch.y))) : _GLF_FUZZED(-5.3), true ? _GLF_IDENTITY(injectionSwitch.y, float(float(injectionSwitch.y))) : _GLF_FUZZED(-5.3))))), float(_GLF_FUZZED(7670.9494)), bool(false)), 1.0, 1.0, 0.0), mat4(1.0) * (vec4(mix(float((_GLF_IDENTITY(true ? _GLF_IDENTITY(injectionSwitch.y, float(float(injectionSwitch.y))) : _GLF_FUZZED(-5.3), min(true ? _GLF_IDENTITY(injectionSwitch.y, float(float(injectionSwitch.y))) : _GLF_FUZZED(-5.3), true ? _GLF_IDENTITY(injectionSwitch.y, float(float(injectionSwitch.y))) : _GLF_FUZZED(-5.3))))), float(_GLF_FUZZED(7670.9494)), bool(false)), 1.0, 1.0, 0.0))))[2], (_GLF_IDENTITY(vec4(mix(float((_GLF_IDENTITY(true ? _GLF_IDENTITY(injectionSwitch.y, float(float(injectionSwitch.y))) : _GLF_FUZZED(-5.3), min(true ? _GLF_IDENTITY(injectionSwitch.y, float(float(injectionSwitch.y))) : _GLF_FUZZED(-5.3), true ? _GLF_IDENTITY(injectionSwitch.y, float(float(injectionSwitch.y))) : _GLF_FUZZED(-5.3))))), float(_GLF_FUZZED(7670.9494)), bool(false)), 1.0, 1.0, 0.0), mat4(1.0) * (vec4(mix(float((_GLF_IDENTITY(true ? _GLF_IDENTITY(injectionSwitch.y, float(float(injectionSwitch.y))) : _GLF_FUZZED(-5.3), min(true ? _GLF_IDENTITY(injectionSwitch.y, float(float(injectionSwitch.y))) : _GLF_FUZZED(-5.3), true ? _GLF_IDENTITY(injectionSwitch.y, float(float(injectionSwitch.y))) : _GLF_FUZZED(-5.3))))), float(_GLF_FUZZED(7670.9494)), bool(false)), 1.0, 1.0, 0.0))))[3]), bvec4(true, true, true, true))), _GLF_IDENTITY(vec4(mix(float((_GLF_IDENTITY(true ? _GLF_IDENTITY(injectionSwitch.y, float(float(injectionSwitch.y))) : _GLF_FUZZED(-5.3), min(true ? _GLF_IDENTITY(injectionSwitch.y, float(float(injectionSwitch.y))) : _GLF_FUZZED(-5.3), true ? _GLF_IDENTITY(injectionSwitch.y, float(float(injectionSwitch.y))) : _GLF_FUZZED(-5.3))))), float(_GLF_FUZZED(7670.9494)), bool(false)), 1.0, 1.0, 0.0), mat4(1.0) * (vec4(mix(float((_GLF_IDENTITY(true ? _GLF_IDENTITY(injectionSwitch.y, float(float(injectionSwitch.y))) : _GLF_FUZZED(-5.3), min(true ? _GLF_IDENTITY(injectionSwitch.y, float(float(injectionSwitch.y))) : _GLF_FUZZED(-5.3), true ? _GLF_IDENTITY(injectionSwitch.y, float(float(injectionSwitch.y))) : _GLF_FUZZED(-5.3))))), float(_GLF_FUZZED(7670.9494)), bool(false)), 1.0, 1.0, 0.0)))))) / exp(vec4(0.0, 0.0, 0.0, 0.0)))), min(float(_GLF_IDENTITY(vec4(mix(float((_GLF_IDENTITY(true ? _GLF_IDENTITY(injectionSwitch.y, float(float(injectionSwitch.y))) : _GLF_FUZZED(-5.3), min(_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bool(true)), true && (bool(bool(true))))) ? _GLF_IDENTITY(injectionSwitch.y, float(float(injectionSwitch.y))) : _GLF_FUZZED(-5.3), true ? _GLF_IDENTITY(injectionSwitch.y, float(float(injectionSwitch.y))) : _GLF_FUZZED(-5.3))))), float(_GLF_FUZZED(7670.9494)), bool(false)), 1.0, 1.0, 0.0), mat4(1.0) * (vec4(mix(float((_GLF_IDENTITY(true ? _GLF_IDENTITY(injectionSwitch.y, float(float(injectionSwitch.y))) : _GLF_FUZZED(-5.3), min(true ? _GLF_IDENTITY(injectionSwitch.y, float(float(_GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))) - 0.0)))) : _GLF_FUZZED(-5.3), true ? _GLF_IDENTITY(injectionSwitch.y, float(float(injectionSwitch.y))) : _GLF_FUZZED(-5.3))))), float(_GLF_FUZZED(7670.9494)), bool(false)), 1.0, 1.0, 0.0)))), _GLF_IDENTITY(float(_GLF_IDENTITY(vec4(mix(float((_GLF_IDENTITY(true ? _GLF_IDENTITY(injectionSwitch.y, float(float(injectionSwitch.y))) : _GLF_FUZZED(-5.3), min(true ? _GLF_IDENTITY(injectionSwitch.y, float(float(injectionSwitch.y))) : _GLF_FUZZED(-5.3), true ? _GLF_IDENTITY(injectionSwitch.y, float(float(injectionSwitch.y))) : _GLF_FUZZED(-5.3))))), float(_GLF_FUZZED(7670.9494)), bool(false)), 1.0, 1.0, 0.0), _GLF_IDENTITY(mat4(1.0) * (vec4(mix(float((_GLF_IDENTITY(true ? _GLF_IDENTITY(injectionSwitch.y, float(float(injectionSwitch.y))) : _GLF_FUZZED(-5.3), min(true ? _GLF_IDENTITY(injectionSwitch.y, float(float(injectionSwitch.y))) : _GLF_FUZZED(-5.3), true ? _GLF_IDENTITY(injectionSwitch.y, float(float(injectionSwitch.y))) : _GLF_FUZZED(-5.3))))), float(_GLF_FUZZED(7670.9494)), bool(false)), 1.0, 1.0, 0.0)), vec4(mat4x2(_GLF_IDENTITY(mat4(1.0) * (vec4(mix(float((_GLF_IDENTITY(true ? _GLF_IDENTITY(injectionSwitch.y, float(float(injectionSwitch.y))) : _GLF_FUZZED(-5.3), min(true ? _GLF_IDENTITY(injectionSwitch.y, float(float(injectionSwitch.y))) : _GLF_FUZZED(-5.3), true ? _GLF_IDENTITY(injectionSwitch.y, float(float(injectionSwitch.y))) : _GLF_FUZZED(-5.3))))), float(_GLF_FUZZED(7670.9494)), bool(false)), 1.0, 1.0, 0.0)), max(mat4(1.0) * (vec4(mix(float((_GLF_IDENTITY(true ? _GLF_IDENTITY(injectionSwitch.y, float(float(injectionSwitch.y))) : _GLF_FUZZED(-5.3), min(true ? _GLF_IDENTITY(injectionSwitch.y, float(float(injectionSwitch.y))) : _GLF_FUZZED(-5.3), true ? _GLF_IDENTITY(injectionSwitch.y, float(float(injectionSwitch.y))) : _GLF_FUZZED(-5.3))))), float(_GLF_FUZZED(7670.9494)), bool(false)), 1.0, 1.0, 0.0)), mat4(1.0) * (vec4(mix(float((_GLF_IDENTITY(true ? _GLF_IDENTITY(injectionSwitch.y, float(float(injectionSwitch.y))) : _GLF_FUZZED(-5.3), min(true ? _GLF_IDENTITY(injectionSwitch.y, float(float(injectionSwitch.y))) : _GLF_FUZZED(-5.3), true ? _GLF_IDENTITY(injectionSwitch.y, float(float(injectionSwitch.y))) : _GLF_FUZZED(-5.3))))), float(_GLF_FUZZED(7670.9494)), bool(false)), 1.0, 1.0, 0.0)))), 1.0, 1.0, determinant(mat3(1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0)), _GLF_ZERO(0.0, injectionSwitch.x)))))), (true ? float(_GLF_IDENTITY(vec4(mix(float((_GLF_IDENTITY(true ? _GLF_IDENTITY(injectionSwitch.y, float(float(injectionSwitch.y))) : _GLF_FUZZED(-5.3), min(true ? _GLF_IDENTITY(injectionSwitch.y, float(float(injectionSwitch.y))) : _GLF_FUZZED(-5.3), true ? _GLF_IDENTITY(injectionSwitch.y, float(float(injectionSwitch.y))) : _GLF_FUZZED(-5.3))))), float(_GLF_FUZZED(7670.9494)), bool(false)), 1.0, 1.0, 0.0), _GLF_IDENTITY(mat4(1.0) * (vec4(mix(float((_GLF_IDENTITY(true ? _GLF_IDENTITY(injectionSwitch.y, float(float(injectionSwitch.y))) : _GLF_FUZZED(-5.3), min(true ? _GLF_IDENTITY(injectionSwitch.y, float(float(injectionSwitch.y))) : _GLF_FUZZED(-5.3), true ? _GLF_IDENTITY(injectionSwitch.y, float(float(injectionSwitch.y))) : _GLF_FUZZED(-5.3))))), float(_GLF_FUZZED(7670.9494)), bool(false)), 1.0, 1.0, 0.0)), vec4(mat4x2(_GLF_IDENTITY(mat4(1.0) * (vec4(mix(float((_GLF_IDENTITY(true ? _GLF_IDENTITY(injectionSwitch.y, float(float(injectionSwitch.y))) : _GLF_FUZZED(-5.3), min(true ? _GLF_IDENTITY(injectionSwitch.y, float(float(injectionSwitch.y))) : _GLF_FUZZED(-5.3), true ? _GLF_IDENTITY(injectionSwitch.y, float(float(injectionSwitch.y))) : _GLF_FUZZED(-5.3))))), float(_GLF_FUZZED(7670.9494)), bool(false)), 1.0, 1.0, 0.0)), max(mat4(1.0) * (vec4(mix(float((_GLF_IDENTITY(true ? _GLF_IDENTITY(injectionSwitch.y, float(float(injectionSwitch.y))) : _GLF_FUZZED(-5.3), min(true ? _GLF_IDENTITY(injectionSwitch.y, float(float(injectionSwitch.y))) : _GLF_FUZZED(-5.3), true ? _GLF_IDENTITY(injectionSwitch.y, float(float(injectionSwitch.y))) : _GLF_FUZZED(-5.3))))), float(_GLF_FUZZED(7670.9494)), bool(false)), 1.0, 1.0, 0.0)), mat4(1.0) * (vec4(mix(float((_GLF_IDENTITY(true ? _GLF_IDENTITY(injectionSwitch.y, float(float(injectionSwitch.y))) : _GLF_FUZZED(-5.3), min(true ? _GLF_IDENTITY(injectionSwitch.y, float(float(injectionSwitch.y))) : _GLF_FUZZED(-5.3), true ? _GLF_IDENTITY(injectionSwitch.y, float(float(injectionSwitch.y))) : _GLF_FUZZED(-5.3))))), float(_GLF_FUZZED(7670.9494)), bool(false)), 1.0, 1.0, 0.0)))), 1.0, 1.0, determinant(mat3(1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0)), _GLF_ZERO(0.0, injectionSwitch.x)))))) : _GLF_FUZZED(cosh(cos(0.3))))))), 0.0, 0.0, 0.0, 1.0, 0.0)), (true ? float(mat2x3(_GLF_IDENTITY(float(_GLF_IDENTITY(vec4(mix(float((_GLF_IDENTITY(true ? _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, float(mat4x3(injectionSwitch.y, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0))), float(float(injectionSwitch.y))) : _GLF_FUZZED(-5.3), min(true ? _GLF_IDENTITY(injectionSwitch.y, float(float(injectionSwitch.y))) : _GLF_FUZZED(-5.3), true ? _GLF_IDENTITY(injectionSwitch.y, float(float(injectionSwitch.y))) : _GLF_FUZZED(-5.3))))), float(_GLF_FUZZED(7670.9494)), bool(false)), 1.0, 1.0, 0.0), mat4(1.0) * (vec4(mix(float((_GLF_IDENTITY(true ? _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(mat2x3(injectionSwitch, 1.0, 1.0, 0.0, 1.0))).y, float(float(injectionSwitch.y))) : _GLF_FUZZED(-5.3), min(true ? _GLF_IDENTITY(injectionSwitch.y, float(float(injectionSwitch.y))) : _GLF_FUZZED(-5.3), true ? _GLF_IDENTITY(injectionSwitch.y, float(float(injectionSwitch.y))) : _GLF_FUZZED(-5.3))))), float(_GLF_FUZZED(7670.9494)), bool(false)), 1.0, 1.0, 0.0)))), min(float(_GLF_IDENTITY(vec4(mix(float((_GLF_IDENTITY(true ? _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(float(injectionSwitch.y)), max(_GLF_IDENTITY(float(float(injectionSwitch.y)), float(mat2(float(float(injectionSwitch.y)), 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0))), _GLF_IDENTITY(float(float(injectionSwitch.y)), (false ? _GLF_FUZZED(-833.282) : float(float(injectionSwitch.y))))))) : _GLF_FUZZED(-5.3), min(true ? _GLF_IDENTITY(injectionSwitch.y, float(float(injectionSwitch.y))) : _GLF_FUZZED(-5.3), true ? _GLF_IDENTITY(injectionSwitch.y, float(float(injectionSwitch.y))) : _GLF_FUZZED(-5.3))))), float(_GLF_FUZZED(7670.9494)), bool(false)), 1.0, 1.0, 0.0), mat4(1.0) * (vec4(mix(float((_GLF_IDENTITY(true ? _GLF_IDENTITY(injectionSwitch.y, float(float(injectionSwitch.y))) : _GLF_FUZZED(-5.3), min(true ? _GLF_IDENTITY(injectionSwitch.y, float(float(injectionSwitch.y))) : _GLF_FUZZED(-5.3), true ? _GLF_IDENTITY(injectionSwitch.y, float(float(injectionSwitch.y))) : _GLF_FUZZED(-5.3))))), float(_GLF_FUZZED(7670.9494)), bool(false)), 1.0, 1.0, 0.0)))), float(_GLF_IDENTITY(vec4(mix(float((_GLF_IDENTITY(true ? _GLF_IDENTITY(injectionSwitch.y, float(float(injectionSwitch.y))) : _GLF_FUZZED(-5.3), min(true ? _GLF_IDENTITY(injectionSwitch.y, float(float(injectionSwitch.y))) : _GLF_FUZZED(-5.3), true ? _GLF_IDENTITY(injectionSwitch.y, float(float(injectionSwitch.y))) : _GLF_FUZZED(-5.3))))), float(_GLF_FUZZED(7670.9494)), bool(false)), 1.0, 1.0, 0.0), mat4(1.0) * (vec4(mix(_GLF_IDENTITY(float((_GLF_IDENTITY(true ? _GLF_IDENTITY(injectionSwitch.y, float(float(injectionSwitch.y))) : _GLF_FUZZED(-5.3), min(true ? _GLF_IDENTITY(injectionSwitch.y, float(float(injectionSwitch.y))) : _GLF_FUZZED(-5.3), true ? _GLF_IDENTITY(injectionSwitch.y, float(float(injectionSwitch.y))) : _GLF_FUZZED(-5.3))))), max(float((_GLF_IDENTITY(true ? _GLF_IDENTITY(injectionSwitch.y, float(float(injectionSwitch.y))) : _GLF_FUZZED(-5.3), min(true ? _GLF_IDENTITY(injectionSwitch.y, float(float(injectionSwitch.y))) : _GLF_FUZZED(-5.3), true ? _GLF_IDENTITY(injectionSwitch.y, float(float(injectionSwitch.y))) : _GLF_FUZZED(-5.3))))), float((_GLF_IDENTITY(true ? _GLF_IDENTITY(injectionSwitch.y, float(float(injectionSwitch.y))) : _GLF_FUZZED(-5.3), min(true ? _GLF_IDENTITY(injectionSwitch.y, float(float(injectionSwitch.y))) : _GLF_FUZZED(-5.3), true ? _GLF_IDENTITY(injectionSwitch.y, float(float(injectionSwitch.y))) : _GLF_FUZZED(-5.3))))))), float(_GLF_FUZZED(7670.9494)), bool(false)), 1.0, 1.0, 0.0)))))), 0.0, 0.0, 0.0, 1.0, 0.0)) : _GLF_FUZZED(-4.6)))))))))))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)) : _GLF_FUZZED(_GLF_IDENTITY(vec2(-36.38, 710.355), vec2(_GLF_IDENTITY(mat4x2(_GLF_IDENTITY(vec2(-36.38, 710.355), vec2(mat4x2(_GLF_IDENTITY(vec2(-36.38, 710.355), clamp(vec2(-36.38, 710.355), vec2(-36.38, 710.355), vec2(-36.38, 710.355))), sqrt(1.0), 0.0, 1.0, 0.0, 1.0, 1.0))), 0.0, 0.0, 1.0, exp(0.0), 1.0, _GLF_ZERO(0.0, injectionSwitch.x)), (true ? _GLF_IDENTITY(mat4x2(_GLF_IDENTITY(vec2(-36.38, 710.355), vec2(mat4x2(_GLF_IDENTITY(vec2(-36.38, 710.355), clamp(vec2(-36.38, 710.355), vec2(-36.38, 710.355), vec2(-36.38, 710.355))), sqrt(1.0), 0.0, 1.0, 0.0, 1.0, 1.0))), 0.0, 0.0, 1.0, exp(0.0), 1.0, _GLF_ZERO(0.0, injectionSwitch.x)), (false ? _GLF_FUZZED(mat4x2(-56.92, -2171.0121, 9.8, -6.3, 7.5, 6.1, 4948.1853, 22.60)) : mat4x2(_GLF_IDENTITY(vec2(-36.38, 710.355), vec2(mat4x2(_GLF_IDENTITY(vec2(-36.38, 710.355), clamp(vec2(-36.38, 710.355), vec2(-36.38, 710.355), vec2(-36.38, 710.355))), sqrt(1.0), 0.0, 1.0, 0.0, 1.0, 1.0))), 0.0, 0.0, 1.0, exp(0.0), 1.0, _GLF_ZERO(0.0, injectionSwitch.x)))) : _GLF_FUZZED(mat4x2(931.220, -7.1, 85.03, 8.8, -4.2, 47.16, -9.1, -110.213))))))))).x > injectionSwitch.y)))))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 uint read_2 = atomicLoad(buf[virtual_gid], 4, _GLF_IDENTITY(_GLF_IDENTITY(64, max(64, 64)), _GLF_IDENTITY((64), 0 + (_GLF_IDENTITY((64), 0 + ((64))))) ^ 0), _GLF_IDENTITY(_GLF_IDENTITY(0, (false ? _GLF_FUZZED(-90862) : 0)), ~ (~ (_GLF_IDENTITY(0, (0) ^ 0)))));
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + _GLF_IDENTITY(dot(vec4(0.0, 1.0, 1.0, 1.0), vec4(1.0, 0.0, 0.0, 0.0)), dot(vec4(0.0, 1.0, 1.0, 1.0), vec4(1.0, 0.0, 0.0, 0.0)))))), (injectionSwitch.x) - _GLF_IDENTITY(determinant(mat2(0.0, _GLF_IDENTITY(determinant(mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0)), (false ? _GLF_FUZZED(16.59) : _GLF_IDENTITY(determinant(mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0)), clamp(determinant(mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0)), determinant(mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0)), determinant(mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0)))))), 0.0, 0.0)), max(determinant(mat2(0.0, _GLF_IDENTITY(determinant(mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0)), (false ? _GLF_FUZZED(16.59) : _GLF_IDENTITY(determinant(mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0)), clamp(determinant(mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0)), determinant(mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0)), determinant(mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0)))))), 0.0, 0.0)), _GLF_IDENTITY(determinant(mat2(0.0, _GLF_IDENTITY(determinant(mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0)), (false ? _GLF_FUZZED(16.59) : _GLF_IDENTITY(determinant(mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0)), clamp(determinant(mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0)), determinant(mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0)), determinant(mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0)))))), 0.0, 0.0)), float(mat2x3(determinant(mat2(0.0, _GLF_IDENTITY(determinant(mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0)), (false ? _GLF_FUZZED(16.59) : _GLF_IDENTITY(determinant(mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0)), clamp(determinant(mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0)), determinant(mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0)), determinant(mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0)))))), 0.0, 0.0)), 1.0, 0.0, 0.0, 1.0, 0.0)))))) > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(sin(vec2(_GLF_IDENTITY(0.0, (0.0) * 1.0), 0.0)), max(sin(vec2(_GLF_IDENTITY(0.0, (0.0) * 1.0), 0.0)), sin(vec2(_GLF_IDENTITY(_GLF_IDENTITY(0.0, 0.0 + (_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)))), (0.0) * 1.0), 0.0)))) + (injectionSwitch)))).x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((false ? _GLF_FUZZED(vec2(-592.805, 5.7)) : injectionSwitch), (_GLF_IDENTITY((false ? _GLF_FUZZED(vec2(-592.805, 5.7)) : injectionSwitch), max((false ? _GLF_FUZZED(vec2(-592.805, 5.7)) : injectionSwitch), (false ? _GLF_FUZZED(vec2(-592.805, 5.7)) : injectionSwitch)))) - vec2(0.0, 0.0))).y, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, sin(vec2(_GLF_IDENTITY(0.0, (0.0) * 1.0), 0.0)) + (injectionSwitch)))).x > _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(-592.805, 5.7)) : _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)))).y, ! (! (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, sin(vec2(_GLF_IDENTITY(0.0, (0.0) * 1.0), 0.0)) + (injectionSwitch))), max(min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, sin(vec2(_GLF_IDENTITY(0.0, (0.0) * 1.0), 0.0)) + (injectionSwitch))), min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(sin(vec2(_GLF_IDENTITY(0.0, (0.0) * 1.0), 0.0)), vec2(1.0, 1.0) * (sin(vec2(_GLF_IDENTITY(0.0, (0.0) * 1.0), 0.0)))) + (injectionSwitch)))))).x > _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(-592.805, 5.7)) : injectionSwitch)).y)))) && true)))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (true ? _GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) : _GLF_FUZZED(942.313))) > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), bool(bvec2(_GLF_IDENTITY(false, ! (! (false))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))), false || (_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false))))))), true && (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), true && (! _GLF_IDENTITY((false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || ((false)))))))), false || (_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false))))))))))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(8170.2948)), float(injectionSwitch.y), bool(true))), injectionSwitch.y))))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x, mix(float(_GLF_FUZZED(-3.4)), float(injectionSwitch.x), bool(true))) > injectionSwitch.y, true && (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x, mix(float(_GLF_FUZZED(-3.4)), float(injectionSwitch.x), bool(true))) > injectionSwitch.y))))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec4(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)))), true, false, false)), bool(_GLF_IDENTITY(bool(bool(bvec4(_GLF_DEAD(false), true, false, false))), true && (bool(bool(bvec4(_GLF_DEAD(false), true, _GLF_IDENTITY(false, bool(bvec4(false, false, false, true))), false)))))))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 atomicStore(buf[next_virtual_gid], _GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_IDENTITY(read_1 + _GLF_IDENTITY(1, clamp(_GLF_IDENTITY(1, (1) | (1)), _GLF_IDENTITY(1, (1) ^ 0), 1)), ~ (~ (read_1 + _GLF_IDENTITY(1, (1) | (_GLF_IDENTITY(1, ~ (~ (1)))))))), (read_1 + 1) + 0u) == read_2), (_GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1, ~ (~ (read_1 + _GLF_IDENTITY(_GLF_IDENTITY(1, (1) | (_GLF_IDENTITY(_GLF_IDENTITY(1, max(1, 1)), ~ (~ (1))))), _GLF_IDENTITY((_GLF_IDENTITY(1, (1) | (_GLF_IDENTITY(1, ~ (~ (1)))))) ^ (0 >> _GLF_IDENTITY(int(7), _GLF_IDENTITY(int(7), (int(7)) >> 0))), (false ? _GLF_FUZZED(48677) : _GLF_IDENTITY((_GLF_IDENTITY(1, (1) | (_GLF_IDENTITY(1, ~ (~ (1)))))) ^ (0 >> _GLF_IDENTITY(int(7), _GLF_IDENTITY(int(7), (int(7)) >> 0))), min((_GLF_IDENTITY(1, (1) | (_GLF_IDENTITY(1, ~ (~ (1)))))) ^ (0 >> _GLF_IDENTITY(int(7), _GLF_IDENTITY(int(7), (int(7)) >> 0))), (_GLF_IDENTITY(1, (1) | (_GLF_IDENTITY(1, ~ (~ (1)))))) ^ (0 >> _GLF_IDENTITY(int(7), _GLF_IDENTITY(int(7), (int(7)) >> 0))))))))))), (read_1 + 1) + 0u) == read_2), min(uint(_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1, ~ (~ (read_1 + _GLF_IDENTITY(1, (1) | (_GLF_IDENTITY(1, ~ (~ (1)))))))), _GLF_IDENTITY((read_1 + 1) + 0u, ((read_1 + 1) + 0u) | 0u)) == read_2), _GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(read_1, (false ? _GLF_FUZZED(workgroup_base) : read_1)) + 1, ~ (~ (read_1 + _GLF_IDENTITY(1, (1) | (_GLF_IDENTITY(1, ~ (~ (1)))))))), max(_GLF_IDENTITY(_GLF_IDENTITY(read_1, (false ? _GLF_FUZZED(workgroup_base) : read_1)) + 1, ~ (~ (read_1 + _GLF_IDENTITY(1, (1) | (_GLF_IDENTITY(1, ~ (~ (1)))))))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(read_1, (false ? _GLF_FUZZED(workgroup_base) : read_1)) + 1, ~ (~ (read_1 + _GLF_IDENTITY(1, (1) | (_GLF_IDENTITY(1, ~ (~ (1)))))))), max(_GLF_IDENTITY(_GLF_IDENTITY(read_1, (false ? _GLF_FUZZED(workgroup_base) : read_1)) + 1, ~ (~ (read_1 + _GLF_IDENTITY(1, (1) | (_GLF_IDENTITY(1, ~ (~ (1)))))))), _GLF_IDENTITY(_GLF_IDENTITY(read_1, (false ? _GLF_FUZZED(workgroup_base) : read_1)) + 1, ~ (~ (read_1 + _GLF_IDENTITY(1, (1) | (_GLF_IDENTITY(1, ~ (~ (1)))))))))))), (read_1 + 1) + 0u) == read_2), (uint(_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1, _GLF_IDENTITY(~ (~ (read_1 + _GLF_IDENTITY(1, (1) | (_GLF_IDENTITY(1, ~ (~ (1))))))), max(_GLF_IDENTITY(~ (~ (read_1 + _GLF_IDENTITY(1, (1) | (_GLF_IDENTITY(1, ~ (~ (1))))))), ~ (~ (~ (~ (read_1 + _GLF_IDENTITY(1, (1) | (_GLF_IDENTITY(1, ~ (~ (1)))))))))), ~ (~ (read_1 + _GLF_IDENTITY(1, (1) | (_GLF_IDENTITY(1, ~ (~ (1)))))))))), (read_1 + 1) + 0u) == read_2)) << 0u)))) - 0u) + 1, _GLF_IDENTITY(4, (_GLF_IDENTITY(4, (false ? _GLF_FUZZED(36225) : 4))) | 0), 64, 4);
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), true && (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))))), ! (! ((injectionSwitch.x > injectionSwitch.y)))))))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))))))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
}
