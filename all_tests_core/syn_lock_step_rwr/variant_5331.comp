#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


struct _GLF_struct_12 {
 uint _f0;
 mat2x4 _f1;
 bool _f2;
 ivec2 _f3;
 vec3 _f4;
 ivec4 _f5;
 ivec4 _f6;
} ;

struct _GLF_struct_11 {
 mat4x2 _f0;
} ;

struct _GLF_struct_10 {
 mat2x4 _f0;
 uint _f1;
 vec2 _f2;
 bvec4 _f3;
} ;

struct _GLF_struct_9 {
 ivec3 _f0;
 int _f1;
 mat2 _f2;
 vec2 _f3;
} ;

struct _GLF_struct_13 {
 mat4x2 _f0;
 _GLF_struct_9 _f1;
 _GLF_struct_10 _f2;
 _GLF_struct_11 _f3;
 _GLF_struct_12 _f4;
 vec4 _f5;
 vec2 _f6;
} ;

struct _GLF_struct_7 {
 mat3 _f0;
} ;

struct _GLF_struct_6 {
 float _f0;
 uvec2 _f1;
 vec2 _f2;
 int _f3;
 mat4x2 _f4;
} ;

struct _GLF_struct_8 {
 uint read_2;
 _GLF_struct_6 _f0;
 _GLF_struct_7 _f1;
} ;

struct _GLF_struct_4 {
 mat4x2 _f0;
 vec4 _f1;
 bvec4 _f2;
 ivec3 _f3;
 uvec2 _f4;
} ;

struct _GLF_struct_3 {
 int _f0;
 uint _f1;
 bvec3 _f2;
 ivec2 _f3;
 int _f4;
 mat3x4 _f5;
 mat4x3 _f6;
} ;

struct _GLF_struct_2 {
 uvec2 _f0;
 vec2 _f1;
 mat4 _f2;
 vec2 _f3;
 ivec4 _f4;
} ;

struct _GLF_struct_5 {
 _GLF_struct_2 _f0;
 _GLF_struct_3 _f1;
 mat3x4 _f2;
 _GLF_struct_4 _f3;
 ivec3 _f4;
 mat2x4 _f5;
} ;

struct _GLF_struct_0 {
 vec3 _f0;
 uvec3 _f1;
 ivec3 _f2;
 bvec4 _f3;
 vec4 _f4;
 ivec3 _f5;
 bool _f6;
} ;

struct _GLF_struct_1 {
 uvec3 _f0;
 float _f1;
 _GLF_struct_0 _f2;
 uint _f3;
} ;

struct _GLF_struct_14 {
 mat2 _f0;
 uvec2 _f1;
 mat4 _f2;
 _GLF_struct_1 _f3;
 _GLF_struct_5 _f4;
 _GLF_struct_8 _f5;
 _GLF_struct_13 _f6;
} ;

layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec2(_GLF_DEAD(false), true)), ! (! (bool(bvec2(_GLF_DEAD(false), true)))))), (_GLF_DEAD(false)) || false)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
    }
   barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), true, true, true))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
    }
   barrier();
  }
 uint num_workgroup = _GLF_IDENTITY(gl_NumWorkGroups, uvec3(uvec3(gl_NumWorkGroups))).x;
 if(_GLF_DEAD(false))
  barrier();
 uint workgroup_size = gl_WorkGroupSize.x;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true)) && true))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint workgroup_id = _GLF_IDENTITY(gl_WorkGroupID.x, (gl_WorkGroupID.x) | (gl_WorkGroupID.x));
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, false, false)), true && (bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, false, false)))))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch))) - vec2(0.0, 0.0)).y))), (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)))).x > injectionSwitch.y)))) || false))))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true)), bool(bvec4(! (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true)), false, true, true))))), true), bvec2(bvec2(bvec2(_GLF_DEAD(false), _GLF_IDENTITY(true, (true) && true)))))), true && (bool(_GLF_IDENTITY(bvec2(_GLF_DEAD(false), true), bvec2(bvec2(bvec2(_GLF_DEAD(false), true)))))))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
          barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-3.0)), float(injectionSwitch.x), bool(true))), injectionSwitch.x)))) > injectionSwitch.y))))
            barrier();
           barrier();
          }
         barrier();
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(mat3x4(injectionSwitch, 0.0, length(0.0), 0.0, 0.0, 1.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), abs(0.0), _GLF_IDENTITY(1.0, (1.0) / 1.0), 1.0))).x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, (false) && true), true, true)))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec4(false, false, true, true)))) || false)))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint workgroup_base = workgroup_size * workgroup_id;
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, false, false)))))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 uint virtual_gid = workgroup_base + _GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(subgroup_id, min(subgroup_id, subgroup_id))) | (_GLF_IDENTITY(subgroup_id, max(subgroup_id, subgroup_id)))) * subgroup_size + subgroup_local_id;
 uint next_virtual_gid = _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (workgroup_base) ^ 0u) + subgroup_id * subgroup_size + ((subgroup_local_id + 1) % subgroup_size), clamp(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size + ((subgroup_local_id + _GLF_IDENTITY(1, clamp(_GLF_IDENTITY(1, max(1, _GLF_IDENTITY(1, 1 * (1)))), _GLF_IDENTITY(1, 0 ^ (1)), 1))) % subgroup_size), _GLF_IDENTITY((workgroup_base + subgroup_id * subgroup_size + ((_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) | (0u << _GLF_IDENTITY(uint(5u), _GLF_IDENTITY(uint(5u), (uint(_GLF_IDENTITY(5u, (_GLF_IDENTITY(5u, (5u) - 0u)) >> 0u))) / 1u))))) % subgroup_size)) / 1u, clamp((workgroup_base + subgroup_id * subgroup_size + _GLF_IDENTITY(((_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) | (0u << _GLF_IDENTITY(uint(5u), uint(5u))))) % subgroup_size), min(((_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) | (0u << _GLF_IDENTITY(uint(5u), _GLF_IDENTITY(uint(_GLF_IDENTITY(5u, (5u) | (5u))), uint(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (uint(_GLF_IDENTITY(5u, (5u) | (5u))))))))) % subgroup_size), ((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, uint(_GLF_IDENTITY(uvec2(_GLF_IDENTITY(subgroup_local_id, clamp(subgroup_local_id, _GLF_IDENTITY(subgroup_local_id, min(subgroup_local_id, subgroup_local_id)), subgroup_local_id)), (0u >> _GLF_IDENTITY(_GLF_IDENTITY(uint(7u), uint(7u)), (_GLF_IDENTITY(uint(7u), uint(7u))) | 0u))), (uvec2(_GLF_IDENTITY(subgroup_local_id, clamp(subgroup_local_id, _GLF_IDENTITY(subgroup_local_id, min(subgroup_local_id, subgroup_local_id)), subgroup_local_id)), (0u >> _GLF_IDENTITY(uint(7u), uint(7u))))) ^ uvec2(0u, 0u)))) + 1, (subgroup_local_id + 1) | (0u << _GLF_IDENTITY(uint(5u), uint(5u))))) % subgroup_size)))) / 1u, (workgroup_base + subgroup_id * subgroup_size + ((_GLF_IDENTITY(subgroup_local_id + 1, (_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) >> 0u)) | (0u << _GLF_IDENTITY(uint(5u), uint(5u))))) % subgroup_size)) / 1u, _GLF_IDENTITY((workgroup_base + subgroup_id * subgroup_size + ((_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) | (0u << _GLF_IDENTITY(uint(5u), uint(5u))))) % subgroup_size)) / 1u, (0u | _GLF_IDENTITY(0u, (0u) - 0u)) | ((workgroup_base + subgroup_id * subgroup_size + (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) | (0u << _GLF_IDENTITY(_GLF_IDENTITY(uint(5u), 0u | (uint(5u))), uint(_GLF_IDENTITY(5u, _GLF_IDENTITY(max(5u, _GLF_IDENTITY(5u, 0u ^ (5u))), clamp(max(5u, _GLF_IDENTITY(5u, 0u ^ (5u))), _GLF_IDENTITY(max(5u, _GLF_IDENTITY(5u, 0u ^ (5u))), uint(uvec3(max(5u, _GLF_IDENTITY(5u, _GLF_IDENTITY(0u ^ (5u), (_GLF_IDENTITY(0u ^ (5u), 0u + (0u ^ (5u)))) | (_GLF_IDENTITY(0u ^ (5u), ~ (_GLF_IDENTITY(~ (0u ^ (5u)), (~ (0u ^ (5u))) ^ 0u))))))), 0u, 0u))), _GLF_IDENTITY(max(5u, _GLF_IDENTITY(5u, 0u ^ (5u))), (max(5u, _GLF_IDENTITY(5u, 0u ^ (5u)))) + 0u))))))))) % subgroup_size, max((_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) | (0u << _GLF_IDENTITY(_GLF_IDENTITY(uint(5u), 0u | (uint(5u))), uint(_GLF_IDENTITY(5u, max(5u, _GLF_IDENTITY(5u, 0u ^ (5u))))))))) % _GLF_IDENTITY(subgroup_size, _GLF_IDENTITY((subgroup_size), _GLF_IDENTITY(uint(_GLF_IDENTITY(uint((subgroup_size)), min(uint((subgroup_size)), uint((subgroup_size))))), (true ? uint(_GLF_IDENTITY(uint((subgroup_size)), min(uint((subgroup_size)), uint((subgroup_size))))) : _GLF_FUZZED(bitfieldInsert(num_workgroup, num_workgroup, -74429, 54671))))) ^ 0u), (_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) | (0u << _GLF_IDENTITY(_GLF_IDENTITY(uint(5u), 0u | (uint(5u))), uint(_GLF_IDENTITY(5u, max(5u, _GLF_IDENTITY(5u, 0u ^ (5u))))))))) % subgroup_size)))) / 1u))))), min(_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size + ((subgroup_local_id + _GLF_IDENTITY(1, clamp(_GLF_IDENTITY(1, max(1, _GLF_IDENTITY(1, 1 * (1)))), _GLF_IDENTITY(1, 0 ^ (1)), 1))) % subgroup_size), _GLF_IDENTITY((workgroup_base + subgroup_id * subgroup_size + ((_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) | (0u << _GLF_IDENTITY(uint(5u), uint(5u))))) % subgroup_size)) / 1u, clamp((workgroup_base + subgroup_id * subgroup_size + _GLF_IDENTITY(_GLF_IDENTITY(((_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) | (0u << _GLF_IDENTITY(uint(5u), uint(5u))))) % subgroup_size), min(((_GLF_IDENTITY(subgroup_local_id + 1, _GLF_IDENTITY((subgroup_local_id + 1) | (0u << _GLF_IDENTITY(uint(5u), uint(5u))), 0u ^ ((subgroup_local_id + 1) | (0u << _GLF_IDENTITY(uint(5u), uint(5u))))))) % subgroup_size), _GLF_IDENTITY(((_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) | (0u << _GLF_IDENTITY(uint(5u), uint(5u))))) % subgroup_size), ~ (~ (((_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) | (0u << _GLF_IDENTITY(uint(5u), uint(5u))))) % subgroup_size)))))), min(((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, 0u | (subgroup_local_id)) + 1, (subgroup_local_id + 1) | (0u << _GLF_IDENTITY(uint(5u), uint(_GLF_IDENTITY(5u, (5u) | (5u))))))) % _GLF_IDENTITY(subgroup_size, (subgroup_size) | (subgroup_size))), ((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, uint(_GLF_IDENTITY(uvec2(_GLF_IDENTITY(subgroup_local_id, clamp(subgroup_local_id, _GLF_IDENTITY(subgroup_local_id, min(subgroup_local_id, subgroup_local_id)), subgroup_local_id)), (0u >> _GLF_IDENTITY(uint(7u), uint(7u)))), (uvec2(_GLF_IDENTITY(subgroup_local_id, clamp(subgroup_local_id, _GLF_IDENTITY(subgroup_local_id, min(subgroup_local_id, subgroup_local_id)), subgroup_local_id)), (0u >> _GLF_IDENTITY(uint(7u), uint(7u))))) ^ uvec2(0u, 0u)))) + 1, (subgroup_local_id + 1) | (0u << _GLF_IDENTITY(uint(5u), uint(5u))))) % subgroup_size)))) / 1u, (workgroup_base + subgroup_id * subgroup_size + ((_GLF_IDENTITY(subgroup_local_id + 1, _GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) >> 0u)), clamp((_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) >> 0u)), (_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) >> 0u)), (_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) >> 0u)))) | (0u << _GLF_IDENTITY(uint(5u), uint(5u))))) % subgroup_size)) / 1u, _GLF_IDENTITY((workgroup_base + subgroup_id * subgroup_size + ((_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) | (0u << _GLF_IDENTITY(uint(5u), uint(5u))))) % subgroup_size)) / 1u, (0u | 0u) | _GLF_IDENTITY(((workgroup_base + _GLF_IDENTITY(subgroup_id, 0u + (_GLF_IDENTITY(subgroup_id, (subgroup_id) - 0u))) * subgroup_size + (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, min(subgroup_local_id, _GLF_IDENTITY(subgroup_local_id, clamp(subgroup_local_id, subgroup_local_id, subgroup_local_id)))) + 1, (subgroup_local_id + 1) | (0u << _GLF_IDENTITY(_GLF_IDENTITY(uint(5u), _GLF_IDENTITY(0u | (uint(5u)), (0u | (uint(5u))) ^ 0u)), uint(_GLF_IDENTITY(5u, max(5u, _GLF_IDENTITY(5u, 0u ^ (5u))))))))) % subgroup_size, max((_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) | (0u << _GLF_IDENTITY(_GLF_IDENTITY(uint(5u), 0u | (uint(5u))), uint(_GLF_IDENTITY(5u, max(5u, _GLF_IDENTITY(5u, 0u ^ (5u))))))))) % subgroup_size, (_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) | (0u << _GLF_IDENTITY(_GLF_IDENTITY(uint(5u), 0u | (uint(5u))), uint(_GLF_IDENTITY(5u, max(5u, _GLF_IDENTITY(5u, 0u ^ (5u))))))))) % subgroup_size)))) / 1u), (_GLF_IDENTITY(((workgroup_base + subgroup_id * subgroup_size + (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) | (0u << _GLF_IDENTITY(_GLF_IDENTITY(uint(5u), _GLF_IDENTITY(0u | (uint(5u)), (0u | (uint(5u))) ^ 0u)), uint(_GLF_IDENTITY(5u, max(5u, _GLF_IDENTITY(5u, 0u ^ (5u))))))))) % subgroup_size, max((_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) | (0u << _GLF_IDENTITY(_GLF_IDENTITY(uint(5u), 0u | (uint(5u))), uint(_GLF_IDENTITY(5u, max(5u, _GLF_IDENTITY(5u, 0u ^ (5u))))))))) % subgroup_size, (_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(-94848)))), int(ivec3(~ (_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(-94848)))), 1, 0))))), (subgroup_local_id + 1) | (0u << _GLF_IDENTITY(_GLF_IDENTITY(uint(5u), 0u | (uint(5u))), uint(_GLF_IDENTITY(5u, max(5u, _GLF_IDENTITY(5u, 0u ^ (5u))))))))) % subgroup_size)))) / 1u), (false ? _GLF_FUZZED(num_workgroup) : ((workgroup_base + subgroup_id * subgroup_size + (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) | (0u << _GLF_IDENTITY(_GLF_IDENTITY(uint(5u), _GLF_IDENTITY(0u | (uint(5u)), (0u | (uint(5u))) ^ 0u)), uint(_GLF_IDENTITY(5u, max(5u, _GLF_IDENTITY(5u, 0u ^ (5u))))))))) % subgroup_size, max((_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) | (0u << _GLF_IDENTITY(_GLF_IDENTITY(uint(5u), 0u | (uint(5u))), uint(_GLF_IDENTITY(5u, max(5u, _GLF_IDENTITY(5u, 0u ^ (5u))))))))) % subgroup_size, (_GLF_IDENTITY(subgroup_local_id + 1, (_GLF_IDENTITY(subgroup_local_id + 1, ~ (_GLF_IDENTITY(~ (subgroup_local_id + 1), max(~ (subgroup_local_id + 1), ~ (subgroup_local_id + 1)))))) | (0u << _GLF_IDENTITY(_GLF_IDENTITY(uint(5u), 0u | (uint(5u))), uint(_GLF_IDENTITY(5u, max(5u, _GLF_IDENTITY(5u, 0u ^ (5u))))))))) % subgroup_size)))) / 1u)))) >> 0u))))), _GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size + ((subgroup_local_id + _GLF_IDENTITY(1, clamp(_GLF_IDENTITY(1, max(1, _GLF_IDENTITY(1, 1 * (1)))), _GLF_IDENTITY(1, 0 ^ (1)), 1))) % subgroup_size), _GLF_IDENTITY(_GLF_IDENTITY((workgroup_base + subgroup_id * subgroup_size + ((_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) | (0u << _GLF_IDENTITY(uint(5u), uint(5u))))) % subgroup_size)), clamp((workgroup_base + subgroup_id * subgroup_size + ((_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) | (0u << _GLF_IDENTITY(uint(5u), uint(5u))))) % subgroup_size)), _GLF_IDENTITY((workgroup_base + subgroup_id * subgroup_size + ((_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) | (0u << _GLF_IDENTITY(uint(5u), uint(5u))))) % subgroup_size)), ((workgroup_base + subgroup_id * subgroup_size + ((_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) | (0u << _GLF_IDENTITY(uint(5u), uint(5u))))) % subgroup_size))) ^ 0u), (workgroup_base + subgroup_id * subgroup_size + ((_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) | (0u << _GLF_IDENTITY(uint(5u), uint(5u))))) % subgroup_size)))) / 1u, clamp((workgroup_base + subgroup_id * subgroup_size + _GLF_IDENTITY(((_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) | (0u << _GLF_IDENTITY(uint(5u), uint(5u))))) % subgroup_size), min(((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1, _GLF_IDENTITY(uint(uint(_GLF_IDENTITY(subgroup_local_id + 1, (_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) >> 0u)) | (_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) << 0u))))), (_GLF_IDENTITY(uint(uint(_GLF_IDENTITY(subgroup_local_id + 1, (_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) >> 0u)) | (_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) << 0u))))), 1u * (uint(uint(_GLF_IDENTITY(subgroup_local_id + 1, (_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) >> 0u)) | (_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) << 0u)))))))) ^ 0u)), (subgroup_local_id + 1) | (0u << _GLF_IDENTITY(uint(5u), uint(_GLF_IDENTITY(_GLF_IDENTITY(5u, max(5u, 5u)), (5u) | (5u))))))) % subgroup_size), ((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, uint(_GLF_IDENTITY(uvec2(_GLF_IDENTITY(subgroup_local_id, clamp(subgroup_local_id, _GLF_IDENTITY(subgroup_local_id, min(subgroup_local_id, _GLF_IDENTITY(subgroup_local_id, (false ? _GLF_FUZZED(workgroup_size) : _GLF_IDENTITY(subgroup_local_id, max(subgroup_local_id, subgroup_local_id)))))), subgroup_local_id)), (0u >> _GLF_IDENTITY(uint(7u), uint(7u)))), (uvec2(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, clamp(subgroup_local_id, _GLF_IDENTITY(subgroup_local_id, min(subgroup_local_id, subgroup_local_id)), subgroup_local_id)), min(_GLF_IDENTITY(subgroup_local_id, clamp(subgroup_local_id, _GLF_IDENTITY(subgroup_local_id, min(subgroup_local_id, subgroup_local_id)), subgroup_local_id)), _GLF_IDENTITY(subgroup_local_id, clamp(subgroup_local_id, _GLF_IDENTITY(subgroup_local_id, min(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) ^ 0u), subgroup_local_id)), subgroup_local_id)))), (0u >> _GLF_IDENTITY(uint(7u), uint(7u))))) ^ uvec2(0u, 0u)))) + 1, (subgroup_local_id + 1) | (0u << _GLF_IDENTITY(uint(5u), uint(5u))))) % subgroup_size)))) / 1u, (workgroup_base + subgroup_id * subgroup_size + ((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1, clamp(subgroup_local_id + 1, subgroup_local_id + 1, _GLF_IDENTITY(subgroup_local_id + 1, max(subgroup_local_id + 1, subgroup_local_id + 1)))), (_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) >> 0u)) | (0u << _GLF_IDENTITY(uint(5u), uint(5u))))) % subgroup_size)) / 1u, _GLF_IDENTITY((workgroup_base + subgroup_id * subgroup_size + ((_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) | (0u << _GLF_IDENTITY(uint(5u), uint(5u))))) % subgroup_size)) / 1u, _GLF_IDENTITY((0u | 0u), ((0u | 0u)) / 1u) | ((workgroup_base + subgroup_id * subgroup_size + (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) | (0u << _GLF_IDENTITY(_GLF_IDENTITY(uint(5u), 0u | (uint(5u))), uint(_GLF_IDENTITY(5u, max(5u, _GLF_IDENTITY(5u, 0u ^ (5u))))))))) % subgroup_size, max((_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + _GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(-93854)))) | (0u << _GLF_IDENTITY(_GLF_IDENTITY(uint(5u), 0u | (uint(5u))), uint(_GLF_IDENTITY(5u, max(5u, _GLF_IDENTITY(5u, 0u ^ (5u))))))))) % subgroup_size, (_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) | (0u << _GLF_IDENTITY(_GLF_IDENTITY(uint(5u), 0u | (uint(5u))), uint(_GLF_IDENTITY(5u, max(5u, _GLF_IDENTITY(5u, 0u ^ (5u))))))))) % subgroup_size)))) / 1u))))))), workgroup_base + subgroup_id * subgroup_size + (_GLF_IDENTITY((subgroup_local_id + 1), ((subgroup_local_id + 1)) | ((subgroup_local_id + 1))) % subgroup_size), _GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(subgroup_id, 0u ^ (subgroup_id))) / 1u), (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(subgroup_id, 0u ^ (subgroup_id))) / 1u), (true ? _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(subgroup_id, 0u ^ (subgroup_id))) / 1u), uint(uvec4(_GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(subgroup_id, 0u ^ (subgroup_id))) / 1u), 1u, 0u, 0u))) : _GLF_FUZZED(workgroup_base)))) + 0u) * _GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size)) + (_GLF_IDENTITY((subgroup_local_id + _GLF_IDENTITY(1, (1) | (1))) % subgroup_size, ((_GLF_IDENTITY(subgroup_local_id + 1, (_GLF_IDENTITY(subgroup_local_id + 1, clamp(subgroup_local_id + 1, subgroup_local_id + 1, subgroup_local_id + 1))) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x)))) % subgroup_size) | ((subgroup_local_id + 1) % subgroup_size))), max(workgroup_base + subgroup_id * subgroup_size + ((subgroup_local_id + 1) % subgroup_size), workgroup_base + subgroup_id * _GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, subgroup_size)) + ((_GLF_IDENTITY(subgroup_local_id, (true ? _GLF_IDENTITY(subgroup_local_id, ~ (~ (subgroup_local_id))) : _GLF_FUZZED(bitfieldReverse(workgroup_base)))) + 1) % _GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(187773u & 0u, (187773u & 0u) + 0u)) | (_GLF_IDENTITY(subgroup_size, (subgroup_size) ^ 0u))))))));
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)))).x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(false, false, false, true))), bool(bvec2(_GLF_IDENTITY(false, bool(bvec4(false, false, false, true))), true)))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4((injectionSwitch.x > injectionSwitch.y), true, true, false)))))))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    barrier();
   barrier();
  }
 uint read_1 = atomicLoad(buf[virtual_gid], _GLF_IDENTITY(4, ~ (_GLF_IDENTITY(~ (4), (~ (4)) | (_GLF_IDENTITY(~ (4), min(~ (4), ~ (4))))))), _GLF_IDENTITY(64, (64) << 0), 0);
 if(_GLF_DEAD(false))
  barrier();
 atomicStore(buf[_GLF_IDENTITY(next_virtual_gid, min(next_virtual_gid, next_virtual_gid))], uint(read_1 + 1), 4, 64, 4);
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (_GLF_IDENTITY(! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bool(bvec2(! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false))))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, bool(bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), true, true)))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y))))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec3(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), true && (! _GLF_IDENTITY((! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), (_GLF_IDENTITY((! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), false || ((! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))) || false)))), true, true))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       barrier();
      }
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false)))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(injectionSwitch.x > injectionSwitch.y, false)))))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 _GLF_struct_14 _GLF_struct_replacement_14 = _GLF_struct_14(mat2(1.0), uvec2(1u), mat4(1.0), _GLF_struct_1(_GLF_IDENTITY(uvec3(1u), _GLF_IDENTITY(uvec3(_GLF_IDENTITY(uvec3(uvec3(1u)), ~ (~ (_GLF_IDENTITY(uvec3(uvec3(1u)), ~ (~ (uvec3(uvec3(1u))))))))), (uvec3(_GLF_IDENTITY(uvec3(uvec3(1u)), ~ (~ (_GLF_IDENTITY(uvec3(uvec3(1u)), ~ (~ (uvec3(uvec3(1u)))))))))) ^ uvec3(0u, 0u, 0u))), 1.0, _GLF_struct_0(vec3(1.0), _GLF_IDENTITY(uvec3(1u), (false ? _GLF_FUZZED(uvec3(62282u, 91018u, 136380u)) : uvec3(1u))), ivec3(1), bvec4(true), vec4(1.0), ivec3(1), true), 1u), _GLF_struct_5(_GLF_struct_2(_GLF_IDENTITY(uvec2(1u), max(_GLF_IDENTITY(uvec2(1u), (uvec2(1u)) + uvec2(_GLF_IDENTITY(0u, min(_GLF_IDENTITY(0u, max(0u, 0u)), 0u)), 0u)), _GLF_IDENTITY(uvec2(1u), _GLF_IDENTITY((uvec2(1u)), uvec2(0u, 0u) | (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(uvec2(1u), (uvec2(1u)) ^ uvec2(0u, 0u))), uvec2(uvec4(_GLF_IDENTITY((_GLF_IDENTITY(uvec2(1u), (uvec2(1u)) ^ uvec2(0u, 0u))), ((_GLF_IDENTITY(uvec2(1u), (uvec2(1u)) ^ uvec2(0u, 0u)))) * uvec2(1u, 1u)), (0u ^ 0u), 0u))), uvec2(0u, 0u) ^ (_GLF_IDENTITY((uvec2(1u)), uvec2(uvec3((uvec2(1u)), 0u))))))) >> uvec2(0u, 0u)))), vec2(1.0), mat4(1.0), vec2(1.0), _GLF_IDENTITY(ivec4(1), (ivec4(1)) | _GLF_IDENTITY((ivec4(1)), (false ? _GLF_FUZZED(ivec4(53185, 49487, 93603, -79039)) : _GLF_IDENTITY((ivec4(1)), max(_GLF_IDENTITY((_GLF_IDENTITY(ivec4(1), min(_GLF_IDENTITY(ivec4(1), ~ (~ (ivec4(1)))), ivec4(1)))), (false ? _GLF_FUZZED(ivec4(22148, 58741, -42901, 21361)) : (ivec4(1)))), (ivec4(1)))))))), _GLF_struct_3(1, 1u, bvec3(true), ivec2(1), _GLF_IDENTITY(_GLF_IDENTITY(1, min(_GLF_IDENTITY(1, clamp(1, 1, 1)), 1)), (true ? _GLF_IDENTITY(1, min(_GLF_IDENTITY(1, clamp(1, _GLF_IDENTITY(1, (_GLF_IDENTITY(1, max(1, 1))) ^ (0 << _GLF_IDENTITY(int(3), int(3)))), 1)), 1)) : _GLF_FUZZED(76887))), mat3x4(1.0), mat4x3(1.0)), mat3x4(1.0), _GLF_struct_4(mat4x2(1.0), vec4(1.0), bvec4(true), ivec3(1), uvec2(1u)), ivec3(1), mat2x4(1.0)), _GLF_struct_8(atomicLoad(buf[virtual_gid], 4, 64, 0), _GLF_struct_6(1.0, uvec2(1u), vec2(1.0), 1, mat4x2(1.0)), _GLF_struct_7(_GLF_IDENTITY(_GLF_IDENTITY(mat3(1.0), (true ? mat3(1.0) : _GLF_FUZZED(mat3(180.019, 533.470, 9933.3161, -1.7, -2212.1701, -96.69, 664.216, 3.2, -4945.9953)))), mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0) + (_GLF_IDENTITY(mat3(1.0), (true ? mat3(1.0) : _GLF_FUZZED(mat3(180.019, 533.470, 9933.3161, -1.7, -2212.1701, -96.69, 664.216, 3.2, -4945.9953)))))))), _GLF_struct_13(mat4x2(1.0), _GLF_struct_9(ivec3(1), 1, mat2(1.0), vec2(1.0)), _GLF_struct_10(mat2x4(1.0), _GLF_IDENTITY(_GLF_IDENTITY(1u, (false ? _GLF_FUZZED(read_1) : _GLF_IDENTITY(1u, (1u) | (1u)))), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(1u, (false ? _GLF_FUZZED(read_1) : _GLF_IDENTITY(1u, (1u) | (1u))))), (_GLF_IDENTITY(~ (_GLF_IDENTITY(1u, (false ? _GLF_FUZZED(_GLF_IDENTITY(read_1, clamp(read_1, read_1, read_1))) : _GLF_IDENTITY(1u, (1u) | (1u))))), _GLF_IDENTITY((~ (_GLF_IDENTITY(1u, (false ? _GLF_FUZZED(read_1) : _GLF_IDENTITY(1u, (1u) | (1u)))))) | _GLF_IDENTITY(0u, clamp(0u, _GLF_IDENTITY(0u, min(_GLF_IDENTITY(0u, 0u ^ (0u)), 0u)), _GLF_IDENTITY(0u, 0u + (0u)))), ((~ (_GLF_IDENTITY(1u, (false ? _GLF_FUZZED(read_1) : _GLF_IDENTITY(1u, (1u) | (1u)))))) | 0u) ^ 0u))) >> 0u))), vec2(1.0), bvec4(true)), _GLF_struct_11(mat4x2(1.0)), _GLF_struct_12(1u, mat2x4(1.0), true, ivec2(1), _GLF_IDENTITY(vec3(1.0), max(vec3(1.0), vec3(1.0))), ivec4(1), ivec4(1)), vec4(1.0), vec2(_GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(4480.8089)), bool(false))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-4.3)), float(1.0), bool(true))), (_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-4.3)), float(1.0), bool(true)))) * 1.0), _GLF_IDENTITY((_GLF_IDENTITY(1.0, mix(_GLF_IDENTITY(float(_GLF_IDENTITY(_GLF_FUZZED(-1231.0413), (true ? _GLF_IDENTITY(_GLF_FUZZED(-1231.0413), _GLF_IDENTITY(min(_GLF_FUZZED(-1231.0413), _GLF_FUZZED(-1231.0413)), min(_GLF_IDENTITY(min(_GLF_FUZZED(-1231.0413), _GLF_FUZZED(-1231.0413)), max(min(_GLF_FUZZED(-1231.0413), _GLF_FUZZED(-1231.0413)), min(_GLF_FUZZED(-1231.0413), _GLF_FUZZED(-1231.0413)))), _GLF_IDENTITY(min(_GLF_FUZZED(-1231.0413), _GLF_FUZZED(-1231.0413)), clamp(_GLF_IDENTITY(min(_GLF_FUZZED(_GLF_IDENTITY(-1231.0413, _GLF_IDENTITY((-1231.0413) + 0.0, float(_GLF_IDENTITY(vec2((-1231.0413) + 0.0, 1.0), (vec2((-1231.0413) + 0.0, 1.0)) * mat2(1.0)))))), _GLF_FUZZED(-1231.0413)), (min(_GLF_FUZZED(-1231.0413), _GLF_FUZZED(-1231.0413))) * 1.0), min(_GLF_FUZZED(-1231.0413), _GLF_FUZZED(-1231.0413)), min(_GLF_FUZZED(-1231.0413), _GLF_IDENTITY(_GLF_FUZZED(-1231.0413), (true ? _GLF_FUZZED(-1231.0413) : _GLF_FUZZED(0.9))))))))) : _GLF_FUZZED(76.39)))), clamp(_GLF_IDENTITY(float(_GLF_IDENTITY(_GLF_FUZZED(-1231.0413), (_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec3(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), (bool(bvec3(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) || false)) ? _GLF_IDENTITY(_GLF_FUZZED(-1231.0413), _GLF_IDENTITY(min(_GLF_FUZZED(-1231.0413), _GLF_FUZZED(-1231.0413)), min(_GLF_IDENTITY(min(_GLF_FUZZED(-1231.0413), _GLF_FUZZED(-1231.0413)), max(min(_GLF_FUZZED(-1231.0413), _GLF_FUZZED(-1231.0413)), min(_GLF_FUZZED(-1231.0413), _GLF_FUZZED(-1231.0413)))), _GLF_IDENTITY(min(_GLF_FUZZED(-1231.0413), _GLF_FUZZED(-1231.0413)), clamp(_GLF_IDENTITY(min(_GLF_FUZZED(_GLF_IDENTITY(-1231.0413, (-1231.0413) + 0.0)), _GLF_FUZZED(-1231.0413)), (min(_GLF_FUZZED(-1231.0413), _GLF_FUZZED(-1231.0413))) * 1.0), min(_GLF_FUZZED(-1231.0413), _GLF_FUZZED(-1231.0413)), min(_GLF_FUZZED(-1231.0413), _GLF_IDENTITY(_GLF_FUZZED(-1231.0413), _GLF_IDENTITY(float(_GLF_IDENTITY(mat2(_GLF_FUZZED(-1231.0413), 1.0, 0.0, abs(1.0)), mat2(mat4(mat2(_GLF_FUZZED(-1231.0413), 1.0, 0.0, abs(1.0)))))), mix(float(float(_GLF_IDENTITY(_GLF_IDENTITY(mat2(_GLF_FUZZED(-1231.0413), 1.0, 0.0, abs(1.0)), mat2(mat4(mat2(_GLF_FUZZED(-1231.0413), 1.0, 0.0, abs(1.0))))), transpose(transpose(_GLF_IDENTITY(mat2(_GLF_FUZZED(-1231.0413), 1.0, 0.0, abs(1.0)), mat2(mat4(mat2(_GLF_FUZZED(-1231.0413), 1.0, 0.0, abs(1.0)))))))))), float(_GLF_FUZZED(22.56)), bool(false)))))))))) : _GLF_FUZZED(76.39)))), (true ? float(_GLF_IDENTITY(_GLF_FUZZED(-1231.0413), (true ? _GLF_IDENTITY(_GLF_FUZZED(-1231.0413), _GLF_IDENTITY(min(_GLF_FUZZED(-1231.0413), _GLF_FUZZED(-1231.0413)), min(_GLF_IDENTITY(min(_GLF_FUZZED(-1231.0413), _GLF_FUZZED(-1231.0413)), _GLF_IDENTITY(max(min(_GLF_FUZZED(-1231.0413), _GLF_FUZZED(-1231.0413)), min(_GLF_FUZZED(-1231.0413), _GLF_FUZZED(-1231.0413))), mix(float(_GLF_FUZZED(5576.6818)), float(_GLF_IDENTITY(max(min(_GLF_FUZZED(-1231.0413), _GLF_FUZZED(-1231.0413)), min(_GLF_FUZZED(-1231.0413), _GLF_FUZZED(-1231.0413))), mix(float(max(min(_GLF_FUZZED(-1231.0413), _GLF_FUZZED(-1231.0413)), min(_GLF_FUZZED(-1231.0413), _GLF_FUZZED(-1231.0413)))), float(_GLF_FUZZED(-87.08)), bool(false)))), bool(true)))), _GLF_IDENTITY(min(_GLF_FUZZED(-1231.0413), _GLF_FUZZED(-1231.0413)), clamp(_GLF_IDENTITY(min(_GLF_FUZZED(_GLF_IDENTITY(_GLF_IDENTITY(-1231.0413, (-1231.0413) + 0.0), (_GLF_IDENTITY(-1231.0413, (-1231.0413) + 0.0)) - 0.0)), _GLF_FUZZED(-1231.0413)), (min(_GLF_FUZZED(-1231.0413), _GLF_FUZZED(-1231.0413))) * 1.0), min(_GLF_FUZZED(-1231.0413), _GLF_FUZZED(-1231.0413)), min(_GLF_FUZZED(-1231.0413), _GLF_FUZZED(-1231.0413))))))) : _GLF_FUZZED(76.39)))) : _GLF_FUZZED(length(injectionSwitch)))), float(_GLF_IDENTITY(_GLF_FUZZED(-1231.0413), (true ? _GLF_IDENTITY(_GLF_FUZZED(-1231.0413), _GLF_IDENTITY(min(_GLF_FUZZED(-1231.0413), _GLF_FUZZED(-1231.0413)), min(_GLF_IDENTITY(min(_GLF_FUZZED(-1231.0413), _GLF_FUZZED(-1231.0413)), max(min(_GLF_FUZZED(-1231.0413), _GLF_FUZZED(-1231.0413)), min(_GLF_FUZZED(-1231.0413), _GLF_FUZZED(-1231.0413)))), _GLF_IDENTITY(min(_GLF_FUZZED(-1231.0413), _GLF_FUZZED(-1231.0413)), clamp(_GLF_IDENTITY(min(_GLF_FUZZED(_GLF_IDENTITY(-1231.0413, (-1231.0413) + 0.0)), _GLF_FUZZED(-1231.0413)), (min(_GLF_FUZZED(-1231.0413), _GLF_FUZZED(-1231.0413))) * 1.0), min(_GLF_FUZZED(-1231.0413), _GLF_FUZZED(-1231.0413)), min(_GLF_FUZZED(-1231.0413), _GLF_FUZZED(-1231.0413))))))) : _GLF_FUZZED(76.39)))), float(_GLF_IDENTITY(_GLF_FUZZED(-1231.0413), (true ? _GLF_IDENTITY(_GLF_FUZZED(-1231.0413), _GLF_IDENTITY(min(_GLF_FUZZED(-1231.0413), _GLF_FUZZED(-1231.0413)), min(_GLF_IDENTITY(min(_GLF_FUZZED(-1231.0413), _GLF_FUZZED(-1231.0413)), max(min(_GLF_FUZZED(-1231.0413), _GLF_FUZZED(_GLF_IDENTITY(-1231.0413, clamp(-1231.0413, -1231.0413, -1231.0413)))), min(_GLF_FUZZED(_GLF_IDENTITY(-1231.0413, (-1231.0413) * 1.0)), _GLF_FUZZED(-1231.0413)))), _GLF_IDENTITY(min(_GLF_FUZZED(-1231.0413), _GLF_FUZZED(-1231.0413)), clamp(_GLF_IDENTITY(min(_GLF_FUZZED(_GLF_IDENTITY(-1231.0413, (-1231.0413) + 0.0)), _GLF_FUZZED(-1231.0413)), (min(_GLF_FUZZED(-1231.0413), _GLF_FUZZED(-1231.0413))) * _GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0, 1.0))), min(_GLF_FUZZED(-1231.0413), _GLF_FUZZED(_GLF_IDENTITY(-1231.0413, min(-1231.0413, -1231.0413)))), min(_GLF_FUZZED(-1231.0413), _GLF_FUZZED(_GLF_IDENTITY(-1231.0413, max(-1231.0413, _GLF_IDENTITY(-1231.0413, min(-1231.0413, -1231.0413))))))))))) : _GLF_FUZZED(76.39)))))), float(1.0), bool(true)))), min(_GLF_IDENTITY((_GLF_IDENTITY(1.0, mix(float(_GLF_IDENTITY(_GLF_FUZZED(-1231.0413), (true ? _GLF_IDENTITY(_GLF_FUZZED(-1231.0413), min(_GLF_FUZZED(-1231.0413), _GLF_FUZZED(-1231.0413))) : _GLF_FUZZED(76.39)))), float(1.0), bool(true)))), min(_GLF_IDENTITY((_GLF_IDENTITY(1.0, mix(float(_GLF_IDENTITY(_GLF_FUZZED(-1231.0413), (_GLF_IDENTITY(true, (true) && true) ? _GLF_IDENTITY(_GLF_FUZZED(-1231.0413), min(_GLF_FUZZED(-1231.0413), _GLF_FUZZED(-1231.0413))) : _GLF_FUZZED(76.39)))), float(1.0), bool(true)))), (true ? (_GLF_IDENTITY(1.0, mix(float(_GLF_IDENTITY(_GLF_FUZZED(-1231.0413), (true ? _GLF_IDENTITY(_GLF_FUZZED(-1231.0413), min(_GLF_FUZZED(-1231.0413), _GLF_IDENTITY(_GLF_FUZZED(-1231.0413), min(_GLF_FUZZED(-1231.0413), _GLF_FUZZED(-1231.0413))))) : _GLF_FUZZED(76.39)))), float(1.0), bool(true)))) : _GLF_FUZZED(5.7))), (_GLF_IDENTITY(1.0, mix(float(_GLF_IDENTITY(_GLF_FUZZED(-1231.0413), (true ? _GLF_IDENTITY(_GLF_FUZZED(-1231.0413), min(_GLF_FUZZED(-1231.0413), _GLF_FUZZED(-1231.0413))) : _GLF_FUZZED(76.39)))), float(1.0), bool(true)))))), _GLF_IDENTITY((_GLF_IDENTITY(1.0, mix(float(_GLF_IDENTITY(_GLF_FUZZED(-1231.0413), (true ? _GLF_IDENTITY(_GLF_FUZZED(-1231.0413), min(_GLF_IDENTITY(_GLF_FUZZED(-1231.0413), float(mat3(_GLF_FUZZED(-1231.0413), exp(0.0), 0.0, 1.0, 0.0, 0.0, 0.0, tan(0.0), 1.0))), _GLF_FUZZED(-1231.0413))) : _GLF_FUZZED(76.39)))), float(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(_GLF_IDENTITY(1.0, min(1.0, 1.0)), float(mat4x2(_GLF_IDENTITY(1.0, min(1.0, _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)))), tan(0.0), 1.0, 1.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 1.0)))) / 1.0)), bool(_GLF_IDENTITY(true, true && (true)))))), clamp(_GLF_IDENTITY((_GLF_IDENTITY(1.0, mix(float(_GLF_IDENTITY(_GLF_FUZZED(-1231.0413), _GLF_IDENTITY((true ? _GLF_IDENTITY(_GLF_FUZZED(-1231.0413), min(_GLF_FUZZED(-1231.0413), _GLF_FUZZED(-1231.0413))) : _GLF_FUZZED(76.39)), _GLF_IDENTITY(float(mat2((true ? _GLF_IDENTITY(_GLF_FUZZED(_GLF_IDENTITY(-1231.0413, min(_GLF_IDENTITY(-1231.0413, (-1231.0413) - 0.0), -1231.0413))), min(_GLF_FUZZED(-1231.0413), _GLF_FUZZED(-1231.0413))) : _GLF_FUZZED(76.39)), 0.0, exp(0.0), determinant(mat2(1.0, length(0.0), 0.0, 1.0)))), min(_GLF_IDENTITY(float(mat2((true ? _GLF_IDENTITY(_GLF_FUZZED(_GLF_IDENTITY(-1231.0413, min(_GLF_IDENTITY(_GLF_IDENTITY(-1231.0413, mix(float(-1231.0413), float(_GLF_FUZZED(vec4(-6.1, 1.9, 520.264, -7784.1170).y)), bool(false))), (-1231.0413) - 0.0), -1231.0413))), min(_GLF_FUZZED(-1231.0413), _GLF_FUZZED(-1231.0413))) : _GLF_FUZZED(76.39)), 0.0, exp(0.0), determinant(mat2(1.0, length(0.0), 0.0, 1.0)))), mix(float(float(mat2((true ? _GLF_IDENTITY(_GLF_FUZZED(_GLF_IDENTITY(-1231.0413, min(_GLF_IDENTITY(-1231.0413, (-1231.0413) - 0.0), -1231.0413))), min(_GLF_FUZZED(-1231.0413), _GLF_FUZZED(-1231.0413))) : _GLF_FUZZED(76.39)), 0.0, exp(0.0), determinant(mat2(1.0, length(0.0), 0.0, 1.0))))), float(_GLF_FUZZED(3271.6776)), bool(false))), float(mat2((true ? _GLF_IDENTITY(_GLF_FUZZED(_GLF_IDENTITY(-1231.0413, min(_GLF_IDENTITY(-1231.0413, (-1231.0413) - 0.0), -1231.0413))), min(_GLF_FUZZED(_GLF_IDENTITY(-1231.0413, round(length(normalize(vec2(1.0, 1.0)))) * (-1231.0413))), _GLF_FUZZED(-1231.0413))) : _GLF_FUZZED(76.39)), 0.0, exp(0.0), determinant(mat2(1.0, _GLF_IDENTITY(length(0.0), mix(float(length(0.0)), float(_GLF_FUZZED(float((109184u ^ 52765u)))), bool(false))), 0.0, 1.0))))))))), float(1.0), bool(true)))), max((_GLF_IDENTITY(1.0, mix(float(_GLF_IDENTITY(_GLF_FUZZED(-1231.0413), (true ? _GLF_IDENTITY(_GLF_FUZZED(-1231.0413), min(_GLF_FUZZED(-1231.0413), _GLF_FUZZED(-1231.0413))) : _GLF_FUZZED(76.39)))), float(1.0), bool(true)))), (_GLF_IDENTITY(1.0, mix(float(_GLF_IDENTITY(_GLF_FUZZED(-1231.0413), (true ? _GLF_IDENTITY(_GLF_FUZZED(-1231.0413), min(_GLF_FUZZED(-1231.0413), _GLF_FUZZED(_GLF_IDENTITY(-1231.0413, (_GLF_IDENTITY(-1231.0413, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(8.6) : -1231.0413))) - 0.0)))) : _GLF_FUZZED(76.39)))), float(1.0), bool(true)))))), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(1.0, abs(0.0) + (_GLF_IDENTITY(1.0, max(1.0, 1.0)))), mix(float(_GLF_IDENTITY(_GLF_FUZZED(-1231.0413), (true ? _GLF_IDENTITY(_GLF_FUZZED(-1231.0413), min(_GLF_IDENTITY(_GLF_FUZZED(-1231.0413), max(_GLF_FUZZED(-1231.0413), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(-1231.0413), clamp(_GLF_FUZZED(_GLF_IDENTITY(-1231.0413, mix(float(-1231.0413), float(_GLF_FUZZED(3.4)), bool(false)))), _GLF_FUZZED(-1231.0413), _GLF_FUZZED(-1231.0413))), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(-3676.6502) : _GLF_IDENTITY(_GLF_FUZZED(-1231.0413), clamp(_GLF_FUZZED(-1231.0413), _GLF_FUZZED(-1231.0413), _GLF_FUZZED(_GLF_IDENTITY(-1231.0413, min(_GLF_IDENTITY(-1231.0413, mix(float(-1231.0413), float(_GLF_FUZZED(-398.374)), _GLF_IDENTITY(bool(false), bool(bvec4(bool(false), false, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), -1231.0413))))))))), _GLF_FUZZED(-1231.0413))) : _GLF_FUZZED(76.39)))), float(1.0), bool(true)))), 1.0 * ((_GLF_IDENTITY(1.0, mix(float(_GLF_IDENTITY(_GLF_FUZZED(-1231.0413), (true ? _GLF_IDENTITY(_GLF_FUZZED(-1231.0413), min(_GLF_IDENTITY(_GLF_FUZZED(-1231.0413), max(_GLF_FUZZED(-1231.0413), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(-1231.0413), clamp(_GLF_FUZZED(_GLF_IDENTITY(_GLF_IDENTITY(-1231.0413, (-1231.0413) / 1.0), mix(float(-1231.0413), float(_GLF_FUZZED(3.4)), bool(false)))), _GLF_FUZZED(-1231.0413), _GLF_FUZZED(-1231.0413))), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(-3676.6502) : _GLF_IDENTITY(_GLF_FUZZED(-1231.0413), clamp(_GLF_FUZZED(-1231.0413), _GLF_FUZZED(-1231.0413), _GLF_FUZZED(-1231.0413))))))), _GLF_FUZZED(-1231.0413))) : _GLF_FUZZED(76.39)))), float(1.0), bool(true)))))), _GLF_IDENTITY((_GLF_IDENTITY(1.0, mix(float(_GLF_IDENTITY(_GLF_FUZZED(-1231.0413), _GLF_IDENTITY((true ? _GLF_IDENTITY(_GLF_FUZZED(-1231.0413), min(_GLF_FUZZED(-1231.0413), _GLF_FUZZED(-1231.0413))) : _GLF_FUZZED(76.39)), mix(float(_GLF_FUZZED(2.5)), float((true ? _GLF_IDENTITY(_GLF_FUZZED(-1231.0413), min(_GLF_FUZZED(-1231.0413), _GLF_FUZZED(-1231.0413))) : _GLF_FUZZED(76.39))), bool(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y))))))), float(1.0), bool(true)))), min((_GLF_IDENTITY(1.0, mix(float(_GLF_IDENTITY(_GLF_FUZZED(-1231.0413), (true ? _GLF_IDENTITY(_GLF_FUZZED(-1231.0413), min(_GLF_FUZZED(-1231.0413), _GLF_FUZZED(-1231.0413))) : _GLF_FUZZED(76.39)))), float(1.0), bool(true)))), (_GLF_IDENTITY(1.0, mix(float(_GLF_IDENTITY(_GLF_FUZZED(-1231.0413), (true ? _GLF_IDENTITY(_GLF_FUZZED(-1231.0413), min(_GLF_FUZZED(-1231.0413), _GLF_FUZZED(-1231.0413))) : _GLF_FUZZED(76.39)))), float(1.0), bool(true)))))))))) / 1.0))))));
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0), injectionSwitch.x)) > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 atomicStore(buf[next_virtual_gid], uint(read_1 + 1 == _GLF_struct_replacement_14._f5.read_2) + 1, 4, 64, 4);
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
}
