#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY((_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).x > injectionSwitch.y))) || false, ! _GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_FALSE(_GLF_IDENTITY(false, (false) && _GLF_IDENTITY(true, (true) || false)), (injectionSwitch.x > injectionSwitch.y))), bool(bvec4((_GLF_FALSE(_GLF_IDENTITY(false, (false) && true), (injectionSwitch.x > injectionSwitch.y))), true, true, false))) || false, ! (_GLF_IDENTITY(! ((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false), false || (! ((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false)))))), _GLF_IDENTITY(bool(bvec3(! (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_FALSE(_GLF_IDENTITY(false, (false) && _GLF_IDENTITY(true, (true) || false)), (injectionSwitch.x > injectionSwitch.y))), bool(bvec4((_GLF_FALSE(_GLF_IDENTITY(false, (false) && true), (injectionSwitch.x > injectionSwitch.y))), true, true, false))) || false, ! (_GLF_IDENTITY(! ((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false), false || (! ((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false)))))), true, false)), (bool(bvec3(! (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_FALSE(_GLF_IDENTITY(false, (false) && _GLF_IDENTITY(true, (true) || false)), (injectionSwitch.x > injectionSwitch.y))), bool(bvec4((_GLF_FALSE(_GLF_IDENTITY(false, (false) && true), (injectionSwitch.x > injectionSwitch.y))), true, true, false))) || false, ! (_GLF_IDENTITY(! ((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false), false || (! ((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false)))))), true, false))) && true))), (_GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_FALSE(_GLF_IDENTITY(false, (false) && _GLF_IDENTITY(true, (true) || false)), (injectionSwitch.x > injectionSwitch.y))), bool(bvec4((_GLF_FALSE(_GLF_IDENTITY(false, (false) && true), (injectionSwitch.x > injectionSwitch.y))), true, true, false))) || false, ! (_GLF_IDENTITY(! ((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false), false || (! ((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false)))))), bool(bool(! (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_FALSE(_GLF_IDENTITY(false, (false) && _GLF_IDENTITY(true, (true) || false)), (injectionSwitch.x > injectionSwitch.y))), bool(bvec4((_GLF_FALSE(_GLF_IDENTITY(false, (false) && true), (injectionSwitch.x > injectionSwitch.y))), true, true, false))) || false, ! (_GLF_IDENTITY(! ((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false), false || (! ((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false)))))))))), bool(bvec4((! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_FALSE(_GLF_IDENTITY(false, (false) && _GLF_IDENTITY(true, (true) || false)), (injectionSwitch.x > injectionSwitch.y))), ((_GLF_FALSE(_GLF_IDENTITY(false, (false) && _GLF_IDENTITY(true, (true) || false)), (injectionSwitch.x > injectionSwitch.y)))) || false), bool(bvec4((_GLF_FALSE(_GLF_IDENTITY(false, (false) && true), (injectionSwitch.x > injectionSwitch.y))), true, true, false))) || false, ! (_GLF_IDENTITY(! ((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false), false || (! ((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false))))))), false, true, false)))) && true))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY((_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).x > injectionSwitch.y))) || false, ! _GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_FALSE(_GLF_IDENTITY(false, (false) && _GLF_IDENTITY(true, (true) || false)), (injectionSwitch.x > injectionSwitch.y))), bool(bvec4((_GLF_FALSE(_GLF_IDENTITY(false, (false) && true), (injectionSwitch.x > injectionSwitch.y))), true, true, false))) || false, ! (_GLF_IDENTITY(! ((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false), false || (! ((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false)))))), _GLF_IDENTITY(bool(bvec3(! (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_FALSE(_GLF_IDENTITY(false, (false) && _GLF_IDENTITY(true, (true) || false)), (injectionSwitch.x > injectionSwitch.y))), bool(bvec4((_GLF_FALSE(_GLF_IDENTITY(false, (false) && true), (injectionSwitch.x > injectionSwitch.y))), true, true, false))) || false, ! (_GLF_IDENTITY(! ((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false), false || (! ((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false)))))), true, false)), (bool(bvec3(! (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_FALSE(_GLF_IDENTITY(false, (false) && _GLF_IDENTITY(true, (true) || false)), (injectionSwitch.x > injectionSwitch.y))), bool(bvec4((_GLF_FALSE(_GLF_IDENTITY(false, (false) && true), (injectionSwitch.x > injectionSwitch.y))), true, true, false))) || false, ! (_GLF_IDENTITY(! ((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false), false || (! ((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false)))))), true, false))) && true))), (_GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_FALSE(_GLF_IDENTITY(false, (false) && _GLF_IDENTITY(true, (true) || false)), (injectionSwitch.x > injectionSwitch.y))), bool(bvec4((_GLF_FALSE(_GLF_IDENTITY(false, (false) && true), (injectionSwitch.x > injectionSwitch.y))), true, true, false))) || false, ! (_GLF_IDENTITY(! ((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false), false || (! ((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false)))))), bool(bool(! (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_FALSE(_GLF_IDENTITY(false, (false) && _GLF_IDENTITY(true, (true) || false)), (injectionSwitch.x > injectionSwitch.y))), bool(bvec4((_GLF_FALSE(_GLF_IDENTITY(false, (false) && true), (injectionSwitch.x > injectionSwitch.y))), true, true, false))) || false, ! (_GLF_IDENTITY(! ((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false), false || (! ((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false)))))))))), bool(bvec4((! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_FALSE(_GLF_IDENTITY(false, (false) && _GLF_IDENTITY(true, (true) || false)), (injectionSwitch.x > injectionSwitch.y))), ((_GLF_FALSE(_GLF_IDENTITY(false, (false) && _GLF_IDENTITY(true, (true) || false)), (injectionSwitch.x > injectionSwitch.y)))) || false), bool(bvec4((_GLF_FALSE(_GLF_IDENTITY(false, (false) && true), (injectionSwitch.x > injectionSwitch.y))), true, true, false))) || false, ! (_GLF_IDENTITY(! ((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false), false || (! ((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false))))))), false, true, false)))) && true))), bool(bvec4(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY((_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).x > injectionSwitch.y))) || false, ! _GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_FALSE(_GLF_IDENTITY(false, (false) && _GLF_IDENTITY(true, (true) || false)), (injectionSwitch.x > injectionSwitch.y))), bool(bvec4((_GLF_FALSE(_GLF_IDENTITY(false, (false) && true), (injectionSwitch.x > injectionSwitch.y))), true, true, false))) || false, ! (_GLF_IDENTITY(! ((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false), false || (! ((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false)))))), _GLF_IDENTITY(bool(bvec3(! (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_FALSE(_GLF_IDENTITY(false, (false) && _GLF_IDENTITY(true, (true) || false)), (injectionSwitch.x > injectionSwitch.y))), bool(bvec4((_GLF_FALSE(_GLF_IDENTITY(false, (false) && true), (injectionSwitch.x > injectionSwitch.y))), true, true, false))) || false, ! (_GLF_IDENTITY(! ((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false), false || (! ((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false)))))), true, false)), (bool(bvec3(! (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_FALSE(_GLF_IDENTITY(false, (false) && _GLF_IDENTITY(true, (true) || false)), (injectionSwitch.x > injectionSwitch.y))), bool(bvec4((_GLF_FALSE(_GLF_IDENTITY(false, (false) && true), (injectionSwitch.x > injectionSwitch.y))), true, true, false))) || false, ! (_GLF_IDENTITY(! ((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false), false || (! ((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false)))))), true, false))) && true))), (_GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_FALSE(_GLF_IDENTITY(false, (false) && _GLF_IDENTITY(true, (true) || false)), (injectionSwitch.x > injectionSwitch.y))), bool(bvec4((_GLF_FALSE(_GLF_IDENTITY(false, (false) && true), (injectionSwitch.x > injectionSwitch.y))), true, true, false))) || false, ! (_GLF_IDENTITY(! ((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false), false || (! ((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false)))))), bool(bool(! (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_FALSE(_GLF_IDENTITY(false, (false) && _GLF_IDENTITY(true, (true) || false)), (injectionSwitch.x > injectionSwitch.y))), bool(bvec4((_GLF_FALSE(_GLF_IDENTITY(false, (false) && true), (injectionSwitch.x > injectionSwitch.y))), true, true, false))) || false, ! (_GLF_IDENTITY(! ((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false), false || (! ((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false)))))))))), bool(bvec4((! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_FALSE(_GLF_IDENTITY(false, (false) && _GLF_IDENTITY(true, (true) || false)), (injectionSwitch.x > injectionSwitch.y))), ((_GLF_FALSE(_GLF_IDENTITY(false, (false) && _GLF_IDENTITY(true, (true) || false)), (injectionSwitch.x > injectionSwitch.y)))) || false), bool(bvec4((_GLF_FALSE(_GLF_IDENTITY(false, (false) && true), (injectionSwitch.x > injectionSwitch.y))), true, true, false))) || false, ! (_GLF_IDENTITY(! ((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false), false || (! ((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false))))))), false, true, false)))) && true))), false, true, false)))) || false)))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat2x3(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(4.4), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(-1.0)), bvec2(true, false))), _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 1.0, 1.0)), max(_GLF_IDENTITY(vec2(mat2x3(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(4.4), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(-1.0)), bvec2(true, false))), _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 1.0, 1.0)), (vec2(mat2x3(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(4.4), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(-1.0)), bvec2(true, false))), _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 1.0, 1.0))) / vec2(1.0, 1.0)), vec2(mat2x3(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(4.4), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(-1.0)), bvec2(true, false))), _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 1.0, 1.0))))), injectionSwitch)).y)))))))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, true)))))
  return;
 if(_GLF_DEAD(false))
  return;
 uint subgroup_size = gl_SubgroupSize;
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 uint num_workgroup = gl_NumWorkGroups.x;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, false)))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
      barrier();
     barrier();
    }
   return;
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && _GLF_IDENTITY(true, bool(bvec3(true, false, false))))))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-9.2)), vec2(_GLF_FUZZED(-5665.8067), (injectionSwitch)[1]), bvec2(false, true))).x > injectionSwitch.y)))))))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))
    return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  barrier();
 uint workgroup_size = _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, (true ? gl_WorkGroupSize : _GLF_FUZZED(uvec3(68678u, 156716u, 43265u)))), uvec3(_GLF_IDENTITY(gl_WorkGroupSize[0], (gl_WorkGroupSize[0]) / 1u), gl_WorkGroupSize[1], gl_WorkGroupSize[2])).x;
 if(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), (! (_GLF_DEAD(false))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), (bool(false)) && true)))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false)))))), ! (! (_GLF_DEAD(false)))), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))), false || (bool(bool(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false))))))))), true, false, false)), _GLF_IDENTITY(bool(bvec3(bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false)))))), ! (! (_GLF_DEAD(false)))), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))), false || (bool(bool(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false))))))))), true, false, false)), false, true)), false || (bool(bvec3(bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false)))))), ! (! (_GLF_DEAD(false)))), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))), false || (bool(bool(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false))))))))), true, false, false)), false, true)))))))
    return;
   barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, true && (false)), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(383.220), _GLF_FUZZED(-5.3)), vec2((injectionSwitch)[_GLF_IDENTITY(0, min(0, 0))], (injectionSwitch)[1]), bvec2(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (_GLF_IDENTITY(! (injectionSwitch.x < injectionSwitch.y), ! (! (! (injectionSwitch.x < injectionSwitch.y)))))))), true))).x, min(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mix(vec2(_GLF_FUZZED(383.220), _GLF_FUZZED(-5.3)), vec2((injectionSwitch)[_GLF_IDENTITY(0, min(0, 0))], (injectionSwitch)[1]), bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)), vec2(_GLF_IDENTITY(mat3x4(mix(vec2(_GLF_FUZZED(383.220), _GLF_FUZZED(-5.3)), vec2((injectionSwitch)[_GLF_IDENTITY(0, min(0, 0))], (injectionSwitch)[1]), bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)), abs(0.0), 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0), (true ? mat3x4(mix(vec2(_GLF_FUZZED(383.220), _GLF_FUZZED(-5.3)), vec2((injectionSwitch)[_GLF_IDENTITY(0, min(0, 0))], (injectionSwitch)[1]), bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)), abs(0.0), 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0) : _GLF_FUZZED(mat3x4(0.1, 8.5, -15.84, -5.4, -6009.9332, 61.91, -6.8, 4925.5948, 427.729, 9786.8621, -2.0, -7.6))))))).x, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(383.220), _GLF_FUZZED(-5.3)), vec2((injectionSwitch)[_GLF_IDENTITY(0, min(0, 0))], (injectionSwitch)[1]), bvec2(_GLF_TRUE(_GLF_IDENTITY(true, ! (! (true))), (injectionSwitch.x < injectionSwitch.y)), true))).x, clamp(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(383.220), _GLF_FUZZED(-5.3)), vec2((injectionSwitch)[_GLF_IDENTITY(0, min(0, 0))], (injectionSwitch)[1]), bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))).x, _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(383.220), _GLF_FUZZED(-5.3)), vec2((injectionSwitch)[_GLF_IDENTITY(0, min(0, 0))], (injectionSwitch)[1]), bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))).x, _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(383.220), _GLF_FUZZED(-5.3)), vec2((injectionSwitch)[_GLF_IDENTITY(_GLF_IDENTITY(0, min(0, 0)), clamp(_GLF_IDENTITY(0, min(0, 0)), _GLF_IDENTITY(0, min(0, 0)), _GLF_IDENTITY(0, min(0, 0))))], (injectionSwitch)[1]), _GLF_IDENTITY(bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_IDENTITY(true, (_GLF_IDENTITY(true, true && (true))) && true)), _GLF_IDENTITY(bvec2(bvec3(bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_IDENTITY(true, (_GLF_IDENTITY(true, true && (true))) && true)), false)), bvec2(bvec2(bvec2(bvec3(bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_IDENTITY(true, (_GLF_IDENTITY(true, true && (true))) && true)), false)))))))).x)))) > injectionSwitch.y, _GLF_TRUE(_GLF_IDENTITY(true, true && (true)), (injectionSwitch.x < injectionSwitch.y))), bvec2(bvec2(_GLF_IDENTITY(bvec2(injectionSwitch.x > injectionSwitch.y, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bvec2(bvec2(bvec2(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(-72.12, 644.239)))).y, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))))), true && (bool(_GLF_IDENTITY(bvec2(injectionSwitch.x > injectionSwitch.y, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(true, bool(bvec3(_GLF_IDENTITY(true, bool(bool(true))), false, true))) ? injectionSwitch.x : _GLF_FUZZED(_GLF_IDENTITY(-96.36, min(-96.36, -96.36))))) < injectionSwitch.y))), bvec2(bvec2(_GLF_IDENTITY(bvec2(injectionSwitch.x > injectionSwitch.y, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bvec2(bvec2(bvec2(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + 0.0) > injectionSwitch.y, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, (injectionSwitch.x < injectionSwitch.y) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))))))))))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! (false))))))))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), (_GLF_IDENTITY(false, (false) || false)) || false), false || (false))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), ! (! _GLF_IDENTITY((false), bool(bvec2(_GLF_IDENTITY((false), ((false)) && true), false))))), bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), ! (! _GLF_IDENTITY((false), bool(bvec2(_GLF_IDENTITY((false), ((false)) && true), false))))))))), false || (_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(! (_GLF_IDENTITY(! (false), (! _GLF_IDENTITY((false), ! (! ((_GLF_IDENTITY(false, false || (false))))))) && true)), ! (_GLF_IDENTITY(! (! (_GLF_IDENTITY(! (false), (! _GLF_IDENTITY((false), ! (! ((false))))) && true))), ! (! (! (! (_GLF_IDENTITY(! (false), (! _GLF_IDENTITY((false), ! (! _GLF_IDENTITY(((false)), (((false))) && _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ((injectionSwitch.x < injectionSwitch.y)) && true)))))) && true)))))))))))))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], (injectionSwitch[1]) / 1.0))), vec2(0.0, 0.0) + (injectionSwitch)).x > injectionSwitch.y, true && (_GLF_IDENTITY(injectionSwitch, vec2(0.0, _GLF_IDENTITY(0.0, float(mat3x2(0.0, 0.0, 0.0, 0.0, 1.0, 1.0)))) + (injectionSwitch)).x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).y)), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], (injectionSwitch[1]) / 1.0))), vec2(0.0, 0.0) + (injectionSwitch)).x > injectionSwitch.y, true && (_GLF_IDENTITY(injectionSwitch, vec2(0.0, _GLF_IDENTITY(0.0, float(mat3x2(0.0, 0.0, 0.0, 0.0, 1.0, 1.0)))) + (injectionSwitch)).x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).y)), true && (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], (injectionSwitch[1]) / 1.0))), vec2(0.0, 0.0) + (injectionSwitch)).x > injectionSwitch.y, true && (_GLF_IDENTITY(injectionSwitch, vec2(0.0, _GLF_IDENTITY(0.0, float(mat3x2(0.0, 0.0, 0.0, 0.0, 1.0, 1.0)))) + (injectionSwitch)).x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).y)))))))))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 uint workgroup_id = _GLF_IDENTITY(gl_WorkGroupID.x, _GLF_IDENTITY((gl_WorkGroupID.x) << 0u, clamp(_GLF_IDENTITY((gl_WorkGroupID.x) << 0u, ((gl_WorkGroupID.x) << 0u) ^ 0u), _GLF_IDENTITY((gl_WorkGroupID.x) << 0u, clamp((gl_WorkGroupID.x) << 0u, (gl_WorkGroupID.x) << 0u, (gl_WorkGroupID.x) << 0u)), (gl_WorkGroupID.x) << 0u)));
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, 1.0 * (_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))))))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / cos(0.0)) > _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch))) / _GLF_IDENTITY(vec2(1.0, 1.0), max(vec2(1.0, 1.0), vec2(1.0, 1.0)))).y))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec3(bvec2(false, true), true)))))))
  return;
 uint workgroup_base = workgroup_size * workgroup_id;
 uint virtual_gid = _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_id * _GLF_IDENTITY(subgroup_size, uint(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(subgroup_size, 0u + (subgroup_size)), 1u, 0u), (false ? _GLF_FUZZED(uvec3(8614u, 111532u, 24065u)) : uvec3(_GLF_IDENTITY(subgroup_size, 0u + (subgroup_size)), 1u, 0u))))), (subgroup_id * subgroup_size) | (subgroup_id * subgroup_size)), max(_GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, clamp(subgroup_id, _GLF_IDENTITY(subgroup_id, clamp(subgroup_id, subgroup_id, _GLF_IDENTITY(subgroup_id, (subgroup_id) | (subgroup_id)))), subgroup_id)) * subgroup_size, (subgroup_id * subgroup_size) | (subgroup_id * subgroup_size)), (workgroup_base + _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(subgroup_local_id) : subgroup_id)) * subgroup_size, (subgroup_id * subgroup_size) | (subgroup_id * subgroup_size))) - 0u), workgroup_base + _GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) | (subgroup_id * subgroup_size)))) + subgroup_local_id, clamp(_GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_id * _GLF_IDENTITY(subgroup_size, uint(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(subgroup_size, 0u + (subgroup_size)), 1u, 0u), (false ? _GLF_FUZZED(uvec3(8614u, 111532u, 24065u)) : uvec3(_GLF_IDENTITY(subgroup_size, 0u + (subgroup_size)), 1u, 0u))))), (subgroup_id * subgroup_size) | (subgroup_id * subgroup_size)), max(_GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) | (subgroup_id * subgroup_size)), (workgroup_base + _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(subgroup_local_id) : subgroup_id)) * subgroup_size, (subgroup_id * subgroup_size) | (subgroup_id * subgroup_size))) - 0u), workgroup_base + _GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) | (subgroup_id * subgroup_size)))) + subgroup_local_id, _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_id * _GLF_IDENTITY(subgroup_size, uint(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(subgroup_size, 0u + (subgroup_size)), 1u, 0u), (false ? _GLF_FUZZED(uvec3(8614u, 111532u, 24065u)) : uvec3(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, 0u + (subgroup_size)), 0u + (_GLF_IDENTITY(subgroup_size, 0u + (subgroup_size)))), 1u, 0u))))), (subgroup_id * subgroup_size) | (subgroup_id * subgroup_size)), max(_GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) | (subgroup_id * subgroup_size)), (workgroup_base + _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(subgroup_local_id) : subgroup_id)) * subgroup_size, (subgroup_id * subgroup_size) | (subgroup_id * subgroup_size))) - 0u), workgroup_base + _GLF_IDENTITY(subgroup_id * subgroup_size, _GLF_IDENTITY((subgroup_id * subgroup_size), ((subgroup_id * subgroup_size)) * 1u) | (subgroup_id * subgroup_size)))) + subgroup_local_id, (_GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_id * _GLF_IDENTITY(subgroup_size, uint(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(subgroup_size, 0u + (subgroup_size)), 1u, 0u), (false ? _GLF_FUZZED(uvec3(8614u, 111532u, 24065u)) : uvec3(_GLF_IDENTITY(subgroup_size, 0u + (_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(uint(uvec3(subgroup_size, ((((1u << _GLF_IDENTITY(uint(1u), uint(1u))) >> _GLF_IDENTITY(uint(1u), uint(1u))) << _GLF_IDENTITY(uint(3u), uint(3u))) >> _GLF_IDENTITY(uint(3u), _GLF_IDENTITY(uint(3u), (uint(3u)) << 0u))), 0u)), (uint(uvec3(subgroup_size, ((((1u << _GLF_IDENTITY(uint(1u), uint(1u))) >> _GLF_IDENTITY(uint(1u), uint(1u))) << _GLF_IDENTITY(uint(3u), uint(3u))) >> _GLF_IDENTITY(uint(3u), _GLF_IDENTITY(uint(3u), (uint(3u)) << 0u))), 0u))) * 1u)))), 1u, 0u))))), (subgroup_id * subgroup_size) | (subgroup_id * subgroup_size)), max(_GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) | (subgroup_id * subgroup_size)), (workgroup_base + _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(subgroup_local_id) : subgroup_id)) * subgroup_size, _GLF_IDENTITY((subgroup_id * subgroup_size) | (subgroup_id * subgroup_size), min((subgroup_id * subgroup_size) | (subgroup_id * subgroup_size), (subgroup_id * subgroup_size) | (subgroup_id * subgroup_size))))) - 0u), workgroup_base + _GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) | (subgroup_id * subgroup_size)))) + subgroup_local_id) ^ 0u), _GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_id * _GLF_IDENTITY(subgroup_size, uint(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(subgroup_size, 0u + (subgroup_size)), 1u, 0u), (_GLF_IDENTITY(false ? _GLF_FUZZED(uvec3(8614u, 111532u, 24065u)) : uvec3(_GLF_IDENTITY(subgroup_size, 0u + (subgroup_size)), 1u, 0u), min(_GLF_IDENTITY(false ? _GLF_FUZZED(uvec3(8614u, 111532u, 24065u)) : uvec3(_GLF_IDENTITY(subgroup_size, 0u + (subgroup_size)), 1u, 0u), (false ? _GLF_FUZZED(uvec3(8614u, 111532u, 24065u)) : uvec3(_GLF_IDENTITY(subgroup_size, 0u + (subgroup_size)), 1u, 0u)) | (false ? _GLF_FUZZED(uvec3(8614u, 111532u, 24065u)) : uvec3(_GLF_IDENTITY(subgroup_size, 0u + (subgroup_size)), 1u, 0u))), false ? _GLF_FUZZED(uvec3(8614u, 111532u, 24065u)) : uvec3(_GLF_IDENTITY(subgroup_size, 0u + (subgroup_size)), 1u, 0u))))))), (_GLF_IDENTITY(subgroup_id, (subgroup_id) - 0u) * subgroup_size) | (subgroup_id * subgroup_size)), max(_GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) | (subgroup_id * subgroup_size)), (workgroup_base + _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(subgroup_local_id) : subgroup_id)) * subgroup_size, (subgroup_id * subgroup_size) | (subgroup_id * subgroup_size))) - 0u), workgroup_base + _GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) | (subgroup_id * subgroup_size)))) + subgroup_local_id));
 if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_DEAD(_GLF_IDENTITY(false, false || (false)))))), true, false, true)), false || (bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_DEAD(false)))), true, false, true)))), bool(bvec3(_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_DEAD(_GLF_IDENTITY(false, false || (false)))))), true, false, true)), false || (bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_DEAD(false)))), true, false, true)))), false, false)))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        return;
       barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
      }
     return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, true && (false)), true, true, true)))))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     barrier();
    }
   return;
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, _GLF_IDENTITY(false, false || (false)), true), bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(false, _GLF_IDENTITY(false, false || (false)), true), bvec3(bvec4(bvec3(false, _GLF_IDENTITY(false, false || (false)), true), true)))), bvec3(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(false, _GLF_IDENTITY(false, false || (false)), true), bvec3(bvec4(bvec3(false, _GLF_IDENTITY(false, false || (false)), true), true)))), bvec3(bvec4(bvec3(_GLF_IDENTITY(bvec3(false, _GLF_IDENTITY(false, false || (false)), true), bvec3(bvec4(bvec3(false, _GLF_IDENTITY(false, false || (false)), true), true)))), true))))))))))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), ! (! ((! (false)))))), _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))).y))))))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          return;
         barrier();
        }
       return;
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true))))), _GLF_IDENTITY(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, (false) || false), true, true), bvec3(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, (false) || false), true, true), bvec3(bvec4(bvec3(_GLF_IDENTITY(false, (false) || false), true, true), false)))))))), bool(bvec2(false, true))) || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) || false)))
      return;
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(-42.51) : _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0))) > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, (false) && true)))))
      return;
     return;
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      return;
     return;
    }
   return;
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))
    barrier();
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     return;
    }
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    return;
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  return;
 uint next_virtual_gid = workgroup_base + _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (subgroup_id) | 0u) * subgroup_size, 0u | (_GLF_IDENTITY(subgroup_id, (subgroup_id) | 0u) * subgroup_size)), (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (subgroup_id) | 0u) * subgroup_size, (_GLF_IDENTITY(subgroup_id, (subgroup_id) | 0u) * subgroup_size) >> 0u)) | 0u) + ((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, ~ (_GLF_IDENTITY(~ _GLF_IDENTITY((subgroup_local_id), ((subgroup_local_id)) + (0u >> _GLF_IDENTITY(uint(1u), uint(1u)))), (false ? _GLF_FUZZED(virtual_gid) : _GLF_IDENTITY(_GLF_IDENTITY(~ (subgroup_local_id), (~ (subgroup_local_id)) >> 0u), _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec2(_GLF_IDENTITY(~ (subgroup_local_id), (~ (subgroup_local_id)) >> 0u), 0u), uvec2(0u, 0u) ^ (uvec2(_GLF_IDENTITY(~ (subgroup_local_id), (_GLF_IDENTITY(~ (subgroup_local_id), (true ? ~ (subgroup_local_id) : _GLF_FUZZED((subgroup_id --))))) >> _GLF_IDENTITY(0u, ~ (~ (_GLF_IDENTITY(0u, 0u + (0u)))))), 0u)))), min(uint(_GLF_IDENTITY(uvec2(_GLF_IDENTITY(~ (subgroup_local_id), _GLF_IDENTITY((~ (subgroup_local_id)) >> 0u, clamp(_GLF_IDENTITY((~ (subgroup_local_id)) >> 0u, ((~ (subgroup_local_id)) >> 0u) | ((~ (subgroup_local_id)) >> 0u)), (~ (subgroup_local_id)) >> 0u, _GLF_IDENTITY((~ (subgroup_local_id)) >> 0u, (0u >> _GLF_IDENTITY(uint(2u), uint(2u))) + ((~ (subgroup_local_id)) >> 0u))))), _GLF_IDENTITY(0u, clamp(0u, 0u, 0u))), uvec2(0u, 0u) ^ (uvec2(_GLF_IDENTITY(~ (subgroup_local_id), (~ (subgroup_local_id)) >> 0u), 0u)))), uint(_GLF_IDENTITY(uvec2(_GLF_IDENTITY(~ (subgroup_local_id), (~ (subgroup_local_id)) >> 0u), 0u), uvec2(0u, 0u) ^ (uvec2(_GLF_IDENTITY(~ (subgroup_local_id), (~ (subgroup_local_id)) >> 0u), 0u))))))))))), uint(uvec4(subgroup_local_id, 0u, 1u, 0u))) + _GLF_IDENTITY(1, _GLF_IDENTITY((1), ((1)) / 1) | 0)) % _GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size))));
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) || false), (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)).x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  return;
 uint read_1 = atomicLoad(buf[virtual_gid], 4, 64, 0);
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec2(false, false)))) || _GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true)) && _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)))))))))
  barrier();
 atomicStore(buf[next_virtual_gid], uint(_GLF_IDENTITY(read_1, clamp(read_1, read_1, _GLF_IDENTITY(read_1, (_GLF_IDENTITY(read_1, (read_1) - 0u)) >> _GLF_IDENTITY((0u >> _GLF_IDENTITY(uint(8u), uint(8u))), (_GLF_IDENTITY((0u >> _GLF_IDENTITY(uint(8u), uint(8u))), 0u ^ ((0u >> _GLF_IDENTITY(uint(8u), uint(8u)))))) >> 0u)))) + 1), 4, 64, _GLF_IDENTITY(4, _GLF_IDENTITY((_GLF_IDENTITY(4, ~ (~ (4)))), clamp(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(4, ~ _GLF_IDENTITY((~ (4)), ((~ (4))) * 1))), ((_GLF_IDENTITY(4, ~ (~ (4))))) / 1), _GLF_IDENTITY(max(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(4, (_GLF_IDENTITY(4, 0 + (4))) - 0), ~ (~ (4)))), ((_GLF_IDENTITY(4, ~ (~ (4))))) / 1), _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(4, ~ (~ (4)))), ((_GLF_IDENTITY(_GLF_IDENTITY(4, ~ (~ (4))), max(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(4, clamp(4, 4, 4)), ~ (~ (4))), min(_GLF_IDENTITY(4, ~ (~ (4))), _GLF_IDENTITY(4, ~ (~ (4))))), _GLF_IDENTITY(4, ~ (~ (4))))))) / 1), (true ? _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(4, ~ (~ (4)))), ((_GLF_IDENTITY(4, ~ (~ (4))))) / 1), (_GLF_IDENTITY((_GLF_IDENTITY(4, ~ (~ (4)))), ((_GLF_IDENTITY(4, ~ (~ (4))))) / 1)) / (((1 | 1) << _GLF_IDENTITY(int(6), int(6))) >> _GLF_IDENTITY(int(6), int(6)))) : _GLF_FUZZED(_GLF_IDENTITY(-18761, 0 + (-18761)))))), 0 | (max(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(4, (_GLF_IDENTITY(4, 0 + (4))) - 0), ~ (~ (4)))), ((_GLF_IDENTITY(4, ~ (~ (4))))) / 1), _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(4, ~ (~ (4)))), ((_GLF_IDENTITY(_GLF_IDENTITY(4, ~ (~ (4))), max(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(4, clamp(4, 4, 4)), ~ (~ (4))), min(_GLF_IDENTITY(4, ~ (~ (4))), _GLF_IDENTITY(4, ~ (~ (4))))), _GLF_IDENTITY(4, ~ (~ (4))))))) / 1), (true ? _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(4, ~ (~ (4)))), ((_GLF_IDENTITY(4, ~ (~ (4))))) / 1), (_GLF_IDENTITY((_GLF_IDENTITY(4, ~ (~ (4)))), ((_GLF_IDENTITY(4, ~ (~ (4))))) / 1)) / (((1 | 1) << _GLF_IDENTITY(int(6), int(6))) >> _GLF_IDENTITY(int(6), int(6)))) : _GLF_FUZZED(_GLF_IDENTITY(-18761, 0 + (-18761))))))))), (_GLF_IDENTITY(4, ~ (~ _GLF_IDENTITY((4), ((4)) - 0)))), (_GLF_IDENTITY(4, ~ _GLF_IDENTITY((~ (4)), clamp((~ (4)), (~ (4)), _GLF_IDENTITY((~ (4)), ((~ (4))) | 0))))))) | (4)));
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(sign(-1233.6058)) : injectionSwitch.y))))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    return;
   barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), bool(_GLF_IDENTITY(bool(_GLF_DEAD(false)), false || (bool(_GLF_DEAD(false))))))) && true))
    return;
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)) : _GLF_FUZZED(-674.875)))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_DEAD(false), true)))), (bool(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))), true))))) && true)), (bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_DEAD(false), true)))), (bool(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_DEAD(false), true))))) && true))) && true)))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (_GLF_IDENTITY(! (! (false)), true && (! (! (false))))))))), bool(bool(_GLF_DEAD(false)))), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false)))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || ((_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false)))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(bool(false)))))), (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, true, false, _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ((injectionSwitch.x < injectionSwitch.y)) || false)))), true && (bool(bvec4(false, true, false, _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(mat2x4(_GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(-7.2) : injectionSwitch.y)), sqrt(1.0), 0.0, cos(length(0.0)), 1.0, 1.0, 0.0, 1.0)), 0.0 + (float(mat2x4(_GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(-7.2) : injectionSwitch.y)), sqrt(1.0), 0.0, cos(length(0.0)), 1.0, 1.0, 0.0, 1.0))))))))))))) || false), ! (! (_GLF_IDENTITY(false, bool(bool(false)))))), (injectionSwitch.x > injectionSwitch.y))), true && (bool(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(bool(false)))))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0))))))), bool(bool(bool(_GLF_IDENTITY(bool(_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, true, false, _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ((injectionSwitch.x < injectionSwitch.y)) || false)))), true && (bool(bvec4(false, true, false, _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(mat2x4(_GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(-7.2) : injectionSwitch.y)), sqrt(1.0), 0.0, cos(length(0.0)), 1.0, 1.0, 0.0, 1.0)), 0.0 + (float(mat2x4(_GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(-7.2) : injectionSwitch.y)), sqrt(1.0), 0.0, cos(length(0.0)), 1.0, 1.0, 0.0, 1.0))))))))))))) || false), ! (! (_GLF_IDENTITY(false, bool(bool(false)))))), (injectionSwitch.x > injectionSwitch.y))), true && (bool(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(bool(false)))))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0)))))))))))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
      barrier();
     return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))
  barrier();
 uint read_2 = atomicLoad(buf[virtual_gid], 4, 64, 0);
 atomicStore(buf[next_virtual_gid], uint(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1, max(read_1 + 1, _GLF_IDENTITY(read_1 + 1, ~ (~ (read_1 + 1))))), (read_1 + 1) << 0u) == read_2, (_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1, (read_1 + 1) << 0u) == read_2, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || _GLF_IDENTITY((_GLF_IDENTITY(read_1 + 1, _GLF_IDENTITY((_GLF_IDENTITY(read_1, (read_1) << 0u) + 1) << 0u, 0u | (_GLF_IDENTITY((read_1 + 1), (_GLF_IDENTITY((read_1 + 1), (_GLF_IDENTITY((read_1 + 1), (false ? _GLF_IDENTITY(_GLF_FUZZED(workgroup_size), (false ? _GLF_FUZZED(subgroup_size) : _GLF_FUZZED(workgroup_size))) : (read_1 + 1)))) << 0u)) - 0u) << 0u))) == read_2), ! (! (_GLF_IDENTITY((_GLF_IDENTITY(read_1 + 1, _GLF_IDENTITY((_GLF_IDENTITY(read_1, (read_1) << 0u) + 1) << 0u, 0u | (_GLF_IDENTITY((_GLF_IDENTITY(read_1, _GLF_IDENTITY(uint(uint(read_1)), ~ (~ (uint(uint(read_1)))))) + 1), (_GLF_IDENTITY((read_1 + 1), _GLF_IDENTITY((_GLF_IDENTITY((read_1 + 1), (false ? _GLF_IDENTITY(_GLF_FUZZED(workgroup_size), (false ? _GLF_FUZZED(subgroup_size) : _GLF_FUZZED(_GLF_IDENTITY(workgroup_size, 1u * (_GLF_IDENTITY(workgroup_size, (true ? workgroup_size : _GLF_FUZZED(read_1)))))))) : _GLF_IDENTITY((read_1 + 1), 0u | ((read_1 + 1)))))), ((_GLF_IDENTITY((read_1 + 1), (false ? _GLF_IDENTITY(_GLF_FUZZED(workgroup_size), (false ? _GLF_FUZZED(subgroup_size) : _GLF_FUZZED(workgroup_size))) : _GLF_IDENTITY((read_1 + 1), 0u | ((read_1 + 1))))))) | (_GLF_IDENTITY((_GLF_IDENTITY((read_1 + 1), (false ? _GLF_IDENTITY(_GLF_FUZZED(workgroup_size), (false ? _GLF_FUZZED(subgroup_size) : _GLF_FUZZED(workgroup_size))) : _GLF_IDENTITY((read_1 + 1), 0u | ((read_1 + _GLF_IDENTITY(1, clamp(1, _GLF_IDENTITY(1, (1) / 1), 1)))))))), ((_GLF_IDENTITY((read_1 + 1), (false ? _GLF_IDENTITY(_GLF_FUZZED(workgroup_size), (false ? _GLF_FUZZED(subgroup_size) : _GLF_FUZZED(workgroup_size))) : _GLF_IDENTITY((read_1 + 1), 0u | ((read_1 + 1))))))) | (_GLF_IDENTITY((_GLF_IDENTITY((read_1 + 1), (false ? _GLF_IDENTITY(_GLF_FUZZED(workgroup_size), (false ? _GLF_FUZZED(subgroup_size) : _GLF_FUZZED(workgroup_size))) : _GLF_IDENTITY((read_1 + 1), 0u | ((read_1 + 1)))))), ((_GLF_IDENTITY((read_1 + 1), (false ? _GLF_IDENTITY(_GLF_FUZZED(workgroup_size), (false ? _GLF_FUZZED(subgroup_size) : _GLF_FUZZED(workgroup_size))) : _GLF_IDENTITY((read_1 + 1), 0u | ((read_1 + 1))))))) / 1u))))) << 0u)) - 0u) << 0u))) == read_2), bool(bool(_GLF_IDENTITY((_GLF_IDENTITY(read_1 + 1, _GLF_IDENTITY((_GLF_IDENTITY(read_1, (read_1) << 0u) + 1) << 0u, 0u | (_GLF_IDENTITY((read_1 + 1), (_GLF_IDENTITY((read_1 + 1), (_GLF_IDENTITY((read_1 + 1), (_GLF_IDENTITY(false ? _GLF_IDENTITY(_GLF_FUZZED(workgroup_size), (false ? _GLF_FUZZED(subgroup_size) : _GLF_FUZZED(workgroup_size))) : (read_1 + 1), (_GLF_IDENTITY(false ? _GLF_IDENTITY(_GLF_FUZZED(workgroup_size), (false ? _GLF_FUZZED(subgroup_size) : _GLF_FUZZED(workgroup_size))) : (read_1 + 1), (false ? _GLF_IDENTITY(_GLF_FUZZED(workgroup_size), (false ? _GLF_FUZZED(subgroup_size) : _GLF_FUZZED(workgroup_size))) : (read_1 + 1)) >> 0u)) * 1u)))) << 0u)) - 0u) << 0u))) == read_2), bool(bool((_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1, _GLF_IDENTITY((_GLF_IDENTITY(read_1, (read_1) << 0u) + 1) << 0u, 0u | (_GLF_IDENTITY((read_1 + 1), (_GLF_IDENTITY((read_1 + 1), (_GLF_IDENTITY((read_1 + 1), (_GLF_IDENTITY(false ? _GLF_IDENTITY(_GLF_FUZZED(workgroup_size), (false ? _GLF_FUZZED(subgroup_size) : _GLF_FUZZED(workgroup_size))) : (read_1 + 1), (_GLF_IDENTITY(false ? _GLF_IDENTITY(_GLF_FUZZED(workgroup_size), (false ? _GLF_FUZZED(subgroup_size) : _GLF_FUZZED(workgroup_size))) : (read_1 + 1), (false ? _GLF_IDENTITY(_GLF_FUZZED(workgroup_size), (false ? _GLF_FUZZED(subgroup_size) : _GLF_FUZZED(workgroup_size))) : (read_1 + 1)) >> 0u)) * 1u)))) << 0u)) - 0u) << 0u))), (_GLF_IDENTITY(read_1 + 1, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(read_1, (read_1) << 0u), 0u + (_GLF_IDENTITY(read_1, (read_1) << 0u))) + _GLF_IDENTITY(1, (1) | 0)) << 0u, 0u | (_GLF_IDENTITY((read_1 + 1), (_GLF_IDENTITY((read_1 + 1), (_GLF_IDENTITY((read_1 + 1), (_GLF_IDENTITY(false ? _GLF_IDENTITY(_GLF_FUZZED(workgroup_size), (false ? _GLF_FUZZED(subgroup_size) : _GLF_FUZZED(workgroup_size))) : (read_1 + 1), (_GLF_IDENTITY(false ? _GLF_IDENTITY(_GLF_FUZZED(workgroup_size), (false ? _GLF_FUZZED(subgroup_size) : _GLF_FUZZED(workgroup_size))) : (_GLF_IDENTITY(read_1, (_GLF_IDENTITY(read_1, min(read_1, read_1))) | (read_1)) + 1), (false ? _GLF_IDENTITY(_GLF_FUZZED(workgroup_size), (false ? _GLF_FUZZED(subgroup_size) : _GLF_FUZZED(workgroup_size))) : (read_1 + 1)) >> 0u)) * 1u)))) << 0u)) - 0u) << 0u)))) * uint(_GLF_ONE(1.0, injectionSwitch.y))) == read_2)))))))))))) && _GLF_TRUE(_GLF_IDENTITY(true, (_GLF_IDENTITY(true, (_GLF_IDENTITY(true, bool(bool(true)))) && true)) && true), _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-173.018), _GLF_FUZZED(-8.9)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))).x < injectionSwitch.y), false || ((injectionSwitch.x < injectionSwitch.y)))))) + 1, 4, 64, 4);
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
    return;
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], float(mat4(_GLF_IDENTITY(injectionSwitch[0], float(mat3(injectionSwitch[0], 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0))), 1.0, 1.0, determinant(mat2(0.0, 0.0, 0.0, 0.0)), 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, determinant(mat3(0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0)), 1.0))), injectionSwitch[1])), (false ? _GLF_FUZZED(vec2(-85.08, 36.75)) : _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], float(mat4(_GLF_IDENTITY(injectionSwitch[0], float(mat3(injectionSwitch[0], 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0))), 1.0, 1.0, determinant(mat2(0.0, 0.0, 0.0, 0.0)), 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, determinant(mat3(0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0)), 1.0))), injectionSwitch[1]))))[1])).y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(_GLF_IDENTITY(vec2((injectionSwitch)[0], _GLF_FUZZED(2.2)), max(vec2((injectionSwitch)[0], _GLF_FUZZED(2.2)), vec2((injectionSwitch)[0], _GLF_FUZZED(2.2)))), _GLF_IDENTITY(vec2(_GLF_FUZZED(7.4), (injectionSwitch)[1]), (vec2(_GLF_FUZZED(7.4), (injectionSwitch)[1])) + vec2(0.0, 0.0)), bvec2(false, true))).y))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false))) && _GLF_IDENTITY(true, (true) && true))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false), bool(bool(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false))))) || false)))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(bvec2(false, true))))))))))))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y))))))
    barrier();
   if(_GLF_DEAD(false))
    return;
   barrier();
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
}
