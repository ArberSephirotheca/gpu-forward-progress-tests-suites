#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


struct _GLF_struct_9 {
 vec3 _f0;
 mat3 _f1;
 ivec3 _f2;
 float _f3;
 uvec3 _f4;
 vec3 _f5;
 bvec4 _f6;
} ;

struct _GLF_struct_8 {
 mat2x3 _f0;
 uvec4 _f1;
 mat2 _f2;
 bvec4 _f3;
} ;

struct _GLF_struct_7 {
 mat3x2 _f0;
 mat2x4 _f1;
 uvec3 _f2;
} ;

struct _GLF_struct_6 {
 mat2x3 _f0;
} ;

struct _GLF_struct_10 {
 _GLF_struct_6 _f0;
 _GLF_struct_7 _f1;
 _GLF_struct_8 _f2;
 ivec3 _f3;
 vec2 _f4;
 mat2x4 _f5;
 _GLF_struct_9 _f6;
} ;

struct _GLF_struct_4 {
 mat2x3 _f0;
 mat3 _f1;
 mat3x2 _f2;
 ivec3 _f3;
 mat4x3 _f4;
} ;

struct _GLF_struct_3 {
 uint _f0;
 float _f1;
 uvec2 _f2;
} ;

struct _GLF_struct_2 {
 ivec2 _f0;
 uvec3 _f1;
 mat3x4 _f2;
 mat3 _f3;
} ;

struct _GLF_struct_1 {
 mat2x3 _f0;
 bvec4 _f1;
} ;

struct _GLF_struct_0 {
 uvec4 _f0;
 bvec3 _f1;
} ;

struct _GLF_struct_5 {
 _GLF_struct_0 _f0;
 _GLF_struct_1 _f1;
 _GLF_struct_2 _f2;
 _GLF_struct_3 _f3;
 int _f4;
 mat2x4 _f5;
 _GLF_struct_4 _f6;
} ;

struct _GLF_struct_11 {
 vec4 _f0;
 ivec2 _f1;
 uint subgroup_local_id;
 _GLF_struct_5 _f2;
 mat4x2 _f3;
 _GLF_struct_10 _f4;
} ;

layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(false))
  {
   if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false), (_GLF_DEAD(false)) || false))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       barrier();
      }
     return;
    }
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(_GLF_FUZZED(1478.3094), clamp(_GLF_FUZZED(1478.3094), _GLF_FUZZED(1478.3094), _GLF_FUZZED(1478.3094)))), float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), float(mat4(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, tan(0.0), 0.0, 1.0, log(1.0), 1.0, 0.0, 1.0, 0.0)))), bool(true))), (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(_GLF_FUZZED(1478.3094), clamp(_GLF_FUZZED(1478.3094), _GLF_FUZZED(1478.3094), _GLF_FUZZED(1478.3094)))), float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), float(mat4(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, tan(0.0), 0.0, 1.0, log(1.0), 1.0, 0.0, 1.0, 0.0)))), bool(true)))) + 0.0) > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(_GLF_FUZZED(1478.3094), clamp(_GLF_FUZZED(1478.3094), _GLF_FUZZED(1478.3094), _GLF_FUZZED(1478.3094)))), float(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), float(mat4(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, tan(0.0), 0.0, 1.0, log(1.0), 1.0, 0.0, 1.0, 0.0))), min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), float(mat4(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, tan(0.0), 0.0, 1.0, log(1.0), 1.0, 0.0, 1.0, 0.0))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), float(mat4(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, tan(0.0), 0.0, 1.0, log(1.0), 1.0, 0.0, 1.0, 0.0))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), float(mat4(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, tan(0.0), 0.0, 1.0, log(1.0), 1.0, 0.0, 1.0, 0.0))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), float(mat4(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, tan(0.0), 0.0, 1.0, log(1.0), 1.0, 0.0, 1.0, 0.0))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), float(mat4(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, tan(0.0), 0.0, 1.0, log(1.0), 1.0, 0.0, 1.0, 0.0)))))))), bool(true))) > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0), true && (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(_GLF_FUZZED(1478.3094), clamp(_GLF_FUZZED(1478.3094), _GLF_IDENTITY(_GLF_FUZZED(1478.3094), float(vec3(_GLF_FUZZED(1478.3094), 1.0, 0.0))), _GLF_FUZZED(1478.3094)))), float(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, float(mat2(injectionSwitch.x, 0.0, round(length(normalize(1.0))), 1.0))), max(injectionSwitch.x, injectionSwitch.x)), float(_GLF_IDENTITY(mat4(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(2.3)), float(1.0), bool(true))), 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, tan(0.0), 0.0, 1.0, log(1.0), 1.0, 0.0, 1.0, 0.0), (mat4(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(max(injectionSwitch.x, injectionSwitch.x), (_GLF_IDENTITY(max(injectionSwitch.x, injectionSwitch.x), max(max(injectionSwitch.x, injectionSwitch.x), max(injectionSwitch.x, injectionSwitch.x)))) * 1.0)), 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, tan(0.0), 0.0, 1.0, log(1.0), 1.0, 0.0, 1.0, 0.0)) + mat4(0.0, 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, max(0.0, 0.0))) - 0.0), 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-82.21)), bool(false))), 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))))), bool(true))) > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0), injectionSwitch.y))))) / 1.0)))) && true)))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     return;
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec2(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false))))))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (injectionSwitch.x > injectionSwitch.y))))
    return;
   barrier();
  }
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     barrier();
    }
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
      barrier();
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY((false) && true, ((false) && true) && true)), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY((false), ((false)) && true) && true), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(false, (false) && true), true, false, false)), true && (bool(bvec4(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(bvec4(false, false, true, true))))))) && true), true, false, false))))))), ! (! (bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(false, (false) && true), true, false, false)), true && (bool(bvec4(_GLF_IDENTITY(false, (false) && true), true, false, false))))))))))))))))
      return;
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec3(bvec3(bvec3(! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), ! (! (bool(_GLF_IDENTITY(bvec3(! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec3(bvec3(bvec3(! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))))))
    return;
   barrier();
  }
 _GLF_struct_11 _GLF_struct_replacement_11 = _GLF_struct_11(vec4(1.0), ivec2(1), gl_SubgroupInvocationID, _GLF_struct_5(_GLF_struct_0(uvec4(_GLF_IDENTITY(1u, _GLF_IDENTITY(min(1u, 1u), (true ? min(1u, 1u) : _GLF_FUZZED(172043u))))), bvec3(true)), _GLF_struct_1(mat2x3(1.0), bvec4(_GLF_IDENTITY(_GLF_IDENTITY(true, ! (! _GLF_IDENTITY((true), (_GLF_IDENTITY((true), ! (! ((true))))) && true))), bool(_GLF_IDENTITY(bool(true), _GLF_IDENTITY(bool(bvec4(bool(true), true, _GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false)), true)), bool(_GLF_IDENTITY(bvec3(bool(bvec4(bool(true), true, false, true)), true, true), bvec3(bvec3(bvec3(bool(bvec4(bool(true), true, false, true)), _GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(true, bool(bvec3(true, true, false))), false, false, true)), _GLF_IDENTITY((bool(bvec4(_GLF_IDENTITY(true, bool(bvec3(true, true, false))), false, false, true))), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY((bool(bvec4(_GLF_IDENTITY(true, bool(bvec3(true, true, false))), false, false, true))), true && ((bool(bvec4(_GLF_IDENTITY(true, bool(bvec3(true, true, false))), false, false, true)))))), (bool(_GLF_IDENTITY((bool(bvec4(_GLF_IDENTITY(true, bool(bvec3(true, true, false))), false, false, true))), true && ((bool(bvec4(_GLF_IDENTITY(true, bool(bvec3(true, true, false))), false, false, true))))))) || false))) && true)), _GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, _GLF_IDENTITY((true), bool(bool((true)))) || false)))))))))))))), _GLF_struct_2(ivec2(1), uvec3(1u), mat3x4(1.0), mat3(1.0)), _GLF_struct_3(_GLF_IDENTITY(1u, (true ? _GLF_IDENTITY(1u, max(1u, 1u)) : _GLF_FUZZED(57184u))), 1.0, uvec2(1u)), _GLF_IDENTITY(_GLF_IDENTITY(1, (1) / 1), (false ? _GLF_FUZZED(-65405) : _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1, (1) / 1), (_GLF_IDENTITY(1, (1) / 1)) >> 0), (_GLF_IDENTITY(_GLF_IDENTITY(1, _GLF_IDENTITY(int(ivec2(1, 0)), int(ivec2(int(ivec2(1, 0)), 1)))), (1) / 1)) / 1))), mat2x4(1.0), _GLF_struct_4(mat2x3(1.0), mat3(_GLF_IDENTITY(1.0, min(1.0, _GLF_IDENTITY(1.0, max(1.0, 1.0))))), mat3x2(1.0), ivec3(1), mat4x3(1.0))), mat4x2(1.0), _GLF_struct_10(_GLF_struct_6(mat2x3(1.0)), _GLF_struct_7(mat3x2(1.0), mat2x4(1.0), _GLF_IDENTITY(uvec3(_GLF_IDENTITY(1u, (1u) | (1u))), _GLF_IDENTITY((_GLF_IDENTITY(uvec3(1u), uvec3(1u, 1u, 1u) * (uvec3(1u)))), ~ (~ ((_GLF_IDENTITY(uvec3(1u), uvec3(1u, 1u, 1u) * (uvec3(1u))))))) - (_GLF_IDENTITY(uvec3(_GLF_IDENTITY(0u, ~ (~ (_GLF_IDENTITY(0u, _GLF_IDENTITY(uint(uvec4(0u, 0u, 1u, 0u)), min(uint(uvec4(0u, 0u, 1u, 0u)), uint(uvec4(0u, 0u, 1u, 0u)))))))), 0u, 0u), uvec3(uvec4(uvec3(_GLF_IDENTITY(0u, ~ (~ _GLF_IDENTITY((0u), ((0u)) << uint(_GLF_ZERO(0.0, injectionSwitch.x))))), 0u, 0u), uint(_GLF_ZERO(0.0, injectionSwitch.x))))) & uvec3(147672u, 50846u, 111383u)))), _GLF_struct_8(mat2x3(1.0), _GLF_IDENTITY(uvec4(1u), ~ (~ (_GLF_IDENTITY(uvec4(1u), (_GLF_IDENTITY(uvec4(1u), (uvec4(1u)) >> uvec4(0u, 0u, 0u, 0u))) | uvec4(0u, 0u, 0u, 0u))))), mat2(1.0), bvec4(true)), ivec3(_GLF_IDENTITY(1, int(_GLF_IDENTITY(ivec3(_GLF_IDENTITY(1, ~ (~ (1))), 1, 1), (ivec3(_GLF_IDENTITY(1, ~ (~ (1))), 1, 1)) + ivec3(0, 0, 0))))), vec2(1.0), mat2x4(_GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-3.0)), float(1.0), bool(true))), _GLF_IDENTITY(1.0, min(1.0, 1.0))))), _GLF_struct_9(_GLF_IDENTITY(vec3(_GLF_IDENTITY(1.0, (1.0) / 1.0)), max(vec3(1.0), vec3(1.0))), mat3(1.0), ivec3(1), 1.0, uvec3(1u), vec3(1.0), bvec4(true))));
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))), true && (_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (! (false)), ! (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (! (false))), (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (! (false)))) || false)))))), ! _GLF_IDENTITY((! (_GLF_IDENTITY(false, _GLF_IDENTITY((false) || false, bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY((false) || false, _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY((false) || false, ! (_GLF_IDENTITY(! ((false) || false), bool(bool(! ((false) || false)))))), false)), bool(bool(bool(bvec2((false) || false, false)))))), true), bvec2(bvec3(bvec2(_GLF_IDENTITY((_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) || false))))) || false, _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec2((false) || false, false)), bool(bvec3(bool(bvec2((false) || false, false)), false, true))), bool(bool(bool(_GLF_IDENTITY(bvec2((false) || false, false), bvec2(bvec3(_GLF_IDENTITY(bvec2((false) || false, false), bvec2(bvec3(bvec2((false) || false, false), true))), false)))))))), true), false)))))))), _GLF_IDENTITY(false, false || (false)) || ((! (_GLF_IDENTITY(false, _GLF_IDENTITY((false) || false, bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_IDENTITY((false) || false, _GLF_IDENTITY(bool(bvec2((false) || false, false)), bool(bool(bool(bvec2((false) || false, false)))))), bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY((false) || false, _GLF_IDENTITY(bool(bvec2((false) || false, false)), bool(bool(bool(bvec2((false) || false, false)))))), false || (_GLF_IDENTITY((false) || false, _GLF_IDENTITY(bool(bvec2((false) || false, false)), bool(bool(bool(bvec2((false) || false, false)))))))), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))), true), bvec2(bvec3(bvec2(_GLF_IDENTITY((false) || false, _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec2((false) || false, false)), bool(bvec3(bool(bvec2((_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) || false)))) || false, false)), false, true))), bool(bool(bool(bvec2((false) || false, false)))))), true), false)))))))))))))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
       if(_GLF_DEAD(false))
        return;
      }
     return;
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-726.369)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    return;
  }
 uint num_workgroup = gl_NumWorkGroups.x;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec3(false, false, false))), (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         return;
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)), _GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x)) > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), true && (bool(bool(false)))))))
      barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            return;
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              {
               if(_GLF_DEAD(false))
                return;
               return;
              }
             barrier();
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              return;
            }
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            return;
           barrier();
          }
         return;
        }
       barrier();
      }
     return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
    }
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec3(false, _GLF_IDENTITY(false, bool(bvec4(false, false, false, true))), true))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY((injectionSwitch)[0], mix(float(_GLF_FUZZED(6.8)), float((injectionSwitch)[0]), bool(true))), (injectionSwitch)[1]), vec2(_GLF_FUZZED(587.239), _GLF_FUZZED(19.06)), bvec2(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, true)), _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec4(bool(_GLF_IDENTITY(bvec2(false, true), bvec2(_GLF_IDENTITY(bvec3(bvec2(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || false), true), true), bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec2(false, true), true), bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec2(false, true), true), bvec3(_GLF_IDENTITY(bvec3(bvec3(bvec2(false, true), true)), bvec3(bvec4(bvec3(bvec3(bvec2(false, true), true)), false)))))))), false)))))), true, true, true)), true && (bool(bvec4(bool(_GLF_IDENTITY(bvec2(false, true), bvec2(_GLF_IDENTITY(bvec3(bvec2(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || false), true), true), bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec2(false, true), true), bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec2(false, true), true), bvec3(_GLF_IDENTITY(bvec3(bvec3(bvec2(false, true), true)), bvec3(bvec4(bvec3(bvec3(bvec2(false, true), true)), false)))))))), false)))))), true, true, true)))), ! (! (bool(bvec4(bool(bvec2(false, true)), true, true, true))))))), false))).y))))
    barrier();
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(false, bool(bool(false)))))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), true && (! (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > injectionSwitch.y))))))), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(injectionSwitch.x > injectionSwitch.y, true, false, false)))), _GLF_IDENTITY(bool(bvec3(bool(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(injectionSwitch.x > injectionSwitch.y, true, false, false)))), false, false)), (bool(bvec3(bool(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(injectionSwitch.x > injectionSwitch.y, true, false, false)))), false, false))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), ! (! (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(9.6)), bool(false))))), false || (injectionSwitch.x > injectionSwitch.y)))))))), true && _GLF_IDENTITY((_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), _GLF_IDENTITY(((_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (((_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))) || false)))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), (false) && true)))
    return;
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) && true)) && true), (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), false || (! (_GLF_DEAD(false)))))))
      return;
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
  }
 uint workgroup_size = gl_WorkGroupSize.x;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 uint workgroup_id = gl_WorkGroupID.x;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      return;
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, false)), bool(bool(bool(bvec2(false, false))))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, bool(bool(false))))), (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_DEAD(false))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) && true)))))
      return;
     return;
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(uintBitsToFloat(uvec2(132048u, 67567u))) : _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0))) - vec2(0.0, 0.0)))).y)), ! (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(bool(bvec2(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false)), false || (bool(bvec2(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false)))))), false || (bool(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))), (_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true))), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) || false)))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       barrier();
      }
     return;
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (_GLF_IDENTITY(! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bool(bool(! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))
    barrier();
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, _GLF_IDENTITY(0.0, max(0.0, _GLF_IDENTITY(0.0, (0.0) - 0.0))))).x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat2(injectionSwitch, 0.0, 0.0)), min(vec2(mat2(injectionSwitch, 0.0, 0.0)), vec2(mat2(injectionSwitch, 0.0, 0.0))))).y, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, _GLF_IDENTITY(0.0, (0.0) + 0.0))).x > injectionSwitch.y) && _GLF_IDENTITY(true, bool(bvec2(true, false)))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, _GLF_IDENTITY(0.0, max(0.0, _GLF_IDENTITY(0.0, (0.0) - 0.0))))).x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat2(injectionSwitch, 0.0, 0.0)), min(vec2(mat2(injectionSwitch, 0.0, 0.0)), vec2(mat2(injectionSwitch, 0.0, 0.0))))).y, (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))) - vec2(_GLF_IDENTITY(0.0, float(mat2x3(0.0, 0.0, cos(0.0), 1.0, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), 1.0))), _GLF_IDENTITY(0.0, _GLF_IDENTITY((0.0), clamp((0.0), _GLF_IDENTITY((0.0), mix(float((0.0)), float(_GLF_FUZZED((-1.2 + -9.3))), _GLF_IDENTITY(bool(false), false || (bool(false))))), (0.0))) + 0.0))).x > _GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).y) && _GLF_IDENTITY(_GLF_IDENTITY(true, bool(bvec2(true, false))), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(true, bool(bvec2(true, false))), false || (_GLF_IDENTITY(true, bool(bvec2(true, false))))))), (bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(true, bool(bvec2(true, false))), false || (_GLF_IDENTITY(true, bool(bvec2(true, false)))))))) || false))))))))), false || (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))), (injectionSwitch) - vec2(0.0, 0.0)).x > injectionSwitch.y))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))), (injectionSwitch) - vec2(0.0, 0.0)).x > injectionSwitch.y))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(bvec2(bvec3(bvec2(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))), (injectionSwitch) - vec2(0.0, 0.0)).x > injectionSwitch.y))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), bvec2(bvec3(bvec2(bvec3(bvec2(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))), (injectionSwitch) - vec2(0.0, 0.0)).x > injectionSwitch.y))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), true))))), true && (bool(_GLF_IDENTITY(bvec2(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))), (injectionSwitch) - vec2(0.0, 0.0)).x > injectionSwitch.y))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(bvec2(bvec3(bvec2(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))), (injectionSwitch) - vec2(0.0, 0.0)).x > injectionSwitch.y))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), bvec2(bvec3(bvec2(bvec3(bvec2(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))), (injectionSwitch) - vec2(0.0, 0.0)).x > injectionSwitch.y))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), true)))))))))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 uint workgroup_base = _GLF_IDENTITY(workgroup_size, clamp(workgroup_size, workgroup_size, workgroup_size)) * workgroup_id;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED((-4068.5352 / 80.90))), vec2(_GLF_FUZZED((700.225)), (injectionSwitch)[1]), bvec2(false, true))).x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (_GLF_IDENTITY(false, true && (false)))), (_GLF_IDENTITY(_GLF_IDENTITY(! (! _GLF_IDENTITY((_GLF_IDENTITY(false, true && (false))), bool(_GLF_IDENTITY(bvec3((_GLF_IDENTITY(false, true && (false))), true, false), bvec3(bvec4(_GLF_IDENTITY(bvec3((_GLF_IDENTITY(false, true && (false))), true, false), _GLF_IDENTITY(bvec3(bvec4(bvec3((_GLF_IDENTITY(false, true && (false))), true, false), false)), bvec3(bvec4(bvec3(bvec4(bvec3((_GLF_IDENTITY(false, true && (false))), true, false), false)), false)))), true)))))), ! (! (! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), true && (false))))))), (_GLF_IDENTITY(_GLF_IDENTITY(! (! _GLF_IDENTITY((_GLF_IDENTITY(false, true && (false))), bool(_GLF_IDENTITY(bvec3((_GLF_IDENTITY(false, true && (false))), true, false), bvec3(bvec4(_GLF_IDENTITY(bvec3((_GLF_IDENTITY(false, true && (false))), true, false), _GLF_IDENTITY(bvec3(bvec4(bvec3((_GLF_IDENTITY(false, true && (false))), true, false), false)), bvec3(bvec4(bvec3(bvec4(bvec3((_GLF_IDENTITY(false, true && (false))), true, false), false)), false)))), true)))))), ! (! (! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), true && (false))))))), (_GLF_IDENTITY(! (! _GLF_IDENTITY((_GLF_IDENTITY(false, true && (false))), bool(_GLF_IDENTITY(bvec3((_GLF_IDENTITY(false, true && (false))), true, false), bvec3(bvec4(_GLF_IDENTITY(bvec3((_GLF_IDENTITY(false, true && (false))), true, false), _GLF_IDENTITY(bvec3(bvec4(bvec3((_GLF_IDENTITY(false, true && (false))), true, false), false)), bvec3(bvec4(bvec3(bvec4(bvec3((_GLF_IDENTITY(false, true && (false))), true, false), false)), false)))), true)))))), ! (! (! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), false || (_GLF_IDENTITY(false, (false) && true))), true && (false)))))))) && true)) || false)) && true)), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec2(false, _GLF_IDENTITY(true, bool(_GLF_IDENTITY(bvec3(true, true, _GLF_IDENTITY(false, (false) || false)), bvec3(bvec4(bvec3(true, true, false), true))))))))) || _GLF_IDENTITY(false, (false) && true)), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), true && (false)), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), true && (false)), (_GLF_IDENTITY(_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), bool(bvec2(_GLF_IDENTITY((! (false)), true && ((! (false)))), true)))), true && (false))) && true))))))))))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, true, true, false)))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
    }
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true))))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, false, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat4x3(injectionSwitch, 1.0, 1.0, 1.0, sqrt(0.0), 1.0, 1.0, 0.0, sqrt(0.0), 1.0, determinant(mat4(0.0, 1.0, 0.0, determinant(_GLF_IDENTITY(mat2(0.0, 0.0, 1.0, 0.0), (true ? mat2(0.0, 0.0, 1.0, 0.0) : _GLF_FUZZED((mat2(-755.379, -6.7, 3.6, -473.512) - mat2(8.7, -6830.0027, 9.4, -3.0)))))), 0.0, tan(0.0), 1.0, 1.0, 0.0, log(1.0), 0.0, 0.0, abs(0.0), 0.0, 0.0, 0.0)))), (_GLF_IDENTITY(vec2(mat4x3(injectionSwitch, _GLF_IDENTITY(1.0, float(mat3x4(1.0, 0.0, 1.0, 0.0, 1.0, 1.0, determinant(mat4(1.0, 0.0, sqrt(_GLF_IDENTITY(0.0, _GLF_IDENTITY(float(vec2(0.0, 0.0)), max(float(vec2(0.0, 0.0)), float(vec2(0.0, 0.0)))))), 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0)), 0.0, _GLF_IDENTITY(dot(vec2(sin(0.0), log(1.0)), vec2(1.0, 1.0)), dot(vec2(sin(0.0), log(1.0)), vec2(1.0, 1.0))), length(vec2(0.0, _GLF_IDENTITY(0.0, float(float(_GLF_IDENTITY(0.0, clamp(0.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0))))))), 1.0, 1.0))), 1.0, 1.0, sqrt(_GLF_IDENTITY(0.0, min(0.0, _GLF_IDENTITY(0.0, float(mat3x4(0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0)), dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0))), sin(0.0), 0.0)))))), 1.0, 1.0, 0.0, _GLF_IDENTITY(sqrt(0.0), mix(_GLF_IDENTITY(float(_GLF_IDENTITY(_GLF_FUZZED(float(-91168)), clamp(_GLF_FUZZED(float(-91168)), _GLF_FUZZED(float(-91168)), _GLF_FUZZED(float(-91168))))), (true ? _GLF_IDENTITY(float(_GLF_IDENTITY(_GLF_FUZZED(float(-91168)), clamp(_GLF_FUZZED(float(-91168)), _GLF_FUZZED(float(-91168)), _GLF_FUZZED(float(-91168))))), mix(float(float(_GLF_IDENTITY(_GLF_FUZZED(float(-91168)), clamp(_GLF_FUZZED(float(-91168)), _GLF_FUZZED(float(-91168)), _GLF_FUZZED(float(-91168)))))), float(_GLF_FUZZED(27.64)), bool(false))) : _GLF_FUZZED(-35.54))), float(_GLF_IDENTITY(sqrt(0.0), min(sqrt(0.0), sqrt(0.0)))), bool(true))), _GLF_IDENTITY(1.0, _GLF_IDENTITY((1.0), 0.0 + ((1.0))) - 0.0), determinant(mat4(0.0, 1.0, 0.0, determinant(mat2(0.0, 0.0, _GLF_IDENTITY(1.0, min(1.0, 1.0)), 0.0)), 0.0, tan(0.0), 1.0, 1.0, 0.0, log(1.0), 0.0, 0.0, abs(0.0), _GLF_IDENTITY(0.0, (0.0) + 0.0), 0.0, 0.0)))), (vec2(mat4x3(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(1.0, float(mat3x4(1.0, 0.0, 1.0, 0.0, 1.0, 1.0, determinant(mat4(1.0, 0.0, sqrt(0.0), 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0)), 0.0, _GLF_IDENTITY(dot(vec2(sin(0.0), log(1.0)), vec2(1.0, 1.0)), dot(vec2(sin(0.0), log(1.0)), vec2(1.0, 1.0))), length(vec2(0.0, 0.0)), 1.0, 1.0))), _GLF_IDENTITY(float(mat4(_GLF_IDENTITY(1.0, float(mat3x4(1.0, 0.0, 1.0, 0.0, 1.0, 1.0, determinant(mat4(1.0, 0.0, sqrt(0.0), 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0)), 0.0, _GLF_IDENTITY(dot(vec2(sin(0.0), log(1.0)), vec2(1.0, 1.0)), dot(vec2(sin(0.0), log(1.0)), vec2(1.0, 1.0))), length(vec2(0.0, 0.0)), 1.0, 1.0))), 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 1.0, 0.0, 0.0, log(1.0), 0.0, tan(0.0), 1.0, 0.0, 0.0, 0.0, length(vec4(0.0, 0.0, 0.0, 0.0)), 1.0)), float(mat4x3(float(mat4(_GLF_IDENTITY(1.0, float(mat3x4(1.0, 0.0, 1.0, 0.0, 1.0, 1.0, determinant(mat4(1.0, 0.0, sqrt(0.0), 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0)), 0.0, _GLF_IDENTITY(dot(vec2(sin(0.0), log(1.0)), vec2(1.0, 1.0)), dot(vec2(sin(0.0), log(1.0)), vec2(1.0, 1.0))), length(vec2(0.0, 0.0)), 1.0, 1.0))), 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 1.0, 0.0, 0.0, log(1.0), 0.0, tan(0.0), 1.0, 0.0, 0.0, 0.0, length(vec4(0.0, 0.0, 0.0, 0.0)), 1.0)), 0.0, 0.0, determinant(mat2(0.0, 1.0, 0.0, 0.0)), 0.0, 1.0, 0.0, log(1.0), 1.0, 0.0, 1.0, 0.0)))), 1.0, 1.0, sqrt(_GLF_IDENTITY(0.0, min(0.0, _GLF_IDENTITY(0.0, float(mat3x4(0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0)), dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0))), sin(0.0), 0.0)))))), 1.0, 1.0, 0.0, _GLF_IDENTITY(sqrt(0.0), mix(float(_GLF_FUZZED(float(-91168))), float(_GLF_IDENTITY(sqrt(0.0), min(sqrt(0.0), sqrt(0.0)))), bool(true))), _GLF_IDENTITY(1.0, _GLF_IDENTITY((1.0), 0.0 + ((1.0))) - 0.0), determinant(mat4(0.0, 1.0, 0.0, determinant(mat2(0.0, 0.0, _GLF_IDENTITY(1.0, min(1.0, 1.0)), 0.0)), 0.0, tan(0.0), 1.0, 1.0, 0.0, log(1.0), 0.0, 0.0, abs(0.0), _GLF_IDENTITY(0.0, (0.0) + 0.0), 0.0, 0.0))))) * vec2(1.0, 1.0))) * mat2(_GLF_IDENTITY(1.0, min(1.0, 1.0))))), _GLF_IDENTITY(vec2(_GLF_IDENTITY(0.0, _GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, min(1.0, _GLF_IDENTITY(1.0, 0.0 + (1.0)))), _GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, 1.0 * (1.0)), 1.0)))) * (_GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, float(vec3(0.0, _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(8745.5169)), bool(false))), 0.0))), 0.0)))), 0.0) + (injectionSwitch), max(vec2(_GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, min(0.0, _GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-3528.9305)), float(_GLF_IDENTITY(0.0, (0.0) / 1.0)), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), 0.0))))) / 1.0)) * 1.0), 0.0) + (injectionSwitch), vec2(0.0, 0.0) + _GLF_IDENTITY((injectionSwitch), vec2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)) + (_GLF_IDENTITY((injectionSwitch), vec2(_GLF_IDENTITY(mat2(_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch), _GLF_IDENTITY(clamp((injectionSwitch), (injectionSwitch), (injectionSwitch)), mat2(1.0) * (clamp((injectionSwitch), (injectionSwitch), (injectionSwitch))))), max(_GLF_IDENTITY((injectionSwitch), clamp((injectionSwitch), (injectionSwitch), (injectionSwitch))), _GLF_IDENTITY((injectionSwitch), clamp((injectionSwitch), (injectionSwitch), (injectionSwitch))))), 1.0, 1.0), mat2(0.0, 0.0, 0.0, 0.0) + (mat2(_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch), _GLF_IDENTITY(clamp((injectionSwitch), (injectionSwitch), (injectionSwitch)), mat2(1.0) * (clamp((injectionSwitch), (injectionSwitch), (injectionSwitch))))), max(_GLF_IDENTITY((injectionSwitch), clamp((injectionSwitch), (injectionSwitch), (injectionSwitch))), _GLF_IDENTITY((injectionSwitch), clamp((injectionSwitch), (injectionSwitch), (injectionSwitch))))), 1.0, 1.0)))))))))).y))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(faceforward(_GLF_IDENTITY(730.944, mix(float(_GLF_FUZZED(8840.6929)), float(_GLF_IDENTITY(730.944, _GLF_IDENTITY(float(mat3x4(730.944, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0)), min(float(mat3x4(730.944, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0)), float(mat3x4(730.944, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0)))))), bool(true))), _GLF_IDENTITY(float(false), float(_GLF_IDENTITY(vec3(float(false), 0.0, 0.0), vec3(mat2x4(vec3(float(false), 0.0, 0.0), 0.0, 0.0, 1.0, 1.0, 1.0))))), 12.27)) : _GLF_IDENTITY(injectionSwitch.y, float(mat3x2(injectionSwitch.y, 1.0, 0.0, 1.0, _GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(2.4) : injectionSwitch.x))), 0.0)))))), _GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(! (true), bool(bvec2(! (true), false))), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), bool(bvec4(bool(bvec3(_GLF_IDENTITY(! (true), bool(bvec2(! (true), false))), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), true, true, true)))))) && ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(faceforward(730.944, float(false), 12.27)) : _GLF_IDENTITY(injectionSwitch.y, float(mat3x2(injectionSwitch.y, _GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, min(1.0, _GLF_IDENTITY(1.0, min(1.0, 1.0)))), 1.0)), 0.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0)))))))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))), false)))), false || (_GLF_IDENTITY(bool(_GLF_DEAD(false)), _GLF_IDENTITY(bool(bvec2(bool(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec4(_GLF_DEAD(false), true, true, true)), true && (_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec4(_GLF_DEAD(false), _GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), bool(bool(! (true)))))), true, true)), (bool(bvec4(_GLF_DEAD(false), true, true, true))) || false), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bool(bvec4(_GLF_DEAD(false), _GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), bool(bool(! (true)))))), true, true)), (bool(bvec4(_GLF_DEAD(false), true, true, true))) || false), true, false), _GLF_IDENTITY(bvec3(bvec3(bvec3(_GLF_IDENTITY(bool(bvec4(_GLF_DEAD(false), _GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), bool(bool(! (true)))))), true, true)), (bool(bvec4(_GLF_DEAD(false), true, true, true))) || false), true, false))), bvec3(bvec3(bvec3(bvec3(bvec3(_GLF_IDENTITY(bool(bvec4(_GLF_DEAD(false), _GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), bool(bool(! (true)))))), true, true)), (bool(bvec4(_GLF_DEAD(false), true, true, true))) || false), true, false))))))))))))), true)), bool(bvec4(bool(bvec2(bool(_GLF_DEAD(false)), true)), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))))))), _GLF_IDENTITY(true && (bool(_GLF_IDENTITY(bool(_GLF_DEAD(false)), false || (bool(_GLF_DEAD(false)))))), (_GLF_IDENTITY(true && (bool(_GLF_IDENTITY(bool(_GLF_DEAD(false)), false || (bool(_GLF_DEAD(false)))))), true && (true && (bool(_GLF_IDENTITY(bool(_GLF_DEAD(false)), false || (bool(_GLF_DEAD(false))))))))) && true))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
        return;
       return;
       if(_GLF_DEAD(false))
        return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(mat2(injectionSwitch, sin(0.0), length(0.0)))), clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))
        return;
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(mat2(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0), 1.0, 1.0, 0.0))), true && (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-450.116), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED((float(88047u) * -9.5))), bvec2(true, false))).x, min(injectionSwitch.x, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), injectionSwitch)), mix(vec2((_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), injectionSwitch)))[0], _GLF_FUZZED(9195.7081)), vec2(_GLF_FUZZED(10.45), (_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), injectionSwitch)))[1]), bvec2(false, true))).x)) > injectionSwitch.y))))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) && true))), (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         return;
        }
       return;
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_DEAD(false))
  barrier();
 uint virtual_gid = workgroup_base + subgroup_id * subgroup_size + _GLF_IDENTITY(_GLF_struct_replacement_11.subgroup_local_id, (_GLF_struct_replacement_11.subgroup_local_id) / 1u);
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(_GLF_IDENTITY(! _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), bool(bool(! ((injectionSwitch.x > injectionSwitch.y))))))), _GLF_IDENTITY(! (! ((injectionSwitch.x > injectionSwitch.y))), true && (! (! ((injectionSwitch.x > injectionSwitch.y)))))), bool(bvec2(! (injectionSwitch.x > injectionSwitch.y), false))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(injectionSwitch.x > injectionSwitch.y, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec2(_GLF_IDENTITY(bvec3(bvec2(injectionSwitch.x > injectionSwitch.y, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true), bvec3(bvec3(bvec3(bvec2(injectionSwitch.x > injectionSwitch.y, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true)))))), bvec2(bvec3(bvec2(injectionSwitch.x > injectionSwitch.y, _GLF_FALSE(_GLF_IDENTITY(false, (false) || false), (injectionSwitch.x > injectionSwitch.y))), false)))), (bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(injectionSwitch.x > injectionSwitch.y, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec2(_GLF_IDENTITY(bvec3(bvec2(injectionSwitch.x > injectionSwitch.y, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true), bvec3(bvec3(bvec3(bvec2(injectionSwitch.x > injectionSwitch.y, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true)))))), bvec2(bvec3(bvec2(injectionSwitch.x > injectionSwitch.y, _GLF_FALSE(_GLF_IDENTITY(false, (false) || false), (injectionSwitch.x > injectionSwitch.y))), false))))) || _GLF_IDENTITY(false, (false) && true)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(injectionSwitch.x > injectionSwitch.y, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec2(_GLF_IDENTITY(bvec3(bvec2(injectionSwitch.x > injectionSwitch.y, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true), bvec3(bvec3(bvec3(bvec2(injectionSwitch.x > injectionSwitch.y, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true)))))), bvec2(bvec3(bvec2(injectionSwitch.x > injectionSwitch.y, _GLF_FALSE(_GLF_IDENTITY(false, (false) || false), (injectionSwitch.x > injectionSwitch.y))), false)))), (bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(injectionSwitch.x > injectionSwitch.y, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec2(_GLF_IDENTITY(bvec3(bvec2(injectionSwitch.x > injectionSwitch.y, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true), bvec3(bvec3(bvec3(bvec2(injectionSwitch.x > injectionSwitch.y, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true)))))), bvec2(bvec3(bvec2(injectionSwitch.x > injectionSwitch.y, _GLF_FALSE(_GLF_IDENTITY(false, (false) || false), (injectionSwitch.x > injectionSwitch.y))), false))))) || _GLF_IDENTITY(false, (false) && true))), (! (_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(injectionSwitch.x > injectionSwitch.y, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec2(_GLF_IDENTITY(bvec3(bvec2(injectionSwitch.x > injectionSwitch.y, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true), bvec3(bvec3(bvec3(bvec2(injectionSwitch.x > injectionSwitch.y, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), (! (injectionSwitch.x > injectionSwitch.y)) && true)))))), true)))))), bvec2(bvec3(bvec2(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(_GLF_IDENTITY(false, (false) || false), (injectionSwitch.x > injectionSwitch.y))), false)))), (bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(injectionSwitch.x > injectionSwitch.y, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec2(_GLF_IDENTITY(bvec3(bvec2(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true), bvec3(bvec3(bvec3(bvec2(injectionSwitch.x > injectionSwitch.y, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true)))))), bvec2(bvec3(bvec2(injectionSwitch.x > injectionSwitch.y, _GLF_FALSE(_GLF_IDENTITY(false, (false) || false), (injectionSwitch.x > injectionSwitch.y))), false))))) || _GLF_IDENTITY(false, (false) && true)))) || false)))))))), true && (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(injectionSwitch.x > injectionSwitch.y, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec2(_GLF_IDENTITY(bvec3(bvec2(injectionSwitch.x > injectionSwitch.y, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true), bvec3(bvec3(bvec3(bvec2(injectionSwitch.x > injectionSwitch.y, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true)))))), bvec2(bvec3(bvec2(injectionSwitch.x > injectionSwitch.y, _GLF_FALSE(_GLF_IDENTITY(false, (false) || false), (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), mat2(1.0) * ((injectionSwitch) * mat2(1.0)))).x > injectionSwitch.y))), false)))), (_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec2(_GLF_IDENTITY(bvec3(bvec2(injectionSwitch.x > injectionSwitch.y, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true), bvec3(bvec3(bvec3(bvec2(injectionSwitch.x > injectionSwitch.y, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true)))))), bvec2(bvec3(bvec2(injectionSwitch.x > injectionSwitch.y, _GLF_FALSE(_GLF_IDENTITY(false, (false) || false), (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(float(false))), float(injectionSwitch.x), bool(true))) > injectionSwitch.y))), false)))), bool(bvec2(bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec2(_GLF_IDENTITY(bvec3(bvec2(injectionSwitch.x > injectionSwitch.y, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true), bvec3(bvec3(bvec3(bvec2(injectionSwitch.x > injectionSwitch.y, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true)))))), bvec2(bvec3(bvec2(injectionSwitch.x > injectionSwitch.y, _GLF_FALSE(_GLF_IDENTITY(false, (false) || false), (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(float(false))), float(injectionSwitch.x), bool(true))) > injectionSwitch.y))), false)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))) || _GLF_IDENTITY(false, (false) && true)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(injectionSwitch.x > injectionSwitch.y, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec2(_GLF_IDENTITY(bvec3(bvec2(injectionSwitch.x > injectionSwitch.y, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true), bvec3(bvec3(bvec3(bvec2(injectionSwitch.x > injectionSwitch.y, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true)))))), bvec2(bvec3(bvec2(injectionSwitch.x > injectionSwitch.y, _GLF_FALSE(_GLF_IDENTITY(false, (false) || false), (injectionSwitch.x > injectionSwitch.y))), false)))), (bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(injectionSwitch.x > injectionSwitch.y, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec2(_GLF_IDENTITY(bvec3(bvec2(injectionSwitch.x > injectionSwitch.y, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true), bvec3(bvec3(bvec3(bvec2(injectionSwitch.x > injectionSwitch.y, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true)))))), bvec2(bvec3(bvec2(injectionSwitch.x > injectionSwitch.y, _GLF_FALSE(_GLF_IDENTITY(false, (false) || false), (injectionSwitch.x > injectionSwitch.y))), false))))) || _GLF_IDENTITY(false, (false) && true))), (! (_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(injectionSwitch.x > injectionSwitch.y, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec2(_GLF_IDENTITY(bvec3(bvec2(injectionSwitch.x > injectionSwitch.y, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).x > injectionSwitch.y))), true), bvec3(bvec3(bvec3(bvec2(injectionSwitch.x > injectionSwitch.y, _GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), (! (injectionSwitch.x > injectionSwitch.y)) && true))), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), bool(bvec2(! (injectionSwitch.x > injectionSwitch.y), false))))))) && true)))) && true)))), true)))))), bvec2(bvec3(bvec2(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY((false) || false, bool(bool(_GLF_IDENTITY((false) || false, false || ((false) || false)))))), (injectionSwitch.x > injectionSwitch.y))), false)))), (bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(injectionSwitch.x > injectionSwitch.y, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(252.872)), float(injectionSwitch.x), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) > injectionSwitch.y))), bvec2(_GLF_IDENTITY(bvec3(bvec2(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true), bvec3(bvec3(bvec3(bvec2(injectionSwitch.x > injectionSwitch.y, _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))), float(_GLF_FUZZED(float(true))), bool(false)))))), true)))))), bvec2(bvec3(bvec2(injectionSwitch.x > injectionSwitch.y, _GLF_FALSE(_GLF_IDENTITY(false, (false) || false), (injectionSwitch.x > injectionSwitch.y))), false))))) || _GLF_IDENTITY(false, (false) && true)))) || false)))))))))), bool(bvec2(! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))), false))))))))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
      return;
     return;
    }
  }
 uint next_virtual_gid = _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (workgroup_base) | (_GLF_IDENTITY(workgroup_base, uint(_GLF_IDENTITY(uvec4(_GLF_IDENTITY(workgroup_base, ~ (~ (workgroup_base))), (0u | 0u), 0u, 1u), clamp(uvec4(_GLF_IDENTITY(workgroup_base, ~ (~ (workgroup_base))), (0u | 0u), 0u, 1u), uvec4(_GLF_IDENTITY(workgroup_base, ~ (~ (workgroup_base))), (0u | 0u), 0u, 1u), uvec4(_GLF_IDENTITY(workgroup_base, ~ (~ (workgroup_base))), (0u | 0u), 0u, 1u))))))) + subgroup_id * subgroup_size, ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (workgroup_base) | (workgroup_base)), (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (workgroup_base) | (workgroup_base)), ~ (~ (_GLF_IDENTITY(workgroup_base, (workgroup_base) | (workgroup_base)))))) >> 0u) + _GLF_IDENTITY(subgroup_id, (subgroup_id) / 1u) * subgroup_size, (_GLF_IDENTITY(true, (_GLF_IDENTITY(true, ! (! (true)))) && true) ? _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, min(workgroup_base, workgroup_base)), (workgroup_base) | (workgroup_base)) + subgroup_id * subgroup_size : _GLF_FUZZED(num_workgroup)))))) + ((_GLF_struct_replacement_11.subgroup_local_id + _GLF_IDENTITY(1, ~ (~ (1)))) % subgroup_size);
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false)))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 uint read_1 = atomicLoad(_GLF_IDENTITY(buf[virtual_gid], (_GLF_IDENTITY((1u << _GLF_IDENTITY(uint(7u), _GLF_IDENTITY(uint(7u), (uint(7u)) << 0u))) >> _GLF_IDENTITY(uint(7u), uint(7u)), clamp(_GLF_IDENTITY((1u << _GLF_IDENTITY(uint(7u), uint(7u))) >> _GLF_IDENTITY(uint(7u), uint(7u)), ~ (~ (_GLF_IDENTITY((1u << _GLF_IDENTITY(uint(7u), uint(7u))) >> _GLF_IDENTITY(uint(7u), uint(7u)), ((1u << _GLF_IDENTITY(uint(7u), uint(7u))) >> _GLF_IDENTITY(uint(7u), uint(7u))) - 0u)))), _GLF_IDENTITY((1u << _GLF_IDENTITY(uint(7u), uint(7u))) >> _GLF_IDENTITY(uint(7u), uint(7u)), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? (1u << _GLF_IDENTITY(uint(7u), uint(7u))) >> _GLF_IDENTITY(uint(7u), uint(7u)) : _GLF_FUZZED(workgroup_base))), (1u << _GLF_IDENTITY(uint(7u), uint(7u))) >> _GLF_IDENTITY(uint(7u), uint(7u))))) * (buf[_GLF_IDENTITY(virtual_gid, _GLF_IDENTITY((_GLF_IDENTITY(virtual_gid, clamp(virtual_gid, _GLF_IDENTITY(virtual_gid, ~ (~ (_GLF_IDENTITY(virtual_gid, (virtual_gid) / 1u)))), _GLF_IDENTITY(virtual_gid, ~ (~ (virtual_gid)))))) >> uint(_GLF_ZERO(0.0, injectionSwitch.x)), ((_GLF_IDENTITY(virtual_gid, clamp(virtual_gid, _GLF_IDENTITY(virtual_gid, ~ _GLF_IDENTITY((~ (virtual_gid)), min(_GLF_IDENTITY((~ (virtual_gid)), uint(uvec3((~ (virtual_gid)), (0u | 0u), 0u))), (~ (virtual_gid))))), _GLF_IDENTITY(virtual_gid, ~ (~ (virtual_gid)))))) >> uint(_GLF_ZERO(0.0, injectionSwitch.x))) >> 0u))])), 4, 64, 0);
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(true, false || (true)) && (false))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(mat3x4(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))), 1.0, sqrt(0.0), 0.0, 0.0, 1.0, 1.0, abs(0.0), 1.0, 0.0, 1.0))).y, false || (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bool(injectionSwitch.x > injectionSwitch.y)))) && true)))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_FALSE(_GLF_IDENTITY(false, false || (false)), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-1263.5705), (injectionSwitch)[1]), vec2(_GLF_IDENTITY((injectionSwitch)[0], max((injectionSwitch)[0], (injectionSwitch)[0])), _GLF_FUZZED(8450.5473)), bvec2(true, false))).y))))))
  return;
 atomicStore(buf[next_virtual_gid], uint(read_1 + _GLF_IDENTITY(1, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((1), _GLF_IDENTITY(int(_GLF_IDENTITY(int(_GLF_IDENTITY((1), _GLF_IDENTITY(0 ^ ((1)), min(0 ^ ((1)), 0 ^ _GLF_IDENTITY(((1)), ~ (~ (((1))))))))), 0 ^ (int(_GLF_IDENTITY((1), 0 ^ ((1))))))), clamp(int(_GLF_IDENTITY(int(_GLF_IDENTITY((1), 0 ^ ((1)))), 0 ^ (int(_GLF_IDENTITY((1), 0 ^ ((1))))))), int(_GLF_IDENTITY(int(_GLF_IDENTITY((1), 0 ^ ((1)))), 0 ^ (int(_GLF_IDENTITY((1), 0 ^ ((1))))))), int(_GLF_IDENTITY(int(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((1), int(ivec3(_GLF_IDENTITY((1), ((1)) | ((1))), 1, 0))), (_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).y)) ? (1) : _GLF_FUZZED(-68386))), 0 ^ (_GLF_IDENTITY((1), max((1), (1)))))), _GLF_IDENTITY(0 ^ (int(_GLF_IDENTITY((1), 0 ^ ((1))))), min(_GLF_IDENTITY(0 ^ (int(_GLF_IDENTITY((1), 0 ^ ((1))))), _GLF_IDENTITY((0 ^ (int(_GLF_IDENTITY((1), 0 ^ ((1)))))) << (0 | 0), ((0 ^ (int(_GLF_IDENTITY((1), 0 ^ ((1)))))) << (0 | 0)) >> 0)), 0 ^ (int(_GLF_IDENTITY((1), 0 ^ ((1)))))))))))), (_GLF_IDENTITY(_GLF_IDENTITY((1), _GLF_IDENTITY(_GLF_IDENTITY(int(_GLF_IDENTITY(int(_GLF_IDENTITY((1), _GLF_IDENTITY(0, 0 ^ (_GLF_IDENTITY(0, 0 ^ (0)))) ^ ((_GLF_IDENTITY(1, max(_GLF_IDENTITY(1, (1) * (0 | 1)), 1)))))), 0 ^ (int(_GLF_IDENTITY((1), 0 ^ ((1))))))), (int(_GLF_IDENTITY(int(_GLF_IDENTITY((1), _GLF_IDENTITY(0, 0 ^ (_GLF_IDENTITY(0, 0 ^ (0)))) ^ ((_GLF_IDENTITY(1, max(_GLF_IDENTITY(1, (1) * (0 | 1)), 1)))))), 0 ^ (int(_GLF_IDENTITY((1), 0 ^ ((1)))))))) ^ 0), clamp(int(_GLF_IDENTITY(int(_GLF_IDENTITY((1), 0 ^ ((1)))), 0 ^ (_GLF_IDENTITY(int(_GLF_IDENTITY((1), 0 ^ ((1)))), (int(_GLF_IDENTITY((1), 0 ^ ((1))))) - int(_GLF_ZERO(0.0, injectionSwitch.x)))))), int(_GLF_IDENTITY(int(_GLF_IDENTITY(_GLF_IDENTITY((1), 0 ^ _GLF_IDENTITY(((1)), min(((1)), _GLF_IDENTITY(((1)), clamp(((1)), ((1)), ((1))))))), max(_GLF_IDENTITY(_GLF_IDENTITY((1), 0 ^ ((1))), _GLF_IDENTITY(min(_GLF_IDENTITY((1), 0 ^ ((1))), _GLF_IDENTITY((1), 0 ^ ((1)))), (min(_GLF_IDENTITY((1), 0 ^ ((1))), _GLF_IDENTITY((1), 0 ^ ((1))))) | (0 ^ (0 | 0)))), _GLF_IDENTITY((1), 0 ^ ((1)))))), 0 ^ (int(_GLF_IDENTITY((_GLF_IDENTITY(1, _GLF_IDENTITY(int(_GLF_IDENTITY(ivec2(_GLF_IDENTITY(1, clamp(1, 1, 1)), 0), (ivec2(_GLF_IDENTITY(1, clamp(1, 1, 1)), 0)) >> ivec2(0, 0))), clamp(int(_GLF_IDENTITY(ivec2(_GLF_IDENTITY(1, clamp(1, 1, 1)), 0), (ivec2(_GLF_IDENTITY(1, clamp(1, 1, _GLF_IDENTITY(1, (1) - 0))), _GLF_IDENTITY(0, int(_GLF_IDENTITY(ivec4(0, 1, int(_GLF_ZERO(0.0, injectionSwitch.x)), 1), ivec4(0, 0, 0, 0) | (ivec4(0, 1, int(_GLF_ZERO(0.0, injectionSwitch.x)), 1))))))) >> ivec2(0, 0))), int(_GLF_IDENTITY(ivec2(_GLF_IDENTITY(1, _GLF_IDENTITY(clamp(1, 1, 1), (clamp(1, 1, 1)) / (1 ^ 0))), 0), (ivec2(_GLF_IDENTITY(1, clamp(1, 1, 1)), 0)) >> ivec2(0, 0))), int(_GLF_IDENTITY(ivec2(_GLF_IDENTITY(1, clamp(1, 1, 1)), 0), (ivec2(_GLF_IDENTITY(_GLF_IDENTITY(1, clamp(1, 1, 1)), (true ? _GLF_IDENTITY(1, clamp(1, 1, 1)) : _GLF_FUZZED(-33859))), 0)) >> ivec2(0, 0))))))), 0 ^ ((1))))))), int(_GLF_IDENTITY(int(_GLF_IDENTITY((1), 0 ^ ((1)))), 0 ^ _GLF_IDENTITY((int(_GLF_IDENTITY((1), 0 ^ ((_GLF_IDENTITY(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, max(1, 1))) | (_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) + 0)) / 1))), min(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, max(1, 1))) | (_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) + 0)) / 1))), _GLF_IDENTITY(1, (_GLF_IDENTITY(1, max(1, 1))) | (_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) + 0)) / 1)))))))))), (_GLF_IDENTITY((int(_GLF_IDENTITY((1), 0 ^ ((_GLF_IDENTITY(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, max(1, 1))) | (_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) + 0)) / 1))), min(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, max(1, 1))) | (_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) + 0)) / 1))), _GLF_IDENTITY(1, (_GLF_IDENTITY(1, max(1, 1))) | (_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) + 0)) / 1)))))))))), max(_GLF_IDENTITY((int(_GLF_IDENTITY((1), 0 ^ ((_GLF_IDENTITY(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, max(1, 1))) | (_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) + 0)) / 1))), min(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, max(1, 1))) | (_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) + 0)) / 1))), _GLF_IDENTITY(1, (_GLF_IDENTITY(1, max(1, 1))) | (_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) + 0)) / 1)))))))))), 0 | ((int(_GLF_IDENTITY((1), 0 ^ ((_GLF_IDENTITY(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, max(1, 1))) | (_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) + 0)) / 1))), min(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, max(1, 1))) | (_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) + 0)) / 1))), _GLF_IDENTITY(1, (_GLF_IDENTITY(1, max(1, 1))) | (_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) + 0)) / 1)))))))))))), (int(_GLF_IDENTITY((1), 0 ^ ((_GLF_IDENTITY(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, max(1, 1))) | (_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) + 0)) / 1))), min(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, max(1, 1))) | (_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) + 0)) / 1))), _GLF_IDENTITY(1, (_GLF_IDENTITY(1, max(1, 1))) | (_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) + 0)) / 1))))))))))))) ^ 0)))))), (_GLF_IDENTITY((1), _GLF_IDENTITY(int(_GLF_IDENTITY(int(_GLF_IDENTITY((1), _GLF_IDENTITY(0, min(0, 0)) ^ ((1)))), 0 ^ (int(_GLF_IDENTITY((1), 0 ^ ((1))))))), clamp(int(_GLF_IDENTITY(int(_GLF_IDENTITY((1), _GLF_IDENTITY(0, (0) - 0) ^ ((1)))), 0 ^ (int(_GLF_IDENTITY((1), 0 ^ ((1))))))), int(_GLF_IDENTITY(int(_GLF_IDENTITY((1), 0 ^ ((1)))), 0 ^ (int(_GLF_IDENTITY((1), 0 ^ ((_GLF_IDENTITY(1, 0 | (_GLF_IDENTITY(1, 0 + (1))))))))))), int(_GLF_IDENTITY(int(_GLF_IDENTITY((1), 0 ^ ((1)))), 0 ^ (int(_GLF_IDENTITY((1), 0 ^ ((1))))))))))) >> 0)) | 0), 1 * (_GLF_IDENTITY(_GLF_IDENTITY((1), _GLF_IDENTITY(int(_GLF_IDENTITY(int(_GLF_IDENTITY((_GLF_IDENTITY(1, (true ? _GLF_IDENTITY(1, (_GLF_IDENTITY(1, 0 | (1))) * 1) : _GLF_FUZZED(74406)))), _GLF_IDENTITY(0 ^ ((1)), min(0 ^ ((1)), 0 ^ _GLF_IDENTITY(((1)), ~ (~ (((1))))))))), 0 ^ (int(_GLF_IDENTITY((1), 0 ^ ((1))))))), clamp(int(_GLF_IDENTITY(int(_GLF_IDENTITY((1), 0 ^ ((1)))), 0 ^ (int(_GLF_IDENTITY((1), 0 ^ ((1))))))), int(_GLF_IDENTITY(int(_GLF_IDENTITY((1), 0 ^ _GLF_IDENTITY(((1)), (((1))) / 1))), 0 ^ (int(_GLF_IDENTITY((1), 0 ^ ((1))))))), int(_GLF_IDENTITY(int(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((1), int(ivec3(_GLF_IDENTITY((1), ((1)) | ((1))), _GLF_IDENTITY(1, 0 ^ (1)), 0))), (_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).y)) ? (1) : _GLF_FUZZED(-68386))), 0 ^ (_GLF_IDENTITY((1), max((1), (1)))))), _GLF_IDENTITY(0 ^ (int(_GLF_IDENTITY((1), 0 ^ ((1))))), min(_GLF_IDENTITY(0 ^ (int(_GLF_IDENTITY((1), 0 ^ ((1))))), _GLF_IDENTITY((0 ^ (int(_GLF_IDENTITY((1), 0 ^ ((1)))))) << (0 | 0), ((0 ^ (int(_GLF_IDENTITY((1), 0 ^ ((1)))))) << (_GLF_IDENTITY(0, ~ (~ (_GLF_IDENTITY(0, max(0, 0))))) | _GLF_IDENTITY(0, (true ? 0 : _GLF_FUZZED(-31128))))) >> 0)), 0 ^ (int(_GLF_IDENTITY((1), 0 ^ ((1)))))))))))), (_GLF_IDENTITY(_GLF_IDENTITY((1), _GLF_IDENTITY(_GLF_IDENTITY(int(_GLF_IDENTITY(int(_GLF_IDENTITY((1), _GLF_IDENTITY(0, 0 ^ (_GLF_IDENTITY(0, 0 ^ (0)))) ^ _GLF_IDENTITY(((_GLF_IDENTITY(1, max(_GLF_IDENTITY(1, (1) * (0 | _GLF_IDENTITY(1, int(ivec3(1, 1, 1))))), 1)))), 0 | (((_GLF_IDENTITY(1, max(_GLF_IDENTITY(1, (1) * (0 | _GLF_IDENTITY(1, int(ivec3(1, 1, 1))))), 1)))))))), 0 ^ (int(_GLF_IDENTITY((1), 0 ^ ((1))))))), (int(_GLF_IDENTITY(int(_GLF_IDENTITY((1), _GLF_IDENTITY(0, 0 ^ (_GLF_IDENTITY(0, 0 ^ (0)))) ^ ((_GLF_IDENTITY(1, max(_GLF_IDENTITY(1, (1) * (0 | 1)), 1)))))), 0 ^ (int(_GLF_IDENTITY((1), 0 ^ ((1)))))))) ^ 0), clamp(int(_GLF_IDENTITY(int(_GLF_IDENTITY((1), 0 ^ ((1)))), 0 ^ (_GLF_IDENTITY(int(_GLF_IDENTITY(_GLF_IDENTITY((1), 0 ^ ((1))), 0 ^ (_GLF_IDENTITY((1), 0 ^ ((1)))))), (int(_GLF_IDENTITY((_GLF_IDENTITY(1, (1) + 0)), _GLF_IDENTITY(0 ^ ((1)), 0 | (_GLF_IDENTITY(0 ^ ((1)), (0 ^ ((1))) | (0 ^ ((1))))))))) - int(_GLF_ZERO(0.0, injectionSwitch.x)))))), int(_GLF_IDENTITY(int(_GLF_IDENTITY(_GLF_IDENTITY((1), 0 ^ _GLF_IDENTITY(((1)), min(((1)), _GLF_IDENTITY(_GLF_IDENTITY(((1)), clamp(((1)), ((1)), ((1)))), min(_GLF_IDENTITY(((1)), clamp(((1)), ((1)), ((1)))), _GLF_IDENTITY(_GLF_IDENTITY(((1)), clamp(((1)), ((1)), ((1)))), (_GLF_IDENTITY(((1)), clamp(((1)), ((1)), ((1))))) << 0)))))), max(_GLF_IDENTITY(_GLF_IDENTITY((1), 0 ^ ((1))), _GLF_IDENTITY(min(_GLF_IDENTITY((1), 0 ^ ((1))), _GLF_IDENTITY(_GLF_IDENTITY((1), ~ (~ (_GLF_IDENTITY((1), max((1), _GLF_IDENTITY((1), 1 * ((1)))))))), 0 ^ ((1)))), (min(_GLF_IDENTITY((1), 0 ^ _GLF_IDENTITY(((1)), (((1))) | 0)), _GLF_IDENTITY((1), 0 ^ ((1))))) | (0 ^ (0 | 0)))), _GLF_IDENTITY((1), 0 ^ ((1)))))), 0 ^ (int(_GLF_IDENTITY((_GLF_IDENTITY(1, _GLF_IDENTITY(int(_GLF_IDENTITY(ivec2(_GLF_IDENTITY(1, clamp(1, 1, _GLF_IDENTITY(1, (1) - 0))), 0), _GLF_IDENTITY((ivec2(_GLF_IDENTITY(1, clamp(1, 1, 1)), 0)), ((ivec2(_GLF_IDENTITY(1, clamp(1, 1, 1)), 0))) | ((ivec2(_GLF_IDENTITY(1, clamp(1, 1, 1)), 0)))) >> ivec2(0, 0))), clamp(int(_GLF_IDENTITY(ivec2(_GLF_IDENTITY(1, clamp(1, 1, 1)), 0), (ivec2(_GLF_IDENTITY(1, clamp(1, 1, _GLF_IDENTITY(1, (1) - 0))), _GLF_IDENTITY(0, int(_GLF_IDENTITY(ivec4(0, 1, int(_GLF_ZERO(0.0, injectionSwitch.x)), 1), ivec4(0, 0, 0, 0) | (ivec4(0, 1, int(_GLF_ZERO(0.0, injectionSwitch.x)), 1))))))) >> ivec2(0, 0))), int(_GLF_IDENTITY(ivec2(_GLF_IDENTITY(1, _GLF_IDENTITY(clamp(1, 1, 1), (_GLF_IDENTITY(clamp(1, 1, 1), clamp(_GLF_IDENTITY(clamp(1, 1, 1), max(clamp(1, 1, 1), clamp(1, 1, 1))), clamp(1, 1, 1), _GLF_IDENTITY(clamp(1, 1, 1), 0 | (clamp(1, 1, 1)))))) / (1 ^ 0))), 0), (ivec2(_GLF_IDENTITY(1, clamp(1, 1, 1)), 0)) >> ivec2(0, 0))), int(_GLF_IDENTITY(ivec2(_GLF_IDENTITY(1, _GLF_IDENTITY(clamp(1, 1, 1), int(ivec4(clamp(1, 1, 1), 1, 1, 0)))), 0), _GLF_IDENTITY((ivec2(_GLF_IDENTITY(_GLF_IDENTITY(1, clamp(1, 1, 1)), (true ? _GLF_IDENTITY(1, clamp(1, 1, 1)) : _GLF_FUZZED(-33859))), 0)), ((ivec2(_GLF_IDENTITY(_GLF_IDENTITY(1, clamp(1, 1, 1)), (true ? _GLF_IDENTITY(1, clamp(1, 1, 1)) : _GLF_FUZZED(-33859))), 0))) + ivec2(0, 0)) >> ivec2(0, 0))))))), 0 ^ ((1))))))), int(_GLF_IDENTITY(int(_GLF_IDENTITY((1), 0 ^ ((1)))), 0 ^ _GLF_IDENTITY((_GLF_IDENTITY(int(_GLF_IDENTITY((1), 0 ^ ((_GLF_IDENTITY(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, max(1, 1))) | (_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) + 0)) / 1))), min(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, max(1, 1))) | (_GLF_IDENTITY(1, (_GLF_IDENTITY(_GLF_IDENTITY(1, (1) + 0), int(_GLF_ZERO(0.0, injectionSwitch.x)) | (_GLF_IDENTITY(_GLF_IDENTITY(1, (1) + 0), clamp(_GLF_IDENTITY(1, (1) + 0), _GLF_IDENTITY(_GLF_IDENTITY(1, (1) + 0), (_GLF_IDENTITY(1, (1) + 0)) ^ 0), _GLF_IDENTITY(1, (1) + 0)))))) / 1))), _GLF_IDENTITY(1, (_GLF_IDENTITY(1, max(1, 1))) | (_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) + 0)) / 1))))))))), (int(_GLF_IDENTITY((1), 0 ^ ((_GLF_IDENTITY(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, max(1, 1))) | (_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) + 0)) / 1))), min(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, max(1, 1))) | (_GLF_IDENTITY(1, (_GLF_IDENTITY(_GLF_IDENTITY(1, (1) + 0), int(_GLF_ZERO(0.0, injectionSwitch.x)) | (_GLF_IDENTITY(_GLF_IDENTITY(1, (1) + 0), clamp(_GLF_IDENTITY(1, (1) + 0), _GLF_IDENTITY(_GLF_IDENTITY(1, (1) + 0), (_GLF_IDENTITY(1, (1) + 0)) ^ 0), _GLF_IDENTITY(1, (1) + 0)))))) / 1))), _GLF_IDENTITY(1, (_GLF_IDENTITY(1, max(1, 1))) | (_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) + 0)) / 1)))))))))) * 1)), (_GLF_IDENTITY((int(_GLF_IDENTITY((1), 0 ^ ((_GLF_IDENTITY(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, max(1, 1))) | (_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) + _GLF_IDENTITY(0, min(0, 0)))) / 1))), min(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, max(1, 1))) | (_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) + 0)) / 1))), _GLF_IDENTITY(1, (_GLF_IDENTITY(1, max(1, 1))) | (_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) + 0)) / 1)))))))))), max(_GLF_IDENTITY((int(_GLF_IDENTITY((1), 0 ^ ((_GLF_IDENTITY(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, max(1, 1))) | (_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) + 0)) / 1))), min(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, max(1, 1))) | (_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) + 0)) / 1))), _GLF_IDENTITY(1, (_GLF_IDENTITY(1, max(1, 1))) | (_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) + 0)) / 1)))))))))), 0 | ((int(_GLF_IDENTITY((1), 0 ^ _GLF_IDENTITY(((_GLF_IDENTITY(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, max(1, 1))) | (_GLF_IDENTITY(1, (_GLF_IDENTITY(_GLF_IDENTITY(1, min(_GLF_IDENTITY(1, ~ (~ (1))), 1)), (1) + 0)) / 1))), min(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, max(1, 1))) | (_GLF_IDENTITY(1, _GLF_IDENTITY((_GLF_IDENTITY(1, (1) + 0)), ((_GLF_IDENTITY(1, (1) + 0))) | ((_GLF_IDENTITY(1, (1) + 0)))) / 1))), _GLF_IDENTITY(1, (_GLF_IDENTITY(1, max(1, 1))) | (_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) + 0)) / 1))))))), clamp(((_GLF_IDENTITY(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, max(1, 1))) | (_GLF_IDENTITY(1, (_GLF_IDENTITY(_GLF_IDENTITY(1, min(_GLF_IDENTITY(1, ~ (~ (1))), 1)), (1) + 0)) / 1))), min(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, max(1, 1))) | (_GLF_IDENTITY(1, _GLF_IDENTITY((_GLF_IDENTITY(1, (1) + 0)), ((_GLF_IDENTITY(1, (1) + 0))) | ((_GLF_IDENTITY(1, (1) + 0)))) / 1))), _GLF_IDENTITY(1, (_GLF_IDENTITY(1, max(1, 1))) | (_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) + 0)) / 1))))))), ((_GLF_IDENTITY(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, max(1, 1))) | (_GLF_IDENTITY(1, (_GLF_IDENTITY(_GLF_IDENTITY(1, min(_GLF_IDENTITY(1, ~ (~ (1))), 1)), (1) + 0)) / 1))), min(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, max(1, 1))) | (_GLF_IDENTITY(1, _GLF_IDENTITY((_GLF_IDENTITY(1, (1) + 0)), ((_GLF_IDENTITY(1, (1) + 0))) | ((_GLF_IDENTITY(1, (1) + 0)))) / 1))), _GLF_IDENTITY(1, (_GLF_IDENTITY(1, max(1, 1))) | (_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) + 0)) / 1))))))), ((_GLF_IDENTITY(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, max(1, 1))) | (_GLF_IDENTITY(1, (_GLF_IDENTITY(_GLF_IDENTITY(1, min(_GLF_IDENTITY(1, ~ (~ (1))), 1)), (1) + 0)) / 1))), min(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, max(1, 1))) | (_GLF_IDENTITY(1, _GLF_IDENTITY((_GLF_IDENTITY(1, (1) + 0)), ((_GLF_IDENTITY(1, (1) + 0))) | ((_GLF_IDENTITY(1, (1) + 0)))) / 1))), _GLF_IDENTITY(1, (_GLF_IDENTITY(1, max(1, 1))) | (_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) + 0)) / 1)))))))))))))), (int(_GLF_IDENTITY((1), 0 ^ ((_GLF_IDENTITY(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, max(1, 1))) | (_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) + 0)) / 1))), min(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, max(_GLF_IDENTITY(1, (1) / 1), 1))) | (_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) + 0)) / 1))), _GLF_IDENTITY(1, (_GLF_IDENTITY(1, max(1, 1))) | (_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) + 0)) / 1))))))))))))) ^ 0)))))), _GLF_IDENTITY((_GLF_IDENTITY((1), _GLF_IDENTITY(int(_GLF_IDENTITY(int(_GLF_IDENTITY((1), _GLF_IDENTITY(0, min(0, 0)) ^ ((1)))), 0 ^ (int(_GLF_IDENTITY((1), 0 ^ ((1))))))), clamp(int(_GLF_IDENTITY(int(_GLF_IDENTITY((1), _GLF_IDENTITY(0, (0) - 0) ^ ((1)))), 0 ^ _GLF_IDENTITY((int(_GLF_IDENTITY((1), 0 ^ ((1))))), ~ (_GLF_IDENTITY(~ ((int(_GLF_IDENTITY((1), 0 ^ ((1)))))), (_GLF_IDENTITY(~ ((int(_GLF_IDENTITY((1), 0 ^ ((1)))))), min(~ ((int(_GLF_IDENTITY((1), 0 ^ ((1)))))), ~ ((int(_GLF_IDENTITY((1), 0 ^ ((1))))))))) >> 0))))), int(_GLF_IDENTITY(int(_GLF_IDENTITY((1), 0 ^ ((1)))), 0 ^ (int(_GLF_IDENTITY((1), 0 ^ (_GLF_IDENTITY((_GLF_IDENTITY(1, 0 | _GLF_IDENTITY((_GLF_IDENTITY(1, 0 + (1))), ((_GLF_IDENTITY(1, 0 + (1)))) - 0))), ((-41463 & 0) >> _GLF_IDENTITY(int(3), int(3))) ^ ((_GLF_IDENTITY(1, 0 | _GLF_IDENTITY((_GLF_IDENTITY(1, 0 + (1))), ((_GLF_IDENTITY(1, 0 + (1)))) - 0))))))))))), int(_GLF_IDENTITY(int(_GLF_IDENTITY((1), 0 ^ ((1)))), 0 ^ (int(_GLF_IDENTITY((1), 0 ^ ((1))))))))))), ((_GLF_IDENTITY((1), _GLF_IDENTITY(int(_GLF_IDENTITY(int(_GLF_IDENTITY((1), _GLF_IDENTITY(0, min(0, 0)) ^ ((1)))), 0 ^ (int(_GLF_IDENTITY((1), 0 ^ ((1))))))), clamp(int(_GLF_IDENTITY(int(_GLF_IDENTITY((1), _GLF_IDENTITY(0, (0) - 0) ^ ((1)))), 0 ^ _GLF_IDENTITY((int(_GLF_IDENTITY((1), 0 ^ ((1))))), ~ (_GLF_IDENTITY(~ ((int(_GLF_IDENTITY((1), 0 ^ ((1)))))), (_GLF_IDENTITY(~ ((int(_GLF_IDENTITY((1), 0 ^ ((1)))))), min(~ ((int(_GLF_IDENTITY((1), 0 ^ ((1)))))), ~ ((int(_GLF_IDENTITY((1), 0 ^ ((1))))))))) >> 0))))), int(_GLF_IDENTITY(int(_GLF_IDENTITY((1), 0 ^ ((1)))), 0 ^ (int(_GLF_IDENTITY((1), 0 ^ (_GLF_IDENTITY((_GLF_IDENTITY(1, 0 | _GLF_IDENTITY((_GLF_IDENTITY(1, 0 + (1))), ((_GLF_IDENTITY(1, 0 + (1)))) - 0))), ((-41463 & 0) >> _GLF_IDENTITY(int(3), int(3))) ^ ((_GLF_IDENTITY(1, 0 | _GLF_IDENTITY((_GLF_IDENTITY(1, 0 + (1))), ((_GLF_IDENTITY(1, 0 + (1)))) - 0))))))))))), int(_GLF_IDENTITY(int(_GLF_IDENTITY((1), 0 ^ ((1)))), 0 ^ (int(_GLF_IDENTITY((1), 0 ^ ((1)))))))))))) | (_GLF_IDENTITY((_GLF_IDENTITY((1), _GLF_IDENTITY(int(_GLF_IDENTITY(int(_GLF_IDENTITY((1), _GLF_IDENTITY(0, min(0, 0)) ^ ((1)))), 0 ^ (int(_GLF_IDENTITY((1), 0 ^ ((1))))))), clamp(int(_GLF_IDENTITY(int(_GLF_IDENTITY((1), _GLF_IDENTITY(0, (0) - 0) ^ ((1)))), 0 ^ _GLF_IDENTITY((int(_GLF_IDENTITY((1), 0 ^ ((1))))), ~ (_GLF_IDENTITY(~ ((int(_GLF_IDENTITY((1), 0 ^ ((1)))))), (_GLF_IDENTITY(~ ((int(_GLF_IDENTITY((1), 0 ^ ((1)))))), min(~ ((int(_GLF_IDENTITY((1), 0 ^ ((1)))))), ~ ((int(_GLF_IDENTITY((1), 0 ^ ((1))))))))) >> 0))))), int(_GLF_IDENTITY(int(_GLF_IDENTITY((1), 0 ^ ((1)))), 0 ^ (int(_GLF_IDENTITY((1), 0 ^ (_GLF_IDENTITY((_GLF_IDENTITY(1, 0 | _GLF_IDENTITY((_GLF_IDENTITY(1, 0 + (1))), ((_GLF_IDENTITY(1, 0 + (1)))) - 0))), ((-41463 & 0) >> _GLF_IDENTITY(int(3), int(3))) ^ ((_GLF_IDENTITY(1, 0 | _GLF_IDENTITY((_GLF_IDENTITY(1, 0 + (1))), ((_GLF_IDENTITY(1, 0 + (1)))) - 0))))))))))), int(_GLF_IDENTITY(int(_GLF_IDENTITY((1), 0 ^ ((1)))), 0 ^ (int(_GLF_IDENTITY((1), 0 ^ ((1))))))))))), ~ (~ ((_GLF_IDENTITY((1), _GLF_IDENTITY(int(_GLF_IDENTITY(int(_GLF_IDENTITY((1), _GLF_IDENTITY(0, min(0, 0)) ^ ((1)))), 0 ^ (int(_GLF_IDENTITY((1), 0 ^ ((1))))))), clamp(int(_GLF_IDENTITY(int(_GLF_IDENTITY((1), _GLF_IDENTITY(0, (0) - 0) ^ ((1)))), 0 ^ _GLF_IDENTITY((int(_GLF_IDENTITY((1), 0 ^ ((1))))), ~ (_GLF_IDENTITY(~ ((int(_GLF_IDENTITY((1), 0 ^ ((1)))))), (_GLF_IDENTITY(~ ((int(_GLF_IDENTITY((1), 0 ^ ((1)))))), min(~ ((int(_GLF_IDENTITY((1), 0 ^ ((1)))))), ~ ((int(_GLF_IDENTITY((1), 0 ^ ((1))))))))) >> 0))))), int(_GLF_IDENTITY(int(_GLF_IDENTITY((1), 0 ^ ((1)))), 0 ^ (int(_GLF_IDENTITY((1), 0 ^ (_GLF_IDENTITY((_GLF_IDENTITY(1, 0 | _GLF_IDENTITY((_GLF_IDENTITY(1, 0 + (1))), ((_GLF_IDENTITY(1, 0 + (1)))) - 0))), ((-41463 & 0) >> _GLF_IDENTITY(int(3), int(3))) ^ ((_GLF_IDENTITY(1, 0 | _GLF_IDENTITY((_GLF_IDENTITY(1, 0 + (1))), ((_GLF_IDENTITY(1, 0 + (1)))) - 0))))))))))), int(_GLF_IDENTITY(int(_GLF_IDENTITY((1), 0 ^ ((1)))), 0 ^ (int(_GLF_IDENTITY((1), 0 ^ ((1)))))))))))))))) >> 0)) | 0))) << (_GLF_IDENTITY(_GLF_IDENTITY(0, (0) >> 0), int(ivec4(_GLF_IDENTITY(0, (0) >> 0), 1, 0, (0 >> _GLF_IDENTITY(int(0), int(0)))))) << _GLF_IDENTITY(int(5), int(5))))), 4, 64, 4);
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec2(false, false))), (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        return;
       barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
        return;
      }
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0)), ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0))) && true))), bool(_GLF_IDENTITY(bvec3(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false, true), bvec3(bvec4(bvec3(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false, true), false))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 uint read_2 = atomicLoad(buf[virtual_gid], 4, 64, 0);
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(false, (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) && true)) || false)) || false) || (false))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y))))))
    return;
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(995.004), (injectionSwitch)[1]), vec2(_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch)[0], 0.0 + ((injectionSwitch)[0])), float(vec3((injectionSwitch)[0], cos(0.0), 1.0))), _GLF_FUZZED(-8.7)), bvec2(true, false))).x > injectionSwitch.y))) && true)))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_DEAD(false), true, false))), false, true, true)), (bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_DEAD(false), true, false))), false, true, true))) || false)))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 atomicStore(buf[_GLF_IDENTITY(next_virtual_gid, (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y))))) ? _GLF_FUZZED(subgroup_size) : _GLF_IDENTITY(next_virtual_gid, (false ? _GLF_FUZZED(61724u) : next_virtual_gid))))], _GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1, max(read_1 + 1, _GLF_IDENTITY(read_1 + 1, ~ (~ (read_1 + 1))))) == read_2, ! (_GLF_IDENTITY(! (read_1 + 1 == read_2), bool(_GLF_IDENTITY(bvec2(! (read_1 + 1 == read_2), false), bvec2(bvec3(bvec2(! (read_1 + _GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(-32641))) == read_2), false), false))))))), false || (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1, max(read_1 + 1, _GLF_IDENTITY(read_1 + 1, ~ (~ (read_1 + 1))))) == read_2, ! (_GLF_IDENTITY(! (read_1 + 1 == read_2), bool(_GLF_IDENTITY(bvec2(! (read_1 + 1 == read_2), false), bvec2(bvec3(bvec2(! (read_1 + _GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(-32641))) == read_2), false), false))))))), false || (_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1, max(read_1 + 1, _GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1, ~ (~ (read_1 + 1))), (_GLF_IDENTITY(read_1 + 1, ~ (~ (read_1 + 1)))) << (0u | 0u)))) == read_2, ! (_GLF_IDENTITY(! (read_1 + 1 == read_2), bool(_GLF_IDENTITY(bvec2(! (read_1 + 1 == read_2), false), bvec2(bvec3(bvec2(! (read_1 + _GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(-32641))) == read_2), false), false)))))))))))) + 1, (_GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1, max(read_1 + 1, _GLF_IDENTITY(read_1 + 1, ~ (~ (read_1 + 1))))) == read_2, ! (_GLF_IDENTITY(! (read_1 + 1 == read_2), bool(_GLF_IDENTITY(bvec2(! (read_1 + 1 == read_2), false), bvec2(bvec3(bvec2(! (read_1 + _GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(-32641))) == read_2), false), false))))))), false || (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1, max(read_1 + 1, _GLF_IDENTITY(read_1 + 1, ~ (~ (read_1 + 1))))) == read_2, ! (_GLF_IDENTITY(! (read_1 + 1 == read_2), bool(_GLF_IDENTITY(bvec2(! (read_1 + 1 == read_2), false), bvec2(bvec3(bvec2(! (read_1 + _GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(-32641))) == read_2), false), false))))))), false || (_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1, max(read_1 + 1, _GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1, ~ (~ (read_1 + 1))), (_GLF_IDENTITY(read_1 + 1, ~ (~ (read_1 + 1)))) << (0u | 0u)))) == read_2, ! (_GLF_IDENTITY(! (read_1 + 1 == read_2), bool(_GLF_IDENTITY(bvec2(! (read_1 + 1 == read_2), false), bvec2(bvec3(bvec2(! (read_1 + _GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(-32641))) == read_2), false), false)))))))))))) + 1, 0u ^ (_GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1, max(read_1 + 1, _GLF_IDENTITY(read_1 + 1, ~ (~ (read_1 + 1))))) == read_2, ! (_GLF_IDENTITY(! (read_1 + 1 == read_2), bool(_GLF_IDENTITY(bvec2(! (read_1 + 1 == read_2), false), bvec2(bvec3(bvec2(! (read_1 + _GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(-32641))) == read_2), false), false))))))), false || (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1, max(read_1 + 1, _GLF_IDENTITY(read_1 + 1, ~ (~ (read_1 + 1))))) == read_2, ! (_GLF_IDENTITY(! (read_1 + 1 == read_2), bool(_GLF_IDENTITY(bvec2(! (read_1 + 1 == read_2), false), bvec2(bvec3(bvec2(! (read_1 + _GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(-32641))) == read_2), false), false))))))), false || (_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1, max(read_1 + 1, _GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1, ~ (~ (read_1 + 1))), (_GLF_IDENTITY(read_1 + 1, ~ (~ (read_1 + 1)))) << (0u | 0u)))) == read_2, ! (_GLF_IDENTITY(! (read_1 + 1 == read_2), bool(_GLF_IDENTITY(bvec2(! (read_1 + 1 == read_2), false), bvec2(bvec3(bvec2(! (read_1 + _GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(-32641))) == read_2), false), false)))))))))))) + 1, (uint(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1, max(read_1 + 1, _GLF_IDENTITY(read_1 + 1, ~ (~ (read_1 + 1))))) == read_2, ! (_GLF_IDENTITY(! (read_1 + 1 == read_2), bool(_GLF_IDENTITY(bvec2(! (read_1 + 1 == read_2), false), bvec2(bvec3(bvec2(! (read_1 + _GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(-32641))) == read_2), false), false))))))), false || (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1, max(read_1 + 1, _GLF_IDENTITY(read_1 + 1, ~ (~ (read_1 + 1))))) == read_2, ! (_GLF_IDENTITY(! (read_1 + 1 == read_2), bool(_GLF_IDENTITY(bvec2(! (read_1 + 1 == read_2), false), bvec2(bvec3(bvec2(! (read_1 + _GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(-32641))) == read_2), false), false))))))), false || (_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1, max(read_1 + 1, _GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1, ~ (~ (read_1 + 1))), (_GLF_IDENTITY(read_1 + 1, ~ (~ (read_1 + 1)))) << (0u | 0u)))) == read_2, ! (_GLF_IDENTITY(! (read_1 + 1 == read_2), bool(_GLF_IDENTITY(bvec2(! (read_1 + 1 == read_2), false), bvec2(bvec3(bvec2(! (read_1 + _GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(-32641))) == read_2), false), false)))))))))))) + 1) << 0u)))) ^ 0u), 4, 64, 4);
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, false || (false)), (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED((8459.4302 - -8.5))), float(0.0), bool(true))))), mix(vec2((injectionSwitch)[0], _GLF_FUZZED(4.0)), vec2(_GLF_FUZZED(-9.3), (injectionSwitch)[1]), bvec2(false, true))).y)), ! (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec2(! _GLF_IDENTITY((_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, true, true)), ! (! (bool(bvec3(false, true, true)))))), _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true)), ! (! ((injectionSwitch.x > injectionSwitch.y)))))), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(_GLF_IDENTITY(true, (true) && true), bool(bvec2(true, false))) && ((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), (! (_GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(true && ((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(true && ((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (true && ((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) && true)))))) && true))), bool(bvec2((_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), false || (false)), (injectionSwitch.x > injectionSwitch.y))), false))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec3(bvec4(bvec3(_GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec2((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false))))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false))))), false))))), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(! (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec2(! (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))))), _GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, false || (false))), bool(bvec4(! (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec3(false, false, true))), false || (false))), false, false, _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(smoothstep(injectionSwitch, vec2(-7932.2544, 0.8), vec2(-1.8, -70.91))) : injectionSwitch)).y), ! (! ((injectionSwitch.x < injectionSwitch.y)))))))))))))), ! (! (! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bool(injectionSwitch.x > injectionSwitch.y))))), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), bool(bvec2(! (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))))), _GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, false || (false))), bool(bvec4(! (_GLF_IDENTITY(false, false || (false))), false, false, _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ! (_GLF_IDENTITY(! ((injectionSwitch.x < injectionSwitch.y)), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(! ((injectionSwitch.x < injectionSwitch.y)), ! (! (! ((injectionSwitch.x < injectionSwitch.y))))), true, true), bvec3(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(! ((injectionSwitch.x < injectionSwitch.y)), ! (! (! ((injectionSwitch.x < injectionSwitch.y))))), true, true), bvec3(bvec3(bvec3(_GLF_IDENTITY(! ((injectionSwitch.x < injectionSwitch.y)), ! (! (! ((injectionSwitch.x < injectionSwitch.y))))), true, true)))))))))))))))))))))))))) && true)))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), bool(bvec3(_GLF_IDENTITY(false, ! (! (false))), false, false)))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, bool(bvec4(false, true, false, false)))))))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
}
