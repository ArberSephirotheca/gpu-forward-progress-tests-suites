#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


struct _GLF_struct_30 {
 bvec4 _f0;
 uvec2 _f1;
 mat4x2 _f2;
 int _f3;
} ;

struct _GLF_struct_29 {
 mat4x3 _f0;
 vec3 _f1;
 bool _f2;
 bvec4 _f3;
} ;

struct _GLF_struct_28 {
 int _f0;
 bvec3 _f1;
 bvec3 _f2;
 ivec2 _f3;
 ivec4 _f4;
 mat3x4 _f5;
 int _f6;
} ;

struct _GLF_struct_27 {
 float _f0;
 mat4x2 _f1;
 mat4x2 _f2;
 mat3x2 _f3;
 bool _f4;
 mat4 _f5;
} ;

struct _GLF_struct_31 {
 _GLF_struct_27 _f0;
 _GLF_struct_28 _f1;
 uint _f2;
 _GLF_struct_29 _f3;
 bvec3 _f4;
 _GLF_struct_30 _f5;
 bool _f6;
} ;

struct _GLF_struct_25 {
 bool _f0;
 vec4 _f1;
 vec4 _f2;
 bvec3 _f3;
} ;

struct _GLF_struct_24 {
 bvec4 _f0;
 mat4x2 _f1;
 uvec2 _f2;
} ;

struct _GLF_struct_26 {
 uint workgroup_id;
 _GLF_struct_24 _f0;
 _GLF_struct_25 _f1;
} ;

struct _GLF_struct_22 {
 int _f0;
 mat4x3 _f1;
 uvec4 _f2;
 ivec3 _f3;
 uvec2 _f4;
} ;

struct _GLF_struct_21 {
 ivec4 _f0;
 mat4x2 _f1;
 ivec2 _f2;
 bool _f3;
 bvec2 _f4;
} ;

struct _GLF_struct_20 {
 bool _f0;
 vec3 _f1;
} ;

struct _GLF_struct_23 {
 _GLF_struct_20 _f0;
 vec4 _f1;
 _GLF_struct_21 _f2;
 _GLF_struct_22 _f3;
} ;

struct _GLF_struct_18 {
 bvec4 _f0;
 mat4x3 _f1;
 uint _f2;
 mat2 _f3;
 vec3 _f4;
 bvec3 _f5;
} ;

struct _GLF_struct_17 {
 uvec3 _f0;
 mat4 _f1;
} ;

struct _GLF_struct_19 {
 mat4 _f0;
 uint _f1;
 mat3x2 _f2;
 _GLF_struct_17 _f3;
 bvec2 _f4;
 _GLF_struct_18 _f5;
} ;

struct _GLF_struct_32 {
 _GLF_struct_19 _f0;
 _GLF_struct_23 _f1;
 mat4x3 _f2;
 _GLF_struct_26 _f3;
 _GLF_struct_31 _f4;
 bvec3 _f5;
} ;

struct _GLF_struct_14 {
 int _f0;
 uvec3 _f1;
 uint _f2;
 mat4 _f3;
 vec2 _f4;
 mat2x4 _f5;
 uint next_virtual_gid;
} ;

struct _GLF_struct_13 {
 vec3 _f0;
 bool _f1;
 mat3 _f2;
} ;

struct _GLF_struct_12 {
 bvec2 _f0;
 mat4x2 _f1;
 mat2x4 _f2;
 int _f3;
 uint _f4;
 int _f5;
 bvec4 _f6;
} ;

struct _GLF_struct_15 {
 ivec2 _f0;
 _GLF_struct_12 _f1;
 _GLF_struct_13 _f2;
 _GLF_struct_14 _f3;
} ;

struct _GLF_struct_10 {
 ivec4 _f0;
 ivec2 _f1;
 uint _f2;
 mat2x3 _f3;
} ;

struct _GLF_struct_11 {
 bvec4 _f0;
 _GLF_struct_10 _f1;
 ivec2 _f2;
 uvec3 _f3;
} ;

struct _GLF_struct_8 {
 mat2x4 _f0;
 mat4x3 _f1;
 bvec2 _f2;
} ;

struct _GLF_struct_7 {
 mat3 _f0;
 mat2x3 _f1;
 uvec3 _f2;
} ;

struct _GLF_struct_6 {
 float _f0;
 mat3x2 _f1;
 bool _f2;
 vec2 _f3;
} ;

struct _GLF_struct_5 {
 uvec2 _f0;
} ;

struct _GLF_struct_9 {
 _GLF_struct_5 _f0;
 _GLF_struct_6 _f1;
 _GLF_struct_7 _f2;
 _GLF_struct_8 _f3;
 uint _f4;
} ;

struct _GLF_struct_3 {
 mat4x3 _f0;
 mat4x2 _f1;
 uvec2 _f2;
} ;

struct _GLF_struct_2 {
 bvec3 _f0;
 vec4 _f1;
 bool _f2;
 bool _f3;
 ivec4 _f4;
 bvec3 _f5;
 mat2x3 _f6;
} ;

struct _GLF_struct_1 {
 uvec3 _f0;
} ;

struct _GLF_struct_0 {
 uvec4 _f0;
 ivec4 _f1;
 mat2x3 _f2;
 mat2x3 _f3;
 bvec2 _f4;
 bvec3 _f5;
 mat4 _f6;
} ;

struct _GLF_struct_4 {
 _GLF_struct_0 _f0;
 vec2 _f1;
 int _f2;
 _GLF_struct_1 _f3;
 mat2x4 _f4;
 _GLF_struct_2 _f5;
 _GLF_struct_3 _f6;
} ;

struct _GLF_struct_16 {
 mat3 _f0;
 bvec3 _f1;
 _GLF_struct_4 _f2;
 _GLF_struct_9 _f3;
 _GLF_struct_11 _f4;
 _GLF_struct_15 _f5;
} ;

layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > int(_GLF_ZERO(0.0, injectionSwitch.x))); _injected_loop_counter --)
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))
    {
     if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, bool(bvec4(false, false, true, true)))))) || (false))))
      {
      }
     else
      {
       barrier();
       if(_GLF_DEAD(false))
        continue;
      }
    }
  }
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     barrier();
    }
   else
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       return;
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           barrier();
          }
         return;
        }
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
    }
  }
 for(int _injected_loop_counter = ((0 ^ 1) | 1); _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(false))
  return;
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-298.305)), float(injectionSwitch.x), bool(true))), injectionSwitch.x)) < injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)))).y))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       barrier();
      }
     return;
     if(_GLF_DEAD(false))
      barrier();
    }
  }
 else
  {
  }
 if(_GLF_WRAPPED_IF_FALSE(false))
  {
  }
 else
  {
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-99.26)), float(injectionSwitch.y), bool(true)))), (_GLF_IDENTITY((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-99.26)), float(injectionSwitch.y), bool(true)))), bool(bvec2((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-99.26)), float(injectionSwitch.y), bool(true)))), true)))) && true))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y))) || false)))))
    barrier();
  }
 else
  {
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), true && (bool(bool(false)))))))
  barrier();
 if(_GLF_WRAPPED_IF_FALSE(false))
  {
  }
 else
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, false || _GLF_IDENTITY(_GLF_IDENTITY((false), bool(bvec4((false), false, false, false))), bool(bool(_GLF_IDENTITY((false), bool(bvec4((false), false, false, false)))))))))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), bool(bvec3(_GLF_IDENTITY(false, (false) && true), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_IDENTITY(true, (true) && true))))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), ((injectionSwitch) * mat2(1.0)) / vec2(1.0, 1.0))), injectionSwitch)).x > injectionSwitch.y))))
  barrier();
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 do
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     for(int _injected_loop_counter = (_GLF_IDENTITY(0 << _GLF_IDENTITY(int(4), int(4)), min(0 << _GLF_IDENTITY(int(4), int(4)), 0 << _GLF_IDENTITY(int(4), int(4))))); _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
      {
       if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - sqrt(vec2(0.0, 0.0))) : _GLF_FUZZED(_GLF_IDENTITY(_GLF_IDENTITY(vec2(-47.55, 18.08), mix(vec2(_GLF_FUZZED(-43.58), (vec2(-47.55, 18.08))[1]), vec2((vec2(-47.55, 18.08))[0], _GLF_FUZZED((+ -913.114))), bvec2(true, false))), (_GLF_IDENTITY(true ? _GLF_IDENTITY(vec2(-47.55, 18.08), vec2(_GLF_IDENTITY(mat3x4(_GLF_IDENTITY(vec2(-47.55, 18.08), max(vec2(-47.55, 18.08), vec2(-47.55, 18.08))), 1.0, 0.0, 0.0, 1.0, cos(0.0), 0.0, 0.0, 0.0, 0.0, 0.0), (mat3x4(_GLF_IDENTITY(vec2(-47.55, 18.08), max(vec2(-47.55, 18.08), vec2(-47.55, 18.08))), 1.0, 0.0, 0.0, 1.0, cos(0.0), 0.0, 0.0, 0.0, 0.0, 0.0)) - mat3x4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)))) : _GLF_FUZZED(injectionSwitch), mat2(1.0) * (true ? _GLF_IDENTITY(vec2(-47.55, 18.08), vec2(_GLF_IDENTITY(mat3x4(_GLF_IDENTITY(vec2(-47.55, 18.08), max(vec2(-47.55, 18.08), vec2(-47.55, 18.08))), 1.0, 0.0, 0.0, 1.0, cos(0.0), 0.0, 0.0, 0.0, 0.0, 0.0), (mat3x4(_GLF_IDENTITY(vec2(-47.55, 18.08), max(vec2(-47.55, 18.08), vec2(-47.55, 18.08))), 1.0, 0.0, 0.0, 1.0, cos(0.0), 0.0, 0.0, 0.0, 0.0, 0.0)) - mat3x4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)))) : _GLF_FUZZED(injectionSwitch)))))))).y), ! (! (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(-8054.0014, -4446.1750)))).x > _GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - sqrt(vec2(0.0, 0.0))) : _GLF_FUZZED(vec2(-47.55, 18.08)))).y), ! (! (_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - sqrt(vec2(0.0, 0.0))) : _GLF_FUZZED(vec2(-47.55, 18.08)))).y), ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - sqrt(vec2(0.0, 0.0))) : _GLF_FUZZED(vec2(-47.55, 18.08)))).y)) || false), bool(bvec2((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - sqrt(vec2(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(1.1)), bool(false))), 0.0))) : _GLF_FUZZED(vec2(-47.55, 18.08)))).y), false))))))))))))
        return;
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
        return;
      }
     return;
     if(_GLF_DEAD(false))
      continue;
     if(_GLF_DEAD(false))
      return;
    }
  }
 while(_GLF_WRAPPED_LOOP(false));
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    return;
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
    }
   else
    {
     return;
    }
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint num_workgroup = gl_NumWorkGroups.x;
 uint workgroup_size = _GLF_IDENTITY(gl_WorkGroupSize.x, (false ? _GLF_FUZZED(_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY(~ (~ (subgroup_id)), (~ (~ (subgroup_id))) | (~ (~ (subgroup_id)))))) : _GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) | (gl_WorkGroupSize)).x));
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true)))))
    barrier();
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, true && (true))))
    {
     barrier();
    }
   else
    {
     if(_GLF_DEAD(false))
      return;
    }
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
  {
   for(int _injected_loop_counter = (0 & -91203); _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
    {
     if(_GLF_DEAD(false))
      break;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          break;
         do
          {
           barrier();
          }
         while(_GLF_WRAPPED_LOOP(false));
        }
       return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
    }
   barrier();
  }
 _GLF_struct_32 _GLF_struct_replacement_32 = _GLF_struct_32(_GLF_struct_19(mat4(1.0), _GLF_IDENTITY(1u, 0u ^ (_GLF_IDENTITY(1u, 1u * (1u)))), mat3x2(_GLF_IDENTITY(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED((-6.8 + 7.7))), _GLF_IDENTITY(float(_GLF_IDENTITY(1.0, (true ? _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(-196.065)), bool(false))) : _GLF_IDENTITY(_GLF_FUZZED(8638.8406), (_GLF_FUZZED(8638.8406)) - 0.0)))), max(float(_GLF_IDENTITY(1.0, (true ? _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(-196.065)), bool(false))) : _GLF_IDENTITY(_GLF_FUZZED(8638.8406), (_GLF_FUZZED(8638.8406)) - 0.0)))), float(_GLF_IDENTITY(1.0, (true ? _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(-196.065)), bool(false))) : _GLF_IDENTITY(_GLF_FUZZED(8638.8406), (_GLF_FUZZED(8638.8406)) - 0.0)))))), bool(true))), (true ? _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-14.63) : 1.0)) : _GLF_FUZZED(771.839)))), _GLF_struct_17(uvec3(_GLF_IDENTITY(1u, (1u) ^ 0u)), mat4(1.0)), bvec2(true), _GLF_struct_18(bvec4(_GLF_IDENTITY(true, true && (true))), mat4x3(1.0), 1u, mat2(1.0), vec3(1.0), bvec3(true))), _GLF_struct_23(_GLF_struct_20(_GLF_IDENTITY(true, false || _GLF_IDENTITY((_GLF_IDENTITY(true, ! (! (true)))), ((_GLF_IDENTITY(true, ! (! (true))))) || false)), _GLF_IDENTITY(vec3(1.0), (_GLF_IDENTITY(vec3(1.0), vec3(1.0, 1.0, 1.0) * (vec3(1.0)))) * vec3(1.0, 1.0, 1.0))), vec4(1.0), _GLF_struct_21(ivec4(1), mat4x2(1.0), ivec2(1), true, bvec2(true)), _GLF_struct_22(1, mat4x3(1.0), uvec4(1u), ivec3(1), uvec2(1u))), mat4x3(1.0), _GLF_struct_26(gl_WorkGroupID.x, _GLF_struct_24(bvec4(_GLF_IDENTITY(true, (_GLF_IDENTITY(true, _GLF_IDENTITY((true) && true, bool(bvec4((true) && true, false, false, true))))) || false)), mat4x2(1.0), _GLF_IDENTITY(uvec2(1u), (uvec2(1u)) - uvec2(0u, 0u))), _GLF_struct_25(true, vec4(1.0), vec4(1.0), bvec3(_GLF_IDENTITY(true, bool(bvec3(true, false, true)))))), _GLF_struct_31(_GLF_struct_27(1.0, mat4x2(1.0), mat4x2(1.0), mat3x2(1.0), true, mat4(1.0)), _GLF_struct_28(1, bvec3(true), bvec3(true), ivec2(1), _GLF_IDENTITY(ivec4(1), (false ? _GLF_FUZZED(ivec4(-65556, 54317, 50996, 18719)) : _GLF_IDENTITY(ivec4(1), (ivec4(1)) | (ivec4(1))))), mat3x4(1.0), 1), 1u, _GLF_struct_29(mat4x3(1.0), vec3(1.0), true, bvec4(true)), bvec3(true), _GLF_struct_30(bvec4(true), uvec2(1u), mat4x2(_GLF_IDENTITY(1.0, min(1.0, 1.0))), 1), true), _GLF_IDENTITY(bvec3(true), bvec3(bvec3(_GLF_IDENTITY(bvec3(true), bvec3(bvec3(bvec3(true))))))));
 if(_GLF_DEAD(false))
  return;
 uint workgroup_base = workgroup_size * _GLF_struct_replacement_32._f3.workgroup_id;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)))).x < injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    return;
  }
 else
  {
  }
 if(_GLF_DEAD(false))
  {
   do
    {
     barrier();
    }
   while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
  }
 uint virtual_gid = _GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_id * subgroup_size, (_GLF_IDENTITY(false, true && (false)) ? _GLF_FUZZED(num_workgroup) : subgroup_id * subgroup_size)) + subgroup_local_id, (workgroup_base + subgroup_id * subgroup_size + subgroup_local_id) | (0u | (0u | 0u)));
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(bvec2(_GLF_IDENTITY(! (false), bool(bvec3(! (false), true, true))), true)))))))
  {
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     if(_GLF_DEAD(false))
      barrier();
    }
   else
    {
    }
   barrier();
  }
 do
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
    }
   else
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     return;
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     if(_GLF_DEAD(false))
      barrier();
    }
   else
    {
    }
  }
 while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, (false) || false)));
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(vec3(injectionSwitch, 1.0))).y))))
  barrier();
 do
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), (_GLF_IDENTITY(! (_GLF_DEAD(false)), ! (! (! (_GLF_DEAD(false)))))) && true))))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
  }
 while(_GLF_WRAPPED_LOOP(false));
 do
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec2(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false)))))))
      break;
     if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false))))))))
      {
       if(_GLF_DEAD(false))
        continue;
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     if(_GLF_DEAD(false))
      break;
     if(_GLF_DEAD(false))
      {
       if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
        {
         barrier();
        }
       else
        {
        }
      }
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          continue;
         if(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), (_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), bool(bvec4(_GLF_WRAPPED_IF_TRUE(true), true, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) || false))
          {
           return;
           if(_GLF_DEAD(false))
            return;
          }
         else
          {
          }
        }
       barrier();
      }
     do
      {
       if(_GLF_DEAD(false))
        barrier();
      }
     while(_GLF_WRAPPED_LOOP(false));
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
      }
     else
      {
       if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))
        {
         if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
           if(_GLF_DEAD(false))
            return;
           if(_GLF_DEAD(false))
            barrier();
          }
         else
          {
           for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
            {
             if(_GLF_DEAD(false))
              {
               if(_GLF_DEAD(false))
                return;
               barrier();
              }
            }
           return;
          }
        }
       if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))))
        barrier();
       if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(bool(false))))))), ! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(bool(false))))))), true && (_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, bool(bvec3(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))))))))))))))))
        {
         if(_GLF_DEAD(false))
          return;
         barrier();
        }
      }
     if(_GLF_WRAPPED_IF_TRUE(true))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED((float(false) * -5.5))), float(0.0), bool(true)))) > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     else
      {
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      continue;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   do
    {
     if(_GLF_DEAD(false))
      barrier();
    }
   while(_GLF_WRAPPED_LOOP(false));
  }
 while(_GLF_WRAPPED_LOOP(false));
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))).x > injectionSwitch.y), ((_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / sqrt(vec2(1.0, 1.0))), injectionSwitch)).x > injectionSwitch.y)) && true))))
  {
   for(int _injected_loop_counter = _GLF_IDENTITY(_GLF_IDENTITY((0 >> _GLF_IDENTITY(int(7), _GLF_IDENTITY(int(7), (int(_GLF_IDENTITY(7, _GLF_IDENTITY(int(ivec4(_GLF_IDENTITY(7, (7) | (7)), 0, 1, int(_GLF_ONE(1.0, injectionSwitch.y)))), (int(ivec4(_GLF_IDENTITY(7, (7) | (7)), 0, 1, int(_GLF_ONE(1.0, injectionSwitch.y))))) >> 0)))) >> 0))), (_GLF_IDENTITY((0 >> _GLF_IDENTITY(int(7), _GLF_IDENTITY(int(7), (int(7)) >> 0))), ((0 >> _GLF_IDENTITY(int(7), _GLF_IDENTITY(int(7), (int(7)) >> 0)))) | ((0 >> _GLF_IDENTITY(_GLF_IDENTITY(int(7), _GLF_IDENTITY(int(7), (int(7)) >> 0)), min(_GLF_IDENTITY(_GLF_IDENTITY(int(7), _GLF_IDENTITY(int(7), (int(7)) >> 0)), (_GLF_IDENTITY(_GLF_IDENTITY(int(7), _GLF_IDENTITY(int(7), (int(7)) >> 0)), (_GLF_IDENTITY(int(7), _GLF_IDENTITY(int(7), (int(7)) >> 0))) ^ 0)) | 0), _GLF_IDENTITY(int(7), _GLF_IDENTITY(int(7), (int(7)) >> 0)))))))) / 1), (_GLF_IDENTITY(true, bool(bvec3(true, false, true))) ? _GLF_IDENTITY(_GLF_IDENTITY((0 >> _GLF_IDENTITY(int(7), _GLF_IDENTITY(int(7), (int(7)) >> 0))), (_GLF_IDENTITY((0 >> _GLF_IDENTITY(int(7), _GLF_IDENTITY(int(_GLF_IDENTITY(7, (7) | 0)), (int(7)) >> 0))), ((0 >> _GLF_IDENTITY(int(7), _GLF_IDENTITY(int(7), (int(7)) >> 0)))) | ((0 >> _GLF_IDENTITY(int(7), _GLF_IDENTITY(int(7), (int(7)) >> 0)))))) / 1), (_GLF_IDENTITY((0 >> _GLF_IDENTITY(int(7), _GLF_IDENTITY(int(_GLF_IDENTITY(7, (7) | (_GLF_IDENTITY(7, min(7, 7))))), (int(7)) >> 0))), (_GLF_IDENTITY((0 >> _GLF_IDENTITY(int(7), _GLF_IDENTITY(int(7), (int(_GLF_IDENTITY(7, (7) | (7)))) >> 0))), ((0 >> _GLF_IDENTITY(int(7), _GLF_IDENTITY(int(7), (int(7)) >> _GLF_IDENTITY(0, (0) ^ 0))))) | ((0 >> _GLF_IDENTITY(int(7), _GLF_IDENTITY(int(7), (int(_GLF_IDENTITY(7, (7) | (7)))) >> 0)))))) / 1)) / 1) : _GLF_FUZZED((~ -9740)))); _GLF_WRAPPED_LOOP(_injected_loop_counter < int(_GLF_ONE(1.0, injectionSwitch.y))); _injected_loop_counter ++)
    {
     barrier();
    }
  }
 do
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != (0 >> _GLF_IDENTITY(int(8), int(8)))); _injected_loop_counter --)
      {
       return;
      }
    }
  }
 while(_GLF_WRAPPED_LOOP(false));
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 _GLF_struct_16 _GLF_struct_replacement_16 = _GLF_struct_16(mat3(1.0), bvec3(true), _GLF_struct_4(_GLF_struct_0(_GLF_IDENTITY(uvec4(1u), ~ (~ (uvec4(1u)))), ivec4(1), mat2x3(1.0), mat2x3(1.0), _GLF_IDENTITY(bvec2(true), bvec2(bvec2(_GLF_IDENTITY(bvec2(true), bvec2(bvec2(bvec2(true))))))), bvec3(true), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(mat4(1.0), (false ? _GLF_FUZZED(mat4(-471.848, -768.557, 1.6, 2.6, 79.73, 0.5, -95.68, 48.89, -447.584, -1.1, -8996.7835, -347.092, -9.6, _GLF_IDENTITY(-79.94, float(mat2x3(_GLF_IDENTITY(_GLF_IDENTITY(-79.94, clamp(-79.94, -79.94, -79.94)), _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(3321.1463)), bool(false))) + (-79.94)), 0.0, 1.0, 0.0, 0.0, sqrt(1.0)))), 8023.5671, 2.3)) : mat4(1.0))), (_GLF_IDENTITY(mat4(1.0), (false ? _GLF_IDENTITY(_GLF_FUZZED(mat4(_GLF_IDENTITY(-471.848, (-471.848) + 0.0), -768.557, 1.6, 2.6, 79.73, 0.5, -95.68, 48.89, -447.584, -1.1, -8996.7835, -347.092, -9.6, -79.94, 8023.5671, 2.3)), mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0) + (_GLF_FUZZED(mat4(_GLF_IDENTITY(_GLF_IDENTITY(-471.848, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? -471.848 : _GLF_FUZZED(4353.8697))), (-471.848) + 0.0), -768.557, 1.6, 2.6, 79.73, _GLF_IDENTITY(0.5, determinant(mat4(0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0)) + (_GLF_IDENTITY(0.5, 0.0 + (0.5)))), -95.68, 48.89, -447.584, -1.1, _GLF_IDENTITY(-8996.7835, min(_GLF_IDENTITY(-8996.7835, float(mat3(_GLF_IDENTITY(-8996.7835, max(-8996.7835, -8996.7835)), 0.0, 0.0, 0.0, _GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0)), dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0))), 1.0, 1.0, 0.0, abs(0.0)))), -8996.7835)), -347.092, -9.6, -79.94, 8023.5671, 2.3)))) : mat4(1.0)))) - mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, (_GLF_IDENTITY(true, true && (true)) ? 0.0 : _GLF_FUZZED(-30.43))), 0.0, 0.0, 0.0, 0.0, 0.0)), (_GLF_IDENTITY(true, ! (! (true))) ? _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(mat4(1.0), (false ? _GLF_FUZZED(mat4(-471.848, -768.557, 1.6, 2.6, 79.73, 0.5, -95.68, 48.89, -447.584, -1.1, -8996.7835, -347.092, -9.6, _GLF_IDENTITY(_GLF_IDENTITY(-79.94, float(mat2x3(_GLF_IDENTITY(-79.94, 0.0 + (-79.94)), 0.0, 1.0, 0.0, 0.0, sqrt(1.0)))), mix(float(_GLF_FUZZED(-5.0)), float(_GLF_IDENTITY(-79.94, float(mat2x3(_GLF_IDENTITY(-79.94, 0.0 + (-79.94)), 0.0, 1.0, 0.0, 0.0, sqrt(1.0))))), bool(true))), 8023.5671, 2.3)) : mat4(1.0))), (_GLF_IDENTITY(mat4(1.0), _GLF_IDENTITY((false ? _GLF_IDENTITY(_GLF_FUZZED(mat4(_GLF_IDENTITY(-471.848, (-471.848) + 0.0), -768.557, 1.6, 2.6, 79.73, 0.5, -95.68, 48.89, -447.584, -1.1, -8996.7835, -347.092, -9.6, -79.94, 8023.5671, 2.3)), mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0) + (_GLF_FUZZED(mat4(_GLF_IDENTITY(-471.848, (-471.848) + 0.0), -768.557, 1.6, 2.6, 79.73, _GLF_IDENTITY(0.5, determinant(mat4(0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0)) + (_GLF_IDENTITY(0.5, 0.0 + (0.5)))), -95.68, 48.89, -447.584, -1.1, -8996.7835, -347.092, -9.6, -79.94, 8023.5671, 2.3)))) : mat4(1.0)), mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0) + (_GLF_IDENTITY((false ? _GLF_IDENTITY(_GLF_FUZZED(mat4(_GLF_IDENTITY(-471.848, (-471.848) + 0.0), -768.557, 1.6, 2.6, 79.73, 0.5, -95.68, 48.89, -447.584, -1.1, -8996.7835, -347.092, -9.6, -79.94, 8023.5671, 2.3)), mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0) + (_GLF_FUZZED(mat4(_GLF_IDENTITY(-471.848, (-471.848) + 0.0), -768.557, 1.6, 2.6, 79.73, _GLF_IDENTITY(0.5, determinant(mat4(0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0)) + (_GLF_IDENTITY(0.5, 0.0 + (0.5)))), -95.68, 48.89, -447.584, -1.1, -8996.7835, -347.092, -9.6, -79.94, 8023.5671, 2.3)))) : mat4(1.0)), mat4(1.0) * ((false ? _GLF_IDENTITY(_GLF_FUZZED(mat4(_GLF_IDENTITY(-471.848, (-471.848) + 0.0), -768.557, 1.6, 2.6, 79.73, 0.5, -95.68, 48.89, -447.584, -1.1, -8996.7835, -347.092, -9.6, -79.94, 8023.5671, 2.3)), mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0) + (_GLF_FUZZED(mat4(_GLF_IDENTITY(-471.848, (-471.848) + 0.0), -768.557, 1.6, 2.6, 79.73, _GLF_IDENTITY(0.5, determinant(mat4(0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0)) + (_GLF_IDENTITY(0.5, 0.0 + (0.5)))), -95.68, 48.89, -447.584, -1.1, -8996.7835, -347.092, -9.6, -79.94, 8023.5671, 2.3)))) : mat4(1.0)))))))) - mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, sqrt(1.0) * (0.0))) / 1.0), _GLF_IDENTITY(0.0, (_GLF_IDENTITY(_GLF_IDENTITY(true, (true) || false), true && (true)) ? _GLF_IDENTITY(0.0, (true ? _GLF_IDENTITY(0.0, 0.0 + (0.0)) : _GLF_FUZZED(refract(-5.7, sqrt(-2494.9468), -2828.6955)))) : _GLF_FUZZED(-30.43))), 0.0, 0.0, 0.0, 0.0, 0.0)), (_GLF_IDENTITY(_GLF_IDENTITY(mat4(1.0), (false ? _GLF_FUZZED(mat4(-471.848, -768.557, 1.6, 2.6, 79.73, 0.5, -95.68, 48.89, -447.584, -1.1, -8996.7835, -347.092, -9.6, _GLF_IDENTITY(-79.94, float(mat2x3(_GLF_IDENTITY(-79.94, 0.0 + (-79.94)), 0.0, 1.0, 0.0, 0.0, sqrt(1.0)))), 8023.5671, 2.3)) : mat4(1.0))), (_GLF_IDENTITY(mat4(1.0), (false ? _GLF_IDENTITY(_GLF_FUZZED(mat4(_GLF_IDENTITY(-471.848, (-471.848) + 0.0), -768.557, 1.6, 2.6, 79.73, 0.5, -95.68, 48.89, -447.584, -1.1, -8996.7835, -347.092, -9.6, -79.94, 8023.5671, 2.3)), mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, (0.0) * 1.0), 0.0, 0.0, 0.0, 0.0, 0.0) + (_GLF_FUZZED(mat4(_GLF_IDENTITY(-471.848, (-471.848) + 0.0), -768.557, 1.6, 2.6, 79.73, _GLF_IDENTITY(_GLF_IDENTITY(0.5, determinant(mat4(0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0)) + (_GLF_IDENTITY(0.5, 0.0 + (0.5)))), mix(float(_GLF_IDENTITY(0.5, determinant(mat4(0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0)) + (_GLF_IDENTITY(0.5, 0.0 + (0.5))))), float(_GLF_FUZZED(11.96)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), -95.68, 48.89, -447.584, -1.1, -8996.7835, -347.092, -9.6, -79.94, 8023.5671, 2.3)))) : mat4(1.0)))) - mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, (_GLF_IDENTITY(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(true, ! (! (true)))), bool(bvec2(! (_GLF_IDENTITY(true, ! (! (true)))), false))))), true && (true)) ? 0.0 : _GLF_FUZZED(-30.43))), 0.0, 0.0, 0.0, 0.0, 0.0))) * mat4(1.0)), (false ? _GLF_FUZZED(mat4(-3.4, 7.2, 5320.6424, 2.5, 46.98, 93.91, -82.06, -64.71, 8.1, -62.97, 89.65, -0.5, -82.60, -6.9, -85.00, 223.681)) : _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(mat4(1.0), (false ? _GLF_FUZZED(mat4(-471.848, -768.557, 1.6, 2.6, 79.73, 0.5, _GLF_IDENTITY(-95.68, clamp(-95.68, -95.68, -95.68)), 48.89, -447.584, -1.1, -8996.7835, -347.092, -9.6, _GLF_IDENTITY(_GLF_IDENTITY(-79.94, _GLF_IDENTITY(float(mat2x3(_GLF_IDENTITY(_GLF_IDENTITY(-79.94, 0.0 + (-79.94)), (_GLF_IDENTITY(_GLF_IDENTITY(-79.94, 0.0 + (-79.94)), sin(0.0) + (_GLF_IDENTITY(-79.94, _GLF_IDENTITY(0.0 + (-79.94), cos(0.0) * (0.0 + (-79.94))))))) - 0.0), 0.0, 1.0, 0.0, 0.0, sqrt(1.0))), max(float(mat2x3(_GLF_IDENTITY(_GLF_IDENTITY(-79.94, 0.0 + (-79.94)), (_GLF_IDENTITY(_GLF_IDENTITY(-79.94, 0.0 + (-79.94)), sin(0.0) + (_GLF_IDENTITY(-79.94, _GLF_IDENTITY(0.0 + (-79.94), cos(0.0) * (0.0 + (-79.94))))))) - 0.0), 0.0, 1.0, 0.0, 0.0, sqrt(1.0))), float(mat2x3(_GLF_IDENTITY(_GLF_IDENTITY(-79.94, 0.0 + (-79.94)), (_GLF_IDENTITY(_GLF_IDENTITY(-79.94, 0.0 + (-79.94)), sin(0.0) + (_GLF_IDENTITY(-79.94, _GLF_IDENTITY(0.0 + (-79.94), cos(0.0) * (0.0 + (-79.94))))))) - 0.0), 0.0, 1.0, 0.0, 0.0, sqrt(1.0)))))), mix(float(_GLF_FUZZED(-5.0)), float(_GLF_IDENTITY(-79.94, float(mat2x3(_GLF_IDENTITY(-79.94, 0.0 + (-79.94)), 0.0, 1.0, 0.0, 0.0, sqrt(1.0))))), bool(true))), 8023.5671, 2.3)) : mat4(1.0))), (_GLF_IDENTITY(mat4(1.0), _GLF_IDENTITY((false ? _GLF_IDENTITY(_GLF_FUZZED(mat4(_GLF_IDENTITY(_GLF_IDENTITY(-471.848, 1.0 * (_GLF_IDENTITY(-471.848, (false ? _GLF_FUZZED(vec3(-9.6, 8584.6107, 2.3)[1]) : -471.848)))), (-471.848) + 0.0), -768.557, 1.6, 2.6, 79.73, 0.5, -95.68, 48.89, -447.584, -1.1, -8996.7835, -347.092, -9.6, -79.94, 8023.5671, 2.3)), mat4(0.0, _GLF_IDENTITY(0.0, (0.0) + 0.0), 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, _GLF_IDENTITY(dot(vec3(0.0, 0.0, 0.0), vec3(_GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0))), 1.0, 1.0)), dot(vec3(0.0, 0.0, 0.0), vec3(_GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0))), 1.0, 1.0))) + (0.0)), 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, (true ? _GLF_IDENTITY(0.0, (0.0) / 1.0) : _GLF_FUZZED(5.7))), _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-2719.9086))), 0.0, 0.0, 0.0) + (_GLF_FUZZED(mat4(_GLF_IDENTITY(-471.848, (-471.848) + 0.0), -768.557, 1.6, 2.6, 79.73, _GLF_IDENTITY(0.5, determinant(mat4(0.0, _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(7.0)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, _GLF_IDENTITY(0.0, (0.0) / round(length(normalize(vec3(1.0, 1.0, 1.0))))), 0.0, 1.0, _GLF_IDENTITY(0.0, 1.0 * (_GLF_IDENTITY(0.0, _GLF_IDENTITY(float(vec2(0.0, 1.0)), max(float(vec2(0.0, 1.0)), float(vec2(0.0, 1.0))))))), 0.0, 0.0, 0.0)) + (_GLF_IDENTITY(0.5, 0.0 + (0.5)))), -95.68, 48.89, -447.584, _GLF_IDENTITY(-1.1, (-1.1) - 0.0), -8996.7835, -347.092, -9.6, -79.94, 8023.5671, 2.3)))) : mat4(1.0)), mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(8.7)), bool(false))), 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0) + (_GLF_IDENTITY((false ? _GLF_IDENTITY(_GLF_FUZZED(mat4(_GLF_IDENTITY(-471.848, (-471.848) + 0.0), -768.557, 1.6, 2.6, 79.73, 0.5, -95.68, 48.89, -447.584, -1.1, -8996.7835, -347.092, -9.6, -79.94, 8023.5671, 2.3)), mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0) + (_GLF_FUZZED(mat4(_GLF_IDENTITY(-471.848, (-471.848) + 0.0), -768.557, 1.6, 2.6, 79.73, _GLF_IDENTITY(0.5, determinant(mat4(0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0)) + (_GLF_IDENTITY(0.5, 0.0 + (0.5)))), -95.68, 48.89, -447.584, -1.1, -8996.7835, -347.092, -9.6, -79.94, 8023.5671, 2.3)))) : mat4(1.0)), mat4(1.0) * ((false ? _GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(mat4(_GLF_IDENTITY(-471.848, (-471.848) + 0.0), -768.557, 1.6, 2.6, 79.73, 0.5, -95.68, 48.89, -447.584, -1.1, -8996.7835, -347.092, -9.6, -79.94, 8023.5671, 2.3)), (_GLF_FUZZED(mat4(_GLF_IDENTITY(-471.848, (-471.848) + 0.0), -768.557, 1.6, 2.6, 79.73, 0.5, -95.68, 48.89, -447.584, -1.1, -8996.7835, -347.092, -9.6, -79.94, 8023.5671, 2.3))) - mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)), mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0) + (_GLF_FUZZED(mat4(_GLF_IDENTITY(-471.848, (-471.848) + 0.0), -768.557, 1.6, 2.6, 79.73, _GLF_IDENTITY(0.5, determinant(mat4(0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0)) + _GLF_IDENTITY((_GLF_IDENTITY(0.5, 0.0 + (0.5))), clamp(_GLF_IDENTITY((_GLF_IDENTITY(0.5, 0.0 + (0.5))), ((_GLF_IDENTITY(0.5, 0.0 + (0.5)))) / 1.0), (_GLF_IDENTITY(0.5, 0.0 + (0.5))), _GLF_IDENTITY((_GLF_IDENTITY(0.5, 0.0 + (0.5))), max(_GLF_IDENTITY((_GLF_IDENTITY(0.5, 0.0 + (0.5))), min((_GLF_IDENTITY(0.5, 0.0 + (0.5))), (_GLF_IDENTITY(0.5, 0.0 + (0.5))))), (_GLF_IDENTITY(0.5, 0.0 + (0.5)))))))), -95.68, 48.89, -447.584, -1.1, -8996.7835, -347.092, -9.6, -79.94, 8023.5671, 2.3)))) : mat4(1.0)))))))) - mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, (_GLF_IDENTITY(_GLF_IDENTITY(0.0, sqrt(1.0) * (0.0)), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(0.0, sqrt(1.0) * (0.0)) : _GLF_FUZZED(0.8)))) / 1.0), _GLF_IDENTITY(0.0, (_GLF_IDENTITY(_GLF_IDENTITY(true, (true) || false), true && (true)) ? _GLF_IDENTITY(0.0, (true ? _GLF_IDENTITY(0.0, 0.0 + (0.0)) : _GLF_FUZZED(refract(-5.7, sqrt(-2494.9468), -2828.6955)))) : _GLF_FUZZED(-30.43))), 0.0, 0.0, 0.0, 0.0, 0.0)), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(mat4(1.0), (_GLF_IDENTITY(false, ! (! (false))) ? _GLF_FUZZED(mat4(-471.848, -768.557, 1.6, 2.6, 79.73, 0.5, _GLF_IDENTITY(-95.68, mix(float(_GLF_FUZZED(4484.4925)), float(-95.68), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), 48.89, -447.584, -1.1, -8996.7835, -347.092, -9.6, _GLF_IDENTITY(-79.94, float(mat2x3(_GLF_IDENTITY(-79.94, 0.0 + (-79.94)), 0.0, 1.0, 0.0, 0.0, sqrt(1.0)))), 8023.5671, 2.3)) : mat4(1.0))), (_GLF_IDENTITY(mat4(1.0), (false ? _GLF_IDENTITY(_GLF_FUZZED(mat4(_GLF_IDENTITY(-471.848, (-471.848) + 0.0), -768.557, 1.6, 2.6, 79.73, 0.5, -95.68, 48.89, -447.584, -1.1, -8996.7835, -347.092, -9.6, -79.94, 8023.5671, 2.3)), _GLF_IDENTITY(mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, (0.0) * 1.0), 0.0, 0.0, 0.0, 0.0, 0.0) + (_GLF_FUZZED(mat4(_GLF_IDENTITY(-471.848, (-471.848) + 0.0), -768.557, 1.6, 2.6, 79.73, _GLF_IDENTITY(_GLF_IDENTITY(0.5, determinant(mat4(0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0)) + (_GLF_IDENTITY(0.5, 0.0 + (0.5)))), mix(float(_GLF_IDENTITY(0.5, determinant(mat4(0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0)) + (_GLF_IDENTITY(0.5, 0.0 + (0.5))))), float(_GLF_FUZZED(11.96)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), -95.68, 48.89, -447.584, -1.1, -8996.7835, -347.092, -9.6, -79.94, 8023.5671, 2.3))), (true ? _GLF_IDENTITY(mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, (0.0) * 1.0), 0.0, 0.0, 0.0, 0.0, 0.0) + (_GLF_FUZZED(mat4(_GLF_IDENTITY(-471.848, (-471.848) + 0.0), -768.557, 1.6, 2.6, 79.73, _GLF_IDENTITY(_GLF_IDENTITY(0.5, determinant(mat4(0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0)) + (_GLF_IDENTITY(0.5, 0.0 + (0.5)))), mix(float(_GLF_IDENTITY(0.5, determinant(mat4(0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0)) + (_GLF_IDENTITY(0.5, 0.0 + (0.5))))), float(_GLF_FUZZED(11.96)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), -95.68, 48.89, -447.584, -1.1, -8996.7835, -347.092, -9.6, -79.94, 8023.5671, 2.3))), mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0) + (mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, (0.0) * 1.0), 0.0, 0.0, 0.0, 0.0, 0.0) + (_GLF_FUZZED(mat4(_GLF_IDENTITY(_GLF_IDENTITY(-471.848, min(-471.848, _GLF_IDENTITY(-471.848, max(_GLF_IDENTITY(-471.848, max(-471.848, -471.848)), -471.848)))), (_GLF_IDENTITY(-471.848, (-471.848) - 0.0)) + 0.0), -768.557, 1.6, 2.6, 79.73, _GLF_IDENTITY(_GLF_IDENTITY(0.5, determinant(mat4(0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0)) + (_GLF_IDENTITY(0.5, 0.0 + (0.5)))), mix(float(_GLF_IDENTITY(0.5, determinant(mat4(0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0)) + (_GLF_IDENTITY(0.5, 0.0 + (0.5))))), float(_GLF_FUZZED(11.96)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), -95.68, 48.89, -447.584, -1.1, -8996.7835, -347.092, -9.6, -79.94, 8023.5671, 2.3))))) : _GLF_FUZZED(mat4(1.8, -75.02, 6.4, -34.31, -7313.4485, -7087.6244, -28.24, -9.8, 4308.9709, -8077.9609, -47.93, -5.0, 5.0, -96.78, 801.070, -6.1))))) : mat4(1.0)))) - mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, (_GLF_IDENTITY(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(true, ! (! (true)))), bool(bvec2(! (_GLF_IDENTITY(true, _GLF_IDENTITY(! (! (true)), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(! (! (true)), true), _GLF_IDENTITY(bvec2(bvec3(bvec2(! (! (true)), true), true)), bvec2(bvec4(bvec2(bvec3(bvec2(! (! (true)), true), true)), false, true))))), bool(bvec4(bool(_GLF_IDENTITY(bvec2(! (! (true)), true), _GLF_IDENTITY(bvec2(bvec3(bvec2(! (! (true)), true), true)), bvec2(bvec4(bvec2(bvec3(bvec2(! (! (true)), true), true)), false, true))))), true, false, false)))))), false))))), true && (true)) ? 0.0 : _GLF_FUZZED(-30.43))), 0.0, 0.0, 0.0, 0.0, 0.0))), mat4(1.0) * ((_GLF_IDENTITY(_GLF_IDENTITY(mat4(1.0), (_GLF_IDENTITY(false, ! (! (false))) ? _GLF_FUZZED(mat4(-471.848, -768.557, 1.6, 2.6, 79.73, 0.5, _GLF_IDENTITY(-95.68, mix(float(_GLF_FUZZED(4484.4925)), float(-95.68), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), 48.89, -447.584, -1.1, -8996.7835, -347.092, -9.6, _GLF_IDENTITY(-79.94, float(mat2x3(_GLF_IDENTITY(-79.94, 0.0 + (-79.94)), 0.0, 1.0, 0.0, 0.0, sqrt(1.0)))), 8023.5671, 2.3)) : mat4(1.0))), (_GLF_IDENTITY(mat4(1.0), (false ? _GLF_IDENTITY(_GLF_FUZZED(mat4(_GLF_IDENTITY(-471.848, (-471.848) + 0.0), -768.557, 1.6, 2.6, 79.73, 0.5, -95.68, 48.89, -447.584, -1.1, -8996.7835, -347.092, -9.6, -79.94, 8023.5671, 2.3)), _GLF_IDENTITY(mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, (0.0) * 1.0), 0.0, 0.0, 0.0, 0.0, 0.0) + (_GLF_FUZZED(mat4(_GLF_IDENTITY(-471.848, (-471.848) + 0.0), -768.557, 1.6, 2.6, 79.73, _GLF_IDENTITY(_GLF_IDENTITY(0.5, determinant(mat4(0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0)) + (_GLF_IDENTITY(0.5, 0.0 + (0.5)))), mix(float(_GLF_IDENTITY(0.5, determinant(mat4(0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0)) + (_GLF_IDENTITY(0.5, 0.0 + (0.5))))), float(_GLF_FUZZED(11.96)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), -95.68, 48.89, -447.584, -1.1, -8996.7835, -347.092, -9.6, -79.94, 8023.5671, 2.3))), (true ? _GLF_IDENTITY(mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, (0.0) * 1.0), 0.0, 0.0, 0.0, 0.0, 0.0) + (_GLF_FUZZED(mat4(_GLF_IDENTITY(-471.848, (-471.848) + 0.0), -768.557, 1.6, 2.6, 79.73, _GLF_IDENTITY(_GLF_IDENTITY(0.5, determinant(mat4(0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0)) + (_GLF_IDENTITY(0.5, 0.0 + (0.5)))), mix(float(_GLF_IDENTITY(0.5, determinant(mat4(0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0)) + (_GLF_IDENTITY(0.5, 0.0 + (0.5))))), float(_GLF_FUZZED(11.96)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), -95.68, 48.89, -447.584, -1.1, -8996.7835, -347.092, -9.6, -79.94, 8023.5671, 2.3))), mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0) + (mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, (0.0) * 1.0), 0.0, 0.0, 0.0, 0.0, 0.0) + (_GLF_FUZZED(mat4(_GLF_IDENTITY(_GLF_IDENTITY(-471.848, min(-471.848, _GLF_IDENTITY(-471.848, max(_GLF_IDENTITY(-471.848, max(-471.848, -471.848)), -471.848)))), (_GLF_IDENTITY(-471.848, (-471.848) - 0.0)) + 0.0), -768.557, 1.6, 2.6, 79.73, _GLF_IDENTITY(_GLF_IDENTITY(0.5, determinant(mat4(0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0)) + (_GLF_IDENTITY(0.5, 0.0 + (0.5)))), mix(float(_GLF_IDENTITY(0.5, determinant(mat4(0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0)) + (_GLF_IDENTITY(0.5, 0.0 + (0.5))))), float(_GLF_FUZZED(11.96)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), -95.68, 48.89, -447.584, -1.1, -8996.7835, -347.092, -9.6, -79.94, 8023.5671, 2.3))))) : _GLF_FUZZED(mat4(1.8, -75.02, 6.4, -34.31, -7313.4485, -7087.6244, -28.24, -9.8, 4308.9709, -8077.9609, -47.93, -5.0, 5.0, -96.78, 801.070, -6.1))))) : mat4(1.0)))) - mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, (_GLF_IDENTITY(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(true, ! (! (true)))), bool(bvec2(! (_GLF_IDENTITY(true, _GLF_IDENTITY(! (! (true)), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(! (! (true)), true), _GLF_IDENTITY(bvec2(bvec3(bvec2(! (! (true)), true), true)), bvec2(bvec4(bvec2(bvec3(bvec2(! (! (true)), true), true)), false, true))))), bool(bvec4(bool(_GLF_IDENTITY(bvec2(! (! (true)), true), _GLF_IDENTITY(bvec2(bvec3(bvec2(! (! (true)), true), true)), bvec2(bvec4(bvec2(bvec3(bvec2(! (! (true)), true), true)), false, true))))), true, false, false)))))), false))))), true && (true)) ? 0.0 : _GLF_FUZZED(-30.43))), 0.0, 0.0, 0.0, 0.0, 0.0))))) * mat4(1.0)))) : _GLF_FUZZED(mat4(-1844.9986, 997.575, 46.23, 3.4, 17.59, -21.21, 2.3, 86.03, -9089.3911, _GLF_IDENTITY(-6728.4896, mix(float(-6728.4896), float(_GLF_FUZZED(-9.2)), bool(false))), 54.38, 746.812, 883.875, 1874.0154, -183.032, 3792.1217))))), vec2(1.0), _GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(_GLF_IDENTITY(bitCount(min(167317u, subgroup_local_id)), (bitCount(min(167317u, subgroup_local_id))) - 0)))), _GLF_struct_1(uvec3(_GLF_IDENTITY(1u, min(1u, _GLF_IDENTITY(_GLF_IDENTITY(1u, clamp(1u, 1u, _GLF_IDENTITY(1u, 0u | (1u)))), 0u | (_GLF_IDENTITY(_GLF_IDENTITY(1u, clamp(1u, 1u, _GLF_IDENTITY(1u, 0u | (1u)))), (_GLF_IDENTITY(1u, clamp(1u, 1u, _GLF_IDENTITY(1u, 0u | (1u))))) * ((1u << _GLF_IDENTITY(uint(7u), uint(7u))) >> _GLF_IDENTITY(uint(7u), uint(7u)))))))))), mat2x4(_GLF_IDENTITY(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0))) - 0.0), clamp(_GLF_IDENTITY(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0))) - 0.0), 0.0 + (_GLF_IDENTITY(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0))) - 0.0), (_GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0))) - 0.0)) + 0.0))), _GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0))) - 0.0), _GLF_IDENTITY(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0))) - 0.0), min(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0))) - 0.0), _GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0))) - 0.0)))))), _GLF_struct_2(bvec3(true), vec4(1.0), true, true, ivec4(1), bvec3(true), mat2x3(1.0)), _GLF_struct_3(mat4x3(1.0), mat4x2(1.0), uvec2(1u))), _GLF_struct_9(_GLF_struct_5(uvec2(1u)), _GLF_struct_6(1.0, mat3x2(_GLF_IDENTITY(_GLF_IDENTITY(1.0, max(1.0, _GLF_IDENTITY(1.0, clamp(1.0, 1.0, _GLF_IDENTITY(1.0, (1.0) + 0.0))))), (true ? _GLF_IDENTITY(1.0, max(1.0, _GLF_IDENTITY(1.0, clamp(1.0, 1.0, _GLF_IDENTITY(1.0, (1.0) + _GLF_IDENTITY(0.0, (0.0) / 1.0)))))) : _GLF_IDENTITY(_GLF_FUZZED(float(false)), clamp(_GLF_FUZZED(float(false)), _GLF_FUZZED(float(false)), _GLF_IDENTITY(_GLF_FUZZED(float(false)), float(mat4(_GLF_FUZZED(float(false)), 1.0, 1.0, 1.0, 0.0, 0.0, sqrt(1.0), _GLF_ONE(1.0, injectionSwitch.y), 1.0, 1.0, 0.0, 0.0, 0.0, abs(1.0), 1.0, 1.0)))))))), true, vec2(1.0)), _GLF_struct_7(mat3(1.0), mat2x3(1.0), uvec3(1u)), _GLF_struct_8(mat2x4(1.0), mat4x3(_GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), 1.0))), _GLF_IDENTITY(bvec2(true), bvec2(bvec4(_GLF_IDENTITY(bvec2(true), bvec2(bvec2(bvec2(true)))), true, false)))), 1u), _GLF_struct_11(bvec4(true), _GLF_struct_10(ivec4(_GLF_IDENTITY(1, 0 ^ (1))), ivec2(1), 1u, mat2x3(1.0)), ivec2(1), uvec3(1u)), _GLF_struct_15(ivec2(1), _GLF_struct_12(bvec2(_GLF_IDENTITY(true, bool(bvec2(true, false)))), mat4x2(_GLF_IDENTITY(1.0, min(1.0, 1.0))), mat2x4(1.0), 1, 1u, 1, bvec4(true)), _GLF_struct_13(vec3(1.0), true, mat3(1.0)), _GLF_struct_14(1, uvec3(1u), _GLF_IDENTITY(1u, _GLF_IDENTITY(uint(uvec3(1u, 1u, 1u)), min(uint(uvec3(1u, _GLF_IDENTITY(1u, 0u | (1u)), _GLF_IDENTITY(1u, (1u) | (1u)))), uint(uvec3(1u, _GLF_IDENTITY(1u, max(1u, _GLF_IDENTITY(1u, (1u) | (1u)))), 1u))))), mat4(1.0), vec2(1.0), mat2x4(1.0), workgroup_base + _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(subgroup_id, (subgroup_id) * 1u)) | (subgroup_id)) * subgroup_size, max(_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY((_GLF_IDENTITY(subgroup_id, (subgroup_id) * 1u)), 0u + ((_GLF_IDENTITY(subgroup_id, (subgroup_id) * 1u)))) | (subgroup_id)) * subgroup_size, _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(subgroup_id, (subgroup_id) * 1u)) | (subgroup_id)) * subgroup_size, (_GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(subgroup_id, (subgroup_id) * 1u)) | (subgroup_id)) * subgroup_size) - 0u))) + ((subgroup_local_id + 1) % subgroup_size))));
 if(_GLF_DEAD(false))
  return;
 if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - abs(_GLF_IDENTITY(tan(0.0), float(mat4(tan(0.0), 0.0, exp(0.0), 0.0, 1.0, sqrt(1.0), 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, exp(0.0), round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), 1.0, 0.0)))))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   do
    {
     if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, (true) || false)))
      {
       do
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
           if(_GLF_DEAD(false))
            barrier();
           return;
          }
        }
       while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)))), injectionSwitch.y))))));
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         barrier();
        }
      }
     else
      {
      }
     if(_GLF_DEAD(false))
      barrier();
    }
   while(_GLF_WRAPPED_LOOP(false));
  }
 else
  {
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, true, false, true)), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(bool(bvec4(false, true, false, true)), ! (! (bool(bvec4(false, true, false, true))))), true)), bool(bvec4(_GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(bool(bvec4(false, true, false, true)), ! (! (bool(bvec4(false, true, false, true))))), true)), bool(bvec4(bool(bvec2(_GLF_IDENTITY(bool(bvec4(false, true, false, true)), ! (! (bool(bvec4(false, true, false, true))))), true)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, false))), false, false, true))))), (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, false, false, false)), false || (bool(bvec4(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec4(bvec2(false, true), false, true))))), false))), false, false, _GLF_IDENTITY(false, ! (! (false))))))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))
  {
   if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
    {
     barrier();
    }
   else
    {
    }
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))
    return;
  }
 uint read_1 = atomicLoad(buf[virtual_gid], _GLF_IDENTITY(4, (_GLF_IDENTITY(4, (false ? _GLF_FUZZED(-14487) : _GLF_IDENTITY(4, _GLF_IDENTITY(clamp(_GLF_IDENTITY(4, (true ? _GLF_IDENTITY(4, int(ivec2(4, 1))) : _GLF_FUZZED(ivec3(82650, 75461, -68745)[1]))), 4, 4), min(_GLF_IDENTITY(clamp(4, 4, 4), 0 | (clamp(4, 4, 4))), clamp(4, 4, 4))))))) / ((1 << _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(int(_GLF_IDENTITY(3, min(3, _GLF_IDENTITY(3, (3) >> _GLF_IDENTITY(0, ~ (~ (0))))))), int(ivec3(int(_GLF_IDENTITY(3, min(3, _GLF_IDENTITY(3, (3) >> _GLF_IDENTITY(0, ~ (~ (0))))))), int(_GLF_ZERO(0.0, injectionSwitch.x)), 0))), (_GLF_IDENTITY(_GLF_IDENTITY(int(_GLF_IDENTITY(3, min(3, _GLF_IDENTITY(3, (3) >> _GLF_IDENTITY(0, ~ (~ (0))))))), int(ivec3(int(_GLF_IDENTITY(3, min(3, _GLF_IDENTITY(3, (3) >> _GLF_IDENTITY(0, ~ (~ (0))))))), int(_GLF_ZERO(0.0, injectionSwitch.x)), 0))), (_GLF_IDENTITY(int(_GLF_IDENTITY(3, min(3, _GLF_IDENTITY(3, (3) >> _GLF_IDENTITY(0, ~ (~ (0))))))), int(ivec3(int(_GLF_IDENTITY(3, min(3, _GLF_IDENTITY(3, (3) >> _GLF_IDENTITY(0, ~ (~ (0))))))), int(_GLF_ZERO(0.0, injectionSwitch.x)), 0)))) + 0)) | (1 ^ 1)), int(3))) >> _GLF_IDENTITY(int(3), _GLF_IDENTITY(_GLF_IDENTITY(int(3), (int(3)) - 0), max(int(3), int(3)))))), 64, 0);
 do
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      break;
     barrier();
     if(_GLF_DEAD(false))
      continue;
     if(_GLF_DEAD(false))
      return;
     do
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     while(_GLF_WRAPPED_LOOP(false));
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bool(injectionSwitch.x > injectionSwitch.y)), (bool(bool(injectionSwitch.x > injectionSwitch.y))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))
      barrier();
    }
   atomicStore(buf[_GLF_struct_replacement_16._f5._f3.next_virtual_gid], uint(read_1 + 1), _GLF_IDENTITY(4, (4) >> 0), 64, 4);
  }
 while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y)), injectionSwitch.y)))) && true))));
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint read_2 = atomicLoad(buf[virtual_gid], 4, 64, 0);
 do
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false)))))
    continue;
   atomicStore(buf[_GLF_struct_replacement_16._f5._f3.next_virtual_gid], uint(_GLF_IDENTITY(read_1, _GLF_IDENTITY(clamp(read_1, read_1, _GLF_IDENTITY(read_1, _GLF_IDENTITY(clamp(read_1, read_1, read_1), (clamp(read_1, read_1, read_1)) >> (0u | 0u)))), clamp(clamp(read_1, read_1, _GLF_IDENTITY(read_1, _GLF_IDENTITY(clamp(read_1, read_1, read_1), (clamp(read_1, read_1, read_1)) >> (0u | 0u)))), _GLF_IDENTITY(clamp(read_1, read_1, _GLF_IDENTITY(read_1, _GLF_IDENTITY(clamp(read_1, read_1, read_1), (clamp(read_1, read_1, read_1)) >> (0u | 0u)))), 1u * (clamp(read_1, read_1, _GLF_IDENTITY(read_1, _GLF_IDENTITY(clamp(read_1, read_1, read_1), (clamp(read_1, read_1, read_1)) >> (0u | 0u)))))), clamp(read_1, read_1, _GLF_IDENTITY(read_1, _GLF_IDENTITY(clamp(read_1, read_1, read_1), (clamp(read_1, read_1, read_1)) >> (0u | 0u))))))) + 1 == read_2) + 1, _GLF_IDENTITY(_GLF_IDENTITY(4, (4) - 0), min(_GLF_IDENTITY(4, (4) - 0), _GLF_IDENTITY(_GLF_IDENTITY(4, (4) - 0), min(_GLF_IDENTITY(4, (4) - 0), _GLF_IDENTITY(4, (4) - 0))))), 64, _GLF_IDENTITY(4, 0 ^ (4)));
  }
 while(_GLF_WRAPPED_LOOP(false));
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, vec2(mat4x2(injectionSwitch, 1.0, 1.0, 1.0, 1.0, sin(0.0), 1.0))), injectionSwitch)).x > injectionSwitch.y))))
  {
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
    }
   else
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))).x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    return;
  }
 do
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, (false) && true)))
      {
      }
     else
      {
       if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false)), (injectionSwitch.x > injectionSwitch.y))))
        return;
       barrier();
      }
    }
   do
    {
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
      }
     else
      {
       if(_GLF_WRAPPED_IF_TRUE(true))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            return;
           if(_GLF_WRAPPED_IF_TRUE(true))
            {
             return;
            }
           else
            {
            }
           if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x > injectionSwitch.y))))
            break;
          }
         for(int _injected_loop_counter = (0 | (0 | 0)); _GLF_WRAPPED_LOOP(_injected_loop_counter < ((1 << _GLF_IDENTITY(int(4), _GLF_IDENTITY(int(4), 0 | (int(4))))) >> _GLF_IDENTITY(int(4), int(4)))); _injected_loop_counter ++)
          {
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(false))
              return;
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              {
               do
                {
                 if(_GLF_DEAD(false))
                  barrier();
                 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                  return;
                }
               while(_GLF_WRAPPED_LOOP(false));
               if(_GLF_DEAD(false))
                return;
               if(_GLF_DEAD(false))
                barrier();
               if(_GLF_DEAD(false))
                barrier();
               if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, true && (false))), false || (! (_GLF_IDENTITY(false, true && (false)))))))), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_DEAD(false), true, false))))))))))
                {
                 do
                  {
                   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, ! (! (false)))))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y))))
                    return;
                   if(_GLF_DEAD(false))
                    barrier();
                   if(_GLF_DEAD(false))
                    continue;
                   do
                    {
                     return;
                    }
                   while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
                  }
                 while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
                }
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                return;
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                barrier();
               barrier();
              }
             if(_GLF_DEAD(false))
              continue;
             return;
            }
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(false))
              barrier();
             if(_GLF_DEAD(false))
              continue;
             barrier();
            }
           if(_GLF_DEAD(false))
            continue;
          }
         if(_GLF_DEAD(false))
          return;
         if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))
          barrier();
        }
       else
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          break;
        }
      }
     if(_GLF_DEAD(false))
      barrier();
    }
   while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch))) / vec2(1.0, 1.0)).x > injectionSwitch.y))));
   if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
    }
   else
    {
    }
   if(_GLF_DEAD(false))
    continue;
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(injectionSwitch.x > injectionSwitch.y, true))), true, true, false)))))))
    barrier();
  }
 while(_GLF_WRAPPED_LOOP(false));
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_WRAPPED_IF_TRUE(true))
  {
   do
    {
     if(_GLF_DEAD(false))
      barrier();
    }
   while(_GLF_WRAPPED_LOOP(false));
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
    }
   else
    {
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)), false || (_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY((false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY((false), ! (! ((false)))))) && true)))))
      return;
    }
  }
 else
  {
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
    }
   else
    {
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, float(mat2x4(injectionSwitch.x, 1.0, tan(0.0), 1.0, 0.0, abs(1.0), length(0.0), 0.0))))) > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(_GLF_IDENTITY(mat3(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), exp(length(vec3(0.0, 0.0, 0.0))), abs(1.0), 0.0, 1.0, 0.0, sqrt(1.0), 1.0), mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0) + (mat3(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), exp(length(vec3(0.0, 0.0, 0.0))), abs(1.0), 0.0, 1.0, 0.0, sqrt(1.0), 1.0)))), (vec2(_GLF_IDENTITY(mat3(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), exp(length(vec3(0.0, 0.0, 0.0))), abs(1.0), 0.0, 1.0, 0.0, sqrt(1.0), 1.0), mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, min(0.0, 0.0))) + (mat3(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), exp(length(vec3(0.0, 0.0, 0.0))), abs(1.0), _GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(float(-98422))), bool(false)))) / 1.0), 1.0, 0.0, sqrt(1.0), 1.0))))) - vec2(0.0, 0.0))).x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED((false ? 2.2 : -4291.8569)), _GLF_FUZZED((7.4))), vec2((injectionSwitch)[0], (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)))[1]), bvec2(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), (_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))))) || false), true))).x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(mat2x4(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(_GLF_IDENTITY(mat2x3(injectionSwitch, 1.0, length(vec3(0.0, 0.0, 0.0)), _GLF_IDENTITY(dot(vec2(1.0, 1.0), vec2(0.0, 0.0)), dot(vec2(1.0, 1.0), vec2(0.0, 0.0))), 0.0), (true ? mat2x3(injectionSwitch, 1.0, length(vec3(0.0, 0.0, 0.0)), _GLF_IDENTITY(dot(vec2(1.0, 1.0), vec2(0.0, 0.0)), dot(_GLF_IDENTITY(vec2(1.0, 1.0), _GLF_IDENTITY(mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (vec2(1.0, 1.0)), clamp(mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (vec2(1.0, 1.0)), mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (vec2(1.0, 1.0)), mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (vec2(1.0, 1.0))))), vec2(0.0, 0.0))), 0.0) : _GLF_FUZZED(mat2x3(7.7, -8117.7233, 3966.4429, _GLF_IDENTITY(74.45, (false ? _GLF_FUZZED(2905.8588) : 74.45)), 5.2, -9.0))))), mix(vec2((vec2(_GLF_IDENTITY(mat2x3(injectionSwitch, 1.0, length(vec3(0.0, 0.0, 0.0)), _GLF_IDENTITY(dot(vec2(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), 1.0), vec2(0.0, 0.0)), dot(vec2(1.0, 1.0), vec2(0.0, 0.0))), 0.0), (true ? mat2x3(injectionSwitch, 1.0, length(vec3(0.0, 0.0, 0.0)), _GLF_IDENTITY(dot(vec2(1.0, 1.0), vec2(0.0, 0.0)), dot(vec2(1.0, 1.0), vec2(0.0, 0.0))), _GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0))) : _GLF_FUZZED(mat2x3(7.7, _GLF_IDENTITY(-8117.7233, (false ? _GLF_FUZZED(-0.4) : _GLF_IDENTITY(-8117.7233, (-8117.7233) / 1.0))), 3966.4429, 74.45, 5.2, -9.0))))))[0], (vec2(_GLF_IDENTITY(mat2x3(injectionSwitch, 1.0, length(_GLF_IDENTITY(vec3(0.0, 0.0, 0.0), clamp(_GLF_IDENTITY(vec3(0.0, 0.0, 0.0), vec3(vec3(_GLF_IDENTITY(vec3(0.0, 0.0, 0.0), vec3(mat4x2(vec3(0.0, 0.0, 0.0), 1.0, 0.0, 1.0, 1.0, 0.0)))))), vec3(0.0, 0.0, 0.0), vec3(0.0, 0.0, 0.0)))), _GLF_IDENTITY(dot(vec2(1.0, 1.0), vec2(0.0, 0.0)), dot(vec2(1.0, 1.0), vec2(0.0, 0.0))), 0.0), (true ? mat2x3(injectionSwitch, 1.0, length(vec3(0.0, 0.0, 0.0)), _GLF_IDENTITY(dot(vec2(1.0, 1.0), vec2(0.0, 0.0)), dot(vec2(1.0, 1.0), vec2(0.0, 0.0))), 0.0) : _GLF_FUZZED(mat2x3(7.7, -8117.7233, 3966.4429, 74.45, 5.2, -9.0))))))[1]), vec2(_GLF_FUZZED(9.3), _GLF_FUZZED(2.4)), bvec2(false, false)))), 1.0, 1.0, 0.0, 0.0, 0.0, 0.0))).y, max(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat2x4(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(_GLF_IDENTITY(mat2x3(injectionSwitch, 1.0, length(vec3(0.0, 0.0, _GLF_IDENTITY(0.0, max(0.0, _GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, (0.0) + 0.0)) + 0.0))))), _GLF_IDENTITY(dot(vec2(1.0, 1.0), vec2(0.0, 0.0)), dot(vec2(1.0, 1.0), vec2(0.0, 0.0))), 0.0), (true ? mat2x3(injectionSwitch, 1.0, length(vec3(0.0, 0.0, 0.0)), _GLF_IDENTITY(dot(vec2(1.0, 1.0), vec2(0.0, 0.0)), dot(vec2(1.0, 1.0), vec2(0.0, 0.0))), 0.0) : _GLF_FUZZED(mat2x3(7.7, -8117.7233, 3966.4429, 74.45, 5.2, -9.0))))), mix(vec2((vec2(_GLF_IDENTITY(mat2x3(injectionSwitch, 1.0, length(vec3(0.0, 0.0, 0.0)), _GLF_IDENTITY(dot(vec2(1.0, 1.0), vec2(0.0, 0.0)), _GLF_IDENTITY(dot(vec2(1.0, 1.0), vec2(0.0, 0.0)), (false ? _GLF_FUZZED(faceforward(-7.0, 5.1, -95.00)) : dot(vec2(1.0, 1.0), vec2(0.0, 0.0))))), 0.0), (true ? mat2x3(injectionSwitch, 1.0, length(vec3(0.0, 0.0, 0.0)), _GLF_IDENTITY(dot(vec2(1.0, 1.0), vec2(0.0, 0.0)), dot(vec2(1.0, 1.0), vec2(0.0, 0.0))), 0.0) : _GLF_FUZZED(mat2x3(7.7, -8117.7233, 3966.4429, 74.45, 5.2, -9.0))))))[0], (vec2(_GLF_IDENTITY(mat2x3(injectionSwitch, 1.0, length(vec3(0.0, 0.0, 0.0)), _GLF_IDENTITY(dot(vec2(1.0, 1.0), vec2(0.0, 0.0)), dot(vec2(1.0, 1.0), vec2(0.0, 0.0))), 0.0), (true ? mat2x3(injectionSwitch, 1.0, length(vec3(0.0, 0.0, 0.0)), _GLF_IDENTITY(dot(vec2(1.0, 1.0), vec2(0.0, 0.0)), dot(vec2(1.0, 1.0), vec2(0.0, 0.0))), 0.0) : _GLF_FUZZED(mat2x3(7.7, -8117.7233, 3966.4429, 74.45, 5.2, -9.0))))))[1]), vec2(_GLF_FUZZED(9.3), _GLF_FUZZED(2.4)), bvec2(false, false)))), 1.0, 1.0, 0.0, 0.0, 0.0, 0.0)), min(_GLF_IDENTITY(vec2(mat2x4(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(_GLF_IDENTITY(mat2x3(injectionSwitch, 1.0, length(vec3(0.0, 0.0, _GLF_IDENTITY(0.0, max(0.0, _GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, (0.0) + 0.0)) + 0.0))))), _GLF_IDENTITY(dot(vec2(1.0, 1.0), vec2(0.0, 0.0)), dot(vec2(1.0, 1.0), vec2(0.0, 0.0))), 0.0), (true ? mat2x3(injectionSwitch, 1.0, length(vec3(0.0, 0.0, 0.0)), _GLF_IDENTITY(dot(vec2(1.0, 1.0), vec2(0.0, 0.0)), dot(vec2(1.0, 1.0), vec2(0.0, 0.0))), 0.0) : _GLF_FUZZED(mat2x3(7.7, -8117.7233, 3966.4429, 74.45, 5.2, -9.0))))), mix(vec2((vec2(_GLF_IDENTITY(mat2x3(injectionSwitch, 1.0, length(vec3(0.0, 0.0, 0.0)), _GLF_IDENTITY(dot(vec2(1.0, 1.0), vec2(0.0, 0.0)), _GLF_IDENTITY(dot(vec2(1.0, 1.0), vec2(0.0, 0.0)), (false ? _GLF_FUZZED(faceforward(-7.0, 5.1, -95.00)) : dot(vec2(1.0, 1.0), vec2(0.0, 0.0))))), 0.0), (true ? mat2x3(injectionSwitch, 1.0, length(vec3(0.0, 0.0, 0.0)), _GLF_IDENTITY(dot(vec2(1.0, 1.0), vec2(0.0, 0.0)), dot(vec2(1.0, 1.0), vec2(0.0, 0.0))), 0.0) : _GLF_FUZZED(mat2x3(7.7, -8117.7233, 3966.4429, 74.45, 5.2, -9.0))))))[0], (vec2(_GLF_IDENTITY(mat2x3(injectionSwitch, 1.0, length(vec3(0.0, 0.0, 0.0)), _GLF_IDENTITY(dot(vec2(1.0, 1.0), vec2(0.0, 0.0)), dot(vec2(1.0, 1.0), vec2(0.0, 0.0))), 0.0), (true ? mat2x3(injectionSwitch, 1.0, length(vec3(0.0, 0.0, 0.0)), _GLF_IDENTITY(dot(vec2(1.0, 1.0), vec2(0.0, 0.0)), dot(vec2(1.0, 1.0), vec2(0.0, 0.0))), 0.0) : _GLF_FUZZED(mat2x3(7.7, -8117.7233, 3966.4429, 74.45, 5.2, -9.0))))))[1]), vec2(_GLF_FUZZED(9.3), _GLF_FUZZED(2.4)), bvec2(false, false)))), 1.0, 1.0, 0.0, 0.0, 0.0, 0.0)), vec2(0.0, 0.0) + (vec2(mat2x4(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(_GLF_IDENTITY(mat2x3(injectionSwitch, 1.0, length(vec3(0.0, 0.0, _GLF_IDENTITY(0.0, max(0.0, _GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, (0.0) + 0.0)) + 0.0))))), _GLF_IDENTITY(dot(vec2(1.0, 1.0), vec2(0.0, 0.0)), dot(vec2(1.0, 1.0), vec2(0.0, 0.0))), 0.0), (true ? mat2x3(injectionSwitch, 1.0, length(vec3(0.0, 0.0, 0.0)), _GLF_IDENTITY(dot(vec2(1.0, 1.0), vec2(0.0, 0.0)), dot(vec2(1.0, 1.0), vec2(0.0, 0.0))), 0.0) : _GLF_FUZZED(mat2x3(7.7, -8117.7233, 3966.4429, 74.45, 5.2, -9.0))))), mix(vec2((vec2(_GLF_IDENTITY(mat2x3(injectionSwitch, 1.0, length(vec3(0.0, 0.0, 0.0)), _GLF_IDENTITY(dot(vec2(1.0, 1.0), vec2(0.0, 0.0)), _GLF_IDENTITY(dot(vec2(1.0, 1.0), vec2(0.0, 0.0)), (false ? _GLF_FUZZED(faceforward(-7.0, 5.1, -95.00)) : dot(vec2(1.0, 1.0), vec2(0.0, 0.0))))), 0.0), (true ? mat2x3(injectionSwitch, 1.0, length(vec3(0.0, 0.0, 0.0)), _GLF_IDENTITY(dot(vec2(1.0, 1.0), vec2(0.0, 0.0)), dot(vec2(1.0, 1.0), vec2(0.0, 0.0))), 0.0) : _GLF_FUZZED(mat2x3(7.7, -8117.7233, 3966.4429, 74.45, 5.2, -9.0))))))[0], (vec2(_GLF_IDENTITY(mat2x3(injectionSwitch, 1.0, length(vec3(0.0, 0.0, 0.0)), _GLF_IDENTITY(dot(vec2(1.0, 1.0), vec2(0.0, 0.0)), dot(vec2(1.0, 1.0), vec2(0.0, 0.0))), 0.0), (true ? mat2x3(injectionSwitch, 1.0, length(vec3(0.0, 0.0, 0.0)), _GLF_IDENTITY(dot(vec2(1.0, 1.0), vec2(0.0, 0.0)), dot(vec2(1.0, 1.0), vec2(0.0, 0.0))), 0.0) : _GLF_FUZZED(mat2x3(7.7, -8117.7233, 3966.4429, 74.45, 5.2, -9.0))))))[1]), vec2(_GLF_FUZZED(9.3), _GLF_FUZZED(2.4)), bvec2(false, false)))), 1.0, 1.0, 0.0, 0.0, 0.0, 0.0)))), _GLF_IDENTITY(vec2(mat2x4(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(_GLF_IDENTITY(mat2x3(injectionSwitch, 1.0, length(vec3(0.0, 0.0, _GLF_IDENTITY(0.0, max(0.0, _GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, (0.0) + 0.0)) + 0.0))))), _GLF_IDENTITY(dot(vec2(1.0, 1.0), vec2(0.0, 0.0)), dot(vec2(1.0, 1.0), vec2(0.0, 0.0))), 0.0), (true ? mat2x3(injectionSwitch, 1.0, length(vec3(0.0, 0.0, 0.0)), _GLF_IDENTITY(dot(vec2(1.0, 1.0), vec2(0.0, 0.0)), dot(vec2(1.0, 1.0), vec2(0.0, 0.0))), 0.0) : _GLF_FUZZED(mat2x3(7.7, -8117.7233, 3966.4429, 74.45, 5.2, -9.0))))), mix(vec2((vec2(_GLF_IDENTITY(mat2x3(injectionSwitch, 1.0, length(vec3(0.0, 0.0, 0.0)), _GLF_IDENTITY(dot(vec2(1.0, 1.0), vec2(0.0, 0.0)), _GLF_IDENTITY(dot(vec2(1.0, 1.0), vec2(0.0, 0.0)), (false ? _GLF_FUZZED(faceforward(-7.0, 5.1, -95.00)) : dot(vec2(1.0, 1.0), vec2(0.0, 0.0))))), 0.0), (true ? mat2x3(injectionSwitch, 1.0, length(vec3(0.0, 0.0, 0.0)), _GLF_IDENTITY(dot(vec2(1.0, 1.0), vec2(0.0, 0.0)), dot(vec2(1.0, 1.0), vec2(0.0, 0.0))), 0.0) : _GLF_FUZZED(mat2x3(7.7, -8117.7233, 3966.4429, 74.45, 5.2, -9.0))))))[0], (vec2(_GLF_IDENTITY(mat2x3(injectionSwitch, 1.0, length(vec3(0.0, 0.0, 0.0)), _GLF_IDENTITY(dot(vec2(1.0, 1.0), vec2(0.0, 0.0)), dot(vec2(1.0, 1.0), vec2(0.0, 0.0))), 0.0), (true ? mat2x3(injectionSwitch, 1.0, length(vec3(0.0, 0.0, 0.0)), _GLF_IDENTITY(dot(vec2(1.0, 1.0), vec2(0.0, 0.0)), dot(vec2(1.0, 1.0), vec2(0.0, 0.0))), 0.0) : _GLF_FUZZED(mat2x3(7.7, -8117.7233, 3966.4429, 74.45, 5.2, -9.0))))))[1]), vec2(_GLF_FUZZED(9.3), _GLF_FUZZED(2.4)), bvec2(false, false)))), 1.0, 1.0, 0.0, 0.0, 0.0, 0.0)), (true ? _GLF_IDENTITY(vec2(mat2x4(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(_GLF_IDENTITY(mat2x3(injectionSwitch, 1.0, length(vec3(0.0, 0.0, _GLF_IDENTITY(0.0, max(0.0, _GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, (0.0) + 0.0)) + 0.0))))), _GLF_IDENTITY(dot(vec2(1.0, 1.0), vec2(0.0, 0.0)), dot(vec2(1.0, 1.0), vec2(0.0, 0.0))), 0.0), (true ? mat2x3(injectionSwitch, 1.0, length(vec3(0.0, 0.0, 0.0)), _GLF_IDENTITY(dot(vec2(1.0, 1.0), vec2(0.0, 0.0)), dot(vec2(1.0, 1.0), vec2(0.0, 0.0))), 0.0) : _GLF_FUZZED(mat2x3(7.7, -8117.7233, 3966.4429, 74.45, 5.2, -9.0))))), mix(vec2((vec2(_GLF_IDENTITY(mat2x3(injectionSwitch, 1.0, length(vec3(0.0, 0.0, 0.0)), _GLF_IDENTITY(dot(vec2(1.0, 1.0), vec2(0.0, 0.0)), _GLF_IDENTITY(dot(vec2(1.0, 1.0), vec2(0.0, 0.0)), (false ? _GLF_FUZZED(faceforward(-7.0, 5.1, -95.00)) : dot(vec2(1.0, 1.0), vec2(0.0, 0.0))))), 0.0), (true ? mat2x3(injectionSwitch, 1.0, length(vec3(0.0, 0.0, 0.0)), _GLF_IDENTITY(dot(vec2(1.0, 1.0), vec2(0.0, 0.0)), dot(vec2(1.0, 1.0), vec2(0.0, 0.0))), 0.0) : _GLF_FUZZED(mat2x3(7.7, -8117.7233, 3966.4429, 74.45, 5.2, -9.0))))))[0], (vec2(_GLF_IDENTITY(mat2x3(injectionSwitch, 1.0, length(vec3(0.0, 0.0, 0.0)), _GLF_IDENTITY(dot(vec2(1.0, 1.0), vec2(0.0, 0.0)), dot(vec2(1.0, 1.0), vec2(0.0, 0.0))), 0.0), (true ? mat2x3(injectionSwitch, 1.0, length(vec3(0.0, 0.0, 0.0)), _GLF_IDENTITY(dot(vec2(1.0, 1.0), vec2(0.0, 0.0)), dot(vec2(1.0, 1.0), vec2(0.0, 0.0))), 0.0) : _GLF_FUZZED(mat2x3(7.7, -8117.7233, 3966.4429, 74.45, 5.2, -9.0))))))[1]), vec2(_GLF_FUZZED(9.3), _GLF_FUZZED(2.4)), bvec2(false, false)))), 1.0, 1.0, 0.0, 0.0, 0.0, 0.0)), min(vec2(mat2x4(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(_GLF_IDENTITY(mat2x3(injectionSwitch, 1.0, length(vec3(0.0, 0.0, _GLF_IDENTITY(0.0, max(0.0, _GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, (0.0) + 0.0)) + 0.0))))), _GLF_IDENTITY(dot(vec2(1.0, 1.0), vec2(0.0, 0.0)), dot(vec2(1.0, 1.0), vec2(0.0, 0.0))), 0.0), (true ? mat2x3(injectionSwitch, 1.0, length(vec3(0.0, 0.0, 0.0)), _GLF_IDENTITY(dot(vec2(1.0, 1.0), vec2(0.0, 0.0)), dot(vec2(1.0, 1.0), vec2(0.0, 0.0))), 0.0) : _GLF_FUZZED(mat2x3(7.7, -8117.7233, 3966.4429, 74.45, 5.2, -9.0))))), mix(vec2((vec2(_GLF_IDENTITY(mat2x3(injectionSwitch, 1.0, length(vec3(0.0, 0.0, 0.0)), _GLF_IDENTITY(dot(vec2(1.0, 1.0), vec2(0.0, 0.0)), _GLF_IDENTITY(dot(vec2(1.0, 1.0), vec2(0.0, 0.0)), (false ? _GLF_FUZZED(faceforward(-7.0, 5.1, -95.00)) : dot(vec2(1.0, 1.0), vec2(0.0, 0.0))))), 0.0), (true ? mat2x3(injectionSwitch, 1.0, length(vec3(0.0, 0.0, 0.0)), _GLF_IDENTITY(dot(vec2(1.0, 1.0), vec2(0.0, 0.0)), dot(vec2(1.0, 1.0), vec2(0.0, 0.0))), 0.0) : _GLF_FUZZED(mat2x3(7.7, -8117.7233, 3966.4429, 74.45, 5.2, -9.0))))))[0], (vec2(_GLF_IDENTITY(mat2x3(injectionSwitch, 1.0, length(vec3(0.0, 0.0, 0.0)), _GLF_IDENTITY(dot(vec2(1.0, 1.0), vec2(0.0, 0.0)), dot(vec2(1.0, 1.0), vec2(0.0, 0.0))), 0.0), (true ? mat2x3(injectionSwitch, 1.0, length(vec3(0.0, 0.0, 0.0)), _GLF_IDENTITY(dot(vec2(1.0, 1.0), vec2(0.0, 0.0)), dot(vec2(1.0, 1.0), vec2(0.0, 0.0))), 0.0) : _GLF_FUZZED(mat2x3(7.7, -8117.7233, 3966.4429, 74.45, 5.2, -9.0))))))[1]), vec2(_GLF_FUZZED(9.3), _GLF_FUZZED(2.4)), bvec2(false, false)))), 1.0, 1.0, 0.0, 0.0, 0.0, 0.0)), vec2(mat2x4(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(_GLF_IDENTITY(mat2x3(injectionSwitch, 1.0, length(vec3(0.0, 0.0, _GLF_IDENTITY(0.0, max(0.0, _GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, (0.0) + 0.0)) + 0.0))))), _GLF_IDENTITY(dot(vec2(1.0, 1.0), vec2(0.0, 0.0)), dot(vec2(1.0, 1.0), vec2(0.0, 0.0))), 0.0), (true ? mat2x3(injectionSwitch, 1.0, length(vec3(0.0, 0.0, 0.0)), _GLF_IDENTITY(dot(vec2(1.0, 1.0), vec2(0.0, 0.0)), dot(vec2(1.0, 1.0), vec2(0.0, 0.0))), 0.0) : _GLF_FUZZED(mat2x3(7.7, -8117.7233, 3966.4429, 74.45, 5.2, -9.0))))), mix(vec2((vec2(_GLF_IDENTITY(mat2x3(injectionSwitch, 1.0, length(vec3(0.0, 0.0, 0.0)), _GLF_IDENTITY(dot(vec2(1.0, 1.0), vec2(0.0, 0.0)), _GLF_IDENTITY(dot(vec2(1.0, 1.0), vec2(0.0, 0.0)), (false ? _GLF_FUZZED(faceforward(-7.0, 5.1, -95.00)) : dot(vec2(1.0, 1.0), vec2(0.0, 0.0))))), 0.0), (true ? mat2x3(injectionSwitch, 1.0, length(vec3(0.0, 0.0, 0.0)), _GLF_IDENTITY(dot(vec2(1.0, 1.0), vec2(0.0, 0.0)), dot(vec2(1.0, 1.0), vec2(0.0, 0.0))), 0.0) : _GLF_FUZZED(mat2x3(7.7, -8117.7233, 3966.4429, 74.45, 5.2, -9.0))))))[0], (vec2(_GLF_IDENTITY(mat2x3(injectionSwitch, 1.0, length(vec3(0.0, 0.0, 0.0)), _GLF_IDENTITY(dot(vec2(1.0, 1.0), vec2(0.0, 0.0)), dot(vec2(1.0, 1.0), vec2(0.0, 0.0))), 0.0), (true ? mat2x3(injectionSwitch, 1.0, length(vec3(0.0, 0.0, 0.0)), _GLF_IDENTITY(dot(vec2(1.0, 1.0), vec2(0.0, 0.0)), dot(vec2(1.0, 1.0), vec2(0.0, 0.0))), 0.0) : _GLF_FUZZED(mat2x3(7.7, -8117.7233, 3966.4429, 74.45, 5.2, -9.0))))))[1]), vec2(_GLF_FUZZED(9.3), _GLF_FUZZED(2.4)), bvec2(false, false)))), 1.0, 1.0, 0.0, 0.0, 0.0, 0.0)))) : _GLF_FUZZED(vec2(-1753.0664, -71.96))))))).y, _GLF_IDENTITY(injectionSwitch, vec2(mat2x4(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(_GLF_IDENTITY(mat2x3(injectionSwitch, 1.0, length(vec3(0.0, 0.0, 0.0)), _GLF_IDENTITY(dot(_GLF_IDENTITY(vec2(1.0, 1.0), mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (vec2(1.0, 1.0))), vec2(0.0, 0.0)), dot(vec2(1.0, 1.0), vec2(0.0, 0.0))), 0.0), (true ? mat2x3(injectionSwitch, 1.0, length(vec3(0.0, 0.0, 0.0)), _GLF_IDENTITY(dot(vec2(1.0, 1.0), vec2(_GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0)), dot(vec2(1.0, 1.0), vec2(0.0, 0.0))), 0.0) : _GLF_FUZZED(mat2x3(7.7, -8117.7233, 3966.4429, 74.45, 5.2, -9.0))))), mix(vec2((vec2(_GLF_IDENTITY(mat2x3(injectionSwitch, 1.0, length(vec3(_GLF_IDENTITY(0.0, max(0.0, _GLF_IDENTITY(0.0, float(vec2(_GLF_IDENTITY(0.0, max(0.0, 0.0)), 1.0))))), 0.0, 0.0)), _GLF_IDENTITY(_GLF_IDENTITY(dot(vec2(1.0, 1.0), vec2(0.0, 0.0)), dot(vec2(1.0, 1.0), vec2(0.0, 0.0))), mix(float(_GLF_IDENTITY(_GLF_IDENTITY(dot(vec2(1.0, 1.0), vec2(0.0, 0.0)), dot(vec2(1.0, 1.0), vec2(0.0, 0.0))), (false ? _GLF_FUZZED(6400.4946) : _GLF_IDENTITY(dot(vec2(1.0, 1.0), vec2(0.0, 0.0)), dot(vec2(1.0, 1.0), vec2(0.0, 0.0)))))), float(_GLF_FUZZED(13.60)), bool(false))), 0.0), (true ? mat2x3(_GLF_IDENTITY(injectionSwitch, abs(vec2(0.0, 0.0)) + (_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(909.820, -8.1)))))), 1.0, length(vec3(0.0, 0.0, 0.0)), _GLF_IDENTITY(dot(vec2(1.0, 1.0), vec2(0.0, 0.0)), dot(vec2(1.0, 1.0), vec2(0.0, 0.0))), 0.0) : _GLF_FUZZED(mat2x3(7.7, -8117.7233, 3966.4429, 74.45, 5.2, -9.0))))))[0], (vec2(_GLF_IDENTITY(mat2x3(injectionSwitch, _GLF_IDENTITY(1.0, float(vec2(1.0, 0.0))), length(vec3(0.0, 0.0, 0.0)), _GLF_IDENTITY(dot(vec2(1.0, 1.0), vec2(0.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)))), dot(vec2(1.0, 1.0), vec2(0.0, 0.0))), 0.0), (true ? mat2x3(injectionSwitch, 1.0, length(vec3(0.0, 0.0, 0.0)), _GLF_IDENTITY(dot(vec2(1.0, 1.0), vec2(0.0, 0.0)), dot(vec2(1.0, 1.0), vec2(0.0, 0.0))), 0.0) : _GLF_FUZZED(mat2x3(7.7, -8117.7233, 3966.4429, 74.45, 5.2, -9.0))))))[1]), vec2(_GLF_FUZZED(9.3), _GLF_FUZZED(2.4)), bvec2(false, false)))), 1.0, 1.0, 0.0, 0.0, 0.0, 0.0))).y))))))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), true && (bool(bvec2(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))))
        barrier();
       if(_GLF_DEAD(false))
        return;
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_WRAPPED_IF_FALSE(false))
        {
        }
       else
        {
         barrier();
        }
      }
     for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
      {
       barrier();
      }
     if(_GLF_WRAPPED_IF_TRUE(true))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     else
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
          {
           barrier();
          }
         else
          {
          }
        }
      }
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), (_GLF_IDENTITY(! (! (false)), bool(bvec2(! (! (false)), true)))) || false))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) || false), (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)), bool(_GLF_IDENTITY(bvec3(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)), true, true), bvec3(bvec3(_GLF_IDENTITY(bvec3(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)), true, true), bvec3(bvec4(bvec3(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)), true, true), true)))))))))
      {
       if(_GLF_WRAPPED_IF_TRUE(true))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
            barrier();
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(mat4(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), 1.0, 0.0, 0.0, 1.0, 0.0, _GLF_IDENTITY(dot(vec4(sqrt(1.0), 1.0, 0.0, _GLF_IDENTITY(1.0, float(mat3x2(1.0, determinant(mat4(0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, length(vec4(0.0, 0.0, 0.0, 0.0)))), 1.0, sin(0.0), 1.0, 0.0)))), vec4(0.0, 0.0, 1.0, 0.0)), dot(vec4(sqrt(1.0), 1.0, 0.0, 1.0), vec4(0.0, 0.0, 1.0, 0.0))), 1.0, 0.0, 1.0, cos(0.0), _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED((1.7 - -414.352))), bool(false))), 0.0, 1.0, 1.0))).y))))
            {
             if(_GLF_DEAD(false))
              return;
             barrier();
            }
           if(_GLF_WRAPPED_IF_TRUE(true))
            {
             barrier();
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              return;
            }
           else
            {
            }
          }
        }
       else
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[_GLF_IDENTITY(1, 0 | (1))])).x > injectionSwitch.y))))
          barrier();
         if(_GLF_DEAD(false))
          return;
        }
       return;
      }
     barrier();
     if(_GLF_DEAD(false))
      {
       do
        {
         return;
         if(_GLF_DEAD(false))
          {
           if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, ! (! _GLF_IDENTITY((true), false || (_GLF_IDENTITY((true), ((true)) && true)))))))
            {
             barrier();
            }
           else
            {
            }
          }
        }
       while(_GLF_WRAPPED_LOOP(false));
      }
     if(_GLF_DEAD(false))
      barrier();
    }
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec2(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > injectionSwitch.y)), true)))))
  {
   do
    {
     if(_GLF_DEAD(false))
      barrier();
    }
   while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, bool(bool(false)))));
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(8772.8961, 360.686)))).y))))
  barrier();
}
