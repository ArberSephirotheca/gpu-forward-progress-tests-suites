#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


struct _GLF_struct_41 {
 mat3x4 _f0;
 mat4 _f1;
 uvec2 _f2;
} ;

struct _GLF_struct_42 {
 mat4 _f0;
 _GLF_struct_41 _f1;
 mat2 _f2;
 mat2x3 _f3;
 uvec2 _f4;
} ;

struct _GLF_struct_39 {
 vec3 _f0;
 mat2x3 _f1;
 ivec2 _f2;
 mat4x3 _f3;
 uvec2 _f4;
 uvec4 _f5;
} ;

struct _GLF_struct_38 {
 bvec3 _f0;
} ;

struct _GLF_struct_37 {
 mat3x4 _f0;
 float _f1;
 int _f2;
 mat3 _f3;
} ;

struct _GLF_struct_40 {
 vec2 _f0;
 _GLF_struct_37 _f1;
 _GLF_struct_38 _f2;
 mat4x3 _f3;
 _GLF_struct_39 _f4;
} ;

struct _GLF_struct_43 {
 uint workgroup_id;
 _GLF_struct_40 _f0;
 _GLF_struct_42 _f1;
 mat4x3 _f2;
} ;

struct _GLF_struct_34 {
 mat2 _f0;
 bvec2 _f1;
} ;

struct _GLF_struct_33 {
 mat4 _f0;
 uint _f1;
 uint _f2;
 uvec2 _f3;
 int _f4;
 bvec3 _f5;
 bool _f6;
} ;

struct _GLF_struct_32 {
 ivec3 _f0;
 mat2x3 _f1;
 vec3 _f2;
 uint _f3;
} ;

struct _GLF_struct_31 {
 mat2x3 _f0;
 int _f1;
} ;

struct _GLF_struct_35 {
 _GLF_struct_31 _f0;
 ivec3 _f1;
 _GLF_struct_32 _f2;
 bvec3 _f3;
 _GLF_struct_33 _f4;
 _GLF_struct_34 _f5;
 mat2x3 _f6;
} ;

struct _GLF_struct_29 {
 mat4x3 _f0;
 bvec3 _f1;
 int _f2;
 int _f3;
 vec2 _f4;
 bvec3 _f5;
 bool _f6;
} ;

struct _GLF_struct_30 {
 ivec2 _f0;
 _GLF_struct_29 _f1;
} ;

struct _GLF_struct_27 {
 vec2 _f0;
} ;

struct _GLF_struct_26 {
 mat2x4 _f0;
} ;

struct _GLF_struct_25 {
 ivec3 _f0;
 mat3 _f1;
 mat4x2 _f2;
 mat2x4 _f3;
 vec3 _f4;
} ;

struct _GLF_struct_24 {
 mat4x3 _f0;
 vec4 _f1;
 uint _f2;
 uint _f3;
} ;

struct _GLF_struct_28 {
 _GLF_struct_24 _f0;
 _GLF_struct_25 _f1;
 mat2 _f2;
 _GLF_struct_26 _f3;
 _GLF_struct_27 _f4;
 mat3x2 _f5;
 mat4x3 _f6;
} ;

struct _GLF_struct_36 {
 _GLF_struct_28 _f0;
 uint workgroup_size;
 _GLF_struct_30 _f1;
 vec3 _f2;
 _GLF_struct_35 _f3;
 bool _f4;
} ;

struct _GLF_struct_22 {
 ivec3 _f0;
 bvec4 _f1;
} ;

struct _GLF_struct_23 {
 uint _f0;
 mat4x2 _f1;
 _GLF_struct_22 _f2;
 bvec4 _f3;
 uint read_2;
 mat2x4 _f4;
} ;

struct _GLF_struct_19 {
 uvec2 _f0;
} ;

struct _GLF_struct_18 {
 ivec3 _f0;
 bool _f1;
 mat3x4 _f2;
} ;

struct _GLF_struct_20 {
 uvec4 _f0;
 uint _f1;
 uvec2 _f2;
 uint _f3;
 _GLF_struct_18 _f4;
 uvec4 _f5;
 _GLF_struct_19 _f6;
} ;

struct _GLF_struct_16 {
 uvec2 _f0;
 bvec3 _f1;
 mat3x2 _f2;
 bvec4 _f3;
 ivec2 _f4;
 bvec3 _f5;
} ;

struct _GLF_struct_15 {
 bool _f0;
 bool _f1;
 bvec2 _f2;
 int _f3;
 vec4 _f4;
 bvec2 _f5;
} ;

struct _GLF_struct_14 {
 mat2x4 _f0;
 mat2 _f1;
 vec2 _f2;
 mat2 _f3;
 mat3x4 _f4;
 bool _f5;
} ;

struct _GLF_struct_17 {
 _GLF_struct_14 _f0;
 mat4x2 _f1;
 ivec3 _f2;
 _GLF_struct_15 _f3;
 vec3 _f4;
 mat4x3 _f5;
 _GLF_struct_16 _f6;
} ;

struct _GLF_struct_12 {
 mat4x3 _f0;
 ivec2 _f1;
 bvec3 _f2;
 int _f3;
} ;

struct _GLF_struct_11 {
 float _f0;
 bvec2 _f1;
 bool _f2;
 int _f3;
} ;

struct _GLF_struct_10 {
 int _f0;
 mat2 _f1;
} ;

struct _GLF_struct_9 {
 mat2x3 _f0;
 mat4 _f1;
 uint _f2;
 bvec3 _f3;
} ;

struct _GLF_struct_13 {
 _GLF_struct_9 _f0;
 _GLF_struct_10 _f1;
 _GLF_struct_11 _f2;
 _GLF_struct_12 _f3;
 uvec2 _f4;
} ;

struct _GLF_struct_7 {
 mat2x4 _f0;
} ;

struct _GLF_struct_6 {
 mat2x4 _f0;
 mat2 _f1;
 bvec4 _f2;
 mat3 _f3;
 uvec2 _f4;
} ;

struct _GLF_struct_5 {
 float _f0;
 bvec2 _f1;
} ;

struct _GLF_struct_8 {
 _GLF_struct_5 _f0;
 _GLF_struct_6 _f1;
 _GLF_struct_7 _f2;
 ivec2 _f3;
} ;

struct _GLF_struct_21 {
 _GLF_struct_8 _f0;
 bvec4 _f1;
 _GLF_struct_13 _f2;
 _GLF_struct_17 _f3;
 uint virtual_gid;
 _GLF_struct_20 _f4;
} ;

struct _GLF_struct_2 {
 mat3 _f0;
 vec4 _f1;
 ivec4 _f2;
 uint _f3;
} ;

struct _GLF_struct_3 {
 float _f0;
 ivec3 _f1;
 _GLF_struct_2 _f2;
 vec3 _f3;
} ;

struct _GLF_struct_4 {
 uint subgroup_id;
 _GLF_struct_3 _f0;
} ;

struct _GLF_struct_0 {
 vec3 _f0;
} ;

struct _GLF_struct_1 {
 mat4 _f0;
 mat2x4 _f1;
 uint num_workgroup;
 _GLF_struct_0 _f2;
} ;

layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(false))
  return;
 _GLF_struct_4 _GLF_struct_replacement_4 = _GLF_struct_4(gl_SubgroupID, _GLF_struct_3(1.0, ivec3(1), _GLF_struct_2(mat3(1.0), vec4(1.0), ivec4(1), 1u), vec3(1.0)));
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_DEAD(false))
  return;
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 _GLF_struct_1 _GLF_struct_replacement_1 = _GLF_struct_1(mat4(1.0), mat2x4(1.0), gl_NumWorkGroups.x, _GLF_struct_0(vec3(1.0)));
 _GLF_struct_36 _GLF_struct_replacement_36 = _GLF_struct_36(_GLF_struct_28(_GLF_struct_24(mat4x3(1.0), vec4(1.0), 1u, 1u), _GLF_struct_25(ivec3(1), mat3(1.0), mat4x2(1.0), mat2x4(1.0), vec3(1.0)), mat2(1.0), _GLF_struct_26(mat2x4(1.0)), _GLF_struct_27(vec2(1.0)), mat3x2(1.0), mat4x3(1.0)), gl_WorkGroupSize.x, _GLF_struct_30(ivec2(1), _GLF_struct_29(mat4x3(1.0), bvec3(true), 1, 1, vec2(1.0), bvec3(true), true)), vec3(1.0), _GLF_struct_35(_GLF_struct_31(mat2x3(1.0), 1), ivec3(1), _GLF_struct_32(ivec3(1), mat2x3(1.0), vec3(1.0), 1u), bvec3(true), _GLF_struct_33(mat4(1.0), 1u, 1u, uvec2(1u), 1, bvec3(true), true), _GLF_struct_34(mat2(1.0), bvec2(true)), mat2x3(1.0)), true);
 if(_GLF_DEAD(false))
  return;
 _GLF_struct_43 _GLF_struct_replacement_43 = _GLF_struct_43(gl_WorkGroupID.x, _GLF_struct_40(vec2(1.0), _GLF_struct_37(mat3x4(1.0), 1.0, 1, mat3(1.0)), _GLF_struct_38(bvec3(true)), mat4x3(1.0), _GLF_struct_39(vec3(1.0), mat2x3(1.0), ivec2(1), mat4x3(1.0), uvec2(1u), uvec4(1u))), _GLF_struct_42(mat4(1.0), _GLF_struct_41(mat3x4(1.0), mat4(1.0), uvec2(1u)), mat2(1.0), mat2x3(1.0), uvec2(1u)), mat4x3(1.0));
 uint workgroup_base = _GLF_struct_replacement_36.workgroup_size * _GLF_struct_replacement_43.workgroup_id;
 _GLF_struct_21 _GLF_struct_replacement_21 = _GLF_struct_21(_GLF_struct_8(_GLF_struct_5(1.0, bvec2(true)), _GLF_struct_6(mat2x4(1.0), mat2(1.0), bvec4(true), mat3(1.0), uvec2(1u)), _GLF_struct_7(mat2x4(1.0)), ivec2(1)), bvec4(true), _GLF_struct_13(_GLF_struct_9(mat2x3(1.0), mat4(1.0), 1u, bvec3(true)), _GLF_struct_10(1, mat2(1.0)), _GLF_struct_11(1.0, bvec2(true), true, 1), _GLF_struct_12(mat4x3(1.0), ivec2(1), bvec3(true), 1), uvec2(1u)), _GLF_struct_17(_GLF_struct_14(mat2x4(1.0), mat2(1.0), vec2(1.0), mat2(1.0), mat3x4(1.0), true), mat4x2(1.0), ivec3(1), _GLF_struct_15(true, true, bvec2(true), 1, vec4(1.0), bvec2(true)), vec3(1.0), mat4x3(1.0), _GLF_struct_16(uvec2(1u), bvec3(true), mat3x2(1.0), bvec4(true), ivec2(1), bvec3(true))), workgroup_base + _GLF_struct_replacement_4.subgroup_id * subgroup_size + subgroup_local_id, _GLF_struct_20(uvec4(1u), 1u, uvec2(1u), 1u, _GLF_struct_18(ivec3(1), true, mat3x4(1.0)), uvec4(1u), _GLF_struct_19(uvec2(1u))));
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  return;
 uint next_virtual_gid = workgroup_base + _GLF_struct_replacement_4.subgroup_id * subgroup_size + ((subgroup_local_id + 1) % subgroup_size);
 uint read_1 = atomicLoad(buf[_GLF_struct_replacement_21.virtual_gid], 4, 64, 0);
 atomicStore(buf[next_virtual_gid], uint(read_1 + 1), 4, 64, 4);
 _GLF_struct_23 _GLF_struct_replacement_23 = _GLF_struct_23(1u, mat4x2(1.0), _GLF_struct_22(ivec3(1), bvec4(true)), bvec4(true), atomicLoad(buf[_GLF_struct_replacement_21.virtual_gid], 4, 64, 0), mat2x4(1.0));
 atomicStore(buf[next_virtual_gid], uint(read_1 + 1 == _GLF_struct_replacement_23.read_2) + 1, 4, 64, 4);
 if(_GLF_DEAD(false))
  return;
}
