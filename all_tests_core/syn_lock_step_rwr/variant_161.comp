#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 uvec4 GLF_merged2_0_3_71_3_1_6GLF_merged3_0_1_11_1_1_17_2_1_11subgroup_idsubgroup_local_idvirtual_gidread_1;
 uvec3 GLF_merged3_0_1_11_1_1_17_2_1_11subgroup_idsubgroup_local_idvirtual_gid;
 GLF_merged2_0_3_71_3_1_6GLF_merged3_0_1_11_1_1_17_2_1_11subgroup_idsubgroup_local_idvirtual_gidread_1.xyz = GLF_merged3_0_1_11_1_1_17_2_1_11subgroup_idsubgroup_local_idvirtual_gid;
 uint subgroup_id = gl_SubgroupID;
 GLF_merged2_0_3_71_3_1_6GLF_merged3_0_1_11_1_1_17_2_1_11subgroup_idsubgroup_local_idvirtual_gidread_1.xyz.x = subgroup_id;
 uint subgroup_size = gl_SubgroupSize;
 uint subgroup_local_id = gl_SubgroupInvocationID;
 GLF_merged2_0_3_71_3_1_6GLF_merged3_0_1_11_1_1_17_2_1_11subgroup_idsubgroup_local_idvirtual_gidread_1.xyz.y = subgroup_local_id;
 uint num_workgroup = gl_NumWorkGroups.x;
 uint workgroup_size = gl_WorkGroupSize.x;
 uint workgroup_id = gl_WorkGroupID.x;
 uint workgroup_base = workgroup_size * workgroup_id;
 uint virtual_gid = workgroup_base + GLF_merged2_0_3_71_3_1_6GLF_merged3_0_1_11_1_1_17_2_1_11subgroup_idsubgroup_local_idvirtual_gidread_1.xyz.x * subgroup_size + GLF_merged2_0_3_71_3_1_6GLF_merged3_0_1_11_1_1_17_2_1_11subgroup_idsubgroup_local_idvirtual_gidread_1.xyz.y;
 GLF_merged2_0_3_71_3_1_6GLF_merged3_0_1_11_1_1_17_2_1_11subgroup_idsubgroup_local_idvirtual_gidread_1.xyz.z = virtual_gid;
 uint next_virtual_gid = workgroup_base + _GLF_IDENTITY(GLF_merged2_0_3_71_3_1_6GLF_merged3_0_1_11_1_1_17_2_1_11subgroup_idsubgroup_local_idvirtual_gidread_1.xyz.x * subgroup_size, max(GLF_merged2_0_3_71_3_1_6GLF_merged3_0_1_11_1_1_17_2_1_11subgroup_idsubgroup_local_idvirtual_gidread_1.xyz.x * subgroup_size, GLF_merged2_0_3_71_3_1_6GLF_merged3_0_1_11_1_1_17_2_1_11subgroup_idsubgroup_local_idvirtual_gidread_1.xyz.x * subgroup_size)) + ((GLF_merged2_0_3_71_3_1_6GLF_merged3_0_1_11_1_1_17_2_1_11subgroup_idsubgroup_local_idvirtual_gidread_1.xyz.y + 1) % subgroup_size);
 uint read_1 = atomicLoad(buf[_GLF_IDENTITY(GLF_merged2_0_3_71_3_1_6GLF_merged3_0_1_11_1_1_17_2_1_11subgroup_idsubgroup_local_idvirtual_gidread_1.xyz, (GLF_merged2_0_3_71_3_1_6GLF_merged3_0_1_11_1_1_17_2_1_11subgroup_idsubgroup_local_idvirtual_gidread_1.xyz) | uvec3(0u, 0u, 0u)).z], 4, 64, 0);
 GLF_merged2_0_3_71_3_1_6GLF_merged3_0_1_11_1_1_17_2_1_11subgroup_idsubgroup_local_idvirtual_gidread_1.w = read_1;
 atomicStore(buf[next_virtual_gid], uint(GLF_merged2_0_3_71_3_1_6GLF_merged3_0_1_11_1_1_17_2_1_11subgroup_idsubgroup_local_idvirtual_gidread_1.w + 1), 4, 64, 4);
 uint read_2 = atomicLoad(buf[GLF_merged2_0_3_71_3_1_6GLF_merged3_0_1_11_1_1_17_2_1_11subgroup_idsubgroup_local_idvirtual_gidread_1.xyz.z], 4, _GLF_IDENTITY(64, (64) - 0), 0);
 atomicStore(buf[next_virtual_gid], uint(GLF_merged2_0_3_71_3_1_6GLF_merged3_0_1_11_1_1_17_2_1_11subgroup_idsubgroup_local_idvirtual_gidread_1.w + 1 == read_2) + 1, 4, 64, 4);
}
