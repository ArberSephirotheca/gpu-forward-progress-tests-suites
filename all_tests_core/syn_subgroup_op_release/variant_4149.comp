#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(false))
  {
   for(int _injected_loop_counter = ((1 << _GLF_IDENTITY(int(6), _GLF_IDENTITY(int(6), max(_GLF_IDENTITY(int(6), (int(6)) | (int(6))), int(6))))) >> _GLF_IDENTITY(int(6), int(6))); _GLF_WRAPPED_LOOP(_injected_loop_counter > (_GLF_IDENTITY(0, (0) << _GLF_IDENTITY(0, (0) / 1)) ^ (0 & -92163))); _injected_loop_counter --)
    {
     barrier();
    }
  }
 uint subgroup_id = gl_SubgroupID;
 uint subgroup_size = gl_SubgroupSize;
 uint subgroup_local_id = gl_SubgroupInvocationID;
 uint num_workgroup = gl_NumWorkGroups.x;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, _GLF_IDENTITY(true, false || (true)) && (false))))), bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), bool(bool(_GLF_IDENTITY(false, true && (false))))), ! (! (_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(true, bool(bvec4(true, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) && (false), ! (! (_GLF_IDENTITY(true, bool(bvec4(true, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), true && ((injectionSwitch.x < injectionSwitch.y))))))) && (false))))))))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, true && (false))))), bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, true && (false))), true && (bool(_GLF_IDENTITY(false, true && (false)))))), false || (bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, true && (false))), true && (bool(_GLF_IDENTITY(false, true && (false))))))))), ! (! (_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, _GLF_IDENTITY(true, bool(bvec4(true, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) && (false)))))))), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))).x > injectionSwitch.y)), true))), false || (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), (_GLF_IDENTITY(false, _GLF_IDENTITY(true, bool(bvec2(true, true))) && (false))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), ! (! (_GLF_IDENTITY(false, _GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec3(true, false, false)), false || (bool(bvec3(true, false, false))))) && (false))))))))) || false)))), bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, true && (false))), (_GLF_IDENTITY(bool(_GLF_IDENTITY(false, true && (false))), false || (bool(_GLF_IDENTITY(false, true && (false)))))) && true), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, true && (false))), bool(bool(bool(_GLF_IDENTITY(false, true && (false)))))), ! (! (_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), true && (false)), false || (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), true && (false)), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), true && (false)))))))), _GLF_IDENTITY(bool(bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && ((! (false))))))), bool(bvec4((! (_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && ((! (false))))))), false, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), true && (false))))), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bool(injectionSwitch.x > injectionSwitch.y))), false, true, false))))))) || (_GLF_IDENTITY(bool(bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (false)))))), true && (false))))), ! (_GLF_IDENTITY(! (bool(bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (false)))))), true && (false)))))), (! (bool(bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (false)))))), true && (false)), false || (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (false)))))), true && (false))))))))) || false)))))))))), ((_GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, true && (false))), bool(bool(bool(_GLF_IDENTITY(false, true && (false)))))), ! (! (_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), true && (false)), false || (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), true && (false)), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), true && (false)))))))), _GLF_IDENTITY(bool(bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && ((! (false))))))), bool(bvec4((! (_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && ((! (false))))))), false, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), true && (false))))), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bool(injectionSwitch.x > injectionSwitch.y))), false, true, false))))))) || (_GLF_IDENTITY(bool(bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (false)))))), true && (false))))), ! (_GLF_IDENTITY(! (bool(bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (false)))))), true && (false)))))), (! (bool(bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (false)))))), true && (false)), false || (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (false)))))), true && (false))))))))) || false))))))))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true))), ! (! (_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(bool(bool(_GLF_IDENTITY(false, _GLF_IDENTITY(true, bool(bvec4(true, _GLF_IDENTITY(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (true)), _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / cos(vec2(0.0, 0.0))).y)), _GLF_TRUE(_GLF_IDENTITY(true, ! (! (true))), (injectionSwitch.x < injectionSwitch.y))))) && _GLF_IDENTITY((false), (_GLF_IDENTITY((false), ((false)) && true)) || false)))), ! (! (bool(bool(_GLF_IDENTITY(false, _GLF_IDENTITY(true, bool(bvec4(true, _GLF_IDENTITY(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (true)), _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / cos(vec2(0.0, 0.0))).y)), _GLF_TRUE(_GLF_IDENTITY(true, ! (! (true))), (injectionSwitch.x < injectionSwitch.y))))) && _GLF_IDENTITY((false), (_GLF_IDENTITY((false), ((false)) && true)) || false))))))), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(bool(bool(_GLF_IDENTITY(false, _GLF_IDENTITY(true, bool(bvec4(true, _GLF_IDENTITY(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (true)), _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / cos(vec2(0.0, 0.0))).y)), _GLF_TRUE(_GLF_IDENTITY(true, ! (! (true))), (injectionSwitch.x < injectionSwitch.y))))) && _GLF_IDENTITY((false), (_GLF_IDENTITY((false), ((false)) && true)) || false)))), ! (! (bool(bool(_GLF_IDENTITY(false, _GLF_IDENTITY(true, bool(bvec4(true, _GLF_IDENTITY(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (true)), _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / cos(vec2(0.0, 0.0))).y)), _GLF_TRUE(_GLF_IDENTITY(true, ! (! (true))), (injectionSwitch.x < injectionSwitch.y))))) && _GLF_IDENTITY((false), (_GLF_IDENTITY((false), ((false)) && true)) || false))))))), false, false)), ! (! (bool(bvec3(_GLF_IDENTITY(bool(bool(_GLF_IDENTITY(false, _GLF_IDENTITY(true, bool(bvec4(true, _GLF_IDENTITY(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (true)), _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / cos(vec2(0.0, 0.0))).y)), _GLF_TRUE(_GLF_IDENTITY(true, ! (! (true))), (injectionSwitch.x < injectionSwitch.y))))) && _GLF_IDENTITY((false), (_GLF_IDENTITY((false), ((false)) && true)) || false)))), ! (! (bool(bool(_GLF_IDENTITY(false, _GLF_IDENTITY(true, bool(bvec4(true, _GLF_IDENTITY(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (true)), _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / cos(vec2(0.0, 0.0))).y)), _GLF_TRUE(_GLF_IDENTITY(true, ! (! (true))), (injectionSwitch.x < injectionSwitch.y))))) && _GLF_IDENTITY((false), (_GLF_IDENTITY((false), ((false)) && true)) || false))))))), false, false)))))))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 uint workgroup_size = gl_WorkGroupSize.x;
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY((injectionSwitch.y) / abs(1.0), ((injectionSwitch.y) / abs(1.0)) - 0.0)), (true ? injectionSwitch.y : _GLF_FUZZED(39.21))))), _GLF_IDENTITY(bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y)), true, false, false)), (bool(bvec4(_GLF_FALSE(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (_GLF_IDENTITY(! (false), (! (false)) && true)))))), (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(_GLF_IDENTITY(1.0, max(1.0, 1.0))) * (injectionSwitch), vec2(mat2x3(mat2(1.0) * (injectionSwitch), 0.0, 0.0, determinant(mat4(1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-5234.5190))), 0.0, 1.0)), 1.0)))).x > injectionSwitch.y)), true, false, false))) && true))), true && (_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true), bool(bvec2(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, (false) && true), (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true), true))))), _GLF_IDENTITY(bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, false, false)), _GLF_IDENTITY((bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, false, false))), _GLF_IDENTITY(bool(bvec2((bool(bvec4(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mix(_GLF_IDENTITY(vec2(_GLF_FUZZED(46.13), (injectionSwitch)[1]), mat2(1.0) * (vec2(_GLF_FUZZED(46.13), (injectionSwitch)[1]))), vec2(_GLF_IDENTITY((injectionSwitch)[_GLF_IDENTITY(0, min(0, _GLF_IDENTITY(0, ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(0, ~ (~ (_GLF_IDENTITY(0, (true ? 0 : _GLF_FUZZED((97349 - 98424))))))), _GLF_IDENTITY(~ (~ (0)), min(~ (~ (0)), _GLF_IDENTITY(~ (~ (0)), (_GLF_IDENTITY(~ (~ (0)), (~ (~ (0))) ^ 0)) | 0)))))))))], float(mat3x2(_GLF_IDENTITY((injectionSwitch)[_GLF_IDENTITY(0, min(0, _GLF_IDENTITY(0, ~ (~ (_GLF_IDENTITY(0, ~ (~ (0))))))))], clamp(_GLF_IDENTITY((injectionSwitch), mix(vec2(_GLF_FUZZED((false ? 9.5 : 5.5)), _GLF_FUZZED(9.2)), vec2(((injectionSwitch))[0], ((injectionSwitch))[1]), bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)))[_GLF_IDENTITY(0, min(0, _GLF_IDENTITY(_GLF_IDENTITY(0, ~ (~ (_GLF_IDENTITY(0, ~ (~ (0)))))), max(_GLF_IDENTITY(0, ~ (~ (_GLF_IDENTITY(0, ~ (~ (0)))))), _GLF_IDENTITY(0, ~ (~ (_GLF_IDENTITY(0, ~ (~ (0))))))))))], (injectionSwitch)[_GLF_IDENTITY(0, min(0, _GLF_IDENTITY(0, ~ (~ (_GLF_IDENTITY(0, ~ (~ (0))))))))], (injectionSwitch)[_GLF_IDENTITY(0, min(0, _GLF_IDENTITY(0, ~ (~ (_GLF_IDENTITY(0, ~ (~ (0))))))))])), 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 1.0, tan(length(vec3(0.0, 0.0, _GLF_IDENTITY(0.0, float(vec4(0.0, 1.0, exp(0.0), 0.0))))))))), _GLF_FUZZED(_GLF_IDENTITY((+ -4748.8866), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? (+ -4748.8866) : _GLF_FUZZED(-5.8))))), bvec2(true, false))).x > injectionSwitch.y)), true, false, false))), _GLF_IDENTITY(true, _GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bvec2(bvec2(bvec2(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))) || (true)))), bool(bvec4(bool(bvec2((bool(bvec4(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mix(_GLF_IDENTITY(vec2(_GLF_FUZZED(46.13), _GLF_IDENTITY((injectionSwitch), ((injectionSwitch)) - vec2(0.0, 0.0))[1]), mat2(_GLF_IDENTITY(1.0, max(1.0, 1.0))) * (vec2(_GLF_FUZZED(46.13), (injectionSwitch)[1]))), _GLF_IDENTITY(vec2(_GLF_IDENTITY((injectionSwitch)[_GLF_IDENTITY(_GLF_IDENTITY(0, min(0, _GLF_IDENTITY(0, ~ (~ (_GLF_IDENTITY(0, ~ (~ (0)))))))), (_GLF_IDENTITY(0, min(0, _GLF_IDENTITY(0, ~ (~ (_GLF_IDENTITY(0, ~ (~ (0))))))))) ^ 0)], float(mat3x2(_GLF_IDENTITY((injectionSwitch)[_GLF_IDENTITY(0, min(0, _GLF_IDENTITY(0, ~ (~ (_GLF_IDENTITY(0, ~ _GLF_IDENTITY((~ (0)), ~ (~ (_GLF_IDENTITY((~ (0)), 0 ^ ((~ (0)))))))))))))], clamp((injectionSwitch)[_GLF_IDENTITY(0, min(0, _GLF_IDENTITY(0, ~ (~ (_GLF_IDENTITY(0, ~ (~ (0))))))))], (injectionSwitch)[_GLF_IDENTITY(0, min(0, _GLF_IDENTITY(0, ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(0, clamp(_GLF_IDENTITY(0, (0) | (0)), 0, 0)), ~ (~ (0))))))))], (injectionSwitch)[_GLF_IDENTITY(0, min(0, _GLF_IDENTITY(_GLF_IDENTITY(0, ~ (~ (_GLF_IDENTITY(0, ~ (~ (0)))))), min(_GLF_IDENTITY(0, ~ (~ (_GLF_IDENTITY(0, ~ (~ (0)))))), _GLF_IDENTITY(_GLF_IDENTITY(0, ~ (~ (_GLF_IDENTITY(0, ~ (~ (0)))))), clamp(_GLF_IDENTITY(0, ~ (~ (_GLF_IDENTITY(0, ~ (~ (0)))))), _GLF_IDENTITY(_GLF_IDENTITY(0, ~ (~ (_GLF_IDENTITY(0, ~ (~ (0)))))), (_GLF_IDENTITY(0, ~ (~ (_GLF_IDENTITY(0, ~ (~ (0))))))) - 0), _GLF_IDENTITY(0, ~ (~ (_GLF_IDENTITY(0, ~ (~ (0))))))))))))])), 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 1.0, tan(length(vec3(0.0, 0.0, _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(-964.056) : _GLF_IDENTITY(0.0, (0.0) * cos(0.0)))))))))), _GLF_FUZZED((+ -4748.8866))), clamp(vec2(_GLF_IDENTITY((injectionSwitch)[_GLF_IDENTITY(_GLF_IDENTITY(0, min(0, _GLF_IDENTITY(0, ~ (~ (_GLF_IDENTITY(0, ~ (~ (0)))))))), (_GLF_IDENTITY(0, min(0, _GLF_IDENTITY(0, ~ (~ (_GLF_IDENTITY(0, ~ (~ (0))))))))) ^ 0)], float(mat3x2(_GLF_IDENTITY((injectionSwitch)[_GLF_IDENTITY(0, min(0, _GLF_IDENTITY(0, ~ (~ (_GLF_IDENTITY(0, ~ _GLF_IDENTITY((~ (0)), ~ (~ (_GLF_IDENTITY((~ (0)), 0 ^ ((~ (0)))))))))))))], clamp((injectionSwitch)[_GLF_IDENTITY(0, min(0, _GLF_IDENTITY(0, ~ (~ (_GLF_IDENTITY(0, ~ (~ (0))))))))], (injectionSwitch)[_GLF_IDENTITY(0, min(0, _GLF_IDENTITY(0, ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(0, clamp(_GLF_IDENTITY(0, (0) | (0)), 0, 0)), ~ (~ (0))))))))], (injectionSwitch)[_GLF_IDENTITY(0, min(0, _GLF_IDENTITY(_GLF_IDENTITY(0, ~ (~ (_GLF_IDENTITY(0, ~ (~ (0)))))), min(_GLF_IDENTITY(0, ~ (~ (_GLF_IDENTITY(0, ~ (~ (0)))))), _GLF_IDENTITY(_GLF_IDENTITY(0, ~ (~ (_GLF_IDENTITY(0, ~ (~ (0)))))), clamp(_GLF_IDENTITY(0, ~ (~ (_GLF_IDENTITY(0, ~ (~ (0)))))), _GLF_IDENTITY(_GLF_IDENTITY(0, ~ (~ (_GLF_IDENTITY(0, ~ (~ (0)))))), (_GLF_IDENTITY(0, ~ (~ (_GLF_IDENTITY(0, ~ (~ (0))))))) - 0), _GLF_IDENTITY(0, ~ (~ (_GLF_IDENTITY(0, ~ (~ (0))))))))))))])), 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 1.0, tan(length(vec3(0.0, 0.0, _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(-964.056) : _GLF_IDENTITY(0.0, (0.0) * cos(0.0)))))))))), _GLF_FUZZED((+ -4748.8866))), vec2(_GLF_IDENTITY((injectionSwitch)[_GLF_IDENTITY(_GLF_IDENTITY(0, min(0, _GLF_IDENTITY(0, ~ (~ (_GLF_IDENTITY(0, ~ (~ (0)))))))), (_GLF_IDENTITY(0, min(0, _GLF_IDENTITY(0, ~ (~ (_GLF_IDENTITY(0, ~ (~ (0))))))))) ^ 0)], float(mat3x2(_GLF_IDENTITY((injectionSwitch)[_GLF_IDENTITY(0, min(0, _GLF_IDENTITY(0, ~ (~ (_GLF_IDENTITY(0, ~ _GLF_IDENTITY((~ (0)), ~ (~ (_GLF_IDENTITY((~ (0)), 0 ^ ((~ (0)))))))))))))], clamp((injectionSwitch)[_GLF_IDENTITY(0, min(0, _GLF_IDENTITY(0, ~ (~ (_GLF_IDENTITY(0, ~ (~ (0))))))))], (injectionSwitch)[_GLF_IDENTITY(0, min(0, _GLF_IDENTITY(0, ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(0, clamp(_GLF_IDENTITY(0, (0) | (0)), 0, 0)), ~ (~ (0))))))))], (injectionSwitch)[_GLF_IDENTITY(0, min(0, _GLF_IDENTITY(_GLF_IDENTITY(0, ~ (~ (_GLF_IDENTITY(0, ~ (~ (0)))))), min(_GLF_IDENTITY(0, ~ (~ (_GLF_IDENTITY(0, ~ (~ (0)))))), _GLF_IDENTITY(_GLF_IDENTITY(0, ~ (~ (_GLF_IDENTITY(0, ~ (~ (0)))))), clamp(_GLF_IDENTITY(0, ~ (~ (_GLF_IDENTITY(0, ~ (~ (0)))))), _GLF_IDENTITY(_GLF_IDENTITY(0, ~ (~ (_GLF_IDENTITY(0, ~ (~ (0)))))), (_GLF_IDENTITY(0, ~ (~ (_GLF_IDENTITY(0, ~ (~ (0))))))) - 0), _GLF_IDENTITY(0, ~ (~ (_GLF_IDENTITY(0, ~ (~ (0))))))))))))])), 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 1.0, tan(length(vec3(0.0, 0.0, _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(-964.056) : _GLF_IDENTITY(0.0, (0.0) * cos(0.0)))))))))), _GLF_FUZZED((+ -4748.8866))), vec2(_GLF_IDENTITY((injectionSwitch)[_GLF_IDENTITY(_GLF_IDENTITY(0, min(0, _GLF_IDENTITY(0, ~ (~ (_GLF_IDENTITY(0, ~ (~ (0)))))))), (_GLF_IDENTITY(0, min(0, _GLF_IDENTITY(0, ~ (~ (_GLF_IDENTITY(0, ~ (~ (0))))))))) ^ 0)], float(mat3x2(_GLF_IDENTITY((injectionSwitch)[_GLF_IDENTITY(0, min(0, _GLF_IDENTITY(0, ~ (~ (_GLF_IDENTITY(0, ~ _GLF_IDENTITY((~ (0)), ~ (~ (_GLF_IDENTITY((~ (0)), 0 ^ ((~ (0)))))))))))))], clamp((injectionSwitch)[_GLF_IDENTITY(0, min(0, _GLF_IDENTITY(0, ~ (~ (_GLF_IDENTITY(0, ~ (~ (0))))))))], (injectionSwitch)[_GLF_IDENTITY(0, min(0, _GLF_IDENTITY(0, ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(0, clamp(_GLF_IDENTITY(0, (0) | (0)), 0, 0)), ~ (~ (0))))))))], (injectionSwitch)[_GLF_IDENTITY(0, min(0, _GLF_IDENTITY(_GLF_IDENTITY(0, ~ (~ (_GLF_IDENTITY(0, ~ (~ (0)))))), min(_GLF_IDENTITY(0, ~ (~ (_GLF_IDENTITY(0, ~ (~ (0)))))), _GLF_IDENTITY(_GLF_IDENTITY(0, ~ (~ (_GLF_IDENTITY(0, ~ (~ (0)))))), clamp(_GLF_IDENTITY(0, ~ (~ (_GLF_IDENTITY(0, ~ (~ (0)))))), _GLF_IDENTITY(_GLF_IDENTITY(0, ~ (~ (_GLF_IDENTITY(0, ~ (~ (0)))))), (_GLF_IDENTITY(0, ~ (~ (_GLF_IDENTITY(0, ~ (~ (0))))))) - 0), _GLF_IDENTITY(0, ~ (~ (_GLF_IDENTITY(0, ~ (~ (0))))))))))))])), 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 1.0, tan(length(vec3(0.0, 0.0, _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(-964.056) : _GLF_IDENTITY(0.0, (0.0) * cos(0.0)))))))))), _GLF_FUZZED((+ -4748.8866))))), bvec2(true, false))).x > injectionSwitch.y)), true, false, false))), _GLF_IDENTITY(true, false || (true)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))) && true))))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_WRAPPED_IF_TRUE(true))
      {
       barrier();
      }
     else
      {
      }
    }
   for(int _injected_loop_counter = (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(0 >> _GLF_IDENTITY(int(6), int(6)), ~ (~ (0 >> _GLF_IDENTITY(int(6), int(6))))), min(_GLF_IDENTITY(0 >> _GLF_IDENTITY(int(6), int(6)), ~ (~ (0 >> _GLF_IDENTITY(int(6), int(6))))), _GLF_IDENTITY(0 >> _GLF_IDENTITY(int(6), int(6)), ~ (~ (0 >> _GLF_IDENTITY(int(6), int(6))))))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(0 >> _GLF_IDENTITY(int(6), int(6)), ~ (~ (0 >> _GLF_IDENTITY(int(6), int(6))))), min(_GLF_IDENTITY(0 >> _GLF_IDENTITY(int(6), int(6)), ~ (~ (0 >> _GLF_IDENTITY(int(6), int(6))))), _GLF_IDENTITY(0 >> _GLF_IDENTITY(int(6), int(6)), ~ (~ (0 >> _GLF_IDENTITY(int(6), int(6))))))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(0 >> _GLF_IDENTITY(int(6), int(6)), ~ (~ (0 >> _GLF_IDENTITY(int(6), int(6))))), min(_GLF_IDENTITY(0 >> _GLF_IDENTITY(int(6), int(6)), ~ (~ (0 >> _GLF_IDENTITY(int(6), int(6))))), _GLF_IDENTITY(0 >> _GLF_IDENTITY(int(6), int(6)), ~ (~ (0 >> _GLF_IDENTITY(int(6), int(6))))))), _GLF_IDENTITY(_GLF_IDENTITY(0 >> _GLF_IDENTITY(int(6), int(6)), ~ (~ (0 >> _GLF_IDENTITY(int(6), int(6))))), min(_GLF_IDENTITY(0 >> _GLF_IDENTITY(int(6), int(6)), ~ (~ (0 >> _GLF_IDENTITY(int(6), int(6))))), _GLF_IDENTITY(0 >> _GLF_IDENTITY(int(6), int(6)), ~ (~ (0 >> _GLF_IDENTITY(int(6), int(6))))))), _GLF_IDENTITY(_GLF_IDENTITY(0 >> _GLF_IDENTITY(int(6), int(6)), ~ (~ (0 >> _GLF_IDENTITY(int(6), int(6))))), min(_GLF_IDENTITY(0 >> _GLF_IDENTITY(int(6), int(6)), ~ (~ (0 >> _GLF_IDENTITY(int(6), int(6))))), _GLF_IDENTITY(0 >> _GLF_IDENTITY(int(6), int(6)), ~ (~ (0 >> _GLF_IDENTITY(int(6), int(6)))))))))) ^ (0 | 0))); _GLF_WRAPPED_LOOP(_injected_loop_counter < (1 ^ (0 & 34922))); _injected_loop_counter ++)
    {
     barrier();
    }
  }
 uint workgroup_id = gl_WorkGroupID.x;
 if(_GLF_WRAPPED_IF_TRUE(true))
  {
   if(_GLF_DEAD(false))
    barrier();
  }
 else
  {
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
      {
       barrier();
      }
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 uint workgroup_base = _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_size, (_GLF_IDENTITY(workgroup_size, (_GLF_IDENTITY(workgroup_size, uint(uvec3(workgroup_size, 1u, 0u)))) - uint(_GLF_ZERO(0.0, injectionSwitch.x)))) - 0u), (_GLF_IDENTITY(workgroup_size, (_GLF_IDENTITY(workgroup_size, (_GLF_IDENTITY(workgroup_size, uint(uvec3(workgroup_size, 1u, 0u)))) - uint(_GLF_ZERO(0.0, injectionSwitch.x)))) - 0u)) ^ 0u), (true ? workgroup_size : _GLF_FUZZED(9942u))) * workgroup_id;
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
  {
   do
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), true && (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(bool(bvec4(! (injectionSwitch.x > injectionSwitch.y), false, true, true)), (bool(bvec4(! (injectionSwitch.x > injectionSwitch.y), false, true, true))) && true)))), ! (! (! (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))).x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).y)))))), bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), true && (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(bool(bvec4(! (injectionSwitch.x > injectionSwitch.y), false, true, true)), (bool(bvec4(! (injectionSwitch.x > injectionSwitch.y), false, true, true))) && true)))), ! (! (! (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))).x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).y)))))), false || (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), true && (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(bool(bvec4(! (injectionSwitch.x > injectionSwitch.y), false, true, true)), (bool(bvec4(! (injectionSwitch.x > injectionSwitch.y), false, true, true))) && true)))), ! (! (! (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))).x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).y)))))))))))))))
      barrier();
    }
   while(_GLF_WRAPPED_LOOP(false));
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   else
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     do
      {
       if(_GLF_WRAPPED_IF_FALSE(false))
        {
        }
       else
        {
         if(_GLF_DEAD(false))
          barrier();
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           barrier();
          }
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
      }
     while(_GLF_WRAPPED_LOOP(false));
     if(_GLF_DEAD(false))
      barrier();
    }
  }
 if(_GLF_DEAD(false))
  {
   for(int _injected_loop_counter = (1 ^ 0); _GLF_WRAPPED_LOOP(_injected_loop_counter != (_GLF_IDENTITY(_GLF_IDENTITY(0, int(_GLF_IDENTITY(int(0), (int(0)) / 1))), min(0, 0)) & 88854)); _injected_loop_counter --)
    {
     for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
      {
       barrier();
      }
    }
  }
 uint virtual_gid = workgroup_base + _GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(subgroup_id, (true ? subgroup_id : _GLF_FUZZED(packSnorm4x8(vec4(4.0, -1437.9163, _GLF_IDENTITY(2.3, min(2.3, 2.3)), 7269.9827)))))) | (subgroup_id)) * subgroup_size + subgroup_local_id;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   do
    {
     barrier();
    }
   while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
  }
 if(_GLF_DEAD(false))
  barrier();
 uint next_virtual_gid = workgroup_base + subgroup_id * subgroup_size + (_GLF_IDENTITY((subgroup_local_id + 1), ~ (~ ((subgroup_local_id + 1)))) % subgroup_size);
 for(int _injected_loop_counter = _GLF_IDENTITY(1, (1) * ((_GLF_IDENTITY(1, max(1, 1)) << _GLF_IDENTITY(int(6), int(6))) >> _GLF_IDENTITY(_GLF_IDENTITY(int(6), int(6)), max(_GLF_IDENTITY(int(6), int(6)), _GLF_IDENTITY(int(6), int(6)))))); _GLF_WRAPPED_LOOP(_injected_loop_counter > (_GLF_IDENTITY(_GLF_IDENTITY(0, (0) / int(_GLF_ONE(1.0, injectionSwitch.y))), 0 | (_GLF_IDENTITY(_GLF_IDENTITY(0, (0) / int(_GLF_ONE(1.0, injectionSwitch.y))), min(_GLF_IDENTITY(0, (0) / int(_GLF_ONE(1.0, injectionSwitch.y))), _GLF_IDENTITY(0, (0) / int(_GLF_ONE(1.0, injectionSwitch.y))))))) << _GLF_IDENTITY(int(7), int(_GLF_IDENTITY(_GLF_IDENTITY(7, (_GLF_IDENTITY(true, false || (true)) ? 7 : _GLF_FUZZED(sign(atomicOr(_injected_loop_counter, _injected_loop_counter))))), (_GLF_IDENTITY(7, (true ? 7 : _GLF_FUZZED(sign(atomicOr(_injected_loop_counter, _injected_loop_counter)))))) | 0))))); _GLF_IDENTITY(_injected_loop_counter --, (_GLF_IDENTITY(_GLF_IDENTITY(_injected_loop_counter --, (_injected_loop_counter --) | 0), _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(_injected_loop_counter --, _GLF_IDENTITY((_injected_loop_counter --), ((_injected_loop_counter --)) | 0) | 0)) >> int(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(asin(80.88)) : _GLF_ZERO(0.0, injectionSwitch.x)))), (_GLF_IDENTITY((_GLF_IDENTITY(_injected_loop_counter --, (_injected_loop_counter --) | 0)) >> int(_GLF_ZERO(0.0, injectionSwitch.x)), ((_GLF_IDENTITY(_injected_loop_counter --, (_GLF_IDENTITY(_injected_loop_counter --, (_GLF_IDENTITY(_injected_loop_counter --, (true ? _injected_loop_counter -- : _GLF_FUZZED(atomicOr(_injected_loop_counter, -7189))))) / int(_GLF_ONE(1.0, injectionSwitch.y)))) | 0)) >> int(_GLF_ZERO(0.0, injectionSwitch.x))) / 1)) << 0), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY((_GLF_IDENTITY(_injected_loop_counter --, _GLF_IDENTITY((_injected_loop_counter --), ((_injected_loop_counter --)) | 0) | 0)) >> int(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(asin(80.88)) : _GLF_ZERO(0.0, injectionSwitch.x)))), (_GLF_IDENTITY((_GLF_IDENTITY(_injected_loop_counter --, (_injected_loop_counter --) | 0)) >> int(_GLF_ZERO(0.0, injectionSwitch.x)), ((_GLF_IDENTITY(_injected_loop_counter --, (_GLF_IDENTITY(_injected_loop_counter --, (_GLF_IDENTITY(_injected_loop_counter --, (true ? _injected_loop_counter -- : _GLF_FUZZED(atomicOr(_injected_loop_counter, -7189))))) / int(_GLF_ONE(1.0, injectionSwitch.y)))) | 0)) >> int(_GLF_ZERO(0.0, injectionSwitch.x))) / 1)) << 0)), (true ? _GLF_IDENTITY(~ (_GLF_IDENTITY((_GLF_IDENTITY(_injected_loop_counter --, _GLF_IDENTITY((_injected_loop_counter --), ((_injected_loop_counter --)) | 0) | 0)) >> int(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(asin(80.88)) : _GLF_ZERO(0.0, injectionSwitch.x)))), (_GLF_IDENTITY((_GLF_IDENTITY(_injected_loop_counter --, (_injected_loop_counter --) | 0)) >> int(_GLF_ZERO(0.0, injectionSwitch.x)), ((_GLF_IDENTITY(_injected_loop_counter --, (_GLF_IDENTITY(_injected_loop_counter --, (_GLF_IDENTITY(_injected_loop_counter --, (true ? _injected_loop_counter -- : _GLF_FUZZED(atomicOr(_injected_loop_counter, -7189))))) / int(_GLF_ONE(1.0, injectionSwitch.y)))) | 0)) >> int(_GLF_ZERO(0.0, injectionSwitch.x))) / 1)) << 0)), (~ (_GLF_IDENTITY((_GLF_IDENTITY(_injected_loop_counter --, _GLF_IDENTITY((_injected_loop_counter --), ((_injected_loop_counter --)) | 0) | 0)) >> int(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(asin(80.88)) : _GLF_ZERO(0.0, injectionSwitch.x)))), (_GLF_IDENTITY((_GLF_IDENTITY(_injected_loop_counter --, (_injected_loop_counter --) | 0)) >> int(_GLF_ZERO(0.0, injectionSwitch.x)), ((_GLF_IDENTITY(_injected_loop_counter --, (_GLF_IDENTITY(_injected_loop_counter --, (_GLF_IDENTITY(_injected_loop_counter --, (true ? _injected_loop_counter -- : _GLF_FUZZED(atomicOr(_injected_loop_counter, -7189))))) / int(_GLF_ONE(1.0, injectionSwitch.y)))) | 0)) >> int(_GLF_ZERO(0.0, injectionSwitch.x))) / 1)) << 0))) >> 0) : _GLF_FUZZED(-22107))))))) - _GLF_IDENTITY(0, (0) | 0)))
  {
   do
    {
     if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
      {
       atomicStore(buf[virtual_gid], uint(1), 4, 64, 4);
      }
     else
      {
      }
    }
   while(_GLF_WRAPPED_LOOP(false));
  }
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec4(false, true, _GLF_IDENTITY(false, (false) || false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(616.446), _GLF_IDENTITY((injectionSwitch)[1], min((injectionSwitch)[1], (injectionSwitch)[1]))), vec2((injectionSwitch)[0], _GLF_FUZZED((_GLF_IDENTITY(_GLF_IDENTITY(true, bool(bvec4(true, true, false, true))) ? -15.19 : 47.95, min(_GLF_IDENTITY(true, bool(bvec4(true, true, false, true))) ? -15.19 : 47.95, _GLF_IDENTITY(_GLF_IDENTITY(true, bool(bvec4(true, true, false, true))) ? -15.19 : 47.95, clamp(_GLF_IDENTITY(_GLF_IDENTITY(true, bool(bvec4(true, true, false, true))) ? -15.19 : 47.95, (_GLF_IDENTITY(true, bool(bvec4(true, true, false, true))) ? -15.19 : 47.95) / 1.0), _GLF_IDENTITY(true, bool(bvec4(true, true, false, true))) ? -15.19 : 47.95, _GLF_IDENTITY(true, bool(bvec4(true, true, false, true))) ? -15.19 : 47.95))))))), bvec2(true, false))).x > injectionSwitch.y), _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).y)), false || (_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec3(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))), ! (! (_GLF_IDENTITY(false, (false) || false)))))), (_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(-363.017, -5328.9920)))).x > _GLF_IDENTITY(injectionSwitch.y, float(_GLF_IDENTITY(mat2x4(injectionSwitch.y, 1.0, 1.0, 0.0, log(1.0), 0.0, 1.0, sin(0.0)), mat2x4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0) + (mat2x4(injectionSwitch.y, 1.0, 1.0, 0.0, log(1.0), 0.0, 1.0, sin(0.0)))))))), (_GLF_FALSE(_GLF_IDENTITY(false, (false) && true), (injectionSwitch.x > injectionSwitch.y))) && _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y))))) || (! (injectionSwitch.x > injectionSwitch.y)))))), ! (! ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(616.446), _GLF_IDENTITY((injectionSwitch)[1], min(_GLF_IDENTITY((injectionSwitch)[1], min((injectionSwitch)[1], _GLF_IDENTITY((injectionSwitch)[1], float(mat3x2((injectionSwitch)[1], log(1.0), 1.0, 0.0, 1.0, 1.0))))), (injectionSwitch)[1]))), vec2((injectionSwitch)[_GLF_IDENTITY(0, (0) | (0))], _GLF_FUZZED((true ? -15.19 : 47.95))), bvec2(true, false))).x > injectionSwitch.y), _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) || false)))))), (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(_GLF_IDENTITY(false, (false) && true), (injectionSwitch.x > injectionSwitch.y))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) || (! (injectionSwitch.x > injectionSwitch.y))))))))))))
  barrier();
 if(subgroup_local_id + 1 < _GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(min(_GLF_IDENTITY(subgroup_size, (false ? _GLF_FUZZED(next_virtual_gid) : _GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, (subgroup_size) << 0u)) * uint(_GLF_ONE(1.0, injectionSwitch.y))))), subgroup_size), (min(_GLF_IDENTITY(subgroup_size, (false ? _GLF_IDENTITY(_GLF_FUZZED(next_virtual_gid), 0u ^ (_GLF_FUZZED(next_virtual_gid))) : subgroup_size)), subgroup_size)) >> uint(_GLF_ZERO(_GLF_IDENTITY(0.0, (0.0) * exp(0.0)), injectionSwitch.x)))))
  {
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(false, (false) && true) || _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), injectionSwitch)).y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y))) || false), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(vec4(injectionSwitch, 0.0, 1.0))), vec2(injectionSwitch[0], injectionSwitch[1])).y), ((injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(vec4(injectionSwitch, 0.0, 1.0))), vec2(injectionSwitch[0], injectionSwitch[1])).y)) || _GLF_IDENTITY(false, ! (! (false)))))) || false)) || false), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y, min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y) * 1.0), _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y)), true && (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), mix(vec2(_GLF_FUZZED(-5.2), _GLF_FUZZED(553.868)), vec2((_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))[0], _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))[1], mix(float(_GLF_FUZZED(10.70)), float(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))[1], min((_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))[1], (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))[1]))), bool(true)))), bvec2(true, true))).y))) || _GLF_IDENTITY(false, (false) || false))) && true)), true && ((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[_GLF_IDENTITY(0, (0 | 0) | (0))], _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0))[1])).y))) || false), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(9.4, -9.5)))).x > _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], mix(float(_GLF_FUZZED(((5.1 - 91.22)))), float(injectionSwitch[0]), bool(true))), injectionSwitch[1])).y))) || false)) || false), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), min(injectionSwitch, injectionSwitch)).y, min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(-0.1, -0.7)) : injectionSwitch)), injectionSwitch)).y, (_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)) : _GLF_FUZZED(vec2(427.375, 7.2)))), injectionSwitch)).y) * 1.0), _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y)), true && (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y))) || _GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), ! (! (_GLF_IDENTITY(false, (false) || false))))))))) && true)))))))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if(_GLF_WRAPPED_IF_FALSE(false))
          {
          }
         else
          {
           if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
            {
             if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)) : _GLF_FUZZED(vec2(1.0, 6.0)), vec2(_GLF_IDENTITY(mat2x4(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)) : _GLF_FUZZED(vec2(1.0, 6.0)), exp(0.0), 0.0, 0.0, 0.0, 1.0, 1.0), (true ? _GLF_IDENTITY(mat2x4(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)) : _GLF_FUZZED(vec2(1.0, 6.0)), exp(0.0), 0.0, 0.0, 0.0, 1.0, 1.0), (false ? _GLF_FUZZED(mat2x4(88.18, 5.6, 393.893, -3.1, 6966.6117, 56.41, -1.6, 5592.0830)) : mat2x4(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)) : _GLF_FUZZED(vec2(1.0, 6.0)), exp(0.0), 0.0, 0.0, 0.0, 1.0, 1.0))) : _GLF_FUZZED(mat2x4(2.9, -177.332, -671.608, 2109.5514, 85.27, 5.4, -2450.4136, 27.35)))))))).x, min(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)) : _GLF_FUZZED(vec2(1.0, 6.0)), vec2(_GLF_IDENTITY(mat2x4(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)) : _GLF_FUZZED(vec2(1.0, 6.0)), exp(0.0), 0.0, 0.0, 0.0, 1.0, 1.0), (true ? _GLF_IDENTITY(mat2x4(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)) : _GLF_FUZZED(vec2(1.0, 6.0)), exp(0.0), 0.0, 0.0, 0.0, 1.0, 1.0), (false ? _GLF_FUZZED(mat2x4(88.18, 5.6, 393.893, -3.1, 6966.6117, 56.41, -1.6, 5592.0830)) : mat2x4(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)) : _GLF_FUZZED(vec2(1.0, 6.0)), exp(0.0), 0.0, 0.0, 0.0, 1.0, 1.0))) : _GLF_FUZZED(mat2x4(2.9, -177.332, -671.608, 2109.5514, 85.27, 5.4, -2450.4136, 27.35)))))))).x, _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)) : _GLF_FUZZED(vec2(1.0, 6.0)), vec2(_GLF_IDENTITY(mat2x4(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)) : _GLF_FUZZED(vec2(1.0, 6.0)), exp(0.0), 0.0, 0.0, 0.0, 1.0, 1.0), (true ? _GLF_IDENTITY(mat2x4(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)) : _GLF_FUZZED(vec2(1.0, 6.0)), exp(0.0), 0.0, 0.0, 0.0, 1.0, 1.0), (false ? _GLF_FUZZED(mat2x4(88.18, 5.6, 393.893, -3.1, 6966.6117, 56.41, -1.6, 5592.0830)) : mat2x4(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)) : _GLF_FUZZED(vec2(1.0, 6.0)), exp(0.0), 0.0, 0.0, 0.0, 1.0, 1.0))) : _GLF_FUZZED(mat2x4(2.9, -177.332, -671.608, 2109.5514, 85.27, 5.4, -2450.4136, 27.35)))))))).x)) > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat2x3(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), 1.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0), (_GLF_IDENTITY(mat2x3(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), 1.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0), mat3(1.0) * (mat2x3(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), 1.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0)))) - mat2x3(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))))).y, _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-2.9)), float(injectionSwitch.y), bool(true)))))), ((_GLF_IDENTITY(injectionSwitch, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)) : _GLF_FUZZED(vec2(1.0, 6.0)))).x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-2.9)), float(injectionSwitch.y), bool(true))))), (false ? _GLF_FUZZED(9.3) : _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-2.9)), float(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + 0.0)), bool(true))))))))) && true) || false), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, 1.0 * (injectionSwitch.y)), (injectionSwitch.x > injectionSwitch.y) || false), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(mat4(_GLF_IDENTITY(injectionSwitch.y, float(mat3x4(injectionSwitch.y, 0.0, 0.0, exp(0.0), 0.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 1.0, 1.0, 0.0, 0.0))), tan(0.0), 1.0, 0.0, 1.0, abs(1.0), 0.0, abs(1.0), 0.0, sin(0.0), 0.0, 1.0, 1.0, log(1.0), 1.0, cos(0.0)))), (injectionSwitch.x > injectionSwitch.y) || false), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false), bool(bvec2(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false), true)))), false || (! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false), bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false), bool(bvec4(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false), true, true, false))), true)))), ! (! ((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false), bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false), bool(bvec4(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false), true, true, false))), true)))))))))))), bool(bvec3(! (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false), bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false), true))))))), false, true)))))), (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false)), true && (! _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false)), true && ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false)))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))).x > injectionSwitch.y) || false)), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))).x > injectionSwitch.y) || false)), bool(_GLF_IDENTITY(bvec3(! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))).x > injectionSwitch.y) || false)), true, false), bvec3(bvec4(bvec3(! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))).x > injectionSwitch.y) || false)), true, false), true))))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bool(bool(bool(bvec3(_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))).x > injectionSwitch.y) || false)), bool(_GLF_IDENTITY(bvec3(! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))).x > injectionSwitch.y) || false)), true, false), bvec3(bvec4(bvec3(! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))).x > injectionSwitch.y) || false)), true, false), true))))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))), ! (! (_GLF_IDENTITY(! (_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))).x > injectionSwitch.y) || false)), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))).x > injectionSwitch.y) || false)), bool(_GLF_IDENTITY(bvec3(! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))).x > injectionSwitch.y) || false)), true, false), bvec3(bvec4(bvec3(! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))).x > injectionSwitch.y) || false)), true, false), true))))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bool(bool(bool(bvec3(_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))).x > injectionSwitch.y) || false)), bool(_GLF_IDENTITY(bvec3(! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))).x > injectionSwitch.y) || false)), true, false), bvec3(bvec4(bvec3(! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))).x > injectionSwitch.y) || false)), true, false), true))))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))), ! (! (! (_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))).x > injectionSwitch.y) || false)), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))).x > injectionSwitch.y) || false, bool(bvec3((_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))).x > injectionSwitch.y) || false, true, false))))), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))).x > injectionSwitch.y) || false)), ! (! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))).x > injectionSwitch.y) || false))))), true, false), bvec3(bvec4(bvec3(! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(true ? injectionSwitch : _GLF_FUZZED(injectionSwitch), vec2(mat3x2(true ? injectionSwitch : _GLF_FUZZED(injectionSwitch), 0.0, 0.0, 0.0, 0.0))))).x > injectionSwitch.y) || false)), true, false), true))))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(bvec3(bvec4(bvec3(_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))).x > injectionSwitch.y) || false, bool(bvec3((_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))).x > injectionSwitch.y) || false, true, false))))), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))).x > injectionSwitch.y) || false)), ! (! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))).x > injectionSwitch.y) || false))))), true, false), bvec3(bvec4(bvec3(! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(true ? injectionSwitch : _GLF_FUZZED(injectionSwitch), vec2(mat3x2(true ? injectionSwitch : _GLF_FUZZED(injectionSwitch), 0.0, 0.0, 0.0, 0.0))))).x > injectionSwitch.y) || false)), true, false), true))))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true)), bvec3(bvec4(bvec3(bvec4(bvec3(_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))).x > injectionSwitch.y) || false, bool(bvec3((_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))).x > injectionSwitch.y) || false, true, false))))), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))).x > injectionSwitch.y) || false)), ! (! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))).x > injectionSwitch.y) || false))))), true, false), bvec3(bvec4(bvec3(! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(true ? injectionSwitch : _GLF_FUZZED(injectionSwitch), vec2(mat3x2(true ? injectionSwitch : _GLF_FUZZED(injectionSwitch), 0.0, 0.0, 0.0, 0.0))))).x > injectionSwitch.y) || false)), true, false), true))))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true)), false))))), bool(bool(bool(bvec3(_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))).x > injectionSwitch.y) || false, false || (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))).x > injectionSwitch.y) || false, ! (! ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))), (false ? _GLF_FUZZED(injectionSwitch) : _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))))).x > injectionSwitch.y) || false))))))), bool(_GLF_IDENTITY(bvec3(! _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(true ? injectionSwitch : _GLF_FUZZED(injectionSwitch), (false ? _GLF_FUZZED(vec2(-74.84, -1.2)) : _GLF_IDENTITY(true ? injectionSwitch : _GLF_FUZZED(injectionSwitch), vec2(0.0, 0.0) + (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))))))).x > injectionSwitch.y) || false)), bool(bvec2(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(true ? injectionSwitch : _GLF_FUZZED(injectionSwitch), (false ? _GLF_FUZZED(vec2(-74.84, -1.2)) : _GLF_IDENTITY(true ? injectionSwitch : _GLF_FUZZED(injectionSwitch), vec2(0.0, 0.0) + (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))))))).x > injectionSwitch.y) || false)), bool(bvec3((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(true ? injectionSwitch : _GLF_FUZZED(injectionSwitch), (false ? _GLF_FUZZED(vec2(-74.84, -1.2)) : _GLF_IDENTITY(true ? injectionSwitch : _GLF_FUZZED(injectionSwitch), vec2(0.0, 0.0) + (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))))))).x > injectionSwitch.y) || false)), false, true))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), true, false), bvec3(bvec4(bvec3(! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))).x > injectionSwitch.y) || false)), true, false), true))))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))))))))))) || false)))))))
              {
              }
             else
              {
               barrier();
              }
            }
           else
            {
            }
          }
         if(_GLF_DEAD(false))
          {
           if(_GLF_WRAPPED_IF_TRUE(true))
            {
             barrier();
            }
           else
            {
             if(_GLF_DEAD(false))
              {
               if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
                {
                 if(_GLF_DEAD(false))
                  barrier();
                }
               else
                {
                }
               barrier();
              }
            }
           for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter != 0, ! (! (_injected_loop_counter != 0)))); _injected_loop_counter --)
            {
             if(_GLF_DEAD(false))
              barrier();
            }
           if(_GLF_DEAD(false))
            barrier();
          }
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if(_GLF_WRAPPED_IF_FALSE(false))
          {
          }
         else
          {
           if(_GLF_DEAD(false))
            {
             if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              {
              }
             else
              {
               barrier();
              }
            }
          }
         if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y)), (injectionSwitch.x > injectionSwitch.y) || false)) && true))))))))
          {
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            {
             if(_GLF_WRAPPED_IF_TRUE(true))
              {
               if(_GLF_DEAD(false))
                barrier();
              }
             else
              {
              }
             barrier();
            }
           barrier();
          }
        }
       if(_GLF_WRAPPED_IF_FALSE(false))
        {
        }
       else
        {
         if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, false, true)))) && true)) && _GLF_IDENTITY(true, false || (true)))))
          barrier();
        }
       barrier();
       if(_GLF_DEAD(false))
        {
         for(int _injected_loop_counter = int(_GLF_ONE(1.0, injectionSwitch.y)); _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
          {
           if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))
            barrier();
          }
         for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
          {
           barrier();
          }
         if(_GLF_DEAD(false))
          barrier();
        }
       for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < int(_GLF_ONE(1.0, injectionSwitch.y))); _GLF_IDENTITY(_injected_loop_counter ++, 0 | (_injected_loop_counter ++)))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
           if(_GLF_WRAPPED_IF_TRUE(true))
            {
             if(_GLF_WRAPPED_IF_FALSE(false))
              {
              }
             else
              {
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(mat3(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), 0.0, 0.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, determinant(mat2(0.0, 0.0, 1.0, 0.0)), _GLF_ZERO(0.0, injectionSwitch.x), 0.0)))))))
                barrier();
              }
             barrier();
             if(_GLF_DEAD(false))
              barrier();
            }
           else
            {
             if(_GLF_WRAPPED_IF_TRUE(true))
              {
               if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, 0.0 + (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0))), injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)))) > injectionSwitch.y))))
                barrier();
              }
             else
              {
              }
            }
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, false, true), bvec3(bvec3(bvec3(false, false, true)))))), (injectionSwitch.x > injectionSwitch.y))))
              barrier();
             do
              {
               barrier();
              }
             while(_GLF_WRAPPED_LOOP(false));
            }
          }
        }
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
    }
   else
    {
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((false), (_GLF_IDENTITY((false), true && ((false)))) && true)))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0))[0], max(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[0], mix(float(_GLF_IDENTITY(_GLF_FUZZED(5.6), (_GLF_FUZZED(5.6)) - 0.0)), float(_GLF_IDENTITY(injectionSwitch[0], 1.0 * (injectionSwitch[0]))), bool(true))))), injectionSwitch[1])).x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
       do
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch))) - vec2(0.0, 0.0)).y, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch))) - vec2(0.0, 0.0)).y, true && (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch))) - vec2(0.0, 0.0)).y)), bool(bvec2(injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch))), clamp((_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch))), (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch))), (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch))))) - vec2(0.0, 0.0)).y, _GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), bool(bvec4(bool(bool(false)), false, false, true)))))))) && true)))))
            {
             if(_GLF_DEAD(false))
              {
               if(_GLF_DEAD(false))
                barrier();
               barrier();
              }
             barrier();
            }
           if(_GLF_WRAPPED_IF_TRUE(true))
            {
             if(_GLF_DEAD(false))
              barrier();
            }
           else
            {
            }
           barrier();
           if(_GLF_DEAD(false))
            barrier();
          }
        }
       while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), true && (false))));
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(-4524.9874)), bool(false)))))) && true)))
        barrier();
      }
     else
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(_GLF_IDENTITY(true, (true) && true), (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y))))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
         for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
          {
           if(_GLF_DEAD(false))
            barrier();
          }
         barrier();
        }
       else
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
          {
           if(_GLF_DEAD(false))
            barrier();
           do
            {
             barrier();
            }
           while(_GLF_WRAPPED_LOOP(false));
          }
         for(int _injected_loop_counter = ((1 << _GLF_IDENTITY(int(0), int(0))) >> _GLF_IDENTITY(int(0), _GLF_IDENTITY(int(0), (int(0)) | (int(0))))); _GLF_WRAPPED_LOOP(_injected_loop_counter > ((0 ^ 0) >> _GLF_IDENTITY(_GLF_IDENTITY(int(_GLF_IDENTITY(5, ~ (~ (_GLF_IDENTITY(5, (5) | (5)))))), min(int(_GLF_IDENTITY(5, ~ (~ (_GLF_IDENTITY(5, (5) | (5)))))), int(_GLF_IDENTITY(5, ~ (~ (_GLF_IDENTITY(5, (5) | (5)))))))), int(5)))); _injected_loop_counter --)
          {
           if(_GLF_DEAD(false))
            barrier();
          }
         if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
          }
         else
          {
           if(_GLF_DEAD(false))
            {
             do
              {
               barrier();
              }
             while(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(false), ! (! (_GLF_WRAPPED_LOOP(false)))));
            }
           if(_GLF_DEAD(false))
            barrier();
          }
         if(_GLF_DEAD(false))
          barrier();
        }
      }
     if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))), false))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   for(int _injected_loop_counter = ((82538 / -28828) & int(_GLF_ZERO(0.0, injectionSwitch.x))); _GLF_WRAPPED_LOOP(_injected_loop_counter != (_GLF_IDENTITY((1 << _GLF_IDENTITY(int(_GLF_IDENTITY(2, max(_GLF_IDENTITY(2, min(2, 2)), 2))), _GLF_IDENTITY(int(_GLF_IDENTITY(2, clamp(2, _GLF_IDENTITY(2, (_GLF_IDENTITY(2, (2) << 0)) / 1), 2))), int(ivec3(int(2), 0, (0 & -95597)))))) >> _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), _GLF_IDENTITY((int(2)) - 0, (false ? _GLF_FUZZED(_injected_loop_counter) : (int(2)) - 0)))), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY((1 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), int(ivec3(int(2), 0, (0 & -95597)))))) >> _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), ~ (~ (_GLF_IDENTITY(int(2), ~ (~ (_GLF_IDENTITY(int(2), 0 | (int(2)))))))))), _GLF_IDENTITY(min((1 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), int(ivec3(int(2), 0, (0 & -95597)))))) >> _GLF_IDENTITY(int(2), int(2)), (1 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), int(ivec3(int(2), 0, (0 & -95597)))))) >> _GLF_IDENTITY(int(2), int(2))), (min((1 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), int(ivec3(int(2), 0, (0 & -95597)))))) >> _GLF_IDENTITY(int(2), int(2)), (1 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), int(ivec3(int(2), 0, (0 & -95597)))))) >> _GLF_IDENTITY(int(2), int(2)))) >> 0)), clamp(_GLF_IDENTITY((1 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), int(ivec3(int(2), _GLF_IDENTITY(0, int(ivec4(_GLF_IDENTITY(0, (0) ^ 0), 0, 1, 0))), (0 & -95597)))))) >> _GLF_IDENTITY(int(2), int(2)), min((1 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(_GLF_IDENTITY(int(2), int(ivec3(int(2), 0, (0 & -95597)))), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(int(2), int(ivec3(int(2), 0, (0 & -95597))))), (~ (_GLF_IDENTITY(int(2), _GLF_IDENTITY(int(ivec3(int(2), 0, _GLF_IDENTITY((0 & -95597), ~ (~ (_GLF_IDENTITY((0 & -95597), 0 ^ ((0 & -95597)))))))), (_GLF_IDENTITY(int(ivec3(int(2), 0, _GLF_IDENTITY((0 & -95597), ~ (~ (_GLF_IDENTITY((0 & -95597), 0 ^ ((0 & -95597)))))))), clamp(int(ivec3(int(2), 0, _GLF_IDENTITY((0 & -95597), ~ (~ (_GLF_IDENTITY((0 & -95597), 0 ^ ((0 & -95597)))))))), int(ivec3(int(2), 0, _GLF_IDENTITY((0 & -95597), ~ (~ (_GLF_IDENTITY((0 & -95597), 0 ^ ((0 & -95597)))))))), int(ivec3(int(2), 0, _GLF_IDENTITY((0 & -95597), ~ (~ (_GLF_IDENTITY((0 & -95597), 0 ^ ((0 & -95597))))))))))) << 0)))) ^ 0))))) >> _GLF_IDENTITY(_GLF_IDENTITY(int(2), int(2)), (_GLF_IDENTITY(_GLF_IDENTITY(int(2), int(2)), 0 ^ (_GLF_IDENTITY(int(2), int(2))))) - 0), (_GLF_IDENTITY(1 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), int(ivec3(int(2), 0, (0 & -95597))))), ~ (~ (1 << _GLF_IDENTITY(_GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), int(ivec3(int(2), 0, (0 & -95597))))), _GLF_IDENTITY(int(ivec4(_GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), int(ivec3(int(2), 0, (0 & -95597))))), 0, ((1 << _GLF_IDENTITY(int(5), int(5))) >> _GLF_IDENTITY(int(5), int(5))), 1)), (int(_GLF_IDENTITY(ivec4(_GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(ivec3(int(2), 0, (_GLF_IDENTITY(0, min(0, 0)) & -95597))), ~ (~ (int(ivec3(int(2), 0, (_GLF_IDENTITY(0, min(0, 0)) & -95597)))))))), _GLF_IDENTITY(0, int(ivec4(_GLF_IDENTITY(0, (_GLF_IDENTITY(0, (0) | 0)) ^ 0), 0, 0, 0))), ((1 << _GLF_IDENTITY(int(5), int(5))) >> _GLF_IDENTITY(int(5), int(5))), 1), clamp(ivec4(_GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(ivec3(int(2), 0, (_GLF_IDENTITY(0, min(0, 0)) & -95597))), ~ (~ (int(ivec3(int(2), 0, (_GLF_IDENTITY(0, min(0, 0)) & -95597)))))))), _GLF_IDENTITY(0, int(ivec4(_GLF_IDENTITY(0, (_GLF_IDENTITY(0, (0) | 0)) ^ 0), 0, 0, 0))), ((1 << _GLF_IDENTITY(int(5), int(5))) >> _GLF_IDENTITY(int(5), int(5))), 1), ivec4(_GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(ivec3(int(2), 0, (_GLF_IDENTITY(0, min(0, 0)) & -95597))), ~ (~ (int(ivec3(int(2), 0, (_GLF_IDENTITY(0, min(0, 0)) & -95597)))))))), _GLF_IDENTITY(0, int(ivec4(_GLF_IDENTITY(0, (_GLF_IDENTITY(0, (0) | 0)) ^ 0), 0, 0, 0))), ((1 << _GLF_IDENTITY(int(5), int(5))) >> _GLF_IDENTITY(int(5), int(5))), 1), ivec4(_GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(ivec3(int(2), 0, (_GLF_IDENTITY(0, min(0, 0)) & -95597))), ~ (~ (int(ivec3(int(2), 0, (_GLF_IDENTITY(0, min(0, 0)) & -95597)))))))), _GLF_IDENTITY(0, int(ivec4(_GLF_IDENTITY(0, (_GLF_IDENTITY(0, (0) | 0)) ^ 0), 0, 0, 0))), ((1 << _GLF_IDENTITY(int(5), int(5))) >> _GLF_IDENTITY(int(5), int(5))), 1))))) << 0)))))) >> _GLF_IDENTITY(int(2), int(2)))), _GLF_IDENTITY((1 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), int(ivec3(int(2), 0, (0 & -95597)))))) >> _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), ~ (~ (_GLF_IDENTITY(int(2), (_GLF_IDENTITY(int(2), max(int(2), int(2)))) / 1))))), min((1 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(_GLF_IDENTITY(int(2), clamp(int(2), int(2), _GLF_IDENTITY(int(_GLF_IDENTITY(2, (true ? 2 : _GLF_FUZZED(_injected_loop_counter)))), (int(2)) | (_GLF_IDENTITY(int(2), clamp(int(2), int(2), int(2))))))), int(ivec3(int(2), 0, (0 & -95597)))))) >> _GLF_IDENTITY(int(2), int(2)), (1 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(_GLF_IDENTITY(int(2), ~ (_GLF_IDENTITY(~ (int(2)), int(ivec3(~ (int(2)), 1, 0))))), int(ivec3(int(2), 0, _GLF_IDENTITY((0 & -95597), ((0 & -95597)) | ((0 & -95597)))))))) >> _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), min(_GLF_IDENTITY(int(2), int(ivec3(_GLF_IDENTITY(int(2), (int(2)) ^ 0), (1 ^ 0), (0 >> _GLF_IDENTITY(int(0), _GLF_IDENTITY(int(0), (int(0)) + 0)))))), int(2)))))), _GLF_IDENTITY((1 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), int(ivec3(int(2), 0, (_GLF_IDENTITY(0, (0) - 0) & -95597)))))) >> _GLF_IDENTITY(int(2), int(2)), min((1 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(_GLF_IDENTITY(int(2), int(_GLF_IDENTITY(ivec3(int(2), 0, (0 & -95597)), ivec3(0, 0, 0) + (ivec3(int(2), 0, (0 & -95597)))))), (_GLF_IDENTITY(_GLF_IDENTITY(int(2), int(_GLF_IDENTITY(ivec3(int(2), 0, (0 & -95597)), ivec3(0, 0, 0) + (ivec3(int(2), 0, (0 & -95597)))))), _GLF_IDENTITY(int(ivec2(_GLF_IDENTITY(int(2), int(_GLF_IDENTITY(ivec3(int(2), 0, (0 & -95597)), ivec3(0, 0, 0) + (ivec3(int(2), 0, (0 & -95597)))))), 0)), (int(ivec2(_GLF_IDENTITY(int(2), int(_GLF_IDENTITY(ivec3(int(2), 0, (0 & -95597)), ivec3(0, 0, 0) + (ivec3(int(2), 0, (0 & -95597)))))), 0))) ^ 0))) + 0))) >> _GLF_IDENTITY(int(2), int(2)), (1 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), int(ivec3(int(2), 0, (0 & -95597)))))) >> _GLF_IDENTITY(int(_GLF_IDENTITY(2, (2) / 1)), int(2))))))))))); _injected_loop_counter ++)
    {
     atomicStore(buf[next_virtual_gid], uint(_GLF_IDENTITY(2, (_GLF_IDENTITY(2, _GLF_IDENTITY((2) | 0, ((2) | 0) ^ 0))) ^ 0)), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(4, max(4, 4)), _GLF_IDENTITY(0 | (4), 0 ^ _GLF_IDENTITY((_GLF_IDENTITY(0 | (4), 1 * (_GLF_IDENTITY(_GLF_IDENTITY(0 | (4), (0 | (4)) ^ 0), _GLF_IDENTITY((_GLF_IDENTITY(0 | (4), (0 | (4)) ^ 0)), (false ? _GLF_FUZZED(-47907) : _GLF_IDENTITY((_GLF_IDENTITY(0 | (4), (0 | (4)) ^ 0)), ((_GLF_IDENTITY(0 | (4), (0 | (4)) ^ 0))) * 1))) | (_GLF_IDENTITY(0 | (4), (0 | (4)) ^ 0)))))), min(_GLF_IDENTITY((_GLF_IDENTITY(0 | (4), 1 * (_GLF_IDENTITY(_GLF_IDENTITY(0, min(0, 0)) | (4), (0 | (4)) ^ 0)))), ~ (~ ((_GLF_IDENTITY(0 | (4), 1 * (_GLF_IDENTITY(0 | (4), (0 | (4)) ^ 0))))))), (_GLF_IDENTITY(_GLF_IDENTITY(0, (0) ^ 0) | (4), 1 * (_GLF_IDENTITY(0 | (4), (0 | (4)) ^ 0)))))))), max(_GLF_IDENTITY(_GLF_IDENTITY(4, max(4, 4)), _GLF_IDENTITY(_GLF_IDENTITY(0 | (4), max(0 | (4), 0 | (4))), 0 ^ _GLF_IDENTITY((_GLF_IDENTITY(0 | (4), 1 * (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(0 | (4), (0 | (4)) ^ 0), min(_GLF_IDENTITY(0 | (4), (0 | (4)) ^ 0), _GLF_IDENTITY(0 | (4), (0 | (4)) ^ 0))), (_GLF_IDENTITY(_GLF_IDENTITY(0 | (4), max(_GLF_IDENTITY(0 | (4), clamp(0 | (4), 0 | (4), _GLF_IDENTITY(0 | (4), (0 | (4)) >> 0))), 0 | (4))), (0 | (4)) ^ 0)) | (_GLF_IDENTITY(0 | (4), (0 | (4)) ^ 0)))))), min(_GLF_IDENTITY((_GLF_IDENTITY(0 | _GLF_IDENTITY((4), int(ivec4((4), 0, (0 << _GLF_IDENTITY(int(1), int(1))), 0))), 1 * (_GLF_IDENTITY(_GLF_IDENTITY(0, min(0, 0)) | (4), (0 | _GLF_IDENTITY((4), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(_injected_loop_counter) : (4)))) ^ 0)))), ~ (~ ((_GLF_IDENTITY(0 | (4), 1 * (_GLF_IDENTITY(_GLF_IDENTITY(0 | (4), (0 | (4)) - 0), _GLF_IDENTITY((0 | (4)), (false ? _GLF_FUZZED((-- _injected_loop_counter)) : _GLF_IDENTITY((0 | (4)), ((0 | (4))) | ((0 | (4)))))) ^ 0))))))), (_GLF_IDENTITY(0 | (4), 1 * (_GLF_IDENTITY(0 | (4), _GLF_IDENTITY((0 | (4)), ((0 | (4))) << 0) ^ 0)))))))), _GLF_IDENTITY(_GLF_IDENTITY(4, max(4, 4)), _GLF_IDENTITY(0 | (4), 0 ^ _GLF_IDENTITY((_GLF_IDENTITY(0 | (4), 1 * (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(0 | (4), (0 | (4)) ^ 0), (_GLF_IDENTITY(0 | (4), (0 | (4)) ^ 0)) | (_GLF_IDENTITY(0 | (4), (0 | (4)) ^ 0))), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(0 | (4), (0 | (4)) ^ 0), _GLF_IDENTITY((_GLF_IDENTITY(0 | (4), (0 | (4)) ^ 0)), ((_GLF_IDENTITY(0 | (4), (0 | (4)) ^ 0))) / 1) | (_GLF_IDENTITY(0 | (_GLF_IDENTITY(4, int(ivec4(4, 1, 1, 0)))), (0 | (4)) ^ 0))))))))), min(_GLF_IDENTITY((_GLF_IDENTITY(0 | (4), 1 * (_GLF_IDENTITY(_GLF_IDENTITY(0, min(0, 0)) | (4), (0 | (4)) ^ 0)))), ~ (~ ((_GLF_IDENTITY(0 | (4), 1 * (_GLF_IDENTITY(0 | (4), (0 | (4)) ^ 0))))))), (_GLF_IDENTITY(0 | (4), 1 * (_GLF_IDENTITY(0 | (4), (0 | (4)) ^ 0)))))))))), _GLF_IDENTITY(64, (false ? _GLF_FUZZED(85814) : 64)), 4);
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
      }
     else
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(_GLF_IDENTITY(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false), bvec2(bvec3(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false), false))))))), (bool(bool(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(_GLF_IDENTITY(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false), bvec2(bvec3(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false), false)))))))) && true)), bool(bvec2(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bool(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false), bvec2(bvec2(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)))), bvec2(bvec3(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false), false)))))))), false)))))
      {
       for(int _injected_loop_counter = ((0 << _GLF_IDENTITY(int(3), int(3))) | 0); _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
        {
         barrier();
        }
      }
    }
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
    {
     for(int _injected_loop_counter = (_GLF_IDENTITY((0 << _GLF_IDENTITY(int(7), int(7))), ((0 << _GLF_IDENTITY(int(7), int(7)))) | 0) | 0); _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
      {
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))
        barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && _GLF_IDENTITY(_GLF_IDENTITY(true, (true) || false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(true, (true) || false))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
      }
     else
      {
       barrier();
      }
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x < _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(-1.3) : _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(_GLF_IDENTITY(max(_GLF_IDENTITY(injectionSwitch.y, float(mat2x3(injectionSwitch.y, 0.0, 1.0, 0.0, 1.0, 0.0))), injectionSwitch.y), clamp(_GLF_IDENTITY(max(_GLF_IDENTITY(injectionSwitch.y, float(mat2x3(injectionSwitch.y, 0.0, 1.0, 0.0, 1.0, 0.0))), injectionSwitch.y), float(_GLF_IDENTITY(mat4x2(max(_GLF_IDENTITY(injectionSwitch.y, float(mat2x3(injectionSwitch.y, 0.0, 1.0, 0.0, 1.0, 0.0))), injectionSwitch.y), 0.0, round(length(normalize(vec2(1.0, 1.0)))), 1.0, cos(0.0), 0.0, 0.0, 1.0), (_GLF_IDENTITY(true, (true) || false) ? mat4x2(max(_GLF_IDENTITY(injectionSwitch.y, float(mat2x3(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), injectionSwitch)).y, 0.0, 1.0, 0.0, 1.0, 0.0))), injectionSwitch.y), 0.0, round(length(_GLF_IDENTITY(normalize(vec2(1.0, 1.0)), (normalize(vec2(1.0, 1.0))) + vec2(0.0, 0.0)))), 1.0, cos(0.0), _GLF_IDENTITY(0.0, (0.0) - length(vec4(0.0, 0.0, 0.0, 0.0))), 0.0, 1.0) : _GLF_FUZZED(mat4x2(-2.0, 4.2, -64.88, -75.51, 7.2, 0.4, -9655.2280, -9.0)))))), max(_GLF_IDENTITY(injectionSwitch.y, float(mat2x3(injectionSwitch.y, 0.0, 1.0, 0.0, 1.0, 0.0))), injectionSwitch.y), _GLF_IDENTITY(max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, float(mat2x3(injectionSwitch.y, 0.0, 1.0, 0.0, 1.0, 0.0))), min(_GLF_IDENTITY(injectionSwitch.y, float(mat2x3(injectionSwitch.y, 0.0, 1.0, 0.0, 1.0, 0.0))), _GLF_IDENTITY(injectionSwitch.y, float(mat2x3(injectionSwitch.y, 0.0, 1.0, 0.0, 1.0, 0.0))))), _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y), (max(_GLF_IDENTITY(injectionSwitch.y, float(mat2x3(injectionSwitch.y, 0.0, 1.0, 0.0, 1.0, 0.0))), injectionSwitch.y)) - 0.0))), max(_GLF_IDENTITY(max(_GLF_IDENTITY(injectionSwitch.y, float(mat2x3(injectionSwitch.y, 0.0, 1.0, 0.0, 1.0, 0.0))), _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, 0.0 + (_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)))), injectionSwitch.y))), clamp(_GLF_IDENTITY(max(_GLF_IDENTITY(injectionSwitch.y, float(mat2x3(injectionSwitch.y, 0.0, 1.0, 0.0, 1.0, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-3026.9358)), float(0.0), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))), injectionSwitch.y), float(_GLF_IDENTITY(mat4x2(max(_GLF_IDENTITY(injectionSwitch.y, float(mat2x3(injectionSwitch.y, 0.0, _GLF_IDENTITY(1.0, _GLF_IDENTITY(float(_GLF_IDENTITY(vec4(1.0, tan(0.0), sqrt(0.0), 1.0), (vec4(1.0, tan(0.0), sqrt(0.0), 1.0)) * mat4(1.0))), mix(float(_GLF_FUZZED((- -178.400))), float(_GLF_IDENTITY(float(_GLF_IDENTITY(vec4(1.0, tan(0.0), sqrt(0.0), 1.0), (vec4(1.0, tan(0.0), sqrt(0.0), 1.0)) * mat4(1.0))), clamp(float(_GLF_IDENTITY(vec4(1.0, tan(0.0), sqrt(0.0), 1.0), (vec4(1.0, tan(0.0), sqrt(0.0), 1.0)) * mat4(1.0))), float(_GLF_IDENTITY(vec4(1.0, tan(0.0), sqrt(0.0), 1.0), (vec4(1.0, tan(0.0), sqrt(0.0), 1.0)) * mat4(1.0))), float(_GLF_IDENTITY(vec4(1.0, tan(0.0), sqrt(0.0), 1.0), (vec4(1.0, tan(0.0), sqrt(0.0), 1.0)) * mat4(1.0)))))), bool(true)))), 0.0, 1.0, 0.0))), injectionSwitch.y), 0.0, round(length(normalize(vec2(1.0, 1.0)))), 1.0, cos(0.0), 0.0, 0.0, 1.0), (true ? mat4x2(max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], (injectionSwitch[0]) * 1.0), injectionSwitch[1])).y, _GLF_IDENTITY(float(mat2x3(injectionSwitch.y, 0.0, 1.0, 0.0, 1.0, 0.0)), max(float(mat2x3(injectionSwitch.y, 0.0, 1.0, 0.0, 1.0, 0.0)), float(mat2x3(injectionSwitch.y, 0.0, 1.0, 0.0, 1.0, 0.0))))), injectionSwitch.y), 0.0, round(_GLF_IDENTITY(length(normalize(vec2(1.0, 1.0))), (true ? length(normalize(vec2(1.0, 1.0))) : _GLF_FUZZED(-7.7)))), 1.0, cos(0.0), 0.0, 0.0, 1.0) : _GLF_FUZZED(mat4x2(-2.0, 4.2, -64.88, -75.51, 7.2, 0.4, -9655.2280, -9.0)))))), max(_GLF_IDENTITY(injectionSwitch.y, float(mat2x3(injectionSwitch.y, 0.0, 1.0, 0.0, 1.0, 0.0))), injectionSwitch.y), _GLF_IDENTITY(_GLF_IDENTITY(max(_GLF_IDENTITY(injectionSwitch.y, float(mat2x3(injectionSwitch.y, 0.0, 1.0, 0.0, 1.0, 0.0))), injectionSwitch.y), (max(_GLF_IDENTITY(injectionSwitch.y, float(mat2x3(injectionSwitch.y, 0.0, 1.0, 0.0, 1.0, 0.0))), injectionSwitch.y)) - 0.0), mix(float(_GLF_FUZZED(778.148)), float(_GLF_IDENTITY(max(_GLF_IDENTITY(injectionSwitch.y, float(mat2x3(injectionSwitch.y, 0.0, 1.0, 0.0, 1.0, 0.0))), injectionSwitch.y), (max(_GLF_IDENTITY(injectionSwitch.y, float(mat2x3(injectionSwitch.y, 0.0, 1.0, 0.0, 1.0, 0.0))), injectionSwitch.y)) - 0.0)), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), _GLF_IDENTITY(max(_GLF_IDENTITY(injectionSwitch.y, float(mat2x3(injectionSwitch.y, 0.0, 1.0, 0.0, 1.0, 0.0))), injectionSwitch.y), clamp(_GLF_IDENTITY(_GLF_IDENTITY(max(_GLF_IDENTITY(injectionSwitch.y, float(mat2x3(injectionSwitch.y, 0.0, 1.0, 0.0, 1.0, 0.0))), injectionSwitch.y), float(_GLF_IDENTITY(mat4x2(max(_GLF_IDENTITY(injectionSwitch.y, float(mat2x3(injectionSwitch.y, 0.0, 1.0, 0.0, 1.0, 0.0))), injectionSwitch.y), 0.0, round(length(normalize(vec2(1.0, 1.0)))), 1.0, cos(0.0), 0.0, 0.0, 1.0), (true ? mat4x2(max(_GLF_IDENTITY(injectionSwitch.y, float(mat2x3(injectionSwitch.y, 0.0, 1.0, 0.0, 1.0, 0.0))), injectionSwitch.y), 0.0, round(length(normalize(vec2(1.0, 1.0)))), 1.0, cos(0.0), 0.0, 0.0, 1.0) : _GLF_FUZZED(mat4x2(-2.0, 4.2, -64.88, -75.51, 7.2, 0.4, -9655.2280, -9.0)))))), (_GLF_IDENTITY(max(_GLF_IDENTITY(injectionSwitch.y, float(mat2x3(injectionSwitch.y, 0.0, 1.0, 0.0, 1.0, 0.0))), injectionSwitch.y), float(_GLF_IDENTITY(mat4x2(max(_GLF_IDENTITY(injectionSwitch.y, float(mat2x3(injectionSwitch.y, 0.0, 1.0, 0.0, 1.0, 0.0))), injectionSwitch.y), 0.0, round(length(normalize(vec2(1.0, 1.0)))), 1.0, _GLF_IDENTITY(cos(0.0), mix(float(_GLF_FUZZED(2.9)), float(_GLF_IDENTITY(cos(0.0), (false ? _GLF_FUZZED(mix(3.6, -6.1, false)) : cos(0.0)))), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), 0.0, 0.0, 1.0), (true ? mat4x2(max(_GLF_IDENTITY(injectionSwitch.y, float(mat2x3(injectionSwitch.y, 0.0, 1.0, _GLF_IDENTITY(0.0, 1.0 * (0.0)), 1.0, 0.0))), injectionSwitch.y), 0.0, round(length(normalize(vec2(1.0, 1.0)))), 1.0, cos(0.0), 0.0, 0.0, 1.0) : _GLF_FUZZED(mat4x2(-2.0, 4.2, -64.88, -75.51, 7.2, 0.4, -9655.2280, -9.0))))))) + 0.0), max(_GLF_IDENTITY(injectionSwitch.y, float(mat2x3(injectionSwitch.y, 0.0, 1.0, 0.0, 1.0, 0.0))), _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat4(injectionSwitch, 1.0, 0.0, abs(1.0), log(1.0), 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0)), (vec2(mat4(injectionSwitch, 1.0, 0.0, abs(1.0), log(1.0), 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0))) - tan(vec2(0.0, 0.0)))).y), _GLF_IDENTITY(max(_GLF_IDENTITY(injectionSwitch.y, float(mat2x3(injectionSwitch.y, 0.0, 1.0, 0.0, 1.0, 0.0))), injectionSwitch.y), (max(_GLF_IDENTITY(injectionSwitch.y, float(mat2x3(injectionSwitch.y, 0.0, 1.0, 0.0, 1.0, 0.0))), injectionSwitch.y)) - 0.0)))))))))) && (_GLF_IDENTITY(_GLF_DEAD(false), ! _GLF_IDENTITY((! _GLF_IDENTITY(_GLF_IDENTITY((_GLF_DEAD(false)), ((_GLF_DEAD(false))) && true), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((_GLF_DEAD(false)), ((_GLF_DEAD(false))) && true)), bool(bvec4(_GLF_IDENTITY(! (_GLF_IDENTITY((_GLF_DEAD(false)), ((_GLF_DEAD(false))) && true)), true && (! (_GLF_IDENTITY((_GLF_DEAD(false)), ((_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bool(_GLF_DEAD(false))), (bool(bool(_GLF_DEAD(false)))) && true)))) && true)))), true, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))), ((! _GLF_IDENTITY(_GLF_IDENTITY((_GLF_DEAD(false)), ((_GLF_DEAD(false))) && true), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((_GLF_DEAD(false)), ((_GLF_DEAD(false))) && true)), bool(bvec4(! (_GLF_IDENTITY((_GLF_DEAD(false)), ((_GLF_DEAD(false))) && true)), true, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))) || false))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(-1.3) : _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + 0.0), _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0), injectionSwitch.y)), injectionSwitch.y)), _GLF_IDENTITY(max(_GLF_IDENTITY(injectionSwitch.y, float(mat2x3(injectionSwitch.y, 0.0, 1.0, 0.0, 1.0, 0.0))), injectionSwitch.y), clamp(_GLF_IDENTITY(max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, float(mat2x3(injectionSwitch.y, 0.0, 1.0, 0.0, 1.0, 0.0))), max(_GLF_IDENTITY(injectionSwitch.y, float(mat2x3(injectionSwitch.y, 0.0, 1.0, 0.0, 1.0, 0.0))), _GLF_IDENTITY(injectionSwitch.y, float(mat2x3(injectionSwitch.y, 0.0, 1.0, 0.0, 1.0, 0.0))))), injectionSwitch.y), float(_GLF_IDENTITY(mat4x2(max(_GLF_IDENTITY(injectionSwitch.y, float(mat2x3(injectionSwitch.y, 0.0, 1.0, 0.0, 1.0, 0.0))), injectionSwitch.y), 0.0, round(length(normalize(vec2(1.0, 1.0)))), 1.0, cos(0.0), 0.0, 0.0, 1.0), (true ? mat4x2(max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(mat2(injectionSwitch, 1.0, 1.0))).y, float(mat2x3(injectionSwitch.y, 0.0, 1.0, 0.0, 1.0, _GLF_IDENTITY(0.0, max(0.0, 0.0))))), injectionSwitch.y), 0.0, round(length(normalize(vec2(1.0, 1.0)))), 1.0, cos(0.0), 0.0, 0.0, 1.0) : _GLF_FUZZED(mat4x2(-2.0, 4.2, -64.88, -75.51, 7.2, 0.4, -9655.2280, -9.0)))))), max(_GLF_IDENTITY(injectionSwitch.y, float(mat2x3(injectionSwitch.y, 0.0, 1.0, 0.0, 1.0, 0.0))), injectionSwitch.y), _GLF_IDENTITY(max(_GLF_IDENTITY(injectionSwitch.y, float(mat2x3(injectionSwitch.y, 0.0, 1.0, 0.0, _GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-5.1)), float(1.0), bool(true)))) / 1.0), 0.0))), injectionSwitch.y), (max(_GLF_IDENTITY(injectionSwitch.y, float(mat2x3(injectionSwitch.y, 0.0, 1.0, 0.0, 1.0, _GLF_IDENTITY(0.0, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(-6749.5044) : _GLF_IDENTITY(0.0, float(mat3x2(0.0, 0.0, 1.0, 0.0, 1.0, 0.0)))))))), injectionSwitch.y)) - 0.0)))))))), bool(bvec3(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(-1.3) : _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + 0.0), _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0), injectionSwitch.y)), injectionSwitch.y)), _GLF_IDENTITY(max(_GLF_IDENTITY(injectionSwitch.y, float(mat2x3(injectionSwitch.y, 0.0, 1.0, 0.0, 1.0, 0.0))), injectionSwitch.y), clamp(_GLF_IDENTITY(max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, float(mat2x3(injectionSwitch.y, 0.0, 1.0, 0.0, 1.0, 0.0))), max(_GLF_IDENTITY(injectionSwitch.y, float(mat2x3(injectionSwitch.y, 0.0, 1.0, 0.0, 1.0, 0.0))), _GLF_IDENTITY(injectionSwitch.y, float(mat2x3(injectionSwitch.y, 0.0, 1.0, 0.0, 1.0, 0.0))))), injectionSwitch.y), float(_GLF_IDENTITY(mat4x2(max(_GLF_IDENTITY(injectionSwitch.y, float(mat2x3(injectionSwitch.y, 0.0, 1.0, 0.0, 1.0, 0.0))), injectionSwitch.y), 0.0, round(length(normalize(vec2(1.0, 1.0)))), 1.0, cos(0.0), 0.0, 0.0, 1.0), (true ? mat4x2(max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(mat2(injectionSwitch, 1.0, 1.0))).y, float(mat2x3(injectionSwitch.y, 0.0, 1.0, 0.0, 1.0, _GLF_IDENTITY(0.0, max(0.0, 0.0))))), injectionSwitch.y), 0.0, round(length(normalize(vec2(1.0, 1.0)))), 1.0, cos(0.0), 0.0, 0.0, 1.0) : _GLF_FUZZED(mat4x2(-2.0, 4.2, -64.88, -75.51, 7.2, 0.4, -9655.2280, -9.0)))))), max(_GLF_IDENTITY(injectionSwitch.y, float(mat2x3(injectionSwitch.y, 0.0, 1.0, 0.0, 1.0, 0.0))), injectionSwitch.y), _GLF_IDENTITY(max(_GLF_IDENTITY(injectionSwitch.y, float(mat2x3(injectionSwitch.y, 0.0, 1.0, 0.0, _GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-5.1)), float(1.0), bool(true)))) / 1.0), 0.0))), injectionSwitch.y), (max(_GLF_IDENTITY(injectionSwitch.y, float(mat2x3(injectionSwitch.y, 0.0, 1.0, 0.0, 1.0, _GLF_IDENTITY(0.0, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(-6749.5044) : _GLF_IDENTITY(0.0, float(mat3x2(0.0, 0.0, 1.0, 0.0, 1.0, 0.0)))))))), injectionSwitch.y)) - 0.0)))))))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), _GLF_IDENTITY((_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(-1.3) : _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y, _GLF_IDENTITY(max(_GLF_IDENTITY(injectionSwitch.y, float(mat2x3(injectionSwitch.y, 0.0, _GLF_IDENTITY(1.0, max(1.0, 1.0)), _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-6.0)), float(_GLF_IDENTITY(0.0, (0.0) - log(cos(0.0)))), bool(true))), 1.0, 0.0))), _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(-0.2), _GLF_FUZZED(-87.40)), bvec2(false, _GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))), (_GLF_IDENTITY(false, bool(bool(false)))) && true))))))).y), clamp(_GLF_IDENTITY(max(_GLF_IDENTITY(injectionSwitch.y, float(mat2x3(injectionSwitch.y, 0.0, 1.0, 0.0, 1.0, 0.0))), injectionSwitch.y), _GLF_IDENTITY(float(_GLF_IDENTITY(mat4x2(_GLF_IDENTITY(max(_GLF_IDENTITY(injectionSwitch.y, float(mat2x3(injectionSwitch.y, 0.0, 1.0, 0.0, 1.0, 0.0))), injectionSwitch.y), float(mat3(max(_GLF_IDENTITY(injectionSwitch.y, float(mat2x3(injectionSwitch.y, 0.0, 1.0, 0.0, 1.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0))))), injectionSwitch.y), 1.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(cos(0.0), min(cos(_GLF_IDENTITY(0.0, min(0.0, _GLF_IDENTITY(0.0, (0.0) - 0.0)))), cos(0.0))), 0.0, 0.0, 1.0))), 0.0, round(length(normalize(_GLF_IDENTITY(vec2(1.0, 1.0), _GLF_IDENTITY((true ? vec2(1.0, 1.0) : _GLF_FUZZED(injectionSwitch)), vec2(0.0, 0.0) + (_GLF_IDENTITY((true ? vec2(1.0, 1.0) : _GLF_FUZZED(injectionSwitch)), (false ? _GLF_FUZZED(vec2(263.981, 73.92)) : (true ? vec2(1.0, 1.0) : _GLF_FUZZED(injectionSwitch)))))))))), _GLF_IDENTITY(1.0, (1.0) / 1.0), cos(0.0), 0.0, 0.0, 1.0), (true ? mat4x2(max(_GLF_IDENTITY(injectionSwitch.y, float(mat2x3(injectionSwitch.y, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-6.4)), float(0.0), bool(true))), 1.0, 0.0, 1.0, 0.0))), _GLF_IDENTITY(injectionSwitch, vec2(mat3(injectionSwitch, 1.0, sin(0.0), 1.0, log(1.0), 0.0, log(_GLF_IDENTITY(dot(vec4(1.0, 0.0, 0.0, 0.0), vec4(1.0, 0.0, 0.0, _GLF_IDENTITY(0.0, float(_GLF_IDENTITY(mat2(0.0, exp(0.0), _GLF_ONE(1.0, injectionSwitch.y), 0.0), transpose(transpose(_GLF_IDENTITY(mat2(0.0, exp(0.0), _GLF_ONE(1.0, injectionSwitch.y), 0.0), mat2(mat4x3(mat2(0.0, exp(0.0), _GLF_ONE(1.0, injectionSwitch.y), 0.0))))))))))), dot(vec4(1.0, 0.0, 0.0, 0.0), vec4(1.0, 0.0, 0.0, 0.0)))), 0.0))).y), 0.0, round(length(normalize(vec2(1.0, 1.0)))), 1.0, cos(0.0), 0.0, _GLF_IDENTITY(0.0, (0.0) / 1.0), _GLF_IDENTITY(1.0, mix(float(_GLF_IDENTITY(1.0, min(1.0, 1.0))), float(_GLF_FUZZED(9.1)), bool(false)))) : _GLF_FUZZED(mat4x2(-2.0, 4.2, -64.88, -75.51, 7.2, 0.4, -9655.2280, -9.0))))), 0.0 + _GLF_IDENTITY((float(_GLF_IDENTITY(mat4x2(_GLF_IDENTITY(_GLF_IDENTITY(max(_GLF_IDENTITY(injectionSwitch.y, float(mat2x3(injectionSwitch.y, 0.0, 1.0, 0.0, 1.0, 0.0))), _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(5328.1441), _GLF_FUZZED(-3.4)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))), injectionSwitch)).y), max(max(_GLF_IDENTITY(injectionSwitch.y, float(mat2x3(injectionSwitch.y, 0.0, 1.0, 0.0, 1.0, 0.0))), _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(5328.1441), _GLF_FUZZED(-3.4)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))), injectionSwitch)).y), _GLF_IDENTITY(max(_GLF_IDENTITY(injectionSwitch.y, float(mat2x3(injectionSwitch.y, 0.0, 1.0, 0.0, 1.0, 0.0))), _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(5328.1441), _GLF_FUZZED(-3.4)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))), injectionSwitch)).y), (max(_GLF_IDENTITY(injectionSwitch.y, float(mat2x3(injectionSwitch.y, 0.0, 1.0, 0.0, 1.0, 0.0))), _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(5328.1441), _GLF_FUZZED(-3.4)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))), injectionSwitch)).y)) / 1.0))), float(mat3(max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, float(mat2x3(injectionSwitch.y, 0.0, 1.0, 0.0, 1.0, 0.0))), 0.0 + (_GLF_IDENTITY(injectionSwitch.y, float(mat2x3(injectionSwitch.y, 0.0, _GLF_IDENTITY(_GLF_IDENTITY(1.0, _GLF_IDENTITY(float(mat4(1.0, 1.0, 1.0, log(1.0), 1.0, exp(0.0), 0.0, 0.0, 0.0, exp(0.0), 0.0, determinant(mat3(1.0, sqrt(0.0), sqrt(0.0), 1.0, 1.0, 0.0, sqrt(1.0), 1.0, 1.0)), 0.0, 0.0, 1.0, 1.0)), (float(mat4(1.0, 1.0, 1.0, log(1.0), 1.0, exp(0.0), 0.0, 0.0, 0.0, exp(0.0), 0.0, determinant(mat3(1.0, sqrt(0.0), sqrt(0.0), 1.0, 1.0, 0.0, sqrt(1.0), 1.0, 1.0)), 0.0, 0.0, 1.0, 1.0))) / 1.0)), (true ? _GLF_IDENTITY(1.0, _GLF_IDENTITY(float(mat4(1.0, 1.0, 1.0, log(1.0), 1.0, exp(0.0), 0.0, 0.0, 0.0, exp(0.0), 0.0, determinant(mat3(1.0, sqrt(0.0), sqrt(0.0), 1.0, 1.0, 0.0, sqrt(1.0), 1.0, 1.0)), 0.0, 0.0, 1.0, 1.0)), (float(mat4(1.0, 1.0, 1.0, log(1.0), 1.0, exp(0.0), 0.0, 0.0, 0.0, exp(0.0), 0.0, determinant(mat3(1.0, sqrt(0.0), sqrt(0.0), 1.0, 1.0, 0.0, sqrt(1.0), 1.0, 1.0)), 0.0, 0.0, 1.0, 1.0))) / _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-3.2) : 1.0)))) : _GLF_FUZZED(-6.3))), 0.0, 1.0, 0.0))))), injectionSwitch.y), 1.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(cos(0.0), max(cos(0.0), cos(0.0))), 0.0, 0.0, 1.0))), 0.0, round(length(normalize(_GLF_IDENTITY(vec2(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), 1.0), (true ? _GLF_IDENTITY(vec2(1.0, _GLF_IDENTITY(1.0, float(vec2(1.0, 1.0)))), clamp(vec2(1.0, 1.0), _GLF_IDENTITY(vec2(1.0, 1.0), clamp(_GLF_IDENTITY(vec2(1.0, 1.0), (true ? vec2(1.0, 1.0) : _GLF_FUZZED(vec2(2.1, -5.2)))), vec2(1.0, 1.0), vec2(1.0, 1.0))), vec2(1.0, 1.0))) : _GLF_FUZZED(injectionSwitch)))))), _GLF_IDENTITY(1.0, (1.0) / 1.0), cos(_GLF_IDENTITY(0.0, sqrt(0.0) + (0.0))), 0.0, 0.0, 1.0), (true ? mat4x2(max(_GLF_IDENTITY(injectionSwitch.y, float(mat2x3(injectionSwitch.y, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-6.4)), float(0.0), bool(true))), 1.0, 0.0, 1.0, _GLF_IDENTITY(0.0, mix(float(_GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0, 0.0))), float(_GLF_FUZZED(-2.2)), bool(false)))))), injectionSwitch.y), 0.0, round(length(normalize(vec2(1.0, 1.0)))), 1.0, cos(0.0), 0.0, 0.0, 1.0) : _GLF_FUZZED(mat4x2(-2.0, 4.2, -64.88, -75.51, 7.2, 0.4, -9655.2280, -9.0)))))), ((float(_GLF_IDENTITY(mat4x2(_GLF_IDENTITY(_GLF_IDENTITY(max(_GLF_IDENTITY(injectionSwitch.y, float(mat2x3(injectionSwitch.y, 0.0, 1.0, 0.0, 1.0, 0.0))), _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(5328.1441), _GLF_FUZZED(-3.4)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))), injectionSwitch)).y), max(max(_GLF_IDENTITY(injectionSwitch.y, float(mat2x3(injectionSwitch.y, 0.0, 1.0, 0.0, 1.0, 0.0))), _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(5328.1441), _GLF_FUZZED(-3.4)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))), injectionSwitch)).y), _GLF_IDENTITY(max(_GLF_IDENTITY(injectionSwitch.y, float(mat2x3(injectionSwitch.y, 0.0, 1.0, 0.0, 1.0, 0.0))), _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(5328.1441), _GLF_FUZZED(-3.4)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))), injectionSwitch)).y), (max(_GLF_IDENTITY(injectionSwitch.y, float(mat2x3(injectionSwitch.y, 0.0, 1.0, 0.0, 1.0, 0.0))), _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(5328.1441), _GLF_FUZZED(-3.4)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))), injectionSwitch)).y)) / 1.0))), float(mat3(max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, float(mat2x3(injectionSwitch.y, 0.0, 1.0, 0.0, 1.0, 0.0))), 0.0 + (_GLF_IDENTITY(injectionSwitch.y, float(mat2x3(injectionSwitch.y, 0.0, _GLF_IDENTITY(_GLF_IDENTITY(1.0, _GLF_IDENTITY(float(mat4(1.0, 1.0, 1.0, log(1.0), 1.0, exp(0.0), 0.0, 0.0, 0.0, exp(0.0), 0.0, determinant(mat3(1.0, sqrt(0.0), sqrt(0.0), 1.0, 1.0, 0.0, sqrt(1.0), 1.0, 1.0)), 0.0, 0.0, 1.0, 1.0)), (float(mat4(1.0, 1.0, 1.0, log(1.0), 1.0, exp(0.0), 0.0, 0.0, 0.0, exp(0.0), 0.0, determinant(mat3(1.0, sqrt(0.0), sqrt(0.0), 1.0, 1.0, 0.0, sqrt(1.0), 1.0, 1.0)), 0.0, 0.0, 1.0, 1.0))) / 1.0)), (true ? _GLF_IDENTITY(1.0, _GLF_IDENTITY(float(mat4(1.0, 1.0, 1.0, log(1.0), 1.0, exp(0.0), 0.0, 0.0, 0.0, exp(0.0), 0.0, determinant(mat3(1.0, sqrt(0.0), sqrt(0.0), 1.0, 1.0, 0.0, sqrt(1.0), 1.0, 1.0)), 0.0, 0.0, 1.0, 1.0)), (float(mat4(1.0, 1.0, 1.0, log(1.0), 1.0, exp(0.0), 0.0, 0.0, 0.0, exp(0.0), 0.0, determinant(mat3(1.0, sqrt(0.0), sqrt(0.0), 1.0, 1.0, 0.0, sqrt(1.0), 1.0, 1.0)), 0.0, 0.0, 1.0, 1.0))) / _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-3.2) : 1.0)))) : _GLF_FUZZED(-6.3))), 0.0, 1.0, 0.0))))), injectionSwitch.y), 1.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(cos(0.0), max(cos(0.0), cos(0.0))), 0.0, 0.0, 1.0))), 0.0, round(length(normalize(_GLF_IDENTITY(vec2(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), 1.0), (true ? _GLF_IDENTITY(vec2(1.0, _GLF_IDENTITY(1.0, float(vec2(1.0, 1.0)))), clamp(vec2(1.0, 1.0), _GLF_IDENTITY(vec2(1.0, 1.0), clamp(_GLF_IDENTITY(vec2(1.0, 1.0), (true ? vec2(1.0, 1.0) : _GLF_FUZZED(vec2(2.1, -5.2)))), vec2(1.0, 1.0), vec2(1.0, 1.0))), vec2(1.0, 1.0))) : _GLF_FUZZED(injectionSwitch)))))), _GLF_IDENTITY(1.0, (1.0) / 1.0), cos(_GLF_IDENTITY(0.0, sqrt(0.0) + (0.0))), 0.0, 0.0, 1.0), (true ? mat4x2(max(_GLF_IDENTITY(injectionSwitch.y, float(mat2x3(injectionSwitch.y, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-6.4)), float(0.0), bool(true))), 1.0, 0.0, 1.0, _GLF_IDENTITY(0.0, mix(float(_GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0, 0.0))), float(_GLF_FUZZED(-2.2)), bool(false)))))), injectionSwitch.y), 0.0, round(length(normalize(vec2(1.0, 1.0)))), 1.0, cos(0.0), 0.0, 0.0, 1.0) : _GLF_FUZZED(mat4x2(-2.0, 4.2, -64.88, -75.51, 7.2, 0.4, -9655.2280, -9.0))))))) - log(1.0)))), max(_GLF_IDENTITY(injectionSwitch.y, float(mat2x3(injectionSwitch.y, 0.0, 1.0, 0.0, 1.0, _GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, max(0.0, 0.0)), _GLF_IDENTITY(0.0, (true ? _GLF_IDENTITY(0.0, max(0.0, 0.0)) : _GLF_FUZZED(2.5)))))))), _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-515.439)), vec2(_GLF_FUZZED((_GLF_IDENTITY(+ (_GLF_IDENTITY(-132.813 * -9.6, (_GLF_IDENTITY(-132.813 * -9.6, float(vec2(-132.813 * -9.6, 0.0)))) - 0.0)), (+ (-132.813 * -9.6)) * _GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(5.5) : 1.0))) + log(1.0))))), (injectionSwitch)[1]), bvec2(false, true))).y), _GLF_IDENTITY(max(_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(mat2x3(injectionSwitch.y, 0.0, 1.0, 0.0, 1.0, 0.0)), min(_GLF_IDENTITY(float(mat2x3(injectionSwitch.y, 0.0, 1.0, 0.0, _GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, min(1.0, 1.0)), 1.0)), 0.0)), min(float(mat2x3(injectionSwitch.y, 0.0, _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-46.86)), float(1.0), bool(true))), _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(6.4) : 0.0)), 1.0, 0.0)), float(mat2x3(injectionSwitch.y, 0.0, _GLF_IDENTITY(1.0, (1.0) * determinant(mat4(1.0, 0.0, 0.0, length(0.0), 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0))), 0.0, 1.0, 0.0)))), float(mat2x3(injectionSwitch.y, 0.0, 1.0, 0.0, 1.0, 0.0))))), injectionSwitch.y), (max(_GLF_IDENTITY(injectionSwitch.y, float(mat2x3(injectionSwitch.y, 0.0, 1.0, 0.0, 1.0, 0.0))), injectionSwitch.y)) - 0.0))))))))), bool(bool((_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(-1.3) : _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y, _GLF_IDENTITY(max(_GLF_IDENTITY(injectionSwitch.y, float(mat2x3(injectionSwitch.y, 0.0, _GLF_IDENTITY(1.0, max(1.0, 1.0)), _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-6.0)), float(0.0), bool(true))), 1.0, 0.0))), _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(-0.2), _GLF_FUZZED(-87.40)), bvec2(false, _GLF_IDENTITY(false, bool(bool(false)))))).y), clamp(_GLF_IDENTITY(max(_GLF_IDENTITY(injectionSwitch.y, float(mat2x3(injectionSwitch.y, 0.0, 1.0, 0.0, 1.0, 0.0))), injectionSwitch.y), _GLF_IDENTITY(float(_GLF_IDENTITY(mat4x2(_GLF_IDENTITY(max(_GLF_IDENTITY(injectionSwitch.y, float(mat2x3(injectionSwitch.y, 0.0, 1.0, 0.0, 1.0, 0.0))), injectionSwitch.y), float(mat3(max(_GLF_IDENTITY(injectionSwitch.y, float(mat2x3(injectionSwitch.y, 0.0, 1.0, 0.0, 1.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0))))), injectionSwitch.y), 1.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(cos(0.0), min(cos(0.0), cos(0.0))), 0.0, 0.0, 1.0))), 0.0, round(length(normalize(_GLF_IDENTITY(vec2(1.0, 1.0), (true ? vec2(1.0, 1.0) : _GLF_FUZZED(injectionSwitch)))))), _GLF_IDENTITY(1.0, (1.0) / 1.0), cos(0.0), 0.0, 0.0, 1.0), (true ? mat4x2(max(_GLF_IDENTITY(injectionSwitch.y, float(mat2x3(injectionSwitch.y, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-6.4)), float(0.0), bool(true))), 1.0, 0.0, 1.0, 0.0))), _GLF_IDENTITY(injectionSwitch, vec2(mat3(injectionSwitch, 1.0, sin(0.0), 1.0, log(1.0), 0.0, log(_GLF_IDENTITY(dot(vec4(1.0, 0.0, 0.0, 0.0), vec4(1.0, 0.0, 0.0, 0.0)), dot(vec4(1.0, 0.0, 0.0, 0.0), vec4(1.0, 0.0, 0.0, 0.0)))), 0.0))).y), 0.0, round(length(normalize(vec2(1.0, 1.0)))), 1.0, cos(0.0), 0.0, 0.0, 1.0) : _GLF_FUZZED(mat4x2(-2.0, 4.2, -64.88, -75.51, 7.2, 0.4, -9655.2280, -9.0))))), 0.0 + (float(_GLF_IDENTITY(mat4x2(_GLF_IDENTITY(max(_GLF_IDENTITY(injectionSwitch.y, float(mat2x3(injectionSwitch.y, 0.0, 1.0, 0.0, 1.0, 0.0))), _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(5328.1441), _GLF_FUZZED(-3.4)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))), injectionSwitch)).y), float(mat3(max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, float(mat2x3(injectionSwitch.y, 0.0, 1.0, 0.0, 1.0, 0.0))), 0.0 + (_GLF_IDENTITY(injectionSwitch.y, float(mat2x3(injectionSwitch.y, 0.0, _GLF_IDENTITY(1.0, _GLF_IDENTITY(float(mat4(1.0, 1.0, 1.0, log(1.0), 1.0, exp(0.0), 0.0, 0.0, 0.0, exp(0.0), 0.0, determinant(mat3(1.0, sqrt(0.0), sqrt(0.0), 1.0, 1.0, 0.0, sqrt(1.0), 1.0, 1.0)), 0.0, 0.0, 1.0, 1.0)), (float(mat4(1.0, 1.0, 1.0, log(1.0), 1.0, exp(0.0), 0.0, 0.0, 0.0, exp(0.0), 0.0, determinant(mat3(1.0, sqrt(0.0), sqrt(0.0), 1.0, 1.0, 0.0, sqrt(1.0), 1.0, 1.0)), 0.0, 0.0, 1.0, 1.0))) / 1.0)), 0.0, 1.0, 0.0))))), injectionSwitch.y), 1.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(cos(0.0), max(cos(0.0), cos(0.0))), 0.0, 0.0, 1.0))), 0.0, round(length(normalize(_GLF_IDENTITY(vec2(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), 1.0), (true ? _GLF_IDENTITY(vec2(1.0, 1.0), clamp(vec2(1.0, 1.0), _GLF_IDENTITY(vec2(1.0, 1.0), clamp(_GLF_IDENTITY(vec2(1.0, 1.0), (true ? vec2(1.0, 1.0) : _GLF_FUZZED(vec2(2.1, -5.2)))), vec2(1.0, 1.0), vec2(1.0, 1.0))), vec2(1.0, 1.0))) : _GLF_FUZZED(injectionSwitch)))))), _GLF_IDENTITY(1.0, (1.0) / 1.0), cos(_GLF_IDENTITY(0.0, sqrt(0.0) + (0.0))), 0.0, 0.0, 1.0), (true ? mat4x2(max(_GLF_IDENTITY(injectionSwitch.y, float(mat2x3(injectionSwitch.y, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-6.4)), float(0.0), bool(true))), 1.0, 0.0, 1.0, _GLF_IDENTITY(0.0, mix(float(_GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0, 0.0))), float(_GLF_FUZZED(-2.2)), bool(false)))))), injectionSwitch.y), 0.0, round(length(normalize(vec2(1.0, 1.0)))), 1.0, cos(0.0), 0.0, 0.0, 1.0) : _GLF_FUZZED(mat4x2(-2.0, 4.2, -64.88, -75.51, 7.2, 0.4, -9655.2280, -9.0)))))))), max(_GLF_IDENTITY(injectionSwitch.y, float(mat2x3(injectionSwitch.y, 0.0, 1.0, 0.0, 1.0, _GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, max(0.0, 0.0)), _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(2.5)))))))), _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-515.439)), vec2(_GLF_FUZZED((_GLF_IDENTITY(+ (-132.813 * -9.6), (+ (-132.813 * -9.6)) * 1.0))), (injectionSwitch)[1]), bvec2(false, true))).y), _GLF_IDENTITY(max(_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(mat2x3(injectionSwitch.y, 0.0, 1.0, 0.0, 1.0, 0.0)), min(_GLF_IDENTITY(float(mat2x3(injectionSwitch.y, 0.0, 1.0, 0.0, 1.0, 0.0)), min(float(mat2x3(injectionSwitch.y, 0.0, _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-46.86)), float(1.0), bool(true))), 0.0, 1.0, 0.0)), float(mat2x3(injectionSwitch.y, 0.0, 1.0, 0.0, 1.0, 0.0)))), float(mat2x3(injectionSwitch.y, 0.0, 1.0, 0.0, 1.0, 0.0))))), injectionSwitch.y), (max(_GLF_IDENTITY(injectionSwitch.y, float(mat2x3(injectionSwitch.y, 0.0, 1.0, 0.0, 1.0, 0.0))), injectionSwitch.y)) - 0.0)))))), false || (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(-1.3) : _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y, _GLF_IDENTITY(max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(mix(990.289, -3.5, 644.123)))), float(mat2x3(injectionSwitch.y, 0.0, _GLF_IDENTITY(1.0, max(1.0, 1.0)), _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-6.0)), float(0.0), bool(true))), 1.0, 0.0))), _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(-0.2), _GLF_FUZZED(-87.40)), bvec2(false, _GLF_IDENTITY(false, bool(bool(false)))))).y), clamp(_GLF_IDENTITY(max(_GLF_IDENTITY(injectionSwitch.y, float(mat2x3(injectionSwitch.y, 0.0, 1.0, 0.0, 1.0, 0.0))), injectionSwitch.y), _GLF_IDENTITY(float(_GLF_IDENTITY(mat4x2(_GLF_IDENTITY(max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, float(mat2x3(injectionSwitch.y, 0.0, 1.0, 0.0, 1.0, 0.0))), (_GLF_IDENTITY(injectionSwitch.y, float(mat2x3(injectionSwitch.y, 0.0, 1.0, 0.0, 1.0, 0.0)))) - 0.0), injectionSwitch.y), float(mat3(max(_GLF_IDENTITY(injectionSwitch.y, float(mat2x3(injectionSwitch.y, 0.0, 1.0, 0.0, 1.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0))))), injectionSwitch.y), 1.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(_GLF_IDENTITY(cos(0.0), mix(float(cos(0.0)), float(_GLF_FUZZED(-410.737)), bool(false))), min(cos(0.0), cos(0.0))), 0.0, 0.0, 1.0))), 0.0, round(length(normalize(_GLF_IDENTITY(vec2(1.0, 1.0), (true ? vec2(1.0, 1.0) : _GLF_FUZZED(injectionSwitch)))))), _GLF_IDENTITY(1.0, (1.0) / 1.0), cos(0.0), 0.0, 0.0, 1.0), (true ? mat4x2(max(_GLF_IDENTITY(injectionSwitch.y, float(mat2x3(injectionSwitch.y, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(_GLF_IDENTITY(-6.4, (_GLF_IDENTITY(-6.4, (-6.4) / 1.0)) + 0.0))), _GLF_IDENTITY(float(0.0), mix(float(float(0.0)), float(_GLF_FUZZED((-21.38 + float(1103u)))), bool(false))), bool(true))), 1.0, 0.0, 1.0, 0.0))), _GLF_IDENTITY(injectionSwitch, vec2(mat3(injectionSwitch, 1.0, sin(0.0), 1.0, log(1.0), 0.0, log(_GLF_IDENTITY(dot(vec4(1.0, 0.0, 0.0, 0.0), vec4(1.0, 0.0, 0.0, 0.0)), dot(vec4(1.0, 0.0, 0.0, 0.0), vec4(1.0, 0.0, 0.0, 0.0)))), 0.0))).y), 0.0, round(length(normalize(vec2(1.0, 1.0)))), 1.0, cos(0.0), 0.0, 0.0, 1.0) : _GLF_FUZZED(mat4x2(-2.0, 4.2, -64.88, -75.51, _GLF_IDENTITY(7.2, clamp(7.2, 7.2, _GLF_IDENTITY(7.2, (7.2) + 0.0))), 0.4, -9655.2280, -9.0))))), 0.0 + (float(_GLF_IDENTITY(mat4x2(_GLF_IDENTITY(max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, float(mat2x3(injectionSwitch.y, 1.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 0.0)))) - 0.0), float(mat2x3(injectionSwitch.y, 0.0, 1.0, 0.0, 1.0, 0.0))), _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(5328.1441), _GLF_FUZZED(-3.4)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))), injectionSwitch)).y), float(mat3(max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, float(mat2x3(injectionSwitch.y, _GLF_IDENTITY(0.0, min(0.0, 0.0)), 1.0, 0.0, 1.0, 0.0))), 0.0 + (_GLF_IDENTITY(injectionSwitch.y, float(mat2x3(injectionSwitch.y, 0.0, _GLF_IDENTITY(1.0, _GLF_IDENTITY(float(mat4(1.0, 1.0, 1.0, log(1.0), 1.0, exp(0.0), 0.0, 0.0, 0.0, exp(0.0), 0.0, determinant(mat3(1.0, sqrt(0.0), sqrt(0.0), 1.0, 1.0, 0.0, sqrt(1.0), 1.0, 1.0)), 0.0, 0.0, 1.0, 1.0)), (float(mat4(1.0, 1.0, 1.0, _GLF_IDENTITY(log(1.0), min(log(1.0), _GLF_IDENTITY(log(1.0), (log(1.0)) + 0.0))), 1.0, exp(0.0), 0.0, 0.0, 0.0, exp(0.0), 0.0, determinant(mat3(1.0, sqrt(0.0), sqrt(0.0), 1.0, 1.0, 0.0, sqrt(1.0), 1.0, 1.0)), 0.0, 0.0, 1.0, 1.0))) / 1.0)), 0.0, 1.0, 0.0))))), injectionSwitch.y), 1.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(cos(0.0), max(cos(0.0), cos(0.0))), 0.0, 0.0, 1.0))), _GLF_IDENTITY(0.0, 1.0 * (0.0)), round(length(normalize(_GLF_IDENTITY(vec2(_GLF_IDENTITY(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), (_GLF_IDENTITY(1.0, _GLF_IDENTITY(clamp(1.0, 1.0, 1.0), min(clamp(1.0, 1.0, 1.0), clamp(1.0, 1.0, 1.0))))) / determinant(mat3(1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0))), 1.0), (true ? _GLF_IDENTITY(vec2(1.0, 1.0), clamp(_GLF_IDENTITY(vec2(1.0, 1.0), vec2(1.0, 1.0) * (vec2(1.0, 1.0))), _GLF_IDENTITY(vec2(1.0, 1.0), clamp(_GLF_IDENTITY(vec2(1.0, 1.0), (true ? vec2(_GLF_IDENTITY(1.0, mix(float(_GLF_IDENTITY(1.0, float(float(1.0)))), float(_GLF_FUZZED(380.887)), bool(false))), 1.0) : _GLF_FUZZED(vec2(2.1, -5.2)))), vec2(1.0, 1.0), vec2(1.0, 1.0))), vec2(1.0, 1.0))) : _GLF_FUZZED(injectionSwitch)))))), _GLF_IDENTITY(1.0, (1.0) / 1.0), cos(_GLF_IDENTITY(0.0, sqrt(0.0) + (0.0))), 0.0, 0.0, 1.0), (true ? mat4x2(max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, float(mat2x3(injectionSwitch.y, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-6.4)), float(0.0), bool(true))), 1.0, 0.0, 1.0, _GLF_IDENTITY(0.0, mix(float(_GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0, 0.0))), float(_GLF_FUZZED(-2.2)), bool(false)))))), min(_GLF_IDENTITY(injectionSwitch.y, float(mat2x3(injectionSwitch.y, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-6.4)), float(0.0), bool(true))), 1.0, 0.0, 1.0, _GLF_IDENTITY(0.0, mix(float(_GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0, 0.0))), float(_GLF_FUZZED(-2.2)), bool(false)))))), _GLF_IDENTITY(injectionSwitch.y, float(mat2x3(injectionSwitch.y, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-6.4)), float(0.0), bool(true))), 1.0, 0.0, 1.0, _GLF_IDENTITY(0.0, mix(float(_GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0, 0.0))), float(_GLF_FUZZED(-2.2)), bool(false)))))))), injectionSwitch.y), 0.0, round(length(_GLF_IDENTITY(normalize(vec2(1.0, 1.0)), (_GLF_IDENTITY(normalize(vec2(1.0, 1.0)), clamp(normalize(vec2(1.0, 1.0)), _GLF_IDENTITY(normalize(vec2(1.0, 1.0)), clamp(normalize(vec2(1.0, 1.0)), normalize(vec2(1.0, 1.0)), normalize(vec2(1.0, 1.0)))), normalize(vec2(1.0, 1.0))))) / vec2(1.0, 1.0)))), 1.0, cos(0.0), 0.0, 0.0, 1.0) : _GLF_FUZZED(mat4x2(-2.0, 4.2, -64.88, -75.51, 7.2, 0.4, -9655.2280, -9.0)))))))), max(_GLF_IDENTITY(injectionSwitch.y, float(mat2x3(injectionSwitch.y, 0.0, 1.0, 0.0, 1.0, _GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, float(_GLF_IDENTITY(mat3(0.0, 0.0, 0.0, abs(0.0), 1.0, abs(1.0), 1.0, 0.0, 0.0), transpose(transpose(mat3(0.0, 0.0, 0.0, abs(0.0), 1.0, abs(1.0), 1.0, 0.0, 0.0)))))), 0.0)), _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(2.5)))))))), _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-515.439)), vec2(_GLF_FUZZED((_GLF_IDENTITY(+ (-132.813 * -9.6), (+ (_GLF_IDENTITY(-132.813 * -9.6, max(-132.813 * -9.6, _GLF_IDENTITY(-132.813 * -9.6, (-132.813 * -9.6) / _GLF_ONE(1.0, injectionSwitch.y)))))) * 1.0))), (injectionSwitch)[1]), bvec2(false, true))).y), _GLF_IDENTITY(max(_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(mat2x3(injectionSwitch.y, 0.0, 1.0, 0.0, 1.0, 0.0)), min(_GLF_IDENTITY(_GLF_IDENTITY(float(mat2x3(injectionSwitch.y, 0.0, 1.0, 0.0, 1.0, 0.0)), min(float(mat2x3(injectionSwitch.y, 0.0, _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-46.86)), float(1.0), bool(true))), 0.0, 1.0, 0.0)), float(mat2x3(injectionSwitch.y, 0.0, 1.0, 0.0, 1.0, 0.0)))), mix(float(_GLF_FUZZED(616.475)), float(_GLF_IDENTITY(_GLF_IDENTITY(float(mat2x3(injectionSwitch.y, 0.0, 1.0, 0.0, 1.0, 0.0)), min(float(mat2x3(injectionSwitch.y, 0.0, _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-46.86)), float(1.0), bool(true))), 0.0, 1.0, 0.0)), float(mat2x3(injectionSwitch.y, 0.0, 1.0, 0.0, 1.0, 0.0)))), float(vec3(_GLF_IDENTITY(float(mat2x3(injectionSwitch.y, 0.0, 1.0, 0.0, 1.0, 0.0)), min(float(mat2x3(injectionSwitch.y, 0.0, _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-46.86)), float(1.0), bool(true))), 0.0, 1.0, 0.0)), float(mat2x3(injectionSwitch.y, 0.0, 1.0, 0.0, 1.0, 0.0)))), 0.0, 1.0)))), bool(true))), float(mat2x3(injectionSwitch.y, 0.0, 1.0, _GLF_IDENTITY(0.0, (0.0) * 1.0), 1.0, 0.0))))), injectionSwitch.y), _GLF_IDENTITY((max(_GLF_IDENTITY(injectionSwitch.y, float(mat2x3(injectionSwitch.y, _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(float(true))), bool(false))), 1.0, 0.0, _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), 0.0))), injectionSwitch.y)), max(_GLF_IDENTITY((max(_GLF_IDENTITY(injectionSwitch.y, float(mat2x3(injectionSwitch.y, _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(float(true))), bool(false))), 1.0, 0.0, _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), 0.0))), injectionSwitch.y)), float(mat2x4((max(_GLF_IDENTITY(injectionSwitch.y, float(mat2x3(injectionSwitch.y, _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(float(true))), bool(false))), 1.0, 0.0, _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), 0.0))), injectionSwitch.y)), _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(1.0, 0.0)), dot(vec2(0.0, 1.0), vec2(1.0, 0.0))), 0.0, 1.0, 1.0, 0.0, 1.0, 0.0))), (max(_GLF_IDENTITY(injectionSwitch.y, float(mat2x3(injectionSwitch.y, _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(float(true))), bool(false))), 1.0, 0.0, _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), 0.0))), injectionSwitch.y)))) - 0.0)))))))))))))) || _GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(0.0)), float(injectionSwitch.x), bool(true))) > injectionSwitch.y, _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(0.0)), float(injectionSwitch.x), bool(true))) > injectionSwitch.y)), _GLF_IDENTITY(bool(bvec4(bool(bool(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(0.0)), float(injectionSwitch.x), bool(true))) > injectionSwitch.y)), true, true, false)), false || (bool(bvec4(bool(bool(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(0.0)), float(injectionSwitch.x), bool(true))) > injectionSwitch.y)), true, true, false))))))))) && (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) && true)))), ! (_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_DEAD(false)), ((_GLF_DEAD(false))) && true), ! (_GLF_IDENTITY(! (! _GLF_IDENTITY((_GLF_DEAD(false)), ((_GLF_DEAD(false))) && true)), bool(bvec4(! (! _GLF_IDENTITY((_GLF_DEAD(false)), ((_GLF_DEAD(false))) && true)), true, true, false)))))))))))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)))))
    barrier();
   subgroupAll(false);
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
    }
   else
    {
     if(_GLF_DEAD(false))
      barrier();
    }
  }
 else
  {
   atomicStore(buf[next_virtual_gid], uint(2), 4, 64, 4);
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != ((0 ^ 1) ^ 0)); _injected_loop_counter ++)
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).y, false || (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), max(mat2(1.0) * (injectionSwitch), _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), (mat2(1.0) * (injectionSwitch)) - vec2(0.0, 0.0))))).y))))))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_WRAPPED_IF_TRUE(true))
            {
             barrier();
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              barrier();
            }
           else
            {
            }
          }
        }
       else
        {
         if(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), (! (_GLF_DEAD(false))) && true))))
          {
           if(_GLF_WRAPPED_IF_FALSE(false))
            {
            }
           else
            {
             barrier();
            }
          }
        }
       if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (_GLF_IDENTITY(! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true && (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(vec4(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)), 1.0, 1.0, 1.0))))))))))))
        barrier();
       barrier();
      }
    }
   for(int _injected_loop_counter = (((1 << _GLF_IDENTITY(_GLF_IDENTITY(int(7), (int(7)) - int(_GLF_ZERO(0.0, injectionSwitch.x))), int(7))) >> _GLF_IDENTITY(int(7), _GLF_IDENTITY(int(7), 0 | (int(7))))) | 1); _GLF_WRAPPED_LOOP(_injected_loop_counter > (0 << _GLF_IDENTITY(int(3), _GLF_IDENTITY(int(_GLF_IDENTITY(3, _GLF_IDENTITY(int(ivec2(3, 0)), (true ? int(ivec2(3, 0)) : _GLF_FUZZED(min(-73688, 38788)))))), (int(_GLF_IDENTITY(_GLF_IDENTITY(3, (3) << 0), int(ivec3(_GLF_IDENTITY(3, (3) << 0), (0 ^ 1), 1))))) - 0)))); _injected_loop_counter --)
    {
     if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(false, bool(bvec4(false, true, false, false))))), (bool(bool(_GLF_IDENTITY(false, bool(bvec4(false, true, false, false)))))) || false))))
      {
       if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, false)), ! (! _GLF_IDENTITY((bool(bvec2(false, false))), false || ((bool(bvec2(false, false))))))))), ! (_GLF_IDENTITY(! ((_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, false)), ! (! _GLF_IDENTITY((bool(bvec2(false, false))), false || ((bool(bvec2(false, false)))))))))), false || (! ((_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, false)), ! (! _GLF_IDENTITY((bool(bvec2(false, false))), false || ((bool(bvec2(false, false)))))))))))))), bool(bvec2(! (_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec2(false, false)), ! (! (bool(bvec2(false, false))))), ! (! (_GLF_IDENTITY(bool(bvec2(false, false)), ! (! (bool(bvec2(false, false)))))))))), false)))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(false, false), _GLF_IDENTITY(bvec2(bvec4(bvec2(false, false), false, false)), bvec2(bvec3(bvec2(bvec4(bvec2(false, false), false, false)), false))))), ! (! _GLF_IDENTITY((bool(bvec2(false, false))), false || ((bool(bvec2(false, false))))))))), bool(bvec2(! (_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, false)), ! (! (bool(bvec2(false, false)))))), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, false)), ! (! (bool(bvec2(false, false)))))))), ! (! (bool(bool(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, false)), ! (! (bool(bvec2(false, false))))))))))))), false)))))), false || (_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), _GLF_IDENTITY(bool(bvec2(false, false)), ! (! _GLF_IDENTITY((bool(bvec2(false, false))), false || ((bool(bvec2(false, false))))))))), bool(bvec2(! (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, false)), ! (! (bool(bvec2(_GLF_IDENTITY(false, ! (! (false))), false))))))), false))))))))), ! (! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, false)), ! (! _GLF_IDENTITY((bool(bvec2(false, false))), false || ((bool(bvec2(false, _GLF_IDENTITY(false, (false) || false)))))))))), bool(bvec2(! (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, false)), ! (! (bool(bvec2(false, false))))))), false)))))), false || (_GLF_DEAD(_GLF_IDENTITY(false, ! _GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, false)), ! (! _GLF_IDENTITY((bool(bvec2(false, false))), false || ((bool(bvec2(false, false))))))))), bool(bvec2(_GLF_IDENTITY(! (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, false)), ! (! (bool(bvec2(false, false))))))), bool(bvec3(! (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, false)), ! (! (bool(bvec2(false, false))))))), false, true))), false)))), ((_GLF_IDENTITY(! (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, false)), ! (! _GLF_IDENTITY((bool(bvec2(false, false))), false || ((bool(bvec2(false, false))))))))), bool(bvec2(_GLF_IDENTITY(! (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, false)), ! (! (bool(bvec2(false, false))))))), bool(bvec3(! (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, false)), ! (! (bool(bvec2(false, false))))))), false, true))), false))))) && true))))))))))))
        {
         do
          {
           for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter != (0 << _GLF_IDENTITY(int(2), int(2))), ! (! (_injected_loop_counter != (0 << _GLF_IDENTITY(int(2), int(2))))))); _injected_loop_counter --)
            {
             if(_GLF_DEAD(false))
              barrier();
            }
           barrier();
           if(_GLF_DEAD(false))
            barrier();
          }
         while(_GLF_WRAPPED_LOOP(false));
        }
      }
     else
      {
       if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false), (_GLF_DEAD(false)) && true))
        barrier();
       do
        {
         if(_GLF_WRAPPED_IF_FALSE(false))
          {
          }
         else
          {
           if(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), ! (! (_GLF_WRAPPED_IF_TRUE(true)))))
            {
             if(_GLF_DEAD(false))
              barrier();
             if(_GLF_DEAD(false))
              {
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                barrier();
               if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(false || (false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && _GLF_IDENTITY((false || (false)), false || ((false || (false))))))))
                {
                 if(_GLF_DEAD(false))
                  barrier();
                 for(int _injected_loop_counter = (1 & 1); _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
                  {
                   if(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), bool(bool(_GLF_WRAPPED_IF_TRUE(true)))))
                    {
                     if(_GLF_DEAD(false))
                      {
                       if(_GLF_DEAD(false))
                        barrier();
                       barrier();
                      }
                     barrier();
                     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                      {
                       if(_GLF_WRAPPED_IF_TRUE(true))
                        {
                         barrier();
                        }
                       else
                        {
                        }
                      }
                    }
                   else
                    {
                    }
                  }
                }
               if(_GLF_DEAD(false))
                barrier();
               barrier();
              }
             if(_GLF_DEAD(false))
              barrier();
            }
           else
            {
            }
          }
         if(_GLF_DEAD(false))
          {
           if(_GLF_WRAPPED_IF_FALSE(false))
            {
            }
           else
            {
             if(_GLF_WRAPPED_IF_TRUE(true))
              {
               if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY((false) || false, true && ((false) || false)))))
                {
                 do
                  {
                   barrier();
                  }
                 while(_GLF_WRAPPED_LOOP(false));
                }
               if(_GLF_DEAD(false))
                barrier();
              }
             else
              {
              }
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              barrier();
            }
           if(_GLF_WRAPPED_IF_FALSE(false))
            {
            }
           else
            {
             if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_DEAD(false)))))
              barrier();
            }
           if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), ! (! (_GLF_WRAPPED_IF_TRUE(true)))), ! (! (_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), ! (! (_GLF_WRAPPED_IF_TRUE(true))))))))
            {
             if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec3(_GLF_DEAD(false), true, _GLF_IDENTITY(false, false || (false)))), bool(bvec3(bool(bvec3(_GLF_DEAD(false), true, _GLF_IDENTITY(false, false || (false)))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)))))
              barrier();
            }
           else
            {
            }
           barrier();
          }
        }
       while(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(false || ((injectionSwitch.x > injectionSwitch.y)), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false || ((injectionSwitch.x > injectionSwitch.y)), (false || ((injectionSwitch.x > injectionSwitch.y))) || false), true, false), bvec3(bvec3(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false || ((injectionSwitch.x > injectionSwitch.y)), ! (! (false || ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y))))))), (false || ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false))))))) || false), true, false))))))))), (_GLF_WRAPPED_LOOP(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(false || ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), injectionSwitch, injectionSwitch)).y)), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false || ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-0.2)), float(injectionSwitch.y), bool(true))))), (false || ((injectionSwitch.x > injectionSwitch.y))) || false), true, false), bvec3(bvec3(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false || ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), ! (! (false || ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y))))))), (false || ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))) || false))))))) || false), _GLF_IDENTITY(true, (_GLF_IDENTITY(true, bool(bvec2(true, true)))) && true), false)))))))))) || false));
      }
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
        }
       if(_GLF_DEAD(false))
        {
         for(int _injected_loop_counter = int(_GLF_ZERO(0.0, injectionSwitch.x)); _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_GLF_IDENTITY(_injected_loop_counter != int(_GLF_ONE(1.0, injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_injected_loop_counter != int(_GLF_ONE(1.0, injectionSwitch.y)))), true && (_injected_loop_counter != int(_GLF_ONE(1.0, injectionSwitch.y))))); _injected_loop_counter ++)
          {
           barrier();
          }
        }
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
      {
       if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))
        barrier();
       subgroupAll(true);
      }
     else
      {
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
        barrier();
       if(_GLF_WRAPPED_IF_FALSE(false))
        {
        }
       else
        {
         if(_GLF_DEAD(false))
          barrier();
        }
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
    }
   else
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))), true && (_GLF_DEAD(false))))
      {
       do
        {
         barrier();
        }
       while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
      }
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), ! (_GLF_IDENTITY(! (_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), (_GLF_IDENTITY(! (_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), bool(bvec3(! (true), false, true))))), _GLF_IDENTITY((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch))) / vec2(1.0, 1.0)).y), bool(bool((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch))) / vec2(1.0, 1.0)).y))))))), bool(bvec3(! (_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x < _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0))))), _GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), ! (! (_GLF_IDENTITY(false, (false) || false)))), true)))) || false))))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, float(mat2x3(injectionSwitch.y, 0.0, 0.0, 0.0, 1.0, 1.0))), injectionSwitch.y))) / 1.0, min(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, float(mat2x3(injectionSwitch.y, 0.0, 0.0, 0.0, 1.0, 1.0))), injectionSwitch.y))) / 1.0, float(vec2((_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, float(mat2x3(injectionSwitch.y, 0.0, 0.0, 0.0, 1.0, 1.0))), injectionSwitch.y))) / 1.0, 1.0))), (_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, float(mat2x3(injectionSwitch.y, 0.0, 0.0, 0.0, 1.0, 1.0))), injectionSwitch.y))) / 1.0)))), ! (! ((_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + 0.0), injectionSwitch.y)), float(mat2x3(injectionSwitch.y, 0.0, 0.0, 0.0, 1.0, 1.0))), injectionSwitch.y))) / 1.0)))))), true && (_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, float(mat2x3(injectionSwitch.y, 0.0, 0.0, 0.0, 1.0, 1.0))), injectionSwitch.y))) / 1.0), bool(bvec4(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, float(mat2x3(injectionSwitch.y, 0.0, 0.0, 0.0, 1.0, 1.0))), injectionSwitch.y))) / 1.0), false, true, true)))), ! (! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, float(mat2x3(injectionSwitch.y, 0.0, 0.0, 0.0, 1.0, 1.0))), injectionSwitch.y))) / 1.0))))))))), bool(bool(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, float(mat2x3(injectionSwitch.y, 0.0, 0.0, 0.0, 1.0, 1.0))), injectionSwitch.y))) / 1.0)), ! (! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, float(mat2x3(injectionSwitch.y, 0.0, 0.0, 0.0, 1.0, 1.0))), injectionSwitch.y))) / 1.0)))))), true && (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, float(mat2x3(injectionSwitch.y, 0.0, 0.0, 0.0, 1.0, 1.0))), injectionSwitch.y))) / 1.0)), ! (! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, float(mat2x3(injectionSwitch.y, 0.0, 0.0, 0.0, 1.0, 1.0))), injectionSwitch.y))) / 1.0))))))))), ! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, float(mat2x3(injectionSwitch.y, 0.0, 0.0, 0.0, 1.0, 1.0))), injectionSwitch.y))) / 1.0)), ! (! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, float(mat2x3(injectionSwitch.y, 0.0, 0.0, 0.0, 1.0, 1.0))), injectionSwitch.y))) / 1.0)))))), true && (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, float(mat2x3(injectionSwitch.y, 0.0, 0.0, 0.0, 1.0, 1.0))), injectionSwitch.y))) / 1.0)), ! (! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, float(mat2x3(injectionSwitch.y, 0.0, 0.0, 0.0, 1.0, 1.0))), injectionSwitch.y))) / 1.0))))))))), (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, float(mat2x3(injectionSwitch.y, 0.0, 0.0, 0.0, 1.0, 1.0))), injectionSwitch.y))) / 1.0)), ! (! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, float(mat2x3(injectionSwitch.y, 0.0, 0.0, 0.0, 1.0, 1.0))), injectionSwitch.y))) / 1.0)))))), true && _GLF_IDENTITY((_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, float(mat2x3(injectionSwitch.y, 0.0, 0.0, 0.0, 1.0, 1.0))), injectionSwitch.y))) / _GLF_IDENTITY(1.0, 1.0 * (1.0)))), ! (! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, float(mat2x3(_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(98.39, 3969.7507)) : injectionSwitch)), injectionSwitch)).y, 0.0, 0.0, 0.0, 1.0, 1.0))), injectionSwitch.y))) / 1.0))))))), ((_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, float(mat2x3(injectionSwitch.y, 0.0, 0.0, 0.0, 1.0, 1.0))), injectionSwitch.y))) / _GLF_IDENTITY(1.0, 1.0 * (1.0)))), ! (! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, float(mat2x3(_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(98.39, 3969.7507)) : injectionSwitch)), injectionSwitch)).y, 0.0, 0.0, 0.0, 1.0, 1.0))), injectionSwitch.y))) / 1.0)))))))) || false)))) && true))))))))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), _GLF_IDENTITY((false), _GLF_IDENTITY(((false)) || false, (((false)) || false) || false)) || false)))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
    }
   else
    {
    }
  }
 for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
  {
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
  barrier();
}
