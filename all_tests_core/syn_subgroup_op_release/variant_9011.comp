#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


struct _GLF_struct_5 {
 vec2 _f0;
 bvec4 _f1;
 vec3 _f2;
 float _f3;
 ivec3 _f4;
 mat2 _f5;
 bvec2 _f6;
} ;

struct _GLF_struct_6 {
 _GLF_struct_5 _f0;
 mat3x4 _f1;
 vec4 _f2;
 mat4 _f3;
 ivec4 _f4;
 mat2x4 _f5;
} ;

struct _GLF_struct_4 {
 uint virtual_gid;
 uvec4 _f0;
 mat2 _f1;
} ;

struct _GLF_struct_3 {
 vec3 _f0;
 mat4x2 _f1;
 mat4 _f2;
} ;

struct _GLF_struct_1 {
 mat3 _f0;
 ivec2 _f1;
} ;

struct _GLF_struct_0 {
 mat3 _f0;
 ivec3 _f1;
 mat2 _f2;
} ;

struct _GLF_struct_2 {
 mat3 _f0;
 _GLF_struct_0 _f1;
 _GLF_struct_1 _f2;
} ;

struct _GLF_struct_7 {
 _GLF_struct_2 _f0;
 bvec3 _f1;
 _GLF_struct_3 _f2;
 uvec4 _f3;
 bvec2 _f4;
 _GLF_struct_4 _f5;
 _GLF_struct_6 _f6;
} ;

layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(false))
  return;
 for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter, max(_injected_loop_counter, _injected_loop_counter)) != (0 & -29243)); _injected_loop_counter --)
  {
   for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
    {
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) || false)))))), (_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, ! (! (false))))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        continue;
       return;
      }
    }
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 uint subgroup_size = gl_SubgroupSize;
 uint subgroup_local_id = gl_SubgroupInvocationID;
 uint num_workgroup = gl_NumWorkGroups.x;
 uint workgroup_size = _GLF_IDENTITY(gl_WorkGroupSize, clamp(gl_WorkGroupSize, gl_WorkGroupSize, gl_WorkGroupSize)).x;
 if(_GLF_DEAD(false))
  return;
 uint workgroup_id = _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, (_GLF_IDENTITY(gl_WorkGroupID, uvec3(_GLF_IDENTITY(_GLF_IDENTITY(uvec3(gl_WorkGroupID), (_GLF_IDENTITY(uvec3(gl_WorkGroupID), max(_GLF_IDENTITY(uvec3(gl_WorkGroupID), uvec3(uvec3(uvec3(gl_WorkGroupID)))), uvec3(_GLF_IDENTITY(gl_WorkGroupID, (false ? _GLF_FUZZED(uvec3(177214u, 7218u, 170216u)) : gl_WorkGroupID)))))) * uvec3(1u, 1u, 1u)), min(_GLF_IDENTITY(uvec3(gl_WorkGroupID), (uvec3(gl_WorkGroupID)) * uvec3(_GLF_IDENTITY(1u, min(1u, 1u)), 1u, 1u)), _GLF_IDENTITY(uvec3(gl_WorkGroupID), (_GLF_IDENTITY(uvec3(gl_WorkGroupID), _GLF_IDENTITY((uvec3(gl_WorkGroupID)) - uvec3(_GLF_IDENTITY(0u, (0u) / 1u), 0u, 0u), ((uvec3(gl_WorkGroupID)) - uvec3(_GLF_IDENTITY(0u, (0u) / 1u), 0u, 0u)) >> uvec3(0u, 0u, 0u)))) * uvec3(1u, 1u, 1u))))))) << uvec3(0u, 0u, 0u)).x, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, (_GLF_IDENTITY(gl_WorkGroupID, uvec3(_GLF_IDENTITY(_GLF_IDENTITY(uvec3(gl_WorkGroupID), (uvec3(gl_WorkGroupID)) * uvec3(1u, 1u, 1u)), _GLF_IDENTITY(min(_GLF_IDENTITY(uvec3(gl_WorkGroupID), (uvec3(_GLF_IDENTITY(gl_WorkGroupID, _GLF_IDENTITY(uvec3(uvec4(gl_WorkGroupID, 1u)), clamp(uvec3(uvec4(gl_WorkGroupID, 1u)), _GLF_IDENTITY(uvec3(uvec4(gl_WorkGroupID, 1u)), (uvec3(uvec4(gl_WorkGroupID, 1u))) | uvec3(0u, 0u, 0u)), uvec3(uvec4(gl_WorkGroupID, 1u))))))) * uvec3(1u, 1u, 1u)), _GLF_IDENTITY(uvec3(gl_WorkGroupID), (_GLF_IDENTITY(uvec3(gl_WorkGroupID), (uvec3(gl_WorkGroupID)) - uvec3(0u, 0u, 0u))) * uvec3(1u, 1u, 1u))), (true ? _GLF_IDENTITY(min(_GLF_IDENTITY(uvec3(gl_WorkGroupID), (uvec3(_GLF_IDENTITY(gl_WorkGroupID, _GLF_IDENTITY(uvec3(uvec4(gl_WorkGroupID, 1u)), clamp(uvec3(uvec4(gl_WorkGroupID, 1u)), _GLF_IDENTITY(uvec3(uvec4(gl_WorkGroupID, 1u)), (uvec3(uvec4(gl_WorkGroupID, 1u))) | uvec3(0u, 0u, 0u)), uvec3(uvec4(gl_WorkGroupID, 1u))))))) * uvec3(1u, 1u, 1u)), _GLF_IDENTITY(uvec3(gl_WorkGroupID), (_GLF_IDENTITY(uvec3(gl_WorkGroupID), (uvec3(gl_WorkGroupID)) - uvec3(0u, 0u, 0u))) * uvec3(1u, 1u, 1u))), uvec3(uvec4(min(_GLF_IDENTITY(uvec3(gl_WorkGroupID), (uvec3(_GLF_IDENTITY(gl_WorkGroupID, _GLF_IDENTITY(uvec3(uvec4(gl_WorkGroupID, 1u)), clamp(uvec3(uvec4(gl_WorkGroupID, 1u)), _GLF_IDENTITY(uvec3(uvec4(gl_WorkGroupID, 1u)), (uvec3(uvec4(gl_WorkGroupID, 1u))) | uvec3(0u, 0u, 0u)), uvec3(uvec4(gl_WorkGroupID, 1u))))))) * uvec3(1u, 1u, 1u)), _GLF_IDENTITY(uvec3(gl_WorkGroupID), (_GLF_IDENTITY(uvec3(gl_WorkGroupID), (uvec3(gl_WorkGroupID)) - uvec3(0u, 0u, 0u))) * uvec3(1u, 1u, 1u))), 1u))) : _GLF_FUZZED(uvec3(12018u, 178808u, 45397u)))))))) << uvec3(0u, 0u, 0u)).x, clamp(_GLF_IDENTITY(gl_WorkGroupID, (_GLF_IDENTITY(gl_WorkGroupID, uvec3(_GLF_IDENTITY(_GLF_IDENTITY(uvec3(gl_WorkGroupID), (uvec3(gl_WorkGroupID)) * uvec3(1u, 1u, 1u)), _GLF_IDENTITY(min(_GLF_IDENTITY(uvec3(gl_WorkGroupID), (uvec3(_GLF_IDENTITY(gl_WorkGroupID, _GLF_IDENTITY(uvec3(uvec4(gl_WorkGroupID, 1u)), clamp(uvec3(uvec4(gl_WorkGroupID, 1u)), _GLF_IDENTITY(uvec3(uvec4(gl_WorkGroupID, 1u)), (uvec3(uvec4(gl_WorkGroupID, 1u))) | uvec3(0u, 0u, 0u)), uvec3(uvec4(gl_WorkGroupID, 1u))))))) * uvec3(1u, 1u, 1u)), _GLF_IDENTITY(uvec3(gl_WorkGroupID), (_GLF_IDENTITY(uvec3(gl_WorkGroupID), (uvec3(gl_WorkGroupID)) - uvec3(0u, 0u, 0u))) * uvec3(1u, 1u, 1u))), (true ? _GLF_IDENTITY(min(_GLF_IDENTITY(uvec3(gl_WorkGroupID), (uvec3(_GLF_IDENTITY(gl_WorkGroupID, _GLF_IDENTITY(uvec3(uvec4(gl_WorkGroupID, 1u)), clamp(uvec3(uvec4(gl_WorkGroupID, 1u)), _GLF_IDENTITY(uvec3(uvec4(gl_WorkGroupID, 1u)), (uvec3(uvec4(gl_WorkGroupID, 1u))) | uvec3(0u, 0u, 0u)), uvec3(uvec4(gl_WorkGroupID, 1u))))))) * uvec3(1u, 1u, 1u)), _GLF_IDENTITY(uvec3(gl_WorkGroupID), (_GLF_IDENTITY(uvec3(gl_WorkGroupID), (uvec3(gl_WorkGroupID)) - uvec3(0u, 0u, 0u))) * uvec3(1u, 1u, 1u))), uvec3(uvec4(min(_GLF_IDENTITY(uvec3(gl_WorkGroupID), (uvec3(_GLF_IDENTITY(gl_WorkGroupID, _GLF_IDENTITY(uvec3(uvec4(gl_WorkGroupID, 1u)), clamp(uvec3(uvec4(gl_WorkGroupID, 1u)), _GLF_IDENTITY(uvec3(uvec4(gl_WorkGroupID, 1u)), (uvec3(uvec4(gl_WorkGroupID, 1u))) | uvec3(0u, 0u, 0u)), uvec3(uvec4(gl_WorkGroupID, 1u))))))) * uvec3(1u, 1u, 1u)), _GLF_IDENTITY(uvec3(gl_WorkGroupID), (_GLF_IDENTITY(uvec3(gl_WorkGroupID), (uvec3(gl_WorkGroupID)) - uvec3(0u, 0u, 0u))) * uvec3(1u, 1u, 1u))), 1u))) : _GLF_FUZZED(uvec3(12018u, 178808u, 45397u)))))))) << uvec3(0u, 0u, 0u)).x, _GLF_IDENTITY(gl_WorkGroupID, (_GLF_IDENTITY(gl_WorkGroupID, uvec3(_GLF_IDENTITY(_GLF_IDENTITY(uvec3(gl_WorkGroupID), (uvec3(gl_WorkGroupID)) * uvec3(1u, 1u, 1u)), _GLF_IDENTITY(min(_GLF_IDENTITY(uvec3(gl_WorkGroupID), (uvec3(_GLF_IDENTITY(gl_WorkGroupID, _GLF_IDENTITY(uvec3(uvec4(gl_WorkGroupID, 1u)), clamp(uvec3(uvec4(gl_WorkGroupID, 1u)), _GLF_IDENTITY(uvec3(uvec4(gl_WorkGroupID, 1u)), (uvec3(uvec4(gl_WorkGroupID, 1u))) | uvec3(0u, 0u, 0u)), uvec3(uvec4(gl_WorkGroupID, 1u))))))) * uvec3(1u, 1u, 1u)), _GLF_IDENTITY(uvec3(gl_WorkGroupID), (_GLF_IDENTITY(uvec3(gl_WorkGroupID), (uvec3(gl_WorkGroupID)) - uvec3(0u, 0u, 0u))) * uvec3(1u, 1u, 1u))), (true ? _GLF_IDENTITY(min(_GLF_IDENTITY(uvec3(gl_WorkGroupID), (uvec3(_GLF_IDENTITY(gl_WorkGroupID, _GLF_IDENTITY(uvec3(uvec4(gl_WorkGroupID, 1u)), clamp(uvec3(uvec4(gl_WorkGroupID, 1u)), _GLF_IDENTITY(uvec3(uvec4(gl_WorkGroupID, 1u)), (uvec3(uvec4(gl_WorkGroupID, 1u))) | uvec3(0u, 0u, 0u)), uvec3(uvec4(gl_WorkGroupID, 1u))))))) * uvec3(1u, 1u, 1u)), _GLF_IDENTITY(uvec3(gl_WorkGroupID), (_GLF_IDENTITY(uvec3(gl_WorkGroupID), (uvec3(gl_WorkGroupID)) - uvec3(0u, 0u, 0u))) * uvec3(1u, 1u, 1u))), uvec3(uvec4(min(_GLF_IDENTITY(uvec3(gl_WorkGroupID), (uvec3(_GLF_IDENTITY(gl_WorkGroupID, _GLF_IDENTITY(uvec3(uvec4(gl_WorkGroupID, 1u)), clamp(uvec3(uvec4(gl_WorkGroupID, 1u)), _GLF_IDENTITY(uvec3(uvec4(gl_WorkGroupID, 1u)), (uvec3(uvec4(gl_WorkGroupID, 1u))) | uvec3(0u, 0u, 0u)), uvec3(uvec4(gl_WorkGroupID, 1u))))))) * uvec3(1u, 1u, 1u)), _GLF_IDENTITY(uvec3(gl_WorkGroupID), (_GLF_IDENTITY(uvec3(gl_WorkGroupID), (uvec3(gl_WorkGroupID)) - uvec3(0u, 0u, 0u))) * uvec3(1u, 1u, 1u))), 1u))) : _GLF_FUZZED(uvec3(12018u, 178808u, 45397u)))))))) << uvec3(0u, 0u, 0u)).x, _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, (_GLF_IDENTITY(gl_WorkGroupID, uvec3(_GLF_IDENTITY(_GLF_IDENTITY(uvec3(gl_WorkGroupID), (uvec3(gl_WorkGroupID)) * uvec3(1u, 1u, 1u)), _GLF_IDENTITY(min(_GLF_IDENTITY(uvec3(gl_WorkGroupID), (uvec3(_GLF_IDENTITY(gl_WorkGroupID, _GLF_IDENTITY(uvec3(uvec4(gl_WorkGroupID, 1u)), clamp(uvec3(uvec4(gl_WorkGroupID, 1u)), _GLF_IDENTITY(uvec3(uvec4(gl_WorkGroupID, 1u)), (uvec3(uvec4(gl_WorkGroupID, 1u))) | uvec3(0u, 0u, 0u)), uvec3(uvec4(gl_WorkGroupID, 1u))))))) * uvec3(1u, 1u, 1u)), _GLF_IDENTITY(uvec3(gl_WorkGroupID), (_GLF_IDENTITY(uvec3(gl_WorkGroupID), (uvec3(gl_WorkGroupID)) - uvec3(0u, 0u, 0u))) * uvec3(1u, 1u, 1u))), (true ? _GLF_IDENTITY(min(_GLF_IDENTITY(uvec3(gl_WorkGroupID), (uvec3(_GLF_IDENTITY(gl_WorkGroupID, _GLF_IDENTITY(uvec3(uvec4(gl_WorkGroupID, 1u)), clamp(uvec3(uvec4(gl_WorkGroupID, 1u)), _GLF_IDENTITY(uvec3(uvec4(gl_WorkGroupID, 1u)), (uvec3(uvec4(gl_WorkGroupID, 1u))) | uvec3(0u, 0u, 0u)), uvec3(uvec4(gl_WorkGroupID, 1u))))))) * uvec3(1u, 1u, 1u)), _GLF_IDENTITY(uvec3(gl_WorkGroupID), (_GLF_IDENTITY(uvec3(gl_WorkGroupID), (uvec3(gl_WorkGroupID)) - uvec3(0u, 0u, 0u))) * uvec3(1u, 1u, 1u))), uvec3(uvec4(min(_GLF_IDENTITY(uvec3(gl_WorkGroupID), (uvec3(_GLF_IDENTITY(gl_WorkGroupID, _GLF_IDENTITY(uvec3(uvec4(gl_WorkGroupID, 1u)), clamp(uvec3(uvec4(gl_WorkGroupID, 1u)), _GLF_IDENTITY(uvec3(uvec4(gl_WorkGroupID, 1u)), (uvec3(uvec4(gl_WorkGroupID, 1u))) | uvec3(0u, 0u, 0u)), uvec3(uvec4(gl_WorkGroupID, 1u))))))) * uvec3(1u, 1u, 1u)), _GLF_IDENTITY(uvec3(gl_WorkGroupID), (_GLF_IDENTITY(uvec3(gl_WorkGroupID), (uvec3(gl_WorkGroupID)) - uvec3(0u, 0u, 0u))) * uvec3(1u, 1u, 1u))), 1u))) : _GLF_FUZZED(uvec3(12018u, 178808u, 45397u)))))))) << uvec3(0u, 0u, 0u)).x, _GLF_IDENTITY(uint(uvec4(_GLF_IDENTITY(gl_WorkGroupID, (_GLF_IDENTITY(gl_WorkGroupID, uvec3(_GLF_IDENTITY(_GLF_IDENTITY(uvec3(gl_WorkGroupID), (uvec3(gl_WorkGroupID)) * uvec3(1u, 1u, 1u)), _GLF_IDENTITY(min(_GLF_IDENTITY(uvec3(gl_WorkGroupID), (uvec3(_GLF_IDENTITY(gl_WorkGroupID, _GLF_IDENTITY(uvec3(uvec4(gl_WorkGroupID, 1u)), clamp(uvec3(uvec4(gl_WorkGroupID, 1u)), _GLF_IDENTITY(uvec3(uvec4(gl_WorkGroupID, 1u)), (uvec3(uvec4(gl_WorkGroupID, 1u))) | uvec3(0u, 0u, 0u)), uvec3(uvec4(gl_WorkGroupID, 1u))))))) * uvec3(1u, 1u, 1u)), _GLF_IDENTITY(uvec3(gl_WorkGroupID), (_GLF_IDENTITY(uvec3(gl_WorkGroupID), (uvec3(gl_WorkGroupID)) - uvec3(0u, 0u, 0u))) * uvec3(1u, 1u, 1u))), (true ? _GLF_IDENTITY(min(_GLF_IDENTITY(uvec3(gl_WorkGroupID), (uvec3(_GLF_IDENTITY(gl_WorkGroupID, _GLF_IDENTITY(uvec3(uvec4(gl_WorkGroupID, 1u)), clamp(uvec3(uvec4(gl_WorkGroupID, 1u)), _GLF_IDENTITY(uvec3(uvec4(gl_WorkGroupID, 1u)), (uvec3(uvec4(gl_WorkGroupID, 1u))) | uvec3(0u, 0u, 0u)), uvec3(uvec4(gl_WorkGroupID, 1u))))))) * uvec3(1u, 1u, 1u)), _GLF_IDENTITY(uvec3(gl_WorkGroupID), (_GLF_IDENTITY(uvec3(gl_WorkGroupID), (uvec3(gl_WorkGroupID)) - uvec3(0u, 0u, 0u))) * uvec3(1u, 1u, 1u))), uvec3(uvec4(min(_GLF_IDENTITY(uvec3(gl_WorkGroupID), (uvec3(_GLF_IDENTITY(gl_WorkGroupID, _GLF_IDENTITY(uvec3(uvec4(gl_WorkGroupID, 1u)), clamp(uvec3(uvec4(gl_WorkGroupID, 1u)), _GLF_IDENTITY(uvec3(uvec4(gl_WorkGroupID, 1u)), (uvec3(uvec4(gl_WorkGroupID, 1u))) | uvec3(0u, 0u, 0u)), uvec3(uvec4(gl_WorkGroupID, 1u))))))) * uvec3(1u, 1u, 1u)), _GLF_IDENTITY(uvec3(gl_WorkGroupID), (_GLF_IDENTITY(uvec3(gl_WorkGroupID), (uvec3(gl_WorkGroupID)) - uvec3(0u, 0u, 0u))) * uvec3(1u, 1u, 1u))), 1u))) : _GLF_FUZZED(uvec3(12018u, 178808u, 45397u)))))))) << uvec3(0u, 0u, 0u)).x, 1u, 1u, 1u)), (uint(uvec4(_GLF_IDENTITY(gl_WorkGroupID, (_GLF_IDENTITY(gl_WorkGroupID, uvec3(_GLF_IDENTITY(_GLF_IDENTITY(uvec3(gl_WorkGroupID), (uvec3(gl_WorkGroupID)) * uvec3(1u, 1u, 1u)), _GLF_IDENTITY(min(_GLF_IDENTITY(uvec3(gl_WorkGroupID), (uvec3(_GLF_IDENTITY(gl_WorkGroupID, _GLF_IDENTITY(uvec3(uvec4(gl_WorkGroupID, 1u)), clamp(uvec3(uvec4(gl_WorkGroupID, 1u)), _GLF_IDENTITY(uvec3(uvec4(gl_WorkGroupID, 1u)), (uvec3(uvec4(gl_WorkGroupID, 1u))) | uvec3(0u, 0u, 0u)), uvec3(uvec4(gl_WorkGroupID, 1u))))))) * uvec3(1u, 1u, 1u)), _GLF_IDENTITY(uvec3(gl_WorkGroupID), (_GLF_IDENTITY(uvec3(gl_WorkGroupID), (uvec3(gl_WorkGroupID)) - uvec3(0u, 0u, 0u))) * uvec3(1u, 1u, 1u))), (true ? _GLF_IDENTITY(min(_GLF_IDENTITY(uvec3(gl_WorkGroupID), (uvec3(_GLF_IDENTITY(gl_WorkGroupID, _GLF_IDENTITY(uvec3(uvec4(gl_WorkGroupID, 1u)), clamp(uvec3(uvec4(gl_WorkGroupID, 1u)), _GLF_IDENTITY(uvec3(uvec4(gl_WorkGroupID, 1u)), (uvec3(uvec4(gl_WorkGroupID, 1u))) | uvec3(0u, 0u, 0u)), uvec3(uvec4(gl_WorkGroupID, 1u))))))) * uvec3(1u, 1u, 1u)), _GLF_IDENTITY(uvec3(gl_WorkGroupID), (_GLF_IDENTITY(uvec3(gl_WorkGroupID), (uvec3(gl_WorkGroupID)) - uvec3(0u, 0u, 0u))) * uvec3(1u, 1u, 1u))), uvec3(uvec4(min(_GLF_IDENTITY(uvec3(gl_WorkGroupID), (uvec3(_GLF_IDENTITY(gl_WorkGroupID, _GLF_IDENTITY(uvec3(uvec4(gl_WorkGroupID, 1u)), clamp(uvec3(uvec4(gl_WorkGroupID, 1u)), _GLF_IDENTITY(uvec3(uvec4(gl_WorkGroupID, 1u)), (uvec3(uvec4(gl_WorkGroupID, 1u))) | uvec3(0u, 0u, 0u)), uvec3(uvec4(gl_WorkGroupID, 1u))))))) * uvec3(1u, 1u, 1u)), _GLF_IDENTITY(uvec3(gl_WorkGroupID), (_GLF_IDENTITY(uvec3(gl_WorkGroupID), (uvec3(gl_WorkGroupID)) - uvec3(0u, 0u, 0u))) * uvec3(1u, 1u, 1u))), 1u))) : _GLF_FUZZED(uvec3(12018u, 178808u, 45397u)))))))) << uvec3(0u, 0u, 0u)).x, 1u, 1u, 1u))) / 1u)))), (0u & 94828u) ^ (_GLF_IDENTITY(gl_WorkGroupID, (_GLF_IDENTITY(gl_WorkGroupID, uvec3(_GLF_IDENTITY(_GLF_IDENTITY(uvec3(gl_WorkGroupID), (uvec3(gl_WorkGroupID)) * uvec3(1u, 1u, 1u)), min(_GLF_IDENTITY(_GLF_IDENTITY(uvec3(gl_WorkGroupID), (uvec3(gl_WorkGroupID)) ^ uvec3(0u, 0u, 0u)), (uvec3(gl_WorkGroupID)) * uvec3(1u, 1u, 1u)), _GLF_IDENTITY(uvec3(gl_WorkGroupID), (_GLF_IDENTITY(uvec3(gl_WorkGroupID), (uvec3(_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) + uvec3(0u, 0u, 0u)))) - uvec3(_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, 0u | (0u))) + 0u), 0u, 0u))) * uvec3(1u, 1u, 1u))))))) << uvec3(0u, 0u, 0u)).x))) * 1u);
 uint workgroup_base = _GLF_IDENTITY(workgroup_size * workgroup_id, clamp(workgroup_size * workgroup_id, workgroup_size * workgroup_id, workgroup_size * workgroup_id));
 if(_GLF_DEAD(false))
  {
   for(int _injected_loop_counter = _GLF_IDENTITY(int(_GLF_ZERO(0.0, injectionSwitch.x)), 1 * (int(_GLF_ZERO(0.0, injectionSwitch.x)))); _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
    {
     return;
    }
  }
 _GLF_struct_7 _GLF_struct_replacement_7 = _GLF_struct_7(_GLF_struct_2(mat3(1.0), _GLF_struct_0(mat3(1.0), ivec3(1), mat2(1.0)), _GLF_struct_1(mat3(1.0), ivec2(1))), _GLF_IDENTITY(bvec3(_GLF_IDENTITY(true, bool(bvec3(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(true, true && (true))), bool(bvec3(! (_GLF_IDENTITY(true, true && (true))), true, false)))))), true && (! (_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(true, true && (true))), bool(bvec3(! (_GLF_IDENTITY(true, true && (true))), true, false)))))))))), true, false)))), bvec3(bvec4(bvec3(_GLF_IDENTITY(true, bool(bvec3(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(true, true && (true))), bool(bvec3(! (_GLF_IDENTITY(true, true && (true))), true, false)))))), true && (! (_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(true, true && (true))), bool(bvec3(! (_GLF_IDENTITY(true, true && (true))), true, false)))))))))), true, false)))), true))), _GLF_struct_3(vec3(_GLF_IDENTITY(1.0, max(1.0, _GLF_IDENTITY(_GLF_IDENTITY(1.0, _GLF_IDENTITY(float(mat3(_GLF_IDENTITY(_GLF_IDENTITY(1.0, float(mat4x3(1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0))), 0.0 + (_GLF_IDENTITY(1.0, float(mat4x3(1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0))))), 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, sqrt(0.0), _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(1.4)), bool(false))))), (false ? _GLF_IDENTITY(_GLF_FUZZED(675.496), _GLF_IDENTITY(float(_GLF_IDENTITY(mat2(_GLF_FUZZED(675.496), 0.0, determinant(mat3(0.0, 0.0, 0.0, _GLF_IDENTITY(sqrt(0.0), max(_GLF_IDENTITY(sqrt(0.0), mix(float(_GLF_IDENTITY(sqrt(0.0), (sqrt(0.0)) - 0.0)), float(_GLF_FUZZED(2.8)), bool(false))), _GLF_IDENTITY(sqrt(0.0), max(sqrt(0.0), sqrt(0.0))))), 0.0, 0.0, 0.0, 0.0, 0.0)), abs(1.0)), (mat2(_GLF_FUZZED(675.496), 0.0, determinant(mat3(0.0, 0.0, 0.0, sqrt(0.0), 0.0, 0.0, 0.0, 0.0, 0.0)), abs(1.0))) - mat2(0.0, 0.0, 0.0, 0.0))), 0.0 + (float(_GLF_IDENTITY(mat2(_GLF_FUZZED(675.496), 0.0, determinant(mat3(0.0, 0.0, 0.0, sqrt(0.0), 0.0, 0.0, 0.0, 0.0, 0.0)), abs(1.0)), (mat2(_GLF_FUZZED(_GLF_IDENTITY(675.496, mix(float(_GLF_FUZZED(6364.5692)), float(675.496), bool(true)))), 0.0, determinant(mat3(0.0, 0.0, 0.0, sqrt(0.0), 0.0, 0.0, 0.0, 0.0, 0.0)), abs(1.0))) - mat2(0.0, 0.0, 0.0, 0.0)))))) : float(mat3(_GLF_IDENTITY(1.0, float(mat4x3(1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(7.4)), float(0.0), bool(true))), 1.0, 0.0))), 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, sqrt(0.0), 1.0))))), _GLF_IDENTITY(mix(float(_GLF_FUZZED(-65.58)), float(_GLF_IDENTITY(1.0, _GLF_IDENTITY(float(mat3(_GLF_IDENTITY(1.0, float(mat4x3(1.0, 0.0, _GLF_IDENTITY(0.0, max(0.0, _GLF_IDENTITY(0.0, 1.0 * (0.0)))), 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0))), 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, sqrt(0.0), 1.0)), (false ? _GLF_FUZZED(675.496) : float(mat3(_GLF_IDENTITY(1.0, float(mat4x3(1.0, _GLF_IDENTITY(0.0, max(0.0, _GLF_IDENTITY(0.0, mix(float(_GLF_IDENTITY(0.0, float(float(0.0)))), float(_GLF_FUZZED(7368.7852)), bool(false))))), _GLF_IDENTITY(0.0, _GLF_IDENTITY((false ? _GLF_FUZZED(exp(-81.95)) : 0.0), max((false ? _GLF_FUZZED(exp(-81.95)) : 0.0), _GLF_IDENTITY((false ? _GLF_FUZZED(exp(-81.95)) : 0.0), (false ? _GLF_FUZZED((-3.7 - -2132.6816)) : (false ? _GLF_FUZZED(exp(-81.95)) : 0.0)))))), _GLF_IDENTITY(0.0, _GLF_IDENTITY(mix(float(_GLF_FUZZED((-6.2 - -146.729))), float(0.0), bool(true)), _GLF_IDENTITY(float(mat4x3(mix(float(_GLF_FUZZED((-6.2 - -146.729))), float(0.0), bool(true)), 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0)), clamp(float(mat4x3(mix(float(_GLF_FUZZED((-6.2 - -146.729))), float(0.0), bool(true)), 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0)), float(mat4x3(mix(float(_GLF_FUZZED((-6.2 - -146.729))), float(0.0), bool(true)), 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0)), float(mat4x3(mix(float(_GLF_FUZZED((-6.2 - -146.729))), float(0.0), bool(true)), 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0)))))), 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0))), _GLF_IDENTITY(0.0, (false ? _GLF_IDENTITY(_GLF_FUZZED(roundEven(4888.5554)), min(_GLF_FUZZED(roundEven(4888.5554)), _GLF_FUZZED(roundEven(4888.5554)))) : 0.0)), 0.0, _GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-813.061)), float(_GLF_IDENTITY(_GLF_IDENTITY(0.0, min(0.0, 0.0)), clamp(0.0, 0.0, 0.0))), bool(true))), 0.0)), 1.0, 0.0, 1.0, sqrt(0.0), 1.0)))))), bool(true)), (false ? _GLF_FUZZED(-6.0) : mix(float(_GLF_FUZZED(-65.58)), float(_GLF_IDENTITY(1.0, _GLF_IDENTITY(float(mat3(_GLF_IDENTITY(1.0, float(mat4x3(1.0, 0.0, _GLF_IDENTITY(0.0, max(0.0, _GLF_IDENTITY(0.0, 1.0 * (0.0)))), 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0))), 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, sqrt(0.0), 1.0)), (false ? _GLF_FUZZED(675.496) : float(_GLF_IDENTITY(mat3(_GLF_IDENTITY(1.0, float(mat4x3(1.0, _GLF_IDENTITY(_GLF_IDENTITY(0.0, max(0.0, _GLF_IDENTITY(0.0, mix(float(_GLF_IDENTITY(0.0, float(float(0.0)))), float(_GLF_FUZZED(7368.7852)), bool(false))))), float(mat4x3(_GLF_IDENTITY(0.0, max(0.0, _GLF_IDENTITY(0.0, mix(float(_GLF_IDENTITY(0.0, float(float(0.0)))), float(_GLF_FUZZED(7368.7852)), bool(false))))), 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0))), _GLF_IDENTITY(0.0, _GLF_IDENTITY((false ? _GLF_FUZZED(exp(-81.95)) : 0.0), max((false ? _GLF_FUZZED(exp(-81.95)) : 0.0), _GLF_IDENTITY((false ? _GLF_FUZZED(exp(-81.95)) : 0.0), (false ? _GLF_FUZZED((-3.7 - -2132.6816)) : (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, false, true, _GLF_IDENTITY(false, false || (false)))), bool(bvec4(bool(bvec4(false, false, true, _GLF_IDENTITY(false, false || (false)))), false, false, false)))) ? _GLF_FUZZED(_GLF_IDENTITY(exp(-81.95), _GLF_IDENTITY(float(_GLF_IDENTITY(mat4(exp(-81.95), 1.0, 0.0, 1.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, cos(0.0), 1.0), transpose(_GLF_IDENTITY(transpose(mat4(exp(-81.95), 1.0, 0.0, 1.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, cos(0.0), 1.0)), (transpose(mat4(exp(-81.95), 1.0, 0.0, 1.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, cos(0.0), 1.0))) - mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))))), (float(_GLF_IDENTITY(mat4(exp(-81.95), 1.0, 0.0, 1.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, cos(0.0), 1.0), transpose(_GLF_IDENTITY(transpose(mat4(exp(-81.95), 1.0, 0.0, 1.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, cos(0.0), 1.0)), (transpose(mat4(exp(-81.95), 1.0, 0.0, 1.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, cos(0.0), 1.0))) - mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)))))) * 1.0))) : 0.0)))))), _GLF_IDENTITY(0.0, _GLF_IDENTITY(mix(float(_GLF_FUZZED((-6.2 - -146.729))), float(0.0), bool(true)), _GLF_IDENTITY(float(mat4x3(mix(float(_GLF_FUZZED((-6.2 - -146.729))), float(0.0), bool(true)), 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0)), clamp(float(mat4x3(mix(float(_GLF_FUZZED((-6.2 - -146.729))), float(0.0), bool(true)), 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0)), float(mat4x3(mix(float(_GLF_FUZZED((-6.2 - -146.729))), float(0.0), bool(true)), 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0)), float(mat4x3(mix(float(_GLF_FUZZED((_GLF_IDENTITY(-6.2 - -146.729, (-6.2 - -146.729) * 1.0)))), float(0.0), bool(true)), 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0)))))), 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0))), _GLF_IDENTITY(0.0, (false ? _GLF_IDENTITY(_GLF_FUZZED(roundEven(4888.5554)), min(_GLF_FUZZED(roundEven(4888.5554)), _GLF_FUZZED(roundEven(4888.5554)))) : 0.0)), 0.0, _GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-813.061)), float(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(0.0, min(0.0, 0.0)), (_GLF_IDENTITY(0.0, min(0.0, 0.0))) * determinant(mat3(1.0, 0.0, 0.0, 0.0, exp(0.0), 0.0, 0.0, 0.0, 1.0))), clamp(0.0, 0.0, 0.0))), bool(true))), 0.0)), 1.0, 0.0, 1.0, sqrt(0.0), 1.0), (mat3(_GLF_IDENTITY(1.0, float(mat4x3(1.0, _GLF_IDENTITY(_GLF_IDENTITY(0.0, max(0.0, _GLF_IDENTITY(0.0, mix(float(_GLF_IDENTITY(0.0, float(float(0.0)))), float(_GLF_FUZZED(7368.7852)), bool(false))))), float(mat4x3(_GLF_IDENTITY(0.0, max(0.0, _GLF_IDENTITY(0.0, mix(float(_GLF_IDENTITY(0.0, float(float(0.0)))), float(_GLF_FUZZED(7368.7852)), bool(false))))), 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0))), _GLF_IDENTITY(0.0, _GLF_IDENTITY((false ? _GLF_FUZZED(exp(-81.95)) : 0.0), max((false ? _GLF_FUZZED(exp(-81.95)) : 0.0), _GLF_IDENTITY((false ? _GLF_FUZZED(exp(-81.95)) : 0.0), (false ? _GLF_FUZZED((-3.7 - -2132.6816)) : (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, false, true, _GLF_IDENTITY(false, false || (false)))), bool(bvec4(bool(bvec4(false, false, true, _GLF_IDENTITY(false, false || (false)))), false, false, false)))) ? _GLF_FUZZED(_GLF_IDENTITY(exp(-81.95), _GLF_IDENTITY(float(_GLF_IDENTITY(mat4(exp(-81.95), 1.0, 0.0, 1.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, cos(0.0), 1.0), transpose(_GLF_IDENTITY(transpose(mat4(exp(-81.95), 1.0, 0.0, 1.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, cos(0.0), 1.0)), (transpose(mat4(exp(-81.95), 1.0, 0.0, 1.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, cos(0.0), 1.0))) - mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))))), (float(_GLF_IDENTITY(mat4(exp(-81.95), 1.0, 0.0, 1.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, cos(0.0), 1.0), transpose(_GLF_IDENTITY(transpose(mat4(exp(-81.95), 1.0, 0.0, 1.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, cos(0.0), 1.0)), (transpose(mat4(exp(-81.95), 1.0, 0.0, 1.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, cos(0.0), 1.0))) - mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)))))) * 1.0))) : 0.0)))))), _GLF_IDENTITY(0.0, _GLF_IDENTITY(mix(float(_GLF_FUZZED((-6.2 - -146.729))), float(0.0), bool(true)), _GLF_IDENTITY(float(mat4x3(mix(float(_GLF_FUZZED((-6.2 - -146.729))), float(0.0), bool(true)), 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0)), clamp(float(mat4x3(mix(float(_GLF_FUZZED((-6.2 - -146.729))), float(0.0), bool(true)), 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0)), float(mat4x3(mix(float(_GLF_FUZZED((-6.2 - -146.729))), float(0.0), bool(true)), 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0)), float(mat4x3(mix(float(_GLF_FUZZED((_GLF_IDENTITY(-6.2 - -146.729, (-6.2 - -146.729) * 1.0)))), float(0.0), bool(true)), 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0)))))), 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0))), _GLF_IDENTITY(0.0, (false ? _GLF_IDENTITY(_GLF_FUZZED(roundEven(4888.5554)), min(_GLF_FUZZED(roundEven(4888.5554)), _GLF_FUZZED(roundEven(4888.5554)))) : 0.0)), 0.0, _GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-813.061)), float(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(0.0, min(0.0, 0.0)), (_GLF_IDENTITY(0.0, min(0.0, 0.0))) * determinant(mat3(1.0, 0.0, 0.0, 0.0, exp(0.0), 0.0, 0.0, 0.0, 1.0))), clamp(0.0, 0.0, 0.0))), bool(true))), 0.0)), 1.0, 0.0, 1.0, sqrt(0.0), 1.0)) * mat3(_GLF_ONE(1.0, injectionSwitch.y)))))))), bool(true)))))))), mat4x2(1.0), _GLF_IDENTITY(mat4(1.0), transpose(transpose(mat4(1.0))))), uvec4(1u), _GLF_IDENTITY(bvec2(true), bvec2(_GLF_IDENTITY(bvec2(bvec2(true)), bvec2(_GLF_IDENTITY(bvec2(bvec2(bvec2(_GLF_IDENTITY(true, ! (! (true)))))), bvec2(bvec3(bvec2(bvec2(bvec2(_GLF_IDENTITY(true, ! (! (true)))))), true))))))), _GLF_struct_4(_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size + subgroup_local_id, uint(uvec4(workgroup_base + _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, (_GLF_IDENTITY(subgroup_id * subgroup_size, uint(uvec4(subgroup_id * subgroup_size, 0u, 0u, 0u)))) | 0u), ~ _GLF_IDENTITY((~ (subgroup_id * subgroup_size)), max((~ (subgroup_id * subgroup_size)), _GLF_IDENTITY((~ (subgroup_id * subgroup_size)), (false ? _GLF_FUZZED((subgroup_size)) : (~ (subgroup_id * subgroup_size))))))) + subgroup_local_id, 0u, (_GLF_IDENTITY(0u | 0u, (0u | 0u) / 1u)), 1u))), uvec4(1u), mat2(_GLF_IDENTITY(1.0, (1.0) * 1.0))), _GLF_struct_6(_GLF_struct_5(vec2(1.0), bvec4(true), vec3(1.0), 1.0, _GLF_IDENTITY(ivec3(_GLF_IDENTITY(1, (1) << 0)), ivec3(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)) | (ivec3(1))), _GLF_IDENTITY(mat2(1.0), (mat2(1.0)) - mat2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))), bvec2(true)), mat3x4(1.0), vec4(1.0), _GLF_IDENTITY(mat4(_GLF_IDENTITY(1.0, _GLF_IDENTITY(float(mat4x2(1.0, 0.0, 1.0, 1.0, log(1.0), determinant(mat2(0.0, 0.0, 0.0, 0.0)), log(1.0), 1.0)), (true ? float(mat4x2(1.0, 0.0, 1.0, 1.0, log(1.0), determinant(mat2(0.0, 0.0, 0.0, 0.0)), log(1.0), 1.0)) : _GLF_FUZZED(-2.7))))), (_GLF_IDENTITY(_GLF_IDENTITY(true ? mat4(1.0) : _GLF_FUZZED(mat4(4.7, 6.1, -9500.4307, -3073.3154, -3468.2039, 3.9, 8.8, -2.1, _GLF_IDENTITY(-3.1, clamp(_GLF_IDENTITY(-3.1, (true ? -3.1 : _GLF_FUZZED(_GLF_IDENTITY(-871.057, min(_GLF_IDENTITY(-871.057, clamp(-871.057, -871.057, -871.057)), -871.057))))), -3.1, -3.1)), 2.7, 91.08, 539.489, -9.8, -5.6, -4101.4672, 629.430)), (_GLF_IDENTITY(true ? mat4(1.0) : _GLF_FUZZED(mat4(4.7, 6.1, -9500.4307, -3073.3154, -3468.2039, _GLF_IDENTITY(3.9, max(3.9, 3.9)), 8.8, -2.1, _GLF_IDENTITY(-3.1, clamp(_GLF_IDENTITY(-3.1, (true ? -3.1 : _GLF_FUZZED(-871.057))), -3.1, -3.1)), 2.7, 91.08, 539.489, -9.8, -5.6, -4101.4672, 629.430)), transpose(transpose(_GLF_IDENTITY(true ? mat4(1.0) : _GLF_FUZZED(mat4(4.7, 6.1, -9500.4307, -3073.3154, -3468.2039, 3.9, 8.8, -2.1, _GLF_IDENTITY(-3.1, clamp(_GLF_IDENTITY(-3.1, (_GLF_IDENTITY(true, (true) || false) ? -3.1 : _GLF_FUZZED(-871.057))), -3.1, -3.1)), 2.7, 91.08, 539.489, -9.8, -5.6, -4101.4672, 629.430)), mat4(1.0) * (true ? mat4(1.0) : _GLF_FUZZED(mat4(4.7, 6.1, -9500.4307, -3073.3154, _GLF_IDENTITY(-3468.2039, (-3468.2039) / 1.0), 3.9, 8.8, -2.1, _GLF_IDENTITY(_GLF_IDENTITY(-3.1, (_GLF_IDENTITY(-3.1, float(mat4x2(-3.1, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0)))) - 0.0), clamp(_GLF_IDENTITY(-3.1, (true ? -3.1 : _GLF_FUZZED(-871.057))), -3.1, -3.1)), 2.7, 91.08, 539.489, -9.8, -5.6, -4101.4672, 629.430)))))))) + mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)), _GLF_IDENTITY((true ? mat4(1.0) : _GLF_FUZZED(mat4(4.7, 6.1, -9500.4307, -3073.3154, -3468.2039, 3.9, 8.8, -2.1, -3.1, 2.7, _GLF_IDENTITY(91.08, (_GLF_IDENTITY(91.08, (91.08) * 1.0)) + 0.0), 539.489, -9.8, -5.6, -4101.4672, 629.430))) / mat4(1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0), transpose(transpose((true ? mat4(1.0) : _GLF_FUZZED(mat4(4.7, 6.1, -9500.4307, -3073.3154, -3468.2039, 3.9, 8.8, -2.1, -3.1, 2.7, _GLF_IDENTITY(91.08, (_GLF_IDENTITY(91.08, (91.08) * 1.0)) + 0.0), 539.489, -9.8, -5.6, -4101.4672, 629.430))) / mat4(1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0))))))), ivec4(1), mat2x4(1.0)));
 if(_GLF_DEAD(false))
  return;
 uint next_virtual_gid = _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, ~ (~ (_GLF_IDENTITY(workgroup_base, (workgroup_base) * 1u) + _GLF_IDENTITY(subgroup_id * subgroup_size, max(_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) | (subgroup_id * subgroup_size)), subgroup_id * subgroup_size))))) + ((subgroup_local_id + 1) % subgroup_size), (_GLF_IDENTITY(workgroup_base + subgroup_id * _GLF_IDENTITY(subgroup_size, 0u + (subgroup_size)), ~ (~ (workgroup_base + _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, uint(uvec4(subgroup_id, 1u, 0u, 0u))), (_GLF_IDENTITY(subgroup_id, uint(uvec4(subgroup_id, 1u, 0u, 0u)))) / 1u), clamp(_GLF_IDENTITY(subgroup_id, 0u ^ (subgroup_id)), _GLF_IDENTITY(subgroup_id, _GLF_IDENTITY(min(subgroup_id, subgroup_id), 0u | (min(subgroup_id, subgroup_id)))), subgroup_id)) * subgroup_size))) + ((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, 0u | (subgroup_local_id)), 0u ^ (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, 0u | _GLF_IDENTITY((subgroup_local_id), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(subgroup_local_id) : (subgroup_local_id)))), uint(uint(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) / 1u)) | (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | (subgroup_local_id)))), 0u | (subgroup_local_id))))))) + 1) % _GLF_IDENTITY(subgroup_size, (subgroup_size) | (subgroup_size)))) / 1u);
 if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), bool(bvec3(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, false)))))
  {
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     if(_GLF_DEAD(false))
      return;
     do
      {
       for(int _injected_loop_counter = 0; _GLF_IDENTITY(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter, (_injected_loop_counter) - 0) < 1), _GLF_IDENTITY(bool(bvec4(_GLF_WRAPPED_LOOP(_injected_loop_counter < 1), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)), (bool(bvec4(_GLF_WRAPPED_LOOP(_injected_loop_counter < 1), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))) || false)); _injected_loop_counter ++)
        {
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(false))
          break;
         atomicStore(buf[_GLF_IDENTITY(_GLF_struct_replacement_7._f5.virtual_gid, clamp(_GLF_struct_replacement_7._f5.virtual_gid, _GLF_struct_replacement_7._f5.virtual_gid, _GLF_IDENTITY(_GLF_struct_replacement_7._f5.virtual_gid, _GLF_IDENTITY((_GLF_struct_replacement_7._f5.virtual_gid), ((_GLF_struct_replacement_7._f5.virtual_gid)) * 1u) ^ 0u)))], uint(1), 4, 64, _GLF_IDENTITY(4, 1 * (4)));
        }
      }
     while(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_GLF_FALSE(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, true, false)), bool(bvec4(bool(bvec3(false, true, false)), false, true, false)))))), _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, float(_GLF_IDENTITY(mat3(injectionSwitch.x, 1.0, 1.0, round(length(normalize(vec3(1.0, 1.0, 1.0)))), 1.0, 0.0, 0.0, 0.0, 0.0), mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0) + (mat3(injectionSwitch.x, 1.0, 1.0, round(length(normalize(vec3(1.0, 1.0, 1.0)))), 1.0, 0.0, 0.0, 0.0, 0.0))))), injectionSwitch.x)) > injectionSwitch.y)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), true && (_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * abs(vec2(1.0, 1.0))).x > injectionSwitch.y))))), bool(bvec3(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_GLF_FALSE(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, true, false)), bool(bvec4(bool(bvec3(false, true, false)), false, true, false)))))), _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, float(_GLF_IDENTITY(mat3(injectionSwitch.x, 1.0, 1.0, round(length(normalize(vec3(1.0, 1.0, 1.0)))), 1.0, 0.0, 0.0, 0.0, 0.0), mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0) + (mat3(injectionSwitch.x, 1.0, 1.0, round(length(normalize(vec3(1.0, 1.0, 1.0)))), 1.0, 0.0, 0.0, 0.0, 0.0))))), injectionSwitch.x)) > injectionSwitch.y)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), true && (_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * abs(vec2(1.0, 1.0))).x > injectionSwitch.y))))), false, true))));
    }
   else
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
    }
  }
 else
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, bool(bvec3(false, false, false)))))))
    return;
  }
 if(_GLF_IDENTITY(subgroup_local_id + 1 < subgroup_size, ! (_GLF_IDENTITY(! _GLF_IDENTITY((subgroup_local_id + 1 < subgroup_size), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY((subgroup_local_id + 1 < subgroup_size), ! _GLF_IDENTITY((! ((subgroup_local_id + 1 < subgroup_size))), false || (_GLF_IDENTITY((! ((subgroup_local_id + 1 < subgroup_size))), ((! ((subgroup_local_id + 1 < subgroup_size)))) && true)))), _GLF_IDENTITY(true, ! (! (true)))), bvec2(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(bvec2(_GLF_IDENTITY((subgroup_local_id + 1 < subgroup_size), ! (! ((subgroup_local_id + 1 < subgroup_size)))), _GLF_IDENTITY(true, ! (! (true)))), bvec2(bvec2(bvec2(_GLF_IDENTITY((subgroup_local_id + 1 < subgroup_size), ! _GLF_IDENTITY((! ((subgroup_local_id + 1 < subgroup_size))), true && ((! ((subgroup_local_id + 1 < subgroup_size)))))), _GLF_IDENTITY(true, ! (! (true)))))))), bvec2(bvec2(bvec2(_GLF_IDENTITY(bvec2(_GLF_IDENTITY((subgroup_local_id + 1 < subgroup_size), ! (! ((subgroup_local_id + 1 < subgroup_size)))), _GLF_IDENTITY(true, ! (! (true)))), bvec2(bvec2(bvec2(_GLF_IDENTITY((subgroup_local_id + 1 < subgroup_size), ! (! ((subgroup_local_id + 1 < subgroup_size)))), _GLF_IDENTITY(true, ! (! (true))))))))))))))), ! _GLF_IDENTITY((! (! (subgroup_local_id + 1 < subgroup_size))), true && ((! (! (subgroup_local_id + 1 < subgroup_size)))))))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mat2(1.0) * _GLF_IDENTITY((injectionSwitch), ((injectionSwitch)) - vec2(0.0, 0.0))).y)), _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), (_GLF_IDENTITY(false, (false) || false)) && true) || _GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (_GLF_IDENTITY(! ((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bool(bvec2(! ((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false)))))) && true)) || (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y))) && true)))))))
    return;
   atomicStore(buf[_GLF_IDENTITY(next_virtual_gid, (next_virtual_gid) | 0u)], _GLF_IDENTITY(uint(2), (_GLF_IDENTITY(uint(2), 0u + (uint(2)))) | (_GLF_IDENTITY(uint(2), max(uint(2), uint(2))))), 4, 64, _GLF_IDENTITY(4, min(4, 4)));
   if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true)), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec4(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)).x > injectionSwitch.y))))) && true), false, false, true)))) && true, false || (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, false, true)))) && true, ! (! ((_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), true && (bool(false))))), false, true)), ! (! (bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, false, true))))))) && true))))))))
    {
     if(_GLF_DEAD(false))
      return;
    }
   else
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(false))
        return;
       for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != (0 << _GLF_IDENTITY(_GLF_IDENTITY(int(8), int(_GLF_IDENTITY(8, max(8, _GLF_IDENTITY(8, max(8, 8)))))), max(_GLF_IDENTITY(int(8), int(8)), _GLF_IDENTITY(_GLF_IDENTITY(int(8), int(8)), (0 >> _GLF_IDENTITY(int(1), _GLF_IDENTITY(int(_GLF_IDENTITY(1, (false ? _GLF_FUZZED(52707) : 1))), clamp(int(_GLF_IDENTITY(1, (false ? _GLF_FUZZED(52707) : 1))), int(_GLF_IDENTITY(1, (_GLF_IDENTITY(false ? _GLF_FUZZED(52707) : 1, ~ (~ (false ? _GLF_FUZZED(52707) : 1)))))), int(_GLF_IDENTITY(1, _GLF_IDENTITY((false ? _GLF_FUZZED(52707) : 1), (_GLF_IDENTITY((false ? _GLF_FUZZED(52707) : 1), ((false ? _GLF_FUZZED(52707) : 1)) << (0 << _GLF_IDENTITY(int(7), int(7))))) >> 0))))))) ^ _GLF_IDENTITY((_GLF_IDENTITY(int(8), int(8))), (false ? _GLF_FUZZED(_injected_loop_counter) : (_GLF_IDENTITY(_GLF_IDENTITY(int(8), clamp(_GLF_IDENTITY(int(8), (true ? int(8) : _GLF_FUZZED(_injected_loop_counter))), int(8), int(8))), int(8)))))))))); _injected_loop_counter --)
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            return;
           break;
          }
         if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec4(_GLF_DEAD(false), false, false, true)), _GLF_IDENTITY((bool(bvec4(_GLF_DEAD(false), false, false, true))), bool(bool((bool(bvec4(_GLF_DEAD(false), false, false, true)))))) || false)))
          {
           if(_GLF_DEAD(false))
            continue;
           if(_GLF_DEAD(false))
            continue;
           return;
          }
         for(int _injected_loop_counter = ((1 << _GLF_IDENTITY(int(_GLF_IDENTITY(2, 0 + (2))), int(2))) >> _GLF_IDENTITY(int(2), int(2))); _GLF_WRAPPED_LOOP(_injected_loop_counter != (1 ^ 1)); _injected_loop_counter --)
          {
           return;
          }
         if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), ! (! (false)))))
          break;
         if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(bool(! (false))))))))
          continue;
         if(_GLF_DEAD(false))
          return;
        }
       if(_GLF_DEAD(false))
        {
         do
          {
           return;
           if(_GLF_DEAD(false))
            break;
           if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, false)), _GLF_IDENTITY(bool(bool(bool(bvec2(false, false)))), ! (! (bool(bool(bool(bvec2(false, false)))))))))), true && (_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, false)))))))
            {
             if(_GLF_WRAPPED_IF_TRUE(true))
              {
               return;
               if(_GLF_DEAD(false))
                break;
              }
             else
              {
              }
            }
           if(_GLF_DEAD(false))
            break;
          }
         while(_GLF_WRAPPED_LOOP(false));
        }
      }
    }
   do
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_WRAPPED_IF_FALSE(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          break;
        }
       else
        {
         do
          {
           if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, (false) || _GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), true && _GLF_IDENTITY(((! (false))), bool(bvec4(((! (false))), false, false, false))))), true, false, _GLF_FALSE(_GLF_IDENTITY(false, false || (false)), (injectionSwitch.x > injectionSwitch.y)))))) || false))))))
            {
             for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < int(_GLF_ONE(1.0, injectionSwitch.y))); _injected_loop_counter ++)
              {
               if(_GLF_DEAD(false))
                break;
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                {
                 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                  break;
                 if(_GLF_WRAPPED_IF_FALSE(false))
                  {
                  }
                 else
                  {
                   return;
                  }
                 if(_GLF_DEAD(false))
                  return;
                }
              }
            }
           else
            {
             if(_GLF_DEAD(false))
              continue;
             if(_GLF_WRAPPED_IF_TRUE(true))
              {
               if(_GLF_DEAD(false))
                continue;
               return;
               if(_GLF_DEAD(false))
                return;
               if(_GLF_DEAD(false))
                break;
              }
             else
              {
              }
             if(_GLF_IDENTITY(_GLF_DEAD(false), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_DEAD(false)))), true), bvec2(bvec2(bvec2(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)), bool(bool(_GLF_DEAD(false)))), true)))))))
              {
               if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))
                {
                 if(_GLF_DEAD(false))
                  continue;
                 return;
                }
               if(_GLF_DEAD(false))
                {
                 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                  continue;
                 for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > int(_GLF_ZERO(_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-1.5))), injectionSwitch.x))); _injected_loop_counter --)
                  {
                   return;
                  }
                }
               continue;
              }
             if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), _GLF_IDENTITY(dot(vec3(0.0, 0.0, 0.0), vec3(1.0, determinant(mat2(1.0, 1.0, 0.0, 1.0)), 1.0)), _GLF_IDENTITY(dot(vec3(0.0, _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-85.70))), 0.0), vec3(1.0, determinant(mat2(1.0, 1.0, 0.0, 1.0)), 1.0)), max(dot(vec3(0.0, 0.0, 0.0), vec3(1.0, determinant(mat2(1.0, 1.0, 0.0, 1.0)), 1.0)), _GLF_IDENTITY(dot(vec3(0.0, 0.0, 0.0), vec3(1.0, determinant(mat2(_GLF_IDENTITY(1.0, float(mat4x2(1.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 1.0, 0.0, 0.0))), 1.0, 0.0, 1.0)), 1.0)), (dot(vec3(0.0, 0.0, 0.0), _GLF_IDENTITY(vec3(1.0, determinant(mat2(_GLF_IDENTITY(_GLF_IDENTITY(1.0, float(mat4x2(1.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 1.0, 0.0, 0.0))), mix(float(_GLF_FUZZED(846.049)), float(_GLF_IDENTITY(_GLF_IDENTITY(1.0, float(mat4x2(1.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 1.0, 0.0, 0.0))), max(_GLF_IDENTITY(1.0, float(mat4x2(1.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 1.0, 0.0, 0.0))), _GLF_IDENTITY(1.0, float(mat4x2(1.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 1.0, 0.0, 0.0)))))), bool(true))), 1.0, 0.0, 1.0)), 1.0), clamp(vec3(1.0, determinant(mat2(_GLF_IDENTITY(_GLF_IDENTITY(1.0, float(mat4x2(1.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 1.0, 0.0, 0.0))), mix(float(_GLF_FUZZED(846.049)), float(_GLF_IDENTITY(_GLF_IDENTITY(1.0, float(mat4x2(1.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 1.0, 0.0, 0.0))), max(_GLF_IDENTITY(1.0, float(mat4x2(1.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 1.0, 0.0, 0.0))), _GLF_IDENTITY(1.0, float(mat4x2(1.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 1.0, 0.0, 0.0)))))), bool(true))), 1.0, 0.0, 1.0)), 1.0), vec3(1.0, determinant(mat2(_GLF_IDENTITY(_GLF_IDENTITY(1.0, float(mat4x2(1.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 1.0, 0.0, 0.0))), mix(float(_GLF_FUZZED(846.049)), float(_GLF_IDENTITY(_GLF_IDENTITY(1.0, float(mat4x2(1.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 1.0, 0.0, 0.0))), max(_GLF_IDENTITY(1.0, float(mat4x2(1.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 1.0, 0.0, 0.0))), _GLF_IDENTITY(1.0, float(mat4x2(1.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 1.0, 0.0, 0.0)))))), bool(true))), 1.0, 0.0, 1.0)), 1.0), vec3(1.0, determinant(mat2(_GLF_IDENTITY(_GLF_IDENTITY(1.0, float(mat4x2(1.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 1.0, 0.0, 0.0))), mix(float(_GLF_FUZZED(846.049)), float(_GLF_IDENTITY(_GLF_IDENTITY(1.0, float(mat4x2(1.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 1.0, 0.0, 0.0))), max(_GLF_IDENTITY(1.0, float(mat4x2(1.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 1.0, 0.0, 0.0))), _GLF_IDENTITY(1.0, float(mat4x2(1.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 1.0, 0.0, 0.0)))))), bool(true))), 1.0, 0.0, 1.0)), 1.0))))) * 1.0)))) + _GLF_IDENTITY((injectionSwitch.x), max((injectionSwitch.x), (injectionSwitch.x)))) > injectionSwitch.y), true && ((_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(dot(vec3(0.0, 0.0, 0.0), vec3(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-190.423)), float(_GLF_IDENTITY(1.0, min(1.0, 1.0))), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), determinant(mat2(1.0, 1.0, 0.0, 1.0)), 1.0)), _GLF_IDENTITY(dot(vec3(0.0, 0.0, 0.0), vec3(1.0, determinant(mat2(1.0, 1.0, 0.0, 1.0)), 1.0)), max(dot(vec3(0.0, 0.0, 0.0), vec3(1.0, determinant(mat2(1.0, 1.0, 0.0, 1.0)), 1.0)), dot(vec3(0.0, 0.0, 0.0), vec3(1.0, determinant(mat2(_GLF_IDENTITY(1.0, float(mat4x2(1.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 1.0, 0.0, 0.0))), 1.0, _GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, (0.0) / 1.0), _GLF_IDENTITY(0.0, _GLF_IDENTITY(float(mat3(0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0)), (float(mat3(0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0))) * 1.0)), 0.0)), 1.0)), 1.0))))) + _GLF_IDENTITY((injectionSwitch.x), max((injectionSwitch.x), (injectionSwitch.x)))) > injectionSwitch.y))))))
              continue;
            }
          }
         while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(3.4), _GLF_FUZZED(-7.9)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))), injectionSwitch, injectionSwitch)), clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y))));
         if(_GLF_DEAD(false))
          continue;
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(0.0), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(-724.801)), bvec2(true, false))), injectionSwitch)).x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true))))))
          return;
         for(int _injected_loop_counter = (_GLF_IDENTITY(0 >> _GLF_IDENTITY(int(5), int(5)), (_GLF_IDENTITY(0 >> _GLF_IDENTITY(int(5), int(5)), (0 >> _GLF_IDENTITY(int(5), int(_GLF_IDENTITY(5, (false ? _GLF_FUZZED(29118) : _GLF_IDENTITY(5, clamp(5, 5, 5))))))) / 1)) + 0)); _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
          {
           return;
          }
        }
      }
    }
   while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, false)), bool(bvec2(bool(bvec4(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, false)), true))))));
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))), true, true, false))))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((false), (_GLF_IDENTITY((false), ! (! ((false))))) || false)))))
      {
       if(_GLF_WRAPPED_IF_TRUE(true))
        {
         return;
        }
       else
        {
        }
      }
     return;
    }
   for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > int(_GLF_ZERO(0.0, injectionSwitch.x))); _injected_loop_counter --)
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
      return;
    }
   subgroupAll(false);
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && ((injectionSwitch.x > injectionSwitch.y))))))
      return;
     do
      {
       return;
      }
     while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, (false) || false)));
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(540.274)), bool(false))) > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-25.41)), float(injectionSwitch.y), bool(true)))))))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y))))
        {
         if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), ! (! (! ((injectionSwitch.x > injectionSwitch.y))))))))), bool(bvec4(false, true, true, false))))))))
          {
           if(_GLF_DEAD(false))
            return;
          }
         else
          {
           if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_DEAD(false), false, true)))))))
            return;
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            return;
           return;
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              return;
             return;
            }
           if(_GLF_DEAD(false))
            {
             for(int _injected_loop_counter = _GLF_IDENTITY(1, max(1, _GLF_IDENTITY(1, clamp(1, 1, 1)))); _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
              {
               if(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), bool(bvec2(! (_GLF_DEAD(false)), false))))))
                {
                 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                  return;
                 return;
                }
              }
             return;
            }
          }
        }
       if(_GLF_WRAPPED_IF_FALSE(false))
        {
         do
          {
           for(int _injected_loop_counter = _GLF_IDENTITY(0, (0) | 0); _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter < 1, ! (! (_GLF_IDENTITY(_injected_loop_counter < 1, false || (_injected_loop_counter < 1)))))); _injected_loop_counter ++)
            {
             if(_GLF_DEAD(false))
              {
               if(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, (true) && true)), bool(bvec4(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, (true) && true)), false, false, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x < injectionSwitch.y))))))
                {
                 for(int _injected_loop_counter = _GLF_IDENTITY(0, ~ (~ (0))); _GLF_WRAPPED_LOOP(_injected_loop_counter < (_GLF_IDENTITY(((1 & 1) << _GLF_IDENTITY(_GLF_IDENTITY(int(0), (int(0)) >> 0), _GLF_IDENTITY(int(0), _GLF_IDENTITY(int(int(int(0))), (int(int(int(0)))) ^ 0)))), 1 * (((1 & 1) << _GLF_IDENTITY(_GLF_IDENTITY(int(0), (int(0)) >> 0), _GLF_IDENTITY(int(0), _GLF_IDENTITY(int(int(int(0))), (int(int(int(0)))) ^ 0)))))) >> _GLF_IDENTITY(int(0), _GLF_IDENTITY(int(0), 0 | (int(0)))))); _injected_loop_counter ++)
                  {
                   return;
                  }
                }
               else
                {
                }
              }
            }
          }
         while(_GLF_WRAPPED_LOOP(false));
        }
       else
        {
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         return;
        }
      }
     if(_GLF_DEAD(false))
      return;
    }
   else
    {
    }
   if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y), true && ((injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), max(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[_GLF_IDENTITY(0, ((1 << _GLF_IDENTITY(int(0), int(0))) >> _GLF_IDENTITY(int(0), int(0))) * (0))], injectionSwitch[_GLF_IDENTITY(1, (1) | (1))])))).y))))))
    {
    }
   else
    {
     if(_GLF_WRAPPED_IF_TRUE(true))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, (false) && true)), (! (_GLF_IDENTITY(false, (false) && true))) || false)))))
        {
         do
          {
           return;
          }
         while(_GLF_WRAPPED_LOOP(false));
        }
      }
     else
      {
      }
    }
  }
 else
  {
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, true && (false))) || false)))
      {
      }
     else
      {
       if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
        return;
      }
    }
   else
    {
    }
   if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, ! (! (false)))))
    {
    }
   else
    {
     if(_GLF_DEAD(false))
      {
       for(int _injected_loop_counter = _GLF_IDENTITY(0, 0 | (0)); _GLF_WRAPPED_LOOP(_injected_loop_counter < int(_GLF_ONE(1.0, injectionSwitch.y))); _injected_loop_counter ++)
        {
         if(_GLF_DEAD(false))
          continue;
         return;
        }
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, float(mat4(_GLF_IDENTITY(injectionSwitch.x, 1.0 * (injectionSwitch.x)), _GLF_IDENTITY(0.0, (0.0) - 0.0), 1.0, 0.0, length(vec2(0.0, 0.0)), 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, sqrt(0.0), 0.0, abs(1.0), 1.0))) > injectionSwitch.y))))
      {
       for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < int(_GLF_ONE(1.0, injectionSwitch.y))); _injected_loop_counter ++)
        {
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(false))
          return;
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(false))
        return;
       return;
       if(_GLF_DEAD(false))
        return;
      }
     do
      {
       if(_GLF_DEAD(false))
        continue;
       do
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            continue;
           break;
          }
         if(_GLF_DEAD(false))
          return;
         for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
          {
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(false))
              continue;
             return;
            }
          }
        }
       while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
      }
     while(_GLF_WRAPPED_LOOP(false));
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     do
      {
       if(_GLF_WRAPPED_IF_FALSE(false))
        {
         if(_GLF_DEAD(false))
          break;
         if(_GLF_DEAD(false))
          continue;
        }
       else
        {
         if(_GLF_DEAD(false))
          continue;
         if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(! (! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y)), bool(bvec4(! (! (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, (false) && true), false, true), bvec3(bvec3(bvec3(_GLF_IDENTITY(false, (false) && true), false, true)))))), false, _GLF_IDENTITY(true, ! (! (true))))))))))))))))
          {
           if(_GLF_DEAD(false))
            continue;
           return;
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            return;
          }
         for(int _injected_loop_counter = (0 << _GLF_IDENTITY(_GLF_IDENTITY(int(7), (int(7)) / 1), _GLF_IDENTITY(int(7), int(int(int(7)))))); _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
          {
           atomicStore(buf[next_virtual_gid], _GLF_IDENTITY(uint(_GLF_IDENTITY(2, (2) >> (_GLF_IDENTITY(_GLF_IDENTITY(1, (1) - 0), (1) * 1) ^ 1))), _GLF_IDENTITY((uint(2)), clamp((uint(2)), (uint(2)), (uint(2)))) + 0u), _GLF_IDENTITY(_GLF_IDENTITY(4, (false ? _GLF_FUZZED(bitCount(workgroup_base)) : 4)), (false ? _GLF_FUZZED(89688) : _GLF_IDENTITY(_GLF_IDENTITY(4, (false ? _GLF_FUZZED(bitCount(workgroup_base)) : 4)), _GLF_IDENTITY(int(ivec2(_GLF_IDENTITY(4, (false ? _GLF_FUZZED(bitCount(workgroup_base)) : 4)), 0)), (int(ivec2(_GLF_IDENTITY(4, (false ? _GLF_FUZZED(bitCount(workgroup_base)) : 4)), 0))) | (int(ivec2(_GLF_IDENTITY(4, (false ? _GLF_FUZZED(bitCount(workgroup_base)) : 4)), 0))))))), 64, _GLF_IDENTITY(4, (4) | 0));
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            continue;
          }
        }
       if(_GLF_DEAD(false))
        break;
      }
     while(_GLF_WRAPPED_LOOP(false));
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       do
        {
         return;
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            continue;
           break;
          }
         if(_GLF_DEAD(false))
          continue;
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
           if(_GLF_DEAD(false))
            break;
           if(_GLF_WRAPPED_IF_FALSE(false))
            {
             do
              {
               if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (injectionSwitch.x > injectionSwitch.y))))))
                return;
              }
             while(_GLF_WRAPPED_LOOP(false));
            }
           else
            {
             if(_GLF_WRAPPED_IF_FALSE(false))
              {
               if(_GLF_DEAD(false))
                break;
              }
             else
              {
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                return;
               return;
               if(_GLF_DEAD(false))
                continue;
              }
            }
           if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
            break;
          }
         if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, _GLF_IDENTITY(true, bool(_GLF_IDENTITY(bvec2(true, false), bvec2(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec2(true, false), bvec2(bvec4(bvec2(true, false), true, true))), true), bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec2(true, false), bvec2(bvec4(bvec2(true, false), true, true))), true)))))))) && (false))))), (injectionSwitch.x > injectionSwitch.y))))
          {
           if(_GLF_DEAD(false))
            break;
           continue;
          }
        }
       while(_GLF_WRAPPED_LOOP(false));
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, false || (false)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true), bvec3(_GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY(false, false || (false)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)), bvec3(bvec3(bvec3(bvec3(_GLF_IDENTITY(false, false || (false)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)))))))), (bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, false || (false)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true), bvec3(_GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY(false, false || (false)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)), bvec3(bvec3(bvec3(bvec3(_GLF_IDENTITY(false, false || (false)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))))))))) && true))))
      return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
    {
     do
      {
       if(_GLF_DEAD(false))
        return;
       subgroupAll(true);
      }
     while(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(false), (_GLF_WRAPPED_LOOP(false)) && true));
    }
   else
    {
    }
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat4x3(injectionSwitch, 0.0, 0.0, _GLF_IDENTITY(dot(vec3(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), 0.0, 0.0), vec3(0.0, 1.0, _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(vec3(4.6, 744.858, -843.629).g)), float(_GLF_IDENTITY(1.0, float(mat3x2(1.0, 1.0, 1.0, 1.0, 0.0, 1.0)))), bool(true))))), dot(vec3(1.0, 0.0, 0.0), vec3(0.0, 1.0, 1.0))), 0.0, 1.0, 0.0, 0.0, 0.0, abs(0.0), 0.0)), max(vec2(mat4x3(injectionSwitch, 0.0, 0.0, _GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(0.0, 1.0, 1.0)), dot(vec3(1.0, 0.0, 0.0), vec3(0.0, 1.0, 1.0))), 0.0, 1.0, 0.0, 0.0, 0.0, abs(0.0), 0.0)), vec2(mat4x3(injectionSwitch, 0.0, 0.0, _GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(0.0, 1.0, 1.0)), dot(vec3(1.0, 0.0, 0.0), vec3(0.0, 1.0, _GLF_IDENTITY(1.0, (false ? _GLF_IDENTITY(_GLF_FUZZED(-4983.1563), (_GLF_FUZZED(-4983.1563)) / 1.0) : 1.0))))), 0.0, 1.0, 0.0, 0.0, 0.0, abs(0.0), 0.0))))).y))), false || (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat4x3(injectionSwitch, 0.0, 0.0, _GLF_IDENTITY(dot(vec3(1.0, _GLF_IDENTITY(0.0, (0.0) + 0.0), 0.0), vec3(0.0, 1.0, _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-47.60)), float(1.0), bool(true))))), dot(vec3(_GLF_IDENTITY(1.0, max(1.0, 1.0)), 0.0, 0.0), vec3(0.0, 1.0, 1.0))), 0.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(0.0, (0.0) + _GLF_ZERO(0.0, injectionSwitch.x)), abs(0.0), 0.0)), max(_GLF_IDENTITY(vec2(mat4x3(injectionSwitch, 0.0, 0.0, _GLF_IDENTITY(dot(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(vec3(1.0, 0.0, 0.0), mix(vec3(_GLF_FUZZED((+ vec4(647.549, 5.5, -0.3, 44.75).x)), (vec3(1.0, 0.0, 0.0))[1], (vec3(1.0, 0.0, 0.0))[2]), vec3((vec3(1.0, 0.0, 0.0))[0], _GLF_FUZZED((97.94)), _GLF_FUZZED(-913.488)), bvec3(true, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), (false ? _GLF_FUZZED(vec3(558.230)) : _GLF_IDENTITY(_GLF_IDENTITY(vec3(1.0, 0.0, 0.0), mix(vec3(_GLF_FUZZED((+ vec4(647.549, 5.5, -0.3, 44.75).x)), (vec3(1.0, 0.0, 0.0))[1], (vec3(1.0, 0.0, 0.0))[2]), vec3((vec3(1.0, 0.0, 0.0))[0], _GLF_FUZZED((97.94)), _GLF_FUZZED(-913.488)), bvec3(true, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), (true ? _GLF_IDENTITY(vec3(1.0, 0.0, 0.0), mix(vec3(_GLF_FUZZED((+ vec4(647.549, 5.5, -0.3, 44.75).x)), (vec3(1.0, 0.0, 0.0))[1], (vec3(1.0, 0.0, 0.0))[2]), vec3((vec3(1.0, 0.0, 0.0))[0], _GLF_FUZZED((97.94)), _GLF_FUZZED(-913.488)), bvec3(true, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) : _GLF_FUZZED(radians(vec3(-3133.4632, 9483.4637, 660.641))))))), _GLF_IDENTITY(vec3(mat4x3(vec3(1.0, 0.0, 0.0), 0.0, 1.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), abs(0.0), _GLF_IDENTITY(0.0, mix(float(_GLF_IDENTITY(0.0, float(mat3x2(0.0, 1.0, 0.0, 0.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x))))), float(_GLF_FUZZED(-3079.6476)), bool(false))), 0.0, 0.0, _GLF_IDENTITY(cos(0.0), 1.0 * (cos(0.0))))), mix(vec3((vec3(mat4x3(_GLF_IDENTITY(vec3(1.0, 0.0, 0.0), min(_GLF_IDENTITY(vec3(1.0, 0.0, 0.0), (vec3(1.0, 0.0, 0.0)) - vec3(0.0, 0.0, 0.0)), _GLF_IDENTITY(vec3(1.0, 0.0, 0.0), (false ? _GLF_FUZZED(vec3(4343.7293, 1818.4439, -307.316)) : _GLF_IDENTITY(vec3(1.0, 0.0, 0.0), min(_GLF_IDENTITY(vec3(1.0, 0.0, 0.0), vec3(mat3(vec3(1.0, 0.0, 0.0), 0.0, 0.0, 1.0, 0.0, _GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(0.0, 1.0, sqrt(1.0))), _GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(0.0, 1.0, sqrt(1.0))), (dot(vec3(1.0, 0.0, 0.0), vec3(0.0, 1.0, sqrt(1.0)))) + 0.0)), abs(1.0)))), vec3(1.0, 0.0, 0.0))))))), 0.0, 1.0, 1.0, _GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x))), _GLF_IDENTITY(abs(0.0), (true ? abs(0.0) : _GLF_FUZZED(-70.55))), 0.0, 0.0, 0.0, cos(0.0))))[0], (vec3(mat4x3(vec3(1.0, 0.0, 0.0), 0.0, 1.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), abs(0.0), 0.0, 0.0, 0.0, cos(0.0))))[1], _GLF_FUZZED(-33.62)), vec3(_GLF_FUZZED(_GLF_IDENTITY(-892.169, min(-892.169, -892.169))), _GLF_FUZZED(1309.3443), (vec3(mat4x3(vec3(1.0, 0.0, 0.0), 0.0, 1.0, 1.0, _GLF_ZERO(_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(float(75903))), float(0.0), bool(true))), injectionSwitch.x), abs(0.0), 0.0, 0.0, 0.0, cos(0.0))))[2]), bvec3(false, false, true)))), vec3(0.0, 1.0, 1.0)), dot(vec3(1.0, 0.0, 0.0), _GLF_IDENTITY(vec3(0.0, 1.0, 1.0), (vec3(0.0, 1.0, 1.0)) / sqrt(vec3(1.0, 1.0, 1.0))))), 0.0, 1.0, 0.0, 0.0, 0.0, abs(0.0), 0.0)), mat2(1.0) * (vec2(mat4x3(injectionSwitch, 0.0, 0.0, _GLF_IDENTITY(dot(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(vec3(1.0, 0.0, 0.0), mix(vec3(_GLF_FUZZED((+ vec4(647.549, 5.5, -0.3, 44.75).x)), (vec3(1.0, 0.0, 0.0))[1], (vec3(1.0, 0.0, 0.0))[2]), vec3((vec3(1.0, 0.0, 0.0))[0], _GLF_FUZZED((97.94)), _GLF_FUZZED(-913.488)), bvec3(true, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), (false ? _GLF_FUZZED(vec3(558.230)) : _GLF_IDENTITY(_GLF_IDENTITY(vec3(1.0, 0.0, 0.0), mix(vec3(_GLF_FUZZED((+ vec4(647.549, 5.5, -0.3, 44.75).x)), (vec3(1.0, 0.0, 0.0))[1], (vec3(1.0, 0.0, 0.0))[2]), vec3((vec3(1.0, 0.0, 0.0))[0], _GLF_FUZZED((97.94)), _GLF_FUZZED(-913.488)), bvec3(true, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), (true ? _GLF_IDENTITY(vec3(1.0, 0.0, 0.0), mix(vec3(_GLF_FUZZED((+ vec4(647.549, 5.5, -0.3, 44.75).x)), (vec3(1.0, 0.0, 0.0))[1], (vec3(1.0, 0.0, 0.0))[2]), vec3((vec3(1.0, 0.0, 0.0))[0], _GLF_FUZZED((97.94)), _GLF_FUZZED(-913.488)), bvec3(true, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) : _GLF_FUZZED(radians(vec3(-3133.4632, 9483.4637, 660.641))))))), _GLF_IDENTITY(vec3(mat4x3(vec3(1.0, 0.0, 0.0), 0.0, 1.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), abs(0.0), _GLF_IDENTITY(0.0, mix(float(_GLF_IDENTITY(0.0, float(mat3x2(0.0, 1.0, 0.0, 0.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x))))), float(_GLF_FUZZED(-3079.6476)), bool(false))), 0.0, 0.0, _GLF_IDENTITY(cos(0.0), 1.0 * (cos(0.0))))), mix(vec3((vec3(mat4x3(_GLF_IDENTITY(vec3(1.0, 0.0, 0.0), min(_GLF_IDENTITY(vec3(1.0, 0.0, 0.0), (vec3(1.0, 0.0, 0.0)) - vec3(0.0, 0.0, 0.0)), _GLF_IDENTITY(vec3(1.0, 0.0, 0.0), (false ? _GLF_FUZZED(vec3(4343.7293, 1818.4439, -307.316)) : _GLF_IDENTITY(vec3(1.0, 0.0, 0.0), min(_GLF_IDENTITY(vec3(1.0, 0.0, 0.0), vec3(mat3(vec3(1.0, 0.0, 0.0), 0.0, 0.0, 1.0, 0.0, _GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(0.0, 1.0, sqrt(1.0))), _GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(0.0, 1.0, sqrt(1.0))), (dot(vec3(1.0, 0.0, 0.0), vec3(0.0, 1.0, sqrt(1.0)))) + 0.0)), abs(1.0)))), vec3(1.0, 0.0, 0.0))))))), 0.0, 1.0, 1.0, _GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x))), _GLF_IDENTITY(abs(0.0), (true ? abs(0.0) : _GLF_FUZZED(-70.55))), 0.0, 0.0, 0.0, cos(0.0))))[0], (vec3(mat4x3(vec3(1.0, 0.0, 0.0), 0.0, 1.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), abs(0.0), 0.0, 0.0, 0.0, cos(0.0))))[1], _GLF_FUZZED(-33.62)), vec3(_GLF_FUZZED(_GLF_IDENTITY(-892.169, min(-892.169, -892.169))), _GLF_FUZZED(1309.3443), (vec3(mat4x3(vec3(1.0, 0.0, 0.0), 0.0, 1.0, 1.0, _GLF_ZERO(_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(float(75903))), float(0.0), bool(true))), injectionSwitch.x), abs(0.0), 0.0, 0.0, 0.0, cos(0.0))))[2]), bvec3(false, false, true)))), vec3(0.0, 1.0, 1.0)), dot(vec3(1.0, 0.0, 0.0), _GLF_IDENTITY(vec3(0.0, 1.0, 1.0), (vec3(0.0, 1.0, 1.0)) / sqrt(vec3(1.0, 1.0, 1.0))))), 0.0, 1.0, 0.0, 0.0, 0.0, abs(0.0), 0.0)))), vec2(mat4x3(injectionSwitch, 0.0, 0.0, _GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), _GLF_IDENTITY(vec3(0.0, 1.0, 1.0), min(_GLF_IDENTITY(vec3(0.0, 1.0, 1.0), _GLF_IDENTITY((vec3(0.0, 1.0, 1.0)) * mat3(1.0), clamp((vec3(0.0, 1.0, 1.0)) * mat3(1.0), (vec3(0.0, 1.0, 1.0)) * mat3(1.0), (vec3(0.0, 1.0, 1.0)) * mat3(1.0)))), vec3(0.0, 1.0, 1.0)))), dot(vec3(1.0, 0.0, _GLF_IDENTITY(0.0, _GLF_IDENTITY(min(0.0, 0.0), clamp(min(0.0, 0.0), min(0.0, 0.0), min(0.0, 0.0))))), vec3(0.0, 1.0, 1.0))), 0.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(0.0, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(normalize(-0.1)) : 0.0)), abs(0.0), 0.0))))).y))))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
    }
   else
    {
     return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
    }
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, true && (false))))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, false)), _GLF_IDENTITY(bool(bvec4(bool(bvec2(false, false)), true, false, false)), (bool(bvec4(bool(bvec2(false, false)), true, false, false))) && true))), _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y))))))
  return;
}
