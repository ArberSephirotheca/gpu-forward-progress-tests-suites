#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


struct _GLF_struct_0 {
 uint workgroup_id;
 float _f0;
 mat3x4 _f1;
} ;

layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 uvec4 GLF_merged3_0_2_51_2_1_11_3_1_17GLF_merged2_0_1_14_1_1_12workgroup_baseworkgroup_idsubgroup_idsubgroup_local_id;
 uvec2 GLF_merged2_0_1_14_1_1_12workgroup_baseworkgroup_id;
 GLF_merged3_0_2_51_2_1_11_3_1_17GLF_merged2_0_1_14_1_1_12workgroup_baseworkgroup_idsubgroup_idsubgroup_local_id.xy = GLF_merged2_0_1_14_1_1_12workgroup_baseworkgroup_id;
 uint subgroup_id = gl_SubgroupID;
 GLF_merged3_0_2_51_2_1_11_3_1_17GLF_merged2_0_1_14_1_1_12workgroup_baseworkgroup_idsubgroup_idsubgroup_local_id.z = subgroup_id;
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  return;
 uint subgroup_size = gl_SubgroupSize;
 uint subgroup_local_id = gl_SubgroupInvocationID;
 GLF_merged3_0_2_51_2_1_11_3_1_17GLF_merged2_0_1_14_1_1_12workgroup_baseworkgroup_idsubgroup_idsubgroup_local_id.w = subgroup_local_id;
 uint num_workgroup = gl_NumWorkGroups.x;
 uint workgroup_size = gl_WorkGroupSize.x;
 _GLF_struct_0 _GLF_struct_replacement_0 = _GLF_struct_0(gl_WorkGroupID.x, 1.0, mat3x4(1.0));
 GLF_merged3_0_2_51_2_1_11_3_1_17GLF_merged2_0_1_14_1_1_12workgroup_baseworkgroup_idsubgroup_idsubgroup_local_id.xy.y = _GLF_struct_replacement_0.workgroup_id;
 uint workgroup_base = workgroup_size * GLF_merged3_0_2_51_2_1_11_3_1_17GLF_merged2_0_1_14_1_1_12workgroup_baseworkgroup_idsubgroup_idsubgroup_local_id.xy.y;
 GLF_merged3_0_2_51_2_1_11_3_1_17GLF_merged2_0_1_14_1_1_12workgroup_baseworkgroup_idsubgroup_idsubgroup_local_id.xy.x = workgroup_base;
 uint virtual_gid = GLF_merged3_0_2_51_2_1_11_3_1_17GLF_merged2_0_1_14_1_1_12workgroup_baseworkgroup_idsubgroup_idsubgroup_local_id.xy.x + GLF_merged3_0_2_51_2_1_11_3_1_17GLF_merged2_0_1_14_1_1_12workgroup_baseworkgroup_idsubgroup_idsubgroup_local_id.z * subgroup_size + GLF_merged3_0_2_51_2_1_11_3_1_17GLF_merged2_0_1_14_1_1_12workgroup_baseworkgroup_idsubgroup_idsubgroup_local_id.w;
 uint next_virtual_gid = GLF_merged3_0_2_51_2_1_11_3_1_17GLF_merged2_0_1_14_1_1_12workgroup_baseworkgroup_idsubgroup_idsubgroup_local_id.xy.x + GLF_merged3_0_2_51_2_1_11_3_1_17GLF_merged2_0_1_14_1_1_12workgroup_baseworkgroup_idsubgroup_idsubgroup_local_id.z * subgroup_size + ((GLF_merged3_0_2_51_2_1_11_3_1_17GLF_merged2_0_1_14_1_1_12workgroup_baseworkgroup_idsubgroup_idsubgroup_local_id.w + 1) % subgroup_size);
 atomicStore(buf[virtual_gid], uint(1), 4, 64, 4);
 if(GLF_merged3_0_2_51_2_1_11_3_1_17GLF_merged2_0_1_14_1_1_12workgroup_baseworkgroup_idsubgroup_idsubgroup_local_id.w + 1 < subgroup_size)
  {
   atomicStore(buf[next_virtual_gid], uint(2), 4, 64, 4);
   subgroupAll(false);
  }
 else
  {
   atomicStore(buf[next_virtual_gid], uint(2), 4, 64, 4);
   subgroupAll(true);
  }
}
