#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 uint subgroup_size = gl_SubgroupSize;
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), ! (! (bool(false)))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), false || (false))))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_DEAD(false))))
      return;
    }
   else
    {
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], max(injectionSwitch[1], injectionSwitch[1])))).y)))) && true))
    {
    }
   else
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), mix(float(injectionSwitch.x), float(_GLF_FUZZED(8614.0580)), bool(false))) > injectionSwitch.y)), false || (_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x > injectionSwitch.y, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y) || false, bool(bool(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y) || false, ((injectionSwitch.x > injectionSwitch.y) || false) || false)))))))))), _GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec3(false, true, false))) || _GLF_IDENTITY((_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch, mix(_GLF_IDENTITY(vec2((_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))[0], _GLF_IDENTITY((injectionSwitch)[1], ((injectionSwitch)[_GLF_IDENTITY(1, 0 | (1))]) * 1.0)), (vec2((_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))[0], _GLF_IDENTITY((injectionSwitch)[1], ((injectionSwitch)[_GLF_IDENTITY(1, 0 | (1))]) * 1.0))) * mat2(1.0)), vec2(_GLF_FUZZED(_GLF_IDENTITY(-2746.4360, (-2746.4360) * 1.0)), _GLF_FUZZED(65.31)), bvec2(false, false))).x > _GLF_IDENTITY(injectionSwitch.y, mix(_GLF_IDENTITY(float(_GLF_IDENTITY(_GLF_FUZZED(27.48), 0.0 + (_GLF_FUZZED(27.48)))), min(float(_GLF_FUZZED(27.48)), _GLF_IDENTITY(float(_GLF_FUZZED(_GLF_IDENTITY(27.48, 0.0 + (27.48)))), min(float(_GLF_FUZZED(27.48)), float(_GLF_FUZZED(_GLF_IDENTITY(27.48, min(_GLF_IDENTITY(27.48, mix(float(_GLF_FUZZED(288.423)), float(27.48), bool(true))), _GLF_IDENTITY(27.48, min(27.48, 27.48)))))))))), float(injectionSwitch.y), bool(true)))) || false)), false || ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch, mix(_GLF_IDENTITY(vec2((_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))[0], _GLF_IDENTITY((injectionSwitch)[1], ((injectionSwitch)[_GLF_IDENTITY(1, 0 | (1))]) * 1.0)), (vec2((_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))[0], _GLF_IDENTITY((injectionSwitch)[1], ((injectionSwitch)[_GLF_IDENTITY(1, 0 | (1))]) * 1.0))) * mat2(1.0)), vec2(_GLF_FUZZED(_GLF_IDENTITY(-2746.4360, (-2746.4360) * 1.0)), _GLF_FUZZED(65.31)), bvec2(false, false))).x > _GLF_IDENTITY(injectionSwitch.y, mix(_GLF_IDENTITY(float(_GLF_IDENTITY(_GLF_FUZZED(27.48), 0.0 + (_GLF_FUZZED(27.48)))), min(float(_GLF_FUZZED(27.48)), _GLF_IDENTITY(float(_GLF_FUZZED(_GLF_IDENTITY(27.48, 0.0 + (27.48)))), min(float(_GLF_FUZZED(27.48)), float(_GLF_FUZZED(_GLF_IDENTITY(27.48, min(_GLF_IDENTITY(27.48, mix(float(_GLF_FUZZED(288.423)), float(27.48), bool(true))), _GLF_IDENTITY(27.48, min(27.48, 27.48)))))))))), float(injectionSwitch.y), bool(true)))) || false))))))))), bool(bool((_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, (false) && true), true), bvec2(bvec3(bvec2(_GLF_IDENTITY(false, (false) && true), true), true)))), (bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, (false) && true), true), bvec2(bvec3(bvec2(_GLF_IDENTITY(false, (false) && true), true), true))))) || false)), (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(false, false || (false)) || (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(6448.3610)), bool(false))), injectionSwitch.x)), injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))))))))))), bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec3(false, true, false))) || _GLF_IDENTITY((_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(_GLF_IDENTITY(mat4x2(injectionSwitch.y, 0.0, cos(0.0), 1.0, 1.0, sin(0.0), 1.0, _GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), float(_GLF_IDENTITY(mat4x3(_GLF_ONE(1.0, injectionSwitch.y), 0.0, determinant(mat2(1.0, 0.0, 0.0, 1.0)), 0.0, 0.0, 1.0, 0.0, log(1.0), 1.0, 1.0, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), determinant(mat3(1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0))), (false ? _GLF_FUZZED(mat4x3(-3.8, 9492.7038, -9.0, 106.101, -2676.2804, -827.891, 5170.6566, -7.8, -0.4, 458.822, -9.3, -49.01)) : mat4x3(_GLF_ONE(1.0, injectionSwitch.y), 0.0, determinant(mat2(1.0, 0.0, 0.0, 1.0)), 0.0, 0.0, 1.0, 0.0, log(1.0), 1.0, 1.0, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), determinant(mat3(1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0)))))))), mat2(1.0) * (mat4x2(injectionSwitch.y, 0.0, cos(0.0), 1.0, 1.0, sin(0.0), 1.0, _GLF_ONE(1.0, injectionSwitch.y)))))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(mix(float(_GLF_FUZZED(27.48)), float(injectionSwitch.y), bool(true)), 0.0 + (mix(float(_GLF_FUZZED(27.48)), float(injectionSwitch.y), bool(true)))))) || false))))))), bool(bool((_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false), false || (_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(_GLF_ONE(1.0, injectionSwitch.y)), clamp((injectionSwitch) * mat2(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)))))), (injectionSwitch) * mat2(_GLF_ONE(1.0, injectionSwitch.y)), (injectionSwitch) * mat2(_GLF_ONE(_GLF_IDENTITY(1.0, (1.0) + determinant(mat3(0.0, 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), _GLF_IDENTITY(dot(vec3(1.0, 1.0, 0.0), vec3(0.0, 0.0, 1.0)), dot(vec3(1.0, 1.0, 0.0), vec3(0.0, 0.0, 1.0))), 0.0, 1.0, 1.0, 0.0))), injectionSwitch.y))))).x, min(_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), _GLF_IDENTITY(float(_GLF_FUZZED(6448.3610)), min(float(_GLF_FUZZED(6448.3610)), float(_GLF_FUZZED(6448.3610)))), bool(false))), injectionSwitch.x)), _GLF_IDENTITY(injectionSwitch.x, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(-9.4) : _GLF_IDENTITY(injectionSwitch.x, float(mat4(injectionSwitch.x, 1.0, 0.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0))))))) > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + log(vec2(1.0, 1.0))).y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))))))))))), ! _GLF_IDENTITY((! (_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, true, _GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, bool(bvec4(false, true, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))), bvec3(bvec3(bvec3(false, true, _GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, bool(bvec4(false, true, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))))))) || _GLF_IDENTITY((_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(27.48)), float(_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), injectionSwitch, _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(76.45)), vec2(_GLF_FUZZED(1.4), (injectionSwitch)[1]), bvec2(false, true))))).y), bool(true)))) || false))))))), bool(bool((_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(6448.3610)), bool(false))), injectionSwitch.x)), injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)))))), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(sinh(vec2(-0.1, -7.5))) : injectionSwitch))) - vec2(0.0, 0.0)).x, injectionSwitch.x, injectionSwitch.x))) * 1.0), min(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(6448.3610)), bool(false))), injectionSwitch.x)), injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))), ((_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x))) * 1.0), min(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(6448.3610)), bool(false))), injectionSwitch.x)), injectionSwitch.x)) > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)), 1.0 * (_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).y, _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(true, bool(bvec2(true, false))) ? _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)) : _GLF_FUZZED(vec3(-99.17, 459.157, 9.4).yy))).y)))))) && _GLF_IDENTITY(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (true)))))))))))))))), true && ((! (_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, true, _GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, bool(bvec4(false, true, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))), bvec3(bvec3(bvec3(false, true, _GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, bool(bvec4(false, true, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))))))) || _GLF_IDENTITY((_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(27.48)), float(_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), injectionSwitch, _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(76.45)), vec2(_GLF_FUZZED(1.4), (injectionSwitch)[1]), bvec2(false, true))))).y), bool(true)))) || false))))))), bool(bool((_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(6448.3610)), bool(false))), injectionSwitch.x)), injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)))))), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(sinh(vec2(-0.1, -7.5))) : injectionSwitch))) - vec2(0.0, 0.0)).x, injectionSwitch.x, injectionSwitch.x))) * 1.0), min(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(6448.3610)), bool(false))), injectionSwitch.x)), injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))), ((_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x))) * 1.0), min(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(6448.3610)), bool(false))), injectionSwitch.x)), injectionSwitch.x)) > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)), 1.0 * (_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).y, _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(true, bool(bvec2(true, false))) ? _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)) : _GLF_FUZZED(vec3(-99.17, 459.157, 9.4).yy))).y)))))) && _GLF_IDENTITY(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (true))))))))))))))))))))))))
      return;
    }
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
     if(_GLF_DEAD(false))
      return;
    }
   else
    {
     return;
    }
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          return;
         return;
        }
       return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_WRAPPED_IF_TRUE(true))
      {
       return;
      }
     else
      {
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
        }
       else
        {
         if(_GLF_DEAD(false))
          return;
         if(_GLF_WRAPPED_IF_TRUE(true))
          {
           return;
          }
         else
          {
          }
        }
      }
    }
   else
    {
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(false))
    {
     do
      {
       return;
       if(_GLF_DEAD(false))
        return;
      }
     while(_GLF_WRAPPED_LOOP(false));
    }
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(-996.364, -765.983)) : injectionSwitch)), injectionSwitch)).x > _GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).y)))))))
  return;
 uint num_workgroup = _GLF_IDENTITY(gl_NumWorkGroups, ~ (~ (gl_NumWorkGroups))).x;
 uint workgroup_size = _GLF_IDENTITY(gl_WorkGroupSize.x, (true ? _GLF_IDENTITY(gl_WorkGroupSize.x, uint(uvec2(gl_WorkGroupSize.x, 0u))) : _GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(28556u), _GLF_IDENTITY(~ (~ (_GLF_IDENTITY(_GLF_FUZZED(28556u), _GLF_IDENTITY((_GLF_FUZZED(28556u)), (_GLF_IDENTITY((_GLF_FUZZED(28556u)), ((_GLF_FUZZED(28556u))) | ((_GLF_FUZZED(28556u))))) | ((_GLF_FUZZED(28556u)))) ^ 0u))), uint(uvec4(_GLF_IDENTITY(~ (~ (_GLF_IDENTITY(_GLF_FUZZED(28556u), _GLF_IDENTITY((_GLF_FUZZED(28556u)), (_GLF_IDENTITY((_GLF_FUZZED(28556u)), ((_GLF_FUZZED(28556u))) | ((_GLF_FUZZED(28556u))))) | ((_GLF_FUZZED(28556u)))) ^ 0u))), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(subgroup_local_id) : ~ (~ (_GLF_IDENTITY(_GLF_FUZZED(28556u), _GLF_IDENTITY((_GLF_FUZZED(28556u)), (_GLF_IDENTITY((_GLF_FUZZED(28556u)), ((_GLF_FUZZED(28556u))) | ((_GLF_FUZZED(28556u))))) | ((_GLF_FUZZED(28556u)))) ^ 0u))))), 1u, 0u, uint(_GLF_ZERO(0.0, injectionSwitch.x)))))), (_GLF_IDENTITY(_GLF_FUZZED(28556u), ~ (~ (_GLF_IDENTITY(_GLF_FUZZED(28556u), (_GLF_FUZZED(28556u)) ^ _GLF_IDENTITY(0u, clamp(0u, 0u, 0u))))))) | (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(28556u), ~ (~ (_GLF_IDENTITY(_GLF_FUZZED(28556u), (_GLF_FUZZED(28556u)) ^ _GLF_IDENTITY(0u, max(0u, _GLF_IDENTITY(0u, (0u) | 0u))))))), max(_GLF_IDENTITY(_GLF_FUZZED(28556u), ~ (~ (_GLF_IDENTITY(_GLF_FUZZED(28556u), (_GLF_FUZZED(28556u)) ^ 0u)))), _GLF_IDENTITY(_GLF_FUZZED(28556u), ~ (~ (_GLF_IDENTITY(_GLF_FUZZED(28556u), (_GLF_FUZZED(28556u)) ^ _GLF_IDENTITY(0u, max(0u, _GLF_IDENTITY(0u, (false ? _GLF_FUZZED(subgroup_size) : 0u))))))))))))));
 if(_GLF_DEAD(false))
  return;
 for(int _injected_loop_counter = (((0 | 1) << _GLF_IDENTITY(int(0), int(0))) >> _GLF_IDENTITY(int(0), int(0))); _GLF_WRAPPED_LOOP(_injected_loop_counter != int(_GLF_ZERO(0.0, injectionSwitch.x))); _injected_loop_counter --)
  {
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))), ! (! (_GLF_DEAD(_GLF_IDENTITY(false, true && (false)))))))
    return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[_GLF_IDENTITY(0, (_GLF_IDENTITY(0, (0) | (0))) - 0)], _GLF_FUZZED(-8.1)), _GLF_IDENTITY(vec2(_GLF_FUZZED(vec2(-1.1, _GLF_IDENTITY(-279.417, exp(0.0) * (_GLF_IDENTITY(-279.417, min(-279.417, -279.417))))).y), (injectionSwitch)[1]), max(vec2(_GLF_FUZZED(vec2(-1.1, -279.417).y), (injectionSwitch)[1]), vec2(_GLF_FUZZED(vec2(-1.1, -279.417).y), (injectionSwitch)[1]))), bvec2(false, _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)))), injectionSwitch.y))))))), max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[_GLF_IDENTITY(0, (_GLF_IDENTITY(0, (0) | (0))) - 0)], _GLF_FUZZED(-8.1)), _GLF_IDENTITY(vec2(_GLF_FUZZED(vec2(-1.1, _GLF_IDENTITY(-279.417, exp(0.0) * (_GLF_IDENTITY(-279.417, min(-279.417, -279.417))))).y), (injectionSwitch)[1]), max(vec2(_GLF_FUZZED(vec2(-1.1, -279.417).y), (injectionSwitch)[1]), vec2(_GLF_FUZZED(vec2(-1.1, -279.417).y), (injectionSwitch)[1]))), bvec2(false, _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)))), injectionSwitch.y))))))), max(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[_GLF_IDENTITY(0, (_GLF_IDENTITY(0, (0) | (0))) - 0)], _GLF_FUZZED(-8.1)), _GLF_IDENTITY(vec2(_GLF_FUZZED(vec2(-1.1, _GLF_IDENTITY(-279.417, exp(0.0) * (_GLF_IDENTITY(-279.417, min(-279.417, -279.417))))).y), (injectionSwitch)[1]), max(vec2(_GLF_FUZZED(vec2(-1.1, -279.417).y), (injectionSwitch)[1]), vec2(_GLF_FUZZED(vec2(-1.1, -279.417).y), (injectionSwitch)[1]))), bvec2(false, _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)))), injectionSwitch.y))))))), _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[_GLF_IDENTITY(0, (_GLF_IDENTITY(0, (0) | (0))) - 0)], _GLF_FUZZED(-8.1)), _GLF_IDENTITY(vec2(_GLF_FUZZED(vec2(-1.1, _GLF_IDENTITY(-279.417, exp(0.0) * (_GLF_IDENTITY(-279.417, min(-279.417, -279.417))))).y), (injectionSwitch)[1]), max(vec2(_GLF_FUZZED(vec2(-1.1, -279.417).y), (injectionSwitch)[1]), vec2(_GLF_FUZZED(vec2(-1.1, -279.417).y), (injectionSwitch)[1]))), bvec2(false, _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)))), injectionSwitch.y))))))))), _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[_GLF_IDENTITY(0, (_GLF_IDENTITY(0, (0) | (0))) - 0)], _GLF_FUZZED(-8.1)), _GLF_IDENTITY(vec2(_GLF_FUZZED(vec2(-1.1, _GLF_IDENTITY(-279.417, exp(0.0) * (_GLF_IDENTITY(-279.417, min(-279.417, -279.417))))).y), (injectionSwitch)[1]), max(vec2(_GLF_FUZZED(vec2(-1.1, -279.417).y), (injectionSwitch)[1]), vec2(_GLF_FUZZED(vec2(-1.1, -279.417).y), (injectionSwitch)[1]))), bvec2(false, _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)))), injectionSwitch.y))))))))).x, min(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[_GLF_IDENTITY(0, (_GLF_IDENTITY(0, (0) | (0))) - 0)], _GLF_FUZZED(-8.1)), _GLF_IDENTITY(vec2(_GLF_FUZZED(vec2(-1.1, _GLF_IDENTITY(-279.417, exp(0.0) * (_GLF_IDENTITY(-279.417, min(-279.417, -279.417))))).y), (injectionSwitch)[1]), max(vec2(_GLF_FUZZED(vec2(-1.1, -279.417).y), (injectionSwitch)[1]), vec2(_GLF_FUZZED(vec2(-1.1, -279.417).y), (injectionSwitch)[1]))), bvec2(false, _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)))), injectionSwitch.y))))))), max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[_GLF_IDENTITY(0, (_GLF_IDENTITY(0, (0) | (0))) - 0)], _GLF_FUZZED(-8.1)), _GLF_IDENTITY(vec2(_GLF_FUZZED(vec2(-1.1, _GLF_IDENTITY(-279.417, exp(0.0) * (_GLF_IDENTITY(-279.417, min(-279.417, -279.417))))).y), (injectionSwitch)[1]), max(vec2(_GLF_FUZZED(vec2(-1.1, -279.417).y), (injectionSwitch)[1]), vec2(_GLF_FUZZED(vec2(-1.1, -279.417).y), (injectionSwitch)[1]))), bvec2(false, _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)))), injectionSwitch.y))))))), max(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[_GLF_IDENTITY(0, (_GLF_IDENTITY(0, (0) | (0))) - 0)], _GLF_FUZZED(-8.1)), _GLF_IDENTITY(vec2(_GLF_FUZZED(vec2(-1.1, _GLF_IDENTITY(-279.417, exp(0.0) * (_GLF_IDENTITY(-279.417, min(-279.417, -279.417))))).y), (injectionSwitch)[1]), max(vec2(_GLF_FUZZED(vec2(-1.1, -279.417).y), (injectionSwitch)[1]), vec2(_GLF_FUZZED(vec2(-1.1, -279.417).y), (injectionSwitch)[1]))), bvec2(false, _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)))), injectionSwitch.y))))))), _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[_GLF_IDENTITY(0, (_GLF_IDENTITY(0, (0) | (0))) - 0)], _GLF_FUZZED(-8.1)), _GLF_IDENTITY(vec2(_GLF_FUZZED(vec2(-1.1, _GLF_IDENTITY(-279.417, exp(0.0) * (_GLF_IDENTITY(-279.417, min(-279.417, -279.417))))).y), (injectionSwitch)[1]), max(vec2(_GLF_FUZZED(vec2(-1.1, -279.417).y), (injectionSwitch)[1]), vec2(_GLF_FUZZED(vec2(-1.1, -279.417).y), (injectionSwitch)[1]))), bvec2(false, _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)))), injectionSwitch.y))))))))), _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[_GLF_IDENTITY(0, (_GLF_IDENTITY(0, (0) | (0))) - 0)], _GLF_FUZZED(-8.1)), _GLF_IDENTITY(vec2(_GLF_FUZZED(vec2(-1.1, _GLF_IDENTITY(-279.417, exp(0.0) * (_GLF_IDENTITY(-279.417, min(-279.417, -279.417))))).y), (injectionSwitch)[1]), max(vec2(_GLF_FUZZED(vec2(-1.1, -279.417).y), (injectionSwitch)[1]), vec2(_GLF_FUZZED(vec2(-1.1, -279.417).y), (injectionSwitch)[1]))), bvec2(false, _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)))), injectionSwitch.y))))))))).x, min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[_GLF_IDENTITY(0, (_GLF_IDENTITY(0, (0) | (0))) - 0)], _GLF_FUZZED(-8.1)), _GLF_IDENTITY(vec2(_GLF_FUZZED(vec2(-1.1, _GLF_IDENTITY(-279.417, exp(0.0) * (_GLF_IDENTITY(-279.417, min(-279.417, -279.417))))).y), (injectionSwitch)[1]), max(vec2(_GLF_FUZZED(vec2(-1.1, -279.417).y), (injectionSwitch)[1]), vec2(_GLF_FUZZED(vec2(-1.1, -279.417).y), (injectionSwitch)[1]))), bvec2(false, _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)))), injectionSwitch.y))))))), max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[_GLF_IDENTITY(0, (_GLF_IDENTITY(0, (0) | (0))) - 0)], _GLF_FUZZED(-8.1)), _GLF_IDENTITY(vec2(_GLF_FUZZED(vec2(-1.1, _GLF_IDENTITY(-279.417, exp(0.0) * (_GLF_IDENTITY(-279.417, min(-279.417, -279.417))))).y), (injectionSwitch)[1]), max(vec2(_GLF_FUZZED(vec2(-1.1, -279.417).y), (injectionSwitch)[1]), vec2(_GLF_FUZZED(vec2(-1.1, -279.417).y), (injectionSwitch)[1]))), bvec2(false, _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)))), injectionSwitch.y))))))), max(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[_GLF_IDENTITY(0, (_GLF_IDENTITY(0, (0) | (0))) - 0)], _GLF_FUZZED(-8.1)), _GLF_IDENTITY(vec2(_GLF_FUZZED(vec2(-1.1, _GLF_IDENTITY(-279.417, exp(0.0) * (_GLF_IDENTITY(-279.417, min(-279.417, -279.417))))).y), (injectionSwitch)[1]), max(vec2(_GLF_FUZZED(vec2(-1.1, -279.417).y), (injectionSwitch)[1]), vec2(_GLF_FUZZED(vec2(-1.1, -279.417).y), (injectionSwitch)[1]))), bvec2(false, _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)))), injectionSwitch.y))))))), _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[_GLF_IDENTITY(0, (_GLF_IDENTITY(0, (0) | (0))) - 0)], _GLF_FUZZED(-8.1)), _GLF_IDENTITY(vec2(_GLF_FUZZED(vec2(-1.1, _GLF_IDENTITY(-279.417, exp(0.0) * (_GLF_IDENTITY(-279.417, min(-279.417, -279.417))))).y), (injectionSwitch)[1]), max(vec2(_GLF_FUZZED(vec2(-1.1, -279.417).y), (injectionSwitch)[1]), vec2(_GLF_FUZZED(vec2(-1.1, -279.417).y), (injectionSwitch)[1]))), bvec2(false, _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)))), injectionSwitch.y))))))))), _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[_GLF_IDENTITY(0, (_GLF_IDENTITY(0, (0) | (0))) - 0)], _GLF_FUZZED(-8.1)), _GLF_IDENTITY(vec2(_GLF_FUZZED(vec2(-1.1, _GLF_IDENTITY(-279.417, exp(0.0) * (_GLF_IDENTITY(-279.417, min(-279.417, -279.417))))).y), (injectionSwitch)[1]), max(vec2(_GLF_FUZZED(vec2(-1.1, -279.417).y), (injectionSwitch)[1]), vec2(_GLF_FUZZED(vec2(-1.1, -279.417).y), (injectionSwitch)[1]))), bvec2(false, _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)))), injectionSwitch.y))))))))).x, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[_GLF_IDENTITY(0, (_GLF_IDENTITY(0, (0) | (0))) - 0)], _GLF_FUZZED(-8.1)), _GLF_IDENTITY(vec2(_GLF_FUZZED(vec2(-1.1, _GLF_IDENTITY(-279.417, exp(0.0) * (_GLF_IDENTITY(-279.417, min(-279.417, -279.417))))).y), (injectionSwitch)[1]), max(vec2(_GLF_FUZZED(vec2(-1.1, -279.417).y), (injectionSwitch)[1]), vec2(_GLF_FUZZED(vec2(-1.1, -279.417).y), (injectionSwitch)[1]))), bvec2(false, _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)))), injectionSwitch.y))))))), max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[_GLF_IDENTITY(0, (_GLF_IDENTITY(0, (0) | (0))) - 0)], _GLF_FUZZED(-8.1)), _GLF_IDENTITY(vec2(_GLF_FUZZED(vec2(-1.1, _GLF_IDENTITY(-279.417, exp(0.0) * (_GLF_IDENTITY(-279.417, min(-279.417, -279.417))))).y), (injectionSwitch)[1]), max(vec2(_GLF_FUZZED(vec2(-1.1, -279.417).y), (injectionSwitch)[1]), vec2(_GLF_FUZZED(vec2(-1.1, -279.417).y), (injectionSwitch)[1]))), bvec2(false, _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)))), injectionSwitch.y))))))), max(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[_GLF_IDENTITY(0, (_GLF_IDENTITY(0, (0) | (0))) - 0)], _GLF_FUZZED(-8.1)), _GLF_IDENTITY(vec2(_GLF_FUZZED(vec2(-1.1, _GLF_IDENTITY(-279.417, exp(0.0) * (_GLF_IDENTITY(-279.417, min(-279.417, -279.417))))).y), (injectionSwitch)[1]), max(vec2(_GLF_FUZZED(vec2(-1.1, -279.417).y), (injectionSwitch)[1]), vec2(_GLF_FUZZED(vec2(-1.1, -279.417).y), (injectionSwitch)[1]))), bvec2(false, _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)))), injectionSwitch.y))))))), _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[_GLF_IDENTITY(0, (_GLF_IDENTITY(0, (0) | (0))) - 0)], _GLF_FUZZED(-8.1)), _GLF_IDENTITY(vec2(_GLF_FUZZED(vec2(-1.1, _GLF_IDENTITY(-279.417, exp(0.0) * (_GLF_IDENTITY(-279.417, min(-279.417, -279.417))))).y), (injectionSwitch)[1]), max(vec2(_GLF_FUZZED(vec2(-1.1, -279.417).y), (injectionSwitch)[1]), vec2(_GLF_FUZZED(vec2(-1.1, -279.417).y), (injectionSwitch)[1]))), bvec2(false, _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)))), injectionSwitch.y))))))))), _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[_GLF_IDENTITY(0, (_GLF_IDENTITY(0, (0) | (0))) - 0)], _GLF_FUZZED(-8.1)), _GLF_IDENTITY(vec2(_GLF_FUZZED(vec2(-1.1, _GLF_IDENTITY(-279.417, exp(0.0) * (_GLF_IDENTITY(-279.417, min(-279.417, -279.417))))).y), (injectionSwitch)[1]), max(vec2(_GLF_FUZZED(vec2(-1.1, -279.417).y), (injectionSwitch)[1]), vec2(_GLF_FUZZED(vec2(-1.1, -279.417).y), (injectionSwitch)[1]))), bvec2(false, _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)))), injectionSwitch.y))))))))).x)), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[_GLF_IDENTITY(0, (_GLF_IDENTITY(0, (0) | (0))) - 0)], _GLF_FUZZED(-8.1)), _GLF_IDENTITY(vec2(_GLF_FUZZED(vec2(-1.1, _GLF_IDENTITY(-279.417, exp(0.0) * (_GLF_IDENTITY(-279.417, min(-279.417, -279.417))))).y), (injectionSwitch)[1]), max(vec2(_GLF_FUZZED(vec2(-1.1, -279.417).y), (injectionSwitch)[1]), vec2(_GLF_FUZZED(vec2(-1.1, -279.417).y), (injectionSwitch)[1]))), bvec2(false, _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)))), injectionSwitch.y))))))), max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[_GLF_IDENTITY(0, (_GLF_IDENTITY(0, (0) | (0))) - 0)], _GLF_FUZZED(-8.1)), _GLF_IDENTITY(vec2(_GLF_FUZZED(vec2(-1.1, _GLF_IDENTITY(-279.417, exp(0.0) * (_GLF_IDENTITY(-279.417, min(-279.417, -279.417))))).y), (injectionSwitch)[1]), max(vec2(_GLF_FUZZED(vec2(-1.1, -279.417).y), (injectionSwitch)[1]), vec2(_GLF_FUZZED(vec2(-1.1, -279.417).y), (injectionSwitch)[1]))), bvec2(false, _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)))), injectionSwitch.y))))))), max(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[_GLF_IDENTITY(0, (_GLF_IDENTITY(0, (0) | (0))) - 0)], _GLF_FUZZED(-8.1)), _GLF_IDENTITY(vec2(_GLF_FUZZED(vec2(-1.1, _GLF_IDENTITY(-279.417, exp(0.0) * (_GLF_IDENTITY(-279.417, min(-279.417, -279.417))))).y), (injectionSwitch)[1]), max(vec2(_GLF_FUZZED(vec2(-1.1, -279.417).y), (injectionSwitch)[1]), vec2(_GLF_FUZZED(vec2(-1.1, -279.417).y), (injectionSwitch)[1]))), bvec2(false, _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)))), injectionSwitch.y))))))), _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[_GLF_IDENTITY(0, (_GLF_IDENTITY(0, (0) | (0))) - 0)], _GLF_FUZZED(-8.1)), _GLF_IDENTITY(vec2(_GLF_FUZZED(vec2(-1.1, _GLF_IDENTITY(-279.417, exp(0.0) * (_GLF_IDENTITY(-279.417, min(-279.417, -279.417))))).y), (injectionSwitch)[1]), max(vec2(_GLF_FUZZED(vec2(-1.1, -279.417).y), (injectionSwitch)[1]), vec2(_GLF_FUZZED(vec2(-1.1, -279.417).y), (injectionSwitch)[1]))), bvec2(false, _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)))), injectionSwitch.y))))))))), _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[_GLF_IDENTITY(0, (_GLF_IDENTITY(0, (0) | (0))) - 0)], _GLF_FUZZED(-8.1)), _GLF_IDENTITY(vec2(_GLF_FUZZED(vec2(-1.1, _GLF_IDENTITY(-279.417, exp(0.0) * (_GLF_IDENTITY(-279.417, min(-279.417, -279.417))))).y), (injectionSwitch)[1]), max(vec2(_GLF_FUZZED(vec2(-1.1, -279.417).y), (injectionSwitch)[1]), vec2(_GLF_FUZZED(vec2(-1.1, -279.417).y), (injectionSwitch)[1]))), bvec2(false, _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)))), injectionSwitch.y))))))))).x)) > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), false || (! _GLF_IDENTITY((false), bool(bool(_GLF_IDENTITY((false), ((false)) && true))))))))))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec2(false, _GLF_IDENTITY(true, bool(bvec4(true, false, false, true))))))) || _GLF_FALSE(_GLF_IDENTITY(false, bool(bvec4(false, false, false, true))), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))))))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     do
      {
       return;
      }
     while(_GLF_WRAPPED_LOOP(false));
    }
   return;
  }
 do
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_DEAD(false))))) || false))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY((_GLF_DEAD(false)), ((_GLF_DEAD(false))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false))
    continue;
  }
 while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
 uint workgroup_id = gl_WorkGroupID.x;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, _GLF_ONE(_GLF_IDENTITY(1.0, float(mat4x3(1.0, 1.0, 1.0, _GLF_IDENTITY(dot(vec4(0.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 1.0), vec4(tan(0.0), 0.0, 0.0, abs(1.0))), dot(vec4(0.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 1.0), vec4(tan(0.0), 0.0, 0.0, abs(1.0)))), tan(0.0), 1.0, 1.0, 0.0, 1.0, 1.0, length(sin(vec4(0.0, 0.0, 0.0, 0.0))), 0.0))), injectionSwitch.y) * (injectionSwitch.y)), min(injectionSwitch.y, injectionSwitch.y))), ! (! (_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(mix(float(_GLF_FUZZED(45.08)), float(injectionSwitch.y), bool(true)), (true ? _GLF_IDENTITY(mix(float(_GLF_FUZZED(45.08)), float(injectionSwitch.y), bool(true)), min(mix(float(_GLF_FUZZED(45.08)), float(injectionSwitch.y), bool(true)), mix(float(_GLF_FUZZED(45.08)), float(injectionSwitch.y), bool(true)))) : _GLF_FUZZED(94.52)))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(min(injectionSwitch.y, injectionSwitch.y), mix(float(min(injectionSwitch.y, injectionSwitch.y)), float(_GLF_FUZZED((_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) && true)) && true) ? 38.17 : 0.2))), bool(false))), float(_GLF_IDENTITY(float(_GLF_IDENTITY(min(injectionSwitch.y, injectionSwitch.y), mix(float(min(injectionSwitch.y, injectionSwitch.y)), float(_GLF_FUZZED((false ? 38.17 : 0.2))), bool(false)))), clamp(float(_GLF_IDENTITY(min(injectionSwitch.y, injectionSwitch.y), mix(float(_GLF_IDENTITY(min(injectionSwitch.y, injectionSwitch.y), clamp(min(injectionSwitch.y, injectionSwitch.y), min(injectionSwitch.y, injectionSwitch.y), _GLF_IDENTITY(min(injectionSwitch.y, injectionSwitch.y), (false ? _GLF_FUZZED(1192.8263) : min(injectionSwitch.y, injectionSwitch.y)))))), float(_GLF_FUZZED((false ? 38.17 : _GLF_IDENTITY(0.2, mix(float(_GLF_FUZZED(-9096.2870)), float(0.2), bool(true)))))), bool(false)))), float(_GLF_IDENTITY(min(injectionSwitch.y, injectionSwitch.y), mix(float(min(injectionSwitch.y, injectionSwitch.y)), float(_GLF_FUZZED(_GLF_IDENTITY((false ? 38.17 : 0.2), (false ? _GLF_FUZZED(485.888) : (false ? 38.17 : 0.2))))), bool(false)))), float(_GLF_IDENTITY(_GLF_IDENTITY(min(injectionSwitch.y, injectionSwitch.y), clamp(min(injectionSwitch.y, injectionSwitch.y), min(injectionSwitch.y, injectionSwitch.y), min(injectionSwitch.y, injectionSwitch.y))), mix(float(min(injectionSwitch.y, injectionSwitch.y)), float(_GLF_FUZZED((false ? 38.17 : 0.2))), bool(false)))))))), mix(float(_GLF_IDENTITY(_GLF_IDENTITY(min(injectionSwitch.y, injectionSwitch.y), mix(float(min(injectionSwitch.y, injectionSwitch.y)), float(_GLF_FUZZED((_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) && true)) && true) ? 38.17 : 0.2))), bool(false))), float(_GLF_IDENTITY(float(_GLF_IDENTITY(min(injectionSwitch.y, injectionSwitch.y), mix(float(min(injectionSwitch.y, injectionSwitch.y)), float(_GLF_FUZZED((false ? 38.17 : 0.2))), bool(false)))), clamp(float(_GLF_IDENTITY(min(injectionSwitch.y, injectionSwitch.y), mix(float(_GLF_IDENTITY(min(injectionSwitch.y, injectionSwitch.y), clamp(min(injectionSwitch.y, injectionSwitch.y), min(injectionSwitch.y, injectionSwitch.y), _GLF_IDENTITY(min(injectionSwitch.y, injectionSwitch.y), (false ? _GLF_FUZZED(1192.8263) : min(injectionSwitch.y, injectionSwitch.y)))))), float(_GLF_FUZZED((false ? 38.17 : _GLF_IDENTITY(0.2, mix(float(_GLF_FUZZED(-9096.2870)), float(0.2), bool(true)))))), bool(false)))), float(_GLF_IDENTITY(min(injectionSwitch.y, injectionSwitch.y), mix(float(min(injectionSwitch.y, injectionSwitch.y)), float(_GLF_FUZZED(_GLF_IDENTITY((false ? 38.17 : 0.2), (false ? _GLF_FUZZED(485.888) : (false ? 38.17 : 0.2))))), bool(false)))), float(_GLF_IDENTITY(_GLF_IDENTITY(min(injectionSwitch.y, injectionSwitch.y), clamp(min(injectionSwitch.y, injectionSwitch.y), min(injectionSwitch.y, injectionSwitch.y), min(injectionSwitch.y, injectionSwitch.y))), mix(float(min(injectionSwitch.y, injectionSwitch.y)), float(_GLF_FUZZED((false ? 38.17 : 0.2))), bool(false))))))))), float(_GLF_FUZZED(3.4)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), true && ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(min(injectionSwitch.y, injectionSwitch.y), mix(float(min(injectionSwitch.y, injectionSwitch.y)), float(_GLF_FUZZED((false ? 38.17 : 0.2))), bool(false))), min(_GLF_IDENTITY(min(injectionSwitch.y, injectionSwitch.y), mix(float(min(injectionSwitch.y, injectionSwitch.y)), float(_GLF_FUZZED((false ? 38.17 : 0.2))), bool(false))), _GLF_IDENTITY(min(injectionSwitch.y, injectionSwitch.y), mix(float(min(injectionSwitch.y, injectionSwitch.y)), float(_GLF_FUZZED((false ? 38.17 : 0.2))), bool(false))))), float(mat2x3(_GLF_IDENTITY(min(injectionSwitch.y, injectionSwitch.y), mix(float(min(injectionSwitch.y, injectionSwitch.y)), float(_GLF_FUZZED((false ? _GLF_IDENTITY(38.17, float(mat4(_GLF_IDENTITY(38.17, mix(float(38.17), float(_GLF_FUZZED(50.44)), bool(false))), 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, _GLF_IDENTITY(dot(vec2(cos(0.0), 1.0), vec2(0.0, abs(0.0))), dot(vec2(cos(0.0), 1.0), vec2(0.0, abs(0.0)))), 0.0, 1.0, 1.0, tan(0.0)))) : 0.2))), bool(false))), sqrt(0.0), round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), 1.0, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), 1.0))), float(_GLF_IDENTITY(_GLF_IDENTITY(float(_GLF_IDENTITY(min(injectionSwitch.y, injectionSwitch.y), mix(float(min(injectionSwitch.y, injectionSwitch.y)), float(_GLF_FUZZED(_GLF_IDENTITY((false ? 38.17 : 0.2), clamp(_GLF_IDENTITY((false ? 38.17 : 0.2), min((false ? 38.17 : 0.2), (false ? 38.17 : 0.2))), (false ? 38.17 : 0.2), (false ? 38.17 : 0.2))))), bool(false)))), clamp(float(_GLF_IDENTITY(min(injectionSwitch.y, injectionSwitch.y), mix(float(min(injectionSwitch.y, injectionSwitch.y)), float(_GLF_FUZZED((false ? 38.17 : 0.2))), bool(false)))), float(_GLF_IDENTITY(min(injectionSwitch.y, injectionSwitch.y), mix(float(min(injectionSwitch.y, injectionSwitch.y)), float(_GLF_FUZZED(_GLF_IDENTITY((false ? 38.17 : 0.2), ((false ? 38.17 : 0.2)) * 1.0))), bool(false)))), float(_GLF_IDENTITY(min(injectionSwitch.y, injectionSwitch.y), mix(float(min(injectionSwitch.y, injectionSwitch.y)), float(_GLF_FUZZED((false ? _GLF_IDENTITY(38.17, min(_GLF_IDENTITY(38.17, (38.17) - 0.0), 38.17)) : 0.2))), bool(false)))))), (_GLF_IDENTITY(float(_GLF_IDENTITY(min(injectionSwitch.y, injectionSwitch.y), mix(float(min(_GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y)), injectionSwitch.y)), injectionSwitch.y)), float(_GLF_FUZZED((false ? 38.17 : 0.2))), bool(false)))), clamp(float(_GLF_IDENTITY(min(injectionSwitch.y, injectionSwitch.y), mix(float(min(injectionSwitch.y, injectionSwitch.y)), float(_GLF_FUZZED((false ? 38.17 : 0.2))), bool(false)))), float(_GLF_IDENTITY(min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(max(0.8, -9.7)) : _GLF_IDENTITY(injectionSwitch.y, 1.0 * (injectionSwitch.y))))), mix(float(min(injectionSwitch.y, injectionSwitch.y)), float(_GLF_FUZZED((false ? 38.17 : 0.2))), bool(false)))), float(_GLF_IDENTITY(min(injectionSwitch.y, injectionSwitch.y), mix(float(min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).y)), float(_GLF_FUZZED((false ? 38.17 : 0.2))), bool(false))))))) - 0.0)))))))))))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_WRAPPED_IF_TRUE(true))
      {
       return;
      }
     else
      {
      }
    }
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
     if(_GLF_DEAD(false))
      return;
    }
   else
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(vec3(injectionSwitch.x, 0.0, 0.0)), max(_GLF_IDENTITY(float(vec3(injectionSwitch.x, 0.0, 0.0)), max(float(vec3(injectionSwitch.x, 0.0, 0.0)), float(vec3(injectionSwitch.x, 0.0, 0.0)))), float(vec3(injectionSwitch.x, 0.0, 0.0))))) > injectionSwitch.y))))
      return;
    }
   return;
  }
 uint workgroup_base = workgroup_size * workgroup_id;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 uint virtual_gid = workgroup_base + _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, _GLF_IDENTITY((_GLF_IDENTITY(subgroup_id * subgroup_size, 0u + (subgroup_id * subgroup_size))) ^ 0u, ((_GLF_IDENTITY(subgroup_id * subgroup_size, 0u + (subgroup_id * subgroup_size))) ^ 0u) >> 0u)), clamp(subgroup_id * subgroup_size, _GLF_IDENTITY(subgroup_id * subgroup_size, max(subgroup_id * subgroup_size, _GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) ^ 0u))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, ~ _GLF_IDENTITY((~ (subgroup_id)), (false ? _GLF_FUZZED(uint(306.423)) : (_GLF_IDENTITY(~ (subgroup_id), 0u ^ (_GLF_IDENTITY(~ (subgroup_id), (~ (subgroup_id)) + 0u))))))) * _GLF_IDENTITY(subgroup_size, clamp(_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, min(subgroup_size, subgroup_size))) << 0u), subgroup_size, subgroup_size)), clamp(_GLF_IDENTITY(subgroup_id, ~ _GLF_IDENTITY((~ (subgroup_id)), (false ? _GLF_FUZZED(uint(306.423)) : (_GLF_IDENTITY(~ (subgroup_id), 0u ^ (_GLF_IDENTITY(~ (subgroup_id), (~ (subgroup_id)) + 0u))))))) * _GLF_IDENTITY(subgroup_size, clamp(_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, min(subgroup_size, subgroup_size))) << 0u), subgroup_size, subgroup_size)), _GLF_IDENTITY(subgroup_id, ~ _GLF_IDENTITY((~ (subgroup_id)), (false ? _GLF_FUZZED(uint(306.423)) : (_GLF_IDENTITY(~ (subgroup_id), 0u ^ (_GLF_IDENTITY(~ (subgroup_id), (~ (subgroup_id)) + 0u))))))) * _GLF_IDENTITY(subgroup_size, clamp(_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, min(subgroup_size, subgroup_size))) << 0u), subgroup_size, subgroup_size)), _GLF_IDENTITY(subgroup_id, ~ _GLF_IDENTITY((~ (subgroup_id)), (false ? _GLF_FUZZED(uint(306.423)) : (_GLF_IDENTITY(~ (subgroup_id), 0u ^ (_GLF_IDENTITY(~ (subgroup_id), (~ (subgroup_id)) + 0u))))))) * _GLF_IDENTITY(subgroup_size, clamp(_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, min(subgroup_size, subgroup_size))) << 0u), subgroup_size, subgroup_size)))), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, ~ _GLF_IDENTITY((~ (subgroup_id)), (false ? _GLF_FUZZED(uint(306.423)) : (_GLF_IDENTITY(~ (subgroup_id), 0u ^ (_GLF_IDENTITY(~ (subgroup_id), (~ (subgroup_id)) + 0u))))))) * _GLF_IDENTITY(subgroup_size, clamp(_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, min(subgroup_size, subgroup_size))) << 0u), subgroup_size, subgroup_size)), clamp(_GLF_IDENTITY(subgroup_id, ~ _GLF_IDENTITY((~ (subgroup_id)), (false ? _GLF_FUZZED(uint(306.423)) : (_GLF_IDENTITY(~ (subgroup_id), 0u ^ (_GLF_IDENTITY(~ (subgroup_id), (~ (subgroup_id)) + 0u))))))) * _GLF_IDENTITY(subgroup_size, clamp(_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, min(subgroup_size, subgroup_size))) << 0u), subgroup_size, subgroup_size)), _GLF_IDENTITY(subgroup_id, ~ _GLF_IDENTITY((~ (subgroup_id)), (false ? _GLF_FUZZED(uint(306.423)) : (_GLF_IDENTITY(~ (subgroup_id), 0u ^ (_GLF_IDENTITY(~ (subgroup_id), (~ (subgroup_id)) + 0u))))))) * _GLF_IDENTITY(subgroup_size, clamp(_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, min(subgroup_size, subgroup_size))) << 0u), subgroup_size, subgroup_size)), _GLF_IDENTITY(subgroup_id, ~ _GLF_IDENTITY((~ (subgroup_id)), (false ? _GLF_FUZZED(uint(306.423)) : (_GLF_IDENTITY(~ (subgroup_id), 0u ^ (_GLF_IDENTITY(~ (subgroup_id), (~ (subgroup_id)) + 0u))))))) * _GLF_IDENTITY(subgroup_size, clamp(_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, min(subgroup_size, subgroup_size))) << 0u), subgroup_size, subgroup_size)))), max(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, ~ _GLF_IDENTITY((~ (subgroup_id)), (false ? _GLF_FUZZED(uint(306.423)) : (_GLF_IDENTITY(~ (subgroup_id), 0u ^ (_GLF_IDENTITY(~ (subgroup_id), (~ (subgroup_id)) + 0u))))))) * _GLF_IDENTITY(subgroup_size, clamp(_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, min(subgroup_size, subgroup_size))) << 0u), subgroup_size, subgroup_size)), clamp(_GLF_IDENTITY(subgroup_id, ~ _GLF_IDENTITY((~ (subgroup_id)), (false ? _GLF_FUZZED(uint(306.423)) : (_GLF_IDENTITY(~ (subgroup_id), 0u ^ (_GLF_IDENTITY(~ (subgroup_id), (~ (subgroup_id)) + 0u))))))) * _GLF_IDENTITY(subgroup_size, clamp(_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, min(subgroup_size, subgroup_size))) << 0u), subgroup_size, subgroup_size)), _GLF_IDENTITY(subgroup_id, ~ _GLF_IDENTITY((~ (subgroup_id)), (false ? _GLF_FUZZED(uint(306.423)) : (_GLF_IDENTITY(~ (subgroup_id), 0u ^ (_GLF_IDENTITY(~ (subgroup_id), (~ (subgroup_id)) + 0u))))))) * _GLF_IDENTITY(subgroup_size, clamp(_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, min(subgroup_size, subgroup_size))) << 0u), subgroup_size, subgroup_size)), _GLF_IDENTITY(subgroup_id, ~ _GLF_IDENTITY((~ (subgroup_id)), (false ? _GLF_FUZZED(uint(306.423)) : (_GLF_IDENTITY(~ (subgroup_id), 0u ^ (_GLF_IDENTITY(~ (subgroup_id), (~ (subgroup_id)) + 0u))))))) * _GLF_IDENTITY(subgroup_size, clamp(_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, min(subgroup_size, subgroup_size))) << 0u), subgroup_size, subgroup_size)))), _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, ~ _GLF_IDENTITY((~ (subgroup_id)), (false ? _GLF_FUZZED(uint(306.423)) : (_GLF_IDENTITY(~ (subgroup_id), 0u ^ (_GLF_IDENTITY(~ (subgroup_id), (~ (subgroup_id)) + 0u))))))) * _GLF_IDENTITY(subgroup_size, clamp(_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, min(subgroup_size, subgroup_size))) << 0u), subgroup_size, subgroup_size)), clamp(_GLF_IDENTITY(subgroup_id, ~ _GLF_IDENTITY((~ (subgroup_id)), (false ? _GLF_FUZZED(uint(306.423)) : (_GLF_IDENTITY(~ (subgroup_id), 0u ^ (_GLF_IDENTITY(~ (subgroup_id), (~ (subgroup_id)) + 0u))))))) * _GLF_IDENTITY(subgroup_size, clamp(_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, min(subgroup_size, subgroup_size))) << 0u), subgroup_size, subgroup_size)), _GLF_IDENTITY(subgroup_id, ~ _GLF_IDENTITY((~ (subgroup_id)), (false ? _GLF_FUZZED(uint(306.423)) : (_GLF_IDENTITY(~ (subgroup_id), 0u ^ (_GLF_IDENTITY(~ (subgroup_id), (~ (subgroup_id)) + 0u))))))) * _GLF_IDENTITY(subgroup_size, clamp(_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, min(subgroup_size, subgroup_size))) << 0u), subgroup_size, subgroup_size)), _GLF_IDENTITY(subgroup_id, ~ _GLF_IDENTITY((~ (subgroup_id)), (false ? _GLF_FUZZED(uint(306.423)) : (_GLF_IDENTITY(~ (subgroup_id), 0u ^ (_GLF_IDENTITY(~ (subgroup_id), (~ (subgroup_id)) + 0u))))))) * _GLF_IDENTITY(subgroup_size, clamp(_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, min(subgroup_size, subgroup_size))) << 0u), subgroup_size, subgroup_size))))))))), min(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, ~ _GLF_IDENTITY((~ (subgroup_id)), (false ? _GLF_FUZZED(uint(306.423)) : _GLF_IDENTITY((_GLF_IDENTITY(~ (subgroup_id), 0u ^ (_GLF_IDENTITY(_GLF_IDENTITY(~ (subgroup_id), (~ (subgroup_id)) + 0u), (false ? _GLF_FUZZED(workgroup_base) : _GLF_IDENTITY(~ (subgroup_id), _GLF_IDENTITY((~ (subgroup_id)), uint(uvec3((~ (subgroup_id)), uint(_GLF_ZERO(0.0, injectionSwitch.x)), uint(_GLF_ZERO(0.0, injectionSwitch.x))))) + 0u)))))), clamp((_GLF_IDENTITY(~ (subgroup_id), 0u ^ (_GLF_IDENTITY(_GLF_IDENTITY(~ (subgroup_id), (~ (subgroup_id)) + 0u), (false ? _GLF_FUZZED(workgroup_base) : _GLF_IDENTITY(~ (subgroup_id), _GLF_IDENTITY((~ (subgroup_id)), uint(uvec3((~ (subgroup_id)), uint(_GLF_ZERO(0.0, injectionSwitch.x)), uint(_GLF_ZERO(0.0, injectionSwitch.x))))) + 0u)))))), (_GLF_IDENTITY(~ (subgroup_id), 0u ^ (_GLF_IDENTITY(_GLF_IDENTITY(~ (subgroup_id), (~ (subgroup_id)) + 0u), (false ? _GLF_FUZZED(workgroup_base) : _GLF_IDENTITY(~ (subgroup_id), _GLF_IDENTITY((~ (subgroup_id)), uint(uvec3((~ (subgroup_id)), uint(_GLF_ZERO(0.0, injectionSwitch.x)), uint(_GLF_ZERO(0.0, injectionSwitch.x))))) + 0u)))))), (_GLF_IDENTITY(~ (subgroup_id), 0u ^ (_GLF_IDENTITY(_GLF_IDENTITY(~ (subgroup_id), (~ (subgroup_id)) + 0u), (false ? _GLF_FUZZED(workgroup_base) : _GLF_IDENTITY(~ (subgroup_id), _GLF_IDENTITY((~ (subgroup_id)), uint(uvec3((~ (subgroup_id)), uint(_GLF_ZERO(0.0, injectionSwitch.x)), uint(_GLF_ZERO(0.0, injectionSwitch.x))))) + 0u))))))))))) * _GLF_IDENTITY(subgroup_size, clamp(_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, min(subgroup_size, subgroup_size))) << 0u), subgroup_size, subgroup_size)), (true ? _GLF_IDENTITY(subgroup_id, ~ _GLF_IDENTITY(_GLF_IDENTITY((~ (subgroup_id)), clamp((~ (subgroup_id)), _GLF_IDENTITY((~ (subgroup_id)), ((~ (subgroup_id))) - (0u << _GLF_IDENTITY(uint(5u), uint(5u)))), _GLF_IDENTITY((~ (subgroup_id)), min((~ (subgroup_id)), (~ (subgroup_id)))))), (false ? _GLF_FUZZED(uint(306.423)) : (_GLF_IDENTITY(~ (subgroup_id), 0u ^ (_GLF_IDENTITY(~ (_GLF_IDENTITY(subgroup_id, (subgroup_id) << 0u)), (~ (subgroup_id)) + 0u))))))) * _GLF_IDENTITY(subgroup_size, clamp(_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, min(subgroup_size, subgroup_size))) << 0u), subgroup_size, _GLF_IDENTITY(subgroup_size, min(subgroup_size, subgroup_size)))) : _GLF_FUZZED(_GLF_IDENTITY(workgroup_id, min(workgroup_id, workgroup_id))))), _GLF_IDENTITY(subgroup_id, ~ _GLF_IDENTITY((~ (subgroup_id)), (false ? _GLF_FUZZED(uint(306.423)) : (_GLF_IDENTITY(~ (subgroup_id), 0u ^ (_GLF_IDENTITY(~ (subgroup_id), (~ (subgroup_id)) + 0u))))))) * _GLF_IDENTITY(subgroup_size, clamp(_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, min(subgroup_size, subgroup_size)), ~ (~ (_GLF_IDENTITY(subgroup_size, min(subgroup_size, subgroup_size)))))) << 0u), subgroup_size, subgroup_size)))))) + subgroup_local_id;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_DEAD(false), true, false))))
  {
   do
    {
     return;
    }
   while(_GLF_WRAPPED_LOOP(false));
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   do
    {
     for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
      {
       return;
      }
    }
   while(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true, false)))), (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true, false)))), ! (! (_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec4(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y))))), false, true, false)))))))) || false));
  }
 do
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, false || (false)), (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY((_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(float(16241u)), _GLF_FUZZED(43.84)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, _GLF_TRUE(true, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(-71.53) : injectionSwitch.x)) < injectionSwitch.y, ! (! (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-75.33), (injectionSwitch)[1]), vec2(_GLF_IDENTITY((injectionSwitch)[0], float(vec3((injectionSwitch)[0], 0.0, 0.0))), _GLF_FUZZED(8.3)), bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))).x, (false ? _GLF_FUZZED(-71.53) : injectionSwitch.x)) < _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat3x4(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)), 1.0, 0.0, 1.0, 1.0, tan(0.0), 1.0, 0.0, 1.0, 0.0, 1.0)), vec2(mat4x3(vec2(mat3x4(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)), 1.0, 0.0, 1.0, 1.0, tan(0.0), 1.0, 0.0, 1.0, 0.0, 1.0)), 1.0, 0.0, determinant(mat4(1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0)), _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 1.0, 0.0, determinant(mat2(1.0, 1.0, 0.0, 1.0)), 0.0, 1.0)))).y)))))))).x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), (true ? mat2(1.0) * (injectionSwitch) : _GLF_FUZZED(injectionSwitch)))).y))), (_GLF_IDENTITY((_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(float(16241u)), _GLF_FUZZED(43.84)), vec2((injectionSwitch)[0], (_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(vec4(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)), 0.0, 1.0), max(vec4(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)), 0.0, 1.0), vec4(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)), 0.0, 1.0))))))[1]), bvec2(true, _GLF_TRUE(true, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(-71.53) : injectionSwitch.x)), 0.0 + (_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(-71.53) : injectionSwitch.x)))) < injectionSwitch.y))))).x > injectionSwitch.y))), true && ((_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(float(16241u)), _GLF_FUZZED(43.84)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(-71.53) : injectionSwitch.x)) < injectionSwitch.y))))).x > injectionSwitch.y)))))) || false) || false)))
      {
       if(_GLF_DEAD(false))
        break;
       return;
      }
     return;
    }
   if(_GLF_DEAD(false))
    continue;
   if(_GLF_DEAD(false))
    return;
  }
 while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), bool(bvec2(! ((injectionSwitch.x > injectionSwitch.y)), false))))))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 uint next_virtual_gid = workgroup_base + _GLF_IDENTITY(subgroup_id, _GLF_IDENTITY((_GLF_IDENTITY(subgroup_id, clamp(subgroup_id, _GLF_IDENTITY(subgroup_id, _GLF_IDENTITY((subgroup_id), (1u ^ 1u) ^ ((subgroup_id))) - 0u), subgroup_id))) | (subgroup_id), clamp((_GLF_IDENTITY(subgroup_id, clamp(subgroup_id, _GLF_IDENTITY(subgroup_id, (subgroup_id) - 0u), subgroup_id))) | (subgroup_id), (_GLF_IDENTITY(subgroup_id, clamp(subgroup_id, _GLF_IDENTITY(subgroup_id, (subgroup_id) - 0u), subgroup_id))) | (subgroup_id), (_GLF_IDENTITY(subgroup_id, clamp(subgroup_id, _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, uint(uvec4(subgroup_id, 1u, 0u, ((1u << _GLF_IDENTITY(uint(7u), _GLF_IDENTITY(uint(7u), max(uint(7u), uint(7u))))) >> _GLF_IDENTITY(uint(7u), uint(7u)))))), (subgroup_id) - 0u), subgroup_id))) | (subgroup_id)))) * subgroup_size + ((subgroup_local_id + 1) % subgroup_size);
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y)))), (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(true && (_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-1920.7322)), bool(false)))) / 1.0) > injectionSwitch.y), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(true && (_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-1920.7322)), bool(false)))) / _GLF_IDENTITY(1.0, float(mat3x4(1.0, 0.0, round(length(normalize(1.0))), sqrt(0.0), 1.0, 0.0, 1.0, 0.0, sqrt(0.0), 0.0, 1.0, 0.0)))) > injectionSwitch.y), (true && (_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-1920.7322)), bool(false)))) / 1.0) > injectionSwitch.y)) && _GLF_IDENTITY(true, bool(_GLF_IDENTITY(bool(true), ! (! (_GLF_IDENTITY(bool(true), true && (bool(true))))))))), true, false)), (bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(true && (_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-1920.7322)), bool(false)))) / 1.0) > injectionSwitch.y), false || (true && (_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-1920.7322)), bool(false)))) / 1.0) > injectionSwitch.y))), (true && (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-1920.7322)), bool(false)))) / 1.0) > injectionSwitch.y, false || (_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0)), float(_GLF_FUZZED(-1920.7322)), bool(false)))) / 1.0) > injectionSwitch.y)))) && true), true, false))) && true)))))) && true)))
  {
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
    }
   else
    {
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) || false))))) || false), (_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, float(_GLF_IDENTITY(mat3(injectionSwitch.x, log(1.0), 1.0, 0.0, 0.0, 0.0, 0.0, abs(0.0), _GLF_IDENTITY(0.0, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(-0.1) : 0.0))), mat3(_GLF_IDENTITY(mat3x4(mat3(injectionSwitch.x, log(1.0), 1.0, 0.0, 0.0, 0.0, 0.0, abs(0.0), _GLF_IDENTITY(0.0, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(-0.1) : 0.0)))), mat3x4(mat4(mat3x4(mat3(injectionSwitch.x, log(1.0), 1.0, 0.0, 0.0, 0.0, 0.0, abs(0.0), _GLF_IDENTITY(0.0, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(-0.1) : 0.0))))))))))), injectionSwitch.x, injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))))))
      return;
    }
   return;
  }
 atomicStore(buf[virtual_gid], _GLF_IDENTITY(_GLF_IDENTITY(uint(1), _GLF_IDENTITY(_GLF_IDENTITY(uint(uvec4(uint(1), 0u, _GLF_IDENTITY(0u, max(0u, 0u)), _GLF_IDENTITY(0u, 1u * (0u)))), (false ? _GLF_FUZZED(subgroup_size) : uint(uvec4(_GLF_IDENTITY(uint(1), min(uint(1), uint(1))), 0u, _GLF_IDENTITY(0u, max(0u, 0u)), _GLF_IDENTITY(_GLF_IDENTITY(0u, 1u * (0u)), min(_GLF_IDENTITY(0u, 1u * (0u)), _GLF_IDENTITY(0u, 1u * (0u)))))))), max(uint(uvec4(uint(1), 0u, 0u, 0u)), uint(uvec4(uint(1), 0u, 0u, 0u))))), ~ (_GLF_IDENTITY(_GLF_IDENTITY(~ (uint(1)), _GLF_IDENTITY(0u, (false ? _GLF_FUZZED(subgroup_local_id) : 0u)) + (~ (_GLF_IDENTITY(uint(1), min(uint(1), _GLF_IDENTITY(uint(1), (uint(1)) | (_GLF_IDENTITY(uint(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, max(1, 1))) << 0)), max(uint(1), uint(1)))))))))), min(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(~ (uint(1)), 0u + (_GLF_IDENTITY(~ (uint(1)), min(_GLF_IDENTITY(~ (uint(1)), 0u ^ (~ (uint(1)))), ~ (uint(1)))))), clamp(_GLF_IDENTITY(~ (uint(1)), _GLF_IDENTITY(0u + (~ _GLF_IDENTITY((uint(1)), ((uint(1))) >> 0u)), clamp(0u + (~ (uint(1))), 0u + (~ (uint(1))), 0u + (~ (_GLF_IDENTITY(uint(1), max(uint(1), uint(1)))))))), _GLF_IDENTITY(~ (_GLF_IDENTITY(uint(1), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(uint(1), 0u | (uint(1)))), clamp(_GLF_IDENTITY(~ (_GLF_IDENTITY(uint(1), 0u | (uint(1)))), min(~ (_GLF_IDENTITY(uint(1), 0u | (uint(1)))), ~ (_GLF_IDENTITY(uint(1), 0u | (uint(1)))))), ~ (_GLF_IDENTITY(uint(1), 0u | (uint(1)))), ~ (_GLF_IDENTITY(uint(1), 0u | (uint(1))))))))), 0u + (~ (uint(1)))), _GLF_IDENTITY(_GLF_IDENTITY(~ (uint(1)), 0u + _GLF_IDENTITY((_GLF_IDENTITY(~ (uint(1)), uint(uvec4(~ (uint(1)), 1u, uint(_GLF_ONE(1.0, injectionSwitch.y)), 0u)))), (_GLF_IDENTITY((~ (uint(1))), min((~ (uint(1))), (~ (uint(1)))))) - 0u)), ~ (~ (_GLF_IDENTITY(~ (uint(1)), _GLF_IDENTITY(0u, _GLF_IDENTITY(uint(uvec3(0u, 1u, 1u)), max(uint(uvec3(0u, 1u, 1u)), uint(uvec3(0u, 1u, 1u))))) + (~ (uint(1))))))))), (_GLF_IDENTITY(_GLF_IDENTITY(~ (uint(1)), (_GLF_IDENTITY(_GLF_IDENTITY(~ (uint(1)), (true ? _GLF_IDENTITY(~ (uint(1)), 0u | (~ (uint(1)))) : _GLF_FUZZED(next_virtual_gid))), ~ (~ (_GLF_IDENTITY(~ (uint(1)), (true ? _GLF_IDENTITY(~ _GLF_IDENTITY((uint(1)), 0u ^ ((uint(1)))), 0u | (~ (uint(1)))) : _GLF_FUZZED(next_virtual_gid))))))) - (0u << _GLF_IDENTITY(uint(8u), uint(8u)))), 0u + (~ (_GLF_IDENTITY(uint(1), clamp(uint(_GLF_IDENTITY(1, max(_GLF_IDENTITY(1, (1) | (1)), _GLF_IDENTITY(1, min(1, 1))))), uint(1), uint(1))))))) ^ 0u), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(~ (uint(1)), (_GLF_IDENTITY(~ (uint(1)), (~ (uint(1))) ^ 0u)) * 1u), ~ (~ (_GLF_IDENTITY(~ (uint(1)), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(~ (uint(1)), clamp(~ (uint(1)), ~ (uint(1)), _GLF_IDENTITY(~ (uint(1)), min(~ (uint(1)), ~ (uint(1)))))) : _GLF_FUZZED(178488u)))))), 0u + (_GLF_IDENTITY(~ (_GLF_IDENTITY(uint(1), ~ (~ (uint(1))))), (false ? _GLF_FUZZED(num_workgroup) : ~ (_GLF_IDENTITY(uint(1), ~ (~ (uint(1))))))))))))), 4, 64, 4);
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), false || (_GLF_IDENTITY(false, ! (! (false))))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(545.584)))))))
    return;
  }
 else
  {
  }
 if(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1 < subgroup_size, (subgroup_local_id + 1 < _GLF_IDENTITY(subgroup_size, (subgroup_size) << 0u)) || false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(subgroup_local_id + 1 < subgroup_size, (subgroup_local_id + 1 < _GLF_IDENTITY(subgroup_size, (subgroup_size) << 0u)) || false))))
  {
   do
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
      {
       for(int _injected_loop_counter = _GLF_IDENTITY(1, 0 | (1)); _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter, min(_injected_loop_counter, _injected_loop_counter)) != int(_GLF_ZERO(0.0, injectionSwitch.x))); _injected_loop_counter --)
        {
         if(_GLF_DEAD(false))
          break;
         if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! _GLF_IDENTITY(_GLF_IDENTITY((! (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(bool((! (injectionSwitch.x > injectionSwitch.y)))), ! (! (bool(bool((! (injectionSwitch.x > injectionSwitch.y)))))))), (_GLF_IDENTITY((! (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(bool((! (injectionSwitch.x > injectionSwitch.y)))), ! (! (bool(bool((! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, float(_GLF_IDENTITY(vec2(injectionSwitch.x, 1.0), mix(vec2((vec2(injectionSwitch.x, 1.0))[0], _GLF_FUZZED(-3826.4356)), vec2(_GLF_FUZZED(7326.2743), (vec2(injectionSwitch.x, 1.0))[1]), bvec2(false, true))))), float(mat2x4(injectionSwitch.x, 0.0, 0.0, 1.0, determinant(mat3(0.0, 0.0, _GLF_IDENTITY(length(vec4(0.0, 0.0, 0.0, 0.0)), (_GLF_IDENTITY(length(vec4(0.0, 0.0, 0.0, 0.0)), mix(float(_GLF_FUZZED(762.779)), float(length(vec4(0.0, 0.0, 0.0, 0.0))), bool(true)))) + sqrt(0.0)), 1.0, 0.0, 0.0, 1.0, 1.0, 0.0)), determinant(mat2(0.0, 0.0, 0.0, 0.0)), 0.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0))))) > injectionSwitch.y), ((_GLF_IDENTITY(injectionSwitch.x, float(mat2x4(injectionSwitch.x, 0.0, 0.0, 1.0, determinant(mat3(0.0, 0.0, length(vec4(0.0, 0.0, 0.0, 0.0)), 1.0, 0.0, 0.0, 1.0, 1.0, 0.0)), determinant(mat2(0.0, 0.0, 0.0, 0.0)), 0.0, 0.0))) > injectionSwitch.y)) && true))))))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))) && true), ! (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), _GLF_IDENTITY(bool(bvec4(bool(false), false, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), false || (bool(bvec4(bool(false), false, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))), _GLF_IDENTITY(true, ! (! (true))), false, true)), _GLF_IDENTITY(bool(bool(bool(bvec4(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), bool(bvec4(bool(false), false, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), true, false, true)))), true && (bool(bool(bool(bvec4(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), bool(bvec4(bool(false), false, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), true, false, true))))))), ! (! (bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(false, false, false, true))), _GLF_IDENTITY(bool(bool(false)), true && (bool(bool(false))))), true, false, true)))))), _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y))))))) && true)), false || _GLF_IDENTITY((! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), bool(bvec4(bool(false), false, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), true, false, true)), _GLF_IDENTITY(bool(bool(bool(bvec4(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), bool(bvec4(bool(false), false, false, _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, float(vec4(injectionSwitch.y, 1.0, 1.0, round(length(normalize(vec2(1.0, 1.0)))))))))))))), true, false, true)))), true && (bool(bool(bool(bvec4(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), bool(bvec4(bool(false), false, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), true, false, true))))))), ! (! (bool(bvec4(_GLF_IDENTITY(false, bool(bool(false))), true, false, true)))))), _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))))), (_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), bool(bvec4(bool(false), false, false, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, _GLF_IDENTITY(bool(bvec3(injectionSwitch.x < injectionSwitch.y, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), bool(bvec4(bool(bvec3(injectionSwitch.x < injectionSwitch.y, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, false))))))))))), true, false, true)), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), bool(bvec4(bool(false), false, false, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(injectionSwitch.x < injectionSwitch.y, false, true), _GLF_IDENTITY(bvec3(bvec3(bvec3(injectionSwitch.x < injectionSwitch.y, false, true))), _GLF_IDENTITY(bvec3(bvec3(bvec3(bvec3(bvec3(injectionSwitch.x < injectionSwitch.y, false, true))))), bvec3(bvec3(bvec3(bvec3(bvec3(bvec3(bvec3(injectionSwitch.x < injectionSwitch.y, false, true))))))))))), ! (_GLF_IDENTITY(! (bool(_GLF_IDENTITY(bvec3(injectionSwitch.x < injectionSwitch.y, false, true), bvec3(bvec3(bvec3(injectionSwitch.x < injectionSwitch.y, false, true)))))), ! (! (! (bool(_GLF_IDENTITY(bvec3(injectionSwitch.x < injectionSwitch.y, false, true), bvec3(bvec3(bvec3(injectionSwitch.x < injectionSwitch.y, false, true))))))))))))))))))), true, false, true)), ! (! (bool(bvec4(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), bool(bvec4(bool(false), false, false, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(injectionSwitch.x < injectionSwitch.y, false, true), _GLF_IDENTITY(bvec3(bvec3(bvec3(injectionSwitch.x < injectionSwitch.y, false, true))), _GLF_IDENTITY(bvec3(bvec3(bvec3(bvec3(bvec3(injectionSwitch.x < injectionSwitch.y, false, true))))), bvec3(bvec3(bvec3(bvec3(bvec3(bvec3(bvec3(injectionSwitch.x < injectionSwitch.y, false, true))))))))))), ! (_GLF_IDENTITY(! (bool(_GLF_IDENTITY(bvec3(injectionSwitch.x < injectionSwitch.y, false, true), bvec3(bvec3(bvec3(injectionSwitch.x < injectionSwitch.y, false, true)))))), ! (! (! (bool(_GLF_IDENTITY(bvec3(injectionSwitch.x < injectionSwitch.y, false, true), bvec3(bvec3(bvec3(injectionSwitch.x < injectionSwitch.y, false, true))))))))))))))))))), true, false, true))))))), true && (_GLF_IDENTITY(bool(bool(bool(bvec4(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(false), bool(bool(bool(false)))), bool(bvec4(bool(false), _GLF_IDENTITY(false, ! (! _GLF_IDENTITY((_GLF_IDENTITY(false, (false) || false)), ! (! ((_GLF_IDENTITY(false, (false) || false))))))), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), true, false, true)))), (bool(bool(bool(bvec4(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(false), bool(bool(bool(false)))), bool(bvec4(bool(false), _GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) || false)))), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), true, false, true))))) && true)))), ! (! (_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), bool(bvec2(bool(bool(false)), _GLF_IDENTITY(true, false || (true)))))), true, false, true)), ! (! (_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), bool(bvec2(bool(bool(false)), _GLF_IDENTITY(true, false || (true)))))), true, false, true)), (bool(bvec4(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), bool(bvec2(bool(bool(false)), _GLF_IDENTITY(true, false || (true)))))), true, false, true))) || false)))))))), _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), injectionSwitch)).y), ! (! ((injectionSwitch.x > injectionSwitch.y))))))) && _GLF_IDENTITY(true, bool(bvec3(true, true, true))))) && true))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && ((! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), bool(bvec4(bool(false), false, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), true, false, true)), _GLF_IDENTITY(bool(bool(bool(bvec4(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), bool(bvec4(bool(false), false, false, _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, float(vec4(injectionSwitch.y, 1.0, 1.0, round(length(normalize(vec2(1.0, 1.0)))))))))))))), true, false, true)))), true && (bool(bool(bool(bvec4(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), bool(bvec4(bool(false), false, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), true, false, true))))))), ! (! (bool(bvec4(_GLF_IDENTITY(false, bool(bool(false))), true, false, true)))))), _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))))), (_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), bool(bvec4(bool(false), false, false, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, _GLF_IDENTITY(bool(bvec3(injectionSwitch.x < injectionSwitch.y, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), bool(bvec4(bool(bvec3(injectionSwitch.x < injectionSwitch.y, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, false))))))))))), true, false, true)), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), bool(bvec4(bool(false), false, false, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(injectionSwitch.x < injectionSwitch.y, false, true), _GLF_IDENTITY(bvec3(bvec3(bvec3(injectionSwitch.x < injectionSwitch.y, false, true))), _GLF_IDENTITY(bvec3(bvec3(bvec3(bvec3(bvec3(injectionSwitch.x < injectionSwitch.y, false, true))))), bvec3(bvec3(bvec3(bvec3(bvec3(bvec3(bvec3(injectionSwitch.x < injectionSwitch.y, false, true))))))))))), ! (_GLF_IDENTITY(! (bool(_GLF_IDENTITY(bvec3(injectionSwitch.x < injectionSwitch.y, false, true), bvec3(bvec3(bvec3(injectionSwitch.x < injectionSwitch.y, false, true)))))), ! (! (! (bool(_GLF_IDENTITY(bvec3(injectionSwitch.x < injectionSwitch.y, false, true), bvec3(bvec3(bvec3(injectionSwitch.x < injectionSwitch.y, false, true))))))))))))))))))), true, false, true)), ! (! (bool(bvec4(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), bool(bvec4(bool(false), false, false, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(injectionSwitch.x < injectionSwitch.y, false, true), _GLF_IDENTITY(bvec3(bvec3(bvec3(injectionSwitch.x < injectionSwitch.y, false, true))), _GLF_IDENTITY(bvec3(bvec3(bvec3(bvec3(bvec3(injectionSwitch.x < injectionSwitch.y, false, true))))), bvec3(bvec3(bvec3(bvec3(bvec3(bvec3(bvec3(injectionSwitch.x < injectionSwitch.y, false, true))))))))))), ! (_GLF_IDENTITY(! (bool(_GLF_IDENTITY(bvec3(injectionSwitch.x < injectionSwitch.y, false, true), bvec3(bvec3(bvec3(injectionSwitch.x < injectionSwitch.y, false, true)))))), ! (! (! (bool(_GLF_IDENTITY(bvec3(injectionSwitch.x < injectionSwitch.y, false, true), bvec3(bvec3(bvec3(injectionSwitch.x < injectionSwitch.y, false, true))))))))))))))))))), true, false, true))))))), true && (_GLF_IDENTITY(bool(bool(bool(bvec4(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(false), bool(bool(bool(false)))), bool(bvec4(bool(false), _GLF_IDENTITY(false, ! (! _GLF_IDENTITY((_GLF_IDENTITY(false, (false) || false)), ! (! ((_GLF_IDENTITY(false, (false) || false))))))), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), true, false, true)))), (bool(bool(bool(bvec4(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(false), bool(bool(bool(false)))), bool(bvec4(bool(false), _GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) || false)))), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), true, false, true))))) && true)))), ! (! (_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), bool(bvec2(bool(bool(false)), _GLF_IDENTITY(true, false || (true)))))), true, false, true)), ! (! (_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), bool(bvec2(bool(bool(false)), _GLF_IDENTITY(true, false || (true)))))), true, false, true)), (bool(bvec4(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), bool(bvec2(bool(bool(false)), _GLF_IDENTITY(true, false || (true)))))), true, false, true))) || false)))))))), _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), injectionSwitch)).y), ! (! ((injectionSwitch.x > injectionSwitch.y))))))) && _GLF_IDENTITY(true, bool(bvec3(true, true, true))))) && true)))))), true && (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).y))), _GLF_IDENTITY((_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), injectionSwitch)).x > injectionSwitch.y)))) && true, ! (! ((_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, true && (false)))), (_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], (injectionSwitch[0]) - 0.0), injectionSwitch[1])).x > injectionSwitch.y)))) && true))))))))))
          {
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(false))
              continue;
             break;
            }
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              return;
             continue;
            }
           do
            {
             if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)))
              continue;
             return;
            }
           while(_GLF_WRAPPED_LOOP(false));
           if(_GLF_DEAD(false))
            break;
           if(_GLF_DEAD(false))
            {
             if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false)))) && true))
              {
               if(_GLF_DEAD(false))
                break;
               break;
              }
             return;
             if(_GLF_DEAD(false))
              return;
            }
          }
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).y))))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            return;
           if(_GLF_WRAPPED_IF_FALSE(false))
            {
            }
           else
            {
             return;
            }
          }
         if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(_GLF_IDENTITY(bool(injectionSwitch.x > injectionSwitch.y), (bool(injectionSwitch.x > injectionSwitch.y)) && true)))))))
          break;
        }
       if(_GLF_DEAD(false))
        return;
      }
     else
      {
       if(_GLF_DEAD(false))
        continue;
       if(_GLF_DEAD(false))
        continue;
      }
     if(_GLF_DEAD(false))
      continue;
     if(_GLF_DEAD(false))
      continue;
     if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, false)))))))
      break;
    }
   while(_GLF_WRAPPED_LOOP(false));
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
    }
   else
    {
     do
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         return;
        }
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
        return;
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        break;
      }
     while(_GLF_WRAPPED_LOOP(false));
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
    }
   atomicStore(buf[_GLF_IDENTITY(next_virtual_gid, (next_virtual_gid) * uint(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, 0.0 + (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], (_GLF_IDENTITY(injectionSwitch[1], clamp(injectionSwitch[1], injectionSwitch[1], injectionSwitch[1]))) - 0.0))).y)))))], _GLF_IDENTITY(uint(2), max(uint(2), uint(_GLF_IDENTITY(2, _GLF_IDENTITY(0, clamp(0, 0, 0)) ^ (2))))), 4, 64, 4);
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))) && true)), true && ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, float(mat4x2(injectionSwitch.x, tan(0.0), 1.0, 0.0, 0.0, 0.0, 0.0, 1.0))) > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-8322.0187), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(1.8)), bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), clamp(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-8322.0187), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(1.8)), bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-8322.0187), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(1.8)), bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-8322.0187), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(1.8)), bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))).y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! _GLF_IDENTITY((! (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(-6.6, -2.7)) : injectionSwitch)), injectionSwitch)), (_GLF_FALSE(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), true && (! (false))))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)))) ? _GLF_FUZZED(vec2(0.0, -8.2)) : injectionSwitch)).y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && ((! (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(-6.6, -2.7)) : injectionSwitch)), injectionSwitch)), (_GLF_FALSE(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), true && (! (false))))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)))) ? _GLF_FUZZED(vec2(0.0, -8.2)) : injectionSwitch)).y)))))) && true)))))))
    return;
   if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).x < injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      {
       for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > ((0 | 0) << _GLF_IDENTITY(int(3), int(3)))); _injected_loop_counter --)
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
            return;
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            return;
           if(_GLF_DEAD(false))
            return;
           return;
          }
        }
       if(_GLF_WRAPPED_IF_FALSE(false))
        {
        }
       else
        {
         if(_GLF_DEAD(false))
          return;
         return;
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
          return;
         return;
        }
       if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (_GLF_IDENTITY(_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), true && (_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), bool(bool(! ((injectionSwitch.x > injectionSwitch.y)))))))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(_GLF_IDENTITY(mat3x4(injectionSwitch.y, 1.0, 1.0, tan(0.0), tan(0.0), 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0), transpose(transpose(mat3x4(injectionSwitch.y, 1.0, 1.0, tan(0.0), tan(0.0), 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0)))))))), true && (! ((injectionSwitch.x > injectionSwitch.y))))), false || (! (_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), true && (! ((injectionSwitch.x > injectionSwitch.y))))))))))))))
        return;
      }
    }
   else
    {
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) || false)), _GLF_IDENTITY(bool(bool(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) || false)))), ! (! (bool(bool(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) || false)))))))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bool(_GLF_DEAD(false))), (bool(bool(_GLF_DEAD(false)))) && true)))
        return;
       return;
      }
    }
   subgroupAll(false);
  }
 else
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
    return;
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > injectionSwitch.y))))
      return;
    }
   else
    {
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(true && (_GLF_IDENTITY(false, true && (false))), bool(bool(true && (false)))))))
    {
     for(int _injected_loop_counter = ((0 >> _GLF_IDENTITY(int(_GLF_IDENTITY(6, max(6, 6))), int(6))) ^ 1); _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter > 0, bool(bvec4(_GLF_IDENTITY(_injected_loop_counter > 0, ! (! (_injected_loop_counter > 0))), true, true, false)))); _injected_loop_counter --)
      {
       if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         return;
        }
      }
     if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(_GLF_IDENTITY(true, (true) && _GLF_IDENTITY(true, bool(bvec4(true, false, false, true)))), (injectionSwitch.x < injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         return;
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_WRAPPED_IF_TRUE(true))
          {
           if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            {
            }
           else
            {
             return;
            }
          }
         else
          {
          }
        }
       return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       do
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            continue;
           return;
          }
        }
       while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, bool(bvec2(false, false)))));
      }
     else
      {
      }
    }
   if(_GLF_DEAD(false))
    {
     for(int _injected_loop_counter = (_GLF_IDENTITY(0, max(_GLF_IDENTITY(0, max(0, 0)), 0)) | ((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1, (1) << 0), (true ? _GLF_IDENTITY(1, min(_GLF_IDENTITY(1, ~ _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(~ (1), (~ (1)) * 1), (_GLF_IDENTITY(~ (1), (~ (1)) * 1)) | (_GLF_IDENTITY(~ (1), (~ (1)) * 1)))), (_GLF_IDENTITY((_GLF_IDENTITY(~ (1), (~ (1)) * 1)), (true ? (_GLF_IDENTITY(~ (1), (~ (1)) * 1)) : _GLF_FUZZED(-96290)))) * 1)), 1)) : _GLF_FUZZED(-91166))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(1, (1) << 0), (true ? _GLF_IDENTITY(1, min(_GLF_IDENTITY(1, ~ _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(~ (1), (~ (1)) * 1), (_GLF_IDENTITY(~ (1), (~ (1)) * 1)) | (_GLF_IDENTITY(~ (1), (~ (1)) * 1)))), (_GLF_IDENTITY((_GLF_IDENTITY(~ (1), (~ (1)) * 1)), (true ? (_GLF_IDENTITY(~ (1), (~ (1)) * 1)) : _GLF_FUZZED(-96290)))) * 1)), 1)) : _GLF_FUZZED(-91166))), _GLF_IDENTITY(_GLF_IDENTITY(1, (1) << 0), (true ? _GLF_IDENTITY(1, min(_GLF_IDENTITY(1, ~ _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(~ (1), (~ (1)) * 1), (_GLF_IDENTITY(~ (1), (~ (1)) * 1)) | (_GLF_IDENTITY(~ (1), (~ (1)) * 1)))), (_GLF_IDENTITY((_GLF_IDENTITY(~ (1), (~ (1)) * 1)), (true ? (_GLF_IDENTITY(~ (1), (~ (1)) * 1)) : _GLF_FUZZED(-96290)))) * 1)), 1)) : _GLF_FUZZED(-91166))), _GLF_IDENTITY(_GLF_IDENTITY(1, (1) << 0), (true ? _GLF_IDENTITY(1, min(_GLF_IDENTITY(1, ~ _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(~ (1), (~ (1)) * 1), (_GLF_IDENTITY(~ (1), (~ (1)) * 1)) | (_GLF_IDENTITY(~ (1), (~ (1)) * 1)))), (_GLF_IDENTITY((_GLF_IDENTITY(~ (1), (~ (1)) * 1)), (true ? (_GLF_IDENTITY(~ (1), (~ (1)) * 1)) : _GLF_FUZZED(-96290)))) * 1)), 1)) : _GLF_FUZZED(-91166))))) << _GLF_IDENTITY(int(7), _GLF_IDENTITY(_GLF_IDENTITY(int(7), (int(7)) << 0), _GLF_IDENTITY(~ (_GLF_IDENTITY(~ (int(7)), (_GLF_IDENTITY(true, true && (true)) ? ~ (int(7)) : _GLF_FUZZED(_GLF_IDENTITY(56512, 0 ^ (56512)))))), (~ (_GLF_IDENTITY(~ (int(7)), (true ? ~ _GLF_IDENTITY((int(7)), ((int(7))) | ((int(7)))) : _GLF_FUZZED(_GLF_IDENTITY(56512, (56512) << _GLF_IDENTITY(0, (false ? _GLF_FUZZED(-62659) : 0)))))))) ^ (0 | 0))))) >> _GLF_IDENTITY(_GLF_IDENTITY(int(7), int(7)), 0 ^ (_GLF_IDENTITY(int(7), int(_GLF_IDENTITY(7, (_GLF_IDENTITY(7, max(7, 7))) * 1))))))); _GLF_IDENTITY(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter, (_GLF_IDENTITY(_GLF_IDENTITY(_injected_loop_counter, (false ? _GLF_FUZZED(atomicExchange(_injected_loop_counter, 49229)) : _injected_loop_counter)), 0 ^ (_GLF_IDENTITY(_injected_loop_counter, (false ? _GLF_FUZZED(atomicExchange(_injected_loop_counter, 49229)) : _injected_loop_counter))))) | (_injected_loop_counter)) != (0 | _GLF_IDENTITY(int(_GLF_ZERO(0.0, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch[_GLF_IDENTITY(1, 0 ^ (1))], (injectionSwitch[1]) - 0.0), (false ? _GLF_FUZZED(572.896) : _GLF_IDENTITY(injectionSwitch[_GLF_IDENTITY(1, 0 ^ (1))], (injectionSwitch[1]) - 0.0))))).x, (_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, (injectionSwitch.x < injectionSwitch.y) && true)) || false))) ? _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[_GLF_IDENTITY(1, 0 ^ (1))], (injectionSwitch[1]) - 0.0))).x : _GLF_FUZZED(4636.9048))))), (int(_GLF_ZERO(0.0, injectionSwitch.x))) - (24281 & 0)))), ! (! _GLF_IDENTITY((_GLF_WRAPPED_LOOP(_injected_loop_counter != (_GLF_IDENTITY(0 | int(_GLF_ZERO(0.0, injectionSwitch.x)), max(0 | int(_GLF_ZERO(0.0, injectionSwitch.x)), 0 | int(_GLF_ZERO(0.0, injectionSwitch.x))))))), _GLF_IDENTITY(! (_GLF_IDENTITY(! ((_GLF_WRAPPED_LOOP(_injected_loop_counter != (_GLF_IDENTITY(_GLF_IDENTITY(0, max(0, 0)) | int(_GLF_ZERO(0.0, injectionSwitch.x)), max(0 | int(_GLF_ZERO(0.0, injectionSwitch.x)), 0 | int(_GLF_ZERO(0.0, injectionSwitch.x)))))))), _GLF_IDENTITY(true && (_GLF_IDENTITY(! ((_GLF_WRAPPED_LOOP(_injected_loop_counter != (_GLF_IDENTITY(0 | int(_GLF_ZERO(0.0, injectionSwitch.x)), max(0 | int(_GLF_ZERO(0.0, injectionSwitch.x)), 0 | int(_GLF_ZERO(0.0, injectionSwitch.x)))))))), (! ((_GLF_WRAPPED_LOOP(_injected_loop_counter != (_GLF_IDENTITY(0 | int(_GLF_ZERO(0.0, injectionSwitch.x)), max(0 | int(_GLF_ZERO(0.0, injectionSwitch.x)), 0 | int(_GLF_ZERO(0.0, injectionSwitch.x))))))))) && true)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (true && (_GLF_IDENTITY(! ((_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter != (_GLF_IDENTITY(0 | int(_GLF_ZERO(0.0, injectionSwitch.x)), max(0 | int(_GLF_ZERO(0.0, injectionSwitch.x)), 0 | int(_GLF_ZERO(0.0, injectionSwitch.x))))), ! (! (_GLF_IDENTITY(_injected_loop_counter != (_GLF_IDENTITY(0 | int(_GLF_ZERO(0.0, injectionSwitch.x)), max(0 | int(_GLF_ZERO(0.0, injectionSwitch.x)), 0 | int(_GLF_ZERO(0.0, injectionSwitch.x))))), (_injected_loop_counter != (_GLF_IDENTITY(0 | int(_GLF_ZERO(0.0, injectionSwitch.x)), max(0 | _GLF_IDENTITY(int(_GLF_ZERO(0.0, injectionSwitch.x)), 0 | (int(_GLF_ZERO(0.0, injectionSwitch.x)))), 0 | int(_GLF_ZERO(0.0, injectionSwitch.x)))))) || false))))))), (! ((_GLF_WRAPPED_LOOP(_injected_loop_counter != (_GLF_IDENTITY(0 | int(_GLF_ZERO(0.0, injectionSwitch.x)), max(0 | int(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(float(150126u)) : injectionSwitch.x)))), 0 | int(_GLF_ZERO(0.0, injectionSwitch.x))))))))) && true)))))), ! (_GLF_IDENTITY(! (! (_GLF_IDENTITY(! ((_GLF_WRAPPED_LOOP(_injected_loop_counter != (_GLF_IDENTITY(_GLF_IDENTITY(0, max(0, 0)) | int(_GLF_ZERO(0.0, injectionSwitch.x)), max(0 | int(_GLF_ZERO(0.0, injectionSwitch.x)), 0 | int(_GLF_ZERO(0.0, injectionSwitch.x)))))))), _GLF_IDENTITY(true && (_GLF_IDENTITY(! ((_GLF_WRAPPED_LOOP(_injected_loop_counter != (_GLF_IDENTITY(0 | int(_GLF_ZERO(0.0, injectionSwitch.x)), max(0 | int(_GLF_ZERO(0.0, injectionSwitch.x)), 0 | int(_GLF_ZERO(0.0, injectionSwitch.x)))))))), (! ((_GLF_WRAPPED_LOOP(_injected_loop_counter != (_GLF_IDENTITY(0 | int(_GLF_ZERO(0.0, injectionSwitch.x)), max(0 | int(_GLF_ZERO(0.0, injectionSwitch.x)), 0 | int(_GLF_ZERO(0.0, injectionSwitch.x))))))))) && true)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (true && (_GLF_IDENTITY(! ((_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter != (_GLF_IDENTITY(0 | int(_GLF_ZERO(0.0, injectionSwitch.x)), max(0 | int(_GLF_ZERO(0.0, injectionSwitch.x)), 0 | int(_GLF_ZERO(0.0, injectionSwitch.x))))), ! (! (_GLF_IDENTITY(_injected_loop_counter != (_GLF_IDENTITY(0 | int(_GLF_ZERO(0.0, injectionSwitch.x)), max(0 | int(_GLF_ZERO(0.0, injectionSwitch.x)), 0 | int(_GLF_ZERO(0.0, injectionSwitch.x))))), (_injected_loop_counter != (_GLF_IDENTITY(0 | int(_GLF_ZERO(0.0, injectionSwitch.x)), max(0 | _GLF_IDENTITY(int(_GLF_ZERO(0.0, injectionSwitch.x)), 0 | (int(_GLF_ZERO(0.0, injectionSwitch.x)))), 0 | int(_GLF_ZERO(0.0, injectionSwitch.x)))))) || false))))))), (! ((_GLF_WRAPPED_LOOP(_injected_loop_counter != (_GLF_IDENTITY(0 | int(_GLF_ZERO(0.0, injectionSwitch.x)), max(0 | int(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(float(150126u)) : injectionSwitch.x)))), 0 | int(_GLF_ZERO(0.0, injectionSwitch.x))))))))) && true))))))), (! (! (_GLF_IDENTITY(! ((_GLF_WRAPPED_LOOP(_injected_loop_counter != (_GLF_IDENTITY(_GLF_IDENTITY(0, max(0, 0)) | int(_GLF_ZERO(0.0, injectionSwitch.x)), max(0 | int(_GLF_ZERO(0.0, injectionSwitch.x)), 0 | int(_GLF_ZERO(0.0, injectionSwitch.x)))))))), _GLF_IDENTITY(true && (_GLF_IDENTITY(! ((_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter, int(ivec4(_GLF_IDENTITY(_injected_loop_counter, clamp(_GLF_IDENTITY(_injected_loop_counter, clamp(_injected_loop_counter, _injected_loop_counter, _injected_loop_counter)), _injected_loop_counter, _GLF_IDENTITY(_injected_loop_counter, 0 | (_injected_loop_counter)))), 1, 0, 1))) != _GLF_IDENTITY((_GLF_IDENTITY(0 | int(_GLF_ZERO(0.0, injectionSwitch.x)), max(0 | int(_GLF_ZERO(0.0, injectionSwitch.x)), 0 | int(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_IDENTITY(float(_GLF_IDENTITY(vec4(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), (true ? _GLF_ZERO(0.0, injectionSwitch.x) : _GLF_FUZZED(-4873.5499))), 1.0, 0.0, 0.0), (_GLF_IDENTITY(vec4(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), (true ? _GLF_ZERO(0.0, injectionSwitch.x) : _GLF_FUZZED(-4873.5499))), 1.0, 0.0, 0.0), (vec4(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), (true ? _GLF_ZERO(0.0, injectionSwitch.x) : _GLF_FUZZED(-4873.5499))), 1.0, 0.0, 0.0)) * mat4(1.0))) / vec4(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y)))), (false ? _GLF_FUZZED(30.03) : float(_GLF_IDENTITY(vec4(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), (true ? _GLF_ZERO(0.0, injectionSwitch.x) : _GLF_FUZZED(-4873.5499))), 1.0, 0.0, 0.0), (_GLF_IDENTITY(vec4(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), (true ? _GLF_ZERO(0.0, injectionSwitch.x) : _GLF_FUZZED(-4873.5499))), 1.0, 0.0, 0.0), (vec4(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), (true ? _GLF_ZERO(0.0, injectionSwitch.x) : _GLF_FUZZED(-4873.5499))), 1.0, 0.0, 0.0)) * mat4(1.0))) / vec4(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y))))))))))), (false ? _GLF_FUZZED(41772) : (_GLF_IDENTITY(0 | int(_GLF_ZERO(0.0, injectionSwitch.x)), max(0 | int(_GLF_ZERO(0.0, injectionSwitch.x)), 0 | int(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_IDENTITY(float(_GLF_IDENTITY(vec4(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), (true ? _GLF_ZERO(0.0, injectionSwitch.x) : _GLF_FUZZED(-4873.5499))), 1.0, 0.0, 0.0), (_GLF_IDENTITY(vec4(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), (true ? _GLF_ZERO(0.0, injectionSwitch.x) : _GLF_FUZZED(-4873.5499))), 1.0, 0.0, 0.0), (vec4(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), (true ? _GLF_ZERO(0.0, injectionSwitch.x) : _GLF_FUZZED(-4873.5499))), 1.0, 0.0, 0.0)) * mat4(1.0))) / vec4(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y)))), (false ? _GLF_FUZZED(30.03) : float(_GLF_IDENTITY(vec4(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), (true ? _GLF_ZERO(0.0, injectionSwitch.x) : _GLF_FUZZED(-4873.5499))), 1.0, 0.0, 0.0), (_GLF_IDENTITY(vec4(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), (true ? _GLF_ZERO(0.0, injectionSwitch.x) : _GLF_FUZZED(-4873.5499))), 1.0, 0.0, 0.0), (vec4(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), (true ? _GLF_ZERO(0.0, injectionSwitch.x) : _GLF_FUZZED(-4873.5499))), 1.0, 0.0, 0.0)) * mat4(1.0))) / vec4(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y)))))))))))))))), (! ((_GLF_WRAPPED_LOOP(_injected_loop_counter != (_GLF_IDENTITY(0 | int(_GLF_ZERO(0.0, injectionSwitch.x)), max(_GLF_IDENTITY(0, (false ? _GLF_FUZZED(_injected_loop_counter) : 0)) | int(_GLF_ZERO(0.0, injectionSwitch.x)), 0 | int(_GLF_ZERO(0.0, injectionSwitch.x))))))))) && true)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (true && (_GLF_IDENTITY(! ((_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter != (_GLF_IDENTITY(0 | int(_GLF_ZERO(0.0, injectionSwitch.x)), max(0 | int(_GLF_ZERO(0.0, injectionSwitch.x)), 0 | int(_GLF_ZERO(0.0, injectionSwitch.x))))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(_injected_loop_counter != (_GLF_IDENTITY(0 | int(_GLF_ZERO(0.0, injectionSwitch.x)), max(0 | int(_GLF_ZERO(0.0, injectionSwitch.x)), 0 | int(_GLF_ZERO(0.0, injectionSwitch.x))))), (_injected_loop_counter != (_GLF_IDENTITY(0 | int(_GLF_ZERO(0.0, injectionSwitch.x)), max(0 | _GLF_IDENTITY(int(_GLF_ZERO(0.0, injectionSwitch.x)), 0 | (int(_GLF_ZERO(0.0, injectionSwitch.x)))), 0 | int(_GLF_ZERO(0.0, injectionSwitch.x)))))) || false), true && (_GLF_IDENTITY(_injected_loop_counter != (_GLF_IDENTITY(0 | int(_GLF_ZERO(0.0, injectionSwitch.x)), max(0 | int(_GLF_ZERO(0.0, injectionSwitch.x)), 0 | int(_GLF_ZERO(0.0, injectionSwitch.x))))), (_injected_loop_counter != (_GLF_IDENTITY(0 | int(_GLF_ZERO(0.0, injectionSwitch.x)), max(0 | _GLF_IDENTITY(int(_GLF_ZERO(0.0, injectionSwitch.x)), 0 | (int(_GLF_ZERO(0.0, injectionSwitch.x)))), 0 | _GLF_IDENTITY(int(_GLF_ZERO(0.0, injectionSwitch.x)), (int(_GLF_ZERO(0.0, injectionSwitch.x))) / 1))))) || false))))))))), (_GLF_IDENTITY(! ((_GLF_WRAPPED_LOOP(_injected_loop_counter != (_GLF_IDENTITY(0 | int(_GLF_ZERO(0.0, injectionSwitch.x)), max(0 | int(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(float(150126u)) : injectionSwitch.x)))), 0 | int(_GLF_ZERO(0.0, injectionSwitch.x)))))))), ! (_GLF_IDENTITY(! (! ((_GLF_WRAPPED_LOOP(_injected_loop_counter != (_GLF_IDENTITY(0 | int(_GLF_ZERO(0.0, injectionSwitch.x)), max(0 | int(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(float(150126u)) : injectionSwitch.x)))), 0 | int(_GLF_ZERO(0.0, injectionSwitch.x))))))))), ! (! (! (! ((_GLF_WRAPPED_LOOP(_injected_loop_counter != (_GLF_IDENTITY(0 | int(_GLF_ZERO(0.0, injectionSwitch.x)), max(0 | int(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(float(150126u)) : injectionSwitch.x)))), 0 | int(_GLF_ZERO(0.0, injectionSwitch.x))))))))))))))) && true)))))))) || false)))))); _injected_loop_counter --)
      {
       do
        {
         return;
         if(_GLF_DEAD(false))
          continue;
        }
       while(_GLF_WRAPPED_LOOP(false));
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)), _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, float(mat2(injectionSwitch.y, 0.0, 1.0, 0.0))))), _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))))))))) && true)))
        continue;
       if(_GLF_DEAD(false))
        break;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      {
       for(int _injected_loop_counter = (0 >> _GLF_IDENTITY(int(2), int(2))); _GLF_WRAPPED_LOOP(_injected_loop_counter != ((1 << _GLF_IDENTITY(int(0), int(0))) >> _GLF_IDENTITY(int(0), int(0)))); _injected_loop_counter ++)
        {
         return;
        }
      }
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(bool(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(bool(bvec4((injectionSwitch.x > injectionSwitch.y), false, false, true)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (bool(bvec4((injectionSwitch.x > injectionSwitch.y), false, false, true)))))))), false || (bool(bool(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(bool(bvec4((injectionSwitch.x > injectionSwitch.y), false, false, true)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (bool(bvec4((injectionSwitch.x > injectionSwitch.y), false, false, true)))))))))))))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(false))
        return;
       if(_GLF_WRAPPED_IF_TRUE(true))
        {
         return;
        }
       else
        {
        }
      }
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
   for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_GLF_IDENTITY(_injected_loop_counter > int(_GLF_ZERO(0.0, injectionSwitch.x)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_injected_loop_counter > int(_GLF_ZERO(0.0, injectionSwitch.x)))), ! (_GLF_IDENTITY(! (_injected_loop_counter > int(_GLF_ZERO(0.0, injectionSwitch.x))), false || (! (_GLF_IDENTITY(_injected_loop_counter > int(_GLF_ZERO(0.0, injectionSwitch.x)), false || (_injected_loop_counter > int(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x)))))))))); _injected_loop_counter --)
    {
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
      }
     else
      {
       atomicStore(buf[next_virtual_gid], _GLF_IDENTITY(uint(2), min(_GLF_IDENTITY(uint(2), (false ? _GLF_FUZZED(subgroup_id) : uint(2))), uint(2))), _GLF_IDENTITY(_GLF_IDENTITY(4, (4) - 0), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(4, int(_GLF_IDENTITY(ivec3(_GLF_IDENTITY(4, (_GLF_IDENTITY(4, (4) << 0)) >> 0), 1, (1 & 1)), ~ (_GLF_IDENTITY(~ (ivec3(_GLF_IDENTITY(4, (_GLF_IDENTITY(4, (4) << 0)) >> 0), 1, (1 & 1))), min(~ (ivec3(_GLF_IDENTITY(4, (_GLF_IDENTITY(4, (_GLF_IDENTITY(4, (4) << 0)) << 0)) >> 0), 1, (1 & 1))), _GLF_IDENTITY(~ (ivec3(_GLF_IDENTITY(4, (_GLF_IDENTITY(4, (4) << 0)) >> 0), 1, (1 & 1))), max(~ (ivec3(_GLF_IDENTITY(4, (_GLF_IDENTITY(4, (4) << 0)) >> 0), 1, (1 & 1))), ~ (ivec3(_GLF_IDENTITY(4, (_GLF_IDENTITY(4, (4) << 0)) >> 0), 1, (1 & 1))))))))))), _GLF_IDENTITY(~ _GLF_IDENTITY(_GLF_IDENTITY((~ (_GLF_IDENTITY(4, _GLF_IDENTITY(1 * (4), int(int(1 * (4))))))), ~ (~ ((~ (_GLF_IDENTITY(4, 1 * (4))))))), (false ? _GLF_FUZZED(823) : (~ (_GLF_IDENTITY(4, 1 * (4)))))), (~ _GLF_IDENTITY(_GLF_IDENTITY((~ (_GLF_IDENTITY(4, 1 * (4)))), ~ (~ ((~ (_GLF_IDENTITY(4, 1 * (4))))))), (false ? _GLF_FUZZED(823) : (~ (_GLF_IDENTITY(4, 1 * (4))))))) << 0)), (false ? _GLF_FUZZED(_GLF_IDENTITY(floatBitsToInt(_GLF_IDENTITY(-1.3, min(_GLF_IDENTITY(-1.3, float(_GLF_IDENTITY(mat3(-1.3, 1.0, _GLF_ONE(1.0, injectionSwitch.y), _GLF_IDENTITY(1.0, 0.0 + (_GLF_IDENTITY(1.0, max(1.0, 1.0)))), 1.0, 0.0, 1.0, _GLF_IDENTITY(1.0, max(1.0, 1.0)), 0.0), mat3(mat3(mat3(-1.3, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 1.0, 0.0, 1.0, _GLF_IDENTITY(1.0, max(1.0, 1.0)), 0.0)))))), -1.3))), (false ? _GLF_FUZZED((false ? -78407 : ivec4(-74021, 54254, -52684, -98438).z)) : _GLF_IDENTITY(floatBitsToInt(_GLF_IDENTITY(-1.3, min(_GLF_IDENTITY(-1.3, float(_GLF_IDENTITY(mat3(-1.3, 1.0, _GLF_ONE(1.0, injectionSwitch.y), _GLF_IDENTITY(1.0, 0.0 + (_GLF_IDENTITY(1.0, max(1.0, 1.0)))), 1.0, 0.0, 1.0, _GLF_IDENTITY(1.0, max(1.0, 1.0)), 0.0), mat3(mat3(mat3(-1.3, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 1.0, 0.0, 1.0, _GLF_IDENTITY(1.0, max(1.0, 1.0)), 0.0)))))), -1.3))), max(floatBitsToInt(_GLF_IDENTITY(-1.3, min(_GLF_IDENTITY(-1.3, float(_GLF_IDENTITY(mat3(-1.3, 1.0, _GLF_ONE(1.0, injectionSwitch.y), _GLF_IDENTITY(1.0, 0.0 + (_GLF_IDENTITY(1.0, max(1.0, 1.0)))), 1.0, 0.0, 1.0, _GLF_IDENTITY(1.0, max(1.0, 1.0)), 0.0), mat3(mat3(mat3(-1.3, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 1.0, 0.0, 1.0, _GLF_IDENTITY(1.0, max(1.0, 1.0)), 0.0)))))), -1.3))), floatBitsToInt(_GLF_IDENTITY(-1.3, min(_GLF_IDENTITY(-1.3, float(_GLF_IDENTITY(mat3(-1.3, 1.0, _GLF_ONE(1.0, injectionSwitch.y), _GLF_IDENTITY(1.0, 0.0 + (_GLF_IDENTITY(1.0, max(1.0, 1.0)))), 1.0, 0.0, 1.0, _GLF_IDENTITY(1.0, max(1.0, 1.0)), 0.0), mat3(mat3(mat3(-1.3, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 1.0, 0.0, 1.0, _GLF_IDENTITY(1.0, max(1.0, 1.0)), 0.0)))))), -1.3)))))))) : 4))) ^ (0 | 0), int(int(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(4, (false ? _GLF_FUZZED(floatBitsToInt(-1.3)) : 4))) ^ _GLF_IDENTITY((0 | 0), ((0 | 0)) / 1), clamp((_GLF_IDENTITY(_GLF_IDENTITY(4, int(_GLF_IDENTITY(ivec3(4, 1, 0), clamp(ivec3(4, 1, 0), ivec3(4, 1, 0), ivec3(4, 1, 0))))), _GLF_IDENTITY((false ? _GLF_FUZZED(floatBitsToInt(-1.3)) : 4), int(_GLF_IDENTITY(int((false ? _GLF_FUZZED(floatBitsToInt(-1.3)) : 4)), max(_GLF_IDENTITY(int((false ? _GLF_FUZZED(floatBitsToInt(-1.3)) : 4)), (int((false ? _GLF_FUZZED(floatBitsToInt(-1.3)) : 4))) - 0), _GLF_IDENTITY(int((false ? _GLF_FUZZED(floatBitsToInt(-1.3)) : 4)), (int((false ? _GLF_FUZZED(floatBitsToInt(-1.3)) : 4))) - 0))))))) ^ (0 | 0), _GLF_IDENTITY((_GLF_IDENTITY(4, (false ? _GLF_FUZZED(floatBitsToInt(-1.3)) : 4))), clamp((_GLF_IDENTITY(4, (false ? _GLF_FUZZED(floatBitsToInt(-1.3)) : 4))), _GLF_IDENTITY((_GLF_IDENTITY(4, (false ? _GLF_FUZZED(floatBitsToInt(-1.3)) : 4))), clamp((_GLF_IDENTITY(4, (false ? _GLF_FUZZED(floatBitsToInt(-1.3)) : 4))), (_GLF_IDENTITY(4, (false ? _GLF_FUZZED(floatBitsToInt(-1.3)) : 4))), (_GLF_IDENTITY(4, (false ? _GLF_FUZZED(floatBitsToInt(-1.3)) : 4))))), (_GLF_IDENTITY(4, (false ? _GLF_FUZZED(floatBitsToInt(-1.3)) : 4))))) ^ (_GLF_IDENTITY(0 | 0, ~ (~ (_GLF_IDENTITY(0 | 0, clamp(0 | 0, 0 | 0, 0 | 0)))))), (_GLF_IDENTITY(4, (false ? _GLF_FUZZED(floatBitsToInt(-1.3)) : 4))) ^ (0 | 0))), ((_GLF_IDENTITY(4, (_GLF_IDENTITY(false, true && (false)) ? _GLF_FUZZED(floatBitsToInt(-1.3)) : 4))) ^ (0 | _GLF_IDENTITY(0, ~ (~ (0))))) << _GLF_IDENTITY(0, ~ (~ (0)))))))), _GLF_IDENTITY(64, max(64, 64)), _GLF_IDENTITY(4, max(4, 4)));
      }
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
    }
   else
    {
     if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) || false)))
      {
      }
     else
      {
       if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, ! (! (false)))))))
        {
        }
       else
        {
         if(_GLF_DEAD(false))
          return;
        }
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     subgroupAll(_GLF_IDENTITY(true, (_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec3(true, true, false)), (bool(bvec3(true, true, false))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) && _GLF_TRUE(_GLF_IDENTITY(true, (_GLF_IDENTITY(true, ! (! (true)))) || false), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) < _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((true ? injectionSwitch : _GLF_FUZZED(injectionSwitch)), min((true ? injectionSwitch : _GLF_FUZZED(injectionSwitch)), (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch)))))) / vec2(1.0, 1.0)).y, ! (! (_GLF_IDENTITY(injectionSwitch.x < _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))), (_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch)))) / vec2(1.0, 1.0)).y, _GLF_IDENTITY(bool(bvec3(injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(true ? injectionSwitch : _GLF_FUZZED(_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0))))), (true ? injectionSwitch : _GLF_FUZZED(_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)))))) * vec2(1.0, 1.0))))) / vec2(1.0, 1.0)).y, true, false)), true && (bool(bvec3(_GLF_IDENTITY(injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch)))) / vec2(1.0, 1.0)).y, (_GLF_IDENTITY(injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch)))) / vec2(1.0, 1.0)).y, ! (! (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch)))) / vec2(1.0, 1.0)).y)))) && true), true, false))))))))))));
    }
   do
    {
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-7837.3182)), vec2(_GLF_FUZZED(-186.319), (injectionSwitch)[1]), bvec2(false, true))), injectionSwitch)).x > injectionSwitch.y))), false || (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(injectionSwitch.x > injectionSwitch.y, true)))))), bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(10.57)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, true && (false)), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + 0.0) > injectionSwitch.y))))))) || false), false, true, _GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, _GLF_IDENTITY(true && (false), ! (! (true && (false)))))))))))))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
    }
   while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
   if(_GLF_DEAD(false))
    {
     do
      {
       return;
      }
     while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
    }
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_DEAD(false))), false || (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), _GLF_IDENTITY((false) && true, ! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((false), true && (_GLF_IDENTITY((false), ((false)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), false || ((false))) && true, ! (_GLF_IDENTITY(! ((false) && true), bool(bvec4(! ((false) && true), true, true, false)))))))))))
        {
         do
          {
           if(_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, ! (! (false)))))))
            return;
          }
         while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
         if(_GLF_DEAD(false))
          {
           for(int _injected_loop_counter = (int(_GLF_ZERO(0.0, injectionSwitch.x)) >> _GLF_IDENTITY(int(5), int(5))); _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter != (_GLF_IDENTITY(1 | 1, (1 | 1) | (1 | 1))), true && (_injected_loop_counter != (_GLF_IDENTITY(1 | 1, (1 | 1) | (1 | 1)))))); _injected_loop_counter ++)
            {
             return;
            }
          }
         if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((_GLF_IDENTITY(false, false || _GLF_IDENTITY((false), bool(bvec3((false), true, false))))), bool(bvec3(_GLF_IDENTITY((_GLF_IDENTITY(false, false || _GLF_IDENTITY((false), bool(bvec3((false), true, false))))), ! (! ((_GLF_IDENTITY(false, false || _GLF_IDENTITY((false), bool(bvec3((false), true, false)))))))), true, false)))))))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            return;
           return;
           if(_GLF_DEAD(false))
            return;
          }
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         return;
         if(_GLF_DEAD(false))
          return;
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, true && (false))))), bool(bool(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, true && (false))))))))))
        return;
      }
    }
   else
    {
    }
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec3(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y))), true, true))), (_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0)), bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y)))))), true, true)))) && true))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_WRAPPED_IF_TRUE(true))
        {
         return;
        }
       else
        {
        }
      }
     if(_GLF_DEAD(false))
      return;
     for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter, (_injected_loop_counter) / 1) != _GLF_IDENTITY(0, (0) ^ 0)); _injected_loop_counter --)
      {
       return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
    }
  }
}
