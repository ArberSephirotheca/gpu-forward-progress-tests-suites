#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 uint subgroup_id = gl_SubgroupID;
 uint subgroup_size = gl_SubgroupSize;
 uint subgroup_local_id = gl_SubgroupInvocationID;
 uint num_workgroup = gl_NumWorkGroups.x;
 uint workgroup_size = gl_WorkGroupSize.x;
 uint workgroup_id = gl_WorkGroupID.x;
 uint workgroup_base = workgroup_size * workgroup_id;
 uint virtual_gid = workgroup_base + subgroup_id * subgroup_size + subgroup_local_id;
 uint next_virtual_gid = workgroup_base + subgroup_id * subgroup_size + ((subgroup_local_id + 1) % subgroup_size);
 atomicStore(buf[virtual_gid], uint(1), 4, 64, 4);
 for(int _injected_loop_counter = int(_GLF_ZERO(0.0, injectionSwitch.x)); _GLF_WRAPPED_LOOP(_injected_loop_counter != (0 | 1)); _injected_loop_counter ++)
  {
   if(subgroup_local_id + 1 < subgroup_size)
    {
     if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
      {
       switch(_GLF_SWITCH(0))
        {
         case 0:
         case 52:
         case 91:
         case 33:
         case 26:
         atomicStore(buf[next_virtual_gid], uint(2), 4, 64, 4);
         case 79:
         case 65:
         case 15:
         case 36:
         case 54:
         do
          {
           subgroupAll(false);
          }
         while(_GLF_WRAPPED_LOOP(false));
         break;
         default:
         1;
        }
      }
     else
      {
      }
    }
   else
    {
     if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
      }
     else
      {
       if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
        }
       else
        {
         if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
          {
           switch(_GLF_SWITCH(_GLF_IDENTITY(0, max(0, 0))))
            {
             case 8:
             for(bvec3 _GLF_SWITCH_1_0v, _GLF_SWITCH_1_1v, _GLF_SWITCH_1_2v[24]; true; (false ? mat2(-7.9, 73.97, -2.2, 498.864) : mat2(-22.08, 6923.2147, -68.30, 184.350))[0])
              {
               if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
                {
                 for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
                  {
                   if((true && false))
                    {
                     float _GLF_SWITCH_1_3v, _GLF_SWITCH_1_4v[78];
                     for(int _injected_loop_counter = (1 ^ 0); _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
                      {
                       while((false || false))
                        {
                        }
                      }
                     do
                      {
                       if(false)
                        {
                         ;
                         vec4 _GLF_SWITCH_1_5v, _GLF_SWITCH_1_6v[97], _GLF_SWITCH_1_7v;
                        }
                      }
                     while(_GLF_WRAPPED_LOOP(false));
                    }
                  }
                }
               else
                {
                }
               if(_GLF_WRAPPED_IF_FALSE(false))
                {
                }
               else
                {
                 for(int _injected_loop_counter = _GLF_IDENTITY(int(_GLF_ZERO(0.0, injectionSwitch.x)), min(int(_GLF_ZERO(0.0, injectionSwitch.x)), int(_GLF_ZERO(0.0, injectionSwitch.x)))); _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
                  {
                   for(int _injected_loop_counter = int(_GLF_ZERO(0.0, injectionSwitch.x)); _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
                    {
                     if(false)
                      {
                       float _GLF_SWITCH_1_8v[2], _GLF_SWITCH_1_9v[40], _GLF_SWITCH_1_10v;
                       if(_GLF_WRAPPED_IF_FALSE(false))
                        {
                        }
                       else
                        {
                         ;
                         for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
                          {
                           (mat2(mat3x2(0.0, -2.0, 4.0, -459.726, 7.9, -568.486)) * vec2(0.8, 30.58));
                          }
                         mat4x2 _GLF_SWITCH_1_11v[89], _GLF_SWITCH_1_12v[68];
                         mix((uvec3(75191u, 145136u, 189072u) | uvec3(194026u, 187467u, 47455u)), uvec3(144654u, 116823u, 84522u), greaterThanEqual(ivec3(45377, 35657, 52522), ivec3(-27537, 27869, -61640)));
                         (virtual_gid ^ uvec4(121883u, 68266u, 154028u, 77214u));
                         bool _GLF_SWITCH_1_13v, _GLF_SWITCH_1_14v;
                         for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
                          {
                           if(_GLF_WRAPPED_IF_TRUE(true))
                            {
                             if(_GLF_WRAPPED_IF_FALSE(false))
                              {
                              }
                             else
                              {
                               mat2x4(mat2(-4.0, 3.5, 708.306, 6.1));
                              }
                            }
                           else
                            {
                            }
                          }
                         vec3 _GLF_SWITCH_1_15v;
                         if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                          {
                          }
                         else
                          {
                           greaterThanEqual((uvec3(65666u, 40745u, 161591u) % subgroup_size), uvec3(146375u, 11483u, 2428u));
                          }
                        }
                       uvec4 _GLF_SWITCH_1_16v, _GLF_SWITCH_1_17v, _GLF_SWITCH_1_18v;
                       ;
                       findMSB((ivec2(16360, -70768).t * ivec3(-26343, -15325, 86308)));
                       mat3x2(mat3(3.0, -5816.6058, -903.120, 7192.9314, -9715.0598, 207.812, -975.508, 700.358, -9823.4170));
                       if(bvec3(false, false, true).p)
                        {
                         bvec2 _GLF_SWITCH_1_19v[65];
                         if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                          {
                          }
                         else
                          {
                           bvec2(false, true);
                          }
                        }
                       while((_GLF_SWITCH_1_10v != 6227.1938))
                        {
                         bvec2(true, true);
                         mat4 _GLF_SWITCH_1_20v;
                         vec3 _GLF_SWITCH_1_21v, _GLF_SWITCH_1_22v;
                         sign(ivec4(-37726, -82789, 63954, 79801));
                         mat4x2(63.91, 0.3, 4.7, 3.2, 658.048, 4032.1821, -4.6, -42.77);
                         false;
                         bvec2(true, false);
                         int _GLF_SWITCH_1_23v;
                        }
                      }
                    }
                  }
                }
               ivec2(2857, -82284);
               mat4 _GLF_SWITCH_1_24v;
               ivec2 _GLF_SWITCH_1_25v;
              }
             case 0:
             case 15:
             case 78:
             atomicStore(buf[next_virtual_gid], uint(2), 4, 64, 4);
             case 42:
             case 60:
             subgroupAll(true);
             break;
             case 80:
             do
              {
               ;
              }
             while(_GLF_WRAPPED_LOOP(false));
             default:
             1;
            }
          }
         else
          {
          }
        }
      }
    }
  }
}
