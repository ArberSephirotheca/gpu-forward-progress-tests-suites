#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED((- -5.0))), vec2(_GLF_FUZZED(6002.6991), (injectionSwitch)[1]), bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))).x), float(_GLF_FUZZED(8.4)), bool(false))) > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(_GLF_IDENTITY(bool((injectionSwitch.x > injectionSwitch.y)), false || (bool((injectionSwitch.x > injectionSwitch.y)))))))) && true)), ! (_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), (! ((_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(vec2(-0.3, -5585.5941).r)), float(_GLF_IDENTITY(injectionSwitch.x, float(mat3(injectionSwitch.x, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0)))), bool(true))), injectionSwitch.x)) > injectionSwitch.y))) || false))))))
  return;
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bool(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
    return;
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true)))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), bool(bvec2(_GLF_IDENTITY(false, (false) && true), false))), (injectionSwitch.x > injectionSwitch.y))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), bool(bvec2(_GLF_IDENTITY(false, (false) && true), false))), (injectionSwitch.x > injectionSwitch.y))))))
    return;
   return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     return;
    }
  }
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, true && (false)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, true))), true && (_GLF_IDENTITY(false, bool(bvec3(false, true, false)))))))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
      return;
     return;
    }
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(0.0, 0.0), min(vec2(0.0, 0.0), vec2(0.0, 0.0))) + (injectionSwitch)), injectionSwitch)))).y))))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), false, true, true))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
  }
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, false, true)))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 uint num_workgroup = _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, (_GLF_IDENTITY(_GLF_IDENTITY(true, bool(bvec4(true, true, true, _GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > injectionSwitch.y)), ! (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) && true)), (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && true), bool(bvec2(_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && true), true))))), ! (! (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || _GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, 0.0 + (injectionSwitch.y))))), (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && true)), ! (! (_GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && true)), ((_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && true))) || _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, abs(vec2(1.0, 1.0)) * (injectionSwitch)).x > injectionSwitch.y))))))))))))))) ? gl_NumWorkGroups : _GLF_FUZZED((uvec3(113045u, _GLF_IDENTITY(26784u, (26784u) ^ _GLF_IDENTITY(0u, max(0u, 0u))), 139697u) << subgroup_size)), max(_GLF_IDENTITY(true, bool(bvec4(true, true, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) ? gl_NumWorkGroups : _GLF_FUZZED((uvec3(113045u, _GLF_IDENTITY(_GLF_IDENTITY(26784u, (26784u) ^ _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(0u, max(0u, 0u)), (_GLF_IDENTITY(0u, max(0u, 0u))) | (_GLF_IDENTITY(0u, max(0u, 0u)))), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(0u, max(0u, 0u)), (_GLF_IDENTITY(0u, max(0u, 0u))) | (_GLF_IDENTITY(0u, max(0u, 0u)))))))), (_GLF_IDENTITY(26784u, _GLF_IDENTITY((26784u), (false ? _GLF_FUZZED(subgroup_id) : (26784u))) ^ _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(0u, max(0u, 0u)), (_GLF_IDENTITY(0u, max(0u, 0u))) | (_GLF_IDENTITY(0u, max(0u, 0u)))), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(0u, max(0u, 0u)), (_GLF_IDENTITY(0u, max(0u, 0u))) | (_GLF_IDENTITY(0u, max(0u, 0u))))))))) >> 0u), 139697u) << subgroup_size)), _GLF_IDENTITY(true, bool(bvec4(true, true, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) ? gl_NumWorkGroups : _GLF_FUZZED(_GLF_IDENTITY((uvec3(113045u, _GLF_IDENTITY(26784u, _GLF_IDENTITY((26784u), ((26784u)) | 0u) ^ _GLF_IDENTITY(0u, max(0u, 0u))), 139697u) << subgroup_size), ((uvec3(_GLF_IDENTITY(113045u, 0u | (113045u)), _GLF_IDENTITY(26784u, _GLF_IDENTITY((26784u), _GLF_IDENTITY(uint(uvec4((26784u), 1u, 1u, 0u)), (uint(uvec4((26784u), 1u, 1u, 0u))) ^ 0u)) ^ _GLF_IDENTITY(0u, max(0u, 0u))), 139697u) << subgroup_size)) / uvec3(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y)))))))), min(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, (true ? _GLF_IDENTITY(gl_NumWorkGroups, max(gl_NumWorkGroups, gl_NumWorkGroups)) : _GLF_FUZZED((uvec3(113045u, _GLF_IDENTITY(26784u, (26784u) ^ 0u), _GLF_IDENTITY(139697u, max(139697u, 139697u))) << subgroup_size)))), (_GLF_IDENTITY(gl_NumWorkGroups, (true ? _GLF_IDENTITY(gl_NumWorkGroups, ~ (~ _GLF_IDENTITY((gl_NumWorkGroups), ((gl_NumWorkGroups)) << uvec3(0u, 0u, 0u)))) : _GLF_FUZZED((uvec3(113045u, _GLF_IDENTITY(26784u, (26784u) ^ 0u), 139697u) << subgroup_size))))) >> uvec3(0u, 0u, 0u)), min(_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, (true ? _GLF_IDENTITY(gl_NumWorkGroups, max(gl_NumWorkGroups, gl_NumWorkGroups)) : _GLF_FUZZED((uvec3(113045u, _GLF_IDENTITY(26784u, (26784u) ^ 0u), _GLF_IDENTITY(139697u, max(139697u, 139697u))) << subgroup_size)))), (_GLF_IDENTITY(gl_NumWorkGroups, (true ? _GLF_IDENTITY(gl_NumWorkGroups, ~ (~ (gl_NumWorkGroups))) : _GLF_FUZZED((uvec3(113045u, _GLF_IDENTITY(26784u, (26784u) ^ 0u), 139697u) << subgroup_size))))) >> uvec3(0u, 0u, 0u)), _GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, (true ? _GLF_IDENTITY(gl_NumWorkGroups, max(gl_NumWorkGroups, gl_NumWorkGroups)) : _GLF_FUZZED((uvec3(113045u, _GLF_IDENTITY(26784u, (26784u) ^ 0u), _GLF_IDENTITY(139697u, max(139697u, 139697u))) << subgroup_size)))), (_GLF_IDENTITY(gl_NumWorkGroups, (true ? _GLF_IDENTITY(gl_NumWorkGroups, ~ (~ (gl_NumWorkGroups))) : _GLF_FUZZED((uvec3(113045u, _GLF_IDENTITY(26784u, (26784u) ^ 0u), 139697u) << subgroup_size))))) >> uvec3(0u, 0u, 0u)))), _GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, min(gl_NumWorkGroups, _GLF_IDENTITY(gl_NumWorkGroups, clamp(_GLF_IDENTITY(gl_NumWorkGroups, min(gl_NumWorkGroups, _GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) >> uvec3(0u, 0u, 0u)))), _GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) ^ uvec3(0u, 0u, 0u)), gl_NumWorkGroups)))), (_GLF_IDENTITY(true, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(true, ! (! (true))), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(true, ! (! (true))), ! (! _GLF_IDENTITY((_GLF_IDENTITY(true, ! (! (true)))), bool(_GLF_IDENTITY(bool((_GLF_IDENTITY(true, ! (! (true))))), (bool((_GLF_IDENTITY(true, ! (! (true)))))) && true))))), false, false)), _GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(true, ! (! (true))), ! (! _GLF_IDENTITY((_GLF_IDENTITY(true, ! (! (true)))), bool(_GLF_IDENTITY(bool((_GLF_IDENTITY(true, ! (! (true))))), (bool((_GLF_IDENTITY(true, ! (! (true)))))) && true))))), false, false)), ! (! (bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(true, ! (! (true))), ! (! _GLF_IDENTITY((_GLF_IDENTITY(true, ! (! (true)))), bool(_GLF_IDENTITY(bool((_GLF_IDENTITY(true, ! (! (true))))), (bool((_GLF_IDENTITY(true, ! (! (true)))))) && true))))), false, false))))), bool(bvec2(bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(true, ! (! (true))), ! (! _GLF_IDENTITY((_GLF_IDENTITY(true, ! (! (true)))), bool(_GLF_IDENTITY(bool((_GLF_IDENTITY(true, ! (! (true))))), (bool((_GLF_IDENTITY(true, ! (! (true)))))) && true))))), false, false)), true))), true, false), bvec3(bvec4(bvec3(_GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(true, ! (! (true))), ! (! _GLF_IDENTITY((_GLF_IDENTITY(true, ! (! (true)))), bool(_GLF_IDENTITY(bool((_GLF_IDENTITY(true, ! (! (true))))), (bool((_GLF_IDENTITY(true, ! (! (true)))))) && true))))), false, false)), bool(_GLF_IDENTITY(bvec2(bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(true, ! (! (true))), ! (! _GLF_IDENTITY((_GLF_IDENTITY(true, ! (! (true)))), bool(_GLF_IDENTITY(bool((_GLF_IDENTITY(true, ! (! (true))))), (bool((_GLF_IDENTITY(true, ! (! (true)))))) && true))))), false, false)), true), bvec2(bvec2(bvec2(bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(true, ! (! (true))), ! (! _GLF_IDENTITY((_GLF_IDENTITY(true, ! (! (true)))), bool(_GLF_IDENTITY(bool((_GLF_IDENTITY(true, ! (! (true))))), (bool((_GLF_IDENTITY(true, ! (! (true)))))) && true))))), false, false)), true)))))), true, false), false)))), false || (bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(true, ! (! (true))), ! (! _GLF_IDENTITY((_GLF_IDENTITY(true, ! (! (true)))), bool(_GLF_IDENTITY(bool((_GLF_IDENTITY(true, ! (! (true))))), (bool((_GLF_IDENTITY(true, ! (! (true)))))) && true))))), false, false)), ! (! (bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(true, ! (! (true))), ! (! _GLF_IDENTITY((_GLF_IDENTITY(true, ! (! (true)))), bool(_GLF_IDENTITY(bool((_GLF_IDENTITY(true, ! (! (true))))), (bool((_GLF_IDENTITY(true, ! (! (true)))))) && true))))), false, false))))), bool(bvec2(bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(true, ! (! (true))), ! (! _GLF_IDENTITY((_GLF_IDENTITY(true, ! (! (true)))), bool(_GLF_IDENTITY(bool((_GLF_IDENTITY(true, ! (! (true))))), (bool((_GLF_IDENTITY(true, ! (! (true)))))) && true))))), false, false)), true))), true, false), bvec3(bvec4(bvec3(_GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(true, ! (! (true))), ! (! _GLF_IDENTITY((_GLF_IDENTITY(true, ! (! (true)))), bool(_GLF_IDENTITY(bool((_GLF_IDENTITY(true, ! (! (true))))), (bool((_GLF_IDENTITY(true, ! (! (true)))))) && true))))), false, false)), bool(_GLF_IDENTITY(bvec2(bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(true, ! (! (true))), ! (! _GLF_IDENTITY((_GLF_IDENTITY(true, ! (! (true)))), bool(_GLF_IDENTITY(bool((_GLF_IDENTITY(true, ! (! (true))))), (bool((_GLF_IDENTITY(true, ! (! (true)))))) && true))))), false, false)), true), bvec2(bvec2(bvec2(bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(true, ! (! (true))), ! (! _GLF_IDENTITY((_GLF_IDENTITY(true, ! (! (true)))), bool(_GLF_IDENTITY(bool((_GLF_IDENTITY(true, ! (! (true))))), (bool((_GLF_IDENTITY(true, ! (! (true)))))) && true))))), false, false)), true)))))), true, false), false)))))), ! (! (bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(true, ! (! (true))), ! (! _GLF_IDENTITY((_GLF_IDENTITY(true, ! (! (true)))), bool(_GLF_IDENTITY(bool((_GLF_IDENTITY(true, ! (! (true))))), (bool(_GLF_IDENTITY((_GLF_IDENTITY(true, ! (! (true)))), ! (! ((_GLF_IDENTITY(true, ! (! (true))))))))) && true))))), false, false)), bool(bvec2(bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(true, ! (! (true))), ! (! _GLF_IDENTITY((_GLF_IDENTITY(true, ! (! (true)))), bool(_GLF_IDENTITY(bool((_GLF_IDENTITY(true, ! (! (true))))), (bool((_GLF_IDENTITY(true, ! (! (true)))))) && true))))), false, false)), true))), true, false), bvec3(bvec4(bvec3(_GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(true, ! (! (true))), ! (! _GLF_IDENTITY((_GLF_IDENTITY(true, ! (! (true)))), bool(_GLF_IDENTITY(bool((_GLF_IDENTITY(true, ! (! (true))))), (bool((_GLF_IDENTITY(true, ! (! (true)))))) && true))))), false, false)), bool(bvec2(bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(true, ! (! (true))), ! (! _GLF_IDENTITY((_GLF_IDENTITY(true, ! (! (true)))), bool(_GLF_IDENTITY(bool((_GLF_IDENTITY(true, ! (! (true))))), (bool((_GLF_IDENTITY(true, ! (! (true)))))) && true))))), false, false)), true))), true, false), false))))))))), false || (_GLF_IDENTITY(true, ! (! (true))))), bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(true, ! (! _GLF_IDENTITY((true), bool(bvec4(_GLF_IDENTITY((true), true && (_GLF_IDENTITY((true), ! (! ((true)))))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))))), bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(true, ! (! (true))), ! (! (_GLF_IDENTITY(true, ! (! (true)))))), false, false))), false || (_GLF_IDENTITY(_GLF_IDENTITY(true, ! (! (true))), (_GLF_IDENTITY(true, ! (! (true)))) && true))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(true, ! (! (true))), bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(true, ! (! (true))), _GLF_IDENTITY(! (! (_GLF_IDENTITY(true, ! (! (true))))), (_GLF_IDENTITY(! (! (_GLF_IDENTITY(true, ! (! (true))))), (! (! (_GLF_IDENTITY(true, ! (! (true)))))) || false)) || false)), false, false))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(true, ! (! (true))), bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(true, ! (! (true))), _GLF_IDENTITY(! (! (_GLF_IDENTITY(true, ! (! (true))))), _GLF_IDENTITY((_GLF_IDENTITY(! (! (_GLF_IDENTITY(true, ! (! (true))))), (! (! (_GLF_IDENTITY(true, ! (! (true)))))) || false)) || false, bool(bool((_GLF_IDENTITY(! (! (_GLF_IDENTITY(true, ! (! (true))))), (! (! (_GLF_IDENTITY(true, ! (! (true)))))) || false)) || false))))), false, false)))))), false || (_GLF_IDENTITY(true, ! (! (true)))))) || false))))) || false) ? _GLF_IDENTITY(gl_NumWorkGroups, max(_GLF_IDENTITY(gl_NumWorkGroups, uvec3(uvec3(_GLF_IDENTITY(gl_NumWorkGroups, ~ (~ (gl_NumWorkGroups)))))), _GLF_IDENTITY(gl_NumWorkGroups, (_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) | _GLF_IDENTITY(uvec3(0u, 0u, 0u), clamp(_GLF_IDENTITY(uvec3(0u, 0u, 0u), max(uvec3(0u, 0u, 0u), uvec3(0u, 0u, 0u))), uvec3(0u, _GLF_IDENTITY(_GLF_IDENTITY(0u, min(0u, 0u)), clamp(0u, 0u, 0u)), 0u), _GLF_IDENTITY(uvec3(0u, 0u, 0u), ~ (~ (_GLF_IDENTITY(uvec3(0u, 0u, 0u), (uvec3(0u, 0u, 0u)) ^ uvec3(0u, 0u, 0u))))))))) | (gl_NumWorkGroups)))) : _GLF_FUZZED((uvec3(113045u, _GLF_IDENTITY(26784u, _GLF_IDENTITY((26784u) ^ 0u, 1u * ((26784u) ^ 0u))), 139697u) << subgroup_size)))))).x, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, (_GLF_IDENTITY(_GLF_IDENTITY(true, bool(bvec4(true, true, true, _GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > injectionSwitch.y)), ! (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (! (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4((injectionSwitch.x > injectionSwitch.y), true, true, true)))))) && true), bool(bvec2(_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && true), true))))), ! (! (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && true))))))))))) ? gl_NumWorkGroups : _GLF_FUZZED((uvec3(113045u, _GLF_IDENTITY(26784u, (26784u) ^ _GLF_IDENTITY(0u, max(0u, 0u))), 139697u) << subgroup_size)), max(_GLF_IDENTITY(true, bool(bvec4(true, true, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) ? gl_NumWorkGroups : _GLF_FUZZED((uvec3(113045u, _GLF_IDENTITY(_GLF_IDENTITY(26784u, 0u + (26784u)), (26784u) ^ _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(0u, max(0u, 0u)), (_GLF_IDENTITY(_GLF_IDENTITY(0u, clamp(0u, 0u, 0u)), max(0u, 0u))) | (_GLF_IDENTITY(0u, max(0u, 0u)))), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(0u, max(_GLF_IDENTITY(0u, max(0u, 0u)), 0u)), (_GLF_IDENTITY(0u, max(0u, 0u))) | (_GLF_IDENTITY(0u, max(0u, 0u)))))))), 139697u) << subgroup_size)), _GLF_IDENTITY(true, bool(bvec4(true, true, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) ? gl_NumWorkGroups : _GLF_FUZZED(_GLF_IDENTITY((uvec3(113045u, _GLF_IDENTITY(26784u, _GLF_IDENTITY((26784u) ^ _GLF_IDENTITY(0u, max(0u, 0u)), uint(uvec3((26784u) ^ _GLF_IDENTITY(0u, max(0u, 0u)), (0u << _GLF_IDENTITY(uint(0u), uint(0u))), 1u)))), 139697u) << subgroup_size), ((uvec3(_GLF_IDENTITY(113045u, 0u | (113045u)), _GLF_IDENTITY(26784u, _GLF_IDENTITY((26784u), _GLF_IDENTITY(uint(uvec4((26784u), 1u, 1u, 0u)), (uint(uvec4((26784u), 1u, 1u, 0u))) ^ 0u)) ^ _GLF_IDENTITY(0u, max(0u, 0u))), 139697u) << subgroup_size)) / uvec3(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y)))))))), min(_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, (true ? _GLF_IDENTITY(gl_NumWorkGroups, max(_GLF_IDENTITY(gl_NumWorkGroups, min(gl_NumWorkGroups, gl_NumWorkGroups)), gl_NumWorkGroups)) : _GLF_FUZZED((uvec3(113045u, _GLF_IDENTITY(26784u, (26784u) ^ _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, clamp(0u, 0u, 0u))) ^ 0u)), _GLF_IDENTITY(139697u, max(139697u, 139697u))) << subgroup_size)))), (_GLF_IDENTITY(gl_NumWorkGroups, (true ? _GLF_IDENTITY(gl_NumWorkGroups, ~ (~ (gl_NumWorkGroups))) : _GLF_FUZZED((uvec3(113045u, _GLF_IDENTITY(26784u, (26784u) ^ 0u), 139697u) << subgroup_size))))) >> uvec3(0u, 0u, 0u)), _GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, min(gl_NumWorkGroups, _GLF_IDENTITY(gl_NumWorkGroups, clamp(_GLF_IDENTITY(gl_NumWorkGroups, min(gl_NumWorkGroups, _GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) >> uvec3(0u, 0u, 0u)))), _GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) ^ uvec3(0u, 0u, 0u)), gl_NumWorkGroups)))), (_GLF_IDENTITY(true, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(true, ! (! (true))), bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(true, ! (! (true))), ! (! (_GLF_IDENTITY(true, ! (! (true)))))), false, false))), false || (_GLF_IDENTITY(true, ! (! (true))))), bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(true, ! (! (true))), bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(true, ! (! (true))), ! (! (_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, false || (true)))))))))), false, false))), false || (_GLF_IDENTITY(_GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, (_GLF_IDENTITY(true, false || (true))) || false))), ! (! (true))))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(true, ! (! (true))), bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(true, ! (! (true))), ! (! (_GLF_IDENTITY(true, ! (! (true)))))), false, false))), false || (_GLF_IDENTITY(true, ! (! (true)))))) || false))))) || false) ? _GLF_IDENTITY(gl_NumWorkGroups, max(_GLF_IDENTITY(gl_NumWorkGroups, uvec3(uvec3(_GLF_IDENTITY(gl_NumWorkGroups, ~ (~ (gl_NumWorkGroups)))))), _GLF_IDENTITY(gl_NumWorkGroups, (_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) | _GLF_IDENTITY(uvec3(0u, 0u, 0u), clamp(_GLF_IDENTITY(uvec3(0u, 0u, 0u), max(uvec3(0u, 0u, 0u), uvec3(0u, 0u, _GLF_IDENTITY(0u, _GLF_IDENTITY(0u, 0u ^ (_GLF_IDENTITY(0u, (0u) | 0u))) | (0u))))), uvec3(0u, _GLF_IDENTITY(0u, clamp(0u, 0u, 0u)), 0u), _GLF_IDENTITY(uvec3(0u, 0u, 0u), ~ (~ (_GLF_IDENTITY(uvec3(0u, 0u, 0u), (uvec3(0u, 0u, 0u)) ^ uvec3(0u, 0u, 0u))))))))) | (gl_NumWorkGroups)))) : _GLF_FUZZED((uvec3(113045u, _GLF_IDENTITY(26784u, _GLF_IDENTITY((26784u) ^ 0u, 1u * (_GLF_IDENTITY((26784u) ^ 0u, ((26784u) ^ 0u) ^ 0u)))), 139697u) << subgroup_size)))))).x, (_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, (_GLF_IDENTITY(_GLF_IDENTITY(true, bool(bvec4(true, true, true, _GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > injectionSwitch.y)), ! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), false || (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY((! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), _GLF_IDENTITY(true, ! (! (true))) && ((! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) && true), bool(bvec2(_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && true), true))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && true))), (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && true)))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), false || (! (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && true), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && true)), true && (! (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && true)))))))), (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && true)))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))))))) ? gl_NumWorkGroups : _GLF_FUZZED((uvec3(113045u, _GLF_IDENTITY(26784u, (26784u) ^ _GLF_IDENTITY(0u, max(0u, 0u))), 139697u) << subgroup_size)), max(_GLF_IDENTITY(true, bool(bvec4(true, true, true, _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)))) ? gl_NumWorkGroups : _GLF_FUZZED((uvec3(113045u, _GLF_IDENTITY(26784u, (26784u) ^ _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(0u, max(0u, 0u)), (_GLF_IDENTITY(0u, max(0u, 0u))) | (_GLF_IDENTITY(0u, max(0u, 0u)))), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(0u, max(0u, 0u)), (_GLF_IDENTITY(0u, max(0u, 0u))) | (_GLF_IDENTITY(0u, max(0u, 0u)))))))), 139697u) << subgroup_size)), _GLF_IDENTITY(true, bool(bvec4(true, true, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) ? gl_NumWorkGroups : _GLF_FUZZED(_GLF_IDENTITY((uvec3(113045u, _GLF_IDENTITY(26784u, (26784u) ^ _GLF_IDENTITY(0u, max(0u, 0u))), 139697u) << subgroup_size), ((uvec3(_GLF_IDENTITY(113045u, 0u | (113045u)), _GLF_IDENTITY(26784u, _GLF_IDENTITY((26784u), _GLF_IDENTITY(uint(uvec4((_GLF_IDENTITY(26784u, 0u + (26784u))), 1u, 1u, 0u)), (uint(uvec4((26784u), 1u, 1u, 0u))) ^ 0u)) ^ _GLF_IDENTITY(0u, max(0u, 0u))), 139697u) << subgroup_size)) / uvec3(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y)))))))), min(_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, (true ? _GLF_IDENTITY(gl_NumWorkGroups, max(gl_NumWorkGroups, _GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) | (gl_NumWorkGroups)), (_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) | (gl_NumWorkGroups)), max(_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) | (gl_NumWorkGroups)), _GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) | (gl_NumWorkGroups))))) / ((uvec3(1u, 1u, 1u) << _GLF_IDENTITY(uvec3(2u), uvec3(2u))) >> _GLF_IDENTITY(uvec3(2u), uvec3(2u)))))) : _GLF_FUZZED((uvec3(113045u, _GLF_IDENTITY(26784u, (26784u) ^ 0u), _GLF_IDENTITY(139697u, max(139697u, _GLF_IDENTITY(139697u, max(139697u, _GLF_IDENTITY(139697u, clamp(139697u, 139697u, 139697u))))))) << subgroup_size)))), (_GLF_IDENTITY(gl_NumWorkGroups, (true ? _GLF_IDENTITY(gl_NumWorkGroups, ~ (~ _GLF_IDENTITY((gl_NumWorkGroups), clamp((gl_NumWorkGroups), (gl_NumWorkGroups), (gl_NumWorkGroups))))) : _GLF_FUZZED((uvec3(113045u, _GLF_IDENTITY(26784u, (26784u) ^ 0u), 139697u) << subgroup_size))))) >> uvec3(0u, 0u, 0u)), _GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, min(gl_NumWorkGroups, _GLF_IDENTITY(gl_NumWorkGroups, clamp(_GLF_IDENTITY(gl_NumWorkGroups, min(gl_NumWorkGroups, _GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) >> uvec3(0u, 0u, 0u)))), _GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) ^ uvec3(0u, 0u, 0u)), gl_NumWorkGroups)))), (_GLF_IDENTITY(true, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(true, ! (! (true))), bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(true, ! (! (true))), ! (! (_GLF_IDENTITY(true, ! (! (true)))))), false, false))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(_GLF_IDENTITY(true, ! (! (true))), bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(true, ! (! (true))), ! (! (_GLF_IDENTITY(true, ! (! (true)))))), false, false))))), false || (_GLF_IDENTITY(true, ! (! (true))))), bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(true, ! (! (true))), bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(true, ! (! (true))), ! (! (_GLF_IDENTITY(true, ! (! (true)))))), false, false))), false || (_GLF_IDENTITY(true, ! (! (true))))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(true, ! (! (true))), bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(true, ! (! (true))), ! (! (_GLF_IDENTITY(true, ! (! (true)))))), false, false))), false || (_GLF_IDENTITY(true, ! (! (true)))))) || false))))) || false) ? _GLF_IDENTITY(gl_NumWorkGroups, max(_GLF_IDENTITY(gl_NumWorkGroups, uvec3(uvec3(_GLF_IDENTITY(gl_NumWorkGroups, ~ (~ (gl_NumWorkGroups)))))), _GLF_IDENTITY(gl_NumWorkGroups, (_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) | _GLF_IDENTITY(uvec3(0u, 0u, 0u), clamp(_GLF_IDENTITY(uvec3(0u, 0u, 0u), max(_GLF_IDENTITY(uvec3(0u, 0u, 0u), (uvec3(0u, 0u, 0u)) ^ uvec3(0u, 0u, 0u)), uvec3(0u, 0u, 0u))), uvec3(0u, _GLF_IDENTITY(0u, clamp(0u, 0u, 0u)), 0u), _GLF_IDENTITY(uvec3(0u, 0u, 0u), ~ (~ (_GLF_IDENTITY(uvec3(0u, 0u, 0u), (uvec3(0u, 0u, 0u)) ^ uvec3(0u, 0u, 0u)))))))), (_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) | _GLF_IDENTITY(uvec3(0u, 0u, _GLF_IDENTITY(0u, (true ? _GLF_IDENTITY(0u, (0u) ^ (0u << _GLF_IDENTITY(uint(7u), uint(7u)))) : _GLF_FUZZED(18208u)))), clamp(_GLF_IDENTITY(uvec3(0u, 0u, 0u), max(_GLF_IDENTITY(uvec3(0u, 0u, 0u), (uvec3(0u, 0u, 0u)) ^ uvec3(0u, 0u, 0u)), uvec3(0u, 0u, 0u))), uvec3(0u, _GLF_IDENTITY(0u, clamp(0u, 0u, 0u)), 0u), _GLF_IDENTITY(uvec3(0u, 0u, 0u), ~ (~ (_GLF_IDENTITY(uvec3(0u, 0u, 0u), (uvec3(0u, _GLF_IDENTITY(0u, _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec4(0u, (0u << _GLF_IDENTITY(uint(5u), uint(5u))), 0u, 0u), max(uvec4(0u, (0u << _GLF_IDENTITY(uint(5u), uint(5u))), 0u, 0u), uvec4(0u, (0u << _GLF_IDENTITY(uint(5u), uint(5u))), 0u, 0u)))), 0u + (uint(_GLF_IDENTITY(uvec4(0u, (0u << _GLF_IDENTITY(uint(5u), uint(5u))), 0u, 0u), max(uvec4(0u, (0u << _GLF_IDENTITY(uint(5u), uint(5u))), 0u, 0u), uvec4(0u, (0u << _GLF_IDENTITY(uint(5u), uint(5u))), 0u, 0u))))))), 0u)) ^ uvec3(0u, 0u, 0u))))))))) - uvec3(0u, 0u, 0u))) | (gl_NumWorkGroups)))) : _GLF_IDENTITY(_GLF_FUZZED((uvec3(113045u, _GLF_IDENTITY(26784u, _GLF_IDENTITY((26784u) ^ 0u, 1u * ((26784u) ^ 0u))), 139697u) << subgroup_size)), (_GLF_FUZZED((uvec3(113045u, _GLF_IDENTITY(26784u, _GLF_IDENTITY((26784u) ^ 0u, 1u * ((26784u) ^ 0u))), 139697u) << subgroup_size))) - uvec3(0u, 0u, 0u)))))).x) - 0u)) | (_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, (_GLF_IDENTITY(_GLF_IDENTITY(true, bool(bvec4(true, true, true, _GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)))), ! (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && true), bool(bvec2(_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && true), true))))), ! (! (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, (false) && true))) || (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && true))))))))))) ? gl_NumWorkGroups : _GLF_FUZZED((uvec3(113045u, _GLF_IDENTITY(26784u, (26784u) ^ _GLF_IDENTITY(0u, max(0u, 0u))), 139697u) << subgroup_size)), max(_GLF_IDENTITY(true, bool(bvec4(true, true, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) ? gl_NumWorkGroups : _GLF_FUZZED((uvec3(113045u, _GLF_IDENTITY(26784u, (26784u) ^ _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(0u, max(0u, 0u)), (_GLF_IDENTITY(0u, max(0u, 0u))) | (_GLF_IDENTITY(0u, max(0u, 0u)))), _GLF_IDENTITY(~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(0u, max(0u, 0u)), (_GLF_IDENTITY(0u, max(0u, 0u))) | (_GLF_IDENTITY(0u, max(0u, 0u)))))), uint(uvec4(~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(0u, max(0u, _GLF_IDENTITY(0u, min(0u, 0u)))), (_GLF_IDENTITY(0u, max(0u, 0u))) | (_GLF_IDENTITY(0u, max(0u, 0u)))))), 0u, uint(_GLF_ZERO(0.0, injectionSwitch.x)), 1u))))), 139697u) << subgroup_size)), _GLF_IDENTITY(true, bool(bvec4(true, true, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) ? gl_NumWorkGroups : _GLF_IDENTITY(_GLF_FUZZED(_GLF_IDENTITY((uvec3(113045u, _GLF_IDENTITY(26784u, (26784u) ^ _GLF_IDENTITY(0u, max(0u, 0u))), 139697u) << subgroup_size), ((uvec3(_GLF_IDENTITY(113045u, 0u | (113045u)), _GLF_IDENTITY(26784u, _GLF_IDENTITY((26784u), _GLF_IDENTITY(uint(uvec4((26784u), 1u, 1u, 0u)), (uint(uvec4((26784u), 1u, 1u, 0u))) ^ 0u)) ^ _GLF_IDENTITY(0u, max(0u, 0u))), 139697u) << subgroup_size)) / uvec3(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y)))), uvec3(0u, 0u, 0u) ^ (_GLF_FUZZED(_GLF_IDENTITY((uvec3(113045u, _GLF_IDENTITY(26784u, (26784u) ^ _GLF_IDENTITY(0u, max(0u, 0u))), 139697u) << subgroup_size), ((uvec3(_GLF_IDENTITY(113045u, 0u | (113045u)), _GLF_IDENTITY(26784u, _GLF_IDENTITY((26784u), _GLF_IDENTITY(uint(uvec4((26784u), 1u, 1u, 0u)), (uint(uvec4((26784u), 1u, 1u, 0u))) ^ 0u)) ^ _GLF_IDENTITY(0u, max(0u, 0u))), 139697u) << subgroup_size)) / uvec3(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y)))))))))), min(_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, (true ? _GLF_IDENTITY(gl_NumWorkGroups, max(gl_NumWorkGroups, gl_NumWorkGroups)) : _GLF_FUZZED((uvec3(113045u, _GLF_IDENTITY(26784u, (26784u) ^ 0u), _GLF_IDENTITY(139697u, max(139697u, 139697u))) << subgroup_size)))), (_GLF_IDENTITY(gl_NumWorkGroups, (true ? _GLF_IDENTITY(gl_NumWorkGroups, ~ (~ (gl_NumWorkGroups))) : _GLF_FUZZED((uvec3(113045u, _GLF_IDENTITY(26784u, (26784u) ^ 0u), 139697u) << subgroup_size))))) >> uvec3(0u, 0u, 0u)), _GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, min(gl_NumWorkGroups, _GLF_IDENTITY(gl_NumWorkGroups, clamp(_GLF_IDENTITY(gl_NumWorkGroups, min(gl_NumWorkGroups, _GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) >> uvec3(0u, 0u, 0u)))), _GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) ^ uvec3(_GLF_IDENTITY(0u, (0u) + 0u), 0u, 0u)), gl_NumWorkGroups)))), (_GLF_IDENTITY(true, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(true, ! (! (true))), bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(true, true && (true)), ! (! (true))), ! (! (_GLF_IDENTITY(true, ! (! (true)))))), false, false))), false || (_GLF_IDENTITY(true, ! (! (true))))), bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(true, ! (! (true))), bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(true, ! (! (true))), ! (! (_GLF_IDENTITY(true, ! (! (true)))))), false, false))), false || (_GLF_IDENTITY(true, ! (! (true))))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(true, ! (! (true))), bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(true, ! (! (true))), ! (! (_GLF_IDENTITY(true, ! (! (true)))))), false, false))), false || (_GLF_IDENTITY(true, ! (! (true)))))) || false))))) || false) ? _GLF_IDENTITY(gl_NumWorkGroups, max(_GLF_IDENTITY(gl_NumWorkGroups, uvec3(uvec3(_GLF_IDENTITY(gl_NumWorkGroups, ~ (~ (gl_NumWorkGroups)))))), _GLF_IDENTITY(gl_NumWorkGroups, (_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) | _GLF_IDENTITY(uvec3(0u, 0u, 0u), clamp(_GLF_IDENTITY(uvec3(0u, 0u, 0u), max(uvec3(0u, 0u, 0u), uvec3(0u, 0u, 0u))), uvec3(0u, _GLF_IDENTITY(0u, clamp(0u, 0u, 0u)), 0u), _GLF_IDENTITY(uvec3(0u, 0u, 0u), ~ (~ (_GLF_IDENTITY(uvec3(0u, 0u, 0u), (uvec3(0u, 0u, 0u)) ^ uvec3(0u, 0u, 0u))))))))) | (gl_NumWorkGroups)))) : _GLF_FUZZED((uvec3(113045u, _GLF_IDENTITY(26784u, _GLF_IDENTITY((26784u) ^ 0u, 1u * ((26784u) ^ 0u))), 139697u) << subgroup_size)))))).x));
 uint workgroup_size = gl_WorkGroupSize.x;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(false))
    return;
  }
 uint workgroup_id = gl_WorkGroupID.x;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_IDENTITY(_GLF_DEAD(false), ! (! _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))), bool(bvec3(_GLF_DEAD(false), false, false)))), ((_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_DEAD(false), false, false))))) || false), bool(bool((_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_DEAD(false), false, false))))))), _GLF_IDENTITY(false || (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_DEAD(false), false, false)))), bool(bool(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), _GLF_IDENTITY(bool(bool(_GLF_DEAD(false))), (_GLF_IDENTITY(bool(bool(_GLF_DEAD(false))), true && (bool(bool(_GLF_DEAD(false)))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), bool(bvec3(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false))), _GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), _GLF_IDENTITY(bvec3(bvec4(bvec3(false, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), false)), bvec3(bvec4(bvec3(bvec4(bvec3(false, true, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, vec2(1.0, _GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(5.6) : 1.0)), 1.0))) * (injectionSwitch))) * sqrt(vec2(1.0, 1.0))).x < injectionSwitch.y))), _GLF_IDENTITY(false, bool(bvec2(false, false))))), false)))))), false)))), ((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_DEAD(false)))), bool(bvec3(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false))), _GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), _GLF_IDENTITY(bvec3(bvec4(bvec3(false, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), false)), bvec3(bvec4(bvec3(bvec4(bvec3(false, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), false)), false)))))), false))))) || false))))), ! (_GLF_IDENTITY(_GLF_IDENTITY(! (false || (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(true, bool(bvec4(true, false, false, false))) && (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))), bool(bvec3(_GLF_DEAD(false), false, false)))), bool(bool((_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_DEAD(false), false, false))))))))), true && (! (false || (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), true, true, true))), false, false)))), bool(bool((_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_DEAD(false))), false, false))))))))))), true && (_GLF_IDENTITY(! (false || _GLF_IDENTITY((_GLF_IDENTITY((_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_DEAD(false), false, false)))), bool(bool((_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_DEAD(false), _GLF_IDENTITY(false, true && (false)), false)))))))), bool(bvec3((_GLF_IDENTITY((_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))), false, false)))), bool(bool((_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_DEAD(false), false, false)))))))), false, false)))), _GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, (true) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) && (! (false || (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_DEAD(false), false, false)))), bool(bool((_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, (injectionSwitch.x < injectionSwitch.y) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) && (_GLF_DEAD(false))), _GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, true, false)), ! (! (bool(bvec3(false, true, false)))))), false)))))))))))))))))))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false)))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > injectionSwitch.y))), ! (_GLF_IDENTITY(! (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) || false)))), (injectionSwitch.x > injectionSwitch.y))))))), ! (! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))), bool(bvec2(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > injectionSwitch.y)), bool(bvec3(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > injectionSwitch.y)), true, true)))), ! (_GLF_IDENTITY(! (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && ((injectionSwitch.x > injectionSwitch.y))))))))), ! (! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))), false))))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_DEAD(false)))), false || (_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_DEAD(false)))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)), (bool(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_DEAD(false)))), _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false || (_GLF_TRUE(true, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) < _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)), mix(vec2(_GLF_FUZZED(-8.8), (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)))[_GLF_IDENTITY(1, (1) ^ (0 | 0))]), vec2((_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) - vec2(0.0, 0.0), (true ? _GLF_IDENTITY((injectionSwitch) - vec2(0.0, 0.0), vec2(_GLF_IDENTITY(mat4x3((injectionSwitch) - vec2(0.0, 0.0), 0.0, 0.0, abs(1.0), 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0), (mat4x3((injectionSwitch) - vec2(0.0, 0.0), 0.0, 0.0, abs(1.0), 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0)) * mat4(1.0)))) : _GLF_FUZZED(vec2(-9.8, -0.0))))))[0], _GLF_FUZZED(217.803)), bvec2(true, false))).y), ((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).y)) || false)))), true))) && true)))
  return;
 uint workgroup_base = _GLF_IDENTITY(workgroup_size, 0u + (workgroup_size)) * workgroup_id;
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, false || (false)), (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(-57.94), _GLF_FUZZED(-8.1)), bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))).y)) ? _GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(mat3(injectionSwitch.x, 0.0, 1.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(0.0, _GLF_IDENTITY(min(0.0, 0.0), min(min(0.0, 0.0), min(0.0, _GLF_IDENTITY(0.0, float(mat4x3(0.0, 0.0, 1.0, 1.0, 1.0, 0.0, abs(round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0))))), 1.0, _GLF_IDENTITY(dot(vec3(1.0, 1.0, 1.0), vec3(0.0, 0.0, 0.0)), dot(vec3(1.0, 1.0, 1.0), vec3(0.0, 0.0, 0.0))), 1.0, 1.0, 1.0))))))), 0.0, 0.0)), mix(float(_GLF_FUZZED(743.369)), float(float(mat3(injectionSwitch.x, 0.0, 1.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0, 0.0))), bool(true))))) - 0.0) : _GLF_FUZZED(-166.570))) > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false)))))
    return;
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch)[0], min((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch)[0], (_GLF_IDENTITY((injectionSwitch)[0], max((injectionSwitch)[0], (injectionSwitch)[0]))) - 0.0))), mix(float(_GLF_IDENTITY((injectionSwitch)[0], min((injectionSwitch)[0], (injectionSwitch)[0]))), float(_GLF_FUZZED(float((31954u + 151210u)))), bool(false))), _GLF_FUZZED(-31.95)), vec2(_GLF_FUZZED(-1.5), (injectionSwitch)[1]), bvec2(false, _GLF_IDENTITY(true, bool(bvec4(_GLF_IDENTITY(true, ! (! (true))), true, false, true)))))).x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  return;
 uint virtual_gid = workgroup_base + _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (subgroup_id) / uint(_GLF_ONE(1.0, injectionSwitch.y))), 0u | (_GLF_IDENTITY(subgroup_id, (subgroup_id) | uint(_GLF_ZERO(0.0, injectionSwitch.x))))) * subgroup_size + subgroup_local_id;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) && _GLF_IDENTITY(true, false || (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(true, (true) || false), ! (! (_GLF_IDENTITY(true, (true) || false)))), true && (_GLF_IDENTITY(_GLF_IDENTITY(true, (true) || false), ! (! (_GLF_IDENTITY(true, _GLF_IDENTITY((true) || false, bool(bvec3((true) || false, false, false)))))))))))), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y)) * (injectionSwitch), (false ? _GLF_FUZZED(vec2(-3290.6798, 5.8)) : mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch)))).x > injectionSwitch.y, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y))), (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y))), (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y))), bool(bvec4((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(false || (injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(false || (injectionSwitch.x > injectionSwitch.y), ! (! (false || (injectionSwitch.x > injectionSwitch.y)))))), ! (! (bool(bool(_GLF_IDENTITY(false || (injectionSwitch.x > injectionSwitch.y), ! (! (false || (injectionSwitch.x > injectionSwitch.y)))))))))))), true, true, false)))) && true)))) || false))), ! (_GLF_IDENTITY(! _GLF_IDENTITY((! (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(bool(bvec2(! (injectionSwitch.x > injectionSwitch.y), true)), bool(bool(bool(bvec2(! (injectionSwitch.x > injectionSwitch.y), true)))))))), true && (injectionSwitch.x > injectionSwitch.y)))), false || ((! (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(bool(bvec2(! (injectionSwitch.x > injectionSwitch.y), true)), bool(bool(bool(bvec2(! (injectionSwitch.x > injectionSwitch.y), true)))))))), true && (injectionSwitch.x > injectionSwitch.y)))))), ! (! (! _GLF_IDENTITY((! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)), injectionSwitch)).x > injectionSwitch.y, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(bool(bvec2(! (injectionSwitch.x > injectionSwitch.y), true)), bool(bool(bool(bvec2(! (injectionSwitch.x > injectionSwitch.y), true)))))))), true && (injectionSwitch.x > injectionSwitch.y)))), false || ((! (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(mat2x3(injectionSwitch, 1.0, 1.0, 1.0, 1.0))).y), _GLF_IDENTITY(bool(bvec2(! (injectionSwitch.x > injectionSwitch.y), true)), bool(bool(bool(bvec2(! (injectionSwitch.x > injectionSwitch.y), true)))))))), true && (injectionSwitch.x > injectionSwitch.y)))))))))))))))))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)))
    return;
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 if(_GLF_DEAD(false))
  return;
 uint next_virtual_gid = _GLF_IDENTITY(workgroup_base, _GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY(~ (workgroup_base), (~ (workgroup_base)) - 0u), _GLF_IDENTITY((0u | 0u), (true ? (0u | 0u) : _GLF_FUZZED(subgroup_local_id))) ^ (_GLF_IDENTITY(~ (workgroup_base), (~ (workgroup_base)) - 0u)))), ~ (~ (_GLF_IDENTITY(~ (~ _GLF_IDENTITY((workgroup_base), (false ? _GLF_FUZZED(subgroup_local_id) : (workgroup_base)))), (_GLF_IDENTITY(~ (~ (workgroup_base)), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(~ (workgroup_base), (~ (workgroup_base)) | (_GLF_IDENTITY(~ (workgroup_base), _GLF_IDENTITY(~ (~ (~ (workgroup_base))), min(~ (~ (~ (workgroup_base))), _GLF_IDENTITY(~ (~ (~ (workgroup_base))), clamp(~ (~ (~ (workgroup_base))), _GLF_IDENTITY(~ (~ (~ (workgroup_base))), ~ (~ (~ (~ (~ (workgroup_base)))))), ~ (~ (~ (workgroup_base))))))))))), (~ (~ (workgroup_base))) | 0u)), uint(_GLF_IDENTITY(uvec3(~ (_GLF_IDENTITY(~ (~ (workgroup_base)), (~ (~ (workgroup_base))) | 0u)), 0u, 0u), _GLF_IDENTITY((uvec3(~ (_GLF_IDENTITY(~ (~ (workgroup_base)), (~ (~ (workgroup_base))) | 0u)), 0u, 0u)), ~ (~ ((uvec3(~ (_GLF_IDENTITY(~ (~ (workgroup_base)), (~ (~ (workgroup_base))) | 0u)), 0u, 0u))))) << uvec3(0u, 0u, 0u))))))) >> _GLF_IDENTITY(0u, max(_GLF_IDENTITY(0u, (0u) | 0u), 0u))))))) + _GLF_IDENTITY(subgroup_id * _GLF_IDENTITY(subgroup_size, (subgroup_size) >> 0u), (subgroup_id * subgroup_size) << 0u) + ((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, ~ (~ (subgroup_local_id))), uint(uint(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY(max(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | 0u), subgroup_local_id), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(max(subgroup_local_id, subgroup_local_id), uint(uint(max(subgroup_local_id, subgroup_local_id)))), uint(_GLF_IDENTITY(uint(_GLF_IDENTITY(max(subgroup_local_id, subgroup_local_id), (max(subgroup_local_id, subgroup_local_id)) / 1u)), min(uint(_GLF_IDENTITY(max(subgroup_local_id, subgroup_local_id), (max(subgroup_local_id, subgroup_local_id)) / 1u)), uint(_GLF_IDENTITY(max(subgroup_local_id, subgroup_local_id), (max(subgroup_local_id, subgroup_local_id)) / 1u))))))), (true ? _GLF_IDENTITY((max(subgroup_local_id, subgroup_local_id)), ((max(subgroup_local_id, subgroup_local_id))) >> _GLF_IDENTITY(0u, (0u) | (0u))) : _GLF_FUZZED(subgroup_size))) * 1u)), max(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, 0u | (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) * 1u))), _GLF_IDENTITY(max(_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY(0u, (0u) - 0u) ^ (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, 0u | _GLF_IDENTITY((subgroup_local_id), 0u | ((subgroup_local_id)))), uint(_GLF_IDENTITY(uvec4(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, 0u | _GLF_IDENTITY((subgroup_local_id), 0u | ((subgroup_local_id)))), max(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, 0u | _GLF_IDENTITY((subgroup_local_id), 0u | ((subgroup_local_id)))), clamp(_GLF_IDENTITY(subgroup_local_id, 0u | _GLF_IDENTITY((subgroup_local_id), 0u | ((subgroup_local_id)))), _GLF_IDENTITY(subgroup_local_id, 0u | _GLF_IDENTITY((subgroup_local_id), 0u | ((subgroup_local_id)))), _GLF_IDENTITY(subgroup_local_id, 0u | _GLF_IDENTITY((subgroup_local_id), 0u | ((subgroup_local_id)))))), _GLF_IDENTITY(subgroup_local_id, 0u | _GLF_IDENTITY((subgroup_local_id), 0u | ((subgroup_local_id)))))), 1u, 0u, 0u), ~ (~ (uvec4(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, 0u | _GLF_IDENTITY((subgroup_local_id), 0u | ((subgroup_local_id)))), max(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, 0u | _GLF_IDENTITY((subgroup_local_id), 0u | ((subgroup_local_id)))), clamp(_GLF_IDENTITY(subgroup_local_id, 0u | _GLF_IDENTITY((subgroup_local_id), 0u | ((subgroup_local_id)))), _GLF_IDENTITY(subgroup_local_id, 0u | _GLF_IDENTITY((subgroup_local_id), 0u | ((subgroup_local_id)))), _GLF_IDENTITY(subgroup_local_id, 0u | _GLF_IDENTITY((subgroup_local_id), 0u | ((subgroup_local_id)))))), _GLF_IDENTITY(subgroup_local_id, 0u | _GLF_IDENTITY((subgroup_local_id), 0u | ((subgroup_local_id)))))), 1u, 0u, 0u)))))))), subgroup_local_id), (max(subgroup_local_id, subgroup_local_id)) * 1u)), _GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY(max(subgroup_local_id, subgroup_local_id), (max(subgroup_local_id, subgroup_local_id)) * 1u))))))) + 1) % subgroup_size);
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(mat2x3(injectionSwitch, sqrt(1.0), 1.0, 1.0, sqrt(1.0)))).x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      return;
     if(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_DEAD(false)))), (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_DEAD(false)))), ! (_GLF_IDENTITY(! (! (_GLF_IDENTITY(_GLF_DEAD(false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_DEAD(false))))), bool(bvec3(! (! (_GLF_IDENTITY(_GLF_DEAD(false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_DEAD(false))))), true, false)))))) || false))))
      return;
     return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(bvec3(! (false), _GLF_IDENTITY(false, (false) || false), true)))))))
        return;
       return;
      }
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec2(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)))), clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0), _GLF_IDENTITY(injectionSwitch.x, (true ? _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0) : _GLF_FUZZED(injectionSwitch[0]))))) > injectionSwitch.y), true && ((_GLF_IDENTITY(injectionSwitch, vec2(mat3(injectionSwitch, 1.0, 0.0, 1.0, 1.0, sqrt(0.0), sin(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0))), 0.0))).x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, 0.0 + (_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), injectionSwitch)).y)), _GLF_IDENTITY(min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, float(mat4x3(injectionSwitch.y, _GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0, 0.0, 1.0, _GLF_IDENTITY(1.0, (1.0) + _GLF_IDENTITY(dot(vec4(1.0, 0.0, 0.0, sqrt(1.0)), vec4(0.0, 1.0, 1.0, 0.0)), dot(vec4(1.0, 0.0, 0.0, sqrt(1.0)), vec4(0.0, 1.0, 1.0, 0.0)))), 1.0, 0.0, 1.0, 1.0, 0.0, 1.0)))), max(min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, float(mat4x3(injectionSwitch.y, _GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0, 0.0, 1.0, _GLF_IDENTITY(1.0, (1.0) + _GLF_IDENTITY(dot(vec4(1.0, 0.0, 0.0, sqrt(1.0)), vec4(0.0, 1.0, 1.0, 0.0)), dot(vec4(1.0, 0.0, 0.0, sqrt(1.0)), vec4(0.0, 1.0, 1.0, 0.0)))), 1.0, 0.0, 1.0, 1.0, 0.0, 1.0)))), min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, float(mat4x3(injectionSwitch.y, _GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0, 0.0, 1.0, _GLF_IDENTITY(1.0, (1.0) + _GLF_IDENTITY(dot(vec4(1.0, 0.0, 0.0, sqrt(1.0)), vec4(0.0, 1.0, 1.0, 0.0)), dot(vec4(1.0, 0.0, 0.0, sqrt(1.0)), vec4(0.0, 1.0, 1.0, 0.0)))), 1.0, 0.0, 1.0, 1.0, 0.0, 1.0)))))))), float(_GLF_FUZZED(857.549)), bool(_GLF_IDENTITY(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) && true), ! (! (_GLF_IDENTITY(false, _GLF_IDENTITY((_GLF_IDENTITY(false, ! (! (false)))) && true, ! (! ((_GLF_IDENTITY(false, ! (! (false)))) && true))))))))))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, false)))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, false || (false)), (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(4.2), _GLF_FUZZED((- 239.319))), vec2(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch))), mix(vec2(_GLF_FUZZED(-4.4), _GLF_IDENTITY(((_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], 1.0 * (_GLF_IDENTITY(injectionSwitch[0], 1.0 * (injectionSwitch[0])))), injectionSwitch[1]))))))[1], min(((_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch))))[1], ((_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch))))[1]))), vec2(((_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch))))[0], _GLF_FUZZED(4281.6541)), bvec2(true, false)))[0], _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch), ((injectionSwitch)) * vec2(1.0, 1.0))[1], ((injectionSwitch)[1]) - 0.0)), bvec2(true, _GLF_IDENTITY(true, bool(_GLF_IDENTITY(bvec3(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false), bvec3(bvec3(_GLF_IDENTITY(bvec3(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false), bvec3(bvec3(bvec3(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)))))))))))).x > injectionSwitch.y), ! (_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), bool(bool(! (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y)))))))) && true))))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(false), bool(_GLF_IDENTITY(bvec3(_GLF_DEAD(false), false, false), bvec3(bvec4(bvec3(_GLF_DEAD(false), _GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(false, bool(bvec2(false, true))), true, true)), bool(bvec3(bool(bvec3(_GLF_IDENTITY(false, bool(bvec2(false, true))), true, true)), true, true)))), false), false))))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  return;
 if(_GLF_DEAD(false))
  return;
 atomicStore(buf[virtual_gid], uint(1), _GLF_IDENTITY(_GLF_IDENTITY(4, 0 ^ (4)), (_GLF_IDENTITY(4, 0 ^ (4))) >> 0), 64, _GLF_IDENTITY(4, min(_GLF_IDENTITY(_GLF_IDENTITY(4, 0 ^ (_GLF_IDENTITY(4, min(4, 4)))), min(4, 4)), _GLF_IDENTITY(4, (4) * 1))));
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(subgroup_local_id + 1 < _GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(max(subgroup_size, subgroup_size), (max(subgroup_size, subgroup_size)) << 0u)))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0) > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-9.5)), float(injectionSwitch.y), bool(true))))), false || (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec2(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y)))), (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y))))) || false)))), false)))) && true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && ((_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec2(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y)))), (! (_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(56.13), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(float(-93194))), bvec2(true, false))).y))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(56.13), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(float(-93194))), bvec2(true, false))).y))), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(56.13), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(float(-93194))), bvec2(true, false))).y))))), (bool(bool(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(56.13), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(float(-93194))), bvec2(true, false))).y)))))) && true))), (! (_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(56.13), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(float(-93194))), bvec2(true, false))).y))), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(56.13), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(float(-93194))), bvec2(true, false))).y))))), (bool(bool(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(56.13), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(float(-93194))), bvec2(true, false))).y)))))) && true)))) && true))))) || false)))), false)))) && true)))) && _GLF_IDENTITY(true, _GLF_IDENTITY((true), true && ((true))) && true))))))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, false || _GLF_IDENTITY((_GLF_IDENTITY(false, ! (! (false)))), (_GLF_IDENTITY((_GLF_IDENTITY(false, ! (! (false)))), ! (! ((_GLF_IDENTITY(false, ! (! (false)))))))) || false)), true, _GLF_IDENTITY(_GLF_IDENTITY(true, (true) || false), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(true, (true) || false), true)), bool(bvec2(bool(bvec2(_GLF_IDENTITY(true, (true) || false), true)), false)))), false)))))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) && true), bool(bvec3(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), true, true)))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   atomicStore(buf[next_virtual_gid], uint(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(2, _GLF_IDENTITY(~ (_GLF_IDENTITY(~ (2), (false ? _GLF_FUZZED(_GLF_IDENTITY(-5878, (-5878) << 0)) : ~ (2)))), (~ (_GLF_IDENTITY(~ (2), (false ? _GLF_FUZZED(_GLF_IDENTITY(-5878, (-5878) << 0)) : ~ (2))))) | 0)), int(_GLF_IDENTITY(ivec4(2, 1, 1, 0), (ivec4(2, 1, 1, 0)) << ivec4(0, 0, 0, 0)))), max(_GLF_IDENTITY(_GLF_IDENTITY(2, (_GLF_IDENTITY(2, max(_GLF_IDENTITY(2, max(2, 2)), 2))) | 0), int(_GLF_IDENTITY(_GLF_IDENTITY(ivec4(2, 1, 1, 0), (ivec4(2, 1, _GLF_IDENTITY(1, 0 ^ (1)), 0)) << ivec4(0, 0, 0, 0)), clamp(_GLF_IDENTITY(ivec4(2, 1, _GLF_IDENTITY(1, ~ (~ (1))), 0), (ivec4(2, 1, _GLF_IDENTITY(1, _GLF_IDENTITY(0, (_GLF_IDENTITY(0, 0 ^ (_GLF_IDENTITY(0, clamp(0, 0, 0))))) | (0)) ^ (1)), 0)) << ivec4(0, 0, 0, 0)), _GLF_IDENTITY(ivec4(2, 1, 1, _GLF_IDENTITY(0, max(0, 0))), (ivec4(2, 1, _GLF_IDENTITY(_GLF_IDENTITY(1, min(1, 1)), 0 ^ (1)), 0)) << ivec4(0, 0, 0, 0)), _GLF_IDENTITY(_GLF_IDENTITY(ivec4(2, 1, 1, 0), (ivec4(2, 1, _GLF_IDENTITY(1, 0 ^ (1)), 0)) << ivec4(0, 0, 0, 0)), (_GLF_IDENTITY(ivec4(2, 1, 1, 0), (ivec4(2, 1, _GLF_IDENTITY(1, 0 ^ (1)), 0)) << ivec4(0, 0, 0, 0))) - _GLF_IDENTITY(ivec4(0, 0, 0, 0), (_GLF_IDENTITY(ivec4(0, 0, 0, 0), ivec4(1, 1, 1, 1) * (ivec4(0, 0, 0, 0)))) - ivec4(0, 0, 0, 0))))))), _GLF_IDENTITY(2, int(_GLF_IDENTITY(ivec4(_GLF_IDENTITY(2, (2) - 0), 1, 1, 0), (ivec4(2, 1, 1, 0)) << ivec4(0, 0, 0, 0))))))), 4, _GLF_IDENTITY(_GLF_IDENTITY(64, min(64, 64)), (_GLF_IDENTITY(64, (64) | 0)) * 1), 4);
   subgroupAll(false);
   if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
  }
 else
  {
   atomicStore(buf[_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(next_virtual_gid, ~ (~ (next_virtual_gid))), min(next_virtual_gid, next_virtual_gid)), max(_GLF_IDENTITY(_GLF_IDENTITY(next_virtual_gid, ~ (~ _GLF_IDENTITY((next_virtual_gid), (false ? _GLF_FUZZED(virtual_gid) : (next_virtual_gid))))), min(next_virtual_gid, next_virtual_gid)), _GLF_IDENTITY(_GLF_IDENTITY(next_virtual_gid, ~ (~ (next_virtual_gid))), min(next_virtual_gid, next_virtual_gid))))], uint(2), 4, 64, 4);
   if(_GLF_DEAD(false))
    return;
   subgroupAll(true);
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(9.3, -84.59))))) - vec2(0.0, 0.0)).y, float(float(injectionSwitch.y)))), ! (! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(float(injectionSwitch.y))))))))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     return;
    }
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  {
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) || false)) && true), (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
    return;
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
}
