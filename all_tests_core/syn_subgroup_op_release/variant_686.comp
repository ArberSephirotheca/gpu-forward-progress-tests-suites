#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(false))
  return;
 uint subgroup_size = gl_SubgroupSize;
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 uint num_workgroup = gl_NumWorkGroups.x;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(true && (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true)), false || (true && (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && _GLF_IDENTITY(true, true && (true))))))))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 uint workgroup_size = _GLF_IDENTITY(gl_WorkGroupSize, (_GLF_IDENTITY(gl_WorkGroupSize, (_GLF_IDENTITY(gl_WorkGroupSize, uvec3(uvec4(_GLF_IDENTITY(gl_WorkGroupSize, uvec3(gl_WorkGroupSize[0], _GLF_IDENTITY(gl_WorkGroupSize[1], clamp(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, ~ (~ (gl_WorkGroupSize)))[1], uint(uvec4(_GLF_IDENTITY(gl_WorkGroupSize, ~ (~ (gl_WorkGroupSize)))[1], 1u, (0u | 1u), 0u))), _GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) ^ (uvec3(0u, 0u, 0u) << _GLF_IDENTITY(uvec3(8u), uvec3(8u))))[1], gl_WorkGroupSize[1])), _GLF_IDENTITY(gl_WorkGroupSize[2], ~ (~ (gl_WorkGroupSize[2]))))), 1u)))) ^ uvec3(0u, 0u, 0u))) << uvec3(0u, 0u, 0u)).x;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec4(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, false))))
      {
      }
     else
      {
       return;
      }
    }
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 uint workgroup_id = _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, _GLF_IDENTITY(uvec3(uvec4(_GLF_IDENTITY(gl_WorkGroupID, min(_GLF_IDENTITY(gl_WorkGroupID, clamp(gl_WorkGroupID, gl_WorkGroupID, gl_WorkGroupID)), _GLF_IDENTITY(gl_WorkGroupID, uvec3(0u, 0u, 0u) | (gl_WorkGroupID)))), (_GLF_IDENTITY(((1u & 1u) << _GLF_IDENTITY(uint(1u), uint(1u))) >> _GLF_IDENTITY(uint(1u), _GLF_IDENTITY(uint(1u), (uint(1u)) | (uint(1u)))), 0u | (((1u & 1u) << _GLF_IDENTITY(uint(1u), uint(1u))) >> _GLF_IDENTITY(uint(1u), _GLF_IDENTITY(_GLF_IDENTITY(uint(1u), (uint(1u)) | (uint(1u))), (true ? _GLF_IDENTITY(uint(1u), (uint(1u)) | (uint(1u))) : _GLF_FUZZED((~ workgroup_size)))))))))), min(uvec3(uvec4(_GLF_IDENTITY(gl_WorkGroupID, min(gl_WorkGroupID, _GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) | (_GLF_IDENTITY(gl_WorkGroupID, uvec3(0u, 0u, 0u) + (gl_WorkGroupID)))))), (((1u & 1u) << _GLF_IDENTITY(uint(1u), uint(1u))) >> _GLF_IDENTITY(uint(1u), _GLF_IDENTITY(uint(1u), (uint(1u)) | _GLF_IDENTITY((uint(1u)), (_GLF_IDENTITY((uint(1u)), clamp((uint(1u)), (uint(1u)), (uint(1u))))) ^ 0u)))))), uvec3(uvec4(_GLF_IDENTITY(gl_WorkGroupID, min(gl_WorkGroupID, gl_WorkGroupID)), (((1u & 1u) << _GLF_IDENTITY(uint(1u), uint(1u))) >> _GLF_IDENTITY(uint(1u), _GLF_IDENTITY(uint(1u), (uint(1u)) | (uint(1u)))))))))), uvec3(0u, 0u, _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, 0u | (0u))) >> (0u << _GLF_IDENTITY(uint(6u), uint(6u))))) | (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, uvec3(0u, 0u, 0u) + (gl_WorkGroupID)), clamp(_GLF_IDENTITY(gl_WorkGroupID, uvec3(0u, 0u, 0u) + (gl_WorkGroupID)), _GLF_IDENTITY(gl_WorkGroupID, uvec3(0u, 0u, 0u) + (gl_WorkGroupID)), _GLF_IDENTITY(gl_WorkGroupID, uvec3(0u, 0u, 0u) + (gl_WorkGroupID)))), uvec3(0u, _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (true ? 0u : _GLF_FUZZED(subgroup_size)))) << _GLF_IDENTITY(0u, _GLF_IDENTITY(_GLF_IDENTITY(1u, min(1u, 1u)), (1u) | (1u)) * (0u))), 0u) ^ (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, uvec3(0u, 0u, 0u) + _GLF_IDENTITY((gl_WorkGroupID), (_GLF_IDENTITY((gl_WorkGroupID), max((gl_WorkGroupID), (gl_WorkGroupID)))) - uvec3(0u, _GLF_IDENTITY(0u, (0u) - 0u), 0u))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, ~ (_GLF_IDENTITY(~ (gl_WorkGroupID), clamp(~ (gl_WorkGroupID), ~ (gl_WorkGroupID), ~ (gl_WorkGroupID))))), uvec3(0u, 0u, _GLF_IDENTITY(0u, _GLF_IDENTITY((0u) + 0u, ((0u) + 0u) ^ 0u))) + (gl_WorkGroupID)), (false ? _GLF_FUZZED(uvec3(165832u, 51302u, 140057u)) : _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, ~ (_GLF_IDENTITY(~ (gl_WorkGroupID), clamp(~ (gl_WorkGroupID), ~ (gl_WorkGroupID), ~ (gl_WorkGroupID))))), _GLF_IDENTITY(uvec3(_GLF_IDENTITY(0u, (0u) * 1u), 0u, _GLF_IDENTITY(0u, _GLF_IDENTITY((0u) + 0u, ((0u) + 0u) ^ 0u))), max(uvec3(_GLF_IDENTITY(0u, (0u) * 1u), 0u, _GLF_IDENTITY(0u, _GLF_IDENTITY((0u) + 0u, ((0u) + 0u) ^ 0u))), uvec3(_GLF_IDENTITY(0u, (0u) * 1u), 0u, _GLF_IDENTITY(0u, _GLF_IDENTITY((0u) + 0u, ((0u) + 0u) ^ 0u))))) + (gl_WorkGroupID))))) | (_GLF_IDENTITY(gl_WorkGroupID, uvec3(0u, 0u, 0u) + (gl_WorkGroupID)))))))).x;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_WRAPPED_IF_FALSE(false))
  {
  }
 else
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
  }
 uint workgroup_base = _GLF_IDENTITY(workgroup_size, (_GLF_IDENTITY(workgroup_size, _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec2(workgroup_size, 0u), _GLF_IDENTITY((_GLF_IDENTITY(false, (false) && true) ? _GLF_FUZZED(_GLF_IDENTITY(uvec2(119504u, 188150u), (_GLF_IDENTITY(uvec2(119504u, 188150u), (uvec2(119504u, 188150u)) << uvec2(0u, 0u))) ^ uvec2(0u, 0u))) : uvec2(_GLF_IDENTITY(workgroup_size, _GLF_IDENTITY(uint(uint(_GLF_IDENTITY(workgroup_size, (workgroup_size) << 0u))), (_GLF_IDENTITY(uint(uint(_GLF_IDENTITY(workgroup_size, (workgroup_size) << 0u))), (true ? uint(uint(_GLF_IDENTITY(workgroup_size, (workgroup_size) << 0u))) : _GLF_FUZZED(subgroup_id)))) >> 0u)), 0u)), uvec2(_GLF_IDENTITY(0u, (0u) / 1u), 0u) ^ ((_GLF_IDENTITY(false, (_GLF_IDENTITY(false, true && (false))) && true) ? _GLF_IDENTITY(_GLF_FUZZED(_GLF_IDENTITY(uvec2(119504u, 188150u), (_GLF_IDENTITY(uvec2(119504u, 188150u), (uvec2(119504u, 188150u)) << uvec2(0u, 0u))) ^ uvec2(0u, 0u))), (true ? _GLF_FUZZED(_GLF_IDENTITY(uvec2(_GLF_IDENTITY(119504u, 0u ^ (_GLF_IDENTITY(119504u, clamp(119504u, 119504u, 119504u)))), 188150u), (_GLF_IDENTITY(uvec2(119504u, 188150u), (uvec2(119504u, 188150u)) << uvec2(0u, 0u))) ^ uvec2(0u, 0u))) : _GLF_FUZZED(uvec2(152701u, 114632u)))) : uvec2(workgroup_size, 0u)))))), max(uint(_GLF_IDENTITY(uvec2(workgroup_size, 0u), (_GLF_IDENTITY(false ? _GLF_IDENTITY(_GLF_FUZZED(uvec2(119504u, 188150u)), (_GLF_FUZZED(uvec2(119504u, 188150u))) ^ uvec2(0u, 0u)) : uvec2(workgroup_size, 0u), uvec2(0u, 0u) | (false ? _GLF_IDENTITY(_GLF_FUZZED(uvec2(119504u, 188150u)), (_GLF_FUZZED(uvec2(119504u, 188150u))) ^ uvec2(0u, 0u)) : uvec2(workgroup_size, 0u)))))), uint(_GLF_IDENTITY(uvec2(workgroup_size, 0u), (false ? _GLF_FUZZED(uvec2(119504u, 188150u)) : uvec2(workgroup_size, 0u)))))))) - 0u) * workgroup_id;
 uint virtual_gid = _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, 0u ^ (workgroup_base)) + subgroup_id * subgroup_size + subgroup_local_id, (_GLF_IDENTITY(workgroup_base, min(workgroup_base, workgroup_base)) + subgroup_id * subgroup_size + subgroup_local_id) - 0u);
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 uint next_virtual_gid = workgroup_base + _GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(subgroup_id, uint(uvec2(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, min(subgroup_id, _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (subgroup_id) >> 0u), min(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (subgroup_id) >> 0u), (_GLF_IDENTITY(subgroup_id, (subgroup_id) >> 0u)) | (_GLF_IDENTITY(subgroup_id, (subgroup_id) >> 0u))), _GLF_IDENTITY(subgroup_id, (subgroup_id) >> 0u))))), 0u ^ (subgroup_id)), 1u)))) - 0u) * subgroup_size + _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, 0u + _GLF_IDENTITY((_GLF_IDENTITY((subgroup_local_id + 1) % _GLF_IDENTITY(subgroup_size, (subgroup_size) + 0u), (_GLF_IDENTITY((subgroup_local_id + 1), max((subgroup_local_id + 1), (subgroup_local_id + 1))) % subgroup_size) - 0u)), (_GLF_IDENTITY((_GLF_IDENTITY((subgroup_local_id + 1) % _GLF_IDENTITY(subgroup_size, (subgroup_size) + 0u), _GLF_IDENTITY((_GLF_IDENTITY((subgroup_local_id + 1), max((subgroup_local_id + 1), (subgroup_local_id + 1))) % subgroup_size), min((_GLF_IDENTITY((subgroup_local_id + 1), max((subgroup_local_id + 1), (subgroup_local_id + 1))) % subgroup_size), (_GLF_IDENTITY((subgroup_local_id + 1), max((subgroup_local_id + 1), (subgroup_local_id + 1))) % subgroup_size))) - 0u)), max((_GLF_IDENTITY((subgroup_local_id + 1) % _GLF_IDENTITY(subgroup_size, (subgroup_size) + 0u), (_GLF_IDENTITY((subgroup_local_id + 1), max((subgroup_local_id + 1), (subgroup_local_id + 1))) % subgroup_size) - 0u)), (_GLF_IDENTITY((subgroup_local_id + 1) % _GLF_IDENTITY(subgroup_size, (subgroup_size) + _GLF_IDENTITY(0u, (0u) / 1u)), (_GLF_IDENTITY((subgroup_local_id + 1), max((subgroup_local_id + 1), (subgroup_local_id + 1))) % subgroup_size) - 0u))))) | ((_GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id + 1), min((subgroup_local_id + 1), (subgroup_local_id + 1))) % _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (subgroup_size) | (subgroup_size)), (subgroup_size) + 0u), (_GLF_IDENTITY((subgroup_local_id + 1), max((subgroup_local_id + 1), (subgroup_local_id + 1))) % subgroup_size) - 0u))))), uint(uvec3(_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, 0u + _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id + 1), max((subgroup_local_id + 1), _GLF_IDENTITY((subgroup_local_id + 1), ((subgroup_local_id + 1)) | 0u))) % _GLF_IDENTITY(subgroup_size, (subgroup_size) + 0u), (_GLF_IDENTITY((subgroup_local_id + _GLF_IDENTITY(1, (1) - 0)), max((subgroup_local_id + 1), (subgroup_local_id + 1))) % _GLF_IDENTITY(subgroup_size, 0u ^ (_GLF_IDENTITY(subgroup_size, (subgroup_size) | (subgroup_size))))) - 0u)), _GLF_IDENTITY((_GLF_IDENTITY((_GLF_IDENTITY((subgroup_local_id + 1) % _GLF_IDENTITY(subgroup_size, (subgroup_size) + 0u), (_GLF_IDENTITY((subgroup_local_id + 1), max((subgroup_local_id + 1), (subgroup_local_id + 1))) % subgroup_size) - 0u)), max((_GLF_IDENTITY((subgroup_local_id + 1) % _GLF_IDENTITY(subgroup_size, _GLF_IDENTITY((subgroup_size) + 0u, ((subgroup_size) + _GLF_IDENTITY(0u, (0u) << (1u ^ 1u))) - _GLF_IDENTITY(0u, uint(uint(0u))))), (_GLF_IDENTITY((subgroup_local_id + 1), max((subgroup_local_id + 1), (subgroup_local_id + _GLF_IDENTITY(1, (_GLF_IDENTITY(1, 0 | (1))) >> 0)))) % subgroup_size) - 0u)), (_GLF_IDENTITY((subgroup_local_id + 1) % _GLF_IDENTITY(subgroup_size, (subgroup_size) + 0u), (_GLF_IDENTITY((subgroup_local_id + 1), max((subgroup_local_id + 1), (subgroup_local_id + 1))) % subgroup_size) - 0u))))), (0u | 0u) ^ ((_GLF_IDENTITY((_GLF_IDENTITY((subgroup_local_id + 1) % _GLF_IDENTITY(subgroup_size, (subgroup_size) + 0u), (_GLF_IDENTITY((subgroup_local_id + 1), max((subgroup_local_id + 1), (subgroup_local_id + 1))) % subgroup_size) - 0u)), max((_GLF_IDENTITY((subgroup_local_id + 1) % _GLF_IDENTITY(subgroup_size, _GLF_IDENTITY((subgroup_size) + 0u, ((subgroup_size) + _GLF_IDENTITY(0u, (0u) << (1u ^ 1u))) - _GLF_IDENTITY(0u, uint(uint(0u))))), (_GLF_IDENTITY((subgroup_local_id + 1), max((subgroup_local_id + 1), (subgroup_local_id + _GLF_IDENTITY(1, (_GLF_IDENTITY(1, 0 | (1))) >> 0)))) % subgroup_size) - 0u)), (_GLF_IDENTITY((subgroup_local_id + 1) % _GLF_IDENTITY(subgroup_size, (subgroup_size) + 0u), (_GLF_IDENTITY((subgroup_local_id + 1), max((subgroup_local_id + 1), (subgroup_local_id + 1))) % subgroup_size) - 0u))))))) | ((_GLF_IDENTITY((subgroup_local_id + 1) % _GLF_IDENTITY(subgroup_size, _GLF_IDENTITY((subgroup_size) + 0u, (false ? _GLF_FUZZED(workgroup_base) : (subgroup_size) + 0u))), (_GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id + 1), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY((subgroup_local_id + 1), max((subgroup_local_id + 1), (subgroup_local_id + 1)))), max(~ (_GLF_IDENTITY((subgroup_local_id + 1), max((subgroup_local_id + 1), (subgroup_local_id + 1)))), ~ (_GLF_IDENTITY((subgroup_local_id + 1), max((subgroup_local_id + 1), (subgroup_local_id + 1)))))))), max(_GLF_IDENTITY((subgroup_local_id + 1), (_GLF_IDENTITY((subgroup_local_id + 1), ((subgroup_local_id + 1)) ^ 0u)) / 1u), (subgroup_local_id + 1))) % subgroup_size) - 0u))))), 0u, 1u)))), uint(uvec3(_GLF_IDENTITY((_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, _GLF_IDENTITY(0u + (_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, _GLF_IDENTITY((_GLF_IDENTITY((subgroup_local_id + 1), min((subgroup_local_id + 1), (subgroup_local_id + 1))) % subgroup_size) - 0u, (false ? _GLF_FUZZED(uint(true)) : _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id + 1), _GLF_IDENTITY(uint(_GLF_IDENTITY(uint((subgroup_local_id + 1)), (false ? _GLF_FUZZED(workgroup_size) : _GLF_IDENTITY(uint((subgroup_local_id + 1)), (uint((subgroup_local_id + 1))) + 0u)))), (uint(_GLF_IDENTITY(uint((subgroup_local_id + 1)), (false ? _GLF_FUZZED(workgroup_size) : _GLF_IDENTITY(uint((subgroup_local_id + 1)), (uint((subgroup_local_id + 1))) + 0u))))) | (uint(_GLF_IDENTITY(uint((subgroup_local_id + 1)), (false ? _GLF_FUZZED(workgroup_size) : _GLF_IDENTITY(uint((subgroup_local_id + 1)), (uint((subgroup_local_id + 1))) + 0u))))))), min((subgroup_local_id + 1), (subgroup_local_id + 1))) % subgroup_size) - 0u, ((_GLF_IDENTITY((subgroup_local_id + 1), min((subgroup_local_id + 1), (subgroup_local_id + 1))) % subgroup_size) - 0u) << 0u))))), clamp(_GLF_IDENTITY(0u + (_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, _GLF_IDENTITY((_GLF_IDENTITY((subgroup_local_id + 1), min((subgroup_local_id + 1), (subgroup_local_id + 1))) % subgroup_size) - 0u, (false ? _GLF_FUZZED(uint(true)) : _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id + 1), _GLF_IDENTITY(uint(_GLF_IDENTITY(uint((subgroup_local_id + 1)), (false ? _GLF_FUZZED(workgroup_size) : _GLF_IDENTITY(uint((subgroup_local_id + 1)), (uint((subgroup_local_id + 1))) + 0u)))), (uint(_GLF_IDENTITY(uint((subgroup_local_id + 1)), (false ? _GLF_FUZZED(workgroup_size) : _GLF_IDENTITY(uint((subgroup_local_id + 1)), (uint((subgroup_local_id + 1))) + 0u))))) | (uint(_GLF_IDENTITY(uint((subgroup_local_id + 1)), (false ? _GLF_FUZZED(workgroup_size) : _GLF_IDENTITY(uint((subgroup_local_id + 1)), (uint((subgroup_local_id + 1))) + 0u))))))), min((subgroup_local_id + 1), (subgroup_local_id + 1))) % subgroup_size) - 0u, ((_GLF_IDENTITY((subgroup_local_id + 1), min((subgroup_local_id + 1), (subgroup_local_id + 1))) % subgroup_size) - 0u) << 0u))))), (0u + (_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, _GLF_IDENTITY((_GLF_IDENTITY((subgroup_local_id + 1), min((subgroup_local_id + 1), (subgroup_local_id + 1))) % subgroup_size) - 0u, (false ? _GLF_FUZZED(uint(true)) : _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id + 1), _GLF_IDENTITY(uint(_GLF_IDENTITY(uint((subgroup_local_id + 1)), (false ? _GLF_FUZZED(workgroup_size) : _GLF_IDENTITY(uint((subgroup_local_id + 1)), (uint((subgroup_local_id + 1))) + 0u)))), (uint(_GLF_IDENTITY(uint((subgroup_local_id + 1)), (false ? _GLF_FUZZED(workgroup_size) : _GLF_IDENTITY(uint((subgroup_local_id + 1)), (uint((subgroup_local_id + 1))) + 0u))))) | (uint(_GLF_IDENTITY(uint((subgroup_local_id + 1)), (false ? _GLF_FUZZED(workgroup_size) : _GLF_IDENTITY(uint((subgroup_local_id + 1)), (uint((subgroup_local_id + 1))) + 0u))))))), min((subgroup_local_id + 1), (subgroup_local_id + 1))) % subgroup_size) - 0u, ((_GLF_IDENTITY((subgroup_local_id + 1), min((subgroup_local_id + 1), (subgroup_local_id + 1))) % subgroup_size) - 0u) << 0u)))))) / 1u), 0u + (_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, _GLF_IDENTITY((_GLF_IDENTITY((subgroup_local_id + 1), min((subgroup_local_id + 1), (subgroup_local_id + 1))) % subgroup_size) - 0u, (false ? _GLF_FUZZED(uint(true)) : _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id + 1), _GLF_IDENTITY(uint(_GLF_IDENTITY(uint((subgroup_local_id + 1)), (false ? _GLF_FUZZED(workgroup_size) : _GLF_IDENTITY(uint((subgroup_local_id + 1)), (uint((subgroup_local_id + 1))) + 0u)))), (uint(_GLF_IDENTITY(uint((subgroup_local_id + 1)), (false ? _GLF_FUZZED(workgroup_size) : _GLF_IDENTITY(uint((subgroup_local_id + 1)), (uint((subgroup_local_id + 1))) + 0u))))) | (uint(_GLF_IDENTITY(uint((subgroup_local_id + 1)), (false ? _GLF_FUZZED(workgroup_size) : _GLF_IDENTITY(uint((subgroup_local_id + 1)), (uint((subgroup_local_id + 1))) + 0u))))))), min((subgroup_local_id + 1), (subgroup_local_id + 1))) % subgroup_size) - 0u, ((_GLF_IDENTITY((subgroup_local_id + 1), min((subgroup_local_id + 1), (subgroup_local_id + 1))) % subgroup_size) - 0u) << 0u))))), _GLF_IDENTITY(0u + (_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, _GLF_IDENTITY((_GLF_IDENTITY((subgroup_local_id + 1), min((subgroup_local_id + 1), (subgroup_local_id + 1))) % subgroup_size) - 0u, (false ? _GLF_FUZZED(uint(true)) : _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id + 1), _GLF_IDENTITY(uint(_GLF_IDENTITY(uint((subgroup_local_id + 1)), (false ? _GLF_FUZZED(workgroup_size) : _GLF_IDENTITY(uint((subgroup_local_id + 1)), (uint((subgroup_local_id + 1))) + 0u)))), (uint(_GLF_IDENTITY(uint((subgroup_local_id + 1)), (false ? _GLF_FUZZED(workgroup_size) : _GLF_IDENTITY(uint((subgroup_local_id + 1)), (uint((subgroup_local_id + 1))) + 0u))))) | (uint(_GLF_IDENTITY(uint((subgroup_local_id + 1)), (false ? _GLF_FUZZED(workgroup_size) : _GLF_IDENTITY(uint((subgroup_local_id + 1)), (uint((subgroup_local_id + 1))) + 0u))))))), min((subgroup_local_id + 1), (subgroup_local_id + 1))) % subgroup_size) - 0u, ((_GLF_IDENTITY((subgroup_local_id + 1), min((subgroup_local_id + 1), (subgroup_local_id + 1))) % subgroup_size) - 0u) << 0u))))), (0u + (_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, _GLF_IDENTITY((_GLF_IDENTITY((subgroup_local_id + 1), min((subgroup_local_id + 1), (subgroup_local_id + 1))) % subgroup_size) - 0u, (false ? _GLF_FUZZED(uint(true)) : _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id + 1), _GLF_IDENTITY(uint(_GLF_IDENTITY(uint((subgroup_local_id + 1)), (false ? _GLF_FUZZED(workgroup_size) : _GLF_IDENTITY(uint((subgroup_local_id + 1)), (uint((subgroup_local_id + 1))) + 0u)))), (uint(_GLF_IDENTITY(uint((subgroup_local_id + 1)), (false ? _GLF_FUZZED(workgroup_size) : _GLF_IDENTITY(uint((subgroup_local_id + 1)), (uint((subgroup_local_id + 1))) + 0u))))) | (uint(_GLF_IDENTITY(uint((subgroup_local_id + 1)), (false ? _GLF_FUZZED(workgroup_size) : _GLF_IDENTITY(uint((subgroup_local_id + 1)), (uint((subgroup_local_id + 1))) + 0u))))))), min((subgroup_local_id + 1), (subgroup_local_id + 1))) % subgroup_size) - 0u, ((_GLF_IDENTITY((subgroup_local_id + 1), min((subgroup_local_id + 1), (subgroup_local_id + 1))) % subgroup_size) - 0u) << 0u)))))) + 0u))))), ((_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, 0u + (_GLF_IDENTITY((subgroup_local_id + _GLF_IDENTITY(1, (1) ^ 0)) % subgroup_size, ((subgroup_local_id + 1) % subgroup_size) - 0u))))) - 0u), 0u, 0u)));
 if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) || false)) && _GLF_IDENTITY(_GLF_IDENTITY(true, (true) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (true))))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
    }
   else
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), (bool(bool(false))) || false))))
      return;
    }
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! _GLF_IDENTITY((! (_GLF_DEAD(false))), true && ((! (_GLF_DEAD(false)))))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
      return;
     return;
    }
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 atomicStore(buf[virtual_gid], uint(1), 4, 64, 4);
 if(_GLF_IDENTITY(subgroup_local_id + 1, min(_GLF_IDENTITY(subgroup_local_id + 1, (true ? subgroup_local_id + 1 : _GLF_FUZZED(subgroup_size))), subgroup_local_id + 1)) < subgroup_size)
  {
   if(_GLF_DEAD(false))
    return;
   atomicStore(buf[next_virtual_gid], uint(2), 4, 64, 4);
   if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, true && (false)))))), _GLF_IDENTITY(bool(bvec2(_GLF_DEAD(false), false)), (bool(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_DEAD(false)))), false))) && true))), true && ((_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec2(_GLF_DEAD(false), false)), (bool(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), bool(_GLF_IDENTITY(bool(_GLF_DEAD(false)), _GLF_IDENTITY(bool(bvec2(bool(_GLF_DEAD(false)), true)), true && (bool(bvec2(bool(_GLF_DEAD(false)), true))))))), false))) && true))))) || false))
    {
     if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
      {
       return;
      }
     else
      {
      }
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))))
    return;
   for(int _injected_loop_counter = int(_GLF_ONE(1.0, injectionSwitch.y)); _GLF_WRAPPED_LOOP(_injected_loop_counter > int(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), min(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))))); _injected_loop_counter --)
    {
     if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_TRUE(true, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0)), float(_GLF_FUZZED(90.02)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0)), float(_GLF_FUZZED(90.02)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) + _GLF_IDENTITY(dot(vec3(1.0, 1.0, 0.0), vec3(0.0, 0.0, 1.0)), dot(vec3(1.0, 1.0, 0.0), vec3(0.0, 0.0, 1.0)))) < injectionSwitch.y)), true && (_GLF_TRUE(true, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0)), float(_GLF_FUZZED(90.02)), bool(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).x > injectionSwitch.y))))), _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(vec2(injectionSwitch), (_GLF_IDENTITY(vec2(injectionSwitch), vec2(vec2(vec2(injectionSwitch))))) - vec2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))))).x, (injectionSwitch.x) - 0.0)), _GLF_IDENTITY(float(_GLF_FUZZED(90.02)), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(float(_GLF_FUZZED(90.02)), (float(_GLF_FUZZED(90.02))) - 0.0) : _GLF_FUZZED(9454.7978))), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) + _GLF_IDENTITY(dot(vec3(1.0, 1.0, 0.0), vec3(0.0, 0.0, 1.0)), dot(vec3(1.0, 1.0, 0.0), vec3(0.0, 0.0, 1.0))), (false ? _GLF_FUZZED(328.264) : (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0), (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0)) - 0.0)), _GLF_IDENTITY(float(_GLF_FUZZED(_GLF_IDENTITY(90.02, mix(float(90.02), float(_GLF_FUZZED(4821.7529)), bool(false))))), float(vec4(_GLF_IDENTITY(float(_GLF_FUZZED(_GLF_IDENTITY(90.02, mix(float(90.02), float(_GLF_FUZZED(4821.7529)), bool(false))))), float(mat4x3(float(_GLF_FUZZED(_GLF_IDENTITY(90.02, mix(float(90.02), float(_GLF_FUZZED(4821.7529)), bool(false))))), 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0))), 0.0, 0.0, 1.0))), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), clamp(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0), (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0)) - 0.0)), _GLF_IDENTITY(float(_GLF_FUZZED(_GLF_IDENTITY(90.02, mix(float(90.02), float(_GLF_FUZZED(4821.7529)), bool(false))))), float(vec4(_GLF_IDENTITY(float(_GLF_FUZZED(_GLF_IDENTITY(90.02, mix(float(90.02), float(_GLF_FUZZED(4821.7529)), bool(false))))), float(mat4x3(float(_GLF_FUZZED(_GLF_IDENTITY(90.02, mix(float(90.02), float(_GLF_FUZZED(4821.7529)), bool(false))))), 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0))), 0.0, 0.0, 1.0))), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0), (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0)) - 0.0)), _GLF_IDENTITY(float(_GLF_FUZZED(_GLF_IDENTITY(90.02, mix(float(90.02), float(_GLF_FUZZED(4821.7529)), bool(false))))), float(vec4(_GLF_IDENTITY(float(_GLF_FUZZED(_GLF_IDENTITY(90.02, mix(float(90.02), float(_GLF_FUZZED(4821.7529)), bool(false))))), float(mat4x3(float(_GLF_FUZZED(_GLF_IDENTITY(90.02, mix(float(90.02), float(_GLF_FUZZED(4821.7529)), bool(false))))), 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0))), 0.0, 0.0, 1.0))), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), mix(float(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0), (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0)) - 0.0)), _GLF_IDENTITY(float(_GLF_FUZZED(_GLF_IDENTITY(90.02, mix(float(90.02), float(_GLF_FUZZED(4821.7529)), bool(false))))), float(vec4(_GLF_IDENTITY(float(_GLF_FUZZED(_GLF_IDENTITY(90.02, mix(float(90.02), float(_GLF_FUZZED(4821.7529)), bool(false))))), float(mat4x3(float(_GLF_FUZZED(_GLF_IDENTITY(90.02, mix(float(90.02), float(_GLF_FUZZED(4821.7529)), bool(false))))), 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0))), 0.0, 0.0, 1.0))), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), float(_GLF_FUZZED(-3.5)), bool(false))), _GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0), (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0)) - 0.0)), _GLF_IDENTITY(float(_GLF_FUZZED(_GLF_IDENTITY(90.02, mix(float(90.02), float(_GLF_FUZZED(4821.7529)), bool(false))))), float(vec4(_GLF_IDENTITY(float(_GLF_FUZZED(_GLF_IDENTITY(90.02, mix(float(90.02), float(_GLF_FUZZED(4821.7529)), bool(false))))), float(mat4x3(float(_GLF_FUZZED(_GLF_IDENTITY(90.02, mix(float(90.02), float(_GLF_FUZZED(4821.7529)), bool(false))))), 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0))), 0.0, 0.0, 1.0))), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))) + _GLF_IDENTITY(dot(vec3(1.0, 1.0, 0.0), vec3(0.0, 0.0, _GLF_IDENTITY(1.0, min(1.0, 1.0)))), dot(vec3(1.0, 1.0, 0.0), vec3(0.0, 0.0, _GLF_IDENTITY(1.0, max(1.0, _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(8854.4242) : _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(6.5)), float(1.0), bool(true))))))))))))) < injectionSwitch.y)))), bool(bvec4(_GLF_TRUE(true, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, false || (_GLF_IDENTITY(injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y, false || (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, bool(bool(injectionSwitch.x < injectionSwitch.y))))))), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, false || (_GLF_IDENTITY(injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y, false || (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, bool(bool(injectionSwitch.x < injectionSwitch.y))))))), true && (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, false || (_GLF_IDENTITY(injectionSwitch.x < _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, tan(log(vec2(1.0, 1.0))) + (injectionSwitch)), vec2(injectionSwitch[0], injectionSwitch[1])).y, false || (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, bool(bool(injectionSwitch.x < injectionSwitch.y)))))))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), true, true, false)))))
      {
       switch(_GLF_SWITCH(0))
        {
         case 84:
         {
          ivec2 _GLF_SWITCH_0_0v, _GLF_SWITCH_0_1v;
          if(_GLF_DEAD(false))
           break;
          {
           if(_GLF_DEAD(false))
            return;
           if(_GLF_DEAD(false))
            continue;
           do
            {
             if(_GLF_DEAD(false))
              break;
             ivec4(16087, _GLF_IDENTITY(-55252, max(-55252, -55252)), 35616, 17681);
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              return;
             if(_GLF_DEAD(false))
              {
               if(_GLF_DEAD(false))
                continue;
               continue;
              }
            }
           while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, bool(bvec2(false, false)))), ! (! (bool(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, false)), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bool(bvec2(false, false)), false || (bool(bvec2(false, false)))), false, false), bvec3(bvec3(bvec3(_GLF_IDENTITY(bool(bvec2(false, false)), false || (bool(bvec2(false, false)))), false, false))))))))))))), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, true, false), bvec3(bvec4(bvec3(false, true, false), true))))) || (injectionSwitch.x > injectionSwitch.y)))), bool(bool(_GLF_FALSE(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, bool(bvec2(false, false)))), ! (! (bool(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(false, false))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(false, false))), bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(false, false))), (_GLF_IDENTITY(false, bool(bvec2(false, false)))) || false))))), true && (! (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(false, false))), bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(false, false))), (_GLF_IDENTITY(false, bool(bvec2(false, false)))) || false))))))))))))))), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(false, bool(bvec3(false, true, false))) || (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec3(false, true, false))), true && (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec3(false, true, false))), ! (! (_GLF_IDENTITY(false, bool(bvec3(false, true, false)))))))) || (injectionSwitch.x > injectionSwitch.y))))))))))));
           if(_GLF_DEAD(false))
            return;
           uvec3 _GLF_SWITCH_0_2v[20];
           length(vec4(-410.612, _GLF_IDENTITY(4135.1329, _GLF_IDENTITY(max(4135.1329, 4135.1329), (_GLF_IDENTITY(max(4135.1329, 4135.1329), mix(float(max(4135.1329, 4135.1329)), _GLF_IDENTITY(float(_GLF_FUZZED(-3.0)), min(float(_GLF_FUZZED(-3.0)), float(_GLF_FUZZED(-3.0)))), bool(_GLF_IDENTITY(false, ! (! (false))))))) / 1.0)), -9.0, 1.8));
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              return;
             return;
            }
           mat4 _GLF_SWITCH_0_3v[1];
           for(int _injected_loop_counter = (_GLF_IDENTITY((1 << _GLF_IDENTITY(int(1), _GLF_IDENTITY(int(1), _GLF_IDENTITY((int(1)), ((int(1))) | ((int(1)))) / 1))) >> _GLF_IDENTITY(_GLF_IDENTITY(int(1), _GLF_IDENTITY(int(1), min(int(1), int(1)))), (_GLF_IDENTITY(int(1), _GLF_IDENTITY(int(1), _GLF_IDENTITY(min(int(1), int(1)), (min(int(1), int(1))) | 0)))) + 0), (_GLF_IDENTITY((1 << _GLF_IDENTITY(int(1), _GLF_IDENTITY(int(1), _GLF_IDENTITY((int(1)), ((int(1))) | ((int(1)))) / 1))) >> _GLF_IDENTITY(_GLF_IDENTITY(int(1), _GLF_IDENTITY(int(1), min(int(1), int(1)))), (_GLF_IDENTITY(int(1), _GLF_IDENTITY(int(1), _GLF_IDENTITY(min(int(1), int(1)), (min(int(1), int(1))) | 0)))) + 0), int(ivec4((1 << _GLF_IDENTITY(int(1), _GLF_IDENTITY(int(1), _GLF_IDENTITY((int(1)), ((int(1))) | ((int(1)))) / 1))) >> _GLF_IDENTITY(_GLF_IDENTITY(int(1), _GLF_IDENTITY(int(1), min(int(1), int(1)))), (_GLF_IDENTITY(int(1), _GLF_IDENTITY(int(1), _GLF_IDENTITY(min(int(1), int(1)), (min(int(1), int(1))) | 0)))) + 0), 0, int(_GLF_ONE(1.0, injectionSwitch.y)), 0)))) | (_GLF_IDENTITY((1 << _GLF_IDENTITY(int(1), _GLF_IDENTITY(int(1), _GLF_IDENTITY((int(1)), ((int(1))) | ((int(1)))) / 1))) >> _GLF_IDENTITY(_GLF_IDENTITY(int(1), _GLF_IDENTITY(int(1), min(int(1), int(1)))), (_GLF_IDENTITY(int(1), _GLF_IDENTITY(int(1), _GLF_IDENTITY(min(int(1), int(1)), (min(int(1), int(1))) | 0)))) + 0), ~ (_GLF_IDENTITY(~ ((1 << _GLF_IDENTITY(int(1), _GLF_IDENTITY(int(1), _GLF_IDENTITY((int(1)), ((int(1))) | ((int(1)))) / 1))) >> _GLF_IDENTITY(_GLF_IDENTITY(int(1), _GLF_IDENTITY(int(1), min(int(1), int(1)))), (_GLF_IDENTITY(int(1), _GLF_IDENTITY(int(1), _GLF_IDENTITY(min(int(1), int(1)), (min(int(1), int(1))) | 0)))) + 0)), min(~ ((1 << _GLF_IDENTITY(int(1), _GLF_IDENTITY(int(1), _GLF_IDENTITY((int(1)), ((int(1))) | ((int(1)))) / 1))) >> _GLF_IDENTITY(_GLF_IDENTITY(int(1), _GLF_IDENTITY(int(1), min(int(1), int(1)))), (_GLF_IDENTITY(int(1), _GLF_IDENTITY(int(1), _GLF_IDENTITY(min(int(1), int(1)), (min(int(1), int(1))) | 0)))) + 0)), ~ ((1 << _GLF_IDENTITY(int(1), _GLF_IDENTITY(int(1), _GLF_IDENTITY((int(1)), ((int(1))) | ((int(1)))) / 1))) >> _GLF_IDENTITY(_GLF_IDENTITY(int(1), _GLF_IDENTITY(int(1), min(int(1), int(1)))), (_GLF_IDENTITY(int(1), _GLF_IDENTITY(int(1), _GLF_IDENTITY(min(int(1), int(1)), (min(int(1), int(1))) | 0)))) + 0))))))))); _GLF_WRAPPED_LOOP(_injected_loop_counter != (0 >> _GLF_IDENTITY(int(8), int(8)))); _injected_loop_counter --)
            {
             if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, ! (! (false)))))
              {
              }
             else
              {
               if(_GLF_DEAD(false))
                continue;
               uvec3(34348u, 111005u, 13285u);
               if(_GLF_DEAD(false))
                {
                 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
                  return;
                 if(_GLF_DEAD(false))
                  break;
                 do
                  {
                   if(_GLF_DEAD(false))
                    break;
                   return;
                  }
                 while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
                }
              }
            }
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(false))
              return;
             return;
            }
           if(_GLF_DEAD(false))
            return;
          }
          if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
           break;
          isinf(tan(vec3(-62.00, -7.0, _GLF_IDENTITY(-16.37, min(_GLF_IDENTITY(-16.37, float(mat4(-16.37, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, _GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0))) - vec2(_GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(_GLF_IDENTITY(0.0, (0.0) / exp(0.0)), float(mat4x3(0.0, 1.0, 1.0, 1.0, cos(0.0), 1.0, 1.0, abs(1.0), 1.0, _GLF_IDENTITY(1.0, (1.0) - 0.0), 0.0, 0.0))), 0.0, 0.0)), _GLF_IDENTITY(_GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(-0.4) : 0.0)), clamp(_GLF_IDENTITY(0.0, max(0.0, 0.0)), _GLF_IDENTITY(0.0, max(0.0, 0.0)), _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-320.479)), bool(false))))))).y), 1.0, 0.0, 0.0, 1.0, 0.0, 0.0))), -16.37)))));
          do
           {
            ;
            if(_GLF_DEAD(false))
             return;
           }
          while(_GLF_WRAPPED_LOOP(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec4(false, false, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), (injectionSwitch.x > injectionSwitch.y))));
          if(_GLF_WRAPPED_IF_TRUE(true))
           {
            do
             {
              mat3(mat4x2(6378.6910, -171.934, _GLF_IDENTITY(-3.3, 1.0 * (-3.3)), -7.5, -20.38, 4.3, 5196.2308, _GLF_IDENTITY(_GLF_IDENTITY(-4.6, _GLF_IDENTITY(float(mat2(-4.6, 1.0, 1.0, 1.0)), _GLF_IDENTITY(_GLF_IDENTITY(float(mat2x4(float(mat2(-4.6, 1.0, 1.0, 1.0)), determinant(mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0)), 1.0, 0.0, 0.0, 1.0, 0.0, 1.0)), float(_GLF_IDENTITY(mat4(float(mat2x4(float(mat2(-4.6, 1.0, 1.0, 1.0)), determinant(mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0)), 1.0, 0.0, 0.0, 1.0, 0.0, 1.0)), 1.0, 1.0, 1.0, cos(0.0), 1.0, 1.0, sqrt(1.0), log(1.0), 0.0, 1.0, 0.0, exp(0.0), 1.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y)), (mat4(float(mat2x4(float(mat2(-4.6, 1.0, 1.0, 1.0)), determinant(mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0)), 1.0, 0.0, 0.0, 1.0, 0.0, 1.0)), 1.0, 1.0, 1.0, cos(0.0), 1.0, 1.0, sqrt(1.0), log(1.0), 0.0, 1.0, 0.0, exp(0.0), 1.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y))) - mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)))), float(mat4x3(float(mat2x4(float(mat2(-4.6, 1.0, 1.0, 1.0)), determinant(mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0)), 1.0, 0.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 1.0, 0.0, 1.0)), _GLF_IDENTITY(0.0, (0.0) + 0.0), 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0))))), mix(float(_GLF_FUZZED(1455.1932)), float(-4.6), bool(_GLF_TRUE(_GLF_IDENTITY(true, bool(bvec4(true, true, true, _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))))))), (injectionSwitch.x < injectionSwitch.y)))))));
              if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)))
               continue;
             }
            while(_GLF_WRAPPED_LOOP(false));
           }
          else
           {
            if(_GLF_DEAD(false))
             return;
           }
          _GLF_SWITCH_0_1v;
          if(_GLF_DEAD(false))
           return;
          for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
           {
            if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
             {
              if(_GLF_DEAD(false))
               return;
              if(_GLF_WRAPPED_IF_TRUE(true))
               {
                return;
               }
              else
               {
               }
             }
           }
          for(int _GLF_SWITCH_0_4v; true; _GLF_IDENTITY(uvec4(107988u, 136994u, 121241u, _GLF_IDENTITY(41548u, clamp(41548u, 41548u, _GLF_IDENTITY(_GLF_IDENTITY(41548u, _GLF_IDENTITY(clamp(_GLF_IDENTITY(41548u, ~ (_GLF_IDENTITY(~ (41548u), min(~ (41548u), _GLF_IDENTITY(~ (41548u), clamp(~ (41548u), ~ (41548u), ~ (41548u))))))), 41548u, 41548u), (0u | 0u) ^ (clamp(_GLF_IDENTITY(41548u, ~ (_GLF_IDENTITY(~ (41548u), min(~ (41548u), _GLF_IDENTITY(~ (41548u), clamp(~ (41548u), ~ (41548u), ~ (41548u))))))), 41548u, 41548u)))), (_GLF_IDENTITY(_GLF_IDENTITY(41548u, clamp(_GLF_IDENTITY(_GLF_IDENTITY(41548u, ~ _GLF_IDENTITY((~ (_GLF_IDENTITY(41548u, (0u | 0u) ^ (41548u)))), (_GLF_IDENTITY((~ (_GLF_IDENTITY(41548u, (0u | 0u) ^ (41548u)))), ((~ (_GLF_IDENTITY(41548u, (0u | 0u) ^ (41548u))))) * ((1u << _GLF_IDENTITY(uint(6u), uint(6u))) >> _GLF_IDENTITY(uint(6u), uint(6u))))) - (0u >> _GLF_IDENTITY(uint(1u), uint(1u))))), (_GLF_IDENTITY(_GLF_IDENTITY(41548u, ~ (~ (_GLF_IDENTITY(41548u, (0u | 0u) ^ (41548u))))), _GLF_IDENTITY(uint(uint(_GLF_IDENTITY(41548u, ~ (~ (_GLF_IDENTITY(41548u, (0u | 0u) ^ (41548u))))))), min(uint(uint(_GLF_IDENTITY(41548u, ~ (~ (_GLF_IDENTITY(41548u, (0u | 0u) ^ (41548u))))))), uint(uint(_GLF_IDENTITY(41548u, ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(41548u, (41548u) | (41548u)), (0u | 0u) ^ (41548u))))))))))) / 1u), 41548u, 41548u)), uint(uint(_GLF_IDENTITY(41548u, clamp(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(41548u, clamp(41548u, _GLF_IDENTITY(41548u, 0u ^ (41548u)), _GLF_IDENTITY(41548u, ~ (_GLF_IDENTITY(~ (41548u), (~ (41548u)) ^ 0u))))), ~ (~ (41548u))), (true ? _GLF_IDENTITY(41548u, ~ (~ (41548u))) : _GLF_FUZZED(workgroup_size))), 41548u, 41548u)))))) - 0u)))), (_GLF_IDENTITY(uvec4(107988u, 136994u, _GLF_IDENTITY(121241u, (_GLF_IDENTITY(121241u, max(121241u, 121241u))) << (79078u & 0u)), _GLF_IDENTITY(41548u, clamp(41548u, 41548u, _GLF_IDENTITY(_GLF_IDENTITY(41548u, clamp(_GLF_IDENTITY(41548u, ~ (_GLF_IDENTITY(~ (41548u), min(~ (41548u), _GLF_IDENTITY(~ (41548u), clamp(~ (41548u), ~ (41548u), ~ (41548u))))))), 41548u, 41548u)), (_GLF_IDENTITY(_GLF_IDENTITY(41548u, clamp(_GLF_IDENTITY(_GLF_IDENTITY(41548u, ~ (~ (_GLF_IDENTITY(41548u, _GLF_IDENTITY((0u | 0u) ^ (41548u), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY((0u | 0u) ^ (41548u), (false ? _GLF_FUZZED(workgroup_size) : (0u | 0u) ^ (41548u)))), (~ (_GLF_IDENTITY((0u | 0u) ^ (41548u), (false ? _GLF_FUZZED(workgroup_size) : (0u | 0u) ^ (41548u))))) | (~ (_GLF_IDENTITY((0u | 0u) ^ (41548u), (false ? _GLF_FUZZED(workgroup_size) : (0u | 0u) ^ (41548u)))))))))))), (_GLF_IDENTITY(_GLF_IDENTITY(41548u, ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(41548u, 0u ^ (41548u)), (0u | 0u) ^ (41548u))))), _GLF_IDENTITY(uint(uint(_GLF_IDENTITY(41548u, ~ (~ (_GLF_IDENTITY(41548u, (0u | 0u) ^ (41548u))))))), min(uint(uint(_GLF_IDENTITY(41548u, ~ _GLF_IDENTITY((~ (_GLF_IDENTITY(_GLF_IDENTITY(41548u, clamp(41548u, 41548u, 41548u)), _GLF_IDENTITY((0u | 0u), ((0u | 0u)) >> 0u) ^ (41548u)))), ~ (~ ((~ (_GLF_IDENTITY(_GLF_IDENTITY(41548u, clamp(41548u, 41548u, 41548u)), _GLF_IDENTITY((0u | 0u), ((0u | 0u)) >> 0u) ^ (41548u)))))))))), uint(uint(_GLF_IDENTITY(41548u, ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(41548u, 0u ^ (41548u)), (0u | 0u) ^ (41548u))))))))))) / 1u), 41548u, 41548u)), uint(uint(_GLF_IDENTITY(41548u, clamp(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(41548u, ~ (~ (41548u))), (true ? _GLF_IDENTITY(41548u, ~ (~ (41548u))) : _GLF_FUZZED(workgroup_size))), (_GLF_IDENTITY(_GLF_IDENTITY(41548u, ~ (~ (41548u))), (true ? _GLF_IDENTITY(41548u, ~ (~ (41548u))) : _GLF_FUZZED(workgroup_size)))) ^ 0u), 41548u, 41548u)))))) - 0u)))), uvec4(1u, 1u, 1u, 1u) * (uvec4(107988u, 136994u, 121241u, _GLF_IDENTITY(41548u, clamp(41548u, 41548u, _GLF_IDENTITY(_GLF_IDENTITY(41548u, clamp(_GLF_IDENTITY(41548u, ~ (_GLF_IDENTITY(~ (41548u), min(~ (41548u), _GLF_IDENTITY(~ (41548u), clamp(~ (41548u), ~ (41548u), ~ (41548u))))))), 41548u, 41548u)), (_GLF_IDENTITY(_GLF_IDENTITY(41548u, clamp(_GLF_IDENTITY(_GLF_IDENTITY(41548u, ~ (~ (_GLF_IDENTITY(41548u, (0u | 0u) ^ (41548u))))), (_GLF_IDENTITY(_GLF_IDENTITY(41548u, ~ (~ (_GLF_IDENTITY(41548u, (0u | 0u) ^ (41548u))))), _GLF_IDENTITY(uint(uint(_GLF_IDENTITY(41548u, ~ (~ (_GLF_IDENTITY(41548u, (0u | 0u) ^ (41548u))))))), min(uint(uint(_GLF_IDENTITY(41548u, ~ (~ (_GLF_IDENTITY(41548u, (0u | 0u) ^ (41548u))))))), uint(uint(_GLF_IDENTITY(41548u, ~ (~ (_GLF_IDENTITY(41548u, (0u | 0u) ^ (_GLF_IDENTITY(41548u, uint(uint(41548u)))))))))))))) / 1u), 41548u, 41548u)), uint(uint(_GLF_IDENTITY(41548u, clamp(_GLF_IDENTITY(_GLF_IDENTITY(41548u, ~ (~ (_GLF_IDENTITY(41548u, (_GLF_IDENTITY(41548u, 1u * (41548u))) << (0u | 0u))))), (_GLF_IDENTITY(true ? _GLF_IDENTITY(41548u, ~ (~ (41548u))) : _GLF_FUZZED(workgroup_size), ~ (~ (_GLF_IDENTITY(true ? _GLF_IDENTITY(41548u, ~ (~ (41548u))) : _GLF_FUZZED(workgroup_size), (_GLF_IDENTITY(true ? _GLF_IDENTITY(41548u, ~ (~ (41548u))) : _GLF_FUZZED(workgroup_size), (true ? _GLF_IDENTITY(41548u, ~ (~ (41548u))) : _GLF_FUZZED(workgroup_size)) * 1u)) << 0u)))))), 41548u, 41548u)))))) - 0u))))))) >> uvec4(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(_GLF_IDENTITY(0.0, (true ? _GLF_IDENTITY(0.0, max(0.0, 0.0)) : _GLF_FUZZED(86.33))), injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))))
           {
            if(_GLF_DEAD(false))
             return;
            if(_GLF_DEAD(false))
             continue;
            82.56;
            if(_GLF_DEAD(false))
             break;
            (mat3(8.9, 8.4, 6590.2228, 0.2, -8.8, -2.4, 1.3, -2.8, 453.701) , _GLF_IDENTITY(bvec3(false, false, false), bvec3(bvec3(bvec3(false, false, false)))));
            mat4x3 _GLF_SWITCH_0_5v;
            if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec4(false, true, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))
             return;
            if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(mix(float(_GLF_FUZZED((- -6.9))), float(injectionSwitch.x), bool(true)), (true ? _GLF_IDENTITY(mix(float(_GLF_FUZZED((- -6.9))), float(injectionSwitch.x), bool(_GLF_IDENTITY(true, ! (! (true))))), mix(float(mix(float(_GLF_FUZZED(_GLF_IDENTITY((- -6.9), min((- -6.9), (- -6.9))))), _GLF_IDENTITY(float(injectionSwitch.x), min(float(injectionSwitch.x), _GLF_IDENTITY(float(injectionSwitch.x), max(float(injectionSwitch.x), float(injectionSwitch.x))))), bool(true))), float(_GLF_FUZZED(-3.8)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) : _GLF_FUZZED(-7062.6078)))) > injectionSwitch.y))))
             return;
           }
          uvec2 _GLF_SWITCH_0_6v, _GLF_SWITCH_0_7v;
          if(_GLF_DEAD(false))
           {
            if(_GLF_WRAPPED_IF_TRUE(true))
             {
              if(_GLF_DEAD(false))
               return;
              return;
             }
            else
             {
             }
            if(_GLF_DEAD(false))
             return;
           }
          for(          _GLF_IDENTITY(mat3(mat3x2(-8.1, -2.9, _GLF_IDENTITY(2224.5417, max(_GLF_IDENTITY(2224.5417, (_GLF_IDENTITY(2224.5417, 1.0 * (2224.5417))) - 0.0), 2224.5417)), -173.688, 512.686, -7.2)), mat3(mat4(_GLF_IDENTITY(mat3(mat3x2(-8.1, -2.9, 2224.5417, -173.688, 512.686, _GLF_IDENTITY(_GLF_IDENTITY(-7.2, (true ? -7.2 : _GLF_FUZZED(-611.166))), clamp(_GLF_IDENTITY(-7.2, mix(float(-7.2), float(_GLF_FUZZED(-31.59)), bool(false))), -7.2, -7.2)))), (mat3(mat3x2(-8.1, -2.9, 2224.5417, -173.688, 512.686, -7.2))) / _GLF_IDENTITY(_GLF_IDENTITY(mat3(1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0), transpose(transpose(mat3(1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0)))), (_GLF_IDENTITY(mat3(1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0))), _GLF_IDENTITY(transpose(transpose(mat3(1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0))), mat3(mat3(transpose(transpose(mat3(1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0)))))))) - mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))))));
 (true ? true : false); ivec3(-22490, -6615, _GLF_IDENTITY(-54912, max(-54912, -54912))))
           {
            if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
             break;
            mat2x3 _GLF_SWITCH_0_8v[12], _GLF_SWITCH_0_9v;
            if(_GLF_DEAD(false))
             continue;
            if(_GLF_DEAD(false))
             break;
            if(_GLF_DEAD(false))
             break;
            if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(_GLF_IDENTITY(true, false || (true)), (injectionSwitch.x < injectionSwitch.y))))
             {
              if(_GLF_DEAD(false))
               continue;
              _GLF_SWITCH_0_9v;
             }
            else
             {
             }
            if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true), (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))) && true), _GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, ! (! (false))))), true), bvec3(bvec3(bvec3(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))))))) && true), false, _GLF_IDENTITY(true, ! (! (true)))))))), (bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(_GLF_IDENTITY(false, bool(bool(false))), (injectionSwitch.x > injectionSwitch.y))) && true), false, true), bvec3(bvec3(bvec3(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(1.2) : _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(-6.4)), bool(false)))) - 0.0))))), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true), false, true)))))) && true))))
             return;
            ivec4 _GLF_SWITCH_0_10v, _GLF_SWITCH_0_11v;
            if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(mat3x4(injectionSwitch.y, 0.0, 0.0, cos(0.0), 0.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, cos(0.0), 1.0, exp(0.0), 1.0)))))))
             break;
            if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
             {
              if(_GLF_DEAD(false))
               continue;
              return;
             }
            if(_GLF_DEAD(false))
             break;
            ivec2 _GLF_SWITCH_0_12v, _GLF_SWITCH_0_13v, _GLF_SWITCH_0_14v[22];
            if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))
             {
              if(_GLF_DEAD(false))
               return;
              break;
             }
            transpose(mat2x4(7870.5722, 7.7, -897.486, -7.9, 6.0, -0.7, -8.3, _GLF_IDENTITY(654.161, float(mat2x4(654.161, 0.0, tan(0.0), 1.0, 0.0, 0.0, 0.0, 1.0)))));
            if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
             {
              if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
               continue;
              continue;
             }
            if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
             continue;
            ivec2 _GLF_SWITCH_0_15v, _GLF_SWITCH_0_16v;
           }
         }
         if(_GLF_DEAD(false))
          continue;
         case 0:
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         case 28:
         case 83:
         if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(_GLF_IDENTITY(true, bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(true, _GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(true), bool(bool(bool(true))))), (bool(_GLF_IDENTITY(bool(true), bool(bool(bool(true)))))) && true), bool(bvec3(_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(true), bool(bool(bool(true))))), (bool(_GLF_IDENTITY(bool(true), bool(bool(bool(true)))))) && true), true, false)))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(true, false || (true)), _GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(true), bool(bool(bool(true)))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(bool(true), bool(bool(bool(true))))))), (bool(_GLF_IDENTITY(bool(true), bool(bool(bool(true)))))) && true))), ! (! (! (_GLF_IDENTITY(true, _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(true), bool(bool(bool(true))))), (bool(_GLF_IDENTITY(bool(true), bool(bool(bool(true)))))) && true)))))))), false))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(true, bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(true, _GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(true), bool(bool(bool(true))))), (bool(_GLF_IDENTITY(bool(true), bool(bool(bool(true)))))) && true), (_GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(true), bool(bool(bool(true))))), (bool(_GLF_IDENTITY(bool(true), bool(bool(bool(true)))))) && true), (_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(true), true && (bool(true))), bool(bool(bool(true))))), (bool(_GLF_IDENTITY(bool(true), bool(bool(_GLF_IDENTITY(bool(true), (bool(true)) && true)))))) && true)) || false)) && true)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(true, _GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(true), bool(bool(bool(true))))), (bool(_GLF_IDENTITY(bool(true), bool(bool(bool(true)))))) && true), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(true), bool(bool(bool(true))))), true && (_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(true), bool(bool(bool(true))))), ! (! (bool(_GLF_IDENTITY(bool(true), bool(bool(bool(true)))))))))), (bool(_GLF_IDENTITY(bool(true), bool(bool(bool(true)))))) && true))))), ! (! (! (_GLF_IDENTITY(true, _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(true), bool(bool(bool(true))))), (bool(_GLF_IDENTITY(bool(true), bool(bool(bool(true)))))) && true)))))))), false)))), bool(bvec3(! (_GLF_IDENTITY(true, bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(true, _GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(true), bool(bool(bool(true)))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(bool(true), true && (_GLF_IDENTITY(bool(true), ! (_GLF_IDENTITY(! (bool(true)), (! (bool(true))) || false))))), bool(bool(bool(_GLF_IDENTITY(true, false || (true)))))))))), (bool(_GLF_IDENTITY(bool(true), bool(bool(_GLF_IDENTITY(bool(true), true && (_GLF_IDENTITY(bool(true), bool(bool(bool(true))))))))))) && true)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(true, _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(true), bool(bool(bool(true))))), (bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(true, bool(_GLF_IDENTITY(bvec3(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true), bvec3(bvec4(bvec3(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true), false)))))), bool(_GLF_IDENTITY(bool(bool(true)), (bool(bool(true))) && true))))) && true))), ! (! (! (_GLF_IDENTITY(true, _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(true), _GLF_IDENTITY(bool(bool(bool(true))), ! (! (bool(bool(bool(true)))))))), (bool(_GLF_IDENTITY(bool(true), bool(bool(bool(true)))))) && true)))))))), false)))), true, false)))))))
          {
           if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, true && (false)), (injectionSwitch.x > injectionSwitch.y))))
            return;
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            return;
           subgroupAll(false);
          }
         else
          {
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(false))
              break;
             return;
            }
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            break;
          }
         if(_GLF_DEAD(false))
          return;
         break;
         if(_GLF_DEAD(false))
          return;
         if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, float(mat4x3(injectionSwitch.y, 0.0, sqrt(1.0), 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(477.564)), bool(false))), sin(0.0), 0.0)))))))), _GLF_IDENTITY(bool(bvec3(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).y))), false, true)), _GLF_IDENTITY((bool(bvec3(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), false, true))), ! (_GLF_IDENTITY(! ((bool(bvec3(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), false, true)))), bool(bvec2(! ((bool(bvec3(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), false, true)))), true))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-57.26)), float(injectionSwitch.y), bool(true)))))), ! (! (_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-57.26)), _GLF_IDENTITY(float(injectionSwitch.y), (true ? float(injectionSwitch.y) : _GLF_FUZZED(7.1))), bool(true)))))), ! (! (_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))) && true)) || false))
          {
           if(_GLF_DEAD(false))
            return;
          }
         else
          {
           if(_GLF_DEAD(false))
            return;
           if(_GLF_DEAD(false))
            {
             for(int _injected_loop_counter = (((_GLF_IDENTITY((1 << _GLF_IDENTITY(int(6), _GLF_IDENTITY(int(_GLF_IDENTITY(6, (6) >> 0)), (int(6)) | (int(6))))), ((1 << _GLF_IDENTITY(int(6), _GLF_IDENTITY(int(_GLF_IDENTITY(6, (6) >> 0)), (int(6)) | (int(6)))))) | ((1 << _GLF_IDENTITY(int(6), _GLF_IDENTITY(int(_GLF_IDENTITY(6, (6) >> 0)), (int(6)) | (int(6))))))) >> _GLF_IDENTITY(int(6), int(_GLF_IDENTITY(6, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(6, 0 | (6))), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(~ (_GLF_IDENTITY(6, 0 | (6))), 0 + (~ (_GLF_IDENTITY(6, 0 | (6))))) : _GLF_FUZZED(_injected_loop_counter)))))))) << _GLF_IDENTITY(int(_GLF_IDENTITY(4, clamp(4, 4, 4))), _GLF_IDENTITY(int(4), 0 + (_GLF_IDENTITY(int(4), (_GLF_IDENTITY(int(4), (int(4)) << 0)) >> 0))))) >> _GLF_IDENTITY(int(4), int(4))); _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
              {
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                continue;
               for(int _injected_loop_counter = int(_GLF_ZERO(0.0, injectionSwitch.x)); _GLF_WRAPPED_LOOP(_injected_loop_counter != int(_GLF_ONE(1.0, injectionSwitch.y))); _injected_loop_counter ++)
                {
                 return;
                 if(_GLF_DEAD(false))
                  {
                   if(_GLF_DEAD(false))
                    continue;
                   return;
                  }
                }
              }
             if(_GLF_DEAD(false))
              break;
             if(_GLF_DEAD(false))
              return;
             if(_GLF_DEAD(false))
              break;
            }
           if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec4(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (! (bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), false, false, false))))))))
            return;
          }
         default:
         if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
          return;
         1;
        }
      }
     else
      {
      }
    }
  }
 else
  {
   atomicStore(buf[next_virtual_gid], _GLF_IDENTITY(uint(2), max(uint(2), uint(2))), 4, 64, 4);
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     do
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
        continue;
       return;
      }
     while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(5556.4983)), float(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x))), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) > injectionSwitch.y))));
    }
   if(_GLF_DEAD(false))
    return;
   subgroupAll(_GLF_IDENTITY(_GLF_IDENTITY(true, (true) || false), ! (! (_GLF_IDENTITY(true, true && (true))))));
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(2163.3547)), _GLF_IDENTITY(bool(false), ! (! (_GLF_IDENTITY(bool(false), false || (bool(false)))))))))) > injectionSwitch.y))))
  {
   if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
    {
     if(_GLF_DEAD(false))
      return;
    }
   else
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
    }
   if(_GLF_DEAD(false))
    return;
   for(int _injected_loop_counter = int(_GLF_ZERO(0.0, injectionSwitch.x)); _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter, (_GLF_IDENTITY(_injected_loop_counter, (_injected_loop_counter) - 0)) | (_GLF_IDENTITY(_injected_loop_counter, int(_GLF_IDENTITY(ivec2(_injected_loop_counter, 0), (_GLF_IDENTITY(ivec2(_injected_loop_counter, 0), max(_GLF_IDENTITY(ivec2(_injected_loop_counter, 0), (ivec2(_injected_loop_counter, 0)) | ivec2(0, 0)), ivec2(_injected_loop_counter, 0)))) | (ivec2(_GLF_IDENTITY(_injected_loop_counter, ~ (~ (_injected_loop_counter))), 0))))))) != 1); _injected_loop_counter ++)
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && _GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, true && (true))))))
      break;
     switch(_GLF_IDENTITY(_GLF_SWITCH(0), (_GLF_SWITCH(0)) | 0))
      {
       case 88:
       vec4 _GLF_SWITCH_1_0v, _GLF_SWITCH_1_1v;
       case 0:
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        break;
       case 90:
       if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false))))
        {
         if(_GLF_DEAD(false))
          return;
         break;
        }
       return;
       break;
       case 13:
       if(_GLF_DEAD(false))
        continue;
       if(_GLF_DEAD(false))
        break;
       while(_GLF_IDENTITY((equal(ivec2(61136, _GLF_IDENTITY(-1455, (-1455) / 1)), (_GLF_IDENTITY(_GLF_IDENTITY(ivec2(_GLF_IDENTITY(-76528, (-76528) << 0), -40664), min(ivec2(_GLF_IDENTITY(-76528, (-76528) << 0), -40664), ivec2(_GLF_IDENTITY(-76528, (-76528) << 0), -40664))), (_GLF_IDENTITY(_GLF_IDENTITY(ivec2(_GLF_IDENTITY(-76528, (-76528) << 0), -40664), min(ivec2(_GLF_IDENTITY(-76528, (-76528) << 0), -40664), ivec2(_GLF_IDENTITY(-76528, (-76528) << 0), -40664))), (_GLF_IDENTITY(ivec2(_GLF_IDENTITY(-76528, (-76528) << 0), -40664), min(ivec2(_GLF_IDENTITY(-76528, (-76528) << 0), -40664), ivec2(_GLF_IDENTITY(-76528, (-76528) << 0), -40664)))) / ivec2(1, 1))) << ivec2(0, 0)) % ivec2(-17900, -21154))) == _GLF_IDENTITY(bvec2(false, true), bvec2(bvec3(bvec2(false, true), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), ((equal(ivec2(61136, -1455), _GLF_IDENTITY((ivec2(_GLF_IDENTITY(-76528, min(-76528, _GLF_IDENTITY(-76528, (-76528) | (-76528)))), -40664) % _GLF_IDENTITY(ivec2(_GLF_IDENTITY(-17900, (-17900) >> (0 >> _GLF_IDENTITY(int(1), _GLF_IDENTITY(int(1), int(ivec4(int(1), 0, 1, 0)))))), -21154), ivec2(1, 1) * (ivec2(-17900, _GLF_IDENTITY(-21154, (_GLF_IDENTITY(-21154, (-21154) + 0)) ^ int(_GLF_ZERO(0.0, injectionSwitch.x))))))), (false ? _GLF_FUZZED(ivec2(40815, 21579)) : _GLF_IDENTITY((ivec2(_GLF_IDENTITY(-76528, min(-76528, _GLF_IDENTITY(-76528, _GLF_IDENTITY((-76528), ((-76528)) * 1) | (-76528)))), -40664) % _GLF_IDENTITY(ivec2(-17900, -21154), ivec2(1, 1) * (ivec2(-17900, -21154)))), ((ivec2(_GLF_IDENTITY(-76528, min(-76528, _GLF_IDENTITY(-76528, (-76528) | (-76528)))), -40664) % _GLF_IDENTITY(ivec2(-17900, -21154), ivec2(1, 1) * (ivec2(_GLF_IDENTITY(-17900, (-17900) / 1), -21154))))) | ((ivec2(_GLF_IDENTITY(-76528, min(-76528, _GLF_IDENTITY(-76528, (-76528) | (-76528)))), -40664) % _GLF_IDENTITY(ivec2(-17900, -21154), ivec2(1, 1) * (ivec2(-17900, -21154))))))))) == bvec2(false, true))) || false))
        {
         if(_GLF_DEAD(false))
          continue;
         sign(ivec3(-95893, -60518, 51699));
         _GLF_IDENTITY(isnan(vec2(7635.0132, _GLF_IDENTITY(707.806, (707.806) / 1.0))), bvec2(bvec4(isnan(vec2(7635.0132, 707.806)), false, _GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec4(false, false, true, true)))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))));
         if(_GLF_DEAD(false))
          continue;
         if(_GLF_DEAD(false))
          break;
        }
       case 84:
       vec3 _GLF_SWITCH_1_2v[72], _GLF_SWITCH_1_3v[6], _GLF_SWITCH_1_4v;
       default:
       if(_GLF_DEAD(_GLF_IDENTITY(false, false || _GLF_IDENTITY((false), (_GLF_IDENTITY((false), ((false)) || false)) && true))))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            return;
           break;
          }
         continue;
        }
       do
        {
         1;
         if(_GLF_DEAD(false))
          return;
        }
       while(_GLF_WRAPPED_LOOP(false));
       if(_GLF_DEAD(false))
        continue;
      }
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, true && (false))) && true)))
    return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) && true)) || false)))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bool(injectionSwitch.x > injectionSwitch.y))))))))))))
  return;
 for(int _injected_loop_counter = (_GLF_IDENTITY((_GLF_IDENTITY(1, (1) | 0) << _GLF_IDENTITY(int(6), _GLF_IDENTITY(int(6), _GLF_IDENTITY((_GLF_IDENTITY(int(6), (false ? _GLF_FUZZED(-51103) : int(6)))), ~ (~ ((_GLF_IDENTITY(int(6), (false ? _GLF_FUZZED(-51103) : int(6))))))) >> 0))), (_GLF_IDENTITY((_GLF_IDENTITY(1, (1) | 0) << _GLF_IDENTITY(int(6), _GLF_IDENTITY(int(6), _GLF_IDENTITY((_GLF_IDENTITY(int(6), (false ? _GLF_FUZZED(-51103) : int(6)))), ~ (~ ((_GLF_IDENTITY(int(6), (false ? _GLF_FUZZED(-51103) : int(6))))))) >> 0))), 0 | ((_GLF_IDENTITY(1, (1) | 0) << _GLF_IDENTITY(int(6), _GLF_IDENTITY(int(6), _GLF_IDENTITY((_GLF_IDENTITY(int(6), (false ? _GLF_FUZZED(-51103) : int(6)))), ~ (~ ((_GLF_IDENTITY(int(6), (false ? _GLF_FUZZED(-51103) : int(6))))))) >> 0)))))) / 1) >> _GLF_IDENTITY(int(6), int(6))); _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
  {
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) && true), (injectionSwitch.x > injectionSwitch.y))))
    return;
  }
}
