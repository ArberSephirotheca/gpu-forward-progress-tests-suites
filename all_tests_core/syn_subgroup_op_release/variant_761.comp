#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


struct _GLF_struct_24 {
 uvec2 _f0;
} ;

struct _GLF_struct_25 {
 ivec2 _f0;
 uvec4 _f1;
 _GLF_struct_24 _f2;
 vec3 _f3;
} ;

struct _GLF_struct_22 {
 bvec2 _f0;
 vec3 _f1;
 vec4 _f2;
 mat4x3 _f3;
 bvec3 _f4;
 mat4x2 _f5;
} ;

struct _GLF_struct_21 {
 mat4 _f0;
 mat2x3 _f1;
 mat2x4 _f2;
 mat4x2 _f3;
 mat4x3 _f4;
 bvec3 _f5;
} ;

struct _GLF_struct_20 {
 mat3x4 _f0;
 ivec3 _f1;
 uvec2 _f2;
 int _f3;
 int _f4;
 mat2x4 _f5;
 mat3x4 _f6;
} ;

struct _GLF_struct_19 {
 bool _f0;
} ;

struct _GLF_struct_23 {
 _GLF_struct_19 _f0;
 bvec3 _f1;
 _GLF_struct_20 _f2;
 uint _f3;
 _GLF_struct_21 _f4;
 _GLF_struct_22 _f5;
} ;

struct _GLF_struct_17 {
 int _f0;
} ;

struct _GLF_struct_16 {
 mat3x2 _f0;
} ;

struct _GLF_struct_18 {
 _GLF_struct_16 _f0;
 _GLF_struct_17 _f1;
} ;

struct _GLF_struct_15 {
 bool _f0;
 uvec4 _f1;
} ;

struct _GLF_struct_13 {
 vec3 _f0;
 uint _f1;
 mat3x2 _f2;
 bvec3 _f3;
 bvec3 _f4;
 ivec2 _f5;
} ;

struct _GLF_struct_14 {
 vec3 _f0;
 mat2x4 _f1;
 _GLF_struct_13 _f2;
 int _f3;
} ;

struct _GLF_struct_11 {
 mat4x2 _f0;
 vec2 _f1;
 bvec4 _f2;
 mat4x2 _f3;
 mat2 _f4;
} ;

struct _GLF_struct_12 {
 ivec4 _f0;
 float _f1;
 mat4x3 _f2;
 _GLF_struct_11 _f3;
 ivec2 _f4;
} ;

struct _GLF_struct_26 {
 _GLF_struct_12 _f0;
 uint workgroup_base;
 _GLF_struct_14 _f1;
 _GLF_struct_15 _f2;
 _GLF_struct_18 _f3;
 _GLF_struct_23 _f4;
 uint _f5;
 _GLF_struct_25 _f6;
} ;

struct _GLF_struct_8 {
 vec2 _f0;
 mat2 _f1;
 mat3x4 _f2;
 mat3x2 _f3;
 uvec3 _f4;
 vec2 _f5;
} ;

struct _GLF_struct_9 {
 uint subgroup_size;
 _GLF_struct_8 _f0;
 mat3x4 _f1;
} ;

struct _GLF_struct_6 {
 mat2x4 _f0;
 int _f1;
} ;

struct _GLF_struct_7 {
 vec3 _f0;
 mat2 _f1;
 _GLF_struct_6 _f2;
 mat2x4 _f3;
} ;

struct _GLF_struct_10 {
 _GLF_struct_7 _f0;
 _GLF_struct_9 _f1;
} ;

struct _GLF_struct_3 {
 bvec4 _f0;
 mat3 _f1;
 float _f2;
 float _f3;
 mat4x2 _f4;
 bvec4 _f5;
} ;

struct _GLF_struct_2 {
 mat2x4 _f0;
 mat2 _f1;
 bool _f2;
 mat4x2 _f3;
 uvec2 _f4;
 bvec4 _f5;
} ;

struct _GLF_struct_1 {
 bool _f0;
 uvec4 _f1;
} ;

struct _GLF_struct_0 {
 mat3x4 _f0;
 uvec2 _f1;
 uvec4 _f2;
 mat4x3 _f3;
} ;

struct _GLF_struct_4 {
 mat3x4 _f0;
 _GLF_struct_0 _f1;
 _GLF_struct_1 _f2;
 ivec2 _f3;
 _GLF_struct_2 _f4;
 _GLF_struct_3 _f5;
 bvec2 _f6;
} ;

struct _GLF_struct_5 {
 _GLF_struct_4 _f0;
 int _f1;
 uint subgroup_id;
} ;

layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(false))
  barrier();
 _GLF_struct_5 _GLF_struct_replacement_5 = _GLF_struct_5(_GLF_struct_4(mat3x4(1.0), _GLF_struct_0(mat3x4(1.0), uvec2(1u), uvec4(1u), mat4x3(_GLF_IDENTITY(1.0, (1.0) / 1.0))), _GLF_struct_1(_GLF_IDENTITY(_GLF_IDENTITY(true, _GLF_IDENTITY((true) || _GLF_IDENTITY(false, ! (! (false))), _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY((true) || false, bool(bvec3((true) || false, false, true))), true)), ! (! (bool(bvec2(_GLF_IDENTITY((_GLF_IDENTITY(true, (_GLF_IDENTITY(true, bool(bvec4(true, false, false, false)))) && true)) || false, bool(bvec3(_GLF_IDENTITY((true), ! (! (_GLF_IDENTITY((true), bool(bvec2((true), true)))))) || false, false, true))), true))))), false || (_GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY((true) || false, bool(bvec3((true) || false, false, true))), true)), ! (! (bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY((true) || false, bool(bvec3((true) || false, false, true))), _GLF_IDENTITY(true, bool(_GLF_IDENTITY(bvec2(true, true), bvec2(bvec4(bvec2(true, true), true, true)))))), _GLF_IDENTITY(bvec2(bvec4(bvec2(_GLF_IDENTITY((true) || false, bool(bvec3((true) || false, false, true))), _GLF_IDENTITY(true, bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(true, true), bvec2(bvec4(bvec2(true, true), true, true))), _GLF_IDENTITY(bvec2(bvec4(_GLF_IDENTITY(bvec2(true, true), bvec2(bvec4(bvec2(true, true), true, true))), true, false)), bvec2(bvec2(bvec2(bvec4(_GLF_IDENTITY(bvec2(true, true), bvec2(bvec4(bvec2(true, true), true, true))), true, false))))))))), true, _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).y)))), bvec2(bvec4(bvec2(bvec4(bvec2(_GLF_IDENTITY((true) || false, bool(bvec3((true) || false, false, true))), _GLF_IDENTITY(true, bool(_GLF_IDENTITY(bvec2(true, true), bvec2(bvec4(bvec2(true, true), true, true)))))), true, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x)) > injectionSwitch.y)))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)))))))))))), bool(bool(_GLF_IDENTITY(true, _GLF_IDENTITY((true) || _GLF_IDENTITY(false, ! (! (false))), _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY((true) || false, bool(bvec3((true) || false, false, true))), true)), ! (! (bool(bvec2(_GLF_IDENTITY((_GLF_IDENTITY(true, (_GLF_IDENTITY(true, bool(bvec4(true, false, false, false)))) && true)) || false, bool(bvec3(_GLF_IDENTITY((true), ! (! (_GLF_IDENTITY((true), bool(bvec2((true), true)))))) || false, false, true))), true))))), false || (_GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY((true) || false, bool(bvec3((true) || false, false, true))), true)), ! (! (bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY((true) || false, bool(bvec3((true) || false, false, true))), _GLF_IDENTITY(true, bool(_GLF_IDENTITY(bvec2(true, true), bvec2(bvec4(bvec2(true, true), true, true)))))), _GLF_IDENTITY(bvec2(bvec4(bvec2(_GLF_IDENTITY((true) || false, bool(bvec3((true) || false, false, true))), _GLF_IDENTITY(true, bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(true, true), bvec2(bvec4(bvec2(true, true), true, true))), _GLF_IDENTITY(bvec2(bvec4(_GLF_IDENTITY(bvec2(true, true), bvec2(bvec4(bvec2(true, true), true, true))), true, false)), bvec2(bvec2(bvec2(bvec4(_GLF_IDENTITY(bvec2(true, true), bvec2(bvec4(bvec2(true, true), true, true))), true, false))))))))), true, _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).y)))), bvec2(bvec4(bvec2(bvec4(bvec2(_GLF_IDENTITY((true) || false, bool(bvec3((true) || false, false, true))), _GLF_IDENTITY(true, bool(_GLF_IDENTITY(bvec2(true, true), bvec2(bvec4(bvec2(true, true), true, true)))))), true, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x)) > injectionSwitch.y)))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))))))))))))))), _GLF_IDENTITY(uvec4(_GLF_IDENTITY(1u, min(1u, 1u))), uvec4(0u, 0u, 0u, 0u) ^ (uvec4(_GLF_IDENTITY(1u, min(1u, 1u)))))), _GLF_IDENTITY(ivec2(1), (_GLF_IDENTITY(ivec2(1), ivec2(1, 1) * (ivec2(1)))) ^ ivec2(0, 0)), _GLF_struct_2(mat2x4(_GLF_IDENTITY(_GLF_IDENTITY(1.0, max(1.0, _GLF_IDENTITY(1.0, max(1.0, 1.0)))), (_GLF_IDENTITY(1.0, max(1.0, _GLF_IDENTITY(1.0, _GLF_IDENTITY(max(1.0, 1.0), max(max(1.0, 1.0), max(1.0, 1.0))))))) - 0.0)), _GLF_IDENTITY(mat2(1.0), mat2(mat4x2(_GLF_IDENTITY(mat2(1.0), (true ? mat2(1.0) : _GLF_FUZZED(mat2(1.2, 60.11, 6.7, 7752.8188))))))), true, mat4x2(1.0), uvec2(1u), bvec4(true)), _GLF_struct_3(bvec4(true), mat3(_GLF_IDENTITY(1.0, (1.0) * 1.0)), 1.0, 1.0, mat4x2(1.0), bvec4(true)), bvec2(true)), _GLF_IDENTITY(1, (1) | (1)), gl_SubgroupID);
 if(_GLF_DEAD(false))
  barrier();
 _GLF_struct_10 _GLF_struct_replacement_10 = _GLF_struct_10(_GLF_struct_7(vec3(1.0), mat2(1.0), _GLF_struct_6(mat2x4(1.0), _GLF_IDENTITY(1, 0 + (1))), mat2x4(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)))), _GLF_struct_9(gl_SubgroupSize, _GLF_struct_8(_GLF_IDENTITY(vec2(1.0), clamp(vec2(1.0), vec2(1.0), vec2(1.0))), mat2(1.0), mat3x4(1.0), mat3x2(1.0), _GLF_IDENTITY(_GLF_IDENTITY(uvec3(1u), _GLF_IDENTITY((uvec3(1u)) | ((uvec3(0u, 0u, 0u) << _GLF_IDENTITY(_GLF_IDENTITY(uvec3(4u), uvec3(4u)), _GLF_IDENTITY(uvec3(0u, 0u, 0u) ^ (_GLF_IDENTITY(uvec3(4u), uvec3(4u))), (uvec3(0u, 0u, 0u) ^ (_GLF_IDENTITY(uvec3(4u), uvec3(4u)))) << uvec3(0u, 0u, 0u)))) >> _GLF_IDENTITY(_GLF_IDENTITY(uvec3(2u), (_GLF_IDENTITY(_GLF_IDENTITY(uvec3(2u), (uvec3(0u, 0u, 0u) ^ uvec3(0u, 0u, 0u)) ^ (uvec3(2u))), clamp(uvec3(2u), uvec3(2u), uvec3(2u)))) << uvec3(0u, 0u, 0u)), uvec3(_GLF_IDENTITY(2u, (2u) - 0u)))), max((uvec3(1u)) | ((uvec3(_GLF_IDENTITY(0u, min(0u, 0u)), 0u, 0u) << _GLF_IDENTITY(uvec3(4u), uvec3(4u))) >> _GLF_IDENTITY(_GLF_IDENTITY(uvec3(2u), max(uvec3(2u), uvec3(2u))), uvec3(2u))), (uvec3(1u)) | ((uvec3(0u, 0u, 0u) << _GLF_IDENTITY(uvec3(4u), uvec3(4u))) >> _GLF_IDENTITY(uvec3(2u), uvec3(2u)))))), (_GLF_IDENTITY(_GLF_IDENTITY(uvec3(1u), _GLF_IDENTITY((uvec3(1u)) | ((uvec3(0u, 0u, 0u) << _GLF_IDENTITY(_GLF_IDENTITY(uvec3(4u), uvec3(4u)), uvec3(0u, 0u, 0u) ^ (_GLF_IDENTITY(uvec3(4u), uvec3(4u))))) >> _GLF_IDENTITY(_GLF_IDENTITY(uvec3(2u), (_GLF_IDENTITY(uvec3(2u), clamp(uvec3(2u), uvec3(2u), uvec3(2u)))) << uvec3(0u, 0u, 0u)), uvec3(_GLF_IDENTITY(2u, (2u) - 0u)))), max((uvec3(1u)) | (_GLF_IDENTITY((uvec3(0u, 0u, 0u) << _GLF_IDENTITY(uvec3(4u), uvec3(4u))), ((uvec3(0u, 0u, 0u) << _GLF_IDENTITY(uvec3(4u), uvec3(4u)))) | (_GLF_IDENTITY((uvec3(0u, 0u, 0u) << _GLF_IDENTITY(uvec3(4u), uvec3(4u))), uvec3(uvec3((uvec3(0u, 0u, 0u) << _GLF_IDENTITY(uvec3(4u), uvec3(4u)))))))) >> _GLF_IDENTITY(_GLF_IDENTITY(uvec3(2u), max(uvec3(2u), _GLF_IDENTITY(uvec3(2u), min(uvec3(2u), _GLF_IDENTITY(uvec3(2u), ~ (~ (uvec3(2u)))))))), uvec3(2u))), (uvec3(1u)) | ((uvec3(0u, 0u, 0u) << _GLF_IDENTITY(uvec3(4u), uvec3(4u))) >> _GLF_IDENTITY(uvec3(2u), uvec3(2u)))))), (_GLF_IDENTITY(uvec3(1u), _GLF_IDENTITY((uvec3(1u)) | ((uvec3(0u, 0u, 0u) << _GLF_IDENTITY(_GLF_IDENTITY(uvec3(4u), uvec3(4u)), uvec3(0u, 0u, 0u) ^ (_GLF_IDENTITY(uvec3(4u), uvec3(4u))))) >> _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(uvec3(2u), (_GLF_IDENTITY(uvec3(2u), clamp(uvec3(2u), uvec3(2u), uvec3(2u)))) << uvec3(0u, 0u, 0u)), (_GLF_IDENTITY(_GLF_IDENTITY(uvec3(2u), (_GLF_IDENTITY(uvec3(2u), clamp(uvec3(2u), uvec3(2u), uvec3(2u)))) << uvec3(0u, 0u, 0u)), (_GLF_IDENTITY(uvec3(2u), (_GLF_IDENTITY(uvec3(2u), clamp(uvec3(2u), uvec3(2u), uvec3(2u)))) << uvec3(0u, 0u, 0u))) | (_GLF_IDENTITY(uvec3(2u), (_GLF_IDENTITY(uvec3(2u), clamp(uvec3(2u), uvec3(2u), uvec3(2u)))) << uvec3(0u, 0u, 0u))))) | (_GLF_IDENTITY(uvec3(2u), (_GLF_IDENTITY(uvec3(2u), clamp(uvec3(2u), uvec3(2u), uvec3(2u)))) << uvec3(0u, 0u, 0u)))), uvec3(_GLF_IDENTITY(2u, (2u) - 0u)))), max((uvec3(1u)) | ((uvec3(0u, 0u, 0u) << _GLF_IDENTITY(_GLF_IDENTITY(uvec3(4u), uvec3(4u)), (_GLF_IDENTITY(uvec3(4u), uvec3(4u))) | (_GLF_IDENTITY(uvec3(4u), uvec3(4u))))) >> _GLF_IDENTITY(_GLF_IDENTITY(uvec3(2u), max(uvec3(2u), uvec3(2u))), uvec3(2u))), (uvec3(1u)) | ((uvec3(0u, 0u, _GLF_IDENTITY(0u, uint(_GLF_IDENTITY(uvec4(0u, 1u, 1u, 0u), (_GLF_IDENTITY(uvec4(0u, 1u, 1u, 0u), (uvec4(0u, 1u, 1u, 0u)) << uvec4(0u, 0u, 0u, 0u))) | (uvec4(0u, 1u, 1u, 0u)))))) << _GLF_IDENTITY(uvec3(4u), uvec3(4u))) >> _GLF_IDENTITY(uvec3(2u), uvec3(2u))))))) | (_GLF_IDENTITY(uvec3(1u), _GLF_IDENTITY(_GLF_IDENTITY((uvec3(1u)) | ((uvec3(0u, 0u, 0u) << _GLF_IDENTITY(_GLF_IDENTITY(uvec3(4u), uvec3(4u)), uvec3(0u, 0u, 0u) ^ (_GLF_IDENTITY(uvec3(4u), uvec3(4u))))) >> _GLF_IDENTITY(_GLF_IDENTITY(uvec3(2u), (_GLF_IDENTITY(uvec3(2u), clamp(uvec3(2u), uvec3(2u), uvec3(2u)))) << uvec3(0u, 0u, 0u)), uvec3(_GLF_IDENTITY(2u, (2u) - 0u)))), max((uvec3(1u)) | ((uvec3(0u, 0u, 0u) << _GLF_IDENTITY(uvec3(4u), uvec3(4u))) >> _GLF_IDENTITY(_GLF_IDENTITY(uvec3(2u), max(uvec3(2u), uvec3(2u))), uvec3(2u))), (uvec3(1u)) | ((uvec3(0u, 0u, 0u) << _GLF_IDENTITY(uvec3(4u), uvec3(4u))) >> _GLF_IDENTITY(uvec3(2u), uvec3(2u))))), (true ? _GLF_IDENTITY(_GLF_IDENTITY((uvec3(1u)) | ((uvec3(0u, 0u, 0u) << _GLF_IDENTITY(_GLF_IDENTITY(uvec3(4u), uvec3(4u)), uvec3(0u, 0u, 0u) ^ (_GLF_IDENTITY(uvec3(4u), uvec3(4u))))) >> _GLF_IDENTITY(_GLF_IDENTITY(uvec3(2u), (_GLF_IDENTITY(uvec3(2u), clamp(uvec3(2u), uvec3(2u), uvec3(2u)))) << uvec3(0u, 0u, 0u)), uvec3(_GLF_IDENTITY(2u, (2u) - 0u)))), max((uvec3(1u)) | ((uvec3(0u, 0u, 0u) << _GLF_IDENTITY(uvec3(4u), uvec3(4u))) >> _GLF_IDENTITY(_GLF_IDENTITY(uvec3(2u), max(uvec3(2u), uvec3(2u))), uvec3(2u))), (uvec3(1u)) | ((uvec3(0u, 0u, 0u) << _GLF_IDENTITY(uvec3(4u), uvec3(4u))) >> _GLF_IDENTITY(uvec3(2u), uvec3(2u))))), uvec3(0u, 0u, 0u) ^ (_GLF_IDENTITY(_GLF_IDENTITY((uvec3(1u)) | ((uvec3(0u, 0u, 0u) << _GLF_IDENTITY(_GLF_IDENTITY(uvec3(4u), uvec3(4u)), uvec3(0u, 0u, 0u) ^ (_GLF_IDENTITY(uvec3(4u), uvec3(4u))))) >> _GLF_IDENTITY(_GLF_IDENTITY(uvec3(2u), (_GLF_IDENTITY(uvec3(2u), clamp(uvec3(2u), uvec3(2u), uvec3(2u)))) << uvec3(0u, 0u, 0u)), uvec3(_GLF_IDENTITY(2u, (2u) - 0u)))), max((uvec3(1u)) | ((uvec3(0u, 0u, 0u) << _GLF_IDENTITY(uvec3(4u), uvec3(4u))) >> _GLF_IDENTITY(_GLF_IDENTITY(uvec3(2u), max(uvec3(2u), uvec3(2u))), uvec3(2u))), (uvec3(1u)) | ((uvec3(0u, 0u, 0u) << _GLF_IDENTITY(uvec3(4u), uvec3(4u))) >> _GLF_IDENTITY(uvec3(2u), uvec3(2u))))), ~ (~ (_GLF_IDENTITY((uvec3(1u)) | ((uvec3(0u, 0u, 0u) << _GLF_IDENTITY(_GLF_IDENTITY(uvec3(4u), uvec3(4u)), uvec3(0u, 0u, 0u) ^ (_GLF_IDENTITY(uvec3(4u), uvec3(4u))))) >> _GLF_IDENTITY(_GLF_IDENTITY(uvec3(2u), (_GLF_IDENTITY(uvec3(2u), clamp(uvec3(2u), uvec3(2u), uvec3(2u)))) << uvec3(0u, 0u, 0u)), uvec3(_GLF_IDENTITY(2u, (2u) - 0u)))), max((uvec3(1u)) | ((uvec3(0u, 0u, 0u) << _GLF_IDENTITY(uvec3(4u), uvec3(4u))) >> _GLF_IDENTITY(_GLF_IDENTITY(uvec3(2u), max(uvec3(2u), uvec3(2u))), uvec3(2u))), (uvec3(1u)) | ((uvec3(0u, 0u, 0u) << _GLF_IDENTITY(uvec3(4u), uvec3(4u))) >> _GLF_IDENTITY(uvec3(2u), uvec3(2u)))))))))) : _GLF_FUZZED(uvec3(117215u, 174548u, 47451u)))))))) - uvec3(0u, 0u, 0u)), vec2(1.0)), mat3x4(1.0)));
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 uint subgroup_local_id = gl_SubgroupInvocationID;
 uint num_workgroup = gl_NumWorkGroups.x;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 uint workgroup_size = gl_WorkGroupSize.x;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 uint workgroup_id = gl_WorkGroupID.x;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 _GLF_struct_26 _GLF_struct_replacement_26 = _GLF_struct_26(_GLF_struct_12(ivec4(1), 1.0, mat4x3(1.0), _GLF_struct_11(mat4x2(1.0), vec2(1.0), bvec4(true), mat4x2(1.0), mat2(1.0)), ivec2(1)), workgroup_size * workgroup_id, _GLF_struct_14(vec3(1.0), mat2x4(1.0), _GLF_struct_13(_GLF_IDENTITY(vec3(1.0), _GLF_IDENTITY(_GLF_IDENTITY((vec3(_GLF_IDENTITY(1.0, (1.0) - 0.0))) * mat3(_GLF_IDENTITY(1.0, max(1.0, _GLF_IDENTITY(1.0, min(1.0, 1.0))))), vec3(mat2x4((vec3(1.0)) * mat3(1.0), 1.0, _GLF_IDENTITY(_GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, float(vec3(0.0, 0.0, 1.0)))) / _GLF_ONE(1.0, injectionSwitch.y)), clamp(0.0, _GLF_IDENTITY(0.0, _GLF_IDENTITY((false ? _GLF_FUZZED(exp2(-9.2)) : 0.0), (false ? _GLF_FUZZED(-2.5) : _GLF_IDENTITY((false ? _GLF_FUZZED(exp2(-9.2)) : 0.0), ((false ? _GLF_FUZZED(exp2(-9.2)) : 0.0)) + 0.0)))), 0.0)), 1.0, 1.0, 1.0))), (_GLF_IDENTITY((vec3(_GLF_IDENTITY(1.0, (1.0) - 0.0))) * mat3(_GLF_IDENTITY(1.0, max(1.0, _GLF_IDENTITY(1.0, min(1.0, 1.0))))), vec3(mat2x4((vec3(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(593.847)), float(1.0), bool(true))), 1.0))) + 0.0))) * mat3(1.0), 1.0, _GLF_IDENTITY(_GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, float(vec3(0.0, 0.0, 1.0)))) / _GLF_ONE(1.0, injectionSwitch.y)), clamp(0.0, _GLF_IDENTITY(0.0, _GLF_IDENTITY(_GLF_IDENTITY((false ? _GLF_FUZZED(exp2(-9.2)) : 0.0), (false ? _GLF_FUZZED(-2.5) : _GLF_IDENTITY((false ? _GLF_FUZZED(exp2(-9.2)) : 0.0), ((false ? _GLF_FUZZED(exp2(-9.2)) : 0.0)) + 0.0))), max(_GLF_IDENTITY((false ? _GLF_FUZZED(exp2(-9.2)) : 0.0), (false ? _GLF_FUZZED(-2.5) : _GLF_IDENTITY((false ? _GLF_FUZZED(exp2(-9.2)) : 0.0), ((false ? _GLF_FUZZED(exp2(-9.2)) : 0.0)) + 0.0))), _GLF_IDENTITY((false ? _GLF_FUZZED(exp2(-9.2)) : 0.0), (false ? _GLF_FUZZED(-2.5) : _GLF_IDENTITY((false ? _GLF_FUZZED(exp2(-9.2)) : 0.0), ((false ? _GLF_FUZZED(exp2(-9.2)) : 0.0)) + 0.0)))))), 0.0)), 1.0, 1.0, _GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, min(1.0, 1.0)), 1.0)))))) * vec3(1.0, 1.0, 1.0))), _GLF_IDENTITY(1u, (1u) ^ 0u), mat3x2(1.0), bvec3(true), bvec3(true), ivec2(_GLF_IDENTITY(1, (1) - int(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(float(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)))), (float(float(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x))))) / 1.0)), 1.0 * (injectionSwitch.x)), _GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_IDENTITY(_GLF_FUZZED(58.39), clamp(_GLF_IDENTITY(_GLF_FUZZED(58.39), (_GLF_FUZZED(58.39)) + 0.0), _GLF_FUZZED(58.39), _GLF_FUZZED(58.39)))), bool(false))), injectionSwitch.x))))))), 1), _GLF_struct_15(true, uvec4(1u)), _GLF_struct_18(_GLF_struct_16(mat3x2(_GLF_IDENTITY(1.0, clamp(1.0, _GLF_IDENTITY(1.0, (1.0) - determinant(mat3(0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))), _GLF_IDENTITY(1.0, max(1.0, 1.0)))))), _GLF_struct_17(_GLF_IDENTITY(1, clamp(1, 1, 1)))), _GLF_struct_23(_GLF_struct_19(_GLF_IDENTITY(true, bool(bool(true)))), bvec3(true), _GLF_struct_20(mat3x4(_GLF_IDENTITY(1.0, float(mat2(1.0, 1.0, 1.0, 0.0)))), _GLF_IDENTITY(ivec3(1), (ivec3(1)) ^ ivec3(_GLF_IDENTITY(0, clamp(0, _GLF_IDENTITY(0, (0) | (0)), 0)), 0, 0)), uvec2(1u), 1, 1, mat2x4(1.0), mat3x4(1.0)), 1u, _GLF_struct_21(mat4(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED((-6988.9196 / -39.63))), float(1.0), bool(_GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && ((injectionSwitch.x < injectionSwitch.y)))))))), mat2x3(1.0), mat2x4(1.0), mat4x2(1.0), mat4x3(1.0), bvec3(_GLF_IDENTITY(_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bool(true)), false || (bool(bool(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(true, bool(bool(_GLF_IDENTITY(true, bool(bvec2(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))), false || (! (_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bool(true)), ! (_GLF_IDENTITY(! (bool(bool(true))), ! (! (! (bool(bool(true))))))))))))))))))), (_GLF_IDENTITY(true, bool(bvec4(true, false, true, true)))) && true))), _GLF_struct_22(_GLF_IDENTITY(bvec2(true), bvec2(bvec4(_GLF_IDENTITY(bvec2(true), bvec2(_GLF_IDENTITY(bvec3(bvec2(true), false), bvec3(bvec4(bvec3(bvec2(true), false), false))))), true, false))), vec3(1.0), _GLF_IDENTITY(vec4(1.0), (_GLF_IDENTITY(vec4(1.0), max(_GLF_IDENTITY(vec4(1.0), vec4(mat4x2(vec4(1.0), 0.0, 0.0, 1.0, 1.0))), vec4(1.0)))) * mat4(_GLF_ONE(1.0, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y, (_GLF_IDENTITY(false ? _GLF_IDENTITY(_GLF_FUZZED(2.7), min(_GLF_FUZZED(2.7), _GLF_IDENTITY(_GLF_FUZZED(2.7), float(mat4(_GLF_FUZZED(2.7), 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0))))) : injectionSwitch.y, max(false ? _GLF_FUZZED(2.7) : injectionSwitch.y, false ? _GLF_FUZZED(2.7) : injectionSwitch.y))))))), mat4x3(1.0), bvec3(true), mat4x2(_GLF_IDENTITY(1.0, mix(float(_GLF_IDENTITY(1.0, mix(float(_GLF_IDENTITY(1.0, float(vec3(1.0, 1.0, 0.0)))), float(_GLF_FUZZED(708.936)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), float(_GLF_FUZZED(6.0)), bool(false)))))), _GLF_IDENTITY(1u, clamp(1u, _GLF_IDENTITY(1u, max(1u, 1u)), 1u)), _GLF_struct_25(ivec2(1), uvec4(1u), _GLF_struct_24(_GLF_IDENTITY(uvec2(1u), max(uvec2(1u), uvec2(1u)))), _GLF_IDENTITY(vec3(1.0), clamp(vec3(1.0), vec3(1.0), vec3(1.0)))));
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 uint virtual_gid = _GLF_struct_replacement_26.workgroup_base + _GLF_struct_replacement_5.subgroup_id * _GLF_IDENTITY(_GLF_struct_replacement_10._f1.subgroup_size, clamp(_GLF_IDENTITY(_GLF_struct_replacement_10._f1.subgroup_size, (true ? _GLF_struct_replacement_10._f1.subgroup_size : _GLF_FUZZED(_GLF_IDENTITY(workgroup_size, (true ? workgroup_size : _GLF_FUZZED(158875u)))))), _GLF_struct_replacement_10._f1.subgroup_size, _GLF_struct_replacement_10._f1.subgroup_size)) + subgroup_local_id;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint next_virtual_gid = _GLF_IDENTITY(_GLF_struct_replacement_26.workgroup_base + _GLF_IDENTITY(_GLF_IDENTITY(_GLF_struct_replacement_5.subgroup_id, min(_GLF_struct_replacement_5.subgroup_id, _GLF_struct_replacement_5.subgroup_id)) * _GLF_struct_replacement_10._f1.subgroup_size, max(_GLF_IDENTITY(_GLF_struct_replacement_5.subgroup_id, min(_GLF_struct_replacement_5.subgroup_id, _GLF_struct_replacement_5.subgroup_id)) * _GLF_struct_replacement_10._f1.subgroup_size, _GLF_IDENTITY(_GLF_struct_replacement_5.subgroup_id, min(_GLF_struct_replacement_5.subgroup_id, _GLF_struct_replacement_5.subgroup_id)) * _GLF_struct_replacement_10._f1.subgroup_size)) + (_GLF_IDENTITY((subgroup_local_id + 1) % _GLF_struct_replacement_10._f1.subgroup_size, max((_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) / 1u)) % _GLF_struct_replacement_10._f1.subgroup_size, (_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, (1) >> 0), uint(uvec4(subgroup_local_id + 1, 1u, (0u >> _GLF_IDENTITY(uint(2u), _GLF_IDENTITY(uint(2u), min(_GLF_IDENTITY(uint(2u), (true ? uint(2u) : _GLF_FUZZED(workgroup_id))), uint(2u))))), 1u)))) % _GLF_IDENTITY(_GLF_struct_replacement_10._f1.subgroup_size, ~ (~ (_GLF_struct_replacement_10._f1.subgroup_size)))))), uint(uint(_GLF_struct_replacement_26.workgroup_base + _GLF_IDENTITY(_GLF_struct_replacement_5.subgroup_id, min(_GLF_struct_replacement_5.subgroup_id, _GLF_struct_replacement_5.subgroup_id)) * _GLF_struct_replacement_10._f1.subgroup_size + (_GLF_IDENTITY((subgroup_local_id + 1) % _GLF_struct_replacement_10._f1.subgroup_size, max(_GLF_IDENTITY((subgroup_local_id + 1) % _GLF_struct_replacement_10._f1.subgroup_size, (_GLF_IDENTITY((subgroup_local_id + 1), ((subgroup_local_id + 1)) - (0u >> _GLF_IDENTITY(uint(0u), uint(0u)))) % _GLF_struct_replacement_10._f1.subgroup_size) | (0u << _GLF_IDENTITY(_GLF_IDENTITY(uint(5u), (uint(5u)) * 1u), uint(5u)))), (_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, (1) >> 0), uint(uvec4(subgroup_local_id + _GLF_IDENTITY(1, ~ (~ (1))), 1u, (0u >> _GLF_IDENTITY(uint(2u), uint(2u))), 1u)))) % _GLF_struct_replacement_10._f1.subgroup_size))))));
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY(_GLF_FUZZED((6833.9510 - 7.6)), float(mat4x3(_GLF_IDENTITY(_GLF_FUZZED((6833.9510 - 7.6)), max(_GLF_FUZZED((6833.9510 - 7.6)), _GLF_FUZZED((6833.9510 - 7.6)))), 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0))), _GLF_FUZZED(1.0)), vec2(_GLF_IDENTITY((injectionSwitch)[0], (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)), injectionSwitch)))[0], (_GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, (true) || false))) ? _GLF_IDENTITY((injectionSwitch)[0], max((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch)[0], min((injectionSwitch)[0], (injectionSwitch)[0])))) : _GLF_FUZZED(8.5)))) / 1.0), _GLF_IDENTITY((injectionSwitch)[1], _GLF_IDENTITY(0.0 + ((injectionSwitch)[1]), (true ? 0.0 + ((injectionSwitch)[1]) : _GLF_FUZZED(uintBitsToFloat(workgroup_size)))))), bvec2(true, true))).y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 atomicStore(buf[virtual_gid], uint(1), _GLF_IDENTITY(4, int(ivec3(4, (0 & -42998), 0))), 64, 4);
 if(_GLF_IDENTITY(subgroup_local_id + 1 < _GLF_IDENTITY(_GLF_struct_replacement_10._f1.subgroup_size, (_GLF_IDENTITY(_GLF_struct_replacement_10._f1.subgroup_size, 0u ^ (_GLF_IDENTITY(_GLF_struct_replacement_10._f1.subgroup_size, 0u + (_GLF_struct_replacement_10._f1.subgroup_size))))) | (_GLF_struct_replacement_10._f1.subgroup_size)), bool(bool(_GLF_IDENTITY(subgroup_local_id + 1 < _GLF_IDENTITY(_GLF_struct_replacement_10._f1.subgroup_size, (_GLF_IDENTITY(_GLF_struct_replacement_10._f1.subgroup_size, 0u ^ (_GLF_IDENTITY(_GLF_struct_replacement_10._f1.subgroup_size, 0u + (_GLF_struct_replacement_10._f1.subgroup_size))))) | (_GLF_struct_replacement_10._f1.subgroup_size)), ! (! (subgroup_local_id + 1 < _GLF_IDENTITY(_GLF_struct_replacement_10._f1.subgroup_size, (_GLF_IDENTITY(_GLF_struct_replacement_10._f1.subgroup_size, 0u ^ (_GLF_IDENTITY(_GLF_struct_replacement_10._f1.subgroup_size, 0u + (_GLF_struct_replacement_10._f1.subgroup_size))))) | (_GLF_struct_replacement_10._f1.subgroup_size)))))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   atomicStore(buf[next_virtual_gid], uint(_GLF_IDENTITY(2, (_GLF_IDENTITY(2, (2) << 0)) / 1)), 4, 64, 4);
   if(_GLF_DEAD(false))
    barrier();
   subgroupAll(false);
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 else
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(false, true && (false)))), _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), _GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, 0.0 + (injectionSwitch.y))))), false || ((injectionSwitch.x > injectionSwitch.y)))) || (_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(true, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(true, bool(bvec4(true, false, true, true))), true), bvec2(_GLF_IDENTITY(bvec2(bvec2(true, true)), bvec2(bvec3(bvec2(bvec2(true, true)), true)))))), _GLF_IDENTITY((bool(_GLF_IDENTITY(bvec2(true, true), bvec2(bvec2(bvec2(true, true)))))), bool(_GLF_IDENTITY(bool((bool(_GLF_IDENTITY(bvec2(true, true), bvec2(bvec2(bvec2(_GLF_IDENTITY(true, false || (true)), true))))))), ! (! (_GLF_IDENTITY(bool((bool(_GLF_IDENTITY(bvec2(true, true), bvec2(bvec2(bvec2(true, true))))))), ! (! (bool((bool(_GLF_IDENTITY(bvec2(true, true), bvec2(bvec2(bvec2(true, true))))))))))))))) && true)), true && (true)) && (false)))), false)), _GLF_IDENTITY(bool(bvec3(bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), ! (_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), bool(bvec4(! (! (false)), true, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), true && (false))), ! (_GLF_IDENTITY(! ((_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), true && (false)))), (! ((_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), true && (false))))) || false))), _GLF_IDENTITY((! (_GLF_IDENTITY(false, true && _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(false, (false) || false)), false || ((_GLF_IDENTITY(false, (false) || false)))), (_GLF_IDENTITY((_GLF_IDENTITY(false, (false) || false)), _GLF_IDENTITY(false || ((_GLF_IDENTITY(false, (false) || false))), _GLF_IDENTITY(false, ! (! (false))) || (_GLF_IDENTITY(false || ((_GLF_IDENTITY(false, (false) || false))), false || (false || ((_GLF_IDENTITY(false, (false) || false))))))))) && true)))) && true, _GLF_IDENTITY(_GLF_IDENTITY(true, ! (! (true))), (_GLF_IDENTITY(true, _GLF_IDENTITY(! (! (true)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (! (! (true)))))) || false) && (_GLF_IDENTITY((! (_GLF_IDENTITY(false, _GLF_IDENTITY(true && _GLF_IDENTITY((_GLF_IDENTITY(false, (false) || false)), false || ((_GLF_IDENTITY(false, (false) || false)))), bool(bvec3(true && _GLF_IDENTITY((_GLF_IDENTITY(false, (false) || false)), false || ((_GLF_IDENTITY(false, (false) || false)))), true, false)))))), ! (! (_GLF_IDENTITY((! (_GLF_IDENTITY(false, _GLF_IDENTITY(true, true && (true)) && _GLF_IDENTITY((_GLF_IDENTITY(false, (false) || false)), false || ((_GLF_IDENTITY(false, (false) || false))))))), bool(bvec3((! (_GLF_IDENTITY(false, true && _GLF_IDENTITY((_GLF_IDENTITY(false, (false) || false)), false || ((_GLF_IDENTITY(false, (false) || false))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)))))) && true))))), false)), true, _GLF_IDENTITY(true, bool(_GLF_IDENTITY(bvec3(true, true, false), bvec3(bvec4(bvec3(true, true, false), true))))))), _GLF_IDENTITY(_GLF_IDENTITY((bool(bvec3(bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, true && (false))), (! _GLF_IDENTITY((_GLF_IDENTITY(false, true && _GLF_IDENTITY((_GLF_IDENTITY(false, (false) || false)), false || ((_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) || _GLF_IDENTITY(false, (false) || false))))))), ((_GLF_IDENTITY(false, true && _GLF_IDENTITY((_GLF_IDENTITY(false, (false) || false)), false || ((_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) || _GLF_IDENTITY(false, (false) || false)))))))) && true)) && true))), false)), true, true))) && true, bool(bvec2((bool(bvec3(bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, true && (false))), (! (_GLF_IDENTITY(false, true && _GLF_IDENTITY((_GLF_IDENTITY(false, (false) || false)), false || ((_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), (false) || false))))))) && true))), false)), true, true))) && true, true))), ((bool(bvec3(bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), ! (_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_IDENTITY(false, true && (false))), bool(bvec3((_GLF_IDENTITY(false, true && (false))), false, true))), (! (_GLF_IDENTITY(false, true && _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), _GLF_IDENTITY((_GLF_IDENTITY(false, (false) || false)), _GLF_IDENTITY(bool(bvec2((_GLF_IDENTITY(false, (false) || false)), true)), false || (bool(bvec2((_GLF_IDENTITY(false, (false) || false)), true))))) && _GLF_IDENTITY(true, (true) && true))), false || ((_GLF_IDENTITY(false, (false) || false))))))) && true))), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), ! (_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_IDENTITY(false, true && (false))), bool(bvec3((_GLF_IDENTITY(false, true && (false))), false, true))), _GLF_IDENTITY((! (_GLF_IDENTITY(false, true && _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), (_GLF_IDENTITY(false, (false) || false)) && _GLF_IDENTITY(true, (true) && true))), false || ((_GLF_IDENTITY(false, (false) || false))))))) && true, bool(bool(_GLF_IDENTITY((! (_GLF_IDENTITY(false, true && _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), (_GLF_IDENTITY(false, (false) || false)) && _GLF_IDENTITY(true, (true) && true))), false || ((_GLF_IDENTITY(false, (false) || false))))))) && true, bool(bvec3((! (_GLF_IDENTITY(false, true && _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), (_GLF_IDENTITY(false, (false) || false)) && _GLF_IDENTITY(true, (true) && true))), false || ((_GLF_IDENTITY(false, (false) || false))))))) && true, false, true))))))))), bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), ! (_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_IDENTITY(false, true && (false))), bool(bvec3((_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, ! (! (false)))))), false, true))), (! (_GLF_IDENTITY(false, true && _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true))), (false) || false), (_GLF_IDENTITY(false, (false) || false)) && _GLF_IDENTITY(true, (true) && true))), false || ((_GLF_IDENTITY(false, (false) || false))))))) && true))), true && (_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), ! (_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_IDENTITY(false, true && (false))), bool(bvec3((_GLF_IDENTITY(false, true && (false))), false, true))), (! (_GLF_IDENTITY(false, true && _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), (_GLF_IDENTITY(false, (false) || false)) && _GLF_IDENTITY(true, (true) && true))), false || ((_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), true && (_GLF_IDENTITY(! (false), false || (! (false))))))), (false) || false))))))) && true))))), false, true))), false), bvec2(bvec3(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), ! (_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_IDENTITY(false, true && (false))), bool(bvec3((_GLF_IDENTITY(false, true && (false))), false, true))), (! (_GLF_IDENTITY(false, true && _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), ! (! (_GLF_IDENTITY(false, (false) || false)))), (_GLF_IDENTITY(false, (false) || false)) && _GLF_IDENTITY(true, (true) && true))), false || ((_GLF_IDENTITY(false, (false) || false))))))) && true))), bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), ! _GLF_IDENTITY((_GLF_IDENTITY(! _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(false, true && (false))), bool(bvec3((_GLF_IDENTITY(false, true && (false))), false, true))), true && (_GLF_IDENTITY((_GLF_IDENTITY(false, true && (false))), bool(bvec3((_GLF_IDENTITY(false, true && (false))), _GLF_IDENTITY(false, (_GLF_IDENTITY(false, false || (false))) && true), true))))), (! (_GLF_IDENTITY(false, true && _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), (_GLF_IDENTITY(false, (false) || false)) && _GLF_IDENTITY(true, (true) && true))), false || ((_GLF_IDENTITY(false, (false) || false))))))) && true)), ((_GLF_IDENTITY(! _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(false, true && (false))), bool(bvec3((_GLF_IDENTITY(false, true && (false))), false, true))), true && (_GLF_IDENTITY((_GLF_IDENTITY(false, true && (false))), bool(bvec3((_GLF_IDENTITY(false, true && (false))), _GLF_IDENTITY(false, (_GLF_IDENTITY(false, false || (false))) && true), true))))), (! (_GLF_IDENTITY(false, true && _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), (_GLF_IDENTITY(false, (false) || false)) && _GLF_IDENTITY(true, (true) && true))), false || ((_GLF_IDENTITY(false, (false) || false))))))) && true))) && true)), true && _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), ! (_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_IDENTITY(false, true && (false))), bool(bvec3((_GLF_IDENTITY(false, true && (false))), false, true))), (! (_GLF_IDENTITY(false, true && _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), (_GLF_IDENTITY(false, (false) || false)) && _GLF_IDENTITY(true, (true) && true))), false || ((_GLF_IDENTITY(false, (false) || false))))))) && true)))), bool(bvec3(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), ! (_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_IDENTITY(false, true && (false))), bool(bvec3((_GLF_IDENTITY(false, true && (false))), false, true))), (! (_GLF_IDENTITY(false, true && _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), (_GLF_IDENTITY(false, (false) || false)) && _GLF_IDENTITY(true, (true) && true))), false || ((_GLF_IDENTITY(false, (false) || false))))))) && true)))), ! (! ((_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), ! (_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_IDENTITY(false, true && (false))), bool(bvec3((_GLF_IDENTITY(false, true && (false))), false, true))), (! (_GLF_IDENTITY(false, true && _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), (_GLF_IDENTITY(false, (false) || false)) && _GLF_IDENTITY(true, (true) && true))), false || ((_GLF_IDENTITY(false, (false) || false))))))) && true))))))), true, false)))), false, true))), false), true))))), _GLF_IDENTITY(false, ! _GLF_IDENTITY((_GLF_IDENTITY(! (false), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, (false) && true), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(bvec2(bvec2(bvec2(_GLF_IDENTITY(false, (false) && true), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), bvec2(bvec4(bvec2(bvec2(bvec2(_GLF_IDENTITY(false, (false) && true), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), true, false))))))), bool(bvec2(! (false), false))), (_GLF_IDENTITY(! (false), bool(bvec2(! (false), false)))) && true))))), false || ((_GLF_IDENTITY(! (false), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, (false) && true), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(bvec2(bvec2(bvec2(_GLF_IDENTITY(false, (false) && true), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), bvec2(bvec4(bvec2(bvec2(bvec2(_GLF_IDENTITY(false, (false) && true), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), true, false))))))), bool(bvec2(! (false), false))), (_GLF_IDENTITY(! (false), bool(bvec2(! (false), false)))) && true)))))))))), true, true))) && _GLF_IDENTITY(true, false || (true))) || false))), _GLF_IDENTITY(! (! (_GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), true && (_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), (_GLF_IDENTITY(false, true && (false))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), _GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y))))) || (_GLF_IDENTITY(false, _GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec3(true, true, true)), true && (bool(bvec3(true, true, true))))) && (false)))), true && _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(false, true && (false)))), bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(false, true && (false)))), true, false)))), _GLF_IDENTITY(bool(bvec4((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(false, true && (false)))), bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(false, true && (false)))), true, false)))), true, true, true)), (bool(bvec4((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(false, true && (false)))), bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(false, true && (false)))), true, false)))), true, true, true))) || false))), false)), bool(bvec3(bool(bvec2(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), _GLF_IDENTITY(! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, true && (false))), true && (! (_GLF_IDENTITY(false, true && (false)))))), ! (! (! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, true && (false))), true && (! (_GLF_IDENTITY(false, true && (false)))))))))))), false)), true, true))))), true && (! _GLF_IDENTITY((! (_GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), ! (! (bool(false)))))))), _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(false ? _GLF_FUZZED(acosh(vec2(-0.3, -7086.7019))) : injectionSwitch, (false ? _GLF_FUZZED(acosh(vec2(-0.3, -7086.7019))) : injectionSwitch) * mat2(1.0)))).y)) || (_GLF_IDENTITY(false, true && _GLF_IDENTITY(_GLF_IDENTITY((false), true && ((false))), false || (_GLF_IDENTITY((false), true && ((false)))))))), false)), bool(bvec3(bool(bvec2(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, true && (false)))), false)), true, true))))), bool(bvec4((! (_GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), ! (! (bool(false)))))))), _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(false ? _GLF_FUZZED(acosh(vec2(-0.3, -7086.7019))) : injectionSwitch, (false ? _GLF_FUZZED(acosh(vec2(-0.3, -7086.7019))) : injectionSwitch) * mat2(1.0)))).y)) || (_GLF_IDENTITY(false, true && _GLF_IDENTITY(_GLF_IDENTITY((false), true && ((false))), false || (_GLF_IDENTITY((false), true && ((false)))))))), false)), bool(bvec3(bool(bvec2(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, true && (false)))), false)), true, true))))), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)))))))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   atomicStore(buf[next_virtual_gid], uint(2), 4, _GLF_IDENTITY(64, min(64, 64)), 4);
   subgroupAll(true);
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
}
