#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch), (_GLF_IDENTITY((injectionSwitch), _GLF_IDENTITY(mat2(1.0) * ((injectionSwitch)), (true ? mat2(1.0) * ((injectionSwitch)) : _GLF_FUZZED(injectionSwitch))))) + vec2(0.0, 0.0)) * mat2(1.0)).x, (false ? _GLF_FUZZED(9.3) : _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch), (_GLF_IDENTITY((injectionSwitch), _GLF_IDENTITY(mat2(1.0) * ((injectionSwitch)), (true ? mat2(1.0) * ((injectionSwitch)) : _GLF_FUZZED(injectionSwitch))))) + vec2(0.0, 0.0)), (_GLF_IDENTITY((injectionSwitch), (_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch), _GLF_IDENTITY(mat2(1.0) * ((injectionSwitch)), (true ? mat2(1.0) * ((injectionSwitch)) : _GLF_FUZZED(injectionSwitch)))), (_GLF_IDENTITY((injectionSwitch), _GLF_IDENTITY(mat2(1.0) * ((injectionSwitch)), (true ? mat2(1.0) * ((injectionSwitch)) : _GLF_FUZZED(injectionSwitch))))) * mat2(1.0))) + vec2(0.0, 0.0))) / vec2(1.0, 1.0)) * mat2(1.0)).x)), (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x))) / determinant(mat2(1.0, 0.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 1.0))) > _GLF_IDENTITY(injectionSwitch.y, 1.0 * (_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(max(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0), injectionSwitch.y), 1.0 * (max(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0), injectionSwitch.y))))))))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bool(false))), (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(false))
  barrier();
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_DEAD(false))
  barrier();
 uint subgroup_local_id = gl_SubgroupInvocationID;
 uint num_workgroup = gl_NumWorkGroups.x;
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, true, true)))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 uint workgroup_size = gl_WorkGroupSize.x;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)), vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], (_GLF_IDENTITY(injectionSwitch[1], 0.0 + (injectionSwitch[1]))) / 1.0))).y, 0.0 + (injectionSwitch.y))))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 uint workgroup_id = gl_WorkGroupID.x;
 if(_GLF_DEAD(false))
  barrier();
 uint workgroup_base = _GLF_IDENTITY(workgroup_size * workgroup_id, (workgroup_size * workgroup_id) << 0u);
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), ! (! (! (_GLF_DEAD(false))))))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), ! (! (! (_GLF_DEAD(false))))))), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), ! (! (! (_GLF_DEAD(false))))))), false), bvec2(bvec3(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), ! (! (! (_GLF_DEAD(false))))))), false), false)))))))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_DEAD(false), true, false))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(_GLF_ONE(1.0, injectionSwitch.y))).x > injectionSwitch.y), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || ((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(_GLF_ONE(1.0, injectionSwitch.y))).x > injectionSwitch.y))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
  }
 uint virtual_gid = _GLF_IDENTITY(workgroup_base, (workgroup_base) - _GLF_IDENTITY(0u, 0u | (0u))) + subgroup_id * subgroup_size + _GLF_IDENTITY(subgroup_local_id, (true ? subgroup_local_id : _GLF_FUZZED(subgroup_id)));
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), ! _GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(false, bool(bool(false))) || (false)), (_GLF_IDENTITY(false, false || (false))) && true)), (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(false || (false), ! (! (_GLF_IDENTITY(false || (false), _GLF_IDENTITY(bool(bvec4(false || (false), false, false, false)), (bool(bvec4(false || (false), _GLF_IDENTITY(false, (_GLF_IDENTITY(false, false || (false))) || false), false, false))) || false)))))), (_GLF_IDENTITY(false, false || (false))) && true)), bool(bvec4(! (_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), (_GLF_IDENTITY(false, false || (false))) && true)), _GLF_IDENTITY(false, (false) || _GLF_IDENTITY(false, ! (! (false)))), false, false)))) && _GLF_IDENTITY(true, (_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), (! (true)) && true)))) && true))), bool(_GLF_IDENTITY(bvec2((_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), (_GLF_IDENTITY(false, false || (false))) && true)), _GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(false || (false), ! (! _GLF_IDENTITY((_GLF_IDENTITY(false || (false), _GLF_IDENTITY(bool(bvec4(false || (false), false, false, _GLF_IDENTITY(false, true && (false)))), (bool(bvec4(false || (false), false, false, false))) || false))), ! (! ((_GLF_IDENTITY(false || (false), _GLF_IDENTITY(bool(bvec4(false || (false), false, false, _GLF_IDENTITY(false, true && (false)))), (bool(bvec4(false || (false), false, false, false))) || false))))))))), (_GLF_IDENTITY(false, false || (false))) && true)), bool(bvec4(! (_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), (_GLF_IDENTITY(false, false || (false))) && true)), false, false, false)))), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(false || (false), ! (! _GLF_IDENTITY((_GLF_IDENTITY(false || (false), _GLF_IDENTITY(bool(bvec4(false || (false), false, false, _GLF_IDENTITY(false, true && (false)))), (bool(bvec4(false || (false), false, false, false))) || false))), ! (! ((_GLF_IDENTITY(false || (false), _GLF_IDENTITY(bool(bvec4(false || (false), false, false, _GLF_IDENTITY(false, true && (false)))), (bool(bvec4(false || (false), false, false, false))) || false))))))))), (_GLF_IDENTITY(false, false || (false))) && true)), bool(bvec4(! (_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), (_GLF_IDENTITY(false, false || (false))) && true)), false, false, false)))), ((_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(false || (false), ! (! _GLF_IDENTITY((_GLF_IDENTITY(false || (false), _GLF_IDENTITY(bool(bvec4(false || (false), false, false, _GLF_IDENTITY(false, true && (false)))), (bool(bvec4(false || (false), false, false, false))) || false))), ! (! ((_GLF_IDENTITY(false || (false), _GLF_IDENTITY(bool(bvec4(false || (false), false, false, _GLF_IDENTITY(false, true && (false)))), (bool(bvec4(false || (false), false, false, false))) || false))))))))), (_GLF_IDENTITY(false, false || (false))) && true)), bool(bvec4(! (_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), (_GLF_IDENTITY(false, false || (false))) && true)), false, false, false))))) && true), true), bvec2(bvec3(bvec2(_GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(false || (false), ! (! _GLF_IDENTITY((_GLF_IDENTITY(false || (false), _GLF_IDENTITY(bool(bvec4(false || (false), false, false, _GLF_IDENTITY(false, true && (false)))), (bool(bvec4(false || (false), false, false, false))) || false))), ! (! ((_GLF_IDENTITY(false || (false), _GLF_IDENTITY(bool(bvec4(false || (false), false, false, _GLF_IDENTITY(false, true && (false)))), (bool(bvec4(false || (false), false, false, false))) || false))))))))), (_GLF_IDENTITY(false, false || (false))) && true)), bool(bvec4(! (_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), (_GLF_IDENTITY(false, false || (false))) && true)), false, false, false)))), ((_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(false || (false), ! (! _GLF_IDENTITY((_GLF_IDENTITY(false || (false), _GLF_IDENTITY(bool(bvec4(false || (false), false, false, _GLF_IDENTITY(false, true && (false)))), (bool(bvec4(false || (false), false, false, false))) || false))), ! (! ((_GLF_IDENTITY(false || (false), _GLF_IDENTITY(bool(bvec4(false || (false), false, false, _GLF_IDENTITY(false, true && (false)))), (bool(bvec4(false || (false), false, false, false))) || false))))))))), (_GLF_IDENTITY(false, false || (false))) && true)), bool(bvec4(! (_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), (_GLF_IDENTITY(false, false || (false))) && true)), false, false, false))))) && true), true), false))))) && _GLF_IDENTITY(true, (_GLF_IDENTITY(true, _GLF_IDENTITY(! (_GLF_IDENTITY(! (true), (! (true)) && true)), (! (_GLF_IDENTITY(! (true), (! (true)) && true))) && true))) && true))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(bvec2(bvec4(bvec2((_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), (_GLF_IDENTITY(false, false || (false))) && true)), _GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(false || (false), ! (! _GLF_IDENTITY((_GLF_IDENTITY(false || (false), _GLF_IDENTITY(bool(bvec4(false || (false), false, false, _GLF_IDENTITY(false, true && (false)))), (bool(bvec4(false || (false), false, false, false))) || false))), ! (! ((_GLF_IDENTITY(false || (false), _GLF_IDENTITY(bool(bvec4(false || (false), false, false, _GLF_IDENTITY(false, true && (false)))), (bool(bvec4(false || (false), false, false, false))) || false))))))))), (_GLF_IDENTITY(false, false || (false))) && true)), bool(bvec4(! (_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), (_GLF_IDENTITY(false, false || (false))) && true)), false, false, false)))), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(false || (false), ! (! _GLF_IDENTITY((_GLF_IDENTITY(false || (false), _GLF_IDENTITY(bool(bvec4(false || (false), false, false, _GLF_IDENTITY(false, true && (false)))), (bool(bvec4(false || (false), false, false, false))) || false))), ! (! ((_GLF_IDENTITY(false || (false), _GLF_IDENTITY(bool(bvec4(false || (false), false, false, _GLF_IDENTITY(false, true && (false)))), (bool(bvec4(false || (false), false, false, false))) || false))))))))), (_GLF_IDENTITY(false, false || (false))) && true)), bool(bvec4(! (_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), (_GLF_IDENTITY(false, false || (false))) && true)), false, false, false)))), ((_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(false || (false), ! (! _GLF_IDENTITY((_GLF_IDENTITY(false || (false), _GLF_IDENTITY(bool(bvec4(false || (false), false, false, _GLF_IDENTITY(false, true && (false)))), (bool(bvec4(false || (false), false, false, false))) || false))), ! (! ((_GLF_IDENTITY(false || (false), _GLF_IDENTITY(bool(bvec4(false || (false), false, false, _GLF_IDENTITY(false, true && (false)))), (bool(bvec4(false || (false), false, false, false))) || false))))))))), (_GLF_IDENTITY(false, false || (false))) && true)), bool(bvec4(! (_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), (_GLF_IDENTITY(false, false || (false))) && true)), false, false, false))))) && true), true), bvec2(bvec3(bvec2(_GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(false || (false), ! (! _GLF_IDENTITY((_GLF_IDENTITY(false || (false), _GLF_IDENTITY(bool(bvec4(false || (false), false, false, _GLF_IDENTITY(false, true && (false)))), (bool(bvec4(false || (false), false, false, false))) || false))), ! (! ((_GLF_IDENTITY(false || (false), _GLF_IDENTITY(bool(bvec4(false || (false), false, false, _GLF_IDENTITY(false, true && (false)))), (bool(bvec4(false || (false), false, false, false))) || false))))))))), (_GLF_IDENTITY(false, false || (false))) && true)), bool(bvec4(! (_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), (_GLF_IDENTITY(false, false || (false))) && true)), false, false, false)))), ((_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(false || (false), ! (! _GLF_IDENTITY((_GLF_IDENTITY(false || (false), _GLF_IDENTITY(bool(bvec4(false || (false), false, false, _GLF_IDENTITY(false, true && (false)))), (bool(bvec4(false || (false), false, false, false))) || false))), ! (! ((_GLF_IDENTITY(false || (false), _GLF_IDENTITY(bool(bvec4(false || (false), false, false, _GLF_IDENTITY(false, true && (false)))), (bool(bvec4(false || (false), false, false, false))) || false))))))))), (_GLF_IDENTITY(false, false || (false))) && true)), bool(bvec4(! (_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), (_GLF_IDENTITY(false, false || (false))) && true)), false, false, false))))) && true), true), false))))) && _GLF_IDENTITY(true, (_GLF_IDENTITY(true, _GLF_IDENTITY(! (_GLF_IDENTITY(! (true), (! (true)) && true)), (! (_GLF_IDENTITY(! (true), (! (true)) && true))) && true))) && true))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)), bvec2(bvec4(_GLF_IDENTITY(bvec2(bvec4(bvec2((_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), (_GLF_IDENTITY(false, false || (false))) && true)), _GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(false || (false), ! (! _GLF_IDENTITY((_GLF_IDENTITY(false || (false), _GLF_IDENTITY(bool(bvec4(false || (false), false, false, _GLF_IDENTITY(false, true && (false)))), (bool(bvec4(false || (false), false, false, false))) || false))), ! (! ((_GLF_IDENTITY(false || (false), _GLF_IDENTITY(bool(bvec4(false || (false), false, false, _GLF_IDENTITY(false, true && (false)))), (bool(bvec4(false || (false), false, false, false))) || false))))))))), (_GLF_IDENTITY(false, false || (false))) && true)), bool(bvec4(! (_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), (_GLF_IDENTITY(false, false || (false))) && true)), false, false, false)))), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(false || (false), ! (! _GLF_IDENTITY((_GLF_IDENTITY(false || (false), _GLF_IDENTITY(bool(bvec4(false || (false), false, false, _GLF_IDENTITY(false, true && (false)))), (bool(bvec4(false || (false), false, false, false))) || false))), ! (! ((_GLF_IDENTITY(false || (false), _GLF_IDENTITY(bool(bvec4(false || (false), false, false, _GLF_IDENTITY(false, true && (false)))), (bool(bvec4(false || (false), false, false, false))) || false))))))))), (_GLF_IDENTITY(false, false || (false))) && true)), bool(bvec4(! (_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), (_GLF_IDENTITY(false, false || (false))) && true)), false, false, false)))), ((_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(false || (false), ! (! _GLF_IDENTITY((_GLF_IDENTITY(false || (false), _GLF_IDENTITY(bool(bvec4(false || (false), false, false, _GLF_IDENTITY(false, true && (false)))), (bool(bvec4(false || (false), false, false, false))) || false))), ! (! ((_GLF_IDENTITY(false || (false), _GLF_IDENTITY(bool(bvec4(false || (false), false, false, _GLF_IDENTITY(false, true && (false)))), (bool(bvec4(false || (false), false, false, false))) || false))))))))), (_GLF_IDENTITY(false, false || (false))) && true)), bool(bvec4(! (_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), (_GLF_IDENTITY(false, false || (false))) && true)), false, false, false))))) && true), true), bvec2(bvec3(bvec2(_GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(false || (false), ! (! _GLF_IDENTITY((_GLF_IDENTITY(false || (false), _GLF_IDENTITY(bool(bvec4(false || (false), false, false, _GLF_IDENTITY(false, true && (false)))), (bool(bvec4(false || (false), false, false, false))) || false))), ! (! ((_GLF_IDENTITY(false || (false), _GLF_IDENTITY(bool(bvec4(false || (false), false, false, _GLF_IDENTITY(false, true && (false)))), (bool(bvec4(false || (false), false, false, false))) || false))))))))), (_GLF_IDENTITY(false, false || (false))) && true)), bool(bvec4(! (_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), (_GLF_IDENTITY(false, false || (false))) && true)), false, false, false)))), ((_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(false || (false), ! (! _GLF_IDENTITY((_GLF_IDENTITY(false || (false), _GLF_IDENTITY(bool(bvec4(false || (false), false, false, _GLF_IDENTITY(false, true && (false)))), (bool(bvec4(false || (false), false, false, false))) || false))), ! (! ((_GLF_IDENTITY(false || (false), _GLF_IDENTITY(bool(bvec4(false || (false), false, false, _GLF_IDENTITY(false, true && (false)))), (bool(bvec4(false || (false), false, false, false))) || false))))))))), (_GLF_IDENTITY(false, false || (false))) && true)), bool(bvec4(! (_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), (_GLF_IDENTITY(false, false || (false))) && true)), false, false, false))))) && true), true), false))))) && _GLF_IDENTITY(true, (_GLF_IDENTITY(true, _GLF_IDENTITY(! (_GLF_IDENTITY(! (true), (! (true)) && true)), (! (_GLF_IDENTITY(! (true), (! (true)) && true))) && true))) && true))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)), bvec2(bvec2(bvec2(bvec4(bvec2((_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), (_GLF_IDENTITY(false, false || (false))) && true)), _GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(false || (false), ! (! _GLF_IDENTITY((_GLF_IDENTITY(false || (false), _GLF_IDENTITY(bool(bvec4(false || (false), false, false, _GLF_IDENTITY(false, true && (false)))), (bool(bvec4(false || (false), false, false, false))) || false))), ! (! ((_GLF_IDENTITY(false || (false), _GLF_IDENTITY(bool(bvec4(false || (false), false, false, _GLF_IDENTITY(false, true && (false)))), (bool(bvec4(false || (false), false, false, false))) || false))))))))), (_GLF_IDENTITY(false, false || (false))) && true)), bool(bvec4(! (_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), (_GLF_IDENTITY(false, false || (false))) && true)), false, false, false)))), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(false || (false), ! (! _GLF_IDENTITY((_GLF_IDENTITY(false || (false), _GLF_IDENTITY(bool(bvec4(false || (false), false, false, _GLF_IDENTITY(false, true && (false)))), (bool(bvec4(false || (false), false, false, false))) || false))), ! (! ((_GLF_IDENTITY(false || (false), _GLF_IDENTITY(bool(bvec4(false || (false), false, false, _GLF_IDENTITY(false, true && (false)))), (bool(bvec4(false || (false), false, false, false))) || false))))))))), (_GLF_IDENTITY(false, false || (false))) && true)), bool(bvec4(! (_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), (_GLF_IDENTITY(false, false || (false))) && true)), false, false, false)))), ((_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(false || (false), ! (! _GLF_IDENTITY((_GLF_IDENTITY(false || (false), _GLF_IDENTITY(bool(bvec4(false || (false), false, false, _GLF_IDENTITY(false, true && (false)))), (bool(bvec4(false || (false), false, false, false))) || false))), ! (! ((_GLF_IDENTITY(false || (false), _GLF_IDENTITY(bool(bvec4(false || (false), false, false, _GLF_IDENTITY(false, true && (false)))), (bool(bvec4(false || (false), false, false, false))) || false))))))))), (_GLF_IDENTITY(false, false || (false))) && true)), bool(bvec4(! (_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), (_GLF_IDENTITY(false, false || (false))) && true)), false, false, false))))) && true), true), bvec2(bvec3(bvec2(_GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(false || (false), ! (! _GLF_IDENTITY((_GLF_IDENTITY(false || (false), _GLF_IDENTITY(bool(bvec4(false || (false), false, false, _GLF_IDENTITY(false, true && (false)))), (bool(bvec4(false || (false), false, false, false))) || false))), ! (! ((_GLF_IDENTITY(false || (false), _GLF_IDENTITY(bool(bvec4(false || (false), false, false, _GLF_IDENTITY(false, true && (false)))), (bool(bvec4(false || (false), false, false, false))) || false))))))))), (_GLF_IDENTITY(false, false || (false))) && true)), bool(bvec4(! (_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), (_GLF_IDENTITY(false, false || (false))) && true)), false, false, false)))), ((_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(false || (false), ! (! _GLF_IDENTITY((_GLF_IDENTITY(false || (false), _GLF_IDENTITY(bool(bvec4(false || (false), false, false, _GLF_IDENTITY(false, true && (false)))), (bool(bvec4(false || (false), false, false, false))) || false))), ! (! ((_GLF_IDENTITY(false || (false), _GLF_IDENTITY(bool(bvec4(false || (false), false, false, _GLF_IDENTITY(false, true && (false)))), (bool(bvec4(false || (false), false, false, false))) || false))))))))), (_GLF_IDENTITY(false, false || (false))) && true)), bool(bvec4(! (_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), (_GLF_IDENTITY(false, false || (false))) && true)), false, false, false))))) && true), true), false))))) && _GLF_IDENTITY(true, (_GLF_IDENTITY(true, _GLF_IDENTITY(! (_GLF_IDENTITY(! (true), (! (true)) && true)), (! (_GLF_IDENTITY(! (true), (! (true)) && true))) && true))) && true))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))))), false, true)))))))), ! (! ((_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), ! _GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), (_GLF_IDENTITY(false, false || (false))) && true)), (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(false || (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) && true)))), _GLF_IDENTITY(! (! (_GLF_IDENTITY(false || (false), _GLF_IDENTITY(bool(bvec4(false || (false), false, false, false)), (bool(bvec4(false || (false), false, false, false))) || false)))), (! (! (_GLF_IDENTITY(false || (false), _GLF_IDENTITY(bool(bvec4(false || (false), false, false, false)), (bool(bvec4(false || (false), false, false, false))) || false))))) && true))), (_GLF_IDENTITY(false, false || (false))) && true)), bool(bvec4(! (_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), (_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false))))) && true)), false, false, false)))) && _GLF_IDENTITY(true, (_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), (! (true)) && true)))) && true))), bool(bvec2((_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), (_GLF_IDENTITY(false, false || _GLF_IDENTITY((false), false || ((false))))) && true)), (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(false || (false), ! (! (_GLF_IDENTITY(false || (false), _GLF_IDENTITY(bool(bvec4(false || (false), false, false, false)), (bool(bvec4(false || (false), false, false, false))) || false)))))), _GLF_IDENTITY((_GLF_IDENTITY(false, false || (false))) && true, false || (_GLF_IDENTITY((_GLF_IDENTITY(false, false || (false))) && true, bool(bvec2((_GLF_IDENTITY(false, false || (false))) && true, false))))))), bool(bvec4(! (_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), (_GLF_IDENTITY(false, false || (false))) && true)), false, false, false)))) && _GLF_IDENTITY(true, _GLF_IDENTITY((_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), (! (true)) && true)))) && true, false || ((_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), (! (true)) && true)))) && true))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))) && true), false, true)))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, bool(bvec4(false, true, true, true))))))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 uint next_virtual_gid = _GLF_IDENTITY(workgroup_base + subgroup_id * _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (subgroup_size) >> 0u), (subgroup_size) | (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (subgroup_size) | 0u), (_GLF_IDENTITY(subgroup_size, (subgroup_size) | 0u)) - 0u))) + _GLF_IDENTITY(((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, max(subgroup_local_id, subgroup_local_id))), max(_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, max(subgroup_local_id, subgroup_local_id))), ((_GLF_IDENTITY(subgroup_local_id, max(subgroup_local_id, subgroup_local_id)))) * 1u), (_GLF_IDENTITY(subgroup_local_id, max(subgroup_local_id, subgroup_local_id))))) / uint(_GLF_ONE(_GLF_IDENTITY(1.0, min(1.0, 1.0)), injectionSwitch.y))) + 1, max(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, max(subgroup_local_id, _GLF_IDENTITY(subgroup_local_id, 0u ^ (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | (subgroup_local_id)))))), _GLF_IDENTITY(max(subgroup_local_id, subgroup_local_id), clamp(max(subgroup_local_id, subgroup_local_id), max(subgroup_local_id, subgroup_local_id), max(subgroup_local_id, subgroup_local_id))))) / uint(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), clamp(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y))))) + 1, (_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, max(subgroup_local_id, subgroup_local_id))) / _GLF_IDENTITY(uint(_GLF_ONE(1.0, injectionSwitch.y)), (uint(_GLF_ONE(1.0, injectionSwitch.y))) << (0u | 0u))) + 1) ^ 0u), _GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, max(subgroup_local_id, subgroup_local_id))) / uint(_GLF_ONE(1.0, injectionSwitch.y))) + 1))) % subgroup_size), (((_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, max(subgroup_local_id, subgroup_local_id)), clamp(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, max(subgroup_local_id, subgroup_local_id)), (true ? _GLF_IDENTITY(subgroup_local_id, max(subgroup_local_id, subgroup_local_id)) : _GLF_FUZZED(num_workgroup))), _GLF_IDENTITY(subgroup_local_id, max(subgroup_local_id, subgroup_local_id)), _GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, max(subgroup_local_id, subgroup_local_id)), ~ (~ (_GLF_IDENTITY(subgroup_local_id, max(subgroup_local_id, subgroup_local_id)))))))) / uint(_GLF_ONE(_GLF_IDENTITY(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, (1.0) * 1.0)) - 0.0), float(mat4x2(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, (1.0) * 1.0)) - 0.0), 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0))), _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0)))) + 1) % subgroup_size)) << _GLF_IDENTITY(0u, _GLF_IDENTITY(0u, (0u) / uint(_GLF_ONE(1.0, injectionSwitch.y))) | (0u))), min(workgroup_base + subgroup_id * _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (subgroup_size) >> 0u), (subgroup_size) | (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (subgroup_size) | 0u), (_GLF_IDENTITY(subgroup_size, (subgroup_size) | 0u)) - 0u))) + _GLF_IDENTITY(((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, max(subgroup_local_id, subgroup_local_id))), max(_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, max(subgroup_local_id, subgroup_local_id))), ((_GLF_IDENTITY(subgroup_local_id, max(subgroup_local_id, subgroup_local_id)))) * 1u), (_GLF_IDENTITY(subgroup_local_id, max(subgroup_local_id, subgroup_local_id))))) / uint(_GLF_ONE(_GLF_IDENTITY(1.0, min(1.0, 1.0)), injectionSwitch.y))) + 1, max(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, max(subgroup_local_id, _GLF_IDENTITY(subgroup_local_id, 0u ^ (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | (subgroup_local_id)))))), _GLF_IDENTITY(max(subgroup_local_id, subgroup_local_id), clamp(max(subgroup_local_id, subgroup_local_id), max(subgroup_local_id, subgroup_local_id), max(subgroup_local_id, subgroup_local_id))))) / uint(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), clamp(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y))))) + 1, (_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, max(subgroup_local_id, subgroup_local_id))) / _GLF_IDENTITY(uint(_GLF_ONE(1.0, injectionSwitch.y)), (uint(_GLF_ONE(1.0, injectionSwitch.y))) << (0u | 0u))) + 1) ^ 0u), _GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, max(subgroup_local_id, subgroup_local_id))) / uint(_GLF_ONE(1.0, injectionSwitch.y))) + 1))) % subgroup_size), (((_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, max(subgroup_local_id, subgroup_local_id)), clamp(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, max(subgroup_local_id, subgroup_local_id)), (true ? _GLF_IDENTITY(subgroup_local_id, max(subgroup_local_id, subgroup_local_id)) : _GLF_FUZZED(num_workgroup))), _GLF_IDENTITY(subgroup_local_id, max(subgroup_local_id, subgroup_local_id)), _GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, max(subgroup_local_id, subgroup_local_id)), ~ (~ (_GLF_IDENTITY(subgroup_local_id, max(subgroup_local_id, subgroup_local_id)))))))) / uint(_GLF_ONE(_GLF_IDENTITY(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, (1.0) * 1.0)) - 0.0), float(mat4x2(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, (1.0) * 1.0)) - 0.0), 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0))), _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0)))) + 1) % subgroup_size)) << _GLF_IDENTITY(0u, _GLF_IDENTITY(0u, (0u) / uint(_GLF_ONE(1.0, injectionSwitch.y))) | (0u))), _GLF_IDENTITY(workgroup_base + subgroup_id * _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (subgroup_size) >> 0u), (subgroup_size) | (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (subgroup_size) | 0u), (_GLF_IDENTITY(subgroup_size, (subgroup_size) | 0u)) - 0u))) + _GLF_IDENTITY(((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, max(subgroup_local_id, subgroup_local_id))), max(_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, max(subgroup_local_id, subgroup_local_id))), ((_GLF_IDENTITY(subgroup_local_id, max(subgroup_local_id, subgroup_local_id)))) * 1u), (_GLF_IDENTITY(subgroup_local_id, max(subgroup_local_id, subgroup_local_id))))) / uint(_GLF_ONE(_GLF_IDENTITY(1.0, min(1.0, 1.0)), injectionSwitch.y))) + 1, max(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, max(subgroup_local_id, _GLF_IDENTITY(subgroup_local_id, 0u ^ (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | (subgroup_local_id)))))), _GLF_IDENTITY(max(subgroup_local_id, subgroup_local_id), clamp(max(subgroup_local_id, subgroup_local_id), max(subgroup_local_id, subgroup_local_id), max(subgroup_local_id, subgroup_local_id))))) / uint(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), clamp(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y))))) + 1, (_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, max(subgroup_local_id, subgroup_local_id))) / _GLF_IDENTITY(uint(_GLF_ONE(1.0, injectionSwitch.y)), (uint(_GLF_ONE(1.0, injectionSwitch.y))) << (0u | 0u))) + 1) ^ 0u), _GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, max(subgroup_local_id, subgroup_local_id))) / uint(_GLF_ONE(1.0, injectionSwitch.y))) + 1))) % subgroup_size), (((_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, max(subgroup_local_id, subgroup_local_id)), clamp(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, max(subgroup_local_id, subgroup_local_id)), (true ? _GLF_IDENTITY(subgroup_local_id, max(subgroup_local_id, subgroup_local_id)) : _GLF_FUZZED(num_workgroup))), _GLF_IDENTITY(subgroup_local_id, max(subgroup_local_id, subgroup_local_id)), _GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, max(subgroup_local_id, subgroup_local_id)), ~ (~ (_GLF_IDENTITY(subgroup_local_id, max(subgroup_local_id, subgroup_local_id)))))))) / uint(_GLF_ONE(_GLF_IDENTITY(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, (1.0) * 1.0)) - 0.0), float(mat4x2(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, (1.0) * 1.0)) - 0.0), 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0))), _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0)))) + 1) % subgroup_size)) << _GLF_IDENTITY(0u, _GLF_IDENTITY(0u, (0u) / uint(_GLF_ONE(1.0, injectionSwitch.y))) | (0u))), (workgroup_base + subgroup_id * _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (subgroup_size) >> 0u), (subgroup_size) | (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (subgroup_size) | 0u), (_GLF_IDENTITY(subgroup_size, (subgroup_size) | 0u)) - 0u))) + _GLF_IDENTITY(((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, max(subgroup_local_id, subgroup_local_id))), max(_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, max(subgroup_local_id, subgroup_local_id))), ((_GLF_IDENTITY(subgroup_local_id, max(subgroup_local_id, subgroup_local_id)))) * 1u), (_GLF_IDENTITY(subgroup_local_id, max(subgroup_local_id, subgroup_local_id))))) / uint(_GLF_ONE(_GLF_IDENTITY(1.0, min(1.0, 1.0)), injectionSwitch.y))) + 1, max(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, max(subgroup_local_id, _GLF_IDENTITY(subgroup_local_id, 0u ^ (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | (subgroup_local_id)))))), _GLF_IDENTITY(max(subgroup_local_id, subgroup_local_id), clamp(max(subgroup_local_id, subgroup_local_id), max(subgroup_local_id, subgroup_local_id), max(subgroup_local_id, subgroup_local_id))))) / uint(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), clamp(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y))))) + 1, (_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, max(subgroup_local_id, subgroup_local_id))) / _GLF_IDENTITY(uint(_GLF_ONE(1.0, injectionSwitch.y)), (uint(_GLF_ONE(1.0, injectionSwitch.y))) << (0u | 0u))) + 1) ^ 0u), _GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, max(subgroup_local_id, subgroup_local_id))) / uint(_GLF_ONE(1.0, injectionSwitch.y))) + 1))) % subgroup_size), (((_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, max(subgroup_local_id, subgroup_local_id)), clamp(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, max(subgroup_local_id, subgroup_local_id)), (true ? _GLF_IDENTITY(subgroup_local_id, max(subgroup_local_id, subgroup_local_id)) : _GLF_FUZZED(num_workgroup))), _GLF_IDENTITY(subgroup_local_id, max(subgroup_local_id, subgroup_local_id)), _GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, max(subgroup_local_id, subgroup_local_id)), ~ (~ (_GLF_IDENTITY(subgroup_local_id, max(subgroup_local_id, subgroup_local_id)))))))) / uint(_GLF_ONE(_GLF_IDENTITY(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, (1.0) * 1.0)) - 0.0), float(mat4x2(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, (1.0) * 1.0)) - 0.0), 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0))), _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0)))) + 1) % subgroup_size)) << _GLF_IDENTITY(0u, _GLF_IDENTITY(0u, (0u) / uint(_GLF_ONE(1.0, injectionSwitch.y))) | (0u)))) << 0u)));
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, true, false)), bool(bvec2(_GLF_IDENTITY(bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, true, false)), false || (bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, true, false)))), true))))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(! (! _GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && ((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))), bool(bool(! (! _GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && ((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))))))), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(! (! _GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && ((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))), bool(bool(! (! _GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && ((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)), _GLF_IDENTITY(bool(bool(bool(bvec3(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(! (! _GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && ((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))), bool(bool(! (! _GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && ((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)))), (bool(bool(bool(bvec3(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(! (! _GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && ((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))), bool(bool(! (! _GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && ((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))))) && true))), false || (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(! (! _GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && ((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))), bool(bool(! (! _GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && ((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))))))), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(! (! _GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && ((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))), bool(bool(! (! _GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && ((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)), _GLF_IDENTITY(bool(bool(bool(bvec3(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(! (! _GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && ((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))), bool(bool(! (! _GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && ((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)))), (bool(bool(bool(bvec3(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(! (! _GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && ((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))), bool(bool(! (! _GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && ((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))))) && true))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(! (! _GLF_IDENTITY(_GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && ((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))), (_GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(false || (_GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && ((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), false || (false || (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || ((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), true && ((_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y)))))))))))) && true)), bool(bool(! (! _GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)), (bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))) && true))), false || (_GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(3.2, 97.55)))).y))), _GLF_IDENTITY(true, ! (! (true))) && ((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))))))), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(! (! _GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && ((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))), bool(bool(! (! _GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && ((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)), _GLF_IDENTITY(bool(bool(bool(bvec3(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(! (! _GLF_IDENTITY((_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), true && (! ((injectionSwitch.x > injectionSwitch.y))))))) || false))), false || (_GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(false || (_GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && ((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), bool(bvec2(false || (_GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && ((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), false))))))), bool(bool(! (! _GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && ((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))))))), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (injectionSwitch.x < injectionSwitch.y))))))), false)))), (bool(bool(bool(bvec3(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(! (! _GLF_IDENTITY((_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y))))), false || (_GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && ((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))), bool(bool(! (! _GLF_IDENTITY(_GLF_IDENTITY((_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(2.0), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(50.78)), bvec2(true, false))).x > injectionSwitch.y))), true && ((_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(2.0), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(50.78)), bvec2(true, false))).x > injectionSwitch.y))))), false || (_GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && ((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))))) && true))))))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y)))))))), bool(bool(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false)) || (false)), (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 atomicStore(buf[_GLF_IDENTITY(virtual_gid, (virtual_gid) * (_GLF_IDENTITY(1u & _GLF_IDENTITY(1u, (0u | 1u) * _GLF_IDENTITY((_GLF_IDENTITY(1u, min(1u, _GLF_IDENTITY(_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, ~ (~ (1u)))) | 0u), (_GLF_IDENTITY(_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, ~ (~ (1u)))) | _GLF_IDENTITY(0u, max(0u, _GLF_IDENTITY(0u, clamp(0u, 0u, 0u))))), (_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, ~ (~ (1u)))) | _GLF_IDENTITY(0u, (0u) / 1u))) >> 0u)) | (_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, ~ (~ (1u)))) | 0u)))))), max((_GLF_IDENTITY(1u, _GLF_IDENTITY(min(1u, _GLF_IDENTITY(_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, ~ (~ (1u)))) | 0u), (_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, ~ (~ (1u)))) | 0u)) | (_GLF_IDENTITY(1u, _GLF_IDENTITY((_GLF_IDENTITY(1u, ~ (~ (1u)))) | 0u, (_GLF_IDENTITY((_GLF_IDENTITY(1u, ~ (~ (1u)))) | 0u, (_GLF_IDENTITY((_GLF_IDENTITY(1u, ~ (~ (1u)))) | 0u, min((_GLF_IDENTITY(1u, ~ (~ (1u)))) | 0u, (_GLF_IDENTITY(1u, ~ (~ (1u)))) | 0u))) << 0u)) | (0u << _GLF_IDENTITY(uint(0u), uint(0u)))))))), ~ (~ (min(1u, _GLF_IDENTITY(_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, ~ (~ (1u)))) | 0u), (_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, ~ (~ (1u)))) | 0u)) | (_GLF_IDENTITY(1u, _GLF_IDENTITY((_GLF_IDENTITY(1u, ~ (~ (1u)))) | 0u, _GLF_IDENTITY((_GLF_IDENTITY((_GLF_IDENTITY(1u, ~ (~ (1u)))) | 0u, (_GLF_IDENTITY((_GLF_IDENTITY(1u, ~ (~ (1u)))) | 0u, min((_GLF_IDENTITY(1u, ~ (~ (1u)))) | 0u, (_GLF_IDENTITY(1u, ~ (~ (1u)))) | 0u))) << 0u)) | (0u << _GLF_IDENTITY(uint(0u), uint(0u))), ~ (~ (_GLF_IDENTITY((_GLF_IDENTITY((_GLF_IDENTITY(1u, ~ (~ (1u)))) | 0u, (_GLF_IDENTITY((_GLF_IDENTITY(1u, ~ (~ (1u)))) | 0u, min((_GLF_IDENTITY(1u, ~ (~ (1u)))) | 0u, (_GLF_IDENTITY(1u, ~ (~ (1u)))) | 0u))) << 0u)) | (0u << _GLF_IDENTITY(uint(0u), uint(0u))), max((_GLF_IDENTITY((_GLF_IDENTITY(1u, ~ (~ (1u)))) | 0u, (_GLF_IDENTITY((_GLF_IDENTITY(1u, ~ (~ (1u)))) | 0u, min((_GLF_IDENTITY(1u, ~ (~ (1u)))) | 0u, (_GLF_IDENTITY(1u, ~ (~ (1u)))) | 0u))) << 0u)) | (0u << _GLF_IDENTITY(uint(0u), uint(0u))), _GLF_IDENTITY((_GLF_IDENTITY((_GLF_IDENTITY(1u, ~ (~ (1u)))) | 0u, (_GLF_IDENTITY((_GLF_IDENTITY(1u, ~ (~ (1u)))) | 0u, min((_GLF_IDENTITY(1u, ~ (~ (1u)))) | 0u, (_GLF_IDENTITY(1u, ~ (~ (1u)))) | 0u))) << 0u)) | (0u << _GLF_IDENTITY(uint(0u), uint(0u))), min((_GLF_IDENTITY((_GLF_IDENTITY(1u, ~ (~ (1u)))) | 0u, (_GLF_IDENTITY((_GLF_IDENTITY(1u, ~ (~ (1u)))) | 0u, min((_GLF_IDENTITY(1u, ~ (~ (1u)))) | 0u, (_GLF_IDENTITY(1u, ~ (~ (1u)))) | 0u))) << 0u)) | (0u << _GLF_IDENTITY(uint(0u), uint(0u))), (_GLF_IDENTITY((_GLF_IDENTITY(1u, ~ (~ (1u)))) | 0u, (_GLF_IDENTITY((_GLF_IDENTITY(1u, ~ (~ (1u)))) | 0u, min((_GLF_IDENTITY(1u, ~ (~ (1u)))) | 0u, (_GLF_IDENTITY(1u, ~ (~ (1u)))) | 0u))) << 0u)) | (0u << _GLF_IDENTITY(uint(0u), uint(0u)))))))))))))))))))), (_GLF_IDENTITY(1u, min(1u, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1u, (1u) - 0u), (_GLF_IDENTITY(1u, ~ (~ (1u)))) | 0u), (_GLF_IDENTITY(1u, _GLF_IDENTITY((_GLF_IDENTITY(1u, ~ (~ (1u)))) | 0u, 0u ^ ((_GLF_IDENTITY(1u, ~ (~ (1u)))) | 0u)))) | (_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, ~ (~ (1u)))) | 0u))))))))), clamp(_GLF_IDENTITY(1u & 1u, uint(uvec2(_GLF_IDENTITY(1u & 1u, uint(uvec2(_GLF_IDENTITY(1u, ~ (_GLF_IDENTITY(~ (1u), uint(_GLF_IDENTITY(uvec3(~ (1u), 1u, 1u), uvec3(0u, 0u, 0u) ^ (uvec3(~ (1u), 1u, 1u))))))) & 1u, _GLF_IDENTITY(0u, (0u) | (0u))))), 1u))), _GLF_IDENTITY(1u & _GLF_IDENTITY(_GLF_IDENTITY(1u, (false ? _GLF_FUZZED(workgroup_base) : _GLF_IDENTITY(1u, min(1u, 1u)))), clamp(1u, 1u, 1u)), uint(uvec2(1u & _GLF_IDENTITY(_GLF_IDENTITY(1u, (false ? _GLF_FUZZED(workgroup_base) : _GLF_IDENTITY(1u, min(1u, 1u)))), clamp(1u, 1u, 1u)), (_GLF_IDENTITY(1u, (1u) ^ 0u) & 1u)))), _GLF_IDENTITY(_GLF_IDENTITY(1u, (1u) >> 0u), (_GLF_IDENTITY(1u, (1u) >> 0u)) / 1u) & 1u))))], _GLF_IDENTITY(uint(1), (uint(1)) >> 0u), 4, 64, 4);
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, ! (! (false)))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, false || (false)))))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(subgroup_local_id + 1 < subgroup_size)
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > _GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, float(mat4(injectionSwitch.y, 0.0, 0.0, 0.0, 0.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 1.0, 1.0, 1.0, sin(0.0), _GLF_IDENTITY(dot(vec3(1.0, 1.0, 1.0), _GLF_IDENTITY(vec3(0.0, 0.0, 0.0), clamp(_GLF_IDENTITY(vec3(0.0, 0.0, 0.0), mix(vec3((vec3(0.0, 0.0, 0.0))[0], (vec3(0.0, 0.0, 0.0))[1], _GLF_FUZZED(2.9)), vec3(_GLF_FUZZED((6.7)), _GLF_FUZZED(1568.0762), (vec3(0.0, 0.0, 0.0))[2]), bvec3(false, false, true))), vec3(0.0, 0.0, 0.0), vec3(0.0, 0.0, 0.0)))), dot(vec3(1.0, 1.0, 1.0), vec3(0.0, 0.0, 0.0))), 1.0, 0.0, log(1.0))))))))))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true)), bool(bvec4((injectionSwitch.x > injectionSwitch.y), false, _GLF_IDENTITY(false, ! (! (false))), false)))) || _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false)))))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)))))) < injectionSwitch.y)) && (false))))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
      barrier();
     barrier();
    }
   atomicStore(buf[next_virtual_gid], uint(2), 4, 64, 4);
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(14.78) : injectionSwitch.y))))))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, false || (false))))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(-473.863) : injectionSwitch.y))))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(mat3(injectionSwitch, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0))).y)), false || (_GLF_FALSE(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) && true)) || false), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(mat3(injectionSwitch, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0))).y))))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false), bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false), true, true, true))), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false))))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, sqrt(vec2(0.0, 0.0)) + (injectionSwitch)).y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x) / 1.0) > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true)) || false)))))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   subgroupAll(_GLF_IDENTITY(false, true && (false)));
  }
 else
  {
   if(_GLF_DEAD(false))
    barrier();
   atomicStore(buf[_GLF_IDENTITY(next_virtual_gid, _GLF_IDENTITY((_GLF_IDENTITY(next_virtual_gid, uint(_GLF_ZERO(0.0, injectionSwitch.x)) + (next_virtual_gid))), ((_GLF_IDENTITY(next_virtual_gid, uint(_GLF_ZERO(0.0, injectionSwitch.x)) + (next_virtual_gid)))) >> (1u ^ uint(_GLF_ONE(1.0, injectionSwitch.y)))) - (10623u & 0u))], uint(2), 4, 64, _GLF_IDENTITY(4, (4) ^ (0 >> _GLF_IDENTITY(_GLF_IDENTITY(int(6), (true ? int(6) : _GLF_FUZZED(-33852))), int(6)))));
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec4(_GLF_DEAD(false), _GLF_IDENTITY(true, (true) && true), false, true)), false || (_GLF_IDENTITY(bool(bvec4(_GLF_DEAD(false), true, false, true)), bool(bvec4(_GLF_IDENTITY(bool(bvec4(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, false, false, false)))), true, _GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, bool(bvec4(false, false, false, false))))), true)), bool(bvec3(bool(bvec4(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, false, false, false)))), true, _GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, bool(bvec4(false, false, false, false))))), true)), false, true))), true, true, false)))))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)), _GLF_IDENTITY(injectionSwitch.y, float(mat2x3(injectionSwitch.y, 1.0, 0.0, 0.0, log(1.0), 0.0))), injectionSwitch.y))))))
        barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat4x3(injectionSwitch, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(1.0, (1.0) / 1.0), 1.0, 1.0, 1.0)), mix(vec2(_GLF_FUZZED(-1.6), _GLF_IDENTITY((vec2(mat4x3(injectionSwitch, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(1.0, (1.0) / 1.0), 1.0, 1.0, 1.0)))[1], 0.0 + ((vec2(mat4x3(injectionSwitch, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(1.0, (1.0) / 1.0), 1.0, 1.0, 1.0)))[1]))), vec2((vec2(mat4x3(injectionSwitch, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(1.0, (1.0) / 1.0), 1.0, 1.0, 1.0)))[0], _GLF_FUZZED(-9167.7513)), bvec2(true, false)))), clamp(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat4x3(injectionSwitch, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(1.0, (1.0) / 1.0), 1.0, 1.0, 1.0)), mix(vec2(_GLF_FUZZED(-1.6), _GLF_IDENTITY((vec2(mat4x3(injectionSwitch, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(1.0, (1.0) / 1.0), 1.0, 1.0, 1.0)))[1], 0.0 + ((vec2(mat4x3(injectionSwitch, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(1.0, (1.0) / 1.0), 1.0, 1.0, 1.0)))[1]))), vec2((vec2(mat4x3(injectionSwitch, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(1.0, (1.0) / 1.0), 1.0, 1.0, 1.0)))[0], _GLF_FUZZED(-9167.7513)), bvec2(true, false)))), _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat4x3(injectionSwitch, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(1.0, (1.0) / 1.0), 1.0, 1.0, 1.0)), mix(vec2(_GLF_FUZZED(-1.6), _GLF_IDENTITY((vec2(mat4x3(injectionSwitch, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(1.0, (1.0) / 1.0), 1.0, 1.0, 1.0)))[1], 0.0 + ((vec2(mat4x3(injectionSwitch, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(1.0, (1.0) / 1.0), 1.0, 1.0, 1.0)))[1]))), vec2((vec2(mat4x3(injectionSwitch, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(1.0, (1.0) / 1.0), 1.0, 1.0, 1.0)))[0], _GLF_FUZZED(-9167.7513)), bvec2(true, false)))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat4x3(injectionSwitch, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(1.0, (1.0) / 1.0), 1.0, 1.0, 1.0)), mix(vec2(_GLF_FUZZED(-1.6), _GLF_IDENTITY((vec2(mat4x3(injectionSwitch, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(1.0, (1.0) / 1.0), 1.0, 1.0, 1.0)))[1], 0.0 + ((vec2(mat4x3(injectionSwitch, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(1.0, (1.0) / 1.0), 1.0, 1.0, 1.0)))[1]))), vec2((vec2(mat4x3(injectionSwitch, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(1.0, (1.0) / 1.0), 1.0, 1.0, 1.0)))[0], _GLF_FUZZED(-9167.7513)), bvec2(true, false)))), clamp(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat4x3(injectionSwitch, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(1.0, (1.0) / 1.0), 1.0, 1.0, 1.0)), mix(vec2(_GLF_FUZZED(-1.6), _GLF_IDENTITY((vec2(mat4x3(injectionSwitch, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(1.0, (1.0) / 1.0), 1.0, 1.0, 1.0)))[1], 0.0 + ((vec2(mat4x3(injectionSwitch, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(1.0, (1.0) / 1.0), 1.0, 1.0, 1.0)))[1]))), vec2((vec2(mat4x3(injectionSwitch, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(1.0, (1.0) / 1.0), 1.0, 1.0, 1.0)))[0], _GLF_FUZZED(-9167.7513)), bvec2(true, false)))), _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat4x3(injectionSwitch, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(1.0, (1.0) / 1.0), 1.0, 1.0, 1.0)), mix(vec2(_GLF_FUZZED(-1.6), _GLF_IDENTITY((vec2(mat4x3(injectionSwitch, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(1.0, (1.0) / 1.0), 1.0, 1.0, 1.0)))[1], 0.0 + ((vec2(mat4x3(injectionSwitch, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(1.0, (1.0) / 1.0), 1.0, 1.0, 1.0)))[1]))), vec2((vec2(mat4x3(injectionSwitch, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(1.0, (1.0) / 1.0), 1.0, 1.0, 1.0)))[0], _GLF_FUZZED(-9167.7513)), bvec2(true, false)))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat4x3(injectionSwitch, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(1.0, (1.0) / 1.0), 1.0, 1.0, 1.0)), mix(vec2(_GLF_FUZZED(-1.6), _GLF_IDENTITY((vec2(mat4x3(injectionSwitch, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(1.0, (1.0) / 1.0), 1.0, 1.0, 1.0)))[1], 0.0 + ((vec2(mat4x3(injectionSwitch, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(1.0, (1.0) / 1.0), 1.0, 1.0, 1.0)))[1]))), vec2((vec2(mat4x3(injectionSwitch, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(1.0, (1.0) / 1.0), 1.0, 1.0, 1.0)))[0], _GLF_FUZZED(-9167.7513)), bvec2(true, false)))), (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat4x3(injectionSwitch, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(1.0, (1.0) / 1.0), 1.0, 1.0, 1.0)), mix(vec2(_GLF_FUZZED(-1.6), _GLF_IDENTITY((vec2(mat4x3(injectionSwitch, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(1.0, (1.0) / 1.0), 1.0, 1.0, 1.0)))[1], 0.0 + ((vec2(mat4x3(injectionSwitch, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(1.0, (1.0) / 1.0), 1.0, 1.0, 1.0)))[1]))), vec2((vec2(mat4x3(injectionSwitch, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(1.0, (1.0) / 1.0), 1.0, 1.0, 1.0)))[0], _GLF_FUZZED(-9167.7513)), bvec2(true, false))))) / vec2(1.0, 1.0))))))) - _GLF_IDENTITY(vec2(0.0, 0.0), vec2(0.0, 0.0) + (vec2(0.0, 0.0)))).x, mix(float(_GLF_FUZZED(-4.3)), float(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, vec2(mat4x3(injectionSwitch, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(_GLF_IDENTITY(1.0, (1.0) * 1.0), _GLF_IDENTITY((1.0) / 1.0, max((1.0) / 1.0, (1.0) / 1.0))), 1.0, 1.0, 1.0)))) - _GLF_IDENTITY(vec2(0.0, 0.0), vec2(0.0, 0.0) + (vec2(0.0, 0.0)))).x), bool(true))) > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat4x3(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(1.0, (1.0) / 1.0), 1.0, 1.0, 1.0)), mix(vec2(_GLF_FUZZED(-1.6), _GLF_IDENTITY((vec2(mat4x3(injectionSwitch, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(1.0, (1.0) / 1.0), 1.0, 1.0, 1.0)))[1], 0.0 + _GLF_IDENTITY(((vec2(mat4x3(injectionSwitch, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(1.0, (1.0) / 1.0), 1.0, 1.0, 1.0)))[1]), _GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, determinant(mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)), 1.0, 0.0)), dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, determinant(mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)), 1.0, 0.0))) * (((vec2(mat4x3(injectionSwitch, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(1.0, (1.0) / 1.0), 1.0, 1.0, 1.0)))[1]))))), vec2((vec2(mat4x3(injectionSwitch, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(1.0, _GLF_IDENTITY((1.0) / 1.0, 0.0 + ((1.0) / 1.0))), 1.0, 1.0, 1.0)))[0], _GLF_FUZZED(-9167.7513)), bvec2(true, false))))) - _GLF_IDENTITY(vec2(0.0, 0.0), vec2(0.0, 0.0) + (vec2(0.0, 0.0)))).x, mix(float(_GLF_FUZZED(-4.3)), float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, vec2(mat4x3(injectionSwitch, 0.0, 1.0, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-1.4)), float(0.0), bool(true))), 0.0, 0.0, 1.0, _GLF_IDENTITY(1.0, (1.0) / 1.0), 1.0, 1.0, 1.0)))) - _GLF_IDENTITY(vec2(0.0, 0.0), vec2(0.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0))) + (vec2(0.0, 0.0)))).x, clamp(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, vec2(mat4x3(injectionSwitch, 0.0, 1.0, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-1.4)), float(0.0), bool(true))), 0.0, 0.0, 1.0, _GLF_IDENTITY(1.0, (1.0) / 1.0), 1.0, 1.0, 1.0)))) - _GLF_IDENTITY(vec2(0.0, 0.0), vec2(0.0, 0.0) + (_GLF_IDENTITY(vec2(0.0, 0.0), vec2(mat3(vec2(0.0, 0.0), 1.0, 0.0, 1.0, 0.0, sin(0.0), 0.0, 1.0)))))).x, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, vec2(mat4x3(injectionSwitch, 0.0, 1.0, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-1.4)), float(0.0), bool(true))), 0.0, 0.0, 1.0, _GLF_IDENTITY(1.0, (1.0) / 1.0), 1.0, 1.0, 1.0)))) - _GLF_IDENTITY(_GLF_IDENTITY(vec2(0.0, 0.0), vec2(0.0, 0.0) + (vec2(0.0, 0.0))), (true ? _GLF_IDENTITY(vec2(0.0, 0.0), vec2(0.0, 0.0) + (vec2(0.0, 0.0))) : _GLF_FUZZED(sin(vec2(8398.3210, 8.2)))))).x, clamp(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, vec2(mat4x3(injectionSwitch, 0.0, 1.0, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-1.4)), float(0.0), bool(true))), 0.0, 0.0, 1.0, _GLF_IDENTITY(1.0, (1.0) / 1.0), 1.0, 1.0, 1.0)))) - _GLF_IDENTITY(vec2(0.0, 0.0), vec2(0.0, 0.0) + (vec2(0.0, 0.0)))).x, _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, vec2(mat4x3(injectionSwitch, 0.0, 1.0, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-1.4)), float(0.0), bool(true))), 0.0, 0.0, 1.0, _GLF_IDENTITY(1.0, (1.0) / 1.0), 1.0, 1.0, 1.0)))) - _GLF_IDENTITY(vec2(0.0, 0.0), vec2(0.0, 0.0) + (vec2(0.0, 0.0)))).x, _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, vec2(mat4x3(injectionSwitch, 0.0, 1.0, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-1.4)), float(0.0), bool(true))), 0.0, 0.0, 1.0, _GLF_IDENTITY(1.0, _GLF_IDENTITY((1.0), min((1.0), _GLF_IDENTITY((1.0), max((1.0), (1.0))))) / 1.0), _GLF_IDENTITY(1.0, (1.0) + sin(0.0)), 1.0, 1.0)))) - _GLF_IDENTITY(vec2(0.0, 0.0), vec2(0.0, 0.0) + (vec2(0.0, 0.0)))).x)), _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, vec2(mat4x3(injectionSwitch, 0.0, 1.0, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-1.4)), float(0.0), bool(_GLF_IDENTITY(true, bool(bvec2(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), 0.0, 0.0, 1.0, _GLF_IDENTITY(1.0, (1.0) / 1.0), 1.0, 1.0, 1.0)))) - _GLF_IDENTITY(vec2(0.0, 0.0), vec2(0.0, 0.0) + (vec2(_GLF_IDENTITY(0.0, min(0.0, _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-1.9))))), 0.0)))).x))), bool(true))) > injectionSwitch.y))))), bool(bvec2(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat4x3(injectionSwitch, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(1.0, (1.0) / 1.0), 1.0, 1.0, 1.0)), mix(vec2(_GLF_FUZZED(-1.6), _GLF_IDENTITY((vec2(mat4x3(injectionSwitch, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(1.0, (1.0) / 1.0), 1.0, 1.0, 1.0)))[1], 0.0 + ((vec2(mat4x3(injectionSwitch, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(1.0, (1.0) / 1.0), 1.0, 1.0, 1.0)))[1]))), vec2((vec2(mat4x3(injectionSwitch, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(1.0, (1.0) / 1.0), 1.0, 1.0, 1.0)))[0], _GLF_FUZZED(-9167.7513)), bvec2(true, false)))), clamp(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat4x3(injectionSwitch, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(1.0, (1.0) / 1.0), 1.0, 1.0, 1.0)), mix(vec2(_GLF_FUZZED(-1.6), _GLF_IDENTITY((vec2(mat4x3(injectionSwitch, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(1.0, (1.0) / 1.0), 1.0, 1.0, 1.0)))[1], 0.0 + ((vec2(mat4x3(injectionSwitch, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(1.0, (1.0) / 1.0), 1.0, 1.0, 1.0)))[1]))), vec2((vec2(mat4x3(injectionSwitch, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(1.0, (1.0) / 1.0), 1.0, 1.0, 1.0)))[0], _GLF_FUZZED(-9167.7513)), bvec2(true, false)))), _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat4x3(injectionSwitch, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(1.0, (1.0) / 1.0), 1.0, 1.0, 1.0)), mix(vec2(_GLF_FUZZED(-1.6), _GLF_IDENTITY((vec2(mat4x3(injectionSwitch, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(1.0, (1.0) / 1.0), 1.0, 1.0, 1.0)))[1], 0.0 + ((vec2(mat4x3(injectionSwitch, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(1.0, (1.0) / 1.0), 1.0, 1.0, 1.0)))[1]))), vec2((vec2(mat4x3(injectionSwitch, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(1.0, (1.0) / 1.0), 1.0, 1.0, 1.0)))[0], _GLF_FUZZED(-9167.7513)), bvec2(true, false)))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat4x3(injectionSwitch, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(1.0, (1.0) / 1.0), 1.0, 1.0, 1.0)), mix(vec2(_GLF_FUZZED(-1.6), _GLF_IDENTITY((vec2(mat4x3(injectionSwitch, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(1.0, (1.0) / 1.0), 1.0, 1.0, 1.0)))[1], 0.0 + ((vec2(mat4x3(injectionSwitch, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(1.0, (1.0) / 1.0), 1.0, 1.0, 1.0)))[1]))), vec2((vec2(mat4x3(injectionSwitch, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(1.0, (1.0) / 1.0), 1.0, 1.0, 1.0)))[0], _GLF_FUZZED(-9167.7513)), bvec2(true, false)))), clamp(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat4x3(injectionSwitch, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(1.0, (1.0) / 1.0), 1.0, 1.0, 1.0)), mix(vec2(_GLF_FUZZED(-1.6), _GLF_IDENTITY((vec2(mat4x3(injectionSwitch, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(1.0, (1.0) / 1.0), 1.0, 1.0, 1.0)))[1], 0.0 + ((vec2(mat4x3(injectionSwitch, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(1.0, (1.0) / 1.0), 1.0, 1.0, 1.0)))[1]))), vec2((vec2(mat4x3(injectionSwitch, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(1.0, (1.0) / 1.0), 1.0, 1.0, 1.0)))[0], _GLF_FUZZED(-9167.7513)), bvec2(true, false)))), _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat4x3(injectionSwitch, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(1.0, (1.0) / 1.0), 1.0, 1.0, 1.0)), mix(vec2(_GLF_FUZZED(-1.6), _GLF_IDENTITY((vec2(mat4x3(injectionSwitch, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(1.0, (1.0) / 1.0), 1.0, 1.0, 1.0)))[1], 0.0 + ((vec2(mat4x3(injectionSwitch, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(1.0, (1.0) / 1.0), 1.0, 1.0, 1.0)))[1]))), vec2((vec2(mat4x3(injectionSwitch, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(1.0, (1.0) / 1.0), 1.0, 1.0, 1.0)))[0], _GLF_FUZZED(-9167.7513)), bvec2(true, false)))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat4x3(injectionSwitch, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(1.0, (1.0) / 1.0), 1.0, 1.0, 1.0)), mix(vec2(_GLF_FUZZED(-1.6), _GLF_IDENTITY((vec2(mat4x3(injectionSwitch, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(1.0, (1.0) / 1.0), 1.0, 1.0, 1.0)))[1], 0.0 + ((vec2(mat4x3(injectionSwitch, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(1.0, (1.0) / 1.0), 1.0, 1.0, 1.0)))[1]))), vec2((vec2(mat4x3(injectionSwitch, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(1.0, (1.0) / 1.0), 1.0, 1.0, 1.0)))[0], _GLF_FUZZED(-9167.7513)), bvec2(true, false)))), (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat4x3(injectionSwitch, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(1.0, (1.0) / 1.0), 1.0, 1.0, 1.0)), mix(vec2(_GLF_FUZZED(-1.6), _GLF_IDENTITY((vec2(mat4x3(injectionSwitch, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(1.0, (1.0) / 1.0), 1.0, 1.0, 1.0)))[1], 0.0 + ((vec2(mat4x3(injectionSwitch, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(1.0, (1.0) / 1.0), 1.0, 1.0, 1.0)))[1]))), vec2((vec2(mat4x3(injectionSwitch, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(1.0, (1.0) / 1.0), 1.0, 1.0, 1.0)))[0], _GLF_FUZZED(-9167.7513)), bvec2(true, false))))) / vec2(1.0, 1.0))))))) - _GLF_IDENTITY(vec2(0.0, 0.0), vec2(0.0, 0.0) + (vec2(0.0, 0.0)))).x, mix(float(_GLF_FUZZED(-4.3)), float(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, vec2(mat4x3(injectionSwitch, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(_GLF_IDENTITY(1.0, (1.0) * 1.0), _GLF_IDENTITY((1.0) / 1.0, max((1.0) / 1.0, (1.0) / 1.0))), 1.0, 1.0, 1.0)))) - _GLF_IDENTITY(vec2(0.0, 0.0), vec2(0.0, 0.0) + (vec2(0.0, 0.0)))).x), bool(true))) > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat4x3(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(1.0, (1.0) / 1.0), 1.0, 1.0, 1.0)), mix(vec2(_GLF_FUZZED(-1.6), _GLF_IDENTITY((vec2(mat4x3(injectionSwitch, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(1.0, (1.0) / 1.0), 1.0, 1.0, 1.0)))[1], 0.0 + _GLF_IDENTITY(((vec2(mat4x3(injectionSwitch, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(1.0, (1.0) / 1.0), 1.0, 1.0, 1.0)))[1]), _GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, determinant(mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)), 1.0, 0.0)), dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, determinant(mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)), 1.0, 0.0))) * (((vec2(mat4x3(injectionSwitch, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(1.0, (1.0) / 1.0), 1.0, 1.0, 1.0)))[1]))))), vec2((vec2(mat4x3(injectionSwitch, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(1.0, _GLF_IDENTITY((1.0) / 1.0, 0.0 + ((1.0) / 1.0))), 1.0, 1.0, 1.0)))[0], _GLF_FUZZED(-9167.7513)), bvec2(true, false))))) - _GLF_IDENTITY(vec2(0.0, 0.0), vec2(0.0, 0.0) + (vec2(0.0, 0.0)))).x, mix(float(_GLF_FUZZED(-4.3)), float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, vec2(mat4x3(injectionSwitch, 0.0, 1.0, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-1.4)), float(0.0), bool(true))), 0.0, 0.0, 1.0, _GLF_IDENTITY(1.0, (1.0) / 1.0), 1.0, 1.0, 1.0)))) - _GLF_IDENTITY(vec2(0.0, 0.0), vec2(0.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0))) + (vec2(0.0, 0.0)))).x, clamp(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, vec2(mat4x3(injectionSwitch, 0.0, 1.0, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-1.4)), float(0.0), bool(true))), 0.0, 0.0, 1.0, _GLF_IDENTITY(1.0, (1.0) / 1.0), 1.0, 1.0, 1.0)))) - _GLF_IDENTITY(vec2(0.0, 0.0), vec2(0.0, 0.0) + (_GLF_IDENTITY(vec2(0.0, 0.0), vec2(mat3(vec2(0.0, 0.0), 1.0, 0.0, 1.0, 0.0, sin(0.0), 0.0, 1.0)))))).x, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, vec2(mat4x3(injectionSwitch, 0.0, 1.0, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-1.4)), float(0.0), bool(true))), 0.0, 0.0, 1.0, _GLF_IDENTITY(1.0, (1.0) / 1.0), 1.0, 1.0, 1.0)))) - _GLF_IDENTITY(_GLF_IDENTITY(vec2(0.0, 0.0), vec2(0.0, 0.0) + (vec2(0.0, 0.0))), (true ? _GLF_IDENTITY(vec2(0.0, 0.0), vec2(0.0, 0.0) + (vec2(0.0, 0.0))) : _GLF_FUZZED(sin(vec2(8398.3210, 8.2)))))).x, clamp(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, vec2(mat4x3(injectionSwitch, 0.0, 1.0, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-1.4)), float(0.0), bool(true))), 0.0, 0.0, 1.0, _GLF_IDENTITY(1.0, (1.0) / 1.0), 1.0, 1.0, 1.0)))) - _GLF_IDENTITY(vec2(0.0, 0.0), vec2(0.0, 0.0) + (vec2(0.0, 0.0)))).x, _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, vec2(mat4x3(injectionSwitch, 0.0, 1.0, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-1.4)), float(0.0), bool(true))), 0.0, 0.0, 1.0, _GLF_IDENTITY(1.0, (1.0) / 1.0), 1.0, 1.0, 1.0)))) - _GLF_IDENTITY(vec2(0.0, 0.0), vec2(0.0, 0.0) + (vec2(0.0, 0.0)))).x, _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, vec2(mat4x3(injectionSwitch, 0.0, 1.0, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-1.4)), float(0.0), bool(true))), 0.0, 0.0, 1.0, _GLF_IDENTITY(1.0, _GLF_IDENTITY((1.0), min((1.0), _GLF_IDENTITY((1.0), max((1.0), (1.0))))) / 1.0), _GLF_IDENTITY(1.0, (1.0) + sin(0.0)), 1.0, 1.0)))) - _GLF_IDENTITY(vec2(0.0, 0.0), vec2(0.0, 0.0) + (vec2(0.0, 0.0)))).x)), _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, vec2(mat4x3(injectionSwitch, 0.0, 1.0, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-1.4)), float(0.0), bool(_GLF_IDENTITY(true, bool(bvec2(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), 0.0, 0.0, 1.0, _GLF_IDENTITY(1.0, (1.0) / 1.0), 1.0, 1.0, 1.0)))) - _GLF_IDENTITY(vec2(0.0, 0.0), vec2(0.0, 0.0) + (vec2(_GLF_IDENTITY(0.0, min(0.0, _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-1.9))))), 0.0)))).x))), bool(true))) > injectionSwitch.y))))), true)))))
    {
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
    }
   subgroupAll(true);
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), injectionSwitch)).x, _GLF_IDENTITY((injectionSwitch.x), clamp((injectionSwitch.x), _GLF_IDENTITY((injectionSwitch.x), clamp((injectionSwitch.x), (injectionSwitch.x), (injectionSwitch.x))), _GLF_IDENTITY((injectionSwitch.x), ((injectionSwitch.x)) / 1.0))) + 0.0), 0.0 + (injectionSwitch.x)), (true ? _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, 0.0 + _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).x), (_GLF_IDENTITY((injectionSwitch.x), ((injectionSwitch.x)) + 0.0)) * _GLF_IDENTITY(1.0, max(1.0, 1.0)))), (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(0.0 + _GLF_IDENTITY((injectionSwitch.x), (true ? _GLF_IDENTITY((injectionSwitch.x), min((injectionSwitch.x), (injectionSwitch.x))) : _GLF_FUZZED(3320.9919))), clamp(_GLF_IDENTITY(0.0 + (injectionSwitch.x), _GLF_IDENTITY(float(mat2(0.0 + (injectionSwitch.x), 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0)), (true ? float(mat2(0.0 + (injectionSwitch.x), 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0)) : _GLF_FUZZED(-8.8)))), 0.0 + (injectionSwitch.x), _GLF_IDENTITY(0.0 + (injectionSwitch.x), min(0.0 + (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(float(34797u)), _GLF_FUZZED(-3.1)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(_GLF_IDENTITY(true, ! (! (true))), true))).x), 0.0 + (injectionSwitch.x))))))) + 0.0) : _GLF_FUZZED(973.136))) > injectionSwitch.y))))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, false, false, false)))), true && _GLF_IDENTITY((_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, false, false, false))))), true && ((_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(false, false, false, false))), bool(bvec3(_GLF_IDENTITY(false, bool(bvec4(false, false, false, false))), true, true)))))))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec3(_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(-97.43) : injectionSwitch.x)) > injectionSwitch.y, true, false)))) || false)))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
      barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
  barrier();
}
