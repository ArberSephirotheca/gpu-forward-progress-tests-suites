#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), ! (! (_GLF_WRAPPED_IF_FALSE(false)))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     do
      {
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     while(_GLF_WRAPPED_LOOP(false));
     if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
      barrier();
     if(_GLF_DEAD(false))
      return;
    }
  }
 else
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY((false) && true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY((false) && true, ((false) && true) && true))))))
  {
   if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
    {
     barrier();
    }
   else
    {
    }
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     return;
    }
   else
    {
    }
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), bool(bvec2(! (true), false)))))), (_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), bool(_GLF_IDENTITY(bvec2(! (true), false), bvec2(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(bvec2(! (true), false), bvec2(bvec3(bvec2(! (true), false), true)))), bvec2(bvec2(bvec2(_GLF_IDENTITY(bvec2(! (true), false), bvec2(bvec3(bvec2(! (true), false), true))))))))))))))) && true))
    {
     return;
    }
   else
    {
    }
  }
 uvec3 GLF_merged3_0_1_13_1_1_14_2_1_12subgroup_sizeworkgroup_baseworkgroup_id;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_WRAPPED_IF_TRUE(true))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         barrier();
        }
      }
     else
      {
      }
     if(_GLF_WRAPPED_IF_TRUE(true))
      {
       return;
      }
     else
      {
      }
    }
  }
 else
  {
  }
 if(_GLF_DEAD(false))
  return;
 for(int _injected_loop_counter = (0 | int(_GLF_ONE(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), injectionSwitch.y))); _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
  {
   if(_GLF_DEAD(false))
    continue;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
    break;
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false)), _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), mix(vec2(_GLF_FUZZED(-2.6), _GLF_FUZZED(-825.554)), vec2(_GLF_IDENTITY((mat2(1.0) * (injectionSwitch))[0], clamp((mat2(1.0) * (injectionSwitch))[0], (mat2(1.0) * (injectionSwitch))[0], _GLF_IDENTITY((mat2(1.0) * (injectionSwitch)), (_GLF_IDENTITY(false, false || (false)) ? _GLF_FUZZED(vec2(66.49, -320.765)) : _GLF_IDENTITY((mat2(1.0) * (injectionSwitch)), ((mat2(1.0) * (injectionSwitch))) - vec2(0.0, 0.0))))[0])), (mat2(1.0) * (injectionSwitch))[1]), bvec2(true, true)))).x > _GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), injectionSwitch, injectionSwitch)), injectionSwitch, injectionSwitch)).y), ! (! ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), mix(vec2(_GLF_FUZZED(-2.6), _GLF_FUZZED(-825.554)), vec2(_GLF_IDENTITY((mat2(1.0) * (injectionSwitch))[0], clamp((mat2(1.0) * (injectionSwitch))[0], (mat2(1.0) * (injectionSwitch))[0], (mat2(1.0) * (injectionSwitch))[0])), (mat2(1.0) * (injectionSwitch))[1]), bvec2(true, true)))).x > _GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), injectionSwitch, injectionSwitch)), injectionSwitch, injectionSwitch)).y, bool(bvec2(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), mix(vec2(_GLF_FUZZED(-2.6), _GLF_FUZZED(-825.554)), vec2(_GLF_IDENTITY((mat2(1.0) * (injectionSwitch))[0], clamp((mat2(1.0) * (injectionSwitch))[0], (mat2(1.0) * (injectionSwitch))[0], (mat2(1.0) * (injectionSwitch))[0])), (mat2(1.0) * (injectionSwitch))[1]), bvec2(true, true)))).x > _GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), injectionSwitch, injectionSwitch)), injectionSwitch, injectionSwitch)).y, false))))))))))
    {
     if(_GLF_WRAPPED_IF_TRUE(true))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          break;
         barrier();
        }
      }
     else
      {
      }
     do
      {
       if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec3(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec3(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false, false))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
        barrier();
      }
     while(_GLF_WRAPPED_LOOP(false));
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (false))))))))
      {
       if(_GLF_DEAD(false))
        break;
       continue;
      }
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
       if(_GLF_DEAD(false))
        continue;
      }
     else
      {
       for(int _injected_loop_counter = (_GLF_IDENTITY(1, ~ (_GLF_IDENTITY(_GLF_IDENTITY(~ (_GLF_IDENTITY(1, ~ (~ (1)))), (~ (_GLF_IDENTITY(1, ~ (~ (1))))) - 0), clamp(~ (_GLF_IDENTITY(1, ~ (~ (1)))), ~ (_GLF_IDENTITY(1, ~ (~ (1)))), ~ (_GLF_IDENTITY(_GLF_IDENTITY(1, (false ? _GLF_FUZZED(_injected_loop_counter) : 1)), ~ (~ (1)))))))) ^ _GLF_IDENTITY(_GLF_IDENTITY(1, min(1, 1)), min(_GLF_IDENTITY(_GLF_IDENTITY(1, min(1, 1)), int(_GLF_ZERO(0.0, injectionSwitch.x)) + (_GLF_IDENTITY(1, min(1, 1)))), _GLF_IDENTITY(1, min(1, 1))))); _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter < _GLF_IDENTITY(1, ~ (~ (1))), ! (! (_injected_loop_counter < 1)))); _injected_loop_counter ++)
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
          continue;
         for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
          {
           if(_GLF_DEAD(false))
            return;
          }
        }
      }
     if(_GLF_DEAD(false))
      break;
     if(_GLF_DEAD(false))
      break;
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
      }
     else
      {
       barrier();
       if(_GLF_DEAD(false))
        continue;
      }
    }
  }
 if(_GLF_DEAD(false))
  return;
 uint subgroup_id = gl_SubgroupID;
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_DEAD(false))
  {
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      return;
     if(_GLF_DEAD(false))
      return;
    }
   else
    {
    }
   if(_GLF_DEAD(false))
    return;
   do
    {
     barrier();
    }
   while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, false, false)), true && (bool(bvec3(false, false, false)))))));
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_WRAPPED_IF_TRUE(true))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     else
      {
      }
    }
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
  return;
 for(int _injected_loop_counter = int(_GLF_ZERO(0.0, injectionSwitch.x)); _GLF_WRAPPED_LOOP(_injected_loop_counter != int(_GLF_ONE(1.0, injectionSwitch.y))); _injected_loop_counter ++)
  {
   if(_GLF_DEAD(false))
    break;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      continue;
    }
   else
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     GLF_merged3_0_1_13_1_1_14_2_1_12subgroup_sizeworkgroup_baseworkgroup_id.x = subgroup_size;
    }
  }
 if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
  }
 else
  {
   for(int _injected_loop_counter = ((1 << _GLF_IDENTITY(int(5), _GLF_IDENTITY(int(5), ~ (_GLF_IDENTITY(~ (int(5)), (_GLF_IDENTITY(_GLF_IDENTITY(~ (int(5)), clamp(~ (int(5)), _GLF_IDENTITY(~ (int(5)), (~ (int(5))) | (1 ^ 1)), ~ (int(5)))), min(_GLF_IDENTITY(~ (int(5)), int(ivec3(~ (int(5)), 0, 1))), _GLF_IDENTITY(~ (int(5)), int(ivec2(~ (int(5)), 1)))))) * 1))))) >> _GLF_IDENTITY(int(5), int(5))); _GLF_WRAPPED_LOOP(_injected_loop_counter != int(_GLF_ZERO(_GLF_IDENTITY(0.0, 0.0 + (0.0)), injectionSwitch.x))); _injected_loop_counter --)
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      break;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
          continue;
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          break;
         break;
        }
       do
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          break;
         return;
         if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))
          barrier();
        }
       while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         break;
        }
       for(int _injected_loop_counter = (1 | (1 & 1)); _GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter > int(_GLF_ZERO(0.0, injectionSwitch.x))), true && (_GLF_WRAPPED_LOOP(_injected_loop_counter > int(_GLF_ZERO(0.0, injectionSwitch.x))))); _injected_loop_counter --)
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
           if(_GLF_DEAD(false))
            continue;
           if(_GLF_WRAPPED_IF_TRUE(true))
            {
             barrier();
            }
           else
            {
            }
          }
        }
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_WRAPPED_IF_TRUE(true))
        {
         barrier();
        }
       else
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          break;
        }
      }
    }
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (false))))))))
  return;
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 uint num_workgroup = gl_NumWorkGroups.x;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  return;
 uint workgroup_size = gl_WorkGroupSize.x;
 uint workgroup_id = _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) | (gl_WorkGroupID)).x, (_GLF_IDENTITY(gl_WorkGroupID, _GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupID, (false ? _GLF_FUZZED(GLF_merged3_0_1_13_1_1_14_2_1_12subgroup_sizeworkgroup_baseworkgroup_id) : _GLF_IDENTITY(gl_WorkGroupID, clamp(gl_WorkGroupID, gl_WorkGroupID, gl_WorkGroupID))))) | (gl_WorkGroupID), uvec3(0u, 0u, 0u) ^ (_GLF_IDENTITY((gl_WorkGroupID) | (gl_WorkGroupID), uvec3(0u, 0u, 0u) + ((gl_WorkGroupID) | (gl_WorkGroupID)))))).x) / 1u);
 if(_GLF_DEAD(false))
  return;
 do
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
    }
   else
    {
     if(_GLF_DEAD(false))
      continue;
     _GLF_IDENTITY(GLF_merged3_0_1_13_1_1_14_2_1_12subgroup_sizeworkgroup_baseworkgroup_id.z = workgroup_id, (true ? _GLF_IDENTITY(GLF_merged3_0_1_13_1_1_14_2_1_12subgroup_sizeworkgroup_baseworkgroup_id.z = workgroup_id, (GLF_merged3_0_1_13_1_1_14_2_1_12subgroup_sizeworkgroup_baseworkgroup_id.z = workgroup_id) + 0u) : _GLF_FUZZED(workgroup_id)));
    }
  }
 while(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(false), ! (! (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(false), (_GLF_WRAPPED_LOOP(false)) || false)))));
 uint workgroup_base = _GLF_IDENTITY(workgroup_size * GLF_merged3_0_1_13_1_1_14_2_1_12subgroup_sizeworkgroup_baseworkgroup_id.z, 0u ^ (workgroup_size * GLF_merged3_0_1_13_1_1_14_2_1_12subgroup_sizeworkgroup_baseworkgroup_id.z));
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  return;
 GLF_merged3_0_1_13_1_1_14_2_1_12subgroup_sizeworkgroup_baseworkgroup_id.y = workgroup_base;
 uint virtual_gid = _GLF_IDENTITY(GLF_merged3_0_1_13_1_1_14_2_1_12subgroup_sizeworkgroup_baseworkgroup_id.y + subgroup_id * _GLF_IDENTITY(GLF_merged3_0_1_13_1_1_14_2_1_12subgroup_sizeworkgroup_baseworkgroup_id, uvec3(_GLF_IDENTITY(uvec4(GLF_merged3_0_1_13_1_1_14_2_1_12subgroup_sizeworkgroup_baseworkgroup_id, 0u), _GLF_IDENTITY((uvec4(GLF_merged3_0_1_13_1_1_14_2_1_12subgroup_sizeworkgroup_baseworkgroup_id, 0u)), _GLF_IDENTITY(((uvec4(GLF_merged3_0_1_13_1_1_14_2_1_12subgroup_sizeworkgroup_baseworkgroup_id, 0u))) | ((uvec4(GLF_merged3_0_1_13_1_1_14_2_1_12subgroup_sizeworkgroup_baseworkgroup_id, 0u))), max(((uvec4(GLF_merged3_0_1_13_1_1_14_2_1_12subgroup_sizeworkgroup_baseworkgroup_id, 0u))) | ((uvec4(GLF_merged3_0_1_13_1_1_14_2_1_12subgroup_sizeworkgroup_baseworkgroup_id, 0u))), _GLF_IDENTITY((_GLF_IDENTITY((uvec4(GLF_merged3_0_1_13_1_1_14_2_1_12subgroup_sizeworkgroup_baseworkgroup_id, 0u)), ((uvec4(GLF_merged3_0_1_13_1_1_14_2_1_12subgroup_sizeworkgroup_baseworkgroup_id, 0u))) >> uvec4(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)))), (uvec4(0u, 0u, 0u, 0u) | uvec4(1u, 1u, 1u, 1u)) * (_GLF_IDENTITY((_GLF_IDENTITY((uvec4(GLF_merged3_0_1_13_1_1_14_2_1_12subgroup_sizeworkgroup_baseworkgroup_id, 0u)), ((uvec4(GLF_merged3_0_1_13_1_1_14_2_1_12subgroup_sizeworkgroup_baseworkgroup_id, 0u))) >> uvec4(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)))), uvec4(0u, 0u, 0u, 0u) | ((_GLF_IDENTITY((uvec4(GLF_merged3_0_1_13_1_1_14_2_1_12subgroup_sizeworkgroup_baseworkgroup_id, 0u)), ((uvec4(GLF_merged3_0_1_13_1_1_14_2_1_12subgroup_sizeworkgroup_baseworkgroup_id, 0u))) >> uvec4(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)))))))) | ((uvec4(GLF_merged3_0_1_13_1_1_14_2_1_12subgroup_sizeworkgroup_baseworkgroup_id, 0u)))))) | uvec4(0u, _GLF_IDENTITY(0u, (false ? _GLF_FUZZED(uint(-83822)) : _GLF_IDENTITY(0u, 0u ^ (0u)))), 0u, 0u)))).x + subgroup_local_id, (GLF_merged3_0_1_13_1_1_14_2_1_12subgroup_sizeworkgroup_baseworkgroup_id.y + subgroup_id * _GLF_IDENTITY(GLF_merged3_0_1_13_1_1_14_2_1_12subgroup_sizeworkgroup_baseworkgroup_id, _GLF_IDENTITY(uvec3(_GLF_IDENTITY(uvec4(GLF_merged3_0_1_13_1_1_14_2_1_12subgroup_sizeworkgroup_baseworkgroup_id, 0u), (uvec4(GLF_merged3_0_1_13_1_1_14_2_1_12subgroup_sizeworkgroup_baseworkgroup_id, 0u)) | uvec4(_GLF_IDENTITY(0u, uint(_GLF_IDENTITY(uvec4(_GLF_IDENTITY(0u, 0u | _GLF_IDENTITY((0u), max((0u), (0u)))), 0u, 0u, _GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)), (uint(_GLF_ZERO(0.0, injectionSwitch.x))) | (uint(_GLF_ZERO(0.0, injectionSwitch.x))))), max(uvec4(_GLF_IDENTITY(0u, 0u | _GLF_IDENTITY((0u), max((0u), (0u)))), 0u, 0u, _GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)), (uint(_GLF_ZERO(_GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, min(0.0, 0.0))) + 0.0), injectionSwitch.x))) | (uint(_GLF_ZERO(0.0, injectionSwitch.x))))), uvec4(_GLF_IDENTITY(0u, 0u | _GLF_IDENTITY((0u), max((0u), (0u)))), 0u, 0u, _GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)), (uint(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), max(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))))) | (uint(_GLF_ZERO(0.0, injectionSwitch.x))))))))), 0u, 0u, 0u))), uvec3(uvec4(uvec3(_GLF_IDENTITY(uvec4(GLF_merged3_0_1_13_1_1_14_2_1_12subgroup_sizeworkgroup_baseworkgroup_id, 0u), (uvec4(GLF_merged3_0_1_13_1_1_14_2_1_12subgroup_sizeworkgroup_baseworkgroup_id, 0u)) | uvec4(_GLF_IDENTITY(0u, uint(_GLF_IDENTITY(uvec4(_GLF_IDENTITY(0u, _GLF_IDENTITY(0u | _GLF_IDENTITY((0u), max((0u), (0u))), (0u | _GLF_IDENTITY((0u), max((0u), (0u)))) | (0u | _GLF_IDENTITY((0u), max((0u), (0u)))))), 0u, 0u, _GLF_IDENTITY(uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)))), (uint(_GLF_ZERO(0.0, injectionSwitch.x))) | (uint(_GLF_ZERO(0.0, injectionSwitch.x))))), max(_GLF_IDENTITY(uvec4(_GLF_IDENTITY(0u, 0u | _GLF_IDENTITY((0u), max(_GLF_IDENTITY((0u), ((0u)) * 1u), (0u)))), 0u, 0u, _GLF_IDENTITY(uint(_GLF_ZERO(_GLF_IDENTITY(0.0, mix(float(_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(0.6)), float(0.0), bool(true)))), float(_GLF_FUZZED(-9.3)), bool(false))), injectionSwitch.x)), (uint(_GLF_ZERO(0.0, injectionSwitch.x))) | (uint(_GLF_ZERO(0.0, injectionSwitch.x))))), uvec4(0u, 0u, 0u, 0u) | (_GLF_IDENTITY(uvec4(_GLF_IDENTITY(0u, 0u | _GLF_IDENTITY((0u), max(_GLF_IDENTITY((0u), ((0u)) * 1u), (0u)))), 0u, 0u, _GLF_IDENTITY(uint(_GLF_ZERO(_GLF_IDENTITY(0.0, mix(float(_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(0.6)), float(0.0), bool(true)))), float(_GLF_FUZZED(-9.3)), bool(false))), injectionSwitch.x)), (uint(_GLF_ZERO(0.0, injectionSwitch.x))) | (uint(_GLF_ZERO(0.0, injectionSwitch.x))))), min(uvec4(_GLF_IDENTITY(0u, 0u | _GLF_IDENTITY((0u), max(_GLF_IDENTITY((0u), ((0u)) * 1u), (0u)))), 0u, 0u, _GLF_IDENTITY(uint(_GLF_ZERO(_GLF_IDENTITY(0.0, mix(float(_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(0.6)), float(0.0), bool(true)))), float(_GLF_FUZZED(-9.3)), bool(false))), injectionSwitch.x)), (uint(_GLF_ZERO(0.0, injectionSwitch.x))) | (uint(_GLF_ZERO(0.0, injectionSwitch.x))))), uvec4(_GLF_IDENTITY(0u, 0u | _GLF_IDENTITY((0u), max(_GLF_IDENTITY((0u), ((0u)) * 1u), (0u)))), 0u, 0u, _GLF_IDENTITY(uint(_GLF_ZERO(_GLF_IDENTITY(0.0, mix(float(_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(0.6)), float(0.0), bool(true)))), float(_GLF_FUZZED(-9.3)), bool(false))), injectionSwitch.x)), (uint(_GLF_ZERO(0.0, injectionSwitch.x))) | (uint(_GLF_ZERO(0.0, injectionSwitch.x))))))))), uvec4(_GLF_IDENTITY(_GLF_IDENTITY(0u, 0u | _GLF_IDENTITY((0u), max((0u), (0u)))), (_GLF_IDENTITY(_GLF_IDENTITY(0u, 0u | _GLF_IDENTITY((0u), max((0u), (0u)))), (_GLF_IDENTITY(0u, 0u | _GLF_IDENTITY((0u), max((0u), (0u))))) - 0u)) >> 0u), 0u, 0u, _GLF_IDENTITY(uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(_GLF_IDENTITY(mat3(injectionSwitch, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0), (mat3(injectionSwitch, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0)) + mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))), vec2(vec3(_GLF_IDENTITY(vec2(_GLF_IDENTITY(mat3(injectionSwitch, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0), (mat3(injectionSwitch, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0)) + mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))), (vec2(_GLF_IDENTITY(mat3(injectionSwitch, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0), (mat3(injectionSwitch, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0)) + mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)))) - vec2(0.0, 0.0)), 1.0)))).x)), (uint(_GLF_ZERO(0.0, injectionSwitch.x))) | (uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)), injectionSwitch)).x))))))))), 0u, 0u, 0u))), 0u)))).x + subgroup_local_id) ^ 0u);
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 do
  {
   if(_GLF_DEAD(false))
    return;
  }
 while(_GLF_WRAPPED_LOOP(false));
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   do
    {
     barrier();
    }
   while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  {
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  return;
 uint next_virtual_gid = GLF_merged3_0_1_13_1_1_14_2_1_12subgroup_sizeworkgroup_baseworkgroup_id.y + subgroup_id * GLF_merged3_0_1_13_1_1_14_2_1_12subgroup_sizeworkgroup_baseworkgroup_id.x + ((subgroup_local_id + 1) % GLF_merged3_0_1_13_1_1_14_2_1_12subgroup_sizeworkgroup_baseworkgroup_id.x);
 if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
  {
   do
    {
     barrier();
     if(_GLF_DEAD(false))
      break;
    }
   while(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(false), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(false), bool(bvec2(_GLF_WRAPPED_LOOP(false), true)))), ! (! (bool(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(false), bool(bvec2(_GLF_WRAPPED_LOOP(false), true))))))))));
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  return;
 atomicStore(buf[virtual_gid], uint(1), 4, 64, 4);
 for(int _injected_loop_counter = (_GLF_IDENTITY(0 >> _GLF_IDENTITY(int(6), int(6)), (_GLF_IDENTITY(0 >> _GLF_IDENTITY(int(6), int(6)), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? 0 >> _GLF_IDENTITY(int(6), int(6)) : _GLF_FUZZED((-97315 - 80667))))) / 1)); _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
    continue;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), (bool(false)) && true)))))
    return;
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
    {
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
       if(_GLF_DEAD(false))
        return;
      }
     else
      {
       if(_GLF_DEAD(false))
        return;
      }
    }
   if(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))))), (_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      return;
    }
   else
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
    return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(subgroup_local_id + 1 < GLF_merged3_0_1_13_1_1_14_2_1_12subgroup_sizeworkgroup_baseworkgroup_id.x)
  {
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     atomicStore(buf[_GLF_IDENTITY(next_virtual_gid, 0u | (_GLF_IDENTITY(next_virtual_gid, ~ (~ (_GLF_IDENTITY(next_virtual_gid, min(next_virtual_gid, next_virtual_gid)))))))], uint(2), 4, _GLF_IDENTITY(_GLF_IDENTITY(64, min(_GLF_IDENTITY(64, 0 | (64)), 64)), (true ? _GLF_IDENTITY(64, clamp(64, 64, _GLF_IDENTITY(64, max(64, 64)))) : _GLF_FUZZED(-11878))), 4);
    }
   else
    {
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(false))
    return;
   subgroupAll(false);
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) < injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       barrier();
      }
     else
      {
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
      return;
    }
  }
 else
  {
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     atomicStore(buf[next_virtual_gid], _GLF_IDENTITY(uint(2), (uint(2)) << (0u >> _GLF_IDENTITY(uint(4u), _GLF_IDENTITY(uint(4u), (uint(4u)) | (uint(4u)))))), 4, _GLF_IDENTITY(64, _GLF_IDENTITY(~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(64, 1 * (64))), max(~ (_GLF_IDENTITY(64, 1 * (64))), _GLF_IDENTITY(~ (_GLF_IDENTITY(64, 1 * (64))), clamp(~ (_GLF_IDENTITY(64, 1 * (64))), ~ (_GLF_IDENTITY(64, 1 * (64))), ~ (_GLF_IDENTITY(64, 1 * (64)))))))), (~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(64, 1 * (64))), max(~ (_GLF_IDENTITY(64, 1 * (64))), _GLF_IDENTITY(~ (_GLF_IDENTITY(64, 1 * (64))), clamp(~ (_GLF_IDENTITY(64, 1 * (64))), ~ (_GLF_IDENTITY(64, 1 * (64))), ~ (_GLF_IDENTITY(64, 1 * (64))))))))) | 0)), 4);
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), (_GLF_WRAPPED_IF_FALSE(false)) || false))
          {
          }
         else
          {
           for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
            {
             return;
            }
          }
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       do
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))))))))))
          barrier();
        }
       while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
       if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, bool(bvec2(false, true)))))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            return;
           do
            {
             return;
            }
           while(_GLF_WRAPPED_LOOP(false));
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            return;
          }
        }
       else
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if(_GLF_DEAD(false))
          {
           do
            {
             return;
            }
           while(_GLF_WRAPPED_LOOP(false));
          }
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, 0.0 + (injectionSwitch.y))))))
          barrier();
         return;
        }
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
      }
     else
      {
       if(_GLF_DEAD(false))
        barrier();
      }
    }
   else
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
    }
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     do
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(false))
        barrier();
       do
        {
         if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))).x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(973.560), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(-223.410)), bvec2(true, _GLF_FALSE(false, _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(_GLF_IDENTITY(bool((injectionSwitch.x > injectionSwitch.y)), ! (! (bool((injectionSwitch.x > injectionSwitch.y))))))))), (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0), _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)))))))), false || (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(_GLF_IDENTITY(bool((injectionSwitch.x > injectionSwitch.y)), ! (! (bool((injectionSwitch.x > injectionSwitch.y)))))))))) && true))))), mix(vec2(_GLF_FUZZED(0.3), (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY(_GLF_FUZZED(_GLF_IDENTITY(973.560, clamp(973.560, _GLF_IDENTITY(973.560, clamp(973.560, _GLF_IDENTITY(973.560, max(973.560, 973.560)), 973.560)), _GLF_IDENTITY(973.560, (_GLF_IDENTITY(973.560, (973.560) / 1.0)) / 1.0)))), (false ? _GLF_FUZZED(5.2) : _GLF_FUZZED(_GLF_IDENTITY(973.560, clamp(973.560, _GLF_IDENTITY(973.560, clamp(973.560, _GLF_IDENTITY(973.560, max(973.560, 973.560)), _GLF_IDENTITY(973.560, clamp(973.560, 973.560, 973.560)))), _GLF_IDENTITY(973.560, _GLF_IDENTITY((_GLF_IDENTITY(973.560, (973.560) / 1.0)), ((_GLF_IDENTITY(973.560, (973.560) / 1.0))) / 1.0) / 1.0)))))), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(-223.410)), bvec2(true, _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))))[1]), vec2((_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(973.560), (injectionSwitch)[1]), vec2((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)))[0], _GLF_FUZZED(-223.410)), _GLF_IDENTITY(bvec2(true, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)).x > injectionSwitch.y))), _GLF_IDENTITY(bvec2(bvec4(bvec2(true, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)).x > injectionSwitch.y))), false, true)), bvec2(bvec4(bvec2(bvec4(bvec2(true, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)).x > injectionSwitch.y))), false, true)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)))))))[0], _GLF_FUZZED(-16.56)), bvec2(_GLF_IDENTITY(true, true && (true)), false))).y), _GLF_IDENTITY(true && (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[_GLF_IDENTITY(0, (0) >> 0)], injectionSwitch[1])))).x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(973.560), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(-223.410)), bvec2(true, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))))).y), _GLF_IDENTITY(! _GLF_IDENTITY((_GLF_IDENTITY(! ((_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))).x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(973.560), _GLF_IDENTITY((injectionSwitch), mix(vec2(((injectionSwitch))[0], _GLF_IDENTITY(((injectionSwitch))[1], (_GLF_IDENTITY(((injectionSwitch))[1], clamp(((injectionSwitch))[1], ((injectionSwitch))[1], ((injectionSwitch))[1]))) / 1.0)), vec2(_GLF_FUZZED(0.7), _GLF_FUZZED(19.75)), bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)))[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(-223.410)), bvec2(true, _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y))))).y)), bool(bvec3(! ((_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-0.5), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(4.8)), bvec2(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))[0], injectionSwitch[1])))).x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(973.560), (injectionSwitch)[1]), vec2(_GLF_IDENTITY((injectionSwitch)[0], mix(float(_GLF_FUZZED(-3983.8567)), float(_GLF_IDENTITY((injectionSwitch)[0], (true ? (injectionSwitch)[0] : _GLF_FUZZED(-3.5)))), bool(true))), _GLF_FUZZED(-223.410)), bvec2(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))).y)), true, false)))), true && ((_GLF_IDENTITY(! ((_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))).x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(973.560), _GLF_IDENTITY((injectionSwitch), mix(vec2(((injectionSwitch))[0], _GLF_IDENTITY(((injectionSwitch))[1], (_GLF_IDENTITY(((injectionSwitch))[1], clamp(((injectionSwitch))[1], ((injectionSwitch))[1], ((injectionSwitch))[1]))) / 1.0)), vec2(_GLF_FUZZED(0.7), _GLF_FUZZED(19.75)), bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)))[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(-223.410)), bvec2(true, _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y))))).y)), bool(bvec3(! ((_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-0.5), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(4.8)), bvec2(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))[0], injectionSwitch[1])))).x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(973.560), (injectionSwitch)[1]), vec2(_GLF_IDENTITY((injectionSwitch)[0], mix(float(_GLF_FUZZED(-3983.8567)), float(_GLF_IDENTITY((injectionSwitch)[0], (true ? (injectionSwitch)[0] : _GLF_FUZZED(-3.5)))), bool(true))), _GLF_FUZZED(-223.410)), bvec2(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))).y)), true, false)))))), _GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(! (_GLF_IDENTITY(! (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))).x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(973.560), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_IDENTITY(_GLF_FUZZED(-223.410), (_GLF_FUZZED(-223.410)) / 1.0)), bvec2(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))).y), ((_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))).x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(973.560), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_IDENTITY(_GLF_FUZZED(-223.410), (_GLF_FUZZED(-223.410)) / 1.0)), bvec2(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))).y)) || false)), bool(bvec3(! ((_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))).x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(973.560), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_IDENTITY(_GLF_FUZZED(-223.410), min(_GLF_FUZZED(-223.410), _GLF_FUZZED(-223.410)))), bvec2(true, _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(-4.7)), bool(false)))))))).y)), true, false)))), bool(bvec2(! (_GLF_IDENTITY(! (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(injectionSwitch[0], _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0))[1], max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0))[1], float(mat4(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0))[1], 1.0, 1.0, 1.0, 1.0, 0.0, sqrt(1.0), 0.0, 1.0, 0.0, 1.0, 1.0, determinant(mat4(1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0)), 1.0, 0.0, 1.0))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0))[1], min(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0))[1], _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0))[1]))))), min(vec2(injectionSwitch[0], _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0))[1], max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0))[1], float(mat4(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0))[1], 1.0, 1.0, 1.0, 1.0, 0.0, sqrt(1.0), 0.0, 1.0, 0.0, 1.0, 1.0, determinant(mat4(1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0)), 1.0, 0.0, 1.0))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0))[1], min(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0))[1], _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0))[1]))))), vec2(injectionSwitch[0], _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0))[1], max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0))[1], float(mat4(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0))[1], 1.0, 1.0, 1.0, 1.0, 0.0, sqrt(1.0), 0.0, 1.0, 0.0, 1.0, 1.0, determinant(mat4(1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0)), 1.0, 0.0, 1.0))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0))[1], min(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0))[1], _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0))[1])))))))))).x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(973.560), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(-223.410)), bvec2(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))).y), ((_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(injectionSwitch[0], _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0))[1], max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0))[1], float(mat4(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0))[1], 1.0, 1.0, 1.0, 1.0, 0.0, sqrt(1.0), 0.0, 1.0, 0.0, 1.0, 1.0, determinant(mat4(1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0)), 1.0, 0.0, 1.0))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0))[1], min(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0))[1], _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0))[1]))))), min(vec2(injectionSwitch[0], _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0))[1], max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0))[1], float(mat4(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0))[1], 1.0, 1.0, 1.0, 1.0, 0.0, sqrt(1.0), 0.0, 1.0, 0.0, 1.0, 1.0, determinant(mat4(1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0)), 1.0, 0.0, 1.0))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0))[1], min(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0))[1], _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0))[1]))))), vec2(injectionSwitch[0], _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0))[1], max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0))[1], float(mat4(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0))[1], 1.0, 1.0, 1.0, 1.0, 0.0, sqrt(1.0), 0.0, 1.0, 0.0, 1.0, 1.0, determinant(mat4(1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0)), 1.0, 0.0, 1.0))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0))[1], min(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0))[1], _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0))[1])))))))))).x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(973.560), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(-223.410)), bvec2(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))).y)) && true)), bool(bvec3(! ((_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))), (max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))) / vec2(1.0, 1.0))).x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(973.560), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(-223.410)), bvec2(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))).y)), true, false)))), false))), true, false), bvec3(bvec4(bvec3(_GLF_IDENTITY(! (_GLF_IDENTITY(! ((_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))).x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(973.560), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(-223.410)), bvec2(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))).y)), bool(bvec3(! ((_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[_GLF_IDENTITY(0, max(0, 0))], injectionSwitch[1])))).x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(973.560), (injectionSwitch)[1]), vec2(_GLF_IDENTITY((injectionSwitch), vec2(mat3x4((injectionSwitch), _GLF_ONE(1.0, injectionSwitch.y), 0.0, sqrt(1.0), determinant(mat4(1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, log(1.0), 0.0, exp(0.0), 0.0, 0.0, 0.0, 0.0, 1.0)), 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)))[0], _GLF_FUZZED(-223.410)), bvec2(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))).y)), true, false)))), bool(bvec2(! (_GLF_IDENTITY(! ((_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))).x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(973.560), (injectionSwitch)[_GLF_IDENTITY(1, ~ (~ (1)))]), vec2((injectionSwitch)[0], _GLF_FUZZED(-223.410)), _GLF_IDENTITY(bvec2(true, _GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y))))))), bvec2(bvec4(bvec2(true, _GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y))))))), true, true))))).y)), bool(bvec3(! ((_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))).x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mix(vec2(_GLF_FUZZED(973.560), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(-223.410)), bvec2(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), mix(vec2(_GLF_FUZZED((8.0 + 56.93)), _GLF_FUZZED(-8.2)), vec2((mix(vec2(_GLF_FUZZED(973.560), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(-223.410)), bvec2(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))[0], (mix(vec2(_GLF_FUZZED(973.560), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(-223.410)), bvec2(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))[1]), bvec2(true, true)))).y)), true, false)))), false))), true, false), false)))), true && (_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(! (_GLF_IDENTITY(! (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))).x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(973.560), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_IDENTITY(_GLF_FUZZED(-223.410), (_GLF_FUZZED(-223.410)) / 1.0)), bvec2(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))).y), ((_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))).x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(973.560), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_IDENTITY(_GLF_FUZZED(-223.410), (_GLF_FUZZED(-223.410)) / 1.0)), bvec2(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))).y)) || false)), bool(bvec3(! ((_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))).x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(973.560), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_IDENTITY(_GLF_FUZZED(-223.410), min(_GLF_FUZZED(-223.410), _GLF_FUZZED(-223.410)))), bvec2(true, _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(-4.7)), bool(false)))))))).y)), true, false)))), bool(bvec2(! (_GLF_IDENTITY(! (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(injectionSwitch[0], _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0))[1], max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0))[1], float(mat4(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0))[1], 1.0, 1.0, 1.0, 1.0, 0.0, sqrt(1.0), 0.0, 1.0, 0.0, 1.0, 1.0, determinant(mat4(1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0)), 1.0, 0.0, 1.0))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0))[1], min(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0))[1], _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0))[1]))))), min(vec2(injectionSwitch[0], _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0))[1], max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0))[1], float(mat4(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0))[1], 1.0, 1.0, 1.0, 1.0, 0.0, sqrt(1.0), 0.0, 1.0, 0.0, 1.0, 1.0, determinant(mat4(1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0)), 1.0, 0.0, 1.0))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0))[1], min(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0))[1], _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0))[1]))))), vec2(injectionSwitch[0], _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0))[1], max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0))[1], float(mat4(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0))[1], 1.0, 1.0, 1.0, 1.0, 0.0, sqrt(1.0), 0.0, 1.0, 0.0, 1.0, 1.0, determinant(mat4(1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0)), 1.0, 0.0, 1.0))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0))[1], min(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0))[1], _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0))[1])))))))))).x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(973.560), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(-223.410)), bvec2(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))).y), ((_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(injectionSwitch[0], _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0))[1], max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0))[1], float(mat4(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0))[1], 1.0, 1.0, 1.0, 1.0, 0.0, sqrt(1.0), 0.0, 1.0, 0.0, 1.0, 1.0, determinant(mat4(1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0)), 1.0, 0.0, 1.0))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0))[1], min(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0))[1], _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0))[1]))))), min(vec2(injectionSwitch[0], _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0))[1], max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0))[1], float(mat4(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0))[1], 1.0, 1.0, 1.0, 1.0, 0.0, sqrt(1.0), 0.0, 1.0, 0.0, 1.0, 1.0, determinant(mat4(1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0)), 1.0, 0.0, 1.0))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0))[1], min(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0))[1], _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0))[1]))))), vec2(injectionSwitch[0], _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0))[1], max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0))[1], float(mat4(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0))[1], 1.0, 1.0, 1.0, 1.0, 0.0, sqrt(1.0), 0.0, 1.0, 0.0, 1.0, 1.0, determinant(mat4(1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0)), 1.0, 0.0, 1.0))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0))[1], min(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0))[1], _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0))[1])))))))))).x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(973.560), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(-223.410)), bvec2(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))).y)) && true)), bool(bvec3(! ((_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))), (max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))) / vec2(1.0, 1.0))).x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(973.560), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(-223.410)), bvec2(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))).y)), true, false)))), false))), true, false), bvec3(bvec4(bvec3(_GLF_IDENTITY(! (_GLF_IDENTITY(! ((_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))).x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(973.560), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(-223.410)), bvec2(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))).y)), bool(bvec3(! ((_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[_GLF_IDENTITY(0, max(0, 0))], injectionSwitch[1])))).x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(973.560), (injectionSwitch)[1]), vec2(_GLF_IDENTITY((injectionSwitch), vec2(mat3x4((injectionSwitch), _GLF_ONE(1.0, injectionSwitch.y), 0.0, sqrt(1.0), determinant(mat4(1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, log(1.0), 0.0, exp(0.0), 0.0, 0.0, 0.0, 0.0, 1.0)), 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)))[0], _GLF_FUZZED(-223.410)), bvec2(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))).y)), true, false)))), bool(bvec2(! (_GLF_IDENTITY(! ((_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))).x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(973.560), (injectionSwitch)[_GLF_IDENTITY(1, ~ (~ (1)))]), vec2((injectionSwitch)[0], _GLF_FUZZED(-223.410)), _GLF_IDENTITY(bvec2(true, _GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y))))))), bvec2(bvec4(bvec2(true, _GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y))))))), true, true))))).y)), bool(bvec3(! ((_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))).x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mix(vec2(_GLF_FUZZED(973.560), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(-223.410)), bvec2(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), mix(vec2(_GLF_FUZZED((8.0 + 56.93)), _GLF_FUZZED(-8.2)), vec2((mix(vec2(_GLF_FUZZED(973.560), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(-223.410)), bvec2(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))[0], (mix(vec2(_GLF_FUZZED(973.560), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(-223.410)), bvec2(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))[1]), bvec2(true, true)))).y)), true, false)))), false))), true, false), false)))), bool(bvec4(bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(! (_GLF_IDENTITY(! (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))).x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(973.560), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_IDENTITY(_GLF_FUZZED(-223.410), (_GLF_FUZZED(-223.410)) / 1.0)), bvec2(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))).y), ((_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))).x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(973.560), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_IDENTITY(_GLF_FUZZED(-223.410), (_GLF_FUZZED(-223.410)) / 1.0)), bvec2(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))).y)) || false)), bool(bvec3(! ((_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))).x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(973.560), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_IDENTITY(_GLF_FUZZED(-223.410), min(_GLF_FUZZED(-223.410), _GLF_FUZZED(-223.410)))), bvec2(true, _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(-4.7)), bool(false)))))))).y)), true, false)))), bool(bvec2(! (_GLF_IDENTITY(! (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(injectionSwitch[0], _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0))[1], max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0))[1], float(mat4(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0))[1], 1.0, 1.0, 1.0, 1.0, 0.0, sqrt(1.0), 0.0, 1.0, 0.0, 1.0, 1.0, determinant(mat4(1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0)), 1.0, 0.0, 1.0))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0))[1], min(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0))[1], _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0))[1]))))), min(vec2(injectionSwitch[0], _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0))[1], max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0))[1], float(mat4(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0))[1], 1.0, 1.0, 1.0, 1.0, 0.0, sqrt(1.0), 0.0, 1.0, 0.0, 1.0, 1.0, determinant(mat4(1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0)), 1.0, 0.0, 1.0))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0))[1], min(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0))[1], _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0))[1]))))), vec2(injectionSwitch[0], _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0))[1], max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0))[1], float(mat4(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0))[1], 1.0, 1.0, 1.0, 1.0, 0.0, sqrt(1.0), 0.0, 1.0, 0.0, 1.0, 1.0, determinant(mat4(1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0)), 1.0, 0.0, 1.0))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0))[1], min(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0))[1], _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0))[1])))))))))).x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(973.560), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(-223.410)), bvec2(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))).y), ((_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(injectionSwitch[0], _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0))[1], max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0))[1], float(mat4(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0))[1], 1.0, 1.0, 1.0, 1.0, 0.0, sqrt(1.0), 0.0, 1.0, 0.0, 1.0, 1.0, determinant(mat4(1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0)), 1.0, 0.0, 1.0))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0))[1], min(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0))[1], _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0))[1]))))), min(vec2(injectionSwitch[0], _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0))[1], max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0))[1], float(mat4(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0))[1], 1.0, 1.0, 1.0, 1.0, 0.0, sqrt(1.0), 0.0, 1.0, 0.0, 1.0, 1.0, determinant(mat4(1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0)), 1.0, 0.0, 1.0))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0))[1], min(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0))[1], _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0))[1]))))), vec2(injectionSwitch[0], _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0))[1], max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0))[1], float(mat4(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0))[1], 1.0, 1.0, 1.0, 1.0, 0.0, sqrt(1.0), 0.0, 1.0, 0.0, 1.0, 1.0, determinant(mat4(1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0)), 1.0, 0.0, 1.0))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0))[1], min(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0))[1], _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0))[1])))))))))).x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(973.560), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(-223.410)), bvec2(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))).y)) && true)), bool(bvec3(! ((_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))), (max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))) / vec2(1.0, 1.0))).x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(973.560), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(-223.410)), bvec2(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))).y)), true, false)))), false))), true, false), bvec3(bvec4(bvec3(_GLF_IDENTITY(! (_GLF_IDENTITY(! ((_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))).x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(973.560), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(-223.410)), bvec2(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))).y)), bool(bvec3(! ((_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[_GLF_IDENTITY(0, max(0, 0))], injectionSwitch[1])))).x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(973.560), (injectionSwitch)[1]), vec2(_GLF_IDENTITY((injectionSwitch), vec2(mat3x4((injectionSwitch), _GLF_ONE(1.0, injectionSwitch.y), 0.0, sqrt(1.0), determinant(mat4(1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, log(1.0), 0.0, exp(0.0), 0.0, 0.0, 0.0, 0.0, 1.0)), 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)))[0], _GLF_FUZZED(-223.410)), bvec2(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))).y)), true, false)))), bool(bvec2(! (_GLF_IDENTITY(! ((_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))).x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(973.560), (injectionSwitch)[_GLF_IDENTITY(1, ~ (~ (1)))]), vec2((injectionSwitch)[0], _GLF_FUZZED(-223.410)), _GLF_IDENTITY(bvec2(true, _GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y))))))), bvec2(bvec4(bvec2(true, _GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y))))))), true, true))))).y)), bool(bvec3(! ((_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))).x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mix(vec2(_GLF_FUZZED(973.560), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(-223.410)), bvec2(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), mix(vec2(_GLF_FUZZED((8.0 + 56.93)), _GLF_FUZZED(-8.2)), vec2((mix(vec2(_GLF_FUZZED(973.560), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(-223.410)), bvec2(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))[0], (mix(vec2(_GLF_FUZZED(973.560), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(-223.410)), bvec2(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))[1]), bvec2(true, true)))).y)), true, false)))), false))), true, false), false)))), false, true, true))))), false || (bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(! (_GLF_IDENTITY(! ((_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))).x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(973.560), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(-223.410)), bvec2(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))).y)), bool(bvec3(! ((_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))).x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(973.560), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(-223.410)), bvec2(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))).y)), true, false)))), bool(bvec2(! (_GLF_IDENTITY(! ((_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))).x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(973.560), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(-223.410)), bvec2(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))).y)), bool(bvec3(! ((_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))).x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(973.560), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(-223.410)), bvec2(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))).y)), true, false)))), false))), true, false), bvec3(bvec4(bvec3(_GLF_IDENTITY(! (_GLF_IDENTITY(! ((_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))).x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(973.560), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(-223.410)), bvec2(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))).y)), bool(bvec3(! ((_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))).x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(973.560), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(-223.410)), bvec2(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))).y)), true, false)))), bool(bvec2(! (_GLF_IDENTITY(! ((_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))).x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(973.560), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(-223.410)), bvec2(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))).y)), bool(bvec3(! ((_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))).x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(973.560), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(-223.410)), bvec2(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))).y)), true, false)))), false))), true, false), false))), bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(! (_GLF_IDENTITY(! ((_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))).x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(973.560), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(-223.410)), bvec2(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))).y)), bool(bvec3(! ((_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))).x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(973.560), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(-223.410)), bvec2(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))).y)), true, false)))), bool(bvec2(! (_GLF_IDENTITY(! ((_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))).x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(973.560), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(-223.410)), bvec2(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))).y)), bool(bvec3(! ((_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))).x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(973.560), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(-223.410)), bvec2(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))).y)), true, false)))), false))), true, false), bvec3(bvec4(bvec3(_GLF_IDENTITY(! (_GLF_IDENTITY(! ((_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))).x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(973.560), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(-223.410)), bvec2(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))).y)), bool(bvec3(! ((_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))).x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(973.560), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(-223.410)), bvec2(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))).y)), true, false)))), bool(bvec2(! (_GLF_IDENTITY(! ((_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))).x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(973.560), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(-223.410)), bvec2(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))).y)), bool(bvec3(! ((_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))).x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(973.560), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(-223.410)), bvec2(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))).y)), true, false)))), false))), true, false), false)))), bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(! (_GLF_IDENTITY(! ((_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))).x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(973.560), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(-223.410)), bvec2(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))).y)), bool(bvec3(! ((_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))).x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(973.560), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(-223.410)), bvec2(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))).y)), true, false)))), bool(bvec2(! (_GLF_IDENTITY(! ((_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))).x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(973.560), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(-223.410)), bvec2(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))).y)), bool(bvec3(! ((_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))).x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(973.560), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(-223.410)), bvec2(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))).y)), true, false)))), false))), true, false), bvec3(bvec4(bvec3(_GLF_IDENTITY(! (_GLF_IDENTITY(! ((_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))).x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(973.560), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(-223.410)), bvec2(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))).y)), bool(bvec3(! ((_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))).x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(973.560), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(-223.410)), bvec2(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))).y)), true, false)))), bool(bvec2(! (_GLF_IDENTITY(! ((_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))).x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(973.560), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(-223.410)), bvec2(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))).y)), bool(bvec3(! ((_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))).x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(973.560), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(-223.410)), bvec2(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))).y)), true, false)))), false))), true, false), false))))))))))))))), false || (true && (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))).x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(973.560), _GLF_IDENTITY((injectionSwitch)[1], min((injectionSwitch)[1], (injectionSwitch)[1]))), vec2(_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? (injectionSwitch) : _GLF_FUZZED(vec2(-441.582, 973.165))))[0], min(_GLF_IDENTITY((injectionSwitch), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? (injectionSwitch) : _GLF_FUZZED(vec2(-441.582, 973.165))))[0], _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? (injectionSwitch) : _GLF_FUZZED(vec2(-441.582, 973.165))))[0], float(mat4(_GLF_IDENTITY((injectionSwitch), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? (injectionSwitch) : _GLF_FUZZED(vec2(-441.582, 973.165))))[0], 1.0, 0.0, 1.0, 1.0, 1.0, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), 1.0, 1.0, 1.0, determinant(mat2(0.0, 0.0, 1.0, 0.0)), 0.0, 0.0, 1.0, 0.0, 0.0))))), _GLF_FUZZED(-223.410)), bvec2(true, _GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec2((injectionSwitch.x > injectionSwitch.y), false))))))).y), ! (_GLF_IDENTITY(! ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))[1])))), min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), (true ? _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])) : _GLF_FUZZED(injectionSwitch))))), min(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), vec2(_GLF_IDENTITY(mat3x2(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), 1.0, 1.0, 1.0, 1.0), mat3x2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)) + (_GLF_IDENTITY(mat3x2(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), 1.0, 1.0, 1.0, 1.0), transpose(transpose(mat3x2(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), 1.0, 1.0, 1.0, 1.0)))))))))), _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], max(_GLF_IDENTITY(injectionSwitch[1], clamp(injectionSwitch[1], injectionSwitch[1], injectionSwitch[1])), injectionSwitch[1])))))))), _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))))).x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(973.560), (injectionSwitch)[1]), vec2(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], min(injectionSwitch[1], injectionSwitch[1]))))), _GLF_IDENTITY(((_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], min(injectionSwitch[1], injectionSwitch[1])))))) * mat2(_GLF_ONE(1.0, injectionSwitch.y)), (((_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], min(injectionSwitch[1], injectionSwitch[1])))))) * mat2(_GLF_ONE(1.0, injectionSwitch.y))) * vec2(1.0, 1.0)))[0], _GLF_FUZZED(-223.410)), bvec2(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))).y)), bool(bvec3(_GLF_IDENTITY(! ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))), (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))))) - vec2(0.0, 0.0)).x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(973.560), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(-223.410)), bvec2(true, _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(vec4(-2.5, -8.5, 1.9, -58.89).x)), bool(false)))))))).y)), true && (! ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], max(injectionSwitch[1], injectionSwitch[1])))))).x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(973.560), (injectionSwitch)[1]), vec2((injectionSwitch)[_GLF_IDENTITY(0, _GLF_IDENTITY(int(ivec3(0, 0, 0)), int(ivec4(int(ivec3(0, 0, 0)), 1, 1, 1))))], _GLF_FUZZED(-223.410)), bvec2(true, _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))).y, ! (! (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[_GLF_IDENTITY(0, min(0, 0))], float(mat4x3(injectionSwitch[_GLF_IDENTITY(0, min(0, 0))], 0.0, 1.0, round(length(normalize(1.0))), 1.0, 0.0, determinant(mat4(1.0, 0.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, 0.0, 0.0, 1.0)), dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, 0.0, 0.0, 1.0))), 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0)), _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0, 1.0, 0.0))), injectionSwitch[1])))), mix(vec2((_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[_GLF_IDENTITY(0, min(0, 0))], float(mat4x3(injectionSwitch[_GLF_IDENTITY(0, min(0, 0))], 0.0, 1.0, round(length(normalize(1.0))), 1.0, 0.0, determinant(mat4(1.0, 0.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, 0.0, 0.0, 1.0)), dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, 0.0, 0.0, 1.0))), 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0)), _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0, 1.0, 0.0))), injectionSwitch[1])))))[0], _GLF_FUZZED(-2.9)), vec2(_GLF_FUZZED(-975.508), _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[_GLF_IDENTITY(0, min(0, 0))], float(mat4x3(injectionSwitch[_GLF_IDENTITY(0, min(0, 0))], 0.0, 1.0, round(length(normalize(1.0))), 1.0, 0.0, determinant(mat4(1.0, 0.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, 0.0, 0.0, 1.0)), dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, 0.0, 0.0, 1.0))), 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0)), _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0, 1.0, 0.0))), injectionSwitch[1])))))[1], max((_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[_GLF_IDENTITY(0, min(0, 0))], float(mat4x3(injectionSwitch[_GLF_IDENTITY(0, min(0, 0))], 0.0, 1.0, round(length(normalize(1.0))), 1.0, 0.0, determinant(mat4(1.0, 0.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, 0.0, 0.0, 1.0)), dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, 0.0, 0.0, 1.0))), 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0)), _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0, 1.0, 0.0))), injectionSwitch[1])))))[1], (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[_GLF_IDENTITY(0, min(0, 0))], float(mat4x3(injectionSwitch[_GLF_IDENTITY(0, min(0, 0))], 0.0, 1.0, round(length(normalize(1.0))), 1.0, 0.0, determinant(mat4(1.0, 0.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, 0.0, 0.0, 1.0)), dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, 0.0, 0.0, 1.0))), 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0)), _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0, 1.0, 0.0))), injectionSwitch[1])))))[1]))), bvec2(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))).x > _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(973.560), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(-223.410)), bvec2(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), vec2(1.0, 1.0) * (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(973.560), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(-223.410)), bvec2(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(973.560), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(-223.410)), bvec2(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), vec2(1.0, 1.0) * (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(973.560), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(-223.410)), bvec2(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(973.560), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(-223.410)), bvec2(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), vec2(1.0, 1.0) * (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(973.560), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(-223.410)), bvec2(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))).y))))))), true, false))))))))))))
          {
           if(_GLF_DEAD(false))
            return;
           if(_GLF_DEAD(false))
            break;
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(false))
              break;
             break;
            }
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, false, true, true)))))
            break;
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            return;
           if(_GLF_DEAD(false))
            break;
           if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, float(vec3(injectionSwitch.x, 1.0, 0.0))) > injectionSwitch.y)))))))
            barrier();
           if(_GLF_DEAD(false))
            break;
           if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(mat3x4(injectionSwitch, 1.0, 0.0, 0.0, 1.0, length(vec4(0.0, 0.0, 0.0, 0.0)), abs(0.0), 0.0, 0.0, sqrt(1.0), _GLF_ONE(1.0, injectionSwitch.y)))).x > injectionSwitch.y))))
            {
             if(_GLF_DEAD(false))
              continue;
             barrier();
            }
           barrier();
          }
        }
       while(_GLF_WRAPPED_LOOP(false));
      }
     while(_GLF_WRAPPED_LOOP(false));
    }
   else
    {
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
    }
   else
    {
     do
      {
       subgroupAll(true);
       if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
        barrier();
      }
     while(_GLF_WRAPPED_LOOP(false));
    }
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, true && (false)), (injectionSwitch.x > injectionSwitch.y))))
  {
   do
    {
     for(int _injected_loop_counter = int(_GLF_ONE(1.0, injectionSwitch.y)); _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
      {
       if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, float(mat4x3(injectionSwitch.x, sin(0.0), 1.0, abs(0.0), 0.0, 0.0, sqrt(1.0), 0.0, 0.0, 1.0, 1.0, determinant(mat2(1.0, 1.0, 0.0, 1.0))))) > injectionSwitch.y), ((_GLF_IDENTITY(injectionSwitch.x, float(mat4x3(injectionSwitch.x, sin(0.0), 1.0, abs(0.0), 0.0, 0.0, sqrt(1.0), 0.0, 0.0, 1.0, 1.0, determinant(mat2(1.0, 1.0, 0.0, 1.0))))) > injectionSwitch.y)) && true)), true && (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))
        {
        }
       else
        {
         if(_GLF_DEAD(false))
          continue;
         barrier();
        }
      }
    }
   while(_GLF_WRAPPED_LOOP(false));
  }
 do
  {
   do
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_WRAPPED_IF_FALSE(false))
        {
         if(_GLF_DEAD(false))
          break;
        }
       else
        {
         barrier();
        }
      }
    }
   while(_GLF_WRAPPED_LOOP(false));
  }
 while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
 do
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    continue;
   if(_GLF_DEAD(false))
    return;
  }
 while(_GLF_WRAPPED_LOOP(false));
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0) > injectionSwitch.y))))
  barrier();
}
