#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


struct _GLF_struct_11 {
 ivec4 _f0;
 uint _f1;
 float _f2;
} ;

struct _GLF_struct_10 {
 mat3x4 _f0;
 vec3 _f1;
 int _f2;
} ;

struct _GLF_struct_12 {
 _GLF_struct_10 _f0;
 uvec4 _f1;
 mat4 _f2;
 mat3x4 _f3;
 _GLF_struct_11 _f4;
} ;

struct _GLF_struct_8 {
 ivec3 _f0;
 mat2x3 _f1;
 mat2x4 _f2;
 mat4x2 _f3;
 uvec3 _f4;
} ;

struct _GLF_struct_7 {
 uint workgroup_base;
 ivec3 _f0;
 mat2x3 _f1;
 mat2 _f2;
 mat2x3 _f3;
} ;

struct _GLF_struct_6 {
 bvec2 _f0;
 mat2x4 _f1;
 ivec4 _f2;
 mat4 _f3;
 bvec3 _f4;
 mat2x4 _f5;
 int _f6;
} ;

struct _GLF_struct_9 {
 _GLF_struct_6 _f0;
 mat2x4 _f1;
 vec3 _f2;
 mat2 _f3;
 uvec4 _f4;
 _GLF_struct_7 _f5;
 _GLF_struct_8 _f6;
} ;

struct _GLF_struct_13 {
 _GLF_struct_9 _f0;
 _GLF_struct_12 _f1;
} ;

struct _GLF_struct_3 {
 mat2x3 _f0;
 ivec4 _f1;
 mat4 _f2;
 mat3x4 _f3;
} ;

struct _GLF_struct_2 {
 uint _f0;
 vec4 _f1;
 vec2 _f2;
 mat3x4 _f3;
 vec3 _f4;
} ;

struct _GLF_struct_4 {
 uint _f0;
 bool _f1;
 mat3x4 _f2;
 _GLF_struct_2 _f3;
 bool _f4;
 _GLF_struct_3 _f5;
} ;

struct _GLF_struct_0 {
 uvec3 _f0;
 mat3 _f1;
 uint _f2;
 vec2 _f3;
 uvec4 _f4;
 uvec3 _f5;
 mat3x2 _f6;
} ;

struct _GLF_struct_1 {
 _GLF_struct_0 _f0;
 ivec4 _f1;
 mat4x2 _f2;
} ;

struct _GLF_struct_5 {
 _GLF_struct_1 _f0;
 uvec4 _f1;
 bool _f2;
 bvec2 _f3;
 _GLF_struct_4 _f4;
 uint workgroup_id;
} ;

layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 uint subgroup_id = gl_SubgroupID;
 uint subgroup_size = gl_SubgroupSize;
 uint subgroup_local_id = gl_SubgroupInvocationID;
 uint num_workgroup = gl_NumWorkGroups.x;
 uint workgroup_size = gl_WorkGroupSize.x;
 _GLF_struct_5 _GLF_struct_replacement_5 = _GLF_struct_5(_GLF_struct_1(_GLF_struct_0(uvec3(1u), mat3(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(-8.4)), bool(false)))), 1u, vec2(1.0), uvec4(1u), uvec3(_GLF_IDENTITY(1u, _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec4(1u, 0u, 0u, 0u), (uvec4(1u, 0u, 0u, 0u)) >> uvec4(0u, 0u, 0u, 0u))), max(uint(_GLF_IDENTITY(uvec4(1u, 0u, 0u, 0u), (uvec4(1u, 0u, 0u, 0u)) >> uvec4(0u, 0u, 0u, 0u))), _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec4(_GLF_IDENTITY(1u, ~ (~ (1u))), 0u, 0u, 0u), (_GLF_IDENTITY(uvec4(1u, 0u, 0u, 0u), (uvec4(1u, 0u, 0u, 0u)) | uvec4(0u, 0u, 0u, 0u))) >> uvec4(0u, 0u, 0u, 0u))), 0u + (uint(_GLF_IDENTITY(uvec4(1u, 0u, 0u, _GLF_IDENTITY(0u, (0u) | (0u))), (uvec4(1u, 0u, 0u, 0u)) >> uvec4(0u, 0u, 0u, 0u))))))))), mat3x2(1.0)), ivec4(1), mat4x2(1.0)), uvec4(_GLF_IDENTITY(1u, (1u) + 0u)), true, bvec2(_GLF_IDENTITY(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (true))), _GLF_struct_4(1u, _GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, bool(bvec3(true, false, false))))), mat3x4(1.0), _GLF_struct_2(1u, vec4(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0))), _GLF_IDENTITY(vec2(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(5.4)), bool(false)))), max(vec2(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(5.4)), bool(false)))), vec2(_GLF_IDENTITY(1.0, _GLF_IDENTITY(mix(float(1.0), float(_GLF_FUZZED(5.4)), bool(false)), (true ? _GLF_IDENTITY(mix(float(1.0), float(_GLF_FUZZED(5.4)), bool(false)), (mix(float(1.0), float(_GLF_FUZZED(5.4)), bool(false))) + 0.0) : _GLF_FUZZED(5379.8514))))))), mat3x4(_GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, abs(1.0) * (1.0)), _GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, max(1.0, _GLF_IDENTITY(1.0, clamp(1.0, _GLF_IDENTITY(1.0, float(mat4(1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, sqrt(1.0), 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0))), 1.0)))), 1.0, 1.0))))), vec3(1.0)), true, _GLF_struct_3(mat2x3(1.0), ivec4(1), mat4(1.0), mat3x4(1.0))), _GLF_IDENTITY(gl_WorkGroupID.x, _GLF_IDENTITY((7787u & 0u), ((7787u & 0u)) | ((7787u & 0u))) | (_GLF_IDENTITY(gl_WorkGroupID.x, (true ? gl_WorkGroupID.x : _GLF_FUZZED(110267u))))));
 _GLF_struct_13 _GLF_struct_replacement_13 = _GLF_struct_13(_GLF_struct_9(_GLF_struct_6(bvec2(true), mat2x4(1.0), ivec4(1), mat4(1.0), bvec3(_GLF_IDENTITY(true, bool(bool(_GLF_IDENTITY(true, ! (! (true))))))), mat2x4(1.0), 1), mat2x4(1.0), vec3(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, _GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0))))), mat2(1.0), uvec4(1u), _GLF_struct_7(workgroup_size * _GLF_struct_replacement_5.workgroup_id, _GLF_IDENTITY(ivec3(1), (_GLF_IDENTITY(ivec3(1), ~ (~ (ivec3(1))))) * ivec3(1, 1, 1)), mat2x3(1.0), mat2(1.0), mat2x3(1.0)), _GLF_struct_8(ivec3(1), mat2x3(1.0), mat2x4(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(atan(-5019.2695, -1309.2872))))) / 1.0)), mat4x2(1.0), _GLF_IDENTITY(uvec3(1u), max(uvec3(1u), _GLF_IDENTITY(uvec3(1u), (true ? _GLF_IDENTITY(uvec3(1u), min(uvec3(1u), uvec3(1u))) : _GLF_FUZZED(uvec3(8322u, 170639u, 92257u)))))))), _GLF_struct_12(_GLF_struct_10(mat3x4(1.0), vec3(1.0), 1), uvec4(1u), mat4(1.0), mat3x4(1.0), _GLF_struct_11(ivec4(1), 1u, _GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, (1.0) + 0.0), 1.0)))));
 uint virtual_gid = _GLF_struct_replacement_13._f0._f5.workgroup_base + _GLF_IDENTITY(subgroup_id * subgroup_size, uint(_GLF_IDENTITY(_GLF_IDENTITY(uvec4(subgroup_id * subgroup_size, (1u & 1u), 1u, 0u), (uvec4(subgroup_id * subgroup_size, (_GLF_IDENTITY(1u & 1u, ~ (~ (1u & 1u)))), 1u, 0u)) | (uvec4(subgroup_id * subgroup_size, (1u & 1u), 1u, 0u))), uvec4(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y)) * (_GLF_IDENTITY(uvec4(subgroup_id * subgroup_size, (1u & 1u), 1u, 0u), (uvec4(subgroup_id * subgroup_size, (_GLF_IDENTITY(1u & 1u, ~ (~ (1u & 1u)))), 1u, 0u)) | (uvec4(subgroup_id * _GLF_IDENTITY(subgroup_size, (subgroup_size) * 1u), (1u & 1u), 1u, 0u))))))) + subgroup_local_id;
 uint next_virtual_gid = _GLF_struct_replacement_13._f0._f5.workgroup_base + subgroup_id * _GLF_IDENTITY(subgroup_size, 0u | (_GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size)))) + ((_GLF_IDENTITY(subgroup_local_id + 1, uint(uvec4(subgroup_local_id + 1, 1u, 1u, 1u)))) % subgroup_size);
 do
  {
   atomicStore(buf[virtual_gid], uint(1), 4, 64, 4);
  }
 while(_GLF_WRAPPED_LOOP(false));
 if(subgroup_local_id + 1 < subgroup_size)
  {
   if(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), bool(bvec2(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), bool(bvec2(_GLF_WRAPPED_IF_FALSE(false), true))), false))))
    {
    }
   else
    {
     do
      {
       atomicStore(buf[next_virtual_gid], uint(2), 4, 64, 4);
      }
     while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
    }
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
    }
   else
    {
     do
      {
       do
        {
         for(int _injected_loop_counter = ((0 >> _GLF_IDENTITY(int(5), int(5))) & _GLF_IDENTITY(57844, min(57844, 57844))); _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _GLF_IDENTITY(_injected_loop_counter ++, (_injected_loop_counter ++) * 1))
          {
           subgroupAll(false);
          }
        }
       while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(false, (false) || false)))));
      }
     while(_GLF_WRAPPED_LOOP(false));
    }
  }
 else
  {
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     switch(_GLF_SWITCH(0))
      {
       case 61:
       do
        {
         do
          {
           if(true)
            {
             if(_GLF_WRAPPED_IF_TRUE(true))
              {
               do
                {
                 switch(_GLF_SWITCH((1 ^ 1)))
                  {
                   case 0:
                   (mat3x4(-0.5, 8.1, -2086.5672, 5.9, -930.693, 87.01, 6.0, -69.54, 421.945, 1288.5928, -8.2, 950.978) , vec3(3030.3613, 166.270, -93.41));
                   uvec4 _GLF_SWITCH_0_0v[54], _GLF_SWITCH_0_1v;
                   do
                    {
                     for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != (_GLF_IDENTITY(0 >> _GLF_IDENTITY(int(5), int(5)), ~ (_GLF_IDENTITY(~ (0 >> _GLF_IDENTITY(int(5), int(5))), (~ (0 >> _GLF_IDENTITY(int(5), int(5)))) ^ 0))))); _injected_loop_counter --)
                      {
                       ivec4 _GLF_SWITCH_0_2v, _GLF_SWITCH_0_3v[78];
                       if(_GLF_WRAPPED_IF_FALSE(false))
                        {
                        }
                       else
                        {
                         for(int _injected_loop_counter = _GLF_IDENTITY((int(_GLF_ZERO(0.0, injectionSwitch.x)) & -12442), (true ? (int(_GLF_ZERO(0.0, injectionSwitch.x)) & -12442) : _GLF_FUZZED((false ? 82668 : 30420)))); _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
                          {
                           if(_GLF_WRAPPED_IF_TRUE(true))
                            {
                             ;
                             mat2 _GLF_SWITCH_0_4v, _GLF_SWITCH_0_5v;
                             uvec3 _GLF_SWITCH_0_6v, _GLF_SWITCH_0_7v;
                             ;
                             if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                              {
                              }
                             else
                              {
                               for(int _injected_loop_counter = (0 & 85760); _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
                                {
                                 _GLF_SWITCH_0_5v;
                                }
                              }
                             vec4 _GLF_SWITCH_0_8v[90];
                            }
                           else
                            {
                            }
                          }
                        }
                       for(int _injected_loop_counter = (0 ^ 1); _GLF_WRAPPED_LOOP(_injected_loop_counter != int(_GLF_ZERO(0.0, injectionSwitch.x))); _injected_loop_counter --)
                        {
                         ;
                        }
                       (true ^^ (mat3(5575.9296, -8262.2595, 249.729, -7.1, 435.097, 4559.0817, -7.3, -4151.4455, 5148.6719) == mat3(5.4, 5061.9642, -1.4, -9.3, 8.0, -1.1, 80.41, -4.3, -2.2)));
                       do
                        {
                         if(_GLF_WRAPPED_IF_FALSE(false))
                          {
                          }
                         else
                          {
                           vec2(0.5, 4.4);
                          }
                        }
                       while(_GLF_WRAPPED_LOOP(false));
                       if(_GLF_WRAPPED_IF_FALSE(false))
                        {
                        }
                       else
                        {
                         if(_GLF_WRAPPED_IF_FALSE(false))
                          {
                          }
                         else
                          {
                           do
                            {
                             if(_GLF_WRAPPED_IF_FALSE(false))
                              {
                              }
                             else
                              {
                               mat3x2(220.282, 307.067, -26.08, 1.9, -2066.5370, 8.8);
                              }
                             (inversesqrt(_GLF_IDENTITY(vec4(4772.8973, -86.57, -196.564, -7.9), mix(vec4(_GLF_FUZZED(-1.8), _GLF_FUZZED(vec3(-21.97, 77.86, _GLF_IDENTITY(-6.0, (false ? _GLF_FUZZED(determinant(mat3(-3.7, 7511.4404, 1.2, -12.47, 6.7, -8342.0281, -9122.9356, 655.710, 686.912))) : -6.0))).z), _GLF_IDENTITY((vec4(4772.8973, -86.57, -196.564, _GLF_IDENTITY(_GLF_IDENTITY(-7.9, clamp(-7.9, _GLF_IDENTITY(-7.9, max(-7.9, -7.9)), -7.9)), mix(float(_GLF_IDENTITY(-7.9, clamp(-7.9, -7.9, -7.9))), float(_GLF_IDENTITY(_GLF_FUZZED(-3.7), min(_GLF_FUZZED(-3.7), _GLF_FUZZED(-3.7)))), bool(false)))))[2], float(mat4((vec4(4772.8973, -86.57, -196.564, -7.9))[2], 0.0, 1.0, 1.0, 1.0, 0.0, length(vec3(0.0, 0.0, 0.0)), 0.0, cos(0.0), 0.0, 1.0, 1.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0))), (vec4(4772.8973, -86.57, -196.564, -7.9))[3]), vec4((vec4(4772.8973, -86.57, -196.564, -7.9))[0], _GLF_IDENTITY((vec4(4772.8973, -86.57, -196.564, -7.9)), ((vec4(4772.8973, _GLF_IDENTITY(-86.57, clamp(-86.57, -86.57, -86.57)), -196.564, -7.9))) - sin(abs(vec4(0.0, 0.0, 0.0, 0.0))))[1], _GLF_FUZZED(float(false)), _GLF_FUZZED(-96.72)), bvec4(true, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)))) * mat2x4(1228.7737, -765.450, -42.12, -9886.2573, 1.1, 4.0, 4.9, -508.377));
                             vec4 _GLF_SWITCH_0_9v[8], _GLF_SWITCH_0_10v[26];
                             bvec4 _GLF_SWITCH_0_11v, _GLF_SWITCH_0_12v;
                            }
                           while(true);
                          }
                        }
                       if(_GLF_WRAPPED_IF_TRUE(true))
                        {
                         _GLF_SWITCH_0_1v;
                        }
                       else
                        {
                        }
                       do
                        {
                         (ivec2(-39615, -10259) - -8239);
                        }
                       while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
                       do
                        {
                         if(_GLF_WRAPPED_IF_FALSE(false))
                          {
                          }
                         else
                          {
                           reflect(vec2(-389.140, -72.82), (injectionSwitch + -671.674));
                          }
                        }
                       while(_GLF_WRAPPED_LOOP(false));
                      }
                    }
                   while(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (_GLF_IDENTITY(! (_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0) > injectionSwitch.y)))), ! (! (! (_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), clamp(mat2(1.0) * (injectionSwitch), mat2(1.0) * (injectionSwitch), mat2(1.0) * (injectionSwitch)))).y))))))))));
                   for(mat3x2 _GLF_SWITCH_0_13v, _GLF_SWITCH_0_14v[64]; true; 76173)
                    {
                     ((uvec4(155303u, 193006u, 93097u, 39397u) == _GLF_SWITCH_0_1v) ? _GLF_IDENTITY(mat3(719.777, _GLF_IDENTITY(9.7, max(9.7, 9.7)), 0.0, 4.4, -7.1, 8.0, -456.703, 21.63, 346.359), _GLF_IDENTITY((mat3(719.777, _GLF_IDENTITY(9.7, max(9.7, 9.7)), 0.0, 4.4, -7.1, 8.0, -456.703, 21.63, 346.359)), mat3(mat4x3((mat3(719.777, _GLF_IDENTITY(9.7, max(9.7, 9.7)), 0.0, 4.4, -7.1, 8.0, -456.703, 21.63, 346.359))))) - _GLF_IDENTITY(mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0), (false ? _GLF_FUZZED(mat3(-1.7, 8.4, 7.2, 6013.1770, -47.21, 60.41, -952.020, -9.4, 839.599)) : mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)))) : mat3(-4261.4199, -5461.9818, 3.3, 4.7, -2448.4082, 7.1, -494.152, 180.467, 35.99));
                     mat4(mat3(4.0, 690.057, 3088.8802, 2432.8716, -40.66, -47.79, 9850.4305, 2066.0189, 5.4));
                     int _GLF_SWITCH_0_15v[20], _GLF_SWITCH_0_16v[69];
                     if(_GLF_WRAPPED_IF_TRUE(true))
                      {
                       switch(_GLF_SWITCH(0))
                        {
                         case 17:
                         mat4 _GLF_SWITCH_6_0v;
                         case 81:
                         ;
                         case 0:
                         case 6:
                         case 21:
                         case 34:
                         case 2:
                         case 69:
                         case 39:
                         case 90:
                         case 47:
                         if(bvec4(false, true, _GLF_IDENTITY(false, ! (! (false))), _GLF_IDENTITY(_GLF_IDENTITY(true, bool(_GLF_IDENTITY(bvec2(true, false), bvec2(_GLF_IDENTITY(bvec3(bvec2(true, false), false), bvec3(bvec4(bvec3(bvec2(true, false), false), true))))))), (_GLF_IDENTITY(_GLF_IDENTITY(true, bool(_GLF_IDENTITY(bvec2(true, false), bvec2(_GLF_IDENTITY(bvec3(bvec2(true, false), false), bvec3(bvec4(bvec3(bvec2(true, false), false), true))))))), true && (_GLF_IDENTITY(_GLF_IDENTITY(true, bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(true, bool(bvec3(true, _GLF_IDENTITY(true, (true) || false), true))), false), bvec2(_GLF_IDENTITY(bvec3(bvec2(true, false), false), bvec3(bvec4(bvec3(bvec2(_GLF_IDENTITY(true, ! (! (true))), false), false), true))))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(true, bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(true, bool(bvec3(true, _GLF_IDENTITY(true, (_GLF_IDENTITY(true, _GLF_IDENTITY(false, bool(bvec4(false, true, false, true))) || (true))) || false), true))), false), bvec2(_GLF_IDENTITY(bvec3(bvec2(true, false), false), bvec3(bvec4(bvec3(bvec2(_GLF_IDENTITY(true, ! (! (true))), false), false), true)))))))))))) || _GLF_IDENTITY(false, false || (false))))[1])
                          {
                           (false ? mat3(-203.615, 8.0, -5.1, _GLF_IDENTITY(-1.5, _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(-1.5, max(-1.5, -1.5))) / 1.0, max(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(-1.5, max(-1.5, -1.5))), mix(float(_GLF_FUZZED(-6.8)), float((_GLF_IDENTITY(-1.5, max(-1.5, -1.5)))), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) / 1.0, clamp((_GLF_IDENTITY(-1.5, max(-1.5, -1.5))) / 1.0, (_GLF_IDENTITY(-1.5, _GLF_IDENTITY(max(-1.5, -1.5), (true ? max(-1.5, -1.5) : _GLF_FUZZED(-4.8))))) / 1.0, _GLF_IDENTITY((_GLF_IDENTITY(-1.5, max(-1.5, -1.5))) / 1.0, mix(float(_GLF_FUZZED(-3767.9176)), float(_GLF_IDENTITY((_GLF_IDENTITY(-1.5, max(-1.5, -1.5))), ((_GLF_IDENTITY(-1.5, max(-1.5, -1.5)))) * determinant(mat4(1.0, 1.0, 1.0, sqrt(1.0), 0.0, 1.0, length(vec2(0.0, 0.0)), 1.0, 0.0, 0.0, 1.0, tan(0.0), 0.0, 0.0, 0.0, round(length(normalize(1.0)))))) / 1.0), bool(true))))), _GLF_IDENTITY((_GLF_IDENTITY(-1.5, max(-1.5, -1.5))) / 1.0, ((_GLF_IDENTITY(-1.5, max(-1.5, -1.5))) / 1.0) + 0.0))), clamp(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(-1.5, max(-1.5, -1.5))) / 1.0, max(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(-1.5, max(-1.5, -1.5))), mix(float(_GLF_FUZZED(-6.8)), float((_GLF_IDENTITY(-1.5, max(-1.5, -1.5)))), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) / 1.0, clamp((_GLF_IDENTITY(-1.5, max(-1.5, -1.5))) / 1.0, (_GLF_IDENTITY(-1.5, _GLF_IDENTITY(max(-1.5, -1.5), (true ? max(-1.5, -1.5) : _GLF_FUZZED(-4.8))))) / 1.0, _GLF_IDENTITY((_GLF_IDENTITY(-1.5, max(-1.5, -1.5))) / 1.0, mix(float(_GLF_FUZZED(-3767.9176)), float(_GLF_IDENTITY((_GLF_IDENTITY(-1.5, max(-1.5, -1.5))), ((_GLF_IDENTITY(-1.5, max(-1.5, -1.5)))) * determinant(mat4(1.0, 1.0, 1.0, sqrt(1.0), 0.0, 1.0, length(vec2(0.0, 0.0)), 1.0, 0.0, 0.0, 1.0, tan(0.0), 0.0, 0.0, 0.0, round(length(normalize(1.0)))))) / 1.0), bool(true))))), _GLF_IDENTITY((_GLF_IDENTITY(-1.5, max(-1.5, -1.5))) / 1.0, ((_GLF_IDENTITY(-1.5, max(-1.5, -1.5))) / 1.0) + 0.0))), (_GLF_IDENTITY((_GLF_IDENTITY(-1.5, max(-1.5, -1.5))) / 1.0, max(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(-1.5, max(-1.5, -1.5))), mix(float(_GLF_FUZZED(-6.8)), float((_GLF_IDENTITY(-1.5, max(-1.5, -1.5)))), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) / 1.0, clamp((_GLF_IDENTITY(-1.5, max(-1.5, -1.5))) / 1.0, (_GLF_IDENTITY(-1.5, _GLF_IDENTITY(max(-1.5, -1.5), (true ? max(-1.5, -1.5) : _GLF_FUZZED(-4.8))))) / 1.0, _GLF_IDENTITY((_GLF_IDENTITY(-1.5, max(-1.5, -1.5))) / 1.0, mix(float(_GLF_FUZZED(-3767.9176)), float(_GLF_IDENTITY((_GLF_IDENTITY(-1.5, max(-1.5, -1.5))), ((_GLF_IDENTITY(-1.5, max(-1.5, -1.5)))) * determinant(mat4(1.0, 1.0, 1.0, sqrt(1.0), 0.0, 1.0, length(vec2(0.0, 0.0)), 1.0, 0.0, 0.0, 1.0, tan(0.0), 0.0, 0.0, 0.0, round(length(normalize(1.0)))))) / 1.0), bool(true))))), _GLF_IDENTITY((_GLF_IDENTITY(-1.5, max(-1.5, -1.5))) / 1.0, ((_GLF_IDENTITY(-1.5, max(-1.5, -1.5))) / 1.0) + 0.0)))) - 0.0), _GLF_IDENTITY((_GLF_IDENTITY(-1.5, max(-1.5, -1.5))) / 1.0, max(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(-1.5, max(-1.5, -1.5))), mix(float(_GLF_FUZZED(-6.8)), float((_GLF_IDENTITY(-1.5, max(-1.5, -1.5)))), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) / 1.0, clamp((_GLF_IDENTITY(-1.5, max(-1.5, -1.5))) / 1.0, (_GLF_IDENTITY(-1.5, _GLF_IDENTITY(max(-1.5, -1.5), (true ? max(-1.5, -1.5) : _GLF_FUZZED(-4.8))))) / 1.0, _GLF_IDENTITY((_GLF_IDENTITY(-1.5, max(-1.5, -1.5))) / 1.0, mix(float(_GLF_FUZZED(-3767.9176)), float(_GLF_IDENTITY((_GLF_IDENTITY(-1.5, max(-1.5, -1.5))), ((_GLF_IDENTITY(-1.5, max(-1.5, -1.5)))) * determinant(mat4(1.0, 1.0, 1.0, sqrt(1.0), 0.0, 1.0, length(vec2(0.0, 0.0)), 1.0, 0.0, 0.0, 1.0, tan(0.0), 0.0, 0.0, 0.0, round(length(normalize(1.0)))))) / 1.0), bool(true))))), _GLF_IDENTITY((_GLF_IDENTITY(-1.5, max(-1.5, -1.5))) / 1.0, ((_GLF_IDENTITY(-1.5, max(-1.5, -1.5))) / 1.0) + 0.0))), _GLF_IDENTITY((_GLF_IDENTITY(-1.5, max(-1.5, -1.5))) / 1.0, max(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(-1.5, max(-1.5, -1.5))), mix(float(_GLF_FUZZED(-6.8)), float((_GLF_IDENTITY(-1.5, max(-1.5, -1.5)))), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) / 1.0, clamp((_GLF_IDENTITY(-1.5, max(-1.5, -1.5))) / 1.0, (_GLF_IDENTITY(-1.5, _GLF_IDENTITY(max(-1.5, -1.5), (true ? max(-1.5, -1.5) : _GLF_FUZZED(-4.8))))) / 1.0, _GLF_IDENTITY((_GLF_IDENTITY(-1.5, max(-1.5, -1.5))) / 1.0, mix(float(_GLF_FUZZED(-3767.9176)), float(_GLF_IDENTITY((_GLF_IDENTITY(-1.5, max(-1.5, -1.5))), ((_GLF_IDENTITY(-1.5, max(-1.5, -1.5)))) * determinant(mat4(1.0, 1.0, 1.0, sqrt(1.0), 0.0, 1.0, length(vec2(0.0, 0.0)), 1.0, 0.0, 0.0, 1.0, tan(0.0), 0.0, 0.0, 0.0, round(length(normalize(1.0)))))) / 1.0), bool(true))))), _GLF_IDENTITY((_GLF_IDENTITY(-1.5, max(-1.5, -1.5))) / 1.0, ((_GLF_IDENTITY(-1.5, max(-1.5, -1.5))) / 1.0) + 0.0)))))), 80.98, 6765.7408, 4.6, 980.042, -2337.3075) : mat3(1.8, -4.1, 30.91, -7.8, 17.07, -18.42, 316.674, 3017.0873, 787.576));
                           25668;
                           uint _GLF_SWITCH_0_17v[9];
                           ivec4 _GLF_SWITCH_0_18v[72], _GLF_SWITCH_0_19v;
                           ;
                           mat3x2 _GLF_SWITCH_0_20v, _GLF_SWITCH_0_21v;
                          }
                         else
                          {
                          }
                         break;
                         default:
                         1;
                        }
                      }
                     else
                      {
                      }
                     for(                     _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch));
 mix(false, false, true); bitfieldInsert(next_virtual_gid, num_workgroup, 46265, sign(-47640)))
                      {
                       mat4 _GLF_SWITCH_0_22v, _GLF_SWITCH_0_23v;
                       for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != int(_GLF_ZERO(0.0, injectionSwitch.x))); _injected_loop_counter --)
                        {
                         if(_GLF_WRAPPED_IF_TRUE(true))
                          {
                           ivec3(-90323, -64644, -4808);
                          }
                         else
                          {
                          }
                        }
                       mat4x2(-92.01, 83.19, 9228.4167, -6.4, 413.454, 3837.8519, _GLF_IDENTITY(-14.98, _GLF_IDENTITY(float(_GLF_IDENTITY(mat4x3(_GLF_IDENTITY(-14.98, (false ? _GLF_FUZZED(6.9) : -14.98)), 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 0.0, 1.0, 0.0, 0.0, sin(0.0), 1.0, 1.0, _GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, _GLF_IDENTITY((_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-8.1) : 1.0))), float(_GLF_IDENTITY(vec3(_GLF_IDENTITY((_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-8.1) : 1.0))), (false ? _GLF_FUZZED(3.2) : (_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-8.1) : 1.0))))), 1.0, 0.0), (false ? _GLF_FUZZED(vec3(-1077.0789, 3.6, 7.9)) : _GLF_IDENTITY(vec3(_GLF_IDENTITY((_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-8.1) : 1.0))), (false ? _GLF_FUZZED(3.2) : (_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-8.1) : 1.0))))), 1.0, 0.0), vec3(mat4x3(vec3(_GLF_IDENTITY((_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-8.1) : 1.0))), (false ? _GLF_FUZZED(3.2) : (_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-8.1) : 1.0))))), 1.0, 0.0), 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0))))))) - sqrt(0.0))) - _GLF_ZERO(0.0, injectionSwitch.x))), (true ? mat4x3(_GLF_IDENTITY(-14.98, (false ? _GLF_FUZZED(6.9) : -14.98)), 1.0, _GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), min(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_ZERO(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)))), injectionSwitch.x), clamp(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), clamp(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))), (false ? _GLF_FUZZED(4.4) : _GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), clamp(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), clamp(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), 0.0 + (_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), mix(float(_GLF_ZERO(0.0, injectionSwitch.x)), float(_GLF_FUZZED(-9.6)), bool(false))))), _GLF_ZERO(0.0, injectionSwitch.x))), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))))))), 1.0, _GLF_IDENTITY(_GLF_IDENTITY(0.0, max(0.0, _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(determinant(mat2(45.36, -2.1, -9.7, -5.6))))))), (_GLF_IDENTITY(0.0, float(vec4(_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(7455.7124)), float(0.0), bool(true))), 0.0, 0.0, 0.0)))) / 1.0), 1.0, 0.0, 0.0, sin(0.0), 1.0, 1.0, 1.0) : _GLF_FUZZED(mat4x3(-3.2, 3.8, -3.8, -7.2, 786.053, -6.9, 4540.8843, -61.13, -5501.4123, 5980.0786, 1.2, -9200.3566))))), (true ? _GLF_IDENTITY(float(_GLF_IDENTITY(mat4x3(_GLF_IDENTITY(-14.98, (false ? _GLF_FUZZED(6.9) : -14.98)), 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 0.0, _GLF_IDENTITY(1.0, (1.0) + 0.0), 0.0, 0.0, sin(0.0), 1.0, 1.0, 1.0), (true ? mat4x3(_GLF_IDENTITY(-14.98, (false ? _GLF_FUZZED(_GLF_IDENTITY(6.9, (6.9) / cos(0.0))) : -14.98)), 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 0.0, 1.0, 0.0, 0.0, sin(0.0), 1.0, _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), 1.0) : _GLF_FUZZED(mat4x3(-3.2, _GLF_IDENTITY(3.8, mix(float(_GLF_FUZZED(4.7)), float(3.8), bool(true))), -3.8, -7.2, 786.053, -6.9, _GLF_IDENTITY(4540.8843, mix(float(_GLF_FUZZED(8688.8177)), float(_GLF_IDENTITY(4540.8843, (false ? _GLF_FUZZED(-70.49) : 4540.8843))), bool(true))), -61.13, -5501.4123, 5980.0786, 1.2, -9200.3566))))), max(float(_GLF_IDENTITY(mat4x3(_GLF_IDENTITY(-14.98, _GLF_IDENTITY((false ? _GLF_IDENTITY(_GLF_FUZZED(6.9), mix(float(_GLF_IDENTITY(_GLF_FUZZED(6.9), float(mat2x4(_GLF_FUZZED(6.9), sin(0.0), 1.0, 1.0, 1.0, 0.0, 0.0, 0.0)))), float(_GLF_FUZZED(-93.08)), bool(false))) : -14.98), mix(float((_GLF_IDENTITY(false, false || (false)) ? _GLF_FUZZED(6.9) : -14.98)), float(_GLF_FUZZED((+ 7.1))), bool(false)))), 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 0.0, 1.0, 0.0, 0.0, sin(0.0), 1.0, 1.0, 1.0), (true ? mat4x3(_GLF_IDENTITY(-14.98, (false ? _GLF_FUZZED(_GLF_IDENTITY(6.9, (false ? _GLF_FUZZED(-4663.8716) : 6.9))) : -14.98)), 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 0.0, 1.0, 0.0, 0.0, sin(0.0), 1.0, 1.0, 1.0) : _GLF_FUZZED(mat4x3(-3.2, 3.8, -3.8, -7.2, 786.053, -6.9, 4540.8843, -61.13, -5501.4123, 5980.0786, 1.2, -9200.3566))))), float(_GLF_IDENTITY(mat4x3(_GLF_IDENTITY(-14.98, (false ? _GLF_FUZZED(6.9) : -14.98)), 1.0, _GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)) : _GLF_FUZZED(vec2(-92.25, -4360.3606))))) - vec2(0.0, 0.0)).x, injectionSwitch.x, injectionSwitch.x)), float(_GLF_IDENTITY(mat3x4(_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)) : _GLF_FUZZED(vec2(-92.25, -4360.3606))))) - vec2(0.0, 0.0)).x, injectionSwitch.x, injectionSwitch.x)), 1.0, determinant(mat4(1.0, _GLF_ZERO(0.0, injectionSwitch.x), log(1.0), 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, abs(1.0), 1.0)), determinant(mat2(1.0, 0.0, sin(0.0), 1.0)), 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0), mat3x4(mat3x4(_GLF_IDENTITY(mat3x4(_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)) : _GLF_FUZZED(vec2(-92.25, -4360.3606))))) - vec2(0.0, 0.0)).x, injectionSwitch.x, injectionSwitch.x)), 1.0, determinant(mat4(1.0, _GLF_ZERO(0.0, injectionSwitch.x), log(1.0), 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, abs(1.0), 1.0)), determinant(mat2(1.0, 0.0, sin(0.0), 1.0)), 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0), mat3x4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0) + (mat3x4(_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)) : _GLF_FUZZED(vec2(-92.25, -4360.3606))))) - vec2(0.0, 0.0)).x, injectionSwitch.x, injectionSwitch.x)), 1.0, determinant(mat4(1.0, _GLF_ZERO(0.0, injectionSwitch.x), log(1.0), 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, abs(1.0), 1.0)), determinant(mat2(1.0, 0.0, sin(0.0), 1.0)), 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0))))))))) - 0.0)), 1.0, 0.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(sin(0.0), max(sin(0.0), sin(0.0))), 1.0, 1.0, 1.0), (true ? mat4x3(_GLF_IDENTITY(-14.98, (false ? _GLF_FUZZED(6.9) : -14.98)), 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 0.0, 1.0, _GLF_IDENTITY(0.0, float(mat3x2(0.0, 0.0, 0.0, 1.0, 1.0, 0.0))), 0.0, _GLF_IDENTITY(_GLF_IDENTITY(sin(0.0), max(sin(0.0), _GLF_IDENTITY(sin(0.0), mix(float(sin(0.0)), float(_GLF_FUZZED(-0.3)), bool(false))))), max(sin(0.0), _GLF_IDENTITY(sin(0.0), (true ? sin(0.0) : _GLF_FUZZED(asin(-41.32)))))), 1.0, 1.0, 1.0) : _GLF_FUZZED(mat4x3(-3.2, 3.8, -3.8, -7.2, 786.053, -6.9, 4540.8843, -61.13, -5501.4123, 5980.0786, 1.2, -9200.3566))))))) : _GLF_FUZZED(-3.0)))), -2.1);
                       mat2((mat3x4(-9.3, -18.67, -7348.4371, -911.924, 55.09, 31.81, 5611.9409, -6.9, 9.2, -9.5, 300.111, -188.409)));
                       for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > int(_GLF_ZERO(0.0, injectionSwitch.x))); _injected_loop_counter --)
                        {
                         if(_GLF_WRAPPED_IF_FALSE(false))
                          {
                          }
                         else
                          {
                           for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter > 0, (_GLF_IDENTITY(_injected_loop_counter > 0, false || (_injected_loop_counter > 0))) && true)); _injected_loop_counter --)
                            {
                             switch(_GLF_SWITCH((0 & (84238 / 82401))))
                              {
                               case 38:
                               mat3 _GLF_SWITCH_3_0v;
                               case 56:
                               float _GLF_SWITCH_3_1v;
                               case 0:
                               case 81:
                               case 20:
                               case 99:
                               case 84:
                               case 78:
                               case 66:
                               switch(_GLF_SWITCH(0))
                                {
                                 case 10:
                                 mat2x4(mat3(-2.5, 2.3, -1.2, 7.9, 6078.2851, -501.623, 8611.4271, -1.7, 1612.3269));
                                 case 4:
                                 uvec3 _GLF_SWITCH_2_0v;
                                 case 0:
                                 case 23:
                                 case 73:
                                 case 50:
                                 case 31:
                                 case 62:
                                 case 89:
                                 case 49:
                                 mat4x2(-6.3, 1.6, 48.39, 6.3, _GLF_IDENTITY(_GLF_IDENTITY(-8203.8660, 1.0 * (_GLF_IDENTITY(-8203.8660, (true ? _GLF_IDENTITY(-8203.8660, (-8203.8660) * 1.0) : _GLF_FUZZED(_GLF_SWITCH_3_1v))))), _GLF_IDENTITY(float(_GLF_IDENTITY(mat4x3(-8203.8660, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, cos(0.0), determinant(mat3(0.0, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-0.3)), float(0.0), bool(true))), 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0)), 0.0, 0.0, sqrt(0.0)), (true ? _GLF_IDENTITY(mat4x3(-8203.8660, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, cos(0.0), determinant(mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, _GLF_IDENTITY(0.0, (0.0) * 1.0))), 0.0, 0.0, sqrt(0.0)), (false ? _GLF_FUZZED(mat4x3(-6.4, -505.680, -884.358, -752.656, -1.7, 34.18, -3146.8531, 6.9, 7235.8562, -3.5, 7.1, _GLF_IDENTITY(-3.8, clamp(_GLF_IDENTITY(-3.8, mix(float(_GLF_FUZZED(-8940.8633)), float(-3.8), bool(true))), -3.8, _GLF_IDENTITY(-3.8, (true ? -3.8 : _GLF_FUZZED(_GLF_SWITCH_3_1v))))))) : mat4x3(-8203.8660, 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-920.624)), bool(false))), 0.0)), 0.0, 1.0, _GLF_IDENTITY(cos(0.0), (_GLF_IDENTITY(cos(0.0), (false ? _GLF_FUZZED(_GLF_SWITCH_3_1v) : cos(0.0)))) + 0.0), determinant(mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0)), 0.0, 0.0, sqrt(0.0)))) : _GLF_FUZZED(mat4x3(5.5, 5346.6192, -77.78, 7416.4939, -7.1, -4.9, -4.1, -3.0, 3.9, -2.4, 26.74, _GLF_IDENTITY(86.69, max(86.69, 86.69))))))), min(float(_GLF_IDENTITY(mat4x3(-8203.8660, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(cos(0.0), min(_GLF_IDENTITY(cos(0.0), float(vec3(cos(0.0), _GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0)), dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0))), 1.0))), cos(0.0))), determinant(mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0)), 0.0, 0.0, sqrt(0.0)), (true ? _GLF_IDENTITY(mat4x3(_GLF_IDENTITY(-8203.8660, _GLF_IDENTITY(1.0, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(tanh(_GLF_SWITCH_3_1v)) : 1.0)) * (_GLF_IDENTITY(-8203.8660, (_GLF_IDENTITY(-8203.8660, clamp(-8203.8660, -8203.8660, -8203.8660))) - 0.0))), 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, cos(0.0), determinant(mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(1.0, 0.0 + (1.0)), 0.0)), 0.0, 0.0, sqrt(0.0)), (false ? _GLF_FUZZED(mat4x3(-6.4, -505.680, -884.358, -752.656, -1.7, 34.18, -3146.8531, 6.9, 7235.8562, -3.5, 7.1, -3.8)) : mat4x3(-8203.8660, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, cos(0.0), determinant(mat3(0.0, _GLF_IDENTITY(0.0, (0.0) * 1.0), 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0)), 0.0, 0.0, sqrt(0.0)))) : _GLF_FUZZED(mat4x3(5.5, 5346.6192, -77.78, 7416.4939, _GLF_IDENTITY(-7.1, (false ? _GLF_FUZZED(825.627) : _GLF_IDENTITY(-7.1, mix(float(-7.1), float(_GLF_FUZZED(-5.5)), bool(false))))), -4.9, _GLF_IDENTITY(-4.1, sin(0.0) + (-4.1)), -3.0, 3.9, -2.4, 26.74, 86.69))))), float(_GLF_IDENTITY(mat4x3(-8203.8660, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, cos(0.0), determinant(mat3(0.0, 0.0, _GLF_IDENTITY(0.0, clamp(0.0, _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(fma(95.27, -0.0, _GLF_SWITCH_3_1v)))), 0.0)), 0.0, _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-9.1)), bool(false))), _GLF_IDENTITY(0.0, float(mat4x2(0.0, sqrt(0.0), 1.0, 0.0, 1.0, _GLF_IDENTITY(tan(sin(0.0)), clamp(tan(sin(0.0)), _GLF_IDENTITY(tan(sin(0.0)), min(tan(sin(0.0)), tan(sin(0.0)))), tan(sin(0.0)))), 1.0, 0.0))), 1.0, 1.0, 0.0)), 0.0, 0.0, sqrt(0.0)), (true ? _GLF_IDENTITY(mat4x3(-8203.8660, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, cos(0.0), determinant(mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0)), 0.0, 0.0, sqrt(0.0)), (false ? _GLF_FUZZED(mat4x3(-6.4, -505.680, -884.358, -752.656, -1.7, 34.18, -3146.8531, 6.9, 7235.8562, -3.5, 7.1, -3.8)) : mat4x3(-8203.8660, 0.0, _GLF_IDENTITY(0.0, _GLF_IDENTITY(float(mat4x2(0.0, 1.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), exp(0.0), exp(0.0), sqrt(0.0), determinant(mat4(0.0, abs(0.0), 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0)))), 0.0 + (float(mat4x2(0.0, 1.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), exp(0.0), exp(0.0), sqrt(0.0), determinant(mat4(0.0, abs(0.0), 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0))))))), 0.0, 0.0, 0.0, 1.0, cos(0.0), determinant(mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0)), 0.0, 0.0, sqrt(0.0)))) : _GLF_FUZZED(mat4x3(5.5, 5346.6192, -77.78, 7416.4939, -7.1, -4.9, -4.1, -3.0, 3.9, -2.4, 26.74, 86.69)))))))), 4571.2729, 4.2, 888.472);
                                 break;
                                 case 93:
                                 bool _GLF_SWITCH_2_1v;
                                 default:
                                 if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, bool(bvec4(true, false, false, false)))))
                                  {
                                   1;
                                  }
                                 else
                                  {
                                  }
                                }
                               break;
                               default:
                               1;
                              }
                            }
                          }
                        }
                       if(_GLF_WRAPPED_IF_FALSE(false))
                        {
                        }
                       else
                        {
                         (mat4x3((mat4x2(9.6, 2324.9831, -70.17, 2294.1193, 929.556, _GLF_IDENTITY(-2.7, (-2.7) * 1.0), -739.556, -2383.6032) * mat3x4(1461.4157, 5.9, 1.8, 94.96, 6.2, _GLF_IDENTITY(-9.7, max(-9.7, -9.7)), 70.55, -12.33, 8.3, -8.4, 9.8, 8143.4336))) - mat4x3(-260.818, _GLF_IDENTITY(-5642.1807, (_GLF_IDENTITY(-5642.1807, (true ? -5642.1807 : _GLF_FUZZED(-2.9)))) / 1.0), _GLF_IDENTITY(254.441, max(254.441, 254.441)), 8484.6462, 6.5, 1724.7288, -4.2, -60.03, 21.90, 5.2, -11.90, -2934.1696));
                        }
                       uvec4 _GLF_SWITCH_0_24v, _GLF_SWITCH_0_25v, _GLF_SWITCH_0_26v[35];
                       if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(_GLF_IDENTITY(true, ! (! (true))), (injectionSwitch.x < injectionSwitch.y))))
                        {
                         for(int _injected_loop_counter = int(_GLF_ONE(1.0, injectionSwitch.y)); _GLF_WRAPPED_LOOP(_injected_loop_counter > int(_GLF_ZERO(0.0, injectionSwitch.x))); _injected_loop_counter --)
                          {
                           vec4(732.919, -2503.8867, 1.0, -8145.2410);
                          }
                        }
                       else
                        {
                        }
                       uvec4 _GLF_SWITCH_0_27v;
                      }
                     if(true)
                      {
                       uvec2 _GLF_SWITCH_0_28v, _GLF_SWITCH_0_29v;
                       ivec4 _GLF_SWITCH_0_30v, _GLF_SWITCH_0_31v;
                       mat3x4(mat2x3(-6.8, _GLF_IDENTITY(6944.8244, mix(float(_GLF_FUZZED(float(140169u))), float(_GLF_IDENTITY(6944.8244, (false ? _GLF_FUZZED(-1.4) : _GLF_IDENTITY(6944.8244, clamp(6944.8244, 6944.8244, 6944.8244))))), bool(true))), -92.72, 45.38, -818.322, 69.53));
                       if(_GLF_WRAPPED_IF_TRUE(true))
                        {
                         vec3(-9.9, 9.7, 97.40);
                        }
                       else
                        {
                        }
                      }
                     if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-693.862), _GLF_FUZZED(9510.1290)), vec2((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch)[1], (false ? _GLF_FUZZED(-3911.5616) : (injectionSwitch)[1]))), bvec2(true, true))).x > injectionSwitch.y))))
                      {
                      }
                     else
                      {
                       mat4x3(vec3(22.88, 8.2, 8.8), vec3(-5399.2353, _GLF_IDENTITY(6505.6558, max(6505.6558, 6505.6558)), 68.76), vec3(_GLF_IDENTITY(-12.98, clamp(_GLF_IDENTITY(-12.98, (-12.98) / 1.0), _GLF_IDENTITY(_GLF_IDENTITY(-12.98, min(-12.98, _GLF_IDENTITY(-12.98, (false ? _GLF_FUZZED(96.93) : -12.98)))), clamp(_GLF_IDENTITY(-12.98, min(-12.98, _GLF_IDENTITY(-12.98, (false ? _GLF_FUZZED(96.93) : -12.98)))), _GLF_IDENTITY(_GLF_IDENTITY(-12.98, min(-12.98, _GLF_IDENTITY(-12.98, (false ? _GLF_FUZZED(96.93) : -12.98)))), clamp(_GLF_IDENTITY(-12.98, min(-12.98, _GLF_IDENTITY(-12.98, (false ? _GLF_FUZZED(96.93) : -12.98)))), _GLF_IDENTITY(-12.98, min(-12.98, _GLF_IDENTITY(-12.98, (false ? _GLF_FUZZED(96.93) : -12.98)))), _GLF_IDENTITY(-12.98, min(-12.98, _GLF_IDENTITY(-12.98, (false ? _GLF_FUZZED(96.93) : -12.98)))))), _GLF_IDENTITY(_GLF_IDENTITY(-12.98, min(_GLF_IDENTITY(-12.98, clamp(-12.98, _GLF_IDENTITY(-12.98, max(-12.98, -12.98)), _GLF_IDENTITY(-12.98, clamp(-12.98, -12.98, -12.98)))), _GLF_IDENTITY(-12.98, (false ? _GLF_FUZZED(96.93) : -12.98)))), max(_GLF_IDENTITY(_GLF_IDENTITY(-12.98, min(-12.98, _GLF_IDENTITY(-12.98, (false ? _GLF_FUZZED(96.93) : -12.98)))), float(mat2x4(_GLF_IDENTITY(-12.98, min(-12.98, _GLF_IDENTITY(-12.98, (false ? _GLF_FUZZED(96.93) : -12.98)))), 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, _GLF_IDENTITY(0.0, (0.0) / 1.0)))), _GLF_IDENTITY(-12.98, min(-12.98, _GLF_IDENTITY(-12.98, (false ? _GLF_FUZZED(96.93) : -12.98)))))))), _GLF_IDENTITY(-12.98, _GLF_IDENTITY((_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? -12.98 : _GLF_FUZZED(-67.63)), max((_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? -12.98 : _GLF_FUZZED(-67.63)), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? -12.98 : _GLF_FUZZED(-67.63))))))), -9.6, 8126.6376), vec3(_GLF_IDENTITY(62.46, mix(float(_GLF_FUZZED((-9.5 - -7.6))), float(_GLF_IDENTITY(62.46, float(mat3(62.46, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0)))), bool(true))), -7423.3042, _GLF_IDENTITY(8.7, mix(float(8.7), float(_GLF_FUZZED(-4.2)), bool(false)))))[_GLF_IDENTITY(_GLF_IDENTITY(2, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(55782) : _GLF_IDENTITY(2, int(ivec3(2, (0 & -84297), 0))))), (true ? 2 : _GLF_FUZZED(-66588)))];
                      }
                    }
                   case 24:
                   do
                    {
                     do
                      {
                       ;
                      }
                     while(_GLF_WRAPPED_LOOP(false));
                    }
                   while(_GLF_WRAPPED_LOOP(false));
                   mat3x2 _GLF_SWITCH_0_32v, _GLF_SWITCH_0_33v;
                   mat4x2 _GLF_SWITCH_0_34v;
                   break;
                   case 94:
                   do
                    {
                     mat4x2 _GLF_SWITCH_4_0v;
                    }
                   while(_GLF_WRAPPED_LOOP(false));
                   default:
                   if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                    {
                    }
                   else
                    {
                     1;
                    }
                  }
                }
               while(_GLF_WRAPPED_LOOP(false));
              }
             else
              {
              }
            }
           else
            {
             if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
              {
               switch(_GLF_SWITCH(0))
                {
                 case 23:
                 if(_GLF_WRAPPED_IF_FALSE(false))
                  {
                  }
                 else
                  {
                   bitfieldInsert(_GLF_IDENTITY(uvec4(73951u, 139751u, 154207u, 85411u), (_GLF_IDENTITY(uvec4(73951u, 139751u, 154207u, 85411u), min(uvec4(73951u, 139751u, 154207u, 85411u), uvec4(73951u, 139751u, 154207u, 85411u)))) / uvec4(1u, 1u, 1u, 1u)), uvec4(155937u, 191034u, 102579u, 177040u), -6066, -30794);
                  }
                 case 26:
                 uvec3 _GLF_SWITCH_5_0v, _GLF_SWITCH_5_1v, _GLF_SWITCH_5_2v;
                 case 0:
                 case 35:
                 case 50:
                 case 38:
                 case 85:
                 case 48:
                 case 80:
                 case 68:
                 case 95:
                 for(int _injected_loop_counter = int(_GLF_ONE(1.0, injectionSwitch.y)); _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _GLF_IDENTITY(_injected_loop_counter --, (_injected_loop_counter --) << int(_GLF_ZERO(0.0, injectionSwitch.x))))
                  {
                   mat4x2 _GLF_SWITCH_0_35v, _GLF_SWITCH_0_36v;
                   ivec2 _GLF_SWITCH_0_37v;
                   do
                    {
                     if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, (false) || false)))))
                      {
                      }
                     else
                      {
                       do
                        {
                         for(                         dot(injectionSwitch, vec2(2.0, -6664.1819));
 true; mat4(_GLF_IDENTITY(7.0, _GLF_IDENTITY(float(vec2(7.0, 0.0)), max(float(vec2(7.0, 0.0)), _GLF_IDENTITY(float(vec2(7.0, 0.0)), max(float(vec2(7.0, 0.0)), float(vec2(7.0, 0.0))))))), -2.1, -7340.1189, 99.06, -8651.8839, 6.8, 3.7, _GLF_IDENTITY(-71.81, (-71.81) / 1.0), _GLF_IDENTITY(-1.7, (-1.7) + abs(determinant(mat2(0.0, 0.0, 0.0, 0.0)))), -8647.8124, 5.2, -273.753, -3062.9613, 9.8, -7.2, _GLF_IDENTITY(-1.1, (-1.1) - 0.0)))
                          {
                          }
                        }
                       while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, _GLF_IDENTITY((_GLF_IDENTITY(false, bool(bvec4(false, false, _GLF_IDENTITY(false, ! (! (false))), false)))), true && ((_GLF_IDENTITY(false, bool(bvec4(false, false, _GLF_IDENTITY(false, ! (! (false))), false)))))) && true)));
                      }
                    }
                   while(_GLF_WRAPPED_LOOP(false));
                   if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bool(_GLF_FALSE(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) && true)) || false), _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y)))) || false)))))))
                    {
                    }
                   else
                    {
                     if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
                      {
                       do
                        {
                         bvec4(true, true, _GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) || false)) && true)) && true)))))), true).wyww;
                        }
                       while(_GLF_WRAPPED_LOOP(false));
                      }
                     else
                      {
                      }
                    }
                   do
                    {
                     do
                      {
                       bvec3(true);
                      }
                     while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
                    }
                   while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
                   do
                    {
                     switch(_GLF_SWITCH(0))
                      {
                       case 18:
                       lessThanEqual(uvec4(176664u, 103286u, 61649u, 144261u), uvec4(182835u, 97512u, 16958u, 171843u));
                       case 28:
                       floatBitsToUint(injectionSwitch);
                       case 0:
                       case 40:
                       case 1:
                       case 46:
                       case 71:
                       case 5:
                       case 96:
                       case 73:
                       case 33:
                       case 24:
                       uvec3(19927u, 197538u, 122427u);
                       break;
                       case 53:
                       mat4x2 _GLF_SWITCH_6_0v, _GLF_SWITCH_6_1v;
                       case 87:
                       vec4 _GLF_SWITCH_6_2v, _GLF_SWITCH_6_3v[42], _GLF_SWITCH_6_4v;
                       default:
                       1;
                      }
                    }
                   while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
                   if(_GLF_WRAPPED_IF_TRUE(true))
                    {
                     while(true)
                      {
                       uint _GLF_SWITCH_0_38v;
                       mat2x4 _GLF_SWITCH_0_39v[67], _GLF_SWITCH_0_40v, _GLF_SWITCH_0_41v;
                       for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
                        {
                         uvec2(_GLF_IDENTITY(49195u, ~ (~ (49195u))), 164529u);
                        }
                       vec4 _GLF_SWITCH_0_42v;
                       uvec4 _GLF_SWITCH_0_43v, _GLF_SWITCH_0_44v;
                       if(_GLF_WRAPPED_IF_FALSE(false))
                        {
                        }
                       else
                        {
                         equal((_GLF_SWITCH_0_43v & _GLF_SWITCH_0_43v), _GLF_SWITCH_0_43v);
                        }
                      }
                    }
                   else
                    {
                    }
                   do
                    {
                     switch(_GLF_SWITCH(0))
                      {
                       case 94:
                       false;
                       case 22:
                       vec2 _GLF_SWITCH_4_0v[9];
                       case 0:
                       case 32:
                       for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != int(_GLF_ONE(1.0, injectionSwitch.y))); _injected_loop_counter ++)
                        {
                         switch(_GLF_SWITCH(0))
                          {
                           case 86:
                           mod(vec4(9413.8885, -970.339, -8.8, -823.119), vec4(2381.6445, -24.84, 8.5, 913.019));
                           case 0:
                           case 67:
                           case 72:
                           case 83:
                           for(int _injected_loop_counter = _GLF_IDENTITY(0, 0 | (0)); _GLF_WRAPPED_LOOP(_injected_loop_counter < int(_GLF_ONE(1.0, injectionSwitch.y))); _injected_loop_counter ++)
                            {
                             do
                              {
                               do
                                {
                                 if(true)
                                  {
                                   switch(_GLF_SWITCH(0))
                                    {
                                     case 59:
                                     (- mat3x2(_GLF_SWITCH_0_35v));
                                     case 5:
                                     mat4x2(8.8, -9.7, 7.4, -8.9, 0.4, 5329.1412, -8302.7010, log(16.48));
                                     case 0:
                                     ivec4 _GLF_SWITCH_0_45v, _GLF_SWITCH_0_46v, _GLF_SWITCH_0_47v;
                                     case 46:
                                     case 23:
                                     if(_GLF_WRAPPED_IF_FALSE(false))
                                      {
                                      }
                                     else
                                      {
                                       ;
                                      }
                                     break;
                                     default:
                                     1;
                                    }
                                  }
                                }
                               while(_GLF_WRAPPED_LOOP(false));
                              }
                             while(_GLF_WRAPPED_LOOP(false));
                            }
                           break;
                           case 84:
                           ;
                           case 93:
                           mat4x3(-47.06, 0.1, 55.56, -8.9, 1452.2162, -6.4, 386.010, 7.0, 191.423, -88.72, 6636.2974, -6.4);
                           default:
                           1;
                          }
                        }
                       break;
                       default:
                       1;
                      }
                    }
                   while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
                  }
                 break;
                 default:
                 1;
                }
              }
             else
              {
              }
            }
          }
         while(_GLF_WRAPPED_LOOP(false));
        }
       while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)))));
       case 0:
       case 66:
       case 15:
       case 6:
       atomicStore(buf[next_virtual_gid], _GLF_IDENTITY(uint(2), clamp(uint(2), uint(2), uint(2))), 4, 64, 4);
       case 96:
       if(_GLF_WRAPPED_IF_FALSE(false))
        {
        }
       else
        {
         for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < ((1 << _GLF_IDENTITY(int(1), int(1))) >> _GLF_IDENTITY(int(1), _GLF_IDENTITY(int(1), max(int(1), int(1)))))); _injected_loop_counter ++)
          {
           if(_GLF_WRAPPED_IF_FALSE(false))
            {
            }
           else
            {
             switch(_GLF_SWITCH((0 & ivec2(-39587, 44308).y)))
              {
               case 0:
               case 25:
               case 26:
               case 3:
               case 22:
               case 58:
               case 43:
               case 32:
               case 20:
               case 41:
               switch(_GLF_SWITCH(0))
                {
                 case 71:
                 uvec2 _GLF_SWITCH_1_0v;
                 case 73:
                 for(int _injected_loop_counter = int(_GLF_ONE(1.0, injectionSwitch.y)); _GLF_WRAPPED_LOOP(_injected_loop_counter > _GLF_IDENTITY(0, (0) | (0))); _injected_loop_counter --)
                  {
                   switch(_GLF_SWITCH(int(_GLF_ZERO(0.0, injectionSwitch.x))))
                    {
                     case 0:
                     case 63:
                     case 58:
                     case 56:
                     case 28:
                     case 71:
                     case 38:
                     case 34:
                     case 27:
                     case 57:
                     if(_GLF_WRAPPED_IF_FALSE(false))
                      {
                      }
                     else
                      {
                       mat4x3(mat4(-9.6, -52.82, 5.4, 2.9, 38.37, 1968.7842, 25.00, -1.4, 6.3, -17.05, -2.4, -6.7, -3.2, 2.1, -39.11, 695.448));
                      }
                     break;
                     case 55:
                     mat3x2 _GLF_SWITCH_6_0v[51], _GLF_SWITCH_6_1v, _GLF_SWITCH_6_2v;
                     default:
                     1;
                    }
                  }
                 case 0:
                 case 7:
                 case 77:
                 case 90:
                 case 17:
                 case 67:
                 case 96:
                 case 59:
                 case 20:
                 subgroupAll(true);
                 break;
                 case 3:
                 if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, bool(bvec4(true, false, true, true)))))
                  {
                   ;
                  }
                 else
                  {
                  }
                 case 79:
                 ;
                 default:
                 for(int _injected_loop_counter = int(_GLF_ZERO(0.0, injectionSwitch.x)); _GLF_WRAPPED_LOOP(_injected_loop_counter != int(_GLF_ONE(1.0, injectionSwitch.y))); _injected_loop_counter ++)
                  {
                   1;
                  }
                }
               break;
               case 21:
               ivec4(-19059, -62904, 94195, 22212);
               default:
               1;
              }
            }
          }
        }
       break;
       case 33:
       if(_GLF_WRAPPED_IF_FALSE(false))
        {
        }
       else
        {
         for(int _injected_loop_counter = ((0 >> _GLF_IDENTITY(int(8), _GLF_IDENTITY(_GLF_IDENTITY(int(8), (int(_GLF_IDENTITY(8, max(8, 8)))) | (_GLF_IDENTITY(int(8), (int(8)) | (_GLF_IDENTITY(int(8), clamp(int(8), int(8), int(8))))))), 0 ^ _GLF_IDENTITY((int(_GLF_IDENTITY(8, 0 ^ (_GLF_IDENTITY(8, ~ (~ (8))))))), ((int(_GLF_IDENTITY(_GLF_IDENTITY(8, 0 ^ (_GLF_IDENTITY(8, ~ (~ (8))))), min(_GLF_IDENTITY(8, 0 ^ (_GLF_IDENTITY(8, ~ (~ (8))))), _GLF_IDENTITY(8, 0 ^ (_GLF_IDENTITY(8, ~ (~ (8)))))))))) >> (0 << _GLF_IDENTITY(int(7), int(7))))))) << _GLF_IDENTITY(int(3), int(3))); _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
          {
           if(_GLF_WRAPPED_IF_TRUE(true))
            {
             do
              {
               if(false)
                {
                 switch(_GLF_SWITCH(0))
                  {
                   case 0:
                   while(true)
                    {
                    }
                   mat4x3 _GLF_SWITCH_0_48v, _GLF_SWITCH_0_49v, _GLF_SWITCH_0_50v[89];
                   int _GLF_SWITCH_0_51v;
                   int _GLF_SWITCH_0_52v, _GLF_SWITCH_0_53v;
                   if(_GLF_WRAPPED_IF_TRUE(true))
                    {
                     if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                      {
                      }
                     else
                      {
                       if(_GLF_WRAPPED_IF_FALSE(false))
                        {
                        }
                       else
                        {
                         for(int _injected_loop_counter = int(_GLF_ONE(1.0, injectionSwitch.y)); _GLF_WRAPPED_LOOP(_injected_loop_counter > (_GLF_IDENTITY(int(_GLF_ZERO(0.0, injectionSwitch.x)) & (21589 >> 20983), (false ? _GLF_FUZZED(min(_injected_loop_counter, _GLF_SWITCH_0_52v)) : _GLF_IDENTITY(int(_GLF_ZERO(0.0, injectionSwitch.x)) & (21589 >> 20983), (int(_GLF_ZERO(0.0, injectionSwitch.x)) & (21589 >> 20983)) >> int(_GLF_ZERO(0.0, injectionSwitch.x))))))); _injected_loop_counter --)
                          {
                           while(true)
                            {
                             do
                              {
                               (- _GLF_IDENTITY(vec3(-7.5, 219.164, 78.62), vec3(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 0.0, 0.0) + (_GLF_IDENTITY(vec3(-7.5, 219.164, 78.62), vec3(mat2(vec3(-7.5, 219.164, 78.62), 1.0))))));
                              }
                             while(_GLF_WRAPPED_LOOP(false));
                             _GLF_SWITCH_0_49v;
                             while((_GLF_IDENTITY(ivec3(3896, 32916, 26493) == bitCount(uvec3(60003u, 111250u, 69733u)), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, _GLF_IDENTITY(bool(bvec4(injectionSwitch.x < injectionSwitch.y, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)), true && (bool(bvec4(injectionSwitch.x < injectionSwitch.y, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))))))) && (ivec3(3896, 32916, 26493) == bitCount(uvec3(60003u, 111250u, 69733u))))))
                              {
                               ivec4 _GLF_SWITCH_0_54v;
                               for(int _injected_loop_counter = int(_GLF_ONE(1.0, injectionSwitch.y)); _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
                                {
                                 mat3x2(839.815, -4.6, -3.1, 6.4, 4989.7715, -482.110);
                                }
                               mat4x3 _GLF_SWITCH_0_55v;
                              }
                            }
                          }
                        }
                      }
                    }
                   else
                    {
                    }
                   break;
                   case 30:
                   if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, (false) && true)))))
                    {
                    }
                   else
                    {
                     if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                      {
                      }
                     else
                      {
                       switch(_GLF_SWITCH(0))
                        {
                         case 52:
                         uvec3 _GLF_SWITCH_6_0v[24], _GLF_SWITCH_6_1v;
                         case 83:
                         ((mat3x2(mat2x4(9289.0777, 5.5, -5598.9760, -3.7, 65.59, -6498.9331, -6315.2865, -2.4)) == mat3x2(24.10, 8.8, 8.9, 458.791, 8102.7411, -121.310)) ? bvec4(false, true, true, false) : bvec4(false, false, false, false));
                         case 0:
                         switch(_GLF_SWITCH(0))
                          {
                           case 76:
                           do
                            {
                             frexp(818.207, _injected_loop_counter);
                            }
                           while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
                           case 0:
                           case 47:
                           case 36:
                           case 94:
                           case 39:
                           case 75:
                           case 90:
                           case 99:
                           case 40:
                           case 27:
                           mat2x4(8.2, 97.65, -6.2, -0.7, -80.14, 9617.2274, -6.3, -273.700);
                           break;
                           case 23:
                           if(_GLF_WRAPPED_IF_TRUE(true))
                            {
                             if(_GLF_WRAPPED_IF_FALSE(false))
                              {
                              }
                             else
                              {
                               do
                                {
                                 ;
                                }
                               while(_GLF_WRAPPED_LOOP(false));
                              }
                            }
                           else
                            {
                            }
                           default:
                           1;
                          }
                         break;
                         case 59:
                         ivec4(-74356, -780, -57267, 94047);
                         default:
                         1;
                        }
                      }
                    }
                   case 61:
                   (mat4x3(254.917, -6.9, 8.7, 803.524, -0.0, -6.6, -913.258, 7.1, -5742.1011, -689.845, 3.5, 25.40) + -5.6);
                   default:
                   do
                    {
                     do
                      {
                       1;
                      }
                     while(_GLF_WRAPPED_LOOP(false));
                    }
                   while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
                  }
                }
              }
             while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
            }
           else
            {
            }
          }
        }
       default:
       if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
        {
         do
          {
           for(int _injected_loop_counter = ((1 << _GLF_IDENTITY(int(1), int(1))) >> _GLF_IDENTITY(int(1), int(1))); _GLF_WRAPPED_LOOP(_injected_loop_counter > _GLF_IDENTITY(0, max(0, 0))); _injected_loop_counter --)
            {
             for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > (41319 & int(_GLF_ZERO(0.0, injectionSwitch.x)))); _injected_loop_counter --)
              {
               for(int _injected_loop_counter = 1; _GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter != 0), ! (! (_GLF_WRAPPED_LOOP(_injected_loop_counter != 0)))); _injected_loop_counter --)
                {
                 do
                  {
                   1;
                  }
                 while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, ! (! (false)))));
                }
              }
            }
          }
         while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
        }
       else
        {
        }
      }
    }
   else
    {
    }
  }
}
