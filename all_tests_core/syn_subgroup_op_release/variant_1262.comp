#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


struct _GLF_struct_3 {
 mat3 _f0;
 ivec3 _f1;
 bool _f2;
 mat4 _f3;
 mat4 _f4;
 mat3x4 _f5;
} ;

struct _GLF_struct_2 {
 mat4x3 _f0;
 bvec4 _f1;
 bool _f2;
 uvec3 _f3;
 bvec3 _f4;
 bvec2 _f5;
 mat3x2 _f6;
} ;

struct _GLF_struct_4 {
 _GLF_struct_2 _f0;
 mat2 _f1;
 _GLF_struct_3 _f2;
 mat3 _f3;
 bool _f4;
 mat2 _f5;
} ;

struct _GLF_struct_0 {
 vec2 _f0;
 mat2 _f1;
} ;

struct _GLF_struct_1 {
 mat4x2 _f0;
 mat4x3 _f1;
 mat3x2 _f2;
 vec4 _f3;
 _GLF_struct_0 _f4;
 mat3x2 _f5;
 uint _f6;
} ;

struct _GLF_struct_5 {
 mat2x4 _f0;
 uint workgroup_base;
 _GLF_struct_1 _f1;
 _GLF_struct_4 _f2;
} ;

layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(false))
  {
   for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != _GLF_IDENTITY(0, (0) << 0)); _injected_loop_counter --)
    {
     for(int _injected_loop_counter = int(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), float(float(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), (_GLF_ONE(1.0, injectionSwitch.y)) - 0.0))))); _GLF_WRAPPED_LOOP(_injected_loop_counter != int(_GLF_ZERO(0.0, injectionSwitch.x))); _injected_loop_counter --)
      {
       return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      break;
    }
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_WRAPPED_IF_FALSE(false))
  {
  }
 else
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).y))))
    return;
  }
 uvec4 GLF_merged4_0_1_11_1_1_13_2_1_12_3_1_14subgroup_idsubgroup_sizeworkgroup_idworkgroup_size;
 if(_GLF_DEAD(false))
  return;
 uint subgroup_id = gl_SubgroupID;
 do
  {
   if(_GLF_DEAD(false))
    break;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > _GLF_IDENTITY(0, (true ? 0 : _GLF_FUZZED(14360)))); _injected_loop_counter --)
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        break;
       do
        {
         for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter, (_injected_loop_counter) | (_injected_loop_counter)) > 0); _injected_loop_counter --)
          {
           if(_GLF_DEAD(false))
            return;
           for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
            {
             for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
              {
               do
                {
                 do
                  {
                   do
                    {
                     if(_GLF_DEAD(false))
                      continue;
                     if(_GLF_DEAD(false))
                      return;
                    }
                   while(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(false), true && (_GLF_WRAPPED_LOOP(false))));
                  }
                 while(_GLF_WRAPPED_LOOP(false));
                }
               while(_GLF_WRAPPED_LOOP(false));
              }
            }
          }
        }
       while(_GLF_WRAPPED_LOOP(false));
      }
    }
   else
    {
    }
  }
 while(_GLF_WRAPPED_LOOP(false));
 if(_GLF_WRAPPED_IF_FALSE(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 else
  {
   if(_GLF_DEAD(false))
    {
     for(int _injected_loop_counter = int(_GLF_ZERO(0.0, injectionSwitch.x)); _GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter != ((1 << _GLF_IDENTITY(int(4), int(4))) >> _GLF_IDENTITY(int(4), int(_GLF_IDENTITY(4, int(_GLF_IDENTITY(int(_GLF_IDENTITY(4, clamp(4, 4, 4))), (_GLF_IDENTITY(int(_GLF_IDENTITY(4, clamp(4, 4, 4))), ~ (~ (int(_GLF_IDENTITY(4, clamp(4, 4, 4))))))) | (int(_GLF_IDENTITY(4, clamp(4, 4, 4))))))))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter != ((1 << _GLF_IDENTITY(int(4), int(4))) >> _GLF_IDENTITY(int(4), int(_GLF_IDENTITY(4, int(_GLF_IDENTITY(int(_GLF_IDENTITY(4, clamp(4, 4, 4))), (_GLF_IDENTITY(int(_GLF_IDENTITY(4, clamp(4, 4, 4))), ~ (~ (int(_GLF_IDENTITY(4, clamp(4, 4, 4))))))) | (int(_GLF_IDENTITY(4, clamp(4, 4, 4))))))))))), (_GLF_WRAPPED_LOOP(_injected_loop_counter != ((1 << _GLF_IDENTITY(int(4), int(4))) >> _GLF_IDENTITY(int(4), int(_GLF_IDENTITY(4, int(_GLF_IDENTITY(int(_GLF_IDENTITY(4, clamp(4, 4, 4))), (_GLF_IDENTITY(int(_GLF_IDENTITY(4, clamp(4, 4, 4))), ~ (~ (int(_GLF_IDENTITY(4, clamp(4, 4, 4))))))) | (int(_GLF_IDENTITY(4, clamp(4, 4, 4)))))))))))) && true)), true && (! (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter != ((1 << _GLF_IDENTITY(int(4), int(4))) >> _GLF_IDENTITY(int(4), int(_GLF_IDENTITY(4, int(_GLF_IDENTITY(int(_GLF_IDENTITY(4, clamp(4, 4, 4))), (_GLF_IDENTITY(int(_GLF_IDENTITY(4, clamp(4, 4, 4))), ~ (~ (int(_GLF_IDENTITY(4, clamp(4, 4, 4))))))) | (int(_GLF_IDENTITY(4, clamp(4, 4, 4))))))))))), (_GLF_WRAPPED_LOOP(_injected_loop_counter != ((1 << _GLF_IDENTITY(int(4), int(4))) >> _GLF_IDENTITY(int(4), int(_GLF_IDENTITY(4, int(_GLF_IDENTITY(int(_GLF_IDENTITY(4, clamp(4, 4, 4))), (_GLF_IDENTITY(int(_GLF_IDENTITY(4, clamp(4, 4, 4))), ~ (~ (int(_GLF_IDENTITY(4, clamp(4, 4, 4))))))) | (int(_GLF_IDENTITY(_GLF_IDENTITY(4, clamp(4, 4, 4)), (_GLF_IDENTITY(4, clamp(4, 4, 4))) | (_GLF_IDENTITY(4, clamp(4, 4, 4)))))))))))))) && true)))))); _injected_loop_counter ++)
      {
       for(int _injected_loop_counter = ((0 ^ 1) ^ (1 ^ 0)); _GLF_WRAPPED_LOOP(_injected_loop_counter < int(_GLF_ONE(1.0, injectionSwitch.y))); _injected_loop_counter ++)
        {
         if(_GLF_DEAD(false))
          break;
         return;
        }
      }
    }
   GLF_merged4_0_1_11_1_1_13_2_1_12_3_1_14subgroup_idsubgroup_sizeworkgroup_idworkgroup_size.x = subgroup_id;
  }
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_WRAPPED_IF_TRUE(true))
  {
   if(_GLF_DEAD(false))
    return;
   do
    {
     if(_GLF_DEAD(false))
      continue;
     if(_GLF_DEAD(false))
      continue;
     if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(_GLF_IDENTITY(false, true && (false)))))) || false))
      {
       if(_GLF_DEAD(false))
        continue;
       return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
    }
   while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
  }
 else
  {
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 _GLF_IDENTITY(_GLF_IDENTITY(GLF_merged4_0_1_11_1_1_13_2_1_12_3_1_14subgroup_idsubgroup_sizeworkgroup_idworkgroup_size.y = subgroup_size, (GLF_merged4_0_1_11_1_1_13_2_1_12_3_1_14subgroup_idsubgroup_sizeworkgroup_idworkgroup_size.y = subgroup_size) >> (uint(_GLF_IDENTITY(_GLF_ZERO(_GLF_IDENTITY(0.0, float(mat2(0.0, _GLF_IDENTITY(1.0, min(1.0, 1.0)), determinant(mat2(0.0, 0.0, 0.0, 0.0)), 1.0))), injectionSwitch.x), min(_GLF_IDENTITY(_GLF_ZERO(_GLF_IDENTITY(0.0, float(mat2(0.0, _GLF_IDENTITY(1.0, min(1.0, 1.0)), determinant(mat2(0.0, 0.0, 0.0, 0.0)), 1.0))), injectionSwitch.x), clamp(_GLF_ZERO(_GLF_IDENTITY(0.0, float(mat2(0.0, _GLF_IDENTITY(1.0, min(1.0, 1.0)), determinant(mat2(0.0, 0.0, 0.0, 0.0)), 1.0))), injectionSwitch.x), _GLF_IDENTITY(_GLF_ZERO(_GLF_IDENTITY(0.0, float(mat2(0.0, _GLF_IDENTITY(1.0, min(1.0, 1.0)), determinant(mat2(0.0, 0.0, 0.0, 0.0)), 1.0))), injectionSwitch.x), min(_GLF_ZERO(_GLF_IDENTITY(0.0, float(mat2(0.0, _GLF_IDENTITY(1.0, min(1.0, 1.0)), determinant(mat2(0.0, 0.0, 0.0, 0.0)), 1.0))), injectionSwitch.x), _GLF_ZERO(_GLF_IDENTITY(0.0, float(mat2(0.0, _GLF_IDENTITY(1.0, min(1.0, 1.0)), determinant(mat2(0.0, 0.0, 0.0, 0.0)), 1.0))), injectionSwitch.x))), _GLF_ZERO(_GLF_IDENTITY(0.0, float(mat2(0.0, _GLF_IDENTITY(1.0, min(1.0, 1.0)), determinant(mat2(0.0, 0.0, 0.0, 0.0)), 1.0))), injectionSwitch.x))), _GLF_ZERO(_GLF_IDENTITY(0.0, float(mat2(0.0, _GLF_IDENTITY(1.0, min(1.0, 1.0)), determinant(mat2(0.0, 0.0, 0.0, 0.0)), 1.0))), injectionSwitch.x)))) | 0u)), (GLF_merged4_0_1_11_1_1_13_2_1_12_3_1_14subgroup_idsubgroup_sizeworkgroup_idworkgroup_size.y = subgroup_size) | 0u);
 uint subgroup_local_id = gl_SubgroupInvocationID;
 uint num_workgroup = gl_NumWorkGroups.x;
 uint workgroup_size = gl_WorkGroupSize.x;
 do
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
  }
 while(_GLF_WRAPPED_LOOP(false));
 if(_GLF_WRAPPED_IF_TRUE(true))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))), ! (_GLF_IDENTITY(! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) && true))))
    return;
   if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
    }
   else
    {
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
      }
     else
      {
       if(_GLF_WRAPPED_IF_TRUE(true))
        {
         for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
          {
           if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
            {
             if(_GLF_DEAD(false))
              continue;
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y))))
              continue;
             GLF_merged4_0_1_11_1_1_13_2_1_12_3_1_14subgroup_idsubgroup_sizeworkgroup_idworkgroup_size.w = workgroup_size;
             if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), (false ? _GLF_FUZZED(-39.17) : _GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)))) > injectionSwitch.y))))
              {
               if(_GLF_DEAD(false))
                continue;
               return;
              }
            }
           else
            {
             if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, false)))))
              return;
             if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
              break;
            }
          }
         if(_GLF_DEAD(false))
          return;
        }
       else
        {
         if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-1583.2882), _GLF_FUZZED(-3.5)), vec2(_GLF_IDENTITY((injectionSwitch)[0], mix(float(_GLF_FUZZED(-98.72)), float((injectionSwitch)[0]), bool(true))), (injectionSwitch)[1]), bvec2(true, true))).y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
          return;
         do
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            break;
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(false))
              return;
             return;
            }
          }
         while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < (1 ^ 0)); _injected_loop_counter ++)
          {
           return;
          }
        }
      }
    }
  }
 else
  {
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   do
    {
     if(_GLF_DEAD(false))
      return;
     do
      {
       return;
      }
     while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
    }
   while(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(false), true && _GLF_IDENTITY((_GLF_WRAPPED_LOOP(false)), ! (! (_GLF_IDENTITY((_GLF_WRAPPED_LOOP(false)), false || ((_GLF_WRAPPED_LOOP(false)))))))));
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(true, bool(bool(true))), false || (_GLF_IDENTITY(true, bool(bool(true))))) ? _GLF_IDENTITY(injectionSwitch.x, float(mat3x4(injectionSwitch.x, 0.0, 1.0, 1.0, 1.0, _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(9.8))), 0.0, 1.0, 1.0, 1.0, 1.0, 1.0))) : _GLF_FUZZED(-357.855), mix(float(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(true, bool(bool(true))), false || (_GLF_IDENTITY(true, bool(bool(true))))) ? _GLF_IDENTITY(injectionSwitch.x, float(mat3x4(injectionSwitch.x, 0.0, 1.0, 1.0, 1.0, _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(9.8))), 0.0, 1.0, 1.0, 1.0, 1.0, 1.0))) : _GLF_FUZZED(-357.855), (_GLF_IDENTITY(_GLF_IDENTITY(true, bool(bool(true))), false || (_GLF_IDENTITY(true, bool(bool(true))))) ? _GLF_IDENTITY(injectionSwitch.x, float(mat3x4(injectionSwitch.x, 0.0, 1.0, 1.0, 1.0, _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(9.8))), 0.0, 1.0, 1.0, 1.0, 1.0, 1.0))) : _GLF_FUZZED(-357.855)) * 1.0)), float(_GLF_FUZZED(9.0)), bool(false))))) > injectionSwitch.y))) && _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, abs(vec2(1.0, 1.0)) * (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - _GLF_IDENTITY(vec2(0.0, 0.0), (vec2(0.0, 0.0)) + vec2(0.0, 0.0))))).y)))))
    {
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
      }
     else
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).x > injectionSwitch.y))))
        {
         if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
          {
           return;
          }
         else
          {
          }
        }
      }
     return;
    }
  }
 if(_GLF_WRAPPED_IF_FALSE(false))
  {
  }
 else
  {
   for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter, _GLF_IDENTITY((_injected_loop_counter), ((_injected_loop_counter)) / 1) / ((1 << _GLF_IDENTITY(_GLF_IDENTITY(int(1), max(int(_GLF_IDENTITY(1, min(_GLF_IDENTITY(1, ~ (~ (1))), _GLF_IDENTITY(1, 0 | (_GLF_IDENTITY(1, 0 ^ (1))))))), _GLF_IDENTITY(int(1), 1 * (_GLF_IDENTITY(int(1), (int(1)) << 0))))), int(1))) >> _GLF_IDENTITY(_GLF_IDENTITY(int(1), ~ (~ (_GLF_IDENTITY(int(1), _GLF_IDENTITY(int(_GLF_IDENTITY(ivec3(int(1), 1, (0 >> _GLF_IDENTITY(int(6), int(6)))), (true ? ivec3(int(1), 1, (0 >> _GLF_IDENTITY(int(6), int(6)))) : _GLF_FUZZED(ivec3(93940, 53665, -56481))))), min(int(_GLF_IDENTITY(ivec3(int(1), 1, (0 >> _GLF_IDENTITY(int(6), int(6)))), (true ? ivec3(int(1), 1, (0 >> _GLF_IDENTITY(int(6), int(6)))) : _GLF_FUZZED(ivec3(93940, 53665, -56481))))), int(_GLF_IDENTITY(ivec3(int(1), 1, (0 >> _GLF_IDENTITY(int(6), int(6)))), (true ? ivec3(int(1), 1, (0 >> _GLF_IDENTITY(int(6), int(6)))) : _GLF_FUZZED(ivec3(93940, 53665, -56481))))))))))), int(1)))) != 0); _injected_loop_counter --)
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      break;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
      {
       if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, bool(bvec2(false, false)))), (bool(_GLF_IDENTITY(false, bool(bvec2(false, false))))) || false))), false, _GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false)), true))), true))) || (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false)))) || false))
        {
         if(_GLF_WRAPPED_IF_TRUE(true))
          {
           return;
          }
         else
          {
          }
        }
      }
     else
      {
      }
     if(_GLF_WRAPPED_IF_TRUE(true))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
      }
     else
      {
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-1.4), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(904.632)), bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))).x > injectionSwitch.y) && true), false || (injectionSwitch.x > injectionSwitch.y))) || false))))))))
      continue;
    }
  }
 if(_GLF_WRAPPED_IF_TRUE(true))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_DEAD(false))))))))), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))))), ((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true)) || (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_DEAD(false))))))))), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false)))))) || _GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec2(false, false)))) || false)))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_WRAPPED_IF_TRUE(true))
        {
         return;
        }
       else
        {
        }
       if(_GLF_DEAD(false))
        return;
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_WRAPPED_IF_TRUE(true))
        {
         do
          {
           for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
            {
             if(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), true && (_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(2431.5249)), vec2(_GLF_FUZZED(18.36), (injectionSwitch)[1]), bvec2(false, true))).y))))))
              {
               if(_GLF_IDENTITY(_GLF_DEAD(false), bool(_GLF_IDENTITY(bool(_GLF_DEAD(false)), (bool(_GLF_DEAD(false))) && true))))
                return;
               do
                {
                 return;
                 if(_GLF_DEAD(false))
                  break;
                }
               while(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(false), _GLF_IDENTITY((_GLF_WRAPPED_LOOP(false)), ((_GLF_WRAPPED_LOOP(false))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true));
              }
             else
              {
              }
            }
          }
         while(_GLF_WRAPPED_LOOP(false));
        }
       else
        {
        }
      }
     return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_WRAPPED_IF_FALSE(false))
        {
        }
       else
        {
         if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))))
          {
          }
         else
          {
           return;
          }
        }
      }
     if(_GLF_DEAD(false))
      return;
    }
  }
 else
  {
  }
 if(_GLF_DEAD(false))
  {
   do
    {
     if(_GLF_DEAD(false))
      {
       do
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          break;
         if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
          {
           for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < _GLF_IDENTITY(1, (true ? _GLF_IDENTITY(1, max(1, 1)) : _GLF_FUZZED(_injected_loop_counter)))); _injected_loop_counter ++)
            {
             for(int _injected_loop_counter = 1; _GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter != _GLF_IDENTITY(0, clamp(0, 0, 0))), (_GLF_WRAPPED_LOOP(_injected_loop_counter != _GLF_IDENTITY(0, clamp(0, 0, 0)))) || false); _injected_loop_counter --)
              {
               return;
               if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(false, (false) || false), true, true)), true && (bool(bvec3(_GLF_IDENTITY(false, (false) || false), true, true)))))))
                return;
              }
            }
          }
        }
       while(_GLF_WRAPPED_LOOP(false));
       return;
      }
    }
   while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   return;
   if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
    }
   else
    {
     if(_GLF_DEAD(false))
      return;
    }
  }
 uint workgroup_id = _GLF_IDENTITY(gl_WorkGroupID, clamp(_GLF_IDENTITY(gl_WorkGroupID, (_GLF_IDENTITY(gl_WorkGroupID, min(gl_WorkGroupID, _GLF_IDENTITY(gl_WorkGroupID, uvec3(uvec4(gl_WorkGroupID, 0u)))))) | uvec3(0u, _GLF_IDENTITY(0u, (0u) | 0u), 0u)), gl_WorkGroupID, _GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) | (gl_WorkGroupID)))).x;
 for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    continue;
   if(_GLF_DEAD(false))
    {
     if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ((injectionSwitch.x < injectionSwitch.y)) || false))))
      {
       return;
      }
     else
      {
      }
     if(_GLF_DEAD(false))
      {
       for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
        {
         return;
        }
      }
    }
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < (0 ^ 1)); _injected_loop_counter ++)
  {
   GLF_merged4_0_1_11_1_1_13_2_1_12_3_1_14subgroup_idsubgroup_sizeworkgroup_idworkgroup_size.z = workgroup_id;
  }
 _GLF_struct_5 _GLF_struct_replacement_5 = _GLF_struct_5(mat2x4(1.0), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged4_0_1_11_1_1_13_2_1_12_3_1_14subgroup_idsubgroup_sizeworkgroup_idworkgroup_size.w, clamp(GLF_merged4_0_1_11_1_1_13_2_1_12_3_1_14subgroup_idsubgroup_sizeworkgroup_idworkgroup_size.w, _GLF_IDENTITY(GLF_merged4_0_1_11_1_1_13_2_1_12_3_1_14subgroup_idsubgroup_sizeworkgroup_idworkgroup_size.w, (_GLF_IDENTITY(GLF_merged4_0_1_11_1_1_13_2_1_12_3_1_14subgroup_idsubgroup_sizeworkgroup_idworkgroup_size.w, uint(uint(_GLF_IDENTITY(GLF_merged4_0_1_11_1_1_13_2_1_12_3_1_14subgroup_idsubgroup_sizeworkgroup_idworkgroup_size.w, ~ (~ (GLF_merged4_0_1_11_1_1_13_2_1_12_3_1_14subgroup_idsubgroup_sizeworkgroup_idworkgroup_size.w))))))) >> (0u << _GLF_IDENTITY(_GLF_IDENTITY(uint(0u), uint(_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, ~ (~ (0u)))) * 1u)) >> 0u))), min(_GLF_IDENTITY(uint(0u), uint(_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, ~ (~ (0u)))) * 1u)) >> 0u))), _GLF_IDENTITY(_GLF_IDENTITY(uint(0u), uint(_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, ~ (~ (0u)))) * 1u)) >> 0u))), (_GLF_IDENTITY(uint(0u), uint(_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, ~ (~ (0u)))) * 1u)) >> 0u)))) | 0u))))), _GLF_IDENTITY(GLF_merged4_0_1_11_1_1_13_2_1_12_3_1_14subgroup_idsubgroup_sizeworkgroup_idworkgroup_size.w, _GLF_IDENTITY(min(GLF_merged4_0_1_11_1_1_13_2_1_12_3_1_14subgroup_idsubgroup_sizeworkgroup_idworkgroup_size.w, GLF_merged4_0_1_11_1_1_13_2_1_12_3_1_14subgroup_idsubgroup_sizeworkgroup_idworkgroup_size.w), max(min(GLF_merged4_0_1_11_1_1_13_2_1_12_3_1_14subgroup_idsubgroup_sizeworkgroup_idworkgroup_size.w, GLF_merged4_0_1_11_1_1_13_2_1_12_3_1_14subgroup_idsubgroup_sizeworkgroup_idworkgroup_size.w), min(GLF_merged4_0_1_11_1_1_13_2_1_12_3_1_14subgroup_idsubgroup_sizeworkgroup_idworkgroup_size.w, GLF_merged4_0_1_11_1_1_13_2_1_12_3_1_14subgroup_idsubgroup_sizeworkgroup_idworkgroup_size.w)))))), max(_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged4_0_1_11_1_1_13_2_1_12_3_1_14subgroup_idsubgroup_sizeworkgroup_idworkgroup_size.w, clamp(GLF_merged4_0_1_11_1_1_13_2_1_12_3_1_14subgroup_idsubgroup_sizeworkgroup_idworkgroup_size.w, _GLF_IDENTITY(GLF_merged4_0_1_11_1_1_13_2_1_12_3_1_14subgroup_idsubgroup_sizeworkgroup_idworkgroup_size.w, (_GLF_IDENTITY(GLF_merged4_0_1_11_1_1_13_2_1_12_3_1_14subgroup_idsubgroup_sizeworkgroup_idworkgroup_size.w, uint(uint(_GLF_IDENTITY(GLF_merged4_0_1_11_1_1_13_2_1_12_3_1_14subgroup_idsubgroup_sizeworkgroup_idworkgroup_size.w, ~ (~ (GLF_merged4_0_1_11_1_1_13_2_1_12_3_1_14subgroup_idsubgroup_sizeworkgroup_idworkgroup_size.w))))))) >> (0u << _GLF_IDENTITY(_GLF_IDENTITY(uint(0u), uint(_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, ~ (~ (0u)))) * 1u)) >> 0u))), min(_GLF_IDENTITY(uint(0u), uint(_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, ~ (~ (0u)))) * 1u)) >> 0u))), _GLF_IDENTITY(_GLF_IDENTITY(uint(0u), uint(_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, ~ (~ (0u)))) * 1u)) >> 0u))), (_GLF_IDENTITY(uint(0u), uint(_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, ~ (~ (0u)))) * 1u)) >> 0u)))) | 0u))))), _GLF_IDENTITY(GLF_merged4_0_1_11_1_1_13_2_1_12_3_1_14subgroup_idsubgroup_sizeworkgroup_idworkgroup_size.w, _GLF_IDENTITY(min(GLF_merged4_0_1_11_1_1_13_2_1_12_3_1_14subgroup_idsubgroup_sizeworkgroup_idworkgroup_size.w, GLF_merged4_0_1_11_1_1_13_2_1_12_3_1_14subgroup_idsubgroup_sizeworkgroup_idworkgroup_size.w), max(min(GLF_merged4_0_1_11_1_1_13_2_1_12_3_1_14subgroup_idsubgroup_sizeworkgroup_idworkgroup_size.w, GLF_merged4_0_1_11_1_1_13_2_1_12_3_1_14subgroup_idsubgroup_sizeworkgroup_idworkgroup_size.w), min(GLF_merged4_0_1_11_1_1_13_2_1_12_3_1_14subgroup_idsubgroup_sizeworkgroup_idworkgroup_size.w, GLF_merged4_0_1_11_1_1_13_2_1_12_3_1_14subgroup_idsubgroup_sizeworkgroup_idworkgroup_size.w)))))), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(GLF_merged4_0_1_11_1_1_13_2_1_12_3_1_14subgroup_idsubgroup_sizeworkgroup_idworkgroup_size.w, clamp(GLF_merged4_0_1_11_1_1_13_2_1_12_3_1_14subgroup_idsubgroup_sizeworkgroup_idworkgroup_size.w, _GLF_IDENTITY(GLF_merged4_0_1_11_1_1_13_2_1_12_3_1_14subgroup_idsubgroup_sizeworkgroup_idworkgroup_size.w, (_GLF_IDENTITY(GLF_merged4_0_1_11_1_1_13_2_1_12_3_1_14subgroup_idsubgroup_sizeworkgroup_idworkgroup_size.w, uint(uint(_GLF_IDENTITY(GLF_merged4_0_1_11_1_1_13_2_1_12_3_1_14subgroup_idsubgroup_sizeworkgroup_idworkgroup_size.w, ~ (~ (GLF_merged4_0_1_11_1_1_13_2_1_12_3_1_14subgroup_idsubgroup_sizeworkgroup_idworkgroup_size.w))))))) >> (0u << _GLF_IDENTITY(_GLF_IDENTITY(uint(0u), uint(_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, ~ (~ (0u)))) * 1u)) >> 0u))), min(_GLF_IDENTITY(uint(0u), uint(_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, ~ (~ (0u)))) * 1u)) >> 0u))), _GLF_IDENTITY(_GLF_IDENTITY(uint(0u), uint(_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, ~ (~ (0u)))) * 1u)) >> 0u))), (_GLF_IDENTITY(uint(0u), uint(_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, ~ (~ (0u)))) * 1u)) >> 0u)))) | 0u))))), _GLF_IDENTITY(GLF_merged4_0_1_11_1_1_13_2_1_12_3_1_14subgroup_idsubgroup_sizeworkgroup_idworkgroup_size.w, _GLF_IDENTITY(min(GLF_merged4_0_1_11_1_1_13_2_1_12_3_1_14subgroup_idsubgroup_sizeworkgroup_idworkgroup_size.w, GLF_merged4_0_1_11_1_1_13_2_1_12_3_1_14subgroup_idsubgroup_sizeworkgroup_idworkgroup_size.w), max(min(GLF_merged4_0_1_11_1_1_13_2_1_12_3_1_14subgroup_idsubgroup_sizeworkgroup_idworkgroup_size.w, GLF_merged4_0_1_11_1_1_13_2_1_12_3_1_14subgroup_idsubgroup_sizeworkgroup_idworkgroup_size.w), min(GLF_merged4_0_1_11_1_1_13_2_1_12_3_1_14subgroup_idsubgroup_sizeworkgroup_idworkgroup_size.w, GLF_merged4_0_1_11_1_1_13_2_1_12_3_1_14subgroup_idsubgroup_sizeworkgroup_idworkgroup_size.w)))))) : _GLF_FUZZED(workgroup_id))), _GLF_IDENTITY(GLF_merged4_0_1_11_1_1_13_2_1_12_3_1_14subgroup_idsubgroup_sizeworkgroup_idworkgroup_size.w, clamp(GLF_merged4_0_1_11_1_1_13_2_1_12_3_1_14subgroup_idsubgroup_sizeworkgroup_idworkgroup_size.w, _GLF_IDENTITY(GLF_merged4_0_1_11_1_1_13_2_1_12_3_1_14subgroup_idsubgroup_sizeworkgroup_idworkgroup_size.w, (_GLF_IDENTITY(GLF_merged4_0_1_11_1_1_13_2_1_12_3_1_14subgroup_idsubgroup_sizeworkgroup_idworkgroup_size.w, uint(uint(_GLF_IDENTITY(GLF_merged4_0_1_11_1_1_13_2_1_12_3_1_14subgroup_idsubgroup_sizeworkgroup_idworkgroup_size.w, ~ (~ (GLF_merged4_0_1_11_1_1_13_2_1_12_3_1_14subgroup_idsubgroup_sizeworkgroup_idworkgroup_size.w))))))) >> (0u << _GLF_IDENTITY(_GLF_IDENTITY(uint(0u), uint(_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, ~ (~ (0u)))) * 1u)) >> 0u))), min(_GLF_IDENTITY(uint(0u), uint(_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, ~ (~ (0u)))) * 1u)) >> 0u))), _GLF_IDENTITY(_GLF_IDENTITY(uint(0u), uint(_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, ~ (~ (0u)))) * 1u)) >> 0u))), (_GLF_IDENTITY(uint(0u), uint(_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, ~ (~ (0u)))) * 1u)) >> 0u)))) | 0u))))), _GLF_IDENTITY(GLF_merged4_0_1_11_1_1_13_2_1_12_3_1_14subgroup_idsubgroup_sizeworkgroup_idworkgroup_size.w, _GLF_IDENTITY(min(GLF_merged4_0_1_11_1_1_13_2_1_12_3_1_14subgroup_idsubgroup_sizeworkgroup_idworkgroup_size.w, GLF_merged4_0_1_11_1_1_13_2_1_12_3_1_14subgroup_idsubgroup_sizeworkgroup_idworkgroup_size.w), max(min(GLF_merged4_0_1_11_1_1_13_2_1_12_3_1_14subgroup_idsubgroup_sizeworkgroup_idworkgroup_size.w, GLF_merged4_0_1_11_1_1_13_2_1_12_3_1_14subgroup_idsubgroup_sizeworkgroup_idworkgroup_size.w), min(GLF_merged4_0_1_11_1_1_13_2_1_12_3_1_14subgroup_idsubgroup_sizeworkgroup_idworkgroup_size.w, GLF_merged4_0_1_11_1_1_13_2_1_12_3_1_14subgroup_idsubgroup_sizeworkgroup_idworkgroup_size.w)))))))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged4_0_1_11_1_1_13_2_1_12_3_1_14subgroup_idsubgroup_sizeworkgroup_idworkgroup_size.w, clamp(GLF_merged4_0_1_11_1_1_13_2_1_12_3_1_14subgroup_idsubgroup_sizeworkgroup_idworkgroup_size.w, _GLF_IDENTITY(GLF_merged4_0_1_11_1_1_13_2_1_12_3_1_14subgroup_idsubgroup_sizeworkgroup_idworkgroup_size.w, (_GLF_IDENTITY(GLF_merged4_0_1_11_1_1_13_2_1_12_3_1_14subgroup_idsubgroup_sizeworkgroup_idworkgroup_size.w, uint(uint(_GLF_IDENTITY(GLF_merged4_0_1_11_1_1_13_2_1_12_3_1_14subgroup_idsubgroup_sizeworkgroup_idworkgroup_size.w, _GLF_IDENTITY(~ (~ (GLF_merged4_0_1_11_1_1_13_2_1_12_3_1_14subgroup_idsubgroup_sizeworkgroup_idworkgroup_size.w)), clamp(_GLF_IDENTITY(~ (~ (GLF_merged4_0_1_11_1_1_13_2_1_12_3_1_14subgroup_idsubgroup_sizeworkgroup_idworkgroup_size.w)), (~ (~ (GLF_merged4_0_1_11_1_1_13_2_1_12_3_1_14subgroup_idsubgroup_sizeworkgroup_idworkgroup_size.w))) | (~ (~ (GLF_merged4_0_1_11_1_1_13_2_1_12_3_1_14subgroup_idsubgroup_sizeworkgroup_idworkgroup_size.w)))), _GLF_IDENTITY(~ (~ (GLF_merged4_0_1_11_1_1_13_2_1_12_3_1_14subgroup_idsubgroup_sizeworkgroup_idworkgroup_size.w)), (~ (~ (GLF_merged4_0_1_11_1_1_13_2_1_12_3_1_14subgroup_idsubgroup_sizeworkgroup_idworkgroup_size.w))) >> 0u), ~ (~ (GLF_merged4_0_1_11_1_1_13_2_1_12_3_1_14subgroup_idsubgroup_sizeworkgroup_idworkgroup_size.w))))))))) >> _GLF_IDENTITY((0u << _GLF_IDENTITY(_GLF_IDENTITY(uint(0u), ~ (_GLF_IDENTITY(~ (uint(0u)), max(~ (uint(0u)), ~ (uint(0u)))))), uint(_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, _GLF_IDENTITY(~ (~ (0u)), (~ (~ (0u))) * 1u))) * 1u)) >> 0u)))), uint(uint((0u << _GLF_IDENTITY(uint(_GLF_IDENTITY(0u, 1u * (0u))), uint(_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, _GLF_IDENTITY(_GLF_IDENTITY(~ (~ (0u)), (~ (~ (0u))) * 1u), clamp(_GLF_IDENTITY(~ (~ (0u)), (~ (~ (0u))) * 1u), _GLF_IDENTITY(~ (~ (0u)), (~ (~ (0u))) * 1u), _GLF_IDENTITY(_GLF_IDENTITY(~ (~ (0u)), (~ (~ (0u))) * 1u), clamp(_GLF_IDENTITY(_GLF_IDENTITY(~ (~ (0u)), (~ (~ (0u))) * 1u), uint(uint(_GLF_IDENTITY(~ (~ (0u)), (~ (~ (0u))) * 1u)))), _GLF_IDENTITY(~ (~ (0u)), (~ (~ (0u))) * 1u), _GLF_IDENTITY(~ (~ (0u)), (~ (~ (0u))) * 1u))))))) * 1u)) >> 0u)))))))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged4_0_1_11_1_1_13_2_1_12_3_1_14subgroup_idsubgroup_sizeworkgroup_idworkgroup_size.w, min(GLF_merged4_0_1_11_1_1_13_2_1_12_3_1_14subgroup_idsubgroup_sizeworkgroup_idworkgroup_size.w, _GLF_IDENTITY(GLF_merged4_0_1_11_1_1_13_2_1_12_3_1_14subgroup_idsubgroup_sizeworkgroup_idworkgroup_size.w, 0u | (GLF_merged4_0_1_11_1_1_13_2_1_12_3_1_14subgroup_idsubgroup_sizeworkgroup_idworkgroup_size.w)))), min(GLF_merged4_0_1_11_1_1_13_2_1_12_3_1_14subgroup_idsubgroup_sizeworkgroup_idworkgroup_size.w, GLF_merged4_0_1_11_1_1_13_2_1_12_3_1_14subgroup_idsubgroup_sizeworkgroup_idworkgroup_size.w)), min(_GLF_IDENTITY(GLF_merged4_0_1_11_1_1_13_2_1_12_3_1_14subgroup_idsubgroup_sizeworkgroup_idworkgroup_size.w, _GLF_IDENTITY(min(GLF_merged4_0_1_11_1_1_13_2_1_12_3_1_14subgroup_idsubgroup_sizeworkgroup_idworkgroup_size.w, GLF_merged4_0_1_11_1_1_13_2_1_12_3_1_14subgroup_idsubgroup_sizeworkgroup_idworkgroup_size.w), (min(GLF_merged4_0_1_11_1_1_13_2_1_12_3_1_14subgroup_idsubgroup_sizeworkgroup_idworkgroup_size.w, GLF_merged4_0_1_11_1_1_13_2_1_12_3_1_14subgroup_idsubgroup_sizeworkgroup_idworkgroup_size.w)) * ((1u << _GLF_IDENTITY(uint(7u), uint(7u))) >> _GLF_IDENTITY(uint(7u), _GLF_IDENTITY(uint(7u), (uint(7u)) >> 0u))))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged4_0_1_11_1_1_13_2_1_12_3_1_14subgroup_idsubgroup_sizeworkgroup_idworkgroup_size, min(GLF_merged4_0_1_11_1_1_13_2_1_12_3_1_14subgroup_idsubgroup_sizeworkgroup_idworkgroup_size, _GLF_IDENTITY(_GLF_IDENTITY(GLF_merged4_0_1_11_1_1_13_2_1_12_3_1_14subgroup_idsubgroup_sizeworkgroup_idworkgroup_size, (GLF_merged4_0_1_11_1_1_13_2_1_12_3_1_14subgroup_idsubgroup_sizeworkgroup_idworkgroup_size) >> uvec4(0u, 0u, 0u, 0u)), max(_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged4_0_1_11_1_1_13_2_1_12_3_1_14subgroup_idsubgroup_sizeworkgroup_idworkgroup_size, (GLF_merged4_0_1_11_1_1_13_2_1_12_3_1_14subgroup_idsubgroup_sizeworkgroup_idworkgroup_size) >> uvec4(0u, 0u, 0u, 0u)), min(_GLF_IDENTITY(GLF_merged4_0_1_11_1_1_13_2_1_12_3_1_14subgroup_idsubgroup_sizeworkgroup_idworkgroup_size, (GLF_merged4_0_1_11_1_1_13_2_1_12_3_1_14subgroup_idsubgroup_sizeworkgroup_idworkgroup_size) >> uvec4(0u, 0u, 0u, 0u)), _GLF_IDENTITY(GLF_merged4_0_1_11_1_1_13_2_1_12_3_1_14subgroup_idsubgroup_sizeworkgroup_idworkgroup_size, (GLF_merged4_0_1_11_1_1_13_2_1_12_3_1_14subgroup_idsubgroup_sizeworkgroup_idworkgroup_size) >> uvec4(0u, 0u, 0u, 0u)))), _GLF_IDENTITY(GLF_merged4_0_1_11_1_1_13_2_1_12_3_1_14subgroup_idsubgroup_sizeworkgroup_idworkgroup_size, (GLF_merged4_0_1_11_1_1_13_2_1_12_3_1_14subgroup_idsubgroup_sizeworkgroup_idworkgroup_size) >> uvec4(0u, 0u, 0u, 0u)))))).w, min(_GLF_IDENTITY(GLF_merged4_0_1_11_1_1_13_2_1_12_3_1_14subgroup_idsubgroup_sizeworkgroup_idworkgroup_size.w, (true ? GLF_merged4_0_1_11_1_1_13_2_1_12_3_1_14subgroup_idsubgroup_sizeworkgroup_idworkgroup_size.w : _GLF_FUZZED((+ subgroup_local_id)))), GLF_merged4_0_1_11_1_1_13_2_1_12_3_1_14subgroup_idsubgroup_sizeworkgroup_idworkgroup_size.w)), (_GLF_IDENTITY(GLF_merged4_0_1_11_1_1_13_2_1_12_3_1_14subgroup_idsubgroup_sizeworkgroup_idworkgroup_size.w, min(_GLF_IDENTITY(GLF_merged4_0_1_11_1_1_13_2_1_12_3_1_14subgroup_idsubgroup_sizeworkgroup_idworkgroup_size, max(GLF_merged4_0_1_11_1_1_13_2_1_12_3_1_14subgroup_idsubgroup_sizeworkgroup_idworkgroup_size, GLF_merged4_0_1_11_1_1_13_2_1_12_3_1_14subgroup_idsubgroup_sizeworkgroup_idworkgroup_size)).w, GLF_merged4_0_1_11_1_1_13_2_1_12_3_1_14subgroup_idsubgroup_sizeworkgroup_idworkgroup_size.w))) * 1u))))), 1u * (_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged4_0_1_11_1_1_13_2_1_12_3_1_14subgroup_idsubgroup_sizeworkgroup_idworkgroup_size.w, ~ (~ (GLF_merged4_0_1_11_1_1_13_2_1_12_3_1_14subgroup_idsubgroup_sizeworkgroup_idworkgroup_size.w))), clamp(GLF_merged4_0_1_11_1_1_13_2_1_12_3_1_14subgroup_idsubgroup_sizeworkgroup_idworkgroup_size.w, _GLF_IDENTITY(_GLF_IDENTITY(GLF_merged4_0_1_11_1_1_13_2_1_12_3_1_14subgroup_idsubgroup_sizeworkgroup_idworkgroup_size.w, (_GLF_IDENTITY(GLF_merged4_0_1_11_1_1_13_2_1_12_3_1_14subgroup_idsubgroup_sizeworkgroup_idworkgroup_size.w, uint(uint(_GLF_IDENTITY(GLF_merged4_0_1_11_1_1_13_2_1_12_3_1_14subgroup_idsubgroup_sizeworkgroup_idworkgroup_size.w, ~ (~ (GLF_merged4_0_1_11_1_1_13_2_1_12_3_1_14subgroup_idsubgroup_sizeworkgroup_idworkgroup_size.w))))))) >> (0u << _GLF_IDENTITY(uint(0u), uint(_GLF_IDENTITY(_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, ~ (~ (0u)))) * 1u)) >> 0u), (_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, ~ (~ (0u)))) * 1u)) >> 0u)) - uint(_GLF_ZERO(0.0, injectionSwitch.x))))))), (_GLF_IDENTITY(GLF_merged4_0_1_11_1_1_13_2_1_12_3_1_14subgroup_idsubgroup_sizeworkgroup_idworkgroup_size.w, (_GLF_IDENTITY(GLF_merged4_0_1_11_1_1_13_2_1_12_3_1_14subgroup_idsubgroup_sizeworkgroup_idworkgroup_size.w, uint(uint(_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged4_0_1_11_1_1_13_2_1_12_3_1_14subgroup_idsubgroup_sizeworkgroup_idworkgroup_size, min(GLF_merged4_0_1_11_1_1_13_2_1_12_3_1_14subgroup_idsubgroup_sizeworkgroup_idworkgroup_size, _GLF_IDENTITY(GLF_merged4_0_1_11_1_1_13_2_1_12_3_1_14subgroup_idsubgroup_sizeworkgroup_idworkgroup_size, uvec4(1u, 1u, 1u, 1u) * (GLF_merged4_0_1_11_1_1_13_2_1_12_3_1_14subgroup_idsubgroup_sizeworkgroup_idworkgroup_size)))).w, ~ (~ (GLF_merged4_0_1_11_1_1_13_2_1_12_3_1_14subgroup_idsubgroup_sizeworkgroup_idworkgroup_size.w))))))) >> (0u << _GLF_IDENTITY(uint(0u), uint(_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, ~ (~ (0u)))) * 1u)) >> 0u)))))) | (0u | 0u)), _GLF_IDENTITY(_GLF_IDENTITY(GLF_merged4_0_1_11_1_1_13_2_1_12_3_1_14subgroup_idsubgroup_sizeworkgroup_idworkgroup_size.w, min(GLF_merged4_0_1_11_1_1_13_2_1_12_3_1_14subgroup_idsubgroup_sizeworkgroup_idworkgroup_size.w, GLF_merged4_0_1_11_1_1_13_2_1_12_3_1_14subgroup_idsubgroup_sizeworkgroup_idworkgroup_size.w)), (true ? _GLF_IDENTITY(GLF_merged4_0_1_11_1_1_13_2_1_12_3_1_14subgroup_idsubgroup_sizeworkgroup_idworkgroup_size.w, min(GLF_merged4_0_1_11_1_1_13_2_1_12_3_1_14subgroup_idsubgroup_sizeworkgroup_idworkgroup_size.w, GLF_merged4_0_1_11_1_1_13_2_1_12_3_1_14subgroup_idsubgroup_sizeworkgroup_idworkgroup_size.w)) : _GLF_FUZZED(workgroup_id))))))), _GLF_IDENTITY(GLF_merged4_0_1_11_1_1_13_2_1_12_3_1_14subgroup_idsubgroup_sizeworkgroup_idworkgroup_size.w, clamp(GLF_merged4_0_1_11_1_1_13_2_1_12_3_1_14subgroup_idsubgroup_sizeworkgroup_idworkgroup_size.w, _GLF_IDENTITY(_GLF_IDENTITY(GLF_merged4_0_1_11_1_1_13_2_1_12_3_1_14subgroup_idsubgroup_sizeworkgroup_idworkgroup_size.w, max(GLF_merged4_0_1_11_1_1_13_2_1_12_3_1_14subgroup_idsubgroup_sizeworkgroup_idworkgroup_size.w, _GLF_IDENTITY(GLF_merged4_0_1_11_1_1_13_2_1_12_3_1_14subgroup_idsubgroup_sizeworkgroup_idworkgroup_size.w, (GLF_merged4_0_1_11_1_1_13_2_1_12_3_1_14subgroup_idsubgroup_sizeworkgroup_idworkgroup_size.w) | (GLF_merged4_0_1_11_1_1_13_2_1_12_3_1_14subgroup_idsubgroup_sizeworkgroup_idworkgroup_size.w)))), (_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged4_0_1_11_1_1_13_2_1_12_3_1_14subgroup_idsubgroup_sizeworkgroup_idworkgroup_size.w, (1u ^ 0u) * (GLF_merged4_0_1_11_1_1_13_2_1_12_3_1_14subgroup_idsubgroup_sizeworkgroup_idworkgroup_size.w)), uint(uint(_GLF_IDENTITY(GLF_merged4_0_1_11_1_1_13_2_1_12_3_1_14subgroup_idsubgroup_sizeworkgroup_idworkgroup_size.w, ~ (~ (GLF_merged4_0_1_11_1_1_13_2_1_12_3_1_14subgroup_idsubgroup_sizeworkgroup_idworkgroup_size.w))))))) >> (0u << _GLF_IDENTITY(uint(0u), _GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_IDENTITY(0u, ((0u | 0u) | 0u) | (0u)), (_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, ~ (~ (0u)))) * 1u)) >> 0u)), (uint(_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, ~ (~ (0u)))) * 1u)) >> 0u))) ^ _GLF_IDENTITY(0u, (0u) | 0u))))), _GLF_IDENTITY(GLF_merged4_0_1_11_1_1_13_2_1_12_3_1_14subgroup_idsubgroup_sizeworkgroup_idworkgroup_size.w, min(GLF_merged4_0_1_11_1_1_13_2_1_12_3_1_14subgroup_idsubgroup_sizeworkgroup_idworkgroup_size.w, GLF_merged4_0_1_11_1_1_13_2_1_12_3_1_14subgroup_idsubgroup_sizeworkgroup_idworkgroup_size.w)))), _GLF_IDENTITY(GLF_merged4_0_1_11_1_1_13_2_1_12_3_1_14subgroup_idsubgroup_sizeworkgroup_idworkgroup_size.w, clamp(GLF_merged4_0_1_11_1_1_13_2_1_12_3_1_14subgroup_idsubgroup_sizeworkgroup_idworkgroup_size.w, _GLF_IDENTITY(GLF_merged4_0_1_11_1_1_13_2_1_12_3_1_14subgroup_idsubgroup_sizeworkgroup_idworkgroup_size.w, (_GLF_IDENTITY(GLF_merged4_0_1_11_1_1_13_2_1_12_3_1_14subgroup_idsubgroup_sizeworkgroup_idworkgroup_size.w, uint(uint(_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged4_0_1_11_1_1_13_2_1_12_3_1_14subgroup_idsubgroup_sizeworkgroup_idworkgroup_size.w, ~ (~ (GLF_merged4_0_1_11_1_1_13_2_1_12_3_1_14subgroup_idsubgroup_sizeworkgroup_idworkgroup_size.w))), (true ? _GLF_IDENTITY(_GLF_IDENTITY(GLF_merged4_0_1_11_1_1_13_2_1_12_3_1_14subgroup_idsubgroup_sizeworkgroup_idworkgroup_size.w, ~ (~ (GLF_merged4_0_1_11_1_1_13_2_1_12_3_1_14subgroup_idsubgroup_sizeworkgroup_idworkgroup_size.w))), (false ? _GLF_FUZZED(workgroup_size) : _GLF_IDENTITY(_GLF_IDENTITY(GLF_merged4_0_1_11_1_1_13_2_1_12_3_1_14subgroup_idsubgroup_sizeworkgroup_idworkgroup_size.w, ~ (~ (GLF_merged4_0_1_11_1_1_13_2_1_12_3_1_14subgroup_idsubgroup_sizeworkgroup_idworkgroup_size.w))), (_GLF_IDENTITY(GLF_merged4_0_1_11_1_1_13_2_1_12_3_1_14subgroup_idsubgroup_sizeworkgroup_idworkgroup_size.w, ~ (~ (GLF_merged4_0_1_11_1_1_13_2_1_12_3_1_14subgroup_idsubgroup_sizeworkgroup_idworkgroup_size.w)))) * 1u))) : _GLF_FUZZED(num_workgroup))))))) >> (0u << _GLF_IDENTITY(uint(0u), uint(_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, _GLF_IDENTITY((_GLF_IDENTITY(0u, ~ (~ (_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, 0u + (0u))) - (0u | 0u)))))), min((_GLF_IDENTITY(0u, ~ (~ (_GLF_IDENTITY(0u, _GLF_IDENTITY((_GLF_IDENTITY(0u, 0u + (0u))), ~ (~ ((_GLF_IDENTITY(0u, 0u + (0u)))))) - (0u | 0u)))))), (_GLF_IDENTITY(0u, ~ _GLF_IDENTITY((~ (_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, 0u + (0u))) - (0u | 0u)))), ((~ (_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, 0u + (0u))) - (0u | 0u))))) ^ 0u))))) * 1u)) >> 0u))))), _GLF_IDENTITY(_GLF_IDENTITY(GLF_merged4_0_1_11_1_1_13_2_1_12_3_1_14subgroup_idsubgroup_sizeworkgroup_idworkgroup_size, min(_GLF_IDENTITY(GLF_merged4_0_1_11_1_1_13_2_1_12_3_1_14subgroup_idsubgroup_sizeworkgroup_idworkgroup_size, ~ (~ _GLF_IDENTITY((GLF_merged4_0_1_11_1_1_13_2_1_12_3_1_14subgroup_idsubgroup_sizeworkgroup_idworkgroup_size), uvec4(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)) ^ ((GLF_merged4_0_1_11_1_1_13_2_1_12_3_1_14subgroup_idsubgroup_sizeworkgroup_idworkgroup_size))))), GLF_merged4_0_1_11_1_1_13_2_1_12_3_1_14subgroup_idsubgroup_sizeworkgroup_idworkgroup_size)).w, min(_GLF_IDENTITY(GLF_merged4_0_1_11_1_1_13_2_1_12_3_1_14subgroup_idsubgroup_sizeworkgroup_idworkgroup_size.w, (GLF_merged4_0_1_11_1_1_13_2_1_12_3_1_14subgroup_idsubgroup_sizeworkgroup_idworkgroup_size.w) ^ 0u), GLF_merged4_0_1_11_1_1_13_2_1_12_3_1_14subgroup_idsubgroup_sizeworkgroup_idworkgroup_size.w)))))) * GLF_merged4_0_1_11_1_1_13_2_1_12_3_1_14subgroup_idsubgroup_sizeworkgroup_idworkgroup_size.z, _GLF_struct_1(mat4x2(1.0), mat4x3(1.0), mat3x2(1.0), _GLF_IDENTITY(vec4(1.0), min(vec4(1.0), _GLF_IDENTITY(vec4(1.0), max(vec4(1.0), vec4(1.0))))), _GLF_struct_0(vec2(1.0), mat2(1.0)), mat3x2(1.0), 1u), _GLF_struct_4(_GLF_struct_2(mat4x3(1.0), bvec4(true), _GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, bool(bvec2(true, true))))), _GLF_IDENTITY(uvec3(_GLF_IDENTITY(1u, _GLF_IDENTITY(uint(uvec2(1u, (0u ^ 0u))), (uint(uvec2(1u, (0u ^ 0u)))) << 0u))), (uvec3(_GLF_IDENTITY(1u, _GLF_IDENTITY(uint(uvec2(1u, (0u ^ 0u))), (uint(uvec2(1u, (0u ^ 0u)))) << 0u)))) >> uvec3(0u, 0u, 0u)), bvec3(true), bvec2(true), mat3x2(1.0)), mat2(1.0), _GLF_struct_3(mat3(1.0), ivec3(1), true, _GLF_IDENTITY(mat4(1.0), _GLF_IDENTITY((true ? mat4(1.0) : _GLF_FUZZED(mat4(mat4x3(_GLF_IDENTITY(-361.235, clamp(-361.235, -361.235, _GLF_IDENTITY(-361.235, max(-361.235, -361.235)))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(46.14, min(_GLF_IDENTITY(46.14, (_GLF_IDENTITY(46.14, clamp(46.14, 46.14, 46.14))) - 0.0), _GLF_IDENTITY(_GLF_IDENTITY(46.14, min(46.14, 46.14)), clamp(46.14, _GLF_IDENTITY(46.14, 0.0 + (46.14)), 46.14)))), min(46.14, 46.14)), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(46.14, (_GLF_IDENTITY(46.14, (_GLF_IDENTITY(46.14, min(46.14, 46.14))) * 1.0)) - 0.0), min(_GLF_IDENTITY(46.14, (_GLF_IDENTITY(46.14, clamp(46.14, 46.14, _GLF_IDENTITY(46.14, _GLF_IDENTITY(float(vec2(_GLF_IDENTITY(46.14, (46.14) - 0.0), 1.0)), max(float(vec2(_GLF_IDENTITY(46.14, (46.14) - 0.0), 1.0)), float(vec2(_GLF_IDENTITY(46.14, (46.14) - 0.0), 1.0)))))))) - 0.0), _GLF_IDENTITY(_GLF_IDENTITY(46.14, clamp(46.14, 46.14, _GLF_IDENTITY(46.14, max(46.14, 46.14)))), clamp(46.14, _GLF_IDENTITY(_GLF_IDENTITY(46.14, clamp(46.14, 46.14, 46.14)), 0.0 + (46.14)), 46.14)))), min(_GLF_IDENTITY(46.14, min(46.14, 46.14)), 46.14)), max(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(46.14, min(46.14, 46.14)), min(_GLF_IDENTITY(46.14, (_GLF_IDENTITY(46.14, clamp(46.14, 46.14, 46.14))) - 0.0), _GLF_IDENTITY(46.14, clamp(_GLF_IDENTITY(46.14, clamp(46.14, 46.14, _GLF_IDENTITY(46.14, min(46.14, _GLF_IDENTITY(46.14, clamp(46.14, 46.14, _GLF_IDENTITY(46.14, max(46.14, 46.14)))))))), _GLF_IDENTITY(46.14, 0.0 + (46.14)), 46.14)))), min(46.14, 46.14)), _GLF_IDENTITY(_GLF_IDENTITY(46.14, min(_GLF_IDENTITY(46.14, (_GLF_IDENTITY(46.14, clamp(46.14, 46.14, 46.14))) - 0.0), _GLF_IDENTITY(_GLF_IDENTITY(46.14, clamp(46.14, _GLF_IDENTITY(46.14, 0.0 + (46.14)), 46.14)), 1.0 * (_GLF_IDENTITY(46.14, clamp(46.14, _GLF_IDENTITY(46.14, 0.0 + (46.14)), 46.14)))))), min(46.14, 46.14))))) / 1.0), _GLF_IDENTITY(-859.326, float(mat4(_GLF_IDENTITY(-859.326, (-859.326) - 0.0), _GLF_IDENTITY(_GLF_IDENTITY(dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(0.0, round(length(normalize(vec2(1.0, 1.0)))), 0.0, 0.0)), dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(0.0, round(length(normalize(vec2(1.0, 1.0)))), 0.0, 0.0))), float(vec2(_GLF_IDENTITY(dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(0.0, round(length(normalize(vec2(1.0, 1.0)))), 0.0, 0.0)), dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(0.0, round(length(normalize(vec2(1.0, 1.0)))), 0.0, 0.0))), 1.0))), length(vec3(0.0, 0.0, 0.0)), 1.0, 0.0, _GLF_IDENTITY(dot(vec3(determinant(mat2(0.0, 0.0, 0.0, 0.0)), 0.0, 1.0), vec3(1.0, 1.0, tan(0.0))), dot(vec3(_GLF_IDENTITY(determinant(mat2(0.0, 0.0, 0.0, 0.0)), round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))) * (_GLF_IDENTITY(determinant(mat2(0.0, 0.0, 0.0, 0.0)), max(determinant(mat2(0.0, 0.0, 0.0, 0.0)), determinant(mat2(0.0, 0.0, 0.0, 0.0)))))), 0.0, 1.0), vec3(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), 1.0, tan(0.0)))), 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, abs(0.0), _GLF_IDENTITY(dot(vec4(log(1.0), 1.0, 1.0, 1.0), vec4(1.0, 0.0, 0.0, 0.0)), dot(vec4(log(1.0), 1.0, 1.0, 1.0), vec4(1.0, 0.0, 0.0, 0.0))), 1.0, 1.0))), -0.9, 2254.5233, -6.3, 359.053, -716.113, 1179.7857, _GLF_IDENTITY(5.5, (false ? _GLF_FUZZED(-4.6) : 5.5)), 53.76, 888.894)))), (_GLF_IDENTITY((true ? mat4(1.0) : _GLF_FUZZED(mat4(mat4x3(-361.235, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(46.14, _GLF_IDENTITY(min(_GLF_IDENTITY(46.14, (_GLF_IDENTITY(46.14, clamp(46.14, 46.14, 46.14))) - 0.0), _GLF_IDENTITY(46.14, _GLF_IDENTITY(clamp(46.14, _GLF_IDENTITY(46.14, 0.0 + (46.14)), 46.14), float(mat4x3(clamp(46.14, _GLF_IDENTITY(46.14, 0.0 + (46.14)), 46.14), 0.0, cos(0.0), cos(0.0), 1.0, 0.0, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), 1.0, 0.0, 0.0, 0.0, 0.0))))), (min(_GLF_IDENTITY(46.14, (_GLF_IDENTITY(46.14, clamp(46.14, _GLF_IDENTITY(46.14, clamp(46.14, 46.14, 46.14)), 46.14))) - 0.0), _GLF_IDENTITY(46.14, clamp(46.14, _GLF_IDENTITY(46.14, 0.0 + (46.14)), _GLF_IDENTITY(46.14, mix(float(_GLF_FUZZED(8619.2581)), float(46.14), bool(true))))))) - 0.0)), min(46.14, 46.14)), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(46.14, min(_GLF_IDENTITY(46.14, (_GLF_IDENTITY(46.14, clamp(46.14, 46.14, 46.14))) - 0.0), _GLF_IDENTITY(46.14, clamp(46.14, _GLF_IDENTITY(46.14, 0.0 + (46.14)), 46.14)))), min(46.14, 46.14)), max(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(46.14, min(_GLF_IDENTITY(46.14, (_GLF_IDENTITY(46.14, clamp(46.14, 46.14, 46.14))) - 0.0), _GLF_IDENTITY(46.14, clamp(46.14, _GLF_IDENTITY(46.14, 0.0 + (46.14)), 46.14)))), mix(float(_GLF_IDENTITY(_GLF_IDENTITY(46.14, min(_GLF_IDENTITY(46.14, (_GLF_IDENTITY(46.14, clamp(46.14, 46.14, 46.14))) - 0.0), _GLF_IDENTITY(46.14, clamp(46.14, _GLF_IDENTITY(46.14, 0.0 + (46.14)), 46.14)))), (_GLF_IDENTITY(46.14, min(_GLF_IDENTITY(46.14, (_GLF_IDENTITY(46.14, clamp(46.14, 46.14, 46.14))) - 0.0), _GLF_IDENTITY(46.14, clamp(46.14, _GLF_IDENTITY(46.14, 0.0 + (46.14)), 46.14))))) / 1.0)), float(_GLF_FUZZED(53.89)), bool(false))), min(46.14, 46.14)), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(46.14, min(_GLF_IDENTITY(46.14, (_GLF_IDENTITY(_GLF_IDENTITY(46.14, clamp(46.14, 46.14, 46.14)), min(_GLF_IDENTITY(46.14, clamp(46.14, 46.14, 46.14)), _GLF_IDENTITY(_GLF_IDENTITY(46.14, clamp(46.14, 46.14, 46.14)), max(_GLF_IDENTITY(_GLF_IDENTITY(46.14, clamp(46.14, 46.14, 46.14)), (true ? _GLF_IDENTITY(46.14, clamp(46.14, 46.14, 46.14)) : _GLF_FUZZED(9265.6834))), _GLF_IDENTITY(46.14, clamp(46.14, 46.14, 46.14))))))) - 0.0), _GLF_IDENTITY(46.14, clamp(46.14, _GLF_IDENTITY(46.14, 0.0 + (46.14)), 46.14)))), mix(float(_GLF_IDENTITY(_GLF_IDENTITY(46.14, min(_GLF_IDENTITY(46.14, (_GLF_IDENTITY(_GLF_IDENTITY(46.14, clamp(46.14, 46.14, 46.14)), min(_GLF_IDENTITY(46.14, clamp(46.14, 46.14, 46.14)), _GLF_IDENTITY(_GLF_IDENTITY(46.14, clamp(46.14, 46.14, 46.14)), max(_GLF_IDENTITY(_GLF_IDENTITY(46.14, clamp(46.14, 46.14, 46.14)), (true ? _GLF_IDENTITY(46.14, clamp(46.14, 46.14, 46.14)) : _GLF_FUZZED(9265.6834))), _GLF_IDENTITY(46.14, clamp(46.14, 46.14, 46.14))))))) - 0.0), _GLF_IDENTITY(46.14, clamp(46.14, _GLF_IDENTITY(46.14, 0.0 + (46.14)), 46.14)))), max(_GLF_IDENTITY(46.14, min(_GLF_IDENTITY(46.14, (_GLF_IDENTITY(_GLF_IDENTITY(46.14, clamp(46.14, 46.14, 46.14)), min(_GLF_IDENTITY(46.14, clamp(46.14, 46.14, 46.14)), _GLF_IDENTITY(_GLF_IDENTITY(46.14, clamp(46.14, 46.14, 46.14)), max(_GLF_IDENTITY(_GLF_IDENTITY(46.14, clamp(46.14, 46.14, 46.14)), (true ? _GLF_IDENTITY(46.14, clamp(46.14, 46.14, 46.14)) : _GLF_FUZZED(9265.6834))), _GLF_IDENTITY(46.14, clamp(46.14, 46.14, 46.14))))))) - 0.0), _GLF_IDENTITY(46.14, clamp(46.14, _GLF_IDENTITY(46.14, 0.0 + (46.14)), 46.14)))), _GLF_IDENTITY(46.14, min(_GLF_IDENTITY(46.14, (_GLF_IDENTITY(_GLF_IDENTITY(46.14, clamp(46.14, 46.14, 46.14)), min(_GLF_IDENTITY(46.14, clamp(46.14, 46.14, 46.14)), _GLF_IDENTITY(_GLF_IDENTITY(46.14, clamp(46.14, 46.14, 46.14)), max(_GLF_IDENTITY(_GLF_IDENTITY(46.14, clamp(46.14, 46.14, 46.14)), (true ? _GLF_IDENTITY(46.14, clamp(46.14, 46.14, 46.14)) : _GLF_FUZZED(9265.6834))), _GLF_IDENTITY(46.14, clamp(46.14, 46.14, 46.14))))))) - 0.0), _GLF_IDENTITY(46.14, clamp(46.14, _GLF_IDENTITY(46.14, 0.0 + (46.14)), 46.14))))))), float(_GLF_FUZZED(float((-60630 | 73866)))), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), min(46.14, 46.14))))) / 1.0), _GLF_IDENTITY(-859.326, float(mat4(_GLF_IDENTITY(-859.326, (-859.326) - 0.0), _GLF_IDENTITY(dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(0.0, round(length(normalize(vec2(1.0, 1.0)))), 0.0, 0.0)), dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(887.355)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), round(length(normalize(vec2(1.0, 1.0)))), 0.0, 0.0))), length(vec3(0.0, 0.0, 0.0)), 1.0, 0.0, _GLF_IDENTITY(dot(vec3(determinant(mat2(0.0, 0.0, _GLF_IDENTITY(0.0, (0.0) / 1.0), 0.0)), 0.0, 1.0), vec3(1.0, 1.0, tan(0.0))), dot(vec3(determinant(mat2(0.0, 0.0, 0.0, 0.0)), 0.0, 1.0), vec3(1.0, 1.0, tan(0.0)))), 0.0, 1.0, 1.0, _GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, (0.0) - log(1.0)), _GLF_IDENTITY(0.0, clamp(0.0, _GLF_IDENTITY(0.0, float(mat3(0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0))), _GLF_IDENTITY(0.0, (0.0) - 0.0))))), 0.0, 1.0, abs(0.0), _GLF_IDENTITY(dot(vec4(log(1.0), 1.0, 1.0, 1.0), vec4(1.0, 0.0, 0.0, 0.0)), dot(_GLF_IDENTITY(vec4(log(1.0), 1.0, 1.0, 1.0), (vec4(log(1.0), 1.0, 1.0, 1.0)) - vec4(0.0, 0.0, 0.0, 0.0)), vec4(1.0, 0.0, 0.0, 0.0))), 1.0, 1.0))), -0.9, 2254.5233, -6.3, 359.053, -716.113, 1179.7857, _GLF_IDENTITY(5.5, (false ? _GLF_FUZZED(-4.6) : 5.5)), 53.76, 888.894)))), mat4(1.0) * ((true ? mat4(1.0) : _GLF_FUZZED(mat4(mat4x3(-361.235, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(46.14, min(_GLF_IDENTITY(46.14, _GLF_IDENTITY((_GLF_IDENTITY(46.14, clamp(46.14, 46.14, 46.14))) - _GLF_IDENTITY(0.0, 1.0 * (_GLF_IDENTITY(0.0, min(0.0, 0.0)))), min((_GLF_IDENTITY(46.14, clamp(46.14, 46.14, 46.14))) - _GLF_IDENTITY(0.0, 1.0 * (_GLF_IDENTITY(0.0, min(0.0, 0.0)))), (_GLF_IDENTITY(46.14, clamp(46.14, 46.14, 46.14))) - _GLF_IDENTITY(0.0, 1.0 * (_GLF_IDENTITY(0.0, min(0.0, 0.0))))))), _GLF_IDENTITY(46.14, clamp(46.14, _GLF_IDENTITY(46.14, 0.0 + (46.14)), 46.14)))), min(46.14, 46.14)), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(46.14, min(_GLF_IDENTITY(46.14, (_GLF_IDENTITY(46.14, clamp(46.14, 46.14, 46.14))) - 0.0), _GLF_IDENTITY(46.14, clamp(46.14, _GLF_IDENTITY(46.14, 0.0 + (46.14)), 46.14)))), (_GLF_IDENTITY(46.14, min(_GLF_IDENTITY(46.14, (_GLF_IDENTITY(46.14, clamp(46.14, 46.14, 46.14))) - 0.0), _GLF_IDENTITY(46.14, clamp(46.14, _GLF_IDENTITY(46.14, 0.0 + (46.14)), 46.14))))) / 1.0), min(46.14, 46.14)), max(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(46.14, min(_GLF_IDENTITY(46.14, (_GLF_IDENTITY(46.14, clamp(46.14, 46.14, 46.14))) - 0.0), _GLF_IDENTITY(46.14, clamp(46.14, _GLF_IDENTITY(46.14, 0.0 + (46.14)), 46.14)))), min(_GLF_IDENTITY(46.14, min(_GLF_IDENTITY(46.14, (_GLF_IDENTITY(46.14, clamp(46.14, 46.14, 46.14))) - 0.0), _GLF_IDENTITY(46.14, clamp(46.14, _GLF_IDENTITY(46.14, 0.0 + (46.14)), 46.14)))), _GLF_IDENTITY(46.14, min(_GLF_IDENTITY(46.14, (_GLF_IDENTITY(46.14, clamp(46.14, 46.14, 46.14))) - 0.0), _GLF_IDENTITY(46.14, clamp(46.14, _GLF_IDENTITY(46.14, 0.0 + (46.14)), 46.14)))))), min(_GLF_IDENTITY(46.14, determinant(mat4(_GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0)), dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0))), 0.0, 0.0, 1.0, 0.0, 1.0, cos(0.0), 1.0, 0.0, 0.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0))), 1.0, 0.0, 0.0, 0.0, 1.0)) * (46.14)), 46.14)), clamp(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(46.14, min(_GLF_IDENTITY(46.14, (_GLF_IDENTITY(46.14, clamp(46.14, 46.14, 46.14))) - 0.0), _GLF_IDENTITY(46.14, clamp(46.14, _GLF_IDENTITY(46.14, 0.0 + (46.14)), 46.14)))), min(_GLF_IDENTITY(46.14, min(_GLF_IDENTITY(46.14, (_GLF_IDENTITY(46.14, clamp(46.14, 46.14, 46.14))) - 0.0), _GLF_IDENTITY(46.14, clamp(46.14, _GLF_IDENTITY(46.14, 0.0 + (46.14)), 46.14)))), _GLF_IDENTITY(46.14, min(_GLF_IDENTITY(46.14, (_GLF_IDENTITY(46.14, clamp(46.14, 46.14, 46.14))) - 0.0), _GLF_IDENTITY(46.14, clamp(46.14, _GLF_IDENTITY(46.14, 0.0 + (46.14)), 46.14)))))), min(_GLF_IDENTITY(46.14, determinant(mat4(_GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0)), dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0))), 0.0, 0.0, 1.0, 0.0, 1.0, cos(0.0), 1.0, 0.0, 0.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0))), 1.0, 0.0, 0.0, 0.0, 1.0)) * (46.14)), 46.14)), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(46.14, min(_GLF_IDENTITY(46.14, (_GLF_IDENTITY(46.14, clamp(46.14, 46.14, 46.14))) - 0.0), _GLF_IDENTITY(46.14, clamp(46.14, _GLF_IDENTITY(46.14, 0.0 + (46.14)), 46.14)))), min(_GLF_IDENTITY(46.14, min(_GLF_IDENTITY(46.14, (_GLF_IDENTITY(46.14, clamp(46.14, 46.14, 46.14))) - 0.0), _GLF_IDENTITY(46.14, clamp(46.14, _GLF_IDENTITY(46.14, 0.0 + (46.14)), 46.14)))), _GLF_IDENTITY(46.14, min(_GLF_IDENTITY(46.14, (_GLF_IDENTITY(46.14, clamp(46.14, 46.14, 46.14))) - 0.0), _GLF_IDENTITY(46.14, clamp(46.14, _GLF_IDENTITY(46.14, 0.0 + (46.14)), 46.14)))))), min(_GLF_IDENTITY(46.14, determinant(mat4(_GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0)), dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0))), 0.0, 0.0, 1.0, 0.0, 1.0, cos(0.0), 1.0, 0.0, 0.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0))), 1.0, 0.0, 0.0, 0.0, 1.0)) * (46.14)), 46.14)), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(46.14, min(_GLF_IDENTITY(46.14, (_GLF_IDENTITY(46.14, clamp(46.14, 46.14, 46.14))) - 0.0), _GLF_IDENTITY(46.14, clamp(46.14, _GLF_IDENTITY(46.14, 0.0 + (46.14)), 46.14)))), min(_GLF_IDENTITY(46.14, min(_GLF_IDENTITY(46.14, (_GLF_IDENTITY(46.14, clamp(46.14, 46.14, 46.14))) - 0.0), _GLF_IDENTITY(46.14, clamp(46.14, _GLF_IDENTITY(46.14, 0.0 + (46.14)), 46.14)))), _GLF_IDENTITY(46.14, min(_GLF_IDENTITY(46.14, (_GLF_IDENTITY(46.14, clamp(46.14, 46.14, 46.14))) - 0.0), _GLF_IDENTITY(46.14, clamp(46.14, _GLF_IDENTITY(46.14, 0.0 + (46.14)), 46.14)))))), min(_GLF_IDENTITY(46.14, determinant(mat4(_GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0)), dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0))), 0.0, 0.0, 1.0, 0.0, 1.0, cos(0.0), 1.0, 0.0, 0.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0))), 1.0, 0.0, 0.0, 0.0, 1.0)) * (46.14)), 46.14)))), _GLF_IDENTITY(_GLF_IDENTITY(46.14, min(_GLF_IDENTITY(46.14, (_GLF_IDENTITY(46.14, clamp(46.14, 46.14, 46.14))) - 0.0), _GLF_IDENTITY(46.14, clamp(46.14, _GLF_IDENTITY(46.14, 0.0 + _GLF_IDENTITY((46.14), float(vec4((46.14), _GLF_IDENTITY(dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, _GLF_IDENTITY(_GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(1.0, 0.0)), dot(vec2(0.0, 1.0), vec2(1.0, 0.0))), clamp(_GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(1.0, 0.0)), dot(vec2(0.0, 1.0), vec2(1.0, 0.0))), _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(1.0, 0.0)), dot(vec2(0.0, 1.0), vec2(1.0, 0.0))), _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(1.0, 0.0)), dot(vec2(0.0, 1.0), vec2(1.0, 0.0))))), 0.0, 1.0)), dot(vec4(0.0, 0.0, 0.0, 1.0), _GLF_IDENTITY(vec4(0.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(1.0, _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED((+ 4.1))), bool(false))))), dot(vec2(0.0, 1.0), vec2(1.0, 0.0))), 0.0, 1.0), max(vec4(0.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(1.0, _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED((+ 4.1))), bool(false))))), dot(vec2(0.0, 1.0), vec2(1.0, 0.0))), 0.0, 1.0), vec4(0.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(1.0, _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED((+ 4.1))), bool(false))))), dot(vec2(0.0, 1.0), vec2(1.0, 0.0))), 0.0, 1.0))))), 1.0, 0.0)))), 46.14)))), min(46.14, 46.14))))) / 1.0), _GLF_IDENTITY(-859.326, _GLF_IDENTITY(float(mat4(_GLF_IDENTITY(-859.326, (-859.326) - 0.0), _GLF_IDENTITY(dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(0.0, round(length(normalize(vec2(1.0, 1.0)))), _GLF_IDENTITY(0.0, max(0.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)))), 0.0)), dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(0.0, round(length(normalize(vec2(1.0, 1.0)))), 0.0, 0.0))), _GLF_IDENTITY(_GLF_IDENTITY(length(vec3(0.0, 0.0, 0.0)), float(mat2(length(vec3(0.0, 0.0, 0.0)), 0.0, 1.0, 1.0))), mix(float(_GLF_FUZZED(2.0)), float(length(vec3(0.0, 0.0, 0.0))), bool(true))), 1.0, 0.0, _GLF_IDENTITY(dot(vec3(determinant(mat2(0.0, 0.0, 0.0, 0.0)), 0.0, 1.0), _GLF_IDENTITY(_GLF_IDENTITY(vec3(1.0, 1.0, tan(0.0)), max(vec3(1.0, 1.0, tan(0.0)), vec3(1.0, 1.0, tan(0.0)))), clamp(vec3(1.0, 1.0, tan(0.0)), _GLF_IDENTITY(_GLF_IDENTITY(vec3(_GLF_IDENTITY(1.0, mix(float(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(6.0) : 1.0))), float(_GLF_FUZZED(float((~ 39775u)))), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), 1.0, tan(0.0)), (false ? _GLF_FUZZED(atanh(vec3(1250.6411, 372.228, 401.941))) : vec3(_GLF_IDENTITY(1.0, mix(float(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(6.0) : 1.0))), float(_GLF_FUZZED(float((~ 39775u)))), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), 1.0, tan(0.0)))), max(vec3(1.0, 1.0, tan(0.0)), _GLF_IDENTITY(vec3(1.0, 1.0, tan(0.0)), mix(_GLF_IDENTITY(vec3((vec3(1.0, 1.0, tan(0.0)))[0], (vec3(1.0, 1.0, tan(0.0)))[1], _GLF_FUZZED(316.186)), mix(vec3(_GLF_FUZZED(-7345.9521), (vec3((vec3(1.0, 1.0, tan(0.0)))[0], (vec3(1.0, 1.0, tan(0.0)))[1], _GLF_FUZZED(316.186)))[1], _GLF_FUZZED(-4.2)), vec3((vec3((vec3(1.0, 1.0, tan(0.0)))[0], (vec3(1.0, 1.0, tan(0.0)))[1], _GLF_FUZZED(316.186)))[0], _GLF_FUZZED(686.665), (vec3((vec3(1.0, 1.0, tan(0.0)))[0], (vec3(1.0, 1.0, tan(0.0)))[1], _GLF_FUZZED(316.186)))[2]), bvec3(true, false, true))), vec3(_GLF_FUZZED(159.240), _GLF_FUZZED(-381.243), (vec3(1.0, 1.0, tan(0.0)))[2]), bvec3(false, false, true))))), _GLF_IDENTITY(vec3(1.0, 1.0, tan(0.0)), mat3(1.0) * (vec3(1.0, 1.0, tan(0.0))))))), dot(vec3(determinant(mat2(0.0, 0.0, 0.0, 0.0)), 0.0, 1.0), vec3(1.0, 1.0, tan(0.0)))), 0.0, 1.0, 1.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0, 1.0, abs(0.0), _GLF_IDENTITY(dot(vec4(log(1.0), 1.0, 1.0, 1.0), vec4(1.0, _GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, 1.0 * (0.0))) - 0.0), 0.0, 0.0)), dot(vec4(log(1.0), 1.0, 1.0, 1.0), vec4(1.0, 0.0, 0.0, 0.0))), 1.0, 1.0)), min(float(mat4(_GLF_IDENTITY(-859.326, (-859.326) - 0.0), _GLF_IDENTITY(dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(0.0, round(length(normalize(vec2(1.0, 1.0)))), _GLF_IDENTITY(0.0, max(0.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)))), 0.0)), dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(0.0, round(length(normalize(vec2(1.0, 1.0)))), 0.0, 0.0))), _GLF_IDENTITY(_GLF_IDENTITY(length(vec3(0.0, 0.0, 0.0)), float(mat2(length(vec3(0.0, 0.0, 0.0)), 0.0, 1.0, 1.0))), mix(float(_GLF_FUZZED(2.0)), float(length(vec3(0.0, 0.0, 0.0))), bool(true))), 1.0, 0.0, _GLF_IDENTITY(dot(vec3(determinant(mat2(0.0, 0.0, 0.0, 0.0)), 0.0, 1.0), _GLF_IDENTITY(_GLF_IDENTITY(vec3(1.0, 1.0, tan(0.0)), max(vec3(1.0, 1.0, tan(0.0)), vec3(1.0, 1.0, tan(0.0)))), clamp(vec3(1.0, 1.0, tan(0.0)), _GLF_IDENTITY(_GLF_IDENTITY(vec3(_GLF_IDENTITY(1.0, mix(float(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(6.0) : 1.0))), float(_GLF_FUZZED(float((~ 39775u)))), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), 1.0, tan(0.0)), (false ? _GLF_FUZZED(atanh(vec3(1250.6411, 372.228, 401.941))) : vec3(_GLF_IDENTITY(1.0, mix(float(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(6.0) : 1.0))), float(_GLF_FUZZED(float((~ 39775u)))), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), 1.0, tan(0.0)))), max(vec3(1.0, 1.0, tan(0.0)), _GLF_IDENTITY(vec3(1.0, 1.0, tan(0.0)), mix(_GLF_IDENTITY(vec3((vec3(1.0, 1.0, tan(0.0)))[0], (vec3(1.0, 1.0, tan(0.0)))[1], _GLF_FUZZED(316.186)), mix(vec3(_GLF_FUZZED(-7345.9521), (vec3((vec3(1.0, 1.0, tan(0.0)))[0], (vec3(1.0, 1.0, tan(0.0)))[1], _GLF_FUZZED(316.186)))[1], _GLF_FUZZED(-4.2)), vec3((vec3((vec3(1.0, 1.0, tan(0.0)))[0], (vec3(1.0, 1.0, tan(0.0)))[1], _GLF_FUZZED(316.186)))[0], _GLF_FUZZED(686.665), (vec3((vec3(1.0, 1.0, tan(0.0)))[0], (vec3(1.0, 1.0, tan(0.0)))[1], _GLF_FUZZED(316.186)))[2]), bvec3(true, false, true))), vec3(_GLF_FUZZED(159.240), _GLF_FUZZED(-381.243), (vec3(1.0, 1.0, tan(0.0)))[2]), bvec3(false, false, true))))), _GLF_IDENTITY(vec3(1.0, 1.0, tan(0.0)), mat3(1.0) * (vec3(1.0, 1.0, tan(0.0))))))), dot(vec3(determinant(mat2(0.0, 0.0, 0.0, 0.0)), 0.0, 1.0), vec3(1.0, 1.0, tan(0.0)))), 0.0, 1.0, 1.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0, 1.0, abs(0.0), _GLF_IDENTITY(dot(vec4(log(1.0), 1.0, 1.0, 1.0), vec4(1.0, _GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, 1.0 * (0.0))) - 0.0), 0.0, 0.0)), dot(vec4(log(1.0), 1.0, 1.0, 1.0), vec4(1.0, 0.0, 0.0, 0.0))), 1.0, 1.0)), float(mat4(_GLF_IDENTITY(-859.326, (-859.326) - 0.0), _GLF_IDENTITY(dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(0.0, round(length(normalize(vec2(1.0, 1.0)))), _GLF_IDENTITY(0.0, max(0.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)))), 0.0)), dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(0.0, round(length(normalize(vec2(1.0, 1.0)))), 0.0, 0.0))), _GLF_IDENTITY(_GLF_IDENTITY(length(vec3(0.0, 0.0, 0.0)), float(mat2(length(vec3(0.0, 0.0, 0.0)), 0.0, 1.0, 1.0))), mix(float(_GLF_FUZZED(2.0)), float(length(vec3(0.0, 0.0, 0.0))), bool(true))), 1.0, 0.0, _GLF_IDENTITY(dot(vec3(determinant(mat2(0.0, 0.0, 0.0, 0.0)), 0.0, 1.0), _GLF_IDENTITY(_GLF_IDENTITY(vec3(1.0, 1.0, tan(0.0)), max(vec3(1.0, 1.0, tan(0.0)), vec3(1.0, 1.0, tan(0.0)))), clamp(vec3(1.0, 1.0, tan(0.0)), _GLF_IDENTITY(_GLF_IDENTITY(vec3(_GLF_IDENTITY(1.0, mix(float(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(6.0) : 1.0))), float(_GLF_FUZZED(float((~ 39775u)))), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), 1.0, tan(0.0)), (false ? _GLF_FUZZED(atanh(vec3(1250.6411, 372.228, 401.941))) : vec3(_GLF_IDENTITY(1.0, mix(float(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(6.0) : 1.0))), float(_GLF_FUZZED(float((~ 39775u)))), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), 1.0, tan(0.0)))), max(vec3(1.0, 1.0, tan(0.0)), _GLF_IDENTITY(vec3(1.0, 1.0, tan(0.0)), mix(_GLF_IDENTITY(vec3((vec3(1.0, 1.0, tan(0.0)))[0], (vec3(1.0, 1.0, tan(0.0)))[1], _GLF_FUZZED(316.186)), mix(vec3(_GLF_FUZZED(-7345.9521), (vec3((vec3(1.0, 1.0, tan(0.0)))[0], (vec3(1.0, 1.0, tan(0.0)))[1], _GLF_FUZZED(316.186)))[1], _GLF_FUZZED(-4.2)), vec3((vec3((vec3(1.0, 1.0, tan(0.0)))[0], (vec3(1.0, 1.0, tan(0.0)))[1], _GLF_FUZZED(316.186)))[0], _GLF_FUZZED(686.665), (vec3((vec3(1.0, 1.0, tan(0.0)))[0], (vec3(1.0, 1.0, tan(0.0)))[1], _GLF_FUZZED(316.186)))[2]), bvec3(true, false, true))), vec3(_GLF_FUZZED(159.240), _GLF_FUZZED(-381.243), (vec3(1.0, 1.0, tan(0.0)))[2]), bvec3(false, false, true))))), _GLF_IDENTITY(vec3(1.0, 1.0, tan(0.0)), mat3(1.0) * (vec3(1.0, 1.0, tan(0.0))))))), dot(vec3(determinant(mat2(0.0, 0.0, 0.0, 0.0)), 0.0, 1.0), vec3(1.0, 1.0, tan(0.0)))), 0.0, 1.0, 1.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0, 1.0, abs(0.0), _GLF_IDENTITY(dot(vec4(log(1.0), 1.0, 1.0, 1.0), vec4(1.0, _GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, 1.0 * (0.0))) - 0.0), 0.0, 0.0)), dot(vec4(log(1.0), 1.0, 1.0, 1.0), vec4(1.0, 0.0, 0.0, 0.0))), 1.0, 1.0))))), -0.9, 2254.5233, -6.3, 359.053, -716.113, 1179.7857, _GLF_IDENTITY(5.5, (false ? _GLF_IDENTITY(_GLF_FUZZED(-4.6), max(_GLF_IDENTITY(_GLF_FUZZED(-4.6), clamp(_GLF_FUZZED(-4.6), _GLF_FUZZED(-4.6), _GLF_FUZZED(-4.6))), _GLF_FUZZED(-4.6))) : 5.5)), 53.76, 888.894))))))) - mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))), mat4(1.0), mat3x4(_GLF_IDENTITY(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-0.3)), float(1.0), bool(true))), max(1.0, _GLF_IDENTITY(1.0, _GLF_IDENTITY(float(vec3(1.0, 1.0, 1.0)), mix(float(float(vec3(1.0, 1.0, 1.0))), float(_GLF_FUZZED(32.67)), bool(_GLF_IDENTITY(false, (false) || false))))))))), mat3(1.0), true, mat2(1.0)));
 if(_GLF_DEAD(false))
  {
   do
    {
     do
      {
       if(_GLF_DEAD(false))
        continue;
       return;
      }
     while(_GLF_WRAPPED_LOOP(false));
    }
   while(_GLF_WRAPPED_LOOP(false));
  }
 uint virtual_gid = _GLF_IDENTITY(_GLF_struct_replacement_5.workgroup_base + GLF_merged4_0_1_11_1_1_13_2_1_12_3_1_14subgroup_idsubgroup_sizeworkgroup_idworkgroup_size.x * _GLF_IDENTITY(GLF_merged4_0_1_11_1_1_13_2_1_12_3_1_14subgroup_idsubgroup_sizeworkgroup_idworkgroup_size.y, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged4_0_1_11_1_1_13_2_1_12_3_1_14subgroup_idsubgroup_sizeworkgroup_idworkgroup_size.y, (GLF_merged4_0_1_11_1_1_13_2_1_12_3_1_14subgroup_idsubgroup_sizeworkgroup_idworkgroup_size.y) * 1u), (_GLF_IDENTITY(GLF_merged4_0_1_11_1_1_13_2_1_12_3_1_14subgroup_idsubgroup_sizeworkgroup_idworkgroup_size.y, (GLF_merged4_0_1_11_1_1_13_2_1_12_3_1_14subgroup_idsubgroup_sizeworkgroup_idworkgroup_size.y) * 1u)) | (_GLF_IDENTITY(GLF_merged4_0_1_11_1_1_13_2_1_12_3_1_14subgroup_idsubgroup_sizeworkgroup_idworkgroup_size.y, (GLF_merged4_0_1_11_1_1_13_2_1_12_3_1_14subgroup_idsubgroup_sizeworkgroup_idworkgroup_size.y) * 1u))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged4_0_1_11_1_1_13_2_1_12_3_1_14subgroup_idsubgroup_sizeworkgroup_idworkgroup_size.y, (GLF_merged4_0_1_11_1_1_13_2_1_12_3_1_14subgroup_idsubgroup_sizeworkgroup_idworkgroup_size.y) * 1u), (_GLF_IDENTITY(GLF_merged4_0_1_11_1_1_13_2_1_12_3_1_14subgroup_idsubgroup_sizeworkgroup_idworkgroup_size.y, (GLF_merged4_0_1_11_1_1_13_2_1_12_3_1_14subgroup_idsubgroup_sizeworkgroup_idworkgroup_size.y) * 1u)) | (_GLF_IDENTITY(GLF_merged4_0_1_11_1_1_13_2_1_12_3_1_14subgroup_idsubgroup_sizeworkgroup_idworkgroup_size.y, (GLF_merged4_0_1_11_1_1_13_2_1_12_3_1_14subgroup_idsubgroup_sizeworkgroup_idworkgroup_size.y) * 1u))), min(_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged4_0_1_11_1_1_13_2_1_12_3_1_14subgroup_idsubgroup_sizeworkgroup_idworkgroup_size.y, (GLF_merged4_0_1_11_1_1_13_2_1_12_3_1_14subgroup_idsubgroup_sizeworkgroup_idworkgroup_size.y) * 1u), (_GLF_IDENTITY(GLF_merged4_0_1_11_1_1_13_2_1_12_3_1_14subgroup_idsubgroup_sizeworkgroup_idworkgroup_size.y, (GLF_merged4_0_1_11_1_1_13_2_1_12_3_1_14subgroup_idsubgroup_sizeworkgroup_idworkgroup_size.y) * 1u)) | (_GLF_IDENTITY(GLF_merged4_0_1_11_1_1_13_2_1_12_3_1_14subgroup_idsubgroup_sizeworkgroup_idworkgroup_size.y, (GLF_merged4_0_1_11_1_1_13_2_1_12_3_1_14subgroup_idsubgroup_sizeworkgroup_idworkgroup_size.y) * 1u))), _GLF_IDENTITY(_GLF_IDENTITY(GLF_merged4_0_1_11_1_1_13_2_1_12_3_1_14subgroup_idsubgroup_sizeworkgroup_idworkgroup_size.y, (GLF_merged4_0_1_11_1_1_13_2_1_12_3_1_14subgroup_idsubgroup_sizeworkgroup_idworkgroup_size.y) * 1u), (_GLF_IDENTITY(GLF_merged4_0_1_11_1_1_13_2_1_12_3_1_14subgroup_idsubgroup_sizeworkgroup_idworkgroup_size.y, (GLF_merged4_0_1_11_1_1_13_2_1_12_3_1_14subgroup_idsubgroup_sizeworkgroup_idworkgroup_size.y) * 1u)) | (_GLF_IDENTITY(GLF_merged4_0_1_11_1_1_13_2_1_12_3_1_14subgroup_idsubgroup_sizeworkgroup_idworkgroup_size.y, (GLF_merged4_0_1_11_1_1_13_2_1_12_3_1_14subgroup_idsubgroup_sizeworkgroup_idworkgroup_size.y) * 1u)))))) | (_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged4_0_1_11_1_1_13_2_1_12_3_1_14subgroup_idsubgroup_sizeworkgroup_idworkgroup_size.y, (GLF_merged4_0_1_11_1_1_13_2_1_12_3_1_14subgroup_idsubgroup_sizeworkgroup_idworkgroup_size.y) * 1u), (_GLF_IDENTITY(GLF_merged4_0_1_11_1_1_13_2_1_12_3_1_14subgroup_idsubgroup_sizeworkgroup_idworkgroup_size.y, (GLF_merged4_0_1_11_1_1_13_2_1_12_3_1_14subgroup_idsubgroup_sizeworkgroup_idworkgroup_size.y) * 1u)) | (_GLF_IDENTITY(GLF_merged4_0_1_11_1_1_13_2_1_12_3_1_14subgroup_idsubgroup_sizeworkgroup_idworkgroup_size.y, (GLF_merged4_0_1_11_1_1_13_2_1_12_3_1_14subgroup_idsubgroup_sizeworkgroup_idworkgroup_size.y) * 1u))))), max(_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged4_0_1_11_1_1_13_2_1_12_3_1_14subgroup_idsubgroup_sizeworkgroup_idworkgroup_size.y, (GLF_merged4_0_1_11_1_1_13_2_1_12_3_1_14subgroup_idsubgroup_sizeworkgroup_idworkgroup_size.y) * 1u), (_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged4_0_1_11_1_1_13_2_1_12_3_1_14subgroup_idsubgroup_sizeworkgroup_idworkgroup_size, (GLF_merged4_0_1_11_1_1_13_2_1_12_3_1_14subgroup_idsubgroup_sizeworkgroup_idworkgroup_size) | uvec4(0u, 0u, 0u, 0u)).y, (GLF_merged4_0_1_11_1_1_13_2_1_12_3_1_14subgroup_idsubgroup_sizeworkgroup_idworkgroup_size.y) * _GLF_IDENTITY(1u, (1u) * 1u))) | _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged4_0_1_11_1_1_13_2_1_12_3_1_14subgroup_idsubgroup_sizeworkgroup_idworkgroup_size.y, ~ (~ (GLF_merged4_0_1_11_1_1_13_2_1_12_3_1_14subgroup_idsubgroup_sizeworkgroup_idworkgroup_size.y))), (GLF_merged4_0_1_11_1_1_13_2_1_12_3_1_14subgroup_idsubgroup_sizeworkgroup_idworkgroup_size.y) * 1u)), ~ (_GLF_IDENTITY(~ ((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged4_0_1_11_1_1_13_2_1_12_3_1_14subgroup_idsubgroup_sizeworkgroup_idworkgroup_size, (GLF_merged4_0_1_11_1_1_13_2_1_12_3_1_14subgroup_idsubgroup_sizeworkgroup_idworkgroup_size) | (GLF_merged4_0_1_11_1_1_13_2_1_12_3_1_14subgroup_idsubgroup_sizeworkgroup_idworkgroup_size)).y, ~ (~ (GLF_merged4_0_1_11_1_1_13_2_1_12_3_1_14subgroup_idsubgroup_sizeworkgroup_idworkgroup_size.y))), (GLF_merged4_0_1_11_1_1_13_2_1_12_3_1_14subgroup_idsubgroup_sizeworkgroup_idworkgroup_size.y) * 1u))), (~ ((_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged4_0_1_11_1_1_13_2_1_12_3_1_14subgroup_idsubgroup_sizeworkgroup_idworkgroup_size.y, ~ (~ (GLF_merged4_0_1_11_1_1_13_2_1_12_3_1_14subgroup_idsubgroup_sizeworkgroup_idworkgroup_size.y))), (GLF_merged4_0_1_11_1_1_13_2_1_12_3_1_14subgroup_idsubgroup_sizeworkgroup_idworkgroup_size.y) * 1u)))) << 0u)))), _GLF_IDENTITY(_GLF_IDENTITY(GLF_merged4_0_1_11_1_1_13_2_1_12_3_1_14subgroup_idsubgroup_sizeworkgroup_idworkgroup_size.y, (GLF_merged4_0_1_11_1_1_13_2_1_12_3_1_14subgroup_idsubgroup_sizeworkgroup_idworkgroup_size.y) * 1u), _GLF_IDENTITY(uint(uvec4(_GLF_IDENTITY(GLF_merged4_0_1_11_1_1_13_2_1_12_3_1_14subgroup_idsubgroup_sizeworkgroup_idworkgroup_size.y, (GLF_merged4_0_1_11_1_1_13_2_1_12_3_1_14subgroup_idsubgroup_sizeworkgroup_idworkgroup_size.y) * 1u), 1u, 0u, 1u)), (uint(uvec4(_GLF_IDENTITY(GLF_merged4_0_1_11_1_1_13_2_1_12_3_1_14subgroup_idsubgroup_sizeworkgroup_idworkgroup_size.y, (GLF_merged4_0_1_11_1_1_13_2_1_12_3_1_14subgroup_idsubgroup_sizeworkgroup_idworkgroup_size.y) * 1u), 1u, 0u, 1u))) | (uint(uvec4(_GLF_IDENTITY(GLF_merged4_0_1_11_1_1_13_2_1_12_3_1_14subgroup_idsubgroup_sizeworkgroup_idworkgroup_size.y, (GLF_merged4_0_1_11_1_1_13_2_1_12_3_1_14subgroup_idsubgroup_sizeworkgroup_idworkgroup_size.y) * 1u), 1u, 0u, 1u)))))))) ^ 0u, clamp((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged4_0_1_11_1_1_13_2_1_12_3_1_14subgroup_idsubgroup_sizeworkgroup_idworkgroup_size.y, (GLF_merged4_0_1_11_1_1_13_2_1_12_3_1_14subgroup_idsubgroup_sizeworkgroup_idworkgroup_size.y) * 1u), (_GLF_IDENTITY(GLF_merged4_0_1_11_1_1_13_2_1_12_3_1_14subgroup_idsubgroup_sizeworkgroup_idworkgroup_size.y, (GLF_merged4_0_1_11_1_1_13_2_1_12_3_1_14subgroup_idsubgroup_sizeworkgroup_idworkgroup_size.y) * 1u)) | (_GLF_IDENTITY(GLF_merged4_0_1_11_1_1_13_2_1_12_3_1_14subgroup_idsubgroup_sizeworkgroup_idworkgroup_size.y, (GLF_merged4_0_1_11_1_1_13_2_1_12_3_1_14subgroup_idsubgroup_sizeworkgroup_idworkgroup_size.y) * 1u))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged4_0_1_11_1_1_13_2_1_12_3_1_14subgroup_idsubgroup_sizeworkgroup_idworkgroup_size.y, (GLF_merged4_0_1_11_1_1_13_2_1_12_3_1_14subgroup_idsubgroup_sizeworkgroup_idworkgroup_size.y) * 1u), (_GLF_IDENTITY(GLF_merged4_0_1_11_1_1_13_2_1_12_3_1_14subgroup_idsubgroup_sizeworkgroup_idworkgroup_size.y, (GLF_merged4_0_1_11_1_1_13_2_1_12_3_1_14subgroup_idsubgroup_sizeworkgroup_idworkgroup_size.y) * 1u)) | (_GLF_IDENTITY(GLF_merged4_0_1_11_1_1_13_2_1_12_3_1_14subgroup_idsubgroup_sizeworkgroup_idworkgroup_size.y, (GLF_merged4_0_1_11_1_1_13_2_1_12_3_1_14subgroup_idsubgroup_sizeworkgroup_idworkgroup_size.y) * 1u))), min(_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged4_0_1_11_1_1_13_2_1_12_3_1_14subgroup_idsubgroup_sizeworkgroup_idworkgroup_size.y, (GLF_merged4_0_1_11_1_1_13_2_1_12_3_1_14subgroup_idsubgroup_sizeworkgroup_idworkgroup_size.y) * 1u), (_GLF_IDENTITY(GLF_merged4_0_1_11_1_1_13_2_1_12_3_1_14subgroup_idsubgroup_sizeworkgroup_idworkgroup_size.y, (GLF_merged4_0_1_11_1_1_13_2_1_12_3_1_14subgroup_idsubgroup_sizeworkgroup_idworkgroup_size.y) * 1u)) | (_GLF_IDENTITY(GLF_merged4_0_1_11_1_1_13_2_1_12_3_1_14subgroup_idsubgroup_sizeworkgroup_idworkgroup_size.y, (GLF_merged4_0_1_11_1_1_13_2_1_12_3_1_14subgroup_idsubgroup_sizeworkgroup_idworkgroup_size.y) * 1u))), _GLF_IDENTITY(_GLF_IDENTITY(GLF_merged4_0_1_11_1_1_13_2_1_12_3_1_14subgroup_idsubgroup_sizeworkgroup_idworkgroup_size.y, (GLF_merged4_0_1_11_1_1_13_2_1_12_3_1_14subgroup_idsubgroup_sizeworkgroup_idworkgroup_size.y) * 1u), (_GLF_IDENTITY(GLF_merged4_0_1_11_1_1_13_2_1_12_3_1_14subgroup_idsubgroup_sizeworkgroup_idworkgroup_size.y, (GLF_merged4_0_1_11_1_1_13_2_1_12_3_1_14subgroup_idsubgroup_sizeworkgroup_idworkgroup_size.y) * 1u)) | (_GLF_IDENTITY(GLF_merged4_0_1_11_1_1_13_2_1_12_3_1_14subgroup_idsubgroup_sizeworkgroup_idworkgroup_size.y, (GLF_merged4_0_1_11_1_1_13_2_1_12_3_1_14subgroup_idsubgroup_sizeworkgroup_idworkgroup_size.y) * 1u)))))) | (_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged4_0_1_11_1_1_13_2_1_12_3_1_14subgroup_idsubgroup_sizeworkgroup_idworkgroup_size.y, (GLF_merged4_0_1_11_1_1_13_2_1_12_3_1_14subgroup_idsubgroup_sizeworkgroup_idworkgroup_size.y) * 1u), (_GLF_IDENTITY(GLF_merged4_0_1_11_1_1_13_2_1_12_3_1_14subgroup_idsubgroup_sizeworkgroup_idworkgroup_size.y, (GLF_merged4_0_1_11_1_1_13_2_1_12_3_1_14subgroup_idsubgroup_sizeworkgroup_idworkgroup_size.y) * 1u)) | (_GLF_IDENTITY(GLF_merged4_0_1_11_1_1_13_2_1_12_3_1_14subgroup_idsubgroup_sizeworkgroup_idworkgroup_size.y, (GLF_merged4_0_1_11_1_1_13_2_1_12_3_1_14subgroup_idsubgroup_sizeworkgroup_idworkgroup_size.y) * 1u))))), max(_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged4_0_1_11_1_1_13_2_1_12_3_1_14subgroup_idsubgroup_sizeworkgroup_idworkgroup_size.y, (GLF_merged4_0_1_11_1_1_13_2_1_12_3_1_14subgroup_idsubgroup_sizeworkgroup_idworkgroup_size.y) * 1u), (_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged4_0_1_11_1_1_13_2_1_12_3_1_14subgroup_idsubgroup_sizeworkgroup_idworkgroup_size, (GLF_merged4_0_1_11_1_1_13_2_1_12_3_1_14subgroup_idsubgroup_sizeworkgroup_idworkgroup_size) | uvec4(0u, 0u, 0u, 0u)).y, (GLF_merged4_0_1_11_1_1_13_2_1_12_3_1_14subgroup_idsubgroup_sizeworkgroup_idworkgroup_size.y) * _GLF_IDENTITY(1u, (1u) * 1u))) | _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged4_0_1_11_1_1_13_2_1_12_3_1_14subgroup_idsubgroup_sizeworkgroup_idworkgroup_size.y, ~ (~ (GLF_merged4_0_1_11_1_1_13_2_1_12_3_1_14subgroup_idsubgroup_sizeworkgroup_idworkgroup_size.y))), (GLF_merged4_0_1_11_1_1_13_2_1_12_3_1_14subgroup_idsubgroup_sizeworkgroup_idworkgroup_size.y) * 1u)), ~ (_GLF_IDENTITY(~ ((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged4_0_1_11_1_1_13_2_1_12_3_1_14subgroup_idsubgroup_sizeworkgroup_idworkgroup_size, (GLF_merged4_0_1_11_1_1_13_2_1_12_3_1_14subgroup_idsubgroup_sizeworkgroup_idworkgroup_size) | (GLF_merged4_0_1_11_1_1_13_2_1_12_3_1_14subgroup_idsubgroup_sizeworkgroup_idworkgroup_size)).y, ~ (~ (GLF_merged4_0_1_11_1_1_13_2_1_12_3_1_14subgroup_idsubgroup_sizeworkgroup_idworkgroup_size.y))), (GLF_merged4_0_1_11_1_1_13_2_1_12_3_1_14subgroup_idsubgroup_sizeworkgroup_idworkgroup_size.y) * 1u))), (~ ((_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged4_0_1_11_1_1_13_2_1_12_3_1_14subgroup_idsubgroup_sizeworkgroup_idworkgroup_size.y, ~ (~ (GLF_merged4_0_1_11_1_1_13_2_1_12_3_1_14subgroup_idsubgroup_sizeworkgroup_idworkgroup_size.y))), (GLF_merged4_0_1_11_1_1_13_2_1_12_3_1_14subgroup_idsubgroup_sizeworkgroup_idworkgroup_size.y) * 1u)))) << 0u)))), _GLF_IDENTITY(_GLF_IDENTITY(GLF_merged4_0_1_11_1_1_13_2_1_12_3_1_14subgroup_idsubgroup_sizeworkgroup_idworkgroup_size.y, (GLF_merged4_0_1_11_1_1_13_2_1_12_3_1_14subgroup_idsubgroup_sizeworkgroup_idworkgroup_size.y) * 1u), _GLF_IDENTITY(uint(uvec4(_GLF_IDENTITY(GLF_merged4_0_1_11_1_1_13_2_1_12_3_1_14subgroup_idsubgroup_sizeworkgroup_idworkgroup_size.y, (GLF_merged4_0_1_11_1_1_13_2_1_12_3_1_14subgroup_idsubgroup_sizeworkgroup_idworkgroup_size.y) * 1u), 1u, 0u, 1u)), (uint(uvec4(_GLF_IDENTITY(GLF_merged4_0_1_11_1_1_13_2_1_12_3_1_14subgroup_idsubgroup_sizeworkgroup_idworkgroup_size.y, (GLF_merged4_0_1_11_1_1_13_2_1_12_3_1_14subgroup_idsubgroup_sizeworkgroup_idworkgroup_size.y) * 1u), 1u, 0u, 1u))) | (uint(uvec4(_GLF_IDENTITY(GLF_merged4_0_1_11_1_1_13_2_1_12_3_1_14subgroup_idsubgroup_sizeworkgroup_idworkgroup_size.y, (GLF_merged4_0_1_11_1_1_13_2_1_12_3_1_14subgroup_idsubgroup_sizeworkgroup_idworkgroup_size.y) * 1u), 1u, 0u, 1u)))))))) ^ 0u, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged4_0_1_11_1_1_13_2_1_12_3_1_14subgroup_idsubgroup_sizeworkgroup_idworkgroup_size.y, (GLF_merged4_0_1_11_1_1_13_2_1_12_3_1_14subgroup_idsubgroup_sizeworkgroup_idworkgroup_size.y) * 1u), (_GLF_IDENTITY(GLF_merged4_0_1_11_1_1_13_2_1_12_3_1_14subgroup_idsubgroup_sizeworkgroup_idworkgroup_size.y, (GLF_merged4_0_1_11_1_1_13_2_1_12_3_1_14subgroup_idsubgroup_sizeworkgroup_idworkgroup_size.y) * 1u)) | (_GLF_IDENTITY(GLF_merged4_0_1_11_1_1_13_2_1_12_3_1_14subgroup_idsubgroup_sizeworkgroup_idworkgroup_size.y, (GLF_merged4_0_1_11_1_1_13_2_1_12_3_1_14subgroup_idsubgroup_sizeworkgroup_idworkgroup_size.y) * 1u))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged4_0_1_11_1_1_13_2_1_12_3_1_14subgroup_idsubgroup_sizeworkgroup_idworkgroup_size.y, (GLF_merged4_0_1_11_1_1_13_2_1_12_3_1_14subgroup_idsubgroup_sizeworkgroup_idworkgroup_size.y) * 1u), (_GLF_IDENTITY(GLF_merged4_0_1_11_1_1_13_2_1_12_3_1_14subgroup_idsubgroup_sizeworkgroup_idworkgroup_size.y, (GLF_merged4_0_1_11_1_1_13_2_1_12_3_1_14subgroup_idsubgroup_sizeworkgroup_idworkgroup_size.y) * 1u)) | (_GLF_IDENTITY(GLF_merged4_0_1_11_1_1_13_2_1_12_3_1_14subgroup_idsubgroup_sizeworkgroup_idworkgroup_size.y, (GLF_merged4_0_1_11_1_1_13_2_1_12_3_1_14subgroup_idsubgroup_sizeworkgroup_idworkgroup_size.y) * 1u))), min(_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged4_0_1_11_1_1_13_2_1_12_3_1_14subgroup_idsubgroup_sizeworkgroup_idworkgroup_size.y, (GLF_merged4_0_1_11_1_1_13_2_1_12_3_1_14subgroup_idsubgroup_sizeworkgroup_idworkgroup_size.y) * 1u), (_GLF_IDENTITY(GLF_merged4_0_1_11_1_1_13_2_1_12_3_1_14subgroup_idsubgroup_sizeworkgroup_idworkgroup_size.y, (GLF_merged4_0_1_11_1_1_13_2_1_12_3_1_14subgroup_idsubgroup_sizeworkgroup_idworkgroup_size.y) * 1u)) | (_GLF_IDENTITY(GLF_merged4_0_1_11_1_1_13_2_1_12_3_1_14subgroup_idsubgroup_sizeworkgroup_idworkgroup_size.y, (GLF_merged4_0_1_11_1_1_13_2_1_12_3_1_14subgroup_idsubgroup_sizeworkgroup_idworkgroup_size.y) * 1u))), _GLF_IDENTITY(_GLF_IDENTITY(GLF_merged4_0_1_11_1_1_13_2_1_12_3_1_14subgroup_idsubgroup_sizeworkgroup_idworkgroup_size.y, (GLF_merged4_0_1_11_1_1_13_2_1_12_3_1_14subgroup_idsubgroup_sizeworkgroup_idworkgroup_size.y) * 1u), (_GLF_IDENTITY(GLF_merged4_0_1_11_1_1_13_2_1_12_3_1_14subgroup_idsubgroup_sizeworkgroup_idworkgroup_size.y, (GLF_merged4_0_1_11_1_1_13_2_1_12_3_1_14subgroup_idsubgroup_sizeworkgroup_idworkgroup_size.y) * 1u)) | (_GLF_IDENTITY(GLF_merged4_0_1_11_1_1_13_2_1_12_3_1_14subgroup_idsubgroup_sizeworkgroup_idworkgroup_size.y, (GLF_merged4_0_1_11_1_1_13_2_1_12_3_1_14subgroup_idsubgroup_sizeworkgroup_idworkgroup_size.y) * 1u)))))) | (_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged4_0_1_11_1_1_13_2_1_12_3_1_14subgroup_idsubgroup_sizeworkgroup_idworkgroup_size.y, (GLF_merged4_0_1_11_1_1_13_2_1_12_3_1_14subgroup_idsubgroup_sizeworkgroup_idworkgroup_size.y) * 1u), (_GLF_IDENTITY(GLF_merged4_0_1_11_1_1_13_2_1_12_3_1_14subgroup_idsubgroup_sizeworkgroup_idworkgroup_size.y, (GLF_merged4_0_1_11_1_1_13_2_1_12_3_1_14subgroup_idsubgroup_sizeworkgroup_idworkgroup_size.y) * 1u)) | (_GLF_IDENTITY(GLF_merged4_0_1_11_1_1_13_2_1_12_3_1_14subgroup_idsubgroup_sizeworkgroup_idworkgroup_size.y, (GLF_merged4_0_1_11_1_1_13_2_1_12_3_1_14subgroup_idsubgroup_sizeworkgroup_idworkgroup_size.y) * 1u))))), max(_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged4_0_1_11_1_1_13_2_1_12_3_1_14subgroup_idsubgroup_sizeworkgroup_idworkgroup_size.y, (GLF_merged4_0_1_11_1_1_13_2_1_12_3_1_14subgroup_idsubgroup_sizeworkgroup_idworkgroup_size.y) * 1u), (_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged4_0_1_11_1_1_13_2_1_12_3_1_14subgroup_idsubgroup_sizeworkgroup_idworkgroup_size, (GLF_merged4_0_1_11_1_1_13_2_1_12_3_1_14subgroup_idsubgroup_sizeworkgroup_idworkgroup_size) | uvec4(0u, 0u, 0u, 0u)).y, (GLF_merged4_0_1_11_1_1_13_2_1_12_3_1_14subgroup_idsubgroup_sizeworkgroup_idworkgroup_size.y) * _GLF_IDENTITY(1u, (1u) * 1u))) | _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged4_0_1_11_1_1_13_2_1_12_3_1_14subgroup_idsubgroup_sizeworkgroup_idworkgroup_size.y, ~ (~ (GLF_merged4_0_1_11_1_1_13_2_1_12_3_1_14subgroup_idsubgroup_sizeworkgroup_idworkgroup_size.y))), (GLF_merged4_0_1_11_1_1_13_2_1_12_3_1_14subgroup_idsubgroup_sizeworkgroup_idworkgroup_size.y) * 1u)), ~ (_GLF_IDENTITY(~ ((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged4_0_1_11_1_1_13_2_1_12_3_1_14subgroup_idsubgroup_sizeworkgroup_idworkgroup_size, (GLF_merged4_0_1_11_1_1_13_2_1_12_3_1_14subgroup_idsubgroup_sizeworkgroup_idworkgroup_size) | (GLF_merged4_0_1_11_1_1_13_2_1_12_3_1_14subgroup_idsubgroup_sizeworkgroup_idworkgroup_size)).y, ~ (~ (GLF_merged4_0_1_11_1_1_13_2_1_12_3_1_14subgroup_idsubgroup_sizeworkgroup_idworkgroup_size.y))), (GLF_merged4_0_1_11_1_1_13_2_1_12_3_1_14subgroup_idsubgroup_sizeworkgroup_idworkgroup_size.y) * 1u))), (~ ((_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged4_0_1_11_1_1_13_2_1_12_3_1_14subgroup_idsubgroup_sizeworkgroup_idworkgroup_size.y, ~ (~ (GLF_merged4_0_1_11_1_1_13_2_1_12_3_1_14subgroup_idsubgroup_sizeworkgroup_idworkgroup_size.y))), (GLF_merged4_0_1_11_1_1_13_2_1_12_3_1_14subgroup_idsubgroup_sizeworkgroup_idworkgroup_size.y) * 1u)))) << 0u)))), _GLF_IDENTITY(_GLF_IDENTITY(GLF_merged4_0_1_11_1_1_13_2_1_12_3_1_14subgroup_idsubgroup_sizeworkgroup_idworkgroup_size.y, (GLF_merged4_0_1_11_1_1_13_2_1_12_3_1_14subgroup_idsubgroup_sizeworkgroup_idworkgroup_size.y) * 1u), _GLF_IDENTITY(uint(uvec4(_GLF_IDENTITY(GLF_merged4_0_1_11_1_1_13_2_1_12_3_1_14subgroup_idsubgroup_sizeworkgroup_idworkgroup_size.y, (GLF_merged4_0_1_11_1_1_13_2_1_12_3_1_14subgroup_idsubgroup_sizeworkgroup_idworkgroup_size.y) * 1u), 1u, 0u, 1u)), (uint(uvec4(_GLF_IDENTITY(GLF_merged4_0_1_11_1_1_13_2_1_12_3_1_14subgroup_idsubgroup_sizeworkgroup_idworkgroup_size.y, (GLF_merged4_0_1_11_1_1_13_2_1_12_3_1_14subgroup_idsubgroup_sizeworkgroup_idworkgroup_size.y) * 1u), 1u, 0u, 1u))) | (uint(uvec4(_GLF_IDENTITY(GLF_merged4_0_1_11_1_1_13_2_1_12_3_1_14subgroup_idsubgroup_sizeworkgroup_idworkgroup_size.y, (GLF_merged4_0_1_11_1_1_13_2_1_12_3_1_14subgroup_idsubgroup_sizeworkgroup_idworkgroup_size.y) * 1u), 1u, 0u, 1u)))))))) ^ 0u, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged4_0_1_11_1_1_13_2_1_12_3_1_14subgroup_idsubgroup_sizeworkgroup_idworkgroup_size.y, (GLF_merged4_0_1_11_1_1_13_2_1_12_3_1_14subgroup_idsubgroup_sizeworkgroup_idworkgroup_size.y) * 1u), (_GLF_IDENTITY(GLF_merged4_0_1_11_1_1_13_2_1_12_3_1_14subgroup_idsubgroup_sizeworkgroup_idworkgroup_size.y, (GLF_merged4_0_1_11_1_1_13_2_1_12_3_1_14subgroup_idsubgroup_sizeworkgroup_idworkgroup_size.y) * 1u)) | (_GLF_IDENTITY(GLF_merged4_0_1_11_1_1_13_2_1_12_3_1_14subgroup_idsubgroup_sizeworkgroup_idworkgroup_size.y, (GLF_merged4_0_1_11_1_1_13_2_1_12_3_1_14subgroup_idsubgroup_sizeworkgroup_idworkgroup_size.y) * 1u))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged4_0_1_11_1_1_13_2_1_12_3_1_14subgroup_idsubgroup_sizeworkgroup_idworkgroup_size.y, (GLF_merged4_0_1_11_1_1_13_2_1_12_3_1_14subgroup_idsubgroup_sizeworkgroup_idworkgroup_size.y) * 1u), (_GLF_IDENTITY(GLF_merged4_0_1_11_1_1_13_2_1_12_3_1_14subgroup_idsubgroup_sizeworkgroup_idworkgroup_size.y, (GLF_merged4_0_1_11_1_1_13_2_1_12_3_1_14subgroup_idsubgroup_sizeworkgroup_idworkgroup_size.y) * 1u)) | (_GLF_IDENTITY(GLF_merged4_0_1_11_1_1_13_2_1_12_3_1_14subgroup_idsubgroup_sizeworkgroup_idworkgroup_size.y, (GLF_merged4_0_1_11_1_1_13_2_1_12_3_1_14subgroup_idsubgroup_sizeworkgroup_idworkgroup_size.y) * 1u))), min(_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged4_0_1_11_1_1_13_2_1_12_3_1_14subgroup_idsubgroup_sizeworkgroup_idworkgroup_size.y, (GLF_merged4_0_1_11_1_1_13_2_1_12_3_1_14subgroup_idsubgroup_sizeworkgroup_idworkgroup_size.y) * 1u), (_GLF_IDENTITY(GLF_merged4_0_1_11_1_1_13_2_1_12_3_1_14subgroup_idsubgroup_sizeworkgroup_idworkgroup_size.y, (GLF_merged4_0_1_11_1_1_13_2_1_12_3_1_14subgroup_idsubgroup_sizeworkgroup_idworkgroup_size.y) * 1u)) | (_GLF_IDENTITY(GLF_merged4_0_1_11_1_1_13_2_1_12_3_1_14subgroup_idsubgroup_sizeworkgroup_idworkgroup_size.y, (GLF_merged4_0_1_11_1_1_13_2_1_12_3_1_14subgroup_idsubgroup_sizeworkgroup_idworkgroup_size.y) * 1u))), _GLF_IDENTITY(_GLF_IDENTITY(GLF_merged4_0_1_11_1_1_13_2_1_12_3_1_14subgroup_idsubgroup_sizeworkgroup_idworkgroup_size.y, (GLF_merged4_0_1_11_1_1_13_2_1_12_3_1_14subgroup_idsubgroup_sizeworkgroup_idworkgroup_size.y) * 1u), (_GLF_IDENTITY(GLF_merged4_0_1_11_1_1_13_2_1_12_3_1_14subgroup_idsubgroup_sizeworkgroup_idworkgroup_size.y, (GLF_merged4_0_1_11_1_1_13_2_1_12_3_1_14subgroup_idsubgroup_sizeworkgroup_idworkgroup_size.y) * 1u)) | (_GLF_IDENTITY(GLF_merged4_0_1_11_1_1_13_2_1_12_3_1_14subgroup_idsubgroup_sizeworkgroup_idworkgroup_size.y, (GLF_merged4_0_1_11_1_1_13_2_1_12_3_1_14subgroup_idsubgroup_sizeworkgroup_idworkgroup_size.y) * 1u)))))) | (_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged4_0_1_11_1_1_13_2_1_12_3_1_14subgroup_idsubgroup_sizeworkgroup_idworkgroup_size.y, (GLF_merged4_0_1_11_1_1_13_2_1_12_3_1_14subgroup_idsubgroup_sizeworkgroup_idworkgroup_size.y) * 1u), (_GLF_IDENTITY(GLF_merged4_0_1_11_1_1_13_2_1_12_3_1_14subgroup_idsubgroup_sizeworkgroup_idworkgroup_size.y, (GLF_merged4_0_1_11_1_1_13_2_1_12_3_1_14subgroup_idsubgroup_sizeworkgroup_idworkgroup_size.y) * 1u)) | (_GLF_IDENTITY(GLF_merged4_0_1_11_1_1_13_2_1_12_3_1_14subgroup_idsubgroup_sizeworkgroup_idworkgroup_size.y, (GLF_merged4_0_1_11_1_1_13_2_1_12_3_1_14subgroup_idsubgroup_sizeworkgroup_idworkgroup_size.y) * 1u))))), max(_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged4_0_1_11_1_1_13_2_1_12_3_1_14subgroup_idsubgroup_sizeworkgroup_idworkgroup_size.y, (GLF_merged4_0_1_11_1_1_13_2_1_12_3_1_14subgroup_idsubgroup_sizeworkgroup_idworkgroup_size.y) * 1u), (_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged4_0_1_11_1_1_13_2_1_12_3_1_14subgroup_idsubgroup_sizeworkgroup_idworkgroup_size, (GLF_merged4_0_1_11_1_1_13_2_1_12_3_1_14subgroup_idsubgroup_sizeworkgroup_idworkgroup_size) | uvec4(0u, 0u, 0u, 0u)).y, (GLF_merged4_0_1_11_1_1_13_2_1_12_3_1_14subgroup_idsubgroup_sizeworkgroup_idworkgroup_size.y) * _GLF_IDENTITY(1u, (1u) * 1u))) | _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged4_0_1_11_1_1_13_2_1_12_3_1_14subgroup_idsubgroup_sizeworkgroup_idworkgroup_size.y, ~ (~ (GLF_merged4_0_1_11_1_1_13_2_1_12_3_1_14subgroup_idsubgroup_sizeworkgroup_idworkgroup_size.y))), (GLF_merged4_0_1_11_1_1_13_2_1_12_3_1_14subgroup_idsubgroup_sizeworkgroup_idworkgroup_size.y) * 1u)), ~ (_GLF_IDENTITY(~ ((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged4_0_1_11_1_1_13_2_1_12_3_1_14subgroup_idsubgroup_sizeworkgroup_idworkgroup_size, (GLF_merged4_0_1_11_1_1_13_2_1_12_3_1_14subgroup_idsubgroup_sizeworkgroup_idworkgroup_size) | (GLF_merged4_0_1_11_1_1_13_2_1_12_3_1_14subgroup_idsubgroup_sizeworkgroup_idworkgroup_size)).y, ~ (~ (GLF_merged4_0_1_11_1_1_13_2_1_12_3_1_14subgroup_idsubgroup_sizeworkgroup_idworkgroup_size.y))), (GLF_merged4_0_1_11_1_1_13_2_1_12_3_1_14subgroup_idsubgroup_sizeworkgroup_idworkgroup_size.y) * 1u))), (~ ((_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged4_0_1_11_1_1_13_2_1_12_3_1_14subgroup_idsubgroup_sizeworkgroup_idworkgroup_size.y, ~ (~ (GLF_merged4_0_1_11_1_1_13_2_1_12_3_1_14subgroup_idsubgroup_sizeworkgroup_idworkgroup_size.y))), (GLF_merged4_0_1_11_1_1_13_2_1_12_3_1_14subgroup_idsubgroup_sizeworkgroup_idworkgroup_size.y) * 1u)))) << 0u)))), _GLF_IDENTITY(_GLF_IDENTITY(GLF_merged4_0_1_11_1_1_13_2_1_12_3_1_14subgroup_idsubgroup_sizeworkgroup_idworkgroup_size.y, (GLF_merged4_0_1_11_1_1_13_2_1_12_3_1_14subgroup_idsubgroup_sizeworkgroup_idworkgroup_size.y) * 1u), _GLF_IDENTITY(uint(uvec4(_GLF_IDENTITY(GLF_merged4_0_1_11_1_1_13_2_1_12_3_1_14subgroup_idsubgroup_sizeworkgroup_idworkgroup_size.y, (GLF_merged4_0_1_11_1_1_13_2_1_12_3_1_14subgroup_idsubgroup_sizeworkgroup_idworkgroup_size.y) * 1u), 1u, 0u, 1u)), (uint(uvec4(_GLF_IDENTITY(GLF_merged4_0_1_11_1_1_13_2_1_12_3_1_14subgroup_idsubgroup_sizeworkgroup_idworkgroup_size.y, (GLF_merged4_0_1_11_1_1_13_2_1_12_3_1_14subgroup_idsubgroup_sizeworkgroup_idworkgroup_size.y) * 1u), 1u, 0u, 1u))) | (uint(uvec4(_GLF_IDENTITY(GLF_merged4_0_1_11_1_1_13_2_1_12_3_1_14subgroup_idsubgroup_sizeworkgroup_idworkgroup_size.y, (GLF_merged4_0_1_11_1_1_13_2_1_12_3_1_14subgroup_idsubgroup_sizeworkgroup_idworkgroup_size.y) * 1u), 1u, 0u, 1u)))))))) ^ 0u))), _GLF_IDENTITY((_GLF_struct_replacement_5.workgroup_base + GLF_merged4_0_1_11_1_1_13_2_1_12_3_1_14subgroup_idsubgroup_sizeworkgroup_idworkgroup_size.x * GLF_merged4_0_1_11_1_1_13_2_1_12_3_1_14subgroup_idsubgroup_sizeworkgroup_idworkgroup_size.y), ((_GLF_struct_replacement_5.workgroup_base + GLF_merged4_0_1_11_1_1_13_2_1_12_3_1_14subgroup_idsubgroup_sizeworkgroup_idworkgroup_size.x * GLF_merged4_0_1_11_1_1_13_2_1_12_3_1_14subgroup_idsubgroup_sizeworkgroup_idworkgroup_size.y)) / 1u) | (_GLF_struct_replacement_5.workgroup_base + GLF_merged4_0_1_11_1_1_13_2_1_12_3_1_14subgroup_idsubgroup_sizeworkgroup_idworkgroup_size.x * GLF_merged4_0_1_11_1_1_13_2_1_12_3_1_14subgroup_idsubgroup_sizeworkgroup_idworkgroup_size.y)) + subgroup_local_id;
 if(_GLF_DEAD(false))
  {
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     for(int _injected_loop_counter = ((1 << _GLF_IDENTITY(int(2), int(2))) >> _GLF_IDENTITY(int(2), int(2))); _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
      {
       do
        {
         if(_GLF_WRAPPED_IF_FALSE(false))
          {
          }
         else
          {
           if(_GLF_DEAD(false))
            {
             for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
              {
               do
                {
                 return;
                }
               while(_GLF_WRAPPED_LOOP(false));
              }
            }
           do
            {
             for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
              {
               if(_GLF_WRAPPED_IF_FALSE(false))
                {
                }
               else
                {
                 return;
                }
              }
             if(_GLF_DEAD(false))
              return;
            }
           while(_GLF_WRAPPED_LOOP(false));
          }
        }
       while(_GLF_WRAPPED_LOOP(false));
      }
    }
   else
    {
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
      }
     else
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (! _GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).y))), bool(bvec3((_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).y))), false, false)))))))))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
      }
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
  }
 uint next_virtual_gid = _GLF_struct_replacement_5.workgroup_base + _GLF_IDENTITY(GLF_merged4_0_1_11_1_1_13_2_1_12_3_1_14subgroup_idsubgroup_sizeworkgroup_idworkgroup_size.x, _GLF_IDENTITY(uint(uvec2(GLF_merged4_0_1_11_1_1_13_2_1_12_3_1_14subgroup_idsubgroup_sizeworkgroup_idworkgroup_size.x, 0u)), (uint(uvec2(GLF_merged4_0_1_11_1_1_13_2_1_12_3_1_14subgroup_idsubgroup_sizeworkgroup_idworkgroup_size.x, 0u))) | _GLF_IDENTITY(0u, uint(uvec4(0u, 1u, 0u, 0u))))) * GLF_merged4_0_1_11_1_1_13_2_1_12_3_1_14subgroup_idsubgroup_sizeworkgroup_idworkgroup_size.y + ((subgroup_local_id + _GLF_IDENTITY(_GLF_IDENTITY(1, max(1, _GLF_IDENTITY(1, (_GLF_IDENTITY(1, min(1, 1))) + 0))), (_GLF_IDENTITY(1, _GLF_IDENTITY(max(1, _GLF_IDENTITY(1, (_GLF_IDENTITY(1, min(1, 1))) + 0)), (max(1, _GLF_IDENTITY(1, (_GLF_IDENTITY(1, min(1, 1))) + 0))) >> 0))) / 1)) % GLF_merged4_0_1_11_1_1_13_2_1_12_3_1_14subgroup_idsubgroup_sizeworkgroup_idworkgroup_size.y);
 for(int _injected_loop_counter = (0 >> _GLF_IDENTITY(int(2), int(2))); _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
  {
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
    }
   else
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
      {
       if(_GLF_WRAPPED_IF_TRUE(true))
        {
         do
          {
           return;
          }
         while(_GLF_WRAPPED_LOOP(false));
        }
       else
        {
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_WRAPPED_IF_TRUE(true))
          {
           return;
          }
         else
          {
          }
        }
      }
    }
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   for(int _injected_loop_counter = int(_GLF_ZERO(0.0, injectionSwitch.x)); _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
    {
     return;
     if(_GLF_DEAD(false))
      return;
    }
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     do
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        continue;
       return;
      }
     while(_GLF_WRAPPED_LOOP(false));
    }
   for(int _injected_loop_counter = (_GLF_IDENTITY(_GLF_IDENTITY(0, int(int(0))) >> _GLF_IDENTITY(int(1), int(1)), 0 + (0 >> _GLF_IDENTITY(int(_GLF_IDENTITY(_GLF_IDENTITY(1, (0 << _GLF_IDENTITY(int(1), _GLF_IDENTITY(int(1), int(ivec4(int(1), 0, 0, 1))))) | (1)), (true ? _GLF_IDENTITY(1, (0 << _GLF_IDENTITY(int(1), _GLF_IDENTITY(int(1), int(ivec4(int(1), 0, 0, 1))))) | (1)) : _GLF_FUZZED(23145)))), int(_GLF_IDENTITY(1, (1) | (1))))))); _GLF_WRAPPED_LOOP(_injected_loop_counter < _GLF_IDENTITY(_GLF_IDENTITY(1, (1) << (0 >> _GLF_IDENTITY(int(6), int(_GLF_IDENTITY(6, clamp(6, 6, 6)))))), 0 ^ (1))); _injected_loop_counter ++)
    {
     if(_GLF_DEAD(false))
      break;
     for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != _GLF_IDENTITY((int(_GLF_ZERO(0.0, injectionSwitch.x)) | 0), (_GLF_IDENTITY((int(_GLF_ZERO(0.0, injectionSwitch.x)) | 0), ((int(_GLF_ZERO(0.0, injectionSwitch.x)) | 0)) | ((int(_GLF_ZERO(0.0, injectionSwitch.x)) | 0)))) * (0 ^ 1))); _injected_loop_counter --)
      {
       if(_GLF_WRAPPED_IF_TRUE(true))
        {
         return;
        }
       else
        {
        }
      }
    }
   if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
    }
   else
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
      return;
     do
      {
       if(_GLF_DEAD(false))
        return;
      }
     while(_GLF_WRAPPED_LOOP(false));
    }
   if(_GLF_IDENTITY(_GLF_DEAD(false), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), false), _GLF_IDENTITY(bvec2(bvec3(bvec2(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (false))))))), false), false)), bvec2(bvec2(_GLF_IDENTITY(bvec2(bvec3(bvec2(_GLF_DEAD(false), false), false)), bvec2(bvec4(bvec2(bvec3(bvec2(_GLF_DEAD(false), false), false)), true, true))))))))))
    {
     do
      {
       return;
      }
     while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
    }
  }
 do
  {
   atomicStore(buf[virtual_gid], uint(1), 4, 64, 4);
  }
 while(_GLF_WRAPPED_LOOP(false));
 for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > _GLF_IDENTITY(0, (true ? 0 : _GLF_FUZZED(22104)))); _injected_loop_counter --)
  {
   for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter != ((int(_GLF_ONE(1.0, injectionSwitch.y)) << _GLF_IDENTITY(_GLF_IDENTITY(int(4), clamp(int(4), int(4), int(4))), int(4))) >> _GLF_IDENTITY(int(4), int(4))), false || (_injected_loop_counter != ((int(_GLF_ONE(1.0, injectionSwitch.y)) << _GLF_IDENTITY(_GLF_IDENTITY(int(4), clamp(int(4), int(4), int(4))), int(4))) >> _GLF_IDENTITY(int(4), int(4)))))); _injected_loop_counter ++)
    {
     if(_GLF_WRAPPED_IF_TRUE(true))
      {
       if(_GLF_IDENTITY(subgroup_local_id + 1, ~ _GLF_IDENTITY((~ (subgroup_local_id + 1)), clamp((~ (subgroup_local_id + 1)), (~ (subgroup_local_id + 1)), _GLF_IDENTITY((~ (subgroup_local_id + 1)), ((~ (subgroup_local_id + 1))) | ((~ (subgroup_local_id + 1))))))) < _GLF_IDENTITY(_GLF_IDENTITY(GLF_merged4_0_1_11_1_1_13_2_1_12_3_1_14subgroup_idsubgroup_sizeworkgroup_idworkgroup_size.y, clamp(GLF_merged4_0_1_11_1_1_13_2_1_12_3_1_14subgroup_idsubgroup_sizeworkgroup_idworkgroup_size.y, _GLF_IDENTITY(GLF_merged4_0_1_11_1_1_13_2_1_12_3_1_14subgroup_idsubgroup_sizeworkgroup_idworkgroup_size.y, (_GLF_IDENTITY(GLF_merged4_0_1_11_1_1_13_2_1_12_3_1_14subgroup_idsubgroup_sizeworkgroup_idworkgroup_size.y, min(GLF_merged4_0_1_11_1_1_13_2_1_12_3_1_14subgroup_idsubgroup_sizeworkgroup_idworkgroup_size.y, GLF_merged4_0_1_11_1_1_13_2_1_12_3_1_14subgroup_idsubgroup_sizeworkgroup_idworkgroup_size.y))) | 0u), GLF_merged4_0_1_11_1_1_13_2_1_12_3_1_14subgroup_idsubgroup_sizeworkgroup_idworkgroup_size.y)), uint(_GLF_IDENTITY(uvec4(_GLF_IDENTITY(GLF_merged4_0_1_11_1_1_13_2_1_12_3_1_14subgroup_idsubgroup_sizeworkgroup_idworkgroup_size.y, clamp(GLF_merged4_0_1_11_1_1_13_2_1_12_3_1_14subgroup_idsubgroup_sizeworkgroup_idworkgroup_size.y, _GLF_IDENTITY(GLF_merged4_0_1_11_1_1_13_2_1_12_3_1_14subgroup_idsubgroup_sizeworkgroup_idworkgroup_size.y, (_GLF_IDENTITY(GLF_merged4_0_1_11_1_1_13_2_1_12_3_1_14subgroup_idsubgroup_sizeworkgroup_idworkgroup_size.y, min(GLF_merged4_0_1_11_1_1_13_2_1_12_3_1_14subgroup_idsubgroup_sizeworkgroup_idworkgroup_size.y, GLF_merged4_0_1_11_1_1_13_2_1_12_3_1_14subgroup_idsubgroup_sizeworkgroup_idworkgroup_size.y))) | 0u), GLF_merged4_0_1_11_1_1_13_2_1_12_3_1_14subgroup_idsubgroup_sizeworkgroup_idworkgroup_size.y)), 1u, 1u, 1u), max(uvec4(_GLF_IDENTITY(GLF_merged4_0_1_11_1_1_13_2_1_12_3_1_14subgroup_idsubgroup_sizeworkgroup_idworkgroup_size.y, clamp(GLF_merged4_0_1_11_1_1_13_2_1_12_3_1_14subgroup_idsubgroup_sizeworkgroup_idworkgroup_size.y, _GLF_IDENTITY(GLF_merged4_0_1_11_1_1_13_2_1_12_3_1_14subgroup_idsubgroup_sizeworkgroup_idworkgroup_size.y, (_GLF_IDENTITY(GLF_merged4_0_1_11_1_1_13_2_1_12_3_1_14subgroup_idsubgroup_sizeworkgroup_idworkgroup_size.y, min(GLF_merged4_0_1_11_1_1_13_2_1_12_3_1_14subgroup_idsubgroup_sizeworkgroup_idworkgroup_size.y, GLF_merged4_0_1_11_1_1_13_2_1_12_3_1_14subgroup_idsubgroup_sizeworkgroup_idworkgroup_size.y))) | 0u), GLF_merged4_0_1_11_1_1_13_2_1_12_3_1_14subgroup_idsubgroup_sizeworkgroup_idworkgroup_size.y)), 1u, 1u, 1u), uvec4(_GLF_IDENTITY(GLF_merged4_0_1_11_1_1_13_2_1_12_3_1_14subgroup_idsubgroup_sizeworkgroup_idworkgroup_size.y, clamp(GLF_merged4_0_1_11_1_1_13_2_1_12_3_1_14subgroup_idsubgroup_sizeworkgroup_idworkgroup_size.y, _GLF_IDENTITY(GLF_merged4_0_1_11_1_1_13_2_1_12_3_1_14subgroup_idsubgroup_sizeworkgroup_idworkgroup_size.y, (_GLF_IDENTITY(GLF_merged4_0_1_11_1_1_13_2_1_12_3_1_14subgroup_idsubgroup_sizeworkgroup_idworkgroup_size.y, min(GLF_merged4_0_1_11_1_1_13_2_1_12_3_1_14subgroup_idsubgroup_sizeworkgroup_idworkgroup_size.y, GLF_merged4_0_1_11_1_1_13_2_1_12_3_1_14subgroup_idsubgroup_sizeworkgroup_idworkgroup_size.y))) | 0u), GLF_merged4_0_1_11_1_1_13_2_1_12_3_1_14subgroup_idsubgroup_sizeworkgroup_idworkgroup_size.y)), 1u, 1u, 1u))))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y))))))
          {
           if(_GLF_WRAPPED_IF_TRUE(true))
            {
             return;
            }
           else
            {
            }
          }
         for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter, ~ (~ (_GLF_IDENTITY(_injected_loop_counter, (_injected_loop_counter) << _GLF_IDENTITY(0, max(0, 0)))))) > int(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)).x))); _injected_loop_counter --)
          {
           if(_GLF_DEAD(false))
            return;
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            continue;
           if(_GLF_WRAPPED_IF_TRUE(true))
            {
             atomicStore(buf[next_virtual_gid], uint(2), 4, _GLF_IDENTITY(64, int(_GLF_IDENTITY(int(64), (int(64)) | (int(64))))), 4);
            }
           else
            {
            }
          }
         if(_GLF_DEAD(false))
          {
           if(_GLF_WRAPPED_IF_FALSE(false))
            {
            }
           else
            {
             return;
             if(_GLF_DEAD(false))
              return;
            }
          }
         if(_GLF_WRAPPED_IF_TRUE(true))
          {
           if(_GLF_DEAD(false))
            {
             for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _GLF_IDENTITY(_injected_loop_counter --, (_injected_loop_counter --) >> 0))
              {
               return;
              }
            }
           if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(vec4(-580.708, 807.676, 2.4, 827.276).s)), float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x, (injectionSwitch.x) - 0.0)), bool(true))) > injectionSwitch.y))))
            {
             do
              {
               if(_GLF_DEAD(false))
                return;
              }
             while(_GLF_WRAPPED_LOOP(false));
             return;
             if(_GLF_DEAD(false))
              {
               if(_GLF_WRAPPED_IF_FALSE(false))
                {
                }
               else
                {
                 return;
                }
              }
            }
           for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > (0 ^ 0)); _injected_loop_counter --)
            {
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              {
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                {
                 if(_GLF_DEAD(false))
                  {
                   for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
                    {
                     return;
                    }
                  }
                 if(_GLF_DEAD(false))
                  continue;
                 continue;
                }
               return;
              }
            }
           for(int _injected_loop_counter = int(_GLF_ONE(1.0, injectionSwitch.y)); _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
            {
             if(_GLF_WRAPPED_IF_FALSE(false))
              {
              }
             else
              {
               if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
                {
                 subgroupAll(false);
                }
               else
                {
                 if(_GLF_DEAD(false))
                  {
                   do
                    {
                     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                      return;
                    }
                   while(_GLF_WRAPPED_LOOP(false));
                   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                    {
                     if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
                      {
                       return;
                      }
                     else
                      {
                      }
                    }
                   return;
                  }
                }
              }
            }
           do
            {
             if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), _GLF_IDENTITY(_GLF_IDENTITY(bool(bool(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), bool(_GLF_IDENTITY(bool(bool(bool(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), bool(bvec4(bool(_GLF_IDENTITY(bool(bool(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, vec2(vec4(injectionSwitch, 0.0, 0.0))) : _GLF_FUZZED(vec2(7.1, -6580.3184)))).x > injectionSwitch.y))))), bool(bvec4(bool(bool(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, vec2(vec4(injectionSwitch, 0.0, 0.0))) : _GLF_FUZZED(vec2(7.1, -6580.3184)))).x > injectionSwitch.y))))), true, true, true)))), true, false, true))))), bool(bvec4(_GLF_IDENTITY(bool(bool(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))), bool(_GLF_IDENTITY(bool(bool(bool(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).x > injectionSwitch.y)))))), bool(bvec4(bool(bool(bool(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0)) / 1.0) > injectionSwitch.y)))))), true, false, true))))), true, true, false)))))
              {
               if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
                break;
               if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(mat3x4(_GLF_IDENTITY(injectionSwitch.y, float(mat2x4(injectionSwitch.y, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0))), abs(1.0), 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0)), (_GLF_IDENTITY(float(mat3x4(_GLF_IDENTITY(injectionSwitch.y, float(mat2x4(injectionSwitch.y, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0))), abs(1.0), 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0)), min(float(mat3x4(_GLF_IDENTITY(injectionSwitch.y, float(mat2x4(injectionSwitch.y, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0))), abs(1.0), 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0)), float(mat3x4(_GLF_IDENTITY(injectionSwitch.y, float(mat2x4(injectionSwitch.y, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0))), abs(1.0), 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0))))) * 1.0)))))) && true))
                return;
               if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                {
                }
               else
                {
                 for(int _injected_loop_counter = (0 >> _GLF_IDENTITY(int(6), _GLF_IDENTITY(_GLF_IDENTITY(int(6), min(int(6), int(6))), (int(_GLF_IDENTITY(6, (false ? _GLF_FUZZED(-49679) : 6)))) >> 0))); _GLF_WRAPPED_LOOP(_injected_loop_counter < (((_GLF_IDENTITY((1 << _GLF_IDENTITY(int(0), int(0))), _GLF_IDENTITY(int(int((1 << _GLF_IDENTITY(int(0), int(0))))), ~ (~ (_GLF_IDENTITY(int(int((_GLF_IDENTITY(1 << _GLF_IDENTITY(int(0), int(0)), (1 << _GLF_IDENTITY(int(0), int(0))) / 1)))), (int(int((1 << _GLF_IDENTITY(int(0), int(0)))))) << 0))))) >> _GLF_IDENTITY(int(0), int(0))) << _GLF_IDENTITY(int(_GLF_IDENTITY(7, ~ (~ (7)))), int(7))) >> _GLF_IDENTITY(int(7), int(7)))); _injected_loop_counter ++)
                  {
                   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
                    break;
                   for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != int(_GLF_ZERO(0.0, injectionSwitch.x))); _injected_loop_counter --)
                    {
                     return;
                    }
                  }
                }
               if(_GLF_WRAPPED_IF_FALSE(false))
                {
                }
               else
                {
                 if(_GLF_DEAD(false))
                  {
                   if(_GLF_DEAD(false))
                    break;
                   for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
                    {
                     return;
                    }
                  }
                }
              }
            }
           while(_GLF_WRAPPED_LOOP(false));
           if(_GLF_DEAD(false))
            break;
           if(_GLF_WRAPPED_IF_FALSE(false))
            {
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              return;
            }
           else
            {
             if(_GLF_DEAD(false))
              continue;
             if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)).x > injectionSwitch.y))))
              {
               if(_GLF_WRAPPED_IF_TRUE(true))
                {
                 return;
                 if(_GLF_DEAD(false))
                  break;
                 for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
                  {
                   if(_GLF_DEAD(false))
                    {
                     if(_GLF_DEAD(false))
                      {
                       if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(74.03))), injectionSwitch.y, injectionSwitch.y)))))))))
                        {
                        }
                       else
                        {
                         if(_GLF_WRAPPED_IF_FALSE(false))
                          {
                          }
                         else
                          {
                           return;
                          }
                         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                          break;
                        }
                      }
                     if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y))))))
                      {
                      }
                     else
                      {
                       return;
                      }
                    }
                  }
                 do
                  {
                   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
                    return;
                  }
                 while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)));
                }
               else
                {
                 if(_GLF_DEAD(false))
                  {
                   do
                    {
                     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! _GLF_IDENTITY((! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (_GLF_IDENTITY((! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ((! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) && true)) || false))))
                      break;
                     return;
                    }
                   while(_GLF_WRAPPED_LOOP(false));
                  }
                 if(_GLF_DEAD(false))
                  {
                   if(_GLF_WRAPPED_IF_FALSE(false))
                    {
                    }
                   else
                    {
                     do
                      {
                       return;
                      }
                     while(_GLF_WRAPPED_LOOP(false));
                     if(_GLF_DEAD(false))
                      continue;
                    }
                  }
                }
              }
            }
          }
         else
          {
          }
        }
       else
        {
         if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
          }
         else
          {
           if(_GLF_DEAD(false))
            return;
          }
         do
          {
           atomicStore(buf[next_virtual_gid], uint(_GLF_IDENTITY(2, _GLF_IDENTITY(max(2, _GLF_IDENTITY(2, min(2, 2))), (false ? _GLF_FUZZED(29817) : max(2, _GLF_IDENTITY(2, min(2, 2))))))), 4, 64, 4);
           if(_GLF_DEAD(false))
            continue;
           if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
            continue;
          }
         while(_GLF_WRAPPED_LOOP(false));
         for(int _injected_loop_counter = int(_GLF_ZERO(0.0, injectionSwitch.x)); _GLF_WRAPPED_LOOP(_injected_loop_counter != ((1 << _GLF_IDENTITY(int(1), int(1))) >> _GLF_IDENTITY(int(1), _GLF_IDENTITY(int(1), ~ (~ (int(1))))))); _injected_loop_counter ++)
          {
           if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, (true) || false)))
            {
             if(_GLF_WRAPPED_IF_FALSE(false))
              {
              }
             else
              {
               do
                {
                 if(_GLF_DEAD(false))
                  return;
                 for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != (-42463 & 0)); _injected_loop_counter --)
                  {
                   subgroupAll(_GLF_IDENTITY(true, (_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec2(true, false)), ! (! (bool(bvec2(true, false))))))) || false));
                  }
                }
               while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y))))));
              }
            }
           else
            {
            }
          }
         for(int _injected_loop_counter = int(_GLF_ZERO(0.0, injectionSwitch.x)); _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
          {
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(false))
              {
               if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(false || _GLF_IDENTITY((false), bool(bvec2((false), false))), (false || (false)) || false))))
                return;
               do
                {
                 return;
                }
               while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
               if(_GLF_DEAD(false))
                return;
              }
             if(_GLF_DEAD(false))
              continue;
             do
              {
               do
                {
                 for(int _injected_loop_counter = ((1 << _GLF_IDENTITY(_GLF_IDENTITY(int(2), clamp(_GLF_IDENTITY(_GLF_IDENTITY(int(2), int(int(_GLF_IDENTITY(int(2), (int(2)) - 0)))), (_GLF_IDENTITY(int(2), int(int(_GLF_IDENTITY(int(2), (int(2)) - 0))))) >> 0), _GLF_IDENTITY(int(2), (int(2)) | 0), int(2))), int(_GLF_IDENTITY(_GLF_IDENTITY(2, min(2, 2)), 0 ^ (_GLF_IDENTITY(_GLF_IDENTITY(2, min(2, 2)), max(_GLF_IDENTITY(2, min(2, 2)), _GLF_IDENTITY(2, min(2, 2))))))))) >> _GLF_IDENTITY(int(2), int(2))); _GLF_WRAPPED_LOOP(_injected_loop_counter > int(_GLF_ZERO(0.0, injectionSwitch.x))); _injected_loop_counter --)
                  {
                   return;
                  }
                }
               while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
              }
             while(_GLF_WRAPPED_LOOP(false));
            }
          }
        }
      }
     else
      {
      }
    }
  }
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec2((injectionSwitch.x > injectionSwitch.y), true))))))))))))
  return;
}
