#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 uint subgroup_id = gl_SubgroupID;
 uint subgroup_size = gl_SubgroupSize;
 uint subgroup_local_id = gl_SubgroupInvocationID;
 uint num_workgroup = gl_NumWorkGroups.x;
 uint workgroup_size = gl_WorkGroupSize.x;
 uint workgroup_id = gl_WorkGroupID.x;
 uint workgroup_base = workgroup_size * workgroup_id;
 uint virtual_gid = workgroup_base + subgroup_id * subgroup_size + subgroup_local_id;
 uint next_virtual_gid = workgroup_base + subgroup_id * subgroup_size + ((subgroup_local_id + 1) % subgroup_size);
 atomicStore(buf[virtual_gid], uint(1), 4, 64, 4);
 if(subgroup_local_id + 1 < subgroup_size)
  {
   switch(_GLF_SWITCH(int(_GLF_ZERO(0.0, injectionSwitch.x))))
    {
     case 48:
     {
      for(mat2 _GLF_SWITCH_0_0v[13]; ((virtual_gid / packHalf2x16(vec2(2.4, -9700.9446))) >= 108794u); mat3(-0.6, 9.8, 59.30, 66.01, -9.3, -7608.6194, -7508.0283, -523.797, -998.598))
       {
        ((ivec2(55685, -6425) + 90516) - -92507);
        do
         {
          mat3x2 _GLF_SWITCH_0_1v;
          bitfieldInsert(-27469, -47385, -57359, ivec4(-69926, 84454, 89437, -3256).b);
          (mat3x4(-310.762, 30.32, 5.3, -7.2, 8.3, 2.5, 2.0, -5.6, 60.03, -1.3, 8.8, 85.53) - mat3x4(vec4(-4.0, -9.9, 79.50, 3285.0539), vec4(-5303.6851, 0.4, -2.2, -5911.4489), reflect(vec4(7.7, 1.7, -9947.8107, 689.308), vec4(2.3, 8.4, 9.7, 789.728))));
         }
        while(mix(false, (vec3(-186.702, -4.7, -7.6) != vec3(765.705, -6888.4590, -11.11)), (mat3(-2040.2001, -59.63, -15.50, 6531.5647, -5.1, -33.57, 736.064, -745.009, 74.23) == mat3(-6.4, -700.323, -6.0, 82.54, -9742.7545, 882.614, 0.5, -600.501, -2831.0844))));
        ceil(atan(-23.22));
        mat3x4(step(vec4(-560.403, -3926.2348, 19.58, 9282.4139), (mat3x4(19.90, 140.025, 8543.6938, 1.1, 7.3, -16.09, -67.68, 5116.5118, 3.1, 1463.1444, 4.2, 2.5) * vec3(2150.0954, -9461.1642, 68.12))), vec4(4.8, -3.8, 97.86, 66.52), (-250.309 + vec4(-59.07, -2522.1518, 6.2, 7048.4710)));
        (ivec4(35870, -10675, -4948, -31759) + (normalize(-905.227) , ivec4(72245, -18800, -97445, 68416)));
       }
      vec4(-2.3, -2165.9965, -537.469, 80.76);
      ivec2(-90682, -98257);
      if(true)
       {
        switch(_GLF_SWITCH(0))
         {
          case 0:
          case 86:
          if(true)
           {
            switch(_GLF_SWITCH(0))
             {
              case 95:
              ;
              case 1:
              mat3(-493.694, -6.1, -9238.8111, -8.9, -4694.8560, 75.49, -44.05, 748.372, 6.8);
              case 0:
              case 18:
              uvec4(subgroup_id, workgroup_id, next_virtual_gid, next_virtual_gid);
              case 39:
              ;
              mat2(mat2x4(0.2, -5.8, -3.9, -5.3, 3.0, -1.8, -1.3, -4.3));
              ivec4(42094, 45858, -23219, 30200);
              case 48:
              ivec4 _GLF_SWITCH_0_2v[57];
              case 20:
              true;
              break;
              case 79:
              158.867;
              default:
              1;
             }
           }
          break;
          default:
          1;
         }
       }
      mat2x4(6717.0279, 774.982, -9.0, -6.4, 157.042, 73.74, 38.56, -7922.8221);
      vec3 _GLF_SWITCH_0_3v, _GLF_SWITCH_0_4v[97];
      mat3(-417.384, 2251.9351, -1755.0361, 262.630, -6.1, 0.7, -4803.9908, -194.188, -3808.5242);
     }
     case 0:
     case 86:
     case 34:
     case 19:
     atomicStore(buf[next_virtual_gid], uint(2), 4, 64, 4);
     case 41:
     case 5:
     case 13:
     subgroupAll(false);
     break;
     default:
     1;
    }
  }
 else
  {
   atomicStore(buf[next_virtual_gid], uint(2), 4, 64, 4);
   subgroupAll(true);
  }
}
