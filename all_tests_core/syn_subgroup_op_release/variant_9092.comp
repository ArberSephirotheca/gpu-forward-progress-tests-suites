#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 uint subgroup_id = gl_SubgroupID;
 uint subgroup_size = gl_SubgroupSize;
 uint subgroup_local_id = gl_SubgroupInvocationID;
 uint num_workgroup = gl_NumWorkGroups.x;
 uint workgroup_size = gl_WorkGroupSize.x;
 uint workgroup_id = gl_WorkGroupID.x;
 uint workgroup_base = workgroup_size * _GLF_IDENTITY(workgroup_id, max(_GLF_IDENTITY(workgroup_id, 1u * (_GLF_IDENTITY(workgroup_id, (workgroup_id) << 0u))), workgroup_id));
 uint virtual_gid = workgroup_base + subgroup_id * subgroup_size + _GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) << (_GLF_IDENTITY(0u, (0u) | 0u) >> _GLF_IDENTITY(uint(6u), uint(6u))));
 uint next_virtual_gid = _GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_id * _GLF_IDENTITY(subgroup_size, clamp(subgroup_size, _GLF_IDENTITY(subgroup_size, (subgroup_size) << 0u), subgroup_size)), (subgroup_id * _GLF_IDENTITY(subgroup_size, (false ? _GLF_IDENTITY(_GLF_FUZZED(147832u), ~ (~ (_GLF_IDENTITY(_GLF_FUZZED(147832u), (_GLF_FUZZED(147832u)) / 1u)))) : _GLF_IDENTITY(subgroup_size, max(subgroup_size, _GLF_IDENTITY(subgroup_size, _GLF_IDENTITY((subgroup_size) / 1u, (true ? _GLF_IDENTITY((subgroup_size) / 1u, ~ (~ ((subgroup_size) / 1u))) : _GLF_FUZZED(workgroup_id))))))))) / 1u), uint(uvec2(workgroup_base + _GLF_IDENTITY(subgroup_id * _GLF_IDENTITY(subgroup_size, clamp(subgroup_size, _GLF_IDENTITY(subgroup_size, (subgroup_size) << 0u), subgroup_size)), (subgroup_id * _GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(false ? _GLF_FUZZED(147832u) : _GLF_IDENTITY(subgroup_size, max(subgroup_size, _GLF_IDENTITY(subgroup_size, (subgroup_size) / 1u))), (false ? _GLF_FUZZED(147832u) : _GLF_IDENTITY(subgroup_size, max(subgroup_size, _GLF_IDENTITY(subgroup_size, (subgroup_size) / 1u)))) ^ 0u)))) / 1u), uint(_GLF_ZERO(0.0, injectionSwitch.x))))) + ((_GLF_IDENTITY(subgroup_local_id, 0u ^ (subgroup_local_id)) + _GLF_IDENTITY(1, (1) ^ 0)) % subgroup_size);
 atomicStore(buf[virtual_gid], uint(1), 4, 64, 4);
 for(int _injected_loop_counter = int(_GLF_ZERO(0.0, injectionSwitch.x)); _GLF_WRAPPED_LOOP(_injected_loop_counter != (((1 & 1) << _GLF_IDENTITY(int(7), int(7))) >> _GLF_IDENTITY(int(7), _GLF_IDENTITY(int(7), (int(7)) - 0)))); _injected_loop_counter ++)
  {
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
    }
   else
    {
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
      }
     else
      {
       for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < (((1 << _GLF_IDENTITY(int(_GLF_IDENTITY(5, min(5, _GLF_IDENTITY(5, (5) - 0)))), int(5))) >> _GLF_IDENTITY(int(5), int(5))) & ((1 << _GLF_IDENTITY(int(5), int(5))) >> _GLF_IDENTITY(int(5), _GLF_IDENTITY(int(5), max(int(5), int(5))))))); _injected_loop_counter ++)
        {
         do
          {
           if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_IDENTITY(_GLF_FUZZED(4.6), clamp(_GLF_IDENTITY(_GLF_FUZZED(4.6), max(_GLF_FUZZED(4.6), _GLF_FUZZED(4.6))), _GLF_FUZZED(4.6), _GLF_FUZZED(4.6))) : injectionSwitch.y))) - tan(0.0)))), (_GLF_TRUE(_GLF_IDENTITY(true, bool(_GLF_IDENTITY(bvec3(true, false, false), bvec3(_GLF_IDENTITY(bvec3(bvec3(true, false, false)), bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec3(true, false, false)), bvec3(bvec4(bvec3(bvec3(true, false, false)), false))), false))))))), (injectionSwitch.x < injectionSwitch.y))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))
            {
             if(_GLF_WRAPPED_IF_FALSE(false))
              {
              }
             else
              {
               if(subgroup_local_id + 1 < subgroup_size)
                {
                 for(int _injected_loop_counter = int(_GLF_ZERO(0.0, injectionSwitch.x)); _GLF_WRAPPED_LOOP(_injected_loop_counter < _GLF_IDENTITY((_GLF_IDENTITY((1 << _GLF_IDENTITY(int(1), int(1))), ((1 << _GLF_IDENTITY(int(1), int(1)))) << int(_GLF_ZERO(0.0, injectionSwitch.x))) >> _GLF_IDENTITY(_GLF_IDENTITY(int(1), _GLF_IDENTITY(_GLF_IDENTITY(int(1), ~ (~ (int(1)))), ~ (~ (_GLF_IDENTITY(int(1), ~ (~ (int(1)))))))), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(int(1), _GLF_IDENTITY(int(1), ~ (~ (int(1))))), int(int(_GLF_IDENTITY(int(1), _GLF_IDENTITY(int(1), _GLF_IDENTITY(~ (~ (int(1))), (_GLF_IDENTITY(~ (~ (int(1))), 0 + (~ (~ (int(1)))))) | (~ (~ (int(1)))))))))))))), clamp((_GLF_IDENTITY((1 << _GLF_IDENTITY(int(1), int(1))), ((1 << _GLF_IDENTITY(int(1), int(1)))) << int(_GLF_ZERO(0.0, injectionSwitch.x))) >> _GLF_IDENTITY(_GLF_IDENTITY(int(1), _GLF_IDENTITY(_GLF_IDENTITY(int(1), ~ (~ (int(1)))), ~ (~ (_GLF_IDENTITY(int(1), ~ (~ (int(1)))))))), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(int(1), _GLF_IDENTITY(int(1), ~ (~ (int(1))))), int(int(_GLF_IDENTITY(int(1), _GLF_IDENTITY(int(1), _GLF_IDENTITY(~ (~ (int(1))), (_GLF_IDENTITY(~ (~ (int(1))), 0 + (~ (~ (int(1)))))) | (~ (~ (int(1)))))))))))))), (_GLF_IDENTITY((1 << _GLF_IDENTITY(int(1), int(1))), ((1 << _GLF_IDENTITY(int(1), int(1)))) << int(_GLF_ZERO(0.0, injectionSwitch.x))) >> _GLF_IDENTITY(_GLF_IDENTITY(int(1), _GLF_IDENTITY(_GLF_IDENTITY(int(1), ~ (~ (int(1)))), ~ (~ (_GLF_IDENTITY(int(1), ~ (~ (int(1)))))))), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(int(1), _GLF_IDENTITY(int(1), ~ (~ (int(1))))), int(int(_GLF_IDENTITY(int(1), _GLF_IDENTITY(int(1), _GLF_IDENTITY(~ (~ (int(1))), (_GLF_IDENTITY(~ (~ (int(1))), 0 + (~ (~ (int(1)))))) | (~ (~ (int(1)))))))))))))), (_GLF_IDENTITY((1 << _GLF_IDENTITY(int(1), int(1))), ((1 << _GLF_IDENTITY(int(1), int(1)))) << int(_GLF_ZERO(0.0, injectionSwitch.x))) >> _GLF_IDENTITY(_GLF_IDENTITY(int(1), _GLF_IDENTITY(_GLF_IDENTITY(int(1), ~ (~ (int(1)))), ~ (~ (_GLF_IDENTITY(int(1), ~ (~ (int(1)))))))), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(int(1), _GLF_IDENTITY(int(1), ~ (~ (int(1))))), int(int(_GLF_IDENTITY(int(1), _GLF_IDENTITY(int(1), _GLF_IDENTITY(~ (~ (int(1))), (_GLF_IDENTITY(~ (~ (int(1))), 0 + (~ (~ (int(1)))))) | (~ (~ (int(1))))))))))))))))); _injected_loop_counter ++)
                  {
                   if(_GLF_WRAPPED_IF_FALSE(false))
                    {
                    }
                   else
                    {
                     if(_GLF_WRAPPED_IF_FALSE(false))
                      {
                      }
                     else
                      {
                       do
                        {
                         if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), _GLF_IDENTITY(false, (false) || false) || (_GLF_WRAPPED_IF_FALSE(false))), false || _GLF_IDENTITY((_GLF_WRAPPED_IF_FALSE(false)), false || ((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), (_GLF_WRAPPED_IF_FALSE(false)) || false), bool(bvec4(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), (_GLF_WRAPPED_IF_FALSE(false)) || false), true, true, _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)))))))))))
                          {
                          }
                         else
                          {
                           do
                            {
                             if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, vec2(mat3x4(injectionSwitch, 1.0, 0.0, 1.0, abs(1.0), 1.0, 1.0, 0.0, 1.0, 0.0, 1.0)))) - vec2(0.0, 0.0))[0], (false ? _GLF_FUZZED(asin(65.00)) : _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, vec2(mat3x4(injectionSwitch, 1.0, 0.0, 1.0, abs(1.0), 1.0, 1.0, 0.0, 1.0, 0.0, 1.0)))) - vec2(0.0, 0.0))[0])), injectionSwitch[1])), vec2(mat4x2(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), 1.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, _GLF_IDENTITY(exp(0.0), (false ? _GLF_FUZZED(8071.2255) : exp(0.0))), 1.0))))), _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch))), (max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)))) / vec2(1.0, 1.0))))).y))))
                              {
                               do
                                {
                                 do
                                  {
                                   atomicStore(buf[next_virtual_gid], uint(2), 4, 64, _GLF_IDENTITY(4, (true ? _GLF_IDENTITY(4, int(ivec3(4, 1, 1))) : _GLF_FUZZED(-97217))));
                                  }
                                 while(_GLF_WRAPPED_LOOP(false));
                                }
                               while(_GLF_WRAPPED_LOOP(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(false, bool(bvec2(false, false)))), _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), true && (false))), (! (_GLF_IDENTITY(false, true && (false)))) || false))), false)))), true && ((_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, false)), ! (_GLF_IDENTITY(! (bool(bvec2(false, false))), false || (_GLF_IDENTITY(! (bool(bvec2(false, false))), ! (! (! (bool(bvec2(false, _GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec4(false, false, false, true)))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))))))))), true && (! (_GLF_IDENTITY(false, bool(bvec2(false, false))))))), ! (! ((_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_IDENTITY(false, bool(bvec2(false, false)))), true && ((_GLF_IDENTITY(false, bool(bvec2(false, false)))))), true && (! _GLF_IDENTITY((_GLF_IDENTITY(false, bool(bvec2(false, false)))), _GLF_IDENTITY(true, true && (true)) && ((_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, true && (false))))), bool(bvec2(false, false)))))))))))) || false, bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, true && (false))), (! (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), true && (false)))) || false))), false)))), true && ((_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(false, false), bvec2(_GLF_IDENTITY(bvec2(bvec2(false, false)), bvec2(bvec3(bvec2(bvec2(false, false)), false)))))), ! (_GLF_IDENTITY(! _GLF_IDENTITY((bool(bvec2(_GLF_IDENTITY(false, bool(bvec2(false, false))), false))), bool(bvec3((bool(bvec2(_GLF_IDENTITY(false, bool(bvec2(false, false))), false))), true, true))), false || (! (bool(_GLF_IDENTITY(bvec2(false, _GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, (false) && true), true)))), bvec2(bvec3(_GLF_IDENTITY(bvec2(false, _GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, (false) && true), true)))), bvec2(bvec2(bvec2(false, _GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, (false) && true), true))))))), true))))))))))))), true && (! (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), bool(bvec2(false, false))))))), ! (! ((_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_IDENTITY(false, bool(bvec2(false, false)))), true && ((_GLF_IDENTITY(false, bool(bvec2(false, false)))))), true && (! _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, false)), (bool(bvec2(false, false))) && true))), true && ((_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, false)), (bool(bvec2(false, false))) && true))))), true && ((_GLF_IDENTITY(false, bool(bvec2(false, false)))))))))))) || _GLF_IDENTITY(false, bool(bvec2(false, false))), true && (_GLF_IDENTITY((_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, true && (false))), (! (_GLF_IDENTITY(false, true && (false)))) || false))), false)))), true && ((_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, false)), ! (_GLF_IDENTITY(! (bool(bvec2(_GLF_IDENTITY(false, (false) || false), false))), false || (! (bool(bvec2(false, false))))))))))), true && (! (_GLF_IDENTITY(false, bool(bvec2(false, false))))))), ! (! _GLF_IDENTITY(((_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_IDENTITY(false, bool(bvec2(false, false)))), true && ((_GLF_IDENTITY(false, bool(bvec2(false, false)))))), true && (! _GLF_IDENTITY((_GLF_IDENTITY(false, bool(bvec2(false, false)))), _GLF_IDENTITY(true, (true) && true) && (_GLF_IDENTITY((_GLF_IDENTITY(false, bool(bvec2(false, false)))), ((_GLF_IDENTITY(false, bool(bvec2(false, false))))) && true))))))), (((_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_IDENTITY(false, bool(bvec2(false, false)))), true && ((_GLF_IDENTITY(false, bool(bvec2(false, false)))))), true && (! _GLF_IDENTITY((_GLF_IDENTITY(false, bool(bvec2(false, false)))), _GLF_IDENTITY(true, (true) && true) && (_GLF_IDENTITY((_GLF_IDENTITY(false, bool(bvec2(false, false)))), ((_GLF_IDENTITY(false, bool(bvec2(false, false))))) && true)))))))) && true))) || false)), false, false)))), _GLF_IDENTITY(bool(bvec2(! (_GLF_IDENTITY(false, bool(bvec2(false, _GLF_IDENTITY(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, ! (! (false))))), true), bvec2(bvec4(bvec2(false, true), false, true))))), (_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, ! (! (false))))), true), bvec2(bvec4(bvec2(false, true), false, true)))))) || false))))), true)), bool(bvec3(bool(bvec2(! (_GLF_IDENTITY(false, bool(bvec2(false, false)))), true)), _GLF_IDENTITY(false, false || (false)), true))))), ! (! (! (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(false, bool(bvec2(false, false)))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), true && (false))), (! (_GLF_IDENTITY(false, true && (false)))) || false))), false)))), true && ((_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, false)), ! (_GLF_IDENTITY(! (bool(bvec2(false, false))), false || (_GLF_IDENTITY(! (bool(bvec2(false, false))), ! (! (! (bool(bvec2(false, _GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec4(false, false, false, true)))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))))))))), true && (! (_GLF_IDENTITY(false, bool(bvec2(false, false))))))), ! (! ((_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_IDENTITY(false, bool(bvec2(false, false)))), true && ((_GLF_IDENTITY(false, bool(bvec2(false, false)))))), true && (! _GLF_IDENTITY((_GLF_IDENTITY(false, bool(bvec2(false, false)))), _GLF_IDENTITY(true, true && (true)) && ((_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, true && (false))))), bool(bvec2(false, false)))))))))))) || false, (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), true && (false))), (! (_GLF_IDENTITY(false, true && (false)))) || false))), false)))), true && ((_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, false)), ! (_GLF_IDENTITY(! (bool(bvec2(false, false))), false || (_GLF_IDENTITY(! (bool(bvec2(false, false))), ! (! (! (bool(bvec2(false, _GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec4(false, false, false, true)))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))))))))), true && (! (_GLF_IDENTITY(false, bool(bvec2(false, false))))))), ! (! ((_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_IDENTITY(false, bool(bvec2(false, false)))), true && ((_GLF_IDENTITY(false, bool(bvec2(false, false)))))), true && (! _GLF_IDENTITY((_GLF_IDENTITY(false, bool(bvec2(false, false)))), _GLF_IDENTITY(true, true && (true)) && ((_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, true && (false))))), bool(bvec2(false, false)))))))))))) || false, true && (_GLF_IDENTITY((_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), true && (false))), (! (_GLF_IDENTITY(false, true && (false)))) || false))), false), bvec2(bvec4(bvec2(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), true && (false))), (! (_GLF_IDENTITY(false, true && (false)))) || false))), false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)))))), true && ((_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec2(false, false)), ! (_GLF_IDENTITY(! (bool(bvec2(false, false))), false || (_GLF_IDENTITY(! (bool(bvec2(false, false))), ! (! (! (bool(bvec2(false, _GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec4(false, false, false, true)))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))))), (_GLF_IDENTITY(bool(bvec2(false, false)), ! (_GLF_IDENTITY(! (bool(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec4(bvec2(false, false), false, false))))), false || (_GLF_IDENTITY(! (bool(bvec2(false, false))), ! (! (! (bool(bvec2(false, _GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec4(false, false, false, true)))) || _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(92.67) : injectionSwitch.y)))))))))))))))) && true))))), true && (! (_GLF_IDENTITY(false, bool(bvec2(false, false))))))), ! (! ((_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_IDENTITY(false, bool(bvec2(false, false)))), true && ((_GLF_IDENTITY(false, bool(bvec2(false, false)))))), true && (! _GLF_IDENTITY((_GLF_IDENTITY(false, bool(bvec2(false, false)))), _GLF_IDENTITY(_GLF_IDENTITY(true, true && (true)), (_GLF_IDENTITY(_GLF_IDENTITY(true, true && (true)), ! (! (_GLF_IDENTITY(true, true && (true)))))) || false) && ((_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, _GLF_IDENTITY(true && (false), ! (! (true && (false)))))))), bool(bvec2(false, false)))))))))))) || false))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, true && (false))), (! (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), true && (false)))) || false))), false)))), true && ((_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(false, false), bvec2(_GLF_IDENTITY(bvec2(bvec2(false, false)), bvec2(bvec3(bvec2(bvec2(false, _GLF_IDENTITY(false, bool(bvec3(false, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), false)))))), ! (_GLF_IDENTITY(! _GLF_IDENTITY((bool(bvec2(_GLF_IDENTITY(false, bool(bvec2(false, false))), false))), bool(bvec3((bool(bvec2(_GLF_IDENTITY(false, bool(bvec2(false, false))), false))), true, true))), false || (! (bool(_GLF_IDENTITY(bvec2(false, _GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, (false) && true), true)))), bvec2(bvec3(_GLF_IDENTITY(bvec2(false, _GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, (false) && true), true)))), bvec2(bvec2(bvec2(false, _GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, (false) && true), true))))))), true))))))))))))), true && _GLF_IDENTITY((! (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), bool(bvec2(false, false))))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3((! (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), bool(bvec2(false, false))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false), bvec3(bvec3(_GLF_IDENTITY(bvec3((! (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), bool(bvec2(false, false))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false), bvec3(bvec3(bvec3((! (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), bool(bvec2(false, false))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)))))))), (bool(_GLF_IDENTITY(bvec3((! (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), bool(bvec2(false, false))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false), bvec3(bvec3(_GLF_IDENTITY(bvec3((! (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), bool(bvec2(false, false))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false), bvec3(bvec3(bvec3((! (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), bool(bvec2(false, false))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))))))))) || false)))), ! (! ((_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_IDENTITY(false, bool(bvec2(false, false)))), true && ((_GLF_IDENTITY(false, bool(bvec2(false, false)))))), true && (! _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, false)), _GLF_IDENTITY((bool(bvec2(false, false))), _GLF_IDENTITY(bool(bvec2((bool(bvec2(false, false))), _GLF_IDENTITY(false, ! (! (false))))), true && (bool(bvec2((bool(bvec2(false, false))), _GLF_IDENTITY(false, ! (! (false)))))))) && true))), true && ((_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, false)), (bool(bvec2(false, false))) && true))))), true && ((_GLF_IDENTITY(false, bool(bvec2(false, false)))))))))))) || _GLF_IDENTITY(false, bool(bvec2(false, false))), true && (_GLF_IDENTITY((_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, true && (false))), (! (_GLF_IDENTITY(false, true && (false)))) || false))), false)))), true && ((_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, false)), ! (_GLF_IDENTITY(! (bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) && true)))), ! (! (bool(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) && true))))))))), (false) || false), false))), false || (! (bool(bvec2(false, false))))))))))), true && (! (_GLF_IDENTITY(false, bool(bvec2(false, false))))))), ! (! _GLF_IDENTITY(((_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_IDENTITY(false, bool(bvec2(false, false)))), true && ((_GLF_IDENTITY(false, bool(bvec2(false, false)))))), true && (! _GLF_IDENTITY((_GLF_IDENTITY(false, bool(bvec2(false, false)))), _GLF_IDENTITY(true, (true) && true) && (_GLF_IDENTITY((_GLF_IDENTITY(false, bool(bvec2(false, false)))), ((_GLF_IDENTITY(false, bool(bvec2(false, false))))) && true))))))), (((_GLF_IDENTITY(_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_IDENTITY(false, bool(bvec2(false, false)))), true && ((_GLF_IDENTITY(false, bool(bvec2(false, false)))))), (! _GLF_IDENTITY((_GLF_IDENTITY(false, bool(bvec2(false, false)))), _GLF_IDENTITY(true && ((_GLF_IDENTITY(false, bool(bvec2(false, false))))), (true && (_GLF_IDENTITY((_GLF_IDENTITY(false, bool(bvec2(false, false)))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY((_GLF_IDENTITY(false, bool(bvec2(false, false)))), bool(bool((_GLF_IDENTITY(false, bool(bvec2(false, false))))))), true, false), bvec3(bvec4(bvec3(_GLF_IDENTITY((_GLF_IDENTITY(false, bool(bvec2(false, false)))), bool(bool((_GLF_IDENTITY(false, bool(bvec2(false, false))))))), true, false), false)))), (bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY((_GLF_IDENTITY(false, bool(bvec2(false, false)))), bool(bool((_GLF_IDENTITY(false, bool(bvec2(false, false))))))), true, false), bvec3(bvec4(bvec3(_GLF_IDENTITY((_GLF_IDENTITY(false, bool(bvec2(false, false)))), bool(bool((_GLF_IDENTITY(false, bool(bvec2(false, false))))))), true, false), false))))) || false)))) || false))) && true), true && (! _GLF_IDENTITY((_GLF_IDENTITY(false, bool(bvec2(false, false)))), _GLF_IDENTITY(true, (true) && true) && (_GLF_IDENTITY((_GLF_IDENTITY(false, bool(bvec2(false, false)))), ((_GLF_IDENTITY(false, bool(bvec2(false, false))))) && _GLF_IDENTITY(true, (_GLF_IDENTITY(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(true, ! (! (true)))))) || false))))))))) && true))) || false)), false, false)))), _GLF_IDENTITY(bool(bvec2(! (_GLF_IDENTITY(false, bool(bvec2(false, _GLF_IDENTITY(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, ! (! (false))))), true), bvec2(bvec4(bvec2(false, true), false, true))))), (_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((false), ! (_GLF_IDENTITY(! ((false)), false || (! ((false)))))))))), true), bvec2(bvec4(bvec2(false, true), false, true)))))) || false))))), true)), bool(bvec3(bool(bvec2(! (_GLF_IDENTITY(false, bool(bvec2(false, false)))), true)), _GLF_IDENTITY(false, false || (false)), true))))))))), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && _GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(((_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(mat4(injectionSwitch.x, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, sin(0.0), 0.0, length(vec3(0.0, 0.0, 0.0)))), clamp(_GLF_IDENTITY(float(mat4(injectionSwitch.x, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, sin(0.0), 0.0, length(vec3(0.0, 0.0, 0.0)))), (float(mat4(injectionSwitch.x, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, sin(0.0), 0.0, length(vec3(0.0, 0.0, 0.0))))) - 0.0), float(mat4(injectionSwitch.x, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, sin(0.0), 0.0, length(vec3(0.0, 0.0, 0.0)))), float(mat4(injectionSwitch.x, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, sin(0.0), 0.0, length(vec3(0.0, 0.0, 0.0))))))) > injectionSwitch.y)), bool(bvec3(((injectionSwitch.x > injectionSwitch.y)), false, true))), (_GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), bool(bvec3(_GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), ! (! (((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true)))))))), false, true)))) || false), bool(bvec2(_GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), bool(_GLF_IDENTITY(bvec3(((injectionSwitch.x > injectionSwitch.y)), false, true), bvec3(bvec3(bvec3(((injectionSwitch.x > injectionSwitch.y)), false, true)))))), false)))), (bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), bool(bvec3(((injectionSwitch.x > injectionSwitch.y)), false, true))), (_GLF_IDENTITY(((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(_GLF_IDENTITY(bvec2(injectionSwitch.x > injectionSwitch.y, true), _GLF_IDENTITY(bvec2(bvec2(bvec2(injectionSwitch.x > injectionSwitch.y, true))), bvec2(bvec2(bvec2(bvec2(bvec2(injectionSwitch.x > injectionSwitch.y, true))))))))))), bool(bvec3(_GLF_IDENTITY((_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y))))))), ! (! (((injectionSwitch.x > injectionSwitch.y))))), false, true)))) || false), bool(bvec2(_GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), bool(bvec3(((injectionSwitch.x > injectionSwitch.y)), false, true))), false))))) || false), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), bool(bvec3(((_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y)))), false, true))), bool(bvec2(_GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), bool(bvec3(((_GLF_IDENTITY(injectionSwitch.x, float(vec4(_GLF_IDENTITY(injectionSwitch.x, tan(0.0) + (injectionSwitch.x)), sqrt(sqrt(0.0)), 0.0, determinant(mat2(0.0, 0.0, 0.0, 0.0))))) > injectionSwitch.y)), false, true))), false)))), bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)).x > injectionSwitch.y)), bool(bvec3(((injectionSwitch.x > injectionSwitch.y)), false, true))), bool(bvec2(_GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), bool(_GLF_IDENTITY(bvec3(((injectionSwitch.x > injectionSwitch.y)), false, true), bvec3(bvec3(bvec3(((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(1240.5120)), float(injectionSwitch.y), bool(true))))), false, true)))))), _GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) || false))))))))), (bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(((_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch), mix(vec2(_GLF_FUZZED(76.95), ((injectionSwitch))[1]), vec2(((injectionSwitch))[_GLF_IDENTITY(0, _GLF_IDENTITY(min(0, 0), (min(0, 0)) - (0 << _GLF_IDENTITY(int(0), int(0)))))], _GLF_IDENTITY(_GLF_FUZZED(-5.9), (_GLF_IDENTITY(_GLF_FUZZED(-5.9), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_FUZZED(-5.9) : _GLF_FUZZED(-37.18)))) + 0.0)), bvec2(true, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(2.3))), injectionSwitch.x)) > injectionSwitch.y))))) + vec2(0.0, 0.0)).x > injectionSwitch.y)), bool(bvec3(((injectionSwitch.x > injectionSwitch.y)), false, true))), bool(bvec2(_GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), bool(_GLF_IDENTITY(bvec3(((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(_GLF_IDENTITY(mat2x4(injectionSwitch, 1.0, 0.0, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(6.1)), float(_GLF_IDENTITY(0.0, (0.0) + determinant(mat2(0.0, 0.0, 0.0, 0.0)))), bool(true))), 1.0, 1.0, 0.0), (_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(vec3(_GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)) : _GLF_FUZZED(injectionSwitch))), 1.0))).x, mix(float(_GLF_FUZZED((- -31.03))), float(_GLF_IDENTITY(injectionSwitch, vec2(vec3(_GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)) : _GLF_FUZZED(injectionSwitch))), 1.0))).x), bool(true))) > injectionSwitch.y)) ? _GLF_FUZZED(mat2x4(-6448.7433, 48.81, _GLF_IDENTITY(-9172.7721, float(_GLF_IDENTITY(mat4x3(-9172.7721, 1.0, log(1.0), round(length(normalize(1.0))), 0.0, 1.0, 1.0, 0.0, abs(round(length(normalize(1.0)))), _GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0, 0.0), _GLF_IDENTITY(mat3(1.0) * (mat4x3(-9172.7721, 1.0, log(1.0), round(length(normalize(1.0))), 0.0, 1.0, 1.0, 0.0, abs(round(length(normalize(1.0)))), _GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0, 0.0)), transpose(transpose(mat3(1.0) * (mat4x3(-9172.7721, 1.0, log(1.0), round(length(normalize(1.0))), 0.0, 1.0, 1.0, 0.0, abs(round(length(normalize(1.0)))), _GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0, 0.0)))))))), 4.4, -3.4, -1.9, 79.40, -34.91)) : mat2x4(injectionSwitch, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0)))), min(vec2(_GLF_IDENTITY(mat2x4(injectionSwitch, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0), (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)).y)) ? _GLF_FUZZED(mat2x4(-6448.7433, 48.81, -9172.7721, 4.4, -3.4, -1.9, 79.40, -34.91)) : mat2x4(injectionSwitch, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0)))), vec2(_GLF_IDENTITY(mat2x4(injectionSwitch, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(mat2x4(-6448.7433, 48.81, -9172.7721, 4.4, -3.4, _GLF_IDENTITY(-1.9, mix(float(-1.9), float(_GLF_FUZZED(float(-41636))), bool(false))), 79.40, -34.91)) : mat2x4(injectionSwitch, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0))))))).y)), false, true), bvec3(bvec3(bvec3((_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && _GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), ! (! (((injectionSwitch.x > injectionSwitch.y)))))), (! (_GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), ! (! (((injectionSwitch.x > injectionSwitch.y))))))) && true))))), false, true)))))), _GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) || false)))))))))) && true), (bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true))), bool(bvec3(_GLF_IDENTITY(((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], 0.0 + (injectionSwitch[0])), injectionSwitch[1])).y)), true && (_GLF_IDENTITY(((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], 0.0 + (injectionSwitch[0])), injectionSwitch[1])).y)), bool(bvec3(((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], 0.0 + (injectionSwitch[0])), injectionSwitch[1])).y)), false, true))))), false, true))), bool(bvec2(_GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), bool(bvec3(((injectionSwitch.x > injectionSwitch.y)), false, true))), false)))))) || _GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(false, bool(bool(false))))), false || (bool(bool(_GLF_IDENTITY(false, bool(bool(false))))))))))), false, _GLF_IDENTITY(_GLF_IDENTITY(true, ! (! (true))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(true, ! (! (true))), (_GLF_IDENTITY(_GLF_IDENTITY(true, ! (! (true))), ! (! (_GLF_IDENTITY(true, ! (! (true))))))) && true)))), true)), ! (! (bool(bvec4(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), bool(bvec3(((injectionSwitch.x > injectionSwitch.y)), false, true))), bool(bvec2(_GLF_IDENTITY(((_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-7.4)), bool(false))) > injectionSwitch.y)), bool(bvec3(((injectionSwitch.x > injectionSwitch.y)), false, true))), false))), false || (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(_GLF_IDENTITY(bool((injectionSwitch.x > injectionSwitch.y)), bool(bvec2(bool(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y))))), _GLF_IDENTITY(true, (true) && true))))))), bool(bvec3(((injectionSwitch.x > injectionSwitch.y)), false, _GLF_IDENTITY(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (true))))), bool(bvec2(_GLF_IDENTITY(((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).x > injectionSwitch.y)), bool(bvec3(((injectionSwitch.x > injectionSwitch.y)), false, true))), false)))))), bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)).x > injectionSwitch.y)), bool(bvec3(_GLF_IDENTITY(((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y)))), _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec2(((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y)), _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), injectionSwitch)).y)))), ! (! (bool(bvec2(((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec2(((injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(-747.474)), bool(false))))))), (bool(bvec2(((injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(-747.474)), bool(false)))))))) && true), _GLF_IDENTITY(true && (bool(bvec2(((injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), true && (true && (bool(bvec2(((injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))))), _GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(false, true), _GLF_IDENTITY(bvec2(bvec3(bvec2(false, true), true)), bvec2(bvec4(bvec2(bvec3(bvec2(false, true), true)), true, true))))), bool(_GLF_IDENTITY(bvec3(bool(bvec2(false, true)), true, false), bvec3(bvec3(bvec3(bool(bvec2(false, true)), true, false))))))), true))), bool(bvec2(_GLF_IDENTITY((_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec3((injectionSwitch.x > injectionSwitch.y), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * abs(vec2(1.0, 1.0))).y)), false, true), bvec3(bvec4(bvec3(((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * abs(vec2(1.0, 1.0))).y)), false, true), false)))), bool(bvec2(bool(bvec3(((injectionSwitch.x > injectionSwitch.y)), false, true)), false)))), false, true), bvec3(bvec3(bvec3(((injectionSwitch.x > injectionSwitch.y)), false, true)))))), _GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, true, true)), ! (! (_GLF_IDENTITY(bool(bvec3(false, true, true)), ! (! (bool(bvec3(false, true, true)))))))))) || _GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, bool(bool(false))))))))), bool(bvec2(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) || _GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, bool(bool(false))))))))), false))))))), (bool(_GLF_IDENTITY(_GLF_IDENTITY(((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)).x > injectionSwitch.y)), bool(bvec3(_GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec2(((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (! (bool(bvec2(((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)))))).y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), ! (! (_GLF_IDENTITY(bool(bvec2(((injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true && (bool(bvec2(((_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(vec3(injectionSwitch, sqrt(1.0))), min(vec2(vec3(injectionSwitch, sqrt(1.0))), vec2(vec3(injectionSwitch, sqrt(1.0)))))).x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))), _GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, true)), bool(_GLF_IDENTITY(bvec3(bool(bvec2(false, true)), true, false), _GLF_IDENTITY(bvec3(bvec3(bvec3(bool(bvec2(false, true)), true, false))), bvec3(bvec3(bvec3(bvec3(bvec3(bool(bvec2(false, true)), true, false)))))))))), true))), bool(bvec2(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec3((injectionSwitch.x > injectionSwitch.y), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), bool(bool(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec3((injectionSwitch.x > injectionSwitch.y), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(bvec3(((injectionSwitch.x > injectionSwitch.y)), false, true)), bool(bvec2(bool(bvec3(((injectionSwitch.x > injectionSwitch.y)), false, true)), false)))), false, true), bvec3(bvec3(bvec3(((injectionSwitch.x > injectionSwitch.y)), false, true))))), true && (bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(bvec3(((injectionSwitch.x > injectionSwitch.y)), false, true)), bool(bvec2(bool(bvec3(((injectionSwitch.x > injectionSwitch.y)), false, true)), false)))), false, true), bvec3(bvec3(bvec3(((injectionSwitch.x > injectionSwitch.y)), false, true)))))))), _GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) || _GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, bool(bool(false))))))))), bool(bvec2(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) || _GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), false || (_GLF_IDENTITY(bool(false), bool(bvec4(bool(false), true, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))))))), false)))))))) || false)), (bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)).x > injectionSwitch.y)), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(((injectionSwitch.x > injectionSwitch.y)), false, true), bvec3(bvec3(_GLF_IDENTITY(bvec3(((injectionSwitch.x > injectionSwitch.y)), false, _GLF_IDENTITY(true, bool(_GLF_IDENTITY(bool(true), ! (! (bool(true))))))), bvec3(bvec3(bvec3(((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY((injectionSwitch)[0], ((injectionSwitch)[0]) / 1.0), _GLF_FUZZED((+ -9.9))), vec2(_GLF_FUZZED(6.1), (injectionSwitch)[1]), bvec2(false, true))).y)), false, true)))))))), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(((injectionSwitch.x > injectionSwitch.y)), false, true), bvec3(bvec3(_GLF_IDENTITY(bvec3(((injectionSwitch.x > injectionSwitch.y)), false, _GLF_IDENTITY(true, bool(_GLF_IDENTITY(bool(true), ! (! (bool(true))))))), bvec3(bvec3(bvec3(((injectionSwitch.x > injectionSwitch.y)), false, true)))))))), ! (! _GLF_IDENTITY((bool(_GLF_IDENTITY(bvec3(((injectionSwitch.x > injectionSwitch.y)), false, true), bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(((injectionSwitch.x > injectionSwitch.y)), false, _GLF_IDENTITY(true, bool(_GLF_IDENTITY(bool(true), ! (! (bool(true))))))), bvec3(bvec3(bvec3(((injectionSwitch.x > injectionSwitch.y)), false, true))))), _GLF_IDENTITY(bvec3(bvec4(bvec3(_GLF_IDENTITY(bvec3(((injectionSwitch.x > injectionSwitch.y)), false, _GLF_IDENTITY(true, bool(_GLF_IDENTITY(bool(true), ! (! (bool(true))))))), bvec3(bvec3(bvec3(((injectionSwitch.x > injectionSwitch.y)), false, true))))), false)), bvec3(bvec4(bvec3(bvec4(bvec3(_GLF_IDENTITY(bvec3(((injectionSwitch.x > injectionSwitch.y)), false, _GLF_IDENTITY(true, bool(_GLF_IDENTITY(bool(true), ! (! (bool(true))))))), bvec3(bvec3(bvec3(((injectionSwitch.x > injectionSwitch.y)), false, true))))), false)), true)))))))), ((bool(_GLF_IDENTITY(bvec3(((injectionSwitch.x > injectionSwitch.y)), false, true), bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(((injectionSwitch.x > injectionSwitch.y)), false, _GLF_IDENTITY(true, bool(_GLF_IDENTITY(bool(true), ! (! (bool(true))))))), bvec3(bvec3(bvec3(((injectionSwitch.x > injectionSwitch.y)), false, true))))), _GLF_IDENTITY(bvec3(bvec4(bvec3(_GLF_IDENTITY(bvec3(((injectionSwitch.x > injectionSwitch.y)), false, _GLF_IDENTITY(true, bool(_GLF_IDENTITY(bool(true), ! (! (bool(true))))))), bvec3(bvec3(bvec3(((injectionSwitch.x > injectionSwitch.y)), false, true))))), false)), bvec3(bvec4(bvec3(bvec4(bvec3(_GLF_IDENTITY(bvec3(((injectionSwitch.x > injectionSwitch.y)), false, _GLF_IDENTITY(true, bool(_GLF_IDENTITY(bool(true), ! (! (bool(true))))))), bvec3(bvec3(bvec3(((injectionSwitch.x > injectionSwitch.y)), false, true))))), false)), true))))))))) && true))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(((injectionSwitch.x > injectionSwitch.y)), false, true), bvec3(bvec3(_GLF_IDENTITY(bvec3(((injectionSwitch.x > injectionSwitch.y)), false, true), bvec3(bvec4(_GLF_IDENTITY(bvec3(((injectionSwitch.x > injectionSwitch.y)), false, true), bvec3(bvec4(bvec3(((injectionSwitch.x > injectionSwitch.y)), false, true), true))), false)))))), bvec3(bvec3(_GLF_IDENTITY(bvec3(((injectionSwitch.x > injectionSwitch.y)), false, _GLF_IDENTITY(true, bool(_GLF_IDENTITY(bool(true), ! (! (bool(true))))))), bvec3(bvec3(bvec3(((injectionSwitch.x > injectionSwitch.y)), false, true)))))))), ! (! (bool(_GLF_IDENTITY(bvec3(((injectionSwitch.x > injectionSwitch.y)), false, true), bvec3(bvec3(_GLF_IDENTITY(bvec3(((injectionSwitch.x > injectionSwitch.y)), false, _GLF_IDENTITY(true, bool(_GLF_IDENTITY(bool(true), ! (! (bool(true))))))), bvec3(bvec3(bvec3(_GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), bool(bool(((injectionSwitch.x > injectionSwitch.y)))))))), false, true)))))))))))), (bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(((injectionSwitch.x > injectionSwitch.y)), false, true), bvec3(bvec3(_GLF_IDENTITY(bvec3(((injectionSwitch.x > injectionSwitch.y)), false, true), bvec3(bvec4(_GLF_IDENTITY(bvec3(((injectionSwitch.x > injectionSwitch.y)), false, true), bvec3(bvec4(bvec3(((injectionSwitch.x > injectionSwitch.y)), false, true), true))), false)))))), bvec3(bvec3(_GLF_IDENTITY(bvec3(((injectionSwitch.x > injectionSwitch.y)), false, _GLF_IDENTITY(true, bool(_GLF_IDENTITY(bool(true), ! (! (bool(true))))))), bvec3(bvec3(bvec3(((injectionSwitch.x > injectionSwitch.y)), false, true)))))))), ! (! (bool(_GLF_IDENTITY(bvec3(((injectionSwitch.x > injectionSwitch.y)), false, true), bvec3(bvec3(_GLF_IDENTITY(bvec3(((injectionSwitch.x > injectionSwitch.y)), false, _GLF_IDENTITY(true, bool(_GLF_IDENTITY(bool(true), ! (! (bool(true))))))), bvec3(bvec3(bvec3(_GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), bool(bool(((injectionSwitch.x > injectionSwitch.y)))))))), false, true))))))))))))) && true)))))), bool(bvec2(_GLF_IDENTITY((_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).x, float(vec3(injectionSwitch.x, 1.0, 0.0))), injectionSwitch.x)) > injectionSwitch.y), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, float(vec3(injectionSwitch.x, 1.0, 0.0))), injectionSwitch.x)) > injectionSwitch.y), ! (! _GLF_IDENTITY(((_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, float(vec3(injectionSwitch.x, 1.0, 0.0))), injectionSwitch.x)) > injectionSwitch.y)), ! (! (((_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, float(vec3(injectionSwitch.x, 1.0, 0.0))), injectionSwitch.x)) > injectionSwitch.y))))))))), (bool(bool(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, float(vec3(injectionSwitch.x, 1.0, 0.0))), _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)))).x)) > injectionSwitch.y), ! (! ((_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, float(vec3(injectionSwitch.x, 1.0, 0.0))), injectionSwitch.x)) > injectionSwitch.y))))))) && true))), bool(_GLF_IDENTITY(bvec3(((injectionSwitch.x > injectionSwitch.y)), false, true), bvec3(bvec3(bvec3(((_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y)), false, true)))))), _GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))), (false) || false)))))))))) && true), (bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), bool(bvec3(((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(_GLF_IDENTITY(injectionSwitch[0], 0.0 + _GLF_IDENTITY((injectionSwitch[0]), mix(float(_GLF_FUZZED(1436.9368)), float((injectionSwitch[0])), bool(true)))), injectionSwitch[1]), max(vec2(_GLF_IDENTITY(injectionSwitch[0], 0.0 + _GLF_IDENTITY((injectionSwitch[0]), mix(float(_GLF_FUZZED(1436.9368)), float((injectionSwitch[0])), bool(true)))), injectionSwitch[1]), vec2(_GLF_IDENTITY(injectionSwitch[0], 0.0 + _GLF_IDENTITY((injectionSwitch[0]), mix(float(_GLF_FUZZED(1436.9368)), float((injectionSwitch[0])), bool(true)))), injectionSwitch[1])))).y)), false, true))), bool(bvec2(_GLF_IDENTITY(((_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat4x2(injectionSwitch, 0.0, _GLF_IDENTITY(dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(sin(0.0), 1.0, 0.0, 0.0)), _GLF_IDENTITY(dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(sin(0.0), 1.0, 0.0, 0.0)), (true ? dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(sin(0.0), 1.0, 0.0, 0.0)) : _GLF_FUZZED(51.27)))), 0.0, 0.0, 1.0, sqrt(0.0)), mat4x2(mat4x3(mat4x2(injectionSwitch, 0.0, _GLF_IDENTITY(dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(sin(0.0), 1.0, 0.0, 0.0)), _GLF_IDENTITY(dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(sin(0.0), 1.0, 0.0, 0.0)), (true ? dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(sin(0.0), 1.0, 0.0, 0.0)) : _GLF_FUZZED(51.27)))), 0.0, 0.0, 1.0, sqrt(0.0))))))).x > injectionSwitch.y)), bool(bvec3(((injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(false, (false) && true), true))), _GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, bool(bvec4(false, true, false, true))))))))), bool(bvec2(bool(_GLF_IDENTITY(_GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), bool(bvec3(((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(_GLF_IDENTITY(injectionSwitch[0], 0.0 + _GLF_IDENTITY((injectionSwitch[0]), mix(float(_GLF_FUZZED(1436.9368)), float((injectionSwitch[0])), bool(true)))), injectionSwitch[1]), max(vec2(_GLF_IDENTITY(injectionSwitch[0], 0.0 + _GLF_IDENTITY((injectionSwitch[0]), mix(float(_GLF_FUZZED(1436.9368)), float((injectionSwitch[0])), bool(true)))), injectionSwitch[1]), vec2(_GLF_IDENTITY(injectionSwitch[0], 0.0 + _GLF_IDENTITY((injectionSwitch[0]), mix(float(_GLF_FUZZED(1436.9368)), float((injectionSwitch[0])), bool(true)))), injectionSwitch[1])))).y)), false, true))), bool(bvec2(_GLF_IDENTITY(((_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat4x2(injectionSwitch, 0.0, _GLF_IDENTITY(dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(sin(0.0), 1.0, 0.0, 0.0)), _GLF_IDENTITY(dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(sin(0.0), 1.0, 0.0, 0.0)), (true ? dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(sin(0.0), 1.0, 0.0, 0.0)) : _GLF_FUZZED(51.27)))), 0.0, 0.0, 1.0, sqrt(0.0)), mat4x2(mat4x3(mat4x2(injectionSwitch, 0.0, _GLF_IDENTITY(dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(sin(0.0), 1.0, 0.0, 0.0)), _GLF_IDENTITY(dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(sin(0.0), 1.0, 0.0, 0.0)), (true ? dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(sin(0.0), 1.0, 0.0, 0.0)) : _GLF_FUZZED(51.27)))), 0.0, 0.0, 1.0, sqrt(0.0))))))).x > injectionSwitch.y)), bool(bvec3(((injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(false, (false) && true), true))), _GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, bool(bvec4(false, true, false, true))))))))), true))))) || _GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(false, bool(bool(false))))), false || (bool(bool(_GLF_IDENTITY(false, bool(bool(false))))))))))), false, _GLF_IDENTITY(true, ! (! (true))), true)))))), _GLF_IDENTITY(! (! (bool(_GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), bool(bvec3((_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x, clamp(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(1361.6781)), float(injectionSwitch.x), bool(true))), injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y), ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x, clamp(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(1361.6781)), float(injectionSwitch.x), bool(true))), injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y)) && true)), false, true)))))), true && (! (! (bool(_GLF_IDENTITY(_GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), bool(bvec3((_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x, clamp(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(1361.6781)), float(injectionSwitch.x), bool(true))), injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y), ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x, clamp(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(1361.6781)), float(injectionSwitch.x), bool(true))), injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y)) && true)), false, true))), bool(bvec2(_GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), bool(_GLF_IDENTITY(bvec3((_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x, clamp(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(1361.6781)), _GLF_IDENTITY(float(injectionSwitch.x), 1.0 * (float(injectionSwitch.x))), bool(true))), injectionSwitch.x, _GLF_IDENTITY(injectionSwitch, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch : _GLF_FUZZED(injectionSwitch))).x)) > injectionSwitch.y), ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x, clamp(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(1361.6781)), float(injectionSwitch.x), bool(true))), injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y)) && true)), false, true), _GLF_IDENTITY(bvec3(bvec3(bvec3((_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x, clamp(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(1361.6781)), _GLF_IDENTITY(float(injectionSwitch.x), 1.0 * (float(injectionSwitch.x))), bool(true))), injectionSwitch.x, _GLF_IDENTITY(injectionSwitch, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch : _GLF_FUZZED(injectionSwitch))).x)) > injectionSwitch.y), ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x, clamp(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(1361.6781)), float(injectionSwitch.x), bool(true))), injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y)) && true)), false, true))), bvec3(bvec3(bvec3(bvec3(bvec3((_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x, clamp(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(1361.6781)), _GLF_IDENTITY(float(injectionSwitch.x), 1.0 * (float(injectionSwitch.x))), bool(true))), injectionSwitch.x, _GLF_IDENTITY(injectionSwitch, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch : _GLF_FUZZED(injectionSwitch))).x)) > injectionSwitch.y), ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x, clamp(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(1361.6781)), float(injectionSwitch.x), bool(true))), injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y)) && true)), false, true))))))))), false)))))))))))))));
                              }
                             else
                              {
                              }
                            }
                           while(_GLF_WRAPPED_LOOP(false));
                          }
                        }
                       while(_GLF_WRAPPED_LOOP(false));
                      }
                    }
                  }
                 do
                  {
                   for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
                    {
                     if(_GLF_WRAPPED_IF_TRUE(true))
                      {
                       do
                        {
                         if(_GLF_WRAPPED_IF_TRUE(true))
                          {
                           if(_GLF_WRAPPED_IF_FALSE(false))
                            {
                            }
                           else
                            {
                             for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != int(_GLF_ONE(1.0, injectionSwitch.y))); _GLF_IDENTITY(_GLF_IDENTITY(_injected_loop_counter ++, (_GLF_IDENTITY(_injected_loop_counter ++, _GLF_IDENTITY((_injected_loop_counter ++), ((_injected_loop_counter ++)) | _GLF_IDENTITY(0, ~ (~ (0)))) << 0)) + 0), (_GLF_IDENTITY(_GLF_IDENTITY(_injected_loop_counter ++, (_GLF_IDENTITY(_injected_loop_counter ++, _GLF_IDENTITY((_injected_loop_counter ++), ((_injected_loop_counter ++)) | _GLF_IDENTITY(0, ~ (~ (0)))) << 0)) + 0), (_GLF_IDENTITY(_injected_loop_counter ++, (_GLF_IDENTITY(_injected_loop_counter ++, _GLF_IDENTITY((_injected_loop_counter ++), ((_injected_loop_counter ++)) | _GLF_IDENTITY(0, ~ (~ (0)))) << 0)) + 0)) / 1)) | 0))
                              {
                               if(_GLF_WRAPPED_IF_TRUE(true))
                                {
                                 do
                                  {
                                   if(_GLF_WRAPPED_IF_TRUE(true))
                                    {
                                     if(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)) || false)), (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)) || false)), (_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true, ! (! ((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true))))) || false))) && true)) && true)))))
                                      {
                                      }
                                     else
                                      {
                                       if(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), false || (_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), bool(bvec3(_GLF_WRAPPED_IF_TRUE(true), false, false))))), bool(bvec3(bool(bool(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), bool(bvec3(_GLF_WRAPPED_IF_TRUE(true), false, false))))), true, false)))))))
                                        {
                                         if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
                                          {
                                           subgroupAll(false);
                                          }
                                         else
                                          {
                                          }
                                        }
                                       else
                                        {
                                        }
                                      }
                                    }
                                   else
                                    {
                                    }
                                  }
                                 while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
                                }
                               else
                                {
                                }
                              }
                            }
                          }
                         else
                          {
                          }
                        }
                       while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, false || (false))));
                      }
                     else
                      {
                      }
                    }
                  }
                 while(_GLF_WRAPPED_LOOP(false));
                }
               else
                {
                 if(_GLF_WRAPPED_IF_FALSE(false))
                  {
                  }
                 else
                  {
                   if(_GLF_WRAPPED_IF_TRUE(true))
                    {
                     atomicStore(buf[next_virtual_gid], uint(2), 4, 64, 4);
                    }
                   else
                    {
                    }
                  }
                 for(int _injected_loop_counter = (0 >> _GLF_IDENTITY(int(_GLF_IDENTITY(0, clamp(_GLF_IDENTITY(0, (0) | (0)), 0, 0))), _GLF_IDENTITY(int(0), (true ? int(0) : _GLF_FUZZED(_injected_loop_counter))))); _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
                  {
                   if(_GLF_WRAPPED_IF_FALSE(false))
                    {
                    }
                   else
                    {
                     if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
                      {
                       for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
                        {
                         subgroupAll(true);
                        }
                      }
                     else
                      {
                      }
                    }
                  }
                }
              }
            }
           else
            {
            }
          }
         while(_GLF_WRAPPED_LOOP(false));
        }
      }
    }
  }
}
