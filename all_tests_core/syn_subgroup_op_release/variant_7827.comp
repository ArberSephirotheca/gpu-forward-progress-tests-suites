#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false))))), (! (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))) || false))))
    barrier();
   return;
  }
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(mat3x2(injectionSwitch, determinant(mat4(0.0, 0.0, 0.0, 0.0, 1.0, 0.0, tan(0.0), 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0)), 0.0, 1.0, 0.0))).x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)))).y))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))) || false), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || false), ! (! (_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) && true), (injectionSwitch.x > injectionSwitch.y))))))) || false), false || (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))).x > injectionSwitch.y))))))) || false, bool(bvec3((_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))).x > injectionSwitch.y))))))) || false, false, true))))))) && true))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), ! (! (_GLF_IDENTITY(false, (false) || false)))), bool(bvec2(false, false)))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   return;
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false)))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
      barrier();
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, false)))))
      barrier();
     return;
    }
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (_GLF_IDENTITY(false, bool(bvec2(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))) && true))), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0) > injectionSwitch.y)))))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     barrier();
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, vec2(vec2(injectionSwitch))), injectionSwitch)).y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         barrier();
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         barrier();
        }
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   barrier();
  }
 uint num_workgroup = gl_NumWorkGroups.x;
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0) > injectionSwitch.y))))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(bool(bvec4(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, false, false)), true && (bool(bvec4(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, false, false))))))
    barrier();
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, true && (false)), (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
      return;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true, false)))))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y))) && true)))))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (false)))))), (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), clamp(_GLF_IDENTITY((injectionSwitch) * mat2(1.0), max((injectionSwitch) * mat2(1.0), (injectionSwitch) * mat2(1.0))), (injectionSwitch) * mat2(1.0), (injectionSwitch) * mat2(1.0)))).x, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), clamp(_GLF_IDENTITY((injectionSwitch) * mat2(1.0), max((injectionSwitch) * mat2(1.0), (injectionSwitch) * mat2(1.0))), (injectionSwitch) * mat2(1.0), (injectionSwitch) * mat2(1.0)))).x, clamp(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), clamp(_GLF_IDENTITY((injectionSwitch) * mat2(1.0), max((injectionSwitch) * mat2(1.0), (injectionSwitch) * mat2(1.0))), (injectionSwitch) * mat2(1.0), (injectionSwitch) * mat2(1.0)))).x, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), clamp(_GLF_IDENTITY((injectionSwitch) * mat2(1.0), max((injectionSwitch) * mat2(1.0), (injectionSwitch) * mat2(1.0))), (injectionSwitch) * mat2(1.0), (injectionSwitch) * mat2(1.0)))).x, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), clamp(_GLF_IDENTITY((injectionSwitch) * mat2(1.0), max((injectionSwitch) * mat2(1.0), (injectionSwitch) * mat2(1.0))), (injectionSwitch) * mat2(1.0), (injectionSwitch) * mat2(1.0)))).x))) + abs(0.0)) > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - determinant(mat3(0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))), bool(_GLF_IDENTITY(bool(injectionSwitch.x > injectionSwitch.y), false || (_GLF_IDENTITY(bool(injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(false, bool(bvec4(false, true, false, false))) || (bool(injectionSwitch.x > injectionSwitch.y)))))))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     barrier();
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_DEAD(false), true, true)))) && true))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         if(_GLF_DEAD(false))
          return;
         barrier();
         if(_GLF_DEAD(false))
          barrier();
        }
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       barrier();
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        return;
       return;
      }
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(false))
        return;
       barrier();
       if(_GLF_DEAD(false))
        return;
      }
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) || false)))
        return;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         barrier();
        }
       return;
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) || false)))))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
         if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))))))
          barrier();
         return;
        }
       if(_GLF_DEAD(false))
        return;
       barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(false))
        return;
      }
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       barrier();
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), bool(bool(_GLF_IDENTITY(false, ! (! (false))))))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, float(mat4x2(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(injectionSwitch[0]) : injectionSwitch.x)), max(injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x)), 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0))) > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(5144.9874) : injectionSwitch.y))))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
      return;
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(828.793)), float(injectionSwitch.x), bool(true))) > injectionSwitch.y))))
      barrier();
     return;
    }
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))
      return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   return;
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   return;
  }
 uint workgroup_size = gl_WorkGroupSize.x;
 uint workgroup_id = _GLF_IDENTITY(gl_WorkGroupID, max(gl_WorkGroupID, gl_WorkGroupID)).x;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bool(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, false)))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y)))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     barrier();
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    return;
   barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(6089.2351) : injectionSwitch.y))))))
        barrier();
       barrier();
      }
     return;
     if(_GLF_DEAD(false))
      return;
    }
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), ! _GLF_IDENTITY((! (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true), _GLF_IDENTITY(true, bool(bvec4(_GLF_IDENTITY(true, (_GLF_IDENTITY(true, (true) && true)) && true), false, _GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec3(false, false, true)), bool(bool(bool(bvec3(false, false, true))))), _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true && (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))) && (_GLF_IDENTITY(bool(bvec3(false, false, true)), _GLF_IDENTITY(true, bool(bvec3(true, true, false))) && (bool(bvec3(false, false, true))))))), true))) && (_GLF_DEAD(false)))))))), ((! (_GLF_IDENTITY(_GLF_DEAD(false), ! _GLF_IDENTITY((! (_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(true, bool(bvec4(true, false, _GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, false, true)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (bool(bvec3(false, false, true))))), true))) && (_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, false)))))))), ((! (_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(true, bool(bvec4(true, false, _GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, false, true)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (bool(_GLF_IDENTITY(bvec3(false, false, true), _GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY(bvec3(false, false, true), bvec3(bvec4(_GLF_IDENTITY(bvec3(false, false, true), bvec3(bvec4(bvec3(false, false, true), true))), true))))), bvec3(bvec4(bvec3(bvec3(_GLF_IDENTITY(bvec3(false, false, true), bvec3(bvec4(_GLF_IDENTITY(bvec3(false, false, true), bvec3(bvec4(bvec3(false, false, true), true))), true))))), true)))))))), true))) && (_GLF_DEAD(false)))))) && true))))) || false)))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
    }
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_DEAD(false), false))))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(_GLF_IDENTITY(bool(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (! (bool(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      return;
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
   barrier();
   if(_GLF_DEAD(false))
    return;
  }
 uint workgroup_base = workgroup_size * workgroup_id;
 uint virtual_gid = workgroup_base + _GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) + uint(_GLF_ZERO(0.0, injectionSwitch.x))) + subgroup_local_id;
 if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(bool(bvec4((injectionSwitch.x > injectionSwitch.y), true, false, true)), (bool(bvec4((injectionSwitch.x > injectionSwitch.y), true, false, true))) && true))) && true))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), ! (! (_GLF_IDENTITY(false, false || (false)))))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), ! (! (_GLF_IDENTITY(false, (false) || false))))))
  barrier();
 uint next_virtual_gid = _GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_id * subgroup_size, clamp(subgroup_id * subgroup_size, subgroup_id * subgroup_size, _GLF_IDENTITY(subgroup_id, clamp(subgroup_id, subgroup_id, subgroup_id)) * subgroup_size)) + (_GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id + 1), ((subgroup_local_id + 1)) ^ (0u << _GLF_IDENTITY(uint(0u), _GLF_IDENTITY(uint(0u), clamp(uint(0u), uint(0u), uint(0u)))))), (_GLF_IDENTITY((subgroup_local_id + 1), _GLF_IDENTITY(_GLF_IDENTITY(uint(uvec3((subgroup_local_id + 1), 1u, 1u)), _GLF_IDENTITY((uint(uvec3((subgroup_local_id + 1), 1u, 1u))) - 0u, clamp((uint(uvec3((subgroup_local_id + 1), 1u, _GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, max(1u, _GLF_IDENTITY(1u, (1u) ^ 0u)))) | (1u))))) - 0u, (uint(uvec3(_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) - 0u)), ~ (~ ((_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) - 0u))))), 1u, 1u))) - 0u, _GLF_IDENTITY((uint(uvec3((subgroup_local_id + 1), 1u, 1u))) - 0u, (false ? _GLF_FUZZED(_GLF_IDENTITY(atomicAnd(subgroup_size, num_workgroup), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(atomicAnd(subgroup_size, num_workgroup), (atomicAnd(subgroup_size, num_workgroup)) * 1u)), uint(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (~ (_GLF_IDENTITY(atomicAnd(subgroup_size, num_workgroup), (atomicAnd(subgroup_size, num_workgroup)) * 1u))))))) : (uint(uvec3(_GLF_IDENTITY((subgroup_local_id + 1), clamp((subgroup_local_id + 1), (subgroup_local_id + 1), _GLF_IDENTITY((subgroup_local_id + 1), clamp(_GLF_IDENTITY((subgroup_local_id + 1), ~ (~ ((subgroup_local_id + 1)))), (subgroup_local_id + 1), (subgroup_local_id + 1))))), 1u, 1u))) - _GLF_IDENTITY(0u, clamp(0u, 0u, 0u))))))), 0u | (_GLF_IDENTITY(_GLF_IDENTITY(uint(uvec3((subgroup_local_id + 1), 1u, 1u)), _GLF_IDENTITY((uint(uvec3((subgroup_local_id + 1), 1u, 1u))), (false ? _GLF_FUZZED(virtual_gid) : (uint(uvec3((subgroup_local_id + 1), 1u, 1u))))) - 0u), min(_GLF_IDENTITY(uint(uvec3((subgroup_local_id + 1), _GLF_IDENTITY(1u, uint(_GLF_IDENTITY(uint(1u), min(_GLF_IDENTITY(uint(1u), (false ? _GLF_FUZZED(workgroup_id) : uint(1u))), uint(1u))))), 1u)), _GLF_IDENTITY((uint(uvec3((subgroup_local_id + 1), _GLF_IDENTITY(1u, clamp(1u, _GLF_IDENTITY(1u, 0u | (1u)), 1u)), 1u))) - 0u, (_GLF_IDENTITY((uint(uvec3((subgroup_local_id + 1), 1u, 1u))) - 0u, (_GLF_IDENTITY((uint(uvec3((subgroup_local_id + 1), 1u, 1u))) - 0u, ((uint(uvec3((subgroup_local_id + 1), 1u, 1u))) - 0u) - 0u)) >> 0u)) | (_GLF_IDENTITY((uint(uvec3(_GLF_IDENTITY((subgroup_local_id + 1), ((subgroup_local_id + 1)) >> 0u), 1u, 1u))) - 0u, (false ? _GLF_FUZZED((+ virtual_gid)) : _GLF_IDENTITY((uint(uvec3((subgroup_local_id + 1), 1u, 1u))) - 0u, min((uint(uvec3((subgroup_local_id + 1), 1u, 1u))) - 0u, (uint(uvec3((subgroup_local_id + _GLF_IDENTITY(1, (1) * int(_GLF_ONE(1.0, injectionSwitch.y)))), 1u, 1u))) - 0u))))))), _GLF_IDENTITY(uint(uvec3((subgroup_local_id + 1), 1u, 1u)), (uint(uvec3((_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) | (subgroup_local_id + 1))), 1u, 1u))) - 0u))))))) >> 0u) % subgroup_size), min(workgroup_base + _GLF_IDENTITY(subgroup_id, min(subgroup_id, subgroup_id)) * _GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (subgroup_size) << 0u), (subgroup_size) ^ 0u)) ^ 0u) + _GLF_IDENTITY((_GLF_IDENTITY((subgroup_local_id + 1), ((subgroup_local_id + 1)) | (_GLF_IDENTITY((subgroup_local_id + 1), ~ (_GLF_IDENTITY(~ ((subgroup_local_id + 1)), ~ (~ (_GLF_IDENTITY(~ ((subgroup_local_id + 1)), (_GLF_IDENTITY(~ ((subgroup_local_id + 1)), (~ ((subgroup_local_id + _GLF_IDENTITY(1, (_GLF_IDENTITY(1, min(_GLF_IDENTITY(1, (1) / 1), 1))) | (1))))) + 0u)) + uint(_GLF_ZERO(0.0, injectionSwitch.x)))))))))) % subgroup_size), ((_GLF_IDENTITY((subgroup_local_id + _GLF_IDENTITY(1, (1) | (1))), ((subgroup_local_id + 1)) | (_GLF_IDENTITY((subgroup_local_id + 1), ~ (_GLF_IDENTITY(_GLF_IDENTITY(~ ((subgroup_local_id + 1)), ~ (~ _GLF_IDENTITY((~ ((subgroup_local_id + 1))), (true ? (~ ((subgroup_local_id + 1))) : _GLF_FUZZED(subgroup_size))))), (_GLF_IDENTITY(~ ((subgroup_local_id + 1)), ~ (~ (~ ((subgroup_local_id + 1)))))) | 0u))))) % subgroup_size)) * 1u), _GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size + _GLF_IDENTITY(((subgroup_local_id + 1) % subgroup_size), uint(_GLF_IDENTITY(_GLF_IDENTITY(uvec4(((subgroup_local_id + 1) % subgroup_size), 1u, 1u, 0u), (_GLF_IDENTITY(uvec4(((subgroup_local_id + 1) % subgroup_size), 1u, 1u, 0u), (uvec4(((subgroup_local_id + 1) % subgroup_size), 1u, 1u, 0u)) >> uvec4(0u, 0u, 0u, 0u))) - uvec4(0u, 0u, 0u, 0u)), clamp(uvec4(((subgroup_local_id + 1) % subgroup_size), 1u, 1u, 0u), uvec4(((subgroup_local_id + 1) % _GLF_IDENTITY(subgroup_size, (subgroup_size) >> 0u)), _GLF_IDENTITY(1u, max(1u, _GLF_IDENTITY(1u, clamp(1u, _GLF_IDENTITY(1u, (1u) | (1u)), 1u)))), 1u, 0u), uvec4((_GLF_IDENTITY((subgroup_local_id + 1), ((subgroup_local_id + 1)) + 0u) % subgroup_size), _GLF_IDENTITY(1u, clamp(_GLF_IDENTITY(1u, min(1u, 1u)), 1u, 1u)), 1u, 0u))))), min(workgroup_base + subgroup_id * subgroup_size + _GLF_IDENTITY(((subgroup_local_id + 1) % subgroup_size), uint(_GLF_IDENTITY(_GLF_IDENTITY(uvec4(((subgroup_local_id + 1) % subgroup_size), 1u, 1u, 0u), (_GLF_IDENTITY(uvec4(((subgroup_local_id + 1) % subgroup_size), 1u, 1u, 0u), (uvec4(((subgroup_local_id + 1) % subgroup_size), 1u, 1u, 0u)) >> uvec4(0u, 0u, 0u, 0u))) - uvec4(0u, 0u, 0u, 0u)), clamp(uvec4(((subgroup_local_id + 1) % subgroup_size), 1u, 1u, 0u), uvec4(((subgroup_local_id + 1) % _GLF_IDENTITY(subgroup_size, (subgroup_size) >> 0u)), _GLF_IDENTITY(1u, max(1u, _GLF_IDENTITY(1u, clamp(1u, _GLF_IDENTITY(1u, (1u) | (1u)), 1u)))), 1u, 0u), uvec4((_GLF_IDENTITY((subgroup_local_id + 1), ((subgroup_local_id + 1)) + 0u) % subgroup_size), _GLF_IDENTITY(1u, clamp(_GLF_IDENTITY(1u, min(1u, 1u)), 1u, 1u)), 1u, 0u))))), _GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size + _GLF_IDENTITY(((subgroup_local_id + 1) % subgroup_size), uint(_GLF_IDENTITY(_GLF_IDENTITY(uvec4(((subgroup_local_id + 1) % subgroup_size), 1u, 1u, 0u), (_GLF_IDENTITY(uvec4(((subgroup_local_id + 1) % subgroup_size), 1u, 1u, 0u), (uvec4(((subgroup_local_id + 1) % subgroup_size), 1u, 1u, 0u)) >> uvec4(0u, 0u, 0u, 0u))) - uvec4(0u, 0u, 0u, 0u)), clamp(uvec4(((subgroup_local_id + 1) % subgroup_size), 1u, 1u, 0u), uvec4(((subgroup_local_id + 1) % _GLF_IDENTITY(subgroup_size, (subgroup_size) >> 0u)), _GLF_IDENTITY(1u, max(1u, _GLF_IDENTITY(1u, clamp(1u, _GLF_IDENTITY(1u, (1u) | (1u)), 1u)))), 1u, 0u), uvec4((_GLF_IDENTITY((subgroup_local_id + 1), ((subgroup_local_id + 1)) + 0u) % subgroup_size), _GLF_IDENTITY(1u, clamp(_GLF_IDENTITY(1u, min(1u, 1u)), 1u, 1u)), 1u, 0u))))), max(workgroup_base + subgroup_id * subgroup_size + _GLF_IDENTITY(((subgroup_local_id + 1) % subgroup_size), uint(_GLF_IDENTITY(_GLF_IDENTITY(uvec4(((subgroup_local_id + 1) % subgroup_size), 1u, 1u, 0u), (_GLF_IDENTITY(uvec4(((subgroup_local_id + 1) % subgroup_size), 1u, 1u, 0u), (uvec4(((subgroup_local_id + 1) % subgroup_size), 1u, 1u, 0u)) >> uvec4(0u, 0u, 0u, 0u))) - uvec4(0u, 0u, 0u, 0u)), clamp(uvec4(((subgroup_local_id + 1) % subgroup_size), 1u, 1u, 0u), uvec4(((subgroup_local_id + 1) % _GLF_IDENTITY(subgroup_size, (subgroup_size) >> 0u)), _GLF_IDENTITY(1u, max(1u, _GLF_IDENTITY(1u, clamp(1u, _GLF_IDENTITY(1u, (1u) | (1u)), 1u)))), 1u, 0u), uvec4((_GLF_IDENTITY((subgroup_local_id + 1), ((subgroup_local_id + 1)) + 0u) % subgroup_size), _GLF_IDENTITY(1u, clamp(_GLF_IDENTITY(1u, min(1u, 1u)), 1u, 1u)), 1u, 0u))))), workgroup_base + subgroup_id * subgroup_size + _GLF_IDENTITY(((subgroup_local_id + 1) % subgroup_size), uint(_GLF_IDENTITY(_GLF_IDENTITY(uvec4(((subgroup_local_id + 1) % subgroup_size), 1u, 1u, 0u), (_GLF_IDENTITY(uvec4(((subgroup_local_id + 1) % subgroup_size), 1u, 1u, 0u), (uvec4(((subgroup_local_id + 1) % subgroup_size), 1u, 1u, 0u)) >> uvec4(0u, 0u, 0u, 0u))) - uvec4(0u, 0u, 0u, 0u)), clamp(uvec4(((subgroup_local_id + 1) % subgroup_size), 1u, 1u, 0u), uvec4(((subgroup_local_id + 1) % _GLF_IDENTITY(subgroup_size, (subgroup_size) >> 0u)), _GLF_IDENTITY(1u, max(1u, _GLF_IDENTITY(1u, clamp(1u, _GLF_IDENTITY(1u, (1u) | (1u)), 1u)))), 1u, 0u), uvec4((_GLF_IDENTITY((subgroup_local_id + 1), ((subgroup_local_id + 1)) + 0u) % subgroup_size), _GLF_IDENTITY(1u, clamp(_GLF_IDENTITY(1u, min(1u, 1u)), 1u, 1u)), 1u, 0u)))))))))));
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  barrier();
 atomicStore(buf[_GLF_IDENTITY(_GLF_IDENTITY(virtual_gid, ~ (_GLF_IDENTITY(~ (virtual_gid), uint(_GLF_IDENTITY(uvec4(_GLF_IDENTITY(~ (virtual_gid), ~ (~ _GLF_IDENTITY((~ (virtual_gid)), 0u ^ ((~ (virtual_gid)))))), _GLF_IDENTITY(0u, min(0u, 0u)), 0u, 1u), (uvec4(_GLF_IDENTITY(_GLF_IDENTITY(~ (virtual_gid), _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(~ (virtual_gid), clamp(~ (virtual_gid), ~ (virtual_gid), _GLF_IDENTITY(~ (virtual_gid), max(~ (virtual_gid), ~ (virtual_gid))))), 1u, 1u), (uvec3(_GLF_IDENTITY(~ (virtual_gid), clamp(~ (virtual_gid), ~ (virtual_gid), _GLF_IDENTITY(~ (virtual_gid), max(~ (virtual_gid), ~ (virtual_gid))))), 1u, 1u)) | (uvec3(_GLF_IDENTITY(~ (virtual_gid), clamp(~ (virtual_gid), ~ (virtual_gid), _GLF_IDENTITY(~ (virtual_gid), max(~ (virtual_gid), ~ (virtual_gid))))), 1u, 1u)))), (uint(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(~ (virtual_gid), clamp(~ (virtual_gid), ~ (virtual_gid), _GLF_IDENTITY(~ (virtual_gid), max(~ (virtual_gid), ~ (virtual_gid))))), 1u, 1u), (uvec3(_GLF_IDENTITY(~ (virtual_gid), clamp(~ (virtual_gid), ~ (virtual_gid), _GLF_IDENTITY(~ (virtual_gid), max(~ (virtual_gid), ~ (virtual_gid))))), 1u, 1u)) | (uvec3(_GLF_IDENTITY(~ (virtual_gid), clamp(~ (virtual_gid), ~ (virtual_gid), _GLF_IDENTITY(~ (virtual_gid), max(~ (virtual_gid), ~ (virtual_gid))))), 1u, 1u))))) | (uint(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(~ (virtual_gid), clamp(~ (virtual_gid), ~ (virtual_gid), _GLF_IDENTITY(~ (virtual_gid), max(~ (virtual_gid), ~ (virtual_gid))))), 1u, 1u), (uvec3(_GLF_IDENTITY(~ (virtual_gid), clamp(~ (virtual_gid), ~ (virtual_gid), _GLF_IDENTITY(~ (virtual_gid), max(~ (virtual_gid), ~ (virtual_gid))))), 1u, 1u)) | (uvec3(_GLF_IDENTITY(~ (virtual_gid), clamp(~ (virtual_gid), ~ (virtual_gid), _GLF_IDENTITY(~ (virtual_gid), max(~ (virtual_gid), ~ (virtual_gid))))), 1u, 1u))))))), ~ (~ (~ (virtual_gid)))), 0u, 0u, 1u)) ^ uvec4(0u, 0u, 0u, 0u)))))), clamp(_GLF_IDENTITY(virtual_gid, _GLF_IDENTITY((true ? virtual_gid : _GLF_FUZZED(uaddCarry(workgroup_id, workgroup_id, workgroup_base))), ((true ? virtual_gid : _GLF_FUZZED(uaddCarry(workgroup_id, workgroup_id, workgroup_base)))) | 0u)), virtual_gid, virtual_gid))], uint(1), 4, 64, 4);
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false)), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false)), (_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false))) || false))))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(subgroup_local_id + 1, _GLF_IDENTITY(_GLF_IDENTITY(uint(uvec4(subgroup_local_id + 1, 0u, 1u, 0u)), 0u ^ (uint(uvec4(subgroup_local_id + 1, 0u, 1u, 0u)))), _GLF_IDENTITY((_GLF_IDENTITY(uint(uvec4(subgroup_local_id + 1, 0u, 1u, 0u)), 0u ^ (uint(uvec4(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, 0u ^ (_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, clamp(subgroup_local_id, subgroup_local_id, subgroup_local_id))) ^ 0u))) + 1, (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(workgroup_base) : subgroup_local_id + 1, min(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(workgroup_base) : subgroup_local_id + 1, uint(uint(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(workgroup_base) : subgroup_local_id + 1))), _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(workgroup_base) : subgroup_local_id + 1, (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(workgroup_base) : subgroup_local_id + 1, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(workgroup_base) : subgroup_local_id + 1) / 1u)) >> 0u))))), 0u, 1u, 0u))))) >> 0u, uint(_GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY((_GLF_IDENTITY(uint(uvec4(subgroup_local_id + 1, 0u, 1u, 0u)), 0u ^ _GLF_IDENTITY((uint(uvec4(_GLF_IDENTITY(subgroup_local_id + 1, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(workgroup_base) : subgroup_local_id + 1)), 0u, 1u, 0u))), (_GLF_IDENTITY(true, (true) && true) ? (uint(uvec4(_GLF_IDENTITY(subgroup_local_id + 1, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(workgroup_base) : subgroup_local_id + 1)), 0u, 1u, 0u))) : _GLF_FUZZED(num_workgroup))))) >> 0u, min((_GLF_IDENTITY(uint(uvec4(subgroup_local_id + 1, 0u, 1u, 0u)), 0u ^ (uint(uvec4(_GLF_IDENTITY(subgroup_local_id + 1, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_IDENTITY(_GLF_FUZZED(workgroup_base), (_GLF_FUZZED(workgroup_base)) / uint(_GLF_ONE(1.0, injectionSwitch.y))) : subgroup_local_id + 1)), 0u, 1u, 0u))))) >> 0u, (_GLF_IDENTITY(uint(uvec4(_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) / 1u), 0u, 1u, 0u)), 0u ^ (uint(uvec4(_GLF_IDENTITY(subgroup_local_id + 1, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_IDENTITY(_GLF_FUZZED(workgroup_base), (_GLF_FUZZED(workgroup_base)) ^ 0u) : subgroup_local_id + 1)), 0u, 1u, 0u))))) >> 0u))), 0u | (uint(_GLF_IDENTITY((_GLF_IDENTITY(uint(uvec4(subgroup_local_id + 1, 0u, 1u, 0u)), 0u ^ (_GLF_IDENTITY(uint(uvec4(_GLF_IDENTITY(subgroup_local_id + 1, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(workgroup_base) : subgroup_local_id + 1)), 0u, 1u, 0u)), clamp(uint(uvec4(_GLF_IDENTITY(subgroup_local_id + 1, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(workgroup_base) : subgroup_local_id + 1)), 0u, 1u, 0u)), uint(uvec4(_GLF_IDENTITY(subgroup_local_id + 1, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(workgroup_base) : subgroup_local_id + 1)), 0u, 1u, 0u)), uint(uvec4(_GLF_IDENTITY(subgroup_local_id + 1, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(workgroup_base) : subgroup_local_id + 1)), 0u, 1u, 0u))))))) >> 0u, min(_GLF_IDENTITY((_GLF_IDENTITY(uint(uvec4(subgroup_local_id + 1, 0u, 1u, 0u)), 0u ^ (uint(uvec4(_GLF_IDENTITY(subgroup_local_id + 1, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(workgroup_base) : subgroup_local_id + 1)), 0u, 1u, 0u))))) >> 0u, ((_GLF_IDENTITY(uint(uvec4(subgroup_local_id + 1, 0u, 1u, 0u)), 0u ^ (uint(uvec4(_GLF_IDENTITY(subgroup_local_id + 1, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(workgroup_base) : subgroup_local_id + 1)), 0u, 1u, 0u))))) >> 0u) | ((_GLF_IDENTITY(uint(uvec4(subgroup_local_id + 1, 0u, 1u, 0u)), 0u ^ (uint(uvec4(_GLF_IDENTITY(subgroup_local_id + 1, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(workgroup_base) : subgroup_local_id + 1)), 0u, 1u, 0u))))) >> 0u)), (_GLF_IDENTITY(uint(uvec4(subgroup_local_id + 1, 0u, 1u, 0u)), 0u ^ (uint(uvec4(_GLF_IDENTITY(subgroup_local_id + 1, _GLF_IDENTITY((_GLF_FALSE(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec2(bvec2(false, false)))))), (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(workgroup_base) : _GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, max(subgroup_local_id, subgroup_local_id))) ^ _GLF_IDENTITY(0u, clamp(0u, 0u, 0u))) + 1), max(_GLF_IDENTITY((_GLF_FALSE(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec2(bvec2(false, false)))))), (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(workgroup_base) : _GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, max(subgroup_local_id, subgroup_local_id))) ^ _GLF_IDENTITY(0u, clamp(0u, 0u, 0u))) + 1), ((_GLF_FALSE(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec2(bvec2(false, false)))))), (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(workgroup_base) : _GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, max(subgroup_local_id, subgroup_local_id))) ^ _GLF_IDENTITY(0u, clamp(0u, 0u, 0u))) + 1)) | 0u), (_GLF_FALSE(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec2(bvec2(false, false)))))), (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(workgroup_base) : _GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, max(subgroup_local_id, subgroup_local_id))) ^ _GLF_IDENTITY(0u, clamp(0u, 0u, 0u))) + 1)))), 0u, 1u, 0u))))) >> 0u))))), clamp(_GLF_IDENTITY(uint(_GLF_IDENTITY((_GLF_IDENTITY(uint(uvec4(subgroup_local_id + 1, 0u, 1u, 0u)), 0u ^ _GLF_IDENTITY((uint(uvec4(_GLF_IDENTITY(subgroup_local_id + 1, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(workgroup_base) : subgroup_local_id + 1)), 0u, 1u, 0u))), (_GLF_IDENTITY(true, (true) && true) ? (uint(uvec4(_GLF_IDENTITY(subgroup_local_id + 1, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(workgroup_base) : subgroup_local_id + 1)), 0u, 1u, 0u))) : _GLF_FUZZED(num_workgroup))))) >> 0u, min((_GLF_IDENTITY(uint(uvec4(subgroup_local_id + 1, 0u, 1u, 0u)), 0u ^ (uint(uvec4(_GLF_IDENTITY(subgroup_local_id + 1, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_IDENTITY(_GLF_FUZZED(workgroup_base), (_GLF_FUZZED(workgroup_base)) / uint(_GLF_ONE(1.0, injectionSwitch.y))) : subgroup_local_id + 1)), 0u, 1u, 0u))))) >> 0u, (_GLF_IDENTITY(uint(uvec4(_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) / 1u), 0u, 1u, 0u)), 0u ^ (uint(uvec4(_GLF_IDENTITY(subgroup_local_id + 1, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_IDENTITY(_GLF_FUZZED(workgroup_base), (_GLF_FUZZED(workgroup_base)) ^ 0u) : subgroup_local_id + 1)), 0u, 1u, 0u))))) >> 0u))), 0u | (uint(_GLF_IDENTITY((_GLF_IDENTITY(uint(uvec4(subgroup_local_id + 1, 0u, 1u, 0u)), 0u ^ (_GLF_IDENTITY(uint(uvec4(_GLF_IDENTITY(subgroup_local_id + 1, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(workgroup_base) : subgroup_local_id + 1)), 0u, 1u, 0u)), clamp(uint(uvec4(_GLF_IDENTITY(subgroup_local_id + 1, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(workgroup_base) : subgroup_local_id + 1)), 0u, 1u, 0u)), uint(uvec4(_GLF_IDENTITY(subgroup_local_id + 1, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(workgroup_base) : subgroup_local_id + 1)), 0u, 1u, 0u)), uint(uvec4(_GLF_IDENTITY(subgroup_local_id + 1, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(workgroup_base) : subgroup_local_id + 1)), 0u, 1u, 0u))))))) >> 0u, min(_GLF_IDENTITY((_GLF_IDENTITY(uint(uvec4(subgroup_local_id + 1, 0u, 1u, 0u)), 0u ^ (uint(uvec4(_GLF_IDENTITY(subgroup_local_id + 1, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(workgroup_base) : subgroup_local_id + 1)), 0u, 1u, 0u))))) >> 0u, ((_GLF_IDENTITY(uint(uvec4(subgroup_local_id + 1, 0u, 1u, 0u)), 0u ^ (uint(uvec4(_GLF_IDENTITY(subgroup_local_id + 1, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(workgroup_base) : subgroup_local_id + 1)), 0u, 1u, 0u))))) >> 0u) | ((_GLF_IDENTITY(uint(uvec4(subgroup_local_id + 1, 0u, 1u, 0u)), 0u ^ (uint(uvec4(_GLF_IDENTITY(subgroup_local_id + 1, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(workgroup_base) : subgroup_local_id + 1)), 0u, 1u, 0u))))) >> 0u)), (_GLF_IDENTITY(uint(uvec4(subgroup_local_id + 1, 0u, 1u, 0u)), 0u ^ (uint(uvec4(_GLF_IDENTITY(subgroup_local_id + 1, _GLF_IDENTITY((_GLF_FALSE(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec2(bvec2(false, false)))))), (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(workgroup_base) : _GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, max(subgroup_local_id, subgroup_local_id))) ^ _GLF_IDENTITY(0u, clamp(0u, 0u, 0u))) + 1), max(_GLF_IDENTITY((_GLF_FALSE(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec2(bvec2(false, false)))))), (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(workgroup_base) : _GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, max(subgroup_local_id, subgroup_local_id))) ^ _GLF_IDENTITY(0u, clamp(0u, 0u, 0u))) + 1), ((_GLF_FALSE(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec2(bvec2(false, false)))))), (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(workgroup_base) : _GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, max(subgroup_local_id, subgroup_local_id))) ^ _GLF_IDENTITY(0u, clamp(0u, 0u, 0u))) + 1)) | 0u), (_GLF_FALSE(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec2(bvec2(false, false)))))), (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(workgroup_base) : _GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, max(subgroup_local_id, subgroup_local_id))) ^ _GLF_IDENTITY(0u, clamp(0u, 0u, 0u))) + 1)))), 0u, 1u, 0u))))) >> 0u))))), _GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY((_GLF_IDENTITY(uint(uvec4(subgroup_local_id + 1, 0u, 1u, 0u)), 0u ^ _GLF_IDENTITY((uint(uvec4(_GLF_IDENTITY(subgroup_local_id + 1, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(workgroup_base) : subgroup_local_id + 1)), 0u, 1u, 0u))), (_GLF_IDENTITY(true, (true) && true) ? (uint(uvec4(_GLF_IDENTITY(subgroup_local_id + 1, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(workgroup_base) : subgroup_local_id + 1)), 0u, 1u, 0u))) : _GLF_FUZZED(num_workgroup))))) >> 0u, min((_GLF_IDENTITY(uint(uvec4(subgroup_local_id + 1, 0u, 1u, 0u)), 0u ^ (uint(uvec4(_GLF_IDENTITY(subgroup_local_id + 1, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_IDENTITY(_GLF_FUZZED(workgroup_base), (_GLF_FUZZED(workgroup_base)) / uint(_GLF_ONE(1.0, injectionSwitch.y))) : subgroup_local_id + 1)), 0u, 1u, 0u))))) >> 0u, (_GLF_IDENTITY(uint(uvec4(_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) / 1u), 0u, 1u, 0u)), 0u ^ (uint(uvec4(_GLF_IDENTITY(subgroup_local_id + 1, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_IDENTITY(_GLF_FUZZED(workgroup_base), (_GLF_FUZZED(workgroup_base)) ^ 0u) : subgroup_local_id + 1)), 0u, 1u, 0u))))) >> 0u))), 0u | (uint(_GLF_IDENTITY((_GLF_IDENTITY(uint(uvec4(subgroup_local_id + 1, 0u, 1u, 0u)), 0u ^ (_GLF_IDENTITY(uint(uvec4(_GLF_IDENTITY(subgroup_local_id + 1, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(workgroup_base) : subgroup_local_id + 1)), 0u, 1u, 0u)), clamp(uint(uvec4(_GLF_IDENTITY(subgroup_local_id + 1, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(workgroup_base) : subgroup_local_id + 1)), 0u, 1u, 0u)), uint(uvec4(_GLF_IDENTITY(subgroup_local_id + 1, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(workgroup_base) : subgroup_local_id + 1)), 0u, 1u, 0u)), uint(uvec4(_GLF_IDENTITY(subgroup_local_id + 1, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(workgroup_base) : subgroup_local_id + 1)), 0u, 1u, 0u))))))) >> 0u, min(_GLF_IDENTITY((_GLF_IDENTITY(uint(uvec4(subgroup_local_id + 1, 0u, 1u, 0u)), 0u ^ (uint(uvec4(_GLF_IDENTITY(subgroup_local_id + 1, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(workgroup_base) : subgroup_local_id + 1)), 0u, 1u, 0u))))) >> 0u, ((_GLF_IDENTITY(uint(uvec4(subgroup_local_id + 1, 0u, 1u, 0u)), 0u ^ (uint(uvec4(_GLF_IDENTITY(subgroup_local_id + 1, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(workgroup_base) : subgroup_local_id + 1)), 0u, 1u, 0u))))) >> 0u) | ((_GLF_IDENTITY(uint(uvec4(subgroup_local_id + 1, 0u, 1u, 0u)), 0u ^ (uint(uvec4(_GLF_IDENTITY(subgroup_local_id + 1, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(workgroup_base) : subgroup_local_id + 1)), 0u, 1u, 0u))))) >> 0u)), (_GLF_IDENTITY(uint(uvec4(subgroup_local_id + 1, 0u, 1u, 0u)), 0u ^ (uint(uvec4(_GLF_IDENTITY(subgroup_local_id + 1, _GLF_IDENTITY((_GLF_FALSE(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec2(bvec2(false, false)))))), (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(workgroup_base) : _GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, max(subgroup_local_id, subgroup_local_id))) ^ _GLF_IDENTITY(0u, clamp(0u, 0u, 0u))) + 1), max(_GLF_IDENTITY((_GLF_FALSE(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec2(bvec2(false, false)))))), (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(workgroup_base) : _GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, max(subgroup_local_id, subgroup_local_id))) ^ _GLF_IDENTITY(0u, clamp(0u, 0u, 0u))) + 1), ((_GLF_FALSE(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec2(bvec2(false, false)))))), (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(workgroup_base) : _GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, max(subgroup_local_id, subgroup_local_id))) ^ _GLF_IDENTITY(0u, clamp(0u, 0u, 0u))) + 1)) | 0u), (_GLF_FALSE(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec2(bvec2(false, false)))))), (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(workgroup_base) : _GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, max(subgroup_local_id, subgroup_local_id))) ^ _GLF_IDENTITY(0u, clamp(0u, 0u, 0u))) + 1)))), 0u, 1u, 0u))))) >> 0u))))), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(uint(_GLF_IDENTITY((_GLF_IDENTITY(uint(uvec4(subgroup_local_id + 1, 0u, 1u, 0u)), 0u ^ _GLF_IDENTITY((uint(uvec4(_GLF_IDENTITY(subgroup_local_id + 1, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(workgroup_base) : subgroup_local_id + 1)), 0u, 1u, 0u))), (_GLF_IDENTITY(true, (true) && true) ? (uint(uvec4(_GLF_IDENTITY(subgroup_local_id + 1, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(workgroup_base) : subgroup_local_id + 1)), 0u, 1u, 0u))) : _GLF_FUZZED(num_workgroup))))) >> 0u, min((_GLF_IDENTITY(uint(uvec4(subgroup_local_id + 1, 0u, 1u, 0u)), 0u ^ (uint(uvec4(_GLF_IDENTITY(subgroup_local_id + 1, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_IDENTITY(_GLF_FUZZED(workgroup_base), (_GLF_FUZZED(workgroup_base)) / uint(_GLF_ONE(1.0, injectionSwitch.y))) : subgroup_local_id + 1)), 0u, 1u, 0u))))) >> 0u, (_GLF_IDENTITY(uint(uvec4(_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) / 1u), 0u, 1u, 0u)), 0u ^ (uint(uvec4(_GLF_IDENTITY(subgroup_local_id + 1, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_IDENTITY(_GLF_FUZZED(workgroup_base), (_GLF_FUZZED(workgroup_base)) ^ 0u) : subgroup_local_id + 1)), 0u, 1u, 0u))))) >> 0u))), 0u | (uint(_GLF_IDENTITY((_GLF_IDENTITY(uint(uvec4(subgroup_local_id + 1, 0u, 1u, 0u)), 0u ^ (_GLF_IDENTITY(uint(uvec4(_GLF_IDENTITY(subgroup_local_id + 1, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(workgroup_base) : subgroup_local_id + 1)), 0u, 1u, 0u)), clamp(uint(uvec4(_GLF_IDENTITY(subgroup_local_id + 1, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(workgroup_base) : subgroup_local_id + 1)), 0u, 1u, 0u)), uint(uvec4(_GLF_IDENTITY(subgroup_local_id + 1, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(workgroup_base) : subgroup_local_id + 1)), 0u, 1u, 0u)), uint(uvec4(_GLF_IDENTITY(subgroup_local_id + 1, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(workgroup_base) : subgroup_local_id + 1)), 0u, 1u, 0u))))))) >> 0u, min(_GLF_IDENTITY((_GLF_IDENTITY(uint(uvec4(subgroup_local_id + 1, 0u, 1u, 0u)), 0u ^ (uint(uvec4(_GLF_IDENTITY(subgroup_local_id + 1, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(workgroup_base) : subgroup_local_id + 1)), 0u, 1u, 0u))))) >> 0u, ((_GLF_IDENTITY(uint(uvec4(subgroup_local_id + 1, 0u, 1u, 0u)), 0u ^ (uint(uvec4(_GLF_IDENTITY(subgroup_local_id + 1, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(workgroup_base) : subgroup_local_id + 1)), 0u, 1u, 0u))))) >> 0u) | ((_GLF_IDENTITY(uint(uvec4(subgroup_local_id + 1, 0u, 1u, 0u)), 0u ^ (uint(uvec4(_GLF_IDENTITY(subgroup_local_id + 1, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(workgroup_base) : subgroup_local_id + 1)), 0u, 1u, 0u))))) >> 0u)), (_GLF_IDENTITY(uint(uvec4(subgroup_local_id + 1, 0u, 1u, 0u)), 0u ^ (uint(uvec4(_GLF_IDENTITY(subgroup_local_id + 1, _GLF_IDENTITY((_GLF_FALSE(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec2(bvec2(false, false)))))), (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(workgroup_base) : _GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, max(subgroup_local_id, subgroup_local_id))) ^ _GLF_IDENTITY(0u, clamp(0u, 0u, 0u))) + 1), max(_GLF_IDENTITY((_GLF_FALSE(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec2(bvec2(false, false)))))), (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(workgroup_base) : _GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, max(subgroup_local_id, subgroup_local_id))) ^ _GLF_IDENTITY(0u, clamp(0u, 0u, 0u))) + 1), ((_GLF_FALSE(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec2(bvec2(false, false)))))), (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(workgroup_base) : _GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, max(subgroup_local_id, subgroup_local_id))) ^ _GLF_IDENTITY(0u, clamp(0u, 0u, 0u))) + 1)) | 0u), (_GLF_FALSE(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec2(bvec2(false, false)))))), (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(workgroup_base) : _GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, max(subgroup_local_id, subgroup_local_id))) ^ _GLF_IDENTITY(0u, clamp(0u, 0u, 0u))) + 1)))), 0u, 1u, 0u))))) >> 0u)))))), (~ (_GLF_IDENTITY(uint(_GLF_IDENTITY((_GLF_IDENTITY(uint(uvec4(subgroup_local_id + 1, 0u, 1u, 0u)), 0u ^ _GLF_IDENTITY((uint(uvec4(_GLF_IDENTITY(subgroup_local_id + 1, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(workgroup_base) : subgroup_local_id + 1)), 0u, 1u, 0u))), (_GLF_IDENTITY(true, (true) && true) ? (uint(uvec4(_GLF_IDENTITY(subgroup_local_id + 1, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(workgroup_base) : subgroup_local_id + 1)), 0u, 1u, 0u))) : _GLF_FUZZED(num_workgroup))))) >> 0u, min((_GLF_IDENTITY(uint(uvec4(subgroup_local_id + 1, 0u, 1u, 0u)), 0u ^ (uint(uvec4(_GLF_IDENTITY(subgroup_local_id + 1, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_IDENTITY(_GLF_FUZZED(workgroup_base), (_GLF_FUZZED(workgroup_base)) / uint(_GLF_ONE(1.0, injectionSwitch.y))) : subgroup_local_id + 1)), 0u, 1u, 0u))))) >> 0u, (_GLF_IDENTITY(uint(uvec4(_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) / 1u), 0u, 1u, 0u)), 0u ^ (uint(uvec4(_GLF_IDENTITY(subgroup_local_id + 1, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_IDENTITY(_GLF_FUZZED(workgroup_base), (_GLF_FUZZED(workgroup_base)) ^ 0u) : subgroup_local_id + 1)), 0u, 1u, 0u))))) >> 0u))), 0u | (uint(_GLF_IDENTITY((_GLF_IDENTITY(uint(uvec4(subgroup_local_id + 1, 0u, 1u, 0u)), 0u ^ (_GLF_IDENTITY(uint(uvec4(_GLF_IDENTITY(subgroup_local_id + 1, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(workgroup_base) : subgroup_local_id + 1)), 0u, 1u, 0u)), clamp(uint(uvec4(_GLF_IDENTITY(subgroup_local_id + 1, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(workgroup_base) : subgroup_local_id + 1)), 0u, 1u, 0u)), uint(uvec4(_GLF_IDENTITY(subgroup_local_id + 1, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(workgroup_base) : subgroup_local_id + 1)), 0u, 1u, 0u)), uint(uvec4(_GLF_IDENTITY(subgroup_local_id + 1, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(workgroup_base) : subgroup_local_id + 1)), 0u, 1u, 0u))))))) >> 0u, min(_GLF_IDENTITY((_GLF_IDENTITY(uint(uvec4(subgroup_local_id + 1, 0u, 1u, 0u)), 0u ^ (uint(uvec4(_GLF_IDENTITY(subgroup_local_id + 1, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(workgroup_base) : subgroup_local_id + 1)), 0u, 1u, 0u))))) >> 0u, ((_GLF_IDENTITY(uint(uvec4(subgroup_local_id + 1, 0u, 1u, 0u)), 0u ^ (uint(uvec4(_GLF_IDENTITY(subgroup_local_id + 1, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(workgroup_base) : subgroup_local_id + 1)), 0u, 1u, 0u))))) >> 0u) | ((_GLF_IDENTITY(uint(uvec4(subgroup_local_id + 1, 0u, 1u, 0u)), 0u ^ (uint(uvec4(_GLF_IDENTITY(subgroup_local_id + 1, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(workgroup_base) : subgroup_local_id + 1)), 0u, 1u, 0u))))) >> 0u)), (_GLF_IDENTITY(uint(uvec4(subgroup_local_id + 1, 0u, 1u, 0u)), 0u ^ (uint(uvec4(_GLF_IDENTITY(subgroup_local_id + 1, _GLF_IDENTITY((_GLF_FALSE(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec2(bvec2(false, false)))))), (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(workgroup_base) : _GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, max(subgroup_local_id, subgroup_local_id))) ^ _GLF_IDENTITY(0u, clamp(0u, 0u, 0u))) + 1), max(_GLF_IDENTITY((_GLF_FALSE(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec2(bvec2(false, false)))))), (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(workgroup_base) : _GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, max(subgroup_local_id, subgroup_local_id))) ^ _GLF_IDENTITY(0u, clamp(0u, 0u, 0u))) + 1), ((_GLF_FALSE(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec2(bvec2(false, false)))))), (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(workgroup_base) : _GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, max(subgroup_local_id, subgroup_local_id))) ^ _GLF_IDENTITY(0u, clamp(0u, 0u, 0u))) + 1)) | 0u), (_GLF_FALSE(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec2(bvec2(false, false)))))), (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(workgroup_base) : _GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, max(subgroup_local_id, subgroup_local_id))) ^ _GLF_IDENTITY(0u, clamp(0u, 0u, 0u))) + 1)))), 0u, 1u, 0u))))) >> 0u))))))) / 1u))), _GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY((_GLF_IDENTITY(uint(uvec4(subgroup_local_id + 1, 0u, 1u, 0u)), 0u ^ _GLF_IDENTITY((uint(uvec4(_GLF_IDENTITY(subgroup_local_id + 1, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(workgroup_base) : subgroup_local_id + 1)), 0u, 1u, 0u))), (_GLF_IDENTITY(true, (true) && true) ? (uint(uvec4(_GLF_IDENTITY(subgroup_local_id + 1, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(workgroup_base) : subgroup_local_id + 1)), 0u, 1u, 0u))) : _GLF_FUZZED(num_workgroup))))) >> 0u, min((_GLF_IDENTITY(uint(uvec4(subgroup_local_id + 1, 0u, 1u, 0u)), 0u ^ (uint(uvec4(_GLF_IDENTITY(subgroup_local_id + 1, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_IDENTITY(_GLF_FUZZED(workgroup_base), (_GLF_FUZZED(workgroup_base)) / uint(_GLF_ONE(1.0, injectionSwitch.y))) : subgroup_local_id + 1)), 0u, 1u, 0u))))) >> 0u, (_GLF_IDENTITY(uint(uvec4(_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) / 1u), 0u, 1u, 0u)), 0u ^ (uint(uvec4(_GLF_IDENTITY(subgroup_local_id + 1, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_IDENTITY(_GLF_FUZZED(workgroup_base), (_GLF_FUZZED(workgroup_base)) ^ 0u) : subgroup_local_id + 1)), 0u, 1u, 0u))))) >> 0u))), 0u | (uint(_GLF_IDENTITY((_GLF_IDENTITY(uint(uvec4(subgroup_local_id + 1, 0u, 1u, 0u)), 0u ^ (_GLF_IDENTITY(uint(uvec4(_GLF_IDENTITY(subgroup_local_id + 1, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(workgroup_base) : subgroup_local_id + 1)), 0u, 1u, 0u)), clamp(uint(uvec4(_GLF_IDENTITY(subgroup_local_id + 1, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(workgroup_base) : subgroup_local_id + 1)), 0u, 1u, 0u)), uint(uvec4(_GLF_IDENTITY(subgroup_local_id + 1, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(workgroup_base) : subgroup_local_id + 1)), 0u, 1u, 0u)), uint(uvec4(_GLF_IDENTITY(subgroup_local_id + 1, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(workgroup_base) : subgroup_local_id + 1)), 0u, 1u, 0u))))))) >> 0u, min(_GLF_IDENTITY((_GLF_IDENTITY(uint(uvec4(subgroup_local_id + 1, 0u, 1u, 0u)), 0u ^ (uint(uvec4(_GLF_IDENTITY(subgroup_local_id + 1, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(workgroup_base) : subgroup_local_id + 1)), 0u, 1u, 0u))))) >> 0u, ((_GLF_IDENTITY(uint(uvec4(subgroup_local_id + 1, 0u, 1u, 0u)), 0u ^ (uint(uvec4(_GLF_IDENTITY(subgroup_local_id + 1, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(workgroup_base) : subgroup_local_id + 1)), 0u, 1u, 0u))))) >> 0u) | ((_GLF_IDENTITY(uint(uvec4(subgroup_local_id + 1, 0u, 1u, 0u)), 0u ^ (uint(uvec4(_GLF_IDENTITY(subgroup_local_id + 1, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(workgroup_base) : subgroup_local_id + 1)), 0u, 1u, 0u))))) >> 0u)), (_GLF_IDENTITY(uint(uvec4(subgroup_local_id + 1, 0u, 1u, 0u)), 0u ^ (uint(uvec4(_GLF_IDENTITY(subgroup_local_id + 1, _GLF_IDENTITY((_GLF_FALSE(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec2(bvec2(false, false)))))), (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(workgroup_base) : _GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, max(subgroup_local_id, subgroup_local_id))) ^ _GLF_IDENTITY(0u, clamp(0u, 0u, 0u))) + 1), max(_GLF_IDENTITY((_GLF_FALSE(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec2(bvec2(false, false)))))), (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(workgroup_base) : _GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, max(subgroup_local_id, subgroup_local_id))) ^ _GLF_IDENTITY(0u, clamp(0u, 0u, 0u))) + 1), ((_GLF_FALSE(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec2(bvec2(false, false)))))), (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(workgroup_base) : _GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, max(subgroup_local_id, subgroup_local_id))) ^ _GLF_IDENTITY(0u, clamp(0u, 0u, 0u))) + 1)) | 0u), (_GLF_FALSE(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec2(bvec2(false, false)))))), (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(workgroup_base) : _GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, max(subgroup_local_id, subgroup_local_id))) ^ _GLF_IDENTITY(0u, clamp(0u, 0u, 0u))) + 1)))), 0u, 1u, 0u))))) >> 0u))))), (false ? _GLF_FUZZED(virtual_gid) : _GLF_IDENTITY(uint(_GLF_IDENTITY((_GLF_IDENTITY(uint(uvec4(subgroup_local_id + 1, 0u, 1u, 0u)), 0u ^ _GLF_IDENTITY((uint(uvec4(_GLF_IDENTITY(subgroup_local_id + 1, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(workgroup_base) : subgroup_local_id + 1)), 0u, 1u, 0u))), (_GLF_IDENTITY(true, (true) && true) ? (uint(uvec4(_GLF_IDENTITY(subgroup_local_id + 1, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(workgroup_base) : subgroup_local_id + 1)), 0u, 1u, 0u))) : _GLF_FUZZED(num_workgroup))))) >> 0u, min((_GLF_IDENTITY(uint(uvec4(subgroup_local_id + 1, 0u, 1u, 0u)), 0u ^ (uint(uvec4(_GLF_IDENTITY(subgroup_local_id + 1, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_IDENTITY(_GLF_FUZZED(workgroup_base), (_GLF_FUZZED(workgroup_base)) / uint(_GLF_ONE(1.0, injectionSwitch.y))) : subgroup_local_id + 1)), 0u, 1u, 0u))))) >> 0u, (_GLF_IDENTITY(uint(uvec4(_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) / 1u), 0u, 1u, 0u)), 0u ^ (uint(uvec4(_GLF_IDENTITY(subgroup_local_id + 1, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_IDENTITY(_GLF_FUZZED(workgroup_base), (_GLF_FUZZED(workgroup_base)) ^ 0u) : subgroup_local_id + 1)), 0u, 1u, 0u))))) >> 0u))), 0u | (uint(_GLF_IDENTITY((_GLF_IDENTITY(uint(uvec4(subgroup_local_id + 1, 0u, 1u, 0u)), 0u ^ (_GLF_IDENTITY(uint(uvec4(_GLF_IDENTITY(subgroup_local_id + 1, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(workgroup_base) : subgroup_local_id + 1)), 0u, 1u, 0u)), clamp(uint(uvec4(_GLF_IDENTITY(subgroup_local_id + 1, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(workgroup_base) : subgroup_local_id + 1)), 0u, 1u, 0u)), uint(uvec4(_GLF_IDENTITY(subgroup_local_id + 1, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(workgroup_base) : subgroup_local_id + 1)), 0u, 1u, 0u)), uint(uvec4(_GLF_IDENTITY(subgroup_local_id + 1, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(workgroup_base) : subgroup_local_id + 1)), 0u, 1u, 0u))))))) >> 0u, min(_GLF_IDENTITY((_GLF_IDENTITY(uint(uvec4(subgroup_local_id + 1, 0u, 1u, 0u)), 0u ^ (uint(uvec4(_GLF_IDENTITY(subgroup_local_id + 1, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(workgroup_base) : subgroup_local_id + 1)), 0u, 1u, 0u))))) >> 0u, ((_GLF_IDENTITY(uint(uvec4(subgroup_local_id + 1, 0u, 1u, 0u)), 0u ^ (uint(uvec4(_GLF_IDENTITY(subgroup_local_id + 1, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(workgroup_base) : subgroup_local_id + 1)), 0u, 1u, 0u))))) >> 0u) | ((_GLF_IDENTITY(uint(uvec4(subgroup_local_id + 1, 0u, 1u, 0u)), 0u ^ (uint(uvec4(_GLF_IDENTITY(subgroup_local_id + 1, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(workgroup_base) : subgroup_local_id + 1)), 0u, 1u, 0u))))) >> 0u)), (_GLF_IDENTITY(uint(uvec4(subgroup_local_id + 1, 0u, 1u, 0u)), 0u ^ (uint(uvec4(_GLF_IDENTITY(subgroup_local_id + 1, _GLF_IDENTITY((_GLF_FALSE(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec2(bvec2(false, false)))))), (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(workgroup_base) : _GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, max(subgroup_local_id, subgroup_local_id))) ^ _GLF_IDENTITY(0u, clamp(0u, 0u, 0u))) + 1), max(_GLF_IDENTITY((_GLF_FALSE(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec2(bvec2(false, false)))))), (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(workgroup_base) : _GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, max(subgroup_local_id, subgroup_local_id))) ^ _GLF_IDENTITY(0u, clamp(0u, 0u, 0u))) + 1), ((_GLF_FALSE(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec2(bvec2(false, false)))))), (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(workgroup_base) : _GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, max(subgroup_local_id, subgroup_local_id))) ^ _GLF_IDENTITY(0u, clamp(0u, 0u, 0u))) + 1)) | 0u), (_GLF_FALSE(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec2(bvec2(false, false)))))), (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(workgroup_base) : _GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, max(subgroup_local_id, subgroup_local_id))) ^ _GLF_IDENTITY(0u, clamp(0u, 0u, 0u))) + 1)))), 0u, 1u, 0u))))) >> 0u))))))))))))) < _GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(min(_GLF_IDENTITY(subgroup_size, (true ? _GLF_IDENTITY(subgroup_size, ~ (_GLF_IDENTITY(~ (subgroup_size), 0u + (~ (subgroup_size))))) : _GLF_FUZZED(next_virtual_gid))), subgroup_size), max(min(subgroup_size, subgroup_size), min(subgroup_size, subgroup_size)))))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_DEAD(false))))))))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), ! (! (! (_GLF_DEAD(false))))))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            return;
           barrier();
          }
         barrier();
        }
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         barrier();
        }
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, (false) && true)))))
        barrier();
       if(_GLF_DEAD(false))
        return;
       return;
      }
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, true, false)), bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec3(false, true, false)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(bool(bvec3(false, true, false)), ! (! (bool(bvec3(false, true, false)))))), ! (! (! (_GLF_IDENTITY(bool(bvec3(false, true, false)), ! (! (bool(bvec3(false, true, false))))))))))), false || (_GLF_IDENTITY(bool(bvec3(false, true, false)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(bool(bvec3(false, true, false)), ! (! (bool(bvec3(false, true, false)))))), ! (! (! (_GLF_IDENTITY(bool(bvec3(false, true, false)), ! (! (bool(bvec3(false, true, false))))))))))))), true, false, false)))), false, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   atomicStore(buf[next_virtual_gid], uint(2), _GLF_IDENTITY(4, clamp(_GLF_IDENTITY(_GLF_IDENTITY(4, _GLF_IDENTITY(0, (false ? _GLF_FUZZED(-10428) : 0)) ^ (4)), 0 ^ (_GLF_IDENTITY(4, _GLF_IDENTITY(0, (false ? _GLF_FUZZED(-10428) : _GLF_IDENTITY(0, (0) << 0))) ^ (4)))), 4, 4)), 64, 4);
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(false || (false), false || (false || _GLF_IDENTITY((false), bool(bool(_GLF_IDENTITY((false), true && ((false)))))))))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            return;
           return;
          }
         barrier();
        }
       return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(mat4(injectionSwitch.x, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, length(vec4(0.0, 0.0, 0.0, 0.0)), abs(0.0), 0.0, 1.0, _GLF_IDENTITY(dot(vec3(_GLF_ZERO(0.0, injectionSwitch.x), 0.0, 1.0), vec3(0.0, 0.0, 1.0)), _GLF_IDENTITY(dot(vec3(_GLF_ZERO(0.0, injectionSwitch.x), 0.0, 1.0), vec3(0.0, 0.0, 1.0)), clamp(dot(vec3(_GLF_ZERO(0.0, injectionSwitch.x), 0.0, 1.0), vec3(0.0, 0.0, 1.0)), dot(vec3(_GLF_ZERO(0.0, injectionSwitch.x), 0.0, 1.0), vec3(0.0, 0.0, 1.0)), dot(vec3(_GLF_ZERO(0.0, injectionSwitch.x), 0.0, 1.0), vec3(0.0, 0.0, 1.0))))))), (float(mat4(injectionSwitch.x, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, length(vec4(0.0, 0.0, 0.0, 0.0)), abs(0.0), 0.0, 1.0, _GLF_IDENTITY(dot(vec3(_GLF_ZERO(0.0, injectionSwitch.x), 0.0, 1.0), vec3(0.0, 0.0, 1.0)), _GLF_IDENTITY(dot(vec3(_GLF_ZERO(0.0, injectionSwitch.x), 0.0, 1.0), vec3(0.0, 0.0, 1.0)), clamp(dot(vec3(_GLF_ZERO(0.0, injectionSwitch.x), 0.0, 1.0), vec3(0.0, 0.0, 1.0)), dot(vec3(_GLF_ZERO(0.0, injectionSwitch.x), 0.0, 1.0), vec3(0.0, 0.0, 1.0)), dot(vec3(_GLF_ZERO(0.0, injectionSwitch.x), 0.0, 1.0), vec3(0.0, 0.0, 1.0)))))))) / 1.0)) > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
     if(_GLF_DEAD(false))
      return;
    }
   subgroupAll(_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), true && (! (! (false))))));
   if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_DEAD(false), false || _GLF_IDENTITY((_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_DEAD(false), true)))), false || ((_GLF_DEAD(false)))))), bool(bvec4((_GLF_IDENTITY(_GLF_DEAD(false), false || _GLF_IDENTITY((_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_DEAD(false), true)))), false || ((_GLF_DEAD(false)))))), false, false, false))) && true))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
  }
 else
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, ! (! (false)))))))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, false, false)))))
      return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, float(_GLF_IDENTITY(float(injectionSwitch.y), min(float(injectionSwitch.y), float(injectionSwitch.y))))), _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + 0.0), _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + 0.0)))))))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            return;
           return;
          }
         barrier();
        }
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         return;
         if(_GLF_DEAD(false))
          return;
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       barrier();
      }
     if(_GLF_DEAD(false))
      return;
     barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(52.17, -35.37)) : injectionSwitch)), _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))).x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
    }
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))
    barrier();
   atomicStore(buf[next_virtual_gid], uint(2), 4, 64, 4);
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
    barrier();
   subgroupAll(true);
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), ! (! (false)))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, false || (false)))))))
      return;
     barrier();
    }
  }
}
