#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer WriteVal {
 uint write_val;
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 uint subgroup_id = gl_SubgroupID;
 uint subgroup_size = gl_SubgroupSize;
 do
  {
   if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(_GLF_DEAD(false), _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(_GLF_IDENTITY(mat2x4(injectionSwitch.y, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0), (mat2x4(injectionSwitch.y, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0)) + mat2x4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))), (false ? _GLF_FUZZED(asin(616.291)) : float(_GLF_IDENTITY(mat2x4(injectionSwitch.y, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0), (mat2x4(injectionSwitch.y, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0)) + mat2x4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)))))))) || (_GLF_DEAD(false)))), _GLF_IDENTITY((_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x < injectionSwitch.y)) && (_GLF_IDENTITY(_GLF_DEAD(false), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true)) && true))) || (_GLF_DEAD(false))))) || false, true && ((_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x < injectionSwitch.y)) && (_GLF_IDENTITY(_GLF_DEAD(false), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true)), ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true))) && true) && true))) || (_GLF_DEAD(false))))) || false))), ! (_GLF_IDENTITY(! (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_DEAD(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(false, bool(bvec2(false, false)))))))))), (! (_GLF_TRUE(_GLF_IDENTITY(_GLF_IDENTITY(true, ! (! (true))), ! (! (true))), (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))), _GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), false || (bool(bool(false))))), ! (! (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), false || (bool(bool(false)))))))), _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), ! (! (! ((injectionSwitch.x > injectionSwitch.y)))))))) || _GLF_IDENTITY((_GLF_DEAD(false)), ! (! ((_GLF_DEAD(false))))))))) && true)))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(_GLF_DEAD(false), _GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y, false || (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y)))) || (_GLF_DEAD(false)))))) && true), bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(_GLF_DEAD(false), _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(_GLF_IDENTITY(mat2x4(injectionSwitch.y, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0), (mat2x4(injectionSwitch.y, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0)) + mat2x4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))), (false ? _GLF_FUZZED(asin(616.291)) : float(_GLF_IDENTITY(mat2x4(injectionSwitch.y, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0), (mat2x4(injectionSwitch.y, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0)) + mat2x4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)))))))) || (_GLF_DEAD(false)))), _GLF_IDENTITY((_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x < injectionSwitch.y)) && (_GLF_IDENTITY(_GLF_DEAD(false), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true)) && true))) || (_GLF_DEAD(false))))) || false, true && ((_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x < injectionSwitch.y)) && (_GLF_IDENTITY(_GLF_DEAD(false), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true)), ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true))) && true) && true))) || (_GLF_DEAD(false))))) || false))), ! (_GLF_IDENTITY(! (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_DEAD(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(false, bool(bvec2(false, false)))))))))), (! (_GLF_TRUE(_GLF_IDENTITY(_GLF_IDENTITY(true, ! (! (true))), ! (! (true))), (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))), _GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), false || (bool(bool(false))))), ! (! (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), false || (bool(bool(false)))))))), _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), ! (! (! ((injectionSwitch.x > injectionSwitch.y)))))))) || _GLF_IDENTITY((_GLF_DEAD(false)), ! (! ((_GLF_DEAD(false))))))))) && true)))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(_GLF_DEAD(false), _GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y, false || (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y)))) || (_GLF_DEAD(false)))))) && true)))))
    {
     do
      {
       if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(_GLF_IDENTITY(true, bool(_GLF_IDENTITY(bvec3(true, false, true), bvec3(bvec4(bvec3(true, false, true), true))))) && (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y))))), ! (! (_GLF_IDENTITY(true, bool(_GLF_IDENTITY(bvec3(true, false, true), bvec3(bvec4(bvec3(true, false, true), true))))) && (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y)))))))))))))
        {
        }
       else
        {
         if(_GLF_WRAPPED_IF_FALSE(false))
          {
          }
         else
          {
           barrier();
          }
        }
      }
     while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
    }
  }
 while(_GLF_WRAPPED_LOOP(false));
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)), false || (_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))), _GLF_IDENTITY(false || (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)), false || (_GLF_DEAD(_GLF_IDENTITY(false, (false) && true))))), bool(bvec3(false || (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)), false || (_GLF_DEAD(_GLF_IDENTITY(false, (false) && true))))), true, _GLF_IDENTITY(false, bool(bvec4(false, true, false, true)))))))), true && (bool(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)), false || _GLF_IDENTITY((_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)), ! (! (_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))))), ! (! ((_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)), ! (! (_GLF_DEAD(_GLF_IDENTITY(false, (false) && true))))))))))))))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(true, (true) || _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false)))), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(true, (true) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_IDENTITY(_GLF_IDENTITY(true, (true) || _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(true, (true) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (_GLF_IDENTITY(_GLF_IDENTITY(true, (true) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (_GLF_IDENTITY(true, (true) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))))), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(true, (true) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_IDENTITY(_GLF_IDENTITY(true, (true) || _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(true, (true) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (_GLF_IDENTITY(_GLF_IDENTITY(true, (true) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (_GLF_IDENTITY(true, (true) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))))))), true && (bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(true, (true) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_IDENTITY(_GLF_IDENTITY(true, (true) || _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(true, (true) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (_GLF_IDENTITY(_GLF_IDENTITY(true, (true) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (_GLF_IDENTITY(true, (true) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))))))))))), bool(bvec2(bool(_GLF_IDENTITY(_GLF_IDENTITY(true, (_GLF_IDENTITY(true, ! (! (true)))) || _GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bool((injectionSwitch.x > injectionSwitch.y)))))), _GLF_IDENTITY(false || (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(true, (true) || _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(5539.1370) : _GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(8207.3225)))))))))), bool(bool(_GLF_IDENTITY(true, (true) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(true, _GLF_IDENTITY((true), (_GLF_IDENTITY((true), ((true)) || false)) && true) || _GLF_FALSE(_GLF_IDENTITY(false, (false) || false), _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(_GLF_IDENTITY(mat4(injectionSwitch.y, 1.0, length(vec4(0.0, 0.0, 0.0, 0.0)), cos(0.0), 0.0, cos(0.0), 1.0, 1.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, _GLF_IDENTITY(dot(vec2(log(1.0), 1.0), vec2(0.0, 1.0)), dot(vec2(log(1.0), 1.0), vec2(0.0, 1.0))), 1.0, abs(0.0), 0.0, 1.0), (mat4(injectionSwitch.y, 1.0, length(vec4(0.0, 0.0, 0.0, 0.0)), cos(0.0), 0.0, cos(0.0), 1.0, 1.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, _GLF_IDENTITY(dot(vec2(log(1.0), 1.0), vec2(0.0, 1.0)), dot(vec2(log(1.0), 1.0), vec2(0.0, 1.0))), 1.0, abs(0.0), 0.0, 1.0)) / mat4(1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0))), (false ? _GLF_FUZZED(37.54) : _GLF_IDENTITY(float(_GLF_IDENTITY(mat4(injectionSwitch.y, 1.0, length(vec4(0.0, 0.0, 0.0, 0.0)), cos(0.0), 0.0, cos(0.0), 1.0, 1.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, _GLF_IDENTITY(dot(vec2(log(1.0), 1.0), vec2(0.0, 1.0)), dot(vec2(log(1.0), 1.0), vec2(0.0, 1.0))), 1.0, abs(0.0), 0.0, 1.0), (mat4(injectionSwitch.y, 1.0, length(vec4(0.0, 0.0, 0.0, 0.0)), cos(0.0), 0.0, cos(0.0), 1.0, 1.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, _GLF_IDENTITY(dot(vec2(log(1.0), 1.0), vec2(0.0, 1.0)), dot(vec2(log(1.0), 1.0), vec2(0.0, 1.0))), 1.0, abs(0.0), 0.0, 1.0)) / mat4(1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0))), float(vec3(float(_GLF_IDENTITY(mat4(injectionSwitch.y, 1.0, length(vec4(0.0, 0.0, 0.0, 0.0)), cos(0.0), 0.0, cos(0.0), 1.0, 1.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, _GLF_IDENTITY(dot(vec2(log(1.0), 1.0), vec2(0.0, 1.0)), dot(vec2(log(1.0), 1.0), vec2(0.0, 1.0))), 1.0, abs(0.0), 0.0, 1.0), (mat4(injectionSwitch.y, 1.0, length(vec4(0.0, 0.0, 0.0, 0.0)), cos(0.0), 0.0, cos(0.0), 1.0, 1.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, _GLF_IDENTITY(dot(vec2(log(1.0), 1.0), vec2(0.0, 1.0)), dot(vec2(log(1.0), 1.0), vec2(0.0, 1.0))), 1.0, abs(0.0), 0.0, 1.0)) / mat4(1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0))), 1.0, 0.0))))))), true, true, true))))), bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(true, (true) && true), (true) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false || (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(true, (true) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(true, (true) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), _GLF_IDENTITY(bool(bvec2(bool(bool(_GLF_IDENTITY(true, (true) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), true)), (bool(bvec2(bool(bool(_GLF_IDENTITY(true, (true) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), true))) && true))), true && (_GLF_IDENTITY(_GLF_IDENTITY(true, (true) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(true, (true) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), _GLF_IDENTITY(bool(bvec2(bool(bool(_GLF_IDENTITY(true, (true) || _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat4(injectionSwitch, 1.0, 0.0, 0.0, 1.0, exp(_GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(1.0, 0.0, 1.0)), dot(vec3(0.0, 1.0, 0.0), vec3(1.0, 0.0, 1.0)))), 1.0, 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, _GLF_ONE(1.0, injectionSwitch.y), abs(0.0), 0.0, sqrt(0.0))), vec2(mat2x3(vec2(mat4(injectionSwitch, 1.0, 0.0, 0.0, 1.0, exp(_GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(1.0, 0.0, 1.0)), dot(vec3(0.0, 1.0, 0.0), vec3(1.0, 0.0, 1.0)))), 1.0, 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, _GLF_ONE(1.0, injectionSwitch.y), abs(0.0), 0.0, sqrt(0.0))), 0.0, 0.0, 0.0, 0.0)))).y))))), true)), (bool(bvec2(bool(bool(_GLF_IDENTITY(true, (true) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), true))) && true)))))), (_GLF_IDENTITY(false || (_GLF_IDENTITY(_GLF_IDENTITY(true, (true) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bool(_GLF_IDENTITY(true, (true) || _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > injectionSwitch.y))))))), _GLF_IDENTITY((false || (_GLF_IDENTITY(_GLF_IDENTITY(true, (true) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bool(_GLF_IDENTITY(true, (true) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))) && true, bool(_GLF_IDENTITY(bool((false || (_GLF_IDENTITY(_GLF_IDENTITY(true, (_GLF_IDENTITY(true, true && (true))) || _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))), bool(bool(_GLF_IDENTITY(true, (true) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))) && true), (bool((false || (_GLF_IDENTITY(_GLF_IDENTITY(true, (_GLF_IDENTITY(true, bool(_GLF_IDENTITY(bvec3(true, false, false), bvec3(_GLF_IDENTITY(bvec3(bvec3(true, false, false)), bvec3(bvec3(bvec3(bvec3(true, false, false)))))))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bool(_GLF_IDENTITY(true, (true) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))) && true)) || false))))) || false)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (! (_GLF_IDENTITY(false || (_GLF_IDENTITY(_GLF_IDENTITY(true, (true) || _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))), bool(bool(_GLF_IDENTITY(true, (true) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), (_GLF_IDENTITY(false || (_GLF_IDENTITY(_GLF_IDENTITY(true, (true) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bool(_GLF_IDENTITY(true, (true) || _GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true))))))), (false || (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(true, ! (! (true))), (true) || _GLF_FALSE(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) && true)))) && true), _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y))))), bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(true, bool(bvec4(true, true, false, _GLF_TRUE(_GLF_IDENTITY(true, _GLF_IDENTITY(! (! (true)), (! (! (true))) && true)), (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(9.5, -54.33)) : injectionSwitch)))).y))))), (true) || _GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y)))))))))) && true)) || false)))))))), true))))) && _GLF_IDENTITY((false), ((false)) || false))))
    {
     if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(_GLF_IDENTITY(true, (true) || false), ! (! (_GLF_IDENTITY(true, (true) || false))))))
      {
       barrier();
      }
     else
      {
      }
    }
   do
    {
     barrier();
    }
   while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(false, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec3(bvec4(_GLF_IDENTITY(bvec3(false, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec3(bvec4(bvec3(false, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true))), false))), bvec3(bvec3(_GLF_IDENTITY(bvec3(false, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec3(bvec4(_GLF_IDENTITY(bvec3(false, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec3(bvec4(bvec3(false, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true))), false)))))))), bool(bvec4(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, false, _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))), false || (_GLF_IDENTITY(bool(bvec3(false, false, _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))), bool(bvec3(bool(bvec3(false, false, _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))), true, true)))))), false, false, false)))));
  }
 uint num_workgroup = gl_NumWorkGroups.x;
 uint workgroup_size = gl_WorkGroupSize.x;
 if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) || false)) || false)) && true)))
  {
   for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != (1 ^ 1)); _GLF_IDENTITY(_injected_loop_counter --, 0 | (_GLF_IDENTITY(_injected_loop_counter --, ~ (~ (_injected_loop_counter --))))))
    {
     barrier();
    }
  }
 uint workgroup_id = gl_WorkGroupID.x;
 uint workgroup_base = workgroup_size * _GLF_IDENTITY(workgroup_id, min(workgroup_id, _GLF_IDENTITY(workgroup_id, ~ (_GLF_IDENTITY(~ (workgroup_id), (_GLF_IDENTITY(~ (workgroup_id), 0u | (~ (workgroup_id)))) | 0u)))));
 uint virtual_gid = workgroup_base + _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * _GLF_IDENTITY(subgroup_size, 0u ^ (subgroup_size)), _GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY(~ (_GLF_IDENTITY(subgroup_id * subgroup_size, min(subgroup_id * subgroup_size, subgroup_id * subgroup_size))), _GLF_IDENTITY((true ? _GLF_IDENTITY(~ (subgroup_id * subgroup_size), 0u ^ (~ (subgroup_id * subgroup_size))) : _GLF_FUZZED((subgroup_local_id + write_val))), _GLF_IDENTITY(max((true ? ~ (subgroup_id * subgroup_size) : _GLF_FUZZED((subgroup_local_id + write_val))), _GLF_IDENTITY((true ? ~ (_GLF_IDENTITY(subgroup_id, (subgroup_id) * 1u) * subgroup_size) : _GLF_FUZZED((_GLF_IDENTITY(subgroup_local_id + write_val, (subgroup_local_id + write_val) - 0u)))), min((true ? _GLF_IDENTITY(~ (subgroup_id * subgroup_size), (~ (subgroup_id * subgroup_size)) | (~ (subgroup_id * subgroup_size))) : _GLF_IDENTITY(_GLF_FUZZED((subgroup_local_id + write_val)), min(_GLF_IDENTITY(_GLF_FUZZED((subgroup_local_id + write_val)), (_GLF_FUZZED((subgroup_local_id + write_val))) * 1u), _GLF_IDENTITY(_GLF_FUZZED((subgroup_local_id + write_val)), clamp(_GLF_FUZZED((subgroup_local_id + write_val)), _GLF_FUZZED((subgroup_local_id + write_val)), _GLF_IDENTITY(_GLF_FUZZED((subgroup_local_id + write_val)), uint(uvec2(_GLF_FUZZED((subgroup_local_id + write_val)), 0u)))))))), (true ? ~ (subgroup_id * subgroup_size) : _GLF_FUZZED((subgroup_local_id + write_val)))))), (max((true ? ~ (subgroup_id * subgroup_size) : _GLF_FUZZED((subgroup_local_id + write_val))), _GLF_IDENTITY((true ? ~ (_GLF_IDENTITY(subgroup_id, (subgroup_id) * 1u) * subgroup_size) : _GLF_FUZZED((_GLF_IDENTITY(subgroup_local_id + write_val, (subgroup_local_id + write_val) - 0u)))), min((true ? _GLF_IDENTITY(~ (subgroup_id * subgroup_size), (~ (subgroup_id * subgroup_size)) | (~ (subgroup_id * subgroup_size))) : _GLF_IDENTITY(_GLF_FUZZED((subgroup_local_id + write_val)), min(_GLF_IDENTITY(_GLF_FUZZED((subgroup_local_id + write_val)), (_GLF_FUZZED((subgroup_local_id + write_val))) * 1u), _GLF_IDENTITY(_GLF_FUZZED((subgroup_local_id + write_val)), clamp(_GLF_FUZZED((subgroup_local_id + write_val)), _GLF_FUZZED((subgroup_local_id + write_val)), _GLF_IDENTITY(_GLF_FUZZED((subgroup_local_id + write_val)), uint(uvec2(_GLF_FUZZED((subgroup_local_id + write_val)), 0u)))))))), (true ? ~ (subgroup_id * subgroup_size) : _GLF_FUZZED((subgroup_local_id + write_val))))))) | (_GLF_IDENTITY(max((true ? ~ (subgroup_id * subgroup_size) : _GLF_FUZZED((subgroup_local_id + write_val))), _GLF_IDENTITY((true ? ~ (_GLF_IDENTITY(subgroup_id, (subgroup_id) * 1u) * subgroup_size) : _GLF_FUZZED((_GLF_IDENTITY(subgroup_local_id + write_val, (subgroup_local_id + write_val) - 0u)))), min((true ? _GLF_IDENTITY(~ (subgroup_id * subgroup_size), (~ (subgroup_id * subgroup_size)) | (~ (subgroup_id * subgroup_size))) : _GLF_IDENTITY(_GLF_FUZZED((subgroup_local_id + write_val)), min(_GLF_IDENTITY(_GLF_FUZZED((subgroup_local_id + write_val)), (_GLF_FUZZED((subgroup_local_id + write_val))) * 1u), _GLF_IDENTITY(_GLF_FUZZED((subgroup_local_id + write_val)), clamp(_GLF_FUZZED((subgroup_local_id + write_val)), _GLF_FUZZED((subgroup_local_id + write_val)), _GLF_IDENTITY(_GLF_FUZZED((subgroup_local_id + write_val)), uint(uvec2(_GLF_FUZZED((subgroup_local_id + write_val)), 0u)))))))), (true ? ~ (subgroup_id * subgroup_size) : _GLF_FUZZED((subgroup_local_id + write_val)))))), (max((true ? ~ (subgroup_id * subgroup_size) : _GLF_FUZZED((subgroup_local_id + write_val))), _GLF_IDENTITY((true ? ~ (_GLF_IDENTITY(subgroup_id, (subgroup_id) * 1u) * subgroup_size) : _GLF_FUZZED((_GLF_IDENTITY(subgroup_local_id + write_val, (subgroup_local_id + write_val) - 0u)))), min((true ? _GLF_IDENTITY(~ (subgroup_id * subgroup_size), (~ (subgroup_id * subgroup_size)) | (~ (subgroup_id * subgroup_size))) : _GLF_IDENTITY(_GLF_FUZZED((subgroup_local_id + write_val)), min(_GLF_IDENTITY(_GLF_FUZZED((subgroup_local_id + write_val)), (_GLF_FUZZED((subgroup_local_id + write_val))) * 1u), _GLF_IDENTITY(_GLF_FUZZED((subgroup_local_id + write_val)), clamp(_GLF_FUZZED((subgroup_local_id + write_val)), _GLF_FUZZED((subgroup_local_id + write_val)), _GLF_IDENTITY(_GLF_FUZZED((subgroup_local_id + write_val)), uint(uvec2(_GLF_FUZZED((subgroup_local_id + write_val)), 0u)))))))), (true ? ~ (subgroup_id * subgroup_size) : _GLF_FUZZED((subgroup_local_id + write_val))))))) / 1u))))), clamp(_GLF_IDENTITY(~ (_GLF_IDENTITY(subgroup_id * subgroup_size, min(subgroup_id * subgroup_size, subgroup_id * _GLF_IDENTITY(subgroup_size, min(_GLF_IDENTITY(subgroup_size, 0u + (subgroup_size)), _GLF_IDENTITY(subgroup_size, (false ? _GLF_FUZZED(workgroup_size) : subgroup_size))))))), _GLF_IDENTITY((true ? ~ (subgroup_id * _GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, (subgroup_size) << 0u)) - 0u)) : _GLF_FUZZED((subgroup_local_id + write_val))), max((true ? ~ (subgroup_id * subgroup_size) : _GLF_FUZZED(_GLF_IDENTITY((subgroup_local_id + write_val), max((subgroup_local_id + write_val), (subgroup_local_id + write_val))))), _GLF_IDENTITY((true ? ~ (_GLF_IDENTITY(subgroup_id * _GLF_IDENTITY(subgroup_size, ~ (~ (_GLF_IDENTITY(subgroup_size, (subgroup_size) | 0u)))), 0u | (subgroup_id * _GLF_IDENTITY(subgroup_size, ~ (~ (_GLF_IDENTITY(subgroup_size, (subgroup_size) | 0u))))))) : _GLF_FUZZED((subgroup_local_id + write_val))), min((true ? ~ (subgroup_id * subgroup_size) : _GLF_IDENTITY(_GLF_FUZZED((subgroup_local_id + write_val)), (false ? _GLF_FUZZED(workgroup_id) : _GLF_FUZZED((subgroup_local_id + write_val))))), (true ? ~ (subgroup_id * subgroup_size) : _GLF_FUZZED((subgroup_local_id + write_val)))))))), _GLF_IDENTITY(~ (_GLF_IDENTITY(subgroup_id * subgroup_size, min(subgroup_id * subgroup_size, _GLF_IDENTITY(subgroup_id * subgroup_size, min(subgroup_id * subgroup_size, _GLF_IDENTITY(subgroup_id * subgroup_size, (_GLF_IDENTITY(subgroup_id * subgroup_size, (false ? _GLF_FUZZED(workgroup_id) : subgroup_id * subgroup_size))) << 0u)))))), _GLF_IDENTITY((true ? ~ (subgroup_id * subgroup_size) : _GLF_FUZZED((subgroup_local_id + write_val))), max((true ? ~ (subgroup_id * subgroup_size) : _GLF_FUZZED((_GLF_IDENTITY(subgroup_local_id, 0u | (subgroup_local_id)) + write_val))), _GLF_IDENTITY((true ? ~ (subgroup_id * subgroup_size) : _GLF_FUZZED((_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | (176095u & 0u)) + write_val))), min((true ? ~ (subgroup_id * subgroup_size) : _GLF_FUZZED((subgroup_local_id + write_val))), (_GLF_IDENTITY(true, false || (true)) ? ~ (subgroup_id * subgroup_size) : _GLF_FUZZED((subgroup_local_id + write_val)))))))), _GLF_IDENTITY(~ (_GLF_IDENTITY(subgroup_id * subgroup_size, min(subgroup_id * subgroup_size, subgroup_id * subgroup_size))), _GLF_IDENTITY((true ? ~ (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, ~ (~ (subgroup_id * subgroup_size))), max(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, ~ (~ (subgroup_id * subgroup_size))), (_GLF_IDENTITY(subgroup_id * subgroup_size, ~ (~ (subgroup_id * subgroup_size)))) | (158953u & 0u)), _GLF_IDENTITY(subgroup_id * subgroup_size, ~ (~ (subgroup_id * subgroup_size)))))) : _GLF_FUZZED((subgroup_local_id + write_val))), _GLF_IDENTITY(max((true ? ~ (subgroup_id * subgroup_size) : _GLF_FUZZED((subgroup_local_id + write_val))), _GLF_IDENTITY((true ? ~ (subgroup_id * subgroup_size) : _GLF_FUZZED((subgroup_local_id + write_val))), min((true ? ~ (subgroup_id * subgroup_size) : _GLF_FUZZED((subgroup_local_id + write_val))), (true ? ~ (subgroup_id * subgroup_size) : _GLF_FUZZED(_GLF_IDENTITY((subgroup_local_id + write_val), ((subgroup_local_id + write_val)) ^ 0u)))))), ~ (~ (max((true ? ~ (subgroup_id * subgroup_size) : _GLF_FUZZED((subgroup_local_id + write_val))), _GLF_IDENTITY((true ? ~ (subgroup_id * subgroup_size) : _GLF_FUZZED((subgroup_local_id + write_val))), min((true ? ~ (subgroup_id * subgroup_size) : _GLF_FUZZED((subgroup_local_id + write_val))), (true ? ~ (subgroup_id * subgroup_size) : _GLF_FUZZED(_GLF_IDENTITY((subgroup_local_id + write_val), ((subgroup_local_id + write_val)) ^ 0u)))))))))))))), uint(uvec3(~ (_GLF_IDENTITY(_GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, min(subgroup_id * subgroup_size, _GLF_IDENTITY(subgroup_id * subgroup_size, uint(uint(subgroup_id * subgroup_size))))), min(subgroup_id * subgroup_size, subgroup_id * subgroup_size))), _GLF_IDENTITY((true ? ~ (subgroup_id * subgroup_size) : _GLF_FUZZED((subgroup_local_id + write_val))), max((true ? ~ (subgroup_id * subgroup_size) : _GLF_FUZZED((subgroup_local_id + write_val))), _GLF_IDENTITY((true ? ~ (_GLF_IDENTITY(subgroup_id, (subgroup_id) * 1u) * subgroup_size) : _GLF_FUZZED((_GLF_IDENTITY(subgroup_local_id + write_val, (subgroup_local_id + write_val) - 0u)))), min((true ? _GLF_IDENTITY(~ (subgroup_id * subgroup_size), _GLF_IDENTITY((~ (subgroup_id * subgroup_size)) | (~ (subgroup_id * subgroup_size)), min((~ (subgroup_id * subgroup_size)) | (~ (subgroup_id * subgroup_size)), (~ (subgroup_id * subgroup_size)) | (~ (subgroup_id * subgroup_size))))) : _GLF_IDENTITY(_GLF_FUZZED((subgroup_local_id + write_val)), min(_GLF_IDENTITY(_GLF_FUZZED((subgroup_local_id + write_val)), (_GLF_FUZZED((subgroup_local_id + write_val))) * 1u), _GLF_IDENTITY(_GLF_FUZZED((subgroup_local_id + write_val)), clamp(_GLF_FUZZED((subgroup_local_id + write_val)), _GLF_FUZZED((subgroup_local_id + write_val)), _GLF_IDENTITY(_GLF_FUZZED((subgroup_local_id + write_val)), uint(uvec2(_GLF_IDENTITY(_GLF_FUZZED((subgroup_local_id + write_val)), (_GLF_IDENTITY(_GLF_FUZZED((subgroup_local_id + write_val)), clamp(_GLF_FUZZED((subgroup_local_id + write_val)), _GLF_FUZZED((subgroup_local_id + write_val)), _GLF_IDENTITY(_GLF_FUZZED((subgroup_local_id + write_val)), (_GLF_FUZZED((subgroup_local_id + write_val))) << 0u)))) | 0u), 0u)))))))), (true ? ~ (subgroup_id * subgroup_size) : _GLF_FUZZED((subgroup_local_id + write_val)))))))), clamp(_GLF_IDENTITY(~ (_GLF_IDENTITY(subgroup_id * subgroup_size, min(subgroup_id * subgroup_size, _GLF_IDENTITY(subgroup_id * _GLF_IDENTITY(subgroup_size, min(_GLF_IDENTITY(subgroup_size, 0u + (subgroup_size)), _GLF_IDENTITY(subgroup_size, (false ? _GLF_FUZZED(workgroup_size) : subgroup_size)))), min(subgroup_id * _GLF_IDENTITY(subgroup_size, min(_GLF_IDENTITY(subgroup_size, 0u + (subgroup_size)), _GLF_IDENTITY(subgroup_size, (false ? _GLF_FUZZED(workgroup_size) : subgroup_size)))), subgroup_id * _GLF_IDENTITY(subgroup_size, min(_GLF_IDENTITY(subgroup_size, 0u + (subgroup_size)), _GLF_IDENTITY(subgroup_size, (false ? _GLF_FUZZED(workgroup_size) : subgroup_size))))))))), _GLF_IDENTITY((true ? ~ (subgroup_id * _GLF_IDENTITY(subgroup_size, (subgroup_size) - 0u)) : _GLF_FUZZED((subgroup_local_id + write_val))), max((true ? ~ (subgroup_id * subgroup_size) : _GLF_FUZZED((subgroup_local_id + write_val))), _GLF_IDENTITY((true ? ~ (subgroup_id * _GLF_IDENTITY(subgroup_size, ~ (~ (_GLF_IDENTITY(subgroup_size, (subgroup_size) | 0u))))) : _GLF_FUZZED((subgroup_local_id + write_val))), _GLF_IDENTITY(min((true ? ~ (subgroup_id * subgroup_size) : _GLF_IDENTITY(_GLF_FUZZED((subgroup_local_id + write_val)), (false ? _GLF_FUZZED(workgroup_id) : _GLF_FUZZED((subgroup_local_id + write_val))))), (true ? ~ (subgroup_id * subgroup_size) : _GLF_FUZZED((subgroup_local_id + write_val)))), (min((true ? ~ (subgroup_id * subgroup_size) : _GLF_IDENTITY(_GLF_FUZZED((subgroup_local_id + write_val)), (false ? _GLF_FUZZED(workgroup_id) : _GLF_FUZZED((subgroup_local_id + write_val))))), (true ? ~ (subgroup_id * subgroup_size) : _GLF_FUZZED((subgroup_local_id + write_val))))) >> uint(_GLF_ZERO(0.0, injectionSwitch.x))))))), _GLF_IDENTITY(~ (_GLF_IDENTITY(subgroup_id * subgroup_size, min(subgroup_id * subgroup_size, subgroup_id * subgroup_size))), _GLF_IDENTITY((true ? ~ (_GLF_IDENTITY(subgroup_id * subgroup_size, (_GLF_IDENTITY(subgroup_id * subgroup_size, ~ (~ (subgroup_id * subgroup_size)))) * 1u)) : _GLF_FUZZED((subgroup_local_id + write_val))), max((_GLF_IDENTITY(true, ! (! (true))) ? ~ (subgroup_id * subgroup_size) : _GLF_FUZZED((subgroup_local_id + write_val))), _GLF_IDENTITY((true ? ~ (subgroup_id * subgroup_size) : _GLF_FUZZED((subgroup_local_id + write_val))), min((true ? ~ (subgroup_id * subgroup_size) : _GLF_FUZZED((subgroup_local_id + write_val))), (true ? ~ (subgroup_id * subgroup_size) : _GLF_FUZZED(_GLF_IDENTITY((subgroup_local_id + write_val), ((subgroup_local_id + write_val)) >> 0u)))))))), _GLF_IDENTITY(~ (_GLF_IDENTITY(subgroup_id * subgroup_size, min(subgroup_id * subgroup_size, subgroup_id * subgroup_size))), _GLF_IDENTITY((true ? ~ (_GLF_IDENTITY(subgroup_id * subgroup_size, _GLF_IDENTITY(~ (~ (subgroup_id * subgroup_size)), max(~ (~ (subgroup_id * subgroup_size)), ~ (~ (subgroup_id * subgroup_size)))))) : _GLF_FUZZED((subgroup_local_id + write_val))), max((true ? ~ (subgroup_id * subgroup_size) : _GLF_FUZZED((subgroup_local_id + write_val))), _GLF_IDENTITY((true ? ~ (subgroup_id * subgroup_size) : _GLF_IDENTITY(_GLF_FUZZED((subgroup_local_id + write_val)), (_GLF_IDENTITY(_GLF_FUZZED((subgroup_local_id + write_val)), (true ? _GLF_FUZZED((subgroup_local_id + write_val)) : _GLF_FUZZED(write_val)))) - 0u)), min((true ? ~ (subgroup_id * subgroup_size) : _GLF_FUZZED((subgroup_local_id + write_val))), (true ? ~ (subgroup_id * subgroup_size) : _GLF_FUZZED(_GLF_IDENTITY((subgroup_local_id + write_val), _GLF_IDENTITY(((subgroup_local_id + write_val)) ^ 0u, (_GLF_IDENTITY(((subgroup_local_id + write_val)), (_GLF_IDENTITY(((subgroup_local_id + write_val)), ~ (~ (((subgroup_local_id + write_val)))))) >> 0u) ^ _GLF_IDENTITY(0u, min(0u, 0u))) - 0u)))))))))))), _GLF_IDENTITY((0u | 1u), ((0u | 1u)) >> 0u), 0u)))), (subgroup_id * subgroup_size) | (_GLF_IDENTITY(subgroup_id * _GLF_IDENTITY(subgroup_size, uint(uvec3(_GLF_IDENTITY(subgroup_size, (subgroup_size) << 0u), 0u, (_GLF_IDENTITY(uint(_GLF_ONE(1.0, injectionSwitch.y)), (uint(_GLF_ONE(1.0, injectionSwitch.y))) ^ 0u) | 1u)))), (subgroup_id * _GLF_IDENTITY(subgroup_size, uint(uvec3(_GLF_IDENTITY(subgroup_size, (subgroup_size) << 0u), 0u, (_GLF_IDENTITY(uint(_GLF_ONE(1.0, injectionSwitch.y)), (uint(_GLF_ONE(_GLF_IDENTITY(1.0, float(mat3(1.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), vec2(1.0, 0.0))), 0.0, 1.0, 1.0, 0.0, log(1.0), 1.0, 0.0))), injectionSwitch.y))) ^ 0u) | 1u))))) / 1u))) + subgroup_local_id;
 atomicStore(write_val, uint(virtual_gid), 4, 64, 0);
 for(int _injected_loop_counter = ((1 << _GLF_IDENTITY(int(0), int(_GLF_IDENTITY(0, (true ? 0 : _GLF_IDENTITY(_GLF_FUZZED(-58858), (_GLF_IDENTITY(_GLF_FUZZED(_GLF_IDENTITY(-58858, (_GLF_IDENTITY(-58858, (false ? _GLF_FUZZED(89828) : -58858))) | 0)), max(_GLF_FUZZED(_GLF_IDENTITY(-58858, clamp(-58858, -58858, -58858))), _GLF_FUZZED(-58858)))) / 1)))))) >> _GLF_IDENTITY(int(0), _GLF_IDENTITY(int(0), int(ivec4(int(_GLF_IDENTITY(0, clamp(0, 0, 0))), 1, 1, (0 ^ 0)))))); _GLF_WRAPPED_LOOP(_injected_loop_counter != _GLF_IDENTITY(int(_GLF_ZERO(_GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-24.99)), float(0.0), bool(true))), 0.0, 0.0)), injectionSwitch.x)), (_GLF_IDENTITY(int(_GLF_ZERO(_GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-24.99)), float(0.0), bool(true))), 0.0, 0.0)), injectionSwitch.x)), min(_GLF_IDENTITY(int(_GLF_ZERO(_GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-24.99)), float(0.0), bool(true))), 0.0, 0.0)), injectionSwitch.x)), 1 * (int(_GLF_ZERO(_GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-24.99)), float(0.0), bool(true))), 0.0, 0.0)), injectionSwitch.x)))), int(_GLF_ZERO(_GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-24.99)), float(0.0), bool(true))), 0.0, 0.0)), injectionSwitch.x))))) | (0 | 0))); _injected_loop_counter --)
  {
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     if(_GLF_DEAD(false))
      {
       for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > int(_GLF_ZERO(0.0, injectionSwitch.x))); _injected_loop_counter --)
        {
         if(_GLF_WRAPPED_IF_TRUE(true))
          {
           if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            {
            }
           else
            {
             do
              {
               do
                {
                 do
                  {
                   do
                    {
                     do
                      {
                       barrier();
                      }
                     while(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(false), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, bool(bvec4(injectionSwitch.x < injectionSwitch.y, true, true, false))))))) && _GLF_IDENTITY(true, ! (! (true)))))) && (_GLF_WRAPPED_LOOP(false))));
                    }
                   while(_GLF_WRAPPED_LOOP(false));
                  }
                 while(_GLF_WRAPPED_LOOP(false));
                }
               while(_GLF_WRAPPED_LOOP(false));
              }
             while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
            }
          }
         else
          {
          }
        }
      }
    }
   else
    {
    }
  }
 uint read_val = atomicLoad(write_val, 4, 64, 0);
 for(int _injected_loop_counter = ((_GLF_IDENTITY(int(_GLF_ONE(1.0, injectionSwitch.y)) << _GLF_IDENTITY(int(0), int(0)), (true ? int(_GLF_ONE(1.0, injectionSwitch.y)) << _GLF_IDENTITY(int(0), int(0)) : _GLF_FUZZED(13353)))) >> _GLF_IDENTITY(_GLF_IDENTITY(int(0), (int(0)) | (int(0))), _GLF_IDENTITY(int(0), _GLF_IDENTITY(0 ^ (_GLF_IDENTITY(int(0), (int(0)) / 1)), (0 ^ (_GLF_IDENTITY(int(0), _GLF_IDENTITY((int(_GLF_IDENTITY(0, (0) - 0))), (false ? _GLF_FUZZED(bitCount(workgroup_id)) : (int(_GLF_IDENTITY(0, (0) - 0))))) / 1))) ^ 0)))); _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_GLF_IDENTITY(_injected_loop_counter > (0 << _GLF_IDENTITY(_GLF_IDENTITY(int(8), int(8)), ~ (~ (_GLF_IDENTITY(int(8), int(8)))))), bool(bvec4(_injected_loop_counter > (0 << _GLF_IDENTITY(int(8), int(8))), true, false, false))), bool(bvec3(_GLF_IDENTITY(_injected_loop_counter > (0 << _GLF_IDENTITY(_GLF_IDENTITY(int(8), int(8)), ~ (~ (_GLF_IDENTITY(int(8), int(8)))))), bool(bvec4(_injected_loop_counter > (0 << _GLF_IDENTITY(int(8), int(8))), true, false, false))), true, true)))); _injected_loop_counter --)
  {
   if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
    {
     if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED((vec2(2.2, -9.1) / vec2(0.7, -3.9))))).y))), false || (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) + tan(vec2(0.0, 0.0))).y))), _GLF_IDENTITY(! _GLF_IDENTITY((! _GLF_IDENTITY((_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false || ((_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), ! (! ((! _GLF_IDENTITY((_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true && ((_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))), _GLF_TRUE(true, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x < injectionSwitch.y), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), bool(_GLF_IDENTITY(bvec2((injectionSwitch.x < injectionSwitch.y), true), bvec2(bvec3(bvec2((injectionSwitch.x < injectionSwitch.y), true), false))))))), _GLF_IDENTITY(bool(bool(bool(bool(_GLF_IDENTITY((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2((injectionSwitch.x < injectionSwitch.y), true), bvec2(bvec3(bvec2((injectionSwitch.x < injectionSwitch.y), true), false)))), bool(bvec2(_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2((injectionSwitch.x < injectionSwitch.y), true), bvec2(bvec3(bvec2((injectionSwitch.x < injectionSwitch.y), true), false)))), false || (bool(_GLF_IDENTITY(bvec2((injectionSwitch.x < injectionSwitch.y), true), bvec2(bvec3(bvec2((injectionSwitch.x < injectionSwitch.y), true), false)))))), false)))))))), (bool(bool(bool(bool(_GLF_IDENTITY((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2((injectionSwitch.x < injectionSwitch.y), true), bvec2(bvec3(bvec2((injectionSwitch.x < injectionSwitch.y), true), false)))), bool(bvec2(_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2((injectionSwitch.x < injectionSwitch.y), true), bvec2(bvec3(bvec2((injectionSwitch.x < injectionSwitch.y), true), false)))), false || (bool(_GLF_IDENTITY(bvec2((injectionSwitch.x < injectionSwitch.y), true), bvec2(bvec3(bvec2((injectionSwitch.x < injectionSwitch.y), true), false)))))), false))))))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))) && (_GLF_IDENTITY(! _GLF_IDENTITY((! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), _GLF_IDENTITY(! (_GLF_IDENTITY(! ((! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), bool(bvec2(_GLF_IDENTITY(! ((! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), bool(bvec3(! ((! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), true, false))), false)))), ! _GLF_IDENTITY((! (! (! ((! (_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).x > injectionSwitch.y))))))))), ((! (! (! ((! (_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).x > injectionSwitch.y)))))))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), ! (_GLF_IDENTITY(! (! _GLF_IDENTITY(_GLF_IDENTITY((! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(9.2, -6216.1459)))).y))))), ! (! ((! (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)), injectionSwitch, injectionSwitch)).x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), injectionSwitch)).y)))))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), ! (! ((! (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), clamp(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)), injectionSwitch, injectionSwitch)).x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), injectionSwitch)).y))))))))), ! (_GLF_IDENTITY(! (! (_GLF_IDENTITY((! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), ! (! ((! (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)), injectionSwitch, injectionSwitch)).x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), injectionSwitch)).y)))))))))), ! (! (! (! (_GLF_IDENTITY((! (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))))), ! (! ((! (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)), injectionSwitch, injectionSwitch)).x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), max(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))), injectionSwitch)).y)))))))))))))))))), ! (! (! (! _GLF_IDENTITY((! (_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))), true && ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))))))))))))), ! (! ((_GLF_IDENTITY(! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-1.6)), vec2(_GLF_FUZZED(4.5), (injectionSwitch)[1]), bvec2(false, _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ((injectionSwitch.x < injectionSwitch.y)) || false)) || false))))).y)))), (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-1.6)), vec2(_GLF_FUZZED(4.5), (injectionSwitch)[1]), bvec2(false, _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], min(injectionSwitch[0], injectionSwitch[0])), injectionSwitch[1])).y)))), (_GLF_IDENTITY(mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-1.6)), vec2(_GLF_FUZZED(4.5), (injectionSwitch)[1]), bvec2(false, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(3.6) : injectionSwitch.x)) < _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], min(injectionSwitch[0], injectionSwitch[0])), injectionSwitch[1])).y)))), vec2(mat3x2(mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-1.6)), vec2(_GLF_FUZZED(4.5), (injectionSwitch)[1]), bvec2(false, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(3.6) : injectionSwitch.x)) < _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], min(injectionSwitch[0], injectionSwitch[0])), injectionSwitch[1])).y)))), _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 0.0, 1.0)))) / vec2(1.0, 1.0))).y, (false ? _GLF_FUZZED(-7.7) : _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-1.6)), vec2(_GLF_FUZZED(4.5), (injectionSwitch)[1]), bvec2(false, _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[_GLF_IDENTITY(0, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(-24414) : _GLF_IDENTITY(0, 1 * (0))))], min(injectionSwitch[0], injectionSwitch[0])), injectionSwitch[1])).y))))).y, mix(float(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-1.6)), vec2(_GLF_FUZZED(4.5), _GLF_IDENTITY((injectionSwitch), vec2(0.0, 0.0) + ((injectionSwitch)))[1]), bvec2(false, _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], min(injectionSwitch[0], injectionSwitch[0])), injectionSwitch[1])).y))))).y), float(_GLF_FUZZED(-5201.6670)), bool(false)))))))))) && true)))))))))))))))))
      barrier();
    }
   else
    {
    }
  }
 for(int _injected_loop_counter = _GLF_IDENTITY(1, min(1, 1)); _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
  {
   buf[virtual_gid] = uint(subgroupAllEqual(read_val));
   if(_GLF_DEAD(false))
    {
     for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > int(_GLF_ZERO(0.0, injectionSwitch.x))); _injected_loop_counter --)
      {
       barrier();
      }
    }
  }
}
