#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer WriteVal {
 uint write_val;
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY((_GLF_IDENTITY(false, bool(bvec3(false, true, false)))), ((_GLF_IDENTITY(false, bool(bvec3(false, _GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, true && (true))))), false))))) || false) && true)))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true)), bool(_GLF_IDENTITY(bool(bool(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true))), bool(bvec2(bool(bool(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true))), true)))))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), true && (! (injectionSwitch.x > injectionSwitch.y)))), bool(bool(! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), true && (! (injectionSwitch.x > injectionSwitch.y)))))))))))))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false)))) && true, true && ((_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false)))) && true))))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
       if(_GLF_DEAD(false))
        return;
      }
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, true && (false))) || _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, float(_GLF_IDENTITY(mat4x3(injectionSwitch.y, abs(_GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0)), dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0)))), _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 0.0, _GLF_IDENTITY(dot(vec3(0.0, cos(0.0), 0.0), vec3(1.0, 0.0, 1.0)), _GLF_IDENTITY(dot(vec3(0.0, cos(0.0), 0.0), vec3(1.0, 0.0, 1.0)), mix(float(dot(vec3(0.0, cos(0.0), 0.0), vec3(1.0, 0.0, 1.0))), float(_GLF_FUZZED(2.6)), bool(false)))), 1.0, 0.0, 1.0, 0.0, 0.0, 1.0), mat3(1.0) * (mat4x3(injectionSwitch.y, abs(_GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0)), dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0)))), _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 0.0, _GLF_IDENTITY(dot(vec3(0.0, cos(0.0), 0.0), vec3(1.0, 0.0, 1.0)), _GLF_IDENTITY(dot(vec3(0.0, cos(0.0), 0.0), vec3(1.0, 0.0, 1.0)), mix(float(dot(vec3(0.0, cos(0.0), 0.0), vec3(1.0, 0.0, 1.0))), float(_GLF_FUZZED(2.6)), bool(false)))), _GLF_IDENTITY(1.0, mix(float(_GLF_IDENTITY(1.0, min(1.0, 1.0))), float(_GLF_FUZZED(26.15)), bool(false))), 0.0, 1.0, 0.0, 0.0, 1.0)))))) + 0.0), injectionSwitch.y)))))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), mix(vec2(_GLF_FUZZED(8.3), _GLF_FUZZED(-79.63)), vec2((mat2(1.0) * (injectionSwitch))[0], (mat2(1.0) * (injectionSwitch))[1]), bvec2(true, true)))).x > injectionSwitch.y))))
    return;
   return;
  }
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(false))
  return;
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0)))))
  {
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec4(false, false, true, false))), _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))) / 1.0))) && true), true, false), bvec3(bvec3(bvec3(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true), _GLF_IDENTITY(true, ! (! (true))), false)))))))))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y))))))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, 0.0 + (injectionSwitch.y))))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) && true), (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))).y)), (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))).y))) || false)))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, _GLF_IDENTITY(true && (false), (_GLF_IDENTITY(_GLF_IDENTITY(true, true && _GLF_IDENTITY((true), ! (! ((true))))) && (false), bool(bvec3(true && (false), true, true)))) && true))))))
  return;
 uint num_workgroup = _GLF_IDENTITY(gl_NumWorkGroups.x, (gl_NumWorkGroups.x) | _GLF_IDENTITY((_GLF_IDENTITY(gl_NumWorkGroups.x, (_GLF_IDENTITY(true ? _GLF_IDENTITY(gl_NumWorkGroups.x, min(gl_NumWorkGroups.x, _GLF_IDENTITY(gl_NumWorkGroups.x, (_GLF_IDENTITY(gl_NumWorkGroups.x, _GLF_IDENTITY(0u | (gl_NumWorkGroups.x), max(0u | (gl_NumWorkGroups.x), _GLF_IDENTITY(0u | (gl_NumWorkGroups.x), (0u | (gl_NumWorkGroups.x)) >> 0u))))) ^ 0u))) : _GLF_IDENTITY(_GLF_FUZZED(164919u), (_GLF_IDENTITY(_GLF_FUZZED(164919u), (_GLF_FUZZED(164919u)) | (_GLF_FUZZED(164919u)))) >> 0u), uint(uvec3(true ? _GLF_IDENTITY(gl_NumWorkGroups.x, min(gl_NumWorkGroups.x, _GLF_IDENTITY(gl_NumWorkGroups.x, (_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups.x, _GLF_IDENTITY(0u | (gl_NumWorkGroups.x), max(0u | (gl_NumWorkGroups.x), _GLF_IDENTITY(0u | (gl_NumWorkGroups.x), (0u | (gl_NumWorkGroups.x)) >> 0u)))), (_GLF_IDENTITY(gl_NumWorkGroups.x, _GLF_IDENTITY(0u | (_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, clamp(gl_NumWorkGroups, gl_NumWorkGroups, _GLF_IDENTITY(gl_NumWorkGroups, (_GLF_IDENTITY(true, ! (! (true))) ? gl_NumWorkGroups : _GLF_FUZZED(uvec3(37175u, 104682u, 40306u)))))), ~ (~ (gl_NumWorkGroups))).x), max(0u | (gl_NumWorkGroups.x), _GLF_IDENTITY(0u | (gl_NumWorkGroups.x), (0u | (gl_NumWorkGroups.x)) >> 0u))))) - 0u)) ^ 0u))) : _GLF_IDENTITY(_GLF_FUZZED(164919u), (_GLF_IDENTITY(_GLF_FUZZED(164919u), (_GLF_FUZZED(164919u)) | (_GLF_FUZZED(164919u)))) >> 0u), 0u, 0u)))))), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY((_GLF_IDENTITY(gl_NumWorkGroups.x, (_GLF_IDENTITY(true ? _GLF_IDENTITY(gl_NumWorkGroups.x, min(gl_NumWorkGroups.x, _GLF_IDENTITY(gl_NumWorkGroups.x, (_GLF_IDENTITY(gl_NumWorkGroups.x, _GLF_IDENTITY(_GLF_IDENTITY(0u | (gl_NumWorkGroups.x), max(0u | (gl_NumWorkGroups.x), _GLF_IDENTITY(0u | (gl_NumWorkGroups.x), (0u | (gl_NumWorkGroups.x)) >> 0u))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(0u | (gl_NumWorkGroups.x), max(0u | (gl_NumWorkGroups.x), _GLF_IDENTITY(0u | (gl_NumWorkGroups.x), (0u | (gl_NumWorkGroups.x)) >> 0u))), (_GLF_IDENTITY(0u | (gl_NumWorkGroups.x), max(0u | (gl_NumWorkGroups.x), _GLF_IDENTITY(0u | (gl_NumWorkGroups.x), (0u | (gl_NumWorkGroups.x)) >> 0u)))) >> 0u), _GLF_IDENTITY(0u | (gl_NumWorkGroups.x), max(0u | (gl_NumWorkGroups.x), _GLF_IDENTITY(0u | (gl_NumWorkGroups.x), (0u | (gl_NumWorkGroups.x)) >> 0u))), _GLF_IDENTITY(0u | (gl_NumWorkGroups.x), max(0u | (gl_NumWorkGroups.x), _GLF_IDENTITY(0u | (gl_NumWorkGroups.x), (0u | (gl_NumWorkGroups.x)) >> 0u))))))) ^ 0u))) : _GLF_IDENTITY(_GLF_FUZZED(164919u), (_GLF_IDENTITY(_GLF_FUZZED(164919u), (_GLF_FUZZED(164919u)) | (_GLF_FUZZED(164919u)))) >> 0u), uint(uvec3(true ? _GLF_IDENTITY(gl_NumWorkGroups.x, min(gl_NumWorkGroups.x, _GLF_IDENTITY(gl_NumWorkGroups.x, (_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups.x, _GLF_IDENTITY(_GLF_IDENTITY(0u | (gl_NumWorkGroups.x), max(0u | (gl_NumWorkGroups.x), _GLF_IDENTITY(0u | (gl_NumWorkGroups.x), (0u | (gl_NumWorkGroups.x)) >> 0u))), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(0u | (gl_NumWorkGroups.x), max(0u | (gl_NumWorkGroups.x), _GLF_IDENTITY(0u | (gl_NumWorkGroups.x), (0u | (gl_NumWorkGroups.x)) >> 0u))), ~ (~ (_GLF_IDENTITY(0u | (gl_NumWorkGroups.x), max(0u | (gl_NumWorkGroups.x), _GLF_IDENTITY(0u | (gl_NumWorkGroups.x), (0u | (gl_NumWorkGroups.x)) >> 0u)))))))))), (_GLF_IDENTITY(gl_NumWorkGroups.x, _GLF_IDENTITY(0u | (_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, clamp(gl_NumWorkGroups, gl_NumWorkGroups, _GLF_IDENTITY(gl_NumWorkGroups, (true ? gl_NumWorkGroups : _GLF_IDENTITY(_GLF_FUZZED(uvec3(37175u, 104682u, 40306u)), ~ (~ (_GLF_IDENTITY(_GLF_FUZZED(uvec3(37175u, 104682u, 40306u)), uvec3(0u, 0u, 0u) | (_GLF_FUZZED(uvec3(37175u, 104682u, 40306u))))))))))), ~ (~ (gl_NumWorkGroups))).x), max(0u | (gl_NumWorkGroups.x), _GLF_IDENTITY(0u | _GLF_IDENTITY((gl_NumWorkGroups.x), max(_GLF_IDENTITY((gl_NumWorkGroups.x), ((gl_NumWorkGroups.x)) | ((gl_NumWorkGroups.x))), (gl_NumWorkGroups.x))), _GLF_IDENTITY((0u | (gl_NumWorkGroups.x)), ((0u | (gl_NumWorkGroups.x))) / (1u & 1u)) >> 0u))))) - 0u)) ^ 0u))) : _GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(164919u), (_GLF_IDENTITY(_GLF_FUZZED(164919u), (_GLF_FUZZED(164919u)) | (_GLF_FUZZED(164919u)))) >> 0u), clamp(_GLF_IDENTITY(_GLF_FUZZED(164919u), (_GLF_IDENTITY(_GLF_FUZZED(164919u), (_GLF_FUZZED(164919u)) | (_GLF_FUZZED(164919u)))) >> 0u), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(164919u), (_GLF_IDENTITY(_GLF_FUZZED(164919u), (_GLF_FUZZED(164919u)) | (_GLF_FUZZED(164919u)))) >> 0u), (_GLF_IDENTITY(_GLF_FUZZED(164919u), (_GLF_IDENTITY(_GLF_FUZZED(164919u), (_GLF_FUZZED(164919u)) | (_GLF_FUZZED(164919u)))) >> 0u)) - (0u & 29526u)), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(164919u), (_GLF_IDENTITY(_GLF_FUZZED(164919u), (_GLF_FUZZED(164919u)) | (_GLF_FUZZED(164919u)))) >> 0u), min(_GLF_IDENTITY(_GLF_FUZZED(164919u), (_GLF_IDENTITY(_GLF_FUZZED(164919u), (_GLF_FUZZED(164919u)) | (_GLF_FUZZED(164919u)))) >> 0u), _GLF_IDENTITY(_GLF_FUZZED(164919u), (_GLF_IDENTITY(_GLF_FUZZED(164919u), (_GLF_FUZZED(164919u)) | (_GLF_FUZZED(164919u)))) >> 0u))))), 0u, 0u)))))), clamp((_GLF_IDENTITY(gl_NumWorkGroups.x, (_GLF_IDENTITY(true ? _GLF_IDENTITY(gl_NumWorkGroups.x, min(gl_NumWorkGroups.x, _GLF_IDENTITY(gl_NumWorkGroups.x, (_GLF_IDENTITY(gl_NumWorkGroups.x, _GLF_IDENTITY(_GLF_IDENTITY(0u | (gl_NumWorkGroups.x), max(0u | (gl_NumWorkGroups.x), _GLF_IDENTITY(0u | (gl_NumWorkGroups.x), (0u | (gl_NumWorkGroups.x)) >> 0u))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(0u | (gl_NumWorkGroups.x), max(0u | (gl_NumWorkGroups.x), _GLF_IDENTITY(0u | (gl_NumWorkGroups.x), (0u | (gl_NumWorkGroups.x)) >> 0u))), (_GLF_IDENTITY(0u | (gl_NumWorkGroups.x), max(0u | (gl_NumWorkGroups.x), _GLF_IDENTITY(0u | (gl_NumWorkGroups.x), (0u | (gl_NumWorkGroups.x)) >> 0u)))) >> 0u), _GLF_IDENTITY(0u | (gl_NumWorkGroups.x), max(0u | (gl_NumWorkGroups.x), _GLF_IDENTITY(0u | (gl_NumWorkGroups.x), (0u | (gl_NumWorkGroups.x)) >> 0u))), _GLF_IDENTITY(0u | (gl_NumWorkGroups.x), max(0u | (gl_NumWorkGroups.x), _GLF_IDENTITY(0u | (gl_NumWorkGroups.x), (0u | (gl_NumWorkGroups.x)) >> 0u))))))) ^ 0u))) : _GLF_IDENTITY(_GLF_FUZZED(164919u), (_GLF_IDENTITY(_GLF_FUZZED(164919u), (_GLF_FUZZED(164919u)) | (_GLF_FUZZED(164919u)))) >> 0u), uint(uvec3(true ? _GLF_IDENTITY(gl_NumWorkGroups.x, min(gl_NumWorkGroups.x, _GLF_IDENTITY(gl_NumWorkGroups.x, (_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups.x, _GLF_IDENTITY(_GLF_IDENTITY(0u | (gl_NumWorkGroups.x), max(0u | (gl_NumWorkGroups.x), _GLF_IDENTITY(0u | (gl_NumWorkGroups.x), (0u | (gl_NumWorkGroups.x)) >> 0u))), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(0u | (gl_NumWorkGroups.x), max(0u | (gl_NumWorkGroups.x), _GLF_IDENTITY(0u | (gl_NumWorkGroups.x), (0u | (gl_NumWorkGroups.x)) >> 0u))), ~ (~ (_GLF_IDENTITY(0u | (gl_NumWorkGroups.x), max(0u | (gl_NumWorkGroups.x), _GLF_IDENTITY(0u | (gl_NumWorkGroups.x), (0u | (gl_NumWorkGroups.x)) >> 0u)))))))))), (_GLF_IDENTITY(gl_NumWorkGroups.x, _GLF_IDENTITY(0u | (_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, clamp(gl_NumWorkGroups, gl_NumWorkGroups, _GLF_IDENTITY(gl_NumWorkGroups, (true ? gl_NumWorkGroups : _GLF_IDENTITY(_GLF_FUZZED(uvec3(37175u, 104682u, 40306u)), ~ (~ (_GLF_IDENTITY(_GLF_FUZZED(uvec3(37175u, 104682u, 40306u)), uvec3(0u, 0u, 0u) | (_GLF_FUZZED(uvec3(37175u, 104682u, 40306u))))))))))), ~ (~ (gl_NumWorkGroups))).x), max(0u | (gl_NumWorkGroups.x), _GLF_IDENTITY(0u | _GLF_IDENTITY((gl_NumWorkGroups.x), max(_GLF_IDENTITY((gl_NumWorkGroups.x), ((gl_NumWorkGroups.x)) | ((gl_NumWorkGroups.x))), (gl_NumWorkGroups.x))), _GLF_IDENTITY((0u | (gl_NumWorkGroups.x)), ((0u | (gl_NumWorkGroups.x))) / (1u & 1u)) >> 0u))))) - 0u)) ^ 0u))) : _GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(164919u), (_GLF_IDENTITY(_GLF_FUZZED(164919u), (_GLF_FUZZED(164919u)) | (_GLF_FUZZED(164919u)))) >> 0u), clamp(_GLF_IDENTITY(_GLF_FUZZED(164919u), (_GLF_IDENTITY(_GLF_FUZZED(164919u), (_GLF_FUZZED(164919u)) | (_GLF_FUZZED(164919u)))) >> 0u), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(164919u), (_GLF_IDENTITY(_GLF_FUZZED(164919u), (_GLF_FUZZED(164919u)) | (_GLF_FUZZED(164919u)))) >> 0u), (_GLF_IDENTITY(_GLF_FUZZED(164919u), (_GLF_IDENTITY(_GLF_FUZZED(164919u), (_GLF_FUZZED(164919u)) | (_GLF_FUZZED(164919u)))) >> 0u)) - (0u & 29526u)), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(164919u), (_GLF_IDENTITY(_GLF_FUZZED(164919u), (_GLF_FUZZED(164919u)) | (_GLF_FUZZED(164919u)))) >> 0u), min(_GLF_IDENTITY(_GLF_FUZZED(164919u), (_GLF_IDENTITY(_GLF_FUZZED(164919u), (_GLF_FUZZED(164919u)) | (_GLF_FUZZED(164919u)))) >> 0u), _GLF_IDENTITY(_GLF_FUZZED(164919u), (_GLF_IDENTITY(_GLF_FUZZED(164919u), (_GLF_FUZZED(164919u)) | (_GLF_FUZZED(164919u)))) >> 0u))))), 0u, 0u)))))), (_GLF_IDENTITY(gl_NumWorkGroups.x, (_GLF_IDENTITY(true ? _GLF_IDENTITY(gl_NumWorkGroups.x, min(gl_NumWorkGroups.x, _GLF_IDENTITY(gl_NumWorkGroups.x, (_GLF_IDENTITY(gl_NumWorkGroups.x, _GLF_IDENTITY(_GLF_IDENTITY(0u | (gl_NumWorkGroups.x), max(0u | (gl_NumWorkGroups.x), _GLF_IDENTITY(0u | (gl_NumWorkGroups.x), (0u | (gl_NumWorkGroups.x)) >> 0u))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(0u | (gl_NumWorkGroups.x), max(0u | (gl_NumWorkGroups.x), _GLF_IDENTITY(0u | (gl_NumWorkGroups.x), (0u | (gl_NumWorkGroups.x)) >> 0u))), (_GLF_IDENTITY(0u | (gl_NumWorkGroups.x), max(0u | (gl_NumWorkGroups.x), _GLF_IDENTITY(0u | (gl_NumWorkGroups.x), (0u | (gl_NumWorkGroups.x)) >> 0u)))) >> 0u), _GLF_IDENTITY(0u | (gl_NumWorkGroups.x), max(0u | (gl_NumWorkGroups.x), _GLF_IDENTITY(0u | (gl_NumWorkGroups.x), (0u | (gl_NumWorkGroups.x)) >> 0u))), _GLF_IDENTITY(0u | (gl_NumWorkGroups.x), max(0u | (gl_NumWorkGroups.x), _GLF_IDENTITY(0u | (gl_NumWorkGroups.x), (0u | (gl_NumWorkGroups.x)) >> 0u))))))) ^ 0u))) : _GLF_IDENTITY(_GLF_FUZZED(164919u), (_GLF_IDENTITY(_GLF_FUZZED(164919u), (_GLF_FUZZED(164919u)) | (_GLF_FUZZED(164919u)))) >> 0u), uint(uvec3(true ? _GLF_IDENTITY(gl_NumWorkGroups.x, min(gl_NumWorkGroups.x, _GLF_IDENTITY(gl_NumWorkGroups.x, (_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups.x, _GLF_IDENTITY(_GLF_IDENTITY(0u | (gl_NumWorkGroups.x), max(0u | (gl_NumWorkGroups.x), _GLF_IDENTITY(0u | (gl_NumWorkGroups.x), (0u | (gl_NumWorkGroups.x)) >> 0u))), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(0u | (gl_NumWorkGroups.x), max(0u | (gl_NumWorkGroups.x), _GLF_IDENTITY(0u | (gl_NumWorkGroups.x), (0u | (gl_NumWorkGroups.x)) >> 0u))), ~ (~ (_GLF_IDENTITY(0u | (gl_NumWorkGroups.x), max(0u | (gl_NumWorkGroups.x), _GLF_IDENTITY(0u | (gl_NumWorkGroups.x), (0u | (gl_NumWorkGroups.x)) >> 0u)))))))))), (_GLF_IDENTITY(gl_NumWorkGroups.x, _GLF_IDENTITY(0u | (_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, clamp(gl_NumWorkGroups, gl_NumWorkGroups, _GLF_IDENTITY(gl_NumWorkGroups, (true ? gl_NumWorkGroups : _GLF_IDENTITY(_GLF_FUZZED(uvec3(37175u, 104682u, 40306u)), ~ (~ (_GLF_IDENTITY(_GLF_FUZZED(uvec3(37175u, 104682u, 40306u)), uvec3(0u, 0u, 0u) | (_GLF_FUZZED(uvec3(37175u, 104682u, 40306u))))))))))), ~ (~ (gl_NumWorkGroups))).x), max(0u | (gl_NumWorkGroups.x), _GLF_IDENTITY(0u | _GLF_IDENTITY((gl_NumWorkGroups.x), max(_GLF_IDENTITY((gl_NumWorkGroups.x), ((gl_NumWorkGroups.x)) | ((gl_NumWorkGroups.x))), (gl_NumWorkGroups.x))), _GLF_IDENTITY((0u | (gl_NumWorkGroups.x)), ((0u | (gl_NumWorkGroups.x))) / (1u & 1u)) >> 0u))))) - 0u)) ^ 0u))) : _GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(164919u), (_GLF_IDENTITY(_GLF_FUZZED(164919u), (_GLF_FUZZED(164919u)) | (_GLF_FUZZED(164919u)))) >> 0u), clamp(_GLF_IDENTITY(_GLF_FUZZED(164919u), (_GLF_IDENTITY(_GLF_FUZZED(164919u), (_GLF_FUZZED(164919u)) | (_GLF_FUZZED(164919u)))) >> 0u), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(164919u), (_GLF_IDENTITY(_GLF_FUZZED(164919u), (_GLF_FUZZED(164919u)) | (_GLF_FUZZED(164919u)))) >> 0u), (_GLF_IDENTITY(_GLF_FUZZED(164919u), (_GLF_IDENTITY(_GLF_FUZZED(164919u), (_GLF_FUZZED(164919u)) | (_GLF_FUZZED(164919u)))) >> 0u)) - (0u & 29526u)), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(164919u), (_GLF_IDENTITY(_GLF_FUZZED(164919u), (_GLF_FUZZED(164919u)) | (_GLF_FUZZED(164919u)))) >> 0u), min(_GLF_IDENTITY(_GLF_FUZZED(164919u), (_GLF_IDENTITY(_GLF_FUZZED(164919u), (_GLF_FUZZED(164919u)) | (_GLF_FUZZED(164919u)))) >> 0u), _GLF_IDENTITY(_GLF_FUZZED(164919u), (_GLF_IDENTITY(_GLF_FUZZED(164919u), (_GLF_FUZZED(164919u)) | (_GLF_FUZZED(164919u)))) >> 0u))))), 0u, 0u)))))), (_GLF_IDENTITY(gl_NumWorkGroups.x, (_GLF_IDENTITY(true ? _GLF_IDENTITY(gl_NumWorkGroups.x, min(gl_NumWorkGroups.x, _GLF_IDENTITY(gl_NumWorkGroups.x, (_GLF_IDENTITY(gl_NumWorkGroups.x, _GLF_IDENTITY(_GLF_IDENTITY(0u | (gl_NumWorkGroups.x), max(0u | (gl_NumWorkGroups.x), _GLF_IDENTITY(0u | (gl_NumWorkGroups.x), (0u | (gl_NumWorkGroups.x)) >> 0u))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(0u | (gl_NumWorkGroups.x), max(0u | (gl_NumWorkGroups.x), _GLF_IDENTITY(0u | (gl_NumWorkGroups.x), (0u | (gl_NumWorkGroups.x)) >> 0u))), (_GLF_IDENTITY(0u | (gl_NumWorkGroups.x), max(0u | (gl_NumWorkGroups.x), _GLF_IDENTITY(0u | (gl_NumWorkGroups.x), (0u | (gl_NumWorkGroups.x)) >> 0u)))) >> 0u), _GLF_IDENTITY(0u | (gl_NumWorkGroups.x), max(0u | (gl_NumWorkGroups.x), _GLF_IDENTITY(0u | (gl_NumWorkGroups.x), (0u | (gl_NumWorkGroups.x)) >> 0u))), _GLF_IDENTITY(0u | (gl_NumWorkGroups.x), max(0u | (gl_NumWorkGroups.x), _GLF_IDENTITY(0u | (gl_NumWorkGroups.x), (0u | (gl_NumWorkGroups.x)) >> 0u))))))) ^ 0u))) : _GLF_IDENTITY(_GLF_FUZZED(164919u), (_GLF_IDENTITY(_GLF_FUZZED(164919u), (_GLF_FUZZED(164919u)) | (_GLF_FUZZED(164919u)))) >> 0u), uint(uvec3(true ? _GLF_IDENTITY(gl_NumWorkGroups.x, min(gl_NumWorkGroups.x, _GLF_IDENTITY(gl_NumWorkGroups.x, (_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups.x, _GLF_IDENTITY(_GLF_IDENTITY(0u | (gl_NumWorkGroups.x), max(0u | (gl_NumWorkGroups.x), _GLF_IDENTITY(0u | (gl_NumWorkGroups.x), (0u | (gl_NumWorkGroups.x)) >> 0u))), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(0u | (gl_NumWorkGroups.x), max(0u | (gl_NumWorkGroups.x), _GLF_IDENTITY(0u | (gl_NumWorkGroups.x), (0u | (gl_NumWorkGroups.x)) >> 0u))), ~ (~ (_GLF_IDENTITY(0u | (gl_NumWorkGroups.x), max(0u | (gl_NumWorkGroups.x), _GLF_IDENTITY(0u | (gl_NumWorkGroups.x), (0u | (gl_NumWorkGroups.x)) >> 0u)))))))))), (_GLF_IDENTITY(gl_NumWorkGroups.x, _GLF_IDENTITY(0u | (_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, clamp(gl_NumWorkGroups, gl_NumWorkGroups, _GLF_IDENTITY(gl_NumWorkGroups, (true ? gl_NumWorkGroups : _GLF_IDENTITY(_GLF_FUZZED(uvec3(37175u, 104682u, 40306u)), ~ (~ (_GLF_IDENTITY(_GLF_FUZZED(uvec3(37175u, 104682u, 40306u)), uvec3(0u, 0u, 0u) | (_GLF_FUZZED(uvec3(37175u, 104682u, 40306u))))))))))), ~ (~ (gl_NumWorkGroups))).x), max(0u | (gl_NumWorkGroups.x), _GLF_IDENTITY(0u | _GLF_IDENTITY((gl_NumWorkGroups.x), max(_GLF_IDENTITY((gl_NumWorkGroups.x), ((gl_NumWorkGroups.x)) | ((gl_NumWorkGroups.x))), (gl_NumWorkGroups.x))), _GLF_IDENTITY((0u | (gl_NumWorkGroups.x)), ((0u | (gl_NumWorkGroups.x))) / (1u & 1u)) >> 0u))))) - 0u)) ^ 0u))) : _GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(164919u), (_GLF_IDENTITY(_GLF_FUZZED(164919u), (_GLF_FUZZED(164919u)) | (_GLF_FUZZED(164919u)))) >> 0u), clamp(_GLF_IDENTITY(_GLF_FUZZED(164919u), (_GLF_IDENTITY(_GLF_FUZZED(164919u), (_GLF_FUZZED(164919u)) | (_GLF_FUZZED(164919u)))) >> 0u), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(164919u), (_GLF_IDENTITY(_GLF_FUZZED(164919u), (_GLF_FUZZED(164919u)) | (_GLF_FUZZED(164919u)))) >> 0u), (_GLF_IDENTITY(_GLF_FUZZED(164919u), (_GLF_IDENTITY(_GLF_FUZZED(164919u), (_GLF_FUZZED(164919u)) | (_GLF_FUZZED(164919u)))) >> 0u)) - (0u & 29526u)), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(164919u), (_GLF_IDENTITY(_GLF_FUZZED(164919u), (_GLF_FUZZED(164919u)) | (_GLF_FUZZED(164919u)))) >> 0u), min(_GLF_IDENTITY(_GLF_FUZZED(164919u), (_GLF_IDENTITY(_GLF_FUZZED(164919u), (_GLF_FUZZED(164919u)) | (_GLF_FUZZED(164919u)))) >> 0u), _GLF_IDENTITY(_GLF_FUZZED(164919u), (_GLF_IDENTITY(_GLF_FUZZED(164919u), (_GLF_FUZZED(164919u)) | (_GLF_FUZZED(164919u)))) >> 0u))))), 0u, 0u))))))))), min(_GLF_IDENTITY(~ ((_GLF_IDENTITY(gl_NumWorkGroups.x, (_GLF_IDENTITY(true ? _GLF_IDENTITY(gl_NumWorkGroups.x, min(gl_NumWorkGroups.x, _GLF_IDENTITY(gl_NumWorkGroups.x, (_GLF_IDENTITY(gl_NumWorkGroups.x, _GLF_IDENTITY(_GLF_IDENTITY(0u | (gl_NumWorkGroups.x), max(0u | (gl_NumWorkGroups.x), _GLF_IDENTITY(0u | (gl_NumWorkGroups.x), (0u | (gl_NumWorkGroups.x)) >> 0u))), 0u ^ (_GLF_IDENTITY(0u | (gl_NumWorkGroups.x), max(0u | (gl_NumWorkGroups.x), _GLF_IDENTITY(0u | (gl_NumWorkGroups.x), (0u | (gl_NumWorkGroups.x)) >> 0u))))))) ^ 0u))) : _GLF_IDENTITY(_GLF_FUZZED(164919u), (_GLF_IDENTITY(_GLF_FUZZED(164919u), (_GLF_FUZZED(164919u)) | (_GLF_FUZZED(164919u)))) >> 0u), uint(uvec3(true ? _GLF_IDENTITY(gl_NumWorkGroups.x, min(gl_NumWorkGroups.x, _GLF_IDENTITY(gl_NumWorkGroups.x, (_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups.x, _GLF_IDENTITY(0u | (gl_NumWorkGroups.x), max(0u | (gl_NumWorkGroups.x), _GLF_IDENTITY(0u | (_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) / (uvec3(1u, 1u, 1u) & uvec3(1u, 1u, 1u))).x), (0u | (gl_NumWorkGroups.x)) >> 0u)))), (_GLF_IDENTITY(gl_NumWorkGroups.x, _GLF_IDENTITY(0u | (_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, clamp(gl_NumWorkGroups, gl_NumWorkGroups, _GLF_IDENTITY(gl_NumWorkGroups, (true ? gl_NumWorkGroups : _GLF_FUZZED(uvec3(37175u, 104682u, 40306u)))))), ~ (~ (gl_NumWorkGroups))).x), max(0u | (gl_NumWorkGroups.x), _GLF_IDENTITY(0u | (gl_NumWorkGroups.x), (0u | (gl_NumWorkGroups.x)) >> 0u))))) - 0u)) ^ _GLF_IDENTITY(0u, (false ? _GLF_FUZZED((~ 146175u)) : 0u))))) : _GLF_IDENTITY(_GLF_FUZZED(164919u), (_GLF_IDENTITY(_GLF_FUZZED(164919u), (_GLF_FUZZED(164919u)) | (_GLF_FUZZED(164919u)))) >> 0u), 0u, 0u))))))), ~ (~ (~ ((_GLF_IDENTITY(gl_NumWorkGroups.x, (_GLF_IDENTITY(true ? _GLF_IDENTITY(gl_NumWorkGroups.x, min(gl_NumWorkGroups.x, _GLF_IDENTITY(gl_NumWorkGroups.x, (_GLF_IDENTITY(gl_NumWorkGroups.x, _GLF_IDENTITY(0u | (gl_NumWorkGroups.x), max(0u | (gl_NumWorkGroups.x), _GLF_IDENTITY(0u | (gl_NumWorkGroups.x), (0u | (gl_NumWorkGroups.x)) >> 0u))))) ^ 0u))) : _GLF_IDENTITY(_GLF_FUZZED(164919u), (_GLF_IDENTITY(_GLF_FUZZED(164919u), (_GLF_FUZZED(164919u)) | (_GLF_FUZZED(164919u)))) >> 0u), uint(uvec3(true ? _GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, min(gl_NumWorkGroups, gl_NumWorkGroups)).x, min(gl_NumWorkGroups.x, _GLF_IDENTITY(gl_NumWorkGroups.x, (_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups.x, _GLF_IDENTITY(0u | (gl_NumWorkGroups.x), max(0u | (gl_NumWorkGroups.x), _GLF_IDENTITY(_GLF_IDENTITY(0u | (gl_NumWorkGroups.x), (0u | (gl_NumWorkGroups.x)) >> 0u), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(0u | (gl_NumWorkGroups.x), (0u | (gl_NumWorkGroups.x)) >> 0u), (_GLF_IDENTITY(_GLF_IDENTITY(0u | (gl_NumWorkGroups.x), (0u | (gl_NumWorkGroups.x)) >> 0u), (_GLF_IDENTITY(0u | (gl_NumWorkGroups.x), (0u | (gl_NumWorkGroups.x)) >> 0u)) | (_GLF_IDENTITY(0u | (gl_NumWorkGroups.x), (0u | (gl_NumWorkGroups.x)) >> 0u)))) << 0u))))))), (_GLF_IDENTITY(gl_NumWorkGroups.x, _GLF_IDENTITY(0u | (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, clamp(gl_NumWorkGroups, gl_NumWorkGroups, _GLF_IDENTITY(gl_NumWorkGroups, (true ? gl_NumWorkGroups : _GLF_FUZZED(uvec3(37175u, 104682u, 40306u)))))), ~ (~ (gl_NumWorkGroups))), (_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, clamp(gl_NumWorkGroups, gl_NumWorkGroups, _GLF_IDENTITY(gl_NumWorkGroups, (true ? gl_NumWorkGroups : _GLF_FUZZED(uvec3(37175u, 104682u, 40306u)))))), ~ (~ (gl_NumWorkGroups)))) ^ uvec3(0u, 0u, 0u)).x), max(0u | _GLF_IDENTITY((gl_NumWorkGroups.x), ((gl_NumWorkGroups.x)) - 0u), _GLF_IDENTITY(0u | (gl_NumWorkGroups.x), _GLF_IDENTITY((0u | (gl_NumWorkGroups.x)), ((0u | (gl_NumWorkGroups.x))) - 0u) >> 0u))))) - 0u)) ^ 0u))) : _GLF_IDENTITY(_GLF_FUZZED(164919u), (_GLF_IDENTITY(_GLF_FUZZED(164919u), (_GLF_FUZZED(164919u)) | (_GLF_FUZZED(164919u)))) >> 0u), 0u, 0u)))))))))), ~ ((_GLF_IDENTITY(gl_NumWorkGroups.x, (_GLF_IDENTITY(true ? _GLF_IDENTITY(gl_NumWorkGroups.x, min(gl_NumWorkGroups.x, _GLF_IDENTITY(gl_NumWorkGroups.x, (_GLF_IDENTITY(gl_NumWorkGroups.x, _GLF_IDENTITY(0u | (gl_NumWorkGroups.x), max(0u | (gl_NumWorkGroups.x), _GLF_IDENTITY(0u | (gl_NumWorkGroups.x), (_GLF_IDENTITY(0u | (gl_NumWorkGroups.x), min(0u | (gl_NumWorkGroups.x), 0u | (gl_NumWorkGroups.x)))) >> 0u))))) ^ 0u))) : _GLF_IDENTITY(_GLF_FUZZED(164919u), (_GLF_IDENTITY(_GLF_FUZZED(164919u), (_GLF_FUZZED(164919u)) | (_GLF_FUZZED(164919u)))) >> 0u), uint(uvec3(true ? _GLF_IDENTITY(gl_NumWorkGroups.x, min(gl_NumWorkGroups.x, _GLF_IDENTITY(gl_NumWorkGroups.x, (_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups.x, _GLF_IDENTITY(_GLF_IDENTITY(0u | (gl_NumWorkGroups.x), max(0u | (gl_NumWorkGroups.x), _GLF_IDENTITY(0u | (gl_NumWorkGroups.x), (0u | (gl_NumWorkGroups.x)) >> 0u))), clamp(_GLF_IDENTITY(0u | (gl_NumWorkGroups.x), max(0u | (gl_NumWorkGroups.x), _GLF_IDENTITY(0u | (gl_NumWorkGroups.x), (0u | (gl_NumWorkGroups.x)) >> 0u))), _GLF_IDENTITY(_GLF_IDENTITY(0u | (gl_NumWorkGroups.x), max(0u | (gl_NumWorkGroups.x), _GLF_IDENTITY(0u | (gl_NumWorkGroups.x), (0u | (gl_NumWorkGroups.x)) >> 0u))), clamp(_GLF_IDENTITY(0u | (gl_NumWorkGroups.x), max(0u | (gl_NumWorkGroups.x), _GLF_IDENTITY(0u | (gl_NumWorkGroups.x), (0u | (gl_NumWorkGroups.x)) >> 0u))), _GLF_IDENTITY(0u | (gl_NumWorkGroups.x), max(0u | (gl_NumWorkGroups.x), _GLF_IDENTITY(0u | (gl_NumWorkGroups.x), (0u | (gl_NumWorkGroups.x)) >> 0u))), _GLF_IDENTITY(0u | (gl_NumWorkGroups.x), max(0u | (gl_NumWorkGroups.x), _GLF_IDENTITY(0u | (gl_NumWorkGroups.x), (0u | (gl_NumWorkGroups.x)) >> 0u))))), _GLF_IDENTITY(0u | (gl_NumWorkGroups.x), max(0u | (gl_NumWorkGroups.x), _GLF_IDENTITY(0u | (gl_NumWorkGroups.x), (0u | (gl_NumWorkGroups.x)) >> 0u)))))), (_GLF_IDENTITY(gl_NumWorkGroups.x, _GLF_IDENTITY(0u | (_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, clamp(gl_NumWorkGroups, gl_NumWorkGroups, _GLF_IDENTITY(gl_NumWorkGroups, (true ? gl_NumWorkGroups : _GLF_FUZZED(uvec3(37175u, 104682u, 40306u)))))), ~ (~ (gl_NumWorkGroups))).x), max(0u | (gl_NumWorkGroups.x), _GLF_IDENTITY(0u | (gl_NumWorkGroups.x), (0u | (gl_NumWorkGroups.x)) >> 0u))))) - 0u)) ^ 0u))) : _GLF_IDENTITY(_GLF_FUZZED(164919u), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_FUZZED(164919u), (_GLF_FUZZED(164919u)) | (_GLF_FUZZED(164919u)))) >> 0u, min((_GLF_IDENTITY(_GLF_FUZZED(164919u), (_GLF_FUZZED(164919u)) | (_GLF_FUZZED(164919u)))) >> 0u, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_FUZZED(164919u), (_GLF_FUZZED(164919u)) | (_GLF_FUZZED(164919u)))) >> 0u, uint(_GLF_ZERO(0.0, injectionSwitch.x)) | (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_FUZZED(164919u), (_GLF_FUZZED(164919u)) | (_GLF_FUZZED(164919u)))) >> 0u, ((_GLF_IDENTITY(_GLF_FUZZED(164919u), (_GLF_FUZZED(164919u)) | (_GLF_FUZZED(164919u)))) >> 0u) * 1u)))))), 0u, 0u))))))))))));
 uint workgroup_size = gl_WorkGroupSize.x;
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(-6.6))) > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
      }
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, true, false), _GLF_IDENTITY(bvec3(bvec3(bvec3(false, true, false))), bvec3(bvec3(bvec3(bvec3(bvec3(false, true, false))))))))), (injectionSwitch.x > injectionSwitch.y))) && true)))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, true && (false)))))))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false)))))))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(-8714.2009)))))))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(-9.8) : injectionSwitch.y))))))
      return;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, _GLF_IDENTITY(false, ! (! (false))), true, false)), ! _GLF_IDENTITY((_GLF_IDENTITY(! (bool(bvec4(false, false, true, false))), false || (! (bool(bvec4(false, false, true, false)))))), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY((_GLF_IDENTITY(! (bool(bvec4(false, false, true, false))), false || _GLF_IDENTITY((! (_GLF_IDENTITY(bool(bvec4(false, false, true, false)), (_GLF_IDENTITY(bool(bvec4(false, false, true, false)), bool(bvec2(_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(false, false || (false)), false, true, false)), ! (! (bool(bvec4(false, false, true, false))))), true)))) || false))), (_GLF_IDENTITY((! (bool(bvec4(false, false, true, false)))), true && ((! (bool(bvec4(false, false, true, false))))))) || false))), ((_GLF_IDENTITY(! (bool(bvec4(false, false, true, false))), false || (! _GLF_IDENTITY((_GLF_IDENTITY(bool(bvec4(false, false, true, false)), ! (! (bool(bvec4(false, false, true, false)))))), _GLF_IDENTITY(bool(bvec4((_GLF_IDENTITY(bool(bvec4(false, false, true, false)), ! (! (bool(bvec4(false, false, true, false)))))), true, true, false)), bool(bvec2(_GLF_IDENTITY(bool(bvec4((_GLF_IDENTITY(bool(bvec4(false, false, true, false)), ! (! (bool(bvec4(false, false, true, false)))))), true, true, false)), (_GLF_IDENTITY(bool(bvec4((_GLF_IDENTITY(bool(bvec4(false, false, true, false)), ! (! (bool(bvec4(false, false, true, false)))))), true, true, false)), _GLF_IDENTITY(bool(bool(bool(bvec4((_GLF_IDENTITY(bool(bvec4(false, false, true, false)), ! (! (bool(bvec4(false, false, true, false)))))), true, true, false)))), bool(bvec2(bool(bool(bool(bvec4((_GLF_IDENTITY(bool(bvec4(false, false, true, false)), ! (! (bool(bvec4(false, false, true, false)))))), true, true, false)))), false))))) || false), true)))))))) || false)), true && (_GLF_IDENTITY(bool(_GLF_IDENTITY((_GLF_IDENTITY(! (bool(bvec4(false, false, true, false))), false || (! (bool(bvec4(false, false, true, false)))))), ((_GLF_IDENTITY(_GLF_IDENTITY(! (bool(bvec4(false, false, true, false))), false || _GLF_IDENTITY((! (bool(bvec4(false, false, true, false)))), ((! (bool(bvec4(false, false, true, false))))) || false)), true && (_GLF_IDENTITY(! (bool(bvec4(false, false, true, false))), false || _GLF_IDENTITY((! (bool(bvec4(false, false, true, false)))), ((! (bool(bvec4(false, false, true, false))))) || false)))))) || false)), ! (! (bool(_GLF_IDENTITY((_GLF_IDENTITY(! (bool(bvec4(false, false, true, false))), false || (! (bool(bvec4(false, false, true, false)))))), ((_GLF_IDENTITY(! (bool(bvec4(false, false, true, false))), false || (_GLF_IDENTITY(! (bool(bvec4(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, bool(bvec2(false, true)))), bool(bvec4(! (_GLF_IDENTITY(false, bool(bvec2(false, true)))), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))))), false, true, false))), bool(bvec3(! (bool(bvec4(false, false, true, false))), false, true))))))) || false)))))))))))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         return;
        }
       return;
       if(_GLF_DEAD(false))
        return;
      }
     return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((false), false || ((false)))))), false || (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((false), false || ((false)))))), bool(bvec2(_GLF_DEAD(_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((false), false || ((false)))))), true))))))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, false, _GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, (false) && true))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bool(bool(bool(bvec4(false, false, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), ! (! (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, false, _GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, (false) && true))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bool(bool(bool(bvec4(false, _GLF_IDENTITY(false, (false) || false), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))))), ! (! (_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, false, _GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, (false) && true))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bool(bool(bool(bvec4(false, false, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), ! (! (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, false, _GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, _GLF_IDENTITY((false) && true, bool(bvec2((false) && true, true)))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bool(bool(bool(bvec4(false, false, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))))))))
      return;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, false, false), bvec3(bvec4(_GLF_IDENTITY(bvec3(false, false, false), bvec3(bvec3(_GLF_IDENTITY(bvec3(false, false, false), bvec3(bvec3(bvec3(false, false, false))))))), _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-598.201), _GLF_IDENTITY((injectionSwitch)[1], ((injectionSwitch)[1]) - 0.0)), vec2((injectionSwitch)[0], _GLF_FUZZED(793.538)), bvec2(true, false))).y)), bool(_GLF_IDENTITY(bool(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-598.201), _GLF_IDENTITY((injectionSwitch)[1], ((injectionSwitch)[1]) - 0.0)), vec2((injectionSwitch)[0], _GLF_FUZZED(793.538)), bvec2(true, false))).y))), ! (! (bool(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-598.201), _GLF_IDENTITY((injectionSwitch)[1], ((injectionSwitch)[1]) - 0.0)), vec2((injectionSwitch)[0], _GLF_FUZZED(793.538)), bvec2(true, false))).y)))))))))))))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), mix(vec2(_GLF_FUZZED((-7.4)), _GLF_FUZZED(63.92)), vec2((mat2(1.0) * (injectionSwitch))[0], (mat2(1.0) * (injectionSwitch))[1]), bvec2(true, true)))).x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
        return;
       return;
      }
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, false || (false)), false, true)))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bool((injectionSwitch.x > injectionSwitch.y))))))))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true))))
    return;
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
  }
 uint workgroup_id = gl_WorkGroupID.x;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch))) - vec2(0.0, 0.0)).y)), false || (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch))) - vec2(0.0, 0.0)).y))))))
  return;
 uint workgroup_base = workgroup_size * workgroup_id;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
    return;
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))), ! (! (_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false))))))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, true, false, true)))))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y))))))) && true), false, true, _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat3(injectionSwitch, _GLF_IDENTITY(dot(vec2(_GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(1.0, 1.0, 0.0)), dot(vec3(0.0, 0.0, 1.0), vec3(1.0, 1.0, 0.0))), exp(0.0)), vec2(0.0, 1.0)), dot(vec2(_GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(1.0, 1.0, 0.0)), dot(vec3(0.0, 0.0, 1.0), vec3(1.0, 1.0, 0.0))), exp(0.0)), vec2(0.0, 1.0))), sqrt(0.0), 1.0, 1.0, 0.0, exp(0.0), determinant(mat4(1.0, 0.0, 0.0, determinant(mat4(0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)), 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 1.0, 0.0, 0.0, 1.0))), mat3(mat3x4(mat3(injectionSwitch, _GLF_IDENTITY(dot(vec2(_GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(1.0, 1.0, 0.0)), dot(vec3(0.0, 0.0, 1.0), vec3(1.0, 1.0, 0.0))), exp(0.0)), vec2(0.0, 1.0)), dot(vec2(_GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(1.0, 1.0, 0.0)), dot(vec3(0.0, 0.0, 1.0), vec3(1.0, 1.0, 0.0))), exp(0.0)), vec2(0.0, 1.0))), sqrt(0.0), 1.0, 1.0, 0.0, exp(0.0), determinant(mat4(1.0, 0.0, 0.0, determinant(mat4(0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)), 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 1.0, 0.0, 0.0, 1.0)))))))).y)))))))))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            return;
           if(_GLF_DEAD(false))
            return;
           return;
           if(_GLF_DEAD(false))
            return;
          }
         return;
        }
       if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
        return;
       return;
      }
     return;
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_DEAD(false), false)))))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) && true)) && true), (_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true)))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
    }
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, false || _GLF_IDENTITY((false), ((false)) || false))))
  {
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(false))
    return;
  }
 uint virtual_gid = _GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size + subgroup_local_id, ~ (~ (_GLF_IDENTITY(workgroup_base, (workgroup_base) | (workgroup_base)) + subgroup_id * _GLF_IDENTITY(subgroup_size, min(_GLF_IDENTITY(subgroup_size, (subgroup_size) ^ 0u), subgroup_size)) + subgroup_local_id)));
 do
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          break;
         continue;
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          break;
         break;
        }
       if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), (_GLF_IDENTITY(! (! (false)), true && (! (! (false))))) || false))))
        break;
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[_GLF_IDENTITY(1, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? 1 : _GLF_FUZZED(-35861)))])).x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          return;
         continue;
        }
       continue;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            return;
           break;
          }
         if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)).x > injectionSwitch.y)))) || false)))))
          break;
         continue;
        }
      }
     return;
    }
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), (! (_GLF_IDENTITY(! (_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true)))), bool(bvec4(! (_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true)))), false, true, false))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))
    {
     if(_GLF_DEAD(false))
      continue;
     break;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      break;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       break;
      }
     break;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      break;
     continue;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        continue;
       continue;
      }
     return;
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, (false) && true), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bvec2(bvec4(bvec2(false, _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), injectionSwitch)), injectionSwitch, _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)))).y))), true, true)))), bool(_GLF_IDENTITY(bvec3(bool(_GLF_IDENTITY(bvec2(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bvec2(bvec4(bvec2(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), true, true)))), true, false), bvec3(bvec3(bvec3(bool(_GLF_IDENTITY(bvec2(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bvec2(bvec4(bvec2(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), true, true)))), true, false))))))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        break;
       continue;
      }
     if(_GLF_DEAD(false))
      continue;
    }
   atomicStore(write_val, uint(_GLF_IDENTITY(_GLF_IDENTITY(virtual_gid, 0u ^ (_GLF_IDENTITY(virtual_gid, _GLF_IDENTITY((_GLF_IDENTITY(virtual_gid, clamp(virtual_gid, virtual_gid, virtual_gid))) ^ 0u, min(_GLF_IDENTITY((_GLF_IDENTITY(virtual_gid, clamp(virtual_gid, virtual_gid, virtual_gid))) ^ 0u, (false ? _GLF_FUZZED(workgroup_id) : (_GLF_IDENTITY(virtual_gid, clamp(virtual_gid, virtual_gid, virtual_gid))) ^ 0u)), (_GLF_IDENTITY(_GLF_IDENTITY(virtual_gid, clamp(virtual_gid, virtual_gid, virtual_gid)), _GLF_IDENTITY(uint(uvec4(_GLF_IDENTITY(_GLF_IDENTITY(virtual_gid, clamp(virtual_gid, virtual_gid, virtual_gid)), 0u | (_GLF_IDENTITY(virtual_gid, clamp(virtual_gid, virtual_gid, virtual_gid)))), 1u, (0u >> _GLF_IDENTITY(uint(2u), uint(_GLF_IDENTITY(2u, 0u ^ (2u))))), 1u)), min(uint(uvec4(_GLF_IDENTITY(_GLF_IDENTITY(virtual_gid, clamp(virtual_gid, virtual_gid, virtual_gid)), 0u | (_GLF_IDENTITY(virtual_gid, clamp(virtual_gid, virtual_gid, virtual_gid)))), 1u, (0u >> _GLF_IDENTITY(uint(2u), uint(2u))), 1u)), uint(uvec4(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(virtual_gid, max(virtual_gid, virtual_gid)), clamp(virtual_gid, virtual_gid, virtual_gid)), _GLF_IDENTITY(0u, max(0u, 0u)) | (_GLF_IDENTITY(virtual_gid, clamp(virtual_gid, virtual_gid, virtual_gid)))), _GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, uint(uvec4(1u, 1u, 1u, 0u)))) >> 0u), (0u >> _GLF_IDENTITY(uint(2u), uint(2u))), _GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, (1u) << 0u)) | (1u)))))))) ^ 0u))))), (_GLF_IDENTITY(_GLF_IDENTITY(virtual_gid, 0u ^ _GLF_IDENTITY((_GLF_IDENTITY(virtual_gid, (_GLF_IDENTITY(_GLF_IDENTITY(virtual_gid, clamp(_GLF_IDENTITY(virtual_gid, (virtual_gid) | (virtual_gid)), virtual_gid, virtual_gid)), (_GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, (true) && true))) ? _GLF_IDENTITY(virtual_gid, clamp(virtual_gid, _GLF_IDENTITY(virtual_gid, clamp(virtual_gid, virtual_gid, virtual_gid)), _GLF_IDENTITY(virtual_gid, clamp(virtual_gid, virtual_gid, virtual_gid)))) : _GLF_FUZZED(subgroup_id)))) ^ _GLF_IDENTITY(0u, (0u) ^ 0u))), ((_GLF_IDENTITY(virtual_gid, (_GLF_IDENTITY(_GLF_IDENTITY(virtual_gid, clamp(_GLF_IDENTITY(virtual_gid, (virtual_gid) | (virtual_gid)), virtual_gid, virtual_gid)), (_GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, (true) && true))) ? _GLF_IDENTITY(virtual_gid, clamp(virtual_gid, _GLF_IDENTITY(virtual_gid, clamp(virtual_gid, virtual_gid, virtual_gid)), _GLF_IDENTITY(virtual_gid, clamp(virtual_gid, virtual_gid, virtual_gid)))) : _GLF_FUZZED(subgroup_id)))) ^ _GLF_IDENTITY(0u, (0u) ^ 0u)))) << 0u)), (_GLF_IDENTITY(virtual_gid, 0u ^ (_GLF_IDENTITY(_GLF_IDENTITY(virtual_gid, (virtual_gid) - 0u), (_GLF_IDENTITY(virtual_gid, clamp(virtual_gid, virtual_gid, virtual_gid))) ^ 0u)))) | (_GLF_IDENTITY(virtual_gid, 0u ^ (_GLF_IDENTITY(virtual_gid, (_GLF_IDENTITY(virtual_gid, clamp(virtual_gid, virtual_gid, virtual_gid))) ^ 0u)))))) << 0u)), 4, 64, 0);
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(447.110) : injectionSwitch.x)) > injectionSwitch.y))))
    continue;
  }
 while(_GLF_WRAPPED_LOOP(false));
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))))
    return;
   return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false)))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
      }
    }
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 uint read_val = atomicLoad(write_val, 4, 64, 0);
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))
    return;
  }
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)).x > injectionSwitch.y))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)).x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)).x > injectionSwitch.y))))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), bool(bvec4(_GLF_IDENTITY(false, (false) && true), true, true, true)))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(mat4x2(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), 0.0, 1.0, 1.0, 1.0, 1.0, 0.0))).y))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), bool(bool(_GLF_IDENTITY(false, ! (! (false))))))))
    return;
   return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  return;
 _GLF_IDENTITY(_GLF_IDENTITY(buf[virtual_gid] = uint(subgroupAllEqual(read_val)), (false ? _GLF_FUZZED(workgroup_id) : _GLF_IDENTITY(buf[virtual_gid] = uint(subgroupAllEqual(read_val)), (buf[virtual_gid] = uint(subgroupAllEqual(read_val))) << 0u))), (_GLF_IDENTITY(buf[virtual_gid] = _GLF_IDENTITY(uint(subgroupAllEqual(read_val)), (uint(subgroupAllEqual(read_val))) / 1u), 0u + _GLF_IDENTITY((_GLF_IDENTITY(buf[virtual_gid] = uint(subgroupAllEqual(read_val)), (buf[virtual_gid] = uint(subgroupAllEqual(read_val))) >> 0u)), (_GLF_IDENTITY((_GLF_IDENTITY(buf[virtual_gid] = uint(subgroupAllEqual(read_val)), (buf[virtual_gid] = uint(subgroupAllEqual(read_val))) >> 0u)), 0u + ((_GLF_IDENTITY(buf[virtual_gid] = uint(subgroupAllEqual(read_val)), (buf[virtual_gid] = uint(subgroupAllEqual(read_val))) >> 0u))))) / 1u))) + _GLF_IDENTITY(0u, (true ? _GLF_IDENTITY(0u, (0u) | 0u) : _GLF_FUZZED(write_val))));
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
}
