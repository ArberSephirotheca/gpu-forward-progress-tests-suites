#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
#extension GL_EXT_maximal_reconvergence : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer WriteVal {
 uint write_val;
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_FALSE(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, (false) || false))), _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec3((injectionSwitch.x > injectionSwitch.y), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)))) || (false))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      return;
     return;
    }
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)) && _GLF_IDENTITY(true, bool(bool(_GLF_IDENTITY(true, bool(bvec3(_GLF_IDENTITY(true, bool(_GLF_IDENTITY(bvec2(true, false), bvec2(bvec3(bvec2(true, false), true))))), false, false)))))))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          barrier();
         return;
        }
       barrier();
      }
     return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(bvec3(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     return;
    }
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
    barrier();
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (_GLF_IDENTITY(false, ! (! (false))))), ! (_GLF_IDENTITY(! ((! (_GLF_IDENTITY(false, ! (! (false)))))), true && (_GLF_IDENTITY(! ((! (_GLF_IDENTITY(false, ! (! (false)))))), false || (! ((! (_GLF_IDENTITY(false, ! (! (false)))))))))))))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(round(vec2(99.88, -46.09))) : injectionSwitch)), vec2(injectionSwitch[0], injectionSwitch[1])).x > injectionSwitch.y))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   return;
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false), true, false))))
  {
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, (true ? _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0) : _GLF_FUZZED(54.99))), injectionSwitch.y, injectionSwitch.y)), ! (! (_GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)) : _GLF_FUZZED(injectionSwitch))).x > injectionSwitch.y)))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(1.3)), float(injectionSwitch.y), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))), ! (_GLF_IDENTITY(! (_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, false)), (bool(bvec2(false, false))) && true)))), (injectionSwitch.x > injectionSwitch.y)))), (! (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(5.9)), vec2(_GLF_FUZZED(-626.464), (injectionSwitch)[1]), bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))).x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)))).y))))) && _GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), ! (! (! (true))))))))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) && _GLF_IDENTITY(true, bool(bvec2(true, false))))))))
      barrier();
     return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! _GLF_IDENTITY((false), (_GLF_IDENTITY((false), ! (! (_GLF_IDENTITY(_GLF_IDENTITY((false), bool(bool((false)))), (_GLF_IDENTITY((false), ! (! ((false))))) || false))))) || false), (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), ! (_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_IDENTITY(bool(bool(false)), bool(bvec2(bool(bool(false)), false)))), ! (! ((bool(bool(false)))))), ! (! (! (bool(bool(false)))))))))), _GLF_IDENTITY(! (_GLF_IDENTITY(! (! (false)), ! (! (! (! (false)))))), true && (_GLF_IDENTITY(! (_GLF_IDENTITY(! (! (false)), ! (! (! (! (false)))))), (! (_GLF_IDENTITY(! (! (false)), ! (! (! (! (false))))))) && true)))), (_GLF_IDENTITY(! (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), ! (_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_IDENTITY(bool(bool(false)), bool(bvec2(bool(_GLF_IDENTITY(bool(false), ! (! (_GLF_IDENTITY(bool(false), bool(bvec4(bool(false), false, false, false))))))), false)))), ! (! ((bool(bool(false)))))), ! (! (! (bool(bool(false)))))))))), _GLF_IDENTITY(! (_GLF_IDENTITY(! (! (false)), ! (! (! (! (false)))))), true && (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(! (! (false)), _GLF_IDENTITY(bool(bool(! (! (false)))), true && (bool(bool(! (! (false))))))), ! (! (! (! (false)))))), (! (_GLF_IDENTITY(! (! (false)), ! (! (! (! (false))))))) && true))))) || false)) || false))), true && (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! _GLF_IDENTITY((false), (_GLF_IDENTITY((false), ! (! (_GLF_IDENTITY(_GLF_IDENTITY((false), bool(bool((false)))), (_GLF_IDENTITY((_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, false || (false)), false)))), ! (! ((false))))) || false))))) || false), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), ! (_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_IDENTITY(bool(bool(false)), bool(bvec2(bool(bool(false)), false)))), ! (! ((bool(bool(false)))))), ! (! (! (bool(bool(false)))))))))), _GLF_IDENTITY(! (_GLF_IDENTITY(! (! (false)), ! (! (! (! (false)))))), true && (_GLF_IDENTITY(! (_GLF_IDENTITY(! (! (false)), ! (! (! (! (false)))))), (! (_GLF_IDENTITY(! (! (false)), ! (! (! (! (false))))))) && true)))), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), ! (_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_IDENTITY(bool(bool(false)), bool(bvec2(bool(bool(false)), false)))), ! (! ((bool(bool(false)))))), ! (! (! (bool(bool(false)))))))))), _GLF_IDENTITY(! (_GLF_IDENTITY(! (! (false)), ! (! (! (! (false)))))), true && (_GLF_IDENTITY(! (_GLF_IDENTITY(! (! (false)), ! (! (! (! (false)))))), (! (_GLF_IDENTITY(! (! (false)), ! (! (! (! (false))))))) && true)))), (_GLF_IDENTITY(! (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), ! (_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_IDENTITY(bool(bool(false)), bool(bvec2(bool(bool(false)), false)))), ! (! ((bool(bool(false)))))), ! (! (! (bool(bool(false)))))))))), _GLF_IDENTITY(! (_GLF_IDENTITY(! (! (false)), ! (! (! (! (false)))))), true && (_GLF_IDENTITY(! (_GLF_IDENTITY(! (! (false)), ! (! (! (! (false)))))), (! (_GLF_IDENTITY(! (! (false)), ! (! (! (! (false))))))) && true))))) && true), true), bvec2(bvec3(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), ! (_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_IDENTITY(bool(bool(false)), bool(bvec2(bool(bool(false)), false)))), ! (! ((bool(bool(false)))))), ! (! (! (bool(bool(false)))))))))), _GLF_IDENTITY(! (_GLF_IDENTITY(! (! (false)), ! (! (! (! (false)))))), true && (_GLF_IDENTITY(! (_GLF_IDENTITY(! (! (false)), ! (! (! (! (false)))))), (! (_GLF_IDENTITY(! (! (false)), ! (! (! (! (false))))))) && true)))), (_GLF_IDENTITY(! (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), ! (_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_IDENTITY(bool(bool(false)), bool(bvec2(bool(bool(false)), false)))), ! (! ((bool(bool(false)))))), ! (! (! (bool(bool(false)))))))))), _GLF_IDENTITY(! (_GLF_IDENTITY(! (! (false)), ! (! (! (! (false)))))), true && (_GLF_IDENTITY(! (_GLF_IDENTITY(! (! (false)), ! (! (! (! (false)))))), (! (_GLF_IDENTITY(! (! (false)), ! (! (! (! (false))))))) && true))))) && true), true), true))))), (_GLF_IDENTITY(! (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), ! _GLF_IDENTITY((_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_IDENTITY(bool(bool(false)), bool(bvec2(bool(_GLF_IDENTITY(bool(false), ! (! (_GLF_IDENTITY(bool(false), bool(bvec4(bool(false), false, false, false))))))), false)))), ! (! ((bool(bool(false)))))), ! (! (! (bool(bool(false))))))), false || ((_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_IDENTITY(bool(bool(false)), bool(bvec2(bool(_GLF_IDENTITY(bool(false), ! (! (_GLF_IDENTITY(bool(false), bool(bvec4(bool(false), false, false, false))))))), false)))), ! (! ((bool(bool(false)))))), ! (! (! (bool(bool(false)))))))))))), _GLF_IDENTITY(! (_GLF_IDENTITY(! (! (false)), ! (! (_GLF_IDENTITY(! (! (false)), false || (_GLF_IDENTITY(! (! (false)), true && (! (! (false)))))))))), true && (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(! (! (false)), _GLF_IDENTITY(bool(bool(! (! (false)))), true && (bool(bool(! (! (false))))))), ! (! (! (! (false)))))), (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(! (! (false)), (! (! (false))) || false), _GLF_IDENTITY(bool(bool(! (! (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec3(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)))) || false))))), true && (bool(bool(! (! (false))))))), _GLF_IDENTITY(! (! (! (! (false)))), (! (! (! (! (false))))) || false)))) && true), (! (_GLF_IDENTITY(! (! (false)), ! (! (! (! (false))))))) && true))))) || false)) || false)))))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       return;
      }
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   return;
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   barrier();
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > injectionSwitch.y))))
      return;
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
  }
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, _GLF_IDENTITY(false || (false), bool(bvec3(false || (false), true, false))))), bool(bvec4(! (_GLF_IDENTITY(false, _GLF_IDENTITY(false || (false), bool(bvec3(false || (false), true, false))))), true, true, true)))))), false || (_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, _GLF_IDENTITY(false || (false), bool(_GLF_IDENTITY(bvec3(false || (false), true, false), bvec3(bvec4(bvec3(false || (false), true, false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))), true && (_GLF_IDENTITY(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), (bool(bool(false))) || false)))), ! (! (_GLF_IDENTITY(false, _GLF_IDENTITY(false || (false), bool(bvec3(false || (false), true, false)))))))))))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY((false) && true, bool(bool((false) && true))))))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY((_GLF_DEAD(false)) && true, bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY((_GLF_DEAD(false)) && true, ((_GLF_DEAD(false)) && true) || false), false, false), bvec3(bvec3(bvec3(_GLF_IDENTITY((_GLF_DEAD(false)) && true, ((_GLF_DEAD(false)) && true) || false), false, false))))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(_GLF_IDENTITY(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(629.969), _GLF_FUZZED(vec4(6331.7863, -93.21, -7.1, 2.6).t)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))) : _GLF_FUZZED(vec2(267.188, 0.1)))).y))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, false, true)))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, false || (false))))))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  barrier();
 uint subgroup_local_id = gl_SubgroupInvocationID;
 uint num_workgroup = gl_NumWorkGroups.x;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, false || (false))))), ! (! (_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), _GLF_IDENTITY(true && (_GLF_IDENTITY(false, _GLF_IDENTITY(false, (false) || false) || (false))), bool(_GLF_IDENTITY(bvec2(true && (_GLF_IDENTITY(false, _GLF_IDENTITY(false, (false) || false) || (false))), false), bvec2(bvec4(bvec2(true && (_GLF_IDENTITY(false, _GLF_IDENTITY(false, (false) || false) || (false))), false), false, true)))))))))))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))), _GLF_IDENTITY((_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), false || (! (! (false))))), true, true), bvec3(bvec3(bvec3(_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), ! (! (_GLF_IDENTITY(! (! (false)), bool(bvec4(! (! (false)), false, true, true))))))), true, true)))))))) || false, true && ((_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) && true))), true, true), bvec3(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, ! (! (false))), _GLF_IDENTITY(true, (true) && true), _GLF_IDENTITY(true, (true) || false)), bvec3(bvec4(bvec3(_GLF_IDENTITY(false, ! (! (false))), _GLF_IDENTITY(true, (true) && true), _GLF_IDENTITY(true, (true) || false)), true)))))))))) || false))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false))))))))
      {
       if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, false, true)))), ! (! (_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, false, true))))))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          return;
         barrier();
        }
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), true && (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, true && (false)), (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(_GLF_ONE(1.0, injectionSwitch.y))).y, min(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(_GLF_ONE(1.0, injectionSwitch.y))).y, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - abs(0.0))))).y))))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, false || (false)), (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_DEAD(false)))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(intBitsToFloat(-5126)) : injectionSwitch.y)))), (_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0) > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0), (mat2(1.0)) - mat2(0.0, 0.0, 0.0, 0.0)) * (injectionSwitch)))).y)))))) || false)), _GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))) || (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, vec2(mat3(injectionSwitch, 0.0, determinant(mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, sqrt(0.0), 0.0, 0.0)), abs(1.0), 0.0, 1.0, 0.0, 0.0)))) / vec2(1.0, 1.0))) - vec2(0.0, 0.0)).y, ! (! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, vec2(mat3(injectionSwitch, 0.0, determinant(mat3(0.0, 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, (0.0) / 1.0), sqrt(0.0), 0.0, 0.0)), abs(1.0), 0.0, 1.0, 0.0, 0.0)))) / vec2(1.0, 1.0))) - vec2(0.0, 0.0)).y))))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), false || (! (false))))), (_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)), injectionSwitch)).x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0))), false || (_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), false || _GLF_IDENTITY((! (false)), _GLF_IDENTITY(bool(bvec3((! (false)), false, true)), bool(bvec3(bool(bvec3((! (false)), false, true)), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))), (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), false || (! (false))))), (injectionSwitch.x > injectionSwitch.y))))))), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) || false), (_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, vec2(mat3(injectionSwitch, 0.0, determinant(mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, sqrt(0.0), 0.0, 0.0)), abs(1.0), 0.0, 1.0, 0.0, 0.0)))) / vec2(1.0, 1.0))) - vec2(0.0, 0.0)).y, ! (! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)), vec2(mat3(injectionSwitch, 0.0, determinant(_GLF_IDENTITY(mat3(0.0, 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, (0.0) / 1.0), _GLF_IDENTITY(sqrt(0.0), min(sqrt(0.0), _GLF_IDENTITY(sqrt(0.0), (sqrt(0.0)) / 1.0))), 0.0, 0.0), mat3(mat3(mat3(0.0, 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, (0.0) / 1.0), _GLF_IDENTITY(sqrt(0.0), min(sqrt(0.0), _GLF_IDENTITY(sqrt(0.0), (sqrt(0.0)) / 1.0))), 0.0, 0.0))))), abs(1.0), 0.0, 1.0, 0.0, 0.0)))) / vec2(1.0, 1.0))) - vec2(0.0, 0.0)).y))))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), false || (! (false))))), bool(bool(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), false || (! (false)))))))), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)), injectionSwitch)).x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0), false || (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)), injectionSwitch)).x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0), (_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0), mat2(_GLF_IDENTITY(mat4x3(mat2(1.0)), (mat4x3(mat2(1.0))) + mat4x3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)))) * (injectionSwitch)), injectionSwitch)).x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0)) || false))))), false || (_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), _GLF_IDENTITY(false || _GLF_IDENTITY((! (false)), _GLF_IDENTITY(bool(bvec3((! (false)), false, true)), bool(bvec3(bool(bvec3((! (false)), false, true)), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), (false || _GLF_IDENTITY((! _GLF_IDENTITY((false), true && (_GLF_IDENTITY((false), bool(bvec4(_GLF_IDENTITY((false), ((false)) && true), false, false, true)))))), _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec3((! (false)), false, true)), bool(bvec3(bool(bvec3((! (false)), false, true)), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec3((! (false)), false, true)), bool(bvec3(bool(bvec3((! (false)), false, true)), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), (_GLF_IDENTITY(bool(bvec3((! (false)), false, true)), bool(bvec3(bool(bvec3((! (false)), false, true)), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))) || false), false, true, false)), false || (bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec3((! (false)), false, true)), bool(bvec3(bool(bvec3((! (false)), false, true)), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), (_GLF_IDENTITY(bool(bvec3((! (false)), false, true)), bool(bvec3(bool(bvec3((! (false)), false, true)), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))) || false), false, true, false))))))) && true)))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(2814.0292)), float(injectionSwitch.y), bool(true))))), ! (_GLF_IDENTITY(! (_GLF_FALSE(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), false || (! (false))))), (injectionSwitch.x > injectionSwitch.y))), ! (! (! (_GLF_FALSE(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), false || (! (false))))), (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED((6.8 * 936.517)), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(0.1)), bvec2(true, false))).x > injectionSwitch.y)))))))))), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) || false)) && true))))))))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            return;
           barrier();
          }
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), ! (! (! (injectionSwitch.x > injectionSwitch.y))))))))))
          return;
         if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
          {
           if(_GLF_DEAD(false))
            return;
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            return;
           barrier();
          }
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
            return;
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            return;
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(false))
              barrier();
             barrier();
            }
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              {
               if(_GLF_DEAD(false))
                return;
               barrier();
              }
             barrier();
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              {
               if(_GLF_DEAD(false))
                return;
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                {
                 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
                  return;
                 barrier();
                }
               if(_GLF_DEAD(false))
                return;
               return;
              }
            }
           barrier();
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(false))
              {
               if(_GLF_DEAD(false))
                barrier();
               barrier();
              }
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              barrier();
             barrier();
             if(_GLF_DEAD(false))
              return;
            }
          }
         if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(true, ! _GLF_IDENTITY((! (true)), false || ((! (true))))) && (injectionSwitch.x > injectionSwitch.y))))))
          {
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              return;
             if(_GLF_DEAD(false))
              barrier();
             barrier();
            }
           barrier();
           if(_GLF_DEAD(false))
            barrier();
          }
         return;
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           barrier();
          }
         if(_GLF_DEAD(false))
          barrier();
        }
       barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        return;
       if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, true && (false)), (injectionSwitch.x > injectionSwitch.y))), ! (_GLF_IDENTITY(! (_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, true && (false)), (injectionSwitch.x > injectionSwitch.y)))), ! (! (! _GLF_IDENTITY((_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, true && (false)), _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(bvec2(! ((injectionSwitch.x > injectionSwitch.y)), true)), true && (bool(bvec2(! ((injectionSwitch.x > injectionSwitch.y)), true)))))))))), ! (! ((_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, true && (false)), _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(bvec2(! ((injectionSwitch.x > injectionSwitch.y)), true)), true && (bool(bvec2(! ((injectionSwitch.x > injectionSwitch.y)), true)))))))))))))))))))
        barrier();
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              barrier();
             return;
            }
           barrier();
           if(_GLF_DEAD(false))
            return;
          }
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          return;
         barrier();
        }
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   return;
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(-9183.4289, 931.555)))))).y, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(-9183.4289, 931.555)))))).y) - 0.0))), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, false)))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_DEAD(false))), _GLF_IDENTITY((_GLF_DEAD(false)), true && ((_GLF_DEAD(false)))) || false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0) > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, false, true, true)))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x > _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(148.985)), vec2(_GLF_FUZZED(623.402), _GLF_IDENTITY((injectionSwitch)[1], min((injectionSwitch)[1], (injectionSwitch)[1]))), bvec2(false, true))).y)), (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x > _GLF_IDENTITY(injectionSwitch, mix(_GLF_IDENTITY(vec2((injectionSwitch)[0], _GLF_FUZZED(148.985)), (_GLF_IDENTITY(vec2((injectionSwitch)[0], _GLF_FUZZED(148.985)), (false ? _GLF_FUZZED(injectionSwitch) : vec2((injectionSwitch)[0], _GLF_FUZZED(148.985))))) * vec2(1.0, 1.0)), vec2(_GLF_FUZZED(623.402), _GLF_IDENTITY((injectionSwitch)[1], min((injectionSwitch)[1], _GLF_IDENTITY((injectionSwitch), (false ? _GLF_FUZZED(vec2(-47.24, 500.394)) : (injectionSwitch)))[1]))), bvec2(false, true))).y))) && true)))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 uint workgroup_size = _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) >> uvec3(0u, 0u, 0u)).x, (_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) >> uvec3(0u, 0u, 0u)).x) / ((1u & 1u) & 1u)), (_GLF_IDENTITY(gl_WorkGroupSize.x, 0u + (gl_WorkGroupSize.x))) >> 0u), (_GLF_IDENTITY(gl_WorkGroupSize.x, _GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) + uvec3(0u, 0u, 0u)).x), ((gl_WorkGroupSize.x)) << _GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)), uint(uint(uint(_GLF_ZERO(0.0, injectionSwitch.x)))))) >> 0u)) * _GLF_IDENTITY(1u, (1u) - 0u));
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint workgroup_id = _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, uvec3(0u, 0u, 0u) ^ (gl_WorkGroupID)).x, uint(uvec2(_GLF_IDENTITY(gl_WorkGroupID, _GLF_IDENTITY(uvec3(0u, 0u, 0u) ^ _GLF_IDENTITY((gl_WorkGroupID), ~ (~ ((gl_WorkGroupID)))), min(uvec3(0u, 0u, 0u) ^ (gl_WorkGroupID), uvec3(0u, 0u, 0u) ^ (_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) << uvec3(0u, 0u, 0u)))))).x, 1u)));
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 uint workgroup_base = workgroup_size * workgroup_id;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint subgroup_base = _GLF_IDENTITY(subgroup_id * _GLF_IDENTITY(subgroup_size, (subgroup_size) / _GLF_IDENTITY(1u, 0u | (1u))), ~ (~ (_GLF_IDENTITY(subgroup_id * _GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, 0u ^ (subgroup_size))) / 1u), _GLF_IDENTITY(1u, uint(uvec3(_GLF_IDENTITY(1u, 0u | (1u)), 1u, 1u))) * (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, uint(uvec2(_GLF_IDENTITY(subgroup_id, (subgroup_id) - 0u), ((1u << _GLF_IDENTITY(uint(2u), uint(2u))) >> _GLF_IDENTITY(uint(2u), uint(2u)))))) * _GLF_IDENTITY(subgroup_size, (subgroup_size) / 1u), ~ _GLF_IDENTITY((_GLF_IDENTITY(~ (subgroup_id * _GLF_IDENTITY(subgroup_size, (subgroup_size) / 1u)), min(_GLF_IDENTITY(~ (subgroup_id * _GLF_IDENTITY(subgroup_size, (subgroup_size) / 1u)), (true ? ~ (subgroup_id * _GLF_IDENTITY(subgroup_size, (subgroup_size) / 1u)) : _GLF_FUZZED(subgroup_local_id))), ~ (subgroup_id * _GLF_IDENTITY(subgroup_size, (subgroup_size) / _GLF_IDENTITY(_GLF_IDENTITY(1u, clamp(1u, 1u, 1u)), (0u ^ _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) >> uint(_GLF_ZERO(0.0, injectionSwitch.x)))) | (_GLF_IDENTITY(0u, (0u) + 0u)))) ^ (1u))))))), max((_GLF_IDENTITY(~ (subgroup_id * _GLF_IDENTITY(subgroup_size, (subgroup_size) / 1u)), min(_GLF_IDENTITY(~ (_GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(subgroup_id, min(subgroup_id, subgroup_id))) << 0u) * _GLF_IDENTITY(subgroup_size, (subgroup_size) / 1u)), (true ? ~ (subgroup_id * _GLF_IDENTITY(subgroup_size, (subgroup_size) / 1u)) : _GLF_FUZZED(subgroup_local_id))), ~ (subgroup_id * _GLF_IDENTITY(subgroup_size, (subgroup_size) / _GLF_IDENTITY(1u, (0u ^ _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) >> uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-8.4)), vec2(_GLF_FUZZED((+ 17.04)), (injectionSwitch)[1]), bvec2(false, true))).x)))) | (_GLF_IDENTITY(0u, (0u) + 0u)))) ^ (1u))))))), (_GLF_IDENTITY(~ (subgroup_id * _GLF_IDENTITY(subgroup_size, (subgroup_size) / 1u)), min(_GLF_IDENTITY(~ (subgroup_id * _GLF_IDENTITY(subgroup_size, (subgroup_size) / 1u)), (true ? ~ (subgroup_id * _GLF_IDENTITY(subgroup_size, (subgroup_size) / 1u)) : _GLF_FUZZED(subgroup_local_id))), ~ (subgroup_id * _GLF_IDENTITY(subgroup_size, (subgroup_size) / _GLF_IDENTITY(1u, (0u ^ _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) >> uint(_GLF_ZERO(0.0, injectionSwitch.x)))) | (_GLF_IDENTITY(0u, (0u) + 0u)))) ^ (1u)))))))))))))));
 uint virtual_gid = _GLF_IDENTITY(workgroup_base + subgroup_base, min(_GLF_IDENTITY(workgroup_base + subgroup_base, clamp(workgroup_base + subgroup_base, workgroup_base + subgroup_base, workgroup_base + subgroup_base)), workgroup_base + subgroup_base)) + _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, uint(_GLF_IDENTITY(uint(subgroup_local_id), clamp(uint(subgroup_local_id), uint(subgroup_local_id), uint(subgroup_local_id))))), min(subgroup_local_id, subgroup_local_id)), (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, ~ (~ (subgroup_local_id)))), ((_GLF_IDENTITY(subgroup_local_id, ~ (~ (subgroup_local_id))))) << ((0u << _GLF_IDENTITY(uint(0u), uint(0u))) >> _GLF_IDENTITY(uint(7u), _GLF_IDENTITY(uint(7u), max(uint(7u), uint(7u)))))) ^ (0u & 37917u)), (_GLF_IDENTITY(true ? subgroup_local_id : _GLF_FUZZED(workgroup_size), _GLF_IDENTITY(_GLF_IDENTITY(clamp(true ? subgroup_local_id : _GLF_FUZZED(workgroup_size), _GLF_IDENTITY(true ? subgroup_local_id : _GLF_FUZZED(workgroup_size), min(true ? subgroup_local_id : _GLF_FUZZED(workgroup_size), _GLF_IDENTITY(true ? _GLF_IDENTITY(subgroup_local_id, 0u + (subgroup_local_id)) : _GLF_FUZZED(workgroup_size), 0u + (true ? subgroup_local_id : _GLF_FUZZED(workgroup_size))))), true ? subgroup_local_id : _GLF_FUZZED(workgroup_size)), max(clamp(true ? subgroup_local_id : _GLF_FUZZED(workgroup_size), _GLF_IDENTITY(true ? subgroup_local_id : _GLF_FUZZED(workgroup_size), min(true ? subgroup_local_id : _GLF_FUZZED(workgroup_size), _GLF_IDENTITY(true ? _GLF_IDENTITY(subgroup_local_id, 0u + (subgroup_local_id)) : _GLF_FUZZED(workgroup_size), 0u + (true ? subgroup_local_id : _GLF_FUZZED(workgroup_size))))), true ? subgroup_local_id : _GLF_FUZZED(workgroup_size)), clamp(true ? subgroup_local_id : _GLF_FUZZED(workgroup_size), _GLF_IDENTITY(true ? subgroup_local_id : _GLF_FUZZED(workgroup_size), min(true ? subgroup_local_id : _GLF_FUZZED(workgroup_size), _GLF_IDENTITY(true ? _GLF_IDENTITY(subgroup_local_id, 0u + (subgroup_local_id)) : _GLF_FUZZED(workgroup_size), 0u + (true ? subgroup_local_id : _GLF_FUZZED(workgroup_size))))), true ? subgroup_local_id : _GLF_FUZZED(workgroup_size)))), (_GLF_IDENTITY(clamp(true ? subgroup_local_id : _GLF_FUZZED(workgroup_size), _GLF_IDENTITY(true ? subgroup_local_id : _GLF_FUZZED(workgroup_size), min(true ? subgroup_local_id : _GLF_FUZZED(workgroup_size), _GLF_IDENTITY(true ? _GLF_IDENTITY(subgroup_local_id, 0u + (subgroup_local_id)) : _GLF_FUZZED(workgroup_size), 0u + (true ? subgroup_local_id : _GLF_FUZZED(workgroup_size))))), _GLF_IDENTITY(true, ! (! (true))) ? subgroup_local_id : _GLF_FUZZED(workgroup_size)), max(clamp(true ? subgroup_local_id : _GLF_FUZZED(workgroup_size), _GLF_IDENTITY(true ? subgroup_local_id : _GLF_FUZZED(workgroup_size), min(true ? subgroup_local_id : _GLF_FUZZED(workgroup_size), _GLF_IDENTITY(true ? _GLF_IDENTITY(subgroup_local_id, 0u + (subgroup_local_id)) : _GLF_FUZZED(workgroup_size), 0u + (true ? subgroup_local_id : _GLF_FUZZED(workgroup_size))))), true ? subgroup_local_id : _GLF_FUZZED(workgroup_size)), clamp(true ? subgroup_local_id : _GLF_FUZZED(workgroup_size), _GLF_IDENTITY(true ? subgroup_local_id : _GLF_FUZZED(workgroup_size), min(true ? subgroup_local_id : _GLF_FUZZED(workgroup_size), _GLF_IDENTITY(true ? _GLF_IDENTITY(subgroup_local_id, 0u + (subgroup_local_id)) : _GLF_FUZZED(workgroup_size), 0u + (true ? subgroup_local_id : _GLF_FUZZED(workgroup_size))))), true ? subgroup_local_id : _GLF_FUZZED(workgroup_size))))) - 0u))))) ^ _GLF_IDENTITY(0u, uint(uvec2(0u, 0u))));
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(false, true, false), bvec3(bvec4(bvec3(false, true, false), false)))), (_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(false, true, false), bvec3(bvec4(bvec3(false, true, false), false)))), true && (bool(_GLF_IDENTITY(bvec3(false, true, false), bvec3(bvec4(bvec3(false, true, false), false))))))) || false)), true, false)), (bool(bvec3(false, true, false))) || false)), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(false, true, false), bvec3(bvec4(bvec3(false, true, false), false)))), (_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(false, true, false), bvec3(bvec4(bvec3(false, true, false), false)))), true && (bool(_GLF_IDENTITY(bvec3(false, true, false), bvec3(bvec4(bvec3(false, true, false), false))))))) || false)), true, false)), (bool(bvec3(false, true, false))) || false)))), ! (! (bool(bool(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(false, true, false), bvec3(bvec4(bvec3(false, true, false), false)))), (_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(false, true, false), bvec3(bvec4(bvec3(false, true, false), false)))), true && (bool(_GLF_IDENTITY(bvec3(false, true, false), bvec3(bvec4(bvec3(false, true, false), false))))))) || false)), true, false)), (bool(bvec3(false, true, false))) || false))))))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && _GLF_IDENTITY((_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, float(_GLF_IDENTITY(mat4x2(injectionSwitch.x, 1.0, 1.0, 1.0, 1.0, determinant(mat2(1.0, abs(1.0), 0.0, _GLF_IDENTITY(dot(vec3(0.0, _GLF_IDENTITY(1.0, float(vec2(1.0, 0.0))), 0.0), vec3(0.0, 1.0, 0.0)), dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0))))), 0.0, 0.0), (mat4x2(injectionSwitch.x, 1.0, 1.0, 1.0, 1.0, determinant(mat2(1.0, abs(1.0), 0.0, _GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0)), dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0))))), 0.0, 0.0)) * mat4(1.0)))) > injectionSwitch.y))), ! (! ((_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, float(_GLF_IDENTITY(mat4x2(injectionSwitch.x, 1.0, 1.0, 1.0, 1.0, determinant(mat2(1.0, abs(1.0), 0.0, _GLF_IDENTITY(dot(vec3(0.0, _GLF_IDENTITY(1.0, float(vec2(1.0, 0.0))), 0.0), vec3(0.0, 1.0, 0.0)), dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0))))), 0.0, 0.0), (mat4x2(injectionSwitch.x, 1.0, 1.0, 1.0, 1.0, determinant(mat2(1.0, abs(1.0), 0.0, _GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0)), dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0))))), 0.0, 0.0)) * mat4(1.0)))) > injectionSwitch.y)))))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   return;
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 atomicStore(write_val, uint(virtual_gid), 4, _GLF_IDENTITY(64, _GLF_IDENTITY((64), ((64)) / (1 ^ 0)) * 1), 0);
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   return;
  }
 uint read_val = atomicLoad(write_val, _GLF_IDENTITY(_GLF_IDENTITY(4, (false ? _GLF_FUZZED(-60344) : _GLF_IDENTITY(_GLF_IDENTITY(4, max(4, 4)), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(4, min(4, 4)), max(4, 4)), (_GLF_IDENTITY(4, max(4, 4))) << 0)) | (_GLF_IDENTITY(4, max(4, 4)))))), int(ivec2(_GLF_IDENTITY(4, (false ? _GLF_IDENTITY(_GLF_FUZZED(-60344), max(_GLF_FUZZED(-60344), _GLF_FUZZED(-60344))) : _GLF_IDENTITY(_GLF_IDENTITY(4, max(4, 4)), (_GLF_IDENTITY(_GLF_IDENTITY(4, max(4, 4)), (_GLF_IDENTITY(4, max(4, 4))) << 0)) | (_GLF_IDENTITY(4, max(4, 4)))))), 0))), _GLF_IDENTITY(64, _GLF_IDENTITY((_GLF_IDENTITY(64, ~ (~ (_GLF_IDENTITY(64, min(64, 64)))))) | (_GLF_IDENTITY(64, _GLF_IDENTITY(_GLF_IDENTITY(int(ivec2(64, 0)), ~ (~ (int(ivec2(64, 0))))), _GLF_IDENTITY(0 | (int(ivec2(64, 0))), _GLF_IDENTITY(int(ivec2(0 | (int(ivec2(64, 0))), 0)), clamp(int(ivec2(0 | (int(ivec2(64, 0))), 0)), _GLF_IDENTITY(int(ivec2(0 | (int(ivec2(64, 0))), 0)), (false ? _GLF_FUZZED(-98408) : int(ivec2(0 | (int(ivec2(64, 0))), 0)))), int(ivec2(0 | (int(ivec2(64, 0))), 0)))))))), ((_GLF_IDENTITY(64, ~ (~ (_GLF_IDENTITY(64, min(64, 64)))))) | (_GLF_IDENTITY(64, _GLF_IDENTITY(_GLF_IDENTITY(int(ivec2(64, 0)), ~ (~ (int(ivec2(64, 0))))), _GLF_IDENTITY(0 | (int(ivec2(64, 0))), _GLF_IDENTITY(int(ivec2(0 | (int(ivec2(64, 0))), 0)), clamp(int(ivec2(0 | (int(ivec2(64, 0))), 0)), _GLF_IDENTITY(int(ivec2(0 | (int(ivec2(64, 0))), 0)), (false ? _GLF_FUZZED(-98408) : int(ivec2(0 | (int(ivec2(64, 0))), 0)))), int(ivec2(0 | (int(ivec2(64, 0))), 0))))))))) | ((_GLF_IDENTITY(64, ~ (~ (_GLF_IDENTITY(64, min(64, 64)))))) | (_GLF_IDENTITY(64, _GLF_IDENTITY(_GLF_IDENTITY(int(ivec2(64, 0)), ~ (~ (int(ivec2(64, 0))))), _GLF_IDENTITY(0 | (int(ivec2(64, 0))), _GLF_IDENTITY(int(ivec2(0 | (int(ivec2(64, 0))), 0)), clamp(int(ivec2(0 | (int(ivec2(64, 0))), 0)), _GLF_IDENTITY(int(ivec2(0 | (int(ivec2(64, 0))), 0)), (false ? _GLF_FUZZED(-98408) : int(ivec2(0 | (int(ivec2(64, 0))), 0)))), int(ivec2(0 | (int(ivec2(64, 0))), 0))))))))))), 0);
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(mix(float(injectionSwitch.y), float(_GLF_FUZZED(-94.80)), bool(false)), mix(float(_GLF_FUZZED(485.574)), float(mix(float(injectionSwitch.y), float(_GLF_FUZZED(-94.80)), bool(false))), bool(true))))))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     if(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), (! (_GLF_DEAD(false))) && true))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            return;
           return;
          }
         if(_GLF_DEAD(false))
          barrier();
         barrier();
         if(_GLF_DEAD(false))
          barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) && true), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false)), false, true)))))))
      {
       if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         return;
        }
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
    }
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(injectionSwitch.x > injectionSwitch.y, false)))) || false)))))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_DEAD(false), false))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY((_GLF_DEAD(false)), _GLF_IDENTITY(bool(bvec3((_GLF_DEAD(false)), true, _GLF_IDENTITY(false, ! (! (false))))), _GLF_IDENTITY((bool(bvec3((_GLF_DEAD(false)), true, false))), ! (! ((bool(bvec3((_GLF_DEAD(false)), true, false)))))) && _GLF_TRUE(_GLF_IDENTITY(true, bool(bvec4(true, true, true, false))), (injectionSwitch.x < injectionSwitch.y)))) && true), bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY((_GLF_DEAD(false)), _GLF_IDENTITY(bool(bvec3((_GLF_DEAD(false)), true, _GLF_IDENTITY(false, ! (! (false))))), _GLF_IDENTITY((bool(bvec3((_GLF_DEAD(false)), true, false))), ! (! ((bool(bvec3((_GLF_DEAD(false)), true, false)))))) && _GLF_TRUE(_GLF_IDENTITY(true, bool(bvec4(true, true, true, false))), (injectionSwitch.x < injectionSwitch.y)))) && true), true, false, true))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), (_GLF_IDENTITY(false, (false) && _GLF_IDENTITY(true, bool(bvec3(_GLF_IDENTITY(true, bool(bool(true))), true, _GLF_IDENTITY(true, bool(_GLF_IDENTITY(bvec3(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true), bvec3(bvec3(bvec3(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))))))))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), bool(bvec4((! _GLF_IDENTITY((false), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((false), ! (! (_GLF_IDENTITY((false), ! (! ((false)))))))), false || (! (_GLF_IDENTITY((false), ! (! (_GLF_IDENTITY((false), ! (! ((false))))))))))))), false, false, false))))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false))))))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && true))
      barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
  }
 if(_GLF_DEAD(false))
  return;
 buf[virtual_gid] = uint(subgroupAllEqual(read_val));
 if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))), bool(bool(_GLF_DEAD(false))))) || false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   return;
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(! (_GLF_IDENTITY(! (_GLF_DEAD(false)), (! (_GLF_DEAD(false))) || false)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (! (_GLF_IDENTITY(! (_GLF_DEAD(false)), (! (_GLF_DEAD(false))) || false))))))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec4(91.97, 2858.7214, -1318.6703, -75.35).gg) : injectionSwitch)), mix(vec2(_GLF_FUZZED(-7.7), _GLF_FUZZED(24.52)), vec2((injectionSwitch)[_GLF_IDENTITY(0, (true ? 0 : _GLF_FUZZED(15414)))], _GLF_IDENTITY((injectionSwitch), mat2(1.0) * ((injectionSwitch)))[1]), bvec2(true, true))).x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        return;
      }
     if(_GLF_DEAD(false))
      barrier();
     return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   return;
   if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))), (_GLF_DEAD(false)) || false))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
  }
}
