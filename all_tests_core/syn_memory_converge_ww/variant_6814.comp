#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer WriteVal {
 uint write_val;
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, vec2(mat4x3(injectionSwitch, 1.0, _GLF_IDENTITY(0.0, (0.0) * 1.0), 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, cos(_GLF_IDENTITY(0.0, max(0.0, _GLF_IDENTITY(0.0, (0.0) - 0.0)))), 0.0))).x > injectionSwitch.y), ! (! ((_GLF_IDENTITY(injectionSwitch, vec2(mat4x3(injectionSwitch, _GLF_IDENTITY(1.0, float(_GLF_IDENTITY(mat3x2(1.0, round(length(normalize(vec3(1.0, 1.0, 1.0)))), 1.0, 1.0, abs(0.0), 1.0), transpose(transpose(mat3x2(1.0, round(length(normalize(vec3(1.0, 1.0, 1.0)))), 1.0, 1.0, abs(0.0), 1.0)))))), 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, cos(_GLF_IDENTITY(0.0, max(0.0, _GLF_IDENTITY(0.0, (0.0) - 0.0)))), 0.0))).x > injectionSwitch.y)))), _GLF_IDENTITY(! (! (_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(vec4(injectionSwitch.y, 0.0, 1.0, 0.0)), 1.0 * (float(vec4(injectionSwitch.y, 0.0, 1.0, 0.0))))), 1.0 * (injectionSwitch.y))))), ((_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch[1], clamp(_GLF_IDENTITY(injectionSwitch[1], float(vec2(injectionSwitch[1], 0.0))), injectionSwitch[1], injectionSwitch[1])), clamp(_GLF_IDENTITY(injectionSwitch[1], clamp(_GLF_IDENTITY(injectionSwitch[1], float(vec2(injectionSwitch[1], 0.0))), injectionSwitch[1], injectionSwitch[1])), _GLF_IDENTITY(injectionSwitch[1], clamp(_GLF_IDENTITY(injectionSwitch[1], float(vec2(injectionSwitch[1], 0.0))), injectionSwitch[1], injectionSwitch[1])), _GLF_IDENTITY(injectionSwitch[1], clamp(_GLF_IDENTITY(injectionSwitch[1], float(vec2(injectionSwitch[1], 0.0))), injectionSwitch[1], injectionSwitch[1]))))))) / vec2(1.0, 1.0)).x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, sin(0.0) + (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), mix(float(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))), float(_GLF_FUZZED(-6.6)), bool(false))), (false ? _GLF_FUZZED(-94.18) : _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), mix(float(_GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, 1.0 * (injectionSwitch.y)), injectionSwitch.y))), float(_GLF_FUZZED(-6.6)), bool(false))))), _GLF_IDENTITY(1.0 * (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), mix(float(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))), float(_GLF_FUZZED(-6.6)), bool(false)))), min(1.0 * (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), mix(float(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))), float(_GLF_FUZZED(-6.6)), bool(false)))), 1.0 * (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), mix(float(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))), float(_GLF_FUZZED(-6.6)), bool(false))))))))), mix(float(_GLF_FUZZED(-781.062)), float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, sin(0.0) + (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), mix(_GLF_IDENTITY(float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).y, min(injectionSwitch.y, injectionSwitch.y))), min(_GLF_IDENTITY(float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).y, min(injectionSwitch.y, injectionSwitch.y))), mix(float(float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).y, min(injectionSwitch.y, injectionSwitch.y)))), float(_GLF_FUZZED(3058.0354)), bool(false))), float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).y, min(injectionSwitch.y, injectionSwitch.y))))), float(_GLF_FUZZED(-6.6)), bool(false))), 1.0 * (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), mix(float(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))), float(_GLF_FUZZED(-6.6)), bool(false))))))), min(_GLF_IDENTITY(injectionSwitch.y, sin(0.0) + (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, 1.0 * (injectionSwitch.y)), min(injectionSwitch.y, injectionSwitch.y)), mix(float(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))), float(_GLF_FUZZED(-6.6)), bool(false))), 1.0 * (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), mix(float(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))), float(_GLF_FUZZED(-6.6)), bool(false))))))), _GLF_IDENTITY(injectionSwitch.y, sin(0.0) + (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), min(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)))), mix(float(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))), float(_GLF_IDENTITY(_GLF_FUZZED(-6.6), float(float(_GLF_FUZZED(-6.6))))), bool(false))), 1.0 * (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), _GLF_IDENTITY(mix(float(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))), float(_GLF_FUZZED(-6.6)), bool(false)), 0.0 + (mix(float(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))), _GLF_IDENTITY(float(_GLF_FUZZED(-6.6)), (false ? _GLF_FUZZED(4.3) : float(_GLF_FUZZED(-6.6)))), bool(false)))))))))))), bool(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))))))))) || false))), (! (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch[_GLF_IDENTITY(1, (false ? _GLF_FUZZED(-86856) : 1))], _GLF_IDENTITY(clamp(_GLF_IDENTITY(injectionSwitch[1], float(vec2(injectionSwitch[1], 0.0))), injectionSwitch[1], injectionSwitch[1]), float(mat2(clamp(_GLF_IDENTITY(injectionSwitch[1], _GLF_IDENTITY(float(vec2(injectionSwitch[1], 0.0)), (float(vec2(injectionSwitch[1], 0.0))) - sin(0.0))), injectionSwitch[1], injectionSwitch[1]), 0.0, 1.0, abs(0.0))))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch[1], clamp(injectionSwitch[1], injectionSwitch[1], injectionSwitch[1])), clamp(_GLF_IDENTITY(injectionSwitch[1], float(vec2(injectionSwitch[1], 0.0))), _GLF_IDENTITY(injectionSwitch[1], (true ? injectionSwitch[1] : _GLF_FUZZED(dot(injectionSwitch, injectionSwitch)))), injectionSwitch[1])), _GLF_IDENTITY(injectionSwitch[1], clamp(_GLF_IDENTITY(injectionSwitch[_GLF_IDENTITY(1, (1) / ((_GLF_IDENTITY(1, 0 ^ (1)) << _GLF_IDENTITY(int(_GLF_IDENTITY(2, (_GLF_IDENTITY(2, (2) - int(_GLF_ZERO(0.0, injectionSwitch.x)))) - 0)), int(2))) >> _GLF_IDENTITY(int(2), int(2))))], float(vec2(injectionSwitch[1], 0.0))), injectionSwitch[1], _GLF_IDENTITY(injectionSwitch[1], min(injectionSwitch[1], injectionSwitch[1])))), _GLF_IDENTITY(injectionSwitch[1], clamp(_GLF_IDENTITY(injectionSwitch[1], float(vec2(injectionSwitch[1], 0.0))), injectionSwitch[1], injectionSwitch[1]))))))) / vec2(1.0, 1.0)).x > _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, sin(0.0) + (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), mix(float(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))), float(_GLF_FUZZED(-6.6)), bool(false))), 1.0 * (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), mix(float(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))), float(_GLF_FUZZED(-6.6)), bool(false))))))), max(_GLF_IDENTITY(injectionSwitch.y, sin(0.0) + (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), mix(float(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))), _GLF_IDENTITY(float(_GLF_FUZZED(-6.6)), clamp(float(_GLF_FUZZED(-6.6)), float(_GLF_FUZZED(-6.6)), float(_GLF_FUZZED(-6.6)))), bool(false))), 1.0 * (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), mix(float(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))), float(_GLF_FUZZED(_GLF_IDENTITY(-6.6, clamp(-6.6, -6.6, _GLF_IDENTITY(-6.6, min(-6.6, -6.6)))))), bool(false))))))), _GLF_IDENTITY(injectionSwitch.y, sin(0.0) + (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0))), mix(float(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))), float(_GLF_FUZZED(-6.6)), bool(false))), _GLF_IDENTITY(1.0 * (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), mix(float(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))), float(_GLF_FUZZED(-6.6)), bool(false)))), mix(float(_GLF_FUZZED(-7.7)), float(1.0 * (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), mix(float(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))), float(_GLF_FUZZED(-6.6)), bool(false))))), bool(true)))))))), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, sin(0.0) + (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(min(injectionSwitch.y, injectionSwitch.y), min(min(injectionSwitch.y, injectionSwitch.y), min(injectionSwitch.y, injectionSwitch.y)))), mix(float(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))), float(_GLF_FUZZED(-6.6)), bool(false))), 1.0 * (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), _GLF_IDENTITY(mix(float(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))), float(_GLF_FUZZED(-6.6)), bool(false)), (mix(float(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))), float(_GLF_FUZZED(-6.6)), bool(false))) + length(0.0))))))), max(_GLF_IDENTITY(injectionSwitch.y, sin(0.0) + (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), mix(float(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))), _GLF_IDENTITY(float(_GLF_FUZZED(-6.6)), clamp(float(_GLF_FUZZED(-6.6)), float(_GLF_FUZZED(-6.6)), float(_GLF_FUZZED(-6.6)))), bool(false))), 1.0 * (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), mix(float(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))), float(_GLF_FUZZED(_GLF_IDENTITY(-6.6, clamp(-6.6, -6.6, _GLF_IDENTITY(-6.6, min(-6.6, -6.6)))))), bool(false))))))), _GLF_IDENTITY(injectionSwitch.y, sin(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(7343.2386)), bool(false)))) + (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0))), mix(float(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))), float(_GLF_FUZZED(-6.6)), bool(false))), _GLF_IDENTITY(1.0 * (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), mix(float(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))), float(_GLF_FUZZED(-6.6)), bool(false)))), mix(float(_GLF_FUZZED(-7.7)), float(1.0 * (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), (false ? _GLF_FUZZED(-8.2) : _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)))), mix(float(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))), float(_GLF_FUZZED(-6.6)), bool(false))))), bool(true))))))))) / 1.0), mix(float(_GLF_FUZZED(-781.062)), float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(sin(0.0), mix(float(sin(0.0)), float(_GLF_IDENTITY(_GLF_FUZZED(vec3(-0.2, -116.269, 9.3).g), min(_GLF_FUZZED(vec3(-0.2, -116.269, 9.3).g), _GLF_FUZZED(vec3(-0.2, -116.269, 9.3).g)))), bool(false))) + (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), mix(float(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))), float(_GLF_FUZZED(-6.6)), bool(false))), 1.0 * (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(min(injectionSwitch.y, injectionSwitch.y), mix(float(_GLF_FUZZED(-0.9)), float(min(injectionSwitch.y, injectionSwitch.y)), bool(true)))), _GLF_IDENTITY(mix(float(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))), float(_GLF_FUZZED(-6.6)), bool(false)), clamp(_GLF_IDENTITY(mix(float(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))), float(_GLF_FUZZED(-6.6)), bool(false)), mix(float(_GLF_FUZZED(2.9)), float(_GLF_IDENTITY(mix(float(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))), float(_GLF_FUZZED(-6.6)), bool(false)), clamp(mix(float(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))), float(_GLF_FUZZED(-6.6)), bool(false)), mix(float(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))), float(_GLF_FUZZED(-6.6)), bool(false)), mix(float(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))), float(_GLF_FUZZED(-6.6)), bool(false))))), bool(true))), mix(float(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))), float(_GLF_FUZZED(-6.6)), bool(false)), mix(float(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))), float(_GLF_FUZZED(-6.6)), bool(false))))))))), min(_GLF_IDENTITY(injectionSwitch.y, sin(0.0) + (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), 0.0 + (_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)))), mix(float(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))), float(_GLF_FUZZED(-6.6)), bool(_GLF_IDENTITY(false, bool(bvec2(false, true)))))), 1.0 * (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), mix(float(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))), float(_GLF_FUZZED(-6.6)), bool(false))))))), _GLF_IDENTITY(injectionSwitch.y, sin(0.0) + (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), mix(float(_GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, min(1.0, 1.0))) * _GLF_IDENTITY(dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(0.0, 1.0, 0.0, sin(0.0))), dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(0.0, 1.0, 0.0, sin(0.0))))), 1.0)).y, injectionSwitch.y))), float(_GLF_FUZZED(-6.6)), bool(false))), 1.0 * (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0), min(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)) + (injectionSwitch)).y, injectionSwitch.y)), mix(float(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))), float(_GLF_FUZZED(-6.6)), bool(false)))))))))), _GLF_IDENTITY(bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), _GLF_IDENTITY((bool(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)))))) && true, true && ((bool(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)))))) && true))))))) || false)))) || false)))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, false, true)))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(! (! (_GLF_DEAD(false))), false || (! (! (_GLF_DEAD(false)))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).x)) > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y), ((_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))) && true))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y, injectionSwitch.y))))))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))), bool(bool(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(_GLF_IDENTITY(float(_GLF_FUZZED(-7752.1939)), clamp(float(_GLF_FUZZED(-7752.1939)), float(_GLF_FUZZED(-7752.1939)), float(_GLF_FUZZED(-7752.1939)))), float(injectionSwitch.x), bool(true))) > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_DEAD(false), true, true))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
  }
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_DEAD(false))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)))).y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) && true), _GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false, ! (_GLF_IDENTITY(! ((_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(_GLF_IDENTITY(mat3x2(injectionSwitch.y, 0.0, 0.0, sqrt(0.0), 1.0, _GLF_ONE(1.0, injectionSwitch.y)), mat3x2(0.0, 0.0, 0.0, 0.0, 0.0, 0.0) + (mat3x2(injectionSwitch.y, 0.0, 0.0, sqrt(0.0), 1.0, _GLF_ONE(1.0, injectionSwitch.y))))), (float(_GLF_IDENTITY(mat3x2(injectionSwitch.y, 0.0, 0.0, sqrt(0.0), 1.0, _GLF_ONE(1.0, injectionSwitch.y)), mat3x2(0.0, 0.0, 0.0, 0.0, 0.0, 0.0) + (mat3x2(injectionSwitch.y, 0.0, 0.0, sqrt(0.0), 1.0, _GLF_ONE(1.0, injectionSwitch.y)))))) / 1.0))))) || false), ! (_GLF_IDENTITY(_GLF_IDENTITY(! (! ((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false)), (! (! ((_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED((false ? 6.2 : 4.8))), bool(false))) > injectionSwitch.y)), bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) || false))) && true), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(! (! ((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false)), (! (! ((_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) || false))) && true), true, false)), ! (! (bool(bvec3(_GLF_IDENTITY(! _GLF_IDENTITY((! ((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false)), _GLF_IDENTITY(true, ! (! (true))) && (_GLF_IDENTITY((! ((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false)), ((! ((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false))) && true))), (! (! ((_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) || false))) && true), true, false)))))))))))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec3(bvec2(false, true), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), ! (! (false)))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bvec2(injectionSwitch.x > injectionSwitch.y, true)), true && (_GLF_IDENTITY(bool(bvec2(injectionSwitch.x > injectionSwitch.y, true)), ! (! (bool(bvec2(injectionSwitch.x > injectionSwitch.y, true))))))))), true && ((_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)))).y, _GLF_IDENTITY(bool(bvec2(injectionSwitch.x > injectionSwitch.y, true)), true && (_GLF_IDENTITY(bool(bvec2(injectionSwitch.x > injectionSwitch.y, true)), ! (! (bool(bvec2(injectionSwitch.x > injectionSwitch.y, true))))))))))))))
  barrier();
 uint num_workgroup = gl_NumWorkGroups.x;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED((+ 4812.1089))), bool(false)))))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(-8.9)))) + 0.0)) || false)))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 uint workgroup_size = gl_WorkGroupSize.x;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 uint workgroup_id = _GLF_IDENTITY(gl_WorkGroupID.x, ~ (~ (gl_WorkGroupID.x)));
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[_GLF_IDENTITY(_GLF_IDENTITY(1, ~ (_GLF_IDENTITY(~ (1), (0 | 0) ^ (_GLF_IDENTITY(_GLF_IDENTITY(~ (1), (~ (1)) << 0), (_GLF_IDENTITY(~ (1), (~ (1)) << 0)) - ((0 >> _GLF_IDENTITY(int(5), int(5))) >> _GLF_IDENTITY(int(6), int(6)))))))), (_GLF_IDENTITY(1, ~ (_GLF_IDENTITY(~ (1), (0 | 0) ^ (_GLF_IDENTITY(~ (1), (~ (1)) << 0)))))) / 1)])).x > injectionSwitch.y)), bool(bvec4(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y))) && true))), true && (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y)))), true, false, true)))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false)) || false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_DEAD(false)))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 uint workgroup_base = workgroup_size * _GLF_IDENTITY(workgroup_id, (workgroup_id) | (_GLF_IDENTITY(workgroup_id, (workgroup_id) | (workgroup_id))));
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(false, ! (! (false))))), ! _GLF_IDENTITY((! (bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (false)))))), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, ! (! (false))), true), bvec2(bvec2(bvec2(_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), true && ((! (false))))), true)))))))))), ((! (bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) || false)))), true), bvec2(bvec2(bvec2(_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), true && ((! (false))))), true))))))))))) || false)))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) || false)))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (true ? _GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(clamp(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x, injectionSwitch.x, injectionSwitch.x), (false ? _GLF_FUZZED(-9.9) : clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))) / vec2(1.0, 1.0)).x, injectionSwitch.x, injectionSwitch.x)))), injectionSwitch.x)) : _GLF_FUZZED(0.6))) > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(vec2(19.56, -6.2)) : _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)))).y, (true ? _GLF_IDENTITY(injectionSwitch, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(vec2(19.56, -6.2)) : _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)))).y : _GLF_FUZZED(degrees(-4.1))))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 uint virtual_gid = workgroup_base + subgroup_id * subgroup_size + subgroup_local_id;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(false, bool(bvec2(false, false))), false, true))), ! (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(false, bool(bvec2(false, false))), false, true))))))) || (_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y)))), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y)))), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y)))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec2(bvec3(bvec2(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y)))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true)))))) || false))), bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, 1.0 * (injectionSwitch.y)), injectionSwitch.y, injectionSwitch.y)))), false, true)))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(mat3(injectionSwitch, 0.0, sqrt(0.0), 0.0, 0.0, 0.0, _GLF_IDENTITY(dot(vec3(0.0, 1.0, _GLF_IDENTITY(1.0, float(mat3(_GLF_IDENTITY(1.0, 0.0 + (1.0)), determinant(mat2(0.0, 0.0, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(float(42556))), float(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-1224.3399)), bool(false)))), bool(true))), 0.0)), 1.0, 1.0, 1.0, 1.0, 1.0, _GLF_IDENTITY(dot(vec4(1.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 0.0), vec4(1.0, 0.0, 0.0, 0.0)), dot(vec4(1.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 0.0), vec4(1.0, 0.0, 0.0, 0.0))), _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(_GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(1.0, 1.0, 0.0)), dot(vec3(0.0, 0.0, 1.0), vec3(1.0, 1.0, 0.0))), 1.0)), dot(vec2(0.0, 1.0), vec2(_GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(1.0, 1.0, 0.0)), dot(vec3(0.0, 0.0, 1.0), vec3(1.0, 1.0, 0.0))), 1.0))))))), vec3(1.0, 0.0, _GLF_IDENTITY(0.0, (0.0) / exp(0.0)))), _GLF_IDENTITY(dot(vec3(0.0, 1.0, _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(6.7)), bool(false)))), vec3(1.0, 0.0, _GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0)), 0.0)))), _GLF_IDENTITY((dot(vec3(0.0, 1.0, 1.0), vec3(1.0, 0.0, 0.0))), clamp(_GLF_IDENTITY((dot(vec3(0.0, 1.0, 1.0), vec3(1.0, 0.0, 0.0))), min((dot(vec3(0.0, 1.0, 1.0), vec3(1.0, 0.0, 0.0))), _GLF_IDENTITY((dot(vec3(0.0, 1.0, 1.0), vec3(1.0, 0.0, _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED((vec3(9.4, -914.921, 4.8).t + 131.139))), bool(false)))))), _GLF_IDENTITY(min((dot(vec3(0.0, 1.0, 1.0), vec3(1.0, 0.0, 0.0))), (dot(vec3(0.0, 1.0, 1.0), vec3(1.0, 0.0, 0.0)))), min(min((dot(vec3(0.0, 1.0, 1.0), vec3(1.0, 0.0, 0.0))), (dot(vec3(0.0, 1.0, 1.0), vec3(1.0, 0.0, 0.0)))), min((dot(vec3(0.0, 1.0, 1.0), vec3(1.0, 0.0, 0.0))), (dot(vec3(0.0, 1.0, 1.0), vec3(1.0, 0.0, 0.0))))))))), (dot(vec3(0.0, 1.0, 1.0), vec3(1.0, 0.0, 0.0))), (dot(vec3(0.0, 1.0, 1.0), vec3(_GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(-8.0))), 1.0)), _GLF_IDENTITY(0.0, (0.0) - 0.0), 0.0))))) * 1.0)), 1.0))).x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(mat3(injectionSwitch, 0.0, sqrt(0.0), 0.0, 0.0, 0.0, _GLF_IDENTITY(_GLF_IDENTITY(dot(vec3(0.0, 1.0, 1.0), vec3(1.0, 0.0, 0.0)), _GLF_IDENTITY(dot(vec3(0.0, 1.0, _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(6.7)), bool(false)))), vec3(1.0, 0.0, 0.0)), _GLF_IDENTITY((dot(vec3(0.0, 1.0, 1.0), vec3(1.0, 0.0, 0.0))), clamp(_GLF_IDENTITY((dot(vec3(0.0, 1.0, 1.0), vec3(1.0, 0.0, 0.0))), min((dot(vec3(0.0, 1.0, 1.0), vec3(1.0, 0.0, 0.0))), _GLF_IDENTITY((dot(vec3(0.0, 1.0, 1.0), vec3(1.0, 0.0, 0.0))), min((dot(vec3(0.0, 1.0, 1.0), vec3(1.0, 0.0, 0.0))), _GLF_IDENTITY((_GLF_IDENTITY(dot(vec3(0.0, 1.0, 1.0), vec3(1.0, 0.0, 0.0)), round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))) * (dot(vec3(0.0, 1.0, 1.0), vec3(1.0, 0.0, 0.0))))), float(mat3x2((_GLF_IDENTITY(dot(vec3(0.0, 1.0, 1.0), vec3(1.0, 0.0, 0.0)), round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))) * (dot(vec3(0.0, 1.0, 1.0), vec3(1.0, 0.0, 0.0))))), 0.0, 1.0, log(1.0), 0.0, length(vec4(0.0, 0.0, 0.0, 0.0))))))))), (dot(vec3(0.0, 1.0, 1.0), vec3(1.0, 0.0, 0.0))), (dot(vec3(0.0, 1.0, 1.0), vec3(1.0, 0.0, 0.0))))) * 1.0)), (false ? _GLF_IDENTITY(_GLF_FUZZED(585.881), float(vec3(_GLF_FUZZED(585.881), 0.0, _GLF_ONE(1.0, injectionSwitch.y)))) : _GLF_IDENTITY(dot(vec3(0.0, 1.0, 1.0), _GLF_IDENTITY(vec3(1.0, 0.0, 0.0), _GLF_IDENTITY(max(_GLF_IDENTITY(vec3(1.0, 0.0, 0.0), mix(vec3(_GLF_FUZZED(float(true)), _GLF_FUZZED(-6780.4618), _GLF_FUZZED(-591.953)), vec3((vec3(1.0, 0.0, 0.0))[0], (vec3(1.0, 0.0, 0.0))[1], (vec3(1.0, 0.0, 0.0))[2]), bvec3(true, true, true))), vec3(1.0, 0.0, 0.0)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED((-6.2 + vec3(-2.1, 8.7, 206.372))) : max(_GLF_IDENTITY(vec3(1.0, 0.0, 0.0), mix(vec3(_GLF_FUZZED(float(true)), _GLF_FUZZED(-6780.4618), _GLF_FUZZED(-591.953)), vec3((vec3(1.0, 0.0, 0.0))[0], (vec3(1.0, 0.0, 0.0))[1], (vec3(1.0, 0.0, 0.0))[2]), bvec3(true, true, true))), vec3(1.0, 0.0, 0.0)))))), _GLF_IDENTITY(dot(vec3(0.0, 1.0, _GLF_IDENTITY(1.0, mix(float(_GLF_IDENTITY(1.0, max(1.0, 1.0))), float(_GLF_FUZZED(6.7)), bool(false)))), vec3(1.0, 0.0, 0.0)), _GLF_IDENTITY((dot(vec3(0.0, 1.0, 1.0), vec3(1.0, 0.0, 0.0))), clamp(_GLF_IDENTITY((dot(vec3(0.0, 1.0, _GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, 0.0 + (1.0)), 1.0, _GLF_IDENTITY(1.0, (1.0) / 1.0)))), vec3(1.0, 0.0, 0.0))), min((_GLF_IDENTITY(dot(vec3(0.0, 1.0, 1.0), _GLF_IDENTITY(vec3(1.0, 0.0, 0.0), (vec3(1.0, 0.0, 0.0)) - cross(vec3(-2.0, -82.47, 72.00), vec3(-2.0, -82.47, 72.00)))), (true ? dot(_GLF_IDENTITY(vec3(0.0, 1.0, 1.0), _GLF_IDENTITY(vec3(_GLF_IDENTITY(vec4(_GLF_IDENTITY(vec3(0.0, 1.0, 1.0), vec3(mat3(vec3(0.0, 1.0, 1.0), 0.0, 0.0, 1.0, 0.0, 0.0, 0.0))), 0.0), _GLF_IDENTITY((vec4(_GLF_IDENTITY(vec3(0.0, _GLF_IDENTITY(1.0, (1.0) + 0.0), 1.0), vec3(mat3(vec3(0.0, 1.0, 1.0), 0.0, 0.0, 1.0, 0.0, 0.0, 0.0))), 0.0)) * mat4(1.0), vec4(vec4((vec4(_GLF_IDENTITY(vec3(0.0, 1.0, 1.0), vec3(mat3(vec3(0.0, 1.0, 1.0), 0.0, 0.0, 1.0, 0.0, 0.0, 0.0))), 0.0)) * mat4(1.0)))))), (vec3(_GLF_IDENTITY(vec4(_GLF_IDENTITY(vec3(0.0, 1.0, 1.0), vec3(mat3(vec3(0.0, 1.0, 1.0), 0.0, 0.0, 1.0, 0.0, 0.0, 0.0))), _GLF_IDENTITY(0.0, _GLF_ZERO(0.0, injectionSwitch.x) + (0.0))), _GLF_IDENTITY((vec4(_GLF_IDENTITY(vec3(0.0, 1.0, 1.0), vec3(mat3(vec3(0.0, 1.0, 1.0), 0.0, 0.0, 1.0, 0.0, 0.0, 0.0))), 0.0)) * mat4(1.0), vec4(vec4((_GLF_IDENTITY(vec4(_GLF_IDENTITY(vec3(0.0, 1.0, 1.0), vec3(mat3(vec3(0.0, _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-6745.9528)), float(1.0), bool(true))), _GLF_IDENTITY(1.0, _GLF_IDENTITY(float(mat4x3(1.0, 1.0, 1.0, 1.0, exp(0.0), 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0)), determinant(mat2(0.0, 0.0, 0.0, 0.0)) + (_GLF_IDENTITY(float(mat4x3(1.0, 1.0, 1.0, 1.0, exp(0.0), 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0)), (false ? _GLF_FUZZED(-32.30) : float(mat4x3(1.0, 1.0, 1.0, 1.0, exp(0.0), 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0)))))))), 0.0, 0.0, 1.0, 0.0, 0.0, 0.0))), 0.0), mix(vec4(_GLF_FUZZED(-8.6), (vec4(_GLF_IDENTITY(vec3(0.0, 1.0, 1.0), vec3(mat3(vec3(0.0, _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-6745.9528)), float(1.0), bool(true))), _GLF_IDENTITY(1.0, _GLF_IDENTITY(float(mat4x3(1.0, 1.0, 1.0, 1.0, exp(0.0), 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0)), determinant(mat2(0.0, 0.0, 0.0, 0.0)) + (_GLF_IDENTITY(float(mat4x3(1.0, 1.0, 1.0, 1.0, exp(0.0), 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0)), (false ? _GLF_FUZZED(-32.30) : float(mat4x3(1.0, 1.0, 1.0, 1.0, exp(0.0), 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0)))))))), 0.0, 0.0, 1.0, 0.0, 0.0, 0.0))), 0.0))[1], (vec4(_GLF_IDENTITY(vec3(0.0, 1.0, 1.0), vec3(mat3(vec3(0.0, _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-6745.9528)), float(1.0), bool(true))), _GLF_IDENTITY(1.0, _GLF_IDENTITY(float(mat4x3(1.0, 1.0, 1.0, 1.0, exp(0.0), 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0)), determinant(mat2(0.0, 0.0, 0.0, 0.0)) + (_GLF_IDENTITY(float(mat4x3(1.0, 1.0, 1.0, 1.0, exp(0.0), 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0)), (false ? _GLF_FUZZED(-32.30) : float(mat4x3(1.0, 1.0, 1.0, 1.0, exp(0.0), 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0)))))))), 0.0, 0.0, 1.0, 0.0, 0.0, 0.0))), 0.0))[2], (vec4(_GLF_IDENTITY(vec3(0.0, 1.0, 1.0), vec3(mat3(vec3(0.0, _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-6745.9528)), float(1.0), bool(true))), _GLF_IDENTITY(1.0, _GLF_IDENTITY(float(mat4x3(1.0, 1.0, 1.0, 1.0, exp(0.0), 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0)), determinant(mat2(0.0, 0.0, 0.0, 0.0)) + (_GLF_IDENTITY(float(mat4x3(1.0, 1.0, 1.0, 1.0, exp(0.0), 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0)), (false ? _GLF_FUZZED(-32.30) : float(mat4x3(1.0, 1.0, 1.0, 1.0, exp(0.0), 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0)))))))), 0.0, 0.0, 1.0, 0.0, 0.0, 0.0))), 0.0))[3]), vec4((vec4(_GLF_IDENTITY(vec3(0.0, 1.0, 1.0), vec3(mat3(vec3(0.0, _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-6745.9528)), float(1.0), bool(true))), _GLF_IDENTITY(1.0, _GLF_IDENTITY(float(mat4x3(1.0, 1.0, 1.0, 1.0, exp(0.0), 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0)), determinant(mat2(0.0, 0.0, 0.0, 0.0)) + (_GLF_IDENTITY(float(mat4x3(1.0, 1.0, 1.0, 1.0, exp(0.0), 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0)), (false ? _GLF_FUZZED(-32.30) : float(mat4x3(1.0, 1.0, 1.0, 1.0, exp(0.0), 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0)))))))), 0.0, 0.0, 1.0, 0.0, 0.0, 0.0))), 0.0))[0], _GLF_FUZZED(1.6), _GLF_FUZZED(-196.378), _GLF_FUZZED(-42.35)), bvec4(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, false, false)))) * mat4(1.0))))))) * mat3(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, float(_GLF_IDENTITY(vec2(injectionSwitch.y, 1.0), min(vec2(injectionSwitch.y, 1.0), vec2(injectionSwitch.y, 1.0))))))))), vec3(1.0, 0.0, 0.0)) : _GLF_FUZZED(-7943.6461)))), _GLF_IDENTITY((_GLF_IDENTITY(dot(vec3(_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-539.946)), float(0.0), bool(true))), 1.0, _GLF_IDENTITY(1.0, length(vec3(0.0, 0.0, 0.0)) + (_GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, float(mat3x2(1.0, 0.0, 1.0, 1.0, 1.0, 1.0))), 1.0, 1.0))))), vec3(1.0, 0.0, 0.0)), mix(float(dot(vec3(_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-539.946)), float(0.0), bool(true))), 1.0, _GLF_IDENTITY(1.0, length(vec3(0.0, 0.0, 0.0)) + (_GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, float(mat3x2(1.0, 0.0, 1.0, 1.0, 1.0, 1.0))), 1.0, 1.0))))), vec3(1.0, 0.0, 0.0))), float(_GLF_FUZZED(9.0)), bool(false)))), min((dot(vec3(0.0, 1.0, 1.0), vec3(1.0, 0.0, 0.0))), (dot(vec3(0.0, 1.0, 1.0), vec3(1.0, 0.0, 0.0))))))), (dot(vec3(0.0, _GLF_IDENTITY(1.0, _GLF_IDENTITY(float(mat4(1.0, tan(0.0), 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, sqrt(1.0), 0.0, 1.0)), mix(float(_GLF_FUZZED(-338.178)), float(float(mat4(1.0, tan(0.0), 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, sqrt(1.0), 0.0, 1.0))), bool(true)))), 1.0), vec3(1.0, 0.0, 0.0))), (dot(vec3(0.0, 1.0, 1.0), vec3(1.0, 0.0, 0.0))))) * _GLF_IDENTITY(1.0, (1.0) / 1.0))))), 1.0))).x > injectionSwitch.y)))))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
      barrier();
     barrier();
    }
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(mat2x3(injectionSwitch, sqrt(1.0), _GLF_ONE(1.0, injectionSwitch.y), 1.0, sqrt(1.0)))).x > injectionSwitch.y, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec3(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(_GLF_IDENTITY(bvec3(injectionSwitch.x > injectionSwitch.y, true, false), bvec3(bvec4(bvec3(injectionSwitch.x > injectionSwitch.y, true, false), true))))), false, true))))) || (injectionSwitch.x > injectionSwitch.y)))), ! (! (_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (injectionSwitch.x > injectionSwitch.y))), (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(vec4(injectionSwitch, 1.0, _GLF_ONE(1.0, injectionSwitch.y)))).x, min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))), true && ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-856.469)), float(injectionSwitch.y), bool(true))))), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || (injectionSwitch.x > injectionSwitch.y)))))) && _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, float(mat4(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0), 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, abs(1.0), 1.0, 0.0, 0.0, 1.0))) < injectionSwitch.y)))))))), bool(_GLF_IDENTITY(bool(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_FALSE(_GLF_IDENTITY(false, true && (false)), _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x)) > injectionSwitch.y), false || ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0)), float(_GLF_FUZZED(2.5)), _GLF_IDENTITY(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec4(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, false, _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-4742.8186), (injectionSwitch)[1]), vec2(_GLF_IDENTITY((injectionSwitch)[0], (false ? _GLF_FUZZED(-60.19) : (injectionSwitch)[0])), _GLF_FUZZED(-42.89)), bvec2(true, false))).y)))))))))), true, _GLF_IDENTITY(true, false || (true)), true)), (bool(bvec4(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x)) > injectionSwitch.y), false || ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0)), float(_GLF_FUZZED(2.5)), _GLF_IDENTITY(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec4(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, false, _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-4742.8186), (injectionSwitch)[1]), vec2(_GLF_IDENTITY((injectionSwitch)[0], (false ? _GLF_FUZZED(-60.19) : (injectionSwitch)[0])), _GLF_FUZZED(-42.89)), bvec2(true, false))).y)))))))))), true, _GLF_IDENTITY(true, false || (true)), true))) && true))) || (injectionSwitch.x > injectionSwitch.y)))))), _GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(! (bool(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (injectionSwitch.x > injectionSwitch.y))))))), ! (! (! (bool(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (injectionSwitch.x > injectionSwitch.y)))))))))), false || (_GLF_IDENTITY(! (bool(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (injectionSwitch.x > injectionSwitch.y))))))), ! (! (! (bool(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x > injectionSwitch.y), ! (_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), ! (! (! ((injectionSwitch.x > injectionSwitch.y))))))), true), bvec2(bvec4(bvec2(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), ! (! (! ((injectionSwitch.x > injectionSwitch.y))))))), true), false, false)))), bool(bvec4(bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), ! (! (! ((injectionSwitch.x > injectionSwitch.y))))))), true), bvec2(bvec4(bvec2(_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y), ! (_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (! ((injectionSwitch.x > injectionSwitch.y))), true && (! (! ((injectionSwitch.x > injectionSwitch.y))))))))), true), false, false)))), false, false, false))))) || (injectionSwitch.x > injectionSwitch.y))))))))))))), false || (! (_GLF_IDENTITY(! (bool(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(78.65), _GLF_FUZZED(-7.2)), vec2((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch)[1], mix(float((injectionSwitch)[1]), float(_GLF_FUZZED(-0.2)), bool(false)))), bvec2(true, true))).y, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true))) || (injectionSwitch.x > injectionSwitch.y))))))), ! (! (! (bool(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_FALSE(_GLF_IDENTITY(false, (false) && true), (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-102.549), _GLF_FUZZED((284.928))), vec2((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch)[1], (true ? (injectionSwitch)[1] : _GLF_FUZZED(-6.2)))), bvec2(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))).y, ! (! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-102.549), _GLF_FUZZED((284.928))), vec2((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)))[0], _GLF_IDENTITY((injectionSwitch)[1], (true ? (injectionSwitch)[1] : _GLF_FUZZED(-6.2)))), bvec2(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))).y))))) || (injectionSwitch.x > injectionSwitch.y)))))))))))))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))))) || false)) && true)))))) || false))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)).x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 atomicStore(write_val, uint(virtual_gid), 4, 64, 0);
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)).x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 uint read_val = atomicLoad(_GLF_IDENTITY(write_val, (true ? _GLF_IDENTITY(_GLF_IDENTITY(write_val, max(write_val, _GLF_IDENTITY(write_val, 0u | (write_val)))), ~ _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY(write_val, (write_val) + uint(_GLF_ZERO(0.0, injectionSwitch.x))), max(write_val, _GLF_IDENTITY(write_val, _GLF_IDENTITY(0u | (write_val), (0u | (write_val)) - 0u))))), max(~ (_GLF_IDENTITY(_GLF_IDENTITY(write_val, (write_val) + uint(_GLF_ZERO(0.0, injectionSwitch.x))), max(write_val, _GLF_IDENTITY(write_val, 0u | (write_val))))), _GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY(write_val, (write_val) + uint(_GLF_ZERO(0.0, injectionSwitch.x))), max(write_val, _GLF_IDENTITY(write_val, 0u | (write_val))))), (false ? _GLF_FUZZED(subgroup_local_id) : ~ (_GLF_IDENTITY(_GLF_IDENTITY(write_val, (write_val) + uint(_GLF_ZERO(_GLF_IDENTITY(0.0, float(mat3(0.0, 0.0, 1.0, cos(0.0), 1.0, round(length(normalize(vec2(1.0, 1.0)))), 1.0, 1.0, 1.0))), injectionSwitch.x))), max(write_val, _GLF_IDENTITY(write_val, 0u | (write_val))))))))), 0u | (~ (_GLF_IDENTITY(write_val, max(write_val, _GLF_IDENTITY(write_val, 0u | (write_val))))))), min(_GLF_IDENTITY(_GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY(write_val, (write_val) + uint(_GLF_ZERO(0.0, injectionSwitch.x))), max(write_val, _GLF_IDENTITY(write_val, _GLF_IDENTITY(0u | (write_val), (0u | (write_val)) - 0u))))), max(~ (_GLF_IDENTITY(_GLF_IDENTITY(write_val, (write_val) + uint(_GLF_ZERO(0.0, injectionSwitch.x))), max(write_val, _GLF_IDENTITY(write_val, _GLF_IDENTITY(0u, 0u + (0u)) | (write_val))))), _GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY(write_val, (write_val) + uint(_GLF_ZERO(0.0, injectionSwitch.x))), max(write_val, _GLF_IDENTITY(write_val, 0u | (write_val))))), (false ? _GLF_FUZZED(subgroup_local_id) : ~ (_GLF_IDENTITY(_GLF_IDENTITY(write_val, (write_val) + uint(_GLF_ZERO(0.0, injectionSwitch.x))), max(write_val, _GLF_IDENTITY(write_val, 0u | (write_val))))))))), 0u | (~ (_GLF_IDENTITY(write_val, max(write_val, _GLF_IDENTITY(write_val, 0u | (write_val))))))), _GLF_IDENTITY(_GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY(write_val, (write_val) + uint(_GLF_ZERO(0.0, injectionSwitch.x))), max(write_val, _GLF_IDENTITY(write_val, _GLF_IDENTITY(0u | (write_val), (0u | (write_val)) - 0u))))), max(~ (_GLF_IDENTITY(_GLF_IDENTITY(write_val, (write_val) + uint(_GLF_ZERO(0.0, injectionSwitch.x))), max(write_val, _GLF_IDENTITY(write_val, 0u | _GLF_IDENTITY((write_val), uint(uvec3(_GLF_IDENTITY((write_val), ((write_val)) | ((write_val))), 0u, 0u))))))), _GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY(write_val, (write_val) + uint(_GLF_ZERO(0.0, injectionSwitch.x))), max(write_val, _GLF_IDENTITY(write_val, 0u | (write_val))))), (false ? _GLF_FUZZED(subgroup_local_id) : ~ (_GLF_IDENTITY(_GLF_IDENTITY(write_val, (write_val) + uint(_GLF_ZERO(0.0, injectionSwitch.x))), max(write_val, _GLF_IDENTITY(write_val, 0u | (write_val))))))))), 0u | (~ (_GLF_IDENTITY(write_val, max(write_val, _GLF_IDENTITY(write_val, 0u | (_GLF_IDENTITY(write_val, max(_GLF_IDENTITY(write_val, (write_val) | (write_val)), write_val)))))))))))), (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY(write_val, (write_val) + uint(_GLF_ZERO(0.0, injectionSwitch.x))), max(write_val, _GLF_IDENTITY(write_val, _GLF_IDENTITY(0u | (write_val), (0u | (write_val)) - 0u))))), max(~ (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(write_val, (write_val) + uint(_GLF_ZERO(0.0, injectionSwitch.x))), max(write_val, _GLF_IDENTITY(write_val, 0u | (write_val)))), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(write_val, (write_val) + uint(_GLF_ZERO(0.0, injectionSwitch.x))), max(write_val, _GLF_IDENTITY(write_val, 0u | (write_val)))))))), _GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY(write_val, (write_val) + _GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)), (_GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)), (uint(_GLF_ZERO(0.0, injectionSwitch.x))) | 0u)) * 1u)), max(write_val, _GLF_IDENTITY(write_val, 0u | (write_val))))), (false ? _GLF_FUZZED(subgroup_local_id) : ~ (_GLF_IDENTITY(_GLF_IDENTITY(write_val, (write_val) + uint(_GLF_ZERO(0.0, injectionSwitch.x))), max(write_val, _GLF_IDENTITY(write_val, 0u | (write_val))))))))), 0u | _GLF_IDENTITY((~ (_GLF_IDENTITY(write_val, max(write_val, _GLF_IDENTITY(write_val, 0u | (write_val)))))), min((~ (_GLF_IDENTITY(write_val, max(write_val, _GLF_IDENTITY(write_val, 0u | (write_val)))))), _GLF_IDENTITY((~ (_GLF_IDENTITY(write_val, max(write_val, _GLF_IDENTITY(write_val, 0u | (write_val)))))), clamp((~ (_GLF_IDENTITY(write_val, max(write_val, _GLF_IDENTITY(write_val, 0u | (write_val)))))), (~ (_GLF_IDENTITY(write_val, max(write_val, _GLF_IDENTITY(write_val, 0u | (write_val)))))), (~ (_GLF_IDENTITY(write_val, max(write_val, _GLF_IDENTITY(write_val, 0u | (write_val))))))))))), _GLF_IDENTITY(min(_GLF_IDENTITY(_GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY(write_val, (write_val) + uint(_GLF_ZERO(0.0, injectionSwitch.x))), max(write_val, _GLF_IDENTITY(write_val, _GLF_IDENTITY(0u | (write_val), (0u | (write_val)) - 0u))))), max(~ (_GLF_IDENTITY(_GLF_IDENTITY(write_val, (write_val) + uint(_GLF_ZERO(0.0, injectionSwitch.x))), max(write_val, _GLF_IDENTITY(write_val, 0u | (write_val))))), _GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY(write_val, (write_val) + uint(_GLF_ZERO(0.0, injectionSwitch.x))), max(write_val, _GLF_IDENTITY(write_val, 0u | (write_val))))), (false ? _GLF_FUZZED(subgroup_local_id) : ~ (_GLF_IDENTITY(_GLF_IDENTITY(write_val, (write_val) + uint(_GLF_ZERO(0.0, injectionSwitch.x))), max(write_val, _GLF_IDENTITY(write_val, 0u | (write_val))))))))), 0u | (~ (_GLF_IDENTITY(write_val, max(write_val, _GLF_IDENTITY(write_val, 0u | (write_val))))))), _GLF_IDENTITY(_GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY(write_val, (write_val) + uint(_GLF_ZERO(0.0, injectionSwitch.x))), max(write_val, _GLF_IDENTITY(write_val, _GLF_IDENTITY(0u | (write_val), (0u | (write_val)) - 0u))))), max(~ (_GLF_IDENTITY(_GLF_IDENTITY(write_val, (write_val) + uint(_GLF_ZERO(0.0, injectionSwitch.x))), max(write_val, _GLF_IDENTITY(write_val, 0u | (write_val))))), _GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY(write_val, (write_val) + uint(_GLF_ZERO(0.0, injectionSwitch.x))), max(write_val, _GLF_IDENTITY(write_val, 0u | (write_val))))), (false ? _GLF_FUZZED(subgroup_local_id) : ~ (_GLF_IDENTITY(_GLF_IDENTITY(write_val, (write_val) + uint(_GLF_ZERO(0.0, injectionSwitch.x))), max(write_val, _GLF_IDENTITY(write_val, 0u | (write_val))))))))), 0u | (~ (_GLF_IDENTITY(write_val, max(write_val, _GLF_IDENTITY(write_val, 0u | (write_val)))))))), uint(uvec4(min(_GLF_IDENTITY(_GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY(write_val, (write_val) + uint(_GLF_ZERO(0.0, injectionSwitch.x))), max(write_val, _GLF_IDENTITY(write_val, _GLF_IDENTITY(0u | (write_val), (0u | (write_val)) - 0u))))), max(~ (_GLF_IDENTITY(_GLF_IDENTITY(write_val, (write_val) + uint(_GLF_ZERO(0.0, injectionSwitch.x))), max(write_val, _GLF_IDENTITY(write_val, 0u | (write_val))))), _GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY(write_val, (write_val) + uint(_GLF_ZERO(0.0, injectionSwitch.x))), max(write_val, _GLF_IDENTITY(write_val, 0u | (write_val))))), (false ? _GLF_FUZZED(subgroup_local_id) : ~ (_GLF_IDENTITY(_GLF_IDENTITY(write_val, (write_val) + uint(_GLF_ZERO(0.0, injectionSwitch.x))), max(write_val, _GLF_IDENTITY(write_val, 0u | (write_val))))))))), 0u | (~ (_GLF_IDENTITY(write_val, max(write_val, _GLF_IDENTITY(write_val, 0u | (write_val))))))), _GLF_IDENTITY(_GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY(write_val, (write_val) + uint(_GLF_ZERO(0.0, injectionSwitch.x))), max(write_val, _GLF_IDENTITY(write_val, _GLF_IDENTITY(0u | (write_val), (0u | (write_val)) - 0u))))), max(~ (_GLF_IDENTITY(_GLF_IDENTITY(write_val, (write_val) + uint(_GLF_ZERO(0.0, injectionSwitch.x))), max(write_val, _GLF_IDENTITY(write_val, 0u | (write_val))))), _GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY(write_val, (write_val) + uint(_GLF_ZERO(0.0, injectionSwitch.x))), max(write_val, _GLF_IDENTITY(write_val, 0u | (write_val))))), (false ? _GLF_FUZZED(subgroup_local_id) : ~ (_GLF_IDENTITY(_GLF_IDENTITY(write_val, (write_val) + uint(_GLF_ZERO(0.0, injectionSwitch.x))), max(write_val, _GLF_IDENTITY(write_val, 0u | (write_val))))))))), 0u | (~ (_GLF_IDENTITY(write_val, max(write_val, _GLF_IDENTITY(write_val, 0u | (write_val)))))))), 0u, 0u, 1u))))), max((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY(write_val, _GLF_IDENTITY((write_val) + uint(_GLF_ZERO(0.0, injectionSwitch.x)), ((write_val) + uint(_GLF_ZERO(0.0, injectionSwitch.x))) / 1u)), max(write_val, _GLF_IDENTITY(write_val, _GLF_IDENTITY(0u | (write_val), (0u | (write_val)) - 0u))))), max(~ (_GLF_IDENTITY(_GLF_IDENTITY(write_val, (write_val) + uint(_GLF_ZERO(0.0, injectionSwitch.x))), max(write_val, _GLF_IDENTITY(write_val, 0u | (write_val))))), _GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY(write_val, (write_val) + uint(_GLF_ZERO(0.0, injectionSwitch.x))), max(write_val, _GLF_IDENTITY(write_val, 0u | (write_val))))), (false ? _GLF_FUZZED(subgroup_local_id) : ~ (_GLF_IDENTITY(_GLF_IDENTITY(write_val, (write_val) + uint(_GLF_ZERO(0.0, injectionSwitch.x))), max(write_val, _GLF_IDENTITY(write_val, 0u | (write_val))))))))), 0u | (~ (_GLF_IDENTITY(write_val, max(write_val, _GLF_IDENTITY(write_val, 0u | (write_val))))))), min(_GLF_IDENTITY(_GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY(write_val, (write_val) + uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-862.525), _GLF_FUZZED(5177.6483)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))).x))), max(write_val, _GLF_IDENTITY(_GLF_IDENTITY(write_val, _GLF_IDENTITY(0u | (write_val), (0u | (write_val)) - 0u)), min(_GLF_IDENTITY(_GLF_IDENTITY(write_val, _GLF_IDENTITY(0u | (write_val), (0u | (write_val)) - 0u)), clamp(_GLF_IDENTITY(write_val, _GLF_IDENTITY(0u | (write_val), (0u | (write_val)) - 0u)), _GLF_IDENTITY(write_val, _GLF_IDENTITY(0u | (write_val), (0u | (write_val)) - 0u)), _GLF_IDENTITY(write_val, _GLF_IDENTITY(0u | (write_val), (0u | (write_val)) - 0u)))), _GLF_IDENTITY(_GLF_IDENTITY(write_val, _GLF_IDENTITY(0u | (write_val), (0u | (write_val)) - 0u)), 0u | (_GLF_IDENTITY(_GLF_IDENTITY(write_val, _GLF_IDENTITY(0u | (write_val), (0u | (write_val)) - 0u)), (false ? _GLF_FUZZED(subgroup_id) : _GLF_IDENTITY(write_val, _GLF_IDENTITY(0u | (write_val), (0u | (write_val)) - 0u))))))))))), max(~ (_GLF_IDENTITY(_GLF_IDENTITY(write_val, (write_val) + uint(_GLF_ZERO(0.0, injectionSwitch.x))), max(write_val, _GLF_IDENTITY(write_val, 0u | (write_val))))), _GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY(write_val, (write_val) + uint(_GLF_ZERO(0.0, injectionSwitch.x))), max(write_val, _GLF_IDENTITY(write_val, 0u | (write_val))))), (false ? _GLF_FUZZED(subgroup_local_id) : ~ (_GLF_IDENTITY(_GLF_IDENTITY(write_val, (write_val) + uint(_GLF_ZERO(0.0, injectionSwitch.x))), max(write_val, _GLF_IDENTITY(write_val, _GLF_IDENTITY(0u, (0u) | 0u) | (write_val))))))))), 0u | (~ (_GLF_IDENTITY(_GLF_IDENTITY(write_val, max(write_val, _GLF_IDENTITY(write_val, 0u | (write_val)))), (_GLF_IDENTITY(write_val, max(write_val, _GLF_IDENTITY(write_val, 0u | (write_val))))) << 0u)))), _GLF_IDENTITY(_GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY(write_val, (write_val) + uint(_GLF_ZERO(0.0, injectionSwitch.x))), max(_GLF_IDENTITY(write_val, (write_val) | (_GLF_IDENTITY(write_val, (write_val) / 1u))), _GLF_IDENTITY(write_val, _GLF_IDENTITY(0u | (_GLF_IDENTITY(write_val, clamp(_GLF_IDENTITY(write_val, (true ? write_val : _GLF_FUZZED(workgroup_size))), write_val, write_val))), (0u | (write_val)) - 0u))))), max(~ (_GLF_IDENTITY(_GLF_IDENTITY(write_val, (write_val) + uint(_GLF_ZERO(0.0, injectionSwitch.x))), max(write_val, _GLF_IDENTITY(write_val, 0u | (write_val))))), _GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY(write_val, (write_val) + uint(_GLF_ZERO(0.0, injectionSwitch.x))), max(write_val, _GLF_IDENTITY(write_val, _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) | 0u)) + 0u) | (write_val))))), (false ? _GLF_FUZZED(subgroup_local_id) : ~ (_GLF_IDENTITY(_GLF_IDENTITY(write_val, (write_val) + uint(_GLF_ZERO(0.0, injectionSwitch.x))), max(write_val, _GLF_IDENTITY(write_val, 0u | (write_val))))))))), 0u | (~ (_GLF_IDENTITY(write_val, max(write_val, _GLF_IDENTITY(write_val, 0u | (write_val)))))))))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY(write_val, (write_val) + uint(_GLF_ZERO(0.0, injectionSwitch.x))), max(write_val, _GLF_IDENTITY(_GLF_IDENTITY(write_val, min(_GLF_IDENTITY(write_val, min(write_val, write_val)), write_val)), _GLF_IDENTITY(0u | (write_val), (0u | (write_val)) - 0u))))), max(~ (_GLF_IDENTITY(_GLF_IDENTITY(write_val, (write_val) + uint(_GLF_ZERO(0.0, injectionSwitch.x))), max(write_val, _GLF_IDENTITY(_GLF_IDENTITY(write_val, 0u | (write_val)), ~ (~ (_GLF_IDENTITY(write_val, 0u | (write_val)))))))), _GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY(write_val, (write_val) + uint(_GLF_ZERO(0.0, injectionSwitch.x))), max(write_val, _GLF_IDENTITY(write_val, 0u | (write_val))))), (false ? _GLF_FUZZED(subgroup_local_id) : ~ (_GLF_IDENTITY(_GLF_IDENTITY(write_val, (write_val) + uint(_GLF_ZERO(0.0, injectionSwitch.x))), max(write_val, _GLF_IDENTITY(write_val, 0u | (write_val))))))))), 0u | (~ (_GLF_IDENTITY(_GLF_IDENTITY(write_val, ~ (_GLF_IDENTITY(~ (write_val), (~ (write_val)) - 0u))), max(write_val, _GLF_IDENTITY(write_val, 0u | (write_val))))))), min(_GLF_IDENTITY(_GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY(write_val, (write_val) + uint(_GLF_ZERO(0.0, injectionSwitch.x))), max(write_val, _GLF_IDENTITY(write_val, _GLF_IDENTITY(0u | (write_val), (0u | (write_val)) - 0u))))), max(~ (_GLF_IDENTITY(_GLF_IDENTITY(write_val, (write_val) + uint(_GLF_ZERO(0.0, injectionSwitch.x))), max(_GLF_IDENTITY(write_val, min(write_val, write_val)), _GLF_IDENTITY(write_val, 0u | (write_val))))), _GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY(write_val, (write_val) + uint(_GLF_ZERO(0.0, injectionSwitch.x))), max(write_val, _GLF_IDENTITY(write_val, 0u | (write_val))))), (false ? _GLF_FUZZED(subgroup_local_id) : ~ (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(write_val, (write_val) + uint(_GLF_ZERO(0.0, injectionSwitch.x))), 0u | (_GLF_IDENTITY(_GLF_IDENTITY(write_val, (write_val) + uint(_GLF_ZERO(0.0, injectionSwitch.x))), _GLF_IDENTITY(uint(uvec2(_GLF_IDENTITY(_GLF_IDENTITY(write_val, (write_val) + uint(_GLF_ZERO(0.0, injectionSwitch.x))), (true ? _GLF_IDENTITY(write_val, (write_val) + uint(_GLF_ZERO(0.0, injectionSwitch.x))) : _GLF_FUZZED(workgroup_id))), 0u)), ~ (~ (uint(uvec2(_GLF_IDENTITY(_GLF_IDENTITY(write_val, (write_val) + uint(_GLF_ZERO(0.0, injectionSwitch.x))), (true ? _GLF_IDENTITY(write_val, (write_val) + uint(_GLF_ZERO(0.0, injectionSwitch.x))) : _GLF_FUZZED(workgroup_id))), 0u)))))))), _GLF_IDENTITY(max(write_val, _GLF_IDENTITY(write_val, 0u | (write_val))), max(max(write_val, _GLF_IDENTITY(write_val, 0u | (write_val))), _GLF_IDENTITY(max(write_val, _GLF_IDENTITY(write_val, 0u | (write_val))), 0u | (max(write_val, _GLF_IDENTITY(write_val, 0u | (write_val))))))))))))), 0u | (~ (_GLF_IDENTITY(write_val, max(write_val, _GLF_IDENTITY(write_val, 0u | (write_val))))))), _GLF_IDENTITY(_GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY(write_val, (write_val) + uint(_GLF_ZERO(_GLF_IDENTITY(0.0, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? 0.0 : _GLF_FUZZED(-3.4))), injectionSwitch.x))), max(write_val, _GLF_IDENTITY(write_val, _GLF_IDENTITY(0u | (write_val), (0u | (write_val)) - 0u))))), max(~ (_GLF_IDENTITY(_GLF_IDENTITY(write_val, (_GLF_IDENTITY(write_val, 0u | (write_val))) + uint(_GLF_ZERO(0.0, injectionSwitch.x))), max(write_val, _GLF_IDENTITY(write_val, 0u | (write_val))))), _GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY(write_val, (write_val) + uint(_GLF_ZERO(0.0, injectionSwitch.x))), max(write_val, _GLF_IDENTITY(write_val, 0u | (write_val))))), (false ? _GLF_FUZZED(subgroup_local_id) : ~ (_GLF_IDENTITY(_GLF_IDENTITY(write_val, (write_val) + uint(_GLF_ZERO(0.0, injectionSwitch.x))), max(write_val, _GLF_IDENTITY(write_val, 0u | (write_val))))))))), 0u | (~ (_GLF_IDENTITY(write_val, max(write_val, _GLF_IDENTITY(write_val, _GLF_IDENTITY(0u | (write_val), min(0u | (write_val), 0u | (write_val))))))))))))))) - 0u)) : _GLF_FUZZED(_GLF_IDENTITY(write_val, 0u | (_GLF_IDENTITY(write_val, 0u | (_GLF_IDENTITY(write_val, (write_val) | (write_val))))))))), 4, _GLF_IDENTITY(64, ~ (~ (_GLF_IDENTITY(64, min(64, 64))))), 0);
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 buf[virtual_gid] = uint(subgroupAllEqual(_GLF_IDENTITY(read_val, ~ (_GLF_IDENTITY(~ (read_val), max(_GLF_IDENTITY(_GLF_IDENTITY(~ (read_val), 0u + (~ (read_val))), uint(uvec2(_GLF_IDENTITY(~ (read_val), _GLF_IDENTITY(_GLF_IDENTITY((~ _GLF_IDENTITY(_GLF_IDENTITY((read_val), max((_GLF_IDENTITY(read_val, (read_val) >> 0u)), (read_val))), _GLF_IDENTITY(uint(uvec3(_GLF_IDENTITY((read_val), max((_GLF_IDENTITY(read_val, (read_val) >> 0u)), (read_val))), ((0u ^ 0u) << _GLF_IDENTITY(_GLF_IDENTITY(uint(7u), (_GLF_IDENTITY(uint(7u), (uint(7u)) >> 0u)) << (0u ^ 0u)), uint(_GLF_IDENTITY(7u, clamp(_GLF_IDENTITY(7u, ~ (~ (7u))), 7u, 7u))))), 0u)), (true ? uint(uvec3(_GLF_IDENTITY((read_val), max((_GLF_IDENTITY(read_val, (read_val) >> 0u)), (read_val))), ((0u ^ 0u) << _GLF_IDENTITY(uint(7u), uint(7u))), 0u)) : _GLF_FUZZED(_GLF_IDENTITY(89977u, clamp(89977u, 89977u, 89977u))))))), (_GLF_IDENTITY((~ _GLF_IDENTITY(_GLF_IDENTITY((read_val), max((_GLF_IDENTITY(read_val, (read_val) >> 0u)), (read_val))), _GLF_IDENTITY(uint(uvec3(_GLF_IDENTITY((read_val), max((_GLF_IDENTITY(read_val, (read_val) >> 0u)), (read_val))), ((0u ^ 0u) << _GLF_IDENTITY(_GLF_IDENTITY(uint(7u), (_GLF_IDENTITY(uint(7u), (uint(7u)) >> 0u)) << (0u ^ 0u)), uint(_GLF_IDENTITY(7u, clamp(_GLF_IDENTITY(7u, ~ (~ (7u))), 7u, 7u))))), 0u)), (true ? uint(uvec3(_GLF_IDENTITY((read_val), max((_GLF_IDENTITY(read_val, (read_val) >> 0u)), (read_val))), ((0u ^ 0u) << _GLF_IDENTITY(uint(7u), uint(7u))), 0u)) : _GLF_FUZZED(_GLF_IDENTITY(89977u, clamp(89977u, 89977u, 89977u))))))), min((~ _GLF_IDENTITY(_GLF_IDENTITY((read_val), max((_GLF_IDENTITY(read_val, (read_val) >> 0u)), (read_val))), _GLF_IDENTITY(uint(uvec3(_GLF_IDENTITY((read_val), max((_GLF_IDENTITY(read_val, (read_val) >> 0u)), (read_val))), ((0u ^ 0u) << _GLF_IDENTITY(_GLF_IDENTITY(uint(7u), (_GLF_IDENTITY(uint(7u), (uint(7u)) >> 0u)) << (0u ^ 0u)), uint(_GLF_IDENTITY(7u, clamp(_GLF_IDENTITY(7u, ~ (~ (7u))), 7u, 7u))))), 0u)), (true ? uint(uvec3(_GLF_IDENTITY((read_val), max((_GLF_IDENTITY(read_val, (read_val) >> 0u)), (read_val))), ((0u ^ 0u) << _GLF_IDENTITY(uint(7u), uint(7u))), 0u)) : _GLF_FUZZED(_GLF_IDENTITY(89977u, clamp(89977u, 89977u, 89977u))))))), (~ _GLF_IDENTITY(_GLF_IDENTITY((read_val), max((_GLF_IDENTITY(read_val, (read_val) >> 0u)), (read_val))), _GLF_IDENTITY(uint(uvec3(_GLF_IDENTITY((read_val), max((_GLF_IDENTITY(read_val, (read_val) >> 0u)), (read_val))), ((0u ^ 0u) << _GLF_IDENTITY(_GLF_IDENTITY(uint(7u), (_GLF_IDENTITY(uint(7u), (uint(7u)) >> 0u)) << (0u ^ 0u)), uint(_GLF_IDENTITY(7u, clamp(_GLF_IDENTITY(7u, ~ (~ (7u))), 7u, 7u))))), 0u)), (true ? uint(uvec3(_GLF_IDENTITY((read_val), max((_GLF_IDENTITY(read_val, (read_val) >> 0u)), (read_val))), ((0u ^ 0u) << _GLF_IDENTITY(uint(7u), uint(7u))), 0u)) : _GLF_FUZZED(_GLF_IDENTITY(89977u, clamp(89977u, 89977u, 89977u)))))))))) - 0u), ((~ _GLF_IDENTITY(_GLF_IDENTITY((read_val), max((_GLF_IDENTITY(read_val, (read_val) >> 0u)), (read_val))), _GLF_IDENTITY(uint(uvec3(_GLF_IDENTITY((read_val), max((_GLF_IDENTITY(read_val, (read_val) >> 0u)), (read_val))), ((0u ^ 0u) << _GLF_IDENTITY(uint(7u), uint(7u))), 0u)), (true ? uint(uvec3(_GLF_IDENTITY((read_val), max((_GLF_IDENTITY(read_val, (read_val) >> 0u)), (read_val))), ((0u ^ 0u) << _GLF_IDENTITY(uint(7u), uint(7u))), 0u)) : _GLF_FUZZED(_GLF_IDENTITY(89977u, clamp(89977u, 89977u, 89977u)))))))) | ((~ _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((read_val), max((read_val), _GLF_IDENTITY((read_val), 1u * ((read_val))))), max((_GLF_IDENTITY(read_val, (read_val) >> 0u)), (read_val))), _GLF_IDENTITY(uint(uvec3(_GLF_IDENTITY((read_val), max((_GLF_IDENTITY(read_val, (read_val) >> 0u)), (read_val))), ((0u ^ 0u) << _GLF_IDENTITY(uint(7u), uint(7u))), 0u)), (true ? uint(uvec3(_GLF_IDENTITY((read_val), max((_GLF_IDENTITY(read_val, _GLF_IDENTITY((read_val) >> 0u, ((read_val) >> 0u) ^ 0u))), (read_val))), ((0u ^ 0u) << _GLF_IDENTITY(uint(7u), uint(7u))), 0u)) : _GLF_FUZZED(_GLF_IDENTITY(89977u, clamp(89977u, 89977u, 89977u))))))))) - 0u), 0u))), _GLF_IDENTITY(~ (read_val), _GLF_IDENTITY(max(_GLF_IDENTITY(_GLF_IDENTITY(~ (read_val), (~ (read_val)) - 0u), (~ (read_val)) | (~ (read_val))), ~ (read_val)), (_GLF_IDENTITY(max(_GLF_IDENTITY(~ (read_val), (~ (read_val)) | (~ (read_val))), _GLF_IDENTITY(~ (read_val), max(~ (read_val), _GLF_IDENTITY(~ (read_val), ~ (_GLF_IDENTITY(~ _GLF_IDENTITY((~ (read_val)), clamp(_GLF_IDENTITY((~ (read_val)), ((~ (read_val))) - 0u), (~ (read_val)), (~ (read_val)))), uint(uvec3(~ (~ (read_val)), 0u, 0u)))))))), (max(_GLF_IDENTITY(~ (read_val), _GLF_IDENTITY((~ (read_val)) | (~ _GLF_IDENTITY((read_val), _GLF_IDENTITY(uint(uvec4((read_val), 1u, 1u, 1u)), uint(uint(uint(uvec4((read_val), 1u, 1u, 1u))))))), (((1u << _GLF_IDENTITY(uint(4u), uint(4u))) >> _GLF_IDENTITY(uint(4u), uint(4u))) ^ 1u) | ((~ (read_val)) | (~ (read_val))))), ~ _GLF_IDENTITY((read_val), 0u ^ ((read_val))))) | 0u)) >> 0u))))))));
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! (false))))))))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       barrier();
      }
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
}
