#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
#extension GL_EXT_maximal_reconvergence : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer WriteVal {
 uint write_val;
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, true, true), bvec3(bvec4(bvec3(false, true, true), _GLF_IDENTITY(_GLF_IDENTITY(true, false || (true)), false || (_GLF_IDENTITY(_GLF_IDENTITY(true, _GLF_IDENTITY(false || _GLF_IDENTITY((true), ((true)) || false), false || (_GLF_IDENTITY(false, bool(bool(false))) || _GLF_IDENTITY((true), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && ((true)))))), (_GLF_IDENTITY(_GLF_IDENTITY(true, false || (true)), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(true, false || (true)), false)), (bool(bvec2(_GLF_IDENTITY(true, false || (true)), false))) && true))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))), ! (! (_GLF_IDENTITY(false, bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(false, _GLF_IDENTITY(true, false || (true)), true), bvec3(bvec4(bvec3(false, true, true), _GLF_IDENTITY(_GLF_IDENTITY(true, false || (true)), false || (_GLF_IDENTITY(_GLF_IDENTITY(true, _GLF_IDENTITY(false || (true), _GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, (false) && true)), bool(bool(! (_GLF_IDENTITY(false, (false) && true))))))) || (false || (true)))), (_GLF_IDENTITY(_GLF_IDENTITY(true, false || (true)), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(true, false || (true)), false)), (bool(bvec2(_GLF_IDENTITY(true, false || (true)), false))) && true))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), bvec3(bvec4(_GLF_IDENTITY(bvec3(false, true, true), bvec3(bvec4(bvec3(false, true, true), _GLF_IDENTITY(_GLF_IDENTITY(true, false || (true)), false || (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(true, (_GLF_IDENTITY(true, bool(bvec2(true, false)))) || false), _GLF_IDENTITY(false || (true), false || (false || (true)))), (_GLF_IDENTITY(_GLF_IDENTITY(true, false || (true)), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(true, false || (true)), false)), (bool(bvec2(_GLF_IDENTITY(true, false || (true)), false))) && true))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), false))))))))), _GLF_IDENTITY(true && (_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, true, true), _GLF_IDENTITY(bvec3(bvec4(bvec3(false, true, true), true)), _GLF_IDENTITY(bvec3(bvec4(bvec3(bvec4(bvec3(false, true, true), _GLF_IDENTITY(true, ! (! (true))))), _GLF_IDENTITY(true, _GLF_IDENTITY((true) && true, true && ((true) && true))))), bvec3(bvec3(bvec3(bvec4(bvec3(bvec4(bvec3(false, true, true), true)), _GLF_IDENTITY(true, _GLF_IDENTITY(_GLF_IDENTITY((true), false || ((true))) && true, (_GLF_IDENTITY((true), false || ((true))) && true) || false))))))))))))), _GLF_IDENTITY(! (_GLF_IDENTITY(! (true && (_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, true, true), _GLF_IDENTITY(bvec3(bvec4(bvec3(false, true, true), true)), _GLF_IDENTITY(_GLF_IDENTITY(bvec3(bvec4(bvec3(bvec4(bvec3(false, true, true), true)), _GLF_IDENTITY(true, (true) && true))), bvec3(_GLF_IDENTITY(bvec3(bvec3(bvec4(bvec3(bvec4(bvec3(false, true, true), true)), _GLF_IDENTITY(true, (true) && true)))), _GLF_IDENTITY(bvec3(bvec3(bvec3(bvec3(bvec4(bvec3(bvec4(bvec3(false, true, true), true)), _GLF_IDENTITY(true, (true) && true)))))), bvec3(bvec4(bvec3(bvec3(bvec3(bvec3(bvec4(bvec3(bvec4(bvec3(false, true, true), true)), _GLF_IDENTITY(true, (true) && true)))))), true)))))), bvec3(bvec3(bvec3(bvec4(bvec3(bvec4(bvec3(false, true, true), true)), _GLF_IDENTITY(true, _GLF_IDENTITY((true), false || ((true))) && true))))))))))))), true && (! (true && (_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, true, true), _GLF_IDENTITY(bvec3(bvec4(bvec3(false, true, true), true)), _GLF_IDENTITY(bvec3(bvec4(bvec3(bvec4(bvec3(false, true, true), true)), _GLF_IDENTITY(true, _GLF_IDENTITY((true) && true, ! (! ((true) && true)))))), bvec3(bvec3(bvec3(bvec4(bvec3(bvec4(_GLF_IDENTITY(bvec3(false, true, true), bvec3(_GLF_IDENTITY(bvec3(bvec3(false, true, true)), _GLF_IDENTITY(bvec3(bvec3(bvec3(bvec3(false, true, true)))), bvec3(bvec4(bvec3(bvec3(bvec3(bvec3(false, true, true)))), _GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), true && (bool(bool(false))))))))))), true)), _GLF_IDENTITY(true, _GLF_IDENTITY(_GLF_IDENTITY((true), false || ((true))) && true, (_GLF_IDENTITY(_GLF_IDENTITY((true), false || ((true))) && true, ! (! (_GLF_IDENTITY((true), false || ((true))) && true)))) && true))))))))))))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (! _GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_IDENTITY(true, (true) || false) && (_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, true, true), _GLF_IDENTITY(_GLF_IDENTITY(bvec3(bvec4(bvec3(false, true, true), true)), _GLF_IDENTITY(bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec4(bvec3(false, true, true), true)), bvec3(bvec3(bvec3(bvec4(bvec3(false, true, true), true))))), false)), bvec3(bvec3(bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec4(bvec3(false, true, true), true)), bvec3(bvec3(bvec3(bvec4(bvec3(false, true, true), true))))), false)))))), _GLF_IDENTITY(_GLF_IDENTITY(bvec3(bvec4(bvec3(bvec4(bvec3(false, true, true), true)), _GLF_IDENTITY(true, _GLF_IDENTITY((_GLF_IDENTITY(true, true && (true))), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY((_GLF_IDENTITY(true, true && (true))), ! (! ((_GLF_IDENTITY(true, true && (true)))))))), (_GLF_IDENTITY(bool(bool(_GLF_IDENTITY((_GLF_IDENTITY(true, true && (true))), ! (! ((_GLF_IDENTITY(true, true && (true)))))))), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(bool(bool(_GLF_IDENTITY((_GLF_IDENTITY(true, true && (true))), ! (! ((_GLF_IDENTITY(true, true && (true)))))))), true && (_GLF_IDENTITY(bool(bool(_GLF_IDENTITY((_GLF_IDENTITY(true, true && (true))), ! (! ((_GLF_IDENTITY(true, true && (true)))))))), ! (! (bool(bool(_GLF_IDENTITY((_GLF_IDENTITY(true, true && (true))), ! (! ((_GLF_IDENTITY(true, true && (true))))))))))))), false, false)), ! (! (bool(bvec3(_GLF_IDENTITY(bool(bool(_GLF_IDENTITY((_GLF_IDENTITY(true, true && (true))), ! (! ((_GLF_IDENTITY(true, true && (true)))))))), true && (_GLF_IDENTITY(bool(bool(_GLF_IDENTITY((_GLF_IDENTITY(true, true && (true))), ! (! ((_GLF_IDENTITY(true, true && (true)))))))), ! (! (bool(bool(_GLF_IDENTITY((_GLF_IDENTITY(true, true && (true))), ! (! ((_GLF_IDENTITY(true, true && (true))))))))))))), false, false))))))) && _GLF_IDENTITY(true, (_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, (true) || false))))) || false))) && _GLF_IDENTITY(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (true))))), bvec3(_GLF_IDENTITY(bvec3(bvec3(bvec4(bvec3(bvec4(bvec3(false, true, true), true)), _GLF_IDENTITY(true, (true) && true)))), bvec3(_GLF_IDENTITY(bvec3(bvec3(bvec3(bvec4(bvec3(bvec4(bvec3(false, true, true), true)), _GLF_IDENTITY(true, (true) && true))))), bvec3(bvec4(bvec3(bvec3(bvec3(bvec4(bvec3(bvec4(bvec3(false, true, true), true)), _GLF_IDENTITY(true, (true) && true))))), false))))))), bvec3(bvec3(bvec3(bvec4(bvec3(bvec4(bvec3(false, true, true), true)), _GLF_IDENTITY(true, _GLF_IDENTITY((true), false || ((true))) && true))))))))))))), true && (! (true && (_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, true, true), _GLF_IDENTITY(bvec3(bvec4(bvec3(false, true, true), true)), _GLF_IDENTITY(bvec3(bvec4(bvec3(bvec4(bvec3(false, true, true), true)), _GLF_IDENTITY(true, _GLF_IDENTITY((true) && true, ! (! (_GLF_IDENTITY((true) && true, bool(bool((true) && true))))))))), bvec3(bvec3(bvec3(bvec4(bvec3(bvec4(_GLF_IDENTITY(bvec3(false, true, true), bvec3(_GLF_IDENTITY(bvec3(bvec3(false, true, true)), _GLF_IDENTITY(bvec3(bvec3(bvec3(bvec3(false, true, true)))), bvec3(bvec4(bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec3(false, true, true), bvec3(_GLF_IDENTITY(bvec3(bvec3(false, true, true)), bvec3(bvec4(bvec3(bvec3(false, true, true)), true)))))))), false)))))), true)), _GLF_IDENTITY(_GLF_IDENTITY(true, _GLF_IDENTITY((true), false || ((true))) && true), bool(bvec4(_GLF_IDENTITY(true, _GLF_IDENTITY((true), false || ((true))) && true), false, true, false)))))))))))))))))), ! (! ((_GLF_IDENTITY(! (_GLF_IDENTITY(true, (true) || false) && (_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, true, true), _GLF_IDENTITY(_GLF_IDENTITY(bvec3(bvec4(bvec3(false, true, true), true)), _GLF_IDENTITY(bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec4(bvec3(false, true, true), true)), bvec3(bvec3(bvec3(bvec4(bvec3(false, true, true), true))))), false)), bvec3(bvec3(bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec4(bvec3(false, true, true), true)), bvec3(bvec3(bvec3(bvec4(bvec3(false, true, true), true))))), false)))))), _GLF_IDENTITY(_GLF_IDENTITY(bvec3(bvec4(bvec3(bvec4(bvec3(false, true, true), true)), _GLF_IDENTITY(true, _GLF_IDENTITY((_GLF_IDENTITY(true, true && (true))), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY((_GLF_IDENTITY(true, true && (true))), ! (! ((_GLF_IDENTITY(true, true && (true)))))))), (_GLF_IDENTITY(bool(bool(_GLF_IDENTITY((_GLF_IDENTITY(true, true && (true))), ! (! ((_GLF_IDENTITY(true, true && (true)))))))), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(bool(bool(_GLF_IDENTITY((_GLF_IDENTITY(true, true && (true))), ! (! ((_GLF_IDENTITY(true, true && (true)))))))), true && (_GLF_IDENTITY(bool(bool(_GLF_IDENTITY((_GLF_IDENTITY(true, true && (true))), ! (! ((_GLF_IDENTITY(true, true && (true)))))))), ! (! (bool(bool(_GLF_IDENTITY((_GLF_IDENTITY(true, true && (true))), ! (! ((_GLF_IDENTITY(true, true && (true))))))))))))), false, false)), ! (! (bool(bvec3(_GLF_IDENTITY(bool(bool(_GLF_IDENTITY((_GLF_IDENTITY(true, true && (true))), ! (! ((_GLF_IDENTITY(true, true && (true)))))))), true && (_GLF_IDENTITY(bool(bool(_GLF_IDENTITY((_GLF_IDENTITY(true, true && (true))), ! (! ((_GLF_IDENTITY(true, true && (true)))))))), ! (! (bool(bool(_GLF_IDENTITY((_GLF_IDENTITY(true, true && (true))), ! (! ((_GLF_IDENTITY(true, true && (true))))))))))))), false, false))))))) && _GLF_IDENTITY(true, (_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, (true) || false))))) || false))) && _GLF_IDENTITY(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (true))))), bvec3(_GLF_IDENTITY(bvec3(bvec3(bvec4(bvec3(bvec4(bvec3(false, true, true), true)), _GLF_IDENTITY(true, (true) && true)))), bvec3(_GLF_IDENTITY(bvec3(bvec3(bvec3(bvec4(bvec3(bvec4(bvec3(false, true, true), true)), _GLF_IDENTITY(true, (true) && true))))), bvec3(bvec4(bvec3(bvec3(bvec3(bvec4(bvec3(bvec4(bvec3(false, true, true), true)), _GLF_IDENTITY(true, (true) && true))))), false))))))), bvec3(bvec3(bvec3(bvec4(bvec3(bvec4(bvec3(false, true, true), true)), _GLF_IDENTITY(true, _GLF_IDENTITY((true), false || ((true))) && true))))))))))))), true && (! (true && (_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, true, true), _GLF_IDENTITY(bvec3(bvec4(bvec3(false, true, true), true)), _GLF_IDENTITY(bvec3(bvec4(bvec3(bvec4(bvec3(false, true, true), true)), _GLF_IDENTITY(true, _GLF_IDENTITY((true) && true, ! (! (_GLF_IDENTITY((true) && true, bool(bool((true) && true))))))))), bvec3(bvec3(bvec3(bvec4(bvec3(bvec4(_GLF_IDENTITY(bvec3(false, true, true), bvec3(_GLF_IDENTITY(bvec3(bvec3(false, true, true)), _GLF_IDENTITY(bvec3(bvec3(bvec3(bvec3(false, true, true)))), bvec3(bvec4(bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec3(false, true, true), bvec3(_GLF_IDENTITY(bvec3(bvec3(false, true, true)), bvec3(bvec4(bvec3(bvec3(false, true, true)), true)))))))), false)))))), true)), _GLF_IDENTITY(_GLF_IDENTITY(true, _GLF_IDENTITY((true), false || ((true))) && true), bool(bvec4(_GLF_IDENTITY(true, _GLF_IDENTITY((true), false || ((true))) && true), false, true, false))))))))))))))))))))))))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))), float(_GLF_FUZZED(6385.8429)), bool(false)))))))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
       barrier();
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(_GLF_DEAD(false), _GLF_IDENTITY(false, (false) || false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec3(bvec4(bvec3(_GLF_DEAD(false), _GLF_IDENTITY(false, (false) || false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false)))), bool(bvec2(bool(_GLF_IDENTITY(bvec3(_GLF_DEAD(false), _GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), ! (! (_GLF_IDENTITY(false, (false) || false))))) && true), _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), injectionSwitch)).y))), bvec3(bvec4(bvec3(_GLF_DEAD(false), _GLF_IDENTITY(false, (false) || false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false)))), true)))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))), true && (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false))))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec4(5.6, 89.48, 511.657, -5.6).bg))).x > _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(-7776.8563, 3811.5639)) : injectionSwitch)).y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, false, true)))))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
  }
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint subgroup_local_id = gl_SubgroupInvocationID;
 uint num_workgroup = _GLF_IDENTITY(gl_NumWorkGroups.x, (_GLF_IDENTITY(true, ! (! (true))) ? _GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups.x, clamp(_GLF_IDENTITY(gl_NumWorkGroups.x, (true ? gl_NumWorkGroups.x : _GLF_FUZZED(subgroup_id))), gl_NumWorkGroups.x, gl_NumWorkGroups.x)), clamp(gl_NumWorkGroups.x, gl_NumWorkGroups.x, gl_NumWorkGroups.x)) : _GLF_FUZZED(subgroup_local_id)));
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bool(false))), (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint workgroup_size = gl_WorkGroupSize.x;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, 1.0 * (_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)))))), ! (! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).x > injectionSwitch.y)))))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, (false) && true), true, true, false)))))), (_GLF_IDENTITY(false, false || (false))) && true)))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, false, false, true)))))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! (false))))))))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 uint workgroup_id = _GLF_IDENTITY(gl_WorkGroupID, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(gl_WorkGroupID, (_GLF_IDENTITY(gl_WorkGroupID, ~ _GLF_IDENTITY((~ (gl_WorkGroupID)), ((~ (gl_WorkGroupID))) | ((~ (gl_WorkGroupID)))))) | uvec3(0u, 0u, 0u))), (~ (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) ^ uvec3(0u, 0u, 0u)), clamp(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, _GLF_IDENTITY(uvec3(0u, 0u, 0u), ~ (~ (uvec3(0u, 0u, _GLF_IDENTITY(0u, (0u) - (0u << _GLF_IDENTITY(uint(3u), uint(3u)))))))) | (gl_WorkGroupID)), max(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, _GLF_IDENTITY(uvec3(0u, 0u, 0u), ~ (~ (uvec3(0u, 0u, _GLF_IDENTITY(0u, (0u) - (0u << _GLF_IDENTITY(uint(3u), uint(3u)))))))) | (gl_WorkGroupID)), (true ? _GLF_IDENTITY(gl_WorkGroupID, _GLF_IDENTITY(uvec3(0u, 0u, 0u), ~ (~ (uvec3(0u, 0u, _GLF_IDENTITY(0u, (0u) - (0u << _GLF_IDENTITY(uint(3u), uint(3u)))))))) | (gl_WorkGroupID)) : _GLF_FUZZED(uvec3(68961u, 137133u, 142118u)))), _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, _GLF_IDENTITY(uvec3(0u, 0u, 0u), ~ (~ (uvec3(0u, 0u, _GLF_IDENTITY(0u, (0u) - (0u << _GLF_IDENTITY(uint(3u), uint(3u)))))))) | (gl_WorkGroupID)), (_GLF_IDENTITY(gl_WorkGroupID, _GLF_IDENTITY(uvec3(0u, 0u, 0u), ~ (~ (uvec3(0u, 0u, _GLF_IDENTITY(0u, (0u) - (0u << _GLF_IDENTITY(uint(3u), uint(3u)))))))) | (gl_WorkGroupID))) | uvec3(0u, 0u, 0u)))), uvec3(_GLF_IDENTITY(uvec4(_GLF_IDENTITY(gl_WorkGroupID, uvec3(0u, 0u, 0u) ^ _GLF_IDENTITY((gl_WorkGroupID), clamp((gl_WorkGroupID), (gl_WorkGroupID), (gl_WorkGroupID)))), 0u), min(uvec4(_GLF_IDENTITY(gl_WorkGroupID, uvec3(0u, 0u, 0u) ^ (gl_WorkGroupID)), 0u), uvec4(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, uvec3(0u, 0u, 0u) ^ (gl_WorkGroupID)), max(_GLF_IDENTITY(gl_WorkGroupID, uvec3(0u, 0u, 0u) ^ (gl_WorkGroupID)), _GLF_IDENTITY(gl_WorkGroupID, uvec3(0u, 0u, 0u) ^ (gl_WorkGroupID)))), (_GLF_IDENTITY(gl_WorkGroupID, uvec3(0u, 0u, 0u) ^ (gl_WorkGroupID))) / (uvec3(1u, 1u, _GLF_IDENTITY(1u, _GLF_IDENTITY(uint(uvec4(1u, 0u, 1u, 1u)), uint(uvec3(uint(uvec4(1u, 0u, 1u, 1u)), 0u, 0u))))) ^ uvec3(0u, 0u, 0u))), 0u))))), (gl_WorkGroupID) << _GLF_IDENTITY(_GLF_IDENTITY(uvec3(0u, 0u, 0u), ~ (~ (_GLF_IDENTITY(uvec3(0u, 0u, 0u), (_GLF_IDENTITY(uvec3(0u, 0u, 0u), (uvec3(0u, 0u, 0u)) | (uvec3(0u, 0u, 0u)))) << uvec3(0u, 0u, 0u))))), (uvec3(0u, 0u, 0u)) | uvec3(0u, 0u, 0u))), _GLF_IDENTITY(gl_WorkGroupID, uvec3(_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) | _GLF_IDENTITY((gl_WorkGroupID), (true ? _GLF_IDENTITY(_GLF_IDENTITY((gl_WorkGroupID), uvec3(0u, 0u, 0u) | ((gl_WorkGroupID))), (_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(true, true && (true))), true && (! (true))))) ? _GLF_IDENTITY((gl_WorkGroupID), clamp((gl_WorkGroupID), _GLF_IDENTITY((gl_WorkGroupID), max((gl_WorkGroupID), _GLF_IDENTITY((gl_WorkGroupID), ((gl_WorkGroupID)) * uvec3(_GLF_IDENTITY(1u, ~ (~ (1u))), 1u, 1u)))), (gl_WorkGroupID))) : _GLF_FUZZED((uvec3(33926u, 123930u, 193724u) - uvec3(109552u, 163728u, 87669u))))) : _GLF_FUZZED(uvec3(118826u, 182775u, 38010u)))))[0], gl_WorkGroupID[1], _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID[2], uint(_GLF_IDENTITY(uvec4(gl_WorkGroupID[2], 1u, 0u, 0u), (_GLF_IDENTITY(uvec4(gl_WorkGroupID[2], 1u, 0u, 0u), (uvec4(gl_WorkGroupID[2], 1u, 0u, 0u)) >> uvec4(0u, 0u, 0u, 0u))) ^ uvec4(0u, 0u, 0u, 0u)))), min(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID[2], ~ (~ (gl_WorkGroupID[2]))), uint(uvec4(_GLF_IDENTITY(gl_WorkGroupID, clamp(_GLF_IDENTITY(gl_WorkGroupID, max(gl_WorkGroupID, gl_WorkGroupID)), _GLF_IDENTITY(gl_WorkGroupID, min(gl_WorkGroupID, gl_WorkGroupID)), gl_WorkGroupID))[2], _GLF_IDENTITY(1u, ~ (~ (1u))), 0u, 0u))), _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID[2], clamp(gl_WorkGroupID[2], gl_WorkGroupID[2], gl_WorkGroupID[2])), uint(uvec4(gl_WorkGroupID[_GLF_IDENTITY(2, ~ (_GLF_IDENTITY(~ (2), clamp(~ (2), ~ (2), _GLF_IDENTITY(~ (2), 0 | (~ (_GLF_IDENTITY(2, max(_GLF_IDENTITY(2, (2) | (2)), _GLF_IDENTITY(2, (_GLF_IDENTITY(2, ~ (~ (2)))) >> 0))))))))))], 1u, _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, _GLF_IDENTITY(1u, (1u) - 0u) * (0u))) << 0u), 0u))))))), gl_WorkGroupID)))) - uvec3(0u, 0u, 0u)))).x;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(mat2(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)), _GLF_ONE(1.0, injectionSwitch.y), abs(0.0)))).y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bool(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec2((injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * exp(0.0)), float(_GLF_IDENTITY(mat2x4(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * exp(0.0)), 1.0, 0.0, 1.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 0.0), mat2x4(mat3x4(mat2x4(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * exp(0.0)), 1.0, 0.0, 1.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 0.0))))))), true)))))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (_GLF_IDENTITY(! (false), ! (! (! (false))))) && true)))), false || (bool(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))) && true))))))))))) || false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 uint workgroup_base = workgroup_size * _GLF_IDENTITY(workgroup_id, (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_id, ~ (~ (workgroup_id))), max(_GLF_IDENTITY(workgroup_id, ~ (~ (workgroup_id))), _GLF_IDENTITY(workgroup_id, _GLF_IDENTITY(~ (~ (workgroup_id)), (~ (~ (workgroup_id))) << uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x))))))))) >> 0u);
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, false, true, false)), bool(bool(bool(bvec4(false, false, true, false))))))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY((false) && true, bool(_GLF_IDENTITY(bool(_GLF_IDENTITY((false) && true, ! (! ((false) && true)))), (_GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY((false) && true, ! _GLF_IDENTITY((! ((false) && true)), bool(_GLF_IDENTITY(bvec2((! ((false) && true)), false), bvec2(bvec3(_GLF_IDENTITY(bvec2((! ((false) && true)), false), bvec2(bvec3(bvec2((! ((false) && true)), false), false))), true))))))), (bool(_GLF_IDENTITY((false) && true, ! (_GLF_IDENTITY(! ((false) && true), (! ((false) && true)) || false))))) && true), ! (_GLF_IDENTITY(! (bool(_GLF_IDENTITY((false) && true, ! _GLF_IDENTITY((! ((false) && true)), ! (! ((! ((false) && true)))))))), ! (! (! _GLF_IDENTITY((bool(_GLF_IDENTITY((false) && true, ! (! ((false) && true))))), true && (_GLF_IDENTITY((bool(_GLF_IDENTITY((false) && true, ! (! ((false) && true))))), ! (_GLF_IDENTITY(! ((bool(_GLF_IDENTITY((false) && true, ! (! ((false) && true)))))), bool(bvec2(! ((bool(_GLF_IDENTITY((false) && true, ! (! ((false) && true)))))), false))))))))))))) && _GLF_IDENTITY(_GLF_IDENTITY(true, ! (! (true))), true && (_GLF_IDENTITY(_GLF_IDENTITY(true, ! (! (true))), (_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), bool(bvec4(_GLF_IDENTITY(! (true), ! (! (! (true)))), false, true, false)))))) && true)))))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bool(_GLF_DEAD(false))), true && _GLF_IDENTITY((bool(bool(_GLF_DEAD(false)))), ! (_GLF_IDENTITY(! ((bool(bool(_GLF_DEAD(false))))), (! ((bool(bool(_GLF_DEAD(false)))))) && true))))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, true)))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-29.16), _GLF_FUZZED(68.33)), vec2((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch)[1], clamp((injectionSwitch)[1], (injectionSwitch)[1], (injectionSwitch)[1]))), bvec2(true, true))).y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false)), _GLF_IDENTITY(bool(bvec4(false, _GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), _GLF_IDENTITY(false, false || (false)) || (! _GLF_IDENTITY((true), ! (_GLF_IDENTITY(! ((true)), (! ((true))) && true))))))), true, true)), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(bool(bvec4(false, true, _GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), ! (! (! (true)))))), true)), ! (! (bool(bvec4(_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(false, ! (! (false))))), true, true, true))))), false, true)), _GLF_IDENTITY(false || (_GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(bool(bvec4(false, true, _GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), ! (! (! (true)))))), true)), ! (! (bool(bvec4(_GLF_IDENTITY(false, _GLF_TRUE(_GLF_IDENTITY(true, bool(bvec3(_GLF_IDENTITY(true, ! (! (true))), false, false))), (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, true)), (_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec2(false, true)), bool(bool(bool(bvec2(false, true))))), (_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec2(false, true)), bool(bool(bool(bvec2(false, true))))), bool(bvec3(_GLF_IDENTITY(bool(bvec2(false, true)), bool(bool(bool(bvec2(false, true))))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) && true)) && true))))))), true, true, true))))), false, true)), ! (! (bool(bvec3(_GLF_IDENTITY(bool(bvec4(false, true, _GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), _GLF_IDENTITY(! (! (! (true))), ! _GLF_IDENTITY((! (! (! (! (true))))), true && ((! (! (! (! (true))))))))))), true)), ! (! (bool(bvec4(_GLF_IDENTITY(false, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(fract(injectionSwitch)) : injectionSwitch)).x < injectionSwitch.y, ! (! (injectionSwitch.x < injectionSwitch.y)))) || false))) && (_GLF_IDENTITY(false, ! (! (false))))), true, true, true))))), false, true)))))), ! (! (false || (_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bool(bvec4(false, _GLF_IDENTITY(true, (true) && true), _GLF_IDENTITY(true, ! (_GLF_IDENTITY(! _GLF_IDENTITY((true), false || (_GLF_IDENTITY((true), bool(bool(_GLF_IDENTITY(_GLF_IDENTITY((true), true && ((true))), bool(bvec4(_GLF_IDENTITY((true), true && ((true))), false, false, true)))))))), ! (! (! (true)))))), true)), ! (! (bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))) && true) && (_GLF_IDENTITY(false, ! (! (false))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(false, ! (! (false)))))), bool(bvec3(! (_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), true && (_GLF_IDENTITY(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) || false)) && true), ! (! (false)))))))), true, true))))), true, true, true))))), false, true), bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bool(bvec4(false, _GLF_IDENTITY(true, (true) && true), _GLF_IDENTITY(true, ! (_GLF_IDENTITY(! _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(true, bool(bool(_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec3(true, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), bool(bool(bool(bvec3(true, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))))))), ! (! ((_GLF_IDENTITY(true, bool(bool(_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec3(true, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), bool(bool(bool(bvec3(true, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))))))))), false || (_GLF_IDENTITY((true), bool(bool(_GLF_IDENTITY((true), true && ((true)))))))), ! (! (! (true)))))), true)), ! (! (bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), _GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * 1.0))))) < injectionSwitch.y)) && (_GLF_IDENTITY(false, ! (! (false))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(false, ! (! (false)))))), bool(bvec3(! (_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(false, ! (! (false)))))), true, true))))), true, true, true))))), false, true), bvec3(bvec3(bvec3(_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(false, (false) || false), _GLF_IDENTITY(true, (true) && true), _GLF_IDENTITY(true, ! (_GLF_IDENTITY(! _GLF_IDENTITY((true), false || (_GLF_IDENTITY((true), bool(bool(_GLF_IDENTITY((true), true && ((true)))))))), ! (! (! (true)))))), true)), ! (! (bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(false, ! (! (false))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(false, ! (! (false)))))), bool(bvec3(! (_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true && (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))) && (_GLF_IDENTITY(false, ! (! (false)))))), true, true))))), true, true, true))))), false, true)))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), ! (! (bool(bvec3(_GLF_IDENTITY(bool(bvec4(false, true, _GLF_IDENTITY(true, ! _GLF_IDENTITY((_GLF_IDENTITY(! (true), ! (! (! _GLF_IDENTITY((true), false || ((true))))))), ! (! (_GLF_IDENTITY((_GLF_IDENTITY(! (true), ! (! (! (true))))), false || ((_GLF_IDENTITY(! (true), ! (! (! (true))))))))))), true)), ! (! (bool(bvec4(_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(false, ! (! (false))))), true, true, true))))), false, true))))))))))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false)))))) && true))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(false, bool(bvec3(false, false, false)))))))
      barrier();
     barrier();
    }
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, true, false, true)))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).x > injectionSwitch.y, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).x > injectionSwitch.y, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(1.0, 1.0) * (injectionSwitch), (vec2(1.0, 1.0) * (injectionSwitch)) * mat2(1.0))).x > injectionSwitch.y)), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).x > injectionSwitch.y, _GLF_TRUE(_GLF_IDENTITY(true, (true) || false), (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(1.0, 1.0) * (injectionSwitch), (vec2(1.0, 1.0) * (injectionSwitch)) * mat2(1.0))).x > injectionSwitch.y))) && true)) || false)))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), ! (! (_GLF_IDENTITY(false, ! (! (false))))))))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
         barrier();
        }
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec2(bvec2(false, true)))))), bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(false), (bool(false)) && true), (bool(false)) && _GLF_IDENTITY(_GLF_IDENTITY(true, ! (! (true))), bool(bvec4(true, true, false, false))))))))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 uint subgroup_base = subgroup_id * subgroup_size;
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, true && (false)), (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(-9.6)), bool(false)))) - 0.0), injectionSwitch.y))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) || false))))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 uint virtual_gid = _GLF_IDENTITY(workgroup_base + subgroup_base, (workgroup_base + subgroup_base) ^ (0u >> _GLF_IDENTITY(uint(0u), uint(0u)))) + subgroup_local_id;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true)) || false))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(true && (false), bool(bvec4(true && (false), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, _GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), ! _GLF_IDENTITY((! (! (_GLF_IDENTITY(true, true && (true))))), ! (! (_GLF_IDENTITY((! _GLF_IDENTITY((! (true)), ! (! ((! (true)))))), true && ((! (! (true))))))))))) && _GLF_IDENTITY((false), ! (! ((false)))))), _GLF_IDENTITY(true && (_GLF_IDENTITY(! (_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, ! (! (false)))))), bool(bvec4(_GLF_IDENTITY(! (_GLF_IDENTITY(false, true && (false))), true && (! (_GLF_IDENTITY(false, true && (false))))), false, _GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec3(bvec2(false, true), true))))))), false)))), false || (true && (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(false, true && (false))), ! (! (! (_GLF_IDENTITY(false, true && (false)))))), ! (! (! (_GLF_IDENTITY(false, true && (false)))))))))))))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || _GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! _GLF_IDENTITY((false), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY((false), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY((false), bool(bvec2((false), true))), true)), bool(bool(bool(bvec2(_GLF_IDENTITY((false), bool(bvec2((false), true))), true)))))))), true && (bool(bool(_GLF_IDENTITY((false), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY((false), bool(bvec2((false), true))), true)), bool(bool(bool(bvec2(_GLF_IDENTITY((false), bool(bvec2((false), true))), true)))))))))))))))))))))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 atomicStore(write_val, uint(virtual_gid), 4, 64, 0);
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 uint read_val = _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(atomicLoad(_GLF_IDENTITY(write_val, max(write_val, _GLF_IDENTITY(write_val, max(write_val, _GLF_IDENTITY(write_val, ~ (_GLF_IDENTITY(~ (write_val), (~ (write_val)) >> uint(_GLF_ZERO(0.0, injectionSwitch.x))))))))), 4, 64, 0), ~ (~ (atomicLoad(_GLF_IDENTITY(write_val, max(write_val, write_val)), 4, 64, 0)))), uint(uvec3(_GLF_IDENTITY(atomicLoad(_GLF_IDENTITY(write_val, max(write_val, _GLF_IDENTITY(write_val, max(write_val, _GLF_IDENTITY(write_val, ~ (_GLF_IDENTITY(~ (write_val), (~ (write_val)) >> uint(_GLF_ZERO(0.0, injectionSwitch.x))))))))), 4, 64, 0), ~ (~ (atomicLoad(_GLF_IDENTITY(write_val, max(write_val, write_val)), 4, 64, 0)))), 1u, 0u))), max(_GLF_IDENTITY(_GLF_IDENTITY(atomicLoad(_GLF_IDENTITY(write_val, max(write_val, _GLF_IDENTITY(write_val, max(write_val, _GLF_IDENTITY(write_val, ~ (_GLF_IDENTITY(~ (write_val), (~ (write_val)) >> uint(_GLF_ZERO(0.0, injectionSwitch.x))))))))), 4, 64, 0), ~ (~ (atomicLoad(_GLF_IDENTITY(write_val, max(write_val, write_val)), 4, 64, 0)))), uint(uvec3(_GLF_IDENTITY(atomicLoad(_GLF_IDENTITY(write_val, max(write_val, _GLF_IDENTITY(write_val, max(write_val, _GLF_IDENTITY(write_val, ~ (_GLF_IDENTITY(~ (write_val), (~ (write_val)) >> uint(_GLF_ZERO(0.0, injectionSwitch.x))))))))), 4, 64, 0), ~ (~ (atomicLoad(_GLF_IDENTITY(write_val, max(write_val, write_val)), 4, 64, 0)))), 1u, 0u))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(atomicLoad(_GLF_IDENTITY(write_val, max(write_val, _GLF_IDENTITY(write_val, max(write_val, _GLF_IDENTITY(write_val, ~ (_GLF_IDENTITY(~ (write_val), (~ (write_val)) >> uint(_GLF_ZERO(0.0, injectionSwitch.x))))))))), 4, 64, 0), ~ (~ (atomicLoad(_GLF_IDENTITY(write_val, max(write_val, write_val)), 4, 64, 0)))), uint(uvec3(_GLF_IDENTITY(atomicLoad(_GLF_IDENTITY(write_val, max(write_val, _GLF_IDENTITY(write_val, max(write_val, _GLF_IDENTITY(write_val, ~ (_GLF_IDENTITY(~ (write_val), (~ (write_val)) >> uint(_GLF_ZERO(0.0, injectionSwitch.x))))))))), 4, 64, 0), ~ (~ (atomicLoad(_GLF_IDENTITY(write_val, max(write_val, write_val)), 4, 64, 0)))), 1u, 0u))), (_GLF_IDENTITY(_GLF_IDENTITY(atomicLoad(_GLF_IDENTITY(write_val, max(write_val, _GLF_IDENTITY(write_val, max(write_val, _GLF_IDENTITY(write_val, ~ (_GLF_IDENTITY(~ (write_val), (~ (write_val)) >> uint(_GLF_ZERO(0.0, injectionSwitch.x))))))))), 4, 64, 0), ~ (~ (atomicLoad(_GLF_IDENTITY(write_val, max(write_val, write_val)), 4, 64, 0)))), uint(uvec3(_GLF_IDENTITY(atomicLoad(_GLF_IDENTITY(write_val, max(write_val, _GLF_IDENTITY(write_val, max(write_val, _GLF_IDENTITY(write_val, ~ (_GLF_IDENTITY(~ (write_val), (~ (write_val)) >> uint(_GLF_ZERO(0.0, injectionSwitch.x))))))))), 4, 64, 0), ~ (~ (atomicLoad(_GLF_IDENTITY(write_val, max(write_val, write_val)), 4, 64, 0)))), 1u, 0u)))) ^ 0u)));
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x < injectionSwitch.y)) && (false), (_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x < injectionSwitch.y)) && (false)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), (_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x < injectionSwitch.y)) && (false), (_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x < injectionSwitch.y)) && (false)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) && true))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) || false), (injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_FALSE(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) || false), (injectionSwitch.x > injectionSwitch.y))), false || (! (_GLF_FALSE(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) || false), (injectionSwitch.x > injectionSwitch.y)))))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, true && (false)), (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch), _GLF_IDENTITY((_GLF_IDENTITY((injectionSwitch), _GLF_IDENTITY(vec2(mat2((injectionSwitch), 1.0, 1.0)), (vec2(mat2((injectionSwitch), 1.0, 1.0))) / vec2(1.0, 1.0)))), (_GLF_IDENTITY((_GLF_IDENTITY((injectionSwitch), _GLF_IDENTITY(vec2(mat2((injectionSwitch), 1.0, 1.0)), (vec2(mat2((injectionSwitch), 1.0, 1.0))) / vec2(1.0, 1.0)))), ((_GLF_IDENTITY((injectionSwitch), _GLF_IDENTITY(vec2(mat2((injectionSwitch), 1.0, 1.0)), (vec2(mat2((injectionSwitch), 1.0, 1.0))) / vec2(1.0, 1.0))))) / vec2(1.0, 1.0))) / vec2(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED((+ 382.884))), bool(false))), 1.0)) / vec2(1.0, 1.0)), _GLF_IDENTITY(clamp((injectionSwitch), (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0))), _GLF_IDENTITY((injectionSwitch), (true ? (injectionSwitch) : _GLF_FUZZED(injectionSwitch)))), clamp(clamp((_GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)) : _GLF_FUZZED(vec2(-4.2, 3.1))))), (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0))), _GLF_IDENTITY((injectionSwitch), (true ? (injectionSwitch) : _GLF_FUZZED(injectionSwitch)))), _GLF_IDENTITY(clamp((injectionSwitch), (injectionSwitch), _GLF_IDENTITY((injectionSwitch), (true ? (injectionSwitch) : _GLF_FUZZED(injectionSwitch)))), clamp(clamp((injectionSwitch), (injectionSwitch), _GLF_IDENTITY((injectionSwitch), (true ? (injectionSwitch) : _GLF_FUZZED(injectionSwitch)))), _GLF_IDENTITY(clamp((injectionSwitch), (injectionSwitch), _GLF_IDENTITY((injectionSwitch), (true ? (injectionSwitch) : _GLF_FUZZED(injectionSwitch)))), min(clamp((injectionSwitch), _GLF_IDENTITY((injectionSwitch), mix(vec2(_GLF_FUZZED(-9.5), ((injectionSwitch))[1]), vec2(_GLF_IDENTITY(((injectionSwitch))[0], (false ? _GLF_FUZZED(length(vec4(42.50, -2.1, 6.3, _GLF_IDENTITY(-36.52, min(_GLF_IDENTITY(-36.52, (_GLF_IDENTITY(-36.52, clamp(-36.52, -36.52, -36.52))) - 0.0), _GLF_IDENTITY(-36.52, min(-36.52, -36.52))))))) : ((injectionSwitch))[0])), _GLF_FUZZED(4.5)), bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_IDENTITY(false, (false) || false)))), _GLF_IDENTITY((injectionSwitch), (true ? (injectionSwitch) : _GLF_FUZZED(injectionSwitch)))), clamp((injectionSwitch), (injectionSwitch), _GLF_IDENTITY((injectionSwitch), (true ? (injectionSwitch) : _GLF_FUZZED(injectionSwitch)))))), clamp((injectionSwitch), (injectionSwitch), _GLF_IDENTITY((injectionSwitch), (true ? (injectionSwitch) : _GLF_FUZZED(injectionSwitch)))))), clamp((injectionSwitch), (injectionSwitch), _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch), (true ? (injectionSwitch) : _GLF_FUZZED(injectionSwitch))), clamp(_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch), (true ? (injectionSwitch) : _GLF_FUZZED(injectionSwitch))), clamp(_GLF_IDENTITY((injectionSwitch), (true ? (injectionSwitch) : _GLF_FUZZED(injectionSwitch))), _GLF_IDENTITY((injectionSwitch), (true ? (injectionSwitch) : _GLF_FUZZED(injectionSwitch))), _GLF_IDENTITY((injectionSwitch), (true ? (injectionSwitch) : _GLF_FUZZED(injectionSwitch))))), _GLF_IDENTITY((injectionSwitch), (true ? (injectionSwitch) : _GLF_FUZZED(injectionSwitch))), _GLF_IDENTITY((injectionSwitch), (true ? (injectionSwitch) : _GLF_FUZZED(injectionSwitch))))))))), (_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch), (_GLF_IDENTITY((injectionSwitch), _GLF_IDENTITY(vec2(mat2(_GLF_IDENTITY((injectionSwitch), ((injectionSwitch)) - tan(vec2(0.0, 0.0))), 1.0, 1.0)), (vec2(mat2((injectionSwitch), 1.0, 1.0))) / vec2(1.0, 1.0)))) / vec2(1.0, 1.0)), _GLF_IDENTITY(clamp((injectionSwitch), (injectionSwitch), _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(45.28, -69.67)) : injectionSwitch))[1]))) / vec2(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y))), injectionSwitch, _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch))))), (true ? (injectionSwitch) : _GLF_FUZZED(injectionSwitch)))), clamp(clamp((injectionSwitch), (injectionSwitch), _GLF_IDENTITY((injectionSwitch), (true ? (injectionSwitch) : _GLF_FUZZED(injectionSwitch)))), _GLF_IDENTITY(clamp(_GLF_IDENTITY((injectionSwitch), vec2(0.0, 0.0) + ((injectionSwitch))), (injectionSwitch), _GLF_IDENTITY((injectionSwitch), (true ? (injectionSwitch) : _GLF_FUZZED(injectionSwitch)))), clamp(clamp((injectionSwitch), (_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)), injectionSwitch))), _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), (_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(96.18)), float(injectionSwitch.y), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))) ? (injectionSwitch) * mat2(1.0) : _GLF_FUZZED(vec2(2704.8276, -44.34)))))), (true ? (injectionSwitch) : _GLF_FUZZED(injectionSwitch)))), _GLF_IDENTITY(clamp((injectionSwitch), (injectionSwitch), _GLF_IDENTITY((injectionSwitch), (true ? (injectionSwitch) : _GLF_FUZZED(injectionSwitch)))), min(clamp((injectionSwitch), (_GLF_IDENTITY(injectionSwitch, vec2(vec4(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)), 0.0, 0.0)))), _GLF_IDENTITY((injectionSwitch), (true ? _GLF_IDENTITY((injectionSwitch), mat2(1.0) * ((injectionSwitch))) : _GLF_FUZZED(injectionSwitch)))), clamp((injectionSwitch), (injectionSwitch), _GLF_IDENTITY((injectionSwitch), (true ? (injectionSwitch) : _GLF_FUZZED(injectionSwitch)))))), clamp(_GLF_IDENTITY((injectionSwitch), clamp((injectionSwitch), (injectionSwitch), (injectionSwitch))), (injectionSwitch), _GLF_IDENTITY((injectionSwitch), (true ? (injectionSwitch) : _GLF_FUZZED(injectionSwitch)))))), clamp((injectionSwitch), (injectionSwitch), _GLF_IDENTITY((injectionSwitch), (true ? (injectionSwitch) : _GLF_FUZZED(injectionSwitch)))))))) * mat2(1.0)) * mat2(1.0)).x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(0.6), _GLF_FUZZED(-3.4)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))).y, bool(bvec3(injectionSwitch.x > injectionSwitch.y, false, true)))))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, float(_GLF_IDENTITY(mat2x4(injectionSwitch.x, 0.0, abs(1.0), exp(0.0), 1.0, determinant(mat3(0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0)), sqrt(1.0), 0.0), (true ? mat2x4(injectionSwitch.x, 0.0, abs(1.0), exp(0.0), 1.0, determinant(mat3(0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0)), sqrt(1.0), 0.0) : _GLF_FUZZED(mat2x4(-7.1, 9.1, -1.8, -1354.9700, -167.786, -9.1, 8592.2946, -4.5)))))) > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, ! (! (false)))))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)).y, clamp(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)).y, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)).y, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)).y))) || _GLF_IDENTITY(false, (false) || false))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 buf[virtual_gid] = uint(subgroupAllEqual(read_val));
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
}
