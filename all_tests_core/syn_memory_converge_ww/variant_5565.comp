#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


struct _GLF_struct_16 {
 uint _f0;
 mat4 _f1;
 uvec4 _f2;
 ivec2 _f3;
 bvec2 _f4;
 int _f5;
} ;

struct _GLF_struct_15 {
 mat4 _f0;
 mat3x2 _f1;
} ;

struct _GLF_struct_17 {
 mat2 _f0;
 _GLF_struct_15 _f1;
 _GLF_struct_16 _f2;
} ;

struct _GLF_struct_18 {
 ivec2 _f0;
 ivec3 _f1;
 _GLF_struct_17 _f2;
 uint workgroup_size;
} ;

struct _GLF_struct_12 {
 int _f0;
 ivec2 _f1;
 int _f2;
} ;

struct _GLF_struct_11 {
 bvec2 _f0;
 mat3x4 _f1;
 float _f2;
 uint _f3;
 int _f4;
 uint _f5;
 vec3 _f6;
} ;

struct _GLF_struct_13 {
 _GLF_struct_11 _f0;
 _GLF_struct_12 _f1;
 float _f2;
} ;

struct _GLF_struct_9 {
 vec4 _f0;
} ;

struct _GLF_struct_10 {
 _GLF_struct_9 _f0;
 mat4x2 _f1;
 int _f2;
} ;

struct _GLF_struct_7 {
 ivec4 _f0;
} ;

struct _GLF_struct_6 {
 ivec3 _f0;
 ivec4 _f1;
} ;

struct _GLF_struct_8 {
 bvec3 _f0;
 bool _f1;
 mat4 _f2;
 mat3x2 _f3;
 _GLF_struct_6 _f4;
 _GLF_struct_7 _f5;
} ;

struct _GLF_struct_14 {
 ivec2 _f0;
 _GLF_struct_8 _f1;
 _GLF_struct_10 _f2;
 _GLF_struct_13 _f3;
 bvec3 _f4;
 vec4 _f5;
 vec3 _f6;
 uint subgroup_local_id;
} ;

struct _GLF_struct_5 {
 vec4 _f0;
 uint subgroup_size;
} ;

struct _GLF_struct_2 {
 uvec3 _f0;
 uint _f1;
} ;

struct _GLF_struct_1 {
 uvec2 _f0;
 vec3 _f1;
 mat2x4 _f2;
} ;

struct _GLF_struct_0 {
 mat3x2 _f0;
 mat2 _f1;
 bvec4 _f2;
 uint _f3;
} ;

struct _GLF_struct_3 {
 mat3x4 _f0;
 _GLF_struct_0 _f1;
 _GLF_struct_1 _f2;
 _GLF_struct_2 _f3;
 bool _f4;
 uvec4 _f5;
} ;

struct _GLF_struct_4 {
 uvec4 _f0;
 uint read_val;
 _GLF_struct_3 _f1;
 mat2x3 _f2;
} ;

layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
#extension GL_EXT_maximal_reconvergence : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer WriteVal {
 uint write_val;
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 uint subgroup_id = gl_SubgroupID;
 _GLF_struct_5 _GLF_struct_replacement_5 = _GLF_struct_5(vec4(1.0), gl_SubgroupSize);
 _GLF_struct_14 _GLF_struct_replacement_14 = _GLF_struct_14(ivec2(1), _GLF_struct_8(bvec3(true), true, mat4(1.0), mat3x2(1.0), _GLF_struct_6(ivec3(1), ivec4(1)), _GLF_struct_7(ivec4(1))), _GLF_struct_10(_GLF_struct_9(vec4(1.0)), mat4x2(1.0), 1), _GLF_struct_13(_GLF_struct_11(bvec2(true), mat3x4(1.0), 1.0, 1u, 1, 1u, vec3(1.0)), _GLF_struct_12(1, ivec2(1), 1), 1.0), bvec3(true), vec4(1.0), vec3(1.0), gl_SubgroupInvocationID);
 uint num_workgroup = gl_NumWorkGroups.x;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 _GLF_struct_18 _GLF_struct_replacement_18 = _GLF_struct_18(ivec2(1), ivec3(1), _GLF_struct_17(mat2(1.0), _GLF_struct_15(mat4(1.0), mat3x2(1.0)), _GLF_struct_16(1u, mat4(1.0), uvec4(1u), ivec2(1), bvec2(true), 1)), gl_WorkGroupSize.x);
 uint workgroup_id = gl_WorkGroupID.x;
 uint workgroup_base = _GLF_struct_replacement_18.workgroup_size * workgroup_id;
 uint subgroup_base = subgroup_id * _GLF_struct_replacement_5.subgroup_size;
 uint virtual_gid = workgroup_base + subgroup_base + _GLF_struct_replacement_14.subgroup_local_id;
 atomicStore(write_val, uint(virtual_gid), 4, 64, 0);
 _GLF_struct_4 _GLF_struct_replacement_4 = _GLF_struct_4(uvec4(1u), atomicLoad(write_val, 4, 64, 0), _GLF_struct_3(mat3x4(1.0), _GLF_struct_0(mat3x2(1.0), mat2(1.0), bvec4(true), 1u), _GLF_struct_1(uvec2(1u), vec3(1.0), mat2x4(1.0)), _GLF_struct_2(uvec3(1u), 1u), true, uvec4(1u)), mat2x3(1.0));
 buf[virtual_gid] = uint(subgroupAllEqual(_GLF_struct_replacement_4.read_val));
}
