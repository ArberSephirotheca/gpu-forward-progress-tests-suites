#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer WriteVal {
 uint write_val;
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 uvec2 GLF_merged2_0_1_14_1_1_12workgroup_baseworkgroup_id;
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(_GLF_IDENTITY(vec4(injectionSwitch.y, 0.0, _GLF_IDENTITY(tan(_GLF_IDENTITY(0.0, float(mat2x3(0.0, 0.0, abs(0.0), 1.0, tan(0.0), 1.0)))), clamp(tan(_GLF_IDENTITY(0.0, float(mat2x3(0.0, 0.0, abs(0.0), 1.0, tan(_GLF_IDENTITY(0.0, (0.0) / 1.0)), 1.0)))), tan(_GLF_IDENTITY(0.0, float(mat2x3(0.0, 0.0, abs(0.0), _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(2.5)), bool(false))), tan(0.0), 1.0)))), tan(_GLF_IDENTITY(0.0, float(mat2x3(0.0, 0.0, abs(0.0), 1.0, tan(0.0), 1.0)))))), 0.0), vec4(mat4x3(vec4(injectionSwitch.y, 0.0, tan(0.0), 0.0), _GLF_IDENTITY(1.0, (1.0) * 1.0), 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0)))))), _GLF_IDENTITY((_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x, _GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), (_GLF_IDENTITY(injectionSwitch.x, float(mat4(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), _GLF_IDENTITY(0.0, clamp(0.0, _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(-9009.3524) : 0.0)), 0.0)), 0.0, 0.0, sqrt(0.0), 1.0, 1.0, 1.0, 1.0, 1.0, round(length(normalize(vec4(1.0, 1.0, 1.0, _GLF_IDENTITY(1.0, min(1.0, 1.0)))))), 1.0, 0.0, 1.0, 0.0, 1.0)))) / 1.0), clamp(_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, float(mat4(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0), min(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(_GLF_IDENTITY(mat3x4(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(_GLF_IDENTITY(vec3(-4.0, -1.9, -803.117), clamp(vec3(-4.0, -1.9, -803.117), vec3(-4.0, -1.9, -803.117), vec3(-4.0, -1.9, -803.117)))[0]) : _GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)))))), 1.0, abs(1.0), _GLF_ONE(1.0, injectionSwitch.y), 1.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0, tan(0.0), 0.0, 1.0, abs(1.0)), (true ? mat3x4(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), 1.0, abs(1.0), _GLF_ONE(1.0, injectionSwitch.y), 1.0, _GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), min(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y))), 1.0, 0.0, tan(0.0), 0.0, 1.0, abs(_GLF_IDENTITY(1.0, float(mat3x2(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(1717.9303) : 1.0)), 0.0, 0.0, 0.0, 1.0, log(1.0)))))) : _GLF_FUZZED(mat3x4(-92.29, 203.777, 4.3, -204.926, 7.5, 5054.7991, -831.883, _GLF_IDENTITY(-9.6, mix(float(-9.6), float(_GLF_FUZZED(float(38671))), bool(false))), 54.79, 371.021, 20.04, 530.151))))), mix(float(_GLF_FUZZED(-60.07)), float(float(_GLF_IDENTITY(mat3x4(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), _GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(40.14) : _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0))))))), 1.0, abs(1.0), _GLF_ONE(1.0, injectionSwitch.y), 1.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0, tan(0.0), 0.0, 1.0, abs(1.0)), (true ? mat3x4(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), 1.0, abs(1.0), _GLF_ONE(1.0, injectionSwitch.y), 1.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0, tan(0.0), 0.0, 1.0, abs(1.0)) : _GLF_FUZZED(mat3x4(-92.29, 203.777, 4.3, -204.926, 7.5, 5054.7991, -831.883, -9.6, 54.79, 371.021, 20.04, 530.151)))))), bool(true)))), injectionSwitch.x)), 0.0, 0.0, 0.0, sqrt(_GLF_IDENTITY(0.0, float(_GLF_IDENTITY(mat4x2(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 0.0, round(length(normalize(vec4(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y))))), _GLF_IDENTITY(dot(vec3(_GLF_IDENTITY(dot(vec3(_GLF_IDENTITY(0.0, float(vec2(0.0, 1.0))), 0.0, 0.0), vec3(1.0, 1.0, 1.0)), dot(_GLF_IDENTITY(vec3(0.0, 0.0, 0.0), (true ? _GLF_IDENTITY(vec3(0.0, 0.0, 0.0), _GLF_IDENTITY(vec3(mat2(_GLF_IDENTITY(vec3(0.0, 0.0, 0.0), vec3(mat4(vec3(0.0, 0.0, 0.0), 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0))), 1.0)), max(vec3(mat2(_GLF_IDENTITY(vec3(0.0, 0.0, 0.0), vec3(mat4(vec3(0.0, 0.0, 0.0), 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0))), 1.0)), vec3(mat2(_GLF_IDENTITY(vec3(0.0, 0.0, 0.0), vec3(mat4(vec3(0.0, 0.0, 0.0), 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0))), 1.0))))) : _GLF_FUZZED(mix(vec3(41.68, 7913.7666, -5.3), cross(vec3(-17.33, -18.47, -3.4), vec3(-2097.8115, -9.1, -1116.9894)), vec3(3.4, 6061.7106, -3.0))))), vec3(1.0, 1.0, 1.0))), 1.0, 0.0), vec3(0.0, _GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0)), dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0))), 0.0)), dot(vec3(_GLF_IDENTITY(dot(vec3(0.0, 0.0, 0.0), vec3(1.0, 1.0, 1.0)), dot(vec3(0.0, 0.0, _GLF_IDENTITY(0.0, _GLF_IDENTITY(float(mat4x2(0.0, 0.0, 1.0, 0.0, 0.0, 0.0, round(length(normalize(cos(0.0)))), 0.0)), max(float(mat4x2(0.0, 0.0, 1.0, 0.0, 0.0, 0.0, round(length(normalize(cos(0.0)))), 0.0)), float(mat4x2(0.0, 0.0, 1.0, 0.0, 0.0, 0.0, round(length(normalize(cos(0.0)))), 0.0)))))), vec3(1.0, 1.0, 1.0))), 1.0, 0.0), vec3(0.0, _GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(_GLF_IDENTITY(0.0, (_GLF_IDENTITY(false ? _GLF_FUZZED(913.001) : 0.0, 0.0 + (false ? _GLF_FUZZED(913.001) : 0.0)))), 1.0, 0.0)), dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0))), 0.0))), 0.0, 0.0, 1.0, 0.0), mat4x2(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0) + (mat4x2(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 0.0, round(length(normalize(vec4(_GLF_ONE(_GLF_IDENTITY(1.0, min(1.0, 1.0)), _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0)), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y))))), _GLF_IDENTITY(dot(vec3(_GLF_IDENTITY(dot(vec3(0.0, 0.0, 0.0), vec3(1.0, 1.0, 1.0)), dot(vec3(0.0, 0.0, 0.0), vec3(_GLF_IDENTITY(1.0, (1.0) + 0.0), 1.0, 1.0))), 1.0, 0.0), vec3(0.0, _GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0)), dot(_GLF_IDENTITY(_GLF_IDENTITY(vec3(0.0, 1.0, 0.0), mix(vec3((vec3(0.0, 1.0, 0.0))[0], (vec3(0.0, 1.0, 0.0))[1], _GLF_FUZZED(1991.0200)), vec3(_GLF_FUZZED(-693.981), _GLF_FUZZED(-6.0), (_GLF_IDENTITY(vec3(0.0, 1.0, 0.0), mix(vec3((vec3(0.0, 1.0, 0.0))[0], _GLF_FUZZED(-1.0), _GLF_FUZZED(-424.912)), vec3(_GLF_FUZZED(-28.62), (vec3(0.0, 1.0, 0.0))[1], (vec3(0.0, 1.0, 0.0))[2]), bvec3(false, true, true))))[2]), bvec3(false, false, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (_GLF_IDENTITY(! (injectionSwitch.x < injectionSwitch.y), _GLF_IDENTITY(bool(bvec4(! (injectionSwitch.x < injectionSwitch.y), false, false, true)), _GLF_IDENTITY((bool(bvec4(! (injectionSwitch.x < injectionSwitch.y), false, false, true))) && true, ((bool(bvec4(! (injectionSwitch.x < injectionSwitch.y), false, false, true))) && true) || false)))))))))), clamp(_GLF_IDENTITY(vec3(0.0, 1.0, 0.0), mix(vec3((vec3(0.0, 1.0, 0.0))[0], (vec3(0.0, 1.0, 0.0))[1], _GLF_FUZZED(1991.0200)), vec3(_GLF_FUZZED(-693.981), _GLF_FUZZED(-6.0), (_GLF_IDENTITY(vec3(0.0, 1.0, 0.0), mix(vec3((vec3(0.0, 1.0, 0.0))[0], _GLF_FUZZED(-1.0), _GLF_FUZZED(-424.912)), vec3(_GLF_FUZZED(-28.62), (vec3(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, _GLF_IDENTITY(0.0, (0.0) - 0.0))), 1.0, 0.0))[1], (vec3(0.0, 1.0, 0.0))[2]), bvec3(false, true, true))))[2]), bvec3(false, false, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (_GLF_IDENTITY(! (injectionSwitch.x < injectionSwitch.y), _GLF_IDENTITY(bool(bvec4(! (injectionSwitch.x < injectionSwitch.y), false, false, true)), (bool(bvec4(! (injectionSwitch.x < injectionSwitch.y), false, false, true))) && true))))))))), _GLF_IDENTITY(vec3(0.0, 1.0, 0.0), mix(vec3((_GLF_IDENTITY(vec3(0.0, 1.0, 0.0), clamp(vec3(0.0, 1.0, 0.0), _GLF_IDENTITY(vec3(0.0, 1.0, 0.0), vec3(0.0, 0.0, 0.0) + (vec3(0.0, 1.0, 0.0))), vec3(0.0, 1.0, 0.0))))[_GLF_IDENTITY(0, min(0, 0))], (vec3(0.0, 1.0, 0.0))[1], _GLF_FUZZED(1991.0200)), vec3(_GLF_FUZZED(-693.981), _GLF_FUZZED(-6.0), (_GLF_IDENTITY(vec3(0.0, 1.0, 0.0), mix(vec3((vec3(0.0, 1.0, 0.0))[0], _GLF_FUZZED(-1.0), _GLF_FUZZED(-424.912)), vec3(_GLF_FUZZED(-28.62), (vec3(0.0, 1.0, 0.0))[1], (vec3(0.0, 1.0, 0.0))[2]), bvec3(false, true, true))))[2]), bvec3(false, false, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (_GLF_IDENTITY(! (injectionSwitch.x < injectionSwitch.y), _GLF_IDENTITY(bool(bvec4(! _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || ((injectionSwitch.x < injectionSwitch.y))), false, false, true)), (bool(bvec4(! (injectionSwitch.x < injectionSwitch.y), false, false, true))) && true))))))))), _GLF_IDENTITY(vec3(0.0, 1.0, 0.0), mix(vec3((vec3(0.0, 1.0, 0.0))[0], (vec3(0.0, 1.0, 0.0))[1], _GLF_FUZZED(1991.0200)), vec3(_GLF_FUZZED(-693.981), _GLF_FUZZED(-6.0), (_GLF_IDENTITY(vec3(0.0, 1.0, 0.0), mix(vec3((vec3(0.0, 1.0, 0.0))[0], _GLF_FUZZED(-1.0), _GLF_FUZZED(-424.912)), vec3(_GLF_FUZZED(-28.62), (vec3(0.0, 1.0, 0.0))[1], (vec3(0.0, 1.0, 0.0))[2]), bvec3(false, true, true))))[2]), bvec3(false, false, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (_GLF_IDENTITY(! (injectionSwitch.x < injectionSwitch.y), _GLF_IDENTITY(bool(bvec4(! (injectionSwitch.x < injectionSwitch.y), false, false, true)), (bool(bvec4(! (injectionSwitch.x < injectionSwitch.y), false, false, true))) && true))))))))))), vec3(0.0, 1.0, 0.0))), 0.0)), dot(vec3(_GLF_IDENTITY(dot(vec3(0.0, 0.0, 0.0), vec3(1.0, 1.0, 1.0)), dot(vec3(0.0, 0.0, 0.0), vec3(1.0, 1.0, 1.0))), 1.0, 0.0), vec3(0.0, _GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), _GLF_IDENTITY(vec3(_GLF_IDENTITY(0.0, (0.0) / 1.0), 1.0, 0.0), mat3(1.0) * (vec3(_GLF_IDENTITY(0.0, (0.0) / 1.0), 1.0, 0.0)))), dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0))), 0.0))), 0.0, 0.0, 1.0, 0.0)))))), 1.0, 1.0, 1.0, _GLF_IDENTITY(1.0, (1.0) / 1.0), 1.0, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), 1.0, 0.0, 1.0, 0.0, 1.0)))) / 1.0), _GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, float(mat4(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(86.88)))))), float(_GLF_FUZZED(3431.3883)), bool(false))), min(injectionSwitch.x, injectionSwitch.x)), 0.0, 0.0, 0.0, sqrt(0.0), 1.0, 1.0, 1.0, 1.0, 1.0, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), 1.0, 0.0, 1.0, 0.0, 1.0)))) / 1.0), _GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, float(mat4(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(max(_GLF_IDENTITY(injectionSwitch.x, float(mat3x2(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / exp(0.0)), determinant(mat4(0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0, 0.0)), 1.0, round(length(normalize(1.0))), 1.0, round(length(normalize(1.0)))))), _GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(-4.7)))))), (max(_GLF_IDENTITY(injectionSwitch.x, float(mat3x2(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / exp(0.0)), determinant(mat4(0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0, 0.0)), 1.0, round(length(normalize(1.0))), 1.0, round(length(normalize(1.0)))))), _GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(-4.7))))))) - 0.0)))), 0.0, 0.0, 0.0, sqrt(0.0), 1.0, 1.0, 1.0, 1.0, 1.0, round(length(normalize(vec4(_GLF_IDENTITY(1.0, (1.0) + 0.0), _GLF_IDENTITY(1.0, (1.0) / _GLF_IDENTITY(dot(vec4(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 0.0, 1.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0)), dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0)))), 1.0, 1.0)))), _GLF_IDENTITY(1.0, (1.0) + 0.0), 0.0, 1.0, 0.0, 1.0)))) / 1.0))), _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch), clamp((injectionSwitch), (injectionSwitch), (injectionSwitch)))[1]), vec2(_GLF_FUZZED(-2473.5642), _GLF_FUZZED(-4897.4871)), bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), injectionSwitch)).x)))) > injectionSwitch.y), bool(bvec4((injectionSwitch.x > injectionSwitch.y), true, false, true)))) && _GLF_IDENTITY(true, (true) && true), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[_GLF_IDENTITY(1, (1) + 0)])).y)) && true, true && (_GLF_IDENTITY(((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0))[_GLF_IDENTITY(1, (1) + 0)])).y)) && _GLF_IDENTITY(true, true && (true)), ! (! (((_GLF_IDENTITY(injectionSwitch, vec2(vec4(injectionSwitch, 1.0, 0.0))).x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(injectionSwitch[0], injectionSwitch[_GLF_IDENTITY(_GLF_IDENTITY(1, (1) * 1), (1) + 0)]), (vec2(injectionSwitch[0], injectionSwitch[_GLF_IDENTITY(_GLF_IDENTITY(1, (1) * 1), (1) + 0)])) / vec2(1.0, 1.0))).y)) && true))))))), false || (bool(_GLF_IDENTITY(bool(((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y, bool(bvec3(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y, true, false))))) && true), ! (! (_GLF_IDENTITY(bool(((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0), clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y)) && true), ! (! (bool(((_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(-1529.0493) : injectionSwitch.x)), injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y)) && true)))))))))))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(1.2)), bool(false)))))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))))))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), _GLF_IDENTITY(bool(bvec3(! (_GLF_DEAD(false)), true, true)), false || (bool(bvec3(! (_GLF_DEAD(false)), true, true))))))), bool(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))), true, false))))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))))))
      barrier();
     barrier();
    }
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, true && _GLF_IDENTITY((false), ! (! ((false))))), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(false, true && _GLF_IDENTITY((false), ! (! _GLF_IDENTITY(((false)), (_GLF_IDENTITY(((false)), bool(bvec2(((false)), true)))) || false)))), false, false)), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(false, true && _GLF_IDENTITY((false), ! (! (_GLF_IDENTITY((false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY((false), false || ((false))))))))), false, false)), bool(bvec2(bool(bvec3(_GLF_IDENTITY(false, true && _GLF_IDENTITY((false), ! (! ((false))))), false, false)), true))), true)), _GLF_IDENTITY((bool(bvec2(_GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(false, true && _GLF_IDENTITY((false), ! (! ((false))))), false, false)), bool(bvec2(bool(bvec3(_GLF_IDENTITY(false, true && _GLF_IDENTITY((false), ! (! ((false))))), false, false)), true))), true))) || false, bool(bvec3((bool(bvec2(_GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false, true && _GLF_IDENTITY((false), ! (! ((false))))), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(false, true && _GLF_IDENTITY((false), ! (! ((false))))), bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(false, true && _GLF_IDENTITY((false), ! (! ((false))))), (_GLF_IDENTITY(false, true && _GLF_IDENTITY((false), ! (! ((false)))))) || false), false)))) && true, ((_GLF_IDENTITY(_GLF_IDENTITY(false, true && _GLF_IDENTITY((false), ! (! ((false))))), bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(false, true && _GLF_IDENTITY((false), ! (! ((false))))), (_GLF_IDENTITY(false, true && _GLF_IDENTITY((false), ! (! ((false)))))) || false), false)))) && true) || false)), false, false)), bool(bvec2(bool(bvec3(_GLF_IDENTITY(false, true && _GLF_IDENTITY(_GLF_IDENTITY((false), false || ((false))), ! (! ((false))))), false, false)), true))), true))) || false, false, false)))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(false, true && _GLF_IDENTITY((false), ! (! ((false))))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, true && _GLF_IDENTITY((false), ! (! _GLF_IDENTITY(((false)), (_GLF_IDENTITY(((false)), bool(bvec2(((false)), true)))) || false)))), false, false), bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, true && _GLF_IDENTITY((false), ! (! _GLF_IDENTITY(((false)), (_GLF_IDENTITY(((false)), bool(bvec2(((false)), true)))) || false)))), false, false), bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, true && _GLF_IDENTITY((false), ! (! _GLF_IDENTITY(((false)), (_GLF_IDENTITY(((false)), bool(bvec2(((false)), true)))) || false)))), false, false), bvec3(bvec3(bvec3(_GLF_IDENTITY(false, true && _GLF_IDENTITY((false), ! (! _GLF_IDENTITY(((false)), (_GLF_IDENTITY(((false)), bool(bvec2(((false)), true)))) || false)))), false, false))))), bvec3(bvec4(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, true && _GLF_IDENTITY((false), ! (! _GLF_IDENTITY(((false)), (_GLF_IDENTITY(((false)), bool(bvec2(((false)), true)))) || false)))), false, false), bvec3(bvec3(bvec3(_GLF_IDENTITY(false, true && _GLF_IDENTITY((false), ! (! _GLF_IDENTITY(((false)), (_GLF_IDENTITY(((false)), bool(bvec2(((false)), true)))) || false)))), false, false))))), true)))))), bvec3(bvec4(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, true && _GLF_IDENTITY((false), ! (! _GLF_IDENTITY(((false)), (_GLF_IDENTITY(((false)), bool(bvec2(((false)), true)))) || false)))), false, false), bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, true && _GLF_IDENTITY((false), ! (! _GLF_IDENTITY(((false)), (_GLF_IDENTITY(((false)), bool(bvec2(((false)), true)))) || false)))), false, false), bvec3(bvec3(bvec3(_GLF_IDENTITY(false, true && _GLF_IDENTITY((false), ! (! _GLF_IDENTITY(((false)), (_GLF_IDENTITY(((false)), bool(bvec2(((false)), true)))) || false)))), false, false))))), bvec3(bvec4(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, true && _GLF_IDENTITY((false), ! (! _GLF_IDENTITY(((false)), (_GLF_IDENTITY(((false)), bool(bvec2(((false)), true)))) || false)))), false, false), bvec3(bvec3(bvec3(_GLF_IDENTITY(false, true && _GLF_IDENTITY((false), ! (! _GLF_IDENTITY(((false)), (_GLF_IDENTITY(((false)), bool(bvec2(((false)), true)))) || false)))), false, false))))), true)))))), false)))))), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false, true && _GLF_IDENTITY((false), ! (! ((false))))), (_GLF_IDENTITY(false, true && _GLF_IDENTITY((false), ! (! ((false)))))) && true), false, false)), bool(bvec2(bool(bvec3(_GLF_IDENTITY(false, _GLF_IDENTITY(true, (true) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && _GLF_IDENTITY((false), ! (! ((false))))), false, false)), true))), true)), (bool(bvec2(_GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(false, true && _GLF_IDENTITY(_GLF_IDENTITY((false), ! (! ((false)))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((false), ! (! ((false))))), ! (! (! (_GLF_IDENTITY((_GLF_IDENTITY(false, ! (! (false)))), ! (! ((false))))))))))), false, false)), bool(_GLF_IDENTITY(bvec2(bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, true && _GLF_IDENTITY((false), ! (! ((false))))), false, false), bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, true && _GLF_IDENTITY((false), ! (! ((false))))), false, false), bvec3(_GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY(false, true && _GLF_IDENTITY((false), ! (! ((false))))), false, false)), bvec3(bvec4(bvec3(bvec3(_GLF_IDENTITY(false, true && _GLF_IDENTITY((false), ! (! ((false))))), false, false)), true)))))), bvec3(bvec4(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, true && _GLF_IDENTITY((false), ! (! ((false))))), false, false), bvec3(_GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY(false, true && _GLF_IDENTITY((false), ! (! ((false))))), false, false)), bvec3(bvec4(bvec3(bvec3(_GLF_IDENTITY(false, true && _GLF_IDENTITY((false), ! (! ((false))))), false, false)), true)))))), false)))))), true), bvec2(bvec2(_GLF_IDENTITY(bvec2(bool(bvec3(_GLF_IDENTITY(false, true && _GLF_IDENTITY((false), ! (! ((false))))), false, false)), true), _GLF_IDENTITY(bvec2(_GLF_IDENTITY(bvec2(bvec2(bool(bvec3(_GLF_IDENTITY(false, true && _GLF_IDENTITY((false), ! (! ((false))))), false, false)), true)), bvec2(bvec3(bvec2(bvec2(bool(bvec3(_GLF_IDENTITY(false, true && _GLF_IDENTITY((_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, true && (false)), false, true, true)))), ! (! ((false))))), false, false)), true)), false)))), bvec2(bvec4(bvec2(_GLF_IDENTITY(bvec2(bvec2(bool(bvec3(_GLF_IDENTITY(false, true && _GLF_IDENTITY((false), ! (! ((false))))), false, false)), true)), bvec2(bvec3(bvec2(bvec2(bool(bvec3(_GLF_IDENTITY(false, true && _GLF_IDENTITY((false), ! (! ((false))))), _GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, true && (false)), false, false), bvec3(bvec4(bvec3(_GLF_IDENTITY(false, true && (false)), false, false), false))))), false)), true)), false)))), false, true))))))))), true))) || false)))), bool(bvec2(! (_GLF_IDENTITY(_GLF_IDENTITY(false, true && _GLF_IDENTITY((false), _GLF_IDENTITY(! (! ((false))), false || (! (! ((false))))))), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(false, true && _GLF_IDENTITY((false), ! (! _GLF_IDENTITY(((false)), (_GLF_IDENTITY(((false)), bool(bvec2(((false)), true)))) || false)))), false, false)), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, true && _GLF_IDENTITY((false), ! (! ((false))))), false, false), _GLF_IDENTITY(bvec3(bvec3(bvec3(_GLF_IDENTITY(false, true && _GLF_IDENTITY((false), ! (! ((false))))), false, false))), bvec3(bvec3(bvec3(bvec3(bvec3(_GLF_IDENTITY(false, true && _GLF_IDENTITY((false), ! (! ((false))))), false, false)))))))), bool(bvec2(_GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(false, true && _GLF_IDENTITY((false), ! (! ((false))))), false, false)), ! (! (bool(bvec3(_GLF_IDENTITY(false, true && _GLF_IDENTITY((false), ! (! ((false))))), false, false))))), true))), true)), (bool(bvec2(_GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(false, true && _GLF_IDENTITY((false), ! (! ((false))))), _GLF_IDENTITY(false, false || (false)), false)), bool(_GLF_IDENTITY(bvec2(bool(bvec3(_GLF_IDENTITY(false, true && _GLF_IDENTITY((false), ! (! ((false))))), false, false)), true), bvec2(_GLF_IDENTITY(bvec2(bvec2(bool(bvec3(_GLF_IDENTITY(false, true && _GLF_IDENTITY((false), ! (! ((false))))), false, false)), true)), bvec2(bvec3(bvec2(bvec2(bool(bvec3(_GLF_IDENTITY(false, true && _GLF_IDENTITY((false), ! (! ((false))))), false, false)), true)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))), true))) || false)))), false)))))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_DEAD(false))))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, (injectionSwitch.x < injectionSwitch.y) && true))))))), bvec2(bvec3(bvec2(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), true)))))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), (bool(bool(false))) && true))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, false, true)))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-41.03), _GLF_FUZZED(84.13)), vec2((injectionSwitch)[_GLF_IDENTITY(0, (_GLF_IDENTITY(0, (0) + 0)) * int(_GLF_ONE(1.0, injectionSwitch.y)))], (injectionSwitch)[1]), bvec2(true, _GLF_IDENTITY(true, bool(bvec3(true, false, true)))))).y)), bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), true && (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-41.03), _GLF_FUZZED(84.13)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, _GLF_IDENTITY(true, bool(bvec3(true, false, true)))))).y)), bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-41.03), _GLF_FUZZED(84.13)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, _GLF_IDENTITY(true, bool(bvec3(true, false, true)))))).y)), bool(bvec4(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + 0.0)), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(bool(bvec2((injectionSwitch.x > injectionSwitch.y), true)), false || (bool(bvec2((injectionSwitch.x > injectionSwitch.y), true))))))), _GLF_IDENTITY(bool(bvec2(bool(bool(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), true)), false || (bool(bvec2((injectionSwitch.x > injectionSwitch.y), true))))))), false)), ! (! (bool(bvec2(bool(bool(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(bool(bvec2((injectionSwitch.x > injectionSwitch.y), true)), false || (bool(bvec2(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))), true))))))), false)))))))), _GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), true && (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY(_GLF_FUZZED(-41.03), (_GLF_FUZZED(-41.03)) - 0.0), _GLF_FUZZED(84.13)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, _GLF_IDENTITY(true, bool(bvec3(true, false, true)))))).y)), bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))) || false))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(false || ((injectionSwitch.x > injectionSwitch.y)), true && (_GLF_IDENTITY(false || ((injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (false || ((injectionSwitch.x > injectionSwitch.y))), true && (! (false || ((injectionSwitch.x > injectionSwitch.y))))))))))), false || (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(_GLF_IDENTITY(false || ((injectionSwitch.x > injectionSwitch.y)), true && (_GLF_IDENTITY(false || ((injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (false || ((injectionSwitch.x > injectionSwitch.y))), true && (! (false || ((injectionSwitch.x > injectionSwitch.y))))))))), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(false || ((injectionSwitch.x > injectionSwitch.y)), true && (_GLF_IDENTITY(false || ((injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (false || ((injectionSwitch.x > injectionSwitch.y))), true && (! (false || ((injectionSwitch.x > injectionSwitch.y)))))))))), _GLF_IDENTITY(bool(bool(bool(_GLF_IDENTITY(false || ((injectionSwitch.x > injectionSwitch.y)), true && (_GLF_IDENTITY(false || ((injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (false || ((injectionSwitch.x > injectionSwitch.y))), true && (! (false || ((injectionSwitch.x > injectionSwitch.y)))))))))))), ! (! (bool(bool(bool(_GLF_IDENTITY(false || ((injectionSwitch.x > injectionSwitch.y)), true && (_GLF_IDENTITY(false || ((injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (false || ((injectionSwitch.x > injectionSwitch.y))), true && (! (false || ((injectionSwitch.x > injectionSwitch.y))))))))))))))))))))))))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
          {
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
         barrier();
        }
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(bvec2(! ((injectionSwitch.x > injectionSwitch.y)), false)), true && (bool(bvec2(! ((injectionSwitch.x > injectionSwitch.y)), false)))))))), bool(bvec2(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(bvec2(! ((injectionSwitch.x > injectionSwitch.y)), false)), true && (bool(bvec2(! ((injectionSwitch.x > injectionSwitch.y)), false)))))))), false))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false), bvec2(bvec3(_GLF_IDENTITY(bvec2(_GLF_FALSE(_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), (injectionSwitch.x > injectionSwitch.y)), false), bvec2(bvec2(bvec2(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(_GLF_IDENTITY(mat2x3(injectionSwitch.y, 0.0, 0.0, 1.0, 1.0, 1.0), mat2x3(mat4(mat2x3(injectionSwitch.y, 0.0, 0.0, 1.0, 1.0, 1.0))))), clamp(float(_GLF_IDENTITY(mat2x3(injectionSwitch.y, 0.0, 0.0, 1.0, 1.0, 1.0), mat2x3(mat4(mat2x3(injectionSwitch.y, 0.0, 0.0, 1.0, 1.0, 1.0))))), float(_GLF_IDENTITY(mat2x3(injectionSwitch.y, 0.0, 0.0, 1.0, 1.0, 1.0), mat2x3(mat4(mat2x3(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).y, 0.0, 0.0, 1.0, 1.0, 1.0))))), float(_GLF_IDENTITY(mat2x3(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))).y, 0.0, 0.0, 1.0, 1.0, 1.0), mat2x3(mat4(mat2x3(injectionSwitch.y, 0.0, _GLF_IDENTITY(0.0, (0.0) - tan(0.0)), 1.0, 1.0, 1.0)))))))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(_GLF_IDENTITY(mat2x3(injectionSwitch.y, 0.0, 0.0, 1.0, 1.0, 1.0), mat2x3(mat4(mat2x3(injectionSwitch.y, 0.0, 0.0, 1.0, 1.0, 1.0))))), clamp(float(_GLF_IDENTITY(mat2x3(injectionSwitch.y, 0.0, 0.0, 1.0, 1.0, 1.0), mat2x3(mat4(mat2x3(injectionSwitch.y, 0.0, 0.0, 1.0, 1.0, 1.0))))), float(_GLF_IDENTITY(mat2x3(injectionSwitch.y, 0.0, 0.0, 1.0, 1.0, _GLF_IDENTITY(1.0, float(float(_GLF_IDENTITY(1.0, (1.0) - 0.0))))), mat2x3(mat4(mat2x3(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).y, 0.0, 0.0, 1.0, 1.0, 1.0))))), float(_GLF_IDENTITY(mat2x3(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))).y, 0.0, 0.0, 1.0, 1.0, 1.0), mat2x3(mat4(mat2x3(injectionSwitch.y, 0.0, _GLF_IDENTITY(0.0, (0.0) - tan(0.0)), 1.0, 1.0, 1.0))))))))) && true))), false)))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), (bool(_GLF_IDENTITY(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false), bvec2(bvec3(_GLF_IDENTITY(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false), bvec2(bvec2(bvec2(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), (true ? _GLF_IDENTITY((injectionSwitch) * mat2(1.0), (false ? _GLF_FUZZED(vec2(6930.2277, -7.4)) : (injectionSwitch) * mat2(1.0))) : _GLF_FUZZED(vec2(-4.8, 6464.7868))))).y) && true))), false)))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))) && true))))
        barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
          {
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
         if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), true && (_GLF_IDENTITY(false, ! (! (false)))))))))
          barrier();
         if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, false, false, _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), injectionSwitch)).y)))), (bool(bvec4(false, false, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) || false))))
          {
           if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), bool(bvec4(bool(bool(false)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, true))))))
            barrier();
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
        }
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec4(false, false, false, true))), (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 uint num_workgroup = gl_NumWorkGroups.x;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(false), ! (_GLF_IDENTITY(_GLF_IDENTITY(! (bool(false)), (! (bool(false))) || false), false || (! (bool(false))))))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(bool(_GLF_IDENTITY(bool(false), ! (_GLF_IDENTITY(_GLF_IDENTITY(! (bool(false)), bool(bool(! (bool(false))))), false || (! (bool(false)))))))), (bool(bool(_GLF_IDENTITY(bool(false), ! (_GLF_IDENTITY(! (bool(false)), false || (! (bool(false))))))))) || false)), bool(bvec3(bool(_GLF_IDENTITY(bool(bool(_GLF_IDENTITY(bool(false), ! (_GLF_IDENTITY(! (bool(false)), false || (! (bool(false)))))))), _GLF_IDENTITY((bool(bool(_GLF_IDENTITY(bool(false), ! (_GLF_IDENTITY(! (bool(false)), false || (! (bool(false))))))))) || false, ! (! _GLF_IDENTITY(((bool(bool(_GLF_IDENTITY(bool(false), ! (_GLF_IDENTITY(! (bool(false)), false || (! (bool(false))))))))) || false), (((bool(bool(_GLF_IDENTITY(bool(false), ! (_GLF_IDENTITY(! (bool(false)), false || (! (bool(false))))))))) || false)) && true))))), _GLF_IDENTITY(false, (false) || false), true))))), (_GLF_IDENTITY(false, ! (! (false)))) || _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(injectionSwitch.x > injectionSwitch.y, false, false, false))))))), false || (! (_GLF_IDENTITY(false, _GLF_IDENTITY((false), ((false)) || false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))), ! (! (_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(false, false, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(82.29)), bool(false))), bool(bvec4(injectionSwitch.x > injectionSwitch.y, false, false, false))))))), _GLF_IDENTITY(false || (! (_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), ! (! (_GLF_IDENTITY(false || (! (_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), ! (_GLF_IDENTITY(! (false || (! (_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).y)))))), true && (! (false || (! (_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).y)))))))))))))))))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint workgroup_size = gl_WorkGroupSize.x;
 uint workgroup_id = gl_WorkGroupID.x;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false)))), false || (_GLF_DEAD(false))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, false, _GLF_IDENTITY(false, (false) || false), false)), (bool(bvec4(false, false, false, _GLF_IDENTITY(false, ! (! (false)))))) || _GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, bool(bvec4(false, true, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, _GLF_IDENTITY(bool(bool(injectionSwitch.x < injectionSwitch.y)), bool(bool(bool(bool(injectionSwitch.x < injectionSwitch.y))))))))))), false)))))))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, false || (false)), (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (_GLF_IDENTITY(! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec3(false, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), ! (! (false))), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec3(false, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), ! (! (false)))), (bool(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec3(false, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), ! (! (false))))) && true)))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) || false)))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)).x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), false || (! (injectionSwitch.x > injectionSwitch.y)))) || false))))), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false)))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 GLF_merged2_0_1_14_1_1_12workgroup_baseworkgroup_id.y = workgroup_id;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bvec4(injectionSwitch.x > injectionSwitch.y, true, false, false)), (bool(bvec4(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - sqrt(vec2(0.0, 0.0))).x > injectionSwitch.y, true, false, false))) || false)))))))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0)))))))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       barrier();
      }
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) < injectionSwitch.y)) && (false))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))))))))))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 uint workgroup_base = workgroup_size * _GLF_IDENTITY(GLF_merged2_0_1_14_1_1_12workgroup_baseworkgroup_id.y, _GLF_IDENTITY(_GLF_IDENTITY((GLF_merged2_0_1_14_1_1_12workgroup_baseworkgroup_id.y), uint(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), clamp(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), mix(float(_GLF_FUZZED(-7.6)), float(_GLF_ZERO(0.0, injectionSwitch.x)), bool(true))), _GLF_ZERO(0.0, injectionSwitch.x)))) ^ ((GLF_merged2_0_1_14_1_1_12workgroup_baseworkgroup_id.y))), max(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(GLF_merged2_0_1_14_1_1_12workgroup_baseworkgroup_id.y, max(GLF_merged2_0_1_14_1_1_12workgroup_baseworkgroup_id.y, GLF_merged2_0_1_14_1_1_12workgroup_baseworkgroup_id.y))), uint(_GLF_ZERO(0.0, injectionSwitch.x)) ^ ((_GLF_IDENTITY(GLF_merged2_0_1_14_1_1_12workgroup_baseworkgroup_id.y, max(GLF_merged2_0_1_14_1_1_12workgroup_baseworkgroup_id.y, _GLF_IDENTITY(GLF_merged2_0_1_14_1_1_12workgroup_baseworkgroup_id.y, 1u * (_GLF_IDENTITY(GLF_merged2_0_1_14_1_1_12workgroup_baseworkgroup_id, max(GLF_merged2_0_1_14_1_1_12workgroup_baseworkgroup_id, _GLF_IDENTITY(GLF_merged2_0_1_14_1_1_12workgroup_baseworkgroup_id, (GLF_merged2_0_1_14_1_1_12workgroup_baseworkgroup_id) ^ uvec2(0u, 0u)))).y))))))), _GLF_IDENTITY((_GLF_IDENTITY((GLF_merged2_0_1_14_1_1_12workgroup_baseworkgroup_id.y), uint(_GLF_ZERO(0.0, injectionSwitch.x)) ^ ((GLF_merged2_0_1_14_1_1_12workgroup_baseworkgroup_id.y)))) * 1u, (false ? _GLF_FUZZED((workgroup_id >> subgroup_local_id)) : (_GLF_IDENTITY((GLF_merged2_0_1_14_1_1_12workgroup_baseworkgroup_id.y), uint(_GLF_ZERO(0.0, injectionSwitch.x)) ^ ((GLF_merged2_0_1_14_1_1_12workgroup_baseworkgroup_id.y)))) * 1u))), _GLF_IDENTITY((GLF_merged2_0_1_14_1_1_12workgroup_baseworkgroup_id.y), uint(_GLF_ZERO(0.0, injectionSwitch.x)) ^ ((GLF_merged2_0_1_14_1_1_12workgroup_baseworkgroup_id.y))))) << (_GLF_IDENTITY(0u | _GLF_IDENTITY((0u >> _GLF_IDENTITY(uint(_GLF_IDENTITY(7u, clamp(7u, 7u, 7u))), uint(7u))), ((0u >> _GLF_IDENTITY(uint(7u), _GLF_IDENTITY(uint(7u), max(uint(7u), uint(7u)))))) * 1u), (0u | (0u >> _GLF_IDENTITY(uint(7u), uint(7u)))) >> 0u)));
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(mat2x4(injectionSwitch, log(1.0), 1.0, determinant(mat4(1.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(0.0, 1.0, 0.0, 0.0)), dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(0.0, 1.0, 0.0, 0.0))), 1.0, 0.0, 0.0, 0.0, 1.0)), 0.0, sqrt(abs(1.0)), _GLF_IDENTITY(1.0, (true ? _GLF_IDENTITY(1.0, min(1.0, _GLF_IDENTITY(1.0, (1.0) - 0.0))) : _GLF_FUZZED(0.6)))))).y, _GLF_IDENTITY((false ? _GLF_FUZZED(-86.46) : injectionSwitch.y), 1.0 * (_GLF_IDENTITY((false ? _GLF_FUZZED(-86.46) : injectionSwitch.y), mix(float(_GLF_FUZZED(_GLF_IDENTITY(-70.95, (true ? -70.95 : _GLF_FUZZED(uintBitsToFloat(subgroup_size)))))), float((false ? _GLF_FUZZED(-86.46) : injectionSwitch.y)), bool(true))))))))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, _GLF_IDENTITY((false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2((false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false), _GLF_IDENTITY(bvec2(bvec3(bvec2((false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false), true)), bvec2(bvec4(bvec2(bvec3(bvec2((false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false), true)), true, true))))), true && (bool(_GLF_IDENTITY(bvec2((false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false), _GLF_IDENTITY(bvec2(bvec3(bvec2((false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false), true)), bvec2(bvec4(bvec2(bvec3(bvec2((false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false), true)), true, true)))))))))))), (false) && _GLF_IDENTITY(true, _GLF_IDENTITY(false, bool(bvec4(false, false, false, true))) || (_GLF_IDENTITY(true, bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(true, false || (true)), false, false), _GLF_IDENTITY(bvec3(bvec3(bvec3(_GLF_IDENTITY(true, false || (true)), false, false))), bvec3(_GLF_IDENTITY(bvec3(bvec3(bvec3(bvec3(_GLF_IDENTITY(true, false || (true)), false, false)))), bvec3(bvec3(bvec3(bvec3(bvec3(bvec3(_GLF_IDENTITY(true, false || (true)), false, false)))))))))), bvec3(bvec4(bvec3(_GLF_IDENTITY(true, false || (_GLF_IDENTITY(_GLF_IDENTITY(true, true && (true)), (true) || false))), false, false), _GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, true, true), bvec3(bvec4(bvec3(false, true, true), false)))))))))))))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_DEAD(false)))), false)), ! (! (bool(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_DEAD(false)))), false)))))))
    barrier();
   barrier();
  }
 if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x))) * 1.0) > injectionSwitch.y))), false || (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), (_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(bool(bvec4((injectionSwitch.x > injectionSwitch.y), false, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), false || (_GLF_IDENTITY(bool(bvec4((injectionSwitch.x > injectionSwitch.y), false, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), (bool(bvec4((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))))))), false, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) && true))))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 _GLF_IDENTITY(GLF_merged2_0_1_14_1_1_12workgroup_baseworkgroup_id.x = _GLF_IDENTITY(workgroup_base, clamp(workgroup_base, workgroup_base, workgroup_base)), _GLF_IDENTITY((GLF_merged2_0_1_14_1_1_12workgroup_baseworkgroup_id.x = workgroup_base), 1u * ((GLF_merged2_0_1_14_1_1_12workgroup_baseworkgroup_id.x = workgroup_base))) * (1u | 0u));
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY((_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && ((_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) && true), (injectionSwitch.x > injectionSwitch.y)))) || false))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           barrier();
          }
         barrier();
        }
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), bool(_GLF_IDENTITY(bvec2(_GLF_DEAD(false), true), bvec2(bvec3(bvec2(_GLF_DEAD(false), true), true))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, false, true, false)))))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_DEAD(false))))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, false, true, false)))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, _GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(true, (true) || false)), bool(bvec4(! (_GLF_IDENTITY(true, (true) || false)), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))))), false)))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 uint virtual_gid = GLF_merged2_0_1_14_1_1_12workgroup_baseworkgroup_id.x + subgroup_id * subgroup_size + _GLF_IDENTITY(subgroup_local_id, min(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) >> 0u), subgroup_local_id));
 atomicStore(write_val, _GLF_IDENTITY(uint(virtual_gid), (uint(_GLF_IDENTITY(virtual_gid, (0u ^ 0u) | (_GLF_IDENTITY(virtual_gid, ~ (~ (_GLF_IDENTITY(virtual_gid, min(virtual_gid, virtual_gid))))))))) | (uint(virtual_gid))), 4, 64, 0);
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 uint read_val = atomicLoad(write_val, 4, 64, 0);
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 buf[virtual_gid] = _GLF_IDENTITY(uint(subgroupAllEqual(read_val)), (uint(subgroupAllEqual(_GLF_IDENTITY(read_val, uint(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(read_val, clamp(read_val, read_val, _GLF_IDENTITY(read_val, (read_val) << 0u))), 1u, 1u), clamp(uvec3(_GLF_IDENTITY(read_val, clamp(read_val, read_val, _GLF_IDENTITY(_GLF_IDENTITY(read_val, (_GLF_IDENTITY(read_val, (read_val) >> 0u)) ^ 0u), _GLF_IDENTITY((read_val), clamp((read_val), (read_val), (read_val))) << 0u))), 1u, 1u), uvec3(_GLF_IDENTITY(read_val, clamp(read_val, read_val, _GLF_IDENTITY(read_val, (read_val) << 0u))), 1u, 1u), _GLF_IDENTITY(uvec3(_GLF_IDENTITY(read_val, clamp(read_val, read_val, _GLF_IDENTITY(read_val, (read_val) << 0u))), 1u, 1u), clamp(uvec3(_GLF_IDENTITY(read_val, clamp(read_val, read_val, _GLF_IDENTITY(read_val, (read_val) << 0u))), 1u, 1u), uvec3(_GLF_IDENTITY(read_val, clamp(read_val, read_val, _GLF_IDENTITY(read_val, (read_val) << 0u))), _GLF_IDENTITY(1u, clamp(1u, 1u, _GLF_IDENTITY(1u, (1u) << 0u))), 1u), uvec3(_GLF_IDENTITY(read_val, clamp(read_val, read_val, _GLF_IDENTITY(read_val, _GLF_IDENTITY((read_val) << 0u, ((read_val) << 0u) + 0u)))), 1u, 1u)))))))))) - 0u);
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && _GLF_IDENTITY(true, _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(true), true && (_GLF_IDENTITY(bool(true), ! (! (bool(true))))))), bool(bvec2(bool(_GLF_IDENTITY(bool(true), true && (_GLF_IDENTITY(bool(true), ! (! (bool(true))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + _GLF_ZERO(0.0, injectionSwitch.x))))))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))))
    barrier();
   barrier();
  }
}
