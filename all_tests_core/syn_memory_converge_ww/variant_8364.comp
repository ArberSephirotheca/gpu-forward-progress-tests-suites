#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer WriteVal {
 uint write_val;
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), true && (_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), true && ((injectionSwitch.x < injectionSwitch.y)))))), ! (! (bool(_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), true && (_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), true && ((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).y)))))))))))) && (false)), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), injectionSwitch)).y), bool(bvec4((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))))), true, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))
  barrier();
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false)), true && (false))) && true)))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + 0.0)))))
  barrier();
 uint num_workgroup = gl_NumWorkGroups.x;
 if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), bool(bvec2(_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, true && (injectionSwitch.x < injectionSwitch.y)), false)))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
  barrier();
 uint workgroup_size = _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize.x, 0u ^ (_GLF_IDENTITY(gl_WorkGroupSize, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, max(gl_WorkGroupSize, _GLF_IDENTITY(gl_WorkGroupSize, _GLF_IDENTITY((gl_WorkGroupSize), uvec3(0u, 0u, 0u) ^ _GLF_IDENTITY(((gl_WorkGroupSize)), clamp(_GLF_IDENTITY(_GLF_IDENTITY(((gl_WorkGroupSize)), (_GLF_IDENTITY(((gl_WorkGroupSize)), min(((gl_WorkGroupSize)), ((gl_WorkGroupSize))))) >> uvec3(0u, 0u, 0u)), _GLF_IDENTITY(clamp(_GLF_IDENTITY(((gl_WorkGroupSize)), (_GLF_IDENTITY(((gl_WorkGroupSize)), min(((gl_WorkGroupSize)), ((gl_WorkGroupSize))))) >> uvec3(0u, 0u, 0u)), _GLF_IDENTITY(((gl_WorkGroupSize)), (_GLF_IDENTITY(((gl_WorkGroupSize)), min(((gl_WorkGroupSize)), ((gl_WorkGroupSize))))) >> uvec3(0u, 0u, 0u)), _GLF_IDENTITY(_GLF_IDENTITY(((gl_WorkGroupSize)), (_GLF_IDENTITY(((gl_WorkGroupSize)), min(((gl_WorkGroupSize)), ((gl_WorkGroupSize))))) >> uvec3(0u, 0u, 0u)), (_GLF_IDENTITY(((gl_WorkGroupSize)), (_GLF_IDENTITY(((gl_WorkGroupSize)), min(((gl_WorkGroupSize)), ((gl_WorkGroupSize))))) >> uvec3(0u, 0u, 0u))) | (_GLF_IDENTITY(((gl_WorkGroupSize)), (_GLF_IDENTITY(((gl_WorkGroupSize)), min(((gl_WorkGroupSize)), ((gl_WorkGroupSize))))) >> uvec3(0u, 0u, 0u))))), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(clamp(_GLF_IDENTITY(((gl_WorkGroupSize)), (_GLF_IDENTITY(((gl_WorkGroupSize)), min(((gl_WorkGroupSize)), ((gl_WorkGroupSize))))) >> uvec3(0u, 0u, 0u)), _GLF_IDENTITY(((gl_WorkGroupSize)), (_GLF_IDENTITY(((gl_WorkGroupSize)), min(((gl_WorkGroupSize)), ((gl_WorkGroupSize))))) >> uvec3(0u, 0u, 0u)), _GLF_IDENTITY(_GLF_IDENTITY(((gl_WorkGroupSize)), (_GLF_IDENTITY(((gl_WorkGroupSize)), min(((gl_WorkGroupSize)), ((gl_WorkGroupSize))))) >> uvec3(0u, 0u, 0u)), (_GLF_IDENTITY(((gl_WorkGroupSize)), (_GLF_IDENTITY(((gl_WorkGroupSize)), min(((gl_WorkGroupSize)), ((gl_WorkGroupSize))))) >> uvec3(0u, 0u, 0u))) | (_GLF_IDENTITY(((gl_WorkGroupSize)), (_GLF_IDENTITY(((gl_WorkGroupSize)), min(((gl_WorkGroupSize)), ((gl_WorkGroupSize))))) >> uvec3(0u, 0u, 0u))))), uvec3(0u, 0u, 0u) ^ (clamp(_GLF_IDENTITY(((gl_WorkGroupSize)), (_GLF_IDENTITY(((gl_WorkGroupSize)), min(((gl_WorkGroupSize)), ((gl_WorkGroupSize))))) >> uvec3(0u, 0u, 0u)), _GLF_IDENTITY(((gl_WorkGroupSize)), (_GLF_IDENTITY(((gl_WorkGroupSize)), min(((gl_WorkGroupSize)), ((gl_WorkGroupSize))))) >> uvec3(0u, 0u, 0u)), _GLF_IDENTITY(_GLF_IDENTITY(((gl_WorkGroupSize)), (_GLF_IDENTITY(((gl_WorkGroupSize)), min(((gl_WorkGroupSize)), ((gl_WorkGroupSize))))) >> uvec3(0u, 0u, 0u)), (_GLF_IDENTITY(((gl_WorkGroupSize)), (_GLF_IDENTITY(((gl_WorkGroupSize)), min(((gl_WorkGroupSize)), ((gl_WorkGroupSize))))) >> uvec3(0u, 0u, 0u))) | (_GLF_IDENTITY(((gl_WorkGroupSize)), (_GLF_IDENTITY(((gl_WorkGroupSize)), min(((gl_WorkGroupSize)), ((gl_WorkGroupSize))))) >> uvec3(0u, 0u, 0u)))))))), (~ (_GLF_IDENTITY(clamp(_GLF_IDENTITY(((gl_WorkGroupSize)), (_GLF_IDENTITY(((gl_WorkGroupSize)), min(((gl_WorkGroupSize)), ((gl_WorkGroupSize))))) >> uvec3(0u, 0u, 0u)), _GLF_IDENTITY(((gl_WorkGroupSize)), (_GLF_IDENTITY(((gl_WorkGroupSize)), min(((gl_WorkGroupSize)), ((gl_WorkGroupSize))))) >> uvec3(0u, 0u, 0u)), _GLF_IDENTITY(_GLF_IDENTITY(((gl_WorkGroupSize)), (_GLF_IDENTITY(((gl_WorkGroupSize)), min(((gl_WorkGroupSize)), ((gl_WorkGroupSize))))) >> uvec3(0u, 0u, 0u)), (_GLF_IDENTITY(((gl_WorkGroupSize)), (_GLF_IDENTITY(((gl_WorkGroupSize)), min(((gl_WorkGroupSize)), ((gl_WorkGroupSize))))) >> uvec3(0u, 0u, 0u))) | (_GLF_IDENTITY(((gl_WorkGroupSize)), (_GLF_IDENTITY(((gl_WorkGroupSize)), min(((gl_WorkGroupSize)), ((gl_WorkGroupSize))))) >> uvec3(0u, 0u, 0u))))), uvec3(0u, 0u, 0u) ^ (clamp(_GLF_IDENTITY(((gl_WorkGroupSize)), (_GLF_IDENTITY(((gl_WorkGroupSize)), min(((gl_WorkGroupSize)), ((gl_WorkGroupSize))))) >> uvec3(0u, 0u, 0u)), _GLF_IDENTITY(((gl_WorkGroupSize)), (_GLF_IDENTITY(((gl_WorkGroupSize)), min(((gl_WorkGroupSize)), ((gl_WorkGroupSize))))) >> uvec3(0u, 0u, 0u)), _GLF_IDENTITY(_GLF_IDENTITY(((gl_WorkGroupSize)), (_GLF_IDENTITY(((gl_WorkGroupSize)), min(((gl_WorkGroupSize)), ((gl_WorkGroupSize))))) >> uvec3(0u, 0u, 0u)), (_GLF_IDENTITY(((gl_WorkGroupSize)), (_GLF_IDENTITY(((gl_WorkGroupSize)), min(((gl_WorkGroupSize)), ((gl_WorkGroupSize))))) >> uvec3(0u, 0u, 0u))) | (_GLF_IDENTITY(((gl_WorkGroupSize)), (_GLF_IDENTITY(((gl_WorkGroupSize)), min(((gl_WorkGroupSize)), ((gl_WorkGroupSize))))) >> uvec3(0u, 0u, 0u))))))))) - uvec3(0u, 0u, 0u))))), _GLF_IDENTITY(((gl_WorkGroupSize)), ~ (~ (((gl_WorkGroupSize))))), ((gl_WorkGroupSize))))) - uvec3(0u, 0u, _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) | (0u))) | (0u)))))), (_GLF_IDENTITY(gl_WorkGroupSize, max(gl_WorkGroupSize, _GLF_IDENTITY(gl_WorkGroupSize, _GLF_IDENTITY((gl_WorkGroupSize), uvec3(0u, 0u, _GLF_IDENTITY(0u, (0u) * 1u)) ^ _GLF_IDENTITY(((gl_WorkGroupSize)), clamp(_GLF_IDENTITY(_GLF_IDENTITY(((gl_WorkGroupSize)), (_GLF_IDENTITY(((gl_WorkGroupSize)), min(((gl_WorkGroupSize)), ((gl_WorkGroupSize))))) >> uvec3(0u, 0u, 0u)), clamp(_GLF_IDENTITY(((gl_WorkGroupSize)), (_GLF_IDENTITY(((gl_WorkGroupSize)), min(((gl_WorkGroupSize)), ((gl_WorkGroupSize))))) >> uvec3(0u, 0u, 0u)), _GLF_IDENTITY(((gl_WorkGroupSize)), (_GLF_IDENTITY(((gl_WorkGroupSize)), min(((gl_WorkGroupSize)), ((gl_WorkGroupSize))))) >> uvec3(0u, 0u, 0u)), _GLF_IDENTITY(_GLF_IDENTITY(((gl_WorkGroupSize)), (_GLF_IDENTITY(((gl_WorkGroupSize)), min(((gl_WorkGroupSize)), ((gl_WorkGroupSize))))) >> uvec3(0u, 0u, 0u)), (_GLF_IDENTITY(((gl_WorkGroupSize)), (_GLF_IDENTITY(((gl_WorkGroupSize)), min(((gl_WorkGroupSize)), ((gl_WorkGroupSize))))) >> uvec3(0u, 0u, 0u))) | (_GLF_IDENTITY(((gl_WorkGroupSize)), (_GLF_IDENTITY(((gl_WorkGroupSize)), min(((gl_WorkGroupSize)), _GLF_IDENTITY(((gl_WorkGroupSize)), clamp(((gl_WorkGroupSize)), ((gl_WorkGroupSize)), _GLF_IDENTITY(((gl_WorkGroupSize)), (((gl_WorkGroupSize))) << uvec3(0u, 0u, 0u))))))) >> uvec3(0u, 0u, 0u)))))), _GLF_IDENTITY(((_GLF_IDENTITY(gl_WorkGroupSize, clamp(gl_WorkGroupSize, gl_WorkGroupSize, gl_WorkGroupSize)))), ~ (~ (((gl_WorkGroupSize))))), ((gl_WorkGroupSize))))) - uvec3(0u, 0u, _GLF_IDENTITY(0u, (_GLF_IDENTITY(_GLF_IDENTITY(0u, (0u) | (0u)), (_GLF_IDENTITY(_GLF_IDENTITY(0u, (0u) | (0u)), clamp(_GLF_IDENTITY(0u, (0u) | (0u)), _GLF_IDENTITY(0u, (0u) | (0u)), _GLF_IDENTITY(0u, (0u) | (0u))))) | 0u)) | (0u))))))) ^ uvec3(0u, 0u, 0u)), _GLF_IDENTITY(uvec3(0u, 0u, 0u), (uvec3(0u, 0u, 0u)) >> uvec3(0u, 0u, 0u)) ^ (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, max(gl_WorkGroupSize, _GLF_IDENTITY(gl_WorkGroupSize, _GLF_IDENTITY((gl_WorkGroupSize), uvec3(0u, 0u, 0u) ^ _GLF_IDENTITY(((gl_WorkGroupSize)), clamp(_GLF_IDENTITY(_GLF_IDENTITY(((gl_WorkGroupSize)), (_GLF_IDENTITY(((gl_WorkGroupSize)), min(((gl_WorkGroupSize)), ((gl_WorkGroupSize))))) >> uvec3(0u, 0u, 0u)), clamp(_GLF_IDENTITY(((gl_WorkGroupSize)), (_GLF_IDENTITY(((gl_WorkGroupSize)), min(((gl_WorkGroupSize)), ((gl_WorkGroupSize))))) >> _GLF_IDENTITY(uvec3(0u, _GLF_IDENTITY(0u, uint(uvec4(0u, 1u, 1u, 1u))), 0u), min(uvec3(0u, _GLF_IDENTITY(0u, uint(uvec4(0u, 1u, 1u, 1u))), 0u), _GLF_IDENTITY(uvec3(0u, _GLF_IDENTITY(0u, uint(uvec4(0u, 1u, 1u, 1u))), 0u), (uvec3(0u, _GLF_IDENTITY(0u, uint(uvec4(0u, 1u, 1u, 1u))), 0u)) - uvec3(0u, 0u, 0u))))), _GLF_IDENTITY(((gl_WorkGroupSize)), (_GLF_IDENTITY(((gl_WorkGroupSize)), min(((gl_WorkGroupSize)), ((gl_WorkGroupSize))))) >> uvec3(0u, 0u, 0u)), _GLF_IDENTITY(_GLF_IDENTITY(((gl_WorkGroupSize)), (_GLF_IDENTITY(((gl_WorkGroupSize)), min(((gl_WorkGroupSize)), ((gl_WorkGroupSize))))) >> uvec3(0u, 0u, 0u)), (_GLF_IDENTITY(((gl_WorkGroupSize)), (_GLF_IDENTITY(((gl_WorkGroupSize)), min(((gl_WorkGroupSize)), ((gl_WorkGroupSize))))) >> uvec3(0u, _GLF_IDENTITY(0u, (false ? _GLF_FUZZED(subgroup_id) : 0u)), 0u))) | (_GLF_IDENTITY(((gl_WorkGroupSize)), (_GLF_IDENTITY(((gl_WorkGroupSize)), min(((gl_WorkGroupSize)), ((gl_WorkGroupSize))))) >> uvec3(0u, 0u, 0u)))))), _GLF_IDENTITY(((gl_WorkGroupSize)), ~ _GLF_IDENTITY((~ (((gl_WorkGroupSize)))), _GLF_IDENTITY(uvec3(uvec4((~ (((gl_WorkGroupSize)))), 1u)), uvec3(0u, 0u, 0u) | (uvec3(uvec4((~ ((_GLF_IDENTITY((gl_WorkGroupSize), min((gl_WorkGroupSize), _GLF_IDENTITY((gl_WorkGroupSize), uvec3(0u, 0u, 0u) + ((gl_WorkGroupSize)))))))), 1u)))))), ((gl_WorkGroupSize))))) - uvec3(0u, 0u, _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) | (0u))) | (0u)))))), clamp(_GLF_IDENTITY(gl_WorkGroupSize, max(gl_WorkGroupSize, _GLF_IDENTITY(gl_WorkGroupSize, _GLF_IDENTITY((gl_WorkGroupSize), uvec3(0u, 0u, 0u) ^ _GLF_IDENTITY(((gl_WorkGroupSize)), clamp(_GLF_IDENTITY(_GLF_IDENTITY(((_GLF_IDENTITY(gl_WorkGroupSize, clamp(_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) ^ uvec3(0u, 0u, 0u)), gl_WorkGroupSize, gl_WorkGroupSize)))), (_GLF_IDENTITY(((gl_WorkGroupSize)), min((_GLF_IDENTITY((gl_WorkGroupSize), uvec3(0u, 0u, 0u) + ((gl_WorkGroupSize)))), _GLF_IDENTITY(((gl_WorkGroupSize)), (_GLF_IDENTITY(((gl_WorkGroupSize)), max(((gl_WorkGroupSize)), ((gl_WorkGroupSize))))) - uvec3(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)))))) >> uvec3(0u, 0u, 0u)), clamp(_GLF_IDENTITY(((_GLF_IDENTITY(gl_WorkGroupSize, (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(injectionSwitch.x > injectionSwitch.y, true, false, _GLF_IDENTITY(false, false || (false))))))) ? _GLF_FUZZED((subgroup_size / uvec3(11111u, 75737u, 46206u))) : gl_WorkGroupSize)))), (_GLF_IDENTITY(((gl_WorkGroupSize)), min(((gl_WorkGroupSize)), ((gl_WorkGroupSize))))) >> uvec3(0u, 0u, 0u)), _GLF_IDENTITY(((gl_WorkGroupSize)), (_GLF_IDENTITY(((gl_WorkGroupSize)), min(((gl_WorkGroupSize)), ((gl_WorkGroupSize))))) >> uvec3(0u, 0u, 0u)), _GLF_IDENTITY(_GLF_IDENTITY(((gl_WorkGroupSize)), (_GLF_IDENTITY(((_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) - uvec3(0u, 0u, 0u)))), min(((gl_WorkGroupSize)), ((gl_WorkGroupSize))))) >> uvec3(0u, 0u, 0u)), (_GLF_IDENTITY(((gl_WorkGroupSize)), (_GLF_IDENTITY(((gl_WorkGroupSize)), min(((gl_WorkGroupSize)), (_GLF_IDENTITY((gl_WorkGroupSize), (true ? (gl_WorkGroupSize) : _GLF_FUZZED(max((write_val / uvec3(50546u, 191562u, 192754u)), subgroup_id)))))))) >> uvec3(0u, 0u, _GLF_IDENTITY(0u, min(0u, 0u))))) | (_GLF_IDENTITY(_GLF_IDENTITY(((gl_WorkGroupSize)), (_GLF_IDENTITY(((gl_WorkGroupSize)), min(((gl_WorkGroupSize)), ((gl_WorkGroupSize))))) >> uvec3(0u, 0u, 0u)), uvec3(uvec3(_GLF_IDENTITY(((gl_WorkGroupSize)), (_GLF_IDENTITY(((gl_WorkGroupSize)), min(((gl_WorkGroupSize)), ((gl_WorkGroupSize))))) >> uvec3(0u, 0u, 0u))))))))), _GLF_IDENTITY(((gl_WorkGroupSize)), ~ (~ (((gl_WorkGroupSize))))), ((gl_WorkGroupSize))))) - uvec3(0u, 0u, _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) | (0u))) | (0u)))))), _GLF_IDENTITY(gl_WorkGroupSize, max(gl_WorkGroupSize, _GLF_IDENTITY(gl_WorkGroupSize, _GLF_IDENTITY((gl_WorkGroupSize), uvec3(0u, 0u, 0u) ^ _GLF_IDENTITY(((gl_WorkGroupSize)), clamp(_GLF_IDENTITY(_GLF_IDENTITY(((gl_WorkGroupSize)), (_GLF_IDENTITY(((gl_WorkGroupSize)), min(((gl_WorkGroupSize)), ((_GLF_IDENTITY(gl_WorkGroupSize, max(_GLF_IDENTITY(gl_WorkGroupSize, max(gl_WorkGroupSize, _GLF_IDENTITY(gl_WorkGroupSize, clamp(gl_WorkGroupSize, gl_WorkGroupSize, gl_WorkGroupSize)))), gl_WorkGroupSize))))))) >> uvec3(0u, _GLF_IDENTITY(0u, (0u) * uint(_GLF_ONE(1.0, injectionSwitch.y))), 0u)), clamp(_GLF_IDENTITY(((gl_WorkGroupSize)), (_GLF_IDENTITY(((gl_WorkGroupSize)), min((_GLF_IDENTITY(_GLF_IDENTITY((gl_WorkGroupSize), uvec3(uvec3(_GLF_IDENTITY((gl_WorkGroupSize), ((gl_WorkGroupSize)) - uvec3(0u, 0u, 0u))))), (_GLF_IDENTITY(_GLF_IDENTITY((gl_WorkGroupSize), uvec3(uvec3(_GLF_IDENTITY((gl_WorkGroupSize), ((gl_WorkGroupSize)) - uvec3(0u, 0u, 0u))))), min(_GLF_IDENTITY((gl_WorkGroupSize), uvec3(uvec3(_GLF_IDENTITY((gl_WorkGroupSize), ((gl_WorkGroupSize)) - uvec3(0u, 0u, 0u))))), _GLF_IDENTITY((gl_WorkGroupSize), uvec3(uvec3(_GLF_IDENTITY((gl_WorkGroupSize), ((gl_WorkGroupSize)) - uvec3(0u, 0u, 0u)))))))) / uvec3(1u, 1u, 1u))), ((gl_WorkGroupSize))))) >> uvec3(0u, 0u, 0u)), _GLF_IDENTITY(((gl_WorkGroupSize)), (_GLF_IDENTITY(_GLF_IDENTITY(((gl_WorkGroupSize)), ((_GLF_IDENTITY((gl_WorkGroupSize), max(_GLF_IDENTITY((gl_WorkGroupSize), ((gl_WorkGroupSize)) - uvec3(0u, 0u, 0u)), (gl_WorkGroupSize))))) << uvec3(0u, 0u, 0u)), min(((gl_WorkGroupSize)), ((gl_WorkGroupSize))))) >> uvec3(0u, 0u, 0u)), _GLF_IDENTITY(_GLF_IDENTITY(((gl_WorkGroupSize)), (_GLF_IDENTITY(((gl_WorkGroupSize)), min(((gl_WorkGroupSize)), ((gl_WorkGroupSize))))) >> uvec3(_GLF_IDENTITY(0u, (0u) >> 0u), 0u, 0u)), (_GLF_IDENTITY(((gl_WorkGroupSize)), (_GLF_IDENTITY(_GLF_IDENTITY(((gl_WorkGroupSize)), (_GLF_IDENTITY(((gl_WorkGroupSize)), min(((gl_WorkGroupSize)), _GLF_IDENTITY(((gl_WorkGroupSize)), (((gl_WorkGroupSize))) << uvec3(0u, 0u, 0u))))) | (((gl_WorkGroupSize)))), min(((gl_WorkGroupSize)), ((gl_WorkGroupSize))))) >> uvec3(0u, 0u, 0u))) | (_GLF_IDENTITY(((gl_WorkGroupSize)), (_GLF_IDENTITY(((gl_WorkGroupSize)), min(((gl_WorkGroupSize)), ((gl_WorkGroupSize))))) >> uvec3(0u, _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, 0u ^ (0u))) | (0u)), 0u)))))), _GLF_IDENTITY(((gl_WorkGroupSize)), ~ (~ (((gl_WorkGroupSize))))), ((_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) << uvec3(0u, 0u, 0u))))))) - uvec3(0u, 0u, _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) | (0u))) | (0u)))))), _GLF_IDENTITY(gl_WorkGroupSize, max(gl_WorkGroupSize, _GLF_IDENTITY(gl_WorkGroupSize, _GLF_IDENTITY((gl_WorkGroupSize), uvec3(0u, _GLF_IDENTITY(0u, (false ? _GLF_FUZZED((~ num_workgroup)) : 0u)), 0u) ^ _GLF_IDENTITY((_GLF_IDENTITY((gl_WorkGroupSize), ((gl_WorkGroupSize)) ^ uvec3(0u, 0u, 0u))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(((gl_WorkGroupSize)), (_GLF_IDENTITY(((gl_WorkGroupSize)), min(_GLF_IDENTITY(((gl_WorkGroupSize)), uvec3(0u, 0u, 0u) ^ (((gl_WorkGroupSize)))), (_GLF_IDENTITY((gl_WorkGroupSize), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY((gl_WorkGroupSize), max((gl_WorkGroupSize), _GLF_IDENTITY((gl_WorkGroupSize), uvec3(uvec4(_GLF_IDENTITY((gl_WorkGroupSize), ((gl_WorkGroupSize)) >> uvec3(0u, 0u, 0u)), (0u << _GLF_IDENTITY(uint(5u), uint(5u))))))))), (~ (_GLF_IDENTITY((gl_WorkGroupSize), max((gl_WorkGroupSize), _GLF_IDENTITY((gl_WorkGroupSize), min((gl_WorkGroupSize), (gl_WorkGroupSize))))))) / uvec3(1u, 1u, 1u)))))))) >> uvec3(_GLF_IDENTITY(0u, (0u) + 0u), 0u, 0u)), clamp(_GLF_IDENTITY(((gl_WorkGroupSize)), (_GLF_IDENTITY(((gl_WorkGroupSize)), min(((gl_WorkGroupSize)), ((gl_WorkGroupSize))))) >> uvec3(0u, 0u, 0u)), _GLF_IDENTITY(((gl_WorkGroupSize)), (_GLF_IDENTITY(((gl_WorkGroupSize)), _GLF_IDENTITY(min(((gl_WorkGroupSize)), ((gl_WorkGroupSize))), ~ (~ (min(((gl_WorkGroupSize)), ((gl_WorkGroupSize)))))))) >> uvec3(0u, 0u, 0u)), _GLF_IDENTITY(_GLF_IDENTITY(((gl_WorkGroupSize)), (_GLF_IDENTITY(((gl_WorkGroupSize)), min(((gl_WorkGroupSize)), (_GLF_IDENTITY((gl_WorkGroupSize), ~ (~ (_GLF_IDENTITY((gl_WorkGroupSize), ((gl_WorkGroupSize)) >> (uvec3(0u, 0u, 0u) << _GLF_IDENTITY(uvec3(8u), uvec3(8u))))))))))) >> uvec3(0u, 0u, 0u)), (_GLF_IDENTITY(((gl_WorkGroupSize)), (_GLF_IDENTITY(_GLF_IDENTITY(((gl_WorkGroupSize)), min(((gl_WorkGroupSize)), ((gl_WorkGroupSize)))), uvec3(uvec3(_GLF_IDENTITY(_GLF_IDENTITY(((gl_WorkGroupSize)), min(((gl_WorkGroupSize)), ((gl_WorkGroupSize)))), (_GLF_IDENTITY(((gl_WorkGroupSize)), min(((gl_WorkGroupSize)), ((gl_WorkGroupSize))))) / uvec3(1u, 1u, 1u)))))) >> uvec3(0u, _GLF_IDENTITY(0u, (0u) >> 0u), 0u))) | (_GLF_IDENTITY(((gl_WorkGroupSize)), (_GLF_IDENTITY(((gl_WorkGroupSize)), min(((gl_WorkGroupSize)), ((gl_WorkGroupSize))))) >> uvec3(0u, 0u, 0u)))))), _GLF_IDENTITY(((gl_WorkGroupSize)), ~ (~ (((gl_WorkGroupSize))))), ((gl_WorkGroupSize))))) - uvec3(0u, 0u, _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) | (0u))) | (0u))))))))))) | (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, (false ? _GLF_FUZZED((~ uvec3(46724u, 146198u, 137451u))) : gl_WorkGroupSize)), _GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupSize, (false ? _GLF_FUZZED((~ uvec3(46724u, 146198u, 137451u))) : gl_WorkGroupSize))), ~ (_GLF_IDENTITY(~ ((_GLF_IDENTITY(gl_WorkGroupSize, (false ? _GLF_FUZZED((~ uvec3(46724u, 146198u, 137451u))) : gl_WorkGroupSize)))), (false ? _GLF_FUZZED(uvec3(170136u, 167230u, 152095u)) : _GLF_IDENTITY(~ ((_GLF_IDENTITY(gl_WorkGroupSize, (false ? _GLF_FUZZED((~ uvec3(46724u, 146198u, 137451u))) : gl_WorkGroupSize)))), (~ ((_GLF_IDENTITY(gl_WorkGroupSize, (false ? _GLF_FUZZED((~ uvec3(46724u, 146198u, 137451u))) : gl_WorkGroupSize))))) | (~ ((_GLF_IDENTITY(gl_WorkGroupSize, (false ? _GLF_FUZZED((~ uvec3(46724u, 146198u, 137451u))) : gl_WorkGroupSize)))))))))) | uvec3(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))))).x)), (_GLF_IDENTITY(gl_WorkGroupSize.x, 0u ^ (_GLF_IDENTITY(gl_WorkGroupSize, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, max(gl_WorkGroupSize, _GLF_IDENTITY(gl_WorkGroupSize, _GLF_IDENTITY((gl_WorkGroupSize), uvec3(0u, 0u, 0u) ^ _GLF_IDENTITY(((gl_WorkGroupSize)), clamp(_GLF_IDENTITY(_GLF_IDENTITY(((gl_WorkGroupSize)), (_GLF_IDENTITY(((gl_WorkGroupSize)), min(_GLF_IDENTITY(((gl_WorkGroupSize)), uvec3(0u, 0u, 0u) | (((gl_WorkGroupSize)))), ((gl_WorkGroupSize))))) >> uvec3(0u, 0u, 0u)), clamp(_GLF_IDENTITY(((_GLF_IDENTITY(gl_WorkGroupSize, (_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) | (_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) | (gl_WorkGroupSize))))) | (gl_WorkGroupSize)))), (_GLF_IDENTITY(((gl_WorkGroupSize)), min(((gl_WorkGroupSize)), ((gl_WorkGroupSize))))) >> uvec3(0u, 0u, 0u)), _GLF_IDENTITY(((gl_WorkGroupSize)), (_GLF_IDENTITY(((gl_WorkGroupSize)), min(((gl_WorkGroupSize)), ((gl_WorkGroupSize))))) >> uvec3(0u, 0u, 0u)), _GLF_IDENTITY(_GLF_IDENTITY(((gl_WorkGroupSize)), (_GLF_IDENTITY(((gl_WorkGroupSize)), min(((gl_WorkGroupSize)), ((gl_WorkGroupSize))))) >> uvec3(0u, 0u, 0u)), (_GLF_IDENTITY(((gl_WorkGroupSize)), (_GLF_IDENTITY(((gl_WorkGroupSize)), min(((gl_WorkGroupSize)), ((gl_WorkGroupSize))))) >> uvec3(0u, 0u, 0u))) | (_GLF_IDENTITY((_GLF_IDENTITY((gl_WorkGroupSize), ((gl_WorkGroupSize)) + uvec3(0u, 0u, 0u))), (_GLF_IDENTITY(((gl_WorkGroupSize)), min(((gl_WorkGroupSize)), ((gl_WorkGroupSize))))) >> uvec3(0u, 0u, 0u)))))), _GLF_IDENTITY(((gl_WorkGroupSize)), ~ (~ (((gl_WorkGroupSize))))), ((gl_WorkGroupSize))))) - uvec3(0u, 0u, _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) | (0u))) | (0u)))))), (_GLF_IDENTITY(gl_WorkGroupSize, max(gl_WorkGroupSize, _GLF_IDENTITY(gl_WorkGroupSize, _GLF_IDENTITY((gl_WorkGroupSize), uvec3(0u, 0u, 0u) ^ _GLF_IDENTITY(((gl_WorkGroupSize)), clamp(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(((gl_WorkGroupSize)), (_GLF_IDENTITY(((gl_WorkGroupSize)), min(((gl_WorkGroupSize)), ((gl_WorkGroupSize))))) >> uvec3(0u, 0u, 0u)), clamp(_GLF_IDENTITY(((gl_WorkGroupSize)), (_GLF_IDENTITY(((gl_WorkGroupSize)), min(((gl_WorkGroupSize)), ((gl_WorkGroupSize))))) >> uvec3(0u, 0u, 0u)), _GLF_IDENTITY(((gl_WorkGroupSize)), (_GLF_IDENTITY(((gl_WorkGroupSize)), min(((gl_WorkGroupSize)), ((gl_WorkGroupSize))))) >> uvec3(0u, 0u, 0u)), _GLF_IDENTITY(_GLF_IDENTITY(((gl_WorkGroupSize)), (_GLF_IDENTITY(((gl_WorkGroupSize)), min(((gl_WorkGroupSize)), ((gl_WorkGroupSize))))) >> uvec3(0u, 0u, 0u)), (_GLF_IDENTITY(((gl_WorkGroupSize)), (_GLF_IDENTITY(((gl_WorkGroupSize)), min(((gl_WorkGroupSize)), ((gl_WorkGroupSize))))) >> uvec3(0u, 0u, 0u))) | (_GLF_IDENTITY(((gl_WorkGroupSize)), (_GLF_IDENTITY(((gl_WorkGroupSize)), min(((gl_WorkGroupSize)), ((gl_WorkGroupSize))))) >> uvec3(0u, 0u, 0u)))))), (true ? _GLF_IDENTITY(_GLF_IDENTITY(((gl_WorkGroupSize)), (_GLF_IDENTITY(((gl_WorkGroupSize)), min(((gl_WorkGroupSize)), ((gl_WorkGroupSize))))) >> uvec3(0u, 0u, 0u)), clamp(_GLF_IDENTITY(((_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) << (uvec3(0u, 0u, 0u) & uvec3(171913u, 56836u, 129778u))))), (_GLF_IDENTITY(((_GLF_IDENTITY(gl_WorkGroupSize, uvec3(0u, 0u, 0u) ^ (gl_WorkGroupSize)))), min(((gl_WorkGroupSize)), ((gl_WorkGroupSize))))) >> uvec3(0u, 0u, 0u)), _GLF_IDENTITY(((gl_WorkGroupSize)), (_GLF_IDENTITY(((gl_WorkGroupSize)), min(((gl_WorkGroupSize)), ((gl_WorkGroupSize))))) >> uvec3(0u, 0u, 0u)), _GLF_IDENTITY(_GLF_IDENTITY(((gl_WorkGroupSize)), (_GLF_IDENTITY(((gl_WorkGroupSize)), min(((gl_WorkGroupSize)), ((gl_WorkGroupSize))))) >> uvec3(0u, 0u, 0u)), (_GLF_IDENTITY(((gl_WorkGroupSize)), (_GLF_IDENTITY(((gl_WorkGroupSize)), min(((gl_WorkGroupSize)), ((gl_WorkGroupSize))))) >> uvec3(0u, 0u, 0u))) | (_GLF_IDENTITY(((gl_WorkGroupSize)), (_GLF_IDENTITY(((gl_WorkGroupSize)), min(((gl_WorkGroupSize)), ((gl_WorkGroupSize))))) >> uvec3(0u, 0u, 0u)))))) : _GLF_FUZZED((uvec3(182446u, 69253u, 142898u) / uvec3(106537u, 108603u, 114070u))))), _GLF_IDENTITY(((gl_WorkGroupSize)), ~ (~ (_GLF_IDENTITY(((gl_WorkGroupSize)), (((gl_WorkGroupSize))) | uvec3(0u, 0u, 0u))))), ((gl_WorkGroupSize))))) - uvec3(0u, 0u, _GLF_IDENTITY(_GLF_IDENTITY(0u, (0u) | (0u)), (_GLF_IDENTITY(0u, (0u) | (0u))) | (0u))))))) ^ uvec3(0u, 0u, 0u)), _GLF_IDENTITY(uvec3(0u, 0u, 0u), (uvec3(0u, 0u, 0u)) | (uvec3(0u, 0u, 0u))) ^ (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, max(gl_WorkGroupSize, _GLF_IDENTITY(gl_WorkGroupSize, _GLF_IDENTITY((gl_WorkGroupSize), uvec3(0u, 0u, 0u) ^ _GLF_IDENTITY(((gl_WorkGroupSize)), clamp(_GLF_IDENTITY(_GLF_IDENTITY(((_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) ^ uvec3(0u, 0u, 0u)))), (_GLF_IDENTITY(((gl_WorkGroupSize)), min(((gl_WorkGroupSize)), ((gl_WorkGroupSize))))) >> uvec3(0u, 0u, 0u)), clamp(_GLF_IDENTITY(((gl_WorkGroupSize)), (_GLF_IDENTITY(((gl_WorkGroupSize)), min(((gl_WorkGroupSize)), ((gl_WorkGroupSize))))) >> uvec3(0u, 0u, 0u)), _GLF_IDENTITY(((gl_WorkGroupSize)), (_GLF_IDENTITY(((gl_WorkGroupSize)), min(((gl_WorkGroupSize)), ((gl_WorkGroupSize))))) >> uvec3(0u, 0u, 0u)), _GLF_IDENTITY(_GLF_IDENTITY(((gl_WorkGroupSize)), (_GLF_IDENTITY(((gl_WorkGroupSize)), min(((gl_WorkGroupSize)), ((gl_WorkGroupSize))))) >> uvec3(0u, 0u, 0u)), (_GLF_IDENTITY(((gl_WorkGroupSize)), (_GLF_IDENTITY(((gl_WorkGroupSize)), min(((gl_WorkGroupSize)), ((gl_WorkGroupSize))))) >> uvec3(0u, 0u, 0u))) | (_GLF_IDENTITY(((gl_WorkGroupSize)), (_GLF_IDENTITY(((gl_WorkGroupSize)), min(((gl_WorkGroupSize)), ((gl_WorkGroupSize))))) >> uvec3(0u, 0u, 0u)))))), _GLF_IDENTITY(((gl_WorkGroupSize)), ~ _GLF_IDENTITY((~ (((gl_WorkGroupSize)))), _GLF_IDENTITY(uvec3(uvec4((~ (((gl_WorkGroupSize)))), 1u)), uvec3(0u, 0u, 0u) | (uvec3(uvec4((~ (((gl_WorkGroupSize)))), 1u)))))), ((gl_WorkGroupSize))))) - uvec3(0u, 0u, _GLF_IDENTITY(0u, (_GLF_IDENTITY(_GLF_IDENTITY(0u, (0u) | (0u)), (_GLF_IDENTITY(0u, (0u) | (0u))) | (_GLF_IDENTITY(_GLF_IDENTITY(0u, (0u) | (0u)), (_GLF_IDENTITY(0u, (0u) | (0u))) / 1u)))) | (0u)))))), clamp(_GLF_IDENTITY(gl_WorkGroupSize, max(gl_WorkGroupSize, _GLF_IDENTITY(gl_WorkGroupSize, _GLF_IDENTITY((gl_WorkGroupSize), uvec3(0u, 0u, 0u) ^ _GLF_IDENTITY(((gl_WorkGroupSize)), clamp(_GLF_IDENTITY(_GLF_IDENTITY(((gl_WorkGroupSize)), (_GLF_IDENTITY(((gl_WorkGroupSize)), min((_GLF_IDENTITY((gl_WorkGroupSize), uvec3(0u, 0u, 0u) + ((gl_WorkGroupSize)))), _GLF_IDENTITY(((gl_WorkGroupSize)), (_GLF_IDENTITY(((gl_WorkGroupSize)), max(((gl_WorkGroupSize)), ((gl_WorkGroupSize))))) - uvec3(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)))))) >> uvec3(0u, 0u, 0u)), clamp(_GLF_IDENTITY((_GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupSize, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED((subgroup_size / uvec3(11111u, 75737u, 46206u))) : gl_WorkGroupSize))), (uvec3(0u, 0u, 0u) << _GLF_IDENTITY(uvec3(0u), uvec3(0u))) ^ ((_GLF_IDENTITY(gl_WorkGroupSize, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED((subgroup_size / uvec3(11111u, 75737u, 46206u))) : gl_WorkGroupSize)))))), (_GLF_IDENTITY(((gl_WorkGroupSize)), min(((gl_WorkGroupSize)), ((gl_WorkGroupSize))))) >> uvec3(0u, 0u, 0u)), _GLF_IDENTITY(((gl_WorkGroupSize)), (_GLF_IDENTITY(((gl_WorkGroupSize)), min(((gl_WorkGroupSize)), _GLF_IDENTITY(((gl_WorkGroupSize)), ~ (_GLF_IDENTITY(~ (((gl_WorkGroupSize))), max(_GLF_IDENTITY(~ (((gl_WorkGroupSize))), (~ (((gl_WorkGroupSize)))) | (~ (((gl_WorkGroupSize))))), ~ (((gl_WorkGroupSize)))))))))) >> uvec3(0u, 0u, 0u)), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(((gl_WorkGroupSize)), (((gl_WorkGroupSize))) - uvec3(0u, 0u, 0u)), (_GLF_IDENTITY(((_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) - uvec3(0u, 0u, 0u)))), min(((gl_WorkGroupSize)), ((gl_WorkGroupSize))))) >> uvec3(0u, 0u, 0u)), (_GLF_IDENTITY(((gl_WorkGroupSize)), (_GLF_IDENTITY(((gl_WorkGroupSize)), min(((gl_WorkGroupSize)), (_GLF_IDENTITY((gl_WorkGroupSize), (true ? (gl_WorkGroupSize) : _GLF_FUZZED(max((write_val / uvec3(50546u, 191562u, 192754u)), subgroup_id)))))))) >> uvec3(0u, 0u, 0u))) | (_GLF_IDENTITY(_GLF_IDENTITY(((gl_WorkGroupSize)), (_GLF_IDENTITY(((gl_WorkGroupSize)), min(((gl_WorkGroupSize)), _GLF_IDENTITY(((gl_WorkGroupSize)), clamp(((gl_WorkGroupSize)), _GLF_IDENTITY(((gl_WorkGroupSize)), ~ (_GLF_IDENTITY(~ (((gl_WorkGroupSize))), (true ? ~ (((gl_WorkGroupSize))) : _GLF_FUZZED(uvec3(37255u, 69849u, 169546u)))))), ((gl_WorkGroupSize))))))) >> uvec3(0u, 0u, 0u)), uvec3(uvec3(_GLF_IDENTITY(((gl_WorkGroupSize)), (_GLF_IDENTITY(((gl_WorkGroupSize)), min(((gl_WorkGroupSize)), ((gl_WorkGroupSize))))) >> uvec3(0u, 0u, 0u))))))))), _GLF_IDENTITY(_GLF_IDENTITY(((gl_WorkGroupSize)), uvec3(0u, 0u, 0u) | (_GLF_IDENTITY(((gl_WorkGroupSize)), (false ? _GLF_FUZZED(uvec3(81548u, 16026u, 121306u)) : ((gl_WorkGroupSize)))))), ~ (~ (((gl_WorkGroupSize))))), ((gl_WorkGroupSize))))) - uvec3(0u, 0u, _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) | (0u))) | (0u)))))), _GLF_IDENTITY(gl_WorkGroupSize, max(gl_WorkGroupSize, _GLF_IDENTITY(gl_WorkGroupSize, _GLF_IDENTITY((gl_WorkGroupSize), uvec3(0u, 0u, 0u) ^ _GLF_IDENTITY(_GLF_IDENTITY(((gl_WorkGroupSize)), (_GLF_IDENTITY(((gl_WorkGroupSize)), (false ? _GLF_FUZZED(uvec3(85007u, 149882u, 113373u)) : _GLF_IDENTITY(((gl_WorkGroupSize)), clamp(((gl_WorkGroupSize)), ((gl_WorkGroupSize)), ((gl_WorkGroupSize))))))) >> uvec3(0u, 0u, 0u)), clamp(_GLF_IDENTITY(_GLF_IDENTITY(((gl_WorkGroupSize)), (_GLF_IDENTITY(((gl_WorkGroupSize)), min(((gl_WorkGroupSize)), ((_GLF_IDENTITY(gl_WorkGroupSize, max(_GLF_IDENTITY(gl_WorkGroupSize, max(gl_WorkGroupSize, _GLF_IDENTITY(gl_WorkGroupSize, clamp(gl_WorkGroupSize, gl_WorkGroupSize, gl_WorkGroupSize)))), gl_WorkGroupSize))))))) >> uvec3(0u, 0u, 0u)), clamp(_GLF_IDENTITY(((gl_WorkGroupSize)), (_GLF_IDENTITY(((gl_WorkGroupSize)), min((_GLF_IDENTITY((gl_WorkGroupSize), uvec3(_GLF_IDENTITY(uvec3(_GLF_IDENTITY((gl_WorkGroupSize), ((gl_WorkGroupSize)) - uvec3(0u, 0u, 0u))), (false ? _GLF_FUZZED(uvec3(65806u, 113803u, 132012u)) : uvec3(_GLF_IDENTITY((gl_WorkGroupSize), ((gl_WorkGroupSize)) - uvec3(0u, 0u, 0u)))))))), ((gl_WorkGroupSize))))) >> uvec3(0u, 0u, 0u)), _GLF_IDENTITY(_GLF_IDENTITY(((gl_WorkGroupSize)), ~ (~ (((gl_WorkGroupSize))))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(((gl_WorkGroupSize)), (((gl_WorkGroupSize))) << uvec3(0u, 0u, 0u)), ~ (~ (_GLF_IDENTITY(((gl_WorkGroupSize)), (((gl_WorkGroupSize))) << uvec3(0u, 0u, 0u))))), min(((gl_WorkGroupSize)), ((gl_WorkGroupSize))))) >> uvec3(0u, 0u, 0u)), _GLF_IDENTITY(_GLF_IDENTITY(((gl_WorkGroupSize)), (_GLF_IDENTITY(_GLF_IDENTITY(((gl_WorkGroupSize)), (((gl_WorkGroupSize))) ^ uvec3(0u, 0u, 0u)), min(((gl_WorkGroupSize)), ((gl_WorkGroupSize))))) >> uvec3(_GLF_IDENTITY(0u, (0u) >> 0u), 0u, 0u)), (_GLF_IDENTITY(((gl_WorkGroupSize)), (_GLF_IDENTITY(_GLF_IDENTITY(((gl_WorkGroupSize)), (_GLF_IDENTITY(((gl_WorkGroupSize)), min(((gl_WorkGroupSize)), _GLF_IDENTITY(((gl_WorkGroupSize)), (((gl_WorkGroupSize))) << uvec3(0u, _GLF_IDENTITY(0u, uint(_GLF_ZERO(0.0, injectionSwitch.x)) | (0u)), 0u))))) | (((gl_WorkGroupSize)))), min(((gl_WorkGroupSize)), ((gl_WorkGroupSize))))) >> uvec3(0u, 0u, 0u))) | (_GLF_IDENTITY(((gl_WorkGroupSize)), (_GLF_IDENTITY(((gl_WorkGroupSize)), min(((gl_WorkGroupSize)), ((gl_WorkGroupSize))))) >> uvec3(0u, _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, 0u ^ (0u))) | (0u)), 0u)))))), _GLF_IDENTITY(((gl_WorkGroupSize)), ~ (~ (((gl_WorkGroupSize))))), ((gl_WorkGroupSize))))) - uvec3(0u, 0u, _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) | (0u))) | (0u)))))), _GLF_IDENTITY(gl_WorkGroupSize, max(gl_WorkGroupSize, _GLF_IDENTITY(gl_WorkGroupSize, _GLF_IDENTITY((gl_WorkGroupSize), uvec3(0u, _GLF_IDENTITY(0u, (false ? _GLF_FUZZED((~ num_workgroup)) : 0u)), 0u) ^ _GLF_IDENTITY(((gl_WorkGroupSize)), clamp(_GLF_IDENTITY(_GLF_IDENTITY(((gl_WorkGroupSize)), (_GLF_IDENTITY(((gl_WorkGroupSize)), min(_GLF_IDENTITY(((gl_WorkGroupSize)), uvec3(0u, 0u, 0u) ^ (((gl_WorkGroupSize)))), (_GLF_IDENTITY((gl_WorkGroupSize), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY((gl_WorkGroupSize), max((gl_WorkGroupSize), (gl_WorkGroupSize))), ~ (~ (_GLF_IDENTITY((gl_WorkGroupSize), max((gl_WorkGroupSize), (gl_WorkGroupSize))))))), (~ (_GLF_IDENTITY((gl_WorkGroupSize), max((gl_WorkGroupSize), (gl_WorkGroupSize))))) / uvec3(1u, 1u, 1u)))))))) >> uvec3(_GLF_IDENTITY(0u, (0u) + 0u), 0u, 0u)), clamp(_GLF_IDENTITY(((gl_WorkGroupSize)), (_GLF_IDENTITY(_GLF_IDENTITY(((gl_WorkGroupSize)), (((gl_WorkGroupSize))) / uvec3(1u, 1u, 1u)), min(_GLF_IDENTITY(((gl_WorkGroupSize)), (((gl_WorkGroupSize))) / uvec3(1u, 1u, 1u)), ((gl_WorkGroupSize))))) >> uvec3(0u, 0u, 0u)), _GLF_IDENTITY(((gl_WorkGroupSize)), (_GLF_IDENTITY(((gl_WorkGroupSize)), _GLF_IDENTITY(min(((gl_WorkGroupSize)), ((gl_WorkGroupSize))), ~ (~ (min(((gl_WorkGroupSize)), ((gl_WorkGroupSize)))))))) >> uvec3(0u, 0u, 0u)), _GLF_IDENTITY(_GLF_IDENTITY(((gl_WorkGroupSize)), (_GLF_IDENTITY(((gl_WorkGroupSize)), min(((gl_WorkGroupSize)), ((gl_WorkGroupSize))))) >> uvec3(0u, 0u, 0u)), (_GLF_IDENTITY(((gl_WorkGroupSize)), (_GLF_IDENTITY(_GLF_IDENTITY(((gl_WorkGroupSize)), min(((gl_WorkGroupSize)), ((gl_WorkGroupSize)))), uvec3(uvec3(_GLF_IDENTITY(_GLF_IDENTITY(((gl_WorkGroupSize)), min(((gl_WorkGroupSize)), ((gl_WorkGroupSize)))), (_GLF_IDENTITY(((gl_WorkGroupSize)), min(((gl_WorkGroupSize)), _GLF_IDENTITY(((gl_WorkGroupSize)), (false ? _GLF_FUZZED(uvec3(111657u, 133351u, 85108u)) : ((gl_WorkGroupSize))))))) / uvec3(1u, 1u, 1u)))))) >> uvec3(0u, 0u, 0u))) | (_GLF_IDENTITY(((gl_WorkGroupSize)), (_GLF_IDENTITY(((gl_WorkGroupSize)), min(((gl_WorkGroupSize)), ((gl_WorkGroupSize))))) >> uvec3(0u, 0u, _GLF_IDENTITY(0u, 0u | (_GLF_IDENTITY(0u, (0u) / 1u))))))))), _GLF_IDENTITY(((gl_WorkGroupSize)), ~ (~ (((gl_WorkGroupSize))))), ((gl_WorkGroupSize))))) - uvec3(0u, 0u, _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) | (0u))) | (0u))))))))))) | (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, (false ? _GLF_FUZZED((~ uvec3(46724u, 146198u, 137451u))) : gl_WorkGroupSize)), (_GLF_IDENTITY(gl_WorkGroupSize, (false ? _GLF_FUZZED((~ uvec3(46724u, 146198u, 137451u))) : _GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) >> uvec3(0u, 0u, 0u))))) | uvec3(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), (false ? _GLF_FUZZED(0.5) : _GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), float(_GLF_IDENTITY(mat2x4(_GLF_ZERO(0.0, injectionSwitch.x), 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0), mat2x4(mat2x4(mat2x4(_GLF_ZERO(0.0, injectionSwitch.x), 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0)))))))))))).x))) << 0u);
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(vec2(5872.9442, -8.2).s)), float(injectionSwitch.y), bool(true))), injectionSwitch.y)), injectionSwitch.y, injectionSwitch.y))))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) && true)))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(mat3x2(injectionSwitch, 0.0, determinant(mat3(1.0, 1.0, 1.0, tan(0.0), 1.0, 0.0, determinant(mat4(0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0)), 0.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(_GLF_IDENTITY(1.0, 1.0 * (_GLF_IDENTITY(1.0, min(1.0, 1.0)))), 0.0)), dot(vec2(1.0, 0.0), vec2(1.0, 0.0))))), _GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(0.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0)), dot(vec3(0.0, 0.0, 1.0), vec3(0.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0))), 0.0))).x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(2015.3119)), float(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0), injectionSwitch.x))), bool(true))) > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y))))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(6172.8598)), float(injectionSwitch.x), bool(true))))) > injectionSwitch.y, ! (_GLF_IDENTITY(! _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, float(mat4(injectionSwitch.x, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0)))) - 0.0), injectionSwitch.x)) > injectionSwitch.y)) && true), ! (! (_GLF_IDENTITY(! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)), injectionSwitch, injectionSwitch)), injectionSwitch)).y), true && (! (injectionSwitch.x > injectionSwitch.y)))))))))), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), _GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - sin(vec2(0.0, 0.0))).y), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - sin(vec2(0.0, 0.0))).y))))), bvec2(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true), ! (! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), true && (! (injectionSwitch.x > injectionSwitch.y)))))))))), false || (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch : _GLF_FUZZED(injectionSwitch))).y)))), _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - sin(vec2(0.0, 0.0))).y))), bvec2(bvec2(bvec2(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bool(injectionSwitch.x > injectionSwitch.y)), false || (bool(bool(injectionSwitch.x > injectionSwitch.y)))))))), ((injectionSwitch.x > injectionSwitch.y)) && true), ! (! (_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch : _GLF_FUZZED(injectionSwitch))).x > injectionSwitch.y)))), true && _GLF_IDENTITY((! _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec3((injectionSwitch.x > injectionSwitch.y), true, true)))), _GLF_IDENTITY(bool(bvec3((! _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec3((injectionSwitch.x > injectionSwitch.y), true, true)))), true, true)), ! (! (_GLF_IDENTITY(bool(bvec3((! _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec3((injectionSwitch.x > injectionSwitch.y), true, true)))), true, true)), bool(bvec2(bool(bvec3((! _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec3((injectionSwitch.x > injectionSwitch.y), true, true)))), true, true)), false))))))))))))))), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - sin(vec2(0.0, 0.0))).y))))))), bvec2(bvec2(bvec2(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true), ! (! (_GLF_IDENTITY(! _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false), true && (! (injectionSwitch.x > injectionSwitch.y)))))))))), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - sin(vec2(0.0, 0.0))).y))), bvec2(bvec2(bvec2(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true), ! (! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), true && (! (injectionSwitch.x > injectionSwitch.y)))))))))), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)), (injectionSwitch) - sin(vec2(0.0, _GLF_IDENTITY(0.0, min(0.0, 0.0))))).y))))))))))))), false || (bool(bvec2(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, bool(bvec3(false, true, false)))))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, false || (false))))) && true)))
  barrier();
 if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))), bool(bvec4(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), max(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), float(mat4x2(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0)))))) - 0.0) > injectionSwitch.y))), false, true, false))), (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y)))) && _GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, ! (! (true)))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y))))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
  }
 uint workgroup_id = gl_WorkGroupID.x;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, false, true)), (_GLF_IDENTITY(bool(bvec3(false, false, true)), ! (! (bool(bvec3(false, false, true)))))) || false))))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), bool(_GLF_IDENTITY(bool(_GLF_DEAD(false)), (bool(_GLF_DEAD(false))) && true))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint workgroup_base = workgroup_size * workgroup_id;
 if(_GLF_DEAD(false))
  barrier();
 uint virtual_gid = _GLF_IDENTITY(workgroup_base + subgroup_id * _GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, subgroup_size)), (workgroup_base + subgroup_id * _GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, subgroup_size))) | (_GLF_IDENTITY(workgroup_base + subgroup_id * _GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, subgroup_size)), (workgroup_base + subgroup_id * _GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, subgroup_size))) * 1u))) + _GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY(clamp(subgroup_local_id, subgroup_local_id, subgroup_local_id), min(_GLF_IDENTITY(_GLF_IDENTITY(clamp(subgroup_local_id, subgroup_local_id, subgroup_local_id), (_GLF_IDENTITY(clamp(subgroup_local_id, subgroup_local_id, subgroup_local_id), ~ (~ (_GLF_IDENTITY(clamp(subgroup_local_id, subgroup_local_id, subgroup_local_id), min(clamp(subgroup_local_id, subgroup_local_id, subgroup_local_id), clamp(subgroup_local_id, subgroup_local_id, subgroup_local_id))))))) / 1u), (clamp(subgroup_local_id, subgroup_local_id, subgroup_local_id)) ^ 0u), _GLF_IDENTITY(clamp(subgroup_local_id, subgroup_local_id, subgroup_local_id), uint(uvec2(clamp(subgroup_local_id, subgroup_local_id, subgroup_local_id), uint(_GLF_ZERO(0.0, injectionSwitch.x))))))));
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 atomicStore(write_val, uint(virtual_gid), 4, _GLF_IDENTITY(_GLF_IDENTITY(64, (64) ^ 0), ~ (~ (_GLF_IDENTITY(64, (64) ^ 0)))), 0);
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (true ? _GLF_IDENTITY(injectionSwitch.y, 0.0 + (injectionSwitch.y)) : _GLF_FUZZED(88.08))), (true ? _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, 1.0 * (injectionSwitch.y)), injectionSwitch.y)), min(injectionSwitch.y, injectionSwitch.y)) : _GLF_FUZZED(2.0)))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, (false) || false), (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(bvec4(_GLF_FALSE(_GLF_IDENTITY(false, (false) || false), (injectionSwitch.x > injectionSwitch.y)), false, true, true)), bool(bvec3(bool(bvec4(_GLF_FALSE(_GLF_IDENTITY(false, (false) || false), (injectionSwitch.x > injectionSwitch.y)), false, true, true)), true, false))))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y)))), true && _GLF_IDENTITY((_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)))))))), false || ((_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), (true ? _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)) : _GLF_FUZZED(-5288.8768))) : _GLF_FUZZED(91.75))))))))))))) && true)))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, true, false)), (bool(bvec4(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > injectionSwitch.y)), true, true, false))) || false))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), false, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 uint read_val = atomicLoad(write_val, 4, 64, 0);
 buf[virtual_gid] = uint(subgroupAllEqual(read_val));
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
}
