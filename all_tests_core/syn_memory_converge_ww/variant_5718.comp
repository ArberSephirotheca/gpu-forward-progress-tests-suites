#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer WriteVal {
 uint write_val;
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(injectionSwitch.x > injectionSwitch.y, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
  }
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint subgroup_size = gl_SubgroupSize;
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)).y, bool(bvec3(injectionSwitch.x > injectionSwitch.y, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)))))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint num_workgroup = _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, _GLF_IDENTITY(_GLF_IDENTITY(min(_GLF_IDENTITY(gl_NumWorkGroups, uvec3(gl_NumWorkGroups[0], gl_NumWorkGroups[1], gl_NumWorkGroups[2])), gl_NumWorkGroups), (uvec3(0u, 0u, 0u) >> _GLF_IDENTITY(uvec3(5u), uvec3(5u))) + (min(_GLF_IDENTITY(gl_NumWorkGroups, uvec3(gl_NumWorkGroups[0], gl_NumWorkGroups[1], gl_NumWorkGroups[2])), gl_NumWorkGroups))), uvec3(0u, 0u, 0u) ^ (_GLF_IDENTITY(_GLF_IDENTITY(min(_GLF_IDENTITY(gl_NumWorkGroups, uvec3(gl_NumWorkGroups[0], gl_NumWorkGroups[1], gl_NumWorkGroups[2])), _GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) | (_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) ^ _GLF_IDENTITY(uvec3(0u, 0u, 0u), clamp(uvec3(0u, 0u, 0u), uvec3(0u, 0u, 0u), uvec3(0u, 0u, 0u))))))), uvec3(uvec4(_GLF_IDENTITY(min(_GLF_IDENTITY(gl_NumWorkGroups, uvec3(gl_NumWorkGroups[0], _GLF_IDENTITY(gl_NumWorkGroups[1], 0u | (_GLF_IDENTITY(gl_NumWorkGroups[1], uint(uvec4(gl_NumWorkGroups[1], 0u, 0u, 1u))))), gl_NumWorkGroups[2])), gl_NumWorkGroups), (min(_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) | (gl_NumWorkGroups)), uvec3(gl_NumWorkGroups[0], gl_NumWorkGroups[1], gl_NumWorkGroups[2])), gl_NumWorkGroups)) / uvec3(1u, 1u, 1u)), 0u))), _GLF_IDENTITY(uvec3(uvec3(_GLF_IDENTITY(min(_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, uvec3(gl_NumWorkGroups[0], gl_NumWorkGroups[1], gl_NumWorkGroups[2])), (_GLF_IDENTITY(gl_NumWorkGroups, uvec3(gl_NumWorkGroups[0], gl_NumWorkGroups[1], gl_NumWorkGroups[2]))) / ((uvec3(1u, 1u, 1u) << _GLF_IDENTITY(uvec3(1u), _GLF_IDENTITY(uvec3(1u), ~ (~ (uvec3(1u)))))) >> _GLF_IDENTITY(uvec3(1u), uvec3(1u)))), _GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) | (_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) ^ uvec3(0u, 0u, _GLF_IDENTITY(0u, clamp(0u, 0u, 0u))))))), uvec3(uvec4(_GLF_IDENTITY(min(_GLF_IDENTITY(gl_NumWorkGroups, uvec3(gl_NumWorkGroups[0], gl_NumWorkGroups[1], _GLF_IDENTITY(gl_NumWorkGroups, uvec3(0u, 0u, 0u) ^ (gl_NumWorkGroups))[2])), gl_NumWorkGroups), (min(_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) | (gl_NumWorkGroups)), uvec3(_GLF_IDENTITY(gl_NumWorkGroups, (_GLF_IDENTITY(gl_NumWorkGroups, clamp(_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, (_GLF_IDENTITY(gl_NumWorkGroups, min(gl_NumWorkGroups, gl_NumWorkGroups))) >> uvec3(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))), (gl_NumWorkGroups) | (gl_NumWorkGroups)), _GLF_IDENTITY(gl_NumWorkGroups, uvec3(gl_NumWorkGroups[0], gl_NumWorkGroups[1], gl_NumWorkGroups[2])), gl_NumWorkGroups))) / uvec3(1u, 1u, 1u))[0], gl_NumWorkGroups[1], gl_NumWorkGroups[_GLF_IDENTITY(2, clamp(2, 2, _GLF_IDENTITY(2, (2) ^ _GLF_IDENTITY(0, 0 ^ (0)))))])), gl_NumWorkGroups)) / uvec3(1u, 1u, 1u)), 0u))))), (true ? _GLF_IDENTITY(uvec3(uvec3(_GLF_IDENTITY(min(_GLF_IDENTITY(gl_NumWorkGroups, uvec3(gl_NumWorkGroups[_GLF_IDENTITY(0, 0 ^ (_GLF_IDENTITY(0, 0 | (0))))], gl_NumWorkGroups[1], gl_NumWorkGroups[2])), _GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) | (_GLF_IDENTITY(gl_NumWorkGroups, _GLF_IDENTITY((_GLF_IDENTITY(gl_NumWorkGroups, uvec3(gl_NumWorkGroups[0], gl_NumWorkGroups[1], gl_NumWorkGroups[2]))) ^ _GLF_IDENTITY(uvec3(0u, 0u, 0u), (_GLF_IDENTITY(uvec3(0u, 0u, 0u), uvec3(0u, 0u, 0u) | (uvec3(0u, 0u, 0u)))) ^ uvec3(0u, 0u, 0u)), uvec3(1u, _GLF_IDENTITY(1u, ~ (~ (1u))), 1u) * ((gl_NumWorkGroups) ^ uvec3(0u, 0u, 0u))))))), uvec3(uvec4(_GLF_IDENTITY(min(_GLF_IDENTITY(gl_NumWorkGroups, uvec3(gl_NumWorkGroups[0], gl_NumWorkGroups[1], gl_NumWorkGroups[2])), gl_NumWorkGroups), (min(_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) | (gl_NumWorkGroups)), uvec3(gl_NumWorkGroups[0], gl_NumWorkGroups[1], _GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, uvec3(gl_NumWorkGroups[0], gl_NumWorkGroups[1], _GLF_IDENTITY(gl_NumWorkGroups, (false ? _GLF_FUZZED(uvec3(35423u, 12882u, 72099u)) : gl_NumWorkGroups))[2])), (_GLF_IDENTITY(gl_NumWorkGroups, uvec3(gl_NumWorkGroups[0], gl_NumWorkGroups[1], gl_NumWorkGroups[2]))) / uvec3(1u, 1u, 1u))[2])), gl_NumWorkGroups)) / uvec3(1u, 1u, 1u)), 0u))))), (uvec3(uvec3(_GLF_IDENTITY(min(_GLF_IDENTITY(gl_NumWorkGroups, uvec3(_GLF_IDENTITY(gl_NumWorkGroups, uvec3(0u, 0u, 0u) + (gl_NumWorkGroups))[0], _GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) | (uvec3(0u, 0u, 0u) << _GLF_IDENTITY(uvec3(2u), uvec3(2u))))[_GLF_IDENTITY(1, max(_GLF_IDENTITY(1, (1) | (_GLF_IDENTITY(1, clamp(1, 1, 1)))), _GLF_IDENTITY(1, int(int(1)))))], gl_NumWorkGroups[2])), _GLF_IDENTITY(gl_NumWorkGroups, _GLF_IDENTITY((gl_NumWorkGroups), min((gl_NumWorkGroups), _GLF_IDENTITY((gl_NumWorkGroups), ((gl_NumWorkGroups)) | ((gl_NumWorkGroups))))) | (_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) ^ uvec3(0u, 0u, 0u))))), uvec3(uvec4(_GLF_IDENTITY(min(_GLF_IDENTITY(gl_NumWorkGroups, uvec3(gl_NumWorkGroups[0], gl_NumWorkGroups[1], gl_NumWorkGroups[2])), gl_NumWorkGroups), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((min(_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) | (gl_NumWorkGroups)), uvec3(gl_NumWorkGroups[0], gl_NumWorkGroups[_GLF_IDENTITY(1, (1) - 0)], gl_NumWorkGroups[2])), gl_NumWorkGroups)), (true ? (min(_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) | (gl_NumWorkGroups)), uvec3(gl_NumWorkGroups[0], gl_NumWorkGroups[_GLF_IDENTITY(1, (1) - 0)], gl_NumWorkGroups[2])), gl_NumWorkGroups)) : _GLF_FUZZED(uvec3(132815u, 78554u, 19051u)))), (_GLF_IDENTITY((min(_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) | (gl_NumWorkGroups)), uvec3(gl_NumWorkGroups[0], gl_NumWorkGroups[_GLF_IDENTITY(1, (1) - 0)], gl_NumWorkGroups[2])), gl_NumWorkGroups)), (true ? (min(_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) | (gl_NumWorkGroups)), uvec3(gl_NumWorkGroups[0], gl_NumWorkGroups[_GLF_IDENTITY(1, (1) - 0)], gl_NumWorkGroups[2])), gl_NumWorkGroups)) : _GLF_FUZZED(uvec3(132815u, 78554u, 19051u))))) >> (uvec3(150123u, 69264u, 154103u) & uvec3(0u, 0u, 0u))) / uvec3(1u, 1u, 1u), (_GLF_IDENTITY(_GLF_IDENTITY((min(_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) | (gl_NumWorkGroups)), uvec3(gl_NumWorkGroups[0], gl_NumWorkGroups[_GLF_IDENTITY(1, (1) - 0)], _GLF_IDENTITY(gl_NumWorkGroups[2], (_GLF_IDENTITY(gl_NumWorkGroups[2], (_GLF_IDENTITY(gl_NumWorkGroups[2], max(gl_NumWorkGroups[2], gl_NumWorkGroups[2]))) << 0u)) ^ 0u))), gl_NumWorkGroups)), (true ? (min(_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) | (gl_NumWorkGroups)), uvec3(gl_NumWorkGroups[0], gl_NumWorkGroups[_GLF_IDENTITY(1, (1) - 0)], gl_NumWorkGroups[2])), gl_NumWorkGroups)) : _GLF_FUZZED(uvec3(132815u, 78554u, 19051u)))) / uvec3(1u, 1u, 1u), uvec3(0u, 0u, 0u) + (_GLF_IDENTITY((min(_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) | (gl_NumWorkGroups)), uvec3(gl_NumWorkGroups[0], gl_NumWorkGroups[_GLF_IDENTITY(1, (1) - 0)], gl_NumWorkGroups[2])), gl_NumWorkGroups)), (true ? (min(_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) | (gl_NumWorkGroups)), uvec3(gl_NumWorkGroups[0], gl_NumWorkGroups[_GLF_IDENTITY(1, (1) - 0)], gl_NumWorkGroups[2])), gl_NumWorkGroups)) : _GLF_FUZZED(uvec3(132815u, 78554u, 19051u)))) / uvec3(1u, 1u, 1u)))) | uvec3(0u, 0u, 0u))), 0u)))))) << uvec3(0u, 0u, 0u)) : _GLF_FUZZED(uvec3(55312u, 144239u, 139084u)))))))).x, ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, _GLF_IDENTITY(_GLF_IDENTITY(min(_GLF_IDENTITY(gl_NumWorkGroups, uvec3(gl_NumWorkGroups[0], gl_NumWorkGroups[1], gl_NumWorkGroups[2])), gl_NumWorkGroups), (uvec3(0u, 0u, 0u) >> _GLF_IDENTITY(uvec3(5u), uvec3(5u))) + (min(_GLF_IDENTITY(gl_NumWorkGroups, uvec3(gl_NumWorkGroups[0], gl_NumWorkGroups[1], gl_NumWorkGroups[2])), gl_NumWorkGroups))), uvec3(0u, 0u, 0u) ^ (_GLF_IDENTITY(_GLF_IDENTITY(min(_GLF_IDENTITY(gl_NumWorkGroups, uvec3(gl_NumWorkGroups[0], gl_NumWorkGroups[1], gl_NumWorkGroups[2])), _GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) | (_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) ^ _GLF_IDENTITY(uvec3(0u, 0u, 0u), clamp(uvec3(0u, _GLF_IDENTITY(0u, min(0u, 0u)), 0u), uvec3(0u, 0u, 0u), uvec3(0u, 0u, 0u))))))), uvec3(uvec4(_GLF_IDENTITY(min(_GLF_IDENTITY(gl_NumWorkGroups, uvec3(gl_NumWorkGroups[0], gl_NumWorkGroups[1], gl_NumWorkGroups[2])), gl_NumWorkGroups), (min(_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, _GLF_IDENTITY((gl_NumWorkGroups) | (gl_NumWorkGroups), min((gl_NumWorkGroups) | (gl_NumWorkGroups), _GLF_IDENTITY((gl_NumWorkGroups) | (gl_NumWorkGroups), ~ (~ ((gl_NumWorkGroups) | (gl_NumWorkGroups))))))), uvec3(gl_NumWorkGroups[0], gl_NumWorkGroups[1], gl_NumWorkGroups[2])), gl_NumWorkGroups)) / uvec3(1u, 1u, 1u)), 0u))), _GLF_IDENTITY(uvec3(uvec3(_GLF_IDENTITY(min(_GLF_IDENTITY(gl_NumWorkGroups, uvec3(gl_NumWorkGroups[0], gl_NumWorkGroups[1], gl_NumWorkGroups[2])), _GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) | (_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) ^ uvec3(0u, 0u, _GLF_IDENTITY(0u, clamp(0u, 0u, 0u))))))), uvec3(uvec4(_GLF_IDENTITY(min(_GLF_IDENTITY(gl_NumWorkGroups, uvec3(gl_NumWorkGroups[0], gl_NumWorkGroups[1], _GLF_IDENTITY(gl_NumWorkGroups, uvec3(0u, 0u, 0u) ^ (gl_NumWorkGroups))[2])), gl_NumWorkGroups), (min(_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) | (gl_NumWorkGroups)), uvec3(_GLF_IDENTITY(gl_NumWorkGroups, (_GLF_IDENTITY(gl_NumWorkGroups, clamp(_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) | (gl_NumWorkGroups)), _GLF_IDENTITY(gl_NumWorkGroups, uvec3(gl_NumWorkGroups[0], gl_NumWorkGroups[1], gl_NumWorkGroups[2])), gl_NumWorkGroups))) / uvec3(1u, 1u, 1u))[0], gl_NumWorkGroups[1], gl_NumWorkGroups[_GLF_IDENTITY(2, clamp(2, 2, _GLF_IDENTITY(2, (_GLF_IDENTITY(2, (2) << 0)) ^ _GLF_IDENTITY(0, 0 ^ (0)))))])), gl_NumWorkGroups)) / uvec3(1u, 1u, 1u)), 0u))))), (true ? _GLF_IDENTITY(uvec3(uvec3(_GLF_IDENTITY(min(_GLF_IDENTITY(gl_NumWorkGroups, uvec3(gl_NumWorkGroups[_GLF_IDENTITY(0, 0 ^ (_GLF_IDENTITY(0, 0 | (0))))], gl_NumWorkGroups[1], gl_NumWorkGroups[2])), _GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) | (_GLF_IDENTITY(gl_NumWorkGroups, _GLF_IDENTITY((_GLF_IDENTITY(gl_NumWorkGroups, uvec3(gl_NumWorkGroups[0], gl_NumWorkGroups[1], gl_NumWorkGroups[2]))) ^ _GLF_IDENTITY(uvec3(0u, 0u, 0u), (_GLF_IDENTITY(uvec3(0u, 0u, 0u), uvec3(0u, 0u, 0u) | (uvec3(0u, 0u, 0u)))) ^ uvec3(0u, 0u, 0u)), uvec3(1u, _GLF_IDENTITY(1u, ~ (~ (1u))), 1u) * ((gl_NumWorkGroups) ^ uvec3(0u, 0u, 0u))))))), uvec3(uvec4(_GLF_IDENTITY(min(_GLF_IDENTITY(gl_NumWorkGroups, uvec3(gl_NumWorkGroups[0], gl_NumWorkGroups[1], gl_NumWorkGroups[2])), gl_NumWorkGroups), (min(_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) | (gl_NumWorkGroups)), uvec3(gl_NumWorkGroups[0], gl_NumWorkGroups[1], _GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, uvec3(_GLF_IDENTITY(gl_NumWorkGroups[0], (_GLF_IDENTITY(gl_NumWorkGroups[0], (gl_NumWorkGroups[0]) / (0u | 1u))) - 0u), gl_NumWorkGroups[1], gl_NumWorkGroups[2])), (_GLF_IDENTITY(gl_NumWorkGroups, uvec3(gl_NumWorkGroups[0], gl_NumWorkGroups[1], gl_NumWorkGroups[2]))) / uvec3(1u, 1u, 1u))[2])), gl_NumWorkGroups)) / uvec3(1u, 1u, 1u)), 0u))))), (uvec3(uvec3(_GLF_IDENTITY(min(_GLF_IDENTITY(gl_NumWorkGroups, uvec3(_GLF_IDENTITY(gl_NumWorkGroups, uvec3(0u, 0u, 0u) + (gl_NumWorkGroups))[0], _GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) | (uvec3(0u, 0u, 0u) << _GLF_IDENTITY(uvec3(2u), uvec3(2u))))[1], gl_NumWorkGroups[2])), _GLF_IDENTITY(gl_NumWorkGroups, _GLF_IDENTITY((gl_NumWorkGroups), min((gl_NumWorkGroups), _GLF_IDENTITY((gl_NumWorkGroups), ((gl_NumWorkGroups)) | ((gl_NumWorkGroups))))) | (_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) ^ uvec3(0u, 0u, 0u))))), uvec3(uvec4(_GLF_IDENTITY(min(_GLF_IDENTITY(gl_NumWorkGroups, uvec3(gl_NumWorkGroups[0], gl_NumWorkGroups[1], gl_NumWorkGroups[2])), gl_NumWorkGroups), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((min(_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) | (gl_NumWorkGroups)), uvec3(gl_NumWorkGroups[0], gl_NumWorkGroups[_GLF_IDENTITY(1, (1) - 0)], gl_NumWorkGroups[2])), gl_NumWorkGroups)), (true ? (min(_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) | (gl_NumWorkGroups)), uvec3(gl_NumWorkGroups[0], gl_NumWorkGroups[_GLF_IDENTITY(1, (1) - 0)], gl_NumWorkGroups[2])), gl_NumWorkGroups)) : _GLF_FUZZED(uvec3(132815u, 78554u, 19051u)))) / uvec3(1u, 1u, 1u), (_GLF_IDENTITY(_GLF_IDENTITY((min(_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) | (gl_NumWorkGroups)), uvec3(gl_NumWorkGroups[0], gl_NumWorkGroups[_GLF_IDENTITY(1, (1) - 0)], gl_NumWorkGroups[2])), gl_NumWorkGroups)), (true ? (min(_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) | (gl_NumWorkGroups)), uvec3(gl_NumWorkGroups[0], gl_NumWorkGroups[_GLF_IDENTITY(1, (1) - 0)], gl_NumWorkGroups[2])), gl_NumWorkGroups)) : _GLF_FUZZED(uvec3(132815u, 78554u, 19051u)))) / uvec3(1u, 1u, 1u), uvec3(0u, 0u, 0u) + (_GLF_IDENTITY((min(_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) | (gl_NumWorkGroups)), uvec3(gl_NumWorkGroups[0], gl_NumWorkGroups[_GLF_IDENTITY(1, (1) - 0)], gl_NumWorkGroups[2])), gl_NumWorkGroups)), (true ? (min(_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) | (gl_NumWorkGroups)), uvec3(gl_NumWorkGroups[0], gl_NumWorkGroups[_GLF_IDENTITY(1, (1) - 0)], gl_NumWorkGroups[2])), gl_NumWorkGroups)) : _GLF_FUZZED(uvec3(132815u, 78554u, 19051u)))) / uvec3(1u, 1u, 1u)))) | uvec3(0u, 0u, 0u)), uvec3(uvec4(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((min(_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) | (gl_NumWorkGroups)), uvec3(gl_NumWorkGroups[0], gl_NumWorkGroups[_GLF_IDENTITY(1, (1) - 0)], gl_NumWorkGroups[2])), gl_NumWorkGroups)), (true ? (min(_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) | (gl_NumWorkGroups)), uvec3(gl_NumWorkGroups[0], gl_NumWorkGroups[_GLF_IDENTITY(1, (1) - 0)], gl_NumWorkGroups[2])), gl_NumWorkGroups)) : _GLF_FUZZED(uvec3(132815u, 78554u, 19051u)))) / uvec3(1u, 1u, 1u), (_GLF_IDENTITY(_GLF_IDENTITY((min(_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) | (gl_NumWorkGroups)), uvec3(gl_NumWorkGroups[0], gl_NumWorkGroups[_GLF_IDENTITY(1, (1) - 0)], gl_NumWorkGroups[2])), gl_NumWorkGroups)), (true ? (min(_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) | (gl_NumWorkGroups)), uvec3(gl_NumWorkGroups[0], gl_NumWorkGroups[_GLF_IDENTITY(1, (1) - 0)], gl_NumWorkGroups[2])), gl_NumWorkGroups)) : _GLF_FUZZED(uvec3(132815u, 78554u, 19051u)))) / uvec3(1u, 1u, 1u), uvec3(0u, 0u, 0u) + (_GLF_IDENTITY((min(_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) | (gl_NumWorkGroups)), uvec3(gl_NumWorkGroups[0], gl_NumWorkGroups[_GLF_IDENTITY(1, (1) - 0)], gl_NumWorkGroups[2])), gl_NumWorkGroups)), (true ? (min(_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) | (gl_NumWorkGroups)), uvec3(gl_NumWorkGroups[0], gl_NumWorkGroups[_GLF_IDENTITY(1, (1) - 0)], gl_NumWorkGroups[2])), gl_NumWorkGroups)) : _GLF_FUZZED(uvec3(132815u, 78554u, 19051u)))) / uvec3(1u, 1u, 1u)))) | uvec3(0u, 0u, 0u)), clamp(_GLF_IDENTITY(_GLF_IDENTITY((min(_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) | (gl_NumWorkGroups)), uvec3(gl_NumWorkGroups[0], gl_NumWorkGroups[_GLF_IDENTITY(1, (1) - 0)], gl_NumWorkGroups[2])), gl_NumWorkGroups)), (true ? (min(_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) | (gl_NumWorkGroups)), uvec3(gl_NumWorkGroups[0], gl_NumWorkGroups[_GLF_IDENTITY(1, (1) - 0)], gl_NumWorkGroups[2])), gl_NumWorkGroups)) : _GLF_FUZZED(uvec3(132815u, 78554u, 19051u)))) / uvec3(1u, 1u, 1u), (_GLF_IDENTITY(_GLF_IDENTITY((min(_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) | (gl_NumWorkGroups)), uvec3(gl_NumWorkGroups[0], gl_NumWorkGroups[_GLF_IDENTITY(1, (1) - 0)], gl_NumWorkGroups[2])), gl_NumWorkGroups)), (true ? (min(_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) | (gl_NumWorkGroups)), uvec3(gl_NumWorkGroups[0], gl_NumWorkGroups[_GLF_IDENTITY(1, (1) - 0)], gl_NumWorkGroups[2])), gl_NumWorkGroups)) : _GLF_FUZZED(uvec3(132815u, 78554u, 19051u)))) / uvec3(1u, 1u, 1u), uvec3(0u, 0u, 0u) + (_GLF_IDENTITY((min(_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) | (gl_NumWorkGroups)), uvec3(gl_NumWorkGroups[0], gl_NumWorkGroups[_GLF_IDENTITY(1, (1) - 0)], gl_NumWorkGroups[2])), gl_NumWorkGroups)), (true ? (min(_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) | (gl_NumWorkGroups)), uvec3(gl_NumWorkGroups[0], gl_NumWorkGroups[_GLF_IDENTITY(1, (1) - 0)], gl_NumWorkGroups[2])), gl_NumWorkGroups)) : _GLF_FUZZED(uvec3(132815u, 78554u, 19051u)))) / uvec3(1u, 1u, 1u)))) | uvec3(0u, 0u, 0u)), _GLF_IDENTITY(_GLF_IDENTITY((min(_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) | (gl_NumWorkGroups)), uvec3(gl_NumWorkGroups[0], gl_NumWorkGroups[_GLF_IDENTITY(1, (1) - 0)], gl_NumWorkGroups[2])), gl_NumWorkGroups)), (true ? (min(_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) | (gl_NumWorkGroups)), uvec3(gl_NumWorkGroups[0], gl_NumWorkGroups[_GLF_IDENTITY(1, (1) - 0)], gl_NumWorkGroups[2])), gl_NumWorkGroups)) : _GLF_FUZZED(uvec3(132815u, 78554u, 19051u)))) / uvec3(1u, 1u, 1u), (_GLF_IDENTITY(_GLF_IDENTITY((min(_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) | (gl_NumWorkGroups)), uvec3(gl_NumWorkGroups[0], gl_NumWorkGroups[_GLF_IDENTITY(1, (1) - 0)], gl_NumWorkGroups[2])), gl_NumWorkGroups)), (true ? (min(_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) | (gl_NumWorkGroups)), uvec3(gl_NumWorkGroups[0], gl_NumWorkGroups[_GLF_IDENTITY(1, (1) - 0)], gl_NumWorkGroups[2])), gl_NumWorkGroups)) : _GLF_FUZZED(uvec3(132815u, 78554u, 19051u)))) / uvec3(1u, 1u, 1u), uvec3(0u, 0u, 0u) + (_GLF_IDENTITY((min(_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) | (gl_NumWorkGroups)), uvec3(gl_NumWorkGroups[0], gl_NumWorkGroups[_GLF_IDENTITY(1, (1) - 0)], gl_NumWorkGroups[2])), gl_NumWorkGroups)), (true ? (min(_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) | (gl_NumWorkGroups)), uvec3(gl_NumWorkGroups[0], gl_NumWorkGroups[_GLF_IDENTITY(1, (1) - 0)], gl_NumWorkGroups[2])), gl_NumWorkGroups)) : _GLF_FUZZED(uvec3(132815u, 78554u, 19051u)))) / uvec3(1u, 1u, 1u)))) | uvec3(0u, 0u, 0u)), _GLF_IDENTITY(_GLF_IDENTITY((min(_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) | (gl_NumWorkGroups)), uvec3(gl_NumWorkGroups[0], gl_NumWorkGroups[_GLF_IDENTITY(1, (1) - 0)], gl_NumWorkGroups[2])), gl_NumWorkGroups)), (true ? (min(_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) | (gl_NumWorkGroups)), uvec3(gl_NumWorkGroups[0], gl_NumWorkGroups[_GLF_IDENTITY(1, (1) - 0)], gl_NumWorkGroups[2])), gl_NumWorkGroups)) : _GLF_FUZZED(uvec3(132815u, 78554u, 19051u)))) / uvec3(1u, 1u, 1u), (_GLF_IDENTITY(_GLF_IDENTITY((min(_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) | (gl_NumWorkGroups)), uvec3(gl_NumWorkGroups[0], gl_NumWorkGroups[_GLF_IDENTITY(1, (1) - 0)], gl_NumWorkGroups[2])), gl_NumWorkGroups)), (true ? (min(_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) | (gl_NumWorkGroups)), uvec3(gl_NumWorkGroups[0], gl_NumWorkGroups[_GLF_IDENTITY(1, (1) - 0)], gl_NumWorkGroups[2])), gl_NumWorkGroups)) : _GLF_FUZZED(uvec3(132815u, 78554u, 19051u)))) / uvec3(1u, 1u, 1u), uvec3(0u, 0u, 0u) + (_GLF_IDENTITY((min(_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) | (gl_NumWorkGroups)), uvec3(gl_NumWorkGroups[0], gl_NumWorkGroups[_GLF_IDENTITY(1, (1) - 0)], gl_NumWorkGroups[2])), gl_NumWorkGroups)), (true ? (min(_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) | (gl_NumWorkGroups)), uvec3(gl_NumWorkGroups[0], gl_NumWorkGroups[_GLF_IDENTITY(1, (1) - 0)], gl_NumWorkGroups[2])), gl_NumWorkGroups)) : _GLF_FUZZED(uvec3(132815u, 78554u, 19051u)))) / uvec3(1u, 1u, 1u)))) | uvec3(0u, 0u, 0u)))), (1u ^ 1u))))), 0u)))))) << uvec3(0u, 0u, 0u)) : _GLF_FUZZED(uvec3(55312u, 144239u, 139084u)))))))).x, (_GLF_IDENTITY(gl_NumWorkGroups, _GLF_IDENTITY(_GLF_IDENTITY(min(_GLF_IDENTITY(gl_NumWorkGroups, uvec3(gl_NumWorkGroups[0], gl_NumWorkGroups[1], gl_NumWorkGroups[2])), gl_NumWorkGroups), (uvec3(0u, 0u, 0u) >> _GLF_IDENTITY(uvec3(5u), uvec3(5u))) + (min(_GLF_IDENTITY(gl_NumWorkGroups, uvec3(gl_NumWorkGroups[0], gl_NumWorkGroups[1], gl_NumWorkGroups[2])), gl_NumWorkGroups))), uvec3(0u, 0u, 0u) ^ (_GLF_IDENTITY(_GLF_IDENTITY(min(_GLF_IDENTITY(gl_NumWorkGroups, uvec3(gl_NumWorkGroups[0], gl_NumWorkGroups[1], gl_NumWorkGroups[2])), _GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) | (_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) ^ _GLF_IDENTITY(uvec3(0u, 0u, 0u), clamp(uvec3(0u, _GLF_IDENTITY(0u, min(0u, 0u)), 0u), uvec3(0u, 0u, 0u), uvec3(0u, 0u, 0u))))))), uvec3(uvec4(_GLF_IDENTITY(min(_GLF_IDENTITY(gl_NumWorkGroups, uvec3(gl_NumWorkGroups[0], gl_NumWorkGroups[1], gl_NumWorkGroups[2])), gl_NumWorkGroups), (min(_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, _GLF_IDENTITY((gl_NumWorkGroups) | (gl_NumWorkGroups), min((gl_NumWorkGroups) | (gl_NumWorkGroups), _GLF_IDENTITY((gl_NumWorkGroups) | (gl_NumWorkGroups), ~ (~ ((gl_NumWorkGroups) | (gl_NumWorkGroups))))))), uvec3(gl_NumWorkGroups[0], gl_NumWorkGroups[1], gl_NumWorkGroups[2])), gl_NumWorkGroups)) / uvec3(1u, 1u, 1u)), 0u))), _GLF_IDENTITY(uvec3(uvec3(_GLF_IDENTITY(min(_GLF_IDENTITY(gl_NumWorkGroups, uvec3(gl_NumWorkGroups[0], gl_NumWorkGroups[1], gl_NumWorkGroups[2])), _GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) | (_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) ^ uvec3(0u, 0u, _GLF_IDENTITY(0u, clamp(0u, 0u, 0u))))))), uvec3(uvec4(_GLF_IDENTITY(min(_GLF_IDENTITY(gl_NumWorkGroups, uvec3(gl_NumWorkGroups[0], gl_NumWorkGroups[1], _GLF_IDENTITY(gl_NumWorkGroups, uvec3(0u, 0u, 0u) ^ (gl_NumWorkGroups))[2])), gl_NumWorkGroups), (min(_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) | (gl_NumWorkGroups)), uvec3(_GLF_IDENTITY(gl_NumWorkGroups, (_GLF_IDENTITY(gl_NumWorkGroups, clamp(_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) | (gl_NumWorkGroups)), _GLF_IDENTITY(gl_NumWorkGroups, uvec3(gl_NumWorkGroups[0], gl_NumWorkGroups[1], gl_NumWorkGroups[2])), gl_NumWorkGroups))) / uvec3(1u, 1u, 1u))[0], gl_NumWorkGroups[1], gl_NumWorkGroups[_GLF_IDENTITY(2, clamp(2, 2, _GLF_IDENTITY(2, (_GLF_IDENTITY(2, (2) << 0)) ^ _GLF_IDENTITY(0, 0 ^ (0)))))])), gl_NumWorkGroups)) / uvec3(1u, 1u, 1u)), 0u))))), (true ? _GLF_IDENTITY(uvec3(uvec3(_GLF_IDENTITY(min(_GLF_IDENTITY(gl_NumWorkGroups, uvec3(gl_NumWorkGroups[_GLF_IDENTITY(0, 0 ^ (_GLF_IDENTITY(0, 0 | (0))))], gl_NumWorkGroups[1], gl_NumWorkGroups[2])), _GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) | (_GLF_IDENTITY(gl_NumWorkGroups, _GLF_IDENTITY((_GLF_IDENTITY(gl_NumWorkGroups, uvec3(gl_NumWorkGroups[0], gl_NumWorkGroups[1], gl_NumWorkGroups[2]))) ^ _GLF_IDENTITY(uvec3(0u, 0u, 0u), (_GLF_IDENTITY(uvec3(0u, 0u, 0u), uvec3(0u, 0u, 0u) | (uvec3(0u, 0u, 0u)))) ^ uvec3(0u, 0u, 0u)), uvec3(1u, _GLF_IDENTITY(1u, ~ (~ (1u))), 1u) * ((gl_NumWorkGroups) ^ uvec3(0u, 0u, 0u))))))), uvec3(uvec4(_GLF_IDENTITY(min(_GLF_IDENTITY(gl_NumWorkGroups, uvec3(gl_NumWorkGroups[0], gl_NumWorkGroups[1], gl_NumWorkGroups[2])), gl_NumWorkGroups), (min(_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) | (gl_NumWorkGroups)), uvec3(gl_NumWorkGroups[0], gl_NumWorkGroups[1], _GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, uvec3(_GLF_IDENTITY(gl_NumWorkGroups[0], (_GLF_IDENTITY(gl_NumWorkGroups[0], (gl_NumWorkGroups[0]) / (0u | 1u))) - 0u), gl_NumWorkGroups[1], gl_NumWorkGroups[2])), (_GLF_IDENTITY(gl_NumWorkGroups, uvec3(gl_NumWorkGroups[0], gl_NumWorkGroups[1], gl_NumWorkGroups[2]))) / uvec3(1u, 1u, 1u))[2])), gl_NumWorkGroups)) / uvec3(1u, 1u, 1u)), 0u))))), (uvec3(uvec3(_GLF_IDENTITY(min(_GLF_IDENTITY(gl_NumWorkGroups, uvec3(_GLF_IDENTITY(gl_NumWorkGroups, uvec3(0u, 0u, 0u) + (gl_NumWorkGroups))[0], _GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) | (uvec3(0u, 0u, 0u) << _GLF_IDENTITY(uvec3(2u), uvec3(2u))))[1], gl_NumWorkGroups[2])), _GLF_IDENTITY(gl_NumWorkGroups, _GLF_IDENTITY((gl_NumWorkGroups), min((gl_NumWorkGroups), _GLF_IDENTITY((gl_NumWorkGroups), ((gl_NumWorkGroups)) | ((gl_NumWorkGroups))))) | (_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) ^ uvec3(0u, 0u, 0u))))), uvec3(uvec4(_GLF_IDENTITY(min(_GLF_IDENTITY(gl_NumWorkGroups, uvec3(gl_NumWorkGroups[0], gl_NumWorkGroups[1], gl_NumWorkGroups[2])), gl_NumWorkGroups), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((min(_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) | (gl_NumWorkGroups)), uvec3(gl_NumWorkGroups[0], gl_NumWorkGroups[_GLF_IDENTITY(1, (1) - 0)], gl_NumWorkGroups[2])), gl_NumWorkGroups)), (true ? (min(_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) | (gl_NumWorkGroups)), uvec3(gl_NumWorkGroups[0], gl_NumWorkGroups[_GLF_IDENTITY(1, (1) - 0)], gl_NumWorkGroups[2])), gl_NumWorkGroups)) : _GLF_FUZZED(uvec3(132815u, 78554u, 19051u)))) / uvec3(1u, 1u, 1u), (_GLF_IDENTITY(_GLF_IDENTITY((min(_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) | (gl_NumWorkGroups)), uvec3(gl_NumWorkGroups[0], gl_NumWorkGroups[_GLF_IDENTITY(1, (1) - 0)], gl_NumWorkGroups[2])), gl_NumWorkGroups)), (true ? (min(_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) | (gl_NumWorkGroups)), uvec3(gl_NumWorkGroups[0], gl_NumWorkGroups[_GLF_IDENTITY(1, (1) - 0)], gl_NumWorkGroups[2])), gl_NumWorkGroups)) : _GLF_FUZZED(uvec3(132815u, 78554u, 19051u)))) / uvec3(1u, 1u, 1u), uvec3(0u, 0u, 0u) + (_GLF_IDENTITY((min(_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) | (gl_NumWorkGroups)), uvec3(gl_NumWorkGroups[0], gl_NumWorkGroups[_GLF_IDENTITY(1, (1) - 0)], gl_NumWorkGroups[2])), gl_NumWorkGroups)), (true ? (min(_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) | (gl_NumWorkGroups)), uvec3(gl_NumWorkGroups[0], gl_NumWorkGroups[_GLF_IDENTITY(1, (1) - 0)], gl_NumWorkGroups[2])), gl_NumWorkGroups)) : _GLF_FUZZED(uvec3(132815u, 78554u, 19051u)))) / uvec3(1u, 1u, 1u)))) | uvec3(0u, 0u, 0u)), uvec3(uvec4(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((min(_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) | (gl_NumWorkGroups)), uvec3(gl_NumWorkGroups[0], gl_NumWorkGroups[_GLF_IDENTITY(1, (1) - 0)], gl_NumWorkGroups[2])), gl_NumWorkGroups)), (true ? (min(_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) | (gl_NumWorkGroups)), uvec3(gl_NumWorkGroups[0], gl_NumWorkGroups[_GLF_IDENTITY(1, (1) - 0)], gl_NumWorkGroups[2])), gl_NumWorkGroups)) : _GLF_FUZZED(uvec3(132815u, 78554u, 19051u)))) / uvec3(1u, 1u, 1u), (_GLF_IDENTITY(_GLF_IDENTITY((min(_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) | (gl_NumWorkGroups)), uvec3(gl_NumWorkGroups[0], gl_NumWorkGroups[_GLF_IDENTITY(1, (1) - 0)], gl_NumWorkGroups[2])), gl_NumWorkGroups)), (true ? (min(_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) | (gl_NumWorkGroups)), uvec3(gl_NumWorkGroups[0], gl_NumWorkGroups[_GLF_IDENTITY(1, (1) - 0)], gl_NumWorkGroups[2])), gl_NumWorkGroups)) : _GLF_FUZZED(uvec3(132815u, 78554u, 19051u)))) / uvec3(1u, 1u, 1u), uvec3(0u, 0u, 0u) + (_GLF_IDENTITY((min(_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) | (gl_NumWorkGroups)), uvec3(gl_NumWorkGroups[0], gl_NumWorkGroups[_GLF_IDENTITY(1, (1) - 0)], gl_NumWorkGroups[2])), gl_NumWorkGroups)), (true ? (min(_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) | (gl_NumWorkGroups)), uvec3(gl_NumWorkGroups[0], gl_NumWorkGroups[_GLF_IDENTITY(1, (1) - 0)], gl_NumWorkGroups[2])), gl_NumWorkGroups)) : _GLF_FUZZED(uvec3(132815u, 78554u, 19051u)))) / uvec3(1u, 1u, 1u)))) | uvec3(0u, 0u, 0u)), clamp(_GLF_IDENTITY(_GLF_IDENTITY((min(_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) | (gl_NumWorkGroups)), uvec3(gl_NumWorkGroups[0], gl_NumWorkGroups[_GLF_IDENTITY(1, (1) - 0)], gl_NumWorkGroups[2])), gl_NumWorkGroups)), (true ? (min(_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) | (gl_NumWorkGroups)), uvec3(gl_NumWorkGroups[0], gl_NumWorkGroups[_GLF_IDENTITY(1, (1) - 0)], gl_NumWorkGroups[2])), gl_NumWorkGroups)) : _GLF_FUZZED(uvec3(132815u, 78554u, 19051u)))) / uvec3(1u, 1u, 1u), (_GLF_IDENTITY(_GLF_IDENTITY((min(_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) | (gl_NumWorkGroups)), uvec3(gl_NumWorkGroups[0], gl_NumWorkGroups[_GLF_IDENTITY(1, (1) - 0)], gl_NumWorkGroups[2])), gl_NumWorkGroups)), (true ? (min(_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) | (gl_NumWorkGroups)), uvec3(gl_NumWorkGroups[0], gl_NumWorkGroups[_GLF_IDENTITY(1, (1) - 0)], gl_NumWorkGroups[2])), gl_NumWorkGroups)) : _GLF_FUZZED(uvec3(132815u, 78554u, 19051u)))) / uvec3(1u, 1u, 1u), uvec3(0u, 0u, 0u) + (_GLF_IDENTITY((min(_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) | (gl_NumWorkGroups)), uvec3(gl_NumWorkGroups[0], gl_NumWorkGroups[_GLF_IDENTITY(1, (1) - 0)], gl_NumWorkGroups[2])), gl_NumWorkGroups)), (true ? (min(_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) | (gl_NumWorkGroups)), uvec3(gl_NumWorkGroups[0], gl_NumWorkGroups[_GLF_IDENTITY(1, (1) - 0)], gl_NumWorkGroups[2])), gl_NumWorkGroups)) : _GLF_FUZZED(uvec3(132815u, 78554u, 19051u)))) / uvec3(1u, 1u, 1u)))) | uvec3(0u, 0u, 0u)), _GLF_IDENTITY(_GLF_IDENTITY((min(_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) | (gl_NumWorkGroups)), uvec3(gl_NumWorkGroups[0], gl_NumWorkGroups[_GLF_IDENTITY(1, (1) - 0)], gl_NumWorkGroups[2])), gl_NumWorkGroups)), (true ? (min(_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) | (gl_NumWorkGroups)), uvec3(gl_NumWorkGroups[0], gl_NumWorkGroups[_GLF_IDENTITY(1, (1) - 0)], gl_NumWorkGroups[2])), gl_NumWorkGroups)) : _GLF_FUZZED(uvec3(132815u, 78554u, 19051u)))) / uvec3(1u, 1u, 1u), (_GLF_IDENTITY(_GLF_IDENTITY((min(_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) | (gl_NumWorkGroups)), uvec3(gl_NumWorkGroups[0], gl_NumWorkGroups[_GLF_IDENTITY(1, (1) - 0)], gl_NumWorkGroups[2])), gl_NumWorkGroups)), (true ? (min(_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) | (gl_NumWorkGroups)), uvec3(gl_NumWorkGroups[0], gl_NumWorkGroups[_GLF_IDENTITY(1, (1) - 0)], gl_NumWorkGroups[2])), gl_NumWorkGroups)) : _GLF_FUZZED(uvec3(132815u, 78554u, 19051u)))) / uvec3(1u, 1u, 1u), uvec3(0u, 0u, 0u) + (_GLF_IDENTITY((min(_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) | (gl_NumWorkGroups)), uvec3(gl_NumWorkGroups[0], gl_NumWorkGroups[_GLF_IDENTITY(1, (1) - 0)], gl_NumWorkGroups[2])), gl_NumWorkGroups)), (true ? (min(_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) | (gl_NumWorkGroups)), uvec3(gl_NumWorkGroups[0], gl_NumWorkGroups[_GLF_IDENTITY(1, (1) - 0)], gl_NumWorkGroups[2])), gl_NumWorkGroups)) : _GLF_FUZZED(uvec3(132815u, 78554u, 19051u)))) / uvec3(1u, 1u, 1u)))) | uvec3(0u, 0u, 0u)), _GLF_IDENTITY(_GLF_IDENTITY((min(_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) | (gl_NumWorkGroups)), uvec3(gl_NumWorkGroups[0], gl_NumWorkGroups[_GLF_IDENTITY(1, (1) - 0)], gl_NumWorkGroups[2])), gl_NumWorkGroups)), (true ? (min(_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) | (gl_NumWorkGroups)), uvec3(gl_NumWorkGroups[0], gl_NumWorkGroups[_GLF_IDENTITY(1, (1) - 0)], gl_NumWorkGroups[2])), gl_NumWorkGroups)) : _GLF_FUZZED(uvec3(132815u, 78554u, 19051u)))) / uvec3(1u, 1u, 1u), (_GLF_IDENTITY(_GLF_IDENTITY((min(_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) | (gl_NumWorkGroups)), uvec3(gl_NumWorkGroups[0], gl_NumWorkGroups[_GLF_IDENTITY(1, (1) - 0)], gl_NumWorkGroups[2])), gl_NumWorkGroups)), (true ? (min(_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) | (gl_NumWorkGroups)), uvec3(gl_NumWorkGroups[0], gl_NumWorkGroups[_GLF_IDENTITY(1, (1) - 0)], gl_NumWorkGroups[2])), gl_NumWorkGroups)) : _GLF_FUZZED(uvec3(132815u, 78554u, 19051u)))) / uvec3(1u, 1u, 1u), uvec3(0u, 0u, 0u) + (_GLF_IDENTITY((min(_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) | (gl_NumWorkGroups)), uvec3(gl_NumWorkGroups[0], gl_NumWorkGroups[_GLF_IDENTITY(1, (1) - 0)], gl_NumWorkGroups[2])), gl_NumWorkGroups)), (true ? (min(_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) | (gl_NumWorkGroups)), uvec3(gl_NumWorkGroups[0], gl_NumWorkGroups[_GLF_IDENTITY(1, (1) - 0)], gl_NumWorkGroups[2])), gl_NumWorkGroups)) : _GLF_FUZZED(uvec3(132815u, 78554u, 19051u)))) / uvec3(1u, 1u, 1u)))) | uvec3(0u, 0u, 0u)))), (1u ^ 1u))))), 0u)))))) << uvec3(0u, 0u, 0u)) : _GLF_FUZZED(uvec3(55312u, 144239u, 139084u)))))))).x) / 1u)))), (_GLF_IDENTITY(gl_NumWorkGroups, min(_GLF_IDENTITY(gl_NumWorkGroups, _GLF_IDENTITY(_GLF_IDENTITY(uvec3(gl_NumWorkGroups[0], _GLF_IDENTITY(gl_NumWorkGroups[1], (gl_NumWorkGroups[1]) >> uint(_GLF_ZERO(0.0, injectionSwitch.x))), gl_NumWorkGroups[2]), (_GLF_IDENTITY(uvec3(gl_NumWorkGroups[0], _GLF_IDENTITY(gl_NumWorkGroups[1], (gl_NumWorkGroups[1]) >> uint(_GLF_ZERO(0.0, injectionSwitch.x))), gl_NumWorkGroups[2]), (uvec3(gl_NumWorkGroups[0], _GLF_IDENTITY(gl_NumWorkGroups[1], (gl_NumWorkGroups[1]) >> uint(_GLF_ZERO(0.0, injectionSwitch.x))), gl_NumWorkGroups[2])) << uvec3(0u, 0u, 0u))) | (_GLF_IDENTITY(uvec3(gl_NumWorkGroups[0], _GLF_IDENTITY(gl_NumWorkGroups[1], (gl_NumWorkGroups[1]) >> uint(_GLF_ZERO(0.0, injectionSwitch.x))), gl_NumWorkGroups[2]), (uvec3(gl_NumWorkGroups[0], _GLF_IDENTITY(gl_NumWorkGroups[1], (gl_NumWorkGroups[1]) >> uint(_GLF_ZERO(0.0, injectionSwitch.x))), gl_NumWorkGroups[2])) | uvec3(0u, 0u, 0u)))), (uvec3(gl_NumWorkGroups[0], gl_NumWorkGroups[1], gl_NumWorkGroups[2])) >> uvec3(0u, 0u, 0u))), gl_NumWorkGroups)).x) | 0u);
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(-54.08)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))) && _GLF_IDENTITY(true, _GLF_IDENTITY(bool(bool(true)), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(bool(bool(true)), bool(bvec3(bool(bool(true)), false, _GLF_IDENTITY(true, (true) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), false), bvec2(_GLF_IDENTITY(bvec3(bvec2(bool(bool(true)), false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec3(bvec3(bvec3(bvec2(_GLF_IDENTITY(bool(bool(true)), _GLF_IDENTITY(! (! (_GLF_IDENTITY(bool(bool(true)), true && (_GLF_IDENTITY(bool(bool(true)), (bool(bool(true))) && true))))), bool(_GLF_IDENTITY(bvec3(! (! (_GLF_IDENTITY(bool(bool(true)), true && (_GLF_IDENTITY(bool(bool(true)), (bool(bool(true))) && true))))), true, false), bvec3(bvec3(bvec3(! (! (_GLF_IDENTITY(bool(bool(true)), true && (_GLF_IDENTITY(bool(bool(true)), (bool(bool(true))) && true))))), true, false))))))), false), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))) && true), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))) && true), true, false, false)), _GLF_IDENTITY(bool(bool(bool(bvec4(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))) && true), true, false, false)))), true && (bool(bool(bool(bvec4(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))) && true), true, false, false))))))))))))))))))))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 uint workgroup_size = gl_WorkGroupSize.x;
 if(_GLF_DEAD(false))
  barrier();
 uint workgroup_id = gl_WorkGroupID.x;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))))
  barrier();
 uint workgroup_base = _GLF_IDENTITY(_GLF_IDENTITY(workgroup_size * workgroup_id, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? workgroup_size * workgroup_id : _GLF_FUZZED(workgroup_size))), _GLF_IDENTITY((workgroup_size * workgroup_id) << uint(_GLF_ZERO(0.0, injectionSwitch.x)), (true ? (workgroup_size * workgroup_id) << uint(_GLF_ZERO(_GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(1.0) : 0.0)), injectionSwitch.x)) : _GLF_FUZZED((subgroup_size ^ workgroup_id)))));
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(false, _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat4x3(injectionSwitch, 1.0, tan(0.0), 1.0, sin(0.0), 0.0, 1.0, 1.0, 1.0, 1.0, 0.0), (true ? mat4x3(injectionSwitch, 1.0, tan(0.0), 1.0, sin(_GLF_IDENTITY(0.0, 1.0 * (_GLF_IDENTITY(0.0, _GLF_IDENTITY(clamp(0.0, _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-4719.5376)), bool(false))), 0.0), float(vec2(_GLF_IDENTITY(clamp(0.0, _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-4719.5376)), bool(false))), 0.0), (clamp(0.0, _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-4719.5376)), bool(false))), 0.0)) + 0.0), length(vec2(0.0, 0.0))))))))), 0.0, _GLF_IDENTITY(1.0, min(1.0, 1.0)), 1.0, 1.0, 1.0, 0.0) : _GLF_FUZZED(mat4x3(0.1, 86.64, 0.9, 1971.6539, 5.0, -4699.2877, -59.54, -107.225, -352.329, 8.0, -6.4, -59.33)))))).y)), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), (_GLF_IDENTITY(false, bool(bvec4(false, _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat4x3(injectionSwitch, 1.0, tan(0.0), 1.0, sin(0.0), 0.0, _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(-3.7)), bool(false))), 1.0, _GLF_IDENTITY(1.0, (1.0) / cos(log(1.0))), _GLF_IDENTITY(1.0, max(1.0, 1.0)), 0.0), (true ? mat4x3(injectionSwitch, 1.0, tan(0.0), 1.0, sin(0.0), 0.0, _GLF_IDENTITY(1.0, min(1.0, 1.0)), 1.0, _GLF_IDENTITY(1.0, (1.0) / 1.0), 1.0, 0.0) : _GLF_FUZZED(mat4x3(0.1, 86.64, 0.9, 1971.6539, 5.0, -4699.2877, -59.54, -107.225, _GLF_IDENTITY(-352.329, mix(float(_GLF_FUZZED(3.0)), float(-352.329), bool(true))), 8.0, -6.4, -59.33)))))).y)), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) && true)))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 uint virtual_gid = workgroup_base + subgroup_id * subgroup_size + subgroup_local_id;
 if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(! (! ((injectionSwitch.x > injectionSwitch.y))), true && (! (! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(mat2(injectionSwitch.y, 0.0, sqrt(0.0), _GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, (0.0) / _GLF_IDENTITY(1.0, (1.0) + 0.0)), 0.0)))), max(float(mat2(injectionSwitch.y, 0.0, sqrt(0.0), 0.0)), float(mat2(injectionSwitch.y, 0.0, sqrt(0.0), 0.0))))))))))), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(! _GLF_IDENTITY((! ((injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2((! ((injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(true, bool(bvec3(true, true, true)))), bvec2(bvec2(bvec2((! ((injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(true, bool(bvec3(true, true, true)))))))), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2((! ((injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(true, bool(bvec3(true, true, true)))), bvec2(bvec2(bvec2((! ((injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(true, bool(bvec3(true, true, true)))))))), ! (! (bool(_GLF_IDENTITY(bvec2((! ((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)).x > injectionSwitch.y))), _GLF_IDENTITY(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), ! (! (! (true)))))), bool(bvec3(true, true, true)))), bvec2(bvec2(bvec2((! ((injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(true, bool(bvec3(true, true, true))))))))))), false, true, true)), false || (bool(bvec4(_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2((! ((injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(true, bool(bvec3(true, true, true)))), bvec2(bvec2(bvec2((! _GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (((injectionSwitch.x > injectionSwitch.y))), (_GLF_IDENTITY(! (((injectionSwitch.x > injectionSwitch.y))), bool(bvec3(! (((injectionSwitch.x > injectionSwitch.y))), true, true)))) && true)))), _GLF_IDENTITY(true, bool(bvec3(true, true, true)))))))), ! (! (bool(_GLF_IDENTITY(bvec2((! ((injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(true, bool(bvec3(true, true, true)))), bvec2(bvec2(bvec2((! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(_GLF_IDENTITY(vec3(injectionSwitch.y, 0.0, 1.0), min(vec3(injectionSwitch.y, 0.0, 1.0), vec3(injectionSwitch.y, 0.0, 1.0)))))))), _GLF_IDENTITY(true, bool(bvec3(true, true, true))))))))))), false, true, true)))))), true && (! (! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(mat2(injectionSwitch.y, 0.0, _GLF_IDENTITY(sqrt(0.0), (sqrt(0.0)) * _GLF_ONE(1.0, injectionSwitch.y)), 0.0)), max(float(mat2(injectionSwitch.y, 0.0, sqrt(0.0), 0.0)), float(mat2(injectionSwitch.y, 0.0, _GLF_IDENTITY(sqrt(0.0), 1.0 * (_GLF_IDENTITY(sqrt(0.0), float(float(sqrt(0.0)))))), 0.0)))))))))))) || false))), bool(bvec4(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, 0.0 + (injectionSwitch.y)), injectionSwitch.y))), _GLF_IDENTITY(! (! ((injectionSwitch.x > injectionSwitch.y))), true && (! (! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(mat2(injectionSwitch.y, _GLF_IDENTITY(0.0, min(0.0, 0.0)), sqrt(0.0), 0.0)), max(float(mat2(injectionSwitch.y, 0.0, sqrt(0.0), 0.0)), float(mat2(injectionSwitch.y, 0.0, _GLF_IDENTITY(sqrt(0.0), (true ? sqrt(0.0) : _GLF_FUZZED(5011.0409))), 0.0))))))))))))), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && true), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(float(injectionSwitch.x)), max(float(float(injectionSwitch.x)), float(float(injectionSwitch.x))))) < injectionSwitch.y)) && _GLF_IDENTITY((_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(_GLF_IDENTITY(mat4(injectionSwitch.y, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 1.0, _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), 1.0, 0.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(1.0, 0.0, 1.0)), dot(vec3(0.0, 1.0, 0.0), vec3(1.0, _GLF_IDENTITY(0.0, (0.0) * cos(0.0)), 1.0))), 1.0, 0.0, 1.0, 1.0, 0.0), (mat4(injectionSwitch.y, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(1.0, 0.0, 1.0)), dot(vec3(0.0, 1.0, 0.0), vec3(1.0, 0.0, 1.0))), 1.0, 0.0, 1.0, 1.0, 0.0)) / mat4(1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0))))))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true))))))), ! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(_GLF_IDENTITY(mat4(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y, _GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), clamp(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y))), 0.0, _GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(1.0, 0.0, 1.0)), dot(vec3(0.0, 1.0, 0.0), vec3(1.0, 0.0, _GLF_IDENTITY(1.0, mix(_GLF_IDENTITY(float(_GLF_IDENTITY(1.0, _GLF_IDENTITY(float(mat3(1.0, abs(1.0), 0.0, 1.0, 1.0, _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), _GLF_ONE(1.0, injectionSwitch.y), 0.0, sin(0.0))), float(mat3x2(float(mat3(1.0, abs(1.0), 0.0, 1.0, 1.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, sin(0.0))), 1.0, 0.0, _GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(9.1)), float(1.0), bool(true)))) / 1.0), _GLF_IDENTITY(1.0, sqrt(1.0) * (1.0)), 0.0))))), max(float(_GLF_IDENTITY(1.0, _GLF_IDENTITY(float(mat3(1.0, abs(1.0), 0.0, 1.0, 1.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, sin(0.0))), float(mat3x2(float(mat3(1.0, abs(1.0), 0.0, 1.0, 1.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, sin(0.0))), 1.0, 0.0, 1.0, 1.0, 0.0))))), float(_GLF_IDENTITY(1.0, _GLF_IDENTITY(float(mat3(1.0, abs(1.0), 0.0, 1.0, 1.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, sin(0.0))), float(mat3x2(float(mat3(1.0, abs(1.0), 0.0, 1.0, 1.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, sin(0.0))), 1.0, 0.0, 1.0, 1.0, 0.0))))))), float(_GLF_FUZZED(32.22)), _GLF_IDENTITY(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || false)))))), 1.0, 0.0, 1.0, 1.0, 0.0), (mat4(injectionSwitch.y, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(1.0, 0.0, 1.0)), _GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(1.0, 0.0, _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(6.3) : 1.0)))), 0.0 + (dot(vec3(0.0, 1.0, _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(53.66)))), vec3(1.0, 0.0, 1.0))))), _GLF_IDENTITY(1.0, _GLF_IDENTITY(float(mat4(1.0, 1.0, 0.0, 1.0, 1.0, 0.0, tan(sqrt(0.0)), sqrt(1.0), 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0)), min(float(mat4(1.0, 1.0, 0.0, 1.0, 1.0, 0.0, tan(sqrt(0.0)), sqrt(1.0), 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0)), float(mat4(1.0, 1.0, 0.0, 1.0, 1.0, 0.0, tan(_GLF_IDENTITY(sqrt(0.0), (_GLF_IDENTITY(sqrt(0.0), clamp(sqrt(0.0), sqrt(0.0), sqrt(0.0)))) - 0.0)), sqrt(1.0), 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0))))), 0.0, 1.0, 1.0, 0.0)) / mat4(1.0, 1.0, 1.0, 1.0, 1.0, 1.0, _GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(6031.0508) : 1.0))) / 1.0), 1.0, _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0))))))), _GLF_IDENTITY(! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true)))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true))))))))), bool(bvec3(_GLF_IDENTITY(! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true)))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true))))))))), (! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true)))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true)))))))))) || false), true, false)))))))) && true)), true && ((_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(_GLF_IDENTITY(mat4(injectionSwitch.y, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 1.0, 1.0, _GLF_IDENTITY(1.0, _GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x) + (1.0), mix(float(_GLF_FUZZED(4.8)), float(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x) + (1.0), clamp(_GLF_ZERO(0.0, injectionSwitch.x) + (1.0), _GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x) + (1.0), clamp(_GLF_ZERO(0.0, injectionSwitch.x) + (1.0), _GLF_ZERO(0.0, injectionSwitch.x) + (1.0), _GLF_ZERO(0.0, injectionSwitch.x) + (1.0))), _GLF_ZERO(0.0, injectionSwitch.x) + (1.0)))), bool(true)))), 0.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(1.0, 0.0, 1.0)), dot(vec3(0.0, 1.0, 0.0), vec3(1.0, 0.0, 1.0))), 1.0, 0.0, 1.0, 1.0, 0.0), (_GLF_IDENTITY(mat4(injectionSwitch.y, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(1.0, 0.0, 1.0)), dot(vec3(0.0, 1.0, 0.0), vec3(1.0, _GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, max(0.0, 0.0)), _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-7631.5544))))), 1.0))), 1.0, 0.0, 1.0, 1.0, 0.0), (mat4(injectionSwitch.y, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(1.0, 0.0, 1.0)), dot(vec3(0.0, 1.0, 0.0), vec3(1.0, 0.0, 1.0))), 1.0, 0.0, 1.0, 1.0, 0.0)) + mat4(0.0, 0.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))) / mat4(1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, _GLF_IDENTITY(1.0, (1.0) / _GLF_IDENTITY(dot(vec4(1.0, _GLF_ZERO(0.0, injectionSwitch.x), sqrt(0.0), 0.0), vec4(1.0, 0.0, 0.0, 0.0)), dot(vec4(1.0, _GLF_ZERO(0.0, injectionSwitch.x), sqrt(0.0), 0.0), vec4(1.0, 0.0, 0.0, 0.0)))), 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0))))))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true))))))), ! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(_GLF_IDENTITY(mat4(injectionSwitch.y, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec3(0.0, 1.0, _GLF_IDENTITY(0.0, (0.0) - 0.0)), vec3(1.0, 0.0, 1.0)), dot(vec3(0.0, 1.0, 0.0), vec3(1.0, 0.0, _GLF_IDENTITY(1.0, mix(float(_GLF_IDENTITY(1.0, _GLF_IDENTITY(float(mat3(1.0, abs(1.0), 0.0, 1.0, 1.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, sin(0.0))), float(mat3x2(float(mat3(1.0, abs(1.0), 0.0, 1.0, 1.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, sin(0.0))), 1.0, 0.0, 1.0, 1.0, 0.0))))), float(_GLF_FUZZED(32.22)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), 1.0, 0.0, 1.0, 1.0, 0.0), (mat4(injectionSwitch.y, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(922.880)), float(_GLF_IDENTITY(0.0, max(0.0, 0.0))), bool(true))))), 1.0, _GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(1.0, 0.0, 1.0)), dot(vec3(0.0, 1.0, 0.0), vec3(1.0, 0.0, 1.0))), 1.0, 0.0, 1.0, 1.0, 0.0)) / mat4(1.0, 1.0, 1.0, 1.0, _GLF_IDENTITY(1.0, float(_GLF_IDENTITY(vec3(1.0, 0.0, log(1.0)), (vec3(1.0, 0.0, log(1.0))) * mat3(1.0)))), 1.0, _GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(6031.0508) : 1.0))) / 1.0), 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0))))))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true))))))))))) && true))))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), bool(bvec4(! (injectionSwitch.x > injectionSwitch.y), false, true, false)))))), _GLF_IDENTITY(! (! ((_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(-5.9) : _GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)))) > injectionSwitch.y))), _GLF_IDENTITY(true && (! _GLF_IDENTITY(_GLF_IDENTITY((! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(mat2(injectionSwitch.y, 0.0, sqrt(0.0), 0.0)), max(float(mat2(injectionSwitch.y, 0.0, _GLF_IDENTITY(sqrt(0.0), mix(float(_GLF_FUZZED(-902.894)), float(sqrt(0.0)), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), 0.0)), float(mat2(_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)), injectionSwitch)).y, 0.0, sqrt(0.0), 0.0)))))))), ! (! (_GLF_IDENTITY((! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(mat2(injectionSwitch.y, 0.0, sqrt(0.0), 0.0)), max(float(mat2(injectionSwitch.y, 0.0, _GLF_IDENTITY(sqrt(0.0), mix(float(_GLF_FUZZED(-902.894)), float(sqrt(0.0)), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), 0.0)), float(mat2(_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)), injectionSwitch)).y, 0.0, sqrt(0.0), 0.0)))))))), _GLF_IDENTITY(bool(bvec4((! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(mat2(injectionSwitch.y, 0.0, sqrt(0.0), 0.0)), max(float(mat2(injectionSwitch.y, 0.0, _GLF_IDENTITY(sqrt(0.0), mix(float(_GLF_FUZZED(-902.894)), float(sqrt(0.0)), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), 0.0)), float(mat2(_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)), injectionSwitch)).y, 0.0, sqrt(0.0), 0.0)))))))), false, false, true)), bool(bvec2(bool(bvec4((! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(mat2(injectionSwitch.y, 0.0, sqrt(0.0), 0.0)), max(float(mat2(injectionSwitch.y, 0.0, _GLF_IDENTITY(sqrt(0.0), mix(float(_GLF_FUZZED(-902.894)), float(sqrt(0.0)), bool(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(-7.0), _GLF_FUZZED(-306.636)), bvec2(false, false))).y))))), 0.0)), float(mat2(_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)), injectionSwitch)).y, 0.0, sqrt(0.0), 0.0)))))))), false, false, true)), true))))))), true && ((! ((_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(mat2(injectionSwitch.y, 0.0, sqrt(0.0), 0.0)), max(float(mat2(injectionSwitch.y, 0.0, sqrt(_GLF_IDENTITY(0.0, (0.0) - 0.0)), 0.0)), float(_GLF_IDENTITY(mat2(injectionSwitch.y, 0.0, sqrt(0.0), 0.0), (mat2(injectionSwitch.y, 0.0, sqrt(0.0), 0.0)) - mat2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))))))), ! (! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(mat2(injectionSwitch.y, 0.0, sqrt(0.0), 0.0)), max(float(mat2(injectionSwitch.y, 0.0, sqrt(_GLF_IDENTITY(0.0, (0.0) - 0.0)), 0.0)), float(_GLF_IDENTITY(mat2(injectionSwitch.y, 0.0, sqrt(0.0), 0.0), (mat2(injectionSwitch.y, 0.0, sqrt(0.0), 0.0)) - mat2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)))))))))))))))), false || (_GLF_IDENTITY(true && (! (! ((_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(mat2(injectionSwitch.y, 0.0, sqrt(0.0), 0.0)), max(float(mat2(injectionSwitch.y, 0.0, sqrt(0.0), 0.0)), float(mat2(_GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(752.054)), bool(false))), 0.0, sqrt(0.0), 0.0))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(mat2(injectionSwitch.y, 0.0, sqrt(0.0), 0.0)), max(float(mat2(injectionSwitch.y, 0.0, sqrt(0.0), 0.0)), float(mat2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(mat4(injectionSwitch, 0.0, exp(0.0), _GLF_ONE(1.0, injectionSwitch.y), 1.0, _GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(1.0, determinant(mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0)), 0.0)), _GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(1.0, determinant(mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0)), 0.0)), mix(float(_GLF_FUZZED(-938.662)), float(dot(vec3(1.0, 0.0, 0.0), vec3(1.0, determinant(mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0)), 0.0))), bool(true)))), 0.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 1.0, tan(0.0), sqrt(1.0), 1.0, 1.0))).y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(752.054)), bool(false))), 0.0, sqrt(0.0), 0.0))))), false || (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(mat2(injectionSwitch.y, 0.0, sqrt(0.0), 0.0)), max(float(mat2(injectionSwitch.y, 0.0, sqrt(0.0), 0.0)), float(mat2(_GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(752.054)), bool(false))), 0.0, sqrt(0.0), 0.0)))))))), ! (! (! (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(mat2(injectionSwitch.y, 0.0, sqrt(0.0), 0.0)), max(_GLF_IDENTITY(float(mat2(injectionSwitch.y, 0.0, sqrt(0.0), 0.0)), 0.0 + (_GLF_IDENTITY(float(mat2(injectionSwitch.y, 0.0, sqrt(0.0), 0.0)), float(mat3x4(float(mat2(injectionSwitch.y, 0.0, sqrt(0.0), 0.0)), 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0))))), float(mat2(_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(mix(float(injectionSwitch.y), float(_GLF_FUZZED(752.054)), bool(false)), min(mix(float(injectionSwitch.y), float(_GLF_FUZZED(752.054)), _GLF_IDENTITY(bool(false), ! (! (_GLF_IDENTITY(bool(false), bool(bool(bool(false)))))))), mix(float(injectionSwitch.y), float(_GLF_FUZZED(752.054)), bool(false))))), 0.0, sqrt(0.0), 0.0))))), false || (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(mat2(injectionSwitch.y, 0.0, sqrt(0.0), 0.0)), max(float(mat2(injectionSwitch.y, 0.0, sqrt(0.0), 0.0)), float(mat2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0))), injectionSwitch.y)), mix(float(injectionSwitch.y), float(_GLF_FUZZED(752.054)), bool(false))), 0.0, sqrt(0.0), 0.0))))))))))))))))), bool(bool(true && (! (! ((_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(mat2(injectionSwitch.y, 0.0, sqrt(0.0), 0.0)), max(float(mat2(injectionSwitch.y, 0.0, sqrt(0.0), 0.0)), float(mat2(_GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(752.054)), bool(false))), 0.0, sqrt(0.0), 0.0))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(mat2(injectionSwitch.y, _GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-2.4)))) + length(vec2(0.0, 0.0))), sqrt(0.0), 0.0)), max(float(mat2(injectionSwitch.y, 0.0, sqrt(0.0), 0.0)), float(mat2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, abs(0.0) + (injectionSwitch.y)), injectionSwitch.y)), mix(float(injectionSwitch.y), float(_GLF_FUZZED(752.054)), bool(false))), 0.0, _GLF_IDENTITY(sqrt(0.0), min(sqrt(0.0), sqrt(0.0))), 0.0))))), false || (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(mat2(injectionSwitch.y, 0.0, sqrt(0.0), 0.0)), max(float(mat2(injectionSwitch.y, 0.0, sqrt(0.0), 0.0)), float(mat2(_GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(752.054)), bool(false))), 0.0, sqrt(0.0), 0.0)))))))), ! (! (! (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(mat2(injectionSwitch.y, 0.0, sqrt(0.0), 0.0)), max(float(mat2(injectionSwitch.y, 0.0, sqrt(0.0), 0.0)), float(mat2(_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(mix(float(injectionSwitch.y), float(_GLF_FUZZED(_GLF_IDENTITY(752.054, min(752.054, _GLF_IDENTITY(752.054, min(752.054, 752.054)))))), bool(false)), min(mix(float(injectionSwitch.y), float(_GLF_FUZZED(752.054)), bool(false)), mix(float(injectionSwitch.y), float(_GLF_FUZZED(752.054)), bool(false))))), 0.0, sqrt(0.0), 0.0))))), _GLF_IDENTITY(false || (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(mat2(injectionSwitch.y, 0.0, sqrt(0.0), 0.0)), max(float(mat2(injectionSwitch.y, 0.0, sqrt(0.0), 0.0)), float(mat2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y)), mix(float(injectionSwitch.y), float(_GLF_FUZZED(752.054)), bool(false))), 0.0, sqrt(0.0), 0.0)))))), bool(_GLF_IDENTITY(bvec2(false || (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(mat2(injectionSwitch.y, 0.0, sqrt(0.0), 0.0)), max(float(mat2(injectionSwitch.y, 0.0, sqrt(0.0), 0.0)), float(mat2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y)), mix(float(injectionSwitch.y), float(_GLF_FUZZED(752.054)), bool(false))), 0.0, sqrt(0.0), 0.0)))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bvec2(bvec2(bvec2(false || (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(mat2(injectionSwitch.y, 0.0, sqrt(0.0), 0.0)), max(float(mat2(injectionSwitch.y, 0.0, sqrt(0.0), 0.0)), float(mat2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y)), mix(float(injectionSwitch.y), float(_GLF_FUZZED(752.054)), bool(false))), 0.0, sqrt(0.0), 0.0)))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))))))))))))))))))))))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && true), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(_GLF_IDENTITY(bvec2((injectionSwitch.x > injectionSwitch.y), true), _GLF_IDENTITY(bvec2(bvec3(bvec2((injectionSwitch.x > injectionSwitch.y), true), true)), bvec2(bvec2(bvec2(bvec3(bvec2((injectionSwitch.x > injectionSwitch.y), true), true)))))))), ! (! ((injectionSwitch.x > injectionSwitch.y)))))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bool(false))), (injectionSwitch.x > injectionSwitch.y))))))) && true))), bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(! (! ((injectionSwitch.x > injectionSwitch.y))), true && (! (! ((_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat2x4(injectionSwitch, 0.0, 0.0, 0.0, sqrt(1.0), 1.0, 0.0), (mat2x4(injectionSwitch, 0.0, 0.0, 0.0, sqrt(1.0), 1.0, 0.0)) * mat2(_GLF_ONE(1.0, injectionSwitch.y))))).x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(mat2(injectionSwitch.y, 0.0, sqrt(0.0), 0.0)), max(float(mat2(injectionSwitch.y, 0.0, sqrt(0.0), 0.0)), float(mat2(injectionSwitch.y, 0.0, sqrt(0.0), 0.0))))))))))))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && true), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))) && true))), false || (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(! (! ((injectionSwitch.x > injectionSwitch.y))), true && (! (! _GLF_IDENTITY(((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(mat2(injectionSwitch.y, 0.0, sqrt(0.0), 0.0)), max(float(mat2(injectionSwitch.y, 0.0, sqrt(0.0), 0.0)), float(mat2(injectionSwitch.y, 0.0, sqrt(0.0), 0.0))))))), (_GLF_IDENTITY(((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(mat2(injectionSwitch.y, 0.0, sqrt(0.0), 0.0)), max(float(mat2(injectionSwitch.y, 0.0, sqrt(0.0), 0.0)), float(mat2(injectionSwitch.y, 0.0, sqrt(0.0), 0.0))))))), false || (_GLF_IDENTITY(((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(mat2(injectionSwitch.y, 0.0, sqrt(0.0), 0.0)), max(float(mat2(injectionSwitch.y, 0.0, sqrt(0.0), 0.0)), float(mat2(injectionSwitch.y, 0.0, sqrt(0.0), 0.0))))))), true && (((injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(mat2(injectionSwitch.y, 0.0, sqrt(0.0), 0.0)), max(float(mat2(injectionSwitch.y, 0.0, sqrt(0.0), 0.0)), float(mat2(injectionSwitch.y, 0.0, sqrt(0.0), 0.0))))), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(sin(167.011)) : _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(mat2(injectionSwitch.y, 0.0, sqrt(0.0), 0.0)), max(float(mat2(injectionSwitch.y, 0.0, sqrt(0.0), 0.0)), float(mat2(injectionSwitch.y, 0.0, sqrt(0.0), 0.0)))))))))))))) && true))))))), (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, vec2(mat2(injectionSwitch, 0.0, 1.0))), _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)))).x > injectionSwitch.y)))) && true), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).y))))))) && true)))))), bool(bvec2(bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(_GLF_IDENTITY(! (! ((injectionSwitch.x > injectionSwitch.y))), (_GLF_IDENTITY(! (! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(-374.796) : injectionSwitch.y))))), bool(bvec4(! (! ((injectionSwitch.x > injectionSwitch.y))), true, true, true)))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), true && (! (! ((injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0))) + vec2(0.0, 0.0)).y, _GLF_IDENTITY(float(_GLF_IDENTITY(mat2(injectionSwitch.y, 0.0, sqrt(0.0), 0.0), (true ? mat2(injectionSwitch.y, 0.0, sqrt(0.0), 0.0) : _GLF_IDENTITY(_GLF_FUZZED((+ mat2(-827.393, -62.17, 9.5, -778.164))), transpose(_GLF_IDENTITY(transpose(_GLF_FUZZED((_GLF_IDENTITY(+ mat2(-827.393, -62.17, 9.5, -778.164), mat2(mat4x2(+ mat2(-827.393, -62.17, 9.5, -778.164))))))), mat2(mat3x2(transpose(_GLF_FUZZED((+ mat2(-827.393, -62.17, 9.5, -778.164)))))))))))), max(_GLF_IDENTITY(float(mat2(injectionSwitch.y, 0.0, sqrt(0.0), 0.0)), (true ? float(mat2(injectionSwitch.y, 0.0, sqrt(0.0), 0.0)) : _GLF_FUZZED(34.07))), float(mat2(injectionSwitch.y, 0.0, sqrt(0.0), 0.0))))))))))))), (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(_GLF_ONE(1.0, injectionSwitch.y))).x > injectionSwitch.y)))) && true), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! _GLF_IDENTITY((! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), false || ((! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))) && true)))), false))), (_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(_GLF_IDENTITY(! (! ((injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_IDENTITY(! (! ((injectionSwitch.x > injectionSwitch.y))), bool(bool(! (! ((injectionSwitch.x > injectionSwitch.y))))))))), true && (! (! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(mat2(injectionSwitch.y, 0.0, sqrt(0.0), 0.0)), max(float(mat2(injectionSwitch.y, _GLF_IDENTITY(0.0, max(0.0, 0.0)), sqrt(0.0), 0.0)), float(mat2(injectionSwitch.y, 0.0, sqrt(0.0), 0.0))))))))))))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && true), _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y, injectionSwitch.y)))) && (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))))), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec2(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))) && true, true && ((_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))) && true))))), false || (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(! (! ((injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(true && (! (! _GLF_IDENTITY(((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(mat2(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), 0.0, sqrt(0.0), 0.0)), max(float(mat2(injectionSwitch.y, 0.0, sqrt(0.0), 0.0)), float(mat2(injectionSwitch.y, 0.0, sqrt(0.0), 0.0))))))), (_GLF_IDENTITY(((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(mat2(injectionSwitch.y, 0.0, sqrt(0.0), 0.0)), max(float(mat2(injectionSwitch.y, 0.0, sqrt(0.0), 0.0)), float(mat2(_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(mat3(injectionSwitch.y, 0.0, 0.0, 1.0, 1.0, 1.0, exp(0.0), 1.0, 0.0)), clamp(_GLF_IDENTITY(float(mat3(injectionSwitch.y, 0.0, 0.0, 1.0, 1.0, 1.0, exp(0.0), 1.0, 0.0)), clamp(float(mat3(injectionSwitch.y, 0.0, 0.0, 1.0, 1.0, 1.0, exp(0.0), 1.0, 0.0)), float(mat3(injectionSwitch.y, 0.0, 0.0, 1.0, 1.0, 1.0, exp(0.0), _GLF_IDENTITY(1.0, float(mat3x4(1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0))), 0.0)), float(mat3(injectionSwitch.y, 0.0, 0.0, 1.0, 1.0, 1.0, exp(0.0), 1.0, 0.0)))), _GLF_IDENTITY(float(mat3(injectionSwitch.y, 0.0, 0.0, 1.0, 1.0, 1.0, exp(0.0), 1.0, 0.0)), float(vec4(float(mat3(injectionSwitch.y, 0.0, 0.0, 1.0, 1.0, 1.0, exp(0.0), 1.0, 0.0)), 0.0, 0.0, 1.0))), float(mat3(injectionSwitch.y, 0.0, 0.0, 1.0, 1.0, 1.0, exp(0.0), 1.0, 0.0))))), 0.0, sqrt(0.0), 0.0))))))), false || (_GLF_IDENTITY(((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(mat2(injectionSwitch.y, 0.0, sqrt(0.0), 0.0)), max(float(mat2(injectionSwitch.y, 0.0, sqrt(0.0), 0.0)), float(mat2(injectionSwitch.y, 0.0, sqrt(0.0), 0.0))))))), true && (((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(mat2(injectionSwitch.y, 0.0, sqrt(0.0), 0.0)), max(float(mat2(injectionSwitch.y, 0.0, sqrt(0.0), 0.0)), float(mat2(injectionSwitch.y, 0.0, sqrt(0.0), 0.0)))))))))))) && true))), bool(_GLF_IDENTITY(bvec3(true && (! (! _GLF_IDENTITY(((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(mat2(injectionSwitch.y, 0.0, sqrt(0.0), 0.0)), max(float(mat2(injectionSwitch.y, 0.0, sqrt(0.0), 0.0)), _GLF_IDENTITY(float(mat2(injectionSwitch.y, 0.0, sqrt(0.0), 0.0)), (float(mat2(injectionSwitch.y, 0.0, sqrt(0.0), 0.0))) - 0.0)))))), (_GLF_IDENTITY(((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(mat2(injectionSwitch.y, 0.0, sqrt(0.0), 0.0)), max(float(mat2(injectionSwitch.y, 0.0, sqrt(0.0), 0.0)), float(mat2(injectionSwitch.y, 0.0, sqrt(0.0), 0.0))))))), false || (_GLF_IDENTITY(((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(mat2(injectionSwitch.y, 0.0, sqrt(0.0), 0.0)), max(float(mat2(injectionSwitch.y, 0.0, sqrt(0.0), 0.0)), float(mat2(injectionSwitch.y, 0.0, sqrt(0.0), 0.0))))))), true && (((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(mat2(injectionSwitch.y, 0.0, sqrt(0.0), 0.0)), max(float(mat2(injectionSwitch.y, 0.0, sqrt(0.0), 0.0)), float(mat2(injectionSwitch.y, 0.0, sqrt(0.0), 0.0)))))))))))) && true))), false, _GLF_IDENTITY(false, (false) || false)), _GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY(bvec3(true && (! (! _GLF_IDENTITY(((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(mat2(injectionSwitch.y, 0.0, sqrt(0.0), 0.0)), max(float(mat2(injectionSwitch.y, 0.0, sqrt(0.0), 0.0)), _GLF_IDENTITY(float(mat2(injectionSwitch.y, 0.0, sqrt(0.0), 0.0)), (float(mat2(injectionSwitch.y, 0.0, sqrt(0.0), 0.0))) - 0.0)))))), (_GLF_IDENTITY(((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(mat2(injectionSwitch.y, 0.0, sqrt(0.0), 0.0)), max(float(mat2(injectionSwitch.y, 0.0, sqrt(0.0), 0.0)), float(mat2(injectionSwitch.y, 0.0, sqrt(0.0), 0.0))))))), false || (_GLF_IDENTITY(((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(mat2(injectionSwitch.y, 0.0, sqrt(0.0), 0.0)), max(float(mat2(injectionSwitch.y, 0.0, sqrt(0.0), 0.0)), float(mat2(injectionSwitch.y, 0.0, sqrt(0.0), 0.0))))))), true && (((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(mat2(injectionSwitch.y, 0.0, sqrt(0.0), 0.0)), max(float(mat2(injectionSwitch.y, 0.0, sqrt(0.0), 0.0)), float(mat2(injectionSwitch.y, 0.0, sqrt(0.0), 0.0)))))))))))) && true))), false, _GLF_IDENTITY(false, (false) || false)), bvec3(bvec4(bvec3(true && (! (! _GLF_IDENTITY(((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(mat2(injectionSwitch.y, 0.0, sqrt(0.0), 0.0)), max(float(mat2(injectionSwitch.y, 0.0, sqrt(0.0), 0.0)), _GLF_IDENTITY(float(mat2(injectionSwitch.y, 0.0, sqrt(0.0), 0.0)), (float(mat2(injectionSwitch.y, 0.0, sqrt(0.0), 0.0))) - 0.0)))))), (_GLF_IDENTITY(((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(mat2(injectionSwitch.y, 0.0, sqrt(0.0), 0.0)), max(float(mat2(injectionSwitch.y, 0.0, sqrt(0.0), 0.0)), float(mat2(injectionSwitch.y, 0.0, sqrt(0.0), 0.0))))))), false || (_GLF_IDENTITY(((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(mat2(injectionSwitch.y, 0.0, sqrt(0.0), 0.0)), max(float(mat2(injectionSwitch.y, 0.0, sqrt(0.0), 0.0)), float(mat2(injectionSwitch.y, 0.0, sqrt(0.0), 0.0))))))), true && (((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(mat2(injectionSwitch.y, 0.0, sqrt(0.0), 0.0)), max(float(mat2(injectionSwitch.y, 0.0, sqrt(0.0), 0.0)), float(mat2(injectionSwitch.y, 0.0, sqrt(0.0), 0.0)))))))))))) && true))), false, _GLF_IDENTITY(false, (false) || false)), true))))), bvec3(bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec3(true && (! (! _GLF_IDENTITY(((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(mat2(injectionSwitch.y, 0.0, sqrt(0.0), 0.0)), max(float(mat2(injectionSwitch.y, 0.0, sqrt(0.0), 0.0)), _GLF_IDENTITY(float(mat2(injectionSwitch.y, 0.0, sqrt(0.0), 0.0)), (float(mat2(injectionSwitch.y, 0.0, sqrt(0.0), 0.0))) - 0.0)))))), (_GLF_IDENTITY(((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(mat2(injectionSwitch.y, 0.0, sqrt(0.0), 0.0)), max(float(mat2(injectionSwitch.y, 0.0, sqrt(0.0), 0.0)), float(mat2(injectionSwitch.y, 0.0, sqrt(0.0), 0.0))))))), false || (_GLF_IDENTITY(((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(mat2(injectionSwitch.y, 0.0, sqrt(0.0), 0.0)), max(float(mat2(injectionSwitch.y, 0.0, sqrt(0.0), 0.0)), float(mat2(injectionSwitch.y, 0.0, sqrt(0.0), 0.0))))))), true && (((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(mat2(injectionSwitch.y, 0.0, sqrt(0.0), 0.0)), max(float(mat2(injectionSwitch.y, 0.0, sqrt(0.0), 0.0)), float(mat2(injectionSwitch.y, 0.0, sqrt(0.0), 0.0)))))))))))) && true))), false, _GLF_IDENTITY(false, (false) || false)), bvec3(bvec4(bvec3(true && (! (! _GLF_IDENTITY(((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(mat2(injectionSwitch.y, 0.0, sqrt(0.0), 0.0)), max(float(mat2(injectionSwitch.y, 0.0, sqrt(0.0), 0.0)), _GLF_IDENTITY(float(mat2(injectionSwitch.y, 0.0, sqrt(0.0), 0.0)), (float(mat2(injectionSwitch.y, 0.0, sqrt(0.0), 0.0))) - 0.0)))))), (_GLF_IDENTITY(((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(mat2(injectionSwitch.y, 0.0, sqrt(0.0), 0.0)), max(float(mat2(injectionSwitch.y, 0.0, sqrt(0.0), 0.0)), float(mat2(injectionSwitch.y, 0.0, sqrt(0.0), 0.0))))))), false || (_GLF_IDENTITY(((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(mat2(injectionSwitch.y, 0.0, sqrt(0.0), 0.0)), max(float(mat2(injectionSwitch.y, 0.0, sqrt(0.0), 0.0)), float(mat2(injectionSwitch.y, 0.0, sqrt(0.0), 0.0))))))), true && (((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(mat2(injectionSwitch.y, 0.0, sqrt(0.0), 0.0)), max(float(mat2(injectionSwitch.y, 0.0, sqrt(0.0), 0.0)), float(mat2(injectionSwitch.y, 0.0, sqrt(0.0), 0.0)))))))))))) && true))), false, _GLF_IDENTITY(false, (false) || false)), true))))))))))))))), (_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat2(injectionSwitch, 0.0, 1.0), transpose(_GLF_IDENTITY(transpose(mat2(injectionSwitch, 0.0, 1.0)), (false ? _GLF_FUZZED(mat2(778.348, -2.7, -8837.2028, 43.00)) : _GLF_IDENTITY(transpose(mat2(injectionSwitch, 0.0, 1.0)), (transpose(mat2(injectionSwitch, 0.0, 1.0))) * mat2(1.0)))))))), injectionSwitch)).x > injectionSwitch.y), bool(bvec4((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, vec2(mat2(injectionSwitch, 0.0, 1.0))), injectionSwitch)).x > injectionSwitch.y, bool(bvec2(_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, vec2(mat2(injectionSwitch, 0.0, 1.0))), injectionSwitch)).x > injectionSwitch.y, true)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, true)))))) && _GLF_IDENTITY(true, _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(true), false || (bool(true)))), _GLF_IDENTITY(bool(bool(bool(_GLF_IDENTITY(bool(true), false || (bool(true)))))), ! (! (bool(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(true), false || (bool(true)))), ! (! (bool(_GLF_IDENTITY(bool(true), false || (bool(true))))))))))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))) && true)))))), bool(bvec2(bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(_GLF_IDENTITY(! (! ((injectionSwitch.x > injectionSwitch.y))), true && (! (! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(_GLF_IDENTITY(mat2(injectionSwitch.y, 0.0, sqrt(0.0), 0.0), (true ? mat2(injectionSwitch.y, 0.0, sqrt(0.0), 0.0) : _GLF_FUZZED((+ mat2(-827.393, -62.17, 9.5, -778.164)))))), max(_GLF_IDENTITY(float(mat2(injectionSwitch.y, 0.0, sqrt(0.0), 0.0)), (true ? float(mat2(injectionSwitch.y, 0.0, sqrt(0.0), 0.0)) : _GLF_FUZZED(34.07))), float(mat2(injectionSwitch.y, 0.0, sqrt(0.0), 0.0)))))))))), ! (! (_GLF_IDENTITY(! (! ((_GLF_IDENTITY(injectionSwitch.x, float(mat3x4(_GLF_IDENTITY(injectionSwitch.x, float(mat2x4(injectionSwitch.x, 1.0, 0.0, 1.0, abs(0.0), 0.0, 0.0, 1.0))), 0.0, 1.0, sin(0.0), 1.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0, 1.0, 1.0, 1.0, 1.0))) > injectionSwitch.y))), true && (! (! _GLF_IDENTITY(((injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), (mat2(1.0) * (injectionSwitch)) * mat2(1.0))).y, _GLF_IDENTITY(float(_GLF_IDENTITY(mat2(injectionSwitch.y, 0.0, sqrt(0.0), 0.0), (true ? _GLF_IDENTITY(mat2(injectionSwitch.y, 0.0, sqrt(0.0), 0.0), _GLF_IDENTITY(mat2(mat4x2(_GLF_IDENTITY(mat2(injectionSwitch.y, 0.0, _GLF_IDENTITY(sqrt(0.0), mix(float(_GLF_FUZZED(float(uvec3(155310u, 66608u, 84949u).p))), float(sqrt(0.0)), bool(true))), 0.0), mat2(1.0) * (mat2(injectionSwitch.y, 0.0, sqrt(0.0), 0.0))))), (mat2(mat4x2(_GLF_IDENTITY(_GLF_IDENTITY(mat2(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-6.2)), vec2(_GLF_FUZZED((-8971.4131 + float(-49078))), (injectionSwitch)[1]), bvec2(false, true))).y, 0.0, sqrt(0.0), 0.0), transpose(transpose(mat2(injectionSwitch.y, 0.0, sqrt(0.0), 0.0)))), mat2(1.0) * (mat2(injectionSwitch.y, 0.0, sqrt(0.0), 0.0)))))) / mat2(1.0, 1.0, 1.0, 1.0))) : _GLF_FUZZED((+ _GLF_IDENTITY(mat2(-827.393, -62.17, 9.5, -778.164), transpose(transpose(_GLF_IDENTITY(mat2(-827.393, -62.17, 9.5, -778.164), (mat2(-827.393, -62.17, 9.5, -778.164)) / mat2(1.0, 1.0, 1.0, 1.0)))))))))), _GLF_IDENTITY(max(_GLF_IDENTITY(float(mat2(injectionSwitch.y, 0.0, sqrt(0.0), 0.0)), (true ? float(mat2(injectionSwitch.y, 0.0, sqrt(0.0), _GLF_IDENTITY(0.0, clamp(0.0, 0.0, _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(3.4))))))) : _GLF_FUZZED(34.07))), float(mat2(injectionSwitch.y, 0.0, sqrt(0.0), 0.0))), (max(_GLF_IDENTITY(float(mat2(injectionSwitch.y, 0.0, sqrt(0.0), 0.0)), (true ? float(mat2(injectionSwitch.y, 0.0, sqrt(0.0), _GLF_IDENTITY(0.0, clamp(0.0, 0.0, _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(3.4))))))) : _GLF_FUZZED(34.07))), float(mat2(injectionSwitch.y, 0.0, sqrt(0.0), 0.0)))) * 1.0))))), false || (_GLF_IDENTITY(((_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(_GLF_IDENTITY(mat2(injectionSwitch.y, 0.0, sqrt(0.0), 0.0), (true ? _GLF_IDENTITY(mat2(injectionSwitch.y, 0.0, sqrt(0.0), 0.0), _GLF_IDENTITY(mat2(mat4x2(_GLF_IDENTITY(mat2(injectionSwitch.y, 0.0, sqrt(0.0), 0.0), mat2(1.0) * (mat2(injectionSwitch.y, 0.0, sqrt(0.0), _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED((- -619.290))), bool(false)))))))), (mat2(mat4x2(_GLF_IDENTITY(mat2(injectionSwitch.y, 0.0, sqrt(0.0), 0.0), mat2(1.0) * (mat2(injectionSwitch.y, 0.0, sqrt(0.0), 0.0)))))) / mat2(1.0, 1.0, 1.0, 1.0))) : _GLF_IDENTITY(_GLF_FUZZED((+ mat2(-827.393, -62.17, 9.5, -778.164))), (_GLF_FUZZED((+ mat2(-827.393, -62.17, 9.5, -778.164)))) / mat2(1.0, 1.0, 1.0, 1.0))))), max(_GLF_IDENTITY(float(mat2(injectionSwitch.y, 0.0, sqrt(0.0), _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED((5966.4861 + (-1972.4901 + -1.6)))), bool(false))))), (true ? float(mat2(injectionSwitch.y, 0.0, sqrt(0.0), 0.0)) : _GLF_FUZZED(34.07))), float(mat2(injectionSwitch.y, 0.0, sqrt(0.0), 0.0))))))), (((injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0), _GLF_IDENTITY(float(_GLF_IDENTITY(mat2(injectionSwitch.y, 0.0, sqrt(0.0), 0.0), (true ? _GLF_IDENTITY(mat2(injectionSwitch.y, 0.0, sqrt(0.0), _GLF_IDENTITY(0.0, float(mat2(0.0, 0.0, 0.0, 0.0)))), _GLF_IDENTITY(mat2(mat4x2(_GLF_IDENTITY(mat2(injectionSwitch.y, 0.0, sqrt(0.0), 0.0), mat2(1.0) * (mat2(injectionSwitch.y, 0.0, sqrt(0.0), 0.0))))), (mat2(mat4x2(_GLF_IDENTITY(mat2(injectionSwitch.y, 0.0, sqrt(0.0), 0.0), mat2(1.0) * (mat2(injectionSwitch.y, 0.0, sqrt(0.0), 0.0)))))) / mat2(1.0, 1.0, 1.0, 1.0))) : _GLF_FUZZED((+ mat2(-827.393, -62.17, 9.5, -778.164)))))), max(_GLF_IDENTITY(float(mat2(injectionSwitch.y, 0.0, sqrt(0.0), 0.0)), (true ? float(mat2(injectionSwitch.y, 0.0, sqrt(0.0), 0.0)) : _GLF_FUZZED(34.07))), float(mat2(_GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0), injectionSwitch.y))) * sqrt(1.0)), 0.0, sqrt(0.0), 0.0)))))))) || false)))))))))))), (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(_GLF_ONE(1.0, injectionSwitch.y))).x > injectionSwitch.y)))) && true), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y))), ! (! ((_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y)))))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! _GLF_IDENTITY((! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), false || (_GLF_IDENTITY((! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), _GLF_IDENTITY(bool(bvec3((! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(mat4(injectionSwitch.y, 1.0, 1.0, abs(0.0), 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, determinant(mat2(determinant(mat4(0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0)), 1.0, 0.0, 0.0)), 0.0, _GLF_IDENTITY(dot(vec4(1.0, determinant(mat4(1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0)), 0.0, 0.0), vec4(log(1.0), 0.0, 1.0, cos(0.0))), dot(vec4(1.0, determinant(mat4(1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0)), 0.0, 0.0), vec4(log(1.0), 0.0, 1.0, cos(0.0)))), 0.0))))), _GLF_IDENTITY(false, ! (! (false))))), ! (! (bool(bvec3((! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(false, ! (! (false))))))))))))) && true)))), false)))) && true)))))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) || false)) && true)))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), true && (_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((false), ((false)) || false)))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 atomicStore(write_val, uint(virtual_gid), 4, 64, _GLF_IDENTITY(0, (0) | (0)));
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x > injectionSwitch.y))), _GLF_IDENTITY(true && (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bool(bvec4(true && (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(1.1), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(float(-18966))), bvec2(true, _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)), true && (bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)))))))).x > injectionSwitch.y)))), false, false, false))))) && true))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 uint read_val = atomicLoad(write_val, _GLF_IDENTITY(4, (_GLF_IDENTITY(4, (_GLF_IDENTITY(4, clamp(4, 4, 4))) * 1)) >> 0), 64, 0);
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 buf[virtual_gid] = uint(subgroupAllEqual(read_val));
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
}
