#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer WriteVal {
 uint write_val;
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   do
    {
     return;
    }
   while(_GLF_WRAPPED_LOOP(false));
  }
 uvec4 GLF_merged3_0_2_53_2_1_13_3_1_17GLF_merged2_0_1_14_1_1_14workgroup_baseworkgroup_sizenum_workgroupsubgroup_local_id;
 do
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     else
      {
      }
    }
  }
 while(_GLF_WRAPPED_LOOP(false));
 uvec2 GLF_merged2_0_1_14_1_1_14workgroup_baseworkgroup_size;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_WRAPPED_IF_FALSE(false))
  {
  }
 else
  {
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
    }
   else
    {
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, float(_GLF_IDENTITY(vec4(injectionSwitch.x, log(1.0), 1.0, exp(0.0)), max(vec4(injectionSwitch.x, log(1.0), 1.0, exp(_GLF_IDENTITY(0.0, (0.0) / 1.0))), vec4(injectionSwitch.x, log(1.0), 1.0, exp(0.0)))))) > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false)) && true))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
         if(_GLF_DEAD(false))
          {
           do
            {
             return;
            }
           while(_GLF_WRAPPED_LOOP(false));
          }
        }
       do
        {
         for(int _injected_loop_counter = ((1 << _GLF_IDENTITY(int(_GLF_IDENTITY(0, (0) >> 0)), int(0))) >> _GLF_IDENTITY(int(_GLF_IDENTITY(_GLF_IDENTITY(0, _GLF_IDENTITY((true ? _GLF_IDENTITY(_GLF_IDENTITY(0, (0) | 0), (0) / 1) : _GLF_FUZZED(5025)), clamp((true ? _GLF_IDENTITY(_GLF_IDENTITY(0, (0) | 0), (0) / 1) : _GLF_FUZZED(5025)), _GLF_IDENTITY((true ? _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(0, (0) | 0), (_GLF_IDENTITY(0, (0) | 0)) | (_GLF_IDENTITY(0, (0) | 0))), (0) / 1) : _GLF_FUZZED(5025)), 1 * ((true ? _GLF_IDENTITY(_GLF_IDENTITY(0, (0) | 0), (0) / 1) : _GLF_FUZZED(5025)))), _GLF_IDENTITY((true ? _GLF_IDENTITY(_GLF_IDENTITY(0, (0) | 0), (0) / 1) : _GLF_FUZZED(5025)), ((true ? _GLF_IDENTITY(_GLF_IDENTITY(0, (0) | 0), (0) / 1) : _GLF_FUZZED(5025))) >> 0)))), 0 ^ (0))), int(0))); _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_injected_loop_counter != 0, (_GLF_IDENTITY(_injected_loop_counter != 0, false || (_injected_loop_counter != 0))) && true), false || (_injected_loop_counter != 0)), _GLF_IDENTITY(true, bool(bvec3(true, true, false))) && (_injected_loop_counter != 0))); _injected_loop_counter --)
          {
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_DEAD(false))
            break;
           barrier();
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            {
             if(_GLF_DEAD(false))
              return;
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              break;
             barrier();
            }
           if(_GLF_DEAD(false))
            break;
          }
         if(_GLF_DEAD(false))
          return;
        }
       while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y))))));
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(injectionSwitch.x > injectionSwitch.y, true, _GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), false || (_GLF_IDENTITY(false, true && (false)))), false))), bool(bvec4(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(mat2x4(injectionSwitch, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0)))), (true ? max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(mat2x4(injectionSwitch, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0)))) : _GLF_FUZZED(injectionSwitch)))).y, false, true, true)))) && _GLF_IDENTITY(true, bool(_GLF_IDENTITY(bvec2(true, false), bvec2(bvec2(bvec2(true, false)))))))))))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            return;
           barrier();
          }
         return;
         if(_GLF_DEAD(false))
          barrier();
        }
      }
    }
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, true && (injectionSwitch.x < injectionSwitch.y))))), _GLF_IDENTITY((_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && ((_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))) || false))
  {
   if(_GLF_DEAD(false))
    return;
   _GLF_IDENTITY(GLF_merged3_0_2_53_2_1_13_3_1_17GLF_merged2_0_1_14_1_1_14workgroup_baseworkgroup_sizenum_workgroupsubgroup_local_id.xy = GLF_merged2_0_1_14_1_1_14workgroup_baseworkgroup_size, (_GLF_IDENTITY(GLF_merged3_0_2_53_2_1_13_3_1_17GLF_merged2_0_1_14_1_1_14workgroup_baseworkgroup_sizenum_workgroupsubgroup_local_id.xy = GLF_merged2_0_1_14_1_1_14workgroup_baseworkgroup_size, uvec2(0u, _GLF_IDENTITY(0u, (false ? _GLF_FUZZED(write_val) : 0u))) + (GLF_merged3_0_2_53_2_1_13_3_1_17GLF_merged2_0_1_14_1_1_14workgroup_baseworkgroup_sizenum_workgroupsubgroup_local_id.xy = GLF_merged2_0_1_14_1_1_14workgroup_baseworkgroup_size))) << uvec2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)));
  }
 else
  {
  }
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
  barrier();
 for(int _injected_loop_counter = _GLF_IDENTITY(1, int(_GLF_IDENTITY(int(1), (int(1)) | 0))); _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, false || (false))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, false)), ! (! (bool(bvec4(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, false || (false))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, false)))))), (injectionSwitch.x > injectionSwitch.y))))
      {
       for(int _injected_loop_counter = int(_GLF_ZERO(0.0, injectionSwitch.x)); _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
        {
         if(_GLF_WRAPPED_IF_FALSE(false))
          {
          }
         else
          {
           barrier();
          }
        }
      }
     return;
     if(_GLF_DEAD(false))
      barrier();
    }
  }
 for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != (1 ^ 0)); _injected_loop_counter ++)
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) || _GLF_IDENTITY(false, false || (false)))) && true)))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), _GLF_IDENTITY(true, true && (true)) && (bool(bool(false)))))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch.x : _GLF_FUZZED(660.139))), clamp(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0))))[0], injectionSwitch[1])).x), float(_GLF_FUZZED(-9652.5704)), bool(_GLF_IDENTITY(false, true && (false))))), injectionSwitch.x, injectionSwitch.x)), _GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(min(injectionSwitch.x, injectionSwitch.x), (min(injectionSwitch.x, injectionSwitch.x)) / _GLF_ONE(1.0, injectionSwitch.y))), _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * _GLF_ONE(1.0, injectionSwitch.y)))) > injectionSwitch.y))))
      {
       if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, ! (! (true)))))
        {
         barrier();
        }
       else
        {
        }
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
      {
       barrier();
       if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))
        barrier();
       if(_GLF_DEAD(false))
        break;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     else
      {
      }
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 uint subgroup_size = gl_SubgroupSize;
 uint subgroup_local_id = gl_SubgroupInvocationID;
 GLF_merged3_0_2_53_2_1_13_3_1_17GLF_merged2_0_1_14_1_1_14workgroup_baseworkgroup_sizenum_workgroupsubgroup_local_id.w = subgroup_local_id;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).x > _GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)), injectionSwitch, injectionSwitch)).y)))) || false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_WRAPPED_IF_TRUE(true))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), (_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))) || false))
          {
           barrier();
           if(_GLF_DEAD(false))
            return;
          }
         else
          {
          }
        }
      }
     else
      {
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED((7.7 * 3.2))), bool(false))) < injectionSwitch.y))))
      {
       barrier();
      }
     else
      {
      }
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, false || (false)), (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))))))
        {
        }
       else
        {
         barrier();
        }
      }
    }
   barrier();
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))
  barrier();
 uint num_workgroup = gl_NumWorkGroups.x;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, true, true, true)), _GLF_IDENTITY(! (! (bool(bvec4(false, true, true, true)))), true && (! (! (bool(bvec4(false, true, true, true)))))))), (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, true, true, _GLF_IDENTITY(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (true)))), _GLF_IDENTITY(! (! (bool(bvec4(false, true, true, true)))), true && (! (! (bool(bvec4(false, true, true, true))))))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))
  {
   for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != ((((1 << _GLF_IDENTITY(int(7), int(7))) >> _GLF_IDENTITY(int(7), _GLF_IDENTITY(int(7), ~ (~ (_GLF_IDENTITY(int(7), clamp(int(7), int(7), int(7)))))))) << _GLF_IDENTITY(int(_GLF_IDENTITY(7, (7) ^ 0)), int(7))) >> _GLF_IDENTITY(int(7), _GLF_IDENTITY(int(7), (int(7)) - 0)))); _injected_loop_counter ++)
    {
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, (false) || false)))), true && (_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, (false) || false))), (_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, (false) || false)))) && true)))))
      barrier();
     if(_GLF_WRAPPED_IF_TRUE(true))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)))
        {
         if(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)), bool(bool(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)), bool(bvec3(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)), false, true))))))), ! (! (! (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)), bool(bool(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)), bool(bvec3(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)), false, true)))))))))))))
          {
          }
         else
          {
           return;
          }
        }
      }
     else
      {
      }
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! (false))))))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     for(int _injected_loop_counter = ((1 << _GLF_IDENTITY(int(1), _GLF_IDENTITY(int(1), ~ (~ (int(1)))))) >> _GLF_IDENTITY(int(1), _GLF_IDENTITY(_GLF_IDENTITY(int(1), clamp(int(1), int(1), int(1))), _GLF_IDENTITY(_GLF_IDENTITY(int(ivec4(_GLF_IDENTITY(int(1), clamp(int(1), int(1), int(1))), 0, 1, (1 ^ 1))), (int(ivec4(_GLF_IDENTITY(int(1), clamp(int(1), int(1), int(1))), 0, 1, (1 ^ 1)))) | (int(ivec4(_GLF_IDENTITY(int(1), clamp(int(1), int(1), int(1))), 0, 1, (1 ^ 1))))), 0 ^ (_GLF_IDENTITY(_GLF_IDENTITY(int(ivec4(_GLF_IDENTITY(int(1), clamp(int(1), int(1), int(1))), 0, 1, (1 ^ 1))), (int(ivec4(_GLF_IDENTITY(int(1), clamp(int(1), int(1), int(1))), 0, 1, (1 ^ 1)))) | (int(ivec4(_GLF_IDENTITY(int(1), clamp(int(1), int(1), int(1))), 0, 1, (1 ^ 1))))), (_GLF_IDENTITY(int(ivec4(_GLF_IDENTITY(int(1), clamp(int(1), int(1), int(1))), 0, 1, (1 ^ 1))), (int(ivec4(_GLF_IDENTITY(int(1), clamp(int(1), int(1), int(1))), 0, 1, (1 ^ 1)))) | (int(ivec4(_GLF_IDENTITY(int(1), clamp(int(1), int(1), int(1))), 0, 1, (1 ^ 1)))))) / 1)))))); _GLF_WRAPPED_LOOP(_injected_loop_counter != _GLF_IDENTITY(0, int(ivec3(_GLF_IDENTITY(0, clamp(_GLF_IDENTITY(0, ~ (~ (0))), 0, 0)), ((1 << _GLF_IDENTITY(int(7), _GLF_IDENTITY(int(7), (int(7)) ^ 0))) >> _GLF_IDENTITY(int(7), int(7))), 0)))); _injected_loop_counter --)
      {
       barrier();
      }
    }
   barrier();
  }
 GLF_merged3_0_2_53_2_1_13_3_1_17GLF_merged2_0_1_14_1_1_14workgroup_baseworkgroup_sizenum_workgroupsubgroup_local_id.z = num_workgroup;
 if(_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, (false) && true)))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))).y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(bvec4(! (false), _GLF_IDENTITY(true, ! (! (true))), false, false)))))))
    {
    }
   else
    {
     barrier();
    }
  }
 if(_GLF_DEAD(false))
  barrier();
 uint workgroup_size = gl_WorkGroupSize.x;
 if(_GLF_WRAPPED_IF_TRUE(true))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_DEAD(false), false, true))))
    barrier();
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
    }
   else
    {
     if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
      }
     else
      {
       do
        {
         if(_GLF_WRAPPED_IF_TRUE(true))
          {
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_DEAD(false))
            {
             for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
              {
               barrier();
              }
            }
           if(_GLF_WRAPPED_IF_FALSE(false))
            {
            }
           else
            {
             GLF_merged3_0_2_53_2_1_13_3_1_17GLF_merged2_0_1_14_1_1_14workgroup_baseworkgroup_sizenum_workgroupsubgroup_local_id.xy.y = _GLF_IDENTITY(_GLF_IDENTITY(workgroup_size, (workgroup_size) | _GLF_IDENTITY((_GLF_IDENTITY(workgroup_size, (false ? _GLF_FUZZED(num_workgroup) : workgroup_size))), uint(uvec3(_GLF_IDENTITY((_GLF_IDENTITY(workgroup_size, (false ? _GLF_FUZZED(num_workgroup) : workgroup_size))), (_GLF_IDENTITY((_GLF_IDENTITY(workgroup_size, _GLF_IDENTITY((false ? _GLF_FUZZED(num_workgroup) : workgroup_size), ~ (~ (_GLF_IDENTITY((false ? _GLF_FUZZED(num_workgroup) : workgroup_size), ~ (~ ((false ? _GLF_FUZZED(num_workgroup) : workgroup_size))))))))), ((_GLF_IDENTITY(workgroup_size, (false ? _GLF_FUZZED(num_workgroup) : workgroup_size)))) | ((_GLF_IDENTITY(workgroup_size, (false ? _GLF_FUZZED(num_workgroup) : workgroup_size)))))) << 0u), (0u << _GLF_IDENTITY(uint(0u), uint(0u))), 1u)))), uint(uint(_GLF_IDENTITY(workgroup_size, (workgroup_size) | _GLF_IDENTITY((_GLF_IDENTITY(workgroup_size, (false ? _GLF_FUZZED(num_workgroup) : workgroup_size))), uint(uvec3(_GLF_IDENTITY((_GLF_IDENTITY(workgroup_size, (false ? _GLF_FUZZED(num_workgroup) : workgroup_size))), (_GLF_IDENTITY((_GLF_IDENTITY(workgroup_size, _GLF_IDENTITY((false ? _GLF_FUZZED(num_workgroup) : workgroup_size), ~ (~ (_GLF_IDENTITY((false ? _GLF_FUZZED(num_workgroup) : workgroup_size), ~ (~ ((false ? _GLF_FUZZED(num_workgroup) : workgroup_size))))))))), ((_GLF_IDENTITY(workgroup_size, (false ? _GLF_FUZZED(num_workgroup) : workgroup_size)))) | ((_GLF_IDENTITY(workgroup_size, (false ? _GLF_FUZZED(num_workgroup) : workgroup_size)))))) << 0u), (0u << _GLF_IDENTITY(uint(0u), uint(0u))), 1u)))))));
            }
          }
         else
          {
          }
        }
       while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
      }
    }
  }
 else
  {
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_DEAD(false))))
  {
   for(int _injected_loop_counter = 1; _GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter != (0 >> _GLF_IDENTITY(int(1), int(1)))), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter != (0 >> _GLF_IDENTITY(int(1), int(1)))), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter != (0 >> _GLF_IDENTITY(int(1), _GLF_IDENTITY(int(1), (int(1)) << 0)))), bool(_GLF_IDENTITY(bool(_GLF_WRAPPED_LOOP(_injected_loop_counter != (0 >> _GLF_IDENTITY(int(1), int(1))))), (bool(_GLF_WRAPPED_LOOP(_injected_loop_counter != (0 >> _GLF_IDENTITY(int(1), int(1)))))) && true)))), (bool(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter != (0 >> _GLF_IDENTITY(int(1), int(1)))), bool(bool(_GLF_WRAPPED_LOOP(_injected_loop_counter != (_GLF_IDENTITY(0, (0) / int(_GLF_ONE(1.0, injectionSwitch.y))) >> _GLF_IDENTITY(int(1), int(1))))))))) || false))), true, false)), (bool(bvec3(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter != (0 >> _GLF_IDENTITY(int(1), int(1)))), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter != (0 >> _GLF_IDENTITY(int(1), int(1)))), bool(bool(_GLF_WRAPPED_LOOP(_injected_loop_counter != (0 >> _GLF_IDENTITY(int(1), int(1)))))))), (_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter != (0 >> _GLF_IDENTITY(int(1), int(1)))), bool(bool(_GLF_WRAPPED_LOOP(_injected_loop_counter != (0 >> _GLF_IDENTITY(int(1), int(1)))))))), bool(_GLF_IDENTITY(bool(bool(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter != (0 >> _GLF_IDENTITY(int(1), int(1)))), bool(bool(_GLF_WRAPPED_LOOP(_injected_loop_counter != (0 >> _GLF_IDENTITY(int(1), int(1))))))))), bool(bvec4(bool(bool(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter != (0 >> _GLF_IDENTITY(int(1), int(1)))), bool(bool(_GLF_WRAPPED_LOOP(_injected_loop_counter != (0 >> _GLF_IDENTITY(int(1), int(1))))))))), true, false, true)))))) || false))), _GLF_IDENTITY(true, ! (! (true))), false))) || false)); _injected_loop_counter --)
    {
     for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
      {
       barrier();
      }
    }
   if(_GLF_DEAD(false))
    return;
  }
 uint workgroup_id = gl_WorkGroupID.x;
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     for(int _injected_loop_counter = _GLF_IDENTITY((0 << _GLF_IDENTITY(_GLF_IDENTITY(int(5), int(5)), (_GLF_IDENTITY(_GLF_IDENTITY(int(5), int(5)), (_GLF_IDENTITY(int(5), int(5))) << 0)) / 1)), ~ (_GLF_IDENTITY(~ ((0 << _GLF_IDENTITY(_GLF_IDENTITY(int(5), int(ivec4(int(5), 0, 1, 1))), int(5)))), ~ (~ (~ ((0 << _GLF_IDENTITY(int(5), int(5))))))))); _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter < _GLF_IDENTITY(1, (1) - 0), ! (! (_injected_loop_counter < _GLF_IDENTITY(1, (1) - 0))))); _injected_loop_counter ++)
      {
       return;
      }
    }
   if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
    }
   else
    {
     barrier();
    }
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint workgroup_base = _GLF_IDENTITY(GLF_merged3_0_2_53_2_1_13_3_1_17GLF_merged2_0_1_14_1_1_14workgroup_baseworkgroup_sizenum_workgroupsubgroup_local_id.xy, (_GLF_IDENTITY(GLF_merged3_0_2_53_2_1_13_3_1_17GLF_merged2_0_1_14_1_1_14workgroup_baseworkgroup_sizenum_workgroupsubgroup_local_id, max(GLF_merged3_0_2_53_2_1_13_3_1_17GLF_merged2_0_1_14_1_1_14workgroup_baseworkgroup_sizenum_workgroupsubgroup_local_id, GLF_merged3_0_2_53_2_1_13_3_1_17GLF_merged2_0_1_14_1_1_14workgroup_baseworkgroup_sizenum_workgroupsubgroup_local_id)).xy) * _GLF_IDENTITY(uvec2(1u, 1u), (false ? _GLF_FUZZED(uvec2(9051u, 155430u)) : uvec2(1u, 1u)))).y * workgroup_id;
 do
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bvec4(injectionSwitch.x > injectionSwitch.y, true, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), (bool(bvec4(injectionSwitch.x > injectionSwitch.y, true, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) || false)))), false || (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true), true, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), (bool(bvec4(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bvec3(injectionSwitch.x > injectionSwitch.y, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bool(bvec3(bool(bvec3(injectionSwitch.x > injectionSwitch.y, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false, false)))), true, true, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (! (injectionSwitch.x < injectionSwitch.y)))))))) || false))))))));
 if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
  }
 else
  {
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
     if(_GLF_DEAD(false))
      {
       do
        {
         barrier();
        }
       while(_GLF_WRAPPED_LOOP(_GLF_FALSE(_GLF_IDENTITY(false, false || (false)), (injectionSwitch.x > injectionSwitch.y))));
      }
     if(_GLF_DEAD(false))
      return;
    }
   else
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(vec2(9.3, _GLF_IDENTITY(-4602.2829, float(_GLF_IDENTITY(mat4(_GLF_IDENTITY(-4602.2829, (true ? _GLF_IDENTITY(-4602.2829, (false ? _GLF_FUZZED(-479.612) : -4602.2829)) : _GLF_FUZZED(-9107.6121))), 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, log(1.0), cos(0.0), abs(1.0), 1.0, tan(0.0), 0.0, 0.0, 1.0, 1.0), transpose(transpose(mat4(_GLF_IDENTITY(-4602.2829, (true ? _GLF_IDENTITY(-4602.2829, (false ? _GLF_FUZZED(-479.612) : -4602.2829)) : _GLF_FUZZED(-9107.6121))), 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, log(1.0), cos(0.0), abs(1.0), 1.0, tan(0.0), 0.0, 0.0, 1.0, 1.0)))))))) : injectionSwitch)).x > injectionSwitch.y))))
        barrier();
       return;
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (true ? _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + 0.0) : _GLF_FUZZED(-1.5))) > injectionSwitch.y))))
        barrier();
       if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
        }
       else
        {
         if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + 0.0) > injectionSwitch.y))), _GLF_IDENTITY(bool(bvec3(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + 0.0) > injectionSwitch.y))), _GLF_IDENTITY(false, ! (! (false))), true)), _GLF_IDENTITY(! (! (bool(bvec3(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + 0.0) > injectionSwitch.y))), _GLF_IDENTITY(false, ! (! (false))), true)))), bool(_GLF_IDENTITY(bvec2(! (! (bool(bvec3(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + 0.0) > injectionSwitch.y))), _GLF_IDENTITY(false, ! (! (false))), true)))), false), _GLF_IDENTITY(bvec2(bvec4(bvec2(! (! (bool(bvec3(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + 0.0) > injectionSwitch.y))), _GLF_IDENTITY(false, ! (! (false))), true)))), false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)), bvec2(bvec2(bvec2(bvec4(bvec2(! (! (bool(bvec3(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + 0.0) > injectionSwitch.y))), _GLF_IDENTITY(false, ! (! (false))), true)))), false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)))))))))))
          barrier();
        }
       barrier();
      }
    }
  }
 GLF_merged3_0_2_53_2_1_13_3_1_17GLF_merged2_0_1_14_1_1_14workgroup_baseworkgroup_sizenum_workgroupsubgroup_local_id.xy.x = workgroup_base;
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y))))))
  barrier();
 uint virtual_gid = _GLF_IDENTITY(_GLF_IDENTITY(GLF_merged3_0_2_53_2_1_13_3_1_17GLF_merged2_0_1_14_1_1_14workgroup_baseworkgroup_sizenum_workgroupsubgroup_local_id.xy, (GLF_merged3_0_2_53_2_1_13_3_1_17GLF_merged2_0_1_14_1_1_14workgroup_baseworkgroup_sizenum_workgroupsubgroup_local_id.xy) | (_GLF_IDENTITY(GLF_merged3_0_2_53_2_1_13_3_1_17GLF_merged2_0_1_14_1_1_14workgroup_baseworkgroup_sizenum_workgroupsubgroup_local_id.xy, _GLF_IDENTITY((GLF_merged3_0_2_53_2_1_13_3_1_17GLF_merged2_0_1_14_1_1_14workgroup_baseworkgroup_sizenum_workgroupsubgroup_local_id.xy) | uvec2(_GLF_IDENTITY(0u, uint(uvec3(0u, 0u, 0u))), 0u), min(_GLF_IDENTITY((GLF_merged3_0_2_53_2_1_13_3_1_17GLF_merged2_0_1_14_1_1_14workgroup_baseworkgroup_sizenum_workgroupsubgroup_local_id.xy) | uvec2(0u, 0u), (_GLF_IDENTITY((GLF_merged3_0_2_53_2_1_13_3_1_17GLF_merged2_0_1_14_1_1_14workgroup_baseworkgroup_sizenum_workgroupsubgroup_local_id.xy) | uvec2(0u, 0u), ~ (~ ((GLF_merged3_0_2_53_2_1_13_3_1_17GLF_merged2_0_1_14_1_1_14workgroup_baseworkgroup_sizenum_workgroupsubgroup_local_id.xy) | uvec2(0u, 0u))))) + uvec2(0u, 0u)), (GLF_merged3_0_2_53_2_1_13_3_1_17GLF_merged2_0_1_14_1_1_14workgroup_baseworkgroup_sizenum_workgroupsubgroup_local_id.xy) | uvec2(0u, 0u)))))).x + _GLF_IDENTITY(subgroup_id, ~ (~ (_GLF_IDENTITY(subgroup_id, (false ? _GLF_FUZZED(subgroup_size) : subgroup_id))))) * subgroup_size + _GLF_IDENTITY(GLF_merged3_0_2_53_2_1_13_3_1_17GLF_merged2_0_1_14_1_1_14workgroup_baseworkgroup_sizenum_workgroupsubgroup_local_id.w, (0u | 0u) ^ (GLF_merged3_0_2_53_2_1_13_3_1_17GLF_merged2_0_1_14_1_1_14workgroup_baseworkgroup_sizenum_workgroupsubgroup_local_id.w)), max(_GLF_IDENTITY(GLF_merged3_0_2_53_2_1_13_3_1_17GLF_merged2_0_1_14_1_1_14workgroup_baseworkgroup_sizenum_workgroupsubgroup_local_id.xy, (GLF_merged3_0_2_53_2_1_13_3_1_17GLF_merged2_0_1_14_1_1_14workgroup_baseworkgroup_sizenum_workgroupsubgroup_local_id.xy) | (_GLF_IDENTITY(GLF_merged3_0_2_53_2_1_13_3_1_17GLF_merged2_0_1_14_1_1_14workgroup_baseworkgroup_sizenum_workgroupsubgroup_local_id.xy, _GLF_IDENTITY((GLF_merged3_0_2_53_2_1_13_3_1_17GLF_merged2_0_1_14_1_1_14workgroup_baseworkgroup_sizenum_workgroupsubgroup_local_id.xy) | uvec2(_GLF_IDENTITY(0u, uint(uvec3(0u, 0u, 0u))), 0u), min(_GLF_IDENTITY((GLF_merged3_0_2_53_2_1_13_3_1_17GLF_merged2_0_1_14_1_1_14workgroup_baseworkgroup_sizenum_workgroupsubgroup_local_id.xy) | uvec2(0u, 0u), (_GLF_IDENTITY((GLF_merged3_0_2_53_2_1_13_3_1_17GLF_merged2_0_1_14_1_1_14workgroup_baseworkgroup_sizenum_workgroupsubgroup_local_id.xy) | uvec2(0u, 0u), ~ (~ ((GLF_merged3_0_2_53_2_1_13_3_1_17GLF_merged2_0_1_14_1_1_14workgroup_baseworkgroup_sizenum_workgroupsubgroup_local_id.xy) | uvec2(0u, 0u))))) + uvec2(0u, 0u)), (GLF_merged3_0_2_53_2_1_13_3_1_17GLF_merged2_0_1_14_1_1_14workgroup_baseworkgroup_sizenum_workgroupsubgroup_local_id.xy) | uvec2(0u, 0u)))))).x + _GLF_IDENTITY(subgroup_id, ~ (~ (_GLF_IDENTITY(subgroup_id, (false ? _GLF_FUZZED(subgroup_size) : subgroup_id))))) * subgroup_size + _GLF_IDENTITY(GLF_merged3_0_2_53_2_1_13_3_1_17GLF_merged2_0_1_14_1_1_14workgroup_baseworkgroup_sizenum_workgroupsubgroup_local_id.w, (0u | 0u) ^ (GLF_merged3_0_2_53_2_1_13_3_1_17GLF_merged2_0_1_14_1_1_14workgroup_baseworkgroup_sizenum_workgroupsubgroup_local_id.w)), _GLF_IDENTITY(GLF_merged3_0_2_53_2_1_13_3_1_17GLF_merged2_0_1_14_1_1_14workgroup_baseworkgroup_sizenum_workgroupsubgroup_local_id.xy, (GLF_merged3_0_2_53_2_1_13_3_1_17GLF_merged2_0_1_14_1_1_14workgroup_baseworkgroup_sizenum_workgroupsubgroup_local_id.xy) | (_GLF_IDENTITY(GLF_merged3_0_2_53_2_1_13_3_1_17GLF_merged2_0_1_14_1_1_14workgroup_baseworkgroup_sizenum_workgroupsubgroup_local_id.xy, _GLF_IDENTITY((GLF_merged3_0_2_53_2_1_13_3_1_17GLF_merged2_0_1_14_1_1_14workgroup_baseworkgroup_sizenum_workgroupsubgroup_local_id.xy) | uvec2(_GLF_IDENTITY(0u, uint(uvec3(0u, 0u, 0u))), 0u), min(_GLF_IDENTITY((GLF_merged3_0_2_53_2_1_13_3_1_17GLF_merged2_0_1_14_1_1_14workgroup_baseworkgroup_sizenum_workgroupsubgroup_local_id.xy) | uvec2(0u, 0u), (_GLF_IDENTITY((GLF_merged3_0_2_53_2_1_13_3_1_17GLF_merged2_0_1_14_1_1_14workgroup_baseworkgroup_sizenum_workgroupsubgroup_local_id.xy) | uvec2(0u, 0u), ~ (~ ((GLF_merged3_0_2_53_2_1_13_3_1_17GLF_merged2_0_1_14_1_1_14workgroup_baseworkgroup_sizenum_workgroupsubgroup_local_id.xy) | uvec2(0u, 0u))))) + uvec2(0u, 0u)), (GLF_merged3_0_2_53_2_1_13_3_1_17GLF_merged2_0_1_14_1_1_14workgroup_baseworkgroup_sizenum_workgroupsubgroup_local_id.xy) | uvec2(0u, 0u)))))).x + _GLF_IDENTITY(subgroup_id, ~ (~ (_GLF_IDENTITY(subgroup_id, (false ? _GLF_FUZZED(subgroup_size) : subgroup_id))))) * subgroup_size + _GLF_IDENTITY(GLF_merged3_0_2_53_2_1_13_3_1_17GLF_merged2_0_1_14_1_1_14workgroup_baseworkgroup_sizenum_workgroupsubgroup_local_id.w, (0u | 0u) ^ (GLF_merged3_0_2_53_2_1_13_3_1_17GLF_merged2_0_1_14_1_1_14workgroup_baseworkgroup_sizenum_workgroupsubgroup_local_id.w))));
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true)), (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y) && true, true && (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4((injectionSwitch.x > injectionSwitch.y), true, false, false))) && true))))) || false)))))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    return;
  }
 else
  {
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
     if(_GLF_DEAD(false))
      {
       for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < _GLF_IDENTITY(_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(-8722))), _GLF_IDENTITY(clamp(_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(-8722))), _GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(-8722))), _GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(-8722)))), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(clamp(_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(-8722))), _GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(-8722))), _GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(-8722)))), max(clamp(_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(-8722))), _GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(-8722))), _GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(-8722)))), clamp(_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(-8722))), _GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(-8722))), _GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(-8722)))))) : _GLF_FUZZED(_injected_loop_counter))))); _injected_loop_counter ++)
        {
         barrier();
        }
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && true), ! (! (false))))))))
          barrier();
         barrier();
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(false))
          return;
        }
       return;
      }
    }
   else
    {
     for(int _injected_loop_counter = (0 << _GLF_IDENTITY(int(3), int(3))); _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
      {
       if(_GLF_DEAD(false))
        return;
      }
     if(_GLF_DEAD(false))
      barrier();
    }
  }
 atomicStore(write_val, uint(virtual_gid), 4, 64, 0);
 if(_GLF_DEAD(false))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, true, false, false)))), true && (_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))))
    {
     if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, vec2(mat2x3(injectionSwitch, 0.0, 0.0, 0.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(0.0, 1.0)), dot(vec2(1.0, 0.0), vec2(0.0, 1.0)))))).y), bool(bvec2((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, vec2(mat2x3(injectionSwitch, 0.0, 0.0, 0.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(0.0, 1.0)), dot(vec2(1.0, 0.0), vec2(0.0, 1.0)))))).y), false))))))
      {
       barrier();
      }
     else
      {
      }
    }
   return;
   if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
    }
   else
    {
     if(_GLF_DEAD(false))
      barrier();
    }
  }
 uint read_val = atomicLoad(write_val, 4, 64, 0);
 buf[virtual_gid] = uint(subgroupAllEqual(read_val));
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, bool(bvec2(false, false)))))
      {
      }
     else
      {
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(min(injectionSwitch, injectionSwitch), max(min(injectionSwitch, injectionSwitch), min(injectionSwitch, injectionSwitch)))), _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat2(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), 1.0, length(vec2(0.0, 0.0)))), min(vec2(mat2(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), 1.0, length(vec2(0.0, 0.0)))), vec2(mat2(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), 1.0, length(vec2(0.0, 0.0))))))))).y)), ! (! _GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), max(injectionSwitch, injectionSwitch)), 1.0, length(vec2(0.0, 0.0)))), min(vec2(mat2(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(max(injectionSwitch, injectionSwitch), (false ? _GLF_FUZZED(vec2(6.6, -9.9)) : max(injectionSwitch, injectionSwitch))), vec2(mat2x3(_GLF_IDENTITY(max(injectionSwitch, injectionSwitch), (false ? _GLF_FUZZED(vec2(6.6, -9.9)) : max(injectionSwitch, injectionSwitch))), 0.0, 1.0, 0.0, 1.0)))), 1.0, length(vec2(0.0, 0.0)))), vec2(mat2(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), 1.0, length(vec2(0.0, _GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-0.3)), bool(false))), _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(77.99)))))) / 1.0)))))))))).y))), true && ((_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), max(injectionSwitch, injectionSwitch)), 1.0, length(vec2(0.0, 0.0)))), min(vec2(mat2(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(max(injectionSwitch, injectionSwitch), (false ? _GLF_FUZZED(vec2(6.6, -9.9)) : max(injectionSwitch, injectionSwitch))), vec2(mat2x3(_GLF_IDENTITY(max(injectionSwitch, injectionSwitch), (false ? _GLF_FUZZED(vec2(6.6, -9.9)) : max(injectionSwitch, injectionSwitch))), 0.0, 1.0, 0.0, 1.0)))), 1.0, length(vec2(0.0, 0.0)))), vec2(mat2(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), 1.0, length(vec2(0.0, _GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-0.3)), bool(false))), _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(77.99)))))) / 1.0)))))))))).y)))))))))
      {
       if(_GLF_WRAPPED_IF_FALSE(false))
        {
        }
       else
        {
         return;
        }
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(77.16)), float(injectionSwitch.x), bool(true))), injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, float(float(injectionSwitch.x))))) > injectionSwitch.y)), false || (_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(77.16)), float(injectionSwitch.x), bool(true))), injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, float(float(injectionSwitch.x))))) > injectionSwitch.y)), true && (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(77.16)), float(injectionSwitch.x), bool(true))), injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(float(injectionSwitch.x)), 1.0 * (float(float(injectionSwitch.x))))))) > injectionSwitch.y))))))))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) + vec2(0.0, 0.0), _GLF_IDENTITY(vec2(_GLF_IDENTITY(mat4x3((injectionSwitch) + vec2(0.0, 0.0), 1.0, 1.0, sin(0.0), determinant(mat3(0.0, 0.0, 0.0, sin(0.0), _GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0, exp(0.0), 1.0, 0.0)), 1.0, 0.0, determinant(mat2(0.0, 0.0, _GLF_IDENTITY(0.0, float(_GLF_IDENTITY(mat4x3(_GLF_IDENTITY(0.0, max(0.0, 0.0)), sin(0.0), abs(0.0), sqrt(1.0), 1.0, sin(0.0), 1.0, 0.0, 0.0, 1.0, 1.0, sin(0.0)), (mat4x3(_GLF_IDENTITY(0.0, max(0.0, 0.0)), sin(0.0), abs(0.0), sqrt(1.0), 1.0, sin(0.0), 1.0, 0.0, 0.0, 1.0, 1.0, sin(0.0))) - mat4x3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)))), 0.0)), determinant(mat4(1.0, 0.0, 0.0, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(90.65)), float(0.0), bool(true))), 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(503.890))), 1.0, 1.0)), 0.0, 0.0, 1.0, 1.0, 1.0)), determinant(mat3(cos(0.0), 0.0, 0.0, 1.0, cos(_GLF_IDENTITY(0.0, max(0.0, _GLF_IDENTITY(0.0, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? 0.0 : _GLF_FUZZED(86.52)))))), 0.0, 1.0, 0.0, determinant(mat4(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0)))), 0.0), (false ? _GLF_FUZZED(mat4x3(-1.3, 0.1, 994.043, 37.76, -64.85, -4899.9560, 2010.1557, 855.164, -72.69, -46.77, 8.0, 932.487)) : mat4x3((injectionSwitch) + vec2(0.0, 0.0), 1.0, 1.0, sin(0.0), determinant(mat3(0.0, 0.0, 0.0, sin(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(0.9)), bool(false)))), 0.0, 0.0, exp(0.0), 1.0, 0.0)), 1.0, 0.0, determinant(mat2(0.0, 0.0, 0.0, 0.0)), determinant(mat4(1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0)), determinant(mat3(cos(0.0), 0.0, 0.0, 1.0, cos(0.0), 0.0, 1.0, 0.0, determinant(mat4(1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)), 1.0)))), 0.0)))), (_GLF_IDENTITY(vec2(_GLF_IDENTITY(mat4x3((injectionSwitch) + vec2(0.0, 0.0), 1.0, 1.0, sin(0.0), determinant(mat3(0.0, 0.0, 0.0, sin(0.0), 0.0, 0.0, exp(0.0), 1.0, 0.0)), 1.0, 0.0, determinant(mat2(0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, mix(_GLF_IDENTITY(float(_GLF_FUZZED((vec2(9.5, 845.810).r * 6269.2404))), mix(float(_GLF_FUZZED(-6478.3135)), float(float(_GLF_FUZZED((vec2(9.5, 845.810).r * 6269.2404)))), bool(true))), float(_GLF_IDENTITY(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(0.6))))), float(mat3x2(0.0, 1.0, 1.0, 1.0, 1.0, 1.0)))), bool(true))))), determinant(mat4(1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0)), determinant(mat3(cos(0.0), 0.0, 0.0, 1.0, cos(0.0), 0.0, 1.0, 0.0, determinant(mat4(1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0)))), 0.0), (false ? _GLF_FUZZED(mat4x3(-1.3, 0.1, 994.043, 37.76, -64.85, -4899.9560, 2010.1557, 855.164, -72.69, -46.77, 8.0, 932.487)) : mat4x3((injectionSwitch) + vec2(0.0, 0.0), 1.0, 1.0, sin(0.0), determinant(mat3(0.0, 0.0, 0.0, sin(0.0), 0.0, 0.0, exp(_GLF_IDENTITY(0.0, min(0.0, 0.0))), 1.0, 0.0)), 1.0, 0.0, determinant(mat2(0.0, 0.0, 0.0, 0.0)), determinant(mat4(1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0, 1.0, 1.0, 1.0)), determinant(mat3(_GLF_IDENTITY(cos(0.0), _GLF_IDENTITY(float(mat3(_GLF_IDENTITY(cos(0.0), min(cos(0.0), _GLF_IDENTITY(cos(0.0), min(_GLF_IDENTITY(cos(0.0), min(cos(0.0), cos(0.0))), cos(0.0))))), 1.0, 0.0, 1.0, exp(0.0), 1.0, 1.0, 0.0, 1.0)), mix(float(_GLF_FUZZED(-4.6)), float(float(mat3(_GLF_IDENTITY(cos(0.0), min(cos(0.0), cos(0.0))), 1.0, 0.0, _GLF_IDENTITY(1.0, (1.0) - 0.0), exp(0.0), 1.0, 1.0, 0.0, 1.0))), _GLF_IDENTITY(bool(true), (bool(true)) && true)))), 0.0, 0.0, 1.0, cos(0.0), 0.0, 1.0, 0.0, determinant(mat4(1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, (true ? _GLF_IDENTITY(0.0, mix(float(_GLF_IDENTITY(0.0, (0.0) / 1.0)), float(_GLF_FUZZED(-28.15)), bool(false))) : _GLF_FUZZED(8758.1588))), 1.0)))), 0.0)))), clamp(vec2(_GLF_IDENTITY(mat4x3((injectionSwitch) + vec2(0.0, 0.0), 1.0, _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(-4.2)), bool(false))), sin(0.0), determinant(mat3(0.0, 0.0, 0.0, sin(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(58.81)), bool(false)))))), _GLF_IDENTITY(0.0, (0.0) * 1.0), 0.0, exp(0.0), 1.0, 0.0)), 1.0, _GLF_IDENTITY(0.0, 1.0 * (_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)))), determinant(mat2(0.0, 0.0, 0.0, 0.0)), determinant(mat4(1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(1.0, 1.0 * (1.0)), 1.0)), determinant(mat3(cos(0.0), 0.0, 0.0, 1.0, cos(0.0), 0.0, 1.0, 0.0, _GLF_IDENTITY(determinant(mat4(1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0)), min(determinant(mat4(1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0)), determinant(mat4(1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0)))))), 0.0), (_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, false || (false)))) ? _GLF_FUZZED(mat4x3(-1.3, 0.1, 994.043, 37.76, -64.85, -4899.9560, 2010.1557, 855.164, -72.69, -46.77, 8.0, 932.487)) : mat4x3((injectionSwitch) + vec2(0.0, 0.0), 1.0, 1.0, sin(0.0), _GLF_IDENTITY(determinant(mat3(0.0, 0.0, 0.0, sin(0.0), 0.0, 0.0, exp(0.0), 1.0, 0.0)), (determinant(mat3(0.0, 0.0, 0.0, sin(0.0), 0.0, 0.0, exp(0.0), 1.0, 0.0))) - 0.0), 1.0, 0.0, determinant(mat2(0.0, 0.0, 0.0, 0.0)), determinant(mat4(1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0)), determinant(mat3(cos(0.0), 0.0, 0.0, 1.0, cos(0.0), 0.0, 1.0, 0.0, determinant(mat4(1.0, 0.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(_GLF_IDENTITY(1.0, min(1.0, 1.0)), min(1.0, 1.0)), 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0)))), 0.0)))), vec2(_GLF_IDENTITY(mat4x3((injectionSwitch) + vec2(0.0, 0.0), 1.0, 1.0, sin(0.0), _GLF_IDENTITY(determinant(mat3(0.0, 0.0, 0.0, sin(0.0), 0.0, 0.0, exp(0.0), 1.0, 0.0)), _GLF_IDENTITY(float(mat4(_GLF_IDENTITY(determinant(mat3(0.0, 0.0, 0.0, sin(0.0), 0.0, 0.0, exp(0.0), 1.0, 0.0)), (_GLF_IDENTITY(determinant(mat3(0.0, 0.0, 0.0, sin(0.0), 0.0, 0.0, exp(0.0), 1.0, 0.0)), min(determinant(mat3(0.0, 0.0, 0.0, sin(0.0), 0.0, 0.0, exp(0.0), 1.0, 0.0)), determinant(mat3(0.0, 0.0, 0.0, sin(0.0), 0.0, 0.0, exp(0.0), 1.0, 0.0))))) / 1.0), 0.0, 0.0, 1.0, 0.0, sin(0.0), 0.0, determinant(mat2(0.0, 0.0, 0.0, length(0.0))), 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0)), (false ? _GLF_FUZZED(-683.620) : float(mat4(_GLF_IDENTITY(determinant(mat3(0.0, 0.0, 0.0, sin(0.0), 0.0, 0.0, exp(0.0), 1.0, 0.0)), (_GLF_IDENTITY(determinant(mat3(0.0, 0.0, 0.0, sin(0.0), 0.0, 0.0, exp(0.0), 1.0, 0.0)), min(determinant(mat3(0.0, 0.0, 0.0, sin(0.0), 0.0, 0.0, exp(0.0), 1.0, 0.0)), determinant(mat3(0.0, 0.0, 0.0, sin(0.0), 0.0, 0.0, exp(0.0), 1.0, 0.0))))) / 1.0), 0.0, 0.0, 1.0, 0.0, sin(0.0), 0.0, determinant(mat2(0.0, 0.0, 0.0, length(0.0))), 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0))))), 1.0, 0.0, determinant(mat2(0.0, 0.0, 0.0, 0.0)), determinant(mat4(1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0)), _GLF_IDENTITY(determinant(mat3(cos(0.0), 0.0, 0.0, 1.0, cos(0.0), 0.0, 1.0, 0.0, determinant(mat4(1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0)))), min(determinant(mat3(cos(0.0), 0.0, 0.0, 1.0, cos(0.0), 0.0, 1.0, 0.0, determinant(mat4(1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0)))), _GLF_IDENTITY(determinant(mat3(cos(0.0), 0.0, 0.0, 1.0, cos(0.0), 0.0, 1.0, 0.0, determinant(mat4(1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0)))), (_GLF_IDENTITY(determinant(mat3(cos(0.0), 0.0, 0.0, 1.0, cos(0.0), 0.0, 1.0, 0.0, determinant(mat4(1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0)))), mix(float(_GLF_FUZZED(-7.4)), float(determinant(mat3(cos(0.0), 0.0, 0.0, 1.0, cos(0.0), 0.0, 1.0, 0.0, determinant(mat4(1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0))))), bool(true)))) * 1.0))), 0.0), (false ? _GLF_FUZZED(mat4x3(-1.3, 0.1, 994.043, 37.76, -64.85, -4899.9560, 2010.1557, _GLF_IDENTITY(855.164, (_GLF_IDENTITY(855.164, mix(float(855.164), float(_GLF_FUZZED(854.992)), bool(false)))) * 1.0), -72.69, -46.77, 8.0, 932.487)) : mat4x3((_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))) + vec2(0.0, 0.0), 1.0, 1.0, sin(0.0), determinant(mat3(0.0, 0.0, 0.0, sin(0.0), 0.0, 0.0, exp(0.0), 1.0, 0.0)), 1.0, 0.0, determinant(mat2(0.0, 0.0, 0.0, 0.0)), determinant(mat4(1.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0)), determinant(mat3(cos(0.0), 0.0, 0.0, _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), cos(0.0), 0.0, 1.0, 0.0, determinant(mat4(1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0)))), _GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0)))))), _GLF_IDENTITY(vec2(_GLF_IDENTITY(mat4x3((injectionSwitch) + vec2(0.0, 0.0), _GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0, sin(0.0), determinant(mat3(0.0, 0.0, 0.0, sin(0.0), 0.0, 0.0, exp(0.0), 1.0, 0.0)), 1.0, 0.0, determinant(mat2(0.0, 0.0, 0.0, 0.0)), determinant(mat4(1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0)), determinant(mat3(cos(0.0), 0.0, 0.0, 1.0, _GLF_IDENTITY(cos(0.0), (true ? cos(0.0) : _GLF_FUZZED(7.2))), 0.0, 1.0, 0.0, determinant(mat4(1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0)))), 0.0), (false ? _GLF_FUZZED(mat4x3(-1.3, 0.1, 994.043, 37.76, -64.85, -4899.9560, _GLF_IDENTITY(2010.1557, (false ? _GLF_FUZZED(-4591.2740) : _GLF_IDENTITY(2010.1557, clamp(_GLF_IDENTITY(2010.1557, (2010.1557) - 0.0), 2010.1557, _GLF_IDENTITY(2010.1557, max(2010.1557, 2010.1557)))))), _GLF_IDENTITY(855.164, float(float(_GLF_IDENTITY(855.164, (855.164) - 0.0)))), -72.69, -46.77, 8.0, 932.487)) : mat4x3(_GLF_IDENTITY((injectionSwitch), max((injectionSwitch), (injectionSwitch))) + vec2(0.0, 0.0), 1.0, 1.0, sin(0.0), determinant(mat3(0.0, 0.0, 0.0, sin(0.0), 0.0, 0.0, exp(0.0), 1.0, 0.0)), 1.0, 0.0, determinant(_GLF_IDENTITY(mat2(0.0, 0.0, 0.0, 0.0), mat2(mat4x3(_GLF_IDENTITY(mat2(0.0, 0.0, 0.0, 0.0), (mat2(0.0, 0.0, 0.0, 0.0)) * mat2(_GLF_ONE(1.0, injectionSwitch.y))))))), determinant(mat4(1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0)), determinant(mat3(cos(0.0), 0.0, 0.0, 1.0, cos(0.0), 0.0, 1.0, 0.0, determinant(mat4(1.0, _GLF_IDENTITY(0.0, (true ? _GLF_IDENTITY(0.0, clamp(0.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 0.0)) : _GLF_FUZZED(-220.647))), 1.0, 0.0, _GLF_IDENTITY(0.0, (0.0) / 1.0), 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0, 0.0, 1.0)))), 0.0)))), sqrt(vec2(0.0, 0.0)) + (vec2(_GLF_IDENTITY(mat4x3((injectionSwitch) + vec2(0.0, 0.0), _GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0, sin(0.0), determinant(mat3(0.0, 0.0, 0.0, sin(0.0), 0.0, 0.0, exp(0.0), 1.0, 0.0)), 1.0, 0.0, determinant(mat2(0.0, 0.0, 0.0, 0.0)), determinant(mat4(1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0)), determinant(mat3(cos(0.0), 0.0, 0.0, 1.0, _GLF_IDENTITY(cos(0.0), (true ? cos(0.0) : _GLF_FUZZED(7.2))), 0.0, 1.0, 0.0, determinant(mat4(1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0)))), 0.0), (false ? _GLF_FUZZED(mat4x3(-1.3, 0.1, 994.043, 37.76, -64.85, -4899.9560, _GLF_IDENTITY(2010.1557, (false ? _GLF_FUZZED(-4591.2740) : _GLF_IDENTITY(2010.1557, clamp(_GLF_IDENTITY(2010.1557, (2010.1557) - 0.0), 2010.1557, _GLF_IDENTITY(2010.1557, max(2010.1557, 2010.1557)))))), _GLF_IDENTITY(855.164, float(float(_GLF_IDENTITY(855.164, (855.164) - 0.0)))), -72.69, -46.77, 8.0, 932.487)) : mat4x3(_GLF_IDENTITY((injectionSwitch), max((injectionSwitch), (injectionSwitch))) + vec2(0.0, 0.0), 1.0, 1.0, sin(0.0), determinant(mat3(0.0, 0.0, 0.0, sin(0.0), 0.0, 0.0, exp(0.0), 1.0, 0.0)), 1.0, 0.0, determinant(_GLF_IDENTITY(mat2(0.0, 0.0, 0.0, 0.0), mat2(mat4x3(_GLF_IDENTITY(mat2(0.0, 0.0, 0.0, 0.0), (mat2(0.0, 0.0, 0.0, 0.0)) * mat2(_GLF_ONE(1.0, injectionSwitch.y))))))), determinant(mat4(1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0)), determinant(mat3(cos(0.0), 0.0, 0.0, 1.0, cos(0.0), 0.0, 1.0, 0.0, determinant(mat4(1.0, _GLF_IDENTITY(0.0, (true ? _GLF_IDENTITY(0.0, clamp(0.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 0.0)) : _GLF_FUZZED(-220.647))), 1.0, 0.0, _GLF_IDENTITY(0.0, (0.0) / 1.0), 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0, 0.0, 1.0)))), 0.0))))))))) - vec2(0.0, _GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, 0.0 + (0.0)), 0.0, _GLF_IDENTITY(0.0, float(vec4(0.0, 1.0, 1.0, 0.0))))))))))).x > _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat3(injectionSwitch, 1.0, 1.0, _GLF_IDENTITY(dot(vec4(sqrt(1.0), 0.0, 0.0, _GLF_IDENTITY(0.0, 0.0 + (_GLF_IDENTITY(0.0, float(mat4x3(0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0)))))), _GLF_IDENTITY(vec4(1.0, _GLF_IDENTITY(determinant(mat4(0.0, 1.0, 0.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, _GLF_IDENTITY(0.0, (0.0) + log(1.0)))), 0.0)), 0.0 + (determinant(mat4(0.0, 1.0, 0.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(0.0, float(mat4x2(0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0))), 0.0, 0.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, _GLF_IDENTITY(0.0, (0.0) + log(1.0)))), 0.0)))), 0.0, 0.0), clamp(_GLF_IDENTITY(vec4(1.0, determinant(mat4(0.0, 1.0, 0.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0, 0.0, 0.0, _GLF_IDENTITY(1.0, _GLF_IDENTITY(float(mat3x4(1.0, 0.0, 1.0, 1.0, 0.0, 0.0, determinant(mat4(1.0, 1.0, 0.0, sqrt(0.0), 0.0, 1.0, 0.0, 1.0, determinant(mat2(0.0, 0.0, 1.0, 0.0)), 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0)), log(1.0), _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 1.0, 1.0)), min(float(mat3x4(1.0, 0.0, 1.0, 1.0, 0.0, 0.0, determinant(mat4(1.0, 1.0, 0.0, sqrt(0.0), 0.0, 1.0, 0.0, 1.0, determinant(mat2(0.0, 0.0, 1.0, 0.0)), 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0)), log(1.0), _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 1.0, 1.0)), float(mat3x4(1.0, 0.0, 1.0, 1.0, 0.0, 0.0, determinant(mat4(1.0, 1.0, 0.0, sqrt(0.0), 0.0, 1.0, 0.0, 1.0, determinant(mat2(0.0, 0.0, 1.0, 0.0)), 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0)), log(1.0), _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 1.0, 1.0))))), 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, _GLF_IDENTITY(0.0, (0.0) + log(1.0)))), mix(float(_GLF_FUZZED(-1.2)), float(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, _GLF_IDENTITY(0.0, (0.0) + log(1.0))))), bool(_GLF_IDENTITY(true, (true) && true)))), 0.0)), 0.0, 0.0), vec4(_GLF_IDENTITY(_GLF_IDENTITY(1.0, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(mod(-75.81, -864.718)) : 1.0)), (false ? _GLF_FUZZED(188.901) : 1.0)), 1.0, 1.0, 1.0) * _GLF_IDENTITY((_GLF_IDENTITY(vec4(1.0, determinant(mat4(0.0, 1.0, 0.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, _GLF_IDENTITY(0.0, (0.0) + log(1.0)))), 0.0)), 0.0, 0.0), vec4(_GLF_IDENTITY(1.0, min(1.0, 1.0)), _GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(-65.58))), 1.0, 1.0) * (vec4(1.0, determinant(mat4(0.0, 1.0, 0.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), (_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0))) / 1.0), 0.0, 0.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, _GLF_IDENTITY(0.0, (0.0) + log(1.0)))), 0.0)), 0.0, 0.0)))), mix(vec4(((_GLF_IDENTITY(vec4(1.0, determinant(mat4(0.0, 1.0, 0.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(1.0, float(vec2(1.0, 1.0))), 0.0, 0.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, _GLF_IDENTITY(0.0, (0.0) + _GLF_IDENTITY(log(1.0), mix(float(_GLF_IDENTITY(log(1.0), (log(1.0)) / 1.0)), float(_GLF_FUZZED(-78.10)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), 0.0)), 0.0, 0.0), vec4(1.0, 1.0, 1.0, 1.0) * (vec4(1.0, determinant(mat4(0.0, 1.0, 0.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 0.0, 0.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, _GLF_IDENTITY(0.0, (0.0) + log(1.0)))), 0.0)), 0.0, 0.0)))))[0], _GLF_FUZZED(2458.3305), _GLF_FUZZED((-1572.7737 * 26.71)), _GLF_IDENTITY(((_GLF_IDENTITY(vec4(1.0, determinant(mat4(0.0, 1.0, 0.0, _GLF_IDENTITY(_GLF_IDENTITY(0.0, float(mat2x4(0.0, 1.0, 1.0, abs(1.0), determinant(mat3(1.0, 1.0, round(length(normalize(1.0))), 0.0, 1.0, 0.0, 0.0, 0.0, 1.0)), 0.0, 0.0, 0.0))), max(0.0, 0.0)), 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, _GLF_IDENTITY(0.0, (0.0) + log(1.0)))), 0.0)), 0.0, 0.0), vec4(1.0, 1.0, 1.0, 1.0) * (_GLF_IDENTITY(vec4(1.0, determinant(mat4(0.0, 1.0, 0.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 0.0, 0.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, _GLF_IDENTITY(0.0, (0.0) + log(1.0)))), 0.0)), 0.0, 0.0), clamp(_GLF_IDENTITY(vec4(1.0, determinant(mat4(0.0, 1.0, 0.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 0.0, 0.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, _GLF_IDENTITY(0.0, (0.0) + log(1.0)))), 0.0)), 0.0, 0.0), _GLF_IDENTITY((vec4(1.0, determinant(mat4(0.0, 1.0, 0.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 0.0, 0.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, _GLF_IDENTITY(0.0, (0.0) + log(1.0)))), 0.0)), 0.0, 0.0)) * mat4(1.0), mat4(1.0) * ((vec4(1.0, determinant(mat4(0.0, 1.0, 0.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 0.0, 0.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, _GLF_IDENTITY(0.0, (0.0) + log(1.0)))), 0.0)), 0.0, 0.0)) * mat4(1.0)))), vec4(1.0, determinant(mat4(0.0, 1.0, 0.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 0.0, 0.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, _GLF_IDENTITY(0.0, (0.0) + log(1.0)))), 0.0)), 0.0, 0.0), vec4(1.0, determinant(mat4(0.0, 1.0, 0.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 0.0, 0.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, _GLF_IDENTITY(0.0, (0.0) + log(1.0)))), 0.0)), 0.0, 0.0))))))), min(((_GLF_IDENTITY(vec4(1.0, determinant(mat4(0.0, 1.0, 0.0, _GLF_IDENTITY(_GLF_IDENTITY(0.0, float(mat2x4(0.0, 1.0, 1.0, abs(1.0), determinant(mat3(1.0, 1.0, round(length(normalize(1.0))), 0.0, 1.0, 0.0, 0.0, 0.0, 1.0)), 0.0, 0.0, 0.0))), max(0.0, 0.0)), 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, _GLF_IDENTITY(0.0, (0.0) + log(1.0)))), 0.0)), 0.0, 0.0), vec4(1.0, 1.0, 1.0, 1.0) * (_GLF_IDENTITY(vec4(1.0, determinant(mat4(0.0, 1.0, 0.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 0.0, 0.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, _GLF_IDENTITY(0.0, (0.0) + log(1.0)))), 0.0)), 0.0, 0.0), clamp(_GLF_IDENTITY(vec4(1.0, determinant(mat4(0.0, 1.0, 0.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 0.0, 0.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, _GLF_IDENTITY(0.0, (0.0) + log(1.0)))), 0.0)), 0.0, 0.0), _GLF_IDENTITY((vec4(1.0, determinant(mat4(0.0, 1.0, 0.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 0.0, 0.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, _GLF_IDENTITY(0.0, (0.0) + log(1.0)))), 0.0)), 0.0, 0.0)) * mat4(1.0), mat4(1.0) * ((vec4(1.0, determinant(mat4(0.0, 1.0, 0.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 0.0, 0.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, _GLF_IDENTITY(0.0, (0.0) + log(1.0)))), 0.0)), 0.0, 0.0)) * mat4(1.0)))), vec4(1.0, determinant(mat4(0.0, 1.0, 0.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 0.0, 0.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, _GLF_IDENTITY(0.0, (0.0) + log(1.0)))), 0.0)), 0.0, 0.0), vec4(1.0, determinant(mat4(0.0, 1.0, 0.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 0.0, 0.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, _GLF_IDENTITY(0.0, (0.0) + log(1.0)))), 0.0)), 0.0, 0.0))))))), ((_GLF_IDENTITY(vec4(1.0, determinant(mat4(0.0, 1.0, 0.0, _GLF_IDENTITY(_GLF_IDENTITY(0.0, float(mat2x4(0.0, 1.0, 1.0, abs(1.0), determinant(mat3(1.0, 1.0, round(length(normalize(1.0))), 0.0, 1.0, 0.0, 0.0, 0.0, 1.0)), 0.0, 0.0, 0.0))), max(0.0, 0.0)), 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, _GLF_IDENTITY(0.0, (0.0) + log(1.0)))), 0.0)), 0.0, 0.0), vec4(1.0, 1.0, 1.0, 1.0) * (_GLF_IDENTITY(vec4(1.0, determinant(mat4(0.0, 1.0, 0.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 0.0, 0.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, _GLF_IDENTITY(0.0, (0.0) + log(1.0)))), 0.0)), 0.0, 0.0), clamp(_GLF_IDENTITY(vec4(1.0, determinant(mat4(0.0, 1.0, 0.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 0.0, 0.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, _GLF_IDENTITY(0.0, (0.0) + log(1.0)))), 0.0)), 0.0, 0.0), _GLF_IDENTITY((vec4(1.0, determinant(mat4(0.0, 1.0, 0.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 0.0, 0.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, _GLF_IDENTITY(0.0, (0.0) + log(1.0)))), 0.0)), 0.0, 0.0)) * mat4(1.0), mat4(1.0) * ((vec4(1.0, determinant(mat4(0.0, 1.0, 0.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 0.0, 0.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, _GLF_IDENTITY(0.0, (0.0) + log(1.0)))), 0.0)), 0.0, 0.0)) * mat4(1.0)))), vec4(1.0, determinant(mat4(0.0, 1.0, 0.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 0.0, 0.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, _GLF_IDENTITY(0.0, (0.0) + log(1.0)))), 0.0)), 0.0, 0.0), vec4(1.0, determinant(mat4(0.0, 1.0, 0.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 0.0, 0.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, _GLF_IDENTITY(0.0, (0.0) + log(1.0)))), 0.0)), 0.0, 0.0)))))))))[3]), vec4(_GLF_FUZZED(3.4), _GLF_IDENTITY(((_GLF_IDENTITY(vec4(1.0, determinant(mat4(0.0, 1.0, 0.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(0.0, 1.0 * (0.0)), 1.0, 0.0, 0.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, _GLF_IDENTITY(0.0, (0.0) + log(1.0)))), 0.0)), 0.0, 0.0), vec4(1.0, 1.0, 1.0, 1.0) * (vec4(1.0, determinant(mat4(0.0, 1.0, 0.0, _GLF_IDENTITY(0.0, _GLF_IDENTITY(max(0.0, 0.0), (true ? _GLF_IDENTITY(max(0.0, 0.0), min(max(0.0, 0.0), _GLF_IDENTITY(max(0.0, 0.0), (false ? _GLF_FUZZED(-5.2) : max(0.0, 0.0))))) : _GLF_FUZZED(-99.23)))), 0.0, 0.0, 0.0, _GLF_IDENTITY(1.0, (1.0) - 0.0), _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 0.0, 0.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, _GLF_IDENTITY(0.0, (0.0) + log(1.0)))), 0.0)), 0.0, 0.0)))))[1], _GLF_IDENTITY(clamp(((_GLF_IDENTITY(vec4(1.0, determinant(mat4(0.0, 1.0, 0.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, _GLF_IDENTITY(0.0, (0.0) + log(1.0)))), 0.0)), 0.0, 0.0), vec4(1.0, 1.0, 1.0, 1.0) * (vec4(1.0, determinant(mat4(0.0, 1.0, 0.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 0.0, 0.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, _GLF_IDENTITY(0.0, (0.0) + log(1.0)))), 0.0)), 0.0, 0.0)))))[1], ((_GLF_IDENTITY(vec4(1.0, determinant(mat4(0.0, 1.0, 0.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, _GLF_IDENTITY(0.0, (0.0) + log(1.0)))), 0.0)), 0.0, 0.0), vec4(1.0, 1.0, 1.0, 1.0) * (vec4(1.0, determinant(mat4(0.0, 1.0, 0.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 0.0, 0.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, _GLF_IDENTITY(0.0, (0.0) + log(1.0)))), 0.0)), 0.0, 0.0)))))[1], ((_GLF_IDENTITY(vec4(1.0, determinant(mat4(0.0, 1.0, 0.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, _GLF_IDENTITY(0.0, (0.0) + log(1.0)))), 0.0)), 0.0, 0.0), vec4(1.0, 1.0, 1.0, 1.0) * (vec4(1.0, determinant(mat4(0.0, 1.0, 0.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 0.0, 0.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, _GLF_IDENTITY(0.0, (0.0) + log(1.0)))), 0.0)), 0.0, 0.0)))))[1]), clamp(_GLF_IDENTITY(clamp(((_GLF_IDENTITY(vec4(1.0, determinant(mat4(0.0, 1.0, 0.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, _GLF_IDENTITY(0.0, (0.0) + log(1.0)))), 0.0)), 0.0, 0.0), vec4(1.0, 1.0, 1.0, 1.0) * (vec4(1.0, determinant(mat4(0.0, 1.0, 0.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 0.0, 0.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, _GLF_IDENTITY(0.0, (0.0) + log(1.0)))), 0.0)), 0.0, 0.0)))))[1], ((_GLF_IDENTITY(vec4(1.0, determinant(mat4(0.0, 1.0, 0.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, _GLF_IDENTITY(0.0, (0.0) + log(1.0)))), 0.0)), 0.0, 0.0), vec4(1.0, 1.0, 1.0, 1.0) * (vec4(1.0, determinant(mat4(0.0, 1.0, 0.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 0.0, 0.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, _GLF_IDENTITY(0.0, (0.0) + log(1.0)))), 0.0)), 0.0, 0.0)))))[1], ((_GLF_IDENTITY(vec4(1.0, determinant(mat4(0.0, 1.0, 0.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, _GLF_IDENTITY(0.0, (0.0) + log(1.0)))), 0.0)), 0.0, 0.0), vec4(1.0, 1.0, 1.0, 1.0) * (vec4(1.0, determinant(mat4(0.0, 1.0, 0.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 0.0, 0.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, _GLF_IDENTITY(0.0, (0.0) + log(1.0)))), 0.0)), 0.0, 0.0)))))[1]), max(_GLF_IDENTITY(clamp(((_GLF_IDENTITY(vec4(1.0, determinant(mat4(0.0, 1.0, 0.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, _GLF_IDENTITY(0.0, (0.0) + log(1.0)))), 0.0)), 0.0, 0.0), vec4(1.0, 1.0, 1.0, 1.0) * (vec4(1.0, determinant(mat4(0.0, 1.0, 0.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 0.0, 0.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, _GLF_IDENTITY(0.0, (0.0) + log(1.0)))), 0.0)), 0.0, 0.0)))))[1], ((_GLF_IDENTITY(vec4(1.0, determinant(mat4(0.0, 1.0, 0.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, _GLF_IDENTITY(0.0, (0.0) + log(1.0)))), 0.0)), 0.0, 0.0), vec4(1.0, 1.0, 1.0, 1.0) * (vec4(1.0, determinant(mat4(0.0, 1.0, 0.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 0.0, 0.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, _GLF_IDENTITY(0.0, (0.0) + log(1.0)))), 0.0)), 0.0, 0.0)))))[1], ((_GLF_IDENTITY(vec4(1.0, determinant(mat4(0.0, 1.0, 0.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, _GLF_IDENTITY(0.0, (0.0) + log(1.0)))), 0.0)), 0.0, 0.0), vec4(1.0, 1.0, 1.0, 1.0) * (vec4(1.0, determinant(mat4(0.0, 1.0, 0.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 0.0, 0.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, _GLF_IDENTITY(0.0, (0.0) + log(1.0)))), 0.0)), 0.0, 0.0)))))[1]), (clamp(((_GLF_IDENTITY(vec4(1.0, determinant(mat4(0.0, 1.0, 0.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, _GLF_IDENTITY(0.0, (0.0) + log(1.0)))), 0.0)), 0.0, 0.0), vec4(1.0, 1.0, 1.0, 1.0) * (vec4(1.0, determinant(mat4(0.0, 1.0, 0.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 0.0, 0.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, _GLF_IDENTITY(0.0, (0.0) + log(1.0)))), 0.0)), 0.0, 0.0)))))[1], ((_GLF_IDENTITY(vec4(1.0, determinant(mat4(0.0, 1.0, 0.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, _GLF_IDENTITY(0.0, (0.0) + log(1.0)))), 0.0)), 0.0, 0.0), vec4(1.0, 1.0, 1.0, 1.0) * (vec4(1.0, determinant(mat4(0.0, 1.0, 0.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 0.0, 0.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, _GLF_IDENTITY(0.0, (0.0) + log(1.0)))), 0.0)), 0.0, 0.0)))))[1], ((_GLF_IDENTITY(vec4(1.0, determinant(mat4(0.0, 1.0, 0.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, _GLF_IDENTITY(0.0, (0.0) + log(1.0)))), 0.0)), 0.0, 0.0), vec4(1.0, 1.0, 1.0, 1.0) * (vec4(1.0, determinant(mat4(0.0, 1.0, 0.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 0.0, 0.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, _GLF_IDENTITY(0.0, (0.0) + log(1.0)))), 0.0)), 0.0, 0.0)))))[1])) / 1.0), clamp(((_GLF_IDENTITY(vec4(1.0, determinant(mat4(0.0, 1.0, 0.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, _GLF_IDENTITY(0.0, (0.0) + log(1.0)))), 0.0)), 0.0, 0.0), vec4(1.0, 1.0, 1.0, 1.0) * (vec4(1.0, determinant(mat4(0.0, 1.0, 0.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 0.0, 0.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, _GLF_IDENTITY(0.0, (0.0) + log(1.0)))), 0.0)), 0.0, 0.0)))))[1], ((_GLF_IDENTITY(vec4(1.0, determinant(mat4(0.0, 1.0, 0.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, _GLF_IDENTITY(0.0, (0.0) + log(1.0)))), 0.0)), 0.0, 0.0), vec4(1.0, 1.0, 1.0, 1.0) * (vec4(1.0, determinant(mat4(0.0, 1.0, 0.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 0.0, 0.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, _GLF_IDENTITY(0.0, (0.0) + log(1.0)))), 0.0)), 0.0, 0.0)))))[1], ((_GLF_IDENTITY(vec4(1.0, determinant(mat4(0.0, 1.0, 0.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, _GLF_IDENTITY(0.0, (0.0) + log(1.0)))), 0.0)), 0.0, 0.0), vec4(1.0, 1.0, 1.0, 1.0) * (vec4(1.0, determinant(mat4(0.0, 1.0, 0.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 0.0, 0.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, _GLF_IDENTITY(0.0, (0.0) + log(1.0)))), 0.0)), 0.0, 0.0)))))[1]))), clamp(((_GLF_IDENTITY(vec4(1.0, determinant(mat4(0.0, 1.0, 0.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, _GLF_IDENTITY(0.0, (0.0) + log(1.0)))), 0.0)), 0.0, 0.0), vec4(1.0, 1.0, 1.0, 1.0) * (vec4(1.0, determinant(mat4(0.0, 1.0, 0.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 0.0, 0.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, _GLF_IDENTITY(0.0, (0.0) + log(1.0)))), 0.0)), 0.0, 0.0)))))[1], ((_GLF_IDENTITY(vec4(1.0, determinant(mat4(0.0, 1.0, 0.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, _GLF_IDENTITY(0.0, (0.0) + log(1.0)))), 0.0)), 0.0, 0.0), vec4(1.0, 1.0, 1.0, 1.0) * (vec4(1.0, determinant(mat4(0.0, 1.0, 0.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 0.0, 0.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, _GLF_IDENTITY(0.0, (0.0) + log(1.0)))), 0.0)), 0.0, 0.0)))))[1], ((_GLF_IDENTITY(vec4(1.0, determinant(mat4(0.0, 1.0, 0.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, _GLF_IDENTITY(0.0, (0.0) + log(1.0)))), 0.0)), 0.0, 0.0), vec4(1.0, 1.0, 1.0, 1.0) * (vec4(1.0, determinant(mat4(0.0, 1.0, 0.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 0.0, 0.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, _GLF_IDENTITY(0.0, (0.0) + log(1.0)))), 0.0)), 0.0, 0.0)))))[1]), clamp(((_GLF_IDENTITY(vec4(1.0, determinant(mat4(0.0, 1.0, 0.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, _GLF_IDENTITY(0.0, (0.0) + log(1.0)))), 0.0)), 0.0, 0.0), vec4(1.0, 1.0, 1.0, 1.0) * (vec4(1.0, determinant(mat4(0.0, 1.0, 0.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 0.0, 0.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, _GLF_IDENTITY(0.0, (0.0) + log(1.0)))), 0.0)), 0.0, 0.0)))))[1], ((_GLF_IDENTITY(vec4(1.0, determinant(mat4(0.0, 1.0, 0.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, _GLF_IDENTITY(0.0, (0.0) + log(1.0)))), 0.0)), 0.0, 0.0), vec4(1.0, 1.0, 1.0, 1.0) * (vec4(1.0, determinant(mat4(0.0, 1.0, 0.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 0.0, 0.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, _GLF_IDENTITY(0.0, (0.0) + log(1.0)))), 0.0)), 0.0, 0.0)))))[1], ((_GLF_IDENTITY(vec4(1.0, determinant(mat4(0.0, 1.0, 0.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, _GLF_IDENTITY(0.0, (0.0) + log(1.0)))), 0.0)), 0.0, 0.0), vec4(1.0, 1.0, 1.0, 1.0) * (vec4(1.0, determinant(mat4(0.0, 1.0, 0.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 0.0, 0.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, _GLF_IDENTITY(0.0, (0.0) + log(1.0)))), 0.0)), 0.0, 0.0)))))[1])))), ((_GLF_IDENTITY(vec4(1.0, determinant(_GLF_IDENTITY(mat4(0.0, 1.0, 0.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, _GLF_IDENTITY(0.0, (0.0) + log(1.0)))), 0.0), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? mat4(0.0, 1.0, 0.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, _GLF_IDENTITY(0.0, (0.0) + log(1.0)))), 0.0) : _GLF_FUZZED(mat4(-2.8, 55.45, -27.61, 7.6, -61.16, 5989.4435, -3.8, 325.446, -9.7, 79.35, 4.2, 0.1, -84.19, -29.48, 6.8, 9.7))))), 0.0, 0.0), vec4(1.0, 1.0, 1.0, 1.0) * _GLF_IDENTITY((vec4(1.0, determinant(mat4(0.0, 1.0, 0.0, _GLF_IDENTITY(0.0, _GLF_IDENTITY(max(0.0, 0.0), mix(float(max(0.0, 0.0)), float(_GLF_FUZZED(9.6)), bool(false)))), 0.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 0.0, 0.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, _GLF_IDENTITY(0.0, (0.0) + log(1.0)))), 0.0)), 0.0, 0.0)), mix(vec4(((vec4(1.0, determinant(mat4(0.0, 1.0, 0.0, _GLF_IDENTITY(0.0, _GLF_IDENTITY(max(0.0, 0.0), mix(float(max(0.0, 0.0)), float(_GLF_FUZZED(9.6)), bool(false)))), 0.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 0.0, 0.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, _GLF_IDENTITY(0.0, (0.0) + log(1.0)))), 0.0)), 0.0, 0.0)))[0], _GLF_FUZZED(-3.2), ((vec4(1.0, determinant(mat4(0.0, 1.0, 0.0, _GLF_IDENTITY(0.0, _GLF_IDENTITY(max(0.0, 0.0), mix(float(max(0.0, 0.0)), float(_GLF_FUZZED(9.6)), bool(false)))), 0.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 0.0, 0.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, _GLF_IDENTITY(0.0, (0.0) + log(1.0)))), 0.0)), 0.0, 0.0)))[2], _GLF_FUZZED(-232.446)), vec4(_GLF_FUZZED(56.26), ((vec4(1.0, determinant(mat4(0.0, 1.0, 0.0, _GLF_IDENTITY(0.0, _GLF_IDENTITY(max(0.0, 0.0), mix(float(max(0.0, 0.0)), float(_GLF_FUZZED(9.6)), bool(false)))), 0.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 0.0, 0.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, _GLF_IDENTITY(0.0, (0.0) + log(1.0)))), 0.0)), 0.0, 0.0)))[1], _GLF_FUZZED(72.34), ((vec4(1.0, determinant(mat4(0.0, 1.0, 0.0, _GLF_IDENTITY(0.0, _GLF_IDENTITY(max(0.0, 0.0), mix(float(max(0.0, 0.0)), float(_GLF_FUZZED(9.6)), bool(false)))), 0.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 0.0, 0.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, _GLF_IDENTITY(0.0, (0.0) + log(1.0)))), 0.0)), 0.0, 0.0)))[3]), bvec4(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, true))))))[2], _GLF_FUZZED((18.64 * -0.1))), bvec4(false, true, true, false)))), vec4(1.0, determinant(mat4(0.0, 1.0, 0.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0, 0.0, 0.0, 1.0, 0.0, _GLF_IDENTITY(0.0, min(0.0, _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(length(vec4(-160.644, 5846.2532, -1.2, -1.5))))))), 0.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, _GLF_IDENTITY(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), (0.0) + _GLF_IDENTITY(log(1.0), (false ? _GLF_FUZZED(-745.552) : log(1.0)))))), 0.0)), 0.0, 0.0), _GLF_IDENTITY(vec4(1.0, determinant(mat4(0.0, 1.0, 0.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(0.0, float(mat2(_GLF_IDENTITY(0.0, float(vec3(0.0, 1.0, 0.0))), 0.0, 0.0, 0.0))), 0.0, 0.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, _GLF_IDENTITY(0.0, (0.0) + log(1.0)))), _GLF_IDENTITY(float(mat2x4(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, _GLF_IDENTITY(0.0, (0.0) + log(1.0)))), 0.0, 1.0, 1.0, 0.0, length(vec4(0.0, 0.0, 0.0, 0.0)), 1.0, exp(0.0))), (float(mat2x4(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, _GLF_IDENTITY(0.0, (0.0) + log(1.0)))), 0.0, 1.0, 1.0, 0.0, length(vec4(0.0, 0.0, 0.0, 0.0)), 1.0, exp(0.0)))) + 0.0)), _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-8.3)), bool(false))))), 0.0, 0.0), _GLF_IDENTITY((false ? _GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(vec4(2825.8423, -9.5, 4.9, -7114.9801)), clamp(_GLF_FUZZED(vec4(2825.8423, -9.5, 4.9, -7114.9801)), _GLF_FUZZED(vec4(2825.8423, -9.5, 4.9, -7114.9801)), _GLF_FUZZED(vec4(2825.8423, -9.5, 4.9, -7114.9801)))), vec4(1.0, 1.0, 1.0, 1.0) * (_GLF_IDENTITY(_GLF_FUZZED(vec4(2825.8423, -9.5, 4.9, -7114.9801)), clamp(_GLF_FUZZED(vec4(2825.8423, -9.5, 4.9, -7114.9801)), _GLF_FUZZED(vec4(2825.8423, -9.5, 4.9, -7114.9801)), _GLF_FUZZED(vec4(2825.8423, -9.5, 4.9, -7114.9801)))))) : vec4(1.0, determinant(mat4(0.0, 1.0, 0.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, _GLF_IDENTITY(0.0, (0.0) + log(1.0)))), 0.0)), 0.0, 0.0)), (false ? _GLF_FUZZED(vec4(2.8, 244.549, -6.3, 6.6)) : (false ? _GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(vec4(2825.8423, -9.5, 4.9, -7114.9801)), clamp(_GLF_FUZZED(vec4(2825.8423, -9.5, 4.9, -7114.9801)), _GLF_FUZZED(vec4(2825.8423, -9.5, 4.9, -7114.9801)), _GLF_FUZZED(vec4(2825.8423, -9.5, 4.9, -7114.9801)))), vec4(1.0, 1.0, 1.0, 1.0) * (_GLF_IDENTITY(_GLF_FUZZED(vec4(2825.8423, -9.5, 4.9, -7114.9801)), clamp(_GLF_FUZZED(vec4(2825.8423, -9.5, 4.9, -7114.9801)), _GLF_FUZZED(vec4(2825.8423, -9.5, 4.9, -7114.9801)), _GLF_FUZZED(vec4(2825.8423, -9.5, 4.9, -7114.9801)))))) : vec4(1.0, determinant(mat4(0.0, 1.0, 0.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, _GLF_IDENTITY(0.0, (0.0) + log(1.0)))), 0.0)), 0.0, 0.0)))))))), dot(vec4(sqrt(1.0), 0.0, 0.0, 0.0), vec4(1.0, determinant(mat4(0.0, 1.0, 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-20.39)), float(0.0), bool(true)))) + 0.0), 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0)), 0.0, 0.0))), determinant(mat2(cos(_GLF_IDENTITY(0.0, mix(float(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(3570.8851)), bool(false)))), float(_GLF_FUZZED(-9.0)), bool(false)))), abs(0.0), length(vec2(0.0, 0.0)), 1.0)), 0.0, 0.0, 1.0), mat3(1.0) * (mat3(injectionSwitch, 1.0, 1.0, _GLF_IDENTITY(dot(vec4(sqrt(_GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED((-7.2 / 4.3))), float(_GLF_IDENTITY(1.0, 1.0 * (1.0))), bool(true))), _GLF_IDENTITY(1.0, 1.0 * (1.0))))), 0.0, 0.0, 0.0), vec4(1.0, determinant(mat4(0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(1.0, max(1.0, 1.0)), 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(0.0, (true ? _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)) : _GLF_FUZZED(8.0))), 0.0)), 0.0, 0.0)), dot(vec4(sqrt(1.0), _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED((+ -7.3))), bool(false))), 0.0, 0.0), vec4(1.0, determinant(mat4(0.0, 1.0, 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_IDENTITY(_GLF_FUZZED(6920.4564), min(_GLF_FUZZED(6920.4564), _GLF_FUZZED(6920.4564))))), 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0)), 0.0, 0.0))), determinant(mat2(cos(0.0), abs(0.0), length(vec2(0.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)))), 1.0)), 0.0, _GLF_IDENTITY(0.0, clamp(0.0, _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(5.2) : 0.0)), 0.0)), 1.0))))).y))))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))
  {
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   else
    {
    }
   if(_GLF_DEAD(false))
    {
     do
      {
       barrier();
      }
     while(_GLF_WRAPPED_LOOP(false));
    }
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)), ! (! (_GLF_DEAD(_GLF_IDENTITY(false, (false) && true))))))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   for(int _injected_loop_counter = (1 ^ 0); _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED((248.785 + 2227.4957))), float(injectionSwitch.y), bool(true))))))) || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY((injectionSwitch.y), clamp(_GLF_IDENTITY((injectionSwitch.y), ((injectionSwitch.y)) + sin(0.0)), (injectionSwitch.y), (injectionSwitch.y))) + abs(_GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(1.0, 0.0)), dot(_GLF_IDENTITY(vec2(0.0, 1.0), (vec2(0.0, 1.0)) - vec2(0.0, 0.0)), vec2(1.0, 0.0)))))))))
  {
   if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), ! (! (_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * 1.0) < injectionSwitch.y)))))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_WRAPPED_IF_FALSE(false))
        {
        }
       else
        {
         barrier();
        }
      }
    }
   else
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(false), bool(bvec3(bool(false), false, false)))), (bool(_GLF_IDENTITY(bool(false), bool(bvec3(bool(false), false, false))))) && true))))
      return;
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_WRAPPED_IF_FALSE(false))
          {
          }
         else
          {
           barrier();
          }
         if(_GLF_DEAD(false))
          return;
        }
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     else
      {
       if(_GLF_DEAD(false))
        return;
      }
    }
   for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _GLF_IDENTITY(_injected_loop_counter ++, 1 * (_GLF_IDENTITY(_injected_loop_counter ++, ~ (~ (_injected_loop_counter ++))))))
    {
     for(int _injected_loop_counter = ((1 << _GLF_IDENTITY(_GLF_IDENTITY(int(5), (_GLF_IDENTITY(int(5), (_GLF_IDENTITY(int(_GLF_IDENTITY(5, min(5, 5))), max(int(5), int(5)))) + int(_GLF_ZERO(0.0, injectionSwitch.x)))) | (int(5))), int(5))) >> _GLF_IDENTITY(int(5), _GLF_IDENTITY(int(5), ~ (~ (int(5)))))); _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
      {
       return;
      }
    }
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   do
    {
     return;
    }
   while(_GLF_WRAPPED_LOOP(false));
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
    return;
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, (false) || false)))
    {
    }
   else
    {
     barrier();
    }
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(_GLF_IDENTITY(mat4(_GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], mix(float(injectionSwitch[1]), float(_GLF_FUZZED(55.32)), bool(false))))) : _GLF_FUZZED(vec2(-2.2, -7.5)))), 0.0, 0.0, abs(1.0), 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0), (true ? mat4(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(-2.2, -7.5)))), 0.0, 0.0, abs(1.0), 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0) : _GLF_FUZZED(mat4(-46.56, 274.852, -5.3, 1.4, -49.92, -5.8, -4.3, -1.5, 4.6, 3.7, -94.06, 7475.2663, 2.7, -4147.4928, -828.713, 85.83))))), clamp(vec2(_GLF_IDENTITY(mat4(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(-2.2, -7.5)))), 0.0, 0.0, abs(1.0), 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0), (_GLF_IDENTITY(true ? mat4(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(-2.2, -7.5)))), 0.0, 0.0, abs(1.0), 0.0, _GLF_IDENTITY(1.0, (1.0) / 1.0), 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0) : _GLF_FUZZED(mat4(-46.56, 274.852, -5.3, 1.4, -49.92, -5.8, -4.3, -1.5, 4.6, 3.7, -94.06, 7475.2663, 2.7, -4147.4928, -828.713, 85.83)), (true ? mat4(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(-2.2, -7.5)))), 0.0, 0.0, abs(1.0), 0.0, _GLF_IDENTITY(1.0, (1.0) / 1.0), 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0) : _GLF_FUZZED(mat4(-46.56, 274.852, -5.3, 1.4, -49.92, -5.8, -4.3, -1.5, 4.6, 3.7, -94.06, 7475.2663, 2.7, -4147.4928, -828.713, 85.83))) - mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))))), vec2(_GLF_IDENTITY(mat4(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(-2.2, -7.5)))), 0.0, 0.0, _GLF_IDENTITY(abs(1.0), min(abs(1.0), abs(1.0))), 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0), (true ? mat4(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)), _GLF_IDENTITY((true ? injectionSwitch : _GLF_FUZZED(vec2(-2.2, -7.5))), max((true ? injectionSwitch : _GLF_FUZZED(vec2(-2.2, -7.5))), (true ? injectionSwitch : _GLF_FUZZED(vec2(-2.2, -7.5)))))), 0.0, 0.0, abs(1.0), 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0, _GLF_IDENTITY(0.0, (0.0) / _GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(1.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0)), dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0)))))), 1.0, 0.0, 0.0) : _GLF_IDENTITY(_GLF_FUZZED(mat4(-46.56, 274.852, -5.3, 1.4, -49.92, -5.8, -4.3, _GLF_IDENTITY(-1.5, clamp(-1.5, -1.5, -1.5)), 4.6, 3.7, -94.06, 7475.2663, 2.7, -4147.4928, -828.713, 85.83)), transpose(transpose(_GLF_FUZZED(mat4(-46.56, 274.852, -5.3, 1.4, -49.92, -5.8, -4.3, -1.5, 4.6, 3.7, -94.06, 7475.2663, 2.7, -4147.4928, _GLF_IDENTITY(-828.713, min(-828.713, _GLF_IDENTITY(-828.713, max(-828.713, -828.713)))), 85.83)))))))), _GLF_IDENTITY(vec2(_GLF_IDENTITY(mat4(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(true, false || (true)) ? injectionSwitch : _GLF_FUZZED(vec2(-2.2, -7.5)))), 0.0, 0.0, abs(1.0), 0.0, 1.0, 0.0, _GLF_IDENTITY(1.0, min(1.0, 1.0)), 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0), (true ? mat4(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(-2.2, -7.5)))), _GLF_IDENTITY(0.0, (0.0) - tan(0.0)), 0.0, abs(1.0), 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0) : _GLF_IDENTITY(_GLF_FUZZED(mat4(-46.56, 274.852, -5.3, 1.4, -49.92, -5.8, -4.3, -1.5, 4.6, 3.7, -94.06, 7475.2663, 2.7, -4147.4928, -828.713, 85.83)), transpose(transpose(_GLF_IDENTITY(_GLF_FUZZED(mat4(-46.56, 274.852, -5.3, 1.4, -49.92, -5.8, -4.3, -1.5, 4.6, 3.7, -94.06, 7475.2663, 2.7, -4147.4928, -828.713, 85.83)), (_GLF_FUZZED(mat4(-46.56, 274.852, -5.3, 1.4, -49.92, -5.8, -4.3, -1.5, 4.6, 3.7, -94.06, 7475.2663, 2.7, -4147.4928, -828.713, 85.83))) * mat4(1.0)))))))), (vec2(_GLF_IDENTITY(mat4(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(-2.2, _GLF_IDENTITY(-7.5, (false ? _GLF_FUZZED(-74.52) : -7.5)))))), 0.0, 0.0, abs(1.0), 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0), (true ? mat4(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(-2.2, -7.5)))), 0.0, 0.0, abs(1.0), 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0) : _GLF_IDENTITY(_GLF_FUZZED(mat4(-46.56, 274.852, -5.3, 1.4, -49.92, -5.8, -4.3, -1.5, 4.6, 3.7, -94.06, 7475.2663, 2.7, -4147.4928, -828.713, 85.83)), transpose(transpose(_GLF_IDENTITY(_GLF_FUZZED(mat4(-46.56, 274.852, -5.3, 1.4, -49.92, -5.8, -4.3, -1.5, 4.6, 3.7, -94.06, 7475.2663, 2.7, -4147.4928, -828.713, 85.83)), (_GLF_FUZZED(mat4(-46.56, 274.852, -5.3, 1.4, -49.92, -5.8, -4.3, -1.5, 4.6, 3.7, -94.06, 7475.2663, 2.7, -4147.4928, -828.713, 85.83))) * mat4(1.0))))))))) * mat2(1.0))))), _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(min(injectionSwitch, injectionSwitch), mat2(1.0) * (min(injectionSwitch, injectionSwitch)))))), mix(vec2(_GLF_FUZZED(-31.20), _GLF_IDENTITY((injectionSwitch), clamp(_GLF_IDENTITY((injectionSwitch), clamp((injectionSwitch), (injectionSwitch), (injectionSwitch))), (injectionSwitch), (injectionSwitch)))[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(_GLF_IDENTITY(((true ? _GLF_IDENTITY(345.081, float(vec3(345.081, 0.0, 1.0))) : -3.7) - -79.33), clamp(((true ? 345.081 : -3.7) - -79.33), (_GLF_IDENTITY((true ? _GLF_IDENTITY(345.081, mix(float(_GLF_FUZZED(-8.9)), float(345.081), bool(true))) : -3.7) - -79.33, 1.0 * (_GLF_IDENTITY(_GLF_IDENTITY((true ? 345.081 : -3.7) - -79.33, (true ? _GLF_IDENTITY((true ? 345.081 : -3.7) - -79.33, mix(float((true ? 345.081 : -3.7) - -79.33), float(_GLF_FUZZED(vec2(-89.14, -6.0).r)), bool(false))) : _GLF_FUZZED(mix(757.113, -3.0, 698.632)))), mix(float(_GLF_FUZZED(vec2(878.620, 8.3).y)), float((true ? 345.081 : -3.7) - -79.33), bool(true)))))), _GLF_IDENTITY(((true ? 345.081 : _GLF_IDENTITY(-3.7, max(-3.7, -3.7))) - -79.33), (((true ? 345.081 : -3.7) - -79.33)) / 1.0))))), bvec2(true, false))).y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bool(injectionSwitch.x > injectionSwitch.y)), (bool(bool(injectionSwitch.x > injectionSwitch.y))) && true)), false, false)), bool(bvec3(bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(-6.9, 2.2).xx) : _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)))))).x > injectionSwitch.y, _GLF_IDENTITY(bool(bool(injectionSwitch.x > injectionSwitch.y)), (bool(bool(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y))))) && true)), false, _GLF_IDENTITY(false, false || (false)))), true, _GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, (false) || false)), ! (! (! (_GLF_IDENTITY(false, (false) || false)))))))))))))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), bool(bvec4((injectionSwitch.x < injectionSwitch.y), false, true, false))))))
    {
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
      }
     else
      {
       for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < ((1 << _GLF_IDENTITY(int(3), int(3))) >> _GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), 0 | (int(3)))))); _injected_loop_counter ++)
        {
         if(_GLF_DEAD(false))
          barrier();
        }
      }
     barrier();
    }
   else
    {
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y))))))
    barrier();
  }
}
