#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer WriteVal {
 uint write_val;
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true), false, true, false))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     return;
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(mat2(injectionSwitch.y, determinant(mat2(_GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0))), _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 1.0)), 1.0, 1.0)))))))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, true && (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), true && (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), false || (_GLF_IDENTITY(false, (false) || false)))))) && true)))))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, 1.0 * (_GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(-9905.9290)), _GLF_IDENTITY(bool(false), true && _GLF_IDENTITY((_GLF_IDENTITY(bool(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) && true))))), bool(bvec4(bool(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) && true))))), false, _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y)), false)))), (_GLF_IDENTITY((bool(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) && true)))))), bool(bool(_GLF_IDENTITY(_GLF_IDENTITY((bool(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) && true)))))), (_GLF_IDENTITY((bool(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (false)))))), (false) && true)))))), ! (! (_GLF_IDENTITY((bool(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, false || (false))))), true, false, true)), true && (bool(bvec4(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, false || (false))))), true, false, true))))), ! (! (_GLF_IDENTITY(false, (false) && true)))))), ! (! ((bool(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) && true))))))))))))) || _GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, false)), ! (! (_GLF_IDENTITY(bool(bvec4(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, false)), (bool(bvec4(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, false))) || false)))))), false || ((bool(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, false || (false)))), (false) && true)), ! (! (! (_GLF_IDENTITY(false, (false) && true))))))))))))))) && true))))))))), bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), bool(bool(_GLF_IDENTITY(false, false || (false))))), (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)).y, _GLF_IDENTITY(1.0, _GLF_IDENTITY(_GLF_IDENTITY(dot(vec3(abs(0.0), 0.0, 0.0), vec3(1.0, 1.0, _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-3.6) : 1.0)))), dot(vec3(abs(0.0), 0.0, 0.0), vec3(1.0, 1.0, 1.0))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(dot(vec3(abs(0.0), 0.0, 0.0), vec3(1.0, 1.0, 1.0)), dot(vec3(abs(0.0), 0.0, 0.0), _GLF_IDENTITY(vec3(1.0, 1.0, 1.0), (true ? _GLF_IDENTITY(vec3(1.0, 1.0, 1.0), mix(vec3((vec3(1.0, 1.0, 1.0))[0], _GLF_FUZZED(-79.80), (vec3(1.0, 1.0, 1.0))[2]), vec3(_GLF_FUZZED(9310.2607), (vec3(1.0, 1.0, 1.0))[1], _GLF_FUZZED(-5.1)), bvec3(false, true, false))) : _GLF_FUZZED(vec3(338.169, 8.7, -9.2)))))), (_GLF_IDENTITY(dot(vec3(abs(0.0), 0.0, 0.0), vec3(1.0, 1.0, 1.0)), dot(vec3(abs(0.0), 0.0, 0.0), vec3(1.0, 1.0, 1.0)))) + 0.0), _GLF_IDENTITY(_GLF_IDENTITY(dot(vec3(abs(0.0), 0.0, 0.0), vec3(1.0, 1.0, 1.0)), dot(vec3(abs(0.0), 0.0, 0.0), vec3(1.0, 1.0, 1.0))), 0.0 + (_GLF_IDENTITY(dot(vec3(abs(0.0), 0.0, 0.0), vec3(1.0, 1.0, 1.0)), dot(vec3(abs(0.0), 0.0, 0.0), vec3(1.0, 1.0, 1.0))))), _GLF_IDENTITY(dot(vec3(abs(0.0), 0.0, 0.0), vec3(1.0, 1.0, 1.0)), dot(vec3(abs(0.0), 0.0, 0.0), vec3(1.0, 1.0, 1.0))))) + (_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)))) * (_GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(_GLF_IDENTITY(_GLF_IDENTITY(-9905.9290, float(mat4(-9905.9290, 0.0, sqrt(0.0), 1.0, 0.0, 0.0, exp(0.0), 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0))), min(_GLF_IDENTITY(-9905.9290, float(mat4(_GLF_IDENTITY(-9905.9290, float(mat4x2(-9905.9290, 1.0, 0.0, 0.0, sqrt(_GLF_IDENTITY(1.0, float(_GLF_IDENTITY(float(1.0), float(vec3(float(1.0), 1.0, 1.0)))))), abs(0.0), tan(_GLF_IDENTITY(0.0, max(0.0, _GLF_IDENTITY(0.0, (0.0) / 1.0)))), 0.0))), 0.0, sqrt(0.0), 1.0, 0.0, 0.0, exp(0.0), 0.0, 1.0, 1.0, 1.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0, 0.0, 1.0, 0.0))), _GLF_IDENTITY(-9905.9290, float(mat4(-9905.9290, 0.0, sqrt(0.0), 1.0, 0.0, 0.0, exp(0.0), 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0))))))), _GLF_IDENTITY(_GLF_IDENTITY(bool(false), (bool(false)) && true), ! (! (_GLF_IDENTITY(bool(false), (bool(false)) && true)))))))))))), ! (! (_GLF_IDENTITY(bool(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, 1.0 * (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0), mix(float(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y), float(_GLF_FUZZED(_GLF_IDENTITY(-9905.9290, float(mat4(-9905.9290, 0.0, sqrt(0.0), _GLF_IDENTITY(1.0, min(1.0, 1.0)), 0.0, 0.0, exp(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, _GLF_IDENTITY(0.0, (true ? _GLF_IDENTITY(0.0, float(mat4x3(0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0))) : _GLF_FUZZED(-3.4)))))), 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0))))), bool(false))))))))), (bool(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, 1.0 * (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, float(vec3(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[_GLF_IDENTITY(0, (true ? _GLF_IDENTITY(0, min(0, 0)) : _GLF_FUZZED(-69539)))], injectionSwitch[1])).y, _GLF_IDENTITY(1.0, _GLF_IDENTITY(float(_GLF_IDENTITY(mat2x3(_GLF_IDENTITY(1.0, float(vec3(1.0, 1.0, 1.0))), 1.0, 1.0, cos(0.0), 1.0, 0.0), mat2x3(mat3(mat2x3(_GLF_IDENTITY(1.0, float(vec3(1.0, 1.0, 1.0))), 1.0, 1.0, cos(0.0), 1.0, 0.0))))), max(_GLF_IDENTITY(float(_GLF_IDENTITY(mat2x3(_GLF_IDENTITY(1.0, float(vec3(1.0, 1.0, 1.0))), 1.0, 1.0, cos(0.0), 1.0, 0.0), mat2x3(mat3(mat2x3(_GLF_IDENTITY(1.0, float(vec3(1.0, 1.0, 1.0))), 1.0, 1.0, cos(0.0), 1.0, 0.0))))), clamp(float(_GLF_IDENTITY(mat2x3(_GLF_IDENTITY(_GLF_IDENTITY(1.0, float(vec3(1.0, 1.0, 1.0))), max(_GLF_IDENTITY(1.0, float(vec3(1.0, 1.0, 1.0))), _GLF_IDENTITY(_GLF_IDENTITY(1.0, float(vec3(1.0, 1.0, 1.0))), (_GLF_IDENTITY(1.0, float(vec3(1.0, 1.0, 1.0)))) / 1.0))), 1.0, 1.0, cos(0.0), 1.0, 0.0), mat2x3(mat3(mat2x3(_GLF_IDENTITY(1.0, float(vec3(1.0, 1.0, 1.0))), 1.0, 1.0, cos(0.0), 1.0, 0.0))))), float(_GLF_IDENTITY(mat2x3(_GLF_IDENTITY(1.0, _GLF_IDENTITY(float(vec3(1.0, 1.0, 1.0)), _GLF_IDENTITY(dot(vec3(0.0, 0.0, tan(0.0)), vec3(1.0, 1.0, 1.0)), dot(vec3(0.0, 0.0, tan(0.0)), vec3(1.0, 1.0, 1.0))) + (float(vec3(1.0, 1.0, 1.0))))), 1.0, 1.0, cos(0.0), 1.0, 0.0), mat2x3(mat3(mat2x3(_GLF_IDENTITY(1.0, float(vec3(1.0, _GLF_IDENTITY(1.0, (true ? _GLF_IDENTITY(_GLF_IDENTITY(1.0, (1.0) / 1.0), clamp(1.0, 1.0, 1.0)) : _GLF_FUZZED(-38.01))), 1.0))), 1.0, 1.0, cos(0.0), 1.0, 0.0))))), float(_GLF_IDENTITY(mat2x3(_GLF_IDENTITY(1.0, float(vec3(1.0, 1.0, 1.0))), 1.0, 1.0, cos(0.0), 1.0, 0.0), mat2x3(mat3(mat2x3(_GLF_IDENTITY(1.0, float(vec3(_GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-9199.8005) : 1.0)), 1.0, 1.0)), 1.0, 1.0))), 1.0, 1.0, cos(0.0), 1.0, 0.0))))))), float(_GLF_IDENTITY(mat2x3(_GLF_IDENTITY(1.0, _GLF_IDENTITY(float(vec3(1.0, 1.0, 1.0)), clamp(float(vec3(1.0, 1.0, 1.0)), float(vec3(1.0, 1.0, 1.0)), float(vec3(1.0, 1.0, 1.0))))), 1.0, 1.0, cos(0.0), 1.0, 0.0), mat2x3(mat3(mat2x3(_GLF_IDENTITY(1.0, float(vec3(1.0, 1.0, 1.0))), 1.0, _GLF_IDENTITY(1.0, float(_GLF_IDENTITY(_GLF_IDENTITY(mat3(1.0, 1.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0)), dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0))), cos(0.0), 0.0, _GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0)), dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0)))), (mat3(1.0, 1.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0)), dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0))), cos(0.0), 0.0, _GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0)), dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0))))) - mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)), transpose(transpose(_GLF_IDENTITY(_GLF_IDENTITY(mat3(1.0, 1.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0)), dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0))), cos(0.0), 0.0, _GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0)), dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0)))), (mat3(1.0, 1.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0)), dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0))), cos(0.0), 0.0, _GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0)), dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0))))) - mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)), (_GLF_IDENTITY(mat3(1.0, 1.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0)), dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0))), cos(0.0), 0.0, _GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0)), dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0)))), (mat3(1.0, 1.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0)), dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0))), cos(0.0), 0.0, _GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0)), dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0))))) - mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))) - mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))))))), cos(0.0), 1.0, 0.0)))))))), _GLF_IDENTITY(_GLF_IDENTITY(dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(0.0, 1.0, _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(-3210.9083) : _GLF_IDENTITY(0.0, float(_GLF_IDENTITY(mat3(0.0, 0.0, 0.0, 1.0, 1.0, exp(0.0), 1.0, 0.0, tan(0.0)), (mat3(0.0, 0.0, 0.0, 1.0, 1.0, exp(0.0), 1.0, 0.0, tan(0.0))) + mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)))))), 0.0)), dot(vec4(0.0, 1.0, 0.0, _GLF_IDENTITY(0.0, min(0.0, 0.0))), _GLF_IDENTITY(vec4(0.0, 1.0, 0.0, 0.0), vec4(1.0, 1.0, 1.0, 1.0) * (vec4(0.0, 1.0, 0.0, 0.0))))), (_GLF_IDENTITY(dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(0.0, 1.0, _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(-3210.9083) : _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, (0.0) / 1.0)) / 1.0), float(_GLF_IDENTITY(mat3(0.0, 0.0, 0.0, 1.0, 1.0, exp(0.0), 1.0, 0.0, tan(0.0)), (mat3(0.0, 0.0, 0.0, 1.0, 1.0, exp(0.0), 1.0, 0.0, tan(0.0))) + mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, (_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, (true) && true)))) ? 0.0 : _GLF_FUZZED(77.11))), 0.0, 0.0)))), float(mat3(_GLF_IDENTITY(0.0, float(_GLF_IDENTITY(mat3(0.0, 0.0, 0.0, 1.0, 1.0, exp(0.0), 1.0, 0.0, tan(0.0)), (mat3(0.0, 0.0, 0.0, 1.0, 1.0, exp(0.0), 1.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)), tan(0.0))) + mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(77.11))), 0.0, 0.0)))), 0.0, 1.0, 1.0, _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), 1.0, 1.0, exp(0.0), 1.0))))), 0.0)), dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(0.0, 1.0, 0.0, 0.0)))) + 0.0)))), mix(float(injectionSwitch.y), float(_GLF_IDENTITY(_GLF_FUZZED(_GLF_IDENTITY(-9905.9290, _GLF_IDENTITY(float(mat4(-9905.9290, 0.0, sqrt(0.0), 1.0, 0.0, 0.0, exp(0.0), 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0)), float(_GLF_IDENTITY(mat3(float(mat4(-9905.9290, 0.0, sqrt(0.0), 1.0, 0.0, 0.0, exp(0.0), 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0)), 0.0, 1.0, 1.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), _GLF_IDENTITY(0.0, float(_GLF_IDENTITY(mat3x4(0.0, cos(0.0), 0.0, _GLF_IDENTITY(dot(vec2(tan(0.0), 1.0), vec2(0.0, 1.0)), dot(vec2(tan(0.0), 1.0), vec2(0.0, 1.0))), 1.0, 0.0, 1.0, 1.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), 1.0), (mat3x4(0.0, cos(0.0), 0.0, _GLF_IDENTITY(dot(vec2(tan(0.0), 1.0), vec2(0.0, 1.0)), dot(vec2(tan(0.0), 1.0), vec2(0.0, 1.0))), 1.0, 0.0, 1.0, 1.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), 1.0)) - mat3x4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)))), round(length(normalize(1.0))), sin(0.0)), (mat3(_GLF_IDENTITY(float(mat4(-9905.9290, 0.0, sqrt(0.0), 1.0, 0.0, 0.0, exp(0.0), 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0)), mix(float(_GLF_FUZZED(-8847.8916)), float(float(mat4(-9905.9290, 0.0, sqrt(0.0), 1.0, 0.0, 0.0, exp(0.0), 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0))), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), 0.0, 1.0, 1.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, round(length(normalize(1.0))), sin(0.0))) * mat3(1.0)))))), max(_GLF_FUZZED(_GLF_IDENTITY(-9905.9290, _GLF_IDENTITY(float(mat4(-9905.9290, 0.0, sqrt(0.0), 1.0, 0.0, 0.0, exp(0.0), 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-6705.9799)), float(1.0), bool(true))), _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(6.9) : 0.0)))), float(mat3(float(mat4(-9905.9290, 0.0, sqrt(0.0), 1.0, 0.0, 0.0, exp(0.0), 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0)), 0.0, 1.0, 1.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, round(length(normalize(1.0))), sin(0.0)))))), _GLF_IDENTITY(_GLF_FUZZED(_GLF_IDENTITY(-9905.9290, _GLF_IDENTITY(float(mat4(-9905.9290, 0.0, sqrt(0.0), 1.0, 0.0, 0.0, exp(0.0), 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0)), float(mat3(float(mat4(-9905.9290, 0.0, sqrt(0.0), 1.0, 0.0, 0.0, _GLF_IDENTITY(exp(0.0), mix(float(_GLF_FUZZED(6417.5640)), float(_GLF_IDENTITY(exp(0.0), clamp(exp(0.0), exp(0.0), exp(0.0)))), bool(true))), 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0)), 0.0, 1.0, 1.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, round(length(_GLF_IDENTITY(normalize(1.0), (normalize(1.0)) - tan(0.0)))), sin(0.0)))))), clamp(_GLF_FUZZED(_GLF_IDENTITY(-9905.9290, _GLF_IDENTITY(float(mat4(-9905.9290, 0.0, sqrt(0.0), 1.0, 0.0, 0.0, exp(0.0), 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0)), float(mat3(float(mat4(-9905.9290, 0.0, sqrt(0.0), 1.0, 0.0, 0.0, exp(0.0), 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0)), 0.0, 1.0, _GLF_IDENTITY(1.0, float(mat4x2(_GLF_IDENTITY(1.0, min(1.0, 1.0)), 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0))), 1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, round(length(normalize(1.0))), sin(0.0)))))), _GLF_FUZZED(_GLF_IDENTITY(-9905.9290, _GLF_IDENTITY(float(mat4(-9905.9290, 0.0, sqrt(0.0), 1.0, 0.0, 0.0, exp(0.0), 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0)), float(_GLF_IDENTITY(mat3(float(mat4(-9905.9290, 0.0, sqrt(0.0), 1.0, 0.0, 0.0, exp(0.0), 0.0, _GLF_IDENTITY(1.0, 1.0 * (1.0)), 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0)), 0.0, 1.0, 1.0, _GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, float(mat3x2(1.0, 0.0, 1.0, 1.0, 0.0, 0.0)))) - 0.0), _GLF_ONE(1.0, injectionSwitch.y), 0.0, round(length(normalize(1.0))), sin(0.0)), _GLF_IDENTITY(mat3(mat4(_GLF_IDENTITY(mat3(float(mat4(-9905.9290, 0.0, sqrt(0.0), 1.0, 0.0, 0.0, exp(0.0), 0.0, _GLF_IDENTITY(1.0, 1.0 * (1.0)), 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0)), 0.0, 1.0, 1.0, _GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, float(mat3x2(1.0, 0.0, 1.0, 1.0, 0.0, 0.0)))) - 0.0), _GLF_ONE(1.0, injectionSwitch.y), 0.0, round(length(normalize(1.0))), sin(0.0)), mat3(mat3(mat3(float(mat4(-9905.9290, 0.0, sqrt(0.0), 1.0, 0.0, 0.0, exp(0.0), 0.0, _GLF_IDENTITY(1.0, 1.0 * (1.0)), 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0)), 0.0, 1.0, 1.0, _GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, float(mat3x2(1.0, 0.0, 1.0, 1.0, 0.0, 0.0)))) - 0.0), _GLF_ONE(1.0, injectionSwitch.y), 0.0, round(length(normalize(1.0))), sin(0.0))))))), (mat3(mat4(_GLF_IDENTITY(mat3(float(mat4(-9905.9290, 0.0, sqrt(0.0), 1.0, 0.0, 0.0, exp(0.0), 0.0, _GLF_IDENTITY(1.0, 1.0 * (1.0)), 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0)), 0.0, 1.0, 1.0, _GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, float(mat3x2(1.0, 0.0, 1.0, 1.0, 0.0, 0.0)))) - 0.0), _GLF_ONE(1.0, injectionSwitch.y), 0.0, round(length(normalize(1.0))), sin(0.0)), mat3(mat3(mat3(float(mat4(-9905.9290, 0.0, sqrt(0.0), 1.0, 0.0, 0.0, exp(0.0), 0.0, _GLF_IDENTITY(1.0, 1.0 * (1.0)), 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0)), 0.0, 1.0, 1.0, _GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, float(mat3x2(1.0, 0.0, 1.0, 1.0, 0.0, 0.0)))) - 0.0), _GLF_ONE(1.0, injectionSwitch.y), 0.0, round(length(normalize(1.0))), sin(0.0)))))))) - mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))))))), _GLF_FUZZED(_GLF_IDENTITY(-9905.9290, _GLF_IDENTITY(float(mat4(-9905.9290, 0.0, sqrt(0.0), 1.0, 0.0, 0.0, exp(0.0), 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0)), float(mat3(float(mat4(-9905.9290, 0.0, sqrt(0.0), 1.0, 0.0, 0.0, exp(0.0), 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0)), 0.0, 1.0, 1.0, 1.0, _GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), mix(_GLF_IDENTITY(float(_GLF_ONE(1.0, injectionSwitch.y)), min(_GLF_IDENTITY(float(_GLF_ONE(1.0, injectionSwitch.y)), clamp(float(_GLF_ONE(1.0, injectionSwitch.y)), float(_GLF_ONE(1.0, injectionSwitch.y)), float(_GLF_ONE(1.0, injectionSwitch.y)))), float(_GLF_ONE(1.0, injectionSwitch.y)))), float(_GLF_FUZZED(7.4)), bool(false))), 0.0, round(length(normalize(1.0))), sin(0.0))))))))))), bool(false)))))))))) || _GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(mix(vec2(91.88, 42.60), injectionSwitch, vec2(1.2, 48.05))))).x > injectionSwitch.y), false || ((_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)))).x > injectionSwitch.y)))))))), true && (bool(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(vec4(injectionSwitch, 1.0, determinant(mat3(1.0, 0.0, 0.0, _GLF_IDENTITY(dot(vec3(0.0, 1.0, 1.0), vec3(1.0, 0.0, 0.0)), dot(vec3(0.0, 1.0, 1.0), vec3(1.0, 0.0, 0.0))), 1.0, abs(1.0), 0.0, 0.0, 1.0))))).x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-8027.3479)), float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(mat4(_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)), 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, tan(0.0), 1.0, 0.0, determinant(mat3(0.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 0.0, 0.0, 1.0, 0.0, sqrt(0.0))), 1.0, 1.0, determinant(mat2(determinant(mat2(0.0, 0.0, 0.0, 0.0)), _GLF_IDENTITY(dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(0.0, 1.0, 0.0, 0.0)), dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(0.0, 1.0, 0.0, 0.0))), 0.0, 0.0)), 1.0))).y, (_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))) / 1.0)), bool(true))), 1.0 * (_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_IDENTITY(injectionSwitch.y, (true ? _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, float(mat2(injectionSwitch.y, determinant(mat3(0.0, 1.0, exp(0.0), 0.0, 0.0, abs(1.0), 0.0, 0.0, 0.0)), abs(1.0), log(1.0))))), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? min(injectionSwitch.y, injectionSwitch.y) : _GLF_FUZZED(0.3)))), min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0), min(injectionSwitch.y, injectionSwitch.y)), _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)))) : _GLF_FUZZED(8.9)))), float(_GLF_FUZZED(-9905.9290)), bool(false))))))))))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(894.965), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED((+ 2.6))), bvec2(true, false))).x, (false ? _GLF_FUZZED(-757.073) : _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(894.965), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED((+ 2.6))), bvec2(true, false))).x)) > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch)).y, mix(float(_GLF_FUZZED((true ? 882.100 : 7580.9146))), float(_GLF_IDENTITY(injectionSwitch, mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch)).y), _GLF_IDENTITY(bool(true), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(bool(true), ! _GLF_IDENTITY((! (bool(true))), true && ((! (bool(true)))))))))), ! (! (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0))) * vec2(1.0, 1.0)), mat2(_GLF_ONE(_GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), max(_GLF_IDENTITY(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), max(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)))), _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)))), 1.0, 1.0)), injectionSwitch.y)) * (injectionSwitch)).y, false || (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch)).y)))))))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
      }
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0)))))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, bool(bvec4(false, true, false, true)))))))
    barrier();
   barrier();
  }
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bool(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))))), ! (! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bool(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))))))), (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bool(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))), ! (! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (_GLF_IDENTITY(! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), _GLF_IDENTITY(bool(bvec2(! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true)), bool(bool(bool(bvec2(! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true)))))))), bool(bool(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))) || false))))
  {
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, false || (false)), true, false)))))
    barrier();
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(false ? _GLF_FUZZED(374.489) : injectionSwitch.y, max(false ? _GLF_FUZZED(374.489) : injectionSwitch.y, false ? _GLF_FUZZED(374.489) : injectionSwitch.y)))), _GLF_IDENTITY(mix(float(_GLF_FUZZED(0.7)), float(injectionSwitch.y), bool(true)), (false ? _GLF_FUZZED(atanh(3.3)) : _GLF_IDENTITY(mix(float(_GLF_FUZZED(0.7)), float(injectionSwitch.y), bool(true)), float(mat2x3(mix(float(_GLF_FUZZED(0.7)), float(injectionSwitch.y), bool(true)), abs(1.0), 0.0, 0.0, 1.0, 0.0)))))))), ! (! (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(false ? _GLF_FUZZED(374.489) : injectionSwitch.y, _GLF_IDENTITY(max(false ? _GLF_FUZZED(374.489) : injectionSwitch.y, false ? _GLF_FUZZED(374.489) : injectionSwitch.y), clamp(max(false ? _GLF_FUZZED(374.489) : injectionSwitch.y, false ? _GLF_FUZZED(374.489) : injectionSwitch.y), _GLF_IDENTITY(max(false ? _GLF_FUZZED(374.489) : injectionSwitch.y, false ? _GLF_FUZZED(374.489) : injectionSwitch.y), 0.0 + (max(false ? _GLF_FUZZED(374.489) : injectionSwitch.y, false ? _GLF_FUZZED(374.489) : injectionSwitch.y))), max(false ? _GLF_FUZZED(374.489) : injectionSwitch.y, false ? _GLF_FUZZED(374.489) : injectionSwitch.y)))))), _GLF_IDENTITY(mix(float(_GLF_FUZZED(0.7)), float(injectionSwitch.y), bool(_GLF_IDENTITY(true, (true) && true))), (false ? _GLF_FUZZED(atanh(3.3)) : _GLF_IDENTITY(mix(float(_GLF_FUZZED(0.7)), float(injectionSwitch.y), bool(true)), float(mat2x3(mix(float(_GLF_FUZZED(0.7)), float(injectionSwitch.y), bool(true)), abs(1.0), 0.0, 0.0, 1.0, 0.0)))))))))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  return;
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(bvec2(! (false), false)))))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  return;
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, bool(bvec2(false, true))))), true), bvec2(bvec3(bvec2(_GLF_IDENTITY(false, _GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, true, false)), (bool(bvec3(false, true, false))) || false))), bool(bool(! (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, true, false)), (bool(bvec3(false, true, false))) || false)))))))) || (_GLF_IDENTITY(false, bool(bvec2(false, true))))), true), false)))))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY(_GLF_FUZZED(458.563), clamp(_GLF_FUZZED(458.563), _GLF_IDENTITY(_GLF_FUZZED(458.563), 1.0 * (_GLF_FUZZED(458.563))), _GLF_FUZZED(458.563))), _GLF_FUZZED(vec3(4818.8784, -52.69, 3.2).p)), vec2(_GLF_IDENTITY((injectionSwitch)[0], clamp((injectionSwitch)[0], (injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch), ((injectionSwitch)) / vec2(1.0, 1.0))[0])), (injectionSwitch)[1]), bvec2(true, true))).y))))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
      barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, bool(bool(false))), false, true))), true, true)))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, 1.0 * (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, _GLF_ONE(1.0, injectionSwitch.y) * (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY((injectionSwitch)[0], ((injectionSwitch)[0]) - 0.0), (injectionSwitch)[1]), vec2(_GLF_FUZZED(0.1), _GLF_FUZZED(9.5)), bvec2(false, false))).y)), mix(float(_GLF_FUZZED(9882.0883)), float(injectionSwitch.y), bool(true))))), injectionSwitch.y))))))
      return;
     barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
        barrier();
       barrier();
      }
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, true)), true && (bool(bvec2(false, true)))))), ! (! (_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, true)), true && (bool(bvec2(false, true))))))))))
      return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, true, false, false)))))
      barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 uint num_workgroup = gl_NumWorkGroups.x;
 uint workgroup_size = gl_WorkGroupSize.x;
 if(_GLF_DEAD(false))
  return;
 uint workgroup_id = gl_WorkGroupID.x;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
      {
       if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) && true), (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ((injectionSwitch.x < injectionSwitch.y)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(true ? injectionSwitch : _GLF_FUZZED(_GLF_IDENTITY((_GLF_IDENTITY(mat4(-9.5, -846.202, 5.1, -769.374, 83.50, -87.10, 1177.2770, 2.6, 603.370, _GLF_IDENTITY(771.849, (true ? 771.849 : _GLF_FUZZED(-863.802))), -1.5, 944.775, -4.0, -2.3, -5796.2270, 6103.3501)[1] * mat2x4(-1.5, -2712.2428, 9.2, 527.277, 906.513, -347.314, -9.7, -993.017), vec2(mat4x2(mat4(-9.5, -846.202, 5.1, -769.374, 83.50, -87.10, 1177.2770, 2.6, _GLF_IDENTITY(603.370, min(603.370, 603.370)), 771.849, -1.5, 944.775, -4.0, -2.3, -5796.2270, 6103.3501)[1] * mat2x4(-1.5, -2712.2428, 9.2, 527.277, 906.513, -347.314, -9.7, -993.017), 1.0, 1.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, determinant(mat3(1.0, log(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0))), determinant(mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0)), 0.0, 1.0, 0.0, 1.0, abs(1.0), abs(_GLF_IDENTITY(1.0, (1.0) / 1.0)))))))), min((mat4(-9.5, -846.202, 5.1, -769.374, 83.50, _GLF_IDENTITY(-87.10, (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? -87.10 : _GLF_FUZZED(-4.8), mix(float(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? -87.10 : _GLF_FUZZED(-4.8), 1.0 * (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? -87.10 : _GLF_FUZZED(-4.8), (false ? _GLF_FUZZED(-4.8) : _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? -87.10 : _GLF_FUZZED(-4.8)))))), float(_GLF_FUZZED(4.6)), bool(false))))), 1177.2770, 2.6, 603.370, 771.849, -1.5, 944.775, -4.0, -2.3, -5796.2270, 6103.3501)[1] * mat2x4(-1.5, -2712.2428, 9.2, 527.277, 906.513, -347.314, -9.7, -993.017)), (mat4(-9.5, -846.202, 5.1, -769.374, 83.50, -87.10, 1177.2770, 2.6, 603.370, 771.849, -1.5, 944.775, -4.0, -2.3, -5796.2270, 6103.3501)[1] * mat2x4(-1.5, -2712.2428, 9.2, 527.277, 906.513, -347.314, -9.7, _GLF_IDENTITY(-993.017, min(_GLF_IDENTITY(-993.017, max(_GLF_IDENTITY(-993.017, clamp(-993.017, -993.017, -993.017)), -993.017)), -993.017))))))), mix(vec2(_GLF_FUZZED(-7.6), _GLF_FUZZED(75.47)), vec2(_GLF_IDENTITY((true ? injectionSwitch : _GLF_FUZZED(_GLF_IDENTITY((_GLF_IDENTITY(mat4(-9.5, -846.202, 5.1, -769.374, 83.50, -87.10, 1177.2770, 2.6, 603.370, _GLF_IDENTITY(771.849, (true ? 771.849 : _GLF_FUZZED(-863.802))), -1.5, 944.775, -4.0, -2.3, -5796.2270, 6103.3501)[1] * mat2x4(-1.5, -2712.2428, 9.2, 527.277, 906.513, -347.314, -9.7, -993.017), vec2(mat4x2(mat4(-9.5, -846.202, 5.1, -769.374, 83.50, -87.10, 1177.2770, 2.6, _GLF_IDENTITY(603.370, min(603.370, 603.370)), 771.849, -1.5, 944.775, -4.0, -2.3, -5796.2270, 6103.3501)[1] * mat2x4(-1.5, -2712.2428, 9.2, 527.277, 906.513, -347.314, -9.7, -993.017), 1.0, 1.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, determinant(mat3(1.0, log(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0))), determinant(mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0)), 0.0, 1.0, 0.0, 1.0, abs(1.0), abs(_GLF_IDENTITY(1.0, (1.0) / 1.0)))))))), min((mat4(-9.5, -846.202, 5.1, -769.374, 83.50, _GLF_IDENTITY(-87.10, (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? -87.10 : _GLF_FUZZED(-4.8), mix(float(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? -87.10 : _GLF_FUZZED(-4.8), 1.0 * (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? -87.10 : _GLF_FUZZED(-4.8), (false ? _GLF_FUZZED(-4.8) : _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? -87.10 : _GLF_FUZZED(-4.8)))))), float(_GLF_FUZZED(4.6)), bool(false))))), 1177.2770, 2.6, 603.370, 771.849, -1.5, 944.775, -4.0, -2.3, -5796.2270, 6103.3501)[1] * mat2x4(-1.5, -2712.2428, 9.2, 527.277, 906.513, -347.314, -9.7, -993.017)), (mat4(-9.5, -846.202, 5.1, -769.374, 83.50, -87.10, 1177.2770, 2.6, 603.370, 771.849, -1.5, 944.775, -4.0, -2.3, -5796.2270, 6103.3501)[1] * mat2x4(-1.5, -2712.2428, 9.2, 527.277, 906.513, -347.314, -9.7, _GLF_IDENTITY(-993.017, min(_GLF_IDENTITY(-993.017, max(_GLF_IDENTITY(-993.017, clamp(-993.017, -993.017, -993.017)), -993.017)), -993.017))))))))[0], float(mat4x2((true ? injectionSwitch : _GLF_FUZZED(_GLF_IDENTITY((_GLF_IDENTITY(mat4(-9.5, -846.202, 5.1, -769.374, 83.50, -87.10, 1177.2770, 2.6, 603.370, _GLF_IDENTITY(771.849, (true ? 771.849 : _GLF_FUZZED(-863.802))), -1.5, 944.775, -4.0, -2.3, -5796.2270, 6103.3501)[1] * mat2x4(-1.5, -2712.2428, 9.2, 527.277, 906.513, -347.314, -9.7, -993.017), vec2(mat4x2(mat4(-9.5, -846.202, 5.1, -769.374, 83.50, -87.10, 1177.2770, 2.6, _GLF_IDENTITY(603.370, min(603.370, 603.370)), 771.849, -1.5, 944.775, -4.0, -2.3, -5796.2270, 6103.3501)[1] * mat2x4(-1.5, -2712.2428, 9.2, 527.277, 906.513, -347.314, -9.7, -993.017), 1.0, 1.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, determinant(mat3(1.0, log(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0))), determinant(mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0)), 0.0, 1.0, 0.0, 1.0, abs(1.0), abs(_GLF_IDENTITY(1.0, (1.0) / 1.0)))))))), min((mat4(-9.5, -846.202, 5.1, -769.374, 83.50, _GLF_IDENTITY(-87.10, (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? -87.10 : _GLF_FUZZED(-4.8), mix(float(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? -87.10 : _GLF_FUZZED(-4.8), 1.0 * (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? -87.10 : _GLF_FUZZED(-4.8), (false ? _GLF_FUZZED(-4.8) : _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? -87.10 : _GLF_FUZZED(-4.8)))))), float(_GLF_FUZZED(4.6)), bool(false))))), 1177.2770, 2.6, 603.370, 771.849, -1.5, 944.775, -4.0, -2.3, -5796.2270, 6103.3501)[1] * mat2x4(-1.5, -2712.2428, 9.2, 527.277, 906.513, -347.314, -9.7, -993.017)), (mat4(-9.5, -846.202, 5.1, -769.374, 83.50, -87.10, 1177.2770, 2.6, 603.370, 771.849, -1.5, 944.775, -4.0, -2.3, -5796.2270, 6103.3501)[1] * mat2x4(-1.5, -2712.2428, 9.2, 527.277, 906.513, -347.314, -9.7, _GLF_IDENTITY(-993.017, min(_GLF_IDENTITY(-993.017, max(_GLF_IDENTITY(-993.017, clamp(-993.017, -993.017, -993.017)), -993.017)), -993.017))))))))[0], 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0))), (true ? injectionSwitch : _GLF_FUZZED(_GLF_IDENTITY((_GLF_IDENTITY(mat4(-9.5, -846.202, 5.1, -769.374, 83.50, -87.10, 1177.2770, 2.6, 603.370, _GLF_IDENTITY(771.849, (true ? 771.849 : _GLF_FUZZED(-863.802))), -1.5, 944.775, -4.0, -2.3, -5796.2270, 6103.3501)[1] * mat2x4(-1.5, -2712.2428, 9.2, 527.277, 906.513, -347.314, -9.7, -993.017), vec2(mat4x2(mat4(-9.5, -846.202, 5.1, -769.374, 83.50, -87.10, 1177.2770, 2.6, _GLF_IDENTITY(603.370, min(603.370, 603.370)), 771.849, -1.5, 944.775, -4.0, -2.3, -5796.2270, 6103.3501)[1] * mat2x4(-1.5, -2712.2428, 9.2, 527.277, 906.513, -347.314, -9.7, -993.017), 1.0, 1.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, determinant(mat3(1.0, log(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0))), determinant(mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0)), 0.0, 1.0, 0.0, 1.0, abs(1.0), abs(_GLF_IDENTITY(1.0, (1.0) / 1.0)))))))), min((mat4(-9.5, -846.202, 5.1, -769.374, 83.50, _GLF_IDENTITY(-87.10, (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? -87.10 : _GLF_FUZZED(-4.8), mix(float(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? -87.10 : _GLF_FUZZED(-4.8), 1.0 * (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? -87.10 : _GLF_FUZZED(-4.8), (false ? _GLF_FUZZED(-4.8) : _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? -87.10 : _GLF_FUZZED(-4.8)))))), float(_GLF_FUZZED(4.6)), bool(false))))), 1177.2770, 2.6, 603.370, 771.849, -1.5, 944.775, -4.0, -2.3, -5796.2270, 6103.3501)[1] * mat2x4(-1.5, -2712.2428, 9.2, 527.277, 906.513, -347.314, -9.7, -993.017)), (mat4(-9.5, -846.202, 5.1, -769.374, 83.50, -87.10, 1177.2770, 2.6, 603.370, 771.849, -1.5, 944.775, -4.0, -2.3, -5796.2270, 6103.3501)[1] * mat2x4(-1.5, -2712.2428, 9.2, 527.277, 906.513, -347.314, -9.7, _GLF_IDENTITY(-993.017, min(_GLF_IDENTITY(-993.017, max(_GLF_IDENTITY(-993.017, clamp(-993.017, -993.017, -993.017)), -993.017)), -993.017))))))))[1]), bvec2(true, true))))).x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, bool(bool(false))), true, true), bvec3(bvec3(bvec3(_GLF_IDENTITY(false, bool(bool(false))), true, true))))), bool(bvec3(bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, bool(bool(false))), true, true), bvec3(bvec3(bvec3(_GLF_IDENTITY(false, bool(bool(false))), true, true))))), true, true)))))) && true))
      barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! (false)))))), (_GLF_IDENTITY(false, ! (! (false)))) && true)))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(_GLF_IDENTITY(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(bool(bvec2(bool(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) || false)))), (injectionSwitch.x > injectionSwitch.y))), false)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(bool(bvec2(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false)), true && (bool(bvec2(_GLF_IDENTITY(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && true), false))))), false || (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec2(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false)), ! (! (bool(bvec2(bool(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false)))), false))))), true && (bool(bvec2(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false)))), true && (_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec2(bool(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(8826.8583) : injectionSwitch.y))) - 0.0)) - 0.0)))), false)), true && _GLF_IDENTITY((bool(bvec2(bool(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x > injectionSwitch.y))), false))), ! (! ((bool(bvec2(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false))))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(bool(bvec2(bool(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y))), false)), true && (bool(bvec2(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false))))), bool(_GLF_IDENTITY(bvec3(! (_GLF_IDENTITY(bool(bvec2(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false)), true && (bool(bvec2(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false))))), false, true), bvec3(_GLF_IDENTITY(bvec3(bvec3(! (_GLF_IDENTITY(bool(bvec2(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false)), true && (bool(bvec2(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false))))), false, true)), bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec3(! (_GLF_IDENTITY(bool(bvec2(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false)), _GLF_IDENTITY(true && (bool(bvec2(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false))), true && (true && (bool(bvec2(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false))))))), false, true)), bvec3(bvec3(bvec3(bvec3(! (_GLF_IDENTITY(bool(bvec2(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false)), true && (bool(bvec2(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false))))), false, true))))), true)))))))))))))))))))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bool(false))), (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat3(injectionSwitch, 1.0, 1.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), vec2(1.0, 0.0))), 0.0, 0.0, sqrt(0.0), 1.0), mat3(mat4x3(mat3(injectionSwitch, 1.0, 1.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), vec2(1.0, 0.0))), 0.0, 0.0, sqrt(0.0), 1.0)))))).x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
          barrier();
         return;
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       barrier();
      }
    }
   if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(true && (_GLF_DEAD(false)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (true && (_GLF_DEAD(false))))))
    return;
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 uint workgroup_base = _GLF_IDENTITY(workgroup_size, min(workgroup_size, workgroup_size)) * workgroup_id;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false)), (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, _GLF_IDENTITY(false, bool(bvec3(false, false, true))) || (false))) || false)))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), false || (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, (false) || false)), false || (! (_GLF_IDENTITY(false, _GLF_IDENTITY((false) || false, _GLF_IDENTITY(bool(bvec4((false) || false, true, false, true)), ! (_GLF_IDENTITY(! (bool(bvec4((false) || false, true, false, true))), (! (bool(bvec4((false) || false, true, false, true)))) && true))))))))))))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (_GLF_IDENTITY(! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bool(bvec3(! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          return;
         barrier();
        }
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || false)))))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        return;
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
      barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(_GLF_IDENTITY(! (false), true && (! (false))), ! (_GLF_IDENTITY(! (! (false)), (! (! (false))) || false)))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 uint virtual_gid = workgroup_base + subgroup_id * subgroup_size + subgroup_local_id;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   return;
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_IDENTITY(_GLF_DEAD(false), bool(_GLF_IDENTITY(bvec2(_GLF_DEAD(false), false), bvec2(bvec3(bvec2(_GLF_DEAD(false), false), true))))))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))), true && ((injectionSwitch.x > injectionSwitch.y))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, float(mat4x3(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), 1.0, 0.0, 1.0, 1.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 0.0, 0.0, sqrt(exp(0.0)), 1.0))) > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
        return;
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      return;
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true))))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(-5746.3739), _GLF_FUZZED(-0.3)), bvec2(_GLF_IDENTITY(false, (false) || false), false))).x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).y), true && (_GLF_IDENTITY(! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).y), true && (! (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)), (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0))) / vec2(1.0, 1.0)).y))))))))))) || false)))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED((+ 6.2))), float(injectionSwitch.x), bool(true)))) + 0.0) > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
          barrier();
         barrier();
        }
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(false, true, true), _GLF_IDENTITY(bvec3(bvec4(bvec3(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, true && (false)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))), true, _GLF_IDENTITY(true, (true) && true)), false)), bvec3(bvec4(bvec3(bvec4(bvec3(false, true, true), false)), false))))), ! (! (_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(false, true, true), _GLF_IDENTITY(_GLF_IDENTITY(bvec3(bvec4(bvec3(false, true, _GLF_IDENTITY(true, (true) && true)), false)), _GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec4(bvec3(false, true, _GLF_IDENTITY(true, (true) && true)), false)), bvec3(bvec4(bvec3(bvec4(bvec3(false, true, _GLF_IDENTITY(true, (true) && true)), false)), false))))), bvec3(bvec4(bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec4(bvec3(false, true, _GLF_IDENTITY(true, (true) && true)), false)), bvec3(bvec4(bvec3(bvec4(bvec3(false, true, _GLF_IDENTITY(true, (true) && true)), false)), false))))), true)))), bvec3(bvec4(bvec3(bvec4(bvec3(false, true, true), false)), false))))), (_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(false, true, true), _GLF_IDENTITY(_GLF_IDENTITY(bvec3(bvec4(bvec3(false, true, _GLF_IDENTITY(true, (true) && true)), false)), _GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec4(bvec3(false, true, _GLF_IDENTITY(true, (true) && true)), false)), bvec3(bvec4(bvec3(bvec4(bvec3(false, true, _GLF_IDENTITY(_GLF_IDENTITY(true, (true) && true), (_GLF_IDENTITY(true, (true) && true)) && true)), false)), false))))), bvec3(bvec4(bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec4(bvec3(false, true, _GLF_IDENTITY(true, (true) && true)), false)), bvec3(bvec4(bvec3(bvec4(bvec3(false, true, _GLF_IDENTITY(true, (true) && true)), false)), false))))), true)))), bvec3(bvec4(bvec3(bvec4(bvec3(false, true, true), false)), false))))), false || (bool(_GLF_IDENTITY(bvec3(false, true, true), _GLF_IDENTITY(_GLF_IDENTITY(bvec3(bvec4(bvec3(false, true, _GLF_IDENTITY(true, (_GLF_IDENTITY(true, bool(bvec2(_GLF_IDENTITY(true, true && (true)), true)))) && true)), false)), _GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec4(bvec3(false, true, _GLF_IDENTITY(true, _GLF_IDENTITY((true) && true, bool(_GLF_IDENTITY(bvec3((true) && true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true), _GLF_IDENTITY(bvec3(bvec3(bvec3((true) && true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))), bvec3(bvec4(bvec3(bvec3(bvec3((true) && true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))), true)))))))), false)), bvec3(bvec4(bvec3(bvec4(bvec3(false, true, _GLF_IDENTITY(true, (true) && true)), false)), false))))), bvec3(bvec4(bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec4(bvec3(false, true, _GLF_IDENTITY(true, (true) && true)), false)), bvec3(bvec4(bvec3(bvec4(bvec3(false, true, _GLF_IDENTITY(true, (true) && true)), false)), false))))), true)))), bvec3(bvec4(bvec3(bvec4(bvec3(false, true, true), false)), false)))))))) && true)))))))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && true))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 atomicStore(write_val, uint(virtual_gid), _GLF_IDENTITY(4, int(ivec4(4, 1, _GLF_IDENTITY(1, ~ (_GLF_IDENTITY(~ (1), int(ivec2(~ (1), 0))))), _GLF_IDENTITY(0, (0 | 0) | (0))))), _GLF_IDENTITY(64, 0 | (64)), 0);
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 uint read_val = atomicLoad(write_val, 4, 64, 0);
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! _GLF_IDENTITY((_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false)), (injectionSwitch.x > injectionSwitch.y))) || false))), ((_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && ((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) || false)))) && true))))
  {
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  return;
 buf[virtual_gid] = uint(subgroupAllEqual(_GLF_IDENTITY(read_val, (_GLF_IDENTITY(read_val, clamp(read_val, read_val, read_val))) >> 0u)));
}
