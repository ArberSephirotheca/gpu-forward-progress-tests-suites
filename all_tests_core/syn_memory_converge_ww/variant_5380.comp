#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer WriteVal {
 uint write_val;
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, true, true, true)))))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true)), bool(bvec4(bool(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true)) && true)), false, false, true))))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(true, ! (! (true))) && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    barrier();
   return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  barrier();
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(false))
  return;
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(clamp(injectionSwitch.x, injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-6.0)), float(injectionSwitch.x), bool(true)))))), (_GLF_IDENTITY(clamp(injectionSwitch.x, injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-6.0)), float(injectionSwitch.x), bool(true)))))), (true ? clamp(injectionSwitch.x, injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(clamp(injectionSwitch.x, injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-6.0)), float(injectionSwitch.x), bool(true)))), (clamp(injectionSwitch.x, injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-6.0)), float(injectionSwitch.x), bool(true))))) - 0.0))) : _GLF_FUZZED(5.6)))) - 0.0)) > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && ((injectionSwitch.x > injectionSwitch.y)))), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, false || (false)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true), false))))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, float(_GLF_IDENTITY(mat3(injectionSwitch.x, round(length(_GLF_IDENTITY(normalize(vec3(1.0, 1.0, 1.0)), vec3(1.0, 1.0, 1.0) * (normalize(vec3(1.0, 1.0, 1.0)))))), 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, determinant(mat2(0.0, 0.0, 1.0, 0.0))), (_GLF_IDENTITY(mat3(injectionSwitch.x, round(length(normalize(vec3(1.0, _GLF_IDENTITY(1.0, 0.0 + (_GLF_IDENTITY(1.0, (1.0) - 0.0))), 1.0)))), 0.0, _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-6.8)), float(1.0), bool(true))), 1.0, 1.0, 1.0, 0.0, determinant(mat2(0.0, 0.0, 1.0, 0.0))), _GLF_IDENTITY((mat3(injectionSwitch.x, round(length(normalize(vec3(1.0, 1.0, 1.0)))), 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, determinant(mat2(0.0, 0.0, 1.0, 0.0)))) * mat3(1.0), mat3(mat3((mat3(injectionSwitch.x, round(length(normalize(vec3(1.0, 1.0, 1.0)))), 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, determinant(mat2(0.0, 0.0, 1.0, 0.0)))) * mat3(1.0)))))) * mat3(1.0)))), (_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-2659.8528)), vec2(_GLF_FUZZED(0.4), (injectionSwitch)[1]), bvec2(false, true))).y)) ? injectionSwitch.x : _GLF_FUZZED(1.0))) > injectionSwitch.y), false || ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, float(_GLF_IDENTITY(mat3(injectionSwitch.x, round(length(normalize(vec3(1.0, 1.0, 1.0)))), 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, determinant(mat2(0.0, 0.0, 1.0, 0.0))), (_GLF_IDENTITY(mat3(injectionSwitch.x, round(length(normalize(vec3(1.0, 1.0, 1.0)))), 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, determinant(mat2(0.0, 0.0, 1.0, 0.0))), (mat3(injectionSwitch.x, round(length(normalize(vec3(1.0, 1.0, 1.0)))), 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, determinant(_GLF_IDENTITY(mat2(0.0, 0.0, 1.0, 0.0), transpose(transpose(mat2(0.0, 0.0, 1.0, 0.0))))))) * mat3(1.0))) * mat3(1.0)))), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch.x : _GLF_FUZZED(1.0))) > injectionSwitch.y))))))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_DEAD(false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! _GLF_IDENTITY((! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > injectionSwitch.y)))), false || ((! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > injectionSwitch.y)))))))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     barrier();
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        return;
      }
     return;
    }
   return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
        barrier();
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(false))
          barrier();
         return;
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
        }
       barrier();
       if(_GLF_DEAD(false))
        return;
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bool(false)))) || false)))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || false)))))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, bool(bvec4(false, true, false, false)))))))
        return;
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, true))))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
    }
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true)))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
  }
 if(_GLF_DEAD(false))
  barrier();
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 uint num_workgroup = gl_NumWorkGroups.x;
 uint workgroup_size = _GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) >> 0u);
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
    return;
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint workgroup_id = gl_WorkGroupID.x;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     barrier();
    }
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   barrier();
  }
 uint workgroup_base = _GLF_IDENTITY(workgroup_size * workgroup_id, 0u | (_GLF_IDENTITY(workgroup_size * workgroup_id, _GLF_IDENTITY(0u | (workgroup_size * workgroup_id), max(_GLF_IDENTITY(0u | (workgroup_size * workgroup_id), 1u * (_GLF_IDENTITY(0u | (workgroup_size * workgroup_id), max(0u | (workgroup_size * workgroup_id), 0u | (workgroup_size * workgroup_id))))), _GLF_IDENTITY(0u | (workgroup_size * workgroup_id), clamp(0u | (workgroup_size * workgroup_id), _GLF_IDENTITY(0u | (workgroup_size * workgroup_id), (0u | (workgroup_size * workgroup_id)) | (0u | (workgroup_size * workgroup_id))), 0u | (workgroup_size * workgroup_id))))))));
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   barrier();
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(false), ! _GLF_IDENTITY((! (_GLF_DEAD(false))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && ((! (_GLF_DEAD(false)))))))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y))))) && true)), bool(bvec3(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > injectionSwitch.y)), false, false)))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         return;
        }
       return;
      }
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec4(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(injectionSwitch.x > injectionSwitch.y, false, false, false))))), true, false, false)))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y))))))
          barrier();
         return;
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          return;
         return;
        }
       return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         barrier();
        }
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          return;
         barrier();
        }
       return;
       if(_GLF_DEAD(false))
        return;
      }
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false))))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
        barrier();
       return;
      }
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(-775.031, -660.190)) : injectionSwitch)), injectionSwitch)), _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY((injectionSwitch), clamp((injectionSwitch), (injectionSwitch), (injectionSwitch)))[0], _GLF_FUZZED((+ -196.741))), vec2(_GLF_FUZZED(-379.774), (injectionSwitch)[1]), bvec2(false, true))), injectionSwitch)).y)), bool(bvec3(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y)), bool(bool(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(bvec3(false, true, true)))))), (injectionSwitch.x > injectionSwitch.y))))), true, false)))), ! (! (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(-775.031, -660.190)) : injectionSwitch)), injectionSwitch)), _GLF_IDENTITY(injectionSwitch, mix(vec2((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)))[0], _GLF_FUZZED((+ -196.741))), _GLF_IDENTITY(vec2(_GLF_FUZZED(-379.774), (injectionSwitch)[1]), sqrt(exp(vec2(0.0, 0.0))) * (vec2(_GLF_FUZZED(-379.774), (injectionSwitch)[1]))), bvec2(false, true))), injectionSwitch)).y)), bool(bvec3(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), ! (! (false))), (injectionSwitch.x > injectionSwitch.y)), bool(bool(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(bvec3(false, true, true)))))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y))))), true, false))))))))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     return;
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec3(false, false, true)))) || false)), (_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec3(false, false, true)))) || false))) || false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)))), mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(_GLF_IDENTITY(-2780.3758, clamp(-2780.3758, _GLF_IDENTITY(-2780.3758, min(_GLF_IDENTITY(-2780.3758, max(-2780.3758, -2780.3758)), -2780.3758)), -2780.3758))), _GLF_IDENTITY(_GLF_FUZZED(-1.0), _GLF_IDENTITY(float(mat4x2(_GLF_FUZZED(-1.0), 0.0, 1.0, 0.0, 0.0, tan(0.0), 0.0, 1.0)), (float(mat4x2(_GLF_FUZZED(-1.0), 0.0, 1.0, 0.0, 0.0, tan(0.0), 0.0, 1.0))) - 0.0))), _GLF_IDENTITY(bvec2(false, false), _GLF_IDENTITY(bvec2(bvec2(bvec2(false, false))), _GLF_IDENTITY(bvec2(bvec2(bvec2(bvec2(bvec2(false, false))))), _GLF_IDENTITY(bvec2(bvec4(_GLF_IDENTITY(bvec2(bvec2(bvec2(bvec2(bvec2(false, false))))), bvec2(bvec2(bvec2(bvec2(bvec2(bvec2(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec2(bvec2(false, false))))))))))), true, true)), bvec2(_GLF_IDENTITY(bvec2(bvec2(bvec4(_GLF_IDENTITY(bvec2(bvec2(bvec2(bvec2(bvec2(false, false))))), bvec2(bvec2(bvec2(bvec2(bvec2(bvec2(bvec2(false, false)))))))), true, true))), bvec2(bvec4(bvec2(bvec2(bvec4(_GLF_IDENTITY(bvec2(bvec2(bvec2(bvec2(bvec2(false, false))))), bvec2(bvec2(bvec2(bvec2(bvec2(bvec2(bvec2(false, false)))))))), true, true))), true, true)))))))))).x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0) > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, _GLF_IDENTITY(false, bool(bvec4(false, false, false, false)))))))) || false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))).x > injectionSwitch.y))))
      barrier();
     return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, true && (false)), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
      barrier();
     return;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), false || (_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((false), ((false)) && true)))))), (! (_GLF_IDENTITY(false, ! (! (false))))) || false)))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), bool(bvec2(false, true))), _GLF_IDENTITY((false) || false, true && ((false) || false))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(vec2(injectionSwitch)), max(_GLF_IDENTITY(vec2(vec2(injectionSwitch)), (true ? vec2(vec2(injectionSwitch)) : _GLF_IDENTITY(_GLF_FUZZED(vec2(-1.8, 436.149)), clamp(_GLF_FUZZED(vec2(-1.8, 436.149)), _GLF_FUZZED(vec2(-1.8, 436.149)), _GLF_FUZZED(vec2(-1.8, 436.149)))))), _GLF_IDENTITY(vec2(vec2(injectionSwitch)), mix(vec2(_GLF_FUZZED(3412.1068), (vec2(vec2(injectionSwitch)))[1]), vec2((vec2(vec2(injectionSwitch)))[0], _GLF_FUZZED(5143.0384)), bvec2(true, false)))))).y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
      }
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, false || (false))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(true, bool(bvec4(true, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))) && (false)), (injectionSwitch.x > injectionSwitch.y)) || _GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), true && ((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! (false))))))), bool(bvec2(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! (false))))))), false))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y))))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       barrier();
      }
    }
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), bool(bool(_GLF_IDENTITY(! (_GLF_DEAD(false)), _GLF_IDENTITY(true, (true) || false) && (! (_GLF_DEAD(false))))))))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(mat3x4(injectionSwitch.y, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, _GLF_IDENTITY(dot(_GLF_IDENTITY(vec4(length(_GLF_IDENTITY(vec3(0.0, 0.0, 0.0), min(vec3(0.0, 0.0, 0.0), _GLF_IDENTITY(vec3(0.0, 0.0, 0.0), _GLF_IDENTITY(vec3(vec4(vec3(0.0, 0.0, 0.0), 0.0)), max(vec3(vec4(vec3(0.0, 0.0, 0.0), 0.0)), vec3(vec4(vec3(0.0, 0.0, 0.0), 0.0)))))))), 0.0, 0.0, 0.0), vec4(0.0, 0.0, 0.0, 0.0) + (vec4(length(_GLF_IDENTITY(vec3(0.0, 0.0, 0.0), min(vec3(0.0, 0.0, 0.0), _GLF_IDENTITY(vec3(0.0, 0.0, 0.0), _GLF_IDENTITY(vec3(vec4(vec3(0.0, 0.0, 0.0), 0.0)), max(vec3(vec4(vec3(0.0, 0.0, 0.0), 0.0)), vec3(vec4(vec3(0.0, 0.0, 0.0), 0.0)))))))), 0.0, 0.0, 0.0))), vec4(1.0, cos(0.0), 1.0, 1.0)), dot(vec4(length(vec3(0.0, 0.0, 0.0)), 0.0, 0.0, 0.0), vec4(1.0, cos(0.0), 1.0, 1.0))), 0.0, 1.0, 1.0)))))), false || (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     if(_GLF_DEAD(false))
      return;
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(false, (false) && true), false, true, true)), true && (_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(false, (false) && true), false, true, true)), bool(bool(bool(bvec4(_GLF_IDENTITY(false, (false) && true), false, true, true))))))))))
      barrier();
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(67.96), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_IDENTITY(_GLF_FUZZED(2.5), mix(float(_GLF_IDENTITY(_GLF_FUZZED(2.5), _GLF_IDENTITY(float(vec4(_GLF_FUZZED(2.5), 0.0, 1.0, 1.0)), mix(float(float(vec4(_GLF_FUZZED(2.5), 0.0, 1.0, 1.0))), float(_GLF_FUZZED(-4.9)), bool(false))))), float(_GLF_FUZZED(-26.74)), bool(false)))), bvec2(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))).y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         barrier();
        }
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        return;
       return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         barrier();
        }
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || _GLF_IDENTITY(false, bool(bvec3(false, false, false))))))))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(determinant(mat3(1.8, 42.67, 2.6, -4.1, -8.2, 86.61, 0.3, -1361.4626, -7.1))))) > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y))))))
        return;
       return;
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
      }
     barrier();
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         barrier();
        }
       if(_GLF_DEAD(false))
        return;
       return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, bool(bvec3(false, true, true)))))))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y))))), (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / _GLF_IDENTITY(vec2(1.0, 1.0), (vec2(1.0, 1.0)) - vec2(0.0, 0.0))), injectionSwitch)))).x > injectionSwitch.y)))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        return;
       barrier();
       if(_GLF_DEAD(false))
        return;
      }
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (_GLF_IDENTITY(! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (_GLF_IDENTITY(! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) && true)) && true))))
      barrier();
     if(_GLF_DEAD(false))
      return;
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
           if(_GLF_DEAD(false))
            return;
           barrier();
          }
         barrier();
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       return;
       if(_GLF_DEAD(false))
        return;
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            return;
           if(_GLF_DEAD(false))
            barrier();
           return;
          }
         barrier();
         if(_GLF_DEAD(false))
          return;
         if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), bool(bvec4(_GLF_IDENTITY(false, false || (false)), false, false, false))), true)))))))))))))) || false))
          barrier();
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         return;
        }
       return;
       if(_GLF_DEAD(false))
        return;
      }
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), true && (! (injectionSwitch.x > injectionSwitch.y))))))), (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), true && (! (_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x > injectionSwitch.y)))))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x, min(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x))) * 1.0) > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > injectionSwitch.y))))))))))
      barrier();
     return;
    }
   barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     if(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), _GLF_IDENTITY(bool(bvec4(! (_GLF_DEAD(false)), false, true, false)), ! (! (bool(bvec4(! (_GLF_DEAD(false)), false, true, false)))))))))
      barrier();
     return;
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(_GLF_IDENTITY(bvec2(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, 0.0 + _GLF_IDENTITY((injectionSwitch.x), min(_GLF_IDENTITY((injectionSwitch.x), min((injectionSwitch.x), (injectionSwitch.x))), (injectionSwitch.x)))) > injectionSwitch.y))), true), bvec2(bvec4(bvec2(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true), false, false))))))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, false)))))
      barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
    }
   barrier();
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! _GLF_IDENTITY((! ((_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED((- (+ -424.976)))), bool(false))) > injectionSwitch.y))), bool(bvec4((! ((_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED((- (+ -424.976)))), bool(false))) > injectionSwitch.y))), false, false, true)))))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, (false) && true))))))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))))))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && (_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))) + 0.0)), ! (! ((injectionSwitch.x > injectionSwitch.y)))))))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 uint virtual_gid = _GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(0u ^ 0u, max(_GLF_IDENTITY(0u ^ 0u, ~ (~ (0u ^ 0u))), _GLF_IDENTITY(0u ^ 0u, 0u + (0u ^ 0u))))) ^ (_GLF_IDENTITY(subgroup_id, max(subgroup_id, subgroup_id)))) * _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, clamp(_GLF_IDENTITY(subgroup_size, (subgroup_size) >> 0u), subgroup_size, _GLF_IDENTITY(subgroup_size, (subgroup_size) * 1u))), (_GLF_IDENTITY(subgroup_size, clamp(_GLF_IDENTITY(subgroup_size, (subgroup_size) >> 0u), subgroup_size, _GLF_IDENTITY(subgroup_size, (subgroup_size) * 1u)))) * 1u) + subgroup_local_id, (workgroup_base + subgroup_id * subgroup_size + _GLF_IDENTITY(subgroup_local_id, min(_GLF_IDENTITY(subgroup_local_id, min(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, max(subgroup_local_id, subgroup_local_id)), min(_GLF_IDENTITY(subgroup_local_id, max(subgroup_local_id, subgroup_local_id)), _GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, max(subgroup_local_id, subgroup_local_id)), uint(uvec2(_GLF_IDENTITY(subgroup_local_id, max(subgroup_local_id, subgroup_local_id)), 0u))))), subgroup_local_id)), _GLF_IDENTITY(subgroup_local_id, clamp(subgroup_local_id, subgroup_local_id, subgroup_local_id))))) * _GLF_IDENTITY(1u, uint(uint(_GLF_IDENTITY(1u, ~ (~ (1u)))))));
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(false, _GLF_IDENTITY((false) || false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || ((false) || false))), true, _GLF_IDENTITY(_GLF_IDENTITY(true, bool(bvec2(true, true))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(true, bool(bvec2(true, true)))), true && (! (_GLF_IDENTITY(true, bool(bvec2(true, true)))))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (! (_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(! (false), (! (false)) || false), bool(bvec4(_GLF_IDENTITY(! (false), (! (false)) || false), true, false, false)))), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY((_GLF_IDENTITY(! (false), (! (false)) || false)), ! (! ((_GLF_IDENTITY(! (false), (! (false)) || false))))), false, false, false)), (_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY((_GLF_IDENTITY(! (false), (! (false)) || false)), ! (! ((_GLF_IDENTITY(! (false), (! (false)) || false))))), false, false, false)), ! (! (bool(bvec4(_GLF_IDENTITY((_GLF_IDENTITY(! (false), (! (false)) || false)), ! (! ((_GLF_IDENTITY(! (false), (! (false)) || false))))), false, false, false)))))) && true))))))) || false), true, _GLF_IDENTITY(true, bool(bvec2(true, true))), _GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), (bool(bvec4(_GLF_IDENTITY(false, (false) || false), _GLF_IDENTITY(true, bool(bvec2(_GLF_IDENTITY(true, ! (! (true))), false))), _GLF_IDENTITY(true, bool(bvec2(true, true))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) && true)))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       return;
      }
     if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         barrier();
        }
       return;
       if(_GLF_DEAD(false))
        return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     return;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(false), bool(bool(bool(false))))), ! (! (bool(_GLF_IDENTITY(bool(false), bool(bool(bool(false))))))))), true, _GLF_IDENTITY(true, bool(bvec2(true, false)))))), (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(false), bool(bool(bool(false))))), ! (! (bool(_GLF_IDENTITY(bool(false), bool(bool(bool(false))))))))), true, _GLF_IDENTITY(true, bool(bvec2(true, false)))))), bool(bool(_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(false), bool(bool(bool(false))))), ! (! (bool(_GLF_IDENTITY(bool(false), bool(bool(bool(false))))))))), true, _GLF_IDENTITY(true, bool(bvec2(true, false)))))))))) || false)))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, true)), (bool(bvec2(false, true))) && true)))))))
        barrier();
       return;
      }
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(-1.1) : _GLF_IDENTITY(injectionSwitch.y, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(float((+ 52651u))) : injectionSwitch.y))))))))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false))))
  return;
 atomicStore(write_val, uint(_GLF_IDENTITY(virtual_gid, uint(_GLF_IDENTITY(_GLF_IDENTITY(uvec4(_GLF_IDENTITY(virtual_gid, clamp(virtual_gid, _GLF_IDENTITY(virtual_gid, min(virtual_gid, virtual_gid)), virtual_gid)), uint(_GLF_ONE(1.0, injectionSwitch.y)), 0u, 1u), ~ (_GLF_IDENTITY(~ (uvec4(_GLF_IDENTITY(virtual_gid, clamp(_GLF_IDENTITY(virtual_gid, (virtual_gid) - 0u), virtual_gid, virtual_gid)), uint(_GLF_ONE(1.0, injectionSwitch.y)), 0u, _GLF_IDENTITY(1u, min(1u, 1u)))), (_GLF_IDENTITY(~ (uvec4(_GLF_IDENTITY(virtual_gid, _GLF_IDENTITY(clamp(virtual_gid, _GLF_IDENTITY(virtual_gid, 0u ^ (virtual_gid)), virtual_gid), (_GLF_IDENTITY(clamp(virtual_gid, virtual_gid, virtual_gid), (clamp(virtual_gid, virtual_gid, virtual_gid)) | (clamp(virtual_gid, virtual_gid, virtual_gid)))) | (clamp(virtual_gid, virtual_gid, virtual_gid)))), uint(_GLF_ONE(1.0, injectionSwitch.y)), _GLF_IDENTITY(0u, 1u * (0u)), 1u)), _GLF_IDENTITY((~ (uvec4(_GLF_IDENTITY(virtual_gid, clamp(virtual_gid, virtual_gid, virtual_gid)), uint(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), float(vec3(_GLF_ONE(1.0, injectionSwitch.y), 1.0, _GLF_IDENTITY(dot(vec3(tan(0.0), 0.0, abs(1.0)), vec3(log(1.0), 0.0, 1.0)), dot(vec3(tan(0.0), 0.0, abs(1.0)), vec3(log(1.0), 0.0, 1.0))))))), 0u, 1u))) | (~ (uvec4(_GLF_IDENTITY(virtual_gid, clamp(virtual_gid, virtual_gid, virtual_gid)), uint(_GLF_ONE(1.0, injectionSwitch.y)), 0u, 1u))), ~ (~ (_GLF_IDENTITY((~ (uvec4(_GLF_IDENTITY(virtual_gid, clamp(virtual_gid, virtual_gid, virtual_gid)), uint(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), float(vec3(_GLF_ONE(1.0, injectionSwitch.y), 1.0, _GLF_IDENTITY(dot(vec3(tan(0.0), 0.0, abs(1.0)), vec3(log(1.0), 0.0, 1.0)), dot(vec3(tan(0.0), 0.0, abs(1.0)), vec3(log(1.0), 0.0, 1.0))))))), 0u, 1u))) | (~ (uvec4(_GLF_IDENTITY(virtual_gid, clamp(virtual_gid, virtual_gid, virtual_gid)), uint(_GLF_ONE(1.0, injectionSwitch.y)), 0u, 1u))), clamp(_GLF_IDENTITY((~ (uvec4(_GLF_IDENTITY(virtual_gid, clamp(virtual_gid, virtual_gid, virtual_gid)), uint(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), float(vec3(_GLF_ONE(1.0, injectionSwitch.y), 1.0, _GLF_IDENTITY(dot(vec3(tan(0.0), 0.0, abs(1.0)), vec3(log(1.0), 0.0, 1.0)), dot(vec3(tan(0.0), 0.0, abs(1.0)), vec3(log(1.0), 0.0, 1.0))))))), 0u, 1u))) | (~ (uvec4(_GLF_IDENTITY(virtual_gid, clamp(virtual_gid, virtual_gid, virtual_gid)), uint(_GLF_ONE(1.0, injectionSwitch.y)), 0u, 1u))), ((~ (uvec4(_GLF_IDENTITY(virtual_gid, clamp(virtual_gid, virtual_gid, virtual_gid)), uint(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), float(vec3(_GLF_ONE(1.0, injectionSwitch.y), 1.0, _GLF_IDENTITY(dot(vec3(tan(0.0), 0.0, abs(1.0)), vec3(log(1.0), 0.0, 1.0)), dot(vec3(tan(0.0), 0.0, abs(1.0)), vec3(log(1.0), 0.0, 1.0))))))), 0u, 1u))) | (~ (uvec4(_GLF_IDENTITY(virtual_gid, clamp(virtual_gid, virtual_gid, virtual_gid)), uint(_GLF_ONE(1.0, injectionSwitch.y)), 0u, 1u)))) | ((~ (uvec4(_GLF_IDENTITY(virtual_gid, clamp(virtual_gid, virtual_gid, virtual_gid)), uint(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), float(vec3(_GLF_ONE(1.0, injectionSwitch.y), 1.0, _GLF_IDENTITY(dot(vec3(tan(0.0), 0.0, abs(1.0)), vec3(log(1.0), 0.0, 1.0)), dot(vec3(tan(0.0), 0.0, abs(1.0)), vec3(log(1.0), 0.0, 1.0))))))), 0u, 1u))) | (~ (uvec4(_GLF_IDENTITY(virtual_gid, clamp(virtual_gid, virtual_gid, virtual_gid)), uint(_GLF_ONE(1.0, injectionSwitch.y)), 0u, 1u))))), (~ (uvec4(_GLF_IDENTITY(virtual_gid, clamp(virtual_gid, virtual_gid, virtual_gid)), uint(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), float(vec3(_GLF_ONE(1.0, injectionSwitch.y), 1.0, _GLF_IDENTITY(dot(vec3(tan(0.0), 0.0, abs(1.0)), vec3(log(1.0), 0.0, 1.0)), dot(vec3(tan(0.0), 0.0, abs(1.0)), vec3(log(1.0), 0.0, 1.0))))))), 0u, 1u))) | (~ (uvec4(_GLF_IDENTITY(virtual_gid, clamp(virtual_gid, virtual_gid, virtual_gid)), uint(_GLF_ONE(1.0, injectionSwitch.y)), 0u, 1u))), _GLF_IDENTITY((~ (uvec4(_GLF_IDENTITY(virtual_gid, clamp(virtual_gid, virtual_gid, virtual_gid)), uint(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), float(vec3(_GLF_ONE(1.0, injectionSwitch.y), 1.0, _GLF_IDENTITY(dot(vec3(tan(0.0), 0.0, abs(1.0)), vec3(log(1.0), 0.0, 1.0)), dot(vec3(tan(0.0), 0.0, abs(1.0)), vec3(log(1.0), 0.0, 1.0))))))), 0u, 1u))) | (~ (uvec4(_GLF_IDENTITY(virtual_gid, clamp(virtual_gid, virtual_gid, virtual_gid)), uint(_GLF_ONE(1.0, injectionSwitch.y)), 0u, 1u))), clamp((~ (uvec4(_GLF_IDENTITY(virtual_gid, clamp(virtual_gid, virtual_gid, virtual_gid)), uint(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), float(vec3(_GLF_ONE(1.0, injectionSwitch.y), 1.0, _GLF_IDENTITY(dot(vec3(tan(0.0), 0.0, abs(1.0)), vec3(log(1.0), 0.0, 1.0)), dot(vec3(tan(0.0), 0.0, abs(1.0)), vec3(log(1.0), 0.0, 1.0))))))), 0u, 1u))) | (~ (uvec4(_GLF_IDENTITY(virtual_gid, clamp(virtual_gid, virtual_gid, virtual_gid)), uint(_GLF_ONE(1.0, injectionSwitch.y)), 0u, 1u))), (~ (uvec4(_GLF_IDENTITY(virtual_gid, clamp(virtual_gid, virtual_gid, virtual_gid)), uint(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), float(vec3(_GLF_ONE(1.0, injectionSwitch.y), 1.0, _GLF_IDENTITY(dot(vec3(tan(0.0), 0.0, abs(1.0)), vec3(log(1.0), 0.0, 1.0)), dot(vec3(tan(0.0), 0.0, abs(1.0)), vec3(log(1.0), 0.0, 1.0))))))), 0u, 1u))) | (~ (uvec4(_GLF_IDENTITY(virtual_gid, clamp(virtual_gid, virtual_gid, virtual_gid)), uint(_GLF_ONE(1.0, injectionSwitch.y)), 0u, 1u))), (~ (uvec4(_GLF_IDENTITY(virtual_gid, clamp(virtual_gid, virtual_gid, virtual_gid)), uint(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), float(vec3(_GLF_ONE(1.0, injectionSwitch.y), 1.0, _GLF_IDENTITY(dot(vec3(tan(0.0), 0.0, abs(1.0)), vec3(log(1.0), 0.0, 1.0)), dot(vec3(tan(0.0), 0.0, abs(1.0)), vec3(log(1.0), 0.0, 1.0))))))), 0u, 1u))) | (~ (uvec4(_GLF_IDENTITY(virtual_gid, clamp(virtual_gid, virtual_gid, virtual_gid)), uint(_GLF_ONE(1.0, injectionSwitch.y)), 0u, 1u)))))))))))) | uvec4(0u, 0u, 0u, _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) >> 0u)) | (0u)))))), (_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, ! (! (false))))))) ? _GLF_FUZZED(uvec4(132308u, 164819u, 50346u, 79091u)) : uvec4(_GLF_IDENTITY(_GLF_IDENTITY(virtual_gid, (virtual_gid) - 0u), _GLF_IDENTITY(_GLF_IDENTITY(clamp(virtual_gid, virtual_gid, virtual_gid), _GLF_IDENTITY((clamp(_GLF_IDENTITY(virtual_gid, 0u ^ (virtual_gid)), _GLF_IDENTITY(virtual_gid, min(_GLF_IDENTITY(virtual_gid, (virtual_gid) << (39878u & 0u)), virtual_gid)), virtual_gid)) / 1u, ((clamp(virtual_gid, virtual_gid, virtual_gid)) / 1u) << 0u)), min(_GLF_IDENTITY(clamp(virtual_gid, virtual_gid, virtual_gid), _GLF_IDENTITY((clamp(_GLF_IDENTITY(virtual_gid, 0u ^ (virtual_gid)), _GLF_IDENTITY(virtual_gid, min(_GLF_IDENTITY(virtual_gid, (virtual_gid) << (39878u & 0u)), virtual_gid)), virtual_gid)) / 1u, ((clamp(virtual_gid, virtual_gid, virtual_gid)) / 1u) << 0u)), _GLF_IDENTITY(clamp(virtual_gid, virtual_gid, virtual_gid), _GLF_IDENTITY((clamp(_GLF_IDENTITY(virtual_gid, 0u ^ (virtual_gid)), _GLF_IDENTITY(virtual_gid, min(_GLF_IDENTITY(virtual_gid, (virtual_gid) << (39878u & 0u)), virtual_gid)), virtual_gid)) / 1u, ((clamp(virtual_gid, virtual_gid, virtual_gid)) / 1u) << 0u))))), _GLF_IDENTITY(uint(_GLF_ONE(_GLF_IDENTITY(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(351.842) : _GLF_IDENTITY(1.0, max(1.0, 1.0)))), max(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(351.842) : _GLF_IDENTITY(1.0, max(1.0, 1.0)))), _GLF_IDENTITY(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(351.842) : _GLF_IDENTITY(1.0, max(1.0, 1.0)))), float(mat3(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(351.842) : _GLF_IDENTITY(1.0, max(1.0, 1.0)))), 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, round(length(normalize(vec2(1.0, 1.0))))))))), injectionSwitch.y)), (true ? uint(_GLF_ONE(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(351.842) : _GLF_IDENTITY(1.0, max(1.0, 1.0)))), injectionSwitch.y)) : _GLF_IDENTITY(_GLF_FUZZED(subgroup_size), 0u ^ (_GLF_FUZZED(subgroup_size))))), 0u, 1u)))))), 4, 64, _GLF_IDENTITY(0, (0) | (0)));
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (false))))))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x), _GLF_ZERO(0.0, injectionSwitch.x))).x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y)), (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y))) || false)))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, 0.0 + (injectionSwitch.y))))))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     return;
    }
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))
        return;
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec3(injectionSwitch.x > injectionSwitch.y, false, true)))))))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     return;
     if(_GLF_DEAD(false))
      return;
    }
  }
 uint read_val = atomicLoad(write_val, _GLF_IDENTITY(_GLF_IDENTITY(4, (_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false)) ? _GLF_FUZZED((_GLF_IDENTITY(- 98655, clamp(- 98655, _GLF_IDENTITY(- 98655, ~ (~ (_GLF_IDENTITY(- 98655, max(- 98655, - 98655))))), - 98655)))) : 4)), (_GLF_IDENTITY(_GLF_IDENTITY(4, (false ? _GLF_FUZZED((- 98655)) : 4)), clamp(_GLF_IDENTITY(4, (false ? _GLF_FUZZED((- 98655)) : 4)), _GLF_IDENTITY(_GLF_IDENTITY(4, (false ? _GLF_FUZZED(_GLF_IDENTITY((- 98655), int(ivec3((- 98655), 0, 1)))) : 4)), max(_GLF_IDENTITY(4, (false ? _GLF_FUZZED((- 98655)) : 4)), _GLF_IDENTITY(4, (false ? _GLF_IDENTITY(_GLF_FUZZED((- 98655)), _GLF_IDENTITY(int(_GLF_IDENTITY(ivec3(_GLF_IDENTITY(_GLF_FUZZED(_GLF_IDENTITY((- 98655), ((- 98655)) / 1)), clamp(_GLF_IDENTITY(_GLF_FUZZED((- 98655)), (_GLF_FUZZED((- 98655))) >> 0), _GLF_IDENTITY(_GLF_FUZZED((- 98655)), int(_GLF_IDENTITY(ivec2(_GLF_IDENTITY(_GLF_FUZZED((- 98655)), (_GLF_FUZZED((- 98655))) | (_GLF_FUZZED((- 98655)))), 0), (false ? _GLF_FUZZED(ivec2(98482, 74218)) : _GLF_IDENTITY(ivec2(_GLF_IDENTITY(_GLF_FUZZED((- 98655)), (_GLF_FUZZED((- 98655))) | (_GLF_FUZZED((- 98655)))), 0), ~ (~ (ivec2(_GLF_IDENTITY(_GLF_FUZZED((- 98655)), (_GLF_FUZZED((- 98655))) | (_GLF_FUZZED((- 98655)))), 0)))))))), _GLF_FUZZED((- 98655)))), int(_GLF_ONE(1.0, injectionSwitch.y)), 0), (ivec3(_GLF_IDENTITY(_GLF_FUZZED((_GLF_IDENTITY(- 98655, clamp(- 98655, - 98655, - 98655)))), clamp(_GLF_IDENTITY(_GLF_FUZZED((- 98655)), (_GLF_IDENTITY(_GLF_FUZZED((- 98655)), (false ? _GLF_FUZZED(3037) : _GLF_FUZZED((- 98655))))) >> 0), _GLF_FUZZED((- 98655)), _GLF_FUZZED((- 98655)))), int(_GLF_ONE(1.0, injectionSwitch.y)), 0)) | (ivec3(_GLF_IDENTITY(_GLF_FUZZED((- 98655)), clamp(_GLF_IDENTITY(_GLF_FUZZED((- 98655)), (_GLF_FUZZED((- 98655))) >> 0), _GLF_FUZZED((- 98655)), _GLF_FUZZED((- 98655)))), int(_GLF_ONE(1.0, injectionSwitch.y)), 0)))), clamp(int(_GLF_IDENTITY(_GLF_IDENTITY(ivec3(_GLF_IDENTITY(_GLF_FUZZED((- 98655)), clamp(_GLF_IDENTITY(_GLF_FUZZED((- 98655)), _GLF_IDENTITY((_GLF_FUZZED((- 98655))), (_GLF_IDENTITY(false, bool(bool(false))) ? _GLF_FUZZED(34756) : (_GLF_FUZZED((- 98655))))) >> 0), _GLF_FUZZED((- 98655)), _GLF_FUZZED((- 98655)))), int(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), _GLF_IDENTITY(float(mat4x2(_GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0, 1.0, log(1.0), log(1.0), 0.0, 1.0)), (false ? _GLF_FUZZED(-870.219) : float(mat4x2(_GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0, 1.0, log(1.0), log(1.0), 0.0, 1.0)))))), 0), ivec3(0, 0, 0) | (ivec3(_GLF_IDENTITY(_GLF_FUZZED((- 98655)), clamp(_GLF_IDENTITY(_GLF_FUZZED((- 98655)), _GLF_IDENTITY((_GLF_FUZZED((- 98655))), (_GLF_IDENTITY(false, bool(bool(false))) ? _GLF_FUZZED(34756) : (_GLF_FUZZED((- 98655))))) >> 0), _GLF_FUZZED((- 98655)), _GLF_FUZZED((- 98655)))), int(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), _GLF_IDENTITY(float(mat4x2(_GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0, 1.0, log(1.0), log(1.0), 0.0, 1.0)), (false ? _GLF_FUZZED(-870.219) : float(mat4x2(_GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0, 1.0, log(1.0), log(1.0), 0.0, 1.0)))))), 0))), (ivec3(_GLF_IDENTITY(_GLF_FUZZED((- 98655)), clamp(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED((- 98655)), (_GLF_FUZZED((- 98655))) >> 0), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED((- 98655)), (_GLF_FUZZED((- 98655))) >> 0), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED((- 98655)), (_GLF_FUZZED((- 98655))) >> 0), (true ? _GLF_IDENTITY(_GLF_FUZZED((- 98655)), (_GLF_FUZZED((- 98655))) >> 0) : _GLF_FUZZED(66081)))) ^ 0)) / 1), _GLF_FUZZED((- 98655)), _GLF_FUZZED((- 98655)))), int(_GLF_ONE(1.0, injectionSwitch.y)), 0)) | (ivec3(_GLF_IDENTITY(_GLF_FUZZED((- 98655)), clamp(_GLF_IDENTITY(_GLF_FUZZED((- 98655)), (_GLF_FUZZED((- 98655))) >> 0), _GLF_FUZZED((- 98655)), _GLF_FUZZED((- 98655)))), int(_GLF_ONE(_GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(1.2)), float(1.0), bool(true))), 1.0)), injectionSwitch.y)), 0)))), int(_GLF_IDENTITY(ivec3(_GLF_IDENTITY(_GLF_FUZZED((- 98655)), clamp(_GLF_IDENTITY(_GLF_FUZZED((- 98655)), (_GLF_FUZZED((- 98655))) >> 0), _GLF_FUZZED((- 98655)), _GLF_FUZZED((- 98655)))), int(_GLF_ONE(1.0, injectionSwitch.y)), 0), (ivec3(_GLF_IDENTITY(_GLF_FUZZED((- 98655)), clamp(_GLF_IDENTITY(_GLF_FUZZED((- 98655)), (_GLF_FUZZED((- 98655))) >> 0), _GLF_FUZZED((- 98655)), _GLF_FUZZED((- 98655)))), int(_GLF_ONE(1.0, injectionSwitch.y)), 0)) | (ivec3(_GLF_IDENTITY(_GLF_FUZZED((- 98655)), clamp(_GLF_IDENTITY(_GLF_FUZZED((_GLF_IDENTITY(- 98655, (_GLF_IDENTITY(- 98655, (- 98655) | (- 98655))) >> 0))), (_GLF_FUZZED((- 98655))) >> 0), _GLF_FUZZED((- 98655)), _GLF_FUZZED((- 98655)))), int(_GLF_ONE(1.0, injectionSwitch.y)), 0)))), int(_GLF_IDENTITY(ivec3(_GLF_IDENTITY(_GLF_FUZZED((- 98655)), clamp(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED((- 98655)), (_GLF_FUZZED((- 98655))) + 0), (_GLF_FUZZED((- 98655))) >> 0), _GLF_FUZZED((- 98655)), _GLF_FUZZED((- 98655)))), int(_GLF_ONE(1.0, injectionSwitch.y)), 0), (ivec3(_GLF_IDENTITY(_GLF_FUZZED((- 98655)), clamp(_GLF_IDENTITY(_GLF_FUZZED((- 98655)), (_GLF_FUZZED((- 98655))) >> 0), _GLF_FUZZED((- 98655)), _GLF_FUZZED((- 98655)))), int(_GLF_ONE(1.0, injectionSwitch.y)), 0)) | (ivec3(_GLF_IDENTITY(_GLF_FUZZED((- 98655)), clamp(_GLF_IDENTITY(_GLF_FUZZED((- 98655)), (_GLF_FUZZED((- 98655))) >> 0), _GLF_FUZZED((- 98655)), _GLF_FUZZED((- 98655)))), int(_GLF_ONE(1.0, injectionSwitch.y)), 0))))))) : 4)))), _GLF_IDENTITY(4, (false ? _GLF_FUZZED((- 98655)) : 4))))) | (0 << _GLF_IDENTITY(int(5), int(5)))), _GLF_IDENTITY(64, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(64, _GLF_IDENTITY((_GLF_IDENTITY(64, _GLF_IDENTITY(min(64, 64), int(_GLF_ZERO(_GLF_IDENTITY(0.0, max(0.0, _GLF_IDENTITY(0.0, _GLF_IDENTITY(1.0 * (0.0), 0.0 + (1.0 * (0.0)))))), injectionSwitch.x)) | (min(64, 64))))), ((_GLF_IDENTITY(64, _GLF_IDENTITY(min(64, 64), int(_GLF_ZERO(_GLF_IDENTITY(0.0, (0.0) * 1.0), injectionSwitch.x)) | (min(64, 64)))))) / _GLF_IDENTITY(1, _GLF_IDENTITY(1, clamp(1, 1, 1)) * (1))) | 0), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(64, (_GLF_IDENTITY(64, min(64, 64))) | 0), _GLF_IDENTITY((_GLF_IDENTITY(64, (_GLF_IDENTITY(64, min(64, 64))) | 0)), ((_GLF_IDENTITY(64, (_GLF_IDENTITY(64, min(64, 64))) | 0))) | ((_GLF_IDENTITY(64, (_GLF_IDENTITY(64, min(64, 64))) | 0)))) << 0), (_GLF_IDENTITY(_GLF_IDENTITY(64, (_GLF_IDENTITY(64, _GLF_IDENTITY(min(64, 64), (min(64, _GLF_IDENTITY(64, (64) >> (0 << _GLF_IDENTITY(int(8), int(8)))))) | 0))) | 0), (_GLF_IDENTITY(64, (_GLF_IDENTITY(64, min(64, 64))) | 0)) << 0)) | (_GLF_IDENTITY(_GLF_IDENTITY(64, (_GLF_IDENTITY(64, min(64, 64))) | 0), (_GLF_IDENTITY(64, _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(64, min(64, 64))) | _GLF_IDENTITY(0, max(0, 0)), (_GLF_IDENTITY((_GLF_IDENTITY(64, min(64, 64))) | _GLF_IDENTITY(0, max(0, 0)), ((_GLF_IDENTITY(64, min(64, 64))) | _GLF_IDENTITY(0, max(0, 0))) | ((_GLF_IDENTITY(64, min(64, 64))) | _GLF_IDENTITY(0, max(0, 0))))) / 1), ~ (_GLF_IDENTITY(~ ((_GLF_IDENTITY(64, min(64, 64))) | _GLF_IDENTITY(0, max(0, 0))), (~ ((_GLF_IDENTITY(64, min(64, 64))) | _GLF_IDENTITY(0, max(0, 0)))) >> 0))))) << 0)))) >> 0, 1 * ((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(64, (_GLF_IDENTITY(64, min(_GLF_IDENTITY(64, (64) ^ 0), 64))) | 0), (_GLF_IDENTITY(64, (_GLF_IDENTITY(64, min(64, 64))) | 0)) << 0), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(64, (_GLF_IDENTITY(64, _GLF_IDENTITY(min(64, _GLF_IDENTITY(64, clamp(64, 64, 64))), (min(64, _GLF_IDENTITY(64, clamp(_GLF_IDENTITY(64, (64) | 0), 64, 64)))) | 0))) | 0), (_GLF_IDENTITY(64, (_GLF_IDENTITY(64, min(64, 64))) | 0)) << 0)), min(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(64, (_GLF_IDENTITY(64, _GLF_IDENTITY(min(64, _GLF_IDENTITY(64, clamp(64, 64, 64))), (min(64, _GLF_IDENTITY(64, clamp(_GLF_IDENTITY(64, (64) | 0), 64, 64)))) | 0))) | 0), (_GLF_IDENTITY(64, (_GLF_IDENTITY(64, min(64, 64))) | 0)) << 0)), clamp((_GLF_IDENTITY(_GLF_IDENTITY(64, (_GLF_IDENTITY(64, _GLF_IDENTITY(min(64, _GLF_IDENTITY(64, clamp(64, 64, 64))), (min(64, _GLF_IDENTITY(64, clamp(_GLF_IDENTITY(64, (64) | 0), 64, 64)))) | 0))) | 0), (_GLF_IDENTITY(64, (_GLF_IDENTITY(64, min(64, 64))) | 0)) << 0)), (_GLF_IDENTITY(_GLF_IDENTITY(64, (_GLF_IDENTITY(64, _GLF_IDENTITY(min(64, _GLF_IDENTITY(64, clamp(64, 64, 64))), (min(64, _GLF_IDENTITY(64, clamp(_GLF_IDENTITY(64, (64) | 0), 64, 64)))) | 0))) | 0), (_GLF_IDENTITY(64, (_GLF_IDENTITY(64, min(64, 64))) | 0)) << 0)), (_GLF_IDENTITY(_GLF_IDENTITY(64, (_GLF_IDENTITY(64, _GLF_IDENTITY(min(64, _GLF_IDENTITY(64, clamp(64, 64, 64))), (min(64, _GLF_IDENTITY(64, clamp(_GLF_IDENTITY(64, (64) | 0), 64, 64)))) | 0))) | 0), (_GLF_IDENTITY(64, (_GLF_IDENTITY(64, min(64, 64))) | 0)) << 0)))), (_GLF_IDENTITY(_GLF_IDENTITY(64, (_GLF_IDENTITY(64, _GLF_IDENTITY(min(64, _GLF_IDENTITY(64, clamp(64, 64, 64))), (min(64, _GLF_IDENTITY(64, clamp(_GLF_IDENTITY(64, (64) | 0), 64, 64)))) | 0))) | 0), (_GLF_IDENTITY(64, (_GLF_IDENTITY(64, min(64, 64))) | 0)) << 0)))) | (_GLF_IDENTITY(_GLF_IDENTITY(64, (_GLF_IDENTITY(64, min(64, 64))) | 0), (_GLF_IDENTITY(64, _GLF_IDENTITY((_GLF_IDENTITY(64, min(64, 64))) | _GLF_IDENTITY(_GLF_IDENTITY(0, (0) + 0), max(0, 0)), ~ (_GLF_IDENTITY(~ ((_GLF_IDENTITY(64, min(64, 64))) | _GLF_IDENTITY(0, max(0, 0))), (~ (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(64, min(64, 64))), (_GLF_IDENTITY((_GLF_IDENTITY(64, min(64, 64))), ((_GLF_IDENTITY(64, min(64, 64)))) | ((_GLF_IDENTITY(64, min(64, 64)))))) | 0), min(_GLF_IDENTITY((_GLF_IDENTITY(64, min(64, 64))), (_GLF_IDENTITY((_GLF_IDENTITY(64, min(64, 64))), ((_GLF_IDENTITY(64, min(64, 64)))) | ((_GLF_IDENTITY(64, min(64, 64)))))) | 0), _GLF_IDENTITY((_GLF_IDENTITY(64, min(64, 64))), (_GLF_IDENTITY((_GLF_IDENTITY(64, min(64, 64))), ((_GLF_IDENTITY(64, min(64, 64)))) | ((_GLF_IDENTITY(64, min(64, 64)))))) | 0))) | _GLF_IDENTITY(0, max(0, 0)))) >> 0))))) << 0)))) >> 0))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(64, (_GLF_IDENTITY(64, ~ (~ (64)))) - 0), (_GLF_IDENTITY(64, _GLF_IDENTITY(min(64, 64), int(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x)) | (min(64, 64))))) | 0), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(64, (_GLF_IDENTITY(64, min(64, 64))) | _GLF_IDENTITY(0, _GLF_IDENTITY((0) / 1, _GLF_IDENTITY(int(ivec3((0) / 1, 1, 0)), min(int(ivec3((0) / 1, 1, 0)), int(ivec3((0) / 1, 1, 0))))))), (_GLF_IDENTITY(64, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(64, (64) << 0), min(64, 64))), ~ (~ ((_GLF_IDENTITY(_GLF_IDENTITY(64, min(64, 64)), (_GLF_IDENTITY(64, min(64, _GLF_IDENTITY(64, (64) + ((0 & -18850) << _GLF_IDENTITY(int(1), int(1))))))) / 1))))) | 0)) << 0), (_GLF_IDENTITY(_GLF_IDENTITY(64, (_GLF_IDENTITY(64, min(_GLF_IDENTITY(64, clamp(64, 64, _GLF_IDENTITY(64, (64) | 0))), 64))) | 0), (_GLF_IDENTITY(64, (_GLF_IDENTITY(64, min(_GLF_IDENTITY(64, (_GLF_IDENTITY(64, (64) | (_GLF_IDENTITY(64, ~ (~ (64)))))) ^ 0), 64))) | 0)) << 0)) | (_GLF_IDENTITY(_GLF_IDENTITY(64, (_GLF_IDENTITY(64, min(64, 64))) | 0), _GLF_IDENTITY((_GLF_IDENTITY(64, (_GLF_IDENTITY(_GLF_IDENTITY(64, ~ (~ (_GLF_IDENTITY(64, clamp(64, 64, 64))))), _GLF_IDENTITY(min(64, _GLF_IDENTITY(64, (64) - 0)), (true ? min(64, _GLF_IDENTITY(64, (64) - 0)) : _GLF_FUZZED(-65142))))) | _GLF_IDENTITY(0, _GLF_IDENTITY(max(0, 0), (_GLF_IDENTITY(max(0, 0), min(max(0, 0), max(0, 0)))) | _GLF_IDENTITY((max(0, 0)), min((_GLF_IDENTITY(max(0, 0), (max(0, 0)) >> 0)), (max(0, 0)))))))), ((_GLF_IDENTITY(64, (_GLF_IDENTITY(_GLF_IDENTITY(64, ~ (~ (_GLF_IDENTITY(64, clamp(64, 64, 64))))), _GLF_IDENTITY(min(64, _GLF_IDENTITY(64, (64) - 0)), (true ? min(64, _GLF_IDENTITY(64, (64) - 0)) : _GLF_FUZZED(-65142))))) | _GLF_IDENTITY(0, _GLF_IDENTITY(max(0, 0), (_GLF_IDENTITY(max(0, 0), min(max(0, 0), max(0, 0)))) | _GLF_IDENTITY((max(0, 0)), min((_GLF_IDENTITY(max(0, 0), (max(0, 0)) >> 0)), (max(0, 0))))))))) ^ 0) << 0)))) >> 0)) + 0)) | _GLF_IDENTITY((64), int(int(_GLF_IDENTITY((64), 0 | ((_GLF_IDENTITY(64, clamp(64, 64, 64))))))))), 0);
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))), false, true)))), bool(bool(! _GLF_IDENTITY((_GLF_DEAD(_GLF_IDENTITY(false, (false) || false))), true && (_GLF_IDENTITY((_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY((false) || _GLF_IDENTITY(false, false || (false)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((false) || _GLF_IDENTITY(false, ! (! (false))), ((false) || false) || false)), (! _GLF_IDENTITY((_GLF_IDENTITY((false) || false, _GLF_IDENTITY(((false) || false) || false, ! (! (((false) || false) || false))))), ! (! (_GLF_IDENTITY((_GLF_IDENTITY((false) || false, (_GLF_IDENTITY((false) || false, ! (! (_GLF_IDENTITY((false) || false, bool(bool((false) || false))))))) || false)), _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec4((_GLF_IDENTITY((false) || false, ((false) || false) || false)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true)), _GLF_IDENTITY(bool(bvec2(bool(bvec4((_GLF_IDENTITY((false) || false, ((false) || false) || false)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true)), true)), (bool(bvec2(bool(bvec4((_GLF_IDENTITY((false) || false, ((false) || false) || false)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true)), true))) && true)), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec4((_GLF_IDENTITY((false) || false, ((false) || false) || false)), _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) && true), false, true)), ! (! (bool(bvec4((_GLF_IDENTITY((false) || false, ((false) || false) || false)), _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) && true), false, true))))), bool(bvec2(bool(bvec4((_GLF_IDENTITY((false) || false, ((false) || false) || false)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true)), true))))))))))) || false)))))), ((_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))) && true)))))))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).x > injectionSwitch.y))))
  barrier();
 buf[virtual_gid] = uint(subgroupAllEqual(read_val));
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, 1.0 * (_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))))) / _GLF_IDENTITY(1.0, max(_GLF_IDENTITY(_GLF_IDENTITY(1.0, min(1.0, 1.0)), (false ? _GLF_FUZZED(8.2) : _GLF_IDENTITY(1.0, min(1.0, 1.0)))), 1.0)))))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((false), (_GLF_IDENTITY((_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false))), ((false)) || false)) || false)))))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y))))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)))
          barrier();
         if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            return;
           if(_GLF_DEAD(false))
            return;
           return;
          }
         if(_GLF_DEAD(false))
          return;
         return;
        }
       barrier();
      }
     if(_GLF_DEAD(false))
      return;
    }
   barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     barrier();
    }
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_DEAD(false), true)))) && true))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
    }
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y))))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED((8.4 * -489.264)), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(-323.289)), bvec2(true, false))).y))))
  return;
}
