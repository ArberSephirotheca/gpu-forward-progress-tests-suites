#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


struct _GLF_struct_21 {
 mat2x4 _f0;
 float _f1;
 mat2 _f2;
 mat2x4 _f3;
 mat4x3 _f4;
 vec2 _f5;
 mat2x4 _f6;
} ;

struct _GLF_struct_20 {
 uvec4 _f0;
} ;

struct _GLF_struct_19 {
 ivec4 _f0;
 mat4 _f1;
 vec3 _f2;
 mat4 _f3;
} ;

struct _GLF_struct_18 {
 float _f0;
 bvec3 _f1;
} ;

struct _GLF_struct_22 {
 _GLF_struct_18 _f0;
 _GLF_struct_19 _f1;
 _GLF_struct_20 _f2;
 _GLF_struct_21 _f3;
 mat3 _f4;
 bvec3 _f5;
} ;

struct _GLF_struct_16 {
 mat3x2 _f0;
} ;

struct _GLF_struct_15 {
 mat2x4 _f0;
 mat3 _f1;
 mat2 _f2;
} ;

struct _GLF_struct_17 {
 _GLF_struct_15 _f0;
 _GLF_struct_16 _f1;
 uint _f2;
 uint _f3;
 uint _f4;
 ivec2 _f5;
} ;

struct _GLF_struct_14 {
 mat4 _f0;
} ;

struct _GLF_struct_12 {
 mat4x3 _f0;
 vec3 _f1;
} ;

struct _GLF_struct_13 {
 _GLF_struct_12 _f0;
 uint read_val;
} ;

struct _GLF_struct_10 {
 mat3x2 _f0;
} ;

struct _GLF_struct_9 {
 vec2 _f0;
 bvec4 _f1;
 bool _f2;
 uvec3 _f3;
 uvec2 _f4;
 mat4x2 _f5;
} ;

struct _GLF_struct_11 {
 _GLF_struct_9 _f0;
 _GLF_struct_10 _f1;
 mat4x3 _f2;
 mat2x3 _f3;
} ;

struct _GLF_struct_23 {
 mat4x2 _f0;
 _GLF_struct_11 _f1;
 uvec2 _f2;
 _GLF_struct_13 _f3;
 _GLF_struct_14 _f4;
 _GLF_struct_17 _f5;
 _GLF_struct_22 _f6;
} ;

struct _GLF_struct_6 {
 mat2x4 _f0;
 mat3x4 _f1;
 ivec3 _f2;
 uvec2 _f3;
 mat2x4 _f4;
 mat2 _f5;
} ;

struct _GLF_struct_5 {
 mat2x4 _f0;
 mat2 _f1;
 vec2 _f2;
 uint _f3;
 uvec3 _f4;
 bool _f5;
 mat4x2 _f6;
} ;

struct _GLF_struct_4 {
 uint _f0;
 vec4 _f1;
 bvec2 _f2;
} ;

struct _GLF_struct_3 {
 bool _f0;
 mat2x3 _f1;
 int _f2;
 vec4 _f3;
 ivec4 _f4;
 mat4x3 _f5;
} ;

struct _GLF_struct_7 {
 _GLF_struct_3 _f0;
 bvec2 _f1;
 _GLF_struct_4 _f2;
 _GLF_struct_5 _f3;
 uint subgroup_local_id;
 _GLF_struct_6 _f4;
 ivec2 _f5;
} ;

struct _GLF_struct_8 {
 _GLF_struct_7 _f0;
} ;

struct _GLF_struct_0 {
 float _f0;
 uvec4 _f1;
 uint subgroup_id;
 vec4 _f2;
} ;

struct _GLF_struct_1 {
 _GLF_struct_0 _f0;
} ;

struct _GLF_struct_2 {
 uvec2 _f0;
 _GLF_struct_1 _f1;
} ;

layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer WriteVal {
 uint write_val;
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 uvec2 GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_size;
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || (_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat2(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[_GLF_IDENTITY(1, (1) / 1)])), 1.0, 0.0)), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) ? _GLF_FUZZED(vec2(-3.8, 6.7)) : vec2(mat2(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), 1.0, 0.0))))).y), bool(bvec4(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))), false, true, false))))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 uvec3 GLF_merged3_0_1_13_1_1_14_2_1_14subgroup_sizeworkgroup_baseworkgroup_size;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, ! (! (false))), true, true)))), (! (_GLF_IDENTITY(false, bool(bvec3(false, true, true))))) && true))), bool(bvec2(false, _GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(bool(false)))))))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)))).y), bool(bvec3(bool(injectionSwitch.x > injectionSwitch.y), true, true)))), true && (bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY(bool(injectionSwitch.x > injectionSwitch.y), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(bool(injectionSwitch.x > injectionSwitch.y), ! (! (bool(injectionSwitch.x > injectionSwitch.y))))), ! (! (! (_GLF_IDENTITY(bool(injectionSwitch.x > injectionSwitch.y), ! (! (bool(injectionSwitch.x > injectionSwitch.y))))))))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bool(bvec3(bool(injectionSwitch.x > injectionSwitch.y), true, true)))))))))))
  barrier();
 uvec4 GLF_merged3_0_2_51_2_1_13_3_1_14GLF_merged2_0_1_14_1_1_12workgroup_baseworkgroup_idsubgroup_sizeworkgroup_base;
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, true)))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    barrier();
   barrier();
  }
 uvec4 GLF_merged3_0_2_51_2_1_13_3_1_14GLF_merged2_0_1_14_1_1_12workgroup_baseworkgroup_idnum_workgroupworkgroup_base;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false)))))
    barrier();
   return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, false)), (_GLF_IDENTITY(bool(bvec2(false, false)), (bool(bvec2(false, false))) || false)) || false)), false, true))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, false, true, true)), false || (_GLF_IDENTITY(bool(bvec4(false, false, true, true)), ! (! (bool(bvec4(false, false, true, true)))))))), _GLF_IDENTITY(bool(bvec3(false, false, true)), ! (! (bool(bvec3(false, false, true)))))), ! (! (_GLF_IDENTITY(false, bool(bvec3(false, false, true)))))), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, false, true, true)), false || (_GLF_IDENTITY(bool(bvec4(false, false, true, true)), ! (! (bool(bvec4(false, false, true, true)))))))), _GLF_IDENTITY(bool(bvec3(false, false, true)), ! (! (bool(bvec3(false, false, true)))))), ! (! (_GLF_IDENTITY(false, bool(bvec3(false, false, true)))))), bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, false, true, true)), false || (_GLF_IDENTITY(bool(bvec4(false, false, true, true)), ! (! (bool(bvec4(false, false, true, true)))))))), _GLF_IDENTITY(bool(bvec3(false, false, true)), ! (! (bool(bvec3(false, false, true)))))), ! (! (_GLF_IDENTITY(false, bool(bvec3(false, false, true)))))), false || (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, false, true, true)), false || (_GLF_IDENTITY(bool(bvec4(false, false, true, true)), ! (! (bool(bvec4(false, false, true, true)))))))), _GLF_IDENTITY(bool(bvec3(false, false, true)), ! (! (bool(bvec3(false, false, true)))))), ! (! (_GLF_IDENTITY(false, bool(bvec3(false, false, true)))))))), false)))), (bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, false, true, true)), false || (_GLF_IDENTITY(bool(bvec4(false, false, true, true)), ! (! (bool(bvec4(false, false, true, true)))))))), _GLF_IDENTITY(bool(bvec3(false, false, true)), ! (! (bool(bvec3(false, false, true)))))), ! (! (_GLF_IDENTITY(false, bool(bvec3(false, false, true)))))), bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, false, true, true)), false || (_GLF_IDENTITY(bool(bvec4(false, false, true, true)), ! (! (bool(bvec4(false, false, true, true)))))))), _GLF_IDENTITY(bool(bvec3(false, false, true)), ! (! (bool(bvec3(false, false, true)))))), ! (! (_GLF_IDENTITY(false, bool(bvec3(false, false, true)))))), false || (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, false, true, true)), false || (_GLF_IDENTITY(bool(bvec4(false, false, true, true)), ! (! (bool(bvec4(false, false, true, true)))))))), _GLF_IDENTITY(bool(bvec3(false, false, true)), ! (! (bool(bvec3(false, false, true)))))), ! (! (_GLF_IDENTITY(false, bool(bvec3(false, false, true)))))))), false))))) && true))))))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (injectionSwitch.x > injectionSwitch.y))) && _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(-201.297)), bool(false))))))))))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x > injectionSwitch.y))))
    return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uvec2 GLF_merged2_0_1_14_1_1_12workgroup_baseworkgroup_id;
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), ! (! ((! (false))))))))
  return;
 GLF_merged3_0_2_51_2_1_13_3_1_14GLF_merged2_0_1_14_1_1_12workgroup_baseworkgroup_idsubgroup_sizeworkgroup_base.xy = _GLF_IDENTITY(_GLF_IDENTITY(GLF_merged2_0_1_14_1_1_12workgroup_baseworkgroup_id, (GLF_merged2_0_1_14_1_1_12workgroup_baseworkgroup_id) ^ uvec2(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) + tan(vec2(0.0, 0.0))).x), _GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), 0.0 + (_GLF_ZERO(0.0, injectionSwitch.x))))), (_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged2_0_1_14_1_1_12workgroup_baseworkgroup_id, (GLF_merged2_0_1_14_1_1_12workgroup_baseworkgroup_id) ^ uvec2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))), max(_GLF_IDENTITY(GLF_merged2_0_1_14_1_1_12workgroup_baseworkgroup_id, (GLF_merged2_0_1_14_1_1_12workgroup_baseworkgroup_id) ^ uvec2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))), _GLF_IDENTITY(GLF_merged2_0_1_14_1_1_12workgroup_baseworkgroup_id, (GLF_merged2_0_1_14_1_1_12workgroup_baseworkgroup_id) ^ uvec2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)))))) | (_GLF_IDENTITY(GLF_merged2_0_1_14_1_1_12workgroup_baseworkgroup_id, (GLF_merged2_0_1_14_1_1_12workgroup_baseworkgroup_id) ^ uvec2(_GLF_ZERO(0.0, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : _GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat4x3(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)), 1.0, sqrt(0.0), 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, log(1.0)), mat4x3(mat4(mat4x3(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)), 1.0, sqrt(0.0), 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, log(1.0))))))), injectionSwitch, injectionSwitch)), injectionSwitch, injectionSwitch)))), clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), (injectionSwitch) * mat2(1.0)))))).x), _GLF_ZERO(0.0, injectionSwitch.x)))));
 if(_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, true && (false))))))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
  barrier();
 _GLF_IDENTITY(GLF_merged3_0_2_51_2_1_13_3_1_14GLF_merged2_0_1_14_1_1_12workgroup_baseworkgroup_idnum_workgroupworkgroup_base.xy = GLF_merged3_0_2_51_2_1_13_3_1_14GLF_merged2_0_1_14_1_1_12workgroup_baseworkgroup_idsubgroup_sizeworkgroup_base.xy, (GLF_merged3_0_2_51_2_1_13_3_1_14GLF_merged2_0_1_14_1_1_12workgroup_baseworkgroup_idnum_workgroupworkgroup_base.xy = GLF_merged3_0_2_51_2_1_13_3_1_14GLF_merged2_0_1_14_1_1_12workgroup_baseworkgroup_idsubgroup_sizeworkgroup_base.xy) / uvec2(1u, 1u));
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    return;
   barrier();
  }
 _GLF_struct_2 _GLF_struct_replacement_2 = _GLF_struct_2(uvec2(1u), _GLF_struct_1(_GLF_struct_0(1.0, uvec4(_GLF_IDENTITY(_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, uint(uint(1u)))) / 1u), _GLF_IDENTITY((uint(_GLF_ZERO(0.0, injectionSwitch.x)) >> _GLF_IDENTITY(_GLF_IDENTITY(uint(2u), uint(2u)), clamp(_GLF_IDENTITY(uint(2u), uint(2u)), _GLF_IDENTITY(uint(2u), uint(2u)), _GLF_IDENTITY(_GLF_IDENTITY(uint(2u), uint(2u)), _GLF_IDENTITY(uint(uvec3(_GLF_IDENTITY(_GLF_IDENTITY(uint(2u), uint(2u)), min(_GLF_IDENTITY(uint(2u), uint(2u)), _GLF_IDENTITY(uint(2u), uint(2u)))), 0u, 0u)), (uint(uvec3(_GLF_IDENTITY(_GLF_IDENTITY(uint(2u), uint(2u)), min(_GLF_IDENTITY(uint(2u), uint(2u)), _GLF_IDENTITY(uint(2u), uint(2u)))), 0u, 0u))) / 1u))))) ^ (1u), ((uint(_GLF_ZERO(0.0, injectionSwitch.x)) >> _GLF_IDENTITY(_GLF_IDENTITY(uint(2u), uint(2u)), clamp(_GLF_IDENTITY(uint(2u), uint(2u)), _GLF_IDENTITY(uint(2u), uint(2u)), _GLF_IDENTITY(_GLF_IDENTITY(uint(2u), uint(2u)), _GLF_IDENTITY(uint(uvec3(_GLF_IDENTITY(_GLF_IDENTITY(uint(2u), uint(2u)), min(_GLF_IDENTITY(uint(2u), uint(2u)), _GLF_IDENTITY(uint(2u), uint(2u)))), 0u, 0u)), (uint(uvec3(_GLF_IDENTITY(_GLF_IDENTITY(uint(2u), uint(2u)), min(_GLF_IDENTITY(uint(2u), uint(2u)), _GLF_IDENTITY(uint(2u), uint(2u)))), 0u, 0u))) / 1u))))) ^ (1u)) << 0u))), gl_SubgroupID, vec4(1.0))));
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), true, true, true))))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), true && (false))) || false), ! (! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, bool(bvec4(false, false, true, true)))), true && (! (_GLF_IDENTITY(false, bool(bvec4(false, false, true, true)))))))), (_GLF_IDENTITY(false, true && (false))) || false)), ! (! ((_GLF_IDENTITY(false, (_GLF_IDENTITY(false, true && (false))) || false)))))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, _GLF_IDENTITY(true, ! (! (true))) && (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(bvec2(_GLF_IDENTITY(! (false), ! (! (! (false)))), false)))))))))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))))))))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) && true), (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       return;
      }
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), true && (false))) && true)))
      barrier();
     return;
    }
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint subgroup_size = gl_SubgroupSize;
 _GLF_IDENTITY(GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_size.x = subgroup_size, ((1u << _GLF_IDENTITY(uint(2u), uint(2u))) >> _GLF_IDENTITY(uint(2u), uint(2u))) * (GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_size.x = subgroup_size));
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
  barrier();
 GLF_merged3_0_1_13_1_1_14_2_1_14subgroup_sizeworkgroup_baseworkgroup_size.x = GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_size.x;
 if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 GLF_merged3_0_2_51_2_1_13_3_1_14GLF_merged2_0_1_14_1_1_12workgroup_baseworkgroup_idsubgroup_sizeworkgroup_base.z = GLF_merged3_0_1_13_1_1_14_2_1_14subgroup_sizeworkgroup_baseworkgroup_size.x;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)), max(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)), mix(vec2((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)))[0], _GLF_FUZZED(3.7)), vec2(_GLF_FUZZED(vec2(-602.427, 9.1).y), (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)))[1]), bvec2(false, true))))))).y)), bool(bvec4(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED((7.2 * injectionSwitch)) : _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)))).x > _GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(431.260))))), true, true, true)))), ! (! (_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, true, true)))), bool(bvec2(bool(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(719.455), _GLF_FUZZED(float(85441))), bvec2(false, false))).x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y, false || _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec3((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(false, ! (! (false))), true)))))), bool(bvec4(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false), true, true, true)))), true))))))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(false, true && (false)), true, true, true)), ! (! (bool(bvec4(_GLF_IDENTITY(false, true && (false)), true, true, true))))))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && true))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), bool(_GLF_IDENTITY(bvec2(_GLF_DEAD(false), true), bvec2(bvec2(bvec2(_GLF_DEAD(false), true))))))))))
      return;
     if(_GLF_DEAD(false))
      return;
     barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(false))
    return;
   barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true)))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
      barrier();
     return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec3((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) && true)))
      return;
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bool(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bool(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))
        barrier();
       return;
      }
     if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec2(_GLF_DEAD(false), false)), (bool(bvec2(_GLF_DEAD(false), false))) || false))))))
      barrier();
     if(_GLF_DEAD(false))
      return;
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(false, ! (! (false))))), false || (bool(bool(_GLF_IDENTITY(false, ! (! (false))))))))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))
        {
         if(_GLF_DEAD(false))
          return;
         barrier();
        }
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, true)))), ! (! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, true)))))))))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), (_GLF_IDENTITY(false, true && (false))) || false)))
  {
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 _GLF_struct_8 _GLF_struct_replacement_8 = _GLF_struct_8(_GLF_struct_7(_GLF_struct_3(true, mat2x3(_GLF_IDENTITY(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(66.77) : 1.0)), clamp(_GLF_IDENTITY(_GLF_IDENTITY(1.0, clamp(1.0, _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), 1.0)), min(_GLF_IDENTITY(_GLF_IDENTITY(1.0, clamp(1.0, _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), 1.0)), (true ? _GLF_IDENTITY(_GLF_IDENTITY(1.0, clamp(1.0, _GLF_IDENTITY(1.0, clamp(1.0, 1.0, _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-52.37)), float(1.0), _GLF_IDENTITY(bool(true), (bool(true)) && true))))), 1.0)), max(_GLF_IDENTITY(1.0, clamp(1.0, _GLF_IDENTITY(1.0, clamp(1.0, 1.0, _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-52.37)), float(1.0), _GLF_IDENTITY(bool(true), (bool(true)) && true))))), 1.0)), _GLF_IDENTITY(1.0, clamp(1.0, _GLF_IDENTITY(1.0, clamp(1.0, 1.0, _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-52.37)), float(1.0), _GLF_IDENTITY(bool(true), (bool(true)) && true))))), 1.0)))) : _GLF_FUZZED(6.8))), _GLF_IDENTITY(1.0, clamp(1.0, _GLF_IDENTITY(1.0, _GLF_IDENTITY(_GLF_IDENTITY(clamp(1.0, 1.0, 1.0), (_GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), true && ((injectionSwitch.x < injectionSwitch.y)))) ? clamp(1.0, 1.0, 1.0) : _GLF_FUZZED(intBitsToFloat(-59291)))), (_GLF_IDENTITY(clamp(1.0, 1.0, 1.0), max(clamp(1.0, 1.0, 1.0), clamp(1.0, 1.0, 1.0)))) - 0.0)), 1.0)))), _GLF_IDENTITY(1.0, float(_GLF_IDENTITY(mat2(1.0, 0.0, abs(0.0), 1.0), (_GLF_IDENTITY(mat2(1.0, 0.0, abs(0.0), 1.0), mat2(mat4(mat2(1.0, 0.0, abs(0.0), 1.0))))) / mat2(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y))))), 1.0))), _GLF_IDENTITY(1, (1) << (_GLF_IDENTITY(0 >> _GLF_IDENTITY(_GLF_IDENTITY(int(7), int(7)), clamp(_GLF_IDENTITY(int(7), int(7)), _GLF_IDENTITY(int(7), int(7)), _GLF_IDENTITY(int(7), int(7)))), (0 ^ 0) | (0 >> _GLF_IDENTITY(_GLF_IDENTITY(int(7), int(7)), clamp(_GLF_IDENTITY(int(7), int(7)), _GLF_IDENTITY(int(_GLF_IDENTITY(7, (7) * 1)), int(7)), _GLF_IDENTITY(int(7), int(7)))))))), vec4(1.0), _GLF_IDENTITY(ivec4(_GLF_IDENTITY(1, 1 * (1))), _GLF_IDENTITY(min(_GLF_IDENTITY(ivec4(_GLF_IDENTITY(1, _GLF_IDENTITY(1 * (1), max(1 * (1), 1 * (1))))), (true ? ivec4(_GLF_IDENTITY(1, 1 * (1))) : _GLF_FUZZED(ivec4(73537, 92225, 82536, 40169)))), ivec4(_GLF_IDENTITY(1, 1 * (1)))), min(min(_GLF_IDENTITY(ivec4(_GLF_IDENTITY(1, _GLF_IDENTITY(1 * (1), max(1 * (1), 1 * (1))))), (true ? ivec4(_GLF_IDENTITY(1, 1 * (1))) : _GLF_FUZZED(ivec4(73537, 92225, 82536, 40169)))), ivec4(_GLF_IDENTITY(1, 1 * (1)))), _GLF_IDENTITY(min(_GLF_IDENTITY(ivec4(_GLF_IDENTITY(1, _GLF_IDENTITY(1 * (1), max(1 * (1), 1 * (1))))), (true ? ivec4(_GLF_IDENTITY(1, 1 * (1))) : _GLF_FUZZED(ivec4(73537, 92225, 82536, 40169)))), ivec4(_GLF_IDENTITY(1, 1 * (1)))), ivec4(0, 0, 0, 0) + (min(_GLF_IDENTITY(ivec4(_GLF_IDENTITY(1, _GLF_IDENTITY(1 * (1), max(1 * (1), 1 * (1))))), (true ? ivec4(_GLF_IDENTITY(1, 1 * (1))) : _GLF_FUZZED(ivec4(73537, 92225, 82536, 40169)))), ivec4(_GLF_IDENTITY(1, 1 * (1))))))))), mat4x3(1.0)), bvec2(true), _GLF_struct_4(1u, vec4(1.0), bvec2(_GLF_IDENTITY(true, bool(bvec3(true, false, false))))), _GLF_struct_5(mat2x4(1.0), mat2(1.0), _GLF_IDENTITY(_GLF_IDENTITY(vec2(1.0), (vec2(1.0)) * vec2(_GLF_IDENTITY(1.0, _GLF_IDENTITY((_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))))))) ? _GLF_FUZZED(-4.5) : 1.0), mix(_GLF_IDENTITY(float(_GLF_FUZZED(-4.7)), 1.0 * (float(_GLF_FUZZED(-4.7)))), float((_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(-4.5) : 1.0, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(-4.5) : 1.0) - log(1.0)))), bool(true)))), 1.0)), vec2(_GLF_IDENTITY(vec3(_GLF_IDENTITY(vec2(1.0), (vec2(1.0)) * vec2(_GLF_IDENTITY(_GLF_IDENTITY(1.0, _GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(-4.5) : 1.0), mix(float(_GLF_FUZZED(-4.7)), float((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(-4.5) : 1.0)), bool(true)))), (true ? _GLF_IDENTITY(1.0, _GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(-4.5) : 1.0), mix(float(_GLF_FUZZED(-4.7)), float((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(-4.5) : 1.0)), bool(true)))) : _GLF_FUZZED(-3776.8634))), 1.0)), _GLF_IDENTITY(dot(vec3(abs(0.0), 0.0, 1.0), vec3(0.0, 0.0, 1.0)), dot(vec3(abs(0.0), 0.0, 1.0), vec3(0.0, 0.0, 1.0)))), (vec3(_GLF_IDENTITY(vec2(1.0), (vec2(1.0)) * vec2(_GLF_IDENTITY(1.0, _GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(-4.5) : 1.0), mix(float(_GLF_FUZZED(-4.7)), float((_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(67.97))))) ? _GLF_FUZZED(-4.5) : 1.0)), bool(true)))), 1.0)), _GLF_IDENTITY(dot(vec3(_GLF_IDENTITY(abs(0.0), mix(float(_GLF_FUZZED(8.3)), float(_GLF_IDENTITY(abs(0.0), clamp(abs(0.0), abs(0.0), abs(0.0)))), bool(true))), 0.0, 1.0), vec3(0.0, 0.0, 1.0)), dot(vec3(abs(0.0), 0.0, 1.0), vec3(0.0, 0.0, 1.0))))) * vec3(1.0, 1.0, 1.0)))), 1u, _GLF_IDENTITY(uvec3(1u), (uvec3(1u)) | uvec3(0u, _GLF_IDENTITY(0u, ~ (~ (0u))), 0u)), true, mat4x2(1.0)), gl_SubgroupInvocationID, _GLF_struct_6(mat2x4(1.0), mat3x4(1.0), ivec3(1), uvec2(1u), mat2x4(1.0), mat2(1.0)), ivec2(1)));
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bool(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     barrier();
    }
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bool(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))
    barrier();
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || _GLF_IDENTITY(false, (false) || false))))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, float(mat4x3(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), 1.0, 1.0, 1.0, determinant(mat3(0.0, 0.0, 0.0, 0.0, log(1.0), 0.0, 1.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x))), 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0))) > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    return;
   barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    return;
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, float(mat2x3(_GLF_IDENTITY(injectionSwitch.x, 1.0 * (injectionSwitch.x)), 0.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 0.0))), min(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)))) > injectionSwitch.y))))
      return;
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))), false, false, false))))))
      barrier();
    }
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY((false), ! (! ((false)))) && true)))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).x > injectionSwitch.y)), true)))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
         if(_GLF_DEAD(false))
          return;
        }
       barrier();
      }
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch)).x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), true && (false)), (_GLF_IDENTITY(false, true && (false))) || false)))
    barrier();
   return;
  }
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bool(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
  {
   if(_GLF_DEAD(false))
    return;
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 uint num_workgroup = gl_NumWorkGroups.x;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false || _GLF_IDENTITY((_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, (injectionSwitch.x < injectionSwitch.y) || false)))), ! (! (_GLF_IDENTITY((_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, (injectionSwitch.x < injectionSwitch.y) || false)))), bool(bvec4((_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, (injectionSwitch.x < injectionSwitch.y) || false)))), true, false, false))))))), true, true)), true && (bool(bvec4(false, _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false || (_GLF_TRUE(_GLF_IDENTITY(_GLF_IDENTITY(true, (true) && true), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(true, true, true), bvec3(bvec4(bvec3(true, true, true), true)))), ! (! (_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(true, true, true), bvec3(bvec4(bvec3(true, true, true), true)))), ! (! (bool(_GLF_IDENTITY(bvec3(true, true, true), bvec3(bvec4(bvec3(true, true, true), true))))))))))), (injectionSwitch.x < injectionSwitch.y)))), true, true))))), ! (! (false)))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-9.8)), float(injectionSwitch.y), bool(true))), injectionSwitch.y))))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y)))) && true)) && true))))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 GLF_merged3_0_2_51_2_1_13_3_1_14GLF_merged2_0_1_14_1_1_12workgroup_baseworkgroup_idnum_workgroupworkgroup_base.z = num_workgroup;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(468.487)), float(injectionSwitch.x), bool(true))), injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-1202.1483)), vec2(_GLF_FUZZED((-6.3 + -0.2)), (injectionSwitch)[1]), bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))).y), true && ((_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(468.487)), float(injectionSwitch.x), bool(true))), injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-1202.1483)), vec2(_GLF_FUZZED((-6.3 + -0.2)), (injectionSwitch)[1]), bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))).y))))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), _GLF_IDENTITY(bool(bvec2(! (false), true)), (bool(bvec2(! (false), true))) && true)))), (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   return;
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (false))))))))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec3(_GLF_DEAD(false), false, true)), ! (! (bool(bvec3(_GLF_DEAD(false), false, true)))))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  barrier();
 uint workgroup_size = _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, (_GLF_IDENTITY(gl_WorkGroupSize, (false ? _GLF_FUZZED(GLF_merged3_0_1_13_1_1_14_2_1_14subgroup_sizeworkgroup_baseworkgroup_size) : gl_WorkGroupSize))) / _GLF_IDENTITY(uvec3(1u, 1u, 1u), max(_GLF_IDENTITY(uvec3(1u, 1u, 1u), clamp(_GLF_IDENTITY(uvec3(1u, 1u, 1u), (uvec3(1u, 1u, 1u)) * uvec3(1u, 1u, 1u)), uvec3(1u, 1u, 1u), uvec3(1u, 1u, 1u))), uvec3(1u, 1u, 1u)))), (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, (_GLF_IDENTITY(gl_WorkGroupSize, (false ? _GLF_FUZZED(GLF_merged3_0_1_13_1_1_14_2_1_14subgroup_sizeworkgroup_baseworkgroup_size) : gl_WorkGroupSize))) / _GLF_IDENTITY(uvec3(1u, 1u, 1u), max(_GLF_IDENTITY(uvec3(1u, 1u, 1u), clamp(_GLF_IDENTITY(uvec3(1u, 1u, 1u), (uvec3(1u, 1u, 1u)) * uvec3(1u, 1u, 1u)), uvec3(1u, 1u, 1u), uvec3(1u, 1u, 1u))), uvec3(1u, 1u, 1u)))), uvec3(uvec4(_GLF_IDENTITY(gl_WorkGroupSize, (_GLF_IDENTITY(gl_WorkGroupSize, (false ? _GLF_FUZZED(GLF_merged3_0_1_13_1_1_14_2_1_14subgroup_sizeworkgroup_baseworkgroup_size) : gl_WorkGroupSize))) / _GLF_IDENTITY(uvec3(1u, 1u, 1u), max(_GLF_IDENTITY(uvec3(1u, 1u, 1u), clamp(_GLF_IDENTITY(uvec3(1u, 1u, 1u), (uvec3(1u, 1u, 1u)) * uvec3(1u, 1u, 1u)), uvec3(1u, 1u, 1u), uvec3(1u, 1u, 1u))), uvec3(1u, 1u, 1u)))), 1u)))) | (_GLF_IDENTITY(gl_WorkGroupSize, (_GLF_IDENTITY(gl_WorkGroupSize, (false ? _GLF_FUZZED(GLF_merged3_0_1_13_1_1_14_2_1_14subgroup_sizeworkgroup_baseworkgroup_size) : gl_WorkGroupSize))) / _GLF_IDENTITY(uvec3(1u, 1u, 1u), max(_GLF_IDENTITY(uvec3(1u, 1u, 1u), clamp(_GLF_IDENTITY(uvec3(1u, 1u, 1u), (uvec3(1u, 1u, 1u)) * uvec3(1u, 1u, 1u)), uvec3(1u, 1u, 1u), uvec3(1u, 1u, 1u))), uvec3(1u, 1u, 1u)))))).x;
 GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_size.y = workgroup_size;
 if(_GLF_DEAD(false))
  barrier();
 GLF_merged3_0_1_13_1_1_14_2_1_14subgroup_sizeworkgroup_baseworkgroup_size.z = GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_size.y;
 if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(false, _GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, bool(bvec2(true, true)))))) && (false)) || (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY((_GLF_DEAD(false)), ((_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(! (_GLF_DEAD(false)), (! (_GLF_DEAD(false))) && true)), (! (_GLF_IDENTITY(! (_GLF_DEAD(false)), (! (_GLF_DEAD(false))) && true))) && true))))))) && true) && true), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY((_GLF_DEAD(false)), (_GLF_IDENTITY((_GLF_DEAD(false)), _GLF_IDENTITY(bool(bvec2((_GLF_DEAD(false)), false)), false || (bool(bvec2((_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, (false) && true)), ! (! _GLF_IDENTITY((! (_GLF_IDENTITY(false, (false) && true))), (_GLF_IDENTITY((! (_GLF_IDENTITY(false, (false) && true))), ((! (_GLF_IDENTITY(false, (false) && true)))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && true))))))), false)))))) && true) && true)))))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bool(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), false, true, true))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y)))))))
        return;
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
          return;
         return;
        }
       barrier();
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))
      return;
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(false, false || (false))), _GLF_IDENTITY(bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(false, false || (false))), false, false)), bool(bool(bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(false, false || (false))), false, false))))))), (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec4(false, false, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, bool(bvec3(false, false, false)))))), (! (_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, bool(bvec3(false, false, false))))))) && true)))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    return;
   barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_DEAD(false))
  barrier();
 uint workgroup_id = gl_WorkGroupID.x;
 if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(! (_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), bool(bool(! ((injectionSwitch.x > injectionSwitch.y)))))), ! (! (! (_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), bool(bool(! ((injectionSwitch.x > injectionSwitch.y)))))))))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, false || (false)))))))
        return;
       barrier();
      }
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 GLF_merged3_0_2_51_2_1_13_3_1_14GLF_merged2_0_1_14_1_1_12workgroup_baseworkgroup_idnum_workgroupworkgroup_base.xy.y = workgroup_id;
 uint workgroup_base = GLF_merged3_0_1_13_1_1_14_2_1_14subgroup_sizeworkgroup_baseworkgroup_size.z * GLF_merged3_0_2_51_2_1_13_3_1_14GLF_merged2_0_1_14_1_1_12workgroup_baseworkgroup_idnum_workgroupworkgroup_base.xy.y;
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(clamp(inversesqrt(injectionSwitch), vec2(786.602, 4270.3582), vec2(-3.7, -4.3))))).x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, true && (false))) && true)))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  barrier();
 _GLF_IDENTITY(GLF_merged3_0_1_13_1_1_14_2_1_14subgroup_sizeworkgroup_baseworkgroup_size.y = workgroup_base, (_GLF_IDENTITY(GLF_merged3_0_1_13_1_1_14_2_1_14subgroup_sizeworkgroup_baseworkgroup_size.y = workgroup_base, (GLF_merged3_0_1_13_1_1_14_2_1_14subgroup_sizeworkgroup_baseworkgroup_size.y = workgroup_base) | 0u)) * uint(_GLF_ONE(1.0, injectionSwitch.y)));
 GLF_merged3_0_2_51_2_1_13_3_1_14GLF_merged2_0_1_14_1_1_12workgroup_baseworkgroup_idsubgroup_sizeworkgroup_base.w = GLF_merged3_0_1_13_1_1_14_2_1_14subgroup_sizeworkgroup_baseworkgroup_size.y;
 if(_GLF_DEAD(false))
  barrier();
 GLF_merged3_0_2_51_2_1_13_3_1_14GLF_merged2_0_1_14_1_1_12workgroup_baseworkgroup_idnum_workgroupworkgroup_base.w = GLF_merged3_0_2_51_2_1_13_3_1_14GLF_merged2_0_1_14_1_1_12workgroup_baseworkgroup_idsubgroup_sizeworkgroup_base.w;
 if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY((_GLF_DEAD(false)), ((_GLF_DEAD(false))) && true) || _GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-1710.0923)), float(injectionSwitch.x), bool(true))) > injectionSwitch.y), false || ((_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-1710.0923)), float(injectionSwitch.x), bool(true))) > injectionSwitch.y))))))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)).y)), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)).y)), false || (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED((1769.2499 - 22.19)) : injectionSwitch.x)) > injectionSwitch.y))))) || false)), _GLF_IDENTITY((_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)).y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) || false))) && true, bool(bvec2((_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)).y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) || false))) && true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) && true)))))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, false)))))
    barrier();
   barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), bool(bool(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), bool(bvec4(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, false, true)))))), _GLF_IDENTITY((_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))) || false, bool(bvec2((_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))) || false, true))))) || false)), (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), bool(bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), (_GLF_IDENTITY(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, vec2(vec2(injectionSwitch))).x < injectionSwitch.y)), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))) || false)) || false))) || false))) && (false))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, false, true, false)))))
    return;
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(-1591.6671) : injectionSwitch.x)) > injectionSwitch.y))))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) && true), (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, true, false, true)))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false)))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bool(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y)))))))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, true && (false))))), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), ! (! (_GLF_IDENTITY(false, ! (! (false)))))), false, true), bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, ! (! (false))), false, true), bvec3(_GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY(false, ! (! (false))), false, true)), bvec3(bvec4(bvec3(bvec3(_GLF_IDENTITY(false, ! (! (false))), false, true)), true))))), false)))))))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, false, _GLF_IDENTITY(true, (_GLF_IDENTITY(true, (true) || false)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true)), ! (! (bool(bvec4(false, false, true, true))))))))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         barrier();
        }
       return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
      }
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), true, false, false))))
    barrier();
   return;
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x))) - tan(0.0)) > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  barrier();
 GLF_merged3_0_2_51_2_1_13_3_1_14GLF_merged2_0_1_14_1_1_12workgroup_baseworkgroup_idnum_workgroupworkgroup_base.xy.x = _GLF_IDENTITY(GLF_merged3_0_2_51_2_1_13_3_1_14GLF_merged2_0_1_14_1_1_12workgroup_baseworkgroup_idnum_workgroupworkgroup_base.w, ~ (~ (GLF_merged3_0_2_51_2_1_13_3_1_14GLF_merged2_0_1_14_1_1_12workgroup_baseworkgroup_idnum_workgroupworkgroup_base.w)));
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)))).x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(bool(bvec4(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, false, true)), ! (! (bool(bvec4(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, false, true)))))))
      return;
     barrier();
    }
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).y)))), _GLF_IDENTITY(! (! (bool(bvec3(false, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bool(injectionSwitch.x > injectionSwitch.y))))), _GLF_TRUE(_GLF_IDENTITY(true, (true) || false), (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) < injectionSwitch.y)))))), false || (! (! (bool(bvec3(_GLF_IDENTITY(false, ! (! (false))), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-6.3)), bool(false))) > injectionSwitch.y)), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) < injectionSwitch.y))))))))))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      return;
     barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bool(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y)))))), _GLF_IDENTITY(false || ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bool(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y))))))), (false || ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bool(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y)))))))) || false)))))
        barrier();
       return;
      }
    }
   if(_GLF_DEAD(false))
    barrier();
   return;
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && _GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bool((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 uint virtual_gid = _GLF_IDENTITY(_GLF_IDENTITY(GLF_merged3_0_2_51_2_1_13_3_1_14GLF_merged2_0_1_14_1_1_12workgroup_baseworkgroup_idnum_workgroupworkgroup_base, (true ? GLF_merged3_0_2_51_2_1_13_3_1_14GLF_merged2_0_1_14_1_1_12workgroup_baseworkgroup_idnum_workgroupworkgroup_base : _GLF_FUZZED(GLF_merged3_0_2_51_2_1_13_3_1_14GLF_merged2_0_1_14_1_1_12workgroup_baseworkgroup_idsubgroup_sizeworkgroup_base.yzxw))).xy.x, clamp(_GLF_IDENTITY(GLF_merged3_0_2_51_2_1_13_3_1_14GLF_merged2_0_1_14_1_1_12workgroup_baseworkgroup_idnum_workgroupworkgroup_base.xy.x, (GLF_merged3_0_2_51_2_1_13_3_1_14GLF_merged2_0_1_14_1_1_12workgroup_baseworkgroup_idnum_workgroupworkgroup_base.xy.x) | (GLF_merged3_0_2_51_2_1_13_3_1_14GLF_merged2_0_1_14_1_1_12workgroup_baseworkgroup_idnum_workgroupworkgroup_base.xy.x)), _GLF_IDENTITY(GLF_merged3_0_2_51_2_1_13_3_1_14GLF_merged2_0_1_14_1_1_12workgroup_baseworkgroup_idnum_workgroupworkgroup_base, uvec4(GLF_merged3_0_2_51_2_1_13_3_1_14GLF_merged2_0_1_14_1_1_12workgroup_baseworkgroup_idnum_workgroupworkgroup_base[0], GLF_merged3_0_2_51_2_1_13_3_1_14GLF_merged2_0_1_14_1_1_12workgroup_baseworkgroup_idnum_workgroupworkgroup_base[1], GLF_merged3_0_2_51_2_1_13_3_1_14GLF_merged2_0_1_14_1_1_12workgroup_baseworkgroup_idnum_workgroupworkgroup_base[2], GLF_merged3_0_2_51_2_1_13_3_1_14GLF_merged2_0_1_14_1_1_12workgroup_baseworkgroup_idnum_workgroupworkgroup_base[3])).xy.x, GLF_merged3_0_2_51_2_1_13_3_1_14GLF_merged2_0_1_14_1_1_12workgroup_baseworkgroup_idnum_workgroupworkgroup_base.xy.x)) + _GLF_struct_replacement_2._f1._f0.subgroup_id * GLF_merged3_0_2_51_2_1_13_3_1_14GLF_merged2_0_1_14_1_1_12workgroup_baseworkgroup_idsubgroup_sizeworkgroup_base.z + _GLF_IDENTITY(_GLF_struct_replacement_8._f0.subgroup_local_id, uint(_GLF_IDENTITY(_GLF_IDENTITY(uvec3(_GLF_struct_replacement_8._f0.subgroup_local_id, 0u, 1u), ~ (~ (uvec3(_GLF_struct_replacement_8._f0.subgroup_local_id, 0u, 1u)))), _GLF_IDENTITY((_GLF_IDENTITY(uvec3(_GLF_struct_replacement_8._f0.subgroup_local_id, _GLF_IDENTITY(0u, (0u) * 1u), 1u), ~ (~ (uvec3(_GLF_struct_replacement_8._f0.subgroup_local_id, 0u, 1u))))), uvec3(uvec4((_GLF_IDENTITY(uvec3(_GLF_struct_replacement_8._f0.subgroup_local_id, 0u, 1u), ~ _GLF_IDENTITY((~ (uvec3(_GLF_struct_replacement_8._f0.subgroup_local_id, 0u, 1u))), uvec3(0u, 0u, 0u) ^ ((~ (uvec3(_GLF_struct_replacement_8._f0.subgroup_local_id, 0u, 1u))))))), 0u))) | uvec3(0u, 0u, 0u))));
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       return;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
         if(_GLF_DEAD(false))
          return;
        }
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   return;
  }
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(_GLF_IDENTITY(bvec3(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, true), bvec3(bvec3(_GLF_IDENTITY(bvec3(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, true), bvec3(bvec4(bvec3(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, true), true)))))))))
  return;
 if(_GLF_DEAD(false))
  barrier();
 atomicStore(write_val, _GLF_IDENTITY(_GLF_IDENTITY(uint(virtual_gid), (uint(virtual_gid)) / (1u | 1u)), _GLF_IDENTITY(uint(uvec2(_GLF_IDENTITY(_GLF_IDENTITY(uint(virtual_gid), max(uint(virtual_gid), uint(virtual_gid))), clamp(uint(virtual_gid), _GLF_IDENTITY(uint(virtual_gid), _GLF_IDENTITY((_GLF_IDENTITY(uint(virtual_gid), uint(uvec2(_GLF_IDENTITY(uint(_GLF_IDENTITY(virtual_gid, (virtual_gid) | (virtual_gid))), ~ (~ (uint(_GLF_IDENTITY(virtual_gid, (virtual_gid) | (virtual_gid)))))), 0u)))), min((_GLF_IDENTITY(uint(virtual_gid), uint(uvec2(_GLF_IDENTITY(uint(_GLF_IDENTITY(virtual_gid, (virtual_gid) | (virtual_gid))), ~ (~ (uint(_GLF_IDENTITY(virtual_gid, (virtual_gid) | (virtual_gid)))))), 0u)))), (_GLF_IDENTITY(uint(virtual_gid), uint(uvec2(_GLF_IDENTITY(uint(_GLF_IDENTITY(virtual_gid, (virtual_gid) | (virtual_gid))), ~ (~ (uint(_GLF_IDENTITY(virtual_gid, (virtual_gid) | (virtual_gid)))))), 0u)))))) ^ (1u ^ 1u)), _GLF_IDENTITY(_GLF_IDENTITY(uint(virtual_gid), (uint(virtual_gid)) | (uint(virtual_gid))), min(_GLF_IDENTITY(uint(virtual_gid), (uint(virtual_gid)) | (uint(virtual_gid))), _GLF_IDENTITY(uint(virtual_gid), (uint(virtual_gid)) | (uint(virtual_gid))))))), 0u)), uint(uvec2(uint(uvec2(_GLF_IDENTITY(_GLF_IDENTITY(uint(virtual_gid), max(uint(virtual_gid), uint(virtual_gid))), clamp(uint(virtual_gid), _GLF_IDENTITY(uint(virtual_gid), (_GLF_IDENTITY(uint(virtual_gid), uint(uvec2(uint(_GLF_IDENTITY(virtual_gid, (virtual_gid) | (virtual_gid))), 0u)))) ^ _GLF_IDENTITY((1u ^ 1u), max((1u ^ 1u), (1u ^ 1u)))), _GLF_IDENTITY(_GLF_IDENTITY(uint(virtual_gid), (uint(virtual_gid)) | (uint(virtual_gid))), min(_GLF_IDENTITY(uint(virtual_gid), (_GLF_IDENTITY(uint(virtual_gid), clamp(uint(virtual_gid), _GLF_IDENTITY(uint(virtual_gid), (false ? _GLF_FUZZED(workgroup_base) : uint(virtual_gid))), _GLF_IDENTITY(uint(virtual_gid), clamp(uint(virtual_gid), uint(virtual_gid), _GLF_IDENTITY(uint(virtual_gid), (uint(virtual_gid)) | (uint(virtual_gid)))))))) | (uint(virtual_gid))), _GLF_IDENTITY(uint(virtual_gid), _GLF_IDENTITY((uint(virtual_gid)), min((uint(virtual_gid)), _GLF_IDENTITY((uint(virtual_gid)), min((uint(virtual_gid)), (uint(virtual_gid)))))) | (uint(virtual_gid))))))), 0u)), 1u)))), 4, 64, 0);
 if(_GLF_DEAD(false))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(mat2x4(injectionSwitch, 0.0, _GLF_IDENTITY(tan(0.0), clamp(tan(0.0), tan(0.0), tan(0.0))), abs(1.0), sin(0.0), 0.0, _GLF_ONE(1.0, injectionSwitch.y)))).x > injectionSwitch.y)) || (_GLF_DEAD(false))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec3(injectionSwitch.x > injectionSwitch.y, false, false))))), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), false || (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  return;
 _GLF_struct_23 _GLF_struct_replacement_23 = _GLF_struct_23(mat4x2(1.0), _GLF_struct_11(_GLF_struct_9(_GLF_IDENTITY(_GLF_IDENTITY(vec2(1.0), min(_GLF_IDENTITY(vec2(1.0), vec2(1.0, 1.0) * (vec2(1.0))), vec2(1.0))), vec2(0.0, 0.0) + (_GLF_IDENTITY(_GLF_IDENTITY(vec2(1.0), _GLF_IDENTITY(min(vec2(1.0), vec2(1.0)), _GLF_IDENTITY(vec2(_GLF_IDENTITY(mat4(min(vec2(1.0), vec2(1.0)), sqrt(0.0), 1.0, 0.0, log(1.0), length(cross(vec3(-8.8, -18.97, -915.719), vec3(-8.8, -18.97, -915.719))), determinant(mat3(1.0, abs(0.0), 0.0, 0.0, 1.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(0.0, 1.0, 0.0, 0.0)), dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(0.0, 1.0, 0.0, 0.0))), 1.0)), 0.0, 1.0, 1.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), determinant(mat2(abs(1.0), 0.0, 0.0, 1.0)), cos(0.0), 0.0), transpose(transpose(_GLF_IDENTITY(mat4(min(vec2(1.0), vec2(1.0)), sqrt(0.0), 1.0, 0.0, log(1.0), length(cross(vec3(-8.8, -18.97, -915.719), vec3(-8.8, -18.97, -915.719))), determinant(mat3(1.0, abs(0.0), 0.0, 0.0, 1.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(0.0, 1.0, 0.0, 0.0)), dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(0.0, 1.0, 0.0, 0.0))), 1.0)), 0.0, 1.0, 1.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), determinant(mat2(abs(1.0), 0.0, 0.0, 1.0)), cos(0.0), 0.0), (mat4(min(vec2(1.0), vec2(1.0)), sqrt(0.0), 1.0, 0.0, log(1.0), length(cross(vec3(-8.8, -18.97, -915.719), vec3(-8.8, -18.97, -915.719))), determinant(mat3(1.0, abs(0.0), 0.0, 0.0, 1.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(0.0, 1.0, 0.0, 0.0)), dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(0.0, 1.0, 0.0, 0.0))), 1.0)), 0.0, 1.0, 1.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), determinant(mat2(abs(1.0), 0.0, 0.0, 1.0)), cos(0.0), 0.0)) / mat4(1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0)))))), clamp(_GLF_IDENTITY(vec2(_GLF_IDENTITY(mat4(min(vec2(1.0), vec2(1.0)), sqrt(0.0), 1.0, 0.0, log(1.0), length(cross(vec3(-8.8, -18.97, -915.719), vec3(-8.8, -18.97, -915.719))), determinant(mat3(1.0, abs(0.0), 0.0, 0.0, 1.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(0.0, 1.0, 0.0, 0.0)), dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(0.0, 1.0, 0.0, 0.0))), 1.0)), 0.0, 1.0, 1.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), determinant(mat2(abs(1.0), 0.0, 0.0, 1.0)), cos(0.0), 0.0), transpose(transpose(_GLF_IDENTITY(mat4(min(vec2(1.0), vec2(1.0)), sqrt(0.0), 1.0, 0.0, log(1.0), length(cross(vec3(-8.8, -18.97, -915.719), vec3(-8.8, -18.97, -915.719))), determinant(mat3(1.0, abs(0.0), 0.0, 0.0, 1.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(0.0, 1.0, 0.0, 0.0)), dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(0.0, 1.0, 0.0, 0.0))), 1.0)), 0.0, 1.0, 1.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), determinant(mat2(abs(1.0), 0.0, 0.0, 1.0)), cos(0.0), 0.0), (mat4(min(vec2(1.0), vec2(1.0)), sqrt(0.0), 1.0, 0.0, log(1.0), length(cross(vec3(-8.8, -18.97, -915.719), vec3(-8.8, -18.97, -915.719))), determinant(mat3(1.0, abs(0.0), 0.0, 0.0, 1.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(0.0, 1.0, 0.0, 0.0)), dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(0.0, 1.0, 0.0, 0.0))), 1.0)), 0.0, 1.0, 1.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), determinant(mat2(abs(1.0), 0.0, 0.0, 1.0)), cos(0.0), 0.0)) / mat4(1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0)))))), clamp(vec2(_GLF_IDENTITY(mat4(min(vec2(1.0), vec2(1.0)), sqrt(0.0), 1.0, 0.0, log(1.0), length(cross(vec3(-8.8, -18.97, -915.719), vec3(-8.8, -18.97, -915.719))), determinant(mat3(1.0, abs(0.0), 0.0, 0.0, 1.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(0.0, 1.0, 0.0, 0.0)), dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(0.0, 1.0, 0.0, 0.0))), 1.0)), 0.0, 1.0, 1.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), determinant(mat2(abs(1.0), 0.0, 0.0, 1.0)), cos(0.0), 0.0), transpose(transpose(_GLF_IDENTITY(mat4(min(vec2(1.0), vec2(1.0)), sqrt(0.0), 1.0, 0.0, log(1.0), length(cross(vec3(-8.8, -18.97, -915.719), vec3(-8.8, -18.97, -915.719))), determinant(mat3(1.0, abs(0.0), 0.0, 0.0, 1.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(0.0, 1.0, 0.0, 0.0)), dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(0.0, 1.0, 0.0, 0.0))), 1.0)), 0.0, 1.0, 1.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), determinant(mat2(abs(1.0), 0.0, 0.0, 1.0)), cos(0.0), 0.0), (mat4(min(vec2(1.0), vec2(1.0)), sqrt(0.0), 1.0, 0.0, log(1.0), length(cross(vec3(-8.8, -18.97, -915.719), vec3(-8.8, -18.97, -915.719))), determinant(mat3(1.0, abs(0.0), 0.0, 0.0, 1.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(0.0, 1.0, 0.0, 0.0)), dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(0.0, 1.0, 0.0, 0.0))), 1.0)), 0.0, 1.0, 1.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), determinant(mat2(abs(1.0), 0.0, 0.0, 1.0)), cos(0.0), 0.0)) / mat4(1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0)))))), vec2(_GLF_IDENTITY(mat4(min(vec2(1.0), vec2(1.0)), sqrt(0.0), 1.0, 0.0, log(1.0), length(cross(vec3(-8.8, -18.97, -915.719), vec3(-8.8, -18.97, -915.719))), determinant(mat3(1.0, abs(0.0), 0.0, 0.0, 1.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(0.0, 1.0, 0.0, 0.0)), dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(0.0, 1.0, 0.0, 0.0))), 1.0)), 0.0, 1.0, 1.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), determinant(mat2(abs(1.0), 0.0, 0.0, 1.0)), cos(0.0), 0.0), transpose(transpose(_GLF_IDENTITY(mat4(min(vec2(1.0), vec2(1.0)), sqrt(0.0), 1.0, 0.0, log(1.0), length(cross(vec3(-8.8, -18.97, -915.719), vec3(-8.8, -18.97, -915.719))), determinant(mat3(1.0, abs(0.0), 0.0, 0.0, 1.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(0.0, 1.0, 0.0, 0.0)), dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(0.0, 1.0, 0.0, 0.0))), 1.0)), 0.0, 1.0, 1.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), determinant(mat2(abs(1.0), 0.0, 0.0, 1.0)), cos(0.0), 0.0), (mat4(min(vec2(1.0), vec2(1.0)), sqrt(0.0), 1.0, 0.0, log(1.0), length(cross(vec3(-8.8, -18.97, -915.719), vec3(-8.8, -18.97, -915.719))), determinant(mat3(1.0, abs(0.0), 0.0, 0.0, 1.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(0.0, 1.0, 0.0, 0.0)), dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(0.0, 1.0, 0.0, 0.0))), 1.0)), 0.0, 1.0, 1.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), determinant(mat2(abs(1.0), 0.0, 0.0, 1.0)), cos(0.0), 0.0)) / mat4(1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0)))))), vec2(_GLF_IDENTITY(mat4(min(vec2(1.0), vec2(1.0)), sqrt(0.0), 1.0, 0.0, log(1.0), length(cross(vec3(-8.8, -18.97, -915.719), vec3(-8.8, -18.97, -915.719))), determinant(mat3(1.0, abs(0.0), 0.0, 0.0, 1.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(0.0, 1.0, 0.0, 0.0)), dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(0.0, 1.0, 0.0, 0.0))), 1.0)), 0.0, 1.0, 1.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), determinant(mat2(abs(1.0), 0.0, 0.0, 1.0)), cos(0.0), 0.0), transpose(transpose(_GLF_IDENTITY(mat4(min(vec2(1.0), vec2(1.0)), sqrt(0.0), 1.0, 0.0, log(1.0), length(cross(vec3(-8.8, -18.97, -915.719), vec3(-8.8, -18.97, -915.719))), determinant(mat3(1.0, abs(0.0), 0.0, 0.0, 1.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(0.0, 1.0, 0.0, 0.0)), dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(0.0, 1.0, 0.0, 0.0))), 1.0)), 0.0, 1.0, 1.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), determinant(mat2(abs(1.0), 0.0, 0.0, 1.0)), cos(0.0), 0.0), (mat4(min(vec2(1.0), vec2(1.0)), sqrt(0.0), 1.0, 0.0, log(1.0), length(cross(vec3(-8.8, -18.97, -915.719), vec3(-8.8, -18.97, -915.719))), determinant(mat3(1.0, abs(0.0), 0.0, 0.0, 1.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(0.0, 1.0, 0.0, 0.0)), dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(0.0, 1.0, 0.0, 0.0))), 1.0)), 0.0, 1.0, 1.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), determinant(mat2(abs(1.0), 0.0, 0.0, 1.0)), cos(0.0), 0.0)) / mat4(1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0)))))))), vec2(_GLF_IDENTITY(mat4(min(vec2(1.0), vec2(1.0)), sqrt(0.0), 1.0, 0.0, log(1.0), length(cross(vec3(-8.8, -18.97, -915.719), vec3(-8.8, -18.97, -915.719))), determinant(mat3(1.0, abs(0.0), 0.0, 0.0, 1.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(0.0, 1.0, 0.0, 0.0)), dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(0.0, 1.0, 0.0, 0.0))), 1.0)), 0.0, 1.0, 1.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), determinant(mat2(abs(1.0), 0.0, 0.0, 1.0)), cos(0.0), 0.0), transpose(transpose(_GLF_IDENTITY(mat4(min(vec2(1.0), vec2(1.0)), sqrt(0.0), 1.0, 0.0, log(1.0), length(cross(vec3(-8.8, -18.97, -915.719), vec3(-8.8, -18.97, -915.719))), determinant(mat3(1.0, abs(0.0), 0.0, 0.0, 1.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(0.0, 1.0, 0.0, 0.0)), dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(0.0, 1.0, 0.0, 0.0))), 1.0)), 0.0, 1.0, 1.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), determinant(mat2(abs(1.0), 0.0, 0.0, 1.0)), cos(0.0), 0.0), (mat4(min(vec2(1.0), vec2(1.0)), sqrt(0.0), 1.0, 0.0, log(1.0), length(cross(vec3(-8.8, -18.97, -915.719), vec3(-8.8, -18.97, -915.719))), determinant(mat3(1.0, abs(0.0), 0.0, 0.0, 1.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(0.0, 1.0, 0.0, 0.0)), dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(0.0, 1.0, 0.0, 0.0))), 1.0)), 0.0, 1.0, 1.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), determinant(mat2(abs(1.0), 0.0, 0.0, 1.0)), cos(0.0), 0.0)) / mat4(1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0)))))), vec2(_GLF_IDENTITY(mat4(min(vec2(1.0), vec2(1.0)), sqrt(0.0), 1.0, 0.0, log(1.0), length(cross(vec3(-8.8, -18.97, -915.719), vec3(-8.8, -18.97, -915.719))), determinant(mat3(1.0, abs(0.0), 0.0, 0.0, 1.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(0.0, 1.0, 0.0, 0.0)), dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(0.0, 1.0, 0.0, 0.0))), 1.0)), 0.0, 1.0, 1.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), determinant(mat2(abs(1.0), 0.0, 0.0, 1.0)), cos(0.0), 0.0), transpose(transpose(_GLF_IDENTITY(mat4(min(vec2(1.0), vec2(1.0)), sqrt(0.0), 1.0, 0.0, log(1.0), length(cross(vec3(-8.8, -18.97, -915.719), vec3(-8.8, -18.97, -915.719))), determinant(mat3(1.0, abs(0.0), 0.0, 0.0, 1.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(0.0, 1.0, 0.0, 0.0)), dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(0.0, 1.0, 0.0, 0.0))), 1.0)), 0.0, 1.0, 1.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), determinant(mat2(abs(1.0), 0.0, 0.0, 1.0)), cos(0.0), 0.0), (mat4(min(vec2(1.0), vec2(1.0)), sqrt(0.0), 1.0, 0.0, log(1.0), length(cross(vec3(-8.8, -18.97, -915.719), vec3(-8.8, -18.97, -915.719))), determinant(mat3(1.0, abs(0.0), 0.0, 0.0, 1.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(0.0, 1.0, 0.0, 0.0)), dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(0.0, 1.0, 0.0, 0.0))), 1.0)), 0.0, 1.0, 1.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), determinant(mat2(abs(1.0), 0.0, 0.0, 1.0)), cos(0.0), 0.0)) / mat4(1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0)))))))))), min(_GLF_IDENTITY(vec2(1.0), min(vec2(1.0), vec2(1.0))), _GLF_IDENTITY(vec2(1.0), min(vec2(1.0), vec2(1.0))))))), bvec4(_GLF_IDENTITY(true, ! (! (true)))), true, uvec3(1u), _GLF_IDENTITY(uvec2(1u), clamp(uvec2(1u), uvec2(1u), _GLF_IDENTITY(uvec2(1u), _GLF_IDENTITY(uvec2(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(uvec2(1u), ~ (~ (_GLF_IDENTITY(uvec2(1u), clamp(uvec2(1u), uvec2(1u), uvec2(1u)))))), _GLF_IDENTITY(0u, clamp(0u, 0u, _GLF_IDENTITY(0u, 0u ^ (0u))))), (uvec3(_GLF_IDENTITY(uvec2(1u), ~ (~ (uvec2(1u)))), 0u)) - uvec3(0u, 0u, 0u))), (false ? _GLF_IDENTITY(_GLF_FUZZED(GLF_merged2_0_1_14_1_1_12workgroup_baseworkgroup_id), (_GLF_FUZZED(GLF_merged2_0_1_14_1_1_12workgroup_baseworkgroup_id)) | uvec2(0u, 0u)) : uvec2(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(uvec2(1u), ~ (~ (uvec2(1u)))), 0u), (uvec3(_GLF_IDENTITY(uvec2(1u), _GLF_IDENTITY(~ (~ (uvec2(1u))), clamp(_GLF_IDENTITY(~ (~ (uvec2(1u))), (~ (~ (uvec2(1u)))) | (~ (~ (uvec2(1u))))), ~ (~ (uvec2(1u))), ~ (~ (_GLF_IDENTITY(uvec2(1u), _GLF_IDENTITY(uvec2(uvec3(uvec2(1u), 1u)), (uvec2(0u, 0u) & uvec2(111807u, 158960u)) ^ (_GLF_IDENTITY(uvec2(uvec3(uvec2(1u), 1u)), clamp(uvec2(uvec3(uvec2(1u), 1u)), uvec2(uvec3(uvec2(1u), 1u)), uvec2(uvec3(uvec2(1u), 1u)))))))))))), 0u)) - uvec3(_GLF_IDENTITY(0u, (0u) | (0u)), 0u, 0u)))))))), mat4x2(1.0)), _GLF_struct_10(mat3x2(1.0)), mat4x3(_GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0))), mat2x3(1.0)), uvec2(1u), _GLF_struct_13(_GLF_struct_12(mat4x3(1.0), vec3(1.0)), atomicLoad(write_val, 4, 64, 0)), _GLF_struct_14(mat4(1.0)), _GLF_struct_17(_GLF_struct_15(mat2x4(1.0), mat3(1.0), mat2(1.0)), _GLF_struct_16(mat3x2(1.0)), 1u, 1u, 1u, _GLF_IDENTITY(ivec2(1), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(max(ivec2(18644, 97359), ivec2(-1072, -98708))) : ivec2(1)))), _GLF_struct_22(_GLF_struct_18(_GLF_IDENTITY(1.0, float(mat4x3(1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, tan(0.0), 0.0, 0.0, 0.0, sin(0.0)))), bvec3(true)), _GLF_struct_19(ivec4(1), mat4(1.0), vec3(1.0), mat4(1.0)), _GLF_struct_20(_GLF_IDENTITY(uvec4(1u), max(uvec4(1u), uvec4(1u)))), _GLF_struct_21(mat2x4(1.0), 1.0, mat2(1.0), mat2x4(_GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(fract(40.10))))), mat4x3(_GLF_IDENTITY(1.0, _GLF_IDENTITY((1.0) - _GLF_IDENTITY(0.0, exp(0.0) * (0.0)), min(_GLF_IDENTITY((1.0) - _GLF_IDENTITY(0.0, exp(0.0) * (0.0)), max(_GLF_IDENTITY((1.0) - _GLF_IDENTITY(0.0, _GLF_IDENTITY(exp(0.0), mix(float(exp(0.0)), float(_GLF_FUZZED(-625.851)), bool(false))) * (0.0)), _GLF_IDENTITY(max((1.0) - _GLF_IDENTITY(0.0, exp(0.0) * (0.0)), (1.0) - _GLF_IDENTITY(0.0, exp(0.0) * (0.0))), (max((1.0) - _GLF_IDENTITY(0.0, exp(0.0) * (0.0)), (1.0) - _GLF_IDENTITY(0.0, exp(0.0) * (0.0)))) - 0.0)), (_GLF_IDENTITY(1.0, _GLF_IDENTITY(0.0, mix(_GLF_IDENTITY(float(0.0), mix(float(_GLF_FUZZED(9.4)), float(float(0.0)), bool(true))), float(_GLF_FUZZED(-665.900)), bool(false))) + (1.0))) - _GLF_IDENTITY(0.0, exp(0.0) * (0.0)))), _GLF_IDENTITY((1.0) - _GLF_IDENTITY(0.0, exp(0.0) * (0.0)), _GLF_IDENTITY(((1.0) - _GLF_IDENTITY(0.0, exp(0.0) * (0.0))), (_GLF_IDENTITY(_GLF_IDENTITY(((1.0) - _GLF_IDENTITY(0.0, exp(0.0) * (0.0))), (_GLF_IDENTITY(((1.0) - _GLF_IDENTITY(0.0, exp(0.0) * (0.0))), max(((1.0) - _GLF_IDENTITY(0.0, exp(0.0) * (0.0))), ((1.0) - _GLF_IDENTITY(0.0, exp(0.0) * (0.0)))))) / determinant(mat2(1.0, 0.0, 0.0, 1.0))), _GLF_IDENTITY(float(mat2(_GLF_IDENTITY(((1.0) - _GLF_IDENTITY(0.0, exp(0.0) * (0.0))), (_GLF_IDENTITY(((1.0) - _GLF_IDENTITY(0.0, exp(0.0) * (0.0))), max(((1.0) - _GLF_IDENTITY(0.0, exp(0.0) * (0.0))), ((1.0) - _GLF_IDENTITY(0.0, exp(0.0) * (0.0)))))) / determinant(mat2(1.0, 0.0, 0.0, 1.0))), 1.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, 1.0), vec4(1.0, 1.0, 0.0, 0.0)), dot(vec4(0.0, 0.0, 1.0, 1.0), vec4(1.0, 1.0, 0.0, 0.0))), 1.0)), min(_GLF_IDENTITY(float(mat2(_GLF_IDENTITY(((1.0) - _GLF_IDENTITY(0.0, exp(0.0) * (0.0))), (_GLF_IDENTITY(((1.0) - _GLF_IDENTITY(0.0, exp(0.0) * (0.0))), max(((1.0) - _GLF_IDENTITY(0.0, exp(0.0) * (0.0))), ((1.0) - _GLF_IDENTITY(0.0, exp(0.0) * (0.0)))))) / determinant(mat2(1.0, 0.0, 0.0, 1.0))), 1.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, 1.0), vec4(1.0, 1.0, 0.0, 0.0)), dot(vec4(0.0, 0.0, 1.0, 1.0), vec4(1.0, 1.0, 0.0, 0.0))), 1.0)), max(float(mat2(_GLF_IDENTITY(((1.0) - _GLF_IDENTITY(0.0, exp(0.0) * (0.0))), (_GLF_IDENTITY(((1.0) - _GLF_IDENTITY(0.0, exp(0.0) * (0.0))), max(((1.0) - _GLF_IDENTITY(0.0, exp(0.0) * (0.0))), ((1.0) - _GLF_IDENTITY(0.0, exp(0.0) * (0.0)))))) / determinant(mat2(1.0, 0.0, 0.0, 1.0))), 1.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, 1.0), vec4(1.0, 1.0, 0.0, 0.0)), dot(vec4(0.0, 0.0, 1.0, 1.0), vec4(1.0, 1.0, 0.0, 0.0))), 1.0)), float(mat2(_GLF_IDENTITY(((1.0) - _GLF_IDENTITY(0.0, exp(0.0) * (0.0))), (_GLF_IDENTITY(((1.0) - _GLF_IDENTITY(0.0, exp(0.0) * (0.0))), max(((1.0) - _GLF_IDENTITY(0.0, exp(0.0) * (0.0))), ((1.0) - _GLF_IDENTITY(0.0, exp(0.0) * (0.0)))))) / determinant(mat2(1.0, 0.0, 0.0, 1.0))), 1.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, 1.0), vec4(1.0, 1.0, 0.0, 0.0)), dot(vec4(0.0, 0.0, 1.0, 1.0), vec4(1.0, 1.0, 0.0, 0.0))), 1.0)))), _GLF_IDENTITY(float(mat2(_GLF_IDENTITY(((1.0) - _GLF_IDENTITY(0.0, exp(0.0) * (0.0))), (_GLF_IDENTITY(((1.0) - _GLF_IDENTITY(0.0, exp(0.0) * (0.0))), max(((1.0) - _GLF_IDENTITY(0.0, exp(0.0) * (0.0))), ((1.0) - _GLF_IDENTITY(0.0, exp(0.0) * (0.0)))))) / determinant(mat2(1.0, 0.0, 0.0, 1.0))), 1.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, 1.0), vec4(1.0, 1.0, 0.0, 0.0)), dot(vec4(0.0, 0.0, 1.0, 1.0), vec4(1.0, 1.0, 0.0, 0.0))), 1.0)), max(float(mat2(_GLF_IDENTITY(((1.0) - _GLF_IDENTITY(0.0, exp(0.0) * (0.0))), (_GLF_IDENTITY(((1.0) - _GLF_IDENTITY(0.0, exp(0.0) * (0.0))), max(((1.0) - _GLF_IDENTITY(0.0, exp(0.0) * (0.0))), ((1.0) - _GLF_IDENTITY(0.0, exp(0.0) * (0.0)))))) / determinant(mat2(1.0, 0.0, 0.0, 1.0))), 1.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, 1.0), vec4(1.0, 1.0, 0.0, 0.0)), dot(vec4(0.0, 0.0, 1.0, 1.0), vec4(1.0, 1.0, 0.0, 0.0))), 1.0)), float(mat2(_GLF_IDENTITY(((1.0) - _GLF_IDENTITY(0.0, exp(0.0) * (0.0))), (_GLF_IDENTITY(((1.0) - _GLF_IDENTITY(0.0, exp(0.0) * (0.0))), max(((1.0) - _GLF_IDENTITY(0.0, exp(0.0) * (0.0))), ((1.0) - _GLF_IDENTITY(0.0, exp(0.0) * (0.0)))))) / determinant(mat2(1.0, 0.0, 0.0, 1.0))), 1.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, 1.0), vec4(1.0, 1.0, 0.0, 0.0)), dot(vec4(0.0, 0.0, 1.0, 1.0), vec4(1.0, 1.0, 0.0, 0.0))), 1.0)))))))) * determinant(mat4(1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, sqrt(1.0), 0.0, 1.0, 0.0, 1.0, 1.0))) / 1.0))))), _GLF_IDENTITY(vec2(1.0), clamp(vec2(_GLF_IDENTITY(1.0, float(_GLF_IDENTITY(mat4(1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, length(vec2(0.0, 0.0)), 1.0, exp(0.0), 0.0, _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(-33.29)), bool(false))), 0.0), (mat4(1.0, 1.0, 0.0, _GLF_IDENTITY(1.0, float(_GLF_IDENTITY(mat3x2(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(7423.7831)), bool(false))), 0.0, 0.0, 0.0, 1.0, 0.0), (true ? mat3x2(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(7423.7831)), bool(false))), 0.0, 0.0, 0.0, 1.0, 0.0) : _GLF_FUZZED(mat3x2(2739.6515, 4.0, -1565.8650, 30.23, -9.3, 32.01)))))), 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, length(_GLF_IDENTITY(vec2(0.0, 0.0), vec2(mat3(vec2(0.0, 0.0), 0.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), max(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), vec2(1.0, 0.0))))), 0.0, 1.0, 1.0, 1.0, abs(0.0))))), 1.0, exp(_GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, (0.0) * 1.0)) - 0.0)), 0.0, 1.0, 0.0)) - mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, (0.0) * _GLF_ONE(1.0, injectionSwitch.y)), 0.0, 0.0))))), vec2(1.0), vec2(_GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, float(mat3(1.0, 1.0, log(1.0), 0.0, _GLF_IDENTITY(0.0, (0.0) - 0.0), 1.0, 1.0, 1.0, 0.0))), 1.0))))), mat2x4(1.0)), _GLF_IDENTITY(mat3(1.0), _GLF_IDENTITY(mat3(mat3(_GLF_IDENTITY(mat3(1.0), mat3(mat3x4(mat3(1.0)))))), transpose(transpose(_GLF_IDENTITY(mat3(mat3(mat3(1.0))), (_GLF_IDENTITY(mat3(mat3(mat3(1.0))), mat3(1.0) * (mat3(mat3(mat3(1.0)))))) / mat3(1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0)))))), bvec3(true)));
 buf[virtual_gid] = uint(subgroupAllEqual(_GLF_struct_replacement_23._f3.read_val));
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).y))))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
    return;
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))), bool(bvec3(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))), false, false))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false))))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       barrier();
      }
     return;
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec2(bvec2(false, false))))))))
        return;
       barrier();
      }
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  barrier();
}
