#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer WriteVal {
 uint write_val;
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, bool(bvec3(false, false, true)))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(false, true && (false)))), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(bool(bool(_GLF_IDENTITY(false, true && (false)))), ! (_GLF_IDENTITY(! (bool(bool(_GLF_IDENTITY(false, true && (false))))), bool(bool(! (bool(bool(_GLF_IDENTITY(false, true && (false)))))))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec2(bvec4(bvec2(_GLF_IDENTITY(bool(bool(_GLF_IDENTITY(false, true && (false)))), ! (_GLF_IDENTITY(! (bool(bool(_GLF_IDENTITY(false, true && (false))))), bool(bool(! (bool(bool(_GLF_IDENTITY(false, true && _GLF_IDENTITY((false), bool(bvec2((false), true)))))))))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, ! (! (true))))), true)))))), false, false)))))
    {
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false)), (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(vec3(39.56, -7.4, -194.995).z)), float(injectionSwitch.x), bool(true))) > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, false || (false))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (_GLF_IDENTITY(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, false || (false))) || _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))), (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, false || (false))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && _GLF_TRUE(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), bool(bvec3(_GLF_IDENTITY(! (true), bool(bvec4(! (true), false, true, false))), false, true))))), (injectionSwitch.x < injectionSwitch.y))))) || ((injectionSwitch.x > injectionSwitch.y))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + 0.0)))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + 0.0)))), bool(bvec3(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + 0.0)))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + 0.0))))) || false), true, false)))) && _GLF_IDENTITY(true, false || _GLF_IDENTITY((true), _GLF_IDENTITY(bool(bool((true))), true && (_GLF_IDENTITY(bool(bool((true))), (bool(bool((true)))) || false)))))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, bool(bvec3(false, false, false))))), bool(bvec2(false, false)))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
      barrier();
     barrier();
    }
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-4577.4042)), bool(false))))) > injectionSwitch.y))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y))))))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0) > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(-40.75)), bool(false))), max(injectionSwitch.y, injectionSwitch.y)))), min(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(-40.75)), bool(false))), max(injectionSwitch.y, injectionSwitch.y)))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(-40.75)), bool(false))), max(injectionSwitch.y, injectionSwitch.y)))), (_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(-40.75)), bool(false))), max(injectionSwitch.y, injectionSwitch.y))))) - 0.0))), mix(float(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(-40.75)), bool(false))), max(injectionSwitch.y, injectionSwitch.y)))), min(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(-40.75)), bool(false))), max(injectionSwitch.y, injectionSwitch.y)))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(-40.75)), bool(false))), max(injectionSwitch.y, injectionSwitch.y)))), (_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(-40.75)), bool(false))), max(injectionSwitch.y, injectionSwitch.y))))) - 0.0))), (true ? _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(-40.75)), bool(false))), max(injectionSwitch.y, injectionSwitch.y)))), min(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(-40.75)), bool(false))), max(injectionSwitch.y, injectionSwitch.y)))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(-40.75)), bool(false))), max(injectionSwitch.y, injectionSwitch.y)))), (_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(-40.75)), bool(false))), max(injectionSwitch.y, injectionSwitch.y))))) - 0.0))) : _GLF_FUZZED(reflect(75.77, -14.19))))), float(_GLF_FUZZED(-9544.1812)), bool(false)))) / _GLF_IDENTITY(dot(vec4(_GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-4774.3908)), bool(false)))) + 0.0), 1.0, 0.0, 0.0), vec4(0.0, 1.0, 0.0, 0.0)), dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(0.0, 1.0, 0.0, 0.0))), (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(-40.75)), bool(false))), max(injectionSwitch.y, injectionSwitch.y)))), min(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(-40.75)), bool(false))), max(injectionSwitch.y, injectionSwitch.y)))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(-40.75)), bool(false))), (_GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(-40.75)), bool(false)))) / 1.0), max(injectionSwitch.y, injectionSwitch.y)))), (_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(mix(float(injectionSwitch.y), float(_GLF_FUZZED(-40.75)), bool(false)), mix(float(_GLF_FUZZED(7.0)), float(_GLF_IDENTITY(mix(float(injectionSwitch.y), float(_GLF_FUZZED(-40.75)), bool(false)), (mix(float(injectionSwitch.y), float(_GLF_FUZZED(-40.75)), bool(false))) / abs(1.0))), bool(true)))), max(injectionSwitch.y, injectionSwitch.y))))) - 0.0)))) / _GLF_IDENTITY(dot(vec4(_GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-4774.3908)), bool(false)))) + 0.0), 1.0, 0.0, 0.0), vec4(0.0, 1.0, 0.0, 0.0)), dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(0.0, 1.0, 0.0, 0.0))), ((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0), min(injectionSwitch.y, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(-40.75)), bool(false))), max(injectionSwitch.y, injectionSwitch.y)))), min(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(-40.75)), bool(false))), max(injectionSwitch.y, injectionSwitch.y)), float(mat4x3(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(-40.75)), bool(false))), max(injectionSwitch.y, injectionSwitch.y)), 0.0, abs(1.0), abs(1.0), 0.0, 1.0, 0.0, 1.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 1.0))))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(-40.75)), bool(false))), max(injectionSwitch.y, injectionSwitch.y)))), min(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(-40.75)), bool(false))), max(injectionSwitch.y, injectionSwitch.y)))), _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(-40.75)), bool(false))), max(injectionSwitch.y, injectionSwitch.y)))))), (_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(-40.75)), bool(false))), max(injectionSwitch.y, injectionSwitch.y))))) - _GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, float(mat2x3(0.0, 1.0, 0.0, _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(58.01)), float(1.0), bool(true))), _GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0, 1.0)), 1.0))), 0.0)))))) / _GLF_IDENTITY(dot(vec4(_GLF_IDENTITY(_GLF_IDENTITY(0.0, mix(float(_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(5.2)))), float(_GLF_FUZZED(3434.8890)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), (_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-4774.3908)), bool(false)))) + 0.0), 1.0, 0.0, 0.0), vec4(0.0, 1.0, 0.0, 0.0)), dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(0.0, 1.0, 0.0, 0.0)))) - 0.0)) / 1.0))))), _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)))).x > injectionSwitch.y))), bool(bvec2(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(31.78) : 1.0)), 1.0)).y, float(mat2x3(injectionSwitch.y, 1.0, 1.0, 0.0, 0.0, 1.0)))))))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(31.78) : 1.0)), 1.0)).y, float(mat2x3(injectionSwitch.y, 1.0, 1.0, 0.0, 0.0, 1.0))))))))), false || (_GLF_IDENTITY(bool(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(31.78) : 1.0)), 1.0)).y, float(mat2x3(injectionSwitch.y, 1.0, 1.0, 0.0, 0.0, 1.0))))))))), true && (bool(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(31.78) : 1.0)), 1.0)).y, float(mat2x3(injectionSwitch.y, 1.0, 1.0, 0.0, 0.0, 1.0)))))))))))))), ! (! (bool(_GLF_IDENTITY(bool(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(31.78) : 1.0)), 1.0)).y, float(mat2x3(injectionSwitch.y, 1.0, 1.0, 0.0, 0.0, 1.0))))))))), false || (_GLF_IDENTITY(bool(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(31.78) : 1.0)), 1.0)).y, float(mat2x3(injectionSwitch.y, 1.0, 1.0, 0.0, 0.0, 1.0))))))))), true && (bool(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(31.78) : 1.0)), 1.0)).y, float(mat2x3(injectionSwitch.y, 1.0, 1.0, 0.0, 0.0, 1.0)))))))))))))))))), true)))), _GLF_IDENTITY(bool(bool((_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)))).x > injectionSwitch.y))), bool(bvec2(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).y, float(mat2x3(injectionSwitch.y, 1.0, 1.0, 0.0, 0.0, 1.0))))))), ! (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).y, float(mat2x3(injectionSwitch.y, 1.0, 1.0, 0.0, 0.0, 1.0)))))))), false || (! (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).y, float(mat2x3(injectionSwitch.y, 1.0, 1.0, 0.0, 0.0, 1.0))))))))))))), _GLF_IDENTITY(true, (_GLF_IDENTITY(true, (true) && true)) && true))))))), bool(bvec2(bool(bool((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)))).x > injectionSwitch.y))), bool(bvec2(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).y, float(mat2x3(injectionSwitch.y, 1.0, 1.0, 0.0, 0.0, 1.0))))))), true && (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).y, float(mat2x3(injectionSwitch.y, 1.0, 1.0, 0.0, 0.0, 1.0)))))))))), true))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)))), (false ? _GLF_FUZZED(injectionSwitch) : _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)))))).x > injectionSwitch.y))), bool(bvec2(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).y, float(mat2x3(injectionSwitch.y, 1.0, 1.0, 0.0, 0.0, 1.0)))))))), true))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)))).x > injectionSwitch.y))), bool(bvec2(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch))) / vec2(1.0, 1.0)).y, float(mat2x3(injectionSwitch.y, 1.0, 1.0, 0.0, 0.0, 1.0)))))))), true)))) && true)) && true)))), false)))) || false, ! (! (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)))).x > injectionSwitch.y))), bool(bvec2(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(max(injectionSwitch.y, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) / vec2(1.0, 1.0), vec2(1.0, 1.0) * ((injectionSwitch) / vec2(1.0, 1.0)))).y, float(mat2x3(injectionSwitch.y, 1.0, 1.0, 0.0, 0.0, 1.0)))), (_GLF_IDENTITY(max(injectionSwitch.y, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).y, float(mat2x3(injectionSwitch.y, 1.0, 1.0, 0.0, 0.0, 1.0))), _GLF_IDENTITY(mix(float(_GLF_FUZZED(5.5)), float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).y, float(mat2x3(injectionSwitch.y, 1.0, 1.0, 0.0, 0.0, 1.0)))), bool(true)), (true ? mix(float(_GLF_FUZZED(5.5)), float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, _GLF_IDENTITY(1.0, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? 1.0 : _GLF_FUZZED(faceforward(6.3, 6430.2448, 8153.9636)))))).y, float(mat2x3(injectionSwitch.y, 1.0, 1.0, 0.0, 0.0, 1.0)))), bool(true)) : _GLF_FUZZED(-6.4))))), float(_GLF_IDENTITY(mat4x3(max(injectionSwitch.y, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).y, float(mat2x3(injectionSwitch.y, 1.0, 1.0, 0.0, 0.0, 1.0)))), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0, 0.0)), _GLF_IDENTITY(_GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(-69.36) : 0.0)), 0.0 + (_GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(-69.36) : 0.0)))))), 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0), (true ? mat4x3(max(injectionSwitch.y, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).y, float(mat2x3(injectionSwitch.y, 1.0, 1.0, 0.0, 0.0, 1.0)))), _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0) : _GLF_FUZZED(mat4x3(0.4, 840.972, 4.6, 32.60, -231.614, -5.7, -2.1, -569.947, 5543.0129, 319.885, -21.20, -6618.5661))))))) - 0.0)), ! (! (_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(max(injectionSwitch.y, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)), vec2(_GLF_IDENTITY(injectionSwitch[0], mix(float(injectionSwitch[0]), float(_GLF_FUZZED(-22.99)), bool(false))), injectionSwitch[1]))) / vec2(_GLF_IDENTITY(1.0, float(_GLF_IDENTITY(float(1.0), max(float(1.0), float(1.0))))), 1.0)).y, float(mat2x3(injectionSwitch.y, 1.0, 1.0, 0.0, 0.0, 1.0)))), (_GLF_IDENTITY(max(injectionSwitch.y, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).y, float(mat2x3(injectionSwitch.y, 1.0, 1.0, 0.0, 0.0, 1.0)))), float(_GLF_IDENTITY(mat4x3(max(injectionSwitch.y, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).y, float(mat2x3(injectionSwitch.y, _GLF_IDENTITY(1.0, (1.0) + sqrt(0.0)), 1.0, 0.0, 0.0, 1.0)))), _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0), (true ? mat4x3(max(injectionSwitch.y, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).y, float(mat2x3(injectionSwitch.y, 1.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-760.210)), float(1.0), bool(true))))))), _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0) : _GLF_FUZZED(mat4x3(0.4, _GLF_IDENTITY(840.972, (840.972) - _GLF_IDENTITY(dot(vec2(0.0, 0.0), vec2(1.0, 1.0)), _GLF_IDENTITY(dot(vec2(0.0, 0.0), vec2(1.0, 1.0)), clamp(dot(vec2(0.0, 0.0), vec2(1.0, 1.0)), dot(vec2(0.0, 0.0), vec2(1.0, 1.0)), dot(vec2(0.0, 0.0), vec2(1.0, 1.0)))))), 4.6, 32.60, -231.614, -5.7, -2.1, -569.947, 5543.0129, 319.885, -21.20, -6618.5661))))))) - 0.0)))))))), true)))), _GLF_IDENTITY(bool(bool((_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * _GLF_IDENTITY(mat2(1.0), mat2(0.0, 0.0, 0.0, 0.0) + (mat2(1.0)))))).x > injectionSwitch.y))), bool(bvec2(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / determinant(mat4(abs(1.0), 0.0, 0.0, 0.0, 1.0, round(length(normalize(1.0))), 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0))), injectionSwitch.x)))) > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).y, float(mat2x3(injectionSwitch.y, 1.0, 1.0, 0.0, 0.0, 1.0)))))))), bool(bvec2(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / determinant(mat4(abs(1.0), 0.0, 0.0, 0.0, 1.0, round(length(normalize(1.0))), 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0))), injectionSwitch.x)))) > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).y, float(mat2x3(injectionSwitch.y, 1.0, 1.0, 0.0, 0.0, 1.0)))))))), false))), true)))))), bool(bvec2(bool(bool((_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY((injectionSwitch)[0], min((injectionSwitch)[0], (injectionSwitch)[0])), _GLF_FUZZED(-8.0)), vec2(_GLF_FUZZED(-929.041), (injectionSwitch)[1]), bvec2(false, true))), _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)))).x > _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0))) / vec2(1.0, 1.0)).y))), bool(bvec2(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).y, float(mat2x3(injectionSwitch.y, _GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, min(1.0, 1.0)), 1.0)), 1.0, 0.0, 0.0, _GLF_IDENTITY(1.0, max(1.0, 1.0))))), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).y, float(mat2x3(injectionSwitch.y, 1.0, 1.0, 0.0, 0.0, 1.0)))) / 1.0)))))), true)))))), false)))) || false)))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(vec4(injectionSwitch, 1.0, 1.0)), mix(vec2(_GLF_IDENTITY(_GLF_FUZZED(7162.3928), max(_GLF_FUZZED(7162.3928), _GLF_IDENTITY(_GLF_FUZZED(7162.3928), max(_GLF_FUZZED(7162.3928), _GLF_FUZZED(7162.3928))))), _GLF_FUZZED(28.36)), vec2(_GLF_IDENTITY((vec2(vec4(injectionSwitch, 1.0, 1.0)))[0], ((vec2(vec4(injectionSwitch, 1.0, 1.0)))[0]) * _GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, float(vec2(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-93.43) : 1.0)), _GLF_ONE(1.0, injectionSwitch.y)))), 1.0))), (vec2(_GLF_IDENTITY(vec4(injectionSwitch, 1.0, 1.0), min(vec4(injectionSwitch, 1.0, 1.0), vec4(injectionSwitch, 1.0, 1.0)))))[1]), bvec2(true, _GLF_IDENTITY(true, ! (! (true))))))).y)), _GLF_IDENTITY(! (! (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y)))), (! (! (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y))))) && true))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), ! (! (bool(false))))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   barrier();
  }
 uint subgroup_local_id = gl_SubgroupInvocationID;
 uint num_workgroup = gl_NumWorkGroups.x;
 if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(! _GLF_IDENTITY((! (_GLF_DEAD(false))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && ((! (_GLF_DEAD(false))))), (! (! (_GLF_DEAD(false)))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), false || (_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(! (! (_GLF_DEAD(false))), (! (! (_GLF_DEAD(false)))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, vec2(mat3x2(injectionSwitch, 0.0, 1.0, 1.0, 0.0))), injectionSwitch)), vec2(1.0, 1.0) * (injectionSwitch)).x > injectionSwitch.y))), false || (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, vec2(mat3x2(injectionSwitch, 0.0, 1.0, 1.0, 0.0))), injectionSwitch)), vec2(1.0, 1.0) * (injectionSwitch)).x > injectionSwitch.y))), bool(bool(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, vec2(mat3x2(injectionSwitch, 0.0, 1.0, 1.0, 0.0))), injectionSwitch)), vec2(1.0, 1.0) * (injectionSwitch)).x > injectionSwitch.y)))))))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(false, ! (! (false)))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0) > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(max(vec2(2.2, -7.1), -35.88)))).y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, bool(bvec3(false, false, false)))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false), _GLF_IDENTITY(bvec2(bvec2(bvec2(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false))), bvec2(bvec2(bvec2(bvec2(bvec2(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false)))))))), true && (bool(_GLF_IDENTITY(bvec2(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false), _GLF_IDENTITY(bvec2(bvec2(bvec2(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false))), bvec2(bvec2(bvec2(bvec2(bvec2(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false))))))))))))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, float(_GLF_IDENTITY(mat2(injectionSwitch.y, 1.0, 0.0, 0.0), (false ? _GLF_FUZZED(mat2(-2.9, -1.6, -4.0, -449.327)) : mat2(injectionSwitch.y, 1.0, 0.0, 0.0))))))), injectionSwitch.y)))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, float(_GLF_IDENTITY(mat2(injectionSwitch.y, 1.0, 0.0, 0.0), (false ? _GLF_FUZZED(mat2(-2.9, -1.6, -4.0, -449.327)) : mat2(injectionSwitch.y, 1.0, 0.0, 0.0))))))), injectionSwitch.y)), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, float(_GLF_IDENTITY(mat2(injectionSwitch.y, 1.0, 0.0, 0.0), (false ? _GLF_FUZZED(mat2(-2.9, -1.6, -4.0, -449.327)) : mat2(injectionSwitch.y, 1.0, 0.0, 0.0))))))), injectionSwitch.y)), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, float(_GLF_IDENTITY(mat2(injectionSwitch.y, 1.0, 0.0, 0.0), (false ? _GLF_FUZZED(mat2(-2.9, -1.6, -4.0, -449.327)) : mat2(injectionSwitch.y, 1.0, 0.0, 0.0))))))), injectionSwitch.y)), clamp(_GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, float(_GLF_IDENTITY(mat2(injectionSwitch.y, 1.0, 0.0, 0.0), (false ? _GLF_FUZZED(mat2(-2.9, -1.6, -4.0, -449.327)) : mat2(injectionSwitch.y, 1.0, 0.0, 0.0))))))), injectionSwitch.y)), _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, float(_GLF_IDENTITY(mat2(injectionSwitch.y, 1.0, 0.0, 0.0), (false ? _GLF_FUZZED(mat2(-2.9, -1.6, -4.0, -449.327)) : mat2(injectionSwitch.y, 1.0, 0.0, 0.0))))))), injectionSwitch.y)), _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, float(_GLF_IDENTITY(mat2(injectionSwitch.y, 1.0, 0.0, 0.0), (false ? _GLF_FUZZED(mat2(-2.9, -1.6, -4.0, -449.327)) : mat2(injectionSwitch.y, 1.0, 0.0, 0.0))))))), injectionSwitch.y))))) * 1.0)) * 1.0))), (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, float(_GLF_IDENTITY(_GLF_IDENTITY(mat2(injectionSwitch.y, 1.0, 0.0, 0.0), (false ? _GLF_FUZZED(mat2(-2.9, -1.6, -4.0, -449.327)) : mat2(injectionSwitch.y, 1.0, 0.0, 0.0))), transpose(transpose(_GLF_IDENTITY(mat2(injectionSwitch.y, 1.0, 0.0, 0.0), (false ? _GLF_FUZZED(mat2(-2.9, -1.6, -4.0, -449.327)) : mat2(injectionSwitch.y, 1.0, 0.0, 0.0)))))))))), injectionSwitch.y))))) || false)), (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, float(_GLF_IDENTITY(mat2(injectionSwitch.y, 1.0, 0.0, 0.0), (false ? _GLF_FUZZED(mat2(-2.9, -1.6, -4.0, -449.327)) : mat2(injectionSwitch.y, 1.0, 0.0, 0.0))))))), injectionSwitch.y)))), (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, float(_GLF_IDENTITY(mat2(injectionSwitch.y, 1.0, 0.0, 0.0), (false ? _GLF_FUZZED(mat2(-2.9, -1.6, -4.0, -449.327)) : mat2(injectionSwitch.y, 1.0, 0.0, 0.0))))))), injectionSwitch.y))))) || false))) && true)))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, true)))))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
  }
 uint workgroup_size = _GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) - uvec3(0u, 0u, _GLF_IDENTITY(0u, 0u + (0u)))).x;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(float(27958u)), _GLF_FUZZED(-175.902)), bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))).y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
   barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0)))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, _GLF_IDENTITY((false), bool(bool((false)))) && true))))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), ! (! (bool(bool(false))))))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) || false))))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], float(mat3x4(injectionSwitch[0], _GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, clamp(0.0, _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(-8.3) : 0.0)), 0.0)), 0.0, 0.0)), 1.0, 0.0, _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-2.0))), 1.0, 1.0, 1.0, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-60.69)), float(0.0), bool(true))), 1.0, 0.0, 0.0))), injectionSwitch[1])).y, bool(_GLF_IDENTITY(bvec3(injectionSwitch.x > injectionSwitch.y, true, true), _GLF_IDENTITY(bvec3(bvec4(bvec3(injectionSwitch.x > injectionSwitch.y, true, true), _GLF_IDENTITY(true, ! (! (true))))), bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec4(bvec3(injectionSwitch.x > injectionSwitch.y, true, true), true)), bvec3(bvec4(bvec3(bvec4(bvec3(injectionSwitch.x > injectionSwitch.y, true, true), true)), true)))))))))), false || ((_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], float(mat3x4(injectionSwitch[0], _GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, clamp(0.0, _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(-8.3) : 0.0)), 0.0)), 0.0, 0.0)), 1.0, 0.0, _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-2.0))), 1.0, 1.0, 1.0, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-60.69)), float(0.0), bool(true))), 1.0, 0.0, 0.0))), injectionSwitch[1])).y, bool(_GLF_IDENTITY(bvec3(injectionSwitch.x > injectionSwitch.y, true, true), _GLF_IDENTITY(bvec3(bvec4(bvec3(injectionSwitch.x > injectionSwitch.y, true, _GLF_IDENTITY(true, bool(bvec2(true, false)))), _GLF_IDENTITY(true, ! (! (true))))), bvec3(bvec3(bvec3(bvec4(bvec3(injectionSwitch.x > injectionSwitch.y, true, true), true)))))))))))), ! (! (_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)), injectionSwitch))))) / exp(vec2(0.0, 0.0))).x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((false ? _GLF_FUZZED(_GLF_IDENTITY(unpackUnorm2x16(num_workgroup), (unpackUnorm2x16(num_workgroup)) + vec2(0.0, 0.0))) : injectionSwitch), vec2(mat3((false ? _GLF_FUZZED(_GLF_IDENTITY(unpackUnorm2x16(num_workgroup), (unpackUnorm2x16(num_workgroup)) + vec2(0.0, 0.0))) : injectionSwitch), 0.0, sqrt(1.0), 0.0, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), 0.0, 0.0, 0.0)))).y, bool(_GLF_IDENTITY(bvec3(injectionSwitch.x > injectionSwitch.y, true, true), bvec3(bvec3(_GLF_IDENTITY(bvec3(injectionSwitch.x > injectionSwitch.y, true, true), bvec3(_GLF_IDENTITY(bvec3(bvec3(injectionSwitch.x > injectionSwitch.y, true, true)), bvec3(bvec3(bvec3(bvec3(injectionSwitch.x > injectionSwitch.y, true, true))))))))))))), bool(_GLF_IDENTITY(bvec2((_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), injectionSwitch)).y, bool(_GLF_IDENTITY(bvec3(injectionSwitch.x > injectionSwitch.y, true, true), bvec3(bvec3(bvec3(injectionSwitch.x > injectionSwitch.y, true, true))))))), false), bvec2(bvec2(_GLF_IDENTITY(bvec2((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y)), bool(_GLF_IDENTITY(bvec3(injectionSwitch.x > injectionSwitch.y, true, true), bvec3(bvec3(bvec3(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(mat2x3(injectionSwitch, _GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0)), dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0))), 0.0, sqrt(0.0), 0.0))).y, true, true))))))), _GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(false, bool(bvec3(false, false, true))), true)), ! (_GLF_IDENTITY(! (bool(bvec2(_GLF_IDENTITY(false, bool(bvec3(false, false, true))), true))), _GLF_IDENTITY(true && (! (bool(bvec2(_GLF_IDENTITY(false, bool(bvec3(false, false, true))), true)))), ! (_GLF_IDENTITY(! (true && (! (bool(bvec2(_GLF_IDENTITY(false, bool(bvec3(false, false, true))), true))))), ! (! (! (true && (! (bool(bvec2(_GLF_IDENTITY(false, bool(bvec3(false, false, true))), true))))))))))))), bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(false, bool(bvec3(false, false, true))), _GLF_IDENTITY(true, (true) || false))), ! _GLF_IDENTITY((_GLF_IDENTITY(! (bool(bvec2(_GLF_IDENTITY(false, bool(bvec3(false, false, true))), true))), _GLF_IDENTITY(true && (! (bool(bvec2(_GLF_IDENTITY(false, bool(bvec3(false, false, true))), true)))), (true && (! (bool(bvec2(_GLF_IDENTITY(false, bool(bvec3(false, false, true))), true))))) || false))), ! (! (_GLF_IDENTITY((_GLF_IDENTITY(! (bool(bvec2(_GLF_IDENTITY(false, bool(bvec3(false, false, true))), true))), true && (! (bool(bvec2(_GLF_IDENTITY(false, bool(bvec3(false, false, true))), true)))))), false || ((_GLF_IDENTITY(! (bool(bvec2(_GLF_IDENTITY(false, bool(bvec3(false, false, true))), true))), true && (! (bool(bvec2(_GLF_IDENTITY(false, bool(bvec3(false, false, true))), true)))))))))))), false || (_GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(false, bool(bvec3(false, _GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, bool(bvec4(false, false, false, false)))), ! (! (bool(_GLF_IDENTITY(false, bool(bvec4(false, false, false, false))))))))), true))), true)), _GLF_IDENTITY(! (_GLF_IDENTITY(! (bool(bvec2(_GLF_IDENTITY(false, bool(bvec3(false, false, true))), true))), true && (! (bool(bvec2(_GLF_IDENTITY(false, bool(bvec3(false, false, true))), true)))))), ! (! (! (_GLF_IDENTITY(! (bool(bvec2(_GLF_IDENTITY(false, bool(bvec3(false, false, true))), true))), true && (! (bool(bvec2(_GLF_IDENTITY(false, bool(bvec3(false, false, true))), true)))))))))))), true, false, false))))), _GLF_IDENTITY(bvec2(bvec4(_GLF_IDENTITY(bvec2((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x > injectionSwitch.y, false || (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + _GLF_IDENTITY((injectionSwitch), ((injectionSwitch)) / vec2(1.0, 1.0)))) * vec2(1.0, 1.0)).y)), bool(_GLF_IDENTITY(bvec3(injectionSwitch.x > injectionSwitch.y, true, true), bvec3(bvec3(bvec3(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x > _GLF_IDENTITY(injectionSwitch, vec2(mat2x3(injectionSwitch, _GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0)), dot(vec3(0.0, 1.0, 0.0), vec3(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(5543.4440)), bool(false))), 1.0, 0.0))), 0.0, sqrt(0.0), 0.0))).y, true, true))))))), _GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(false, bool(bvec3(false, false, true))), true)), ! (_GLF_IDENTITY(! (bool(bvec2(_GLF_IDENTITY(false, bool(bvec3(false, false, true))), true))), true && (! (bool(bvec2(_GLF_IDENTITY(false, bool(bvec3(false, false, true))), true))))))), ! (! (_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, bool(bvec3(false, false, true))), true), _GLF_IDENTITY(bvec2(_GLF_IDENTITY(bvec2(bvec2(_GLF_IDENTITY(false, bool(bvec3(false, false, true))), true)), bvec2(bvec4(bvec2(bvec2(_GLF_IDENTITY(false, bool(bvec3(false, false, true))), true)), false, true)))), bvec2(bvec4(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(bvec2(bvec2(_GLF_IDENTITY(false, bool(bvec3(false, false, true))), true)), bvec2(bvec4(bvec2(bvec2(_GLF_IDENTITY(false, bool(bvec3(false, false, true))), true)), false, true)))), bvec2(bvec3(bvec2(_GLF_IDENTITY(bvec2(bvec2(_GLF_IDENTITY(false, bool(bvec3(false, false, true))), true)), bvec2(bvec4(bvec2(bvec2(_GLF_IDENTITY(false, bool(bvec3(false, false, true))), true)), false, true)))), true))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), ! (_GLF_IDENTITY(! (bool(bvec2(_GLF_IDENTITY(false, bool(bvec3(false, false, true))), true))), true && (! _GLF_IDENTITY((bool(bvec2(_GLF_IDENTITY(false, bool(bvec3(false, false, true))), true))), (_GLF_IDENTITY((bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec3(false, false, true))), ! (! (_GLF_IDENTITY(false, bool(bvec3(false, false, true)))))), true))), ((bool(bvec2(_GLF_IDENTITY(false, bool(bvec3(false, false, true))), true)))) || false)) || false)))))))), bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(false, bool(bvec3(false, false, true))), true)), ! (_GLF_IDENTITY(! (bool(bvec2(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(false, (false) || false), false, true)), true && (bool(bvec3(_GLF_IDENTITY(false, (false) || false), false, true))))), true))), true && (! (bool(bvec2(_GLF_IDENTITY(false, bool(bvec3(false, false, true))), true))))))), false || (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(false, bool(bvec3(false, false, true))), true)), ! (_GLF_IDENTITY(! (bool(bvec2(_GLF_IDENTITY(false, bool(bvec3(false, false, true))), true))), true && (! (bool(bvec2(_GLF_IDENTITY(false, bool(bvec3(false, false, true))), true))))))), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(false, bool(bvec3(false, false, true))), true)), ! (_GLF_IDENTITY(! (bool(bvec2(_GLF_IDENTITY(false, bool(bvec3(false, false, true))), true))), true && (! (bool(bvec2(_GLF_IDENTITY(false, bool(bvec3(false, false, true))), true))))))), true, true), _GLF_IDENTITY(bvec3(bvec3(bvec3(_GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(false, bool(bvec3(false, false, true))), true)), ! (_GLF_IDENTITY(! (bool(bvec2(_GLF_IDENTITY(false, bool(bvec3(false, false, true))), true))), true && (! (bool(bvec2(_GLF_IDENTITY(false, bool(bvec3(false, false, true))), true))))))), true, true))), bvec3(bvec4(bvec3(bvec3(bvec3(_GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(false, bool(bvec3(false, false, true))), true)), ! (_GLF_IDENTITY(! (bool(bvec2(_GLF_IDENTITY(false, bool(bvec3(false, false, true))), true))), true && (! (bool(bvec2(_GLF_IDENTITY(false, bool(bvec3(false, false, true))), true))))))), true, true))), true)))))), (_GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(false, bool(bvec3(false, false, true))), true)), ! (_GLF_IDENTITY(_GLF_IDENTITY(! (bool(bvec2(_GLF_IDENTITY(false, bool(bvec3(false, false, true))), true))), true && (! (bool(bvec2(_GLF_IDENTITY(false, bool(bvec3(false, false, true))), true))))), (_GLF_IDENTITY(_GLF_IDENTITY(! (bool(bvec2(_GLF_IDENTITY(false, bool(bvec3(false, false, true))), true))), true && (! (bool(bvec2(_GLF_IDENTITY(false, bool(bvec3(false, false, true))), true))))), bool(bvec4(_GLF_IDENTITY(! (bool(bvec2(_GLF_IDENTITY(false, bool(bvec3(false, false, true))), true))), true && (! (bool(bvec2(_GLF_IDENTITY(false, bool(bvec3(false, false, true))), true))))), true, false, true)))) || false)))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), true, false, false))))), bvec2(bvec3(bvec2((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y)), bool(_GLF_IDENTITY(bvec3(injectionSwitch.x > injectionSwitch.y, true, _GLF_IDENTITY(true, false || (true))), bvec3(bvec3(bvec3(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(mat2x3(injectionSwitch, _GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0)), dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, _GLF_IDENTITY(0.0, max(0.0, 0.0))))), 0.0, sqrt(0.0), 0.0))).y, true, true))))))), _GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(false, bool(bvec3(false, false, true))), true)), ! (_GLF_IDENTITY(! (bool(bvec2(_GLF_IDENTITY(false, bool(bvec3(false, false, true))), true))), true && (! (_GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(false, bool(bvec3(false, _GLF_IDENTITY(false, (false) && true), true))), true)), (bool(bvec2(_GLF_IDENTITY(false, bool(bvec3(false, _GLF_IDENTITY(false, (false) && true), true))), true))) || false)))))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(false, bool(bvec3(false, false, true))), true)), ! (_GLF_IDENTITY(! _GLF_IDENTITY((bool(bvec2(_GLF_IDENTITY(false, bool(bvec3(false, false, true))), true))), ! (! ((bool(bvec2(_GLF_IDENTITY(false, bool(bvec3(false, false, true))), true)))))), true && (! (bool(bvec2(_GLF_IDENTITY(false, bool(bvec3(false, false, true))), true))))))), (_GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(false, bool(bvec3(false, false, true))), true)), ! (_GLF_IDENTITY(! (bool(bvec2(_GLF_IDENTITY(false, bool(bvec3(false, false, true))), true))), true && (! (bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), bool(bvec3(false, false, true))), true)))))))) && true)))), bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(false, bool(bvec3(false, false, true))), true)), ! (_GLF_IDENTITY(! (bool(bvec2(_GLF_IDENTITY(false, bool(bvec3(false, _GLF_IDENTITY(false, ! (! (false))), true))), true))), true && (! (bool(bvec2(_GLF_IDENTITY(false, bool(bvec3(false, false, true))), true))))))), _GLF_IDENTITY(false, bool(bvec4(false, false, false, true))) || (_GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, false, true)), bool(bool(bool(_GLF_IDENTITY(bvec3(false, false, true), bvec3(bvec4(bvec3(false, false, true), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))), true)), ! (_GLF_IDENTITY(! (bool(bvec2(_GLF_IDENTITY(false, bool(bvec3(false, false, true))), true))), true && (! (bool(bvec2(_GLF_IDENTITY(false, bool(bvec3(false, _GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) || false)) && true), true))), true))))))))), true, false, false))))), false))), false, false)), bvec2(bvec3(bvec2(bvec4(_GLF_IDENTITY(bvec2((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y)), bool(_GLF_IDENTITY(bvec3(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, float(vec4(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0), 1.0, 0.0, 1.0))))), true, true), bvec3(bvec3(bvec3(injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(mat2x3(injectionSwitch, _GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), _GLF_IDENTITY(vec3(0.0, 1.0, 0.0), _GLF_IDENTITY(vec3(_GLF_IDENTITY(mat3x4(vec3(0.0, 1.0, 0.0), 0.0, 0.0, 1.0, 1.0, 1.0, sqrt(1.0), 1.0, 1.0, 1.0), _GLF_IDENTITY(mat3x4(mat4(mat3x4(vec3(0.0, 1.0, 0.0), 0.0, _GLF_IDENTITY(0.0, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(-24.03) : _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)))), 1.0, 1.0, 1.0, sqrt(1.0), 1.0, 1.0, 1.0))), transpose(transpose(mat3x4(mat4(mat3x4(vec3(0.0, 1.0, 0.0), 0.0, 0.0, 1.0, 1.0, 1.0, sqrt(1.0), 1.0, 1.0, 1.0)))))))), (vec3(_GLF_IDENTITY(mat3x4(vec3(0.0, _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), 0.0), 0.0, 0.0, 1.0, 1.0, 1.0, sqrt(1.0), 1.0, 1.0, 1.0), _GLF_IDENTITY(mat3x4(mat4(mat3x4(vec3(0.0, 1.0, 0.0), 0.0, 0.0, 1.0, 1.0, 1.0, sqrt(1.0), 1.0, 1.0, 1.0))), transpose(transpose(mat3x4(mat4(mat3x4(vec3(0.0, 1.0, 0.0), 0.0, 0.0, 1.0, 1.0, 1.0, sqrt(1.0), 1.0, 1.0, 1.0))))))))) * mat3(_GLF_ONE(1.0, injectionSwitch.y))))), dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0))), 0.0, sqrt(0.0), 0.0))), (false ? _GLF_FUZZED(_GLF_IDENTITY(vec2(8.1, 750.439), (_GLF_IDENTITY(vec2(8.1, 750.439), max(_GLF_IDENTITY(vec2(8.1, 750.439), max(vec2(8.1, 750.439), vec2(8.1, 750.439))), vec2(8.1, 750.439)))) + vec2(0.0, 0.0))) : _GLF_IDENTITY(injectionSwitch, vec2(mat2x3(injectionSwitch, _GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), _GLF_IDENTITY(vec3(0.0, 1.0, 0.0), _GLF_IDENTITY(vec3(_GLF_IDENTITY(mat3x4(vec3(0.0, 1.0, 0.0), 0.0, 0.0, 1.0, 1.0, 1.0, sqrt(1.0), 1.0, 1.0, 1.0), _GLF_IDENTITY(mat3x4(mat4(mat3x4(vec3(0.0, 1.0, 0.0), 0.0, 0.0, 1.0, 1.0, 1.0, sqrt(1.0), 1.0, 1.0, 1.0))), transpose(transpose(mat3x4(mat4(mat3x4(vec3(0.0, 1.0, 0.0), 0.0, 0.0, 1.0, 1.0, 1.0, sqrt(1.0), 1.0, 1.0, 1.0)))))))), (vec3(_GLF_IDENTITY(mat3x4(vec3(0.0, 1.0, 0.0), 0.0, 0.0, 1.0, 1.0, 1.0, sqrt(1.0), 1.0, 1.0, 1.0), _GLF_IDENTITY(mat3x4(mat4(mat3x4(vec3(0.0, 1.0, 0.0), 0.0, 0.0, 1.0, 1.0, 1.0, sqrt(1.0), 1.0, 1.0, 1.0))), transpose(transpose(mat3x4(mat4(mat3x4(vec3(0.0, 1.0, 0.0), 0.0, 0.0, 1.0, 1.0, 1.0, sqrt(_GLF_IDENTITY(1.0, (1.0) - 0.0)), 1.0, 1.0, 1.0))))))))) * mat3(_GLF_ONE(1.0, injectionSwitch.y))))), dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0))), 0.0, sqrt(0.0), 0.0))))).y, true, true))))))), _GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(false, bool(bvec3(false, false, true))), _GLF_IDENTITY(true, bool(bool(true))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(false, bool(bvec3(false, false, true))), _GLF_IDENTITY(true, bool(bool(true))))), false || (bool(bvec2(_GLF_IDENTITY(false, bool(bvec3(false, false, true))), _GLF_IDENTITY(true, bool(bool(true)))))))), true && (! (_GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(false, bool(bvec3(false, false, true))), _GLF_IDENTITY(true, bool(bool(true))))), false || (bool(bvec2(_GLF_IDENTITY(false, bool(bvec3(false, false, true))), _GLF_IDENTITY(true, bool(bool(true)))))))))))), ! (_GLF_IDENTITY(! _GLF_IDENTITY((bool(bvec2(_GLF_IDENTITY(false, bool(bvec3(false, false, true))), true))), ! _GLF_IDENTITY((! ((bool(bvec2(_GLF_IDENTITY(false, bool(bvec3(false, false, true))), true))))), bool(bvec4(_GLF_IDENTITY((! ((bool(bvec2(_GLF_IDENTITY(false, bool(bvec3(false, false, true))), true))))), ((! ((bool(bvec2(_GLF_IDENTITY(false, bool(bvec3(false, false, true))), true)))))) || false), false, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), _GLF_IDENTITY(true && (! (bool(bvec2(_GLF_IDENTITY(false, bool(bvec3(false, false, true))), true)))), (true && (! (bool(bvec2(_GLF_IDENTITY(false, bool(bvec3(false, _GLF_IDENTITY(false, ! (! (false))), true))), true))))) && true)))), bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(false, bool(bvec3(false, false, true))), true)), ! (_GLF_IDENTITY(! (bool(bvec2(_GLF_IDENTITY(false, bool(bvec3(false, false, true))), true))), true && (! (bool(bvec2(_GLF_IDENTITY(false, bool(bvec3(false, false, true))), true))))))), false || (_GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, false, true), _GLF_IDENTITY(bvec3(bvec4(bvec3(false, false, true), false)), bvec3(bvec4(bvec3(bvec4(bvec3(false, false, true), _GLF_IDENTITY(false, bool(bvec2(false, false))))), true)))))), true)), ! (_GLF_IDENTITY(! _GLF_IDENTITY((bool(bvec2(_GLF_IDENTITY(false, bool(bvec3(false, false, true))), true))), ! (! ((bool(bvec2(_GLF_IDENTITY(false, bool(bvec3(false, false, true))), true)))))), true && (! (bool(bvec2(_GLF_IDENTITY(false, bool(bvec3(false, false, true))), true))))))))), true, false, false))))), bvec2(bvec3(bvec2((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).y, false || (injectionSwitch.x > injectionSwitch.y)), bool(_GLF_IDENTITY(bvec3(injectionSwitch.x > injectionSwitch.y, true, true), bvec3(bvec3(bvec3(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(vec4(injectionSwitch, 1.0, abs(0.0)), (vec4(injectionSwitch, 1.0, abs(0.0))) * mat4(1.0)))).x > _GLF_IDENTITY(injectionSwitch, vec2(mat2x3(injectionSwitch, _GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0)), dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0))), 0.0, sqrt(0.0), 0.0))).y, true, true))))))), _GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(false, bool(bvec3(false, false, true))), true)), ! (_GLF_IDENTITY(! (bool(bvec2(_GLF_IDENTITY(false, bool(bvec3(false, false, true))), true))), _GLF_IDENTITY(true && (! (bool(bvec2(_GLF_IDENTITY(false, bool(bvec3(false, false, true))), true)))), false || (true && (! (bool(bvec2(_GLF_IDENTITY(false, bool(bvec3(false, false, true))), true))))))))), bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(false, bool(bvec3(false, false, _GLF_IDENTITY(true, (_GLF_IDENTITY(true, ! (! (true)))) && true)))), true)), ! (_GLF_IDENTITY(! (bool(bvec2(_GLF_IDENTITY(false, bool(bvec3(false, false, true))), true))), true && (! (bool(bvec2(_GLF_IDENTITY(false, bool(bvec3(false, false, true))), true))))))), false || (_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(false, bool(bvec3(false, false, true))), true)), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec3(false, false, true))), (_GLF_IDENTITY(false, bool(bvec3(false, false, true)))) || false), true)), false), bvec2(bvec4(bvec2(bool(bvec2(_GLF_IDENTITY(false, bool(bvec3(false, false, true))), true)), false), true, false)))), ! (! (bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(false, bool(bvec3(false, false, true))), true)), ! (_GLF_IDENTITY(! (bool(bvec2(_GLF_IDENTITY(false, bool(bvec3(false, false, true))), true))), bool(_GLF_IDENTITY(bvec3(! (bool(bvec2(_GLF_IDENTITY(false, bool(bvec3(false, false, true))), true))), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bvec3(bvec3(bvec3(! (bool(bvec2(_GLF_IDENTITY(false, bool(bvec3(false, false, true))), true))), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))))), false), bvec2(bvec4(bvec2(bool(bvec2(_GLF_IDENTITY(false, bool(bvec3(false, false, true))), true)), false), true, false)))))))), ! (_GLF_IDENTITY(! (bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, bool(bvec3(false, false, true))), true), bvec2(bvec2(bvec2(_GLF_IDENTITY(false, bool(bvec3(false, false, true))), true)))))), true && (! (bool(bvec2(_GLF_IDENTITY(false, bool(bvec3(false, _GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec2(false, true)))) && true), false, false)), true && (bool(bvec3(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec2(false, true)))) && true), false, false))))), true))), true))))))))), true, _GLF_IDENTITY(false, (false) && true), false))))), false))), false, false)), false)))))))))))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x > injectionSwitch.y))))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, false || (false)), (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint workgroup_id = gl_WorkGroupID.x;
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, true)))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).y))))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), false || (! (false)))))), ! (_GLF_IDENTITY(! (_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), false || (! (false))))), true && (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), false || (! (false))))))))), ! (! (! (_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), false || (! (false))))), _GLF_IDENTITY(true, ! (! (true))) && (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, (false) && true)))), ! _GLF_IDENTITY((_GLF_IDENTITY(! (false), false || (! (false)))), _GLF_IDENTITY(bool(bool((_GLF_IDENTITY(! (false), false || (! (false)))))), (bool(bool((_GLF_IDENTITY(! (false), false || (! (false))))))) || false)))))))))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 uint workgroup_base = _GLF_IDENTITY(_GLF_IDENTITY(workgroup_size, clamp(workgroup_size, workgroup_size, workgroup_size)), uint(_GLF_ZERO(0.0, injectionSwitch.x)) + (_GLF_IDENTITY(workgroup_size, clamp(workgroup_size, workgroup_size, workgroup_size)))) * workgroup_id;
 uint virtual_gid = _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, clamp(workgroup_base, workgroup_base, workgroup_base)) + _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (subgroup_id) - 0u), 0u ^ _GLF_IDENTITY((_GLF_IDENTITY(subgroup_id, (subgroup_id) - 0u)), (true ? (_GLF_IDENTITY(subgroup_id, (subgroup_id) - 0u)) : _GLF_FUZZED(subgroup_id)))), 0u + (_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY(_GLF_IDENTITY((subgroup_id), _GLF_IDENTITY((_GLF_IDENTITY((subgroup_id), ~ (~ ((subgroup_id))))), 0u + ((_GLF_IDENTITY((subgroup_id), ~ (~ ((subgroup_id))))))) | ((subgroup_id))), (_GLF_IDENTITY((subgroup_id), _GLF_IDENTITY((_GLF_IDENTITY((subgroup_id), ~ (~ ((subgroup_id))))) | ((subgroup_id)), ((_GLF_IDENTITY((subgroup_id), ~ (~ ((subgroup_id))))) | ((subgroup_id))) | ((_GLF_IDENTITY((subgroup_id), ~ (~ ((subgroup_id))))) | ((subgroup_id)))))) | uint(_GLF_ZERO(0.0, injectionSwitch.x))) - 0u))) * subgroup_size, _GLF_IDENTITY((workgroup_base + subgroup_id * subgroup_size), _GLF_IDENTITY(((workgroup_base + subgroup_id * subgroup_size)), (((workgroup_base + subgroup_id * subgroup_size))) | (((workgroup_base + subgroup_id * subgroup_size)))) | 0u) >> _GLF_IDENTITY(uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(53.00) : injectionSwitch.x)))), (uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(53.00) : injectionSwitch.x))))) | 0u)), max(workgroup_base + subgroup_id * _GLF_IDENTITY(subgroup_size, uint(_GLF_ZERO(0.0, injectionSwitch.x)) + (subgroup_size)), _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (workgroup_base) - (0u | 0u)) + subgroup_id * subgroup_size, (workgroup_base + subgroup_id * _GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size)))) ^ _GLF_IDENTITY(0u, 0u ^ (0u))))) + _GLF_IDENTITY(subgroup_local_id, min(subgroup_local_id, subgroup_local_id));
 atomicStore(write_val, uint(virtual_gid), 4, 64, 0);
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))) + _GLF_IDENTITY(vec2(0.0, 0.0), (false ? _GLF_FUZZED(vec2(40.93, 8.2)) : vec2(0.0, 0.0)))).y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), ! (_GLF_IDENTITY(! (! (injectionSwitch.x > injectionSwitch.y)), true && (! (! (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true)) || _GLF_IDENTITY(false, bool(bvec3(false, false, false))))))))))))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY((false) || false, ! (! ((false) || false))))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     barrier();
    }
   barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY((_GLF_DEAD(false)) || false, bool(bvec4((_GLF_DEAD(false)) || false, true, true, true)))))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(false, true, false, false))), false || (false))))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(false), bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(_GLF_DEAD(false), true), bvec2(bvec2(_GLF_IDENTITY(bvec2(_GLF_DEAD(false), true), _GLF_IDENTITY(bvec2(bvec4(bvec2(_GLF_DEAD(false), true), true, true)), bvec2(bvec4(bvec2(bvec4(bvec2(_GLF_DEAD(false), true), true, true)), true, false))))))), bvec2(bvec3(bvec2(_GLF_DEAD(false), true), true))))), true, false, true))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(mat3x2(injectionSwitch, sin(0.0), 0.0, 0.0, 0.0))).y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, true && (false)), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(mat3(injectionSwitch, 0.0, 1.0, 0.0, 0.0, log(1.0), length(0.0), 1.0))).y))))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           barrier();
          }
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
         if(_GLF_DEAD(false))
          barrier();
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY((injectionSwitch.x) + 0.0, (false ? _GLF_FUZZED(exp(438.223)) : (injectionSwitch.x) + 0.0))) > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY((injectionSwitch.x) + 0.0, (false ? _GLF_FUZZED(exp(438.223)) : (injectionSwitch.x) + 0.0))) > injectionSwitch.y)))))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 uint read_val = atomicLoad(write_val, _GLF_IDENTITY(_GLF_IDENTITY(4, _GLF_IDENTITY(clamp(4, _GLF_IDENTITY(_GLF_IDENTITY(4, min(4, _GLF_IDENTITY(_GLF_IDENTITY(4, (4) | (4)), (_GLF_IDENTITY(4, (4) | (4))) ^ 0))), (_GLF_IDENTITY(_GLF_IDENTITY(4, min(4, 4)), clamp(_GLF_IDENTITY(4, _GLF_IDENTITY(min(4, _GLF_IDENTITY(4, (false ? _GLF_FUZZED(_GLF_IDENTITY(-10805, int(_GLF_IDENTITY(ivec2(-10805, (0 ^ 1)), (false ? _GLF_FUZZED(_GLF_IDENTITY(ivec2(54775, -75294), _GLF_IDENTITY((ivec2(54775, -75294)), (_GLF_IDENTITY((ivec2(54775, -75294)), ((ivec2(54775, -75294))) / ivec2(1, 1))) | ivec2(0, 0)) << ivec2(0, 0))) : ivec2(-10805, (_GLF_IDENTITY(0, ~ (~ (0))) ^ 1))))))) : 4))), min(min(4, 4), _GLF_IDENTITY(min(4, 4), _GLF_IDENTITY(0, (0) * 1) ^ _GLF_IDENTITY((min(4, 4)), ~ (~ (_GLF_IDENTITY((min(_GLF_IDENTITY(_GLF_IDENTITY(4, ~ (~ (4))), (4) | (4)), 4)), _GLF_IDENTITY(max(_GLF_IDENTITY((min(4, 4)), ((min(4, 4))) | ((min(4, 4)))), (min(4, 4))), (_GLF_IDENTITY(max(_GLF_IDENTITY((min(4, 4)), ((min(4, 4))) | ((min(4, 4)))), (min(4, 4))), (max(_GLF_IDENTITY((min(4, 4)), ((min(4, 4))) | ((min(4, 4)))), (min(4, 4)))) | (_GLF_IDENTITY(max(_GLF_IDENTITY((min(4, 4)), ((min(4, 4))) | ((min(4, 4)))), (min(4, 4))), (true ? max(_GLF_IDENTITY((min(4, 4)), ((min(4, 4))) | ((min(4, 4)))), (min(4, 4))) : _GLF_FUZZED(-1806)))))) / ((1 << _GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), (int(3)) | (int(3))))) >> _GLF_IDENTITY(_GLF_IDENTITY(int(3), 0 | (int(3))), int(3)))))))))))), _GLF_IDENTITY(4, min(4, 4)), _GLF_IDENTITY(4, min(4, 4))))) | (_GLF_IDENTITY(4, min(4, 4)))), 4), (clamp(4, _GLF_IDENTITY(_GLF_IDENTITY(4, min(4, _GLF_IDENTITY(4, (4) | (4)))), (_GLF_IDENTITY(_GLF_IDENTITY(4, min(4, 4)), clamp(_GLF_IDENTITY(4, _GLF_IDENTITY(min(4, _GLF_IDENTITY(4, (false ? _GLF_FUZZED(_GLF_IDENTITY(-10805, int(_GLF_IDENTITY(ivec2(-10805, (0 ^ 1)), (false ? _GLF_FUZZED(_GLF_IDENTITY(ivec2(54775, -75294), (ivec2(54775, -75294)) << ivec2(0, 0))) : ivec2(-10805, (0 ^ 1))))))) : 4))), min(min(4, 4), _GLF_IDENTITY(min(4, 4), _GLF_IDENTITY(0, (0) * 1) ^ _GLF_IDENTITY((min(4, 4)), ~ (~ (_GLF_IDENTITY((min(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(4, ~ (~ (4))), (4) | (4)), min(_GLF_IDENTITY(_GLF_IDENTITY(4, ~ (~ (4))), (4) | (4)), _GLF_IDENTITY(_GLF_IDENTITY(4, ~ (~ (4))), (4) | (4)))), 4)), max(_GLF_IDENTITY((min(4, 4)), (_GLF_IDENTITY((min(4, 4)), (_GLF_IDENTITY((min(4, 4)), ((min(4, 4))) ^ 0)) ^ (0 << _GLF_IDENTITY(int(5), int(5))))) | ((min(4, 4)))), (min(4, 4))))))))))), _GLF_IDENTITY(4, min(4, 4)), _GLF_IDENTITY(_GLF_IDENTITY(4, (_GLF_IDENTITY(4, max(_GLF_IDENTITY(4, (4) << 0), 4))) >> 0), min(4, 4))))) | (_GLF_IDENTITY(4, min(4, 4)))), 4)) | (_GLF_IDENTITY(clamp(4, _GLF_IDENTITY(_GLF_IDENTITY(4, min(4, _GLF_IDENTITY(4, (4) | (4)))), (_GLF_IDENTITY(_GLF_IDENTITY(4, min(4, 4)), clamp(_GLF_IDENTITY(4, _GLF_IDENTITY(min(4, _GLF_IDENTITY(4, (false ? _GLF_FUZZED(_GLF_IDENTITY(-10805, int(_GLF_IDENTITY(ivec2(-10805, (0 ^ 1)), _GLF_IDENTITY((false ? _GLF_FUZZED(_GLF_IDENTITY(_GLF_IDENTITY(ivec2(54775, -75294), (ivec2(54775, -75294)) << ivec2(0, 0)), (_GLF_IDENTITY(_GLF_IDENTITY(ivec2(54775, -75294), (ivec2(54775, -75294)) << ivec2(0, 0)), (_GLF_IDENTITY(ivec2(54775, -75294), (ivec2(54775, -75294)) << ivec2(0, 0))) ^ ivec2(0, 0))) | (_GLF_IDENTITY(ivec2(54775, -75294), (ivec2(54775, -75294)) << ivec2(0, 0))))) : ivec2(-10805, (0 ^ 1))), min((false ? _GLF_FUZZED(_GLF_IDENTITY(_GLF_IDENTITY(ivec2(54775, -75294), (ivec2(54775, -75294)) << ivec2(0, 0)), (_GLF_IDENTITY(_GLF_IDENTITY(ivec2(54775, -75294), (ivec2(54775, -75294)) << ivec2(0, 0)), (_GLF_IDENTITY(ivec2(54775, -75294), (ivec2(54775, -75294)) << ivec2(0, 0))) ^ ivec2(0, 0))) | (_GLF_IDENTITY(ivec2(54775, -75294), (ivec2(54775, -75294)) << ivec2(0, 0))))) : ivec2(-10805, (0 ^ 1))), (false ? _GLF_FUZZED(_GLF_IDENTITY(_GLF_IDENTITY(ivec2(54775, -75294), (ivec2(54775, -75294)) << ivec2(0, 0)), (_GLF_IDENTITY(_GLF_IDENTITY(ivec2(54775, -75294), (ivec2(54775, -75294)) << ivec2(0, 0)), (_GLF_IDENTITY(ivec2(54775, -75294), (ivec2(54775, -75294)) << ivec2(0, 0))) ^ ivec2(0, 0))) | (_GLF_IDENTITY(ivec2(54775, -75294), (ivec2(54775, -75294)) << ivec2(0, 0))))) : ivec2(-10805, (0 ^ 1))))))))) : 4))), min(min(4, 4), _GLF_IDENTITY(_GLF_IDENTITY(min(4, 4), (_GLF_IDENTITY(_GLF_IDENTITY(min(4, 4), (min(4, 4)) | (min(4, 4))), clamp(min(4, 4), min(4, 4), min(4, 4)))) >> 0), _GLF_IDENTITY(0, (0) * 1) ^ _GLF_IDENTITY((min(4, 4)), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY((min(_GLF_IDENTITY(_GLF_IDENTITY(4, ~ (~ (4))), (4) | (4)), 4)), max(_GLF_IDENTITY((min(4, 4)), ((min(4, 4))) | ((min(4, 4)))), (min(4, 4))))), clamp(~ (_GLF_IDENTITY((min(_GLF_IDENTITY(_GLF_IDENTITY(4, ~ (~ (4))), (4) | (4)), 4)), max(_GLF_IDENTITY((min(4, 4)), ((min(4, 4))) | ((min(4, 4)))), (min(4, 4))))), ~ (_GLF_IDENTITY((min(_GLF_IDENTITY(_GLF_IDENTITY(4, ~ (~ (4))), (4) | (4)), 4)), max(_GLF_IDENTITY((min(4, 4)), ((min(4, 4))) | ((min(4, 4)))), (min(4, 4))))), ~ (_GLF_IDENTITY((min(_GLF_IDENTITY(_GLF_IDENTITY(4, ~ (~ (4))), (4) | (4)), 4)), max(_GLF_IDENTITY((min(4, 4)), ((min(4, 4))) | ((min(4, 4)))), (min(4, 4))))))))))))), _GLF_IDENTITY(4, min(4, 4)), _GLF_IDENTITY(_GLF_IDENTITY(4, (_GLF_IDENTITY(4, clamp(4, 4, 4))) + 0), _GLF_IDENTITY(min(4, 4), (min(4, 4)) ^ _GLF_IDENTITY(0, max(_GLF_IDENTITY(0, int(ivec3(0, 1, 0))), 0))))))) | (_GLF_IDENTITY(4, min(4, 4)))), 4), clamp(clamp(4, _GLF_IDENTITY(_GLF_IDENTITY(4, min(4, _GLF_IDENTITY(4, (4) | (4)))), (_GLF_IDENTITY(_GLF_IDENTITY(4, min(4, 4)), clamp(_GLF_IDENTITY(4, _GLF_IDENTITY(min(4, _GLF_IDENTITY(4, (false ? _GLF_FUZZED(_GLF_IDENTITY(-10805, int(_GLF_IDENTITY(ivec2(-10805, _GLF_IDENTITY((0 ^ 1), clamp((0 ^ 1), (0 ^ 1), (0 ^ 1)))), (false ? _GLF_FUZZED(_GLF_IDENTITY(ivec2(54775, -75294), (ivec2(54775, -75294)) << ivec2(0, 0))) : ivec2(-10805, (0 ^ 1))))))) : 4))), min(min(4, 4), _GLF_IDENTITY(min(4, 4), _GLF_IDENTITY(_GLF_IDENTITY(0, (0) * 1), clamp(_GLF_IDENTITY(0, (0) * 1), _GLF_IDENTITY(0, (0) * 1), _GLF_IDENTITY(0, (0) * 1))) ^ _GLF_IDENTITY((min(4, 4)), ~ (~ (_GLF_IDENTITY((min(_GLF_IDENTITY(_GLF_IDENTITY(4, ~ (~ (4))), (4) | (4)), 4)), max(_GLF_IDENTITY((min(4, 4)), ((min(4, 4))) | ((min(4, 4)))), (min(4, 4))))))))))), _GLF_IDENTITY(4, min(4, 4)), _GLF_IDENTITY(4, min(4, 4))))) | (_GLF_IDENTITY(4, min(4, 4)))), 4), _GLF_IDENTITY(_GLF_IDENTITY(clamp(4, _GLF_IDENTITY(_GLF_IDENTITY(4, min(4, _GLF_IDENTITY(4, (4) | (4)))), (_GLF_IDENTITY(_GLF_IDENTITY(4, min(4, 4)), clamp(_GLF_IDENTITY(4, _GLF_IDENTITY(min(4, _GLF_IDENTITY(4, (false ? _GLF_FUZZED(_GLF_IDENTITY(-10805, int(_GLF_IDENTITY(ivec2(-10805, (0 ^ 1)), (false ? _GLF_FUZZED(_GLF_IDENTITY(ivec2(54775, -75294), (ivec2(54775, -75294)) << ivec2(0, 0))) : ivec2(-10805, (0 ^ 1))))))) : 4))), min(min(4, 4), _GLF_IDENTITY(min(_GLF_IDENTITY(4, (true ? 4 : _GLF_FUZZED(-35521))), 4), _GLF_IDENTITY(0, (0) * 1) ^ _GLF_IDENTITY((min(4, 4)), ~ (~ (_GLF_IDENTITY((min(_GLF_IDENTITY(_GLF_IDENTITY(4, ~ (~ (4))), (4) | (4)), 4)), max(_GLF_IDENTITY((min(4, 4)), ((min(4, 4))) | ((min(4, 4)))), (min(4, 4))))))))))), _GLF_IDENTITY(4, min(4, 4)), _GLF_IDENTITY(4, min(4, 4))))) | (_GLF_IDENTITY(4, min(4, 4)))), 4), (clamp(4, _GLF_IDENTITY(_GLF_IDENTITY(4, min(4, _GLF_IDENTITY(4, (4) | (4)))), (_GLF_IDENTITY(_GLF_IDENTITY(4, min(4, 4)), clamp(_GLF_IDENTITY(4, _GLF_IDENTITY(min(4, _GLF_IDENTITY(4, (false ? _GLF_FUZZED(_GLF_IDENTITY(-10805, int(_GLF_IDENTITY(ivec2(-10805, (0 ^ 1)), (false ? _GLF_FUZZED(_GLF_IDENTITY(ivec2(54775, -75294), (ivec2(54775, -75294)) << ivec2(0, 0))) : ivec2(-10805, (0 ^ 1))))))) : 4))), min(min(4, 4), _GLF_IDENTITY(min(4, 4), _GLF_IDENTITY(0, (0) * 1) ^ _GLF_IDENTITY((min(4, 4)), ~ (~ (_GLF_IDENTITY((min(_GLF_IDENTITY(_GLF_IDENTITY(4, ~ (~ (4))), (4) | (4)), 4)), max(_GLF_IDENTITY((min(4, 4)), ((min(4, 4))) | ((min(4, 4)))), (min(4, 4))))))))))), _GLF_IDENTITY(4, min(4, 4)), _GLF_IDENTITY(4, _GLF_IDENTITY(min(4, 4), (true ? _GLF_IDENTITY(min(4, 4), (true ? min(4, 4) : _GLF_FUZZED(-29617))) : _GLF_FUZZED(-19362))))))) | (_GLF_IDENTITY(4, min(4, 4)))), 4)) >> 0), (_GLF_IDENTITY(_GLF_IDENTITY(clamp(4, _GLF_IDENTITY(_GLF_IDENTITY(4, min(4, _GLF_IDENTITY(4, (4) | (4)))), (_GLF_IDENTITY(_GLF_IDENTITY(4, min(4, 4)), clamp(_GLF_IDENTITY(4, _GLF_IDENTITY(min(4, _GLF_IDENTITY(4, (false ? _GLF_FUZZED(_GLF_IDENTITY(-10805, int(_GLF_IDENTITY(ivec2(-10805, (0 ^ 1)), (false ? _GLF_FUZZED(_GLF_IDENTITY(ivec2(54775, -75294), (ivec2(54775, -75294)) << ivec2(0, 0))) : ivec2(-10805, (0 ^ 1))))))) : 4))), min(min(4, 4), _GLF_IDENTITY(min(_GLF_IDENTITY(4, (true ? 4 : _GLF_FUZZED(-35521))), 4), _GLF_IDENTITY(0, (0) * 1) ^ _GLF_IDENTITY((min(4, 4)), ~ (~ (_GLF_IDENTITY((min(_GLF_IDENTITY(_GLF_IDENTITY(4, ~ (~ (4))), (4) | (4)), 4)), max(_GLF_IDENTITY((min(4, 4)), ((min(4, 4))) | ((min(4, 4)))), (min(4, 4))))))))))), _GLF_IDENTITY(4, min(4, 4)), _GLF_IDENTITY(4, min(4, 4))))) | (_GLF_IDENTITY(4, min(4, 4)))), 4), (clamp(4, _GLF_IDENTITY(_GLF_IDENTITY(4, min(4, _GLF_IDENTITY(4, (4) | (4)))), (_GLF_IDENTITY(_GLF_IDENTITY(4, min(4, 4)), clamp(_GLF_IDENTITY(4, _GLF_IDENTITY(min(4, _GLF_IDENTITY(4, (false ? _GLF_FUZZED(_GLF_IDENTITY(-10805, int(_GLF_IDENTITY(ivec2(-10805, (0 ^ 1)), (false ? _GLF_FUZZED(_GLF_IDENTITY(ivec2(54775, -75294), (ivec2(54775, -75294)) << ivec2(0, 0))) : ivec2(-10805, (0 ^ 1))))))) : 4))), min(min(4, 4), _GLF_IDENTITY(min(4, 4), _GLF_IDENTITY(0, (0) * 1) ^ _GLF_IDENTITY((min(4, 4)), ~ (~ (_GLF_IDENTITY((min(_GLF_IDENTITY(_GLF_IDENTITY(4, ~ (~ (4))), (4) | (4)), 4)), max(_GLF_IDENTITY((min(4, 4)), ((min(4, 4))) | ((min(4, 4)))), (min(4, 4))))))))))), _GLF_IDENTITY(4, min(4, 4)), _GLF_IDENTITY(4, _GLF_IDENTITY(min(4, 4), (true ? _GLF_IDENTITY(min(4, 4), (true ? min(4, 4) : _GLF_FUZZED(-29617))) : _GLF_FUZZED(-19362))))))) | (_GLF_IDENTITY(4, min(4, 4)))), 4)) >> 0), max(_GLF_IDENTITY(clamp(4, _GLF_IDENTITY(_GLF_IDENTITY(4, min(4, _GLF_IDENTITY(4, (4) | (4)))), (_GLF_IDENTITY(_GLF_IDENTITY(4, min(4, 4)), clamp(_GLF_IDENTITY(4, _GLF_IDENTITY(min(4, _GLF_IDENTITY(4, (false ? _GLF_FUZZED(_GLF_IDENTITY(-10805, int(_GLF_IDENTITY(ivec2(-10805, (0 ^ 1)), (false ? _GLF_FUZZED(_GLF_IDENTITY(ivec2(54775, -75294), (ivec2(54775, -75294)) << ivec2(0, 0))) : ivec2(-10805, (0 ^ 1))))))) : 4))), min(min(4, 4), _GLF_IDENTITY(min(_GLF_IDENTITY(4, (true ? 4 : _GLF_FUZZED(-35521))), 4), _GLF_IDENTITY(0, (0) * 1) ^ _GLF_IDENTITY((min(4, 4)), ~ (~ (_GLF_IDENTITY((min(_GLF_IDENTITY(_GLF_IDENTITY(4, ~ (~ (4))), (4) | (4)), 4)), max(_GLF_IDENTITY((min(4, 4)), ((min(4, 4))) | ((min(4, 4)))), (min(4, 4))))))))))), _GLF_IDENTITY(4, min(4, 4)), _GLF_IDENTITY(4, min(4, 4))))) | (_GLF_IDENTITY(4, min(4, 4)))), 4), (clamp(4, _GLF_IDENTITY(_GLF_IDENTITY(4, min(4, _GLF_IDENTITY(4, (4) | (4)))), (_GLF_IDENTITY(_GLF_IDENTITY(4, min(4, 4)), clamp(_GLF_IDENTITY(4, _GLF_IDENTITY(min(4, _GLF_IDENTITY(4, (false ? _GLF_FUZZED(_GLF_IDENTITY(-10805, int(_GLF_IDENTITY(ivec2(-10805, (0 ^ 1)), (false ? _GLF_FUZZED(_GLF_IDENTITY(ivec2(54775, -75294), (ivec2(54775, -75294)) << ivec2(0, 0))) : ivec2(-10805, (0 ^ 1))))))) : 4))), min(min(4, 4), _GLF_IDENTITY(min(4, 4), _GLF_IDENTITY(0, (0) * 1) ^ _GLF_IDENTITY((min(4, 4)), ~ (~ (_GLF_IDENTITY((min(_GLF_IDENTITY(_GLF_IDENTITY(4, ~ (~ (4))), (4) | (4)), 4)), max(_GLF_IDENTITY((min(4, 4)), ((min(4, 4))) | ((min(4, 4)))), (min(4, 4))))))))))), _GLF_IDENTITY(4, min(4, 4)), _GLF_IDENTITY(4, _GLF_IDENTITY(min(4, 4), (true ? _GLF_IDENTITY(min(4, 4), (true ? min(4, 4) : _GLF_FUZZED(-29617))) : _GLF_FUZZED(-19362))))))) | (_GLF_IDENTITY(4, min(4, 4)))), 4)) >> 0), _GLF_IDENTITY(clamp(4, _GLF_IDENTITY(_GLF_IDENTITY(4, min(4, _GLF_IDENTITY(4, (4) | (4)))), (_GLF_IDENTITY(_GLF_IDENTITY(4, min(4, 4)), clamp(_GLF_IDENTITY(4, _GLF_IDENTITY(min(4, _GLF_IDENTITY(4, (false ? _GLF_FUZZED(_GLF_IDENTITY(-10805, int(_GLF_IDENTITY(ivec2(-10805, (0 ^ 1)), (false ? _GLF_FUZZED(_GLF_IDENTITY(ivec2(54775, -75294), (ivec2(54775, -75294)) << ivec2(0, 0))) : ivec2(-10805, (0 ^ 1))))))) : 4))), min(min(4, 4), _GLF_IDENTITY(min(_GLF_IDENTITY(4, (true ? 4 : _GLF_FUZZED(-35521))), 4), _GLF_IDENTITY(0, (0) * 1) ^ _GLF_IDENTITY((min(4, 4)), ~ (~ (_GLF_IDENTITY((min(_GLF_IDENTITY(_GLF_IDENTITY(4, ~ (~ (4))), (4) | (4)), 4)), max(_GLF_IDENTITY((min(4, 4)), ((min(4, 4))) | ((min(4, 4)))), (min(4, 4))))))))))), _GLF_IDENTITY(4, min(4, 4)), _GLF_IDENTITY(4, min(4, 4))))) | (_GLF_IDENTITY(4, min(4, 4)))), 4), (clamp(4, _GLF_IDENTITY(_GLF_IDENTITY(4, min(4, _GLF_IDENTITY(4, (4) | (4)))), (_GLF_IDENTITY(_GLF_IDENTITY(4, min(4, 4)), clamp(_GLF_IDENTITY(4, _GLF_IDENTITY(min(4, _GLF_IDENTITY(4, (false ? _GLF_FUZZED(_GLF_IDENTITY(-10805, int(_GLF_IDENTITY(ivec2(-10805, (0 ^ 1)), (false ? _GLF_FUZZED(_GLF_IDENTITY(ivec2(54775, -75294), (ivec2(54775, -75294)) << ivec2(0, 0))) : ivec2(-10805, (0 ^ 1))))))) : 4))), min(min(4, 4), _GLF_IDENTITY(min(4, 4), _GLF_IDENTITY(0, (0) * 1) ^ _GLF_IDENTITY((min(4, 4)), ~ (~ (_GLF_IDENTITY((min(_GLF_IDENTITY(_GLF_IDENTITY(4, ~ (~ (4))), (4) | (4)), 4)), max(_GLF_IDENTITY((min(4, 4)), ((min(4, 4))) | ((min(4, 4)))), (min(4, 4))))))))))), _GLF_IDENTITY(4, min(4, 4)), _GLF_IDENTITY(4, _GLF_IDENTITY(min(4, 4), (true ? _GLF_IDENTITY(min(4, 4), (true ? min(4, 4) : _GLF_FUZZED(-29617))) : _GLF_FUZZED(-19362))))))) | (_GLF_IDENTITY(4, min(4, 4)))), 4)) >> 0)))) - 0), clamp(_GLF_IDENTITY(_GLF_IDENTITY(4, (4) >> 0), (true ? 4 : _GLF_FUZZED(60948))), _GLF_IDENTITY(_GLF_IDENTITY(4, min(4, _GLF_IDENTITY(4, (4) | (4)))), (_GLF_IDENTITY(_GLF_IDENTITY(4, min(4, _GLF_IDENTITY(4, clamp(_GLF_IDENTITY(4, 0 + (_GLF_IDENTITY(4, int(int(4))))), 4, 4)))), clamp(_GLF_IDENTITY(4, _GLF_IDENTITY(min(4, _GLF_IDENTITY(4, (false ? _GLF_FUZZED(_GLF_IDENTITY(-10805, int(_GLF_IDENTITY(ivec2(-10805, (0 ^ 1)), (false ? _GLF_FUZZED(_GLF_IDENTITY(ivec2(54775, -75294), (ivec2(54775, -75294)) << ivec2(0, 0))) : ivec2(-10805, (0 ^ 1))))))) : 4))), min(min(4, 4), _GLF_IDENTITY(min(4, 4), _GLF_IDENTITY(0, (0) * 1) ^ _GLF_IDENTITY((min(4, 4)), ~ (~ (_GLF_IDENTITY((min(_GLF_IDENTITY(_GLF_IDENTITY(4, ~ (~ (4))), (4) | (4)), 4)), max(_GLF_IDENTITY((min(4, 4)), ((min(4, 4))) | ((min(4, 4)))), (min(4, 4))))))))))), _GLF_IDENTITY(4, min(4, 4)), _GLF_IDENTITY(4, min(4, 4))))) | (_GLF_IDENTITY(4, min(4, 4)))), 4)))))), 0 ^ (_GLF_IDENTITY(4, clamp(4, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(4, min(4, 4)), (_GLF_IDENTITY(_GLF_IDENTITY(4, min(4, 4)), clamp(_GLF_IDENTITY(4, _GLF_IDENTITY(min(4, 4), min(min(4, 4), _GLF_IDENTITY(min(4, 4), 0 ^ (min(4, 4)))))), _GLF_IDENTITY(_GLF_IDENTITY(4, int(ivec4(_GLF_IDENTITY(4, clamp(4, 4, 4)), 0, ((0 ^ 0) | 1), 1))), min(4, _GLF_IDENTITY(4, _GLF_IDENTITY(_GLF_IDENTITY(0, max(0, 0)) | (4), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(0, max(0, 0)) | (4)), max(~ (_GLF_IDENTITY(0, max(0, 0)) | (4)), ~ (_GLF_IDENTITY(0, max(0, 0)) | (4))))))))), _GLF_IDENTITY(4, min(4, 4))))) | (_GLF_IDENTITY(4, min(4, 4)))), max(_GLF_IDENTITY(_GLF_IDENTITY(4, min(4, 4)), (_GLF_IDENTITY(_GLF_IDENTITY(4, min(4, 4)), clamp(_GLF_IDENTITY(4, _GLF_IDENTITY(min(4, 4), min(min(4, 4), _GLF_IDENTITY(min(4, 4), 0 ^ (min(4, 4)))))), _GLF_IDENTITY(_GLF_IDENTITY(4, int(ivec4(_GLF_IDENTITY(4, clamp(4, 4, 4)), 0, ((0 ^ 0) | 1), 1))), min(4, _GLF_IDENTITY(4, _GLF_IDENTITY(0, max(0, 0)) | (4)))), _GLF_IDENTITY(4, min(4, 4))))) | (_GLF_IDENTITY(4, min(4, 4)))), _GLF_IDENTITY(_GLF_IDENTITY(4, min(4, 4)), (_GLF_IDENTITY(_GLF_IDENTITY(4, min(4, 4)), clamp(_GLF_IDENTITY(4, _GLF_IDENTITY(min(4, 4), min(min(4, 4), _GLF_IDENTITY(min(4, 4), 0 ^ (min(4, 4)))))), _GLF_IDENTITY(_GLF_IDENTITY(4, int(ivec4(_GLF_IDENTITY(4, clamp(4, 4, 4)), 0, ((0 ^ 0) | 1), 1))), min(4, _GLF_IDENTITY(4, _GLF_IDENTITY(0, max(0, 0)) | (4)))), _GLF_IDENTITY(4, min(4, 4))))) | (_GLF_IDENTITY(4, min(4, 4)))))), 4)))), 64, 0);
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 buf[virtual_gid] = uint(subgroupAllEqual(read_val));
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
}
