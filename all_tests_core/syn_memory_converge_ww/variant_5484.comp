#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
#extension GL_EXT_maximal_reconvergence : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer WriteVal {
 uint write_val;
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bool(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))))))))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || false)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
  {
   do
    {
     if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
      {
       for(int _injected_loop_counter = int(_GLF_ONE(1.0, injectionSwitch.y)); _GLF_WRAPPED_LOOP(_injected_loop_counter > (-69004 & 0)); _injected_loop_counter --)
        {
         return;
        }
      }
     else
      {
       if(_GLF_DEAD(false))
        break;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
    }
   while(_GLF_WRAPPED_LOOP(false));
  }
 uint subgroup_size = gl_SubgroupSize;
 uint subgroup_local_id = gl_SubgroupInvocationID;
 uint num_workgroup = _GLF_IDENTITY(gl_NumWorkGroups, max(gl_NumWorkGroups, gl_NumWorkGroups)).x;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    return;
   for(int _injected_loop_counter = int(_GLF_ONE(1.0, injectionSwitch.y)); _GLF_WRAPPED_LOOP(_injected_loop_counter != _GLF_IDENTITY(0, (0) ^ (0 & -97014))); _injected_loop_counter --)
    {
     return;
     if(_GLF_DEAD(false))
      continue;
    }
  }
 do
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))
    {
     for(int _injected_loop_counter = (0 << _GLF_IDENTITY(int(8), _GLF_IDENTITY(int(8), (int(_GLF_IDENTITY(8, max(8, 8)))) | (int(_GLF_IDENTITY(8, clamp(8, 8, _GLF_IDENTITY(8, clamp(8, 8, 8))))))))); _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter, clamp(_injected_loop_counter, _injected_loop_counter, _injected_loop_counter)) != 1); _injected_loop_counter ++)
      {
       return;
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, false, false, false)), false || (bool(bvec4(false, false, false, false))))), (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, false, false, false)), false || (bool(bvec4(false, false, false, false))))), (injectionSwitch.x > injectionSwitch.y))))))
        return;
      }
    }
  }
 while(_GLF_WRAPPED_LOOP(false));
 uint workgroup_size = _GLF_IDENTITY(gl_WorkGroupSize.x, _GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupSize, _GLF_IDENTITY(_GLF_IDENTITY(clamp(_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) ^ uvec3(0u, 0u, 0u)), gl_WorkGroupSize, _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, max(_GLF_IDENTITY(gl_WorkGroupSize, (false ? _GLF_FUZZED(uvec3(60623u, 26125u, 155781u)) : gl_WorkGroupSize)), gl_WorkGroupSize)), _GLF_IDENTITY(uvec3(uvec4(gl_WorkGroupSize, ((1u << _GLF_IDENTITY(uint(0u), uint(0u))) >> _GLF_IDENTITY(uint(0u), uint(0u))))), (uvec3(uvec4(gl_WorkGroupSize, ((1u << _GLF_IDENTITY(uint(0u), uint(0u))) >> _GLF_IDENTITY(uint(0u), uint(0u)))))) - uvec3(0u, 0u, 0u)))), (clamp(_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) ^ uvec3(0u, 0u, 0u)), gl_WorkGroupSize, _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, max(_GLF_IDENTITY(gl_WorkGroupSize, (false ? _GLF_FUZZED(uvec3(60623u, 26125u, 155781u)) : gl_WorkGroupSize)), gl_WorkGroupSize)), _GLF_IDENTITY(uvec3(uvec4(gl_WorkGroupSize, ((1u << _GLF_IDENTITY(uint(0u), uint(0u))) >> _GLF_IDENTITY(uint(0u), uint(0u))))), (uvec3(uvec4(gl_WorkGroupSize, ((1u << _GLF_IDENTITY(uint(0u), uint(0u))) >> _GLF_IDENTITY(uint(0u), uint(0u)))))) - uvec3(0u, 0u, 0u))))) | (_GLF_IDENTITY(clamp(_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) ^ uvec3(0u, 0u, 0u)), gl_WorkGroupSize, _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, max(_GLF_IDENTITY(gl_WorkGroupSize, (false ? _GLF_FUZZED(uvec3(60623u, 26125u, 155781u)) : gl_WorkGroupSize)), gl_WorkGroupSize)), _GLF_IDENTITY(uvec3(uvec4(gl_WorkGroupSize, ((1u << _GLF_IDENTITY(uint(0u), uint(0u))) >> _GLF_IDENTITY(uint(0u), uint(0u))))), (uvec3(uvec4(gl_WorkGroupSize, ((1u << _GLF_IDENTITY(uint(0u), uint(0u))) >> _GLF_IDENTITY(uint(0u), uint(0u)))))) - uvec3(0u, 0u, 0u)))), ~ (_GLF_IDENTITY(~ (clamp(_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) ^ uvec3(0u, 0u, 0u)), gl_WorkGroupSize, _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, max(_GLF_IDENTITY(gl_WorkGroupSize, (false ? _GLF_FUZZED(uvec3(60623u, 26125u, 155781u)) : gl_WorkGroupSize)), gl_WorkGroupSize)), _GLF_IDENTITY(uvec3(uvec4(gl_WorkGroupSize, ((1u << _GLF_IDENTITY(uint(0u), uint(0u))) >> _GLF_IDENTITY(uint(0u), uint(0u))))), (uvec3(uvec4(gl_WorkGroupSize, ((1u << _GLF_IDENTITY(uint(0u), uint(0u))) >> _GLF_IDENTITY(uint(0u), uint(0u)))))) - uvec3(0u, 0u, 0u))))), uvec3(0u, 0u, 0u) | (~ (clamp(_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) ^ uvec3(0u, 0u, 0u)), gl_WorkGroupSize, _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, max(_GLF_IDENTITY(gl_WorkGroupSize, (false ? _GLF_FUZZED(uvec3(60623u, 26125u, 155781u)) : gl_WorkGroupSize)), gl_WorkGroupSize)), _GLF_IDENTITY(uvec3(uvec4(gl_WorkGroupSize, ((1u << _GLF_IDENTITY(uint(0u), uint(0u))) >> _GLF_IDENTITY(uint(0u), uint(0u))))), (uvec3(uvec4(gl_WorkGroupSize, ((1u << _GLF_IDENTITY(uint(0u), uint(0u))) >> _GLF_IDENTITY(uint(0u), uint(0u)))))) - uvec3(0u, 0u, 0u))))))))))), clamp(_GLF_IDENTITY(clamp(_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) ^ uvec3(0u, 0u, 0u)), gl_WorkGroupSize, _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, max(_GLF_IDENTITY(gl_WorkGroupSize, (false ? _GLF_FUZZED(uvec3(60623u, 26125u, 155781u)) : gl_WorkGroupSize)), gl_WorkGroupSize)), _GLF_IDENTITY(uvec3(uvec4(gl_WorkGroupSize, ((1u << _GLF_IDENTITY(uint(0u), uint(0u))) >> _GLF_IDENTITY(uint(0u), uint(0u))))), (uvec3(uvec4(gl_WorkGroupSize, ((1u << _GLF_IDENTITY(uint(0u), uint(0u))) >> _GLF_IDENTITY(uint(0u), uint(0u)))))) - uvec3(0u, 0u, 0u)))), (clamp(_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) ^ uvec3(0u, 0u, 0u)), gl_WorkGroupSize, _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, max(_GLF_IDENTITY(gl_WorkGroupSize, (false ? _GLF_FUZZED(uvec3(60623u, 26125u, 155781u)) : gl_WorkGroupSize)), gl_WorkGroupSize)), _GLF_IDENTITY(uvec3(uvec4(gl_WorkGroupSize, ((1u << _GLF_IDENTITY(uint(0u), uint(0u))) >> _GLF_IDENTITY(uint(0u), uint(0u))))), (uvec3(uvec4(gl_WorkGroupSize, ((1u << _GLF_IDENTITY(uint(0u), uint(0u))) >> _GLF_IDENTITY(uint(0u), uint(0u)))))) - uvec3(0u, 0u, 0u))))) | (_GLF_IDENTITY(clamp(_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) ^ uvec3(0u, 0u, 0u)), gl_WorkGroupSize, _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, max(_GLF_IDENTITY(gl_WorkGroupSize, (false ? _GLF_FUZZED(uvec3(60623u, 26125u, 155781u)) : gl_WorkGroupSize)), gl_WorkGroupSize)), _GLF_IDENTITY(uvec3(uvec4(gl_WorkGroupSize, ((1u << _GLF_IDENTITY(uint(0u), uint(0u))) >> _GLF_IDENTITY(uint(0u), uint(0u))))), (uvec3(uvec4(gl_WorkGroupSize, ((1u << _GLF_IDENTITY(uint(0u), uint(0u))) >> _GLF_IDENTITY(uint(0u), uint(0u)))))) - uvec3(0u, 0u, 0u)))), ~ (_GLF_IDENTITY(~ (clamp(_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) ^ uvec3(0u, 0u, 0u)), gl_WorkGroupSize, _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, max(_GLF_IDENTITY(gl_WorkGroupSize, (false ? _GLF_FUZZED(uvec3(60623u, 26125u, 155781u)) : gl_WorkGroupSize)), gl_WorkGroupSize)), _GLF_IDENTITY(uvec3(uvec4(gl_WorkGroupSize, ((1u << _GLF_IDENTITY(uint(0u), uint(0u))) >> _GLF_IDENTITY(uint(0u), uint(0u))))), (uvec3(uvec4(gl_WorkGroupSize, ((1u << _GLF_IDENTITY(uint(0u), uint(0u))) >> _GLF_IDENTITY(uint(0u), uint(0u)))))) - uvec3(0u, 0u, 0u))))), uvec3(0u, 0u, 0u) | (~ (clamp(_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) ^ uvec3(0u, 0u, 0u)), gl_WorkGroupSize, _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, max(_GLF_IDENTITY(gl_WorkGroupSize, (false ? _GLF_FUZZED(uvec3(60623u, 26125u, 155781u)) : gl_WorkGroupSize)), gl_WorkGroupSize)), _GLF_IDENTITY(uvec3(uvec4(gl_WorkGroupSize, ((1u << _GLF_IDENTITY(uint(0u), uint(0u))) >> _GLF_IDENTITY(uint(0u), uint(0u))))), (uvec3(uvec4(gl_WorkGroupSize, ((1u << _GLF_IDENTITY(uint(0u), uint(0u))) >> _GLF_IDENTITY(uint(0u), uint(0u)))))) - uvec3(0u, 0u, 0u))))))))))), _GLF_IDENTITY(clamp(_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) ^ uvec3(0u, 0u, 0u)), gl_WorkGroupSize, _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, max(_GLF_IDENTITY(gl_WorkGroupSize, (false ? _GLF_FUZZED(uvec3(60623u, 26125u, 155781u)) : gl_WorkGroupSize)), gl_WorkGroupSize)), _GLF_IDENTITY(uvec3(uvec4(gl_WorkGroupSize, ((1u << _GLF_IDENTITY(uint(0u), uint(0u))) >> _GLF_IDENTITY(uint(0u), uint(0u))))), (uvec3(uvec4(gl_WorkGroupSize, ((1u << _GLF_IDENTITY(uint(0u), uint(0u))) >> _GLF_IDENTITY(uint(0u), uint(0u)))))) - uvec3(0u, 0u, 0u)))), (clamp(_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) ^ uvec3(0u, 0u, 0u)), gl_WorkGroupSize, _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, max(_GLF_IDENTITY(gl_WorkGroupSize, (false ? _GLF_FUZZED(uvec3(60623u, 26125u, 155781u)) : gl_WorkGroupSize)), gl_WorkGroupSize)), _GLF_IDENTITY(uvec3(uvec4(gl_WorkGroupSize, ((1u << _GLF_IDENTITY(uint(0u), uint(0u))) >> _GLF_IDENTITY(uint(0u), uint(0u))))), (uvec3(uvec4(gl_WorkGroupSize, ((1u << _GLF_IDENTITY(uint(0u), uint(0u))) >> _GLF_IDENTITY(uint(0u), uint(0u)))))) - uvec3(0u, 0u, 0u))))) | (_GLF_IDENTITY(clamp(_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) ^ uvec3(0u, 0u, 0u)), gl_WorkGroupSize, _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, max(_GLF_IDENTITY(gl_WorkGroupSize, (false ? _GLF_FUZZED(uvec3(60623u, 26125u, 155781u)) : gl_WorkGroupSize)), gl_WorkGroupSize)), _GLF_IDENTITY(uvec3(uvec4(gl_WorkGroupSize, ((1u << _GLF_IDENTITY(uint(0u), uint(0u))) >> _GLF_IDENTITY(uint(0u), uint(0u))))), (uvec3(uvec4(gl_WorkGroupSize, ((1u << _GLF_IDENTITY(uint(0u), uint(0u))) >> _GLF_IDENTITY(uint(0u), uint(0u)))))) - uvec3(0u, 0u, 0u)))), ~ (_GLF_IDENTITY(~ (clamp(_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) ^ uvec3(0u, 0u, 0u)), gl_WorkGroupSize, _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, max(_GLF_IDENTITY(gl_WorkGroupSize, (false ? _GLF_FUZZED(uvec3(60623u, 26125u, 155781u)) : gl_WorkGroupSize)), gl_WorkGroupSize)), _GLF_IDENTITY(uvec3(uvec4(gl_WorkGroupSize, ((1u << _GLF_IDENTITY(uint(0u), uint(0u))) >> _GLF_IDENTITY(uint(0u), uint(0u))))), (uvec3(uvec4(gl_WorkGroupSize, ((1u << _GLF_IDENTITY(uint(0u), uint(0u))) >> _GLF_IDENTITY(uint(0u), uint(0u)))))) - uvec3(0u, 0u, 0u))))), uvec3(0u, 0u, 0u) | (~ (clamp(_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) ^ uvec3(0u, 0u, 0u)), gl_WorkGroupSize, _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, max(_GLF_IDENTITY(gl_WorkGroupSize, (false ? _GLF_FUZZED(uvec3(60623u, 26125u, 155781u)) : gl_WorkGroupSize)), gl_WorkGroupSize)), _GLF_IDENTITY(uvec3(uvec4(gl_WorkGroupSize, ((1u << _GLF_IDENTITY(uint(0u), uint(0u))) >> _GLF_IDENTITY(uint(0u), uint(0u))))), (uvec3(uvec4(gl_WorkGroupSize, ((1u << _GLF_IDENTITY(uint(0u), uint(0u))) >> _GLF_IDENTITY(uint(0u), uint(0u)))))) - uvec3(0u, 0u, 0u))))))))))), _GLF_IDENTITY(clamp(_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) ^ uvec3(0u, 0u, 0u)), gl_WorkGroupSize, _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, max(_GLF_IDENTITY(gl_WorkGroupSize, (false ? _GLF_FUZZED(uvec3(60623u, 26125u, 155781u)) : gl_WorkGroupSize)), gl_WorkGroupSize)), _GLF_IDENTITY(uvec3(uvec4(gl_WorkGroupSize, ((1u << _GLF_IDENTITY(uint(0u), uint(0u))) >> _GLF_IDENTITY(uint(0u), uint(0u))))), (uvec3(uvec4(gl_WorkGroupSize, ((1u << _GLF_IDENTITY(uint(0u), uint(0u))) >> _GLF_IDENTITY(uint(0u), uint(0u)))))) - uvec3(0u, 0u, 0u)))), (clamp(_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) ^ uvec3(0u, 0u, 0u)), gl_WorkGroupSize, _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, max(_GLF_IDENTITY(gl_WorkGroupSize, (false ? _GLF_FUZZED(uvec3(60623u, 26125u, 155781u)) : gl_WorkGroupSize)), gl_WorkGroupSize)), _GLF_IDENTITY(uvec3(uvec4(gl_WorkGroupSize, ((1u << _GLF_IDENTITY(uint(0u), uint(0u))) >> _GLF_IDENTITY(uint(0u), uint(0u))))), (uvec3(uvec4(gl_WorkGroupSize, ((1u << _GLF_IDENTITY(uint(0u), uint(0u))) >> _GLF_IDENTITY(uint(0u), uint(0u)))))) - uvec3(0u, 0u, 0u))))) | (_GLF_IDENTITY(clamp(_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) ^ uvec3(0u, 0u, 0u)), gl_WorkGroupSize, _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, max(_GLF_IDENTITY(gl_WorkGroupSize, (false ? _GLF_FUZZED(uvec3(60623u, 26125u, 155781u)) : gl_WorkGroupSize)), gl_WorkGroupSize)), _GLF_IDENTITY(uvec3(uvec4(gl_WorkGroupSize, ((1u << _GLF_IDENTITY(uint(0u), uint(0u))) >> _GLF_IDENTITY(uint(0u), uint(0u))))), (uvec3(uvec4(gl_WorkGroupSize, ((1u << _GLF_IDENTITY(uint(0u), uint(0u))) >> _GLF_IDENTITY(uint(0u), uint(0u)))))) - uvec3(0u, 0u, 0u)))), ~ (_GLF_IDENTITY(~ (clamp(_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) ^ uvec3(0u, 0u, 0u)), gl_WorkGroupSize, _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, max(_GLF_IDENTITY(gl_WorkGroupSize, (false ? _GLF_FUZZED(uvec3(60623u, 26125u, 155781u)) : gl_WorkGroupSize)), gl_WorkGroupSize)), _GLF_IDENTITY(uvec3(uvec4(gl_WorkGroupSize, ((1u << _GLF_IDENTITY(uint(0u), uint(0u))) >> _GLF_IDENTITY(uint(0u), uint(0u))))), (uvec3(uvec4(gl_WorkGroupSize, ((1u << _GLF_IDENTITY(uint(0u), uint(0u))) >> _GLF_IDENTITY(uint(0u), uint(0u)))))) - uvec3(0u, 0u, 0u))))), uvec3(0u, 0u, 0u) | (~ (clamp(_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) ^ uvec3(0u, 0u, 0u)), gl_WorkGroupSize, _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, max(_GLF_IDENTITY(gl_WorkGroupSize, (false ? _GLF_FUZZED(uvec3(60623u, 26125u, 155781u)) : gl_WorkGroupSize)), gl_WorkGroupSize)), _GLF_IDENTITY(uvec3(uvec4(gl_WorkGroupSize, ((1u << _GLF_IDENTITY(uint(0u), uint(0u))) >> _GLF_IDENTITY(uint(0u), uint(0u))))), (uvec3(uvec4(gl_WorkGroupSize, ((1u << _GLF_IDENTITY(uint(0u), uint(0u))) >> _GLF_IDENTITY(uint(0u), uint(0u)))))) - uvec3(0u, 0u, 0u)))))))))))))).x), max((_GLF_IDENTITY(gl_WorkGroupSize, clamp(_GLF_IDENTITY(gl_WorkGroupSize, uvec3(uvec3(_GLF_IDENTITY(gl_WorkGroupSize, uvec3(0u, 0u, 0u) | (gl_WorkGroupSize))))), gl_WorkGroupSize, _GLF_IDENTITY(gl_WorkGroupSize, (_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) >> uvec3(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, vec2(mat4x3(injectionSwitch, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y)))).x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)))) / uvec3(1u, 1u, 1u)))).x), _GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupSize, clamp(gl_WorkGroupSize, gl_WorkGroupSize, gl_WorkGroupSize)).x), max((_GLF_IDENTITY(gl_WorkGroupSize, clamp(gl_WorkGroupSize, gl_WorkGroupSize, gl_WorkGroupSize)).x), (_GLF_IDENTITY(gl_WorkGroupSize, clamp(gl_WorkGroupSize, gl_WorkGroupSize, gl_WorkGroupSize)).x))))) ^ 0u);
 if(_GLF_DEAD(false))
  {
   do
    {
     if(_GLF_DEAD(false))
      return;
     do
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
       if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(true, bool(_GLF_IDENTITY(bvec3(true, false, false), bvec3(bvec4(bvec3(true, false, false), false))))), false, true))))))
        {
         if(_GLF_DEAD(false))
          return;
         continue;
        }
       if(_GLF_DEAD(false))
        return;
      }
     while(_GLF_WRAPPED_LOOP(false));
    }
   while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
  }
 uint workgroup_id = gl_WorkGroupID.x;
 uint workgroup_base = _GLF_IDENTITY(_GLF_IDENTITY(workgroup_size * _GLF_IDENTITY(_GLF_IDENTITY(workgroup_id, _GLF_IDENTITY(uint(uint(workgroup_id)), ~ (~ (uint(_GLF_IDENTITY(uint(workgroup_id), 1u * (uint(workgroup_id)))))))), (workgroup_id) - 0u), _GLF_IDENTITY((0u | 0u), _GLF_IDENTITY(uint(uvec3(_GLF_IDENTITY((0u | 0u), max(_GLF_IDENTITY((0u | 0u), max((0u | 0u), (0u | 0u))), (0u | 0u))), (0u | 1u), 0u)), (uint(uvec3(_GLF_IDENTITY((0u | 0u), max(_GLF_IDENTITY((0u | 0u), max((0u | 0u), (0u | 0u))), (0u | 0u))), (0u | 1u), 0u))) << 0u)) | _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_size * workgroup_id, 0u ^ (workgroup_size * workgroup_id)), max(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_size, (_GLF_IDENTITY(workgroup_size, (false ? _GLF_IDENTITY(_GLF_FUZZED(subgroup_size), 0u | (_GLF_FUZZED(subgroup_size))) : workgroup_size))) / 1u), min(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_size, (_GLF_IDENTITY(workgroup_size, (_GLF_IDENTITY(false ? _GLF_FUZZED(subgroup_size) : workgroup_size, 0u + (false ? _GLF_FUZZED(subgroup_size) : workgroup_size))))) / 1u), 0u | (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_size, (_GLF_IDENTITY(workgroup_size, (false ? _GLF_FUZZED(subgroup_size) : workgroup_size))) / 1u), (_GLF_IDENTITY(workgroup_size, (_GLF_IDENTITY(workgroup_size, (false ? _GLF_FUZZED(subgroup_size) : workgroup_size))) / 1u)) >> 0u))), _GLF_IDENTITY(workgroup_size, (_GLF_IDENTITY(workgroup_size, (false ? _GLF_IDENTITY(_GLF_FUZZED(subgroup_size), min(_GLF_FUZZED(subgroup_size), _GLF_IDENTITY(_GLF_FUZZED(subgroup_size), (false ? _GLF_FUZZED(write_val) : _GLF_FUZZED(subgroup_size))))) : workgroup_size))) / 1u))) * workgroup_id, 0u ^ (workgroup_size * workgroup_id)), _GLF_IDENTITY(workgroup_size * workgroup_id, 0u ^ (workgroup_size * workgroup_id)))), _GLF_IDENTITY((_GLF_IDENTITY(workgroup_size * workgroup_id, _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, ~ (~ (0u)))) | (_GLF_IDENTITY(0u, _GLF_IDENTITY((0u) ^ 0u, max((0u) ^ 0u, (0u) ^ 0u))))) ^ _GLF_IDENTITY((workgroup_size * workgroup_id), ((workgroup_size * workgroup_id)) + (0u & 126544u)))), (true ? (_GLF_IDENTITY(workgroup_size * workgroup_id, _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, ~ (~ (0u)))) | (_GLF_IDENTITY(0u, (0u) ^ 0u))) ^ _GLF_IDENTITY((workgroup_size * workgroup_id), ((workgroup_size * workgroup_id)) + (0u & 126544u)))) : _GLF_FUZZED(subgroup_local_id))) / 1u)), uint(uint(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_size * workgroup_id, _GLF_IDENTITY(0u ^ (workgroup_size * workgroup_id), 0u ^ (0u ^ (workgroup_size * workgroup_id)))), max(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_size, (_GLF_IDENTITY(workgroup_size, (false ? _GLF_FUZZED(subgroup_size) : workgroup_size))) / 1u) * workgroup_id, max(_GLF_IDENTITY(workgroup_size, (_GLF_IDENTITY(workgroup_size, (false ? _GLF_FUZZED(subgroup_size) : workgroup_size))) / 1u) * workgroup_id, _GLF_IDENTITY(workgroup_size, (_GLF_IDENTITY(workgroup_size, (false ? _GLF_FUZZED(subgroup_size) : workgroup_size))) / 1u) * workgroup_id)), 0u ^ (workgroup_size * workgroup_id)), _GLF_IDENTITY(workgroup_size * workgroup_id, _GLF_IDENTITY(0u, (0u) ^ 0u) ^ (workgroup_size * workgroup_id)))), (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_size * _GLF_IDENTITY(workgroup_id, (false ? _GLF_FUZZED(bitfieldReverse((workgroup_id - workgroup_size))) : workgroup_id)), 0u ^ _GLF_IDENTITY((workgroup_size * workgroup_id), ((workgroup_size * workgroup_id)) + (0u & 126544u))), clamp(_GLF_IDENTITY(workgroup_size * workgroup_id, 0u ^ _GLF_IDENTITY((workgroup_size * workgroup_id), ((workgroup_size * workgroup_id)) + (0u & 126544u))), _GLF_IDENTITY(workgroup_size * workgroup_id, _GLF_IDENTITY(0u, (0u) << 0u) ^ _GLF_IDENTITY((workgroup_size * workgroup_id), ((workgroup_size * workgroup_id)) + (0u & 126544u))), _GLF_IDENTITY(_GLF_IDENTITY(workgroup_size * workgroup_id, 0u ^ _GLF_IDENTITY((workgroup_size * workgroup_id), ((workgroup_size * workgroup_id)) + (0u & 126544u))), (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_size * workgroup_id, 0u ^ _GLF_IDENTITY((workgroup_size * workgroup_id), ((workgroup_size * workgroup_id)) + (0u & 126544u))), ~ (~ (_GLF_IDENTITY(workgroup_size * workgroup_id, 0u ^ _GLF_IDENTITY((workgroup_size * workgroup_id), ((workgroup_size * workgroup_id)) + (0u & 126544u))))))) / uint(_GLF_ONE(1.0, injectionSwitch.y)))))) / 1u)), ~ (~ ((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_size * workgroup_id, 0u ^ (workgroup_size * workgroup_id)), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(workgroup_size * workgroup_id, 0u ^ (workgroup_size * workgroup_id))), (~ (_GLF_IDENTITY(workgroup_size * workgroup_id, 0u ^ (workgroup_size * workgroup_id)))) - 0u))), _GLF_IDENTITY(max(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_size, (_GLF_IDENTITY(workgroup_size, (false ? _GLF_FUZZED(_GLF_IDENTITY(subgroup_size, (false ? _GLF_FUZZED(subgroup_size) : subgroup_size))) : workgroup_size))) / 1u) * workgroup_id, 0u ^ (workgroup_size * workgroup_id)), _GLF_IDENTITY(workgroup_size * workgroup_id, 0u ^ (_GLF_IDENTITY(workgroup_size, max(workgroup_size, workgroup_size)) * workgroup_id))), (_GLF_IDENTITY(_GLF_IDENTITY(max(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_size, (_GLF_IDENTITY(workgroup_size, (false ? _GLF_FUZZED(subgroup_size) : workgroup_size))) / 1u) * workgroup_id, 0u ^ (workgroup_size * workgroup_id)), _GLF_IDENTITY(workgroup_size * workgroup_id, 0u ^ (workgroup_size * workgroup_id))), (max(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_size, (_GLF_IDENTITY(workgroup_size, (false ? _GLF_FUZZED(subgroup_size) : workgroup_size))) / 1u) * workgroup_id, 0u ^ (workgroup_size * workgroup_id)), _GLF_IDENTITY(workgroup_size * workgroup_id, 0u ^ (workgroup_size * workgroup_id)))) + 0u), 0u | (_GLF_IDENTITY(max(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_size, (_GLF_IDENTITY(workgroup_size, (false ? _GLF_FUZZED(subgroup_size) : workgroup_size))) / 1u) * workgroup_id, 0u ^ (workgroup_size * workgroup_id)), _GLF_IDENTITY(workgroup_size * workgroup_id, 0u ^ (workgroup_size * workgroup_id))), (max(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_size, (_GLF_IDENTITY(workgroup_size, (false ? _GLF_FUZZED(subgroup_size) : workgroup_size))) / 1u) * workgroup_id, 0u ^ (workgroup_size * workgroup_id)), _GLF_IDENTITY(workgroup_size * workgroup_id, 0u ^ (workgroup_size * workgroup_id)))) + 0u)))) >> 0u)), (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_size * workgroup_id, 0u ^ _GLF_IDENTITY((workgroup_size * workgroup_id), ((workgroup_size * workgroup_id)) + (0u & 126544u))), (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_size, clamp(workgroup_size, workgroup_size, workgroup_size)) * workgroup_id, 0u ^ _GLF_IDENTITY((workgroup_size * _GLF_IDENTITY(workgroup_id, (workgroup_id) << 0u)), ((workgroup_size * workgroup_id)) + (0u & 126544u)))) - 0u)) / 1u))))))))), _GLF_IDENTITY(min(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_size * workgroup_id, _GLF_IDENTITY((0u | 0u) | (_GLF_IDENTITY(workgroup_size * workgroup_id, 0u ^ (workgroup_size * workgroup_id))), max((0u | 0u) | (_GLF_IDENTITY(workgroup_size * workgroup_id, 0u ^ (workgroup_size * workgroup_id))), (0u | 0u) | (_GLF_IDENTITY(workgroup_size * workgroup_id, 0u ^ (_GLF_IDENTITY(workgroup_size, (workgroup_size) << 0u) * workgroup_id)))))), (_GLF_IDENTITY(workgroup_size * workgroup_id, (0u | 0u) | (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_size * workgroup_id, 0u ^ (workgroup_size * workgroup_id)), min(_GLF_IDENTITY(workgroup_size * workgroup_id, 0u ^ (workgroup_size * workgroup_id)), _GLF_IDENTITY(_GLF_IDENTITY(workgroup_size * workgroup_id, 0u ^ (workgroup_size * workgroup_id)), _GLF_IDENTITY(min(_GLF_IDENTITY(workgroup_size * workgroup_id, 0u ^ _GLF_IDENTITY((workgroup_size * workgroup_id), ((1u << _GLF_IDENTITY(uint(0u), uint(0u))) >> _GLF_IDENTITY(uint(0u), uint(0u))) * ((workgroup_size * workgroup_id)))), _GLF_IDENTITY(workgroup_size * workgroup_id, _GLF_IDENTITY(0u, uint(uvec4(0u, 0u, 0u, 0u))) ^ (workgroup_size * workgroup_id))), (min(_GLF_IDENTITY(workgroup_size * _GLF_IDENTITY(workgroup_id, clamp(workgroup_id, workgroup_id, _GLF_IDENTITY(_GLF_IDENTITY(workgroup_id, 0u + (_GLF_IDENTITY(workgroup_id, ~ (~ (workgroup_id))))), (_GLF_IDENTITY(workgroup_id, 0u + (_GLF_IDENTITY(workgroup_id, ~ (~ (workgroup_id)))))) | 0u))), 0u ^ (workgroup_size * workgroup_id)), _GLF_IDENTITY(workgroup_size * workgroup_id, _GLF_IDENTITY(_GLF_IDENTITY(0u, 0u ^ (0u)), uint(uvec4(0u, 0u, 0u, 0u))) ^ (workgroup_size * workgroup_id)))) / (_GLF_IDENTITY((1u << _GLF_IDENTITY(uint(6u), uint(6u))), min(_GLF_IDENTITY((1u << _GLF_IDENTITY(uint(6u), uint(6u))), clamp((1u << _GLF_IDENTITY(uint(6u), uint(6u))), (1u << _GLF_IDENTITY(uint(6u), uint(6u))), (1u << _GLF_IDENTITY(uint(6u), uint(6u))))), (1u << _GLF_IDENTITY(uint(6u), uint(6u))))) >> _GLF_IDENTITY(uint(6u), uint(6u)))))))))) * 1u), _GLF_IDENTITY(_GLF_IDENTITY(workgroup_size * workgroup_id, (0u | 0u) | (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_size * workgroup_id, min(workgroup_size * workgroup_id, _GLF_IDENTITY(workgroup_size * workgroup_id, (true ? workgroup_size * workgroup_id : _GLF_FUZZED(116122u))))), _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, min(0u, 0u))) - (67547u & 0u)) ^ (workgroup_size * _GLF_IDENTITY(workgroup_id, clamp(workgroup_id, workgroup_id, workgroup_id)))))), (_GLF_IDENTITY(workgroup_size * workgroup_id, (0u | 0u) | (_GLF_IDENTITY(workgroup_size * workgroup_id, 0u ^ (workgroup_size * workgroup_id))))) ^ 0u)), 0u + (min(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_size * workgroup_id, _GLF_IDENTITY((0u | 0u) | (_GLF_IDENTITY(workgroup_size * workgroup_id, 0u ^ (_GLF_IDENTITY(workgroup_size, clamp(workgroup_size, workgroup_size, _GLF_IDENTITY(workgroup_size, (workgroup_size) << 0u))) * _GLF_IDENTITY(workgroup_id, ~ (~ (workgroup_id)))))), max((0u | 0u) | (_GLF_IDENTITY(workgroup_size * workgroup_id, 0u ^ (workgroup_size * workgroup_id))), (0u | 0u) | (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_size * workgroup_id, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(subgroup_local_id) : workgroup_size * workgroup_id)), 0u ^ (_GLF_IDENTITY(workgroup_size, (workgroup_size) << 0u) * workgroup_id)))))), (false ? _GLF_FUZZED((workgroup_id)) : _GLF_IDENTITY(workgroup_size * workgroup_id, _GLF_IDENTITY((0u | 0u) | (_GLF_IDENTITY(workgroup_size * workgroup_id, 0u ^ (workgroup_size * _GLF_IDENTITY(workgroup_id, (workgroup_id) * 1u)))), max((0u | 0u) | (_GLF_IDENTITY(workgroup_size * workgroup_id, 0u ^ (workgroup_size * _GLF_IDENTITY(_GLF_IDENTITY(workgroup_id, (workgroup_id) - 0u), uint(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(workgroup_id, (workgroup_id) - 0u), 1u, 0u), ~ (~ (uvec3(_GLF_IDENTITY(workgroup_id, (workgroup_id) - 0u), 1u, 0u))))))))), (_GLF_IDENTITY(0u | 0u, (0u | _GLF_IDENTITY(0u, (0u) | 0u)) | (0u | 0u))) | (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_size * workgroup_id, 0u ^ (_GLF_IDENTITY(workgroup_size, (workgroup_size) << 0u) * workgroup_id)), clamp(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_size * workgroup_id, 0u ^ (_GLF_IDENTITY(workgroup_size, (workgroup_size) << 0u) * workgroup_id)), 0u | (_GLF_IDENTITY(workgroup_size * workgroup_id, 0u ^ (_GLF_IDENTITY(workgroup_size, _GLF_IDENTITY((workgroup_size), 0u ^ (_GLF_IDENTITY((workgroup_size), (true ? (workgroup_size) : _GLF_FUZZED(workgroup_size))))) << _GLF_IDENTITY(0u, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(0u, min(0u, 0u))), 1u * (~ (_GLF_IDENTITY(0u, min(0u, 0u)))))))) * workgroup_id)))), _GLF_IDENTITY(_GLF_IDENTITY(workgroup_size, (_GLF_IDENTITY(workgroup_size, (workgroup_size) + 0u)) | (0u << _GLF_IDENTITY(uint(4u), uint(4u)))) * workgroup_id, 0u ^ (_GLF_IDENTITY(workgroup_size, (workgroup_size) << 0u) * workgroup_id)), _GLF_IDENTITY(_GLF_IDENTITY(workgroup_size * workgroup_id, min(workgroup_size * workgroup_id, _GLF_IDENTITY(workgroup_size * workgroup_id, (workgroup_size * workgroup_id) / 1u))), 0u ^ (_GLF_IDENTITY(workgroup_size, (workgroup_size) << 0u) * workgroup_id)))))))))), _GLF_IDENTITY((_GLF_IDENTITY(workgroup_size * workgroup_id, (0u | 0u) | (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_size * workgroup_id, 0u ^ (workgroup_size * workgroup_id)), min(_GLF_IDENTITY(workgroup_size * workgroup_id, 0u ^ (workgroup_size * workgroup_id)), _GLF_IDENTITY(_GLF_IDENTITY(workgroup_size * workgroup_id, 0u ^ (workgroup_size * workgroup_id)), _GLF_IDENTITY(min(_GLF_IDENTITY(workgroup_size * workgroup_id, 0u ^ (workgroup_size * workgroup_id)), _GLF_IDENTITY(workgroup_size * workgroup_id, _GLF_IDENTITY(0u, uint(uvec4(0u, 0u, 0u, 0u))) ^ (workgroup_size * workgroup_id))), (min(_GLF_IDENTITY(workgroup_size * _GLF_IDENTITY(workgroup_id, clamp(workgroup_id, workgroup_id, _GLF_IDENTITY(workgroup_id, 0u + (_GLF_IDENTITY(workgroup_id, ~ (~ (workgroup_id))))))), 0u ^ (workgroup_size * workgroup_id)), _GLF_IDENTITY(workgroup_size * workgroup_id, _GLF_IDENTITY(0u, uint(uvec4(0u, 0u, 0u, 0u))) ^ (workgroup_size * workgroup_id)))) / ((1u << _GLF_IDENTITY(uint(6u), uint(6u))) >> _GLF_IDENTITY(uint(6u), uint(6u))))))), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_size, (workgroup_size) >> ((48626u & 0u) | 0u)) * workgroup_id, 0u ^ (workgroup_size * workgroup_id)), min(_GLF_IDENTITY(workgroup_size * workgroup_id, 0u ^ (workgroup_size * workgroup_id)), _GLF_IDENTITY(_GLF_IDENTITY(workgroup_size * workgroup_id, 0u ^ (workgroup_size * workgroup_id)), _GLF_IDENTITY(min(_GLF_IDENTITY(workgroup_size * workgroup_id, 0u ^ (workgroup_size * workgroup_id)), _GLF_IDENTITY(workgroup_size * workgroup_id, _GLF_IDENTITY(0u, uint(uvec4(0u, 0u, 0u, 0u))) ^ (workgroup_size * workgroup_id))), (min(_GLF_IDENTITY(workgroup_size * _GLF_IDENTITY(workgroup_id, clamp(workgroup_id, workgroup_id, _GLF_IDENTITY(workgroup_id, 0u + (_GLF_IDENTITY(workgroup_id, ~ (~ (workgroup_id))))))), 0u ^ (workgroup_size * workgroup_id)), _GLF_IDENTITY(workgroup_size * workgroup_id, _GLF_IDENTITY(0u, uint(_GLF_IDENTITY(uvec4(0u, 0u, 0u, 0u), (_GLF_IDENTITY(uvec4(0u, 0u, 0u, 0u), ~ (~ (uvec4(0u, 0u, 0u, 0u))))) | (uvec4(0u, 0u, 0u, 0u))))) ^ (workgroup_size * workgroup_id)))) / ((1u << _GLF_IDENTITY(_GLF_IDENTITY(uint(6u), uint(6u)), (_GLF_IDENTITY(uint(6u), uint(6u))) << (0u << _GLF_IDENTITY(uint(8u), _GLF_IDENTITY(uint(8u), (uint(8u)) >> 0u))))) >> _GLF_IDENTITY(uint(6u), uint(6u))))))))))))) * 1u, (true ? (_GLF_IDENTITY(workgroup_size * workgroup_id, (0u | 0u) | (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_size * workgroup_id, 0u ^ (workgroup_size * workgroup_id)), min(_GLF_IDENTITY(workgroup_size * workgroup_id, 0u ^ _GLF_IDENTITY((workgroup_size * _GLF_IDENTITY(workgroup_id, 0u + (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_id, 0u + (workgroup_id)), min(workgroup_id, workgroup_id))))), ~ (~ ((workgroup_size * _GLF_IDENTITY(workgroup_id, 0u + (_GLF_IDENTITY(workgroup_id, min(workgroup_id, workgroup_id))))))))), _GLF_IDENTITY(_GLF_IDENTITY(workgroup_size * workgroup_id, 0u ^ (workgroup_size * workgroup_id)), _GLF_IDENTITY(min(_GLF_IDENTITY(workgroup_size * workgroup_id, 0u ^ _GLF_IDENTITY((workgroup_size * workgroup_id), 0u | ((workgroup_size * workgroup_id)))), _GLF_IDENTITY(workgroup_size * workgroup_id, _GLF_IDENTITY(0u, uint(uvec4(0u, 0u, 0u, 0u))) ^ (workgroup_size * workgroup_id))), (min(_GLF_IDENTITY(workgroup_size * _GLF_IDENTITY(workgroup_id, clamp(workgroup_id, workgroup_id, _GLF_IDENTITY(workgroup_id, 0u + (_GLF_IDENTITY(workgroup_id, ~ (~ (workgroup_id))))))), 0u ^ (workgroup_size * _GLF_IDENTITY(workgroup_id, (_GLF_IDENTITY(workgroup_id, 0u ^ (workgroup_id))) | (workgroup_id)))), _GLF_IDENTITY(workgroup_size * workgroup_id, _GLF_IDENTITY(0u, uint(uvec4(0u, 0u, 0u, 0u))) ^ (workgroup_size * _GLF_IDENTITY(_GLF_IDENTITY(workgroup_id, 1u * (workgroup_id)), (workgroup_id) | (workgroup_id)))))) / ((1u << _GLF_IDENTITY(uint(6u), uint(6u))) >> _GLF_IDENTITY(uint(6u), uint(6u)))))))))) * _GLF_IDENTITY(1u, clamp(_GLF_IDENTITY(1u, ~ (_GLF_IDENTITY(~ (1u), (~ (1u)) / 1u))), 1u, _GLF_IDENTITY(1u, clamp(1u, 1u, 1u)))) : _GLF_FUZZED(write_val)))), _GLF_IDENTITY(_GLF_IDENTITY(workgroup_size * workgroup_id, (0u | 0u) | (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_size * workgroup_id, min(workgroup_size * workgroup_id, _GLF_IDENTITY(workgroup_size * _GLF_IDENTITY(workgroup_id, (workgroup_id) >> 0u), (true ? workgroup_size * workgroup_id : _GLF_FUZZED(116122u))))), _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, min(0u, 0u))) - (_GLF_IDENTITY(67547u & 0u, (67547u & 0u) ^ 0u))) ^ (workgroup_size * _GLF_IDENTITY(workgroup_id, clamp(workgroup_id, workgroup_id, workgroup_id)))))), (_GLF_IDENTITY(workgroup_size * workgroup_id, (_GLF_IDENTITY(0u | 0u, (false ? _GLF_FUZZED(199889u) : 0u | 0u))) | (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_size * workgroup_id, min(workgroup_size * workgroup_id, _GLF_IDENTITY(workgroup_size * workgroup_id, (workgroup_size * workgroup_id) >> 0u))), 0u ^ (workgroup_size * workgroup_id))))) ^ 0u)))));
 if(_GLF_DEAD(false))
  return;
 uint subgroup_base = _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) | (subgroup_id * subgroup_size)), max(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * _GLF_IDENTITY(subgroup_size, (subgroup_size) * uint(_GLF_ONE(1.0, injectionSwitch.y))), _GLF_IDENTITY((subgroup_id * subgroup_size) | (subgroup_id * subgroup_size), (0u | _GLF_IDENTITY(0u, max(_GLF_IDENTITY(0u, 0u ^ (0u)), _GLF_IDENTITY(_GLF_IDENTITY(0u, (0u) | (0u)), ~ (~ (0u)))))) ^ (_GLF_IDENTITY(_GLF_IDENTITY((subgroup_id * subgroup_size), ((subgroup_id * subgroup_size)) / 1u) | (subgroup_id * subgroup_size), max((subgroup_id * subgroup_size) | (subgroup_id * subgroup_size), (subgroup_id * subgroup_size) | (subgroup_id * subgroup_size)))))), (_GLF_IDENTITY(subgroup_id * subgroup_size, _GLF_IDENTITY((subgroup_id * subgroup_size), ((subgroup_id * subgroup_size)) << 0u) | (subgroup_id * subgroup_size))) | (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, (_GLF_IDENTITY(subgroup_id * subgroup_size, 0u ^ (subgroup_id * subgroup_size))) << (_GLF_IDENTITY(0u, 1u * (0u)) >> _GLF_IDENTITY(uint(8u), _GLF_IDENTITY(uint(8u), (true ? uint(8u) : _GLF_FUZZED(write_val)))))), (subgroup_id * subgroup_size) | (subgroup_id * subgroup_size)))), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * _GLF_IDENTITY(subgroup_size, (subgroup_size) * uint(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(-861.637) : injectionSwitch.y))))), _GLF_IDENTITY(_GLF_IDENTITY((subgroup_id * subgroup_size), min((subgroup_id * subgroup_size), (subgroup_id * subgroup_size))) | (subgroup_id * _GLF_IDENTITY(subgroup_size, (subgroup_size) | (subgroup_size))), (0u | 0u) ^ (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) / 1u), ~ (~ (subgroup_id * subgroup_size)))) | (subgroup_id * subgroup_size), max((subgroup_id * subgroup_size) | (_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) ^ (0u & _GLF_IDENTITY(71365u, max(_GLF_IDENTITY(71365u, clamp(_GLF_IDENTITY(71365u, (71365u) >> 0u), 71365u, 71365u)), 71365u))))), _GLF_IDENTITY((subgroup_id * subgroup_size) | (subgroup_id * subgroup_size), _GLF_IDENTITY(((subgroup_id * subgroup_size) | (subgroup_id * subgroup_size)) / ((1u << _GLF_IDENTITY(uint(7u), uint(7u))) >> _GLF_IDENTITY(uint(7u), uint(7u))), _GLF_IDENTITY(uint(uvec2(((subgroup_id * subgroup_size) | (subgroup_id * subgroup_size)) / ((1u << _GLF_IDENTITY(uint(7u), uint(7u))) >> _GLF_IDENTITY(uint(7u), uint(7u))), 0u)), ~ (~ (uint(uvec2(((subgroup_id * subgroup_size) | (subgroup_id * subgroup_size)) / ((1u << _GLF_IDENTITY(uint(7u), uint(7u))) >> _GLF_IDENTITY(uint(7u), uint(7u))), 0u)))))))))))), (_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) | (subgroup_id * _GLF_IDENTITY(subgroup_size, max(subgroup_size, _GLF_IDENTITY(subgroup_size, (subgroup_size) - 0u)))))) | (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, (false ? _GLF_FUZZED(subgroup_local_id) : subgroup_id * subgroup_size)), (_GLF_IDENTITY(subgroup_id * subgroup_size, 0u ^ (subgroup_id * subgroup_size))) << (0u >> _GLF_IDENTITY(uint(8u), _GLF_IDENTITY(uint(8u), (true ? uint(8u) : _GLF_IDENTITY(_GLF_FUZZED(write_val), (_GLF_IDENTITY(_GLF_FUZZED(write_val), _GLF_IDENTITY((true ? _GLF_FUZZED(write_val) : _GLF_FUZZED(workgroup_size)), (false ? _GLF_FUZZED(subgroup_id) : (true ? _GLF_FUZZED(write_val) : _GLF_FUZZED(workgroup_size)))))) + 0u)))))), (_GLF_IDENTITY(subgroup_id * subgroup_size, min(subgroup_id * subgroup_size, subgroup_id * subgroup_size))) | (subgroup_id * subgroup_size))))))), _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) | (subgroup_id * subgroup_size)), max(_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * _GLF_IDENTITY(subgroup_size, (subgroup_size) >> 0u)) | (subgroup_id * subgroup_size)), _GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) | (_GLF_IDENTITY(subgroup_id * subgroup_size, min(subgroup_id * subgroup_size, subgroup_id * subgroup_size))))))));
 if(_GLF_WRAPPED_IF_TRUE(true))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
      }
     else
      {
       if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(_GLF_IDENTITY(false, true && (false)), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), max(_GLF_IDENTITY((injectionSwitch) * mat2(1.0), (false ? _GLF_FUZZED(injectionSwitch) : (injectionSwitch) * mat2(1.0))), (injectionSwitch) * mat2(1.0)))).y)))), ! (! (_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))), ! (! (! _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))), bool(bool((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))))))))))))))))
        {
         if(_GLF_DEAD(false))
          return;
        }
       else
        {
         return;
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(false))
          return;
        }
      }
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
      }
     else
      {
       return;
      }
    }
  }
 else
  {
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  return;
 uint virtual_gid = _GLF_IDENTITY(workgroup_base + subgroup_base + subgroup_local_id, (_GLF_IDENTITY(true ? workgroup_base + subgroup_base + subgroup_local_id : _GLF_IDENTITY(_GLF_FUZZED(write_val), ~ (~ (_GLF_FUZZED(write_val)))), _GLF_IDENTITY((true ? _GLF_IDENTITY(workgroup_base + subgroup_base, (_GLF_IDENTITY(workgroup_base + subgroup_base, (workgroup_base + subgroup_base) >> 0u)) << 0u) + subgroup_local_id : _GLF_FUZZED(write_val)), 1u * (_GLF_IDENTITY((true ? _GLF_IDENTITY(workgroup_base + subgroup_base, (_GLF_IDENTITY(workgroup_base + subgroup_base, (workgroup_base + subgroup_base) >> 0u)) << 0u) + subgroup_local_id : _GLF_FUZZED(write_val)), ((true ? _GLF_IDENTITY(workgroup_base + subgroup_base, (_GLF_IDENTITY(workgroup_base + subgroup_base, (workgroup_base + subgroup_base) >> 0u)) << 0u) + subgroup_local_id : _GLF_FUZZED(write_val))) << 0u))) | (0u ^ 0u))));
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(true && (false), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(true, ! (! (true))) && (false), ! (! (true && (false)))), true), bvec2(bvec3(bvec2(_GLF_IDENTITY(true && (false), ! (! (true && (false)))), true), false)))), _GLF_IDENTITY(bool(bvec3(bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(true && (false), ! (! _GLF_IDENTITY((true && (false)), _GLF_IDENTITY(true && ((true && (false))), bool(bvec4(true && ((true && (false))), _GLF_IDENTITY(false, true && (false)), false, false)))))), true), bvec2(bvec3(bvec2(_GLF_IDENTITY(true && (false), ! (! (true && (false)))), true), false)))), false, true)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (bool(bvec3(bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(true && (false), ! (! _GLF_IDENTITY((true && (false)), _GLF_IDENTITY(true && ((true && (false))), bool(bvec4(true && ((true && (false))), _GLF_IDENTITY(false, true && (false)), false, false)))))), true), bvec2(bvec3(bvec2(_GLF_IDENTITY(true && (false), ! (! (true && (false)))), true), false)))), false, true)))))))))
  {
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     return;
    }
   else
    {
    }
   if(_GLF_DEAD(false))
    return;
  }
 do
  {
   if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(_GLF_IDENTITY(true, (_GLF_IDENTITY(true, true && (true))) && true), (injectionSwitch.x < injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      continue;
     atomicStore(write_val, uint(virtual_gid), _GLF_IDENTITY(4, max(4, 4)), _GLF_IDENTITY(64, _GLF_IDENTITY((64), ((64)) | (_GLF_IDENTITY((64), clamp((64), (64), (64))))) << _GLF_IDENTITY(0, int(ivec4(0, 0, 1, 0)))), 0);
    }
   else
    {
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
      }
     else
      {
       for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
        {
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false)))
          continue;
        }
      }
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(_GLF_ONE(1.0, injectionSwitch.y))).x > injectionSwitch.y))))
    break;
  }
 while(_GLF_WRAPPED_LOOP(false));
 uint read_val = atomicLoad(write_val, _GLF_IDENTITY(4, (4) - 0), _GLF_IDENTITY(64, min(_GLF_IDENTITY(64, clamp(64, 64, _GLF_IDENTITY(_GLF_IDENTITY(64, min(64, _GLF_IDENTITY(64, _GLF_IDENTITY((64), clamp(_GLF_IDENTITY((64), ~ (~ ((64)))), (64), (64))) >> 0))), (64) | _GLF_IDENTITY((64), clamp((64), (64), _GLF_IDENTITY((64), ~ (~ _GLF_IDENTITY((_GLF_IDENTITY((_GLF_IDENTITY(64, (_GLF_IDENTITY(_GLF_IDENTITY(true, false || (true)) ? 64 : _GLF_FUZZED(60624), max(_GLF_IDENTITY(true, false || (true)) ? 64 : _GLF_FUZZED(60624), _GLF_IDENTITY(true, false || (true)) ? 64 : _GLF_FUZZED(60624)))))), (true ? (_GLF_IDENTITY(64, min(64, _GLF_IDENTITY(64, 0 | (_GLF_IDENTITY(64, (_GLF_IDENTITY(64, (64) | 0)) * 1)))))) : _GLF_FUZZED(2580)))), clamp((_GLF_IDENTITY((_GLF_IDENTITY(64, (_GLF_IDENTITY(_GLF_IDENTITY(true, false || (true)) ? 64 : _GLF_FUZZED(60624), max(_GLF_IDENTITY(true, false || (true)) ? 64 : _GLF_FUZZED(60624), _GLF_IDENTITY(true, false || (true)) ? 64 : _GLF_FUZZED(60624)))))), (true ? (_GLF_IDENTITY(64, min(64, _GLF_IDENTITY(64, 0 | (_GLF_IDENTITY(64, (_GLF_IDENTITY(64, (64) | 0)) * 1)))))) : _GLF_FUZZED(2580)))), (_GLF_IDENTITY((_GLF_IDENTITY(64, (_GLF_IDENTITY(_GLF_IDENTITY(true, false || (true)) ? 64 : _GLF_FUZZED(60624), max(_GLF_IDENTITY(true, false || (true)) ? 64 : _GLF_FUZZED(60624), _GLF_IDENTITY(true, false || (true)) ? 64 : _GLF_FUZZED(60624)))))), (true ? (_GLF_IDENTITY(64, min(64, _GLF_IDENTITY(64, 0 | (_GLF_IDENTITY(64, (_GLF_IDENTITY(64, (64) | 0)) * 1)))))) : _GLF_FUZZED(2580)))), (_GLF_IDENTITY((_GLF_IDENTITY(64, (_GLF_IDENTITY(_GLF_IDENTITY(true, false || (true)) ? 64 : _GLF_FUZZED(60624), max(_GLF_IDENTITY(true, false || (true)) ? 64 : _GLF_FUZZED(60624), _GLF_IDENTITY(true, false || (true)) ? 64 : _GLF_FUZZED(60624)))))), (true ? (_GLF_IDENTITY(64, min(64, _GLF_IDENTITY(64, 0 | (_GLF_IDENTITY(64, (_GLF_IDENTITY(64, (64) | 0)) * 1)))))) : _GLF_FUZZED(2580))))))))))))), _GLF_IDENTITY(64, clamp(_GLF_IDENTITY(64, (64) | 0), 64, 64)))), _GLF_IDENTITY(0, min(_GLF_IDENTITY(0, (true ? 0 : _GLF_FUZZED(37846))), 0)));
 if(_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, bool(bvec4(false, false, true, true)))))))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(true, false || _GLF_IDENTITY((_GLF_IDENTITY(true, _GLF_IDENTITY(true && (true), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (true && (true))))), bool(bvec2(_GLF_IDENTITY((_GLF_IDENTITY(true, true && (true))), _GLF_IDENTITY(false || (_GLF_IDENTITY((_GLF_IDENTITY(true, true && (true))), ! (! ((_GLF_IDENTITY(true, true && (true))))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false || (_GLF_IDENTITY((_GLF_IDENTITY(true, true && (true))), ! (! ((_GLF_IDENTITY(true, true && (true))))))), true && (false || (_GLF_IDENTITY((_GLF_IDENTITY(true, true && (true))), ! (! ((_GLF_IDENTITY(true, true && (true)))))))))), false || (! (_GLF_IDENTITY(false || (_GLF_IDENTITY((_GLF_IDENTITY(true, true && (true))), ! (! ((_GLF_IDENTITY(true, true && (true))))))), true && (false || (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(true, false || (true)), true && (true))), ! (! ((_GLF_IDENTITY(true, true && (true))))))))))))))), false)))) && (_GLF_DEAD(false))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(false), ! (! (bool(false)))), bool(bvec3(_GLF_IDENTITY(bool(false), ! (! (bool(false)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)))), true && (bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec3(false, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), ! (! (_GLF_IDENTITY(false, bool(bvec3(false, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))), (_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY((false) || false, (_GLF_IDENTITY((_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (_GLF_IDENTITY(! (false), (! (false)) && true))))))) || false, ((_GLF_IDENTITY(false, ! (! (false)))) || false) || false)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_IDENTITY((false) || false, (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (_GLF_IDENTITY(! (false), (! (false)) && true))))))) || false, ((false) || false) || false), (_GLF_IDENTITY((_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (_GLF_IDENTITY(! _GLF_IDENTITY((false), bool(bvec2(_GLF_IDENTITY((false), false || ((false))), true))), (! (false)) && true))))))) || false, (_GLF_IDENTITY((false), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((false), bool(bvec3((false), false, true)))), false || (! (_GLF_IDENTITY((false), bool(bvec3((false), false, true)))))))) || false) || false)) || false)) || _GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y))), ! (! ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y))))))))))))))) || _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))))))))))
  {
   if(_GLF_DEAD(false))
    {
     for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
      {
       return;
      }
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((_GLF_IDENTITY(false, ! (! (false)))), _GLF_FALSE(_GLF_IDENTITY(false, (false) && true), (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), true && (_GLF_IDENTITY(false, (false) && true))), ! (! (false)))), (_GLF_IDENTITY((_GLF_IDENTITY(false, ! (! (false)))), ! (! (_GLF_IDENTITY((_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), (! (! (false))) && true))), bool(bool(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), ! (! ((! (false))))))), bool(bool(_GLF_IDENTITY((_GLF_IDENTITY(false, ! (! (false)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && ((_GLF_IDENTITY(false, ! (! (false))))))))), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY((_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), ! (! ((! (false))))))), bool(bool(_GLF_IDENTITY((_GLF_IDENTITY(false, ! (! (false)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && ((_GLF_IDENTITY(false, ! (! (false))))))))), true), bvec2(bvec2(bvec2(_GLF_IDENTITY((_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), ! (! ((! (false))))))), bool(bool(_GLF_IDENTITY((_GLF_IDENTITY(false, ! (! (false)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && ((_GLF_IDENTITY(false, ! (! (false))))))))), true))))))))))))) && true)))))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
    {
     if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)).x > _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(asin(injectionSwitch)))).y, bool(bool(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false))))))))
      {
      }
     else
      {
       do
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          continue;
         if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! _GLF_IDENTITY((_GLF_IDENTITY(! (false), (! (false)) && true)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY((_GLF_IDENTITY(! (false), (! (false)) && true)), ! (! ((_GLF_IDENTITY(! (false), (! (false)) && true)))))))))))))
          continue;
         return;
        }
       while(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(false), true && (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, bool(bvec2(false, _GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-10.22), _GLF_FUZZED(9090.7311)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))).x > injectionSwitch.y), false || ((_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-10.22), _GLF_FUZZED(9090.7311)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))).x > injectionSwitch.y)))))))), ! (! (_GLF_WRAPPED_LOOP(false)))))));
       if(_GLF_DEAD(false))
        return;
      }
    }
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     do
      {
       return;
      }
     while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
    }
   else
    {
     do
      {
       if(_GLF_DEAD(false))
        return;
      }
     while(_GLF_WRAPPED_LOOP(false));
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(true, ! (! (true))), false)), (bool(bvec2(_GLF_IDENTITY(true, ! (! (true))), false))) && true))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   else
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
      }
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! (false))))))), bool(_GLF_IDENTITY(bool(! (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! (false)))))))), true && (bool(! (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! (false))))))))))))))))
  return;
 if(_GLF_DEAD(false))
  return;
 buf[virtual_gid] = _GLF_IDENTITY(uint(subgroupAllEqual(read_val)), (uint(subgroupAllEqual(read_val))) << 0u);
}
