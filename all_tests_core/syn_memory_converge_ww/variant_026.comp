#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
#extension GL_EXT_maximal_reconvergence : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer WriteVal {
 uint write_val;
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, (false) || _GLF_IDENTITY(false, (false) && true))), bool(bvec3(_GLF_DEAD(false), false, false))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY((_GLF_IDENTITY(false, _GLF_IDENTITY(false, ! (! (false))) || (false))) && true, false || ((false) && true)))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(4.1, 618.193)) : _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))).y))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, true, true)), (bool(bvec3(false, true, true))) && true))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_DEAD(false), true, true))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true), (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true)) || false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true)), bool(bvec2((injectionSwitch.x > injectionSwitch.y), true))))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), (bool(false)) || false)))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
  }
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(-61.22))) > injectionSwitch.y))), bool(bool(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0) > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0), injectionSwitch.y))))), bool(bvec4(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY((false), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY((false), bool(bvec2((false), true))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)), bool(bvec2(bool(bvec3(_GLF_IDENTITY((false), bool(bvec2((false), true))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)), false)))) || false), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), (! (injectionSwitch.x > injectionSwitch.y)) || false)))))), true, false, true)))))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat2x4(injectionSwitch, 0.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), abs(1.0), 1.0, 1.0)), clamp(vec2(mat2x4(injectionSwitch, 0.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), abs(1.0), 1.0, 1.0)), _GLF_IDENTITY(vec2(mat2x4(injectionSwitch, 0.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), abs(1.0), 1.0, 1.0)), min(vec2(mat2x4(injectionSwitch, 0.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), abs(1.0), 1.0, 1.0)), vec2(mat2x4(injectionSwitch, 0.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), abs(1.0), 1.0, 1.0)))), _GLF_IDENTITY(vec2(mat2x4(injectionSwitch, 0.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), abs(1.0), 1.0, 1.0)), (false ? _GLF_FUZZED(vec2(643.494, 7.4)) : vec2(mat2x4(injectionSwitch, 0.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), abs(1.0), 1.0, 1.0))))))).x > injectionSwitch.y), (bool(injectionSwitch.x > injectionSwitch.y)) && true)))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((false), ((false)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))
      barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(_GLF_IDENTITY(true, (_GLF_IDENTITY(true, bool(bvec2(true, true)))) || false), (_GLF_IDENTITY(_GLF_IDENTITY(true, (_GLF_IDENTITY(true, bool(bvec2(true, true)))) || false), ! (! (_GLF_IDENTITY(true, (_GLF_IDENTITY(true, bool(bvec2(true, true)))) || false))))) && true) && _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x < _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], max(_GLF_IDENTITY(injectionSwitch[0], min(injectionSwitch[0], injectionSwitch[0])), injectionSwitch[0])), injectionSwitch[1])).y)) && (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true))), _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(mat3x2(injectionSwitch.y, 0.0, 1.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0)))), true && (_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0)), ! (! _GLF_IDENTITY((_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y))))), ! (! ((_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))))))))))), (_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(mat3x2(injectionSwitch.y, 0.0, 1.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0)))), true && (_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(float(false)), _GLF_FUZZED(4.3)), bvec2(false, false))).y, (injectionSwitch.y) - 0.0)), ! (! _GLF_IDENTITY((_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y))))), ! (! ((_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y))))))))))))) || false), false, false)), true && (bool(bvec3(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(_GLF_IDENTITY(true, (true) || false) && (_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0), injectionSwitch.y))), ! (! ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(_GLF_IDENTITY(bvec2(injectionSwitch.x > injectionSwitch.y, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec2(bvec2(bvec2(injectionSwitch.x > injectionSwitch.y, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))))), bool(bvec4(true && (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y))))), _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)))))), true, _GLF_IDENTITY(true, ! (! (true))))))), false, false)))), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(mat3x2(injectionSwitch.y, _GLF_IDENTITY(0.0, (0.0) + 0.0), 1.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0)))), true && (_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0)), ! (! _GLF_IDENTITY((_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).y), ! (! ((injectionSwitch.x > injectionSwitch.y))))), ! (! ((_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), bool(bool(_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), true && (! ((injectionSwitch.x > injectionSwitch.y))))))))))))))))), false, false)), true && (bool(bvec3(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(_GLF_IDENTITY(true, (true) || false) && (_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0), injectionSwitch.y))), ! (! ((injectionSwitch.x > injectionSwitch.y))))), bool(bvec4(true && _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))), ! (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))))))), ! (_GLF_IDENTITY(! ((_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))), ! (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y))))))))), ! (! (! ((_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))), ! (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))))))))))))), _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)))))), true, _GLF_IDENTITY(true, ! (! (true))))))), false, false)))))), ! (! (bool(bool(_GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(mat3x2(injectionSwitch.y, 0.0, 1.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0)))), true && (_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0)), ! (! _GLF_IDENTITY((_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y))))), ! (! ((_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))))))))))), false, false)), true && (bool(bvec3(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(_GLF_IDENTITY(true, (true) || false) && (_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0), injectionSwitch.y))), ! (! ((injectionSwitch.x > injectionSwitch.y))))), bool(bvec4(true && (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! _GLF_IDENTITY((! ((injectionSwitch.x > injectionSwitch.y))), (_GLF_IDENTITY((! ((injectionSwitch.x > injectionSwitch.y))), bool(bvec2((! ((injectionSwitch.x > injectionSwitch.y))), false)))) && true))), _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)))))), true, _GLF_IDENTITY(true, ! (! (true))))))), false, false))))))))))))))))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))
  barrier();
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(true, (true) && true) && (_GLF_DEAD(false))), false), bvec2(bvec4(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(true, bool(bool(true))) && (_GLF_DEAD(false))), false), false, true))))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_DEAD(false), false))), true, true, true))))
      barrier();
     barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
  }
 uint num_workgroup = gl_NumWorkGroups.x;
 if(_GLF_DEAD(false))
  barrier();
 uint workgroup_size = gl_WorkGroupSize.x;
 uint workgroup_id = _GLF_IDENTITY(gl_WorkGroupID, uvec3(gl_WorkGroupID[0], gl_WorkGroupID[1], _GLF_IDENTITY(gl_WorkGroupID[_GLF_IDENTITY(2, (2) - 0)], 0u | (gl_WorkGroupID[2])))).x;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y))))))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED((true ? 777.616 : 410.426))), float(injectionSwitch.y), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))))
    barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec3(false, false, false)), bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(bool(bool(bvec3(false, false, false))), true && (_GLF_IDENTITY(bool(bool(bvec3(false, false, false))), ! (! (bool(bool(bvec3(false, false, false)))))))), ! (_GLF_IDENTITY(! (bool(bool(bvec3(false, false, false)))), bool(bvec4(! (bool(bool(bvec3(false, _GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, false || (false)))), false)))), true, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY((injectionSwitch.x), mix(float((injectionSwitch.x)), float(_GLF_FUZZED((1.6 / -7257.4059))), bool(false))) - 0.0), injectionSwitch.x)) > injectionSwitch.y)), true))))), true && (bool(bool(bvec3(false, false, false))))))), bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec3(false, false, false)), bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(bool(bvec3(false, false, false))), ! (_GLF_IDENTITY(! (bool(bool(bvec3(false, false, false)))), bool(bvec4(! (bool(bool(bvec3(false, false, false)))), true, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0), injectionSwitch.x)) > injectionSwitch.y)), true))))), true && (bool(bool(bvec3(false, false, false))))))), (_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec3(false, false, false)), bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(bool(bvec3(false, false, false))), ! (_GLF_IDENTITY(! (bool(bool(bvec3(false, false, false)))), bool(bvec4(! (bool(bool(bvec3(false, false, false)))), true, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x, _GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY((injectionSwitch.x) - 0.0, (_GLF_IDENTITY((injectionSwitch.x) - 0.0, (false ? _GLF_FUZZED(51.83) : (injectionSwitch.x) - 0.0))) / 1.0)), injectionSwitch.x)) > injectionSwitch.y)), true))))), true && (bool(bool(bvec3(false, false, false))))))), false || (_GLF_IDENTITY(bool(bvec3(false, false, false)), bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(bool(bvec3(false, false, false))), ! (_GLF_IDENTITY(! (bool(bool(bvec3(false, false, false)))), bool(bvec4(! (bool(bool(bvec3(false, false, false)))), true, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0), min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0), clamp(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0), _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0), _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0))), _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0))), injectionSwitch.x)) > injectionSwitch.y)), true))))), true && (bool(bool(bvec3(false, false, false)))))))))) && true), true, true, false)))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec3(false, false, false)), bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(bool(bvec3(false, false, false))), ! (_GLF_IDENTITY(! (bool(bool(bvec3(false, false, false)))), bool(bvec4(! (bool(bool(bvec3(false, false, false)))), true, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0), injectionSwitch.x)) > injectionSwitch.y)), true))))), true && (bool(bool(bvec3(false, false, false))))))), bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec3(false, false, false)), bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(bool(bvec3(false, false, false))), ! (_GLF_IDENTITY(! (bool(bool(bvec3(false, false, false)))), bool(bvec4(! (bool(bool(bvec3(false, false, false)))), true, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0), injectionSwitch.x)) > injectionSwitch.y)), true))))), true && (bool(bool(bvec3(false, false, false))))))), (_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec3(false, false, false)), bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(bool(bvec3(false, false, false))), ! (_GLF_IDENTITY(! (bool(bool(bvec3(false, false, false)))), bool(bvec4(! (bool(bool(bvec3(false, false, false)))), true, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0), injectionSwitch.x)) > injectionSwitch.y)), true))))), true && (bool(bool(bvec3(false, false, false))))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(bool(bvec3(false, false, false)), bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(bool(bvec3(false, false, false))), ! (_GLF_IDENTITY(! (bool(bool(bvec3(false, false, false)))), bool(bvec4(! (bool(bool(bvec3(false, false, false)))), true, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0), injectionSwitch.x)) > injectionSwitch.y)), true))))), true && (bool(bool(bvec3(false, false, false)))))))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec3(false, false, false)), bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(bool(bvec3(false, false, false))), ! (_GLF_IDENTITY(! (bool(bool(bvec3(false, false, false)))), bool(bvec4(! (bool(bool(bvec3(false, false, false)))), true, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)), _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), injectionSwitch)).x, (injectionSwitch.x) - 0.0), injectionSwitch.x)) > injectionSwitch.y)), true))))), true && (bool(bool(bvec3(false, false, false))))))), false || (_GLF_IDENTITY(bool(bvec3(false, false, false)), bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(bool(bvec3(false, false, false))), ! (_GLF_IDENTITY(! (bool(bool(bvec3(false, false, _GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, true && (false))), false || (! (_GLF_IDENTITY(false, true && (false))))))))))), bool(bvec4(! (bool(bool(bvec3(false, false, false)))), true, _GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0), injectionSwitch.x)), (true ? _GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0), injectionSwitch.x)) : _GLF_FUZZED(exp2(269.918)))) > injectionSwitch.y)), true))))), true && (bool(bool(bvec3(false, false, false)))))))))) && true), true, true, false)))), bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec3(false, false, false)), bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(bool(bvec3(false, _GLF_IDENTITY(false, true && (false)), false))), ! (_GLF_IDENTITY(! (bool(bool(bvec3(false, false, false)))), bool(bvec4(! (bool(bool(bvec3(false, false, false)))), true, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0), injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)))), true))))), true && (bool(bool(bvec3(false, false, false))))))), bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec3(false, false, false)), bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(bool(bvec3(false, false, false))), ! (_GLF_IDENTITY(! (bool(bool(bvec3(false, false, false)))), bool(bvec4(! (bool(bool(bvec3(false, false, false)))), true, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(vec2(injectionSwitch.x, 0.0)), (float(vec2(injectionSwitch.x, 0.0))) - 0.0)), injectionSwitch.x)), (injectionSwitch.x) - 0.0), injectionSwitch.x)) > injectionSwitch.y)), true))))), true && (bool(_GLF_IDENTITY(bool(bvec3(false, false, false)), ! (_GLF_IDENTITY(! (bool(bvec3(false, false, false))), true && (_GLF_IDENTITY(! (bool(bvec3(false, false, false))), bool(bvec4(! (bool(bvec3(false, false, false))), false, true, true)))))))))))), (_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec3(false, false, false)), bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(bool(bvec3(false, false, false))), ! (_GLF_IDENTITY(! (bool(bool(bvec3(false, false, false)))), bool(bvec4(! (bool(bool(bvec3(false, false, false)))), true, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0), injectionSwitch.x)) > injectionSwitch.y)), true))))), true && (bool(bool(bvec3(false, false, false))))))), false || (_GLF_IDENTITY(bool(bvec3(false, false, false)), bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(bool(bvec3(false, false, false))), ! (_GLF_IDENTITY(! (bool(bool(bvec3(false, false, false)))), bool(bvec4(! (bool(bool(bvec3(false, false, false)))), true, _GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0), injectionSwitch.x)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(1.7) : _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0), injectionSwitch.x)), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0), injectionSwitch.x)), (true ? _GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0), injectionSwitch.x)) : _GLF_FUZZED(-951.287)))) * 1.0))) > injectionSwitch.y)), true))))), true && (bool(bool(bvec3(false, false, false)))))))))) && true), true, true, false)))), (_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec3(false, false, false)), bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(bool(bvec3(false, false, false))), ! (_GLF_IDENTITY(! (bool(bool(bvec3(false, false, false)))), bool(bvec4(! (bool(bool(bvec3(false, false, false)))), true, _GLF_FALSE(_GLF_IDENTITY(false, bool(bvec2(false, false))), (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0), injectionSwitch.x)) > injectionSwitch.y)), true))))), true && (bool(bool(bvec3(false, false, false))))))), bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec3(false, false, false)), bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(bool(bvec3(false, false, false))), ! (_GLF_IDENTITY(! _GLF_IDENTITY((bool(bool(bvec3(false, false, false)))), ! (! ((bool(bool(bvec3(false, false, false))))))), bool(bvec4(! (bool(bool(bvec3(false, false, false)))), true, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0), injectionSwitch.x)) > injectionSwitch.y)), true))))), true && (bool(bool(bvec3(_GLF_IDENTITY(false, (false) && true), false, false))))))), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec3(false, false, false)), bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(bool(bvec3(false, false, false))), ! (_GLF_IDENTITY(! (bool(bool(bvec3(false, false, false)))), bool(bvec4(! (bool(bool(bvec3(false, false, false)))), true, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0), injectionSwitch.x)) > injectionSwitch.y)), true))))), true && (bool(bool(bvec3(false, false, false))))))), false || (_GLF_IDENTITY(bool(bvec3(false, false, false)), bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(bool(bvec3(false, false, false))), ! (_GLF_IDENTITY(_GLF_IDENTITY(! (bool(bool(bvec3(false, false, false)))), bool(bvec4(! (bool(bool(bvec3(false, false, false)))), true, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0), injectionSwitch.x)) > injectionSwitch.y)), true))), ! (! (_GLF_IDENTITY(! (bool(bool(bvec3(false, false, false)))), bool(bvec4(! (bool(bool(bvec3(false, false, false)))), true, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0), injectionSwitch.x)) > injectionSwitch.y)), true)))))))), true && (bool(bool(bvec3(false, false, false)))))))))), false || (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec3(false, false, false)), bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(bool(bvec3(false, false, false))), ! (_GLF_IDENTITY(! (bool(bool(bvec3(false, false, false)))), bool(bvec4(! (bool(bool(bvec3(false, false, false)))), true, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0), injectionSwitch.x)) > injectionSwitch.y)), true))))), true && (bool(bool(bvec3(false, false, false))))))), false || (_GLF_IDENTITY(bool(bvec3(false, false, false)), bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(bool(bvec3(false, false, false))), ! (_GLF_IDENTITY(_GLF_IDENTITY(! (bool(bool(bvec3(false, false, false)))), bool(bvec4(! (bool(bool(bvec3(false, false, false)))), true, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0), injectionSwitch.x)) > injectionSwitch.y)), true))), ! (! (_GLF_IDENTITY(! (bool(bool(bvec3(false, false, false)))), bool(bvec4(! (bool(bool(bvec3(false, false, false)))), true, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0), injectionSwitch.x)) > injectionSwitch.y)), true)))))))), true && (bool(bool(bvec3(false, false, false)))))))))), ((_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec3(false, false, false)), bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(bool(bvec3(false, false, false))), ! (_GLF_IDENTITY(! (bool(bool(bvec3(false, false, false)))), bool(bvec4(! (bool(bool(bvec3(false, false, false)))), true, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0), injectionSwitch.x)) > injectionSwitch.y)), true))))), true && (bool(bool(bvec3(false, false, false))))))), false || (_GLF_IDENTITY(bool(bvec3(false, false, false)), bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(bool(bvec3(false, false, false))), ! (_GLF_IDENTITY(_GLF_IDENTITY(! (bool(bool(bvec3(false, false, false)))), bool(bvec4(! (bool(bool(bvec3(false, false, false)))), true, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0), injectionSwitch.x)) > injectionSwitch.y)), true))), ! (! (_GLF_IDENTITY(! (bool(bool(bvec3(false, false, false)))), bool(bvec4(! (bool(bool(bvec3(false, false, false)))), true, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0), injectionSwitch.x)) > injectionSwitch.y)), true)))))))), true && (bool(bool(bvec3(false, false, false))))))))))) && true))) && true), true, true, false))))) && true), true)))), (! (_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec3(false, false, false)), bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(bool(bvec3(false, false, false))), ! (_GLF_IDENTITY(! (bool(bool(bvec3(false, false, false)))), bool(bvec4(! (bool(bool(bvec3(false, false, false)))), true, _GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)), _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0), injectionSwitch.x)) > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)), _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0), injectionSwitch.x)) > injectionSwitch.y) && true))), true))))), true && (bool(bool(bvec3(false, false, false))))))), bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec3(false, false, false)), bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(bool(bvec3(false, false, false))), ! (_GLF_IDENTITY(! (bool(bool(bvec3(false, false, false)))), bool(bvec4(! (bool(bool(bvec3(false, false, _GLF_IDENTITY(false, ! (! (false))))))), true, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY((injectionSwitch.x) - 0.0, float(mat4(_GLF_IDENTITY((injectionSwitch.x) - 0.0, ((injectionSwitch.x) - 0.0) / 1.0), 0.0, 0.0, 0.0, sqrt(determinant(mat3(1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0))), 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0)))), injectionSwitch.x)) > injectionSwitch.y)), true))))), true && (bool(bool(bvec3(false, false, false))))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec3(false, false, false)), bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(bool(bvec3(false, false, false))), ! (_GLF_IDENTITY(! (bool(bool(bvec3(false, false, false)))), bool(bvec4(! (bool(bool(bvec3(false, false, false)))), true, _GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0), injectionSwitch.x)) > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0), injectionSwitch.x)) > injectionSwitch.y) && true))), true))))), true && (bool(bool(bvec3(false, false, false))))))), bool(bool(_GLF_IDENTITY(bool(bvec3(false, false, false)), bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(bool(bvec3(false, false, false))), ! (_GLF_IDENTITY(! (bool(bool(bvec3(false, false, false)))), _GLF_IDENTITY(bool(bvec4(! (bool(bool(bvec3(false, false, false)))), true, _GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0), injectionSwitch.x)), mix(float(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0), injectionSwitch.x))), float(_GLF_FUZZED(12.63)), bool(false))) > injectionSwitch.y)), true)), bool(bvec4(_GLF_IDENTITY(bool(bvec4(! (bool(bool(bvec3(false, false, false)))), true, _GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0), injectionSwitch.x)), mix(float(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0), injectionSwitch.x))), float(_GLF_FUZZED(12.63)), bool(false))) > injectionSwitch.y)), true)), bool(bvec3(bool(bvec4(! (bool(bool(bvec3(false, false, false)))), true, _GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0), injectionSwitch.x)), mix(float(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0), injectionSwitch.x))), float(_GLF_FUZZED(12.63)), bool(false))) > injectionSwitch.y)), true)), false, true))), true, true, false)))))), true && (bool(bool(bvec3(false, false, false))))))))))), bool(bvec2(_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec3(false, false, false)), bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(bool(bool(bvec3(false, false, false))), ! (_GLF_IDENTITY(! (bool(bool(bvec3(false, false, false)))), bool(bvec4(! (bool(bool(bvec3(false, false, false)))), true, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0), injectionSwitch.x)) > injectionSwitch.y)), true))))), true && (bool(bool(bvec3(false, false, false))))), bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(bool(bvec3(false, false, false))), ! (_GLF_IDENTITY(! (bool(bool(bvec3(false, false, false)))), bool(bvec4(! (bool(bool(bvec3(false, false, false)))), true, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0), injectionSwitch.x)) > injectionSwitch.y)), true))))), true && (bool(bool(bvec3(false, false, false)))))))))), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(bool(bvec3(false, false, false)), bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(bool(bvec3(false, false, false))), ! (_GLF_IDENTITY(! (bool(bool(bvec3(false, false, false)))), bool(bvec4(! (bool(bool(bvec3(false, false, false)))), true, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0), injectionSwitch.x)) > injectionSwitch.y)), true))))), true && (bool(bool(bvec3(false, false, false))))))))), bool(_GLF_IDENTITY(bvec2(bool(bool(_GLF_IDENTITY(bool(bvec3(false, false, false)), bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(bool(bvec3(false, false, false))), ! (_GLF_IDENTITY(! (bool(bool(bvec3(false, false, false)))), bool(bvec4(! (bool(bool(bvec3(false, false, false)))), true, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0), injectionSwitch.x)) > injectionSwitch.y)), true))))), true && (bool(bool(bvec3(false, false, false))))))))), true), bvec2(_GLF_IDENTITY(bvec3(bvec2(bool(bool(_GLF_IDENTITY(bool(bvec3(false, false, false)), bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(bool(bvec3(false, false, false))), ! (_GLF_IDENTITY(! (bool(bool(bvec3(false, false, false)))), bool(bvec4(! (bool(bool(bvec3(false, false, false)))), true, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0), injectionSwitch.x)) > injectionSwitch.y)), true))))), true && (bool(bool(bvec3(false, false, false))))))))), true), false), bvec3(bvec3(bvec3(bvec2(bool(bool(_GLF_IDENTITY(bool(bvec3(false, false, false)), bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(bool(bvec3(false, false, false))), ! (_GLF_IDENTITY(! (bool(bool(bvec3(false, false, false)))), bool(bvec4(! (bool(bool(bvec3(false, false, false)))), true, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0), injectionSwitch.x)) > injectionSwitch.y)), true))))), true && (bool(bool(bvec3(false, false, false))))))))), true), false)))))))))), bool(bool(! (_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec3(false, false, false)), bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(bool(bvec3(false, false, false))), ! _GLF_IDENTITY((_GLF_IDENTITY(! (bool(bool(bvec3(false, false, false)))), bool(bvec4(! (bool(bool(bvec3(false, false, false)))), true, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0), injectionSwitch.x), (clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0), injectionSwitch.x)) / 1.0)) > injectionSwitch.y)), true)))), bool(bvec2((_GLF_IDENTITY(! (bool(bool(bvec3(false, false, false)))), bool(bvec4(! (bool(bool(bvec3(false, false, false)))), true, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0), injectionSwitch.x), (clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0), injectionSwitch.x)) / 1.0)) > injectionSwitch.y)), true)))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), true && (bool(bool(bvec3(false, false, false))))))), bool(bool(_GLF_IDENTITY(bool(bvec3(false, false, false)), bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(bool(bvec3(false, false, false))), ! (_GLF_IDENTITY(! (bool(bool(bvec3(false, false, false)))), bool(bvec4(! (bool(bool(bvec3(false, false, false)))), true, _GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0), injectionSwitch.x)) > injectionSwitch.y, ! (! (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0), injectionSwitch.x)) > injectionSwitch.y, ! (! (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, sin(0.0) + (_GLF_IDENTITY(injectionSwitch.x, float(mat2x4(injectionSwitch.x, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, sin(0.0)))))), clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0), injectionSwitch.x)) > injectionSwitch.y)))))))), true))))), true && (bool(bool(bvec3(false, false, false)))))))))))))), false))))), (_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec3(false, false, _GLF_IDENTITY(false, bool(bool(false))))), bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(bool(bool(bvec3(false, false, false))), bool(bvec2(bool(bool(bvec3(false, false, false))), true))), ! (_GLF_IDENTITY(! (bool(bool(bvec3(false, false, false)))), bool(bvec4(! (bool(bool(bvec3(false, false, false)))), true, _GLF_FALSE(_GLF_IDENTITY(false, true && (false)), (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0), injectionSwitch.x)) > injectionSwitch.y)), true))))), true && (bool(bool(bvec3(false, false, false))))))), false || (_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec3(false, false, false)), bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(bool(bvec3(false, false, false))), ! (_GLF_IDENTITY(! (bool(bool(bvec3(false, false, false)))), bool(bvec4(! (bool(bool(bvec3(false, false, false)))), true, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0), injectionSwitch.x)) > injectionSwitch.y)), true))))), true && (bool(bool(bvec3(false, false, false))))))), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(bool(bvec3(false, false, false)), bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(bool(bvec3(false, false, false))), ! (_GLF_IDENTITY(! (bool(bool(bvec3(false, false, false)))), bool(bvec4(! (_GLF_IDENTITY(bool(bool(bvec3(false, false, false))), bool(bvec2(_GLF_IDENTITY(bool(bool(bvec3(false, false, false))), ! (! (bool(bool(bvec3(false, false, false)))))), false)))), _GLF_IDENTITY(true, (true) && true), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0), injectionSwitch.x)) > injectionSwitch.y)), true))))), true && (bool(bool(bvec3(false, false, false))))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false || (bool(bvec2(_GLF_IDENTITY(bool(bvec3(false, false, false)), bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(bool(bvec3(false, false, false))), ! (_GLF_IDENTITY(! (bool(bool(bvec3(false, false, false)))), bool(bvec4(! (bool(bool(bvec3(false, false, false)))), true, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0), injectionSwitch.x)) > injectionSwitch.y)), true))))), true && (bool(bool(bvec3(false, false, false))))))), _GLF_FALSE(_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (injectionSwitch.x > injectionSwitch.y)))))))))) && true), true, true, false)))))) || false)))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(5.6), _GLF_FUZZED(78.01)), bvec2(false, false))).x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0) > _GLF_IDENTITY(injectionSwitch.y, cos(0.0) * (injectionSwitch.y))))))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))), false || (_GLF_IDENTITY(false, bool(bool(false)))))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint workgroup_base = workgroup_size * workgroup_id;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 uint subgroup_base = subgroup_id * subgroup_size;
 uint virtual_gid = _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + subgroup_base, 1u * (_GLF_IDENTITY(workgroup_base + subgroup_base, (workgroup_base + subgroup_base) << 0u))) + subgroup_local_id, (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (_GLF_IDENTITY(workgroup_base, max(workgroup_base, workgroup_base))) >> 0u), uint(uvec4(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (_GLF_IDENTITY(workgroup_base, max(workgroup_base, workgroup_base))) >> 0u), min(_GLF_IDENTITY(workgroup_base, (_GLF_IDENTITY(workgroup_base, max(workgroup_base, workgroup_base))) >> 0u), _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (_GLF_IDENTITY(workgroup_base, max(workgroup_base, workgroup_base))) >> 0u), (true ? _GLF_IDENTITY(workgroup_base, (_GLF_IDENTITY(workgroup_base, max(workgroup_base, workgroup_base))) >> 0u) : _GLF_FUZZED(write_val))))), 0u, 0u, 1u))) + subgroup_base + subgroup_local_id) | (_GLF_IDENTITY(workgroup_base + subgroup_base + subgroup_local_id, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (true ? _GLF_IDENTITY(workgroup_base, (workgroup_base) | (workgroup_base)) : _GLF_FUZZED(workgroup_base))) + subgroup_base + subgroup_local_id, (workgroup_base + subgroup_base + subgroup_local_id) << 0u)), uint(uvec4(~ (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (true ? _GLF_IDENTITY(workgroup_base, (workgroup_base) | (workgroup_base)) : _GLF_FUZZED(workgroup_base))) + subgroup_base + subgroup_local_id, (workgroup_base + subgroup_base + subgroup_local_id) << 0u)), 1u, uint(_GLF_ZERO(0.0, injectionSwitch.x)), 0u)))))));
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec4(injectionSwitch.x > injectionSwitch.y, false, false, false)), bool(bool(bool(bvec4(injectionSwitch.x > injectionSwitch.y, false, false, false))))), bool(bvec4(_GLF_IDENTITY(bool(bvec4(injectionSwitch.x > injectionSwitch.y, false, false, false)), bool(bool(bool(bvec4(injectionSwitch.x > injectionSwitch.y, false, false, false))))), true, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))), _GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0), injectionSwitch.y, injectionSwitch.y)), bool(bvec2(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0), injectionSwitch.y, injectionSwitch.y)), false))))) || (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x, float(mat3x4(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * 1.0), 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, length(vec4(0.0, 0.0, 0.0, 0.0)), 0.0, 1.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0)), dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0)))))) > injectionSwitch.y))))))), bool(bvec3(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0), injectionSwitch.y, injectionSwitch.y)), bool(bvec2(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0), injectionSwitch.y, injectionSwitch.y)), false))))) || (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x, float(mat3x4(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * 1.0), 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, length(vec4(0.0, 0.0, 0.0, 0.0)), 0.0, 1.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0)), dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0)))))) > injectionSwitch.y))))))), true, true)))))
  barrier();
 atomicStore(write_val, uint(virtual_gid), 4, 64, 0);
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint read_val = _GLF_IDENTITY(atomicLoad(_GLF_IDENTITY(write_val, clamp(write_val, write_val, write_val)), _GLF_IDENTITY(4, min(4, 4)), _GLF_IDENTITY(64, _GLF_IDENTITY(0, min(_GLF_IDENTITY(0, ~ (~ (0))), 0)) | (_GLF_IDENTITY(64, (_GLF_IDENTITY(64, clamp(64, _GLF_IDENTITY(64, (_GLF_IDENTITY(false ? _GLF_FUZZED(clamp(_GLF_IDENTITY(-70855, int(int(-70855))), 60653, -88583)) : 64, (false ? _GLF_FUZZED(clamp(_GLF_IDENTITY(-70855, int(int(-70855))), 60653, -88583)) : 64) | 0))), 64))) + 0))), 0), (_GLF_IDENTITY(atomicLoad(_GLF_IDENTITY(write_val, clamp(write_val, write_val, write_val)), _GLF_IDENTITY(4, min(4, 4)), _GLF_IDENTITY(64, _GLF_IDENTITY(0, min(_GLF_IDENTITY(0, ~ (~ (0))), 0)) | (_GLF_IDENTITY(64, (_GLF_IDENTITY(64, clamp(64, _GLF_IDENTITY(64, (_GLF_IDENTITY(false ? _GLF_FUZZED(clamp(_GLF_IDENTITY(-70855, int(int(-70855))), 60653, -88583)) : 64, (false ? _GLF_FUZZED(clamp(_GLF_IDENTITY(-70855, int(int(-70855))), 60653, -88583)) : 64) | 0))), 64))) + 0))), 0), (atomicLoad(_GLF_IDENTITY(write_val, clamp(write_val, write_val, write_val)), _GLF_IDENTITY(4, min(4, 4)), _GLF_IDENTITY(64, _GLF_IDENTITY(0, min(_GLF_IDENTITY(0, ~ (~ (0))), 0)) | (_GLF_IDENTITY(_GLF_IDENTITY(64, (_GLF_IDENTITY(64, clamp(64, _GLF_IDENTITY(64, (_GLF_IDENTITY(false ? _GLF_FUZZED(clamp(_GLF_IDENTITY(-70855, int(int(-70855))), 60653, -88583)) : 64, (false ? _GLF_FUZZED(clamp(_GLF_IDENTITY(-70855, int(int(-70855))), 60653, -88583)) : 64) | 0))), 64))) + 0), ~ (~ (_GLF_IDENTITY(64, (_GLF_IDENTITY(64, clamp(64, _GLF_IDENTITY(64, (_GLF_IDENTITY(false ? _GLF_FUZZED(clamp(_GLF_IDENTITY(_GLF_IDENTITY(-70855, int(int(-70855))), (_GLF_IDENTITY(-70855, int(int(-70855)))) << 0), 60653, -88583)) : 64, (false ? _GLF_FUZZED(clamp(_GLF_IDENTITY(-70855, int(int(-70855))), 60653, -88583)) : 64) | 0))), 64))) + 0)))))), 0)) / 1u)) / 1u);
 if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(45.00) : injectionSwitch.x)))) < _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, 1.0 * (injectionSwitch.y)), mix(float(_GLF_FUZZED(-65.27)), float(injectionSwitch.y), bool(true)))))))
  {
   buf[virtual_gid] = uint(subgroupAllEqual(read_val));
  }
 else
  {
  }
}
