#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


struct _GLF_struct_2 {
 ivec4 _f0;
 mat4 _f1;
 mat4x2 _f2;
 bvec4 _f3;
} ;

struct _GLF_struct_1 {
 ivec4 _f0;
 mat2x3 _f1;
 mat4x3 _f2;
 ivec4 _f3;
 float _f4;
 uint _f5;
} ;

struct _GLF_struct_3 {
 _GLF_struct_1 _f0;
 mat2x3 _f1;
 _GLF_struct_2 _f2;
 uvec3 _f3;
} ;

struct _GLF_struct_4 {
 uint num_workgroup;
 _GLF_struct_3 _f0;
} ;

struct _GLF_struct_0 {
 mat4x2 _f0;
 ivec4 _f1;
 uint read_val;
} ;

layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer WriteVal {
 uint write_val;
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 uvec2 GLF_merged2_0_1_14_1_1_14workgroup_baseworkgroup_size;
 uint subgroup_id = gl_SubgroupID;
 uint subgroup_size = gl_SubgroupSize;
 uint subgroup_local_id = gl_SubgroupInvocationID;
 _GLF_struct_4 _GLF_struct_replacement_4 = _GLF_struct_4(gl_NumWorkGroups.x, _GLF_struct_3(_GLF_struct_1(ivec4(1), mat2x3(1.0), mat4x3(1.0), ivec4(1), 1.0, _GLF_IDENTITY(1u, uint(_GLF_IDENTITY(uint(1u), (_GLF_IDENTITY(uint(1u), (uint(1u)) | 0u)) | (_GLF_IDENTITY(uint(1u), (uint(1u)) << 0u)))))), mat2x3(_GLF_IDENTITY(1.0, 1.0 * (1.0))), _GLF_struct_2(ivec4(1), mat4(1.0), mat4x2(1.0), bvec4(true)), uvec3(1u)));
 uint workgroup_size = gl_WorkGroupSize.x;
 GLF_merged2_0_1_14_1_1_14workgroup_baseworkgroup_size.y = workgroup_size;
 uint workgroup_id = gl_WorkGroupID.x;
 uint workgroup_base = GLF_merged2_0_1_14_1_1_14workgroup_baseworkgroup_size.y * workgroup_id;
 GLF_merged2_0_1_14_1_1_14workgroup_baseworkgroup_size.x = workgroup_base;
 uint virtual_gid = GLF_merged2_0_1_14_1_1_14workgroup_baseworkgroup_size.x + subgroup_id * subgroup_size + subgroup_local_id;
 atomicStore(write_val, uint(virtual_gid), 4, 64, 0);
 _GLF_struct_0 _GLF_struct_replacement_0 = _GLF_struct_0(mat4x2(1.0), ivec4(1), atomicLoad(write_val, 4, 64, 0));
 buf[virtual_gid] = uint(subgroupAllEqual(_GLF_struct_replacement_0.read_val));
}
